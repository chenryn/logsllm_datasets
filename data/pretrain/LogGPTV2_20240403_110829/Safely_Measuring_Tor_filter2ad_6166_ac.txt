circuit id, num client-bound cells, num exit-bound cells, start
time, end time, client IP; and (iv) entry connection end: channel
id. Each PrivCount DC connects to a Tor relay running our
modiﬁed software to collect this information, and processes
it as follows.
Classifying Streams. In order to better understand likely sim-
ilar behaviors of Tor users, DCs classify streams into trafﬁc
classes based on each stream’s exit port. Whenever an exit
stream end event is received, a DC will label the stream with
one of the following trafﬁc classes: HTTP/S ports 80 and 443
are labeled as Web; SSH and common IRC ports3 are labeled
as Interactive; and any remaining port is labeled as Other.
322, 194, 994, [6660, 6670], 6679, 6697, and 7000
Classifying by exit port only provides a rough approxima-
tion of behaviors: the classiﬁcation does not perfectly seg-
ment application protocols since different applications can
use the same port. However, our method reduces the privacy
risk over more accurate techniques like protocol snifﬁng via
deep packet inspection, and does not require the processing
and storage overhead of statistical learning.
Classifying Circuits. We classify circuits into those that ap-
pear to be used and those that do not. Whenever an exit cir-
cuit end event is received, a DC will label the circuit as active
if at least one stream was completed on that circuit and inac-
tive otherwise. Additionally, the circuit is labeled as carrying
Web, Interactive, and Other trafﬁc if at least one Web, Interac-
tive, and Other stream completed on the circuit, respectively.
Whenever an entry circuit end event is received, the circuit is
labeled as active if at least 8 cells have been transferred on
that circuit (6 cells for circuit setup, and at least 1 more in
each direction for circuit usage), and inactive otherwise.
Rotating IP Address Maps. PrivCount uses a mapping of
client IP address to count unique per-client statistics. Be-
cause of the sensitivity of storing client IP addresses in mem-
ory, we limit the amount of time over which we count per-
client statistics before clearing the map to 20 minutes. This
is comparable to the default circuit lifetime in Tor of 10 min-
utes, and we also note that the Tor Project takes a similar
approach for maintaining statistics such as per-country user
numbers but is currently storing client IP addresses over a
much longer and less-safe period of 24 hours.
4.2 PrivCount Deployment
We deployed PrivCount on the live Tor network with 1
tally server, 6 share keepers, and 7 data collectors monitoring
one Tor relay each. Our SKs were each run independently,
with 6 different operators on 6 different machines in 4 dif-
ferent countries. Our DCs and Tor relays were run by 2 op-
Table 1: Relays & DC machines in PrivCount deployment
Nickname
Fingerprint
NoneRunLong
PhantomTrain1
PhantomTrain2
PhantomTrain3
PhantomTrain4
PhantomTrain5
PhantomTrain6
0x9068A1E53C98
0x7EE45524BCA7
0xF789CB84E7C6
0x412BDCB24295
0x3A8A5432C008
0x3C0AD8F7DFC1
0x653632EEF25D
Host
1
2
2
3
3
3
3
Link Speed
100 Mbit/s
100 Mbit/s
1 Gbit/s
Table 2: Exploratory measurement round periods
Start Consensus (UTC)
End Consensus (UTC)
2016-05-17-14-00-00
2016-04-29-15-00-00
2016-05-15-02-00-00
2016-05-13-23-00-00
2016-05-16-05-00-00
2016-05-08-18-00-00
2016-05-18-13-00-00
2016-04-30-14-00-00
2016-05-16-01-00-00
2016-05-14-22-00-00
2016-05-17-04-00-00
2016-05-09-17-00-00
Name
Strict
Default
FS
FS+
FS++
Open
Table 3: In-depth measurement round periods
Start Consensus (UTC)
End Consensus (UTC)
2016-08-11-03-00-00
2016-07-16-18-00-00
2016-08-15-02-00-00
2016-08-06-17-00-00
Stat. Type
Entry
Exit
erators on 3 different host machines (see Table 1 for details).
We focused on providing a highly-secure SK infrastructure
to demonstrate the feasibility of running PrivCount with any
number of Tor relays, and indeed our SK setup requires 6 op-
erator or machine compromises to subvert, which provides
comparable security to Tor’s current set of 9 Directory Au-
thorities of which only 5 need to be compromised in order to
control the network consensus and thus Tor itself. We used
PGP keys as the PKI.
Collection Rounds and Statistics. We collected Tor mea-
surements in multiple rounds of different lengths. The main
constraint driving this approach is the need to add sufﬁcient
noise to obscure the impact of a user’s activity across all statis-
tics. Given the size of the relays in our deployment, collect-
ing as few as a dozen statistics requires on the order of a day
for the added noise to be less than 10% of the estimated value
of each. Thus we ran multiple exploratory rounds of 1 day
each and in-depth rounds of varying length. The two round
types are interleaved, although most exploratory rounds came
ﬁrst so that their results could inform the in-depth rounds.
Each collected statistic is either an entry statistic, that is, only
incremented when the relay is in the entry position of a Tor
circuit, or an exit statistic, that is, only incremented in the exit
position. This ensures that each statistic is only incremented
by the DC of one relay, thus limiting its sensitivity and re-
ducing the added noise.
In the exploratory rounds, we collected 13 of the single-
number type of statistics with the purpose of obtaining es-
timates of the average levels of various types of Tor activ-
ity. We present in Section 5.2 the results from running our
PrivCount deployment 6 times, where each collection phase
ran for 24 hours with a different exit policy (see Table 2 for
details). Before starting each collection phase, we adjusted
our exit relays’ exit policies and veriﬁed that the new policy
was correctly propagated to the ofﬁcial Tor consensus. Over
all exploratory collection phases, the mean probability of se-
lecting our relays in the entry position was 0.196% and the
mean probability of selecting our relays in the exit position
was 1.283%.
The statistics collected during the exploratory rounds are
single numbers. The only entry statistic is the sum of unique
client IPs observed in consecutive 10-minute time slices. The
exit statistics count active and inactive circuits, streams, and
data bytes sent or received. Each of these items is counted
overall as well as per-class (i.e. Web, Interactive, and Other).
In the in-depth rounds, we focused on statistics describing
the most signiﬁcant types of Tor activity, as determined from
the exploratory rounds. In some of the in-depth rounds we
focused on entry statistics while in others we focused on exit
statistics. When counting exit statistics, we used histograms
to get distributions of activity instead of simply averages. We
used only 3–4 bins per histogram in order to obtain sufﬁcient
relative accuracy of at least the most popular bins, given the
added noise. Multiple in-depth rounds were run to adjust
the bin ranges to obtain a more even distribution of the bin
counts.
In Section 5.3, we present 4 entry statistics (4 single num-
bers) collected throughout an in-depth measurement phase
that we ran for 4 days, and 26 exit statistics (10 single num-
bers and 16 histograms) collected throughout an in-depth
measurement phase that we ran for 21 days (see Table 3 for
details). The mean probability of choosing our relays in the
entry position was 0.130% during the entry statistics collec-
tion phase, and the mean probability of choosing our relays
in the exit position was 0.914% during the exit statistics col-
lection phase.
The entry statistics collected during the in-depth rounds
include the addition of the number of active and inactive
clients over 10-minute time slices as well as the total number
of client connections. The exit statistics collected include the
addition of a histogram tabulating circuit lifetimes as well as
histograms for circuits of the Web and Other classes measur-
ing the number of streams each circuit carries. In addition,
a histogram for inter-stream creation times is added for all
streams, Web streams, and Other streams. Histograms are
also added just for Web and Other streams that measure the
number of bytes out to the destination, the number of bytes
in to the client, and the ratio of bytes out to bytes in.
Because our exploratory measurements and analysis in-
dicated that Interactive-type trafﬁc is a minor part of Tor’s
trafﬁc distribution, we chose not to collect Interactive-related
statistics during our in-depth phases (to reduce the risk to
privacy and increase accuracy of the other measurements).
Relatedly, we chose to collect in-depth measurements using
the default exit policy because we found that it is the most
supported policy: 84.7% of exit relays accept ports 80 or 443
and block or partially block all ports that are also blocked by
the default policy.
Noise. Our PrivCount deployment uses differential-privacy
parameters of  = 0.3 and δ = 10−3. The  value is the
same used by Tor for hidden-service statistics [16]. δ can be
viewed as an upper bound on the probability of choosing a
noise value that violates -differential privacy.
We use a reconﬁguration time of 24 hours. Table 4 gives
the action bounds (see Section 2.3) that deﬁne the privacy af-
forded by our collection. Tor clients by default maintain one
entry connection, and so we provide privacy for 24 hours
worth of client observations at the entry as well as 12 total
entry connections (i.e. a new one every 2 hours). Tor clients
by default create 2 preemptive circuits and use each circuit
for 10 minutes. Therefore, we protect 24 hours of continu-
ous circuit use: 146 = 24 · 60/10 + 2. Note that we protect
Table 4: Action bounds in PrivCount deployment
Action
Simultaneous open entry connections
Time each entry connection open
New entry connections
New circuits
New Interactive circuits
New streams
Bound
1
24 hrs
12
146
20
30,000
20
144
10 MiB
New Interactive streams
New Other streams
Data sent or received
a smaller number of Interactive circuits (20), which typically
are used longer and thus created less frequently than those of
other classes. We protect 30,000 streams, which in particular
covers 100 Web pages with at most 300 requests per page, an
amount that includes 95% of Web pages measured by HTTP
Archive [5]. For Interactive and Other streams, we protect
only one stream for every circuit created within the action
bound (20 and 144, respectively). We also protect 10MiB of
trafﬁc in either direction. This covers 95% of Web pages mea-
sured by HTTP Archive, and it is ten times the trafﬁc amount
protected in Tor’s hidden-service statistics [16].
Setting the action bounds requires balancing between pri-
vacy and accuracy. To obtain reasonable accuracy, we must
choose bounds that aren’t high relative to actual activity on
Tor (and in particular on relays in our deployment). Thus,
we choose to provide stronger protection for actions that are
quite frequent (e.g. creating a Web stream) than for those
that are less frequent (e.g. creating an Interactive stream).
This might appear inconsistent, but we argue that the pri-
vacy protections are sufﬁcient in every case and are simply
even better in some cases than others.
The sensitivities of the statistics are easily determined from
these action bounds. For example, the sensitivity of the statis-
tic counting active circuits is simply 146, the action bound
for creating circuits. Note that the histograms are sensitive
to the number of inputs that can change value and not to the
change in their values. For example, the sensitivity of the his-
togram of inter-stream creation times is 60,000, because we
allow a single user to change the lifetimes and existence of
30,000 streams, and the sensitivity of a histogram is twice the
number of inputs that can change. Using per-statistic sensi-
tivities to determine the noise standard deviation is in gen-
eral a worst-case approximation that allows all statistics to si-
multaneously change by as much as their sensitivities, but for
our deployment the statistics can in fact all simultaneously
change by that much.
We set noise weights to provide differential privacy if at
least one machine running DCs is honest. The 3 machines in
our deployment run 1, 2, and 4 DCs (recall that each DC is
paired with a Tor relay). For a machine running k ∈ {1, 2, 4}
DCs, the noise weight of its DCs is 1/√k. Thus any one hon-
est machine contributes all the necessary noise, and if all are
honest then √3 times as much noise is added as is necessary.
We include the entire set of DCs as the minimal set, as in
our relatively small deployment losing the input of any relay
would signiﬁcantly affect the accuracy of our statistics.
Estimating values. For exploratory rounds, we estimated the
values of the statistics using the extra-info documents pub-
lished by Tor relays ( [3], Section 2.1.2). These documents in-
clude per-relay statistics, including in particular data about
(i) users seen at entries; (ii) circuits, including their trafﬁc
amounts; and (iii) streams at exits, including per-port num-
bers and trafﬁc amounts. The data from these three cate-
gories are incomplete because they are all turned off by de-
fault and are thus reported by a minority of relays. Moreover,
they are limited to only those statistics Tor has built in, and
their accuracy is generally poor, as each relay obfuscates its
data (e.g. rounding up to a given multiple), thus producing
noise that scales with the number of relays. We also note that
these statistics generally do not satisfy any formal privacy
notion, and their accuracy and frequency is chosen via ad hoc
privacy arguments. However, they provide enough data for
us to produce reasonable estimates for each of the statistics
in our exploratory rounds. We produce estimates from the
extra-info values by adjusting them for our relays’ weights
and the length of the exploratory round, making educated
guesses to ﬁll in a few gaps (e.g. guessing the number of Web
circuits based on the number of observed Web streams).
For the in-depth rounds, we use the results from our ex-
ploratory rounds, adjusted for the change in round length.
Most of the statistics added to the in-depth over exploratory
rounds are histograms. For these, we only need to estimate
the total number of inputs (i.e. not their values), and the ex-
ploratory rounds provide such estimates.
Research Ethics. The Tor Project issues safety guidelines4 for
researchers studying the live Tor network to help them con-
sider how their research might impact Tor users. We care-
fully consider these guidelines when designing our measure-
ments. We would highlight that we practice data minimiza-
tion by limiting the statistics we gather to just those needed
to understand the major features of client and exit trafﬁc for
purposes of modeling Tor (e.g. in Shadow [18]) and improv-
ing Tor’s performance. We also note that all of our mea-
surements are designed to preserve user privacy and are safe
to release publicly. Overall, measuring Tor while protecting
users is a primary challenge addressed by this work.
5. MEASUREMENT RESULTS
In this section, we provide details about our measurement
strategy while describing the measurement results.
5.1 Exit Policy Analysis
Each Tor relay is conﬁgured with an exit policy which spec-
iﬁes the destination ports5 to which the relay is and is not al-
lowed to connect. The exit policies of all relays are included
in Tor consensus documents and are used by Tor clients to
choose suitable exit nodes for their intended destination port.
As a result, an exit relay with a very restrictive exit policy (e.g.
one that allows only port 22) will potentially observe signif-
icantly different trafﬁc characteristics than an exit relay that
allows all ports (including ports 80 and 443).
In order to ensure that the measurements taken at our exit