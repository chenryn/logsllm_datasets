    WWW"将成为口头禅。
## 关系管理
 尽管在可靠性和隐私环境中，自动化和根本原因导致等概念可能很明显，（如前所述），隐私工程或
SRE
都不是凭空的理念，两者在大型工程和产品生态系统中都有多个其他参与者，两者都有自己的优先事项和目标。请注意，隐私工程是跨职能的，这是它与可靠性工程不同的地方，因为许多隐私工作不是由工程要求驱动的，而是由法律、策略、合规性需求和业务风险驱动的。在这里，我们专注于产品团队关系以及隐私利用
SRE 智慧的方式。
在隐私方面，关系管理的一个关键方面是关注对用户具有最大实际影响的内容，而不是那些浮华或高调的功能。隐私在潜在影响和涉及的高风险方面是独一无二的。与决定产品的完美颜色架构或菜单栏，甚至确保服务不违反商定的服务级别协议（SLA）不同，大多数与隐私相关的陷阱往往是很棘手的：通常泄露的私人数据无法撤回。
由于风险很高，因此通过向合作伙伴提供可操作的建设性反馈来培养牢固的合作关系非常重要。在给产品团队提供指导时，避免只指出其产品或流程存在缺陷的原因。相反，专注于建立共同的愿景。表达关于如何在目标范围内实现目标以及更大的共同目标的反馈。例如，通过描述正确的事情如何取悦用户，将以隐私为中心的透明度和控制目标与产品团队建立对产品信任的目标保持一致。反馈循环是双向的，就像你们的关系一样：等式双方的人可以通过明确自己的价值主张，明确承认他人的目标，并共同努力实现共同的目标，从而节省彼此的时间和精力。目标。
## 早期干预与价值观传播
 在你的同事意识到他们需要将可靠性和隐私因素纳入产品决策后，你要找到自己才能的最佳应用位置，以及如何通过教育他人来有效扩展你的专业知识。传播关于你目标的知识------不仅仅是你的目标*是什么*，而是*为什么*你有这些特定的目标。而不是简单地告诉开发人员，"你的产品需要做
x"，告诉他们*为什么*他们的产品需要做 x（"如果你的产品不做 x，后果是 y 和
z"）。更高明的表达是让他们看到其他执行了 x 的产品，其优点是 a 和 b。
在可靠性空间中，此对话可能如下所示：
> **不是那么好：**"我们需要你将服务移动到此 RPC 框架。"
>
> **更好的：**"我们需要你将服务移动到此 RPC
> 框架，因为这将使我们能够更好地监视请求。这样，我们就可以了解减速的位置，然后努力提高产品性能。"
在隐私空间中，此对话可能如下所示：
> **不是那么好：**"我们需要您的产品与新的隐私设置帐户仪表板集成。"
>
> **更好：**"我们需要您的产品与新的隐私设置帐户仪表板集成。产品 x、y 和
> z
> 已经在使用此新仪表板，因此集成将帮助用户找到他们希望找到它们的控件。我们在此的最终目标是通过提供跨产品一致的体验，将用户挫折感降至最低。"
当涉及到可靠性和隐私相关问题时，当人们理解你为什么为他们提供特定的指导时，眼前的项目*和*未来的项目都会受益。如果团队提前了解你的关注领域，下次他们可以在项目生命周期的早期主动接近你的团队，而不是在希望推动生产之前。同样，在这里，良好的沟通的关键是专注于你的共同使命，并承担良好的意图，而不是指定指责。
早期参与总是最好的，除了提供框架从设计阶段（参见[#frameworks](frameworks)）来参与产品之外，主动教育是你让合作伙伴在适当的时间。否则，人们甚至没有意识到，他们应该从事隐私工程，直到他们被迫与你交谈，这往往发生最后，当开发一个新的产品或功能（如果它发生）。未能从早期阶段就与产品接触意味着产品会转向你不希望它进入的方向。拥有广泛的人员网络，了解你所关心的内容，以及为什么还可以帮助你的合作伙伴更早地检测中断和其他潜在问题。
主动教育他人有关隐私也使你能把工作分给他人。目标不是避免你的团队应该正确处理的工作，而是参与知识共享，使你能够将时间花在只有自己才能解决的难题上。对于清晰明了的问题，在你的合作伙伴了解你关心的内容以及如何避免明显且可预测的问题后，他们就不需要针对这些简单案例来找你。产品团队既节省时间，又避免了可能根据隐私问题重新完成工作，而隐私问题可以从第一方考虑。
 例如，访问控制是每个产品团队都需要战略性地处理的主题。与其从每个产品团队的基础知识开始讨论，不如向开发人员介绍拥有结构良好的访问控制组的好处。从可靠性的角度来看，这意味着工程师在进行更改时不太可能导致中断（例如，因为某些关键工作流被访问路径封闭）。从隐私的角度来看，必须很好地了解谁有权访问你的系统，以便防止未经授权访问用户数据。同样，还应确保开发人员设计其产品，以清楚地跟踪谁在访问你的服务。如果无法区分访问服务的客户端，则不知道要与谁合作来解决问题。
若你不需要浪费时间回答基本问题，或反复提供标准设计建议，你可以就团队面临的真正重要和棘手的问题做出更好的决策。你的合作伙伴也受益匪浅，因为他们的问题周转时间更快。  
# 细微差别、差异和权衡
 尽管它们有相似之处，但可靠性工程和隐私工程有一些根本的区别。
尽管可靠性和隐私都不是严格的黑白，但当涉及到用户对可靠性的期望时，有更多的自由来定义构成"可靠性故障"的可接受阈值。隐私"故障"受许多外部因素影响，例如用户对特定事件的反应，甚至法律和法规要求。即使用户可能非常高兴，只要某个服务可以在一年内
99% 可用；但他们可能不会太满意，如果你只能保证 99%
的数据正确。可靠性问题本身也更"可修复"：如果服务已关闭，可以通过恢复和运行该服务来解决此问题，但无法"修复"受损的数据库：就好像磁盘进水之后晒干也没有太大意义。
有些设计决策可能最终为了另一个方面而在其他方面妥协；但是，以用户利益为代价创建技术可靠性不一定是有成效的。这个对于用户隐私来说更加不可容忍。有时，为了发布可用产品而发布并非"完全可靠的"产品是有意义的：规定发布或服务
100%
无风险可能意味着永远无法发布。但由于"故障"的后果，隐私没有同样程度的灵活性。中断的服务可以恢复，而不会产生持久的不良影响（客户能接受偶尔的中断），但隐私事件可能会产生永久性影响。这些长期影响应纳入业务决策。要知道，你正在服务的都是有血有肉的个体，而不是那种抽象的所谓"用户"。
# 结论
可靠性工程和隐私工程在许多方面基本相似：两个学科都在同一个基础上工作，并朝着同一个最终目标前进。两者都可以利用许多相同的最佳实践和方法。两者都对用户来说足够重要，而且很难正确，因此应该将其视为适当的工程学科，而不是事后思考。两者都应该在你的公司或组织的文化中根深蒂固。尽管它们的成熟状态可能有所不同，但
SRE
和隐私工程是活的、呼吸的、快速发展的领域：随着其核心理念在整个行业获得更广泛的采用，它们都必须随着用户期望而发展。
Google 团队经常利用本章中描述的技术来构建尊重用户隐私的世界级产品。SRE
在倡导用户隐私方面处于理想位置，即使他们不会明确在隐私保护领域中工作（尤其是你的组织无法将特定资源用于隐私工程时）。隐私工程师以有效的解决问题技能为基础，将这些技能与同理心和社会背景相结合，以应对以用户为中心的不同领域的挑战。正如任何经验丰富的
SRE 所了解的，指标只是达到目的的手段；用户体验才是最重要的。   
# 延伸阅读
-   [OECD Guidelines on the Protection of Privacy and Transborder Flows
    of Personal
    Data](http://www.oecd.org/sti/ieconomy/oecdguidelinesontheprotectionofprivacyandtransborderflowsofpersonaldata.htm)
-   [Google\'s Privacy Policy](https://policies.google.com/privacy) and
    [Privacy Technology and
    Principles](https://policies.google.com/technologies)
# 编者介绍
Betsy Beyer
是谷歌在纽约市的技术撰稿人，专门从事网站可靠性工程。除了编辑*站点可靠性工程*（O\'Reilly，2016
年）外，她还曾为 Google 的 Mountain View
数据中心和硬件运营团队以及全球分布的数据中心撰写文档。在搬到纽约之前，Betsy
是斯坦福大学的技术写作讲师。
Amber Yust 在 2014 年加入 Google 的隐私工作，之前曾在 Google SRE
工作。作为一名员工隐私工程师，她现在领导着一个团队，致力于在基本层面上将可靠的隐私设计到
Google 的产品中。