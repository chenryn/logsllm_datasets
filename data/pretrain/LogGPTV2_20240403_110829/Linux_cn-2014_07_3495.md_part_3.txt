得益于上个世界对语言的研究，人类发现不需要使用机器码（010101010001）编程，可以使用类似于自然语言的人造语言编写程序，然后经由计算机翻译成机器语言。根据不同的人爱好不同，语言经常被分为强类型、弱类型，解释型、编译型，对象导向的、过程导向的、函数导向的等等。这些语言相互影响，相互学习，每几年会有一个新的标准（比如C++99和C++11差异就非常大）。
我们建议你多学几种（这个就跟恋爱一样，只有初恋比较青涩，之后越来越顺，一马平川，虽然女孩子分为很多类型），一方面，在不同的场景你需要不同的女孩子，啊，不，计算机语言（比如操作系统用C写，网页交互用JavaScript）。另一方面，特定的计算机语言本身限定了你的表达方式，多了解它们的区别有利于打开思路。
很多编程的教材都类似于五步画马法，我们更希望提供适合自学的，没有各种各样的坑，不需要丰富的想象力脑补就可以学会的书单。
[![五部画马法](https://github.com/yupengfei/Essay/raw/Post_v1/pic/5step.jpg)](https://github.com/yupengfei/Essay/blob/Post_v1/pic/5step.jpg)
### 从上到下依次看，C
C语言经历了漫长的演化，现在的它已经不是以前的样子了，但是它仍然适合做你的第一或者第二任女友，啊，不对，计算机语言。所有C语言已经42岁了所以已经不是女神了的思想都是异端邪说。
我们推荐的书：
* [《Head first C》](http://book.douban.com/subject/6919383/)，这本书讲了很多C语言的细节以及编译、运行的细节，很多同主题的书不曾提及。另外，它讲的C比较新。
* [《The C Programming Language》](http://book.douban.com/subject/1236999/)，这本书堪称C圣经，只可惜有部分过时了
* [《C专家编程》](http://book.douban.com/subject/2377310/)，大量整理了C的缺陷和易于混淆的地方，它诞生的比较早，也有点过时了。
* [《数据结构与算法分析 C语言描述》](http://book.douban.com/subject/4924153/)，有了语法，我们需要数据结构和算法才能写出好的程序。
### 从上到下依次看，Python
Python简单易用，非常适合带来你的初吻，啊，不，跟计算机的第一次接触，但是有两个非常不一样的标准，python 2和python 3，鉴于本文写于2014年中旬，我们推荐python 3。
我们推荐的书：
* [《a byte of python3》](http://www.swaroopch.com/notes/python/)，它是一本很简单的入门书
* [官方入门书](https://docs.python.org/3/tutorial/index.html)，有些写的比上一本更清晰
* [《learning python》](http://book.douban.com/subject/3988517/)，非常厚，讲了两个版本的python的方方面面。
我们不推荐的书：
* [《Head first python》](http://book.douban.com/subject/5310233/)，感觉写的有些松散，跨度太大，不太适合新手。
### 从上到下依次看，算法
在有了基本的语法之后，我们仍然需要一种方式把基本的语法组织在一起解决实际问题，这时候你就需要算法了。
我们推荐的书：
* [《编程之美》](http://book.douban.com/subject/3004255/)，标题过于夸张，实际上主要讲了一些很有意思的算法
* [《数学之美》](http://book.douban.com/subject/10750155/)，没有标题的那么夸张，但是不妨花一个下午看一下。
* [《算法导论》](http://book.douban.com/subject/1885170/)，非常厚，但是很值得花时间看完，虽然很多计算语言自带一套标准库实现了很多算法，但是对算法的掌握依然很重要。
我们不推荐的书：
### 从上到下依次看，设计模式
世界上本没有这种程序的写法，写多了也便有了这么多种设计模式。
* [《 Head First Design Patterns》](http://book.douban.com/subject/1400656/)，head first系列最好的几本书之一，讲的很清楚，代码使用Java。
* [《大话设计模式》](http://book.douban.com/subject/2334288/)，大话系列最好的几本书之一，编程语言使用C#，相对于上一本行文略显不通畅，但是所有的设计模式都讲全了。
* [《设计模式》](http://book.douban.com/subject/1052241/)，代码使用C++和SmallTalk编写，微言大义，非常适合买一本放在书架上。
### 从上到下依次看，C++
本段假设你已经会基本的C语法（但是C和C++是两种不同的语言），C++的程序员很贵，因为它非常复杂，在看完以下书单之前，我们不推荐你在简历上写“精通C++”。
我们推荐的书：
* [官方手册](http://www.cplusplus.com/doc/tutorial/)，它是目前能找到的最合适的入门书
* [《C++ primer》](http://book.douban.com/subject/25708312/)，这本书讲了C++的基础知识，非常厚，但是条理比较清楚。
* [《Effective C++》](http://book.douban.com/subject/5387403/)，讲解了C++的一些用法和注意事项，部分因为C++11的标准库而过时。
* [《More effective C++》](http://book.douban.com/subject/5908727/)，讲了一些更高端的用法，部分因为C++11而过时。
* [《深度探索C++对象模型》](http://book.douban.com/subject/10427315/)，对C++的继承、多态等实现机制进行了讲解，非常有启发性。
### 从上到下依次看，Java
Java是一门用途广泛的语言,当然本次我们只针对java语言来说，没有针对web跟安卓来讲。
我们推荐的书：
* [《Head first Java》](http://book.douban.com/subject/4496038/)，Java入门书，讲解的Java5，但是内容没有过时（Java有比较好的向前兼容性，也为此付出了代价），是head first系列最好的书之一。
* [《Think in Java》](http://book.douban.com/subject/2130190/)，对Java基础部门进行了详细的讲解，针对Java5但是没有过时。
* [《深入理解Java虚拟机 JVM高级特性与最佳实践》](http://book.douban.com/subject/24722612/)，对Java运行的环境（Java虚拟机进行了详细的讲解），精通Java必备。
我们不推荐的书：
### 从上到下依次看，Golang
Golang是google推出的服务器编程语言，对多线程支持非常好。
我们推荐的书（其实写的都不是特别好，只是目前可以找到的书非常少）：
* [《Go语言程序设计》](http://book.douban.com/subject/24869910/)，较为细致的讲了Golang的基本语法。
* [《Go web编程》](http://book.douban.com/subject/24316255/)，前半部分是基本语法，后半部分是web开发，部分关于标准库的内容过时了。
我们不推荐的书：
### 从上到下依次看，JavaScript
JavaScript是Html5钦定的脚本语言，在后端也有广泛的用途。
我们推荐的书：
* [《JavaScript语言精粹》](http://book.douban.com/subject/3590768/)，它介绍了作者认为比较好用的JavaScript功能的一个子集合，表述方式可能并不易懂，但是讲的很不错。
* [《JavaScript权威指南》](http://book.douban.com/subject/2228378/)，全面的Javascript语法书，很多地方讲的并不清楚，比如面向对象的部分。
我们不推荐的书：
### 从上到下依次看，git
git是一个强大的分布式版本管理工具，功能强大。
我们推荐的书：
* [《pro git》](http://git.oschina.net/progit/)，对git的命令做了简单的介绍。
* [《Git版本控制管理》](http://book.douban.com/subject/5311565/)，对git的内部机制，高阶用法进行了详尽的讲解。
### 从上到下依次看，操作系统
每天都有很多新手发问，我想深入学习一下Linux，需要看哪一方面的书，有人会推荐一本厚厚的命令手册，我更喜欢推荐操作系统的书。
我们推荐的书：
* [《现代操作系统》](http://book.douban.com/subject/3667744/)，作者很牛气，该书不难但是相当的厚。而且看完之后会让人感觉脑洞大开
### 从上到下依次看，网络
我们推荐的书：
* [《计算机网络》](http://book.douban.com/subject/1179807/)
### 从上到下依次看，数据库
受作者的领域所限，推荐的数据库类型非常少，欢迎补充。
我们推荐的书：
* [《Mysql必知必会》](http://book.douban.com/subject/3354490/)，很有意思的速查手册，虽然不是特别全面。
* [《数据库系统概念》](http://book.douban.com/subject/1929984/)，对数据库系统讲的非常详细。
* [《MySQL技术内幕 InnoDB存储引擎》](http://book.douban.com/subject/5373022/)，对该引擎讲的非常细致，包括存储方式、行级锁等概念都很清晰。
* [《MongoDB权威指南》](http://book.douban.com/subject/6068947/)，为数不多的MongoDB的入门书。
### 从上到下依次看，硬件及汇编
我们推荐的书：
* [《深入理解计算机系统》](http://book.douban.com/subject/5333562/)，以程序员的视角讲解的计算机系统的方方面面。
* [《计算机组成与设计 硬件/软件接口》](http://book.douban.com/subject/10441748/)，MIPS构架。
### 从上到下依次看，编译原理
编译原理虽然日常工作用不到，但是看完了可以知道计算机语言怎么变成机器语言的。
我们推荐的书：
* [《编译原理》](http://book.douban.com/subject/3296317/)
### 从上到下依次看，项目管理
我们推荐的书：
* [《人月神话》](http://book.douban.com/subject/4908230/)
* [《代码大全》](http://book.douban.com/subject/1477390/)
### 不属于以上类别的书
* [《黑客与画家》](http://book.douban.com/subject/6021440/)