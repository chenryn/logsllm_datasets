k
andweakerguaranteeson outputtingnon-heavyhitters.
5.2.0.1 Hierarchical Heavy Hitters A generalization of this problem is finding Hierarchical
HeavyHitters[7],whichassumesthattheitemsareleavesinahierarchyofdepthh.Herethegoal
13
istofind allnodesinthehierarchywhichareheavyhitters,afterdiscountingthecontributionofany
descendent heavy hitter nodes. Using our CM sketch, the cost of the solution given in [7] for the
turnstile model can be improved from O(h log 1) space and time per update to O(h log 1) space
"2  " 
andO(hlog 1)timeper update.
6 ComparisonofSketch Techniques
Wegiveacommonframeworktosummarizeknownsketchconstructions,andcomparethetimeand
space requirements for each of the fundamental queries—point,range and inner products—using
them.
Here is a brief summary of known sketch constructions. The first sketch construction was that of
Alon,MatiasandSzegedy[2],whosetug-of-warsketchesarecomputedusing4-wiserandomhash
functions g mapping items to f+1;1g. The jth entry of the sketch, which is a vector of length
j
O( 1 log 1),isdefined tobe a g (i),whichiseasytomaintainunderupdates.Thisstructurewas
"2  i j
appliedtofinding innerproductsin [1,20]where,inournotation,itwasshownthatitispossibleto
P
computeinnerproductswithadditiveerror"jjajj jjbjj .In[20],theauthorsusethesesketchesto
2 2
computelargewaveletcoefficients. Inparticular,theyshowhowthestructureallowspointqueries
tobecomputeduptoadditiveerrorof"jjajj .TheyalsocomputerangesumsQ(l;r):hererange-
2
summable random variables are used to compute the sums efficiently, but this incurs a factor of
O(logn) additional time and space to compute these. Also note that here the error guarantees are
muchworseforlargeranges:"(rl+1)jjajj .
1
For point queries only, then pairwise independence suffices for tug-of-war sketches, as observed
by [5]. These authors additionally used a second hash set of hash functions, h , to spread out the
j
effect of high frequency items in their Count Sketch. For point queries, this gives the same space
bounds, but an improved time bound to O(log 1) for updating the sketch3. Random subset sums
were introduced in [21] in order to compute point queries and range sums.Here, 2-universal hash
functions4 h mapitemstof0;1g,andthejthentryofthesketchismaintainedas n a h (i).
j i=1 i j
The asymptotic space and time bounds for different techniques in terms of their dependence on
P
epsilonaresummarizedin Figure2.
All of the above sketching techniques, and the one which we propose in this paper, can all be de-
scribedinacommonway.Firstly,theycanallbeviewedaslinearprojectionsofthevectorawith
appropriatelychosenrandomvectors,butmorethanthis,thecomputationoftheselinearprojections
isverysimilarbetweenallmethods.Define asketchtobeatwodimensionalarrayofdimensionw
by d. Let h :::h be pairwise independent hash functions mapping from f1:::ng to f1:::wg,
1 d
3 We observe that the same idea, of replacing the averaging of O( 1 ) copies of an estimator with a 2-
"2
universal hash function distributing to O( 1 ) buckets can also reduce the update time for “tug-of-war”
"2
sketchesandsimilarconstructionstoO(log 1).
4 In[21]theauthorsusea3-wiseindependenthashfunctionontof0;1g,chosenbecauseitiseasytocom-
pute,butpairwisesuffices.
14
Method Query Space Update Query Randomness
Time Time Needed
Tug-of-war[1] Inner-product 1="2 1="2 1="2 4-wise
Tug-of-war[20] Point log(n)="2 log(n)="2 log(n)="2 4-wise
Range log(n)="2 log(n)="2 log(n)="2 4-wise
Randomsubset-sums[21] Range log2(n)="2 log2(n)="2 log2(n)="2 Pairwise
Countsketches[5] Point 1="2 1 1 Pairwise
Count-Minsketches Point 1=" 1 1 Pairwise
(thispaper) Inner-product 1=" 1 1=" Pairwise
Range log(n)=" log(n) log(n)=" Pairwise
Fig.2.Comparisonofdifferentspaceandtimerequirementsofsketchingmethods:thedependencyon"and
nisshown,afactorofO(log 1)appliestoeachentryandisomitted.
andletg :::g beanotherhashfunctionwhoserangeandrandomnessvariesfromconstructionto
1 d
construction.The(j;k)th entryofthe sketchis defined tobe
a g (i)
i k
i:hXk(i)=j
Thecontentsofthesketchforeachoftheabovetechniquesisspecified bytheparametersw,d,and
g; methods of answering queries using the sketch vary from technique to technique. The update
time for each sketch is O(d)computations of g and h, and the space requirementis dominated by
the O(wd)counters,providedthat thehash functionscan bestoredefficiently.
 Tugofwarsketcheshavew = 1;d = O( 1 log(1)),g(i)isf+1;1gwith4-wiseindependence.
"2 
 Countsketcheshavew = O( 1 );d = O(log(1)),g(i)is f+1;1gwith2-wiseindependence.
"2 
 RandomSubsetsumshavew = 2;d = 24 log(1),g(i)is1.
"2 
 Count-Minsketcheshavew = e;d = ln(1),g(i) = 1.
" 
Webrieflymentionsomeotherwell-knownsketchconstructions,andexplainwhytheyarenotap-
propriate for the queries we study here. [14] gave a sketch construction for computing the L dif-
1
ferencebetweenvectors.It extendsthe tug-of-warconstruction,thetechnicalcontributionbeinga
demonstrationofhowtocomputerangesumsof4-wiserandomvariablesefficiently.Indyk[23]pi-
oneeredtheuseofstabledistributionsinsketchcomputations,againinordertocomputeL norms
p
ofvectorspresentedasasequenceofupdates.However,allthesenormcomputationsdonotdirectly
answerthethreequerytypesweconsiderhere. Lastly,wenotethatourCount-Minsketchesappear
similar in outline to both the uniscan algorithm due to Fang et al [13] and the parallel multistage
filters ofEstanandVarghese[11].Ourconstructiondiffersforthefollowingreasons:(1)thesestruc-
tures are not sketches:they do not approximateanyvalue,but instead returnonlya binary answer
aboutwhetheranitemhasexceededacertainnumericthreshold;(2)thealgorithmsusedrequireup-
15
dates to be only positive; and (3) the analysis does not consider any limited independence needed
forthehashfunctions,incontrasttoCMsketches,whichrequireonlypairwiseindependence.The
methods in [13,11] as such seems to use fully independent hash functions which is prohibitive in
principle.
7 Conclusions
WehaveintroducedtheCount-Minsketch,andshownhowtoestimatefundamentalqueriessuchas
point,rangeorinnerproductqueriesaswellassolvemoresophisticatedproblemssuchasquantiles
and heavy hitters. The space and/or time bounds of our solutions improve previously best known
bounds for these problems. Typically the improvement is from 1="2 factor to 1=" which is signif-
icant in real applications. Our CM sketch is quite simple, and is likely to find many applications,
includingin hardwaresolutionsfortheseproblems.
Wehaverecentlyappliedtheseideastotheproblemofchangedetectionondatastreams[9],andwe
also believe that it can be applied to improve the time andspace bounds for constructingapproxi-
matewaveletandhistogramrepresentationsofdatastreams[19].Also,theCMSketchcanalsobe
naturallyextendedto solveproblemson streamsthatdescribemultidimensionalarraysratherthan
the unidimensionalarrayproblemswehavediscussedso far.
OurCMsketchisnoteffectivewhenonewantstocomputethenormsofdatastreaminputs.These
haveapplicationstocomputingcorrelations betweendatastreamsandtrackingthe number ofdis-
tinct elements in streams, both of which are of great interest. It is an open problem to design ex-
tremelysimple,practicalsketchessuchasourCMSketchforestimatingsuchcorrelationsandmore
complexdatastreamapplications.
References
[1] N.Alon,P.Gibbons,Y.Matias,andM.Szegedy. Trackingjoinandself-joinsizesinlimitedstorage. In
ProceedingsoftheEighteenthACMSymposiumonPrinciplesofDatabaseSystems(PODS’99),pages
10–20,1999.
[2] N.Alon,Y.Matias,andM.Szegedy.Thespacecomplexityofapproximatingthefrequencymoments.In
ProceedingsoftheTwenty-EighthAnnualACMSymposiumontheTheoryofComputing,pages20–29,
1996. JournalversioninJournalofComputerandSystemSciences, 58:137–147,1999.
[3] B.Babcock,S.Babu,M.Datar,R.Motwani,andJ.Widom. Modelsandissuesindatastreamsystems.
InProceedingsofSymposiumonPrinciplesofDatabaseSystems(PODS),pages1–16,2002.
[4] Z.Bar-Yossef,T.S.Jayram,R.Kumar, D.Sivakumar, andL.Trevisian. Countingdistinctelementsin
adatastream. InProceedingsofRANDOM2002,pages1–10,2002.
16
[5] M. Charikar, K. Chen,and M. Farach-Colton. Finding frequent items in data streams. In Procedings
oftheInternationalColloquiumonAutomata,LanguagesandProgramming(ICALP),pages693–703,
2002.
[6] G. Cormode, M. Datar, P. Indyk, and S. Muthukrishnan. Comparing data streams using Hamming
norms. In Proceedings of 28th International Conference on Very Large Data Bases, pages 335–345,
2002.JournalversioninIEEETransactionsonKnowledgeandDataEngineering15(3):529–541,2003.
[7] G.Cormode,F.Korn,S.Muthukrishnan,andD.Srivastava. Findinghierarchicalheavyhittersindata
streams. InInternationalConferenceonVeryLargeDatabases, pages464–475,2003.
[8] G. Cormode and S. Muthukrishnan. What’s hot and what’s not: Tracking most frequent items
dynamically. InProceedingsofACMPrinciplesofDatabaseSystems,pages296–306,2003.
[9] G. Cormode and S. Muthukrishnan. What’s new: Finding significant differences in network data
streams. InProceedingsofIEEEInfocom,2004.
[10]A. Dobra, M. Garofalakis, J. E. Gehrke, and R. Rastogi. Processing complex aggregate queries over
data streams. In Proceedings of the 2002 ACM Sigmod International Conference on Management of
Data,pages61–72,2002.
[11] C. Estan and G. Varghese. New directionsin traffic measurement and accounting. In Proceedings of
ACMSIGCOMM,volume32,4ofComputerCommunicationReview,pages323–338,2002.
[12]C. Estan and G. Varghese. Data streaming in
computer networks. In Proceedings of Workshop on Management and Processing of Data Streams,
http://www.research.att.com/conf/mpds2003/schedule/estanV.ps,2003.
[13]M.Fang,N.Shivakumar,H.Garcia-Molina,R.Motwani,andJ.D.Ullman. Computingicebergqueries
efficiently. In Proceedings of the Twenty-fourth International Conference on Very Large Databases,
pages299–310,1998.
[14]J.Feigenbaum,S.Kannan,M.Strauss,andM.Viswanathan. AnapproximateL -differencealgorithm
1
formassivedatastreams. InProceedingsofthe40thAnnualSymposiumonFoundationsofComputer
Science, pages501–511,1999.
[15]P. Flajolet and G. N. Martin. Probabilistic counting. In 24th Annual Symposium on Foundations of
ComputerScience, pages76–82, 1983. Journalversionin Journal of ComputerandSystemSciences,
31:182–209,1985.
[16]M.Garofalakis,J.Gehrke,andR.Rastogi. Queryingandminingdatastreams:Youonlygetonelook.
InProceedingsoftheACMSIGMODInternationalConferenceonManagementofData,2002.
[17]P. Gibbons and Y. Matias. Synopsis structures for massive data sets. DIMACS Series in Discrete
MathematicsandTheoreticalComputerScience, A,1999.
[18]P.GibbonsandS.Tirthapura. Estimatingsimplefunctionsontheunionofdatastreams. InProceedings
ofthe13thACMSymposiumonParallelAlgorithmsandArchitectures, pages281–290,2001.
[19]A.Gilbert,S.Guha,P.Indyk,Y.Kotidis,S.Muthukrishnan,andM.Strauss.Fast,small-spacealgorithms
for approximate histogram maintenance. In Proceedings of the 34th ACM Symposium on Theory of
Computing, pages389–398,2002.
17
[20]A. Gilbert, Y. Kotidis, S. Muthukrishnan, and M. Strauss. Surfing wavelets on streams: One-pass
summariesforapproximateaggregatequeries.InProceedingsof27thInternationalConferenceonVery
LargeDataBases,pages79–88,2001. JournalversioninIEEETransactionsonKnowledgeandData
Engineering, 15(3):541–554,2003.
[21]A.C.Gilbert,Y.Kotidis,S.Muthukrishnan,andM.Strauss. Howtosummarizetheuniverse:Dynamic
maintenanceofquantiles. InProceedingsof28thInternationalConferenceonVeryLargeDataBases,
pages454–465,2002.
[22]M. Greenwald and S. Khanna. Space-efficient online computation of quantile summaries. SIGMOD
Record(ACMSpecialInterestGrouponManagementofData),30(2):58–66,2001.
[23]P.Indyk. Stabledistributions,pseudorandomgenerators,embeddingsanddatastreamcomputation. In
Proceedingsofthe40thSymposiumonFoundationsofComputerScience, pages189–197,2000.
[24]W.B.JohnsonandJ.Lindenstrauss. ExtensionsofLipshitzmappingintoHilbertspace. Contemporary
Mathematics, 26:189–206,1984.
[25]G. S. Manku, S. Rajagopalan, and B. G. Lindsay. Approximate medians and other quantiles in one
pass and with limited memory. In Proceedings of the ACM SIGMOD International Conference on
ManagementofData,pages426–435,1998.
[26]G.S.MankuandR.Motwani. Approximatefrequencycountsoverdatastreams. InProceedingsof28th
InternationalConferenceonVeryLargeDataBases,pages346–357,2002.
[27]R.MotwaniandP.Raghavan. RandomizedAlgorithms. CambridgeUniversityPress,1995.
[28]S.Muthukrishnan. Datastreams:Algorithmsandapplications. InACM-SIAMSymposiumonDiscrete
Algorithms, http://athos.rutgers.edu/muthu/stream-1-1.ps,2003.
[29]N.Thaper, P.Indyk,S.Guha,andN.Koudas. Dynamicmultidimensionalhistograms. InProceedings
oftheACMSIGMODInternationalConferenceonManagementofData,pages359–366,2002.
[30]D. Woodruff. Optimalspacelowerboundsforallfrequencymoments. In ACM-SIAMSymposiumon
DiscreteAlgorithms,2004.
18