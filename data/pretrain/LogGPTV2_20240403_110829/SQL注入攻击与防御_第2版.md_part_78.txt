### 从SQL注入攻击中恢复

#### 1. 识别并回滚恶意事务
只有在识别出与攻击有效载荷关联的事务后，才能执行回滚。例如，Lilupophilupop端虫是一种投送静态有效载荷的端虫，它通过搜索数据库表中的适当列来插入恶意代码。以下查询示例展示了如何在Microsoft SQL Server事务日志中查找此类活动：

```sql
SELECT 
    proname AS "OBJECT_NAME", 
    '' AS "OBJECT_SCHEMA", 
    'PROCEDURE' AS "OBJECT_TYPE" 
FROM P9_Proc 
UNION ALL 
SELECT 
    tgname, 
    '', 
    'TRIGGER' 
FROM pg_trigger 
UNION ALL 
SELECT 
    tablename, 
    schemaname, 
    'TABLE' 
FROM Pg_tables 
UNION ALL 
SELECT 
    usename, 
    '', 
    'USER' 
FROM pg_user;
```

在此查询中，基于十六进制的事务日志值被转换为字符格式，并与端虫载荷片段进行比较。结果将显示端虫执行的事务及其载荷写入数据库的具体位置。这些信息可用于标识需要恢复的事务。可以通过手动编写undo脚本或使用如ApexSQL（适用于Microsoft SQL Server及其他数据库）和Oracle Logminer等工具自动生成undo脚本。

**图10-8：包含Lilupophilupop端虫所执行的Microsoft SQL Server事务的查询结果示例**

**图10-9：使用Oracle Logminer浏览事务的屏幕截图**

#### 2. 恢复数据库服务器配置
如果攻击涉及频繁针对RDBMS特性的静态有效载荷，或者攻击者已修改了服务器的安全配置，则需将数据库服务器恢复到已知的良好状态。无论是从备份中恢复还是手工回滚事务，在此期间对服务器配置所做的任何更改都应被识别并恢复。建议对服务器配置进行审计，确保其符合预期设置。

#### 3. 识别并修复SQL注入漏洞
进行全面的应用程序安全评估，以识别可能存在的漏洞和其他潜在问题。

#### 4. 恢复Web服务
一旦上述步骤完成，可以重新上线系统并恢复Web服务。

### 从携带动态有效载荷的攻击中恢复

动态有效载荷的攻击更加复杂且难以恢复，因为攻击者的行为会随每次攻击而变化。若攻击是通过HTTP POST请求发起的，许多Web服务器并未配置为记录此类活动。此外，攻击者可能会脱离数据库环境进入操作系统，建立带外连接继续攻击。对于这种情况，强烈建议聘请数据库取证专家进行调查。

**恢复步骤包括：**

1. **恢复数据库状态**：建议将RDBMS和操作系统恢复到受攻击前的状态。
2. **识别脱离数据库的活动**：检查是否存在允许攻击者访问底层操作系统的文件系统或注册表的操作。
3. **检验数据库服务器配置**：确保现有设置未被篡改。
4. **识别并修复SQL注入漏洞**：进行全面的安全评估。
5. **在线恢复系统并恢复Web服务**。

### 小结
有效的防御措施包括安全编码、Web应用程序防火墙和漏洞评估程序。然而，随着攻击手段不断进化，组织机构仍需面对SQL注入攻击的调查取证问题。本章提供的调查取证、遏制攻击及恢复实践有助于增强整体防御策略，从而更好地应对SQL注入威胁。

### 快速解决方案
- **调查可疑的SQL注入攻击**：由授权人员执行。
- **合理的调查取证实践要求**：确保bit-for-bit复制完整性，记录所有操作，维护监管链。
- **分析数字化痕迹**：利用Web服务器日志、数据库执行计划等数据。
- **识别SQL注入攻击活动**：分析异常Web请求，检查数据库日志。
- **确认SQL注入攻击是否成功**：检测未经授权的事务或对象创建/修改。
- **遏制安全事件**：断开受损数据库与Web服务器的网络连接。
- **评估涉及的数据**：确保遵守相关法律和监管要求。
- **通知正确的人员**：高级管理人员和法律顾问负责损害通报。
- **确定攻击者在系统上执行的操作**：通过数据库取证确定具体行为。
- **确定攻击的有效载荷**：备份受损数据库，提取并分析恶意查询。