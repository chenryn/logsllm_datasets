    ::: itemizedlist
    -   将 `ipaadmin_principal`{.literal} 变量设置为
        [**idm_user**]{.strong}。
    -   将 `ipaadmin_password`{.literal} 变量设置为
        [**idm_user**]{.strong} 密码。
    -   将 `user`{.literal} 变量设置为 [**idm_user**]{.strong}。
    -   将 `name`{.literal} 变量设置为 [**my_vault**]{.strong}。
    -   将 `变量设置为`{.literal} 包含敏感信息的文件的完整路径。
    -   将 `action`{.literal} 变量设置为 [**member**]{.strong}。
        对于当前示例，此修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Tests
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      - ipavault:
          ipaadmin_principal: idm_user
          ipaadmin_password: idm_user_password
          user: idm_user
          name: my_vault
          in: /usr/share/doc/ansible-freeipa/playbooks/vault/password.txt
          action: member
    ```
6.  保存该文件。
7.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory.file data-archive-in-standard-vault-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-idm-user-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#retrieving-a-secret-from-a-standard-user-vault-in-idm-using-ansible_using-ansible-to-manage-idm-user-vaults-storing-and-retrieving-secrets}使用 Ansible 从 IdM 中的标准用户库检索 secret {.title}
:::
本节介绍身份管理(IdM)用户如何使用 Ansible playbook
从用户个人密码库检索机密。[**在以下步骤中使用的示例中，idm_user**]{.strong}
用户从名为 [**my_vault**]{.strong}
的标准类型库检索包含敏感数据的文件，并检索名为 [**host01**]{.strong} 的
IdM 客户端。[**idm_user**]{.strong}
在访问该文件时不必进行身份验证。[**idm_user**]{.strong} 可以使用 Ansible
从安装 Ansible 的任何 IdM 客户端检索 文件。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 [**idm_user**]{.strong} 的密码。
-   [**idm_user**]{.strong} 是 [**my_vault**]{.strong} 的所有者。
-   [**idm_user**]{.strong} 已将机密存储在 [**my_vault**]{.strong} 中。
-   Ansible 可以写入要检索该机密的 IdM 主机上的 目录。
-   [**idm_user**]{.strong} 可以从要检索机密的 IdM 主机上的 目录读取。
:::
::: orderedlist
**流程**
1.  导航到 `/usr/share/doc/ansible-freeipa/playbooks/vault`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/vault
    ```
2.  打开清单文件，并在一个明确定义的部分中提到您要检索该机密的 IdM
    客户端。例如，要指示 Ansible 在
    [**host01.idm.example.com**]{.strong} 上检索 secret，请输入：
    ``` literallayout
    [ipahost]
    host01.idm.example.com
    ```
3.  生成 [**retrive-data-symmetric-vault.yml**]{.strong} Ansible
    playbook 文件的副本。将\"对称\"替换为\"标准\"。例如：
    ``` literallayout
    $ cp retrive-data-symmetric-vault.yml retrieve-data-standard-vault.yml-copy.yml
    ```
4.  打开 [**retrieve-data-standard-vault.yml-copy.yml**]{.strong}
    文件进行编辑。
5.  通过将 `hosts`{.literal} 变量设置为 [**ipahost**]{.strong} 来调整
    文件。
6.  通过在 `ipavault`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_principal`{.literal} 变量设置为
        [**idm_user**]{.strong}。
    -   将 `ipaadmin_password`{.literal} 变量设置为
        [**idm_user**]{.strong} 密码。
    -   将 `user`{.literal} 变量设置为 [**idm_user**]{.strong}。
    -   将 `name`{.literal} 变量设置为 [**my_vault**]{.strong}。
    -   将 `变量设置为`{.literal} 您要将机密导出到的文件的完整路径。
    -   将 `state`{.literal} 变量设置为 [**retrieve**]{.strong}。
        对于当前示例，此修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Tests
      hosts: ipahost
      become: true
      gather_facts: false
      tasks:
      - ipavault:
          ipaadmin_principal: idm_user
          ipaadmin_password: idm_user_password
          user: idm_user
          name: my_vault
          out: /tmp/password_exported.txt
          state: retrieved
    ```
7.  保存该文件。
8.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory.file retrieve-data-standard-vault.yml-copy.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 [**user [**01 身份通过 `SSH`{.literal} 连接到 host**]{.strong}
    01**]{.strong}:
    ``` literallayout
    $ ssh PI:EMAIL
    ```
2.  查看 Ansible playbook 文件中 `out`{.literal} 变量指定的文件：
    ``` literallayout
    $ vim /tmp/password_exported.txt
    ```
:::
现在，您可以看到导出的 secret。
::: itemizedlist
-   有关使用 Ansible 管理 IdM vaults 和用户 secret 以及 playbook
    变量的更多信息，请参阅
    `/usr/share/doc/ansible-freeipa/ 目录中提供的 README-`{.literal}
    vault.md Markdown 文件和
    `/usr/share/doc/ansible-freeipa/playbooks/vault/`{.literal}
    目录中的示例 playbook。
:::
:::
:::
[]{#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html}
::: chapter
::: titlepage
# []{#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm}第 22 章 使用 Ansible 管理 IdM 服务库：存储和检索 secret {.title}
:::
本节介绍管理员可以如何使用 `ansible-freeipa`{.literal} `vault`{.literal}
模块安全地将服务机密存储在集中式位置。
[示例中使用的密码库](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#vaults-in-idm_configuring-and-managing-idm){.link}
是非对称的，这意味着为了使用它，管理员需要执行以下步骤：
::: orderedlist
1.  使用 `openssl`{.literal} 实用程序生成私钥。
2.  根据私钥生成公钥。
:::
当管理员将服务 secret
归档到密码库时，会用公钥对其进行加密。之后，托管在域中特定计算机上的服务实例使用私钥检索该机密。只有
服务和管理员可以访问该机密。
如果该机密泄露，管理员可以替换服务库中，然后将它重新分发到尚未遭入侵的个别服务实例。
::: itemizedlist
**先决条件**
-   密钥恢复授权中心(KRA)证书系统组件已安装在您的 IdM
    域中的一个或多个服务器上。[详情请参阅在 IdM
    中安装密钥恢复授权](#vaults-in-idm_using-ansible-to-install-and-manage-idm.html#installing-the-key-recovery-authority-component-in-idm_vaults-in-idm "在 IdM 中安装密钥恢复授权"){.link}。
:::
本节包括以下步骤：
::: itemizedlist
-   [使用 Ansible 在 IdM
    中存在非对称服务库](#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-an-asymmetric-service-vault-in-idm-using-ansible_using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets "使用 Ansible 在 IdM 中存在非对称服务库"){.link}
-   [使用 Ansible 将 IdM 服务 secret
    存储在非对称库中](#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#storing-an-idm-service-secret-in-an-asymmetric-vault-using-ansible_using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets "使用 Ansible 将 IdM 服务 secret 存储在非对称库中"){.link}
-   [使用 Ansible 为 IdM 服务检索服务
    secret](#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#retrieving-a-service-secret-for-an-idm-service-using-ansible_using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets "使用 Ansible 为 IdM 服务检索服务 secret"){.link}
-   [在使用 Ansible 泄露时更改 IdM 服务 vault
    secret](#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#changing-an-idm-service-vault-secret-when-compromised-using-ansible_using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets "在使用 Ansible 泄露时更改 IdM 服务 vault secret"){.link}
:::
在流程中：
::: itemizedlist
-   [**admin**]{.strong} 是管理服务密码的管理员。
:::
::: itemizedlist
-   [**private-key-to-an-externally-certificate.pem**]{.strong}
    是包含服务 secret
    的文件，本例中为外部签名证书的私钥。请勿将此私钥与用于从密码库检索机密的私钥混淆。
-   [**secret_vault**]{.strong} 是为存储服务 secret 而创建的库。
-   [**HTTP/webserver1.idm.example.com**]{.strong}
    是密码库的所有者服务。
-   [**HTTP/webserver2.idm.example.com**]{.strong} 和
    [**HTTP/webserver3.idm.example.com**]{.strong} 是 vault 成员服务。
-   [**service-public.pem**]{.strong} 是用于加密 [**password_vault
    中存储的密码的服务公钥**]{.strong}。
-   [**service-private.pem**]{.strong} 是用于解密
    [**secret_vault**]{.strong} 中存储的密码的服务私钥。
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-an-asymmetric-service-vault-in-idm-using-ansible_using-ansible-to-manage-idm-service-vaults-storing-and-retrieving-secrets}使用 Ansible 在 IdM 中存在非对称服务库 {.title}
:::
本节介绍身份管理(IdM)管理员如何使用 Ansible playbook
创建包含一个或多个私有密码库容器的服务库容器，从而安全地存储敏感信息。在以下流程中使用的示例中，管理员创建名为
[**secret_vault**]{.strong} 的非对称库。这样可确保 vault
成员必须使用私钥进行身份验证，才能检索密码库中的机密。vault
成员能够从任何 IdM 客户端检索 文件。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 [**IdM 管理员密码**]{.strong}。
:::
::: orderedlist
**流程**
1.  导航到 `/usr/share/doc/ansible-freeipa/playbooks/vault`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/vault
    ```
2.  获取服务实例的公钥。例如，使用 `openssl`{.literal} 工具：
    ::: orderedlist
    1.  生成 `service-private.pem`{.literal} 私钥。
        ``` literallayout
        $ openssl genrsa -out service-private.pem 2048
        Generating RSA private key, 2048 bit long modulus
        .+++
        ...........................................+++
        e is 65537 (0x10001)
        ```
    2.  根据私钥生成 `service-public.pem`{.literal} 公钥。
        ``` literallayout
        $ openssl rsa -in service-private.pem -out service-public.pem -pubout
        writing RSA key
        ```
    :::
3.  可选：创建一个清单文件（如果 [**inventory.file**]{.strong}
    ）不存在。
    ``` literallayout
    $ touch inventory.file
    ```
4.  打开清单文件，并在 `[ipaserver]`{.literal} 部分中定义您要配置的 IdM
    服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
5.  生成 [**ensure-asymmetric-vault-is-present.yml**]{.strong} Ansible
    playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-asymmetric-vault-is-present.yml ensure-asymmetric-service-vault-is-present-copy.yml
    ```
6.  打开 [**ensure-asymmetric-vault-is-present-copy.yml**]{.strong}
    文件进行编辑。
7.  添加一个任务，该任务将 [**service-public.pem**]{.strong} 公钥从
    Ansible 控制器复制到 [**server.idm.example.com**]{.strong} 服务器。
8.  通过在 `ipavault`{.literal}
    任务部分设置以下变量来修改文件的其余部分：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   使用 `name`{.literal} 变量定义 vault 的名称，如
        [**secret_vault**]{.strong}。
    -   将 `vault_type`{.literal} 变量设置为非 [**对称**]{.strong}。
    -   将 `service`{.literal} 变量设置为拥有密码库的服务主体，如
        [**HTTP/webserver1.idm.example.com**]{.strong}。
    -   将 `public_key_file`{.literal} 设置为您的公钥的位置。
        这是当前示例修改的 Ansible playbook 文件：