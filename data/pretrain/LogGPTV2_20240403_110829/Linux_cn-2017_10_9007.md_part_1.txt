---
author: Alex Ellis
category: 树莓派
comments_data: []
count:
  commentnum: 0
  favtimes: 3
  likes: 0
  sharetimes: 0
  viewnum: 35930
date: '2017-10-28 22:32:00'
editorchoice: false
excerpt: 这篇博文将向你展示如何使用 Docker 和 OpenFaaS 框架构建你自己的 Serverless 树莓派集群。大家常常问我能用他们的集群来做些什么？而这个应用完美匹配卡片尺寸的设备——只需添加更多的树莓派就能获取更强的计算能力。
fromurl: https://blog.alexellis.io/your-serverless-raspberry-pi-cluster/
id: 9007
islctt: true
largepic: /data/attachment/album/201710/28/223210p2s4am8lj55amy5j.jpg
permalink: /article-9007-1.html
pic: /data/attachment/album/201710/28/223210p2s4am8lj55amy5j.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 这篇博文将向你展示如何使用 Docker 和 OpenFaaS 框架构建你自己的 Serverless 树莓派集群。大家常常问我能用他们的集群来做些什么？而这个应用完美匹配卡片尺寸的设备——只需添加更多的树莓派就能获取更强的计算能力。
tags:
- 树莓派
- OpenFaaS
- Docker
thumb: false
title: 使用 Docker 构建你的 Serverless 树莓派集群
titlepic: true
translator: haoqixu
updated: '2017-10-28 22:32:00'
---
![](/data/attachment/album/201710/28/223210p2s4am8lj55amy5j.jpg)
这篇博文将向你展示如何使用 Docker 和 [OpenFaaS](https://github.com/alexellis/faas) 框架构建你自己的 Serverless 树莓派集群。大家常常问我能用他们的集群来做些什么？而这个应用完美匹配卡片尺寸的设备——只需添加更多的树莓派就能获取更强的计算能力。
> 
> “Serverless” （无服务器）是事件驱动架构的一种设计模式，与“桥接模式”、“外观模式”、“工厂模式”和“云”这些名词一样，都是一种抽象概念。
> 
> 
> 
![](/data/attachment/album/201710/28/223221o3uuquzstbt9iyz1.jpg)
*图片：3 个 Raspberry Pi Zero*
这是我在本文中描述的集群，用黄铜支架分隔每个设备。
### Serverless 是什么？它为何重要？
行业对于 “serverless” 这个术语的含义有几种解释。在这篇博文中，我们就把它理解为一种事件驱动的架构模式，它能让你用自己喜欢的任何语言编写轻量可复用的功能。[更多关于 Serverless 的资料](https://blog.alexellis.io/introducing-functions-as-a-service/)。
![](/data/attachment/album/201710/28/223221iq6h44fbthejhs4a.png)
*Serverless 架构也引出了“功能即服务服务”模式，简称 FaaS*
Serverless 的“功能”可以做任何事，但通常用于处理给定的输入——例如来自 GitHub、Twitter、PayPal、Slack、Jenkins CI pipeline 的事件；或者以树莓派为例，处理像红外运动传感器、激光绊网、温度计等真实世界的传感器的输入。
Serverless 功能能够更好地结合第三方的后端服务，使系统整体的能力大于各部分之和。
了解更多背景信息，可以阅读我最近一偏博文：[功能即服务（FaaS）简介](https://blog.alexellis.io/introducing-functions-as-a-service/)。
### 概述
我们将使用 [OpenFaaS](https://github.com/alexellis/faas)，它能够让主机或者集群作为支撑 Serverless 功能运行的后端。任何能够使用 Docker 部署的可执行二进制文件、脚本或者编程语言都能在 [OpenFaaS](https://github.com/alexellis/faas) 上运作，你可以根据速度和伸缩性选择部署的规模。另一个优点是，它还内建了用户界面和监控系统。
这是我们要执行的步骤：
* 在一个或多个主机上配置 Docker （树莓派 2 或者 3）；
* 利用 Docker Swarm 将它们连接；
* 部署 [OpenFaaS](https://github.com/alexellis/faas)；
* 使用 Python 编写我们的第一个功能。
### Docker Swarm
Docker 是一项打包和部署应用的技术，支持集群上运行，有着安全的默认设置，而且在搭建集群时只需要一条命令。OpenFaaS 使用 Docker 和 Swarm 在你的可用树莓派上传递你的 Serverless 功能。
我推荐你在这个项目中使用带树莓派 2 或者 3，以太网交换机和[强大的 USB 多端口电源适配器](https://www.amazon.co.uk/Anker-PowerPort-Family-Sized-Technology-Smartphones/dp/B00PK1IIJY)。
### 准备 Raspbian
把 [Raspbian Jessie Lite](http://downloads.raspberrypi.org/raspbian/images/raspbian-2017-07-05/) 写入 SD 卡（8GB 容量就正常工作了，但还是推荐使用 16GB 的 SD 卡）。
*注意：不要下载成 Raspbian Stretch 了*
> 
> 社区在努力让 Docker 支持 Raspbian Stretch，但是还未能做到完美运行。请从[树莓派基金会网站](http://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2017-07-05/)下载 Jessie Lite 镜像。
> 
> 
> 
我推荐使用 [Etcher.io](https://etcher.io/) 烧写镜像。
> 
> 在引导树莓派之前，你需要在引导分区创建名为 `ssh` 的空白文件。这样才能允许远程登录。
> 
> 
> 
#### 接通电源，然后修改主机名
现在启动树莓派的电源并且使用 `ssh` 连接：
```
$ ssh PI:EMAIL
```
> 
> 默认密码是 `raspberry`
> 
> 
> 
使用 `raspi-config` 工具把主机名改为 `swarm-1` 或者类似的名字，然后重启。
当你到了这一步，你还可以把划分给 GPU （显卡）的内存设置为 16MB。
#### 现在安装 Docker
我们可以使用通用脚本来安装：
```
$ curl -sSL https://get.docker.com | sh
```
> 
> 这个安装方式在将来可能会发生变化。如上文所说，你的系统需要是 Jessie，这样才能得到一个确定的配置。
> 
> 
> 
你可能会看到类似下面的警告，不过你可以安全地忽略它并且成功安装上 Docker CE 17.05：
```
WARNING: raspbian is no longer updated @ https://get.docker.com/  
Installing the legacy docker-engine package...  
```
之后，用下面这个命令确保你的用户帐号可以访问 Docker 客户端：
```
$ usermod pi -aG docker
```
> 
> 如果你的用户名不是 `pi`，那就把它替换成你的用户名。
> 
> 
> 
#### 修改默认密码
输入 `$sudo passwd pi`，然后设置一个新密码，请不要跳过这一步！
#### 重复以上步骤
现在为其它的树莓派重复上述步骤。
### 创建你的 Swarm 集群
登录你的第一个树莓派，然后输入下面的命令：
```
$ docker swarm init
Swarm initialized: current node (3ra7i5ldijsffjnmubmsfh767) is now a manager.
To add a worker to this swarm, run the following command:
    docker swarm join \
    --token SWMTKN-1-496mv9itb7584pzcddzj4zvzzfltgud8k75rvujopw15n3ehzu-af445b08359golnzhncbdj9o3 \
    192.168.0.79:2377
```
你会看到它显示了一个口令，以及其它节点加入集群的命令。接下来使用 `ssh` 登录每个树莓派，运行这个加入集群的命令。
等待连接完成后，在第一个树莓派上查看集群的节点：
```
$ docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS  
3ra7i5ldijsffjnmubmsfh767 *   swarm1              Ready               Active              Leader  
k9mom28s2kqxocfq1fo6ywu63     swarm3              Ready               Active  
y2p089bs174vmrlx30gc77h4o     swarm4              Ready               Active  
```
恭喜你！你现在拥有一个树莓派集群了！
#### 更多关于集群的内容
你可以看到三个节点启动运行。这时只有一个节点是集群管理者。如果我们的管理节点*死机*了，集群就进入了不可修复的状态。我们可以通过添加冗余的管理节点解决这个问题。而且它们依然会运行工作负载，除非你明确设置了让你的服务只运作在工作节点上。
要把一个工作节点升级为管理节点，只需要在其中一个管理节点上运行 `docker node promote ` 命令。
> 
> 注意： Swarm 命令，例如 `docker service ls` 或者 `docker node ls` 只能在管理节点上运行。
> 
> 
> 
想深入了解管理节点与工作节点如何保持一致性，可以查阅 [Docker Swarm 管理指南](https://docs.docker.com/engine/swarm/admin_guide/)。
### OpenFaaS
现在我们继续部署程序，让我们的集群能够运行 Serverless 功能。[OpenFaaS](https://github.com/alexellis/faas) 是一个利用 Docker 在任何硬件或者云上让任何进程或者容器成为一个 Serverless 功能的框架。因为 Docker 和 Golang 的可移植性，它也能很好地运行在树莓派上。
![](/data/attachment/album/201710/28/223229u8118z3xcxcx8zx1.png)