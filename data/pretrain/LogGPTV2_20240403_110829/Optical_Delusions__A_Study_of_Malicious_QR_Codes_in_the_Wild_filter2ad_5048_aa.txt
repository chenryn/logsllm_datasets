# Optical Delusions: A Study of Malicious QR Codes in the Wild

**Authors:** Amin Kharraz, Engin Kirda, William K. Robertson, Davide Balzarotti, Aurélien Francillon

**Conference:** 2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks

## Abstract
QR codes, a form of 2D barcode, facilitate interaction between mobile devices and websites or printed material by eliminating the need to manually type URLs or contact information. As QR codes gain popularity, they are also becoming a tool for malware authors and cybercriminals. Unlike suspicious-looking links, malicious and benign QR codes cannot be distinguished visually. Despite public discussions about the increasing use of QR codes for malicious purposes, the prevalence and nature of these threats remain unclear.

In this paper, we investigate attacks on the Internet that utilize QR codes. Using a web crawler, we conducted a large-scale experiment by analyzing QR codes across 14 million unique web pages over a ten-month period. Our results show that QR code technology is already being used by attackers to distribute malware and lead users to phishing sites. However, the relatively low number of malicious QR codes found in our experiments suggests that, on a global scale, the frequency of these attacks is not alarmingly high, and users are rarely exposed to such threats while surfing the web.

**Index Terms:** Mobile devices, malicious QR codes, malware, phishing

## I. Introduction
Smartphones have emerged as one of the most rapidly advancing technologies in recent years, gaining significant attention due to their powerful computing resources and sensor capabilities. However, their increasing demand and all-in-one functionalities make them attractive targets for malware authors. Spyware, worms, rootkits, bots, and trojans are on the rise in mobile platforms, becoming more sophisticated as professional criminals adopt new exploitation and propagation techniques. For example, in 2012, the Toll Fraud malware family caused substantial financial damage by subscribing users to premium SMS services. Malware writers continuously refine their attack strategies to expand their range of malicious actions while evading security defenses.

Quick Response (QR) codes are an evolution of traditional one-dimensional barcodes, commonly used with mobile devices. While 1D barcodes encode data with bars of different widths, 2D barcodes, such as QR codes, encode data as a matrix of dots. The QR Code ISO/IEC standard [1] is the most widely used on smartphones. QR codes include three square markers at the corners, called finder patterns (FIP), which are easily identified by image recognition software. These patterns are designed for easy scanning and decoding using simple image processing algorithms. The main advantage of QR codes over regular barcodes is their increased information density (Figure 1).

In Q4 2011, 20.1 million users in the United States scanned QR codes with their smartphones [2]. This popularity has attracted both business owners and individuals with malicious intentions. While QR codes are convenient, they are also opaque, making it possible to hide the final destination of a link.

In September 2011, a news report detailed malware spreading through QR codes on a Russian website [3]. The corresponding QR code directed victims to download a version of the Jimm-mobile ICQ client infected with the TrojanSMS.AndroidOS.Jfake.f malware, which sends SMS messages to premium rate numbers [4]. The potential use of QR codes for malicious activities, such as directing to exploit sites or phishing sites, or downloading malicious content, has been discussed in various security blogs and forums [3]–[6]. Several proof-of-concept QR code attacks have also been posted on public security blogs and social media [7]–[9]. However, the prevalence of these attacks remains unclear.

In this paper, we conduct a large-scale study of threats posed by QR codes in the wild. We design a web crawler that retrieves images, detects QR codes, and checks their destinations to identify malicious QR codes. We first assess the current prevalence of QR codes and then analyze the extracted QR codes to gain insights into their global usage on the web. Malicious QR codes are identified by extracting URLs and comparing them to malicious domain blacklists. Our crawling experiments were conducted over a ten-month period starting in December 2012, using Google searches and the 1,500 most popular websites published by Alexa [10].

## II. QR Code Attacks
The growing popularity of QR codes as a mobile media element makes them attractive targets for malware authors. However, QR code-based attacks are relatively new [3], [12]. We define a QR code-based attack as an attempt to lure victims into scanning a QR code that directs them to malicious websites. The key idea is that victims might trust the web page or printed material displaying the QR code and assume it is harmless. Typically, a user scanning a malicious QR code is directed to an exploit or phishing site. In the following sections, we discuss realistic attack scenarios in more detail.

### A. QR Codes Leading to Phishing Sites
Phishing attacks are well-known for their simplicity and effectiveness. They rely on both technical deception and social engineering. Attackers must persuade users to perform actions that provide access to confidential information. Many users judge a website's legitimacy by its look and feel, which can be easily replicated [13]. Therefore, a phishing attack often starts by impersonating a popular website to abuse user trust.

QR codes increase vulnerability to phishing attacks for several reasons:
1. **URL Omission:** Since QR codes eliminate the need to manually enter URLs, users may not pay attention to the addresses they are directed to. Onarlioglu et al. [14] showed that users can distinguish benign URLs from misspelled ones in normal situations. However, when directed via a QR code, this ability diminishes. Mobile operating systems often hide URLs after loading a page, which can deceive users redirected to a phishing site.
2. **Limited Screen Size:** Mobile browsers cannot display long URLs, so phishers can construct URLs that start with a legitimate name but point to a different domain. The QR code ensures the user never sees the complete URL.
3. **URL Shortening Services:** Combining QR codes with URL shortening services can further obscure malicious URLs, tricking unsophisticated users [15].

### B. Malicious Software Distribution
Attackers frequently use malicious websites to distribute malware and perform drive-by download attacks [16]. In a recent attack targeting Android smartphones [17], malicious links were posted on social networks to redirect victims to a page designed to infect devices with the Android OfFake malware. This malware connected to a Command-and-Control (C&C) server, allowing the attacker to execute commands and exfiltrate personal information.

Although there have been no reports of QR codes used in drive-by download attacks, their adoption in conjunction with such attacks is a growing concern [5]. Attackers could deceive victims into scanning a malicious QR code leading to a compromised website hosting an exploit kit. These kits often use hidden HTML iframes or obfuscated JavaScript to redirect victims to servers hosting the exploit kit. The process typically involves fingerprinting the victim’s device and serving a relevant exploit based on the information retrieved.

## III. Methodology
Our goal is to analyze the prevalence of malicious QR codes on the web. To achieve this, we developed a tool that:
1. Crawls the web and extracts image files.
2. Searches for QR codes in the extracted images and extracts any URLs.
3. Identifies malicious URLs obtained from the QR codes.

### A. System Architecture
#### 1. Image Crawler Engine
The crawler engine uses the scrapy framework [18] to extract URLs from each visited web page and add them to the crawler queue. Our crawler complies with the Robots Exclusion protocol [19] by processing robot.txt files. Disallowed URLs are removed from the queue; otherwise, they are passed to the image crawler. The image crawler parses each page and extracts images using XPath (e.g., //img/@src). Metadata, including the download path, referring URL, and image checksum, is stored for each image. Extracted images are saved in a MongoDB database along with their metadata.

#### 2. QR Code Extractor
We use an open-source QR code decoder [20] with a Python interface to a Java QR decoding library. This implementation was chosen for its speed and scalability. The QR code extractor retrieves images from the database and searches for the three finder patterns. If the patterns are not found, the image is assumed not to be a QR code. Metadata, including the source URL and any extracted target URL, is added to the image collection.

#### 3. URL Matcher
URL matching is the final phase in detecting malicious QR codes. It compares the URLs extracted from QR codes to a list of malicious websites compiled from publicly available resources. We deployed a crawler to collect domain feeds from major URL blacklists (PhishTank [21], Malware Domains [22], the Malware Domain List [23], malc0de [24], Malware Block List [25], and vxvault.siri-urz [26]). Our system collects approximately 1,600 entries per day, generating a list of about 640,000 unique malicious URLs. URLs from QR codes are compared to this list to identify malicious QR codes and the types of malicious actions they are intended for.

#### 4. Web Crawling
Selecting appropriate seeds is crucial for an efficient and high-coverage crawler. We chose a combination of sites from various categories, including free downloads, online games, adult, music, online news, and personal/business websites. We used the results of English language Google searches and the top 1,500 most popular websites published by Alexa [10] as initial seeds.

## IV. Experiments and Findings
We performed an empirical analysis across 14 million web pages to determine the extent to which QR codes are leveraged by attackers. Our results show that QR codes are already being used to distribute malware and direct users to phishing sites. Based on our analysis, 0.16% of the QR codes analyzed were designed to facilitate one or more types of malicious activities, such as directing users to phishing sites or distributing malware. This confirms the existence of such attacks [11]. However, we observed that, on a global scale, QR codes are not extensively used by attackers on the Internet, contradicting recent discussions in security blogs [3]–[6]. Our findings indicate that the probability of exposure to threats introduced by QR codes is currently small.

## V. Defenses Against QR Code-Based Attacks
To mitigate the risks associated with QR code-based attacks, several defensive measures can be implemented:
1. **User Education:** Educate users about the risks of scanning QR codes and the importance of verifying the source and destination of the codes.
2. **URL Preview:** Implement features in QR code readers that preview the URL before opening it, allowing users to verify the destination.
3. **Blacklist Integration:** Integrate QR code readers with real-time blacklist services to warn users about known malicious URLs.
4. **Secure Scanning Environments:** Develop secure environments for scanning QR codes, such as sandboxed applications, to prevent malicious actions.

## VI. Related Work
Previous research has explored various aspects of QR code security, including the potential for misuse and the development of detection mechanisms. Studies have highlighted the need for better user awareness and improved security features in QR code readers. Our work builds on these efforts by providing a large-scale measurement of QR code attacks in the wild.

## VII. Conclusion
This paper presents a comprehensive study of the threats posed by malicious QR codes on the web. We designed an automated system to detect and analyze QR codes, providing insights into the security and privacy issues associated with their use. Our large-scale experiments revealed that while QR codes are being used for malicious purposes, the overall prevalence of such attacks is currently low. Future work should focus on developing more robust defenses and raising user awareness to mitigate the risks of QR code-based attacks.

**References:**
1. ISO/IEC 18004:2006 - Information technology — Automatic identification and data capture techniques — QR Code 2005 bar code symbology specification.
2. comScore. (2011). U.S. Smartphone Subscriber Market Share.
3. Symantec. (2011). Malware Spreads Through QR Codes on Russian Website.
4. Kaspersky Lab. (2011). Trojan-SMS.AndroidOS.Jfake.f.
5. SecurityWeek. (2012). QR Code Malware on the Rise.
6. ZDNet. (2012). QR Code Scams: What You Need to Know.
7. Krebs on Security. (2012). Proof-of-Concept QR Code Attack.
8. Naked Security. (2012). QR Code Phishing Scam.
9. TechCrunch. (2012). QR Code Malware: A Growing Threat.
10. Alexa. (2012). Top 500 Global Sites.
11. SANS Institute. (2012). Folk Wisdom on QR Code Attacks.
12. McAfee. (2012). New QR Code Threats.
13. Anti-Phishing Working Group. (2012). Phishing Activity Trends Report.
14. Onarlioglu, K., et al. (2012). User Behavior and Phishing.
15. Sophos. (2012). URL Shortening and Malware.
16. Symantec. (2012). Drive-By Download Attacks.
17. Lookout. (2012). Android OfFake Malware.
18. scrapy.org. (2012). Scrapy Framework.
19. robots.txt. (2012). Robots Exclusion Protocol.
20. zxing. (2012). ZXing Open-Source Barcode Library.
21. PhishTank. (2012). Phishing Database.
22. Malware Domains. (2012). Malware Domain List.
23. Malware Domain List. (2012). Malware Domain List.
24. malc0de. (2012). Malware Database.
25. Malware Block List. (2012). Malware Block List.
26. vxvault.siri-urz. (2012). Malware Collection.