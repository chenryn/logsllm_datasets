title:Optical Delusions: A Study of Malicious QR Codes in the Wild
author:Amin Kharraz and
Engin Kirda and
William K. Robertson and
Davide Balzarotti and
Aur&apos;elien Francillon
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
2014 44th Annual IEEE/IFIP International Conference on Dependable Systems and Networks
Optical Delusions: A Study of Malicious QR Codes
in the Wild
Amin Kharraz(cid:3), Engin Kirda(cid:3), William Robertson(cid:3), Davide Balzarottiy, Aurélien Francillony
(cid:3)Northeastern University, Boston, USA
{mkharraz,ek,wkr}@ccs.neu.edu
y Institut Eurecom, Sophia Antipolis, France
{davide.balzarotti,aurelien.francillon}@eurocom.fr
Abstract—QR codes, a form of 2D barcode, allow easy inter-
action between mobile devices and websites or printed material
by removing the burden of manually typing a URL or contact
information. QR codes are increasingly popular and are likely
to be adopted by malware authors and cyber-criminals as well.
In fact, while a link can “look” suspicious, malicious and benign
QR codes cannot be distinguished by simply looking at them.
However, despite public discussions about increasing use of QR
codes for malicious purposes, the prevalence of malicious QR
codes and the kinds of threats they pose are still unclear.
In this paper, we examine attacks on the Internet that rely
on QR codes. Using a crawler, we performed a large-scale
experiment by analyzing QR codes across 14 million unique web
pages over a ten-month period. Our results show that QR code
technology is already used by attackers, for example to distribute
malware or to lead users to phishing sites. However, the relatively
few malicious QR codes we found in our experiments suggest that,
on a global scale, the frequency of these attacks is not alarmingly
high and users are rarely exposed to the threats distributed via
QR codes while surfing the web.
Index Terms—Mobile devices, malicious QR codes, malware,
phishing
I. Introduction
Smartphones have been recognized as one of the most
quickly emerging technologies in the recent years. They are
gaining significant attention as they become more capable
in providing unique services due to their powerful comput-
ing resources and sensor capabilities. On the other hand,
increasing demand, evolving usage patterns, and all-in-one
capabilities of smartphones make them lucrative targets for
malware writers. Spyware, worms, rootkits, bots, and trojans
are all on the rise in mobile platforms and are becoming
more sophisticated as professional criminals leverage new
exploitation and propagation techniques. For example, in 2012,
the Toll Fraud malware family caused significant financial
damage to users by subscribing them to premium SMS ser-
vices. Malware writers are constantly focusing on improving
their attack strategies to expand the range of malicious actions
they can deploy while evading emerging security defenses.
These malicious actions constitute a spectrum that ranges from
launching simple phishing sites to transforming compromised
machines into bots.
Quick Response (QR) codes are an evolution of regular
one-dimensional barcodes that are frequently used with mo-
bile devices. While 1D barcodes encode data with bars of
different width, 2D barcodes usually encode data as a matrix
of dots. Several 2D barcode standards exist, but the QR Code
ISO/IEC standard [1] is certainly the most commonly used
on smartphones. A QR code include three square markers at
the corners, called finder patterns (FIP), designed to be easily
identified by image recognition software. These patterns were
designed to be easily scanned with a camera and decoded using
simple image processing algorithms. The main advantage
of QR codes when compared to regular barcodes is their
increased information density (Figure 1).
In Q4 2011, 20.1 million users in the United States used
their smartphones to scan QR codes [2]. This popularity
has not only attracted business owners, but also users with
malicious intentions that seek to gain revenues by abusing
this new technology. Indeed, while QR codes are convenient
to use, they are also opaque and can therefore be used to hide
the final destination of a link.
In September 2011, malware that spread through QR
codes on a Russian website was reported in the news [3].
The corresponding QR code directed victims to download
a version of the Jimm-mobile ICQ client, infected with the
TrojanSMS.AndroidOS.Jfake.f malware, that sends SMS
messages to premium rate numbers [4]. The potential use
of QR codes to perform malicious activities (e.g., directing
to exploit sites or phishing sites, downloading malicious
contents) has been discussed in a number of security blogs
and forums [3]–[6]. Furthermore, several proof-of-concept QR
code attacks have been posted on public security blogs and
social media [7]–[9]. However, the prevalence of these attacks
is still unclear.
In this paper, we perform a large scale study of threats
posed by QR codes in the wild. We design a web crawler
that retrieves images, detects QR codes, and checks their
destination to identify malicious QR codes. We first assess the
current prevalence of QR codes in the wild, and then perform
an analysis on the extracted QR codes. This allows us to obtain
more insights into the global usage of QR codes on the web.
Malicious QR codes are identified by extracting URLs from
the codes and comparing them to malicious domain blacklists.
We conducted our crawling experiments over a ten month
period starting in December 2012, seeding the crawl using
Google searches as well as the 1,500 most popular websites
published by Alexa [10].
978-1-4799-2233-8/14 $31.00 © 2014 IEEE
978-1-4799-2233-8/14 $31.00 © 2014 IEEE
978-1-4799-2233-8/14 $31.00 © 2014 IEEE
DOI 10.1109/DSN.2014.103
DOI 10.1109/DSN.2014.103
DOI 10.1109/DSN.2014.103
192
192
192
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:28:03 UTC from IEEE Xplore.  Restrictions apply. 
(a) A link to
the DSN 2014
CFP.
Fig. 1: Examples of QR codes. If scanned, such QR codes could be used to
deanonymize a reviewer that was not careful to check the extracted URL!
(c) Example with higher
data density: DSN dead-
lines as free text.
(b) Example of logo
insertion, abusing error
correction.
We performed an empirical analysis across 14 million web
pages to discover the extent to which QR codes are leveraged
by attackers in the wild. Our results show that QR codes
are already being abused by attackers to distribute malware
or direct to phishing sites on the public web. Based on our
analysis, 0.16% of the QR codes we analyzed were designed
to facilitate one or more types of malicious activities, such
as directing users to phishing sites or distributing malware
to vulnerable devices. Therefore, our findings confirm the
folk wisdom that such attacks are real [11]. However, we
also observed that, on a global scale, QR codes are not
currently extensively used by attackers on the Internet. This
contradicts recent discussions in security blogs about
the
increasing use of malicious QR codes [3]–[6]. Based on our
analysis, we conclude that the probability of exposure to the
threats introduced by QR codes is currently small.
In summary, this paper makes the following contributions.
(cid:15) We design an automated system to detect malicious QR
codes on the web and to determine the types of threats
they might pose.
(cid:15) We provide insight into the security and privacy issues
of QR codes on the public web. Our research provides a
large-scale measurement of QR code attacks in the wild.
We have extracted and analyzed more than 94,000 QR
codes to investigate the global statistics of QR codes in
different parts of the web.
(cid:15) We characterize QR code attack strategies and their
current prevalence on the web. Our results reveal that
using phishing sites and exploit sites in QR code attacks
are more prevalent than other attack strategies in the wild.
We also identify some malware families distributed via
QR codes.
The rest of the paper is structured as follows. Section II
introduces QR code attacks and possible attack scenarios.
In Section III, we present our methodology, image crawler,
and malicious QR code detector. In Section IV, we present
the experiments we conducted and discuss our findings. We
discuss possible defenses against QR code-based attacks in
Section V. In Section VI, we present related work. Finally,
we conclude the paper in Section VII.
II. QR Code Attacks
The increasing popularity of QR codes as a mobile media
element can make QR codes attractive targets for malware
authors. However, attacks relying on QR codes are relatively
new [3], [12]. We define a QR code-based attack as an attack
that attempts to lure victims into scanning a QR code that
directs them to malicious websites. The key idea behind QR
code attacks is that victims might trust the web page or the
printed material on which the QR code is displayed, and
assume that the associated code is harmless. Typically, a user
scanning a malicious QR code is directed to an exploit or to
a phishing site. In the rest of this section, we discuss in more
detail a set of realistic attack scenarios.
A. QR Codes Leading to Phishing Sites
Phishing attacks have received a considerable amount of
attention because they are relatively simple and efficient. A
phishing attack relies on both technical deception and social
engineering techniques. The attacker must persuade the user to
perform a series of actions that provide access to confidential
information. The attack relies on the fact that a large number
of users judge a website’s legitimacy by its look and feel,
which can be easily copied by an attacker [13]. Therefore, a
phishing attack often starts by impersonating a popular website
to abuse user trust.
Because of the properties of QR codes (e.g., easy gener-
ation, distribution, and opacity), their adoption can increase
the user’s vulnerability to phishing attacks for three main
reasons. First, since with QR codes URLs do not need to be
manually entered anymore, users might not pay attention to
the addresses they are directed to. As shown by Onarlioglu et
al. [14], in a normal situation users might be able to distinguish
a benign URL from its misspelled counterpart. Unfortunately,
the scenario is totally different when the user is directed to a
specific website via a QR code. To make things worse, mobile
operating systems typically allow websites to hide their URL
once the page is loaded. This is intended to improve usability
on small screens, but this feature can also be used to deceive
users redirected to a phishing website.
Second, because of limited screen size, mobile browsers
cannot display very long URLs. Therefore, a phisher can
construct a long URL that starts with a legitimate name as
part of the URL, but actually points to a different domain.
Here again the effectiveness of the attack is improved because,
thanks to the QR code, the user might never see the complete
URL.
Third, miscreants can use a combination of QR codes and
URL shortening services to hide the malicious URL and avoid
193193193
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 08:28:03 UTC from IEEE Xplore.  Restrictions apply. 
suspicion. As a result, unsophisticated users may be tricked
by attackers [15] to visit a web page even after observing the
corresponding short URL.
B. Malicious Software Distribution
Attackers often use malicious websites to distribute mali-
cious software and perform drive-by download attacks [16].
In a recent drive-by download attack aimed at Android smart-
phones [17], malicious links were posted on online social
networks to redirect victims to a malicious page. This page
was designed to infect Android smartphones with malware (a
variant of Android OfFake). This malware then connected to a
Command-and-Control (C&C) server to join a botnet, allowing
the attacker to execute arbitrary commands and exfiltrate
personal information from the phone.
Although there has been no report of QR codes used in
drive-by download attacks in the wild, the adoption of QR
codes together with drive-by download attacks is a growing
concern [5]. For example, attackers might deceive victims
into scanning a malicious QR code leading to a previously
compromised website hosting an exploit kit.
Attackers use a variety of techniques in websites serving
malicious code. Such code is often hosted on legitimate web-
sites, in a hidden HTML iframe, or in obfuscated JavaScript
code leading the victim to the server hosting the exploit kit.
This redirection is often done in two steps: first, the exploit
kit first fingerprints the victim’s device and then, based on the
information retrieved, serves a relevant exploit to the device.
Figure 2 presents a simple scenario of a QR code attack in
which the victim is redirected to an exploit site after scanning
the QR code and visiting the compromised website. The appro-
priate malicious code is automatically loaded by fingerprinting
the OS version and identifying vulnerable applications on
the victim’s device. In order to launch successful attacks,
attackers often target vulnerable client applications such as
web browsers, Adobe Reader, and Adobe Flash, exploiting
them using common memory exploitation techniques. For
example, Flash is being actively exploited in the wild in earlier
versions of the Android platform by attackers that embed
malicious SWF objects in HTML code.
III. Methodology
Our aim is to analyze the prevalence of malicious QR codes
on the web. For this purpose, we built a tool that: a) crawls
the web and extracts image files; b) searches for QR codes
in the extracted images and extracts from them any URLs
discovered; and, c) identifies malicious URLs obtained from
the QR codes.
A. System Architecture
In the following, we describe in more detail the architecture
of our image crawler and the mechanism we used for detecting
malicious QR codes.
1) Image Crawler Engine: The crawler engine relies on the
scrapy framework [18] to extract URLs within each web page
visited and append them to the crawler queue. Although we
only crawl publicly viewable contents, our crawler processes
robot.txt files and therefore complies with the Robots
Exclusion protocol [19]. When a URL is disallowed, it is
removed from the queue; otherwise, the URL is passed to
the image crawler. The image crawler parses each page and
extracts images using XPath (e.g., //img/@src). For each
image we keep some metadata, including the download path,
the primary referring URL, and the image checksum. The
URL of a scraped image is used to schedule downloading
of the image. Successfully extracted images are then stored in
a MongoDB database along with their metadata.
2) QR Code Extractor: We use an open source QR code
decoder [20], which provides a Python interface to a Java QR
decoding library. While there are several QR code decoding
libraries available, we chose it over other implementations
because it was faster and allowed our system to scale to a
larger number of images. The QR code extractor retrieves
images from the database and attempts to find the three
finder patterns in each image. If the special sequence of black
and white pixels patterns are not found within an image,
it presumes that the retrieved image is not a QR code and
retrieves the next image to process from the MongoDB server.
QR code metadata, including the URL of the website from
which the QR code was extracted and any extracted target
URL, is inserted into the image collection.
3) URL Matcher: URL matching is the final phase of
detecting malicious QR codes. It compares the URLs extracted
from the QR codes to a list of malicious websites created from
a number of publicly available resources. To populate this list,
we deploy a crawler to collect domain feeds provided by major
URL blacklists (PhishTank [21], Malware Domains [22], the
Malware Domain List [23], malc0de [24], Malware Block
List [25], and vxvault.siri-urz [26]). Our system collects on
average 1,600 entries per day from these sources. From these
feeds, we generated a collection of approximately 640,000
unique malicious URLs to perform URL matching. The URLs
obtained from QR codes are then compared with this list to
identify malicious QR codes and the type of malicious actions
for which they were intended.
4) Web Crawling: A suitable selection of seeds, or starting
points for the web crawler, is an important precondition for
an efficient and high-coverage crawler. We therefore selected
a combination of sites from various sources in order to
extract images from different categories of sites and increase
the chances of finding possible attacks. In particular, we
selected the initial crawling seeds from six different categories,
including free downloads, online games, adult, music, online
news, and personal/business websites. For each category, we
extracted the results of English language Google searches. We
also included the top 1,500 most popular websites as published