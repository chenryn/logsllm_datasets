Question: Consider the following scenario: A software engineer is working on a large codebase and notices multiple instances where the same complex mathematical calculation is duplicated in different parts of the application. The engineer has decided to refactor the code to improve maintainability and reduce the risk of inconsistent updates in the future. What would be the most effective approach to refactoring the code to meet these objectives?
"A": "Create a new class dedicated to mathematical operations and move all complex calculations to this class, replacing duplicates with calls to the respective methods.",
"B": "Add comments to each duplicated code block to ensure that future updates are consistently applied across all instances.",
"C": "Duplicate the code blocks into a common base class that other classes inherit from, to centralize future updates.",
"D": "Extract the complex calculations into a single method and replace all duplicate code blocks with calls to this method."
Answer: AD