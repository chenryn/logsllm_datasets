a shared secret for the parent
and each child.
Table 3: Comparison of stored information
DNSSEC with SIG RRs
DNSSEC with SIG(0)
SK-DNSSEC
DNS Request
It is not possible to secure a
request in this scenario.
The request as a whole is
signed via a public-key based
signature.
The request as a whole is
signed via a MAC. A symmet-
ric certiﬁcate is attached.
DNS Authoritative
Answer
DNS Referral
Answer
For each RRset there is a SIG
RR in the answer.
Since a
typical answer consists of more
than one RRset, several SIG
RRs need to be included.
In addition to the delegation
DNS RRsets (typically more
than one),
the KEY RRset
of the child and a SIG RR
for each RRset need to be in-
cluded.
The answer as a whole is
signed via a public-key based
signature.
The answer as a whole is
signed via a MAC.
The KEY RRset of the child is
added to the delegation DNS
RRsets and the message as a
whole is signed via a public-key
based signature.
The server returns the dele-
gation DNS RRs signed via a
MAC. The MAC and the key
of the child are then encrypted
and sent along with a symmet-
ric certiﬁcate.
Table 4: Message size
operation
Blowﬁsh enc./dec.
Blowﬁsh enc./dec.
AES enc./dec.
AES enc./dec.
HMAC-MD5
HMAC-MD5
HMAC-SHA1
HMAC-SHA1
RIPE-MD160
RIPE-MD160
Create SK authoritat.
Verify SK authoritat.
Create SK referral
Verify SK referral
Create DSA sig.
Verify DSA sig.
Create RSA sig.
Verify RSA sig.
Create DSA sig.
Verify DSA sig.
Create RSA sig.
Verify RSA sig.
key
128
128
128
128
128
128
128
128
160
160
128
128
128
128
768
768
768
768
1024
1024
1024
1024
input
48
52
48
52
500
1000
500
1000
500
1000
500
500
500
500
500
500
500
500
500
500
500
500
time
1.7
2.0
3.8
5.0
10.2
14.0
16.0
24.0
19.5
30.0
19.2
10.2
29.9
11.9
2861.6
3492.9
5029.7
502.5
4263.6
5188.6
8741.5
737.7
norm
0.17
0.20
0.37
0.49
1.00
1.37
1.57
2.35
1.91
2.94
1.88
1.0
2.93
1.17
280.55
342.44
493.11
49.26
418.00
508.69
857.01
72.32
Table 5: Performance comparison
has to open and verify a symmetric certiﬁcate which
authenticates 100 bytes of data (0.88) and compute
HMAC-MD5 over the answer (1).
- Referrals. A referral (or delegation answer), instead,
would cost as 2.93 times a single computation of HMAC-
MD5. Indeed, the name server has to open and verify
a symmetric certiﬁcate (0.88), compute HMAC-MD5
over the answer (1), encrypt the session keys and the
output of the MAC (0.17), and, ﬁnally, create a sym-
metric certiﬁcate (0.88).
SK-DNSSEC Resolver.
- Authoritative Answers. Verifying an authoritative an-
swer requires a single HMAC-MD5 computation (1).
- Referrals. Verifying a referral requires decrypting the
keys (0.17) and computing HMAC-MD5 (1) for a total
of 1.17.
6.4 Scalability and Interoperability
According to RFC2931 [27], PK-DNSSEC with SIG(0)
provides stronger security protection than PK-DNSSEC with
SIG RR which in general does not provide protection of the
overall integrity of a response. In particular, PK-DNSSEC
with SIG(0) provides protection for glue records, DNS re-
quests (mutual authentication), and message headers on re-
quests or responses. SK-DNSSEC provides a similar level of
security but at a lower cost. Message authentication codes
are very eﬃcient to compute and verify.
94Managing DNS symmetric certiﬁcates is easier than it
might be expected. In fact, symmetric cryptographic tech-
niques may not scale well compared with those based on
public-key cryptography. However, this is not the case in
the domain name system given its particular tree structure.
Initially, each DNS server stores only the public key of the
root and successively the root symmetric certiﬁcate. Other
symmetric certiﬁcates will be cached for eﬃciency improve-
ments. Furthermore, DNS servers do not store anything
about resolvers as the information they need is given to them
by the parent servers in the DNS tree. If a DNS symmet-
ric certiﬁcate of a server is ever lost or compromised, it is
always possible to request a new one starting from the root
server or from the DNS server upstream in the network.
Symmetric certiﬁcates are as manageable as public-key
certiﬁcates with the exception that DNS symmetric-key cer-
tiﬁcate cannot be shared.
However, resolvers are usually conﬁgured to share the in-
formation retrieved from the DNS database only with stub
resolvers or name servers acting as such (“DNS forward-
ing”), for which a TSIG-based mechanism would suﬃce. In
particular, resolvers usually do not share DNS responses (for
which they are not authoritative or can’t provide delegation
nodes) with other name servers nor name servers are con-
ﬁgured to query other servers that cannot refer to delegated
subdomains. Hence, in a strictly hierarchical tree structure
(such as in DNS), techniques based on symmetric cryptog-
raphy scale as satisfactorily as those based on public-key
cryptography.
Nevertheless, we would like to design and implement SK-
DNSSEC so that it will interoperate completely with PK-
DNSSEC. In Remark 1 of Section 3.3, we justify such a strat-
egy. The code is being written having this interoperability
issue in mind ([2]). In particular, we plan to investigate the
beneﬁts of a hybrid system where PK-DNSSEC may be used
to protect root and top-level domains whereas SK-DNSEC
could be used to protect the rest of the DNS tree. Employ-
ing SK-DNSSEC in a larger scale, though, would be very
convenient and would give us the opportunity to argue bet-
ter about the load distribution expected on the root and
top-level name servers.
7. CONCLUSION
Secure DNS is a big change but inevitable. The PK-
DNSSEC proposal is an example of dedication and remark-
able work currently coordinated by the IETF. BIND ver-
sion 9 provides already a working and stable framework for
PK-DNSSEC. Despite these eﬀorts, DNSSEC is not widely
deployed yet even though DNS names are routinely used for
authentication. In this paper, we presented a proposal for
DNSSEC that, when properly implemented, oﬀers the high-
est level of security while reducing network traﬃc. In ad-
dition, it reduces storage requirements and enables eﬃcient
mutual authentication. Hopefully, the results contained in
this paper will stimulate the deployment of DNSSEC and
induce beneﬁcial discussions.
Acknowledgments. The ﬁrst author would like to
thank Aniello Del Sorbo, Steve Kent, and Hilarie Orman
for helpful discussions on DNS and DNSSEC. Many thanks
to the anonymous referees for their insightful comments.
The SK-DNSSEC system is being developed at the Johns
Hopkins University Information Security Institute.
8. REFERENCES
[1] Paul Albitz and Cricket Liu, DNS and BIND, 4th Edition
O’Reilly, 2001.
[2] G. Ateniese and A. Del Sorbo, “Design and Implementation
Issues in SK-DNSSEC”, Manuscript in preparation 2001.
Available on www.cs.jhu.edu/∼ateniese/skdnssec.html.
[3] M. Bellare, R. Canetti, and H. Krawczyk, “Keying hash
functions for message authentication”. In Advances in
Cryptology - Crypto 1996 Proceedings, LNCS Vol. 1109, N.
Koblitz ed, Springer-Verlag, 1996.
[4] M. Bellare and C. Namprempre, “Authenticated
Encryption: Relations among notions and analysis of the
generic composition paradigm”, In Advances in Cryptology -
Asiacrypt 2000 Proceedings, LNCS Vol. 1976, T. Okamoto
ed, Springer-Verlag, 2000.
[5] Steven M. Bellovin, “Using the Domain Name System for
System Break-Ins”, Proceedings of the Fifth Usenix Unix
Security Symposium, pp. 199–208, June 1995.
[6] D. Davis and R. Swick, “Network Security via Private-Key
Certiﬁcates”, USENIX 3rd Security Symposium
Proceedings, (Baltimore; Sept. ’92). Also in ACM Operating
Systems Review, v. 24, n. 4 (Oct. 1990).
[7] James M. Galvin, “Public Key Distribution with Secure
DNS”, in 6th USENIX UNIX Security Symposium, July
1996.
[8] Information and statistics about F.root-servers.net,
www.isc.org/services/public/F-root-server.html
[9] Hugo Krawczyk, “The order of encryption and
authentication for protecting communications (Or: how
secure is SSL?)”. To appear in the proceedings of CRYPTO
2001.
[10] B. Cliﬀord Neuman and Theodore Ts’o. Kerberos: An
Authentication Service for Computer Networks, IEEE
Communications, 32(9):33-38. September 1994.
[11] RSA Security site defaced. ZDNet 2000.
www.zdnet.com/zdnn/stories/news/0,4586,2437384,00.html
[12] Secure Network Time Protocol (stime),
www.ietf.org/html.charters/stime-charter.html
[13] Eastlake, D., “Bigger Domain Name System UDP Replies”,
Internet Draft, www.ietf.org/proceedings/98aug/I-D/draft-
ietf-dnsind-udp-size-02.txt
[14] Lottor, M., “Domain Administrators Operations Guide”,
RFC 1033, November 1987.
[15] Mockapetris, P., “Domain Names - Concepts and
Facilities”, RFC 1034, November 1987.
[16] Mockapetris, P., “Domain Names - Implementation and
Speciﬁcations”, RFC 1035, November 1987.
[17] J. Kohl, C. Neuman, “The Kerberos Network
Authentication Service (V5)”, RFC 1510, September 1993.
[18] Eastlake, D. and C. Kaufman, “Domain Name System
Security Extensions”, RFC 2065, January 1997.
[19] H. Krawczyk, M. Bellare, R. Canetti, “HMAC:
Keyed-Hashing for Message Authentication”, RFC 2104,
February 1997.
[20] Eastlake, D., “Domain Name System Security Extensions”,
RFC 2535, March 1999.
[21] EastLake, D., “DSA KEYs and SIGs in the Domain Name
System (DNS)”, RFC 2536, March 1999.
[22] Eastlake, D., “RSA/MD5 KEYs and SIGs in the Domain
Name System (DNS)”, RFC 2537, March 1999.
[23] Eastlake, D., Gudmundsson, O., “Storing Certiﬁcates in
the Domain Name System (DNS)”, RFC 2538, March 1999.
[24] Eastlake, D., “Storage of Diﬃe-Hellman Keys in the
Domain Name System (DNS)”, RFC 2539, March 1999.
[25] Vixie, P., Gudmundsson, O., Eastlake, D. and B.
Wellington, “Secret Key Transaction Signatures for DNS
(TSIG)”, RFC 2845, May 2000.
[26] Eastlake, D., “Secret Key Establishment for DNS (TKEY
RR)”, RFC 2930, September 2000.
[27] Eastlake, D., “DNS Request and Transaction Signatures
(SIG(0)s)”, RFC 2931, September 2000.
95