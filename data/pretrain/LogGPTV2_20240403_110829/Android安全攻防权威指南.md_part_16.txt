像，将会为获取设备分区上包含的所有用户数据留下一扇效开的大门。
---
## Page 66
50第3章rootAndroid设备
3.4对未加锁引导加载程序的设备进行root
root的过程需要涉及在系统分区上拥有一个带有恰当set-uid权限的su二进制程序，这会允
许在任何需要的时候提升权限。su二进制程序通常与Android应用（如 SuperUser或 SuperSU）
捆绑在一起，这个应用在其他应用请求root访间时提供一个图形化的提示。如果请求得到许可，
应用就会调用su二进制程序来执行所请求的命令。这些包装su的Android应用还会管理哪些应
用或用户被自动授予root访间权限，而无须通知用户。
注意Chainfire SuperSU的最新版本可以从http:/download.chainfire.eu/supersu以恢复更新包的
形式下载，或者从GooglePlay 商店以独立应用的形式下载：htps:/play.google.com/store/
apps/details?id=eu.chainfire.supersu.
ClockworkMod SuperUser 程序包可从 Google Play 商店的下载：https://play.google.com
store/apps/details?id=com.koushikdutta.superuser,源代码可从以下链接获取：https://github
com/koush/Superuser。
对于一个未加领或可解锁引导加载程序的设备，获得root访问权限是很容易的，因为你不必
依靠利用未修补的安全漏润的方式。第一步是解锁引导加载程序。如果你还没有搞定，取决于具
体的设备，你可以使用3.3节中介绍的fastbootoemunlock命令，或是使用厂商特定的引导
加载程序解锁工具来合法地解锁设备。
在写作本书时，摩托罗拉、HTC和索尼支持通过其解锁门户网站，对某些设备型号的引导
加载程序进行解锁。
注意摩托罗拉的引导加载程序解锁门户网站为https://motorola-global-portal.custhelp.com/app/
standalone/bootloader/unlock-your-device-a。HTC的引导加载程序解镇门户网站为
http://www.htcdev.com/bootloader。索尼的引1寻加载程序解镇门户网站为http://unlock-
bootloader.sonymobile.com/
当引导加载程序被解锁后，用户就可以自由地对设备进行定制修改。这时，有几种方法可以
在系统分区中包含一个为设备架构编译的适当su二进制程序，并赋子正确的权限。
可以修改出厂镜像并添加一个su二进制程序。在这个例子中，我们解压一个ex14格式的系
统镜像，挂载它，增加一个su二进制程序，然后进行重打包。如果我们在设备上刷上这个镜像，
那么设备中就会包含su二进制程序，也就被root掉了。
mkdir syatemdir
simg2img ayatem.ing system.raw
mount -t ext4 -0 1oop mystem.rav systemdix
cp su systendir/xbin/su
chowm 0:0 systemdir/xbin/su
---
## Page 67
3.4对未加锁引导加载程序的设备进行root
51
chmod 6755 syatemdiz/xbin/su
umount aystendir
如果该设备是AOSP支持的，那你可以从源代码编译出一个userdebug或eng选项的Android
实例。登录http:/source.android.com/source/building.html可以获取从源码编译Android的更多信息。
默认情况下，这些编译构建的配置文件提供root访问：
cur1 http1//commondatastorage.googleapis.com/git-repo-dowmloads/repo \
-0 -/bin/repo
3
chnod a+x -/bin/repo
repo Init -u https1//android.googlesource.com/platform/manifest
source bui1d/envsetup.sh
repo sync
lunch ful1_maguro=userdebug
无论是通过修改出厂镜像来创建定制系统镜像，还是通过源码编译你自已的镜像，你都必须
将其刷入系统分区中来使它生效。例如，如下命令显示了如何使用fastboot协议来刷入镜像：
fastboot flash systen custom-nystem.ing
最直接的方法是启动一个定制的恢复镜像，这种方法可以通过一个定制更新包设置，实现将
su二进制程序复制到系统分区中，然后设置恰当的权限。
注意使用此方法时，你只需启动定制的恢复镜像，而不需要刷入它，因此你只是使用它在系
统分区中刷入一个su二进制程序，根本不需要修改恢复分区。
要通过这个方法进行操作，首先需要下载一个定制恢复镜像和su更新包。这个定制恢复镜
像可以任选，只要它支持你的设备。同样，su更新包可以是SuperSu、SuperUser或你的其他选择。
(1)你应该将两者都放置到设备的存储空间中，通常会放置到挂载在/sdcard位置的SD卡上。
(2）接下来，通过设置使设备进人fastboot模式。
(3)此时，打开命令行界面，然后输人fastbootbootrecovery.img，这里recovery.img
是你所下载的恢复镜像原始文件。
（4）在恢复菜单中，选择选项来应用一个更新的zip文件，然后测览选择你在设备存储上存放
着带有su二进制程序更新包文件的位置。
此外，采用Android4.1或更高版本的设备中包含一个称为sideload的新特性。这一功能允许
通过ADB来直接应用更新zip包，面不需要首先将其复制到设备中。要想 sideload一个更新包，
只需要运行adb sideload su-package.zip 命令即可，这里 su-package.zip 是你的计算
机硬盘中更新包的文件路径名。
在某些设备上，解锁引导加载程序之后可以启动未经签名的代码，但是仍然无法刷人未经签
名的代码。在这种情况下，刷人定制系统镜像或恢复镜像在取得已启动设备的root权限后才可能
实现。你可以使用dd直接将定制恢复镜像写入块设备中，来替换恢复分区。
---
## Page 68
52第3章rootAndroid设备
3.5对锁定引导加载程序的设备进行root
在引导加载程序被锁定且厂商并不提供合法解锁方法的情况下，你通常只能在设备中寻找一
个安全缺陷，来作为root设备的切人点。
首先，你需要确定你面对的是哪种类型的引导加载程序锁，它可能因制造商、移动通信运营
商、设备型号或同款设备中的软件版本面异。有些时候，fastboot访问也被禁止了，但是你仍然
可以使用厂商专有协议（如摩托罗拉的SBF或三星的ODIN）来进行刷机。还有些情况下，在同
款设备上，使用fastboot模式与使用厂商专有下载模式在执行签名验证时还会有所差异。签名验
证可能发生在启动时或刷人时，或者在两个时刻都进行。
一些锁定的引导加载程序只对选择的分区进行签名验证，一个常见的例子是只对加锁的引导
分区与恢复分区进行验证。在这种情况下，启动一个定制内核或一个修改后的恢复镜像是不被允
许的，但仍然可以修改系统区分。你可以通过修改出厂镜像的系统分区来实施root（见3.4节）。
在某些设备上，虽然引导分区被锁定使得启动一个定制内核被禁止，但是通过在手机开机时
以恢复模式启动，仍然可以在恢复分区中刷人一个定制的引导镜像，并使用定制内核来启动系统。
在这种情况下，通过修改定制引导镜像initrd的defaultprop文件，仍然可以使用adbshel1来
获得root访间权限（见3.5.1节）。在某些设备中，官方恢复镜像允许应用使用默认Android测试
密钥签名的更新包。这个密钥是那些没有指定密钥的应用包所使用的通用密钥，被包含在AOSP
包来对这类设备进行root。我们并不清楚厂商的这一“疏忽”是否有意为之，但可以确定这个方
法在运行Android4.0和官方恢复镜像3e版本的某些三星设备上是可行的。
最坏的情况是，引导加载程序限不允许你启动一个未能通过签名验证的分区。这时，你只能
使用其他的技术来获取root访问权限，下面我们就来详细介绍。
3.5.1在已启动系统中获取root权限
在一个已启动系统上获得初始root访问权限，通常是通过Android操作系统中未修补的安全
漏洞来获得一个root shell。这类root方法也被广泛称为“软root”（softroot），因为这种攻击儿
乎完全是基于软件的。通常，软root的完成方式是多种多样的，可以利用Android内核，以root
权限运行的进程，设置了set-uid位的程序中的安全漏洞、针对文件权限bug的符号链接攻击，或
者其他类型的安全漏洞。由于程序员可能在许多地方引人各种类型的错误，因此这种方法有很多
种可能。
尽管root的 set-uid或set-gid二进制文件在Android官方版本中并不常见，但是运营商或设
备制造商有时会在他们的定制修改版本中引I人一些。这些set-uid二进制文件中任意一个的安全
漏洞都有可能导致权限提升，最终使设备被获取root访问权限。
另一个常见的场景是利用以root权限运行的进程中的安全漏洞。这样的一个漏洞利用可以让
你以root权限执行任意代码。本章结尾部分将包含若干个这类实例。
你将在第12章看到，随着Android系统日趋成熟，这类漏洞利用变得越来越困难。新的
---
## Page 69
3.5对锁定引导加载程序的设备进行r0ot53
Android发布版本中一直在引人一些新的攻击缓解技术和安全加固特性。
利用adbd来获取root权限
adbd守护进程是以root权限开始运行的，然后会降权至shell用户（AID_SHELL），除非属
性ro.secure 被设置为0。然面这一属性是只读的，通常情况下由引导镜像initrd 设置成
ro.secure=1，了解这点是非常重要的。
adbd守护进程在属性ro.kernel.qemu被设置为1时，也会以root权限启动，而不会降权
至shell用户，即在Android模拟器中启动adbd以root权限运行。但是这个属性也是只读的，在
真实的设备上通常不会设置。
Android4.2之前的版本将在启动时读取/data/local.prop文件并应用这个文件中的所有属性。
在Android4.2版本中，当ro.debuggable被设置为1时，这个文件只有在非用户构建（build）
中才是可读的。
/data/local.prop文件以及ro.secure和ro，kernel.qemu属性是获取root访问的关键所在。
将这些牢记于心，因为你会在3.6节中看到一些使用它们的漏洞利用。
3.5.2NAND锁、临时性root与永久性root
某些HTC设备在无线电非易失随机存取存储器（NVRAM）中有一个安全标志位（@secuflag）
这一标志位会被设备的引导加载程序（HBOOT）检查。当这个标志位设置为true时，引导加载
启动和恢复分区进行写人，而启用S-ON模式后，重新启动将失去root权限，并且对于这些分区
的写人不会持久化。这使得定制系统ROM、定制内核和定制恢复修改都不再可行。
但是我们仍然有可能通过对一个足够严重的安全漏洞的利用获取到root权限，然而NAND
锁使得所有的修改在重启之后都会丢失，这在AndroidMOD（修改）社区中被称为临时性root
为了对开启NAND锁的HTC设备进行永久性root，必须完成以下两件事中的一件。一是禁
用基带上的安全标志位；二是将设备刷上一个不会实施NAND锁的打补丁的HBOOT或工程
HBOOT。在两种情况下，引导加载程序都会显示一条“security ofr”消息（S-OFF）。图3-3给出
了锁定的和解锁的HTCHBOOT的对比情况：
在2011年8月HTC提供官方引1导加载程序解锁过程之前，采取打补丁的HBOOT是唯一可
用的方案。在某些设备上可以使用一些非官方的引导加载程序解锁工具，如AlphaRev
（http://alpharev.nl/）和 Unrevoked （http/unrevoked.com/）)，二者后来合并为 Revolutionary.io 工具
（http:/revolutionary.io/）。这些工具通常组合使用多个公开或私有的漏洞利用代码，以剧入打补丁
的引导加载程序并绕过NAND锁。在大多数情况下，重新刷人一个官方的HBOOT，就可以再次
激活设备的安全标志位（S-ON）。
可以从http:/unlimited.io/获取的 Unlimitedio 漏润利用程序，如JuopunutBear、LazyPanda 和
DirtyRacun，通过组合利用多个在HTCAndroidROM和设备基带中存在的安全漏洞，在某些设
备上达到完全的无线电S-OFF效果。
---
## Page 70
54第3章rootAndroid设备
113212.1223:34
2281122:36152
DOOTLOASER
图3-3锁定和解锁的HTCHBOOT对比
2010年12月，ScotWalker以GPLv3版权许可证发布了gfree漏润利用程序（https:/github
com/tmzt/g2root-kmod/tree/master/scotty2/gfree）。这个漏润利用程序可以禁用T-Mobile G2的嵌人
式多媒体卡（eMMC）保护机制。eMMC内存中包含了基带的分区，当引导加载程序初始化硬件
时以只读模式启动。然后这个漏润利用程序使用一个Linux内核模块来重新启动eMMC芯片，
并将@secuflag设置为false。最后，它将在内核中安装一个多媒体卡（MMC）块请求过滤器，以
移除对隐藏无线电设置分区的写保护。
当HTC开启它的官方解锁门户网站后，它为某些设备提供了HBOOT镜像，允许用户对引
导加载程序进行解锁并解除NAND锁，步骤如下。
(1)首先用户应该执行 fastboot oem get_identifier_token 命令，引导加载程序会显
示一个令牌（token），用户应该将其提交到HTC的解锁门户网站。
（2）在提交标识符令牌后，用户会接收到一个为其手机定制的Unlock_code.bin文件，这个文
件由 HTC 的私钥签名，应该使用 fastboot flash unlocktoken Unlock_code，bin命令将
其刷入设备中。
如果Unlock_code.bin文件是有效的，手机将允许使用标准的fastbootflash命令，来刷
入未经签名的分区镜像。此外，也允许不加限制地启动这些未经签名的分区。图3-4描述了解锁
设备的一般流程。HTC和摩托罗拉是两家应用了这类解锁过程的厂商。
其他设备，如东芝的某些款平板电脑，也有NAND锁。对于这些设备，锁是由 scalime可加
载内核模块来实施的，面这一模块存在于引导镜像initrd中。这个模块以SEAndroid为基础，防
止重新挂载系统分区进行写操作。
---
## Page 71
3.5对锁定引导加载程序的设备进行r0ot
55
引导加载程序
锁定的设备
引导加载程
序被解锁
步骤1
步我2
步霖3
步骤4
用户使用fashoxc获得
手机的解镇令牌
用户向OEM解镇门户