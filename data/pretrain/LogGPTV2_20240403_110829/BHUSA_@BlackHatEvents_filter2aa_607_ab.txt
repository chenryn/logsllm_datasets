size
0x00
command
0x18
0x18
object_count
0x04
0x1C
flags
0x04
0x20
context_count
0x04
0x24
reserved
0x04
0x28
fence_value
0x08
0x30
device
0x08
0x38
ObjectHandleArray[object_count]
4 * object_count
ContextArray[context_count] 
4 * context_count
MonitoredFenceValueArray[object_count]
8 * object_count
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21918
DXG_HOST_VIRTUALGPU_VMBUS::VmBusSignalSyncObject
If v10_objectcount = 1, v16_buflen = 0x3c
v17_Length_MonitoredFenceValueArray = 8
v18_Offset_MonitoredFenceValueArray = 0x3c
V22 = 0
v22 syncgpu.fence_value
V23 = 0
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21912
DxgkWaitForSynchronizationObjectFromGpuInternal
v5_a4 is 0 now, into this branch
v5_a4 = Src.pFenceValue
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21912
WaitForSynchronizationObjectFromGpu
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21912
PoC Code
‚ë† Create context handle
‚ë° Create sync handle
‚ë¢ Trigger this bug, read from
address : 0x4141414141414141
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21912
Debugging
#BHUSA @BlackHatEvents
Information Classification: General
Case Studies                           CVE-2022-21898
Arbitrary Address Write:
DXGK_VMBCOMMAND_SUBMITVAILPRESENTHISTORYTOKEN
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21898
DXG_HOST_VIRTUALGPU_VMBUS::VmBusSubmitVailPresentHistoryToken
offset
name
size
0x00
command
0x18
0x18
context_handle
0x04
0x1C
unknown1_off4
0x04
0x20
unknown2_off8
0x08
0x28
unknown3_off10
0x08
0x30
unknown4_off18
0x08
0x38
unknown5_off20
0x08
0x40
device_synchandle
0x04
0x44
unknown6_off2C
0x04
databuf memory layout
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21898
DXGADAPTER::SubmitPresentHistoryTokenFromVm
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21898
VidSchSubmitCommandContextless
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21898
VidSchiRedirectedFlipWaitOnSyncObject
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21898
VidSchiAcquirePrivateDataReference
When v2 = 0,
v4 = *(_QWORD *)((char *)a2 +  0xC8)
In VidSchiRedirectedFlipWaitOnSyncObject,
v6 + 0x238
In DXGADAPTER::SubmitPresentHistoryTokenFromVm
v4 is a7_unknown4_off18
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21898
PoC Code
‚ë† Create sync handle
‚ë° Trigger this bug, write to
address : 0x414141414141414d
#BHUSA @BlackHatEvents
Information Classification: General
CVE-2022-21898
Debugging
#BHUSA @BlackHatEvents
Information Classification: General
Agenda
‚ë†Hyper-V DirectX Component Architecture
‚ë°How to Config
‚ë¢Attack Surface
‚ë£Vulnerabilities details
‚ë§Fuzz is necessary
‚ë•Conclusion and Black Hat Sound Bytes
#BHUSA @BlackHatEvents
Information Classification: General
Why Fuzz?
‚û¢ Hyper-V DirectX Component has a large quantity of codes.
‚û¢ There are 87 commands and their corresponding structures, mutating 
members in a specific struct can be very effective.
‚û¢ Many commands depend on context, such as some commands depend 
on device_handle, allocation_handle, etc. Meanwhile, the properties of 
the handle, such as the properties of the allocation_handle, will also 
affect the commands that refer to it below. In this case, it is more 
efficient to use fuzz.
‚û¢ The above vulnerabilities were all discovered by fuzz.
#BHUSA @BlackHatEvents
Information Classification: General
Fuzz Architecture 
Hypervisor
Host (Root Partition)
Guest (Child Partition)
dxgmms1.sys
dxgmms2.sys
dxgkrnl.sys
dxgkrnl.ko
UserMode
KernelMode
fuzzer
r&w /dev/dxg
ioctl(LX_DXPWN)
‚Ä¢
Send mutated dxgkrnl command data.
‚Ä¢
Receive data returned from the kernel 
module, such as the return data of 
create allocation command.
ioctl(LX_DXPWN) ---- agent layer
‚Ä¢
Send the dxgkrnl command data obtained from 
the usermode program to the host DirectX 
component.
‚Ä¢
Receive data from host DirectX component and 
return data to usermode program.
#BHUSA @BlackHatEvents
Information Classification: General
Fuzz Architecture 
Hypervisor
Host (Root Partition)
Guest (Child Partition)
dxgmms1.sys
dxgmms2.sys
dxgkrnl.sys
dxgkrnl.ko
UserMode
KernelMode
fuzzer
r&w /dev/dxg
ioctl(LX_DXPWN)
‚Ä¢
Send mutated dxgkrnl command data.
‚Ä¢
Receive data returned from the kernel 
module, such as the return data of 
create allocation command.
ioctl(LX_DXPWN) ---- agent layer
‚Ä¢
Send the dxgkrnl command data obtained from 
the usermode program to the host DirectX 
component.
‚Ä¢
Receive data from host DirectX component and 
return data to usermode program.
fuzzer
Harness
Data Send/Recv
Infrastructure 
#BHUSA @BlackHatEvents
Information Classification: General
Example
Hypervisor
Host (Root Partition)
Guest (Child Partition)
dxgmms1.sys
dxgmms2.sys
dxgkrnl.sys
dxgkrnl.ko
UserMode
KernelMode
fuzzer
r&w /dev/dxg
ioctl(LX_DXPWN)
‚Ä¢
Send mutated dxgkrnl command data.
‚Ä¢
Receive data returned from the kernel 
module, such as the return data of 
create allocation command.
ioctl(LX_DXPWN) ---- agent layer
‚Ä¢
Send the dxgkrnl command data obtained from 
the usermode program to the host DirectX 
component.
‚Ä¢
Receive data from host DirectX component and 
return data to usermode program.
DXGK_VMBCOMMAND_SIGNALSYNCOBJECT
Mutation dxgkvmb_command_signalsyncobject structure member
#BHUSA @BlackHatEvents
Information Classification: General
Agenda
‚ë†Hyper-V DirectX Component Architecture
‚ë°How to Config
‚ë¢Attack Surface
‚ë£Vulnerabilities details
‚ë§Fuzz is necessary
‚ë•Conclusion and Black Hat Sound Bytes
#BHUSA @BlackHatEvents
Information Classification: General
Conclusion
‚û¢ The Hyper-V DirectX Component has a large attack surface and is 
still being updated so far.
‚û¢ Hyper-V DirectX Component application scenarios include: WDAG, 
Windows Sandbox, and HoloLens 2 emulator. Since virtual 
machines can natively support DirectX, online 3D gaming may 
become possible in the future I guess.
‚û¢ üôÅUnfortunately, MSRC thinks Hyper-V DirectX is out of scope for 
Hyper-V bounty program(Thanks MSRC for the patient 
communication). But it's still a good remote attack surface.
#BHUSA @BlackHatEvents
Information Classification: General
Black Hat Sound Bytes
‚ö´Hyper-V DirectX component architecture overview, and how to 
enable DirectX component in Hyper-V virtual machine configuration.
‚ö´Introduce the attack surface of Hyper-V DirectX component, and how 
to find vulnerabilities in this attack surface through fuzzing.
‚ö´Discloses the internal details of 4 Hyper-V DirectX component‚Äôs 
vulnerabilities, providing reference for finding vulnerabilities in this 
new attack surface.
#BHUSA @BlackHatEvents
Thank you!
Zhenhao Hong (@rthhh17)
Ziming Zhang (@ezrak1e)
#BHUSA @BlackHatEvents
Q & A
Zhenhao Hong (@rthhh17)
Ziming Zhang (@ezrak1e)