Currently, interfaces use the same syntax for properties, regardless of whether they have accessors or not. While this works well for duck-typed interfaces, it presents a challenge when you want to specify properties that have only a getter or a setter. Often, these properties are read-only, meaning they lack a setter. The issue is that there's no way to communicate this to the compiler, which means it won't warn you if you attempt to assign a value to such a property. In JavaScript, the runtime will simply ignore the assignment without throwing an error.

To address this, it would be beneficial to introduce a more expressive syntax. For example:

```typescript
interface IEmployee {
    get fullName: string;
    set firstName: string;
    set lastName: string;
}
```

This syntax would allow the compiler to enforce the correct usage of these properties, thereby preventing errors and improving code quality.