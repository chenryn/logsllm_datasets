                     Number of used inode handlers.  
              super-sz  
                     Number of super block handlers allocated by the kernel.  
              %super-sz  
                     Percentage  of  allocated  super  block handlers with regard to the maximum number of super block  
                     handlers that Linux can allocate.  
              dquot-sz  
                     Number of allocated disk quota entries.  
              %dquot-sz  
                     Percentage of allocated disk quota entries with regard to the maximum number of cached disk quota  
                     entries that can be allocated.  
              rtsig-sz  
                     Number of queued RT signals.  
              %rtsig-sz  
                     Percentage  of  queued  RT  signals  with  regard to the maximum number of RT signals that can be  
                     queued.  
```  
9\. sar -w  
反映每秒上下文的切换数量, 详情  
```  
       -w     Report system switching activity.  
              cswch/s  
                     Total number of context switches per second.  
```  
10\. sar -W  
反映SWAP每秒被换进或换出的数量, 详情  
```  
       -W     Report swapping statistics. The following values are displayed:  
              pswpin/s  
                     Total number of swap pages the system brought in per second.  
              pswpout/s  
                     Total number of swap pages the system brought out per second.  
```  
## 二、接下来看看数据库表的设计 :   
我这里使用的是sar用户和sar库以及tbs_sar表空间, 首先初始化数据库 :   
```  
create role sar nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'DIGOAL';  
create tablespace tbs_sar owner digoal location '/home/sar/tbs_sar';  
create database sar with owner digoal template template0 encoding 'UTF8' tablespace tbs_sar;  
grant all on database sar to sar;  
grant all on tablespace tbs_sar to sar;  
\c sar sar  
create schema sar authorization sar;  
```  
创建序列, 函数 和表 :   
```  
create sequence seq_server_id start with 1 increment by 1;  
```  
存放Server信息, 本例只为说明方法, 所以这个表设计得比较简单, 实际使用当中可以加入其他字段, 如IDC, 维护人, 项目名称等。  
```  
create table server(  
id int primary key,  
ip inet not null unique,  
info text);  
```  
根据IP地址获取ServerID的函数, 没有则新分配  
```  
create or replace function get_server_id (i_ip inet) returns int as $BODY$  
declare  
v_id int;  
begin  
select id into v_id from server where ip=i_ip;  
if not found then  
insert into server(id, ip) values(nextval('seq_server_id'::regclass), i_ip);  
select id into v_id from server where ip=i_ip;  
end if;  
return v_id;  
exception   
when others then  
return -1;  
end  
$BODY$ language plpgsql;  
```  
根据ServerID获取IP的函数  
```  
create or replace function get_ip (i_id int) returns inet as $BODY$  
declare  
v_ip inet;  
begin  
select ip into v_ip from server where id=i_id;  
return v_ip;  
exception  
when others then  
return '0.0.0.0/0'::inet;  
end  
$BODY$ language plpgsql;  
```  
根据ServerID获取服务器info的函数  
```  
create or replace function get_info (i_id int) returns text as $BODY$  
declare  
v_info text;  
begin  
select info into v_info from server where id=i_id;  
return v_info;  
exception  
when others then  
return 'no info';  
end  
$BODY$ language plpgsql;  
```  
统计昨天未收集到SAR日志的函数  
```  
create or replace function get_server_nodata_yesterday() returns setof text as $BODY$  
declare  
v_result text;  
begin  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_context where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_context: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_context where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_cpu where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_cpu: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_cpu where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_inode where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_inode: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_inode where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_io where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_io: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_io where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_load where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_load: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_load where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_mem where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_mem: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_mem where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_mem_swap where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_mem_swap: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_mem_swap where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_page where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_page: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_page where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_proc where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  
if found then  
return next 'sar_proc: ';  
return query select s1.ip||', '||s1.info from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_proc where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null;  
end if;  
perform 1 from (select s1.* from server s1 left outer join  
(select * from (select server_id,row_number() over (partition by server_id order by s_date desc) from sar_swap where s_date=current_date-1) t1   
where row_number=1) t2 on (s1.id=t2.server_id) where t2.server_id is null) t;  