step was most effective for ransomware families with multiple
variants, such as Cerber [32].
We validate the cluster purity by manually looking at execu-
tion screenshots (see Section III), checking that all screenshots
belong to the same family. We also note that no generated
cluster includes seeds from more than one ransomware family.
By using this labelled dataset, we count the number of new
ransomware binaries as discovered on VirusTotal every day,
based on both the seed and the expanded set of binaries.
31, 2017.6 For each ransomware family on the y-axis, we
show three types of events. On the gray horizontal line that
corresponds to a ransomware family, we denote the daily
bitcoin inﬂow with colored bands. As the color temperature
increases from “cold” to “warm,” the daily bitcoin values of
inﬂows also increase. We have converted the bitcoin amounts
into US Dollars based on the USD-Bitcoin exchange rate
on the day the ransomware cluster received the bitcoins.
Overlaid on top of the colored bands are X’s that denote the
time when a seed ransom address received payments from
real or synthetic victims. Some of the X’s may appear to
overlap, as the payments may have occurred within a short
period of time. As the clusters are constructed based on seed
ransom addresses, by deﬁnition, the X’s must appear within the
colored bands. While the colored bands show inﬂows, the blue
circles immediately above the bands indicate the discovery of
new binaries on a given day for a ransomware family. The
size of each circle denotes the relative number of binaries
within the family. Finally, above the blue circles are the green
circle, the sizes of which denote the relative number of Google
searches.
This comparison offers a qualitative sanity check for both
our binary classiﬁcation and address clustering. To facilitate a
quantitative comparison, we measure the overlap among three
types of events: a ransomware cluster receiving bitcoins (B),
VirusTotal detecting new binaries (V), and the ransomware
family appearing in Google Trends (G). Two events overlap
if both events occur in some 7-day period. We compute the
conditional probability for these three types of events. Given
a ransomware family, for instance, Pr[V (cid:2)B] is the probability
of VirusTotal detecting at least a new binary (possibly due
to polymorphism) in a random week, given that the cluster
received some bitcoins during the same week. We show these
conditional probabilities in Table III. Cerber, in particular,
has the highest probability of overlap among all three events,
whereas CryptoWall has one of the lowest.
A low Pr[V (cid:2)B] value, as is the case for CoinVault, Cryp-
toWall, and Dharma, suggests that we are likely missing
Result of comparison: Using the three events above, we
present this comparison in Figure 2, where the x-axis shows
the period of our study from November 3, 2012 to August
6We do not apply Filter 1 (Section IV-F) to bitcoin inﬂows in the ﬁgure. If a
given period has new binaries and/or Google searches but no bitcoin payments,
it is difﬁcult to visually distinguish whether we are missing payment clusters,
or Filter 1 has removed the Bitcoin transactions.
623
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:14 UTC from IEEE Xplore.  Restrictions apply. 
TABLE III: Conditional probabilities of a ransomware cluster
receiving bitcoins (B), VirusTotal detecting new binaries (V),
and the ransomware family appearing in Google Trends (G)
in any 7-day periods. All units are in percentages.
Pr[B(cid:2)V ]
95.3
88.9
81.3
4.8
19.0
0.0
100.0
50.5
95.8
92.3
Family
Cerber
CoinVault
CryptXXX
CryptoDefense
CryptoLocker
CryptoWall
Dharma
Locky
Spora
WannaCry
Pr[B(cid:2)G]
89.8
60.0
44.7
4.8
25.5
34.5
67.4
57.8
71.4
42.3
Pr[V (cid:2)B]
77.2
4.8
56.5
87.5
63.0
0.0
1.8
94.3
76.7
75.0
Pr[G(cid:2)B]
100.0
20.0
91.3
87.5
100.0
95.1
51.8
98.1
100.0
68.8
binaries. This result is consistent with our binary classiﬁcation
results in Table II where we only discovered 22 CoinVault
and 5 Dharma binaries (likely due to the lack of YARA
rules). However, the correlation between Google Trends and
payments (Pr[G(cid:2)B]) is higher for all these families. A low
Pr[B(cid:2)V ] or Pr[B(cid:2)G] implies that we might be missing clus-
ters; we expect that for a ransomware family, if we discover
new binaries and/or observe relevant Google searches, the
ransomware is likely to be receiving ransom payments from
victims. It is likely that we are missing most ransom payment
clusters for CryptoDefense, CryptoLocker, and CryptoWall.
We also appear to be missing some payment clusters for most
of the other families. This is likely caused by our limited
number of seed addresses and the amount of co-spending each
operator performs. However, it would be difﬁcult to validate
whether we are actually missing binaries or payment clusters
absent ground-truth.
F. Filtering Transactions
As we alluded to in Section IV-A, an inﬂow of bitcoins to
a ransomware cluster does not necessarily mean a real victim
ransom payment. It could be, for instance, another researcher
paying a synthetic victim or a completely non-ransomware-
related CoinJoin transaction which our CoinJoin heuristics
have failed to detect. Our goal is to examine inﬂows that come
from potentially real victims and estimate the revenue that a
ransomware family generates from ransom payments. To this
end, we develop a number of inﬂow ﬁlters, which remove
transactions from the inﬂows that are potentially unrelated to
victims making ransom payments.
Filter 1: First, we create Filter 1, which identiﬁes inﬂows that
are consistent with known ransom payment patterns. There
are two types of known patterns: (i) historically what ransom
amounts are paid by real victims [7], [6]; and (ii) our novel
method of identifying properties of the Bitcoin transaction
graph for such historical payments.
As an example for Pattern (i), we observe, from screen-
shots online and executing the ransomware itself, that Locky
demanded each victim pay a total ransom of 0.5n bitcoins (for
some integer n) [18], and that CryptXXX charged a ransom
of 1.2 bitcoins, 2.4 bitcoin, $500, or $1,000 per victim [33].
TABLE IV: An analysis of bitcoin inﬂows under different
ﬁlters. V1 offers a way to estimate the total revenue from
ransom payments for a given family.
Family
V0 (k$)
V1 (k$)
Cerber
CoinVault
CryptXXX
CryptoDefense
CryptoLocker
CryptoWall
Dharma
Locky
Spora
WannaCry
7,702
198
1,871
70
2,048
1,214
1,266
7,825
827
100
7,678
20
1,841
69
667
244
231
6,632
3
100
V1
V0 (%)
99.7
10.3
98.4
99.8
32.6
20.2
18.3
84.8
0.5
99.4
V2 (k$)
3,990
18
858
28
691
529
631
3,032
131
36
V2
V0 (%)
51.8
9.3
45.9
41.3
33.8
43.6
49.9
38.7
15.9
36.5
V3
V0 (%)
51.7
1.3
45.5
41.3
11.1
9.2
8.1
33.2
0.1
36.3
Using this pattern, if, for an inﬂow to a ransomware cluster,
the total amount of bitcoins or US Dollars sent is consistent
with the known ransom amounts above, we assume that the
inﬂow is likely to be a ransom payment. The output address in
the inﬂow is likely to be a ransom address; we call the output
address a likely ransom address. As an illustration, if Address
3 in Figure 1(i) receives some increments of 0.5 bitcoins, then
it is a likely ransom address for Potential Victim 1.
However, certain ransomware families do not have ﬁxed
ransom amounts, so we look for Pattern (ii). This pattern
describes properties in the Bitcoin transaction graph that we
observe in real/synthetic victim payments. For instance, any
payments received by seed ransom addresses are potentially
victim payments, especially for ransomware families where a
single ransom address is used for multiple victims; inﬂows to
seed ransom addresses therefore satisfy Filter 1. On the other
hand, some families generate unique ransom addresses for
each victim. For these families, we analyze how bitcoins move
after known victims have paid. Using Cerber as an example,
we observe that, after a synthetic victim transfers bitcoins
into his ransom address, all the bitcoins are emptied into a
unique aggregation address, which subsequently transfers all
the bitcoins by co-spending with other wallet addresses.
We use Figure 1(ii) to illustrate how we use Pattern (ii) to
identify a potential Cerber ransom address. Suppose Address
10, an address in Cerber’s cluster, is used in two transactions:
once receiving all bitcoins from some Address 7 (not
in
Cerber’s cluster yet), before subsequently sending the bitcoins
away by co-spending with other addresses. Suppose, further,
that Address 7 is never co-spent, and that it sends all the
received bitcoins into Address 10. Both of these observations
are consistent with how bitcoins ﬂow for all our synthetic
victim payments. As such, we say that Address 10 is a likely
aggregation address, and Address 7 is a likely ransom address
to which some Potential Victim 2 made a ransom payment.
We include Address 7 in the expanded cluster of Cerber. In
general, our method of ﬁltering by Pattern (ii) is not restricted
to Cerber and can be applied to other ransomware families that
have special properties in their Bitcoin transaction graphs.
We show the results of ﬁltering in Table IV. For each
family’s cluster, we ﬁrst apply Filter 0 as a baseline, which
does not ﬁlter any inﬂows. Bitcoin amounts sent by any
Filter 0 inﬂows are denoted as V0, converted into US Dollars.
624
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:14 UTC from IEEE Xplore.  Restrictions apply. 
2,000,000
1,750,000
1,500,000
1,250,000
1,000,000
750,000
500,000
250,000
0
BTC-e.com
Bithumb.com
Coin.mx
Coinbase.com
.
Korbit.co.kr
.
LocalBitcoins.com
.
Misc
Unknown
Family
Cerber
CryptXXX
CryptoDefense
Locky
WannaCry
WannaCry
Locky
CryptoDefense
CryptXXX
Cerber
2
0
-
4
1
0
2
3
0
-
4
1
0
2
4
0
-
4
1
0
2
2
0
-
6
1
0
2
3
0
-
6
1
0
2
4
0
-
6
1
0
2
5
0
-
6
1
0
2
6
0
-
6
1
0
2
7
0
-
6
1
0
2
8
0
-
6
1
0
2
9
0
-
6
1
0
2
0
1
-
6
1
0
2
1
1
-
6
1
0