# Title: fs-PGBR: A Scalable and Delay-Sensitive Cloud Routing Protocol

## Authors
- Julien Mineraud
- Sasitharan Balasubramaniam
- Jussi Kangasharju
- William Donnelly

### Affiliations
- **Telecommunications Software & Systems Group, Waterford Institute of Technology, Ireland**
  - Julien Mineraud, William Donnelly, Sasitharan Balasubramaniam
  - Email: {jmineraud, wdonnelly, sasib}@tssg.org
- **Department of Computer Science, University of Helsinki, Finland**
  - Jussi Kangasharju
  - Email: Jussi.Kangasharju@cs.helsinki.fi

## Abstract
This paper introduces an enhanced version of a fully distributed routing protocol, specifically tailored for cloud computing infrastructure. Simulation results demonstrate that the proposed protocol is highly effective in discovering cloud services in a scalable manner with minimal latency.

## Categories and Subject Descriptors
C.2.2 [Network Protocols]: Routing Protocols

## General Terms
Performance

## Keywords
Scalable route discovery, Cloud computing infrastructure

## 1. Motivation
Cloud computing is recognized as the next generation infrastructure, poised to revolutionize how users access services. The growth of computing devices, particularly mobile devices, and the demand for rich services on resource-constrained devices have driven the development of cloud computing. This vision enables users to offload services to high-powered storage facilities, where they can access infrastructures, platforms, and software within the cloud. Essentially, the cloud represents a network of high-powered data centers that provide a multitude of services to end-users on a pay-as-you-go model (Figure 1). While the cloud offers elastic resource consumption, it also presents new challenges for the underlying infrastructure. One such challenge is the dynamic traffic pattern in the network, which necessitates more scalable, efficient, and adaptive routing algorithms.

In this paper, we propose a scalable routing algorithm called Fast Search - Parameterized Gradient Based Routing (fs-PGBR), which is fully distributed, scalable, and significantly reduces latency during route discovery. This algorithm extends the Parameterized Gradient Based Routing (PGBR) [1], which suffers from scalability issues as the network topology size increases.

**Copyright** is held by the author/owner(s).
SIGCOMM’12, August 13–17, 2012, Helsinki, Finland.
ACM 978-1-4503-1419-0/12/08.

![Figure 1: Cloud Computing Infrastructure](figure1.png)

## 2. Proposed Solution

### 2.1 PGBR
The original PGBR algorithm is bio-inspired, drawing from the bacteria motility process known as chemotaxis. In chemotaxis, bacteria move towards a destination by sensing an attractant gradient field in their environment. Similarly, the PGBR algorithm generates an increasing chemical gradient field that attracts packets to a destination node. The gradient field is calculated using the following equation:

\[ G_d(i \rightarrow j) = \alpha \cdot nl(j) + \beta \cdot lli(i \rightarrow j) + \gamma \cdot h_d(i \rightarrow j) \]

where:
- \( G_d(i \rightarrow j) \) is the gradient value of link \( i \rightarrow j \) for a packet destined for \( d \).
- \( nl(j) \) represents the node load value of neighbor node \( j \).
- \( lli(i \rightarrow j) \) is the load value of the link \( i \rightarrow j \).
- \( h_d(i \rightarrow j) \) is the normalized hop count of neighbor node \( j \) from node \( i \) to destination \( d \).
- \( \alpha, \beta, \) and \( \gamma \) are weighting parameters that provide service-oriented routing, allowing different weight sets to correspond to different service types.

The value of \( h_d(i \rightarrow j) \) is calculated during the topology formation and remains static. It is represented by:

\[ h_d(i \rightarrow j) = 1 - \frac{w_d(j)}{W_d} \]
where:
- \( w_d(j) \) is the minimum distance of node \( j \) to destination \( d \).
- \( W_d = \max(w_d(k)), \forall k \).

While PGBR offers several benefits suitable for the underlying network supporting the cloud infrastructure, it has a scalability issue. Specifically, the approach used to calculate \( h_d(i \rightarrow j) \) is not scalable when the topology includes a large number of nodes, which can be problematic for large-scale cloud infrastructure.

### 2.2 Hop Count Value for fs-PGBR
To address the scalability problem, we modified the calculation of \( h_d(i \rightarrow j) \) as follows:

\[ h_d(i \rightarrow j) = \frac{\max(w_d(k)) - w_d(i \rightarrow j)}{\max(w_d(k)) - \min(w_d(k))}, \forall k \text{ neighbors of } i \]

This modification allows each node \( i \) to compare the shortest path weight of its neighbor \( k \) and evaluate it against the maximum and minimum weights of its neighbors. If \( \max(w_d(k)) \) is reached, the hop count \( h_d(i \rightarrow j) \) is set to 1. This new calculation evaluates the hop count based on the immediate neighboring nodes and their relation to the shortest path, leading to a perturbation-based route discovery process that adapts to local conditions (e.g., node or link load).

## 3. Preliminary Evaluation
We evaluated and compared fs-PGBR with the original PGBR discovery mechanism using a custom-developed Java simulator. The simulation assessed two performance metrics based on a real-world large-scale topology (Sprintlink network). The weights for the shortest path were provided by the Rocketfuel project, and the load of each link was uniformly selected between 0 and 100% (loads are not symmetric). The simulation generated 100 source-destination pairs for each hop count distance, ranging from 1 to 7 hops. Each simulation was repeated 100 times with different loads and source-destination pair selections. We varied the value of \( \gamma \) from 0.1 to 1.0, reflecting the importance of the hop count weight with respect to the shortest path approach. Additionally, \( \alpha \) and \( \beta \) had similar weights, and their sum was set to 1.

As shown in Figure 2, we evaluated the number of hops required to successfully reach the destination and the discovered path length ratio (Figures 2a and 2b).

From Figures 2a and 2b, we observed that the new \( h_d(i \rightarrow j) \) calculation approach leads to minimal discovery time compared to the original approach, especially for long-distance sources. This is due to factors such as reduced discovery rejections from Time-To-Live (TTL) expiration. Consequently, the new extension also allows for more diverse parameter choices for fs-PGBR discoveries. As shown in Figure 2c, the resulting path maintains a smaller and more reasonable path length ratio compared to the original approach, demonstrating the effectiveness of fs-PGBR and its suitability for timely route discovery in cloud computing infrastructures.

![Figure 2: Performance evaluation of the new metric](figure2.png)

## 4. Cloud Computing Integration
Cloud computing requires fast discovery of services in large-scale data center networks. Once discovered, the paths must ensure that Quality-of-Service (QoS) and Quality-of-Experience (QoE) requirements are met. fs-PGBR provides individual routing paths that can adapt to each service's requirements in a fully distributed manner while minimizing the cost of discovery. It is particularly well-suited for cloud computing infrastructure built over large network topologies and can support high service churn rates and varying user demand.

## 5. Acknowledgements
This work has received support from Science Foundation Ireland via the "A Biologically inspired framework supporting network management for the Future Internet" starting investigator award (grant no. 09/SIRG/I1643).

## 6. References
[1] S. Balasubramaniam, J. Mineraud, P. Mcdonagh, P. Perry, L. Murphy, W. Donnelly, and D. Botvich. An Evaluation of Parameterized Gradient Based Routing With QoE Monitoring for Multiple IPTV Providers. IEEE Transactions on Broadcasting, 57(2):183–194, 2011.

[2] H. Ballani, P. Costa, T. Karagiannis, and A. Rowstron. Towards predictable datacenter networks. In Proceedings of the ACM SIGCOMM 2011 conference, SIGCOMM ’11, pages 242–253, New York, NY, USA, 2011.

[3] H. T. Dinh, C. Lee, D. Niyato, and P. Wang. A survey of mobile cloud computing: architecture, applications, and approaches. Wireless Communications and Mobile Computing, accepted, 2011.