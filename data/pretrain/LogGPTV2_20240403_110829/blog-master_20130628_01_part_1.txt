## PostgreSQL 如何精确计算表膨胀(fsm,数据块layout讲解) - PostgreSQL table exactly bloat monitor use freespace map data  
### 作者                                                       
digoal     
### 日期       
2013-06-28      
### 标签     
PostgreSQL , bloat , fsm , dead tuple , 表膨胀    
----    
## 背景    
对PostgreSQL数据库有一定了解的朋友都知道PostgreSQL的UPDATE, DELETE操作是通过新增tuple版本提供高并发处理的. 这样带来一个问题是需要经常vacuum 表, 回收老版本占用的存储空间. 只有回收的空间才能被重复利用, 如果回收不及时将会造成表的膨胀效应.  
那么怎么知道数据表有没有膨胀呢?  
方法举例如下 :   
## 一. 一般的做法是监控dead tuple和live tuple的比例.   
但是在执行完vacuum后, dead tuple会清除掉, 所以膨胀多少看不出来. 这种方法不适合监控表膨胀, 倒是适合监控dead tuple的比例(反推出是否存在长事务或者未开启autovacuum , 或者IO过于繁忙, DML操作频繁, 并且acuum不及时等等情况).  
例如 :   
创建测试表 :   
```  
digoal=# create table deadtuple_teste (id int, info text);  
CREATE TABLE  
```  
插入测试数据 :   
```  
digoal=# insert into deadtuple_teste select generate_series(1,100000),md5(random()::text);  
INSERT 0 100000  
```  
查看当前表的空间占用情况, 已占用834个page :   
```  
digoal=# select relpages from pg_class where relname='deadtuple_teste';  
 relpages   
----------  
      834  
(1 row)  
```  
查看live tuple和dead tuple : 当前没有dead tuple.  
```  
digoal=# select relname,n_live_tup,n_dead_tup from pg_stat_all_tables where relname='deadtuple_teste';  
     relname     | n_live_tup | n_dead_tup   
-----------------+------------+------------  
 deadtuple_teste |     100000 |          0  
(1 row)  
```  
删除29999条记录.  
```  
digoal=# delete from deadtuple_teste where id<30000;  
DELETE 29999  
```  
再次查看live tuple和dead tuple. 还是没有dead tuple, 原因是数据库开启了auto vacuum, 到达一定阈值后会自动触发, 回收掉了.  
```  
digoal=# select relname,n_live_tup,n_dead_tup from pg_stat_all_tables where relname='deadtuple_teste';  
     relname     | n_live_tup | n_dead_tup   
-----------------+------------+------------  
 deadtuple_teste |      70001 |          0  
(1 row)  
```  
如下 :   
```  
digoal=# select relname,n_live_tup,n_dead_tup,last_autoanalyze,last_autovacuum from pg_stat_all_tables where relname='deadtuple_teste';  
     relname     | n_live_tup | n_dead_tup |       last_autoanalyze        |        last_autovacuum          
-----------------+------------+------------+-------------------------------+-------------------------------  
 deadtuple_teste |      70001 |          0 | 2013-06-28 08:28:24.745492+08 | 2013-06-28 08:28:24.586153+08  
(1 row)  
```  
再次查看空间占用, 依然是834个page, 所以使用这种方法没法监控数据表的膨胀.  
```  
digoal=# select relpages from pg_class where relname='deadtuple_teste';  
 relpages   
----------  
      834  
(1 row)  
```  
## 二. 另一种方法是通过计算行平均占用空间计算出live tuple占用的空间, 计算出膨胀.  
这种方法不适合行的占用空间偏离非常大的情况, 如某些行占用1KB, 有的可能占用10KB. 最后导致空间不好估算.  
测试依然使用以上环境,  
但是为了数据准确, 需要将page的头信息, tuple的头信息, item信息记录在内.  
Table 58-2. Overall Page Layout  