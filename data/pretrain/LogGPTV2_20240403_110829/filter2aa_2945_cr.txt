### Adjusting the Window Size and Zooming

If the window appears too small (or too large), you can adjust the zoom level using the **Zoom** drop-down list box located at the bottom left of the **Design View** window.

### Reviewing the XAML Markup for the MainPage

The `MainPage` contains a single `Grid` control. 

```xml
<Grid>
    <!-- Grid content goes here -->
</Grid>
```

**Note:** The `Background` property of the `Grid` control is specified using a style, which will be covered later in this chapter. For now, focus on understanding how the `Grid` control works, as it is fundamental to building scalable and flexible user interfaces.

The `Page` element can only contain a single item. If desired, you can replace the `Grid` control with another control, such as a `Button`, as shown below:

```xml
<Button Content="Click Me" />
```

However, a form containing only a button is not very useful. If you attempt to add a second control, such as a `TextBox`, without a proper container, your code will not compile, and you will encounter errors like those shown in the following image:

### Purpose of the Grid Control

The `Grid` control is designed to facilitate adding multiple items to a page. It is an example of a container control that can hold other controls and allows you to specify their positions within the grid. Other container controls, such as `StackPanel`, automatically arrange their child controls in a vertical or horizontal stack.

In this application, you will use a `Grid` to hold the controls necessary for a user to enter and view customer data.

### Adding a TextBlock Control

1. Add a `TextBlock` control to the page either by dragging it from the **Toolbox** or by typing the XAML directly into the XAML pane, on the blank line after the opening `<Grid>` tag, like this:

```xml
<TextBlock HorizontalAlignment="Left" Margin="400,90,0,0" TextWrapping="Wrap" Text="Adventure Works Customers" VerticalAlignment="Top" FontSize="50" />
```

**Tip:** If the **Toolbox** does not appear, click **Toolbox** on the **View** menu. You can also type the XAML markup directly into the XAML window instead of dragging controls from the **Toolbox**.

2. Set the properties of the `TextBlock` control as follows:

| Property          | Value  |
|-------------------|--------|
| `HorizontalAlignment` | `Left` |
| `Margin`          | `400,90,0,0` |
| `TextWrapping`    | `Wrap` |
| `Text`            | `Adventure Works Customers` |
| `VerticalAlignment` | `Top` |
| `FontSize`        | `50` |

The resulting text should appear in the **Design View** window.

### Adding More TextBlock Controls

Add four more `TextBlock` controls to the page. These controls will serve as labels for the data displayed on the page. Use the following values to set their properties:

| Control     | Property          | Value  |
|-------------|-------------------|--------|
| First Label | `HorizontalAlignment` | `Left` |
|             | `Margin`          | `330,190,0,0` |
|             | `TextWrapping`    | `Wrap` |
|             | `Text`            | `ID` |
|             | `VerticalAlignment` | `Top` |
|             | `FontSize`        | `20` |
| Second Label| `HorizontalAlignment` | `Left` |
|             | `Margin`          | `460,190,0,0` |
|             | `TextWrapping`    | `Wrap` |
|             | `Text`            | `Title` |
|             | `VerticalAlignment` | `Top` |
|             | `FontSize`        | `20` |
| Third Label | `HorizontalAlignment` | `Left` |
|             | `Margin`          | `620,190,0,0` |
|             | `TextWrapping`    | `Wrap` |
|             | `Text`            | `First Name` |
|             | `VerticalAlignment` | `Top` |
|             | `FontSize`        | `20` |
| Fourth Label| `HorizontalAlignment` | `Left` |
|             | `Margin`          | `975,190,0,0` |
|             | `TextWrapping`    | `Wrap` |
|             | `Text`            | `Last Name` |
|             | `VerticalAlignment` | `Top` |
|             | `FontSize`        | `20` |

You can either drag the controls from the **Toolbox** and set their properties using the **Properties** window, or type the following XAML markup into the XAML pane:

```xml
<TextBlock HorizontalAlignment="Left" Margin="330,190,0,0" TextWrapping="Wrap" Text="ID" VerticalAlignment="Top" FontSize="20" />
<TextBlock HorizontalAlignment="Left" Margin="460,190,0,0" TextWrapping="Wrap" Text="Title" VerticalAlignment="Top" FontSize="20" />
<TextBlock HorizontalAlignment="Left" Margin="620,190,0,0" TextWrapping="Wrap" Text="First Name" VerticalAlignment="Top" FontSize="20" />
<TextBlock HorizontalAlignment="Left" Margin="975,190,0,0" TextWrapping="Wrap" Text="Last Name" VerticalAlignment="Top" FontSize="20" />
```

### Adding TextBox Controls

Below the `TextBlock` controls, add three `TextBox` controls to display the text `ID`, `First Name`, and `Last Name`. Use the following values to set their properties:

| Control      | Property          | Value  |
|--------------|-------------------|--------|
| First TextBox| `x:Name`          | `id` |
|              | `HorizontalAlignment` | `Left` |
|              | `Margin`          | `300,240,0,0` |
|              | `TextWrapping`    | `Wrap` |
|              | `Text`            | `""` |
|              | `VerticalAlignment` | `Top` |
|              | `FontSize`        | `20` |
|              | `IsReadOnly`      | `True` |
| Second TextBox| `x:Name`          | `firstName` |
|              | `HorizontalAlignment` | `Left` |
|              | `Margin`          | `550,240,0,0` |
|              | `TextWrapping`    | `Wrap` |
|              | `Text`            | `""` |
|              | `VerticalAlignment` | `Top` |
|              | `FontSize`        | `20` |
| Third TextBox| `x:Name`          | `lastName` |
|              | `HorizontalAlignment` | `Left` |
|              | `Margin`          | `875,240,0,0` |
|              | `TextWrapping`    | `Wrap` |
|              | `Text`            | `""` |
|              | `VerticalAlignment` | `Top` |
|              | `FontSize`        | `20` |

The equivalent XAML markup for these controls is:

```xml
<TextBox x:Name="id" HorizontalAlignment="Left" Margin="300,240,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" FontSize="20" IsReadOnly="True" />
<TextBox x:Name="firstName" HorizontalAlignment="Left" Margin="550,240,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" FontSize="20" />
<TextBox x:Name="lastName" HorizontalAlignment="Left" Margin="875,240,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" FontSize="20" />
```

### Adding a ComboBox Control

Add a `ComboBox` control to the form, placing it below the `Title` `TextBlock` control, between the `id` and `firstName` `TextBox` controls. Set the properties of this control as follows:

| Property          | Value  |
|-------------------|--------|
| `x:Name`          | `title` |
| `HorizontalAlignment` | `Left` |
| `Margin`          | `420,240,0,0` |
| `VerticalAlignment` | `Top` |
| `Width`           | `100` |
| `FontSize`        | `20` |

The equivalent XAML markup for this control is:

```xml
<ComboBox x:Name="title" HorizontalAlignment="Left" Margin="420,240,0,0" VerticalAlignment="Top" Width="100" FontSize="20">
    <ComboBoxItem Content="Mr." />
    <ComboBoxItem Content="Mrs." />
    <ComboBoxItem Content="Ms." />
    <ComboBoxItem Content="Dr." />
</ComboBox>
```

### Adding More TextBox and TextBlock Controls

Add two more `TextBox` controls and two more `TextBlock` controls to the form. The `TextBox` controls will allow the user to enter an email address and a telephone number for the customer, and the `TextBlock` controls will provide the labels for the text boxes. Use the following values to set their properties:

| Control      | Property          | Value  |
|--------------|-------------------|--------|
| First TextBlock| `HorizontalAlignment` | `Left` |
|              | `Margin`          | `300,390,0,0` |
|              | `TextWrapping`    | `Wrap` |
|              | `Text`            | `Email` |
|              | `VerticalAlignment` | `Top` |
|              | `FontSize`        | `20` |
| First TextBox| `x:Name`          | `email` |
|              | `HorizontalAlignment` | `Left` |
|              | `Margin`          | `450,390,0,0` |
|              | `TextWrapping`    | `Wrap` |
|              | `Text`            | `Leave Empty` |
|              | `VerticalAlignment` | `Top` |
|              | `Width`           | `400` |
|              | `FontSize`        | `20` |
| Second TextBlock| `HorizontalAlignment` | `Left` |
|              | `Margin`          | `300,540,0,0` |
|              | `TextWrapping`    | `Wrap` |
|              | `Text`            | `Phone` |
|              | `VerticalAlignment` | `Top` |
|              | `FontSize`        | `20` |
| Second TextBox| `x:Name`          | `phone` |
|              | `HorizontalAlignment` | `Left` |
|              | `Margin`          | `450,540,0,0` |
|              | `TextWrapping`    | `Wrap` |
|              | `Text`            | `Leave Empty` |
|              | `VerticalAlignment` | `Top` |
|              | `Width`           | `200` |
|              | `FontSize`        | `20` |

The XAML markup for these controls should look like this:

```xml
<TextBlock HorizontalAlignment="Left" Margin="300,390,0,0" TextWrapping="Wrap" Text="Email" VerticalAlignment="Top" FontSize="20" />
<TextBox x:Name="email" HorizontalAlignment="Left" Margin="450,390,0,0" TextWrapping="Wrap" Text="Leave Empty" VerticalAlignment="Top" Width="400" FontSize="20" />
<TextBlock HorizontalAlignment="Left" Margin="300,540,0,0" TextWrapping="Wrap" Text="Phone" VerticalAlignment="Top" FontSize="20" />
<TextBox x:Name="phone" HorizontalAlignment="Left" Margin="450,540,0,0" TextWrapping="Wrap" Text="Leave Empty" VerticalAlignment="Top" Width="200" FontSize="20" />
```

### Running the Application

1. On the **Debug** menu, click **Start Debugging** to build and run the app.
2. The app starts and displays the form. You can enter data into the form and select a title from the combo box, but the form may not look good depending on the screen resolution. If the form looks fine, try dragging the right-hand edge to make it narrower.
3. If the form looks awful, with the right side cut off, much of the text wrapped around, and the `Last Name` text box truncated, you can expand the display by clicking and dragging the right side of the window.

By following these steps, you will have a well-structured and functional form for entering and viewing customer data.