rv-rv-r-- 1 bi11 music 0 2008-03-24 20:22 test_file
[bil1@linuxbox -]$
119
---
## Page 121
现在，创建的文件和目录都具有正确的权限，允许用户组music的所有成员在目录Music
中创建文件和目录。
剩下一个问题是关于umask命令的°umask命令设置的掩码值只能在当前shell会话中生
效，若当前shell会话结束后，则必须重新设置。在这本书的第三部分，我们将看一下，怎样使
掩码值永久生效。
10.12更改用户密码
这一章最后一个话题，我们将讨论自己帐号的密码（和其他人的密码，如果你具有超级用户权
限）。使用passwd命令，来设置或更改用户密码。命令语法如下所示：
[xosn]  passed
只要输入passwd命令，就能更改你的密码。shell会提示你输入你的旧密码和你的新密码
[nedlinuxbox -]$ passud
(current) UNIX passvord:
Mev UNIX passvord:
相似的密码、字典中的单词作为密码或者是太容易猜到的密码：
[nellinuxbox -]$ passvd
(current) UNIX passvord:
Nev UNIX passvord:
BAD PASSVORD: is too similar to the old one
Nev UNIX passvord:
BAD PASSWORD: it is WAY too short
Mev UNIX passvord:
BAD PASSWORD: it is based on a dictionary vord
如果你具有超级用户权限，你可以指定一个用户名作为passwd命令的参数，这样可以设置
另一个用户的密码。还有其它的passwd命令选项对超级用户有效，允许帐号锁定，密码失效，
等等。详细内容，参考passwd命令的手册页。
120
---
## Page 122
10.13拓展阅读
·Wikipedia上面有一篇关于malware（恶意软件）好文章：
http://en.wikipedia.org/wiki/Malware
还有一系列的命令行程序，可以用来创建和维护用户和用户组。更多信息，查看以下命令的
手册页：
*adduser
useradd
groupadd
121
---
## Page 123
11
进程
通常，现在的操作系统都支持多任务，意味着操作系统通过在一个执行中的程序和另一个程序
之间快速地切换造成了一种它同时能够做多件事情的假象。Linux内核通过使用进程来管理多
任务。进程，就是Linux组织安排正在等待使用CPU的各种程序的方式。
有时候，计算机变得呆滞，运行缓慢，或者一个应用程序停止响应。在这一章中，我们将看
一些可用的命令行工具，这些工具帮助我们查看程序的执行状态，以及怎样终止行为不当的进
程。
这一章将介绍以下命令：
·Ds一报告当前进程快照
·top一显示任务
·jobs一列出活跃的任务
·bg一把一个任务放到后台执行
·fg一把一个任务放到前台执行
·kill一给一个进程发送信号
·killall一杀死指定名字的进程
·shutdown一关机或重启系统
11.1进程是怎样工作的
当系统启动的时候，内核先把一些它自己的活动初始化为进程，然后运行一个叫做init的程
序。init，依次地，再运行一系列的称为init脚本的shell脚本（位于/etc），它们可以启动所有
的系统服务。其中许多系统服务以守护（daemon）程序的形式实现，守护程序仅在后台运行，
122
---
## Page 124
没有任何用户接口（UserInterface)。这样，即使我们没有登录系统，至少系统也在忙于执行一
些例行事务。
在进程方案中，一个程序可以发动另一个程序被表述为一个父进程可以产生一个子进程。
内核维护每个进程的信息，以此来保持事情有序。例如，系统分配给每个进程一个数字，这
个数字叫做进程（process）ID或PID。PID号按升序分配，init进程的PID总是1。内核也对
分配给每个进程的内存和就绪状态进行跟踪以便继续执行这个进程。像文件一样，进程也有所
有者和用户ID.有效用户ID，等等。
11.2查看进程
查看进程，最常使用地命令（有几个命令）是ps(process status)°ps程序有许多选项，它最简
单地使用形式是这样的：
[ne@linuxbox -]$ ps
ALL QId
TIME CD
5198 pts/1
00:00:00 bash
10129 pts/100:00:00 ps
上例中，列出了两个进程，进程5198和进程10129.各自代表命令bash和ps°正如我们
所看到的，默认情况下，Ds不会显示很多进程信息，只是列出与当前终端会话相关的进程。为
了得到更多信息，我们需要加上一些选项，但是在这样做之前，我们先看一下ps命令运行结果
的其它字段。TTY是“Teletype"（直译电传打字机）的简写，是指进程的控制终端。TTY足足
显示了Unix的年代久远。TIME字段表示进程所消耗的CPU时间数量。正如我们所看到的，
这两个进程使计算机工作起来很轻松。
如果给ps命令加上选项，我们可以得到更多关于系统运行状态的信息：
x sd s[-xoqnutoou]
PID TTYSTATTIME COMMAND
2799?
Ss1
0:00 /usr/libexec/bonobo-activation-server —ac
2820 ?S1
0: 01 /usr/libexec/evolution-data=server-1.10 --
and nany more...
123
---
## Page 125
加上"x”选项（注意没有开头的""字符），告诉ps命令，展示所有进程，不管它们由什么
终端（如果有的话）控制。在TTY一栏中出现的“？”，表示没有控制终端。使用这个“x”选
项，可以看到我们所拥有的每个进程的信息。
因为系统中正运行着许多进程，所以ps命令的输出结果很长。为了方便查看，将ps的输
出管道到less中通常很有帮助。一些选项组合也会产生很长的输出结果，所以最大化终端仿真
器窗口可能也是一个好主意。
输出结果中，新添加了一栏，标题为STAT。STAT是“state”的简写，它揭示了进程当前
状态：
状态
含义
R
运行中。这意味着，进程正在运行或准备运行。
S
正在睡眠。进程没有运行，而是，正在等待一个事件，比如
说，一个按键或者网络分组。
D
不可中断睡眠。进程正在等待I/O，比方说，一个磁盘驱动
器的I/O°
T
已停止.已经指示进程停止运行。稍后介绍更多。
Z
但是它的父进程还没有清空它。（父进程没有把子进程从进
程表中删除
<
一个高优先级进程。这可能会授予一个进程更多重要的资
源，给它更多的CPU时间。进程的这种属性叫做niceness°
具有高优先级的进程据说是不好的（lessnice），因为它占用
比较多的CPU时间，这样就给其它进程留下很少时间。
N
当其它高优先级进程被服务了之后，才会得到处理器时间。
表11-1：进程状态
进程状态信息之后，可能还跟随其他的字符。这表示各种外来进程的特性。详细信息请看
ps手册页。
）
xme od s[- xoqxnustgou]
USERPIDXCPUZHEH
ZSA
RSS TTY
STATSTART
TTINE COMMAND
124
---
## Page 126
root
10.00.0
2136
644?
Ss
Mar05
50:31init
root
0
0
Stlt;
Mar050:00[kt]
and nany more...
这个选项组合，能够显示属于每个用户的进程信息。使用这个选项，可以唤醒“BSD风格”
的输出结果。Linux版本的ps命令，可以模拟几个不同Unix版本中的ps程序的行为。通过
这些选项，我们得到这些额外的列。
标题
含义
USER
用户ID.进程的所有者。
%CPU
以百分比表示的CPU使用率
%MEM
以百分比表示的内存使用率
VSZ
虚拟内存大小
RSS
进程占用的物理内存的大小，以千字节为单位。
START
进程启动的时间。若它的值超过24小时，则用天表示。
11.3用top命令动态查看进程
虽然ps命令能够展示许多计算机运行状态的信息，但是它只是提供ps命令执行时刻的机器状
态快照。为了看到更多动态的信息，我们使用top命令：
[nedlinuxbox -]$ top
top程序以进程活动顺序显示连续更新的系统进程列表。（默认情况下.每三秒钟更新一次），
"top”这个名字来源于top程序是用来查看系统中“顶端”进程的。top显示结果由两部分组
成：最上面是系统概要，下面是进程列表，以CPU的使用率排序。
top - 14:59:20 up 6:30, 2 users, 1oad average: 0.07, 0.02, 0.00
Tasks: 109 total,  1 running, 106 sleeping,
0 stopped,
2 zonbie
Cpu(s) : 0.7%us, 1.0%sy, 0.0%ni, 98.3%id, 0.0%ua, 0.0%hi, 0.0%si
Men:3
319496k total,314860k used,4636k free,19392k buff
Suap: 875500k total, 149128k used,
726372k free,114676k cach
125
---
## Page 127
PID USER
PRNI
VIRT
RESSHR S XCPU XMEMTIME+
COMMAND
6244e
3919 31752 3124 2188 S 6.3 1.016:24.42 trackerd
其中系统概要包含许多有用信息。下表是对系统概要的说明：
行号
字段
意义
1
top
程序名。
14:59:20
当前时间。
up 6:30
这是正常运行时间。它是计算机从上次启动到现在所
运行的时间。在这个例子里，系统已经运行了六个半
小时。
2 users
有两个用户登录系统。
load average:
加载平均值是指，等待运行的进程数目，也就是说，处
于可以运行状态并共享CPU的进程个数。这里展示
了三个数值，每个数值对应不同的时间段。第一个是
最后60秒的平均值，下一个是前5分钟的平均值，最
后一个是前15分钟的平均值。若平均值低于1.0，则
指示计算机工作不忙碌。
2
Tasks:
总结了进程数目和这些进程的各种状态。
3
Cpu(s):
这一行描逾了CPU正在进行的活动的特性。
0.7%us
0.7%的CPU被用于用户进程。这意味着进程在内核
之外。
1.0%sy
1.0%的CPU时间被用于系统（内核）进程。
0.0%ni
0.0%的CPU时间被用于"nice”（低优先级）进程。
98.3%id
98.3%的CPU时间是空闲的。
0.0%wa
0.0%的CPU时间来等待I/O。
4
Mem:
展示物理内存的使用情况。
5
Swap:
展示交换分区（虚拟内存）的使用情况。
表11-3:top命令信息字段
top程序接受一系列从键盘输入的命令。两个最有趣的命令是h和q°h，显示程序的帮助
126
---
## Page 128
屏幕，q.退出top程序。
两个主要的桌面环境都提供了图形化应用程序，来显示与top程序相似的信息（和Windows
中的任务管理器差别不多），但是我觉得top程序要好于图形化的版本，因为它运行速度快，井
且消费很少的系统资源。毕竟，我们的系统监测程序不能成为我们试图追踪的系统意工的原
因。
11.4控制进程
现在我们可以看到和监测进程，让我们得到一些对它们的控制权。为了我们的实验，我们将使
用一个叫做xlogo的小程序，作为我们的实验品。这个xlogo程序是X窗口系统（使图形界面
显示在屏幕上的底层引擎）提供的示例程序，这个程序仅显示一个大小可调的包含X标志的窗
口。首先，我们需要知道测试的实验对象：
[ne@linuxbox -]$ x1ogo
命令执行之后，一个包含X标志的小窗口应该出现在屏幕的某个位置上。在一些系统中
xlogo命令会打印一条警告信息，但是不用理会它。
小贴士：如果你的系统不包含xlogo程序，试着用gedit或者kwrite来代替。
通过调整它的窗口大小，我们能够证明xlogo程序正在运行。如果这个标志以新的尺寸被
重画，则这个程序正在运行。