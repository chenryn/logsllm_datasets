Hence, we implement a cell selection algorithm where the
measurement report is sent by the UE only when one of the
events conﬁgured by the primary cell is triggered. We discuss
the four triggering conditions below.
1) A1 algorithm (Good-serving-cell): The serving secondary
cell radio quality becomes better than the absolute thresh-
old. On receiving this report, the primary cell maintains
the secondary cell as a serving cell.
2) A2 algorithm (Bad-serving-cell): The serving cell radio
quality becomes worse than the absolute threshold. This
is an indication of bad radio conditions for the secondary
serving cell and the primary cell will eventually remove
the secondary cell.
3) A4 algorithm (Good-inter-neighbour-cell): The inter-
frequency neighbouring cell radio quality becomes better
than the absolute threshold. This will lead to the primary
cell adding the inter-frequency neighboring cell to the list
of serving cells.
4) A6 algorithm (Good-intra-neighbour-cell): The report is
triggered if an intra-frequency cell’s radio quality becomes
offset better than the current serving secondary cell. This
will lead to the removal of the current serving secondary
cell and the addition of the better intra-frequency neigh-
bour cell into the serving set.
Conﬁguration. Apart from the thresholds and offsets set by
the primary cell, two additional parameters are also conﬁg-
ured to avert triggering of unnecessary reports due to sudden
ﬂuctuation in the signal strength of cells.
1) Time-to-Trigger parameter is the duration of time for
which the triggering condition needs to be met to trig-
ger a measurement report.
2) Hysteresis is a delta value which makes sure that the mea-
sured signal strength is actually better (or worse).
3914    30th USENIX Security Symposium
USENIX Association
Table 3: Symbol Table
Symbol
Meaning
CID
f
T hres
Hys
T T T
NumServing
Con f ig
TimeElapsed
Cell ID
Frequency
Threshold conﬁguration parameter
Hysteresis conﬁguration parameter
Time-to-Trigger
Number of serving cells
Conﬁguration parameters for the triggers
Time elapsed since the last measurement
A.3 Implementation
We implement a time-driven emulator that emulates the event
triggers on the UE and the secondary cell selection in the
primary cell. In the emulator, a UE measures the serving and
intra-frequency cells every 100 milliseconds and applies Algo-
rithm 1 to checks if the new measurements trigger A1, A2, or
A6 event. For inter-frequency measurement, our measurement
gap is scheduled every 5 seconds to collect inter-frequency
measurements and apply Algorithm 2 to check for A4 event.
We set intra-frequency and inter-frequency measurement pe-
riod to be 800 milliseconds and 1000 milliseconds as per the
speciﬁcation [52] and hysteresis value as two based on the
observation in the real network traces. In case an event is
triggered, the measurement reports are sent back to the pri-
mary cell. The primary cell takes these measurement reports
as input for the selection algorithm and outputs the number
of conﬁgured secondary cells for the UE at that instant.
The Wi-Fi measurement consists of the Wi-Fi MAC, the
measured RSSI values, and the frequencies observed by the
smartphone every 100 milliseconds. Each MAC address is
a unique LAA cell ID, with the RSSI values emulating the
RSRP values. Finally, the frequencies of the Wi-Fi APs are
assumed to be the operating frequency of the emulated LAA
cells. The measurement reports are further divided into serv-
ing, intra-frequency, and inter-frequency neighbouring cells.
At the beginning of the emulation, we select one Wi-Fi AP
from each unique frequency to be the serving secondary cell
and the remaining as classiﬁed as intra- or inter-frequency
neighbours. We then execute our selection algorithm to up-
date the set of serving secondary cells with the conﬁguration
parameters set to maximize UE performance.
Algorithm 1 presents the implementation of the A1, A2, A6
algorithm. The algorithm takes as input the signal quality of
serving and intra-frequency cells, denoted by Measurement,
the conﬁguration parameters denoted as Con f ig, NumServing
which is the total number of serving cells at time t − 1 and
the time elapsed since the previous measurement, denoted as
TimeElapsed. We apply the algorithm on each of the serving
and intra-frequency cell measurements. NumServing is updated
based on the triggered events. Finally, the algorithm outputs
the NumServing at time t and the set of updated serving cells.
Algorithm 2 presents the implementation of the A4 algorithm.
Table 3 describes the symbols used in the algorithm.
Algorithm 1: Intra-Frequency Measurement Algorithm
1 Function
Intra-Frequency-Measurement-Algorithm(Con f ig ,
Measurement , NumServing , TimeElapsed):
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
[CIDServing, RSSIServing, fServing] ←
getServingCell(Measurement)
[CIDIntra, RSSIIntra, fIntra] ←
getIntraFreqCell(Measurement)
foreach SCell in CIDServing do
if RSSISCell > A1Thres + A1Hys then
if A1TTT ≤ 0 then
TRIGGER A1
else
end
A1TTT← A1TTT -TimeElapsed
else if RSSISCell  RSSISCell + A6Off + A6Hys then
if A6TTT ≤ 0 then
TRIGGER A6
DeleteServingCell(CIDSCell)
AddServingCell(CIDMaxNeigh)
else
end
A6TTT←A6TTT - TimeElapsed
end
end
return NumServing
B CA Activation at a Low Rate
We empirically show that a low data rate application can still
trigger up to three CA. We collect ﬁngerprints of a 250-meter
outdoor path using Sony Xperia XZ1 phone while streaming
YouTube music videos at a 360p resolution. We stream the
ﬁve most popular videos on YouTube in 2019 and 2020, re-
spectively [53] and show the percentages of one CA, two CA,
and three CA activations for all ten videos in Figure 16. We
observe an average data rate of 15Mb/s while streaming the
ten videos indicating that a moderate data rate triggers three
CA as well.
C Effect of Network Load on CA Activation
We empirically show that the CA activation is strongly depen-
dent on the UE location and less on the load of the cellular
USENIX Association
30th USENIX Security Symposium    3915
Algorithm 2: Inter-Frequency Measurement Algorithm
1 Function
Inter-Frequency-Measurement-Algorithm(Con f ig ,
Measurement , NumServing , TimeElapsed):
[CIDInter , RSSIInter , fInter] ←
getInterFreqCell(Measurement)
fCurrent ← SelectInterFrequencyToMeasure( fInter)
[RSSIMaxNeigh,CIDMaxNeigh] ←
getBestInterNeigh( fCurrent )
if RSSIMaxNeigh > A4Thres + A4Hys then
if A4TTT ≤ 0 then
TRIGGER A4
AddServingCell(CIDMaxNeigh)
NumServing ← NumServing + 1
else
end
A4TTT←A4TTT - TimeElapsed
end
return NumServing
2
3
4
5
6
7
8
9
10
11
12
13
14
)
%
(
n
o
i
t
a
v
i
t
c
a
l
a
t
o
T
40
20
0
1 CA
2 CA
3 CA
No. of CA
Figure 16: CA activation while streaming ten 360p YouTube
music videos.
s
A
C
.
o
N
3
2
1
s
A
C
.
o
N
3
2
1
0
0
Saturday 12 PM
50
100
150
Monday 9 AM
3
2
1
0
s
A
C
.
o
N
3
2
1
Sunday 8 AM
50
100
150
Monday 7 PM
50
100
Time (second)
150
0
50
100
Time (second)
150
Figure 17: CA conﬁguration and activation observed in four
walks on the same path.
system by testing on another LTE-A network in a metropolitan
city. We collect four ﬁngerprints of a single 260-meter outdoor
pedestrian path using a Sony Xperia XZ1 phone connected to
the LTE-A network that supports up to three CA. We partic-
ularly choose three different times of the day (i.e., morning,
afternoon, and evening) across two days to reﬂect different
network load experienced by the LTE-A network [17, 18]. We
run the MobileInsight [27] app while simultaneously down-
loading ﬁles at the maximum rate, to activate a maximum
number of secondary cells. Figure 17 shows the CA conﬁgu-
ration and activation for four walks on the same path. The plot
shows that ﬁngerprints have a consistent pattern across differ-
ent walks at different times. This indicates that the load of the
cellular network has minimal effect on the CA activation.
e
c
n
a
e
c
n
a
300
i
t
s
d
W
T
D
e
g
a
r
e
v
A
400
200
0
1-1
1-2
1-3
i
t
s
d
W
T
D
e
g
a
r
e
v
A
200
100
0
Nex1-Nex1 Nex1-Sony Nex1-Sam Nex1-Nex2
Transmit power control level
Phone models
(a) Average DTW distance for TPC values
(b) Average DTW distance for phones
Figure 18: (a) Average DTW distance across three TPC power
levels. (b) Average DTW distance between ﬁngerprints col-
lected with Nexus1 and other phones (Nexus2, Sony, and
Samsung).
D Perturbation in Received Signal Strengths
RSSI can vary at times due to factors such as transmit power
control (TPC), antenna properties, mobile phone models, etc.
One question, therefore, is “How reliable would the ﬁnger-
printing mechanism be when RSSI values change across
walks?” From our experiment in the Wi-Fi environment, we
show that minor perturbations in the RSSI values do not cause
any major difference in the side-channel measurement.
We show the reliability of the ﬁngerprints in the presence of
TPC by conducting an experiment in our Wi-Fi environment
that implements the Cisco TPC algorithm [54]. Here, we con-
sider the Wi-Fi TPC algorithm to be similar to the algorithm
used by the LAA secondary cells(see §6). We retrieve the
TPC power level logs of every Wi-Fi AP deployed on a ﬁxed
path in our building and collect the path ﬁngerprints every
time the TPC power level changes. Speciﬁcally, we collect
ten ﬁngerprints each when the TPC power level of a Wi-Fi AP
on the path is set as 1 (maximum power), 2 (maximum power-
3 dB), and 3 (maximum power-6 dB). We then compute the
average DTW distance between ﬁngerprints collected when
TPC is 1 with ﬁngerprints collected when TPC is 2, and 3 and
show it in Figure 18(a). The similar average DTW distance
across power levels indicates the ﬁngerprints are similar even
in the presence of TPC. Thus, we empirically show that the
ﬁngerprints are reliable and have minimum impact.
Similarly, to show the reliability of the ﬁngerprints across
different phones, we collect ﬁve ﬁngerprints of a ﬁxed path
while holding four phones, namely, Sony Xperia Z5, Samsung
Galaxy S6, and two Nexus 6 phones (Nexus1 and Nexus2).
Figure 18(b) shows the average DTW distance between ﬁn-
gerprints collected using one Nexus 6 (Nexus1) and other
phones. The plot shows similar average DTW distances be-
tween Nexus1 and the other three phones indicating the ﬁnger-
prints will be similar across different phone models and hence
do not cast a consequential inﬂuence on the ﬁngerprint. The
aforementioned observation is not surprising because the side
channel the SLIC adversaries observe is highly aggregated in-
formation that has lost most of the rich details of the raw RSSI
measurements but contains only the coarse-grain trends. Our
attack evaluation in Section 7 shows that this coarse-grained
side channel is still highly effective for path identiﬁcation.
3916    30th USENIX Security Symposium
USENIX Association