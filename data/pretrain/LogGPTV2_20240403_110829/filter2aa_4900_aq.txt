.PD
.PP
返回 0，除非遇到了非法的选项，读/写历史文件发生错误，在 \fB\-d\fP 的
参数中给出了无效的 \fIoffset\fP，或者对 \fB\-p\fP 的后续参数进行历史扩展失败。
.RE
.TP
\fBjobs\fP [\fB\-lnprs\fP] [ \fIjobspec\fP ... ]
.PD 0
.TP
\fBjobs\fP \fB\-x\fP \fIcommand\fP [ \fIargs\fP ... ]
.PD
第一种形式列出正在运行的作业。选项具有下列意义：
.RS
.PD 0
.TP
.B \-l
普通信息之外，列出进程ID。
.TP
.B \-p
只列出作业的进程组 leader 的进程ID。
.TP
.B \-n
只显示从上次用户得知它们的状态之后，状态发生改变的作业的信息。
.TP
.B \-r
限制只输出正在运行的作业。
.TP
.B \-s
限制只输出停止的作业。
.PD
.PP
如果给出了
.I jobspec
输出被限制为仅此作业的信息。
返回 0，除非遇到了非法的选项或给出了非法的
.I jobspec。
.PP
如果给出了
.B \-x
选项，作业
.B jobs
将
.I command
或
.I args
中的任何
.I jobspec
替换为相应的进程组ID，执行
.I command，
传递参数
.IR args
给它并返回它的退出状态。
.RE
.TP
\fBkill\fP [\fB\-s\fP \fIsigspec\fP | \fB\-n\fP \fIsignum\fP | \fB\-\fP\fIsigspec\fP] [\fIpid\fP | \fIjobspec\fP] ...
.PD 0
.TP
\fBkill\fP \fB\-l\fP [\fIsigspec\fP | \fIexit_status\fP]
.PD
向以
.I pid
或
.IR jobspec
为名的进程发送名为
.I sigspec
或
.I signum
的信号。
.I sigspec
可以是一个信号名称，类似
.SM
.B SIGKILL
或信号编号；
.I signum
是一个信号编号。如果
.I sigspec
是一个信号名称，那么可以有，也可以没有
.SM
.B SIG
前缀。如果没有给出
.I sigspec，
那么假设是
.SM
.B SIGTERM。
参数
.B \-l
将列出所有信号的名称。如果给出
.B \-l
时还有任何参数，将列出参数对应的信号名称，返回状态 0。
.B \-l
的 \fIexit_status\fP 参数是一个数字，指定了一个信号编号或被信号
终止的进程的退出状态值。
.B kill
返回真，如果至少成功发送了一个信号，或者返回假，如果发生了错误或遇到了
非法的选项。
.TP
\fBlet\fP \fIarg\fP [\fIarg\fP ...]
每个
.I arg
都是要求值的算术表达式 (参见
.SM
.BR "算术求值 (ARITHMETIC EVALUATION)"
章节)。如果最后一个参数
.I arg
求值结果是 0，
.B let
返回 1；否则返回 0。
.TP
\fBlocal\fP [\fIoption\fP] [\fIname\fP[=\fIvalue\fP] ...]
对每个参数将创建一个名为
.I name 
的局部变量并赋予值
.IR value。
\fIoption\fP 可以是任何 \fBdeclare\fP 接受的值。当
.B local
用于函数内部时，它使得变量
.I name
作用域局限于函数和它的子进程。没有操作数时，
.B local
将局部变量的列表写到标准输出。不在函数内部使用
.B local
会导致出错。返回 0，除非在函数之外使用了
.B local，
给出了非法的
.I name，
或者 \fIname\fP 是一个只读的变量。
.TP
.B logout
退出登录 shell。
.TP
\fBpopd\fP [\-\fBn\fP] [+\fIn\fP] [\-\fIn\fP]
从目录栈中删除条目。没有参数的话，从栈中删除顶层目录，执行
.B cd
切换到新的顶层目录。如果给出了参数，有下列的含义：
.RS
.PD 0
.TP
\fB+\fP\fIn\fP
删除
.BR dirs
给出的列表中从左数第 \fIn\fP 个条目 (从 0 算起)。例如：
.if n ``popd +0''
.if t \f(CWpopd +0\fP
删除第一个目录，
.if n ``popd +1''
.if t \f(CWpopd +1\fP
第二个。
.TP
\fB\-\fP\fIn\fP
删除
.BR dirs
给出的列表中从右数第 \fIn\fP 个条目 (从 0 算起)。例如：
.if n ``popd -0''
.if t \f(CWpopd -0\fP
删除最后一个目录，
.if n ``popd -1''
.if t \f(CWpopd -1\fP
删除倒数第二个。
.TP
.B \-n
阻止从栈中删除目录之后改变目录，这时只对栈进行操作。
.PD
.PP
如果命令
.B popd
成功，还要执行一个
.B dirs，
返回 0。
.B popd
返回假，如果遇到了非法的选项，目录栈为空，指定了目录栈中不存在的条目，
或者改变目录失败。
.RE
.TP
\fBprintf\fP \fIformat\fP [\fIarguments\fP]
在 \fIformat\fP 控制下将格式化的 \fIarguments\fP 写到标准输出。
\fIformat\fP 是一个字符串，包含三种类型的对象：普通字符，被简单地
复制到标准输出，转义字符，被转换并复制到标准输出，格式说明，每一个
都使得相邻的下一个 \fIargument\fP 被打印出来。
在标准的 \fIprintf\fP(1) 格式之外，\fB%b\fP 使得 \fBprintf\fP 展开相应
\fIarguments\fP 中的反斜杠转义序列，\fB%q\fP 使得 \fBprintf\fP 将
相应的 \fIargument\fP 以一种可以重用为 shell 输入的格式输出。
.sp 1
\fIformat\fP 在需要时被重用，以处理所有的 \fIarguments\fP。
如果 \fIformat\fP 需要比所提供的更多的 \fIarguments\fP，
多出的格式说明视为已经提供了相应的 0 值或空字符串。
成功的话返回值是 0，失败则是非 0 值。
.TP
\fBpushd\fP [\fB\-n\fP] [\fIdir\fP]
.PD 0
.TP
\fBpushd\fP [\fB\-n\fP] [+\fIn\fP] [\-\fIn\fP]
.PD
将目录推入目录栈，或者轮换栈中的内容，使栈的顶部成为当前工作目录。
没有参数时，交换顶部两个目录，返回 0，除非目录栈为空。如果给出了参数，
它们有如下含义：
.RS
.PD 0
.TP
\fB+\fP\fIn\fP
轮换栈中内容，使得
.BR dirs
给出的列表中从左数第 \fIn\fP 个目录 (从 0 数起) 成为目录栈的顶部。
.TP
\fB\-\fP\fIn\fP
轮换栈中内容，使得
.BR dirs
给出的列表中从右数第 \fIn\fP 个目录 (从 0 数起) 成为目录栈的顶部。
.TP
.B \-n
阻止向栈中添加目录之后改变目录，这时只对栈进行操作。
.TP
.I dir
添加
.I dir
到栈顶，使得它成为新的当前工作目录。
.PD
.PP
如果命令
.B pushd
成功，还要执行一个
.B dirs。
如果使用第一种形式，
.B pushd
返回 0，除非 cd 切换到目录
.I dir
失败。使用第二中形式时，
.B pushd
返回 0，除非目录栈为空，指定了目录栈中不存在的元素，或者
切换到指定的新的当前目录失败。
.RE
.TP
\fBpwd\fP [\fB\-LP\fP]
打印当前工作目录的绝对路径名。如果给出了
.B \-P
选项，或者设置了内建命令
.B set
的
.B \-o physical
选项，打印出的路径名中不会包含符号链接。如果使用了
.B \-L
选项，打印出的路径中可能包含符号链接。
返回 0，除非在读取当前目录名时出错或给出了非法的选项。
.TP
\fBread\fP [\fB\-ers\fP] [\fB\-u\fP \fIfd\fP] [\fB\-t\fP \fItimeout\fP] [\fB\-a\fP \fIaname\fP] [\fB\-p\fP \fIprompt\fP] [\fB\-n\fP \fInchars\fP] [\fB\-d\fP \fIdelim\fP] [\fIname\fP ...]
从标准输入读入一行，或从 \fB\-u\fP 选项的参数中给出的文件描述符 \fIfd\fP 中
读取，第一个词被赋予第一个
.IR name ,
第二个词被赋予第二个
.IR name ,
以此类推，多余的词和其间的分隔符被赋予最后一个
.IR name .
如果从输入流读入的词数比名称数少，剩余的名称被赋予空值。
.SM
.B IFS
中的字符被用来将行拆分成词。
反斜杠字符 (\fB\e\fP) 被用于删除读取的下一字符的特殊含义，以及续行。
如果给出了选项，将包含下列含义：
.RS
.PD 0
.TP
.B \-a \fIaname\fP
词被赋以数组变量
.IR aname
的连续的下标，从 0 开始。在赋新值之前，
.I aname
被取消定义。其他 \fIname\fP 参数被忽略。
.TP
.B \-d \fIdelim\fP
\fIdelim\fP 的第一个字符被用于结束输入行，而不是新行符。
.TP
.B \-e
如果标准输入来自终端，将使用
.B readline
(参见上面的
.SM
.B READLINE
章节) 来获得输入行。
.TP
.B \-n \fInchars\fP
\fBread\fP 读入 \fInchars\fP 个字符后返回，而不是等待一整行输入。
.TP
.B \-p \fIprompt\fP
读取任何输入之前，在标准错误显示提示 \fIprompt\fP，末尾没有新行符。
提示只有在输入来自终端时才会显示。
.TP
.B \-r
反斜杠不作为转义字符。反斜杠被认为行的一部分。特殊地，一对反斜杠-新行符不作为续行。
.TP
.B \-s
安静模式。如果输入来自终端，字符将不会回显。
.TP
.B \-t \fItimeout\fP
使得 \fBread\fP 超时并返回失败，如果在 \fItimeout\fP 秒内没有读入完整的一行输入。
如果 \fBread\fP 不是从终端或管道读取输入，那么这个选项无效。
.TP
.B \-u \fIfd\FP
从文件描述符 \fIfd\fP 中读取输入。
.PD
.PP
如果没有给出
.I names，
读取的一行将赋予变量
.SM
.BR REPLY 。
返回值是 0，除非遇到了 EOF，\fBread\P 超时，或给出了非法的文件描述符作为 \fB\-u\fP 的参数。
.RE
.TP
\fBreadonly\fP [\fB\-apf\fP] [\fIname\fP ...]
.PD
给出的 \fIname\fP 将被标记为只读的；
.I names
的值不能被后来的赋值语句改变。如果给出了
.B \-f
选项，\fInames\fP 对应的函数也被标记。选项
.B \-a
限制变量只能是数组类型。如果没有给出
.I name
参数，或者如果给出了
.B \-p
选项，将打印所有只读的名称。选项
.B \-p
使得输出以一种可以被重新用作输入的格式显示。
返回值是 0，除非遇到了非法的选项，
.I names
之一不是有效的 shell 变量名，或选项
.B \-f
中给出的
.I name
不是一个函数。
.TP
\fBreturn\fP [\fIn\fP]
使得一个函数以指定值
.IR n
退出。如果忽略了
.I n，
返回状态是函数体中执行的最后一个命令的退出状态。如果在函数外使用，但是是在一个以
.B .
(\fBsource\fP) 命令执行的脚本内，它使得 shell 中止执行脚本，返回
.I n
或脚本中执行的最后一个命令的退出状态。如果在函数外使用，并且不是在以 
\fB.\fP\^ 执行的脚本内，返回状态是假。
.TP
\fBset\fP [\fB\-\-abefhkmnptuvxBCHP\fP] [\fB\-o\fP \fIoption\fP] [\fIarg\fP ...]
不带选项时，shell 变量的名称和值将以一种可以重用为输入的格式显示。
输出根据当前语言环境进行排序。指定了选项的时候，它们设置或取消了 shell 的属性。
处理完选项之后剩余的任何参数都被作为位置参数的值被赋值，分别赋予
.BR $1 ,
.BR $2 ,