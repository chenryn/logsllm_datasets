of time and device, the resource it tries to virtualize are
kernel security frameworks.
Virtualizing Linux Security Frameworks. There are
existing works that try to make Linux security frame-
works useful for container systems. For example, a ker-
nel patch [24] for IMA suggested that the IMA measure-
ment list is extended with a container ID, such that during
integrity attestation, the measurements will become sep-
arable based on containers. As another example, AppAr-
mor and Tomoyo introduced the concept of proﬁle and
policy namespace respectively [49, 44]. The goal is to al-
low certain processes to run under a policy different from
the rest of the system. However, these modiﬁcations are
often adhoc; they do not provide full functionality of ker-
nel security frameworks to container, and they still rely
on a centralized authority (i.e., system owner) to spec-
ify a global policy, leaving containers no true freedom
in enforcing their security independently11. In contrast,
this works provides a truly decentralized way to allow
containers to exercise full functionality of kernel security
frameworks. Another line of research is to develop new
kernel security frameworks that are stackable and appli-
cation customizable. For example, Landlock LSM [28]
enables userspace applications such as containers to cus-
tomize their kernel security control. However, they still
need to properly handle conﬂicts when an application is
under control of multiple principals on a system, and the
policy interfaces are often less familiar and more com-
plex (e.g., eBPF programs) than existing kernel security
frameworks.
11Contemporary to this work, AppArmor is reﬁning its proﬁle
namespace to make it more useful to container alike scenarios. How-
ever, it is still under heavy development.
USENIX Association
27th USENIX Security Symposium    1437
11 Conclusion
In this paper, we presented security namespaces, a ker-
nel abstraction that makes kernel security frameworks
available to containers. We ﬁrst identify the fundamen-
tal challenge of enabling containers to have autonomous
security control—the global and mandatory assumptions
made by the kernel security frameworks. We then de-
velop a novel routing based mechanism that allows the
relaxation of these two assumptions without having one
container comprising other containers or the host system.
To evaluate our design, we built two concrete namespace
abstractions for kernel security frameworks, namely the
IMA namespace and AppArmor namespace. We show
that they allow containers to exercise full functionality
of IMA and AppArmor with a modest overhead.
Acknowledgment
The authors thank the following people for their com-
ments and technical contributions: Stefan Berger and
Mehmet Kayaalp for work on the IMA namespace im-
plementation; Justin Cormack; the anonymous review-
ers; and our shepherd Devdatta Akhawe for their insight-
ful feedback on the paper.
References
[1] AWS Elastic Container Service. https://aws.amazon.
com/ecs/.
[2] BATES, A., TIAN, D., BUTLER, K. R. B., AND MOYER, T.
Trustworthy whole-system provenance for the linux kernel.
In
Proceedings of the 24th USENIX Conference on Security Sympo-
sium (Berkeley, CA, USA, 2015), SEC’15, USENIX Association,
pp. 319–334.
[3] BAUMANN, A., LEE, D., FONSECA, P., GLENDENNING, L.,
LORCH, J. R., BOND, B., OLINSKY, R., AND HUNT, G. C.
Composing os extensions safely and efﬁciently with bascule.
In Proceedings of the 8th ACM European Conference on Com-
puter Systems (New York, NY, USA, 2013), EuroSys ’13, ACM,
pp. 239–252.
[4] BUGIEL, S., N ¨URNBERGER, S., P ¨OPPELMANN, T., SADEGHI,
A., AND SCHNEIDER, T. AmazonIA: When elasticity snaps
back. In Proc. ACM CCS’11.
[5] Linux Capabilities.
http://man7.org/linux/man-
pages/man7/capabilities.7.html/.
[6] Change Root. http://man7.org/linux/man-pages/
man2/chroot.2.html/.
[7] Break out of chroot jail. https://web.archive.org/
web/20160127150916/http://www.bpfh.net/
simes/computing/chroot-break.html/.
[8] Is chroot a security feature? https://access.redhat.
com/blogs/766093/posts/1975883/.
[9] Docker Vulnerabilities Scan.
coreos/clair/.
https://github.com/
[10] Content Trust in Docker. https://docs.docker.com/
engine/security/trust/content_trust/.
[11] Device Namespace.
564854/.
[12] Device Namespace.
564854/.
https://lwn.net/Articles/
https://lwn.net/Articles/
[13] Docker. https://www.docker.com/.
[14] AppArmor proﬁle for Nginx running in Docker.
https:
//github.com/docker/docker.github.io/blob/
master/engine/security/apparmor.md.
[15] DOUCEUR, J. R., ELSON, J., HOWELL, J., AND LORCH, J. R.
Leveraging legacy code to deploy desktop applications on the
In Proceedings of the 8th USENIX Conference on Oper-
web.
ating Systems Design and Implementation (Berkeley, CA, USA,
2008), OSDI’08, USENIX Association, pp. 339–354.
[16] Extened Hybrid Finite Automata (eHFA). http://wiki.
apparmor.net/index.php/TechnicalDoc_HFA.
[17] EIRAKU, H., SHINJO, Y., PU, C., KOH, Y., AND KATO, K. Fast
networking with socket-outsourcing in hosted virtual machine en-
vironments. In Proceedings of the 2009 ACM Symposium on Ap-
plied Computing (New York, NY, USA, 2009), SAC ’09, ACM,
pp. 310–317.
[18] FELTER, W., FERREIRA, A., RAJAMONY, R., AND RUBIO, J.
An updated performance comparison of virtual machines and
In 2015 IEEE International Symposium on
linux containers.
Performance Analysis of Systems and Software, ISPASS 2015,
Philadelphia, PA, USA, March 29-31, 2015 (2015), pp. 171–172.
[19] GAO, X., GU, Z., KAYAALP, M., PENDARAKIS, D., AND
WANG, H. Containerleaks: Emerging security threats of infor-
mation leakages in container clouds. In 47th Annual IEEE/IFIP
International Conference on Dependable Systems and Networks,
DSN 2017, Denver, CO, USA, June 26-29, 2017 (2017), pp. 237–
248.
[20] Google Kubernetes.
https://cloud.google.com/
kubernetes-engine/.
[21] GUPTA, D., LEE, S., VRABLE, M., SAVAGE, S., SNOEREN,
A. C., VARGHESE, G., VOELKER, G. M., AND VAHDAT, A.
Difference engine: Harnessing memory redundancy in virtual
machines. Commun. ACM 53, 10 (Oct. 2010), 85–93.
[22] HAYAWARDH VIJAYAKUMAR AND JOSHUA SCHIFFMAN AND
TRENT JAEGER. STING: Finding Name Resolution Vulnerabil-
ities in Programs. In Proceedings of the 21st USENIX Security
Symposium (USENIX Security 2012) (August 2012). [acceptance
rate: 19.4% (43/222)].
[23] IBM Cloud Container Service. https://www.ibm.com/
cloud/container-service.
[24] Composite Identiﬁer Field Support
for
IMA.
https:
//sourceforge.net/p/linux-ima/mailman/
message/32844753/.
[25] CVE-2015-3627.
http://cve.mitre.org/cgi-bin/
cvename.cgi?name=CVE-2015-3627.
[26] Amazon Lambda. https://aws.amazon.com/lambda/.
[27] LAMPS, J., NICOL, D. M., AND CAESAR, M. Timekeeper: A
lightweight virtual time system for linux. In Proceedings of the
2Nd ACM SIGSIM Conference on Principles of Advanced Dis-
crete Simulation (New York, NY, USA, 2014), SIGSIM PADS
’14, ACM, pp. 179–186.
[28] Landlock
698226/.
LSM.
https://lwn.net/Articles/
[29] Open
Containers.
opencontainers/runc/.
https://github.com/
[30] Linux Integrity Subsystem. https://sourceforge.net/
p/linux-ima/wiki/Home/.
[31] Linux Namespaces.
http://man7.org/linux/man-
pages/man7/namespaces.7.html/.
[32] LSM Stacking. https://lwn.net/Articles/635771/.
1438    27th USENIX Security Symposium
USENIX Association
[33] LXC Linux Containers.
https://linuxcontainers.
org/lxc/introduction/.
[34] LXC - Ofﬁcial Ubuntu Documentation.
https://help.
ubuntu.com/lts/serverguide/lxc.html#lxc-
apparmor/.
[35] LXD Linux Containers.
https://linuxcontainers.
org/lxd/introduction/.
[36] MADHAVAPEDDY, A., MORTIER, R., ROTSOS, C., SCOTT, D.,
SINGH, B., GAZAGNAIRE, T., SMITH, S., HAND, S., AND
CROWCROFT, J. Unikernels: Library operating systems for the
cloud. In Proceedings of the Eighteenth International Conference
on Architectural Support for Programming Languages and Oper-
ating Systems (New York, NY, USA, 2013), ASPLOS ’13, ACM,
pp. 461–472.
[37] MATTHEWS, J. N., HU, W., HAPUARACHCHI, M., DE-
SHANE, T., DIMATOS, D., HAMILTON, G., MCCABE, M., AND
OWENS, J. Quantifying the performance isolation properties of
virtualization systems. In Proceedings of the 2007 Workshop on
Experimental Computer Science (New York, NY, USA, 2007),
ExpCS ’07, ACM.
[38] MERKEL, D. Docker: Lightweight linux containers for con-
sistent development and deployment. Linux J. 2014, 239 (Mar.
2014).
[39] Microservice Architecture. http://microservices.io/
patterns/microservices.html.
[40] Linux Container Security. https://mjg59.dreamwidth.
org/33170.html.
[41] AppArmor Linux application security.
http://www.
novell.com/linux/security/apparmor/, 2008.
[42] Security-enhanced
selinux.
linux.
http://www.nsa.gov/
[43] POHLY, D. J., MCLAUGHLIN, S., MCDANIEL, P., AND BUT-
LER, K. Hi-ﬁ: Collecting high-ﬁdelity whole-system prove-
In Proceedings of the 28th Annual Computer Security
nance.
Applications Conference (New York, NY, USA, 2012), ACSAC
’12, ACM, pp. 259–268.
[44] Tomoyo Policy Namespace. https://tomoyo.osdn.jp/
2.5/chapter-14.html.en/.
[45] PORTER, D. E., BOYD-WICKIZER, S., HOWELL, J., OLINSKY,
R., AND HUNT, G. C. Rethinking the library os from the top
down. In Proceedings of the Sixteenth International Conference
on Architectural Support for Programming Languages and Op-
erating Systems (New York, NY, USA, 2011), ASPLOS XVI,
ACM, pp. 291–304.
[46] CVE-2014-6407.
http://cve.mitre.org/cgi-bin/
cvename.cgi?name=CVE-2014-6407.
[47] CVE-2014-9357.
http://cve.mitre.org/cgi-bin/
cvename.cgi?name=CVE-2014-9357.
[48] CVE-2015-3631.
http://cve.mitre.org/cgi-bin/
cvename.cgi?name=CVE-2015-3631.
[49] AppArmor Proﬁle Namespace. http://wiki.apparmor.
net/index.php/AppArmor_Core_Policy_
Reference#Profile_names_and_attachment_
specifications/.
[50] Docker ptrace Attack. https://lkml.org/lkml/2015/
6/13/191/.
[51] LXC SYS RAWIO Abuse. https://bugs.launchpad.
net/ubuntu/+source/lxc/+bug/1511197/.
[52] rkt-CoreOS. https://coreos.com/rkt/.
[53] SAILER, R., ZHANG, X., JAEGER, T., AND VAN DOORN, L.
Design and implementation of a tcg-based integrity measurement
architecture. In Proceedings of the 13th Conference on USENIX
Security Symposium - Volume 13 (Berkeley, CA, USA, 2004),
SSYM’04, USENIX Association, pp. 16–16.
[54] Linux seccomp. http://man7.org/linux/man-pages/
man2/seccomp.2.html/.
[55] Docker Shocker Attack.
http://www.openwall.com/
lists/oss-security/2014/06/18/4/.
[56] SOLTESZ, S., P ¨OTZL, H., FIUCZYNSKI, M. E., BAVIER, A.,
AND PETERSON, L. Container-based operating system virtual-
ization: A scalable, high-performance alternative to hypervisors.
In Proceedings of the 2Nd ACM SIGOPS/EuroSys European Con-
ference on Computer Systems 2007 (New York, NY, USA, 2007),
EuroSys ’07, ACM, pp. 275–287.
[57] SOLTESZ, S., P ¨OTZL, H., FIUCZYNSKI, M. E., BAVIER, A.,
AND PETERSON, L. Container-based operating system virtual-
ization: A scalable, high-performance alternative to hypervisors.
In Proceedings of the 2Nd ACM SIGOPS/EuroSys European Con-
ference on Computer Systems 2007 (New York, NY, USA, 2007),
EuroSys ’07, ACM, pp. 275–287.
[58] SUGERMAN, J., VENKITACHALAM, G., AND LIM, B.-H. Vir-
tualizing I/O devices on VMware Workstation’s hosted virtual
machine monitor. In Proceedings of the 2002 USENIX Annual
Technical Conference (2001), pp. 1–14.
[59] User Namespace.
http://man7.org/linux/man-
pages/man7/user_namespaces.7.html/.
[60] VIJAYAKUMAR, H., GE, X., PAYER, M., AND JAEGER, T. JIG-
SAW: Protecting resource access by inferring programmer expec-
tations. In Proceedings of the 23rd USENIX Security Symposium
(2014).
[61] Linux-VServer.
http://www.linux-vserver.org/
Welcome_to_Linux-VServer.org/.
[62] WALDSPURGER, C. A. Memory resource management
in
vmware esx server. SIGOPS Oper. Syst. Rev. 36, SI (Dec. 2002),
181–194.
[63] WATSON, R. N. M., ANDERSON, J., LAURIE, B., AND KEN-
NAWAY, K. Capsicum: Practical capabilities for unix. In Pro-
ceedings of the 19th USENIX Conference on Security (Berkeley,
CA, USA, 2010), USENIX Security’10, USENIX Association,
pp. 3–3.
[64] WHITAKER, A., SHAW, M., AND GRIBBLE, S. D. Scale and
performance in the denali isolation kernel. SIGOPS Oper. Syst.
Rev. 36, SI (Dec. 2002), 195–209.
[65] XAVIER, M. G., NEVES, M. V., ROSSI, F. D., FERRETO, T. C.,
LANGE, T., AND DE ROSE, C. A. F. Performance evaluation
of container-based virtualization for high performance comput-
In Proceedings of the 2013 21st Euromicro
ing environments.
International Conference on Parallel, Distributed, and Network-
Based Processing (Washington, DC, USA, 2013), PDP ’13, IEEE
Computer Society, pp. 233–240.
[66] Xen Community. Available at http://xen.xensource.
com/, 2008.
[67] ZHANG, M., MARINO, D., AND EFSTATHOPOULOS, P. Harbor-
master: Policy enforcement for containers. In 7th IEEE Interna-
tional Conference on Cloud Computing Technology and Science,
CloudCom 2015, Vancouver, BC, Canada, November 30 - Dec. 3,
2015 (2015), IEEE, pp. 355–362.
USENIX Association
27th USENIX Security Symposium    1439