title:Detecting covert timing channels: an entropy-based approach
author:Steven Gianvecchio and
Haining Wang
Detecting Covert Timing Channels: An Entropy-Based
Approach
Steven Gianvecchio and Haining Wang
Department of Computer Science
The College of William and Mary
Williamsburg, VA 23187, USA
{srgian, hnw}@cs.wm.edu
ABSTRACT
The detection of covert timing channels is of increasing in-
terest in light of recent practice on the exploitation of covert
timing channels over the Internet. However, due to the high
variation in legitimate network traﬃc, detecting covert tim-
ing channels is a challenging task. The existing detection
schemes are ineﬀective to detect most of the covert timing
channels known to the security community. In this paper, we
introduce a new entropy-based approach to detecting vari-
ous covert timing channels. Our new approach is based on
the observation that the creation of a covert timing chan-
nel has certain eﬀects on the entropy of the original process,
and hence, a change in the entropy of a process provides a
critical clue for covert timing channel detection. Exploiting
this observation, we investigate the use of entropy and con-
ditional entropy in detecting covert timing channels. Our
experimental results show that our entropy-based approach
is sensitive to the current covert timing channels, and is ca-
pable of detecting them in an accurate manner.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General—
Security and Protection
General Terms
Security
Keywords
Covert Timing Channels, Detection
1.
INTRODUCTION
As an eﬀective way to exﬁltrate data from a well-protected
network, a covert timing channel manipulates the timing or
ordering of network events (e.g., packet arrivals) for secret
information transfer over the Internet, even without com-
promising an end-host inside the network. On the one hand,
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’07, October 29–November 2, 2007, Alexandria, Virginia, USA.
Copyright  2007  ACM  978-1-59593-703-2/07/0010...$5.00.
such information leakage caused by a covert timing channel
poses a serious threat to Internet users. Their secret cre-
dentials like passwords and keys could be stolen through a
covert timing channel without much diﬃculty. On the other
hand, detecting covert timing channels is a well-known chal-
lenging task in the security community.
In general, the detection of covert timing channels uses
statistical tests to diﬀerentiate covert traﬃc from legitimate
traﬃc. However, due to the high variation in legitimate net-
work traﬃc, detection methods based on standard statistical
tests are not accurate and robust in capturing a covert tim-
ing channel. Although there has been recent research eﬀorts
on detecting covert timing channels over the Internet [3, 4,
7, 20], some detection methods are designed to target one
speciﬁc covert timing channel, and therefore fail to detect
other types of covert timing channels; the other detection
methods are broader in detection but are over-sensitive to
the high variation of network traﬃc. In short, none of the
previous detection methods are eﬀective to detect a variety
of covert timing channels.
In this paper, we propose a new entropy-based approach to
detecting covert timing channels. The entropy of a process is
a measure of uncertainty or information content, a concept
that is of great importance in information and communi-
cation theory [21]. While entropy has been used in covert
timing channel capacity analysis, it has never been used to
detect covert timing channels. We observe that a covert tim-
ing channel cannot be created without causing some eﬀects
. Therefore, a change
on the entropy of the original process
in the entropy of a process provides a critical clue for covert
timing channel detection.
1
More speciﬁcally, we investigate the use of entropy and
conditional entropy in detecting covert timing channels. For
ﬁnite samples, the exact entropy rate of a process cannot
be measured and must be estimated. Thus, we estimate
the entropy rate with the corrected conditional entropy, a
measure used on biological processes [18]. The corrected
conditional entropy is designed to be accurate with limited
data, which makes it excellent for small samples of net-
work data. To evaluate our new entropy-based approach,
we conduct a series of experiments to validate whether our
approach is capable of diﬀerentiating covert traﬃc from le-
gitimate traﬃc. We perform the ﬁne-binned estimation of
entropy and the coarse-binned estimation of corrected con-
ditional entropy for both covert and legitimate samples, and
1
This observation applies to complex processes, like network
traﬃc, but not to simple independent and identically dis-
tributed processes [8].
307then determine false positive and true positive rates for both
types of estimations. Our experimental results show that the
combination of entropy and corrected conditional entropy is
very eﬀective in detecting covert timing channels.
The remainder of this paper is structured as follows. Sec-
tion 2 covers background and related work in covert timing
channels and their detection schemes. Section 3 describes
entropy measures. Section 4 validates the eﬀectiveness of
our approach through experiments with diﬀerent covert tim-
ing channels. Section 5 describes potential countermeasures
against our entropy-based detection scheme. Finally, Sec-
tion 6 concludes the paper and discusses directions for our
future work.
2. BACKGROUND AND RELATED WORK
To defend against covert timing channels, researchers have
proposed diﬀerent solutions to detect, disrupt, and elimi-
nate covert traﬃc. The disruption of covert timing channels
adds random delays to traﬃc, which reduces the capacity
of covert timing channels but degrades system performance
as well. The detection of covert timing channels is accom-
plished using statistical tests to diﬀerentiate covert traﬃc
from legitimate traﬃc. While the focus of earlier work is on
disrupting covert timing channels [11, 12, 13, 14] or on elim-
inating them in the design of systems [1, 15, 16], more recent
research has begun to investigate the design and detection
of covert timing channels [3, 4, 6, 7, 20]. In the following
subsections, we give an overview of recent research on covert
timing channels and detection tests.
2.1 Covert Timing Channels
IP Covert Timing Channel
There are two types of covert timing channels: active and
passive.
In terms of covert timing channels, active refers
to covert timing channels that generate additional traﬃc to
transmit information, while passive refers to covert timing
channels that manipulate the timing of existing traﬃc. In
general, active covert timing channels are faster, but pas-
sive covert timing channels are more diﬃcult to detect. On
the other hand, active covert timing channels often require a
compromised machine, whereas passive covert timing chan-
nels, if creatively positioned, do not. The majority of the
covert timing channels discussed in this section are active
covert timing channels, except where stated otherwise.
2.1.1
Cabuk et al. [7] developed the ﬁrst IP covert timing chan-
nel, which we refer to as IPCTC, and investigated a num-
ber of design issues. A scenario where IPCTC can be used
is illustrated in Figure 1.
In this scenario, a machine is
compromised, and the defensive perimeter, represented as
a perimeter ﬁrewall or intrusion detection system, monitors
communication with the outside. Therefore, a covert timing
channel can be used to pass through the defensive perimeter
undetected. IPCTC uses a simple interval-based encoding
scheme to transmit information. IPCTC transmits a 1-bit
by sending a packet during an interval and transmits a 0-bit
by not sending a packet during an interval. A major ad-
vantage to this scheme is that when a packet is lost, a bit
is ﬂipped but synchronization is not aﬀected. The timing-
interval t and the number of 0-bits between two 1-bits deter-
mines the distribution of IPCTC inter-packet delays. It is
interesting to note that if the pattern of bits is uniform, the
distribution of inter-packet delays is close to a Geometric
Figure 1: IPCTC/TRCTC scenario
COVERT
TIMING
CHANNEL
COMPROMISED
MACHINE
FIREWALL /
IDS
Figure 2: JitterBug scenario
COVERT
TIMING
CHANNEL
COMPROMISED
INPUT DEVICE
FIREWALL /
IDS
distribution. To avoid creating a pattern of inter-packet de-
lays at multiples of a single t, the timing-interval t is rotated
among diﬀerent values.
2.1.2 Time-Replay Covert Timing Channel
Cabuk [6] later designed a more advanced covert tim-
ing channel based on a replay attack, which we refer to as
TRCTC. TRCTC uses a sample of legitimate traﬃc Sin as
input and replays Sin to transmit information. Sin is par-
titioned into two equal bins S0 and S1 by a value tcutoﬀ.
TRCTC transmits a 1-bit by randomly replaying an inter-
packet delay from bin S1 and transmits a 0-bit by randomly
replaying an inter-packet delay from bin S0. Thus, as Sin
is made up of legitimate traﬃc, the distribution of TRCTC
traﬃc is approximately equal to the distribution of legiti-
mate traﬃc.
JitterBug
2.1.3
Shah et al.
[20] developed a keyboard device, called Jit-
terBug, that slowly leaks typed information over the net-
work. JitterBug is a passive covert timing channel, so new
traﬃc is not created to transmit information. JitterBug
demonstrates how a passive covert timing channel can be
positioned so that the target machine does not need to be
compromised. A scenario where JitterBug can be used is
illustrated in Figure 2. In this scenario, an input device is
compromised, and the attacker is able to leak typed informa-
tion over the network. JitterBug operates by creating small
delays in keypresses to aﬀect the inter-packet delays of a net-
worked application. JitterBug transmits a 1-bit by increas-
ing an inter-packet delay to a value modulo w milliseconds
and transmits a 0-bit by increasing an inter-packet delay
(cid:3) milliseconds. The timing-window w
to a value modulo (cid:2) w
determines the maximum delay that JitterBug adds to an
inter-packet delay. For small values of w, the distribution
2
of JitterBug traﬃc is very similar to that of the original le-
gitimate traﬃc. To avoid creating a pattern of inter-packet
(cid:3), a random sequence si is
delays at multiples of w and (cid:2) w
subtracted from the original inter-packet delay before the
modulo operation.
2
2.1.4 Other Covert Timing Channels
Berk et al.
[4] implemented a simple binary covert tim-
ing channel based on the Arimoto-Blahut algorithm, which
computes the input distribution that maximizes the chan-
nel capacity [2, 5]. Wang et al. [22, 23], as a form of timing
channel, watermarked inter-packet delays to trace encrypted
attack traﬃc or track anonymous peer-to-peer voice-over-IP
(VoIP) calls. Such timing-based watermarking schemes are
passive timing channels in that new traﬃc is not created.
Such schemes again demonstrate how a passive timing chan-
nel can be positioned so that the target, i.e., the stepping
stones or anonymizing network, does not need to be compro-
mised. Although not a covert timing channel, Giﬃn et al.
[10] showed that low-order bits of the TCP timestamp can
be exploited to create a covert storage channel, which is re-
lated to covert timing channels due to the shared statistical
properties of timestamps and packet timing.
2.2 Detection Tests
There are two broad classes of detection tests: shape tests
and regularity tests. The shape of traﬃc is described by
ﬁrst-order statistics, e.g., mean, variance, and distribution.
The regularity of traﬃc is described by second or higher-
order statistics, e.g., correlations in the data. Note that in
previous research the term regularity is sometimes used to
refer to frequency-domain regularity [7, 20], whereas here we
use this term exclusively to refer to time-domain regularity,
i.e., the regularity of a process over time.
2.2.1 Kolmogorov-Smirnov Test
Peng et al. [17] showed that the Kolmogorov-Smirnov test
is eﬀective to detect watermarked inter-packet delays, a form
of timing channel [23]. The watermarked inter-packet delays
are shown to have a distribution that is the sum of a normal
and a uniform distribution. Thus, the Kolmogorov-Smirnov
test can be used to determine if a sample comes from the
appropriate distribution. The Kolmogorov-Smirnov test de-
termines whether or not two samples (or a sample and a dis-
tribution) diﬀer. The use of the Kolmogorov-Smirnov test to
detect covert timing channels is described in more detail in
Section 4.1.2. The Kolmogorov-Smirnov test is distribution
free, i.e., the test is not dependent on a speciﬁc distribu-
tion. Thus, the Kolmogorov-Smirnov test is applicable to
diﬀerent types of traﬃc with diﬀerent distributions. The
Kolmogorov-Smirnov test statistic measures the maximum
distance between two empirical distribution functions:
KST EST = max | S1(x) − S2(x) |,
where S1 and S2 are the empirical distribution functions of
the two samples.
2.2.2 Regularity Test
Cabuk et al. [7] investigated a method of detecting covert
timing channels based on regularity. This detection method,
referred to as the regularity test, determines whether or not
the variance of the inter-packet delays is relatively constant.
This detection test is based on the fact that for most net-
work traﬃc, the variance of the inter-packet delays changes
over time, whereas with covert timing channels, if the en-
coding scheme does not change over time, then the variance
of the inter-packet delays remains relatively constant. The
use of the regularity test to detect covert timing channels is
discussed in more detail in Section 4.1.2. For the regularity
test, a sample is separated into sets of w inter-packet delays.
Then, for each set, the standard deviation of the set σi is
computed. The regularity is the standard deviation of the
pairwise diﬀerences between each σi and σj for all sets i < j.
«
, i < j,∀i, j
regularity = ST DEV
„| σi − σj |
σi
2.2.3 Other Detection Tests
Cabuk et al. [7] investigated a second method of detect-
ing covert timing channels, referred to as -similarity, based
on measuring the proportion of similar inter-packet delays.
The -similarity test is based on the fact that IPCTC cre-
ates clusters of similar inter-packet delays at multiples of
the timing-interval. While this detection method can be
useful, it targets a speciﬁc covert timing channel, namely
IPCTC, and hence, is less interesting than more generic de-
tection methods. Berk et al. [3, 4] used a simple mean-max
ratio to test for bimodal or multimodal distributions that
could be induced by binary or multi-symbol covert timing
channels. The mean-max ratio test assumes that the legit-
imate inter-packet delays follow a normal distribution and
the mean-max ratio should be ≈ 1, which is often not true
for real network traﬃc.
3. ENTROPY MEASURES
In this section, we ﬁrst describe entropy, conditional en-
tropy, and corrected conditional entropy, and then explain
how these measures relate to ﬁrst-order statistics, second or
higher-order statistics, and the regularity or complexity of a
process. Finally, we present the design and implementation
of the proposed scheme to detect covert timing channels,
based on the concept of entropy.
3.1 Entropy and Conditional Entropy
The entropy rate, which is the average entropy per random
variable, can be used as a measure of complexity or regular-
ity [18, 19]. The entropy rate is the conditional entropy of an
inﬁnite sequence. The entropy rate is bounded from above
by the entropy of the ﬁrst-order probability density function
or ﬁrst-order entropy. A simple independent and identically
distributed (i.i.d.) process has an entropy rate equal to the
ﬁrst-order entropy. A highly complex process has a high en-
tropy rate, but less than the ﬁrst-order entropy. Thus, we
have a distinction between complexity and randomness. A
highly regular process has a low entropy rate, zero for a rigid
periodic process, i.e., a repeated pattern.
A random process X = {Xi} is deﬁned as an indexed
sequence of random variables. To give the deﬁnition of the
entropy rate of a random process, we ﬁrst deﬁne the entropy
of a sequence of random variables as:
H(X1, ..., Xm) = −