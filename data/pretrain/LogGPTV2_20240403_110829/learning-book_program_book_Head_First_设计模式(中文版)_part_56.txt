①用菜单加载不同的CD封面，然后看着代理显示“加载
中”，直到出现真正的图像。
2
画面出现“加载中”消息时，缩放窗口大小，注意到代理
会在不挂起Swing窗口的情况下处理加载。
③
在lmageProxyTestDrive中，加入一些你自己喜欢的CD。
你现在的位置
469
---
## Page 506
图像代理幕后花絮
我们做了什么？
1
我们创建了一个用来显示的lmageProxy。paintlcon(）方法会被调
用，而lmageProxy会产生线程取得图像，并创建lmagelcon。
JmaseProxy创建了一个线程来实例
Jnternet上的某
paintIconO
化3maseJcon，开始取出图像。
取图像
Image
显示“加载中”消息
取回的图像
2
）在某个时间点，图像被返回，
Imagelcon被完整实例化。
在lmagelcon被创建后，下次调用到paintlcon（）时，代理就委托
Imagelcon进行。
paintIconO
paintIconO
Image
PDG
显示真正的图像
470
第11章
---
## Page 507
代理模式
DumbQuestions
therejareno
说：“显示‘加载中’消息，难道就
不是在增加行为？”。从某方面来
爷：
你说的是缓存代理
(CachingProxy）。缓存代理会维
是一个模式吗？
的、ImageProxy是拉制Imagelcon的
护之前创建的对象，当收到请求时，
访问。如何控制呢？试想：代理将客
在可能的情况下返回缓存对象。本章
户从Imagelcon解耦了，如果它们之
最后会介绍代理模式的几种变体。
模式有许多变体，这些变体都有共通间没有解耦，客户就必须等到每幅图
点：都会将客户对主题（Subject）
像都被取回，然后才能把它绘制在界
问：
：我已经知道代理和装饰
施加的方法调用栏截下来，这种间接面上。代理控制ImageIcon的访问，
的级别让我们可以做许多事，包括将
以便在围像完全创建之前提供屏募上者的关系了，但是适配器呢？代理和
请求分发到远程主题：给创建开销大
的代表。一旦Imagelcon被创建，代适配器也很类似。
的对象提供代表：或者正如你将要看
理就无许访问Imagelcon。
到的，提供某些级别的保护，这种保
代理和适配器都是挡在
护能决定哪些客户能调用哪些方法。
其他对象的前面，并负责将请求转发
这还只是个开端，其实一般的代理模
理，而不是真正的对象？
给它们。适配器会改变对象适配的接
式还可以以许多形式使用，本章最后
口，而代理则实现相同的接口。
我们会简略地提其中的几种变体。
答：好问题。一个常用的技
有一个额外相似性牵涉到保护代理
问：
巧是提供一个工厂，实例化并返回主
ImageProxy在我看来好
（ProtectionProxy）。保护代理可
题。因为这是在工厂方法内发生的，
以根据客户的角色来决定是否充许客
像是Decorator（装饰者）。我的意
我们可以用代理包装主题再返回，而
户访问特定的方法。所以保护代理可
思是，我们基本上都是用一个对象
客户不知道也不在乎他使用的是代理
能只提供给客户部分接口，这就和某
把另一个包起来，然后把调用委托
还是真东西。
些适配器很相像了。再过儿页，我们
给lmagelcon。我这样说有什么问题
就会讨论到保护代理。
吗？
：
我注意到，在
ImageProxy的例子中，你总是创建
含：有时候这两者的确看
新的lmageProxy来取得图像，即使
样的。装饰者为对象增加行为，而
过的图像放在缓存中呢？
代理是控制对象的访问。你可能会
你现在的位置
471
---
## Page 508
围炉夜话：代理和装饰者
今夜话题：代理和装饰者的意团
代理
装饰者
你好，装饰者。我猜你之所以会在这里，是因为
人们常常把我们搞混了。
我认为人们把我们搞混的原因是你到处招摇撞
骗，说你是一个全然不同的模式。而事实上，你
只不过是乔装过后的装饰者。我希望你不要这么
喜欢抄袭我的想法。
我抄袭你的想法？见鬼了！我控制对象的访问，
你只是装饰对象，我的工作比你的重要多了。
“只是”装饰对象？你认为装饰一点都不重要？我
告诉你这个家伙，我为对象增加行为，这会改变
对象的行为，你说重要不重要？
好吧！或许你有那么一点意义…但是我还是不
知道，你为什么认为我是在抄袭你。我是代表对
象，不是装饰对象。
你可以说这是“代表”，但如果看着像鸭子，走
着像鸭子.我是说，看看你的虚拟代理吧！它
只是加入行为的另一种方式，在创建开销大的对
象时做一些事情，还有你的远程代理，就是一种
和远程对象沟通的方法，这样客户就不用操心
了。全都是关于行为，就像我所说的。
装饰者，我想你还是没搞懂。我代表对象，不光
是为对象加上动作。客户使用我作为真正主题的
替身，因为我可以保护对象避免不想要的访问，
也可以避免在加载大对象的过程中GUI会挂起，或
者隐藏主题在远程运行的事实。我的意图和你的
差别很大！
你爱怎么说都可以。我实现和所包装对象相同的
接口，你不也是吗！
472第11章
---
## Page 509
代理模式
代理
装饰者
好，听听你说了什么。你说你包装了一个对象。
有时候我们非正式地说：代理包装了它的主题，
这样说其实并不准确。
怎么说？
想想远程代理我包装了什么对象？我所代表
和控制访问的对象是在另一台机器上呀！你能办
得到吗？
好吧！但远程代理毕竞是特例，我不相信你可以
找出另一个例子来。
当然有了，以虚拟代理来说..想想CD浏览器
的例子。当客户第一次用我当做代理的时候，主
题甚至还根本不存在呢！你说这次我又包装谁
了？
哼哼，我猜接下来你甚至会说对象其实是你创建
的。
我不知道你这么笨！当然我有时候会创建对象，
不然你以为虚拟代理是怎么取得主题的！好了，
你刚刚指出了我们之间的一个大差异：我们都知
道装饰者只能装饰点缓，你们从来不会实例化任
何东西。
是吗？实例化这个吧！（做了个令人作呕的动
作。）
嘿，经过这次谈话，我确信你是个笨蛋代理。
你说我笨蛋？我倒想看看你有没有能耐将一个对
象包装十层，手还不会酸。
你很少看到代理将一个主题包装多次，事实上，
如果你真的把某些对象包装十次，你最好回去重
新检查你的设计。
你们代理就是这样，装腔作势的功夫是一流的，
好像你们有真本事。我真替你感到可怜。
你现在的位置，473
---
## Page 510
保护代理
使用JavaAPl的代理，创建一个
保护代理
Java在java.lang.reflect包中有自己的代理支持，利用这个包你可以在运行时动态地创建
一个代理类，实现一个或多个接口，并将方法的调用转发到你所指定的类。因为实际的
代理类是在运行时创建的，我们称这个Java技术为：动态代理。
我们要利用Java的动态代理创建我们下一个代理实现（保护代理）。但在这之前，先
让我们看一下类图，了解一下动态代理是怎么一回事。就和真实世界中大多数的事物一
样，它和代理模式的传统定义有一点出入。
>
>
Subject
InvocationHandler
requesto
invoke
代理现在包含两个类。
RealSubject
Proxy
InvocatlonHandler
Oisanbe
request0
invoke()
Proxy是由ava产生的.而
你提供ynvocationHandler，Peoxy上的任何方法
且实现了究整的Subject接
调用都会被传入此类。JwocationHandllet控制对
口。
RealSubject方法的访问。
因为Java已经为你创建了Proxy类，所以你需要有办法来告诉Proxy类你要做什么。你不能像以前一样
把代码放在Proxy类中，因为Proxy不是你直接实现的。既然这样的代码不能放在Proxy类中，那么要
放在哪里？放在InvocationHandler中。InvocationHandler的工作是响应代理的任何调用。你可以把
InvocationHandler想成是代理收到方法调用后，请求做实际工作的对象。
接下来，看看如何使用动态代理.
474
第11章
---
## Page 511
代理模式
对象村的配对
Not
Hot
每个城镇都需要配对服务，不是吗？你负责帮对象村实现约会服务系统。你有
对方，“Not”表示不喜欢。你希望这套系统能鼓励你的顾客找到可能的配对对
象，这也会让事情更有趣。
你的服务系统涉及到一个Personbean，允许设置或取得一个人的信息：
这是一个接口，我们稍后
就会实现它他…
这里我们可以取得人的名字、
性别、兴趣和HotOtNot评分
（（到10）。
public interface PersonBean {
String getName () ;
String getGender () ;
String getInterests ();
int getHotOrNotRating();
void setName (String name) ;
void setGender(String gender);
void setInterests(String interests);
void setHotOrNotRating(int rating);
setHotOrNotRatins（）需要一个整
通过调用各自的方法，我们
数作为参数，并将它加入此人
也可以设置这些信息。
的运行平均值中。
现在，让我们看看实现...
你现在的位置
475
---
## Page 512
PersonBean需要保护
PersonBean的实现
PersonBeanmpl实现了PersonBean提
public class PersonBeanImpl implements PersonBean {
String name;
String gender;
String interests;
实例变量。
int rating;
int ratingCount = 0;
public String getName(){
return name;
这些Gettet方法各自返回相应的实例定
public String getGender()
return gender;
public String getInterests()
1
除了setHotOrNotRatins(），它计算ratins的平
return interests;
均值（rating/ratinsCount）。
1
public int getHotOrNotRating()(
if （ratingCount es O) return O;
return (rating/ratingCount);
public void setName(String name)(
…这是所有的Sette方法，设定
this.name = name;
相应的实例变量。
public void setGender(String gender){
this.gender = gender;
public void setInterests(String interests)
this.interests = interests;
public void setHotOrNotRating(int rating)(
最后，setHotOrNotRating
this.rating += rating;
ratingCount++;
（）增加计数值，并将参数加
到tatins实例变量中。
476
第11章
---
## Page 513
代理模式
我以前不太
容易找到约会对象，后来我发现原来
有人暴改过我的兴趣。我还发现有人居然给自
已评高分，以拉高自已的HotOrNotRating值。这真的是
太卑部了！我认为系统不应该允许用户募改别人
的兴趣，也不应该允许让用户给自已打分数。
Q
虽然我们怀疑Elroy找不到约会对象可能是因为其他的因素，但是
他说的没错，系统不应该允许用户纂改别人的数据。根据我们定义
PersonBean的方式，任何客户都可以调用任何方法。
这是一个我们可以使用保护代理的绝佳例子。什么是保护代理？这
是一种根据访问权限决定客户可否访问对象的代理。比方说，如果
你有一个雇员对象，保护代理允许雇员调用对象上的某些方法，经
f0213
理还可以多调用一些其他的方法（像setSalaryO），而人力资源处的
雇员可以调用对象上的所有方法。
在我们的约会服务中，我们希望顾客可以设置自己的信息，同时又
防止他人更改这些信息。HotOrNot评分则相反，你不能更改自己的
评分，但是他人可以设置你的评分。我们在PersonBean中已经有许
多getter方法了，每个方法的返回信息都是公开的，任何顾客都可以
调用它们。
PDG
你现在的位置，477
---
## Page 514
五分钟短剧
五分钟短剧：保护主题
Internet的泡沫已经渐渐被人们淡忘了。在那些日子里，如果你需要找一
个更好更高薪的工作，对街就找得到。甚至软件开发人员的经纪人也赶上
这股风潮.
我想要提供工作机会，我能
和她通电话吗？
他现在有事走不开
啊……她正在开会。你给
的条件如何？
就如同保护代理，经
2oe .com
纪人保护他人不要查
接访问主题，只让某
经纪人
些电话进来.
拜托，你根本是在浪费时
问，门都没有！有了更好的
我们愿意给绝比现在
条件再来。
D
C
的薪水多15%。
478
第11章
---
## Page 515
代理模式
大局观：为PersonBean创建动
态代理
我们有一些问题要修正：顾客不可以改变自己的HotOrNot评分，也不可以改变其
他顾客的个人信息。要修正这些问题，你必须创建两个代理：一个访问你自己的
PersonBean对象，另一个访问另一顾客的PersonBean对象。这样，代理就可以控
还记得几页前的这张图
制在每一种情况下允许哪一种请求。
创建这种代理，我们必须使用Java
API的动