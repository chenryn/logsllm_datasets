### Title: Breaking Through Another Side: Bypassing Firmware Security Boundaries from the Embedded Controller

**Abstract:**

Hardware security boundaries are notoriously challenging to design and maintain. Modern x86 platforms are composed of numerous hardware components, each of which must be considered in a comprehensive threat model. However, what if an attacker manages to compromise one of these trusted components? We have seen instances where researchers have compromised Trusted Platform Modules (TPMs) and initiated attacks from within the trusted boundary. These scenarios raise concerns about the current threat modeling process, as the attack surface can change dramatically once a trusted boundary is breached. This suggests that the attack surface is dynamic rather than static.

In our presentation, we will focus on the reverse engineering of the Embedded Controller (EC) from a recent Lenovo ThinkPad laptop. We will demonstrate how an attacker can exploit the EC, a trusted component, to bypass Intel's BIOS Guard technology (as implemented by Lenovo). Our discussion will cover several key topics related to security boundaries on x86 platforms, including the implications of trusting third-party components like the EC. We will also showcase real-world attacks that can be launched from the operating system level to the EC, and from the EC to the BIOS.

Our research delves into the reverse engineering of the EC firmware, which is based on the ARC processor architecture. We will explore the internal architecture of the EC and its specific operating modes, particularly those related to System Management Interrupt (SMI) handlers and BIOS Guard. Additionally, we will present our findings on the most critical aspects of the communication and interaction between the BIOS and the EC.

From an attacker's perspective, the attack surface provided by the EC is extensive. Potential vulnerabilities include Direct Memory Access (DMA) attacks, exposure of PCI memory space, and the possibility of installing persistent rootkits or implants. By understanding these vulnerabilities, we aim to highlight the importance of re-evaluating the trust placed in third-party components and the need for more robust security measures in platform design.