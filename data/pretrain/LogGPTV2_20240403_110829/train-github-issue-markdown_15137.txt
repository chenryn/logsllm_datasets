Created a new file rulers.ts:
If you add it, be sure to refresh given new files are not picked up properly
by TS....  
CPU-20160201T100230.cpuprofile.txt
See `// >>>>>>>>> TYPED BELOW LINE`
    /*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
    'use strict';
    import 'vs/css!./rulers';
    import {ViewPart} from 'vs/editor/browser/view/viewPart';
    import EditorBrowser = require('vs/editor/browser/editorBrowser');
    import EditorCommon = require('vs/editor/common/editorCommon');
    export class Rulers extends ViewPart {
        public domNode: HTMLElement;
        private _rulers: number[];
        constructor(context:EditorBrowser.IViewContext) {
            super(context);
            this.domNode = document.createElement('div');
            this.domNode.className = 'view-rulers';
            this._rulers = [];
        }
        public dispose(): void {
            super.dispose();
        }
        // --- begin event handlers
        public onConfigurationChanged(e: EditorCommon.IConfigurationChangedEvent): boolean {
            if (e.rulers) {
                this._rulers = this._context.configuration.editor.rulers;
                return true;
            }
            return false;
        }
        public onLayoutChanged(layoutInfo: EditorCommon.IEditorLayoutInfo): boolean {
            return true;
            // if (this._width !== layoutInfo.width) {
            //  this._width = layoutInfo.width;
            //  return true;
            // }
            // return false;
        }
        // --- end event handlers
        // public onBeforeForcedLayout(): void {
        // }
        // public onReadAfterForcedLayout(ctx:EditorBrowser.IRenderingContext): void {
        // }
        _render(ctx: EditorBrowser.IRenderingContext): void {
            // console.log('rendering rulers');
            this._requestModificationFrame(() => {
                let existingRulers = this.domNode.children;
                let existingRulersLength = existingRulers.length;
                let max = Math.max(existingRulersLength, this._rulers.length);
                for (let i = 0; i >>>>>>>> TYPED BELOW LINE
                    // if (i < existingRulersLength)
                    // if (i < existingRulersLength)
                }
                // Update existing rulers
                let renderedRulers = this.domNode.children;
                for (let i = 0; i < renderedRulers.length && i < this._rulers.length; i++) {
                    console.log('update @ ' + i);
                }
                // Insert new rulers
                // remove extra rulers
                // ruler
                console.log('rendering rulers');
                // DomUtils.StyleMutator.setWidth(this._domNode, this._width);
                // DomUtils.toggleClass(this._domNode, EditorBrowser.ClassNames.SCROLL_DECORATION, this._shouldShow);
            });
        }
    }