# re4 (re, 390pts)
```
michal@DESKTOP-U3SJ9VI:/mnt/c/Users/nazyw/Downloads$ file WH2018.exe
WH2018.exe: PE32+ executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows
```
Hm, another .Net binary?
![wut](wut.png)
ðŸ¤”
![entry.png](entry.png)
Okay, something is definietly off here...
# Repairing the binary
Throughout this wirteup we'll use the [kaitai parser](https://ide.kaitai.io/), it's been a massive help in this challange.
![upx](upx.png)
So this is probably a upx-packed binary...
Let's take a look at the booched entry point:
![weird](weird.png)
So the address of EntryPoint is set to 0, that's kinda odd.
What's weirder, the imageBase is set to 0x400000001E300, that value actually looks like 2 32-bit addresses concatenated.
Could the binary be in fact 32-bit? Let's find out!
All we have to do is move a one bit to the right:
![move_bit](move_bit.png)
How about the addresses?
![better](better.png)
That looks better, but the entry point is still messed up and decompressing the binary using upx fails.
But since we know a upx-ed file structure we can just find it manually and set the entry point offset to a correct value.
The unpacking procedure:
![start_addr](start_addr.png)
Since the entry point is relative to the image base address we'll have to set it to `0x005E28D0 - 0x00400000 = 0x001e28d0`.
upx is still not happy about the binary though:
```bash
michal@debian:/media/sf_nazyw/Downloads$ upx -d WH2018_32
                       Ultimate Packer for eXecutables
                          Copyright (C) 1996 - 2013
UPX 3.91        Markus Oberhumer, Laszlo Molnar & John Reiser   Sep 30th 2013
        File size         Ratio      Format      Name
   --------------------   ------   -----------   -----------
upx: WH2018_32: CantUnpackException: file is modified/hacked/protected; take care!!!
Unpacked 0 files.
```
Well, it turns out the section names have to be correct as well:
![section_names](section_names.png)
```bash
michal@debian:/media/sf_nazyw/Downloads$ upx -d WH2018_32
                       Ultimate Packer for eXecutables
                          Copyright (C) 1996 - 2013
UPX 3.91        Markus Oberhumer, Laszlo Molnar & John Reiser   Sep 30th 2013
        File size         Ratio      Format      Name
   --------------------   ------   -----------   -----------
   1872384 > 1 != 35 )
  {
    LOBYTE(v88) = 0;
    v18 = v42 - 16;
    v19 = _InterlockedDecrement((volatile signed __int32 *)(v42 - 16 + 12));
    v20 = v19 == 0;
    v21 = v19 < 0;
LABEL_17:
    if ( v21 || v20 )
      (*(void (__stdcall **)(int))(**(_DWORD **)v18 + 4))(v18);
    v88 = -1;
    v13 = (volatile signed __int32 *)(v41 - 16);
    goto LABEL_9;
  }
```
Xors it with 0x66:
```c++