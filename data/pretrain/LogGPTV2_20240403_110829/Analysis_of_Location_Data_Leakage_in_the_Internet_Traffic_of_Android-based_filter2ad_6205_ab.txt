the user’s identity as well).
The main goal of this study is to estimate the potential pri-
vacy exposure of a user by such threat actors if they choose to
misuse this data, or by an attacker. Note that previous research
(e.g., [14, 36, 37]) proved that it is possible to de-anonyimize
users based on location traces. Therefore, an adversary that
is able to monitor a device’s network trafﬁc and infer the
user’s POIs will be able to apply similar methods (together
with information publicly available in phone books and social
networks) in order to breach the user’s anonymity.
4 Data Collection
In the interest of exploring the extent of location data leak-
age in the Internet trafﬁc of Android-based smartphones, we
developed a dedicated data collection framework. Using this
framework, we collected data from 71 participants for an
average period of 37 days.
4.1 Data collection framework
The framework consists of three main components: a VPN
client that collects all of the network trafﬁc transmitted by the
device to the Internet, a dedicated Android agent application
that obtains location readings from the device’s location API,
and a light-weight server.
VPN client. The high volume of Internet trafﬁc on smart-
phones makes it prohibitive to store this information locally
on the device for a long period of time. Alternatively, caching
the Internet trafﬁc locally and transmitting it daily to a remote
server adds overhead to the device’s battery, CPU, and net-
work. In addition, due to security concerns, such operations
require super-user privileges, which necessitate rooting the
user’s device. For these reasons, we opted to use VPN tun-
neling to redirect the trafﬁc through a dedicated VPN server,
where we could record and store the trafﬁc. It should be men-
tioned that a VPN is the only user space API provided by
the Android operating system that can be used to intercept
network trafﬁc that does not require super-user privileges.
Android agent (client) application. To understand the qual-
ity of location leakage detected in plaintext within the device’s
network trafﬁc and to estimate the privacy exposure level of
users, we developed a dedicated Android application that ob-
tains the actual location of users. The application uses the
network location provider API which utilizing three sources
of information: GPS, Wi-Fi, and Cell ID (obtained from the
cellular network) to assesses the location. The data collected
3https://www.forbes.com/sites/forbestechcouncil/2018/07/10/the-future-
of-the-vpn-market/
4https://blog.globalwebindex.com/chart-of-the-day/vpn-usage/
246          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX Associationby the agent application was used as the ground truth for the
actual location of the users. Applying clustering algorithms
on data collected from the mobile device was shown to be ac-
curate and effective for deriving users’ POIs [33]. Therefore,
we opt to use this approach as our baseline and not to rely on
the (subjective) collaboration of the participants in providing
the actual/labeled POIs.
Light weight server. This server has two primary objectives.
First, it operates as an application server which communicates
with the Android agent application and stores all location data
in a database. Second, it acts as a VPN server which com-
municates with the VPN clients, records all of their network
trafﬁc, and redirects it to the Internet. To provide VPN con-
nectivity and record the trafﬁc, we created a dedicated LAN
(local area network) on that server where every VPN client
was assigned to a different IP address in the LAN. The Inter-
net trafﬁc was recorded using "tshark," - a network analysis
tool that is capable of capturing packet data from real-time
network trafﬁc.
We opted to use this data collection approach for the follow-
ing reasons. First, because we were performing exploratory
research where we didn’t know exactly what data we could
expect and what data we would want to collect and analyze
in advance, we wanted to be able to collect all of the network
trafﬁc transmitted by the device. Second, it was important for
us to be able to collect data from devices owned and regu-
larly used by the participants. Therefore, we could not use
a data collection approaches that requires root access. This
also introduced another challenge to our research which is the
ability to link network trafﬁc (speciﬁcally, location data) with
the sending application. Finally, since we wanted to collect
data for a long period of time, we followed prior research and
opted to use the data collected by the agent as our baseline
for the users’ POIs and not to rely on the (subjective) collabo-
ration of the participants in providing the actual/labeled POIs
which would require signiﬁcant overhead on the participants
(and consequently cannot scale). As noted, this approach was
shown to be accurate and effective in prior research.
4.2 Experiment
We conducted an experiment involving 71 participants. The
participants were current and former students at two univer-
sities located in two different cities in Israel. Additional in-
formation about the participants is as follows: 60% are male,
and 40% female; 44% are in the 18 to 24 age range, and 56%
in the 25 to 30 age range; 51% are undergraduate students,
and 49% are graduate student.
In Figure 2 we present the distribution of the number of dis-
tinct application installations, focusing only on applications
that are granted with location permission. As can be seen,
more than 40% of the applications are installed on one device.
Furthermore, most of the applications are installed on less
Application
name
Whatsapp
Google Maps
Google Play
Services
YouTube
Chrome
Waze
Facebook
Shazam
Facebook
Messenger
Skype
Ynet
Duolingo
Moovit
IsraelTrain
GetTaxi
Instegram
Istudent
Viber
Percentage
of users that
installed the
application
100%
100%
100%
100%
90%
85%
80%
70%
67%
65%
52%
47%
47%
43%
42%
38%
32%
32%
Application
Type
User
Pre-installed
Depends on
Android version
Pre-installed
Pre-installed
User
Depends on
Android version
User
Depends on
Android version
User
User
User
User
User
User
User
User
User
Installations
(from Google
play store)
1-5B
5B+
5B+
5B+
5B+
100-500M
1-5B
100-500M
1-5B
1-5B
1-5M
100-500M
50-100M
1-5M
10-50M
1-5B
100-500K
500M-1B
Number of
apps in
this category
(Wikipedia)
31
6
6
6
6
334
31
334
31
31
25K
334
484
25K
3925
31
334
43
Table 1: Exploring the popularity of applications installed on
the mobile devices of the participants.
than 20% of the devices. Only a small number of applications
are installed on more that 50% of the devices.
We also analyzed the popularity of applications installed on
the participants’ devices. As can be seen, most of the heavily
adopted applications used by the participants in the experi-
ment (shown in Figures 1a and 1b) are extremely popular, with
more than one billion installations worldwide (see Table 1).
These applications (e.g., WhatsApp, Google Maps, Chrome,
YouTube, Facebook, Skype, and Instagram) are not typical to
a speciﬁc user proﬁle. In addition, because of the diversity
of the applications installed on the participants’ devices (as
shown in Figures 1a, 1b, and 2), we believe that the insights
derived from our study are valid and can be generalized to
other user proﬁles.
The participants were required to install the two client
applications (VPN and Android monitoring agent) on their
personal mobile device throughout the experiment, which
lasted for an average period of 37 days, depending on the
participants’ actual engagement. To ensure that the location
sampling had minimal impact on the battery, the Android
client sampled the location provider for 60 seconds every 20
minutes for most of the experiment. In addition, the server was
deployed on an AWS (Amazon Web Services) EC2 instance
to ensure high availability.
In Figure 3 we present the amount of time the users par-
ticipated in the experiment. The distribution of the agent
application’s actual location sample rate (as observed in the
experiment) is presented in Figure 4.
Note that the framework we developed, and speciﬁcally
the VPN and monitoring agent applications installed on the
participants smartphones, were used for data collection, re-
search, and validation only and are not assumed to be part of
the threat model.
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 247Figure 2: Distribution of distinct installations among applica-
tions that request location permission.
(a) user applications.
Figure 3: The length of time (in days) users participated in
the experiment.
from the study at any time. The subjects received a one-time
payment as compensation for their participation.
Anonymization was applied to the data. At the begin-
ning of the experiment, a random user ID was assigned to
each subject; this UID served as the identiﬁer of the subject,
rather than his or her actual identifying information. The map-
ping between the UID and the real identity of the subjects
was stored in a hard copy document kept in a safe box; we
destroyed this document at the end of the experiment.
During the experiment, the communication between the
agents and servers was fully encrypted. In addition, the
data collected was stored in an encrypted database. At the end
of the experiment, the data was transferred to a local server
(i.e., within the institutional network) that was not connected
to the Internet. Only anonymized information of the subjects
was kept for further analysis.
Based on these steps, the research was approved by the
institutional review board (IRB).
5 Extracting Location Traces from Raw Net-
work Trafﬁc
Location data can be transmitted over network trafﬁc in many
formats including: explicit geolocation coordinates, names of
cities or POIs, Wi-Fi networks (BSSID), and cellular network
data (Cell ID). In this research we focus on explicit geoloca-
tion data that is transmitted in plaintext; such structured data
(b) system applications.
Figure 1: Distinct installations of applications among the
participants that request location permissions; for each appli-
cation group (user and system) we sorted the applications by
their distinct installations and select the top 40.
4.3 Privacy and ethical considerations
The experiment involved the collection of sensitive informa-
tion from real subjects for a long period of time. To preserve
the subjects’ privacy, we took the following steps.
The subjects participated in the experiments at their
own will and provided their formal consent to participate in
the research. In addition, they were fully aware of the type of
data that would be collected and were allowed to withdraw
com_whatsappcom_android_chromecom_wazecom_facebook_katanacom_shazam_androidcom_facebook_orcacom_skype_raidercom_goldtouch_ynetcom_vlingo_midascom_tranzmatecom_moblin_israeltraincom_gettaxi_androidcom_instagram_androidcom_mobixon_istudentcom_viber_voipcom_google_earthcom_ebay_mobilecom_unicell_pangoandroidcom_yohana_ea_ziggi                       com_google_android_apps_geniecom_google_android_keepcom_jangomobile_androidcom_leumi_leumiwalletcom_tindercom_devsense_hulyocom_melodis_midomiMusicIdentifierled_android_bbbclubcom_moblin_superpharmcom_ideomobile_hapoalimcom_antiviruswww_bus_co_illucy_mecom_twitter_androidcom_policydmtunein_playercom_tripadvisor_tripadvisorcom_google_android_calendaril_co_dominos_androidcom_google_android_apps_walletnfcrelappinventor_ai_progetto2003_SCANPackage name0.00.170.330.50.670.831.0User Installations (percentage)com_android_phonecom_android_vendingcom_android_settingscom_google_android_gmscom_google_android_googlequicksearchboxcom_google_android_streetcom_google_android_apps_mapscom_google_android_apps_pluscom_android_contactscom_android_mmscom_google_android_talkcom_android_calendarcom_android_browsercom_google_android_locationcom_sec_android_app_cameracom_sec_android_gallery3dcom_sec_android_widgetapp_ap_herocom_sec_dsm_systemcom_android_emailcom_sec_android_app_clockpackagecom_fmm_dmcom_sec_android_widgetapp_dualclockdigitalcom_sec_chatoncom_sec_android_app_videoplayercom_sec_android_widgetapp_dualclockanalogcom_sec_android_daemonapp_ap_accuweathercom_sec_android_widgetapp_diotek_smemocom_android_providers_contactscom_sec_jewishcalendarcom_sec_android_app_mtcom_android_settings_mtcom_sec_android_widgetapp_dualclockcom_sec_android_saslideshowcom_android_gallery3dcom_lge_hiddenmenucom_lge_systemservicecom_lge_settings_easycom_lge_sizechangable_weathercom_lge_emailcom_sec_pcwPackage name0.00.170.330.50.670.831.0User Installations (percentage)0.00.170.330.50.670.831.0Users percentage00.20.4Apps percentage30405060Days00.050.10User percentage248          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX AssociationFigure 4: The actual (averaged) location sample rate of the
agent installed on the users’ devices.
can (potentially) provide more accurate location and is easier
to extract and analyze; thus, it introduces a greater risk to the
user’s privacy if leaked.
Figure 5: The geo-fencing of identiﬁed coordinates; ﬁltering
coordinates that are outside of a predeﬁned geographical area.
5.1 Process description
In order to automatically detect location traces within the
network trafﬁc of a mobile device, we capture the data at the
IP network layer. Geographic coordinates can be represented
in different formats [38]. We perform regex search of the
standard Android API [39] representation of the geographic
coordinates which is decimal degrees in the following format:
XX.YYYYYYY. We speciﬁcally used this regular expression
for two main reasons. First, this is the standard format of
the Android location API, and thus such expressions are very
likely to be a location data. Second, our manual exploration
of other location data formats (e.g., names of cities, POIs, and
Wi-Fi networks) indicated that they can dramatically increase
the number of false positives. For example, city names sent by
a weather forecast application do not indicate the true location
of the user. Note that as proposed by Ren et al. [8], machine
learning techniques can be used to automatically identifying
PII (including location data) within the network trafﬁc; this,
however, still does not ensure that the identiﬁed data indicates
the true location of the user.
Each result is assigned a timestamp based on the packet
capture time. This regular expression may retrieve irrelevant
results of simple ﬂoat numbers which have no geographic
meaning and can appear within the network trafﬁc (e.g., the
location of an object on the screen). Therefore, in the next
step we apply the following heuristics in order to ﬁlter out
irrelevant results.
Outgoing trafﬁc ﬁlter. Extracting geographic coordinates
from outgoing trafﬁc (incoming trafﬁc may contain geo-
graphic data that is not relevant to the real location of the user
such as recommendations of POIs and weather forecasts).
Latitude/longitude pair ﬁlter. Extracting only pairs of
valid geographic coordinates that were assigned with the same
timestamp; this is because a coordinate is represented by two
values indicating the latitude and longitude of the location.
Figure 6: Worldwide distribution of randomly selected geo-
locations found in the network trafﬁc for all of the participants.
Geo-fencing ﬁlter. Filtering out geographic coordinate that
are outside a predeﬁned geo-fence (e.g., the geographical
boundaries of a given country or city). In our case, all users
were located within the geographical boundaries of Israel
during the data collection period, and therefore we ﬁltered
out all geographic coordinates that are not within this area
(an illustration of the geographical boundaries is presented
in Figure 5). Note that to apply the geo-fencing ﬁlter in a
general and practical case, the attacker can perform reverse
geo-coding on the leaked location data and identify the geo-
graphical areas that are most likely to be relevant to a user or
a group of users. We demonstrate this approach in Figure 6, in
which we performed reverse geo-coding on randomly selected
samples from the leaked location data (1%). As can be seen,
most of the samples are located within the state of Israel.
10002000300040005000Sample rate (sec)00.10.20.3User percentageUSENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 2495.2 Analysis and results
In order to evaluate the amount of location data leakage, we
have to determine the accuracy and correctness of the geo-
graphic coordinates detected within the network trafﬁc. In our
experiment we could compare the geographical coordinates
detected within the network trafﬁc to the location data that
was sampled by the agent application (installed on the partici-
pants’ mobile phones). By analyzing the data collected by the