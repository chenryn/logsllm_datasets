may be still retained. For example, regarding an audio signal,
a spike in the measured signal sounds like a chirp; however, a
listener can still understand the information that is conveyed in
the audio signal. A digital low-pass ﬁlter can be used to ﬁlter
out the spike so that the negative impacts can be mitigated.
If the attacker changes many samples, the modiﬁed samples
dominate, and she may bypass the detection of outliers.
However, the probability of avoiding affecting zero samples is
2k , which exponentially decreases with the number of samples
1
that the attacker wishes to change. Therefore, changing more
samples increases the difﬁculty of bypassing the detection.
B. Security Analysis
We have assumed that
the attacker plans to change
k (1 ≤ k ≤ n) out of n non-zero samples. When k = n, the
probability of bypassing the detection method is the same as
the one for a constant physical quantity. When 1 ≤ k < n,
the attacker needs to guess the orders of samples in k sub-
measurements. The probability of bypassing the detection
Fig. 6: A testbed is built to test a microphone system. A signal
generator, which is controlled by a computer, provides the
microphone module with a bias voltage. An Arduino DUE is
used to collect the signal from the microphone module. The
computer is used to analyze the signal.
method is 1
2k , which is negligible. If k is small, the attacker
can easily achieve an attack, but the impacts of the modiﬁed
samples are small; while k is large, it is difﬁcult for the attacker
to bypass the detection method.
C. The Sampling Rate of the ADC
To ensure that the measurement contains complete informa-
tion of the physical quantity, according to the Nyquist-Shannon
sampling theorem, the clock rate of the Manchester encoded
code should be at least twice larger than the bandwidth of the
non-constant physical quantity. Since the sampling rate of the
ADC is twice larger than the clock rate of Manchester encoded
code, the sampling rate is at least four times larger than the
bandwidth of the physical quantity.
VI. IMPLEMENTATION
In this section, we implement our approach on two sensor
systems: a microphone system (see Section VI-A) and a
temperature sensor system (see Section VI-B). In each sensor
system, we ﬁrst show how an attacker can remotely modify
sensor readings by EMI, and then we present the effectiveness
and robustness of our detection method.
A. Microphone System
A microphone can convert sound into an electrical signal. At
present, microphones can be found in many different devices
such as smartphones, headphones, and laptops. In a microphone
system, a wire is used to connect a microphone module and
a microcontroller, and hence the attacker can exploit the wire
to inject an attacking signal into the microphone system.
For example, an attacker can inject voice commands into a
smartphone through EMI, and the voice assistant system can
be asked to execute malicious tasks in the smartphone. Note
that human cannot hear any EMI, and hence the user cannot
notice the attacking signal.
Fig. 7: One 1 kHz signal is the sound, and the other 1 kHz
signal is from the attacker, who injects the 1 kHz malicious
signal into the microphone system by EMI. The similarity of
these two signals is above 0.93.
1) Setup: In Figure 6, the setup of the microphone system
is presented. The microphone system consists of a computer, a
signal generator, an off-the-shelf microphone module, and an
Arduino DUE. The computer controls a RIGOL DG4062 signal
generator to generate a bias voltage for the microphone. The
microphone converts the sound into a voltage signal, which is
further ampliﬁed by the ampliﬁer. The output of the ampliﬁer is
biased at 1.65 V. Then, the output of the microphone module is
digitized by a built-in ADC in the Arduino DUE at a sampling
rate of 666.8 kHz. Next, the Arduino DUE sends the digitized
data to the computer through a serial port. Finally, we can use
the computer to analyze the digitized signal.
Note that the sampling rate we choose is higher than the
minimum theoretical sampling rate required. According to
Section V-C, the sampling frequency should be at least four
times larger than the bandwidth of the physical quantity. Since
the microphone in our experiment can measure up to 20 kHz,
the sampling frequency is 80 kHz in theory. However, in
practice, we need to consider samples that are digitized from
signal edges, and hence the sampling rate is higher than the
theoretical one. Details are discussed in Section VI-A3.
There are two signal sources: one is a legitimate sound
from a speaker of a Motorola XT1541 Moto G3 smartphone,
and the other is an attacking signal from the attacker. The
attacker uses an R&S SMC 100A signal generator to amplitude-
modulates a malicious signal on a 144 MHz carrier signal
to form the attacking signal. Then, the attacking signal is
radiated through a 144 MHz omnidirectional vertical antenna.
The reason why 144 MHz is chosen as the carrier frequency of
the attacking signal is that, by experiment, the 144 MHz signal
can be received by the unintentional antenna in the microphone
module effectively. Both the antenna and the speaker are placed
10 cm away from the microphone module.
2) Without the Detection Method: Without the detection
method, the microphone system cannot determine whether the
signal is legitimate or malicious. In the following parts, we
will show that the attacker can remotely inject a malicious
signal that is similar to the audio signal into the microphone
system.
The signal generator is conﬁgured to output a constant
300 mV signal, and thus the microphone is biased at 300 mV.
We ﬁrst play a 1 kHz audio signal through the speaker of the
mobile phone at the maximal volume. Next, we turned off
Fig. 8: Measure the bound of zero samples and the time of
the signal edges by an oscilloscope with a sampling frequency
of 2 GHz.
the speaker, and an attacking signal, which is generated by
modulating the 1 kHz malicious signal on a 144 MHz carrier
signal, is emitted through the antenna at −5 dBm. The attacking
signal is demodulated by the nonlinear electronic components
(e.g., ampliﬁers and ADCs) in the microphone system, and a
1 kHz digitized malicious signal is obtained.
In Figure 7, two 1 kHz signals that are reconstructed by the
computer are presented: one is the signal from the speaker; the
other one is induced by the attacker. It can be observed that,
without our detection method, it is difﬁcult to tell whether a
received signal is from the speaker or the attacker: both the
sound and the malicious signal are 1 kHz, and they have similar
amplitudes. It is known that Pearson’s correlation coefﬁcient
(PCC) can be used to measure the linear correlation of two
signal [5], [23], and PCC is a suitable metric to show the
similarity of two signals in our experiments. The PCC of the
1 kHz audio signal and the 1 kHz malicious signal is above
0.93, which means that these two signals have a high similarity.
Above all, the attacker can control the output of the microphone
system and deceive the microcontroller.
3) Applying the Detection Method: From the experimental
results above, the microphone system may regard the malicious
signal as the legitimate audio signal. In this part, we illustrate
how to deploy the detection method to the microphone system
to detect the attacking signal.
When the detection method is applied to the microphone
system, the computer repeatedly transmits a secret sequence of
[1100] to the signal generator, and the signal generator encodes
the secret sequence into a Manchester encoded code with a
clock rate of 40 kHz. The Manchester encoded code toggles
between 0 mV and 300 mV. Note that the bias voltage is for the
microphone, which is denoted as “Mic” in Figure 6, instead of
the ampliﬁer1. In Figure 8, without any audio signal or attacking
signal, we present the output of the microphone module that is
captured by a RIGOL DS2302A Digital Oscilloscope, which
has a sampling frequency of 2 GHz.
When the computer receives the digitized signal from the
Arduino DUE, three practical challenges in the microphone
system need to be considered before checking the existence
of an attack. The ﬁrst challenge is synchronizing the digitized
signal with the secret sequence. Each digit in the secret
sequence corresponds to one sub-measurement, and the value
of the digit decides the direction of the voltage level transition
at the midpoint of the sub-measurement. Only if the digitized
signal is aligned with the secret sequence precisely will the
computer knows whether a speciﬁc sample is zero or non-zero.
In practice, we conﬁgure the signal generator so that there
is always a voltage level transition from high to low at the
beginning of the ﬁrst sub-measurement so that we can identify
the start point of the digitized signal. Further, it is easy to align
the digitized signal with the secret sequence.
Another practical challenge is how to handle samples from
the rising or the falling edges of the output of the microphone
module. The samples from the edge can lead to a false
positive alert of attack or an inaccurate measurement of the
physical quantity. As shown in Figure 8, the time of the
signal edge is τ = 2.45 µs. The sampling period of the ADC
666.8 kHz ≈ 1.50 µs, and hence at most two samples
is 1
fs
emerge from the signal edge. Also, given the sampling rate
and the clock rate, we can ﬁnd that there are 16 samples in
each sub-measurement. Thus, to eliminate the negative impacts
of the edge samples, we remove the ﬁrst and the last samples
in each half cycle.
=
1
The third practical challenge is determining the voltage
level of zero samples. Because the output of the microphone
module is centered at 1.65 V, the zero samples are shifted
to a non-zero level. As shown in Figure 8, the mean value
of the zero samples is 1.15 V. However, it can be observed
that the zero samples ﬂuctuate around 1.15 V, and the range
of the ﬂuctuation is ∆V = 0.04 V. Note that ∆V is
also the noise tolerance of zero samples. When there is
no attacking signal, the zero samples are within a range
of [1.15 V − 1
2 ∆V ] = [1.13, 1.17] V. If a zero
sample is outside [1.13, 1.17] V, the microphone system will
be alerted with an attack.
2 ∆V, 1.15 V + 1
After obtaining a measurement from the microphone module,
the computer synchronizes the corresponding secret sequence
with the measurement, and removes samples from edges. Ac-
cording to the bounds of zero samples, which is [1.13, 1.17] V,
the computer can determine whether an attack occurs in the
measurement. To evaluate the performance of our detection
method, we consider the following three cases:
Case 1: A 1 kHz audio signal is played from the speaker
at its maximal volume, and there is no attacking signal. In
1If the Manchester encoded code is used to bias the ampliﬁer, when the
ampliﬁer is off, an attacking signal that is injected before the ampliﬁer does
not affect the output of the ampliﬁer. This means that attacks that affect zero
samples cannot be detected.
TABLE I: Detection results of Case 2 and 3.
Case
No.
2
3
Sound
-
1 kHz
Attacking Signal
(modulating signal, carrier)
(1 kHz, 144 MHz)
(5 kHz, 144 MHz)
True-positive Rate
100%
100%
Figure 9a, the amplitude envelope that is formed by non-
zero samples of the digitized sequence represents the 1 kHz
component. Since no attacking signal exists, this case is a
reference for the following two cases.
Case 2: Turn off the speaker, and the attacker transmits
an attacking signal at −5 dBm. To inject a 1 kHz signal
into the microphone system, the attacking signal is generated
by modulating the 1 kHz signal on a 144 MHz carrier. As
Figure 9b shows, it can be noticed that both zero and non-zero
samples carry the information of the 1 kHz signal.
Case 3: Turn on the speaker, and the attacker radiates an
attacking signal at the same time. The frequency of the audio
signal is still 1 kHz, and volume is unchanged. To insert a
5 kHz signal into the system, the attacker modulates the 5 kHz
signal on a 144 MHz carrier, and the transmission power of
the attacking signal is 0 dBm. As it is shown in Figure 9c, the
5 kHz signal dominates in both zero and non-zero samples.
In each case, 100 measurements are recorded. Because the
physical quantity is non-constant in a measurement, we use
our detection criteria of non-constant physical quantity to
check whether an attacking signal exists in each measurement.
Accordingly, in Case 2 and Case 3, we can calculate the true-
positive rate of detecting the attacking signal. The detection
results are presented in Table I. In Case 2 and Case 3, the
computer ﬁnds that some zero samples are outside the bounds,
and thus the attacking signal can be detected. The true-positive
rates of detecting the attack are 100% in both Case 2 and Case
3. The results mean that the attacking signals exist in every
measurement in these two cases.
Our experiments also show that, when there is no attacking
signal (Case 1), all zero samples are within the bounds, and
our detection method does not give any false positive alarm of
an attack. Once the attacker accidentally increases or decreases
the value of the zero sample to a value that is outside the
bounds (e.g., Case 2 and 3), the attack is detected immediately.
Note that, in Case 2 and 3, the attacker initiates “dumb”
attacks, which mean that the attacker does not guess when
the sensor is on or off. In other words, the dumb attacking
signal affects every sample in the measurement. This is the