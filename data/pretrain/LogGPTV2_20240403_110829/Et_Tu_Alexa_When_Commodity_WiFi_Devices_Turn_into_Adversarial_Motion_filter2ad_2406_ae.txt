Feature Clustering
Our Method
1
0.8
0.6
0.4
0.2
)
m
(
r
o
r
r
E
n
o
i
t
a
z
i
l
a
c
o
L
y
c
a
r
u
c
c
A
t
l
n
e
m
e
c
a
P
m
o
o
R
0
Scene 1
2
3
4
5
6
7
8
9
10
11
D. End-to-End Attack Evaluation
Fig. 10. Bootstrapping performance: anchor localization accuracy in terms of
absolute localization error (m) and room placement accuracy, per test scene.
tion error which is the physical distance between the ground-
truth location and the attacker-estimated location, and room
placement accuracy which is the probability of placing an
anchor to its exact room. Figure 10 plots, for each test scene,
the quantile distribution of the absolute localization error and
the room placement accuracy. We compare three systems: the
model-ﬁtting algorithm that uses all the measurements, the
feature-clustering based data ﬁltering proposed by [38], and
our consistency-based data sifting method.
Gain of consistency-based data sifting.
The results show
that our proposed data sifting method can largely improve
anchor localization accuracy compared to the two existing
approaches. Our method largely reduces the localization error
tail, and for more than 90% of the cases, the attacker places
the anchor at the right room. Our method outperforms [38] by
using ﬁne grained, scene-speciﬁc features to ﬁlter data.
An interesting observation is that
in scene 8–10, our
method faces a similar (and even larger) absolute localization
error than feature clustering but produces higher room place-
ment accuracy. This is because our design directly analyzes the
consistency of room placements, rather than raw localization
errors. Smaller raw localization error does not always translate
into higher room placement accuracy.
Impact of anchor placements. As expected, it is relatively
harder to accurately locate anchors placed at room boundaries,
e.g., those plugged into wall outlets. In many cases, these
boundary anchors create a dominant Monte Carlo cluster, but
the data points in the cluster map to either of the two neighbor-
ing rooms. Our current design simply chooses the room with
more data points, which could lead to room placement errors.
Finally, we evaluate the end-to-end performance of our
attack, combining the bootstrapping and continuous sensing
phases. Like §VII-B, we consider the detection rate and false
positive rate for the task of detecting and localizing human
users to their individual rooms. The results will include the
impact of any misplaced anchors during bootstrapping, or
errors in detecting/localizing users during continuous sensing.
Table VI lists the detection rate and false positive rate
for our attack design and those achieved via LiFS [63]. We
also vary the number of WiFi anchor devices in each room.
Compared to the results in Table IV assuming accurate anchor
room placement, the end-to-end attack sees minor drop in both
recall and precision, especially with more anchors per room.
Despite using a passive, minimally equipped attacker device,
our attack still achieves high human sensing accuracy, e.g.,
99.7% detection rate at 10.71% false positive rate.
The impact of anchor localization errors is much more
visible on LiFS, whose detection rate drops to 36.954% and
46.033% even with 3 and 4 anchors in each room, respectively.
Overall, we see that while both using the same aCSI values
per anchor, our proposed passive human sensing largely outper-
forms LiFS by not requiring precise anchor location to model
signals on the direct propagation path.
VIII. DEFENSES
We now explore robust defenses against our proposed
attack and other passive sensing attacks. Our design insight
is that attack effectiveness depends heavily on the quantity
and quality of the WiFi signals captured by the sniffer. Thus a
defense reducing the amount of WiFi signal leakage to external
sniffers or adding inconsistency to WiFi signals could render
the attack ineffective.
A. MAC Randomization
When the number of anchors is sufﬁciently large,
the
attacker can minimize the impact of such boundary anchors
The ﬁrst solution coming to mind would be MAC address
randomization, a well-known method for protecting mobile
11
devices against tracking. Since the attack sniffer uses MAC
address to isolate signals of anchors, MAC randomization
can disrupt both bootstrapping and continuous sensing phases.
However, recent work has shown that MAC randomization is
disabled on most devices (<3% of adoption rate so far) [42]
and can be easily broken to reveal the real MAC address [41],
[5]. We note that Android 9.0 Pie switches to per-network
MAC randomization [7], which does not apply any MAC ran-
domization to static WiFi devices. Thus MAC randomization
is not a plausible defense against our attack.
adversary can counter by deploying an extra static sniffer (dur-
ing bootstrapping) to infer the injected signal power changes
and remove them from the signal traces, as shown by [38].
In spatial obfuscation, a recent work [48] shows that by
deploying a full-duplex radio near each anchor x, one can
obfuscate x’s signal phase, RSS, CSI, and Doppler shift seen
by any nearby sniffers with a single antenna. But full-duplex
radios are of high cost, and there is no commodity product on
the market. On the other hand, defending against our attack
only needs to obfuscate RSS and aCSI, collected by the sniffer.
B. Geofencing WiFi Signals
Geofencing bounds signal propagation to reduce or elim-
inate WiFi signals accessible to the adversary. In our attack,
when the area with a signal in our walking trace reduces from
25–50 meters to 10 meters or less, the anchor localization
error increases signiﬁcantly: raw errors more than double, and
anchor room placement accuracy drops from 92.6% to 41.15%.
Geofencing is also extremely difﬁcult to deploy and con-
ﬁgure. The simplest form is to reduce the anchor’s transmit
power, which is almost always undesirable since it degrades
connectivity. Another option is to equip WiFi devices with
directional antennas, limiting signal spatial coverage. This is
also undesirable as it requires upgrading to equipment with
higher cost and larger form factors, as well as carefully
conﬁguring antenna directionality. Finally, the extreme solution
is to block RF propagating beyond property walls by painting
these walls with electromagnetic shielding paints. This is again
impractical, since it blocks incoming WiFi/cellular signals.
If the area accessible to the attacker is limited, a potential
solution is to customize WiFi signal coverage using 3D fabri-
cated reﬂectors [70] or backscatter arrays [39] that create noise
towards the area. Yet both remain open research problems.
C. WiFi Rate Limiting
less signals over time,
While geofencing reduces spatial leakage of WiFi signals,
rate limiting reduces their temporal volume. When anchors
transmit
the sniffer will not have
sufﬁcient data to compute σaCSI . Results in §VII show that
reducing anchor packet rates does lower the detection rate
(when using a single anchor) but can be compensated by
aggregating the results of multiple anchors.
In practice, rate limiting is undesirable for most network
applications. As shown in Table III, many WiFi devices, when
idle, already transmit at more than 2pps. It is hard to rate limit
further, rendering the defense ineffective.
D. Signal Obfuscation: Existing Designs
Signal obfuscation adds noise to WiFi signals, so the
adversary cannot accurately localize anchors or detect user
motion. Existing works have proposed both temporal and
spatial obfuscations against RF sensing [38], [48].
In temporal obfuscation, WiFi devices (anchors) change
transmit power randomly over time, injecting artiﬁcial noises
to signals seen by the sniffer. Doing so, however, requires
upgrading commodity WiFi devices to equipment with much
higher cost and energy consumption. Also a more resourceful
E. Proposed: AP-based Signal Obfuscation
The above four immediate defenses are either ineffective
or impractical. Instead, we propose a practical defense where
the WiFi access point (AP) actively injects customized cover
trafﬁc for any of its associated WiFi device w that is actively
transmitting. We design this defense to produce large ambigu-
ity to the attack in two steps. First, our defense adds noise to
the attacker’s RSS measurements, so that during bootstrapping,
the attacker will place most of the anchors to the wrong room
and even outside of the property. Second, our defense largely
reduces (and even removes) the σaCSI gap between no human
presence and human motion, such that the attacker is unable
to identify human motion.
AP inserting customized cover signal. As soon as the AP
detects a transmission from w, it estimates w’s transmission
rate Tw and injects a cover trafﬁc stream with the rate of ρTw,
at a randomized power level and with w’s MAC address. ρ is
the injection rate, a system parameter. Since the AP limits its
cover trafﬁc stream to be proportional to w’s throughput, the
CSMA protocol will randomly interleave packets from the two
streams together. In the worst case (ρTw is at or higher than
available channel throughput), the cover trafﬁc will reduce w’s
effective throughput by 1 + ρ.
The insertion of “fake” packets requires a careful design,
so that
it disrupts the attack rather than creating obvious
“anomalies” or heavily affecting the WiFi network. In partic-
ular, the AP conﬁgures the sequence numbers of fake packets
to (partially) interleaved with those of real packets, so that
the attacker is unable to separate the two streams based on
sequence number and packet arrival time. When sending fake
packets, the AP’s transmit power is randomized but close to
that of w, so the mixed trafﬁc follows natural (and complex)
multipath signal variation. This makes it hard to distinguish
real and fake packets from signal strength values alone.
Finally, this defense can be deployed on today’s WiFi APs
that support transmit power adaptation with minor changes.
The major overhead is the extra consumption (a factor of ρ)
of bandwidth and energy at the AP.
Results: Impact on bootstrapping. With this defense,
the attacker’s RSS measurements of anchor w will display
ﬂuctuations, tricking the sniffer to think that w is moving and
not use it as an anchor. Even if the adversary assumes w is
stationary, the noisy RSS measurements (even after our data
sifting) will lead to inaccurate room placement.
When evaluating this defense, we consider both our origi-
nal attacker (with one smartphone) and an advanced attacker
who adds an extra stationary sniffer and applies RSS signal
12
I
S
C
a
i
d
e
s
o
n
e
D
I
S
C
a
σ
AP Obfuscation
No Defense
 36
 32
 28
 24
 20
AP Obfuscation
No Defense
I
S
C
a
i
d
e
s
o
n
e
D
 36
 32
 28
 24
 20
 0
 10
 20
 30
 40
 50
 60
 0
 10
 20
 30
 40
 50
 60
Time (s)
AP Obfuscation
No Defense
 1
 0.8
 0.6
 0.4
 0.2
 0
I
S
C
a
σ
 1
 0.8
 0.6
 0.4
 0.2
 0
Time (s)
AP Obfuscation
No Defense
 0
 10
 20
 30
 40
 50
 60
 0
 10
 20
 30
 40
 50
 60
Time (s)
Time (s)
(a) User not present
(b) User in motion
Fig. 11.
aCSI and σaCSI with and without AP based signal obfuscation.
subtraction to detect and remove any “injected” signal vari-
ations [38]. We conﬁgure our defense where the AP injects
cover trafﬁc of ρ with power randomization in the 10dB range.
For both attackers, ρ=5% is sufﬁcient to drop the accuracy of
anchor room placement from 92.6% (without our defense) to
35.71%, except for the anchors close to the AP (in the same
room). As we further increase ρ, the attacker will map most
of the detected anchors to the AP’s room.
Results: Impact on continuous sensing.
As the attacker
sniffer calculates σaCSI (w) on randomly interlaced packets
sent by anchor w and the AP, the value of σaCSI (w) with
no human presence will increase signiﬁcantly. Figure 11(a)
shows a sample trace of aCSI (of a sub-carrier) and σaCSI
with and without the defense. We see that our defense can
effectively elevate the threshold σp(w) for human presence
detection. More importantly, the defense has much less impact
on σaCSI (w) when there is actual human movement near
the anchor w. The sample traces in Figure 11(b) show that
σaCSI (w) actually drops (below the threshold) when using
the proposed defense. In this case, human movement will not
trigger any anchor in proximity, for both the original and the
advanced attackers (who deploy an extra sniffer).
Table VII lists the attack performance with our proposed
defense (ρ=30%) and without any defense. We ﬁrst consider
the case where the attacker manages to obtain perfect anchor
room placement. In this case, our defense increases the false