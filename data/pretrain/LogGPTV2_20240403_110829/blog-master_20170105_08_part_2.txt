digoal=# select log_spilt(1,10000);  
 log_spilt   
-----------  
(1 row)  
digoal=# select log_spilt(1,10000);  
 log_spilt   
-----------  
(1 row)  
digoal=# select log_spilt(1,1000000000);  
 log_spilt   
-----------  
(1 row)  
digoal=# select log_spilt(1,100000);  
 log_spilt   
-----------  
(1 row)  
... 略  
digoal=# select log_spilt(1,100000000);  
 log_spilt   
-----------  
(1 row)  
```  
确保所有数据都写入log_ticket了.  
```  
digoal=# select min(log_xid_le),max(log_xid_st) from log_ticket;  
    min    |    max      
-----------+-----------  
 505354161 | 506624142  
(1 row)  
digoal=# select min(xid),max(xid) from log;  
    min    |    max      
-----------+-----------  
 505354161 | 506624141  
(1 row)  
```  
查询log_ticket  
```  
digoal=# select * from log_ticket;  
 id | split_xid |         split_time         | log_xid_le | log_xid_st |                                                              
                                                                         log_xip                                                      
                                                                                 | xid_readed | xip_readed   
----+-----------+----------------------------+------------+------------+------------------------------------------------------------  
------------------------------------------------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------+------------+------------  
 26 | 506284999 | 2013-05-03 15:05:53.963654 |  505354161 |  505356093 | NULL                                                         
                                                                                 | f          | t  
 27 | 506285000 | 2013-05-03 15:05:54.887422 |  505356093 |  505358092 | NULL                                                         
                                                                                 | f          | t  
 28 | 506285001 | 2013-05-03 15:05:55.369707 |  505358092 |  505360095 | NULL                                                         
                                                                                 | f          | t  
 29 | 506285002 | 2013-05-03 15:05:55.757843 |  505360095 |  505362101 | NULL                                                         
                                                                                 | f          | t  
 30 | 506285003 | 2013-05-03 15:05:56.132186 |  505362101 |  505364103 | NULL                                                         
                                                                                 | f          | t  
 31 | 506285004 | 2013-05-03 15:05:56.487359 |  505364103 |  505366103 | NULL                                                         
                                                                                 | f          | t  
 32 | 506285005 | 2013-05-03 15:05:56.921683 |  505366103 |  505368098 | NULL                                                         
                                                                                 | f          | t  
 33 | 506285006 | 2013-05-03 15:05:57.220986 |  505368098 |  505370109 | NULL                                                         
                                                                                 | f          | t  
 34 | 506285007 | 2013-05-03 15:05:57.624854 |  505370109 |  505372109 | NULL                                                         
                                                                                 | f          | t  
 35 | 506285008 | 2013-05-03 15:05:58.055403 |  505372109 |  505374113 | NULL                                                         
                                                                                 | f          | t  
 36 | 506315377 | 2013-05-03 15:07:22.414773 |  505374113 |  505376115 | NULL                                                         
                                                                                 | f          | t  
 37 | 506320066 | 2013-05-03 15:07:23.147482 |  505376115 |  505378109 | NULL                                                         
                                                                                 | f          | t  
 38 | 506409173 | 2013-05-03 15:07:36.081153 |  505378109 |  506384559 | {506384464,506384481,506384492,506384503,506384507,50638450  
9,506384517,506384521,506384522,506384523,506384525,506384529,506384534,506384535,506384537,506384538,506384539,506384541,506384542,  
506384543,506384546,506384548,506384552,506384553,506384554,506384556,506384557} | f          | f  
 39 | 506423332 | 2013-05-03 15:07:43.592782 |  506384559 |  506404567 | NULL                                                         
                                                                                 | f          | t  
 40 | 506427897 | 2013-05-03 15:07:44.306657 |  506404567 |  506424564 | NULL                                                         
                                                                                 | f          | t  
 41 | 506434174 | 2013-05-03 15:07:45.330145 |  506424564 |  506433989 | {506433901,506433908,506433928,506433934,506433937,50643393  
8,506433940,506433941,506433946,506433947,506433954,506433955,506433956,506433957,506433958,506433960,506433962,506433964,506433965,  
506433968,506433971,506433974,506433976,506433980,506433985}                     | f          | f  
 42 | 506442222 | 2013-05-03 15:07:46.573332 |  506433989 |  506442067 | {506441993,506442005,506442008,506442012,506442015,50644201  
6,506442024,506442032,506442033,506442034,506442037,506442039,506442040,506442041,506442042,506442043,506442045,506442047,506442048,  
506442051,506442052,506442053,506442055,506442059,506442062,506442064,506442065} | f          | f  
 43 | 506467572 | 2013-05-03 15:07:50.910016 |  506442067 |  506462070 | NULL                                                         
                                                                                 | f          | t  
 44 | 506473021 | 2013-05-03 15:07:51.998294 |  506462070 |  506472808 | {506472727,506472747,506472751,506472763,506472764,50647276  
7,506472773,506472774,506472775,506472777,506472778,506472779,506472780,506472781,506472782,506472794,506472796,506472799,506472800,  
506472801,506472802,506472803,506472804}                                         | f          | f  
(19 rows)  
```  
pgbench过程中同时执行get_log  
```  
digoal=# select count(*) from unnest(get_log(2,0));  
 count   
-------  
 10000  
(1 row)  
digoal=# select count(*) from unnest(get_log(2,1));  
 count   
-------  
 10000  
(1 row)  
...  
```  
直到所有线程都报  
```  
digoal=# select count(*) from unnest(get_log(2,0));  
NOTICE:  no data in log_ticket with i_mod=2 and i_mod_rem=0.  
 count   
-------  
     0  
(1 row)  
digoal=# select count(*) from unnest(get_log(2,1));  
NOTICE:  no data in log_ticket with i_mod=2 and i_mod_rem=1.  
 count   
-------  
     0  
(1 row)  
略  
```  
把所有的get_log结果相加看看是否等于count(*) from log;  
验证结果正确.  
此处略.  
## 其他  
1\. 如果觉得取数据的函数不太通用, 可以改成返回log_ticket的游标. 程序尽管自己去取.  
为方便大家查询, 汇总PostgreSQL实时和非实时数据统计的案例分析文章系列 - 如下 :                 
1\. http://blog.163.com/digoal@126/blog/static/163877040201331252945440/                
2\. http://blog.163.com/digoal@126/blog/static/16387704020133151402415/                
3\. http://blog.163.com/digoal@126/blog/static/16387704020133155179877/                
4\. http://blog.163.com/digoal@126/blog/static/16387704020133156636579/                
5\. http://blog.163.com/digoal@126/blog/static/16387704020133218305242/                
6\. http://blog.163.com/digoal@126/blog/static/16387704020133224161563/                
7\. http://blog.163.com/digoal@126/blog/static/16387704020133271134563/                
8\. http://blog.163.com/digoal@126/blog/static/16387704020134311144755/                
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")