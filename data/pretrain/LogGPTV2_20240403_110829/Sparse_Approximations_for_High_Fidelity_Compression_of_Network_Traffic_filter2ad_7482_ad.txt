Occurence count  over 20 weeks
10
12
8
(a) High Volume Ports
(b) Scan Target Ports
(c) P2P Ports
(d) Random Ports
Figure 10: Occurrence counts using a 30 coefﬁcient representation with DF +S:Fourier+Spike over a 20 week period
down for the above classiﬁcation for different ports in each
category, and also shows the type of components that occur
within each count-class. We ﬁnd that across all the ports,
the dictionary components that are always selected in the
compressed representation correspond to periodic compo-
nents such as the diurnal and off-diurnal frequencies.
The stability of a component depends not only on the
fact that it was selected in the compressed representation,
but also on the amplitude of the component in the com-
pressed representation. Hence, we also analyze the ampli-
tudes of the frequently occurring components (that occur
greater than 50% of the time) across the 20 week dataset.
Figures 11 and 12 show the mean and deviation of the am-
plitudes returned by the greedy pursuit procedure for these
frequently occurring components. For clarity, we show the
amplitudes of the real and imaginary part of the Fourier
(periodic) components separately. For each port, we ﬁrst
sort the components according to the average magnitude
(i.e, the energy represented by both the real and imaginary
parts put together) over the 20 week period. We normal-
ize the values of the average amplitude in both real and
imaginary parts, and the deviations by the magnitude of the
mean (or zero-th Fourier) component. We observe that the
amplitudes are fairly stable for many Fourier components
across the different port types. These results suggest that
these stable (Fourier) frequencies may indeed form funda-
mental components of the particular trafﬁc time series. The
relative stability of amplitudes in the compressed represen-
tation also indicates that it may be feasible to build trafﬁc
models, that capture the fundamental variations in trafﬁc,
using the compressed representations.
6.3.3 Spatial Analysis Across Trafﬁc Metrics
The last component of our analysis explores the similar-
ity in the trafﬁc data across different aggregates for a given
port, within each week. One naturally expects a strong cor-
relation between the number of ﬂows, the number of pack-
ets, and the number of bytes for the same port, and also
reasonable correlation between the total incoming volume
0.15
0.1
0.05
0
−0.05
−0.1
e
d
u
t
i
l
p
m
a
d
e
z
i
l
a
m
r
o
N
2
4
0.15
0.1
0.05
0
−0.05
−0.1
e
d
u
t
i
l
p
m
a
d
e
z
i
l
a
m
r
o
N
18
20
2
4
6
8
10
12
14
16
Dictionary components sorted by average magnitude
6
8
10
12
14
16
18
20
Dictionary components sorted by average magnitude
(a) Real part
(b) Imaginary part
Figure 11: Stability of amplitudes of dictionary compo-
nents selected – High volume: Port 80
and the total outgoing volume of trafﬁc on the same port 4.
Figure 13 conﬁrms this natural intuition about the nature of
the trafﬁc aggregates. We observe that for the high volume
and P2P application ports, more than two-thirds of the dic-
tionary components are commonly selected across all the
different trafﬁc aggregates and we also ﬁnd that more than
30 components are selected across at least 4 of the traf-
ﬁc aggregates (bytes, packets, ﬂows both to and from the
port). We found that such similarity in the selected compo-
nents across the different aggregates is less pronounced for
the scan target ports and the random ports under consider-
ation. Our hypothesis is that the distribution of packets per
ﬂow and bytes per packet are far more regular for the high
volume applications (for example most HTTP, P2P packets
use the maximum packet size to get maximum throughput)
than on the lesser known ports (which may be primarily
used as source ports in small sized requests).
7 Applications
7.1 Visualization
One of the primary objectives of compression is to present
to the network operator a high ﬁdelity approximation that
262
Internet Measurement Conference 2005
USENIX Association
Table 2: Analyzing stable dictionary components for different classes of ports
Port Type
Port Number
High Volume
P2P
Scan
Random
25
80
1214
6346
135
9898
5190
65506
All 20 weeks
Periodic
Spike
10-20 weeks
Periodic
Spike
5
11
5
7
5
3
11
1
0
0
0
0
0
0
0
0
18
19
21
17
24
20
10
15
0
0
0
0
0
0
0
0
0-10 weeks
Periodic
Spike
102
33
104
94
63
67
73
147
23
15
20
23
15
35
27
31
60
55
50
45
40
35
30
25
20
x
>
t
n
u
o
c
e
c
n
e
r
u
c
c
o
h
t
i
w
s
e
d
o
m
f
o
r
e
b
m
u
N
Port 25: SMTP
Port 80: HTTP
Port 110: POP3
Port 1214: Kazaa
Port 4662: Edonkey
Port 6346: Gnutella
0.15
0.1
0.05
0
−0.05
−0.1
e
d
u
t
i
l
p
m
a
d
e
z
i
l
a
m
r
o
N
2
4
0.15
0.1
0.05
0
−0.05
−0.1
e
d
u
t
i
l
p
m
a
d
e
z
i
l
a
m
r
o
N
18
20
2
4
45
40
35
30
25
20
x
>
t
n
u
o
c
e
c
n
e
r
u
c
c
o
h
t
i
w
s
e
d
o
m
f
o
r
e
b
m
u
N
18
20
15
1
1.5
6
8
10
12
14
16
Dictionary components sorted by average magnitude
6
8
10
12
14
16
Dictionary components sorted by average magnitude
2.5
2
5
Occurence count over six traffic aggregates
3.5
4.5
3
4
5.5
6
15
1
1.5
2.5
2
5
Occurence count over six traffic aggregates
3.5
4.5
3
4
5.5
6
(a) Real part
(b) Imaginary part
(a) High Volume Ports
(b) P2P Ports
Figure 12: Stability of amplitudes of dictionary compo-
nents selected – P2P Port: 1214
Figure 13: Occurrence counts using 30 coefﬁcient repre-
sentation with DF +S:Fourier+Spike over different trafﬁc
aggregates for a single week
captures salient features of the original trafﬁc metric of in-
terest. Visualizing historical trafﬁc patterns is a crucial as-
pect of trafﬁc monitoring that expedites anomaly detection
and anomaly diagnosis involving a network operator, who
can use historical data as visual aids. It is therefore impera-
tive to capture not only the periodic trends in the trafﬁc, but
also the isolated incidents of interest (for example, a post-
lunch peak in Port 80 trafﬁc, the odd spike in ﬁle sharing
applications, etc).
Figure 14 shows some canonical examples from each of
the four categories of ports we described earlier. In each
case we show the original trafﬁc time series over a week
and the time series reconstructed from the compressed rep-
resentation using 1:6 compression with DF +H+S(Fourier
+ Haar + Spike). We also show the residual signal, which
is the point-wise difference between the original signal and
the compressed reconstruction. The trafﬁc values are nor-
malized with respect to the maximum trafﬁc on that port
observed for the week. We ﬁnd that the compressed repre-
sentations provide a high ﬁdelity visualization of the orig-
inal trafﬁc data. Not surprisingly, the ports which exhibit
the greatest amount of regularity in the trafﬁc appear to be
most easily compressible and the difference between the
actual and compressed representation is almost negligible
for these cases.
It is also interesting to observe in each
case that the compressed representation captures not only
the periodic component of the signal, but also trafﬁc spikes
and other trafﬁc variations.
7.2 Trafﬁc Trend Analysis
Analyzing trends in trafﬁc is a routine aspect in network op-
erations. Operators would like to understand changes and
trends in the application mix that is ﬂowing through the
network (e.g. detecting a a new popular ﬁle sharing proto-
col). Understanding trafﬁc trends is also crucial for trafﬁc
engineering, provisioning, and accounting applications. It
is therefore desirable that such trend analysis performed on
the compressed data yields accurate results when compared
to similar trend analysis on the raw (uncompressed) data. A
simple method to extract trends over long timescales is to
take the weekly average, and ﬁnd a linear ﬁt (using simple
linear regression to ﬁnd the slope of the line of best ﬁt) to
the weekly averages over multiple weeks of data. In Fig-
ure 15, we plot the relative error in estimating such a linear
trend. We estimate the trend using 20 weeks of data for dif-
USENIX Association
Internet Measurement Conference 2005  
263
l
e
m
u
o
V
c
i
f
f
a
r
T
d
e
z
i
l
a
m
r
o
N
1.2
1
0.8
0.6
0.4
0.2
0
−0.2
0
20
40
60
Original Traffic
Compressed Representation
Residual
Original Traffic
Compressed Representation
Residual
1.2
1
0.8
0.6
0.4
0.2
0
Original Traffic
Compressed Representation
Residual
1.2
1
0.8
0.6
0.4
0.2
0
l
e
m
u
o
V