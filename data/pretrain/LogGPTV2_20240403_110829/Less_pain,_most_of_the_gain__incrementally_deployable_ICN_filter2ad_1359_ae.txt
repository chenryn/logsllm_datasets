156to adopt idICN independently. At ﬁrst glance, these may appear
as potential stumbling blocks, but in comparison with clean-slate
ICN designs that require changing every router, every application,
and every networking stack, we believe the changes mandated by
idICN are minimal and incrementally attainable.
To demonstrate the feasibility and ease of use of idICN, we
have developed a prototype for the reverse proxy (generating Met-
alink metadata and signatures) based on the Metalink plugin of the
Apache Trafﬁc Server. We emulate the support for a few web-
sites to show idICN’s operations using legacy clients. Please visit
http://www.idicn.org/ for more information.
7. DISCUSSION
Workload evolution: Internet workloads are in a constant state of
ﬂux. For instance, a combination of technology trends—social net-
works, user-generated content, and smartphones—is creating more
“long-tailed” content [48]. Even if in the worst case, we approx-
imate these trends using a combination of low α and high spatial
skew as in Section 5, the marginal beneﬁt of pure ICN architectures
seems to be low. While we cannot further speculate how this evolu-
tion will play out, this only serves to reiterate the spirit of our work
and parallel efforts to avoid “overﬁtting” the network infrastructure
to speciﬁc workloads [19, 22].
Economic and policy aspects of idICN: As noted elsewhere [18],
there are valid economic (e.g., analytics for providers), legal (e.g.,
serving content with access restrictions), and privacy concerns
(e.g., caches know what you are requesting) surrounding ICN. It
is likely that idICN inherits some of these difﬁculties as well and
we do not have good answers yet. We do believe, however, that
by scoping the degree of caching and making it easier to attribute
where a request was served from, idICN might simplify solutions
to address some of these concerns. For instance, we know exactly
which caching proxy the resolver redirected a client to; this proxy
can provide the necessary accounting and reporting. These are open
and valid concerns for both ICN and idICN that need to be ad-
dressed in future work.
When is it viable to deploy a cache: Providers need incentives to
deploy caches in idICN (and ICN for that matter) and thus a natural
question here is where in the network should they choose to do
so. Operating a cache involves both ﬁxed upfront costs and several
operational costs (e.g., rack space, bandwidth, power, and cooling).
Based on informal and anecdotal evidence with CDN operators,
a rough rule of thumb is that the lifetime of caching hardware is
roughly 3–5 years and that this cache should serve enough trafﬁc to
be proﬁtable. We speculate that idICN deployment will be driven
by such economic considerations.
What idICN does not provide: We do acknowledge that a clean-
slate ICN architecture may provide other beneﬁts (e.g., broadcast
support or unifying caching and error recovery) that fall outside the
scope if idICN. Our focus in this paper is on the most prominently
perceived beneﬁts of ICN.
For instance, idICN does not attempt to address two less well-
understood beneﬁts of ICN: protection against denial of service and
congestion control. ICN eliminates some simple DoS attacks due
to IP spooﬁng [16]; the biggest beneﬁt, however, comes from the
caching to defend against request ﬂoods. We do not believe that
there is anything fundamental here; the beneﬁt here is simply am-
plifying the effective number of servers similar to commercial ser-
vices that offer DoS protection today [12]. Note that an architecture
based on edge caching, such as idICN, provides approximately the
same hit-ratios as a pervasively deployed ICN, indicating that such
an edge cache deployment can provide much of the same request
ﬂood protection as pervasively deployed ICNs. There is also some
perception that the hop-by-hop ﬂow control of some ICN proposals
(maintaining ﬂow balance) substantially reduces the dependence on
end-to-end congestion control [23]. idICN does not attempt to pro-
vide a clean-slate solution and simply retains standard congestion
control, but with separate congestion management on individual
segments: proxy-to-proxy and proxy-to-host.
8. RELATED WORK
The ICN related work is vast, including at least three ACM SIG-
COMM ICN workshops, two Dagstuhl gatherings, an ICNRG re-
search group, and numerous journal special editions. Covering this
here is impossible due to space constraints. We therefore focus on
the biggest research projects as well as the research papers that are
most relevant to our focus.
DONA consistently uses nearest-replica routing while CC-
N/NDN uses a hybrid of nearest replica (in LANs) and shortest
path to origin (in WANs). Qualitative features, such as intrinsic
binding and naming, can be made to only use end-to-end support
as we suggested. For example, NDN supports both human-readable
names and self-certifying names. The latter could be used in a sim-
ilar fashion to our idICN design.
The PSIRP project and its successor PURSUIT [15] take a dif-
ferent approach based on the publish-subscribe paradigm. Many
of the core contributions of these projects, such as zFilters [26],
will be useful in network architecture designs. The rendezvous
back-end of the project would, however, require major pervasive
changes to the architecture. It can, nevertheless, be deployed in-
crementally; the name resolution service can be implemented in a
way that does not require pervasive caching, nor replacement of the
existing switching infrastructure on the Internet.
The NetInf design from the 4WARD project is also based on
a name lookup resolution mechanism, using a DHT implementa-
tion [2]. We believe that the suggested clean slate design could be
adapted to be deployed in a way that does not require pervasive
caching. Furthermore, their support for an information abstraction
model, which allows multiple different representations of the same
object to exist, is highly useful and can be used in an end-to-end
fashion with architectures like our idICN.
The Serval project is not an ICN, but rather focuses on support-
ing a service-centric network [32]. As such, Serval does not require
a pervasive caching infrastructure. Serval shares many things with
our idICN design, including self-certifying names and much func-
tionality placed on end hosts. In particular, Serval provides details,
such as API design, about how ICNs or service-centric networks
could be integrated into the stack of modern computers.
We are not the ﬁrst to raise questions about the value and via-
bility of ICN architectures. These include concerns regarding the
scalability of ICN-capable routers [34], the privacy implications of
ICN [3], legal (e.g., access restrictions and copy right conerns [1])
and economic considerations (at an Internet scale deployment [34])
underlying such an infrastructure [1], and the performance beneﬁts
that ICN can provide [18]. While our work follows in this spirit,
our contribution here is two-fold. First, we provide a quantitative
basis to analyze the performance beneﬁts of universal caching and
nearest-replica routing. Second, we provide a reference design for
an incrementally deployable ICN architecture that retains most of
the advantages of hitherto proposed ICNs.
9. CONCLUSIONS
Our work can be viewed as an application of the end-to-
end argument—we should impose signiﬁcant changes to the net-
157work only if doing so will offer substantial performance im-
provements [38]. We apply this principle to many of the per-
ceived beneﬁts of ICN architectures. We ﬁnd that the compo-
nents of ICN that might need drastic changes to the network as
envisioned by some ICN proposals (pervasive caches and nearest-
replica routing) do not appear to be fundamentally necessary. Fur-
thermore, the other components of ICN can be implemented in a
backwards-compatible fashion using techniques that already exist
today. Building on these insights, we presented a roadmap for an
incrementally deployable architecture that can achieve the beneﬁts
of ICN without a forklift upgrade to existing networks.
10. ACKNOWLEDGMENTS
We would like to thank our shepherd David Oran, the SIG-
COMM reviewers, and Zafar Ayyub Qazi for their feedback.
Barath Raghavan contributed signiﬁcantly to early discussions that
informed the idICN design. This work was supported in part by
NSF grants CNS 1117161 and 1040838, and AFRL grant FA8750-
11-1-0262. Seyed Kaveh Fayazbakhsh was supported in part by a
Renaissance Technologies Fellowship.
11. REFERENCES
[1] B. Ahlgren, C. Dannewitz, C. Imbrenda, D. Kutscher, and B. Ohlman. A survey
of information-centric networking. Communications Magazine, IEEE, 50(7),
july 2012.
[2] P. A. Aranda, M. Zitterbart, Z. Boudjemil, M. Ghader, G. H. Garcia,
M. Johnsson, A. Karouia, G. Lazar, M. Majanen, P. Mannersalo, D. Martin,
M. T. Nguyen, S. P. Sanchez, P. Phelan, M. Ponce de Leon, G. Schultz,
M. Sollner, Y. Zaki, and L. Zhao. 4WARD.
http://www.4ward-project.eu/, 2010.
[3] S. Arianfar, T. Koponen, B. Raghavan, and S. Shenker. On preserving privacy in
content-oriented networks. In Proc. SIGCOMM Workshop on ICN, 2011.
[4] Browser Support for PAC and WPAD.
http://findproxyforurl.com/browser-support/.
[5] B. Baccala. Data-oriented networking.
http://tools.ietf.org/html/draft-baccala-data-
networking-00, 2002.
[6] D. Beaver, S. Kumar, H. C. Li, J. Sobel, and P. Vajgel. Finding a needle in
haystack: Facebook’s photo storage. In Proc. OSDI, 2010.
[7] L. Breslau, P. Cao, L. Fan, G. Phillips, and S. Shenker. Web caching and
Zipf-like distributions: evidence and implications. In Proc. INFOCOM, 1999.
[8] A. Bryan, N. McNab, T. Tsujikawa, P. Poeml, and H. Nordstrom.
Metalink/HTTP: Mirrors and Hashes. RFC 6249 (Proposed Standard), June
2011.
[9] Emerging Network Consortium Brings Industries Together to Innovate with
Content-Centric Networking (CCN). http://www.mach.com/en/News-
Events/Press-Room/Press-Releases/Emerging-Network-
Consortium-Brings-Industries-Together-
to-Innovate-with-Content-Centric-Networking-CCN.
[10] S. Cheshire, B. Aboba, and E. Guttman. Dynamic Conﬁguration of IPv4
Link-Local Addresses. RFC 3927 (Proposed Standard), May 2005.
[11] S. Cheshire and M. Krochmal. Multicast DNS. Technical report, IETF,
December 2011.
[12] CloudFlare security.
http://www.cloudflare.com/features-security.
[13] COntent Mediator architecture for content-aware nETworks (COMET).
http://www.comet-project.org/.
[14] I. Cooper, P. Gauthier, J. Cohen, M. Dunsmuir, and C. Perkins. Web proxy
auto-discovery protocol. Technical report, IETF, May 2001.
[15] N. Fotiou, P. Nikander, D. Trossen, and G. C. Polyzos. Developing information
networking further: From PSIRP to PURSUIT. In Proc. BROADNETS, 2010.
[16] P. Gasti, G. Tsudik, E. Uzun, and L. Zhang. DoS and DDoS in named-data
networking. CoRR, abs/1208.0952, 2012.
[17] A. Ghodsi, T. Koponen, J. Rajahalme, P. Sarolahti, and S. Shenker. Naming in
Content-Oriented Architectures. In Proc. SIGCOMM Workshop on ICN, 2011.
[18] A. Ghodsi, S. Shenker, T. Koponen, A. Singla, B. Raghavan, and J. Wilcox.
Information-centric networking: seeing the forest for the trees. In Proc.
HotNets, 2011.
[19] A. Ghodsi, S. Shenker, T. Koponen, A. Singla, B. Raghavan, and J. Wilcox.
Intelligent design enables architectural evolution. In Proc. HotNets, 2011.
[20] P. Gill, M. Arlitt, Z. Li, and A. Mahanti. YouTube trafﬁc characterization: A
view from the edge, imc. In Proc. IMC, 2007.
[21] M. Gritter and D. R. Cheriton. TRIAD: A New Next-Generation Internet
Architecture. http://www-dsg.stanford.edu/triad/, 2000.
[22] D. Han, A. Anand, F. Dogar, B. Li, H. Lim, M. Machado, A. Mukundan,
W. Wu, A. Akella, D. G. Andersen, J. W. Byers, S. Seshan, and P. Steenkiste.
XIA: efﬁcient support for evolvable internetworking. In Proc. NSDI, 2012.
[23] V. Jacobson, D. K. Smetters, J. D. Thornton, M. F. Plass, N. H. Briggs, and
R. L. Braynard. Networking named content. In Proc. CoNEXT, 2009.
[24] V. Jacobson, J. D. Thornton, D. K. Smetters, B. Zhang, G. Tsudik, k. claffy,
D. Krioukov, D. Massey, C. Papadopoulos, T. Abdelzaher, L. Wang, P. Crowley,
and E. Yeh. Named Data Networking (NDN) project.
http://named-data.net/techreport/TR001ndn-proj.pdf,
2010.
[25] W. Jiang, R. Zhang-Shen, J. Rexford, and M. Chiang. Cooperative content
distribution and trafﬁc engineering in an ISP network. In Proc. SIGMETRICS,
2009.
[26] P. Jokela, A. Zahemszky, C. Esteve Rothenberg, S. Arianfar, and P. Nikander.
LIPSIN: line speed publish/subscribe inter-networking. In Proc. SIGCOMM,
2009.
[27] D. Kim, J. Kim, Y. Kim, H. Yoon, and I. Yeom. Mobility support in content
centric networks. In Proc. SIGCOMM Workshop on ICN, 2012.
[28] T. Koponen, M. Chawla, B.-G. Chun, A. Ermolinskiy, K. H. Kim, S. Shenker,
and I. Stoica. A data-oriented (and beyond) network architecture. In Proc.
SIGCOMM, 2007.
[29] L. Li, X. Xu, J. Wang, and Z. Hao. Information-centric network in an ISP.
http://tools.ietf.org/html/draft-li-icnrg-icn-isp-01,
2013.
[30] D. Mazières, M. Kaminsky, M. F. Kaashoek, and E. Witchel. Separating key
management from ﬁle system security. In Proc. SOSP, 1999.
[31] G. Mohr. Magnet uri scheme draft, 2002. http://magnet-
uri.sourceforge.net/magnet-draft-overview.txt.
[32] E. Nordstrom, D. Shue, P. Gopalan, R. Kiefer, M. Arye, S. Ko, J. Rexford, , and
M. J. Freedman. Serval: An end-host stack for service-centric networking. In
Proc. NSDI, 2012.
[33] Navigator proxy auto-conﬁg ﬁle format. Netscape Navigator Documentation,
March 1996.
[34] D. Perino and M. Varvello. A reality check for content centric networking. In
Proc. SIGCOMM Workshop on ICN, 2011.
[35] I. Poese, B. Frank, G. Smaragdakis, S. Uhlig, A. Feldmann, and B. Maggs.
Enabling content-aware trafﬁc engineering. ACM SIGCOMM CCR,
42(5):21–28, October 2012.
[36] E. Rescorla and A. Schiffman. The Secure HyperText Transfer Protocol. RFC
2660 (Experimental), August 1999.
[37] Scalable and Adaptive Internet Solutions (SAIL).
http://www.sail-project.eu/.
[38] J. H. Saltzer, D. P. Reed, and D. D. Clark. End-to-end arguments in system
design. ACM Trans. Comput. Syst., 2(4), Nov. 1984.
[39] A. Sharma, A. Venkataramani, and R. Sitaraman. Distributing content simpliﬁes
isp trafﬁc engineering. In Proc. SIGMETRICS, 2013.
[40] K. Singh, H. J. Wang, A. Moshchuk, C. Jackson, and W. Lee. Practical
end-to-end web content integrity. In Proc. WWW, 2012.
[41] D. Skeen. Vitria’s publish-subscribe architecture: Publish-subscribe overview.
http://www.vitria.com/, 1998.
[42] D. Smetters and V. Jacobson. Securing Network Content. Technical report,
PARC, October 2009.
[43] N. Spring, R. Mahajan, D. Wetherall, and T. Anderson. Measuring ISP
topologies with rocketfuel. IEEE/ACM Trans. Netw., 12(1), Feb. 2004.
[44] S. Sun, L. Lannom, and B. Boesch. Handle System Overview. RFC 3650
(Informational), November 2003.
[45] S. Thomson, T. Narten, and T. Jinmei. IPv6 Stateless Address
Autoconﬁguration. RFC 4862 (Draft Standard), September 2007.
[46] Tibco enterprise message service. http://www.tibco.com/.
[47] Your gadgets are slowly breaking the internet.
http://www.technologyreview.com/news/509721/your-
gadgets-are-slowly-breaking-the-internet/.
[48] S. Traverso, K. Huguenin, I. Trestian, V. Erramilli, N. Laoutaris, and
K. Papagiannaki. Tailgate: handling long-tail content with a little help from
friends. In Proc. WWW, 2012.
[49] C. Tsilopoulos and G. Xylomenos. Supporting diverse trafﬁc types in
information centric networks. In Proc. SIGCOMM Workshop on ICN, 2011.
[50] G. Wachob, D. Reed, L. Chasen, W. Tan, and S. Churchill. Extensible resource
identiﬁer (XRI) resolution version 2.0. Committee Draft, 3, 2008.
[51] M. Walﬁsh, H. Balakrishnan, and S. Shenker. Untangling the Web from DNS.
In Proc. NSDI, 2004.
[52] A. Wolman, G. M. Voelker, N. Sharma, N. Cardwell, A. Karlin, and H. M.
Levy. On the scale and performance of cooperative web proxy caching. In Proc.
SOSP, 1999.
[53] The IETF Zeroconf Working Group, 2004.
http://datatracker.ietf.org/wg/zeroconf/charter/.
158