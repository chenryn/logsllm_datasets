(cid:2)(cid:32)(cid:29)(cid:33)(cid:1)
(cid:5)(cid:3)(cid:32)(cid:29)(cid:33)(cid:1)
(cid:24)(cid:23)(cid:25)(cid:26)(cid:1)(cid:34)(cid:1)
(cid:9)(cid:12)(cid:1)
(cid:2)(cid:33)(cid:29)(cid:32)(cid:1)
(cid:8)(cid:32)(cid:29)(cid:32)(cid:1)
(cid:8)(cid:32)(cid:29)(cid:33)(cid:1)
(cid:11)(cid:6)(cid:1)(cid:2)(cid:32)(cid:29)(cid:32)(cid:1)(cid:10)(cid:13)(cid:18)(cid:1)(cid:10)(cid:13)(cid:14)(cid:21)(cid:17)(cid:1)
(cid:1)(cid:8)(cid:7)(cid:10)(cid:5)(cid:12)(cid:10)(cid:1)(cid:3)(cid:4)(cid:6)(cid:1)
(cid:3)(cid:17)(cid:22)(cid:19)(cid:18)(cid:22)(cid:1) (cid:32)(cid:1)
(cid:2)(cid:27)(cid:13)(cid:15)(cid:20)(cid:1) (cid:30)(cid:33)(cid:29)(cid:34)(cid:31)(cid:1)
(cid:9)(cid:12)(cid:1)(cid:4)(cid:23)(cid:25)(cid:28)(cid:13)(cid:25)(cid:16)(cid:19)(cid:22)(cid:18)(cid:1)(cid:10)(cid:13)(cid:14)(cid:21)(cid:17)(cid:1)
(cid:11)(cid:6)(cid:1)(cid:2)(cid:32)(cid:29)(cid:33)(cid:1)(cid:10)(cid:13)(cid:18)(cid:1)(cid:10)(cid:13)(cid:14)(cid:21)(cid:17)(cid:1)
(cid:1)(cid:8)(cid:7)(cid:10)(cid:5)(cid:12)(cid:10)(cid:1)(cid:3)(cid:4)(cid:6)(cid:1)
(cid:3)(cid:17)(cid:22)(cid:19)(cid:18)(cid:22)(cid:1) (cid:32)(cid:1)
(cid:2)(cid:27)(cid:13)(cid:15)(cid:20)(cid:1) (cid:30)(cid:33)(cid:29)(cid:1)(cid:34)(cid:31)(cid:1)
(cid:3)(cid:4)(cid:6)(cid:1)(cid:8)(cid:11)(cid:10)(cid:2)(cid:8)(cid:9)(cid:10)(cid:1)
(cid:32)(cid:1) (cid:7)(cid:23)(cid:25)(cid:26)(cid:1)(cid:33)(cid:1)
(cid:33)(cid:1) (cid:7)(cid:23)(cid:25)(cid:26)(cid:1)(cid:34)(cid:1)
(cid:34)(cid:1) (cid:7)(cid:23)(cid:25)(cid:26)(cid:1)(cid:35)(cid:1)
(b) A distributed load balancer design.
(cid:1)(cid:6)(cid:5)(cid:6)(cid:1)
(cid:1)(cid:6)(cid:5)(cid:7)(cid:1)
(cid:3)(cid:2)(cid:1)
(cid:4)(cid:6)(cid:5)(cid:6)(cid:1)
(cid:4)(cid:6)(cid:5)(cid:7)(cid:1)
(cid:4)(cid:6)(cid:5)(cid:8)(cid:1)
(a) A naive load
balancer design.
Figure 7: Different load balancer design points.
module). This scheme, thus, satisﬁes the load balancing
requirement in a scalable manner.
Other issues: There are two remaining practical issues:
• Number of tag bits: We give a simple upper bound on
the required number of bits to encode tags. First, to
support context-dependent forwarding out of a VM
with k relevant contexts, we need k distinct tag val-
ues. Second. to support load balancing among l VMs
of the same logical type, each VM needs to be popu-
lated with a tag pool including l tags. Thus, at each
VM we need at most k× l distinct tag values. There-
fore, an upper bound on the total number of unique
tag values is kmax × lmax × ∑
|, where kmax
and lmax are the maximum number of contexts and
VMs of the same type in a graph, and Vannotated
is
the set of vertices of annotated graph for attack type
a. To make this concrete, across the evaluation ex-
periments §8, the maximum value required tags was
800, that can be encoded in log2(800) = 10 bits.
In practice, this tag space requirement of Bohatei
can be easily satisﬁed given that datacenter grade
networking platforms already have extensible header
ﬁelds [56].
a | Vannotated
a
a
• Bidirectional processing: Some logical modules may
have bidirectional semantics. For example, in case
of a DNS ampliﬁcation attack, request and response
trafﬁc must be processed by the same VM. (In other
cases, such as the UDP ﬂood attack, bidirectional-
ity is not required.). To enforce bidirectionality, ISP
edge switches use tag values of outgoing trafﬁc so
that when the corresponding incoming trafﬁc comes
back, edge switches sends it to the datacenter within
which the VM that processed the outgoing trafﬁc is
located. Within the datacenter, using this tag value,
the trafﬁc is steered to the VM.
6 Strategy Layer
As we saw in §4, a key input to the resource manager
module is the set of Te,a values, which represents the vol-
ume of suspicious trafﬁc of each attack type a arriving at
each edge PoP e. This means we need to estimate the fu-
824  24th USENIX Security Symposium 
USENIX Association
ture attack mix based on observed measurements of the
network and then instantiate the required defenses. We
begin by describing an adversary that intends to thwart
a Bohatei-like system. Then, we discuss limitations of
strawman solutions before describing our online adapta-
tion mechanism.
Interaction model: We model the interaction between
the ISP running Bohatei and the adversary as a repeated
interaction over several epochs. The ISP’s “move” is
one epoch behind the adversary; i.e., it takes Bohatei an
epoch to react to a new attack scenario due to implemen-
tation delays in Bohatei operations. The epoch duration
is simply the sum of the time to detect the attack, run the
resource manager, and execute the network orchestration
logic. While we can engineer the system to minimize this
lag, there will still be non-zero delays in practice and thus
we need an adaptation strategy.
Objectives: Given this interaction model, the ISP has to
pre-allocate VMs and hardware resources for a speciﬁc
attack mix. An intelligent and dynamic adversary can
change its attack mix to meet two goals:
G1 Increase hardware resource consumption: The ad-
versary can cause ISP to overprovision defense VMs.
This may impact the ISP’s ability to accommodate
other attack types or reduce proﬁts from other ser-
vices that could have used the infrastructure.
G2 Succeed in delivering attack trafﬁc: If the ISP’s de-
tection and estimation logic is sub-optimal and does
not have the required defenses installed, then the ad-
versary can maximize the volume of attack trafﬁc de-
livered to the target.
The adversary’s goal is to maximize these objectives,
while the ISPs goal is to minimize these to the extent pos-
sible. One could also consider a third objective of collat-
eral damage on legitimate trafﬁc; e.g., introduce need-
less delays. We do not discuss this dimension because
our optimization algorithm from §4 will naturally push
the defense as close to the ISP edge (i.e., trafﬁc ingress
points) as possible to minimize the impact on legitimate
trafﬁc.
Threat model: We consider an adversary with a ﬁxed
budget in terms of the total volume of attack trafﬁc it can
launch at any given time. Note that the adversary can
apportion this budget across the types of attacks and the
ingress locations from which the attacks are launched.
Formally, we have ∑
Te,a ≤ B, but there are no con-
e
straints on the speciﬁc Te,a values.
Limitations of strawman solutions: For simplicity, let
us consider a single ingress point. Let us consider a
strawman solution called PrevEpoch where we measure
the attack observed in the previous epoch and use it as the
estimate for the next epoch. Unfortunately, this can have
∑
a
serious issues w.r.t. goals G1 and G2. To see why, con-
sider a simple scenario where we have two attack types
with a budget of 30 units and three epochs with the attack
volumes as follows: T1: A1= 10, A2=0; T2: A1=20,
A2=0; T3: A1=0; A2=30. Now consider the PrevEpoch
strategy starting at the 0,0 conﬁguration. It has a total
wastage of 0,0,20 units and a total evasion of 10,10,30
units because it has overﬁt to the previous measurement.
We can also consider other strategies; e.g., a Uniform
strategy that provisions 15 units each for A1 and A2 or
extensions of these to overprovision where we multiply
the number of VMs given by the resource manager in the
last epoch by a ﬁxed value γ > 1. However, these suffer
from the same problems and are not competitive.
Online adaptation: Our metric of success here is to
have low regret measured with respect to the best static
solution computed in hindsight [36]. Note that in gen-
eral, it is not possible to be competitive w.r.t. the best
dynamic solution since that presumes oracle knowledge
of the adversary, which is not practical.
Intuitively, if we have a non-adaptive adversary, using
the observed empirical average is the best possible static
hindsight estimation strategy; i.e., T∗e,a = ∑t Te,a,t
would
|t|
be the optimal solution (|t| denotes the total number of
epochs). However, an attacker who knows that we are
using this strategy can game the system by changing the
attack mix. To address this, we use a follow the per-
turbed leader (FPL) strategy [36] where our estimation
uses a combination of the past observed behavior of the
adversary and a randomized component. Intuitively, the
random component makes it impossible for the attacker
to predict the ISP’s estimates. This is a well-known ap-
proach in online algorithms to minimize the regret [36].
Speciﬁcally, the trafﬁc estimates for the next epoch t +1,
denoted by (cid:31)Te,a,t+1 values, are calculated based on the
average of the past values plus a random component:
(cid:31)Te,a,t+1 =
+ randperturb.
∑t
t=1 Te,a,t
|t|
2×B
nextE poch×|E|×|A|
Implementation
Here, Te,a,t is the empirically observed value of the
attack trafﬁc and randperturb is a random value drawn
]. (This is assuming a
uniformly from [0,
total defense of budget of 2× B.) It can be shown that
this is indeed a provably good regret minimization strat-
egy [36]; we do not show the proof for brevity.
7
In this section, we brieﬂy describe how we implemented
the key functions described in the previous sections. We
have made the source code available [1].
7.1 DDoS defense modules
The design of the Bohatei strategy layer is inspired by
the prior modular efforts in Click [7] and Bro [46]. This
modularity has two advantages. First, it allows us to
USENIX Association  
24th USENIX Security Symposium  825
adopt best of breed solutions and compose them for dif-
ferent attacks. Second, it enables more ﬁne-grained scal-
ing. At a high level, there are two types of logical build-
ing blocks in our defense library:
1. Analysis (A): Each analysis module processes a sus-
picious ﬂow and determines appropriate action (e.g.,
more analysis or speciﬁc response).
It receives a
packet and outputs a tagged packet, and the tags are
used to steer trafﬁc to subsequent analysis and re-
sponse module instances as discussed earlier.
2. Response (R): The input to an R module is a tagged
packet from some A module. Typical responses in-
clude forward to customer (for benign trafﬁc), log,
drop, and rate limit. Response functions will depend
on the type of attack; e.g., sending RST packets in
case of a TCP SYN attack.
Next, we describe defenses we have implemented for
different DDoS attacks. Our goal here is to illustrate the
ﬂexibility Bohatei provides in dealing with a diverse set
of known attacks rather than develop new defenses.
1. SYN ﬂood (Figure 8): We track the number of open
TCP sessions for each source IP; if a source IP has
no asymmetry between SYNs and ACKs, then mark
its packets as benign. If a source IP never completes
a connection, then we can mark its future packets as
known attack packets. If we see a gray area where the
source IP has completed some connections but not
others, in which case we use a SYN-Proxy defense
(e.g., [9, 28]).
2. DNS ampliﬁcation (Figure 9): We check if the DNS
server has been queried by some customer IP. This
example highlights another advantage—we can de-
couple fast (e.g., the header-based A LIGHTCHECK
module) and slow path analyses (e.g., the second A
module needs to look into payloads). The responses
are quite simple and implement logging, dropping, or
basic forwarding to the destination. We do not show
the code for brevity.
3. UDP ﬂood: The analysis node A UDP identiﬁes
source IPs that send an anomalously higher num-
ber of UDP packets and uses this to categorize each
packet as either attack or benign. The function
forward will direct the packet to the next node in the
defense strategy; i.e., R OK if benign, or R LOG if
attack.
4. Elephant ﬂow: Here, the attacker launches legiti-
mate but very large ﬂows. The A module detects ab-
normally large ﬂows and ﬂags them as attack ﬂows.
The response is to randomly drop packets from these
large ﬂows (not shown).
Attack detection: We use simple time series anomaly
detection using nfdump, a tool that provides NetFlow-
(cid:2)(cid:15)(cid:12)(cid:14)(cid:8)(cid:4)(cid:7)(cid:9)(cid:9)(cid:3)(cid:1)
(cid:41)(cid:41)(cid:4)(cid:24)(cid:20)(cid:3)(cid:29)(cid:35)(cid:28)(cid:33)(cid:1)(cid:33)(cid:31)(cid:14)(cid:16)(cid:25)(cid:32)(cid:1)(cid:17)(cid:24)(cid:20)(cid:1)(cid:15)(cid:41)(cid:37)(cid:1)(cid:32)(cid:38)(cid:28)(cid:1)(cid:14)(cid:28)(cid:17)(cid:1)(cid:14)(cid:16)(cid:25)(cid:1)
(cid:41)(cid:41)(cid:14)(cid:22)(cid:22)(cid:31)(cid:18)(cid:22)(cid:14)(cid:33)(cid:18)(cid:17)(cid:1)(cid:29)(cid:36)(cid:18)(cid:31)(cid:1)(cid:32)(cid:29)(cid:27)(cid:18)(cid:1)(cid:37)(cid:24)(cid:28)(cid:17)(cid:29)(cid:37)(cid:1)
(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:1)(cid:48)(cid:1)(cid:30)(cid:25)(cid:33)(cid:40)(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:1)
(cid:24)(cid:19)(cid:1)(cid:42)(cid:11)(cid:3)(cid:9)(cid:1)(cid:30)(cid:25)(cid:33)(cid:1)(cid:37)(cid:24)(cid:33)(cid:23)(cid:1)(cid:10)(cid:13)(cid:8)(cid:1)(cid:32)(cid:18)(cid:33)(cid:1)(cid:14)(cid:28)(cid:17)(cid:1)(cid:2)(cid:3)(cid:7)(cid:1)(cid:35)(cid:28)(cid:32)(cid:18)(cid:33)(cid:43)(cid:1)
(cid:1)(cid:10)(cid:38)(cid:28)(cid:3)(cid:29)(cid:35)(cid:28)(cid:33)(cid:44)(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:45)(cid:47)(cid:47)(cid:39)(cid:1)
(cid:24)(cid:19)(cid:1)(cid:42)(cid:30)(cid:25)(cid:33)(cid:1)(cid:24)(cid:32)(cid:1)(cid:11)(cid:3)(cid:9)(cid:1)(cid:14)(cid:28)(cid:17)(cid:1)(cid:21)(cid:31)(cid:32)(cid:33)(cid:1)(cid:2)(cid:3)(cid:7)(cid:43)(cid:1)
(cid:1)(cid:5)(cid:24)(cid:31)(cid:32)(cid:33)(cid:2)(cid:16)(cid:25)(cid:3)(cid:29)(cid:35)(cid:28)(cid:33)(cid:44)(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:45)(cid:47)(cid:47)(cid:39)(cid:1)
(cid:12)(cid:30)(cid:17)(cid:14)(cid:33)(cid:18)(cid:4)(cid:24)(cid:20)(cid:3)(cid:29)(cid:35)(cid:28)(cid:33)(cid:42)(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:43)(cid:1)(cid:1)
(cid:24)(cid:19)(cid:1)(cid:42)(cid:4)(cid:24)(cid:20)(cid:3)(cid:29)(cid:35)(cid:28)(cid:33)(cid:42)(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:43)(cid:1)(cid:48)(cid:1)(cid:1)(cid:10)(cid:38)(cid:28)(cid:3)(cid:29)(cid:35)(cid:28)(cid:33)(cid:44)(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:45)(cid:43)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:13)(cid:5)(cid:16)(cid:12)(cid:2)(cid:17)(cid:2)(cid:18)(cid:5)(cid:6)(cid:12)(cid:42)(cid:30)(cid:25)(cid:33)(cid:43)(cid:39)(cid:1)
(cid:18)(cid:26)(cid:32)(cid:18)(cid:1)(cid:1)(cid:24)(cid:19)(cid:1)(cid:42)(cid:4)(cid:24)(cid:20)(cid:3)(cid:29)(cid:35)(cid:28)(cid:33)(cid:42)(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:43)(cid:1)(cid:49)(cid:1)(cid:46)(cid:43)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:13)(cid:5)(cid:16)(cid:12)(cid:2)(cid:17)(cid:4)(cid:14)(cid:12)(cid:14)(cid:15)(cid:19)(cid:14)(cid:42)(cid:30)(cid:25)(cid:33)(cid:43)(cid:39)(cid:1)
(cid:18)(cid:26)(cid:32)(cid:18)(cid:1)(cid:1)(cid:24)(cid:19)(cid:1)(cid:42)(cid:4)(cid:24)(cid:20)(cid:3)(cid:29)(cid:35)(cid:28)(cid:33)(cid:42)(cid:32)(cid:31)(cid:16)(cid:6)(cid:9)(cid:43)(cid:1)(cid:48)(cid:1)(cid:46)(cid:1)(cid:43)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:13)(cid:5)(cid:16)(cid:12)(cid:2)(cid:17)(cid:3)(cid:8)(cid:14)(cid:11)(cid:10)(cid:14)(cid:42)(cid:30)(cid:25)(cid:33)(cid:43)(cid:39)(cid:1)
(cid:9)(cid:15)(cid:16)(cid:19)(cid:5)(cid:16)(cid:7)(cid:42)(cid:30)(cid:25)(cid:33)(cid:43)(cid:39)(cid:1)
(cid:11)(cid:15)(cid:12)(cid:14)(cid:8)(cid:10)(cid:11)(cid:9)(cid:13)(cid:14)(cid:1)
(cid:44)(cid:12)(cid:28)(cid:25)(cid:28)(cid:29)(cid:37)(cid:28)(cid:45)(cid:1)
(cid:44)(cid:2)(cid:34)(cid:14)(cid:16)(cid:25)(cid:45)(cid:1)
(cid:44)(cid:2)(cid:34)(cid:14)(cid:16)(cid:25)(cid:45)(cid:1)
(cid:11)(cid:15)(cid:7)(cid:9)(cid:5)(cid:1)
(cid:11)(cid:15)(cid:3)(cid:11)(cid:9)(cid:10)(cid:1)
(cid:44)(cid:15)(cid:18)(cid:28)(cid:24)(cid:22)(cid:28)(cid:45)(cid:1)
(cid:11)(cid:15)(cid:9)(cid:6)(cid:1)
Figure 8: SYN Flood defense strategy graph.
(cid:2)(cid:18)(cid:10)(cid:8)(cid:6)(cid:7)(cid:17)(cid:3)(cid:7)(cid:5)(cid:3)(cid:9)(cid:1)
(cid:21)(cid:20)(cid:1)(cid:37)(cid:26)(cid:22)(cid:30)(cid:1)(cid:21)(cid:29)(cid:1)(cid:5)(cid:11)(cid:13)(cid:1)(cid:28)(cid:19)(cid:27)(cid:31)(cid:19)(cid:29)(cid:30)(cid:38)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:27)(cid:31)(cid:19)(cid:28)(cid:21)(cid:19)(cid:18)(cid:13)(cid:19)(cid:28)(cid:32)(cid:19)(cid:28)(cid:39)(cid:26)(cid:22)(cid:30)(cid:36)(cid:18)(cid:29)(cid:30)(cid:9)(cid:12)(cid:40)(cid:1)(cid:41)(cid:1)(cid:30)(cid:28)(cid:31)(cid:19)(cid:35)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:15)(cid:6)(cid:19)(cid:14)(cid:2)(cid:20)(cid:3)(cid:9)(cid:16)(cid:13)(cid:11)(cid:16)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:35)(cid:1)
(cid:21)(cid:20)(cid:1)(cid:37)(cid:26)(cid:22)(cid:30)(cid:1)(cid:21)(cid:29)(cid:1)(cid:5)(cid:11)(cid:13)(cid:1)(cid:28)(cid:19)(cid:29)(cid:26)(cid:25)(cid:24)(cid:29)(cid:19)(cid:38)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:21)(cid:20)(cid:1)(cid:37)(cid:34)(cid:27)(cid:31)(cid:19)(cid:28)(cid:21)(cid:19)(cid:18)(cid:13)(cid:19)(cid:28)(cid:32)(cid:19)(cid:28)(cid:39)(cid:26)(cid:22)(cid:30)(cid:36)(cid:29)(cid:28)(cid:17)(cid:9)(cid:12)(cid:40)(cid:38)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:15)(cid:6)(cid:19)(cid:14)(cid:2)(cid:20)(cid:2)(cid:22)(cid:6)(cid:7)(cid:14)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:35)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:19)(cid:23)(cid:29)(cid:19)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:15)(cid:6)(cid:19)(cid:14)(cid:2)(cid:20)(cid:5)(cid:16)(cid:14)(cid:16)(cid:17)(cid:24)(cid:16)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:35)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:10)(cid:17)(cid:19)(cid:24)(cid:6)(cid:19)(cid:8)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:35)(cid:1)
(cid:39)(cid:15)(cid:11)(cid:10)(cid:40)(cid:1)
(cid:2)(cid:18)(cid:11)(cid:2)(cid:17)(cid:3)(cid:7)(cid:15)(cid:14)(cid:16)(cid:17)(cid:1)
(cid:21)(cid:20)(cid:1)(cid:37)(cid:26)(cid:22)(cid:30)(cid:1)(cid:21)(cid:29)(cid:1)(cid:5)(cid:11)(cid:13)(cid:1)(cid:28)(cid:19)(cid:27)(cid:31)(cid:19)(cid:29)(cid:30)(cid:38)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:28)(cid:19)(cid:27)(cid:31)(cid:19)(cid:29)(cid:30)(cid:8)(cid:21)(cid:29)(cid:30)(cid:25)(cid:28)(cid:33)(cid:39)(cid:26)(cid:22)(cid:30)(cid:40)(cid:1)(cid:41)(cid:1)(cid:30)(cid:28)(cid:31)(cid:19)(cid:35)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:15)(cid:6)(cid:19)(cid:14)(cid:2)(cid:20)(cid:3)(cid:9)(cid:16)(cid:13)(cid:11)(cid:16)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:35)(cid:1)
(cid:21)(cid:20)(cid:1)(cid:37)(cid:26)(cid:16)(cid:17)(cid:22)(cid:19)(cid:30)(cid:1)(cid:21)(cid:29)(cid:1)(cid:5)(cid:11)(cid:13)(cid:1)(cid:28)(cid:19)(cid:29)(cid:26)(cid:25)(cid:24)(cid:29)(cid:19)(cid:38)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:21)(cid:20)(cid:1)(cid:26)(cid:25)(cid:15)(cid:6)(cid:21)(cid:7)(cid:12)(cid:4)(cid:9)(cid:18)(cid:23)(cid:9)(cid:20)(cid:21)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:38)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:15)(cid:6)(cid:19)(cid:14)(cid:2)(cid:20)(cid:2)(cid:22)(cid:6)(cid:7)(cid:14)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:35)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:19)(cid:23)(cid:29)(cid:19)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:15)(cid:6)(cid:19)(cid:14)(cid:2)(cid:20)(cid:3)(cid:9)(cid:16)(cid:13)(cid:11)(cid:16)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:35)(cid:1)
(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)(cid:1)
(cid:1)(cid:10)(cid:17)(cid:19)(cid:24)(cid:6)(cid:19)(cid:8)(cid:37)(cid:26)(cid:22)(cid:30)(cid:38)(cid:1)
(cid:39)(cid:3)(cid:6)(cid:11)(cid:9)(cid:7)(cid:11)(cid:40)(cid:1)
(cid:39)(cid:2)(cid:14)(cid:14)(cid:2)(cid:4)(cid:10)(cid:40)(cid:1)
(cid:39)(cid:3)(cid:6)(cid:11)(cid:9)(cid:7)(cid:11)(cid:40)(cid:1)
(cid:39)(cid:2)(cid:14)(cid:14)(cid:2)(cid:4)(cid:10)(cid:40)(cid:1)
(cid:15)(cid:18)(cid:12)(cid:9)(cid:1)
(cid:15)(cid:18)(cid:4)(cid:15)(cid:12)(cid:13)(cid:1)