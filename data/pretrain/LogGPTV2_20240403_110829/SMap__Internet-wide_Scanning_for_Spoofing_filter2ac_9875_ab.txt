### Reports on Egress Filtering Deployment

Several reports have been published providing statistics on the deployment of egress filtering in the Internet [6, 7, 28, 30]. These statistics are summarized in Table 1.

### Challenges with the Spoofer Project

The Spoofer Project requires users to download, compile, and execute a software that needs administrative privileges. This approach has several limitations:
- **Technical Expertise:** It necessitates technically knowledgeable volunteers who are willing to run untrusted code.
- **Network Agreement:** Networks must agree to host such vantage points, which can be challenging due to security concerns.
- **Limited Coverage:** Extending the coverage is difficult as operators are unlikely to volunteer or conduct measurements that could reveal their network's negative security posture, including lack of BCP38 support [19].

To address these issues, [22] suggests that crowd-sourcing is a more viable method for measuring spoofed packet filtering. In 2018, [28] conducted a one-time study using a 2,000 EUR crowd-sourcing platform, where workers executed the Spoofer software over six weeks. This study covered an additional 342 ASes not previously included in the Spoofer Project. However, crowd-sourcing is expensive and limited by the networks in which workers are present, and it does not provide longitudinal and repetitive studies that can be validated and reproduced.

### Longitudinal Data Analysis

A recent longitudinal data analysis by the Spoofer Project [30] observed that despite increased coverage of ASes without ingress filtering, the test coverage across networks and geo-locations remains non-uniform.

### Vantage Points and Misconfigured Servers

Closely related to the Spoofer Project are vantage point measurements with misconfigured servers. [34] noted that some DNS resolvers do not change the source IP addresses of forwarded DNS requests, returning responses using the IP addresses of upstream resolvers. This issue is attributed to broken networking implementations. [26] used this observation to measure egress filtering in networks with such misconfigured DNS resolvers. However, this method is limited to networks with broken DNS servers, and out of 225,888 networks, only 870 had such servers.

### Importance of the Spoofer and Open Resolver Projects

The Spoofer and Open Resolver Projects are crucial as they provide vantage points for measuring spoofing, facilitating numerous research works. However, studies like [22, 30] highlight the representativeness issues of the collected data. Both projects acknowledge the need to increase measurement coverage and the challenges in obtaining better and stable vantage points.

### Alternative Methods for Measuring Spoofing

#### Network Traces

To overcome the dependency on vantage points, researchers have explored alternative methods:

- **Traceroute Loops:** [29] used traceroute loops to infer the ability to send packets from spoofed IP addresses. This method detects lack of ingress filtering on provider ASes but has significant limitations, such as the inability to detect transient misconfigurations and the difficulty in reproducing results.
- **IXP Traces:** [27] developed a methodology to passively detect spoofed packets in traces recorded at a European IXP connecting 700 networks. This approach requires cooperation from the IXP and is limited to connected networks.
- **IP Address Characteristics and On-Path Equipment:** Other studies have analyzed network traces for ingress filtering using IP address characteristics [4, 9, 10, 14, 36] or by inspecting on-path network equipment reactions to unwanted traffic [44]. These studies have limited coverage and do not support longitudinal and repeatable data collection.

### SMap: Scanning for Spoofable Networks

#### Dataset Scan

SMap architecture consists of two parts: dataset scan and ingress filtering scan. The dataset scan collects popular services using domain-based and IPv4-based scans. For IPv4 scans, SMap probes every IP address for open ports corresponding to specific services (e.g., port 25 for Email, 53 for DNS, 80/443 for Web). To reduce traffic volume, SMap also queries input domains for services.

#### Methodology

SMap uses active probes sent from both spoofed and real source IP addresses to popular services on tested networks. If packets with spoofed addresses reach the services, they trigger a measurable action. SMap employs three techniques to detect if networks filter spoofed traffic: DNS lookup, IPID, and PMTUD based. The orchestrator coordinates and synchronizes prober hosts, which receive the dataset of networks to be scanned. Each successful test indicates that spoofed packets reached the destination, implying a lack of filtering. Results are stored in a backend database and displayed via a GUI.

#### IPID Technique

Each IP packet contains an IP Identifier (IPID) field, which helps identify fragments of the same original packet. IPID assignment algorithms can be categorized as random or predictable. Predictable algorithms use a global counter or multiple counters per destination IP address, incrementing in predictable quotas.

**Methodology:**
- **Globally Incremental IPID:** SMap uses services with globally incremental IPID values. By sampling the IPID value before and after sending spoofed packets, SMap infers whether the spoofed packets incremented the IPID counter.
- **Identifying Global IPID Counters:** SMap sends packets from two hosts to a server on a tested network and applies suitable tests (TCP SYN, ping, DNS requests) to identify servers with globally incremental IPID values.
- **Measuring IPID Increment Rate:** Traffic to servers is stable and predictable. SMap validates this by sampling IPID values and plotting the results, demonstrating predictable increment rates.

**Accuracy:**
- **Statistical Analyses:** IPID techniques require significant statistical analyses to ensure correctness. Recent work [17, 37] developed statistical methods for measuring IPID, but their goal differs from SMap, focusing on censorship with additional sources of inaccuracy.

### Conclusion

SMap provides a comprehensive and scalable approach to measuring spoofing across the Internet, addressing the limitations of existing methods. By leveraging popular services and robust statistical techniques, SMap aims to provide reliable and reproducible data on network spoofing.