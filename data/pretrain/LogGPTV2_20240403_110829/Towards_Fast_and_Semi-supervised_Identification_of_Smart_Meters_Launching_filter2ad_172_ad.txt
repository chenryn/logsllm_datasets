additive, deductive, camou(cid:30)age. For notational simplicity, hence-
forth we will refer to H Mav❕ (T ) and AMav❕ (T ) as H M and AM
respectively. The resilient mean ( µM R (T ) ) and standard deviation
( σM R (T ) ) for window T , is referred as µM R and σM R respectively.
If both H M and AM values have increased compared to Ft r i❕,
then it is an additive attack. In deductive attack, both H M and AM
decreases from the Ft r i❕. In camou(cid:30)age, the AM does not change
much and H M decreases. The various possibilities are depicted in
Table 1. A pictorial view of this is shown later in Fig. 12 and Fig. 13.
5.1.4 Consensus Correction: We calculate the resilient
mean at each window T (µM R ), as an estimation of the actual mean,
given the information on presence and the type of attack. We ex-
ploit the robustness of H M and AM, under di(cid:29)erent attack types
for estimation of the actual mean.
Table 1: Inferring Attack Types
HM,AM
Up,Up
Ratio
Inference
Down
Additive
Down
Deductive
Down Down,Similar Camou(cid:30)age
Similar
Similar Down,Down
Down,Down
Legit Down
Up,Up
Legit Up
µM R
HM-(AM-HM)
AM+(AM-HM)
HM
AM
AM
Mean Correction: The choice of µM R is guided by how the de-
tected attack type biases the actual values of H M and AM. For ad-
ditive attacks, the growth in H M is less than AM due to slower
growth rate although both increases from actual AM. Hence, we
deduct corrective factor (AM − H M ) from the observed H M to es-
timate the µM R . For deductive attacks, H M has a faster decay rate
than AM. Since, H M ≤ AM, for deductive attacks, H M is even
lesser than the reduced AM. Hence, we add to the observed AM,
the corrective factor (AM − H M ), to estimate the µM R such that
µM R = AM + (AM − H M ) is closer to the actual mean and far from
deductive outliers at the same time. We choose to add (AM − H M )
to the AM because of larger H M drop for deductive attacks can
cause (AM − H M ) value to be very high (when ρmal and/or δav❕
is high). Adding it to H M may be far less than the true mean. Hence,
adding it to AM makes µM R closer to the actual AM.
For camou(cid:30)age attacks, H M works as a good measure of µM R
due to its stability to partial presence of false additive data. In fact,
using the H M for camou(cid:30)age helps distinguish meters launching
additive falsi(cid:27)cation from meters launching deductive falsi(cid:27)cation,
because H M is not symmetrically distant from the additive and de-
ductive outliers, unlike AM. The deductive meters will have trust
values lesser than honest meters but higher trust than additive me-
ters. This is because H M will be closest to the data generated from
honest meters followed by deductive and furthest from data gen-
erated from additive meters. Alternatively, if the separate identi-
(cid:27)cation of additive and deductive outlier meters are not desired
AM may be used for µM R . In general, AM is more robust mean for
camou(cid:30)age attacks, when ρmal for camou(cid:30)age attack is ≥ 50%.
The extent of drop in the Qr at io
av❕ (T ) is an indication of ρmal and
δav❕. The larger the drop in Qr at io
av❕ (T ) larger is the ρmal and δav❕
and larger the bias in the observed mean. In case, no organized at-
tack is detected from anomaly detection phase, µM R is equal to the
observed AM. Table 1, summarizes the calculation of µM R .
Standard Deviation Correction: The σM R will increase regardless
the type of data falsi(cid:27)cation attack (except for low additive attacks).
Therefore, a directional correction is not possible like µM R based
on the attack types. Using the measured σM R of the last time win-
dow, before detection of orchestrated attack, may not be wise since
Session 5: Machine Learning 1ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea179ASIA CCS ’18, June 4–8, 2018, Incheon, Republic of Korea
Bha(cid:29)acharjee et al.
there may be a longer delay between the launch and the actual de-
tection of the falsi(cid:27)cation (such as in incremental attacks). Alterna-
tively, one may be tempted to use the historical value of SDav❕ (T )
on the corresponding T -th day in the previous years. However, this
would add to the storage complexity. Moreover standard deviation
on the same days on successive years are not necessarily same. We
studied the distribution of SDav❕ (T ) over the years and found that
a distinct mode of SDav❕ (T ) distribution occurs at 425 − 475W
range in the non-transformed scale. The probability of SDav❕ (T )
being around 425 − 475W is very high over 50% while all other
ranges are less than 10%. As an approximation, we choose σM R as
ln(450), whenever orchestrated attacks have been con(cid:27)rmed for us-
ing it in the subsequent trust model. The distribution of SDav❕ (T )
is shown in Appendix B.
5.2 Consensus Aware Trust Scoring Model
The trust scoring model has three parts: discrete rating criterion,
Folded Gaussian distribution based weights, inverse power law ker-
nel based trust metric.
The discrete rating criterion assigns a rating level to each me-
ter i, by comparing proximity of its reported data pi
t with the re-
silient mean consensus µM R , over a time window of lengthT . Then,
weights are assinged to these discrete rating levels according to
both prior frequency of occurrence, density of each rating level in
a Folded Gaussian distribution, and their proximity to µM R . This
step (cid:27)nally yields an aggregate weight Ri for each i. Then, an in-
verse power law kernel is used to map the Ri weights into a trust
value T Ri between 0 and 1, for linearly separable classi(cid:27)cation of
compromised meters from honest meters.
di f f
= |pi
5.2.1 Discrete Rating Levels: . We propose a criterion to assign
a discrete rating level to the reported pi
t based on its proximity to
µM R . The σM R is the corrected standard deviation of all pi
t from
the calculated µM R in the window T . We de(cid:27)ne ∆abs = σM R . The
absolute di(cid:29)erence between the pi
t for any meter i and the µM R is
denoted by Θi
t − µM R|. Given this, the discretized rating
levels denoted by l is given by Table 2, using the 68− 95− 99.7 rule
for Gaussian distributions to assign pi
t as belonging to one of the
4 possible rating levels (bins) according to proximity to the µM R .
The highest rating 4 is closest in terms of proximity to µM R , and
similarly lower ratings are obtained if the meter’s data is further
from the µM R . Over a time window of say T hours, the ratings
on each time slot t for meter i is collected to form a rating vector
sequence r i , which is sorted as r i
sor t
= r0 ≤ r1 ≤ · · · ≤ rT −1.
Table 2: µM R based Discrete Rating Levels
∆abs
Scenario
Θi
di f f ≤
∆abs < Θi
2∆abs < Θi
di f f ≤ 2∆abs
di f f ≤ 3∆abs
otherwise
Discrete Rating Level(l)
4
3
2
1
5.2.2
Folded Gaussian based Weights: . Now we (cid:27)nd the corre-
sponding (normalized) weights of each rating in the r i
sor t which
is denoted as W i = w0,· · · ,wT −1. Figs. 9(a) and 9(b), signify the
approximate Gaussian nature of the rating distributions, under no
)
%
(
s
g
n
i
t
a
R
e
g
a
t
n
e
c
r
e
P
70
60
50
40
30
20
10
0
)
%
(
g
n
i
t
a
R
e
g
a
t
n
e
c
r
e
P
60
50
40
30
20
10
0
1
2
3
4
3
2
1
Discrete Rating Levels
1
2
3
4
3
2
1
Discrete Rating Levels
(a)
(b)
Figure 9: Real Rating Distribution (a) Meter 1 (b) Meter 2
attacks for two real meters from Texas dataset. It is clear that the
most common and highest rating level is 4 followed by all oth-
ers. This gaussian nature is known as Folded Gaussian where vari-
ables around the mean do not have di(cid:29)erent signs, since only the
magnitude of the level is important. Intuitively, meters with more
observed lower ratings should have lesser weights. The sorting
makes it easier to give lower weights to smaller ratings through
Eqn. (5) by dividing the rating space over the considered time win-
dow. Then via Eqn. 6, the distance between this weight xt from the
highest rating level (which is 4 known from no attacks) is deter-
mined. If the distance is larger, it assigns a non-linearly decreasing
density value based on the shape of Gaussian distribution.
Additionally, higher percentage of lower ratings in a window,
will give even lesser weights to those smaller ratings, than a sce-
nario with lower percentage of low level ratings and vice versa
achieved through Eqn. (6). We denote µBR = 4 as the best or high-
est possible rating level, σ i
denote the standard deviation of dis-
dr
crete ratings of each meter from µBR = 4 in a window length T .
The σ i
for each meter will be di(cid:29)erent based on di(cid:29)erent obser-
dr
vations compared to common mixture data, which captures certain
individual di(cid:29)erences in consumption. First, a weight parameter xt
distributed between 1 to 4 is calculated as:
xt = 1 +
(K − 1)t
(T − 1)
∀ t = 0,· · · ,T − 1
(5)
where K = 4, is the total number of discrete rating levels in the
system, T is the window size. Therefore, the corresponding raw
weight cwt of the rating at time index t is:
cwi
t =
e−
1
√2π
σ i
dr
(xt −µB R )2
2(σ i
)2
d r
(6)
=
The weights yielded from Eqn. (6), are normalized by wi
t
. Let I (l ,t ) be an indicator function which indicates
cw i
t
PT −1
t =0 cw i
t
{1,· · · , 4} within T is added up, such that W D (l ) = PT −1
whether a particular rating level l occurs in that time slot. All
weights corresponding to each unique rating level l, such l =
t =0 wt I (l ,t ).
where,
I (l ,t ) = ( 1,
0,
If l occurred in time slot t
Otherwise
(7)
For example, sum of weights inW i corresponding to each occur-
rence of rating level 2 is denoted by W D (2). The aggregate weight
rating Ri of the i-th meter is a continuous value between 1 and 4
and is given by:
Ri =
K
Xl =1
l × W D (l ), Ri ∈ {1, 4}
(8)
Session 5: Machine Learning 1ASIACCS’18, June 4–8, 2018, Incheon, Republic of Korea180Semi-supervised Identification of Smart Meters Launching Data Falsification ASIA CCS ’18, June 4–8, 2018, Incheon, Republic of Korea
di f f
5.2.3
Inverse Power Law based Trust Value: . We know that the
Θi
is an unsigned value which can be visualized as a folded
Gaussian distribution, where ratings 3,2,1 regardless of whether
they are on the right or left of the rating level 4 are treated as
the same random variable. Therefore, the aggregate weight (Ri ),
when interpreted as a trust score must also follow a folded gauss-
ian shape, meaning Ri = 4 represents the greatest trustworthiness
followed by a exponential ‘discounting’ of trust, as Ri decreases.
For this, we propose the inverse power law inspired kernel trick to
transform the Ri into a (cid:27)nal trust value, T Ri , between 0 and 1, by:
T Ri =
1
(K )η (Ri )η , T Ri ∈ {0, 1}
(9)
where η is a scaling factor controlling the rate of discounting. The
Eqn. (9), gives exponentially less trust to Ri as it decreases from the
maximum value of 4, in adherence to the Folded Gaussian shape
of the rating distribution of legitimate meters (shown in Figs. 10(a)
and 10(b)). The scaling factor η depends on the skewness of folded
gaussian in the benign data set. The Eqn. (9) produces trust val-
ues such that compromised and non-compromised meters have lin-
early separable, which enables to calculate an unsupervised thresh-
old for classi(cid:27)cation. The trust maintenance over time uses a for-
getting average [4] for periodic attacks.
0.8
0.6
y
t
i
l
i
b
a
b
o
r
P
0.4
0.2
Meter #1
Meter #2
Meter #3
1
0.8
0.6
0.4
0.2
l
e
u
a
V
t
s
u
r
T
η = 7
η = 6
η = 5
η = 4
η = 3
η = 2
0
1
2
Ratings
(a)
3
4
0
0
1
3
4
2
Ri
(b)
Figure 10: (a) Folded Gaussian (b) Inverse Power Law Kernel
5.2.4 Under Advanced Persistent Threats: . For advanced per-
sistent adversaries, possessing full knowledge of our defense mech-
anism is ‘not’ enough to escape detection completely. The adver-