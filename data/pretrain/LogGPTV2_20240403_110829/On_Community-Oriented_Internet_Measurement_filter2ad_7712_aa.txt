# Community-Oriented Internet Measurement

**Authors:**
- Mark Allman, International Computer Science Institute
- Lann Martin, Case Western Reserve University
- Michael Rabinovich, Case Western Reserve University
- Kenneth Atchinson, Baldwin-Wallace College

## Abstract
This paper introduces a new measurement framework designed to alleviate the logistical challenges that often hinder large-scale Internet measurement projects. The need for more effective ways to gather data from multiple vantage points has been highlighted by the research community, and our system aims to provide an open, community-oriented solution. Unlike previous efforts that have faltered due to heavy infrastructure and maintenance issues, our approach is lightweight and decentralized, with no single point of failure. This system is built to be self-sustaining, with minimal central control, and provides real-time, publicly accessible "live feeds" of measurement results.

## 1. Introduction
The Internet's complexity and heterogeneity make it challenging to characterize and measure effectively. A dedicated sub-community of networking researchers focuses on Internet measurement and analysis, contributing significantly to our understanding of network operations, peer-to-peer transfers, and various security threats. This knowledge drives the development of better Internet technologies. Our goal is to enhance this sub-community's ability to provide further insights and enable the broader community to evaluate new ideas through live measurements.

The research community has clearly expressed the need for more and better measurement data. An NSF-sponsored workshop on "Community-Oriented Network Measurement Infrastructure" identified several key needs, including easier large-scale Internet measurements and datasets from a wide range of networks. This paper outlines a system that addresses these requirements.

Internet measurement studies often fall into two categories: (i) those requiring significant time and effort on mundane logistical details, and (ii) small-scale studies that may not reflect large-scale behavior. Our goal is to provide a community-based measurement framework that simplifies large-scale measurements. We propose a lightweight platform using a distributed hash table (DHT) like OpenDHT to handle communication between measurement hosts. This system will provide tools and libraries to facilitate the communication tasks required for Internet measurements, allowing researchers to focus more on gaining insights and less on logistics.

## 2. Related Work
Our work builds on two main types of previous efforts: (i) measurement infrastructures and (ii) data dissemination systems. Existing measurement infrastructures, such as NIMI and Surveyor, are generally more complex and feature-rich but have faced sustainability issues due to high maintenance costs. Our system, in contrast, is designed to be lightweight and easy to use, with no central management required. Additionally, while some projects like DipZoom use a peer-to-peer approach, they still rely on a central core, which we aim to avoid.

## 3. System Architecture
The proposed measurement system is centered around an open DHT, such as OpenDHT, which supports a simple get()/put() interface. The system involves three types of actors: (i) measurement requesters, (ii) measurement points (MPs), and (iii) watchers. The operations supported are: (a) identifying suitable MPs, (b) requesting measurements, and (c) retrieving results.

### 3.1. Tables
All communications in the system occur through entries in tables held in the DHT. Actors are responsible for inserting, maintaining, and polling these tables. The system does not require explicit removal of items; instead, they age out based on a time-to-live (TTL) value.

#### Identifying Measurement Points
Researchers can find suitable MPs by consulting the master table `AllMPs`, which contains information about each MP, including the type of measurement, acceptable arguments, and DHT keys for requests and results. MPs populate and maintain this table, and entries age out if an MP becomes inactive.

#### Requesting Measurements
Requesting a measurement involves inserting a record into a table monitored by the MP. The TTL for measurement requests should be short (minutes) to ensure regular polling. Each request includes the measurement time, tool arguments, and the DHT table for results.

#### Reporting Measurement Results
Measurement results are stored in the DHT under a unique key, and pointers to the results are placed in appropriate tables. For example, a UUID can be used as the unique key. Results are also stored in a table specific to the MP, ensuring that all results are easily accessible.

## Conclusion
Our proposed system aims to simplify the process of conducting large-scale Internet measurements by providing a lightweight, decentralized, and community-oriented framework. By abstracting away many logistical details, we hope to enable more researchers to engage in meaningful, large-scale studies and contribute to the broader understanding of the Internet.