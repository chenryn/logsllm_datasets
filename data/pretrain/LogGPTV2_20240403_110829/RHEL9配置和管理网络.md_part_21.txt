    ::: itemizedlist
    -   Public key:
        `bnwfQcC8/g2i4vvEqcRUM2e6Hi3Nskk6G9t4r26nFVM=`{.literal}
    -   隧道 IPv4 地址： `192.0.2.2/24`{.literal}
    -   Tunnel IPv6 address: `2001:db8:1::2/32`{.literal}
    :::
:::
::: itemizedlist
**先决条件**
-   您已为服务器和客户端生成了公钥和私钥。
-   您知道以下信息：
    ::: itemizedlist
    -   服务器的私钥
    -   客户端的静态隧道 IP 地址和子网掩码
    -   客户端的公钥
    -   服务器的静态隧道 IP 地址和子网掩码
    :::
:::
::: orderedlist
**步骤**
1.  安装 `wireguard-tools`{.literal} 软件包：
    ``` literallayout
    # dnf install wireguard-tools
    ```
2.  使用以下内容创建 `/etc/wireguard/wg0.conf`{.literal} 文件：
    ``` literallayout
    [Interface]
    Address = 192.0.2.1/24, 2001:db8:1::1/32
    ListenPort = 51820
    PrivateKey = YFAnE0psgIdiAF7XR4abxiwVRnlMfeltxu10s/c4JXg=
    [Peer]
    PublicKey = bnwfQcC8/g2i4vvEqcRUM2e6Hi3Nskk6G9t4r26nFVM=
    AllowedIPs = 192.0.2.2, 2001:db8:1::2
    ```
    ::: itemizedlist
    -   `[Interface]`{.literal} 部分描述了服务器中接口的 WireGuard
        设置：
        ::: itemizedlist
        -   `Address`{.literal}：服务器的隧道 IP 地址的逗号分隔列表。
        -   `PrivateKey`{.literal} ：服务器的私钥。
        -   `ListenPort`{.literal} ：WireGuard 侦听传入 UDP 连接的端口。
            在主机上始终设置固定端口号，接收传入的 WireGuard
            连接。如果您没有设置端口，WireGuard 每次激活 `wg0`{.literal}
            接口时会使用一个随机的空闲端口。
        :::
    -   每个 `[Peer]`{.literal} 部分描述了一个客户端的设置：
        ::: itemizedlist
        -   `PublicKey`{.literal} ：客户端的公钥.
        -   `AllowedIPs`{.literal}
            ：允许向这个服务器发送数据的客户端的隧道 IP 地址。
        :::
    :::
3.  启用并启动 WireGuard 连接：
    ``` literallayout
    # systemctl enable --now wg-quick@wg0
    ```
    systemd 实例名称必须与 `/etc/wireguard/`{.literal}
    目录中的配置文件的名称匹配（没有 `.conf`{.literal}
    后缀）。该服务还会将这个名称用于虚拟网络接口。
:::
::: itemizedlist
**后续步骤**
-   [在 WireGuard 服务器 上配置 firewalld
    服务](#assembly_setting-up-a-wireguard-vpn_configuring-and-managing-networking.html#proc_configuring-firewalld-on-a-wireguard-server-using-the-command-line_assembly_setting-up-a-wireguard-vpn "使用命令行在 WireGuard 服务器中配置 firewalld"){.link}。
:::
::: orderedlist
**验证**
1.  显示 `wg0`{.literal} 设备的接口配置：
    ``` literallayout
    # wg show wg0
    interface: wg0
      public key: UtjqCJ57DeAscYKRfp7cFGiQqdONRn69u249Fa4O6BE=
      private key: (hidden)
      listening port: 51820
    peer: bnwfQcC8/g2i4vvEqcRUM2e6Hi3Nskk6G9t4r26nFVM=
      allowed ips: 192.0.2.2/32, 2001:db8:1::2/128
    ```
    要在输出中显示私钥，请使用
    `WG_HIDE_KEYS=never wg 显示 wg0`{.literal} 命令。
2.  显示 `wg0`{.literal} 设备的 IP 配置：
    ``` literallayout
    # ip address show wg0
    20: wg0:  mtu 1420 qdisc noqueue state UNKNOWN group default qlen 1000
        link/none
        inet 192.0.2.1/24 scope global wg0
           valid_lft forever preferred_lft forever
        inet6 2001:db8:1::1/32 scope global
           valid_lft forever preferred_lft forever
    ```
:::
::: itemizedlist
**其他资源**
-   `wg(8)`{.literal} man page
-   `wg-quick(8)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#assembly_setting-up-a-wireguard-vpn_configuring-and-managing-networking.html#proc_configuring-firewalld-on-a-wireguard-server-using-the-command-line_assembly_setting-up-a-wireguard-vpn}使用命令行在 WireGuard 服务器中配置 firewalld {.title}
:::
您必须在 WireGuard 服务器上配置 `firewalld`{.literal}
服务，以允许来自客户端的进入连接。另外，如果客户端能够使用 WireGuard
服务器作为默认网关，并通过隧道路由所有流量，则必须启用伪装。
::: orderedlist
**步骤**
1.  为 `firewalld`{.literal} 服务中的传入连接打开 WireGuard 端口：
    ``` literallayout
    # firewall-cmd --permanent --add-port=51820/udp --zone=public
    ```
2.  如果客户端应该通过隧道路由所有流量，并使用 WireGuard
    服务器作为默认网关，请为 `public`{.literal} 区启用伪装 ：
    ``` literallayout
    # firewall-cmd --permanent --zone=public --add-masquerade
    ```
3.  重新加载 `firewalld`{.literal} 规则。
    ``` literallayout
    # firewall-cmd --reload
    ```
:::
::: itemizedlist
**验证**
-   显示 `public`{.literal} 区的配置：
    ``` literallayout
    # firewall-cmd --list-all
    public (active)
      ...
      ports: 51820/udp
      masquerade: yes
      ...
    ```
:::
::: itemizedlist
**其他资源**
-   `firewall-cmd(1)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#assembly_setting-up-a-wireguard-vpn_configuring-and-managing-networking.html#proc_configuring-firewalld-on-a-wireguard-server-using-the-graphical-interface_assembly_setting-up-a-wireguard-vpn}使用图形界面在 WireGuard 服务器中配置 firewalld {.title}
:::
您必须在 WireGuard 服务器上配置 `firewalld`{.literal}
服务，以允许来自客户端的进入连接。另外，如果客户端能够使用 WireGuard
服务器作为默认网关，并通过隧道路由所有流量，则必须启用伪装。
::: orderedlist
**步骤**
1.  按 [**Super**]{.keycap} 键，输入
    `firewall`{.literal}，然后从结果中选择 `Firewall`{.literal}
    应用程序。
2.  在 `Configuration`{.literal} 列表中选择 `Permanent`{.literal}。
3.  选择 `public`{.literal} 区域。
4.  允许到 WireGuard 端口的传入连接：
    ::: orderedlist
    1.  在`端口`{.literal}选项卡上，单击 [添加]{.guibutton}。
    2.  输入您为传入 WireGuard 连接设置的端口号：
    3.  从 `协议`{.literal} 列表中选择 `udp`{.literal}。
    4.  点[确定]{.guibutton}。
    :::
5.  如果客户端应该通过隧道路由所有流量，并使用 WireGuard
    服务器作为默认网关：
    ::: orderedlist
    1.  导航到 `public`{.literal} 区域的 `Masquerading`{.literal}
        选项卡。
    2.  选择 `Masquerade zone`{.literal}。
    :::
6.  选择 [Options]{.guimenu} → [Reload Firewalld]{.guimenuitem}。
:::
::: itemizedlist
**验证**
-   显示 `public`{.literal} 区的配置：
    ``` literallayout
    # firewall-cmd --list-all
    public (active)
      ...
      ports: 51820/udp
      masquerade: yes
      ...
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_setting-up-a-wireguard-vpn_configuring-and-managing-networking.html#proc_configuring-a-wireguard-client-using-nmcli_assembly_setting-up-a-wireguard-vpn}使用 nmcli 配置 WireGuard 客户端 {.title}
:::
您可以通过在 NetworkManager 中创建连接配置集来配置 WireGuard
客户端。使用此方法让 NetworkManager 管理 WireGuard 连接。
此流程假设以下设置：
::: itemizedlist
-   Client:
    ::: itemizedlist
    -   Private key:
        `aPUcp5vHz8yMLrzk8SsDyYnV33IhE/k20e52iKJFV0A=`{.literal}
    -   隧道 IPv4 地址： `192.0.2.2/24`{.literal}
    -   Tunnel IPv6 address: `2001:db8:1::2/32`{.literal}
    :::
-   server：
    ::: itemizedlist
    -   Public key:
        `UtjqCJ57DeAscYKRfp7cFGiQqdONRn69u249Fa4O6BE=`{.literal}
    -   Tunnel IPv4 address: `192.0.2.1/24`{.literal}
    -   Tunnel IPv6 address: `2001:db8:1::1/32`{.literal}
    :::
:::
::: itemizedlist
**先决条件**
-   您已为服务器和客户端生成了公钥和私钥。
-   您知道以下信息：
    ::: itemizedlist
    -   客户端的私钥
    -   客户端的静态隧道 IP 地址和子网掩码
    -   服务器的公钥
    -   服务器的静态隧道 IP 地址和子网掩码
    :::
:::
::: orderedlist
**步骤**
1.  添加 NetworkManager WireGuard 连接配置集：
    ``` literallayout
    # nmcli connection add type wireguard con-name client-wg0 ifname wg0 autoconnect no
    ```
    这个命令会创建一个名为 `client-wg0`{.literal} 的配置集，并将虚拟接口
    `wg0`{.literal}
    分配给它。要防止连接在添加没有最终配置的情况下自动启动，请禁用
    `autoconnect`{.literal} 参数。
2.  可选：配置 NetworkManager，使其不会自动启动 `client-wg`{.literal}
    连接：
    ``` literallayout
    # nmcli connection modify client-wg0 autoconnect no
    ```
3.  设置客户端的隧道 IPv4 地址和子网掩码：
    ``` literallayout
    # nmcli connection modify client-wg0 ipv4.method manual ipv4.addresses 192.0.2.2/24
    ```
4.  设置客户端的隧道 IPv6 地址和子网掩码：
    ``` literallayout
    # nmcli connection modify client-wg0 ipv6.method manual ipv6.addresses 2001:db8:1::2/32
    ```
5.  如果要通过隧道路由所有流量，请将服务器的隧道 IP 地址设置为默认网关：
    ``` literallayout
    # nmcli connection modify client-wg0 ipv4.gateway 192.0.2.1 ipv6.gateway 2001:db8:1::1
    ```
6.  将服务器的私钥添加到连接配置集中：
    ``` literallayout
    # nmcli connection modify client-wg0 wireguard.private-key "aPUcp5vHz8yMLrzk8SsDyYnV33IhE/k20e52iKJFV0A="
    ```
    ::: orderedlist
    1.  编辑
        `/etc/NetworkManager/system-connections/client-wg0.nmconnection`{.literal}
        文件，并附加：
        ``` literallayout
        [wireguard-peer.UtjqCJ57DeAscYKRfp7cFGiQqdONRn69u249Fa4O6BE=]
        endpoint=server.example.com:51820
        allowed-ips=192.0.2.1;2001:db8:1::1;
        persistent-keepalive=20
        ```
        ::: itemizedlist
        -   `[wireguard-peer.]`{.literal}
            条目定义了服务器的 peer 部分，部分名称包含服务器的公钥。
        -   `endpoint`{.literal} 参数设置服务器的主机名或 IP
            地址以及服务器的端口。客户端使用此信息来建立连接。
        -   `allowed-ips`{.literal} 参数设置允许向此客户端发送数据的 IP
            地址列表。例如，将参数设置为：
            ::: itemizedlist
            -   服务器隧道 IP
                地址，以仅允许服务器与此客户端通信。上例中的值可配置这种情况。
            -   `0.0.0.0/0;::/0;`{.literal} 用于允许任何远程 IPv4 和
                IPv6
                地址与此客户端通信。使用此设置通过隧道路由所有流量，并使用
                WireGuard 服务器作为默认网关。
            :::
        -   可选的 `persistent-keepalive`{.literal} 参数定义一个
            WireGuard 发送 keepalive
            数据包到服务器的间隔（以秒为单位）。如果您在网络中使用具有网络地址转换(NAT)的客户端，或者防火墙在一段时间不活跃后关闭
            UDP 连接，则设置此参数。
        :::
    2.  重新载入 `client-wg0`{.literal} 连接配置集：
        ``` literallayout
        # nmcli connection load /etc/NetworkManager/system-connections/client-wg0.nmconnection
        ```
    :::
7.  重新激活 `client-wg0`{.literal} 连接：
    ``` literallayout
    # nmcli connection up client-wg0
    ```
:::