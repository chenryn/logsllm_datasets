i
h
k
1
G1
(cid:1) Gi
G1
) 1
(cid:1) K
∆(cid:27)
′
z
i
∆ci
w+yi :
H
∆(cid:27)xi
∆ci
G1
Hi (cid:1) K z
′′
i
w+yi
(cid:1) K z
′′
i
(∵ Equation(5))
z
(cid:3)
′
i
=
=b(cid:27)(j
(
(
(
(
(
) such thatbc(j
=
=
=
)
(cid:3)
(cid:3)
xi
;b(cid:27)(j
valid output (b(cid:27)(j
This is the same as the value Ai in Game ℓ (cid:0) 1. Therefore, in the condition that there exists the
̸= ci, the second reply for the ℓ-th SndToI query in Game ℓ is
Now, we de(cid:12)ne the events Bad and dBad as follows.
Bad: The event that there is no valid output (b(cid:27)(j
;b(cid:27)(j
) which satis(cid:12)esbc(j
identical to that in Game ℓ (cid:0) 1.
̸= ci in the N executions
′
z
i
(cid:3)
xi
(cid:3)
(cid:3)
(cid:3)
)
)
)
)
)
i
i
of A in Game ℓ.
′
i
z
21
′
i
′
i
′
i
(cid:3)
)
i
(cid:3)
)
′
z
i
(cid:3)
xi
In the above discussion, when ((cid:27)xi; (cid:27)z
and Game ℓ are identical. Also, when ((cid:27)xi; (cid:27)z
) is valid and there exists the valid output (b(cid:27)(j
) for the (cid:12)rst reply is valid in Game ℓ.
) is invalid, the replies of the ℓ-th SndToI query in Game ℓ (cid:0) 1
)
dBad: The event that A’s output ((cid:27)xi; (cid:27)z
;b(cid:27)(j
which satis(cid:12)esbc(j
are identical. That is, Game ℓ is identical to Game ℓ (cid:0) 1 unless the events Bad and dBad occur, and
(cid:12)(cid:12)Pr[Sℓ(cid:0)1] (cid:0) Pr[Sℓ]
(cid:12)(cid:12) =
(cid:12)(cid:12)Pr[Sℓ(cid:0)1] (cid:0) (Pr[Sℓ ^
̸= ci in the N executions of Aj, the replies of the ℓ-th SndToI query in both games
Pr[Sℓ(cid:0)1] = Pr[Sℓ ^ (:Bad _ :dBad)] holds. Therefore, we get
(cid:12)(cid:12) (cid:20) Pr[Sℓ^(Bad^dBad)] (cid:20) Pr[Bad^dBad]. Since Pr[Bad^dBad] (cid:20) Pr[Bad]
(:Bad_:dBad)]+Pr[Sℓ^(Bad^dBad)])
and Pr[Bad ^ dBad] (cid:20) Pr[dBad] hold, we get Pr[Bad ^ dBad] (cid:20) minfPr[Bad]; Pr[dBad]g. Since Pr[Bad] =
(1 (cid:0) probℓ)N and Pr[dBad] = probℓ hold by the de(cid:12)nition of the events, it holds that Pr[Bad ^dBad] (cid:20)
(cid:12)(cid:12) (cid:20) minf(1 (cid:0) probℓ)N ; probℓ
(cid:12)(cid:12)Pr[Sℓ(cid:0)1] (cid:0) Pr[Sℓ]
(cid:12)(cid:12) (cid:20)∑
(cid:12)(cid:12)Pr[Sℓ(cid:0)1](cid:0)Pr[Sℓ]
(cid:12)(cid:12) =
(cid:12)(cid:12)Pr[S9](cid:0)Pr[S10]
∑
minf(1 (cid:0) probℓ)N ; probℓ
ℓ=1 minf(1(cid:0)
g holds.
probℓ)N ; probℓ
Lemma 4.18. It holds that Pr[S10] = Pr[S11] for any PPT A.
Proof. The diﬀerence between Game 10 and Game 11 is the way to compute the element Ai in the
simulation of the AddU oracle. However, the value Ai generated in Game 11 is identical to that in Game
10 since it holds that Ai = Ci
(G1 (cid:1) H
Lemma 4.19. Let qadd and qiss be the number of A’s add-user queries and send-to-issuer queries, respec-
tively. Then, there exists a PPT algorithm B3 such that
1=p for any PPT A.
(cid:12)(cid:12) (cid:20) Adv(qadd + qiss + 1)-SDH
w+yi )1(cid:0)hxi(cid:0)k(z
w+yi . That is, Pr[S10] = Pr[S11].
(cid:12)(cid:12)Pr[S11] (cid:0) Pr[S12]
1(cid:0)hxi(cid:0)k(z
w+yi = (G1 (cid:1) Hi
From the above discussion and Equation (4),
g. Therefore, we get
′′
i ) = (G1
′′
i )
′′
i ) = (G1
(cid:0)xi (cid:1) K
1(cid:0)hxi(cid:0)k(z
(cid:0)1 (cid:1) K
i (cid:1) K
w+yi =
((cid:21)) +
′′
i ))
qiss
ℓ=1
′
i+z
′
i+z
′
i+z
(cid:0)z
′′
i )
1
1
g.
′
(cid:0)z
1
(cid:0)z
)
qiss
1
B3
(⋆)
Proof. We de(cid:12)ne the event Bad
ℓ
as follows.
: The event that the adversary A sends the related query in Type (⋆) to the Open oracle in Game ℓ.
(⋆)
Bad
ℓ
(cid:12)(cid:12)Pr[S11] (cid:0) Pr[S12]
(cid:12)(cid:12) (cid:20) Pr[Bad
1
(⋆)
i=1
h; K = G1
(⋆)
11 and Bad
(⋆)
12 ] same as in Lemma 4.1.
Game 11 and Game 12 are identical unless the events Bad
) as the input of the simpli(cid:12)ed (qadd +qiss)-SDH problem. Let Y = G2
and the RReg oracle are easily simulated since they just set the user public key and retrieve the register,
(⋆)
12 occur. Therefore, we get
In the following, we construct the algorithm B3 who tries to solve the simpli(cid:12)ed (qadd + qiss)-SDH
12 ]. First, B3 receives a tuple (G1;
problem in (G1; G2) by using A and estimate the probability Pr[Bad
G2; Y;fCi; yigqadd+qiss
w, it holds that
w+yi . Next, B3 generates the instance of the weak anonymity game. Here for G1 2 G1; G2 2 G2
Ci = G1
and Y 2 G2, he uses the ones in the tuple of the simpli(cid:12)ed (qadd + qiss)-SDH problem. Also, B3 samples
h; k 2 Zp uniform randomly and sets H = G1
k. Other elements are generated by following
the GKg algorithm. Let gpk = (G1; G2; G; H; H; K; Y; U; V ), ik = w, and ok = (u; v), B3 sends gpk to the
adversary A. We note that B3 does not know the discrete logarithm w of the value Y . The CrptU oracle
respectively. B3 simulates other oracles (AddU, USK, and SndToI) as follows.
[The AddU oracle] For an input i, the algorithm B3 runs the UKg algorithm and obtains (upki; uski) =
′′
i ). Then, he sets
((Qi; Hi); (xi; z
  (Ai; yi; zi; xi; Qi). Finally, the user public key upki is returned to the adversary, and i is added
gski
to HU.
[The USK oracle] For an input i, B3 returns ? if i =2 HU. If i 2 HU, he returns the secret keys uski and
gski. Since i is queried to the AddU oracle if i 2 HU, B3 knows the secret keys of the user i.
[The SndToI oracle] For a query (i; (R1; R2)), B3 replies as follows:
Step 1 (Practice Phase). Execute other N games with the same adversary A in parallel with the
1. Sample bci
game of the original A. For 1 (cid:20) j (cid:20) N , perform the following operations.
i)). Also, B3 samples a random value z
′
i and sets Ai   Ci
′′
(j) r (cid:0) Zp.
1(cid:0)hxi(cid:0)k(z
2. Execute A(gpk; (cid:26)) where the challenger makes the same replies for the original A until the ℓ-th
′
i+z
SndToI query is generated.
22
3. Send bci
We note that the query (i; (R1; R2)) is the same as that in the game of the original A since the
(j) to A as the (cid:12)rst reply of the ℓ-th SndToI query (i; (R1; R2)), and obtain (b(cid:27)(j)
xi ;b(cid:27)(j)
′
z
i
).
challenger makes the same replies until the ℓ-th SndToI query is generated.
Step 2 (First Reply in the Original Game with A). If i =2 CU, return ?. If i 2 CU, sample ci
and return ci as the (cid:12)rst reply of the ℓ-th SndToI query (i; (R1; R2)). Then, obtain ((cid:27)xi; (cid:27)z
Step 3 (Second Reply in the Original Game with A). If ((cid:27)xi; (cid:27)z
(b(cid:27)(j
second reply. If ((cid:27)xi; (cid:27)z
r (cid:0) Zp
) from A.
) is invalid, return ? as the
(cid:3) 2 [1; N ] for the replies from A in Step 1 such that
, return ? as the second reply. On the
) is valid and ci ̸= bci
) is valid, (cid:12)nd the index j
(cid:3)
xi
(j
′
i
′
i
′
i
)
(cid:3)
). If there is no such index j
(cid:3)
, compute the second reply as follows.
(cid:3)
, and ∆ci  bc(j
 b(cid:27)(j
(cid:0) (cid:27)z
(cid:3)
(cid:3)
)
(cid:0) (cid:27)xi, ∆(cid:27)z
)
i
′
i
′
i
′
i
z
(cid:0) ci, and set exi   ∆(cid:27)xi=∆ci
other hand if there is such index j
)
(cid:3)
′
z
i
;b(cid:27)(j
andez
′
i
1. Compute ∆(cid:27)xi
  ∆(cid:27)z
′
i
′′
i
2. Sample z
 b(cid:27)(j
(cid:3)
xi
)
=∆ci.
3. Compute Ai   Ci
′′
i ) where (Ci; yi) is the part of the input
of the simpli(cid:12)ed (qadd + qiss)-SDH problem. Then, reply certi as the second reply, and register
reg[i]   Qi.
i ), and set certi   (Ai; yi; z
′
i+z
′′
2 Zp uniform randomly.
1(cid:0)hexi(cid:0)k(ez
When A generated a related query in Type (⋆) to the Open oracle, there is the Open query (m
(cid:3)
(cid:3)
1 ; T
(cid:3)
q , and GVf(gpk; m
y, (cid:27)(cid:14) ̸= (cid:27)
(cid:3)
(cid:14) , (cid:27)q ̸= (cid:27)
(cid:3)
(cid:3)
2 ; T
; (cid:27)
; (cid:6) =
; (cid:6)) = 1.
(cid:3)
q ). Moreover, he chooses a value y =2 fy1; : : : :yqg and
(cid:3)
Finally, A terminates witheb 2 f0; 1g.
For this query, B3 computes ew = ((cid:27)(cid:14) (cid:0) (cid:27)
computes C = G2
e(C; Y (cid:1) G2
(cid:3)
3 ; T
(cid:3)
4 ; c
(T
(cid:3)
(cid:3)
(cid:3)
x; (cid:27)y; (cid:27)(cid:14); (cid:27)q; (cid:27)
r )) such that (cid:27)y = (cid:27)
1ew+y . Then, B3 (cid:12)nally outputs (C; y).
(cid:14) )=((cid:27)q (cid:0) (cid:27)
(cid:3)
In the following, we show (C; y) is the solution of the simpli(cid:12)ed (qadd + qiss)-SDH problem, that is,
y) = e(G1; G2) holds. Since a related query satis(cid:12)es Equation (2), it holds that
(cid:3)
y
(cid:0)(cid:27)
(cid:3)
e(K; G2)(cid:27)(cid:14) (cid:1) e(K; Y )
k; G2)(cid:27)(cid:14) (cid:1) e(G1
(cid:0)(cid:27)q (cid:1) e(T
k; G2
, e(G1
(cid:0)(cid:27)q = e(G1