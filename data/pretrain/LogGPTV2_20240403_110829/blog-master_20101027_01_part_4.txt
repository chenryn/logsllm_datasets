    16388 | (0,20) |    3 |    3 |  672 |    0 | 20  
    16388 | (0,21) |    0 |    0 |  673 |    0 | 21  
    16388 | (0,22) |    0 |    0 |  673 |    0 | 22  
    16388 | (0,23) |    0 |    0 |  673 |    0 | 23  
    16388 | (0,24) |    0 |    0 |  673 |    0 | 24  
    16388 | (0,27) |    0 |    0 |  675 |    0 | 25  
    16388 | (0,28) |    1 |    1 |  675 |    0 | 26  
    16388 | (0,31) |    4 |    4 |  677 |    0 | 27  
    16388 | (0,32) |    5 |    5 |  677 |    0 | 28  
    16388 | (0,33) |    0 |    0 |  678 |    0 | 29  
    16388 | (0,34) |    1 |    1 |  678 |    0 | 30  
    16388 | (0,35) |    2 |    2 |  679 |    0 | 31  
    16388 | (0,36) |    3 |    3 |  679 |    0 | 32  
(32 rows)  
test=> rollback to one;  
ROLLBACK  
```  
打开第二个SESSION执行：  
```  
test=> vacuum tbl_test;  
VACUUM  
```  
回到第一个SESSION执行：  
```  
test=> insert into tbl_Test (id) values (31);  
INSERT 0 1  
test=> insert into tbl_Test (id) values (32);  
INSERT 0 1  
test=> select tableoid,ctid,cmin,cmax,xmin,xmax,* from tbl_test order by id;  
 tableoid |  ctid  | cmin | cmax | xmin | xmax | id   
----------+--------+------+------+------+------+----  
    16388 | (0,1)  |    0 |    0 |  668 |    0 |  1  
    16388 | (0,2)  |    0 |    0 |  668 |    0 |  2  
    16388 | (0,3)  |    0 |    0 |  668 |    0 |  3  
    16388 | (0,4)  |    0 |    0 |  668 |    0 |  4  
    16388 | (0,5)  |    0 |    0 |  669 |    0 |  5  
    16388 | (0,6)  |    1 |    1 |  669 |    0 |  6  
    16388 | (0,7)  |    2 |    2 |  669 |    0 |  7  
    16388 | (0,8)  |    3 |    3 |  669 |    0 |  8  
    16388 | (0,9)  |    0 |    0 |  670 |    0 |  9  
    16388 | (0,10) |    0 |    0 |  670 |    0 | 10  
    16388 | (0,11) |    0 |    0 |  670 |    0 | 11  
    16388 | (0,12) |    0 |    0 |  670 |    0 | 12  
    16388 | (0,13) |    0 |    0 |  671 |    0 | 13  
    16388 | (0,14) |    0 |    0 |  671 |    0 | 14  
    16388 | (0,15) |    0 |    0 |  671 |    0 | 15  
    16388 | (0,16) |    0 |    0 |  671 |    0 | 16  
    16388 | (0,17) |    0 |    0 |  672 |    0 | 17  
    16388 | (0,18) |    1 |    1 |  672 |    0 | 18  
    16388 | (0,19) |    2 |    2 |  672 |    0 | 19  
    16388 | (0,20) |    3 |    3 |  672 |    0 | 20  
    16388 | (0,21) |    0 |    0 |  673 |    0 | 21  
    16388 | (0,22) |    0 |    0 |  673 |    0 | 22  
    16388 | (0,23) |    0 |    0 |  673 |    0 | 23  
    16388 | (0,24) |    0 |    0 |  673 |    0 | 24  
    16388 | (0,27) |    0 |    0 |  675 |    0 | 25  
    16388 | (0,28) |    1 |    1 |  675 |    0 | 26  
    16388 | (0,31) |    4 |    4 |  677 |    0 | 27  
    16388 | (0,32) |    5 |    5 |  677 |    0 | 28  
    16388 | (0,33) |    0 |    0 |  678 |    0 | 29  
    16388 | (0,34) |    1 |    1 |  678 |    0 | 30  
    16388 | (0,25) |    4 |    4 |  680 |    0 | 31  
    16388 | (0,26) |    5 |    5 |  680 |    0 | 32  
(32 rows)  
test=> commit;  
```  
从结果上看，只要是CMIN,CMAX值一样的都被回滚掉了.VACUUM并不会影响一个事务中的CMIN CMAX值,VACUUM只是更新了FSM信息,所以VACUUM后插入的记录CTID使用25，26的PAGE位置存储。  
## 小结  
BATCH模式可以通过如下手段实施:  
1\.  
insert into tbl_test (id) values (v_1),(v_2),(v_3),.....................(v_n);  
2\.  
insert into tbl_test (id) select v from other_table;  
3\.  
insert into tbl_test (id) select v_1 union all select v_2 union all select v_3 union all ..............;  
4\.  
prepare t_test1(int8,int8,int8,int8,...................) as insert into tbl_test (id) values ($1),($2),($3),($4),.........................;  
then  
execute t_test1(v_1,v_2,v_3,v_4,......................);   
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")