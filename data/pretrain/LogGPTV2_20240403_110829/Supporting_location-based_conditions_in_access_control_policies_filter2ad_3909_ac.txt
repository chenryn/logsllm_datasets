ment of a mobile network. Managing a nation-wide mobile
network is an extremely critical activity because reconﬁgura-
tion privileges must be granted to strictly selected personnel
only and must be performed according to the highest security
standards. In addition to reconﬁguration privileges, the ac-
cess to logging and billing data is critical too, because they in-
clude information about the position and movements of mo-
bile operator’s customers. We consider access to customer-
related information as less critical than reconﬁguration priv-
ileges but still to be handled in a highly secured environment
and to be granted only to selected personnel, according to
the laws and regulations in force. Finally, at a lower criti-
cality level, we consider access to statistical data about the
network’s operation. These data are however not public and
must be protected, for example, from disclosure to competi-
tors. We assume that the Mobile Network Console (MNC)
is a software service that permits to reconﬁgure the mobile
network and read customer data. We now present some ex-
amples of protection requirements for such a service; Table 2
reports the corresponding access control rules.
1. System administrators (user.Role=Admin), with a
valid account, are authorized to conﬁgure the mo-
bile network if they are in the server farm room
(inarea(sim, Server Farm Room)), they are alone in
such an area (density(sim, Server Farm Room, 1, 1))
and move at walking speed at most (velocity(sim, 0,
3)).
2. System administrators (user.Role=Admin), with a
valid account, are authorized to read mobile network
data if they are in the information systems dept. area
generic conditions
location conditions
subject
action
object
1 user.Role=Admin ∧
inarea(sim, Server Room) ∧
Valid(user.Username, user.Password) density(Server Room, 1, 1) ∧
velocity(sim, 0, 3)
inarea(sim, Inf.
2 user.Role=Admin ∧
3 user.Role=CEO ∧
Valid(user.Username, user.Password) velocity(sim, 0, 3)
Valid(user.Username, user.Password) inarea(sim, Corporate Main Office) ∧
System Dept.) ∧
local density(sim, Close By, 1, 1) ∧
local density(sim, Close By, 1, 1) ∧
velocity(sim, 0, 3)
local density(sim, Close By, 1, 1) ∧
Valid(user.Username, user.Password) disjoint(sim, Competitor Location)
local density(sim, Close By, 1, 1) ∧
4 user.Role=CEO ∧
5 user.Role=Guest ∧
Valid(user.Username, user.Password) inarea(sim, Corporate Location)
Configure
MNC
Read Data
MNC
Read Data
MNC
Read Statistics MNC
Read Statistics MNC
Table 2: Examples of access control rules regulating access to a Mobile Network Console
(inarea(sim, Information Systems Dept.)), move at
walking speed at most and there is nobody close by (lo-
cal density(sim, Close By, 1, 1)).
3. The CEO (user.Role=CEO), showing a valid account,
is authorized to access mobile network data if she is
alone (there is nobody close by), she is in the corporate
main oﬃce (inarea(sim, Corporate Main Office)),
and moves at walking speed at most.
4. The CEO (user.Role=CEO), showing a valid account,
is authorized to access mobile network statistics if there
is nobody close by and she is not in a competitor loca-
tion (disjoint(sim, Competitor Location)).
5. Guests (user.Role=Guest), with a valid account, can
read mobile network statistics if there is nobody close
by and they are in a corporate location (inarea(sim,
Corporate Location)).
5. POLICY EVALUATION AND ENFORCE-
MENT
We are now ready to discuss how access control policies
enriched with location-based conditions are evaluated.
5.1 From conﬁdence to truth values
Before illustrating how the access control process oper-
ates, we need to solve a basic problem: location-based pred-
icates appear in rules as parts of a boolean formula, while
the responses to boolean location queries are in the form of a
triple [bool value, conﬁdence, timeout]. Then to process a re-
sponse from the Location Service, the Access Control Engine
will need to assign a truth value to it.5 Intuitively, the trans-
formation of a location predicate’s value into a boolean one
requires the Access Control Engine to determine whether
or not the value returned by the Location Service can be
considered valid for the purpose of controlling access. Such
an evaluation will depend on parameters timeout and conﬁ-
dence returned by the Location Service.
Indeed, responses with a timeout that has already expired
automatically trigger the re-evaluation of the predicate re-
gardless of the other parameter values because considered
Predicate Conﬁdence Thresholds MaxTries
lower
upper
inarea
disjoint
distance
velocity
density
local density
0.1
0.1
0.2
0.2
0.3
0.3
0.9
0.9
0.8
0.8
0.7
0.7
10
10
5
5
3
3
Table 3: An example of Extended True Table for
location predicates
as unreliable for any decision. Responses with a timeout
that has yet not expired are evaluated with respect to the
conﬁdence value.
The conﬁdence value is compared with two thresholds,
speciﬁed for each location predicate. According to the re-
sult of this comparison (i.e., whether the conﬁdence value is
greater than the upper threshold, less than the lower thresh-
old, or between the two), the boolean value contained in the
response to a boolean query will be treated diﬀerently.
Before proceeding further it is important to remark that,
as anticipated in Section 3, our conﬁdence value has a se-
mantics of belief ; namely a response returning a boolean
value v with a conﬁdence of α is to be considered equiva-
lent to a response returning ¬v with a conﬁdence of 1 − α.
Another important observation is that the threshold of con-
ﬁdence above which the Access Control Engine will consider
as valid the value returned by the Location Service may vary
depending on diﬀerent predicates (since more or less certain
information might be required) as well as on how much the
Access Control Engine trusts the conﬁdence assessment of
the Location Service (e.g., a 80% conﬁdence stated by a
very reliable Location Service could be considered almost
as a true value, while a 90% conﬁdence stated by another
- less reliable - Location Service can be considered as not
reliable).6 Table 3 illustrates an example of an Extended
True Table (ETT) featuring custom Conﬁdence Thresholds
for each predicate.
The ETT is used as follows:
if the conﬁdence level for a
given predicate is greater than the preset upper threshold
5We note in passing that alternative solutions are possible,
for example deﬁning a fuzzy or probabilistic reasoning on
the rules.
6This behavior is similar to reputation-based approaches de-
veloped for peer to peer environments, where peers’ votes are
weighted with respect to the credibility of the voters [7].

(column upper of the ETT table), then the boolean value re-
turned by the Location Service will be conﬁrmed. If the con-
ﬁdence level is below the lower threshold (column lower of
the ETT table), the boolean value returned is not conﬁrmed
and the location-based condition is evaluated to ¬bool value.
Otherwise, if the conﬁdence level is between lower and up-
per threshold neither the returned value nor its negation can
be considered suﬃciently reliable to take a decision about
the location-based condition and predicate re-evaluation is
triggered. The same happens when the timeout has expired
prior to evaluation. To avoid deadlock, a MaxTries num-
ber is deﬁned for each location predicate (column MaxTries
in the ETT table), expressing the max number of predicate
re-evaluations that the Access Control Engine will request
either because the conﬁdence level is not high enough or
due to a timeout.
If after MaxTries re-evaluations of the
predicate, the outcome remains unchanged, the evaluation
process ends and the ﬁnal response is Undefined. Predi-
cates whose evaluation is more time consuming are likely to
be re-evaluated fewer times than others. In our case, density
and local density are the most time consuming predicates be-
cause their evaluation depends on the position of multiple
entities. On the other hand, inarea and disjointare the least
time consuming predicates since they depend on the posi-
tion of a single entity; distance and velocity depend on the
location measure of two entities.
With respect to the values set for Conﬁdence Thresholds
in Table 3, the rationale is that since they represent SLA
deﬁned terms, they should reﬂect the overall reliability of a
location measurement provided by a speciﬁc Location Ser-
vice7. Accordingly, thresholds are empirical values that an
expert should estimate when SLA agreements are set. They
should encapsulate both an evaluation of the technical dif-
ﬁculty of providing the measurement required by the spe-
ciﬁc location predicate and the Location Service reliabil-
ity. Examples of technical aspects that may inﬂuence the
conﬁdence are the sensitivity of the predicate to external
conditions, such as environmental and weather conditions,
and measurement techniques adopted. Examples of factors
that may aﬀect a Location Service reliability are the ex-
pertise with the speciﬁc measurement techniques and the
distribution and number of sensors of the Location Service
infrastructure. According to this rationale, inarea and dis-
joint are the predicates that most suﬀer from environmental
changes and consequently we should set a small conﬁdence
interval for reducing the uncertainty. Predicate density and
local density are the less sensitive and we may accept larger
conﬁdence intervals to conﬁrm the result returned by the Lo-
cation Service. Finally, predicates distance and velocity are
in the middle with respect to conﬁdence too. Actual values
of Table 3 represent educated guesses, without, of course,
considering the reliability of a speciﬁc Location Service.
To perform the mapping of boolean queries responses into
boolean values we deﬁne a function Solve that enforces
the semantics just described. The function, illustrated in
Figure 2, takes as input a predicate name pred-name with
its parameters p1, . . . , pn, and a Location Service LS to be
7Conﬁdence Thresholds could be set by considering how
many re-evaluation attempts are available before the time-
out expires. Predicates with more re-evaluation attempts
have more possibilities to receive a response with a suﬃ-
cient conﬁdence level and could be set to higher thresholds
than others.
Function Solve(pred-name(p1, . . . , pn),LS):
{True, False, Undefined}
upper:=ETT[pred-name, upper];
lower:=ETT[pred-name, lower];
maxtries:=ETT[pred-name, MaxTries];
response:= Undefined;
tries := 0;
repeat
Send query pred-name(p1, . . . , pn) to LS
Receive Reply = [bool value, conﬁdence, timeout]
if current-time  maxtries)
return response
Figure 2: Function Solve
queried, and returns as output a value in the set {True,
False, Undefined}.
Example 3. Let Alice-sim be an element of Users and
LS be the Location Service associated with it. Suppose that
the ETT is as illustrated in Table 3 and that the current time
is 10:45AM of Nov.
9, 2005. Consider then the following
calls of function Solve.
• Solve(inarea(Alice-sim,Inf.
System Dept.),LS)
Suppose that inarea(Alice-sim,Inf.
System Dept.)
= [True,0.95,2005-11-09 11:00AM], the function re-
turns True.
• Solve(velocity(Alice-sim,0,3),LS)
Suppose that velocity(Alice-sim,0,3) = [True,0.9,
2005-11-09 10:50AM], the function returns True.
that
• Solve(local density(Alice-sim,Close By,1,1),LS)
evaluates
lo-
Suppose
cal density(Alice-sim,Close By, 1,1) = [True,0.6,
2005-11-09 11:10AM]. Since
falls
within the uncertain range the query is submitted a
second time.
conﬁdence
query
ﬁrst
the
a
the
that
returns
Suppose
[True,0.65,2005-11-09 11:12AM].
since
the conﬁdence falls within the uncertain rang, a third
attempt is performed.
attempt
Again,
second
the
that
third
returns
Suppose
attempt
[True,0.63,2005-11-09 11:13AM]. Again,
the conﬁ-
dence falls within the uncertain range. Since maxtries
has been reached, no further query is requested and
the function returns Undefined.
5.2 Access control enforcement
We are now ready to describe how the access control pro-
cess operates. We start by characterizing the access requests
submitted to the Access Control Engine.

Definition 2
(Access request). An access request
is a 4-tuple of the form user id, SIM, action, object id,
where user id is the optional identiﬁer of the user who makes
the request, SIM ∈ Users is the optional SIM card number,
action is the action that is being requested, and object id
is the identiﬁer of the object on which the user wishes to
perform the action.
We assume that the Access Control Engine evaluates ﬁrst
whether a decision can be taken locally (i.e., based on rules
evaluating only generic conditions).
If no decision can be
taken locally (all applicable authorizations involve location-
based predicates), the corresponding queries are sent to the
involved Location Service. The reason for such an assump-
tion is that location-based predicate evaluation usually bears
cost and therefore is to be avoided whenever possible. More
precisely, the policy evaluation and enforcement process (in-
volving the communications illustrated in Figure 1) can be
described as a three-phase process as follows.
Let user id, SIM, action, object id be an access request.
In the ﬁrst phase, the Access Control Engine evaluates the
policy P collecting all the rules A ∈ P that are applicable
to the request. The set A of applicable rules contains those
rules r ∈ P for which action(r) corresponds to the action
speciﬁed in the access request, and object id satisﬁes the