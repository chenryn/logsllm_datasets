char grade = 'A';
float log = 2.71828;
把下面printf()语句中的转换字符补充完整：
printf("The odds against the %__ were %__ to 1.\n", 
imate, shot);
printf("A score of %__ is not an %__ grade.\n", log, 
grade);
9.假设ch是char类型的变量。分别使用转义序列、十进制值、八进制字
符常量和十六进制字符常量把回车字符赋给ch（假设使用ASCII编码值）。
10.修正下面的程序（在C中，/表示除以）。
void main(int) / this program is perfect /
{
cows, legs integer;
170
printf("How many cow legs did you count?\n);
scanf("%c", legs);
cows = legs / 4;
printf("That implies there are %f cows.\n", cows)
}
11.指出下列转义序列的含义：
a.\n
b.\\
c.\"
d.\t
171
3.11 编程练习
1.通过试验（即编写带有此类问题的程序）观察系统如何处理整数上
溢、浮点数上溢和浮点数下溢的情况。
2.编写一个程序，要求提示输入一个ASCII码值（如，66），然后打印
输入的字符。
3.编写一个程序，发出一声警报，然后打印下面的文本：
Startled by the sudden sound, Sally shouted,
"By the Great Pumpkin, what was that!"
4.编写一个程序，读取一个浮点数，先打印成小数点形式，再打印成指
数形式。然后，如果系统支持，再打印成p记数法（即十六进制记数法）。
按以下格式输出（实际显示的指数位数因系统而异）：
Enter a floating-point value: 64.25
fixed-point notation: 64.250000
exponential notation: 6.425000e+01
p notation: 0x1.01p+6
5.一年大约有3.156×107秒。编写一个程序，提示用户输入年龄，然后显
示该年龄对应的秒数。
6.1个水分子的质量约为3.0×10−23克。1夸脱水大约是950克。编写一个
程序，提示用户输入水的夸脱数，并显示水分子的数量。
7.1英寸相当于2.54厘米。编写一个程序，提示用户输入身高（/英
寸），然后以厘米为单位显示身高。
172
8.在美国的体积测量系统中，1品脱等于2杯，1杯等于8盎司，1盎司等
于2大汤勺，1大汤勺等于3茶勺。编写一个程序，提示用户输入杯数，并以
品脱、盎司、汤勺、茶勺为单位显示等价容量。思考对于该程序，为何使用
浮点类型比整数类型更合适？
[1].欧美日常使用的度量衡单位是常衡盎司（avoirdupois ounce），而欧美黄
金市场上使用的黄金交易计量单位是金衡盎司（troy ounce）。国际黄金市
场上的报价，其单位“盎司”都指的是黄金盎司。常衡盎司属英制计量单位，
做重量单位时也称为英两。相关换算参考如下：1常衡盎司 = 28.350克，1金
衡盎司 = 31.104克，16常衡盎司 = 1磅。该程序的单位转换思路是：把磅换
算成金衡盎司，即28.350÷31.104×16=14.5833。——译者注
[2].即，size_t类型。——译者注
173
第4章 字符串和格式化输入/输出
本章介绍以下内容：
函数：strlen()
关键字：const
字符串
如何创建、存储字符串
如何使用strlen()函数获取字符串的长度
用C预处理器指令#define和ANSIC的const修饰符创建符号常量
本章重点介绍输入和输出。与程序交互和使用字符串可以编写个性化的
程序，本章将详细介绍C语言的两个输入/输出函数：printf()和scanf()。学会
使用这两个函数，不仅能与用户交互，还可根据个人喜好和任务要求格式化
输出。最后，简要介绍一个重要的工具——C预处理器指令，并学习如何定
义、使用符号常量。
174
4.1 前导程序
与前两章一样，本章以一个简单的程序开始。程序清单4.1与用户进行
简单的交互。为了使程序的形式灵活多样，代码中使用了新的注释风格。
程序清单4.1 talkback.c程序
// talkback.c -- 演示与用户交互
#include 
#include    // 提供strlen()函数的原型
#define DENSITY 62.4  // 人体密度（单位：磅/立方英尺）
int main()
{
float weight, volume;
int size, letters;
char name[40];    // name是一个可容纳40个字符的数组
printf("Hi! What's your first name?\n");
scanf("%s", name);
printf("%s, what's your weight in pounds?\n", name);
scanf("%f", &weight);
size = sizeof name;
letters = strlen(name);
175
volume = weight / DENSITY;
printf("Well, %s, your volume is %2.2f cubic feet.\n",
name, volume);
printf("Also, your first name has %d letters,\n",
letters);
printf("and we have %d bytes to store it.\n", size);
return 0;
}
运行talkback.c程序，输入结果如下：
Hi! What's your first name?
Christine
Christine, what's your weight in pounds?
154
Well, Christine, your volume is 2.47 cubic feet.
Also, your first name has 9 letters,
and we have 40 bytes to store it.
该程序包含以下新特性。
用数组（array）储存字符串（character 
string）。在该程序中，用户输
入的名被储存在数组中，该数组占用内存中40个连续的字节，每个字节储存
一个字符值。
176
使用%s转换说明来处理字符串的输入和输出。注意，在scanf()中，
name没有&前缀，而weight有（稍后解释，&weight和name都是地址）。
用C预处理器把字符常量DENSITY定义为62.4。
用C函数strlen()获取字符串的长度。
对于BASIC的输入/输出而言，C的输入/输出看上去有些复杂。不过，
复杂换来的是程序的高效和方便控制输入/输出。而且，一旦熟悉用法后，
会发现它很简单。
177
4.2 字符串简介
字符串（character string）是一个或多个字符的序列，如下所示：
"Zing went the strings of my heart!"
双引号不是字符串的一部分。双引号仅告知编译器它括起来的是字符
串，正如单引号用于标识单个字符一样。
4.2.1 char类型数组和null字符
C语言没有专门用于储存字符串的变量类型，字符串都被储存在char类
型的数组中。数组由连续的存储单元组成，字符串中的字符被储存在相邻的
存储单元中，每个单元储存一个字符（见图4.1）。
图4.1 数组中的字符串
注意图4.1中数组末尾位置的字符\0。这是空字符（null 
character），C
语言用它标记字符串的结束。空字符不是数字0，它是非打印字符，其ASCII
码值是（或等价于）0。C中的字符串一定以空字符结束，这意味着数组的
容量必须至少比待存储字符串中的字符数多1。因此，程序清单4.1中有40个
存储单元的字符串，只能储存39个字符，剩下一个字节留给空字符。
那么，什么是数组？可以把数组看作是一行连续的多个存储单元。用更
正式的说法是，数组是同类型数据元素的有序序列。程序清单4.1通过以下
声明创建了一个包含40个存储单元（或元素）的数组，每个单元储存一个
char类型的值：
char name[40];
name后面的方括号表明这是一个数组，方括号中的40表明该数组中的
178
元素数量。char表明每个元素的类型（见图4.2）。
图4.2 声明一个变量和声明一个数组
字符串看上去比较复杂！必须先创建一个数组，把字符串中的字符逐个
放入数组，还要记得在末尾加上一个\0。还好，计算机可以自己处理这些细
节。
4.2.2 使用字符串
试着运行程序清单4.2，使用字符串其实很简单。
程序清单4.2 praise1.c程序
/* praise1.c -- 使用不同类型的字符串 */
#include 
179
#define PRAISE "You are an extraordinary being."
int main(void)
{
char name[40];
printf("What's your name? ");
scanf("%s", name);
printf("Hello, %s.%s\n", name, PRAISE);
return 0;
}
%s告诉printf()打印一个字符串。%s出现了两次，因为程序要打印两个
字符串：一个储存在name数组中；一个由PRAISE来表示。运行praise1.c，
其输出如下所示：
What's your name? Angela Plains
Hello, Angela.You are an extraordinary being.
你不用亲自把空字符放入字符串末尾，scanf()在读取输入时就已完成这
项工作。也不用在字符串常量PRAISE末尾添加空字符。稍后我们会解释
#define指令，现在先理解PRAISE后面用双引号括起来的文本是一个字符
串。编译器会在末尾加上空字符。
注意（这很重要），scanf()只读取了Angela 
Plains中的Angela，它在遇
到第1个空白（空格、制表符或换行符）时就不再读取输入。因此，scanf()
在读到Angela和Plains之间的空格时就停止了。一般而言，根据%s转换说
明，scanf()只会读取字符串中的一个单词，而不是一整句。C语言还有其他
180
的输入函数（如，fgets()），用于读取一般字符串。后面章节将详细介绍这
些函数。
字符串和字符
字符串常量"x"和字符常量'x'不同。区别之一在于'x'是基本类型
（char），而"x"是派生类型（char数组）；区别之二是"x"实际上由两个字符
组成：'x'和空字符\0（见图4.3）。
图4.3 字符'x'和字符串"x"
4.2.3 strlen()函数
上一章提到了 sizeof 运算符，它以字节为单位给出对象的大小。strlen()
函数给出字符串中的字符长度。因为 1 字节储存一个字符，读者可能认为把
两种方法应用于字符串得到的结果相同，但事实并非如此。请根据程序清单
4.3，在程序清单4.2中添加几行代码，看看为什么会这样。
程序清单4.3 praise2.c程序
/* praise2.c */
// 如果编译器不识别%zd，尝试换成%u或%lu。
#include 
#include   /* 提供strlen()函数的原型 */
181
#define PRAISE "You are an extraordinary being."
int main(void)
{
char name[40];
printf("What's your name? ");
scanf("%s", name);
printf("Hello, %s.%s\n", name, PRAISE);
printf("Your name of %zd letters occupies %zd memory cells.\n",
strlen(name), sizeof name);
printf("The phrase of praise has %zd letters ",
strlen(PRAISE));
printf("and occupies %zd memory cells.\n", sizeof PRAISE);
return 0;
}
如果使用ANSI C之前的编译器，必须移除这一行：
#include 
string.h头文件包含多个与字符串相关的函数原型，包括strlen()。第11章
将详细介绍该头文件（顺带一提，一些ANSI之前的UNIX系统用strings.h代替
string.h，其中也包含了一些字符串函数的声明）。
一般而言，C 把函数库中相关的函数归为一类，并为每类函数提供一个
182
头文件。例如，printf()和scanf()都隶属标准输入和输出函数，使用stdio.h头
文件。string.h头文件中包含了strlen()函数和其他一些与字符串相关的函数
（如拷贝字符串的函数和字符串查找函数）。
注意，程序清单4.3使用了两种方法处理很长的printf()语句。第1种方法
是将printf()语句分为两行（可以在参数之间断为两行，但是不要在双引号中
的字符串中间断开）；第 2 种方法是使用两个printf()语句打印一行内容，只
在第2条printf()语句中使用换行符（\n）。运行该程序，其交互输出如下：
What's your name? Serendipity Chance
Hello, Serendipity.You are an extraordinary being.
Your name of 11 letters occupies 40 memory cells.
The phrase of praise has 31 letters and occupies 32 memory cells.
sizeof运算符报告，name数组有40个存储单元。但是，只有前11个单元
用来储存Serendipity，所以strlen()得出的结果是11。name数组的第12个单元
储存空字符，strlen()并未将其计入。图4.4演示了这个概念。
图4.4 strlen()函数知道在何处停止
对于 PRAISE，用 strlen()得出的也是字符串中的字符数（包括空格和标
点符号）。然而，sizeof运算符给出的数更大，因为它把字符串末尾不可见
的空字符也计算在内。该程序并未明确告诉计算机要给字符串预留多少空
间，所以它必须计算双引号内的字符数。
183
第 3 章提到过，C99 和 C11 标准专门为 sizeof 运算符的返回类型添加
了%zd 转换说明，这对于strlen()同样适用。对于早期的C，还要知道sizeof和
strlen()返回的实际类型（通常是unsigned或unsigned long）。
另外，还要注意一点：上一章的 sizeof 使用了圆括号，但本例没有。圆
括号的使用时机否取决于运算对象是类型还是特定量？运算对象是类型时，
圆括号必不可少，但是对于特定量，可有可无。也就是说，对于类型，应写
成sizeof(char)或sizeof(float)；对于特定量，可写成sizeof name或sizeof 6.28。
尽管如此，还是建议所有情况下都使用圆括号，如sizeof(6.28)。
程序清单4.3中使用strlen()和sizeof，完全是为了满足读者的好奇心。在
实际应用中，strlen()和 sizeof 是非常重要的编程工具。例如，在各种要处理
字符串的程序中，strlen()很有用。详见第11章。
下面我们来学习#define指令。
184
4.3 常量和C预处理器
有时，在程序中要使用常量。例如，可以这样计算圆的周长：