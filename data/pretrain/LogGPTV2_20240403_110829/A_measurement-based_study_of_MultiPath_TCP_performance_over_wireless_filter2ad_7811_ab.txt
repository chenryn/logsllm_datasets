described above. We use Linux’s default initial window size
of 10 packets and apply TCP Selective Acknowledgement
(SACK) [7].
Receive memory allocation.
As MPTCP requires a larger receive buﬀer than single-
path TCP for out-of-order packets from diﬀerent paths and
uses a shared receive buﬀer, there is a potential performance
degradation if the assigned buﬀer is too small [26, 32]. To
avoid such events during our measurements, we set the max-
imum receive buﬀer to 8 MB.
No subﬂow penalty.
Throughout our experiments, we observe that the current
MPTCP implementation by default monitors each ﬂow’s
bandwidth delay product (BDP). If a particular ﬂow has
contributed too many out-of-order packets to the receive
buﬀer, it penalizes that ﬂow by reducing its congestion win-
dow by half [26], even though no loss has occurred. In our
experiments, as the receive memory is always large enough,
this penalization mechanism can only degrade the perfor-
mance of MPTCP connections. To measure the true perfor-
mance of MPTCP connections, we remove the penalization
scheme from the implementation.
from three diﬀerent cellular carriers, we conduct measure-
ments of the following conﬁgurations:
• Single-path TCP: the UMass server activates its pri-
mary interface, and the client enables only one inter-
face (WiFi or cellular). Thus, there are four conﬁg-
urations in this scenario: single path WiFi TCP or
single path cellular TCP (through AT&T, Verizon, or
Sprint).
• 2-path MPTCP: the UMass server activates its pri-
mary interface, while the client enables WiFi and a
cellular device. For each conﬁguration, we run back to
back measurements of diﬀerent congestion controllers
described in Section 2.2. There are nine conﬁgura-
tions in this scenario: client’s three settings of two
interfaces enabled (WiFi/AT&T, WiFi/Verizon, and
WiFi/Sprint) to the server’s primary interface with
three congestion controller settings.
• 4-path MPTCP: for comparison purposes, we enable
the server’s secondary interface connected to a diﬀer-
ent subnet, as illustrated in Figure 1. There are also
in total nine diﬀerent conﬁgurations in this scenario.
As Web traﬃc can be short-lived or long-lived, for each
conﬁguration, the client downloads ﬁles of diﬀerent sizes
from the server via HTTP. As there is no clear distinction
between short ﬂows and long ﬂows, in our measurements,
we consider ﬁles of sizes 8 KB, 64 KB, 512 KB, and 4 MB
as small ﬂows. For large ﬂows, we consider ﬁle of sizes 8
MB, 16 MB, and 32 MB. We also consider inﬁnite backlog
ﬁle transfers for performance purposes (see Section 4.2), and
here ﬁle downloads are of size 512 MB.
Since network traﬃc might have dependencies and/or cor-
relation from time to time, and from size to size, in each
round of measurements, we randomize the sequence of con-
ﬁgurations. That is, we randomize the order of ﬁle sizes,
carriers, the choices of congestion controllers, single-path
and multi-path TCP. To capture temporal eﬀects, for each
scenario, we conduct measurements for multiple days. To
mitigate possible spatial factors, measurements were also
performed at multiple locations in the same town, and at
diﬀerent towns in western Massachusetts. Note that we di-
vide a day into four periods: night (0-6 AM), morning (6-12
AM), afternoon (12-6 PM), and evening (6-12 PM). For each
period of time at each location, we perform 20 measurements
for each conﬁguration.
Furthermore, since cellular 3G/4G antennas have state
machines for radio resources allocation and management of
energy consumption, the state promotion delay (the time
duration required to bring the antenna to ready state) is of-
ten longer than packet RTTs [11,12] and might signiﬁcantly
impact our short ﬂow measurements. Therefore, to avoid
this impact, we send two ICMP ping packets to our server
before each measurement, and start the measurements im-
mediately after the ping responses are correctly received to
ensure that the cellular antenna is in the ready state.
We collect packet traces from both the UMass server and
the client using tcpdump [30], and use tcptrace [31] to ana-
lyze the collected traces at both sides.
3.2 Experiment Methodology
3.3 Performance Metrics
As the UMass server has two physical interfaces, and the
client has a built-in WiFi interface and broadband devices
We are interested in the following performance metrics
related to MPTCP and single-path TCP:
458MP AT&T
SP AT&T
MP Verizon
SP Verizon
MP Sprint
SP Sprint
SP WiFi
MP AT&T
SP AT&T
MP Verizon
SP Verizon
MP Sprint
SP Sprint
SP WiFi
MP AT&T
SP AT&T
MP Verizon
SP Verizon
MP Sprint
SP Sprint
SP WiFi
MP AT&T
SP AT&T
MP Verizon
SP Verizon
MP Sprint
SP Sprint
SP WiFi
AT&T 4G
Verizon 4G
Sprint 3G
Comcast WiFi
6
4
K
B
5
1
2
K
B
2
M
B
1
6
M
B
0.1
1
5
10
50
100
150
Download time with log scale (seconds)
Figure 2: Baseline Download Time: MPTCP and single-path TCP connections for diﬀerent carriers. The
measurements were performed over the course of 24 hours for multiple days.
MP AT&T
MP Verizon
MP Sprint
MP AT&T
MP Verizon
MP Sprint
MP AT&T
MP Verizon
MP Sprint
MP AT&T
MP Verizon
MP Sprint
MP AT&T
MP Verizon
MP Sprint
6
4
K
B
5
1
2
K
B
2
M
B
1
6
M
B
0
25
Fraction of traffic (%)
50
75
Figure 3: Baseline: faction of traﬃc carried by each
cellular carrier in MPTCP connections.
Download time: As our goal is to understand how much
gain mobile users obtain from using MPTCP, for both small
ﬂows and large ﬂows, we focus on measuring the download
time rather than the bandwidth and speed of each cellular
technology. We deﬁne the download time as the duration
from when the client sends out the ﬁrst SYN to the server to
the time it receives the last data packet from the server. We
measure download time of a ﬁle using MPTCP and compare
it with what we get if we use a single-path TCP over the
available WiFi or 3G/4G paths.
Loss rate: The loss rate is measured on a per-subﬂow
basis. It is calculated as the total number of retransmitted
data packets divided by the total number of data packets
sent by the server on the ﬂow. We show the average loss
rate by aggregating all the measurement results of the same
conﬁguration.
Round trip time (RTT): We measure RTTs on a per-
subﬂow basis. Denote by Tr the server’s receive time of an
ACK packet for the previous packet sent from the server at
time Ts over a subﬂow. RTT is measured as the diﬀerence
between the time when a packet is sent by the server to
the time the ACK for that packet is received (i.e., RT T =
Tr − Ts), such that the ACK number is larger than the last
sequence number of the packet and the packet is not a re-
transmission [31].
Out-of-order delay: MPTCP maintains two sequence
numbers for each packet, a data (global) sequence number
for the MPTCP connection and a subﬂow (local) sequence
number for each TCP subﬂow.
In-order packets arriving
from the same subﬂow may wait in the receive buﬀer before
their data sequence numbers become in-order. This could be
due to late arrivals of packets from other paths. Therefore,
a key performance metric of using MPTCP is to measure
packet out-of-order delay at the receive buﬀer before packets
are ready for delivery to the application layer. Out-of-order
delay is deﬁned to be the time diﬀerence between when a
packet arrives at the receive buﬀer to when its data sequence
number is in-order.
4. BASELINE MEASUREMENTS
Figure 2 presents the download times of diﬀerent size
ﬁles over diﬀerent WiFi/cellular carriers using single-path
or MPTCP. We show results for ﬁle sizes of 64 KB, 512 KB,
2 MB, and 16 MB. We perform our measurements over each
of these four time periods in a day described in Section 3.2
and show the aggregate results in Figure 2. We use the de-
fault coupled congestion controller as the congestion control
459Table 2: Baseline path characteristics: loss rates and RTTs (sample mean ± standard error) of single-path
TCP on a per connection basis across ﬁle sizes. Note that Sprint has a particularly high loss rate on 512 KB
downloads. Note that ∼ represents for negligible values (< 0.03%).
File size
64 KB
512 KB
2 MB
16 MB
0·03±0.03
0·04±0.01
∼
∼
0·37±0.16
0·43±0.16
8·76±4.8
0·20±0.04
0·06±0.03
0·31±0.13
3·93±0.34
2·02±0.42
0·31±0.12
1·75±0.20
1·64±0.01
0·68±0.07
70·06±2.78
92·41±13.23
381·29±50.80
104·89±3.32
204·65±20.45
972·4 ±84.08
138·20±5.09
422·56±28.34
1209·81±178.68
126·01±5.37
624·66±54.55
703·81±81.96
26·81±0.43
53·08±2.20
56·83±5.71
32·65±2.05
Loss (%)
AT&T
Verizon
Sprint
Comcast
RTT(ms)
AT&T
Verizon
Sprint
Comcast
algorithm. We use box and whisker plots to summarize our
measurement results. The line inside each box is the sec-
ond quantile (median), the top and the bottom of each box
are the ﬁrst and the third quantiles (25% and 75%), and the
ends of the whiskers are the minimum and maximum values.
MP-carrier refers to a 2-path MPTCP connection using
a particular 3G/4G cellular network and a WiFi network.
SP-carrier refers to a single-path TCP connection over a
particular WiFi/3G/4G network.
For all ﬁle sizes, we observe that the download times for a
ﬁle using MPTCP is almost the same as those using the best
single-path TCP connection available to the user. Some-
times MPTCP outperforms the best path alone. MPTCP
initiates the connection over using the WiFi network (i.e.,
the WiFi path is the default path).
For small ﬂows, i.e., ﬁle sizes of 64 KB or smaller, single-
path TCP over WiFi performs the best, and MPTCP does
not provide much gain over using the cellular path. This
is because WiFi connections have smaller RTTs (around 30
ms) than the 3G/4G cellular connections (60-80 ms for 4G,
and 300 ms for 3G). Thus, in most small ﬂow cases the ﬁle
transfer is complete before the cellular paths can complete
their 3-way handshakes. For slightly larger ﬂows, we observe
that single-path over WiFi is no longer guaranteed to be the
best path (in terms of download times). Instead, single-path
TCP over 4G LTE is the best choice in many instances. This
is because, as can be seen in Table 2, the cellular networks
(especially the 4G LTE networks) provide almost loss free
paths, as opposed to WiFi’s roughly 1.6% loss rate. Figure
3 shows the fraction of traﬃc oﬄoaded to the cellular path
from the data in Figure 2. We observe that MPTCP man-
ages to oﬄoad traﬃc from the fast but lossy WiFi paths to
the not-so-fast but loss-free cellular paths. Therefore, when
the ﬁle size is not too small, MPTCP connections gain more
by leveraging its cellular paths. Table 2 provides the loss
rates and RTTs (averages and standard errors) for the mea-
surements in Figure 2.
We observe that 3G networks tend to have slightly higher
loss rates than 4G, much larger minimum RTTs (200 ms),
and severe RTT variations (300-800 ms). Thus, for small
ﬂows, most packets in MPTCP-Sprint connections are deliv-
ered via WiFi. When the ﬁle sizes are large and a fraction of
packets have initially been scheduled through the 3G path,
it takes much longer for those packets to reach the client.
In the case where the RTT variation is large over 3G paths
(up to 8-10 times greater than its 3-way handshake RTT),
and a packet is identiﬁed as lost and retransmitted, it can
take a few seconds for a packet to be delivered and results in
reduced performance. Section 5.2 analyzes this out-of-order
delay in more detail.
In the rest of this section, we provide a more detailed anal-
ysis of the performance of MPTCP using diﬀerent congestion
controllers and diﬀerent ﬁle sizes. For simplicity, we focus
on one cellular carrier, AT&T 4G LTE, since it exhibits the
lowest RTT variability and the most stable performance. We
also utilize diﬀerent WiFi networks at diﬀerent locations.
4.1 Small Flow Measurements
We start by analyzing MPTCP measurements using small
ﬂows. We chose four diﬀerent ﬁle sizes here (8 KB, 64 KB,
512 KB, and 4 MB) as representative of small ﬂow mea-
surements. For simplicity, we focus on one cellular carrier,
AT&T 4G LTE, with Comcast WiFi as the default path.
Our goal is 1) to understand how 2-path MPTCP performs
in the wild, and 2) to understand the impact of diﬀerent
MPTCP congestion controllers on connection performance.
For comparison purposes, we also seek 3) to understand how
much more one can get when having 4-path MPTCP instead
of 2-path MPTCP in the context of small ﬁle downloads.
Figure 4 shows our measurements of small ﬂows. MP-4
and MP-2 represent MPTCP connections consisting of four
and two subﬂows, while the congestion controller in paren-
theses indicates which congestion controller is used at the
server. As an overview of baseline small ﬂow measurements,
a clear trend is, when ﬁle size increases, 4-path MPTCP
performs better than 2-path MPTCP, which performs bet-
ter than single-path TCP.
460MP−4 AT&T (reno)
MP−2 AT&T (reno)
MP−4 AT&T (olia)
MP−2 AT&T (olia)
MP−4 AT&T (coupled)
MP−2 AT&T (coupled)
SP AT&T
SP WiFi
MP−4 AT&T (reno)
MP−2 AT&T (reno)
MP−4 AT&T (olia)
MP−2 AT&T (olia)
MP−4 AT&T (coupled)
MP−2 AT&T (coupled)
SP AT&T
SP WiFi
MP−4 AT&T (reno)
MP−2 AT&T (reno)
MP−4 AT&T (olia)
MP−2 AT&T (olia)
MP−4 AT&T (coupled)
MP−2 AT&T (coupled)
SP AT&T
SP WiFi
MP−4 AT&T (reno)
MP−2 AT&T (reno)
MP−4 AT&T (olia)
MP−2 AT&T (olia)
MP−4 AT&T (coupled)
MP−2 AT&T (coupled)
SP AT&T
SP WiFi
MP−4 AT&T
MP−2 AT&T
SP AT&T
SP WiFi
8
K
B
6
4