Navigation: Log View>Verify CEF Extension or click the Warning icon in the Status column of a log line in the Log View panel.
About:
Use the Verify CEF Extension page to assign CEF keys to portions of the log line so they comply with the connector expectations. For example, a key expecting an integer value is not associated with a string value. The Verify CEF Extension page contains a copy of the log line in the Original Log field and in the Modified Log Line field.You can assign an existing CEF key to a portion of a log line.
Procedures:
Micro Focus Quick Flex Parser Tool (1.1)
Page 48 of 67
User Guide 
Chapter 7: CEF Verification Log View
1. In the Assign Key Values field in the Verify CEF Extension window, highlight the key and right-click on it. A list of available CEF keys displays. They are sorted in the order of corresponding full event field names.2. Apply one of the keys from the CEF Key list.
3. Do this for each key that you intend to correct in the line. The key is the word preceding the "=" sign. 4. 	Mark as AdditionalData is not currently supported.
5. When you are finished processing all of the components in the line, click Apply to apply it to the modified panel in the Log View window. The key assignments that you make will be applied to all of the lines that have the same pattern and values of keys. Lines that are processed correctly (verified) will have a green check mark.Warning Details
Click the Warning Details icon to view the warning details and descriptions for the line that you are editing.
1. This is a view only window where you can see the log line number followed by incrementing warning 	line numbers. For example, for log line #15 there may be warning 15.1, 15.2, 15.3, etc.
2. Leave this window open side-by-side with the Verify CEF Extension window to review the details and 	address warning messages.Generate a CEF Verification Report
Navigation: Log View>Generate Report
About:
The Quick Flex Parser Tool can generate a report to provide data regarding the changes made in the project.
The report data includes project information such as the following:
l Product, Vendor, and Version of the project 
l Log file used in project 
l Header comments 
l Extension comments with log line number, log line, and commentsl Extension modifications with example of original and modified log line, log lines affected, old and new 	keys
Report Example:
Vendor: myVersion
Product: myProduct
Micro Focus Quick Flex Parser Tool (1.1)
Page 49 of 67
User Guide 
Chapter 7: CEF Verification Log View
Version: myVersion 
Log file used: C:\Users\auser\Documents\Parser Tool Documents\Version 1.1\qfpt_ 
demo\cefErrorsSyslog.logdemo\cefErrorsSyslog.log 
Header Comments: 
change device versions from 2.1 to 2.2 
Extension Comments: 
Line #6: suser=PI:EMAIL duser=PI:EMAIL messg=Social Security Numbers 
deviceCustomNumber1=1 deviceCustomNumber1Label=MatchCount 
Comment: messg wasn't cef key 
CEF Extension Modifications: 
Example of original key pattern, using line #1: src=1.1.1.1 dst=2.2.2.2 spt=4380 dpt=80 proto=TCP Lines numbers modified: 1,5,9Old key: src, New key: dst 
Example of modified key pattern, using line #1: dst=1.1.1.1 dst=2.2.2.2 spt=4380 dpt=80 proto=TCP Example of original key pattern, using line #10: suser=PI:EMAIL duser=PI:EMAIL messg=Social Facebook Numbers deviceCustomNumber1=6 deviceCustomNumber1Label=MatchCount 
Lines numbers modified: 6,10 
Old key: messg, New key: deviceInboundInterfaceExample of modified key pattern, using line #10: suser=PI:EMAIL duser=PI:EMAIL 
deviceInboundInterface=Social Facebook Numbers deviceCustomNumber1=6 
deviceCustomNumber1Label=MatchCount
Procedure: 
	1. Click Generate Report in the Log View to generate a report.
Understanding Color Highlighting in Log Lines
In the Log View, lines that must be verified display components as either unhighlighted or highlighted in the following colors:Parser project: 
l syslog=peach 
l base regex=purple
Micro Focus Quick Flex Parser Tool (1.1)
Page 50 of 67
User Guide 
Chapter 7: CEF Verification Log View
l submessage=green when there is a match. Otherwise, there is no highlight.
CEF project:
l syslog=peach 
l CEF header=light blue 
See "Verify the CEF Extension" for information on how to address warnings in log lines.
Syslog header highlighting:Syslog header highlighting:
| Yes | Syslog File Selected | Yes | Syslog File Used | Yes | Highlighting |
|---|---|---|---|---|---|
| Yes |Syslog File Selected |No |Syslog File Used |No |Highlighting |
| No |Syslog File Selected |Yes |Syslog File Used |No |Highlighting |
| No |Syslog File Selected |No |Syslog File Used |No |Highlighting |
Micro Focus Quick Flex Parser Tool (1.1)
Page 51 of 67Page 51 of 67
Appendix A: ArcSight Operations
The following table describes all of the operations that can be used when tokens are mapped to ArcSight event fields.
Operations are used primarily when tokens are mapped to ArcSight event fields.
The values in the Arguments have the following meaning:
l token_name—the name of a token, for example, Token0, TimeToken.l expression—can be a token name, a quoted string, or null; for example, TimeToken, "Receipt Time", 	or ,,.
l (string) constant—a quoted string, for example, "string constant".
l null—an empty value, for example ,,.
l regex_expression—a regex expression. Must be enclosed in parentheses, for example (\s+).| Note: The Quick Flex Parser Tool does not support nested operations. | Note: The Quick Flex Parser Tool does not support nested operations. | Note: The Quick Flex Parser Tool does not support nested operations. |
|---|---|---|
| Operation |Return Type |Definition and Comments |
| __BASE64Decode |String |The parameter is a single Base-64 encodedstring, whichis |
decodedtobytes, andthenconvertedtoa stringusingtheplatform's default character set.
__byteArrayToIPAddress IPAddress This operationtakes a byte array representationofanIPv4 or
IPv6 address as a parameter andreturns anIPAddress object. 
This operationcanbe usedonly for IPv6-aware parsers.
__byteArrayToIPv6 IPAddress This parameter returns anIPv6 address storedas anIPAddress
object. Use this parameter for mappingtoevent fields oradditionalfields whichcanhave anIPv6 address type. Use this 
operationonly ina non-IPv6-aware parser. For anIPv6-aware 
parser use the __byteArrayToIPAddress operation.
__byteArrayToIPv6String String The parameter returns the stringrepresentationofanIPv6
address storedina byte array.
__concatenate String The parameters canbe literalstrings or other values ofvarious
types. The result is a stringthat consists ofalloftheseparameters concatenatedtogether.
__concatenate("Active",protocol," Ports:
",portnum)
__concatenate("CompanyName: [",
CompanyName,"]")
__concatenate("PF: ",PassOrBlock)
Micro Focus Quick Flex Parser Tool (1.1)
Page 52 of 67
User Guide 
Appendix A: ArcSight Operations
| Operation | Return Type | Definition and Comments |
|---|---|---|
| __concatenateDeleting |String |The last parameter is a literalstringcontaininga set ofcharacters |todelete. The other parameters canbe literalstrings or other 
values ofvarious types. The result is a stringthat consists ofallof 
these parameters (except the last)concatenatedtogether, with 
the specifiedcharacters deletedfromthe non-literalparameters.
For example, ifthe parameters are “Literal”, “Foobar”, and“r”
(where the first andthirdparameters are literal), thenthe resultwouldbe “LiteralFooba”. Note that the “r” in“Foobar” was deleted 
but the “r” in“Literal” was not.
__contains Boolean This operationsearches for one stringwithinanother andreturns
true ifit is foundandfalse otherwise. For example, like
__contains(stringInWhichToSearch,
stringToFind)
__containsFromList Boolean This operationtries tomatcha string(the first operand, whichissearchedin)witha list ofcomma-separatedstrings andreturns 
true whena stringmatchis found. Otherwise returns false. For 
example,
__containsFromList(stringInWhichToSearch ,
firstStringToFind, secondStringToFind)
__convertMSDNSURL String This operationconverts a Microsoft DNSURL inthe form:
(n)nchars(m)mchars(0)
Toa normalURL:
nchars.mchars
| __createLocalTimeStampFromSeconds | TimeStamp | The parameters are 2 longinteger numbers anda string. The first ||---|---|---|
| MicrosZone |TimeStamp |parameter is the number ofseconds since January 1, 1970, while |
the secondis the number ofmicroseconds withinthe second. 
These are combinedintoa TimeStamp. Ifthe thirdparameter is a 
validtime zone name, the number ofseconds is interpreted 
relative toJanuary 1, 1970 inthat time zone. Otherwise GMTis 
used. Some ofthe precisionofthe microseconds is currently lost.| __createLocalTimeStampFromGMT | TimeStamp | The 2 parameters are eachlonginteger numbers. The first is the |
|---|---|---|
| SecondsMillis |TimeStamp |number ofseconds since January 1, 1970 GMT, while the second |
is the number ofmilliseconds withinthe second. They are 
combinedintoa TimeStamp. __ 
createLocalTimeStampFromGMTSecondsMillis(tv_sec,tv_msec)__createLocalTimeStampFromGMT TimeStamp The 2 parameters are eachlonginteger numbers. The first is the
SecondNanoseconds
Micro Focus Quick Flex Parser Tool (1.1)
number ofseconds since January 1, 1970 GMT, while the second is the number ofnanoseconds withinthe second. They are 
combinedintoa TimeStamp. Some ofthe precisionofthe 
nanoseconds is currently lost.
Page 53 of 67
User GuidePage 53 of 67
User Guide 
Appendix A: ArcSight Operations
| Operation | Return Type | Definition and Comments |
|---|---|---|
| __createLocalTimeStampFrom |TimeStamp |The parameter is a longinteger number. It is the number of |
| NanoSeconds |TimeStamp |nanoseconds since January 1, 1970 GMT. It is convertedintoa |
TimeStamp. Some ofthe precisionofthe nanoseconds is currently 
lost.lost.
__createLocalTimeStampFromNTP TimeStamp The parameter is a string. It shouldcontainthe number of
seconds since January 1, 1970 GMTbefore a decimalpoint, and 
the number ofmicroseconds after the decimalpoint. They are 
combinedintoa TimeStamp.
| __createLocalTimeStampFromSeconds | TimeStamp | The parameter is a single longinteger number, whichis the |
|---|---|---||---|---|---|
| SinceEpoch |TimeStamp |number ofseconds since January 1, 1970 GMT. It is converted |
intoa TimeStamp, withthe fractionalseconds set tozero.
__createLocalTimeStampFrom
SecondsSinceEpoch(srcTimestamp)
| __createOptionalTimeStamp | TimeStamp | The parameters are twostrings. The first stringis date andtime |
|---|---|---|
| FromString |TimeStamp |specifiedby default inthe yyyy-MM-ddHH:mm:ss format. The |second, optionalparameter specifies the format for the first string 
ifit needs tobe different fromthe default. Ifthe value ofthe first 
stringis null, nothingis mapped. Otherwise the value is mapped 
usingthe format specifiedfor the secondparameter, ifpresent, or 
the default format.
__createRuleFiringInfo String This operationtakes anarbitrary number ofparameters. Eachcanbe either a literalstringor a value ofsome other type. The 
result is simply the parameters concatenatedtogether as a long 
string, withcommas betweenthe parameters. The parameters 
whichare not literalstrings are convertedtostrings.
__createSafeLocalTimeStamp TimeStamp The first parameter is a string, whichis the date/time toparse,
while the secondis a literalstring, whichis the format (same styleas the format for the Date, Time, andTimeStamptokens). The 
stringis parsedandreturnedas a TimeStamp. Most errors result 
inthe current time beingreturned.
__createTimeStamp TimeStamp The first parameter is a Date andthe secondparameter is a Time.
They are combinedintoa single TimeStampanreturned. 
Everythingis assumedtobe inlocaltime.
__createTimeStamp(date,time)__createTimeStamp(date,time)
__createTimeStampByHexEncodedTime TimeStamp The parameter is a single stringof12 hexadecimaldigits, with2
eachfor year (0 means 1970), month(0-11), day (1-31), hou 
(0-23), minute (0-59), andsecond(0-59). The milliseconds are 
implicitly set tozero, andthe numbers are interpretedas local 
time. The resultingTimeStampis returned.__createTimeStampByStartTimeElapsed TimeStamp The parameters are 2 strings. The first is the startingtime in
ddMMMyyyy hh:mm:ss format, while the secondis anelapsed 
time inhh:mm:ss format. The result is a TimeStampfor the ending 
time, assumingthe startingtime is a localtime.
Micro Focus Quick Flex Parser Tool (1.1)
Page 54 of 67
User Guide 
Appendix A: ArcSight OperationsAppendix A: ArcSight Operations
| Operation | Return Type | Definition and Comments |
|---|---|---|
| __createTimeStampForOpsecStartTime |TimeStamp |The parameter is a single stringinddMMMyyyy HH:mm:ss |
format. It is parsedandthe resultingTimeStamp, interpretedas 
beinglocaltime, is returned.
| __createTimeStampStringFrom | String | The parameters are 2 longinteger numbers. The first parameter ||---|---|---|
| SecondsMicros |String |is the number ofseconds since January 1, 1970 GMT, while the |
secondis the number ofmicroseconds withinthe second. These 
are combinedintoa TimeStampandthenintoa string. Some of 
the precisionofthe microseconds is currently lost.
__currentTimestampInSeconds Long Any parameters are ignored. The current time, expressedas the
number ofseconds since January 1, 1970 GMT, is returnedas alonginteger.
__divide Integer The first parameter is the numerator andthe secondparameter
is the denominator. The result is aninteger withthe value ofthe 
numerator dividedby the denominator, roundedtothe nearest 
integer.
__doubleToAddress IPAddress This is the same as the numberToAddress operationexcept that
the parameter is a double-precisionfloating-point number.
__doubleToAddress(DestIP)__doubleToAddress(DestIP)
__extractNTDomain String The only parameter is a string. Ifit contains a backslash, the part
ofthe stringuptobut not includingthat backslashis returned. 
Otherwise the entire stringis returned.
__extractNTUser String The only parameter is a stringinthe form'domain\user', where
domainis anNTdomainanduser is anNTuser name. The user 
name is returned. Ifthere is nobackslashinthe string, it isreturnedunchanged.
__extractProtocol String The only parameter is a string. Ifthe stringcontains any ofthe
definedprotocolstrings (TCP, ICMP, UDP, IGMP, or RTSP), just 
that stringis returned(the searchis case-insensitive, andthe first 
protocolfoundis returned). Ifnone ofthe protocolstrings is found, 
the whole stringis returned.