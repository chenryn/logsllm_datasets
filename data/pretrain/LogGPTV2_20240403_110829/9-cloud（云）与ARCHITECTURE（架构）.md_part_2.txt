\
## 3编辑虚拟机设置
编辑：virsh edit 虚拟机名 #这是编辑已导入的虚拟机
若修改name 、 memory、disk、networkl，可自动保存为新虚拟机配置
## 4导入虚拟机proxy service
导入：virsh define \*\*.xml
## 5创建node0的虚拟机
### 1准备node0.xml文件
拷贝node.xml到/etc/libvirt/qemu/node0.xml
并修改其中内容
\[root@room9pc01 nsd1811\]# cp node.xml /etc/libvirt/qemu/node0.xml
\[root@room9pc01 nsd1811\]#virsh edit node0
2 \node0\ #修改名字
26 \ #修改文件名
\[root@room9pc01 nsd1811\]# cd /etc/libvirt/qemu/
\[root@room9pc01 qemu\]# ls
上面的操作可用sed命令执行，便于写脚本
\[root@room9pc01 \~\]# sed \'s/node/node0/\' node.xml
\>/etc/libvirt/qemu/node0.xml
### 2创建之前准备了如下文件:
前端盘: /var/lib/libvirt/images/ 目录下的node0.img文件
虚拟交换机:/etc/libvirt/qemu/networks/ 目录下的vbr.xml 文件
Xml配置文件：/etc/libvirt/qemu/ 目录下的node0.xml文件
### 3导入虚拟机
\[root@room9pc01 qemu\]# virsh define /etc/libvirt/qemu/node0.xml
定义域 node1（从 /etc/libvirt/qemu/node1.xml）
### 4启动虚拟机
\[root@room9pc01 qemu\]# virsh start node0
域 node1 已开始
\[root@room9pc01 qemu\]# virsh console node0 #连接虚拟机
连接到域 node0
换码符为 \^\]
\[ OK \] Started /etc/rc.d/rc.local Compatibility.
Starting Terminate Plymouth Boot Screen\...
Starting Wait for Plymouth Boot Screen to Quit\...
CentOS Linux 7 (Core)
Kernel 3.10.0-693.el7.x86_64 on an x86_64
localhost login: root
Password: #密码为a
Last login: Wed May 30 20:18:45 on ttyS0
\[root@localhost \~\]#
\[root@localhost \~\]#
\[root@localhost \~\]# exit
logout
CentOS Linux 7 (Core)
Kernel 3.10.0-693.el7.x86_64 on an x86_64
localhost login: #退出按 ctrl +}
### 5开机自启动
\[root@room9pc01 qemu\]# virsh autostart node0
## 6删除虚拟机
必要时可去除多余的xml配置
比如虚拟机改名，避免虚拟机磁盘、mac地址冲突
删除命令: virsh undefined 虚拟机名
\[root@room9pc01 \~\]# virsh undefine node2
域 node2 已经被取消定义
\[root@room9pc01 \~\]# virsh define /var/lib/libvirt/images/node2.img
错误：读取文件 \'/var/lib/libvirt/images/node2.img\' 失败:
对已定义的数据类型来说值过大
# 虚拟机模板制作(需要练习)
如何创建一个虚拟机模板,例如前面用的node.qcow2
初始化系统
## 1将刚刚创建好的系统初始化
1禁用selinux /etc/selinux/config
修改SELINUX=disabled
2卸载防火墙与NetworkManager
Yum repolist --y NetworkManager-\* firewalld-\* python-firewall
3配置好yum源
4安装软件：yum install --y lftp
5导入gpg key : rpm --import
ftp://111.11.11.11/\*\*\*/RPG-GPG-KEY-CentOS7
6常用系统命令安装
Yum install --y net-tools vim-enhanced bridge-utils psmisc
## 2网卡及配置文件设置
/etc/sysconfig/network-scripts/ifcfg-eh0
### DHCP模式：
ONBOOT=yes
TYPE=Ethernet
IPV6INIT=yes
BOOTPROTO= dhcp
### 静态地址模式：
ONBOOT=yes
TYPE=Ethernet
IPV6INIT=yes
BOOTPROTO=static
IPADDR=192.168.0.111
GATEWAY=192.168.0.1
#如果是做聚合链路（网卡组队），BOOTPROTO=none
禁用空路由
/etc/sysconfig/network
NOZEROCONF=yes
### 网卡脚本：
## 3磁盘分区
![](media/image14.png)
## 4如何解决可用只有2G\*
900 cd /var/lib/libvirt/images/
901 ls
902 qemu-img create -b node.qcow2 -f qcow2 node1.img 50G
903 sed \'s/node/node1/\' node.xml \>/etc/libvirt/qemu/node1.xml
904 sed \'s/node/node1/\' /etc/libvirt/qemu/node.xml
\>/etc/libvirt/qemu/node1.xml
905 ls /var/lib/libvirt/images/node1.img
906 ls
907 ls /etc/libvirt/qemu/node1.xml
908 virsh define /etc/libvirt/qemu/node1.xml
909 virsh start node1
910 virsh console node1
## 5去除个性化信息
![](media/image15.png)
## 6导出xml配置文件
查看：Virsh dumpxml 虚拟机名
备份：virsh dumpxml 虚拟机名 \> 虚拟机名.Xml
## 快速创建虚拟机
1 .xml文件配置
复制xml模板文件 cp node.xml /etc/libvirt/qemu/node0.xml
修改名称以及磁盘文件
2 \node0\ #修改名字
26 \ #修改文件名
2.img文件创建
qemu-img create -b node.qcow2 -f qcow2 node0.img 50G
#用刚刚导出的系统模板文件为后端文件创建虚拟机
3完成虚拟机注册以及启动
\]# virsh define /etc/libvirt/qemu/node0.xml
\]# virsh start node0 #启动虚拟机
\[root@room9pc01 qemu\]# virsh console node0 #连接虚拟机
localhost login:
> #退出按 ctrl +}
## 安装扩展分区软件
\[root@localhost \~\]# yum install -y cloud-utils-growpart
## 第一次开机自动扩容
\[root@localhost \~\]# /usr/bin/growpart /dev/vda 1
\[root@localhost \~\]# /usr/sbin/xfs_growfs /
## 离线访问虚拟机\* 
# 扩展:screen功能
Ctrl + a 呼叫命令
shift+s
# git使用
查找软件所需安装包
\[root@room9pc01 \~\]# yum provides 软件名
static\|dhcp\|none
# CLOUD01案例
案例1：virsh基本管理操作
案例2：qemu-img基本操作管理
案例3：创建一个虚拟网络
案例4：xml管理
案例5：安装虚拟机
案例6：离线访问虚拟机问题
## 1 案例1：virsh基本管理操作
1.1 问题
本案例要求熟悉virsh的基本操作，可以熟练运用：
列出当前正在运行的虚拟机
查看虚拟机的信息
管理虚拟机
设置虚拟机开机自动运行
1.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：virsh基本操作
1）列出当前正在运行的虚拟机
\[root@room9pc01 \~\]# virsh list
Id Name State
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
1 node1 running
2）查看虚拟机的信息
\[root@room9pc01 \~\]# virsh dominfo node1 //查看node1的信息
Id: 1
Name: node1
UUID: 20e15d2f-ea30-4aa3-96dc-91aab6283b10
OS Type: hvm
State: running
CPU(s): 2
CPU time: 92.8s
Max memory: 2048000 KiB
Used memory: 2048000 KiB
Persistent: yes
Autostart: disable
Managed save: no
Security model: none
Security DOI: 0
步骤二：管理虚拟机
1）启动虚拟机
\[root@room9pc01 \~\]# virsh start node1
2）重启虚拟机
\[root@room9pc01 \~\]# virsh reboot node1
3）强制关闭虚拟机
\[root@room9pc01 \~\]# virsh destroy node1
4）设置虚拟机开机自动运行
\[root@room9pc01 \~\]# virsh autostart node1
## 2 案例2：qemu-img基本操作管理
2.1 问题
本案例要求：
创建一个新的镜像盘文件
使用后端模板文件创建一个新的镜像盘文件
查看镜像盘文件的信息
2.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：创建一个新的镜像盘文件
qemu-img命令格式：qemu-img 命令 参数 块文件名称 大小
\[root@room9pc01 \~\]# qemu-img create -f qcow2 disk.img 50G
//qcow2为创建的格式
Formatting \'disk.img\', fmt=qcow2 size=53687091200 encryption=off
cluster_size=65536 lazy_refcounts=off
2）使用后端模板文件创建一个新的镜像盘文件
备注：-b使用后端模板文件
\[root@room9pc01 \~\]# qemu-img create -b disk.img -f qcow2 disk1.img
Formatting \'disk1.img\', fmt=qcow2 size=53687091200
backing_file=\'disk.img\' encryption=off cluster_size=65536
lazy_refcounts=off
3）使用后端模板文件创建一个16G的镜像盘文件
\[root@room9pc01 \~\]# qemu-img create -b disk.img -f qcow2 disk2.img
16G
Formatting \'disk1.img\', fmt=qcow2 size=53687091200
backing_file=\'disk.img\' encryption=off cluster_size=65536
lazy_refcounts=off
步骤二：查看镜像文件的信息
\[root@room9pc01 \~\]# qemu-img info disk1.img
image: disk.img
file format: qcow2
virtual size: 50G (53687091200 bytes)
disk size: 196K
cluster_size: 65536
Format specific information:
compat: 1.1
lazy refcounts: false \| help_topic \|
\| innodb_index_stats \|
\| innodb_table_stats \|
\| ndb_binlog_index \|
\| plugin \|
\| proc \|
\| procs_priv \|
\| proxies_priv \|
\| server_cost \|
\| servers \|
\| slave_master_info \|
## 3 案例3：创建一个虚拟网络
3.1 问题
创建一个虚拟网络，为之后的自定义安装虚拟机做准备：
创建一个名为vbr的虚拟网络
设置vbr的ip为192.168.1.254
配置vbr虚拟网络的dhcp分配地址范围100-200
启动vbr虚拟网络并用ifconfig验证
设置vbr虚拟网络开机自启动
3.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：创建一个名为vbr的虚拟网络
\[root@room9pc01 \~\]# vim /etc/libvirt/qemu/networks/vbr.xml
\
\vbr\ //vbr为虚拟网络的名字
\
\
\
//ip为192.168.1.254
\
\
//ip范围是100-200
\
\
\
步骤二：启动vbr虚拟网络并用ifconfig验证
\[root@room9pc01 \~\]# virsh net-define vbr //定义vbr虚拟网络
\[root@room9pc01 \~\]# virsh net-start vbr //启动vbr虚拟网络
\[root@room9pc01 \~\]# ifconfig //igconfig验证
vbr: flags=4163\ mtu 1500
inet 192.168.1.254 netmask 255.255.255.0 broadcast 192.168.1.255
ether 52:54:00:b7:1c:10 txqueuelen 1000 (Ethernet)
RX packets 2460 bytes 176958 (172.8 KiB)
RX errors 0 dropped 0 overruns 0 frame 0
TX packets 1948 bytes 532542 (520.0 KiB)
TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
步骤三：设置vbr虚拟网络开机自启动
\[root@room9pc01 \~\]# virsh net-autostart vbr
## 4 案例4：xml管理
4.1 问题
熟悉xml文件，并对虚拟机的配置进行调整：
导出一个虚拟机的xml配置文件
编辑xml文件
重新定义虚拟机
删除此虚拟机
4.2 步骤
实现此案例需要按照如下步骤进行。
步骤一：导出虚拟机xml的配置文件
1）查看xml配置文件
\[root@room9pc01 \~\]# cd /etc/libvirt/qemu/