names using the API of a random user generator [11]. We
then assigned passwords to the proﬁles by randomly selecting
passwords from the publicly available RockYou password list,
comprising 32 million passwords that were exposed during a
2009 data breach [39]. To increase the realism of the accounts,
we established friend connections among them to mimic the
social nature of real Facebook accounts.
Proﬁle Photos. We sourced proﬁle photos for the accounts by
downloading Creative Commons (CC) stock photos from Pix-
abay [12], Flickr [4], Pexels [2], and Unsplash [7]. We chose
only CC0-licensed photos from those sources; the photos can
be used for any purpose and do not require attribution. We
manually matched photos to accounts, taking care to ensure
that each proﬁle photo represented the previously designated
demographic attributes of its host account. For instance, for a
female adult account, we chose a proﬁle photo that shows an
adult woman. Finally, we uploaded the curated proﬁle photos
to honey accounts using a photo upload automation tool that
we built for this purpose. Thus, at a glance the demographic
label of any given account can be inferred by anyone that
connects to the account.
Timeline Data. To further mimic real Facebook accounts,
we posted some content on the timelines of honey accounts.
To this end, we collected publicly available tweets contain-
ing popular hashtags, using the Twitter Streaming API [3]
according to their terms of service. These popular hashtags,
identiﬁed in previous work [13], include #sports, #music,
and #news, among others. We removed personally identiﬁable
information (PII) from the tweets and posted the sanitized text
snippets on timelines of honey accounts using an automation
tool that we built. Hence, the honey accounts display diverse
Figure 1: Monitor overview. We observe attempts to change
account passwords via notiﬁcation emails that arrive at our
mail server, and collect records of account activity via the
DYI downloader.
content on topics that people usually post about on social
networks, and are more convincing as a result.
We ensured that the accounts looked realistic by populating
them with real-world data and connecting them with each
other (i.e., friend connections). Our accounts stopped post-
ing messages and interacting with each other shortly before
the credentials were leaked (we discuss those leaks in Sec-
tion 3.3). From that point, the only activity we carried out was
accepting the friend requests that the attackers made. We did
not drive any further activity from the accounts. In particular,
we did not interact with any attacker, for example by replying
to their private messages. This was primarily done to follow
our IRB protocol, which forbade us from interacting with
attackers (see Section 3.5 for more details).
We acknowledge that this might have introduced a sense of
“staleness” in the accounts, and might have inﬂuenced the ac-
tivity of the attackers. While some attackers might have been
gooﬁng around, the fact that we ﬁnd statistically signiﬁcant
differences in the activity performed on accounts with differ-
ent demographics gives us conﬁdence that we are capturing
real attack trends.
3.2 Data Collection Infrastructure
In this section, we present the data collection infrastructure
that we built to retrieve activity data from honey accounts;
Figure 1 illustrates its components and how they interact.
Next, we explain each key component.
Download Your Information (DYI) Archive. As previously
mentioned (Section 2), Facebook accounts, including test ac-
counts, allow account owners to download DYI archives con-
4118    30th USENIX Security Symposium
USENIX Association
Timeline postsChatsGroup callsLikesOther activityDYI archiveMail serverMail parserDYI downloaderVisitorDYI parserActivity reportsActivity reportsActivity reportstaining comprehensive records of their activity. We rely on
this feature to collect activity records of criminals.
DYI Downloader and Parser. DYI archives are composed
of Web pages containing activity details for ofﬂine viewing.
We automatically download them and run them through a
parser to extract and categorize their contents. Such contents
include login and logout information, device information, and
password changes, among others.
Mail Server and Parser. While setting up test accounts, we
associated certain email addresses to the honey accounts.
Those email addresses (one per Facebook test account) point
to a mail server under our control. On that mail server we
receive email notiﬁcations from honey accounts about pass-
word changes, incoming friend requests, and private messages,
among others. Unlike DYI records which we download only
once, the mail server provides us with real-time information
about account activity and allows us to react immediately
when necessary (e.g., to revert password changes).
3.3 Leaking Honey Credentials
Stolen credentials are often distributed on paste sites and other
outlets by cybercriminals [48]. We mimicked the credential-
leaking approach to attract cybercriminals to our honey
accounts by leaking credentials (Facebook IDs and pass-
words) via paste sites on the Surface Web (Pastebin.com,
Paste.org.ru) and the Dark Web (Stronghold). These are
ideal outlets because they allow public pastes and show recent
pastes to all visitors.
We did not leak the entire population of honey accounts.
Instead, we leaked two-thirds of them (672 credentials out
of the entire set of 1008). We did this to observe if criminals
would attempt to compromise the accounts that were not
leaked by leveraging existing friend connections among the
accounts. For instance, they might send phishing messages or
malicious links to accounts whose credentials we did not leak
(we set up friend connections among the test accounts).
Given the large number of credentials that we leaked (672
accounts), we divided them into seven chunks, each chunk
comprising a maximum of 100 credentials. Note that paste
sites allow users to see “recent pastes” on their home pages,
but only a small number of submissions appear at a time
(e.g., eight in the case of Pastebin.com). For this reason, we
leaked the credentials on a daily basis. To ensure that our
leaks favor paste site visitors from multiple time zones that
differed from ours, we leaked credentials twice daily. Finally,
to ensure that the credentials were adequately exposed during
leaks, we randomized the order of credentials in each chunk
prior to leaking them.
counts comprise stock photos and other publicly available
data, which might be obvious under close scrutiny. Also, a
close look might reveal that the honey accounts were created
fairly recently, and that they stopped posting new statuses af-
ter we stopped populating them—this can possibly inﬂuence
the credibility of our accounts. We do not consider these to
be major issues since such criminals would have connected,
at least once, to the accounts, and we would have recorded
their activity already.1 We also do not have a systematic way
to determine what happens if users of paste sites—our leak
outlets—realized that the accounts were fake. Note that paste
sites do not have direct feedback mechanisms (e.g., comment
ﬁelds), unlike forums. Finally, we leaked credentials anony-
mously on paste sites; our leaks were not connected to any
single identity. Hence, we replicated an anonymous leak.
Recall that we used sandboxed accounts (test accounts) that
are disconnected from regular Facebook accounts. A close
observation may reveal the presence of features that differ
slightly from real accounts. Note that we leaked credentials
through paste sites only. Our ﬁndings may not be representa-
tive of malicious activity in social accounts stolen via other
outlets, for instance, malware or underground forums. Despite
these factors, this paper offers insights into malicious activity
in stolen social accounts and will help in developing detection
and mitigation systems and techniques.
3.5 Ethics
We carefully considered the ethical implications of our work
while setting up and running experiments. First, we used ac-
counts that were isolated from the regular Facebook social
graph to avoid harming legitimate Facebook users. This sand-
box approach is in line with common practices in malware
research [44]. Second, we used publicly available stock pho-
tos and tweets to populate the accounts. We did this to ensure
that no private information was leaked in this study. Third, by
leveraging the test dashboard, we ensured that account pass-
words could be changed easily by us, to lock criminals out, if
we observed attempts to harm people via honey accounts. In
addition, our monitor system recorded all attempts to change
the email addresses associated with the honey accounts. Our
initial mitigation plan was to connect to such accounts and
restore their original email addresses, which were under our
control. We later found that Facebook already had a mitiga-
tion mechanism in place: attempts to change email addresses
were blocked by Facebook, and access to the affected ac-
counts was temporarily disabled until we reset them via the
test dashboard.
3.4 Threats to Validity
We acknowledge the existence of factors that may affect the
validity of our ﬁndings. First, the content of the honey ac-
1We also acknowledge the possibility of rare exceptions in which prospec-
tive visitors may perform a reverse image search on an account’s publicly-
accessible proﬁle picture without logging in, realize that it is a stock photo—
thus, likely a fake account—and then discard its credentials without ever
connecting to it.
USENIX Association
30th USENIX Security Symposium    4119
To further strengthen our ethics protocol, we asked our
Facebook contacts to keep an eye on the accounts with a
view to shutting down any account that violates Facebook’s
policies. After our analysis, we securely discarded PII that
accrued in the accounts during experiments. Finally, since
our experiments involved deceiving criminals to interact with
decoy accounts, we sought and obtained ethics approval from
our institution prior to starting experiments.
4 Data Analysis
In this section, we provide an overview of the activity per-
formed by criminals in honey accounts. We leaked credentials
to the accounts in a three-week period (from June 1, 2018 to
June 22, 2018), and our observations span six months (from
June 1, 2018 to December 1, 2018). Our analysis and the cor-
responding insights are based entirely on data collected from
honey accounts under our control; we did not use any internal
Facebook data.
4.1 Discarding Defective Accounts
As described in Section 3.2, our data collection method in-
volves downloading DYI archives from honey accounts. In
the process, we discovered that 79 accounts were defective,
and we could not download activity information from them.
Those defective accounts presented inﬁnitely-spinning GIFs
instead of loading page content, possibly due to a conﬁgura-
tion issue while setting up the test accounts. We were unable
to download activity data from them. In addition, three ac-
counts were blocked by Facebook; we could not retrieve DYI
data from them. We excluded those defective and blocked
accounts from analysis, and this reduced the effective num-
ber of honey accounts under analysis from 1008 accounts
to 926 accounts. These functional accounts comprise 472
adult accounts and 454 teen accounts (from the age range
perspective), or 469 female accounts and 457 male accounts
(from the gender perspective). Finally, the effective number
of (functional) leaked accounts reduced from 672 to 619.
4.2 Accesses and Associated Actions
284 (46%) of the functional leaked accounts received unautho-
rized accesses. We did not leak 307 accounts. Unfortunately,
due to the sandboxed nature of these accounts, it was not
possible for attackers to ﬁnd these accounts independently
and connect to them. This study cannot therefore estimate the
difference in risk of leaked and unleaked accounts. We did
however observe that 46 unleaked accounts (15%) received
interactions by attackers, in the form of friend requests or
private messages. It is possible that some of these were an
attempt to further gain access to those unleaked accounts.
However, our inability to interact with attackers, because of
our IRB protocol, did not allow us to investigate this further.
Facebook accounts record unique accesses to them, and
each access is labeled with a unique string identiﬁer known as
a cookie. Cookies can be found in the login records section of
DYI archives. An access is recorded when a criminal connects
to a honey account. Note that access identiﬁers (cookies) can
persist across logins into different accounts. For instance, if a
criminal connects to account A and then connects to another
account B using the same device and browser within a short
time, the same cookie will be recorded in both accounts. After
logging in, a criminal performs some actions, for instance,
sending a private message or writing a status update. We use
the terms cookie and access interchangeably in this paper. We
observed various types of accesses in the accounts and named
them according to the actions associated with them in the
accounts. These types of accesses, codiﬁed into a taxonomy
of accesses, are described next.
Hijacker. A hijacker access is recorded when the password
of a honey account (or its email address) is changed.
Chatty. This type of access happens when a criminal sends
private messages, creates group chats, posts an update on the
timeline of another account, or posts on their own timeline.
Emotional. An emotional access is recorded during clicks on
a Facebook “like” button (or any other reaction) on photos
and posts.
Searcher. This type of access occurs when a criminal enters
search terms in the Facebook search bar.
Proﬁle Editor. A proﬁle editor access is recorded when a
criminal edits an account’s proﬁle information (e.g., by chang-
ing the proﬁle photo).
Friend Modiﬁer. This type of access occurs when a criminal
adds or removes a friend from an account.
Curious. A curious access occurs when a criminal connects
to an account but does not perform any of the previously listed
actions. In other words, curious accesses comprise accesses
that resulted in actions that were not captured by our monitor
infrastructure because of limits to its coverage (e.g., clicking
on photos to expand them or scrolling through the account
proﬁle).2 To this end, in curious accesses, we record the act of
logging in as an action itself, unlike the previously listed ac-
cess types. Hence, curious accesses encompass a lower bound
of actions that our monitor infrastructure was not equipped to
capture.
These types of accesses are not mutually exclusive, except
the curious type. For instance, an access that is chatty can also
be emotional, depending on the various actions associated
with it. However, curious accesses can only belong to the
curious category.
4.3 Actions
In total, we observed 322 unique accesses to 284 accounts,
which resulted in 1159 actions in those accounts. This number
2Also note that we do not have ﬁne-grained data on what possibly hap-
pened during curious accesses.
4120    30th USENIX Security Symposium
USENIX Association
Table 1: Summary of actions grouped by access type. Curious,
searcher, and chatty accesses clearly dominate the table.
Access type
Curious (cur)
Searcher (sea)
Chatty (cha)
Friend modiﬁer (fri)
Hijacker (hij)
Emotional (emo)
Proﬁle editor (pro)
Total
Number of actions Percentage
44.7
29.5
11.0
9.7
2.5
1.6
1.0
100.0
518
342
127
113
29
18
12
1159
of accesses is in line with what reported by previous work
that followed a similar methodology when leaking online cre-
dentials [42]. Table 1 shows a summary of actions grouped by
access type. Curious, searcher, and chatty accesses dominate
the table of actions, responsible for 45%, 30%, and 11% of
all actions respectively. Emotional and proﬁle editor accesses
constitute the least active types. This indicates that criminals
who carry out actions in Facebook accounts are particularly in-
terested in searching for information via the Facebook search
bar, and writing private messages and public posts.
One of Facebook’s core functions is connecting people;
it provides ways to locate and connect to other Facebook
users—to eventually make them Facebook friends. Recall
that we created friend connections across the entire popula-
tion of honey accounts, prior to the experiments, as mentioned
in Section 3.1. In the course of experiments, we further ob-
served additional friend requests made by cybercriminals to
the accounts. In total, 157 accounts received friend requests
from other accounts. These comprise 83 teen accounts and
74 adult accounts, from the age perspective, or 31 male ac-
counts and 126 female accounts, from the gender perspective.
These margins in received friend requests across age range
and gender groups foreshadow further distinctions that we
highlight throughout this paper. Finally, it is interesting that
46 unleaked accounts received friend requests (we did not leak