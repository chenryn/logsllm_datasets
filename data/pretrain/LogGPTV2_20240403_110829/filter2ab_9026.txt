### Title: The Critical Importance of the Data Distribution Service (DDS) Protocol: Ensuring Secure Usage

**Introduction:**
We have identified and disclosed several vulnerabilities in most of the Object Management Group (OMG) Data Distribution Service (DDS) implementations. DDS is a critical protocol that underpins numerous high-stake technologies, including autonomous driving, healthcare machinery, military tactical systems, and missile launch stations. Notable users of DDS include NASA at the Kennedy Space Center (KSC), Siemens for smart grid applications, Volkswagen and Bosch for autonomous valet parking systems, NAV CANADA for Air Traffic Control (ATC), and the Robot Operating System 2 (ROS2) for controlling industrial and consumer robots.

**DDS Overview:**
Designed to meet industrial-level requirements, DDS operates deep within control networks, enabling seamless communication among an arbitrary number of endpoints such as sensors and actuators. It provides an abstract API based on familiar data type specifications (e.g., C structs) and simple function calls, making it versatile and easy to use, regardless of the data's complexity.

**Vulnerability Discovery:**
Our approach to DDS involved a bottom-up analysis, which included writing a Scapy layer to dissect the packet structure. While network fuzzing was not directly effective, it provided us with a deep understanding of the intricate details of DDS. This led to the discovery of an amplification vulnerability in the standard, allowing an attacker to redirect and flood an arbitrary host.

**Configuration Vulnerabilities:**
DDS configurations often rely on XML, JSON, YAML, or similar formats, making them another potential attack vector. By developing a Radamsa-based file fuzzer, we uncovered a parsing vulnerability in RTI DDS Connector. An attacker could exploit this by using a malicious configuration file to gain initial access.

**Fuzzing Message Interpretation Routines:**
We focused on fuzzing the message interpretation routines across all DDS implementations. Using concrete examples, we explain how to select effective fuzz targets and prepare them for popular fuzzing frameworks like OSS-Fuzz and UnicornAFL.

**From Novice to Expert:**
Our goal is to take you from having no knowledge of DDS to being able to efficiently research new vulnerabilities. We encourage other researchers, DDS users, and implementors to follow our lead. We also report on our interactions with some DDS implementors, which we believe is a crucial first step towards long-term security for this critical protocol.

**Resources:**
To aid in this effort, we are releasing fuzzing harnesses and a Scapy layer to decode the DDS Real-Time Publish-Subscribe (RTPS) layer.

By sharing our findings and tools, we aim to foster a more secure and robust DDS ecosystem.