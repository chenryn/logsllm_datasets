---
title: MySQL
date: 2020-12-16 18:28:43
background: bg-[#2a6387]
tags:
    - RDBMS
    - DB
categories:
    - Database
intro: The SQL cheat sheet provides you with the most commonly used SQL statements for your reference. 
plugins:
    - tooltip
    - copyCode
---
Getting Started {.cols-2}
---------------
### Connect MySQL
```
mysql -u  -p
mysql [db_name]
mysql -h  -P  -u  -p [db_name]
mysql -h  -u  -p [db_name]
```
### Commons {.row-span-2} 
#### Database
| -                        | -               |
|--------------------------|-----------------|
| `CREATE DATABASE` db `;` | Create database |
| `SHOW DATABASES;`        | List databases  |
| `USE` db`;`              | Switch to db    |
| `CONNECT` db `;`         | Switch to db    |
| `DROP DATABASE` db`;`    | Delete db       |
#### Table
| -                        | -                          |
|--------------------------|----------------------------|
| `SHOW TABLES;`           | List tables for current db |
| `SHOW FIELDS FROM` t`;`  | List fields for a table    |
| `DESC` t`;`              | Show table structure       |
| `SHOW CREATE TABLE `t`;` | Show create table sql      |
| `TRUNCATE TABLE `t`;`    | Remove all data in a table |
| `DROP TABLE `t`;`        | Delete table               |
#### Proccess
| -                   | -              |
|---------------------|----------------|
| `show processlist;` | List processes |
| `kill` pid`;`       | kill process   |
#### Other
| -              | -                  |
|----------------|--------------------|
| `exit` or `\q` | Exit MySQL session |
### Backups
Create a backup
```sql
mysqldump -u user -p db_name > db.sql
```
Export db without schema	
``` {.wrap}
mysqldump -u user -p db_name --no-data=true --add-drop-table=false > db.sql
```
Restore a backup
```
mysql -u user -p db_name < db.sql
```
MySQL Examples
--------------
### Managing tables
Create a new table with three columns
```sql
CREATE TABLE t (
     id    INT,
     name  VARCHAR DEFAULT NOT NULL,
     price INT DEFAULT 0
     PRIMARY KEY(id)
);
```
Delete the table from the database
```sql
DROP TABLE t ;
```
Add a new column to the table
```sql
ALTER TABLE t ADD column;
```
Drop column c from the table
```sql
ALTER TABLE t DROP COLUMN c ;
```
Add a constraint
```sql
ALTER TABLE t ADD constraint;
```
Drop a constraint
```sql
ALTER TABLE t DROP constraint;
```
Rename a table from t1 to t2
```sql
ALTER TABLE t1 RENAME TO t2;
```
Rename column c1 to c2
```sql
ALTER TABLE t1 RENAME c1 TO c2 ;
```
Remove all data in a table
```sql
TRUNCATE TABLE t;
```
### Querying data from a table
Query data in columns c1, c2 from a table
```sql
SELECT c1, c2 FROM t
```
Query all rows and columns from a table
```sql
SELECT * FROM t
```
Query data and filter rows with a condition
```sql
SELECT c1, c2 FROM t
WHERE condition
```
Query distinct rows from a table
```sql
SELECT DISTINCT c1 FROM t
WHERE condition
```
Sort the result set in ascending or descending order
```sql
SELECT c1, c2 FROM t
ORDER BY c1 ASC [DESC]
```
Skip offset of rows and return the next n rows
```sql
SELECT c1, c2 FROM t
ORDER BY c1 
LIMIT n OFFSET offset
```
Group rows using an aggregate function
```sql
SELECT c1, aggregate(c2)
FROM t
GROUP BY c1
```
Filter groups using HAVING clause
```sql
SELECT c1, aggregate(c2)
FROM t
GROUP BY c1
HAVING condition
```
### Querying from multiple tables {.row-span-2}
Inner join t1 and t2
```sql
SELECT c1, c2 
FROM t1
INNER JOIN t2 ON condition
```
Left join t1 and t1
```sql
SELECT c1, c2 
FROM t1
LEFT JOIN t2 ON condition
```
Right join t1 and t2
```sql
SELECT c1, c2 
FROM t1
RIGHT JOIN t2 ON condition
```
Perform full outer join
```sql
SELECT c1, c2 
FROM t1
FULL OUTER JOIN t2 ON condition
```
Produce a Cartesian product of rows in tables
```sql
SELECT c1, c2 
FROM t1
CROSS JOIN t2
```
Another way to perform cross join