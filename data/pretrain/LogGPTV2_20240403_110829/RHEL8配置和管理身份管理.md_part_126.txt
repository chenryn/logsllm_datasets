    		ipa group-add-member $groupname --users={$members}
    	fi
    	ipa group-show $groupname
    done
    ```
3.  以 IdM `admin`{.literal} 用户身份进行身份验证：
    ``` literallayout
    [root@nis-server ~]# kinit admin
    ```
4.  运行脚本。例如：
    ``` literallayout
    [root@nis-server ~]# sh /root/nis-groups.sh nisdomain nis-server.example.com
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#nis-import-hosts}将主机条目从 NIS 迁移到 IdM {.title}
:::
NIS `主机`{.literal} 映射包含有关主机的信息，如主机名和 IP
地址。使用此数据将 NIS 主机条目迁移到身份管理(IdM)：
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
当您在 IdM 中创建主机组时，会自动创建对应的 shadow NIS
组。不要在这些影子 NIS 组中使用 `ipa netgroup-*`{.literal} 命令。使用
`ipa netgroup-*`{.literal} 命令仅管理通过 `netgroup-add`{.literal}
命令创建的原生网络组。
:::
::: itemizedlist
**先决条件**
-   在 NIS 服务器中具有 root 访问权限.
-   [在 IdM 中启用了
    NIS。](#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#enabling-nis "在 IdM 中启用 NIS"){.link}
-   NIS 服务器已加入 IdM。
:::
::: orderedlist
**流程**
1.  安装 `yp-tools`{.literal} 软件包：
    ``` literallayout
    [root@nis-server ~]# yum install yp-tools -y
    ```
2.  在 NIS 服务器中使用以下内容创建 `/root/nis-hosts.sh`{.literal}
    脚本：
    ``` literallayout
    #!/bin/sh
    # $1 is the NIS domain, $2 is the NIS master server
    ypcat -d $1 -h $2 hosts | egrep -v "localhost|127.0.0.1" > /dev/shm/nis-map.hosts 2>&1
    IFS=$'\n'
    for line in $(cat /dev/shm/nis-map.hosts); do
    	IFS=' '
    	ipaddress=$(echo $line | awk '{print $1}')
    	hostname=$(echo $line | awk '{print $2}')
    	master=$(ipa env xmlrpc_uri | tr -d '[:space:]' | cut -f3 -d: | cut -f3 -d/)
    	domain=$(ipa env domain | tr -d '[:space:]' | cut -f2 -d:)
    	if [ $(echo $hostname | grep "\." |wc -l) -eq 0 ] ; then
    		hostname=$(echo $hostname.$domain)
    	fi
    	zone=$(echo $hostname | cut -f2- -d.)
    	if [ $(ipa dnszone-show $zone 2>/dev/null | wc -l) -eq 0 ] ; then
    		ipa dnszone-add --name-server=$master --admin-email=root.$master
    	fi
    	ptrzone=$(echo $ipaddress | awk -F. '{print $3 "." $2 "." $1 ".in-addr.arpa."}')
    	if [ $(ipa dnszone-show $ptrzone 2>/dev/null | wc -l) -eq 0 ] ; then
    		ipa dnszone-add  $ptrzone --name-server=$master --admin-email=root.$master
    	fi
    	# Now create this entry
    	ipa host-add $hostname --ip-address=$ipaddress
    	ipa host-show $hostname
    done
    ```
3.  以 IdM `admin`{.literal} 用户身份进行身份验证：
    ``` literallayout
    [root@nis-server ~]# kinit admin
    ```
4.  运行脚本。例如：
    ``` literallayout
    [root@nis-server ~]# sh /root/nis-hosts.sh nisdomain nis-server.example.com
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    此脚本不会迁移特殊的主机配置，如别名。
    :::
:::
:::
::: section
::: titlepage
# []{#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#nis-import-netgroups}将 netgroup 条目从 NIS 迁移到 IdM {.title}
:::
NIS `netgroup`{.literal} 映射包含有关网络组的信息。使用此数据将 NIS
网络组迁移到身份管理(IdM)：
::: itemizedlist
**先决条件**
-   在 NIS 服务器中具有 root 访问权限.
-   [在 IdM 中启用了
    NIS。](#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#enabling-nis "在 IdM 中启用 NIS"){.link}
-   NIS 服务器已加入 IdM。
:::
::: orderedlist
**流程**
1.  安装 `yp-tools`{.literal} 软件包：
    ``` literallayout
    [root@nis-server ~]# yum install yp-tools -y
    ```
2.  在 NIS 服务器中使用以下内容创建 `/root/nis-netgroups.sh`{.literal}
    脚本：
    ``` literallayout
    #!/bin/sh
    # $1 is the NIS domain, $2 is the NIS master server
    ypcat -k -d $1 -h $2 netgroup > /dev/shm/nis-map.netgroup 2>&1
    IFS=$'\n'
    for line in $(cat /dev/shm/nis-map.netgroup); do
    	IFS=' '
    	netgroupname=$(echo $line | awk '{print $1}')
    	triples=$(echo $line | sed "s/^$netgroupname //")
    	echo "ipa netgroup-add $netgroupname --desc=NIS_NG_$netgroupname"
    	if [ $(echo $line | grep "(," | wc -l) -gt 0 ]; then
    		echo "ipa netgroup-mod $netgroupname --hostcat=all"
    	fi
    	if [ $(echo $line | grep ",," | wc -l) -gt 0 ]; then
    		echo "ipa netgroup-mod $netgroupname --usercat=all"
    	fi
    	for triple in $triples; do
    		triple=$(echo $triple | sed -e 's/-//g' -e 's/(//' -e 's/)//')
    		if [ $(echo $triple | grep ",.*," | wc -l) -gt 0 ]; then
    			hostname=$(echo $triple | cut -f1 -d,)
    			username=$(echo $triple | cut -f2 -d,)
    			domain=$(echo $triple | cut -f3 -d,)
    			hosts=""; users=""; doms="";
    			[ -n "$hostname" ] && hosts="--hosts=$hostname"
    			[ -n "$username" ] && users="--users=$username"
    			[ -n "$domain"   ] && doms="--nisdomain=$domain"
    			echo "ipa netgroup-add-member $hosts $users $doms"
    		else
    			netgroup=$triple
    			echo "ipa netgroup-add $netgroup --desc=NIS_NG_$netgroup"
    		fi
    	done
    done
    ```
3.  以 IdM `admin`{.literal} 用户身份进行身份验证：
    ``` literallayout
    [root@nis-server ~]# kinit admin
    ```
4.  运行脚本。例如：
    ``` literallayout
    [root@nis-server ~]# sh /root/nis-netgroups.sh nisdomain nis-server.example.com
    ```
:::
:::
::: section
::: titlepage
# []{#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#nis-import-automount}将自动挂载映射从 NIS 迁移到 IdM {.title}
:::
自动挂载映射是一系列嵌套的条目，它们定义位置（父条目）、关联的键和映射。将
NIS 自动挂载映射到身份管理(IdM)：
::: itemizedlist
**先决条件**
-   在 NIS 服务器中具有 root 访问权限.
-   [在 IdM 中启用了
    NIS。](#assembly_migrating-from-nis-to-identity-management_configuring-and-managing-idm.html#enabling-nis "在 IdM 中启用 NIS"){.link}
-   NIS 服务器已加入 IdM。
:::
::: orderedlist
**流程**
1.  安装 `yp-tools`{.literal} 软件包：
    ``` literallayout
    [root@nis-server ~]# yum install yp-tools -y
    ```
2.  使用 NIS 服务器的以下内容创建 `/root/nis-automounts.sh`{.literal}
    脚本：
    ``` literallayout
    #!/bin/sh
    # $1 is for the automount entry in ipa
    ipa automountlocation-add $1
    # $2 is the NIS domain, $3 is the NIS master server, $4 is the map name
    ypcat -k -d $2 -h $3 $4 > /dev/shm/nis-map.$4 2>&1
    ipa automountmap-add $1 $4
    basedn=$(ipa env basedn | tr -d '[:space:]' | cut -f2 -d:)
    cat > /tmp/amap.ldif 
# []{#managing-topology.html#managing-topology}第 94 章 管理复制拓扑 {.title}
:::
本章论述了如何管理身份管理(IdM)域中服务器之间的复制。
::: section
::: titlepage
# []{#managing-topology.html#con_explaining-replication-agreements-topology-suffixes-and-topology-segments_assembly_managing-replication-topology}解释复制协议、拓扑后缀和拓扑片段 {.title}
:::
本节解释了以下概念：
::: itemizedlist
-   [复制协议](#managing-topology.html#introduction-to-replication-agreements_assembly_managing-replication-topology "复制协议"){.link}
-   [拓扑后缀](#managing-topology.html#topology-suffixes-explanation "拓扑后缀"){.link}
-   [拓扑片段](#managing-topology.html#topology-segments-explanation "拓扑片段"){.link}
:::
### []{#managing-topology.html#introduction-to-replication-agreements_assembly_managing-replication-topology}复制协议
当管理员基于现有服务器创建副本时，身份管理 (IdM)
会在初始服务器和副本之间创建[*复制协议*]{.emphasis}。复制协议确保两个服务器之间不断复制数据和配置。
IdM
使用[*多读/写副本复制*]{.emphasis}。在这种配置中，所有副本都加入到复制协议中接收并提供更新，因此被视为供应商和消费者。复制协议始终是强制的。
::: figure
[]{#managing-topology.html#assembly_managing-replication-topology-fig-replica1-replica-fin}
**图 94.1. 服务器和副本协议**
::: figure-contents
::: mediaobject
![包含两组复制协议的两台服务器：一个数据复制协议，与目录服务器数据库相关联，以及一个与其证书系统数据相关的证书复制协议](images/64_RHEL_IdM_0120_2.1.png)
:::
:::
:::
IdM 使用两种复制协议：
::: variablelist
[域复制协议]{.term}
:   这些协议复制身份信息。
[证书复制协议]{.term}
:   这些协议复制证书信息。
:::
两个复制频道都是独立的。两个服务器可以有一类或两种类型的复制协议。例如，当服务器
A 和服务器 B
仅配置了域复制协议时，它们之间仅复制身份信息，而不复制证书信息。
### []{#managing-topology.html#topology-suffixes-explanation}拓扑后缀
[*拓扑后缀*]{.emphasis} 存储复制的数据。IdM
支持两种类型的拓扑后缀：`domain`{.literal} 和