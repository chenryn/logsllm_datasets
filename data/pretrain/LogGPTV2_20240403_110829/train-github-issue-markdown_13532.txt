##### Description of the problem
Hello ! This is my first post on this Github, and first, I realy want to
congratulate mrdoob and all of contributors for this awesome project.  
This isnt an real issue, because i found a way to do what i wanted.
So the problem is that TextureLoader and more precisely ImageLoader doesnt
allow to add custom headers to get an image from an url. I needed to add
headers because in my application, i get all textures from an api that
authenticate users on each request with a JWT Token.
To succeed I decided to change TextureLoader and ImageLoader load function
this way :
    /**
    * @author mrdoob / http://mrdoob.com/
    */
    function ImageLoader( manager ) {
     this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;
    }
    Object.assign( ImageLoader.prototype, {
     load: function ( url, onLoad, onProgress, onError, customHeaders ) {
    	 console.log(url, 'TEST LOAD');
    	 if ( url === undefined ) url = '';
    	 if ( this.path !== undefined ) url = this.path + url;
    	 var scope = this;
    	 var cached = Cache.get( url );
    	 if ( cached !== undefined ) {
    		 scope.manager.itemStart( url );
    		 setTimeout( function () {
    			 if ( onLoad ) onLoad( cached );
    			 scope.manager.itemEnd( url );
    		 }, 0 );
    		 return cached;
    	 }
    	 var image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );
    	 image.addEventListener( 'load', function () {
    		 Cache.add( url, this );
    		 if ( onLoad ) onLoad( this );
    		 scope.manager.itemEnd( url );
    	 }, false );
    	 // image.addEventListener( 'progress', function ( event ) {
    	 // 	if ( onProgress ) onProgress( event );
    	 // }, false );
    	 image.addEventListener( 'error', function ( event ) {
    		 if ( onError ) onError( event );
    		 scope.manager.itemEnd( url );
    		 scope.manager.itemError( url );
    	 }, false );
    	 if ( url.substr( 0, 5 ) !== 'data:' ) {
    		 if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;
    	 }
    	 scope.manager.itemStart( url );
    	 console.log(customHeaders);
    	 const options = {
    		 headers: customHeaders
    	 };
    	 fetch(url, options)
    	 .then(res => res.blob())
    	 .then(blob => {
    		 image.src = URL.createObjectURL(blob);
    	 });
    	 // image.src = url;
    	 return image;
     },
     setCrossOrigin: function ( value ) {
    	 this.crossOrigin = value;
    	 return this;
     },
     setPath: function ( value ) {
    	 this.path = value;
    	 return this;
     }
    } );
##### Three.js version
  * Dev
  * r110
  * [x ] old version
##### Browser
  * All of them
  * Chrome
  * Firefox
  * Internet Explorer
##### OS
  * All of them
  * Windows
  * macOS
  * Linux
  * Android
  * iOS
##### Hardware Requirements (graphics card, VR Device, ...)