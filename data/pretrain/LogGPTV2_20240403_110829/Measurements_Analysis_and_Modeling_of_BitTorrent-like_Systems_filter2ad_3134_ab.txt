γ . Peer n+1 downloads
at speed un+1. According to the exponential decrease of
peer arrival rate, the inter-arrival time of peers will grow
exponentially, and ﬁnally there will be only one seed at
a time. When the peer arrival rate λ(t) is small enough
(n is large), peer n+1 can only be served by peer n, and
we have un+1 ≤ un. Thus, when δtn ≈ 1
λ(tn) > 1
γ ,
peer n + 1 cannot complete downloading before peer n
leaves, and the torrent is dead. Using Equation 3.1, we
get the torrent lifespan
Tlif e = τ log(
λ0
γ
).
(3.2)
Equation 3.2 shows the expectation of the real torrent
lifespan. To verify Equation 3.2, we compute the initial
peer arrival rate λ0 and the torrent attenuation parame-
ter τ for fully traced torrents in the tracker trace. From
Equation 3.1, we have
log δt = − log λ0 +
t
τ
.
(3.3)
Both δt and t for each peer arrival can be extracted
from the trace and we get log λ0 and 1
τ using linear re-
gression. We also compute the seed leaving rate γ as the
the reciprocal of the average seed service time, which is
extracted from the trace, too. Figure 4 shows the com-
parison of torrent lifespan computed from the tracker
trace (indicated by trace) and that from the Equation
3.2 (indicated by model).
In this ﬁgure, each point in
x-axis denotes a torrent, while each point in y-axis de-
notes the measurement result or the modeling result of
torrent lifespan. The torrents in the x-axis are sorted in
non-ascending order of the modeling results of torrent
lifespans. As shown in the ﬁgure, our model ﬁts the real
torrent lifespan very well. The average lifespan of tor-
rents is about 8.89 days based on the trace analysis and
8.34 days based on our model. The lifespans of most
torrents are between 30 - 300 hours, and there are only
a small number of torrents with extremely short or ex-
tremely long lifespans.
The total population of a torrent (in the number of
104
103
102
101
)
r
u
o
h
(
n
a
p
s
e
f
i
l
t
n
e
r
r
o
t
100
0
trace
model
100
200
300
torrents
400
500
600
Figure 4: The comparison of torrent lifespan: modeling
and trace analysis (y-axis is in log scale)
peers) is
Nall = Z ∞
0
λ0e− t
τ dt = λ0τ.
(3.4)
Among them, some peers may not be able to complete
downloading due to lack of seeds, which we call failed
peers, denoted as follows:
Nf ail = Z ∞
λ0e− t
τ dt = γτ.
(3.5)
Tlif e
Thus, the downloading failure ratio of the torrent is
Rf ail =
Nf ail
Nall
=
γτ
λ0τ
=
γ
λ0
.
(3.6)
Figure 5(a) shows the comparison of the torrent pop-
ulation computed from the tracker trace with that from
our model for each individual fully-traced torrent.
In
this ﬁgure, each point in x-axis denotes a torrent, while
each point in y-axis denotes the measurement result or
the modeling result of the total population of the torrent
during its entire lifespan. The torrents in the x-axis are
sorted in non-ascending order of the modeling results of
torrent populations. As evidenced by the ﬁgure, the mod-
eling result and trace analysis are consistent. In addition,
we can see that the distribution of the torrent population
is heavily skewed: although there are several large tor-
rents, most torrents are very small, and the average pop-
ulation of torrents is only about 102 peers.
Figure 5(b) shows the downloading failure ratio based
on trace analysis and on our model (plotted in the similar
manner as that of Figure 5(a)). The real failure ratio of
torrents is slightly lower than what our model predicts,
because there are some altruistic peers that serve the tor-
rent voluntarily. That also explains why the torrent lifes-
pan in the trace analysis (8.89 days) is slightly higher
than that in our model (8.34 days). Furthermore, there
are some torrents that have no failed peers in the trace
because the seeds leave after the downloaders ﬁnish, but
USENIX Association
Internet Measurement Conference 2005  
39
104
103
102
101
t
n
e
r
r
o
t
f
o
n
o
i
t
l
a
u
p
o
p
l
a
t
o
t
100
100
trace
model
100
o
i
t
a
r
e
r
u
l
i
a
f
10−1
i
g
n
d
a
o
n
w
o
d
l
10−2
101
torrents
102
103
0
trace
model
100
200
300
torrents
400
500
600
100
100
o
o
i
i
t
t
a
a
r
r
e
e
r
r
u
u
l
l
i
i
a
a
f
f
10−1
10−1
i
i
g
g
n
n
d
d
a
a
o
o
n
n
w
w
o
o
d
d
l
l
10−2
10−2
10−3
10−3
0
0
0
download failure
download failure
population
104
103
t
n
e
r
r
o
102
t
f
o
n
o
i
t
l
a
u
p
o
p
101
l
a
t
o
100
100
100
200
200
200
300
300
300
torrents
torrents
400
400
400
500
500
500
t
100
600
600
600
(a) The comparison of torrent population: mod-
eling and trace analysis (in log-log scale)
(b) The comparison of downloading failure ra-
tio: modeling and trace analysis (y-axis is in log
scale)
(c) The relation between torrent population and
downloading failure ratio (y-axis is in log scale)
Figure 5: Torrent population and downloading failure ratio for all fully-traced torrents
100
s
r
e
e
p
f
o
n
o
i
t
c
a
r
f
10−2
10−4
10−6
10−2
1
0.8
0.6
0.4
0.2
s
r
e
e
p
f
o
n
o
i
t
c
a
r
f
106
0
0
20
abort
complete
100
downloading speed (bytes/sec)
104
102
40
downloading progress (%)
60
80
100
(a) The downloading speed distribution (comple-
mentary CDF, in log-log scale)
(b) The downloading progress distribution (com-
plementary CDF)
Figure 6: The peers abort downloading voluntarily
cannot be shown in the log scale plot. However, the aver-
age downloading failure ratio based on the trace analysis
is still about 10%, which is non-trivial for a content dis-
tribution system.
Equation 3.5 implies that the number of failed peers
in a torrent is independent of the initial peer arrival rate.
Instead, the number of failed peers depends on the speed
of torrent evolution (the attenuation exponent of peer ar-
rival rate) and the seed departure rate. Figure 5(c) shows
downloading failure ratios of torrents and their corre-
sponding populations (plotted in the similar manner as
that of Figure 5(a) and 5(b)). As reﬂected in the ﬁgure
and indicated by Equation 3.5, the larger the torrent pop-
ulation, the lower the downloading failure ratio. It is in-
teresting to note that the population of torrents, sorted in
non-ascending order of their corresponding downloading
failure ratios, forms several clear curves, each of which
represents those torrents with similar evolution patterns
(the popularity attenuation parameter τ). On the right
side of the ﬁgure, the failure ratio of the torrents is 0 due
to the existence of some altruistic seeds, which always
stay until the last downloader completes.
In the above analysis, we assume that peers always
complete their downloading unless they cannot. We do
not consider peers that abort downloading voluntarily
when seeds are still available in the torrent. A peer may
abort downloading due to (1) loss of interest to the torrent
ﬁle; (2) slow downloading speed or small downloading
progress. Figure 6(a) shows the distribution of the av-
erage downloading speed of peers that voluntarily abort
and peers that download the ﬁle completely. Figure 6(b)
shows the distribution of downloading progress (the per-
centage of the entire ﬁle that has been downloaded) when
peers abort downloading voluntarily. The ﬁgures indi-
cate that the probability for a peer to abort download-
ing voluntarily is almost independent of its downloading
speed and the current downloading progress. Hence, the
voluntary aborting of some downloaders does not affect
our analysis above.
40
Internet Measurement Conference 2005
USENIX Association
l
s
r
e
d
a
o
n
w
o
d
f
o
#
80
60
40
20
0
0
s
d
e
e
s
f
o
#
80
60
40
20
0
0
50
50
100
150
time (hour)
100
150
time (hour)
(a) Torrent evolution
trace
model
200
250
trace
model
200
250
)
c
e
s
/
s
e
t
y
b
(
d
e
e
p
s
i
g
n
d
a
o
n
w
o
d
l
e
g
a
r
e
v
a
x 104
15
10
5
0
model
trace
50
100
time (hour)
150
200
(b) Downloading speed
Figure 7: Torrent evolution under the ﬂuid model
x(t)
y(t)
λ0
τ
µ
c
γ
η
number of downloaders in the system at time t
number of seeds in the system at time t
the initial value of peer arrival rate
the attenuation parameter of peer arrival rate
the uploading bandwidth
the downloading bandwidth (c (cid:29) µ)
the rate at which seeds leave the system
the ﬁle sharing efﬁciency, meaning the probability
that a peer can exchange chunks with other peers
Table 1: Notations and assumptions for the ﬂuid model
3.3 Client Performance Variations in Bit-
Torrent
Study [18] proposed a ﬂuid model for BitTorrent-like
systems with constant peer arrival rate. We follow the