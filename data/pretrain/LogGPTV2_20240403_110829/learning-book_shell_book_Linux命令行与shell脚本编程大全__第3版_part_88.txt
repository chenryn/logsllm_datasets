## Page 569
### 第25章 创建与数据库、Web及电子邮件相关的脚本

当然，提取数据并不仅限于从数据表中。在脚本中，你可以使用各种类型的SQL命令，例如 `INSERT` 语句。

```bash
$ cat mtest3
#!/bin/bash
MYSQL=$(which mysql)
if [ $# -ne 4 ]; then
    echo "Usage: $0 <first_name> <last_name> <email> <salary>"
else
    statement="INSERT INTO employees VALUES ('$1', '$2', '$3', $4);"
    $MYSQL mytest -u test -p <(echo "$statement")
fi
```

通过XML，可以轻松地标识每条记录及其字段值。随后，可以利用标准的Linux字符串处理功能来提取所需的数据。

### 25.2 使用Web

通常，在考虑Shell脚本编程时，互联网可能是最不可能被考虑到的部分。命令行世界看起来似乎与丰富多彩的互联网世界格格不入。然而，你可以在Shell脚本中方便地利用一些工具访问Web和其他网络设备中的数据。

Lynx是一款基于文本的浏览器，由堪萨斯大学的学生于1992年编写，其历史几乎与互联网一样悠久。由于它是基于文本的，因此可以直接从终端会话中访问网站，尽管Web页面上的图片会被替换为HTML标签。这样，你可以在几乎所有类型的Linux终端上浏览互联网。图25-2展示了Lynx的界面。

#### 图25-2 使用Lynx浏览Web页面

Lynx使用标准键盘按键浏览网页。链接会在Web页面上以高亮文本的形式出现。使用向右方向键可以跟随一个链接到下一个Web页面。

你可能想知道如何在Shell脚本中使用图形化文本程序。Lynx还提供了一个功能，允许将Web页面的文本内容转储到STDOUT中。这个功能非常适合用来挖掘Web页面中的数据。本节将介绍如何在Shell脚本中用Lynx程序提取网站中的数据。

#### 25.2.1 安装Lynx

尽管Lynx有些古老，但其开发仍然活跃。在本书写作时，Lynx的最新版本是2010年6月发布的2.8.8版，新版本正在研发中。鉴于它在Shell脚本程序员中的流行，许多Linux发行版都将其作为默认程序安装。

如果你正在使用的Linux系统没有Lynx，请检查该发行版的安装包。大多数情况下，你都能在那里找到Lynx包并轻松安装。如果发行版没有提供Lynx包，或者你想使用最新版本，可以从lynx.isc.org网站下载源码并编译（假设你已经在Linux系统上安装了C开发库）。参考第9章获取有关如何编译和安装源码包的相关信息。

#### 25.2.2 Lynx命令行

Lynx命令行极其擅长从远程网站上提取信息。当你用浏览器查看Web页面时，看到的只是传送到浏览器中信息的一部分。Web页面由以下三种类型的数据组成：

- HTTP头部
- Cookie
- HTML内容

HTTP头部提供了连接中传送的数据类型、发送数据的服务器以及采用的连接安全类型的相关信息。Lynx程序允许你查看Web页面会话中发送的所有HTTP头部。

如果你浏览过Web页面，对Web页面Cookie一定不会陌生。网站用Cookie存储有关网站访问的数据，以供将来使用。每个站点都能存储信息，但只能访问自己设置的信息。Lynx命令提供了一些选项来查看Web服务器发送的Cookie，还可以接受或拒绝特定的Cookie。

Lynx程序支持三种不同的格式来查看Web页面的实际HTML内容：

- 在终端会话中利用curses图形库显示文本图形；
- 文本文件，文件内容是从Web页面中转储的原始数据；
- 文本文件，文件内容是从Web页面中转储的原始HTML源码。

对于Shell脚本，原始数据或HTML源码可是一座金山。一旦你获得了从网站上检索到的信息，就能轻松地从中提取每一条信息。

Lynx命令的基本格式如下：

```bash
lynx [options] URL
```

其中URL是你想要连接的HTTP或HTTPS地址，options则是一个或多个选项。这些选项可以在Lynx与远程网站交互时改变其行为。许多命令行参数定义了Lynx的行为，可以用来控制全屏模式下的Lynx，允许在浏览Web页面时对其进行定制。

#### 25.2.3 Lynx配置文件

Lynx命令会从配置文件中读取大量的参数设置。默认情况下，这个文件位于 `/usr/local/lib/lynx.cfg`，但许多Linux发行版将其放在 `/etc` 目录下（如 `/etc/lynx.cfg`）（Ubuntu发行版将 `lynx.cfg` 放到了 `/etc/lynx-curl` 目录中）。

`lynx.cfg` 配置文件将相关参数分组到不同的区域中，以便更容易找到参数。配置文件中条目的格式为：

```plaintext
PARAMETER: value
```

其中 `PARAMETER` 是参数的全名（通常都是大写字母，但也不总是如此），`value` 是与参数关联的值。

浏览这个文件，你会发现许多参数都与命令行参数类似，比如 `ACCEPT_ALL_COOKIES` 参数就等同于设置了 `-accept_all_cookies` 命令行参数。

还有一些配置参数功能类似，但名称不同。例如，`FORCE_SSL_COOKIES_SECURE` 配置文件参数设置可以用 `-force_secure` 命令行参数覆盖。

你还会发现少数配置参数并没有对应的命令行参数。这些值只能在配置文件中设定。最常见的不能在命令行上设置的配置参数是代理服务器。

某些网络（尤其是公司网络）使用代理服务器作为客户端浏览器和目标网站之间的桥梁。客户端浏览器不能直接向远程Web服务器发送HTTP请求，而是必须将请求发到代理服务器上，然后由代理服务器将请求转发给远程Web服务器，获取结果后再返回给客户端浏览器。

虽然这看起来像是浪费时间，但它是一个重要的功能，用于保护客户端不受互联网上的危险侵害。代理服务器可以过滤不良内容和恶意代码，甚至可以发现钓鱼网站（为了获取用户数据而假扮他人的流氓服务器）。代理服务器还可以帮助降低网络带宽的使用，因为它缓存了经常浏览的Web页面并直接返回给客户端，而不用再从原始地址处下载页面。

用来定义代理服务器的配置参数有：

```plaintext
http_proxy: http://some.server.dom:port/
https_proxy: https://some.server.dom:port/
ftp_proxy: http://some.server.dom:port/
gopher_proxy: http://some.server.dom:port/
news_proxy: http://some.server.dom:port/
newsreply_proxy: http://some.server.dom:port/
newspost_proxy: http://some.server.dom:port/
snews_proxy: http://some.server.dom:port/
snewsreply_proxy: http://some.server.dom:port/
snewspost_proxy: http://some.server.dom:port/
nntp_proxy: http://some.server.dom:port/
wais_proxy: http://some.server.dom:port/
finger_proxy: http://some.server.dom:port/
csso_proxy: http://some.server.dom:port/
no_proxy: host, domain.dom
```

你可以为任何Lynx支持的网络协议定义不同的代理服务器。`NO_PROXY` 参数是逗号分隔的网站列表。对于这些网站，不希望使用代理服务器直接访问。这些通常是不需要过滤的内部网站。

#### 25.2.4 从Lynx中获取数据

在Shell脚本中使用Lynx时，大多数情况下你只是要提取Web页面中的某条（或某几条）特定信息。完成这个任务的方法称为屏幕抓取（screen scraping）。在屏幕抓取过程中，你要尝试通过编程寻找图形化屏幕上某个特定位置的数据，从而获取它并在脚本中使用。

用Lynx进行屏幕抓取的最简单方法是使用 `-dump` 选项。这个选项不会在终端屏幕上显示Web页面，而是将Web页面文本数据直接输出到STDOUT。

```bash
$ lynx -dump http://localhost/RecipeCenter/
The Recipe Center
*Just like mom used to make*
Melcone
[1] Home
[3] Register for free login
[2] Login to post
[4] Post a new recipe
```

每个链接都由一个标号标定，Lynx在Web页面数据后显示了所有标号所指向的地址。

在从Web页面中获得了所有文本数据之后，你可以使用sed编辑器和gawk程序（参见第19章）来提取数据。

首先，让我们找一些有意思的数据来收集。Yahoo!天气页面是查找全世界任何地区当前气候的不错来源。每个位置都有一个单独的URL来显示该城市的天气信息（你可以在浏览器中打开该站点并输入你的城市信息来获取特定URL）。查看伊利诺伊州芝加哥市的天气情况的Lynx命令如下：

```bash
lynx -dump http://weather.yahoo.com/united-states/illinois/chicago-2379574/
```

这条命令会从页面中转储出很多数据。第一步是找到你需要的准确信息。要做到这一点，需要将Lynx命令的输出重定向到一个文件中，然后在文件中查找数据。执行前面的命令后，我们在输出文件中找到了这段文本：

```plaintext
Current conditions as of 1:54 pm EDT
Mostly Cloudy
Feels Like:
32°F
Barometer:
30.13 in and rising
Humidity:
50%
Visibility:
10 mi
Dewpoint:
15°F
Wind:
10 mph
```

这些都是你需要的关于当前天气的所有信息。但这段输出中有个小问题：数字都在标题下面一行。只提取单独的数字有些困难。第19章讨论过如何处理这样的问题。

解决这一问题的关键是先写一个能查找数据标题的sed脚本。找到之后，你就可以跳到正确的行中提取数据了。很幸运，在这个例子中我们所需要的数据就是那些文本行。这里应该只用sed脚本就能解决了。如果在同一行中还有其他文本，就需要使用gawk工具来过滤出我们需要的数据。

首先，你需要创建一个sed脚本来查找表示地点的文本，然后跳到下一行来获取描述当前天气状况的文本并打印出来。输出芝加哥天气的脚本如下：

```bash
$ cat sedcond
/IL, United States/ {
    n
    p
}
```

下一步，你需要一段sed脚本来查找文本“Feels Like”，并打印出下一行的温度。

```bash
$ cat sedtemp
/Feels Like/ {
    n
    p
}
```

现在你可以在Shell脚本中使用这两个sed脚本。首先将Web页面的Lynx输出放入一个临时文件中，然后对Web页面数据使用这两个sed脚本，提取所需的数据。下面的例子演示了具体的做法。

```bash
$ cat weather
#!/bin/bash
# Extract the current weather for Chicago, IL
URL="http://weather.yahoo.com/united-states/illinois/chicago-2379574/"
TMPFILE=$(mktemp /tmp/weatherXXXXXX)
LYNX=$(which lynx)

$LYNX -dump $URL > $TMPFILE

temp=$(cat $TMPFILE | sed -n -f sedtemp | awk '{print $4}')
conditions=$(cat $TMPFILE | sed -n -f sedcond)

echo "Current conditions: $conditions"
echo "The current temperature outside is: $temp°F"

rm -f $TMPFILE
```

运行这个脚本将输出：

```plaintext
Current conditions: Mostly Cloudy
The current temperature outside is: 32°F
```

这样，你就成功地从Web页面中提取了所需的天气信息。