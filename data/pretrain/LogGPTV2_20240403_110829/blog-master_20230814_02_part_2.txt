make && make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/ChenHuajun/pg_roaringbitmap  
cd $TEMP_DIR/pg_roaringbitmap  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/theirix/parray_gin  
cd $TEMP_DIR/parray_gin  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/jirutka/smlar  
cd $TEMP_DIR/smlar  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/alitrack/duckdb_fdw
# 14版本 bug fix 之前
# git clone  https://github.com/alitrack/duckdb_fdw
cd $TEMP_DIR/duckdb_fdw
# git checkout 87c66cf04243c7bc43e0e75d0b8ce5dd76d81cd5
# wget -T 36000 -t 0 --waitretry=5 https://github.com/duckdb/duckdb/releases/download/v0.9.2/libduckdb-linux-aarch64.zip  
# curl -Z --connect-timeout 120 -m 36000 --retry 12000 --retry-delay 5 --retry-max-time 1200 -L https://github.com/duckdb/duckdb/releases/download/v0.9.2/libduckdb-linux-aarch64.zip -o libduckdb-linux-aarch64.zip  
# cp $TEMP_DIR/libduckdb-linux-aarch64.zip $TEMP_DIR/duckdb_fdw/  
# unzip -n -d . libduckdb-linux-aarch64.zip  
# cp libduckdb.so $(pg_config --libdir)  
# USE_PGXS=1 make  
# USE_PGXS=1 make install
mkdir /tmp/duckdb_fdw/libduckdb   
mv /tmp/libduckdb-src.zip /tmp/duckdb_fdw/libduckdb/   
cd /tmp/duckdb_fdw/libduckdb   
unzip libduckdb-src.zip  
unalias cp  
cp -f duckdb.h ../  
cp -f duckdb.hpp ../  
# 编译 libduckdb.so 可能比较费内存, 建设调大docker 内存限制到8GB以上   
# 编译参数需要 -std=c++11 -D_GLIBCXX_USE_CXX11_ABI=0 与 duckdb_fdw src Makefile 一致   
clang++ -c -fPIC -std=c++11 -D_GLIBCXX_USE_CXX11_ABI=0 duckdb.cpp -o duckdb.o   
clang++ -shared -o libduckdb.so *.o   
cp -f libduckdb.so $(pg_config --libdir)   
cp -f libduckdb.so /tmp/duckdb_fdw/   
cd /tmp/duckdb_fdw   
USE_PGXS=1 make uninstall  
USE_PGXS=1 make clean  
USE_PGXS=1 make distclean  
USE_PGXS=1 make    
USE_PGXS=1 make install    
cd $TEMP_DIR  
git clone --depth 1 https://github.com/EnterpriseDB/hdfs_fdw  
cd $TEMP_DIR/hdfs_fdw/libhive  
JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64 JDK_INCLUDE=$JAVA_HOME/include INSTALL_DIR=/usr/lib/postgresql/14/lib PATH=/usr/lib/postgresql/14/bin:$PATH make  
JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64 JDK_INCLUDE=$JAVA_HOME/include INSTALL_DIR=/usr/lib/postgresql/14/lib PATH=/usr/lib/postgresql/14/bin:$PATH make install  
cd $TEMP_DIR/hdfs_fdw/libhive/jdbc  
javac MsgBuf.java  
javac HiveJdbcClient.java  
jar cf HiveJdbcClient-1.0.jar *.class  
cp HiveJdbcClient-1.0.jar /usr/lib/postgresql/14/lib  
cd $TEMP_DIR/hdfs_fdw  
JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64 JDK_INCLUDE=$JAVA_HOME/include INSTALL_DIR=/usr/lib/postgresql/14/lib PATH=/usr/lib/postgresql/14/bin:$PATH USE_PGXS=1 make  
JAVA_HOME=/usr/lib/jvm/java-17-openjdk-arm64 JDK_INCLUDE=$JAVA_HOME/include INSTALL_DIR=/usr/lib/postgresql/14/lib PATH=/usr/lib/postgresql/14/bin:$PATH USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://gitlab.com/dalibo/postgresql_anonymizer.git  
cd $TEMP_DIR/postgresql_anonymizer  
make extension  
make install  
cd $TEMP_DIR  
git clone --depth 1 --branch stable https://github.com/jedisct1/libsodium  
cd $TEMP_DIR/libsodium  
./configure  
make  
make check  
make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/michelp/pgsodium  
cd $TEMP_DIR/pgsodium  
C_INCLUDE_PATH=/usr/include/postgresql/14/server PG_LDFLAGS=-L/usr/lib/postgresql/14/lib USE_PGXS=1 make  
C_INCLUDE_PATH=/usr/include/postgresql/14/server PG_LDFLAGS=-L/usr/lib/postgresql/14/lib USE_PGXS=1 make install  
cd $TEMP_DIR  
wget -T 36000 -t 0 --waitretry=5 https://github.com/libgd/libgd/archive/refs/tags/gd-2.3.3.tar.gz  
tar -zxvf gd-2.3.3.tar.gz  
cd $TEMP_DIR/libgd-gd-2.3.3  
mkdir build  
cd $TEMP_DIR/libgd-gd-2.3.3/build  
cmake ..  
make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/digoal/imgsmlr  
# git clone --depth 1 https://github.com/postgrespro/imgsmlr  
cd $TEMP_DIR/imgsmlr  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/postgrespro/vops  
cd $TEMP_DIR/vops  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 -b PG14 https://github.com/ossc-db/pg_hint_plan  
cd $TEMP_DIR/pg_hint_plan  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
apt-get install -y libselinux1-dev libpam0g-dev libkrb5-dev liblz4-dev  
git clone --depth 1 https://github.com/ossc-db/pg_bulkload  
cd $TEMP_DIR/pg_bulkload  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 -b 1.6.1 https://github.com/ossc-db/pg_store_plans  
cd $TEMP_DIR/pg_store_plans  
USE_PGXS=1 make  
USE_PGXS=1 make install  
# cd $TEMP_DIR  
# git clone --depth 1 -b REL-5_5_1 https://github.com/EnterpriseDB/mongo_fdw  
# cd $TEMP_DIR/mongo_fdw  
# ./autogen.sh --with-master  
# apt-get install -y libmongoc-dev  
# # C_INCLUDE_PATH="/include/libmongoc-1.0/mongoc:/include/libbson-1.0" USE_PGXS=1 make  
# # C_INCLUDE_PATH="/include/libmongoc-1.0/mongoc:/include/libbson-1.0" USE_PGXS=1 make install  
# USE_PGXS=1 make  
# USE_PGXS=1 make install
cd $TEMP_DIR  
git clone --depth 1 -b REL-5_5_1 https://github.com/EnterpriseDB/mongo_fdw  
cd $TEMP_DIR/mongo_fdw  
cp $TEMP_DIR/mongo-c-driver-1.17.3.tar.gz ./
tar -xzvf mongo-c-driver-1.17.3.tar.gz
rm -rf mongo-c-driver
mv mongo-c-driver-1.17.3 mongo-c-driver
cd $TEMP_DIR/mongo_fdw/mongo-c-driver
cmake -DENABLE_AUTOMATIC_INIT_AND_CLEANUP=OFF -DENABLE_SSL=AUTO .
make install 
cd $TEMP_DIR/mongo_fdw  
cp $TEMP_DIR/json-c-0.15-20200726.tar.gz ./ 
tar -xzvf json-c-0.15-20200726.tar.gz
rm -rf json-c
mv json-c-json-c-0.15-20200726 json-c
cd $TEMP_DIR/mongo_fdw/json-c
cmake .
make -j 2
make install
apt-get install -y libmongoc-dev  
cd $TEMP_DIR/mongo_fdw
echo "#ifdef __CONFIG__" >> config.h 
echo "#define META_DRIVER" >> config.h 
echo "#endif" >> config.h 
export PKG_CONFIG_PATH=mongo-c-driver/src/libmongoc/src:mongo-c-driver/src/libbson/src
mv Makefile Makefile.origin 
cp Makefile.meta Makefile 
# C_INCLUDE_PATH="/include/libmongoc-1.0/mongoc:/include/libbson-1.0" USE_PGXS=1 make  
# C_INCLUDE_PATH="/include/libmongoc-1.0/mongoc:/include/libbson-1.0" USE_PGXS=1 make install  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/neondatabase/neon  
cd $TEMP_DIR/neon/pgxn/hnsw  
USE_PGXS=1 make  
USE_PGXS=1 make install  
# cd $TEMP_DIR  
# curl https://install.citusdata.com/community/deb.sh > add-citus-repo.sh  
# bash add-citus-repo.sh  
# apt-get install -y postgresql-14-citus-12  
# Unfortunately, the Citus repository does not contain packages for non-x86_64 architectures.  
apt-get install -y libzstd-dev libxslt1-dev libxml2-dev libcurl-ocaml-dev  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/citusdata/citus  
cd $TEMP_DIR/citus  
./autogen.sh  
./configure  
make -j8  
make install  
cd $TEMP_DIR  
apt-get install -y libboost-all-dev  
# wget -T 36000 -t 0 --waitretry=5 https://api.pgxn.org/dist/datasketches/1.7.0/datasketches-1.7.0.zip  
unzip datasketches-1.7.0.zip  
cd $TEMP_DIR/datasketches-1.7.0  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
# get GraphBLAS, compile with debug symbols  
# curl -Z --connect-timeout 120 -m 36000 --retry 12000 --retry-delay 5 --retry-max-time 1200 -L http://faculty.cse.tamu.edu/davis/GraphBLAS/GraphBLAS-3.1.1.tar.gz -o GraphBLAS-3.1.1.tar.gz  
tar -zxvf GraphBLAS-3.1.1.tar.gz  
cd GraphBLAS-3.1.1  
make library CMAKE_OPTIONS='-DCMAKE_BUILD_TYPE=Debug'  
make install  
cd $TEMP_DIR  
git clone --depth 1 --branch 22July2019 https://github.com/GraphBLAS/LAGraph.git && cd LAGraph && make -j4 library && make install  
cd $TEMP_DIR  
curl --connect-timeout 120 -m 36000 --retry 12000 --retry-delay 5 --retry-max-time 1200 -s -L https://github.com/theory/pgtap/archive/v0.99.0.tar.gz | tar zxvf - && cd pgtap-0.99.0 && make -j4 && make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/michelp/pggraphblas  
cd $TEMP_DIR/pggraphblas  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 -b REL1_2_STABLE https://github.com/pgbigm/pg_bigm  
cd $TEMP_DIR/pg_bigm  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/percona/pg_stat_monitor  
cd $TEMP_DIR/pg_stat_monitor  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/neondatabase/pg_embedding  
cd $TEMP_DIR/pg_embedding  
USE_PGXS=1 make  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/cybertec-postgresql/pgfaceting  
cd $TEMP_DIR/pgfaceting  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/pgexperts/pg_plan_filter  
cd $TEMP_DIR/pg_plan_filter  
USE_PGXS=1 make install  
cd $TEMP_DIR  
git clone --depth 1 https://github.com/postgrespro/pg_variables  
cd $TEMP_DIR/pg_variables  
USE_PGXS=1 make install  
cd $TEMP_DIR  
apt-get install -y libcurl-ocaml-dev  
wget -T 36000 -t 0 --waitretry=5 https://api.pgxn.org/dist/pg_curl/2.2.2/pg_curl-2.2.2.zip  
unzip pg_curl-2.2.2.zip  
cd $TEMP_DIR/pg_curl-2.2.2  
USE_PGXS=1 make install  
cd $TEMP_DIR  
apt-get install -y systemtap-sdt-dev
mkdir -p /usr/lib/postgresql/14/lib
mkdir -p /usr/lib/postgresql/14/lib/bitcode
mkdir -p /usr/share/postgresql/14/extension
mv pg_task.so /usr/lib/postgresql/14/lib/
mv pg_task.index.bc /usr/lib/postgresql/14/lib/bitcode/
mv pg_task /usr/lib/postgresql/14/lib/bitcode/
mv pg_task.control /usr/share/postgresql/14/extension/
mv pg_task--1.0.sql /usr/share/postgresql/14/extension/
cd $TEMP_DIR
git clone --depth 1 -b extension https://github.com/RekGRpth/pg_task  
# OR
# git clone --depth 1 -b extension https://github.com/RekGRpth/pg_task 
# cd $TEMP_DIR/pg_task  
# USE_PGXS=1 make install
# OR
# wget -T 36000 -t 0 --waitretry=5 https://api.pgxn.org/dist/pg_task/2.0.41/pg_task-2.0.41.zip  
# unzip pg_task-2.0.41.zip  