title:A framework for classifying denial of service attacks
author:Alefiya Hussain and
John S. Heidemann and
Christos Papadopoulos
A Framework for Classifying Denial of Service Attacks∗
Aleﬁya Hussain John Heidemann Christos Papadopoulos
USC/Information Sciences Institute
{hussain,johnh,christos}@isi.edu
ABSTRACT
Launching a denial of service (DoS) attack is trivial, but detec-
tion and response is a painfully slow and often a manual process.
Automatic classiﬁcation of attacks as single- or multi-source can
help focus a response, but current packet-header-based approaches
are susceptible to spooﬁng. This paper introduces a framework for
classifying DoS attacks based on header content, transient ramp-up
behavior and novel techniques such as spectral analysis. Although
headers are easily forged, we show that characteristics of attack
ramp-up and attack spectrum are more difﬁcult to spoof. To eval-
uate our framework we monitored access links of a regional ISP
detecting 80 live attacks. Header analysis identiﬁed the number of
attackers in 67 attacks, while the remaining 13 attacks were clas-
siﬁed based on ramp-up and spectral analysis. We validate our re-
sults through monitoring at a second site, controlled experiments,
and simulation. We use experiments and simulation to understand
the underlying reasons for the characteristics observed. In addition
to helping understand attack dynamics, classiﬁcation mechanisms
such as ours are important for the development of realistic models
of DoS trafﬁc, can be packaged as an automated tool to aid in rapid
response to attacks, and can also be used to estimate the level of
DoS activity on the Internet.
Categories and Subject Descriptors
C.2.0 [COMPUTER-COMMUNICATION NETWORKS]:
General–Security and Protection G.3 [PROBABILITY AND
STATISTICS]: Time series Analysis
General Terms
Measurement, Security
Keywords
Security, Measurement, Denial of Service Attacks, Time Series
Analysis.
∗
This material is based upon work supported by DARPA via the
Space and Naval Warfare Systems Center San Diego under Con-
tract No. N66001-00-C-8066 (“SAMAN”), by NSF under grant
number ANI-9986208 (“CONSER”), by DARPA via the Fault Tol-
erant Networks program under grant number N66001-01-1-8939
(“COSSACK”) and by Los Alamos National Laboratory under
grant number 53272-001.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’03, August 25–29, 2003, Karlsruhe, Germany.
Copyright 2003 ACM 1-58113-735-4/03/0008 ...$5.00.
1
1.
INTRODUCTION
The Internet connects hundreds of millions of computers across
the world running on multiple hardware and software platforms.
It serves uncountable personal and professional needs for people
and corporations. However, this interconnectivity among comput-
ers also enables malicious users to misuse resources and mount de-
nial of service (DoS) attacks against arbitrary sites.
In a denial of service attack, a malicious user exploits the con-
nectivity of the Internet to cripple the services offered by a victim
site, often simply by ﬂooding a victim with many requests. A DoS
attack can be either a single-source attack, originating at only one
host, or a multi-source, where multiple hosts coordinate to ﬂood the
victim with a barrage of attack packets. The latter is called a dis-
tributed denial of service (DDoS) attack. Sophisticated attack tools
that automate the procedure of compromising hosts and launching
attacks are readily available on the Internet, and detailed instruc-
tions allow even an amateur to use them effectively.
Denial of service attacks cause signiﬁcant ﬁnancial damage ev-
ery year, making it essential to devise techniques to detect and re-
spond to attacks quickly. Development of effective response tech-
niques requires intimate knowledge of attack dynamics, yet little
information about attacks in the wild is published in the research
community. Moore et al provide insight into the prevalence of
DoS activity on the Internet [24], but their analysis is based on
back-scatter packets and lacks the level of detail required to study
attack dynamics or generate high-ﬁdelity models needed for DoS
research. Monitoring tools today can detect an attack and identify
basic properties such as trafﬁc rates and packet types. However,
because attackers can forge most packet information, characteriz-
ing attacks as single- or multi-source and identifying the number of
attackers is difﬁcult.
In this paper, we develop a framework to classify attacks based
on header analysis, ramp-up behavior and spectral analysis. First,
we analyze the header content to get a rapid characterization of
the attackers. Since headers can be forged by the attacker, we de-
velop two new techniques to analyze packet stream dynamics us-
ing the ramp-up behavior and the spectral characteristics of the at-
tack trafﬁc. The absence of an initial ramp-up suggests a single
attacker, whereas a slow ramp-up (several hundred milliseconds or
more) suggests a multi-source attack. Since ramp-up is also easily
spoofed, we identify spectral characteristics that distinguish single-
from multi-source attacks and show that attackers cannot easily
spoof spectral content without reducing attack effectiveness. We
describe the algorithms used in our framework in Section 4 and
discuss robustness to counter-measures in Section 7.
The contribution of this paper is an automated methodology for
characterizing DoS attacks that adds new techniques of ramp-up
and spectral analysis, building on the existing approach of header
analysis. In addition to providing a better understanding of DoS
attack dynamics, our work has several direct applications. This
identiﬁcation framework can be used as part of an automated DoS
detection and response system.
It can provide the classiﬁcation
component of a real-time attack analysis system to aid network ad-
ministrators in selecting an appropriate response depending on the
type of ongoing DoS attack. For example, if an attack consists of
only a single source using traceback to identify the culprit is trivial,
but as the number of attackers increase traceback becomes rapidly
intractable. Thus one application of our framework is to judiciously
decide if activation of traceback is appropriate during a particular
attack. This analysis can also be used to create and validate mod-
els of DoS and DDoS attacks for simulation and experimentation.
Finally, long-term automated measurements of DoS attacks can be
used to estimate the level of DoS attack activity in the Internet. We
describe these applications in Section 8.
We evaluated our framework on trafﬁc collected from two peer-
ing links at Los Nettos, a regional ISP in Los Angeles. Over a pe-
riod of ﬁve months we observed and analyzed 80 attacks. We could
classify 67 attacks as single- or multi-source with header analy-
sis; the remaining 13 attacks were classiﬁed based on ramp-up and
spectral behavior. We validate our algorithm and conclusions in
three ways. First, we monitor a second site at University of South-
ern California and compare the observed attack dynamics. Second,
to understand the spectral characteristics of attacks we conduct a
series of experiments with synthetically generated attack trafﬁc sent
over a wide-area network and with real attack trafﬁc generated us-
ing attack tools on an isolated testbed. Finally, we use simple nu-
merical simulations to improve and conﬁrm our understanding of
the underlying causes for differences in spectral behavior. Our val-
idation methodology is detailed in Section 6.
2. RELATED WORK
Denial of service attacks attempt to exhaust or disable access to
resources at the victim. These resources are either network band-
width, computing power, or operating system data structures. Re-
search on denial of service attacks is primarily focused on attack
detection and response mechanisms. Attack detection identiﬁes
an ongoing attack using either anomaly-detection [13, 25, 38] or
signature-scan techniques [28, 30]. Most response mechanisms at-
tempt to alleviate the damage caused by the attack by taking reac-
tive measures like reducing the intensity of the attack by blocking
attack packets [17, 21, 25], or localizing the source of the attack us-
ing traceback techniques [3, 8, 31, 32, 33, 35]. Besides the reactive
techniques discussed above, some systems take proactive measures
to discourage DoS activity. For example, distributed packet ﬁlter-
ing [26] blocks spoofed packets using local routing information and
SOS [19] uses overlay techniques with selective re-routing to pre-
vent large ﬂooding attacks . In this paper, we use a simple anomaly-
detection technique to identify attacks and focus on a classiﬁcation
mechanism to understand attack dynamics.
Beside attack detection and response mechanisms, it is important
to understand DoS attack prevalence and attack dynamics on the
Internet. Moore et al used backscatter analysis and detected 12,805
attacks during a period of 3 weeks [24]. The backscatter technique
allows detection of attacks that uniformly spoof source addresses
in the complete IP address space. Many attack tools use reﬂection
techniques, subnet spooﬁng, or do not spoof source addresses [14,
29]. The backscatter technique will not detect these attacks. In this
paper, we develop an alternate approach where we extrapolate the
attack activity observed at Los Nettos to the Internet (Section 8.3).
Signal processing technique have been used previously to ana-
lyze malicious network trafﬁc and to detect ongoing attacks. Cheng
et al use spectral analysis to detect high volume DoS attack due to
change in periodicities in the aggregate trafﬁc [9] while Barford et
al use ﬂow-level information to identify frequency characteristics
of DoS attacks and other anomalous network trafﬁc [2]. Further,
wavelets and other signal processing techniques have been exten-
sively used to analyze both wired and wireless network trafﬁc [7,
27, 39]. In this paper we analyze the spectral behavior of the attack
stream to provide information regarding the presence of multiple
attackers.
3. ATTACK TAXONOMY
To launch a DDoS attack, a malicious user ﬁrst compromises In-
ternet hosts by exploiting security holes, many of which are openly
disclosed by software vendors. Subsequently, the malicious user
installs attack tools on the compromised host (also known as a zom-
bie), making it available to attack any victim on command. With
full control on the zombie the attacker can construct any packet in-
cluding illegal packets, such as packets with incorrect checksums,
incorrect header ﬁeld values, or an invalid combination of ﬂags.
The different types of denial of service attacks can be broadly
classiﬁed into software exploits and ﬂooding attacks. In software
exploits the attacker sends a few packets to exercise speciﬁc soft-
ware bugs within the target’s OS or application, disabling the vic-
tim. In ﬂooding attacks, one or more attackers sending incessant
streams of packets aimed at overwhelming link bandwidth or com-
puting resources at the victim. Although software-exploit attacks
are important, this paper focuses on ﬂooding attacks, since they
cannot be addressed by software ﬁxes.
Based on the location of the observation point we classify ﬂood-
ing attacks as single-source when a single zombie is observed ﬂood-
ing the victim and as direct multi-source when multiple zombies
are observed, as shown in Figure 1(b). It is difﬁcult to distinguish
between single- and multi-source attacks by observing only source
addresses since most attacks spoof the source address. In both cases
there may be additional zombies present that are not discernible
from our observation point. Therefore an attack classiﬁed as single-
source may potentially contain multiple zombies when observed at
the victim. Zombies are usually insecure machines that have been
compromised by a malicious user. Multiple attackers may be sum-
moned for an attack to increase ﬁrepower, or to evade detection.
Reﬂector attacks (Figure 1(c)) are a special case of multi-source
attacks. Such attacks are used to hide the identity of the attacker,
or to amplify an attack [29]. A reﬂector is any host that responds
to requests, for example a web server that responds to TCP SYN
requests with a SYN-ACK reply, or any host that respond to ICMP
echo requests with ICMP echo replies. Any host can be used as a
reﬂector by spooﬁng the the victim’s IP address in the source ﬁeld
of the request, tricking the reﬂector into directing its response to the
victim. Reﬂectors can also be used as ampliﬁers by sending pack-
ets to the broadcast address on the reﬂector network, soliciting a re-
sponse from every host on the LAN. Unlike zombies that represent
improperly secured hosts, reﬂectors are typically legitimate hosts
providing Internet services, making reﬂector attacks more difﬁcult
to eradicate.
4. ATTACK CLASSIFICATION
Our framework classiﬁes attacks using header contents, transient
ramp-up behavior, and spectral characteristics. This three-pronged
approach is necessary to deal with an increasing level of difﬁculty
in classifying attacks depending on the level of IP header spooﬁng
present in an attack.
4.1 Header Contents
Most attacks spoof the source address concealing the number of
attackers. However, other header ﬁelds, such as the fragment iden-
tiﬁcation ﬁeld (ID) and time-to-live ﬁeld (TTL), can be indirectly
interpreted to provide hints regarding the number of attackers. Such
2
Zombie
Zombie
Zombie
Zombie
Zombie
Zombie
Observation
 Point
Zombie
Observation
 Point
Zombie
Victim
Victim
(a) Single-source
(b) Multi-source
Reflector
Reflector
Reflector
Observation
 Point
Reflector
Reflector
Victim
(c) Reﬂector
Figure 1: Flooding attacks are classiﬁed as (a) single-source, (b) multi-source, or (c) reﬂected based on the number of attackers and
their location, with respect to the observation point and victim.
Let P ={attack packets}, Pi ⊂ P, P =
If ∀ p ∈ P
send the ID value in network byte order, we infer byte-order from
the ﬁrst 10 packets observed.
(cid:1)n
i=2Pi
ID value increases monotonically and
TTL value remains constant
then Single-source
elseif ∀ p ∈ Pi
ID value increases monotonically and
TTL value remains constant
then Multi-source with n attackers
else Unclassiﬁed
Figure 2: Pseudo code to identify number of attackers based on
header content.
techniques have been used before to identify multiple interfaces
on routers [34] and count number of hosts behind a NAT box [4].
These techniques work because many operating systems sequen-
tially increment the ID ﬁeld for each successive packet. As a result,
all packets generated by the same host will contain monotonically
increasing ID values. In addition, assuming the routes remain rela-
tively stable during the attack, the TTL value will remain constant
for the same source-destination pair. Thus for attacks where the
ID and TTL ﬁelds are not forged we use the algorithm outlined in
Figure 2 to estimate the number of attackers and classify attacks as
single- or multi-source.
We estimate the number of attackers by counting the number of
distinct ID sequences present in the attack. Packets are classiﬁed as
belonging to the same sequence if their ID values are separated by
less than idgap (we use an idgap of 16) and the TTL value remains
constant for all packets. We allow for some separation in idgap
to tolerate moderate packet reordering. In high volume attacks the
ID value typically wraps around within a second. Therefore using
a small idgap also limits collisions during sequence identiﬁcation.
If a packet does not belong to an existing sequence, it forms the
beginning of a new sequence. In most cases, attack packets arrive
close to each other and have a idgap of one. An attack sequence
must consist of at least 100 packets to identify a distinct attacker.
Some attacks have short silence periods during the attack. After a
silence period, packets may form a new attack sequence that should
be considered as a continuation of an old sequence, but would not
be identiﬁed as such due to the strict idgap. To bridge these silence
periods we coalesce such streams into one stream if they are within
500ms of each other. Finally, since many operating systems do not
Many attack tools spoof the source IP address but allow the op-
erating system to ﬁll in default values for other ﬁelds [10]. These
tools are susceptible to ID analysis. We are not aware of any attack
tools that attempt to coordinate the ID ﬁeld over a distributed set of
attackers. In fact, differences in RTT and available bandwidth make
it inherently difﬁcult to coordinate packet streams from multiple
hosts such that their ID ﬁelds consistently arrive in order without
reducing the rate (and hence effectiveness) of the attack.
Some attack tools forge all header contents, including both the
ID and the TTL ﬁeld. For such attacks it is impossible to distin-
guish between a single or multiple sources based on header infor-
mation alone, making it essential to use additional techniques.
4.2 Ramp-up Behavior
In a multi-source attack, a master typically activates a large num-
ber of zombies by sending a trigger message that either activates
the zombies immediately or at some later time. When observed
near the victim, this distributed activation of zombies results in a
ramp-up of the attack intensity due to the variation in path latency
between the master and the zombies and weak synchronization of
local clocks at the zombies. In contrast, single-source attacks do
not exhibit a ramp-up behavior and typically begin their attack at
full strength. Thus, the presence of a ramp-up provides a hint as to
whether the attack is single- or multi-source. This method cannot
robustly identify single-source attacks since an intelligent attacker
could create an artiﬁcial ramp-up from a single site. To our knowl-
edge, current attack tools do not attempt to do so.
4.3 Spectral Analysis
A more robust method for classifying attacks as single- or multi-
source is to consider their spectral characteristics. We observed
attack streams have markedly different spectral content that varies
depending on the number of attackers. In this section, we present
our methodology for analyzing the spectral characteristics of an
attack stream; in Section 5.5 we present several examples with in-
tuition why it works.
Spectral analysis requires treating the packet trace as a time se-
ries. We divide the attack stream into 30 second segments, deﬁn-
ing x(t), 0 ≤ t  0 we com-
pare the attack stream with a version of itself shifted by lag k. The
autocorrelation sequence r(k) at lag k is
c(k) = 1/N
N−k(cid:2)
t=0
(x(t) − ¯x)(x(t + k) − ¯x);
(1)
r(k) = c(k)/c(0)
(2)
where ¯x is the mean of x(t) and N is the length of the attack
stream x(t). The power spectrum S(f ) of attack obtained by the
discrete-time Fourier transform of the autocorrelation sequence of
length M:
S(f ) =
M(cid:2)
k=0
r(k)e−ı2πf k
(3)
The highest frequency observable by this procedure is 500Hz,
since we consider 1ms intervals and the Fourier transform is sym-
metric. Intuitively, the spectrum S(f ) captures the power or strength
of the attack stream contains at a particular frequency.
Once we generate the spectrum, we need a technique to compare
the spectral characteristics of different attacks. Therefore, for each
attack we deﬁne the cumulative spectrum P (f ) as the amount of
power in the range 0 to f. We normalize P (f ) by the total power
to get the normalized cumulative spectrum (NCS), C(f ) [6]. Fi-
nally, we deﬁne quantile F (p) as the frequency at which the NCS
captures p percent of the power. Formally:
P (f ) =
f−1(cid:2)
i=0
(S(i) + S(i + 1))
;
2
P (f )
C(f ) =
F (p) = min
0≤f≤fmax
;
P (fmax)
f such that C(f ) ≥ p
(4)
(5)
(6)
We use F (p) as a numerical method of comparing power spectral
graphs. The key insight is that multi-source attacks shift spectrum
to lower frequencies. To quantify this, we pick a quantile of 60%
of the power and compare the F (60%) values of attacks. Our ob-
servations indicate single-source attacks have a linear cumulative
spectrum due to dominant frequencies spread across the spectrum.
This causes F (60%) to be in the range of 240–296Hz. In contrast,
multi-source attacks have localization of power in lower frequen-
cies resulting a F (60%) in the range of 142–210Hz. Although we
use a 60% quantile, our choice is somewhat arbitrary. The impor-
4