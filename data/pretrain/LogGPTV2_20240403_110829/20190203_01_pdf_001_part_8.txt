manually, for example by using an SQL command line utility. Doing so may
cause the xDB Replication Console and xDB Replication Server CLI to
become inoperable.
2.4.3 Restrictions on Replicated Database Objects
When a subscription is created in a single-master replication system, the table definitions
and most database objects and attributes associated with the publication tables are created
in the subscription database by the subscription server.
If you so choose, the same process can automatically occur when a master node is added
to a multi-master replication system. The table definitions and most database objects and
attributes associated with the publication tables can be created in the newly added master
node by the publication server.
The following is a list of database objects and table attributes that are replicated from the
publication in either a single-master or multi-master replication system.
 Tables
 Views (for snapshot-only publications) created as tables in the subscription
database
 Primary keys
 Not null constraints
 Unique constraints
 Check constraints
 Indexes
Note: Foreign key constraints are not replicated by the publication or subscription server
in a single-master replication system. However, in a multi-master replication system,
foreign key constraints are replicated from the master definition node to other master
nodes.
Note: Sequences (database objects created by the CREATE SEQUENCE statement) are not
replicated from the publication database to the subscription databases in a single-master
replication system. Sequences are also not replicated from the master definition node to
other master nodes in a multi-master replication system.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 76
EDB Postgres Replication Server User’s Guide
xDB Replication Server does have some restrictions on the types of tables it can
replicate.
2.4.3.1 Restrictions on Oracle Database Objects
Certain types of Oracle partitioned tables can be replicated. See Section 10.4.1.4 for
details.
Oracle global temporary tables cannot be replicated.
Oracle tables that include the following data types cannot be replicated:
 BFILE
 BINARY_DOUBLE
 BINARY_FLOAT
 MLSLABEL
 XMLTYPE
Oracle tables with the following data types can be used in snapshot-only publications, but
cannot be used in synchronization replications:
 BLOB
 CLOB
 LONG
 LONG RAW
 NCLOB
 RAW
2.4.3.2 Restrictions on SQL Server Database Objects
SQL Server tables that include the following data types cannot be replicated:
 GEOGRAPHY
 GEOMETRY
 SQL_VARIANT
Note: See Section 10.4.6 for a method to replicate tables containing the SQL_VARIANT
data type under certain conditions.
SQL Server tables with the following data types can be used in snapshot-only
publications, but cannot be used in synchronization replications:
 BINARY
 IMAGE
 NTEXT
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 77
EDB Postgres Replication Server User’s Guide
 NVARCHAR(max)
 TEXT
 TIMESTAMP
 VARBINARY
 VARBINARY(max)
2.4.3.3 Restrictions on Postgres Database Objects
For replicating Postgres partitioned tables see Section 7.10 for details.
Postgres tables with the following data types in a column that is part of the primary key
cannot be replicated:
 BLOB
 BYTEA
 RAW
Postgres tables that include OID based large objects cannot be replicated. For information
on OID based large objects see pg_largeobject in the PostgreSQL Core
Documentation located at:
https://www.postgresql.org/docs/current/static/catalog-pg-largeobject.html
Postgres tables that include any geometric data types such as POINT, POLYGON, etc.,
cannot be replicated to an Oracle subscription database.
Postgres tables that include the following data types cannot be replicated to a SQL Server
subscription database:
 ABSTIME
 ACLITEM
 CHKPASS
 CIRCLE
 CUBE
 JSON
 ROWID
 SEG
 Any ARRAY data type (that is, defined as data_type[])
 Any user-defined data type (that is, defined as CREATE TYPE type_name)
Restrictions on Range Data Types
Postgres data types called range types were first supported in PostgreSQL version 9.2 and
Advanced Server version 9.2. Built-in range types refer to the following built-in data
types: int4range, int8range, numrange, tsrange, tstzrange, and daterange.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 78
EDB Postgres Replication Server User’s Guide
Postgres tables containing the built-in range types can be included in the publication of a
single-master or multi-master replication system.
However, this results in the following restrictions on the subscription databases of a
single-master replication system or the additional master nodes of a multi-master
replication system:
 If a publication table of a single-master replication system contains any built-in
range types, then a database can be added as a subscription database only if the
database server of the intended subscription database is Postgres version 9.2 or
later.
 If a publication table of the master definition node in a multi-master replication
system contains any built-in range types, then a database can be added as an
additional master node only if the database server of this intended master node is
Postgres version 9.2 or later.
Custom range types constructed with the CREATE TYPE AS RANGE command are not
supported in xDB Replication Server.
2.4.4 Performance Considerations
This section discusses provides some general guidelines on performance considerations.
2.4.4.1 When to Use Snapshot or Synchronization
Generally, synchronization would be the quickest replication method since it only applies
changes to the target tables since the last replication occurred.
However, if a large percentage of rows are changed between each replication, there may
be a point where it would be faster to completely reload the target tables using a snapshot
than to execute individual SQL statements on a large percentage of rows as would be
done for synchronization replication. Experimentation may be necessary to determine if,
and at what point a snapshot would be faster.
Snapshot replication may be an option for tables with the following characteristics:
 Tables are relatively small in size
 A large percentage of rows are changed between replications
Synchronization replication is the better option for tables with the following
characteristics:
 Tables are large in size
 A small percentage of rows are changed between replications
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 79
EDB Postgres Replication Server User’s Guide
In a single-master replication system, if you find that one group of tables consistently
replicates faster using snapshot replication, then these tables can be made part of a
snapshot-only publication while the remaining tables can be members of a publication
that uses synchronization replication.
2.4.4.2 When to Use On Demand Replication
The xDB Replication Console and xDB Replication Server CLI both give you the
capability to immediately start a replication. This is called an on demand replication.
On demand replication can be performed at any time regardless of whether or not there is
an existing schedule. An on demand replication does not change the date and time when
the next replication is scheduled to occur according to an existing schedule.
If a publication is a snapshot-only publication, then the only type of on demand
replication that can be performed on this publication is a snapshot.
If a publication is not a snapshot-only publication, you can perform an on demand
replication using either the snapshot method or the synchronization method.
When you are in the development and testing phases of your replication system, you
would typically use on demand replication so that you can immediately force the
replication to occur and analyze the results.
When your replication system is ready for production, a schedule would typically be used
so that replications can occur unattended at regular time intervals. See Section 7.2 for
directions on creating a schedule.
There may be other situations where you would want to force a replication to take place
ahead of its normal schedule. Reasons for performing an on demand replication may
include the following:
 The number of changes to the source tables is growing at a faster rate than usual,
and you do not want to wait for the regularly scheduled synchronization time to
replicate all of the accumulated changes.
 You have set up your replication system to perform synchronizations, but on this
occasion there have been an unusually large number of changes made to the
source tables, and you would rather perform a snapshot of all source tables rather
than execute a large number of SQL statements against the target tables.
 Changes have been made directly to the rows of the target tables so that they no
longer have the same content as their source table counterparts. You can perform
an on demand snapshot replication to reload all rows of the target tables from
your current set of source tables.
Note: In a multi-master replication system, on demand snapshots can only be made from
the master definition node to another master node.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 80
EDB Postgres Replication Server User’s Guide
See Section 5.4 for directions on performing an on demand replication for a single-master
replication system. See Section 6.5 for a multi-master replication system.
2.4.5 Distributed Replication
xDB Replication Server provides the flexibility of allowing you to run the replication
system’s components on separate machines on a network.
In fact xDB Replication Server is designed so that it is possible to set up replication
systems where each of the components (publication server, subscription server,
publication database, subscription database, and master nodes) may all run on the same
host, each component may run on its own separate host, or any combination of
components may run on any number of hosts.
However, for practical purposes, there are two basic scenarios. The simplest case is
where all components are on the same host. The other case is where you have the Oracle
or SQL Server database server running on a host separate from the rest of the replication
system components.
This section discusses the advantages and disadvantages of each scenario.
2.4.5.1 Single Host
The simplest implementation of a replication system is when all replication components
run on a single host. This means that the PostgreSQL or Advanced Server installation, the
complete xDB Replication Server installation (publication server and subscription
server), and the Oracle or SQL Server database server reside on the same machine.
The Postgres publication or subscription database as the case may be, can reside in the
initial database cluster that is created when Postgres is installed on the host.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 81
EDB Postgres Replication Server User’s Guide
Figure 2-21 - Single host replication system
The advantages of a single host replication system are the following:
 There is a performance advantage since there is no network over which to push
replication data, especially if large snapshots are involved.
 Configuration is much simpler. When creating the replication system logical
components, the IP addresses of all components are the same.
The disadvantages of a single host replication system are the following:
 The replication system and the database servers all consume the resources of one
machine, which can adversely affect database application performance.
 The publication and subscription databases may be in different geographic
locations, thereby requiring multiple networked hosts.
 Your site may require the use of a dedicated host for the Oracle or SQL Server
database server so xDB Replication Server could not reside on the same machine.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 82
EDB Postgres Replication Server User’s Guide
2.4.5.2 Single-Master Replication Distributed Hosts
xDB Replication Server allows you to build a replication system with either or both of
the publication database and the subscription database on separate hosts. This is
illustrated in the following diagram:
Figure 2-22 - Oracle database server on distributed host
The same remote distribution can be used for the subscription database instead of, or in
addition to the publication database.
The advantages of a distributed host replication system are the following:
 The replication system and the database servers can each consume the resources
of their own machines, which can be individually selected and tuned.
 The publication and subscription databases can be in different geographic
locations.
 You can enforce stronger database security if only the database server is allowed
to run on a host.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 83
EDB Postgres Replication Server User’s Guide
The disadvantages of a distributed host replication system are the following:
 There may be a performance disadvantage since there is a network over which to
push replication data, especially if large snapshots are involved.
 Installation is more complex if the Postgres database must run on a different host
than xDB Replication Server. This involves installing Postgres on two separate
hosts.
 Configuration is more complex. The network and firewalls must be properly
configured to allow the distributed components to communicate. When creating
the replication system logical components, the correct IP addresses of all
components must be used. In addition, the correct IP addresses must be kept up-
to-date in the replication system control schema should they change in the
networked environment.
2.4.5.3 Multi-Master Replication Distributed Hosts
In a multi-master replication system, the Postgres database servers running the master
nodes can be running on a single or multiple hosts. The following example illustrates two
master nodes running on database servers on separate hosts as well as a master node
running on the same database server as the publication server.
Figure 2-23 - Multi-master replication on distributed hosts
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 84
EDB Postgres Replication Server User’s Guide
3 Installation and Uninstallation
This chapter describes how to install and uninstall xDB Replication Server.
Installation of xDB Replication Server can be accomplished a number of different ways:
 Using a graphical user interface
 Running the xDB Replication Server installer program from the command line
console in text or unattended mode
 Installing the xDB RPM package using the Yum package manager
The most common installation of xDB Replication Server is done with the graphical user
interface invoked by Stack Builder or StackBuilder Plus depending upon whether you are
using PostgreSQL or Advanced Server.
 For PostgreSQL. Install xDB Replication Server using Stack Builder after you
have installed PostgreSQL.
 For Advanced Server. Install xDB Replication Server using StackBuilder Plus
after you have installed Advanced Server.
For circumstances in which you do not wish to use the graphical user interface, the xDB
Replication Server installer program can be downloaded from the EnterpriseDB website,
and then invoked in text or unattended mode as well as the graphical user interface mode.
See Section 3.2 for instructions on installing xDB Replication Server from the command
line.
The xDB Replication Server product is also available as an RPM package in which case
the Yum package manager is used for installation. See Section 3.3 for instructions on
installing xDB Replication Server from the RPM package.
Section 3.1 describes the installation of xDB Replication Server through the graphical
user interface of Stack Builder or StackBuilder Plus.
Note: If you have an older version of xDB Replication Server and existing replication
systems, review Section 10.2 before installing xDB Replication Server.
If you later decide you wish to remove xDB Replication Server from your system see
Section 3.6 for directions on uninstalling xDB Replication Server if you initially installed
it with the graphical user interface or by invoking the installer program from the
command line. See Section 3.7 for directions on uninstalling xDB Replication Server that
was installed from the RPM package.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 85
EDB Postgres Replication Server User’s Guide
3.1 Installing With Stack Builder or StackBuilder Plus
Stack Builder and StackBuilder Plus are programs used to download and install add-on
products and updates to PostgreSQL and Advanced Server. Stack Builder is used for
PostgreSQL. StackBuilder Plus is used for Advanced Server.
Stack Builder and StackBuilder Plus are very similar in functionality and look-and-feel,
differing primarily in the list of products offered.
This section demonstrates the installation of xDB Replication Server using StackBuilder
Plus for Advanced Server. Steps are noted where the installation process differs for
installation on PostgreSQL using Stack Builder.
Step 1: You must have Java Runtime Environment (JRE) version 1.7 or later installed on
the hosts where you intend to install any xDB Replication Server component (xDB
Replication Console, publication server, or subscription server). Any Java product such
as Oracle Java or OpenJDK may be used.
Follow the directions for your host operating system to install Java runtime.
For Windows only: Be sure the system environment variable, JAVA_HOME, is set to the
JRE installation directory of the JRE version and bitness (32-bit or 64-bit) you wish to
use with the xDB Replication Server. The xDB Replication Server installer for a
Windows platform contains both the 32-bit and 64-bit versions. The JAVA_HOME setting
determines whether the 32-bit or the 64-bit version of xDB Replication Server is
installed. (If JAVA_HOME is not set, then the first JRE version encountered in the Path
system environment variable determines the xDB Replication Server version to be
installed.)
Note: For Advanced Server versions prior to 9.3, a Java runtime is supplied and installed
as part of the Advanced Server installation process, however, you must still have pre-
installed a separate Java runtime system on your host. The xDB Replication Server
installation process does not utilize the Java runtime supplied with Advanced Server.
Note: After installation of xDB Replication Server has completed, the path to your Java
runtime program is stored in the xDB Startup Configuration file used by xDB Replication
Server. Verify that the path to your Java runtime program set in the xDB Startup
Configuration file is correct. See Section 3.5 for the location of this file.
Step 2: From the host’s application menu, open the Postgres menu and choose Stack
Builder or StackBuilder Plus.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 86
EDB Postgres Replication Server User’s Guide
Figure 3-1 - Postgres application menu