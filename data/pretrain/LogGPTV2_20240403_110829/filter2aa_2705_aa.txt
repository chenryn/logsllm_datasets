ANTHONY ROSE
JACOB KRASNOV
VINCENT ROSE
1
@bcsecurity1
2
Legal Stuff…So we don’t go to jail
Training is for informational and research 
purposes only. We believe that ethical hacking, 
information security and cyber security should be 
familiar subjects to anyone using digital 
information and computers. We believe that it is 
impossible to defend yourself from hackers 
without knowing how hacking is done. The 
information provided by us is only for those who 
are interested to learn about Ethical Hacking, 
Security, Penetration Testing and malware 
analysis.
Introduction
ANTHONY ROSE
C01И
◦ Co-founder, BC Security
◦ Lead Researcher, Merculite Security
◦ MS in Electrical Engineering
◦ Lockpicking Hobbyist
◦ Bluetooth & Wireless Security 
Enthusiast
3
whoami
JACOB KRASNOV
HUBBLE
◦ Co-founder, BC Security
◦ BS in Astronautical Engineering, MBA
◦ Red Team Lead
◦ Currently focused on embedded 
system security
VINCENT ROSE
HALCYON
◦ Security Researcher, BC Security
◦ BS in Computer Science
◦ Software Engineer
Introduction
◦ How to mask your malware to avoid AMSI and Sandboxes
4
Why are we here?
Introduction
◦ Antimalware Scan Interface (AMSI)
◦ Malware Triggering
◦ Empire
◦ Obfuscation Techniques
◦ Invoke-Obfuscation
◦ AMSI Bypasses
◦ Sandbox Evasion
◦ Put it all together
5
Overview
Introduction
◦ Introduce Microsoft’s Antimalware Scan 
Interface (AMSI) and explain its importance
◦ Learn to analyze malware scripts before and 
after execution
◦ Understand how obfuscate code to avoid AMSI 
and Windows Defender
◦ Detect and avoid sandbox environments
6
Goals
Introduction
We will teach you to…
◦ operate Empire
◦ obfuscate Powershell
◦ avoid AMSI and Sandboxes
We are not going to teach you…
◦ how to be a “leet hacker”
7
Expectations
Introduction
-h What is Malware?
8
◦ Obfuscation is the main means by which Malware 
achieves survival
◦ Defeat signature-based Antivirus
◦ Makes analysis more difficult 
9
Overview of the Evolution of Malware Obfuscation
What is Malware
I’m Obfuscated
You can’t find me…
The first virus to obfuscate itself was the Brain Virus in 1986
◦ Would display unchanged data from a different disk sector instead of the one it 
had modified
The first virus to use encryption was the 
Cascade Virus and also appeared in 1986
◦ Used simple XOR encryption
First commercial AV products came out in 1987
◦ This included heuristic based AV products!
10
The Early Days 
What is Malware
The Malware Arms Race continued 
and by 1992 polymorphic virus 
engines had been released
◦ Could be attached to non-
polymorphic viruses to make them 
more effective
11
Coming into Its Own
What is Malware
AV wasn’t far behind and soon started 
to include emulation code to sandbox 
the malware
◦ There were evasion techniques but 
we will talk about this later
By the 2000s malware had moved on 
to so called metamorphic viruses
◦ Polymorphic viruses only change 
their decryptor while metamorphic 
change the code body as well
12
Coming into Its Own
What is Malware
Not really completely Fileless
◦ Usually requires some kind of initial script/executable to kick off infection
◦ Persistence methods may leave traces in places like the registry (e.g., 
Poweliks)
This created a big problem for AV as it has traditionally relied on 
scanning  files/executables 
All of this leads into…
13
Going Fileless
What is Malware
Antimalware Scan 
Interface (AMSI)
14
The Windows Antimalware Scan 
Interface (AMSI) is a versatile interface 
standard that allows your applications 
and services to integrate with any 
antimalware product that's present on 
a machine. AMSI provides enhanced 
malware protection for your end-users 
and their data, applications, and 
workloads.
15
What Is AMSI?
AMSI
◦ Evaluates commands at run time
◦ Handles multiple scripting languages (Powershell, JavaScript, VBA)
◦ Provides an API that is AV agnostic 
◦ Identify fileless threats 
16
That’s Great But What Does that Mean?
AMSI
17
Data Flow 
AMSI
The code is evaluated when it is readable by the scripting engine 
This means that:
becomes:
However:
Does not become:
This is what allows us to still be able to obfuscate our code 
18
One point of clarification (Powershell)
AMSI
Malware Triggering
19
◦ Windows Defender
◦ Antimalware Scan Interface (AMSI)
◦ Control flow guard
◦ Data Execution Prevention (DEP)
◦ Randomized memory allocations
◦ Arbitrary code guard (ACG)
◦ Block child processes
◦ Simulated execution (SimExec)
◦ Valid stack integrity (StackPivot)
20
Types of Windows Mitigations
Malware Triggering
22
Flagged Malware
Malware Triggering
Get-WinEvent 'Microsoft-Windows-Windows Defender/Operational' -
MaxEvents 10 | Where-Object Id -eq 1116 | Format-List
23
Windows Defender Logs
Malware Triggering
Detection Source: AMSI
Detection Source: Real-time Protection
1. Run Powershell ISE
2. Look in the sample folder
3. Try out samples 1-3
24
Try Some Code Samples
Malware Triggering
Building/Customizing 
Your Malware
25
Prioritize what you want to complete
1. Get working base code first
◦ Empire, Metasploit, Etc
2. Customize Functions
3. Obfuscate Code
4. Test Against AV
26
Don’t Do Too Much at Once
Building/Customizing Malware
New-ItemProperty -Path 
"HKLM:\Software\policies\microsoft\windows defender" -name 
disableantispyware -value 1 –Force
Restart computer/VM
27
Disabling Windows Defender
Building/Customizing Malware
Run network as “host only” if connected to the internet
Don’t burn your tools in development
Empire Tutorial
28
Post-exploitation framework built around Powershell
◦ Merger of Powershell Empire and Python EmPyre projects
◦ Runs on Python 2.6/2.7
◦ Encrypted C2 channel
◦ Adaptable modules
◦ .bat, .vbs, .dll
◦ Released at BSidesLV 2015
◦ No longer maintained as of Aug 2019
29
What is Empire?
Empire
30
Why Go After Powershell?
◦ Full .NET access
◦ Direct access to Win32 API
◦ Operates in memory
◦ Installed by default in Windows
◦ Admins typically leave it enabled
Empire
Relatively small payload (stager) that calls back to a listener
31
How Empire is Deployed?
Empire
https://github.com/BC-
SECURITY/Empire
Install our forked version (Do not use 
version 2.5)
◦ sudo ./setup/install.sh
◦ sudo ./setup/reset.sh
32
Empire Tutorial
Empire
Splash page
◦Version running 
(We are using a modified dev 
version)
◦How many modules loaded
◦Active Listeners
◦Active Agents
33
Empire Tutorial
Empire
“Help” lists out all available commands
◦ Agents – Active payloads available
◦ Interact – Control a payload/host
◦ Preobfuscate – Obfuscates Powershell 
module (not needed)
◦ Set – Modify payload settings
◦ Usemodule – Select Empire Module
◦ Uselistener – Select Listener
◦ Usestager – Select Empire stager (we will 
be using macros)
34
Empire Tutorial
Empire
Setting up your listener
Select “uselistener http”
35
Empire Tutorial
Empire
Use edit to modify Listener info
◦“set Name LISTENERNAME”
◦“set Host YOURIPADDRESS”
◦“set Port PORTNUMBER”
◦“set Launcher powershell -nop
-sta –enc”
◦“execute”
36
Empire Tutorial
Empire
37
Empire Tutorial
Usestager
◦Tailor the stager to what the target is
◦“Multi/Launcher”
◦ Useful for testing VM setups
Empire
Setting the stager and listener
Successful callback to Empire
38
Testing the Launcher
Empire
New-ItemProperty -Path 
"HKLM:\Software\policies\microsoft\windows defender" -name 
disableantispyware -value  0 –Force
Restart computer/VM
39
Enabling Windows Defender
Empire
Setting the stager and listener
Outputs…
40
Testing the Launcher
Empire
Build the stager
◦ Select “usestager multi/launcher”
◦ “info” to view settings
41
Test your Empire Payload
Empire
Final check on settings
◦ Obfuscation is False
◦ AMSIBypass is True
◦ Good to Go!
◦ “execute”
42
Test your Empire Payload
Empire
Final check on settings
◦ Obfuscation is False
◦ AMSIBypass is True
◦ Good to Go!
◦ “execute”
43
Test your Empire Payload
Empire
44
Test your Empire Payload
Empire
Default Empire will not get past AMSI
◦ Obfuscation or changes are needed
◦ Default Empire will get you caught
45
Empire Tutorial
Empire
Obfuscation Techniques
46
Powershell ignores capitalization
◦ Create a standard variable
◦ This makes
and
◦ The same as…
◦ AMSI ignores capitalization, but changing your hash is a best practice 
47
Randomized Capitalization
Obfuscation Techniques
AMSI is still heavily dependent upon signatures, simple 
concatenation can circumvent most alerts
will be flagged 
But,                                                     is not flagged
48
Concatenation
Obfuscation Techniques
Powershell recognizes $ as a special character in a string and will 
fetch the associated variable.
We embedded                                         into 
Which gives us
49
Variable Insertion
Obfuscation Techniques
Powershell allows for the use of {} inside a string to allow for 
variable insertion. This is an implicit reference to the format string 
function.
will be flagged
But,
Returns…
50
Format String
Obfuscation Techniques
Uses:
◦ Pseudorandom number generation
◦ Error detection
◦ Encryption/Decryption
◦ Reversable function
51
XOR || ⊕
A