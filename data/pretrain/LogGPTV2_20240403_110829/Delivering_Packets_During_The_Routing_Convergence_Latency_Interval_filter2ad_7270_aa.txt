title:Delivering Packets During The Routing Convergence Latency Interval
Through Highly Connected Detours
author:Elias Proc&apos;opio Duarte Jr. and
Rog&apos;erio Santini and
Jaime Cohen
Delivering Packets During The Routing Convergence Latency Interval
Through Highly Connected Detours
Elias Proc´opio Duarte Jr.
Rog´erio Santini
Federal University of Paran´a
Dept. of Informatics
P.O. Box 19018 CEP 81531-990
Curitiba PR Brazil
(cid:0)elias,santini(cid:1)@inf.ufpr.br
Jaime Cohen
State University of Ponta Grossa
Dept. of Informatics
R. C. Cavalcanti, 4748 CEP 84031-900
Ponta Grossa PR Brazil
PI:EMAIL
Abstract
Routing protocols present a convergence latency for all
routers to update their tables after a fault occurs and the net-
work topology changes. During this time interval, which in
the Internet has been shown to be of up to minutes, pack-
ets may be lost before reaching their destinations. In order
to allow nodes to continue communicating during the con-
vergence latency interval, we propose the use of alternative
routes called detours. In this work we introduce new cri-
teria for selecting detours based on network connectivity.
Detours are chosen without the knowledge of which node
or link is faulty. Highly connected components present a
larger number of distinct paths, thus increasing the proba-
bility that the detour will work correctly. Experimental re-
sults were obtained with simulation on random Internet-like
graphs generated with the Waxman method. Results show
that the fault coverage obtained through the usage of the
best detour is up to 90%. When the three best detours are
considered, the fault coverage is up to 98%.
Keywords: Routing, Fault-Tolerance, Graph Theory,
Connectivity, Cut Trees
1. Introduction
Computer network applications have become critical for
organizations and individuals. After the network topology
changes due, for instance, to a link or node crash, all IP
(Internet Protocol) routes that were being used by applica-
tion entities will not be able to deliver their packets, even if
there are alternative physical routes that could be employed.
Actually communication will not be reestablished until the
routing protocols at the network layer are able to reach con-
sistency over the new topology. It is well known that routing
in the Internet does present a number of problems and in-
stabilities [7]. Furthermore, the convergence latency of the
Internet external routing protocol, BGPv4 (Border Gateway
Protocol version 4) is known to be up to several minutes [8].
In [7] Labovitz et. al. evaluate the effect of changes of
routing policy and topology on BGP convergence. Mea-
surements were collected over a period of two years consid-
ering ﬁve large commercial AS’s (Autonomous Systems).
The average convergence latency measured is reported to
be 3 minutes, while some changes in the topology caused a
latency of up to 15 minutes. According to Labovitz, during
path restoration, the measured packet loss grew by a fac-
tor of 30 and the end-to-end latency grew by a factor of 4.
The evaluation shows that in the worst theoretical case the
number of paths considered by the protocol before it ﬁnally
converges is proportional to (cid:0), where  is the number of
routers.
In order to allow network applications to keep commu-
nicating during periods in which routing tables haven’t yet
been updated to reﬂect a change in the topology, we propose
an approach that employs alternative routes to be used dur-
ing the routing convergence latency interval. An alternative
route is employed to bypass the faulty route. An alternative
route is based on nodes called detours. A detour is an en-
tity that is capable of acting as a bridge between source and
destination.
After either the absence of a route to a given destination
or lost packets are detected, before giving up communicat-
ing, the source tries routing through detours. Related work
include MPLS (MultiProtocol Label Switching) rerouting
[9, 12], which supports rerouting mechanisms taking into
consideration QoS (Quality-Of-Service) requirements and
is available at Internet routers. The use of detours in the
context of ﬁnding routes in the application level with a case
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 04:18:47 UTC from IEEE Xplore.  Restrictions apply. 
study for SNMP (Simple Network Management Protocol)
messages was proposed in [1]. The performance evaluation
of routers in the Internet using tunneling of TCP (Trans-
mission Control Protocol) segments through detours is pre-
sented in [11].
This work introduces a strategy to select detours based
on network topology. The main criteria used for locating
detours are based on graph connectivity concepts. Those
nodes of the network that belong to “components” with high
edge-connectivity have precedence to be chosen as detours.
In this way, the probability that the route through the detour
is working properly, even if part of network is faulty, is in-
creased. To avoid the use of detours located too far from the
communicating nodes, a bound on the length of the newly
created route is imposed.
As an example, consider the network topology shown in
ﬁgure 1. Assuming that the regular IP route between nodes
S (source) and D (destination) is faulty, we claim that a bet-
ter choice for the alternative route is to use node A as a
detour. Node A is preferred to node B because it belongs to
a highly edge-connected component, thus there is a higher
chance that we can ﬁnd working routes from node S to node
A and from node A to node D, than the analogous routes
considering node B. Node A is preferred to node C because
the distance in hops of node A to the source and to the desti-
nation is shorter than the alternative route using C as detour.
S
C
B Fault
A
D
Figure 1. The route from source to destination
is not working, node A is the best detour.
We describe criteria for assessing the connectivity of ev-
ery network node (cid:0): the connectivity number (cid:0)(cid:1)(cid:0) and
subgraph   (cid:1)(cid:0) to which (cid:0) belongs. An exact algo-
rithm for computing these criteria is given, which is based
on the classic concept of cut trees. A fast heuristic to com-
pute (cid:0)(cid:1)(cid:0) is also given. Experimental results show that
the heuristic and exact algorithm produce close results.
We evaluate the fault coverage of the new approach by
computing the percentage of packets that are correctly de-
livered after a fault occurs in the network route being used.
Results were obtained with simulation on random Internet-
like graphs generated with the Waxman method. The fault
coverage is up to 90% when the best detour is employed.
When the three best detours are employed, the fault cover-
age is up to 98%.
The rest of this paper is organized as follows. Section
2 examines the latency of BGP (Border Gateway Protocol)
in the presence of faults, as well as the criteria for ﬁnding
detours and alternative routes. In section 3 the connectivity
criteria are introduced, as well as an exact algorithm and a
fast heuristic to compute the criteria, furthermore an algo-
rithm to rank network nodes as candidate detours is pre-
sented. Section 4 describes experimental results and the
fault coverage of the proposed strategy. Conclusions follow
in section 5.
2. Routing Convergence Latency
This section describes the routing convergence latency of
the Internet’s Border Gateway Protocol version 4 (BGPv4),
and then introduces our solution for delivering packets dur-
ing this interval by introducing the concept of alternative
routing through detours.
2.1. BGPv4’s Convergence Latency
Consider an arbitrary topology network consisting of a
set of routers connected by communication links, such that
every router runs a routing protocol. Let an event be de-
ﬁned as a change in the state of a router or communica-
tion link, i.e. a working router or link crashes or, alterna-
tively, a crashed router or link is repaired. Let the latency
of the convergence of a routing protocol be deﬁned as the
time interval in which all fault-free connected routers that
are running the protocol update their local routing tables to
reﬂect a given event. After an event, and during the con-
vergence latency, network routing may not work properly
because some routers have inconsistent information in their
tables regarding the actual network state.
According to BGPv4 speciﬁcation in RFC 1771 [10],
two parameters have impact on the convergence latency:
HoldTime and MinRouteAdvertisementInterval. The ﬁrst
parameter, HoldTime, is employed to detect whether a given
BGP connection is active. A so called BGP speaker con-
siders that a connection is no longer active if it does not
receive any UPDATE or KEEPALIVE messages during the
HoldTime interval. The suggested value for this parameter
is 90 seconds; thus, in the worst case a router may take up
to this time interval to detect an event on an adjacent link or
neighbor.
The second parameter, MinRouteAdvertisementInterval,
determines the minimum time interval between two adver-
tisements of a given route, sent by a router to one of its
neighbors. The suggested value for this parameter is 30 sec-
onds; thus even if immediately after an advertisement of a
given route there is an event on that route, it will take at least
the time speciﬁed in this parameter for the event informa-
tion to be disseminated to the router’s neighbors. Although
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 04:18:47 UTC from IEEE Xplore.  Restrictions apply. 
the recommendation in RFC 1771 is that the MinRouteAd-
vertisementInterval should be applied for each destination
(preﬁx), most vendors have implemented the parameter on
a per peer basis [8]. Thus one may expect that a router
takes at least a time interval equivalent to MinRouteAdver-
tisementInterval to send new event information to a neigh-
bor.
In [8] Labovitz et. al. present an evaluation of the im-
pact of routing policy and topology on BGP’s latency. In
this work, the authors show that the convergence latency
depends on the longest alternative path between two AS’s.
Each AS in such a path introduces an average delay equiv-
alent to half the MinRouteAdvertisementInterval.
In the
worst case, the delay is equal to the MinRouteAdvertise-
mentInterval. As the event detection interval is in the worst
case equal to the HoldTime interval, let (cid:0)(cid:0) stand for the
number of AS’s in the alternative path, the total BGP con-
vergence latency in seconds may be up to:
HoldTime + MinRouteAdvertisementInterval* (cid:0)(cid:0) (cid:0)
(cid:1)(cid:2)  (cid:4)(cid:2)  (cid:0)(cid:0) seconds
Furthermore BGP may also diverge according to [4];
Grifﬁn and Wilfong show that BGP may produce persistent
route oscillation, such that after a fault event routing tables
never reach a consistent state again.
2.2. Alternative Routing Through Detours
In order to allow applications running at network nodes
to continue communicating during the routing convergence
latency interval, we propose the use of alternative routes
through detours.
In this subsection we describe our pro-
posed approach and give preliminary deﬁnitions.
A detour is deﬁned as a network node that acts as a
bridge between the communicating nodes, source and des-
tination. An alternative route is a concatenation of two net-
work routes: the regular IP (Internet Protocol) route from
the source to the detour and the IP route from the detour to
the destination.
An example is given in ﬁgure 2. Source node (cid:1) sends
a message to destination node (cid:2) through detour (cid:3). In this
network, the regular IP route from (cid:1) to (cid:2) is (cid:1)-(cid:4)-(cid:2). The
alternative route from (cid:1) to (cid:2) is the concatenation of the
regular IP route from (cid:1) to (cid:3), which is (cid:1)-(cid:3), and the regular
IP route from (cid:3) to B, which is (cid:3)-(cid:5)-(cid:2). Thus the alternative
route is (cid:1)-(cid:3)-(cid:5)-(cid:2).
Network routes are not transitive, so if there is a network
route from node (cid:1) to node (cid:2), and another network route
from node (cid:2) to node (cid:3), the concatenation of these two net-
work routes may be different from the network route from
node (cid:1) to node (cid:3). In such cases, the alternative route from
node (cid:1) to node (cid:3) may be working when the regular net-
work route from node (cid:1) to node (cid:3) is faulty.
The alternative route is used during the convergence la-
A
B
E
C
D
F
Alternative Route
Regular IP Route
Figure 2. An example alternative route from
node (cid:1) to node (cid:2).
tency interval, when the network route, i.e.
the regular
IP route has failed, but it is chosen without knowledge of
the exact topology, including which elements might have
crashed. In order to improve the probability that the alter-
native route bypasses the faulty elements, the main criteria
used for locating detours are based on graph connectivity
concepts. Those nodes of the network that belong to “com-
ponents” with high edge-connectivity have precedence to be
chosen as detours. In this way, there is a higher probability
that the route through the detour is working properly, even
if part of network is faulty. To avoid the use of detours lo-
cated too far from the communicating nodes, a bound on the
length of the newly created route is imposed.
3. The Proposed Connectivity Criteria
In this section we describe the connectivity criteria used
to select detours. The network topology is represented as an
undirected graph (cid:6) (cid:0) (cid:7)(cid:8) (cid:4) where (cid:7) is a set of vertices
representing the network nodes, and (cid:4) is a set of edges rep-
resenting the network links.
Deﬁnition 3.1 Let (cid:7)(cid:3)(cid:9), (cid:9) (cid:2) (cid:7) , be the edge-
connectivity of a non-trivial subgraph of (cid:6) containing (cid:9)
and such that the number of edges of any cut separating
nodes of this subgraph is the largest in any subgraph to
which (cid:9) belongs.
Figure 3 shows an example. Each node (cid:9) is labeled with
(cid:7)(cid:3)(cid:9). Consider the nodes labeled with (cid:8). Those nodes
belong to a subgraph in which the number of edges of any
cut separating nodes of this subgraph is 4. Those nodes also
belong to subgraphs in which the number of edges of their
cuts are 3 and 2, but (cid:7)(cid:3)(cid:9) refers to the largest number. In
the same way, nodes labeled with (cid:4) belong to subgraphs in
which the number of edges of any cut separating nodes of
this subgraph is 3, or less, but they do not belong to any sub-
graph in which the number of edges in a cut is 4 or greater
than 3.
The following lemma is the key to the computation of
(cid:7)(cid:3)(cid:9):
Lemma 1 Given graph (cid:6) (cid:0) (cid:7)(cid:8) (cid:4) and a vertex (cid:9) (cid:2) (cid:7) ,
the value of (cid:7)(cid:3)(cid:9) is equal to the maximum cardinality (or
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 22,2021 at 04:18:47 UTC from IEEE Xplore.  Restrictions apply. 
2
2
4
4
    4
    3
4
2
3
3
4
    3
3
3
3
Figure 3. An example graph with connectivity numbers (cid:0)(cid:0)(cid:1) and components  (cid:0)(cid:0)(cid:1).
capacity) among all minimum cuts separating (cid:1) from any
other vertex of (cid:3).