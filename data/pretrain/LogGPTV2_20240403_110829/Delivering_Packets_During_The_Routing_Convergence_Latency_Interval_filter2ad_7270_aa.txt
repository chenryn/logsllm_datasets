# Delivering Packets During the Routing Convergence Latency Interval Through Highly Connected Detours

## Authors
Elias Procópio Duarte Jr.  
Rogério Santini  
Jaime Cohen

### Affiliations
- **Elias Procópio Duarte Jr.** and **Rogério Santini**  
  Federal University of Paraná, Dept. of Informatics  
  P.O. Box 19018, CEP 81531-990, Curitiba, PR, Brazil  
  Email: {elias, santini}@inf.ufpr.br

- **Jaime Cohen**  
  State University of Ponta Grossa, Dept. of Informatics  
  R. C. Cavalcanti, 4748, CEP 84031-900, Ponta Grossa, PR, Brazil  
  Email: jaime.cohen@uepg.br

## Abstract
Routing protocols exhibit a convergence latency during which all routers update their tables after a network fault. This interval, which can last up to several minutes in the Internet, often results in packet loss. To mitigate this, we propose using alternative routes called detours. These detours are selected based on network connectivity criteria, without prior knowledge of the faulty node or link. Highly connected components offer multiple distinct paths, increasing the likelihood of successful detour routing. Our experimental results, obtained through simulations on random Internet-like graphs generated with the Waxman method, show that the best detour can achieve up to 90% fault coverage. When considering the three best detours, the fault coverage increases to 98%.

## Keywords
Routing, Fault-Tolerance, Graph Theory, Connectivity, Cut Trees

## 1. Introduction
Network applications are critical for both organizations and individuals. After a network topology change, such as a link or node failure, IP routes used by applications may become invalid, even if alternative physical routes exist. Communication is disrupted until routing protocols at the network layer reach consistency over the new topology. The convergence latency of BGPv4 (Border Gateway Protocol version 4) in the Internet can be up to several minutes, leading to significant packet loss and increased end-to-end latency.

To enable continuous communication during the routing convergence latency, we propose an approach that uses alternative routes via detours. A detour acts as a bridge between the source and destination, bypassing the faulty route. Related work includes MPLS (MultiProtocol Label Switching) rerouting and the use of detours in application-level routing, such as for SNMP (Simple Network Management Protocol) messages and TCP (Transmission Control Protocol) tunneling.

This paper introduces a strategy for selecting detours based on network topology, with a focus on graph connectivity. Nodes in highly edge-connected components are preferred as detours, as they offer a higher probability of finding working routes. Additionally, we impose a bound on the length of the newly created route to avoid using detours that are too far from the communicating nodes.

## 2. Routing Convergence Latency

### 2.1. BGPv4’s Convergence Latency
The Border Gateway Protocol version 4 (BGPv4) has a convergence latency influenced by two parameters: HoldTime and MinRouteAdvertisementInterval. HoldTime, set to 90 seconds, is used to detect whether a BGP connection is active. MinRouteAdvertisementInterval, set to 30 seconds, determines the minimum time between route advertisements. In the worst case, the total BGP convergence latency can be up to:
\[ \text{HoldTime} + \text{MinRouteAdvertisementInterval} \times n \]
where \( n \) is the number of ASs in the alternative path. BGP may also diverge, leading to persistent route oscillation.

### 2.2. Alternative Routing Through Detours
To maintain communication during the convergence latency, we propose using alternative routes through detours. A detour is a network node that acts as a bridge between the source and destination. An alternative route is a combination of the regular IP route from the source to the detour and the IP route from the detour to the destination. The main criteria for selecting detours are based on graph connectivity, prioritizing nodes in highly edge-connected components to increase the likelihood of successful detour routing.

## 3. Proposed Connectivity Criteria

### 3.1. Connectivity Definitions
The network topology is represented as an undirected graph \( G = (V, E) \), where \( V \) is the set of vertices (network nodes) and \( E \) is the set of edges (network links). The edge-connectivity \( \lambda(v) \) of a non-trivial subgraph containing vertex \( v \) is defined as the maximum number of edges in any cut separating nodes of this subgraph.

### 3.2. Key Lemma
The value of \( \lambda(v) \) is equal to the maximum cardinality among all minimum cuts separating \( v \) from any other vertex in the graph.

### 3.3. Example
Figure 3 illustrates a graph with connectivity numbers \( \lambda(v) \) and corresponding components. Nodes labeled with 4 belong to subgraphs with the highest edge-connectivity, making them preferable as detours.

## 4. Experimental Results
Our experiments, conducted on random Internet-like graphs generated with the Waxman method, show that the best detour achieves up to 90% fault coverage. When the three best detours are considered, the fault coverage increases to 98%.

## 5. Conclusion
This paper presents a strategy for maintaining communication during the routing convergence latency by using alternative routes through detours. The selection of detours is based on network connectivity, prioritizing nodes in highly edge-connected components. Our experimental results demonstrate the effectiveness of this approach, achieving high fault coverage.

---

This revised version aims to improve the clarity, coherence, and professionalism of the original text.