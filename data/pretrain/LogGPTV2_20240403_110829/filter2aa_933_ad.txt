### The Condition Ends with, Specifying the Value .exe
**Figure 2.18 – Filter by Path Followed by the .exe Extension**

Now that we have explored how to work with tools related to system processes, such as Process Explorer and Process Monitor, let's delve into additional tools that will provide more leads for antivirus research.

### Before Research Begins: Working with Autoruns

As in all operating systems, Windows has multiple locations where persistence mechanisms can be used. Just as malware authors do, antivirus companies also leverage these persistence points to start their processes when the operating system boots up.

In Windows, there are several places where files can be placed to ensure they start automatically when the system starts, including:
- `HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run`
- `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce`
- `HKLM\System\CurrentControlSet\Services`
- `HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run`
- `%AppData%\Microsoft\Windows\Start Menu\Programs\Startup`

However, you don't need to memorize all these locations because a tool called **Autoruns** (available at [https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns](https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns)) is designed to help with this task.

Using Autoruns, you can display all the locations where persistence can occur within the operating system. For each location, you can create a list of files that start with the operating system. These lists can provide valuable leads for antivirus research.

When running Autoruns, you can also apply filters. For example, to filter by the name of the antivirus software, such as AVG, you can specify the string "AVG" as shown in **Figure 2.19 – Filter by AVG Results in Autoruns**.

After filtering, Autoruns displays dozens of AVG files that start with the operating system. Each line includes the file's name, location, description, publisher, and other details. These files often include critical components of AVG, and if any of them fail to run, the antivirus may not function properly. Therefore, these files are prime candidates for focused research.

### Working with Regshot

While gathering leads for antivirus research, it's essential to understand which registry values the antivirus software adds. This helps identify the files and registry values it introduces. To gather this information, we use the **Regshot** tool.

**Regshot** is an open-source tool that allows you to take snapshots of your registry and compare them before and after installing a program.

To take the first snapshot, open Regshot, select the output format (HTML or plain text), define the save location, and click "1st shot" as shown in **Figure 2.20 – The 1st Shot Button in Regshot**.

After taking the first snapshot, install the antivirus software you are researching. Once the installation is complete, return to Regshot and click "2nd shot" as shown in **Figure 2.21 – The 2nd Shot Button in Regshot**.

After taking the second snapshot, click "Compare" to generate an output file (in the selected format) that shows all registry changes made during the installation, as seen in **Figure 2.22 – AVG Antivirus Regshot Diff Results**.

This output file will list the registry changes, primarily focusing on EXE and DLL files. By searching for DLL and EXE files in this output, you can gather even more valuable leads, as illustrated in **Figure 2.23 – Accessing the Registry via PowerShell**.

It's also worth noting that you can access and search the registry using PowerShell, as shown in the preceding screenshot, without needing third-party tools like Regedit or Regshot.

### Third-Party Engines

Finally, it's important to recognize that some antivirus software companies use third-party engines produced by other companies. A full list of vendors and the third-party engines they use can be found at [https://www.av-comparatives.org/list-of-consumer-av-vendors-pc/](https://www.av-comparatives.org/list-of-consumer-av-vendors-pc/).

Understanding which antiviruses share third-party engines can help you shorten your research time by using the same leads for multiple antivirus products.

### Summary

Gathering leads is a crucial step in preparing for antivirus research. In this chapter, we have demonstrated several tools from the Sysinternals suite and the Regshot utility, which can help you collect leads for your research.

We recommend exploring additional tools to find more leads. There are also many excellent dynamic malware analysis tools available.

In the next chapter, we will discuss two approaches to bypassing antivirus software, the fundamentals of the Windows operating system, the protection rings model, and more.

### Chapter 3: Antivirus Research Approaches

In this chapter, you will learn about the Windows operating system's protection rings concept, real-life bypass examples, and the basic vulnerabilities that can be used to bypass antivirus software.

#### Understanding the Approaches to Antivirus Research

There are two main approaches to antivirus research:
1. **Finding a Vulnerability in Antivirus Software**: As with any code, antivirus software can contain vulnerabilities that can be exploited. These vulnerabilities may allow control over the antivirus's detection and prevention mechanisms.
2. **Using a Detection Bypass Method**: This approach involves finding ways to bypass the antivirus's detection methods without necessarily exploiting a vulnerability.

For a comprehensive list of vulnerabilities, check [https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=antivirus](https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=antivirus).

#### Introducing the Windows Operating System

The Windows operating system has evolved from being specific to certain CPUs and hardware to a process-independent, multiprocessor, and multi-user environment. Over the years, Microsoft has added support for various CPU architectures and introduced security improvements such as ASLR, DEP, and SEHOP.

ASLR randomizes memory address space to prevent exploitation of expected memory locations. DEP prevents code execution in non-executable memory regions, and SEHOP protects against SEH overwrite attacks.

#### Understanding Protection Rings

Protection rings are a hierarchical mechanism implemented in CPUs and utilized by operating systems to protect the system and provide fault tolerance. Each ring has a unique role:

- **Ring 3 (User Mode)**: Where user interactions occur through the GUI or command line.
- **Rings 2 and 1**: Generally not used in modern operating systems.
- **Ring 0 (Kernel Mode)**: The most privileged ring, where the kernel operates and provides direct access to hardware.

#### Permission Problems in Antivirus Software

Permission problems can lead to vulnerabilities in antivirus software. Examples include insufficient permissions on static signature files and improper privileges, as seen in Symantec DLP solutions.

#### Unquoted Service Path

An Unquoted Service Path vulnerability occurs when a service's executable path contains spaces and is not enclosed in quotation marks. This can be exploited to achieve higher privileges and persistence on the system.

#### DLL Hijacking

DLL hijacking exploits the insecure DLL loading mechanism in Windows. When software loads a DLL using `LoadLibraryW()`, it can be replaced with a malicious DLL, leading to potential critical vulnerabilities in antivirus software.

#### Buffer Overflow

A buffer overflow is a common attack vector where a large amount of data is sent to a program, causing it to fail and potentially allowing the injection of malicious shellcode. This can be used to take full control of the victim's device.

Over the years, many buffer overflow vulnerabilities have been discovered in antivirus software, making it a significant area of focus for researchers.