35.50
FedEx for delivery between 9:00 and 17:00
When the purchase order is received, it is classified as partial match since
there is at least one element that cannot be processed using the existing XSLT
transformation set. In other words, the XPath set of the XSLT transformation
set stored in the B2BISS repository is a proper subset of the XPath set of the
purchase order received (case b) of Figure 4.
At this point, Hiltrix has three options: 1) create a full new set of mappings,
2) edit an existing set of mappings or 3) execute a partial transformation. If it
choosestoperformanewsetofmappings,itwillcarryoutthestepsdescribedin
scenario A. The next time Hiltrix receives a purchase order from Celsius Corp.
it will carry out the steps from scenario B. Choosing the second option, to edit
an existing set of mappings, requires a similar set of actions to be performed
but instead of creating a full set of new mappings, only one mappings is added.
On the other hand, Hiltrix can also choose to execute a partial transformation
(option 3). In such a case, the  element from the cXML purchase
order will not lead to a new instance in the ontology. Hiltrix decides to create
a new set of heterogeneous mappings to satisfy the business requirements of
Celsius Corp.
23
5.4 Scenario D. Receiving a purchase order with fewer elements
In the previous scenario, Hiltrix could have chosen to perform a new set of
mappings or to execute a partial transformation. Since Hiltrix opted to create a
new set of mappings, at this time, 5 files are stored in the B2BISS system and
repository:
1. The purchase order from Aldo Corp. (scenario A)
2. The purchase order from Beplus Corp. (scenario B)
3. The purchase order from Celsius Corp. (scenario C)
4. The XSLT transformation set for purchase orders from Aldo Corp. and Be-
plus Corp. (scenario A and B)
5. The XSLT transformation set for purchase orders from Celsius Corp. (sce-
nario C)
For this scenario, Hiltrix receives a purchase order from Degree Corp. The
orderissimilartothepurchaseorderreceivedfromAldoCorp.butDegreeCorp.
did not use one of its cXML elements (for example, the UNSPSC classification
of the products ordered). As a result, the XPath set for this new purchase order
is a subset of the XPath sets from the two XSLT transformation sets stored in
theB2BISSrepository.Thissituationisdescribedincasea)ofFigure4).When
the purchase order from Degree Corp. arrives at the system, it is classified as
complete match because all the purchase order’s XPaths have a XSLT XPath in
the transformation sets. The request order can be processed automatically.
5.5 Scenario E. Receiving a purchase order with unknown elements
Inthislastscenario,HiltrixreceivesapurchaseorderfromEstarCorp.forwhich
no XSLT transformation set can be found in the B2BISS repository. In other
words, none of the XPath from the request order was found in any of the XSLT
transformation sets. This situation is described in case c) of Figure 4. In such a
case, Hiltrix has to create a new customized set of mappings that will generate
a new XSLT transformation set. The purchase order is automatically classified
as no match. Once the mappings set for this new cXML order is done, Hiltrix
can receive similar purchase orders in the future and accomplish automatically
a complete match and subsequent transformation.
Basedonthescenariospresented,theB2BISSsystematHiltrixCorp.hasthe
followingpurchaseordersandXSLTtransformationsetsstoredinitsrepository:
1. The purchase order from Aldo Corp. (scenario A)
2. The purchase order from Beplus Corp. (scenario B)
3. The purchase order from Celsius Corp. (scenario C)
4. The purchase order from Degree Corp. (scenario D)
5. The purchase order from Estar Corp. (scenario E)
6. The XSLT transformation set for the purchase order from Aldo Corp. (sce-
nario A, B and D)
24
7. The XSLT transformation set for the purchase order from Celsius Corp.
(scenario C)
8. The XSLT transformation set for the purchase order from Estar Corp. (sce-
nario E)
As more purchase orders are received and additional mapping sets are cre-
ated, Hiltrix Corp. and its B2BISS system will converge into a stable state
were the number of new or unique purchase orders sent for processing which
require manual intervention from managers will be marginal. The reuse of map-
pings across organizations and purchase orders types can dramatically reduce
the costs of integration since a typical purchase order can require more than
3000 lines of instructions to transform an cXML request into an OWL-based
internal semantic data representation.
6 Integrating B2BISS into SAP PI
Thislastsectionexplainsanddescribeshowtheconceptspresentedinthispaper
can be technologically integrated into a commercial system. The SAP Process
Integration5 [29] is the enterprise platform supplied as part of SAP NetWeaver
solution.ItisanintegrationplatformforSAPandnon-SAPsystemswhichmakes
possible the construction of B2B scenarios based on the exchange of business
transactions represented with various standards. It allows reducing the cost and
development time of integration projects.
Atthetechnicalinfrastructure,SAPPIusesXML-basedtransactionsinorder
toconnectSAPcomponentswithnon-SAPcomponents.Itsupportswell-known
industrydataexchangestandardssuchascXML,RosettaNet,UCCnet,papiNet,
HL7andPIDX.Whenanapplicationneedstosendoracceptatransaction,SAP
PI creates a channel to transport the transaction by assuring that it is accepted
and delivered exactly according to pre-defined business rules. At the business
level, generally an agreement must be reached between the trading partners on
how the electronic transactions will be instantiated and transmitted.
Figure 8 shows the architecture overview of SAP PI and how it is used
in conjunction with the B2BISS system. The basic infrastructure has a simple
structure: a sender application system (left) talks to a central PI Server (cen-
ter), which sends the XML-based transactions to a receiver application system
(right). The integration server is the central part of the infrastructure. It re-
ceives transactions and applies routing and mapping rules to these transactions
and, finally, sends them to the receiving application. The integration repository
provides knowledge available at design time and runtime, such as mappings, in-
terfaces, and components. The information in the integration repository is used
by the integration directory, which adds configuration-specific information that
is needed for execution such as detailed description of routing rules, active ser-
vices, executable mappings, etc.
5 http://www.sap.com/platform/netweaver/components/pi/index.epx
25
Fig.8. Extending SAP PI architecture with B2BISS system
26
Due to its modularity and its architecture, B2BISS can be easily integrated
into SAP PI platform. The B2BISS system is integrated into SAP PI routing
component.ThismodulewillallowthedetectionofincomingXML-basedtrans-
actions that contain possibly known, or unknown, elements (i.e., a complete
match, a partial match or no match according to the classification Algorithm
1). When such elements are found, transformations to OWL instances are car-
ried out automatically. For these transformations to take place, it is necessary
to use the mappings that have been generated by the JXML2OWL application
and that have been stored into the SAP PI repository. Additionally, the SAP
PI platform needs to be extended with an ontology management system (cur-
rently the most popular solution to implement an ontology system is to use a
relational database as a cornerstone). When incoming transactions arrive to the
platform, the B2BISS monitor can be used to solve scenarios that may arise
when only partial matches or no matches occur. The management of mappings
is the responsibility of the B2BISS mapping editor.
The B2BISS system brings several advantages for SAP PI. The approach
provides a new set of building blocks that give a considerable step forward in
terms of semantic integration. Only one integration infrastructure is needed for
B2B integration. The mappings stored are based on XML and open standards
(XPath and XSLT). This promotes the ability to provide and reuse this knowl-
edge for partners, customers, third-parties and legacy systems, taking it well
beyond a pure SAP-to-SAP integration. As all transactions are routed through
one system, organizations need to monitor only SAP PI instead of having to
monitor several systems. The ability to modify mappings and add new map-
pings without impacting the involved systems gives organizations the flexibility
to react quickly to dynamic changes in business networks.
7 Related work
The projects described in this section are related to the B2BISS approach pre-
sentedinthispapertoachieveanexternal(syntactic)tointernal(semantic)B2B
integration. However, none of them supports the management of heterogeneous
mappings and instance transformation from external XML-based standards to
aninternalrepresentationexpressedusinganexistingdomainontologyspecified
in OWL. The fact that the ontology already exists in B2BISS is relevant since
a few related projects have the aim to transform XML schema into new OWL
ontologies. The related work can be divided into two main subsections: infras-
tructurestosupportB2Bintegrationandtoolsthatenablethemappingbetween
differentdatarepresentations.Thesetwomainsubsectionscorrespondtothetwo
interrelated systems that we have presented: B2BISS and JXML2OWL.
Gahleitner and Wolfram [20] focus on the development of a system for man-
aging enterprises’ information heterogeneity involving multiple ontologies. The
proposed system provides a common interface for reusing ontology mapping
information across enterprises’ based on the concept of semantic bridges. Com-
paredtoourwork,B2BISSfocusonthemanagementofXMLtoOWLmappings
27
instead of OWL to OWL mappings. This makes the B2BISS system suitable
for an intermediary stage of business ecosystems where some organizations use
XML-standards and other organizations have already moved to internal OWL-
based ontologies.
Jung et al. [24] describe the design and a prototype implementation of a
set of methods for B2B process integration using workflow or business process
technology. The design describes a B2B Workflow Reference Model with sev-
eral interfaces and requirements for workflow integration. The project addresses
application integration [38], but not information integration. Application inte-
gration is a technology solution where typically most of the product develop-
ment effort is spend by organizations on issues related to messages, processes,
transport and interfaces. The resulting system enables business partners to un-
derstand workflow standards and the messaging technologies that can be used.
ComparedtoB2BISS,theworkofJungetal.focusesontheuseofbusinesspro-
cessesfororchestrationandcoordinatingbusinesspartnersinbusinessnetworks.
Data and semantic integration were not an objective.
WSML,WSMOandWSMX[50]usessemanticallyannotatedservicestopro-
moteB2Bintegrationbyusingdataandprocessmediation.Transactionscanbe
semantically enriched using the WSML ontology language. The infrastructure
enables domain experts to create mappings between the XML-based standards
and WSMO ontologies. The mappings are represented in an abstract ontology
mapping language. On the one hand, the use of non-standard languages to es-
tablishmappingsmaybeconsideredapenaltyfornotallowingitssharingacross
an industry. On the other hand, the management of mappings is not addressed.
This means that for each standard used to represent transactions, a new set of
mappingsneedstobecreated.B2BISSsolvesthisproblembyusingarepository
ofmappingsthatcanbereusedovertime.IncomingXML-basedtransactionsare
automatically classified and human intervention is requested by B2BISS when
needed. Furthermore, the use of more well-established languages (such as OWL
and XSLT) enable a stronger acceptance by the industry.
D´ıaz,etal.[14]recognizesthatinformationexchangesareoftencharacterized
by the need of translating from one data format into another one in order to
achieve compatibility between information systems. In their work they present
the SIMPLEX system to examine to what extent XML and XSLT support the
inter-organizational exchange of business documents. The results were positive.
Nevertheless, their approach only targeted the conversion from/to different in-
dustry standards represented with XML. Furthermore, they do not advance on
the idea of using, reusing, and managing mappings.
A considerable number of tools have the purpose of defining mappings be-
tween two distinct data models. Applications which are related to our approach
include XML2OWL, FOAM, COMA++, and Lifting XML schema to OWL.
The XML2OWL framework [4] also transforms XML schema (XSD) into
a newly created ontology in OWL using XSLT. This project is similar to the
JXML2OWL module of the B2BISS system but there are several differences. In
fact,thistoolcreatesanewontologyfromanXMLschemaduringwhichtheuser
28
has no control over the process. Our main objective is different since we allow
users to map XML schema to an existing ontology, which is usually richer than
the one created by the XML2OWL framework, and appropriately generate an
XSLT that automatically transforms instances of the XML schema to instances
of the mapped ontology. In this sense, one could argue that XML2OWL is not
a mapping tool but a converter.
FOAM (Framework for Ontology Alignment and Mapping) [15] provides a
generalalignmentprocessbasedonontology-encodedsemanticsfocusingonvar-
ious aspects of ontology alignment. The process uses concepts of features (e.g.
labels, structural features, subsumption, restrictions, etc.), similarity, and inter-
pretation to decide if two concepts from distinct ontologies should be aligned.
Some of the concepts can be applied to the B2BISS system to automatically
make suggestions of possible mappings. Nonetheless, since the alignment and
mapping proposed by FOAM are between two ontologies, additional research is
needed for the system to propose mappings between XML schema and OWL
ontologies.
COMA++ [2] is a schema and ontology matching tool that supports XML
schema and OWL ontology documents as data sources and enables a user to
identifysemanticcorrespondencesbetweenXMLschema,betweenOWLontolo-
gies or even between an XML schema and an OWL ontology. Since COMA++
is a matching tool, it is not really intend to map XML schema to ontologies
with the purpose of facilitating the transformation of schema instances into in-
dividualsasinB2BISS.Nonetheless,aswithFOAM,conceptscanbere-usedin
B2BISS for supporting mapping guidance and to give mapping suggestions to
users.
Ferdinand, Zirpins et al. [17] propose an approach to lift an XML schema
to a new ontology capturing the implicit semantics available in the structure of
XML documents. Their work is divided into two independent parts: automatic
mappings from XML to RDF as well as from XML schema to OWL. However,
since the mappings are independent, the generated instances may not respect
the OWL model created from the XML schema.
Research has also been conducted to convert XML-based B2B standards to
ontologies. For example, Kotinurmi and Vitvar [28] added semantics to Roset-
taNet specifications. Foxvog and Bussler [19] represented the EDI standard in
various Semantic Web and logic languages. Our approach does not follow this
path, since one requirement is that external XML-based B2B standards and
internal ontology-based B2B standards must coexist.
8 Conclusions
GlobalbusinessenvironmentsrequireanadequateB2Bintegrationfororganiza-
tionstoexchangeinformationwithpartners,suppliers,andcustomers.However,
ifthisintegrationisachievedmanually,withoutanysupportfromautomatedsys-
tems, companies must invest a significant amount of their software maintenance
budgets to program, code, and maintain mappings across enterprises. There-
29
fore, tools and applications that can support, ease the integration and reduce
transaction costs are fundamental assets for modern businesses.
In a B2B integration scenario, two types of data representations need to
be integrated: external and internal. External data representations are used to
exchange information with partners. Transaction standards such as cXML and
ebXML are XML-based and are widely used in various industries. On the other
hand, internal data representations are only visible inside organizations and are
used to describe their services, products and purchase orders. While current
organizations only rely on database schema, modern approaches involve using
semantic languages, such as OWL and RDFS to increase the expressiveness of
data.Insuchacontext,onechallengeforB2Bintegrationistofindasolutionto
integrate external XML-based transactions with internal OWL ontology-based
data representations.
In this paper, we have described B2BISS, a system that enables the (semi-
)automatic integration of external and internal data representations relying on
the management of heterogeneous mappings. The solution presented proposes
a strategy to map XML-based external representations with internal data rep-
resentations expressed with OWL ontologies according to a set of mappings
managedbyB2BISS.Onceanorganizationreceivesanexternaltransactionitis
allowed to create heterogeneous mappings between the elements from the trans-
action and the concepts of an ontology. The mappings are stored in a local
repository and can be reused when new, unseen, transactions arrive. When a
new transaction is received, the repository is queried to determine if some of its
elements have already been mapped to ontological concepts in the past. If all