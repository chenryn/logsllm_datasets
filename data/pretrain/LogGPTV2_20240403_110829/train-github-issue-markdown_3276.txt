### Issue Description

I have thoroughly searched the issues in this repository and believe that this is not a duplicate. I did find a similar issue (#7012), but it discusses the handler being detached after closing the popover. In our case, the popovers do not even open, yet they still hook into the `onScroll` event.

### Expected Behavior

I expect the Popover component to not interact with scroll events until it is actually visible on the screen.

### Current Behavior

Currently, every Popover element (including those within an IconMenu) hooks into the `onScroll` event. If there are many such elements, the handling of scroll events is significantly impacted.

### Steps to Reproduce

1. Go to [http://www.material-ui.com/#/components/card](http://www.material-ui.com/#/components/card).
2. Open Chrome's Dev Tools, navigate to **Elements > Event Listeners > scroll**. You will see one scroll listener. This is your baseline.
3. Click on the Popover menu item to view the example Popover page.
4. Again, check Chrome's Dev Tools > Elements > Event Listeners > scroll. You will now see four listeners.
   - One listener is registered for each Popover on the screen, even though they are not currently visible.
   - This indicates that Popovers are registering scroll event listeners even when they are not active.

### Context

In our application, we are using hundreds or thousands of IconMenu elements within a table. Each IconMenu contains a Popover, and each Popover hooks into the `onScroll` event. This leads to significant performance degradation as the table size grows.

### Environment

- Material-UI: 0.19.4
- React: 15.6.2
- Browser: Chrome 63.0.3239.84

---

This revised version is more structured and clearly communicates the issue, expected behavior, current behavior, steps to reproduce, context, and environment details.