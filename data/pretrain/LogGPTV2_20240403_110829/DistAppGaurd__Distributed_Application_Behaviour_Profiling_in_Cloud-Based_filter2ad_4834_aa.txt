title:DistAppGaurd: Distributed Application Behaviour Profiling in Cloud-Based
Environment
author:Mohammad Mahdi Ghorbani and
Fereydoun Farrahi Moghaddam and
Mengyuan Zhang and
Makan Pourzandi and
Kim Khoa Nguyen and
Mohamed Cheriet
DistAppGaurd: Distributed Application Behaviour Profiling in
Cloud-Based Environment
Mohammad Mahdi Ghorbani
University of Quebec
Canada
PI:EMAIL
Fereydoun Farrahi
Moghaddam
Ericsson Security Research
Canada
Mengyuan Zhang
Hong Kong Polytechnic University
China
PI:EMAIL
PI:EMAIL
Makan Pourzandi
Ericsson Security Research
Canada
Kim Khoa Nguyen
University of Quebec
Canada
PI:EMAIL
PI:EMAIL
Mohamed Cheriet
University of Quebec
Canada
PI:EMAIL
ABSTRACT
Today, Machine Learning (ML) techniques are increasingly used
to detect abnormal behaviours of industrial applications. Since
many of these applications are moving to the cloud environments,
classical ML approaches are facing new challenges in accurately
identifying abnormal behaviours due to the highly dynamic and het-
erogeneous nature of the cloud. In this paper, we propose a novel
framework, DistAppGaurd, for profiling simultaneously the be-
haviour of all microservice components of a distributed application
in the cloud. The framework can therefore, detect complex attacks
that are not observable by monitoring a single process or a single
microservice. DistAppGaurd utilizes the system calls executed by
all the processes of an application to build a graph consisting of
data exchanges among different application entities (e.g., processes
and files) representing the behaviour of the application. This repre-
sentation is then used by our novel miroservice-aware Autoencoder
model to perform anomaly detection at runtime. The efficiency and
feasibility of our approach is shown by implementing several differ-
ent real-world attacks, which yields high detection rates (94%-97%)
at 0.01% false alarm rate.
CCS CONCEPTS
• Security and privacy → Distributed systems security.
KEYWORDS
distributed behaviour profiling, anomaly detection, microservice,
machine learning, autoencoder
ACM Reference Format:
Mohammad Mahdi Ghorbani, Fereydoun Farrahi Moghaddam, Mengyuan
Zhang, Makan Pourzandi, Kim Khoa Nguyen, and Mohamed Cheriet. 2021.
DistAppGaurd: Distributed Application Behaviour Profiling in Cloud-Based
Environment. In Annual Computer Security Applications Conference (ACSAC
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8579-4/21/12...$15.00
https://doi.org/10.1145/3485832.3485907
’21), December 6–10, 2021, Virtual Event, USA. ACM, New York, NY, USA,
12 pages. https://doi.org/10.1145/3485832.3485907
1 INTRODUCTION
According to the Fifth Generation Public Private Partnership (5G-
PPP) report, 5G will connect approximately 7 trillion wireless de-
vices or things and decrease the service creation from 90 hours to 90
minutes [13]. As a result, cloud computing and Network Functions
Virtualization (NFV) are increasingly being used to meet the huge
volume of demands while limiting Capital Expenditures and Operat-
ing Expenses through flexible network operation and management.
However, moving from private hardware-based implementation
to the cloud increases the attack surface of the network. Since 5G
would link every aspect of life to the network, with the majority of
users’ information stored and exchanged online, protecting these
networks will be extremely important [2].
Virtual applications are moving towards microservice-based ar-
chitecture to provide scalability, deployment agility, flexibility, and
resiliency [19]. These benefits come at the cost of a complex and
dynamic environment in which components and connections can
change frequently, making it challenging to obtain a consistent view
of the system entailing several evolving processes and their con-
nections. This lack of consistent view, in turn, makes it challenging
to build a profile for individual process’s behaviour since these pro-
cesses keep changing and spawning around the data center [11]. As
a result, a virtually distributed service should be presented through
the collective behaviour of a group of processes delivering the
service, rather than individual processes of the service delivery.
Using Artificial Intelligence (AI) and Machine Learning (ML) to
detect malicious activities in networks and systems is becoming
more prevalent in many organizations to improve behavioural anal-
ysis and profiling [8]. Despite their demonstrated effectiveness in
profiling standard host-based use-cases, ML approaches are encoun-
tering new challenges in virtual environments due to the dynamic
and distributed nature of virtualized applications [24].
Recently, behaviour monitoring of the applications has received
much interest. Several approaches have been developed to use
behavioural monitoring in order to detect the applications with
malicious behaviour in virtual environments [3, 6, 23, 27]. However,
no previous research has looked into the behaviour analysis of
microservices distributed across multiple hosts. As a result, a new
837ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Ghorbani et al.
profiling approach is needed that is fine-grained enough to capture
subtle changes in each microservice while coarse-grained enough
to omit the environment’s changes, such as auto-scaling, migration,
etc.
Motivating Example. Fig. 1 shows a stealthy attack scenario per-
formed against an OpenAirInterface LTE network. We consider
OpenAirInterface1 as the open source implementation of virtual
4G/5G network with separation of user plane and control plane in
Serving Gateway (SGW) and Packet data network Gateway (PGW)
introduced in 3GPP Release 142. In this attack, a malicious code is in-
jected in the source code of the E-UTRAN Node B (eNB) component
during the CI/CD process (Step 0). During the attach procedure, fol-
lowing the Radio Resource Control (RRC) connection setup (Step 1)
and the authentication (Step 2), the IP address of the user plane gate-
way (SPGW-U) will be changed to the IP address (129.192.82.136) of
a malicious SPGW-U by activating the injected code (Step 3). The
malicious gateway is running in the same cloud and it is controlled
by an attacker (insider); thus, the attacker can read and modify
users’ data through the malicious gateway. This attack scenario can
not be detected from Mobility Management Entity (MME) point
of view, since it does not know that the GTP tunnel between the
eNB and SGW is not established. On the other hand, SGW does
not know that the MME has completed the User Equipment (UE)
connection. From SGW point of view, the incompleteness of GTP
tunnel establishment can be due to a failure in UE-eNB RRC connec-
tion that happens after the initial request and before establishing
the GTP connection. Therefore, this attack can only be detected
if the distributed behaviour of the virtual application through the
data center is considered; i.e., correlating the eNB-MME and the
eNB-SGW signaling messages.
even single microservice profiling would fail to detect such attacks.
However, monitoring the distributed behaviour of the application
would allow to detect the attack.
To this end, we propose a framework, DistAppGaurd, to identify
and profile the microservices and their interactions in a multi-host
distributed virtualized environment. DistAppGaurd builds a consis-
tent graph for a virtual application behaviour using system calls.
The generated graphs are then used to feed a machine learning
algorithm, specifically Autoencoders, for training a model repre-
senting the distributed behaviour of the application. This machine
learning model can track the behaviour of the microservices created
throughout the data center and their interactions, and detect anom-
alies at runtime for a distributed application. DistAppGaurd then
sends the findings to the security analysts for further actions. Our
profiling is two-fold: first we consider all containers representing a
microservice type as one. Second, we associate the containers at
any host in the data center with unique microservice roles. This
approach allows our framework to detect abnormal behaviour of a
distributed application deployed in the data center at a global level.
In contrast to our approach, many traditional profiling approaches
[3, 6, 14, 21] in the cloud are limited to only one host or as in recent
distributed approaches [12, 20, 32] to only one container.
DistAppGaurd builds on Malchain [14]. Authors in [14] showed
the effectiveness of Malchain in detection anomalies in single-host
microservice-based virtual applications. In this work, we extend
their framework to profile the global behaviour of a distributed
containerized application in a data center. Furthermore, Malchain
[14] relies on graph features and statistical summary which is sub-
ject to loss of information on the input graphs and may lose to
capture complex patterns in the input graphs. On the other hand,
DistAppGaurd utilizes Autoencoders to learn the patterns auto-
matically without discarding any information on the input graphs.
We implemented our framework on an open source microservice
based implementation of an LTE network which is distributed over
multiple hosts. Then, we carried out extensive experiments to eval-
uate our proposed framework in detecting various stealthy types
of attacks in a multi-host containerized environment.
In general, our approach is able to profile the microservices
regardless of the location where the microservices are deployed
in a data center. Hence, it can be used to profile different services
implemented by microservices of a service chain deployed in the
data center and their interactions.
The contributions of this paper can be summarized as follows:
Figure 1: A stealthy attack on OpenAirInterface LTE net-
work
The motivating example illustrates that in a distributed applica-
tion, having all processes or microservices of an application behav-
ing normally does not conclude that the application is in the normal
state. Therefore, classical approach of single process profiling or
1https://www.openairinterface.org/
2https://www.3gpp.org/cups/
• To the best of our knowledge, DistAppGaurd is the first
profiling framework that combines the behaviour of multiple
microservices and their container instances of an application
distributed over multiple hosts into a single group behaviour.
This ability increases the accuracy of the attack detection by
∼14% compared to the state-of-the-art approaches for the
similar problems.
• A novel microservice-aware Autoencoder model to optimize
the performance of the anomaly detection by increasing the
detection rate by ∼9% compared to classical fully connected
Autoencoders.
|  2020-11-24  |  Ericsson Internal  |  Page 1of 21Soft UE eNBMMESPGW-UMalicious SPGW-UStep 0: Inject a malicious SPGW-U:in_addr= *((in_addr_t*)create_tunnel_req_pP->sgw_addr[i].buffer);…Gtpv1u_ue_data_p->bearers[eps_bearer_id-GTPV1U_BEARER_OFFSET].sgw_ip_addr= “129.192.82.136”;Step 1: RRC connection setupStep 2: Attach and AuthenticationStep 3: Hijacking the S1UconnectionIP: 129.192.82.136SPGW-CHSS838DistAppGaurd: Distributed Application Behaviour Profiling in Cloud-Based Environment
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
• A new algorithm for microservice role identification that pro-
vides a consistent view of a dynamic system in a virtualized
distributed environment.
• We have implemented and carried out experiments to evalu-
ate our proposed framework, showing a high detection rate
(∼96%) at a low false alarm rate (0.01%) in detecting vari-
ous stealthy types of attacks in a distributed containerized
environment.
The remainder of this paper is organized as follows. Section 2
gives the background information on LTE network architecture. Sec-
tion 3 presents the proposed approach to profile virtual applications.
Section 4 details the attack scenarios carried out for evaluation of
our framework. Section 5 provides experimental results. We discuss
our attack detection and limitation in Section 6. Section 7 reviews
related work. Finally, we conclude the paper and outline future
work.
2 LTE BACKGROUND
In this section, we present the background on LTE to better under-
stand the motivating example as well as the other attack scenar-
ios presented in this paper. However, the proposed framework is
generic for all the microservice-based applications, therefore, our
approach is not limited to the LTE environment only.
2.1 LTE Terminology
combination of PGW’s and SGW’s control planes.
combination of PGW’s and SGW’s user planes.
end-user directly for communication (e.g., cellphone).
• User Equipment (UE) — is any device which is used by an
• Packet Data Network (PDN) — is an operator’s internal or
external IP domain with which a UE wants to communicate,
and which provides services such as the Internet to the UE.
• PDN GateWay (PGW) – is the point of exit and entry of
traffic from UE to PDN and vice versa. It mainly performs
policy enforcement, packet filtering and charging support.
• Serving GateWay (SGW) – routes and forwards user data
packets and facilitate the mobility between LTE and other
3GPP technologies.
• Serving and PDN GateWay Control plane (SPGW-C) – is the
• Serving and PDN GateWay User plane (SPGW-U) – is the
• E-UTRAN Node B (eNB) — is a complex base station that is
connected to the core network and communicates directly
and wirelessly with UEs.
• Mobility Management Entity (MME) – is the key control-
node of LTE which mainly performs authentication, paging,
roaming and SGW selection
• Home Subscriber Server (HSS) — is a user database contain-
ing the user-related and subscription-related information