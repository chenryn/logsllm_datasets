# Title: DistAppGaurd: Distributed Application Behaviour Profiling in Cloud-Based Environments

## Authors:
- Mohammad Mahdi Ghorbani, University of Quebec, Canada
- Fereydoun Farrahi Moghaddam, Ericsson Security Research, Canada
- Mengyuan Zhang, Hong Kong Polytechnic University, China
- Makan Pourzandi, Ericsson Security Research, Canada
- Kim Khoa Nguyen, University of Quebec, Canada
- Mohamed Cheriet, University of Quebec, Canada

## Abstract
Machine Learning (ML) techniques are increasingly being used to detect abnormal behaviors in industrial applications. As these applications migrate to cloud environments, classical ML approaches face new challenges due to the highly dynamic and heterogeneous nature of the cloud. This paper introduces DistAppGaurd, a novel framework for profiling the behavior of all microservice components of a distributed application in the cloud. DistAppGaurd can detect complex attacks that are not observable by monitoring a single process or microservice. The framework uses system calls executed by all processes of an application to build a graph representing data exchanges among different application entities (e.g., processes and files). This representation is then used by a novel microservice-aware Autoencoder model to perform anomaly detection at runtime. The efficiency and feasibility of our approach are demonstrated through the implementation of several real-world attacks, achieving high detection rates (94%-97%) with a 0.01% false alarm rate.

## CCS Concepts
- Security and privacy → Distributed systems security

## Keywords
- Distributed behavior profiling
- Anomaly detection
- Microservice
- Machine learning
- Autoencoder

## ACM Reference Format
Mohammad Mahdi Ghorbani, Fereydoun Farrahi Moghaddam, Mengyuan Zhang, Makan Pourzandi, Kim Khoa Nguyen, and Mohamed Cheriet. 2021. DistAppGaurd: Distributed Application Behaviour Profiling in Cloud-Based Environment. In Annual Computer Security Applications Conference (ACSAC '21), December 6–10, 2021, Virtual Event, USA. ACM, New York, NY, USA, 12 pages. https://doi.org/10.1145/3485832.3485907

## 1. Introduction
According to the Fifth Generation Public Private Partnership (5G-PPP) report, 5G will connect approximately 7 trillion wireless devices, reducing service creation time from 90 hours to 90 minutes [13]. Cloud computing and Network Functions Virtualization (NFV) are increasingly being used to meet this demand while limiting capital and operating expenses through flexible network operation and management. However, moving from private hardware-based implementations to the cloud increases the attack surface of the network. Since 5G will link every aspect of life to the network, protecting these networks is crucial [2].

Virtual applications are adopting microservice-based architectures to provide scalability, deployment agility, flexibility, and resiliency [19]. These benefits come with the challenge of a complex and dynamic environment where components and connections frequently change, making it difficult to obtain a consistent view of the system. This lack of consistency makes it challenging to profile individual processes, as they keep changing and spawning across the data center [11]. Therefore, a virtually distributed service should be represented by the collective behavior of a group of processes delivering the service, rather than individual processes.

Artificial Intelligence (AI) and Machine Learning (ML) are becoming more prevalent in detecting malicious activities in networks and systems to improve behavioral analysis and profiling [8]. Despite their effectiveness in standard host-based use-cases, ML approaches face new challenges in virtual environments due to the dynamic and distributed nature of virtualized applications [24].

Behavioral monitoring of applications has gained significant interest, with several approaches developed to detect malicious behavior in virtual environments [3, 6, 23, 27]. However, no previous research has focused on the behavior analysis of microservices distributed across multiple hosts. A new profiling approach is needed that is fine-grained enough to capture subtle changes in each microservice while coarse-grained enough to ignore environmental changes such as auto-scaling and migration.

### Motivating Example
Figure 1 illustrates a stealthy attack scenario on an OpenAirInterface LTE network. We consider OpenAirInterface1 as the open-source implementation of a virtual 4G/5G network with separation of user and control planes in the Serving Gateway (SGW) and Packet Data Network Gateway (PGW) introduced in 3GPP Release 142. In this attack, a malicious code is injected into the source code of the E-UTRAN Node B (eNB) component during the CI/CD process (Step 0). During the attach procedure, following the Radio Resource Control (RRC) connection setup (Step 1) and authentication (Step 2), the IP address of the user plane gateway (SPGW-U) is changed to the IP address (129.192.82.136) of a malicious SPGW-U by activating the injected code (Step 3). The malicious gateway, controlled by an attacker, can read and modify users' data. This attack cannot be detected from the Mobility Management Entity (MME) perspective, as it does not know the GTP tunnel between the eNB and SGW is not established. Similarly, the SGW does not know that the MME has completed the User Equipment (UE) connection. This attack can only be detected by considering the distributed behavior of the virtual application across the data center, correlating the eNB-MME and eNB-SGW signaling messages. Single microservice profiling would fail to detect such attacks, but monitoring the distributed behavior of the application would allow detection.

To address this, we propose DistAppGaurd, a framework to identify and profile microservices and their interactions in a multi-host distributed virtualized environment. DistAppGaurd builds a consistent graph of a virtual application's behavior using system calls. The generated graphs are then used to train a machine learning algorithm, specifically Autoencoders, to represent the distributed behavior of the application. This model can track the behavior of microservices and their interactions, and detect anomalies at runtime. DistAppGaurd sends the findings to security analysts for further action. Our profiling is two-fold: first, we consider all containers representing a microservice type as one; second, we associate containers at any host in the data center with unique microservice roles. This approach allows our framework to detect abnormal behavior of a distributed application deployed in the data center at a global level. Unlike traditional profiling approaches [3, 6, 14, 21], which are limited to one host, and recent distributed approaches [12, 20, 32] to one container, DistAppGaurd extends the Malchain framework [14] to profile the global behavior of a distributed containerized application in a data center. Malchain relies on graph features and statistical summaries, which can lose information and complex patterns. In contrast, DistAppGaurd utilizes Autoencoders to learn patterns without discarding information.

We implemented our framework on an open-source microservice-based implementation of an LTE network distributed over multiple hosts. Extensive experiments were conducted to evaluate our proposed framework in detecting various stealthy types of attacks in a multi-host containerized environment.

In summary, our approach can profile microservices regardless of their location in a data center, making it suitable for profiling different services implemented by microservices in a service chain and their interactions.

The contributions of this paper are:
- DistAppGaurd is the first profiling framework that combines the behavior of multiple microservices and their container instances of an application distributed over multiple hosts into a single group behavior, increasing the accuracy of attack detection by ~14% compared to state-of-the-art approaches.
- A novel microservice-aware Autoencoder model that optimizes the performance of anomaly detection, increasing the detection rate by ~9% compared to classical fully connected Autoencoders.
- A new algorithm for microservice role identification that provides a consistent view of a dynamic system in a virtualized distributed environment.
- Implementation and evaluation of our proposed framework, showing a high detection rate (~96%) at a low false alarm rate (0.01%) in detecting various stealthy types of attacks in a distributed containerized environment.

The remainder of this paper is organized as follows: Section 2 provides background information on LTE network architecture. Section 3 presents the proposed approach to profile virtual applications. Section 4 details the attack scenarios carried out for evaluation. Section 5 provides experimental results. Section 6 discusses attack detection and limitations. Section 7 reviews related work. Finally, we conclude the paper and outline future work.

## 2. LTE Background
This section provides background on LTE to better understand the motivating example and other attack scenarios. However, the proposed framework is generic and applicable to all microservice-based applications, not limited to LTE environments.

### 2.1 LTE Terminology
- **User Equipment (UE)**: Any device used by an end-user for communication (e.g., cellphone).
- **Packet Data Network (PDN)**: An operator’s internal or external IP domain with which a UE wants to communicate, providing services such as the Internet.
- **PDN GateWay (PGW)**: The point of exit and entry of traffic from UE to PDN and vice versa, performing policy enforcement, packet filtering, and charging support.
- **Serving GateWay (SGW)**: Routes and forwards user data packets and facilitates mobility between LTE and other 3GPP technologies.
- **Serving and PDN GateWay Control plane (SPGW-C)**: Combination of PGW’s and SGW’s control planes.
- **Serving and PDN GateWay User plane (SPGW-U)**: Combination of PGW’s and SGW’s user planes.
- **E-UTRAN Node B (eNB)**: A complex base station connected to the core network, communicating directly and wirelessly with UEs.
- **Mobility Management Entity (MME)**: The key control node of LTE, performing authentication, paging, roaming, and SGW selection.
- **Home Subscriber Server (HSS)**: A user database containing user-related and subscription-related information.