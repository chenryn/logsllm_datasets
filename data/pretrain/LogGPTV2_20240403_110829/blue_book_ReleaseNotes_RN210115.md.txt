## 210115 (AzSK v.4.15.0)
### Feature updates
*	Default TLS 1.2 setting for AzSK storage account:
    * The storage account created under AzSKRG while installing CA using Install-AzSKContinuousAssurance command,will now be set up with ‘TLS version 1.2’ and ‘Allow Blob public access’ set to ‘Disabled’ by default.In order to apply these settings to your existing AzSK storage accounts, you’ll need to run following command:
    ```Powershell
       Update-AzSKContinuousAssurance -SubscriptionId $SubscriptionId 
    ```
* Security Verification Tests (SVTs):
    *	N/A.
* Log Analytics:
    * N/A.
* ARM Template Checker:
    * N/A.
* Org policy/external user updates (for non-CSEO users):
    *   Storage account created as part of Org policy setup via Install-AzSKOrganizationPolicy command will now be set up with TLS version 1.2 by default.To apply this setting for your existing org policy storage accounts, you just need to run following command:        
    ```Powershell
             Update-AzSKOrganizationPolicy -SubscriptionId  `
                                      -OrgName "Contoso" `
                                      -DepartmentName "IT" `
                                      -PolicyFolderPath "D:\ContosoPolicies" 
    ```
Note: The next few items mention features from recent releases retained for visibility in case you missed those release announcements:
*	Management of DevOps Kit-based AAD applications:
    *	You can list all the DevOps Kit-based service principals (used in continuous assurance) that are owned by you via the Get-AzSKInfo cmd marking those that are actively used for CA scans.
        ```Powershell
         Get-AzSKInfo –InfoType SPNInfo
          ```
*	Security Scanner for Azure DevOps (ADO) 
    *	You can try the scan cmdlet using:
        ```Powershell
        #ADO scan cmdlet is in a separate module called AzSK.AzureDevOps!
        Install-Module AzSK.AzureDevOps -Scope CurrentUser -AllowClobber    
        Get-AzSKAzureDevOpsSecurityStatus -OrganizationName "MicrosoftIT"`
                                        -ProjectNames "OneITVSO"`
                                        -BuildNames "build_name_here"`
                                        -ReleaseNames "release_name_here"  
         ```
*	Credential Hygiene helper cmdlets  
    * ```New-AzSKTrackedCredential``` to onboard a credential for tracking via DevOps Kit. You can set the reminder period (in days) for the credential.
    * ```Get-AzSKTrackedCredential``` to list the onboarded credential(s).
    * ```Update-AzSKTrackedCredential``` to update the credential settings and reset the last updated timestamp.
    * ```Remove-AzSKTrackedCredential``` to deboard a credential from AzSK tracking.
*	Privileged Identity Management (PIM) helper cmdlets (from earlier sprint)  
    * ```Set-AzSKPIMConfiguration``` (alias ```setpim```) for configuring/changing PIM settings
    * ```Get-AzSKPIMConfiguration``` (alias ```getpim```) for querying various PIM settings/status
    * Activating your PIM role is now as simple as this:
      ``` setpim -ActivateMyRole -SubscriptionId $sub -RoleName Owner -DurationInHours 8 -Justification 'ad hoc test'  ```
    * See docs [here](https://github.com/azsk/DevOpsKit-docs/blob/master/01-Subscription-Security/Readme.md#azsk-privileged-identity-management-pim-helper-cmdlets-1) for more.
*	(Preview) Security Scan for Azure Active Directory (AAD)
    *	You can scan security controls for your AAD tenant (as either an admin or even as a regular user) using the DevOps Kit AAD Security Scan module.
    *	Use following steps:
            ```Powershell
            # AAD scan cmdlets are packaged as a separate module (AzSK.AAD)
            Install-Module AzSK.AAD -Scope CurrentUser -AllowClobber
            Import-Module AzSK.AAD
            Get-AzSKAADSecurityStatusTenant    # check the tenant (admin)
            Get-AzSKAADSecurityStatusUser      # check objects you own (user)
            ``` 
    *	Caveats: 
        * Do not run these in the same PS session as AzSK. Start a new PS console.
        * Az- modules require .Net Framework v4.7.2.
        * By default, the current cmdlets will scan just 3 objects of each type (Apps/SPNs/Groups, etc.). This is until we work out how best to group/batch scans when scanning the entire tenant. If you want to scan more objects you can use the '-MaxObj' switch in the cmdlets.
### Other improvements/bug fixes
* Subscription Security:
    *   N/A
* SVTs: 
    *	N/A
* Controls:
   *	Fixed a bug in control ‘Azure_Subscription_AuthZ_Limit_ClassicAdmin_Count’. It will now fail in case there is an account having multiple classic admin roles e.g. account having both CoAdministrator and AccountAdministrator role 
   *   Fixed a bug in control 'Azure_Subscription_Configure_Conditional_Access_for_PIM. The Control will flag roles that have conditional accesss policy configured but do not have required acrs tag. Expected tags are  {"acrsRequired":true,"acrs":"urn:microsoft:req1"}.
   *	Fixed a bug in control Azure_SQLDatabase_DP_Enable_TDE. Now the control will pass if email notifications to either admins or to specific recipients are configured.
* Privileged Identity Management (PIM):
   *	N/A.
*	CICD: 
    *	N/A.
* ARM Template Checker:
    *    N/A.
* CA:
    *	N/A
* In-cluster CA:
    *    N/A. 
* Log Analytics:
    *   N/A
* Others:
    *  	N/A