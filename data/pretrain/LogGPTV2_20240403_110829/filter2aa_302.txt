某付宝登录js分析
收录于合集
#JS逆向
4个
aHR0cHM6Ly93d3cuYWxpcGF5LmNvbS8=
f12 network
Ctrl+Shift +F  局搜索需要解密的password关键字
2021-09-18 19:22
原创
不愿透露姓名的热⼼⽹友 ⼀位不愿透露姓名的热⼼⽹友
多次调试后最终在index.js中的393⾏找到getPassword的⽅法，转⽽搜索getPassword声明
位置；在index.js中4979⾏地⽅找到声明信息。
然后下断点，对⽐发包请求内容，发现n的内容password字段信息内容⼀⾄，⽽n是
e.alipayEncrypt(2,i,t)传过来的，所以只需要
由此可得：
1
return e.alipayEncrypt(2,i,t)
1
2
n --> e .alipayEncrypt()
e --> new s.RSA
先跟进下s.rsa
可以知道 s.RSA 是个 function  ，跟进 s.RSA 发现来到了 Wi  ⽅法，（名字不⼀样的原因可能是
在上⾯的代码重新赋值了名字，不过不重要。）发现这个⽅法是规定 key_size 和 exponent
的。
回到getpassword找到加密⽅法 e .alipayEncrypt()   ，发现也是 Wi， 接着发现 Wi 是从 Gi 过
来的.....这种情况下发现加密⽅法和其他js代码在同⼀个js⻚⾯内有⼏万⾏代码的只能费时间
选择性的扣有⽤代码了；
3
4
s -- > ?
.......
回到 getPassword ⽅法附近找到 s 是怎么来的，在4971⾏找到 s = security_crypto_200_index  
，这时候搜索 security_crypto_200_index  把js⽅法扣下来
security_crypto_200_index内容是键值对，我们只需要s.RSA也就是
security_crypto_200_lib_rsa
通过crtl+f 搜索相关信息可以找到security_crypto_200_lib_rsa开头，⽽结尾这个就是Wi
了，具体在哪⾃⼰判断和调试了，⼤概为下⾯内容
根据所需要的⽅法 在不考虑 i  变动的情况下调⽤代码，剩下的就是和 s.RSA ⼀样的步骤扣出
是 s.Base64  了
1
2
3
4
5
6
7
   security_crypto_200_index = function(t) {
        return t = {
            Base64: security_crypto_200_lib_base64,
            xor: security_crypto_200_lib_xor,
            RSA: security_crypto_200_lib_rsa
        }
    }()
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
security_crypto_200_lib_rsa = function(t) {
    function e(t, e, i) {
        null != t && ("number" == typeof t ? this.fromNumber(t, e, i) 
    }
    *********
    ************
    **************
    ****************
           return this.key
    }, Wi.prototype.getPrivateKey = function() {
        return this.getKey().getPrivateKey()
    }, Wi.prototype.getPrivateKeyB64 = function() {
        return this.getKey().getPrivateBaseKeyB64()
    }, Wi.prototype.getPublicKey = function() {
        return this.getKey().getPublicKey()
    }, Wi.prototype.getPublicKeyB64 = function() {
        return this.getKey().getPublicBaseKeyB64()
    }, t = Wi
}()
function getPassword(pwd) {
var s = security_crypto_200_lib_rsa;
var e = new s;
//var i = security_crypto_200_lib_base64;
//s.decode(options.TS);
e.setPublicKey("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAo0z/L+pelCPu6
DwDFAY/3ITzesr8lnNmYjHht4XUJvLYYBwvDbHMc8xi9sPK9ohVHIKRVLVmmZ9SdmuWYN
9HzCyyZ6kEHx+IDBPnulwjdeN/N0w25mVRhYDWxJ2/1C6cPIuNcISchOQdGKuAC0xR37i/k
WH9sjBidAQjageYgQoj1HX81flZaPve75Esue85AHZ0VIurjwx7uEuxvQtvCIUvX1bbF13TIYuT
bJbn/LrNHby1Kxp42ggNUjAkYUVSF7SC3UP+YGKruii7Vh1UnJ/rpVhjdt3It8le9px8H4Ltt9N
3hzU17rBnFpp2ZnmiZVtlfMvsStY54Fl5cSJVxQIDAQAB");
return e.alipayEncrypt(2, i, pwd)
}
完成，剩下i的内容在⽹⻚源代码就能找到，只需要把他扣给decode
喜欢此内容的⼈还喜欢
收录于合集 #JS逆向 4
上⼀篇 · JS逆向｜40分钟视频通杀⼤⼚登陆加密
⽤ CSS 和 JS 实现时钟效果
字节前端 ByteFE
收藏，⽇常必备的JS⼯具函数⼤全
前端码农
JS对象的属性是否有顺序？
总在落幕后