User: Please provide a Python script to regularly check whether the files in the server directory have been modified and send an email alert.
Assistant: The following is a sample script: ```python import os import time from datetime import datetime import smtplib from email.mime.text import MIMEText # Email configuration SMTP_SERVER = 'smtp.gmail.com' SMTP_PORT = 587 SMTP_USERNAME = 'your_email@gmail. com' SMTP_PASSWORD = 'your_email_password' ALERT_EMAIL = 'alert_email@example.com' # Monitoring configuration INTERVAL = 60 # Monitoring interval, unit: second WATCH_DIR = '/path/to/watch/dir' # Monitoring directory WATCH_PATTERN = '*. log' # Monitored file type# A dictionary that records file status, key is the file name, value is the last modification timestamp file_stats = {} def send_alert_email(filename, last_mod_time): """Send an alert email""" subject = f' File modification alert: {filename}' message = f'The file "{filename}" has been modified at {datetime.fromtimestamp(last_mod_time)}.' msg = MIMEText(message) msg['Subject'] = subject msg[' From'] = SMTP_USERNAME msg['To'] = ALERT_EMAIL with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server: server.starttls() server.login(SMTP_USERNAME, SMTP_PASSWORD) server.send_message(msg) while True: #traversal target For filename in os.listdir(WATCH_DIR): if filename.endswith(WATCH_PATTERN): filepath = os.path.join(WATCH_DIR, filename) last_mod_time = os.path.getmtime(filepath) if filename in file_stats and file_stats[filename] != last_mod_time: send_alert_email(filename, last_mod_time) file_stats[filename] = last_mod_time time.sleep(INTERVAL) ``` This script will traverse the target at regular intervals (controlled by the `INTERVAL` variable) The files in the directory, check whether the files have been modified. If the last modification time of a file is different from the last time it was checked, the script will send an alert email to the preset mailbox. The script uses `os.path.getmtime` to get the last modification time of the file. To save resources, the script will only check the file types specified by `WATCH_PATTERN`.