# How to Hack Millions of Routers

## Craig Heffner, Seismic LLC

### SOHO Router Security

#### Common Attack Techniques

1. **Cross-Site Request Forgery (CSRF)**
   - **Issue:** No trust relationship between the browser and the router.
   - **Mitigation:** Basic Authentication credentials cannot be forged.
   - **Countermeasure:** Anti-CSRF mechanisms are limited by the same-origin policy.

2. **DNS Rebinding**
   - **Prevention:** Tools like OpenDNS, NoScript, and DNSWall can prevent rebinding.
   - **Effectiveness:** Most traditional rebinding attacks no longer work.

3. **Multiple A Record Attack**
   - **Description:** Also known as DNS load balancing or redundancy.
   - **Mechanism:** The DNS response returns multiple IP addresses. The browser attempts to connect to each IP in order.
   - **Limitation:** Can rebind to any public IP address but not to RFC1918 (private) IP addresses.

### Rebinding to a Public IP

- **Target IP:** 2.3.5.8
- **Attacker IP:** 1.4.1.4
- **Attacker Domain:** attacker.com

**Process:**

1. **Initial DNS Query:**
   - What is the IP address for `attacker.com`?
   - Response: 1.4.1.4, 2.3.5.8

2. **HTTP Request:**
   - `GET / HTTP/1.1`
   - `Host: attacker.com`

3. **Rebinding:**
   - The browser sends the request to 2.3.5.8.
   - If the connection fails, it retries with 1.4.1.4.

4. **TCP RST:**
   - The attacker sends a TCP RST to terminate the connection.

### Rebinding to a Private IP

- **Target IP:** 192.168.1.1
- **Attacker IP:** 1.4.1.4
- **Attacker Domain:** attacker.com

**Process:**

1. **Initial DNS Query:**
   - What is the IP address for `attacker.com`?
   - Response: 1.4.1.4, 192.168.1.1

2. **HTTP Request:**
   - `GET / HTTP/1.1`
   - `Host: attacker.com`

3. **Rebinding:**
   - The browser sends the request to 192.168.1.1.

### Services Bound to All Interfaces

- **Netstat Output:**
  ```plaintext
  # netstat –l
  Active Internet connections (only servers)
  Proto Recv-Q Send-Q    Local Address       Foreign Address         State      
  tcp        0      0 *:80                    *:*                     LISTEN      
  tcp        0      0 *:53                    *:*                     LISTEN      
  tcp        0      0 *:22                    *:*                     LISTEN      
  tcp        0      0 *:23                    *:*                     LISTEN
  ```

### Firewall Rules Based on Interface Names

- **Example:**
  ```plaintext
  -A INPUT –i etho –j DROP
  -A INPUT –j ACCEPT
  ```

### IP Stack Implementations

- **RFC 1122 Models:**
  - **Strong End System Model:**
    - Ensures strict adherence to interface-specific routing.
  - **Weak End System Model:**
    - Allows more flexible routing, potentially enabling attacks.

**Weak End System Model Example:**

- **eth1:** 192.168.1.1
- **eth0:** 2.3.5.8

**Packet Flow:**

1. **TCP SYN Packet:**
   - Source IP: 192.168.1.100
   - Destination IP: 2.3.5.8
   - Destination Port: 80

2. **TCP SYN/ACK Packet:**
   - Source IP: 2.3.5.8
   - Destination IP: 192.168.1.100
   - Source Port: 80

3. **TCP ACK Packet:**
   - Source IP: 192.168.1.100
   - Destination IP: 2.3.5.8
   - Destination Port: 80

### Traffic Capture and End Result

- **Public IP Rebinding Attack:**
  - **Target IP:** 2.3.5.8
  - **Attacker IP:** 1.4.1.4
  - **Attacker Domain:** attacker.com

**Process:**

1. **Initial DNS Query:**
   - What is the IP address for `attacker.com`?
   - Response: 1.4.1.4, 2.3.5.8

2. **HTTP Request:**
   - `GET / HTTP/1.1`
   - `Host: attacker.com`

3. **Rebinding:**
   - The browser sends the request to 2.3.5.8.
   - If the connection fails, it retries with 1.4.1.4.

4. **TCP RST:**
   - The attacker sends a TCP RST to terminate the connection.

### Making the Attack Practical

- **Tool Release: Rebind**
  - Provides necessary services: DNS, Web, Firewall.
  - Serves JavaScript code.
  - Limits foreground activity.
  - Supports cross-domain XHR.
  - Works with all major browsers.
  - Real-time browsing of target routers via an HTTP proxy.

### More Fun with Rebind

- **Attacking SOAP Services:**
  - UPnP
  - HNAP
- **Proxy Attacks:**
  - To other websites via the user's browser.
  - As long as the site doesn't check the host header.

### DNS Rebinding Countermeasures

- **Am I Vulnerable?**
- **End-User Mitigations:**
  - Break attack conditions: interface binding, firewall rules, routing rules.
  - Disable the HTTP administrative interface.
  - Implement basic security precautions.

- **Blocking Attacks at the Router:**
  - Don't bind services to the external interface.
  - Re-configure firewall rules.
  - Use HTTPS/SSH.
  - Disable UPnP and HNAP.

- **Blocking Attacks at the Host:**
  - Re-configure firewall rules.
  - Configure dummy routes.

- **Basic Security Precautions:**
  - Change default passwords.
  - Keep firmware up to date.
  - Don't trust untrusted content.

### Vendor and Industry Solutions

- **Fix the same-origin policy in browsers.**
- **Implement the strong end system model in routers.**
- **Build DNS rebinding mitigations into routers.**

### Conclusion

- **Threat:** DNS rebinding still poses a threat to your LAN.
- **Tools:** Available to exploit DNS rebinding.
- **Prevention:** Only you can prevent these attacks.

### Q & A

- **Rebind Project:**
  - [Rebind GitHub](http://rebind.googlecode.com)
- **Contact:**
  - PI:EMAIL

### References

- **Java Security: From HotJava to Netscape and Beyond**
  - [Princeton University](http://www.cs.princeton.edu/sip/pub/oakland-paper-96.pdf)
- **Protecting Browsers from DNS Rebinding Attacks**
  - [Stanford University](http://crypto.stanford.edu/dns/dns-rebinding.pdf)
- **Design Reviewing the Web**
  - [YouTube](http://www.youtube.com/watch?v=cBF1zp8vR9M)
- **Intranet Invasion Through Anti-DNS Pinning**
  - [Black Hat USA 2007](https://www.blackhat.com/presentations/bh-usa-07/Byrne/Presentation/bh-usa-07-byrne.pdf)
- **Anti-DNS Pinning Demo**
  - [Jumperz.net](http://www.jumperz.net/index.php?i=2&a=3&b=3)
- **Same Origin Policy**
  - [Wikipedia](http://en.wikipedia.org/wiki/Same_origin_policy)
- **RFC 1122**
  - [FAQS.org](http://www.faqs.org/rfcs/rfc1122.html)
- **Loopback and Multi-Homed Routing Flaw**
  - [Bugtraq](http://seclists.org/bugtraq/2001/Mar/42)
- **TCP/IP Illustrated Volume 2, W. Richard Stevens**
  - Pages 218–219