MAC can eliminate, we simulated a congested network of nodes,
each trying to schedule a large amount of trafﬁc (80M bps of 1, 000
byte packets). We compare the amount of time the network spends
405060708090100135791113151719PercentageNumber of NodesPercentage of Channel Time Used for Transmitting DataFlashback-MAC, 20-80% Uplink-Downlink Data TrafficFlashback-MAC, 100-0% Uplink-Downlink Data TrafficCSMA/CA 20-80% Uplink-Downlink Data TrafficCSMA/CA 100-0% Uplink-Downlink Data TrafficRTS/CTS, 20-80% Uplink-Downlink Data TrafficRTS/CTS, 100-0% Uplink-Downlink Data TrafficCSMA/CARTS/CTSFlashback050100150200250300350400450500135791113151719PercentageNumber of NodesFlashback-MAC's Throughput Improvement vs. Wi-FiCSMA/CA 20-80% Uplink-Downlink Data TrafficCSMA/CA 100-0% Uplink-Downlink Data TrafficRTS/CTS, 20-80% Uplink-Downlink Data TrafficRTS/CTS 100-0% Uplink-Downlink Data TrafficCSMA/CARTS/CTS0.1110100100010000468101214161820Latency [ms]Number of NodesQueue Latency of Delay Sensitive PacketsFlashback, 100% Uplink Traffic, 2 Latency Sensitive NodesCSMA/CA, 100% Uplink Traffic, 2 Latency Sensitive NodesRTS/CTS, 100% Uplink Traffic, 2 Latency Sensitive Nodes050100150200250300350400450468101214161820PercentageNumber of NodesFlashback-MAC's Throughput Improvement vs. Wi-FiCSMA/CA, 100% Uplink Traffic, 2 Latency Sensitive NodesRTS/CTS 100% Uplink Traffic, 2 Latency Sensitive Nodes00.20.40.60.81246810EfficiencyNumber of ClientsEnergy Efficiency of Duty CyclingWi-FiFlashbackFlashback-MAC has signiﬁcantly higher throughput than CSMA/CA
on transmitting data with the amount of time the network spends on
being idle or transmitting control messages. We measured this time
for CSMA/CA, RTS/CTS and Flashback-MAC, under two scenar-
ios: full uplink trafﬁc, and a mix of 20% uplink trafﬁc and 80%
downlink. Fig. 11 shows the results of the simulation. As we can
see, as the network grows larger, the overhead for RTS/CTS be-
comes greater, up to a level of 50%, while CSMA/CA falls to a level
of about 77%. For CSMA/CA, as the number of nodes increases,
more collisions occur due to hidden nodes, and nodes experience
more packet loss and their bitrates deteriorate, which causes their
packets to occupy the channel for a longer time. For RTS/CTS,
the channel utilization decreases signiﬁcantly, because the nodes
spend more time contending on the channel in order to send their
RTS or CTS packets. Flashback-MAC completely eliminates the
hidden node problem of CSMA/CA, since it centrally schedules all
the nodes in the network. In addition, Flashback-MAC does not
suffer from RTS and CTS packet overhead, because it can send all
the node requests over the control channel, and it piggybacks the
request acknowledgements and scheduling decisions on the AP’s
ACKs. The reason Flashback-MAC has an overhead of about 8-
10%, is that it still spends the Wi-Fi SIFS inter-packet idle time
between sending a packet and receiving an ACK.
(up to 5.5×) in congested networks, because CSMA/CA suffers
from collisions due to hidden nodes, and hence nodes transmit at
lower bitrates. All the nodes in our simulator use a bitrate adapta-
tion algorithm that is based on packet loss. CSMA/CA’s throughput
can be improved, if we use a bitrate adaptation algorithm that dis-
cerns between SNR based packet loss and collision based packet
loss. In comparison with RTS/CTS, the extra time that Flashback-
MAC gains by not sending RTS and CTS packets, is translated into
an increase of up to 1.8× in throughput.
FIFO is of course a very basic scheduling algorithm. In order
to demonstrate a slightly more sophisticated scheme that utilizes
the demand map abstraction, we simulated a QoS-aware scheme,
where incoming requests are inserted into two queues: a delay sen-
sitive queue and a normal data queue. The delay sensitive queue is
emptied at 4× the rate of the normal data queue. Nodes can request
to schedule a delay sensitive message by simply ﬂashing a control
message with the corresponding QoS bits.
The QoS simulation uses a similar network to the FIFO simula-
tion. The only difference is that only two of the nodes send 1, 000
byte latency-sensitive packets at a relatively low rate (800kbps per
node), while the rest of the nodes are attempting to send regular
1, 000B packets at the high rate of 80M bps. Fig. 12 depicts the
results. As we can see, Flashback-MAC’s QoS aware schedule can
enforce that the latency of the delay-sensitive packets will be kept
below 1ms, while maintaining a signiﬁcantly higher throughput
than the Wi-Fi MAC protocols. Note that the low latency access is
enforced, despite the fact that the control plane is congested. This is
because control messages are small (180µs) relative to data pack-
ets. As a result, the QoS requests are promptly delivered to, and
serviced by the AP. In conclusion, this simulation emphasizes the
importance of decoupling the control and data planes.
6.1.2 Energy Proportional Data Plane
Flashback-MAC enables clients to operate the radios in an energy
proportional manner. Energy proportionality means that a radio has
to be awake only when it is sending or receiving useful trafﬁc, and
does not have to spend energy contending for channel access or
waiting to be served by the AP. The basic idea is simple: the default
mode for the client radio is to sleep. If a client wants to send pack-
ets to the AP, it wakes up and ﬂashes a control message. The AP
replies with the schedule, telling the client when it will have an op-
portunity to send its packet. The AP also informs the client if it has
any downlink packets destined to it. If the client has no packets to
send to the AP, it periodically (every 100ms) wakes up and ﬂashes
a control message to the AP asking if there are any outstanding
packets. The AP informs the client if it has any outstanding trafﬁc
and the schedule for that trafﬁc. The client then wakes up at the
appropriate time and waits for its packets to be delivered.
Fig. 12 plots the energy efﬁciency of a client using this proto-
col when compared to the state-of-the-art Wi-Fi Power Save Mode
(PSM) used to conserve energy. Energy efﬁciency is deﬁned as the
fraction of time a client radio is sending and receiving useful trafﬁc
relative to the total time it is awake with both protocols. Wi-Fi PSM
allows nodes to sleep with 100ms duty cycles, but if they have ei-
ther uplink or downlink trafﬁc, clients have to stay up until they get
served. As we can see, clients obtain near optimal energy efﬁciency
with Flashback, since clients do not have to stay up and contend to
access the network like in normal Wi-Fi.
6.2 Centralized Enterprise Wi-Fi
We can use Flashback-MAC to enable an enterprise Wi-Fi net-
work with the following properties.
• Seamless Mobility: Once a client authenticates with the net-
work, it should be able to roam around the entire enterprise
network and send and receive packets from the closest AP. It
should not have to spend time and energy in re-associating.
• Better Load and Interference Management: The network should
be able to assign clients dynamically to different APs to bal-
ance load. Within an AP, client performance should not suffer
due to interference from other nodes.
• QoS: The network should be able to provide QoS to prioritize
latency-sensitive trafﬁc.
Current networks struggle to offer such capabilities. First, if
clients are mobile, they are forced to re-associate with new APs
as they move around. The association protocol is time consuming,
since nodes need to wait for the beacons from the neighboring APs,
ﬁnd the one with the best signal strength, and then go through the
association protocol even though they need to connect to the same
enterprise network. Further, load balancing is hard, since clients
make decisions on which AP to connect to and the network manager
has little control over the allocation of clients to APs. Once con-
nected, interference problems are common due to scenarios such
as hidden terminals. Finally, the network has no capability of pro-
viding QoS. For example, there is no mechanism to provide low
latency connectivity for VoIP trafﬁc.
Flashback provides a general primitive to enable this network ar-
chitecture, namely, a decoupled control plane. Nodes can utilize
Flashback with the following protocol. When associating and au-
thenticating with the network for the ﬁrst time, nodes use Flashback
to send control messages that include their address and authentica-
tion information. These messages can be sent at any time, without
the node having to wait for the beacon and then contend for send-
ing an association request packet to the AP. Further, nodes can just
broadcast the Flashback association message, without specifying
the AP. Any AP which hears the association message forwards it
to a central controller. The controller assigns the client to the best
available AP depending on the load on each AP and provides it with
an authentication token. When the client wishes to initiate a ﬂow, it
ﬂashes a control message with the request, which includes the au-
thentication token. Since the token is recognized by all the APs in
the network, any AP can immediately schedule the request.
This protocol can ensure that client association and mobility is
seamless. First, clients do not have to associate with a particular AP
to be able to send and receive trafﬁc. Second, clients are presented
with a simple ﬂow abstraction: clients request a ﬂow setup, and the
controller just assigns the client the best possible AP to relay that
trafﬁc. This naturally allows for mobility, since there is no longer
a notion of being connected to an AP. Further, since the controller
can decide which APs to assign to which clients, it can dynamically
adjust to varying load and ensure that no AP is overloaded.
Note that this functionality is very difﬁcult or impossible to ob-
tain with normal RTS/CTS style control signaling that is coupled
with the data plane. Any type of control message requires a node to
contend for access with other transmissions, whether it’s for asso-
ciation or load-balancing.
7. RELATED WORK
Our ﬂashing mechanism and its name were mainly inspired by
FlashLinQ [21], a centrally synchronized peer-to-peer cellular pro-
tocol that also utilizes the positions of narrowband signals on dif-
ferent frequencies to encode scheduling information. Unlike Flash-
back, FlashLinQ requires tight and centralized symbol-level syn-
chronization (it uses cellular GPS based time synchronization), which
is not available in a distributed asynchronous network like Wi-Fi.
Flashback is related to prior work on pulse based messaging in
Zigbee networks [10], which allows a node to concurrently send
control messages with data transmissions. However, this technique
sends a time domain pulse across the entire bandwidth and corrupts
the whole packet. It requires the data transmission to be very re-
silient to interference, and therefore only works with protocols such
as Zigbee, which do not perform rate adaptation and have very ro-
bust link margins. Flashback on the other hand, exploits the unique
properties of OFDM to ﬂash in order to localize interference. More-
over, Flashback works under Wi-Fi’s rate adaptation mechanism,
where link margins are much smaller than Zigbee.
Most synchronized or centralized wireless networks use some
kind of independent control channel, which in many cases is phys-
ically separated from the data channel. For example, LTE has ded-
icated physical control channels both for downlink and uplink traf-
ﬁc [13, 8]. These control channels have pre-allocated frequencies,
which creates a clear demarcation between the control and data
channel bands. This type of frequency based separation is not possi-
ble for asynchronous distributed networks like Wi-Fi, because such
networks are not centrally managed. Hence, in Wi-Fi, the receiver
needs to re-synchronize each time to the transmitter’s transmission
(using the time-based preamble). This makes it very complicated
for the receiver to decode transmissions of multiple senders on dif-
ferent bands in the same time slot, as base stations do in LTE. In par-
ticular, LTE and WiMAX [1, 2] both utilize OFDMA, a multi-user
OFDM scheme that requires tight synchronization, where different
nodes can transmit simultaneously on different subcarriers.
In addition, similar to Flashback, Sen et al. [17], utilize a back
off arbitration mechanism based on randomly selecting subcarriers.
The main difference between the two control techniques is that Sen
et al. only use their technique when the data channel is idle, where
Flashback allows nodes to ﬂash concurrently with data transmis-
sions and therefore creates a decoupled control plane.
8. CONCLUSION
Flashback follows the classic networking architecture of decou-
pling the control and data planes. Moreover, it provides this sepa-
rate control plane at minimal overhead. We believe Flashback can
be applied to a number of problems in wireless networks, ranging
from fast network association, to mobility and power saving client
modes. Further, Flashback can serve as a substrate for distributed
coordination to tackle coexistence in dense network deployments.
We plan to explore these applications in our future work.
9. ACKNOWLEDGEMENTS
We would like to thank Aditya Gudipati and Steven Hong for
their help in setting up the experimental framework, and Manu
Bansal, Dinesh Bharadia, Israel Cidon and Jeffrey Mehlman for
their valuable feedback. We would also like to thank our shepherd,
Krishna Chintalapudi, and the anonymous reviewers for their com-
ments. Asaf Cidon is supported by the Leonard J. Shustek Stanford
Graduate Fellowship.
10. REFERENCES
[1] Ieee standard for local and metropolitan area networks, part 16: Air interface for
ﬁxed wireless broadband systems.
[2] Ieee standard for local and metropolitan area networks, part 16: Air interface for
ﬁxed wireless broadband systems, amendment 2: Physical and medium access
control layers for combined ﬁxed and mobile operation in licensed bands and
corrigendum 1.
[3] Labview system design software,http://www.ni.com/labview/.
[4] Ni pxie-8133 user manual, http://www.ni.com/pdf/manuals/372870b.pdf.
[5] CHANDRA, R., MAHAJAN, R., MOSCIBRODA, T., RAGHAVENDRA, R., AND
BAHL, P. A case for adapting channel width in wireless networks. In ACM
SIGCOMM (2008).
[6] CHENG, Y.-C., BELLARDO, J., BENKÖ, P., SNOEREN, A. C., VOELKER,
G. M., AND SAVAGE, S. Jigsaw: solving the puzzle of enterprise 802.11
analysis. In Proceedings of the 2006 conference on Applications, technologies,
architectures, and protocols for computer communications (New York, NY,
USA, 2006), SIGCOMM ’06, ACM, pp. 39–50.
[7] EUGENIO MAGISTRETTI, KRISHNA CHINTALAPUDI, B. R., AND RAMJEE,
R. Wiﬁ-nano: Reclaiming wiﬁ efﬁciency through 800ns slots. In Proc. of
MOBICOM 2011.
[8] GHOSH, A., RATASUK, R., XIAO, W., CLASSON, B., NANGIA, V., LOVE,
R., SCHWENT, D., AND WILSON, D. Uplink control channel design for 3gpp
lte. In Personal, Indoor and Mobile Radio Communications, 2007. PIMRC
2007. IEEE 18th International Symposium on (sept. 2007), pp. 1 –5.
[9] JUDD, G., AND STEENKISTE, P. Using emulation to understand and improve
wireless networks and applications. In Proceedings of the 2nd conference on
Symposium on Networked Systems Design & Implementation - Volume 2
(Berkeley, CA, USA, 2005), NSDI’05, USENIX Association, pp. 203–216.
[10] KAISHUN WU, HAOYU TAN, Y. L. J. Z. Q. Z., AND M.NI, L. Free side
channel: Bits over interference. In ACM MOBICOM (2010).
[11] KHURANA, S., KAHOL, A., AND JAYASUMANA, A. Effect of hidden terminals
on the performance of ieee 802.11 mac protocol. In Local Computer Networks,
1998. LCN ’98. Proceedings., 23rd Annual Conference on (oct 1998), pp. 12
–20.
[12] KUN TAN, JI FANG, Y. Z. S. C. L. S. J. Z., AND ZHANG, Y. Fine grained
channel access in wireless lan. In Proc. of SIGCOMM 2010.
[13] LOVE, R., KUCHIBHOTLA, R., GHOSH, A., RATASUK, R., CLASSON, B.,
AND BLANKENSHIP, Y. Downlink control channel design for 3gpp lte. In
Wireless Communications and Networking Conference, 2008. WCNC 2008.
IEEE (31 2008-april 3 2008), pp. 813 –818.
[14] MANGOLD, S., CHOI, S., MAY, P., KLEIN, O., HIERTZ, G., STIBOR, L.,
POLL CONTENTION, C., AND POLL, F. Ieee 802.11e wireless lan for quality of
service.
[15] NG, P. C., LIEW, S. C., SHA, K. C., AND TO, W. T. Experimental study of
hidden-node problem in ieee802.11 wireless networks *, 2005.
[16] PLESS, V. The Theory of Error Correcting Codes. Wiley Interscience Series in
Discrete Mathematics and Optimization. New York: John Wiley and Sons,
1989. Second Edition.
[17] SEN, S., ROY CHOUDHURY, R., AND NELAKUDITI, S. No time to countdown:
migrating backoff to the frequency domain. In ACM MobiCom (2011).
[18] SINGLETON, R. Maximum distance -nary codes. Information Theory, IEEE
Transactions on 10, 2 (apr 1964), 116 – 118.
[19] TELEKOMMUNIKATION, F., CZINK, N., B, B., VAZQUEZ-VILAR, G.,
JALLOUL, L., AND PAULRAJ, A. Stanford july 2008 radio channel
measurement campaign, 2008.
[20] VUTUKURU, M., BALAKRISHNAN, H., AND JAMIESON, K. Cross-layer
wireless bit rate adaptation. In Proceedings of the ACM SIGCOMM 2009
conference on Data communication (New York, NY, USA, 2009), SIGCOMM
’09, ACM, pp. 3–14.
[21] WU, X., TAVILDAR, S., SHAKKOTTAI, S., RICHARDSON, T., LI, J., LAROIA,
R., AND JOVICIC, A. Flashlinq: A synchronous distributed scheduler for
peer-to-peer ad hoc networks. In Communication, Control, and Computing
(Allerton), 2010 48th Annual Allerton Conference on (29 2010-oct. 1 2010),
pp. 514 –521.