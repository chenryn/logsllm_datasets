I use go version go1.5.1 darwin/amd64.
I write a simple http server like:
    package main
    import (
            "log"
            "net/http"
            "os"
            "os/signal"
    )
    func main() {
            c := make(chan os.Signal, 1)
            signal.Notify(c)
            go func() {
                    for s := range c {
                            log.Println("recv signal: ", s.String())
                    }
            }()
            http.HandleFunc("/hello", func(rw http.ResponseWriter, r *http.Request) {
                    resp, _ := http.Get("http://www.baidu.com")
                    if resp != nil && resp.Body != nil {
                            resp.Body.Close()
                    }
                    http.Error(rw, "ok", http.StatusOK)
            })
            log.Fatal(http.ListenAndServe(":8888", nil))
    }
Then, If I curl http://127.0.0.1:8888/hello and then press Ctrl-C very
quickly, the server will receive "broken pipe" signal. And if server receive
many broken pipe signal, the process will exit.