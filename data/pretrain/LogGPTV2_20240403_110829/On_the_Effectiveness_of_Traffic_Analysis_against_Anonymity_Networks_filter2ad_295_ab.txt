### Value Calculation and Correlation
The value is defined as the average throughput of the entry-to-client (and respective server-to-exit) interval that covers a given time point. This is calculated by dividing the total bytes transferred in the corresponding interval by the length of that interval. Time points that do not align with the intervals are ignored. Finally, we compute the correlation between the throughput values of the two aligned sets.

### 4. Experimental Evaluation

To evaluate our attack using data from public Tor relays, we used the setup shown in Figure 1. Victim clients were hosted at three different PlanetLab locations: Texas (US), Leuven (Belgium), and Corfu (Greece). These clients communicated via Tor circuits through our relay to a server under our control in Spain.

#### Flow Collection Using NetFlow Tools
In our first set of experiments, flow records were obtained from the server and the entry node using open-source flow generation and capture tools. We configured the active and inactive timers to 5 seconds each, providing a uniform view of the traffic with an adequate number of samples for accurate correlation computation.

**Experiment 1: Square-Wave Pattern**
- **Traffic Pattern:** The server injected a "square-wave" traffic pattern with an amplitude of approximately 2 Mbit/s, achieved by switching the server-to-exit traffic bandwidth between 2 Mbit/s and 30 Kbit/s every 20 seconds.
- **Results:** Figure 2(a) shows the throughput variations for five flows, including the one with the highest correlation to the server-to-exit flow (solid line). The victim flow had the highest correlation coefficient of 0.83 (out of 1100 other clients), while the second-highest correlation, for a non-victim client, was 0.17.

**Experiment 2: Step Pattern**
- **Traffic Pattern:** The server injected a more complex "step" pattern, switching the server-to-exit traffic throughput between approximately 1 Mbit/s, 50 Kbit/s, 300 Kbit/s, and 100 Kbit/s every 20 seconds.
- **Results:** Figure 2(b) shows the throughput variations for one such sample. The victim flow had the highest correlation coefficient of 0.84 (out of 874 other clients), while the second-highest correlation, for a non-victim client, was 0.25. Generally, the correlation between the server-to-exit and victim traffic was higher when the server injected the "step" pattern.

**Repetition and Analysis**
- **Repetition:** These experiments were repeated 90 times (15 times for each traffic pattern at each of the three client locations).
- **Average Correlation:** Figures 3(a) and 3(b) show that the average correlation between the server-to-exit and entry-to-victim traffic statistics (for the most correlated flows) was higher than the average correlation to non-victim client statistics. We correctly identified the victim in 76 out of 90 tests.
- **False Positives:** In four instances, the correlation of the injected traffic pattern with the victim client traffic was lower compared to some non-victim clients' traffic. This was primarily due to background network congestion and routing in Tor relays, which attempt to equally distribute available bandwidth among all circuits.

**Correction Strategy**
- To address these inaccuracies, we computed the average throughput of the clients' traffic over the experiment duration and subtracted it from the average throughput of the server-to-exit traffic. For the victim traffic, this difference is often among the smallest, helping to filter out flows that could lead to inaccurate correlation coefficients.

#### Flow Collection from Cisco Router
To evaluate the attack's effectiveness using data from our institutional edge router, we used the same experimental setup. However, the entry-node-to-client traffic statistics were gathered from our institutional router, configured with active and inactive timeouts of 60 and 15 seconds, respectively.

**Data Rectification**
- The data from the router was sparse and non-uniformly aligned compared to the flow records from server-to-exit. We applied our rectification strategy to align the flows, and the rectified flow values were used as input to the correlation coefficient formula.

**Experiment 3: Square-Wave Pattern with Cisco Data**
- **Traffic Pattern:** The server injected a "square-wave" traffic pattern with an amplitude of about 1 Mbit/s, switching the throughput every 30 seconds to capture adequate (â‰¥ 10) samples.
- **Results:** Figure 4(a) shows the bandwidth variation pattern for the server-to-exit and entry-node-to-client traffic, with more data points for server-to-exit and fewer for entry-to-client. Figure 4(b) presents the same data pattern after rectification.

**Elimination of Inadequate Flows**
- We eliminated flows whose average throughput was not comparable to the server-to-exit throughput variation. This helped in filtering out flows that could lead to inaccurate correlation coefficients, especially in experiments with sparse data from Cisco routers.

By following these steps, we were able to accurately identify the victim in most of the tests, demonstrating the effectiveness of our approach.