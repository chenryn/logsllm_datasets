more general case when XP is designated-veriﬁer: public veriﬁability is a special case where the
VERIFY oracle does not need to be simulated. The proof uses several game hops.
Game 0: This game is the same as the soundness experiment.
Game 1: This game is the same as Game 0 except for the following change. Game 1 aborts without
the adversary A winning if A outputs (R∗, x∗, v∗, ΠR∗) such that Verify(VKR, σx∗, v∗, ΠR∗) = 1
and c∗
xi, where ΠR∗ = (c∗
x, Π∗, Φ∗).
i=1 Fi
x (cid:54)=(cid:81)n
Now we prove the following claims.
1. Pr[G0(A) = 1] ≈ Pr[G1(A) = 1].
2. Pr[G1(A) = 1] ≈ 0.
Claim D.1. Pr[G0(A) = 1] ≈ Pr[G1(A) = 1].
Proof. AXP uses A to create a forgery for his challenger CXP as follows.
AXP receives pp from CXP and forwards it to A. While answering A’s oracle queries, AXP
maintains a tape T initialized to ∅.
AXP answers A’s KEYGEN(R) queries as follows. If R has been queried before (i.e., exists in
T), AXP returns ⊥. Otherwise, AXP runs VC.KeyGen algorithm as in the real scheme to generate
EK and VK himself. Let F = (F1, . . . , Fn) be part of VK. AXP queries CXP on KEYGEN(F ). Let
EKF be the response of CXP. AXP saves EKR := (EK, VK, EKF ) and VKR := (VK,·) in T and sends
EKR to A.
AXP answers A’s VERIFY(R, x, v, ΠR) queries as follows. If R is not in T, return 0. Else parse
ΠR as (cx, Π, Φx) and compute σx using XP.Hash(pp, x). Then, run VC.Verify(VKR, cx, v, Π) locally
and invoke CXP on VERIFY(F, σx, cx, Φx), where F is part of VK from T. If both veriﬁcations pass,
return 1. Else return 0.
Finally A comes up with a forgery (R∗, x∗, v∗, ΠR∗) such that R∗ is in T. AXP parses ΠR∗ as
xi where F = (F1, . . . , Fn) is part of the VK for relation R∗.
(c∗
x, Π∗, Φ∗) and checks if c∗
x, Φ∗) as a forgery to CXP.
If c∗
Success Probability: Let us say A succeeds with probability A. Then, AXP breaks the security of XP
scheme with probability A. Hence if A is non-negligible, then AXP has non-negligible probability
of success too.
Claim D.2. Pr[G1(A) = 1] ≈ 0.
i=1 Fi
xi, then output (F, x∗, c∗
x (cid:54)=(cid:81)n
x =(cid:81)n
i=1 Fi
32
Proof. AVC will use a VC challenger on one of the relations queried by A since he does not know
which relation A will forge on. Let R(cid:48) be the relation that AVC will choose from q relations that
AVC queries to the KEYGEN oracle.2 AVC begins by generating pp himself and forwarding it to A.
While answering oracle queries of A, he maintains a tape T initialized to ∅.
AVC answers A’s KEYGEN(R) queries as follows. If R is in T, return ⊥. Otherwise, if R is
the relation that AVC chooses for his forgery (i.e., set R(cid:48) to R), he sends R to his own challenger
CVC. AVC receives (EK, VK) back, runs XP.KeyGen(pp, F ) where F is part of VK, saves EKR =
(EK, VK, EKF ) and VKR = (VK, VKF ) to T and sends EKR to A. Finally, if R has not been queried
before and AVC does not choose it as his forgery, he runs HP.KeyGen, saves EKR and VKR in T and
sends EKR to A.
AVC answers A’s VERIFY(R, x, v, ΠR) queries as follows. If R is not in T return 0. Otherwise,
AVC invokes HP.Verify and returns its result. Note that he can run the veriﬁcation for R(cid:48) as well
since the VC scheme is publicly veriﬁable.
Finally A comes up with a forgery (R∗, x∗, v∗, ΠR∗) such that R∗ is in T. AVC parses ΠR∗ as
If not, it aborts. Otherwise, AXP outputs (x∗, v∗, Π∗) as a
x, Π∗, Φ∗) and checks if R∗ = R(cid:48).
(c∗
forgery for VC.
Success Probability: Let us say A succeeds with probability A. Then, AVC breaks the security of
the VC scheme with probability A/q. Hence, if A has non-negligible probability of success then
A/q is non-negligible too.
D.4 Proof of Theorem 4.2
Theorem 4.2. If the Strong External DDH Assumption holds, then the XP1 scheme above is
adaptively sound (Deﬁnition 3.1 for multiple relations).
We prove that the XP1 construction is adaptively sound for a single relation, then one can apply
To prove the theorem we deﬁne the following chain of hybrid games, and we denote by Gi(A)
Theorem 3.1 to extend it to multiple relations.
the output of Game i run with adversary A.
Recall the games deﬁned in Section 4.2 for Theorem 4.2.
Game 0: this is the adaptive soundness game of Deﬁnition 3.1 restricted to a single relation.
Game 1: this is a modiﬁcation of Game 0 as follows. When answering the (single) KEYGEN(F )
$←− Zp (instead of sampling
oracle query, the challenger sets w = γv + δ for random γ, δ
w $←− Zp). Next, when the adversary returns the proof (x∗, c∗, Φ∗), with Φ∗ = (T ∗, R∗), the
x∗
i . Then, if (T ∗/ ˆT )(ˆc/c∗)δ = 1 the
challenger computes ˆT ←(cid:81)
i and ˆc ←(cid:81)
x∗
outcome of the game is changed so that the adversary does not win.
i∈[1,n] Ti
i∈[1,n] Fi
As we show in Claim 1, Game 0 and Game 1 are statistically indistinguishable. The intuition
is that δ is information theoretically hidden from the adversary, which implies that the only
event which changes the game’s outcome happens with negligible probability.
Game 2: this is a modiﬁcation of Game 1 as follows. When answering the (single) KEYGEN(F )
oracle query, the challenger sets u = αv + β for random α, β $←− Zp (instead of sampling
u $←− Zp). Second, the challenger computes Ri ← H−α
i F
and Ti ← H β
i F δ
i .
−γ
i
2Precisely, AVC only needs to guess the index of the query in which R(cid:48) will be asked.
33
In Claim 2 we show that Game 2 is computationally indistinguishable from Game 1 under the
Strong External DDH assumption. Finally, in Claim 3 we show that any p.p.t. adversary has
negligible probability of winning in Game 2, under the Flexible co-CDH assumption (which
in turn reduces to Strong External DDH).
In what follows we prove the claims bounding the diﬀerence between the games and the prob-
ability of the adversary winning in Game 2.
Claim 1. | Pr[G0(A) = 1] − Pr[G1(A) = 1]| ≤ 1/p.
Proof. The proof is rather easy and follows by observing that the only noticeable diﬀerence in the
outcome of Game 0 and Game 1 occurs when A would win in Game 0 but it does not in Game 1.
Notice that such event is the one where ˆc (cid:54)= c∗ (this holds by the winning condition in Game 0)
and the equation (T ∗/ ˆT )(ˆc/c∗)δ = 1 is satisﬁed. We claim that this event happens with probability
at most 1/p over the random choice of δ ∈ Zp. This follows immediately by the fact that δ is
information theoretically hidden to A.
Claim 2. If the Strong External DDH Assumption holds, then Pr[G1(A) = 1] ≈ Pr[G2(A) = 1].
Proof. To prove the claim we actually use the assumption that for any p.p.t. adversary D (which
receives also full bilinear groups parameters), it holds
Pr[D(g(cid:126)η
1 , gα(cid:126)η
1 ) = 1]
1 , g(cid:126)ρ
1) = 1] ≈ Pr[D(g(cid:126)η
1 ) ∈ Gn
1 .
1 is a shorthand for
p , n is any integer of size bounded by poly(λ), and g(cid:126)η
where α $←− Zp, (cid:126)η, (cid:126)ρ $←− Zn
1 , . . . , gηn
(gη1
By using a simple hybrid argument, it is not hard to see that the above assumption can be
reduced to the DDH assumption in G1 with a 1/n loss factor.
Therefore, we proceed by showing that any adversary A for which | Pr[G1(A) = 1]−Pr[G2(A) =
1]| >  can be used to build an adversary D that distinguishes the above distributions with the
same probability  (and thus can break DDH with probability /n).
1) ∈
D receives the bilinear groups parameters (e, G1, G2, GT , p, g1, g2) and a pair of vectors (g(cid:126)η
1 × Gn
Gn
First of all, D sets H = g(cid:126)η
Next, on input the key generation query F from A, D simulates EKF = (F, T, R), VKF =
2. For i ∈ [1, n], it
(U, V, W ) as follows. D samples u, v, γ, δ $←− Zp, sets U ← gu
computes Ri ← g
Note that the elements U, V, W ∈ G2 are all uniformly random distributed as is the case in both
Game 1 and Game 2. If every ρi is random and independent so is every Ri, and thus D simulates
1) = 1] = Pr[G1(A) = 1]. Otherwise, if ρi = α · ηi, one can see that,
Game 1 to A, i.e., Pr[D(g(cid:126)η
by letting u = αv + β,3
1 , where (cid:126)ρ is either α · (cid:126)η, or random and independent.
1 and gives pp = (e, G1, G2, GT , p, g1, g2, H) to A.
i . Finally, if A wins, D outputs 1.
2, W ← V γgδ
and Ti ← H u
2 , V ← gv
−ρi
−γ
1 F
i
i Rv
i F w
1 , g(cid:126)ρ
1 , g(cid:126)ρ
−αηi
−γ
−γ
i = H−α
Ri = g
i F
F
1
i
−γ
(H−α
i = H αv+β
i F w
i Rv
Ti = H u
i F
i
,
)vF γv+δ
which follow exactly the distribution of Game 2, and thus Pr[D(g(cid:126)η
Therefore, we have that Pr[D(g(cid:126)η
the claim.
1) = 1] − Pr[D(g(cid:126)η
i F δ
i
1 ) = 1] = Pr[G2(A) = 1].
1 ) = 1] > , which concludes the proof of
1 , gα(cid:126)η
1 , gα(cid:126)η
= H β
1 , g(cid:126)ρ
i
i
3Such a β uniquely exists, although it is not explicitly known to D.
34
A(cid:48) receives the bilinear groups parameters (e, G1, G2, GT , p, g1, g2) and an element gv
Claim 3. If the Flexible co-CDH Assumption holds, then Pr[G2(A) = 1] ≈ 0.
Proof. We prove the claim by contradiction, by showing that for every p.p.t. A such that Pr[G2(A) =
1] >  is non-negligible, there is a p.p.t. A(cid:48) that breaks the co-CDH assumption.
that the goal of A(cid:48) is to return a pair (Z, Z(cid:48)) ∈ G2
follows.
GT , p, g1, g2, H) to A, where H = (H1, . . . , Hn).
2. We recall
1 such that Z (cid:54)= 1 and Z(cid:48) = Zv. A(cid:48) works as
for i ∈ [1, n], and gives pp = (e, G1, G2,
First of all, A(cid:48) samples ηi
Next, on input the key generation query F from A, A(cid:48) simulates EKF = (F, T, R), VKF =
2 , W ← V γgδ
2.
i . At this point let us observe that the
Let (x∗, c∗, Φ∗), with Φ∗ = (T ∗, R∗), be the proof returned by A. If A is successful, its proof
x∗
i . Recall that the successful veriﬁcation of (x∗, c∗, Φ∗) means
must verify and c∗ (cid:54)= ˆc =(cid:81)
$←− Zp, sets Hi ← gηi
2, U ← V αgβ
(U, V, W ) in the following way. A(cid:48) samples α, β, γ, δ $←− Zp, sets V ← gv
For i ∈ [1, n], it computes Ri ← g
view of A in the simulation provided by A(cid:48) is identical to the one in Game 2.
and Ti ← gβηi
−γ
F
i
−αηi
1
1 F δ
1
i∈[1,n] Fi
e(T ∗, g2) = e(
(cid:89)
H x∗
i
, U ) e(R∗, V ) e(c∗, W ).