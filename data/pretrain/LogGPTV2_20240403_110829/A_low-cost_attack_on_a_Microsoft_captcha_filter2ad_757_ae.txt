### Method of "Crowding Characters Together"

The method of "crowding characters together," when implemented correctly, appears to offer more merit than other methods in providing segmentation resistance. For instance, as discussed earlier, this method can be applied to enhance both the Microsoft and Google CAPTCHA schemes.

Motivated by similar observations, Yahoo introduced a new CAPTCHA in March 2008. As shown in Figure 19(a), challenge texts in this scheme are more compact, with characters often touching or connected by intersecting random lines. We use this latest Yahoo scheme as a cautionary example to illustrate how a seemingly sound principle can fail in practice.

**Figure 19:**
- (a) Example challenges from Yahoo’s latest scheme
- (b) Segmented images

We discovered several elementary but fatal flaws in this latest Yahoo scheme. For example, automated attacks would find it difficult or even impossible to segment a challenge if the number of characters is unknown. Unlike the MSN scheme, Yahoo's new CAPTCHA uses variable text lengths, which is a good design feature. However, we observed that the number of characters (n) in a challenge can be estimated with high accuracy by measuring the width of the text. Furthermore, this scheme is vulnerable to either a simplified version of our previous attack on the Yahoo scheme or a new "angular segmentation" attack that segments a challenge properly with angled lines. The first example in Figure 19(b) shows an extreme case where an "even cut" worked after n was estimated. The second example in Figure 19(b) shows a challenge correctly segmented by angled lines. Using these two simple segmentation algorithms, we achieved a segmentation success rate of around 33.4% on the latest Yahoo scheme. Consequently, we estimate that this scheme can be broken with an overall (segmentation and recognition) success rate of 25.9% (≈ .334 * .95^5; the average text length in this scheme is 5). Our detailed security analysis of this Yahoo scheme is discussed in [2]. We have informed Yahoo about this attack and the one described in Section 6.1. At their request, we kept our work confidential to allow them time to address the vulnerabilities.

### Usability Concerns

While the "crowding characters together" method, if implemented properly, appears to provide better security, it can introduce a usability issue that has been long overlooked: the creation of confusing character pairs. For example, under certain distortions in the Google scheme, "vv" resembles "w"; "cl" resembles "d"; "nn" resembles "m"; "rn" resembles "m"; "rm" resembles "nn"; "cm" resembles "an," and so on (see Table 4 for examples). In 2007, we observed that 6% of challenges generated by the Google scheme contained such characters, making them barely usable for human users or at least causing confusion.

**Table 4: Confusing Characters in the Google CAPTCHA**

| Image | Confusing Characters |
|-------|----------------------|
|       | Is the middle part 'd' or connected "cl"? |
|       | Another case of "cl" or "d" confusion. |
|       | Is the starting part 'm' or connected 'rn'? |
|       | A real headache: is the first part "m" or "rn", the middle part "inv" or "nw"? |

A similar usability problem exists in the latest Yahoo scheme, which also adopts the "crowding characters together" method (see Table 5 for examples). We observed that about 10% of challenges generated by this scheme contain such confusing characters, making them human-unsolvable or at least causing confusion. This problem was rarely observed in Yahoo Scheme 1.

**Table 5: Confusing Characters in the Latest Yahoo Scheme**

| Challenge Image | Answer |
|-----------------|--------|
|                 | yKKV5y or yKKT5y? |
|                 | SFrsFe or sFrsEe? |
|                 | HZKA8S or HKA8S? |
|                 | crar or crdr? |
|                 | znAzwG or zn4zwG? |
|                 | No idea what the second character is |
|                 | 6LmuF or 6LrnuF? |

Given the large number of unusable challenges, we recommend that any scheme implementing the "crowding characters together" mechanism should treat confusing character pairs with special care when distorting. For CAPTCHAs like the latest Yahoo scheme, not using intersecting lines at all might further improve usability without sacrificing security.

### Summary and Conclusion

For the first time, we have shown that although the Microsoft's MSN CAPTCHA demonstrates robustness in segmentation resistance, it is vulnerable to a simple, low-cost segmentation attack. Our attack achieved a segmentation success rate of 92%, implying that the MSN scheme can be broken with an overall (segmentation and recognition) success rate of more than 60%. Therefore, our work shows that the MSN scheme provides only a false sense of security.

Tested by its designers, the MSN scheme was resistant to prior segmentation attacks. However, for the first time, we used a color filling method for segmenting characters in a CAPTCHA. Combined with traditional vertical histogram analysis, this method proved powerful. We also found a way to automatically distinguish random arcs (used as false characters to confuse automated attacks) from valid characters by examining characteristics such as pixel counts, shapes, locations, relative positions, and distances to the baseline. We also designed a novel method for locating connected characters and estimating their number.

The attack on the MSN scheme was also tested on other CAPTCHAs. Specifically, a variant of the attack achieved a high segmentation rate on a CAPTCHA widely deployed by Yahoo until early this year. Additionally, a component of the attack, i.e., the CFS segmentation, is applicable to the Google CAPTCHA and multiple other schemes.

The Microsoft, Yahoo, and Google CAPTCHAs we analyzed represent three major segmentation resistance mechanisms implemented to date. While the mechanisms used in the MSN and Yahoo (Scheme 1) CAPTCHAs were broken by our attacks, the "crowding characters together" mechanism advocated by the Google CAPTCHA could provide better security against currently available attacks.

However, this mechanism is not without flaws. For the first time, we identified some issues with this mechanism as implemented in the Google and latest Yahoo schemes. Furthermore, we identified a long-ignored usability problem introduced by this increasingly popular segmentation-resistant mechanism. We also discussed countermeasures for addressing these security and usability concerns. We expect that with all the enhancements learned from previous failures, the "crowding characters together" mechanism will become more robust and user-friendly.

Overall, these contributions further our understanding of the design of better CAPTCHAs, particularly the design and implementation of segmentation resistance mechanisms.

### Acknowledgments

We are grateful to Brian Randell for proofreading an early version of this paper and for his many useful comments. Comments and suggestions from Philippe Golle and anonymous reviewers also helped to improve this paper.

### References

[1] L. von Ahn, M. Blum, and J. Langford. “Telling Humans and Computers Apart Automatically,” CACM, V47, No2, 2004.
[2] J. Yan and A. S. El Ahmad. “Is cheap labour behind the scene? - Low-cost automated attacks on Yahoo CAPTCHAs,” School of Computing Science Technical Report, Newcastle University, England, 2008.
[3] K. Chellapilla and P. Simard, “Using Machine Learning to Break Visual Human Interaction Proofs,” Neural Information Processing Systems (NIPS), MIT Press, 2004.
[4] K. Chellapilla, K. Larson, P. Simard, and M. Czerwinski, “Building Segmentation Based Human-friendly Human Interaction Proofs,” 2nd Int’l Workshop on Human Interaction Proofs, Springer-Verlag, LNCS 3517, 2005.
[5] K. Chellapilla, K. Larson, P. Simard, and M. Czerwinski, “Designing human friendly human interaction proofs,” ACM CHI’05, 2005.
[6] K. Chellapilla, K. Larson, P. Simard, M. Czerwinski, “Computers beat humans at single character recognition in reading-based Human Interaction Proofs,” 2nd Conference on Email and Anti-Spam (CEAS), 2005.
[7] Sam Hocevar. PWNtcha - captcha decoder web site, http://sam.zoy.org/pwntcha/, accessed Jan 2008.
[8] Microsoft Corporation. “Human Interaction Proof (HIP) -- Technical and Market Overview,” 2006. Available at http://download.microsoft.com/.../Human_Interaction_Proof_Technical_Overview.doc. Accessed Jan 2008.
[9] G. Mori and J. Malik. “Recognising objects in adversarial clutter: breaking a visual CAPTCHA,” IEEE Conference on Computer Vision & Pattern Recognition (CVPR), 2003.
[10] G. Moy, N. Jones, C. Harkless, and R. Potter. “Distortion estimation techniques in solving visual CAPTCHAs,” IEEE CVPR, 2004.
[11] P. Simard, R. Szeliski, J. Benaloh, J. Couvreur, and I. Calinov, “Using character recognition and segmentation to tell computers from humans,” International Conference on Document Analysis and Recognition (ICDAR), 2003.
[12] P. Simard, D. Steinkraus, J. Platt. “Best Practice for Convolutional Neural Networks Applied to Visual Document Analysis,” International Conference on Document Analysis and Recognition (ICDAR), IEEE Computer Society, Los Alamitos, pp. 958-962, 2003.
[13] C. Pope and K. Kaur. “Is It Human or Computer? Defending E-Commerce with CAPTCHA,” IEEE IT Professional, March 2005, pp. 43-49.
[14] J. Yan and A. S. El Ahmad. “Breaking Visual CAPTCHAs with Naïve Pattern Recognition Algorithms,” in Proc. of the 23rd Annual Computer Security Applications Conference (ACSAC’07). FL, USA, Dec 2007. IEEE computer society. pp 279-291.
[15] J. Yan. “Bot, Cyborg and Automated Turing Test,” the Fourteenth International Workshop on Security Protocols, Cambridge, UK, Mar 2006. Also available at http://www.cs.ncl.ac.uk/research/pubs/trs/papers/970.pdf.
[16] https://signup.live.com/hmnewuser.aspx?mkt=en-us&revipc=CN&ts=3970181&sh=WsBO&hm=1&ru=http%3a%2f%2fmail.live.com%2f%3fnewuser%3dyes&rx=http%3a%2f%2fget.live.com%2fmail%2foverview&rollrs=04&lic=1.
[17] Dan Goodin, “Automated crack for Windows Live captcha goes wild,” The Register, Feb 8, 2008. http://www.theregister.co.uk/2008/02/08/microsoft_captcha_buster/.
[18] Websense Security Labs, “Streamlined anti-CAPTCHA operations by spammers on Microsoft Windows Live Mail,” Feb 6, 2008. http://securitylabs.websense.com/content/Blogs/2907.aspx.
[19] J. Elson, JR. Douceur, J. Howell, and J. Saul. “Asirra: a CAPTCHA that exploits interest-aligned manual image categorization.” ACM CCS’07.
[20] “Yahoo! CAPTCHA is broken,” available at http://network-security-research.blogspot.com/2008/01/yahoo-captcha-is-broken.html.
[21] J. Yan and A. S. El Ahmad. “Usability of CAPTCHAs - Or, Usability issues in CAPTCHA design,” the fourth Symposium on Usable Privacy and Security, Pittsburgh, USA, July 2008.
[22] J. Yan and A. S. El Ahmad. “A Low-cost Attack on a Microsoft CAPTCHA,” School of Computing Science Technical Report, Newcastle University, England, 2008.