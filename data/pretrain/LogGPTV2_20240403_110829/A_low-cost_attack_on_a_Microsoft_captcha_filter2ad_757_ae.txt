method  of  “crowding  characters  together”,  if  implemented 
properly, does appear to have more merit than other methods in 
providing  segmentation  resistance.  For  example,  as  discussed 
above, it can be applied to improve both the Microsoft and Google 
schemes.  
Probably  motivated  by  the  same  observation,  Yahoo  rolled  out 
their  new  CAPTCHA  in  March  2008.  As  shown  in  Fig  19  (a), 
challenge  texts  in  this  scheme  are  more  compacted  than  before, 
and characters are usually connected - they either touch with each 
other, or are connected by intersecting random lines. We use this 
latest Yahoo scheme as the last cautionary example in this paper 
to  show  how  a  seemingly  sound  principle  can  go  wrong  in 
practice.  
(a) 
(b) 
Fig 19. Yahoo’s latest scheme (a) example challenges; (b) 
segmented images 
We  discovered  a  number  of  elementary  but  fatal  flaws  in  this 
latest Yahoo scheme. For example, it would be difficult or even 
impossible for an automated attack to segment a challenge if the 
number  of  characters  in  the  challenge  is  unknown.  Unlike  the 
MSN  scheme,  the  Yahoo’s  new  CAPTCHA  uses  a  varied  text 
length, which is a good design feature. However, we observed that 
the number of characters (n) in a challenge can be estimated with 
a  high  success  rate  by  measuring  the  width  of  the  text  in  the 
challenge.  Furthermore,  this  scheme  is  vulnerable  to  either  a 
simplified version of our attack on the previous Yahoo scheme, or 
a  new  “angular  segmentation”  attack  that  segments  a  challenge 
properly with angled lines. The first example in Fig 19 (b) shows 
an  extreme  case,  where  a  challenge  is  vulnerable  to  the  first 
attack: an “even cut” worked after n was estimated. The second 
example  in  Fig  19  (b)  shows  that  a  challenge  was  correctly 
segmented by angled lines. Using two such simple segmentation 
algorithms  with  associated  rules  to  identify  which  algorithm  to 
use, we achieved a segmentation success rate of around 33.4% on 
the latest Yahoo scheme. As a result, we estimate that this scheme 
can  be  broken  with  an  overall  (segmentation  and  recognition) 
success  rate  of  25.9%  (≈  .334*.95^5;  the  average  text  length  in 
this  scheme  is  5).  Our  detailed  security  analysis  of  this  Yahoo 
scheme is discussed in [2]. We have informed Yahoo this attack 
as well as the attack described in Section 6.1. Responding to their 
request, we kept our work confidential to allow them time to fix 
the vulnerabilities. 
On  the  other  hand,  while  the  “crowding  characters  together” 
method,  if  implemented  properly,  appears  to  provide  better 
security,  it  can  introduce  a  usability  shortcoming  that  has  been 
long  ignored,  namely  a  new  type  of  confusing  characters.  For 
example,  under  some  distortions  in  the  Google  scheme,  “vv” 
resembles  “w”;  “cl”  resembles  “d”;  “nn”  resembles  “m”;  “rn” 
resembles “m” ; “rm” resembles “nn”; “cm” resembles “an”, and 
so on (see Table 4 for a few examples). In 2007, we observed that 
6% of challenges generated by the Google scheme contained such 
characters, and would barely be usable for human users, or at least 
they  would  create  confusion  so  that  the  users  could  not  be  sure 
what the right answers should be.  
Table 4. Confusing characters in the Google CAPTCHA 
Image 
Confusing characters 
the middle part is ‘d” or 
connected “cl”? 
Another case of “cl” or “d” 
confusion. 
the starting part is ‘m’ or 
connected ‘rn”? 
A real headache: is the first 
part “m” or “rn”, the middle 
part “inv” or “nw”? 
A  similar  usability  problem  also  exists  in  the  latest  Yahoo 
scheme, which adopts the “crowding characters together” method 
(see Table 5 for some examples). We observed that about 10% of 
challenges  generated  by  this  scheme  contain  such  confusing 
characters, and thus would be human unsolvable or at least cause 
confusion. However, this problem was rarely observed in Yahoo 
Scheme 1. 
Table 5. Confusing characters in the latest Yahoo scheme 
Challenge image 
Answer 
yKKV5y or yKKT5y? 
SFrsFe or sFrsEe? 
HZKA8S or HKA8S? 
crar or crdr? 
znAzwG or zn4zwG? 
No idea what the second character is 
6LmuF or 6LrnuF? 
Given  the  large  number  of  unusable  challenges  observed,  we 
recommend  that  any  scheme  that  implements  this  “crowding 
characters  together”  mechanism  treat  confusing  character  pairs 
with  special  care  when  distorting 
for 
CAPTCHAs such as the latest Yahoo scheme, it appears that not 
using intersecting lines at all would further improve the scheme’s 
usability without sacrificing its security.  
8.  SUMMARY AND CONCLUSION 
For  the  first  time,  we  have  shown  that  although  the  Microsoft’s 
MSN  CAPTCHA 
robustness  on 
segmentation  resistance,  it  is  vulnerable  to  a  simple,  low-cost 
segmentation  attack.  Our  attack  has  achieved  a  segmentation 
intentionally  bases 
them.  Moreover, 
its 
it 
that 
is  easy 
success rate of 92%, and this implies that the MSN scheme can be 
broken  with  an  overall  (segmentation  and  then  recognition) 
success  rate  of  more  than  60%.  Therefore,  our  work  shows  that 
the MSN scheme provides only a false sense of security.  
Tested by its designers, the MSN scheme was resistant to prior art 
segmentation attacks. However, for the first time, we used a color 
filling  method  for  segmenting  characters  in  a  CAPTCHA. 
Together with traditional vertical histogram analysis, this method 
has  proven  powerful.  We  also  found 
to 
automatically  tell  random  arcs  (which  were  used  as  false 
characters in the scheme to confuse automated attacks) from valid 
characters  by  examining  characteristics  such  as  pixel  counts, 
shapes, locations, relative positions, and distances to baseline. We 
also  designed  a  novel  method  for  locating  connected  characters 
and estimating the number of such characters.  
The  attack  on  the  MSN  scheme  was  also  tested  on  other 
CAPTCHAs. In particular, a variant of the attack has achieved a 
high segmentation rate on a CAPTCHA that was widely deployed 
by  Yahoo  until  early  this  year.  In  addition,  a  component  of  the 
attack,  i.e.  the  CFS  segmentation,  is  applicable  to  the  Google 
CAPTCHA and multiple other schemes. 
The Microsoft, Yahoo and Google CAPTCHAs we have analysed 
represented  three  major  segmentation  resistance  mechanisms 
implemented to date. While the mechanisms used in the MSN and 
the Yahoo (scheme 1) CAPTCHAs were broken by our attacks, it 
appears  that  the  “crowding  characters  together”  mechanism 
advocated by the Google CAPTCHA could provide better security 
against currently available attacks.  
However, this mechanism was not worry free. For the first time, 
we identified some flaws of this mechanism as implemented in the 
Google and the latest Yahoo schemes. Furthermore, we identified 
a long ignored usability problem introduced by this increasingly 
popular  segmentation  resistant  mechanism.  We  also  discussed 
countermeasures  for  addressing  these  security  and  usability 
concerns.  We  expect  that  with all  the  enhancements  learnt  from 
previous failures, the “crowding characters together” mechanism 
will become more robust and user friendly. 
Overall, all these contribute to furthering current understanding of 
the  design  of  better  CAPTCHAs,  in  particular  the  design  and 
implementation of segmentation resistance mechanisms.  
To conclude this paper, we have the following. CAPTCHA design 
is  an  interdisciplinary  topic  where  expertise  from  multiple 
domains plays an important role. As demonstrated in this paper, 
security  engineering  expertise  and  experience,  in  particular 
adversarial  thinking  skills  (i.e.  identifying  what  can  go  wrong), 
can  make  a  unique  and  significant  contribution 
the 
improvement  of  the  robustness  of  CAPTCHAs,  but  were  not  in 
place  when  either  Microsoft,  Yahoo  or  Google  were  designing 
their schemes.  
Another important lesson is that even if segmentation resistance is 
a  sound  principle,  the  devil  is  in  the  details.  The  techniques  we 
have reported in this paper, in particular those used on the MSN 
and  two  Yahoo  CAPTCHAs,  demonstrate  new  methods  for 
evaluating the strength of segmentation resistance mechanisms.  
The  relatively  wide  applicability  of  our  attack  on  the  MSN 
scheme  is  encouraging.  However,  we  doubt  that  there  is  a 
universal  segmentation  attack  that  is  applicable  to  all  text 
to 
CAPTCHAs, given that hundreds of design variations exist [19]. 
Instead, a more realistic expectation is to create a toolbox (i.e. a 
collection  of  algorithms  and  attacks,  ideally  organized  in  a 
composable way) for evaluating the strength of CAPTCHAs – this 
is our ongoing work.  
Designing  CAPTCHAs  that  exhibit  both  good  robustness  and 
usability  is  much  harder  that  it  might  appear  to  be.  The  current 
collective  understanding  of  this  topic  is  still  in  its  infancy.  To 
evolve  the  design  of  CAPTCHA,  a  young  but  important  topic, 
from  an  art  into  a  science  still  requires  considerable  study.  Our 
experience  suggests  that  CAPTCHA  will  go  through  the  same 
process  of  evolutionary  development  as  cryptography,  digital 
watermarking  and  the  like,  with  an  iterative  process  in  which 
successful  attacks  lead  to  the  development  of  more  robust 
systems.  
9.  ACKNOWLEDGMENTS 
We are grateful to Brian Randell for proofreading an early version 
of  this  paper  and  many  useful  comments.  Comments  and 
suggestions  from  Philippe  Golle  and  anonymous  reviewers  also 
helped to improve this paper.  
10.  REFERENCES 
[1]  L von Ahn, M Blum and J Langford. “Telling Humans and 
Computer Apart Automatically”, CACM, V47, No2, 2004. 
[2]  J Yan and A S El Ahmad. “Is cheap labour behind the scene? 
- Low-cost automated attacks on Yahoo CAPTCHAs”, 
School of Computing Science Technical Report, Newcastle 
University, England, 2008. 
[3]  K Chellapilla and P Simard, “Using Machine Learning to 
Break Visual Human Interaction Proofs”, Neural Information 
Processing Systems (NIPS), MIT Press, 2004. 
[4]  K Chellapilla, K Larson, P Simard and M Czerwinski, 
“Building Segmentation Based Human-friendly Human 
Interaction Proofs”, 2nd Int’l Workshop on Human 
Interaction Proofs, Springer-Verlag, LNCS 3517, 2005. 
[5]  K Chellapilla, K Larson, P Simard and M Czerwinski, 
“Designing human friendly human interaction proofs”, ACM 
CHI’05, 2005.  
[6]  K Chellapilla, K Larson, P Simard, M Czerwinski, 
“Computers beat humans at single character recognition in 
reading-based Human Interaction Proofs”, 2nd Conference 
on Email and Anti-Spam (CEAS), 2005.  
[7]  Sam Hocevar. PWNtcha - captcha decoder web site, 
http://sam.zoy.org/pwntcha/, accessed Jan 2008.  
[8]  Microsoft Corporation. “Human Interaction Proof (HIP) -- 
Technical and Market Overview”, 2006.  Available at 
http://download.microsoft.com/.../Human_Interaction_Proof_
Technical_Overview.doc. Accessed Jan 2008. 
[9]  G Mori and J Malik. “Recognising objects in adversarial 
clutter: breaking a visual CAPTCHA”, IEEE Conference on 
Computer Vision & Pattern Recognition (CVPR), 2003.  
[10] G Moy, N Jones, C Harkless and R Potter. “Distortion 
estimation techniques in solving visual CAPTCHAs”, IEEE 
CVPR, 2004. 
[11] P Simard, R Szeliski, J Benaloh, J Couvreur and I Calinov, 
“Using character recognition and segmentation to tell 
computers from humans”, International Conference on 
Document Analysis and Recognition (ICDAR), 2003.    
[12] P Simard, D Steinkraus, J Platt. “Best Practice for 
Convolutional Neural Networks Applied to Visual Document 
Analysis”, International Conference on Document Analysis 
and Recognition (ICDAR), IEEE Computer Society, Los 
Alamitos, pp.958-962, 2003.  
[13] C Pope and K Kaur. “Is It Human or Computer? Defending 
E-Commerce with CAPTCHA”, IEEE IT Professional, 
March 2005, pp. 43-49 
[14] J Yan and A S El Ahmad. “Breaking Visual CAPTCHAs 
with Naïve Pattern Recognition Algorithms”, in Proc. of the 
23rd Annual Computer Security Applications Conference 
(ACSAC’07). FL, USA, Dec 2007. IEEE computer society. 
pp 279-291. 
[15] J Yan. “Bot, Cyborg and Automated Turing Test”, the 
Fourteenth International Workshop on Security Protocols, 
Cambridge, UK, Mar 2006. Also available at 
http://www.cs.ncl.ac.uk/research/pubs/trs/papers/970.pdf. 
[16] https://signup.live.com/hmnewuser.aspx?mkt=en-
us&revipc=CN&ts=3970181&sh=WsBO&hm=1&ru=http%
3a%2f%2fmail.live.com%2f%3fnewuser%3dyes&rx=http%3
a%2f%2fget.live.com%2fmail%2foverview&rollrs=04&lic=
1 
[17] Dan Goodin, “Automated Automated crack for Windows 
Live captcha goes wild”, The Register, Feb 8, 2008. 
http://www.theregister.co.uk/2008/02/08/microsoft_captcha_
buster/ 
[18] Websense Security Labs, “Streamlined anti-CAPTCHA 
operations by spammers on Microsoft Windows Live Mail”, 
Feb 6, 2008. 
http://securitylabs.websense.com/content/Blogs/2907.aspx 
[19] J Elson, JR Douceur, J Howell and J Saul. “Asirra: a 
CAPTCHA that exploits interest-aligned manual image 
categorization”. ACM CCS’07. 
[20] “Yahoo! CAPTCHA is broken”, available at http://network-
security-research.blogspot.com/2008/01/yahoo-captcha-is-
broken.html. 
[21] J Yan and A S El Ahmad. “Usability of CAPTCHAs - Or, 
Usability issues in CAPTCHA design”, the fourth 
Symposium on Usable Privacy and Security, Pittsburgh, 
USA, July 2008. 
[22] J Yan and A S El Ahmad. “A Low-cost Attack on a 
Microsoft CAPTCHA”, School of Computing Science 
Technical Report, Newcastle University, England, 2008.