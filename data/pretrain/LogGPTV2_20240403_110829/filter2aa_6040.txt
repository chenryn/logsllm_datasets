```plaintext
.\" Copyright (C) 2001 Andries Brouwer
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date. The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein. The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH EXIT 3 2001-11-17 "" "Linux Programmer's Manual"
.SH NAME
exit \- 使程序正常终止
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "void exit(int " status );
.fi
.SH DESCRIPTION
函数 \fBexit()\fP 使程序正常终止。返回给父进程的退出状态是 \fIstatus & 0377\fP（参见
.BR wait (2)
）。所有通过 \fBatexit()\fP 和 \fBon_exit()\fP 注册的函数将按注册顺序的相反顺序依次执行。使用 \fItmpfile()\fP 创建的文件将被删除。
.LP
C 标准定义了两个值 \fIEXIT_SUCCESS\fP 和 \fIEXIT_FAILURE\fP，可以作为 \fBexit()\fP 的参数，分别表示成功和失败退出。
.SH RETURN VALUE
函数 \fBexit()\fP 不会返回。
.SH CONFORMING TO
SVID 3, POSIX, BSD 4.3, ISO 9899 (``ANSI C'')
.SH NOTES
在 \fBexit()\fP 处理过程中，可能会使用 \fBatexit()\fP 和 \fBon_exit()\fP 注册其他函数。通常，最后注册的函数将从已注册函数链中移除并执行。如果在处理过程中再次调用 \fBexit()\fP 或 \fBlongjmp()\fP，行为将是未定义的。
.LP
相对于使用 0 和非零值 1 或 -1，使用 \fIEXIT_SUCCESS\fP 和 \fIEXIT_FAILURE\fP 可以稍微增加一些可移植性（对非 Unix 环境）。特别是，VMS 使用不同的约定。
.LP
BSD 尝试标准化退出代码 - 请参阅文件
.IR sysexits.h
。
.LP
在 \fBexit()\fP 之后，退出状态必须传递给父进程。这里有三种情况：
1. 如果父进程设置了 SA_NOCLDWAIT 或将 SIGCHLD 的处理设置为 SIG_IGN，则该状态将被忽略，退出进程立即消亡。
2. 如果父进程没有表示它对退出状态不感兴趣，但只是不再等待，则退出进程将成为僵尸进程（“zombie”），直到父进程调用 \fIwait()\fP 函数族之一时获取退出状态。
3. 如果实现支持 SIGCHLD 信号，信号将发送到父进程。如果父进程设置了 SA_NOCLDWAIT，行为将是未定义的。
.LP
如果进程是一个会话领导进程，并且其控制终端是会话的控制终端，则该终端的前台进程组中的每个进程都将收到 SIGHUP 信号；终端将与该会话断开，并可以被新的控制进程获取。
.LP
如果进程的退出使得一个进程组成为孤儿，并且新近成为孤儿的进程组中有任何进程被终止，则该进程组中的所有进程将依次收到 SIGHUP 和 SIGCONT 信号。
.SH SEE ALSO
.BR _exit (2),
.BR wait (2),
.BR atexit (3),
.BR on_exit (3),
.BR tmpfile (3)
```