title:Application level attacks on Connected Vehicle Protocols
author:Ahmed Abdo and
Sakib Md. Bin Malek and
Zhiyun Qian and
Qi Zhu and
Matthew Barth and
Nael B. Abu-Ghazaleh
Application level attacks on Connected Vehicle Protocols
Zhiyun Qian
Department of Computer
Science and Engineering
University of California,
Riverside
Email: PI:EMAIL
Nael Abu-Ghazaleh
Department of Computer
Science and Engineering
University of California,
Riverside
Ahmed Abdo
Department of Electrical
and Computer Engineering
University of California,
Riverside
Sakib Md Bin Malek
Department of Computer
Science and Engineering
University of California,
Riverside
Email: PI:EMAIL
Email: PI:EMAIL
Qi Zhu
Department of Electrical
and Computer Engineering
Northwestern University
Email: PI:EMAIL
Matthew Barth
Department of Electrical
and Computer Engineering
University of California,
Riverside
Email: PI:EMAIL
Email: PI:EMAIL
Abstract
Connected vehicles (CV) applications are an emerging new
technology that promises to revolutionize transportation sys-
tems. CV applications can improve safety, efﬁciency, and
capacity of transportation systems while reducing their envi-
ronmental footprints. A large number of CV applications have
been proposed towards these goals, with the US Department
of Transportation (US DOT) recently initiating three deploy-
ment sites. Unfortunately, the security of these protocols has
not been considered carefully, and due to the fact that they
affect the control of vehicles, vulnerabilities can lead to break-
downs in safety (causing accidents), performance (causing
congestion and reducing capacity), or fairness (vehicles cheat-
ing the intersection management system). In this paper, we
perform a detailed analysis of a recently published CV-based
application protocol, Cooperative Adaptive Cruise Control
(CACC), and use this analysis to classify the types of vulnera-
bilities that occur in the context of connected Cyber-physical
systems such as CV. We show using simulations that these
attacks can be extremely dangerous: we illustrate attacks that
cause crashes or stall emergency vehicles. We also carry out a
more systematic analysis of the impact of the attacks showing
that even an individual attacker can have substantial effects
on trafﬁc ﬂow and safety even in the presence of message se-
curity standard developed by US DOT. We believe that these
attacks can be carried over to other CV applications if they
are not carefully designed. The paper also explores a defense
framework to mitigate these classes of vulnerabilities in CV
applications.
1
Introduction
The United States Department of Transportation (US DOT)
has been developing next-generation Intelligent Transporta-
tion Systems (ITS) [2] where vehicles and transportation
infrastructure communicate and collaborate towards goals
such as improving safety, increasing trafﬁc ﬂow capacity, sup-
porting driver assistance functionality, and reducing overall
carbon footprint [16]. Some of these technologies are already
installed across the country such trafﬁc signal coordination,
transit signal priority, and traveler information systems.
One widely deployed early example of such functionality
is Intelligent Trafﬁc Signal Systems (I-SIG), which have been
deployed in several cities, reducing the average trafﬁc delay
by 26.6% [24]. While I-SIG involves only making the infras-
tructure intelligent, another class of ITS applications involves
vehicles communicating to coordinate with other vehicles and
the infrastructure intelligently. The subset of ITS applications
that involves vehicles communicating to each other (V2V)
and the Infrastructure (V2I) are called Connected Vehicles
(CV) applications. Many of the CV applications are starting to
be prototyped and have reference implementations [25]. The
US Department of Transportation (US DOT) has started test-
ing applications in three deployment sites. Other experimen-
tal projects incorporating platooning are starting to emerge:
e.g., a consortium of companies, universities and the Flemish
government are building a test bed to experimentally test au-
tomated CV driving [1]. Tesla is also working on self-driving
electric trucks that can move in platoons behind a designated
lead vehicle [6].
In these initial stages where researchers and engineers are
developing early prototypes of CV applications, security is
not being considered deeply. CVs expose a large attack sur-
face as an open systems with many participants and complex
functionality: attacks may target application protocols, net-
working, sensing and vehicle control, with the potential to
cause accidents, trafﬁc delays and other harm to the system.
A message security standard, the Secure Certiﬁcate Manage-
USENIX Association        22nd International Symposium on Research in Attacks, Intrusions and Defenses 459ment System (SCMS), has been deﬁned by USDOT but it
only ensures that cars and road side units have certiﬁcates that
enable them to participate in communication [20].
Vulnerability and Attack Analysis: It is essential to under-
stand the threats faced by CV protocols to understand how to
design them securely. Towards this goal, this paper explores
the vulnerabilities that arise at the application level of CV ap-
plications. We show that even when an attacker does not spoof
or modify messages, it does not stop a malicious actor from
obtaining a certiﬁcate, or a compromised participant with a
valid certiﬁcate, from using it to falsify information in its mes-
sages. We present the threat model in Section 2. We conduct
this analysis in the context of an important CV application
called Cooperative Adaptive Cruise Control (CACC). CACC
is used to group nearby cars into a platoon and adaptively
control their speed. The vehicles in a platoon are subjected
to reduced air drag as well as improvements in overall trafﬁc
ﬂow, driving safety, capacity, and fuel economy. Section 3
introduces CACC. The application logic is complex, having
to consider cases such as cars joining and leaving a platoon,
merging and splitting of platoons, lane changes, and platoon
leaders leaving. These maneuvers are triggered and coordi-
nated through messages. An attacker can exploit this protocol
by sending messages with false information leading to a num-
ber of possible attacks that reduce the safety, and performance
of the system. In Section 4 we introduce ﬁve general classes
of vulnerabilities that we believe that can be applied to net-
worked cyber physical systems. We describe speciﬁc attacks
against CACC in Section 5, showing a number of successful
attacks even in the presence of SCMS.
Attack Demonstration and Evaluation: As CV systems are
not deployed and/or generally available for public experimen-
tation, to evaluate these attacks, we use a previously developed
implementation of CACC in a state of the art vehicular simu-
lator, VENTOS [9], that is widely used by practitioners and
developers . We show scenarios where the vulnerabilities can
be exploited to cause safety breakdowns or to interfere with
an emergency vehicle. We deﬁne metrics for evaluating the
attack impact that measures mobility (trafﬁc throughput) and
safety (average separation between cars). We show that at-
tacks can substantially interfere with the operation of CACC
leading to increased vehicular speeds and reduced safety mar-
gins. We present our results in Section 6.
Potential Mitigation: Having established these attacks on
the CACC application level, we need to consider a mitigation
framework in Section 7. We use the classiﬁcation of the ﬁve
vulnerability types we introduce to guide the design of the
mitigation steps that either eliminate or interfere with them.
We show that the defense indeed mitigates the vulnerabil-
ities we identiﬁed in CACC without substantially harming
performance.
2 Threat Model
We assume a CV application using Security Credentials
Management System (SCMS) [7]. SCMS became avail-
able to coincide with the full-scale deployment of devices
at three US DOT CV pilot sites (New York, Tampa, and
Wyoming) [10–12]. The current implementation is a proof-
of-concept Certiﬁcate-Based Authentication system that uses
a Public Key Infrastructure [20] for certiﬁcate management.
Pseudonym Certiﬁcates (PCs) are used and rotated to enable
message authentication and validation without exposing the
privacy of a vehicle by having a permanent certiﬁcate. A ve-
hicle can enroll in the system by submitting an enrollment
request to US DOT. PC can be obtained by vehicles for a
short term, ranging from 5 minutes to few days, and is used
for basic safety message (BSM) authentication. On Board
Equipment (OBE) uses identiﬁcation certiﬁcates to authen-
ticate itself in V2I applications. However, none of the V2I
applications we reviewed require encryption by the OBE at
the application level.
SCMS prevents an attacker from falsifying messages from
another vehicle as each message gets signed with a certiﬁcate.
However, SCMS can not prevent a malicious actor from ob-
taining a certiﬁcate and participating in the protocol through
replaying the messages while they are valid, or sending its
own message, with fabricated data, using its certiﬁcate. Al-
though it is currently unclear how well SCMS can function
since it is not open source, we assume that it introduces no
signiﬁcant latency. In general, we do not consider message
delays, jamming, physical attacks on sensors or controllers,
DoS attacks, or any similar attacks to be part of our threat
model since our focus is on application level exploitation. It is
clear that such attacks are possible, and perhaps can be used
in conjunction with application level attacks to amplify their
damage. We also do not consider attacks exploiting bugs in
the software stack of any of the existing components running
on the infrastructure components, or other cars which we con-
sider to be orthogonal to our threat model. We also do not
consider physical attacks on the sensors of the vehicles or any
sensors deployed by the infrastructure.
In some attacks, we assume that the attacker is a compro-
mised vehicle which uses a radio that is capable of reaching
cars farther away than typical vehicular radios and is capable
of authenticating itself to the SCMS as a regular vehicle, then
applying its attacks in the application level. We assume that
the attacker knows the application logic and crafts its actions
to manipulate this logic.
3 Cooperative Adaptive Cruise Control
In this section, we introduce the Cooperative Adaptive Cruise
Control (CACC) application to provide background neces-
sary to understand its potential security vulnerabilities. In
CACC, a group of vehicles, with a close spacing between
460          22nd International Symposium on Research in Attacks, Intrusions and DefensesUSENIX Associationthem, can form a platoon if they are traveling in the same
direction. Once created, vehicles in the platoon co-operate
to travel at the same speed and make decisions as a group,
maintaining reduced clearance gaps between each other, al-
lowing for more efﬁcient use of the highway and reducing
the air drag compared to vehicles traveling individually. A
Platoon Management Protocol (PMP) controls platoon oper-
ations and maneuvers. The leading/front vehicle acts as the
coordinator and controls platoon decisions such as the speed,
lane changes, and merging with other platoons. Vehicles com-
municate typically through Dedicated Short Range Communi-
cation (DSRC/IEEE 802.11p [21]), although eventually they
may use 5G instead [22]. Road Side Units (RSUs) [19] are
infrastructure units that are used to coordinate behavior or ma-
neuver across cars, or to maintain shared certain state. Each
vehicle has On Board Unit (OBU) that can uses Basic Safety
Messages (BSMs) to send some periodic information such as
speed and location and receive event messages such as those
informing of trafﬁc conditions in an area they are entering.
In our experiments we use PMP, which was proposed and
developed by Amoozadeh et al [15]. PMP supports a number
of maneuvers representing different operations that platoons
could potentially perform. This section introduces some of
the primary maneuvers.
Joining a new Platoon (or forming a new platoon): If a
vehicle receives a beacon message sent from a vehicle ahead
of it, it will evaluate the position, speed, acceleration, and
other relevant information to determine whether or not to
join the platoon. Beacon messages also contain a Platoon Id,
which is a locally distinct number used to distinguished the
various platoons in the area.
Split Maneuver: Split maneuver is always initiated by the
platoon leader. When the platoon size exceeds the optimal
platoon size, the maneuver can be used to break the platoon
into two, at a speciﬁc position. First, a SPLIT_REQ message is
sent to the vehicle where the split should occur. If the request
is accepted, a SPLIT_ACCEPT message is sent back to the
leader. Subsequently, the leader sends a unicast CHANGE_PL
to the potential leader of the new platoon resulting from the
split. Finally, the original leader will report split end by send-
ing SPLIT_DONE message.
Merge Maneuver: In this maneuver, two platoons, traveling
in the same lane and close to each other, merge to form one
platoon. If the leader of the rear platoon discovers another
platoon in front of it with capacity to merge, the leader sends
a unicast MERGE_REQ to the front platoon leader. Once
the front leader accepts the merge request, it sends back a
MERGE_ACCEPT message. On receiving this message, the
rear platoon leader starts a catch-up maneuver. Upon reaching
the front platoon, the rear platoon leader sends CHANGE_PL
to all its followers to change the platoon leader to the front
leader. Now the followers start listening to the front leader
and eventually the rear leader changes its state from leader to
follower after sending a MERGE_DONE message.
Vulnerability
V1 Fake message con-