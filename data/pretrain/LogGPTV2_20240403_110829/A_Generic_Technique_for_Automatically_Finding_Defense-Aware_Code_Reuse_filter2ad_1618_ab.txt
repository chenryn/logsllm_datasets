.
.
.
.
.
.
.
.
.
. 32
. 34
. 34
. 40
. 42
. 46
49
. . 50
.
.
.
.
.
. 50
. 51
. 51
. 54
. 55
.
.
.
.
.
.
.
.
.
.
.
.
. .
. .
.
.
.
.
. .
.
.
.
.
.
.
. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
5.3.2 Edge Constraints .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
. 56
6 CFI-Safe Attacks
6.1 Threat Model and Assumptions .
6.2 Test Platform . . . . . .
.
6.3 System Investigated . . . .
6.4 Payload Development . .
6.5 Payloads . . . . . . . . .
.
.
6.5.1 Call system . . .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
6.5.2
File Uploader and Downloader .
6.5.3 Root Inserter
. . .
6.6 Discussion . . . . . . . . .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
. .
.
.
. .
.
.
. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
7 Conclusion
A Pure ROP Payload Gadgets
B Malicious NNTP Server
57
. 57
. 58
. 58
. 58
. 59
. 59
. 60
. 63
. 63
69
71
79
8
List of Figures
2-1 Program stack with a ROP payload, which executes xor %eax, %ebx;
add %ebx, %edx; xor %eax, %ebx; : : :
4-1 A portion of the ROP attack space .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
4-2 Graph of G-Freeâ€™s Effects on the Code Reuse Attack Space .
4-3 PDAG of Entire Systematic Model .
.
4-4 ROP as an enabler of code injection .
.
.
.
.
4-5 ROP as a malware deployment technique
.
.
.
.
.
.
.
.
.
.
.
.