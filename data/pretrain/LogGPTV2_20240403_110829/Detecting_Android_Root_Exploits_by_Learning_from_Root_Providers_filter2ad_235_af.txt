A., KLEIN, J., LE TRAON, Y., OCTEAU, D., AND MCDANIEL,
P. Flowdroid: Precise context, ﬂow, ﬁeld, object-sensitive and
lifecycle-aware taint analysis for android apps. In ACM SIGPLAN
Conference on Programming Language Design and Implementa-
tion (PLDI) (2014), ACM.
[11] AZIM, T., AND NEAMTIU, I. Targeted and depth-ﬁrst explo-
In Annual ACM
ration for systematic testing of android apps.
Conference on Object-Oriented Programming, Systems, Lan-
guages, and Applications (OOPSLA) (2013), ACM.
[12] BACKES, M., BUGIEL, S., HAMMER, C., SCHRANZ, O., AND
VON STYP-REKOWSKY, P. Boxify: Full-ﬂedged app sandbox-
ing for stock android. In USENIX Security Symposium (Security)
(2015).
[13] BAIDU. Shoujiweishi, 2017. http://shoujiweishi.baidu.com/.
[14] BAYER, U., COMPARETTI, P. M., HLAUSCHEK, C., KRUEGEL,
C., AND KIRDA, E. Scalable, behavior-based malware cluster-
ing. In Annual Network and Distributed System Security Sympo-
sium (NDSS) (2009).
[15] BIANCHI, A., FRATANTONIO, Y., KRUEGEL, C., AND VIGNA,
G. Njas: Sandboxing unmodiﬁed applications in non-rooted de-
vices running stock android. In ACM CCS Workshop on Security
and Privacy in Smartphones and Mobile Devices (SPSM) (2015).
[16] BRUMLEY, D., NEWSOME, J., SONG, D., WANG, H., AND
JHA, S. Towards automatic generation of vulnerability-based sig-
natures. In IEEE Symposium on Security and Privacy (Oakland)
(2006).
[17] BURGUERA, I., ZURUTUZA, U., AND NADJM-TEHRANI, S.
Crowdroid: behavior-based malware detection system for an-
droid. In ACM CCS Workshop on Security and Privacy in Smart-
phones and Mobile Devices (SPSM) (2011).
[18] CAO, Y., FRATANTONIO, Y., BIANCHI, A., EGELE, M.,
KRUEGEL, C., VIGNA, G., AND CHEN, Y. Edgeminer: Au-
tomatically detecting implicit control ﬂow transitions through the
android framework. In Annual Network and Distributed System
Security Symposium (NDSS) (2015).
[19] CHECKPOINT. Quadrooter: New android vulnerabilities in over
900 million devices, 2016. https://goo.gl/GN6ZwW.
[20] CHEN, K. Z., JOHNSON, N. M., D’SILVA, V., DAI, S., MAC-
NAMARA, K., MAGRINO, T. R., WU, E. X., RINARD, M., AND
SONG, D. X. Contextual policy enforcement in android appli-
In Annual Network and
cations with permission event graphs.
Distributed System Security Symposium (NDSS) (2013).
[21] COPYRIGHT OFFICE, U. Copyright protection and management
systems, 2017. https://goo.gl/zpeUtK.
[22] COSTA, M., CASTRO, M., ZHOU, L., ZHANG, L., AND
PEINADO, M. Bouncer: Securing software by blocking bad in-
put. In ACM Symposium on Operating Systems Principles (SOSP)
(2007).
[23] CRANDALL, J. R., SU, Z., WU, S. F., AND CHONG, F. T. On
deriving unknown vulnerabilities from zero-day polymorphic and
metamorphic worm exploits. In ACM Conference on Computer
and Communications Security (CCS) (2005).
[24] CUI, W., PEINADO, M., WANG, H. J., AND LOCASTO, M. E.
Shieldgen: Automatic data patch generation for unknown vulner-
abilities with informed probing. In IEEE Symposium on Security
and Privacy (Oakland) (2007).
[25] DIMJAˇSEVIC, M., ATZENI, S., UGRINA, I., AND RAKAMARIC,
Z. Android malware detection based on system calls. University
of Utah, Tech. Rep (2015).
[26] DINGES, P., AND AGHA, G. Targeted test input generation us-
ing symbolic-concrete backward execution. In IEEE/ACM Inter-
national Conference on Automated Software Engineering (ASE)
(2014).
[27] DIRTYCOW. Cve-2016-5195, 2017. https://goo.gl/K8cWEK.
[28] ENCK, W., GILBERT, P., HAN, S., TENDULKAR, V., CHUN,
B.-G., COX, L. P., JUNG, J., MCDANIEL, P., AND SHETH,
A. N. Taintdroid: an information-ﬂow tracking system for real-
time privacy monitoring on smartphones. ACM Transactions on
Computer Systems (TOCS) 32, 2 (2014), 5.
[29] FENG, Y., ANAND, S., DILLIG, I., AND AIKEN, A. Ap-
poscopy: Semantics-based detection of android malware through
static analysis. In ACM SIGSOFT Symposium on the Foundations
of Software Engineering (FSE) (2014).
[30] FOR INFORMATION SECURITY VULNERABILITY NAMES, S.
Cve-2012-6422, 2012. https://goo.gl/R7Icm7.
[31] FOR INFORMATION SECURITY VULNERABILITY NAMES, S.
Cve-2014-3153, 2014. https://goo.gl/R7Icm7.
[32] GITHUB.
android run root shell (base for godless), 2017.
https://goo.gl/VKSWb6.
1142    26th USENIX Security Symposium
USENIX Association
[33] GITHUB.
Cve-2012-6422,
2017.
https://github.com/dongmu/vulnerability-poc/tree/master/CVE-
2012-6422.
[34] GITHUB.
aka
https://github.com/timwr/CVE-2014-3153.
Cve-2014-3153
towelroot,
2017.
[35] GITHUB. Cve-2015-3636: Poc code for 32 bit android os, 2017.
https://github.com/ﬁ01/CVE-2015-3636.
[36] GITHUB. Cve-2015-3636: Poc code for 32 bit android os, 2017.
https://github.com/ﬁ01/CVE-2015-3636.
[37] GITHUB. Droidbot, 2017. https://goo.gl/y8ldRA.
[38] GITHUB. exploit for cve-2012-4220 working on zte-open, 2017.
https://github.com/poliva/root-zte-open.
[39] GOOGLE. Android and security, 2012. https://goo.gl/mo29A4.
[40] GOOGLE. Dashboards, 2017. https://goo.gl/6BTWw4.
[41] GOOGLE.
Security-enhanced linux in android,
2017.
https://goo.gl/btJ9xb.
[42] GOOGLE. Veriﬁed boot, 2017. https://goo.gl/LiQm9E.
[43] GORDON, M. I., KIM, D., PERKINS, J. H., GILHAM, L.,
NGUYEN, N., AND RINARD, M. C.
Information ﬂow analy-
sis of android applications in droidsafe. In Annual Network and
Distributed System Security Symposium (NDSS) (2015).
[44] HOFMEYR, S. A., FORREST, S., AND SOMAYAJI, A. Intrusion
detection using sequences of system calls. Journal of computer
security 6, 3 (1998), 151–180.
android
play
found
in
2016.
https://www.bleepingcomputer.com/news/security/hummingbad-
android-malware-found-in-20-google-play-store-apps/.
[45] Hummingbad
malware
google
apps,
store
20
[46] JING, Y., ZHAO, Z., AHN, G.-J., AND HU, H. Morpheus:
automatically generating heuristics to detect android emulators.
In Annual Computer Security Applications Conference (ACSAC)
(2014).
[47] JUNOD, P., RINALDINI, J., WEHRLI, J., AND MICHIELIN,
J. Obfuscator-llvm–software protection for the masses.
In
IEEE/ACM International Workshop on Software Protection
(SPRO) (2015).
[48] KIM, H.-A., AND KARP, B. Autograph: Toward automated,
distributed worm signature detection. In USENIX Security Sym-
posium (Security) (2004).
[49] KOLBITSCH, C., COMPARETTI, P. M., KRUEGEL, C., KIRDA,
E., ZHOU, X.-Y., AND WANG, X. Effective and efﬁcient mal-
ware detection at the end host. In USENIX Security Symposium
(Security) (2009).
[50] LI, L., BARTEL, A., BISSYAND ´E, T. F., KLEIN, J., LE TRAON,
Y., ARZT, S., RASTHOFER, S., BODDEN, E., OCTEAU, D.,
AND MCDANIEL, P. Iccta: Detecting inter-component privacy
leaks in android apps. In International Conference on Software
Engineering (ICSE) (2015).
[51] LIANG, Z., AND SEKAR, R. Fast and automated generation
of attack signatures: A basis for building self-protecting servers.
In ACM Conference on Computer and Communications Security
(CCS) (2005).
[52] LU, L., LI, Z., WU, Z., LEE, W., AND JIANG, G. Chex: stat-
ically vetting android apps for component hijacking vulnerabili-
ties. In ACM Conference on Computer and Communications Se-
curity (CCS) (2012).
[53] MA, K.-K., PHANG, K. Y., FOSTER, J. S., AND HICKS, M. Di-
rected symbolic execution. In International Static Analysis Sym-
posium (2011).
[54] MA, W., DUAN, P., LIU, S., GU, G., AND LIU, J.-C. Shadow
attacks: automatically evading system-call-behavior based mal-
ware detection. Journal in Computer Virology 8, 1-2 (2012), 1–
13.
[55] MICRO, T. Godless mobile malware uses multiple exploits to
root devices, 2016. https://goo.gl/qKSCXl.
[56] MUTTI, S., FRATANTONIO, Y., BIANCHI, A., INVERNIZZI, L.,
CORBETTA, J., KIRAT, D., KRUEGEL, C., AND VIGNA, G.
Baredroid: Large-scale analysis of android apps on real devices.
In Annual Computer Security Applications Conference (ACSAC)
(2015).
[57] NETWORKS, P. A.
Rootnik android trojan abuses com-
rooting tool and steals private information, 2015.
mercial
https://goo.gl/epd1IB5.
[58] NEWSOME, J., KARP, B., AND SONG, D. Polygraph: Auto-
matically generating signatures for polymorphic worms. In IEEE
Symposium on Security and Privacy (Oakland) (2005).
[59] OCTEAU, D., MCDANIEL, P., JHA, S., BARTEL, A., BODDEN,
E., KLEIN, J., AND LE TRAON, Y. Effective inter-component
communication mapping in android with epicc: An essential step
towards holistic security analysis. In USENIX Security Sympo-
sium (Security) (2013).
[60] PETSAS, T., VOYATZIS, G., ATHANASOPOULOS, E., POLY-
CHRONAKIS, M., AND IOANNIDIS, S. Rage against the virtual
machine: hindering dynamic analysis of android malware. In Eu-
ropean Workshop on System Security (EUROSEC) (2014).
[61] QIAN, C., LUO, X., SHAO, Y., AND CHAN, A. T. On track-
ing information ﬂows through jni in android applications.
In
IEEE/IFIP International Conference on Dependable Systems and
Networks (DSN) (2014).
[62] RASTOGI, V., CHEN, Y., AND JIANG, X. Catch me if you can:
Evaluating android anti-malware against transformation attacks.
IEEE Transactions on Information Forensics and Security 9, 1
(2014), 99–108.
[63] SECURELIST. Rooting pokmons in google play store, 2016.
https://goo.gl/Ry7AUw.
[64] SINGH, S., ESTAN, C., VARGHESE, G., AND SAVAGE, S. Auto-
mated worm ﬁngerprinting. In USENIX Symposium on Operating
Systems Design and Implementation (OSDI) (2004).
[65] SMITH, C. Android statistics, 2016. https://goo.gl/9Pp6I5.
[66] TAM, K., KHAN, S. J., FATTORI, A., AND CAVALLARO, L.
Copperdroid: Automatic reconstruction of android malware be-
haviors. In Annual Network and Distributed System Security Sym-
posium (NDSS) (2015).
[67] Upx, 2017. https://goo.gl/6BkD4i.
[68] VAN DER VEEN, V., FRATANTONIO, Y., LINDORFER, M.,
GRUSS, D., MAURICE, C., VIGNA, G., BOS, H., RAZAVI, K.,
AND GIUFFRIDA, C. Drammer: Deterministic rowhammer at-
In ACM Conference on Computer
tacks on mobile platforms.
and Communications Security (CCS) (2016).
[69] VIDAS, T., AND CHRISTIN, N. Evading android runtime anal-
ysis via sandbox detection. In ACM Symposium on Information,
Computer and Communications Security (ASIACCS) (2014).
[70] Virustotal, 2017. https://goo.gl/Fw7yPC.
[71] WANG, H. J., GUO, C., SIMON, D. R., AND ZUGENMAIER, A.
Shield: Vulnerability-driven network ﬁlters for preventing known
vulnerability exploits. In ACM SIGCOMM (2004).
[72] WEI, F., ROY, S., OU, X., ET AL. Amandroid: A precise and
general inter-component data ﬂow analysis framework for secu-
rity vetting of android apps. In ACM Conference on Computer
and Communications Security (CCS) (2014).
USENIX Association
26th USENIX Security Symposium    1143
[73] WEICHSELBAUM, L., NEUGSCHWANDTNER, M., LINDORFER,
M., FRATANTONIO, Y., VAN DER VEEN, V., AND PLATZER,
C. Andrubis: Android malware under the magnifying glass.
Tech. Rep. TRISECLAB-0414, Vienna University of Technol-
ogy, 2014.
[74] WONG, M. Y., AND LIE, D. Intellidroid: A targeted input gen-
erator for the dynamic analysis of android malware. In Annual
Network and Distributed System Security Symposium (NDSS)
(2016).
[75] WU, L., GRACE, M., ZHOU, Y., WU, C., AND JIANG, X. The
In ACM
impact of vendor customizations on android security.
Conference on Computer and Communications Security (CCS)
(2013).
[76] XU, L., ZHANG, D., JAYASENA, N., AND CAVAZOS, J. Hadm:
Hybrid analysis for detection of malware. In SAI Intelligent Sys-
tems Conference (IntelliSys) (2016).
[77] XU, W., AND FU, Y. Own your android! yet another universal
root. In USENIX Workshop on Offensive Technologies (WOOT)
(2015).
[78] YAN, L. K., AND YIN, H. Droidscope: seamlessly reconstruct-
ing the os and dalvik semantic views for dynamic android mal-
ware analysis. In USENIX Security Symposium (Security) (2012).
[79] YANG, W., XIAO, X., ANDOW, B., LI, S., XIE, T., AND ENCK,
W. Appcontext: Differentiating malicious and benign mobile app
behaviors using context. In International Conference on Software
Engineering (ICSE) (2015).
[80] YANG, Z., YANG, M., ZHANG, Y., GU, G., NING, P., AND
WANG, X. S. Appintent: Analyzing sensitive data transmission
in android for privacy leakage detection. In ACM Conference on
Computer and Communications Security (CCS) (2013).
[81] ZHANG, H., SHE, D., AND QIAN, Z. Android root and its
providers: A double-edged sword. In ACM Conference on Com-
puter and Communications Security (CCS) (2015).
[82] ZHANG, H., SHE, D., AND QIAN, Z. Android ion hazard: the
In ACM
curse of customizable memory management system.
Conference on Computer and Communications Security (CCS)
(2016).
[83] ZHANG, M., AND YIN, H. Efﬁcient, context-aware privacy leak-
age conﬁnement for android applications without ﬁrmware mod-
ding. In ACM Symposium on Information, Computer and Com-
munications Security (ASIACCS) (2014).
[84] ZHENG, C., ZHU, S., DAI, S., GU, G., GONG, X., HAN, X.,
AND ZOU, W. Smartdroid: an automatic system for revealing
ui-based trigger conditions in android applications. In ACM CCS
Workshop on Security and Privacy in Smartphones and Mobile
Devices (SPSM) (2012).
[85] ZHOU, X., LEE, Y., ZHANG, N., NAVEED, M., AND WANG,
X. The peril of fragmentation: Security hazards in android de-
vice driver customizations. In IEEE Symposium on Security and
Privacy (Oakland) (2014).
[86] ZHOU, Y., AND JIANG, X. Dissecting android malware: Char-
acterization and evolution. In IEEE Symposium on Security and
Privacy (Oakland) (2012).
[87] ZHOU, Y., WANG, Z., ZHOU, W., AND JIANG, X. Hey, you,
get off of my market: Detecting malicious apps in ofﬁcial and
alternative android markets. In Annual Network and Distributed
System Security Symposium (NDSS) (2012).
1144    26th USENIX Security Symposium
USENIX Association