### Optimized Text

**Varying the Number of Layers for Efficient Backup Path Routing**

The number of layers (i.e., states) in the algorithm from Section 3.2 is varied, with a fixed number of eight layers. The figure illustrates that increasing the number of layers results in more efficient backup path routing.

---

**Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05)**
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20, 2021, at 11:54:11 UTC from IEEE Xplore. Restrictions apply.

---

**Path Lengths Distribution**

- **Path lengths - 32 nodes, 64 links**
- **Path lengths - (32 nodes, 96 links) and (128 nodes, 256 links)**
- **Failure-free-32, OptimalBackup-32, RRLBackup-32**
- **Failure-free-128, OptimalBackup-128, RRLBackup-128**
- **wa-Failure-free, glp-Failure-free, wa-Optimal Backup, glp-Optimal Backup, wa-RRLBackup, glp-RRLBackup**

**Path Lengths in Hops**

- **Path length in number of hops (0-10)**
- **Path length in number of hops (0-10)**

**Figure 5.** Distributions of path lengths when introducing one node failure in the original path.

**Figure 6.** Distributions of path lengths when introducing one node failure in the original path.

### 4.3 Comparisons

In this section, we compare three main approaches that offer various recovery abstractions: RRL, Protection Cycles (P-cycles), and Redundant Trees (RT). Table 1 provides an overview of relevant criteria for these methods.

- **RRL**: Evaluated using 100 Waxman networks with 16 nodes and 32 links.
- **P-cycles**: Performance data extracted from [7]. "Large" P-cycles aim to build few large cycles, while "small" P-cycles aim to create many small cycles to optimize backup path lengths.
- **RT**: Statistics collected from [4], based on a single chordal ring topology.

**Key Observations:**

- **Number of Abstractions**: RRL has a modest number of abstractions compared to P-cycles with many small cycles and RT. P-cycles with few large cycles have fewer abstractions but result in longer backup paths. The number of abstractions in RT depends on the number of candidate egress nodes.
- **State Information**: RRL requires a fixed amount of additional state proportional to the number of layers, while P-cycles require state proportional to the number of cycles. RT builds subtopologies, resulting in a constant state increase of two.
- **Backup Path Lengths**: RRL performs well, and path lengths can be reduced by increasing the number of layers.
- **Coverage**: Both RT and RRL cover link and node failures. P-cycles are not designed for node failures, though there are inefficient ways to achieve node fault-tolerance [24].
- **Global Recovery**: RT and P-cycles do not easily support global recovery as described for RRL [4, 24].

**Implementation Considerations:**

- Practical implementations may also consider other criteria such as failure detection time and notification time, which depend on the implementation rather than the recovery scheme.

**Summary:**

RRL offers a few simple and intuitive recovery abstractions, coupled with acceptable backup path lengths, flexibility in global and local recovery, modest state increase, and coverage of both node and link failures. This makes RRL a good alternative for practical handling of recovery in packet networks.

---

**Table 1. Properties of Different Recovery Schemes**

| Property             | Pcycle Small | Pcycle Large | RRL Min | RRL 5 | RT     |
|----------------------|--------------|--------------|---------|-------|--------|
| #Abstractions        | 12.8         | 2.2          | 3.4     | 5     | 16     |
| Global Recovery      | No           | No           | No      | Yes   | No     |
| Local Recovery       | Yes          | Yes          | Yes     | Yes   | Yes    |
| Algorithm Complexity | O(|V|^2 log(|V|)) | O(|V|^4 log^2(|V|)) | O(|V|^3) | O(|V|^3) | O(|V|^3) |
| Path Lengths         | 12.8         | 2.2          | 3.13    | 5     | 3.13   |
| Additional State     | 4.1          | 8.7          | 3.13    | 5     | 2      |
| Affect Normal        | No           | No           | No      | No    | No     |
| Node Recovery        | Poor         | Poor         | Yes     | Yes   | Yes    |
| Link Recovery        | Yes          | Yes          | Yes     | Yes   | Yes    |

**Figures 7 and 8.** Distributions of path lengths when introducing one node or link failure in the original path.

### 5. Implementation Issues in MPLS

Multiprotocol Label Switching (MPLS) is widely used for network recovery and traffic engineering. This section demonstrates the applicability of RRL within the MPLS framework, although RRL is not limited to MPLS and can be applied to connectionless IP, Ethernet, and other technologies.

**MPLS Requirements:**

- **Connection-Oriented Technology**: MPLS adheres to the connection-oriented implementation requirements discussed in Section 3.1.2. In most cases, four layers suffice to cover relatively large networks. A network with four safe layers will calculate LSPs for five topologies, including the original, error-free one.
- **Recovery Action**: The node performing the recovery must know which LSPs are affected by the failed node or link. Only the traffic from affected LSPs will be moved to backup LSPs. For local recovery, the node detecting the failure is responsible for the recovery action.

---

**Proceedings of the 2005 International Conference on Dependable Systems and Networks (DSN’05)**
0-7695-2282-3/05 $20.00 © 2005 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20, 2021, at 11:54:11 UTC from IEEE Xplore. Restrictions apply.