        [main]
        include=existing-profile
        ```
    2.  为与 WWN 标识符匹配的设备设置所选磁盘调度程序：
        ``` screen
        [disk]
        devices_udev_regex=IDNAME=device system unique id
        elevator=selected-scheduler
        ```
        在这里：
        ::: itemizedlist
        -   使用正在使用的标识符的名称替换 [*IDNAME*]{.emphasis} （例如
            `ID_WWN`{.literal}）。
        -   [*将设备系统唯一 id*]{.emphasis} 替换为所选标识符的值（例如
            `0x5002538d00000000`{.literal}）。
            要匹配 `devices_udev_regex`{.literal}
            选项中的多个设备，请将标识符括在括号中，并使用竖线分隔它们：
            ``` screen
            devices_udev_regex=(ID_WWN=0x5002538d00000000)|(ID_WWN=0x1234567800000000)
            ```
        :::
    :::
5.  启用您的配置集：
    ``` screen
    # tuned-adm profile my-profile
    ```
:::
::: itemizedlist
**验证步骤**
-   验证 Tuned 配置集是否活跃并应用：
    ``` screen
    $ tuned-adm active
    Current active profile: my-profile
    ```
    ``` screen
    $ tuned-adm verify
    Verification succeeded, current system settings match the preset profile.
    See tuned log file ('/var/log/tuned/tuned.log') for details.
    ```
:::
::: itemizedlist
**其它资源**
-   [自定义 Tuned
    配置集](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/monitoring_and_managing_system_status_and_performance/customizing-tuned-profiles_monitoring-and-managing-system-status-and-performance){.link}
:::
:::
::: section
::: titlepage
# []{#setting-the-disk-scheduler_managing-storage-devices.html#setting-the-disk-scheduler-using-udev-rules_setting-the-disk-scheduler}使用 udev 规则设置磁盘调度程序 {.title}
:::
此流程使用 `udev`{.literal}
规则为特定块设备设置给定磁盘调度程序。这个设置会在系统重启后保留。
在以下命令和配置中替换：
::: itemizedlist
-   [*带有块设备名称的设备*]{.emphasis}，例如： `sdf`{.literal}
-   带有您要为该设备设置的磁盘调度程序的
    [*selected-scheduler*]{.emphasis}，例如 `bfq`{.literal}
:::
::: orderedlist
**流程**
1.  查找块设备系统唯一标识符：
    ``` screen
    $ udevadm info --name=/dev/device | grep -E '(WWN|SERIAL)'
    E: ID_WWN=0x5002538d00000000
    E: ID_SERIAL=Generic-_SD_MMC_20120501030900000-0:0
    E: ID_SERIAL_SHORT=20120501030900000
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    本例中的
    命令将返回标识为全局名称(WWN)或与指定块设备关联的序列号的所有值。虽然最好使用
    WWN，但 WWN
    [*并不总是可用于给定设备，示例命令返回的任何值都可用作设备系统唯一
    ID*]{.emphasis}。
    :::
2.  配置 `udev`{.literal} 规则。使用以下内容创建
    `/etc/udev/rules.d/99-scheduler.rules`{.literal} 文件：
    ``` screen
    ACTION=="add|change", SUBSYSTEM=="block", ENV{IDNAME}=="device system unique id", ATTR{queue/scheduler}="selected-scheduler"
    ```
    在这里：
    ::: itemizedlist
    -   使用正在使用的标识符的名称替换 [*IDNAME*]{.emphasis} （例如
        `ID_WWN`{.literal}）。
    -   [*将设备系统唯一 id*]{.emphasis} 替换为所选标识符的值（例如
        `0x5002538d00000000`{.literal}）。
    :::
3.  重新载入 `udev`{.literal} 规则：
    ``` screen
    # udevadm control --reload-rules
    ```
4.  应用调度程序配置：
    ``` screen
    # udevadm trigger --type=devices --action=change
    ```
:::
::: itemizedlist
**验证步骤**
-   验证活跃的调度程序：
    ``` screen
    # cat /sys/block/device/queue/scheduler
    ```
:::
:::
::: section
::: titlepage
# []{#setting-the-disk-scheduler_managing-storage-devices.html#temporarily-setting-a-scheduler-for-a-specific-disk_setting-the-disk-scheduler}为特定磁盘临时设置调度程序 {.title}
:::
此流程为特定块设备设置给定磁盘调度程序。系统重启后该设置不会保留。
::: itemizedlist
**流程**
-   将所选调度程序的名称写入
    `/sys/block/device/queue/scheduler`{.literal} 文件：
    ``` screen
    # echo selected-scheduler > /sys/block/device/queue/scheduler
    ```
    在文件名中，使用块设备名称替换 [*device*]{.emphasis}，例如
    `sdc`{.literal}。
:::
::: itemizedlist
**验证步骤**
-   验证调度程序是否在该设备中活跃：
    ``` screen
    # cat /sys/block/device/queue/scheduler
    ```
:::
:::
:::
[]{#setting-up-a-remote-diskless-system_managing-storage-devices.html}
::: chapter
::: titlepage
# []{#setting-up-a-remote-diskless-system_managing-storage-devices.html#setting-up-a-remote-diskless-system_managing-storage-devices}第 16 章 设置远程无盘系统 {.title}
:::
以下小节概述了在网络环境中部署远程无盘系统所需的步骤。当您需要多个具有相同配置的客户端时，实施此解决方案非常有用。此外，这将节省客户端数量的硬盘驱动器成本。假设服务器安装了
Red Hat Enterprise Linux 8 操作系统。
::: figure
[]{#setting-up-a-remote-diskless-system_managing-storage-devices.html#remote-diskless-system}
**图 16.1. 远程无盘系统设置图**
::: figure-contents
::: mediaobject
![远程无盘系统设置图](images/remote-diskless-system-schema.png)
:::
:::
:::
请注意，可以在单独的服务器上配置网关。
::: section
::: titlepage
# []{#setting-up-a-remote-diskless-system_managing-storage-devices.html#preparing-an-environment-for-the-remote-diskless-system_setting-up-a-remote-diskless-system}为远程无盘系统准备环境 {.title}
:::
这个过程描述了为远程无盘系统准备环境。
远程无盘系统引导需要 `tftp`{.literal} 服务（由
`tftp-server`{.literal}提供）和 DHCP 服务（由
`dhcp`{.literal}提供）。`tftp`{.literal} 服务用于通过 PXE
加载器通过网络检索内核镜像和 `initrd`{.literal}。
::: itemizedlist
**先决条件**
-   安装以下软件包：
    ::: itemizedlist
    -   `tftp-server`{.literal}
    -   `xinetd`{.literal}
    -   `dhcp-server`{.literal}
    -   `syslinux`{.literal}
    :::
-   设置网络连接。
:::
::: orderedlist
**流程**
1.  安装 `dracut-network`{.literal} 软件包：
    ``` literallayout
    # yum install dracut-network
    ```
2.  安装 `dracut-network`{.literal} 软件包后，在
    `/etc/dracut.conf`{.literal} 中添加以下行：
    ``` literallayout
    add_dracutmodules+="nfs"
    ```
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
有些 RPM 软件包已经使用文件功能启动（如 `setcap`{.literal} 和
`getcap`{.literal}）。但是，NFS
目前不支持它们，因此尝试安装或更新任何使用文件功能的软件包都会失败。
:::
此时，您的服务器已准备好继续远程无盘系统实施。
:::
::: section
::: titlepage
# []{#setting-up-a-remote-diskless-system_managing-storage-devices.html#configuring-a-tftp-service-for-diskless-client_setting-up-a-remote-diskless-system}为无盘客户端配置 tftp 服务 {.title}
:::
这个步骤描述了如何为无盘客户端配置 tftp 服务。
::: itemizedlist
**先决条件**
-   安装所需软件包。请参阅
    ["为远程无盘系统准备环境"一节](#setting-up-a-remote-diskless-system_managing-storage-devices.html#preparing-an-environment-for-the-remote-diskless-system_setting-up-a-remote-diskless-system "为远程无盘系统准备环境"){.xref}
    中的先决条件。
:::
::: orderedlist
**配置 `tftp`{.literal}**
1.  通过网络启用 PXE 引导：
    ``` literallayout
    # systemctl enable --now tftp
    ```
2.  `tftp`{.literal} 根目录(`chroot`{.literal})位于
    `/var/lib/tftpboot`{.literal} 中。将
    `/usr/share/syslinux/pxelinux.0`{.literal} 复制到
    `/var/lib/tftpboot/`{.literal}：
    ``` literallayout
    # cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/
    ```
3.  将 `/usr/share/syslinux/ldlinux.c32`{.literal} 复制到
    `/var/lib/tftpboot/`{.literal}：
    ``` literallayout
    # cp /usr/share/syslinux/ldlinux.c32 /var/lib/tftpboot/
    ```
4.  在 `tftp`{.literal} 根目录中创建 `pxelinux.cfg`{.literal} 目录：
    ``` literallayout
    # mkdir -p /var/lib/tftpboot/pxelinux.cfg/
    ```
5.  为无盘客户端配置 `tftp`{.literal} 后，请相应地配置 DHCP、NFS
    和导出的文件系统。
:::
:::
::: section
::: titlepage
# []{#setting-up-a-remote-diskless-system_managing-storage-devices.html#configuring-dhcp-for-diskless-clients_setting-up-a-remote-diskless-system}为无盘客户端配置 DHCP 服务器 {.title}
:::
这个步骤描述了如何为无盘系统配置 DHCP。
::: itemizedlist
**先决条件**
-   安装所需软件包。请参阅
    ["为远程无盘系统准备环境"一节](#setting-up-a-remote-diskless-system_managing-storage-devices.html#preparing-an-environment-for-the-remote-diskless-system_setting-up-a-remote-diskless-system "为远程无盘系统准备环境"){.xref}
    中的先决条件。
-   配置 `tftp`{.literal}。请参阅 ["为无盘客户端配置 tftp
    服务"一节](#setting-up-a-remote-diskless-system_managing-storage-devices.html#configuring-a-tftp-service-for-diskless-client_setting-up-a-remote-diskless-system "为无盘客户端配置 tftp 服务"){.xref}。
:::
::: orderedlist
**流程**
1.  通过在 `/etc/dhcp/dhcpd.conf`{.literal} 中添加以下配置来设置 DHCP
    服务器并启用 PXE 引导：
    ``` literallayout
    allow booting;
    allow bootp;
    subnet 192.168.205.0 netmask 255.255.255.0 {
      pool
      {
        range 192.168.205.10 192.168.205.25;
      }
      option subnet-mask 255.255.255.0;
      option routers 192.168.205.1;
    }
    class "pxeclients" {
       match if substring(option vendor-class-identifier, 0, 9) = "PXEClient";
       next-server server-ip;
       filename "pxelinux.0";
    }
    ```
    这个配置不会通过 UEFI 引导。要为 UEFI
    执行安装，请按照本文档中的步骤： [为基于 UEFI 的客户端配置 TFTP
    服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/performing_an_advanced_rhel_installation/index#configuring-a-tftp-server-for-uefi-based-clients_preparing-for-a-network-install){.link}。另外，请注意
    `/etc/dhcp/dhcpd.conf`{.literal} 是一个示例文件。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    当 `libvirt`{.literal} 虚拟机用作无盘客户端时，`libvirt`{.literal}
    提供 DHCP 服务，并且不使用独立 DHCP 服务器。在这种情况下，必须使用
    `libvirt`{.literal} 网络配置 `virsh net-edit`{.literal} 中的
    `bootp file='filename'`{.literal} 选项启用网络引导。
    :::
2.  输入以下命令启用 `dhcpd.service`{.literal}:
    ``` literallayout
    # systemctl enable --now dhcpd.service
    ```
:::
:::
::: section
::: titlepage
# []{#setting-up-a-remote-diskless-system_managing-storage-devices.html#configuring-an-exported-file-system-for-diskless-clients_setting-up-a-remote-diskless-system}为无盘客户端配置导出的文件系统 {.title}