释器之间是如何进行通信的。主控解释器创建了一个debug例程，它通过与debuglnterp进行的通
信把调试信息显示出来。
那么，我们怎样才能把一个Tk解释器动态地加载到一个tclsh应用程序里去呢？下面的例子
里演示了具体的做法：
interp create debugInterp
debugInterp eval(
load/usr/local/tk8.2b3/unix/1ibtk8.2.so Tk
text.t
update
pack .t
proc debug (interp args)(
加入jaVa编程群：524621833
---
## Page 550
.532
Linux程序设计
[xe.    d
这段代码执行的前提是你必须已经对TeI/Tk的发行版本进行了编译，使它们成为可动态加载
的，并J1。Tk的动态库libtk8.2.so已经放到了/usr/local/tk8.2b3/unix/子目录里。从上面代码里可
以看出：tclsh创建了一个新的解释器，动态地把Tk加载到这个新创建出来的解释器里去，然后
主控解释器用vwait命令进人事件循环。如果主控解释器没有进人事件循环，这个应用程序会默
默地退出，没有任何警告信息。如果你用下面这个命令运行上面这段代码：
Telsh8,0 dynanicLoad.tk
Tk解释器就会动态地被加载上！
16.5.18Safe Tk
假设你从网络上下载了一个Tel脚本，执行它。如果这个脚本不怀好意，它就会对你的系统
造成严重的损害。它可能会副除你所有的文件，也可能会把你的文件传输到其他计算机去。如
何才能保证这些无法信任的脚本不造成损害呢？在1994年，Marshall和Rose两人提出了Safe-Tcl，
它最初被认为是这样一种机制：它允许电子邮件包含将要在接收者的计算机上运行的Tcl脚本。
Safe-Tcl被添加到7.5版本的Tcl核心代码里
Safc-Tel的目的是建立一个实验箱环境，让用户可以在这个环境里安全地执行无法信任的Tcl
润本，不必担心产生什么副作用。
安全解释器有一个有限制的命令集合。下表里的命令将被隐藏起来：
cd
exec
ex it
fconfigure
glob
1oad
open
socket
source
vwai t
pwd
file
Tel的safebase使用手册页里对如何建立安全的解释器有详细的介绍。有时候，给新创建的
安全解释器加上一些访问限制是很有必要的；比如说，允许它打开某个特定子目录里的文件等。
原理通过无法信任的脚本对那些有潜在危险的功能提供了适度的访问权限。因此，我们可以认
为Safe-Tel是一种安全地执行无法信任的Tcl脚本的机制，并且通过这类脚本对那些有潜在危险的
功能提供的访问权限是适度的。
类似于Safe-Tcl，在执行无法信任的Tk脚本也需要建立实验箱环境。比如说，你肯定不想让
Tk插件删掉你所有的顶层窗口，也不想让它偷走你的x剪贴内容。SafeTk增加了把解释器配置
为能够安全地完成Tk操作和把TK加载到安全解释器中去的能力。在缺省的情况下，你是不能把
Tk加载到安全解释器里去的，因为在安全解释器里根本就不允许使用load命令。SafeTk把无法
信任的Tk脚本单独放到一个实验箱环境里去执行，这就保证它不会造成任何损害。
加入jaVa编程群：524621833
---
## Page 551
第16章X窗口系统的程序设计533
:safe：loadTk”命令对安全解释器里要求的数据结构进行必要的初始化，然后把Tk加载
到其中。这个命令返网的是那个安全解释器的名字。“:：safe：loadTk”把取自主控解释器的
tk_library的值添加到安全解释器的虚拟路径里，这样就可以在安全解释器里实现Tk的自动加
载了。
下面的例子演示的操作是：除非你使用了“:safe：loadTk”命令，否则你是不能把Tk加载到
-个安全解释器里去的。
::safe::interpCreate safeInterp
::safe::interpAddToAccessPath safeInterp /tmp
: :safe::loadrk safeInterp
interp create -safe safeInterp2
safeInterp eval (
text .t
pack .t
update
safeInterp2 eval(
load() Tk
运行上面这个脚本，你将看到如下所示的错误信息：
/wrox/tk>wish safeInterp.tk
1 - file socket send open pwd glob exec encoding clipboard load fconfigure source
exi: toplevel wm grab menu selection tk bell cd
2-tile socket open pwd glob exec encoding load fconfigure source exit cd
1,file load source exit encoding
Error in startup script: invalid command nane *safelnterp2*
*safelnterp? eval {
while executing
load () Tk
} *
(file *safeinterp.tk* line 26)
这表示你不能把Tk加载到一个安全解释器里去，因为它不是用“：safe:createInterp”命令创
建的。如果你想进一步了解安全解释器的使用方法，请自行研究Tk发行版本里自带的
safeDebug.tk示例。
16.6一个复合素材
我们已经学习了如何利用各种各样的素材命令编写应用程序的方法。但有时候人们需要全
新类型的索材来显示他们的信息，比如格子、电子表、记事本、轮转列表等。虽然Scriptics公司
的Tk研发队伍正在计划把这些素材添加到核心里去，但在我们编写本书的时候它们还没有添加
进去。所以我们在这一小节的问题就是：人们怎样才能创建出定制的素材？
加入jaVa编程群：524621833
---
## Page 552
534
Linux程序设计
有两种办法可以做的这一点。第一种办法是使用TcI和Tk的C语言扩展API，它也叫做TEA
（TclandTk'sCExtensionAPI的字头缩写）。另外一种办法是使用纯粹的Tel和现有的Tk素材来实
现这一目的。因为我们还没有讨论过Tcl和Tk的C语言API，而且就是我们想在这里介绍它们也多
少有些力不从心，所以我们将要采取的办法是完全利用Tcl和现有的Tk素材来创建一个复合素材
（MegaWidget）。我们将要创建的复合索材是一个“树”素材。就目前来说，Tk还没有内建的树
素材。这个素材示例还说不上完整，但它还是相当有用，并且给大家指出了一个正确的方向。
这个例子里采用的算法和某些接口取自GPL许可证下的comp.lang.tcl新阐组。我见
过的其他版本都没有这个基于包概念/名字空间（package/namespace-based）的实现版
本的灵活适应性。
个抽象的数据结构里。接下来的问题是我们需要给这个树素材提供什么样的素材命令和配置命
令？出于配置方面的考虑，我们将为它准备上大部分标准的Tk配置选项，比如-font、·
backgroundcolor等，另外再加上一些树素材特有的配置选项。因为树素材支持层次结构，所以
我们应该提供诸如additem、delitem、config、setseletion、getseletion等方法。好了，我们这就
开始定义这个树素材包。
#
who use this package need to specify parent and tail procedures for any
element of the tree hierarchy. All the nodes that get stored inside the
tree are complete path names separated by ·/'. The toplevel node is
1
always /
package provide tree 1.0
nanespace eval tree {
variable tree
default font setup
switch $tcl_platform(platform)(
set tree(font)\
unix{
-adobe-helvetica-medium-r-normal-*-11-80-100-100-p-56-iso8859-1
windows_(
set tree(font)\
-adobe-helvetica-medium-r-norna1-*-14-100-100-100-p-76-ico8859-1
 Bitnaps used to show which parts of the tree can be opened/closed
set maskdata *#define solid_width 9\n#deiine solid_height 9*
append maskdata {
0xtf.0x01,0xff.0x01.0xff,0x0i,0xff,0x01.0xff.0x01,0xff.0x01.
statie unsigned char solid_bits{]*(
加入jaVa编程群：524621833
---
## Page 553
第16章X窗口系统的程序设计
535
0xff.0x01,0xff,0x01,0xff,0x01
set data *#define open_width 9n#define open_height 9*
eeppadde
static unsigned char open_bits[]=（
0xff,0x01.0x01.0x01,0x01.0x01,0x01.0x01,0x7d.0x01.0x01.0x01,
0x01,0x01,0x01.0x01.0xff.0x01
set tree(openbm) [image create bitnap openbm -data $data \
-maskdata Smaskdata
-foreground black -background white]
set data *#define closed_width 9\ntdefine closed_height 9*
append data (
0xff.0x01.0x01.0x01,0x11,0x01.0x11,0x01.0x7d,0x01,0x11.0x01
static unsigned char closed_bits[] ={
0x11.0x01.0x01.0x01,0xff.0x01
set tree(closedbm) [ixage create bitmap closedbs -data Sdata \
-foreground black -background white]
naskdata $maskdata\
nanespace export create additen Geliten config setselection getselection
narespace export cpenbranch closebranch labelat
如上所示，从树素材的外面看去，它将有--个名为trce的包变量和additem、delitem、config
setselection等方法。一个trce包变量将用来保存创建出来的所有树素材的必要信息。从上面的代
码里可以看出，tree还将创建出一些图像，这些图像将用来完成打开、关闭树枝以及把树枝保存
在tree数据结构里等操作。
我们下一步要定义素材命令。我们先来定义tree:：create命令。这个命令的执行过程是这样的：
对配置选项进行分析，用在create命令里给出的路径创建一个画布。create命令还要检查-parent
和-tail素材创建选项。这些选项是由客户程序指定的过程，这样，tree命令就能确定任何一个结
点的前部和后部。后部大概说来就是结点名字的最后一部分。请看这个例子：假设结点的名字
是“a/b/c”，则tail命令将返同“e”（假设字符“”被用做是一个路径分隔符）；而parent命令将
返回“/a/b”。树复合素材要求使用“”做为路径分隔符，并且所有结点都用绝对路径来表示。
-parent和-tail选项命令身后的逻辑考虑是：要允许一棵“树”显示各种层次信息，面不仅仅
是子日录结构的架子。create命令还将对变量进行初始化，比如要把selection和selidx分别初始化
为当前中选的结点和它的标签。create命令会安排稍后重新绘制这棵树。
tree::create-
Create a new tree widget. Canvas is used to emulate a tree
widget.Inatialized ail the tree specific data structures. Sargs become
the configuration argunents to the canvas widget fros which the tree is
constructed.
Arguments:
*paren
proc
sets the parent procedure provided by the application. tree
widget will use this procedure to determine the parent of an
element. This procedure will be called with the node as an
加入jaVa编程群：524621833
---
## Page 554
536
Linux程序设计
arguntent
-La11
proc
IGiven a conplete path this proc will give the end-element
name}
 Results:
A tree widget with the path Sw is created.
proc tree::create (w args) {
variable tree
set newArgs {}
for (seti 0)($itree::delitem Sw/*
tree::DfltContig Sw/
tree::BuildhenIdle Sw
set tree(Sw:seiection) {)
set tree(Sw:selidx) ()
创建树素材的时候，一个名为“”的根结点将自动被创建出来。每次添加一个新结点的时
候，所有结点将按有关的缺省配置被初始化，其中包括与该结点关联着的子结点、是否需要把
该结点显示为打开状态、与该结点关联着的图标和标签等等。tree:DftConfig就是用来对结点进
行初始化的。
tree::DfltConfig--
Internal fuction used to initial the attributes &
Usually called when an item is added into the tree
associated with an iten/node.
Arguments:
vid
conplete path of the new node
tree widget
node
Results:
lnitializes the attributes associated with a node.
pruc tree::DfltConfig [wid node}{
variable tree
set tree(Swid:Snode:children）()
set
tree(Swid:Snode:open)
set tree(Swid:snode:icon)
set tree($wid:Snode:tags) ()
就象其他Tk素材一样，树素材应该支持-config素材命令。这是通过树素材的tree:config类方
加入jaVa编程群：524621833
---
## Page 555