# Checklist
  * I have checked the issues list  
for similar or identical bug reports.
  * I have checked the pull requests list  
for existing proposed fixes.
  * I have checked the commit log  
to find out if the bug was already fixed in the master branch.
  * I have included all related issues and possible duplicate issues in this issue  
(If there are none, check this box anyway).
## Related Issues and Possible Duplicates
#### Related Issues
  * None
#### Possible Duplicates
  * None
# Description
In Tasks -> Instantiation, the following code snippet is used:
    from celery import Task
    class DatabaseTask(Task):
        _db = None
        @property
        def db(self):
            if self._db is None:
                self._db = Database.connect()
            return self._db
    @app.task(base=DatabaseTask)
    def process_rows():
        for row in process_rows.db.table.all():
            process_row(row)
By not using `bind=True`, `process_rows.db` will be None in other class
methods such as `after_return`.
For example, this will fail:
    from celery import Task
    class DatabaseTask(Task):
        _db = None
        @property
        def db(self):
            if self._db is None:
                self._db = Database.connect()
            return self._db
        def after_return(self, status, retval, task_id, args, kwargs, einfo):
            if self._db is None:
                return
            self._db.close()
            # ^^^^ `self._db` is None
    @app.task(base=DatabaseTask)
    def process_rows():
        for row in process_rows.db.table.all():
            process_row(row)
# Suggestions
Use `bind=True`.