 **I'm submitting a ...** (check one with "x")
    [ ] bug report => search github for a similar issue or PR before submitting
    [x] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**
Currently, the `renderModuleFactory` method generated HTML depends the client
`main.bundle.js`. If use this HTML as pre-rendered version, while browser load
the HTML, Angular would re-render the DOM.
**Expected behavior**
The platform-server package can provide the method to generate the pre-
rendered HTML version
**Minimal reproduction of the problem with instructions**
the entry file: main.server.ts:
    import { ngExpressEngine } from '@nguniversal/express-engine';
    import * as express from 'express';
    import { AppServerModule } from './app/app.server.module';
    import { ROUTES } from './routes';
    app.engine('html', ngExpressEngine({
      bootstrap: AppServerModule
    }));
    app.set('view engine', 'html');
    app.set('views', 'dist/client');
    ROUTES.forEach(route => {
      app.get(route, (req, res) => {
        console.time(`GET: ${req.originalUrl}`);
        res.render('index', {
          req: req,
          res: res,
          preboot: true,
        });
        console.timeEnd(`GET: ${req.originalUrl}`);
      });
    });
After the express server start, using `curl` to get the generated HTML as pre-
rendered version.  
upload the HTML file to CDN network, open the HTML URL in browser, Angular
would re-render the DOM.
**What is the motivation / use case for changing the behavior?**
In some use case, we only have static web server & we also care about the SEO,
so we choose Angular Universal.  
And we want to use the pre-rendered HTML to boot app.
**Please tell us about your environment:**
  * **Angular version:** 4.1.2
  * **Browser:** [all ]
  * **Language:** [TypeScript 2.3.2]
  * **Node (for AoT issues):** `node --version` = v6.9.1
Reference: #13822