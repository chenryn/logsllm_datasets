# Understanding Malicious Cross-library Data Harvesting on Android

**Authors:**
- Jice Wang, National Computer Network Intrusion Protection Center, University of Chinese Academy of Sciences; Indiana University Bloomington
- Yue Xiao, Indiana University Bloomington
- Xueqiang Wang, Indiana University Bloomington
- Yuhong Nan, Purdue University
- Luyi Xing, Indiana University Bloomington
- Xiaojing Liao, Indiana University Bloomington
- JinWei Dong, School of Cyber Engineering, Xidian University
- Nicolas Serrano, Indiana University Bloomington
- Haoran Lu, Indiana University Bloomington
- XiaoFeng Wang, Indiana University Bloomington
- Yuqing Zhang, National Computer Network Intrusion Protection Center, University of Chinese Academy of Sciences; School of Cyber Engineering, Xidian University; School of Computer Science and Cyberspace Security, Hainan University

**Publication:**
- [USENIX Security Symposium 2021](https://www.usenix.org/conference/usenixsecurity21/presentation/wang-jice)
- Proceedings of the 30th USENIX Security Symposium, August 11–13, 2021
- ISBN: 978-1-939133-24-3
- Open access sponsored by USENIX

## Abstract

In recent years, security risks associated with libraries integrated into mobile apps have become increasingly prominent. These libraries are known to steal private user data from host apps and backend servers. However, their full security implications remain underexplored. Our research uncovers a new, previously ignored attack vector with serious privacy impacts: malicious libraries that target other vendors' SDKs within the same host app to harvest private user data (e.g., Facebook's user profile). We developed a methodology combining semantic analysis of SDK Terms of Service (ToS) and code analysis of cross-library interactions. This approach enabled us to analyze 1.3 million Google Play apps and 40 highly-popular SDK ToSes, leading to the discovery of 42 distinct libraries secretly harvesting data from 16 popular SDKs, affecting over 19,000 apps with a total of 9 billion downloads. Our study also sheds light on the underground ecosystem, unique strategies, and significant impacts of such library-based data harvesting.

## 1. Introduction

Modern mobile apps extensively incorporate third-party libraries (e.g., analytics, advertising, app monetization, or single-sign-on SDKs), which enhance functionality but also introduce security risks. Reports indicate that malicious SDKs can stealthily collect private user data from the device running the host app, as well as from the server or cloud supporting the app. While the significance of these leaks is recognized, it remains unclear whether a malicious library could compromise sensitive information from other data sources not directly controlled by the affected app.

### 1.1 Cross-library Data Harvesting (XLDH)

In our research, we discovered a novel type of data harvesting where malicious libraries strategically target SDKs from other vendors integrated into the same host app. These SDKs often carry sensitive user data. For example, the Facebook SDK, widely used for single sign-on, manages information such as a user’s name, birthday, locations, social, health, and political groups. A malicious library in the same app can exploit this data. Figure 1 illustrates a scenario where a malicious library first checks for the presence of the Facebook SDK, and if found, invokes the Facebook API to acquire the user’s session token and data. Given the widespread use of the Facebook Login SDK (in more than 16% of Google Play apps), the risk of such data leaks is significant. We term this attack "Cross-Library Data Harvesting" (XLDH).

### 1.2 Social Implications

Beyond personal privacy, XLDH can have serious social implications. The Cambridge Analytica scandal is a notable example, where personal data from millions of Facebook users was collected and used for malicious political advertising. XLDH provides a new avenue for such political profiling and promotion. Despite its importance, little has been done to understand and address this new security and privacy risk.

### 1.3 Methodology: XFinder

To address this issue, we developed XFinder, an automatic methodology to identify malicious libraries in real-world apps on Google Play. XFinder combines semantic analysis of SDK ToSes and code analysis of cross-library interactions. It extracts restricted data and third-party data sharing policies from ToSes and then analyzes the code of each integrated library to detect violations of these policies. This is challenging due to the complexity of analyzing ToSes and evaluating cross-library interactions.

### 1.4 Contributions

- **New Attack Vector:** Our study reveals a new, previously ignored attack vector with serious privacy implications: malicious libraries targeting third-party SDKs to harvest private user data.
- **Methodology:** We developed a novel methodology, XFinder, to automatically identify XLDH from over a million Android apps through semantic and code analysis.
- **Dataset and Code:** We release the dataset and source code for the automatic ToS analysis online [39].

## 2. Background

### 2.1 Cross-library API Calls

On Android, libraries can invoke functions of other libraries through explicit package imports and Java reflection. Reflection allows for more flexible function invocation, making behaviors more stealthy. Android's permission model does not enforce security boundaries between libraries within the same app, allowing one library to access another without restrictions.

### 2.2 SDK Terms of Service (ToS)

ToS documents outline terms, conditions, and requirements for using an SDK, including data usage and management. Unlike privacy policies, which inform end-users about data collection and use, ToS specifies rules for developers. In our research, we manually collected 40 ToSes from SDK vendors to investigate XLDH risks.

## 3. Methodology: XFinder

### 3.1 Overview

XFinder uses a combination of semantic analysis of ToSes and code analysis of cross-library interactions to identify malicious libraries. It extracts restricted data and sharing policies from ToSes and then analyzes the code of each integrated library to detect policy violations.

### 3.2 Semantic Analysis

Unlike privacy policies, ToSes describe restricted data whose security implications depend on context. Examples include security-critical data like passwords and tokens, and SDK-specific data like utdid (Alibaba), page likes (Facebook), and education information (LinkedIn). Existing techniques like Polisis and PolicyLint are not suitable for ToS analysis. XFinder uses natural language processing to capture sensitive data items and recover complex policies.

### 3.3 Code Analysis

XFinder's code analyzer module is designed to handle potential evasion tricks used by malicious libraries. It evaluates cross-library interactions and detects violations of data sharing policies. Our experiments show that XFinder achieved a high precision of 86% and successfully detected 42 malicious libraries from over one million Android apps.

## 4. Measurement and Discoveries

### 4.1 Impact

From 1.3 million Google Play apps, we discovered 42 distinct libraries stealthily harvesting data from third-party SDKs without user consent. These libraries were integrated into over 19,000 apps, with a total of 9 billion downloads. The harvested data includes access tokens, profile photos, and friend lists. For example, OneAudience, integrated into over 1,738 apps with 100 million users, collects private data from Facebook and Twitter SDKs. This data was shared with Nielsen, a marketing research firm, potentially for political marketing purposes.

### 4.2 Ecosystem

The XLDH ecosystem includes library distribution, stealthy data exfiltration channels, and data monetization. Vendors distribute libraries through multiple channels, including free app building services, integration into popular libraries, and offering app monetization. App developers integrating problematic libraries are paid $0.015 to $0.03 per app install. Malicious libraries use techniques like Java reflection to make their activities more stealthy and harder to detect.

### 4.3 Challenges in Elimination

We found that VirusTotal and Google Play can detect libraries collecting data from mobile devices but fail to detect XLDH libraries. XFinder addresses this gap. We reported our findings to affected parties, including Facebook, Twitter, and Google Play, who took action to mitigate the risk. Google asked developers to remove malicious libraries or drop the apps. Facebook and Twitter took legal action against OneAudience, owned by Bridge, a digital marketing company.

## 5. Conclusion

Our study highlights a new, previously ignored attack vector with serious privacy implications: malicious libraries targeting third-party SDKs to harvest private user data. We developed XFinder, a novel methodology to automatically identify XLDH from over a million Android apps. Our findings demonstrate the significant privacy and social impacts of this threat, and we provide insights into the underground ecosystem and challenges in controlling the risk.