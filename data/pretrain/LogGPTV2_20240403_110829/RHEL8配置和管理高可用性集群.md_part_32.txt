|                      |                     | 步启动尝试。当设置为 |
|                      |                     | `false`{.literal}    |
|                      |                     | 时，                 |
|                      |                     | 集群将根据资源当前的 |
|                      |                     | 故障数和迁移阈值决定 |
|                      |                     | 是否在同一节点中再次 |
|                      |                     | 启动。有关为资源设置 |
|                      |                     | `migration-          |
|                      |                     | threshold`{.literal} |
|                      |                     | 选项的详情，请参考   |
|                      |                     | [配置资源 meta       |
|                      |                     | 选项]                |
|                      |                     | (https://access.redh |
|                      |                     | at.com/documentation |
|                      |                     | /en-us/red_hat_enter |
|                      |                     | prise_linux/8/html/c |
|                      |                     | onfiguring_and_manag |
|                      |                     | ing_high_availabilit |
|                      |                     | y_clusters/assembly_ |
|                      |                     | configuring-cluster- |
|                      |                     | resources-configurin |
|                      |                     | g-and-managing-high- |
|                      |                     | availability-cluster |
|                      |                     | s#proc_configuring-r |
|                      |                     | esource-meta-options |
|                      |                     | -configuring-cluster |
|                      |                     | -resources){.link}。 |
|                      |                     |                      |
|                      |                     | 将                   |
|                      |                     | `start-failure       |
|                      |                     | -is-fatal`{.literal} |
|                      |                     | 设置为               |
|                      |                     | `false`{.literal}    |
|                      |                     | 会带来风险，         |
|                      |                     | 即可能会导致一个无法 |
|                      |                     | 启动资源的节点耽搁所 |
|                      |                     | 有依赖的操作。这就是 |
|                      |                     | `start-failure       |
|                      |                     | -is-fatal`{.literal} |
|                      |                     | 默认为 true          |
|                      |                     | 的原因。可以通过设置 |
|                      |                     | 低迁移阈值来降低设置 |
|                      |                     | `start-failure-is-fa |
|                      |                     | tal=false`{.literal} |
|                      |                     | 的风                 |
|                      |                     | 险，以便其他操作可在 |
|                      |                     | 多次失败后能够继续。 |
+----------------------+---------------------+----------------------+
| `pe-error-s          | -1（全部）          | 调度程序输           |
| eries-max`{.literal} |                     | 入的数量会导致要保存 |
|                      |                     | ERRO                 |
|                      |                     | Rs。报告问题时使用。 |
+----------------------+---------------------+----------------------+
| `pe-warn-s           | -1（全部）          | 调度                 |
| eries-max`{.literal} |                     | 程序输入的数量会导致 |
|                      |                     | WARNINGs             |
|                      |                     | 保                   |
|                      |                     | 存。报告问题时使用。 |
+----------------------+---------------------+----------------------+
| `pe-input-s          | -1（全部）          | 要保存的 \"normal\"  |
| eries-max`{.literal} |                     | 调度程序输入         |
|                      |                     | 数。报告问题时使用。 |
+----------------------+---------------------+----------------------+
| `cluster-infra       |                     | 当前运行的 Pacemaker |
| structure`{.literal} |                     | 的消息               |
|                      |                     | 堆栈。用于信息和诊断 |
|                      |                     | 目的，用户不能配置。 |
+----------------------+---------------------+----------------------+
| `d                   |                     | 集群的 Designated    |
| c-version`{.literal} |                     | Controller（DC）上的 |
|                      |                     | Pacemaker            |
|                      |                     | 版本。用于诊断       |
|                      |                     | 目的，用户不能配置。 |
+----------------------+---------------------+----------------------+
| `cluster-recheck     | 15 分钟             | 对选项               |
| -interval`{.literal} |                     | 、资源参数和限制进行 |
|                      |                     | 基于时间的更改轮询间 |
|                      |                     | 隔。允许的值：零代表 |
|                      |                     | 禁用轮询，正数值代表 |
|                      |                     | 以秒为单位的间隔（除 |
|                      |                     | 非指定了其它单位，如 |
|                      |                     | 5min）               |
|                      |                     | 。请注意，这个值是不 |
|                      |                     | 同检查之间的最长时间 |
|                      |                     | ；如果               |
|                      |                     | 集群事件发生的时间早 |
|                      |                     | 于这个值指定的时间， |
|                      |                     | 则会更早地进行检查。 |
+----------------------+---------------------+----------------------+
| `mainten             | false               | Maintenance Mode     |
| ance-mode`{.literal} |                     | 让集群               |
|                      |                     | 进入\"手动关闭\"模式 |
|                      |                     | ，而不要启动或停止任 |
|                      |                     | 何服务，直到有其他指 |
|                      |                     | 示为止。当维护模式完 |
|                      |                     | 成后，集群会对任何服 |
|                      |                     | 务的当前状态进行完整 |
|                      |                     | 性检查，然后停止或启 |
|                      |                     | 动任何需要它的状态。 |
+----------------------+---------------------+----------------------+
| `shutdown-e          | 20min               | 在经过这个时间后，   |
| scalation`{.literal} |                     | 放弃安全关闭并直接退 |
|                      |                     | 出。只用于高级使用。 |
+----------------------+---------------------+----------------------+
| `stop-all-           | false               | 集群是               |
| resources`{.literal} |                     | 否应该停止所有资源。 |
+----------------------+---------------------+----------------------+
| `e                   | false               | 指明                 |
| nable-acl`{.literal} |                     | 集群是否可以使用通过 |
|                      |                     | `pcs acl`{.literal}  |
|                      |                     | 命令                 |
|                      |                     | 设置的访问控制列表。 |
+----------------------+---------------------+----------------------+
| `placement           | `default`{.literal} | 指定在决定集群节点上 |
| -strategy`{.literal} |                     | 资源放置时集群是否以 |
|                      |                     | 及如何考虑使用属性。 |
+----------------------+---------------------+----------------------+
| `priority-fenc       | 0（禁用）           | （RHEL 8.3           |
| ing-delay`{.literal} |                     | 及更新的版本）允     |
|                      |                     | 许您配置一个双节点集 |
|                      |                     | 群，当出现脑裂的情况 |
|                      |                     | 时，运行最少资源的节 |
|                      |                     | 点是要被隔离的节点。 |
|                      |                     |                      |
|                      |                     | `priority-fenc       |
|                      |                     | ing-delay`{.literal} |
|                      |                     | 属                   |
|                      |                     | 性可以设置为持续时间 |
|                      |                     | 。这个属性的默认值为 |
|                      |                     | 0                    |
|                      |                     | （禁用）。如果将此属 |
|                      |                     | 性设置为非零值，并且 |
|                      |                     | `优先级`{.literal}   |
|                      |                     | meta-attribute       |
|                      |                     | 至少是为一个资源配   |
|                      |                     | 置的，那么在脑裂情形 |
|                      |                     | 中，则其上运行的所有 |
|                      |                     | 资源的优先级最高的节 |
|                      |                     | 点将更有可能被保留。 |
|                      |                     |                      |
|                      |                     | 例如：如果您设置     |
|                      |                     | `pcs                 |
|                      |                     |  resource defaults p |
|                      |                     | riority=1`{.literal} |
|                      |                     | 和                   |
|                      |                     | `pcs                 |
|                      |                     | property set priorit |
|                      |                     | y-fencing-delay=15s` |
|                      |                     | {.literal}，且没有设 |
|                      |                     | 置其他优先级,那么运  |
|                      |                     | 行最多资源的节点将更 |
|                      |                     | 可能丢失，因为其他节 |
|                      |                     | 点将在启动保护前等待 |
|                      |                     | 15                   |
|                      |                     | 秒。如果特定资源比其 |
|                      |                     | 他资源更重要，您可以 |
|                      |                     | 赋予它更高的优先权。 |
|                      |                     |                      |
|                      |                     | 如                   |
|                      |                     | 果为该克隆配置了优先 |
|                      |                     | 级，运行可升级的克隆 |
|                      |                     | master               |
|                      |                     | 角                   |
|                      |                     | 色的节点会得到额外的 |
|                      |                     | 1 点。               |
|                      |                     |                      |
|                      |                     | 使用                 |
|                      |                     | `priority-fenc       |
|                      |                     | ing-delay`{.literal} |
|                      |                     | 属性设置             |
|                      |                     | 的任何延迟都会添加到 |
|                      |                     | `pcmk_delay_base     |
|                      |                     |  和 pcmk_`{.literal} |
|                      |                     | delay                |
|                      |                     | _max``{=html} |
|                      |                     | 隔离设               |
|                      |                     | 备属性中的任何延迟。 |
|                      |                     | 当两个节点具有相等的 |
|                      |                     | 优先级时，或者两个节 |
|                      |                     | 点由于节点丢失而需要 |
|                      |                     | 隔离时（例如，如果为 |
|                      |                     | 资源监控器操作设置了 |
|                      |                     | `on-fai              |
|                      |                     | l=fencing`{.literal} |
|                      |                     | ），则此             |
|                      |                     | 行为允许一些延迟。如 |
|                      |                     | 果同时使用,建议您将  |
|                      |                     | `priority-fenc       |
|                      |                     | ing-delay`{.literal} |
|                      |                     | 属性设置为显著大于   |
|                      |                     | `pcmk_d              |
|                      |                     | elay_base`{.literal} |
|                      |                     | 和                   |
|                      |                     | `pcmk_               |
|                      |                     | delay_max`{.literal} |
|                      |                     | 之间最               |
|                      |                     | 大延迟的值,以确保首  |
|                      |                     | 选优先节点（确保优先 |
|                      |                     | 节点是完全安全的）。 |
|                      |                     |                      |
|                      |                     | 只有 Pacemaker       |
|                      |                     | 本                   |
|                      |                     | 身调度的隔离才会观察 |
|                      |                     | `priority-fe         |
|                      |                     | ncing-delay`{.litera |
|                      |                     | l}。通过外部代码（如 |
|                      |                     | `dlm                 |
|                      |                     | _controld`{.literal} |
|                      |                     | ）                   |
|                      |                     | 调度的隔离不会向隔离 |
|                      |                     | 设备提供必要的信息。 |
+----------------------+---------------------+----------------------+
:::
:::
:::
::: section
::: titlepage
# []{#assembly_controlling-cluster-behavior-configuring-and-managing-high-availability-clusters.html#setting-cluster-properties-controlling-cluster-behavior}设置和删除集群属性 {.title}
:::
要设置集群属性的值，使用以下 [**[pcs]{.application}**]{.strong} 命令。
``` literallayout
pcs property set property=value
```
例如，若要将 `symmetric-cluster`{.literal} 的值设置为
`false`{.literal}，请使用以下命令：
``` literallayout
# pcs property set symmetric-cluster=false
```
您可以使用以下命令从配置中删除集群属性。
``` literallayout
pcs property unset property
```
另外，您可以通过将 `pcs property set`{.literal} 命令的 value
字段留空来从配置中删除集群属性。这会将该属性恢复为默认值。例如，如果您之前将
`symmetric-cluster`{.literal} 属性设置为
`false`{.literal}，以下命令会从配置中删除您设置的值，并将
`symmetric-cluster`{.literal} 的值恢复为
`true`{.literal}，这是它的默认值。
``` literallayout
# pcs property set symmetic-cluster=
```
:::
::: section
::: titlepage
# []{#assembly_controlling-cluster-behavior-configuring-and-managing-high-availability-clusters.html#proc_querying-cluster-property-settings-controlling-cluster-behavior}查询集群属性设置 {.title}
:::
在大多数情况下，当使用 `pcs`{.literal}
命令显示各种群集组件的值时，您可以互换使用 `pcs list`{.literal} 或
`pcs show`{.literal}。在以下示例中，pc `s list`{.literal}
的格式用于显示多个属性的所有设置的完整列表，而 `pcs show`{.literal}
是用于显示特定属性值的格式。
要显示为集群设置的属性设置的值，使用以下
[**[pcs]{.application}**]{.strong} 命令。
``` literallayout
pcs property list
```
要显示集群属性设置的所有值，包括未明确设置的属性设置的默认值，请使用以下命令。
``` literallayout
pcs property list --all
```
要显示特定集群属性的当前值，请使用以下命令。
``` literallayout
pcs property show property
```
例如，要显示 `cluster-infrastructure`{.literal}
属性的当前值，请执行以下命令：
``` literallayout
# pcs property show cluster-infrastructure
Cluster Properties:
 cluster-infrastructure: cman
```
为方便起见，您可以通过下列命令，显示这些属性的所有默认值，无论是否将其设置为非默认值。
``` literallayout
pcs property [list|show] --defaults
```
:::
:::
[]{#assembly_configuring-resources-to-remain-stopped-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_configuring-resources-to-remain-stopped-configuring-and-managing-high-availability-clusters.html#assembly_configuring-resources-to-remain-stopped-configuring-and-managing-high-availability-clusters}第 22 章 配置资源以在清理节点关闭时保持停止 {.title}
:::
当集群节点关闭时，Pacemaker
的默认响应是停止在该节点上运行的所有资源，并在其它位置恢复这些资源，即使关闭是一个"干净"的关闭。从
RHEL 8.2 开始，您可以配置
Pacemaker，在节点关闭时，附加到节点的资源将锁定到节点，且无法在其他位置启动，直到节点关闭后重新加入集群时才会再次启动。这样，您可以在维护窗口期间关闭节点，这样可在接受服务中断时关闭节点，而不会导致节点资源切换到集群中的其他节点。
::: section
::: titlepage