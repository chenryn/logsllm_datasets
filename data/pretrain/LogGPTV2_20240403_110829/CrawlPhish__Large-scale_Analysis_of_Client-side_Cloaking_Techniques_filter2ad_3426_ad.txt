### Table IV: Overview of the Number of Distinct Groups of Cloaking Code Implementations in the APWG and Public Datasets

| Count | APWG Dataset | Top Group | Percentage | Earliest Implementation | Groups Used | From 2018 | Identical Groups |
|-------|---------------|-----------|------------|-------------------------|-------------|------------|------------------|
| 125   | 394           | 7.39%     | 09/2018    | 12                      | 14          |            |                  |
| 394   | 1,275         | 3.92%     | 08/2018    | 21                      | 9           |            |                  |
| 325   | 500           | 12.97%    | 07/2018    | 24                      | 20          |            |                  |
| 92    | 58            | 1.21%     | 06/2018    | 276                     | 127         |            |                  |
| 181   | 416           | 18.67%    | 11/2018    | 7                       | 11          |            |                  |
| 73    | 500           | 16.45%    | 10/2018    | 13                      | 31          |            |                  |
| 284   | 1,275         | 8.63%     | 06/2018    | 47                      | 37          |            |                  |
| 1,275 | 500           | 3.57%     | 09/2018    | 62                      | 43          |            |                  |
| 500   | 58            | 5.99%     | 06/2018    | 303                     | 197         |            |                  |

### Figure 6: Appearance of a Phishing Website with the Cookie Cloaking Technique

- **(a)** Benign page shown when cookies are disabled.
- **(b)** Force-executed version, which reveals the login form.

### Fingerprinting: Cookie
Similar to server-side cloaking techniques, client-side cloaking techniques can check visitors' request attributes to fingerprint them. Figure 6 illustrates a phishing website that fingerprints whether a visitor is a person or an anti-phishing bot by checking if cookies are disabled in the browser. When cookies are disabled, the phishing website displays benign content, as shown in Figure 6(a). Some anti-phishing crawlers disable cookies to avoid being bound to a single session. However, CrawlPhish detects cloaked phishing content as shown in Figure 6(b). This cloaking technique may also test if the browser cache is enabled [47].

### Fingerprinting: Referrer
Phishing websites can check whether incoming traffic originates from phishers' lures or other unwanted sources. Therefore, some phishing websites display benign content to visitors with a blank Referer [21], which could indicate that a URL was directly typed in. Similarly, referrals from search engines or known security domains can be blocked.

### Fingerprinting: User-Agent
Some phishing websites seek to identify anti-phishing crawlers based on their user-agent strings. The `navigator.userAgent` property stores information about the browser and operating system (e.g., Mozilla/5.0 (X11; Linux x86_64)). Therefore, anti-phishing bots such as Googlebot can be blocked as their `userAgent` property is a known value.

### Combinations of Cloaking Techniques
Multiple client-side cloaking techniques are occasionally used together by phishing websites to further increase evasiveness. For example, CrawlPhish found 503 instances of Click Through and Referrer used together. Additionally, we found Timing and Cookie in 476 cloaked phishing websites.

### B. Accuracy of Cloaking Categorization
To evaluate the accuracy of CrawlPhish’s categorization of cloaking types, we selected the same 2,000 cloaked phishing websites as in Section V (this set contains all three categories of client-side cloaking techniques) and manually labeled the correct cloaking type based on their code structure features. We then sent these websites through the feature extraction (Step 2) and the cloaking detection (Step 3) phases of CrawlPhish to locate the code blocks in which each cloaking technique is implemented. CrawlPhish checked the code structure feature similarity as populated over the course of our deployment (Step 4). As stated in Section IV-D, CrawlPhish compares the code structure features of all snippets flagged by Step 3 with the records in the database to discover all possible cloaking techniques in a given phishing website.

We found that CrawlPhish correctly categorized the cloaking type with 100% accuracy. This high accuracy stems in part from the manual inspection involved when the code structure features of the examined snippet do not match any existing records in the database, as discussed in Section IV-D. Thus, we conclude that web API calls, web events, and ASTs suffice for distinguishing between different cloaking types, even when the underlying implementations vary.

### C. Grouping of Implementations
Because phishing kits directly enable the scalability of phishing attacks and are readily available through underground markets [41, 53, 54], tracking the deployment and evolution of kits can help researchers and investigators pinpoint the threat actor (i.e., a kit author or criminal group) behind a series of phishing websites and identify the prevalence of phishing attacks attributable to the same author. The web page source code collected by CrawlPhish is suitable for this purpose because such source code can be obtained for virtually any phishing URL—unlike server-side code [44].

By comparing code similarity between JavaScript snippets used by cloaked phishing websites over time, we can group related cloaking technique implementations (i.e., implementations attributable to the same origin) together. Specifically, we compare the AST similarity among cloaking technique implementation code blocks to find matches using JSInspect [4] (the same technique we leveraged to check the code structure similarity). In Table IV, we provide an overview of the number of implementation groups that we found for each cloaking technique within the APWG Dataset and the Public Dataset. In addition, we compare the overlap in groups between the two datasets and determine the earliest date that each technique was observed.

#### Implementation Groups in the APWG Dataset
We found that the earliest implementation of each cloaking type was in 2018. Also, we found that 1,128 groups account for 35,067 cloaked phishing websites detected by CrawlPhish. Figure 7 shows the cumulative distribution function (CDF) of unique implementation groups in the APWG Dataset: 20% of unique cloaking implementation groups account for 74.65% of all phishing websites. This shows that a small number of phishing kits is likely responsible for a significant proportion of sophisticated phishing websites in the wild. We discover that the Timing cloaking type has the most groups (394) among all cloaking types. Because this cloaking technique is less popular according to our findings, we suspect that prominent phishing kit developers do not deploy it, though individual criminals may still want to leverage it. Among the largest groups, we observe that one group of Click Through cloaking accounted for 16.45% (1,275) of code variants. As many as 18.67% (284) of the Notification Window occurrences were within a single group.

#### Implementation Groups in the Public Dataset
We also compare the cloaking groups within the Public Dataset [24], which was sourced from OpenPhish [6], PhishTank [49], PhishStats [48], and other phishing URL archives. Using this additional dataset, we can validate that the APWG dataset was representative of the ecosystem and evaluate the existence of other cloaking techniques that may not have been present in the APWG dataset. Table IV shows detailed statistics on the cloaking group distributions between the two datasets. The number of groups found for each cloaking type from both datasets is similar. The Timing and Alert cloaking techniques have the most identical groups between the two datasets.

### D. Trends in Cloaking Usage
Table V shows the prevalence of each client-side cloaking technique type that CrawlPhish detected. Note that the sum of each cloaking technique’s occurrence may exceed 100% because some phishing websites implement multiple cloaking techniques.

#### Table V: Cloaking Technique Types in the APWG Dataset, as Detected by CrawlPhish

| Category        | Type             | 2018 Count (%) | 2019 Count (%) | Total Count (%) |
|-----------------|------------------|----------------|----------------|-----------------|
| Fingerprinting  | Cookie           | 1,295 (21.50%) | 6,842 (23.56%) | 8,137 (23.20%)  |
| Fingerprinting  | Referrer         | 2,416 (40.11%) | 17,782 (61.23%)| 20,198 (57.60%) |
| Fingerprinting  | User-Agent       | 2,427 (40.29%) | 6,138 (21.14%) | 8,568 (24.43%)  |
| User Interaction| Pop-up           | 6,141 (21.14%) | 30,765 (85.68%)| 36,903 (100.00%)|
| User Interaction| Alert            | 4,395 (12.53%) | 2,346 (6.69%)  | 6,741 (18.27%)  |
| User Interaction| Notification     | 1,396 (3.98%)  | 6,027 (17.19%) | 7,423 (20.17%)  |
| User Interaction| Click Through    | 1,521 (4.34%)  | 7,753 (22.11%) | 9,274 (25.13%)  |
| Bot Behavior    | Mouse Detection  | 5,797 (16.53%) | 1,623 (4.63%)  | 7,420 (20.15%)  |
| Bot Behavior    | Randomization    | 6,945 (19.80%) | -              | 6,945 (19.80%)  |

#### Table VI: Cloaking Technique Types in the Public Dataset

| Category        | Type             | Count  | Percentage |
|-----------------|------------------|--------|------------|
| Fingerprinting  | Cookie           | 6,633  | 24.28%     |
| Fingerprinting  | Referrer         | 17,634 | 64.55%     |
| Fingerprinting  | User-Agent       | 5,294  | 19.38%     |
| User Interaction| Pop-up           | 2,912  | 9.87%      |
| User Interaction| Alert            | 2,665  | 9.03%      |
| User Interaction| Notification     | 1,056  | 3.58%      |
| User Interaction| Click Through    | 7,641  | 25.89%     |
| Bot Behavior    | Mouse Detection  | 1,233  | 4.18%      |
| Bot Behavior    | Randomization    | 6,735  | 22.82%     |

This comprehensive analysis provides insights into the usage and evolution of cloaking techniques in phishing attacks, highlighting the need for continuous monitoring and adaptation in anti-phishing strategies.