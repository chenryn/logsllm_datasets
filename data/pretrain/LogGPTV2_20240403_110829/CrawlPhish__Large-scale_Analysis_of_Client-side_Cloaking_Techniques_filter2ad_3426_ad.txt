125
394
Count
325
92
181
73
284
1,275
500
58
416
APWG Dataset
Top Group
Percentage
Earliest
Impl.
Groups Used
From 2018
Identical
Groups
7.39% 09/2018
3.92% 08/2018
12.97% 07/2018
1.21% 06/2018
18.67% 11/2018
16.45% 10/2018
8.63% 06/2018
3.57% 09/2018
5.99% 06/2018
12
21
24
276
7
13
47
62
303
14
9
20
127
11
31
37
43
197
TABLE IV: Overview of the number of distinct groups of cloaking code implementations in the APWG and Public Datasets.
Force-executed
version,
(b)
which reveals the login form.
(a) Benign page shown when
cookies are disabled.
Fig. 6: Appearance of a phishing website with the Cookie
cloaking technique.
evade detection by anti-phishing systems. However, its use in
the wild suggests that it may be worthwhile: we suspect that
phishers who use this technique are aware of the conditions
for detection by anti-phishing entities and try to trick anti-
phishing bots with a non-deterministic approach to cloaking.
Fingerprinting: Cookie. Similar to server-side cloaking tech-
niques, client-side cloaking techniques can also check visitors’
request attributes to ﬁngerprint them. Figure 6 illustrates a
phishing website that ﬁngerprints whether a visitor is a person
or an anti-phishing bot by checking if cookies are disabled in
the browser. When cookies are disabled, the phishing websites
will display benign content, as shown in Figure 6a. Some anti-
phishing crawlers disable cookies to avoid being bound to a
single session. However, CrawlPhish detects cloaked phishing
content as shown in Figure 6b. Similarly, this cloaking tech-
nique may also test if the browser cache is enabled [47].
Fingerprinting: Referrer. Phishing websites can check
whether incoming trafﬁc originates from phishers’ lures or
other unwanted sources. Therefore, some phishing websites
display benign content to visitors with a blank Referer [21],
which could indicate that a URL was directly typed in.
Similarly, referrals from search engines or known security
domains can be blocked.
Fingerprinting: User-agent. Some phishing websites seek
to identify anti-phishing crawlers based on their user-agent
strings. The navigator.userAgent property stores in-
formation about
the browser and operating system (e.g.,
Mozilla/5.0 (X11; Linux x86 64)). Therefore, anti-phishing
bots such as Googlebot can be blocked as their userAgent
property is a known value.
Combinations of cloaking techniques. Multiple client-side
cloaking techniques are occasionally used together by phishing
websites, as doing so may further increase evasiveness. For
example, CrawlPhish found 503 instances of Click Through
and Referrer used together. Also, we found Timing and Cookie
in 476 cloaked phishing websites.
B. Accuracy of Cloaking Categorization
To evaluate the accuracy of CrawlPhish’s categorization of
cloaking types, we selected the same 2,000 cloaked phishing
websites as in Section V (this set contains all three categories
of client-side cloaking techniques) and manually labeled the
correct cloaking type based on their code structure features.
We, then, sent these websites through the feature extraction
( 2 ) and the cloaking detection ( 3 ) phases of CrawlPhish to
locate the code blocks in which each cloaking technique is
implemented. CrawlPhish checked the code structure feature
similarity as populated over the course of our deployment
( 4 ). As stated in Section IV-D, CrawlPhish compares the
code structure features of all snippets ﬂagged by Step 3 with
the records in the database to discover all possible cloaking
techniques in a given phishing website.
We found that CrawlPhish correctly categorized the cloak-
ing type with 100% accuracy. This high accuracy stems in part
from the manual inspection involved when the code structure
features of the examined snippet do not match any existing
records in the database, as discussed in Section IV-D. Thus,
we conclude that web API calls, web events, and ASTs sufﬁce
for distinguishing between different cloaking types, even when
the underlying implementations vary.
C. Grouping of Implementations
Because phishing kits directly enable the scalability of
phishing attacks and are readily available through underground
markets [41, 53, 54], tracking the deployment and evolution of
kits can help researchers and investigators pinpoint the threat
actor (i.e., a kit author or criminal group) behind a series of
phishing websites and identify the prevalence phishing attacks
attributable to the same author. The web page source code
collected by CrawlPhish is suitable for this purpose because
such source code can be obtained for virtually any phishing
URL—unlike server-side code [44].
By comparing code similarity between JavaScript snippets
used by cloaked phishing websites, over time, we can group
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:32:33 UTC from IEEE Xplore.  Restrictions apply. 
1117
still have the highest overall number of groups, which matches
the ﬁndings from the APWG dataset. The number of groups
for Click Through cloaking, however, increases from 51 to
105. We suspect that different phishers are developing more
phishing kits with this cloaking technique because they realize
that it can effectively evade detection by anti-phishing systems.
In addition, by comparing the AST similarity of imple-
mentation groups between the Public Dataset and the APWG
Dataset, we discover that the same groups of cloaking tech-
nique types exist in both datasets. 11 out of 17 distinct groups
of the Notiﬁcation cloaking technique in the APWG Dataset
also appear in the Public Dataset. Additionally, the Alert and
Timing cloaking techniques have the most identical groups
between the two datasets. This result indicates that phishing
kits leveraging client-site cloaking techniques are widely used.
Evolution of cloaking groups over time. Because we crawled
phishing data in both 2018 and 2019 from APWG feed, this
dataset enables us to trace the origin of each cloaking type. The
Timing, Alert, and Mouse Detection cloaking techniques were
ﬁrst used in phishing websites from June 2018 in our dataset.
The (more advanced) Notiﬁcation technique ﬁrst appeared
in November 2018. The early occurrence of these evasion
methods reminds us that phishers are trying to stay one step
ahead of the anti-phishing ecosystem. While researchers and
anti-phishing entities were working on mitigations against
server-side cloaking techniques [30, 44], those attackers had
already turned their focus toward implementing client-side
evasion methods. We suspect that those client-side cloaking
techniques may have already been employed well before June
2018 [30, 34] (the date we started crawling).
We also observe the evolution of cloaking techniques from
the perspective of obfuscation. From our crawling process,
we found that the code obfuscation rate on phishing websites
increased from 20.79% in 2018 to 24.04% in 2019. For
example, for the Pop-up cloaking technique, the earliest vari-
ant from June 2018 was not obfuscated. Gradually, phishers
started to obfuscate their cloaking technique implementations:
in October 2018, they added an encoding algorithm, while
the AST structure remained highly similar to unobfuscated
implementations. Later, phishers started to symmetrically en-
crypt client-side cloaking techniques (e.g., by using AES) and
included decryption keys only as request parameters. In such
cases, the AST of the same cloaking technique would differ
from an existing group, so we place them in a new group.
However, with CrawlPhish, we still ﬁnd similar web API
calls, so we consider this group to be an evolution of a prior
group (its origin). From this ﬁnding, we gain the intuition that
cybercriminals are improving client-side cloaking techniques
in phishing to make the latest implementations more difﬁcult
to analyze.
D. Trends in Cloaking Usage
Table V shows the prevalence of each client-side cloaking
technique type that CrawlPhish detected. Note that the sum
of each cloaking technique’s occurrence may exceed 100%
because some phishing websites implement multiple cloaking
Fig. 7: CDF of implementation groups for all phishing web-
sites in the APWG Dataset.
related cloaking technique implementations (i.e., implemen-
tations attributable to the same origin) together. Speciﬁcally,
we compare the AST similarity among cloaking technique im-
plementation code blocks to ﬁnd matches using JSInspect [4]
(the same technique we leveraged to check the code structure
similarity). In Table IV, we provide an overview of the number
of implementation groups that we found for each cloaking
technique within the APWG Dataset and the Public Dataset.
In addition, we compare the overlap in groups between the two
datasets, and we determine the earliest date that each technique
was observed.
Implementation groups in the APWG Dataset. We found
that the earliest implementation of each cloaking type was in
2018. Also, we found that 1,128 groups account for 35,067
cloaked phishing websites detected by CrawlPhish. Figure 7
shows the cumulative distribution function (CDF) of unique
implementation groups in the APWG Dataset: 20% of unique
cloaking implementation groups account for 74.65% of all
phishing websites. This shows that a small number of phish-
ing kits is likely responsible for a signiﬁcant proportion of
sophisticated phishing websites in the wild. We discover that
the Timing cloaking type has the most groups (394) among all
cloaking types. Because this cloaking technique is less popular
according to our ﬁndings, we suspect that prominent phishing
kit developers do not deploy it, though individual criminals
may still want to leverage it. Among the largest groups, we
observe that one group of Click Through cloaking accounted
for 16.45% (1,275) of code variants. As many as 18.67% (284)
of the Notiﬁcation Window occurrences were within a single
group.
Implementation groups in the Public Dataset. We also
compare the cloaking groups within the Public Dataset [24],
which was sourced from OpenPhish [6], PhishTank [49],
PhishStats [48], and other phishing URL archives. Using this
additional dataset, we can validate that the APWG dataset was
representative of the ecosystem and evaluate the existence of
other cloaking techniques that may not have been present in
the APWG dataset. Table IV shows detailed statistics on the
cloaking group distributions between the two datasets. The
number of groups found for each cloaking type from both
datasets is similar. The Timing and Alert cloaking techniques
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:32:33 UTC from IEEE Xplore.  Restrictions apply. 
1118
0%20%40%60%80%100%Percentage  of  Implementations20%40%60%80%100%Percentage  of  URLsCloaking Technique
Category
Type
Fingerprinting
User
Interaction
Cookie
Referrer
User-Agent
Pop-up
Alert
Notiﬁcation
Click Through
Mouse Detection
Randomization
Bot
Behavior
Total Cloaking Implementations
Timing
2018
Count
(%)
2019
Count
(%)
Total
Count
(%)
1,295
(21.50%)
6,842
(23.56%)
8,137
(23.20%)
2,416
(40.11%)
17,782
(61.23%)
20,198
(57.60%)
2,427
(40.29%)
6,138
6,141
(21.14%)
30,765
8,568
(24.43%)
36,903
Share
Count (%)
4,395 (12.53%)
2,346 (6.69%)
1,396 (3.98%)
6,027 (17.19%)
1,521 (4.34%)
7,753 (22.11%)
5,797 (16.53%)
1,623 (4.63%)
6,945 (19.80%)
-
TABLE V: Cloaking technique types in the APWG Dataset,
as detected by CrawlPhish.
Category
Cloaking Technique
Type
Cookie
Referrer
Fingerprinting
User-Agent
Pop-up
Alert
Notiﬁcation
Click Through
Mouse Detection
Randomization
User
Interaction
Bot
Total
Share
Count
Percentage
6,633
24.28%
17,634
64.55%
5,294
19.38%
29,561
-
Count
2,912
2,665
1,056
7,641
1,233
6,735
2,025
262
4,987
-
Percentage
9.87%
9.03%
3.58%
25.89%
4.18%
22.82%
6.86%
0.89%
16.90%
-
Behavior
Total Cloaking Implementations
Timing
TABLE VI: Cloaking technique types in the Public Dataset