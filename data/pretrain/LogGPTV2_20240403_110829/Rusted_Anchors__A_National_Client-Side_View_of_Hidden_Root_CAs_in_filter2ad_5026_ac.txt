ethical risks in this regard. First, the data collection methodology
only captures certificate chains that link to hidden root CAs or that
are invalid, only accounting for 0.54% of all web visits (Finding
4.1). Thus the majority of web visits associated with valid cer-
tificate chains signed by trusted root CAs are not collected and
are only counted for statistical purposes. Meanwhile, we carefully
anonymize real users by using the timestamp they joined the data
collection process as the client-IDs, which could avoid harvesting
any sensitive PII (Personally Identifiable Information) of volunteers.
Besides, when analyzing invalid websites and hosts signed by hid-
den roots, we focused only on insensitive statistics such as the
overall scale and percentage of different certificate validation er-
rors. We did not perform any in-depth examinations of the domain
content or their access relationship between clients to minimize
privacy concerns.
The collected certificate dataset is securely stored on servers that
maintain the client-side data by 360 Secure Browser. Researchers in
this project obtain access to the dataset via a temporary internship.
All analysis programs are run on the company’s virtual environ-
ments and we do not share the dataset with third parties. In the end,
through our best efforts, we believe that operations in this study
adhere to ethical conventions.
4 SCALE AND IMPACT ANALYSIS
This section uncovers the basic characteristics (scale, ownership,
active patterns, impact) of the hidden CA ecosystem.
4.1 Scale of Hidden Root Certificates
Finding 4.1: Within a five-month period, over 1.19 million hid-
den root certificates are detected as being used to threaten the
security of HTTPS connections, covering 0.54% of all visits.
Figure 5: Size and impact of certificate groups
In the following sections, we focus on the top 100 certificate
groups that each associate with over 1,000 web clients and 5,000
HTTPS visits. The top 100 groups account for 97.5% of all hidden
root certificates that are imported by clients, as well as 98.9% of
their associated HTTPS visits.
Dataset overview. Table 1 overviews our dataset. During Feb and
Jun 2020, volunteer users of 360 Secure Browser produced over 41
billion web visits over HTTPS. The browser collects over 222 million
4.2 Active Time
We define the active date of a hidden root certificate as the number
of days when certificate chains linked to this root are captured
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1378Table 1: Certificate dataset overview
Type of Root Cert
Hidden CAs
Public Trusted CAs
Filtering Condition
PUBLIC_TRUSTED=FALSE,
Trusted by at least one client
PUBLIC_TRUSTED=FALSE,
Rejected by all clients
PUBLIC_TRUSTED=TRUE,
STATUS_CODE has bits set
# Distinct Root Certs
# Cert Chains
# Leaf Certs
# FQDNs
1,175,145 (98.24%)
222,977,356
59,817,585
1,333,931
21,010 (1.76%)
263,109
112,946
15,566
615
241,541,342
3,647,095
1,871,131
by the browser. During the 5-month data collection period, 5,373
(0.4%) hidden root certificates are active for over 100 days. Looking
from the angle of the top 100 certificate groups, their active time in
the 5-month period can be up to 146 days on average. That is, the
vast majority of organizations behind the top groups have at least
one active hidden root certificate every day that is trusted by web
clients.
Finding 4.2: The ecosystem of hidden root CAs is dynamic and
updating, as new emerging CAs and retiring ones are both ob-
served.
To quantify the “stability” of top certificate groups, we calculate
the coefficient of variation (CV, the ratio of standard deviation to
the mean) of their daily count of associated HTTPS visits. A stable
certificate group should have daily traffic volume that does not vary
greatly. Empirically, certificate groups with a CV greater than 1
are considered unstable (for reference, the CV of all daily traffic
associated with hidden root certificates is 0.33). We find 13 certifi-
cate groups that match this criterion, and Figure 6 shows some
examples. The first group is only active for one day (Mar 14), which
belongs to a web debugging tool. We suppose it is included in our
dataset because of temporary tests. The following two certificate
groups are retiring. The traffic decrease of CEGN certificate group
is likely caused by a failure of promotion, as the vast majority of
clients reported an AUTHORITY_INVALID error. The root certificate
held by BJCA was used to sign yzt.beijing.gov.cn, but was re-
placed on Apr 18 by a trusted certificate chain. The bottom three
certificate groups are emerging, as their count of root certificates
and associated HTTPS traffic both rise (independent of the amount
of overall traffic), which suggests a possible growth in web clients
that are trusting them.
Interestingly, we find that over 183 thousand (15%) of hidden root
certificates are created during our 5-month data collection period,
and are quickly gaining trust from web clients. The largest batch
of creation appeared on Jun 13 with 2,853 new root certificates.
Among this batch, 2,505 certificates belong to one fake CA (Sec 4.3
describes more) that impersonates GlobalSign [62].
4.3 Categories of Ownership
Finding 4.3: Three major sources of hidden CAs are identified
through manual inspection: Self-built CAs (50 groups), Fake root
CAs (11 groups) and Local software CAs (24 groups).
Due to a lack of ground truth, determining the category and
purpose of each certificate group is non-trivial. We choose to man-
ually infer this information from the subjects of the top 100 root
Figure 6: Examples of temporary, retiring and emerging hid-
den root certificate groups.
certificate groups. For example, subject O=Venus, OU=Venus VPN
is used by Venustech VPN [42] and categorized as local software. If
the subject is not directly identifiable, we search keywords and hash
values of the certificate in search engines to infer its ownership. The
manual classification is performed by three security researchers,
and a certificate is classified only if over two researchers give the
same label.
As shown in Table 2, the ownership of 85 certificate groups
are identifiable and fall into three categories, including “self-built
CAs of organizations”, “fake CAs” and “local software”. Another 15
groups fall into the “unknown” group due to a lack of identifiers.
Finding 4.4: Self-built CAs are still widely used by organizations
such as government agencies and enterprises to issue website
certificates. However, over 75% of certificate chains suffer from
verification errors (e.g., weak signature algorithms).
Self-built root CAs of organizations. 50 of the top 100 certifi-
cate groups are held by self-built root CAs of enterprises, indepen-
dent organizations (e.g., digital authentication centers) and gov-
ernment agencies. In total, they sign certificates for 3,311 fully-
qualified domain names (FQDNs). However, more than 75% of cer-
tificate chains that link to self-built root CAs receive verification
errors from web clients (i.e., are invalid). The most common er-
ror is WEAK_SIGNATURE_ALGORITHM (78.3% of all errors), suggesting
prevalent adoption of weak security practices.
One may argue that self-built root CAs are for internal use only
(e.g., in enterprise networks) and that domains signed by them
are not publicly accessible; despite that their security policies are
worrisome, their impact is insignificant. However, we perform an
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1379Table 2: Subject category of top 100 hidden certificate groups
Categories
Enterprise Self-built
Digital Authentication
Government Self-built
Fake Authentications
Packet Filter
Proxy/VPN
Security Software
Parent Control
Unknown
# clusters
(groups)
# hidden
root certs
# affected
connections
# affected
clients
Invalid
(Authority)
24
13
13
11
11
10
2
1
15
48
18
16
817,532
15,587
90,131
7,187
7,554
207,957
2,071,344
3,261,905
314,351
199,743 (3.94%)
539,711 (10.65%)
62,032 (1.22%)
73,725 (1.45%)
1,029,648 (20.31%)
192,901,548 2,798,985 (55.21%)
3,622,177
3,050,138
509,645
70,8129
14,048,377
4,719 (0.09%)
7,787 (0.15%)
289,198 (5.07%)
35.54%
28.37%
30.46%
0.00%
13.57%
2.26%
0.01%
0.00%
2.89%
Invalid
(Other) Example of hidden root certificate
75.66% CN = SZSE ROOT CA, O = Shenzhen Stock Exchange
96.66% CN = CFCA ACS CA, O = China Financial Certificate Authentication
89.67% O = National E-Government Network Administration Center
0.25% CN = VeriSlgn Class 3 Public Primary Certification Authority - G4
14.39% CN = NetFilterSDK 2
4.27% CN = koolproxy.com, O = KoolProxy inc
0.32% O = Beijing SkyGuard Network Technology Co., Ltd
0.57% CN = UniAccessAgentFW 2
4.73% CN = VRV NDF RootCA 2
additional scanning experiment showing that a majority of self-built
root CAs do sign certificates for websites open to the public.
We deploy several controlled Virtual Private Servers on Alibaba-
Cloud [18], located in the US, Singapore, Germany and China. On
each machine, we use OpenSSL to fetch and verify certificate chains
of the 3,311 FQDNs that link to self-built root CAs in our dataset.
In January 2021 (6 months after the data collection period ended),
we are able to fetch certificate chains of 2,439 FQDNs (73.6%) that
still link to 36 (72%) self-built certificate groups. We also inspect the
remaining 14 organizations that disappear in the scanning experi-
ment, and find 7 of them are for internal use, thus the certificates
cannot be reached by our active scanners. The remaining 7 groups
are retired by new self-built root CAs or publicly trusted root CAs.
In the end, our measurement findings suggest that weak security im-
plementations are common among self-built root CAs, and should
be fixed as they widely sign websites that are publicly accessible.
Finding 4.5: Fake CAs which impersonate large trusted CAs
with good reputation to evade detection, are becoming emerg-
ing security threats. These CAs infecting more than 2.7 million
devices and are highly trusted by web clients, as nearly none
reports “Authority Invalid” errors.
Fake root CAs. 11 of the top 100 certificate groups are classified as
fake root CAs that impersonate trusted CAs with deceptive subject
names. As shown by examples in Table 3, they replace characters in
authentic CA names with homoglyphs (e.g., Verislgn with an “l”
and NetWork with an upper-case “W”) or extend their words (e.g.,
extend GlobalSign to GlobalSignature). However, none of the
certificates’ public keys are present in the official lists of large CAs
(e.g., public key lists of GlobalSign [62] and Certum [11]).
In Table 2, we show that these fake CAs associate with the
most web visits (192M) and certificate chains (2.7M), and almost
all of them are trusted by web clients (only 0.0001% of connections
receive an AUTHORITY_INVALID error). Compared to self-built CAs
that commonly use weak keys and algorithms, fake root CAs are
more secure in implementation, with an invalid rate of only 0.25%.
However, fake root CAs still introduce security threats, as they have
been found to illegally issue certificates for popular websites [39].
Uncovering the real owner behind fake root certificates is chal-
lenging, as the subjects are deceptive names that do not provide
valuable information. To explore by our best effort, we leverage
threat intelligence systems and sandbox logs of malware. We first
search all fake root certificates in threat intelligence systems (such
as VirusTotal), but only find one hit. The matched certificate is
associated with a Trojan [17] and is witnessed by 6.8 thousand
web clients in 75 thousand web visits during our data collection
period. Following, we also seek for cooperation with two leading
security companies and match the certificates in their sandbox logs
of malware samples. During malware installation, the sandboxes
monitor the local root store to track modifications. We are able
to find logs of 43 fake root certificates in our dataset, which as-
sociate with “Trojan”, “CoinMiner” and “Adware”. Again, we are
not able to identify the real owner of all fake root certificates in
our dataset, but information embedded in threat intelligence and
sandboxes show their potential connection to malicious parties.
However, considering the large volume of HTTPS connections and
web clients that are affected by fake CAs, we speculate that except
for malicious software, hidden certs in this category may also come
from other sources, including spamming tools and free applications