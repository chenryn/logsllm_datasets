.TP 8
\fB\-A\fP \fIaction\fP
\fIaction\fP 可以是下列之一，来产生一系列可能的补全结果：
.RS
.TP 8
.B alias
起别名。也可以用 \fB\-a\fP 指定。
.TP 8
.B arrayvar
数组变量名。
.TP 8
.B binding
\fBReadline\fP 按键关联。
.TP 8
.B builtin
shell 内建命令的名称。也可以用 \fB\-b\fP 指定。
.TP 8
.B command
命令名。也可以用 \fB\-c\fP 指定。
.TP 8
.B directory
目录名。也可以用 \fB\-d\fP 指定。
.TP 8
.B disabled
被禁用的内建命令名称。
.TP 8
.B enabled
启用的内建命令名称。
.TP 8
.B export
被导出的 shell 变量名称。也可以用 \fB\-e\fP 指定。
.TP 8
.B file
文件名。也可以用 \fB\-f\fP 指定。
.TP 8
.B function
shell 函数的名称。
.TP 8
.B group
组名。也可以用 \fB\-g\fP 指定。
.TP 8
.B helptopic
内建命令 \fBhelp\fP 接受的帮助主题。
.TP 8
.B hostname
主机名，从环境变量
.SM
.B HOSTFILE
指定的文件中得到。
.TP 8
.B job
作业名，如果作业控制被激活的话。也可以用 \fB\-j\fP 指定。
.TP 8
.B keyword
shell 保留字。也可以用 \fB\-k\fP 指定。
.TP 8
.B running
正在运行的作业名，如果作业控制被激活的话。
.TP 8
.B service
服务名。也可以用 \fB\-s\fP 指定。
.TP 8
.B setopt
内建命令 \fBset\fP 的 \fB\-o\fP 选项的有效参数。
.TP 8
.B shopt
内建命令 \fBshopt\fP 接受的 shell 选项名。
.TP 8
.B signal
信号名。
.TP 8
.B stopped
停止的作业名，如果作业控制被激活的话。
.TP 8
.B user
用户名。也可以用 \fB\-u\fP 指定。
.TP 8
.B variable
shell 变量的名称。也可以用 \fB\-v\fP 指定。
.RE
.TP 8
\fB\-G\fP \fIglobpat\fP
文件名扩展模式 \fIglobpat\fP 被扩展，产生可能的补全。
.TP 8
\fB\-W\fP \fIwordlist\fP
.SM
\fIwordlist\fP 被使用
.B IFS
特殊变量中的字符作为定界符来拆分，每个结果的词被扩展。可能的补全是结果列表
中匹配要补全的词的那一些。
.TP 8
\fB\-C\fP \fIcommand\fP
\fIcommand\fP 将在一个子 shell 环境中执行，它的结果用作可能的补全。
.TP 8
\fB\-F\fP \fIfunction\fP
shell 函数 \fIfunction\fP 将在当前 shell 环境中执行。当它结束时，可能
的补全可以从数组元素
.SM
.B COMPREPLY
中得到。
.TP 8
\fB\-X\fP \fIfilterpat\fP
\fIfilterpat\fP 是一个模式，用于文件名扩展。所有前面的选项和参数产生
的可能的补全都要经过这一步处理，每一个匹配 \fIfilterpat\fP 的补全都
被从列表中删除。为 \fIfilterpat\fP 加上前导 \fB!\fP 使模式意义相反；
这种情况下，所有不匹配 \fIfilterpat\fP 的模式被删除。
.TP 8
\fB\-P\fP \fIprefix\fP
在所有其他选项都处理过之后，\fIprefix\fP 被加到每个可能的补全前面。
.TP 8
\fB\-S\fP \fIsuffix\fP
在所有其他选项都处理过之后，\fIsuffix\fP 被加到每个可能的补全后面。
.PD
.PP
返回值为真，除非给出了非法的选项，给出除 \fB\-p\fP 和 \fB\-r\fP 之外
的某个选项时没有给出 \fIname\fP 参数，试图删除一条 \fIname\fP 的补全
规则但是规则不存在，或者添加补全规则时出错。
.RE
.TP
\fBcontinue\fP [\fIn\fP]
复位到外层
.BR for ,
.BR while ,
.BR until ,
或
.B select
循环的下一次开始。如果指定了
.I n，
复位到向外第 \fIn\fP 层循环的开始。
.I n
必须 \(>= 1。如果
.I n
比外部循环的层数要多，将复位到最外层的循环 (``top-level'' loop，顶层循环)。
返回值是 0，除非执行
.B continue
时，shell 不是在循环之中。
.TP
\fBdeclare\fP [\fB\-afFirtx\fP] [\fB\-p\fP] [\fIname\fP[=\fIvalue\fP]]
.PD 0
.TP
\fBtypeset\fP [\fB\-afFirtx\fP] [\fB\-p\fP] [\fIname\fP[=\fIvalue\fP]]
.PD
声明变量且/或设置它们的属性。如果没有给出 \fIname\fP 则显示变量的值。
选项
.B \-p
将显示每个名称
.IR name 
的属性和值。当使用
.B \-p
时，其他选项被忽略。选项
.B \-F
禁止显示函数定义；只有函数名和属性会被显示。
.B \-F
选项暗含
.BR \-f .
下列选项可用来限制只输出具有指定属性的变量，或者为变量设置属性：
.RS
.PD 0
.TP
.B \-a
每个 \fIname\fP 都是数组变量 (参见上面的
.B Arrays
段落)。
.TP
.B \-f
只使用函数名。
.TP
.B \-i
变量被当作一个整数；当变量被赋值时将进行算术运算 (参见
.SM
.B "算术求值 (ARITHMETIC EVALUATION)"
章节)。
.TP
.B \-r
使得 \fIname\fP 只读。这些名称不能再被后续的赋值语句赋值或取消定义。
.TP
.B \-t
设置每个 \fIname\fP 的 \fItrace\fP(跟踪) 属性。被跟踪的函数继承了
调用者 shell 的 \fBDEBUG\fP 陷阱。trace 属性对变量没有特殊意义。
.TP
.B \-x
标记 \fIname\fP 为可以通过环境导出给后续命令。
.PD
.PP
使用 `+' 代替 `\-' 将关闭属性，特殊情况是 \fB+a\fP 不能用于销毁一个
数组变量。当用于函数中时，它使得每个 \fIname\fP 成为局部的，就像
使用了 
.B local
命令。返回值是 0，除非遇到了非法的选项，试图使用
.if n ``\-f foo=bar''
.if t \f(CW\-f foo=bar\fP
定义函数，试图向只读变量赋值，试图向数组变量赋值但没有使用复合的赋值
语法 (参见上面的
.B Arrays
段落)，\fIname\fP 之一不是有效的 shell 变量名，试图将数组变量的数组
状态关闭，或者是试图使用 \fB\-f\fP 显示一个不存在的函数。
.RE
.TP
.B dirs [\fB\-clpv\fP] [+\fIn\fP] [\-\fIn\fP]
没有选项时显示当前保存的目录。默认输出为一行，目录名用空格分开。
可以使用
.B pushd
命令将目录添加到列表，
.B popd
命令将列表中的条目删除。
.RS
.PD 0
.TP
\fB+\fP\fIn\fP
显示
.B dirs
在不带选项执行时显示的列表的第 \fIn\fP 个条目，从 0 开始自左算起。
.TP
\fB\-\fP\fIn\fP
显示
.B dirs
在不带选项执行时显示的列表的第 \fIn\fP 个条目，从 0 开始自右算起。
.TP
.B \-c
删除所有条目，清空目录栈。
.TP
.B \-l
产生长列表；默认列表格式使用波浪线来表示个人目录。
.TP
.B \-p
输出目录栈，一行一个。
.TP
.B \-v
输出目录栈，一行一个，每个条目前面加上它在栈中的位置索引。
.PD
.PP
返回值是 0，除非给出了非法的参数，或者 \fIn\fP 索引超出了目录栈的范围。
.RE
.TP
\fBdisown\fP [\fB\-ar\fP] [\fB\-h\fP] [\fIjobspec\fP ...]
没有选项时，每个
.I jobspec
被从正在运行的作业表中删除。如果给出了 \fB\-\fP 选项，每个
.I jobspec
并不从表中删除，而是被标记，使得在 shell 接到
.SM
.BR SIGHUP 
信号时，不会向作业发出
.SM
.B SIGHUP
信号。如果没有给出
.I jobspec，
也没有给出
.B \-a
或者
.B \-r
选项，将使用当前作业 (\fIcurrent job\fP)。如果没有给出
.I jobspec，
选项
.B \-a
意味着删除或标记所有作业；选项
.B \-r
不带
.I jobspec
参数时限制操作只对正在运行的作业进行。返回值是 0，除非
.I jobspec
不指定有效的作业。
.TP
\fBecho\fP [\fB\-neE\fP] [\fIarg\fP ...]
输出 \fIarg\fP，以空格分开，最后加一个新行符。返回值总是 0。
如果指定了 \fB\-n\fP，将不在尾部添加新行符。如果给出了 \fB\-e\fP 选项，
将允许解释下列反斜杠转义的字符。
.B \-E
选项禁止这些转义字符的解释，即使在默认解释它们的系统中也是如此。
shell 选项 \fBxpg_echo\fP 可以用来在运行时判断 \fBecho\fP 是否默认
展开这些转义字符。
.B echo
不将
.B \-\-
作为选项的结束。
.B echo
解释下列转义序列：
.RS
.PD 0
.TP
.B \ea
alert (bell) 响铃
.TP
.B \eb
backspace 回退
.TP
.B \ec
suppress trailing newline 删除尾部新行符
.TP
.B \ee
an escape character 字符 Esc
.TP
.B \ef
form feed 进纸
.TP
.B \en
new line 新行符
.TP
.B \er
carriage return 回车
.TP
.B \et
horizontal tab 水平跳格
.TP
.B \ev
vertical tab 竖直跳格
.TP
.B \e\e
backslash 反斜杠
.TP
.B \e0\fInnn\fP
一个八比特字符，它的值是八进制值 \fInnn\fP (零到三个八进制数字)。
.TP
.B \e\fInnn\fP
一个八比特字符，它的值是八进制值 \fInnn\fP (一到三个八进制数字)。
.TP
.B \ex\fIHH\fP
一个八比特字符，它的值是十六进制值 \fIHH\fP (一到两个十六进制数字)。
.PD
.RE
.TP
\fBenable\fP [\fB\-adnps\fP] [\fB\-f\fP \fIfilename\fP] [\fIname\fP ...]
允许或禁止 shell 内建命令。禁止一个内建命令使得磁盘上的与内建命令同名
的文件得以运行，不必使用它的全路径，即使 shell 一般在搜索磁盘上的命令之前
搜索内建命令。如果使用了 \fB\-n\fP 选项，每个 \fIname\fP 都被禁止；否则，
\fIname\fP 被允许。例如，要使用
.SM
.B PATH
中搜索到的
.B test
命令而不是 shell 内建的那一个，可以运行
.if t \f(CWenable -n test\fP.
.if n ``enable -n test''.
选项
.B \-f
意味着从共享库
.IR filename
中加载新的内建命令
.I name，
如果系统支持动态加载的话。选项
.B \-d
将删除曾经用
.BR \-f 
加载的内建命令。如果没有给出 \fIname\fP 参数，或者给出了
.B \-p
选项，将显示 shell 内建命令的列表。如果没有其他选项参数，
这个列表只包含所有被允许的 shell 内建命令；如果给出了
\fB\-n\fP，将只显示被禁止的内建命令；如果给出了 