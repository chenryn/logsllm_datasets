# Optimization of Digit Semantics for Practical Password Cracking Tools

## Introduction
In this section, we explore the effectiveness of digit semantics in improving the efficiency of password cracking tools. Specifically, we compare the performance of a set of 100 digit semantics rules (referred to as Digits_100) and the full set of Digits with 10,000, 100,000, and 500,000 random rules generated by Hashcat (referred to as HR_10000, HR_100000, and HR_500000, respectively).

### Experimental Setup
- **Digits_100**: A set of 100 digit semantics rules.
- **Digits**: The full set of digit semantics rules.
- **HR_10000, HR_100000, HR_500000**: Random rules generated by Hashcat.

### Results
The following table shows the number of extra guesses and the relative increase after adding each additional rule set. Our digit semantics rules generally crack more new passwords with fewer guesses, especially for Chinese passwords.

| Rule Set | Extra Guesses | Relative Increase |
|----------|---------------|-------------------|
| Digits_100 | 1.17 × 10^11 | 146.78% |
| HR_10000 | 4.78 × 10^11 | 154.09% |
| Digits | 1.01 × 10^11 | 93.50% |
| HR_100000 | 1.01 × 10^12 | 136.09% |
| HR_500000 | 5.05 × 10^12 | 160.74% |

### Analysis
- **Chinese Passwords**: The relative increase of Digits_100 is significantly higher than that of HR_10000, even under T0XlC (2.01×) and the large rule set Generated2 (28.79×). Even when compared to HR_100000, which generates guesses of one more order of magnitude, the increase of Digits_100 is still higher.
- **English Passwords**: The advantage of digit semantics on English passwords is less significant but still evident. Digits_100 brings a much higher increase compared to HR_10000, and even exceeds the performance of HR_100000 under Generated2.

## Discussion
### Matching Method
The matching method used in our extraction tool is an expansion of the type-based tagging method proposed in [46]. We focus on digit semantics and propose 12 tags. Based on these tags, we develop an automatic, highly configurable extraction tool. We also arrange the matching order to reduce false positives and add a step to segment unmatched segments for a finer-grained dictionary.

### Password Policies and Guidelines
Our analysis reveals vulnerabilities in using digit semantics, particularly dates. Users are advised to use password managers to create random passwords and avoid vulnerable digit semantics. Additionally, placing digit segments at the end, front, or as a whole password can be exploited by attackers. Using password managers can mitigate these threats.

### Further Work
In the future, we plan to apply more types of semantics represented with letters, such as names and cities, into rule-based attacks in practical password cracking tools.

## Conclusion
This study optimizes practical password cracking tools by utilizing rich digit semantics in passwords. Our evaluation results show significant improvements in guessing efficiency. For example, compared to the extended rule set used in the work of Liu et al. [29], our digit semantics rules applied in JtR can achieve increases of up to 17.58% (under 10^11 guesses) and 28.47% (under 10^7 guesses) when cracking Chinese and English passwords with digit segments.

## Acknowledgments
We thank all anonymous reviewers for their insightful comments. This paper is supported by the Natural Science Foundation of China (Grant NO.: U1836207) and the National Key Projects of Research and Development (Grant NO.: 2019YFE010495). The corresponding author is Weili Han.

## References
[References listed as provided in the original text]

---

This revised version provides a clear and professional presentation of the research, making it easier to understand the methodology, results, and implications.