### Bug report
**Bug summary**
Plotting negative values on a log scale is possible. However it changes the
axis limits in a seemingly arbitrary way.
**Code for reproduction**
The following shows three scatter plots. The `x` values  
(1) are all positive  
(2) contain one negative value  
(3) have the negative value filtered out
    import numpy as np; np.random.seed(1)
    import matplotlib.pyplot as plt
    x = np.random.rayleigh(100,400)
    y = np.random.rand(len(x))
    fig, (ax,ax2, ax3) = plt.subplots(nrows=3)
    ax.scatter(x,y)
    ax.set_xscale("log")
    ax.set_title("Scatter of all-positive values")
    ax2.scatter(x-2,y)
    ax2.set_xscale("log")
    ax2.set_title("Scatter with one negative value")
    cond = x-2 > 0
    ax3.scatter((x-2)[cond],y[cond])
    ax3.set_xscale("log")
    ax3.set_title("Expected scatter with one negative value")
    plt.tight_layout()
    plt.show()
**Actual outcome**
The second subplot, where the data contains a negative value, shows only part
of the valid data, because the axis is autoscaled to some seemingly arbitrary
region.
![image](https://user-
images.githubusercontent.com/23121882/37407656-7a2ba57c-279a-11e8-8957-1f85be04d97e.png)
**Expected outcome**
The third subplot would be the expected outcome with the axis autoscaled to
show all points.
One could also argue that plotting negative data on a log scale should not be
supported at all, and that it should be the user's responsibility to make sure
the data is positive. In that case however it would make sense to issue a
warning instead of just plotting something arbitrary.
**Matplotlib version**
  * Operating system: Windows 8.1
  * Matplotlib version: 2.2
  * Matplotlib backend: any
  * Python version: 2.7.10