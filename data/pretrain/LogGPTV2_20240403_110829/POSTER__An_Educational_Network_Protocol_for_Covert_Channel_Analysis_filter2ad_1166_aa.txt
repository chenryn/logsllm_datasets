# Title: An Educational Network Protocol for Covert Channel Analysis Using Patterns

## Authors:
- Steffen Wendzel, Fraunhofer FKIE / Hochschule Worms, Germany
- Wojciech Mazurczyk, Warsaw University of Technology, Poland

## Abstract
The use of information hiding techniques is increasing among cybercriminals, who employ them to conceal the communication of malicious software, as well as by ordinary users for privacy-enhancing purposes. A recent trend involves using network traffic to create covert channels for transmitting secret data. Consequently, security expert training is incomplete if these aspects are not adequately covered. This paper addresses this gap by introducing a method for teaching covert channel analysis of network protocols. We define a sample protocol, the Covert Channel Educational Analysis Protocol (CCEAP), which can be used in educational settings. Compared to previous approaches, our method simplifies the understanding of network covert channels by eliminating the need for students to know multiple network protocols in advance and by focusing on specific hiding patterns.

### CCS Concepts
- **Security and Privacy**: Network Security
- **Social and Professional Topics**: Computing Education

### Keywords
- Covert Channels
- Steganography
- Information Hiding

## 1. Introduction
Network covert channels are communication paths that enable hidden and unexpected data exchange in computer networks. These channels are created through various hiding methods and fall under the research domain of Network Steganography [2, 1]. Covert channels can facilitate stealthy malware communications, continuous, undetectable data leakage from organizations, hidden communications by intelligence agencies, or covert communications for journalists to transfer sensitive information under censorship [2]. Recently, there has been a growing interest from the security community in information hiding techniques, and an increase in their utilization by cybercriminals. However, when training students and security experts, these aspects are often briefly covered or omitted entirely. Therefore, it is crucial to develop new methods to effectively fill this training gap.

### Permissions
Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s).

**CCS'16, October 24-28, 2016, Vienna, Austria**
**Copyright Â© 2016 held by the owner/author(s).**
**ACM ISBN 978-1-4503-4139-4/16/10.**
**DOI: http://dx.doi.org/10.1145/2976749.2989037**

To understand covert channels and their impact on security, an in-depth knowledge of several topics related to network communications, including various network protocols and steganography fundamentals, is required. This prerequisite poses a challenge in teaching covert channels to students.

We present a new approach to teach network covert channels. Our solution eliminates the need for students to know and understand multiple separate network protocols such as IP, TCP, or HTTP in advance. Instead, we designed a single network protocol, CCEAP, that is intentionally vulnerable to several covert channels. Additionally, instead of teaching over 130 known hiding methods, our approach focuses on several generic hiding patterns. These patterns represent the core ideas of hiding methods and reduce the number of concepts students must comprehend. We demonstrate how CCEAP can be used to generate covert storage channels, i.e., those that embed hidden data in a network protocol data unit (PDU) rather than modifying packet timings (timing channels). Our proof-of-concept implementation is available as open-source code and is designed for undergraduate classes.

The remainder of this paper is structured as follows: Section 2 discusses related work, Section 3 introduces the CCEAP protocol, Section 4 explains the link between CCEAP and hiding patterns, Section 5 outlines the envisaged teaching workflow and sample exercises, and Section 6 concludes the paper.

## 2. Related Work
Several surveys on network covert channels exist, such as [1, 2, 3]. These publications have identified over a hundred hiding methods. As shown in [3], 109 hiding methods can be categorized into eleven different hiding patterns. These patterns describe the core idea of a hiding method and are the essential aspect that students must understand. For example, while several hiding methods modify the case of ASCII letters in plaintext protocols to signal hidden data, the core idea of case modification is always represented by the same pattern, "Value Modulation."

Few publications address the teaching of network covert channels. In 2008, Zander and Armitage published the Covert Channel Evaluation Framework [4], which can be used to establish and analyze various network covert channels over TCP/IP. Recently, Zseby et al. introduced an educational testbed for network steganography [5], available for download and evaluated with university students. Our work complements these efforts by providing a different approach to teaching network covert channels using a single, purpose-designed network protocol.

## 3. Protocol Design
Existing network protocols are typically vulnerable to only a few hiding patterns simultaneously. Teaching hiding methods thus requires switching between several network protocols to cover the analysis process. This switching can be challenging as students must learn the basics of each protocol beforehand, making it harder to grasp the main concepts of information hiding. To address this, we propose and present the CCEAP, a protocol specifically designed to illustrate the process of covert channel analysis. CCEAP is vulnerable to several known hiding patterns described in [2, 3].

Compared to previous approaches, our method:
- Introduces the CCEAP communication protocol, designed for teaching covert channel analysis, allowing students to understand multiple hiding methods using a single protocol.
- Implements CCEAP in a tool that is accessible and easy to use, with minimal lines of code and direct textual output.
- Excludes unnecessary protocol elements, focusing solely on educational requirements.
- Makes hiding patterns the central aspect, exemplifying hiding methods in CCEAP with links to specific patterns.
- Simplifies the understanding of hiding patterns in two scenarios: either students find ways to implement a specific hiding method with CCEAP, or they analyze CCEAP commands or traffic to determine the related pattern (as in malware analysis).
- Allows the hybrid combination of hiding methods.

### CCEAP Header Structure
CCEAP includes a simple, extendable protocol header (Figure 1). The main header contains three 32-bit words. Word 0 consists of a sequence number used to order packets at the receiver-side. The number of options field indicates whether one or more 'options' headers are present, which extend the main header. These options headers are embedded behind the main header, similar to IPv4 options. The destination length field indicates the length of the destination address, which is an ASCII value of 1-8 bytes. The dummy byte is reserved for future use, as in many existing network protocols. Words 1 and 2 contain the destination address, padded with bits if the address is less than eight bytes long.

**Figure 1. CCEAP main header (top) and options header (bottom)**

A CCEAP packet can contain up to 255 options headers, indicated by the number of options field in the main header. Each option includes a freely choosable identifier, a definable type, and a choosable value. The last byte is again an unused dummy value.

**Table 1. Comparison of CCEAP fields with existing network protocols:**

| **CCEAP Field** | **Equivalent in Existing Protocols** |
|-----------------|-------------------------------------|
| Sequence Number | TCP and IPSec AH 'Sequence Number' |
| Number of Options | IPv4 'Internet Header Length' field |
| Destination Length | IPv6 'Payload Length', DNS resource record domain name encoding (similar), DHCP option's padding |
| Dummy | Undefined/reserved bits in IPv6, TCP, IEEE 802.5, RIP, and others |
| Destination Addr./Padding | ASCII value in plaintext headers |

This design ensures that CCEAP is both versatile and easy to understand, making it an effective tool for teaching network covert channel analysis.