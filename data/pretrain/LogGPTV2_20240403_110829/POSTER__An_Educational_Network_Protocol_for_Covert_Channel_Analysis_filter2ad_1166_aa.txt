title:POSTER: An Educational Network Protocol for Covert Channel Analysis
Using Patterns
author:Steffen Wendzel and
Wojciech Mazurczyk
POSTER: An Educational Network Protocol for
Covert Channel Analysis Using Patterns
Steffen Wendzel
Fraunhofer FKIE / Hochschule Worms, Germany
PI:EMAIL
Wojciech Mazurczyk
Warsaw University of Technology, Poland
PI:EMAIL
ABSTRACT
The utilization of information hiding is on the rise among cyber-
criminals, e.g. to cloak the communication of malicious software
as well as by ordinary users for privacy-enhancing purposes. A
recent trend is to use network trafﬁc in form of covert channels
to convey secrets. In result, security expert training is incomplete
if these aspects are not covered. This paper ﬁlls this gap by pro-
viding a method for teaching covert channel analysis of network
protocols. We deﬁne a sample protocol called Covert Channel Ed-
ucational Analysis Protocol (CCEAP) that can be used in didactic
environments. Compared to previous works we lower the barrier
for understanding network covert channels by eliminating the re-
quirement for students to understand several network protocols in
advance and by focusing on so-called hiding patterns.
CCS Concepts
•Security and privacy → Network security; •Social and pro-
fessional topics → Computing education;
Keywords
Covert Channels; Steganography; Information Hiding
1.
INTRODUCTION
Network covert channels are communication paths that allow a
hidden and unforeseen data exchange in computer networks. These
channels are created by so-called hiding methods and belong to the
research domain of Network Steganography [2, 1]. Covert channels
can enable stealthy malware communications, constant unnotice-
able data leakage from organizations, hidden communications of
intelligence organizations, or covert communications for journal-
ists to transfer illicit information under censorship [2]. Recently,
we are witnessing a raising interest from the security community in
information hiding techniques and a rising utilization of the meth-
ods by cybercriminals. However, when training students and secu-
rity experts these aspects are covered very brieﬂy or are not covered
at all. That is why it is vital to devise new ways in which this train-
ing gap can be efﬁciently ﬁlled.
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS’16 October 24-28, 2016, Vienna, Austria
c(cid:13) 2016 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-4139-4/16/10.
DOI: http://dx.doi.org/10.1145/2976749.2989037
In order to understand covert channels and their overall impact
on security, an in-depth understanding of a number of topics related
to network communications, including several network protocols,
and fundamentals of steganography is required. This precondition
is a challenge for teaching covert channels to students.
We present a new approach to teach network covert channels.
Our solution eliminates the requirement of knowing and under-
standing several separate network protocols such as IP, TCP or
HTTP in advance. Instead, we designed a single network proto-
col that is intentionally vulnerable to a number of covert channels
at once. In addition, instead of teaching students the more than 130
known hiding methods, our approach focuses on several generic
hiding patterns. Patterns represent the core ideas of hiding meth-
ods and reduce the number of concepts that students must compre-
hend. We demonstrate how our educational protocol can be used to
generate especially covert storage channels, i.e. those channels that
embed hidden data in a network protocol data unit (PDU) instead of
modifying packet timings (timing channels). Our proof-of-concept
implementation is available as an open source code and it is de-
signed for teaching in undergraduate classes.
The reminder of this paper is structured as follows. Section 2 dis-
cusses related work while Section 3 introduces our educational net-
work protocol CCEAP. Section 4 explains the link between CCEAP
and hiding patterns. Section 5 shows the envisaged teaching work-
ﬂow and sample exercises while Section 6 concludes.
2. RELATED WORK
Several suveys on network covert channels exist, e.g. [1, 2, 3].
Within these publications, the authors discovered more than hun-
dred hiding methods. As shown in [3], 109 hiding methods could
be broken down to eleven different hiding patterns. Such hiding
patterns describe the core idea of a hiding method and are the ac-
tual aspect that must be understood by students. For instance, while
several hiding methods modify the case of ASCII letters in plaintext
protocols to signal hidden data, the core idea of case modiﬁcation
is always represented by the same pattern ‘Value Modulation’.
Few publications deal with the teaching of network covert chan-
nels. In 2008, Zander and Armitage published the so-called Covert
Channel Evaluation Framework [4]. The framework can be used
to establish and analyze a variety of network covert channels over
TCP/IP. Recently, Zseby et al. were the ﬁrst to provide an edu-
cational testbed for network steganography [5]. Their testbed is
available for download and was evaluated with university students.
We do not consider our work as a replacement with the previous
efforts by Zander et al. or Zseby et al. but rather as a complemen-
tary approach. It must be emphasized that we provide a different
angle for teaching network covert channels with a single network
protocol which is especially designed for educational purposes.
17393. PROTOCOL DESIGN
Existing network protocols are vulnerable to several hiding pat-
terns simultaneously only but few protocols are vulnerable to many
patterns. For this reason, teaching hiding methods requires switch-
ing between several network protocols to describe the analysis pro-
cess. Switching between different network protocols within the
same tutorial or class is a challenge as students must process each
of these protocols and have to be taught their basics a priori. This
obstacle makes it harder to grasp the main concepts of information
hiding. That is why we propose and present a protocol to illustrate
the process of covert channel analysis. CCEAP, the covert channel
educational analysis protocol, is designed in a way that it is vulner-
able against several of the known hiding patterns described in [2,
3]. In comparison to previous approaches, we
• devise the CCEAP communication protocol that is designed for
teaching covert channel analysis and that allows to understand
several hiding methods with the use of a single protocol instead
of focusing on TCP, IP, UDP and several other protocols;
• implemented CCEAP in a tool which is designed in a way to
make it as accessible as possible by limiting the lines of code
and delivering all relevant data directly as textual output;
• integrated no protocol elements in CCEAP which are not neces-
sary for education (existing protocols do contain such elements);
• make hiding patterns the central aspect by exemplifying hiding
• ease the understanding of hiding patterns in two scenarios: ei-
ther, students need to ﬁnd ways how to realize a speciﬁc hiding
method with CCEAP, or, they are shown commands or trafﬁc of
CCEAP and then need to determine the related pattern (such as
in case of a malware analysis in practice);
methods in CCEAP with a link to a pattern;
• allow the hybrid combination of hiding methods.
CCEAP comprises a simple, extendable protocol header (Fig-
ure 1). The main header contains three 32-bit words. Word 0 con-
sists of a sequence number used to order packets at the receiver-
side. The number of options ﬁeld indicates whether one or more
‘options’ headers are present which are used to extend the main
header. These options headers are embedded behind the main header,
similarly to IPv4 options. The ﬁeld destination length indicates
the length of the destination address, which is an ASCII value of
1-8 bytes length. The dummy byte is intentionally reserved for fu-
ture use like it is the case with several existing network protocols.
Words 1 and 2 contain the destination address which is ﬁlled with
padding bits if the address is less than eight bytes long.
Figure 1. CCEAP main header (top) and options header (bottom)
A CCEAP packet can contain up to 255 options headers (their
number is indicated by the number of options ﬁeld in the main
header). Each option contains a freely choosable identiﬁer, a freely
deﬁnable type, and a freely choosable value. To end up with a full
word, the last byte is again an unused dummy value.
Table 1 shows how the particular ﬁelds of the CCEAP main and
options headers reﬂect ﬁelds in existing network protocols.
Main header
Sequence Number: TCP and IPSec AH ‘Sequence Number’
Number of Options: IPv4 ‘Internet Header Length’ ﬁeld
Destination Length:
IPv6 ‘Payload Length’, DNS’ resource
record domain name encoding (similar); DHCP option’s padding
Dummy: Undeﬁned/reserved bits in IPv6, TCP, IEEE 802.5, RIP
and several other network protocols
Destination Addr./Padding: ASCII value in plaintext headers,