credentials into a consolidated credential, re-randomizes it, and
submits it as coin token to a merchant. First, the user produces
a zk-proof of knowledge of its private key by binding the proof
to the merchant’s address addr; then, the user provides the
merchant with the proof along with the sequence number s
and the consolidated credential (). The coins can only be
spent with knowledge of the associated sequence number and
by the owner of addr. To accept the above as payment, the
merchant submits the token by showing the credential and a
group element ζ = gs
1 ∈ G1 to the tumbler contract along with
a zero-knowledge proof ensuring that ζ is well-formed (). To
prevent double spending, the tumbler contract keeps a record of
10Recent proposals aim to distribute this trusted setup [24].
Fig. 5: The petition application.
all elements ζ that have already been shown. Upon showing a
ζ embedding a fresh (unspent) sequence number s, the contract
veriﬁes that the credential and zero-knowledge proofs check,
and that ζ doesn’t already appear in the spent list. Then it
withdraws v coins from the buffer (), sends them to be
received by the merchant account determined by addr, and
adds ζ to the spent list (). For the sake of simplicity, we
keep the transfer value v in clear-text (treated as a public
attribute), but this could be easily hidden by integrating a range
proof; this can be efﬁciently implemented using the technique
developed by B¨unz et al. [13].
Security consideration. Coconut provides blind issuance
which allows the user to obtain a credential on the sequence
number s without the authorities learning its value. Without
blindness, any authority seeing the user key k could potentially
race the user and the merchant, and spend it—blindness pre-
vents authorities from stealing the token. Furthermore, Coconut
provides unlinkability between the pay phase () and the
submit phase () (see Figure 4), and prevents any authority or
third parties from keeping track of the user’s transactions. As
a result, a merchant can receive payments for good or services
offered, yet not identify the purchasers. Keeping a spent list of