图16-10 URI中的字符在传输的时候要转义，但处理的时候要反转义
在内部处理时，HTTP应用程序应当在传输和转发URI的时候保持转义不变。HTTP
应用程序应该仅在需要数据的时候才对URI进行转义。更重要的是，应用程序应该
确保任何URI都不会被反转义2次，因为在转义的时候可能会把百分号编码进去，
反转义出来之后，再转一次就会导致数据丢失。
16.5.4 转义国际化字符
需要注意的是，要转义的值本身应该在US-ASCII代码值的范围内（0～127）。某
些应用程序试图用转义值来表示 iso-8859-1 中扩展的字符（代码范围在 128 ～
255）。例如，网站服务器可能会错误地用转义来对包含了国际字符的文件名进行编 390
码。这样做是不对的，可能会使别的应用出问题。
国际化 ｜ 409
例如，文件名Sven Ölssen.html（包含了一个元音变音）可能被网站服务器编码为
Sven%20%D6lssen.html。把空格编码为%20是对的，但从技术上说，把Ö编码为
%D6是非法的，因为代码D6（ 十进制值214）落在了ASCII代码范围之外。ASCII
只定义了最大值为0x7F（十进制值127）的代码。
16.5.5 URI中的模态切换
有些URI也用ASCII字符的序列来表示其他字符集中的字符。例如，可能使用iso-
2022-jp 编码插入“ESC ( J”，切换到 JIS-Roman 字符集，用“ESC ( B”切换回
ASCII字符集。这在一些本地化的环境中可以工作，但这种方式没有进行良好的定
义，而且没有标准化的方案来识别URL所使用的特定编码。正如RFC 2396的作者
所说的那样：
不过，对于含有非ASCII字符的原始字符序列来说，境况更加复杂。如果可
能用到多个字符集的话，传输表示字符序列的8位字节序列的因特网协议期
待能有办法来识别所用的字符集[RFC 2277]。
然而，在通用的URI语法中没有提供进行这种识别的手段。个别的URI方案可
以请求单一的字符集，定义默认的字符集，或提供指示所用字符集的方法。期
待将来对这个规范的修改能为URI中的字符编码提供一种系统化的处理方案。
目前，URI对国际化应用还不是非常友好。URI的可移植性目标比语言灵活性方面
的目标更重要。人们正在尽最大努力使URI更加国际化，但在短期内，HTTP应用
程序还是应当坚持使用ASCII。它从1968年就出现了，所以只用它的话，一切还不
391 至于太糟。
16.6 其他需要考虑的地方
本节讨论在编写国际化的HTTP应用程序时，必须牢记的其他一些东西。
16.6.1 首部和不合规范的数据
HTTP首部必须由US-ASCII字符集中的字符构成。不过，并不是所有的客户端和服
务器都正确地实现了这一点，你可能会时不时收到一些代码值大于127的非法字符。
很多HTTP应用程序使用操作系统和库例程来处理字符（比如Unix中的字符分类
库ctype），但不是所有这些库都支持ASCII范围（0～127）之外的字符代码。
在某些情况下（一般来说，是较老的实现），当输入非ASCII字符时，这些库可能
会返回不正确的结果，或者使应用程序崩溃。假设报文中含有非法数据，在使用这
410 ｜ 第16章
些字符分类库来处理HTTP报文之前，要仔细阅读它们的文档。
16.6.2 日期
HTTP的规范中明确定义了合法的GMT日期格式，但要知道并非所有Web服务器
和客户端都遵守这些规则。例如，我们曾见过Web服务器发送的无效HTTP Date
（日期）首部中的月份是用本地语言表示的。
HTTP应用程序应当尝试容忍一些不合规矩的日期，不能在接收的时候崩溃。不过也
不是所有发送出来的日期都能被正确解释，如果日期无法解析，服务器应当谨慎处理。
16.6.3 域名
DNS目前还不支持在域名中使用国际化的字符。现在正在进行支持多语言的域名的
相关标准化工作，但还没有被广泛部署。
16.7 更多信息
万维网的极大成功意味着HTTP应用程序要继续在不同的语言和字符集之间交换更
多的内容。更多关于多语言的多媒体这个重要但有些复杂的话题的信息，请参考下
列资料来源。 392
16.7.1 附录
• 表H-1列出了在IANA注册的字符集标记。
• 表G-1列出了在IANA注册的语言标记。
• 表G-2列出了ISO 639中的语言代码。
• 表G-3列出了ISO 3166中的国家代码。
16.7.2 互联网的国际化
• http://www.w3.org/International/
“Making the WWW Truly World Wide”（“使WWW真正遍布全球”）——W3C
国际化和本地化网站。
• http://www.ietf.org/rfc/rfc2396.txt
RFC 2396，“Uniform Resource Identifiers（URI）：Generic Syntax”（“统一资源
描述符：一般语法”），是URI的定义文档。该文档中包括了描述国际化URI中
的字符集限制方面的章节。
国际化 ｜ 411
• CJKV Information Processing（《中日韩越信息处理》）
Ken Lunde著，由O'Reilly & Associates公司出版。CJKV是亚洲语言的电子化
字符处理方面的权威经典。亚洲语言的字符集多种多样、复杂难懂，但这本书详
细介绍了大型字符集的各种标准技术。
• http://www.ietf.org/rfc/rfc2277.txt
RFC 2277，“IETF Policy on Character Sets and Languages”（“IETF关于字符集
和语言的策略”），其中记录了互联网工程指导组（Internet Engineering Steering
Group，IESG）应用的当前策略，这些策略是为了配合互联网工程任务组
（Internet Engineering Task Force，IETF）帮助各种互联网协议使用多种语言和字
符交换数据而做的标准化努力。
16.7.3 国际标准
• http://www.iana.org/numbers.htm
IANA中有已注册的各种名字和数字编号的库。其中的Protocol Numbers and
Assignments Directory（协议编号和分配目录）中包含了因特网上使用的已注册
字符集记录。因为有关国际间通信的大部分工作都是在ISO的领域内，而不是因
特网的团体完成的，所以IANA的这份列表算不上详尽。
• http://www.ietf.org/rfc/rfc3066.txt
393 RFC 3066，“Tags for the Identification of Languages”（“标识语言的标记”），描
述了语言标记、它们的值，以及如何构造这些标记。
• “Codes for the representation of names of languages”（“表示语言名称的代码”）
ISO 639:1988 (E/F)，国际标准化组织，第1版。
• “Codes for the representation of names of languages—Part 2: Alpha-3 code”（“表
示语言名称的代码，第2部分：Alpha-3代码”）
ISO 639-2:1998，ISO TC46/SC4和TC37/SC2联合工作组，第1版。
• “Codes for the representation of names of countries”（“表示国家名称的代码”）
394 ISO 3166:1988 (E/F)，国际标准化组织，第3版。
412 ｜ 第16章
第17章
内容协商与转码
413
一个URL常常需要代表若干不同的资源。例如那种需要以多种语言提供其内容的
网站站点。如果某个站点（比如Joe的五金商店这样的站点）有说法语的和说英语
的两种用户，它可能想用这两种语言提供网站站点信息。但在这种情况下，当用户
请求http://www.joes-hardware.com时，服务器应当发送哪种版本呢？法文版还是
英文版？
理想情况下，服务器应当向英语用户发送英文版，向法语用户发送法文版——用户
只要访问Joe的五金商店的主页就可以得到相应语言的内容。幸运的是，HTTP提
供了内容协商方法，允许客户端和服务器作这样的决定。通过这些方法，单一的
URL就可以代表不同的资源（比如，同一个网站页面的法语版和英语版）。这些不
同的版本称为变体。
对于特定的URL来说，服务器还可以根据其他原则来决定发送什么内容给客户端最
合适。在有些场合下，服务器甚至可以自动生成定制的页面。比如，服务器可以为
手持设备把HTML页面转换成WML页面。这类动态内容变换被称为转码。这些变
换动作是HTTP客户端和服务器之间进行内容协商的结果。
本章，我们将讨论内容协商和网站应用程序应该如何担负内容协商的责任。
17.1 内容协商技术
共有3种不同的方法可以决定服务器上哪个页面最适合客户端：让客户端来选择、
服务器自动判定，或让中间代理来选。这3种技术分别称为客户端驱动的协商、服
395 务器驱动的协商以及透明协商（参见表17-1）。本章，我们将研究每种技术的机制
及其优缺点。
表17-1 内容协商技术概要
技 术 工作原理 优 点 缺 点
客户端驱动 客户端发起请求，服务器 在服务器端的实现最容易。客户 增加了时延：为了获得
发送可选项的列表，客户 端可以选择最合适的内容 正确的内容，至少要发
端选择 送两次请求
服务器驱动 服务器检查客户端的请求 比客户端驱动的协商方式要快。 如果结论不是很明确
首部集并决定提供哪个版 HTTP 提供了q值机制，允许服 （比如首部集不匹配），
本的页面 务器近似匹配，还提供了Vary 服务器要做猜测
首部供服务器告知下游的设备如
何对请求估值
透明 某个中间设备（通常是缓 免除了Web服务器的协商开销。 关于如何进行透明协
存代理）代表客户端进行 比客户端驱动的协商要快 商，还没有正式的规范
请求协商
414 ｜ 第17章
17.2 客户端驱动的协商
对于服务器来说，收到客户端请求时只是发回响应，在其中列出可用的页面，让客
户端决定要看哪个，这是最容易的事情。很显然，这是服务器最容易实现的方式，
而且客户端很可能选择到最佳的版本（只要列表中有让客户端选择的足够信息）。不
利之处是每个页面都需要两次请求：第一次获取列表，第二次获取选择的副本。这
种技术速度很慢且过程枯燥乏味，让用户厌烦。
从实现原理上来说，服务器实际上有两种方法为客户端提供选项：一是发送回一个
HTML文档，里面有到该页面的各种版本的链接和每个版本的描述信息；另一种方
法是发送回HTTP/1.1响应时，使用300 Multiple Choices响应代码。客户端浏览器
收到这种响应时，在前一种情况下，会显示一个带有链接的页面；在后一种情况下，
可能会弹出对话窗口，让用户做选择。不管怎么样，决定是由客户端的浏览器用户
作出的。
除了增加时延并且对每个页面都要进行繁琐的多次请求之外，这种方法还有一个缺
点：它需要多个URL：公共页面要一个，其他每种特殊页面也都要一个。因此，比
如说原始的请求地址是www.joes-hardware.com，Joe的服务器可能会回复某个页
面，该页面里面有到 www.joes-hardware.com/english 和 www.joes-hardware.com/
french的链接。如果客户端想加书签的话，是要加在原始的公共页面上呢，还是
加在选中的页面上呢？如果用户想把这个网站推荐给他的朋友，是告知www.joes-
hardware.com这个地址好呢，还是只告诉他们讲英语的朋友www.joes-hardware.
com/english这个地址？ 396
17.3 服务器驱动的协商
在前一节中，我们了解了客户端驱动的协商存在的若干缺点。大部分缺点都涉及客
户端和服务器之间通信量的增长，这些通信量用来决定什么页面才是对请求的最佳
响应。减少额外通信量的一种方法是让服务器来决定发送哪个页面回去，但为了做
到这一点，客户端必须发送有关客户偏好的足够信息，以便服务器能够作出准确的
决策。服务器通过客户端请求的首部集来获得这方面的信息。
有以下两种机制可供HTTP服务器评估发送什么响应给客户端比较合适。
• 检查内容协商首部集。服务器察看客户端发送的Accept首部集，设法用相应的
响应首部与之匹配。
• 根据其他（非内容协商）首部进行变通。例如，服务器可以根据客户端发送的
User-Agent首部来发送响应。
内容协商与转码 ｜ 415
后面的小节将详细介绍这两种机制。
17.3.1 内容协商首部集
客户端可以用表17-2中列出的HTTP首部集发送用户的偏好信息。
表17-2 Accept首部集
首 部 描 述
Accept 告知服务器发送何种媒体类型
Accept-Language 告知服务器发送何种语言
Accept-Charset 告知服务器发送何种字符集
Accept-Encoding 告知服务器采用何种编码
注意，这些首部与第15章讨论的那些实体首部非常类似。不过，这两种首部的用途
截然不同。正如第15章中所述，实体首部集像运输标签，它们描述了把报文从服务
器传输给客户端的过程中必须的各种报文主体属性。而内容协商首部集是由客户端
发送给服务器用于交换偏好信息的，以便服务器可以从文档的不同版本中选择出最
符合客户端偏好的那个来提供服务。
397 服务器用表17-3中列出的实体首部集来匹配客户端的Accept首部集。
表17-3 Accept首部集和匹配的文档首部集
Accept首部 实体首部
Accept Content-Type
Accept-Language Content-Language
Accept-Charset Content-Type
Accept-Encoding Content-Encoding
注意，由于HTTP是无状态的协议（表示服务器不会在不同的请求之间追踪客户端
的偏好），所以客户端必须在每个请求中都发送其偏好信息。
如果两个客户端都发送了Accept-Language首部，描述它们感兴趣的语言信息，
服务器就能够决定发送www.joes-hardware.com的何种版本给哪个客户端了。让服
务器自动选择发送回去的文档，减少了往返通信的时延，这种时延是客户端驱动模
型中无法避免的。
然而，假设某个客户端偏好西班牙文，那服务器应当回送哪个版本的页面呢？英语
还是法语？服务器只有两种选择：猜测或回退到客户端驱动模型，问客户端选择哪
个。假如这个西班牙人碰巧懂一点英语，他可能会选择英文页面，这不是最理想的，
416 ｜ 第17章
但它能解决问题。在这种情况下，这个西班牙人需要有办法传达更多与其偏好有关
的信息，也就是他的确对英语略知一二，在没有西班牙语的时候，英语也行。
幸运的是，HTTP提供了一种机制，可以让与这个西班牙人情况类似的客户端更详细
地描述其偏好。这种机制就是质量值（简称q值)。
17.3.2 内容协商首部中的质量值
HTTP协议中定义了质量值，允许客户端为每种偏好类别列出多种选项，并为每种偏
好选项关联一个优先次序。例如，客户端可以发送下列形式的Accept-Language