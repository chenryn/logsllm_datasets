               |                     |                                                                 |                                 --1.65%--_bt_search  
               |                     |                                                                 |                                           |            
               |                     |                                                                 |                                            --0.80%--_bt_relandgetbuf  
               |                     |                                                                 |            
               |                     |                                                                  --0.73%--index_fetch_heap  
               |                     |            
               |                     |--2.14%--PortalStart  
               |                     |          |            
               |                     |           --1.90%--standard_ExecutorStart  
               |                     |                     |            
               |                     |                      --1.64%--ExecInitNode  
               |                     |                                |            
               |                     |                                 --1.59%--ExecInitIndexScan  
               |                     |            
               |                     |--1.65%--finish_xact_command.part.4  
               |                     |          |            
               |                     |           --1.64%--CommitTransactionCommand  
               |                     |                     |            
               |                     |                      --1.49%--CommitTransaction  
               |                     |                                |            
               |                     |                                 --0.72%--PreCommit_Portals  
               |                     |                                           |            
               |                     |                                            --0.63%--PortalDrop  
               |                     |                                                      |            
               |                     |                                                       --0.53%--PortalCleanup  
               |                     |            
               |                     |--0.96%--pq_getbyte  
               |                     |          |            
               |                     |           --0.95%--pq_recvbuf  
               |                     |                     |            
               |                     |                      --0.62%--secure_read  
               |                     |            
               |                      --0.90%--ReadyForQuery  
               |                                |            
               |                                 --0.83%--socket_flush  
               |                                           |            
               |                                            --0.82%--internal_flush  
               |                                                      |            
               |                                                       --0.78%--__libc_send  
               |                                                                 |            
               |                                                                  --0.76%--system_call_fastpath  
               |                                                                            |            
               |                                                                             --0.75%--sys_sendto  
               |                                                                                       |            
               |                                                                                        --0.75%--SYSC_sendto  
               |                                                                                                  |            
               |                                                                                                   --0.73%--sock_sendmsg  
               |                                                                                                             |            
               |                                                                                                              --0.69%--unix_stream_sendmsg  
               |                                                                                                                        |            
               |                                                                                                                         --0.57%--sock_def_readable  
               |                                                                                                                                   |            
               |                                                                                                                                    --0.57%--__wake_up_sync_key  
               |                                                                                                                                              |            
               |                                                                                                                                               --0.54%--_raw_spin_unlock_irqrestore  
               |            
                --1.04%--SysLogger_Start  
                          |            
                           --0.84%--__read_nocancel  
                                     |            
                                      --0.84%--system_call_fastpath  
                                                |            
                                                 --0.84%--sys_read  
                                                           |            
                                                            --0.84%--vfs_read  
                                                                      |            
                                                                       --0.84%--do_sync_read  
                                                                                 |            
                                                                                  --0.82%--pipe_read  
```  
为什么只开log_statement，没有触发这个锁冲突呢？实际上只是并发没有够，或者调用elog的频率还不够。（开启log_duration后，调用elog翻倍，所以同样并发更容易触发这个锁冲突）  
### 1、将并发调低，锁冲突问题减少，性能损耗相对来说就很小。  
```    
Samples: 672K of event 'cpu-clock', Event count (approx.): 146760374621     
Overhead  Shared Object        Symbol                                       
  29.73%  libc-2.17.so         [.] __mcount_internal                        
   6.37%  [kernel]             [k] _raw_spin_unlock_irqrestore              
   5.93%  libc-2.17.so         [.] _mcount                                  
   4.18%  libc-2.17.so         [.] vfprintf                                 
   2.96%  [kernel]             [k] osq_lock                                 
   2.92%  [kernel]             [k] __do_softirq                             
   1.80%  [kernel]             [k] finish_task_switch                       
   1.34%  postgres             [.] hash_search_with_hash_value              
   1.20%  libc-2.17.so         [.] _IO_default_xsputn     
```    
1、关闭log_statement与log_duration      
```    
transaction type:     
scaling factor: 300    
query mode: prepared    
number of clients: 28    
number of threads: 28    
duration: 120 s    
number of transactions actually processed: 17770447    
latency average = 0.189 ms    
latency stddev = 0.077 ms    
tps = 148086.294302 (including connections establishing)    
tps = 148093.564454 (excluding connections establishing)    
script statistics:    
 - statement latencies in milliseconds:    
         0.013  \set aid random(1, 100000 * :scale)    
         0.176  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;    
```    
2、开启log_statement=all      
```    
transaction type:     
scaling factor: 300    
query mode: prepared    
number of clients: 28    
number of threads: 28    
duration: 120 s    
number of transactions actually processed: 17236212    
latency average = 0.195 ms    
latency stddev = 0.321 ms    
tps = 143634.319683 (including connections establishing)    
tps = 143642.034125 (excluding connections establishing)    
script statistics:    
 - statement latencies in milliseconds:    
         0.010  \set aid random(1, 100000 * :scale)    
         0.185  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;    
```    
3、关闭log_statement，开启log_duration=on      
```    
transaction type:     
scaling factor: 300    
query mode: prepared    
number of clients: 28    
number of threads: 28    
duration: 120 s    
number of transactions actually processed: 16774800    
latency average = 0.200 ms    
latency stddev = 0.977 ms    
tps = 139789.393297 (including connections establishing)    
tps = 139795.661393 (excluding connections establishing)    
script statistics:    
 - statement latencies in milliseconds:    
         0.008  \set aid random(1, 100000 * :scale)    
         0.193  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;    
```    
4、开启log_statement=all，同时开启log_duration=on      
```    
transaction type:     
scaling factor: 300    
query mode: prepared    
number of clients: 28    
number of threads: 28    
duration: 120 s    
number of transactions actually processed: 14696887    
latency average = 0.229 ms    
latency stddev = 0.277 ms    
tps = 122473.319859 (including connections establishing)    
tps = 122479.381454 (excluding connections establishing)    
script statistics:    
 - statement latencies in milliseconds:    
         0.007  \set aid random(1, 100000 * :scale)    
         0.224  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;    
```    
5、开启log_statement=all，同时开启log_duration=on，同时开启track_io_timing = on      
```    
transaction type:     
scaling factor: 300    
query mode: prepared    
number of clients: 28    
number of threads: 28    
duration: 120 s    
number of transactions actually processed: 14606445    
latency average = 0.230 ms    
latency stddev = 0.726 ms    
tps = 121719.147924 (including connections establishing)    
tps = 121725.278733 (excluding connections establishing)    
script statistics:    
 - statement latencies in milliseconds:    
         0.007  \set aid random(1, 100000 * :scale)    
         0.226  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;    
```   
### 2、使用高并发，即使仅开启log_statement也会触发锁问题。  
只开log_statement，调用elog是同时开启log_statement, log_duraiton的一半，所以仅开启log_statement时把并发开到一倍(112)，就可以观测到问题。  
```  
transaction type: 
scaling factor: 300
query mode: prepared
number of clients: 112
number of threads: 112
duration: 120 s
number of transactions actually processed: 11832722
latency average = 1.135 ms
latency stddev = 2.437 ms
tps = 98604.216501 (including connections establishing)
tps = 98621.113426 (excluding connections establishing)
script statistics:
 - statement latencies in milliseconds:
         0.021  \set aid random(1, 100000 * :scale)
         1.149  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;
```  
perf 如下  
```  
Samples: 557K of event 'cpu-clock', Event count (approx.): 94808854918  
  Children      Self  Shared Object       Symbol                        
+   67.35%     0.22%  postgres            [.] PostgresMain              
+   45.50%     0.01%  [kernel]            [k] system_call_fastpath      
+   41.27%     0.02%  postgres            [.] errfinish                 
+   41.14%     0.27%  postgres            [.] EmitErrorReport           
+   39.62%     0.01%  [kernel]            [k] sys_write                 
+   39.56%     0.03%  [kernel]            [k] vfs_write                 
+   39.48%     0.02%  [kernel]            [k] do_sync_write             
+   39.31%     0.01%  libpthread-2.17.so  [.] __write_nocancel          
+   39.06%     0.08%  [kernel]            [k] pipe_write                
+   35.00%     0.09%  [kernel]            [k] mutex_lock                
+   34.88%     0.12%  [kernel]            [k] __mutex_lock_slowpath     
+   33.71%     0.00%  libc-2.17.so        [.] __libc_start_main         
+   33.61%    33.61%  [kernel]            [k] osq_lock                  
+   32.61%     0.00%  postgres            [.] PostmasterMain            
+   32.61%     0.00%  postgres            [.] main                      
+   32.33%     0.00%  postgres            [.] ServerLoop                
+   31.63%     2.75%  libc-2.17.so        [.] _mcount                   
+   29.31%    29.14%  libc-2.17.so        [.] __mcount_internal         
+   27.19%     0.02%  [kernel]            [k] pipe_wait                 
+   21.76%     0.27%  pgbench             [.] threadRun                 
+   11.30%     0.00%  libpthread-2.17.so  [.] start_thread      
```  
## syslogger相关代码  
src/backend/tcop/postgres.c  
```  
    934         /* Log immediately if dictated by log_statement */  
    935         if (check_log_statement(parsetree_list))  
    936         {  
    937                 ereport(LOG,  
    938                                 (errmsg("statement: %s", query_string),  
    939                                  errhidestmt(true),  
    940                                  errdetail_execute(parsetree_list)));  
    941                 was_logged = true;  
    942         }  
   1162         /*  
   1163          * Emit duration logging if appropriate.  
   1164          */  
   1165         switch (check_log_duration(msec_str, was_logged))  
   1166         {  
   1167                 case 1:  
   1168                         ereport(LOG,  
   1169                                         (errmsg("duration: %s ms", msec_str),  
   1170                                          errhidestmt(true)));  
   1171                         break;  
   1172                 case 2:  
   1173                         ereport(LOG,  
   1174                                         (errmsg("duration: %s ms  statement: %s",  
   1175                                                         msec_str, query_string),  
   1176                                          errhidestmt(true),  
   1177                                          errdetail_execute(parsetree_list)));  
   1178                         break;  
   1179         }  
   1946         /* Log immediately if dictated by log_statement */  
   1947         if (check_log_statement(portal->stmts))  
   1948         {  
   1949                 ereport(LOG,  
   1950                                 (errmsg("%s %s%s%s: %s",  
   1951                                                 execute_is_fetch ?  
   1952                                                 _("execute fetch from") :  
   1953                                                 _("execute"),  
   1954                                                 prepStmtName,  
   1955                                                 *portal_name ? "/" : "",  
   1956                                                 *portal_name ? portal_name : "",  
   1957                                                 sourceText),  
   1958                                  errhidestmt(true),  
   1959                                  errdetail_params(portalParams)));  
   1960                 was_logged = true;  
   1961         }  
```  
src/backend/utils/error/elog.c  
```  
/*  
 * Constructs the error message, depending on the Errordata it gets, in a CSV  
 * format which is described in doc/src/sgml/config.sgml.  
 */  
static void  
write_csvlog(ErrorData *edata)  