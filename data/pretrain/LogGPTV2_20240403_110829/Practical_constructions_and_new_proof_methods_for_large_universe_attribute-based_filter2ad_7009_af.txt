It then picks (cid:96) random exponents t1, t2, . . . , t(cid:96)
for every τ ∈ [(cid:96)] it computes
(cid:16)
(cid:17)−tτ
Kτ,1 =
uρ(τ )h
Kτ,2 = gtτ
Kτ,0 = gλτ wtτ
The secret key is sk = ((M, ρ),{Kτ,0, Kτ,1, Kτ,2}τ∈[(cid:96)]).
• Encrypt(m,S = {A1, A2, . . . , Ak} ⊆ Zp) → ct:
Ini-
tially, the algorithm picks k + 1 random exponents s, r1, r2,
$← Zp. It computes C = m · e(g, g)αs, C0 = gs, and
. . ., rk
for every τ ∈ [k] it computes
Cτ,1 = grτ
Cτ,2 = (uAτ h)rτ w
−s
The ciphertext is ct = (S, C, C0,{Cτ,1, Cτ,2}τ∈[k]).
• Decrypt (sk, ct) → m: The algorithm ﬁnds the set of
rows in M that provide a share to attributes in S, i.e. I =
{i : ρ(i) ∈ S}. Then it calculates constants {ωi ∈ Zp}i∈I
i∈I ωi (cid:126)Mi = (1, 0, . . . , 0), where Mi is the i-th
row of the matrix M . These constants exist if the set S is
an authorized set of the policy (c.f. Sec. 2.2).
such that (cid:80)
(cid:89)
B =
i∈I
Then it calculates
(e(C0, Ki,0)e(Cτ,1, Ki,1)e(Cτ,2, Ki,2))ωi
where τ is the index of the attribute ρ(i) in S (it depends
on i). The algorithm outputs m = C/B.
authorized, we have that(cid:80)
Correctness:
If the attribute set S of the ciphertext is
i∈I ωiλi = α. Therefore:
B =
e(g, g)sωiλi e(g, w)stiωi
−rτ tiωi e(g, uρ(i)h)rτ tiωi e(g, w)
i∈I ωiλi = e(g, g)αs
−stiωi
(cid:89)
· e(g, uρ(i)h)
= e(g, g)s(cid:80)
i∈I
C.2 Proof of Selective Security
We will prove the following theorem regarding the selec-
tive security of our KP-ABE scheme:
Theorem C.1. If the q-2 assumption holds, then all PPT
adversaries with a challenge attribute set of size k, where
k ≤ q, have a negligible advantage in selectively breaking
our scheme.
Proof. To prove the theorem we will assume that there exists
a PPT attacker A with a challenge attribute set that satisﬁes
the restriction, which has a non negligible advantage AdvA in
selectively breaking our scheme. Using this attacker we will
build a PPT simulator B that attacks the q-2 assumption
with a non negligible advantage.
Initialization: Initially, B receives the given terms from
the assumption and an attribute set S∗ = {A∗
2, . . .,
k} ⊆ U.
A∗
Setup: Now, the simulator B has to provide A the public
parameters of the system. In order to do that it implicitly
sets the master secret key of the scheme to be α = xy,
where x, y are set in the assumption. Notice that this way α
is properly distributed. Then B picks the random exponents
˜u, ˜h $← Zp and gives to A the following terms:
1, A∗
g = g
u = g ˜u ·(cid:81)
h = g˜h ·(cid:81)
i∈[k] gy/b2
i∈[k] gxz/bi ·(cid:81)
i
i∈[k]
(cid:16)
gy/b2
i
(cid:17)−A∗
i
w = gx
e(g, g)α = e(gx, gy)
Since x is information-theoretically hidden from A, because
it is multiplied by y in α, the term w is properly uniformly
random in G. The terms u, h are properly distributed due
to ˜u, ˜h respectively. Notice that all terms can be calculated
by the simulator using suitable terms from the assumption
and the challenge set S∗ given by A.
In the KP-ABE proof we see that the “binder term” of
the CP-ABE reduction has been contained in the “attribute
layer”; namely the gxz/bi of the h term. Since the master se-
cret key α is shared in all key generation queries in KP-ABE,
we don’t need any more the extra functionality provided by
the powers of a.
Query phases 1 and 2: The simulator has to produce
secret keys for policies requested by A, for which the set S∗
is not authorized. In both phases the treatment is the same.
We describe here the way B works in order to create a key
for a policy (M, ρ) with M ∈ Z(cid:96)×n
Since S∗ is non authorized for (M, ρ), there exists a vec-
(cid:62) ∈ Zn
tor (cid:126)w = (w1, w2, . . . , wn)
p such that w1 = 1 and
(cid:104) (cid:126)Mτ , (cid:126)w(cid:105) = 0 for all τ ∈ [(cid:96)] such that ρ(τ ) ∈ S∗ (c.f. Sec.
2.2). The simulator calculates (cid:126)w using linear algebra. The
and ρ : [(cid:96)] → Zp.
p
473vector (cid:126)y that will be shared is implicitly
(cid:126)y = xy (cid:126)w + (0, ˜y2, ˜y3, . . . , ˜yn)
(cid:62)
Kτ,2 = gtτ
= (gy)
(cid:16)
−(cid:104) (cid:126)Mτ , (cid:126)w(cid:105) · (cid:89)
i∈[k]
(cid:16)
gxzbi(cid:17)(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)/(ρ(τ )−A∗
i ) · g
˜tτ
(cid:17)
.
Therefore B can reply to A’s query with the entire secret
key sk =
(M, ρ),{Kτ,0, Kτ,1, Kτ,2}τ∈[(cid:96)]
Challenge: The attacker will output a pair of messages
(m0, m1) of the same length.
In this phase the simulator
ﬂips a random coin b $← {0, 1} and sets implicitly s = z
from the q-2 assumption. Also, it sets rτ = bτ for every
level τ ∈ [k]. These parameters are properly distributed
since z, b1, . . . , bq are information-theoretically hidden from
the attacker’s view. Now the simulator can compute the
following terms using the assumption:
τ h)rτ · w
C = mb · T
Cτ,1 = grτ = gbτ
Cτ,2 = (uA∗
= gbτ (˜uA∗
τ +˜h) · (cid:89)
(cid:16)
gbτ(cid:17)˜uA∗
τ +˜h · (cid:89)
i∈[k]
=
C0 = gs = gz
−s
gxzbτ /bi (cid:89)
gxzbτ /bi (cid:89)
i∈[k]
(cid:16)
i∈[k]
i(cid:54)=τ
i∈[k]
i(cid:54)=τ
gybτ (A∗
k−A∗
i )/b2
i · g
−xz
(cid:17)A∗
τ −A∗
i
gybτ /b2
i
As one can see, the choice of rτ = bτ “raises” one of
the xz/bi components to xz and achieves the cancellation
with w−s. The simulator hands over the ciphertext ct =
(cid:16)S∗, C, C0,{Cτ,1, Cτ,2}τ∈[k]
to the attacker A.
(cid:17)
Guess: After the query phase 2, where the simulator
creates the secret keys as described above, the attacker out-
puts a guess b(cid:48) for the challenge bit.
If b(cid:48) = b the sim-
it claims that the challenge term is
ulator outputs 0, i.e.
T = e(g, g)xyz. Otherwise, it outputs 1.
If T = e(g, g)xyz then A played the proper security game,
because C = mb · T = mb · e(g, g)αs. On the other hand, if
T is a random term of GT then all information about the
message mb is lost in the challenge ciphertext. Therefore
the advantage of A is exactly 0. As a result, if A breaks the
security game with a non negligible advantage, B has a non
negligible advantage in breaking the q-2 assumption.
$← Zp. This vector is properly dis-
where ˜y2, ˜y3, . . . , ˜yn
tributed because its ﬁrst component is xy = α and the re-
maining components are uniformly random in Zp. Therefore
for each row τ ∈ [(cid:96)] the share is
λτ = (cid:104) (cid:126)Mτ , (cid:126)y(cid:105) = xy(cid:104) (cid:126)Mτ , (cid:126)w(cid:105) + (cid:104) (cid:126)Mτ , (0, ˜y2, ˜y3, . . . , ˜yn)
= xy(cid:104) (cid:126)Mτ , (cid:126)w(cid:105) + ˜λτ
(cid:62)(cid:105)
As we mentioned above for each row τ for which ρ(τ ) ∈ S∗
it is true that (cid:104) (cid:126)Mτ , (cid:126)w(cid:105) = 0. Therefore in this case λτ =
˜λτ = (cid:104) (cid:126)Mτ , (0, ˜y2, ˜y3, . . . , ˜yn)(cid:62)(cid:105); hence its value is known to
$← Zp and outputs the
the simulator. In that case it picks tτ
terms Kτ,0, Kτ,1, Kτ,2 as in the KeyGen algorithm.
On the other hand, for each row τ for which ρ(τ ) /∈ S∗ it
picks ˜tτ
$← Zp and sets implicitly
tτ = −y(cid:104) (cid:126)Mτ , (cid:126)w(cid:105) +
(cid:88)
i∈[k]
xzbi(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)
ρ(τ ) − A∗
i
+ ˜tτ
Since ρ(τ ) /∈ S∗ the above fractions are deﬁned and tτ is
properly distributed due to ˜tτ . The intuition behind this
choice is that the y exponent “raises” the power of w to
the secret α = xy. However, this also results to xyz/bi
exponents from h. Thus, the cancellation is provided by the
xzbi exponents on the y/b2
i part. Now the simulator can
compute the following terms using the assumption:
−xy(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)+(cid:80)
gx2zbi(cid:17)(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)/(ρ(τ )−A∗
i∈[k]
i ) · w
˜tτ
x2 zbi(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)
ρ(τ )−A∗
i
· w
˜tτ
= g
i∈[n]
(cid:16)
−tτ =
Kτ,1 = (uρ(τ )h)
Kτ,0 = gλτ wtτ
= gxy(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)+˜λτ · g
˜λτ · (cid:89)
= gy(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)(ρ(τ )˜u+˜h) (cid:89)
· (cid:89)
gxyz(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)/bi (cid:89)
· (cid:89)
· (cid:89)
gy2(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)(ρ(τ )−A∗
i∈[k]
i∈[k]
i∈[k]
g
(i,j)∈[k,k]
−xzbi(ρ(τ )˜u+˜h)(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)/(ρ(τ )−A∗
i )
g
−(xz)2bj(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)/bi(ρ(τ )−A∗
j )
g
(i,j)∈[k,k]
i )/b2
i · (uρ(τ )h)
−˜tτ
(cid:16)
gxzbi(cid:17)−(ρ(τ )˜u+˜h)(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)/(ρ(τ )−A∗
i )
−xyz(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)bj(ρ(τ )−A∗
i )/b2
i (ρ(τ )−A∗
j )
(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)(ρ(τ )˜u+˜h) (cid:89)
(cid:16)
g(xz)2bj /bi(cid:17)−(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)/(ρ(τ )−A∗
(cid:17)(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)(ρ(τ )−A∗
i∈[k]
j )
i ) · (uρ(τ )h)
−˜tτ
(cid:17)−(cid:104) (cid:126)Mτ , (cid:126)w(cid:105)(ρ(τ )−A∗
i )/(ρ(τ )−A∗
j )
gxyzbj /b2
i
(i,j)∈[k,k]
= (gy)
· (cid:89)
(cid:16)
· (cid:89)
· (cid:89)
i∈[k]
(i,j)∈[k,k]
i(cid:54)=j
gy2/b2
i
(cid:16)
474