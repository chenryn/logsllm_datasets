+08 | Dword | 主DLL长度  
解密主DLL的函数如下：
**图 6-3 主DLL函数解密**
主DLL之后的数据中存在加密的配置信息，能够在感染过程中控制震网的具体行为，使得震网具备在无法远程控制的情况下，依然可以按照预设策略工作，确保其复杂的作业可以成功。其配置文件也记录了被感染机器信息和时间等特征，这样做的目的可能是攻击者希望这些信息在感染时被提取记录，一旦联网时可以直接将相关信息提交给C2，而不用做二次提取操作，减少对主机环境操作，以减少暴露的机会。
部分解密后的配置信息如下：
**图 6-4 部分解密后的配置信息**
表6-2是部分配置内容的解析，这些值能够控制震网在受害主机上的行为，具体内容包括：通过+A4值控制开始感染时间，如果这个值不能满足感染要求，则退出；通过+78值控制控制终止感染USB的时间，以及涉及控制震网传播、版本更新等值。在解密后的配置信息中这种控制震网行为的值有近百个，正是这些值来控制震网的复杂行为。
**表 6-2 部分配置内容解析**
**偏移** | **长度** | **解释**  
---|---|---  
**+00** | Dword | 配置文件起始标志  
**+04** | Dword | 配置文件头长度  
**+08** | Dword | 配置文件校验和  
**+0C** | Dword | 配置文件长度  
**+68** | Dword | 标志位，若为0则检查+70处标志（为1则直接感染USB）  
**+70** | Dword | 标志位 若为0则检查+78处的时间戳  
**+78** | Qword | 终止感染USB的时间  
**+80** | Dword | 在USB上需存在的文件数  
**+8C** | Qword | 终止时间  
**+A4** | Qword | 开始感染时间（超过此时间21天，则停止对USB进行感染）  
**…** | … | …  
Dropper的配置文件校验函数：
**图 6-5 Dropper的配置文件校验函数**
配置块的一些关键信息：如感染路径、感染时间、配置块长度，通过提取配置数据分析后发现，由于在每次感染新的设备后，其自身都会更新数据配置块，致使每感染一台设备，Stuxnet就会多出一个含有新配置的Dropper样本，图6-6为震网开始感染时间的数量分布图，其中2008年-2010年为可信度较高的感染时间，而2000年-2007年为可信度较低的感染时间。
**图 6-6 开始感染时间数量分布图（由于内网主机可能的存在时钟不同步问题导致错误的启示时间）**
在震网的安装执行过程中会多次检查目标系统当前时间，如果目标系统时间大于终止时间，震网就会退出安装执行过程。图6-7是震网1.x版本终止U盘感染时间的统计，它有三个终止U盘感染时间：2010年7月31日、2010年8月31日、2010年12月31日，其中绝大多数的终止U盘感染时间为2010年12月31日。
**图 6-7 终止U盘感染时间统计**
**2\. 分析提取工作导致的**
将震网的各个功能载荷从主DLL中剥离出来，是震网分析中的重要工作，这带来了一种新的样本统计上需要考虑的因素，即何为原始样本，何为处理中的过程数据。震网主DLL文件在Dropper中采用UPX压缩的方式进行存储，防止样本大小过大，减少传播机会。在实际感染过程中主DLL不会落地，在样本集中有UPX加壳的主DLL文件，在实际样本集中存在，因Dump导致的不同版本，未脱壳版本，不同脱壳方式生成的版本等情况。
在 A2PT
组织作业使用落地的样本中，很少看到使用壳的情况，这可能与一些杀毒软件会对壳报警、或输出日志相关。但震网主DLL文件在Dropper是采用UPX壳压缩的（毒曲也是如此），究其原因，应是出于减小文件体积的考虑。
**图 6-8 未完全脱壳文件**
**3\. 干扰数据**
在震网的USB
Loader样本集中，有数以百计的样本文件签名损坏，且大量该类文件的尾部还追加了其他的LNK文件和某种反病毒产品的报警日志，从目前分析来看，这是某款反病毒产品的产品Bug导致的，其某版本在扫描样本时，会错误的样本后面追加数据，从而引入数百被破坏的样本。
**图 6-9 USB Loader尾部追加LNK文件**
### **7、恶意代码框架与多起 A 2PT 的事件关联**
在震网事件曝光前后，包括毒曲、高斯、火焰等高级恶意代码被陆续曝光，由于这些恶意代码都空前复杂，且往往多在中东国家被发现，因此怀疑其相互间存在某种意义的关联，也成为了一种比较自然的猜想。
安天CERT在2011初提出了震网和毒曲可能存在某种关联关系的猜测，但直到次年初，才完成比较系统的验证。发布了《探索Duqu木马的身世之谜》[10]、《从Duqu病毒与Stuxnet蠕虫的同源性看工业控制系统安全》[11]两篇文献，分别从模块结构相似性分析、编译器架构相似性分析、关键功能实现相似性分析、密钥与其他关键数据相似性分析、编码心理特点分析、相同的程序Bug分析等角度，证实了两者存在同源关联关系。
**图 7-1 毒曲病毒与震网蠕虫的代码片断比较**
**图 7-2 毒曲病毒与震网蠕虫使用相同密钥**
安天在当时做出的结论是“通过对毒曲病毒与震网蠕虫关键代码结构、密钥使用方法和代码逻辑等的比较，我们发现了大量相同或相似的代码片断，这说明两者间存在代码复用关系，或者两者基于相同的代码框架开发。”但对于是复用关系，还是同框架开发这一问题，当时并未给出定论。而融合其他机构的后期分析成果和进展，可以形成的结论是，相关
A2PT
攻击组织至少维护了Tilded和Flamer两个恶意代码框架。震网、毒曲与火焰、高斯分别是基于Tilded和Flamer框架开发的。2012年6月11日，卡巴斯基发布报告称2009年早期版本的（即0.5版）Stuxnet模块（称为“Resource
207”）实际上是一个Flame插件。而这一成果也将Flamer和Tilded这两个完全不同的框架串接了起来。基于这两个框架的恶意代码在感染目标系统和执行主要任务方面具有独特的技巧，均用来开发不同的网空攻击装备。卡巴斯基提出的结论是：两个框架背后的团队曾经共享过至少一个模块的源代码，表明他们至少有一次团队合作，是属于同一机构的两个平行项目[12]。基于更多的线索，还可以把Fanny和Flowershop与上述事件串接到一起，它们的关系如图7-3所示。
**图 7-3 震网和毒曲、火焰、高斯、Fanny、Flowershop关系图**
##### **7.1 Flamer框架**
Flamer框架的开发时间可以追溯至2006年12月，火焰和高斯是基于Flamer框架开发的。安天于2012年5月28日起陆续捕获到火焰蠕虫的样本[13]，并成立了专门的分析小组进行持续分析，发现火焰是采用多模块化复杂结构实现的信息窃取类型的恶意软件。其主模块文件大小超过6MB，包含了大量加密数据、内嵌脚本（如Lua等）、漏洞攻击代码、模块配置文件、多种加密压缩算法，信息盗取等多种模块。
火焰的两个主要版本为Flame 1.0和Flame 2.0，两个版本均由依赖于嵌入式Lua
VM的主协调器指示的多个子模块组成。火焰和高斯之间包含一些相同代码，同时共享MiniFlame恶意软件插件。
##### **7.2 Tilded框架**
震网和毒曲是基于Tilded框架开发的。Tilded框架感染方式一般可以归纳为利用驱动程序文件，加载一个设计为加密库的主模块。同时，整个恶意复合体有一个单独的配置文件，系统注册表中有一个加密块，用于定义正在加载的模块的位置和注入过程的名称。
震网已知的版本包括Stuxnet0.5、Stuxnet1.001和Stuxnet1.100。Stuxnet0.5是震网的早期版本，但是后被发现曝光，该变种在2009年7月4日停止了对计算机的攻击。Stuxnet0.5与Stuxnet1.x版本的主要区别包括：Stuxnet1.x版本显著增加了传播和漏洞利用能力；Stuxnet0.5是部分基于Flamer框架的，而Stuxnet1.x版本主要基于Tilded框架；Stuxnet0.5采用导致超压的方式，大规模破坏离心机，而Stuxnet1.x版本采取了新的攻击策略，从铀浓缩阀破坏变成对离心机速度的修改。
**表 7-1 震网0.5与1.x版本技术细节全面对比**
**版本** | **时间** | **说明** | 漏洞利用情况 | 传播技术演变 | 平台演变 | **攻击策略演变**  
---|---|---|---|---|---|---  
**0.500** | 2005/11/3 | C&C 服务器注册 | CVE-2012-3015—Step7 安全库加载； | 通过感染Step7项目文件
通过USB执行Step7 通过mailslot更新对等网络 | 基于Flamer平台 |
针对S7-400（417）PLCs的完整的代码序列（在铀浓缩过程中修改级联保护系统阀门操作）  
**0.500** | 2005/11/15 | 提交到公共扫描服务的日期 |  |  |  |  
**0.500** | 2009/6/4 | 感染停止日期 |  |  |  |  
**1.001** | 2009/6/12 | 二进制编译时间戳更新 | CVE-2010-2729—打印服务 RCE
CVE-2008-4250—Windows Server Service RPC RCE CVE-2012-3015—Step7 安全库加载