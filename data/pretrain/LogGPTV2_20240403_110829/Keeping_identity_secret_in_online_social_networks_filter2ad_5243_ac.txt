### 1. Introduction

If the ID is not accepted, return ⊥. 

Let \( X \leftarrow g^\alpha \), \( s_{G_i}, r_{G_i}, t \). 

Define:
- \( A \leftarrow (g_1^{ID^h}) \)
- \( B \leftarrow g^{\beta_2 t} \)
- \( P_0 = g^{\alpha - t} \)
- \( P_2 = g^{(x_{DO} + s_{G_i})t} \)
- \( P_1 = (g^{\beta ID r_{G_i}})^{1/2} \)

### 2. Group Joining Protocol

**Data Owner (DO)**
- Generate ACL and RL for data \( D \).
- Choose \( s \in \mathbb{Z}_p \).
- For \( i = 1, \ldots, r \):
  - Choose random \( s_1, \ldots, s_{r-1} \) such that \( s_r = s - s_1 - \cdots - s_{r-1} \).
  - Compute \( F_1 = F_{\text{index}}(g_B, g_B)^{\alpha s_D} \) and \( F_2 = g^s \).
  - For each \( j = 1, 2, \ldots, r \):
    - Compute \( C_{j,1} = g^{\beta s_j} \) and \( C_{j,2} = (g^{\beta_2 ID_j h^\beta})^{s_j} \).

**Upload Process:**
- Send \( (ACL, RL) \) to the database.
- Receive \( (E_{\text{index}}, F_{\text{index}}) \).
- Send \( \{F_1, F_2, (C_{j,1}, C_{j,2})_{j=1}^r\} \) to the database.

**Database (DB)**
- If it is the first data received:
  - Initialize \( \text{index} \leftarrow 1 \).
  - Parse ACL as \( (G_1, \ldots, G_l') \).
  - Compute \( E_{\text{index}} \leftarrow g^{x_e + \text{index} + P_l'} \) and \( F_{\text{index}} \leftarrow e(h, E_{\text{index}}) \).
  - Increment \( \text{index} \leftarrow \text{index} + 1 \).
- Publish \( L_{\text{index}} = (E_{\text{index}}, F_1, F_2, (C_{j,1}, C_{j,2})_{j=1}^r, x_j G_j, ACL, RL) \).

### 3. Data Retrieval Protocol

**Database (DB)**
- Receive \( (K, \text{count}) \).
- If \( \text{count} = 0 \):
  - Compute \( R \leftarrow e(h, K) \).
  - Send \( PK\{(h) : M = e(g, h)\} \).

**Visitor (V)**
- Send \( (\tilde{A}_i, \tilde{g}_{1i}, \tilde{y}_i, \tilde{h}_{0i}, \tilde{h}_{1i}, \tilde{h}_{2i})_{i=1}^{l'}, ZKP \).
- Receive \( R, PK\{(h) : M = e(g, h) V R = e(h, K)\} \).

**Verification:**
- Choose \( \tilde{G} \).
- Parse \( st_V \) as \( (z_V, P, \text{count}, G, \text{Cred}, P) \).
- If ACL \( \neq G \) or ID in RL, break.
- Choose \( k' \in \mathbb{Z}_p \) and compute \( K \leftarrow (E_\sigma)^{k'} \).
- Set \( \text{count} \leftarrow 1 \).
- Parse ACL as \( \{G_1, \ldots, G_{l'}\} \).
- For \( i = 1, \ldots, l' \):
  - Compute \( \tilde{A}_i \leftarrow A_{G_i} u^{\gamma_i} \), \( \tilde{g}_{1i} \leftarrow g_1 u^{\delta_i} \), \( \tilde{y}_i \leftarrow y_{DO} u^{\eta_i} \), \( \tilde{h}_{0i} \leftarrow h_0 u^{\lambda_i} \), \( \tilde{h}_{1i} \leftarrow h_1 u^{\phi_i} \), \( \tilde{h}_{2i} \leftarrow h_2 u^{\psi_i} \).
- Compute \( D \leftarrow F_{1, \sigma} e(P_1, Q_r) e(P_2, Q_r) \).

### 4. Security Proof

The protocol realizes the functionalities in Section 2.3. For any environment \( \xi \) and adversary \( A \), there exists an ideal world simulator \( \text{Sim} \) such that:

\[ \text{Real}_\xi, A(k) - \text{Ideal}_\xi, \text{Sim}(k) \leq \epsilon(k), \]

where \( \epsilon(k) \) is a negligible function in \( k \). The proof of this theorem is detailed in our technical report [13].

### 5. Performance Evaluation

We implemented our protocols on a laptop with dual 2.40 GHz CPUs and 2GB memory using the Pairing-Based Cryptography (PBC) library by Lynn [10]. Our implementation used an elliptic curve \( y = x^3 + x \) with an embedding degree of 2. We tested the performance of broadcast encryption, ACL signature, credential signature, and zero-knowledge proofs with group sizes \( k \) of 32, 64, 128, 256, and 512 bits.

- **Figure 5(a): Broadcast Encryption**
  - The X-axis represents the number of revoked visitors \( r \) (from 16 to 256 with increments of 16).
  - For \( r = 50 \), the running time is less than 5 seconds, which is fast for real-life usage.

- **Figure 5(b): Zero-Knowledge Proofs**
  - The X-axis represents the number of credentials \( l' \) (from 4 to 64 with increments of 4).
  - For \( k = 512 \), it takes about 15 seconds to prove 40 credentials.

- **Figure 5(c): ACL Signature**
  - The running time does not change much with different group sizes when \( k \) is constant.

- **Figure 5(d): Credential Signature**
  - The X-axis represents the number of credentials DO needs to sign (from 4 to 64 with increments of 4).
  - For \( k = 512 \), it takes less than 3.5 seconds to sign 64 credentials at once.

### 6. Related Work

Privacy issues, especially anonymity, are significant in Online Social Networks (OSNs). Sun et al. [12] proposed a privacy-preserving scheme for OSNs, but it did not provide identity concealing. Baden et al. [2] designed Persona, which allows fine-grained privacy policies but did not address identity concealing and revocation. Squicciarini et al. [11] used game theory for cooperative privacy management, and Camenisch [6] introduced a protocol to hide user identities from databases, but their access control policy is static.

### 7. Conclusion

We proposed a system to hide visitors' identities and data indices when they visit storage sites. Using zero-knowledge proof-based oblivious transfer, the storage site can verify visitors' credentials without leaking private information. We designed a group-based ACL for data owners to determine which groups can access the data and an RL for revoking individuals. We proved the security of our system using the UC framework and demonstrated its efficiency.

### 8. References

[1] M. Au, W. Susilo, and Y. Mu. Constant-size dynamic k-taa. In R. De Prisco and M. Yung, editors, Security and Cryptography for Networks, volume 4116 of Lecture Notes in Computer Science, pages 111–125. Springer Berlin / Heidelberg, 2006. 10.1007/11832072 8.

[2] R. Baden, A. Bender, N. Spring, B. Bhattacharjee, and D. Starin. Persona: an online social network with user-defined privacy. SIGCOMM Comput. Commun. Rev., 39(4):135–146, Aug. 2009.

[3] D. Boneh and X. Boyen. Short signatures without random oracles. In C. Cachin and J. Camenisch, editors, Advances in Cryptology - EUROCRYPT 2004, volume 3027 of Lecture Notes in Computer Science, pages 56–73. Springer Berlin / Heidelberg, 2004.

[4] D. Boneh, C. Gentry, and B. Waters. Collusion resistant broadcast encryption with short ciphertexts and private keys. In V. Shoup, editor, Advances in Cryptology ? CRYPTO 2005, volume 3621 of Lecture Notes in Computer Science, pages 258–275. Springer Berlin / Heidelberg, 2005.

[5] J. Camenisch. Group signature schemes and payment systems based on the discrete logarithm problem. Citeseer, 1998.

[6] J. Camenisch, M. Dubovitskaya, and G. Neven. Oblivious transfer with access control. In Proceedings of the 16th ACM conference on Computer and communications security, CCS '09, pages 131–140, New York, NY, USA, 2009. ACM.

[7] J. Camenisch, A. Kiayias, and M. Yung. On the portability of generalized schnorr proofs. Advances in Cryptology-EUROCRYPT 2009, pages 425–442, 2009.

[8] R. Canetti. Universally composable security: a new paradigm for cryptographic protocols. In Foundations of Computer Science, 2001. Proceedings. 42nd IEEE Symposium on, pages 136 – 145, oct. 2001.

[9] A. Lewko, A. Sahai, and B. Waters. Revocation systems with very small private keys. In Security and Privacy (SP), 2010 IEEE Symposium on, pages 273 –285, may 2010.

[10] B. Lynn. The pairing-based cryptography (PBC) library. http://crypto.stanford.edu/pbc/.

[11] A. C. Squicciarini, M. Shehab, and F. Paci. Collective privacy management in social networks. In Proceedings of the 18th international conference on World wide web, WWW '09, pages 521–530, New York, NY, USA, 2009. ACM.

[12] J. Sun, X. Zhu, and Y. Fang. A privacy-preserving scheme for online social networks with efficient revocation. In INFOCOM, 2010 Proceedings IEEE, pages 1 –9, march 2010.

[13] X. Zhao, L. Li, and G. Xue. Keeping identity secret in online social networks. Technical report, Arizona State University, 2012. http://www.public.asu.edu/~xzhao32/paper/oblivious_accesscontrol.pdf.