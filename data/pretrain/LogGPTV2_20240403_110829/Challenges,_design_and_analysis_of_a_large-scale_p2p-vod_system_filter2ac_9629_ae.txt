# Server Load and NAT-Related Statistics

Figure 18 illustrates the load conditions of a content publishing server over a 48-hour period. The server, which provides 100 movies, is a Dell PowerEdge 1430 equipped with an Intel DualCore 1.6GHz CPU, 4GB RAM, and a Gigabit Ethernet Card. The figure shows the upload rate, CPU utilization, and memory usage during the measurement period. The patterns of upload rate and CPU usage vary with time, similar to the number of users as shown in Figure 7. The server's upload rate and CPU utilization are correlated with the number of users viewing the movies. Although there are periods of high upload demand and high CPU utilization, the P2P technology helps to reduce the server's burden compared to a client/server architecture, as reported in [17].

## Peer Distribution and NAT Types

Figure 19 shows the ratio of peers behind NAT boxes over a 10-day period from May 3 to May 12, 2008. The ratio remains stable at around 80%. Figure 20 illustrates the distribution of different NAT types within the same period. Full Cone NAT has the largest proportion (47%), followed by Symmetric NAT (30%) and Port-restricted NAT (23%). There were no instances of Restricted Cone NAT.

## Upload and Download Rates

Table 4 presents the distribution of peers' average upload and download rates measured on May 12, 2008, with a total of 182,544 peers recorded. The average download rate from the server is 32 Kbps, while from neighbor peers, it is 352 Kbps. The average upload rate is about 368 Kbps. The average server loading during this one-day measurement period is approximately 8.3%.

| **Upload (Kbps)** | **Number of Peers** | **Download (Kbps)** | **Number of Peers** |
|-------------------|---------------------|---------------------|---------------------|
| [0, 200)           | 65,616 (35.94%)      | [0, 360)             | 46,504 (25.47%)      |
| [200, 360)         | 51,040 (27.96%)      | [360, 600)           | 118,256 (64.78%)     |
| [360, 600)         | 45,368 (24.86%)      | [600, 1000)          | 14,632 (8.01%)       |
| [600, 1000)        | 9,392 (5.14%)        | [1000, 2000)         | 3,040 (1.67%)        |
| > 1000             | 11,128 (6.10%)       | > 2000              | 112 (0.07%)          |
| **Total**          | **182,544**          | **Total**            | **182,544**          |

## Fluency Index Distribution

Figure 16 shows the distribution of fluency index values for users over a 24-hour period. A fluency value greater than 0.7 is considered good, while a value less than 0.2 is considered poor. A high percentage of fluency indexes have values greater than 0.7, but around 20% have values less than 0.2. This indicates that there is a significant amount of buffering time, leading to long start-up latency, which is an area for improvement.

## Impact of Viewer Population Changes on Fluency

Figure 17 compares the ratio of "good" and "bad" fluency indices against the rate of change in the viewer population over a 24-hour period. When the rate of change in the viewer population is negative (decreasing), there is no effect on the percentage of good or bad fluency indices. However, when the rate of change goes from negative to positive (sudden increase in viewers), the percentage of good fluency indices decreases, and the percentage of bad fluency indices increases. This is due to the fact that more users need to buffer data before they can view the video.

## Related Work

P2P streaming technology has attracted significant research interest, with several systems deployed to provide high-quality viewing experiences with low server loads, such as CoolStreaming [21], PPLive [2], PPStream [6], UUSee [7], AnySee [19], and Joost [3]. Theoretical analysis and measurements of P2P live streaming applications can help improve viewing quality and make the systems more robust and scalable. Hei et al. [18] applied queueing theory and stochastic fluid process to model P2P streaming systems. Zhou et al. [22] proposed a model to calculate the filling probability of streaming buffers using a sliding window mechanism. They used playback continuity and start-up latency as performance metrics. Passive sniffing [8] and active crawling [15] methods have been used to measure existing P2P live streaming software from the client side. Wu et al. [20] reported results from a popular P2P live streaming system via the server side.

However, there are significant differences between live streaming and Video-on-Demand (VoD) streaming. For example, VoD services allow user interactions like pausing and random jumping, which are not available in live streaming. Designing and deploying a real-world P2P-VoD system is more challenging than a P2P live streaming system. Research on on-demand video streaming began in the early 1990s, with IP multicast-based proposals facing deployment issues. Recent work includes peer-assisted VoD streaming, such as tree-based approaches [14] and overlay tree-based patching [13]. Huang et al. [17] conducted an analysis through measurement and simulation on data from an existing client-server-based VoD system. Our work is the first to conduct an in-depth study on practical design and measurement issues in a real-world P2P-VoD system, with data collected from 2.2 million independent users.

## Conclusion and Future Work

P2P-VoD streaming is an emerging application for the Internet. As of the writing of this paper, the P2P-VoD service in PPLive supports up to 150,000 simultaneous users, with expectations for further growth. We present a general architecture and important building blocks for realizing a P2P-VoD system, including file segmentation, replication strategies, content discovery and management, piece/chunk selection policies, transmission strategies, and authentication. We define various performance measures and illustrate how to instrument the measurement to evaluate system health and user satisfaction. A large-scale measurement analysis quantifies user behavior, the effectiveness of replication scheduling strategies, and the level of user satisfaction.

This paper provides a general framework for further research in P2P-VoD systems, addressing the following key issues:
1. Designing a highly scalable P2P-VoD system to support millions of simultaneous users.
2. Performing dynamic movie replication, replacement, and scheduling to reduce the workload at content servers.
3. Quantifying various replication strategies to ensure a high health index.
4. Selecting proper chunk and piece transmission strategies to improve viewing quality.
5. Accurately measuring and quantifying user satisfaction levels.

## References

[1] “Emule”, http://www.emule.com/.
[2] “PPLive”, http://www.pplive.com/.
[3] “Joost”, http://www.joost.com/.
[4] “GridCast”, http://www.gridcast.cn/.
[5] “PFSVOD”, http://www.pplive.com/subject/20070808pfsvod/.
[6] “PPStream”, http://www.ppstream.com/.
[7] “UUSee”, http://www.uusee.com/.
[8] S. Ali, A. Mathur, and H. Zhang. Measurement of commercial peer-to-peer live video streaming. In 1st Workshop on Recent Advances in P2P Streaming, August 2006.
[9] B. Cohen. Incentives build robustness in bittorrent. http://bitconjurer.org/BitTorrent/bittorrentecon.pdf, May 2003.
[10] P. Dhungel, X. Hei, K. W. Ross, and N. Saxena. The pollution attack in p2p live video streaming: measurement results and defenses. In Proceedings of Peer-to-Peer Streaming and IP-TV workshop (P2P-TV’07), Kyoto, Japan, August 2007.
[11] D. Eager, M. Vernon, and J. Zahorjan. Bandwidth skimming: a technique for cost-effective video-on-demand. In Proceedings of SPIE/ACM Conference on Multimedia Computing and Networking (MMCN), San Jose, CA, USA, January 2000.
[12] L. Gao, D. Towsley, and J. Kurose. Efficient schemes for broadcasting popular videos. In Proceedings of the 8th ACM International Workshop on Network and Operating Systems Support for Digital Audio and Video (NOSSDAV), Cambridge, UK, July 1998.
[13] Y. Guo, K. Suh, J. Kurose, and D. Towsley. P2cast: peer-to-peer patching scheme for vod service. In Proceedings of the 12th ACM International World Wide Web Conference (WWW), Budapest, Hungary, May 2003.
[14] A. A. Hamra, E. W. Biersack, and G. Urvoy-Keller. A pull-based approach for a vod service in p2p networks. In IEEE HSNMC, Toulouse, France, July 2004.
[15] X. Hei, C. Liang, Y. Liu, and K. W. Ross. A measurement study of a large-scale P2P IPTV system. IEEE Transactions on Multimedia, 9(8):1672–1687, December 2007.
[16] A. Hu. Video-on-demand broadcasting protocols: a comprehensive study. In Proceedings of IEEE INFOCOM’01, Anchorage, AK, USA, April 2001.
[17] C. Huang, J. Li, and K. W. Ross. Can internet video-on-demand be profitable? In Proceedings of ACM SIGCOMM’07, Kyoto, Japan, August 2007.
[18] R. Kumar, Y. Liu, and K. W. Ross. Stochastic fluid theory for p2p streaming systems. In Proceedings of IEEE INFOCOM’07, May 2007.
[19] X. Liao, H. Jin, Y. Liu, L. M. Ni, and D. Deng. Anysee: Peer-to-peer live streaming. In Proceedings of IEEE INFOCOM’06, April 2006.
[20] C. Wu, B. Li, and S. Zhao. Multi-channel live p2p streaming: refocusing on servers. In Proceedings of IEEE INFOCOM’08, April 2008.
[21] X. Zhang, J. Liu, B. Li, and T. S. P. Yum. Coolstreaming/donet: A data-driven overlay network for efficient live media streaming. In Proceedings of IEEE INFOCOM’05, March 2005.
[22] Y. Zhou, D. M. Chiu, and J. C. S. Lui. A simple model for analyzing p2p streaming protocols. In Proceedings of IEEE ICNP’07, October 2007.