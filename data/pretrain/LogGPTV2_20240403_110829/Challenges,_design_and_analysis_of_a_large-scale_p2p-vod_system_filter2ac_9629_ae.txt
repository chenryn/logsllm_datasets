(
t
n
e
c
r
e
P
)
%
(
t
n
e
c
r
e
P
Upload rate
6:00
12:00 18:00 24:00
CPU usage
6:00
12:00
6:00
12:00 18:00 24:00
Memory usage
6:00
12:00 18:00 24:00
Time (hour)
6:00
12:00
6:00
12:00
Figure 18: Server load within a 48-hour period.
Figure 19 shows the ratio of peers behind NAT boxes
and Figure 20 shows the distribution of diﬀerent NAT types
within a 10-day measurement period from May 3 to May
12, 2008. From Figure 19, we observe that the ratio of peers
behind NAT boxes remains stable, around 80%. Figure 20
implies that the Full Cone NAT has the largest proportion
(47%) and the Symmetric NAT is the second (30%) and
the Port-restricted NAT is the third (23%) while there is no
Restricted Cone NAT.
Table 4 illustrates the distribution of peers’ average up-
load and download rate measured on May 12, 2008. A total
of 182544 peers are recorded. The average rate of a peer
downloading from the server is 32Kbps and 352Kbps from
the neighbor peers. On the other hand, the average upload
rate of a peer is about 368Kbps. The average server loading
during this one-day measurement period is about 8.3%.
Upload
(Kbps)
[0, 200)
[200, 360)
[360, 600)
[600, 1000)
> 1000
Total
# of Peers
Download
# of Peers
(%)
65616(35.94%)
51040(27.96%)
45368(24.86%)
9392(5.14%)
11128(6.10%)
182544
(Kbps)
[0, 360)
[360, 600)
[600, 1000)
[1000, 2000)
> 2000
Total
(%)
46504(25.47%)
118256(64.78%)
14632(8.01%)
3040(1.67%)
112(0.07%)
182544
Table 4: Distribution of average upload and down-
load rate in one-day measurement period
5. RELATED WORK
Nowadays, P2P steaming technology attracts great re-
search interests. A number of P2P live streaming systems
are deployed with high viewing quality but low server bur-
den, including CoolStreaming [21], PPLive [2], PPStream
[6], UUSee [7], AnySee [19] and Joost [3] etc. Meanwhile, the
theoretical analysis and measurement on P2P living stream-
ing applications could help to improve the viewing quality
and make the P2P live streaming system more robust and
scalable. Hei et al.
[18] have applied queueing theory and
[0,0.1) [0.1,0.2)[0.2,0.3)[0.3,0.4)[0.4,0.5)[0.5,0.6)[0.6,0.7)[0.7,0.8)[0.8,0.9) [0.9,1]
Fluency ∈ [0, 1]
Figure 16: Distribution of ﬂuency index of users
within a 24-hour period
considered as having a good viewing quality while a ﬂuency
value less than 0.2 is considered as having a poor viewing
quality. One can observe that there is a high percentage
of ﬂuency indexes whose values are greater than 0.7. How-
ever, around 20% of the ﬂuency indexes are less than 0.2.
One explanation of this phenomenon is that there is a high
buﬀering time (which causes long start-up latency) for each
viewing operation. This indicates an area for improvement
in the current system.
One interesting question is how does the rate of change
of viewer’s population aﬀects the ﬂuency index. Figure 17
shows the change in percentage of good ﬂuency index (i.e.,
ﬂuency value between 0.8 and 1.0) and bad ﬂuency index
(i.e., ﬂuency value between 0.0 and 0.2) when the number of
viewers changes. When the rate of change of viewer’s pop-
ulation takes on a negative (positive) value, it implies that
the number of viewers is decreasing (increasing). One can
observe that when the rate of change in viewer’s population
is of negative value, there is no eﬀect on the percentage of
good or bad ﬂuency indexes. But when the rate of change
in viewer’s population goes from negative value to positive
value (which corresponds to a sudden increase in viewer’s
population), then the percentage of good (bad) ﬂuency in-
dex will decrease (increase). This is contributed by the fact
that more users need to spend time to buﬀer the data before
viewing the video.
4.5 Server Load and NAT related statistics
Figure 18 shows the load conditions of one content pub-
lishing server within a 48-hour measurement period. The
server provides 100 movies, and it is a Dell PowerEdge 1430
server equipped with Intel DueCore 1.6GHz CPU, 4GB RAM
and a Gigabit Ethernet Card. Figure 18 shows the upload
rate, CPU utilization and memory usage in the measurement
period. As shown in Figure 18, the patterns of upload rate
and CPU usage vary with time and this pattern is similar
with the pattern of number of users as shown in Figure 7.
The server upload rate and CPU utilization are correlated
with the number of users viewing the movies. Although we
observe that there are some periods with high upload de-
mand and high CPU utilization, comparing to the results
reported in [17] (a client/server architecture), one can con-
clude that the P2P technology helps to reduce the server’s
o
i
t
a
R
Ratio of GOOD and BAD fluency vs. user increasing rate of Movie1
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
−0.1
−0.2
−0.3
−0.4
−0.5
−0.6
−0.7
−0.8
−0.9
−1
Ratio of fluency ∈ [0, 0.2]
Ratio of fluency ∈ [0.8, 1]
Increasing rate of users
0 1 2 3 4 5 6 7 8 9 1011 12 1314 15 16 1718 19 2021 22 23 24
Time (Hour)
o
i
t
a
R
Ratio of fluency ∈ [0, 0.2]
Ratio of fluency ∈ [0.8, 1]
Increasing rate of users
Ratio of GOOD and BAD fluency vs. user increasing rate of Movie2
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
−0.1
−0.2
−0.3
−0.4
−0.5
−0.6
−0.7
0 1 2 3 4 5 6 7 8 9 1011 12 1314 15 16 1718 19 2021 22 23 24
Time (Hour)
o
i
t
a
R
Ratio of GOOD and BAD fluency vs. user increasing rate of Movie3
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
−0.1
−0.2
−0.3
−0.4
−0.5
−0.6
−0.7
−0.8
−0.9
−1
Ratio of fluency ∈ [0, 0.2]
Ratio of fluency ∈ [0.8, 1]
Increasing rate of users
0 1 2 3 4 5 6 7 8 9 1011 12 1314 15 16 1718 19 2021 22 23 24
Time (Hour)
Figure 17: Comparison of the ratio of ”good”and ”bad” ﬂuency vs. the rate of change in viewer’s population
within a 24-hour period
x 105
Ratio of peers behind NAT
Ratio of nodes behind NAT
Peers with Public IP
Peers behind NAT
5/3
5/4
5/5
5/6
5/7
5/8
5/9
5/10 5/11 5/12
Date
s
r
e
e
p
f
o
r
e
b
m
u
N
4
3
2
1
0
1
0.75
0.5
R
a
t
i
o
0.25
0
0.6
0.5
0.4
o
i
t
a
R
0.3
0.2
0.1
0
NAT type distribution
 Full Cone NAT
 Symmetric NAT
 Port−restricted NAT
5/3
5/4
5/5
5/6
5/7
5/8
Date
5/9
5/10 5/11 5/12
Figure 19: Ratio of peers behind NAT boxes within
a 10-day period
Figure 20: Distribution of peers with diﬀerent NAT
types within a 10-day period
stochastic ﬂuid process to model the P2P streaming system.
Zhou et al.
[22] proposed a model to calculate the ﬁlling
probability of streaming buﬀers based on a sliding window
mechanism. They have used the peers’ playing back conti-
nuity and start-up latency as the performance metrics. Two
kinds of measuring methods, passive sniﬃng [8], and active
crawling [15] have been applied to measure the existing P2P
live streaming software from the client side. Wu et al. [20]
have reported results of a measurement from a popular P2P
live streaming system via the server side.
However, there are vital diﬀerences between live streaming
and VoD streaming. For example, users’ interactive behav-
iors like pausing and random jumping are allowed when they
are subscribe to VoD services but live streaming systems do
not provide these features. As a result, the design and de-
ployment of a real world P2P-VoD system is more diﬃcult
than a P2P live streaming system.
In fact, on demand video streaming is not a new topic
and the research begins since early 90’s. IP multicast based
proposals like patching [12], periodic broadcasting [16] and
merging [11] faced the deployment problems of IP multi-
cast. Later on, there are a number of proposals for peer-
assisted Video-on-Demand streaming such as tree-based ap-
proach [14] and overlay tree based patching [13]. Recently
Huang et al.
[17] have carried out analysis through mea-
surement and simulation on the data trace from an existing
client-server based VoD system. To the best of our knowl-
edge, our work is the ﬁrst to conduct an in-depth study on
practical design and measurement issues deployed by a real-
world P2P-VoD system. In addition, we have measured and
collected data from this real-world P2P-VoD system with
totally 2.2 million independent users.
6. CONCLUSION AND REMARKS
P2P-VoD streaming service is an up and coming applica-
tion for the Internet. As we prepare this paper, the P2P-VoD
service in PPLive is already supporting up to over 150K si-
multaneous users, and we expect the number of users to grow
further. In this paper, we present a general architecture and
important building blocks of realizing a P2P-VoD system.
One can use this general framework and taxonomy to fur-
ther study various design choices. The building blocks we
presented include the ﬁle segmentation strategy, replication
strategy, content discovery and management, piece/chunk
selection policy, transmission strategy and authentication.
We also deﬁne various performance measures and illustrate
how to instrument the measurement so as to evaluate the
health of the systems and the user satisfaction (e.g., ﬂuency
index). We carried out a large scale measurement analysis to
quantify the users’ behavior, the eﬀectiveness of the replica-
tion scheduling strategies, and the level of user satisfaction.
In closing, this paper provides the general framework for fur-
ther research in P2P-VoD systems, in particular, to address
the following important issues: (1) how to design a highly
scalable P2P-VoD system to support millions of simultane-
ous users; (2) how to perform dynamic movie replication,
replacement, and scheduling so as reduce the workload at
the content servers; (3) how to quantify various replication
strategies so as to guarantee a high health index; (4) how
to select proper chunk and piece transmission strategies so
as to improve the viewing quality; (5) how to accurately
measure and quantify the user satisfaction level.
7. REFERENCES
[1] “Emule”, http://www.emule.com/.
[2] “PPLive”, http://www.pplive.com/.
[3] “Joost”, http://www.joost.com/.
[4] “GridCast”, http://www.gridcast.cn/.
[5] “PFSVOD”,
http://www.pplive.com/subject/20070808pfsvod/.
[6] “PPStream”, http://www.ppstream.com/.
[7] “UUSee”, http://www.uusee.com/.
[8] S. Ali, A. Mathur, and H. Zhang. Measurement of
commercial peer-to-peer live video streaming. In 1st
Workshop on Recent Advances in P2P Streaming,
August 2006.
[9] B. Cohen. Incentives build robustness in bittorrent.
http://bitconjurer.org/BitTorrent/bittorrentecon.pdf,
May 2003.
[10] P. Dhungel, X. Hei, K. W. Ross, and N. Saxena. The
pollution attack in p2p live video streaming:
measurement results and defenses. In Proceedings of
Peer-to-Peer Streaming and IP-TV workshop
(P2P-TV’07), Kyoto, Japan, August 2007.
[11] D. Eager, M. Vernon, and J. Zahorjan. Bandwidth
skimming: a technique for cost-eﬀective
video-on-demand. In Proceedings of SPIE/ACM
Conference on Multimedia Computing and Networking
(MMCN), San Jose, CA, USA, January 2000.
[12] L. Gao, D. Towsley, and J. Kurose. Eﬃcient schemes
for broadcasting popular videos. In Proceedings of the
8th ACM International Workshop on Network and
Operating Systems Support for Digital Audio and
Video (NOSSDAV), Cambridge, UK, July 1998.
[13] Y. Guo, K. Suh, J. Kurose, and D. Towsley. P2cast:
peer-to-peer patching scheme for vod service. In
Proceedings of the 12th ACM International World
Wide Web Conference (WWW), Budapest, Hungary,
May 2003.
[14] A. A. Hamra, E. W. Biersack, and G. Urvoy-Keller. A
pull-based approach for a vod service in p2p networks.
In IEEE HSNMC, Toulouse, France, July 2004.
[15] X. Hei, C. Liang, Y. Liu, and K. W. Ross. A
measurement study of a large-scale P2P iptv system.
IEEE Transactions on Multimedia, 9(8):1672–1687,
December 2007.
[16] A. Hu. Video-on-demand broadcasting protocols: a
comprehensive study. In Proceedings of IEEE
INFOCOM’01, Anchorage, AK, USA, April 2001.
[17] C. Huang, J. Li, and K. W. Ross. Can internet
video-on-demand be proﬁtable? In Proceedings of
ACM SIGCOMM’07, Kyoto, Japan, August 2007.
[18] R. Kumar, Y. Liu, and K. W. Ross. Stochastic ﬂuid
theory for p2p streaming systems. In Proceedings of
IEEE INFOCOM’07, May 2007.
[19] X. Liao, H. Jin, Y. Liu, L. M. Ni, and D. Deng.
Anysee: Peer-to-peer live streaming. In Proceedings of
IEEE INFOCOM’06, April 2006.
[20] C. Wu, B. Li, and S. Zhao. Multi-channel live p2p
streaming: refocusing on servers. In Proceedings of
IEEE INFOCOM’08, April 2008.
[21] X. Zhang, J. Liu, B. Li, and T. S. P. Yum.
Coolstreaming/donet: A data-driven overlay network
for eﬃcient live media streaming. In Proceedings of
IEEE INFOCOM’05, March 2005.
[22] Y. Zhou, D. M. Chiu, and J. C. S. Lui. A simple
model for analyzing p2p streaming protocols. In
Proceedings of IEEE ICNP’07, October 2007.