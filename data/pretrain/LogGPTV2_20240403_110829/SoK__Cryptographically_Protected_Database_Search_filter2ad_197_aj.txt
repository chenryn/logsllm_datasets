http://eprint.iacr.org/2016/568.
[111] D. S. Roche, D. Apon, S. G. Choi, and A. Yerukhimovich, “POPE:
Partial order preserving encoding,” in ACM CCS 16. ACM Press,
2016, pp. 1131–1142.
[112] F. Baldimtsi and O. Ohrimenko, “Sorting and searching behind the
curtain,” in FC 2015, ser. LNCS, R. Böhme and T. Okamoto, Eds.,
vol. 8975. Springer, Heidelberg, Jan. 2015, pp. 127–146.
[113] M. Strizhov and I. Ray, “Multi-keyword similarity search over en-
crypted cloud data,” Cryptology ePrint Archive, Report 2015/137,
2015, http://eprint.iacr.org/2015/137.
[114] E. Shen, E. Shi, and B. Waters, “Predicate privacy in encryption
systems,” in TCC 2009, ser. LNCS, O. Reingold, Ed., vol. 5444.
Springer, Heidelberg, Mar. 2009, pp. 457–473.
[115] C. Bösch, Q. Tang, P. H. Hartel, and W. Jonker, “Selective document
retrieval from encrypted database,” in ISC 2012, ser. LNCS, D. Goll-
mann and F. C. Freiling, Eds., vol. 7483. Springer, Heidelberg, Sep.
2012, pp. 224–241.
[116] X. Meng, S. Kamara, K. Nissim, and G. Kollios, “GRECS: Graph
encryption for approximate shortest distance queries,” in ACM CCS
15, I. Ray, N. Li, and C. Kruegel:, Eds. ACM Press, Oct. 2015, pp.
504–517.
[117] O. Goldreich and R. Ostrovsky, “Software protection and simulation
on oblivious rams,” Journal of the ACM (JACM), vol. 43, no. 3, pp.
431–473, 1996.
[118] E. Stefanov, M. van Dijk, E. Shi, C. W. Fletcher, L. Ren, X. Yu,
and S. Devadas, “Path ORAM: an extremely simple oblivious RAM
protocol,” in ACM CCS 13, A.-R. Sadeghi, V. D. Gligor, and M. Yung,
Eds. ACM Press, Nov. 2013, pp. 299–310.
[119] M. Naveed, “The fallacy of composition of oblivious RAM and
searchable encryption,” Cryptology ePrint Archive, Report 2015/668,
2015, http://eprint.iacr.org/2015/668.
[120] D. S. Roche, A. J. Aviv, and S. G. Choi, “A practical oblivious map
data structure with secure deletion and history independence,” in 2016
IEEE Symposium on Security and Privacy.
IEEE Computer Society
Press, 2016, pp. 178–197.
[121] S. Garg, P. Mohassel, and C. Papamanthou, “TWORAM: Eﬃcient
oblivious RAM in two rounds with applications to searchable encryp-
tion,” ser. LNCS. Springer, Heidelberg, Aug. 2016, pp. 563–592.
[122] S. Lu and R. Ostrovsky, “How to garble RAM programs,” in EURO-
CRYPT 2013, ser. LNCS, T. Johansson and P. Q. Nguyen, Eds., vol.
7881. Springer, Heidelberg, May 2013, pp. 719–734.
[123] T. Moataz and E.-O. Blass, “Oblivious substring search with updates,”
Cryptology ePrint Archive, Report 2015/722, 2015, http://eprint.iacr.
org/2015/722.
[124] S. Faber, S. Jarecki, S. Kentros, and B. Wei, “Three-party ORAM for
secure computation,” in ASIACRYPT 2015, Part I, ser. LNCS, T. Iwata
and J. H. Cheon, Eds., vol. 9452. Springer, Heidelberg, Nov. / Dec.
2015, pp. 360–385.
[125] G. Kellaris, G. Kollios, K. Nissim, and A. O’Neill, “Generic attacks
on secure outsourced databases,” in Proceedings of the 2016 ACM
SIGSAC Conference on Computer and Communications Security, ser.
CCS ’16. New York, NY, USA: ACM, 2016, pp. 1329–1340.
[Online]. Available: http://doi.acm.org/10.1145/2976749.2978386
[126] E. Chen, I. Gomez, B. Saavedra, and J. Yucra, “Cocoon: Encrypted
substring search,” https://courses.csail.mit.edu/6.857/2016/ﬁles/29.pdf,
May 2015, accessed: 2016-07-15.
[127] Y. Zhang,
belong
to
us: The
J. Katz, and C. Papamanthou, “All your queries
on
are
in 25th USENIX Security Symposium,
searchable
USENIX Security 16, Austin, TX, USA, August 10-12, 2016., 2016,
pp. 707–720. [Online]. Available: https://www.usenix.org/conference/
usenixsecurity16/technical-sessions/presentation/zhang
of ﬁle-injection
encryption,”
attacks
power
[128] D. Cash, P. Grubbs, J. Perry, and T. Ristenpart, “Leakage-abuse
attacks against searchable encryption,” in Proceedings of the 22nd
ACM SIGSAC Conference on Computer and Communications Security,
Denver, CO, USA, October 12-6, 2015, 2015, pp. 668–679. [Online].
Available: http://doi.acm.org/10.1145/2810103.2813700
[129] D. Pouliot and C. V. Wright, “The shadow nemesis:
Inference
attacks on eﬃciently deployable, eﬃciently searchable encryption,” in
Proceedings of the 22nd ACM SIGSAC Conference on Computer and
Communications Security, Denver, CO, USA, October 12-6, 2015,
2015, pp. 644–655. [Online]. Available: http://doi.acm.org/10.1145/
2810103.2813651
[130] M. Naveed, S. Kamara, and C. V. Wright, “Inference attacks on
property-preserving encrypted databases,” in 23rd ACM Conference on
Computer and Communications Security, Vienna, Austria, October 24-
28, 2016, 2016.
[131] P. Grubbs, K. Sekniqi, V. Bindschaedler, M. Naveed, and T. Ristenpart,
“Leakage-abuse attacks against order-revealing encryption,” Cryptol-
ogy ePrint Archive, Report 2016/895, http://eprint.iacr.org/2016/895.
[132] M. S. Islam, M. Kuzu, and M. Kantarcioglu, “Access pattern disclosure
on searchable encryption: Ramiﬁcation, attack and mitigation,” in 19th
Annual Network and Distributed System Security Symposium, NDSS
2012, San Diego, California, USA, February 5-8, 2012, 2012.
[133] A. Boldyreva and N. Chenette, “Eﬃcient fuzzy search on encrypted
data,” in FSE 2014, ser. LNCS, C. Cid and C. Rechberger, Eds., vol.
8540. Springer, Heidelberg, Mar. 2015, pp. 613–633.
[134] G. D. Crescenzo and A. Ghosh, “Privacy-preserving range queries from
keyword queries,” in Data and Applications Security and Privacy XXIX,
ser. LNCS, vol. 9149. Springer, 2015, pp. 35–50.
[135] M. F. Porter, “An algorithm for suﬃx stripping,” Program, vol. 14,
no. 3, pp. 130–137, 1980.
[136] P. Willett, “The porter stemming algorithm: then and now,” Program,
vol. 40, no. 3, pp. 219–223, 2006.
[137] J. Li, Q. Wang, C. Wang, N. Cao, K. Ren, and W. Lou, “Fuzzy keyword
search over encrypted data in cloud computing,” in INFOCOM 2010.
29th IEEE International Conference on Computer Communications,
Joint Conference of the IEEE Computer and Communications Societies,
15-19 March 2010, San Diego, CA, USA, 2010, pp. 441–445. [Online].
Available: http://dx.doi.org/10.1109/INFCOM.2010.5462196
[138] P. Indyk and R. Motwani, “Approximate nearest neighbors: towards
removing the curse of dimensionality,” in Proceedings of the thirtieth
annual ACM symposium on Theory of computing. ACM, 1998, pp.
604–613.
[139] A. Gionis, P. Indyk, R. Motwani et al., “Similarity search in high
dimensions via hashing,” in VLDB, vol. 99, no. 6, 1999, pp. 518–529.
[140] M. Kuzu, M. S. Islam, and M. Kantarcioglu, “Eﬃcient similarity
search over encrypted data,” in IEEE 28th International Conference on
Data Engineering (ICDE), 2012, pp. 1156–1167. [Online]. Available:
http://dx.doi.org/10.1109/ICDE.2012.23
[141] H. Park, B. H. Kim, D. H. Lee, Y. D. Chung, and J. Zhan,
“Secure similarity search,” in 2007 IEEE International Conference
on Granular Computing, GrC 2007, San Jose, California, USA,
2-4 November 2007, 2007, p. 598.
[Online]. Available: http:
//dx.doi.org/10.1109/GRC.2007.140
189
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:23:00 UTC from IEEE Xplore.  Restrictions apply. 
[142] M. Adjedj, J. Bringer, H. Chabanne, and B. Kindarji, “Biometric
identiﬁcation over encrypted data made feasible,” in Information
Systems Security, 5th International Conference, ICISS 2009, Kolkata,
India, December 14-18, 2009, Proceedings, 2009, pp. 86–100.
[Online]. Available: http://dx.doi.org/10.1007/978-3-642-10772-6_8
[143] J. Bringer, H. Chabanne, and B. Kindarji, “Error-tolerant searchable
encryption,” in Proceedings of IEEE International Conference on
Communications, ICC 2009, Dresden, Germany, 14-18 June 2009,
2009, pp. 1–6.
[Online]. Available: http://dx.doi.org/10.1109/ICC.
2009.5199004
[144] C. Wang, K. Ren, S. Yu, and K. M. R. Urs, “Achieving
usable and privacy-assured similarity search over outsourced cloud
data,” in Proceedings of the IEEE INFOCOM 2012, Orlando, FL,
USA, March 25-30, 2012, 2012, pp. 451–459. [Online]. Available:
http://dx.doi.org/10.1109/INFCOM.2012.6195784
[145] I. Demertzis, S. Papadopoulos, O. Papapetrou, A. Deligiannakis, and
M. Garofalakis, “Practical private range search revisited,” in ACM
SIGMOD/PODS Conference, 2016.
[146] I. Damgard, M. Geisler, and M. Kroigard, “Homomorphic encryption
and secure comparison,” International Journal of Applied Cryptogra-
phy, vol. 1, no. 1, pp. 22–31, 2008.
[147] F. Kerschbaum, D. Biswas, and S. de Hoogh, “Performance comparison
of secure comparison protocols,” in Database and Expert Systems
Application, 2009. DEXA’09. 20th International Workshop on.
IEEE,
2009, pp. 133–136.
[148] S. Han and W. K. Ng, “Privacy-preserving linear ﬁsher discriminant
analysis,” in Paciﬁc-Asia Conference on Knowledge Discovery and
Data Mining. Springer, 2008, pp. 136–147.
[149] X. S. Wang, K. Nayak, C. Liu, T.-H. H. Chan, E. Shi, E. Stefanov, and
Y. Huang, “Oblivious data structures,” in ACM CCS 14, G.-J. Ahn,
M. Yung, and N. Li, Eds. ACM Press, Nov. 2014, pp. 215–226.
[150] R. Elmasri and S. Navathe, Fundamentals of Database Systems.
Boston, MA, USA: Addison-Wesley, 2011.
[151] E. Bertino and R. Sandhu, “Database security-Concepts, Approaches,
and Challenges,” IEEE Transactions on Dependable and Secure Com-
puting, vol. 2, no. 1, 2005.
[152] A. Fuchs, “Accumulo–extensions to Google’s Bigtable design,” Na-
tional Security Agency, Tech. Rep, 2012.
[153] IARPA,
Security
February 2011.
c55e38dbde30cb668f687897d8f01e69
IARPA-BAA-11-01:
(SPAR)
program.”
[Online]. Available: https://www.fbo.gov/notices/
announcement
research
“Broad
and
assurance
agency
privacy
[154] A. Hamlin and J. Herzog, “A test-suite generator for database systems,”
in 2014 IEEE High Performance Extreme Computing Conference,
2014, pp. 1–6.
[155] M. Varia, B. Price, N. Hwang, A. Hamlin, J. Herzog, J. Poland,
M. Reschly, S. Yakoubov, and R. K. Cunningham, “Automated assess-
ment of secure search systems,” Operating Systems Review, vol. 49,
no. 1, pp. 22–30, 2015.
[156] M. Varia, S. Yakoubov, and Y. Yang, “HEtest: A homomorphic
encryption testing framework,” in FC 2015 Workshops, ser. LNCS,
M. Brenner, N. Christin, B. Johnson, and K. Rohloﬀ, Eds., vol. 8976.
Springer, Heidelberg, Jan. 2015, pp. 213–230.
[157] J. Kepner, V. Gadepally, P. Michaleas, N. Schear, M. Varia, A. Yerukhi-
movich, and R. K. Cunningham, “Computing on masked data: a high
performance method for improving big data veracity,” in 2014 IEEE
High Performance Extreme Computing Conference (HPEC).
IEEE,
2014, pp. 1–6.
[158] V. Gadepally, B. Hancock, B. Kaiser, J. Kepner, P. Michaleas, M. Varia,
and A. Yerukhimovich, “Computing on masked data to improve the
security of big data,” in IEEE International Symposium on Technologies
for Homeland Security (HST).
IEEE, 2015, pp. 1–6.
[159] B. Schneier, “Data is a toxic asset,” 2016. [Online]. Available: https://
www.schneier.com/essays/archives/2016/03/data_is_a_toxic_asse.html
[160] D. Blumenthal, “Launching HITECH,” New England Journal of
Medicine, vol. 362, no. 5, pp. 382–385, 2010.
[161] "The Oﬃce of
the National Coordinator
for Health Information
Technology", “Guide to privacy and security of electronic health
information,” 2015. [Online]. Available: https://www.healthit.gov/sites/
default/ﬁles/pdf/privacy/privacy-and-security-guide.pdf
[162] S. Barnum, “Standardizing cyber threat intelligence information with
the Structured Threat Information eXpression (STIX),” MITRE Corpo-
ration, vol. 11, 2012.
190
[163] “Amazon Web Services (AWS) - cloud computing services.” [Online].
Available: https://aws.amazon.com/
SUBSTRING AND WILDCARD QUERY COMBINERS
APPENDIX A
9) Bounded-length substring using keyword equality [22]:
Searches for substrings of a ﬁxed length 𝜅 can be supported
simply by inserting all length-𝜅 substrings (𝜅-grams) into an
equality-searchable index during initialization. Given a ﬁeld
with maximum length 𝛼, this techniques requires adding 𝛼 − 𝜅
keywords during insertion and making one keyword search
during query execution.
10) Short substring using range [22]: By inserting the 𝜅-
grams into a range index, queries for substrings of length up
to 𝜅 can also be supported. We explain by example: one can
query for the two-character string “hi” by searching for the
range [ℎ𝑖𝑎, ℎ𝑖𝑧] in an index of length-3 substrings.
11) Anchored substring using conjunction [18]: We now
consider the converse of the above situation: supporting
searches of long substrings of length at least 𝜅, with storage
overhead decreasing in 𝜅. We begin with an “anchored” search,
where the substring occurs either at the beginning or end of
the string.
By way of example, suppose we wish to support substring
searches on the record 𝑎 =“teststring”. In a conjunction-
searchable index, we insert 𝜅-grams of the string along with
their location (1, “tes”), (2, “est”), . . . , (8, “ing”). Now to
search for all records containing “test” the client asks for all
records matching both (1, “tes”) and (2, “est”). Searching from
the end of the string can be accomplished using negative
indexing; using (-1, “ing”), (-2, “rin”), (-3, “tri”), . . . , (-8,
“tes”) in the above example.
12) Substring using disjunction of conjunctions [18]:
Removing the anchoring restriction from the above technique
requires the use of disjunctions, since the starting location
of the substring is unknown. To ﬁnd the substring “test” the
querier must search for a conjunction of (𝑖, “tes”) and (𝑖+1,
“est”) for any starting position 𝑖. The number of terms in this
formula depends on the maximum string length.
13) and 14) Wildcard using conjunctions [18]: The above
technique also supports single-character wildcard queries. For
instance, to search for “tes_str”, the client asks for a con-
junction of (1, “tes”) and (5, “str”). Note that the 𝜅-gram
length of letters is required on either side of the wildcard. This
technique can be extended for unanchored queries as above,
and it supports multiple character wildcards by incrementing
the expected positions of the 𝜅-grams.
APPENDIX B
PROCEDURE FOR PILOT STUDY
We installed and conﬁgured multiple protected search sys-
tems. For each, we ingested ten million records of real
application data, and conducted sessions with 10 users over a
ten-day period. Our Institutional Review Board reviewed our
protocols and questionnaires, determined that they represented
a minimal risk, and approved the procedure. Software for the
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:23:00 UTC from IEEE Xplore.  Restrictions apply. 
procedure resided in an Amazon Web Services (AWS) [163]
network. Data was drawn from a genuine application source
and was converted to a single, static table with over one
hundred columns and ten million records.
Participants had a mix of technical and non-technical back-
grounds, with six men and four women. All participants
had prior experience interacting with web interfaces that
use database backends to present results. Participants were
aware that they were using diﬀerent systems but systems were
identiﬁed only by a single letter. Participants were not given
any information about the capabilities of the technologies.
Each participant took part in three types of sessions, each
of which lasted 30 minutes: 1) training on the web interface;
2) scripted interaction with each of the technologies; and
3) exploratory sessions with each of the technologies. Users
interacted with the secure database technology through a
web application which included a visual query builder which
queried the underlying secure database. Participants interacted
with the visual query builder to create queries. Then, the web
server submitted the query to the protected search system.
191
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:23:00 UTC from IEEE Xplore.  Restrictions apply.