advantage of this consistent approach is that users will not
be surprised/annoyed by permission requests because they
know when to expect them. Since requesting permissions on
Android and iOS is similar, this solution is also realizable in
iOS. However, it should be noted that design changes to the
mobile OS must protect against malicious developers who
could provide misleading or erroneous in-context timings and
rationales, which is orthogonal to our work. While the actual
design and evaluation of such systems is part of future work.
Rationale origin misconception. While the majority of
participants identiﬁed the developer as the author of ratio-
nale messages, a large number still thought that the rationales
were created by the operating system (37%). This could be a
side-effect of using standardized rationales for the apps in our
user study. However, rationale messages in iOS are already
integrated in the standard permission dialog [62]. Therefore,
we recommend adding an indicator that the rationale is pro-
vided by the app developer. This could be a short message
proceeding the rationale. For example: “{App name} says:
{Rationale message of the app developer}.” However, this
solution is only applicable when the rationale is standardized
by the operating system, as in iOS. Whereas in Android, cur-
rently only the app developer is able to highlight the origin of
the rationale (e.g., through custom themes and wording).
Generalizability of our ﬁndings. When interacting with
modern technology, users are often confronted with security
and privacy-relevant decisions. Such decisions must be in-
formed while being consistent with users’ individual values
and preferences. To offer users more transparency, previous
research focused on providing comprehensive privacy poli-
cies (e.g., in the form of “privacy nutrition facts” [63]) and
effective browser security warning messages [60, 64, 65].
Consistent with these ﬁndings and in the context of per-
mission requests, we found that users made better-informed
decisions and were more satisﬁed with their decisions when
they were provided transparency, in the form of rationales and
to a lesser extent by requesting permissions in the appropriate
context (timing). Thereby, our results are also consistent with
previous work on other channels in the mobile domain (e.g.,
provide security-related behavior in app descriptions [19],
explain permission usage based on code [16], and aid users
in the app-selection process [66–68]), all of which emphasize
the crucial importance of transparency for users’ decision
making process. Not least, these research results might also
be a reason for the recently increasing efforts of the two ma-
jor mobile operating systems towards transparency of privacy
and security of apps, e.g., by introducing “privacy labels” in
iOS or an upcoming safety section in Google Play [69].
In line with these efforts to aid users in their decisions,
we recommend that rationales should always be provided by
developers. However, future research is needed to optimize
how frequently they are displayed to the user, e.g., leverag-
ing machine learning to learn individual preferences [29, 30].
For example, depending on users’ individual preferences, a
user who always denies a certain permission or always denies
permission for certain app types may not need additional ra-
tionales in these situations. We believe that our ﬁndings on
rationales are also applicable to other security and privacy
critical decisions. While how rationales should look like is
system dependent, they all need to strike a balance between
adequately informing and overwhelming users. Since our re-
sults show that just the presence of rationales is beneﬁcial,
future work could study the magnitude of this effect depend-
ing on different rationale designs and contents.
8 Threats to Validity
As with any empirical study, there are aspects of our study
design that might limit the generalizability of results. First,
our data was collected in a highly standardized, somewhat arti-
ﬁcial situation. Therefore, it might be fair to question whether
our results fully reﬂect the behavior of users on real apps.
However, only such experimental research methods that pro-
vide conscious control of all aspects of a situation (high in-
ternal validity), allow the direct inference of causal relation-
ships [39]. To address potential negative effects of this design
decision, we followed best practice recommendations for this
kind of experimental studies [70]. For example, our partici-
pants were given a consistent storyline and clear goals they
should reach with their apps as well as interactive mockup
apps. These measures ensure a high level of immersion for
participants, which, as prior work has shown, leads to the
highest possible generalizability of the study results [70–72].
Second, our research topic – permission requests – was ob-
vious to our participants at several points in our study, which
may have primed their behavior in a certain way. For example,
USENIX Association
30th USENIX Security Symposium    797
we asked participants about a permission prior app interaction
(making them aware that the app will request this permission).
This was necessary, as some variables (i.e., permission sen-
sitivity/predictability/clarity) could only be accurately mea-
sured before users interacted with the app. However, from the
users’ perspective this is very similar to checking permissions
in the app store before installing the app. Another priming
could have resulted from the fact that each participant went
through the main part of the study for several apps. We miti-
gated potential carryover- and order-effects arising from this
within-study design by randomizing the order of the permis-
sion request types (upfront/in-context, with/without rationale)
and checking that the order did not affect our results.
9 Conclusion
In this work, we showed that timing of permission requests
and presence/absence of rationales have an effect on users’
permission decisions and the evaluation of their decisions. We
found that the effect of timing and rationales depend on one an-
other and should not be evaluated on their own. Based on the
results, we suggest that the current Google guidelines should
be reﬁned to better aid users in their decision-making process.
Further, we highlight that permission decisions mainly depend
on the individuality of users, suggesting that there is no one-
ﬁts-all permission request strategy. As a conclusion, current
mobile platforms could beneﬁt from a customized solution on
a per-user basis, in which users can deﬁne when permissions
should be requested and whether rationales should be given.
Acknowledgment
We thank Kassem Fawaz and the anonymous reviewers for
their insightful comments and suggestions.
References
[1] A. Porter Felt, S. Egelman, M. Finifter, D. Akhawe, and D. A. Wagner,
“How to ask for permission,” in Proc. 7th USENIX Workshop on Hot
Topics in Security (HotSec’12), 2012.
[2] Material Design, “Android permissions,” https://material.io/design/
platform-guidance/android-permissions.html, accessed: 2021-05-26.
[3] B. Bonné, S. T. Peddinti, I. Bilogrevic, and N. Taft, “Exploring decision
making with Android’s runtime permission dialogs using in-context
surveys,” in Proc. 13th Symposium on Usable Privacy and Security
(SOUPS’17), 2017.
[4] P. Wijesekera, A. Baokar, A. Hosseini, S. Egelman, D. A. Wagner,
and K. Beznosov, “Android permissions remystiﬁed: A ﬁeld study
on contextual integrity,” in Proc. 24th USENIX Security Symposium
(SEC’15), 2015.
[5] B. Liu, M. S. Andersen, F. Schaub, H. Almuhimedi, S. Zhang, N. M.
Sadeh, Y. Agarwal, and A. Acquisti, “Follow my recommendations:
A personalized privacy assistant for mobile app permissions,” in Proc.
12th Symposium on Usable Privacy and Security (SOUPS’16), 2016.
[6] J. Lin, B. Liu, N. M. Sadeh, and J. I. Hong, “Modeling users’ mobile
app privacy preferences: Restoring usability in a sea of permission
settings,” in Proc. 10th Symposium on Usable Privacy and Security
(SOUPS’14), 2014.
[7] J. Lin, N. M. Sadeh, S. Amini, J. Lindqvist, J. I. Hong, and J. Zhang,
“Expectation and purpose: Understanding users’ mental models of
mobile app privacy through crowdsourcing,” in ACM Conference on
Ubiquitous Computing, (Ubicomp’12), 2012.
[8] I. Shklovski, S. D. Mainwaring, H. H. Skúladóttir, and H. Borgthors-
son, “Leakiness and creepiness in app space: Perceptions of privacy
and mobile app use,” in Conference on Human Factors in Computing
Systems (CHI’14), 2014.
[9] B. Zhang and H. Xu, “Privacy nudges for mobile applications: Ef-
fects on the creepiness emotion and privacy attitudes,” in Proc. 19th
ACM Conference on Computer-Supported Cooperative Work & Social
Computing (CSCW’16), 2016.
[10] J. Tan, K. Nguyen, M. Theodorides, H. Negrón-Arroyo, C. Thompson,
S. Egelman, and D. A. Wagner, “The effect of developer-speciﬁed
explanations for permission requests on smartphone user behavior,” in
Conference on Human Factors in Computing Systems (CHI’14), 2014.
[11] X. Liu, Y. Leng, W. Yang, W. Wang, C. Zhai, and T. Xie, “A large-scale
empirical study on Android runtime-permission rationale messages,” in
IEEE Symposium on Visual Languages and Human-Centric Computing
(VL/HCC), 2018.
[12] I. Gasparis, A. Aqil, Z. Qian, C. Song, S. V. Krishnamurthy, R. Gupta,
and E. Colbert, “Droid M+: Developer support for imbibing Android’s
new permission model,” in Asia Conference on Computer and Commu-
nications Security (AsiaCCS’18), 2018.
[13] P. G. Kelley, S. Consolvo, L. F. Cranor, J. Jung, N. M. Sadeh, and
D. Wetherall, “A conundrum of permissions: Installing applications
on an android smartphone,” in Proc. 16th International Conference on
Financial Cryptography and Data Security (FC’12), 2012.
[14] A. Porter Felt, E. Ha, S. Egelman, A. Haney, E. Chin, and D. A. Wagner,
“Android permissions: user attention, comprehension, and behavior,” in
8th Symposium on Usable Privacy and Security (SOUPS’12), 2012.
[15] A. Porter Felt, S. Egelman, and D. A. Wagner, “I’ve got 99 problems,
but vibration ain’t one: a survey of smartphone users’ concerns,” in
Proc. Workshop on Security and Privacy in Smartphones and Mobile
Devices (SPSM’12), 2012.
[16] Z. Qu, V. Rastogi, X. Zhang, Y. Chen, T. Zhu, and Z. Chen, “Autocog:
Measuring the description-to-permission ﬁdelity in Android applica-
tions,” in Proc. 21st ACM Conference on Computer and Communica-
tions Security (SIGSAC’14), 2014.
[17] H. Gao, C. Guo, Y. Wu, N. Dong, X. Hou, S. Xu, and J. Xu, “Autoper:
Automatic recommender for runtime-permission in Android applica-
tions,” in Proc. 43rd IEEE Annual Computer Software and Applications
Conference (COMPSAC’19), 2019.
[18] X. Pan, Y. Cao, X. Du, B. He, G. Fang, R. Shao, and Y. Chen, “Flowcog:
Context-aware semantics extraction and analysis of information ﬂow
leaks in Android apps,” in Proc. 27th USENIX Security Symposium,
(SEC’18), 2018.
[19] M. Zhang, Y. Duan, Q. Feng, and H. Yin, “Towards automatic gen-
eration of security-centric descriptions for Android apps,” in Proc.
22nd ACM Conference on Computer and Communications Security
(SIGSAC’15), 2015.
[20] H. Wang, J. I. Hong, and Y. Guo, “Using text mining to infer the purpose
of permission use in mobile apps,” in International Joint Conference
on Pervasive and Ubiquitous Computing (UbiComp’15), 2015.
[21] R. Pandita, X. Xiao, W. Yang, W. Enck, and T. Xie, “WHYPER: To-
wards automating risk assessment of mobile applications,” in Proc.
22th USENIX Security Symposium (SEC’13), 2013.
[22] Y. Feng, L. Chen, A. Zheng, C. Gao, and Z. Zheng, “Ac-net: Assessing
the consistency of description and permission in Android apps,” IEEE
Access, vol. 7, pp. 57 829–57 842, 2019.
798    30th USENIX Security Symposium
USENIX Association
[23] E. Pan, J. Ren, M. Lindorfer, C. Wilson, and D. R. Choffnes, “Panop-
tispy: Characterizing audio and video exﬁltration from android applica-
tions,” Proc. Priv. Enhancing Technol., vol. 2018, pp. 33–50, 2018.
[43] M. Keith, L. Tay, and P. Harms, “Systems perspective of Amazon
Mechanical Turk for organizational research: Review and recommen-
dations,” Frontiers in Psychology, vol. 8, p. 1359, 2017.
[24] R. Stevens, J. Ganz, V. Filkov, P. T. Devanbu, and H. Chen, “Asking for
(and about) permissions used by android apps,” in Proc. 10th Working
Conference on Mining Software Repositories (MSR’13), 2013.
[25] X. Liu, Y. Leng, W. Yang, C. Zhai, and T. Xie, “Mining Android app
descriptions for permission requirements recommendation,” in 26th
IEEE International Requirements Engineering Conference (RE), 2018.
[26] D. Bogdanas, “Dperm: Assisting the migration of Android
apps to runtime permissions,” CoRR, 2017. [Online]. Available:
http://arxiv.org/abs/1706.05042
[27] S. T. Peddinti, I. Bilogrevic, N. Taft, M. Pelikan, Ú. Erlingsson, P. An-
thonysamy, and G. Hogben, “Reducing permission requests in mobile
apps,” in Proc. Internet Measurement Conference (IMC’19), 2019.
[28] B. Liu, J. Lin, and N. M. Sadeh, “Reconciling mobile app privacy and
usability on smartphones: Could user privacy proﬁles help?” in Proc.
23rd International World Wide Web Conference (WWW’14), 2014.
[29] P. Wijesekera, A. Baokar, L. Tsai, J. Reardon, S. Egelman, D. A. Wag-
ner, and K. Beznosov, “The feasibility of dynamically granted permis-
sions: Aligning mobile privacy with user preferences,” in Proc. 28th
IEEE Symposium on Security and Privacy (SP’17), 2017.
[30] K. Olejnik, I. Dacosta, J. S. Machado, K. Huguenin, M. E. Khan,
and J. Hubaux, “Smarper: Context-Aware and automatic runtime-
permissions for mobile devices,” in Proc. 28th IEEE Symposium on
Security and Privacy (SP’17), 2017.
[31] H. Almuhimedi, F. Schaub, N. M. Sadeh, I. Adjerid, A. Acquisti,
J. Gluck, L. F. Cranor, and Y. Agarwal, “Your location has been shared
5, 398 times!: A ﬁeld study on mobile app privacy nudging,” in 33rd
Conference on Human Factors in Computing Systems (CHI’15), 2015.
[32] L. Tsai, P. Wijesekera, J. Reardon, I. Reyes, S. Egelman, D. A. Wagner,
N. Good, and J. Chen, “Turtle guard: Helping Android users apply
contextual privacy preferences,” in 13th Symposium on Usable Privacy
and Security (SOUPS’17), 2017.
[33] E. Cunningham, “Improving app security and performance on
Google Play,” https://android-developers.googleblog.com/2017/12/
improving-app-security-and-performance.html, accessed: 2021-05-26.
[34] Y. Li, Z. Yang, Y. Guo, and X. Chen, “Droidbot: A lightweight ui-
guided test input generator for Android,” in Proc. 39th International
Conference on Software Engineering (ICSE’17), 2017.
[35] R. Mihalcea, C. Corley, and C. Strapparava, “Corpus-based and
knowledge-based measures of text semantic similarity,” in Proc. 21st
National Conference on Artiﬁcial Intelligence (AAAI’06), 2006.
[36] K. K. Micinski, D. Votipka, R. Stevens, N. Koﬁnas, M. L. Mazurek,
and J. S. Foster, “User interactions and permission use on android,” in
Conference on Human Factors in Computing Systems (CHI’17), 2017.
[37] P. F. Stalmeier, M. S. Roosmalen, L. C. Verhoef, J. E. Hoekstra-
Weebers, J. C. Oosterwijk, U. Moog, N. Hoogerbrugge, and W. A.
van Daal, “The decision evaluation scales,” Patient Education and
Counseling, vol. 57, pp. 286–293, 2005.
[38] A. Bahattacherjee, Social science research: Principles, methods and
practices (2nd ed.). Global text project, 2012.
[39] P. E. Spector, Research Designs. SAGE Publications, 1981.
[40] M. Birnbaum, “How to show that 9 > 221: Collect judgments in a
between-subjects design,” Psychological Methods, vol. 4, pp. 243–249,
1999.
[41] J. J. Hox, Multilevel Analysis: Techniques and Applications (2nd ed.).
Routledge/Taylor & Francis Group, 2010.
[42] L. Litman, J. Robinson, and T. Abberbock, “Turkprime.com: A versatile
crowdsourcing data acquisition platform for the behavioral sciences,”
Behavior Research Methods, vol. 49, pp. 433–442, 2017.
[44] J. Robinson, C. Rosenzweig, A. J. Moss, and L. Litman, “Tapped
out or barely tapped? Recommendations for how to harness the vast
and largely unused potential of the Mechanical Turk participant pool,”
PLOS ONE, vol. 14, pp. 1–29, 2019.
[45] F. Faul, E. Erdfelder, A. Buchner, and A.-G. Lang, “Statistical power
analyses using g*power 3.1: Tests for correlation and regression analy-
ses,” Behavior research methods, vol. 41, pp. 1149–60, 2009.
[46] T. Dinev, H. Xu, H. J. Smith, and P. J. Hart, “Information privacy and
correlates: An empirical attempt to bridge and distinguish privacy-
related concepts,” European Journal of Information Systems, vol. 22,
pp. 295–316, 2013.
[47] N. K. Malhotra, S. S. Kim, and J. Agarwal, “Internet users’ information
privacy concerns (IUIPC): The construct, the scale, and a causal model,”
Information Systems Research, vol. 15, pp. 336–355, 2004.
[48] H. J. Smith, S. J. Milberg, and S. J. Burke, “Information privacy: Mea-
suring individuals’ concerns about organizational practices,” MIS Quar-
terly, vol. 20, pp. 167–196, 1996.
Developer Guide,
[49] Android
permissions,”
https://developer.android.com/training/permissions/requesting,
accessed: 2021-05-26.
“Request
app
[50] Apple Developer Guide, “Requesting
permissions,”
//developer.apple.com/design/human-interface-guidelines/ios/
app-architecture/requesting-permission/, accessed: 2021-05-26.
https: