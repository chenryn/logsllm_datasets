database
checkpoint
(controlled
cache
consistency algorithm are dependent on several parameters
related to recovery mechanisms, such as the redo log file
size, the number of redo log groups, and the checkpoint
timeout
log_checkpoint_timeout
parameter). The actual trigger of a checkpoint and the
cache activity profile are also intimately related to the
transaction activity (dependent,
in turn, on the user
applications), which is responsible for the difficulties in
forecasting the impact of
recovery configurations on
performance (that is why we need benchmarking).
by
the
In order to assess the impact of different checkpointing
policies on performance and recovery, we have defined a
set of different recovery configurations and we have
injected the faultload (faults represented by the Shutdown
Abort type) to measure the recovery time. Table 3 shows
the set of configurations and Figure 4 shows the results.
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:16:58 UTC from IEEE Xplore.  Restrictions apply. 
Results show a clear impact of the different recovery
configurations on database performance. However, we
have observed a clear impact on the performance only for
configurations having high checkpointing rates. As
expected, the recovery time for these configurations is the
lowest. An important conclusion from Figure 4 is that we
can increase the checkpoint rate, reducing the recovery
time, without causing a severe impact on performance.
# CKPT per
Experiment
Checkpoint
Config. File Size Redo Log
Groups
F400G3T20 400 MB
F400G3T10 400 MB
400 MB
F400G3T5
F400G3T1
400 MB
F100G3T20 100 MB
F100G3T10 100 MB
100 MB
F100G3T5
100 MB
F100G3T1
40 MB
F40G3T10
F40G3T5
40 MB
40 MB
F40G3T1
10 MB
F10G3T5
10 MB
F10G3T1
1 MB
F1G6T1
F1G3T1
1 MB
1 MB
F1G2T1
1
1
1
1
5
5
5
4
13
12
14
54
55
319
380
263
Table 3. Set of recovery configurations used.
Timeout
1200 sec.
600 sec.
300 sec.
60 sec.
1200 sec.
600 sec.
300 sec.
60 sec.
600 sec.
300 sec.
60 sec.
300 sec.
60 sec.
60 sec.
60 sec.
60 sec.
3
3
3
3
3
3
3
3
3
3
3
3
3
6
3
2
The configurations F400G3T1 and F100G3T1, in spite
of having a low checkpointing frequency, have a very
short recovery time. This is due to the short checkpoint
timeout (60 seconds) that reduces the amount of data to be
recovered due to the frequent writes of dirty cache data
blocks into database files.
)
s
d
n
o
c
e
S
(
i
e
m
T
y
r
e
v
o
c
e
R
80
70
60
50
40
30
20
10
0
Recovery Time
Performance
0
2
T
3
G
0
0
4
F
0
1
T
3
G
0
0
4
F
5
T
3
G
0
0
4
F
1
T
3
G
0
0
4
F
0
2
T
3
G
0
0
1
F
0
1
T
3
G
0
0
1
F
5
T
3
G
0
0
1
F
1
T
3
G
0
0
1
F
0
1
T
3
G
0
4
F
5
T
3
G
0
4
F
1
T
3
G
0
4
F
5
T
3
G
0
1
F
1
T
3
G
0
1
F
1
T
6
G
1
F
1
T
3
G
1
F
1
T
2
G
1
F
)
C
m
p
t
(
e
c
n
a
m
r
o
f
r
e
P
3500
3000
2500
2000
1500
1000
500
0
Figure 4. Performance vs recovery time.
One very important conclusion is that all the faults
represented by the Shutdown Abort have not caused data
integrity violations or loss of committed transactions.
Only the transactions under execution when the fault is
injected have to be rolled back, but in this case the end-
user is notified that the transaction has been aborted.
5.2. Results with Archive Logs
The activation of
is extremely
important because the system can recover from most of
the operator faults, as the archive logs store all the redo
the archive logs
recoverability. These
sequence. In this second set of experiments we activated
the archive logs to evaluate their impact on performance
the
and
configurations G40G3T10
other
configurations are not relevant because the large size of
the online redo log files would require a longer
experiment
the log entries archiving)
presented in Table 3 and include the injection of all types
of operator faults presented in section 4.
experiments
to F1G2T1
time to start
used
(the
The results presented on Figure 5 show a moderate
impact on database performance, which suggests that the
archive log option must always be activated.
3000
2500
2000
1500
1000
500
0
)
C
m
p
t
(
e
c
n
a
m
r
o
f
r
e
P
Without Archive Logs
With Archive Logs
0
1
T
3
G
0
4
F
5
T
3
G
0
4
F
1
T
3
G
0
4
F
5
T
3
G
0
1
F
1
T
3
G
0
1
F
1
T
6
G
1
F
1
T
3
G
1
F
1
T
2
G
1
F
Another
interesting aspect
Figure 5. Performance with and without archive logs.
is to observe how the
recovery time depends on the type of fault and database
recovery configurations. The Oracle database has two
types of recovery:
incomplete and complete recovery
(respectively with and without loss of committed transac-
tions). The different types of operator faults are associated
to one of these types of recovery. Table 4 presents the
recovery times observed for the operator faults that caused
incomplete recovery and Table 5 presents the recovery
times for the faults that caused complete recovery.
Fault Configuration
Recovery time (seconds)
Injection
150 Sec
Injection
300 Sec
Injection
600 Sec
t
c
e
j
b
o
s
’
r
e
s
u
e
t
e
l
e
D
e
c
a
p
s
e
l
b
a
t
e
t
e
l
e
D
F40G3T10
F40G3T5
F40G3T1
F10G3T5
F10G3T1
F1G6T1
F1G3T1
F1G2T1
F40G3T10
F40G3T5
F40G3T1
F10G3T5
F10G3T1
F1G6T1
F1G3T1
F1G2T1
264
235
235
265
260
340
301
300
277
277
282
278
282
353
356
249
284
256
293
277
316
474
384
343
304
309
291
287
315
462
472
423
339
335
342
372
380
>600
>600
>600
357
360
365
382
364
>600
>600
>600
Results
show that different
Table 4.Recovery time for faults with incomplete recov.
configurations have
different recovery times. Once again, the recovery time
depends on the checkpoint frequency, but only for the
faults that do not use the archive log files (shutdown
abort, set tablespace offline, and set datafile offline).