way that it resembles the signal of the ECU to be faked.
Inﬂuencing the signal directly, i.e. the shape of the rising
edges, is not possible by remote, since these are deﬁned by
the structure of the present CAN and the electrical components
of the ECU. However, we enable the attacker to manipulate
the voltage level by draining the battery and heating up or
3
Fig. 1: Sampling points of the rising edges of a frame.
cooling down the compromised ECU. While discharging the
battery leads to a decrease in the voltage level of all ECUs,
the change in temperature of the compromised ECU causes
the corresponding voltage level to rise or fall. In addition, we
allow the attacker to analyze the voltage level of all ECUs
connected to the bus. This is a very strong capability, for which
it would be necessary, for instance, to have the analog-digital-
converter (ADC) of an ECU directly connected to the bus.
Usually, ECUs are only connected to the bus over the CAN
transceiver, which does not provide any information about
the signal characteristics. Although the attacker could analyze
the characteristics, our measurements have shown that
the
actual measuring position has a large inﬂuence on the received
characteristics. This makes it considerably more difﬁcult for
an attacker to make statements about
the signals actually
recorded by EASI. However, for our evaluation we neglect
this circumstance, which means that we allow the attacker to
receive the same information as our IDS.
B. Phase 1: Signal Gathering
The ﬁrst step is to record the differential signal of the
actual CAN frame. Since the amount of data to be processed
per frame has a large inﬂuence on the required computing
is to reduce the required amount of
power, a major goal
sampling points. Thus,
the system only considers the bits
which contain the most important characteristics with regard to
sender identiﬁcation. This applies to those bits which contain
a rising edge, i.e. dominant bits which are preceded by a
recessive bit [34]. A further reduction is achieved by not
recording the entire frame or all corresponding bits, but only
a single rising edge. This is not considered to be a major
disadvantage, as we observed that the relevant characteristics
only change very slightly within one frame, as illustrated in
Figure 1. Smaller deviations within a frame are due to noise
and are not particularly relevant for the identiﬁcation.
In order to obtain extensive characteristics from a CAN
signal, a certain number of samples per bit
is necessary,
as otherwise too much information is lost. For illustration,
Figure 2 shows the signal curve of a single symbol with
different sampling rates. Proposed ﬁngerprinting approaches
use rates between 20 MS/s [34] and 2.5 GS/s [11], whereby
identiﬁcation rates up to 99.85 % [34] are achieved.
However, existing MCU architectures, such as the Inﬁneon
TriCore [30], NXP MPC [49] or STM32 [59], are often only
equipped with ADCs with lower sampling rates. Therefore,
an additional ADC is necessary even for a scanning with
relatively low rates of 20 MS/s, which leads to increased costs.
For instance, a reduction of the sampling rate by a factor of 10
Fig. 2: Rising edge recorded with different sampling rates.
is necessary to implement sender identiﬁcation on a standard
MCU providing 2 MS/s. This is achieved by not recording
the edge with a high sampling rate, but several rising edges
with a lower sampling rate. The sampling times are shifted
accordingly so that a representing bit can be composed of
the measurements after the sampling phase. This procedure
is called Random Interleaved Sampling (RIS) [50] and is a
common technique of Digital Storage Oscilloscopes (DSOs) to
achieve high sampling rates for repetitive signals. For example,
an absolute sampling rate of 20 MS/s with an actual rate
of 2 MS/s can be achieved by using 10 rising edges. The
procedure is illustrated in Figure 1, in which the sampling
points of 10 rising edges are marked. Figure 3 shows the
resulting rising edge, a complete edge and an average edge
calculated from all 10 rising edges. As seen in the ﬁgure,
the different recordings do not show much difference or are
comparable to the differences that also occur between signals
from the same ECU.
Fig. 3: Rising edge recorded in different modes.
4
 0.5 1 1.5 0 20 40 60 80 100 120 140 160 180 200Voltage (V)SamplesRising EdgesSample Points 0.5 1 1.5 10 20 30 40 50Voltage (V)Sample (50 MS/s) 0.5 1 1.5 4 8 12 16 20Sample (20 MS/s) 0.5 1 1.5 2 4 6 8 10Voltage (V)Sample (10 MS/s) 0.5 1 1.5 1 2 3 4 5Sample (5 MS/s) 0.5 1 1.5 0 5 10 15 20Voltage (V)SamplesCompositeSingleAverageTABLE I: Features extracted from the rising edge for classiﬁcation while x contains the measured voltages, N is the cardinality
of x, ym and yf are the magnitude coefﬁcients and frequencies, respectively, and M is the number of elements of ym and yf .
Rank
Feature
1
2
3
4
5
6
7
8
9
10
11
12
Ratio Max Plateau
Skewness
Plateau
Kurtosis
Overshoot height
Irregularity
Centroid
Flatness
Mean
Variance
Power
Maximum
(cid:1)3
(cid:1)4
i=1
σ
M aximum − P lateau
(ym(j)−ym(j+1))2
j=1
N
4
1
N
1
N
i=1
σ
P lateau
i= 3
4 N x(i)
Description
M aximum
(cid:0) x(i)−µ
(cid:0) x(i)−µ
(cid:80)N
(cid:80)N
(cid:80)N
(cid:80)M−1
(cid:80)M−1
(cid:80)M
(cid:80)M
(cid:113)(cid:81)M
(cid:80)M
(cid:80)N
(cid:80)N
(cid:80)N
j=1 ym(j) ∗
µ = 1
N
ym(j)2
ym(j)
j=1
j=1
yf (j)∗ym(j)
j=1
σ2 = 1
N
1
N
i=1 (x(i) − µ)2
i=1 x(i)2
max(x(i))i=1...N
(cid:80)M
M
ym(k)
k=1
ym(k)
k=1
i=1 x(i)
C. Phase 2: Characteristic Derivation
After the signal is recorded and a representing edge is
calculated, the system extracts various features from it. If
no representative bit is used, a single or average edge can
of course also be used at this point. Appropriate statistical
features from time and frequency domain have already been
investigated in previous work [11], [4], [34]. New in this case
is that additionally signal descriptive features were examined.
In this category those characteristics were categorized that
contain speciﬁc knowledge about the signal course of rising
edges. Especially the course of the stabilization is essential
for the distinction of the signals. From all candidates, the 12
most important features were selected. For this purpose, the
Information Gain (IG) algorithm from the Weka 3 Toolkit [56]
was used. IG is a method for calculating how much information
a feature provides about the class, which also allows to rank
the considered features. In order to prevent features being
selected which only ﬁt the current situation or a speciﬁc setup,
three different setups were considered. From the validation set
of a prototype and two series production vehicles a common
feature set was derived, which is shown in Table I. The feature
vector extracted represents the ﬁngerprint of the signal and the
associated ECU.
D. Phase 3: Sender Identiﬁcation
Identifying a sender on the basis of a feature vector, i.e. the
actual ﬁngerprint, is a classiﬁcation problem. For these kind of
problems a variety of algorithms exist, which are able to deter-
mine to which class a new observation belongs. In the selection
of suitable algorithms with regard to the ﬁeld of the application
presented here, the data properties must be considered. The
frames from which the ﬁngerprints are extracted, and which are
also used to create the model, are transmitted periodically and
Type
IG Prototype
IG Fiat
IG Porsche
IG General
Descriptive
Time
Descriptive
Time
Descriptive
Frequency
Frequency
Frequency
Time
Time
Time
Descriptive
3.3
3.1
3.1
3.1
2.9
3.3
3.2
3.1
3.2
2.6
3.1
3
2.6
2.4
2.3
2.5
2.5
1.9
1.8
2
1.7
2.3
1.5
1.9
2.6
2.8
2.7
2.5
2.6
2.6
2.7
2.5
2.6
2.6
2.7
2.3
8.5
8.3
8.1
8.1
8
7.8
7.7
7.6
7.5
7.5
7.3
7.2
are therefore available incrementally. Keeping the resource-
limited hardware in mind, this results in the necessity for a
fast calculation, Classiﬁcation Speed, as otherwise too many
ﬁngerprints have to be buffered. To achieve a low Memory
Footprint, it is also necessary to select an algorithm which
allows to establish the model from an incremental stream of
training examples. Thus, and as changes in the characteristics
are expected to happen,
is another
important criteria. A further point is the Overall Complexity
of the algorithm, which also includes the number of freely
selectable parameters. The assessment of the criteria regard-
ing the considered machine learning algorithms is shown in
Table II. Based on these estimations, the focus is primarily set
on Logistic Regression (LR) since the algorithm has already
proven to be suitable for sender identiﬁcation [34] and Naive
Bayes (NB), due to its low complexity. Further, we consider
Support Vector Machines (SVMs) in the evaluation as it allows
a non-linear separation using the radial basis function kernel.
the Model Adjustment
TABLE II: Assessment of the machine learning algorithms.
Classiﬁcation
Speed
LR
Naive Bayes
SVM
Decision Tree
Neural Network
+
◦
◦
+
-
Memory
Footprint
◦
+
-
-
◦
Model
Adjustment
+
+
◦
-
-
Overall
Complexity
◦
+
◦
+
-
Before it is possible to estimate the sender of transmit-
ted frames based on their ﬁngerprints during the operation
of the IDS, the according relationship between ECUs and
characteristics has to be learned supervised. Therefore, the
5
system generates multiple ﬁngerprints from several transmitted
frames for each ECU, whereby the mapping between the
frames and the ECUs is done using the included identiﬁer.
This is possible as each identiﬁer is only used by one ECU
and the communication is static. Thereby, it is particularly
important to prevent an attacker from inﬂuencing the training
data, known as poisoning attacks [27], [33]. When the system
is initially trained, where also a key for later model adjustments
is exchanged between the IDS and each ECU, it must be
ensured that no bus manipulations are present. This can be
done, for example, in an authorized workshop or, for new
vehicles, during the production. After the training, the system
calculates the average probabilities avgP k
init of each classiﬁer
k using a validation set, a separate data set for the unbiased
evaluation of the generated model.
E. Phase 4: Intrusion Decision
For the analysis of the probabilities of the ﬁngerprints and
thus for the recognition of attacks, we use dynamic thresholds,
a development of the approach introduced in [34]. In the
following we will discuss these detection methods for the
attacks described in Section III-A.
max = α ∗ avgP k
1) Compromised ECU: Normally, the ECU with the high-
est probability would be selected as the source of the received
frame. If this ECU would not be allowed to use the present
identiﬁer, an attack would be assumed. However, we use an
init for each classiﬁer k.
upper threshold tk
max and this
Only if the probability of an ECU exceeds tk
device is not allowed to use the present identiﬁer, the message