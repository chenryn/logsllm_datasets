    kefka@adm:/tmp$ 
我们需要一个root shell！我尝试将其用作root密码，但是没有用。尝试了其他一些事情，试图找到其他特权升级点，但是没有运气。
过了一会儿，我决定考虑我们接受输入的其他内容。我决定在先前攻击的应用程序中传递字符串`/opt/wep2.py`。
进去之后就是一个python客户端
![](../../.gitbook/assets/1571473865_5daac9c92a845.png)
wep2.py
    cat wep2.py
    #!/usr/bin/env python
    import socket, thread, random, subprocess, os
    from Crypto.Cipher import AES
    from encodings import hex_codec
    iv_size = 6
    key = os.urandom(16)
    def reset_key(sock):
    	key = os.urandom(16)
    def gen_iv():
    	iv_nibbles = os.urandom(iv_size).encode("hex")[0:iv_size]
    	iv_total = iv_nibbles+"1"*(32-len(iv_nibbles))
    	return iv_total.decode("hex")
    def encrypt(iv, data):
    	pad_bytes = 16-(len(data) % 16)
    	if pad_bytes  0:
    		data = data + "X"*pad_bytes
    	aes = AES.new(key, AES.MODE_OFB, iv)
    	ciphertext = aes.encrypt(data)
    	if pad_bytes  ")
    				cmd2 = sock.recv(256)
    				p = subprocess.Popen(['/usr/bin/python', '-c', cmd2], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
    				p1 = p.communicate()[0]
    				sock.send(p1)
    			done
    			cmd = f.readline()
    			continue
    		else:
    			sock.send("Invalid Command\n")
    			break
    	f.close()
    	sock.close()
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,1)
    s.bind(("127.0.0.1", 1234))
    s.listen(1)
    sock, addr = s.accept()
    handler(sock, addr)
  找到了flag，不过字符串倒转了
![](../../.gitbook/assets/1571473974_5daaca36ab465.png)
最后flag
![](../../.gitbook/assets/1571474008_5daaca5880dfd.png)