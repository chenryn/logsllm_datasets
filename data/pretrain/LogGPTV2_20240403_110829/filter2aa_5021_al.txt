התעבורה וניתוחה.
לכן, הצעד המתבקש
הבא הוא לפתוח Sniffer כדוגמת WireShark, לבצע את הבקשה
לאתר ולעבור על התעבורה שמתקבלת.
&nbsp;
כך זה נראה:
את החלק הראשון (DNS) אפשר לפסול (למשל
כי הוא לא קשור לבקשה הספציפית ל-URI הזה, והוא בכלל לא מתקבל מהשרת). מה שנשאר לבדוק הוא את התעבורה
החל מלחיצת היד ברמת ה-TCP עם השרת
ועד לסיום התקשורת. 
ישנן מספר שכבות
לבדוק:
1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
שכבת
IP
2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
שכבת
TCP
3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
שכבת
TLS (החל משלב מסוים
התעבורה בשכבה זו מוצפנת)
מכיוון שזהו האתגר
היחיד שמכיל שכבת TLS, זה נראה
כמו המקום ההגיוני להתחיל ממנו.
אפשר לבחון את פרטי ההתקשרות
באמצעות שימוש cURL במצב Verbose:
```bash
root@kali:/media/sf_CTFs/owasp_il/flags# curl -v -k https://challenges.owaspil.ctf.today:8443/flags/NetherlandsAntilles-flags-cat
*   Trying 52.47.109.181...
* TCP_NODELAY set
* Connected to challenges.owaspil.ctf.today (52.47.109.181) port 8443 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: none
  CApath: /etc/ssl/certs
* TLSv1.2 (OUT), TLS handshake, Client hello (1):
* TLSv1.2 (IN), TLS handshake, Server hello (2):
* TLSv1.2 (IN), TLS handshake, Certificate (11):
* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
* TLSv1.2 (IN), TLS handshake, Server finished (14):
* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
* TLSv1.2 (OUT), TLS change cipher, Client hello (1):
* TLSv1.2 (OUT), TLS handshake, Finished (20):
* TLSv1.2 (IN), TLS handshake, Finished (20):
* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256
* ALPN, server accepted to use h2
* Server certificate:
*  subject: C=AU; ST=Some-State; O=Internet Widgits Pty Ltd
*  start date: May 28 10:02:02 2018 GMT
*  expire date: May 28 10:02:02 2019 GMT
*  issuer: C=AU; ST=Some-State; O=Internet Widgits Pty Ltd
*  SSL certificate verify result: self signed certificate (18), continuing anyway.
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
* Using Stream ID: 1 (easy handle 0x562a5c7dea50)
> GET /flags/NetherlandsAntilles-flags-cat HTTP/2
> Host: challenges.owaspil.ctf.today:8443
> User-Agent: curl/7.61.0
> Accept: */*
>
* Connection state changed (MAX_CONCURRENT_STREAMS == 100)!
&nbsp;
שום דבר חריג לא
מופיע פה. 
ה-Certificate שנשלח מהשרת הוא
מקום הגיוני להחביא בו מידע, לכן שמרתי אותו ועברתי עליו:
```bash
root@kali:/media/sf_CTFs/owasp_il/flags# openssl x509 -in 1.cer -inform der -text -noout
Certificate:
    Data:
        Version: 1 (0x0)
        Serial Number:
            9c:59:56:dd:cb:cd:d0:ca
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: C = AU, ST = Some-State, O = Internet Widgits Pty Ltd
        Validity
            Not Before: May 28 10:02:02 2018 GMT
            Not After : May 28 10:02:02 2019 GMT
        Subject: C = AU, ST = Some-State, O = Internet Widgits Pty Ltd
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (1024 bit)
                Modulus:
                    00:d5:ce:81:bf:fe:9d:77:c2:be:2c:3e:c8:cc:ec:
                    16:ce:cb:d3:31:8b:25:77:60:e1:e0:a0:0e:d5:c8:
                    e7:f2:a4:db:90:07:76:5a:cf:e6:79:4a:0e:02:3e:
                    d9:43:d0:77:04:ad:b3:0b:32:47:87:6c:1c:80:bb:
                    29:92:9f:2d:36:96:b6:ca:95:3b:9e:7e:9f:19:31:
                    c0:cd:3b:b4:e5:45:b8:29:d4:9a:41:bf:be:5f:1e:
                    cf:b3:e7:84:9e:9c:06:7c:5d:0b:39:65:5f:4e:83:
                    97:a6:fc:d4:52:d6:c4:5d:e4:45:c7:49:65:21:03:
                    8e:30:16:71:c6:63:22:f9:81
                Exponent: 65537 (0x10001)
    Signature Algorithm: sha256WithRSAEncryption
         60:ca:89:43:2b:9c:2c:44:dc:c1:1c:64:8c:1b:3d:87:91:95:
         17:e1:7d:96:67:a4:de:50:f4:f9:16:2b:86:d7:4a:db:f5:60:
         ea:0f:bd:37:3b:df:ec:c1:62:9c:4f:49:ec:6c:aa:37:00:f3:
         4f:a5:b0:24:a4:f1:fd:59:c8:70:c8:d0:3d:67:38:b1:03:f7:
         61:e9:19:81:e1:3d:e5:81:6b:0e:dc:b2:f2:80:9e:ba:59:2c:
         6b:ab:aa:a4:dc:c7:e0:80:24:aa:74:94:45:37:18:86:e6:c4:
         aa:39:dd:00:cd:f5:da:46:d0:72:84:8a:1e:2f:87:83:a8:b3:
         08:c1
```
&nbsp;
לא היה שום דבר
מיוחד במספר הסריאלי, או במודולו.
לעיתים ניתן לפצח את
המפתח הפרטי של RSA במידה
ונעשו טעויות ביצירתו. כלי אחד כזה הוא RsaCtfTool, אך גם הוא לא העלה דבר.
מכיוון שהכיוון הזה
לא הצליח, עברתי להסתכל על התעבורה עצמה. בכל שכבה (במידת האפשר), עברתי על המידע
וחיפשתי נתונים יוצאי דופן, למשל:
·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
מחרוזות