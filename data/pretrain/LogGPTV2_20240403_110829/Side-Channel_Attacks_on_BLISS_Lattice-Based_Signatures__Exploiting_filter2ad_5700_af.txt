Juan A. Garay (Eds.), Vol. 8042. Springer, 40–56.
[15] Léo Ducas and Tancrède Lepoint. 2013. BLISS: Bimodal Lattice Signature Schemes.
(June 2013). http://bliss.di.ens.fr/bliss-06-13-2013.zip (proof-of-concept imple-
mentation).
[16] Léo Ducas, Vadim Lyubashevsky, and Thomas Prest. 2014. Efficient Identity-
Based Encryption over NTRU Lattices. In ASIACRYPT (LNCS), Palash Sarkar and
Tetsu Iwata (Eds.), Vol. 8874. Springer, 22–41.
[17] Léo Ducas and Phong Q. Nguyen. 2012. Learning a Zonotope and More: Crypt-
analysis of NTRUSign Countermeasures. In ASIACRYPT (LNCS), Xiaoyun Wang
and Kazue Sako (Eds.), Vol. 7658. Springer, 433–450.
[18] Nagarjun C. Dwarakanath and Steven D. Galbraith. 2014. Sampling from discrete
Gaussians for lattice-based cryptography on a constrained device. Appl. Algebra
Eng. Commun. Comput. 25, 3 (2014), 159–180.
[19] Thomas Espitau, Pierre-Alain Fouque, Alexandre Gélin, and Paul Kirchner. 2016.
Computing Generator in Cyclotomic Integer Rings.
IACR Cryptology ePrint
Archive 2016 (2016), 957.
[20] Thomas Espitau, Pierre-Alain Fouque, Benoît Gérard, and Mehdi Tibouchi. 2016.
Loop-Abort Faults on Lattice-Based Fiat–Shamir and Hash-and-Sign Signatures.
In SAC (LNCS), Roberto Avanzi and Howard Heys (Eds.). Springer. To appear.
[21] Thomas Espitau, Pierre-Alain Fouque, Benoît Gérard, and Mehdi Tibouchi. 2017.
Side-Channel Attacks on BLISS Lattice-Based Signatures. IACR Cryptology ePrint
Archive 2017 (2017), 505. http://eprint.iacr.org/2017/505 Full version of this paper.
[22] Craig Gentry, Jakob Jonsson, Jacques Stern, and Michael Szydlo. 2001. Cryptanal-
ysis of the NTRU Signature Scheme (NSS) from Eurocrypt 2001. In ASIACRYPT
(LNCS), Colin Boyd (Ed.), Vol. 2248. Springer, 1–20.
[23] Craig Gentry, Chris Peikert, and Vinod Vaikuntanathan. 2008. Trapdoors for
hard lattices and new cryptographic constructions. In STOC, Cynthia Dwork
(Ed.). ACM, 197–206.
[24] Craig Gentry and Michael Szydlo. 2002. Cryptanalysis of the Revised NTRU
Signature Scheme. In EUROCRYPT (LNCS), Lars R. Knudsen (Ed.), Vol. 2332.
Springer, 299–320.
[25] Oded Goldreich, Shafi Goldwasser, and Shai Halevi. 1997. Public-Key Cryptosys-
tems from Lattice Reduction Problems. In CRYPTO (LNCS), Burton S. Kaliski, Jr.
(Ed.), Vol. 1294. Springer, 112–131.
[26] Leon Groot Bruinderink, Andreas Hülsing, Tanja Lange, and Yuval Yarom. 2016.
Flush, Gauss, and Reload: A Cache Attack on the BLISS Lattice-Based Signature
Scheme. In CHES (LNCS), Benedikt Gierlichs and Axel Y. Poschmann (Eds.),
Vol. 9813. Springer, 323–345.
[27] Daniel Gruss, Raphael Spreitzer, and Stefan Mangard. 2015. Cache Template
Attacks: Automating Attacks on Inclusive Last-Level Caches. In USENIX Security,
Jaeyeon Jung and Thorsten Holz (Eds.). USENIX Association, 897–912.
[28] Tim Güneysu, Vadim Lyubashevsky, and Thomas Pöppelmann. 2012. Practical
Lattice-Based Cryptography: A Signature Scheme for Embedded Systems. In
CHES (LNCS), Emmanuel Prouff and Patrick Schaumont (Eds.), Vol. 7428. Springer,
530–547.
[29] Gurobi Optimization, Inc. 2016. Gurobi Optimizer Reference Manual. (2016).
http://www.gurobi.com
[30] Nishad Herath and Anders Fogh. 2015. CPU Hardware Performance Counters
for Security. BlackHat USA 2015 briefing. (2015). http://www.blackhat.com/us-
15/briefings.html#these-are-not-your-grand-daddys-cpu-performance-
counters-cpu-hardware-performance-counters-for-security
[31] Jeffrey Hoffstein, Nick Howgrave-Graham, Jill Pipher, Joseph H. Silverman, and
William Whyte. 2003. NTRUSign: Digital Signatures Using the NTRU Lattice. In
CT-RSA (LNCS), Marc Joye (Ed.), Vol. 2612. Springer, 122–140.
[32] Jeffrey Hoffstein, Jill Pipher, John M. Schanck, Joseph H. Silverman, and William
Whyte. 2014. Practical Signatures from the Partial Fourier Recovery Problem. In
ACNS (LNCS), Ioana Boureanu, Philippe Owesarski, and Serge Vaudenay (Eds.),
Vol. 8479. Springer, 476–493.
[33] James Howe, Thomas Pöppelmann, Máire O’Neill, Elizabeth O’Sullivan, and Tim
Güneysu. 2015. Practical Lattice-Based Digital Signature Schemes. ACM Trans.
Embedded Comput. Syst. 14, 3 (2015), 41.
[34] James Howe, Thomas Pöppelmann, Máire O’Neill, Elizabeth O’Sullivan, Tim
Güneysu, and Vadim Lyubashevsky. 2015. Practical Lattice-Based Digital Signa-
ture Schemes. Slides of the presentation at the NIST Workshop of Cybersecurity in
a Post-Quantum World. (2015). Available at http://csrc.nist.gov/groups/ST/post-
quantum-2015/presentations/session9-oneill-maire.pdf.
[37] Paul C. Kocher, Joshua Jaffe, Benjamin Jun, and Pankaj Rohatgi. 2011. Introduction
[35] Nick Howgrave-Graham and Michael Szydlo. 2004. A Method to Solve Cyclotomic
Norm Equations. In ANTS (LNCS), Duncan A. Buell (Ed.), Vol. 3076. Springer,
272–279.
[36] Yoongu Kim, Ross Daly, Jeremie Kim, Chris Fallin, Ji-Hye Lee, Donghyuk Lee,
Chris Wilkerson, Konrad Lai, and Onur Mutlu. 2014. Flipping bits in memory
without accessing them: An experimental study of DRAM disturbance errors. In
ISCA. IEEE Computer Society, 361–372.
to differential power analysis. J. Cryptographic Engineering 1, 1 (2011), 5–27.
[38] Vadim Lyubashevsky. 2009. Fiat–Shamir with Aborts: Applications to Lattice
and Factoring-Based Signatures. In ASIACRYPT (LNCS), Mitsuru Matsui (Ed.),
Vol. 5912. Springer, 598–616.
[39] Vadim Lyubashevsky. 2012. Lattice Signatures without Trapdoors. In EUROCRYPT
(LNCS), David Pointcheval and Thomas Johansson (Eds.), Vol. 7237. Springer,
738–755.
[40] Daniele Micciancio and Michael Walter. 2017. Gaussian Sampling over the
Integers: Efficient, Generic, Constant-Time. IACR Cryptology ePrint Archive 2017
(2017), 259. http://eprint.iacr.org/2017/259
[41] Michael Naehrig and others. 2016. Lattice Cryptography Library (version
(Dec. 2016). https://www.microsoft.com/en-us/research/project/lattice-
1.0).
cryptography-library
[42] Phong Q. Nguyen and Oded Regev. 2009. Learning a Parallelepiped: Cryptanalysis
of GGH and NTRU Signatures. J. Cryptology 22, 2 (2009), 139–160.
[43] Elisabeth Oswald and Stefan Mangard. 2007. Template Attacks on Masking -
Resistance Is Futile. In CT-RSA (LNCS), Masayuki Abe (Ed.), Vol. 4377. Springer,
243–256.
[44] Chris Peikert. 2010. An Efficient and Parallel Gaussian Sampler for Lattices. In
CRYPTO 2010 (LNCS), Tal Rabin (Ed.), Vol. 6223. Springer, 80–97.
[45] Thomas Pöppelmann, Léo Ducas, and Tim Güneysu. 2014. Enhanced Lattice-
Based Signatures on Reconfigurable Hardware. In CHES (LNCS), Lejla Batina and
Matthew Robshaw (Eds.), Vol. 8731. Springer, 353–370.
[46] Thomas Pöppelmann, Tobias Oder, and Tim Güneysu. 2015. High-Performance
Ideal Lattice-Based Cryptography on 8-Bit ATxmega Microcontrollers. In LAT-
INCRYPT (LNCS), Kristin E. Lauter and Francisco Rodríguez-Henríquez (Eds.),
Vol. 9230. Springer, 346–365.
[47] The OpenSSL project. 2017. (2017). https://www.openssl.org/news/openssl-1.0.2-
[48] Emmanuel Prouff and Matthieu Rivain. 2013. Masking against Side-Channel
Attacks: A Formal Security Proof. In EUROCRYPT (LNCS), Thomas Johansson
and Phong Q. Nguyen (Eds.), Vol. 7881. Springer, 142–159.
[49] Markku-Juhani O. Saarinen. 2017. Arithmetic coding and blinding countermea-
sures for lattice signatures. Journal of Cryptographic Engineering (2017), 14. To
appear.
[50] Andreas Steffen. 2015. Bimodal Lattice Signature Scheme (BLISS) in strongSwan.
(2015). https://wiki.strongswan.org/projects/strongswan/wiki/BLISS
[51] Andreas Steffen and others. 2017. strongSwan: the Open Source IPsec-based VPN
Solution (version 5.5.2). (March 2017). https://www.strongswan.org/
[52] Joachim von zur Gathen and Daniel Panario. 2001. Factoring Polynomials Over
Finite Fields: A Survey. Journal of Symbolic Computation 31 (2001), 3 – 17.
notes.html
A HOWGRAVE-GRAHAM–SZYDLO
ALGORITHM IN POWER-OF-TWO
CYCLOTOMIC FIELDS
We present a generalization of the Howgrave-Graham-Szydlo al-
gorithm to power-of-two cyclotomic fields. The original procedure
solves the problem of recovering an element f of the ring of inte-
gers of a cyclotomic field of prime conductor l given its relative
norm f · ¯f . factorization. This problem is computationally hard
14
A.1.1
since it relies heavily on the factorisation of the algebraic norm of
f over the integers.
A.1 Background on Algebraic Number Theory
Integers and Ring of integers. The ring of integers OK of a
number field K of degree n is a free Z-module of rank n, i.e. the set of
all Z-linear combinations of some integral basis {b1, . . . , bn} ⊂ OK .
It is also a Q-basis for K. In the case of cyclotomic field, the power
basis {1, ζm, . . . , ζ n−1
m } is an integral basis of the cyclotomic ring
Z[ζm]. An (integral) ideal a ⊆ OK is an additive subgroup closed
under multiplication, i.e. r · д ∈ a for any r ∈ OK and д ∈ a.
A fractional ideal a ⊂ K is a set such that d · a is an integral
ideal for some d ∈ OK . The inverse a−1 of an ideal a is the set
{a ∈ K : a · a ⊆ OK}.
An ideal a in OK is finitely generated as the set of all K-linear
combinations of some generators д1, д2, . . . ∈ OK , denoted a =
(д1, д2, . . .). An ideal a is called principal if a = (д) for д ∈ OK .
An ideal (integral or fractional) as a free Z-module of rank n, is
generated as the set of all Z-linear combinations of some basis
{b1, . . . , bn} ⊂ OK .
Let a, b be ideals of a ring R. Their sum a+b = {a+b : a ∈ a, b ∈ b}
and their product ab = {a · b : a ∈ a, b ∈ b} generated by all
products of elements in a with elements of b are also ideals. Two
ideal a, b ⊆ OK are called coprime (or relatively prime) if a +b = OK .
The (absolute) norm of an ideal a ⊆ OK is N (a) = |OK /a|, which
is the size of this quotient ring. It is well-known that the norm is
multiplicative: N (ab) = N (a)N (b). For a ∈ OK and a = (a) a
principal ideal generated by a, N (a) = |N (a)|.
One of the most striking properties of ring of integers is the
analogue of the unique prime decomposition theorem of integers,
but for ideals:
Theorem A.1 (Uniqe Factorization of Ideals). Every ideal
in OK is uniquely representable as a product of prime ideals.
When considering two integer rings OK ⊆ OL the assertion "P
lies above p" means that pOL = Pe · a for some ideal a ⊆ OL. That
is: P appears in the prime factorization of the ideal pOL ⊆ OL.
Therefore, in the case where L = Q, OL = Z and the assertion “P
lies above the prime p” equivalently means that P ∩ Z = (p).
A.1.2 Cyclotomic fields and Cyclotomic Integers. We denote by
Φm the m-th cyclotomic polynomial, that is the unique monic irre-
ducible polynomial in Q[X] dividing Xm − 1 that is not a divisor
of any of the X k − 1 for k  1.. For any prime ideal P dividing ( f ∗ ¯f ),
appearing with multiplicity t in its decomposition, P can appear in
the decomposition of ( f ) with multiplicity 0 ≤ i ≤ t, implying that
¯P will appear with multiplicity t − i in the decomposition of ( f ).
As such one of the 1 + t such ideals appears in the decomposition
of ( f ).
In order to compute ( f ), we thus need to compute the prime
decomposition of ( f · ¯f ) and test for the possible multiplicities
of each prime ideal of its decomposition. Since we know that the
algebraic norm of f · ¯f is pα , we also know that its prime divisors are
all primes over p. Then after first enumerating the prime ideals over
p, with Berlekamp’s algorithm for instance, we test the divisibility
of ( f · ¯f ) by each of their exponentiation. By multiplicativity of
the norm each prime ideal can only appear with multiplicity lower
than α.
Once the prime decompositions ( f · ¯f ) =(cid:81)
ti is obtained,
we can construct the candidate ideals by computing the products of
ti−k among the 1 + ti possibles
exactly one ideal of the form pk
i
for each (pi , ¯pi ) pair of conjugate primes, divisors of ( f · ¯f ).
¯
(pi )
¯
(pi )
i pti
i
i pei
i
in prime ideals: ( f ) = (cid:81)
Case p ≡ 3 mod 4. In this case p is inert in Z[i], and then we
can not construct a list of candidate from the decomposition in
the quadratic field as in step II-1 of the previous case. Nonetheless
this case is somehow simpler: the ideal ( f ) in Z[ζm] is actually
invariant under the conjugation map. Indeed if we decompose ( f )
, each ideal pi is necessarily a real
prime ideal over p. Indeed, the norm of each pi over Q(i) is also
real as being a prime over p in Z[i], that is (p) itself since p is inert.
As a consequence, ( f · ¯f ) = ( f )
2, and we only need to compute the
square root of the principal ideal generated by the norm ( f · ¯f ) to
recover ( f ). This can be done easily by first decomposing ( f · ¯f ) in
prime ideals and then dividing the valuation of each prime by two.
For notational simplicity and consistence with the ideals generated
for the case p ≡ 1 mod 4, we will also denote the recovered ideal
( f ) as I and call it a candidate ideal. The schematic representation
of the algorithm in this case is presented in Figure 14.
A.2.3
(Step III) Generator recovery. This final step is now com-
mon for the two cases. Given one — or the unique — of the candidate
I — which is supposed to be principal — as well as the element f · ¯f ,
generator of the ideal I · ¯I by construction, the Gentry-Szydlo [24]
algorithm can be called to recover f up to a root of unity. In the
case where I is not principal 5, the latter algorithm returns an error,
giving hence a method to distinguish principal candidates from
others. For completeness purpose we recall the basic aspects of this
final tool in the case where I = ( f ).
Surprisingly enough the data given by only the relative norm
and the ideal are sufficient to recover the generator in polynomial
time. We recall that given only the basis of an ideal I, computing a
generator is computationally hard, this corresponds indeed to the
so-called Principal Ideal Problem. State-of-the-art algorithms for PIP
are still subexponential time [19].
The main idea of the Gentry-Szydlo algorithm, more precisely
described in [24], is to combine algebra in number field with lattice
reduction techniques. Using Fermat’s Little Theorem, for a prime q,
we have f q = f over Rq = Z/qZ[X]/(Xm + 1), the cyclotomic ring
6 we
of integers reduced mod q. Unless f is a zero divisor in Rq