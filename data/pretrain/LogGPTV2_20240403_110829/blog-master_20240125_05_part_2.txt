select * from pg_stat_replication;  
  pid  | usesysid | usename  | application_name | client_addr | client_hostname | client_port |         backend_start         | backend_xmin |   state   | sent_lsn  | write_lsn | flush_lsn | replay_lsn   
| write_lag | flush_lag | replay_lag | sync_priority | sync_state   
-------+----------+----------+------------------+-------------+-----------------+-------------+-------------------------------+--------------+-----------+-----------+-----------+-----------+------------  
+-----------+-----------+------------+---------------+------------  
 65300 |       10 | postgres | replica2         | ::1         |                 |       34416 | 2024-01-25 14:57:34.5525+08   |              | streaming | 0/17516A8 | 0/17516A8 | 0/17516A8 | 0/17516A8    
|           |           |            |             0 | async  
 65345 |       10 | postgres | replica1         | ::1         |                 |       49196 | 2024-01-25 15:03:17.208988+08 |              | streaming | 0/17516A8 | 0/17516A8 | 0/17516A8 | 0/17516A8    
|           |           |            |             0 | async  
 65589 |       10 | postgres | replica3         | ::1         |                 |       41628 | 2024-01-25 15:48:53.513407+08 |              | streaming | 0/17516A8 | 0/17516A8 | 0/17516A8 | 0/17516A8    
|           |           |            |             0 | async  
(3 rows)  
```  
### 3、配置PolarDB WAL日志归档    
3\.1、创建归档目录  
```  
cd /var/polardb/  
mkdir wal_archive  
```  
3\.2、新增配置  
```  
echo "polar_enable_switch_wal_in_backup = on  
archive_mode = on  
archive_command = 'test ! -f /var/polardb/wal_archive/%f && cp %p /var/polardb/wal_archive/%f'" >> /var/polardb/primary_datadir/postgresql.auto.conf  
echo "polar_enable_switch_wal_in_backup = on  
archive_mode = on  
archive_command = 'test ! -f /var/polardb/wal_archive/%f && cp %p /var/polardb/wal_archive/%f'" >> /var/polardb/replica_datadir1/postgresql.auto.conf  
echo "polar_enable_switch_wal_in_backup = on  
archive_mode = on  
archive_command = 'test ! -f /var/polardb/wal_archive/%f && cp %p /var/polardb/wal_archive/%f'" >> /var/polardb/replica_datadir2/postgresql.auto.conf  
echo "polar_enable_switch_wal_in_backup = on  
archive_mode = on  
archive_command = 'test ! -f /var/polardb/wal_archive/%f && cp %p /var/polardb/wal_archive/%f'" >> /var/polardb/replica_datadir3/postgresql.auto.conf  
```  
3\.3、重启计算节点  
```  
pg_ctl restart -m fast -D /var/polardb/primary_datadir  
pg_ctl restart -m fast -D /var/polardb/replica_datadir1  
pg_ctl restart -m fast -D /var/polardb/replica_datadir2  
pg_ctl restart -m fast -D /var/polardb/replica_datadir3  
```  
3\.4、确认归档是否正常  
```  
psql -p 5433  
psql (11.9)  
Type "help" for help.  
postgres=#   select pg_switch_wal();  
 pg_switch_wal   
---------------  
 0/17517B0  
(1 row)  
postgres=# checkpoint;  
CHECKPOINT  
postgres=#   select pg_switch_wal();  
 pg_switch_wal   
---------------  
 0/2000120  
(1 row)  
postgres=# \q  
postgres@docker-desktop:/var/polardb/wal_archive$ ll  
total 32768  
drwxr-xr-x 4 postgres postgres      128 Jan 25 15:57 ./  
drwxrwxrwx 8 postgres postgres      256 Jan 25 15:52 ../  
-rw------- 1 postgres postgres 16777216 Jan 25 15:56 000000010000000000000001  
-rw------- 1 postgres postgres 16777216 Jan 25 15:57 000000010000000000000002  
```  
### 4、备份 PolarDB    
PolarDB for PostgreSQL 采用基于共享存储的存算分离架构，其数据目录分为以下两类：  
- 本地数据目录：位于每个计算节点的本地存储上，为每个计算节点私有  
- 共享数据目录：位于共享存储上，被所有计算节点共享  
![pic](20240125_05_pic_001.png)   
由于本地数据目录中的目录和文件不涉及数据库的核心数据，因此在备份数据库时，备份本地数据目录是可选的。可以仅备份共享存储上的数据目录，然后使用 `initdb` 重新生成新的本地存储目录。但是计算节点的本地配置文件需要被手动备份，如 `postgresql.conf`、`postgresql.auto.conf`、`pg_hba.conf`、`recovery.conf`  等文件。  
通过以下 SQL 命令可以查看节点的本地数据目录：  
```  
postgres=# SHOW data_directory;  
        data_directory          
------------------------------  
 /var/polardb/primary_datadir  
(1 row)  
```  
通过以下 SQL 命令可以查看所有计算节点在共享存储上的共享数据目录：  
```  
postgres=# SHOW polar_datadir;  
             polar_datadir                
----------------------------------------  
 file-dio:///var/polardb/shared_datadir  
(1 row)  
```  
polar_basebackup 备份工具  
PolarDB for PostgreSQL 的备份工具 `polar_basebackup`，由 PostgreSQL 的 `pg_basebackup` 改造而来，完全兼容 `pg_basebackup`，因此同样可以用于对 PostgreSQL 做备份恢复。`polar_basebackup` 的可执行文件位于 PolarDB for PostgreSQL 安装目录下的 `bin/` 目录中。  
该工具的主要功能是将一个运行中的 PolarDB for PostgreSQL 数据库的数据目录（包括本地数据目录和共享数据目录）备份到目标目录中。  
```  
polar_basebackup takes a base backup of a running PostgreSQL server.  
Usage:  
  polar_basebackup [OPTION]...  
Options controlling the output:  
  -D, --pgdata=DIRECTORY receive base backup into directory  
  -F, --format=p|t       output format (plain (default), tar)  
  -r, --max-rate=RATE    maximum transfer rate to transfer data directory  
                         (in kB/s, or use suffix "k" or "M")  
  -R, --write-recovery-conf  
                         write recovery.conf for replication  
  -T, --tablespace-mapping=OLDDIR=NEWDIR  
                         relocate tablespace in OLDDIR to NEWDIR  
      --waldir=WALDIR    location for the write-ahead log directory  
  -X, --wal-method=none|fetch|stream  
                         include required WAL files with specified method  
  -z, --gzip             compress tar output  
  -Z, --compress=0-9     compress tar output with given compression level  
General options:  
  -c, --checkpoint=fast|spread  
                         set fast or spread checkpointing  
  -C, --create-slot      create replication slot  
  -l, --label=LABEL      set backup label  
  -n, --no-clean         do not clean up after errors  
  -N, --no-sync          do not wait for changes to be written safely to disk  
  -P, --progress         show progress information  
  -S, --slot=SLOTNAME    replication slot to use  
  -v, --verbose          output verbose messages  
  -V, --version          output version information, then exit  
      --no-slot          prevent creation of temporary replication slot  
      --no-verify-checksums  
                         do not verify checksums  
  -?, --help             show this help, then exit  
Connection options:  
  -d, --dbname=CONNSTR   connection string  
  -h, --host=HOSTNAME    database server host or socket directory  
  -p, --port=PORT        database server port number  
  -s, --status-interval=INTERVAL  
                         time between status packets sent to server (in seconds)  
  -U, --username=NAME    connect as specified database user  
  -w, --no-password      never prompt for password  
  -W, --password         force password prompt (should happen automatically)  
      --polardata=datadir  receive polar data backup into directory  
      --polar_disk_home=disk_home  polar_disk_home for polar data backup  
      --polar_host_id=host_id  polar_host_id for polar data backup  
      --polar_storage_cluster_name=cluster_name  polar_storage_cluster_name for polar data backup  
```  
`polar_basebackup` 的参数及用法几乎和 `pg_basebackup` 一致，新增了以下与共享存储相关的参数：  
- `--polar_disk_home` / `--polar_host_id` / `--polar_storage_cluster_name`：这三个参数指定了用于存放备份共享数据的共享存储节点  
- `--polardata`：该参数指定了备份共享存储节点上存放共享数据的路径；如不指定，则默认将共享数据备份到本地数据备份目录的 `polar_shared_data/` 路径下  
4\.1、创建存储备份文件的目录  
```  
cd /var/polardb  
mkdir backup  
```  
4\.2、备份  
```  
# 通过RW (5433)进行备份  
# 本地数据写入 /var/polardb/backup/primary  
# 共享数据写入 /var/polardb/backup/polar_shared_data  
polar_basebackup -h 127.0.0.1 -p 5433 -U postgres -R -D /var/polardb/backup/primary --polardata=/var/polardb/backup/polar_shared_data  
```  
4\.3、修改数据  
```  
postgres=# create table t (id int, info text, ts timestamp);  
CREATE TABLE  
postgres=# insert into t values (1,'test',now());  
INSERT 0 1  
```  
4\.4、切换WAL日志保证归档正常  
```  
postgres=# checkpoint;  
CHECKPOINT   
postgres=# select pg_switch_wal();  
 pg_switch_wal   
---------------  
 0/7003280  
(1 row)  
postgres=# select pg_switch_wal();  
 pg_switch_wal   
---------------  
 0/8000078  
(1 row)  
postgres=# \q  
postgres@docker-desktop:/var/polardb/backup$ cd ../wal_archive/  
postgres@docker-desktop:/var/polardb/wal_archive$ ll  
total 131072  
drwxr-xr-x 10 postgres postgres      320 Jan 25 16:17 ./  
drwxrwxrwx  9 postgres postgres      288 Jan 25 16:09 ../  
-rw-------  1 postgres postgres 16777216 Jan 25 15:56 000000010000000000000001  
-rw-------  1 postgres postgres 16777216 Jan 25 15:57 000000010000000000000002  
-rw-------  1 postgres postgres 16777216 Jan 25 16:13 000000010000000000000003  
-rw-------  1 postgres postgres 16777216 Jan 25 16:13 000000010000000000000004  
-rw-------  1 postgres postgres 16777216 Jan 25 16:15 000000010000000000000005  
-rw-------  1 postgres postgres 16777216 Jan 25 16:15 000000010000000000000006  
-rw-------  1 postgres postgres 16777216 Jan 25 16:17 000000010000000000000007  
-rw-------  1 postgres postgres 16777216 Jan 25 16:17 000000010000000000000008  
```  
### 5、恢复 PolarDB    
恢复整个集群(包括共享文件)到一个新的集群.    
5\.1、创建新的共享数据目录  
直接在备份目录中操作, 略.   
5\.2、创建新的主节点目录  
直接在备份目录中操作, 略.   
5\.3、恢复共享数据  
直接在备份目录中操作, 略.   
5\.4、恢复主节点数据  
直接在备份目录中操作, 略.   
5\.5、配置恢复文件  
```  
cd /var/polardb/backup/primary  
echo "polar_enable_switch_wal_in_backup = on  