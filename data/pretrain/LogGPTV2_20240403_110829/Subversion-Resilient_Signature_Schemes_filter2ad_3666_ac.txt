SD (A; B) ≤ SD (A|¬E; B|¬E) + P [E].
Proof. The lemma follows by the deﬁnition of statistical distance and an application of the
8
triangle inequality:
SD (A; B) =
1
2
(cid:12)(cid:12)(cid:12)(cid:12)
[x]
[x] − P
B
(cid:12)(cid:12)(cid:12)(cid:12)P
(cid:12)(cid:12)(cid:12)(cid:12)P
A
A
(cid:88)
(cid:88)
x∈D
x∈D
1
2
[E] − P
[x|E] · P
[x|E] · P
[x|¬E] · P
=
≤ P [E] · SD (A|E; B|E) + P [¬E] · SD (A|¬E; B|¬E)
≤ SD (A|¬E; B|¬E) + P [E].
[E] + P
A
A
B
B
A
(cid:12)(cid:12)(cid:12)(cid:12)
[¬E]
[¬E] − P
B
[x|¬E] · P
B
2.2 Signature Schemes
A signature scheme is a triple of polynomial algorithms SS = (KGen, Sign, Vrfy) speciﬁed as
follows: (i) KGen takes as input the security parameter κ and outputs a veriﬁcation/signing
key pair (vk , sk) ∈ VK × SK, where VK := VKκ and SK := SKκ denote the sets of all
veriﬁcation and secret keys produced by KGen(1κ); associated to each vk ∈ VK are a message
space M := Mvk , a randomness space R := Rvk , and a signature space Σ := Σvk . (ii) Sign
takes as input the signing key sk ∈ SK, a message m ∈ M and random coins r ∈ R, and
outputs a signature σ ∈ Σ. (iii) Vrfy takes as input the veriﬁcation key vk ∈ VK and a pair
(m, σ) ∈ ({0, 1}∗)2, and outputs a decision bit that equals 1 iﬀ σ is a valid signature for message
m under key vk .
Correctness of a signature scheme informally says that verifying honestly generated signa-
tures always9 works.
Deﬁnition 1 (Correctness of signatures). Let SS = (KGen, Sign, Vrfy) be a signature scheme.
We say that SS satisﬁes (perfect) correctness if for all κ ∈ N, for all (vk , sk ) output by KGen(1κ),
and all m ∈ M,
P [Vrfy(vk , (m, Sign(sk , m))) = 1] = 1,
where the probability is taken over the randomness of the signing algorithm.
P(cid:104)
(cid:105) ≤ ε,
The standard notion of security for a signature scheme demands that no PPT adversary given
access to a signing oracle returning signatures for arbitrary messages can forge a signature on
a “fresh” message (not asked to the signing oracle).
Deﬁnition 2 (Existential unforgeability). Let SS = (KGen, Sign, Vrfy) be a signature scheme.
We say that SS is (t, q, ε)-existentially unforgeable under chosen-message attacks ((t, q, ε)-EUF-
CMA in short) if for all adversaries A running in time t it holds:
Vrfy(vk , (m∗, σ∗)) = 1 ∧ m∗ (cid:54)∈ Q : (vk , sk ) ←$ KGen(1κ); (m∗, σ∗) ←$ ASign(sk ,·)(vk )
where Q = {m1, . . . , mq} denotes the set of queries to the signing oracle. If for all t, q = poly(κ)
there exists ε(κ) = negl (κ) such that SS is (t, q, ε)-EUF-CMA, then we simply say SS is EUF-
CMA.
9All our results can be extended to the case where there is a negligible correctness error. Note, however, that
assuming perfect correctness is wlog. if we allow the signing algorithm to run in expected polynomial time.
9
Unique signatures. For our positive results, we rely on so-called unique signatures, that we
deﬁne next. Informally, a signature scheme is unique if for any message, there is only a single
signature that veriﬁes w.r.t. an honestly generated veriﬁcation key.
Deﬁnition 3 (Uniqueness of signatures). Let SS be a signature scheme. We say that SS
satisﬁes uniqueness if for all κ ∈ N, for all vk output by KGen(1κ), and all m ∈ M, there exists
a single value σ ∈ Σ such that Vrfy(vk , (m, σ)) = 1.
Full Domain Hash signatures using trapdoor permutations, for instance RSA-FDH [BR96],
are unique. Sometimes unique signatures are also known under the name of veriﬁable unpre-
dictable functions (VUFs).10 Known constructions of VUFs exist based on strong RSA [MRV99],
and on several variants of the Diﬃe-Hellman assumption in bilinear groups [Lys02, Dod03,
DY05, ACF14, Jag15].
2.3 Pseudorandom Generators
We say that G : {0, 1}κ → {0, 1}κ × {0, 1}d is a stateful pseudorandom generator (PRG) if G
is polynomial-time computable and d ≥ 1. A run of the PRG yields G(si−1) = (si, vi) where
s0 ∈ {0, 1}κ is the initial seed, and (si, vi) are, respectively, the seed and the output at the i-th
iteration. Security of a PRG demands that its outputs are computationally indistinguishable
from a uniform bitstring, for all eﬃcient distinguishers.
Deﬁnition 4 (Pseudorandom generator). A function G : {0, 1}κ → {0, 1}κ×{0, 1}d is a (t, q, ε)-
secure pseudorandom generator, if for all adversaries D running in time at most t we have
P
s0 ←$ {0,1}κ
[D(v1, . . . , vq) = 1 : ∀i ∈ [q], G(si−1) = (si, vi)] −
P
v1,...,vq ←$ Ud
[D(v1, . . . , vq) = 1]
(cid:12)(cid:12)(cid:12)(cid:12) ≤ ε,
(cid:12)(cid:12)(cid:12)(cid:12)
where Ud is the uniform distribution over d-bit strings.
2.4 Pseudorandom Functions
Let F : {0, 1}κ × X → Y be an eﬃcient keyed function, where X and Y denote the domain
and the range of F . Denote by F the set of all functions mapping X into Y. Intuitively, a
pseudorandom function (PRF) is a function that is computationally indistinguishable from a
truly random function, for all eﬃcient distinguishers.
Deﬁnition 5 (Pseudorandom function). A function F : {0, 1}κ × X → Y is a (t, q, ε)-secure
pseudorandom function, if for all adversaries D running in time at most t we have
(cid:12)(cid:12)(cid:12)(cid:12)
(cid:104)
P
s ←$ {0,1}κ
DFs (·)(1κ) = 1
Df (·)(1κ) = 1
(cid:105) − P
f ←$ F
(cid:104)
(cid:105)(cid:12)(cid:12)(cid:12)(cid:12) ≤ ε,
where D asks at most q queries to its oracle.
3 Subverting Signatures
We proceed to deﬁne what it means for an adversary B to subvert a signature scheme SS =
(KGen, Sign, Vrfy). We model subversion as the ability of the adversary to replace the genuine
signing algorithm with a diﬀerent algorithm, within a certain class A of Subversion Attacks
10Strictly speaking, VUFs satisfy a stronger requirement—namely the uniqueness property holds even for
maliciously generated veriﬁcation keys; the weak variant above is suﬃcient for the results of this paper.
10
(SAs). A subversion of SS is a randomized algorithm (cid:101)A ∈ A taking as input a signing key
sk ∈ SK and a message m ∈ M, and outputting a subverted signature (cid:101)σ ∈ {0, 1}∗, where
(cid:101)σ :=(cid:101)A(sk , m; r) for r ←$ {0, 1}∗.
Notice that algorithm(cid:101)A is completely arbitrary; in particular, its randomness space does not
need to be equal to the randomness space R, and the value(cid:101)σ could be outside the range Σ of the
original signing algorithm. Moreover, algorithm(cid:101)A can hard-wire arbitrary auxiliary information
allow algorithm (cid:101)A to be stateful, even in case the original signing algorithm is not, and we
chosen by the adversary, which we sometimes denote by a string α ∈ {0, 1}∗. Finally, we also
denote the corresponding state by τ ∈ {0, 1}∗; the state is only used internally by the subverted
algorithm, and never revealed to the outside.
In Section 3.1, we deﬁne what it means for a signature scheme to be secure against a certain
class of SAs. In Section 3.2, we deﬁne what it means for a class of SAs to be undetectable by
a user. Apart from being undetectable, a SA class should successfully extract the secret key of
the underlying signature scheme, a goal that we formalize in Section 3.3. Intuitively, the last
two adversarial goals (i.e., undetectability and key recovery) must be satisﬁed at the same time
by a single, and eﬃcient, sampling strategy that selects one subversion algorithm for a given
SA class; this yields a successful class of SAs, as deﬁned in Section 3.4.
3.1 Security
We consider two security deﬁnitions, corresponding to diﬀerent adversarial goals.
In the ﬁrst deﬁnition, it is required that an adversary B, with the
Indistinguishability.
ability to subvert the original signing algorithm polynomially many time (possibly depending
on the user’s veriﬁcation key), cannot distinguish signatures produced via the genuine signing
algorithm from subverted signatures.
Deﬁnition 6 (Indistinguishability against SAs). Let SS = (KGen, Sign, Vrfy) be a signature
scheme, and A be some class of SAs for SS. We say that SS is (t, n, q, ε)-indistinguishable w.r.t
continuous A-SAs if for all adversaries B running in time t, we have(cid:12)(cid:12)P [B wins] − 1
(cid:12)(cid:12) ≤ ε(κ) in
2. The adversary B can specify an algorithm (cid:101)Aj ∈ A, for a total of at most n ∈ N queries.
1. The challenger runs (vk , sk ) ←$ KGen(1κ), samples b ←$ {0, 1}, and gives vk to B.
the following game:
2
Each such algorithm implicitly deﬁnes an oracle that can be queried adaptively up to
q ∈ N times.
 Upon input a query of the form (j, mi,j), where j ∈ [n] and i ∈ [q], the answer
from the j-th oracle depends on the value of the secret bit b: If b = 1, the output
undeﬁned, the oracle returns ⊥.
is σi,j ←$ Sign(sk , mi,j); if b = 0, the output is (cid:101)σi,j ←$(cid:101)Aj(sk , mi,j).
i.e. the queries to each oracle (cid:101)Aj can be interleaved in an arbitrary manner.
 Note that B does not need to ask all q queries before choosing the next algorithm,
In case (cid:101)Aj is
3. Finally, B outputs a value b(cid:48) ∈ {0, 1}; we say that B wins iﬀ b(cid:48) = b.
If for all t, q, n = poly(κ) there exists ε(κ) = negl (κ) such that SS is (t, n, q, ε)-indistinguishable
w.r.t continuous A-SAs, we simply say that SS is indistinguishable against continuous A-SAs.
11
Impersonation under chosen-message attacks. We also consider an alternative deﬁni-
tion, where the goal of the adversary is to forge a signature on a “fresh” message (not asked to
any of the oracles). As we show in Theorem 8, this deﬁnition is strictly weaker than Deﬁnition 6
for all signature schemes that are unforgeable (i.e., UF-CMA as per Deﬁnition 2).
Deﬁnition 7 (EUF-CMA against SAs). Let SS = (KGen, Sign, Vrfy) be a signature scheme,
and A be some class of SAs for SS. We say that SS is (t, n, q, ε)-EUF-CMA w.r.t. continuous
A-SAs if for all adversaries B running in time t, we have P [B wins] ≤ ε(κ) in the following
game:
1. The challenger runs (vk , sk ) ←$ KGen(1κ), and gives vk to B.
2. The adversary B is given oracle access to Sign(sk ,·). Upon input the i-th query mi, this
oracle returns σi ←$ Sign(sk , mi) for a total of at most q ∈ N queries.
3. The adversary B can specify an algorithm (cid:101)Aj ∈ A, for a total of at most n ∈ N queries.
Each such algorithm implicitly deﬁnes an oracle that can be queried adaptively up to
q ∈ N times.
 Upon input a query of the form (j, mi,j), where j ∈ [n] and i ∈ [q], the j-th oracle
outputs(cid:101)σi,j ←$(cid:101)Aj(sk , mi,j). In case (cid:101)Aj is undeﬁned, the oracle returns ⊥.
i.e. the queries to each oracle(cid:101)Aj and to oracle Sign can be interleaved in an arbitrary
 Note that B does not need to ask all q queries before choosing the next algorithm,
manner.
4. Let Q = {m1, . . . , mq} be the set of messages queried to oracle Sign(sk ,·); similarly, for
each j ∈ [n], let (cid:101)Qj = {m1,j, . . . , mq,j} be the set of messages queried to oracle (cid:101)Aj.
m∗ (cid:54)∈ Q ∪ (cid:101)Q, where (cid:101)Q :=(cid:83)n
5. Finally, B outputs a pair (m∗, σ∗); we say that B wins iﬀ Vrfy(vk , (m∗, σ∗)) = 1 and
j=1 (cid:101)Qj.
If for all t, q, n = poly(κ) there exists ε(κ) = negl (κ) such that SS is (t, n, q, ε)-EUF-CMA
against continuous A-SAs, we simply say that SS is EUF-CMA against continuous A-SAs.
Remarks. Some remarks on the above deﬁnitions are in order.
 First, note that it is impossible to prove that a signature scheme SS satisﬁes Deﬁnition 6
(and consequently Deﬁnition 7) for an arbitrary class A, without making further assump-
tions.11 To see this, consider the simple algorithm that ignores all inputs and outputs the
secret key.12
 Consider the class of algorithms Akey = {(cid:101)Af}f∈F , where F is a class of functions such
(cid:101)Af (·, m; r) := Sign(f (·), m; r). Note that continuous security against Akey-SAs implies
that each f ∈ F has a type f : SK → SK, and for all f ∈ F, m ∈ M and r ∈ R we deﬁne
security in the presence of related-key attacks within the family F. It is also worth noting