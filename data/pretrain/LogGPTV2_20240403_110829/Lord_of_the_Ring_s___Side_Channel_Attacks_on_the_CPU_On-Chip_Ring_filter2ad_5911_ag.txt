以下是优化后的文本，使其更加清晰、连贯和专业：

---

**参考文献**

[63] Dan Luu. 终端延迟. https://danluu.com/term-latency/. 访问日期：2020年6月17日.

[64] Andrew Marshall, Michael Howard, Grant Bugher, and Brian Harden. Windows Azure应用程序的安全最佳实践. Microsoft, 2010年6月.

[65] Clémentine Maurice, Nicolas Le Scouarnec, Christoph Neumann, Olivier Heen, and Aurélien Francillon. 使用性能计数器反向工程Intel最后一级缓存的复杂寻址. 在RAID, 2015.

USENIX协会
第30届USENIX安全研讨会    659

[66] Clémentine Maurice, Christoph Neumann, Olivier Heen, and Aurélien Francillon. C5: 跨核缓存隐蔽通道. 在DIMVA, 2015.

[67] Clémentine Maurice, Manuel Weber, Michael Schwarz, Lukas Giner, Daniel Gruss, Carlo Alberto Boano, Stefan Mangard, and Kay Römer. 另一边的问候：在云中通过稳健的缓存隐蔽通道进行SSH通信. 在NDSS, 2017.

[68] John V Monaco. 关键记录侧信道的研究概述. 在S&P, 2018.

[69] Rik Myslewski. Intel Sandy Bridge多核的秘密调料. https://www.theregister.com/2010/09/16/sandy_bridge_ring_interconnect?page=1. 访问日期：2020年6月17日.

[70] Michael Neve and Jean-Pierre Seifert. AES访问驱动缓存攻击的进展. 在SAC, 2006.

[71] Khang T Nguyen. Intel Xeon处理器E5 v4系列中的缓存分配技术介绍. https://software.intel.com/content/www/us/en/develop/articles/introduction-to-cache-allocation-technology.html. 访问日期：2020年6月17日.

[72] Hamed Okhravi, Stanley Bak, and Samuel T King. 隐蔽通道攻击的设计、实现和评估. 在HST, 2010.

[73] Yossef Oren, Vasileios P Kemerlis, Simha Sethumadhavan, and Angelos D Keromytis. 沙盒中的间谍：JavaScript中的实际缓存攻击及其影响. 在CCS, 2015.

[74] Dag Arne Osvik, Adi Shamir, and Eran Tromer. 缓存攻击及对策：AES案例. 在CT-RSA, 2006.

[75] Rahul Pal and Ishwar Agarwal. 构建结构异构瓦片的单片网格互连的方法和装置, 专利US20180189232, 2018.

[76] Priyadarsan Patra and Chinna Prudvi. 芯片上的织物：功能、调试和测试的交汇点. 在NOCS, 2015.

[77] Colin Percival. 缓存缺失的乐趣与利润. 在BSDCan, 2005.

[78] Cesar Pereida García, Billy Bob Brumley, and Yuval Yarom. 确保DSA签名指数确实是常时的. 在CCS, 2016.

[79] Peter Pessl, Daniel Gruss, Clémentine Maurice, Michael Schwarz, and Stefan Mangard. DRAMA：利用DRAM寻址进行跨CPU攻击. 在USENIX Security, 2016.

[80] Raspberry Pi基金会. 按下按键 - 了解计算机系统. https://www.futurelearn.com/courses/computer-systems/0/steps/53503. 访问日期：2020年6月17日.

[81] Paccagnella Riccardo, Licheng Luo, and Christopher W. Fletcher. 戒指之主：对CPU片上环形互连的侧信道攻击是可行的. 预印本, arXiv:2103.03443 [cs.CR], 2021.

[82] Thomas Ristenpart, Eran Tromer, Hovav Shacham, and Stefan Savage. 嘿，你，离开我的云：探索第三方计算云中的信息泄露. 在CCS, 2009.

[83] Bholanath Roy, Ravi Prakash Giri, C Ashokkumar, and Bernard Menezes. 基于缓存的侧信道攻击对AES的间谍网络设计与实现. 在ICETE, 2015.

[84] Subhash Saini, Johnny Chang, and Haoqiang Jin. 使用科学和工程应用对基于Intel Sandy Bridge的NASA Pleiades进行性能评估. 在PMBS, 2013.

[85] Michael Schwarz, Moritz Lipp, Daniel Gruss, Samuel Weiser, Clémentine Maurice, Raphael Spreitzer, and Stefan Mangard. Keydrown：消除基于软件的击键时间侧信道攻击. 在NDSS, 2018.

[86] Michael Schwarz, Clémentine Maurice, Daniel Gruss, and Stefan Mangard. 奇妙的计时器及其发现地点：JavaScript中的高分辨率微架构攻击. 在FC, 2017.

[87] Anand Lal Shimpi. Intel的Sandy Bridge架构揭秘. https://www.anandtech.com/show/3922/intels-sandy-bridge-architecture-exposed/4, 2010. 访问日期：2020年6月17日.

[88] Dawn Xiaodong Song, David A Wagner, and Xuqing Tian. 击键的时间分析和对SSH的定时攻击. 在USENIX Security, 2001.

[89] Read Sprabery, Konstantin Evchenko, Abhilash Raj, Rakesh B Bobba, Sibin Mohan, and Roy Campbell. 调度、隔离和缓存分配：一种侧信道防御. 在IC2E, 2018.

[90] Raphael Spreitzer, Veelasha Moonsamy, Thomas Korak, and Stefan Mangard. 侧信道攻击的系统分类：以移动设备为例. IEEE Commun. Surv. Tutor., 20(1), 2017.

[91] Dean Sullivan, Orlando Arias, Travis Meade, and Yier Jin. 微架构地雷：4K别名隐蔽通道和IaaS云中的多租户检测. 在NDSS, 2018.

[92] Ramacharan Sundararaman, Tracey L Gustafson, and Robert J Safranek. 跨芯片接口嗅探或全局观察消息排序, 专利US9785556B2, 2017.

[93] Paul Teich. AMD Epyc复兴的核心是Infinity Fabric. https://www.nextplatform.com/2017/07/12/heart-amds-epyc-comeback-infinity-fabric/. 访问日期：2020年6月17日.

[94] Eran Tromer, Dag Arne Osvik, and Adi Shamir. 高效的AES缓存攻击及对策. Journal of Cryptology, 23(1), 2010.

[95] Jo Van Bulck, Frank Piessens, and Raoul Strackx. SGX-step：一个精确控制Enclave执行的实用攻击框架. 在SysTEX, 2017.

[96] Venkatanathan Varadarajan, Thomas Ristenpart, and Michael Swift. 基于调度程序的跨VM侧信道防御. 在USENIX Security, 2014.

[97] James R. Vash, Bongjin Jung, and Rishan Tan. 分布式缓存代理中的系统范围静默和每个线程事务栅栏, 专利US8443148B2, 2013.

[98] Pepe Vila and Boris Köpf. Loophole：Chrome共享事件循环中的计时攻击. 在USENIX Security, 2017.

[99] VMware知识库. 安全考虑和禁止虚拟机间的透明页面共享 (2080735). https://kb.vmware.com/s/article/2080735. 访问日期：2020年6月17日.

[100] Daimeng Wang, Zhiyun Qian, Nael Abu-Ghazaleh, and Srikanth V Krishnamurthy. PAPP：预取器感知的Prime and Probe侧信道攻击. 在DAC, 2019.

[101] Yao Wang, Andrew Ferraiuolo, and G Edward Suh. 共享内存控制器的计时通道保护. 在HPCA, 2014.

[102] Zhenghong Wang and Ruby B Lee. 由于处理器架构导致的隐蔽和侧信道. 在ACSAC, 2006.

[103] Hassan MG Wassel, Ying Gao, Jason K Oberg, Ted Huffmire, Ryan Kastner, Frederic T Chong, and Timothy Sherwood. SurfNoC：一种低延迟且可证明无干扰的安全片上网络方法. ACM SIGARCH Computer Architecture News, 41(3), 2013.

[104] WikiChip. Sandy Bridge（客户端）- 微架构 - Intel. https://en.wikichip.org/wiki/intel/microarchitectures/sandy_bridge_(client). 访问日期：2020年6月17日.

[105] Zhenyu Wu, Zhang Xu, and Haining Wang. 超空间中的低语：云中的高速隐蔽通道攻击. 在USENIX Security, 2012.

[106] Mengjia Yan, Read Sprabery, Bhargava Gopireddy, Christopher Fletcher, Roy Campbell, and Josep Torrellas. 攻击目录而非缓存：非包含世界中的侧信道攻击. 在S&P, 2019.

[107] Fan Yao, Milos Doroslovacki, and Guru Venkataramani. 一致性协议状态是否容易受到信息泄漏？在HPCA, 2018.

[108] Yuval Yarom and Katrina Falkner. Flush+Reload：一种高分辨率、低噪声的L3缓存侧信道攻击. 在USENIX Security, 2014.

---

**实验结果**

我们使用了一个循环指针追逐列表来存储W_LLC地址。重复次数为100,000次，即所需的样本数量。

```c
repetitions = 100000; // 所需的样本数量
void **addr;
const int uint32_t samples[repetitions];
for (int i = 0; i < repetitions; i++) {
    // 代码逻辑
}
```

当`N > 2`时，我们观察到使用简单移动平均法难以识别击键事件（图10d）。进一步地，当`N > 4`时，我们观察到击键事件几乎完全无法从噪声中区分。

---

**图11：接收方执行命中LLC的加载操作，而发送方执行未命中LLC的加载操作时，环形互连竞争的热图。类似于图3，y轴表示发送方和接收方运行的核心，x轴表示它们执行加载操作的LLC切片。带有星号（*）的单元格表示切片竞争（当Rs = Ss时），灰色单元格表示环形互连的竞争（颜色越深表示竞争越大）。**

---

希望这些修改能帮助您更好地表达您的内容。如果有任何进一步的调整需求，请随时告知。