User: How to write an automation script using Python to monitor your server system and send an alert message when something goes wrong?
Assistant: The steps to write an automated script using Python to monitor the server system are as follows: 1. Confirm the indicators to be monitored, such as CPU usage, memory usage, disk space, etc., and select monitoring tools, such as Nagios, Zabbix, etc. You can also use Python's own modules for data collection, such as psutil, os, etc. 2. Write a Python script to send a fault report to the administrator through protocols such as HTTP/SMTP. 3. Set the script as a scheduled task or monitoring process, run it regularly within the specified time interval, and notify the administrator of the failure in time. The following is a sample code, which uses the psutil module to obtain memory usage and CPU usage: import psutil import smtplib from email.mime.text import MIMEText # Get CPU usage and memory usage cpu_percent = psutil.cpu_percent() mem_percent = psutil.virtual_memory().percent # Set the threshold cpu_threshold = 80 mem_threshold = 80 # Determine whether the threshold is exceeded if cpu_percent > cpu_threshold or mem_percent > mem_threshold: # Combined report information report = f"Alert: CPU usage is {cpu_percent}%, memory usage is {mem_percent}%." print(report) # send email sender = "sender@example.com" receiver = "receiver@example.com" password = "password" smtp_server = "smtp.example.com" smtp_port = 25 message = MIMEText(report) message["Subject"] = "Server Alert" message["From"] = sender message["To"] = receiver try: smtp_obj = smtplib.SMTP(smtp_server, smtp_port) smtp_obj.login(sender , password) smtp_obj.sendmail(sender, receiver, message.as_string()) print("Alert email sent!") except Exception as e: print(f"Failed to send alert email: {e}")