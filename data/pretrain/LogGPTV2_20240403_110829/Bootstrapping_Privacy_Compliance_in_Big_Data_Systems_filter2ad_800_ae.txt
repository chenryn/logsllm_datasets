### VI. Validation

We experimentally validate our approach along two primary dimensions: the scalability and coverage of the GROK data inventory, and the usability and expressiveness of the LEGALEASE language.

#### A. Scale

Figure 9 illustrates the number of new nodes added to the GROK data flow graph each day over a 100-day period in our operational system. On average, we process over 77,000 jobs daily, submitted by more than 7,000 entities across over 300 functional units. Daily, we handle an average of 1.1 million unique lines of code (including generated code), with 21% of this code changing on a day-to-day basis. This covers 46 million dynamic table schemas, and the processed tables are persisted to 32 million files. Building the fine-grained column-level GROK data dependency graph takes approximately 20 minutes daily on our production cluster. Performing data flow analysis over all data use on the cluster in a four-week period takes 10 minutes.

This 10-minute turnaround time is significant because it allows us to perform rapid what-if analyses for proposed policy changes, a capability that would be unattainable with manual reviews and audits, which typically operate on a timescale of months.

**Figure 9. Number of GROK data flow graph nodes added each day**

| Date       | Nodes Added (in millions) |
|------------|--------------------------|
| 08/10      | 55                       |
| 08/24      | 50                       |
| 09/07      | 45                       |
| 09/21      | 40                       |
| 10/05      | 35                       |
| 10/19      | 30                       |
| 11/02      | 25                       |

**Figure 10. Coverage of labeling by successive phases of GROK bootstrapping.**

| % Input Labeled | Verification | Dataflow | Baseline |
|-----------------|--------------|----------|----------|
| 0               | 0            | 0        | 0        |
| 20              | 20           | 20       | 20       |
| 40              | 40           | 40       | 40       |
| 60              | 60           | 60       | 60       |
| 80              | 80           | 80       | 80       |
| 100             | 100          | 100      | 100      |

#### B. Coverage

To understand the overall coverage of accurate DataType labels in GROK, we consider the coverage of the bootstrap syntactic analysis, improvements from data flow analysis, and the boost in coverage and confidence values from manual verification. Figure 10 shows how data flow analysis and targeted manual verification improve the GROK coverage relative to the baseline.

We establish a baseline by simulating a syntactic analysis with varying degrees of coverage on our real-world data dependency graph. Specifically, we first randomly select x% of all unique column names and flag them as correctly labeled in our simulation. We note that a linear baseline is not trivial since the overall graph nodes labeled correctly depend on the popularity of column names. There is no optimal point for the coverage vs. effort trade-off in syntactic analysis.

Improvements in the coverage of accurate labels in syntactic analysis translate linearly to overall improvement. The overall coverage is further enhanced using data flow analysis. Correctly labeling a node in a connected component allows the entire connected component to be labeled. By focusing on only 10% of the top connected components, we can boost overall coverage to 50%. However, labeling more connected components leads to diminishing returns.

The most significant improvement in overall coverage comes from limited manual verification. We analyze jobs to identify columns in sub-expressions in shared code modules that, if verified, allow us to flow the labels broadly. Manual verification of only 0.2% of code modules (maintained by 12 teams) and adding code annotations to 182 lines of source code (out of several million) increases overall coverage of accurate DataType labels to 60%.

#### C. Usability

To assess the usability of the LEGALEASE language for non-technical subject matter experts in privacy, we conducted an online survey targeting privacy champions at Microsoft. In the survey, we described the LEGALEASE language and asked participants to encode clauses of a privacy policy found online.

**Survey Design:**
- **Training Material:** We provided a one-page definition of LEGALEASE terms, example clauses, and lattice elements (Fig. 11a). This single page of text and tables served as the sole training tool.
- **Task:** After reading the training information, participants were presented with nine policy clauses to encode, increasing in complexity.
- **Support:** Participants could open the training information in a new window while completing the encoding tasks.

**Participants:**
- **Recruitment:** Participants (n = 12) were recruited via a company mailing list and were not compensated.
- **Background:** They were primarily privacy champions with experience ranging from 2 weeks to over 6 years.
- **Coding Experience:** Mean rating of 2.25 out of 5 (not experienced).
- **Reading Privacy Policies:** Mean rating of 3.83 out of 5 (moderately experienced).
- **Writing Privacy Policies:** Mean rating of 3.17 out of 5 (neither experienced nor inexperienced).

**Results:**
- **Correctness:** The majority of participants coded each policy clause correctly. The overall correctness rating was 4.65 (standard deviation 0.48).
- **Time Spent:** On average, participants spent 2.4 minutes reading the training information and 14.3 minutes encoding the clauses.

Overall, our sample of privacy champions was able to use LEGALEASE to code policy clauses with a high level of correctness and minimal training in a short amount of time.

**Figure 11. Summary of the Usability Survey**

| Question | Level of Correctness |
|----------|----------------------|
| Q1       | 4.5                  |
| Q2       | 4.7                  |
| Q3       | 4.6                  |
| Q4       | 4.8                  |
| Q5       | 4.7                  |
| Q6       | 4.6                  |
| Q7       | 4.5                  |
| Q8       | 4.7                  |
| Q9       | 4.6                  |

#### D. Expressiveness

To demonstrate the expressiveness of LEGALEASE, we present a complete encoding of externally-visible privacy policies for Google and Bing, focusing on data storage and use. We also highlight the LEGALEASE goal of usability through a side-by-side view of the English policy clauses and their LEGALEASE encodings (Tables V and VI).

**Table V. Encoding of Bing's Privacy Promises (as of October 2013)**

| Policy Clause                                                                                          | LEGALEASE Encoding                              |
|--------------------------------------------------------------------------------------------------------|-------------------------------------------------|
| "We remove the entirety of the IP address after 6 months."                                             | `DENY DataType IPaddress:Expired`               |
| "[We remove] cookies and other cross session identifiers, after 18 months."                            | `DENY DataType UniqueIdentifier:Expired`        |
| "We store search terms separately from any account information that directly identifies the user."    | `DENY DataType SearchQuery, PII InStore Store`  |
| "We do not use any of the information collected through the Bing Bar Experience Improvement Program to identify, contact or target advertising to you." | `DENY DataType BBEPData UseForPurpose Advertising` |
| "We take steps to store [information collected through the Bing Bar Experience Improvement Program] separately from any account information we may have that directly identifies you." | `DENY DataType BBEPData, PII InStore Store`     |
| "We delete the information collected through the Bing Bar Experience Program at eighteen months."      | `DENY DataType BBEPData:Expired`                |
| "We store page views, clicks and search terms used for ad targeting separately from contact information you may have provided or other data that directly identifies you." | `DENY DataType UserProfile, PII InStore Store`  |
| "Our advertising systems do not contain or use any information that can personally and directly identify you." | `DENY DataType PII UseForPurpose Advertising`   |
| "Before we [share some search query data], we remove all unique identifiers such as IP addresses and cookie IDs from the data." | `DENY DataType PII InStore AdStore`             |

**Table VI. Encoding of Google's Privacy Promises (as of October 2013)**

| Policy Clause                                                                                          | LEGALEASE Encoding                              |
|--------------------------------------------------------------------------------------------------------|-------------------------------------------------|
| "We do not share personal information with companies, organizations and individuals outside of Google unless one of the following circumstances apply:" | `DENY DataType PII UseForPurpose Sharing`       |
| "We require opt-in consent for the sharing of any sensitive personal information."                      | `EXCEPT ALLOW DataType PII:OptIn`               |
| "We provide personal information to our affiliates or other trusted businesses or persons to process it for us." | `EXCEPT ALLOW AccessByRole Affiliates`          |
| "We will share personal information [if necessary to] meet any applicable law, regulation, legal process or enforceable governmental request." | `EXCEPT ALLOW UseForPurpose Legal`              |
| "We will not combine DoubleClick cookie information with personally identifiable information unless we have your opt-in consent." | `DENY DataType DoubleClickData, PII EXCEPT ALLOW DataType DoubleClickData, PII:Optin` |

### VII. Discussion

In this section, we discuss some non-goals of LEGALEASE and GROK, as well as limitations and mitigating factors.

**Expressiveness:**
LEGALEASE does not support policies based on first-order temporal logic. It supports a restricted form of temporal policies, implemented with help from GROK. LEGALEASE is designed as a bridge between developers and policymakers in web service companies like Bing, and its expressiveness is tailored to policy elements encountered in practice that apply to big data systems. Policies related to cookie management and secure communication channels are beyond the scope of our analysis.

**Inference of Sensitive Data:**
Sensitive data can often be inferred from non-sensitive data. Unless explicitly labeled, GROK cannot detect such inferences. Careful selection of the DataType lattice can help reduce these risks by classifying together data that can be reasonably inferred from each other.

**Precision:**
The information flow analysis in GROK is conservative but not necessarily precise. A major source of imprecision is our overly conservative treatment of user-defined functions. In the future, we hope to leverage static code analysis of C# user-defined functions to make GROK more precise.

**False Negatives:**
The semantics of LEGALEASE are precise, and the information flow analysis in GROK is conservative. Therefore, bootstrapping that leads to more coverage of the graph with labels generally implies a reduction in false positives. However, due to the lack of ground truth for labels, we are unable to characterize the exact nature of false negatives.