首先，你要使用 GNOME 扩展应用程序，来**关闭 Ubuntu Dock 扩展**。
![Disable Ubuntu Dock](/data/attachment/album/202210/29/171416mmad9404m0itftia.png)
如果 Dash to Dock 扩展还尚未运行的话，请先运行它。
然后，右键单击在底部显示的 “Dash to Dock” 按钮，然后选择 “Dash to Dock Settings”。
![select dash to dock settings](/data/attachment/album/202210/29/171417fmszp9voi9ibs599.png)
在设置中，你需要调整一些小东西。
首先，使用滑块，来缩小图标的大小。
![setting dash to dock icon size](/data/attachment/album/202210/29/171417fzskr4kuhoszhrsi.png)
之后，你需要减少程序坞的不透明度，我更喜欢完全透明的程序坞。
所以，我将不透明度设置为  固定   fixed ，并使用滑块将其降至零，如下图所示。
![opacity setting for dash to dock](/data/attachment/album/202210/29/171418waxhsl513fgxrhns.png)
### GNOME 终端的设置
你想得到的 Linux 桌面的主要变化是自定义**模糊且有一定透明度**的 `neofetch` 外观（或 shell-color 脚本外观）。
我们之前在 GNOME  优化   Tweaks  工具中应用了等宽字体，因此 GNOME 终端中的字体也会被更改。
首先，从  偏好设置   preferences  中创建一个新的配置文件。
![select preferences from hamburger menu](/data/attachment/album/202210/29/171418pmm1n2xcbonb1xyw.png)
单击 `+` ，来创建一个新配置文件。输入文件的名称，并点击  创建   create ，如下所示：
![create new profile in gnome terminal](/data/attachment/album/202210/29/171419njqt4tfv93thif9d.png)
在这个新配置文件中，更改透明度设置，将透明度的滑块放在中间，如下图所示：
![set transperancy to gnome terminal](/data/attachment/album/202210/29/171419n7dmh1mar14h3hps.png)
完成后，要将此配置文件设置为默认的配置文件，单击与新配置文件关联的三角形按钮，然后选择 “ 设置为默认   Set as Default ”。
![set new profile as default in gnome terminal](/data/attachment/album/202210/29/171419brorrig29n9zsaic.png)
#### 设置模糊效果
上述的步骤只会将终端变成一个透明的 shell。但是，如果你还需要有利于提高可见性的模糊效果，你需要进入到 “Blur my Shell” 扩展进行设置。
![blur my shell extension settings](/data/attachment/album/202210/29/171420mx5nl0ihe0ic3ifc.png)
首先，进入到  应用程序   Application  菜单。现在，确保终端已打开，并置于屏幕明显的位置。单击  添加   Add  窗口，然后选择 GNOME 终端窗口，以设置模糊效果。请注意：此功能还处于测试阶段，因此可能会出现一些小故障。
![applying blur effect to selected windows](/data/attachment/album/202210/29/171420sbjlspt6q35nb2en.png)
也可以对其他应用程序（例如 Nautilus 文件管理器）重复此过程，来设置模糊效果。
#### 定制 Neofetch
Neofetch 的最佳功能之一是其可定制性。你可以使用多种方法来调整 Neofetch 的外观。为了更有万圣节氛围，我选择了一个南瓜图像，来代替发行版的徽标。
Neofetch 提供以各种格式添加自定义图像的功能。为此，也有各种供支持的后端。在这里，我使用 jp2a 后端，它将使用 [转换成 ASCII 的图片](https://itsfoss.com/ascii-image-converter/)。
```
neofetch --jp2a /path/to/your/image/file.png
```
![neofetch with custom backend](/data/attachment/album/202210/29/171421ezunuunu4ounnron.png)
上述命令将创建一个带有自定义图片的 Neofetch 实例。你可以将此命令写入你的 `.bashrc` 文件，以便永久放置该图片。
*不幸的是，这在我的 Wayland 实例上并不起作用。*
#### 自定义 Shell-Color 脚本
如果你安装的是 Shell Color 脚本工具，则会有多种 shell 脚本。要列出可用的脚本，请使用命令：
```
colorscript -l
```
![ghosts shell color script](/data/attachment/album/202210/29/171421hsvk222nm2mkjm2n.png)
你可以通过将 `colorscript random` 写入你的 `.bashrc` 文件，以每次都获得一个随机的颜色脚本，或者通过将`colorscript -e `写入你的 `.bashrc` 文件，来得到一个特定的颜色脚本。
### 设置 Conky
我使用的是 Deviantart 的 [Grey-Minimalistic](https://www.deviantart.com/bryantlloyd/art/Grey-Minimalistic-634726564) conky 主题。Conky 主题的每种类型都有不同的安装方法。因此，如果你想要使用另一个 Conky 文件的话，请遵循它的 `README` 文件中描述的设置方法，进行设置。
解压 Conky 主题文件，里面有几个文件夹。首先，你需要安装关联的图标和字体，也就是说，使用  字体管理器   font-manager  安装给定的字体。接着，将图标文件夹拷贝，并粘贴到 `~/.icons` 文件夹。
![copy and paste conky files to home directory](/data/attachment/album/202210/29/171421suke1hfguujzkf6c.png)
然后，进入 Conky 文件夹。确保你已 [启用查看隐藏文件](https://itsfoss.com/hide-folders-and-show-hidden-files-in-ubuntu-beginner-trick/)，将 `.conkyrc` 文件和 `.conky-vision-icons` 文件复制到你的主目录，如上图所示。
现在，启动 Conky，看起来就变成下图这样了。
![conky theme applied](/data/attachment/album/202210/29/171422zfzjgdv9g993dkdm.png)
将 Conky 添加到 [自启动应用程序列表](https://itsfoss.com/manage-startup-applications-ubuntu/) 中，以便在每次开机时都能自启动。
![add conky to the list of startup applications](/data/attachment/album/202210/29/171422mkc0zm9a0nceprpe.png)
### 更改壁纸
快要完成啦。你现在唯一需要做的就是 [更改背景壁纸](https://itsfoss.com/change-wallpaper-ubuntu/)。我相信你之前已经下载好了有万圣节幽灵气氛的壁纸，右键 “ 设置为壁纸   Set as Wallpaper ” 就好啦。
![set image as wallpaper from nautilus](/data/attachment/album/202210/29/171423lixdjft7boikbqxz.png)
### 看看最终成果吧！
如果你遵循上面的大多数步骤的话，你就会得到一个与以下截图相似的桌面。
![ubuntu halloween theme final look](/data/attachment/album/202210/29/171423c9nvhf4f99h3n969.jpg)
这个桌面对于万圣节来说够吓人了吗？你觉得怎么样？在评论区中告诉我吧。
---
via: 
作者：[Sreenath](https://itsfoss.com/author/sreenath/) 选题：[lkxed](https://github.com/lkxed) 译者：[chai001125](https://github.com/chai001125) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出