statement 
Card%issuer%
3. location 
verification 
request 
2. payment 
protocol 
5. transaction 
authorization 
Point%of%sale%
terminal%
1. payment 
protocol 
Payment%card%
Fig. 3: Overview of location-based second-factor authentica-
tion for payments at point of sale. During a payment trans-
action, the card issuer queries the user’s smartphone for its
location over an Internet connection.
V. OUR SOLUTION
We use the location of the user’s phone as the second
authentication factor during a transaction at a point of sale.
Our solution leverages system-wide TEEs available on mobile
devices to provide card issuers with trustworthy location
information despite a potentially compromised mobile OS on
the user’s smartphone. We focus on ARM TrustZone since it
is currently the most widely deployed system-wide TEE on
mobile devices. The schemes we propose can, nevertheless,
be used with other system-wide TEEs as well.
Figure 3 shows an overview of our scheme. Prior to
payments at point of sales, we assume that the user has already
installed two applications provided by the card issuer on his
device: a companion application running in the normal world
and a trusted application running in the secure world. Addi-
tionally, the user has also completed an enrollment scheme (see
below), and the card issuer has established a binding between
the user and the TEE on his device. During payment, the user
inserts or swipes his payment card in a point of sale terminal
and optionally enters its PIN code (step 1). The terminal sends
the transaction information to the card issuer (step 2). The
card issuer contacts the TEE on the user’s smartphone (step
3), which replies with a location statement (step 4). The card
issuer then checks whether the location statement was sent by
the correct device and compares it against the location of the
terminal. Finally, the card issuer sends the transaction decision
(authorize or deny) to the terminal (step 5).
We leverage location data due to two main reasons. First,
we want a solution that does not change the user interaction
model and the hardware infrastructure (see Section II). We
therefore resort to the sensing capabilities of modern smart-
phones. Second, among available smartphone sensors, GPS
units are almost ubiquitous, and previous work has shown that
GPS coordinates are a practical and useful means that card
issuers can leverage to identify fraudulent transactions [2], [3].
Our solution could, in principle, use any sensor available on
the device.
4
Card%
issuer%
User%
1. user ID 
User smartphone 
Companion%
applica0on%
Trusted%
applica0on%
Baseband%
2. trigger  
3. query 
6. user ID, signed IMSI,  
device certificate 
5. IMSI signed using 
private device key 
4. IMSI and  
network status 
translate%phone%
number%to%IMSI%
7. service key encrypted  
using public device key 
seal%service%key%
Fig. 4: Signed-IMSI enrollment scheme. Gray boxes are trusted
entities. The trusted application fetches the IMSI of the in-
stalled SIM card from the baseband processor. It signs the
IMSI with the private device key and forwards it to the card
issuer (through the companion application). The card issuer
can link the IMSI to a previously registered phone number.
A. User Enrollment
Before the card issuer can verify the location of the user’s
smartphone, it needs to bind the user identity to the TEE
running on his mobile device. To achieve this binding, we
present two enrollment schemes. The signed-IMSI enrollment
scheme is easier to deploy but can only withstand software
attackers;
the baseband-assisted enrollment scheme is also
secure against hardware attackers. However, it requires minor
software changes to the baseband OS. Both schemes leverage
the implicit binding between the user and his SIM card. They
require a one-time registration in which the user provides his
phone number to the card issuer in a reliable manner, for
example, by visiting his bank’s branch in person. The goal of
both enrollment schemes is to establish a shared service key,
between the card issuer and the trusted application running in
the TEE on the user’s device.
Signed-IMSI enrollment
The card issuer uses the SIM identiﬁer (i.e., the IMSI) and
the mobile network infrastructure to verify that the enrolling
device is indeed the one where the user’s SIM card is installed.
Figure 4 illustrates the steps of the enrollment scheme.
The user starts the companion application and provides
his user ID, e.g., the bank customer number (step 1). This
application triggers the execution of the trusted application
(step 2) that queries the baseband OS for the IMSI of the
SIM card (steps 3-4).1 The trusted application also veriﬁes
from the baseband OS that the device is connected to the
mobile network, to discard the possibility of a fake SIM card
reporting a false IMSI.2 The trusted application signs the IMSI
1The IMSI is needed for cellular protocols and is available to the baseband
OS through standardized interfaces.
2A false SIM card lacks the correct keying material to connect to the cellular
network
User smartphone 
Companion%
applica0on%
Trusted%
applica0on%
Baseband%
Card(
issuer(
1. nonce 
Card%
issuer%
User%
1. user ID 
2. user ID 
3. enrollment key 
User smartphone 
Companion(
applica+on((
Trusted(
applica+on(
GPS(
peripheral(
2. nonce 
5. location and 
nonce signed with 
service key 
3. read 
4. location 
4. IMEI authenticated using 
enrollment key 
6. signed location and 
nonce 
5. authenticated IMEI, 
device certificate 
compare%IMEI%to%
device%cer0ﬁcate%
6. service key encrypted 
using public device key 
seal%service%key%
Fig. 6: Location veriﬁcation is a simple challenge-response
protocol using the service key established during enrollment.
Gray boxes are trusted entities. The card issuer sends a
nonce; the trusted application reads the GPS coordinates and
authenticates them together with the nonce.
Fig. 5: Baseband-assisted enrollment scheme. Gray boxes are
trusted entities. The card issuer sends an SMS message with
an enrollment key (dotted line); the baseband OS uses that
key to authenticate the device’s IMEI and deletes the key. The
card issuer can check the authenticated IMEI against the one
received in the device certiﬁcate.
using its device private key (step 5) and passes the signature
to the companion application. At this point the companion
application sends the signed IMSI, the user ID, and the device
certiﬁcate to the card issuer over the Internet (step 6). The
card issuer uses the received user ID to retrieve the user’s
phone number and queries the mobile infrastructure for the
corresponding IMSI (see Section VII for details). The card
issuer checks that the IMSI received from the user’s phone
matches the one reported by the mobile infrastructure. If the
two IMSIs match, the card issuer proceeds to verify (i) the
validity of the device public key using the device certiﬁcate and
the public key of the manufacturer, and (ii) the validity of the
signature over the IMSI. If all checks are successful, the card
issuer picks a fresh service key and encrypts it under the device
public key; the ciphertext is sent to the user’s smartphone (step
7). The companion application passes the encrypted service
key to the trusted application that decrypts it using the private
part of the device key and encrypts it using a symmetric storage
key available only in the secure world (sealing). The sealed
service key can be stored by the companion application in the
normal world.
Baseband-assisted Enrollment
In this scheme the card issuer sends an SMS message
carrying an enrollment key to the phone number provided by
the user during registration. We augment the baseband OS to
use this key and compute an authentication tag on the device’s
IMEI.3 The steps of this scheme are in Figure 5.
The user starts the companion application and provides his
user ID (step 1), which is forwarded to the card issuer over
the Internet (step 2). The card issuer sends an enrollment SMS
message to the corresponding user’s phone number, containing
3The IMEI is bound to the device key by the device certiﬁcate.
a fresh enrollment key (step 3). The baseband OS on the user’s
device intercepts the SMS message and extracts the enrollment
key. The baseband OS uses the enrollment key to authenticate
the device’s IMEI,4 provides the authentication tag to the
companion application (step 4), and deletes the enrollment
key. The companion application forwards the authenticated
IMEI and the device certiﬁcate to the card issuer (step 5).
The card issuer checks (i) the validity of the device certiﬁcate,
(ii) the validity of the authentication tag, and (iii) that the
IMEI authenticated with the enrollment key matches the one
in the received certiﬁcate. If all checks are successful, the
card issuer picks a fresh service key and encrypts it under
the device public key extracted from the device certiﬁcate;
the ciphertext is sent to the user’s smartphone (step 6). The
companion application passes the encrypted service key to the
trusted application that seals it.
B. Location Veriﬁcation
After successful enrollment,
the user’s device shares a
service key with the card issuer that can be used to create an
authentic channel between the two parties. During a transaction
payment, therefore, the card issuer can query the device for an
authenticated location statement. As detailed in Figure 6, the
location veriﬁcation is a simple challenge-response protocol.
The card issuer picks a fresh nonce (for replay protection)
and sends it to the trusted application through the companion
application (steps 1-2).5 The trusted application reads the
location coordinates from the device GPS unit (steps 3-4),
unseals the service key and uses it to authenticate the nonce
and the current coordinates. The authenticated message is sent
4The IMEI is read from a read-only memory on the device, written by
the device manufacturer. The baseband OS has access to the IMEI to handle
cellular communication.
5Alternatively, the card issuer could verify the freshness of location state-
ments checking the timestamp provided by the GPS unit. As one of our goals is
not to change the payment transaction user experience, the location veriﬁcation
must be initiated by the card issuer. Thus, a location veriﬁcation requires the
exchange of two messages between the card issuer and the user smartphone in
either cases (i.e., usage of the GPS timestamp does not allow a more efﬁcient
implementation).
5
back to the card issuer through the companion application
(steps 5-6). The card issuer veriﬁes the authenticity of the
location statement using the service key. At this point, the card
issuer matches the location of the user’s smartphone against the
one of the terminal used for the transaction, to decide whether
to authorize or deny the transaction.
We note that neither the companion application nor the
trusted application need to be continuously running in the
background. The execution of the trusted application is trig-
gered by the companion application which, in turn, is started
by the mobile OS when receiving a request for that application
(e.g., through a push notiﬁcation).
C. Device Migration
Both enrollment schemes support device migration by re-
running the enrollment operation. When the user switches to
a new device and moves his SIM card to it, he can start the
enrollment process from the companion application of the new
device. As a result of either the signed-IMSI or the baseband-
assisted enrollment, the card issuer invalidates the previously
used service key, re-associates the user identity to the device
key of the new device, and sends a fresh service key to the TEE
on that device. Device migration does not require out-of-band
communication with the card issuer as long as the user keeps
his phone number (even if he gets a new SIM card associated
with his old phone number).
VI. SECURITY ANALYSIS
Recall that our adversary holds the victim’s payment card
(or a clone) and his goal is to make fraudulent transactions at
points of sale. The adversary does not have physical access to
the victim’s smartphone but he does have remote control over
that smartphone’s mobile OS.
With the deployment of our system, the adversary must
convince the card issuer that the enrolled user’s smartphone
is close to the terminal where the fraudulent transaction is
taking place. To do so, the adversary must either succeed in
an impersonation attack during enrollment or tamper with the
location veriﬁcation protocol.6
In an impersonation attack, the adversary must halt the
enrollment scheme on the victim’s device (he can do so since
he controls that device’s mobile OS), and use the victim’s ID
to run the enrollment scheme on a device that he owns. In
particular, the adversary has two possible strategies: he must
induce the card issuer to encrypt the service key either
(a)
(b)
under the public key of the adversary’s device (the
adversary will thus be able to make fraudulent trans-
actions if his phone is in proximity of the terminal
where the transaction takes place), or
under a public key for which the adversary knows
the private key (so that the adversary will be able to
generate arbitrary location statements when the card
issuer requests them).
In the following we provide an informal analysis of the
enrollment schemes, with respect to the two strategies above.
6We acknowledge that the adversary may still succeed in his goal if the
fraudulent transaction takes place close to where the victim’s device is located.
Finally, we argue that the location veriﬁcation mechanism is
secure after successful user enrollment.
A. Signed-IMSI enrollment
This enrollment scheme is secure against a software at-
tacker as deﬁned in Section IV. This attacker can control the
mobile OS on any device (including the victim’s) but does not
have sufﬁcient capabilities to control any baseband OS or the
TrustZone secure world execution environment.
Strategy (a) requires the adversary to start an enrollment
scheme on his device using the victim’s ID. Since the card
issuer knows the victim’s phone number and can retrieve
the corresponding IMSI, the adversary must force the trusted
application on his device to send the IMSI of the victim’s
SIM card. To do so, the adversary may use a custom SIM
card where he can manipulate the IMSI. However, such SIM
card misses the key that
the victim’s SIM card uses for
authentication with the network operator and, thus, cannot
connect to the cellular network. When the trusted application
on the adversary’s device queries the baseband OS for cellular
network status, it detects that the phone is not connected and
will abort the enrollment scheme.
Strategy (b) requires the adversary to hold a private key
corresponding to a valid (i.e., certiﬁed by the device man-
ufacturer) public key. This is not possible since a software
adversary cannot compromise the ARM TrustZone architecture
of any device and leak the secrets stored therein.
B. Baseband-assisted Enrollment
This enrollment scheme is secure against an hardware
attacker, as deﬁned in Section IV, that controls the mobile OS
on any device (including the victim’s), as well as the baseband
OS and the TrustZone secure world execution environment on
devices to which he has physical access.
Strategies (a) and (b) require the adversary to either inter-
cept the enrollment SMS message and extract the enrollment
key, or provide a crafted IMEI to the baseband OS on the
victim’s device. Since the adversary does not control the GSM
network, SMS messages cannot be intercepted. Furthermore,
the enrollment key is deleted by the baseband OS, so that the
normal world cannot read it. Finally, the IMEI is stored on
read-only memory during device manufacturing [16], thus the
adversary cannot feed an arbitrary IMEI to the baseband OS
on the victim’s device.
C. Location Veriﬁcation
After a successful enrollment, the trusted application run-
ning in the secure world on the victim’s device shares a
service key with the card issuer. At this time, the adversary
can only try to force the victim’s device to report a location
statement with GPS coordinates matching the location where
the fraudulent
transaction takes place. Since none of the
considered adversaries (i.e., software and hardware) control the
secure world on the victim’s device, the adversary can only try
to change the coordinates provided by the GPS unit on that
device. We note that GPS units on modern smartphones only
allow to reset the GPS sensor. That is, the adversary cannot
feed the trusted application on the user’s phone with arbitrary
6
coordinates. The trusted application can, nevertheless, detect a
reset and restart the GPS sensor.
ﬁrmware (layer1.compalram.bin) that is installed on