Section 4.3, e.g., H3 requests making up 2 % of all requests), and (3)
our measurements being conducted from a different vantage point
seeing different load-balancing (cf. Section 5.3.1 + Appendix A.4).
Takeaway. Redundant connections are no story of the past. 76 % of
all HTTP Archive and 95 % of all Alexa Top 100k HTTP/2 websites
open redundant connections. The majority of websites open even more
than one additional connection, potentially hindering HTTP/2 features
and degrading performance.
5.2 Causes of Redundant Connections
To further understand why Connection Reuse is ineffective and
how it can be supported, we next analyze failure reasons in Table 1.
Please note again, the sum of causes can exceed the number of sites
and connections (cf. Sec. 4.1).
We can see in both datasets that differing IPs are the major cause
of missing Connection Reuse. 70 % / 88 % of websites of the HTTP
Archive / Alexa Top 100k with at least one HTTP/2 request are
affected. Connection-wise, 22 % / 28 % of connections are affected.
We later analyze which parties are causing these redundancies.
0123456789101112131415RedundantConnections0.000.250.500.751.001-CDFSitesA(cid:29)ectedHTTPArchiveEndlessAlexaTop100kAlexaw/oFetchSharding and HTTP/2 Connection Reuse Revisited:
Why Are There Still Redundant Connections?
IMC ’21, November 2–4, 2021, Virtual Event, USA
e
s
u
a
C
I
t
r
e
P C
CERT = ≠
IP ≠ =
=
Redund.
Total
CRED =
HAR Endless
Conns.
Sites
592.95 k
885.40 k
4.10 M 13.85 M
2.54 M
3.91 M
4.49 M 17.33 M
5.88 M 63.55 M
Table 1: Counts of occurring causes of redundant connections and affected websites
HAR Immediate
Conns.
Sites
390.56 k
299.71 k
1.73 M
4.59 M
1.65 M
1.35 M
2.26 M
6.42 M
5.88 M 63.55 M
Alexa Endless
Conns.
Sites
23.98 k
14.17 k
71.87 k
460.35 k
138.22 k
64.98 k
579.61 k
77.90 k
81.55 k
1.65 M
Conns.
23.63 k
458.46 k
132.67 k
574.85 k
1.65 M
Sites
14.13 k
71.86 k
64.83 k
77.88 k
81.55 k
Alexa
Alexa w/o Fetch
Conns.
Sites
19.30 k
13.88 k
71.35 k
416.91 k
0
0
429.44 k
71.70 k
81.55 k
1.50 M
In contrast, CRED, so Connection Reuse actually working but
browsers following the Fetch standard still opening new connec-
tions, could be easily reduced by few, well-known browser vendors
given that its privacy benefits are dubious [22] and some vendors
already refrain its implementation. It is hence fortunate that it af-
fects the second-most websites (43 % / 79 %). However, it affects far
fewer connections than IP, namely only 6 % / 8 %.
Lastly, the CERT cause, i.e., domain sharding with disjunct certifi-
cates, constitutes a minority with 10 % / 17 % affected websites and
1 % / 1 % affected connections. Similar to IP, it is unclear whether
few or many parties cause this effect.
Takeaway. We can see that most sharded connections are of cause IP,
so domain sharding with divergent IPs, for which it is unclear who
causes / can rectify it. In contrast, roughly half of all websites are
affected by cause CRED, pronouncing the effect of the Fetch Standard,
which can be easily adapted by few browser vendors. Non-overlapping
certificates affect a smaller minority of websites and connections.
5.3 Unraveling Causes for Redundancy
To dive deeper into who is causing redundancy, we next analyze
the causes in detail, beginning with the majority.
IP: SAN included domains with differing IPs. Table 2 shows
5.3.1
the top 4 origins for redundant connections of cause IP with their
potentially reusable connections’ origins.
We can see that the results for the HTTP Archive and our mea-
surements overlap well, but we can, of course, see differences in
their rank of occurrence (↑) and previous connections. We attribute
this to (1) the different websites but also to (2) the differing vantage
points and measurement times and hence differing load which influ-
ences DNS-based load-balancing (We further look into the influence
of DNS-based load-balancing in Appendix A.4).
Mainly, two parties are involved: Google, with Google Analytics
being the top origin in both datasets and domains indicating adver-
tisements, and Facebook. These two parties also occur as top ASs
being involved in IP redundant connections (cf. Appendix A.2)
We checked website samples where the first entry occurred and
found the following behavior: The website downloads a Javascript
from googletagmanager.com (GT), which then downloads a script
from google-analytics.com (GA), loading further resources. Both
domains were included in their respective connection’s certificate
but resolved to slightly different IPs in the same /24 network in our
tests. When requesting the GA script on the GT IP, we received the
same resource, i.e., only a single connection should suffice.
We attribute this effect to unsynchronized DNS load-balancing
of both domains (cf. Appendix A.4). I.e., one domain (seen from our
Origin
Alexa 100k
↑ Conns.
52.31 k
1
36.93 k
25.05 k
25.02 k
17.03 k
10.19 k
16.99 k
6
4
2
HTTP Archive
↑ Conns.
2.25 M
1
2.12 M
1.52 M
1.51 M
3 615.45 k
398.41 k
4 606.59 k
418.69 k
6
www.google-analytics.com
prev: www.googletagmanager.com
www.facebook.com
prev: connect.facebook.net
googleads.g.doubleclick.net
prev: pagead2.googlesyndication.com
pagead2.googlesyndication.com
prev: googleads.g.doubleclick.net
www.google.de
27.74 k
18.61 k
prev: www.gstatic.com
apis.google.com
26.10 k
25.91 k
prev: www.gstatic.com
Table 2: Top 4 origins, their redundant connections, rank (↑)
and reusable previous connections for cause IP.
82 14.25 k
12 255
7
2
3
vantage point) is independently load-balanced from another. While
we use our own recursive resolver, load-balanced resolvers with
differing caches can also cause this effect.
We observed a similar result for samples of the Facebook case,
where connect.facebook.net (CFB) and www.facebook.com (WFB)
resolve to slightly different IPs in the same /24 network. A Javascript
is loaded from CFB which initiates loading a 1x1px GIF from WFB.
The script from CFB can also be requested on WFB’s IP, however
not vice-versa. I.e., there seems to be a real resource distribution in
the background in that direction. Nevertheless, ignoring potential
scalability issues, resolving CFB to WFB would reduce redundancy.
The same can be found for hotjar.com (Web Analytics) which
was the next non-Google nor Facebook case (cf. Appendix Table 12).
An exception are the Wordpress statistics tools and extensions of
wp.com (c0.wp.com, stats.wp.com) which point to different IPs in
different /24 networks which are not interchangeable.
We cannot rule out setup mistakes or that content is truly dis-
tributed for the other origins, but load-balancing can similarly
explain those results. Adjusting the domains to point to the same
CNAME to exploit recursive resolver caches to route requests to
the same connection could help here or usage of Anycast CDNs [5]
(which could point each customer to exactly the same IP for ev-
ery of their domains). Alternatively, adoption of the HTTP Origin
Frame [18] could be a sleek way to reroute requests to the same
connection and avoid redundancy.
Takeaway. Major drivers for IP cases are embedded tracking / ad
scripts from Google and Facebook. I.e., only a few parties have to
adapt here to reduce the total amount of redundancy significantly.
296
IMC ’21, November 2–4, 2021, Virtual Event, USA
Sander et al.
HTTP Archive
Alexa 100k
Certificate Issuer
↑ Conns. Domains
63.13 k
1 302.47 k
2 282.63 k
3.24 k
14.86 k
3 130.07 k
16.78 k
38.21 k
4
11.55 k
29.70 k
5
2.28 k
22.72 k
6
8
16.22 k
2.31 k
Let’s Encrypt
Google Trust Services
DigiCert Inc
Sectigo Limited
Cloudflare, Inc.
GlobalSign nv-sa
Amazon
Table 3: Top 5 certificate issuers w.r.t. redundant connections
of cause CERT and unique domains.
↑ Conns. Domains
2.36 k
2
1
239
651
3
345
6
358
7
296
4
5
347
6.43 k
8.75 k
4.04 k
782
760
1.07 k
841
Exemplarily, we found this effect to be rooted in unsynchronized DNS-
based load-balancing.
5.3.2 CERT: SAN excluded domains with equal IPs. Continuing,
we shed light on CERT cases to see why redundant connections
occur due to disjunct certificates on the same hosts. We begin by
analyzing who issued the certificates; Table 3 shows the top certifi-
cate issuers according to redundant connection and the number of
unique domains. Again, both datasets show a considerable overlap:
Let’s Encrypt (LE) and Google Trust Services (GTS) are the top two
issuers w.r.t. redundancy. Jointly, they form the majority of CERT
cases mirroring their overall market shares either w.r.t. connections
or domains, which we show in detail in Appendix A.1. Hence, for
both issuers, we are interested in the involved parties.
We can see differences in the number of occurring unique do-
mains involved in the redundant connections. GTS occurs for fewer
domains, but with a high volume of connections, i.e., they are heavy-
hitters. In contrast, other issuers do not see such a concentration.
Hence, Google alone could significantly reduce the causes for CERT
redundancy by changing their certificate issuing policies.
Table 4, showing the top domains involved in CERT cases, un-
derlines this hypothesis. Google ad domains of the top 5 make up
65 % / 63 % of connections with certs issued by GTS. While we see
the highest redundancy for an LE-issued domain (accounting for
33 % / 23 % of connections for LE), the distribution is more long-
tailed, i.e., the remaining redundancies are spread across many
more small websites with potentially different operators. Still, LE
is in a position to educate and encourage users, e.g., by nudging
users to merge subdomains configured with certbot [7].
Takeaway. Google Trust Services and Let’s Encrypt issue the major-
ity of disjunct certificates for redundant connections of cause CERT.
Google occurs for few frequently used domains, which are again re-
lated to ads. A single party can make a big change. Let’s Encrypt,
however, occurs for many domains, which are less frequently used.
They potentially involve many small website operators who are prob-
ably not aware of their certificates disallowing reuse. Quick changes
with significant impact are not very likely.
5.3.3 CRED: SAN included domains with equal IPs. The last cause,
CRED, represents connections that could be reused w.r.t. HTTP/2
Connection Reuse, but effectively are not. 6 % / 8 % of connections
are affected by this scenario; 90 % / 60 % of these even connect to
the same domain again.
297
Domain
2
Alexa 100k
↑ Conns.
1.46 k
3
1.46 k
1.56 k
487
935
692
1.61 k
797
6
1
2
HTTP Archive
↑ Conns.
100.31 k
1
100.04 k
83.73 k
43.99 k
52.66 k
51.05 k
48.43 k
46.82 k
45.60 k
45.57 k
81
505
3
5
Issuer
LE
GTS
GTS
fast.a.klaviyo.com
prev: static.klaviyo.com
adservice.google.com
prev: pagead2.googlesyndication.com
googleads.g.doubleclick.net
prev: www.googleadservices.com
pagead2.googlesyndication.com
prev: adservice.google.com
images.squarespace-cdn.com
prev: static1.squarespace.com
adservice.google.de
prev: pagead2.googlesyndication.com
sync.targeting.unrulymedia.com
prev: sync.1rx.io
Table 4: Top 5 domains encountered for redundant connec-
tions to the same IPs due to absent SAN entries (CERT).
1.37 k
498
1.33 k
1.33 k
GTS
GTS
DCI
DCI
4
4
5
We suspect the Fetch Standard’s credentials flag (cf. Sec. 3) to
be responsible for this effect, which has the advantage that only a
few browser vendors would have to adapt. To rule out other effects,
Figure 2 and Table 1 show results when patching Chromium to
ignore this flag (internally named privacy_mode [12]).
We can see that the CRED cases vanish completely, but, at first
look counter-intuitively, other causes also reduce. We attribute this
part to our limitations, but mainly to cases with multiple causes
that now disappear. This can also be seen in the absolute difference
of all connections which is closer to the CRED difference in contrast
to ∼40 k vanished IP cases.