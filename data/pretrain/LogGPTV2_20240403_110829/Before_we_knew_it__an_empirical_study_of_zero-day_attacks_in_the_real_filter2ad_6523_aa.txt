title:Before we knew it: an empirical study of zero-day attacks in the real
world
author:Leyla Bilge and
Tudor Dumitras
Before We Knew It
An Empirical Study of Zero-Day Attacks In The Real World
Leyla Bilge
Symantec Research Labs
Tudor Dumitras,
Symantec Research Labs
ABSTRACT
Little is known about the duration and prevalence of zero-
day attacks, which exploit vulnerabilities that have not been
disclosed publicly. Knowledge of new vulnerabilities gives
cyber criminals a free pass to attack any target of their
choosing, while remaining undetected. Unfortunately, these
serious threats are diﬃcult to analyze, because, in general,
data is not available until after an attack is discovered.
Moreover, zero-day attacks are rare events that are unlikely
to be observed in honeypots or in lab experiments.
In this paper, we describe a method for automatically
identifying zero-day attacks from ﬁeld-gathered data that
records when benign and malicious binaries are downloaded
on 11 million real hosts around the world. Searching this
data set for malicious ﬁles that exploit known vulnerabili-
ties indicates which ﬁles appeared on the Internet before the
corresponding vulnerabilities were disclosed. We identify 18
vulnerabilities exploited before disclosure, of which 11 were
not previously known to have been employed in zero-day at-
tacks. We also ﬁnd that a typical zero-day attack lasts 312
days on average and that, after vulnerabilities are disclosed
publicly, the volume of attacks exploiting them increases by
up to 5 orders of magnitude.
Categories and Subject Descriptors
D.2.4 [Software Engineering]: Software/Program Veriﬁ-
cation—Statistical methods; K.4.1 [Computers and So-
ciety]: Public Policy Issues—Abuse and Crime Involving
Computers; K.6.5 [Management of Computing and In-
formation Systems]: Security and Protection—Invasive
Software
General Terms
Measurement, Security
Keywords
Zero-day attacks, Vulnerabilities, Full disclosure
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’12, October 16–18, 2012, Raleigh, North Carolina, USA.
Copyright 2012 ACM 978-1-4503-1651-4/12/10 ...$15.00.
INTRODUCTION
1.
A zero-day attack is a cyber attack exploiting a vulnerabil-
ity that has not been disclosed publicly. There is almost no
defense against a zero-day attack: while the vulnerability
remains unknown, the software aﬀected cannot be patched
and anti-virus products cannot detect the attack through
signature-based scanning. For cyber criminals, unpatched
vulnerabilities in popular software, such as Microsoft Oﬃce
or Adobe Flash, represent a free pass to any target they
might wish to attack, from Fortune 500 companies to mil-
lions of consumer PCs around the world. For this reason, the
market value of a new vulnerability ranges between $5,000–
$250,000 [15, 20]. Examples of notable zero-day attacks in-
clude the 2010 Hydraq trojan, also known as the “Aurora”
attack that aimed to steal information from several compa-
nies [16], the 2010 Stuxnet worm, which combined four zero-
day vulnerabilities to target industrial control systems [11],
and the 2011 attack against RSA [27]. Unfortunately, very
little is known about zero-day attacks because, in general,
data is not available until after the attacks are discovered.
Prior studies rely on indirect measurements (e.g., analyzing
patches and exploits) or the post-mortem analysis of isolated
incidents, and they do not shed light on the the duration,
prevalence and characteristics of zero-day attacks.
Zero-day vulnerabilities are believed to be used primarily
for carrying out targeted attacks, based on the post-mortem
analysis of the vulnerabilities that security analysts have
connected to zero-day attacks [37]. However, prior research
has focused on the entire window of exposure to a vulnera-
bility, which lasts until all vulnerable hosts are patched and
which covers attacks initiated after the vulnerability was dis-
closed [29]. For example, a study of three exploit archives
showed that 15% of these exploits were created before the
disclosure of the corresponding vulnerability [12]. A follow-
up study found that only 65% of vulnerabilities in software
running on a typical Windows host have patches available
at disclosure [13], which provides an opportunity for attack-
ers to exploit the unpatched vulnerabilities on a larger scale.
These studies do not discern the security vulnerabilities that
are ultimately exploited in the wild, and they do not provide
any information on the window of opportunity for stealth
attacks, before the vulnerabilities exploited have been dis-
closed publicly.
In this paper, we conduct a systematic study of zero-day
attacks between 2008–2011. We develop a technique for
identifying and analyzing zero-day attacks from the data
available through the Worldwide Intelligence Network Envi-
ronment (WINE), a platform for data intensive experiments
833Findings
Implications
Table 1: Summary of ﬁndings.
Zero-day attacks are more frequent than previously thought: 11 out of
18 vulnerabilities identiﬁed were not known zero-day vulnerabilities.
Zero-day attacks are serious threats that may have
a signiﬁcant impact on the organizations aﬀected.
Zero-day attacks last between 19 days and 30 months, with a median
of 8 months and an average of approximately 10 months.
Zero-day attacks are not detected in a timely man-
ner using current policies and technologies.
Most zero-day attacks aﬀect few hosts, with the exception of a few
high-proﬁle attacks (e.g., Stuxnet).
Most zero-day vulnerabilities are employed in tar-
geted attacks.
58% of the anti-virus signatures are still active at the time of writing. Data covering 4 years is not suﬃcient for observing
all the phases in the vulnerability lifecycle.
After zero-day vulnerabilities are disclosed, the number of malware
variants exploiting them increases 183–85,000 times and the number
of attacks increases 2–100,000 times.
The public disclosure of vulnerabilities is followed
by an increase of up to ﬁve orders of magnitude in
the volume of attacks.
Exploits for 42% of all vulnerabilities employed in host-based threats
are detected in ﬁeld data within 30 days after the disclosure date.
Cyber criminals watch closely the disclosure of new
vulnerabilities, in order to start exploiting them.
in cyber security [25]. WINE includes ﬁeld data collected by
Symantec on 11 million hosts around the world. These hosts
do not represent honeypots or machines in an artiﬁcial lab
environment; they are real computers that are targeted by
cyber attacks. For example, the binary reputation data set
includes information on binary executables downloaded by
users who opt in for Symantec’s reputation-based security
program (which assigns a reputation score to binaries that
are not known to be either benign or malicious). The anti-
virus telemetry data set includes reports about host-based
threats (e.g., viruses, worms, trojans) detected by Syman-
tec’s anti-virus products.
The key idea behind our technique is to identify exe-
cutable ﬁles that are linked to exploits of known vulnerabil-
ities. We start from the public information about disclosed
vulnerabilities (i.e., vulnerabilities that have been assigned a
CVE identiﬁer [10]), available from vulnerability databases
and vendor advisories. We use the public Threat Explorer
web site [38] to determine threats identiﬁed by Symantec
that are linked to these vulnerabilities, and then we query
the anti-virus telemetry data set in WINE for the hashes
of all the distinct ﬁles (malware variants) that are detected
by these signatures. Finally, we search the history of binary
reputation submissions for these malicious ﬁles, which allows
us to estimate when and where they appeared on the In-
ternet. Correlating these independently-collected data sets
allows us to study all the phases in the vulnerability life-
cycle. For example, when we ﬁnd records for the presence
of a malicious executable in the wild before the correspond-
ing vulnerability was disclosed, we have identiﬁed a zero-day
attack.
To the best of our knowledge, this represents the ﬁrst at-
tempt to measure the prevalence and duration of zero-day
attacks, as well as the impact of vulnerability disclosure on
the volume of attacks observed. We identify 18 vulnera-
bilities exploited in the real-world before disclosure. Out
of these 18 vulnerabilities, 11 were not previously known to
have been employed in zero-day attacks, which suggests that
zero-day attacks are more common than previously thought.
A typical zero-day attack lasts on average 312 days and hits
multiple targets around the world; however, some of these
attacks remain unknown for up to 2.5 years. After these
vulnerabilities are disclosed, the volume of attacks exploit-
ing them increases by up to 5 orders of magnitude.
These ﬁndings have important technology and policy im-
plications. The challenges for identifying and analyzing elu-
sive threats, such as zero-day attacks, emphasize that ex-
periments and empirical studies in cyber security must be
conducted at scale by taking advantage of the resources that
are available for this purpose, such as the WINE platform.
This will allow researchers and practitioners to investigate
mitigation techniques for these threats based on empirical
data rather than on anecdotes and back-of-the-envelope cal-
culations. For example, the fact that zero-day attacks are
rare events, but that the new exploits are re-used for multi-
ple targeted attacks, suggests that techniques for assigning
reputation based on the prevalence of ﬁles [9] can reduce the
eﬀectiveness of the exploit. Furthermore, because we quan-
tify the increase in the volume of attacks after vulnerability
disclosures, we provide new data for assessing the overall
beneﬁt to society of the full disclosure policy, which calls for
disclosing new vulnerabilities publicly, even if patches are
not yet available.
We make three contributions in this paper:
• We propose a method for identifying zero-day attacks
from data collected on real hosts and made available
to the research community via the WINE platform.
• We conduct a systematic study of the characteristics
of zero-day attacks. Our ﬁndings are summarized in
Table 1.
• We compare the impact of zero-day vulnerabilities be-
fore and after their public disclosure, and we discuss
the implications for the policy of full disclosure.
The remainder of the paper is organized as follows.
In
Section 2 we deﬁne zero-day attacks and we state our goals
in this paper. In Section 3 we review the current knowledge
about zero-day attacks. In Section 4 we describe our method
for identifying zero-day attacks automatically and the data
sets analyzed. In Section 5 we present our empirical results,
and in Section 6 we discuss the implications of our ﬁndings.
834835attacks on a larger scale; however, these attacks can usu-
ally be detected by an anti-virus program with up-to-date
deﬁnitions.
In this paper, we consider only exploits that
have been used in real-world attacks before the correspond-
ing vulnerabilities were disclosed.
Non-goals. We do not aim to analyze the techniques used
to exploit zero-day vulnerabilities or for packing the mal-
ware to avoid detection. We therefore focus on data that
highlights the presence and propagation rate of malware on
the Internet, rather than on the static or behavioral analysis
of the malware samples. The motivations behind zero-day
attacks, the dynamics of the market for zero-day vulnera-
bilities and the attacks against disclosed vulnerabilities for
which patches are not available are also outside the scope of
this study.
3. RELATED WORK
Frei studied zero-day attacks by combining publicly avail-
able information on vulnerabilities disclosed between 2000–
2007 with a study of three exploit archives, popular in the
hacker community [12]. This study showed that, on the
disclosure date, an exploit was available for 15% of vulnera-
bilities and a patch was available for 43% of vulnerabilities
(these percentages are not directly comparable because they
are computed over diﬀerent bases—all vulnerabilities that
have known exploits and all vulnerabilities that have been
patched, respectively). The study also found that 94% of ex-
ploits are created within 30 days after disclosure. However,
the exploits included in public archives are proofs-of-concept
that are not always used in real-world attacks. Shahzad et
al. conduct a similar study, but on a larger data set [32].
In this work, the authors analyze how the type and number
of vulnerabilities change during the period of their analysis
window. McQueen et al. [18] analyze the lifespan of known
zero-day vulnerabilities in order to be able to estimate the
real number of zero-day vulnerabilities existed in the past.
In contrast to this previous work, we analyze ﬁeld data, col-
lected on real hosts targeted by cyber attacks, to understand
the prevalence and duration of zero-day attacks before vul-
nerabilities are disclosed, and we conduct a real-world anal-
ysis rather than make statistical estimations.
Symantec analysts identiﬁed 8–15 zero-day vulnerabilities
each year between 2006–2011 [37]. For example, 9 vulnera-
bilities were used in zero-day attacks in 2008, 12 in 2009, 14
in 2010 and 8 in 2011. The 14 zero-day vulnerabilities dis-
covered in 2010 aﬀected the Windows operating system, as
well as widely used applications such as Internet Explorer,
Adobe Reader, and Adobe Flash Player. These vulnerabil-
ities were employed in high-proﬁle attacks, such as Stuxnet
and Hydraq. In 2009, Qualys analysts reported knowledge of
56 zero-day vulnerabilities [24]. In contrast, to these reports,
we propose a technique for identifying zero-day attacks au-
tomatically from ﬁeld data available to the research commu-
nity, and we conduct a systematic study of zero-day attacks
in the real world. In particular, we identify 11 vulnerabili-
ties, disclosed between 2008–2011, that were not known to
have been used in a zero-day attack.
Most prior work has focused on the entire window of ex-
posure to a vulnerability (see Figure 2), ﬁrst deﬁned by
Schneier [29]. Arbaugh et al.
evaluated the number of
intrusions observed during each phase of the vulnerability
lifecycle and showed that a signiﬁcant number of vulnera-
bilities continue to be exploited even after patches become
available [3]. Frei compared how fast Microsoft and Apple
react to newly disclosed vulnerabilities and, while signiﬁcant
diﬀerences exist between the two vendors, both have some
vulnerabilities with no patch available 180 days after disclo-
sure [12]. A Secunia study showed that 50% of Windows
users were exposed to 297 vulnerabilities in a year and that
patches for only 65% of these vulnerabilities were available
at the time of their public disclosure [13]. Moreover, even
after patches become available, users often delay their de-
ployment, partly because of the overhead of patch manage-
ment and partly because of the general observation that the
process of ﬁxing bugs tends to introduce additional software
defects. For example, a typical Windows user must manage
14 update mechanisms to keep the host fully patched [13],
while an empirical study suggested that over 10% of security
patches have bugs of their own [5].
While the market for zero-day vulnerabilities has not been
studied as thoroughly as other aspects of the underground
economy, the development of exploits for such vulnerabilities
is certainly a proﬁtable activity. For example, several secu-
rity ﬁrms run programs, such as HP’s Zero Day Initiative
and Verisign’s iDefense Vulnerability Contributor Program,
that pay developers up to $10,000 for their exploits [15, 20],
with the purpose of developing intrusion-protection ﬁlters
against these exploits. Between 2000–2007, 10% of vulner-
abilities have been disclosed through these programs [12].
Similarly, software vendors often reward the discovery of new
vulnerabilities in their products, oﬀering prizes up to $60,000
for exploits against targets that are diﬃcult to attack, such
as Google’s Chrome browser [14]. Moreover, certain ﬁrms
and developers specialize in selling exploits to conﬁdential
clients on the secretive, but legal, market for zero-day vul-
nerabilities. Industry sources suggest that the market value
of such vulnerabilities can reach $250,000 [15, 20]. In par-
ticular, the price of exploits against popular platforms, such
as Windows, iOS or the major web browsers, may exceed
$100,000, depending on the complexity of the exploit and
on how long the vulnerability remains undisclosed [15].
4.
IDENTIFYING ZERO-DAY ATTACKS
AUTOMATICALLY
To identify zero-day attacks automatically, we analyze the
historical information provided by multiple data sets.
In
this section, we describe our data sets and the ground truth
for our analysis (§4.1). We then introduce our method for
identifying zero-day attacks (§4.2) and discuss the threats
to the validity of our ﬁndings (§4.3).
4.1 Data sets
We conduct our study on the Worldwide Intelligence Net-
work Environment (WINE), a platform for data intensive
experiments in cyber security [25]. WINE was developed
at Symantec Research Labs for sharing comprehensive ﬁeld
data with the research community. WINE samples and ag-
gregates multiple terabyte-size data sets, which Symantec
uses in its day-to-day operations, with the aim of support-
ing open-ended experiments at scale. The data included in
WINE is collected on a representative subset of the hosts
running Symantec products, such as the Norton Antivirus.
These hosts do not represent honeypots or machines in an
artiﬁcial lab environment; they are real computers, in active
836837exploit was involved in a zero-day attack or not. To ana-
lyze non-executable exploits, we try to identify a customized
malicious binary that was downloaded after a successful ex-
ploitation, and we then search the binary in the binary rep-
utation data. To this end, we search the dynamic analysis
data set to create a list of binaries that are downloaded after
the exploitation phase.
4.2 Method for identifying zero-day attacks
Figure 3 illustrates our analysis method, which has ﬁve
steps: building the ground truth, identifying exploits in exe-
cutables, identifying executables dropped after exploitation
(optional phase), analyzing the presence of exploits on the
Internet, and identifying zero-day attacks.
Building the ground truth. We ﬁrst gather information
about vulnerabilities in Windows and in software running on
the Windows platform by querying OSVDB and other ref-
erences about disclosed vulnerabilities (e.g., Microsoft Bul-
letins). For all the vulnerabilities that are identiﬁed by a
CVE number we collect the discovery, disclosure, exploit re-
lease date and patch release dates. We then search Syman-
tec’s Threat Explorer for these CVE numbers to identify the
threats that exploit these vulnerabilities. Each threat has a
name (e.g., W32.Stuxnet) and a numerical identiﬁer, called
virus id. We manually ﬁlter out the virus id s that corre-
spond to generic virus detections (e.g., “Trojan Horse”), as
identiﬁed by their Threat Explorer descriptions [38]. This
step results in a mapping of threats to their corresponding
CVE identiﬁers, Zi = {virus idi, cve idi}, which are our
candidates for the zero-day attack study. Note that some