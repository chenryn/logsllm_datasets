I have tried to make StaticArrays.jl compatible with the functions in
`Base.LinAlg` but I get hung up on some inconsistencies.
The functions `lufact()`, `qr()` and `svd()` all use `similar()` to construct
a (mutable) array for working with and returning output. In _StaticArrays_
that would be e.g. the `MMatrix` type for a matrix. However, internal types
like `Base.LinAlg.SVD` have fields which must be of type `Array`.
I consider this a bug since, according to the docs, `similar` should "Create
an uninitialized mutable array with the given element type and size" and is
not bound to return `Array`. We should widen the array field types in `SVD`
and `LU` using an extra type parameter like in `Eigen`, and do something to
fix the problem with `qr()` (also, there may be other functions with _similar_
problems).
Alternatively we could use `Array` constructors where they are required, but I
think this is not preferable. Julia is meant to be a generic language.
Examples:
                   _
       _       _ _(_)_     |  A fresh approach to technical computing
      (_)     | (_) (_)    |  Documentation: http://docs.julialang.org
       _ _   _| |_  __ _   |  Type "?help" for help.
      | | | | | | |/ _` |  |
      | | |_| | | | (_| |  |  Version 0.5.1-pre+2 (2016-09-20 03:34 UTC)
     _/ |\__'_|_|_|\__'_|  |  Commit f0d40ec (13 days old release-0.5)
    |__/                   |  x86_64-linux-gnu
    julia> using StaticArrays
    julia> m = @SMatrix [1.0 2.0; 3.0 4.0]
    2Ã—2 StaticArrays.SMatrix{2,2,Float64,4}:
     1.0  2.0
     3.0  4.0
    julia> eig(m) # successfully returns MVector and MMatrix (not Array)
    ([-0.372281,5.37228],
    [-0.824565 -0.415974; 0.565767 -0.909377])
    julia> lufact(m)
    ERROR: MethodError: no method matching Base.LinAlg.LU{Float64,StaticArrays.MMatrix{2,2,Float64,4}}(::StaticArrays.MMatrix{2,2,Float64,4}, ::StaticArrays.MVector{2,Int64}, ::Int64)
    Closest candidates are:
      Base.LinAlg.LU{Float64,StaticArrays.MMatrix{2,2,Float64,4}}{T,S svd(m)
    ERROR: MethodError: no method matching Base.LinAlg.SVD{T,Tr,M:0
     in #svdfact#33(::Bool, ::Function, ::StaticArrays.SMatrix{2,2,Float64,4}) at ./linalg/svd.jl:37
     in (::Base.LinAlg.#kw##svdfact)(::Array{Any,1}, ::Base.LinAlg.#svdfact, ::StaticArrays.SMatrix{2,2,Float64,4}) at ./:0
     in #svd#36 at ./linalg/svd.jl:57 [inlined]
     in svd(::StaticArrays.SMatrix{2,2,Float64,4}) at ./linalg/svd.jl:57
    julia> qr(m)
    ERROR: TypeError: typeassert: expected Array{Float64,2}, got StaticArrays.MMatrix{2,2,Float64,4}
     in (::Base.LinAlg.#kw##_qr)(::Array{Any,1}, ::Base.LinAlg.#_qr, ::StaticArrays.SMatrix{2,2,Float64,4}, ::Type{Val{false}}) at ./:0
     in qr(::StaticArrays.SMatrix{2,2,Float64,4}) at ./linalg/qr.jl:173