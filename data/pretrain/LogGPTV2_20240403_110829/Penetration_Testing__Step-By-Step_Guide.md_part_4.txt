S_E_Oblako
10-Save the file
11-To list all the Caplets that come part of bettercap
Start bettercap
#bettercap -iface eth0
>caplets.show
S_E_Oblako
Bypassing https
Bypassing https attack or in other words SSL Strip attack is a Man In The
Middle (MITM) Attack by which a website secured with HTTPS is
downgraded to HTTP, All traffic coming from the victim machine is routed
to a proxy which is created by the attacker to force the victim machine to use
HTTP instead of HTTPS. SSL strip was discovered by hackers through a
simple observation that most users are not coming to SSL websites by
directly typing in the URL or a bookmarked Https:// abc.com, visitors
connect to a non-SSL site and it gets redirected (HTTP 302 redirect), or they
will connect to a non-SSL site which have a link to SSL site and they click
that link. HSTS header is not a redirect instead, the website tells the user web
browser to use HTTPS to connect to website.
HSTS.
HSTS (HTTP Strict Transport Security) is a web security technique that helps
you protect against downgrade attacks, MiTM (Man in the middle) attacks,
and session hijacking. HSTS accomplishes this by forcing web browsers to
communicate over HTTPS and rejecting requests to use insecure HTTP.
Originally drafted in 2009 by a group of PayPal employees, HSTS was first
published in 2012. Today, the HSTS header is recognized by IETF as Internet
Standard and has specified it in RFC 6797.
Why HSTS?
Man in the middle attack works very well in public Wi-Fi or any Wi-Fi that
the attacker has access to, it is very easy for someone with knowledge and
tools to lunch man in the middle attack and see the traffic of a victim if it is
not encrypted, normally HTTPS encrypt the traffic from the victim web
browser to the website, but MiTM (Man In The Middle) attack also have
away to break HTTPS traffic by doing SSL stripping technique which is to
force the web browser to use HTTP instead of HTTPS. Here HSTS header
comes handy to protect HTTPS traffic from being downgraded by attacker to
HTTP. The Website contain a header that tells the victim web browser to use
only HTTPS to communicate with the website, the Web Browser then store
this information and next time the user connect to the Website, even if the
user type HTTP the browser automatically change it to HTTPS without
communicating with the Website and therefore the traffic cannot be
downgraded to HTTP and the SSL stripping will not work.
S_E_Oblako
SSL stripping technique through MIMT attack
How does HSTS Work?
If you want to enable HSTS on your website, first you must add an HTTPS
header to the server.
Here is the header you should add:
Strict-Transport-Security: max-gae=expireTime; includeSubDomains;
preload
As far as the header is concerned, entering max-age is a must. Basically, it is
the time for which you want HSTS on your site, it should be entered in
seconds.
Apart from the max-age, one can enter includeSubDomains and preload flags
if he wishes to. The flag includeSubDomains is entered to ensure that the
entire website gets the protection of HSTS umbrella including its
subdomains. Although it is not necessary to include it in the header, it is
highly recommended. The preload flag you see at the end of the header is
used to inform the browsers that website has been added in the HSTS
preload list. You should include preload only if you have preloaded your
domain(s). If not, leave it blank.
Once you add the header to your web server, it ensures that the connection is
made only via the HTTPS tunnel. However, this too has its own pitfall. The
web browsers will obey web server’s HSTS order only if the first visit comes
S_E_Oblako
by means of HTTPS protocol. If the first visit made is over an HTTP
connection, the browsers will reject the header.
To see the HSTS list in Chrome type the following in the Chrome
Chrome://net-internals/#hsts
Dynamic
In the First screenshot the site is set to a Dynamic mode which means that the
browser has been instructed to enable HSTS by an HTTP response header
(served over TLS) like the following:
Strict-Transport-Security: max-age=157680000; includeSubDomains ;
This is a vulnerable to an attack whereby the very first time the browser
requests the domain with http:// (not https://) an adversary intercepts the
communication.
S_E_Oblako
Static
As shown in the second screen shot of facebook.com query it set to static_sts
this is to overcome the weakness of Dynamic mode . The static mode allows
for hard-coding HSTS records directly into the browser's source. The header
is changed to indicate the administrator's intention:
Strict-Transport-Security: max-age=157680000; includeSubDomains;
preload
Note
the inclusion of preload at the end. The domain is then submitted for review.
If approved then it is added to the Chromium list and is also included in the
Firefox, Safari, and IE 11+Edge lists.
SSL Stripping attack conditions:
1. SSL stripping works only over http connection.
2. Dynamic HSTS feature allow the user connect to website via http
then redirect to https site and update the browser with the https link
so the next time the user call the site the web browser automatically
change the link to https – ssl strip attack will fail in this case.
3. Static HSTS web browser uses only https connect and therefore ssl
stripping attack will fail.
4. Some sites don’t have http version of the website and there is no
redirection so the user will see connection failed if he tries http the
S_E_Oblako
site.
S_E_Oblako
Exercise 17: SSL Stripping
There are Bettercap Caplets that comes preloaded, to see the available caplets
, Open file manager and go to /usr/share/bettercap/caplets
1. In this exercise we are going to use two caplets, the arpspoof caplet
and the hstshijsck caplet to downgrade https connections to http and
see the traffic in clear text. However most of websites comes with
preloaded lists of sites that they only connect with https and this
such as facebook , twitter linkedin and more and in this case ssl
strip attack will fail against these websites
2. Start both Windows and Kali virtual machines
3. In Kali start bettercap
#bettercap -iface eth0
>arpSpoof (to start arpspoof caplet that we created earlier)
>hstshijack/hstshijack
If no error seen in the output of hstshijack that is mean the caplet works
fine and can intercept any site that does not have static hsts header
S_E_Oblako
4. In Windows machine open Firefox web browser and clear cash of the
browser then go to a site that does not have static hsts such as
www.linkdin.com
5. See the output of bettercap sniffer
S_E_Oblako
S_E_Oblako
3.6. MITM DNS Spoofing
DNS server is responsible for converting the Domain name like Google.com
to an IP address so computer can communicate with Google.com. Man in the
Middle can run a DNS server inside his computer and resolve the Domain
Name that the user need to the IP address chosen by the hacker perpetrating
the MiTM attack, for example when a user type www.google.com in his
browser , the first thing his computer will do is to communicate with DNS
server asking about the IP address of www.goole.com. In MiTM DNS
spoofing attack the hacker will see the DNS request coming from the PC and
will respond to that request with a Fake IP address that redirect the user to
another website and not www.google.com, the user PC cannot verify the
DNS response it received from the hacker machine as a fake DNS server
because there is no authentication happened between the client and DNS
server.
DNS Spoofing
In the following exercise, we are going to have DNS server running in our
Kali machine and a web server running as well, then we are going to redirect
hacked machine to our web server.
DNS spoofing will not work against Gmail and websites that use HTTPS
with HSTS. The reason why DNS spoofing doesn't work against HSTS
websites is because modern browsers come with a list of websites that they
can only browse as HTTPS, the browser will refuse to open that website.
This will work against normal http and https websites that does not have hsts
header enabled.
S_E_Oblako
Exercise 18: DNS Spoofing
1. Start web server
#service apache2 start
#service -- status-all ( to make sure apache2 service is running )
(Web Server files are stored in /var/ www/html)
2. create new page in Kali Web server
For testing change the current index.html file to index.original and use Text
editor create text file called index and write anything inside the file then save
it as index.html inside /var/www/html
3. Test the website working by opening Firefox and enter the IP
address of Kali.
S_E_Oblako
4. From Windows virtual machine make sure that you can reach the
Kali website by entering the IP address of Kali in the web browser.
5- From Windows virtual machine go to a website that you would like to
redirect to Kali for example rad.infosec.ca
6- Setting up Bttercap to do DNS spoofing
#bettercap -iface eth0
>help dns.spoof
>set dns.spoof.all true
>set dns.spoof.address 10.0.2.23 (kali Ip address)
>set dns.spoof.domains rad.infosec.ca,www.scratchpads.eu,www.rad-
infosec.ca ( these are the websites that we will intercept and redirect to Kali
website)
>dns.spoof on
>arpSpoof (to run the arpSpoof caplet that we created)
S_E_Oblako
7- From Windows machine , open Firefox browser and clear cash
8- Make sure that Windows network setting is set to default
S_E_Oblako
9- Then enter www.radh-infosec.ca, you are going to get the Kali webpage
S_E_Oblako
The Bttercap sniffer shows that the dns query to www.rad-infosec was
spoofed and redirected to local Kali Machine.
If you enter rad-infosec.ca address which is https sites with hsts header that
stored in the web browser memory, then bettercap will attempt to respond but
it will fail because the website that kali presenting to the browser is non https
website , bettercap will be as follow
S_E_Oblako
3.7. MiTM Java code injection
Man in the middle attack tool Bettercap also allow us to inject java code to
the victim websites that he is visiting if the website is http or https that is not
using HSTS header, injecting Java script in the victim web browser is very
dangerous because depending on the Java code written we can accomplish
many thing in the victim machine.
In the following exercise we are going to use bettercap to inject java code that
we are going to create.
Exercise 19: MITM -Java Code injection
1. Create a java code
#cd /
#mousepad javacode
Enter: alert(‘TEST JAVA CODE INJECTION’); and save the file as
javacode.js
2. Include the Javacode.js file in hstshijack caplet
#cd /usr/share/bettercap/caplets/hstshijack
3. Modify the hstshijack.cap file by adding *:/root/javacode.js to the
line pf set hstshijack.payload as shown in the screen shot below
Save the file
S_E_Oblako
4. Start bettercap with arpSpoof caplet and hstshijack caplet
5. From windows machine go to http site, you will notice the java alert
will be displayed
S_E_Oblako
6. Go to https site that does not have static hsts ( web browser cash
must be cleared)
S_E_Oblako
3.8. MIMT Attack in Real Network
Bettercap tool works the same way in real network (LAN or Wi-Fi) as in
virtual networks (through the above exercises) with the following notes
regards real network:
1. External (USB) Wi-Fi card must be used as the internal Wi-Fi card
cannot inject packets to poison ARP.
2. In above picture 192.168.0.37 is the attacker card and sending ARP
to 192.168.0.38 The victim machine
3. Attack machine 192.168.0.37 also talking to the real router
192.168.0.1 to forward the victim traffic to itself.
4. Autoscan tool is used to know who is out there in the network that
can be targeted in MIMT attack.
5. The attack may take longer time to start because the victim machine
already connected to router through its ARP table.
6. Victim machine can be PC or mobile phone or any IP device.
7. Here is some Wireshark captures that shows clearly what is
happening
S_E_Oblako
we can search for string in wireshark
8. For more info about Wireshark go to :
https://www.wireshark.org/docs/ where you can find documents,
S_E_Oblako
videos and tutorials about Wireshark.
9. We can use Wireshark to discover suspicions traffic in the network
for example if someone scanning the network we can see a lot of
ARP broadcasts.
S_E_Oblako
3.9. Detecting ARP storms by Wireshark
ARP poising attack start with ARP scanning for the whole subnet to see live
devices in the network, this can be seen very easily in Wireshark as an ARP
storm. Wireshark Expert information provide a warning about ARP storm
detected.
Exercise 20: Detecting ARP storms with Wireshark
In this exercise we are going to run a netdiscover tool which does ARP scan
and monitor the network with wireshark to discover the ARP storm created
by ARP scan
1. Setup Wireshark to filter the traffic in order to see ARP prtocol
2. In Wireshark enable ARP broadcast, go to Edit -> Preferences -
>Protocols /ARP/RARP and enable Detect ARP request storms
3. In Kali machine run the following command to scan the network
#netdiscover –t eth0 –r 
S_E_Oblako
ARP broadcast is very visible in Wireshark that someone is scanning the
network.
4. Wireshark can tell us about MIMT attack
5. Go to Wireshark captured packets and go to Analyze -> Expert
Information, you can see the following warning
Here Wireshark telling us 10.0.2.4 machine is duplicating 10.0.2.1 (router)
S_E_Oblako
3.10. Preventing ARP Poisoning
ARP Poisoning, A.K.A. Man-In-The-Middle (MiTM), is an effective attack if
proper mitigation techniques have not been implemented. MiTM attack
requires the attacker to be on the same network as the intended victims, an
attack would need to be initiated from the inside of the network. There are
many tools and techniques that can be used to detect and prevent ARP
poisoning such as Intrusion Detection and Prevention systems ( IDS/IPS) ,
Layer 2 switches with features to track mac addresses connected to its ports
Use ARP spoofing for something good
ARP spoofing can also be used for good purposes. Very often we are being
able to see wireless networks that are redirecting us to signup page when we
want to access wireless LAN or internet access across this Wi-Fi. Network
registration tools may redirect unregistered hosts to a signup page before
allowing them full access to the network. It is mostly used in public internet
such as Airports, Malls, hotels, and other sorts of networks to control the
access of mobile devices to the Internet and sometimes make users pay for
the Internet across special signup page. For that propose they are redirected
using ARP spoofing to a device known as a head end processor (HEP).
ARP spoofing can be used to implement redundancy of network services. A
backup server may use ARP spoofing to take over for a server that has
crashed and transparently offer redundancy.
Cisco IOS 12.2 and up switches have a feature to monitor ARP spoofing but
need DHCP snooping also enabled
Intrusion Detection/Prevention Systems (IDS/IPS):
IDS/IPSs can be divided as host based and network based. Host based
IDS/IPS are installed on hosts and detect or protect only the host. Network
based IDS/IPS listen to mirror port of the switch or some ports of the switch.
They can detect or protect the hosts connected to those ports. IDS systems
can detect ARP attacks and inform the administrator with the generation of an
appropriate alert or alarm. The main problem with IDS is that they tend to
generate a high number of false positives (alarms that turn out to be not part
of attacks).
S_E_Oblako
4
Gaining Access (Server Side)
In this chapter we will learn how to find vulnerabilities in servers
and how to exploit them to gain access and control to the server,
through manual exercises that uses Nmap (Zenmap application in
Kali Linux) then searching the internet for the vulnerability exploit
then using Metsaploit framework which automate the whole
process of finding the vulnerability and exploiting it .
S_E_Oblako
4. Gaining Access (Server Side)
After getting inside the network we need to see how to gain access to
computing devices inside that network. Computing device such as Server,
web server, Client PC, Router, smartphone, tablet, TV.
Gaining access require a lot of information gathering about the client or the
server, in our Exercises in this section we are going to focus in two
approaches:
Server Side
Do not need user interaction all we need is target IP.
Start information gathering by finding open ports, OS, installed
services (applications).
Quite simple if the target is in the same network.
If target has a domain name, then a simple ping will return his IP
address.
Client side
Gaining access to someone computing devices require more information
gathering and social engineering skills to make user interaction such as
opening a file or clicking on a link.
4.1. Server-Side attacks
Basic Information gathering and exploitation
Exercise 21: Basic Information Gathering using Zenmap
1. In this Exercise we are going to use ( Zenmap ) to do information
gathering about a server that we know its IP address.
2. Zenmap will give us all the open ports and running services in this
server
3. We are going to target the second Linux virtual machine installed in
our virtual environment.
4. In Virtual Box start MetaSploitable machine.
5. Login to the machine user:
6. msfadmin/msfadmin
7. Type
S_E_Oblako
#uname -a ( this give you the server name )
8. Check the machine IP address using command #ifconfig
9. In Kali machine open Zenmap application and enter the IP address
of the Metaploite machine and choose intense scan
S_E_Oblako
10. In the output of Zenmap check the open ports (services) given and
check the internet for these services vulnerability, backdoors and
exploit.
11. We are going to show two examples from the output of Zenmap:
12. Ftp service clearly shows that anonymous can access the server
through ftp without the need for username and password
13. Install ftp client like filezilla (https://filezilla-project.org) to start
browsing the files inside that server
14. If you dig further in the internet about the ftp version weaknesses
you might find a tool that allow you to have access to the server
itself, not only to the ftp section of it.
15. Port 512/TCP is open and has a service of netkit-rsh rexecd which
is a remote Process execution service in Linux systems.
S_E_Oblako
S_E_Oblako
Exercise 22: Exploit RSH client vulnerability
1. If we search google about other vulnerability that discovered by
Zenmap such as netkit-rsh we find that, it is a remote shell access
services and we can find tools in the internet exploit it.
S_E_Oblako
2. This service basically allows us to access the server remotely and
let us execute remote commands in the target computer.
3. If we continue search about netkit-rsh we will find more info and
client software package.
S_E_Oblako
4. Install rsh-client in Kali-Linux machine.
#apt-get install rsh-client
5. We are going to use rsh-client to access the Metasploitable machine
using command rlogin as follow in the screenshot .
#rlogin –l root 
4.2. Exploiting Basic vulnerability