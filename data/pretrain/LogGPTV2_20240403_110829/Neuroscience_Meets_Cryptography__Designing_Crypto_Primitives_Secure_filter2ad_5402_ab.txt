thentication, but cannot be explicitly described by the
user. Such a system avoids the problem that people can
be persuaded to reveal their password and can form the
basis of a coercion-resistant authentication protocol. If
the information is compromised, a new identifying se-
quence can be trained as a replacement—resulting in a
change of password.
The identiﬁcation system operates in two steps: train-
ing followed by authentication. In the training phase, the
secret key learned by the user is as in the expanded SISL
task, namely a sequence of 30 characters over the set
S = {s,d, f , j,k,l}. We only use 30-character sequences
that correspond to an Euler cycle in the graph shown in
Figure 2 (i.e. a cycle where every edge appears exactly
once). These sequences have the property that every non-
repeating bigram over S (such as ‘sd’, ‘dj’, ’fk’) appears
exactly once. In order to anticipate the next item (e.g., to
show a performance advantage), it is necessary to learn
associations among groups of three or more items. This
eliminates learning of letter frequencies or common pairs
of letters, which reduces conscious recognition of the
embedded repeating sequence [5].
Let Σ denote the set of all possible secret keys, namely
the set of 30-character sequences corresponding to Eu-
ler cycles in Figure 2. The number of Euler cycles in
this graph can be computed using the BEST theorem [20]
Figure 2: The secret key we generate is a random 30-
character sequence from the set of Euler cycles in this
directed graph. The resulting sequence contains all bi-
grams exactly once, excluding repeating characters.
which gives
#keys = 64 · 246 ≈ 237.8 .
Hence the learned random secret has about 38 bits of
entropy which is far more than the entropy of standard
memorized passwords.
Training. Users learn a random 30-item secret key k ∈ Σ
by playing the SISL game in a trusted environment. To
train users we experimented with the following proce-
dure:
• While performing the SISL task the trainee is pre-
sented with the 30-item secret key sequence re-
peated three times followed by 18 items selected
from a random other sequence (subject to the con-
straint that there will be no back-to-back repetitions
of the same cue), for a total of 108 items.
• This sequence is repeated ﬁve times, so that the
trainee is presented with a total of 540 items.
• At the end of this sequence there is a short pause in
the SISL game and then the entire sequence of 540
items (including the pause at the end) is repeated six
more times.
During the entire training session the trainee is presented
with 7 × 540 = 3780 items which takes approximately
30-45 minutes to complete. After the training phase
completes, the trainee runs through the authentication
test described next to ensure that training succeeded.
The system records the ﬁnal playing speed that the user
achieved.
4
SISL Authentication. To authenticate at a later time, a
trained user is presented with the SISL game where the
structure of the cues contains elements from the trained
authentication sequence and untrained elements for com-
parison. By exhibiting reliably better performance on
the trained elements compared to untrained, the partic-
ipant validates his or her identity. Speciﬁcally we exper-
imented with the following authentication procedure:
• Let k0 be the trained 30-item sequence and let k1,k2
be two additional 30-item sequences chosen at ran-
dom from Σ. The same sequences (k0,k1,k2) are
used for all authentication sessions.
• The system chooses a random permutation π
of (0,1,2,0,1,2) (e.g., π = (2,1,0,0,2,1) ) and
presents the user with a SISL game with the fol-
lowing sequence of 540 = 18× 30 items:
kπ1,kπ1,kπ1, . . . ,kπ6,kπ6,kπ6 .
That is, each of k0,k1,k2 is shown to the user ex-
actly six times (two groups of three repetitions), but
ordering is random. The game begins at the speed
at which the training for that user ended.
• For i = 0,1,2 let pi be the fraction of correct keys
the user entered during all plays of the sequence ki.
The system declares that authentication succeeded
if
p0 > average(p1, p2) + σ
(3.1)
Where σ > 0 is sufﬁciently large to minimize the
possibility that this gap occurred by chance, but
without causing authentication failures.
In the above, preliminary formulation, the authenti-
cation process is potentially vulnerable to an attack by
which an untrained user degrades his performance across
two blocks hoping to exhibit an artiﬁcial performance
difference in favor of the trained sequence (and obtain-
ing a 1/3 chance of passing authentication). We discuss
a robust defense against this in Section 5, but for now
we mention that two simple precautions offer some pro-
tection, even for this simple assessment procedure. First,
verifying that the authenticator is a live human makes it
difﬁcult to consistently change performance across the
foil blocks k1,k2. Second, the ﬁnal training speed ob-
tained during acquisition of the sequence is known to
the authentication server and the attacker is unlikely to
match that performance difference between the trained
and foil blocks. A performance gap that is substantially
different from the one obtained after training indicates an
attack.
Analysis. The next two sections discuss two critical as-
pects of this system:
5
• Usability: can a trained user complete the authenti-
cation task reliably over time?
• Security: can an attacker who intercepts a trained
user coerce enough information out of the user to
properly authenticate?
4 Usability Experiments
We report on preliminary experiments that demonstrate
feasibility and promise of the SISL authentication sys-
tem. We carried out the experiments in three stages.
First, we established that reliable learning was observed
with the new expanded version of the SISL task using
Mechanical Turk. Second, we veriﬁed that users retain
the knowledge of the trained sequence after delays of one
and two weeks. Finally, we investigated the effectiveness
of an attack on participants’ sequence knowledge based
on sampling the smallest fragments from which the orig-
inal sequence could potentially be reconstructed.
The experiments were carried out online within Ama-
zon’s Mechanical Turk platform. The advantages of Me-
chanical Turk involve a practically unlimited base of par-
ticipants, and a relatively low cost. One drawback of run-
ning the experiments online is the relative lack of control
we had over users coming back at a later time for repeat
evaluations. We discuss all of these considerations to-
wards the end of the section.
4.1 Experiment 1:
Learning
Implicit and Explicit
Our ﬁrst experiment conﬁrmed that implicit learning can
be clearly detected while explicit conscious sequence
knowledge was minimal. Experimental data from 35 par-
ticipants were included in the analysis.
The experiment used the training procedure described
in the previous section where the training phase con-
tained 3780 total trials and took approximately 30-45
minutes to complete. Recall that training consists of
seven 540-trial training blocks. After the training ses-
sion, participants completed a SISL authentication test
that compares performance on the trained sequence to
performance on two random test sequences.
Learning of the trained sequence is shown in Figure 3
as a function of the performance advantage (increase in
percent correct responses) for the trained sequence com-
pared with the randomly occurring noise segments. On
the test block following training, participants performed
the SISL task at an average rate of 79.2% correct for
the trained sequence and 70.6% correct for the untrained
sequence. The difference of 8.6% correct (SE 2.4%)1
1SE is short hand for Standard Error.
sequence as familiar at an average of 6.5 (SE 0.4) on the
0-10 scale and rated novel untrained sequences at 5.15
(SE 0.3). The modestly higher recognition of the trained
sequence was reliable across the group, t(34) = 3.69,
p  4.3, ps  2.8, ps < .05. Again, recog-
nition performance did not correlate with expression of
sequence knowledge, rs < .16 and did not suggest any
Figure 5: Participants exhibited reliable sequence knowl-
edge on both immediate assessments (shown for Exper-
iment 1 and both conditions of Experiment 2) shown by
a performance advantage for the trained sequence com-
pared with untrained, novel sequences at test. Sequence
knowledge is retained at both the 1 and 2 week delay
test sessions. While there is some reduction in expressed
knowledge after either delay, the lack of signiﬁcant ad-
ditional decay from 1 to 2 weeks suggests that informa-
tion is likely to persist for signiﬁcant periods following 2
weeks (exponential or power-law decay curves are com-
monly observed for many types of memory).
ability to recall the entire 30-item trained sequences.
4.3 Mechanical Turk
Running our experiments over Mechanical Turk required
considerable thought and effort to ensure that the experi-
ments do not suffer from selection bias and are conducted
fairly for both participants and researchers.
One of the early initial questions was that of setting the