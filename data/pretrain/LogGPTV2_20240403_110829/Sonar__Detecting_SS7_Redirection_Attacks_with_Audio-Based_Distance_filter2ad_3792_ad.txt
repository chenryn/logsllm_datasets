the audio used to obtain RTT values for the VoIP to cellular
experiments. Beneath that is a recording for a VoIP to cellular
call from our lab in Gainesville, FL to Boston. The top audio
sample is played as soon as the call is connected and returns
after 741ms. The bottom waveform is call audio for a VoIP
to cellular call from our lab to Boston where call audio is
rerouted to London. It can be seen that the audio returns at
1105ms, much later than the call without rerouting.
must take. In essence, we are constructing our own VoIP-
to-PSTN provider. Accordingly, we can make more precise
measurements for both distance and RTT.
B. Data Collection
With collection methods designed we can now describe our
extensive network measurements. In order to collect data for a
geographically diverse set of locations, we physically shipped
or personally transported the cellular echoing device (prover)
to multiple locations throughout the continental United States,
including most major regions: Southeast (Atlanta, GA; Miami,
FL), Northeast (Boston, MA; Stroudsburg, PA), West (Eugene,
OR; San Diego, CA; San Jose, CA), South (Houston, TX),
and the Midwest (Chicago, IL). Since our device required a
human volunteer to physically power on the device and ship
it to its next location, we were constrained by the availability
of willing volunteers and the quality of cellular phone service
at their locations. We also selected locations where our VPN
provider maintained endpoints to allow us to perform VoIP-
to-VoIP experiments, allowing us to verify that VPN latency
corresponds to expected latency during a real SS7 attack.
At each location, we executed two types of calls: legitimate
calls and rerouted calls. For legitimate calls, we measured
RTT alongside great circle distance8 while performing VoIP-
to-Cellular and Cellular-to-Cellular calls. This allowed us to
8Great circle distance is the shortest distance between two points on a
sphere. It is called “great circle” because the path forms a long arc when
drawn on a ﬂat map.
574
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:30:21 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 8: Black stars indicate locations where a VPN server was used for rerouting call data. White stars indicate locations where
the echoing device traveled. Grey stars indicate locations where the echoing device was sent and where a VPN server was used
to reroute calls.The house icon indicates the location of our lab in Northern Florida.
both baseline the expected values and test for false positives.
Finally, we emulated an attack call by performing a VoIP-
to-Cellular call while rerouting the VoIP call through a VPN
endpoint, forcing the trafﬁc to traverse an additional route.
We chose four VPN endpoints within the United States,
distributed at each corner of the country, to emulate an SS7
attack being executed within the US: Seattle, WA; San Diego,
CA; Miami, FL; and Boston, MA. These RTTs are expected to
be substantially lower than calls routed internationally due to
the shorter distance. Accordingly, these calls should be more
difﬁcult to detect. To emulate international SS7 attacks, we
used 11 international VPN endpoints across multiple regions:
South America (Panama City, Panama), Western Europe (Lon-
don, UK), Eastern Europe (Moscow, Russia), Middle East (Tel
Aviv, Israel), and Asia Paciﬁc (Tokyo, Japan). After training
on these cities, we use VPNs in extra cities to validate our
model. Those cities consist of Sydney, Singapore, S˜ao Paulo,
Kiev, Chennai, and Cape Town.
The audio loopback device was carried to 9 other locations,
shown in Figure 8. We also performed calls locally at our
lab in Gainesville, Florida (located in the northern portion of
the peninsula). At each location we executed and measured ap-
proximately 240 calls, corresponding to 4 hours of experiments
per location. In total, the experiments took nearly 50 hours to
run over a period from May 2, 2017 through August 25, 2017.
Note that this period does not include early test measurements
and device calibrations that began as far back as January 2017.
C. Detection
We next describe the design of an anomaly detection system
that allows us to characterize the effectiveness of using RTT to
detect calls. Building this detection system poses a number of
challenges. First, a lack of an exhaustive dataset of call data for
all locations means that our detection model needs the ability
to interpolate estimates of reasonable RTT for locations not in
the training data. Second, note that routing distance can vary
signiﬁcantly from great-circle geographic distance. While RTT
intuitively increases with distance, due to variances in physical
routing of the call there is a high variance in the actual RTT
from call-to-call. This means that attempting to estimate the
actual distance from an RTT is quite difﬁcult, and we found
that even the most ﬂexible regression models (which we do
not use) can misestimate distances by thousands of miles. As a
result, two locations that are the same geographic distance can
have very different audio latencies. The model must take this
into account. Third, our test locations were carefully chosen to
provide insight into how varying distances affect RTT, not the
most likely or probable attack locations (which will of course
vary from victim to victim). While it would be possible to train
a binary classiﬁer to distinguish between our collected attack
data and our legitimate call data and get good accuracy, this
test would be heavily biased by our choice of attack locations.
Finally, to characterize the effect of attackers located close to a
victim some of our redirection experiments move a call only a
short distance. Because we have several close attacks for every
legitimate call, some classiﬁer models would be more likely
to consider legitimate calls as false positives.
Because we are not trying to detect speciﬁc redirection
attacks (e.g., Atlanta to Boston via London) but rather any redi-
rection, we found the most appropriate model to be an anomaly
detector. We developed a classiﬁer using the commonly used
One-Class Support Vector Machine classiﬁer (OCSVM) [28].
This classiﬁer is similar to a standard support vector machine,
except that rather than identifying a decision boundary between
two classes it identiﬁes a boundary that includes all training
data but minimizes the area not including training data.
Like traditional SVM classiﬁers, OCSVM can also use a
kernel method to learn non-linear boundaries (among other
properties). We use a radial-basis function (RBF) as our
kernel because it allows for learning a generalized organically-
shaped region with no assumptions about
the underlying
data distribution. Like most machine learning techniques, this
technique requires the selection of hyperparameters that affect
the model learned from data. We set these factors extremely
conservatively to minimize the possibility of false positives
on legitimate calls with extreme latency values relative to
575
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:30:21 UTC from IEEE Xplore.  Restrictions apply. 
We begin by verifying our hypothesis that RTT is correlated
with distance. We calculated the Spearman correlation ρ be-
tween distance and measured RTT for each of the three types
of calls. Spearman correlations indicate monotonicity of the
data being compared and assume no underlying distribution of
the data. In our case, higher ρ values (approaching 1) indicate
a better ﬁt of the points to the regression, meaning a higher
likelihood that RTT and distance are correlated. For VoIP-to-
Cellular calls, we calculated ρ at 0.68; Cellular-to-Cellular
at 0.75; and VoIP-to-VoIP at 0.78 (all of which fall in the
accepted range for strong correlation). All three calculations
had a p-value of < 0.001, indicating that these results are
also statistically signiﬁcant. Therefore, we can reject the null
hypothesis that these two variables are uncorrelated.
Several trends are evident from this plot. First, different call
types experience different levels of RTT – VoIP-Cellular calls
experience approximately 150ms more latency than Cellular-
Cellular calls. Second, while there is strong correlation be-
tween distance and RTT, the relationship is not perfectly linear.
This reﬂects the fact that RTT measures actual call distance
through the network, which may diverge from the ideal great
circle distance. Finally, we ﬁnd all RTTs for Cellular-Cellular
calls are consistent with ”Users Very Satisﬁed” or ”Users
Satisﬁed” mouth-to-ear delay guidelines from the ITU E-
Model. Because carriers use the E-Model to provision network
services with a high quality of service, our measured values
are highly likely to be consistent with the true RTT.
B. Effects of Rerouting on RTT
With the understanding that distance is correlated to RTT,
we now seek to emulate an SS7 attack and measure the
effects. As we stated in Section VI, conducting SS7 attacks
legally and ethically is difﬁcult. Additionally, no emulator
exists to allow us to test
this part of our hypothesis on
the telephony network. We therefore use the VoIP-to-VoIP
measurements to baseline our expectations. As Figure 9 shows,
the VoIP-to-VoIP legitimate call RTTs increase similarly with
distance to Cellular-to-Cellular calls. However, VoIP-to-VoIP
calls have substantially lower RTT than any call we placed
over the cellular network. While this is expected given that
the telephone network must alter call audio, it provides an
additional insight to our methodology: using a VPN to redirect
calls will cause a smaller increase in RTT than we would
expect from a redirected call in the phone network, making
our emulated calls more difﬁcult to detect than a real SS7
attack. We conﬁrm this with real SS7 attacks in section VIII.
Our emulated SS7 attacks consisted of a VoIP-to-Cellular
call routed over a geographically-diverse set of VPN endpoints.
The results are shown in Figure 10, which shows the RTT vs.
the great-circle distance of the call including the redirection.
Again we see an increase in RTT as call distance increases. The
Spearman ρ value was 0.79 (p < 0.001), indicating a strong
correlation between RTT and call distance. This conﬁrms that
the hypothesis still holds with our redirected calls.
C. Analysis of Detection
While we have conﬁrmed that RTT and distance are corre-
lated and that redirection of VoIP calls results in an expected
Fig. 9: Measured RTT vs distance for all calls. Regardless of
call technology, RTT is strongly correlated with call distance.
their location. OCSVM uses a hyperparameter ν to effectively
regularize the boundary learned. ν can be interpreted as both
a) the maximum percentage of “outliers” to be ignored in the
training data and b) the maximum classiﬁcation error of in-
region data. Because we consider all of our call data points to
be legitimate, we set ν = 0.01. This conservatively limits false
positives and expands the learned region, making our classiﬁer
more likely to accept legitimate calls outside the training data
set. RBF kernels use a hyperparameter γ that can be interpreted
as the effect that any individual data point has on the learned
model. We set γ = 0.05 so that every point has a signiﬁcant
and far reaching effect on the model. This also gives protection
against misclassifying extreme legitimate values.
We note that this model assumes no prior underlying distri-
bution of the data. This is critical because while RTT tends to
increase with distance, the rate at which it does so can vary
on technology used, network conditions, routing topologies,
and variable effects like congestion. Note also that our model
is currently only trained and evaluated on VoIP-Cellular calls.
This is because VoIP-to-Cellular calls are the only types of
calls, not including the actual SS7 attack calls we made, for
which we were able to collect both legitimate and redirected
data for a variety of locations. We do not include the data we
collected for real SS7 rerouting calls in our model which is
further explained in a later section.
VII. EXPERIMENTAL RESULTS
We now present the results of our experiments, discuss our
analysis methodology, and demonstrate how call redirection
can be accurately detected. These results are then used in a
later section in determining the accuracy of our simulation
with data from real SS7 rerouting attacks.
A. Legitimate Calls
Figure 9 displays the means (with error bars) of non-attack
calls for each location broken down by technology (Cellular-
Cellular, VoIP-VoIP, and VoIP-Cellular). The ﬁgure shows
trend lines for each call type and shows visually the correlation
between call distance and RTT.
576
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:30:21 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 10: RTT for VoIP to Cellular calls. Most notably, delay
increases with the increase of distance.
Fig. 11: The classiﬁer generated detection graph. Calls that fall
within the area inside the oval are categorized as legitimate,
while those outside are deemed as attack. In our testbed the
classiﬁer detected attack calls with a false positive rate of 0.3%.
increase in RTT, we now focus on evaluating our detector.
Figure 11 shows the raw plot of RTT versus the claimed
great-circle distance (which does not include any additional
distance gained by redirection) for legitimate and attack calls.
Note that in Sonar the veriﬁer knows the distance the call
should take (the claimed distance) and measures the actual
RTT. The oval region indicated on the graph is the decision
boundary learned by the classiﬁer; points outside that region
are classiﬁed as attack calls. For all calls this resulted in a true
positive rate of 70.9% and false positive rate of 0.3%. Because
we know the claimed destination of the call, however, we can
break down these rates by expected destination.
Intuitively, calls redirected to a nearby attacker destination
result in lower detection rates and higher false positives. This
is due to the increase in call distance being relativity low and
therefore causing the RTT to only increase slightly or in some
extreme causes stay relatively the same. For example, when
calling San Diego, CA from our location, the presence of an
attacker in Boston, MA will be easier to detect (81% detection
Fig. 12: Our actual SS7 rerouting attack redirects a call from
our lab in Gainesville, FL to San Francisco before it reaches
its intended destination of Chapel Hill, NC.
accuracy) than in Miami, FL (48% detection accuracy). This
is because the distance between our lab in Gainesville, FL
and Boston, MA is greater than that between us and Miami,
FL. Furthermore, international calls have the highest detection
rates in our data set which is, in part, due to distance. We were
able to detect 100% of attacks from Tokyo and Moscow.
Finally, we collected extra data to further validate our
classiﬁer against calls attacked by foreign adversaries. Our goal
was to validate our model for locations outside of those used
in our training set. In addition to the previous attack locations,
these new attack points (Sydney, Singapore, Sao Paulo, Kiev,
Chennai, and Cape Town) were taken when the audio loopback
device was in Houston and Miami. The classiﬁer that was
trained with the original larger data set was used with these
additional RTTs to see whether the classiﬁer would correctly
predict all of these calls as attacked. The classiﬁer was able to
predict the attack calls with 100% accuracy (0% false positive).
Overall, our results conﬁrm our hypothesis that redirected
calls can be detected using round trip time measurements.
VIII. REAL ATTACK MEASUREMENTS
To observe how real SS7 attacks impact the RTT of call au-
dio, we partnered with Vaulto, a telecommunications company
that has the capability to execute actual SS7 call rerouting.
To the best of our knowledge, this is the ﬁrst work to collect
measurements on real SS7 rerouting attacks. We only targeted
our own research devices in these experiments. When called
with the echoing device we used in previous experiments the
call is rerouted to San Francisco via SS7 before reaching its
intended destination. Note that due to its peering agreement
with another provider, our partner was only allowed to redirect
calls to their ofﬁce in the Bay Area. Accordingly, we were not
allowed to recreate all of our emulation experiments. The route
the call travels is presented in Figure 12.