击面
威胁
建模
我的安全视界观                                                                                                            aerfa 
案。 
3）威胁建模 
威胁建模是一种分析应用程序威胁的方法，可识别潜在的安全问题并实施
相应解决或缓解措施。通常使用微软提出的 STRIDE 威胁等级分类法，将威胁
分为：Spoofing（仿冒）、Tampering（篡改）、Repudiation（否认）、
Information Disclosure（信息泄漏）、Denial of Service（拒绝服务）和 
Elevation of Privilege（权限提升）六部分。 
上述六大威胁所表示的定义、安全属性、消减措施可参照下表： 
威胁 
安全属性 
定义 
举例 
消减措施 
仿冒（S）  
认证  
冒充人或物  
冒充其他用户账号  
身份管理、认证（密码认证、单点登
录、双因素、证书认证）、会话管理 
篡改（T）  
完整性  
修改数据或代码  
修改订单信息  
完整性校验、访问控制 
抵赖（R）  
审计  
不承认做过某行为  不承认修改行为  
安全管理、安全审计、监控 
信息泄露（I）  
保密性  
信息被泄露或窃取  用户信息被泄露  
敏感信息保护、数据加密、访问控制 
拒绝服务（D）  
可用性  
消耗资源、服务可
不用  
DDOS 导致网站不可
用  
DDOS 防护、负载均衡   
权限提升（E）  
授权  
未经授权获取、提
升权限  
普通用户提升到管理
员  
授权、最小化 
此外微软官方还提供了免费的威胁建模工具，可作为平时研究使用。 
威胁建模
（STRIDE）
S
假冒
T
篡改
R
否认
I
信息泄露
D
拒绝服务
E
权限提升
我的安全视界观                                                                                                            aerfa 
5.3 安全实践 
在实际的安全活动中，一般采用安全设计 checklist + 威胁建模的模式。 
 针对一般业务系统功能的新增、迭代等变更，可降低安全要求暂不做
威胁建模，重点围绕安全设计 checklist 展开； 
 针对存在重大安全风险的环境、核心业务系统、业务系统通用功能等
业务场景，可按需进行威胁分析与建模（威胁建模存在厚重、耗时
长、技术门槛高等难题，不太适合企业所有的业务场景）。 
由此，安全设计 checklist 便是安全设计阶段的重中之重。一套好的安全检
查项，并不是大而全，而是小而精且有效、业务方好理解。关于安全设计
checklist 的设计与内容，除了紧贴设计要求、安全编码规范、安全测试等后续
安全活动反哺外，还可以参照一些互联网上的优秀案例。比如，美的金融 SDL
安全设计 checklist： 
又如，VIPKID 产品设计与开发安全红线： 
我的安全视界观                                                                                                            aerfa 
此外，还可以针对角色的不同，制作内容一致表现形式不同的安全检查
项。比如从业务方视角： 
又如，从安全角度出发： 
5.4 持续优化 
安全设计需要一定的积累和尝试，才能总结出一套可落地、有效的安全流
程与解决方案。在实践过程中，发现一些比较行之有效的做法： 
我的安全视界观                                                                                                            aerfa 
1）宣贯会上搜集业务方切身需求与体会 
通过定期召开“安全评估流程”宣贯，不断搜集来自前端开发、后端开
发、产品设计人员等不同参与人员的建议，持续优化现有安全设计 checklist。 
 前端代码和后端代码需要精细优化，分别制定安全设计 checklist 或在
现有表格中做明显区分； 
 针对企业系统的特点，对于统一功能单独制定安全设计要求，不需要
在每个系统中都要求开发来填写相关设计项，比如：单点登录、会员
修改/重置密码； 
 针对性对产品设计人员进行专业培训，选取一些常见的、工作中发现
的案例进行分享，可以是某一功能实现的流程分析强调发现的安全问
题； 
 推行产品设计安全规范，类似于开发安全规范，从安全设计阶段进行
取材，制定公司（业务）特有的“安全红线”。 
2）从后续安全活动中吸取经验，反哺安全设计检查项 
在其后的环节，特别是代码审计和安全测试发现的漏洞与安全缺陷，可以
反推到安全设计阶段，不断优化、持续补强针对某一重要系统或某一通用功能
的专属安全设计 checklist。 
3）扩大相关责任人范围，衔接安全开发 
如果仅聚焦于产品设计师可能带来的安全问题，往往难以满足在该阶段的
期望（产品设计师输出产品功能原型图、业务流程图，具体功能实现便交由开
发）。从降低安全活动带来的成本与打通 SDL 流程的角度考虑，需要将安全编
码的理念提前一部分加入到安全设计阶段，因此该阶段关注的人物对象便是产
品设计人员、开发人员。 
6 安全开发 
在确定产品原型与功能之后，便交由开发负责推进。然而他们的关注点大
我的安全视界观                                                                                                            aerfa 
多仅在于业务流程与功能点的实现，具体使用的技术决定于公司技术栈和个人
能力，对于带着安全意识去编码这件事儿，大多都没太在意。 
6.1 安全目标 
通过提供公共安全组件、制定安全开发规范、提供静态代码审计系统给业
务方，从基础安全服务提供者、安全规范制定者和安全质量把关者角度出发，
对开发进行赋能，想办法让其按照安全开发规范进行编码，并提供一套强有力
的代码安全检测系统，把控代码安全质量，从而减少或消除因编码而产生的安
全漏洞。 
6.2 安全活动 
在代码编写阶段，安全活动主要围绕安全开发规范、安全组件接入和静态
代码扫描开展。 
安全培训
安全需求
安全设计
安全开发
安全测试
安全审核
安全响应
安全组件接入 
安全开发规范 
静态代码扫描 
我的安全视界观                                                                                                            aerfa 
1）安全开发规范 
从隐私和安全角度两方面出发，结合当前发现的高危问题；参考业界的安
全开发规范，融合公司当前的技术栈；站在开发视角，进行安全开发规范的编
写。规范项不在多，关键是需要清晰、易懂、针对性强、易判断是否违规。 
2）安全组件接入 
分析企业中存在的常见安全漏洞，来源可能是内部安全测试结果、外部漏
洞收集（SRC、第三方漏洞平台、CVND 等），并结合漏洞影响、开发难易程
度、加固效果，对业务部门输出统一的安全组件，快速、高效、低成本解决普
遍存在的安全问题。常见的可能有：统一登录安全网关、短信安全网关、
CSRF-token 组件、XSS 过滤器（适用于非富文本框场景）等。 
3）静态代码扫描 
代码的白盒测试，最好是嵌入到发布流程中。一方面对源代码起到保护作
用，不用另辟蹊径存放源代码，打破源代码统一管控的好局势；另一方面可以
在流程中设置卡点，形成强有力的抓手。不少人对代码分析存在恐惧，觉得是
效率低并且要求高的工作，但是在代码层面找出问题对于整个 SDL 都是十分必
要、有效的一环。市面上的代码审计工具不少，商业的包括 checkmarx、
代码
编写
安全开
发规范
安全组
件接入
静态代
码扫描
我的安全视界观                                                                                                            aerfa 
fortify、coverity，开源的有 check style、findbugs、cobra、Rips 等，需要
从语言的支持、误报率、购买以及维护成本等不同维度进行综合评估。 
6.3 安全实践 
1）开发安全规范 
 开发语言：随着技术的不断更新与发展，公司中必然会出现不同的开
发语言，按照先 cover 住公司主流语言的思路，确定 Java 安全开发规
范的编写工作。 
 编写内容：比较快速的一种方法是引入外部优质资源，现网上公开的
优质资源有阿里的安全开发规范、华为早期的安全开发规范，参考其
内容与格式，针对公司主流语言系统常见高中危漏洞进行编写。 
 规范框架：包括漏洞描述、检测方法、代码示例（不合规代码示例、
合规代码示例）及修复方案。 
线上发文开发安全规范
评审完毕后启动线上发布流程
走进产品线进行规范讲解与推广
架构组评审开发安全规范
从可落地角度出发精简规范
从对开发友好性优化规范结构
安全组编写开发安全规范
常见高危漏洞反馈至代码层
参考业界标准与大厂经验
我的安全视界观                                                                                                            aerfa 
 架构评审：安全人员有时不禁仅从安全的角度来编写规范，如果没有
专业的开发技术和对漏洞足够的了解，预期的产物与效果往往会大打
折扣。邀请架构组和业务线上的开发参与规范评审，不仅会从专业的
技术角度提出建议，还会从实际可落地性和开发容易理解的视角进行
完善。 
 发文上线：发文之前有一必备的步骤就是会签，找各业务线的领导和
大老板会签，让他们知道有安全开发规范的存在，对日后可能产生的
违规处罚进行声明。 
2）代码审计系统 
 代码扫描工具选型：以来自互联网上的一张改编图进行说明，对主流
的扫描工具进行对比。 
提供静态代码
扫描服务
嵌入系
统发布
流程
代码扫描
工具选型
我的安全视界观                                                                                                            aerfa 
本文中的示例，以 fortify 为例。（网上出现不少带 license 的破解版
本，有兴趣的自寻查找） 
 嵌入系统发布流程：将代码扫描工具集成到系统发布流程，是安全开
发阶段最重要的步骤。在发布系统中加入静态代码扫描按钮，开发创
建项目并提交代码后，触发 fortify 在扫描服务器上进行扫描，扫描结
束后以邮件的方式告知开发。大体流程如下： 
 提供代码扫描服务：以安全服务提供给业务方，除了代码扫描的能力
外，还有安全扫描的流程与使用方法介绍、扫描出的漏洞解读与技术
工具名称
持续集成
漏洞规则
误报率
扫描速度
语言支持
版本类型
check marx
支持
主流owasp、cwe
、pci等规则
高
中