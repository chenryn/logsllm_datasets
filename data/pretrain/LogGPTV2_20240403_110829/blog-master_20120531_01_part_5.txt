# if missing or 0, then instead sleeping, the script will exit  
loop_delay = 1.0  
# where to log  
logfile = ~/log/%(job_name)s.log  
# where to write pidfile  
pidfile = ~/pid/%(job_name)s.pid  
# per-process name to use in logging  
#job_name = %(config_name)s  
# whether centralized logging should be used  
# search-path [ ./skylog.ini, ~/.skylog.ini, /etc/skylog.ini ]  
#   0 - disabled  
#   1 - enabled, unless non-daemon on console (os.isatty())  
#   2 - always enabled  
#use_skylog = 0  
# how many seconds to sleep after catching a exception  
#exception_sleep = 20  
postgres@db5-> pgqd --ini  
[pgqd]  
# where to log  
logfile = ~/log/pgqd.log  
# pidfile  
pidfile = ~/pid/pgqd.pid  
## optional parameters ##  
# libpq connect string without dbname=  
#base_connstr =  
# startup db to query other databases  
#initial_database = template1  
# limit ticker to specific databases  
#database_list =  
# log into syslog  
#syslog = 1  
#syslog_ident = pgqd  
## optional timeouts ##  
# how often to check for new databases  
#check_period = 60  
# how often to flush retry queue  
#retry_period = 30  
# how often to do maintentance  
#maint_period = 120  
# how often to run ticker  
#ticker_period = 1  
```  
londiste3调用的其实都是skytools lib里面的py脚本, 例如compare调用的是compare.py  
```  
pg92@db-172-16-3-33-> pwd  
/opt/skytools3.0.2/lib/python2.7/site-packages/londiste  
pg92@db-172-16-3-33-> ll  
total 220K  
-rw-r--r-- 1 root root 2.8K May 11 02:40 bublin.py  
-rw-r--r-- 1 root root 3.5K May 30 14:47 bublin.pyc  
-rw-r--r-- 1 root root 1.6K May 11 02:40 compare.py  
-rw-r--r-- 1 root root 2.0K May 30 14:47 compare.pyc  
-rw-r--r-- 1 root root 6.6K May 11 02:40 handler.py  
-rw-r--r-- 1 root root 8.6K May 30 14:47 handler.pyc  
drwxr-xr-x 2 root root 4.0K May 30 14:47 handlers  
-rw-r--r-- 1 root root  601 May 11 02:40 __init__.py  
-rw-r--r-- 1 root root  708 May 30 14:47 __init__.pyc  
-rw-r--r-- 1 root root  32K May 11 02:40 playback.py  
-rw-r--r-- 1 root root  28K May 30 14:47 playback.pyc  
-rw-r--r-- 1 root root 9.8K May 11 02:40 repair.py  
-rw-r--r-- 1 root root  11K May 30 14:47 repair.pyc  
-rw-r--r-- 1 root root  21K May 11 02:40 setup.py  
-rw-r--r-- 1 root root  20K May 30 14:47 setup.pyc  
-rw-r--r-- 1 root root 8.5K May 11 02:40 syncer.py  
-rw-r--r-- 1 root root 8.4K May 30 14:47 syncer.pyc  
-rw-r--r-- 1 root root 8.6K May 11 02:40 table_copy.py  
-rw-r--r-- 1 root root 7.1K May 30 14:47 table_copy.pyc  
```  
添加删除列, 添加触发器的过程实际上是这样的。  
Adding a column to a replicated table  
```  
This case is handled in a simple process:  
add the column on all the subscribers  
BEGIN; -- on the provider  
add the column on the provider  
SELECT londiste.provider_refresh_trigger('queue_name', 'tablename');  
COMMIT;  
```  
Removing a column to a replicated table  
```  
drop column from provider and change trigger in same transaction  
look at the lag when londiste has passed the moment of the drop  
drop column on subscribers  
The trick here is to drop the column on the subscribers only when there's no more event in the queue referencing it.  
```  
Adding custom triggers on subscriber side  
By default, londiste will consider that the triggers which exist on the subscriber tables are there because you just restore the provider schema there, being as lazy as possible. If you intend to run custom triggers on the subscriber, you have to tell londiste about them as follows:  
```  
create the custom trigger on the subscriber  
londiste.py p-to-s.ini subscriber add public.T1  
londiste.py p-to-s.ini subscriber restore-triggers public.T1  
CAUTION: When londiste stops, it will remove the trigger again.  
You can even give the restore trigger a specific trigger name, and only this one will get reinstalled.  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")