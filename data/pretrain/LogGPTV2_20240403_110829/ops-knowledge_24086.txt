It appears that you are trying to store and retrieve a date using Memcache in your Google App Engine application. However, you are encountering an error because the Memcache call is being made at the module import time, which is before the App Engine environment is fully set up. This can cause issues, especially in the development server.

Here is a revised version of your code, along with an explanation of how to resolve the issue:

### Revised Code

```python
from datetime import date
from google.appengine.api import memcache

MEMCACHE_DATE_KEY = 'date'

def get_last_date():
    """Retrieve the last stored date from Memcache."""
    return memcache.get(MEMCACHE_DATE_KEY)

def set_new_date():
    """Store the current date in Memcache."""
    memcache.set(MEMCACHE_DATE_KEY, date.today())

# Example usage within a request handler
class MyRequestHandler(webapp2.RequestHandler):
    def get(self):
        # Retrieve the last stored date
        last_stored_date = get_last_date()
        
        # Store the current date if it's different from the last stored date
        if date.today() != last_stored_date:
            set_new_date()
            self.response.write('Date updated in Memcache.')
        else:
            self.response.write('Date is already up to date.')
```

### Explanation

1. **Move Memcache Calls to Functions:**
   - The `get_last_date` function retrieves the last stored date from Memcache.
   - The `set_new_date` function stores the current date in Memcache.
   - These functions should be called within a request handler, not at the module level.

2. **Example Usage in a Request Handler:**
   - In the `MyRequestHandler` class, the `get` method checks if the current date is different from the last stored date.
   - If the dates are different, it updates the date in Memcache and writes a response.
   - If the dates are the same, it writes a message indicating that the date is already up to date.

### Additional Notes

- Ensure that you have the necessary imports and that your `webapp2` framework is set up correctly.
- Make sure that the `MyRequestHandler` is properly registered in your `app.yaml` or `main.py` file.

By moving the Memcache calls inside a request handler, you ensure that the App Engine environment is fully set up before making any Memcache requests, which should resolve the `AssertionError` you encountered.