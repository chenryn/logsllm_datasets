软件学报ISSN 1000-9825, CODEN RUXUEW E-mail: PI:EMAIL
Journal of Software,2021,32(5):1231−1255 [doi: 10.13328/j.cnki.jos.006231] http://www.jos.org.cn
©中国科学院软件研究所版权所有. Tel: +86-10-62562563
∗
基于混沌工程的微服务韧性风险识别和分析
殷康璘, 杜庆峰
(同济大学 软件学院,上海 201804)
通讯作者: 杜庆峰, E-mail: PI:EMAIL
摘 要: 微服务架构近年来已成为互联网应用所采用的主流架构模式.然而与传统的软件架构相比,微服务架构
更加复杂的部署结构使其面临更多能够导致系统发生故障的潜在威胁,且微服务架构系统故障的症状也更加多样
化.在可靠性等一些传统的软件度量已不能充分体现微服务架构系统故障应对能力的情况下,微服务的开发者们开
始使用“韧性(resilience)”一词描述微服务架构系统的故障应对能力.为了提高微服务架构系统的韧性,开发者往往
需要针对特定的系统环境扰动因素设计应对机制.如何判断一个系统环境扰动因素是否为影响微服务系统韧性的
风险因素,以及如何在系统运行发布之前尽可能多地寻找到这些潜在的韧性风险,都是微服务架构系统开发过程中
待研究的问题.在先前研究中提出的微服务韧性度量模型的基础上,结合混沌工程,提出了针对微服务架构系统的韧
性风险识别和分析方法.韧性风险的识别方法通过不断地向微服务架构系统引入随机系统环境扰动并观察系统服
务性能的变化,寻找系统潜在的韧性风险,大幅度减少了软件风险识别过程中的人力成本.对于识别到的韧性风险,
通过收集执行混沌工程过程中的系统性能监控数据,韧性风险分析方法将利用因果搜索算法构建出各项系统性能
指标之间的影响链路,并将可能性较高的链路提供给运维人员,作为进一步分析的参考.最后,通过在一个微服务架
构系统上实施的案例,研究展示了所提出的韧性风险识别和分析方法的有效性.
关键词: 微服务;韧性;软件风险识别;混沌工程
中图法分类号: TP311
中文引用格式: 殷康璘,杜庆峰.基于混沌工程的微服务韧性风险识别和分析.软件学报,2021,32(5):1231−1255. http://www.
jos.org.cn/1000-9825/6231.htm
英文引用格式: Yin KL, Du QF. Microservice resilience risk identification and analysis based on chaos engineering. Ruan Jian
Xue Bao/Journal of Software, 2021,32(5):1231−1255 (in Chinese). http://www.jos.org.cn/1000-9825/6231.htm
Microservice Resilience Risk Identification and Analysis Based on Chaos Engineering
YIN Kang-Lin, DU Qing-Feng
(School of Software Engineering, Tongji University, Shanghai 201804, China)
Abstract: Microservice architecture has already become the mainstream architecture pattern of Internet applications in recent years.
However, compared with traditional software architectures, microservice architecture has a more sophisticated deployment structure,
which makes it have to face more potential threats that make the system in fault, as well as the greater diversity of fault symptoms. Since
traditional measurements like reliability cannot fully show a microservice architecture system’s capability to cope with failures,
microservice developers started to use the word “resilience” to describe such capability. In order to improve a microservice architecture
system’s resilience, developers usually need to design specific mechanisms for different system environment disruptions. How to judge
whether a system environment disruption is a risk to microservice resilience, and how to find these resilience risks as much as possible
∗ 基金项目: 国家自然科学基金(U1934212); 国家重点研发计划(2020YFB2103300)
Foundation item: National Natural Science Foundation of China (U1934212); National Key Research and Development Program of
China (2020YFB2103300)
本文由“面向持续软件工程的微服务架构技术”专题特约编辑张贺教授、王忠杰教授、陈连平研究员和彭鑫教授推荐.
收稿时间: 2020-07-10; 修改时间: 2020-10-26, 2020-12-15; 采用时间: 2021-01-18; jos在线出版时间: 2021-02-07
1232 Journal of Software 软件学报 Vol.32, No.5, May 2021
before the system is released, are the research questions in microservice development. According to the microservice resilience
measurement model which is proposed in authors’ previous research, by integrating the chaos engineering practice, resilience risk
identification and analysis approaches for microservice architecture systems are proposed. The identification approach continuously
generates random system environment disruptions to the target system and monitors variations in system service performance, to find
potential resilience risks, which greatly reduces human effort in risk identification. For identified resilience risks, by collecting
performance monitoring data during chaos engineering, the analysis approach uses the causality search algorithm to build influence chains
among system performance indicators, and provide chains with high possibility to system operators for further analysis. Finally, the
effectiveness of the proposed approach is proved by a case study on a microservice architecture system.
Key words: microservice; resilience; software risk identification; chaos engineering
微服务架构(microservice architecture)是由马丁·福勒所提出的一种新的软件架构模式[1],它将一个单体的
软件系统拆分为若干可独立运行、部署的微服务(microservices).微服务架构将软件功能变更的规模控制在一
个微服务内部,且不影响其他的微服务,大幅减少了软件功能迭代过程中系统重新构建、测试、部署的成本,因
此,采用微服务架构成为了 DevOps 开发模式中常用的手段[2].近年来,微服务架构已成为许多互联网公司会使
用的一种主流软件架构模式[3−5].
相对于早年面向服务架构的软件系统,采用微服务架构的软件系统(以下简称微服务架构系统)对服务的划
分更细粒度化,并且通常会使用容器技术提高系统资源的利用率,以致微服务架构系统部署结构更为复杂.受此
影响,微服务架构系统会面临更多非软件设计缺陷因素(如服务器意外宕机、网络不稳定等)所引发的软件系统
故障[6].除了软件系统故障以外,软件系统的升级、系统部署配置(如微服务的冗余备份配置、虚拟机的资源分
配)的动态变更、未预期的工作负载等情况,均可能导致微服务架构系统不能正常提供其服务[7].
在传统的软件系统质量度量中,描述系统应对故障能力的度量指标有可用性、可靠性、容错性等[8],这些度
量指标往往将系统的状态分为“可用/可靠”和“不可用/不可靠”两种.但是,近年来对云计算故障模式的相关研究
表明[7,9]:故障除了能直接导致系统服务本身的不可用之外,也可能会使系统服务质量(性能)受到严重影响,但是
系统服务仍处于可访问状态.在这种情况下,可用性、可靠性这一类指标并不能完全体现出一个微服务架构系
统在故障发生时其系统服务性能受到影响的严重程度.例如,一个系统在情况 A 下系统服务的平均响应时间从
3s延长至5s,在情况B下系统服务的平均响应时间从3s延长至12s,假设情况A和情况B持续的时长相同,那么
系统在情况A和情况B下的可靠性也是相同的.但是很明显,系统在情况B下服务性能受影响的程度比在情况
A 下严重.另一方面,现有对软件系统服务性能的评估方法主要以性能测试为主,通过性能测试可以识别出系统
在一定服务压力下体现出来性能设计缺陷.但是系统在故障发生时,系统服务性能受到的影响并不会在性能测
试中验证.
基于上述原因,微服务架构系统的相关研究人员开始使用“韧性(resilience)”一词表示系统处理故障的能
力[10,11](“resilience”一词在不同学术领域中有多种翻译,通常被翻译为“弹性”“韧性”,而国内计算机领域目前对
resilience 的翻译尚未确定.由于“弹性”一词早已在云计算中被用来形容软件系统的伸缩性和可扩展性,本文使
用“韧性”一词作为resilience的翻译).为了提高微服务架构系统的韧性,负载均衡、熔断机制、心跳检测等一些
常用的系统容错机制[12]被开发人员和架构设计人员应用在系统上.
在计算机领域中,目前还没有对软件韧性有统一的定义.根据其他领域研究中对韧性的定义[13]以及韧性这
一概念在微服务架构系统开发者中被使用的情况,本文作者在先前的研究工作[14]中从服务性能的角度将微服
务架构系统的韧性定义为:“一个微服务架构系统在系统环境扰动发生并导致其服务性能下降后,维持其服务性
能在一个可接受的水准,并快速将服务性能恢复至正常状态的能力”.其中,系统环境扰动(disruption)是其他领域
韧性研究中的一个通用概念,意为影响系统(非特指软件系统)功能正常运作的事件.在微服务架构系统中,系统
环境扰动既包括软件系统的内部组件故障,也包括上文中所提及的诸如系统升级、配置变更等使微服务架构系
统产生“变更”的事件.在上述定义的基础上,该研究提出了微服务韧性度量模型 MRMM(microservice resilience
measurement model),该模型将微服务架构中有关韧性的概念进行概念建模,并给出用于度量系统环境扰动发生
时服务性能变化的3个度量维度,以评估其对微服务架构系统服务性能的影响程度.
殷康璘 等:基于混沌工程的微服务韧性风险识别和分析 1233
通过设立由MRMM的3项度量指标构成的服务韧性目标,可以描述出一个微服务架构系统预期达到的服
务韧性;随后,微服务架构系统的开发人员将在各种可能的系统环境扰动中寻找出会超出韧性目标阈值的扰动,
将其认定为威胁微服务韧性的软件风险(以下简称为韧性风险),并为其设计系统应对机制[15].在传统的软件风
险分析过程中,对软件风险的识别通常采用头脑风暴、专家经验等人为分析方法,然而在微服务架构系统中,随
着微服务数量的增加以及服务之间调用关系的复杂化,根据微服务架构系统中各类型系统资源可能发生的环
境扰动事件类型,人为地列举出所有可能发生的具体系统环境扰动(如某一个服务存在一种扰动类型,就需要穷
尽目标系统的各个服务在发生这种扰动后可能的情况)并逐个验证这些扰动是否会产生严重的服务降级,显然
会消耗大量的人力成本以及时间成本.对于识别到的韧性风险,现有的故障诊断和分析方法需要对目标系统的
所有通信过程植入监控代码,或对历史性能数据人工地标注系统正常异常与否,将花费大量额外的系统开发成
本或人工成本.此外,没有统一的韧性度量方法,使得微服务架构系统的研究人员难以界定服务性能受系统环境
扰动影响的严重程度,并在迭代过程中选择需要优先处理的韧性风险.综上所述,微服务架构系统的韧性风险识
别过程中存在着以下两个问题.问题 1:如何使用较少的人力和时间成本识别出目标微服务架构系统的韧性风
险?问题2:如何分析识别到的韧性风险对目标微服务架构系统的影响?
针对上述问题,本文提出了微服务韧性风险的识别和分析方法,其整体流程如图 1 所示.首先,本方法根据
MRMM模型中的韧性度量指标为目标微服务系统中的服务设立韧性目标;随后,基于混沌工程的方法执行若干
次混沌实验,在每次混沌实验中,以随机的方式生成系统环境扰动,通过比较实验中系统环境扰动产生的服务降
级是否超出服务韧性目标的阈值范围,识别出目标系统中的韧性风险.针对每一个被识别的韧性风险,为了免去
对微服务架构系统的额外开发成本和对性能数据的人工标注成本,本文通过因果关系搜索算法无监督地分析
实验结果数据中各系统性能指标之间的因果关系,并给出可能的韧性风险影响链路.
Fig.1 Process of microservice resilience risk identification and analysis
图1 微服务韧性风险的识别和分析过程
本文第 1 节概述本文的相关研究.第 2 节介绍基于混沌工程的韧性风险识别方法.第 3 节介绍针对微服务