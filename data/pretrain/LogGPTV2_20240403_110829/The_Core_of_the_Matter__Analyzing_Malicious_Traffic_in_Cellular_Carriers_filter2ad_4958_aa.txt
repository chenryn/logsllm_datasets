title:The Core of the Matter: Analyzing Malicious Traffic in Cellular Carriers
author:Charles Lever and
Manos Antonakakis and
Bradley Reaves and
Patrick Traynor and
Wenke Lee
The Core of the Matter:
Analyzing Malicious Trafﬁc in Cellular Carriers
Charles Lever
Manos Antonakakis
Brad Reaves
Georgia Institute of Technology
Damballa
Georgia Institute of Technology
PI:EMAIL
PI:EMAIL
PI:EMAIL
Patrick Traynor
Wenke Lee
Georgia Institute of Technology
Georgia Institute of Technology
PI:EMAIL
PI:EMAIL
Abstract
1
Introduction
Much of the attention surrounding mobile malware has
focused on the in-depth analysis of malicious applications.
While bringing the community valuable information about
the methods used and data targeted by malware writers,
such work has not yet been able to quantify the prevalence
with which mobile devices are actually infected. In this pa-
per, we present the ﬁrst such attempt through a study of the
hosting infrastructure used by mobile applications. Using
DNS trafﬁc collected over the course of three months from
a major US cellular provider as well as a major US non-
cellular Internet service provider, we identify the DNS do-
mains looked up by mobile applications, and analyze in-
formation related to the Internet hosts pointed to by these
domains. We make several important observations. The
mobile malware found by the research community thus far
appears in a minuscule number of devices in the network:
3,492 out of over 380 million (less than 0.0009%) observed
during the course of our analysis. This result lends cre-
dence to the argument that, while not perfect, mobile ap-
plication markets are currently providing adequate security
for the majority of mobile device users. Second, we ﬁnd
that users of iOS devices are virtually identically as likely
to communicate with known low reputation domains as the
owners of other mobile platforms, calling into question the
conventional wisdom of one platform demonstrably provid-
ing greater security than another. Finally, we observe two
malware campaigns from the upper levels of the DNS hi-
erarchy and analyze the lifetimes and network properties
of these threats. We also note that one of these campaigns
ceases to operate long before the malware associated with
it is discovered suggesting that network-based countermea-
sures may be useful in the identiﬁcation and mitigation of
future threats.
Malware writers have begun to pay attention to mobile
phones. In response, a signiﬁcant amount of effort has been
spent by researchers to characterize malware in mobile ap-
plications markets [14, 15, 21, 48, 47]. These efforts have
applied a range of static and dynamic analysis techniques on
a large number of applications in an attempt to discover ma-
licious code. Market operators including Google and Apple
have also invested signiﬁcant resources in an attempt to pre-
vent malicious applications from being installed on mobile
devices and for later removing such applications if neces-
sary. However, for all of these efforts, the extent to which
the mobile ecosystem is actually infected by such malware
is not well understood. Without such an analysis, it is im-
possible to determine whether or not current defense mech-
anisms are having any demonstrable effect.
In this paper, we make the ﬁrst network level analysis of
mobile malware using trafﬁc from a major cellular network.
We work from the hypothesis that malicious mobile applica-
tions are not different from the bots and malware in the non-
cellular world in that they rely on the same core functional-
ity of the Internet in order to achieve scale and robustness.
In particular, we began our research with the belief that ma-
licious behavior in the mobile environment similarly relies
on the same Internet hosting infrastructure used to support
traditional malware activities including propagation and up-
date (e,g., a malware download site), command and control
(e.g., communication with infected devices), and data trans-
fer (e.g., a site to upload of stolen data). Should this hypoth-
esis prove to be true, more traditional network-based tech-
niques for detecting and combatting malware [7] can poten-
tially be applied in this new space. As research on botnets
and malware have shown, such an Internet-based approach
is more effective and scalable than malware-analysis based
approaches, particularly in the face of (future) mobile mal-
ware with stealth, obfuscated logic, such as triggered-based
behaviors.
We verify our hypothesis experimentally using three
weeks of DNS data from a major US-based cellular provider
collected over the course of three months. We ﬁrst show that
the vast majority of the hosts resolved in the cellular dataset
are also seen in a separate DNS dataset from a non-cellular
ISP. After this conﬁrmation, we dig more deeply into the
cellular dataset and uncover a number of important results
regarding malicious behavior in cellular networks, includ-
ing the following contributions:
• Known mobile malware samples are virtually un-
seen: We extract DNS domains from large public and
private datasets of mobile malware and speciﬁcally
search for their resolution in our dataset. Our analy-
sis demonstrates that only a vanishingly small number
of mobile devices appear to be infected: 3,492 out of
380,537,128 devices, or less than 0.0009% of the pop-
ulation. This lends credence to the argument that while
the mechanisms market operators implement to protect
users from malware may be bypassable [9, 28], mal-
ware writers are failing to infect mobile devices with
much success. Like any application developer, a mal-
ware writer faces the challenging task of developing a
popular application (or a malicious application in dis-
guise) that will be downloaded by a large population.
That is, the probability that a user will download an un-
known malicious application is very small. In addition,
a legitimate application market will remove any known
malicious application, further reducing the probability
of a mobile malware being downloaded.
• Compare trafﬁc to suspicious hosts from iOS
against all other devices: Common opinion argues
that the closed nature of Apple’s App Store and op-
erating system make devices in this ecosystem more
secure. However, our analysis demonstrates that ap-
proximately 8% of iOS-based devices communicate
with known suspicious hosts, virtually the identical
frequency as all other mobile platforms. Accordingly,
users of these devices do not appear to be any more
or less likely to communicate with potentially mali-
cious hosting infrastructure than other users. To say
the least, iOS does not appear to provide any more ef-
fective mechanisms to prevent users from engaging in
unsafe activities.
• Observe campaigns with mobile malware clients:
We obtain trafﬁc from the upper layer of the DNS
hierarchy and analyze two major threats with mobile
malware clients. We see that the lifetime of these two
threats lasts on the order of months, and that the crim-
inal operators make use of network agility and move
Passive DNS Data Collection
1
8
Host
RDNS
= Collection Point
2
7
3
4
5
6
.
(root)
com.
(TLD)
example.com.
(AuthNS)
Figure 1: Example of the domain resolution process.
their hosting infrastructure over time (e.g., changing
domain names and IPs). Finally, we also note that
one of these campaigns cease operating long before
the mobile malware associated with each campaign is
ever identiﬁed, lending credence to the possibility that
network-based countermeasures may help identify and
mitigate (e.g., via DNS blacklisting) such threats faster
than the analysis of mobile malware.
The remainder of the paper is organized as follows.
Section 2 provides some background on DNS and related
works. Readers familiar with this may skip to Section 3,
which describes our dataset collection methodology and
the internals of the reputation propagation framework along
with the statistical features collected from the cellular DNS
data. Section 4 describes the internals of our knowledge
base and passive DNS data collected from a large non-
cellular US ISP. In Section 5, we present the ﬁndings of
our measurements and experiments.
2 Background
2.1 DNS
DNS is a backbone protocol for the Internet that maps
easy-to-remember domain names to IP network addresses.
The domain name space is arranged as a tree, beginning
with a root node. In the DNS hierarchy, under the root node
are the top-level domains (TLDs), and under the TLDs are
the second-level domains, and so on. Common TLDs in-
clude com., net., and uk.. A fully qualiﬁed domain name
(FQDN) includes all domain levels that describe the node
in the DNS tree; for example, the FQDN www.example.com.
contains the TLD (com.), the 2LD (example.), and the 3LD
(www.). A large portion of the domains are registered di-
rectly under a TLD. In some cases, however, this is not
possible; therefore, domains under which users can directly
register a new domain name are often considered effective
TLDs. The canonical example is that many domains in the
UK are registered under co.uk. and not under uk. directly.
The basic type of information link in DNS is the resource
record (RR). DNS deﬁnes a number of RR types. For ex-
ample, an A-type RR links a domain name with an IPv4
network address, while a CNAME-type RR links a domain
name with another “canonical” domain name [31, 32].
RRs are returned in response to a DNS query from a re-
quester. Figure 1 illustrates the DNS query process from a
host for the A-type record for example.com.. A DNS query
is initiated by a DNS resolver running on a host. This ap-
plication is responsible for generating some sequence of
queries and translating the responses to arrive at the re-
quested resource. There are two parts in a typical DNS res-
olution request: the recursive and iterative part. In a typical
use, an end system will issue a recursive request using a stub
resolver to a dedicated recursive DNS resolver (RDNS)
(Step 1, Figure 1).
In a recursive request, the RDNS is
charged with completing the iterative portion of the DNS
resolution process. It will communicate with the necessary
remote name servers (NS) and returns a DNS answer, from
the authoritative NS for the requested domain, to the stub
resolver in the form of an RR-set. In the case of Figure 1,
the RDNS sends iterative requests to the various levels of
the DNS hierarchy (Steps 2–7). In Step 7, the RDNS re-
ceives the authoritative answer for example.com., and sends
it to the requester (or stub resolver) in Step 8, completing
the DNS resolution. The RDNS will typically cache the
RR locally for up to some period, the Time To Live (TTL),
speciﬁed in the RR. This improves efﬁciency and reduces
the load on the DNS infrastructure.
2.2 Passive DNS Monitoring
Since a RDNS mediates all requests from a client’s stub
resolver, it is possible to perform passive DNS (pDNS)
data collection of DNS queries received at the RDNS. This
pDNS data collection typically includes all of the informa-
tion associated with the successfully resolved DNS queries
by the RDNS.
There are several beneﬁts to using pDNS monitoring for
DNS analysis. Malicious queries are able to be logged and
analyzed without alerting the owners of the malicious do-
mains (unlike DNS probing [30, 26]). Another beneﬁt of
pDNS data collection is that it can allow the discovery of
malicious domains not previously known to exist on DNS
blacklists (DNSBL) [7, 8, 10] and does not require previous
knowledge of the domain’s existence. A potential drawback
of pDNS data collection at the local RDNS level is that the
data collected will be limited by the amount of trafﬁc han-
dled by the RDNS. Therefore, it is important to collect a
large number of queries from a geographically diverse set
of RDNS servers.
3 Methodology
In this paper, we analyze DNS data generated by devices
subscribed to a major US cellular carrier. For simplicity, we
use the term “mobile devices” to describe smartphone and
tablet platforms (e.g. Android, iOS, and others). Our pri-
mary focus is Internet-based hosts contacted by mobile de-
vices using DNS. By host we mean a remote IP address in-
cluded in a successful A-type DNS domain name resolution.
We focus on the hosts as opposed to domain names explic-
itly because of the extensive forensic evidence already con-
nected with malicious behavior in the Internet (e.g., C&C,
drive-by, PPI, etc.). We link the hosts observed in DNS res-
olutions within a cellular network with historic evidence of
Internet abuse and reveal the extent to which mobile devices
contact hosts historically associated with known malicious
behavior.
Our monitoring point is a single sensor that aggregates
trafﬁc collected from several RDNSs providing DNS reso-
lution services for mobile devices located across many dif-
ferent US states. We perform two high-level tasks in or-
der to characterize malicious behavior generated by mobile
devices. First, we remove trafﬁc generated by non-mobile
devices (i.e., laptop and desktop machines also serviced by
this provider via hotspots and “cellular connect cards”) and
then attribute each request to a speciﬁc mobile device; sec-
ond, we perform a reputation analysis of the RRs associated
with these mobile requests and classify trafﬁc as having be-
nign, malicious or unknown reputation. This workﬂow is
shown in Figure 2, and the details of each task are provided
in the remainder of this section.
We use the following notation to more formally de-
scribe our workﬂow. A resource record (RR) refers to ei-
ther an A-type or CNAME-type record and its correspond-
ing RDATA [31, 32] tuple of (qname, ip) and (qname, do-
main) respectively. We represent a DNS query, qj , for a
domain name, d, and the related DNS response, rj , as the
tuple Qj(d) = (Tj, Rj, IPsj), where Tj identiﬁes the epoch
in which the query-response was observed, Rj is the unique
identiﬁcation of the device that initiated the query qj , d is
the queried domain, and IPsj is the set of resolved hosts as
reported in the response rj .
3.1 Mobile Device Identiﬁcation Process
Accurately identifying individual devices is challenging
due to IP address churn and device roaming in a cellular
carrier.
In order to ensure that we do not include non-
mobile devices in our evaluation, we must ﬁrst be able to
attribute trafﬁc to speciﬁc devices. We received proprietary
data from the carrier that allows us to deﬁnitively attribute
Devices In Cellular ISP
Task 1
(Section 3.1)
Unknown
Devices
Non-Mobile
(e.g., laptops)
Mobile
Task 2
(Sections 3.2, 3.3)
Benign 
Malicious
Unknown
DNS Trafﬁc
Figure 2: A high-level view of the two tasks required to
identify malicious behavior by mobile devices. First, all
trafﬁc generated by non-mobile devices is ﬁltered out of
our dataset. Second, the remaining trafﬁc is character-
ized as either benign, malicious or of unknown reputa-
tion.
trafﬁc to a mobile device operating on the network for each
epoch; however, we cannot correlate devices across epochs.
We formally deﬁne the set of mobile devices in an
epoch. Let M DEVi = {Rk}k=1...l be a set that con-
tains all l mobile device identiﬁers (Rk) for epoch i, and
i ∈ EP OCHS 1. We then deﬁne the set of domains re-
solved by M DEVi in epoch i as mDNi = {dk}k=1...n,
where n is the number of domains (dk).
Mobile devices are restricted to certain ranges of device
IDs that are only associated with operation over a cellu-
lar data connection (i.e., 3G or 4G). While this excludes
most traditional computing devices, trafﬁc generated by a
laptop or desktop using cellular connect cards or tethering
through a mobile phone remains in our dataset. We remove
this trafﬁc by examining the resource records associated
with each device and looking for mobile-speciﬁc domains.
While there is no ofﬁcial standard, there are some common
indicators for mobile-speciﬁc domains. One is the use of
mobile-speciﬁc subdomains such as m.example.com or mo-
bile.example.com. Another method is the use of the URI
path as a mobile indicator, but since we are working with
DNS data, we do not have access to this type of indicator.
Table 1 provides a subset of mobile indicators.
In addition to mobile indicators, some domains are
strongly or exclusively associated with mobile applications.
Such sites include mobile ad networks, mobile application