# Variables and Tools Overview
The relevant registry hives are:
- `HKLM/SAM`
- `HKLM/SECURITY`
- `HKLM/Software`
- `HKLM/SYSTEM`
- `HKEY_USER`

**Copyright Trustwave 2010 - Confidential**

## Process Overview
### Step-by-Step Guide

1. **Generate Bodyfile:**
   Use the `regtime.pl` script to generate a bodyfile for each hive file and `NTUSER.DAT`.

   ```bash
   perl regtime.pl -m HKLM/SAM -r C:\Cases\registry\SAM >> fs_bodyfile
   ```

   The `>>` operator appends the output to the existing `fs_bodyfile`. Using a single `>` would overwrite the file, so it's advisable to make a backup of `fs_bodyfile` before proceeding.

2. **Repeat for Each Hive:**
   Repeat the above command for each hive file and `NTUSER.DAT` you want to include in the timeline.

3. **Generate Super Timeline:**
   Run `mactime.pl` to create a human-readable, sortable, and searchable CSV file (easily opened in Excel).

   ```bash
   perl mactime.pl -d -b fs_bodyfile > super_timeline.csv
   ```

4. **Search the CSV File:**
   The `.csv` format is also searchable using UNIX commands like `grep`.

   ```bash
   C:\tools\strings super_timeline.csv | grep -i inetmgr.exe
   ```

   Example output:
   ```
   Sun Nov 16 2003 08:08:59,1301406,m..b,r/rrwxrwxrwx,0,0,47066-128-3,C:/WINDOWS/system32/inetmgr.exe
   Mon Apr 23 2007 10:53:45,19456,m...,r/rrwxrwxrwx,0,0,37482-128-3,C:/WINDOWS/system32/inetsrv/inetmgr.exe
   Mon Jun 11 2007 19:36:29,19456,...b,r/rrwxrwxrwx,0,0,37482-128-3,C:/WINDOWS/system32/inetsrv/inetmgr.exe
   Tue Jun 12 2007 09:47:42,0,m...,0,0,0,0,HKLM/Software/Microsoft/Windows/CurrentVersion/App Paths/inetmgr.exe
   Wed Nov 03 2010 12:01:34,19456,.a..,r/rrwxrwxrwx,0,0,37482-128-3,C:/WINDOWS/system32/inetsrv/inetmgr.exe
   Wed Nov 03 2010 12:13:37,19456,..c.,r/rrwxrwxrwx,0,0,37482-128-3,C:/WINDOWS/system32/inetsrv/inetmgr.exe
   Fri Jan 07 2011 04:32:59,1301406,..c.,r/rrwxrwxrwx,0,0,47066-128-3,C:/WINDOWS/system32/inetmgr.exe
   Fri Jan 14 2011 08:02:01,1301406,.a..,r/rrwxrwxrwx,0,0,47066-128-3,C:/WINDOWS/system32/inetmgr.exe
   ```

## Timestamp Alteration (Timestomping)
### Observations
- `inetmgr.exe` has two locations on the server: `~/inetsrv/` (valid) and `%systemroot%\Windows\System32\` (malware).
- The date on the binary in `System32` does not fit the system timeline, as the server was not in production until 2007.
- To determine if this is an anomaly or alteration, further investigation is required.

### Expert Opinion
Vincent Liu, the creator of Timestomp, in an interview with CIO magazine in May 2007, stated:
- "Forensic tools can be fooled, and their validity should be tested before court."
- "It’s easy to manipulate digital forensic evidence to make a machine look guilty or not guilty."

### Defeating Timestamp Alteration
- **$MFT Attributes:** The `$FILE_NAME` attribute in the `$MFT` cannot be altered on a live system.
- **Script by Harlan Carvey:** `mft.pl` parses the MAC(B) attributes and outputs them in a human-readable format.
  ```bash
  perl mft.pl c:\cases\registry\$MFT > ripped_mft.txt
  strings ripped_mft.txt | grep -C 6 -i inetmgr.exe
  ```

  Example output:
  ```
  M: Sun Nov 16 15:08:59 2003 Z
  A: Fri Jan 14 15:02:01 2011 Z
  C: Fri Jan 07 11:32:59 2011 Z
  B: Sun Nov 16 15:08:59 2003 Z
  FN: inetmgr.exe Parent Ref: 2783  Parent Seq: 1          $F_N
  M: Wed Jul 21 17:40:21 2010 Z
  A: Wed Jul 21 17:40:21 2010 Z
  C: Wed Jul 21 17:40:21 2010 Z
  B: Wed Jul 21 17:40:21 2010 Z
  ```

  - **Interpretation:** The second set of timestamps confirms the accurate birth date and time of the file, providing definitive evidence of timestamp alteration.

## Simplified Workflow
- **log2timeline:** The latest version of `log2timeline` automates the entire process.
  ```bash
  c:\perl\log2timeline\log2timeline.pl -r -z -f -w
  ```
  - **Features:**
    - Parses registry hives, event logs, `$MFT`, IIS logs, and more.
    - Runs on Windows and Linux.

## Demo
- **Create a Super Timeline:**
  - Use `fls`, `regtime`, and `mactime` to generate a super timeline from a postmortem image.
- **String Search:**
  - Perform a string search for known malicious files in the timeline.
- **Verify Timestamps:**
  - Compare `$SI` and `$FN` from the `$MFT` to verify timestamps of recovered files.

## Tools and Credits
- **Regtime.pl and mft.pl:**
  - **Harlan Carvey:** Author of "Windows Forensic Analysis," "Windows Registry Forensics," and the "Windows Incident Response" blog.
  - [Blog](http://windowsir.blogspot.com)

- **Fls and mactime.pl:**
  - **Brian Carrier:** Author of "Filesystem Forensic Analysis" and creator of "The Sleuth Kit."
  - [Website](http://www.sleuthkit.org)

- **Log2timeline:**
  - **Kristinn Gudjonsson:** Author of GCFA Gold paper "Mastering the Super Timeline With log2timeline" and the forensics blog "IR and Forensic talk."
  - [Blog](http://blog.kiddaland.net)

- **Additional Credits:**
  - **Rob Lee:** Original author of `mac_daddy`.
  - **Chris Pogue (@cpbeefcake):** Mentor for "Sniper Forensics" methodology.

## Conclusion
- **Anti-Forensics in Real World:**
  - Malware and attackers use anti-forensics techniques to obfuscate their trail.
  - Investigators need to be well-versed in recognizing and defeating these methods.
  - **Locard’s Exchange Principle:** Everything leaves trace evidence.
  - **Tool Usage:** The effectiveness of an investigator lies in how they use the tools, not just the tools themselves.

**Questions?**

**Thank You!**

**Contact:**
- **Email:** PI:EMAIL
- **Blog:** [eyeonforensics.blogspot.com](http://eyeonforensics.blogspot.com/)
- **Twitter:** @handlefree