0
t
n
e
i
c
ﬁ
f
e
o
C
g
n
i
r
e
t
s
u
l
C
0.03
0.025
0.02
0.015
0.01
0.005
0
10/16/04
12/29/04
12/23/04
Entire Top-Level
0 5 10 15 20 25 30 35 40 45
Time in top level threshold (hours)
(a) Percentage of peers in the stable core that
are part of the core’s largest connect
component
0 5 10 15 20 25 30 35 40 45
Time in top level threshold (hours)
(b) Diameter (top) and characteristic path
length (bottom) of the largest connected
component of the stable core
0 5 10 15 20 25 30 35 40 45
Time in top level threshold (hours)
(c) Clustering coefﬁcient within the largest
connected component of the stable core
Figure 10: Different angles of connectivity with the stable core
the stable peers, or SP (τ ), and only focus on this subset
in our analysis. However, by changing τ, we can control
the minimum uptime of selected peers and thus the relative
stability and size of SP (τ ).
To conduct this analysis, we use several slices of our
dataset where each slice is a period of 48 hours of con-
tinuous back-to-back topology snapshots, with hundreds of
snapshots per slice. Let’s consider the last captured snap-
shot over each 48 hour period as a reference snapshot. Any
peer in the reference snapshot must have joined the overlay
either before or during our measurement period. By look-
ing back through the snapshots, we can determine (with
accuracy of a few minutes) the arrival time of all peers
that joined during the measurement period. For those peers
that were present for the entire measurement period, we
can conclude that their uptime is at least 48 hours. Hav-
ing this information, we can annotate all peers in the ref-
erence snapshot with their uptime information. Figure 9(a)
depicts the CCDF of uptime among existing peers in the
reference snapshot for several slices (Figure 9(b) presents
the initial part of the same graph).
In essence, this ﬁg-
ure presents the distribution of uptime among participating
peers in steady state, implying that the size of SP (τ ) expo-
nentially decreases with τ. This is more visible over longer
time scales. Furthermore, this also implies that the total
number of possible connections within SP (τ ) dramatically
decreases with τ.
Internal Connectivity Within the Stable Core: To study
different angles of connectivity among ultrapeers within
SP (τ ), we focus only on the connections of the overlay
where both end points are inside SP (τ ), i.e., we remove all
edges to peers outside SP (τ ). We call this the stable core
overlay or SC(τ ). The ﬁrst question is: whether SC(τ ) is
fully connected? Figure 10(a) depicts the fraction of ultra-
peers within SC(τ ) that are in the largest connected com-
ponent, as a function of τ. This ﬁgure clearly demonstrates
that while the fraction of connected peers slightly decreases
with τ over long times scales, a signiﬁcant majority (86%–
94%) of peers within SC(τ ) remain fully connected. The
minor drop in the percentage of connected peers is due to
exponential decrease in number of peers within SC(τ ),
which in turn reduces the number of edges among peers,
and thus affects the opportunity for pairwise connectivity.
The second question is: how clustered and dense is the con-
nected portion of the core overlay? Figure 10(b) shows the
diameter and characteristic (mean) path length among fully
connected peers in the stable core overlay. Interestingly,
both the mean path length and the diameter of the stable
USENIX Association
Internet Measurement Conference 2005  
59
core overlay remain relatively stable as τ increases, despite
the dramatic drop in number of edges. Furthermore, the
mean path length for the stable core overlay, even when it
has a very small population (only 10% of top-level peers
for τ=45h), is around 5 hops, very close to the mean path
length for the entire top-level overlay (4.17–4.23 from the
ﬁrst row of Table 3). Finally, Figure 10(c) depicts the evo-
lution of the clustering coefﬁcient for the stable core over-
lay as τ increases, along with the clustering coefﬁcient for
the entire top-level overlay in the reference snapshot. This
ﬁgure shows two important points: (i) peers within the sta-
ble core overlay are more clustered together than the entire
top-level overlay on average, and, more importantly, (ii)
connectivity among peers within the stable core overlay be-
comes increasingly more clustered with τ. This latter point
implies that the longer a peer remains in the overlay, the
more likely it establishes connections to peers with equal
or higher uptimes, i.e., the more biased its connectivity be-
comes toward peers with higher uptime. Since connections
for all participating peers exhibit the same behavior, con-
nectivity of the overlay exhibits a biased “onion-like” lay-
ering where peers with similar uptime (a layer) have a ten-
dency to be connected to peers with the same or higher
Since the size of
uptime (internal layers of the onion).
SP (τ ) decreases with τ, this means that internal layers are
both smaller and more clustered.
External Connectivity to/from the Stable Core: To
quantify the connectivity between SC(τ ) and the rest of the
overlay we examined whether peers within SC(τ ) have a
higher tendency to connect to each other rather than peers
outside the core. To quantify any potential tendency, we
calculate the ratio of internal edges to the total number of
edges and compare that with the same ratio for a randomly
generated graph with the same number of nodes, same de-
gree distribution among nodes, and same number of edges.
For a fair comparison, we present the notion of a half edge
for a graph as follows: we cut the edge Eij between two
nodes i and j, and deﬁne Half Edge(i, j) as the half of
Eij that is connected to node i. Then, the ratio of internal
to total half-edges can be calculated as follows:
the core do not depend on peers outside the core for reach-
ability. In other words, the core overlay provides a stable
and efﬁcient backbone for the entire top-level overlay that
ensures connectivity among all participating peers despite
the high rate of dynamics among peers outside the core.
5.1 Examining Underlying Causes
A key question is: how does this onion-like layered con-
nectivity form in the overlay in an unintentional and un-
coordinated fashion? To address this issue, we quantify
the contribution of user-driven and protocol-driven dynam-
ics in changes of the edges of the overlay. We can distin-
guish protocol-driven versus user-driven changes in edges
between two snapshots of the overlay as follows: if at least
one of the endpoints for a changing edge has arrived (or de-
parted) between two snapshots, that change is user-driven.
Otherwise, a changing edge is considered protocol-driven.
To answer the above question, we examine a 48-hour slice
of back-to-back snapshots from 10/14/2004 to 10/16/2004,
using the ﬁrst snapshot as a reference. Given a slice, we
can detect new or missing edges in any snapshot compared
to the reference snapshot, for peers in both snapshots. Let
δp− and δu− (δp+ and δu+) denote the normalized ratio
of missing (and new) edges in a snapshot due to protocol-
driven (p) and user-driven (u) causes, normalized by the
number of edges in the reference snapshot. Figure 11(a)
and 11(b) depict δ−=δp−+δu− and δ+=δp++δu+ for back-
to-back snapshots for the slice under investigation. Each
ﬁgure also depicts the breakdown of changes in edges into
two groups: protocol-driven and user-driven changes. Note
that δp and δu are by deﬁnition cumulative. The left graph
(δ−) shows that around 20% and 30% of edges in the over-
lay are removed due to protocol-driven and user-driven fac-
tors during the ﬁrst 100 minutes, respectively. After this pe-
riod, almost all removed edges are due to departing peers.
Similarly, from the right graph, many edges are added dur-
ing the ﬁrst 100 minutes due to both protocol-driven fac-
tors and the arrival of new peers. After this period, almost
R = Pi∈SC Pj∈SC
Pi∈SC Pallj
Half Edge(i,j)
Half Edge(i,j)
Figure 9(c) depicts (Rg − Rr)/Rr as a function of τ
where Rg and Rr denote the value of R for several snap-
shots and their corresponding randomly generated graphs,
respectively. This ﬁgure demonstrates that the longer a peer
remains in the network, its connectivity becomes more bi-
ased towards peers with the same or higher uptime. This
is another evidence that peers exhibit an onion-like biased
connectivity and the degree of such bias increases with up-
time.
Implications of Stable and Layered Core Overlay: The
connectivity of the core overlay implies that all peers within
e
g
a
t
n
e
c
r
e
P
100
80
60
40
20
0
0
δ−
δu−
δp−
δ+
δu+
δp+
e
g
a
t
n
e
c
r
e
P
100
80
60
40
20
0
200
200
Time since beginning of window (minutes)
400
0
400
(a) Removed edges
(b) Added edges
Figure 11: Contribution of user- and protocol-driven dy-
namics in variations of edges in the overlay
60
Internet Measurement Conference 2005
USENIX Association
all new edges involve a newly arriving peer. These results
shows two important points: First, each peer may establish
and tear down many connections to other peers during the
initial 100 minutes of its uptime. But peers with higher up-
time (i.e., peers inside SC(τ ) for τ ≥ 100 min), maintain
their connections to their remaining long-lived neighbors,
and only add (or drop) connections to arriving (or depart-
ing) peers. This behavior appears to explain the formation
of the biased onion-like layering in connectivity within the
overlay. Second, user-driven dynamics are the dominant
factor in long-term changes of the overlay. Since dynamics
of peer participations exhibit similar dynamics in different
P2P systems [31], other Gnutella-like overlays are likely to
show similar behavior. We plan to conduct further investi-
gations to better understand the underlying dynamics that
contribute to this behavior.
6 Related Work
As listed throughout this paper, there are a handful of prior
studies on characterizing peer-to-peer overlay topologies in
ﬁle-sharing applications [23, 2, 20, 12]. These studies are
more than three years old, did not verify the accuracy of
their captured snapshots, and conducted only limited anal-
ysis. A recent study [18] used both passive measurement
and active probing of 900 super nodes to study behavior
of the Kaaza overlay. They have mostly focused on the
number of observed connections (within the top-level over-
lay and from the top-level overlay to leaf nodes) and their
evolution with time. However they have not examined de-
tailed graph-related properties of the overlay, or collective
dynamics of the entire overlay topology, both of which are
investigated in this paper.
There has been a wealth of measurement research on
other properties of peer-to-peer systems. These studies
cover several topics: (i) ﬁle characteristics [6, 17, 3, 19],
(ii) transfer characteristics [10, 17], (iii) peer character-
istics [25, 24], (vi) query characteristics [26, 3, 16, 4],
and (v) comparisons of different implementations [15, 11].
Since they explore different aspects of peer-to-peer net-
works, these studies complement our work. There have
also been several modeling and simulation-based studies
on improvement of search in Gnutella-like P2P networks
[5, 38, 37, 27]. Our characterization can be directly used
by these studies as a reference for comparison of suggested
topology models, and our captured overlay snapshots can
be used for trace-driven simulation of their proposed search
mechanisms.
Finally, the research studies on characterization of the
Internet topology (e.g., [8]) and network topology genera-
tors (e.g., [34]) are closely related to our work. However,
these studies focus on the Internet topology rather than an
overlay topology. We plan to conduct further characteri-
zation of the Gnutella topology by applying some of the
suggested graph analysis in these studies to the Gnutella
overlay topology.
7 Conclusions
In this paper, using Gnutella, we presented the ﬁrst detailed
characterization of an unstructured two-tier overlay topol-
ogy that is typical of modern popular P2P systems, based
on accurate and complete snapshots. We described fun-
damental challenges in capturing accurate snapshots, and
demonstrated that inaccurate snapshots can lead to erro-
neous conclusions—such as a power-law degree distribu-
tion. We characterized the graph-related properties of in-
dividual snapshots, the dynamics of the overlay topology
across different time scales, and investigated the underly-
ing causes and implications. Our main ﬁndings are sum-
marized in Section 1.1.
This study developed essential insights into the behav-
ior of overlay topologies which are necessary to improve
the design and evaluation of peer-to-peer ﬁle-sharing ap-
plications. The existence of a stable well-connected core
of long-lived peers suggests that there may be beneﬁts in
terms of increasing search resilience in the face ofd the
overlay dynamics, by biasing/directing the search towards
longer lived peers and therefore towards this core. It may
also be useful to cache indexes or content at long-lived
peers in order to reduce load on the stable core, especially if
the biased forwarding of queries is adopted. For example,
the idea of one-hop replication [21], intended for power-
law topologies, can be changed to a probabilistic one-hop
replication biased towards peers with longer uptime.
We are continuing this work along a number of direc-
tions. We are actively monitoring the Gnutella network
and plan to further examine the dynamics of peer partic-
ipation over short time scales, explore any longer term
trends in the topology, and observe variations in several
key properties (e.g., small-world coefﬁcient, degree distri-
bution, and mean pairwise distance) with time. We are ap-
plying our techniques to develop characterizations of the
eDonkey/Overnet and BitTorrent P2P networks in ongoing
work.
References
[1] slyck.com. http://www.slyck.com, 2005.
[2] L. A. Adamic, R. M. Lukose, B. Huberman, and A. R. Puniyani.
Search in Power-Law Networks. Physical Review E, 64(46135),
2001.
[3] E. Adar and B. A. Huberman. Free riding on gnutella. First Monday,
5(10), Oct. 2000.
[4] F. S. Annexstein, K. A. Berman, and M. A. Jovanovic. Latency ef-
fects on reachability in large-scale peer-to-peer networks. In Sympo-
sium on Parallel Algorithms and Architectures, pages 84–92, 2001.
[5] Y. Chawathe, S. Ratnasamy, and L. Breslau. Making Gnutella-like
P2P Systems Scalable. In SIGCOMM, 2003.
USENIX Association
Internet Measurement Conference 2005  
61
[6] J. Chu, K. Labonte, and B. N. Levine. Availability and Locality
Measurements of Peer-to-Peer File Systems. In ITCom: Scalability
and Trafﬁc Control in IP Networks II Conferences, July 2002.
[31] D. Stutzbach and R. Rejaie. Characterizing Churn in Peer-to-Peer
Networks. Technical Report 2005-03, University of Oregon, May
2005.
[7] clip2.com. Gnutella: To the Bandwidth Barrier and Beyond, Nov.
2000.
[8] M. Faloutsos, P. Faloutsos, and C. Faloutsos. On Power-Law Rela-
tionships of the Internet Topology. In SIGCOMM, 1999.
[9] A. Fisk. Gnutella Dynamic Query Protocol v0.1. Gnutella Devel-
oper’s Forum, May 2003.
[10] K. P. Gummadi, R. J. Dunn, S. Saroiu, S. D. Gribble, H. M. Levy,
and J. Zahorjan. Measurement, Modeling, and Analysis of a Peer-
to-Peer File-Sharing Workload. In SOSP, 2003.
[11] Q. He and M. Ammar. Congestion Control and Message Loss in
Gnutella Networks. In Multimedia Computing and Networking, Jan.
2004.
[12] M. Jovanovic, F. Annexstein, and K. Berman. Modeling Peer-
to-Peer Network Topologies through “Small-World” Models and
Power Laws. In TELFOR, Nov. 2001.
[13] T. Karagiannis, A. Broido, N. Brownlee, K. Claffy, and M. Falout-
sos. Is P2P dying or just hiding? In Globecom, Nov. 2004.
[14] T. Karagiannis, A. Broido, M. Faloutsos, and kc claffy. Transport
Layer Identiﬁcation of P2P Trafﬁc. In International Measurement
Conference, Oct. 2004.
[15] P. Karbhari, M. Ammar, A. Dhamdhere, H. Raj, G. Riley, and E. Ze-
gura. Bootstrapping in Gnutella: A Measurement Study. In PAM,
Apr. 2004.
[16] A. Klemm, C. Lindemann, M. Vernon, and O. P. Waldhorst. Char-
acterizing the Query Behavior in Peer-to-Peer File Sharing Systems.
In Internet Measurement Conference, Oct. 2004.
[17] N. Leibowitz, M. Ripeanu, and A. Wierzbicki. Deconstructing the
Kazaa Network. In WIAPP, 2003.
[18] J. Liang, R. Kumar, and K. W. Ross. The KaZaA Overlay: A Mea-
surement Study. Computer Networks Journal (Elsevier), 2005.
[19] J. Liang, R. Kumar, Y. Xi, and K. W. Ross. Pollution in P2P File
Sharing Systems. In INFOCOM, Mar. 2005.
[20] Q. Lv, P. Cao, E. Cohen, K. Li, and S. Shenker. Search and Replica-
tion in Unstructured Peer-to-Peer Networks. In International Con-
ference on Supercomputing, 2002.
[21] Q. Lv, S. Ratnasamy, and S. Shenker. Can heterogeneity make Gnu-
tella scalable? In IPTPS, 2002.
[22] S. Ratnasamy, P. Francis, M. Handley, R. Karp, and S. Shenker. A
Scalable Content-Addressable Network. In SIGCOMM, 2001.
[23] M. Ripeanu, I. Foster, and A. Iamnitchi. Mapping the Gnutella Net-
work: Properties of Large-Scale Peer-to-Peer Systems and Implica-
tions for System Design. IEEE Internet Computing Journal, 6(1),
2002.
[24] S. Saroiu, P. K. Gummadi, and S. D. Gribble. Measuring and Ana-
lyzing the Characteristics of Napster and Gnutella Hosts. Multime-
dia Systems Journal, 8(5), Nov. 2002.
[25] S. Sen and J. Wang. Analyzing Peer-To-Peer Trafﬁc Across Large
Networks. IEEE/ACM Transactions on Networking, 12(2):219–232,
Apr. 2004.
[32] D. Stutzbach and R. Rejaie. Characterizing the Two-Tier Gnutella
Topology. In SIGMETRICS, Extended Abstract, June 2005.
[33] D. Stutzbach and R. Rejaie. Evaluating the Accuracy of Captured
Snapshots by Peer-to-Peer Crawlers.
In Passive and Active Mea-
surement Workshop, Extended Abstract, pages 353–357, Mar. 2005.
[34] H. Tangmunarunkit, R. Govindan, S. Jamin, S. Shenker, and
W. Willinger. Network Topology Generators: Degree-Based vs.
Structural. In SIGCOMM, 2002.
[35] D. J. Watts. Six Degrees.
ACM Press, 2003.
In The Essence of a Connected Edge.
[36] R. H. Wouhaybi and A. T. Campbell. Phenix: Supporting Resilient
Low-Diameter Peer-to-Peer Topologies. In INFOCOM, 2004.
[37] B. Yang and H. Garcia-Molina. Designing a Super-Peer Network.
In International Conference on Data Engineering, Mar. 2003.
[38] B. Yang, P. Vinograd, and H. Garcia-Molina. Evaluating GUESS
In IEEE International
and Non-Forwarding Peer-to-Peer Search.
Conference on Distributed Systems, 2004.
Notes
1An earlier version of our work on graph-related properties of Gnutella
appeared as an extended abstract in SIGMETRICS 2005 [32].
2Throughout this paper, by “uptime” we mean the time that has elapsed
since the peer has arrived.
3http://netﬂow.internet2.edu/weekly/
4The degree distribution for all the presented results is limited to 500,
which includes all but a handful of peers with larger degree that are dis-
cussed later.
5To reduce the crawling speed, we simply limited the degree of con-
currency (i.e., number of parallel connections) to 60 in Cruiser.
6To properly compare these snapshots with different sizes, the y-axis
in Figure 4(a) was normalized by number of peers in the snapshot
7To our surprise, it appears that these peers monitor exchanged mes-
sages among other participating peers. They could be trying to locate
copyright infringement among Gnutella users or collecting ratings infor-
mation to measure which songs consumers might like to buy.
8Note that Gnutella does not run as a daemon. Therefore, peer ar-
rival/departure is a reliable indication of user action. We are mindful that
dynamic IP addresses could force some peers to leave and rejoin the net-
work with a new address. However, this does not affect our analysis since
we examine the effect of each departure/arrival event on the overlay dy-
namics.
[26] K. Sripanidkulchai.
its implications on scalability.
wadee/research/p2p/paper.html, Jan. 2001.
The popularity of Gnutella queries and
http://www-2.cs.cmu.edu/ kun-
[27] K. Sripanidkulchai, B. Maggs, and H. Zhang. Efﬁcient Content Lo-
In
cation Using Interest-Based Locality in Peer-to-Peer Systems.
INFOCOM, 2003.
[28] K. Sripanidkulchai, B. Maggs, and H. Zhang. An Analysis of Live
Streaming Workloads on the Internet. In Internet Measurement Con-
ference, Oct. 2004.
[29] I. Stoica, R. Morris, D. Liben-Nowell, D. R. Karger, M. F.
Kaashoek, F. Dabek, and H. Balakrishnan. Chord: A Scalable
Peer-to-peer Lookup Protocol for Internet Applications. IEEE/ACM
Transactions on Networking, 2002.
[30] D. Stutzbach and R. Rejaie. Capturing Accurate Snapshots of the
Gnutella Network. In Global Internet Symposium, pages 127–132,
Mar. 2005.
62
Internet Measurement Conference 2005
USENIX Association