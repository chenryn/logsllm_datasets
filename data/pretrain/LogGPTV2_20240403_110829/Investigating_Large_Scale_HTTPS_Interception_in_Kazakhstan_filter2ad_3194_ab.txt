test domain differs from the template response after several retries,
the measurement is marked as disrupted (for more details, refer to
Sundara Raman et al. [50].)
Figure 1: Kazakh users were directed to install a “security
certificate”—a custom CA used to intercept HTTPS connections to
popular sites. (Image source: [8]) ⋄
the browser remembers which certificates belong to each domain
after first use, was adopted by major browsers in the past but is
no longer supported [34]. Far more successful has been Certificate
Transparency (CT) [28], which records certificates in a public ledger
so that misissuance is at least detectable; Chrome now requires
certificates from public CAs to be logged to CT. However, since the
Kazakhstan attack involved users manually installing a custom CA,
none of these proposals would prevent it.
Kazakhstan’s attack was described at the time in informal online
reports by our team [48] and, later, F5 Labs [54]. This paper includes
significantly more detail and analysis.
2.2 Events in Kazakhstan before the Attack
Kazakhstan has a long-established, centralized policy of censorship
and surveillance, and many sites have been blocked or monitored for
several years [41, 43, 52]. The country is rated “Not Free” in Freedom
House’s “Freedom on the Net Report 2019” [20]. It regularly blocks
access to political dissent, religious media, and certain social media
sites [7].
In November 2015, Kazakhstan amended its communications
law to require ISPs to adopt a “national security certificate” for all
traffic to or from foreign destinations, with the intent of allowing the
government to decrypt the communication [45]. A short time later,
Kazakhtelecom, the country’s largest state-owned ISP, announced
plans to implement the measure [27, 39]. However, the plan was
dropped following lawsuits from several organizations [3, 11]. At
the same time, the Republic of Kazakhstan made a request to Mozilla
to add the Root Certification Authority of Kazakhstan as a trusted
CA [35]. This sparked significant discussion, but ultimately, because
of incomplete audit reports and concerns that the root certificate
would be used for interception, Mozilla denied the request [33, 35].
Kazakhstan’s next major step towards HTTPS interception began
on July 17, 2019, which we detail in this work. On that date, ISPs in
Kazakhstan were instructed by the government to communicate to
subscribers that they need to install (and trust) a government-issued
root certificate on all devices and in every browser for “security”
purposes. An SMS message sent to one ISP’s subscribers is shown
127
Dear subscriber! You have to install a Security Certificate from http://qca.kz/ to access the Internet according to article no. 26 of the Law "On Communications". We ask you to perform the installation on every subscriber's device connected to the Internet (smartphone, tablet, laptop, etc.) The lack of the Security Certificate being installed on the device will lead to problems while accessing certain Internet resources. Yours, Tele2.IMC ’20, October 27–29, 2020, Virtual Event, USA
Sundara Raman et al.
3.2 Results
While we did not detect any evidence of interception from our two
VPSes, measurements from two of the 52 RIPE Atlas vantage points
did observe the attack. The path to google.com and facebook.com
from both of these probes passed through AS9198 (Kazakhtelecom).
Out of the 82 Hyperquack vantage points, measurements to six
had mismatching certificates between control and test measure-
ments. Further investigation revealed that the certificate returned in
these cases was signed by the Kazakhstan root CA (Qaznet Trust
Network), the custom CA being used for interception. All six van-
tage points were also situated in AS 9198 (Kazakhtelecom) and
geolocated to the capital city, Nur-Sultan.
From the six Hyperquack vantage points that observed the at-
tack, connections with 27 popular social media and communication
sites in the SNI header triggered interception (see Table 2). For all
the other domains, the certificate was not injected, demonstrating
that interception was selectively targeted. Our experiments did not
indicate any change to the header or body of the response. This sug-
gests that the system merely inspected the decrypted data, though
we cannot rule out the possibility that payloads were selectively
altered.
Our investigation showed that connections were only inter-
cepted if they followed a network path that passed the interception
system. However, interception occurred regardless of the direction
that the connection took along the path. This meant that we could
trigger interception behavior from outside the country by making
connections to TLS servers inside Kazakhstan and sending targeted
SNI domains, allowing us to conveniently perform more detailed
measurements.
a certificate to be injected:
Overall, we found several conditions that had to be satisfied for
• The connection path had to pass through a particular part
of AS9198 (KazTelecom), the only AS where we observed
injection occur.
• The client had to send a TLS SNI header containing one of
• The server had to present a valid browser-trusted TLS certifi-
cate, but not necessarily a certificate for the domain provided
in the SNI header.
the affected domains.
These conditions were necessary but not sufficient. Some connec-
tions we made passed through AS9198 but did not trigger injection,
despite satisfying the other conditions.
4 IN-DEPTH MEASUREMENTS
Applying our initial findings, we began more detailed, larger-scale
experiments to measure additional properties of the interception
system and monitor its behavior over time. Our measurement in-
frastructure is illustrated in Figure 2.
4.1 Methodology
4.1.1 Measurements to TLS hosts. To conduct these measurements,
we needed to find TLS hosts that provided a valid browser-trusted
certificate. There were over 200,000 reachable TLS hosts in 129 ASes
in Kazakhstan, but only 6,736 presented a valid browser-trusted
certificate according to Censys [16]. These 6,736 TLS hosts were
located in 85 different ASes.
128
Figure 2: We performed detailed probes by connecting to TLS hosts
in Kazakhstan and sending TLS connections with affected domains
in the SNI header, exploiting the fact that interception could be
triggered bidirectionally. ⋄
On July 22, we performed a TLS handshake from a North Ameri-
can client to each of these 6,736 hosts, setting the SNI to facebook.
com and google.com, domains known to trigger the interception.
Following that measurement, we attempted the same connections
from one of our VPSes inside the country. This was to understand
which networks paths were being intercepted. Additionally, we
tested for interception of all domains from the Alexa Top 10,000
list from all TLS hosts where any interception was detected for
facebook.com or google.com.
4.1.2 TTL-limited measurements. To locate where the interception
was being performed, we employed a TTL-based technique similar
to traceroute. For each TLS host where we were able to trigger
interception, we made repeated connections with varying values
for the IP time-to-live (TTL) field in the packet containing the SNI
header, and we recorded the smallest TTL for which we received an
injected certificate response. This technique allowed us to pinpoint
the network location of the interception infrastructure.
On July 22, we performed this probe from a VPS in Kazakhstan to
each TLS host that experienced interception. For each host we made
two connections, one containing an SNI header for facebook.com
and one for an unaffected domain, and measured the first hop for
which we received a response.
Longitudinal measurements. In order to monitor the behavior
4.1.3
of the interception system over time, beginning on July 23, we
performed measurements from North America to the 6,736 TLS
hosts every ten minutes, setting the SNI header to google.com, ,
and three other affected domains. We tested for the presence of the
Qaznet certificate in each response.
4.2 Results
4.2.1 Extent of the Interception. Our measurements to the 6,736
TLS hosts on July 22 from North America found that only 459
servers (7.0%) had certificates injected, suggesting that HTTPS in-
terception was occurring in only a fraction of the network in Kaza-
khstan. Measurements from our VPS inside the country found 1,598
(24%) TLS hosts with certificates injected. While these hosts were in
different locations, the paths to all of them passed through AS9198,
further confirming that this was where the HTTPS interception
was taking place.
Purchased VPSHTTPS serversw/ trusted certMeasurement Machine (North America)- TCP handshake- TLS handshake w/ tested SNIsInvestigating Large Scale HTTPS Interception in Kazakhstan
IMC ’20, October 27–29, 2020, Virtual Event, USA
Table 1: ASes of hosts exhibiting interception were strongly
biased towards AS9198, where our TTL experiments indicated the
interception infrastructure was located. ⋄
Table 2: Intercepted domains. 37 domains out of the Alexa Top
10,000 triggered interception. Most were associated with Google,
Facebook, or the Russian Internet giant Mail.Ru. ⋄
Name
JSC Kazakhtelecom
AS
9198
29555 Mobile Telecom-Service LLP
48502
43601
50482
60708 KazNIC Organization
43934
ForteBank JSC.
JSC BankCenterCredit
JSC Kazakhtelecom
. . .Interbank Settlement Centre. . .
TLS hosts
385
32
23
9
7
2
1
Table 1 shows the ASes where the 459 TLS hosts that experi-
enced interception were located. As expected, TLS hosts in AS9198
(Kazakhtelecom) experienced the largest amount of interception,
since connections were more likely to pass through the intercepting
hops. Kazakhtelecom is the country’s largest provider, and many
connections to other ISPs also passed through it.
Interception Location. We performed TTL-limited measure-
4.2.2
ments from a VPS inside Kazakhstan to the 1,598 TLS hosts that had
previously observed interception. Partway through the measure-
ments, the interception system briefly stopped; by that point, we
had performed measurements for 1,212 TLS hosts, 99.5% of which
detected interception occurring at a hop earlier in the network
path than the host. In the majority of cases, interception occurred
only three or four network hops before the host. We confirmed
similar findings from our US-based vantage point using the same
technique.
Examining the IP addresses of the network hops in the tracer-
oute where interception occurred, we found that 95% of the time,
the last hop before the certificate was injected was 92.47.151.210
or 92.47.150.198, and the hop after injection was 95.56.243.92 or
95.59.170.59. All of these IP addresses are in AS9198 (Kazakhtele-
com), suggesting a centralized design in which this AS was the only
location responsible for HTTPS interception.
Injected Certificates. We also looked at patterns in the cer-
4.2.3
tificates returned by the interception system. While interception
was triggered by the domain in the SNI header sent by the client,
the names in the fake certificates were instead copied from those
in the server’s browser-trusted certificate. The fake certificates had
the following properties:
• Identical Subject and Subject Alternative Name (SAN) fields
• The public key was replaced with a host-specific 2048-bit
• The validity period (Not Before/Not After) was similar to
• The serial number was similar to the original certificate’s
• All other x509 extensions were removed.
the original certificate’s but shifted six hours earlier3.
RSA key (until July 19, 1024-bit), with exponent 3.
but with the last 33 bits changed randomly.
to the server’s real certificate.
The use of 1024-bit RSA keys exposes users to the risk of intercep-
tion by other governments—breaking 1024-bit RSA is likely within
3The validity period was updated to 24 hours on July 30, 2019 when the interception
was turned back on after a four-day shutdown.
129
Company
Google
Facebook
Mail.Ru
Others
Domains
allo.google.com, android.com, dns.google.com,
docs.google.com, encrypted.google.com, goo.gl,
google.com, groups.google.com, hangouts.google.com,
mail.google.com, messages.android.com,
news.google.com, picasa.google.com, plus.google.com,
sites.google.com, translate.google.com,
video.google.com, www.google.com, www.youtube.com,
youtube.com
cdninstagram.com, facebook.com, instagram.com,
messenger.com, www.facebook.com,
www.instagram.com, www.messenger.com
mail.ru, ok.ru, tamtam.chat, vk.com, vk.me,
vkuseraudio.net, vkuservideo.net
rukoeb.com, sosalkino.tv, twitter.com
reach for many nation-states [2], and the CA/Browser Forum has
deprecated 1024-bit RSA certificates [32]. Similarly, the use of ex-
ponent 3 in the RSA key may lead to a reduction in security that
could be exploited by other malicious actors [6]. These certificates
were signed by an intermediate CA (C = KZ, CN = Security
Certificate) that in turn was signed by the root (C = KZ, CN =
Qaznet Trust Network). The intermediate uses a 2048-bit RSA
key (with more typical exponent 65,537) and is valid for three years,
while the root certificate has a 4096-bit RSA key with a 30-year
validity period.
4.2.4 Censor’s TLS Fingerprint. Before generating a certificate, the
interception system connected to the original TLS server to retrieve
its real certificate for validation and replacement. We used a RIPE
Atlas node in Kazakhstan to connect to a server we controlled, with
the SNI header set to facebook.com. Instead of the expected TLS
handshake from the Atlas device, our server observed a handshake
from the interception system. Using TLS fingerprinting techniques
from previous work [21], we generated the fingerprint (hash) of
the Client Hello message. The interception system uses TLS 1.0 as
the TLS record-layer version, TLS 1.2 as the ClientHello handshake
version and offers 13 cipher suite options. The complete fingerprint
is provided in [51]. The interception system’s TLS fingerprint is
virtually unseen in normal HTTPS Internet traffic (collected by [21])
and can thus be used as a unique identifier for the MitM. Sites could
use this fingerprint to tell when a connection was being intercepted,
and alert the user, revoke exposed credentials, or not send sensitive
data. We reached out to a few affected websites, but none was able
to share data about the occurrence of this fingerprint.
4.2.5 Domains Targeted. After testing affected TLS hosts with do-
mains from the Alexa Top 10,000 [4], we found a total of 37 domains
that triggered interception. These domains are mostly social media
and communication sites, and are listed in Table 2. When ISPs in-