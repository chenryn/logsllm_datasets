DefCon 13
Shmoo-Fu: Hacker Goo, 
Goofs, and Gear with the 
Shmoo
The Shmoo Group
www.shmoo.com
DefCon 13
Stickers anyone?
DefCon 13
What's up Shmoo?
● Howdy & introductions...
● Our festivities will include:
– Super Spy Stuff
– IDN Fallout & Homograph Attacks 
for Personal Identities
– Revving Up Rainbow Tables
– Rogue Squadron & EAP Peeking
– Shooting Your Security Wad
– Don't Try This at Home
– And MORE!
DefCon 13
Super Spy Stuff
● Robots got boring, so Pablos 
starting hanging out with models 
after his chic hacker photo shoot 
in FHM.
● The result was nothing short of 
spectacular, as the fashionable 
cell-phone stowaway strifes hot 
women face were finally 
addressed.
DefCon 13
DefCon 13
And now...
Pablos.
DefCon 13
DefCon 13
3ricj?
DefCon 13
IDN Fallout
● At ShmooCon 2005, Eric 
Johansen dropped the browser 
bomb regarding IDN issues.
● The press ran with it a bit.
● The folks responsible for IDN 
ranted for a bit.
● But did anything concrete occur?
● And where are we now?
DefCon 13
Dan Moniz goes crazy...
DefCon 13
rainbowtables.shmoo.com
● We think rainbow tables are neat.
● Just for fun, we started hosting 
rainbow tables that we had  
generated.
– LanMan
– Via Bittorrent
– FREE
● Some people liked that.  Yay!
● Some people didn't...
DefCon 13
---------- Forwarded message ----------
From: Zhu Shuanglei 
Date: Mar 10, 2005 12:42 AM
Subject: About your shmoo site
To: PI:EMAIL
Hi, 
I am Zhu Shuanglei, the author of RainbowCrack software. I notice you are 
offering free BitTorrent links on your website for the rainbow tables. For 
those guys selling the table without permission from me, they are not welcome. 
But you are worse. 
As you may know, I develop the rainbowcrack tool and release it the the public 
for free. I just want to introduce the technique to the world and those need it 
can benifit from this software. If I sell the tables, I am only making some 
money for my work and for the fee of hosting my website and for my computing 
resource. This should be quite reasonable. I am not a business man, if I am 
there will not be the source code or table generation tool free on the net and I 
can make a lot of money. 
Are you feeling you are cool "Because knowing all passwords is cooler than 
trying to crack one. ;)". All over the world there will be a lot of guys can do 
what you do, they aren't. Do you know why? To show off prove neither your 
ability nor your knowledge. 
If possible, please keep honour of my intellectual property of this software, 
and let those need the tables to generate by themself. If everyone act like you 
there will be no reason for me to develop this software further or develop 
other useful software. Or I will never release anything useful to the public. 
Don't be crazy any more! 
Best Regards, 
Zhu Shuanglei 
DefCon 13
Revving Up Rainbow Tables
● So, badass LanMan tables are 
online now via Bittorrent, and 
still for FREE.
lm_alpha-numeric-symbol32-space.torrent
– Join the 43.9 GB torrent!!!
● Meanwhile, Dan decided to “be 
crazy” a bit more.
● We don't need your stinkin' code, 
Zhu!
● And Snax says, “FUCK OFF!”
DefCon 13
Unnamed Project
● Dan Moniz
● Rev. Dr. Patrick Stach
DefCon 13
Improving on 
RainbowCrack
● We started out trying to optimize 
RainbowCrack...
● But then we found out that it is 
teh suck.
● So we changed our approach and 
made a new tool.
● Doesn't have a name... yet.
DefCon 13
Problems with 
RainbowCrack
● Reduction function bias
● If your keyspace is 6 valid inputs, 
and you have 2^4 number of 
outputs, the reduction that 
RainbowCrack (slightly 
simplified) does is:
(total num of outputs) mod (total num 
of inputs) = bias marker
DefCon 13
Example of Reduction 
Function Bias
0 mod 6 = 0
1 mod 6 = 1
2 mod 6 = 2
3 mod 6 = 3
4 mod 6 = 4
5 mod 6= 5
6 mod 6 = 0
7 mod 6 = 1
8 mod 6 = 2
9 mod 6 = 3
10 mod 6 = 4
11 mod 6 = 5
12 mod 6 = 0
13 mod 6 = 1
14 mod 6 = 2
15 mod 6 = 3
That's a lot of modulo 
arithmetic. You'll notice 
that there are 3 of every 
value except 4 and 5. 
We only have two of 
those.
Say that LM had only 6 
possible inputs. Say that 
the algorithm (which in 
LM is DES) has up to 
2^4 outputs (16).
DefCon 13
Reduction Function Bias 
Continued
● By taking an arbitrary random output 
from the algorithm (we can assume that 
the algorithm output is random) and 
modulo it by 6, there's a better chance of 
the input values being below the bias 
marker than above.
● Values 0 to 3 have a better chance of 
being picked at random due to this than 
the 4-5 values as the next input.
DefCon 13
The Real Bias Problem
● This Riemann sum is not an integral 
factor of 2^64 just as 6 is not an 
integral factor of 16.
● This modulo arithmetic has a bias.
● You can assume the output of DES is 
statistically random, or at least 
random enough that the bias would 
still be present.
DefCon 13
Why this matters
●
n = the floored result of (total num of outputs)/
(total num of inputs)
●
We'll add 1 if n is below the bias marker to 
represent the extra chance it has due to the bias
●
(1+n)/(total num of outputs) = chance of hitting 
any one given key out of the input range
●
n/(total num of outputs) = chance of hitting any 
one given key out of the input range
●
Values below the bias marker are unfairly 
weighted and are more likely to be inputs to the 
rainbow chain generation!
DefCon 13
Our Generation Technique
(how we avoid bias)
● We start generating at the last 
possible input and walk towards the 
first input.
● As we generate we use a bitmask, so 
we can determine if we have 
computed the key or not. We have 
100% verified keyspace because 
everything is accounted for.
● At 1 bit per input it requires 768 GB of 
disk space if we were to do it on one 
machine.
DefCon 13
Our Badass Sorting-Fu
● We separate out anything less 
than or equal to 6 characters. 7 
character keyspace is one table, 
5-6 keyspace is another
● We do this so that you can detect 
the length of the password
● LanMan primer: take 14 bytes of 
input and split it into two 7 byte 
parts, hash them independently
DefCon 13
LanMan Hashing 
Examples
● Say you have a password “dog”
dog = DOG\0\0\0\0\0\0\0\0\0\0
● Which goes to...
DOG\0\0\0\0 \0\0\0\0\0\0\0
● You can detect that the first half 
is 7 characters or less because 
the second half is the null 
password hash.
DefCon 13
LanMan Hashing 
Examples
● Now with a password of “spamdadrulz”...
spamdadrulz = SPAMDADRULZ\0\0\0
● Which goes to...
SPAMDAD RULZ\0\0\0
● You know that this hash is 7 characters 
because the second half of the hash is not 
the null password hash.
● This decreases the time spent looking 
through worthless hash values!
DefCon 13
RainbowCrack Loses
● RainbowCrack just generates 
random hashes.
● And has that reduction function 
bias problem...
● Bad + Suck = l4m3x0r!!!
DefCon 13
We Get Our Crack On
● rtcrack reads in as much of the 
hash table file that rtgen 
generates using the read() 
syscall.
● It walks linearly checking to see 
if the endpoints match on the 
rainbow chains.
● This has O(n) complexity.
DefCon 13
We Get Our Crack On
●
We store the start point and the endpoints in 
separate files at corresponding offsets
●
Next we take the page size on x86 (4096 bytes) 
divided by the entry size (8) plus 1 (for the index) 
which equals 513
●
So every 513th entry, after we've sorted them 
lowest to highest, is stored in a special index file
●
At crack time, we mmap() the endpoint index file, 
and use divide and conquer (Fibonacci find) to 
find out if the endpoint is in this index file, or, if 
it's not, to which offset the endpoint is referenced 
in the master index file
DefCon 13
We Get Our Search On
● Thus, for each offset it has to 
read a max of one page of 
memory off of disk
● 4096 bytes read to check 512 
entries
● This is Bayes trees, modified
● Patrick has a Doctorate of 
Divinity in Searching and Sorting 
from the Church of Knuth
DefCon 13
RainbowCrack Gets An L 
For Lame
● Disk I/O costs as much CPU time 
as encryption in RainbowCrack, if 
not more.
● RainbowCrack fails to account for 
this in their statistics.
DefCon 13
The Seekret Sauce
● Our code is implemented in C and 
assembly for the IA64 (Itanium2) 
and running on a classified 
number of processors.
● Thanks to SGI!
● We also have the generator 
implemented in VHDL to run as 
custom specialized hardware to 
run on Spartan-3 FPGAs.
DefCon 13
New Wi-Fi kung-fu from 
Beetle...
DefCon 13
Why oh why do we Wi-Fi?
● Who here has an open wireless 
network at home?  At work?
● Crap!  My Tivo can't do WPA.  
Neither can my PSP.  Ummm... 
does it matter?
● When and where should we Wi-
Fi?
– Coffee Shops?  Airports?  Hospitals?  
Banks?  Ummm... Nuclear Power 
Plants?
DefCon 13
DefCon 13
DefCon 13
Where did we go wrong?
Where are we going?
● Technology of convenience versus 
the inconvenience of securing it.
● The poor, poor users were left out 
in the authentication cold.
● Half-ass security standards pass 
the buck and / or provide defacto 
insecure options.
● Security acronyms have taken 
precedence over proper 
implementation.
DefCon 13
DefCon 13
DefCon 13
How the FUCK does the 
user know?!
DefCon 13
Access Point
SSID: “goodguy”
SSID: “badguy”
Stronger or Closer
Access Point
“ANY”
Wi-Fi Card
SSID:
“goodguy”
“badguy”
DefCon 13
Rogue AP Attacks
Normal 
Gear @ 
25mW
(14dBm)
Cisco Gear @ 
100mW
(20dBm)
Senao Gear @ 
200mW
(23dBm)
Use a 15dBd 
antenna with a 
Senao for 
38dBd total...
6 WATTS!
VS 25mW?
BAD GUY 
WINS!  NO 
CONTEST!
Choose your Wi-Fi
weapon...
DefCon 13
DefCon 13
DefCon 13
DefCon 13
Rogue APs won't go away...
● Users will be users, and they WILL 
fall for access point 
“impersonators”.
● If you didn't notice, phishing and 
identity theft are on the rise... and 
so is hotspot usage.
● “Extra” wireless client profiles 
provide extra avenues of attack.
● EAP is an acronym, not a catch-all.
● Gartner can blow us.
DefCon 13