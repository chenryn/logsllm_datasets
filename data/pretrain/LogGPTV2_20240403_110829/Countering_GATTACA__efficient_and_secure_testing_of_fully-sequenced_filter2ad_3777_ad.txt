change does not affect protocol security arguments. Thus, we do
not provide a new proof for APSI in this paper.
P3MT involves two phases: ofﬂine and an online.
During the ofﬂine phase:
1. CA generates RSA public-private keypair ((N, e), d), pub-
lishes (N, e), and keeps d private.
2. Client prepares a ﬁngerprint of drug D: f p(D) = {(b∗
j||j)},
j is expected at position j of a genome suitable
where each b∗
for D.
3. Client obtains from CA an authorization auth(f p(D)), where
auth(f p(D)) ={σj | σj = H(b∗
4. Server runs the ofﬂine stage of the APSI protocol in Fig. 2,
on input, G ={(b1||1), . . . , (bn||n)}, and publishes resulting
{ts1, . . . , tsn}.
j||j)d mod N}.
During the online phase:
1. Client and Server run the online part of the APSI protocol in
Fig. 2. Recall that Client’s input is (f p(D), auth(f p(D))),
and Server’s is G.
2. After the interaction, Client obtains f p(D)∩G, and uses this
information to determine whether Server is well-suited for
drug D.
We note that auth is needed to limit the scope of the test on
a patient DNA: the FDA can guarantee that: (i) f p only covers
the appropriate set of required nucleotides, and (ii) pharmaceuticals
cannot input arbitrary portions of a patient genome.
The proposed P3MT protocol is resilient against (randomly dis-
tributed) sequencing errors. The size of the ﬁngerprint input by
Client in the protocol is negligible compared to the size of the entire
genome. Thus, positions corresponding to Client input are affected
by errors with extremely low probability.
Performance Evaluation. To estimate the efﬁciency of the P3MT
protocol, we consider two genetic tests commonly performed in the
context of personalized medicine: the analysis of hla-B and tpmt
genes. Our choice is also motivated by the size of their ﬁngerprints
that, according to genomics experts, is representative of most per-
sonalized medicine tests.
First, we look at the hla-B*5701 allelic variant, one G→T mu-
tation associated with extreme sensitivity to abacavir, a drug used
in HIV treatment [58]. In diploid organisms (such as humans), mu-
tation may occur in either chromosome inherited from the parents.
Thus, the related ﬁngerprint contains 2 (nucleotide, position) pairs.
We also consider the analysis of tpmt typically done before pre-
scribing 6-mercaptopurine to leukemia patients. As shown in [80],
two alleles are known to cause the tpmt disorder: (1) one presents
a mutation G→C in position 238 of gene’s c-DNA, (2) the other
presents one mutation G→A in position 460 and one A→G in po-
sition 719.4 Therefore, the resulting ﬁngerprint contains these 6
(nucleotide, position) pairs.
In the underlying APSI protocol (Fig. 2), cryptographic opera-
tions on Server genome do not depend on Client input. Therefore,
they can be computed ofﬂine, once for all possible tests. Moreover,
we have designed the P3MT protocol to be as generic as possible.
Our protocol runs on the whole Server’s genome — with linear
complexity — in order to address future scenarios where genomics
advances will cause better understanding of many more regions of
human genomes. To reduce ofﬂine costs, we apply reference-based
compression [5, 13] – a technique commonly used to efﬁciently
represent genomic information. In particular, Server input consists
of all differences between its genome and the reference sequence.
We emphasize that this technique does not require any biological
correctness of the reference genome that is only used for compres-
sion [39]. This allows us to reduce the size of Server input to about
1% of the entire genome.
Test
hla-b*5701
tpmt
Party
Client
Server
Client
Server
Ofﬂine
Time
–
206 mins
–
206 mins
Online
Time
0.82 ms
0.82 ms
2.46 ms
2.46 ms
Size
256 B
4.14 GB
768 B
4.14 GB
Table 4: Computation and communication costs of P3MT pro-
tocol for hla-b (2-nucleotide ﬁngerprint) and tpmt (6-nucleotide
ﬁngerprint) tests.
Table 4 summarizes execution time and bandwidth costs of the
P3MT protocol used for testing hla-B and tpmt. These costs can-
not be meaningfully compared to prior work, since, to the best
of our knowledge, there is no other technique targeting privacy-
preserving personalized medicine testing. Furthermore, as men-
tioned in Sec. 2, there are no current techniques that enforce ﬁnger-
print authorization by a trusted entity, such as the FDA. Also, prior
work is essentially designed for operation on DNA snippets, and it
is unclear how to efﬁciently adapt it to full genomes. Although a
detailed experimental study is out of scope of this paper, we intend
to include it as part of future work.
4.3 Privacy-Preserving Genetic Compatibility
Testing
Genetic Compatibility Testing (GCT) can predict whether po-
tential partners are at risk of conceiving a child with a recessive
genetic disease. This occurs when both partners carry at least one
4
For more details on tpmt and c-DNA, refer to [60] and [53], respectively.
698Client, on input: (C, Cσ), where
C = {c1, . . . , cv} and Cσ = {σ1, . . . , σv}
(∀i, σi = H(ci)d mod N )
Online
∀i 1 ≤ i ≤ v, Rc:i ← h1..⌊√N /2⌋i
∀i 1 ≤ i ≤ v, ai = σi · gRc:i
∀i 1 ≤ i ≤ v, tci = H′(a′
Out: {ci|ci ∈ C and tci ∈ {ts1, .., tsw}}
i · Y −Rc:i )
[Common input: (N, e, g, H, H′)]
Server, on input: S = {s1, . . . , sw}
Ofﬂine
{ˆs1, . . . , ˆsw} ← Π(S), with Π
random permutation
Rs ← h1..⌊√N /2⌋i
∀j 1 ≤ j ≤ w, ksj = H(ˆsj )2Rs
∀j 1 ≤ j ≤ w, tsj = H′(ksj)
{ts1, . . . , tsw}
{a1, . . . , av}
Y, {a′
1, . . . , a′
v}
Online
Y = g2eRs
∀i 1 ≤ i ≤ v, a′
i = (ai)2eRs
Figure 2: APSI Protocol from [15] (simpliﬁed for semi-honest security). The protocol is run on common input of RSA modulus
N = pq (with p and q safe primes), public exponent e, a random element g in Z∗
N and two hash functions, H and H′, modeled as
random oracles. All computation is mod N .
gene affected by mutation, i.e., they are either asymptomatic carri-
ers or actual disease sufferers. As in the Beta-Thalassemia exam-
ple discussed in Sec. 1, asymptomatic carriers usually need to learn
whether their potential partner is also a carrier of the same disease,
since this would pose a serious risk to their potential off-spring.
To achieve genetic compatibility testing with privacy we intro-
duce the concept of Privacy-Preserving Genetic Compatibility Test-
ing (PPGCT) that allows participants to run GCT without disclos-
ing to each other: (1) any other genomic information, and (2) which
disease(s) they are carrying or being tested for.
Current biological knowledge of the human genome allows screen-
ing for a genetic disease associated with one SNP in a speciﬁc gene.
In other words, most well-characterized genetic diseases are caused
by a mutation in a single gene. However, we anticipate that, in
the near future, researchers will develop tests for more complex
diseases (e.g., diabetes or hypertension) involving multiple genes
and multiple mutations. Therefore, we aim to design PPGCT tech-
niques not limited to single-mutation diseases. Additional motivat-
ing examples for PPGCT include compatibility testing for sperm
and organ donors.
The proposed PPGCT protocol involves two participants: Client
and Server. Client runs on input of a ﬁngerprint of a genetic dis-
the end of the interaction, Client learns the output of the test, i.e.,
ease ˆD. Server runs on input of its fully-sequenced genome G. At
whether Server carries disease ˆD.
Our cryptographic building block is Private Set Intersection (PSI)
[15, 16, 25, 41]. We select the speciﬁc PSI construction in [41],
shown in Fig. 3, since it achieves the best communication and com-
putation complexity.
It can also be instantiated in the malicious
model with only a small constant additional overhead.
The PPGCT protocol involves the following steps:
1. Client builds a ﬁngerprint corresponding to her genetic dis-
j is expected at posi-
2. Client and Server run the PSI protocol in Fig. 3 on respective
j||j)}, where each b∗
eases f p( ˆD) ={(b∗
tion j of a genome with disease ˆD.
inputs: f p( ˆD) and G.
mine whether Server carries disease ˆD.
3. Client obtains f p( ˆD) ∩ G, and uses this information to deter-
The change from PSI-CA to PSI is motivated as follows. Depend-
ing on the disease being tested, a positive outcome occurs if the
genome contains either: (1) the entire disease ﬁngerprint, or (2) a
given subset of nucleotides. In case of (1), the test result is positive
only if: f p( ˆD) ⊂ G,
i.e., f p( ˆD) ∩ G = f p( ˆD): if this happens,
there is actually no difference between the output of PSI and that of
PSI-CA. However, PSI-CA is preferred over PSI since, if the test
is negative, less information about Server genome is revealed to
Client. In case of (2), cardinality of set intersection is insufﬁcient to
assess the test result, since Client needs to learn which ﬁngerprint
nucleotides appear in Server’s genome.
Similar to its P3MT counterpart, the PPGCT protocol is resilient
to uniformly distributed errors.
In particular, since input size of
Client is small, corresponding positions in Server genome are af-
fected by errors with very low probability.
Open Problem: Unfortunately, a malicious Client could potentially
harvest Server’s genetic information (in addition to that needed for
the compatibility test) by inﬂating its input. For instance, a healthy
Client could learn whether or not Server carries a given genetic dis-
ease, unrelated to the compatibility testing.
Performance. As concrete examples, we use genetic compatibil-
ity tests for two genetic disorders: Roberts syndrome and Beta-
Thalassemia. We chose them since they are fairly common and the
size of their ﬁngerprints is representative of that in most genetic
compatibility tests.
Similar to P3MT, we stress that cryptographic operations per-
formed on Server genome, in the underlying PSI protocol, do not
depend on Client input. Therefore, these operations can be pre-
computed (just once) ahead of time.
First, we consider testing for Roberts syndrome. an autosomal
genetic disorder, characterized by pre- and post-natal growth de-
ﬁciency, limb malformations, and distinctive skull and facial ab-
normalities. As shown in [33], there are 26 single point muta-
tions (in the esco2 gene) causing this syndrome. Since humans
are diploid organisms, we expect Roberts syndrome ﬁngerprint to
contain about 52 (nucleotide, location) pairs.
Next, we turn to Beta-Thalassemia. As pointed out in [26], more
than 250 mutations in the hbb gene have been found to cause this
699o
o
/
/
o
o
disorder and most of them involve a change in a single nucleotide.
Although reliable techniques to perform this test in silico are not
yet available, it is reasonable to assume that the size of the Beta-
Thalassemia ﬁngerprint would include 2×250 = 500 (nucleotide,
location) pairs.
Table 5 summarizes run time (computational) and bandwidth
requirements for the PPGCT protocol for Roberts syndrome and
Beta-Thalassemia, respectively. Following the same arguments as
in P3MT experiments, we let Server input the portion of its genome
that differs from the reference genome, i.e., about 1%.
Test
Roberts syndrome
Beta-Thalassemia
Party
Client
Server
Client
Server
Ofﬂine
Time
–
67 mins
–
67 mins
Online
Time
7.26 ms
7.26 ms
70 ms
70 ms
Size
62.5 KB
4.14 GB
6.5 KB
4.14 GB
Table 5: Computation and communication costs of the PPGCT
protocol for Beta-Thalassemia (500-nucleotide ﬁngerprint) and
Roberts syndrome (52-nucleotide ﬁngerprint) tests.
Performance of the PPGCT protocol cannot be meaningfully com-
pared to prior work. As discussed in Sec. 2, it is not trivial to adapt
current secure pattern matching techniques to genetic compatibility
testing on fully sequenced genomes. An experimental study (in-
cluding the adaptation of such techniques) is left for future work.
5. SECURITY DISCUSSION
We now discuss security properties of protocols presented in this
paper. In general, security of each protocol is based on that of the
underlying building blocks. Therefore (and due to space limita-
tions), we omit proof details and defer them to the extended ver-
sion of this paper. Also, out cryptographic building blocks (PSI-
CA, APSI, and PSI) can be generally used in a black-box man-
ner. One can select any instantiation without affecting security
of our protocols, as long as the chosen construction yields secure
PSI/APSI/PSI-CA functionality. However, we pick speciﬁc instan-
tiations to maximize protocol efﬁciency. As discussed earlier, we
consider semi-honest adversaries (participants). Nevertheless, we
are not restricted to this model, since our cryptographic building
blocks are (provably) adaptable to the malicious participant model,
incurring a small constant extra overhead.
PPGPT. We now show that RFLP-based PPGPT protocol (Sec. 4.1)
is secure against semi-honest adversaries. We assume that PSI-CA
performs secure computation of the FPSI-CA functionality, in the
presence of semi-honest participants. We select the construction
in [17], that is secure under the One-More-DH assumption in the
Random Oracle Model (ROM).
We divide the protocol in two phases. In the ﬁrst, both Client and
Server privately and independently perform the RFLP-related com-
putation on their respective inputs.
(This covers steps 1 to 3 of
PPGPT). At the end of this phase, Client and Server construct sets
FC and FS , respectively. Clearly, during this phase, neither par-
ticipant learns anything about the other’s input. During the second
phase (steps 4-5), participants use FC and FS as their respective
inputs to PSI-CA. Given the security of the latter, Client only learns
|FS ∩ FC|. PSI-CA protocols may reveal |FS| to Client and |FC|
to Server. However, |FS| = |FC| = l, which is already known to
both parties.
P3MT. Similarly, security of the P3MT protocol (in Sec. 4.2), a-
gainst semi-honest Client and Server, stems from security of the
underlying protocol — APSI. That is, if APSI performs secure
computation of the FAPSI functionality in the presence of semi-
honest participants, then P3MT is also secure. This holds since