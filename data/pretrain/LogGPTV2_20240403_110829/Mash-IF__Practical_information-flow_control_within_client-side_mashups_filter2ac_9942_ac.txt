to the user what she could leak out once the call is 
This API is associated 
With the user's consent, 
the same situation 
is sensitive, 
with a write to  a remote 
the domain of Google. Since the information 
of the function 
rule or a declassification 
in the future. 
rule 
declassification 
her response 
XMLHttpRequeslO 
document.iocalionO _lrackPageViewO 
This approach 
could put too much faith in the content 
XMLHttpRequest.send() 
XMLHttpRequesl.selRequeslHeaderO 
Another issue the RM needs 
we can always choose to follow sensitive 
information 
of its APIs. If this is deemed too 
API functions. 
specifications 
provider's 
risky, 
into individual 
to deal with is how to label the content 
loaded from websites, 
XMLHt tpRequest. Our solution 
sensitivity 
ing input: if sensitive 
cookies) 
obtains 
will be labeled 
for example, 
is involved 
as high or very high. 
levels of an output according 
to its correspond­
information 
(e.g., 
in XMLHt tpRequest, the content 
or highly sensitive 
it 
down­
dynamically 
the data that come out of 
is a policy that infers the 
or automatically identified 
from a script. 
as (d, t), where d can be a script's 
by 
rule is associated 
for a script includes 
one can declassify 
with a specific mashup, 
or an object receiving 
rules. A declassification 
a flow with a set of labels 
the flow with a label 
writes an object, 
an information 
with a set of declas­
rule can be specified 
the subject's 
by the RM in accordance 
Whenever a subject 
to another subject, 
or 
flow 
labels occurs. This flow can be 
when it enters the Google Maps API 
se­
calls. These se­
with each tree de­
Declassification. 
passes information 
that carries 
declassified 
sification 
the user directly 
A user-defined 
and can be represented 
function 
t. For example, 
(sensitive, Facebook) 
getLatLng. The rule generated 
quences of DOM accesses 
quences are organized 
fined as T(N,E), where N =  {nln is function 
and E =  {(x,y)lx 
in Figure 3. Each tree is rooted at a specific program loca­
tion where a function 
tive or highly sensitive 
other subjects 
scribes 
information 
classifies 
not correspond 
rule, the RM monitors 
from a script once it reads a sensitive 
object, 
rooted at the input instruction. 
that does 
to any path on these trees. To enforce the 
or a DOM access inputs from sensi­
objects, 
the output produced by the execution 
from the input to the output. Such a rule de­
A path from the root to a leaf de­
and its leaves output data to 
into a set of trees, 
their sequence 
an execution 
and function 
and attempts 
or objects. 
to identify 
If this fails, 
name }, 
the output is re-
from a tree 
all the calls and DOM operations 
or highly sensitive 
path within the script that propagates 
E N,y EN}. Examples are illustrated 
consideration 
demon­
treats 
language 
sensitive 
that subset, 
our approach 
analyzable; 
as elaborated 
only sensitive 
is the pragmatic 
a static analysis 
in prior research 
that no execution 
if any of their inputs is 
[26] to be completely 
data will slip under the radar. 
come at the cost of the privacy 
on a subset of the JavaScript 
In this way, Mash-IF ensures 
as did the BLP model, and considers 
and tracking 
performance 
Figure 3. The Declassifica
in Section 3.4, 
mechanism that works 
way: as long as no rule 
the output of a script is deemed 
mash ups can be non­
flows can avoid a sig­
On the other hand, such a ben­
as­
tion Tree 
they are modeled in a public-default 
matches a call sequence, 
clean. Behind this treatment 
that most data flows within legitimate 
sensitive, 
nificant 
impact. 
efit does not necessarily 
surance Mash-IF can achieve: 
the DRG includes 
effectively 
strated 
for the statements 
outside 
them as black-boxes, 
all of their outputs to be sensitive 
sensitive. 
path propagating 
Data-flow control. Information-flow 
whenever the RM observes 
sensitive 
remote host in a different 
domain. cookie needs to go through DOM operations, 
which our approach mediates. 
a script, 
through function-call 
property 
page can also leak out sensitive 
domain, which can be monitored 
DOM operations. 
the invoca­
tion of the mashup APIs that could cause information 
such as getLatLng. Actually, 
are not the only 
mashup components 
sensitive 
Such activities, 
are monitored 
rule is found, the RM either directly 
ing activities, 
mission to proceed. 
activities 
such as XMLHt tpRequest, can be monitored 
control happens 
access to highly 
to  a 
information 
like 
them and asks for the user's per­
in 
of document or the source of an image in web 
sent out by form submission. 
by the RM. Once a violation 
hooking. Setting the location 
domain. Access to objects 
in touch with the outside: 
through interception 
stops the correspond­
data can be directly 
the RM controls 
cross-domain 
information 
of sensitive 
In addition, 
of the control 
to  a different 
DOM events, 
Networking 
for example, 
To minimize 
or delivery 
or suspends 
will trigger 
however, 
scripts 
objects 
leaks, 
which 
of 
of 
the user's  involvement 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
255 
DSN 2010: Li et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:05:29 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
and given her consent, 
can record her decision 
on one 
extend it to  a pol­
under the same cir­
automatically 
our approach 
this process, 
access request, 
icy that can be enforced 
cumstance, 
hand, all the policy settings 
tomized by the user. 
without consulting 
the user again. On the other 
and rules are allowed to be cus­
3.4. Declassification
-Rule Generator 
Once a script's 
DaM operation 
or function 
information, 
call imports 
the RM identi­
where the access happens, 
and at­
a declassification 
fails, 
If the attempt 
rule from the database 
the RM passes 
to the location. 
or highly sensitive 
sensitive 
fies the program location 
tempts to retrieve 
according 
the script to the DRG to generate 
forms a static 
all its execution 
mation to an output, 
and DaM operations 
analysis 
on the script's 
source code to extract 
paths that could propagate 
and then uses the sequences 
on these paths to build the rule. 
sensitive 
infor­
of the calls 
the rule. The DRG per­
JavaScript 
is well known to be hard to analyze stati­
for example, 
and eval function, 
code is not necessary 
without running the code. However, a thorough 
typing, 
analysis 
features, 
The classic 
of JavaScript 
BLP model treats 
Lambda functions 
flows within a script difficult to 
rules with small false positives 
receives 
are deemed sensitive. 
cally [26], due to some of its language 
lack of static 
that make the information 
determine 
and accurate 
here: what we want are just a set of "good enough" de­
classification 
false negatives. 
black box. Whenever the subject 
all of its outputs 
too coarse-grained 
many of them need to communicate 
appropriate 
communication 
is designed 
approach 
from a fixed input to outputs. 
be accurate: 
command as a black boxes, and track all of its outputs 
it operates 
no sensitive 
to refine such an information 
we can always treat a complicated 
to be useful for controlling 
with the website in­
the data they read, though such 
seeks all the execution 
paths that propagate 
data 
on sensitive 
data. 
for receiving 
often involves 
This analysis 
flow model. Our 
does not need to 
data. The DRG 
once 
and negligible 
a subject 
a sensitive 
This treatment 
input, 
is just 
as a 
real scripts: 
JavaScript 
Prior research 
shows that accurate 
static 
analysis 
can be 
[26]. The DRG 
called JavaScriptsA, 
language 
structures 
other language 
as black boxes. As a re­
works on this subset, 
done on a subset of JavaScript 
we implemented 
treating 
sult, we can achieve a very good coverage, 
paths that propagate 
chance of false positive, 
ally does not leak information, 
JavaScript 
quently 
built the DRG prototype 
elaborate 
used by legitimate 
all 
data. On the other hand, the 
the path that actu­
as the 
not in the subset are actually 
not fre­
we 
we 
[26]. In our research, 
Following 
our design and implementation. 
i.e., involving 
statements 
as a Firefox 
sensitive 
plug-in. 
identifying 
scripts 
is reasonably  low, 
Building CFG. Before analyzing 
JavaScript 
graph (CFG). It starts 
from the Abstract 
codes, the DRG first generates 
a control 
flow 
information 
flow within 
Syntax Tree (AST) 
virtual 
by calling 
a set of API functions 
[25] of Spider­
machine of the Firefox [24]. 
produced 
Monkey, the JavaScript 
The CFG consists 
node represents 
transition 
A basic block is a statement  sequence 
jump target, 
another 
of a set of nodes and arcs, where each 
the 
ends at a branch statement and 
a basic block, and each arc represents 
of an execution 
from one basic block to another. 
does not include 
branching. 
that begins with a 
which has been shown to be prac­
of 
if we focus on 
is hard, but can still be achieved 
Dataflow analysis on JavaScriptsA. Static analysis 
JavaScript 
a subset of the language, 
tical and effective 
we identified 
oughly evaluated 
a set of rules to describe 
propagated 
that can be thor­
and came up with 
data are 
how the labels of sensitive 
JavaScriptsA, 
by the statement 
such a subset, 
through static 
within that set. 
analysis, 
by the prior work [26]. In our research, 
according 
The analysis 
path that moves sensitive 
starts with a set of variables 
that accom­
Each of 
{v}. For 
la­
to those 
with its input variables 
propaga­
to the statement's 
data from 
modate the data a script reads from DaM objects. 
v is given a set of labels labelv  = 
such variables 
every statement 
along the CFG, our analyzer propagates 
bels from the sets associated 
of its output variables, 
tion rule. An execution 
an input to an output is identified 
to the Internet 
data to be delivered 
with some labels. 
The path is then extracted 
declassification 
essentially 
and thus can be solved using existed 
erative 
data flow analysis 
an inter-procedure 
across different 
if the variables 
are found 
analysis 
functions. 
definition 
classic 
rule. The problem of finding such a path is 
that tracks sensitive 
algorithm for 
[33]. Our approach 
to be associated 
the well-known 
also includes 
for building 
reaching 
problem [33] 
holding 
the 
data flows 
it­
a 
One important 
on one variable 
every operation 
is transitive, 
will also happen 
and can there­
issue we need to deal with is alias. In 
"a" to another 
vari­
between them, and 
an object variable 
an alias relation 
a large set of variables. 
as the DRG does not know that an ac­
analysis, 
variable 
JavaScript,  assigning 
able "b" will establish 
as a result, 
to the other. Such a relation 
fore involve 
data-flow 
cess to a 
flow from another one. We solved this problem in our re­
search by annotating 
ables in a data structure 
them. Those variables 
Whenever an operation 
to one of them, the DRG propagates 
every member in the chain. 
that the DRG maintains 
among different 
vari­
to track 
by an alias chain. 
is found to transfer 
are linked together 
the alias relation 
This can impede our 
the sensitive 
a sensitive 
sensitive 
data 
generates 
actually 
label to 
information 
such as eval ( )  and variable 
of JavaScript, 
Analysis of the statements outside JavaScriptsA. Dy­
namic features 
index of array, are not included 
tures are known to be the part of the language 
alyze statically. 
DRG adopts a strategy 
these features 
in JavaScriptsA. 
These fea­
hard to an­
as a black box and applies 
that treats the statement 
To track data flows in their presence, 
the BLP model to 
involving 
the 
978-1-4244-7501-8/lO/$26.00 
©20lO IEEE 
256 
DSN 20lO: Li et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:05:29 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
As a result, 
whether the sensitivity 
pessimistically 
estimate 
its sensitive 
outputs. 
attribute, 
we 
will operate 
and nonsensi­
As an example, consider the statement 
id = 
as long 
element, 
is that the value 
cannot determine 
during the runtime. 
The hurdle here, however, 
here is to 
id as sensitive 
to id. Our solution 
labeling 
as the BLP does. 
also happen to objects and complex 
here is how to determine 
if x points to the sensitive 
and an ele­