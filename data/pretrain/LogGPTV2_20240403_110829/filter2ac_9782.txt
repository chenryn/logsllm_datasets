title:Evaluating the effect of centralization on routing convergence on
a hybrid BGP-SDN emulation framework
author:Adrian G&quot;amperli and
Vasileios Kotronis and
Xenofontas A. Dimitropoulos
Evaluating the Effect of Centralization on Routing
Convergence on a Hybrid BGP-SDN Emulation Framework
Adrian Gämperli
ETH Zurich
Vasileios Kotronis
ETH Zurich
Zurich, Switzerland
PI:EMAIL
Zurich, Switzerland
PI:EMAIL
Xenofontas
Dimitropoulos
FORTH
Heraklion, Greece
PI:EMAIL
1. MOTIVATION
A lot of applications depend on reliable and stable Internet
connectivity. These characteristics are crucial for mission-
critical services such as telemedical applications. An im-
portant factor that can aﬀect connection availability is the
convergence time of BGP, the de-facto inter-domain routing
(IDR) protocol in the Internet. After a routing change, it
may take several minutes until the network converges and
BGP routing becomes stable again [13]. Kotronis et al. [8,9]
propose a novel Internet routing approach based on SDN
principles that combines several Autonomous Systems (AS)
into groups, called clusters, and introduces a logically cen-
tralized routing decision process for the cluster participants.
One of the goals of this concept is to stabilize the IDR sys-
tem and bring down its convergence time. However, testing
whether such approaches can improve on BGP problems re-
quires hybrid SDN and BGP experimentation tools that can
emulate multiple ASes. Presently, there is a lack of an easy
to use public tool for this purpose. This work ﬁlls this gap
by building a suitable emulation framework and evaluating
the eﬀect that a proof-of-concept IDR controller has on IDR
convergence time.
Categories and Subject Descriptors
C.2.2 [Network Protocols]: Routing Protocols
; C.2.3 [Network Operations]: Network Management
Keywords
BGP; Software Deﬁned Networks; Emulation
2. OBJECTIVES
Our primary objective is to support hybrid BGP-SDN
experiments with multiple ASes using real router software.
This is needed since when deploying a new IDR approach
one cannot change the whole infrastructure at once. The
framework should take care of conﬁguration management
such as IP preﬁxes and BGP policy templates and the user
Permission to make digital or hard copies of part or all of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage, and that copies
bear this notice and the full citation on the ﬁrst page. Copyrights for third-
party components of this work must be honored. For all other uses, contact
the owner/author(s). Copyright is held by the author/owner(s).
SIGCOMM’14, August 17–22, 2014, Chicago, IL, USA.
ACM 978-1-4503-2836-4/14/08.
http://dx.doi.org/10.1145/2619239.2631458.
should be able to actively control the experiments, e.g., dy-
namically changing the topology and verifying the eﬀects of
changes. Furthermore, it should be possible to easily create
topologies based on measured Internet data or theoretical
models. This way an experimenter should be able to con-
centrate more on the experiments and her concept rather
than bothering with conﬁguration and management.
Our second objective is to demonstrate the eﬀect of cen-
tralization on IDR convergence time. We designed and im-
plemented a proof-of-concept IDR SDN controller that ex-
ploits centralization to improve IDR convergence time based
on the following design goals. First, the controller should
inter-operate with legacy BGP routers. Moreover, the clus-
ter network is transparent to the legacy BGP world, there-
fore ASes within the cluster maintain their AS identity. In
addition, we want to support disjoint AS sub-clusters con-
trolled by the same controller, so that an intra-cluster link
failure does not isolate the controlled ASes: paths over the
legacy Internet could still connect the sub-clusters.
3. HYBRID SDN & BGP EMULATION
FRAMEWORK
The framework is based on a slightly modiﬁed version of
Mininet [10] that supports the functionality of Quagga [3]
– a popular BGP software. The topologies can be either
artiﬁcial or built from the iPlane Inter-PoP links [12] and
the CAIDA AS Relationship [11] datasets. The framework
automatically assigns IP addresses and conﬁgures network
devices, including customer-to-provider and peer-to-peer re-
lationships. To isolate the eﬀects of inter-domain from intra-
domain routing every AS is emulated by a single network
device. This abstraction is useful for use-cases such as ours.
Legacy BGP World
Cluster
M
C
8.0.1.0/29
8.0.6.0/29
BGP router
C
Cluster BGP Speaker
SDN Controller
BGP monitor
SDN Switch
M
Figure 1: The diﬀerent components of an example
hybrid BGP/SDN emulation experiment.
369In Fig. 1 we show the components of an example experi-
ment. On the left side, we see the legacy BGP part of the
emulated network, whereas on the right side we illustrate an
SDN cluster, composed of OpenFlow switches. BGP routers
and SDN switches can originate preﬁxes. It is also possible
to add hosts with IP addresses within a particular preﬁx for
monitoring end-to-end connectivity with tools like ping, etc.
All BGP routers peer with a BGP route collector, which col-
lects routing updates for monitoring purposes. Moreover,
within the SDN cluster we have a special BGP speaker,
called cluster BGP speaker, which relays routing informa-
tion between external BGP routers and the SDN controller.
The cluster BGP speaker is implemented with ExaBGP [6].
For every BGP peering there is a link from the cluster BGP
speaker to the border SDN switch, so as to relay control
plane information over the switches.
Experimental setups can be written in Python. We im-
plemented several additional Mininet-BGP commands to an-
nounce preﬁxes, wait until BGP has converged, etc. Addi-
tionally, the framework supports tools for automatic log ﬁle
analysis, network graph creation, convergence time and loss
measurement, and route change visualization. For example,
to facilitate experiments on IDR stability, the framework
detects when the network has converged and whether there
is stable connectivity between all hosts. Other compatible
tools can be added as Mininet is an extensible platform.
We built an IDR SDN controller over the cluster BGP
speaker (using POX [2]), to evaluate the eﬀect of IDR cen-
tralization on convergence time. More details on the de-
sign and implementation of the IDR controller can be found
at [7]. An important insight that we gained is that we can
not naively use the same loop avoidance mechanism as BGP,
due to the diﬀerences between the distributed path selec-
tion of BGP and the centralized routing control of SDN.
We therefore introduce two graphs for the route selection
process: the Switch graph, representing the physical topol-
ogy of the switches in the cluster and the AS topology graph,
which is a transformation of the switch graph per destination
preﬁx. The transformation is restructuring the graph tak-
ing carefully into account paths that cross the legacy world
and the SDN cluster so as to avoid loops. Best path cal-
culations are based on the Dijkstra algorithm, running on
the AS topology graph. AS routes are then compiled to
ﬂow rules on the SDN switches. Another design insight we
gained is the need for a delayed recomputation of best paths
on the controller’s side, so as to improve overall stability and
rate-limit route ﬂaps due to bursts in external BGP input.
4. DEMO AND RESULTS
The demonstration will show the framework and our use-
case. One part of the demo will focus on how researchers
can use the framework to run and manage experiments [1].
Secondly, we will demonstrate the eﬀect of SDN central-
ization on IDR convergence time showing visually how it
aﬀects an end-to-end video application under diﬀerent sce-
narios. Our experiments on a clique topology [7] show that
IDR centralization can improve the convergence time even
with small SDN cluster deployments.
In Fig. 2 we show
how the convergence time can be linearly reduced in a route
withdrawal experiment with diﬀerent percentages of SDN
deployment in a 16-node clique. On the other hand, route
fail-over and announcement experiments did not show this
linear improvement, but smaller reductions.
Figure 2: IDR convergence time of route withdrawal
on a 16-AS clique topology versus fraction of ASes
with centralized route control. The remaining ASes
use standard BGP. We show boxplots over 10 runs.
5. RELATED WORK
MiniNext [4] is a hybrid SDN - legacy routing emulator
based on Mininet and Quagga. However, while MiniNext
aims at emulating operational environments and focuses on
low-level APIs, our framework focuses on multi-AS IDR ex-
periments and provides a high-level API for experiment life-
cycle orchestration. The Open Network Operating System
(ONOS) [14] is built to be production ready for large-scale
networks. Our approach is better suited for rapid prototyp-
ing. Due to simpliﬁcations such as cooperative multitasking,
we can focus more on research questions than on state con-
sistency and concurrency issues. Finally, RouteFlow [5] is a
platform where the controller application mirrors the SDN
topology to a virtual network and runs a legacy routing pro-
tocol on top of it. Our controller however does not rely on
routing decisions of legacy protocols but runs its own algo-
rithms, enabling better integration with SDN concepts.
Acknowledgements: This work was partly funded by
European Research Council Grant Agreement n. 338402.
6. REFERENCES
[1] http://youtu.be/Cbc8XlIp_C0.
[2] POX. http://www.noxrepo.org/pox/about-pox/.
[3] Quagga Routing Software Suite.
http://www.nongnu.org/quagga/.
[4] B. Schlinker et al. Try Before you Buy: SDN Emulation with
(Real) Interdomain Routing. In Proc. of ONS, 2014.
[5] C. E. Rothenberg et al. Revisiting Routing Control Platforms
with the Eyes and Muscles of Software-deﬁned Networking. In
Proc. of ACM HotSDN, 2012.
[6] Exa Networks. Exa-Networks/exabgp.
https://github.com/Exa-Networks/exabgp.
[7] A. G¨amperli. Evaluating the Eﬀect of SDN Centralization on
Internet Routing Convergence. Master’s thesis, ETH Z¨urich,
2014.
[8] V. Kotronis, X. Dimitropoulos, and B. Ager. Outsourcing the
Routing Control Logic: Better Internet Routing Based on SDN
Principles. In Proc. of ACM HotNets-XI, 2012.
[9] V. Kotronis, X. Dimitropoulos, and B. Ager. Outsourcing
Routing using SDN: The Case for a Multi-Domain Routing
Operating System. In Poster Proc. of ONS, 2013.
[10] B. Lantz, B. Heller, and N. McKeown. A Network in a Laptop:
Rapid Prototyping for Software-deﬁned Networks. In Proc. of
ACM HotNets-IX, 2010.
[11] CAIDA. As relationships dataset.
http://www.caida.org/data/as-relationships/.
[12] University of Washington. iPlane: Datasets.
http://iplane.cs.washington.edu/data/data.html.
[13] Oliveira, Ricardo et al. Quantifying Path Exploration in the
Internet. In Proc. of ACM IMC, 2006.
[14] ON.Lab. What is ONOS? http://tools.onlab.us/onos.html.
370