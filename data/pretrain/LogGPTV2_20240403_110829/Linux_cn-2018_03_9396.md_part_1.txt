---
author: Julia Evans
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 1
  viewnum: 2870
date: '2018-03-01 22:10:18'
editorchoice: false
excerpt: 如果你的同事问你一个不太清晰的问题，你会怎么回答？我认为提问题是一种技巧（可以看 如何提出有意义的问题) ，同时，合理地回答问题也是一种技巧，它们都是非常实用的。
fromurl: https://jvns.ca/blog/answer-questions-well/
id: 9396
islctt: true
largepic: /data/attachment/album/201803/01/221013ne4xe2wc4lc8g1le.jpg
permalink: /article-9396-1.html
pic: /data/attachment/album/201803/01/221013ne4xe2wc4lc8g1le.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 如果你的同事问你一个不太清晰的问题，你会怎么回答？我认为提问题是一种技巧（可以看 如何提出有意义的问题) ，同时，合理地回答问题也是一种技巧，它们都是非常实用的。
tags:
- 提问
- 回答
thumb: false
title: 如何提供有帮助的回答
titlepic: true
translator: HardworkFish
updated: '2018-03-01 22:10:18'
---
![](/data/attachment/album/201803/01/221013ne4xe2wc4lc8g1le.jpg)
如果你的同事问你一个不太清晰的问题，你会怎么回答？我认为提问题是一种技巧（可以看 [如何提出有意义的问题](https://jvns.ca/blog/good-questions/)) ，同时，合理地回答问题也是一种技巧，它们都是非常实用的。
一开始 —— 有时向你提问的人不尊重你的时间，这很糟糕。理想情况下，我们假设问你问题的人是一个理性的人并且正在尽力解决问题，而你想帮助他们。和我一起工作的人是这样，我所生活的世界也是这样。当然，现实生活并不是这样。
下面是有助于回答问题的一些方法！
### 如果他们的提问不清楚，帮他们澄清
通常初学者不会提出很清晰的问题，或者问一些对回答问题没有必要信息的问题。你可以尝试以下方法 澄清问题：
* **重述为一个更明确的问题**来回复他们（“你是想问 X 吗？”)
* **向他们了解更具体的他们并没有提供的信息** （“你使用 IPv6 ?”）
* **问是什么导致了他们的问题**。例如，有时有些人会进入我的团队频道，询问我们的 服务发现   service discovery 如何工作的。这通常是因为他们试图设置/重新配置服务。在这种情况下，如果问“你正在使用哪种服务？可以给我看看你正在处理的‘拉取请求’吗？”是有帮助的。
这些方法很多来自[如何提出有意义的问题](https://jvns.ca/blog/good-questions/)中的要点。（尽管我永远不会对某人说“噢，你得先看完《如何提出有意义的问题》这篇文章后再来向我提问）
### 弄清楚他们已经知道了什么
在回答问题之前，知道对方已经知道什么是非常有用的！
Harold Treen 给了我一个很好的例子：
> 
> 前几天，有人请我解释 “Redux-Sagas”。与其深入解释，不如说 “它们就像监听 action 的工人线程，并可以让你更新 Redux store。
> 
> 
> 我开始搞清楚他们对 Redux、action、store 以及其他基本概念了解多少。将这些概念都联系在一起再来解释会容易得多。
> 
> 
> 
弄清楚问你问题的人已经知道什么是非常重要的。因为有时他们可能会对基础概念感到疑惑（“Redux 是什么？”），或者他们可能是专家，但是恰巧遇到了微妙的 极端情况   corner case 。如果答案建立在他们不知道的概念上会令他们困惑，但如果重述他们已经知道的的又会是乏味的。
这里有一个很实用的技巧来了解他们已经知道什么 - 比如可以尝试用“你对 X 了解多少？”而不是问“你知道 X 吗？”。
### 给他们一个文档
“RTFM” （ “去读那些他妈的手册”   Read The Fucking Manual ）是一个典型的无用的回答，但事实上如果向他们指明一个特定的文档会是非常有用的！当我提问题的时候，我当然很乐意翻看那些能实际解决我的问题的文档，因为它也可能解决其他我想问的问题。
我认为明确你所给的文档的确能够解决问题是非常重要的，或者至少经过查阅后确认它对解决问题有帮助。否则，你可能将以下面这种情形结束对话（非常常见）：
* Ali：我应该如何处理 X ？
* Jada：
* Ali: 这个没有实际解释如何处理 X ，它仅仅解释了如何处理 Y !
如果我所给的文档特别长，我会指明文档中那个我将会谈及的特定部分。[bash 手册](https://linux.die.net/man/1/bash) 有 44000 个字（真的！），所以如果只说“它在 bash 手册中有说明”是没有帮助的 :)
### 告诉他们一个有用的搜索
在工作中，我经常发现我可以利用我所知道的关键字进行搜索来找到能够解决我的问题的答案。对于初学者来说，这些关键字往往不是那么明显。所以说“这是我用来寻找这个答案的搜索”可能有用些。再次说明，回答时请经检查后以确保搜索能够得到他们所需要的答案 :)
### 写新文档
人们经常一次又一次地问我的团队同样的问题。很显然这并不是他们的错（他们怎么能够知道在他们之前已经有 10 个人问了这个问题，且知道答案是什么呢？）因此，我们会尝试写新文档，而不是直接回答回答问题。
1. 马上写新文档
2. 给他们我们刚刚写好的新文档
3. 公示
写文档有时往往比回答问题需要花很多时间，但这是值得的。写文档尤其重要，如果：
a. 这个问题被问了一遍又一遍 b. 随着时间的推移，这个答案不会变化太大（如果这个答案每一个星期或者一个月就会变化，文档就会过时并且令人受挫）