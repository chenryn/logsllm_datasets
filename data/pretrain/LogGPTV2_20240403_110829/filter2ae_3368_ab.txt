      masked = *offset & 0xff;
      if ((4 
提醒一下，执行此攻击有两个条件。首先，我们需要能够从已 root 的设备（需要使用 nosclient）或物理访问 SPI 总线向芯片发送命令。
然后，我们需要一种方法来访问 Android 文件系统上的密钥块，这可以通过 root 来完成，或者利用一些漏洞来绕过基于文件的加密或 uid 访问控制。
## 缓解措施
我们向谷歌报告了这个漏洞，当然最好的缓解措施是 6 月安全公告中提供的补丁。但是，我们想指出一个有趣的特性，它可以使 StrongBox
密钥块泄露变得不可能。事实上，应用程序可以创建一个身份验证绑定的密钥，在使用 `KeyGenParameterSpec` 构建时指定
`setUserAuthenticationRequired(true)`。这样，用户需要在使用密钥之前进行身份验证，并且密钥块会使用用户密码派生的特殊密钥进行第二次加密，这是我们无法获得的。
## 结论
Titan M 芯片是谷歌 Pixel
手机中最安全的组件，也是设备所有安全性最终关联的锚点。尽管做出了良好的架构决策并付出了许多努力来最小化其攻击面，使漏洞利用变得非常困难，同时缺乏调试芯片的适当工具，但在该项目中，我们成功地：
  * 对 Android 和芯片之间的通信进行逆向工程。
  * 开发了 nosclient，这是一种开源工具，可以让研究人员向芯片发送任意命令。
  * 使用黑盒模糊测试发现漏洞。
  * 模拟芯片并使用基于模拟的模糊测试发现漏洞。
  * 利用一些实现上的弱点并利用该漏洞在芯片上执行代码，泄露了不应离开芯片的敏感数据（加密密钥）。
该漏洞已于 2022 年 5 月报告给谷歌，并在 2022 年 6 月的 Pixel 安全更新中发布了修复程序。