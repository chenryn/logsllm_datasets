1
route分析
2022年5⽉21⽇15:07:15 
最近在重构优化stowaway的代码，之前没有细看的header结构体的route字段的作⽤，实际上这个字段
就是⽤以实现多级代理中，和每个节点的通信的重要参数。
⼀般来说，不管是哪个node，发送消息给admin，Route⼀般只要设置成TEMP_ROUTE。当然Sender和
Accepter是⽤来判断发送者和接收者的UUID。 
⽽这⾥不需要Route，是因为每个node只会有⼀个上游node和多个下游node，所以你发送给上游node
的时候，并不会迷路，只有⼀条路通往admin 
2
⽽admin发送消息给某个多级node的时候，就需要路由帮忙了，虽然Sender、Accepter可以确认发送和
接收者，但某个节点在拿到消息的时候，并不能确定要发送给哪个下游node才能到达最终指定node。 
如下admin要发送消息给node2，那node0怎么知道是应该发送给node1还是node4。 
node0只知道他路由两个⼦节点，孙节点就不得⽽知了。 
但是！作为admin，既然能打印如下拓扑图，那么他⾃然是有各个node之间的关系，只需要有⼀个包⽤
来管理node信息就⾏，他也确实是这么做的。 
3
有⼀个topology包⽤来做node管理。通过把指定node的UUID发送给topology，则可获取到他对应的
route。（以下是通过channel来通信的，为了线程安全） 
⾄于topology内部的实现，有兴趣的可以仔细看看 
⽽route的格式是怎样的呢，如下，在⼀个node接收到消息，发现不是发送给⾃⼰，分发给childNode
时，route是⽤冒号隔开，以每个node的UUID作为标识拼接起来，我要发送的最终node的UUID在
Accepter⾥，刚好Route⾥最后⼀个UUID也是。 
4
这⾥调⽤changeRoute，来提取下⼀跳node的UUID，并在在Route⾥删除，这样每⼀跳，只需要把
Route⾥最前⾯的UUID提取出来，就是⾃⼰要发送的childNode。 
5
通过UUID获取childNode的conn连接对象，从⽽可以把消息成功发送给路由指定下的childNode。 
6
通过每⼀跳从Route⾥提取最开头的UUID来找到需要发送给的childNode，并删除Route⾥最开头UUID，
来实现多级代理之间的数据传递，这种⽅式好的地⽅就是每个node他⽆需知道孙node是谁，只需要根据
Route来判断，直到Accepter是⾃⼰，就不需要往childNode传递了。 
以上只是提供⼀个思路吧，不管是做多级代理⼯具还是C2，都可以做参考。