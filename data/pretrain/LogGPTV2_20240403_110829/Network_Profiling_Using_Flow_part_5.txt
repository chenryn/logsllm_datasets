5.3.4 Results
The sample network has four SMTP mail servers and no externally facing mail clients, as listed in
Table 13.
Table 13: Validated Email Assets for the Sample Network
Proto. Internal External IP External External Name Comments
Port Port
203.0.113.231 - smtpfw.st.example.org
6 25 * *
6 * * 25
203.0.113.195 - sulu.example.org
6 25 * *
6 * * 25
203.0.113.221 - omail.example.org
6 25 * *
6 * * 25
6 80 * * Plain-text email login
203.0.113.222 – imail.example.org
6 25 * *
6 * * 25
6 80 * * Plain-text email login
CMU/SEI-2012-TR-006 | 27
5.4 Domain Name System
The Domain Name System (DNS) provides multiple services [Mockapetris 1987]. The most
common is the translation between domain names and IP addresses. A network will likely contain
both DNS clients and DNS servers. The standard port for DNS is 53, usually carried over UDP.
Transactions may also take place over TCP when larger amounts of data need to be transferred,
such as when zone transfers occur. However, zone transfers rarely take place across perimeter
boundaries. On a network, the servers will be the hosts accepting connections on port 53, and the
clients will be those communicating with services on port 53.
Servers support either recursive or iterative query resolution. Recursive servers take the
responsibility of looking up the complete answer for the client, recurring, if necessary, from the
root (“.”) to the top-level domain (“.com”) to the second-level domain (“example.com”) and so
forth, and only then responding to the client’s request. Recursive servers will typically
communicate with numerous other servers across the internet. Iterative servers, on the other hand,
accept requests but do not do recursive resolution. If an iterative server has the information
necessary to answer the request, it gives that information to the client. Otherwise, it responds with
an error or a referral to another DNS server. The client is then responsible for querying the next
DNS server. This means that you should never see iterative servers issuing DNS requests.
5.4.1 The Process
1. Begin the DNS inventory with a summary of the DNS traffic on the network. Look for the top
DNS (port 53) traffic inbound and outbound and the top external addresses receiving the
network’s DNS traffic. Sort traffic volumes by the number of packets rather than the number of
bytes or flows because almost every DNS request or response is contained in a single UDP
packet.
The top 10 external DNS servers that were queried by the sample network using the following
command are shown in the output below. Their IP addresses have been converted to domain
names using SiLK’s built-in resolver function.
$ rwfilter sample.rw --type=out \
--dport=53 --protocol=17 \
--pass=stdout \
| rwstats --count=10 --fields=dip --packets \
| rwresolve
INPUT: 1530863 Records for 12559 Bins and 1629508 Total Packets
OUTPUT: Top 10 Bins by Packets
dIP| Packets| %Packets| cumul_%|
dns.publicprovider.com| 533435| 32.735955| 32.735955|
192.0.2.1| 173289| 10.634437| 43.370392|
provider.net| 113603| 6.971614| 50.342005|
d.gtld-servers.net| 19974| 1.225769| 51.567774|
a.gtld-servers.net| 18015| 1.105548| 52.673322|
c.gtld-servers.net| 16703| 1.025033| 53.698356|
l.gtld-servers.net| 16620| 1.019940| 54.718295|
b.gtld-servers.net| 15752| 0.966672| 55.684967|
f.gtld-servers.net| 15657| 0.960842| 56.645810|
g.gtld-servers.net| 15378| 0.943720| 57.589530|
CMU/SEI-2012-TR-006 | 28
In the sample network, the highest numbers of resolution requests go to a public, open resolver,
and most of the other top destinations are root name servers. Make sure these domains conform to
network policy.
2. The next step is to find the assets on the network acting as DNS servers. Look for outbound
traffic from port 53 over UDP using the following command. Pull only those IPs that are sending
at least 1% of the filtered traffic; these are the most likely to be actual DNS servers. You will deal
with the rest at the end of the profile.
$ rwfilter sample.rw --type=out \
--sport=53 --protocol=17 \
--pass=stdout \
| rwstats --fields=sip --percentage=1 --packets --no-titles \
| cut -f 1 -d "|" \
| rwsetbuild > dns_servers.set
$ rwsetcat dns_servers.set
203.0.113.50
203.0.113.51
203.0.113.52
The result in the above example is a list of DNS servers on the sample network.
3. Next, find DNS clients by looking at outbound traffic to port 53 over UDP using the following
command. Again, pull only the clients making up at least 1% of the DNS client traffic. If there is
a long list of DNS clients making up less than 1% of the total DNS client traffic, it is likely that
the hosts on the network are not configured to go to the local DNS server and/or are not making
their requests through the gateway.
$ rwfilter sample.rw --type=out \
--dport=53 --protocol=17 \
--pass=stdout \
| rwstats --fields=sip --percentage=1 --packets --no-titles \
| cut -f 1 -d "|" \
| rwsetbuild > dns_clients.set
$ rwsetcat dns_clients.set
203.0.113.222
203.0.113.220
203.0.113.33
203.0.113.51
203.0.113.52
You now have a list of DNS clients, as shown in the results of the above example, and a list of
DNS servers. It may be that one or more IP addresses are in both lists; these are the recursive
name servers. Recursive name servers act both as DNS clients and servers as illustrated in Figure
9 because they receive and issue requests.
CMU/SEI-2012-TR-006 | 29
DNS DNS Recursive
Servers
Clients Servers
Figure 9: Recursive DNS Servers
4. Identify recursive servers by looking at the intersection of the DNS client and server lists, as in
the following example.
$ rwsettool --intersect dns_clients.set dns_servers.set \
--output-path=recursive.set
$ rwsetcat recursive.set
203.0.113.51
203.0.113.52
5. The last step in finding DNS assets is to identify any potential authoritative name servers.
Authoritative servers are iterative, so find the difference between the list of DNS servers and
recursive DNS servers to get the list of iterative servers. The following example shows the
command and results.
$ rwsettool --difference dns_servers.set recursive.set \
--output-path=iterative.set
$ rwsetcat iterative.set
203.0.113.50
Just because a server is iterative does not necessarily mean it is authoritative. This will need to be
validated in the next section. The sample network has one potential authoritative server, as shown
in Table 14.
Table 14: Potential DNS Assets for the Sample Network
Internal IP Internal Port External IP External Port Comments
203.0.113.33 * * 53 Client
203.0.113.50 53 * * Iterative & Authoritative
203.0.113.51 53 * * Recursive
* * 53
203.0.113.52 53 * * Recursive
* * 53
203.0.113.220 * * 53 Client
203.0.113.222 * * 53 Client
5.4.2 How to Validate Findings
It generally is not necessary to validate the DNS client list. Using the following command, check
that the hosts listed as DNS clients create at least 1% of the total DNS client traffic. Assets with
less than 1% of the traffic will likely be profiled as web clients or other types of servers.
CMU/SEI-2012-TR-006 | 30
$ rwfilter sample.rw --type=out \
--protocol=17 --dport=53 \
--pass=stdout \
| rwstats --fields=sip --percent=1 --packets
INPUT: 1530662 Records for 13 Bins and 1629113 Total Packets
OUTPUT: Top 5 bins by Packets (1% == 16291)
sIP| Packets| %Packets| cumul_%|
203.0.113.33| 550990| 33.821472| 33.821472|
203.0.113.51| 460194| 28.248133| 62.069605|
203.0.113.52| 381179| 23.397947| 85.467552|
203.0.113.222| 120051| 7.369102| 92.836654|
203.0.113.220| 106669| 6.547673| 99.384328|
The results from the above example show that the DNS client list for the sample network is
accurate; however, remember that addresses 203.0.113.33 and 203.0.113.220 were profiled in the
web client section as a gateway and a proxy server, respectively. Both addresses will be removed
from the DNS list because they are simply proxying requests from other hosts instead of acting as
clients themselves. Address 203.0.113.222 has already been profiled as an email server (from
Section 5.3).
To validate the servers, resolve each of the addresses in the list to a domain name using one of the
tools discussed in previous sections (nslookup, dig, robtex.com, rwresolve). Often, the servers
have names beginning with “ns” or “dns,” indicating that they are name servers. The results of
using nslookup on the potential DNS server addresses .50, .51, and .52 are domain names that
start with ns, ns1, and ns2, respectively.
Also use nslookup to view what servers are being advertised to the internet as name servers.
$ nslookup -type=ns example.org
...
Non-authoritative answer:
example.org nameserver = ns2.example.org.
example.org nameserver = ns1.example.org.
Authoritative answers can be found from:
example.org nameserver = ns.example.org.
It is possible that not all of the DNS servers on the network will show up in an nslookup query,
but the ones that do can be validated.
5.4.3 Anomalies
Below are some anomalies you may find while examining DNS flows.
• port 53 to 53 traffic
Older implementations of DNS used both source port and destination port of 53 for server-
to-server requests. A number of attacks are based on the ability of the attacker to inject fake
responses [US-CERT 2008]. Randomizing request source port numbers is one way to make
this more difficult and is standard practice; however, port-53-to-53 traffic still exists.
• assets or hosts other than the ones listed that make or respond to DNS requests
Sometimes assests on a network make their own requests to DNS servers rather than go
through the local DNS server. The asset typically has a very low traffic volume to port 53
CMU/SEI-2012-TR-006 | 31
and only makes requests to one specific server. This behavior is necessary when there is no
local DNS server available. However, if the network is set up so that clients have access to a
local DNS server, this behavior may indicate malicious acitivity or possibly a policy
violation.
Unauthorized servers, on the other hand, should be of concern. If you see DNS responses
from hosts in a network other than the network’s DNS servers, it could be the result of
malcious activity, a policy violation, or misconfiguration at the firewall or host.
• unexpected destination servers
Although these servers are not necessarily an anomaly, consider looking at a list of
destination servers to make sure the DNS traffic is going where expected. If clients are
configured to query specific external servers for security or speed, check that the traffic is
going only to those servers. Also, check the destination servers against blacklists if
necessary.
• multiple servers or clients at one IP address
It is possible for one physical server to act as both a recursive and an authoritative server.
For example, one IP address could have a recursive server for processing queries from
internal hosts and an authoritative server for external requests. In these cases, it may be
impossible to tell from netflow data alone whether the server is recursive or iterative and
which clients it is servicing. Simply note that it is a DNS server.
5.4.4 Results
We used the above process to identify three DNS servers on the sample network. Two of the DNS
servers are recursive and one is iterative, as shown in Table 15.
Table 15: Final DNS Assets for the Sample Network
Proto. Internal External IP External External Name Comments
Port Port
203.0.113.50 – ns.st.example.org
17 53 * * Iterative, Authoritative
203.0.113.51 – ns1.st.example.org
6,17 53 * * Recursive
6,17 * * 53
203.0.113.52 – ns2.st.example.org
6,17 53 * * Recursive
6,17 * * 53
CMU/SEI-2012-TR-006 | 32
5.5 Virtual Private Networks
Virtual Private Network (VPN) technology varies, and servers can be easy or difficult to identify
within netflow traffic depending on the technology used. For the purposes of this report, VPNs are
defined as tunnels over public networks, which allow remote offices and users to connect to the
main office network as if they are physically in the home office. VPNs are sometimes referred to
as VPN tunnels because once a VPN connection is established, any type of traffic can be carried
over that connection; it is impossible to tell at a glance what protocol is being carried because the
packet is always encapsulated within a VPN wrapper. Often, VPNs use a cryptographic protocol
such as SSL or IPsec to ensure the privacy of traffic. In addition, it is possible to layer tunneling
protocols inside each other, which increases the difficulty of monitoring.
Typically, VPNs have an initial setup phase and a tunneling phase. This is somewhat similar to
FTP traffic, which uses a control channel and a data channel. The initial setup phase is meant to
allow VPNs to be initialized even when the destination is behind Network Address Translation
(NAT) hardware. Because the initial setup uses TCP and UDP ports, the NAT box is able to
translate ports to IP addresses. The tunneling phase uses other IP protocols, such as ESP or GRE,
which usually do not have any ports associated with them. These two phases make VPN traffic
fairly distinct from other netflow traffic.
VPNs can be created using a number of different protocols based on the needs of the organization
and the vendor being used. As shown in Table 16, this report includes the ports and protocol
numbers of the VPN technologies PPTP, L2TP, SSL, and IKEv2, but this report will not discuss
how each one specifically works. Many vendors may have their own specific implementation that
uses other ports or protocols. For example, Cisco is a popular VPN implementation that can use
any pre-defined TCP port for IPSEC over VPN7. The default is 10000. If you know that the
network being profiled uses a different protocol or set of ports, include those here as well.
Table 16: VPN Technologies
Initial Setup Tunnel
Protocol Ports Protocol Ports
PPTP 6 1723 47 N/A
L2TP 17 500, 1701, 4500 50 N/A
SSL 6 443 6 443
IKEv2 17 500 50, 51 N/A
VPNs can be broken into two types: remote access and point-to-point. Remote access VPNs allow
remote users to connect to the internal network. Requests from and responses to these external
sources are wrapped in a VPN header that will always be addressed directly to (or from) the VPN
gateway rather than the internal resource the user actually needs. Connections to a remote access
VPN are from many different addresses (often ISPs) and usually last for the length of time the
user needs the connection—about a few hours.
7 http://www.cisco.com/en/US/products/hw/vpndevc/ps2030/
products_configuration_example09186a0080645722.shtml
CMU/SEI-2012-TR-006 | 33
For point-to-point VPNs, the connection is always set up between the same two points (often a
remote office and main office). There can be multiple point-to-point connections to one VPN
gateway, but they will be long-term connections, and the external addresses will rarely change.
Once a VPN connection terminates inside of the network, the traffic from that connection will
look like all other internal network traffic. For example, if a client that is VPNed into the network
starts to browse the web, this activity will show up in the regular web client traffic that was
profiled in Section 5.2.
5.5.1 The Process
1. Start by finding the assets on the network using the protocols 47, 50, and 51 using the following
command. Look only at outbound traffic.
$ rwfilter sample.rw --type=out \
--protocol=47,50,51 \
--pass=stdout \
| rwuniq --fields=sip --no-titles \
| cut -f 1 -d "|" \
| rwsetbuild > vpn.set
$ rwsetcat vpn.set
203.0.113.33
203.0.113.35