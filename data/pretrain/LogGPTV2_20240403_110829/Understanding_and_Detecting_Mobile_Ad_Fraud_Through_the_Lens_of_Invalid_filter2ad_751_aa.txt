title:Understanding and Detecting Mobile Ad Fraud Through the Lens of Invalid
Traffic
author:Suibin Sun and
Le Yu and
Xiaokuan Zhang and
Minhui Xue and
Ren Zhou and
Haojin Zhu and
Shuang Hao and
Xiaodong Lin
Understanding and Detecting Mobile Ad Fraud
Through the Lens of Invalid Traic
Suibin Sun∗
Shanghai Jiao Tong University
PI:EMAIL
Le Yu∗
Shanghai Jiao Tong University
PI:EMAIL
Xiaokuan Zhang
The Ohio State University
PI:EMAIL
Minhui Xue
The University of Adelaide
PI:EMAIL
Ren Zhou
Shanghai Jiao Tong University
PI:EMAIL
Haojin Zhu†
Shanghai Jiao Tong University
PI:EMAIL
Shuang Hao
University of Texas at Dallas
PI:EMAIL
ABSTRACT
Along with gaining popularity of Real-Time Bidding (RTB) based
programmatic advertising, the click farm based invalid trac, which
leverages massive real smartphones to carry out large-scale ad fraud
campaigns, is becoming one of the major threats against online
advertisement. In this study, we take an initial step towards the
detection and large-scale measurement of the click farm based in-
valid trac. Our study begins with a measurement on the device’s
features using a real-world labeled dataset, which reveals a series
of features distinguishing the fraudulent devices from the benign
ones. Based on these features, we develop EH, a system
for detecting fraudulent devices through ad bid request logs with a
focus on clustering fraudulent devices. EH functions by
1) building a classier to distinguish fraudulent and benign devices;
2) clustering devices based on app usage patterns; and 3) relabeling
devices in clusters through majority voting. EH demon-
strates 97% precision and 95% recall on a real-world labeled dataset.
By investigating a super click farm, we reveal several cheating
strategies that are commonly adopted by fraudulent clusters. We
further reduce the overhead of EH and discuss how to
deploy the optimized EH in a real-world system. We are
in partnership with a leading ad verication company to integrate
EH into their industrial platform.
CCS CONCEPTS
• Security and privacy ! Software and application security; •
Networks ! Network measurement.
∗Co-rst authors.
†Haojin Zhu (PI:EMAIL) is the corresponding author.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for prot or commercial advantage and that copies bear this notice and the full citation
on the rst page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specic permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484547
Xiaodong Lin
University of Guelph
PI:EMAIL
KEYWORDS
Invalid Trac; Ad Fraud; Click Farm
ACM Reference Format:
Suibin Sun, Le Yu, Xiaokuan Zhang, Minhui Xue, Ren Zhou, Haojin Zhu,
Shuang Hao, and Xiaodong Lin. 2021. Understanding and Detecting Mobile
Ad Fraud Through the Lens of Invalid Trac. In Proceedings of the 2021
ACM SIGSAC Conference on Computer and Communications Security (CCS
’21), November 15–19, 2021, Virtual Event, Republic of Korea. ACM, New York,
NY, USA, 17 pages. https://doi.org/10.1145/3460120.3484547
1 INTRODUCTION
Programmatic advertising (ad) has become the driving force for
the growth of internet advertising in the past decades, which is
beneted from the innovation of new ad technologies that bring us
the eciency of automatic buying and selling of advertisements.
Real-Time Bidding (RTB), one of the most signicant technologies,
provides a digital marketplace, where website owners and mobile
app developers (ad publishers) can sell the spare spaces (ad slots)
on their websites or applications to advertisers through real-time
auctions. Over the past 10 years, mobile in-app advertising has
become the major increasing growth of advertising revenues. It is
reported that the global RTB market size could potentially grow
from $6.6 billion USD in 2019 to $27.2 billion USD by 2024 [33].
Unfortunately, this increased prominence has also attracted the
attention of fraudulent ad slot sellers, who try to inate their in-
comes by fabricating ad requests. This task is usually outsourced to
click farm owners, who can control thousands of mobile devices or
emulators and mimic normal app usage patterns to trick advertisers
into believing that their ads have been seen by actual, interested
users. Fig. 1 substantiates an example of a “click farm” reported
by the recent news [26, 32], which leverages massive real smart-
phones to carry out a large-scale ad fraud campaign. Nowadays,
an advertiser usually pays money for every 1,000 impressions of a
given advertisement, instead of clicks, which is commonly known
as Cost Per Mille (CPM) [20]. As a result, those committing frauds
within this system have evolved their technique from “click spam”
into the generation of “invalid trac”. It is estimated that every
year trillions of delivered ad impressions are not watched by real
people, leading to losses in the tens of billions of US dollars for
advertisers [12, 42].
Session 1D: Authentication and Click Fraud CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea287(a) Software level emulation
(b) Hardware level automation
Figure 1: Automated and coordinated “click farm”.
Due to the substantial nancial loss caused by invalid ad trac,
the problem has attracted increasing attention. However, many
prior works that focus on the problem of click spam detection [13,
14, 40] or authenticated click [15, 21, 36] cannot be applied in the
era of RTB, since the basic pricing model in the RTB system is CPM
rather than traditional CPC (cost-per-click), indicating that fraud-
sters no longer need to click on the ads, which renders detecting
the invalid trac more dicult.
In the industry, trac verication is performed by designated
companies/organizations, which are trusted by both ad publishers
and advertisers. By removing the invalid trac before the billing
cycles, they help advertisers minimize wrongful payment while
protecting the rights of ad publishers. The key players in this ecosys-
tem include Integral Ad Science (IAS) [3], Oracle [4], and White
Ops [5]. The best practice of combating invalid trac adopted by
the mainstream trac verication companies heavily relies on rule-
based detection such as blacklists and parameter/metadata checks
(e.g., IP blacklists, location validity checking, user agent (UA) check-
ing). To date, little attention has been paid to the detection and
measurement of large-scale click farms.
Challenges. Detection of click farms faces the following unique
challenges. 1) Attackers have adopted a series of hardware/software
level strategies (e.g., frequently changing the various parameters
including IP, UA, IMEI, emulating the human behavior including the
mobility pattern, and even using the automated tool) to mimic the
human behaviors and generate “seemingly organic” trac, which
is dicult to detect. 2) Due to the noisy ad trac data and dynamic
network environment, the detection of invalid trac based on any
specic fraudulent device is less reliable. 3) In practice, it is expected
to process billions of transactions per day. The amount of data that
needs to be processed makes it challenging to design a practical
detection system with low overhead.
EH. In this study, we present EH, therst
work to investigate click farm-oriented invalid trac detection
based on the real-world mobile RTB transaction data. EH
handles invalid trac via detecting the source of trac, i.e., the
fraudulent devices involved in the click farms. EH is moti-
vated by the following observation: although any individual fraudu-
lent device tends to adopt strategies to mimic the organic trac, the
attackers behind the click farm have strong incentives to camou-
age the behaviors of invalid trac with certain patterns in order
to lower the cost. Such group features could be used to design a
novel automatic click-farm and fraudulent device detection scheme.
Based on the above insights, we rst conduct a measurement of
the device’s features using a real-world labeled dataset, which re-
veals a series of features distinguishing the fraudulent devices from
the benign ones. To make use of the features depicted by fraudulent
devices as groups, we further propose a three-stage detection sys-
tem, EH: 1) Stage 1 uses the identied features to build a
classier to ag individual devices; 2) Stage 2 captures cluster-level
features by applying the Top-App based Clustering Algorithm, which
leverages the app usage patterns of the devices to group devices; 3)
Stage 3 aggregates the information produced in the previous stages
and performs majority voting to detect click farms as well as the
fraudulent devices.
Our extensive evaluation shows that EH is able to cap-
ture real-world click farms with high accuracy and with moderate
overhead incurred. We also reveal interesting ndings surrounding
the detected click farms, which may benet future research. We
have reported all of the ndings to a leading ad verication com-
pany (Company A), which has positively acknowledged our results.
Based on our study, we have contributed a fraud reason code on
click farm detection in Company A’s real-world detection system,
which is expected to help the ad verication industry to identify
large-scale fraudulent device clusters and lter invalid trac.
Contributions. We make the following key contributions:
• New features (Sec. 4). We perform an ad fraud measurement
study on a labeled real-world dataset, which reveals a series of
important characteristics of fraudulent devices.
• New system (Sec. 5). We propose EH, a novel three-
stage fraud detection system for automatically identifying device
clusters and classifying the fraudulent devices in terms of their
cluster-level features based on real-world ad bid logs.
• New ndings on cheating strategies of click farms (Sec. 7). We
successfully identify a group of large-scale click farms in the
real-world dataset. After focusing on the largest click farm and
tracing back to the historical data in two 10-day datasets in 2018
and 2019, respectively, we discover similar patterns in a large
number of devices. We reveal a series of strategies adopted by
this super click farm to evade detection.
• Optimization and real-world deployment (Sec. 8). We propose sev-
eral optimization mechanisms that greatly reduce the overhead
of EH, and make it practical to be used in the real
world. We evaluate EH on a 1-day unlabeled dataset
containing 53M devices. Our evaluation shows that EH
is able to detect 8M fraudulent devices related to click farms
within 2 hours. The top results are conrmed by Company A,
and Company A has integrated EH into its real-world
system.
Ethical considerations. Each time a user’s device requests an ad
material, the ad exchange will transmit the request and record it as
a log. The source data in the request is collected by the ad software
development toolkit (SDK) embedded in an app only after the user’s
consent on the app’s privacy agreement. The ad trac verication
company routinely collects ad bid request logs from ad exchange
for the purpose of verifying and measuring the quality of the ad
trac. The data is kept in the ad trac verication company data
center with access being granted only to the authors’ aliation. We
have obtained approval from the ad trac verication company
for accessing the ad bid logs. The data (such as IMEIs) provided by
Session 1D: Authentication and Click Fraud CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea288the ad trac verication company does not include any Personal
Identiable Information (PII).
2 BACKGROUND
In this section, we introduce the system model of programmatic
advertising and then explain the ecosystem of real-time bidding
by showing a typical process of serving an ad in programmatic
advertising and the role of fraudulent publishers. We also discuss
the best practice of invalid trac (IVT) verication and ltering in
the industry.
Ecosystem of programmatic advertisement. Digital advertis-
ing is mainly processed over “programmatic” platforms in an au-
tomatic way, which involves Advertiser, Publisher, Demand Side
Platform (DSP), Supply Side Platform (SSP), and Ad-Exchange. The
Publisher (e.g., developers of mobile apps) reserves space in their
apps as ad slots for displaying advertisements and uses SSPs to
auction their available ad slots. Advertisers use DSPs (e.g., TheTrad-
eDesk and Baidu) to bid on these available ad slots based on how
successful they think those ads will be in attracting the interest
of visitors. Similar to the stock exchange, the Ad-Exchange (e.g.,
Google, MoPub, and Tencent) serves as a digital marketplace, which
allows advertisers and publishers to sell and buy ad slots through
RTB-based auctions. Each ad slot would typically go through many
auctions before being matched to the nal advertiser. These auctions
happen billions of times per day, usually within the milliseconds
before an ad is presented on the end user’s device.
A typical RTB process is illustrated in Fig. 2. When a user opens
up an app and triggers an ad impression (i.e., a click on the ad),
the app sends an ad request to the SSP, which further forwards the
request to the Ad-Exchange. The ad request often contains device
ID, IP address, timestamp, the user’s current location, as well as
other information about the ad slot. Upon receiving the ad request,
the Ad-Exchange initiates an auction of the ad slot and records an
ad bid log in the database. The bidding request is then sent to each
registered DSP in the Ad-Exchange and the DSPs bid on the ad slot
on behalf of the advertisers. As specied by OpenRTB [20], in the
most real-time bidding systems, Cost Per Mille (CPM) is used to
charge advertisers. When the Ad-Exchange initiates an auction, the
DSPs on behalf of advertisers would respond to the optimal price,
in accordance with the rules set by advertisers. The Ad-Exchange
informs the winner, and the corresponding advertisement is then
sent to the user and is displayed on the app.
Ad fraud. Unfortunately, this increased prominence has also at-
tracted the attention of tech-savvy fraudulent publishers, who try
to produce fake trac and fraudulent ad inventories to trick ad-
vertisers into believing that their ads are being seen by genuinely
interested users. According to the Invalid Trac (IVT) Detection
and Filtration Standards [24], IVT can be caused by multiple sources.
On the one hand, IVT involves the trac identied through routine
means of ltration, executed through the application of lists, or
with other standardized parameter checks. This type of IVT can
be generated by known invalid data-center trac, bots, spiders, or
other crawlers, non-browser agents. On the other hand, some types
of IVT, produced by known automated systems, emulators, custom
automation software and tools, infected and hijacked devices, in-
centivized human activities, and adware/malware that conducts
Figure 2: The ecosystem of “programmatic” advertising and
the ows of a typical RTB process. The payment process in-
dexed in 7 is achieved indirectly via the intermediates.
deceptive actions (e.g., ad injection and unauthorized overlays), re-
quire more advanced techniques to analyze and detect, which often
include multi-point corroboration/coordination and a signicant
amount of human intervention. In this work, we focus on detecting
the provenance of IVT (i.e., the fraudulent devices), and discover
organized device clusters.
Ad trac validation. To defend against ad fraud, the industry
relies on third-party ad trac verication services provided by
the ad trac verication companies, such as White-Ops, IAS, and
RTBAsia. The trac identied as invalid must be deducted from
prots between the publisher and the advertiser as per the Invalid
Trac Detection and Filtration Standards [24]. To enhance the
robustness of the detection results, there is a pressing need to com-
pare and cross-check the IVT measurement results across dierent
measurement organizations. For example, 30 major IVT verication
companies across Asia-Pacic, including RTBAsia, Baidu, Tencent,
and Toutiao, carry out the project of Distributed Invalid Trac
Filter (DIF). This allows dierent trac validators to upload their
own IVT measurements based on billions of daily ad bid request
records and vote if there is any specic suspicious device or IP
belonging to the attackers. Therefore, it is desirable to design a
novel third-party trac validation approach by monitoring the ad
bid request logs.
3 DATASETS
In this section, we present the format of the ad bid logs, which serve
as the basis of our design of EH. We also introduce the
information of the datasets used in the paper.
3.1 The Format of Ad Bid Logs
Our datasets contain the ad bid logs collected by our industrial
collaborators, which record the ad bid requests in ad exchange plat-
forms. A typical ad bid request contains 10 elds (see Table 1). The
IP refers to the IP address of the device. The Ad Slot ID represents
the unique identier of the ad slot assigned by the ad-exchange
platform. There are three types of Device IDs: IMEI, Android ID,
1. Ad requestCollect bid requests;Send feedback6. Ad deliveryloadingloadingloadingVM…Benign4. Bid responseFraudulent0. Installation7. Pay money*2. Ad request0. Set rules…: Roles in RTB ecosystem: Detection target inSession 1D: Authentication and Click Fraud CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea289Table 1: Fields of ad bid logs.
Field
IP
Ad Slot ID
IMEI
Android ID
IDFA
OS
Location
Timestamp