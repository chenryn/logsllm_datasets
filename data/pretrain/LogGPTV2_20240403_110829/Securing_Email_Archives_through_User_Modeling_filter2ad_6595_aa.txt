title:Securing Email Archives through User Modeling
author:Yiru Li and
Anil Somayaji
Securing Email Archives through User Modeling
School of Computer Science, Carleton University
1125 Colonel By Drive, Ottawa, ON K1S 5B6 Canada
Yiru Li and Anil Somayaji
fylic,PI:EMAIL
Abstract
Online email archives are an under-protected yet ex-
tremely sensitive information resource. Email archives can
store years worth of personal and business email in an
easy-to-access form, one that is much easier to compromise
than messages being transmitted (cid:147)on the wire.(cid:148) Most email
archives, however, are protected by reusable passwords that
are often weak and can be easily compromised. To protect
such archives, we propose a novel user-speci(cid:2)c design for
an anomaly-based email archive intrusion detection system.
As a (cid:2)rst step towards building such a system, we have de-
veloped a simple probabilistic model of user email behav-
ior that correlates email senders and a user’s disposition
of emails. In tests using data gathered from three months
of observed user behavior and synthetic models of attacker
behavior, this model exhibits a low rate of false positives
(generally one false alarm every few weeks) while still de-
tecting most attacks. These results suggest that anomaly
detection is a feasible strategy for securing email archives,
one that does not require changes in user authentication or
access behavior.
1 Introduction
Email is one of the cornerstone applications of the In-
ternet, one that millions use on a daily basis. Email, un-
fortunately, is also an extremely insecure medium for com-
munications. Messages lack authentication, con(cid:2)dentiality,
and integrity guarantees while servers are extremely vulner-
able to denial-of-service attacks. The spam epidemic has
spread in part due to these shortcomings; in practice, how-
ever, email continues to provides (cid:147)suf(cid:2)cient(cid:148) security guar-
antees in that a high enough percentage of legitimate emails
reach their intended destinations intact, and con(cid:2)dential in-
formation contained in those messages is not often used for
malicious purposes.
The spread of reliable network connectivity and the de-
clining cost of storage, though, have together changed the
way that email is managed, and in so doing have changed
the nature of threats facing a user’s inbox. Before, email
was typically downloaded from a mail server to a work-
group server or local disk. Now, however, email is more
often being archived on servers that are accessible from the
open Internet either via a web interface or through an on-
line mail access protocol such as IMAP [6]. Through these
servers, users can access both new and archived email from
potentially any networked computer in the world. The price
for this convenience, unfortunately, is that anyone else in
the world may also access this same resource. By stor-
ing hundreds of megabytes of (cid:2)ltered, prioritized, and or-
ganized email, remotely-accessible email servers provide a
means for an adversary, whether a business rival, criminal,
or jealous lover, to learn about a target with minimal effort
or risk. Most such parties do not have the technical skill or
access to compromise emails while in transit; almost every-
one, though, is capable of accessing an Internet-connected
email archive.
Despite the increased exposure users now have with
large, remotely accessible email archives, the authentication
technology used to protect such resources is still extremely
weak. While there exist many technologies that could be
used to authenticate email users in a more secure fashion,
virtually all of them would require signi(cid:2)cant changes in
how users access their email. For now, we appear to be
stuck with the same standard that has existed since the be-
ginning of the Internet: reusable text passwords. Even when
systems do not transmit passwords in cleartext (which they
often do, even today), passwords may be compromised by
malicious software, social engineering, or by simple user
negligence.
To address this challenge, in our research we have fo-
cused on how to better protect email repositories even when
account passwords have been compromised. One way
to achieve this goal is through intrusion detection system
(IDS) technology. Unlike many other IDSs, however, an
email archive IDS must defend against attackers who do not
exploit software vulnerabilities; instead, they will be using
normal access protocols to retrieve unauthorized informa-
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:13:33 UTC from IEEE Xplore.  Restrictions apply. 
tion. This is the (cid:147)insider threat(cid:148) problem, one that was an
early focus of intrusion detection research. Like systems
such as NIDES [1], we propose to detect intrusions by de-
tecting unusual uses of valid authentication credentials by
maintaining statistical pro(cid:2)les of individual user behavior.
We propose, however, that an email archive IDS should be
user speci(cid:2)c, in that it should be controlled by the pro(cid:2)led
user herself, not by a systems administrator or security of-
(cid:2)cer. Individual users would receive alarms and adjust pa-
rameters, giving them control over their level of security.
So long as the data acquisition and analysis requirements
of such a system are suf(cid:2)ciently small, such an architecture
could potentially scale up to the largest email sites(cid:151)even
with a (cid:2)xed per-user rate of false positives.
As a (cid:2)rst step towards such an email archive IDS, we
have developed and tested a simple statistical model of user
email behavior based upon the relationship between the dis-
position of new email messages and the senders of those
emails. By limiting the scope of our model to this sim-
ple relationship, we have managed to create a model that is
both surprisingly accurate and ef(cid:2)cient to create. In testing
over several months, we have found that after training for
approximately one month, our system can distinguish be-
tween variations in user behavior over the next two months
and simulated attacker behavior with a low rate of false
positives(cid:151)as low as one alarm per month, but generally not
higher than one per week.
While our testing involves only a few users, and is thus
far from comprehensive, we believe that our results provide
suf(cid:2)cient evidence that our chosen modeling strategy is a
viable one. Perhaps more importantly, it also demonstrates
the feasibility of online anomaly intrusion detection through
(suitably constrained) observable user behavior. Having
said that, we do not believe that one simple model, no mat-
ter how good, will be able to accurately capture the patterns
of behavior for all users. By developing multiple simple
models and allowing the system to choose the most suitable
one based upon its accuracy, it should be possible to accu-
rately model the behavior of almost all users of email, and
in so doing protect their archives from attack.
The rest of this paper proceeds as follows. We (cid:2)rst dis-
cuss related work in Section 2. We then discuss the motiva-
tion and requirements of an email archive IDS in Section 3.
We explain our choice of observable and modeling strategy
in Section 4. Experimental setup and results are discussed
in Section 5. The paper ends in Section 6 with a discussion
of limitations, implications, and plans for future work.
2 Related Work
Electronic mail, or email, is a communications medium
that, by the de(cid:2)nition of its underlying protocol SMTP [12],
offers almost no security guarantees. Numerous techni-
cal mechanisms have been proposed and developed in re-
sponse to these limitations. Some, such as PGP [27] and
S/MIME [18], use cryptography to provide a complete so-
lution for end-to-end integrity, con(cid:2)dentiality, and authen-
ticity. Most commonly-used email security enhancements,
however, are more narrowly focused on the problem of un-
solicited email, or spam. Some spam solutions prevent the
use of forged email senders [7, 26]; others block known
sources of spam through frequently updated lists of offend-
ing DNS names and IP address ranges [23].
In the end,
though, many ISPs and email users resort to content-based
spam (cid:2)ltering systems [2]. Similar content-based scan-
ning is also used to detect and stop email viruses, either
on servers or client systems. While such approaches help
maintain the security of individual messages (and prevent
the relaying of unwanted or dangerous ones), they do not
secure messages once they have been delivered to a user’s
inbox.
The problem of email archive security has normally been
subsumed within the general host protection problem. In
that vein, both (cid:147)server(cid:148) and (cid:147)client(cid:148) protection systems have
been built. For servers, we have buffer over(cid:3)ow mitigation
systems [5], network [19] and host [21] intrusion detection
systems, (cid:2)le integrity checkers [11], (cid:2)rewalls, and other
protections. Client systems often employ many of these
same mechanisms, but they are generally coupled with tools
that prevent compromise by viruses and spyware. Whether
focused on monitoring patterns in network traf(cid:2)c, process
behavior, or (cid:2)le contents, though, such systems are pri-
marily designed to prevent malicious or compromised soft-
ware from circumventing access control policies(cid:151)not pre-
vent the use of compromised authentication credentials.
Unfortunately, the most commonly used authentication
credentials, reusable passwords, are extremely vulnerable
due to common patterns of user behavior. Many users
choose simple passwords that are easy to remember; many
such passwords, however, can be compromised by online
and of(cid:3)ine dictionary attacks. Users enter passwords on
untrusted machines that may be infected with viruses, spy-
ware, or other malicious software. Such malware can be
used to capture passwords. Also, users often share pass-
words across domains and applications, allowing one weak
application (e.g. one that sends passwords in the clear) to
result in the compromise other, more secure systems. Ad-
ditionally, users often reveal passwords to friends, family
members, and co-workers(cid:151)sometimes inadvertently, but
sometimes to facilitate the sharing of information or re-
sources. Those very same (cid:147)insiders,(cid:148) however, often have
motive for compromising a user’s privacy.
Protection against insider attacks(cid:151)attacks from sources
that have access to valid authentication credentials(cid:151)is dif-
(cid:2)cult to achieve using most commonly-used security tech-
nologies. Because insider attacks consist of (cid:147)authorized(cid:148)
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:13:33 UTC from IEEE Xplore.  Restrictions apply. 
accesses and manipulations of data, access control mecha-
nisms are not suf(cid:2)cient to prevent them. It is extremely dif-
(cid:2)cult to make an a-priori speci(cid:2)cation that would exclude
all insider attacks while allowing legitimate accesses; sim-
ilarly, insider attacks are dif(cid:2)cult to characterize with (cid:2)xed
signatures.
Because of these fundamental dif(cid:2)culties, most insider-
focused IDSs are based on some form of anomaly detec-
tion. For example, NIDES [1] monitored host audit records
to detect anomalous user accounts. There has also been
work on detecting insider attacks using anomalous typing
patterns [3] and unusual patterns of UNIX shell commands
[8, 20, 17, 15, 13]. In order to catch insider attacks, these
systems build models of individual user behavior. Although
they can detect a wide variety of compromises, many of
these systems have been marked by high rates of false pos-
itives.
In large part, these problems are not so much at-
tributable to the failure of the systems themselves but rather
to the inherent variability of human behavior. Other work
in anomaly intrusion detection have avoided these prob-
lems by modeling program behavior [22] or network traf-
(cid:2)c [9, 10, 25]. While such systems often have lower false
alarm rates, they are not nearly as adept at detecting insider
attacks.
While (to our knowledge) there has been no work specif-
ically on protecting email archives from attack, the problem
is most analogous to that of misuse of database information
by insiders. Existing proposals such as DEMIDS [4] build
pro(cid:2)les of how individual users access a given database.
While email archives have similarities to other databases,
the fact that the stored information belongs to exactly one
user makes the problem much more tractable. Further, the
regular, well-known structure of email archives enables a
simpli(cid:2)ed, specialized approach that should be feasible in
practice. The fundamental challenge to developing such a
system lies in determining what data to capture and how
that data should be represented. The next section explains
our approach.
3 Protecting Email Archives
To protect against the exploitation of email archives
through disclosure of passwords, we propose that email
archives be protected using a user-speci(cid:2)c email archive
intrusion detection system. Unlike host or network IDSs
that are designed to protect one or more computers, we be-
lieve that an email archive IDS should be designed to pro-
tect one resource: a user’s email repository. Logically, an
email archive server then would actually be running multi-
ple IDSs, with one instance per user. This design choice is
largely motivated by the extremely personal nature of email;
it also, however, has signi(cid:2)cant impact on our overall sys-
tem architecture, modeling strategy, and the potential scal-
ability of the system.
More speci(cid:2)cally, we have framed our work on this prob-
lem with the following threat model. First, we assume that
the attacker has access to a user’s entire hardware and soft-
ware environment: either the attacker uses the same plat-
form, e.g. Microsoft Outlook running on Windows XP, or
the attacker can access the user’s machine itself. We also
assume that the attacker has by some means obtained the
user’s password. Most of the data the attacker wishes to
access, however, does not reside on the client machine; in-
stead, it is stored on a remote server that is running a remote
email archive access protocol such as IMAP or a web email
interface1. Other than the targeted user’s authentication cre-
dentials, the attacker has no other access to the server (i.e.
no administrative/root access). The attacker wishes to com-
promise the archive in arbitrary ways that violate con(cid:2)den-
tiality (reading old and new emails) and/or integrity (delet-
ing, modifying, or inserting emails). Our goal as defender,
then, is to detect the attackers actions before they do signif-
icant damage.
To protect a user’s email archive given these constraints,
we would like an intrusion detection system that can de-
tect the behavior of an attacker relative to that of a le-
gitimate user. Legitimate users, however, are not all the
same(cid:151)being human, each will have her own patterns of
archive access. Patterns that are legitimate for one user will
be completely anomalous for another, e.g. one user might
archive all organizational announcement emails, while an-
other deletes them all immediately. Because the difference
between legitimate and illegitimate behavior in this context
is fundamentally ambiguous and related individual user be-
havior, we have chosen to approach this intrusion detection
problem from the perspective of user behavior modeling.
Most production and research IDSs, however, do not fo-
cus on user behavior for a simple reason: false positives
(false alarms). Human behavior inevitably changes over
time, even using the most consistent observables. Eventu-
ally this (cid:147)drift(cid:148) manifests as a signi(cid:2)cant change in behav-
ior (i.e. an alarm) unless the system takes steps to adjust to
novel user behavior. Any such adjustments, however, must
be very conservative, otherwise an attacker could simply
(cid:147)train(cid:148) the system to accept her behavior as normal. The
consequence of such conservatism is a persistent level of
false positives in any user-speci(cid:2)c anomaly intrusion detec-
tion system.