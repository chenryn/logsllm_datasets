 **I'm submitting a feature request** (check one with "x")
    [ x ] feature request
**Current behavior**  
Currently when testing a component we need to manually create a new component
for testing inputs set on the template which is pretty verbose and difficult
to test templates with optional bindings and various input parameters.
For example:
    // Component used to setup our test.
    @Component({
      selector: 'my-comp',
      template: '',
      directives: [MyComponent],
    })
    class MyTestComponent {
      foo = 'abc';
      bar = 123;
    }
**Expected/desired behavior**  
Instead, it would be nice to have TestBed create an on-the-fly test wrapper
for our component so that we can pass in the component, the template using the
component, and a set of bindings for the template.
Consider something along the lines of:
    const foo = 'abc';
    const bar = 123;
    const fixture = TestBed.compile(MyComponent, 
        '', {foo, bar});
**What is the motivation / use case for changing the behavior?**
  * More concise testing
  * Easier to test different template bindings
**Please tell us about your environment:**
  * **Angular version:** 2.0.0-rc.5
  * **Browser:** [ all ]
  * **Language:** [ all ]