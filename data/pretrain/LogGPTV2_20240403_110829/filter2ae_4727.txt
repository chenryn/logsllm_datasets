**作者：xxhzz@星阑科技PortalLab  
原文链接：**
## **前言**
在研究分析了CVE-2022-22980 Spring Data MongoDB
SpEL表达式注入漏洞之后，想起之前在spring4shell爆出之前，存在于SpringCloud
Function中的一个SpEL表达式注入漏洞，编号为CVE-2022-22963。在这里对其进行一波分析和学习。
## **漏洞描述**
Spring Cloud Function 是基于 Spring Boot
的函数计算框架。该项目致力于促进函数为主的开发单元，它抽象出所有传输细节和基础架构，并提供一个通用的模型，用于在各种平台上部署基于函数的软件。在Spring
Cloud Function 相关版本，存在SpEL表达式注入。恶意攻击者无需认证可通过构造特定的 HTTP 请求头注入 SpEL
表达式，最终执行任意命令，获取服务器权限。
## **利用范围**
3.0.0 ） 记录。
看到从请求头中获取的 spring.cloud.function.routing-expression
之前是由StandardEvaluationContext 解析，修复新增了 isViaHeader 变量做了一个判断，如果是从请求头中获取的
spring.cloud.function.routing-expression 值，使用 SimpleEvaluationContext 解析。
在spring.cloud.function.context.catalog.simpleFunctionRegistry#doApply中。
在执行function apply方法之后，会跳转到doApply中，对funtion进行判断，判断是不是functionRouter方法。
后续跟进，进入spring.cloud.function.context.config.Routingfunction#route
进入else if 分支， http头spring.cloud.function.routing-expression
不为空，则传入其值到functionFromExpression方法。
随后对传入的header进行解析处理。
后续跟进发现对Spel表达式进行解析的方法就是StandardEvaluationContext
后续跟进，在解析传入的Spel之后，成功触发恶意代码。
## **漏洞复现**
## **修复建议**
受影响的组件更新至3.1.7、3.2.3安全版本。
## **参考材料**
1.
2.
3.
* * *