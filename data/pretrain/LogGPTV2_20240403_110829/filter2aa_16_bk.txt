结构或联合 标识符 结构或联合:one of
struct union
结构声明表:
结构声明
结构声明表 结构声明 初始化声明符表
初始化声明符
初始化声明符表, 初始化声明符 初始化声明符:
声明符 声明符=初始化符
结构声明:
说明符限定符表 结构声明符表; 说明符限定符表:
类型说明符 说明符限定符表 opt
类型限定符 说明符限定符表 opt
结构声明符表: 结构声明符
结构声明符表, 结构声明符 结构声明符:
声明符
声明符 opt: 常量表达式 牧举说明符
enum 标识符 opt {枚举符表} enum 标识符
枚举符表:
枚举符
枚举符表, 枚举符 枚举符
标识符 标识符=常量表达式
声明符
指针 opt 直接声明符 直接声明符:
标识符
(声明符) 直接声明符[常量表达式] 直接声明符(形式参数类型表) 直接声明符(标识符表 opt)
指针:
* 类型限定符表 opt
* 类型限定符表 opt 指针 类型限定符表:
类型限定符
类型限定符表 类型限定符
形式参数类型表:
形式参数表 形式参数表, ...
形式参数表:
形式参数表声明 形式参数表, 形式参数声明
形式参数声明: 声明说明符 声明符
声明说明符 抽象声明符 opt
标识符表:
标识符
标识符表, 标识符 初值:
赋值表达式
{初值表}
{初值表, }
初值表:
初值
初值表, 初值 类型名:
说明符限定符表 抽象声明符 opt
抽象声明符: 指针
指针 opt 直接抽象声明符 直接抽象声明符:
(抽象声明符)
直接抽象声明符 opt [常量表达式]
直接抽象声明符 opt (形式参数类型表 opt)
类型定义名:
标识符
语句:
带标号语句 表达式语句 复合语句 选择语句 循环语句 跳转语句
带标号语句:
标识符: 语句
case 常量表达式语句
dafault: 语句 表达式语句;
表达式 opt;
复合语句:
{声明表 opt 语句表 opt}
语句表:
语句
语句表 语句 选择语句:
if (表达式) 语句
if (表达式) 语句 else 语句
switch (表达式) 语句 循环语句
while (表达式) 语句
do 语句 while (表达式);
for (表达式 opt; 表达式 opt; 表达式 opt) 语句 跳转语句:
goto 标识符; continue;
break;
return 表达式 opt;
表达式:
赋值表达式
表达式, 赋值表选式 赋值表达式:
条件表达式
一元表达式 赋值运算符 赋值表达式 赋值运算符:one  of
= *= /= %= += •= >= &= ^= |=
条件表达式:
逻辑或表达式 或表达式?表达式:条件表达式
常量表达式:
条件表达式 逻辑或表达式:
逻辑与表达式 逻辑或表达式||逻辑与表达式
逻辑与表达式
接位或表达式 逻辑与表达式&&按位或表达式
按位或表达式: 按位异或表达式
按位或表达式|按位异或表达式 接位异或表达式:
按位与表达式 接位异或表达式^按位与表达式
按位与表达式: 相等类表达式
按位与表达式&相等类表达式 相等类表达式:
关系表达式
相等类表达式==关系表达式 相等类表达式!=关系表达式
关系表达式:
移位表达式 关系表达式移位表达式 关系表达式=移位表达式
移位表达式
加法类表达式 移位表达式>加法类表达式
加法类表达式: 乘法类表达式
加法类表达式+乘法类表达式 加法类表达式•乘法类表达式
乘法类表达式: 强制类型转换表达式 类表达式*强制类型转换表达式
乘法类表达点/强制类型转换表达式 乘法类表达式%强制类型转换表达式
强制类型转换表达式: 一元表达式
(类型名)强制类型转换表达式 一元表达式:
后缀一元式
++一元表达式
••一元表达式 一元运算符强制类型转换表达式
sizeof 一元表达式
sizeof(类型名)
一元运算符:one of
& * + • ~ !
后缀表达式:
初等表达式 后缀表达式[表达式] 后缀表达式(参数表达式表 opt) 后缀表达式.标识符 后缀表达式•>标识符 后缀表达式++
后缀表达式•• 初等表达式:
标识符 常量 字符串 (表达式)
参数表达式表: 赋值表达式
参数表达式表, 赋值表达式 常量:
整型常量 字符常量 浮点常量 枚举常量
下列预处理器语法总结了控制指令的结构，但不适合于机械化的语法分析。其中包含符 号"文本"(即通常的程序文本)、非条件预处理器控制指令或完整的预处理器条件结构。
控制指令:
=define 标识符 记号序列
=define 标识符(标识符表 opt) 记号序列
#undef 标识符
#include 
#include "文件名"
#include 记号序列
#line 常量 "文件名"
#line 常量
#error 记号序列。
#pragma 记号序列。
#
预处理器条件指令 预处理器条件指令:
if 行 文本 elif 部分 opt else 部分 opt #endif if 行:
#if 常量表达式
#ifdef 标识符