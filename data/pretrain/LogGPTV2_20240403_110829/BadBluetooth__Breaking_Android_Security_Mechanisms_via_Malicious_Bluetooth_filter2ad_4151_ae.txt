iOS does not display icons when scanning nearby devices, and
some Linux versions use a uniﬁed Bluetooth icon for all types
of devices. Therefore, users may have to face difﬁculties in
ﬁguring out the real identity of a Bluetooth device. What is
more, the proﬁle authentication problems could still exist due
to the vague Bluetooth speciﬁcations. Similar to the attacks on
Android, a malicious insider could leverage the potential ﬂaws
to launch attacks. The complete attack implementations rely
on the speciﬁc Bluetooth resource management mechanisms
on different platforms. Therefore, it would also be a potential
research direction to study in the future.
Bluetooth Design. Though the concrete attacks could be
mitigated, the fundamental design weaknesses discovered in
this paper cannot be addressed by Android itself. We believe
these design weaknesses should be ﬁxed on Bluetooth speciﬁ-
cations in the long run. Looking through the whole Bluetooth
speciﬁcation, it puts many efforts to the functional diversity,
transmission performance, and so forth. However, the security
requirement is neglected to some extent and mainly relies on
the implementation of device vendors.
We believe it
is not a correct understanding that
the
Bluetooth device or host should be treated as one single
entity in the current Bluetooth standard. The reason is that the
modern smart device like smartphone involves multiple parties
and could play a role of the platform for the installed apps
which could share all Bluetooth resources. Also, we believe
the proﬁle-level authentication is necessary, and some kinds
of standard veriﬁcation procedure should be added.
Moreover, the device name and displayed icon is usually
the only indicator for end users to distinguish the device. As a
result, users may naively trust a device based on such indicator
when doing pairing or connection operations. However, neither
the device name nor the icon is reliable. The OS usually shows
the icon just based on the claimed device type no matter what
proﬁles it contains. Therefore, we think there should be a better
mechanism to help users to verify the device.
IX. RELATED WORK
In this section, we review the previous studies about the
security issues on Bluetooth and peripheral devices.
Bluetooth Security. The early works on Bluetooth security
focused on the vulnerabilities underlying the protocols and
implementations. The early versions of Bluetooth have been
found to suffer from attacks like snifﬁng [40], man-in-the-
middle attack [31], PIN cracking [38], etc. On the Android
platform, Naveed et al. [34] discovered the security issue
of external device mis-bonding. The issue could enable an
13
unauthorized app downloading sensitive user data from an
Android device. The similar vulnerabilities also exist on the
iOS platform [21]. Different from them, our attacks aim to
break Android system by abusing various Bluetooth proﬁles.
BlueBorne [19] is an attack vector discovered in 2017 which
contains 8 zero-day Bluetooth vulnerabilities across multiple
platforms. This attack could penetrate and take control over
targeted devices, even without pairing to the attacker’s device.
While, our attacks don’t rely on any software bugs.
Some recent research concentrated on the security of
Bluetooth Low Energy (BLE). For exmaple, Kolias et al. [29]
indicated that BLE Beacon devices are susceptible to a variety
of attacks, including Beacon hijacking, user proﬁling, presence
inference, etc. Sivakumaran et al. [39] found some BLE
devices allow unauthenticated reads and writes from third
party devices. Also, Sławomir et al. [28] demonstrated several
possible attacks on the GATT (Generic Attribute Proﬁle) layer
of the Bluetooth stack, and Ryan et al. [36] presented several
techniques for eavesdropping BLE conversations.
In addition, some research has demonstrated the feasibility
of user tracking exploiting Bluetooth. Das et al. [23] found
majority of the ﬁtness trackers use unchanged BLE address
while advertising, making it feasible to track users. Korolova
et al. [30] achieved cross-app user tracking through advertising
packets broadcasted by nearby BLE-enabled devices. As a
defense, Fawaz et al. [24] proposed a new device-agnostic
defense system, called BLE-Guardian, that protects the pri-
vacy (device’s existence) of the users/environments with BLE
devices/IoTs.
In this paper, we target the latest Bluetooth stack and
discover several high level design weaknesses which could lead
to attacks causing severe consequences. These design ﬂaws are
not bounded to a speciﬁc platform or OS version.
Peripheral Devices and Security. In addition to Bluetooth,
previous works also reveal that many other peripheral devices
can be exploited to attack their host computers easily, with
USB peripherals gaining the most attention. Wang et al. [48]
introduced attacks targeting the physical USB connectivity
between a smartphone and their computers. Maskiewicz et
al. [33] presented a case study of the Logitech G600 mouse,
demonstrating the feasibility of attacking airgapped periph-
erals. More recently, Su et al. [42] exploited the electrical
properties of USB hubs and achieved crosstalk leakage attacks.
In 2014, Nohl et al. [35] proposed a comprehensive USB
attack vector named BadUSB. They showed by registering a
BadUSB device with multiple device types, it is possible to
take any action on the host without authorization. To address
this issue, Tian et al. [47] presented a defense solution named
GoodUSB. They designed a permission model and a mediator
to manage the risks during the enumeration phase of the
USB protocol. This model
that a
device’s identity should rely on the end user’s expectation
of the device’s functionality. A series of research on the
attack and defense of USB peripherals are conducted following
this direction, including USBFILTER – a packet-level USB
ﬁrewall [45], and ProvUSB – an architecture for block-
level provenance for USB storage devices [44]. Also, Angel
et al. [20] proposed a virtualization-based solution, which
attaches peripheral devices to a logically separate, untrusted
is based on the insight
machine. Recently, Tian et al. [46] carried out a comprehensive
survey on the research in USB security. The study suggests
most of the USB attacks abuse the trust-by-default nature
of the USB ecosystem and only a comprehensive defense
solution expanding multiple layers would success in practice.
We believe many issues residing in USB ecosystem also
exist in the Bluetooth ecosystem in similar fashions, and the
research in the Bluetooth domain could leverage the outcomes
from the USB domain.
X. CONCLUSION
Bluetooth is an essential technique for short-distance and
low-power communications and becomes more popular with
the advent of the Internet of Things. The security of Bluetooth
devices plays a critical
role in protecting user’s privacy
and even personal safety. In this paper, we performed a
systematic study over the Bluetooth proﬁles and discovered
ﬁve design weaknesses. We further presented a series of
attacks to demonstrate the feasibility and potential damages
of such ﬂaws on Android,
including stealing information,
app controlling, network snifﬁng, voice command injection,
etc. Besides, we designed a defense solution on Android to
effectively prevent such attacks. Moreover, we believe these
newly discovered ﬂaws are not just limited to a speciﬁc OS
version. Broad Android versions are vulnerable, from 5.1 to the
latest 8.1, and similar problems may also appear on other OS
platforms. These ﬂaws are rooted from the widely incorrect
understandings and assumptions on the Bluetooth stack. We
believe they should be just the tip of the iceberg, and the
Bluetooth standard still needs a thorough security review.
ACKNOWLEDGEMENT
We thank anonymous reviewers for their insightful com-
ments. This work was partially supported by National Natural
Science Foundation of China (Grant No. 61572415), and the
General Research Funds (Project No. 14208818 and 14217816)
established under the University Grant Committee of the Hong
Kong Special Administrative Region, China. Wenrui Diao was
supported in part by the Fundamental Research Funds for the
Central Universities (No. 21618330).
REFERENCES
https://source.android.com/devices/
“Android Hidden API project on GitHub,” https://github.com/
anggrayudi/android-hidden-api, Accessed: May 2018.
“AOSP Bluetooth
bluetooth/services, Accessed: May 2018.
“AOSP Input Overview,” https://source.android.com/devices/input/, Ac-
cessed: May 2018.
“AOSP Keyboard Device,” https://source.android.com/devices/input/
keyboard-devices, Accessed: May 2018.
“Bluetooth Baseband Assigned Number,” https://www.bluetooth.com/
speciﬁcations/assigned-numbers/baseband, Accessed: May 2018.
“Bluetooth
speciﬁcations/bluetooth-core-speciﬁcation, Accessed: May 2018.
“Bluetooth-enabled Devices Worldwide
https://www.statista.com/statistics/283638/installed-base-forecast-
bluetooth-enabled-devices-2012-2018/, Accessed: May 2018.
“Bluetooth Headset
handlers/DownloadDoc.ashx?doc id=158743& ga=2.24560186.
1866324813.1527819756-910667369.1527819756, Accessed: May
2018.
https://www.bluetooth.org/DocMan/
https://www.bluetooth.com/
Speciﬁcation,”
in
2012
and
2018,”
Services,”
Core
Proﬁle,”
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
14
[9]
[10]
[11]
[12]
[13]
[14]
[15]
[16]
[17]
[18]
[19]
Product
on
TI,”
related
CVEs,”
https://cve.mitre.org/cgi-bin/cvekey.
Overview,”
https://www.bluetooth.com/
http://www.thekelleys.org.uk/dnsmasq/doc.
“Bluetooth
http://www.ti.com/wireless-
connectivity/simplelink-solutions/bluetooth-low-energy/products.html,
Accessed: May 2018.
“Bluetooth
Proﬁles
speciﬁcations/proﬁles-overview, Accessed: May 2018.
“Bluetooth
cgi?keyword=bluetooth, Accessed: May 2018.
“Bluez - Ofﬁcial Linux Bluetooth Protocol Stack ,” https://www.
bluetooth.com/speciﬁcations, Accessed: May 2018.
“Dnsmasq Homepage,”
html, Accessed: May 2018.
“Programmatically pair Bluetooth device without
the user entering
pin - Stack Overﬂow,” https://stackoverﬂow.com/questions/19047995/
programmatically-pair-bluetooth-device-without-the-user-entering-pin,
Accessed: May 2018.
“PulseAudio Homepage,” https://www.freedesktop.org/wiki/Software/
PulseAudio/, Accessed: May 2018.
“Pybluez Homepage,” https://pybluez.github.io/, Accessed: May 2018.
“Source Package on Debian - ofono,” https://packages.debian.org/
source/sid/ofono, Accessed: May 2018.
“TCPDUMP/LIBPCAP Public Repository,” https://www.tcpdump.org/,
Accessed: May 2018.
“The Attack Vector “BlueBorne” Exposes Almost Every Connected
Device,” https://www.armis.com/blueborne/, Accessed: May 2018.
[20] S. Angel, R. S. Wahby, M. Howald, J. B. Leners, M. Spilo, Z. Sun, A. J.
Blumberg, and M. Walﬁsh, “Defending against Malicious Peripherals
with Cinch,” in Proceedings of the 25th USENIX Security Symposium
(USENIX-SEC), Austin, TX, USA, August 10-12, 2016., 2016.
[21] X. Bai, L. Xing, N. Zhang, X. Wang, X. Liao, T. Li, and S. Hu, “Staying
secure and unprepared: Understanding and mitigating the security risks
of apple zeroconf,” in Proceedings of the 37th IEEE Symposium on
Security and Privacy (Oakland), San Jose, CA, USA, May 22-26, 2016,
2016.
[22] A. Bellissimo, J. Burgess, and K. Fu, “Secure software updates:
Disappointments and new challenges,” in 1st USENIX Workshop on
Hot Topics in Security, HotSec’06, Vancouver, BC, Canada, July 31,
2006, 2006.
[23] A. K. Das, P. H. Pathak, C. Chuah, and P. Mohapatra, “Uncovering
Privacy Leakage in BLE Network Trafﬁc of Wearable Fitness Trackers,”
in Proceedings of the 17th International Workshop on Mobile Comput-
ing Systems and Applications (HotMobile), St. Augustine, FL, USA,
February 23-24, 2016, 2016.
[24] K. Fawaz, K. Kim, and K. G. Shin, “Protecting Privacy of BLE
Device Users,” in Proceedings of the 25th USENIX Security Symposium
(USENIX-SEC), Austin, TX, USA, August 10-12, 2016, 2016.
[25] Y. Fratantonio, C. Qian, S. Chung, and W. Lee, “Cloak and Dagger:
From Two Permissions to Complete Control of the UI Feedback
Loop,” in Proceedings of the IEEE Symposium on Security and Privacy
(Oakland), San Jose, CA, May 2017.
J. Greig, “How Android P plans to turn your phone into a bluetooth key-
board or mouse,” https://www.techrepublic.com/article/how-android-p-
plans-to-turn-your-phone-into-a-bluetooth-keyboard-or-mouse/.
[26]
[27] T. Instruments, “Over-the-air download users guide for ble-stacktm
https://e2e.ti.com/cfs-ﬁle/ key/communityserver-
version:
discussions-components-ﬁles/538/CC2640-BLE-OAD-User 2700 s-
Guide.pdf, October 2016.
2.2.1,”
[28] S. Jasek, “GATTacking Bluetooth Smart Devicess,” in Black Hat USA
Conference, 2016.
[29] C. Kolias, L. Copi, F. Zhang, and A. Stavrou, “Breaking BLE Beacons
For Fun But Mostly Proﬁt,” in Proceedings of the 10th European
Workshop on Systems Security (EUROSEC), Belgrade, Serbia, April
23, 2017, 2017.
[30] A. Korolova and V. Sharma, “Cross-App Tracking via Nearby Bluetooth
Low Energy Devices,” in Proceedings of the Eighth ACM Conference
on Data and Application Security and Privacy (CODASPY), Tempe, AZ,
USA, March 19-21, 2018, 2018.
[31] D. K¨ugler, ““Man in the Middle” Attacks on Bluetooth,” in Financial
Cryptography, 7th International Conference, FC 2003, Guadeloupe,
French West Indies, January 27-30, 2003, Revised Papers, 2003.
15
[32] S. Labs, “An1045: Bluetooth
over-the-air device ﬁrmware update
for efr32xg1 and bgm11x series products,” https://www.silabs.com/
documents/login/application-notes/an1045-bt-ota-dfu.pdf.
J. Maskiewicz, B. Ellis, J. Mouradian, and H. Shacham, “Mouse Trap:
Exploiting Firmware Updates in USB Peripherals,” in Proceedings of
the 8th USENIX Workshop on Offensive Technologies, WOOT ’14, San
Diego, CA, USA, August 19, 2014., 2014.
[33]
[34] M. Naveed, X. Zhou, S. Demetriou, X. Wang, and C. A. Gunter, “Inside
Job: Understanding and Mitigating the Threat of External Device Mis-
Binding on Android,” in Proceedings of the 21st Annual Network and
Distributed System Security Symposium (NDSS), San Diego, California,
USA, February 23-26, 2014, 2014.
[35] K. Nohl and J. Lell, “BadUSB–On accessories that turn evil,” Black
Hat USA, 2014.
[36] M. Ryan, “Bluetooth: With Low Energy Comes Low Security,” in
Proceedings of the 7th USENIX Workshop on Offensive Technologies
(WOOT), Washington, D.C., USA, August 13, 2013, 2013.
[37] N. Semeconductor, “Updating ﬁrmware over the air,” http://infocenter.
nordicsemi.com/index.jsp?topic=%2Fcom.nordic.infocenter.tools%
2Fdita%2Ftools%2FnRF Connect%2FnRF Connect DFU.html,
August 2018.
[38] Y. Shaked and A. Wool, “Cracking the Bluetooth PIN,” in Proceedings
of the 3rd International Conference on Mobile Systems, Applications,
and Services (MobiSys), Seattle, Washington, USA, June 6-8, 2005,
2005.
[39] P. Sivakumaran and J. B. Al´ıs, “A Low Energy Proﬁle: Analysing
Characteristic Security on BLE Peripherals,” in Proceedings of the
Eighth ACM Conference on Data and Application Security and Privacy
(CODASPY), Tempe, AZ, USA, March 19-21, 2018, 2018.
[40] D. Spill and A. Bittau, “BlueSniff: Eve Meets Alice and Bluetooth,” in
Proceedings of the First USENIX Workshop on Offensive Technologies
(WOOT), Boston, MA, USA, August 6, 2007, 2007.
[41] P. Stone, “Consider blocklisting qualcomm csr ﬁrmware update service,”
https://github.com/WebBluetoothCG/registries/issues/20, March 2017.
[42] Y. Su, D. Genkin, D. C. Ranasinghe, and Y. Yarom, “USB Snooping
Made Easy: Crosstalk Leakage Attacks on USB Hubs,” in Proceedings
of the 26th USENIX Security Symposium (USENIX-SEC), Vancouver,
BC, Canada, August 16-18, 2017., 2017.
[43] C. Support, “Cs-327746-rp-1-training and tutorials - csr over-the-
air-update,” https://www.csrsupport.com/download/49800/CS-327746-
RP-1-Training%20and%20Tutorials%20-%20CSR%20Over-the-Air-
Update.pdf, March 2017.
[44] D. J. Tian, A. M. Bates, K. R. B. Butler, and R. Rangaswami, “Provusb:
Block-level provenance-based data protection for USB storage devices,”
in Proceedings of the 2016 ACM SIGSAC Conference on Computer and
Communications Security (CCS), Vienna, Austria, October 24-28, 2016,
2016.
[45] D. J. Tian, N. Scaife, A. M. Bates, K. R. B. Butler, and P. Traynor,
“Making USB Great Again with USBFILTER,” in Proceedings of the
25th USENIX Security Symposium (USENIX-SEC), Austin, TX, USA,
August 10-12, 2016., 2016.
[46] D. J. Tian, N. Scaife, D. Kumar, M. Bailey, A. Bates, and K. Butler,
“SoK: “Plug & Pray” Today – Understanding USB Insecurity in
Versions 1 through C,” in Proceedings of the 39th IEEE Symposium
on Security and Privacy (Oakland), San Francisco, CA, USA, May 21-
23, 2018, 2018.
J. D. Tian, A. M. Bates, and K. R. B. Butler, “Defending Against
Malicious USB Firmware with GoodUSB,” in Proceedings of
the
31st Annual Computer Security Applications Conference (ACSAC), Los
Angeles, CA, USA, December 7-11, 2015, 2015.
[47]
[48] Z. Wang and A. Stavrou, “Exploiting Smart-Phone USB Connectivity
For Fun And Proﬁt,” in Proceedings of the 26th Annual Computer
Security Applications Conference (ACSAC), Austin, Texas, USA, 6-10
December 2010, 2010.
[49] C. Xiao, “Update: Xcodeghost attacker can phish passwords and open
urls through infected apps,” http://researchcenter.paloaltonetworks.com/
2015/09/update-xcodeghost-attacker-can-phish-passwords-and-open-
urls-though-infected-apps/, September 2015.