# Fooling Image Search Engine

**Authors:** Yuanjun Gong, Bin Liang\*, Jianjun Huang  
**Emails:** {Gongyuanjun, liangb, hjj}@ruc.edu.cn  
**Affiliation:** Renmin University of China

## Outline
1. Introduction
2. Technical Background
3. Methodology
4. Attacking Google Image Search Engine
5. Discussion
6. Conclusion

## 1. Introduction
Image search engines (e.g., Google, Baidu) provide a service called reverse image search, which allows users to find related images by uploading an image or an image URL. Reverse image search is a content-based image retrieval (CBIR) technique where the system uses a sample image as a query to retrieve similar images.

Reverse image search can be used for:
- Locating the source of an image
- Finding higher resolution versions
- Tracking down the content creator
- Detecting plagiarism

### Example: Plagiarism Detection
In June 2016, the poster for the TV play "Fuyao" was accused of plagiarizing an image created in 2014 by painter Lu He.

**Original Image:**
- Original picture
- Poster of the TV play "Fuyao"

**Plagiarism Detection:**
- The CBIR system can be a potential attack target.
- Adversaries may evade the search engine by introducing perturbations to the query image.

**Evasion:**
- **Query Image:** \( x \)
- **Adversarial Image:** \( x' \)
- **Result:** No search results (evasion)

## 2. Technical Background
### CBIR Framework
- **Local Features:** SIFT (Scale Invariant Feature Transform) and SURF (Speeded Up Robust Features) are widely used local feature algorithms.
  - **SIFT:** More accurate but slower.
  - **SURF:** Faster but less accurate.

### SIFT and SURF Algorithms
- Both build an image pyramid (scale space) to find keypoints at different scales.
- Non-maximum suppression in a 3×3×3 neighborhood is applied to identify potential keypoints.
- Keypoints are recorded when the absolute value of the DOG-value exceeds a threshold \( T \).

**SIFT:**
- Uses the Difference of Gaussians (DOG) to detect keypoints.
- Gaussian convolution is applied to produce the scale space, and adjacent Gaussian images are subtracted to produce the DOG images.

**SURF:**
- Uses the determinant of the Hessian matrix to detect keypoints.
- Approximates the second-order derivatives using box filters for speed.
- The determinant of the Hessian matrix is approximated as:
  \[
  \text{det}(H_{\text{approx}}) = D_{xx}D_{yy} - 0.9D_{xy}^2
  \]

### Robustness of SIFT/SURF
- SIFT and SURF are rotation and scale invariant.
- They can retrieve the original image even with rotated, grayscale, or partial images.
- Only about 10% of keypoints are needed for a successful search.

### Evasion Techniques
- **Descriptor Matching:** Changing the statistical histogram of keypoints descriptors.
- **Methods:**
  1. Removing original keypoints from the image.
  2. Injecting external keypoints into the image.
- **Utility-Preserving Requirement:** The adversarial image must maintain its original visual semantics for human observers.

## 3. Methodology
### Utility-Preserving Requirement
- An adversarial image should be utility-preserving, i.e., it must retain its original visual semantics for a human observer.

### 3.1 SIFT Keypoints Removal Method
- **Removal with Minimum Local Distortion (RMD):** Targets a limited number of keypoints to be erased.
- **Process:**
  - Define a subset \( \epsilon_{\delta^+} \) of keypoints.
  - Erase keypoint \( x \) in \( \epsilon_{\delta^+} \) by decreasing the absolute DOG-value \( |D(x)| \) such that it falls below the threshold \( C \).
- **Algorithm:** RMD [4] is used to remove SIFT keypoints.

### 3.2 R-SURF: SURF Keypoints Removal Method
- **R-SURF:** An optimization-based method to remove SURF keypoints.
- **Process:**
  - Determine the support area \( S(x) \) for each target keypoint.
  - Reconstruct three box filters \( K_{xx}, K_{xy}, K_{yy} \) based on the scale \( \sigma \) of the keypoint.
  - Solve a nonlinear optimization problem to minimize distortion while ensuring the keypoint is removed.

### 3.3 Evaluation: Removal
- **Target System:** VisualIndex, a simple image indexing engine based on MATLAB and VLFeat.
- **Results:**
  - RMD with ten iterations can bypass VisualIndex.
  - RMD with sixty iterations can bypass but does not preserve utility.
  - RMD with ten iterations cannot bypass VisualIndex.

### 3.4 Keypoints Injection Method
- **IMD (Injection with Minimum Local Distortion):** The inverse operation of RMD.
- **Process:**
  - Assign location and scale information for each potential keypoint.
  - Add patches to the original image to meet the threshold.
- **Frame Construction:**
  - Construct a frame with basic bricks to generate as many keypoints as possible.
  - Use K-means clustering to extract SIFT keypoints and their surrounding regions.
  - Build grains based on the clustering results to generate keypoints.

### 3.5 Evaluation: Injection
- **Results:**
  - IMD inside the image can bypass VisualIndex.
  - IMD on a 50-pixel-wide frame cannot bypass.
  - IMD on a 15-pixel-wide frame can bypass.

### 3.6 Evaluation: Hybrid
- **Hybrid Strategy:**
  - Combines removal and injection methods.
  - Experiment shows that it is feasible to bypass VisualIndex with this hybrid approach.

## 4. Attacking Google Image Search Engine
- **Removal Only:**
  - RMD with one iteration can bypass Google Image Search for some images.
  - RMD with five iterations can bypass but may cause unacceptable distortion.

- **Injection Only:**
  - Performs well on simple images but may not be effective for complex images.
  - IMD on a 15-pixel-wide frame can bypass, but a 50-pixel-wide frame cannot.

- **Hybrid Strategy:**
  - Combines RMD with one iteration and IMD on a 15-pixel-wide frame.
  - Successfully bypasses Google Image Search.

## 5. Discussion
- **Source/Target Attack:**
  - Forces the search result of an adversarial image to be a specific target image.
  - Possible to achieve by injecting keypoints from the target image, but causes severe distortion.
  - Further research is needed to improve the strategy.

## 6. Conclusion
- **Threat Model:** Presented a threat model for evading CBIR systems.
- **Algorithms:** Developed several algorithms for removing and injecting keypoints.
- **Bypassing Strategies:** Evaluated three strategies: removal only, injection only, and hybrid.
- **Experiments:** Demonstrated the feasibility of evading both VisualIndex and Google Image Search Engine.
- **Conclusion:** Our work proves the existence of threats to CBIR systems and shows that industrial-level image search engines are vulnerable to adversarial attacks.

**THANKS!**  
Q&A