    a.  在 [Domain]{.guilabel} 字段中提供 AD 域名。
    b.  [要将信任设置为双向，请选择双向信任复选框]{.guilabel}。[要将信任设置为单向，请不要选择双向信任]{.guilabel}。
        有关单向和双向信任的更多信息，请参阅
        ["一次性和双向信任"一节](#active-directory-trust.html#trust-one-two-way "一次性和双向信任"){.xref}。
    c.  要在另一个林中建立对某个域的外部信任，请选中 [External Trust
        复选框]{.guilabel}。
        如需更多信息，请参阅 ["Active Directory
        的外部信任"一节](#active-directory-trust.html#ext-trust-to-ad "Active Directory 的外部信任"){.xref}。
    d.  [使用 的]{.guilabel} Establish 部分定义如何建立信任：
        ::: itemizedlist
        -   要使用 AD
            [管理员的用户名和密码建立信任，请选择管理帐户并提供所需的凭证]{.guilabel}。
        -   或者，若要通过共享密码建立信任，请选择 [Pre-shared
            password]{.guilabel} 并提供信任密码。
        :::
    e.  为信任定义 ID 配置：
        ::: itemizedlist
        -   [Range 类型选项允许您选择]{.guilabel} ID
            范围类型。如果您希望 IdM 自动检测要使用的 ID 范围，请选择
            [Detect]{.guilabel}。
        -   要定义 ID 范围的起始 ID，请使用 [Base ID]{.guilabel}
            字段。要定义 ID 范围的大小，请使用 [Range size]{.guilabel}
            字段。如果您希望 IdM 在 ID
            范围中使用默认值，请不要指定这些选项。
        :::
        有关 ID 范围的详情请参考 ["ID
        范围"一节](#active-directory-trust.html#id-ranges "ID 范围"){.xref}。
    ::: figure
    []{#active-directory-trust.html#trust-realms-ui.png}
    **图 5.5. 在 Web UI 中添加信任**
    ::: figure-contents
    ::: mediaobject
    ![在 Web UI 中添加信任](images/trust-realms-ui.png)
    :::
    :::
    :::
5.  单击 [Add]{.guibutton} 以保存新信任关系。
:::
之后，验证 Kerberos 配置，如 ["验证 Kerberos
配置"一节](#active-directory-trust.html#trust-configure-verify-kerberos "验证 Kerberos 配置"){.xref}
所述。
:::
:::
::: section
::: titlepage
## []{#active-directory-trust.html#trust-post-install}跨林信任的安装后注意事项 {.title}
:::
::: section
::: titlepage
### []{#active-directory-trust.html#trust-issues}Active Directory Trust 的潜在行为问题 {.title}
:::
::: section
::: titlepage
#### []{#active-directory-trust.html#ad-trust-admin}Active Directory 用户和 IdM 管理 {.title}
:::
目前，Active Directory(AD)用户和管理员只能在登录 IdM Web UI
后查看其自助服务页面。AD 管理员无法访问 IdM Web UI
的管理员视图。[详情请查看*Linux_Domain_Identity_Authentication_and_Policy_Guide*](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Linux_Domain_Identity_Authentication_and_Policy_Guide/using-the-ui.html#ad-users-idm-web-ui){.ulink}
的对应部分。
另外，AD 用户目前无法管理自己的 ID 覆盖。只有 IdM 用户才能添加和管理 ID
覆盖。
:::
::: section
::: titlepage
#### []{#active-directory-trust.html#trust-issues-deleted}验证删除的 Active Directory 用户 {.title}
:::
默认情况下，每个 IdM 客户端使用 SSSD 服务缓存用户身份和凭证。如果 IdM 或
AD 后端供应商暂时不可用，SSSD
可让本地系统为已经成功登录一次的用户引用身份。
因为 SSSD
会在本地维护一个用户列表，所以后端上所做的更改可能不会立即对运行 SSSD
的客户端可见。在这样的客户端中，之前登录 IdM 资源且哈希密码存储在 SSSD
缓存中的用户能够再次登录，即使其用户帐户已在 AD 中删除。
如果满足上述条件，则会将用户身份缓存在 SSSD 中，即使删除了用户帐户，AD
用户也可以登录到 IdM 资源。在 SSSD 在线并能够针对 AD 域控制器验证 AD
用户登录前，此问题会一直存在。
如果客户端系统在线运行 SSSD，则用户提供的密码由 AD
域控制器验证。这样可保证不允许已删除的 AD 用户登录。
:::
::: section
::: titlepage
#### []{#active-directory-trust.html#trust-ccache}credential Cache Collections 和 Selecting Active Directory Principals {.title}
:::
Kerberos 凭证缓存尝试根据以下标识符将客户端主体与服务器主体匹配：
::: orderedlist
1.  服务名称
2.  主机名
3.  realm name
:::
当客户端和服务器映射基于主机名或真实名称和凭据缓存集合时，可能会作为 AD
用户绑定发生意外行为。这是因为 Active Directory 用户的域名与 IdM 系统的
realm 名称不同。
如果 AD 用户使用 `kinit`{.systemitem} 实用程序获取票据，然后使用 SSH
连接到 IdM 资源，则不会为资源票据选择主体。会使用 IdM 主体，因为 IdM
主体与资源的域名匹配。
例如，如果 AD 用户是 `Administrator`{.systemitem}，且域是
`ADEXAMPLE.ADREALM`{.systemitem}，则主体是
`Administrator@ADEXAMPLE.ADREALM`{.systemitem}。
``` screen
[root@server ~]# kinit Administrator@ADEXAMPLE.ADREALM
Password for Administrator@ADEXAMPLE.ADREALM:
[root@server ~]# klist
Ticket cache: KEYRING:persistent:0:0
Default principal: Administrator@ADEXAMPLE.ADREALM
Valid starting       Expires              Service principal
27.11.2015 11:25:23  27.11.2015 21:25:23  krbtgt/ADEXAMPLE.ADREALM@ADEXAMPLE.ADREALM
	renew until 28.11.2015 11:25:16
```
这在 Active Directory ticket 缓存中被设置为默认主体。但是，如果任何 IdM
用户也有一个 Kerberos ticket（如 `admin`{.systemitem}），则有一个单独的
IdM 凭证缓存，具有 IdM 默认主体。如果 Active Directory 用户使用 SSH
连接到资源，则为主机票据选择 IdM 默认主体。
``` screen
[root@vm-197 ~]# ssh -l Administrator@adexample.adrealm ipaclient.example.com
Administrator@PI:EMAIL's password:
[root@vm-197 ~]# klist -A
Ticket cache: KEYRING:persistent:0:0
Default principal: Administrator@ADEXAMPLE.ADREALM
Valid starting       Expires              Service principal
27.11.2015 11:25:23  27.11.2015 21:25:23  krbtgt/ADEXAMPLE.ADREALM@ADEXAMPLE.ADREALM
	renew until 28.11.2015 11:25:16
Ticket cache: KEYRING:persistent:0:0
Default principal: PI:EMAIL >>>>> IdM user
Valid starting       Expires              Service principal
27.11.2015 11:25:18  28.11.2015 11:25:16  krbtgt/PI:EMAIL
27.11.2015 11:25:48 28.11.2015 11:25:16 host/PI:EMAIL >>>>> host principal
```
这是因为 IdM 主体的域名与 IdM 资源域匹配。
:::
::: section
::: titlepage
#### []{#active-directory-trust.html#sid-issues}解析组 SID {.title}
:::
### []{#active-directory-trust.html#idm139883611778880}丢失 Kerberos 票据
运行 命令从 Samba 服务获取 SID（如 [**net getlocalsid 或**]{.command}
[**net getdomainsid**]{.command} ），会从 Kerberos
缓存中删除任何现有的管理票据。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您不需要为使用 Active Directory 信任而运行命令，如 [**net
[**getlocalsid**]{.command} 或 net getdomainsid**]{.command}。
:::
### []{#active-directory-trust.html#idm139883622550672}无法为用户验证组成员身份
无法验证特定可信用户是否与特定的 IdM 组（外部或 POSIX）关联。
### []{#active-directory-trust.html#idm139883617808896}无法显示 Active Directory 用户的远程 Active Directory 组成员资格
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
请注意，如果 IdM 服务器和客户端在 Red Hat Enterprise Linux 7.1
或更高版本上运行，则此问题不再会发生。
:::
`id`{.systemitem} 实用程序可用于显示 Linux
系统用户的本地组关联。`但是，id`{.systemitem} 不显示 Active Directory
用户的 Active Directory 组成员资格，即使 Samba 工具确实显示了这些用户。
要临时解决这个问题，您可以使用 `ssh`{.systemitem} 实用程序以给定的 AD
用户身份登录 IdM 客户端机器。在 AD
`用户第一次成功登录后，id`{.systemitem} 搜索会检测并显示 AD 组成员资格：
``` screen
[root@ipaserver ~]# id ADDOMAIN\user
uid=1921801107(PI:EMAIL) gid=1921801107(PI:EMAIL) groups=1921801107(PI:EMAIL),129600004(ad_users),1921800513(domain PI:EMAIL)
```
:::
:::
::: section
::: titlepage
### []{#active-directory-trust.html#trust-config-agent}配置信任代理 {.title}
:::
在信任环境中设置了新副本后，副本不会自动安装 [**AD
信任代理角色**]{.command}。将副本配置为信任代理：
::: procedure
1.  在现有的信任控制器中运行 [**ipa-adtrust-install
    \--add-agents**]{.command} 命令：
    ``` screen
    [root@existing_trust_controller]# ipa-adtrust-install --add-agents
    ```
    命令启动一个交互式配置会话，并提示您输入设置代理所需的信息。
    有关 `--add-agents`{.option} 选项的详情请参考
    [[ipa-adtrust-install]{.refentrytitle}(1)]{.citerefentry} man page。
2.  在新副本中：
    a.  重启 IdM 服务：
        ``` screen
        [root@new_trust_controller]# ipactl restart
        ```
    b.  从 SSSD 缓存中删除所有条目：
        ``` screen
        [root@new_trust_controller]# sssctl cache-remove
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        要使用 [**sssctl**]{.command} 命令，必须安装
        [sssd-tools]{.package} 软件包。
        :::
    c.  （可选）验证副本是否安装了 [**AD 信任代理角色**]{.command} ：
        ``` screen
        [root@new_trust_controller]# ipa server-show new_replica.idm.example.com
        ...
        Enabled server roles: CA server, NTP server, AD trust agent
        ```
:::
:::
:::
:::
::: section
::: titlepage
# []{#active-directory-trust.html#trust-managing}管理和配置跨林信任环境 {.title}
:::
::: section
::: titlepage
## []{#active-directory-trust.html#UPN-in-a-trust}可信域环境中的用户主体名称 {.title}
:::
IdM 支持使用用户主体名称(UPN)登录。UPN
是用于进行身份验证的用户名的替代选择，格式为
`username@KERBEROS-REALM`{.systemitem}。在 Active Directory
林中，可以配置额外的 UPN 后缀。这些企业主体名称用于提供默认 UPN
的替代登录。
例如，如果公司使用 Kerberos 域 `AD.EXAMPLE.COM`{.systemitem}，用户的默认
UPN 为
`PI:EMAIL`{.systemitem}。然而，公司常常希望其用户能够使用其电子邮件地址（如
`PI:EMAIL`{.systemitem} ）登录。在这种情况下，管理员将额外的 UPN
后缀 `example.com`{.systemitem} 添加到 Active Directory
林中，并在用户帐户属性中设置新的后缀。
只有在 AD 林根目录中定义时，UPN 后缀才对 IdM 可见。作为 AD
管理员，您可以使用 [**Active Directory 域和 Trust**]{.command} utility
或 [**PowerShell**]{.command} 命令行工具来定义 UPN。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要为用户配置 UPN 后缀，红帽建议使用执行错误验证的工具，如 [**Active
Directory 域和 Trust**]{.command} 实用程序。
红帽建议不要通过低级修改来配置 UPN，例如使用 [**ldapmodify**]{.command}
命令为用户设置 `userPrincipalName`{.systemitem} 属性，因为 Active
Directory 不验证这些操作。
:::
当您在可信 AD 林中添加或删除 UPN 后缀时，您必须刷新 IdM master
上可信林的信息：
``` screen
[root@ipaserver ~]# ipa trust-fetch-domains
Realm-Name: ad.example.com