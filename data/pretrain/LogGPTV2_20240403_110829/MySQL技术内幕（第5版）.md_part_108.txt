口女
口名
索引来执行行查找的查询记录下来。不过，这可能会导致大量的日志输出。自MySQL
日志。
如果服务器启动时带有--log-short-format选项，那么它会以简短形式把信息写人
为0。
各个查询至少要检查 min_examined_row_limit个行，否则它们不会被记录。默认值
写入日志表，那么查询执行时间的小数部分会被丢弃。
秒（默认值为10秒）。最小值为0。该值可以有小数部分，单位为微秒。
第12章MySQL的基本管理
慢查询日志
普通查询日志
，那么有的查询会被判定为慢，即使它在其他时间运
--console选项就
，如果慢查询被
该值的单位为
---
## Page 475
先确认其包含的内容已被复制到所有可用的从服务器，并且的确不需要它了。有关如何进行确
况里必须使用基于语句的格式)。默认值为STATEMENT。
进行记录（参考14.8.3节）。系统变量binlog_format可用于指定所要使用的记录类型。此变
而当使
式。
信息会
--log-bin-index=binlog，那么索引文件名就会变成binlog.index。
含扩展名，服务器会自动为其加上一个扩展名.index。例如，如果你指定的内容是
为.index。
列出现有二进制日志文件的名字。
这个大小由系统变量
日志，或者当前
顺序基本名（如果名宇
bin.000001、
务
滚事务
事务型
志。如果事务被回滚，则这个事务不会被写到二进制日志，因为它没有让数据库产生任何变化。
将它们缓存起来
写入二进制日志
进制日志文件的内容，
有效率的二进制格式。这意味着这种类型的日志无法直接阅读。要想以可读的文本格式显示
把有关的信息写
服务器
设置为主服务器
出现在二进制日志里，因为它实际不会更改任何值：
语句所触发的)。它不会把 SELECT 操作记录到这个日志里。像下面这样的 UPDATE 语句也不会
12.8.4
如果将二进制日志用于服务器间的复制，那么在删除某个给定的二进制日志文件之前，要
如果启用了
器会以HOSTNAME-bin作为基本名
MySQL必须先执行语句才能确定它是否真的修改了数据，因此它会在语句执行完毕之后才
MySQL服务器使用二进制日志来记录各种数据修改“事件”（如INSERT、DELETE或UPDATE
使用基于行的记录格式时，同样的UPFATE操作却会根据被更新的各个行所产生的变化来
例如，当使用基于语句的记录格式时，一个UPDATE操作便只会被写成一条UPDATE语句；
服务器在把事件写入二进制日志时，既可以使用基于语句的格式，也可以使用基于行的格
会比较简短。
启用二进制日志的方法是指定--1og-bin选项。
务也会被计
型表（如MyISAM表）进行了修改，那么这些修改将不能被回滚。在这种情况下，即使回
实际上，更为确切的说法是，回滚事务通常都不会被写入二进制日志。如果某个事务对非
一个能令复
与其他类型的日志有所不同，服务器往二进制日志里写入信息的格式不是文本，而一种更
器之间的复制操作，它包含了某些能为复制操作带来好处的信息，如语句的执行时间戳。
二进制日志的用途包括数据备份和恢复，并且支持服务器之间的复制。（要想把某个服务器
UPDATE t SET i=i;
值，以此表明每分钟可记录到的未使用索引的查询语句的数量上限。
5.6.5 起，可以把系统变量 log_throttle_queries_not_using_indexes 设置为非零
，使用--log-bin-index 选项，可以显式地指定一个名字。如果指定的名字里不包
二进制日志
了二进制日志功能，那么服务器还会创建一个附带的二进制日志索引文件，
、HOSTNAME-bin.000002，依此类推。否则，服务器会使用你指定的名字作为文
前
记录到二进制日志，目的是要确保对非事务型表的更改也可以被正确地复制。
来
志
复制正确进行的重要特性是：MySQL服务器会按各个事件执行完毕的顺序把它们
写入二进制日志，而不是在刚接收到它们的时候就写入。
器，使其可以被复制到从服务器，必须启用二进制日志。）因为二进制日志可用子
日志
，
志文件的大小已达到其最大值时，服务器便会按编号顺序生成下一个文件。
一直到该事务被成功提交。然后，
而不是以接收到它们的顺序写入。
字里
，可以使用工具程序mysqlbinlog。
包含扩展名，扩展名会被忽略掉)。此后，当你每次启动服务器、刷亲
。默认的索引基本名与二进制日志文件的基本名一样，扩展
名，按编号顺序生成二进制日志文件，如HOSTNAME-
。如果在指定此选项时没有带上文件名，
，它才会把在此期间发生的所有事件写入！
，对于那些包含在事务里的语句，服务器
12.8服务器日志
用来
455
新
服
名
会
出
---
## Page 476
用日志功能，可以使用下面这条语句：
普通查询日志或慢查询日志，需要启用系统变量general_log 或 slow_query_log。
进行记录）。NONE（如果存在)会改写所有其他目标值。如果未指定log-output，则默认为FILE。
relay-log，那么索引文件名就会变成relay-log.index。
服务器会自动为其加上一个扩展名.index。例如，如果你指定的内容是--relay-log-index=
现有中继日志文件的名字。默认的索引文件名与中继日志文件的基本名一样，扩展名为.index。
一个文件。这个大小由系统变量max_relay_log_size的值来确定。
务器会以 HOSTNAME-relay-bin 作为基本名，按编号顺序生成中继日志文件，如 HOSTNAME-
并删除每个处理完毕的文件。这种功能上的不相干让这两个线程可以各自独立地运行。
12.8.6使用日志表
relay-bin.000001、HOSTNAME-relay-bin.000002，依此类推。
器读取事件，并把它们写到中继日志；SQL线程负责读取中继日志文件，执行其中包含的事件，
来自主服务器的各种数据修改信息（即“事件”），并在接收到它们时将其写到中继日志。从服
12.8.5
认的信息请参考12.8.7.2节。
使
务
录重定位到另一个目录。为做到这一点，需要使用合适的日志选项来指定一个新的日志存放位置。
456
一个以逗号分隔的名字列表，取值包括FILE（记录到文件）、TABLE（记录到表）或NONE（不
一
存放位置不同的磁盘上，也是一种不错的做法，只是需要你把它们从服务器默认使用的那个数据目
用--relay-log-index选项，可以显式地指定一个名字。如果指定的名字里不包含扩展名，
复制就起不到任何作用。因此，一定要对文件系统进行定期备份。把这些日志写到另一个与数据库
要想在运行时更改日志记录目标，可以设置全局系统变量1og_output。例如，要想临时禁
器、刷新日志，或者当前日志文件的大小已达到其最大值时，服务器便会按编号顺序生成
名字作为顺序基本名（如果名字里包含扩展名，扩展名会被忽略掉)。此后，当你每次启动服
在从服务器上，有两个线程分别负责处理事件的读取和执行。其中，IO线程负责从主服务
系统变量
如果启用了中继日志功能，那么服务器还会创建一个附带的中继日志索引文件，用来列出
中继日志需要与复制机制中的从服务器一起使用（参考14.8节)。复制从服务器负责接收
SET GLOBAL log_output='NONE';
要想选择日志的输出目标，可以在启动服务器时设置系统变量1og-output。该变量的值是
写入 mysql 数据库里的日志表，或者同时写到这两个地方。
当启用了普通查询日志或慢查询日志功能时，你可以选择让服务器把日志输出写入日志文
启用中继日志的方法是指定--relay-log 选项。如果在指定此选项时没有带上文件名，服
口服务器会按编号顺序创建中继日志文件。
中继日志与二进制日志有几个共同的特点。
口
如果二进制日志（以及中继日志）因磁盘故障而出现丢失的情况，那么它们对数据库的恢复和
口
显示它们的内容。
中继日志文件的格式与二进制日志文件相同，因此可以使用工具程序 mysqlbinlog 来
有一个索引文件，其中列出的是当前存在的所有中继日志文件集。
第12章MySQL的基本管理
中继日志
量1og-output只是确定了使用哪一个输出目标，但不会启用日志功能。要想启月
二进制日志文件和系统备份
，否则，服务器会使用你指定
用
---
## Page 477
刷新日志。mysqladmin refresh 命令除了会刷新日志之外，还会做其他事情，如刷新表缓存，
因此在备份它们之前不应该让其过期。
一体纳入考虑范围。把所有数据恢复操作可能会需要的日志文件都备份起来是种不错的做法，
以找到此处讨论的日志过期脚本示例。
日志处于可管理状态的方法有如下几种。
可以在线使用，同时还想防止日志文件无限制地增长，可以使用日志文件过期技术。用于保持
如果你的服务器很忙，要处理大量的语句，那么此问题将尤为突出。要想保持最近的几个日志
flush-1ogs 命令，或者执行 FLUSH LOGS 语句。在 Unix 里，向服务器发送 SIGHUP 信号也可以 
12.8.7
TABLE语句来清空日志表。）
使用 SELECT语句，而不能使用INSERT、DELETE或UPDATE语句。（不过，可以使用TRUNCATE
更改服务器相应日志记录文件的名字。
slow.1og。如果启用的记录类型为输出到文件，那么更改这两个变量中任何一个的值，便可以
query_log_file 来决定。文件位于数据目录里，默认名分别为HOSTNAME.log 和 HOSTNAME-
slow_log表。
除非选择了FILE作为日志输出目标。
磁盘。刷新日志会导致服务器关闭并重新打开日志文件。 为此，需要执行 mysqladmin
如果把 FILE作为输出目标，日志文件名就由全局系统变量general_log_file 和 slow_
不管你实际选用的是哪一种日志过期技术，都应该把日志文件如何与数据库备份方法融为
日志记录很重要，但是潜在的问题是会产生大量的信息，甚至有可能会填满你的整个磁盘。
日志表的内容只允许查看，不允许修改，除非服务器自己进行更改。
如果把 TABLE 作为输出目标，服务器会把日志输出写入mysql 数据库的 general_log 和
日志刷新经常被用作日志过期或轮换操作的一部分，以确保任何缓冲的日志信息都已被写）
接下来的几节将对如何使用这几种过期方法进行讲解。在 sampdb 发行版的 admin 目录里可
口日志表截短或轮换法。如果把日志信息记录到mysql数据库的表，就可以把它们截短或者重
口基于使用期限的过期法。
口日志轮换法。这种方法适用于文件名固定的日志文件，如出错日志文件、普通查询日志文
如果启用了日志，服务器会把启动消息写入日志文件，但是不会把查询也写入日志文件，
SET GLOBAL log_output='FILE,TABLE';
要想重新启用日志功能，并将文件和表同时作为日志的输出目标，可以像下面这样做：
口
件和慢查询日志文件。
新命名，并将其替换为空表。
值来降低日志文件的最大可允许大小。
复制从服务器会按编号顺序来创建中继日志文件，并且会在处理完它们之后自动将其删除。
过期。只有在知道它们都已被完全发送至所有从服务器之后，才可以让其过期。因此，这
种形式的过期方法是基于哪些二进制日志文件仍在使用来决定的。
与复制有关的过期法。如果把二进制日志文件用于服务器复制，不能基于使用期限让它们
不应该使用这种技术了。
日志管理
，这种方法会把超过某个使用期限的日志文件删除掉。
刷新日志
12.8服务器日志
，因此，你只能对它们
，它适用于按
457
---
## Page 478
或者执行下面的命令：
的日志文件，可以像下面这样执行此脚本：
换至日志目录，并指定该目录中的文件名。例如，要想轮换/usr/mysql/data目录中名为qlog
件的轮换操作：
器会产生更多的日志信息）以及你愿意分配给旧日志的磁盘空间量。
qlog.7便可以让 qlog.7过期，而qlog.6会变成新的qlog.7。
打开当前日志文件期间将其更名，然后刷新日志。这个操作会使服务器关闭该文件，并打开-
以防止它们“撑爆”你的磁盘。
可以保证最近的几个日志始终处于在线状态，但要把文件的数量限制在你所选定的范围之内，
强
日志文件和慢查询日志文件。要想让固定名字的日志文件过期，可以使用日志轮换方法。这样
12.8.7.1轮换固定名字的日志文件
闭当前的日志文件，并打开一个新的带有下一个编号的日志文件。
因此，如果你只是想刷新日志，此命令完成的操作就会有些多余。
458
%rotate_fixed_logs.sh /usr/mysql/data/qlog
下面这个 shell脚本 rotate_fixed_logs.sh 可以用于在Unix里完成对固定名字的日志文
，每个文件的名字都会经历qlog.1、qlog.2等这样的轮换。当文件到达某个轮换点时，
log.2、qlog更名为qlog.1，并告知服务器把日志写入另一个新的qlog文件。按照这种方
次轮换时，将qlog更名为log.1，并告知服务器把日志写入那个新的qlog文件。（在服务
日志轮换的频率和需要保留的旧日志文件的数量，取决于服务器的繁忙程度（活跃的服务
现在来看看日志文件轮换的工作原理。假设有一个名为 αlog 的普通查询日志文件。在第
此脚本把日志文件名作为其参数。
if [ $#-ne 1 ];then
#!/bin/sh
MySQL服务器会将多种类型的日志信息写人固定名字的文件，如出错日志文件、普通查询
服务器会按编号顺序创建二进制日志文件和中继日志文件。因此，刷新日志会导致服务器关
mysqladmin flush-logs
logfile=$1
#参数1：日志文件名
日志刷新不会对存储引擎特有的日志产生影响。
exit1
echo "Usage:$0 logname"1>&2
rotate_fixed_logs.sh-轮换固定名字的MySQL日志文件
$logname.1
$logname.3
$logname.4
$logname.
$1ogname.6$logname.7
第12章MySQL的基本管理
5.
$logname
$logname.4
$logname.5
$logname.6
。你既可以指定文件的完整路径名，也可以将当前目录切
便
器