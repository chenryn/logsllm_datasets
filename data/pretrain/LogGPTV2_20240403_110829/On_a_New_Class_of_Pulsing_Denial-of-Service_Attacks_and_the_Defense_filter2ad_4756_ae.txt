lower attack rate. We have presented two speciﬁc attack
methods: timeout-based and AIMD-based, and their vari-
ants. Our analysis has conﬁrmed that the attacks can be
very effective by forcing the affected TCP senders to con-
tinuously re-enter the fast recovery state or the timeout
state.
Another important contribution of this paper is a novel,
two-stage detection scheme for the PDoS attacks. The de-
tection is based on an unusually high variability in the
incoming data trafﬁc and a drastic decline in the outgo-
ing ACK trafﬁc observed in the midst of a PDoS attack.
)
s
e
t
y
B
(
c
i
f
f
a
r
T
g
n
m
o
c
n
i
I
x 105
2
1.8
1.6
1.4
1.2
1
0.8
0.6
0.4
0.2
x 105
s
t
i
n
e
c
i
f
f
e
o
C
t
l
e
e
v
a
W
1
0.5
0
−0.5
−1
0
100
200
300
400
500
Time (Seconds)
600
700
800
900
0
100
200
300
400
500
Time (Seconds)
600
700
800
900
(a) Incoming trafﬁc for the Test-bed.
(b) Wavelet coefﬁcients of the incoming trafﬁc.
)
n
(
Z
H
x 108
6
5
4
3
2
1
0
−1
−2
0
x 109
yZ
(n)
H
In
Ccusum
8
7
6
5
4
3
2
1
)
n
(
H
Z
y
100
200
300
400
500
Time (Seconds)
600
700
800
900
0
0
100
200
300
400
500
Time (Seconds)
600
700
800
900
(c) Zh(n) of the incoming trafﬁc.
(d) The CUSUM results
Figure 12. Detection based on incoming trafﬁc.
As a result, we have employed wavelet transform to ob-
serve the incoming data trafﬁc and outgoing ACK trafﬁc,
and a nonparametric CUSUM algorithm to detect change
points. The results from both the simulation and test-
bed experiments show that the proposed scheme is effec-
tive at detecting a low-rate PDoS attack. Moreover, our
scheme is feasible for on-line detection because of the low
time complexity for both the computation of the discrete
wavelet transform and the CUSUM method.
Acknowledgment
The work described in this paper was partially sup-
ported by a grant from the Research Grant Council of
the Hong Kong Special Administrative Region, China
(Project No. PolyU 5080/02E). We also thank the anony-
mous reviewers for their helpful comments.
A Discrete wavelet transform
Wavelet transform is very suitable for analyzing irregu-
lar signals, such as network trafﬁc, because it gives a more
accurate local description of signal characteristics in both
time and frequency domains. Indeed, wavelet transform
has been applied to analyze network trafﬁc and identify
trafﬁc anomalies. For example, wavelet analysis has been
employed to identify trafﬁc anomalies caused by ﬂooding-
based DoS and ﬂash crowds through a deviation score
[16]. Compared with the work in [16], there are two main
differences in our wavelet analysis. First, the wavelet
analysis there is used to perform a postmortem analysis of
trace data, whereas ours concentrates on a real-time anal-
ysis of incoming data. Second, the analysis there only
considers the signal variations in the high and medium-
frequency bands that are not sufﬁcient to detect the PDoS
attack. Our analysis requires both high and low-frequency
bands.
The discrete wavelet transform (DWT) represents a
signal f(t) ∈ L2(R) using scaling functions ϕj,k(t),
and a translated and dilated version of wavelet functions
6000
5000
)
s
e
t
y
B
4000
(
c
i
f
f
a
r
T
K
C
A
P
C
T
3000
2000
1000
x 104
3.5
3
2.5
2
1.5
1
0.5
s
t
n
e
c
i
f
f
i
e
o
C
g
n
i
l
a
c
S
0
0
100
200
300
400
500
Time (Seconds)
600
700
800
900
0
0
100
200
300
400
500
Time (Seconds)
600
700
800
900
(a) Outgoing ACK trafﬁc for the Test-bed.
(b) Scaling coefﬁcients of the outgoing trafﬁc.
x 107
2.5
2
1.5
1
0.5
0
yZ
(n)
L
Out
Ccusum
x 108
5
4.5
4
3.5
3
2.5
2
1.5
1
0.5
)
n
(
L
Z
y
)
n
(
Z
L
−0.5
0
100
200
300
400
500
Time (Seconds)
600
700
800
900
0
0
100
200
300
400
500
Time (Seconds)
600
700
800
900
(c) ZL(n) of the outgoing ACK trafﬁc.
(d) The CUSUM results.
Figure 13. Detection based on outgoing ACK trafﬁc.
ψj,k(t):
f(t) =
(cid:8)
k
cj0(k)ϕj0,k(t) +
(cid:8)
(cid:8)
k
j=j0
dj(k)ψj,k(t), (21)
where {ϕj,k(t) = 2−j/2ϕ(2−jt − k), j, k ∈ Z} and
{ψj,k(t) = 2−j/2ψ(2−jt − k), j, k ∈ Z}. In this expan-
sion, the ﬁrst summation describes a coarse approxima-
tion of f(t), and the second summation depicts the details
of f(t). In practice, the coefﬁcients cj(k) and dj(k) are
calculated via the Mallat’s pyramid algorithm:
h0(m − 2k)cj−1(m),
cj(k) =
(cid:8)
(22)
m
(cid:8)
m
dj(k) =
h1(m − 2k)cj−1(m),
(23)
where h0 and h1 are the coefﬁcients of low-pass and
high-pass ﬁlters, respectively. If the scaling functions and
wavelet functions form an orthonormal basis, Parseval’s
theorem states that f(t)’s energy is equal to the energy in
its scaling coefﬁcients and wavelet coefﬁcients [5]. That
is,(cid:9)
|f(t)|2dt =
(cid:8)
k
|cj0(k)|2 +
(cid:8)
(cid:8)
k
j=j0
|dj(k)|2.
(24)
Since the wavelet functions operate like high-pass ﬁlters
that use narrow time windows to compute differences in
signals [23], they can capture the variability of the incom-
ing trafﬁc volumes. On the other hand, the scaling func-
tions perform like low-pass ﬁlters; therefore, they can be
used to extract the trend of the outgoing TCP ACK trafﬁc.
In order to realize an on-line detection, we use a moving
window to group W continuous samples for the computa-
tion of DWT. Let S = s(t), t ≥ 1, be the trafﬁc samples,
and SW (n) = {s(t)}n×W
t=(n−1)×W +1, n ≥ 1, be the se-
quential windows of the samples. We use SIn and SOut
to denote the trafﬁc samples for the incoming data traf-
ﬁc and outgoing ACK trafﬁc, respectively. We also use
W (n) to refer to the observation periods
W (n) and SOut
SIn
for the two respective cases.
Since the ﬂuctuation of the incoming trafﬁc can be cap-
tured by its high-frequency part, we continuously process
W (n) through the DWT and obtain their wavelet coefﬁ-
SIn
cients dIn
j,k. In order to quantify the degree of variability,
we deﬁne a statistic based on the signal energy as follows.
EH(n) =
1
W
|dIn
1,k
|2,
(25)
(cid:8)
k
(cid:8)
k
where dIn
1,k is the wavelet coefﬁcient at the ﬁnest scale
(j = 1). A similar approach was used in [17] to inves-
tigate the scaling properties of the network trafﬁc.
On the other hand, we process SOut
W (n) to obtain the
trend of the outgoing TCP ACK trafﬁc. We also deﬁne a
statistic based on the signal energy to represent the trend
of the outgoing TCP ACK trafﬁc as follows.
EL(n) =
1
W
|cOut
L,k
|2,
(26)
where cOut
posed scale (j = L).
L,k is the scaling coefﬁcient at the highest decom-
B The nonparametric CUSUM algorithm
for change-point detection
In order to automatically locate the change point in the
statistics EH and EL as soon as possible, we apply the
nonparametric sequential detection algorithm at the end
of every observation period. Here, we employ the non-
parametric CUSUM algorithm for this purpose. This al-
gorithm has also been used in other detection methods for
D/DoS attacks [20, 12, 11].
The formal deﬁnition of the nonparametric CUSUM al-
gorithm is summarized as follows [3, 4]:
y(n) = (y(n − 1) + x(n))+, y(0) ≡ 0, n = 1, 2, . . . ,
(27)
where (y(n))+ is equal to y(n) if y(n) > 0 , and 0, other-
wise. Its decision rule is:
dN (·) = dN (y(n)) = I(y(n) > Ccusum),
(28)
where Ccusum is the threshold. x(n) is deﬁned on the
probability space (Ω,F, P ) by the model
x(n) = a + h(n)I(n ≥ m) + ξ(n),
(29)
where ξ = {ξ(n)}∞
n=1 is the random sequence such that
its mathematical expectation ξ(n) ≡ 0, and {h(n)} is the
deterministic sequence representing the proﬁle of changes
that take place at the moment m [4]. As suggested in [3,
11], we calculate the threshold Ccusum by the following
equation:
Ccusum = (τ − m)+(h − (cid:7)a(cid:7)),
if m ≥ 1,
(30)
where τ is the preferred detection time.
The CUSUM method assumes that a 
0, which together implies that the mean value of x(n) will
change from negative to positive when a change occurs.
Therefore, it may necessary to ﬁrst transform the statis-
tics under the change-point detection to new random se-
quences which have negative mean values under normal
conditions.
References
[1] The
network
simulator
-
ns-2.
http://www.isi.edu/nsnam/ns/.
[2] M. Allman and V. Paxson. On estimating end-to-end net-
In Proc. ACM SIGCOMM Conf.,
work path properties.
1999.
[3] B. Brodsky and B. Darkhovsky. Nonparametric Methods
in Change-Point Problems. Kluwer Academic Publishers,
The Netherlands, 1993.
[4] B. Brodsky and B. Darkhovsky. Non-Parametric Statisti-
cal Diagnosis Problems and Methods. Kluwer Academic
Publishers, The Netherlands, 2000.
[5] C. Burrus, R. Gopinath, and H. Guo.
Introduction to
Wavelets and Wavelet Transforms: A Primer. Prentice
Hall, Upper Saddle River, NJ, 1998.
[6] C. Jin, H. Wang, and K. Shin. Hop-count ﬁltering:
an effective defense against spoofed DDoS trafﬁc.
In
Proc. ACM Conf. Computer and Communications Security
(CCS), 2003.
[7] M. Carson and D. Santay. NIST Net: a Linux-based net-
work emulation tool. ACM Computer Communication Re-
view, 33(3), July 2003.
[8] R. Chang. Defending against ﬂooding-based, distributed
IEEE Communica-
denial-of-service attacks: a tutorial.
tions Magazine, 40(10), 2002.
[9] M. Delio.
New breed
zombies
http://www.acm.org/technews/articles/2001-
attack
of
lurk.
3/0514m.html, May 2001.
[10] S. Floyd and V. Jacobson. Random early detection gate-
IEEE/ACM Trans. Net-
ways for congestion avoidance.
working, 1(4):397–413, August 1993.
[11] H. Wang, D. Zhang, and K. Shin. Detecting SYN ﬂooding
attacks. In Proc. IEEE INFOCOM Conf., 2002.
[12] J. Baras, A. Cardenas, and V. Ramezani. On-line detec-
tion of distributed attacks from space-time network ﬂow
patterns. In Proc. 23rd Army Science Conf., 2002.
[13] A. Kuzmanovic and E. Knightly. Low-rate TCP-targeted
denial of service attacks. In Proc. ACM SIGCOMM Conf.,
August 2003.
[14] L. Feinstein, D. Schnackenberg, R. Balupari, and D. Kin-
dred. Statistical approaches to DDOS attack detection and
response. In Proc. DARPA Information Survivability Conf.
and Exposition, 2003.
[15] M. Allman, V. Paxson, and W. Stevens. TCP congestion
control. RFC 2581, April 1999.
[16] P. Barford, J. Kline, D. Plonka, and A. Ron. A signal anal-
ysis of network trafﬁc anomalies. In Proc. ACM Internet
Measurement Workshop, 2002.
[17] P. Huang, A. Feldmann, and W. Willinger. A non-
intrusive, wavelet based approach to detecting network
performance problems. In Proc. ACM Internet Measure-
ment Workshop, 2001.
[18] K. Park and H. Lee. On the effectiveness of route-based
packet ﬁltering for distributed DoS attack prevention in
power-law Internets. In Proc. ACM SIGCOMM Conf., Au-
gust 2001.
[19] V. Paxson and M. Allman. Computing TCP’s retransmis-
sion timer. RFC 2988, November 2000.
[20] R. Blazek, H. Kim, B. Rozovskii, and A. Tartakovsky. A
novel approach to detection of denial of service attacks via
adaptive sequential and batch-sequential change-point de-
tection methods. In Proc. IEEE Workshop on Information
Assurance and Security, June 2001.
[21] L. Rizzo. Dummynet: a simple approach to the evaluation
of network protocols. ACM Computer Communication Re-
view, 27(1), January 1997.
[22] S. Floyd, M. Handley, and J. Padhye. A compari-
son of equation-based and AIMD congestion control.
http://www.icir.org/tfrc/, May 2000.
[23] G. Strang and T. Nguyen. Wavelets and Filter Banks.
Wellesley-Cambridge Press, Wellesley, MA, 1996.
[24] Y. Yang and S. Lam. General AIMD congestion control.
In Proc. IEEE Intl. Network Protocols, 2000.