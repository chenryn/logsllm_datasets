### Description
Code to reproduce and compare to scipy below.  
I think there might be a bug map_coordinates when using the default arguments
of mode='constant' and cval=0.0.  
The function seems to be doing some sort of extrapolation in beyond one of the
corners of the image even though it should just return the constant 0.0. Whats
more, this seems to happen only on one corner.
Related to #5687, but with different behavior in different corners.
    import os
    # os.environ['CUDA_VISIBLE_DEVICES'] = '' # Doesnt impact the bug
    import jax
    import jax.numpy as jnp
    import scipy as sp
    kernel = jnp.ones((8, 8), dtype=jnp.float32)
    in_pos = jnp.array([[0., 0.], [4., 4.], [7., 7.], [7.01, 7.01], [7.5, 7.5], [-7.5, 7.5], [7.5, -7.5], [-7.5, -7.5]])
    out = jax.scipy.ndimage.map_coordinates(kernel, in_pos.T, order=1, mode='constant', cval=0.0)
    print(out)  # [1.         1.         1.         0.98009956 0.25       0.        0.         0.        ]
    out2 = sp.ndimage.map_coordinates(kernel, in_pos.T, order=1)
    print(out2)  # [1. 1. 1. 0. 0. 0. 0. 0.]
### What jax/jaxlib version are you using?
0.4.1
### Which accelerator(s) are you using?
CPU and GPU
### Additional system info
Ubuntu 22.05
### NVIDIA GPU info
_No response_