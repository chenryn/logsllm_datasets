ASk
remove ASj from P ool
foreach ASi ∈ P ool
foreach ASj 6= ASi ∧ ASj ∈ P
if S(d)
ASi
= S(d)
ASj
remove ASj from P ool
insert (ASi, ASj) in A
else if S(d)
ASi
⊂ S(d)
ASj
remove ASi from P ool
insert ((ASj , ASi)) in D
else if S(d)
ASj
⊂ S(d)
ASi
remove ASj from P ool
insert ((ASi, ASj)) in D
foreach ASi
in P
foreach ASj in D(ASi, ASj)
if S(d)
P = S(d)
insert (ASi, ASj) in I
foreach ASj in A(ASi, ASj)
P−ASi+ASj
insert (ASi, ASj) in I
{Subpool} = decompose(P ool)
foreach Subpoolk in {Subpool}
{Pk} = brute force (Subpoolk )
foreach Pkl
in {Pk}
foreach ASi
in Pkl
foreach ASj in D(ASi, ASj)
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
if S(d)
Pkl
insert Pkl − ASi + ASj in {Pk}
= S(d)
Pkl
−ASi+ASj
foreach ASj in A(ASi, ASj)
49
50
51
52
53
54
55 Output: solution set P, alternative solution sets R, in-
P = P S Pk0
Rk = {Pkl }l>0
insert (ASi, ASj) in I
terchangeable AS set I
Figure 7: MSC resolver algorithm
any of the dominated elements deleted during phase b) may
still be part of at least one optimal solution. Fig. 7 details
the above phases.
Initially in phase a) (lines 12–19) the algorithm veriﬁes the
presence of any ASk which is the only AS to cover a certain
non-stub ASi. More formally, the algorithm veriﬁes if there
ASes
Edges
Non-stub
# ASes
AF
770
1,980
AP
6,576
19,829
EU
17,657
77,465
LA
2,490
8,175
NA
16,032
43,331
W
41,127
144,475
229
1,589
3,697
659
2,531
7,282
ASes
p2c
p2p
s2s
Table 4: Main characteristics of AS-level topologies
14,868
4,737
158
33,701
9,430
323
1,380
533
31
39,812
37,225
4,844
3,231
359
54
93,898
49,251
1,256
is a set of ASes that covers a non-stub ASi with cardinality
equal to one (line 13). In this case ASk is removed from P ool
and is inserted into the solution set P (lines 14–15) and, as a
consequence, every non-stub AS in S(d)
is considered to be
ASk
covered. Thus, each element in the set S(d)
ASk
every remaining covering set S(d)
(lines 16–17). Eventually,
ASj
whenever one of the covering is emptied, the related AS is
removed from the P ool (lines 18–19).
is removed from
The same concepts are exploited in phase b) (lines 21–
31), in order to check whether any covering set is already
included in another set and, thus, can be put aside during
the remaining computation. More formally, for each pair
(ASi, ASj) the algorithm veriﬁes if the related covering sets
overlap each other exactly (line 23) or if one of the two
dominates the other (lines 26 and 29).
In the ﬁrst case
the pair (ASi, ASj) is put into the alias set A, while in
the second case the pair that comprises the dominating and
the dominated ASes is put into the dominated set D.
In
both cases, the computation continues by removing one AS
of the pair from P ool. In the ﬁrst case ASj is arbitrarily
removed (line 24), while in second case the dominated AS is
removed (lines 27 and 30). The arbitrary removal of ASj in
the ﬁrst case does not aﬀect the results of the computation,
since both ASes are completely interchangeable, i.e. their
covering set is exactly the same. By reducing the number
of elements in P ool, this phase may mean that additional
non-stub ASes are covered by a single AS in P ool, so that
new elements that have to be part of the ﬁnal solution can
be identiﬁed. Consequently, phases a) and b) are repeated
until P ool cannot be reduced any further (line 12).
In phase c) (lines 34–39) the dominated elements that have
been recorded are analysed to check if any of them could
be part of one of the solutions, by verifying if they can be
substituted with the related dominating elements and main-
taining, at the same time, full coverage of N . More formally,
to verify if the dominated element ASj can be substituted
with its dominating element ASi, the set of covered non-stub
ASes S(d)
, which is
obtained by switching ASj with ASi in P. If the sets are
equal (line 36), then ASj is recorded being interchangeable
with ASi in the set of interchangeable ASes I (line 37).
P is compared with the set S(d)
P−ASi+ASj
Since the problem cannot be reduced any further, an ex-
haustive approach to obtain an exact solution is required.
Phase d) (lines 41–53) ﬁrstly aims to solve the problem by
further reducing the problem by applying the usual mathe-
matical techniques to reduce the adjacency matrix A(d) (line
41) into independent sub-matrices. These sub-matrices can
still be seen as small and independent MSC sub-problems,
but due to their limited size they can be practically solved
by applying a brute-force algorithm (line 44) or a branch-
and-bound algorithm. To obtain all the possible solution
sets {Pk} for the considered sub component k, we still have
260p2c-distance
1
2
3
> 3
# not stub ASes
AF
0
0
0
229
AP
15
78
124
1,372
EU
67
165
252
3,213
LA
6
21
47
585
NA
39
126
165
2,202
W
120
310
489
6,363
Table 5: Regional distribution of p2c-distances
to test each of the dominating-dominated pairs in a similar
way as is done in phase c). However, unlike phase c), the
tests are performed on each solution Pkl found, and when-
ever ASj can substitute ASi, a new solution is inserted into
{Pk} (line 51).
As result of this procedure, the algorithm provides: i) a
set P of ASes composed of the set of ASes that were inserted
into the solution during phase a) and of one of the solution
sets for each component found (in the algorithm indicated
as Pk0 ); ii) a set R of ASes related to each component k
found during phase d) consisting of the possible solutions
not taken into account in P; and iii) a set I containing all
the ASes that can be interchanged.
Thus, P ∪ I ∪ R is the set of all the ASes that are part of
at least one optimal solution, i.e. the set of ASes that are
candidates for BGP feeders, while P is the solution found
by the algorithm. The cardinality of P is the exact num-
ber of BGP feeders that should be selected from the set of
candidates P ∪ I ∪ R in order to solve the MSC problem.
5. TOWARDS AN IDEAL ROUTE COLLEC-
TOR INFRASTRUCTURE
Finding a list of ASes that should become BGP feeders
exploiting the methodology illustrated in Section 4.2.2 en-
tails computing the p2c-distances between ASes on a suit-
able economic-tagged AS-level Internet topology. A good
starting point would seem to be the classic global AS-level
topology of the Internet tagged according to one of the eco-
nomic tagging algorithms proposed in the literature. How-
ever, as shown in our recent work [10], this could lead to mis-
leading and incomplete results. An AS connection present
in the global topology may hide multiple connections be-
tween the same two ASes but located in diﬀerent geographic
regions, each potentially regulated by diﬀerent economic re-
lationships. Applying our methodology to this coarse-level
representation of the Internet may thus lead to an underes-
timation of the correct number of BGP feeders required to
obtain a complete view of the Internet core. To illustrate this
we show both the results obtained by applying our method-
ology to the global topology of the Internet, referred to as
World (W), and to ﬁve regional topologies: Africa (AF),
Asia-Paciﬁc (AP), Europe (EU), Latin America (LA), North
America (NA).
We ﬁrst show the impact of the geography in BGP feeder
selection, highlighting that the analysis of the Internet from
a global point of view underestimates the number of BGP
feeders required. Then, we analyse the candidate feeders se-
lected by our methodology, identifying their particular char-
acteristics. Finally, we compare the coverage of the current
BGP feeders with the ideal set drawn by our methodology.
Region
AF
AP
EU
LA
NA
W
|P| (|P ∪ I ∪ R|)
d = 1
117 (214)
931 (1,688)
2,271 (4,641)
393 (707)
1,535 (3,233)
4,311 (9,232)
d = 2
97 (182)
848 (1,666)
2,089 (4,545)
363 (669)
1,428 (3,133)
3,937 (9,116)
d = 3
95 (197)
834 (1,625)
2,063 (4,438)
360 (660)
1,409 (3,027)
3,859 (8,875)
Table 6: Positioning algorithm results
5.1 Global vs regional analysis
The global and the regional topologies have been inferred
using the same BGP data analysed in Section 3 and exploit-
ing enhanced versions of the algorithms6 described in [27]
and [10], which can be found in an internal report [23]. The
main characteristics of these topologies are reported in Table
4.
Firstly, we compute the p2c-distances for each of the avail-
able topologies, as required by the positioning algorithm.
Note that these values can also be used to highlight which
zones of the Internet are poorly captured by the route collec-
tor infrastructure, thus providing further proof of the incom-
pleteness of the current collected topologies. To conﬁrm this,
we analysed the p2c-distances of each non-stub AS from the
route collector infrastructure by considering only routing in-
formation obtained via full feeders (see Table 5). Note that
we consider to be ∞ the p2c-distance of ASes that cannot
reach any route collector using only p2c connections. Most
ASes are currently either too far from the route collector in-
frastructure or cannot be reached by any route collector via
c2p connections alone, thus potentially representing hide-
outs for AS connectivity which need further investigation.
Once the p2c-distances had been calculated, we applied
the positioning algorithm to each of the economic topologies
available. The results are summarized in Table 6, where are
shown the cardinality of the solution set P and, in round
brackets, the cardinality of the candidate set P ∪ I ∪ R for
each topology. In each geographic scenario the number of
BGP feeders required is signiﬁcantly smaller than the num-
ber of non-stub ASes (Tables 4 and 6). More importantly,
the sum of BGP feeders required by regional scenarios is
higher than the number of those required by the World sce-
nario. This result was expected since the complete cap-
ture of the connectivity of an AS with a large geographic
range may entail deploying multiple BGP feeders around
the world. The inter-regional ASes typically follow a re-
gional principle to route their traﬃc, in order to maximize
their performance and minimize latency. To do this, they
tend to subdivide their ASes into diﬀerent routing areas by
exploiting the features of Interior Gateway Protocols (IGPs)
such as OSPF and IS-IS and they set up connections that
can only be exploited in regional traﬃc routing. A total of
965 of 7,282 non-stub ASes are present in more than one sin-
gle geographical topology and thus may ﬁt this description.
6The results shown in this paper are obtained using the
most conservative economic topology obtained by applying
the algorithms described in [27] and [10] with the time pa-
rameter NM AG = 1. Results for the remaining topologies
can be found at [23]
261100
10-1
10-2
10-3
)
x
>
X
P
(
AF
AP
EU
LA
NA
W
10-4
 0  0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1
)
x
>
X
P
(
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
AF
AP
EU
LA
NA
W
100
10-1
10-2
10-3
)
x