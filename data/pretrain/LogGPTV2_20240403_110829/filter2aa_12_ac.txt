Red Hat网络配置：
Red Hat网络配置GUI名为system-config-network，也可以通过Network名下面的System->Administration菜单下访问。该工具为配置网络接口与静态路由提供了一个简单的UI，也提供建立IPsec通道，配置DNS，添加/etc/hosts的面板。
下表列出了GUI编辑的底层文件。可在/etc/sysconfig/network中设置机器的主机名，也包括DNS域名以及默认网关。
例如，以下是某个以太网接口的network文件：
接口相关的数据存储在 /etc/sysconfig/network-scripts/ifcfg-ifname，ifname是网络接口的名字，该文件为每个接口设置IP地址，掩码，网络，以及广播地址。也包含指明接口是否要在启动时开启。
常规机器有配置以太网接口以及回环接口的文件，例如
以及
基于DHCP的echo文件更加简单：
在/etc/sysconfig文件中更改配置信息之后，对相应端口运行 ifdown ifname， ifup ifname。如果一次配置多个端口，使用命令service network restart重置整个网络。这其实是运行/etc/rc.d/init.d/network的一个快速的方法，每次启动时被调用，加上start参数。
也可以通过启动脚本来配置静态路由，添加到/etc/sysconfig/static-routes 文件的路由信息在启动时被存入路由表。这些表项为route add命令指定参数：
首先列出的是接口，但它实际上是在route命令行的最后执行，将路由与指定接口相关联。（也可以在GUI中看到该架构，路由作为部分设置内容配给各个接口）。命令剩下的内容包含route参数。上文静态路由的例子会产生如下命令：
网络基本功（十三）：细说Linux网络配置（下）
网络基本功（十三）：细说Linux网络配置（下）
转载请在文首保留原文出处：EMC中文支持论坛https://community.emc.com/go/chinese 
介绍
本文承接细说Linux网络配置（上） 。
更多信息
Linux网络硬件选项:
ethtool命令查询并设置网络接口关于媒体相关的参数。如：链路速度和双工。它代替了以前的mii-tool命令，但有些系统中两者并存。
只要简单加上接口名就可以查询它的状态。例如，eth0接口（PC主板的网卡接口）启动了自协商并且运行于全速率：
将该接口锁定在100 Mb/s全双工，使用以下命令：
ethtool -s eth0 speed 100 duplex full
如果想知道自协商在系统中是否可靠，也可以使用ethtool –r命令，可使链路参数立刻重新协商。
另一个有用的选项是-k，显示哪些协议相关任务指定给网络接口，而不是由内核执行。大多数接口能够计算校验和（checksum），一些也可以辅助分段任务。可以通过ethtool –K命令结合多个子选项开启或禁用特定类型的offloading（-k显示当前值，-K对其进行设置）。
通过ethtool所做的变更是暂时的。如果希望永久性更改，需要确保ethtool作为系统网络配置的一部分来运行。最好是把它作为各个接口配置的一部分，如果你只是在启动时运行一些ethtool命令，那么在接口重启而系统未重启时配置就无法正确生效。
注：Red Hat系统中，可以在/etc/sysconfig/network-scripts. ifup下的配置文件中添加一行ETHTOOL_OPTS=，以将整行作为参数传递给ethtool。
SUSE中ethtool的用法与Red Hat相似，但是选项名为ETHTOOL_OPTIONS，配置文件保存在/etc/sysconfig/network。
Ubuntu系统中，可以在 /etc/network/interfaces的接口配置脚本中运行ethtool命令。
Linux TCP/IP选项：
Linux将每个可调内核变量放在/proc虚拟文件系统中。网络变量位于/proc/sys/net/ipv4。以下是一些重要变量的列表：
许多名字中含有rate和max的变量用作阻止服务器攻击。子目录conf包含按照各接口设置的变量，包括all和default以及各接口子目录（包括loopback）。各子目录包含相同的一组文件。
假设用户在conf/eth0子目录中更改了一个变量，则变更仅适用于该接口。如果在conf/all中更改了变量值，你也许认为更改适用于所有接口，但实际上并非如此。每一个变量对于接收通过all所作的更改有各自的规则。有些是与当前值做或运算，有些是做与运算，还有些是取最大或最小值。除了内核代码以外没有文档详细说明这一过程，因此最好避免这样做，比较好的做法是对各接口分别做修改。
如果用户在conf/default中修改了变量，新的值会传递到所有在这之后配置的接口。另一方面，最好保持默认值不变，以供取消更改时参考。
/proc/sys/net/ipv4/neigh目录同样包含了各接口子目录。子目录中的文件掌控相应接口的ARP table管理以及IPv6邻居发现。以下是变量列表，以gc（代表垃圾回收）开头的变量决定ARP table表项超时以及丢弃。
要查看变量值，使用cat命令，要进行设置，使用echo重定向到合适的文件名。例如：
ubuntu$ cat icmp_echo_ignore_broadcasts0
显示当变量值为0时，则广播ping不能被忽略。要将它设置为1，在 /proc/sys/net 中，运行
ubuntu$ sudo sh -c "echo 1 &gt; icmp_echo_ignore_broadcasts"
通常，你登录的网络与调整的网络是同一个，所以要小心行事。在更改生产设备配置前务必在台式机上测试。
要永久更改某参数（更准确的说，系统每次启动时都重置该值），在/etc/sysctl.conf中添加合适的变量，这些变量在启动时由sysctl命令读取。文件sysctl.conf的格式是变量名__=值，而不是手动在shell中修改的格式echo value > variable。变量名是相对于/proc/sys的路径，可以用点或斜杠。例如：
/etc/sysctl.conf 文件中，
net.ipv4.ip_forward=0
net/ipv4/ip_forward=0
都会将主机IP转发关闭。
同时，内核源版本中的 ip-sysctl.txt文件也有一些比较好的注释信息。
参考
Unix and Linux System Administration Handbook
网络基本功（十四）：细说诊断工具ping
网络基本功（十四）：细说诊断工具ping
转载请在文首保留原文出处：EMC中文支持论坛https://community.emc.com/go/chinese 
介绍
ping的工作原理很简单，一台网络设备发送请求等待另一网络设备的回复，并记录下发送时间。接收到回复之后，就可以计算报文传输时间了。只要接收到回复就表示连接是正常的。耗费的时间喻示了路径长度。重复请求响应的一致性也表明了连接质量的可靠性。因此，ping回答了两个基本的问题：是否有连接？连接的质量如何？本文主要讨论这两个问题。
更多信息
正常的ping操作主要是两个特定的ICMP消息，ECHO_REQUEST和ECHO_REPLY。理论上，所有TCP/IP网络设备都应当通过返回报文来响应ECHO_REQUEST，但实际上并不总是如此。
ping的解析:
大多数操作系统版本，会一直发送ECHO_REQUESTs，直到中断为止。例如：
bsd1# ping www.bay.com
PING www.bay.com (204.80.244.66): 56 data bytes
64 bytes from 204.80.244.66: icmp_seq=0 ttl=112 time=180.974 ms
64 bytes from 204.80.244.66: icmp_seq=1 ttl=112 time=189.810 ms
64 bytes from 204.80.244.66: icmp_seq=2 ttl=112 time=167.653 ms
^C
--- www.bay.com ping statistics ---
3 packets transmitted, 3 packets received, 0% packet loss
round-trip min/avg/max/stddev = 167.653/179.479/189.810/9.107 ms
bsd1#
这一过程被Ctrl-C中断，此时打印出汇总统计。
上述结果中，针对每一个报文的回复给出了报文大小，来源，ICMP sequence number，TTL值，以及往返时间。其中，sequence number和往返时间对于评估基本连接状况来说是最有用的信息。
当发送一个ECHO_REQUEST时，将发送时间记录在报文里，并复制到远端主机相应的ECHO_REPLY报文中。当接收到ECHO_REPLY时，通过比较当前时间与报文时间计算出耗费时间。如果没有收到符合该sequence number的报文，则认为该报文丢失。耗费时间长短以及变化范围取决于中间链路数量，速度，以及链路拥塞情况。
什么值是合理的呢？这一值高度取决于网络以及网络质量。如果是在LAN网络环境下，响应时间还是很快的，通常在十几毫秒范围之内。如果连接到外网则该值会显著增加。如果是远程站点，可能会耗时上百毫秒。
你也可以用ping来粗略计算连接的吞吐量。在外网上发送两个不同大小的报文，通过-s选项来完成。时间长度的差别会反映大报文中额外数据所耗费的时间。例如，假设ping 100字节耗费30ms而ping 1100字节耗费60ms，因此，往返额外花费30ms单程额外花费15ms，多发送1000字节或8000比特。吞吐量近似为每15ms 8000比特或540，000bps。两个测量值之间的差异用来扣除开销。当然这一估算是非常粗略的，没有考虑到路径上其他数据流的情况，也没有考虑路径上所有链路的情况。
TTL貌似可以估算一条路径上的跳数，但是这有一些问题。当发送报文时，TTL字段先被初始化接着经过路径上每个路由器都要递减。如果达到0，报文就被丢弃了。从而对所有报文生命周期有一定限制。因而在路由回环的过程中，报文不会无期限存在于网络上。不幸的是，TTL字段可能会，也可能不会被远端设备重置，如果重置，也没有一致性。因此，要使用TTL字段估算路径中的跳数需要知道详细的系统信息。
通常一串稳定的回复意味着健康的连接。如果报文丢失或丢弃，可以在sequence number中看到跳数，以及丢失报文的编号。偶尔丢失一个报文不表示真的有什么问题。特别是跨越多台路由器或拥塞网络时。一个序列中的一个报文丢失或耗费明显更长时间是很正常的，这是因为路径中各条链路需对第一个报文做ARP解析。在ARP数据保存之后，后续报文就不会有这种开销。但是，如果丢失报文比例较大，则有可能路径上有问题。
某些情况下会收到ICMP错误消息。通常来自路由器，这里面包含很有用的信息。例如，下例中，设备尝试访问一个不存在的网络上的设备：
bsd1# ping 172.16.4.1
PING 172.16.4.1 (172.16.4.1): 56 data bytes
36 bytes from 172.16.2.1: Destination Host Unreachable
Vr HL TOS  Len   ID Flg  off TTL Pro  cks      Src      Dst
4  5  00 5400 5031   0 0000  fe  01 0e49 172.16.2.13  172.16.4.1
36 bytes from 172.16.2.1: Destination Host Unreachable
Vr HL TOS  Len   ID Flg  off TTL Pro  cks      Src      Dst
4  5  00 5400 5034   0 0000  fe  01 0e46 172.16.2.13  172.16.4.1
^C
--- 172.16.4.1 ping statistics ---
2 packets transmitted, 0 packets received, 100% packet loss
由于路由器没有到达该网络的路径，所以返回ICMP DESTINATION_HOST_UNREACHABLE信息。通常如果问题发生在运行ping命令的设备上，则会收到Destination Host Unreachable告警或 Destination Network Unreachable告警。如果问题发生在转发报文的设备上，则只会收到一条Destination Host Unreachable。
下例中，尝试向一台已配置拒绝从源设备接收数据流的路由器发送数据：
bsd1# ping 172.16.3.10
PING 172.16.3.10 (172.16.3.10): 56 data bytes
36 bytes from 172.16.2.1: Communication prohibited by filter
Vr HL TOS  Len   ID Flg  off TTL Pro  cks      Src      Dst
4  5  00 5400 5618   0 0000  ff  01 0859 172.16.2.13  172.16.3.10
36 bytes from 172.16.2.1: Communication prohibited by filter
Vr HL TOS  Len   ID Flg  off TTL Pro  cks      Src      Dst
4  5  00 5400 561b   0 0000  ff  01 0856 172.16.2.13  172.16.3.10
^C
--- 172.16.3.10 ping statistics ---
2 packets transmitted, 0 packets received, 100% packet loss
被过滤条件阻止的告警信息表明报文被丢弃。但也有可能过滤条件不显示该告警。
下例中，
bsd1# ping 172.16.3.10
PING 172.16.3.10 (172.16.3.10): 56 data bytes
^C
--- 172.16.3.10 ping statistics ---
6 packets transmitted, 0 packets received, 100% packet loss
路由器上使用同样的过滤条件，但应用于离开网络的数据流，而不作用于inbound数据流。因此，没有消息发送。这时，ping就无法告诉你为什么报文没有收到回复。
ping的选项:
一些选项控制发送报文的速率和数量，-c选项允许用户指定发送报文的数量。例如，ping –c10会发送10个报文然后停止。这一命令在脚本中很有用处。
命令-f和-l用于将报文泛洪到网络上。-f选项表明报文发送速率与接收主机能够处理速率相同。这一参数可用于链路压力测试或接口性能比较。
-l选项用于计数，尽可能快的发送该数量报文，然后恢复正常。该命令用于测试处理泛洪的能力，需要root权限执行。