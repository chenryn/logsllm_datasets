–
126
124
138
137
163
161
Post-reduction
P
C
P
–
–
–
–
–
–
95
100 132
94
99
130
110
145
104
103
144
109
178
129
129
128
177
128
Q
–
–
120
119
132
130
162
161
Table 3: Runtime for the best attacks on the proposed parameter sets according to our analysis.
The rounded Gaussian columns capture security of the ideal, rounded Gaussian noise distribution;
the post-reduction columns correspond to lower bound on security of the discretized distribution.
The best classical attack takes 2C operations, the best quantum attack 2Q, and 2P is the worst-case
lower bound runtime imposed by the list size in sieving algorithms. Bold face numbers indicate the
“security claim” for the speciﬁc parameter set, e.g. the Classical parameter set provides 130 bits of
classical security, whereas the Recommended set has 130 bits of post-quantum security.
The proof of security of our key exchange protocol relies on a variant of the LWE problem stated
below, where secrets s are drawn from χ.
Deﬁnition 5.2 (Decision LWE problem with short secrets). Let n and q be positive integers. Let
χ be a distribution over Z. Let s $← χ(Zn
q ). Deﬁne oracles Oχ,s and U as in Deﬁnition 5.1. The
decision LWE problem (with short secrets) for (n, q, χ) is to distinguish Oχ,s from U. In particular,
for algorithm A, deﬁne the advantage
(cid:17) − Pr(cid:0)AU () = 1(cid:1)(cid:12)(cid:12)(cid:12) .
(cid:16)
(cid:12)(cid:12)(cid:12)Pr
Advdlwe-ss
n,q,χ (A) =
s $← χ(Zn
q ) : AOχ,s() = 1
It was shown by Applebaum et al. [7] that the short secret variant has a tight reduction to the
decision LWE problem.
If A is a distinguishing algorithm
Lemma 5.1 (Short LWE [7]). Let n, q and χ be as above.
for decision LWE with short secrets (Deﬁnition 5.2), it can be used to construct a distinguishing
algorithm B for decision LWE (Deﬁnition 5.1) running in roughly the same time as A, with B
making O(n2) calls to its oracle, and satisfying Advdlwe
n,q,χ(B) = Advdlwe-ss
n,q,χ (A).
Matrix form. We use an extended form of the problem in which the secrets and errors are also
matrices. Let n, q, χ be as above, let m and n be positive integers, and let S $← χ(Zn×n
). Deﬁne
q
q
), E $← χ(Zm×n
), U $← U(Zm×n
); return (A, AS + E).
• Oχ,S: A $← U(Zm×n
• U: A $← U(Zm×n
We call this the (m, n)-matrix decision LWE problem. A standard hybrid argument shows that
any adversary distinguishing these two distributions with advantage  can be used to construct
an eﬃcient adversary breaking the decision LWE problem with advantage at least /n. We can
similarly deﬁne a short secrets version.
); return (A, U).
q
q
q
14
q
q
q
)
Game 0:
1: A $← U (Zn×n
)
2: S, E $← χ(Zn×n
)
3: B ← AS + E
4: S(cid:48), E(cid:48) $← χ(Zm×n
5: B(cid:48) ← S(cid:48)A + E(cid:48)
6: E(cid:48)(cid:48) $← χ(Zm×n
)
7: V ← S(cid:48)B + E(cid:48)(cid:48)
8: C ← (cid:104)V(cid:105)2B
9: K ← (cid:98)V(cid:101)2B
10: K(cid:48) $← U ({0, 1}n·m·B)
11: b∗ $← U ({0, 1})
12: if b∗ = 0
13: else
return (A, B, B(cid:48), C, K)
return (A, B, B(cid:48), C, K(cid:48))
q
q
q
q
)
)
Game 1:
1: A $← U (Zn×n
)
2: B $← U (Zn×n
3: S(cid:48), E(cid:48) $← χ(Zm×n
4: B(cid:48) ← S(cid:48)A + E(cid:48)
5: E(cid:48)(cid:48) $← χ(Zm×n
)
6: V ← S(cid:48)B + E(cid:48)(cid:48)
7: C ← (cid:104)V(cid:105)2B
8: K ← (cid:98)V(cid:101)2B
9: K(cid:48) $← U ({0, 1}n·m·B)
10: b∗ $← U ({0, 1})
11: if b∗ = 0
12: else
q
return (A, B, B(cid:48), C, K)
return (A, B, B(cid:48), C, K(cid:48))
q
(cid:2)E(cid:48)(cid:107)E(cid:48)(cid:48)(cid:3) $← χ(Zm×(n+n)
(cid:2)B(cid:48)(cid:107)V(cid:3) ← S(cid:48)(cid:2)A(cid:107)B(cid:3) +(cid:2)E(cid:48)(cid:107)E(cid:48)(cid:48)(cid:3)
)
q
q
q
)
)
Game 2:
1: A $← U (Zn×n
2: B $← U (Zn×n
)
3: S(cid:48) $← χ(Zm×n
4:
5:
6: C ← (cid:104)V(cid:105)2B
7: K ← (cid:98)V(cid:101)2B
8: K(cid:48) $← U ({0, 1}n·m·B)
9: b∗ $← U ({0, 1})
10: if b∗ = 0
11: else
return (A, B, B(cid:48), C, K)
return (A, B, B(cid:48), C, K(cid:48))
q
q
q
)
)
(cid:2)B(cid:48)(cid:107)V(cid:3) $← U (Zm×(n+n)
Game 3:
1: A $← U (Zn×n
2: B $← U (Zn×n
3:
4: C ← (cid:104)V(cid:105)2B
5: K ← (cid:98)V(cid:101)2B
6: K(cid:48) $← U ({0, 1}n·m·B)
7: b∗ $← U ({0, 1})
8: if b∗ = 0
9: else
return (A, B, B(cid:48), C, K)
return (A, B, B(cid:48), C, K(cid:48))
)
Figure III: Sequence of games for proof of Theorem 5.1.
5.2 Security of the key exchange protocol
To prove security of the key exchange protocol, consider an LWE key-exchange adversary that tries
to distinguish the session key K from a uniformly random key K(cid:48) given the transcript of the key
exchange protocol. Formally, we deﬁne the advantage of such an adversary A as:
n,n,m,B,q,χ(A) =(cid:12)(cid:12)Pr(cid:2)A(cid:0)A, B, B(cid:48), C, K(cid:1) = 1(cid:3) − Pr(cid:2)A(cid:0)A, B, B(cid:48), C, K(cid:48)(cid:1) = 1(cid:3)(cid:12)(cid:12) ,
Advddh-like
where A, B, B(cid:48), C, and K are as in Figure I, with LWE parameters n, q, and χ, additional
parameters n, m, B, and K(cid:48) is a uniform bit string of length n · m · B.
The following theorem implies that under the decision LWE assumption (with short secrets) for
parameters n, q, and α, eﬃcient adversaries have negligible advantage against the key exchange
protocol of §3.
Theorem 5.1. Let n, n, m, B, and q be positive integers, and let χ be a distribution on Zq. If Gen
is a secure pseudorandom function and the decision LWE problem is hard for (n, q, χ), then the key
exchange protocol in Figure I yields keys indistinguishable from random. More precisely,
n,q,χ(A ◦ B2)
n,q,χ(A ◦ B1) + m · Advdlwe
n,n,m,B,q,χ(A) ≤ Advprf
Gen(B0) + n · Advdlwe
Advddh-like
where B1 and B2 are the reduction algorithms given in Figure IV, and B0 is implicit in the proof.
The runtimes of B0, A ◦ B1, and A ◦ B2 are essentially the same as that of A.
Proof. The proof closely follows Peikert’s proof of IND-CPA security of the R-LWE KEM; see
Lemma 4.1 of [54], and Bos et al.’s proof of R-LWE DH key exchange [14].
It proceeds by the
sequence of games shown in Figure III. Let Si be the event that the adversary guesses the bit b∗ in
Game i.
Game 0. This is the original game, where the messages are generated honestly as in Figure I. We
want to bound Pr(S0). Note that in Game 0, the LWE pairs are: (A, B) with secret S; and (A, B(cid:48))
and (B, V) both with secret S(cid:48). Hence,
Advddh-like
n,n,m,B,q,χ(A) = |Pr(S0) − 1/2|
.
(1)
Game 1. In this game, the public matrix A is generated uniformly at random, rather than being
generated pseudorandomly from seedA using Gen.
15
q
q
)
B1(A, B):
1: S(cid:48), E(cid:48) $← χ(Zm×n
2: B(cid:48) ← S(cid:48)A + E(cid:48)
3: E(cid:48)(cid:48) $← χ(Zm×n
)
4: V ← S(cid:48)B + E(cid:48)(cid:48)
5: C ← (cid:104)V(cid:105)2B
6: K ← (cid:98)V(cid:101)2B
7: K(cid:48) $← U ({0, 1}n·m·B)
8: b∗ $← U ({0, 1})
9: if b∗ = 0 return (A, B, B(cid:48), C, K)
10: else return (A, B, B(cid:48), C, K(cid:48))
B2(Y, Z):
1:
(cid:20)A(cid:62)
(cid:21)
(cid:21)
(cid:20)B(cid:48)(cid:62)
B(cid:62)
V(cid:62)
← Y
← Z