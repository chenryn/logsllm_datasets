``` literallayout
pcs resource create resource_id [standard:[provider:]]type [resource_options] [op operation_action operation_options] --group group_name
```
对组可以包含的资源数量没有限制。组群的基本属性如下。
::: itemizedlist
-   资源在一个组中在一起。
-   资源按照您指定的顺序启动。如果组中的资源无法在任何位置运行，则不允许在该资源之后指定资源运行。
-   资源按照您指定的顺序的相反顺序停止。
:::
以下示例创建了一个名为 `shortcut`{.literal} 的资源组，其中包含现有的资源
`IPaddr`{.literal} 和 `Email`{.literal}。
``` literallayout
# pcs resource group add shortcut IPaddr Email
```
在本例中：
::: itemizedlist
-   首先启动 `IPaddr`{.literal}，然后启动 `电子邮件`{.literal}。
-   先停止 `电子邮件`{.literal} 资源，然后停止 `IPAddr`{.literal}。
-   如果 `IPaddr`{.literal} 无法在任何地方运行，则 `Email`{.literal}
    也无法运行。
-   但是，如果 `Email`{.literal} 无法在任何地方运行，这不会影响
    `IPaddr`{.literal}。
:::
:::
::: section
::: titlepage
## []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#_removing_a_resource_group}删除资源组 {.title}
:::
您可以使用以下命令从组中删除资源。如果组中没有剩余资源，这个命令会删除组本身。
``` literallayout
pcs resource group remove group_name resource_id...
```
:::
::: section
::: titlepage
## []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#_displaying_resource_groups}显示资源组 {.title}
:::
以下命令列出所有目前配置的资源组。
``` literallayout
pcs resource group list
```
:::
::: section
::: titlepage
## []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#s2-group_options-HAAR}组选项 {.title}
:::
您可以为资源组设置以下选项，它们的含义与为单个资源设置时相同：
`优先级`{.literal}、target`-role`{.literal}
和`is-managed`{.literal}。有关资源 meta 选项的详情，请参考 [配置资源
meta
选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters#proc_configuring-resource-meta-options-configuring-cluster-resources){.link}。
:::
::: section
::: titlepage
## []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#s2-group_stickiness-HAAR}组粘性 {.title}
:::
粘性（stickiness）在组中是可选的，它代表一个资源倾向于停留在组中的程度。组的每个活跃资源都会为组的总数贡献其粘性值。因此，如果默认的
`resource-stickiness`{.literal} 为 100，并且组有 7 个成员，其中 5
个处于活动状态，则整个组将首选其当前位置，分数为 500。
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-cluster-resources-configuring-and-managing-high-availability-clusters.html#con_determining-resource-behavior-configuring-cluster-resources}确定资源行为 {.title}
:::
您可以通过配置该资源的约束来决定集群中资源的行为。您可以配置以下约束类别：
::: itemizedlist
-   `location`{.literal} 约束 -
    位置约束决定资源可在哪个节点上运行。有关配置位置限制的详情，[请参阅确定资源可在哪些节点上运行](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_determining-which-node-a-resource-runs-on-configuring-and-managing-high-availability-clusters){.link}。
-   `顺序`{.literal} 约束 -
    排序约束决定资源运行的顺序。有关配置排序限制的详情，[请参阅确定集群资源的运行顺序。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_determining-resource-order.adoc-configuring-and-managing-high-availability-clusters){.link}
-   `colocation`{.literal} 约束 -
    共处约束决定了资源相对于其他资源将被放置在何处。有关 colocation
    约束的详情，[请参阅协调集群资源](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_colocating-cluster-resources.adoc_configuring-and-managing-high-availability-clusters){.link}。
:::
简而言之，配置一组限制会将一组资源放在一起，并确保资源按顺序启动并按相反顺序停止，Pacemaker
支持资源组的概念。创建资源组后，您可以像为单个资源配置限制一样，对组本身配置限制。
:::
:::
[]{#assembly_determining-which-node-a-resource-runs-on-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_determining-which-node-a-resource-runs-on-configuring-and-managing-high-availability-clusters.html#assembly_determining-which-node-a-resource-runs-on-configuring-and-managing-high-availability-clusters}第 11 章 确定资源可在哪些节点上运行 {.title}
:::
位置限制决定资源可在哪些节点上运行。您可以配置位置限制，以确定资源是否首选或避免指定节点。
除了位置约束外，资源运行的节点还受到该资源的
`resource-stickiness`{.literal}
值的影响，这决定了资源在当前运行的节点上的保留程度。有关设置
`资源粘性`{.literal} 值的详情，请参考
[配置资源以首选其当前节点](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_high_availability_clusters/index#proc_setting-resource-stickiness-determining-which-node-a-resource-runs-on){.link}。
::: section
::: titlepage
# []{#assembly_determining-which-node-a-resource-runs-on-configuring-and-managing-high-availability-clusters.html#proc_configuring-location-constraints-determining-which-node-a-resource-runs-on}配置位置限制 {.title}
:::
您可以配置基本位置约束，以指定资源首选项还是避免节点，使用可选
`分数`{.literal} 值来指示约束的首选程度。
以下命令为资源创建一个位置约束，以偏好指定节点。请注意，可以使用单个命令为多个节点在特定资源上创建限制。
``` literallayout
pcs constraint location rsc prefers node[=score] [node[=score]] ...
```
以下命令为资源创建一个位置约束,以避免指定节。
``` literallayout
pcs constraint location rsc avoids node[=score] [node[=score]] ...
```
下表总结了配置位置限制的基本选项的含义。
::: table
[]{#assembly_determining-which-node-a-resource-runs-on-configuring-and-managing-high-availability-clusters.html#tb-locationconstraint-options-HAAR-determining-which-node-a-resource-runs-on}
**表 11.1. 位置限制选项**
::: table-contents
+------------------+--------------------------------------------------+
| 项               | 描述                                             |
+:=================+:=================================================+
| `rsc`{.literal}  | 资源名称                                         |
+------------------+--------------------------------------------------+
| `node`{.literal} | 节点的名称                                       |
+------------------+--------------------------------------------------+
| `分数`{.literal} | 正整数值来指示给定资源应首选的资源               |
|                  | 还是避免给定节点的首选程度。`INFINITY`{.literal} |
|                  | 是资源位置约束的默认 `score`{.literal} 值。      |
|                  |                                                  |
|                  | `pcs contraint 位置 器 命令`{.literal} 中的      |
|                  | `分数`{.literal} 值为 `INFINITY`{.literal}       |
|                  | 表示该节点首选该节点（如果节点可用），但         |
|                  | 不会阻止资源在指定节点不可用时在另一节点上运行。 |
|                  |                                                  |
|                  | `pcs contraint 位置 器c 中的 分数`{.literal}     |
|                  | 值为 `INFINITY`{.literal} 表示``{=html}   |
|                  | 该资源永远不会在该                               |
|                  | 节点上运行，即使没有其它节点可用。这等同于设置了 |
|                  | score 为 `-INFINITY`{.literal} 的                |
|                  | `pcs constraint location add`{.literal} 命令。   |
|                  |                                                  |
|                  | 数值分数（即 not                                 |
|                  | `INFINITY`{.literal}）表示该约束是可选的，除     |
|                  | 非有其它因素大于它，否则该约束将被遵守。例如，如 |
|                  | 果资源已放置到其他节点上，`其资源粘性`{.literal} |
|                  | 分数高于 `首选位置`{.literal}                    |
|                  | 约束的分数，则该资源将保留在其中。               |
+------------------+--------------------------------------------------+
:::
:::
以下命令创建了一个位置约束，以指定资源 `Webserver`{.literal} 首选节点
`node1`{.literal}。
``` literallayout
pcs constraint location Webserver prefers node1
```
`pcs`{.literal}
支持命令行中位置限制中的正则表达式。这些限制适用于基于正则表达式匹配资源名称的多个资源。这可让您使用单一命令行配置多个位置限制。
以下命令创建了一个位置约束，从资源 `dummy0`{.literal} 到
`dummy9`{.literal} 都首选 `node1`{.literal}。
``` literallayout
pcs constraint location 'regexp%dummy[0-9]' prefers node1
```
因为 Pacemaker 使用 POSIX 扩展正则表达式，如
[http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_04](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_04){.link}
所述，您可以使用以下命令指定相同的约束。
``` literallayout
pcs constraint location 'regexp%dummy[[:digit:]]' prefers node1
```
:::
::: section
::: titlepage
# []{#assembly_determining-which-node-a-resource-runs-on-configuring-and-managing-high-availability-clusters.html#proc_limiting-resource-discovery-to-a-subset-of-nodes-determining-which-node-a-resource-runs-on}将资源发现限制为节点子集 {.title}
:::
Pacemaker 在任何位置启动资源前，它首先在每个节点上执行一次性 monitor
操作（通常称为\"探测\"），以了解资源是否已在运行。这种资源发现的过程可能会导致无法执行
monitor 的节点出现错误。
在节点上配置位置限制时，您可以使用 `pcs constraint location`{.literal}
命令的 `resource-discovery`{.literal} 选项指示 Pacemaker
是否应该为指定资源在该节点上执行资源发现。将资源发现限制到物理上能够运行的节点子集可能会在有大量节点时显著提高性能。当使用
`pacemaker_remote`{.literal}
来将节点数扩展到数百个节点范围时，应考虑此选项。
以下命令显示为 `pcs constraint location`{.literal} 命令指定
`resource-discovery`{.literal}
选项的格式。在这个命令中，一个正的[*分值*]{.emphasis}值对应一个基本位置约束，它配置为首选节点，而
[*分数*]{.emphasis}
的负数值对应配置资源以避免节点的基本位置约束。与基本位置限制一样，您也可以使用这些限制的资源使用正则表达式。
``` literallayout
pcs constraint location add id rsc node score [resource-discovery=option]
```
下表总结了配置资源发现约束的基本参数的含义。
::: table
[]{#assembly_determining-which-node-a-resource-runs-on-configuring-and-managing-high-availability-clusters.html#tb-resourcediscoveryconstraint-options-HAAR-determining-which-node-a-resource-runs-on}
**表 11.2. 资源发现约束参数**
::: table-contents
+:---------------------------------+:---------------------------------+
| 项                               | 描述                             |
+----------------------------------+----------------------------------+
| `id`{.literal}                   | 约束本身的用户选择的名称。       |
+----------------------------------+----------------------------------+
| `rsc`{.literal}                  | 资源名称                         |
+----------------------------------+----------------------------------+
| `node`{.literal}                 | 节点的名称                       |
+----------------------------------+----------------------------------+
| `分数`{.literal}                 | 整数                             |
|                                  | 值来指示给定资源应首选的资源还是 |
|                                  | 避免给定节点的首选程度。一个正的 |
|                                  | 分值对应一个基本位置约束，它配置 |
|                                  | 为首选节点，而分数的负数值对应配 |
|                                  | 置资源以避免节点的基本位置约束。 |
|                                  |                                  |
|                                  | `score`{.literal} 的             |
|                                  | `INFINITY`{.literal}             |
|                                  | 值                               |
|                                  | 表示该节点可用时该节点首选，但不 |
|                                  | 会阻止资源在指定节点不可用时在另 |
|                                  | 一节点上运行。`score`{.literal}  |
|                                  | 的 `-INFINITY`{.literal}         |
|                                  | 值表示该资源永远不会在该节       |
|                                  | 点上运行，即使没有其它节点可用。 |
|                                  |                                  |
|                                  | 数值分数（即非                   |
|                                  | `INFINITY 或`{.literal}          |
|                                  | `-INF                            |
|                                  | INITY`{.literal}）表示约束是可选 |
|                                  | 的，并且会被遵守，除非有其它因素 |
|                                  | 大于其。例如，如果资源已放置到其 |
|                                  | 他节点上，`其资源粘性`{.literal} |
|                                  | 分数高于 `首选位置`{.literal}    |
|                                  | 约                               |
|                                  | 束的分数，则该资源将保留在其中。 |
+----------------------------------+----------------------------------+
| `resource-discovery`{.literal}   | \* `always`{.literal} -          |