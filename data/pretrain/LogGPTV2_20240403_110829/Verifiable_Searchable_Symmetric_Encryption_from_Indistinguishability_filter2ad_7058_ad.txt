∗, ak
∗
123
Publicly veriﬁable SSE
141
(cid:8)
X j
] = g
∗
, pk
Y
← Z p
(cid:8)
X j
) ← ΓY .Gen(1λ)
∗ for j = 1, . . . ,|W| × |I D|
chooses rX j , r
∗[grX j
sets X
∗ runs (sk
∗
1
∗ for j = 1, . . . ,|W|
Y
chooses rY j randomly from the range of π and r
sets Y
∗[rY j] = (cid:12)r
, ΓY .Sign(sk
∗, r
)(cid:13)
r
1
(cid:8)
Y j
(cid:8)
Y j
(cid:8)
Y j from the range of F
3. the adversary A repeatedly chooses the query (s, x1, x2, . . . , xm )
4. the simulator S on input (1-9) acts as follows:
∗ = (e1, . . . , e|D B(s)|) where
∗
(cid:13)
(cid:8)
c
∗
Y
∗
Y
, vk
∗) and sets R
∗
Y as follows:
∗[c] = (cid:12)ec, yc, y
∗ recalls the simulator of TSet on input (1,4,5) to construct stag
∗ on input (3,4,5) constructs vtag
– if s-term has not appeared before (leakage 4)
∗, stag
∗ ← TSetRetrieve(T Set
– if s-term has been repeated in the previous queries
= rY j and vk
∗
Y their values from the previous repetition of s-term.
• runs t
t
• randomly chooses j ∈ {1, . . . ,|W|} such that it has not already been selected.
• sets vtag
∗
assigns vtag
Y
∗ on input (2,5,6,7,8) constructs xtoken[i, c]∗, xtag0[i, c]∗, xtag1[i, c]∗
vk1[i, c]∗
for i = 1, . . . , #x
for c = 1, . . . ,|D B(s)|
– if pair (xi , idc
s
) has not been repeated yet (leakage 7)
⊕ HY (R
as follows:
= r
(cid:8)
Y j
, vk
∗)
∗
Y
, vk0[i, c]∗,
1
∗
0
rX j
yc
• randomly chooses a number j ∈ {1, . . . ,|W| × |I D|} such that it has not already
been selected
• xtoken[i, c]∗ = g
• (step1) chooses xtag
[i, c] and xtag
∗
• (step2) if b[i, c] = 1 selects vk0[i, c]∗
1
(cid:6)
vk0[i, c]∗ (cid:11)= g
c.xtag0[i,c]∗)
(cid:8)
(cid:6)
(X
vk1[i, c]∗ = g
c.xtag1[i,c]∗)
(cid:8)
(X
• (step3) if b[i, c] = 0 selects vk1[i, c]∗
(cid:6)
vk1[i, c]∗ (cid:11)= g
c.xtag1[i,c]∗)
(cid:8)
(cid:6)
(X
vk0[i, c]∗ = g
c.xtag0[i,c]∗)
(cid:8)
(X
[i, c] randomly from Z p.
(cid:7)
from the range of g s.t.
(cid:7)
(cid:7)
from the range of g s.t.
(cid:7)
∗[grX j
∗[grX j
∗[grX j
∗[grX j
])(y
])(y
])(y
])(y
1
1
1
1
– if pair (xi , idc
s
) has been repeated in the previous queries
• assigns j its value from the previous repetition of the corresponding pair
• sets xtoken[i, c]∗ = g
tion)
• constructs new xtag0[i, c]∗, xtag1[i, c]∗, vk0[i, c]∗, vk1[i, c]∗
1-3.
rX j
yc
1
(note that yc might be different from the previous repeti-
according to the steps
123
142
A. Soleimanian, S. Khazaei
The rest of the interactions are simulated exactly the same as the real protocol (using the
leakage 9).
PV-SSE2 construction is L-adaptively-secure because,
– (Enc, Dec) is a CPA-secure symmetric encryption scheme, F I
p
, F Z
p are secure PRFs and
are computationally indistinguish-
TSet is LT -adaptively-secure, so T Set
able from T Set, stag and t.
– F I
computationally indistinguishable from X and xtoken[i, c].
p
∗
– π is a PRP and F is a PRF, so vtag
Y
p are PRFs and DDH assumption holds in G, thus X
∗
Y and Y
, F X
p
, F Z
and t
∗, stag
, vk
∗
∗
∗
∗
and xtoken[i, c]∗
are
are computationally indistinguishable
, r ic
, F Z
, F X
, r ic
0
, F Z
p
, F X
p
, mic
1
from vtagY , vkY and Y .
– F I
thus vk0[i, c]∗, vk1[i, c]∗, xtag0[i, c]∗, xtag1[i, c]∗
p
able from vk0[i, c], vk1[i, c], xtag0[i, c], xtag1[i, c].
p are PRFs, DDH assumption holds in G and mic
0
1 are random,
are computationally indistinguish-
(cid:16)(cid:17)
p are secure PRFs, g is a OWF, DDH assumption holds in group
Theorem 8 If F I
p
G and conditions from Theorem 4 hold, then PV-SSE2 construction is publicly-sound.
Proof Consider the query q = (w1, w2, . . . , wm ). The following events are deﬁned:
A = the adversary changes the list R.
B = the adversary does not completely process the list R.
C = for some pairs (i, c), the adversary changes the value b[i, c].
Where, R and b[i, c] are obtained from the honest implementation of PV-SSE2 construction.
We have,
Pr[SoundΣA(λ) = 1] ≤ Pr[A] + Pr[B] + Pr[C].
Also by Theorem 4
Now we try to compute Pr[C]. The event C can be rewritten as follows:
,w1||c))−1.r ic
1−b
Pr[A] ≤ negl1(λ) and Pr[B] ≤ negl2(λ).
,1−b,wi ).F Z
+(F X
p (K
p (K
(cid:8)
X
(cid:8)
Z
(i, c).
1−b
mic
C=the adversary can produce g
1
Where b is speciﬁed through X[g
F X
p (K X ,wi ).xind
1
] = g
honest implementation of PV-SSE2 construction. The following events are deﬁned:
,1−b||wi ).xind
,1−b||wi ).z
(cid:8)
(cid:8)
B1 = A(T Set, X ) → g
F X
p (K
X
or g
1
,1−b||wi ).F Z
+(F X
(cid:8)
B2 = A(all vk1−b[i, c] recieved so far) → g
1−b
mic
p (K
X
, 1 − b||wi ).F Z
B3 = A(all xtag1−b[i, c] recieved so far) → F X
(cid:8)
1
X
Clearly,
,w1||c))−1.r ic
1−b
, w1||c)
(cid:8)
Z
F X
p (K
1
(F X
1
p (K
p (K
(K
(K
(cid:8)
X
(cid:8)
Z
(cid:8)
c
p
p
(cid:8)
X
,b||wi ).xind
, for some pairs
(cid:8))−1
during the
Pr[C] ≤ Pr[B1] + Pr[B2] + Pr[B3].
, F Z
In the event B3, to get F X
p
p we have Pr[B1] ≤ negl3(λ)
, F I
Now, from DDH assumption and security of PRFs F X
and since g is OWF, Pr[B2] ≤ negl4(λ).
p
p
, w1||c) the server has to create a system
of equations through the values xtag1−b[i, c]. For various queries the values r ic