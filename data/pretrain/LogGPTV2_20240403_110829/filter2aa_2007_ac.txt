An example with Microsoft Windows 2000
17:13:13.081831 ppp0 > x.x.x.x > y.y.y.y: icmp: echo request (DF)
[tos 0x6,ECT]  (ttl 250, id 2779)
4506 0044 0adb 4000 fa01 a9a9 xxxx xxxx
yyyy yyyy 087b 2fff a51e 2267 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000
17:13:13.231831 ppp0  x.x.x.x.175: icmp: echo reply (DF) (ttl 
115, id 59514)
4500 0044 e87a 4000 7301 5310 yyyy yyyy
xxxx xxxx 0000 387a a51e 2267 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000 0000
0000 0000
Precedence Bits Value = 0
Code Field = 0
© 2 0 0 1     @ S T A K E ,     I N C .
37
Xprobe - The Rest
DF Bit
Will the DF Bit will be set with a reply ICMP message of any kind?
IP Time-To-Live
IP Time-To-Live Field Value with both ICMP Echo Requests (and ICMP Error 
Messages) and with ICMP Echo Replies.
DF Bit Echoing
What will happen if we will set the DF bit with an offending packet that will 
trigger an ICMP error message from a targeted machine? 
Will the DF Bit be set in the ICMP error message IP Header?
IPID
Linux Kernels 2.4.0 – 2.4.4 will send ICMP Echo replies (and requests) with 
an IP ID field value of 0.
© 2 0 0 1     @ S T A K E ,     I N C .
38
Xprobe - How Do We Start?
Query to a closed UDP port
ICMP Port Unreachable Error Message
Query to a definitely closed UDP port
No Reply - Query is blocked
Query to a definitely closed UDP port
ICMP Port Unreachable Error Message
© 2 0 0 1     @ S T A K E ,     I N C .
39
Xprobe - How Do We Start?
UDP datagram send to a closed UDP port.
Datagram sent with the DF Bit Set, and data
portion of the request should contain 70
bytes (or more).
1
No ICMP Error
Message Received
Host Filtered / Down
Future - Fail Over
Logic Might Be ICMP Query Only
ICMP Port Unreachable Error
Message Received
We Play
An example with the Static logic
 We query a definitely closed UDP port. 
http://www.isi.edu/in-notes/iana/assignments/port-numbers
 An indicator is being given for the presence of a Filtering Device
 If no ICMP Error Message is received, we might use the ‘query only’ logic
 The size of the Offending UDP datagram is 70 bytes
© 2 0 0 1     @ S T A K E ,     I N C .
40
We Play
Precedence Bits ! = 0xc0
Precedence Bits = 0xc0
Linux Kernel 2.0.x/2.2.x/2.4.x Based
CISCO Equipment (Routers) with IOS 11.x-12..x
Extreme Networks Switches
Others
Xprobe - How Do We Start?
An example with the Static logic
Linux Kernel 2.0.x, 2.2.x, 2.4.x will act as routers and will set their 
Precedence bits field value to 0xc0 with ICMP error messages. Networking 
devices that will act the same will be Cisco routers based on IOS 11.x-12.x 
and Extreme Networks switches.
© 2 0 0 1     @ S T A K E ,     I N C .
41
Xprobe - How Do We Start?
An example with the Static logic
Linux Kernel 2.0.x/2.2.x/2.4.x Based
CISCO Equipment (Routers) with IOS 11.x-12..x
Extreme Networks Switches
TTL ~ 255
TTL ~ 64
Linux 2.0.x
Linux Kernel 2.2.x/2.4.x based
Amount of Echoed Data from the
Offending Packet
Only the IP Header and 8
Data Bytes from the
Offending Packet is echoed
with the ICMP Port
Unreachable Error message
All the Offending Packet is
echoed with the ICMP Port
Unreachable Error message
CISCO Equipment (Routers) with IOS 11.x-12.x
Extreme Networks Switches
Linux  Kernel 2.0.x/2.2.x/2.4.x
Based
UDP Checksum
Echoed = 0
Extreme Networks
Switches
UDP Checksum
Echoed is OK
CISCO Routers
IOS 11.x-12.x
© 2 0 0 1     @ S T A K E ,     I N C .
42
Xprobe - How Do We Start?
An example with the Static logic
IPID !=0
IPID = 0
Linux Kernel 2.4.0-2.4.4
Linux Kernel 2.2.x/2.4.5
ICMP Echo Request
2
No Reply
Reply
Linux Kernel 2.2.x/2.4.x based
A Filtering Device Prevents us from
Concluding
ICMP Echo mechanism is
Not Filtered
 Linux Kernel 2.4.0-2.4.4 will use 0 as its IPID field value with ICMP Query  
replies (this was later fixed with Linux Kernels 2.4.5 and above).
 Linux Kernel 1.x does not set the Precedence field value to 0xc0 with 
ICMP error messages.
© 2 0 0 1     @ S T A K E ,     I N C .
43
Example – www.kernel.org
© 2 0 0 1     @ S T A K E ,     I N C .
44
Example – www.kernel.org
Sent Datagrams
Tests Performed
© 2 0 0 1     @ S T A K E ,     I N C .
45
Example – www.kernel.org
10/19-19:22:38.321716 213.8.199.165:14320 -> 204.152.189.113:32132
UDP TTL:250 TOS:0x0 ID:33305 IpLen:20 DgmLen:98 DF
Len: 78
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00 00 00 00 00 00                                ......
10/19-19:22:38.681716 204.152.189.113 -> 213.8.199.165
ICMP TTL:240 TOS:0xC0 ID:60235 IpLen:20 DgmLen:126
Type:3  Code:3  DESTINATION UNREACHABLE: PORT UNREACHABLE
** ORIGINAL DATAGRAM DUMP:
213.8.199.165:14320 -> 204.152.189.113:32132
UDP TTL:238 TOS:0x0 ID:33305 IpLen:20 DgmLen:98
Len: 78
** END OF DUMP
00 00 00 00 45 00 00 62 82 19 40 00 EE 11 E3 B8  ....E..b..@.....
D5 08 C7 A5 CC 98 BD 71 37 F0 7D 84 00 4E 23 25  .......q7.}..N#%
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
................
00 00 00 00 00 00
......
(2) Extra Data Echoed
(1) Precedence Bits Value = 0xC0
(3) TTL
© 2 0 0 1     @ S T A K E ,     I N C .
46
Example – www.kernel.org
10/19-19:22:38.681716 213.8.199.165 -> 204.152.189.113
ICMP TTL:250 TOS:0x6 ID:54019 IpLen:20 DgmLen:68 DF
Type:8  Code:123
ID:23678   Seq:38447  ECHO
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00 00 00 00 00 00 00 00                          ........
10/19-19:22:39.031716 204.152.189.113 -> 213.8.199.165
ICMP TTL:240 TOS:0x6 ID:60236 IpLen:20 DgmLen:68
Type:0  Code:123
ID:23678
Seq:38447  ECHO REPLY
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00 00 00 00 00 00 00 00                          ........
Linux Based on Kernel 2.2.x/2.4.5+
Time Elapsed ~700ms
(4) IP ID != 0
ICMP Echo Request sent with ICMP Code Field set 
to a value != 0
DF Bit is Set
© 2 0 0 1     @ S T A K E ,     I N C .
47
Xprobe - OS Identification List (Static)
Microsoft Windows 95
Microsoft Windows 98
Microsoft Windows 98 SE
Microsoft Windows ME
Microsoft Windows NT4 SP3 and Below
Microsoft Windows NT4 SP4 and UP
Microsoft Windows 2000 (including SP1 and SP2)
Microsoft Windows XP
© 2 0 0 1     @ S T A K E ,     I N C .
48
Xprobe - OS Identification List (Static)
Linux Kernel 2.0.x
Linux Kernel 2.2.x (and 2.4.5+)
Linux Kernel 2.4.0 – 2.4.4
Sun Solaris 2.3 – 2.8
Sun OS 4.x
HPUX 10.x, 11.x
MacOS 7.x-9.x
AIX 3.x, 4.x
Novell Netware
© 2 0 0 1     @ S T A K E ,     I N C .
49
Xprobe - OS Identification List (Static)
FreeBSD 2.x - 4.1, 4.1 - 4.3, 5.0 (future)
BSDI 2.x, 3.x, 4.x
NetBSD 1.x, 1.2.x, 1.3.x, 1.4.x, 1.5.x
OpenBSD 2.1-2.3, 2.4-2.5, 2.6-2.9
Ultrix 
OpenVMS
DGUX / Compaq Tru64
IBM OS/390
© 2 0 0 1     @ S T A K E ,     I N C .
50
Xprobe - OS Identification List (Static)
NFR Appliance