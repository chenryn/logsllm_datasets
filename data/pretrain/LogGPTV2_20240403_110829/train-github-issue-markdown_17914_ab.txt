       1023             new_data = concatenate_block_managers(
       1024                 mgrs_indexers, self.new_axes,
    -> 1025                 concat_axis=self.axis, copy=self.copy)
       1026             if not self.copy:
       1027                 new_data._consolidate_inplace()
    /home/code/anaconda2/lib/python2.7/site-packages/pandas/core/internals.pyc in concatenate_block_managers(mgrs_indexers, axes, concat_axis, copy)
       4474               for placement, join_units in concat_plan]
       4475 
    -> 4476     return BlockManager(blocks, axes)
       4477 
       4478 
    /home/code/anaconda2/lib/python2.7/site-packages/pandas/core/internals.pyc in __init__(self, blocks, axes, do_integrity_check, fastpath)
       2535 
       2536         if do_integrity_check:
    -> 2537             self._verify_integrity()
       2538 
       2539         self._consolidate_check()
    /home/code/anaconda2/lib/python2.7/site-packages/pandas/core/internals.pyc in _verify_integrity(self)
       2745         for block in self.blocks:
       2746             if block._verify_integrity and block.shape[1:] != mgr_shape[1:]:
    -> 2747                 construction_error(tot_items, block.shape[1:], self.axes)
       2748         if len(self.items) != tot_items:
       2749             raise AssertionError('Number of manager items must equal union of '
    /home/code/anaconda2/lib/python2.7/site-packages/pandas/core/internals.pyc in construction_error(tot_items, block_shape, axes, e)
       3897         raise ValueError("Empty data passed with indices specified.")
       3898     raise ValueError("Shape of passed values is {0}, indices imply {1}".format(
    -> 3899         passed, implied))
       3900 
       3901 
    ValueError: Shape of passed values is (4, 31), indices imply (4, 25)
However if the dataframes are sliced e.g. [:10] OR [10:], the concat works:
    customers, tables = ['CUSTOMER_A', 'CUSTOMER_B'], [df1.iloc[:20], df2.iloc[:20]]
    tables = pd.concat(tables, keys=customers, axis=1)
    tables
Output of `pd.show_versions()`
    INSTALLED VERSIONS
    ------------------
    commit: None
    python: 2.7.11.final.0
    python-bits: 64
    OS: Linux
    OS-release: 3.19.0-58-generic
    machine: x86_64
    processor: x86_64
    byteorder: little
    LC_ALL: None
    LANG: en_AU.UTF-8
    pandas: 0.18.0
    nose: 1.3.7
    pip: 8.1.1
    setuptools: 20.6.7
    Cython: 0.24
    numpy: 1.10.4
    scipy: 0.17.0
    statsmodels: 0.6.1
    xarray: None
    IPython: 4.1.2
    sphinx: 1.4.1
    patsy: 0.4.1
    dateutil: 2.5.2
    pytz: 2016.3
    blosc: None
    bottleneck: 1.0.0
    tables: 3.2.2
    numexpr: 2.5.2
    matplotlib: 1.5.1
    openpyxl: 2.3.2
    xlrd: 0.9.4
    xlwt: 1.0.0
    xlsxwriter: 0.8.4
    lxml: 3.6.0
    bs4: 4.4.1
    html5lib: None
    httplib2: None
    apiclient: None
    sqlalchemy: 1.0.12
    pymysql: None
    psycopg2: 2.6.1 (dt dec pq3 ext)
    jinja2: 2.8
    boto: 2.39.0