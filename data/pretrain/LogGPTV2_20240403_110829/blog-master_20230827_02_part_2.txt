## 业务场景2 介绍: 划分管辖区  
除了时间范围有交叉, 空间也存在交叉. 例如在根据地域划分责任范围时, 不能存在交叉. 如国界、省界、市界等. 同一行政级的多边形不能有overlay的情况.  
### 实现和对照  
#### 传统方法 设计和实验  
和预定会议室一样, 需要锁全表(连读请求都会被阻塞), 然后检查是否有overlay, 没有再写入, 最后释放排他锁.  
这里就不举例了.  
#### PolarDB|PG新方法1 设计和实验  
使用GIS类型的排他约束特性.  
首先创建2个插件:  
```  
create extension IF NOT EXISTS postgis;  
create extension IF NOT EXISTS btree_gist;  
```  
由于空间的相交判断有2种情况, 1种是判断2个多边形的bounding box是否橡胶, 这个会放大相交的概率.  
如下:  
```  
-- 判断2个bounding box是否overlay  
-- true, 2个多边形的bounding box有重叠.  
select  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)'))  
&&  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0.1,0.9 1,0 1,0 0.1)'))  
;  
```  
另一种是判断2个多边形是否相交, 注意相邻也算橡胶, 例如一个长方形沿对角线分成的2个三角形, 这2个三角形共用一条边, 也算相交.  
如下:  
```  
-- 判断2个非bounding box是否overlay  
-- true, 有一条边重叠.  
select  
ST_Intersects(  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)'))  
,  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 1,0 1,0 0)'))  
);  
-- 判断2个非bounding box是否overlay  
-- false, 完全不重叠  
select  
ST_Intersects(  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)'))  
,  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0.1,0.9 1,0 1,0 0.1)'))  
);  
```  
这个例子要求多边形不相交, 比较难办, 因为`&&`是判定bounding box是否相交的, 实际需要的是多边形是否实际相交.  
所以需要自定义1个operator, 使用ST_Intersects来解决这个问题.  
如下:  
```  
create operator ## (PROCEDURE = st_intersects, LEFTARG = geometry, rightarg = geometry, COMMUTATOR = ##);  
ALTER OPERATOR FAMILY gist_geometry_ops_2d USING gist add operator 15 ## (geometry, geometry) ;  
-- 判断2个非bounding box是否overlay  
-- true, 有一条边重叠.  
select  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)'))  
##  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 1,0 1,0 0)'))  
;  
-- 判断2个非bounding box是否overlay  
-- false, 完全不重叠  
select  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)'))  
##  
ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0.1,0.9 1,0 1,0 0.1)'))  
;  
```  
创建表  
```  
drop table tbl_loc;  
create table tbl_loc (  
  id serial primary key,   -- 主键  
  level int,   -- 地域级别  
  loc_geo geometry,  -- 地域多边形  
  exclude using gist (level with = , loc_geo with ##)   -- 排他约束，同一个级别，不允许有空间范围交叉的记录  
);  
postgres=# \d+ tbl_loc  
                                                        Table "public.tbl_loc"  
 Column  |   Type   | Collation | Nullable |               Default               | Storage | Compression | Stats target | Description  
---------+----------+-----------+----------+-------------------------------------+---------+-------------+--------------+-------------  
 id      | integer  |           | not null | nextval('tbl_loc_id_seq'::regclass) | plain   |             |              |  
 level   | integer  |           |          |                                     | plain   |             |              |  
 loc_geo | geometry |           |          |                                     | main    |             |              |  
Indexes:  
    "tbl_loc_pkey" PRIMARY KEY, btree (id)  
    "tbl_loc_level_loc_geo_excl" EXCLUDE USING gist (level WITH =, loc_geo WITH ##)  
Access method: heap  
```  
写入数据, BUG出现, 实际并没有判断这个排他约束, 下面记录都可以被正常插入.  
```  
insert into tbl_loc (level, loc_geo) values (1, ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)')));  
insert into tbl_loc (level, loc_geo) values (1, ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)')));  
drop table tbl_loc;  
create table tbl_loc (  
  id serial primary key,   -- 主键  
  level int,   -- 地域级别  
  loc_geo geometry,  -- 地域多边形  
  exclude using gist (loc_geo with ##)   -- 排他约束，同一个级别，不允许有空间范围交叉的记录  
);  
insert into tbl_loc (level, loc_geo) values (1, ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)')));  
insert into tbl_loc (level, loc_geo) values (1, ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 0,1 1,0 0)')));  
insert into tbl_loc (level, loc_geo) values (1, ST_MakePolygon( ST_GeomFromText('LINESTRING(0 0,1 1,0 1,0 0)')));  
```  
留个作业, 解决一下这个bug.  
#### 对照  
## 知识点  
范围类型:  https://www.postgresql.org/docs/16/rangetypes.html    
GIS 地理信息类型:  https://postgis.net/docs/manual-3.4/geometry.html    
排它约束:  https://www.postgresql.org/docs/16/rangetypes.html#RANGETYPES-CONSTRAINT      
bounding box:  https://postgis.net/docs/manual-3.4/geometry_overlaps.html  
operator:  https://www.postgresql.org/docs/14/sql-createoperator.html  
## 思考  
如果一开始结构设计时使用了2个字段来存储范围, 而不是tsrange类型的字段, 应该如何实现排它约束?  
除了范围有排他性, 还有什么排他性场景? 数值相等、空间重叠?  
排他性的要求是不是等价互换的? 例如 "a 排他符 b" 等价于 "b 排他符 a".  
GIS类型排它约束为什么是bound box的排他, 而不是实际的多边形边界?  
## 参考  
[《用 PostgreSQL 的排他约束(exclude)实现 - 行政区不可跨界 约束, 会议室预定时间不交叉 约束 等.》](../202102/20210208_03.md)  
[《会议室预定系统实践(解放开发) - PostgreSQL tsrange(时间范围类型) + 排他约束》](../201712/20171223_02.md)  
https://www.cybertec-postgresql.com/en/exclusion-constraints-in-postgresql-and-a-tricky-problem/  
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")  
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")  
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")  
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")  
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")  
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")  
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")