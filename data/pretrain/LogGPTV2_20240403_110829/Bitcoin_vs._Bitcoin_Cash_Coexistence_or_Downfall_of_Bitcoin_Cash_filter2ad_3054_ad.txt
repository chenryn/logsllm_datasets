sticking to coinB-mining exists, loyal mining power to coinB
is 0 in the Nash equilibria. Note that, in this case, MF and
MA would continuously conduct coinA-mining, because the
mining difﬁculty of coinB has not decreased after the previous
increase in difﬁculty. These players would not also change
their strategy because the mining difﬁculty of coinB increases
to a signiﬁcantly high value due to the heavy occurrence of
ﬁckle mining.
Example. Considering the case cstick = 0, we give an
example where (rF = 0.2, rB = 0), k = 0.3, and the initial
mining difﬁculty of coinB is 0.4. The state (0.2, 0) is not a
Nash equilibrium according to Theorem V.3. Because ﬁckle
miners continuously conduct the coinA-mining, the mining
difﬁculty of coinA is maintained as 1, and players in MF and
MA earn the payoff of 1. If a player moves into MB, the
player would earn 0.3
0.4 for a while in the beginning. However,
because the mining difﬁculty of coinB decreases after MB
ﬁnds several blocks, the player who moves to MB would
eventually earn 0.3
0.2 consistently. Note that the time duration in
Figure 4. Horizontal and vertical axes give the values of rF and rB,
respectively, and (rF , rB)-coordinates of vertices in zones are marked. At the
vertex of Zone1 and Zone3, α is a solution of equation Ninr3B +NderB(1+
k) − kNde = 0 for rB. All points in Zone1, Zone2, and Zone3 move in
directions (−, −), (−, +), and (+, −), respectively.
Figure 5. Yellow points and line represent equilibria for each case.
which the mining difﬁculty of coinB is close to 0 is negligible
compared to the time duration in which the mining difﬁculty of
coinB is 0.2. Therefore, the payoff of MB is 0.3
0.2 , and rational
players tend to move to MB due to the higher payoff. This
means that the state (0.2, 0) is not a Nash equilibrium.
B. Dynamics in game G(c, cstick)
In this
in the game
G(c, cstick) and study how a state can reach an equilibrium.
Best response dynamics. In game G(c, cstick), point (rF , rB)
reaches either of the two types of Nash equilibria: the stable
coexistence of two coins and the lack of loyal miners to coinB.
Figure 4 represents dynamics in game G(c, cstick), where
horizontal and vertical axes are rF and rB values, respectively.
A line, boundary1,3, represents
rB
section, we analyze dynamics
(1 − rF − rB)Ninr2B + (1 − rB)Nde(rF + rB)2
(4)
=
k
Ninr2B + Nde(rF + rB)2
.
On the line, the payoffs of MF (i.e., UF (rF , rB)) and MA
(i.e., UA(rF , rB)) are the same. In addition, the line does not
intersect with the line (0 ≤ rF ≤ 1, rB = 0) and has an
(cid:26)(cid:21)(cid:18)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:16 UTC from IEEE Xplore.  Restrictions apply. 
intersection (1 − α, α) with the line rF + rB = 1 for 0 ≤
rF ≤ 1, where α is a solution of equation Ninr3B +NderB(1+
k)− kNde = 0 for rB. The equation Ninr3B + NderB(1 + k)−
kNde = 0 has only one solution α, and it is between 0 and
k
1+k . Another line, boundary2,3, represents
(1 − rF − rB)Ninr2B + (1 − rB)Nde(rF + rB)2
(rF + rB)
=
k
Ninr2B + Nde(rF + rB)2
,
(5)
and the payoffs of MF (i.e., UF ) and MB (i.e., UB) are the
same on the line. The line does not intersect with the line
rF + rB = 1 for 0 ≤ rF ≤ 1 and has an intersection (k, 0)
with the line (0 ≤ rF ≤ 1, rB = 0). Moreover, it is most
proﬁtable among the three strategies to continually conduct
coinA-mining (A) in a zone above boundary1,3. We let this
zone be Zone1. In the zone below boundary2,3, it is most
proﬁtable to continually conduct coinB-mining (B), and the
zone is denoted as Zone2. In the zone between boundary1,3
and boundary2,3, ﬁckle mining (F) is the most proﬁtable,
and this zone is denoted as Zone3. Note that the range of
zones changes if the coin price changes because boundaries
are functions of k.
The moving direction of point (rF , rB) is expressed as a red
arrow in Figure 4. For ease of reading, we express directions
in which values rF and rB increase (+) or decrease (−) as
(±,±). For example, (+, +) indicates the direction in which
both values, rF and rB, increase. In Zone1, A is the most
proﬁtable strategy, and thus every point in Zone1 moves in the
direction (−,−). In Zone2, because B is the most proﬁtable
strategy, every point moves in the direction (−, +). Finally,
in Zone3, as F is the most proﬁtable strategy, every point
in Zone3 moves in the direction (+,−). Figure 4 shows the
directions in the three zones (Zone1, Zone2, and Zone3).
2D-Illustration of movement towards equilibria. To deter-
mine which equilibrium can be reached within each zone, we
represent all Nash equilibria in game G(c, cstick) depending
on a value of cstick as yellow points and line in Figure 5.
the red dash lines represent rB = cstick
In the ﬁgure,
for each case. As described in Section V-A, there are two
types of equilibrium points: 1) a lack of loyal miners and
2) stable coexistence of two coins. The equilibrium point
representing a lack of loyal miners would be located on a
red dash line rB = cstick, and we can see that all cases
have this equilibrium. For Cases 1, 2, and 3, the second type
of equilibrium (i.e., (0, k
k+1 )) representing stable coexistence
of two coins is also found. A point (rF , rB) moves in the
direction depending on its zone. In the meantime, if the point
meets the line rB = cstick, then the point moves toward
an equilibrium located on the line rB = cstick as shown in
Figure 5. In particular, the value of rF in the equilibrium on
the red dash line representing Case 3 is denoted by β, where
the equilibrium is the intersection point between boundary1,3
and the red dash line. Note, a point in Zone2 would not meet
a red dash line because the point in Zone2 moves in the
direction (−, +) and can always be above the red dash line.
Therefore, such points in Zone2 are likely to reach the stable
coexistence of coinA and coinB. However, some points (near
to boundary2,3) in Zone2 can also move into Zone3 when
more miners of MA than that of MF revise their strategies,
and then it is possible to reach the equilibrium, representing
a lack of loyal miners to coinB.
VI. APPLICATION TO BITCOIN SYSTEM
In this section, we apply our game model to Bitcoin as a
case study. Speciﬁcally, we consider game G(c, cstick) when
players possess sufﬁciently small mining power. To see if this
assumption is reasonable, we investigate the mining power
distribution in the Bitcoin system, referring to the power dis-
tribution provided by Slush [32]. The distribution is depicted
in Figure 6 where the x-axis represents the range of the relative
computational power ci and the y-axis represents the number
of miners possessing computational power in the correspond-
ing range. The ﬁgure shows that 1) most miners possess
sufﬁciently small mining power, and 2) even the maximum
computational power is less than 10−2. Note that BITMAIN’s
ci is about 3 · 10−2 as of Dec. 2018. Moreover, even though
mining pools currently possess large computational power, the
miners in pools can individually decide which coin to mine.
We also recognize the distribution of computational power is
signiﬁcantly biased toward a few miners, as shown in Figure 6.
However, this fact does not imply that (cid:7)c(cid:7)2 is large. Referring
to the data provided by Slush, (cid:7)c(cid:7)2 is only about 0.05, where
this value is equivalent to that for the case where all miners
possess 2.5 × 10−3 computational power.2 Therefore, most
miners (and most mining power) would follow dynamics of
game G(c, cstick). As a result, we can apply game G(c, cstick)
to the practical systems.
Figure 6. The computational power distribution in Slush.
Now, we describe how game G(c, cstick) is applied to the
Bitcoin system. As described in Section II, Bitcoin was split
into BTC and BCH in Aug. 2017. Thus, we can map BTC
and BCH to coinA and coinB, respectively. For the mining
difﬁculty adjustment algorithm of BCH, we should consider
two types of BCH mining difﬁculty adjustment algorithms:
those that BCH have before and after Nov. 13, 2017. This is
2We calculated this assuming that other pools have the computational power
distribution similar to Slush.
(cid:26)(cid:21)(cid:19)
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:45:16 UTC from IEEE Xplore.  Restrictions apply. 
because the mining difﬁculty adjustment algorithm of BCH
changed through a hard fork of BCH (on Nov. 13, 2017).
Before Nov. 13, 2017. First, we consider the mining difﬁculty
adjustment algorithm of BCH before Nov. 13, 2017. In this
algorithm, not only the mining difﬁculty is adjusted for every
2016 block, but also EDA can occur as described in Section II.
Note that EDA occurs if the mining is signiﬁcantly difﬁcult
in comparison with the current mining power, i.e., EDA is
used only for decreasing the BCH mining difﬁculty. Therefore,
the value of Nin is 2016 because the BCH mining difﬁculty
can increase after 2016 blocks are found. Meanwhile, when
the BCH mining difﬁculty decreases, the value of Nde varies
depending on rF and rB, ranging between 6 and 2016. Thus,
we can consider the expected number of blocks found until
the mining difﬁculty decreases (i.e, the mean of Nde denoted
by E[Nde]) instead of Nde, and E[Nde] as a function of rF
and rB would continuously vary from 6 to 2016. If rF is 0,
E[Nde] is 2016 because EDA does not occur, and if rB is 0,
E[Nde] is 6.
As a result, the Bitcoin system before Nov. 13, 2017 can
be G(c, cstick) where E[Nde] substitutes for Nde. This game
G(c, cstick) has also Nash equilibria and dynamics as shown
in Figure 4 because E[Nde] is a continuous function of rF
and rB.
After Nov. 13, 2017. Next, we consider the Bitcoin system
after Nov. 13, 2017. In this case, the BCH mining difﬁculty
adjustment algorithm is different from that assumed in our
game because the mining difﬁculty is adjusted for every block
by considering the generation time of the past 144 blocks as a
moving time window. Despite that, game G(c, cstick) can be
applied to this system. Indeed, in general, our results for game
G(c, cstick) would appear in the Bitcoin system regardless of
the BCH mining difﬁculty adjustment algorithm, shown below.
Theorem VI.1. Consider the game G(c, cstick) when (cid:7)c(cid:7)2 ≈
0. Then when the mining difﬁculty of coinB is adjusted every
block or in a short time period, the set E(c, cstick) is (3)
presented in Theorem V.3. In addition, G(c, cstick) under this
mining difﬁculty adjustment algorithm of coinB has dynamics
such as in Figure 4.
Because the current BCH mining difﬁculty is adjusted every
block, Theorem VI.1 implies that results for game G(c, cstick)
is also applied to the current Bitcoin system even though
the BCH mining difﬁculty adjustment algorithm changed. The
proof of Theorem VI.1 is presented in the full version of this
paper [31].
VII. DATA ANALYSIS
A. BTC vs. BCH
We analyze the mining power data in the Bitcoin system
to identify to which equilibrium the state has been moving.
Moreover, through this data analysis, we can ﬁnd out empir-
ically how much our theoretical model agrees with practical
results. For data analysis of the Bitcoin system, we collected
the mining power data of BTC and BCH from the release date
of BCH (Aug. 1, 2017) until the time of writing (Dec. 10,
2018) from CoinWarz [33]. Figure 7a represents the mining
power history of BCH, where the mining power is expressed
as a fraction of the total power in BTC and BCH, i.e.,
BCH mining power
BTC mining power + BCH mining power
.
In addition, we represent the data history of a ratio between
difﬁculties of BCH and BTC (i.e., DB
) and a relative price
DA
of BCH to that for BTC (i.e., k) in Figure 7b and 7c,
respectively. The price of BCH is depicted as a yellow line in
Figure 7c (see the left y-axis). Moreover, Figure 7c represents
− 1) to the BTC
the relative BCH mining proﬁtability ( kDA
DB
mining proﬁtability as a purple line, and the black dashed
− 1 = 0 (see the right y-axis for the two
line represents kDA
DB
lines). For this proﬁtability, to increase reliability of data, we
collected the daily BCH proﬁtability from CoinDance [34],
and thus a purple point is a data captured every day. Note
that DB
is less than k in the case where the purple line is
DA
above the black dashed line. Figure 7d simultaneously shows
all data histories (except for the BCH mining proﬁtability)
presented in Figure 7a∼7c. In Figure 7, the data from Dec.
2017 to Nov. 2018 are omitted because they are similar to the
data for Dec. 2018. Figure 8a∼8i correspond to parts (1)∼(9)
of Figure 7, respectively, where the area of three zones has
changed because the relative price k of BCH to that for BTC
has ﬂuctuated quite frequently.
As another case study, we examine the mining power data
of Bitcoin ABC and Bitcoin SV from Nov. 1, 2018 to Dec.
20, 2018 to analyze a special situation where cstick suddenly
increases due to the “hash war” caused by a hard fork in the
BCH system. We describe this in Section VII-B.
Methodology. We ﬁrst describe how to determine rF and rB
of each state. According to the deﬁnition of ﬁckle mining
(Deﬁnition IV.1), ﬁckle miners would conduct BCH mining
from when DB
changes to a value less than k to when DB
DA
DA
changes to a value greater than k. This is because DB is
always less than rF + rB and greater than rB (see Figure 7d).
Therefore, Figure 7a represents the value of rF +rB during the
period. We indicate the ﬁckle mining periods in gray before
the hard fork of BCH (Nov. 13, 2017) in Figure 7. Figure 7d
shows that DB
changes to a value less than and greater than k
DA