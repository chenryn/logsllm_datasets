21 s
28 s
21 s
25 s
25 s
23 s
20 s
19 s
23 s
25 s
23 s
24 s
24 s
24 s
23 s
27 s
22 s
25 s
21 s
24 s
25 s
Table 2: Descriptive statistics for Experiments 1 and 2. Recall time and success rates are for Part 2. Median creation and recall
times are shown. “Noticed reject” refers to rejection by a minimum-strength or blocklist requirement.
would provide sufficient protection against 106 online attacks, we
focused on NN6 policies and varied composition requirements. All
pairwise comparisons were made against the 3c8+NN6 baseline,
as our initial retrospective analyses suggested the 3c8+NN6 pol-
icy would produce overall stronger passwords than other NN6
policies. We find that while minimum-strength policies can be
strengthened against offline attacks by either increasing the
minimum required length or the minimum number of char-
acter classes, increasing the minimum length accomplishes
this at a lower usability cost, in terms of how long users need
to create a compliant password and how annoying or chal-
lenging they find that task.
As shown in Figure 3, combining a NN6 minimum-strength
requirement with different additional requirements led to pass-
words that differed substantially in overall guessability (PP). We
did not find statistically significant differences in the number of
NN6 passwords guessed for online attacks (i.e., up to 106 guesses).
However, against a 1014 offline attack, policies differed in their de-
fensive effectiveness. While 1c8+NN6 provided similar protection
to 3c8+NN6 (48% vs. 41% guessed, respectively), 1c16+NN6 (15%
guessed), 2c12+NN6 (30% guessed), and 3c12+NN6 (28% guessed) all
offered significantly more protection than 3c8+NN6 (FET).
Figure 3: Min-auto guess numbers for policies containing
NN6 requirements and varying composition requirements.
Most of the NN6 policies we tested showed similar usability prop-
erties relative to our 3c8+NN6 baseline; only 1c8+NN6 performed
better on two of our usability metrics. Compared to 3c8+NN6 par-
ticipants, 1c8+NN6 participants reported password-creation to be
less difficult (FET: 22% vs. 33% found difficult) and also took less
time (MWU: median of 73 s vs. 92 s).
0%20%40%34567891011121314log min−auto guess numberCumulative % guessed1c8+NN61c16+NN62c12+NN63c8+NN63c12+NN6Overall, our results show that, for policies enforcing a particu-
lar minimum-strength requirement, more complex composition
requirements can lead to passwords that are more resistant to
guessing attacks, particularly for offline attack scenarios. While
our results show that requiring more character classes or longer
passwords both make passwords stronger, we found evidence that
increasing the length requirement could produce larger security
benefits than increasing character-class-count requirements, while
also having less of a negative impact on password-creation usability
(e.g., 1c8+NN6 vs. 3c8+NN6, compared to 3c8+NN6 vs. 3c12+NN6).
4.4 RQ4: Blocklists vs. min-strength policies
A high-level goal for both experiments was to compare 1c8 poli-
cies that incorporated a blocklist requirement to those that instead
incorporated a minimum-strength requirement. In Experiment 1,
we found that a 1c8+NN6 minimum-strength policy can pro-
vide similar protection against online attacks and similar us-
ability compared to the two best-performing blocklist poli-
cies we tested. In Experiment 2, we compared those two blocklist
policies to two additional minimum-strength policies, 1c8+NN8
and 1c8+NN10. Both 1c8+NN8 and 1c8+NN10 led to overall
stronger passwords than the blocklist policies, while main-
taining comparable usability.
4.4.1 RQ4.A. As shown in Figure 2, neither 1c8+Xato-cifs nor
1c8+Xato-ciss resulted in passwords comparable in strength to
those created under 1c8+NN6. Compared to 1c8+NN6 passwords,
1c8+Xato-cifs passwords were overall significantly weaker (PP).
1c8+Xato-ciss resulted in passwords that were significantly stronger
than those created under 1c8+NN6 (PP), but at the expense of the
severe usability issues described in Section 4.2.
Two blocklist policies provided comparable security to 1c8+NN6,
in terms of general guessability as well as resistance to online guess-
ing attacks: 1c8+Pwned-fs and 1c8+Xato-strip-cifs. We did not find
any statistically significant differences between either blocklist pol-
icy and 1c8+NN6 for any of the usability metrics we measured. Thus
these three policies appear to be suitable for preventing predictable
passwords that might be compromised in online attacks.
when compared to either of 1c8+Pwned-fs or 1c8+Xato-strip-cifs
passwords (PP). For attackers making 1014 guesses, 1c8+NN8 pass-
words would be guessed with similar success rates compared to
either 1c8+Pwned-fs or 1c8+Xato-strip-cifs passwords. In contrast,
1c8+NN10 passwords remained less likely to be guessed, even against
the number of guesses possible in offline attacks: 32% of 1c8+NN10
passwords would be guessed within 1014 attempts, compared to
40% of 1c8+Xato-strip-cifs passwords and 43% of 1c8+Pwned-fs pass-
words (FET). Across our usability measurements, we did not find
statistically significant differences between 1c8+NN8 or 1c8+NN10
and either blocklist policy, except when comparing 1c8+Pwned-fs
to 1c8+NN10: 1c8+Pwned-fs participants took less time to create
their password than 1c8+NN10 participants (MWU: median of 83 s
vs. 109 s) and were less likely to report password-creation as being
difficult (FET: 25% vs. 33% found difficult).
Condition
Peto-
Peto
percent
@ 106
percent
@ 1014
Creation
time
Creation
difficult
83 s
86 s
109 s
97 s
86 s
109 s
43%
40.2%
31.7%
40.1%
40.2%
31.7%
0.7%
0.8%
0.5%
2%
0.8%
0.5%
0.8%
0.8%
0%
0.3%
0%
0.5%
0.5%
0%
0.8%
25%
30%
33%
29%
30%
33%
32%
30%
32%
28%
32%
33%
33%
32%
30%
RQ4.B
1c8+Pwned-fs
1c8+NN8
1c8+NN10
1c8+Xato-strip-cifs
1c8+NN8
1c8+NN10
RQ5
1c10+NN8
1c8+NN8
1c10+NN10
1c12+NN10
1c10+NN10
1c8+NN10
1c8+NN10
1c10+NN10
1c8+NN8
Color key
Baseline for pairwise comparisons
Pairwise test statistically significant (better than baseline)
Pairwise test statistically significant (worse than baseline)
Pairwise test not stat. sig.
Table 3: RQ4.B and RQ5 strength/usability comparison. Pair-
wise comparisons for non-baseline policies are for the base-
line policy listed immediately above.
31%
40.2%
25.2%
19.8%
25.2%
31.7%
31.7%
25.2%
40.2%
89 s
86 s
92 s
95 s
92 s
109 s
109 s
92 s
86 s
p<.001
p<.001
p=.009
p<.001
p=.628
p=.002
p=.925
p=.752
p<.001
Omnibus test not stat. sig.
Figure 4: Min-auto guess numbers for Experiment 2 1c8 and
CMU policies.
4.4.2 RQ4.B. As shown in Figure 4, we found that both 1c8+NN8
and 1c8+NN10 policies produced passwords that were overall stronger
These results demonstrate the value of minimum-strength re-
quirements. While both blocklist and minimum-strength require-
ments can prevent users from picking common passwords that
attackers are likely to try first, minimum-strength requirements
can do so while also making passwords harder to guess for more
determined attackers (see top half of Table 3).
4.5 RQ5: Min-strength and min-length
requirement interactions
We tested additional minimum-strength policies with the goal of
identifying configurations with more positive password-creation
usability properties yet similarly strong offline attack protections
0%20%40%34567891011121314log min−auto guess numberCumulative % guessedCMU1c8+Pwned−fs1c8+Xato−strip−cifs1c8+NN81c8+NN101c10+NN81c10+NN101c12+NN10as minimum-strength policies we had tested in Experiment 1. We
focused our exploration of policies on those that only enforced
minimum-strength and minimum-length requirements, without
any character-class requirements. Our results ultimately show
that NN10 requirements can provide stronger protection ag-
ainst offline attacks than NN8 requirements without intro-
ducing substantial usability harm, and that combining NN10
requirements with a minimum length of 10 characters can
help users create passwords more quickly.
Unsurprisingly, increasing the minimum-strength requirement
while fixing the minimum password length was effective at in-
creasing overall password strength (PP: 1c8+NN8 vs. 1c8+NN10,
1c10+NN8 vs. 1c10+NN10). We find evidence that increasing a pol-
icy’s minimum-strength threshold from NN8 to NN10 also strength-
ened offline attack defenses, as shown in Figure 4. For example, 40%
of 1c8+NN8 passwords would be guessed in a 1014 attacks compared
to only 32% of 1c8+NN10 passwords, a difference which was statisti-
cally significant (FET). More interestingly, for the min-length-8 and
min-length-10 policies we explored, participants did not find pass-
words substantially more difficult or annoying to create regardless
of whether their policy included a NN8 or NN10 requirement. The
only statistically significant usability difference we found between
NN8 and NN10 policies was with respect to password-creation time:
1c8+NN8 passwords took slightly less time to create than 1c8+NN10
passwords (MWU: median of 86 s vs. 109 s).
We performed similar comparisons between minimum-strength
policies with the same required strength threshold but varying
minimum-length requirements. For policies enforcing the same
minimum-strength requirement, increasing the minimum-length
requirement tended to produce stronger passwords. As shown in
Figure 4, for policies containing NN8 or NN10 minimum-strength
requirements, passwords were less likely to be guessed in a 1014
offline attack if that policy imposed 1c10 rather than 1c8 require-
ments (FET). We did not find large differences in reported password-
creation annoyance or difficulty between NN8 and NN10 policies
depending on whether those policies required passwords to be at
least 10 or 12 characters. While we find some support for our initial
hypothesis that minimum-length requirements can make minimum-
strength requirements easier to satisfy, the improvements were
small (e.g., 1c10+NN10 passwords were created in 17 fewer sec-
onds than 1c8+NN10 passwords, on average). Interestingly, only
22% of participants assigned to the 1c12+NN10 policy reported
noticing a password they wanted to create being rejected by the
minimum-strength requirement, a significantly lower percentage
than we found for participants assigned to either 1c10+NN10 (FET:
30% noticed) or 1c8+NN10 (FET: 34% noticed). However, differences
in proportions of participants who noticed a minimum-strength
rejection did not translate to statistically significant differences
in reported password-creation annoyance or difficulty (Figure 11).
Table 3 (bottom half) summarizes these results.
Overall, we found little reason to prefer NN8 policies over the
stronger and similarly usable NN10 policies. Among NN10 poli-
cies, 1c12+NN10 appeared particularly attractive. Compared to
1c8+NN10 and 1c10+NN10, 1c12+NN10 led to participants encounter-
ing minimum-strength rejections less often and improved resistance
to offline guessing attacks.
4.6 RQ6: Blocklist and composition
requirement interactions
We compared 1c8+Xato-strip-cifs, 1c8+Pwned-fs, 4c8+Xato-strip-cifs,
and 4c8+Pwned-fs with each other in order to understand how
blocklist requirements interacted with character-class requirements.
Our results confirm that the choice of blocklist can impact usabil-
ity and security differently depending on whether it is included
in a 1c8 or 4c8 policy. While the choice of 1c8 or 4c8 compo-
sition requirements to combine with a given blocklist did
not significantly impact usability, we found evidence that
4c8 requirements could negatively impact security relative
to 1c8 requirements if combined with a very large blocklist
and full-string matching.
Figure 5: Blocklist/composition policy interaction effects.
1c8 and 4c8 curves are based on data collected from Experi-
ment 1 and are shown only for reference.
As in Experiment 1, passwords created under 1c8+Pwned-fs were
not statistically significantly different in their guess-number dis-
tribution than those created under 1c8+Xato-strip-cifs. However,
we did find usability differences: 1c8+Pwned-fs participants were
more likely to drop out of our study before creating their password
than 1c8+Xato-strip-cifs participants (FET: 16% vs. 11% dropped out)
and those who did not drop out took slightly longer to create their
passwords (MWU: median of 97 s vs. 83 s).
We performed similar comparisons between our 4c8+Pwned-fs
and 4c8+Xato-strip-cifs conditions. Unlike the case for 1c8 require-
ments, we found that 4c8+Pwned-fs passwords were overall weaker
than 4c8+Xato-strip-cifs passwords (PP). Although this only trans-
lated to substantially higher likelihood of passwords being guessed
for 1014 offline attacks (FET: 51% vs 42%) and not 106 online at-
tacks, Figure 5 suggests 4c8+Xato-strip-cifs also may be preferable
to 4c8+Pwned-fs for online attack scenarios. In terms of usabil-
ity, we found that—unlike for 1c8 policies—a higher proportion
of participants were annoyed by 4c8+Xato-strip-cifs compared to
4c8+Pwned-fs (FET: 41% vs 33% annoyed).
We found support for our hypothesis that blocklists of large
password leaks are more effective when combined with 1c8 re-
quirements than with 4c8 requirements. Passwords created under
4c8+Pwned-fs were statistically significantly weaker than 1c8+Pwned-
fs passwords, both overall (PP) and in terms of resistance to 106 (FET:
3.1% vs. 0.7% guessed) and 1014 guessing attacks (FET: 50.6% vs. 43%
0%20%40%34567891011121314log min−auto guess numberCumulative % guessed1c84c81c8+Xato−strip−cifs4c8+Xato−strip−cifs1c8+Pwned−fs4c8+Pwned−fsguessed). We found less support for our hypothesis that Xato-strip-
cifs makes password creation a more frustrating experience when
combined with 4c8 requirements than with 1c8 requirements.
5 DISCUSSION
5.1 Character-class requirements
Although prior work has repeatedly found that requiring more char-
acter classes decreases guessability [11, 16], researchers have shown
that character-class requirements lead to frustration and difficulty
for users [13, 23, 31]. Since other requirements, e.g., minimum-
length or blocklist requirements, can strengthen passwords with
less negative impact on usability research has advocated retiring
character-class requirements [7, 26]. These recommendations have
been standardized in recent NIST password-policy guidance [19].
Our experimental results provide the first concrete evidence
that character-class requirements should be avoided not only be-
cause users tend to find them annoying, but also because they don’t
provide substantial benefit against attackers using state-of-the-art
password-cracking tools: an expert attacker can guess 1c8, 3c8,
and 4c8 passwords with equal success rates.7 Experiment 2 also
suggests that character-class requirements should be avoided for
password-creation policies that include a blocklist or minimum-
strength requirement. We find evidence that policies requiring all
four character classes and a large blocklist check produce pass-
words that are, at best, as strong as passwords created under a
policy that performed the same blocklist check without character-
class requirements. Although Experiment 2 does show that a policy
requiring more character classes does tend to produce stronger
passwords under a minimum-strength requirement, it also shows
that this strength improvement is much lower than the improve-
ment that results from increasing either length requirements or
minimum-strength threshold requirements.
Our new findings on character-class requirements seem to be
caused by two factors. First, users tend to create passwords that are