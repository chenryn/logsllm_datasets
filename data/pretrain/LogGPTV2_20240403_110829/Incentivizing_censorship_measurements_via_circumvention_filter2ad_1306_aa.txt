title:Incentivizing censorship measurements via circumvention
author:Aqib Nisar and
Aqsa Kashaf and
Ihsan Ayyub Qazi and
Zartash Afzal Uzmi
Incentivizing Censorship Measurements via
Circumvention
Aqib Nisar, Aqsa Kashaf, Ihsan Ayyub Qazi, Zartash Afzal Uzmi∗
LUMS, Pakistan
ABSTRACT
We present C-Saw, a system that measures Internet censor-
ship by offering data-driven censorship circumvention to
users. The adaptive circumvention capability of C-Saw in-
centivizes users to opt-in by offering small page load times
(PLTs). As users crowdsource, the measurement data gets
richer, offering greater insights into censorship mechanisms
over a wider region, and in turn leading to even better cir-
cumvention capabilities. C-Saw incorporates user consent in
its design by measuring only those URLs that a user actually
visits. Using a cross-platform implementation of C-Saw, we
show that it is effective at collecting and disseminating cen-
sorship measurements, selecting circumvention approaches,
and optimizing user experience. C-Saw improves the average
PLT by up to 48% and 63% over Lantern and Tor, respectively.
We demonstrate the feasibility of a large-scale deployment
of C-Saw with a pilot study.
CCS CONCEPTS
• Social and professional topics → Censorship; Network
access control; • Security and privacy → Human and soci-
etal aspects of security and privacy; • Networks → Network
measurement;
ACM Reference Format:
Aqib Nisar, Aqsa Kashaf, Ihsan Ayyub Qazi, Zartash Afzal Uzmi.
2018. Incentivizing Censorship Measurements via Circumvention.
In SIGCOMM ’18: SIGCOMM 2018, August 20–25, 2018, Budapest,
Hungary. ACM, New York, NY, USA, 14 pages. https://doi.org/10.
1145/3230543.3230568
∗Aqsa Kashaf is currently with CMU and Aqib Nisar with USC.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies
are not made or distributed for profit or commercial advantage and that
copies bear this notice and the full citation on the first page. Copyrights
for components of this work owned by others than the author(s) must
be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific
permission and/or a fee. Request permissions from permissions@acm.org.
SIGCOMM ’18, August 20–25, 2018, Budapest, Hungary
© 2018 Copyright held by the owner/author(s). Publication rights licensed
to ACM.
ACM ISBN 978-1-4503-5567-4/18/08...$15.00
https://doi.org/10.1145/3230543.3230568
1 INTRODUCTION
Internet censorship has become increasingly pervasive with
nearly 70 countries restricting Internet access to their citi-
zens [38]. It can have a substantial impact on various stake-
holders in the Internet ecosystem (e.g., users, content providers,
and ISPs) [43] and thus, has drawn considerable interest from
systems researchers towards building censorship measure-
ment systems [26, 27, 37, 48–50]—that aim to ascertain what
is blocked, where it is blocked, how it is blocked, and when
it is blocked?—as well as circumvention systems that aim to
bypass censorship [10, 19, 20, 29, 35].
Unfortunately, existing censorship measurement and cir-
cumvention systems are designed independently, which re-
sults in their individual designs to have limited capabili-
ties. For example, building an effective circumvention sys-
tem requires understanding the capabilities of censors (e.g.,
what is blocked and how?), which continually evolve over
time [52]. However, existing circumvention systems (e.g.,
Tor [29], Lantern [10], and uProxy [19]) are not driven by
such measurements and thus cannot adapt to the deployed
blocking mechanism used by censors. This leads to one-size-
fits-all solutions that are either ineffective (e.g., against some
type of blocking) or inefficient, leading to high page load
times (PLTs)1 and thus degrading user experience [22, 24].
On the other hand, an effective censorship measurement
system requires deployment of geographically distributed
probe points—possibly volunteers—who find little to no in-
centive, beyond altruism, to help collect continuous measure-
ments [37, 50].
In this paper, we call for consolidating censorship measure-
ments and circumvention in a single platform to address the
limitations of individual systems. To this end, we propose
C-Saw, a system that gathers continuous censorship mea-
surements through crowdsourcing and uses these measure-
ments to offer data-driven circumvention by being adaptive
to the type of blocking, leading to improved circumvention
performance. This, in turn, incentivizes users to opt-in and
contribute measurements. As more users crowdsource, the
measurement data gets richer, enabling C-Saw to build a
comprehensive database of blocked URLs along with the
blocking mechanisms used by censoring ISPs. This allows
C-Saw to offer even better circumvention capabilities for
1Akhoondi et al. [22] reported that Tor can increase latency by more than
5× compared to the direct path.
533
SIGCOMM ’18, August 20–25, 2018, Budapest, Hungary
Aqib Nisar, Aqsa Kashaf, Ihsan Ayyub Qazi, Zartash Afzal Uzmi
improving user experience and also opens up the possibility
of crafting new circumvention techniques.
The design of C-Saw offers three key benefits: First, un-
like existing measurement systems (e.g., [37, 50]), it provides
incentives for users to opt-in by offering fast access to fil-
tered content, which can facilitate large-scale deployment.
Second, censorship measurement platforms (e.g., [26, 37, 58])
rely on target lists of URLs to test for censorship. However,
relying on such lists can limit the scope of measurements
because (i) URLs outside the list cannot be tested and (b)
such lists are often inaccurate or only partially known [58].
C-Saw obviates the need for having target lists of URLs to
test for censorship. Third, it enables ethical measurements
by making it easy to obtain informed user consent [18, 30].
C-Saw achieves this property by measuring censorship for
only those URLs that a user actually visits.
The C-Saw system comprises a local database for storing
the blocking status of URLs that a user visits, a global data-
base for storing crowdsourced measurements of censored
URLs from all C-Saw users, and a client-side proxy that uses
these measurements to provide adaptive circumvention via
one or more methods (e.g., Tor and Domain Fronting [36]).
To facilitate real-time detection of content manipulation
(e.g., substituting content or replacing a webpage with a block
page, informing the user that the desired page cannot be
accessed) by censors, C-Saw proxy issues redundant requests
for URLs—one via the direct path and the others using one
or more circumvention paths—and compares the received
responses using a two-phase algorithm that achieves both
fast detection as well as high accuracy. This also makes it
easier for C-Saw to distinguish censorship from network
problems (e.g., high delay or packet loss) without hurting
user performance.
In designing C-Saw, we address several practical chal-
lenges. First, to limit the memory footprint of the database
on client machines, we propose a URL aggregation scheme
that uses the structure of URLs, their blocking status, and the
blocking type to aggregate URLs. Second, clients on multi-
homed networks can experience degraded performance. We
propose a mechanism that addresses this challenge by detect-
ing multihoming and adapting the circumvention approach.
Finally, to limit the impact of malicious clients on crowd-
sourced measurements, we present a simple voting mecha-
nism and allow validation of URLs by individual clients.
Despite the benefits that C-Saw offers, combining censor-
ship measurements and circumvention in a single platform
brings about its own challenges with respect to security and
user privacy. First, users who contribute censorship measure-
ments may be identified by a censor, which may endanger
users in repressive countries. To address this challenge, we
anonymize users by carrying censorship reports over the
Tor network and do not store any Personally Identifiable
Information (PII) (e.g., IP addresses) that could lead back to
the user. Second, users circumventing censorship may ex-
pose themselves to risks, especially in repressive regimes. To
manage the potential risks, C-Saw allows consenting users to
stay anonymous by using only those circumvention methods
that provide anonymity.
We implement C-Saw, with all its features, using GitHub’s
electron framework [4] and carry out its evaluation in com-
parison with other circumvention systems. Our evaluation
shows that C-Saw reduces the average PLT by up to 48%
and 68% over Lantern and Tor, respectively. We carried out a
real-world deployment of C-Saw and conducted a pilot study
comprising 123 users. The collected measurements reveal
blocking of CDN servers, which was not observed in earlier
studies of censorship in Pakistan [43, 44]. We also found
that for the majority of censored domains, a block page was
returned. The second most common type of mechanism was
DNS blocking. Finally, we show how C-Saw was able to ef-
fectively measure the recent blocking of Internet services,
including Twitter and Instagram, from November 25-28, 2017
across different ASes in Pakistan.
Tradeoffs. The scope and extent of measurements col-
lected by C-Saw depends on the population of C-Saw users.
As a result, C-Saw may find it difficult to (a) measure unpopu-
lar websites and (b) measure censorship at timescales of par-
ticular interest to some stakeholders. These challenges can
be addressed by allowing testing of specific target URLs [26].
However, in designing C-Saw, we take an explicit stance
to work within a design space that makes it easy to obtain
informed user consent without reducing the effectiveness of
the system to measure censorship at scale [30]. We consider
this to be an acceptable tradeoff.
Our work makes the following contributions2:
• We present a case study of distributed censorship that
highlights opportunities for improving circumvention
performance through censorship measurements (§2.3).
• We design (§3 and §4), implement (§6), and evaluate
(§7) C-Saw, a system that combines censorship mea-
surements and circumvention in a single platform.
• We conduct a pilot study, which shows that C-Saw can
effectively measure the blocking mechanisms used by
censors in the deployment region (§7.4).
2 BACKGROUND AND MOTIVATION
Internet censorship is enforced using a centralized or a dis-
tributed infrastructure. In the former case, all censored traffic
2An early workshop version of the paper made the case for C-Saw [45]. How-
ever, it did not provide a concrete system design, a practical implementation,
evaluation, and a real-world deployment.
534
Incentivizing Censorship Measurements via Circumvention
SIGCOMM ’18, August 20–25, 2018, Budapest, Hungary
of the same type sees the same kind of blocking. For exam-
ple, Iran and South Korea have been shown to exercise cen-
tralized censorship. In decentralized censorship, individual
ISPs deploy filtering techniques independently and as a re-
sult, may block the same type of content differently. Several
countries exercise distributed censorship including China,
Vietnam, and UAE [15, 38].
2.1 Web Censorship Techniques
A censor has a variety of choices to carry out web filtering
by intercepting a user request at various levels of the proto-
col stack. We now discuss some of the common censorship
techniques employed by censors.
Web censorship can take place when a client performs an
initial DNS lookup. At this point, a censor can manipulate
DNS responses that will leave the client either without a
resolution or a resolution that is not correct. A list of various
DNS tampering techniques can be found in the literature [15,
20, 43, 45].
A censor may also perform IP Blocking in which the IP
address in a packet is compared against a blacklist. On find-
ing a match, a censor either drops the packet or resets the
connection [20].
When the client attempts to establish a HTTP connection,
the censor can intercept the HTTP GET request and match
the resource path and ‘Host’ field in the header against a
blacklist of URLs and keywords. In case of a match, the censor
can reset the TCP connection, drop the HTTP request, or
redirect the client to a block page.
Requests to many services (e.g., Facebook) are generally
through secure Transport Layer Security (TLS) protocol con-
nections. While such connections are encrypted, censors
may still monitor certain fields that are sent in plaintext. For
example, censors often detect and block on the Server Name
Indication (SNI) field in the TLS handshake header [32].
We refer the reader to [20] for a detailed survey of blocking
techniques used by the censors.
2.2 Circumvention Approaches
A client can circumvent censorship in a variety of ways
[10, 19, 29, 35]. Following are some popular circumvention
techniques and tools.
Public DNS Servers. To bypass certain types of DNS
blocking (e.g., DNS hijacking), clients can use public DNS
servers. In case of DNS injection, where a censor intercepts
DNS responses and fakes the resource records, approaches
like Hold-On can be used [31].
Domain Fronting (DF). In case of HTTP/TLS blocking,
clients can use DF (if supported by the destination server),
a technique for hiding the endpoint of a connection while
communicating with censored hosts [36]. In a normal client-
server interaction, the destination server name appears within
the DNS query (plaintext), the TLS SNI extension (plaintext),
and the HTTP Host header (encrypted). With DF, the DNS
query and SNI carry the name of a front-end server (which
is not blocked by the censor), while the HTTP Host header
(which is encrypted and thus hidden from the censor), car-
ries the name of the intended backend server (the blocked
destination). For example, google.com acts as a front-end
server for the youtube.com backend destination.
Virtual Private Networks (VPNs). Many users in cen-
sored regions use VPNs to connect to proxy servers out-
side the censored region to access content. They are usually
blocked via ports, IP addresses, or deep packet inspection.
Tor. While Tor was initially designed as an anonymity
tool but in recent years, it has also become a popular cir-
cumvention tool. Tor is usually able to circumvent almost all
kinds of blocking but fails in regions that block addresses of
Tor bridges [33, 59].
Lantern and uProxy. Lantern [10] uses a network of
HTTPS proxy servers and a client software that allows users
to discover and use these servers to bypass censorship. Unlike
Tor, Lantern does not provide anonymity and focuses more
on performance and availability. uProxy [19] also leverages
trust relationships but runs as a browser extension.
2.3 A Censorship Case Study
To quantify opportunities for improving circumvention per-
formance through censorship measurements, we conduct a