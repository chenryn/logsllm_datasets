requirement in standards like ZigBee will encourage them
to add hardware support for asymmetric cryptography. IoT
devices are becoming more and more common and affect
larger parts of our life. We can learn from history about the
importance of good design practices for security protocols
and how to implement them. We should work together to
use the knowledge we gained to protect IoT devices or we
might face in the near future large scale attacks that will
affect every part of our lives.
209
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:22:14 UTC from IEEE Xplore.  Restrictions apply. 
Figure 12. Correct values of the correlation analysis attack for byte 1 (in
blue) and byte 2 (in red) compared to all incorrect guesses (in light cyan
and green) show both the positive and negative peak we can exploit.
Appendix
ATMega2564RFR2 Leakage
The ATMega2564RFR2 was assumed to have a leaky
hardware AES engine, as previous work has demonstrated
such leakage on the similar ATMega128RFA1 and the Atmel
XMEGA devices [11], [12]. We characterized the leakage of
the AES-ECB peripheral in the ATMega2564RFR2 device
in order to determine the approximate number of traces
required with our test setup. In this setup the device was
running at 4 MHz3.
This characterization phase was also required as part
of the black-box attack, since we were unsure the exact
encryption mode in use, or where such encryptions occurred
in the bootloader. The ATMega2564RFR2 device has a
unique signature during hardware AES encryptions – we
could correlate the known signature with the unknown traces
to detect this, but in practice it was even visually obvious
(as in Figure 8).
For attacking the AES-ECB mode, a ﬁrst-order CPA
attack was used with the leakage model from [11], [12].
Figure 12 shows the correlation peaks we measured for 2
of the 16 bytes; they have both a positive and negative
component, so we combined these peaks to improve the
attack efﬁciency. In addition windowing is required, as a
larger (incorrect) peak occurs a few hundred cycles before
the correct peak, similar to what is reported in [12].
In practice the window can easily be applied, as from
the power signature it is trivial to determine where the
AES hardware operation is occuring. Thus with almost no
experimentation we can take the window offsets determined
3. The device normally runs at 16 MHz. We used a slower speed as the
SPI ﬂash would not reliably work with the long leads of the bus pirate
connected, but clocking the device at 1/4 frequency proved more reliable
with the programmer attached.
210
Figure 13. PGE of ATMega2564RFR2 Hardware AES Peripheral – a PGE
of 0 indicates that encryption key byte is fully recovered.
from the reference platform (where we control the code and
encryption key), and apply them to a CPA attack on the
‘black-box’ device.
To determine the number of traces we need to capture,
we’ve performed 50K AES-ECB encryptions on our refer-
ence platform (which is the same as Figure 5 but with our
own ﬁrmware loaded where we control the key). To measure
the attack success, we are using the partial guessing entropy
(PGE) which indicates how many (incorrect) guesses would
be required for each key byte based on the information
available after processing N traces [36]. A PGE of 0 means
that byte of the encryption key was fully recovered. These
results are shown in Figure 13, where we have plotted the
PGE for N = 20, 40, 60,··· , 1000.
Note that byte 0 is the most difﬁcult to recover —
its PGE falls to zero after about 2000 traces, while the
other 15 bytes are recovered with only about 800 traces.
As previously proposed if an insufﬁcient number of power
traces exist it is instead possible to perform a CPA attack on
bytes 1 – 15, and use a brute-force check to recover byte 0
[11], [12]. As we had no limit on the number of traces that
could be acquired, we simply acquired around 5000 traces
for each block of interest. This made it very likely we could
recover the true key without having to enumerate any ‘most
likely’ options.
With this setup we are able to attack AES-ECB using
a CPA attack, and reliably recover the encryption key. As
in previous work this can be done on later rounds, which
can also be used for testing if the correct ﬁrst-round key
was recovered when there is no access to the output of the
AES-ECB block
For power analysis of the actual bootloader, we needed
many power traces where the bootloader is decrypting the
same block, but that block takes on random input values.
To accomplish this, a low-cost SPI programmer quickly re-
writes the SPI ﬂash chip, and the ATMega2564RFR2 reset
pin is toggled. This causes the bootloader to attempt loading
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:22:14 UTC from IEEE Xplore.  Restrictions apply. 
of the binary – loading which will fail after the bootloader
realizes the signature is invalid, but by this state has already
performed the required operations for power analysis to
succeed.
Acknowledgments
[12] C. O’Flynn and Z. Chen, “Power Analysis Attacks against IEEE
802.15. 4 Nodes,” COSADE, 2016.
[13] J. Jaffe, “A ﬁrst-order dpa attack against aes in counter mode with un-
known initial counter,” in International Workshop on Cryptographic
Hardware and Embedded Systems. Springer, 2007, pp. 1–13.
[14] Zigbee light link. [Online]. Available: http://www.zigbee.org/zigbee-
for-developers/applicationstandards/zigbee-light-link/
The authors would like to thank our colleagues from
Ben Gurion University: Yossi Oren and Omer Shvartz for
their help with our initial power measurements, and Prof.
Yuval Elovici and Sergey Kosyagin for their help with the
drone attack demonstration. They would also like to thank
Zhizhang Chen of Dalhousie University for his extensive
comments and suggestions.
We would also like to thank Dvir Shirman for his helpful
insights about DPA and Ziv Menahem for a lot of hard and
delicate solder work.
Finally, we would like to thank the referees for their
very valuable and constructive suggestions which greatly
improved the paper.
References
[1] B.
Krebs,
“Hacked
days Massive
line].
cameras-dvrs-powered-todays-massive-internet-outage/
To-
[On-
https://krebsonsecurity.com/2016/10/hacked-
Cameras,
Outage,”
DVRs
October
Powered
2016.
Available:
Internet
[2] A. Chapman.
connected light
bulbs. [Online]. Available: http://www.contextis.com/resources/blog/
hacking-internet-connected-light-bulbs/
(2014) Hacking into internet
[3] N. Dhanjani.
(2013) Hacking
hue
eval-
the
light-
[Online]. Available: http://www.dhanjani.com/docs/
lightbulbs:
personal
Security
wireless
uation
of
ing system.
HackingLighbulbsHueDhanjani2013.pdf
philips
[4] E. Ronen and A. Shamir, “Extended functionality attacks on iot de-
vices: The case of smart lights,” in 2016 IEEE European Symposium
on Security and Privacy (EuroS&P).
IEEE, 2016, pp. 3–12.
[5] D.Heiland.
(2016)
R7-2016-10: Multiple
vulnerabilities.
osram sylvania
Available:
lightify
[Online].
osram
https://community.rapid7.com/community/infosec/blog/2016/07/26/
r7-2016-10-multiple-osram-sylvania-osram-lightify-vulnerabilities-
cve-2016-5051-through-5059
F. Armknecht, Z. Benenson, P. Morgner, and C. M¨uller, “On the
Security of the ZigBee Light Link Touchlink Commissioning Proce-
dure.” [Online]. Available: https://www1.informatik.uni-erlangen.de/
ﬁlepool/publications/zina/ZLLsec-SmartBuildingSec16.pdf
[6]
[7] T. Zillner,
ugly,”
-
the
good,
exploited
“Zigbee
in Black Hat USA,
and
the
[Online]. Avail-
able: https://www.blackhat.com/docs/us-15/materials/us-15-Zillner-
ZigBee-Exploited-The-Good-The-Bad-And-The-Ugly-wp.pdf
P. Morgner, S. Mattejat, and Z. Benenson, “All Your Bulbs Are
Belong to Us: Investigating the Current State of Security in Connected
Lighting Systems,” arXiv preprint arXiv:1608.03732, 2016.
2015.
bad
the
[8]
[9] C. OFlynn,
“A lightbulb worm?”
[Online]. Avail-
able: https://www.blackhat.com/docs/us-16/materials/us-16-OFlynn-
A-Lightbulb-Worm-wp.pdf
2016.
[10] L. Carettoni, C. Merloni, and S. Zanero, “Studying bluetooth malware
propagation: The bluebag project,” IEEE Security & Privacy, vol. 5,
no. 2, 2007.
[11] I. Kizhvatov, “Side channel analysis of AVR XMEGA crypto engine,”
in Proceedings of the 4th Workshop on Embedded Systems Security.
ACM, 2009, p. 8.
211
[15] Wikipedia,
“Percolation
threshold — Wikipedia,
encyclopedia,” 2016,
Available: https://en.wikipedia.org/wiki/Percolation threshold
[Online; accessed 30-Oct-2016].
the
free
[Online].
[16] ——, “Paris — Wikipedia, the free encyclopedia,” 2016, [Online;
accessed 30-Oct-2016]. [Online]. Available: https://en.wikipedia.org/
wiki/Paris
[17] (2012) Zigbee light link standard version 1.0 - zigbee document 11-
0037-10.
[18] Philips,
“Philips,
Report,”
www.philips.com/corporate/resources/annualresults/2015/
PhilipsFullAnnualReport2015 English.pdf, 2016.
Annual
2015
http://
[19] (2014) Zigbee over-the-air upgrading cluster version 1.1 - zigbee
document 095264r23.
[20] J. Wright, “Killerbee: practical zigbee exploitation framework,” in
11th ToorCon conference, San Diego, 2009.
[21] T. Goodspeed, S. Bratus, R. Melgares, R. Speers, and S. W. Smith,
“Api-do: Tools for exploring the wireless attack surface in smart
meters,” in System Science (HICSS), 2012 45th Hawaii International
Conference on.
IEEE, 2012, pp. 2133–2140.
[22] C. OFlynn and Z. D. Chen, “Chipwhisperer: An open-source platform
for hardware embedded security research,” in International Workshop
on Constructive Side-Channel Analysis and Secure Design. Springer,
2014, pp. 243–260.
[23] Atmel. Atmel AVR2058: BitCloud OTAU User Guide.
[24] T. Instruments. Crypto-Bootloader (CryptoBSL) for MSP430FR59xx
and MSP430FR69xx MCUs.
[25] D. Whiting, R. Housley,
“Counter with
CBC-MAC (CCM),” RFC 3610, Oct. 2015. [Online]. Available:
https://rfc-editor.org/rfc/rfc3610.txt
and N. Ferguson,
[26] R. Housley, “Using Advanced Encryption Standard (AES) CCM
Mode with IPsec Encapsulating Security Payload (ESP),” RFC 4309
(Proposed Standard), Internet Engineering Task Force, Dec. 2005.
[Online]. Available: http://www.ietf.org/rfc/rfc4309.txt
[27] D. McGrew and D. Bailey,
for
Transport Layer Security (TLS),” RFC 6655 (Proposed Standard),
Internet Engineering Task Force, Jul. 2012. [Online]. Available:
http://www.ietf.org/rfc/rfc6655.txt
“AES-CCM Cipher Suites
[28] “IEEE Standard for Information technology– Local and metropolitan
area networks– Speciﬁc requirements– Part 15.4: Wireless Medium
Access Control (MAC) and Physical Layer (PHY) Speciﬁcations for
Low Rate Wireless Personal Area Networks (WPANs),” pp. 1–320,
Sept 2006.
[29] P. Kocher, J. Jaffe, and B. Jun, “Differential power analysis,” in
Advances in Cryptology – CRYPTO 99. Springer-Verlag, 1999, pp.
388–397.
[30] E. Brier, C. Clavier, and F. Olivier, “Correlation power analysis with a
leakage model,” in Cryptographic Hardware and Embedded Systems
– CHES 04. Springer-Verlag, 2004, pp. 135–152.
[31] N. Hanley, M. Tunstall, and W. P. Marnane, Unknown Plaintext
Template Attacks. Berlin, Heidelberg: Springer Berlin Heidelberg,
2009, pp. 148–162. [Online]. Available: http://dx.doi.org/10.1007/
978-3-642-10838-9 12
[32] (2012) Zigbee speciﬁcation- zigbee document 053474r20.
[33] S. Rohde, T. Eisenbarth, E. Dahmen, J. Buchmann, and C. Paar,
“Efﬁcient hash-based signatures on embedded devices,” SECSI-Secure
Component and System Identiﬁcation, Berlin, Germany, 2008.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:22:14 UTC from IEEE Xplore.  Restrictions apply. 
[34] C. O’Flynn, “Message denial and alteration on ieee 802.15. 4 low-
power radio networks,” in New Technologies, Mobility and Security
(NTMS), 2011 4th IFIP International Conference on.
IEEE, 2011,
pp. 1–5.
[35] A. Wilkins, J. Veitch, and B. Lehman, “Led lighting ﬂicker and
potential health concerns: Ieee standard par1789 update,” in 2010
IEEE Energy Conversion Congress and Exposition, Sept 2010, pp.
171–178.
[36] J. Massey, “Guessing and entropy,” in Proceedings of IEEE Interna-
tional Symposium on Information Theory (ISIT ’94), 1994, p. 204.
212
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:22:14 UTC from IEEE Xplore.  Restrictions apply.