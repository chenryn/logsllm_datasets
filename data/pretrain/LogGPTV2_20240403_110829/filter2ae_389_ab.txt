    options:
    clamd.conf freshclam.conf clamav-milter.conf
    root@ubuntu:~# clamconf --generate-config=clamd.conf
**当然你也可以选择向导性设置文件，指令如下，会出现选择配置界面，会配置很多模块如扫描线程、文件大小等等，我选择使用了默认：**
    dpkg-reconfigure clamav-daemo
**这时候你重启服务，稍等一下可看到监听端口** ：
    /etc/init.d/clamav-daemo restart
    netstat -an | grep clam
    netstat -tlunp | grep 3310
**下面你可以利用pycharm或者其他IDE，安装pyclamd库即可，后面通过端口3310调用扫描等操作：**
    pip install pyclamd
**➃cuckoo杜鹃沙箱，安装过程相对复杂，以前搭建的时候，也是花了几天时间去阅读官方配置与文档，这次部署的版本Version
2.0.6（最新2.0.7）。**
**下面安装部署过程中，会把以前遇到的错误，解决方案一起整理如下：**
**官方提供了相对详细的文档配置，包括安装过程中会出现的问题。有些棘手的问题可以在github上提问，如果以前没接触过，我强烈建议好好阅读官方文档，对整个项目有梳理梳理，这将对你帮助很大。**
    Cuckoo部署两个节点：1. Guest  2. Host ，Ubuntu上部署Host， 虚拟机上部署guest
    Guest支持4大类，可以是windows/linux/android/OS X，基本支持所有的文件类型分析
    Host负责管理沙箱机制，Guest负责执行不同类型的恶意软件。Guest沙箱本质在一个虚拟的操作系统中模拟过程，监控病毒执行流程，梳理、取证、分析、决策，Guest反馈最后的结果给Host，可以通过API或Web页面查看最终的执行结果
**Host安装步骤（官网有依赖性缺陷）：**
**解决virtualBox报错所依赖的环境：**
    apt-get install libopus0 libqt5core5a libqt5gui5 libqt5opengl5 libqt5printsupport5 libvpx5 libxcursor1 libxcursor1 libxmu6 libxt6 libqt5x11extras5
**安装virtualBox :**
    dpkg -i virtualbox-6.0_6.0.8-130520~Ubuntu~bionic_amd64.deb
**安装依赖库 ：**
    apt-get install tcpdump apparmor-utils aa-disable /usr/sbin/tcpdump apt-get install tcpdump groupadd pcap apt-get install libcap2-bin apt-get install swig
**解决m2cryp依赖环境 否则安装签名CR3会报错解析错误（第二次未成功)，多次尝试即可，网络下载会超时：**
    apt-get install python-dev python-pip libxml2-dev libxslt1-dev zlib1g-dev libffi-dev libssl-dev pip3尝试安装  pip install m2crypto==0.24.0
**创建cuckoo账户 ：**
    sudo adduser cuckoo 
    usermod -a -G vboxusers cuckoo
    usermod -a -G libvirtd cuckoo
**Downloader Cuckoo:**
    pip install -U pip setuptools 
    apt install --no-install-recommends python2.7-minimal python2.7 
    apt install python-numpy python-scipy
**官方建议在virtualenv环境下运行：一个独立的Python环境下运行：**
    $ . venv/bin/activate (venv)
    $ pip install -U pip setuptools (venv)
    $ pip install -U cuckoo
**解决报错Pillow问题：**
    你需要官方下载Pillow-master.tar的包
    apt-get install libtiff5-dev libjpeg8-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev libharfbuzz-dev libfribidi-dev tcl8.6-dev tk8.6-dev python-tk 
    cd Pillow-master/ 
    python setup.py install
**安装Cuckoo，安装过程中如果你遇到了以上问题，请参考上述解决方案：**
    $ pip download cuckoo 
    $ pip install Cuckoo-2.0.0.tar.gz 
    $ pip install *.tar.gz
    安装更多cuckoo支持 ：cuckoo --cwd /opt/cuckoo community
**接下来你需要设置cukoo的工作目录与环境变量：**
    $ sudo mkdir /opt/cuckoo
    $ sudo chown cuckoo:cuckoo /opt/cuckoo
    $ cuckoo --cwd /opt/cuckoo
    # You could place this line in your .bashrc, for example.
    $ export CUCKOO=/opt/cuckoo
    $ cuckoo  --启动杜鹃 如果你只做了以上的步骤，你一定会报错，可以先运行试一试看看错误
**这时候基本的环境安装好了，过程也许你还要克服很多困难，希望你能多查阅官方文档与百度谷歌，解决这些部署问题。**  
**然而对于cuckoo运行，你才完成了一半，你可以先尝试一下运行，看一看会报什么样的错误：**
**进入一个独立的虚拟环境，官方推荐的方式去做：**
    root@ubuntu:~# . venv/bin/activate 
    (venv) root@ubuntu:~#
    $ sudo mkdir /opt/cuckoo
    $ sudo chown cuckoo:cuckoo /opt/cuckoo
    $ cuckoo --cwd /opt/cuckoo
    # You could place this line in your .bashrc, for example.
    $ export CUCKOO=/opt/cuckoo
    $ cuckoo  --启动杜鹃 如果你只做了以上的步骤，你一定会报错，可以先运行试一试看看错误
**你应该先会看到这样的界面，这将是一个很不错的开始：**
**接下来，你又会发现报错信息如下：**
    [cuckoo] CRITICAL: CuckooCriticalError: Unable to bind ResultServer on 192.168.56.1:2042 [Errno 99] Cannot assign requested address. This usually happens when you start Cuckoo without bringing up the virtual interface associated with the ResultServer IP address. Please refer to https://cuckoo.sh/docs/faq/#troubles-problem for more information.
**原因是你没创建虚拟机也就是Guest，也没创建主机与宿主机之间的端口，虚拟网卡，如何去做呢？你可以参照以下解决方案：**
    virtualbox    virtualboxvm
    前面你已经安装过virtualbox虚拟机，当然vm也是一样的，但这里我使用官方推荐的虚拟机。
    你需要图形化界面启动virtualbox，安装一个win7的镜像，创建的win7名字叫做cuckoo1，可以后面自己配置，都是一样的，创建虚拟网卡，这很重要。
**VirtualBoxManag管理命令这里只提供网络相关：**
    下载VBoxManage包，安装执行以下指令：
    VBoxManage extpack install ./Oracle_VM_VirtualBox_Extension_Pack-6.0.8.vbox-extpack
**解决问题： CuckooCriticalError: Unable to bind result server on
192.168.56.1:2042: [Errno 99] Cannot assign requested address**
    If the hostonly interface vboxnet0 does not exist already.
    $ VBoxManage hostonlyif create
    Configure vboxnet0.
    $ VBoxManage hostonlyif ipconfig vboxnet0 --ip 192.168.56.1 --netmask 255.255.255.0
**你还需要打开wind7的Guest主机，设置静态ip，wind7的虚拟机请设置成Host模式，仅主机模式！这个也很重要，然后在win7里面安装Python2.7的环境基本设置完成。**
**假设win7 ip 设置为
192.168.56.101（随便），后面我们需要在cuckoo提供的配置文件中配置即可。Host可以ping通虚拟网卡，Guest也可以ping通虚拟网卡，理想的效果是这个样子的，如下所示：**
**你需要配置cuckoo提供的配置文件，但是大多都是默认设置好的，也许你需要做一些其他的操作：**
    root@ubuntu:/opt/cuckoo/conf# pwd
    /opt/cuckoo/conf
    root@ubuntu:/opt/cuckoo/conf# ls
    auxiliary.conf  cuckoo.conf  kvm.conf     physical.conf    qemu.conf       routing.conf     vmware.conf   xenserver.conf
    avd.conf        esx.conf     memory.conf  processing.conf  reporting.conf  virtualbox.conf  vsphere.conf
    你会发现很多配置文件，详细配置我建议你去官方认真阅读以下，因为大多数配置不太难，相对目前阶段你需要配置auxiliary.conf  cuckoo.conf virtualbox.conf，你需要看看文件里面配置都什么含义：
**auxiliary.conf:**
    [sniffer]
    # Enable or disable the use of an external sniffer (tcpdump) [yes/no].
    enabled = yes
    # Specify the path to your local installation of tcpdump. Make sure this
    # path is correct.
    tcpdump = /usr/sbin/tcpdump  --路径要对
    这个默认开启就好
    [mitm]
    # Enable man in the middle proxying (mitmdump) [yes/no].
    enabled = no
    [services]
    # Provide extra services accessible through the network of the analysis VM
    # provided in separate, standalone, Virtual Machines [yes/no].
    enabled = no
    这两项看个人，我选择了默认
**cuckoo.conf :**
    [cuckoo]
    # Enable or disable startup version check. When enabled, Cuckoo will connect
    # to a remote location to verify whether the running version is the latest
    # one available.
    version_check = yes  --这个可以关掉，当然不建议
    # If turned on, Cuckoo will delete the original file after its analysis
    # has been completed.
    delete_original = no
    # If turned on, Cuckoo will delete the copy of the original file in the
    # local binaries repository after the analysis has finished. (On *nix this
    # will also invalidate the file called "binary" in each analysis directory,
    # as this is a symlink.)
    delete_bin_copy = no
    # Specify the name of the machinery module to use, this module will
    # define the interaction between Cuckoo and your virtualization software
    # of choice.
    machinery = virtualbox  --虚拟机
    # Enable creation of memory dump of the analysis machine before shutting
    # down. Even if turned off, this functionality can also be enabled at
    # submission. Currently available for: VirtualBox and libvirt modules (KVM).
    memory_dump = no
    # When the timeout of an analysis is hit, the VM is just killed by default.
    # For some long-running setups it might be interesting to terminate the
    # monitored processes before killing the VM so that connections are closed.
    terminate_processes = no
    [resultserver]
    # The Result Server is used to receive in real time the behavioral logs
    # produced by the analyzer.
    # Specify the IP address of the host. The analysis machines should be able
    # to contact the host through such address, so make sure it's valid.
    # NOTE: if you set resultserver IP to 0.0.0.0 you have to set the option
    # `resultserver_ip` for all your virtual machines in machinery configuration.
    ip = 192.168.56.1  --虚拟网卡，如果创建虚拟网卡使用的其他ip,这里需要更改
    # Specify a port number to bind the result server on.
    port = 2042  --端口
    # Force the port chosen above, don't try another one (we can select another
    # port dynamically if we can not bind this one, but that is not an option
    # in some setups)
    force_port = no
    # Maximum size of uploaded files from VM (screenshots, dropped files, log).
    # The value is expressed in bytes, by default 128 MB.
    upload_max_size = 134217728
**virtualbox.conf：**
    [virtualbox]
    # Specify which VirtualBox mode you want to run your machines on.
    # Can be "gui" or "headless". Please refer to VirtualBox's official
    # documentation to understand the differences.
    mode = headless
    # Path to the local installation of the VBoxManage utility.
    path = /usr/bin/VBoxManage
    # If you are running Cuckoo on Mac OS X you have to change the path as follows:
    # path = /Applications/VirtualBox.app/Contents/MacOS/VBoxManage
    # Default network interface.
    interface = vboxnet0  --虚拟网卡名称，如果创建虚拟网卡的时候名称不同需要修改
    # Specify a comma-separated list of available machines to be used. For each
    # specified ID you have to define a dedicated section containing the details
    # on the respective machine. (E.g. cuckoo1,cuckoo2,cuckoo3)
    machines = cuckoo1 --宿主机的名称，根据创建名称修改
    # If remote control is enabled in cuckoo.conf, specify a port range to use.
    # Virtualbox will bind the VRDP interface to the first available port.
    controlports = 5000-5050
    [cuckoo1]
    # Specify the label name of the current machine as specified in your
    # VirtualBox configuration.
    label = cuckoo1
    # Specify the operating system platform used by current machine
    # [windows/darwin/linux].
    platform = windows
    # Specify the IP address of the current virtual machine. Make sure that the
    # IP address is valid and that the host machine is able to reach it. If not,
    # the analysis will fail.
    ip = 192.168.56.101  -- win7的静态这里需要修改
**以上是一些关键的配置，再次运行cuckoo指令，也许还有有其他问题，你可以查阅官方或谷歌百度解决，如果正常你会看到以下信息，如下所示：**
**cuckoo已经能启动了，但是我们需要Web页面，如果在独立的Python环境中，别忘了临时变量，这个问题会导致迷之错误，当初排查了好久：**
    export CUCKOO=/opt/cuckoo
**reporting.conf配置文件：**
    # Enable or disable the available reporting modules [on/off].
    # If you add a custom reporting module to your Cuckoo setup, you have to add
    # a dedicated entry in this file, or it won't be executed.