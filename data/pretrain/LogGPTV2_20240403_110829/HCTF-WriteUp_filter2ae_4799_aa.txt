# HCTF-WriteUp
|
##### 译文声明
本文是翻译文章，文章来源：F4nt45i4
译文仅供参考，具体内容表达以及含义原文为准。
****
**Team:F4nt45i4 Member: kow wuyihao nlfox**
**WEB** **题目**
**injection**
根据官方的提示 xpath injection,到google搜了一堆payload,最后找了一个直接用了:
http://120.26.93.115:24317/0311d4a262979e312e1d4d2556581509/index.php?user=user1%27]|//*|user[user=%27user2
得到flag:
hctf{Dd0g_fac3_t0_k3yboard233}
**  
**
**Personal blog**
根据网页上的提示,查找源码,一开始找的是网页源码,发现没什么卵用,最后发现网站是托管在github上的,根据博客主的用户名到github上搜,发现博客的源码:
Base64decode得到flag:
hctf{H3xo_B1og_Is_Niu8i_B1og}
**  
**
**fuck ===**
利用php弱类型绕过的题,直接构造:
http://120.26.93.115:18476/eff52083c4d43ad45cc8d6cd17ba13a1/index.php?a[]=aaa&b[]=bbb
得到flag:
hctf{dd0g_fjdks4r3wrkq7jl}
**  
**
**404**
抓包,页面有个302跳转,http header里面有flag:
hctf{w3lcome_t0_hc7f_f4f4f4}
**  
**
**Hack my net**
打开链接会自己加载远程的css文件,首先会验证url里面是否存在[http://nohackair.net:80](http://nohackair.net:80),利用http://nohackair.net:PI:EMAIL/进行绕过我们在xxoo.com的日志中可以发现有210一个ip的访问记录,但是经过测试发现只有当访问css文件时才会返回200,这个时候我们利用302跳转,根据返回包里面的提示Config:
[http://localareanet/all.conf](http://localareanet/all.conf)
flag应该在这个文件中,我们利用php header()函数构造:
然后构造访问:
成功获得flag:
Hctf{302_IS_GOOD_TO_SSRF}
**  
**
**Server is done**
发现是流密码,也就是明文固定,密钥是变化的,每次上传的密码会和明文进行异或,这样我们上传和明文相同位数的数据,最后将数据和返回的message以及flag
here的数据进行异或即可得到明文的flag:
    IjQJm-Km+&jnJa|!]{=!a9Jr{x2C$*Ml{CPSb|o342l`JHq3vrq~s+N@6~MFxwg!Bd32/2S)#BUmosh3wX*e39F9*W}]*P)Xh]PI:EMAIL?4T_chctf{D0YOuKnovvhOw7oFxxkRCA?iGuE55UCan...Ah}PD
Flag是:hctf{D0YOuKnovvhOw7oFxxkRCA?iGuE55UCan…Ah}
**  
**
**easy xss**
首先我们构造http://120.26.224.102:54250/0e7d4f3f7e0b6c0f4f6d1cd424732ec5/?errmsg=a&t=1&debug=%27;alert(1)//
成功弹框:
但是想要加载远程的js时发现debug后面有长度限制,最后利用iframe标签构造了payload成功绕过限制:
    ">
这样本地构造一个页面:
http://app.ikow.cn/0e7d4f3f7e0b6c0f4f6d1cd424732ec5/test.html
其中1.js中为:
alert(document.domain)
发现成功弹窗跨域。。。然后本地测试了chrome和firefox41都可以执行,但是不知道为什么打不到cookie,提交给管理,人工审核,拿到flag:
FLAG 是 JAVASCRIPT_DRIVES_ME_CREAZY_BUT_YOU_GOODJB
**  
**
**confused question**
这题一开始走偏了,利用数组绕过了str_ireplace,但是addslashesForEvery一直没有绕过:
最后发现parse_str对url会传入的参数进行url decode,这样可以通过url二次编码进行绕过
****
最后利用了addslashesForEvery把’分割成最后username变成了,带入数据库中成功执行,返回flag:
**COMMA WHITE**
先解混淆。
利用原来的两个函数E3AA318831FEAD07BA1FB034128C7D76和FFBA94F946CC5B3B3879FBEC8C8560AC生成两个表。然后两次逆向查表得到答案。
    with open('s0') as f:
        s = f.read().strip().split('n')
    with open('e3.out') as f:
        a = f.read().strip().split('n')
    with open('ff.out') as f:
        b = f.read().strip().split('n')
    a = [tuple(i.split(' ')) for i in a]
    b = [tuple(i.split(' ')) for i in b]
    a = dict(a)
    b = dict(b)
    result = ''
    for i in s:
        x = a[i]
        if len(x) == 2:
            x = x + '=='
        else:
            x = x + '='
        result += b[x]
    print result
**  
**
**MC** **服务器租售中心 – 1(真的不是玩MC)**
在提供的[http://mc.hack123.pw/](http://mc.hack123.pw/)网站中发现如下的功能:
http://kirie.hack123.pw/ kirie的博客
http://mcblog.hack123.pw/ 官方的博客
http://mc.hack123.pw/bbs/ 留言板
http://shop.hack123.pw/ 商店
在比赛快结束的时候开了mc-2,发现和1是一样的域名。。所以这里面应该有两个flag,在kirie的博客中收集了一些信息:
其中有篇加密的博客,试了了下发现密码是123456,内容是:
管理地址mc4dm1n.hack123.pw
主管说不要用自己的生日做密码。。我还没改怎么办。。
然后发现了这张火车票[https://ooo.0o0.ooo/2015/12/01/565e68d94a2c5.png](https://ooo.0o0.ooo/2015/12/01/565e68d94a2c5.png):
其中有密码信息。。
访问mc4dm1n.hack123.pw 用kirie
19940518成功登陆,登陆后有个验证,发现短信验证码在源码中,并结合身份证后4位,成功进入后台,发现账号被限制了在源码中发现:
Cookie中有用户的信息和level,应该是根据level进行判断权限,ht是base64编码过的,decode后并不是可见字符,我们大致根据源码中的注释对对应位置进行爆破,发现存在字符可以正常访问页面:
成功得到flag
后面还有由于时间关系就没有继续了
**  
**
**MMD**
Mangodb的注入。。最后找到payload了,但是是盲注时间紧就没做了,可以参见:
http://drops.wooyun.org/tips/3939
**  
**
**MISC**
**Andy**
安卓的逆向,比较简单。。。明文传进去后,加上hdu1s8进行反转,然后进行base64加密,最后是一个经典加密,过程可逆:
    SRlhb70YZHKvlTrNrt08F=DX3cdD3txmg
    OHMxdWRoZDBpMnczcmRuYXk2bjhkbmEE=
    8s1udhd0i2w3rdnay6n8dna
    and8n6yandr3w2i0d
最后flag为:and8n6yandr3w2i0d
**  
**
**Shortbin**
以为是要用Java写helloworld,尝试未果。后来发了ELF发现输出提示变了。然后找linux下smallest的helloworld。改一改编译发送过了第一关,第二关用的同一个程序,输出yes。第三关试了下长度,发现输出no不加换行,长度刚好符合要求,发过去,得到flag。
    BITS 32
               org 0x05430000
               db  0x7F, "ELF"
               dd  1
               dd  0
               dd  $$
               dw 2