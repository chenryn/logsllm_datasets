Slide: 1
MetaPhish
Val Smith (PI:EMAIL)
Colin Ames (PI:EMAIL)
David Kerb (PI:EMAIL) 
Slide: 2
Bios
Valsmith
– Affiliations:
• Attack Research
• Metasploit
– Work:
• Attack Techniques Research
• Pen Tester/ Exploit developer
• Reverse Engineer
• Malware Analyst
Previous Talks
–
 Exploiting malware & vm detection
–
 Kernel mode de­obfuscation of malware
–
 Data mining malware collections 
–
 Tactical Exploitation
–
 Post Exploitation
–
 Analysis of foreign web attacks
Slide: 3
Overview
• Spear Phishing for Pen­Testing
• Working on a Framework on top of 
Metasploit
• Phile Phishing
• Web Phishing
• MSF automation
• Abusing TOR
• Tying it all together
Slide: 4
Spear­Phishing
• This is the way people are getting in NOW
• Remote exploits much less prevalent
• Blended attacks combining:
– Web
– File formats
– Malware
– Social Engineering
Slide: 5
Spear­Phishing
How often do you pen test this way?
Do clients let you?
Slide: 6
Spear­Phishing
You’re missing a major vector!
Slide: 7
Spear­Phishing
• Attackers now use targeted client side methods
• Web kits prevalent
– Mpack, tornado, adpack, luckyspolit, zunker
– Who knows what’s in these ?
– Uncontrolled environment
• File format exploits abound
– Sometimes get built into MSF,Core
– Same problems as web kits
– Little public knowledge of FF RE methods
• Solution? RE what the attackers do and make 
their techniques reliable
Slide: 8
Work Flow
• Thoroughly recon target 
• Build a “legend” for your attack
– Find plausible documents from the target
• Build your vector
– Infect PDF’s
– Build a malicious website
• Cast your line – send the target the lure
Slide: 9
Work Flow
• Setup a server side exploitation system 
that can handle many clients at once
• Receive the incoming access
– Design to bypass their firewalls
– Look for proxies, HIDS/HFW, egress ports
• Inject into pre­authorized browsers
• Automate your post­exploitation actions
– Scripts to grab passwords, install backdoors, 
enumerate info, grab tokens, log manipulation
• Complex, needs a framework
Slide: 10
Why a Framework?
Slide: 11
Why a Framework?
• Client side is the new paradigm as are frameworks
• Phishing = client side attack surface facilitator
• Most client side tools are manual / standalone
• Core Impact is $$$
• Pentesters need 
– Standardizable
– Controllable 
– Automatable
– Customized methods
• Targeting not as well defined or supported
Slide: 12
Targeting?
Slide: 13
Targeting
• Greatly increases chances of success
• Heavily social engineering inspired
• Requires recon
• The more knowledge about the target the 
better
• Tactical Exploitation concepts apply
• Use target’s public files against them!
Slide: 14
Targeting
• Generic File Hunting / File Harvesting
• Creative googling for documents
• Read documents for juicy details
• Read deeper
– Harvest meta data for juicy details
Slide: 15
Targeting
• Understand your targets infrastructure
– Tactical Exploitation topics apply
– Enumerate targets “home” or actual networks
• Beyond just the hosting company
– Look for leaked proxy log analysis results
• These give you:
– Client applications
– Update frequencies
– Anti­Virus
– Anything that communicates out
– Internal IP addresses
Slide: 16
Slide: 17
Slide: 18
Slide: 19
Slide: 20
Slide: 21
Slide: 22
Slide: 23
PHILE PHISHING
Slide: 24
Target File Selection and Infection
• Search the web for your target and 
available files
– Newsletters are great
– Conference announcements
– Find recent things to modify
– Take advantage of relationships
• If your target partners with someone else, steal 
and infect their documents and send to client
– Goal is to get them to click
– Script to automate target PDF acquisition
Slide: 25
Target File Selection and Infection
• How do you select a file for infection?
– People believe PDFs are a safe format
– People trust PDFs that are from their own 
organization
– Pick topics of likely target interested
– Pick files that are widely circulated
• Large audience
– Newsletters
– Company forms & instructions
– “Snow day” & activity announcements
Slide: 26
What’s wrong with this 
picture? What shouldn’t 
we have done?
Find file targets 
to infect
Slide: 27
Lets say our target is a 
technical organization in 
the Chinese government
Here is a good candidate 
PDF they provide freely 
for us
Slide: 28
Who publishes 
this newsletter?
Target for your 
attack legend
Spoof e­mail 
from this person?
Slide: 29
Gather 
target 
email 
addresses 
 to send 
infected 
files 
to/from
Slide: 30
Gather sites that 
have plausible 
relationships to 
send the infected 
files to
Slide: 31
File Infection
• Why PDFs?
– Javascript
– Code Execution
– Nested PDF’s
– Exploits / vulns in readers
– Dynamic content
• How do we infect them?
– Incremental update
– Tedious to do by hand
– Colin RE’d the PDF file format
Slide: 32
File Infection
• Adobe_basic_social_engineering.rb 
ruby script for infection
– Metasploit module
– Select a PDF to infect
– Pass file to module
– Output infected PDF
– Other tools generate blank
Slide: 33
PDF Defiler
• Demo PDF Parser
• Demo PDF Infector
Slide: 34
Web Phishing
These are the detailed mechanics of how to do this type of work
Slide: 35
Web Phishing
• Direct targets to your website
• Enumerate the target using web app
• Socially engineer the target into believing everything 
is “ok”
• Execute code on the target via SE, applet, exploit, 
etc.
• Handle incoming access from target
• Automate post exploitation activities
• Use a reliable framework
Slide: 36
Web Phishing
• Components
– Target Sieve
• OS detection
• IP detection
• Browser detection
• Decision making
– De­cloaking
– Signed Java Applets
• Fake certificate to targets org
– Social Engineering Attack
– Obfuscation
Slide: 37
GENERAL FRAMEWORK
Slide: 38
Web Phishing ­ Sieve
• These are examples we are providing
• Could be done many (better) ways
genHeader()
Generate header, noscript to 
test JS
ipCheck()
Get target IP and compare to 
scope
javaCheck()
Verify java is enabled
osDetect()
Determine the operating system 
type
browserDetect()
Determine the browser in use
jsDecloakIP()
Get natted / internal IP using 
javascript
japdip()
Get natted / internal IP using 
javapplet
Logger()
Log captured info to a file
Slide: 39
GENERATE A HTTP PAGE HEADER
Slide: 40
Web Phishing ­ Sieve
function genHeader() {
        echo "";
        echo "";
        echo "";
        echo "";
        echo "";
} // end genHeader
Slide: 41
VERIFY TARGET IP IS IN SCOPE
Slide: 42
Web Phishing ­ Sieve
function ipCheck($target_ip) {
        $scopeIPflag = 0;
        if ((preg_match("/$firstRange/",$target_ip, $matches)) ||
        (preg_match("/$sndRange/",$target_ip, $matches))) {
                $scopeIPflag = 1;
        } // end if
        else {
                $scopeIPflag = 0;
        } // end else
        return $scopeIPflag;
} // end ipCheck
Slide: 43
VERIFY JAVA INSTALL
Slide: 44
Web Phishing ­ Sieve
function javaCheck() {
        echo "";
} // end javaCheck
Slide: 45
OS DETECTION
Slide: 46
Web Phishing ­ Sieve
function osDetect($useragent) {
        // Check for windows, and send to windows page
        if (preg_match("/Windows/", $useragent,$winmatched)) {
                $ostype = "win";
        } // end windows check
        // Check for linux, and send to linux page
        elseif (preg_match("/Linux/", $useragent,$linmatched)) {
                $ostype = "linux";
        } // end linux check
        // Check for mac, and send to mac page
        elseif (preg_match("/Macintosh/", $useragent,$macmatched)) {
                $ostype = "mac";
        } // end mac
        else {
                $ostype = "unknown";
        } // end else
        return $ostype;
} // end osDetect