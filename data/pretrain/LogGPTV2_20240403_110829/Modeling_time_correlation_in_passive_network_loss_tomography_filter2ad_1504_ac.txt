e
D
d
r
a
d
n
a
S
e
v
i
t
t
l
a
e
R
e
g
a
r
e
v
A
30
25
20
15
10
5
5−leaf tree: linear
5−leaf tree: quadratic
30
25
20
15
10
5
2
4
6
8
10
Common Link Loss Percentage (%)
Fig. 6.
Experiment A.1: Average relative standard deviation of the same
loss estimates for the common link as in Figure 5, for 2-leaf and 5-leaf trees
under two loss models (20) respectively.
bias (dotted curves) obtained from (12) also works well for
both two-leaf and ﬁve-leaf trees, although it is only derived
for the two-leaf tree case.
Figure 6 shows the average relative standard deviation
versus the true loss rate f based on our PL-based inference
approach. We can see that
the relative standard deviation
of estimates decays as f increases. This is expected, since
when f increases, the end-to-end loss is more likely due to
the common link loss. The other nuisance parameters in our
PL-based inference has less inﬂuence, and the deviation also
decreases.
Experiment A.2 (PL-based Loss Estimates for Large
Trees). In this experiment, we study how our PL-based es-
timation performs as the number of leaves K increases. Here
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:45:26 UTC from IEEE Xplore.  Restrictions apply. 
556)
%
i
l
(
s
a
B
e
v
i
t
a
e
R
e
g
a
r
e
v
A
0
−20
−40
−60
−80
5
15
10
Number of Leaves
20
25
30
)
%
(
n
o
i
t
i
a
v
e
D
.
t
d
S
e
v
i
t
l
a
e
R
e
g
a
r
e
v
A
40
30
20
10
20
30
Number of Leaves
40
)
%
i
l
(
s
a
B
e
v
i
t
a
e
R
e
g
a
r
e
v
A
5
0
−5
2
Common Link Loss Percentage (%)
4
6
8
10
(a) Avg. rel. bias
(b) Avg. rel. standard deviation
Fig. 7.
Experiment A.2: Average relative bias and standard deviations
versus the number of leaves of the two-level tree using different methods
for computing the end-to-end success probabilities - est.equal (solid), est.self
(dashed), and est.true (dotted).
we ﬁx the common link loss rate at 5%, and vary the number of
leaves from 2 to 40, while the number of pair measurements
remains to be 5000. The leaf weights wi, i = 1, . . . , K are
sampled independently from an exponential distribution. Thus,
the distribution of packet pairs among leaf pairs is quite
skewed. Thus, some leaf branches have far more packet pair
samples than the others, especially when K is large.
We consider three kinds of loss estimates for our PL-based
estimation, given the increasing number of leaves K. The ﬁrst
estimate, denoted by est.equal, is the our proposed estimate in
Section V-A assuming the same end-to-end success rate. The
second estimate, denoted by est.self, is the estimate obtained
using the empirical end-to-end success rates (which may be
skewed) As a reference, we also obtained estimates using the
true end-to-end success rates, denoted by est.true.
Figures 7(a) and 7(b) respectively depict the average relative
bias and average relative standard deviations of the three link
loss estimates versus the number of leaves. From both ﬁgures,
we observe that when the number of leaves K is small,
est.equal (solid curves) is slightly worse than est.self (dashed
curves), since there is a bias introduced when we assume
the same end-to-end loss rates while all leaf branches receive
sufﬁcient packet samples. However, we emphasize that both
are almost as good as est.true (dotted curves). However, as K
increases (around K = 10), the performance of est.equal is
almost in par with est.true, while the performance of est.self
degrades signiﬁcantly. This is due to the fact that when K
increases, some leaf links do not receive enough samples (as
we generate samples based on a skewed distribution), one
can no longer estimate the end-to-end loss rates well, and
this signiﬁcantly degrades the estimation performance. On the
other hand, using est.equal, we can estimate the common link
loss rate quite well, and we see from the empirical results
that est.equal is robust to the differences of the numbers of
samples among the leaf links.
Experiment A.3 (Bias When the Loss Correlation Model is
Unknown). In practice, we do not know the exact form of the
correlation model. As mentioned in Section IV, the approach
we take here is to run several loss correlation models and
pick the one with the highest value of the PL function. We
investigate here how this practice would affect the performance
Fig. 8. Experiment A.3: Average relative bias for 5-leaf trees - est.true (solid)
and est.bestmodel (dotted).
of our loss rate estimates.
In this experiment, we generate packet pairs for the same
ﬁve-leaf tree in Experiment A.1 using only a linear time corre-
lation model in (20). However, we obtain loss estimates under
both linear and quadratic models, and select the estimates from
the model that returns the higher likelihood value, which we
refer to this as est.bestmodel. We compare this estimate with
that obtained under the true (i.e., linear) correlation model
referred as est.true.
Figure 8 depicts the average relative bias of est.true (solid)
and est.bestmodel (dashed) versus the true loss rate f . We
see that
the bias of est.bestmodel does not deviate much
from est.true. There is an acceptable small negative bias of
est.bestmodel (around 5%) compared to est.true. This is much
less than just ﬁtting under the wrong model, and much better
than 20% bias for the perfect correlation model (see Figure 5).
VII. NETWORK SIMULATION
We now evaluate our PL-based inference approach using
network simulation in ns2 [1]. Our goal is to show that our
approach generates tolerable errors of link loss estimates under
realistic trafﬁc conditions as well as large network topologies.
In particular, we seek to evaluate the cases where the time
correlation function is difﬁcult to model in practice.
We consider TCP-based loss inference in our simulation. To
verify the correctness of different loss inference algorithms,
we consider the scenarios where trafﬁc loads are fairly high
and hence packet losses are prominent. Speciﬁcally, we create
short-lived TCP ﬂows that follow a Poisson arrival process
with mean 10ms, and each TCP session has an exponentially
distributed duration with mean 1s. We use short-lived TCP
ﬂows as they are prevalent in the Internet [17]. Also, we
create a number of background UDP on-off ﬂows to add
some variance to the network trafﬁc. Unless stated otherwise,
all TCP and UDP ﬂows will send packets from the root
to one of the leaf branches that is uniformly chosen. Thus,
we expect that the trafﬁc load in each leaf branch is fairly
balanced, provided that the number of leaf branches is small
(we consider the case of skewed loads in Experiment B.3).
Since our inference is based on TCP, we only use TCP packets
to compute the actual loss rate for our ground truth. Our metric
of interest is the absolute relative error of the inferred loss rate
relative to the actual loss rate.
We obtain single packet measurements and packet pair
the
measurements from each simulation run. We then ﬁt
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:45:26 UTC from IEEE Xplore.  Restrictions apply. 
557measurement data into different loss estimation approaches
that we develop in R (see Section VI). Here, we consider
three loss rate estimation approaches:
• est.equal: the PL-based estimation that uses the same end-
to-end success rate to remove the skewness of packet
distribution in leaf branches (see Section V-A);
• est.self: the PL-based estimation that directly uses the
end-to-end success (or loss) rates of leaf branches (which
may be skewed); and
• est.perfect: the baseline estimation that assumes perfect
loss correlation and directly uses the end-to-end success
(or loss) rates of leaf branches.
We let both est.equal and est.self use the linear form of
the time correlation function (see Equation 6 in Section III).
Also, we have all approaches treat two neighboring packets as
a packet pair if they arrive within 100 milliseconds and target
different leaf branches.
A. The Two-level Tree Topology
We ﬁrst consider the two-level
tree topology shown in
Figure 2 (see Section II). The topology has a common link
at the root node, and a varying number of leaf branches.
We set the common link bandwidth to be 5Mb/s, while the
leaf branches have the same bandwidth 1Mb/s. All links have
propagation delay 5ms. Based on the given loss models, we
aim to infer the loss rate of the common link at the root node.
In the following results, each measurement is averaged over
30 simulation runs with different random seeds, and each
simulation run lasts for 60 seconds.
Experiment B.1 (The ON-OFF loss model). In this exper-
iment, we consider the ON-OFF loss model, in which we
view each link as a network path, and associate it with a
continuous-time Markovian on-off model (i.e., Gilbert model)
to approximate path-level correlated packet losses. Such an
on-off model is also used in previous work (e.g., [5]).
We consider two cases of packet losses: either losses only
occur in the common link (i.e., no leaf loss), or losses occur
in both the common link at the root node and the leaf links
(i.e., with leaf losses). In the latter case, we further add some
variations by uniformly letting each leaf link have one of the
two possibilities: either 0% of loss or approximately 2% of
losses (note that in the latter case, losses are generated from
the ON-OFF model and the average off period is set to 2% of
time). Here, we consider the actual loss rates at the common
link at approximately 2% and 5%, respectively, and we obtain
these rates by adjusting the parameters of the ON-OFF model
at the common link.
Figure 9 shows the inference results. Let us ﬁrst consider
Figure 9(a) (i.e., the no-leaf-loss case). Both the PL-based
inference approaches est.equal and est.self have smaller infer-
ence error rates than est.perfect. The degraded performance of
est.perfect is due to the fact that it uses perfect correlation, so
it assumes that the packets in each packet pair must be either
both lost or both delivered (as there is no leaf loss). However,
it is possible to have only one lost packet in a packet pair
est.equal
est.self
est.perfect
est.equal
est.self
est.perfect
)
%
(
r
o
r
r
e
e
v
i
t
l
a
e
r
e
t
l
u
o
s
b
A
 20
 15
 10
 5
 0
)
%
(
r
o
r
r
e
e
v
i
t
l
a
e
r
e
t
l
u
o
s
b
A
 20
 15
 10
 5
 0
 2  3  4  5  6  7  8  9  10
 2  3  4  5  6  7  8  9  10
Number of leaves
Number of leaves
(a) no leaf loss, common link
loss rate ∼ 2%
(b) with leaf losses, common
link loss rate ∼ 2%
est.equal
est.self
est.perfect
est.equal
est.self
est.perfect
)
%
(
r
o
r
r
e
e
v
i
t
l
a
e
r
e
t
l
u
o
s
b
A
 12
 10
 8
 6
 4
 2
 0