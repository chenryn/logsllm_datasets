    - hosts: all
      tasks:
      - name: Configure crypto policies
        include_role:
          name: linux-system-roles.crypto_policies
        vars:
          - crypto_policies_policy: FUTURE
          - crypto_policies_reboot_ok: true
    ```
    您可以将 [*FUTURE*]{.emphasis} 值替换为您首选的加密策略，例如：
    `DEFAULT`{.literal}、`LEGACY`{.literal} 和 `FIPS:OSPP`{.literal}。
    `crypto_policies_reboot_ok: true`{.literal}
    变量会导致系统角色在系统角色更改 crypto 策略后重启。
    [如需了解更多详细信息，请参阅Crypto
    策略系统角色变量和事实](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/index#crypto-policies-system-role-variables_using-the-system-wide-cryptographic-policies){.link}。
2.  可选：验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory_file playbook.yml
    ```
:::
::: orderedlist
**验证**
1.  在控制节点上，创建一个名为 的另一个 playbook，例如
    `verify_playbook.yml`{.literal}:
    ``` screen
    - hosts: all
      tasks:
     - name: Verify active crypto policy
       include_role:
         name: linux-system-roles.crypto_policies
     - debug:
         var: crypto_policies_active
    ```
    此 playbook 不更改系统上的任何配置，仅报告受管节点上的活跃策略。
2.  在同一个清单文件中运行 playbook:
    ``` screen
    # ansible-playbook -i inventory_file verify_playbook.yml
    TASK [debug] **************************
    ok: [host] => {
        "crypto_policies_active": "FUTURE"
    }
    ```
    `"crypto_policies_active":`{.literal} 变量显示受管节点上活跃的策略。
:::
:::
::: section
::: titlepage
# []{#setting-a-custom-cryptographic-policy-across-systems_administration-and-configuration-tasks-using-system-roles-in-rhel.html#additional_resources_3}其它资源 {.title}
:::
::: itemizedlist
-   `/usr/share/ansible/roles/rhel-system-roles.crypto_policies/README.md`{.literal}
    文件.
-   `ansible-playbook(1)`{.literal} man 手册.
-   [安装 RHEL
    系统角色.](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/administration_and_configuration_tasks_using_system_roles_in_rhel/index#installing-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel){.link}
-   [应用系统角色](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/getting-started-with-system-administration_configuring-basic-system-settings#applying-a-role_getting-started-with-rhel-system-roles){.link}
    .
:::
:::
:::
[]{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 10 章 使用 Clevis 和 Tang 系统角色 {.title}
:::
::: section
::: titlepage
# []{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#introduction-to-the-clevis-and-tang-system-roles_the-clevis-and-tang-system-roles}Clevis 和 Tang 系统角色介绍 {.title}
:::
RHEL 系统角色是 Ansible 角色和模块的集合,可为远程管理多个 RHEL
系统提供一致的配置界面。
RHEL 8.3 在使用 Clevis 和 Tang 自动部署基于策略的
Decryption(PBD)解决方案时引入了 Ansible
角色。`rhel-system-roles`{.literal}
软件包包含这些系统角色、相关示例以及参考文档。
`nbde_client`{.literal} 系统角色可让您自动部署多个 Clevis
客户端。请注意，`nbde_client`{.literal} 角色只支持 Tang
绑定，您目前不能在 TPM2 绑定中使用它。
`nbde_client`{.literal} 角色需要已经使用 LUKS 加密的卷。此角色支持将
LUKS 加密卷绑定到一个或多个 Network-Bound(NBDE)服务器 - Tang
服务器。您可以使用密码短语保留现有卷加密，或者将其删除。删除密码短语后，您只能使用
NBDE
解锁卷。这在最初使用您置备系统后应删除的临时密钥或密码加密卷时很有用。
如果您同时提供密语和密钥文件，该角色将使用您首先提供的内容。如果找不到任何有效密码，它将尝试从现有的绑定中检索密码短语。
PBD
将绑定定义为设备与插槽的映射。这意味着您可以在同一设备上有多个绑定。默认插槽是插槽
1。
`nbde_client`{.literal} 角色也提供 `state`{.literal} 变量。使用
`present`{.literal} 值创建新绑定或更新现有绑定。与
`clevis luks bind`{.literal} 命令不同，您可以使用
`state: present`{.literal}
覆盖其设备插槽中的现有绑定。`absent`{.literal} 值删除指定的绑定。
通过 `nbde_server`{.literal} 角色，您可以部署和管理 Tang
服务器作为自动磁盘加密解决方案的一部分。此角色支持以下功能：
::: itemizedlist
-   轮转 Tang 密钥
-   部署和备份 Tang 密钥
:::
::: itemizedlist
**其它资源**
-   有关 Network-Bound Disk Encryption(NBDE)角色变量的详细参考，安装
    `rhel-system-roles`{.literal} 软件包，查看 `README.md`{.literal}
    `/usr/share/doc/rhel-system-roles/nbde_client/`{.literal} 和
    `README.html`{.literal}
    `/usr/share/doc/rhel-system-roles/nbde_server/`{.literal}
    目录里的文件。
-   例如 system-roles playbook，安装 `rhel-system-roles`{.literal}
    软件包并查看
    `/usr/share/ansible/roles/rhel-system-roles.nbde_server/examples/`{.literal}
    目录。
-   有关 RHEL 系统角色的更多信息，请参阅 [RHEL
    系统角色简介](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/administration_and_configuration_tasks_using_system_roles_in_rhel/getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel#intro-to-rhel-system-roles_getting-started-with-rhel-system-roles){.link}
:::
:::
::: section
::: titlepage
# []{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#using-the-nbde_server-system-role-for-setting-up-multiple-tang-servers_the-clevis-and-tang-system-roles}使用 nbde_server 系统角色设置多个 Tang 服务器 {.title}
:::
按照以下步骤准备并应用包含您的 Tang-server 设置的 Ansible playbook。
::: itemizedlist
**先决条件**
-   您的 Red Hat Ansible Engine
    订阅已附加到系统。如需更多信息，请参阅[如何下载和安装 Red Hat
    Ansible Engine](https://access.redhat.com/articles/3174981){.link}
    文章。
:::
::: orderedlist
**流程**
1.  启用 RHEL Ansible 存储库，例如：
    ``` screen
    # subscription-manager repos --enable ansible-2-for-rhel-8-x86_64-rpms
    ```
2.  安装 Ansible Engine:
    ``` screen
    # yum install ansible
    ```
3.  安装 RHEL 系统角色：
    ``` screen
    # yum install rhel-system-roles
    ```
4.  准备包含 Tang 服务器设置的 playbook。您可以从头开始，或使用
    `/usr/share/ansible/roles/rhel-system-roles.nbde_server/examples/`{.literal}
    目录中的示例 playbook。
    ``` screen
    # cp /usr/share/ansible/roles/rhel-system-roles.nbde_server/examples/simple_deploy.yml ./my-tang-playbook.yml
    ```
5.  在您选择的文本编辑器中编辑 playbook，例如：
    ``` screen
    # vi my-tang-playbook.yml
    ```
6.  添加所需参数。以下示例 playbook 确保部署 Tang 服务器和密钥轮转：
    ``` screen
    ---
    - hosts: all
      vars:
        nbde_server_rotate_keys: yes
      roles:
        - linux-system-roles.nbde_server
    ```
7.  应用完成的 playbook:
    ``` screen
    # ansible-playbook -i host1,host2,host3 my-tang-playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   如需更多信息，请安装 `rhel-system-roles`{.literal} 软件包并查看
    `usr/share/ansible/roles/rhel-system-roles.nbde_server/`{.literal}
    目录和 `/usr/share/doc/rhel-system-roles/nbde_server/`{.literal}
    目录。
:::
:::
::: section
::: titlepage
# []{#the-clevis-and-tang-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#using-the-nbde_client-system-role-for-setting-up-multiple-clevis-clients_the-clevis-and-tang-system-roles}使用 nbde_client 系统角色设置多个 Clevis 客户端 {.title}
:::
按照以下步骤准备并应用包含 Clevis-client 设置的 Ansible playbook。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
`nbde_client`{.literal} 系统角色只支持 Tang
绑定。这意味着您目前无法将其用于 TPM2 绑定。
:::
::: itemizedlist
**先决条件**
-   您的 Red Hat Ansible Engine
    订阅已附加到系统。如需更多信息，请参阅[如何下载和安装 Red Hat
    Ansible Engine](https://access.redhat.com/articles/3174981){.link}
    文章。
-   您的卷已由 LUKS 加密。
:::
::: orderedlist
**流程**
1.  启用 RHEL Ansible 存储库，例如：
    ``` screen
    # subscription-manager repos --enable ansible-2-for-rhel-8-x86_64-rpms
    ```
2.  安装 Ansible Engine:
    ``` screen
    # yum install ansible
    ```
3.  安装 RHEL 系统角色：
    ``` screen
    # yum install rhel-system-roles
    ```
4.  准备包含 Clevis 客户端设置的 playbook。您可以从头开始，或使用
    `/usr/share/ansible/roles/rhel-system-roles.nbde_client/examples/`{.literal}
    目录中的示例 playbook。
    ``` screen
    # cp /usr/share/ansible/roles/rhel-system-roles.nbde_client/examples/high_availability.yml ./my-clevis-playbook.yml
    ```
5.  在您选择的文本编辑器中编辑 playbook，例如：
    ``` screen
    # vi my-clevis-playbook.yml
    ```
6.  添加所需参数。以下示例 playbook 配置 Clevis 客户端，以便在至少两个
    Tang 服务器之一可用时自动解锁两个 LUKS 加密卷：
    ``` screen
    ---
    - hosts: all
      vars:
        nbde_client_bindings:
          - device: /dev/rhel/root
            encryption_key_src: /etc/luks/keyfile
            servers:
              - http://server1.example.com
              - http://server2.example.com
          - device: /dev/rhel/swap
            encryption_key_src: /etc/luks/keyfile
            servers:
              - http://server1.example.com
              - http://server2.example.com
      roles:
        - linux-system-roles.nbde_client
    ```
7.  应用完成的 playbook:
    ``` screen
    # ansible-playbook -i host1,host2,host3 my-clevis-playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   如需了解有关该角色的参数和附加信息 `nbde_client`{.literal} ,安装
    `rhel-system-roles`{.literal} 软件包并查看
    `/usr/share/doc/rhel-system-roles/nbde_client/`{.literal}
    `/usr/share/ansible/roles/rhel-system-roles.nbde_client/`{.literal}
    目录的详情。
:::
:::
:::
[]{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 11 章 使用 RHEL 系统角色请求证书 {.title}
:::
通过证书系统角色，您可以使用 Red Hat Ansible Engine 发布和管理证书。
本章涵盖了以下主题：
::: itemizedlist
-   [证书系统角色](#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#the-certificate-system-role_requesting-certificates-using-rhel-system-roles "证书系统角色"){.link}
-   [使用证书系统角色请求新的自签名证书](#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#requesting-a-new-self-signed-certificate-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles "使用证书系统角色请求新的自签名证书"){.link}
-   [使用证书系统角色从 IdM CA
    请求一个新证书](#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#requesting-a-new-certificate-from-idm-ca-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles "使用证书系统角色从 IdM CA 请求一个新证书"){.link}
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#the-certificate-system-role_requesting-certificates-using-rhel-system-roles}证书系统角色 {.title}
:::
通过使用证书系统角色，您可以使用 Red Hat Ansible Engine 管理 TLS 和 SSL
证书的发布和更新。
该角色使用 `certmonger`{.literal}
作为证书提供程序，目前支持发布和续订自签名证书，并使用 IdM
集成证书颁发机构(CA)。