# 411: A Framework for Managing Security Alerts

## Presenters
- **Kai Zhong**  
  Product Security Engineer @ Etsy  
  Twitter: [@sixhundredns](https://twitter.com/sixhundredns)
- **Ken Lee**  
  Senior Product Security Engineer @ Etsy  
  Spoke at Defcon 21 about Content Security Policy  
  Loves funny cat gifs  
  Twitter: [@kennysan](https://twitter.com/kennysan)

## About Etsy
Etsy is a global marketplace where people come together to buy, sell, and collect unique items. Our platform connects millions of buyers and sellers around the world.

## Agenda
- Introduction
- The Problem(s)
- Our Solution
- Alert Management at Etsy
- More Examples
- Demo
- Questions

## Terminology
### Logs
- **Logstash**: Data processor and log shipper that allows you to break out your log data into separate fields. We use it to ship logs into Elasticsearch.
- **Elasticsearch**: Distributed, real-time search engine that allows storing complex, nested documents and generating statistics over your data. We use it for analyzing logs.
- **Kibana**: Data visualization frontend for Elasticsearch, enabling log discovery and visualizations.

## History
### Switching to ELK
- **Timeline**: Work started in mid-2014 and was completed by mid-2015.
- **Challenges**: 
  - Hiccups are expected when moving to a new technology.
  - Dealt with performance-impacting bugs.
  - Security concerns about the usability of ELK.
  - ELK lacked real-time attack monitoring functionality.

## The Problem(s)
### Search Scheduling
- **No Search Scheduling**: Security heavily relied on Splunk scheduled searches for alerting, but there was no equivalent in Elasticsearch (ES) at the time.
- **No Web UI for Managing Searches**: ES did not have a web interface for managing searches.

### Unfamiliar Query Language
- **Complex SPL Queries**: Our alerts were complex SPL (Splunk Processing Language) queries.
- **ES’s Query Language**: Less robust and some things were non-obvious coming from SPL.

## The Road to ELK Integration
- **Query Language**: Needed a query language for building complex queries without code.
- **Query Management**: Needed a mechanism to run and manage these queries, preferably before turning off Splunk.

### ESQuery
- **Features**:
  - Superset of the standard Lucene syntax.
  - Syntactically similar to SPL.
  - Supports all the functionality we need.
- **Syntax**:
  - **Command Syntax**: `* | join source:src_ip target:dst_ip`
  - **Aggregations**: `* | agg:terms field:src_ip | agg:terms field:user_id`
  - **Variable Substitution**: `src_ip:@internal_ips`

### Example Queries
- **SPL**:
  ```spl
  source="/data/syslog/current/web/info.log" log_namespace="login" reason="wrong password" response=403 | top 10 remote_host
  ```
- **ESQuery**:
  ```esquery
  type:web_info_log log_namespace:login logdata.reason:"wrong password" -response:403 | agg:terms field:logdata.remote_host size:10
  ```

## Alert Management
- **Automated Queries**: Write queries to be automatically executed.
- **Email Alerts**: Receive email alerts whenever there are results.
- **Web Interface**: Manage alerts through the web interface.

### Under the Hood
- **Search Jobs**: Scheduler, workers, and dashboard.
- **Managing Queries**: Configuring and reviewing queries.
- **Managing Alerts**: Reviewing and responding to alerts.

## Incident Response
- **High Sensitivity Alerts**: Generate immediate notifications.
- **Medium/High Alerts**: Generate alerts but may not require immediate action.
- **Low Alerts**: Do not generate notification emails.
- **Noise Management**: Attackers often generate a lot of noise, resulting in numerous alerts firing.

### Responding to an Alert
- **Urgency Assessment**: Determine if the alert can wait till morning.
- **Contextual Analysis**: Review related alerts during the same time period.

### Alert Maintenance
- **Review Noisy Alerts**: Identify and review noisy alerts.
- **Update Queries**: Add useful fields and deprecate old code.

## What Deserves an Alert?
- **Potential Error Conditions**
- **Volume of Traffic/Thresholds Being Hit**
- **Deprecating Old Code**

### Instances
- **Sec411**
- **Netsec411**
- **Sox411**

## Beyond ELK
### Graphite
- **Time Series Data**: Store and graph time series data.
- **Best for Simple Threshold Alerting**: All of Graphite’s data transforms are available.

### HTTP
- **Endpoint Monitoring**: Detect when a HTTP endpoint returns an unexpected response.
- **Useful for Web Services**: Similar in functionality to Nagios.

## Demo
[Demo will be shown here]

## Questions
Feel free to ask any questions!

## Check Out 411
- [411 Project Page](https://fouroneone.io)

### Contact Information
- **Kai Zhong**: [@sixhundredns](https://twitter.com/sixhundredns)
- **Ken Lee**: [@kennysan](https://twitter.com/kennysan)