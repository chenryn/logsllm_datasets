homomorphic encryption from ring-LWE and security
for key dependent messages. In P. Rogaway, editor,
CRYPTO 2011, volume 6841 of LNCS, pages 505–524.
Springer, Aug. 2011.
[6] E. Bresson, D. Catalano, and D. Pointcheval. A simple
public-key cryptosystem with a double trapdoor
decryption mechanism and its applications. In C.-S.
Laih, editor, ASIACRYPT 2003, volume 2894 of
LNCS, pages 37–54. Springer, Nov. / Dec. 2003.
[7] C. Cachin, J. Camenisch, J. Kilian, and J. Muller.
One-round secure computation and secure
autonomous mobile agents. In U. Montanari, J. D. P.
Rolim, and E. Welzl, editors, ICALP 2000, volume
1853 of LNCS, pages 512–523. Springer, July 2000.
1527[8] G. Castagnos and F. Laguillaumie. Linearly
homomorphic encryption from DDH. In K. Nyberg,
editor, Topics in Cryptology – CT-RSA 2015, volume
9048 of Lecture Notes in Computer Science, pages
487–505. Springer International Publishing, 2015.
[9] D. Catalano and D. Fiore. Boosting
linearly-homomorphic encryption to evaluate degree-2
functions on encrypted data. Cryptology ePrint
Archive, Report 2014/813, 2014.
[10] J. D. Cohen and M. J. Fischer. A robust and veriﬁable
cryptographically secure election scheme (extended
abstract). In 26th FOCS, pages 372–382. IEEE
Computer Society Press, Oct. 1985.
M. J. Jacobson Jr., M. E. Locasto, P. Mohassel, and
R. Safavi-Naini, editors, ACNS 13, volume 7954 of
LNCS, pages 357–372. Springer, June 2013.
[23] S. Halevi and V. Shoup. Helib.
https://github.com/shaih/HElib.
[24] Y. Ishai and A. Paskin. Evaluating branching
programs on encrypted data. In S. P. Vadhan, editor,
TCC 2007, volume 4392 of LNCS, pages 575–594.
Springer, Feb. 2007.
[25] M. Joye and B. Libert. Eﬃcient cryptosystems from
2k-th power residue symbols. In T. Johansson and
P. Q. Nguyen, editors, EUROCRYPT 2013, volume
7881 of LNCS, pages 76–92. Springer, May 2013.
[11] R. Cramer, R. Gennaro, and B. Schoenmakers. A
[26] S. Kamara, P. Mohassel, and M. Raykova.
secure and optimally eﬃcient multi-authority election
scheme. In W. Fumy, editor, EUROCRYPT’97,
volume 1233 of LNCS, pages 103–118. Springer, May
1997.
[12] I. Damg˚ard and Y. Ishai. Constant-round multiparty
computation using a black-box pseudorandom
generator. In V. Shoup, editor, CRYPTO 2005,
volume 3621 of LNCS, pages 378–394. Springer, Aug.
2005.
[13] I. Damg˚ard and M. Jurik. A generalisation, a
simpliﬁcation and some applications of Paillier’s
probabilistic public-key system. In K. Kim, editor,
PKC 2001, volume 1992 of LNCS, pages 119–136.
Springer, Feb. 2001.
[14] I. Damg˚ard, V. Pastro, N. P. Smart, and S. Zakarias.
Multiparty computation from somewhat homomorphic
encryption. In R. Safavi-Naini and R. Canetti, editors,
CRYPTO 2012, volume 7417 of LNCS, pages 643–662.
Springer, Aug. 2012.
[15] T. ElGamal. A public key cryptosystem and a
signature scheme based on discrete logarithms. In
G. R. Blakley and D. Chaum, editors, CRYPTO’84,
volume 196 of LNCS, pages 10–18. Springer, Aug.
1984.
[16] D. M. Freeman. Converting pairing-based
cryptosystems from composite-order groups to
prime-order groups. In H. Gilbert, editor,
EUROCRYPT 2010, volume 6110 of LNCS, pages
44–61. Springer, May 2010.
[17] C. Gentry. Fully homomorphic encryption using ideal
lattices. In M. Mitzenmacher, editor, 41st ACM
STOC, pages 169–178. ACM Press, May / June 2009.
[18] C. Gentry, S. Halevi, and V. Vaikuntanathan. i-Hop
homomorphic encryption and rerandomizable Yao
circuits. In T. Rabin, editor, CRYPTO 2010, volume
6223 of LNCS, pages 155–172. Springer, Aug. 2010.
[19] GMP. The GNU Multi Precision Arithmetic Library.
http://www.gmplib.org.
[20] S. Goldwasser and S. Micali. Probabilistic encryption
& how to play mental poker keeping secret all partial
information. In Proceedings of the Fourteenth Annual
ACM Symposium on Theory of Computing, STOC ’82,
pages 365–377, New York, NY, USA, 1982. ACM.
[21] S. Goldwasser and S. Micali. Probabilistic encryption.
Journal of Computer and System Sciences,
28(2):270–299, 1984.
[22] A. Guillevic. Comparing the pairing eﬃciency over
composite-order and prime-order elliptic curves. In
Outsourcing multi-party computation. Cryptology
ePrint Archive, Report 2011/272, 2011.
http://eprint.iacr.org/2011/272.
[27] E. Kushilevitz and R. Ostrovsky. Replication is NOT
needed: SINGLE database, computationally-private
information retrieval. In 38th FOCS, pages 364–373.
IEEE Computer Society Press, Oct. 1997.
[28] A. L´opez-Alt, E. Tromer, and V. Vaikuntanathan.
On-the-ﬂy multiparty computation on the cloud via
multikey fully homomorphic encryption. In H. J.
Karloﬀ and T. Pitassi, editors, 44th ACM STOC,
pages 1219–1234. ACM Press, May 2012.
[29] C. A. Melchor, P. Gaborit, and J. Herranz. Additively
homomorphic encryption with d-operand
multiplications. In T. Rabin, editor, CRYPTO 2010,
volume 6223 of LNCS, pages 138–154. Springer, Aug.
2010.
[30] D. Naccache and J. Stern. A new public key
cryptosystem based on higher residues. In ACM CCS
98, pages 59–66. ACM Press, Nov. 1998.
[31] M. Naehrig, K. Lauter, and V. Vaikuntanathan. Can
homomorphic encryption be practical? In Proceedings
of the 3rd ACM Workshop on Cloud Computing
Security Workshop, CCSW ’11, pages 113–124, New
York, NY, USA, 2011. ACM.
[32] T. Okamoto and S. Uchiyama. A new public-key
cryptosystem as secure as factoring. In K. Nyberg,
editor, EUROCRYPT’98, volume 1403 of LNCS,
pages 308–318. Springer, May / June 1998.
[33] P. Paillier. Public-key cryptosystems based on
composite degree residuosity classes. In J. Stern,
editor, EUROCRYPT’99, volume 1592 of LNCS,
pages 223–238. Springer, May 1999.
[34] R. L. Rivest, L. Adleman, and M. L. Dertouzos. On
data banks and privacy homomorphisms. Foundations
of Secure Computation, Academia Press, pages
169–179, 1978.
[35] T. Sander, A. Young, and M. Yung. Non-interactive
cryptocomputing for NC1. In 40th FOCS, pages
554–567. IEEE Computer Society Press, Oct. 1999.
[36] V. Shoup. Ntl library. http://www.shoup.net/ntl/.
[37] N. P. Smart and F. Vercauteren. Fully homomorphic
encryption with relatively small key and ciphertext
sizes. In P. Q. Nguyen and D. Pointcheval, editors,
PKC 2010, volume 6056 of LNCS, pages 420–443.
Springer, May 2010.
1528[38] M. van Dijk, C. Gentry, S. Halevi, and
V. Vaikuntanathan. Fully homomorphic encryption
over the integers. In H. Gilbert, editor,
EUROCRYPT 2010, volume 6110 of LNCS, pages
24–43. Springer, May 2010.
[39] A. C.-C. Yao. Protocols for secure computations
(extended abstract). In 23rd FOCS, pages 160–164.
IEEE Computer Society Press, Nov. 1982.
APPENDIX
A. ADAPTING KNOWN HE SCHEMES TO
BE Public-Space
In this section we show that those few encryption schemes
which do not ﬁt our notion of public-space, can be eas-
ily modiﬁed to do so. This is the case for the additively-
homomorphic variants (aka “in the exponent”) of the ElGa-
mal [15, 11] and the BBS Linear Encryption [2] schemes (we
show the adaptation of these schemes in the full version [9]),
as well as for BGN [3]. The case of Okamoto-Uchiyama [32]
is slightly diﬀerent: we show how to tweak the scheme so
that it can still be used in our construction of Section 4.
A.1 Adapting the BGN Cryptosystem
The basic BGN [3] does not ﬁt our requirement of public-
space encryption scheme. This is because, in order to cope
with the decryption procedure the messages are treated as
(small) integers rather than elements in a ring. This diﬃ-
culty can be easily overcome by forcing the messages to be
treated as elements in some appropriate ring.
that we call BGN(pub).
Below we give a short description of the adapted scheme
Let G(1λ) be an algorithm that on input security param-
eter λ outputs a tuple (p, q, G, GT , e) where G and GT are
groups of order N = pq and e : G× G → GT a bilinear map.
KeyGen(1λ): On input 1λ where λ is a security parameter,
run G(1λ) to obtain (p, q, G, GT , e). Set N = pq. Pick
two random generators g, g(cid:48) ∈R G and set h = (g(cid:48))q. The
public key is set as pk = (N, G, GT , e, g, h), the private key
is sk = p. For the message space, take some small integer
t << q and set M = Zt.
Enc(pk, m): To encrypt m ∈ M, the algorithm picks a ran-
dom r $← {1, ..., N} and outputs C = gmhr ∈ G.
Eval(pk, f, C1, . . . , Cn): Given two ciphertexts C1, C2 ∈ G,
homomorphic addition is performed by merely multiplying
– over G – (and re-randomizing) the ciphertexts, i.e., one
takes a random s $← {1, ..., N} and sets C = C1 · C2 ·
hs = gm1+m2 · hr1+r2+s.
If C1, C2 ∈ GT , one does the
same over GT by using e(g, h) in place of h. The (single)
homomorphic multiplication can be performed by using the
bilinear map as follows:
C = e(C1, C2)e(g, h)s = e(g, g)m1m2 e(g, h)ˆs ∈ GT
Clearly, the scheme remains additively homomorphic in
GT .
Dec(sk, C): To decrypt a ciphertext C using the private key
p, one ﬁrst computes C p = (gmhr)p = (gp)m. Next, one
extracts the discrete log m of C p in base gp. Finally, return
(m mod t).
As in [3], in order for decryption to be eﬃcient one needs
t to be small enough so that it is possible to execute in poly-
nomial time the extraction of discrete logs of at most T bits,
where 2T is an upper bound on the maximum value reach-
able by applying an admissible computation on messages of
log t bits. For instance, T = log(n · t3) when considering
degree-2 polynomials with n = poly(λ) monomials and co-
eﬃcients in Zt. The same proof of security in [3] trivially
applies to the scheme described above.
Theorem 7. If the subgroup decision assumption holds
for G, then the scheme BGN(pub) described above is a seman-
tically secure, public-space level-2 homomorphic encryption.
Moreover, note that our adaptation applies also to the vari-
ant of BGN based on the Decision Linear assumption which
can be obtained via the transformation in [16].
A.2 The modiﬁed Okamoto-Uchiyama
The encryption scheme of Okamoto-Uchiyama [32] does
not ﬁt our public-space requirement. However, we show that
with a small tweak this scheme too can be used in our basic
construction of Section 4. Let us ﬁrst recall the scheme.
KeyGen(1λ): On input 1λ where λ is a security parameter,
the algorithm generates large primes p and q, such that
|p| = |q| = λ and set N = p2q. Next, it chooses g ∈
(ZN )∗ such that g is a generator of Z∗
p2 . Finally set h =
gN mod N . Let k be such that 2k is (slightly) less than
p. The message space is M = {0, 1}k The public key is
(N, h, g) while the secret key is p.
Enc(pk, m): On input a message m ∈ M, choose a random
r ∈ ZN and output C = gmhr mod N .
Dec(sk, C): On input a ciphertext C and the secret key, one
ﬁrst computes D = C p−1 mod p2 = (gm)p−1 mod p2. Note
that D has order p in Z∗
p , over the
integers. The plaintext is retrieved as
p2 . Let L(x) = x−1
m ←
L(D)
L (gp−1 mod p2)
mod p
The problem with the above construction is that the scheme
2k .
−a2 mod N
is homomorphic modulo p while p is not public. We over-
come this diﬃculty by working directly modulo the (public!)
value N and by performing reductions modulo p only at de-
cryption time. This leads to the level-2 HE scheme that we
call OU(level−2) sketched below.
KeyGen(1λ): This is exactly as above with M = Z
Enc(pk, m): This is as above as well.
Eval(pk, f, C1, . . . , Cn): this algorithm is basically the same
as the one explained in Section 4 except that for multiply-
ing two ciphertexts C1, C2 ∈ Z∗
N one proceeds as follows.
One chooses random a1, a2
−a1 mod N,
1 · βa1
$← ZN , and sets
β2 = C2 · g
α = ga1a2 · βa2
β1 = C1 · g
2 mod N,
β = [β1, β2]
, and ﬁnally output m ← a+(cid:80)(cid:96)
Dec(sk, C): to decrypt a ciphertext of the form (α, β) ∈
ZN × Z2×(cid:96)
N , ﬁrst “decrypt” α as described above to ob-
tain a ∈ Zp, second do the same with all the β’s to obtain
b ∈ Z2×(cid:96)
i=1 b1,i·b2,i mod p.
It is straightforward to see that by applying the security
proof of [32] the above scheme is semantically secure under
the p-subgroup decision assumption.
p
Theorem 8. If the p-subgroup assumption holds, then the
scheme OU(level−2) described above is a semantically-secure
homomorphic encryption that correctly and compactly eval-
uates polynomials in F (cid:63)
2 .
1529