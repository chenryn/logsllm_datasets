I think that certain functions should return the same type as the input, if
they implement `__array_wrap__`, but aren't necessarily subclass of `ndarray`.
The pandas `Series` class is an instance of this. We'd like it if functions
like `where`, `diff`, and a few others returned a `Series` object similar to
how ufuncs work.
Here are the current functions that don't behave in the desired way:
  * `zeros_like`
  * `ones_like`
  * `empty_like`
  * `sort`
  * `diff`
  * `where`
Here's a related pandas issue: pandas-dev/pandas#6539
There may be others as well.
Here's an example:
    In [13]: import pandas as pd
    In [14]: import numpy as np
    In [15]: s = pd.Series(np.random.randn(10))
    In [16]: s
    Out[16]:
    0    0.5885
    1   -0.0710
    2    0.0832
    3    0.7473
    4    0.9818
    5    1.0533
    6   -2.3336
    7    0.5666
    8    0.4181
    9    0.2505
    dtype: float64
    In [17]: np.abs(s)
    Out[17]:
    0    0.5885
    1    0.0710
    2    0.0832
    3    0.7473
    4    0.9818
    5    1.0533
    6    2.3336
    7    0.5666
    8    0.4181
    9    0.2505
    dtype: float64
    In [18]: np.em
    np.emath       np.empty       np.empty_like
    In [18]: np.empty_like(s)
    Out[18]: array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])