title:Secure IP Telephony using Multi-layered Protection
author:Brennen Reynolds and
Dipak Ghosal
Secure IP Telephony using Multi-layered Protection(cid:3)
Brennen Reynolds1 and Dipak Ghosal2
1 - Department of Electrical and Computer Engineering
2 - Department of Computer Science
University of California, Davis, CA 95616, USA
Abstract
This paper presents the design and analysis of a multi-
layer protection scheme against denial-of-service (DoS)
attacks in IP telephony enabled enterprise networks.
While there are many types of DoS attacks, we focus on
ﬂood-based attacks using application layer and transport
layer signaling messages in IP telephony. We design sen-
sors to detect and control these types attacks and consider
different location of these sensors in the enterprise net-
work. The algorithm for detecting these attacks is based
on the well established non-parametric cumulative sum
method. The response to the attack uses standard pro-
tocol features of IP telephony to control the number of
incoming application and transport layer setup requests.
We consider different recovery algorithms and compare
their performance using our emulation toolkit. Our re-
sults show that the detection algorithm can quickly detect
both transport and application layer attacks and is robust
against various types of attacks. We also show that with
proper choice of sensor parameters, the detection algo-
rithm is effective over a wide range of call volumes.
1. Introduction
Denial-of-service (DoS) attack is not a new concept.
However, the manifestation of these attacks, their tar-
gets, and how they are executed has evolved over the past
decade [19, 5]. To date, most Internet originated DoS at-
tacks have targeted the transport and network layers of the
TCP/IP protocol stack. Typically, the goal of these attacks
is either to overwhelm a particular machine or to saturate
the communication link. However, as the Internet evolves
and enterprises deploy multiple connections to the Inter-
net, attacking the infrastructure has become less critical.
Modern DoS attacks are being targeted at speciﬁc services
that consumers demand and rely upon, e.g., e-mail and
(cid:3)This work is supported by NSF grants NCR-9703275 and ANI-
9741668
web [5]. This trend will continue as new complex ser-
vices are deployed and gain widespread adoption. IP tele-
phony is one such complex service that is gaining rapid
momentum and has the potential for becoming a strategic
new technologies in coming decades. In turn, it is a prime
target for new forms of DoS attacks.
In order to support IP telephony in an enterprise net-
work, new network elements must be deployed and ex-
isting network elements must be modiﬁed. To support
calls between endpoints connected to the IP network, re-
ferred to as Net-to-Net calls, SIP (Session Initiation Proto-
col) Proxy [23] and Registrar/Location Server (RLS) [23]
(or equivalently H.323 Gateway[12]) must be deployed.
To support call between endpoints in the Public Switched
Telephone Network (PSTN) and endpoints connected to
the IP network, referred to Net-to-PSTN and PSTN-to-
Net calls, it is necessary to deploy a Media/Signal Gate-
way (MSG) [26] that can act as an application level proxy
between the IP network and the PSTN. Besides these new
network elements, supporting IP telephony requires mod-
iﬁcations in the enterprise ﬁrewall to allow dynamic pro-
tocol ports to be opened at the clients to send and receive
audio and/or signaling and control messages. In this pa-
per, we examine these required architectural changes and
the associated vulnerabilities.
Since there are many types of DoS attacks [19, 5, 25],
we ﬁrst provide a classiﬁcation of attacks speciﬁc to IP
telephony. This classiﬁcation is based on the mechanisms
that can be used to either remove the vulnerability the at-
tack exploits or reduce the impact of the attack. We then
focus on ﬂood-based attacks using signaling and control
messages in IP telephony. We deﬁne transport and appli-
cation layer sensors to detect and control these types at-
tacks. The algorithm for detecting these attacks are based
on non-parametric cumulative sum method described in
[2]. Once an attack is detected, the response to the attack
uses standard protocol features of IP telephony to adapt
the number of incoming application and transport layer
setup requests. The placement of the sensors in the enter-
prise network is an important consideration and impacts
the recovery algorithm that must be enabled once the at-
tack ceases. We consider various placement alternatives
and discuss their implications.
To ensure that the sensors operate as designed, we have
carried out a quantitative analysis using an IP telephony
emulation tool. Three different types of DoS attacks were
used to determine the performance and range of attacks
the sensors can detect. For each attack, we consider three
different recovery algorithms. The sensors operation were
evaluated based on the detection time and the recovery
time for the various conﬁgurations and attack scenarios.
Our results show that the detection algorithm is robust
against the three types of DoS attacks considered in this
paper and can detect both the transport and application
layer attacks quickly. Furthermore, we also show that
with proper choice of sensor parameters, the detection al-
gorithm is effective over a wide range of call volumes.
The rest of the paper is organized as follows. Sec-
tion 2 examines the changes in the network infrastruc-
ture required to deploy IP telephony services. Section 3
describes the signaling and control messages in several
common IP telephony call setup sequences. In Section 4,
we give a classiﬁcation of different types of DoS attacks
based on the mechanisms that can be used to mitigate such
attacks. The design of transport and application layer sen-
sors to detect and control ﬂood-based attacks is described
in Section 5. A quantitative analysis of the performance of
the sensors is provided in Section 6. Section 8 describes
the related work. Finally, Section 9 concludes this paper
with a summary of the results and a discussion on future
research directions.
2. IP Telephony Enabled Enterprise Net-
works
Typical enterprise networks consist of two sections:
1) the internal network and 2) the DMZ (de-militarized
zone). The DMZ is connected to the public Internet
through an external ﬁrewall and contains various servers
that need to be accessed from external locations. This in-
cludes web, mail, and domain name service (DNS) [8]
servers. The internal network is connected to the DMZ
by another ﬁrewall. In some architectures, the two ﬁre-
walls are replaced by a single ﬁrewall with three network
interfaces [6].
Enabling IP telephony services in enterprise networks
requires additional devices to be added to the enterprise
network as well as modifying the functionality of exist-
ing components. Additional components that are required
includes, the SIP Proxy [23], Registrar/Location Server
(RLS) [23], the Media/Signal Gateway (MSG) [26] to
connect to the PSTN, and various sensors as described
later in Section 5.
IP telephony also requires modiﬁca-
tion to the ﬁrewall. An IP telephony enabled enterprise
network is shown in Figure 1.
The SIP Proxy (or H.323 Gatekeeper [12]) is placed in
the enterprise DMZ. All IP telephony signaling and con-
trol messages are routed through this proxy. Note that
the actual media stream bypasses the proxy and sent di-
rectly to the end terminal. The proxy server can support
many additional features such as Spam address lists. This
could include both individual clients’ lists as well as an
aggregate enterprise wide list. Any incoming call request
from an address in the list will result in a busy signal being
sent to the calling party. The Registrar/Location Server is
also located in the enterprise DMZ. Two key functions of
the RLS are 1) to maintain the location (IP address) of all
the end users within the enterprise and 2) to communicate
with other RLSs to implement the functionalities deﬁned
in Telephony Routing over IP (TRIP) [22]. All incoming
calls must have the SIP uniform resource identiﬁer (URI)
resolved to an IP address before the call can be routed to
its ﬁnal destination.
The Media/Signal Gateway is an application level proxy
to connect the IP network to the PSTN. The MSG is com-
posed of voice ports bound to voice trunks on the PSTN
side and LAN connectivity in the enterprise side. Addi-
tionally, it may contain a Signaling System 7 (SS7) [24]
link to a Signal Transfer Point (STP). The MSG provides
control and data message conversion between the two net-
works. An user initiating an calls from within the enter-
prise network to a PSTN end terminal, provides the MSG
with authentication credentials (which the MSG veriﬁes)
before a call can be assigned to a voice trunk and initiated.
In addition to the introduction of new devices in the en-
terprise network, certain existing network elements must
be modiﬁed [20]. The original static ﬁrewall must be re-
placed with a new dynamic ﬁrewall that is capable of in-
telligently parsing all layers of the network stack. The
new ﬁrewall must be capable of verifying the content of
each packet to ensure that only legitimate trafﬁc is allowed
through. A veriﬁcation engine or Protocol Parser is loaded
into the ﬁrewall for each complex protocol run over the
network. For IP telephony, the Protocol Parser is respon-
sible for extracting the media ﬂow port information de-
termined during the call setup phase. This information is
used to open appropriate pinholes in the ﬁrewall to allow
trafﬁc that matches the call tuple. Upon the completion of
a call, the Protocol Parser closes the appropriate pinholes.
To enable PSTN-to-Net and Net-to-PSTN calls, the Do-
main Name System (DNS) [8] service must be extended
to support ENUM. In this new standard, each telephony
terminal connected to the IP network is assigned an E.164
number (i.e., a telephone number) similar to a PSTN con-
nected end terminal. The DNS servers must then imple-
ment the ENUM protocol. In particular, ENUM uses the
NAPTR DNS Resource Record type to store a mapping
of E.164 number to a globally unique DNS name. All
Softphone(cid:13)
IP Phone(cid:13)
DNS(cid:13)
Server(cid:13)
Web(cid:13)
Server(cid:13)
PSTN(cid:13)
Enterprise(cid:13)
LAN(cid:13)
Media /(cid:13)
Signal(cid:13)
Gateway(cid:13)
Internal(cid:13)
Firewall(cid:13)
Authentication(cid:13)
Server(cid:13)
SIP(cid:13)
Registrar /(cid:13)
Location(cid:13)
Server(cid:13)
SIP(cid:13)
Redirect(cid:13)
Proxy(cid:13)
Internet(cid:13)
Application(cid:13)
Transport(cid:13)
Layer(cid:13)
Attack(cid:13)
Sensor(cid:13)
Layer(cid:13)
Attack(cid:13)
Sensor(cid:13)
External(cid:13)
Firewall(cid:13)
Edge(cid:13)
Router(cid:13)
Enterprise DMZ(cid:13)
Figure 1. IP Telephony enabled enterprise network.
ENUM names belong to the e164.arpa domain. While
ENUM is required for PSTN-to-Net calls, it can also be
used for Net-to-Net calls. Section 3 discusses several typ-
ical call setup sequences.
Finally, this work presents new attacks sensors to be de-
ployed in strategic points within the network to monitor
trafﬁc and detect the onset of DoS attacks. Figure 1 shows
one possible placement of two such sensors. A Transport
Layer Attack Sensor (TLAS) is positioned in the front of
the DMZ to detect transport protocol layer ﬂood attacks.
An Application Layer Attack Sensor (ALAS) is used to
detect IP telephony call request ﬂood attacks targeted at
either an individual user (or URIs) or to a large number of
URIs within the enterprise. The detection algorithms im-
plemented in these sensors and the appropriate response
to these attacks are discussed in Section 5. An evaluation
of the sensor placement in Figure 1 is presented in Section
6. Additional deployment issues are addressed in Section
7.
3. Normal IP Telephony Call Setup Sequences
This section outlines the normal call setup sequence in
IP telephony. Detecting a DoS attack is based on detect-
ing message sequences that is signiﬁcantly different from
these normal call setup sequences.
3.1. Successful PSTN-to-Net Call
To allow calls to be placed between an end terminal in
the PSTN and an end terminal in the IP network, each
terminal in the IP network must be assigned an address
that is capable of being speciﬁed by terminals attached to
the PSTN, e.g., a phone number (or E.164 number). The
result of this global naming scheme means that a PSTN
terminal may not know that they are communicating with
terminal on a different network. The interoperability be-
tween the two network protocol stacks is performed by the
MSG.
PSTN(cid:13)
End Terminal(cid:13)
Originating Local(cid:13)
Media / Signal(cid:13)
SIP(cid:13)
Exchange(cid:13)
Gateway(cid:13)
End Terminal(cid:13)
SETUP (1)(cid:13)
ALERTING (7)(cid:13)
CONNECT (10)(cid:13)
IAM (2)(cid:13)
ACM (6)(cid:13)
ANM (9)(cid:13)
INVITE (3)(cid:13)
Trying (4)(cid:13)
Ringing (5)(cid:13)
OK (8)(cid:13)
Call Established (11)(cid:13)
(Voice)(cid:13)
Call Established(cid:13)
(11) (RTP Data)(cid:13)
DISCONNECT (12)(cid:13)
RELEASE (14)(cid:13)
RELEASE(cid:13)
COMPLETE (16)(cid:13)
REL (13)(cid:13)
RLC (15)(cid:13)
BYE (17)(cid:13)
OK (18)(cid:13)
Figure 2. Message ﬂow for a successful PSTN-
to-Net call.
Figure 2 shows the message sequence to setup a call re-
quest initiated by a end terminal connected to the PSTN
to an end terminal attached to an enterprise network. The
SS7 network routes1 the Initial Address Message (IAM)
to the enterprise MSG. A voice port on the gateway is
allocated for the incoming call. The MSG translates the
E.164 number to an IP address using the ENUM exten-
sions to DNS. Once the destination address has been re-
solved, the gateway establishes an IP telephony (e.g., SIP)
connection with the end terminal.
In this scenario, the
called terminal accepts the call and the message is relayed
through the gateway back to the calling terminal. When
either terminal terminates the call, the appropriate tear
down messages are exchanged, the circuits are released,
and the voice port in the gateway is freed.
1Details of SS7 routing can be found in [24] and is beyond the scope
of this paper.
SIP(cid:13)
Media / Signal(cid:13)
Terminating Local(cid:13)
End Terminal(cid:13)
Gateway(cid:13)
Exchange(cid:13)
PSTN(cid:13)
End Termial(cid:13)
External SIP(cid:13)
End Terminal(cid:13)
External(cid:13)
Firewall(cid:13)
SIP Redirect(cid:13)
Server(cid:13)
Internal SIP(cid:13)
End Terminal(cid:13)
INVITE (1)(cid:13)
Trying (2)(cid:13)
Busy Here (6)(cid:13)
ACK (7)(cid:13)
IAM (3)(cid:13)
REL BUSY (4)(cid:13)
RLC (5)(cid:13)
Figure 3. Message ﬂow for a Net-to-PSTN call
with called party unavailable.
3.2. Net-to-PSTN Call with Called Party Unavail-
able
The message sequence for a Net-to-PSTN call when
the called party is available is very similar to the previ-
ous case. Figure 3 shows the message sequence when the
called party is unavailable. The URI in the INVITE mes-
sage of a Net-to-PSTN call is formatted differently than
in a Net-to-Net call. In particular, the user portion is the
E.164 number of PSTN end terminal and the host address
is the IP address of the MSG. Upon receiving the INVITE
message (and the user validation), the MSG follows the
SS7 call setup sequence. This includes allocating a voice
port in the gateway and initiating an IAM message which
is routed over the SS7 network to the Terminating Local
Exchange (TLE). The TLE responds with a Release (REL)
message with the busy ﬂag set. This results in the circuit
between the MSG and the TLE to be released. The MSG
translates the REL message into a SIP Busy Here response
and forwards it to the calling terminal.
3.3. Successful Incoming Net-to-Net Call
The number of call scenarios involving Net-to-Net calls
is extremely large. While detailed descriptions can be
found in [15], here we describe how several of the ba-
sic call setups are handled. One typical situation is a call
setup between an external end terminal connected to the
Internet and an end terminal in the enterprise network.
Note that for this example it is assumed the external termi-
nal can communicate with the called terminal, i.e., it is not
blocked by a static ﬁrewall. It is further assumed that the
ﬁrewall deployed by the enterprise functions as described
in Section 2.
From the message sequence shown in Figure 4, it is
clear that the ﬁrewall does not have an active role after the
initial TCP SYN [27] packet is received. Once the incom-