{"created": "2018-10-17T00:14:20.652Z", "created_by_ref": "", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "external_references": [{"external_id": "TA0005", "source_name": "mitre-attack", "url": "https://attack.mitre.org/tactics/TA0005"}], "id": "x-mitre-", "modified": "2019-07-19T17:43:23.473Z", "name": "Defense Evasion", "object_marking_refs": ["marking-"], "type": "x-mitre-tactic", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_domains": ["enterprise-attack"], "x_mitre_modified_by_ref": "", "x_mitre_shortname": "defense-evasion", "x_mitre_version": "1.0"}
{"created": "2018-10-17T00:14:20.652Z", "created_by_ref": "", "description": "The adversary is trying to steal data.\n\nExfiltration consists of techniques that adversaries may use to steal data from your network. Once they\u2019ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.", "external_references": [{"external_id": "TA0010", "source_name": "mitre-attack", "url": "https://attack.mitre.org/tactics/TA0010"}], "id": "x-mitre-", "modified": "2019-07-19T17:45:12.806Z", "name": "Exfiltration", "object_marking_refs": ["marking-"], "type": "x-mitre-tactic", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_domains": ["enterprise-attack"], "x_mitre_modified_by_ref": "", "x_mitre_shortname": "exfiltration", "x_mitre_version": "1.0"}
{"created": "2018-10-17T00:14:20.652Z", "created_by_ref": "", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "external_references": [{"external_id": "TA0007", "source_name": "mitre-attack", "url": "https://attack.mitre.org/tactics/TA0007"}], "id": "x-mitre-", "modified": "2019-07-19T17:44:13.228Z", "name": "Discovery", "object_marking_refs": ["marking-"], "type": "x-mitre-tactic", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_domains": ["enterprise-attack"], "x_mitre_modified_by_ref": "", "x_mitre_shortname": "discovery", "x_mitre_version": "1.0"}
{"created": "2018-10-17T00:14:20.652Z", "created_by_ref": "", "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "external_references": [{"external_id": "TA0009", "source_name": "mitre-attack", "url": "https://attack.mitre.org/tactics/TA0009"}], "id": "x-mitre-", "modified": "2019-07-19T17:44:53.176Z", "name": "Collection", "object_marking_refs": ["marking-"], "type": "x-mitre-tactic", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_domains": ["enterprise-attack"], "x_mitre_modified_by_ref": "", "x_mitre_shortname": "collection", "x_mitre_version": "1.0"}
{"created": "2020-09-30T16:11:59.650Z", "created_by_ref": "", "description": "The adversary is trying to establish resources they can use to support operations.\n\nResource Development consists of techniques that involve adversaries creating, purchasing, or compromising/stealing resources that can be used to support targeting. Such resources include infrastructure, accounts, or capabilities. These resources can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using purchased domains to support Command and Control, email accounts for phishing as a part of Initial Access, or stealing code signing certificates to help with Defense Evasion.", "external_references": [{"external_id": "TA0042", "source_name": "mitre-attack", "url": "https://attack.mitre.org/tactics/TA0042"}], "id": "x-mitre-", "modified": "2020-09-30T16:31:36.322Z", "name": "Resource Development", "object_marking_refs": ["marking-"], "type": "x-mitre-tactic", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_domains": ["enterprise-attack"], "x_mitre_modified_by_ref": "", "x_mitre_shortname": "resource-development", "x_mitre_version": "1.0"}
{"created": "2020-10-02T14:48:41.809Z", "created_by_ref": "", "description": "The adversary is trying to gather information they can use to plan future operations.\n\nReconnaissance consists of techniques that involve adversaries actively or passively gathering information that can be used to support targeting. Such information may include details of the victim organization, infrastructure, or staff/personnel. This information can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using gathered information to plan and execute Initial Access, to scope and prioritize post-compromise objectives, or to drive and lead further Reconnaissance efforts.", "external_references": [{"external_id": "TA0043", "source_name": "mitre-attack", "url": "https://attack.mitre.org/tactics/TA0043"}], "id": "x-mitre-", "modified": "2020-10-18T02:04:50.842Z", "name": "Reconnaissance", "object_marking_refs": ["marking-"], "type": "x-mitre-tactic", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_domains": ["enterprise-attack"], "x_mitre_modified_by_ref": "", "x_mitre_shortname": "reconnaissance", "x_mitre_version": "1.0"}
{"created": "2018-10-17T00:14:20.652Z", "created_by_ref": "", "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.", "external_references": [{"external_id": "TA0011", "source_name": "mitre-attack", "url": "https://attack.mitre.org/tactics/TA0011"}], "id": "x-mitre-", "modified": "2019-07-19T17:45:30.644Z", "name": "Command and Control", "object_marking_refs": ["marking-"], "type": "x-mitre-tactic", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_domains": ["enterprise-attack"], "x_mitre_modified_by_ref": "", "x_mitre_shortname": "command-and-control", "x_mitre_version": "1.0"}
{"created": "2018-10-17T00:14:20.652Z", "created_by_ref": "", "description": "The adversary is trying to get into your network.\n\nInitial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.", "external_references": [{"external_id": "TA0001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/tactics/TA0001"}], "id": "x-mitre-", "modified": "2019-07-19T17:41:41.425Z", "name": "Initial Access", "object_marking_refs": ["marking-"], "type": "x-mitre-tactic", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_domains": ["enterprise-attack"], "x_mitre_modified_by_ref": "", "x_mitre_shortname": "initial-access", "x_mitre_version": "1.0"}
{"created": "2020-01-14T17:18:32.126Z", "created_by_ref": "", "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as WriteProcessMemory and CreateRemoteThread.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ", "external_references": [{"external_id": "T1055.011", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1055/011"}, {"description": "Microsoft. (n.d.). About Window Classes. Retrieved December 16, 2017.", "source_name": "Microsoft Window Classes", "url": "https://msdn.microsoft.com/library/windows/desktop/ms633574.aspx"}, {"description": "Microsoft. (n.d.). GetWindowLong function. Retrieved December 16, 2017.", "source_name": "Microsoft GetWindowLong function", "url": "https://msdn.microsoft.com/library/windows/desktop/ms633584.aspx"}, {"description": "Microsoft. (n.d.). SetWindowLong function. Retrieved December 16, 2017.", "source_name": "Microsoft SetWindowLong function", "url": "https://msdn.microsoft.com/library/windows/desktop/ms633591.aspx"}, {"description": "Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017.", "source_name": "Elastic Process Injection July 2017", "url": "https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process"}, {"description": "MalwareTech. (2013, August 13). PowerLoader Injection \u2013 Something truly amazing. Retrieved December 16, 2017.", "source_name": "MalwareTech Power Loader Aug 2013", "url": "https://www.malwaretech.com/2013/08/powerloader-injection-something-truly.html"}, {"description": "Matrosov, A. (2013, March 19). Gapz and Redyms droppers based on Power Loader code. Retrieved December 16, 2017.", "source_name": "WeLiveSecurity Gapz and Redyms Mar 2013", "url": "https://www.welivesecurity.com/2013/03/19/gapz-and-redyms-droppers-based-on-power-loader-code/"}, {"description": "Microsoft. (n.d.). SendNotifyMessage function. Retrieved December 16, 2017.", "source_name": "Microsoft SendNotifyMessage function", "url": "https://msdn.microsoft.com/library/windows/desktop/ms644953.aspx"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}, {"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}], "modified": "2020-11-10T18:29:31.004Z", "name": "Extra Window Memory Injection", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_data_sources": ["Process: OS API Execution"], "x_mitre_defense_bypassed": ["Anti-virus", "Application control"], "x_mitre_detection": "Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Windows"], "x_mitre_version": "1.0"}
{"created": "2019-11-27T14:58:00.429Z", "created_by_ref": "", "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though at.exe can not access tasks created with schtasks or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ", "external_references": [{"external_id": "T1053.005", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1053/005"}, {"description": "BlackB0lt. (2022, April 15). https://github.com/SigmaHQ/sigma/blob/master/rules/windows/registry/registry_delete/registry_delete_removal_sd_value_scheduled_task_hide.yml. Retrieved June 1, 2022.", "source_name": "SigmaHQ", "url": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/registry/registry_delete/registry_delete_removal_sd_value_scheduled_task_hide.yml"}, {"description": "Campbell, B. et al. (2022, March 21). Serpent, No Swiping! New Backdoor Targets French Entities with Unique Attack Chain. Retrieved April 11, 2022.", "source_name": "ProofPoint Serpent", "url": "https://www.proofpoint.com/us/blog/threat-insight/serpent-no-swiping-new-backdoor-targets-french-entities-unique-attack-chain"}, {"description": "Harshal Tupsamudre. (2022, June 20). Defending Against Scheduled Tasks. Retrieved July 5, 2022.", "source_name": "Defending Against Scheduled Task Attacks in Windows Environments", "url": "https://blog.qualys.com/vulnerabilities-threat-research/2022/06/20/defending-against-scheduled-task-attacks-in-windows-environments"}, {"description": "Loobeek, L. (2017, December 8). leoloobeek Status. Retrieved December 12, 2017.", "source_name": "Twitter Leoloobeek Scheduled Task", "url": "https://twitter.com/leoloobeek/status/939248813465853953"}, {"description": "Microsoft Threat Intelligence Team & Detection and Response Team . (2022, April 12). Tarrask malware uses scheduled tasks for defense evasion. Retrieved June 1, 2022.", "source_name": "Tarrask scheduled task", "url": "https://www.microsoft.com/security/blog/2022/04/12/tarrask-malware-uses-scheduled-tasks-for-defense-evasion/"}, {"description": "Microsoft. (2017, May 28). Audit Other Object Access Events. Retrieved June 27, 2019.", "source_name": "Microsoft Scheduled Task Events Win10", "url": "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-other-object-access-events"}, {"description": "Microsoft. (n.d.). General Task Registration. Retrieved December 12, 2017.", "source_name": "TechNet Scheduled Task Events", "url": "https://technet.microsoft.com/library/dd315590.aspx"}, {"description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.", "source_name": "TechNet Autoruns", "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902"}, {"description": "Satyajit321. (2015, November 3). Scheduled Tasks History Retention settings. Retrieved December 12, 2017.", "source_name": "TechNet Forum Scheduled Task Operational Setting", "url": "https://social.technet.microsoft.com/Forums/en-US/e5bca729-52e7-4fcb-ba12-3225c564674c/scheduled-tasks-history-retention-settings?forum=winserver8gen"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "execution"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}, {"kill_chain_name": "mitre-attack", "phase_name": "privilege-escalation"}], "modified": "2023-04-07T17:11:17.807Z", "name": "Scheduled Task", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Andrew Northern, @ex_raritas", "Bryan Campbell, @bry_campbell", "Zachary Abzug, @ZackDoesML", "Selena Larson, @selenalarson", "Sittikorn Sangrattanapitak"], "x_mitre_data_sources": ["File: File Modification", "Scheduled Job: Scheduled Job Creation", "Windows Registry: Windows Registry Key Creation", "Command: Command Execution", "Process: Process Creation"], "x_mitre_deprecated": false, "x_mitre_detection": "Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_permissions_required": ["Administrator"], "x_mitre_platforms": ["Windows"], "x_mitre_remote_support": true, "x_mitre_version": "1.3"}, {"created": "2022-09-30T21:18:41.930Z", "created_by_ref": "", "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.", "external_references": [{"external_id": "T1205.002", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1205/002"}, {"description": "ExaTrack. (2022, May 11). Tricephalic Hellkeeper: a tale of a passive backdoor. Retrieved October 18, 2022.", "source_name": "exatrack bpf filters passive backdoors", "url": "https://exatrack.com/public/Tricephalic_Hellkeeper.pdf"}, {"description": "Jamie Harries. (2022, May 25). Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun. Retrieved October 18, 2022.", "source_name": "crowdstrike bpf socket filters", "url": "https://www.crowdstrike.com/blog/how-to-hunt-for-decisivearchitect-and-justforfun-implant/"}, {"description": "Leonardo. (2020, May 29). MALWARE TECHNICAL INSIGHT TURLA \u201cPenquin_x64\u201d. Retrieved March 11, 2021.", "source_name": "Leonardo Turla Penquin May 2020", "url": "https://www.leonardo.com/documents/20142/10868623/Malware+Technical+Insight+_Turla+%E2%80%9CPenquin_x64%E2%80%9D.pdf"}, {"description": "Luis Martin Garcia. (2008, February 1). Hakin9 Issue 2/2008 Vol 3 No.2 VoIP Abuse: Storming SIP Security. Retrieved October 18, 2022.", "source_name": "haking9 libpcap network sniffing", "url": "http://recursos.aldabaknocking.com/libpcapHakin9LuisMartinGarcia.pdf"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}, {"kill_chain_name": "mitre-attack", "phase_name": "persistence"}, {"kill_chain_name": "mitre-attack", "phase_name": "command-and-control"}], "modified": "2022-10-20T19:56:18.579Z", "name": "Socket Filters", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "2.1.0", "x_mitre_contributors": ["Tim (Wadhwa-)Brown", "CrowdStrike"], "x_mitre_data_sources": ["Process: Process Creation", "Network Traffic: Network Connection Creation"], "x_mitre_deprecated": false, "x_mitre_detection": "Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.(Citation: crowdstrike bpf socket filters)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2017-05-31T21:30:54.176Z", "created_by_ref": "", "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.", "external_references": [{"external_id": "T1066", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1066"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "defense-evasion"}], "modified": "2020-03-20T15:22:53.835Z", "name": "Indicator Removal from Tools", "object_marking_refs": ["marking-"], "revoked": true, "type": "attack-pattern", "x_mitre_defense_bypassed": ["Log analysis", "Host intrusion prevention systems", "Anti-virus"], "x_mitre_detection": "The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": false, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.0"}
{"created": "2020-02-20T21:01:25.428Z", "created_by_ref": "", "description": "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as tar on Linux and macOS or zip on Windows systems. \n\nOn Windows, diantz or  makecab may be used to package collected files into a cabinet (.cab) file. diantz may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) xcopy on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)", "external_references": [{"external_id": "T1560.001", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1560/001"}, {"description": "A. Roshal. (2020). RARLAB. Retrieved February 20, 2020.", "source_name": "WinRAR Homepage", "url": "https://www.rarlab.com/"}, {"description": "Corel Corporation. (2020). WinZip. Retrieved February 20, 2020.", "source_name": "WinZip Homepage", "url": "https://www.winzip.com/win/en/"}, {"description": "I. Pavlov. (2019). 7-Zip. Retrieved February 20, 2020.", "source_name": "7zip Homepage", "url": "https://www.7-zip.org/"}, {"description": "Living Off The Land Binaries, Scripts and Libraries (LOLBAS). (n.d.). Diantz.exe. Retrieved October 25, 2021.", "source_name": "diantz.exe_lolbas", "url": "https://lolbas-project.github.io/lolbas/Binaries/Diantz/"}, {"description": "Wikipedia. (2016, March 31). List of file signatures. Retrieved April 22, 2016.", "source_name": "Wikipedia File Header Signatures", "url": "https://en.wikipedia.org/wiki/List_of_file_signatures"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "collection"}], "modified": "2023-04-14T19:28:21.394Z", "name": "Archive via Utility", "object_marking_refs": ["marking-"], "revoked": false, "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_contributors": ["Mayan Arora aka Mayan Mohan", "Mark Wee"], "x_mitre_data_sources": ["File: File Creation", "Process: Process Creation", "Command: Command Execution"], "x_mitre_deprecated": false, "x_mitre_detection": "Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_version": "1.2"}, {"created": "2020-02-11T18:28:44.950Z", "created_by_ref": "", "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)", "external_references": [{"external_id": "T1021.005", "source_name": "mitre-attack", "url": "https://attack.mitre.org/techniques/T1021/005"}, {"description": "T. Richardson, J. Levine, RealVNC Ltd.. (2011, March). The Remote Framebuffer Protocol. Retrieved September 20, 2021.", "source_name": "The Remote Framebuffer Protocol", "url": "https://datatracker.ietf.org/doc/html/rfc6143#section-7.2.2"}, {"description": "Apple Support. (n.d.). Set up a computer running VNC software for Remote Desktop. Retrieved August 18, 2021.", "source_name": "MacOS VNC software for Remote Desktop", "url": "https://support.apple.com/guide/remote-desktop/set-up-a-computer-running-vnc-software-apdbed09830/mac"}, {"description": "Tegan. (2019, August 15). Setting up System Authentication. Retrieved September 20, 2021.", "source_name": "VNC Authentication", "url": "https://help.realvnc.com/hc/en-us/articles/360002250097-Setting-up-System-Authentication"}, {"description": "Z3RO. (2019, March 10). Day 70: Hijacking VNC (Enum, Brute, Access and Crack). Retrieved September 20, 2021.", "source_name": "Hijacking VNC", "url": "https://int0x33.medium.com/day-70-hijacking-vnc-enum-brute-access-and-crack-d3d18a4601cc"}, {"description": "Nick Miles. (2017, November 30). Detecting macOS High Sierra root account without authentication. Retrieved September 20, 2021.", "source_name": "macOS root VNC login without authentication", "url": "https://www.tenable.com/blog/detecting-macos-high-sierra-root-account-without-authentication"}, {"description": "Sergiu Gatlan. (2019, November 22). Dozens of VNC Vulnerabilities Found in Linux, Windows Solutions. Retrieved September 20, 2021.", "source_name": "VNC Vulnerabilities", "url": "https://www.bleepingcomputer.com/news/security/dozens-of-vnc-vulnerabilities-found-in-linux-windows-solutions/"}, {"description": "Offensive Security. (n.d.). VNC Authentication. Retrieved October 6, 2021.", "source_name": "Offensive Security VNC Authentication Check", "url": "https://www.offensive-security.com/metasploit-unleashed/vnc-authentication/"}, {"description": "Administrator, Penetration Testing Lab. (2012, October 30). Attacking VNC Servers. Retrieved October 6, 2021.", "source_name": "Attacking VNC Servers PentestLab", "url": "https://pentestlab.blog/2012/10/30/attacking-vnc-servers/"}, {"description": "Jay Pipes. (2013, December 23). Security Breach! Tenant A is seeing the VNC Consoles of Tenant B!. Retrieved October 6, 2021.", "source_name": "Havana authentication bug", "url": "http://lists.openstack.org/pipermail/openstack/2013-December/004138.html"}, {"description": "Sarah Edwards. (2020, April 30). Analysis of Apple Unified Logs: Quarantine Edition [Entry 6] \u2013 Working From Home? Remote Logins. Retrieved August 19, 2021.", "source_name": "Apple Unified Log Analysis Remote Login and Screen Sharing", "url": "https://sarah-edwards-xzkc.squarespace.com/blog/2020/4/30/analysis-of-apple-unified-logs-quarantine-edition-entry-6-working-from-home-remote-logins"}, {"description": "Pascal Nowack. (n.d.). Retrieved September 21, 2021.", "source_name": "Gnome Remote Desktop grd-settings", "url": "https://gitlab.gnome.org/GNOME/gnome-remote-desktop/-/blob/9aa9181e/src/grd-settings.c#L207"}, {"description": "Pascal Nowack. (n.d.). Retrieved September 21, 2021.", "source_name": "Gnome Remote Desktop gschema", "url": "https://gitlab.gnome.org/GNOME/gnome-remote-desktop/-/blob/9aa9181e/src/org.gnome.desktop.remote-desktop.gschema.xml.in"}], "id": "attack-", "kill_chain_phases": [{"kill_chain_name": "mitre-attack", "phase_name": "lateral-movement"}], "modified": "2023-03-30T21:01:46.879Z", "name": "VNC", "object_marking_refs": ["marking-"], "type": "attack-pattern", "x_mitre_attack_spec_version": "3.1.0", "x_mitre_data_sources": ["Logon Session: Logon Session Creation", "Network Traffic: Network Connection Creation", "Process: Process Creation"], "x_mitre_detection": "Use of VNC may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.\n\nOn macOS systems log show "screensharingd\" and eventMessage contains \"Authentication:\"' can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMonitor for use of built-in debugging environment variables (such as those containing credentials or other sensitive information) as well as test/default users on VNC servers, as these can leave openings for adversaries to abuse.(Citation: Gnome Remote Desktop grd-settings)(Citation: Gnome Remote Desktop gschema)", "x_mitre_domains": ["enterprise-attack"], "x_mitre_is_subtechnique": true, "x_mitre_modified_by_ref": "", "x_mitre_platforms": ["Linux", "macOS", "Windows"], "x_mitre_system_requirements": ["VNC server installed and listening for connections."], "x_mitre_version": "1.1"}