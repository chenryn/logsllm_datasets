Certainly! Below are the optimized versions of the provided texts, ensuring clarity, coherence, and professionalism:

---

### Defense Evasion

**Created:** 2018-10-17T00:14:20.652Z  
**Modified:** 2019-07-19T17:43:23.473Z  
**ID:** x-mitre-  
**Name:** Defense Evasion  
**Type:** x-mitre-tactic  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Shortname:** defense-evasion  
**External References:** [TA0005](https://attack.mitre.org/tactics/TA0005)

**Description:**
Adversaries use various techniques to avoid detection during their compromise. These techniques include uninstalling or disabling security software, obfuscating or encrypting data and scripts, and leveraging trusted processes to hide and masquerade malware. Techniques from other tactics that also subvert defenses are cross-listed here.

---

### Exfiltration

**Created:** 2018-10-17T00:14:20.652Z  
**Modified:** 2019-07-19T17:45:12.806Z  
**ID:** x-mitre-  
**Name:** Exfiltration  
**Type:** x-mitre-tactic  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Shortname:** exfiltration  
**External References:** [TA0010](https://attack.mitre.org/tactics/TA0010)

**Description:**
Adversaries use various techniques to steal data from your network. Once they have collected data, they often package it to avoid detection while removing it, which can involve compression and encryption. Techniques for exfiltrating data typically include transferring it over the command and control channel or an alternate channel, and may also include imposing size limits on the transmission.

---

### Discovery

**Created:** 2018-10-17T00:14:20.652Z  
**Modified:** 2019-07-19T17:44:13.228Z  
**ID:** x-mitre-  
**Name:** Discovery  
**Type:** x-mitre-tactic  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Shortname:** discovery  
**External References:** [TA0007](https://attack.mitre.org/tactics/TA0007)

**Description:**
Adversaries use various techniques to gain knowledge about the system and internal network. These techniques help them observe the environment, orient themselves, and decide how to act. They also allow adversaries to explore what they can control and what is around their entry point to discover how it could benefit their current objective. Native operating system tools are often used for this post-compromise information-gathering.

---

### Collection

**Created:** 2018-10-17T00:14:20.652Z  
**Modified:** 2019-07-19T17:44:53.176Z  
**ID:** x-mitre-  
**Name:** Collection  
**Type:** x-mitre-tactic  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Shortname:** collection  
**External References:** [TA0009](https://attack.mitre.org/tactics/TA0009)

**Description:**
Adversaries use various techniques to gather information relevant to their objectives. Commonly, the next goal after collecting data is to exfiltrate it. Typical target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.

---

### Resource Development

**Created:** 2020-09-30T16:11:59.650Z  
**Modified:** 2020-09-30T16:31:36.322Z  
**ID:** x-mitre-  
**Name:** Resource Development  
**Type:** x-mitre-tactic  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Shortname:** resource-development  
**External References:** [TA0042](https://attack.mitre.org/tactics/TA0042)

**Description:**
Adversaries create, purchase, or compromise/steal resources to support targeting. These resources include infrastructure, accounts, or capabilities that can be leveraged in other phases of the adversary lifecycle, such as using purchased domains for Command and Control, email accounts for phishing, or stealing code signing certificates for Defense Evasion.

---

### Reconnaissance

**Created:** 2020-10-02T14:48:41.809Z  
**Modified:** 2020-10-18T02:04:50.842Z  
**ID:** x-mitre-  
**Name:** Reconnaissance  
**Type:** x-mitre-tactic  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Shortname:** reconnaissance  
**External References:** [TA0043](https://attack.mitre.org/tactics/TA0043)

**Description:**
Adversaries actively or passively gather information to support targeting. This information may include details about the victim organization, infrastructure, or personnel. It can be leveraged to plan and execute Initial Access, scope and prioritize post-compromise objectives, or drive further Reconnaissance efforts.

---

### Command and Control

**Created:** 2018-10-17T00:14:20.652Z  
**Modified:** 2019-07-19T17:45:30.644Z  
**ID:** x-mitre-  
**Name:** Command and Control  
**Type:** x-mitre-tactic  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Shortname:** command-and-control  
**External References:** [TA0011](https://attack.mitre.org/tactics/TA0011)

**Description:**
Adversaries use various techniques to communicate with systems under their control within a victim network. They often mimic normal, expected traffic to avoid detection. There are many ways to establish command and control, with varying levels of stealth depending on the victimâ€™s network structure and defenses.

---

### Initial Access

**Created:** 2018-10-17T00:14:20.652Z  
**Modified:** 2019-07-19T17:41:41.425Z  
**ID:** x-mitre-  
**Name:** Initial Access  
**Type:** x-mitre-tactic  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Shortname:** initial-access  
**External References:** [TA0001](https://attack.mitre.org/tactics/TA0001)

**Description:**
Adversaries use various entry vectors to gain their initial foothold within a network. Techniques include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, such as valid accounts and external remote services, or may be limited-use due to changing passwords.

---

### Extra Window Memory Injection

**Created:** 2020-01-14T17:18:32.126Z  
**Modified:** 2020-11-10T18:29:31.004Z  
**ID:** attack-  
**Name:** Extra Window Memory Injection  
**Type:** attack-pattern  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Subtechnique:** true  
**Platforms:** Windows  
**Kill Chain Phases:** defense-evasion, privilege-escalation  
**Data Sources:** Process: OS API Execution  
**Defense Bypassed:** Anti-virus, Application control  
**Detection:** Monitor for API calls related to enumerating and manipulating EWM, such as GetWindowLong and SetWindowLong. Malware associated with this technique has also used SendNotifyMessage to trigger the associated window procedure and eventual malicious injection.  
**External References:**
- [Microsoft Window Classes](https://msdn.microsoft.com/library/windows/desktop/ms633574.aspx)
- [Microsoft GetWindowLong function](https://msdn.microsoft.com/library/windows/desktop/ms633584.aspx)
- [Microsoft SetWindowLong function](https://msdn.microsoft.com/library/windows/desktop/ms633591.aspx)
- [Elastic Process Injection July 2017](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)
- [MalwareTech Power Loader Aug 2013](https://www.malwaretech.com/2013/08/powerloader-injection-something-truly.html)
- [WeLiveSecurity Gapz and Redyms Mar 2013](https://www.welivesecurity.com/2013/03/19/gapz-and-redyms-droppers-based-on-power-loader-code/)
- [Microsoft SendNotifyMessage function](https://msdn.microsoft.com/library/windows/desktop/ms644953.aspx)

**Description:**
Adversaries may inject malicious code into a process via Extra Window Memory (EWM) to evade process-based defenses and possibly elevate privileges. EWM injection involves executing arbitrary code in the address space of a separate live process. Before creating a window, graphical Windows-based processes must register a windows class, which can include a request for up to 40 bytes of EWM. This memory is intended to store data specific to the window and has specific API functions to set and get its value. Malware may use this memory location to write code to shared sections of the process's memory, place a pointer to the code in EWM, and then invoke execution by returning control to the address in the process's EWM. This method can bypass protection mechanisms such as Data Execution Prevention (DEP).

---

### Scheduled Task

**Created:** 2019-11-27T14:58:00.429Z  
**Modified:** 2023-04-07T17:11:17.807Z  
**ID:** attack-  
**Name:** Scheduled Task  
**Type:** attack-pattern  
**Version:** 1.3  
**Mitre Attack Spec Version:** 3.1.0  
**Domains:** enterprise-attack  
**Subtechnique:** true  
**Platforms:** Windows  
**Kill Chain Phases:** execution, persistence, privilege-escalation  
**Data Sources:** File: File Modification, Scheduled Job: Scheduled Job Creation, Windows Registry: Windows Registry Key Creation, Command: Command Execution, Process: Process Creation  
**Permissions Required:** Administrator  
**Remote Support:** true  
**Contributors:** Andrew Northern, @ex_raritas; Bryan Campbell, @bry_campbell; Zachary Abzug, @ZackDoesML; Selena Larson, @selenalarson; Sittikorn Sangrattanapitak  
**Detection:** Monitor process execution from svchost.exe in Windows 10 and taskeng.exe for older versions. If scheduled tasks are not used for persistence, the adversary is likely to remove the task when the action is complete. Configure event logging for scheduled task creation and changes. Tools like Sysinternals Autoruns can detect system changes that could be attempts at persistence, including listing current scheduled tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities.  
**External References:**
- [SigmaHQ](https://github.com/SigmaHQ/sigma/blob/master/rules/windows/registry/registry_delete/registry_delete_removal_sd_value_scheduled_task_hide.yml)
- [ProofPoint Serpent](https://www.proofpoint.com/us/blog/threat-insight/serpent-no-swiping-new-backdoor-targets-french-entities-unique-attack-chain)
- [Defending Against Scheduled Task Attacks in Windows Environments](https://blog.qualys.com/vulnerabilities-threat-research/2022/06/20/defending-against-scheduled-task-attacks-in-windows-environments)
- [Twitter Leoloobeek Scheduled Task](https://twitter.com/leoloobeek/status/939248813465853953)
- [Tarrask scheduled task](https://www.microsoft.com/security/blog/2022/04/12/tarrask-malware-uses-scheduled-tasks-for-defense-evasion/)
- [Microsoft Scheduled Task Events Win10](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-other-object-access-events)
- [TechNet Scheduled Task Events](https://technet.microsoft.com/library/dd315590.aspx)
- [TechNet Autoruns](https://technet.microsoft.com/en-us/sysinternals/bb963902)
- [TechNet Forum Scheduled Task Operational Setting](https://social.technet.microsoft.com/Forums/en-US/e5bca729-52e7-4fcb-ba12-3225c564674c/scheduled-tasks-history-retention-settings?forum=winserver8gen)

**Description:**
Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. The `schtasks` utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. Adversaries may also use a .NET wrapper for the Windows Task Scheduler or the Windows `netapi32` library to create a scheduled task. The deprecated `at` utility could also be abused, though it cannot access tasks created with `schtasks` or the Control Panel. Adversaries may use the Task Scheduler to execute programs at system startup or on a scheduled basis for persistence, conduct remote execution as part of Lateral Movement, or run a process under the context of a specified account (such as SYSTEM). Adversaries may also create "hidden" scheduled tasks that are not visible to defender tools and manual queries.

---

### Socket Filters

**Created:** 2022-09-30T21:18:41.930Z  
**Modified:** 2022-10-20T19:56:18.579Z  
**ID:** attack-  
**Name:** Socket Filters  
**Type:** attack-pattern  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Subtechnique:** true  
**Platforms:** Linux, macOS, Windows  
**Kill Chain Phases:** defense-evasion, persistence, command-and-control  
**Data Sources:** Process: Process Creation, Network Traffic: Network Connection Creation  
**Contributors:** Tim (Wadhwa-)Brown, CrowdStrike  
**Detection:** Identify running processes with raw sockets. Ensure listed processes have a need for an open raw socket and are in accordance with enterprise policy.  
**External References:**
- [ExaTrack bpf filters passive backdoors](https://exatrack.com/public/Tricephalic_Hellkeeper.pdf)
- [CrowdStrike bpf socket filters](https://www.crowdstrike.com/blog/how-to-hunt-for-decisivearchitect-and-justforfun-implant/)
- [Leonardo Turla Penquin May 2020](https://www.leonardo.com/documents/20142/10868623/Malware+Technical+Insight+_Turla+%E2%80%9CPenquin_x64%E2%80%9D.pdf)
- [Hakin9 libpcap network sniffing](http://recursos.aldabaknocking.com/libpcapHakin9LuisMartinGarcia.pdf)

**Description:**
Adversaries may attach filters to a network socket to monitor and activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell. To establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria. Filters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.

---

### Indicator Removal from Tools

**Created:** 2017-05-31T21:30:54.176Z  
**Modified:** 2020-03-20T15:22:53.835Z  
**ID:** attack-  
**Name:** Indicator Removal from Tools  
**Type:** attack-pattern  
**Version:** 1.0  
**Mitre Attack Spec Version:** 2.1.0  
**Domains:** enterprise-attack  
**Subtechnique:** false  
**Platforms:** Linux, macOS, Windows  
**Kill Chain Phases:** defense-evasion  
**Defense Bypassed:** Log analysis, Host intrusion prevention systems, Anti-virus  
**Detection:** The first detection of a malicious tool may trigger an anti-virus or other security tool alert. The alerting system should be thoroughly investigated beyond the initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.  
**Revoked:** true

**Description:**
If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may determine why the tool was detected, modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems. For example, if malware is detected with a file signature and quarantined by anti-virus software, an adversary who can determine that the malware was quarantined because of its file signature may use Software Packing or otherwise modify the file so it has a different signature, and then re-use the malware.

---

### Archive via Utility

**Created:** 2020-02-20T21:01:25.428Z  
**Modified:** 2023-04-14T19:28:21.394Z  
**ID:** attack-  
**Name:** Archive via Utility  
**Type:** attack-pattern  
**Version:** 1.2  
**Mitre Attack Spec Version:** 3.1.0  
**Domains:** enterprise-attack  
**Subtechnique:** true  
**Platforms:** Linux, macOS, Windows  
**Kill Chain Phases:** collection  
**Data Sources:** File: File Creation, Process: Process Creation, Command: Command Execution  
**Contributors:** Mayan Arora aka Mayan Mohan, Mark Wee  
**Detection:** Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.  
**External References:**
- [WinRAR Homepage](https://www.rarlab.com/)
- [WinZip Homepage](https://www.winzip.com/win/en/)
- [7zip Homepage](https://www.7-zip.org/)
- [diantz.exe_lolbas](https://lolbas-project.github.io/lolbas/Binaries/Diantz/)
- [Wikipedia File Header Signatures](https://en.wikipedia.org/wiki/List_of_file_signatures)

**Description:**
Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport. On Windows, `diantz` or `makecab` may be used to package collected files into a cabinet (.cab) file. `xcopy` on Windows can copy files and directories with a variety of options. Additionally, adversaries may use `certutil` to Base64 encode collected data before exfiltration. Third-party utilities, such as 7-Zip, WinRAR, and WinZip, can also be used to perform similar activities.

---

### VNC

**Created:** 2020-02-11T18:28:44.950Z  
**Modified:** 2023-03-30T21:01:46.879Z  
**ID:** attack-  
**Name:** VNC  
**Type:** attack-pattern  
**Version:** 1.1  
**Mitre Attack Spec Version:** 3.1.0  
**Domains:** enterprise-attack  
**Subtechnique:** true  
**Platforms:** Linux, macOS, Windows  
**System Requirements:** VNC server installed and listening for connections.  
**Kill Chain Phases:** lateral-movement  
**Data Sources:** Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation  
**Detection:** Use of VNC may be legitimate depending on the environment and how itâ€™s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC. On macOS systems, `log show "screensharingd\" and eventMessage contains "Authentication:"` can be used to review incoming VNC connection attempts for suspicious activity. Monitor for use of built-in debugging environment variables and test/default users on VNC servers, as these can leave openings for adversaries to abuse.  
**External References:**
- [The Remote Framebuffer Protocol](https://datatracker.ietf.org/doc/html/rfc6143#section-7.2.2)
- [MacOS VNC software for Remote Desktop](https://support.apple.com/guide/remote-desktop/set-up-a-computer-running-vnc-software-apdbed09830/mac)
- [VNC Authentication](https://help.realvnc.com/hc/en-us/articles/360002250097-Setting-up-System-Authentication)
- [Hijacking VNC](https://int0x33.medium.com/day-70-hijacking-vnc-enum-brute-access-and-crack-d3d18a4601cc)
- [macOS root VNC login without authentication](https://www.tenable.com/blog/detecting-macos-high-sierra-root-account-without-authentication)
- [VNC Vulnerabilities](https://www.bleepingcomputer.com/news/security/dozens-of-vnc-vulnerabilities-found-in-linux-windows-solutions/)
- [Offensive Security VNC Authentication Check](https://www.offensive-security.com/metasploit-unleashed/vnc-authentication/)
- [Attacking VNC Servers PentestLab](https://pentestlab.blog/2012/10/30/attacking-vnc-servers/)
- [Havana authentication bug](http://lists.openstack.org/pipermail/openstack/2013-December/004138.html)
- [Apple Unified Log Analysis Remote Login and Screen Sharing](https://sarah-edwards-xzkc.squarespace.com/blog/2020/4/30/analysis-of-apple-unified-logs-quarantine-edition-entry-6-working-from-home-remote-logins)
- [Gnome Remote Desktop grd-settings](https://gitlab.gnome.org/GNOME/gnome-remote-desktop/-/blob/9aa9181e/src/grd-settings.c#L207)
- [Gnome Remote Desktop gschema](https://gitlab.gnome.org/GNOME/gnome-remote-desktop/-/blob/9aa9181e/src/org.gnome.desktop.remote-desktop.gschema.xml.in)

**Description:**
Adversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC). VNC is a platform-independent desktop sharing system that uses the RFB ("remote framebuffer") protocol to enable users to remotely control another computerâ€™s display by relaying the screen, mouse, and keyboard inputs over the network. VNC differs from Remote Desktop Protocol as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC. Adversaries may abuse VNC to perform malicious actions as the logged-on user, such as opening documents, downloading files, and running arbitrary commands. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.

---