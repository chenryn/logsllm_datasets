6.2 Path Selection Strategies
The bandwidth of Tor nodes is not uniformly distributed as Tor tries improve its performance by selecting nodes
depending on their bandwidth. As a result, a node with twice the bandwidth is twice as likely to be used for
a circuit. The real-life bandwidth distribution, however, contains nodes that are several hundred times as likely
as other nodes. (See the log-scale graph in Figure 10.) Consequently, a small number of nodes with a very high
bandwidth is used in a large percentage of circuits. If these nodes get compromised or similar new nodes are added
Preparing the weights
Computing sender anonymity guarantee
Computing recipient anonymity guarantee
Computing relationship anonymity guarantee
3.39 sec.
0.73 sec.
6.07 sec.
9.10 sec.
Figure 13: Performance of our anonymity monitors
23
 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50Anonymity bound δRecipient Anonymity PSTorSender Anonymity PSTorRelationship Anonymity PSTorRecipient Anonymity DistribuTorSender Anonymity DistribuTorRelationship Anonymity DistribuTor 0 0.2 0.4 0.6 0.8 114-02-0114-02-0814-02-1514-02-2214-03-01Anonymity bound δRecipient Anonymity PSTorSender Anonymity PSTorRelationship Anonymity PSTorRecipient Anonymity DistribuTorSender Anonymity DistribuTorRelationship Anonymity DistribuTorFigure 14: Impact of the choice of ports on recipient anonymity. We chose ε = 0. The graph depicts the value for
δ depending on the number of compromised nodes (0 to 50). We compared all settings against HTTPS only (port
443).
to the network by an adversary, this adversary can deanonymize many connections. Consequently the current path
selection of Tor produces obvious targets such that an attacker that compromises these points can deanonymize a
signiﬁcant part of the network.
Novel loss-less path selection: Re-balancing the workload. To reduce the risk posed by such high bandwidth
nodes we propose DISTRIBUTOR, a path selection algorithm that distributes the trust amongst exit and entry nodes
as evenly as possible. We observe that the exit bandwidth inherently is a bottleneck as only few nodes wish to be
used as exit nodes. Consequently, we ﬁrst focus on the exit nodes.
1. Distributing the bandwidth for exit nodes: We compute the exit bandwidth that Tor supports at a given
moment by summing over the bandwidth of all possible exit nodes and weighting them according to their tags and
the weights from the consensus. We then compute how evenly we can distribute the bandwidth by using small exit
nodes solely as exit nodes and restricting the usage of the largest exit nodes accordingly. In this process we make
sure that the previous exit bandwidth is still provided by our improved path selection algorithm.
2. Distributing the bandwidth for entry nodes: After the weight of nodes for their position as an exit node
has been set we compute the weights for entry nodes. We proceed just as before, by trying to preserve the entry
bandwidth and still distributing the trust in entry nodes as widely as possible.
Anonymity improvement. As we put a bound for the maximal weight of exit and entry nodes, we use their
remaining bandwidth by increasing their weight to be used as middle node, as this position is considered least
critical. The details of our redistribution can be found in Figure 15. In the following section we present experi-
mental results computed on the real consensus data of Tor and evaluate DISTRIBUTOR against Tor’s path selection
algorithm.
Naturally it would be possible to sacriﬁce performance of the Tor network for a much stronger improvement
in anonymity by reducing the targeted total bandwidth. In an extreme case one could weight all nodes uniformly,
which would allow much stronger anonymity guarantees.
Note that we did not consider the case that the entry bandwidth poses a bottleneck for Tor. In this case, one
should change the order in which these calculations are made.
6.3 Lessons learned
Advantages of DistribuTor over PSTor. As expected, our DISTRIBUTOR algorithm signiﬁcantly improves
sender anonymity and also moderately improves recipient anonymity in all experiments. The only moderate
improvement of recipient anonymity is to be expected as the exit bandwidth inherently is a bottleneck of Tor. The
improvement in sender anonymity, however, is more signiﬁcant (see Figure 11). As the re-balancing path selection
algorithm does not affect Tor’s overall performance, it presents a possibility to improve the anonymity guarantees
at virtually no cost.
Change in the anonymity guarantees over time. Our monitors also allow to analyze whether and how the
anonymity guarantees vary over time. Such variations are the result of changes in the number of available servers,
24
 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50Anonymity bound δRecipient Anonymity 443+22+23+194 vs 443Recipient Anonymity 443+23 (Telnet) vs 443Recipient Anonymity 443+194 (IRC) vs 443Recipient Anonymity 443+22 (SSH) vs 443Recipient Anonymity 443 vs 443if node.bw  0 then return bw
7: else return 0
Figure 15: DistribuTor: Our redistribution of the bandwidths
their bandwidth and their exit policies. Figure 12 shows how the guarantees change over the course of a month
(February 2014).
Anonymity guarantees over the last years. As a long-time study analyzed the guarantees for the last 24 Months
in Figure 1 (c.f. Section 2). We smoothed the graph by computing the average anonymity for each day in order
to improve the readability. interestingly, the guarantees improve slightly over time, even though we allowed the
adversary to compromise a ﬁxed percentage of nodes, and thus, to compromise more nodes of its choice as the
Tor network grows in size.
Anonymity guarantees depending on the ports. The ports requested by the user signiﬁcantly impact the (recip-
ient) anonymity guarantees. In Figure 14 we show the recipient anonymity guarantees depending on the number
of compromised nodes for the 5’th of February. As settings we chose a multiplicative value of ε = 0 and we
disabled guards and did not restrict the path selection to fast or stable nodes.
6.4 The impact of a multiplicative factor
The deﬁnition of ANOA introduces a multiplicative factor in addition to the normal additive factor (that often
sufﬁces to describe the success probability of an adversary). This factor allows for accounting for various events
in which an adversary might gain information that may even lead to a non-negligible advantage without overesti-
mating these events.
The experiments show that such a factor often only plays a minor role, as the probability to completely
deanonymize a user is for most settings higher than the probability to just learn some information about them.
Recipient anonymity in a setting with a weaker adversary, that compromises no, or only a very limited amount of
nodes presents a noteworthy exception. Recall that for recipient anonymity we assume that the ISP of the user is
compromised, which means that the adversary can see which entry node the user connects to. For different ports
the probability of choosing these entry nodes, however, will be different, because they might also be possible
exit nodes, or related to possible exit nodes. For PSTOR, an adversary that compromises no (only a very limited
25
Figure 16: Impact of a multiplicative factor on recipient anonymity. We chose values for ε of ε = 0.25 for one
setting and ε = 0 for the other setting. The graph depicts the value for δ computed by the monitor for both path
selection algorithms. The scenarios are: HTTPS + IRC vs. HTTPS
number of) nodes can have already a non-negligible advantage in guessing which port a user might choose, which
can either be expressed by a multiplicative factor and a δ of zero, or by a non-negligible δ. (See Figure 16.) Notice
that for DISTRIBUTOR the value for δ does not reach zero, as the redistribution of exit bandwidth introduces a
small (distinguishing) event in which the adversary can win without compromising nodes.
7 Conclusion & Future Work
This work presents a framework for rigorously assessing the degree of anonymity in the Tor network: MATOR.
We carefully address the impact of user anonymity by real-life characteristics of Tor, such as its path selection
algorithm, Tor consensus data, and the preferences and the connections of the user. The anonymity assessment
is derived from a theoretical framework for anonymous communication networks. To obtain such a theoretical
framework that suits our needs, we extended the ANOA framework [6]: a general framework for anonymous
communication networks. Using MATOR together with Tor’s publicly available consensus and server descriptor
data, we developed the ﬁrst real-time anonymity monitor. We apply this real-time monitor to archived data of the
Tor network, using Tor Metrics data [29]. Based on the evaluation of these experiments, we propose an alternative
path selection algorithm DISTRIBUTOR. We illustrate by our experiments that DISTRIBUTOR provides stronger
anonymity guarantees without decreasing the overall performance of the Tor network.
A natural next step is the integration of MATOR to the actual Tor code. An interesting direction for future
research is modeling the recently proposed congestion-aware path selection algorithm [32]. This path selection
improves the overall performance of Tor, but reduces the anonymity guarantees of Tor. It would be great to see
whether it is possible to compute in real-time a bound on the loss of anonymity loss of this more efﬁcient path
selection.
For future work, we also leave the application of the MATOR framework to Tor hidden services. A real-
time anonymity monitor for a hidden service could be used to automatically disconnect from Tor whenever the
anonymity bounds drop below a certain threshold.
Acknowledgments. We would like to thank the anonymous reviewers for their helpful comments and Marcin
Slowik for revising the code and implementing MATOR for relationship anonymity. This work was supported by
the German Ministry for Education and Research (BMBF) through funding for the Center for IT-Security, Privacy
and Accountability (CISPA) and the German Universities Excellence Initiative.
References
[1] Source-code of MATor. available at https://www.infsec.cs.uni-saarland.de/projects/
anonymity-guarantees/mator.html.
[2] SQLite. http://www.sqlite.org/.
[3] The Boost C+ Libraries. http://www.boost.org.
26
 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50Anonymity bound δRecipient Anonymity PSTorRecipient Anonymity with eps PSTorRecipient Anonymity DistribuTorRecipient Anonymity with eps DistribuTor[4] Masoud Akhoondi, Curtis Yu, and Harsha V. Madhyastha. LASTor: A Low-Latency AS-Aware Tor Client.
In Proc. of the 2012 IEEE Symposium on Security and Privacy (S& P), pages 476–490. IEEE Computer
Society, 2012.
[5] Michael Backes, Ian Goldberg, Aniket Kate, and Esfandiar Mohammadi. Provably Secure and Practical
Onion Routing. In Proc. 26st IEEE Symposium on Computer Security Foundations (CSF), pages 369–385,
2012.
[6] Michael Backes, Aniket Kate, Praveen Manoharan, Sebastian Meiser, and Esfandiar Mohammadi. Anoa: A
framework for analyzing anonymous communication protocols. In Computer Security Foundations Sympo-
sium (CSF), 2013 IEEE 26th, pages 163–178. IEEE, 2013.
[7] Michael Backes, Aniket Kate, Praveen Manoharan, Sebastian Meiser, and Esfandiar Mohammadi. AnoA:
A Framework For Analyzing Anonymous Communication Protocols — Uniﬁed Deﬁnitions and Analyses
of Anonymity Properties. IACR Cryptology ePrint Archive, Report 2014/087, 2014. available at http:
//eprint.iacr.org/2014/087.
[8] Xiang Cai, Xin Cheng Zhang, Brijesh Joshi, and Rob Johnson. Touching From a Distance: Website Finger-
printing Attacks and Defenses. In Proceedings of the 19th ACM Conference on Computer and Communica-
tions Security (CCS), pages 605–616, 2012.
[9] Sambuddho Chakravarty, Angelos Stavrou, and Angelos D. Keromytis. Trafﬁc Analysis against Low-
Latency Anonymity Networks Using Available Bandwidth Estimation. In Proceedings of the 15th European
Symposium on Research in Computer Security (ESORICS), pages 249–267, 2010.
[10] Cynthia Dwork. Differential Privacy. In ICALP (2), pages 1–12, 2006.
[11] Matthew Edman and Paul Syverson. As-awareness in tor path selection. In Proceedings of the 16th ACM
Conference on Computer and Communications Security, CCS ’09, pages 380–389, New York, NY, USA,
2009. ACM.
[12] Nathan S. Evans, Roger Dingledine, and Christian Grothoff. A Practical Congestion Attack on Tor Using
Long Paths. In Proceedings of the 18th USENIX Security Symposium (USENIX), pages 33–50, 2009.
[13] J. Feigenbaum, A. Johnson, and P. F. Syverson. A Model of Onion Routing with Provable Anonymity. In
Proc. 11th Conference on Financial Cryptography and Data Security (FC), pages 57–71, 2007.
[14] J. Feigenbaum, A. Johnson, and P. F. Syverson. Probabilistic Analysis of Onion Routing in a Black-Box
Model. In Proc. 6th ACM Workshop on Privacy in the Electronic Society (WPES), pages 1–10, 2007.
[15] Joan Feigenbaum, Aaron Johnson, and Paul F. Syverson. Probabilistic Analysis of Onion Routing in a
Black-Box Model. ACM Transactions on Information and System Security (TISSEC), 15(3):14, 2012.
[16] Nethanel Gelernter and Amir Herzberg. On the limits of provable anonymity. In Proc. 12th ACM Workshop
on Privacy in the Electronic Society (WPES), pages 225–236, 2013.
[17] Yossi Gilad and Amir Herzberg. Spying in the Dark: TCP and Tor Trafﬁc Analysis. In Proceedings of the
12th Privacy Enhancing Technologies Symposiun (PETS), pages 100–119, 2012.
[18] Xun Gong, Negar Kiyavash, and Nikita Borisov. Fingerprinting Websites using Remote Trafﬁc Analysis. In
Proceedings of the 17th ACM Conference on Computer and Communications Security (CCS), pages 684–
686, 2010.
[19] Alejandro Hevia and Daniele Micciancio. An Indistinguishability-Based Characterization of Anonymous
Channels. In Proc. 8th Privacy Enhancing Technologies Symposium (PETS), pages 24–43, 2008.
[20] Nicholas Hopper, Eugene Y. Vasserman, and Eric Chan-Tin. How much anonymity does network latency
leak? ACM Transactions on Information and Systems Security (TISSEC), 13(2):13, 2010.
[21] Amir Houmansadr and Nikita Borisov. SWIRL: A Scalable Watermark to Detect Correlated Network Flows.
In Proceedings of the 18th Annual Network & Distributed System Security Symposium (NDSS), 2011.
[22] Aaron Johnson, Chris Wacek, Rob Jansen, Micah Sherr, and Paul Syverson. Users get routed: Trafﬁc
correlation on tor by realistic adversaries. In Proceedings of the 2013 ACM SIGSAC conference on Computer
& communications security, pages 337–348. ACM, 2013.
27
[23] Aaron M Johnson, Paul Syverson, Roger Dingledine, and Nick Mathewson. Trust-based anonymous com-
In Proceedings of the 18th ACM conference on
munication: Adversary models and routing algorithms.
Computer and communications security, pages 175–186. ACM, 2011.
[24] Zhen Ling, Junzhou Luo, Yang Zhang, Ming Yang, Xinwen Fu, and Wei Yu. A Novel Network Delay
based Side-Channel Attack: Modeling and Defense. In Proceedings of the 31st Annual IEEE International
Conference on Computer Communications (INFOCOM), pages 2390–2398, 2012.
[25] Prateek Mittal, Ahmed Khurshid, Joshua Juen, Matthew Caesar, and Nikita Borisov. Stealthy Trafﬁc Anal-
ysis of Low-Latency Anonymous Communication Using Throughput Fingerprinting. In Proceedings of the
18th ACM Conference on Computer and Communications Security (CCS), pages 215–226, 2011.
[26] Gavin O’Gorman and Stephen Blott. Improving Stream Correlation Attacks on Anonymous Networks. In
Proceedings of the 24th ACM Symposium on Applied Computing (SAC), pages 2024–2028, 2009.
[27] Lasse Øverlier and Paul Syverson. Locating hidden servers. In Proceedings of the 2006 IEEE Symposium
on Security and Privacy, May 2006.
[28] Andriy Panchenko, Lukas Niessen, Andreas Zinnen, and Thomas Engel. Website Fingerprinting in Onion
In Proceedings of the 10th ACM Workshop on Privacy in the
Routing based Anonymization Networks.
Electronic Society (WPES), pages 103–114, 2011.
[29] Tor Metrics Portal. https://metrics.torproject.org/. Accessed in May 2014.
[30] The Tor Project. https://www.torproject.org/. Accessed in May 2014.
[31] Chris Wacek, Henry Tan, Kevin S Bauer, and Micah Sherr. An empirical evaluation of relay selection in tor.
In Proc. 20th Annual Network & Distributed System Security Symposium (NDSS), 2013.
[32] Tao Wang, Kevin Bauer, Clara Forero, and Ian Goldberg. Congestion-aware path selection for tor.
Financial Cryptography and Data Security, pages 98–113. Springer, 2012.
In
[33] Tao Wang, Xiang Cai, Rishab Nithyanand, Rob Johnson, and Ian Goldberg. Effective Attacks and Provable
Defenses for Website Fingerprinting. In Proc. 23th USENIX Security Symposium (USENIX), 2014.
[34] Matthew Wright, Micah Adler, Brian Neil Levine, and Clay Shields. Defending Anonymous Communication
Against Passive Logging Attacks. In Proc. 24th IEEE Symposium on Security and Privacy, pages 28–43,
2003.
28