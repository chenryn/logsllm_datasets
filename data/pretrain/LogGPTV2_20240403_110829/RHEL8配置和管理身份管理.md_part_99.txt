    ```
3.  生成
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-member-allow_retrieve_keytab-present.yml`{.literal}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/service/service-member-allow_retrieve_keytab-present.yml /usr/share/doc/ansible-freeipa/playbooks/service/service-member-allow_retrieve_keytab-present-copy.yml
    ```
4.  打开复制的文件
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-member-allow_retrieve_keytab-present-copy.yml`{.literal}
    以进行编辑：
5.  调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `ipaservice`{.literal} 任务的 `name`{.literal} 变量设置为
        HTTP 服务的主体。在当前示例中，它是
        [**HTTP/client.idm.example.com**]{.strong}
    -   在 `allow_retrieve_keytab_group:`{.literal} 部分中指定 IdM
        用户的名称。在当前示例中，是 [**user01**]{.strong}。
    -   在 `allow_retrieve_keytab_group:`{.literal} 部分中指定 IdM
        用户组的名称。
    -   在 `allow_retrieve_keytab_group:`{.literal} 部分中指定 IdM
        主机的名称。
    -   在 `allow_retrieve_keytab_group:`{.literal} 部分中指定 IdM
        主机组的名称。
    -   使用 `tasks`{.literal} 部分中的 `name 变量指定`{.literal}
        任务的名称。
        在适应当前示例后，复制的文件类似如下：
    :::
    ``` literallayout
    ---
    - name: Service member allow_retrieve_keytab present
      hosts: ipaserver
      become: true
      tasks:
      - name: Service HTTP/client.idm.example.com members allow_retrieve_keytab present for user01
        ipaservice:
          ipaadmin_password: Secret123
          name: HTTP/client.idm.example.com
          allow_retrieve_keytab_user:
          - user01
          action: member
    ```
6.  保存该文件。
7.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/service/service-member-allow_retrieve_keytab-present-copy.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 IdM 用户身份 SSH 到 IdM 服务器，并具有权限检索 HTTP 服务的
    keytab:
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    ```
2.  使用 `ipa-getkeytab`{.literal} 命令和 `-r`{.literal} 选项来检索
    keytab：
    ``` literallayout
    $ ipa-getkeytab -r -s server.idm.example.com -p HTTP/client.idm.example.com -k /etc/httpd/conf/krb5.keytab
    ```
    `s 选项指定`{.literal} 您要从中检索 keytab
    的密钥分发中心(KDC)服务器。
    `p 选项指定`{.literal} 您要检索的 keytab 主体。
    `k 选项指定`{.literal} 您要将检索到的密钥附加到的 keytab
    文件。如果文件不存在，则会创建此文件。
:::
如果命令不产生错误，您以 [**user01**]{.strong} 身份成功检索了
[**HTTP/client.idm.example.com 的**]{.strong} keytab。
:::
::: section
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-a-kerberos-principal-alias-of-a-service-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible}使用 Ansible playbook 确保存在服务的 Kerberos 主体别名 {.title}
:::
在某些情况下，IdM 管理员可启用 IdM 用户、主机或服务使用 Kerberos
主体别名进行身份验证。这些情况包括：
::: itemizedlist
-   用户名已更改，但该用户应该能够使用先前和新用户名登录系统。
-   即使 IdM Kerberos
    域与电子邮件域不同，用户也需要使用电子邮件地址登录。
:::
本节论述了如何为 [**client.idm.example.com 上运行的
[**HTTP/mycompany.idm.example.com**]{.strong} 创建
HTTP/mycompany.example.com**]{.strong} 主体别名。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您已在主机上 [设置了 HTTP
    服务](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html#setting-up-a-single-instance-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs "设置单实例 Apache HTTP 服务器"){.link}。
-   您已 [将 HTTP 服务注册到
    IdM。](#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-presence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible "使用 Ansible playbook 在 IdM 中存在 HTTP 服务"){.link}
-   设置 HTTP 的主机是一个 IdM 客户端。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal} ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开 `inventory.file`{.literal}，并在 `[ipaserver]`{.literal}
    部分中定义您要配置的 IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present.yml`{.literal}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present.yml /usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present-copy.yml
    ```
4.  打开
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present-copy.yml`{.literal}
    Ansible playbook 文件进行编辑。
5.  通过更改以下内容来调整文件：
    ::: itemizedlist
    -   由 `ipaadmin_password`{.literal} 变量指定的 IdM 管理员密码。
    -   通过 `name`{.literal}
        变量指定的服务名称。这是服务的规范主体名称。在当前示例中，它是
        [**HTTP/client.idm.example.com**]{.strong}。
    -   由主体变量指定的 Kerberos `主体`{.literal} 别名。这是您要添加到
        `name`{.literal} 变量定义的服务的别名。在当前示例中，它是
        [**host/mycompany.idm.example.com**]{.strong}。
    -   由 `tasks`{.literal} 部分中 `name`{.literal}
        变量指定的任务名称。
        在适应当前示例后，复制的文件类似如下：
    :::
    ``` literallayout
    ---
    - name: Service member principal present
      hosts: ipaserver
      become: true
      tasks:
      - name: Service HTTP/client.idm.example.com member principals host/mycompany.idm.exmaple.com present
        ipaservice:
          ipaadmin_password: Secret123
          name: HTTP/client.idm.example.com
          principal:
            - host/mycompany.idm.example.com
          action: member
    ```
6.  保存该文件。
7.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/service/service-member-principal-present-copy.yml
    ```
:::
如果运行 playbook 会导致 0 个无法访问和 0 个失败的任务，您已成功为
[**HTTP [**/client.idm.example.com 服务创建了
host/mycompany**]{.strong}.idm.example.com**]{.strong} Kerberos 主体。
::: itemizedlist
**其它资源**
-   如需有关 Kerberos 主体别名并在不使用 Ansible 的情况下管理这些
    [别名的更多信息，请参阅为用户、主机和服务管理 Kerberos
    主体别名。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/linux_domain_identity_authentication_and_policy_guide/managing-kerberos-aliases){.link}
:::
:::
::: section
::: titlepage
# []{#ensuring-the-presence-and-absence-of-services-in-idm-using-ansible_configuring-and-managing-idm.html#ensuring-the-absence-of-an-http-service-in-idm-using-an-ansible-playbook_ensuring-the-presence-and-absence-of-services-in-idm-using-ansible}使用 Ansible playbook 确保 IdM 中缺少 HTTP 服务 {.title}
:::
本节论述了如何从 IdM 取消滚动服务。更具体地说，它描述了如何使用 Ansible
playbook 来确保 IdM 中缺少名为
[**HTTP/client.idm.example.com**]{.strong} 的 HTTP 服务器。
::: itemizedlist
**先决条件**
-   您有 IdM 管理员密码。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal} ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开 `inventory.file`{.literal}，并在 `[ipaserver]`{.literal}
    部分中定义您要配置的 IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent.yml`{.literal}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent.yml /usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent-copy.yml
    ```
4.  打开
    `/usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent-copy.yml`{.literal}
    Ansible playbook 文件进行编辑。
5.  通过更改以下内容来调整文件：
    ::: itemizedlist
    -   由 `ipaadmin_password`{.literal} 变量定义的 IdM 管理员密码。
    -   HTTP 服务的 Kerberos 主体，由 `ipaservice`{.literal} 任务
        `的名称`{.literal} 变量定义。
        在适应当前示例后，复制的文件类似如下：
    :::
    ``` literallayout
    ---
    - name: Playbook to manage IPA service.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure service is absent
      - ipaservice:
          ipaadmin_password: Secret123
          name: HTTP/client.idm.example.com
          state: absent
    ```
6.  保存并退出文件。
7.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file /usr/share/doc/ansible-freeipa/playbooks/service/service-is-absent-copy.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 IdM 管理员身份登录 IdM Web UI。
2.  导航到 `Identity`{.literal} → `Services`{.literal}。
:::
如果您无法在 [**Services**]{.strong} 列表中看到
[**HTTP/PI:EMAIL**]{.strong}
服务，则已成功确保了在 IdM 中缺少
HTTP/PI:EMAIL 服务。
::: itemizedlist
**其它资源**
-   您可以查看 Ansible playbook 示例，以确保 IdM 中是否存在服务，包括在
    `/usr/share/doc/ansible -freeipa/ 目录中可用的README-`{.literal}
    service.md``{=html} Markdown 文件中可能的变量列表。
-   您可以查看 Ansible playbook 示例，以确保
    `/usr/share/doc/ansible-freeipa/playbooks/config`{.literal} 目录中的
    IdM 中存在和不存在服务。
:::
:::
:::
[]{#enabling-ad-user-to-administer-idm_configuring-and-managing-idm.html}
::: chapter
::: titlepage
# []{#enabling-ad-user-to-administer-idm_configuring-and-managing-idm.html#enabling-ad-user-to-administer-idm_configuring-and-managing-idm}第 68 章 启用 AD 用户管理 IdM {.title}
:::
::: section
::: titlepage
# []{#enabling-ad-user-to-administer-idm_configuring-and-managing-idm.html#idoverrides-to-allow-ad-user-to-administer-idm-fin_configuring-and-managing-idm}AD 用户的 ID 覆盖 {.title}
:::
在 Red Hat Enterprise Linux(RHEL)7 中，外部组成员资格允许 Active
Directory(AD)用户和组在 System Security Services
Daemon(SSSD)的帮助下访问 POSIX 环境中的身份管理(IdM)资源。
IdM LDAP 服务器具有自己的机制来授予访问控制。RHEL 8
引进了一个更新，它许作为 IdM 组成员为 AD 用户添加 ID 用户覆盖。ID
覆盖是指描述特定 Active Directory 用户或组属性应在特定 ID
视图中应如下所示的记录，本例中为默认信任视图。更新后，IdM LDAP
服务器可以为 AD 用户应用 IdM 组的访问控制规则。