## PostgreSQL Oracle 兼容性之 - insert all into, insert first into ... 多表写入  
### 作者       
digoal            
### 日期     
2018-07-13      
### 标签                                                           
PostgreSQL , Oracle , 多表批量写入 , insert all into , CTE    
----                                                           
## 背景     
Oracle支持 insert all 的语法，同时往多个表插入。  
https://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_9014.htm  
https://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_9014.htm#i2125362  
PostgreSQL可以通过CTE语法达到同样的效果。  
https://www.postgresql.org/docs/11/static/queries-with.html  
## Oracle insert all into 例子  
```  
create table a(id int, c1 int, c2 int);  
create table b(id int, c1 int, c2 int);  
set autotrace on;  
```  
```  
insert all   
  into a (id,c1) values (id, col1)  
  into b (id,c2) values (id, col2)  
select rownum as id, trunc(dbms_random.value(0, 100)) as col1, trunc(dbms_random.value(0, 100)) as col2 from dual connect by level  100000 and ottl  290000 THEN  -- 需要注意
      INTO special_orders
   WHEN ottl > 200000 THEN
      INTO large_orders
         VALUES(oid, ottl, sid, cid)
   SELECT o.order_id oid, o.customer_id cid, o.order_total ottl,
      o.sales_rep_id sid, c.credit_limit cl, c.cust_email cem
      FROM orders o, customers c
      WHERE o.customer_id = c.customer_id;
do language plpgsql $$
declare
  v_oid xx;
  v_ottl xx;
  v_sid xx;
  v_cid xx;
  v_cl xx;
  v_cem xx;
begin
  for v_oid,v_ottl,v_sid,v_cid,v_cl,v_cem in
    select o.order_id oid, o.customer_id cid, o.order_total ottl,
      o.sales_rep_id sid, c.credit_limit cl, c.cust_email cem
      FROM orders o, customers c
      WHERE o.customer_id = c.customer_id 
  loop
    case when v_ottl  100000 and ottl  290000)
      INTO large_orders select oid,ottl,sid,cid from tmp where ottl > 200000 and ottl =100;
INSERT 0 451
postgres=# select count(*) from t2;
 count 
-------
    49
(1 row)
postgres=# select count(*) from t3;
 count 
-------
   451
(1 row)
postgres=# select count(*) from t1;
 count 
-------
  1000
(1 row)
```
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")