Cost to
U1
V
A
1
0
3
5
From
X
4
3
0
3
2
6
5
2
5
0
Cost to
U1
A
X
V
V
1
0
3
3
5
From
4
3
0
3
2
Z
6
0
Problem6
The wording of this question was a bit ambiguous. We meant this to mean, *the number
of iterations from when the algorithm is run for the first time (that is, assuming the only
information the nodes initially have is the cost to their nearest neighbors). We assume
that the algorithm runs synchronously (that is, in one step, all nodes compute their
distance tables at the same time and then exchange tables).
At each iteration, a node exchanges distance tables with its neighbors. Thus, if you are
node A, and your neighbor is B, all of B's neighbors (which will all be one or two hops
from you) will know the shortest cost path of one or two hops to you after one iteration
(i.e., after B tells them its cost to you).
Let d be the “diameter" of the network - the length of the longest path without loops
between any two nodes in the network. Using the reasoning above, after d  1 iterations,
all nodes will know the shortest path cost of d or fewer hops to all other nodes. Since
any path with greater than d hops will have loops (and thus have a greater cost than that
path with the loops removed), the algorithm will converge in at most d 1 iterations.
ASIDE: if the DV algorithm is run as a result of a change in link costs, there is no a priori
bound on the number of iterations required until convergence unless one also specifies a
bound on link costs.
---
## Page 94
Problem7
a)Dx(w) = 2, Dx(y) = 4, Dx(u) = 7
b)First consider what happens if c(x,y) changes. If c(x,y) becomes larger or smaller (as
long as c(x,y) >=1) , the least cost path from x to u will still have cost at least 7. Thus
a change in c(x,y) (if c(x,y)>=1) will not cause x to inform its neighbors of any
changes.
If c(x,y)= 8 6, then the least cost path now passes through y and
has cost 11; again x will inform its neighbors of this new cost.
c)Any change in link cost c(x,y) (and as long as c(x,y) >=1) will not cause x to inform
its neighbors of a new minimum-cost path to u .
Problem8
Node x table
Cost to
X
y
X
0
3
From
d
y
C
Cost to
X
0
X
3
4
From y
3
0
6
Z
4
6
0
Node y table
Cost to
X
y
Z
X
From
y
3
0
6
Z
o0
a0
o0
Cost to
y
---
## Page 95
X
0
From y
3
0
Z
4
6
Node z table
Cost to
X
y
Z
X
00
From
y
00
Z
4
6
0
Cost to
X
y
Z
X
0
3
4
From
3
0
6
7
4
6
0
Problem9
NO, this is because that decreasing link cost won’t cause a loop (caused by the next-hop
relation of between two nodes of that link). Connecting two nodes with a link is
equivalent to decreasing the link weight from infinite to the finite weight.
Problem 10
At each step, each updating of a node’s distance vectors is based on the Bellman-Ford
equation, i.e., only decreasing those values in its distance vector. There is no increasing
in values. If no updating, then no message will be sent out. Thus, D(x) is non-increasing.
Since those costs are finite, then eventually distance vectors will be stabilized in finite
steps.
Problem 11
a)
Router Z
Informs w, D(x)=0
Informs y,D(x）=6
Router w
Informs y, Dw(x)∞0
Informs z, Du(x)=5
Router y
Informs w, D,(x)4
Informs z, Dy(x)=4
b)Yes, there will be a count-to-infinity problem. The following table shows the routing
converging process. Assume that at time to, link cost change happens. At time tl, y
updates its distance vector and informs neighbors w and z. In the following table,
"→" stands for “informs".
---
## Page 96
timeto
tl
t2
t3
1
Z
→w, D(x)=∞0
No change
→ w, D(x)∞)
→y,D(x)=6
→y,D(x)=11
W
→ y, Dw(x)=0
→y, Dw(x)=∞0
No change
→z,D(x)=5
>2,D(x)=10
→w, Dy(x)=4
→w, D(x)=9
No change
→w, Dy(x)=14
→z, D,(x)=4
→z,D（x)=
→z,D(x)=∞0
We see that w, y, z form a loop in their computation of the costs to router x. If we
continue the iterations shown in the above table, then we will see that, at t27, z detects
that its least cost to x is 50, via its direct link with x. At t29, w learns its least cost to x is
51 via z. At t30, y updates its least cost to x to be 52 (via w). Finally, at time t31, no
updating, and the routing is stabilized.
time
t27
t28
t29
t30
t31
Z
→ w, D(x)=50
via w, ∞0
→y, Dx(x)=50
via y, 55
via z, 50
M
→ y, Dw(x)=o0
→ y, Dw(x)=51
via w, 00
→z, Du(x)=50
→z,Du(x)=∞
via y, α0
via z, 51
→w, Dy(x)=53
→ w, Dy(x)= 0
via w, 52
→z, D(x)=0
→z, D(x)=52
via y, 60
via z, 53
c)cut the link between y and z.
Problem12
Since full AS path information is available from an AS to a destination in BGP, loop
detection is simple  if a BGP peer receives a route that contains its own AS number in
the AS path, then using that route would result in a loop.
Problem 13
The chosen path is not necessarily the shortest AS-path. Recall that there are many issues
to be considered in the route selection process. It is very likely that a longer loop-free
path is preferred over a shorter loop-free path due to economic reason. For example, an
AS might prefer to send traffic to one neighbor instead of another neighbor with shorter
AS distance.
Problem 14
a)eBGP
b) iBGP
---
## Page 97
c)eBGP
d) iBGP
Problem 15
a)I1 because this interface begins the least cost path from 1d towards the gateway router
1c.
b) I2. Both routes have equal AS-PATH length but I2 begins the path that has the closest
NEXT-HOP router.
c)I1. I1 begins the path that has the shortest AS-PATH.
Problem 16
One way for C to force B to hand over all of B’s traffic to D on the east coast is for C to
only advertise its route to D via its east coast peering point with C.
Problem 17
C
y
C
X's view of the topology
W's view of the topology
In the above solution, X does not know about the AC link since X does not receive an
advertised route to w or to y that contain the AC link (i.e., X receives no advertisement
containing both AS A and AS C on the path to a destination.
Problem 18
BitTorrent file sharing and Skype P2P applications.
Consider a BitTorrent file sharing network in which peer 1, 2, and 3 are in stub networks
W, X, and Y respectively. Due the mechanism of BitTorrent’s file sharing, it is quire
possible that peer 2 gets data chunks from peer 1 and then forwards those data chunks to
3. This is equivalent to B forwarding data that is finally destined to stub network Y.
---
## Page 98
Problem 19
A should advise to B two routes, AS-paths A-W and A-V
A should advise to C only one route, A-V.
C receives AS paths: B-A-W, B-A-V, A-V
Problem20
Since Z wants to transit Y's traffic, Z will send route advertisements to Y. In this manner,
when Y has a datagram that is destined to an IP that can be reached through Z, Y will
have the option of sending the datagram through Z. However, if Z advertizes routes to Y
Y can re-advertize those routes to X. Therefore, in this case, there is nothing Z can do
from preventing traffic from X to transit through Z.
Problem 21
Request response mode will generally have more overhead (measured in terms of the
number of messages exchanged) for several reasons. First, each piece of information
generates only a single message to the sender. If the manager really only wants to be
notified when a condition occurs, polling has more overhead, since many of the polling
messages may indicate that the waited-for condition has not yet occurred. Trapping
generates a message only when the condition occurs.
Trapping will also immediately notify the manager when an event occurs. With polling
the manager needs will need to wait for half a polling cycle (on average) between when
the event occurs and the manager discovers (via its poll message) that the event has
occurred.
If a trap message is lost, the managed device will not send another copy. If a poll
message, or its response, is lost the manager would know there has been a lost message
(since the reply never arrives). Hence the manager could repoll, if needed.
Problem22
Often, the time when network management is most needed is in times of stress, when the
network may be severely congested and packets are being lost. With SNMP running over
TCP, TCP's congestion control would cause SNMP to back-off and stop sending
messages at precisely the time when the network manager needs to send SNMP
messages.
---
## Page 99
Chapter6ReviewQuestions
1.The transportation mode, e.g., car, bus, train, car.
2. Although each link guarantees that an IP datagram sent over the link will be received
at the other end of the link without errors, it is not guaranteed that IP datagrams will
arrive at the ultimate destination in the proper order. With IP, datagrams in the same
TCP connection can take different routes in the network, and therefore arrive out of
order. TCP is still needed to provide the receiving end of the application the byte
stream in the correct order. Also, IP can lose packets due to routing loops or
equipment failures.
3. Framing: there is also framing in IP and TCP; link access; reliable delivery: there is
also reliable delivery in TCP; flow control: there is also flow control in TCP; error
detection: there is also error detection in IP and TCP; error correction; full duplex:
TCP is also full duplex.
4.  There will be a collision in the sense that while a node is transmitting it will start to
receive a packet from the other node.
5. Slotted Aloha: 1, 2 and 4 (slotted ALOHA is only partially decentralized, since it
requires the clocks in all nodes to be synchronized). Token ring: 1, 2, 3, 4.
6.After the 5 collision, the adapter chooses from {0, 1, 2..., 31}. The probability that
it chooses 4 is 1/32. It waits 204.8 microseconds.
7.  In polling, a discussion leader allows only one participant to talk at a time, with each
participant getting a chance to talk in a round-robin fashion. For token ring, there isn't
a discussion leader, but there is wine glass that the participants take turns holding. A
participant is only allowed to talk if the participant is holding the wine glass.
8. When a node transmits a frame, the node has to wait for the frame to propagate
around the entire ring before the node can release the token. Thus, if L/R is small as
compared to tprop, then the protocol will be inefficient.
9. 24* MAC addresses; 232 IPv4 addresses; 2128 IPv6 addresses.
10. C's adapter will process the frames, but the adapter will not pass the datagrams up the
protocol stack. If the LAN broadcast address is used, then C's adapter will both
11. An ARP query is sent in a broadcast frame because the querying host does not which
adapter address corresponds to the IP address in question. For the response, the
sending node knows the adapter address to which the response should be sent, so
there is no need to send a broadcast frame (which would have to be processed by all
the other nodes on the LAN).
---
## Page 100
12. No it is not possible. Each LAN has its own distinct set of adapters attached to it, with
each adapter having a unique LAN address.
13. The three Ethernet technologies have identical frame structures.
14. 2 (the internal subnet and the extermal internet)
15. In 802.1Q there is a 12- bit VLAN identifier. Thus 212 = 4,096 VLANs can be
supported.
16. We can string the N switches together. The first and last switch would use one port
for trunking; the middle N-2 switches would use two ports. So the total number of
ports is 2+ 2(N-2) = 2N-2 ports.
Chapter6Problems
Problem 1
I0III
0 1 1 0 0
10 01 0
1 1 0 1 1
000I1
Problem2
Suppose we begin with the initial two-dimensional parity matrix:
0 000
1 11 1
10I0
010I
With a bit error in row 2, column 3, the parity of row 2 and column 3 is now wrong in the
matrix below:
0000
1 1 0 1
I0 I0
1 0 1 0
Now suppose there is a bit error in row 2, column 2 and column 3. The parity of row 2 is
now correct! The parity of columns 2 and 3 is wrong, but we can't detect in which rows
the error occurred!