行业: 通用  
功能期望: 可配置idle 会话超时断开的时间  
解决什么问题: 降低连接, 当某些异常请求把PG连接打爆后, IDLE一段时间自动释放.  
期望功能分级: 有就一定用  
行业: 通用  
功能期望: 可配置连接生命周期, 例如一个连接生存若干分钟后, 当它处于idle时立即释放(主动断开与客户端的连接)  
解决什么问题: 某些PaaS类业务, 一个连接的存活时间越长, 随着访问的PG元数据增加, 会导致会话的本地内存越来越多(不会释放), 连接多会导致OOM. 通过global cache也能解决这类问题.  
期望功能分级: 有就一定用  
行业: 物联网-新能源  
功能期望: 三权分立  
解决什么问题: 提高系统安全访问控制  
期望功能分级: 有就一定用  
替代方案: 基于role的acl访问权限细化  
开发提示: 类似系统级的三权分立：admin、secure、audit  
行业: 通用  
功能期望: 优化Gin索引范围查询性能  
解决什么问题: Gin索引在任意字段组合的等值查询条件下相比Btree，在性能和消耗存储空间上有很大优势，可以部分替代搜索服务。但Gin索引的范围查询效率很低，范围左右边界会被分别扫描再把结果合并，导致有范围查询字段还需要单拎出来建Btree索引，使用体验不好。  
期望功能分级: 有就一定用  
替代方案: Gin + Btree组合使用  
行业: 通用  
功能期望: 语句级超时HINT, 例如  
/*+ Set(statement_timeout "100ms") */ select * from abc where info like '%abcde%';  
解决什么问题: 防雪崩, 指定某些特定SQL的执行耗时上限  
期望功能分级: 有就一定用  
替代方案: 由于实现问题, pg_hint_plan目前无法对statement_timeout设置超时.  
行业：通用  
功能期望：  
库表级快照、时间点克隆、时间点flash back功能.  
场景:  
在企业paas服务场景, 每个数据库的不同table或schema或database会对应到软件服务中的某一个企业, 当这个企业的数据需要回退时, 不需要回退整个数据库实例.  
期望功能分级: 有就用  
行业：软件PaaS行业  
功能期望：  
数据库名、用户名隐藏, 用户只能看到指定的其他用户和指定的数据库.  
在元数据中直接隔离, server less功能.  
场景:  
在企业paas服务场景, 每个数据库会对应到软件服务中的某一个企业, 在元数据层面进行隔离.  
原始的PG版本数据库、账号都是全局数据, 全部可见, 虽然在连接、数据访问等方面有权限隔离, 但是元数据没有被隔离.  
期望功能分级: 有就用  
行业：互联网行业  
功能期望：  
基于sql特征规则限流的功能.  
在hook层面实现.  
目前仅支持用户、db、全局statement级别的timeout. 粒度较大.  
希望能能通过配置sql, qps来实现. 例如sql1: qps上限10000, sql2: qps上线1000. sql中支持变量配置, 例如select x from x where x;  
场景:  
防止雪崩.  
防止某些业务或个人提交某些sql把资源耗尽.  
期望功能分级: 有就用  
## 三、为什么PG扩展能力这么强    
### 1 hook    
基于HOOK, 在hook处增加处理逻辑. 例如, 串改执行计划, 统计qps, ddl回收站, sql防火墙等.     
```    
grep -i hook src/tools/pgindent/typedefs.list     
ClientAuthentication_hook_type    
CoerceParamHook    
ExecutorCheckPerms_hook_type    
ExecutorEnd_hook_type    
ExecutorFinish_hook_type    
ExecutorRun_hook_type    
ExecutorStart_hook_type    
ExplainOneQuery_hook_type    
FmgrHookEventType    
GucBoolAssignHook    
GucBoolCheckHook    
GucEnumAssignHook    
GucEnumCheckHook    
GucIntAssignHook    
GucIntCheckHook    
GucRealAssignHook    
GucRealCheckHook    
GucShowHook    
GucStringAssignHook    
GucStringCheckHook    
PGNoticeHooks    
PQsslKeyPassHook_type    
ParamCompileHook    
ParamFetchHook    
ParseParamRefHook    
ParserSetupHook    
PostParseColumnRefHook    
PreParseColumnRefHook    
ProcessUtility_hook_type    
VariableAssignHook    
VariableSubstituteHook    
check_password_hook_type    
create_upper_paths_hook_type    
emit_log_hook_type    
explain_get_index_name_hook_type    
fmgr_hook_type    
get_attavgwidth_hook_type    
get_index_stats_hook_type    
get_relation_info_hook_type    
get_relation_stats_hook_type    
join_search_hook_type    
needs_fmgr_hook_type    
object_access_hook_type    
openssl_tls_init_hook_typ    
planner_hook_type    
post_parse_analyze_hook_type    
row_security_policy_hook_type    
set_join_pathlist_hook_type    
set_rel_pathlist_hook_type    
shmem_startup_hook_type    
```    
```    
grep -r -i hook *|grep "\.h"    
grep -r -i hook *|grep "\.h"|grep typedef    
```    
### 2 开放接口    
- [ud function](https://www.postgresql.org/docs/current/xfunc.html)    
- [ud procedure](https://www.postgresql.org/docs/current/xproc.html)    
- [ud aggregation](https://www.postgresql.org/docs/current/xaggr.html)    
- [ud type](https://www.postgresql.org/docs/current/xtypes.html)    
- [ud operator](https://www.postgresql.org/docs/current/xoper.html)    
- [index extend](https://www.postgresql.org/docs/current/xindex.html)    
- [ud AM(index, table)](https://www.postgresql.org/docs/current/tableam.html)    
- [ud AM(index)](https://www.postgresql.org/docs/current/indexam.html)    
- [ud language handler](https://www.postgresql.org/docs/current/plhandler.html)    
- [ud fdw handler](https://www.postgresql.org/docs/current/fdwhandler.html)    
- [table sample method](https://www.postgresql.org/docs/current/tablesample-method.html)    
- [custom scan provider](https://www.postgresql.org/docs/current/custom-scan.html)    
- [wal custom generate](https://www.postgresql.org/docs/current/generic-wal.html)    
- [逻辑decode接口](https://www.postgresql.org/docs/current/logicaldecoding.html)
- [后台工作进程接口](https://www.postgresql.org/docs/current/bgworker.html)
- [spi 接口](https://www.postgresql.org/docs/current/spi.html)
- [ecpg接口](https://www.postgresql.org/docs/current/ecpg.html)
- [package io to extension](https://www.postgresql.org/docs/current/extend-extensions.html)     
## 参考    
https://github.com/digoal/blog/blob/master/README.md    
[《[未完待续] PostgreSQL\Greenplum Customer视角TODO》](../201710/20171017_01.md)      
内置插件    
https://www.postgresql.org/docs/current/contrib.html    
外围插件    
https://download.postgresql.org/pub/projects/pgFoundry/    
https://api.pgxn.org/src/    
https://www.postgresql.org/download/product-categories/    
https://www.postgresql.org/docs/current/external-extensions.html    
https://github.com/topics/postgresql-extension    
https://wiki.postgresql.org/wiki/PostgreSQL_derived_databases    
https://github.com/search?l=C&o=desc&q=postgresql&s=stars&type=Repositories    
https://osdn.net/softwaremap/trove_list.php?form_cat=66    
https://github.com/topics/postgresql?l=C&o=desc&s=stars    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")