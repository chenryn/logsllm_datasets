window of six days, and an alert threshold of three.
Beginning in December 2004, the IMS system observed
a signiﬁcant increase in activity on TCP port 42. This
increased activity was notable because Microsoft had re-
cently announced a new security vulnerability with the
Windows Internet Name Service (WINS) server compo-
nent of its Windows Server operating systems. The ac-
tivity also followed a vulnerability report from Immunity
Security on November 24, 2004 describing a remotely ex-
ploitable overﬂow in the WINS server component of Mi-
crosoft Windows. Payloads captured on TCP port 42 dur-
ing the event include sequences that are byte-for-byte iden-
tical to exploit code found in the wild following the vul-
nerability announcement. Although the attack was very
broadly scoped, it involved a small number of hosts and
only lasted a day. Because the IMS was broadly deployed,
it was able to quickly identify this small-scale event in time
to enable additional monitoring capabilities.
Another quick attack occurred on January 11, 2005,
when IMS observed a substantial increase in TCP port 6101
scanning. Approximately 600 sources were identiﬁed as
aggressively probing many of the distributed IMS sensors.
TCP port 6101 is used by the Veritas Backup Exec agent, a
network service that allows for remote system backup. On
December 16, 2004, iDefense announced a buffer overﬂow
enabling remote system-level access. Then, on January
11, exploit code was published for the vulnerability and on
the same day, IMS observed a large increase in activity on
TCP/6101. Payloads captured from the attack include se-
quences that are byte-for-byte identical to the exploit code.
Once again we see a very quick onset, suggesting the need
for an automated system able to rapidly react to new threat
activity.
Finally, in late January of 2005 IMS detected a worm/bot
targeted at the MySQL database server [19]. The worm/bot
propagated by randomly scanning for the Windows ver-
Figure 15: The effect of coverage on the number of alerts
generated.
of any of the parameters, with a parameter of one gener-
ating an event for nearly every event window (event when
the ratio of current to past is one). Drastic reductions in the
number of events are seen by event thresholds of three to
four.
Coverage represents the percentage of the total dark-
nets monitored that would have individually reported an
increase via our algorithm. Figure 15 shows the effect of
various coverage values as a ﬁlter on the number of events.
The majority of events generated by the algorithm are seen
at a very small handful of darknets. The majority of reduc-
tion in the number events occurs when only considering
events that are seen across more than 1/3 of the darknets.
7.2 Production Validation
To help validate our event generation algorithm, we com-
pared the events identiﬁed by our system with those iden-
tiﬁed by the broader security community. It is important to
highlight that our system has been in production use over
the past few months and has identiﬁed several critical new
threats. It is used by major network operators and govern-
ments around the world to quickly help identify new secu-
rity events on the Internet.
Over an observation period of four months, the IMS sys-
tem identiﬁed 13 unique events. Table 2 shows these events
grouped by port. Included in these events are the TCP/42
WINS scanning, the TCP/6101 Veritas Backup Exec agent
scanning, and the MySQL worm/bot on TCP/3306. These
events demonstrate the quick onset, short duration, and
global prevalence of many attacks. Figure 16 shows the
normalized number of unique source addresses detected at
the 23 IMS sensors for these events over time. As the oper-
ational test was underway before the completed parameti-
zation evaluation, the alerting algorithm used the following
250
Internet Measurement Conference 2005
USENIX Association
00.10.20.30.40.50.60.70.80.91Coverage0102030405060Eventsqualities.
8 Conclusion
Global threats are changing at an amazing rate, requiring
new innovative mechanisms for tracking and characteriz-
ing them. One approach to this problem involves hybrids
of darknets with honeyfarms. There are numerous hurdles
to this approach, but in this paper we investigated the most
important of these, scaling interactions between the dark-
nets and the honeyfarms. We examined several of the key
characteristics of trafﬁc at individual darknets that affect
the scalability of a hybrid system. In particular, we showed
that darknets are dominated by a small handful of source IP
addresses contacting the same destination ports repeatedly.
These characteristics allow source-based approaches to be
quite effective at reducing the number of packets a block
sees to a much smaller number of connections. We then
showed, however, that this does not hold across darknets;
neither the source IP addresses, nor to a lesser extent the
destination ports, appear frequently across darknets. While
some of this behavior can be explained by existing work
on darknet size, scanning rate, and time to detection, we
showed that much of it is the result of the targeted na-
ture of the attacks observed as well as the short on-time
of many random scanning hosts. This lack of overlap im-
plies that every additional new block added to a distributed
darknet monitor will likely bring with it its own sensor-
speciﬁc events. For a large collection of darknets to be ef-
fective, a new view of events and new methods of ﬁltering
are required. We then constructed a ﬁltering mechanism
that takes these two factors into account by including dis-
tributions of source IP addresses, rather than the source IP
addresses speciﬁcally, and the number of darknets observ-
ing an activity. We showed that this algorithm is effective
by examining several recent events, such as activity associ-
ated with new WINS vulnerability, Veritas vulnerabilities,
and the recent MY-SQL worm.
Acknowledgments
This work was supported by the Department of Homeland
Security (DHS) under contract number NBCHC040146,
the Advanced Research and Development Activity
(ARDA) under contract number NBCHC030104, and by
corporate gifts from Intel Corporation and Cisco Corpo-
ration. The authors would like to thank all of the IMS
participants for their help and suggestions. We would also
like to thank Joseph Rock, Jenn Burchill, Jose Nazario,
Dug Song, Robert Stone, and G. Robert Malan of Arbor
Networks and Larry Blunk, Bert Rossi, and Manish Karir
at Merit Network for their assistance and support.
Figure 16: The unique source IP addresses over time across
23 darknets to various TCP destination ports. Widely publi-
cized events are shown (from top to bottom TCP/42-WINS,
TCP/3306-MYSQL, TCP/6101-VERITAS).
sion of MySQL on TCP port 3306. The threat was unique
because it required interaction with a hidden IRC server
before a new instance would start to propagate. The IRC
channel was discovered by operators who shut it down, ef-
fectively eradicating the worm after a period of a few days.
This event shows the importance of having more detailed
information on a threat. Without observing the interaction
of the worm/bot with the IRC server, there would be no
way to discover the communication channel and thus ﬁnd
the simple way to stop the worm.
These three events help substantiate the detection ap-
proach and illustrate the value of automated distributed
forensics. To further conﬁrm these results and those listed
in Table 2, we searched for correlations between the port,
payloads, and time period of the events with reports from
other security data sources. With the exception of the Alt-
web and Squid SYN scans, each of these events has been
actively discussed in various security forums and corrob-
orated by other monitoring projects [37, 4]. There is also
evidence that the event identiﬁcation algorithm did not miss
any important events. Analysis of the NANOG, ISN, BUG-
TRAQ, FULL-DISCLOSURE, as well as the operator logs
from ISC and CERT, do not show any major detectable
events that were missed by the IMS system. In summary,
there is strong evidence that the system was able to iden-
tify all the major events during the 4 month period. More
time is clearly needed to fully validate the system, but the
current data suggests the approach has excellent ﬁltering
USENIX Association
Internet Measurement Conference 2005  
251
References
[1] Michael Bailey, Evan Cooke, Tim Battles, and Danny McPherson.
Tracking global threats with the Internet Motion Sensor. 32nd Meet-
ing of the North American Network Operators Group, October 2004.
[2] Michael Bailey, Evan Cooke, Farnam Jahanian, Jose Nazario, and
David Watson. The Internet Motion Sensor: A distributed black-
hole monitoring system. In Proceedings of Network and Distributed
System Security Symposium (NDSS ’05), San Diego, CA, February
2005.
[3] Michael Bailey, Evan Cooke, David Watson, Faranam Jahanian, and
Jose Nazario. The Blaster Worm: Then and Now. IEEE Security &
Privacy, 3(4):26–31, 2005.
[4] Lawrence Baldwin. My Net Watchman - Network Intrusion Detec-
tion and Reporting. http://www.mynetwatchman.com/, 2005.
[5] Bill Cheswick. An evening with Berferd in which a cracker is lured,
endured, and studied. In Proceedings of the Winter 1992 USENIX
Conference: January 20 — January 24, 1992, San Francisco, Cali-
fornia, pages 163–174, Berkeley, CA, USA, Winter 1992.
[6] Fred Cohen. A Short Course on Computer Viruses. John Wiley &
Sons, 2nd edition, April 1994.
[7] Evan Cooke, Michael Bailey, Z. Morley Mao, David Watson, and
Toward understanding distributed blackhole
In Proceedings of the 2004 ACM Workshop on Rapid
Farnam Jahanian.
placement.
Malcode (WORM-04), New York, October 29 2004. ACM Press.
[8] Team CYMRU. The darknet project. http://www.cymru.com/
Darknet/index.html, June 2004.
[9] David Dagon, Xinzhou Qin, Guofei Gu, Julian Grizzard, John
Levine, Wenke Lee, and Henry Owen. Honeystat: Local worm de-
tection using honeypots. In Recent Advances in Intrusion Detection,
7th International Symposium, (RAID 2004), Lecture Notes in Com-
puter Science, Sophia-Antipolis, French Riviera, France, October
2004. Springer.
[10] Stephanie Forrest, Steven A. Hofmeyr, Anil Somayaji, and
Thomas A. Longstaff. A sense of self for Unix processes. In Pro-
ceedings of the IEEE Symposium on Research in Security and Pri-
vacy, pages 120–128, Oakland, CA, May 1996.
[11] Andrea L. Foster. Colleges Brace for the Next Worm. The Chronicle
of Higher Education, 50(28), 2004.
[12] Joseph L. Hellerstein, Fan Zhang, and Shahabuddin Shahabuddin.
A statistical approach to predictive detection. Computer Networks
(Amsterdam, Netherlands: 1999), 35(1):77–95, January 2001.
[13] Cisco Systems
Inc.
Netﬂow services
and applications.
http://www.cisco.com/warp/public/cc/pd/iosw/ioft/
neflct/tech/napps wp.htm, 2002.
[14] Chuanyi Ji and Marina Thottan. Adaptive thresholding for proactive
network problem detection. In Third IEEE International Workshop
on Systems Management, pages 108–116, Newport, Rhode Island,
April 1998.
[15] Xuxian Jiang and Dongyan Xu. Collapsar: A VM-based architec-
ture for network attack detention center. In Proceedings of the 13th
USENIX Security Symposium, San Diego, CA, USA, August 2004.
[16] Samuel T. King and Peter M. Chen. Backtracking intrusions. In Pro-
ceedings of the 19th ACM Symposium on Operating Systems Princi-
ples (SOSP’03), pages 223–236, Bolton Landing, NY, USA, Octo-
ber 2003. ACM.
[17] Lad, Zhao, Zhang, Massey, and Zhang. Analysis of BGP update
surge during slammer worm attack. In International Workshop on
Distributed Computing: Mobile and Wireless Computing, LNCS,
volume 5, 2003.
[18] C. Leckie and R. Kotagiri. A probabilistic approach to detecting
network scans. In Proceedings of the Eighth IEEE Network Oper-
ations and Management Symposium (NOMS 2002), pages 359–372,
Florence, Italy, April 2002.
[19] Robert Lemos. MySQL worm halted. http://ecoustics-cnet.
com.com/MySQL+worm+halted/2100-7349 3-5555242.html,
January 2005.
[20] G. Robert Malan and Farnam Jahanian. An extensible probe ar-
chitecture for network protocol performance measurement. In Pro-
ceedings of ACM SIGCOMM, pages 177–185, Vancouver, British
Columbia, September 1998.
[21] David Moore, Vern Paxson, Stefan Savage, Colleen Shannon, Stuart
Staniford, and Nicholas Weaver. Inside the Slammer worm. IEEE
Security & Privacy, 1(4):33–39, 2003.
[22] David Moore, Colleen Shannon, Geoffrey M. Voelker, and Stefan
Savage. Network telescopes. Technical Report CS2004-0795, UC
San Diego, July 2004.
[23] David Moore, Geoffrey M. Voelker, and Stefan Savage.
Infer-
ring Internet denial-of-service activity. In Proceedings of the Tenth
USENIX Security Symposium, pages 9–22, Washington, D.C., Au-
gust 2001.
[24] Ruoming Pang, Vinod Yegneswaran, Paul Barford, Vern Paxson,
and Larry Peterson. Characteristics of Internet background radi-
ation.
In Proceedings of the 4th ACM SIGCOMM conference on
Internet measurement, pages 27–40. ACM Press, 2004.
[25] Niels Provos. A Virtual Honeypot Framework. In Proceedings of
the 13th USENIX Security Symposium, pages 1–14, San Diego, CA,
USA, August 2004.
[26] Reuters. Bank of America ATMs disrupted by virus.
//archive.infoworld.com/togo/1.html, January 2003.
http:
[27] S. Robertson, E. Siegel, M. Miller, and Stolfo Stolfo. Surveillance
detection in high bandwidth environments.
In Proceedings of the
Third DARPA Information Survivability Conference and Exposition
(DISCEX 2003). IEEE Computer Society Press, April 2003.
[28] Martin Roesch. Snort — lightweight intrusion detection for net-
works. In USENIX, editor, Proceedings of the Thirteenth Systems
Administration Conference (LISA XIII): November 7—12, 1999,
Seattle, WA, USA, Berkeley, CA, USA, 1999. USENIX.
[29] Amos Ron, David Plonka, Jeffery Kline, and Paul Barford. A signal
analysis of network trafﬁc anomalies. Internet Measurement Work-
shop 2002, August 09 2002.
[30] Stefan Savage, Geoffrey Voelker, George Varghese, Vern Paxson,
and Nicholas Weaver. Center for Internet epidemiology and de-
fenses. NSF CyberTrust Center Proposal, 2004.
[31] Colleen Shannon and David Moore. The spread of the Witty worm.
IEEE Security & Privacy, 2(4):46–50, July/August 2004.
[32] Colleen Shannon, David Moore, and Jeffery Brown. Code-red: a
case study on the spread and victims of an Internet worm. In Pro-
ceedings of the Internet Measurement Workshop (IMW), December
2002.
[33] Dug Song, Rob Malan, and Robert Stone. A snapshot of global
Internet worm activity. FIRST Conference on Computer Security
Incident Handling and Response, June 2002.
[34] Lance Spitzner. Honeypots: Tracking Hackers. Addison-Wesley,
2002.
[35] Lance Spitzner et al. The honeynet project. http://project.
honeynet.org/, June 2004.
[36] Symantec Corporation. DeepSight Analyzer. http://analyzer.
securityfocus.com/, 2005.
[37] Johannes Ullrich. DSHIELD. http://www.dshield.org, 2000.
[38] Paul Barford Vinod Yegneswaran and Dave Plonka. On the design
and use of Internet sinks for network abuse monitoring. In Recent
Advances in Intrusion Detection—Proceedings of the 7th Interna-
tional Symposium (RAID 2004), Sophia Antipolis, French Riviera,
France, October 2004.
[39] Michael Vrable, Justin Ma, Jay Chen, David Moore, Erik Van-
dekieft, Alex C. Snoeren, Geoffrey M. Voelker, and Stefan Savage.
Scalability, ﬁdelity and containment in the potemkin virtual honey-
farm. In To appear in Proceedings of the 20th ACM Symposium on
Operating System Principles (SOSP), Brighton, UK, October 2005.
[40] J. Wu, S. Vangala, L. Gao, and K. Kwiat. An effective architecture
and algorithm for detecting worms with various scan techniques. In
Proceedings of the Symposium on Network and Distributed Systems
Security (NDSS 2004), San Diego, CA, February 2004. Internet So-
ciety.
[41] Vinod Yegneswaran, Paul Barford, and Somesh Jha. Global intru-
sion detection in the DOMINO overlay system. In Proceedings of
Network and Distributed System Security Symposium (NDSS ’04),
San Diego, CA, February 2004.
252
Internet Measurement Conference 2005
USENIX Association