### System info
  * Playwright Version: [v1.32.1]
  * Operating System: [Windows 10]
  * Browser: [ Chromium]
### Source code
  * I provided exact source code that allows reproducing the issue locally.
**Link to the GitHub repository with the repro**
**Config file**
**Test file (self-contained)**
    sync getText(): Promise {
    const context = await chromium.launchPersistentContext('C:\\temp\\playwright-cache', {headless: false, channel: 'chrome' });
    const page = context.pages()[0];
    await page.goto("url behind SSO");
    //here user login to the SSO manually for the first time
    const text= await page.locator('cssSelector').innerHTML({timeout: 60*1000});
    await page.close();
    return text
    }
**Steps**
  1. Playwright opens a browser with persistent context
  2. Playwright navigates to a URL with behind SSO
  3. User enters credentials and logins
  4. Playwright grabs the text and we return it
  5. Function is run for second time
**Expected**  
SSO not to be shown as user has already logged in once.
**Actual**  
SSO page is shown every time as session is not saved.
**Workaround**  
If `await page.close();` is removed, session is correctly saved at the end of
the test run and SSO page is no longer shown. However, the browser that was
used to get the text required for other tests (that run in an non-persistent
browser) remains open through out the test suite running and that is not
ideal.
It was mentioned in this issue that page is being closed too early and it is
causing the session not to be persisted.  
However, adding some explicit timeout to try this theory did not proof useful:  
`await page.waitForTimeout(30000); `  
it seem like that as long as the page closed via `page.close()`, it is not
saving the session.
Note:
  * Due to compliance and other technical decisions, this is the only way that I am able to save session instead of using storageState.
  * I already raised this issue this issue, however, it was closed without an answer that works. So I am not sure if I should leave a comment there or create a new issue. Please advice.