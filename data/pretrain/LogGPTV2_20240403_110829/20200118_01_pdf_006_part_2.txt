归档数据、冷热分离
• oss_fdw
• 目前仅支持PG V10，未来会覆盖所有主流版本（11,12等）
申请有oss访问权限的AK
申请有oss访问权限的AK
申请oss bucket
https://oss.console.aliyun.com/
oss_fdw 采用ecs的vpc网络访问（内网） EndPoint
创建oss_fdw，创建server
# PostgreSQL 创建插件
create extension oss_fdw;
# 创建 server
CREATE SERVER ossserver1 FOREIGN DATA WRAPPER oss_fdw OPTIONS
(host 'oss-cn-hangzhou-internal.aliyuncs.com' , id 'accessid内容', key 'accesskey内容', bucket
'pgarchive01');
创建oss外部归档表
# 创建 oss 外部表，压缩
CREATE FOREIGN TABLE oss_tb1
(date text, time text, open float,
high float, low float, volume int)
SERVER ossserver1
OPTIONS ( dir 'oss_tb1/', delimiter ',' ,
format 'csv', encoding 'utf8', compressiontype 'gzip' );
# 不压缩
CREATE FOREIGN TABLE oss_tb2
(date text, time text, open float,
high float, low float, volume int)
SERVER ossserver1
OPTIONS ( dir 'oss_tb2/', delimiter ',' ,
format 'csv', encoding 'utf8', compressiontype 'none' );
创建本地表，写入测试数据
# 创建表，数据就装载到这张表中
create table tbl1
(date text, time text, open float,
high float, low float, volume int) ;
insert into tbl1 select md5(random()::text), now()::text,
random()*10000, random()*10000000, random()*10000,
random()*100000000
from generate_series(1,1000000);
将本地表数据写入外部表
# 数据从 ossexample 装载到 example 中。
db1=> insert into oss_tb1 select * from tbl1;
WARNING: oss compress process does not close
WARNING: oss compres thread does not close
NOTICE: begin writiing data to oss location oss_tb1/, with block size 10 MB and oss file size 1024 MB
INSERT 0 1000000
Time: 8899.910 ms (00:08.900)
查询外部表
db1=> select * from oss_tb1 limit 1;
NOTICE: a total of 1 files will be loaded, begin oss_tb1/_oss_tb1_631787927722928, end oss_tb1/_oss_tb1_631787927722928, file format gzip
date | time | open | high | low | volume
----------------------------------+-------------------------------+------------------+------------------+------------------+---------
-
ee421482662f0424dfb337925b35f029 | 2020-01-08 16:35:07.795619+08 | 4588.77929486334 | 3359252.90361047 | 3289.49342481792 | 47414201
(1 row)
Time: 198.820 ms
db1=> select count(*) from oss_tb1;
NOTICE: a total of 1 files will be loaded, begin oss_tb1/_oss_tb1_631787927722928, end oss_tb1/_oss_tb1_631787927722928, file format gzip
count
---------
1000000
(1 row)
Time: 5873.628 ms (00:05.874)
查询外部表
db1=> insert into oss_tb1 select * from tbl1;
NOTICE: begin writiing data to oss location oss_tb1/, with block size 10 MB and oss file size 1024 MB
INSERT 0 1000000
Time: 8720.626 ms (00:08.721)
db1=> select count(*) from oss_tb1;
NOTICE: a total of 2 files will be loaded, begin oss_tb1/_oss_tb1_631787927722928, end
oss_tb1/_oss_tb1_631788054925016, file format gzip
count
---------
2000000
(1 row)
Time: 12469.130 ms (00:12.469)
查询外部表
db1=> insert into oss_tb2 select * from tbl1;
NOTICE: begin writiing data to oss location oss_tb2/, with block size 10 MB and oss file size 1024 MB
INSERT 0 1000000
Time: 7120.737 ms (00:07.121)
db1=> insert into oss_tb2 select * from tbl1;
NOTICE: begin writiing data to oss location oss_tb2/, with block size 10 MB and oss file size 1024 MB
INSERT 0 1000000
Time: 7004.067 ms (00:07.004)
db1=> select count(*) from oss_tb2;
NOTICE: a total of 2 files will be loaded, begin oss_tb2/_oss_tb2_631788259206276, end oss_tb2/_oss_tb2_631788267353423, file format text
count
---------
2000000
(1 row)
Time: 21546.740 ms (00:21.547)
压缩与不压缩的存储空间区别
db1=> select * from oss_fdw_list_file('oss_tb1','public');
name | size
----------------------------------+----------
oss_tb1/_oss_tb1_631787927722928 | 53922166
oss_tb1/_oss_tb1_631788054925016 | 53922166
(2 rows)
db1=> select * from oss_fdw_list_file('oss_tb2','public');
name | size
----------------------------------+-----------
oss_tb2/_oss_tb2_631788259206276 | 122555480
oss_tb2/_oss_tb2_631788267353423 | 122555480
(2 rows)
归档数据不支持记录级别的更新和删除
db1=> update oss_tb1 set date=now() where volume=1;
ERROR: cannot update foreign table "oss_tb1"
db1=> delete from oss_tb1 where volume=1;
ERROR: cannot delete from foreign table "oss_tb1"
db1=> delete from oss_tb2 where volume=1;
ERROR: cannot delete from foreign table "oss_tb2"
db1=> update oss_tb2 set date=now() where volume=1;
ERROR: cannot update foreign table "oss_tb2"
扩展资料
• 阿里云RDS PostgreSQL OSS 外部表实践 - (dblink异步调用封装并行) 从OSS并行导入数据
• https://github.com/digoal/blog/blob/master/201804/20180427_01.md
• 阿里云RDS PostgreSQL OSS 外部表实践 - (dblink异步调用封装并行) 数据并行导出到OSS
• https://github.com/digoal/blog/blob/master/201709/20170906_01.md
• 强制数据分布与导出prefix - 阿里云pg, hdb pg oss快速数据规整外部表导出实践案例
• https://github.com/digoal/blog/blob/master/201801/20180109_01.md
注意事项
• https://help.aliyun.com/document_detail/44461.html
• filepath, dir, prefix 参数互斥
• 有oss写入要求时，必须使用dir或prefix
• 有oss写入要求时，不能使用parse_errors
参考资料
• mysql_fdw手册
• https://github.com/EnterpriseDB/mysql_fdw
• oss_fdw手册
• https://help.aliyun.com/document_detail/44461.html
• MySQL手册
• https://www.mysqltutorial.org/
• https://dev.mysql.com/doc/refman/8.0/en/
• PG 管理、开发规范
• https://github.com/digoal/blog/blob/master/201609/20160926_01.md
• PG手册
• https://www.postgresql.org/docs/current/index.html
• https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-vs-mysql/
• GIS手册
• http://postgis.net/docs/manual-3.0/
一期开课计划(PG+MySQL联合方案)
• - 2019.12.30 19:30 RDS PG产品概览，如何与MySQL结合使用
• - 2019.12.31 19:30 如何连接PG，GUI，CLI的使用
• - 2020.1.3 19:30 如何压测PG数据库、如何瞬间构造海量测试数据
• - 2020.1.6 19:30 MySQL与PG对比学习(面向开发者)
• - 2020.1.7 19:30 如何将MySQL数据同步到PG（DTS）
• - 2020.1.8 19:30 PG外部表妙用 - mysql_fdw, oss_fdw（直接读写MySQL数据、冷热分离）
• - 2020.1.9 19:30 PG应用场景介绍 - 并行计算，实时分析
• - 2020.1.10 19:30 PG应用场景介绍 - GIS
• - 2020.1.13 19:30 PG应用场景介绍 - 用户画像、实时营销系统
• - 2020.1.14 19:30 PG应用场景介绍 - 多维搜索
• - 2020.1.15 19:30 PG应用场景介绍 - 向量计算、图像搜索
• - 2020.1.16 19:30 PG应用场景介绍 - 全文检索、模糊查询
• - 2020.1.17 19:30 PG 数据分析语法介绍
• - 2020.1.18 19:30 PG 更多功能了解：扩展语法、索引、类型、存储过程与函数。如何加入PG技术社群
本课程习题
• 如何一次性创建所有mysql的表作为pg的外部表
• 可以删除mysql外部表的数据吗
• 如何查看访问外部表的远程SQL
• 访问频次非常非常低的归档数据，使用什么方法存储更加廉价
• oss外部归档数据支持记录级别的删除和更新吗
• 如何提升归档数据写入oss的速度
• 如何提升查询的oss归档表速度
技术社群
PG技术交流钉钉群(3500+人)