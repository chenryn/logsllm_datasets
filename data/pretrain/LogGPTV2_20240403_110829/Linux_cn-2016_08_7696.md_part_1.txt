---
author: Gabriel Cánepa
category: 软件开发
comments_data:
- date: '2017-07-31 11:37:58'
  message: 感觉和C语言很像
  postip: 223.104.1.211
  username: 来自广东佛山的 Chrome 59.0|Windows 8.1 用户
- date: '2018-12-18 18:04:30'
  message: "大神帮做个作业\r\n(1)用Linux shell脚本实现\r\n(2)用两个循环\r\n*\r\n***\r\n*****\r\n*******\r\n*****\r\n***\r\n*"
  postip: 223.104.27.175
  username: 来自甘肃的 Chrome Mobile 56.0|Android 7.0 用户
- date: '2018-12-18 18:04:32'
  message: "大神帮做个作业\r\n(1)用Linux shell脚本实现\r\n(2)用两个循环\r\n*\r\n***\r\n*****\r\n*******\r\n*****\r\n***\r\n*"
  postip: 223.104.27.175
  username: 来自甘肃的 Chrome Mobile 56.0|Android 7.0 用户
- date: '2018-12-18 18:04:36'
  message: "大神帮做个作业\r\n(1)用Linux shell脚本实现\r\n(2)用两个循环\r\n*\r\n***\r\n*****\r\n*******\r\n*****\r\n***\r\n*"
  postip: 223.104.27.175
  username: 来自甘肃的 Chrome Mobile 56.0|Android 7.0 用户
- date: '2018-12-18 18:04:37'
  message: "大神帮做个作业\r\n(1)用Linux shell脚本实现\r\n(2)用两个循环\r\n*\r\n***\r\n*****\r\n*******\r\n*****\r\n***\r\n*"
  postip: 223.104.27.175
  username: 来自甘肃的 Chrome Mobile 56.0|Android 7.0 用户
count:
  commentnum: 5
  favtimes: 3
  likes: 0
  sharetimes: 0
  viewnum: 14838
date: '2016-08-19 17:24:00'
editorchoice: false
excerpt: 我们讲解了 Python 中控制流、循环/迭代、和模块的概念。我们也演示了如何利用 Python 中面向对象编程的方法和属性来简化复杂的 shell
  脚本。
fromurl: http://www.tecmint.com/learn-python-programming-to-write-linux-shell-scripts/
id: 7696
islctt: true
largepic: /data/attachment/album/201608/19/172455zlxmmxuz7nv73nj6.png
permalink: /article-7696-1.html
pic: /data/attachment/album/201608/19/172455zlxmmxuz7nv73nj6.png.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 我们讲解了 Python 中控制流、循环/迭代、和模块的概念。我们也演示了如何利用 Python 中面向对象编程的方法和属性来简化复杂的 shell
  脚本。
tags:
- 脚本
- Python
thumb: false
title: Linux 平台下 Python 脚本编程入门（二）
titlepic: true
translator: wi-cuckoo
updated: '2016-08-19 17:24:00'
---
在“[Linux 平台下 Python 脚本编程入门](/article-7693-1.html)”系列之前的文章里，我们向你介绍了 Python 的简介，它的命令行 shell 和 IDLE（LCTT 译注：python 自带的一个 IDE）。我们也演示了如何进行算术运算、如何在变量中存储值、还有如何打印那些值到屏幕上。最后，我们通过一个练习示例讲解了面向对象编程中方法和属性概念。
![](/data/attachment/album/201608/19/172455zlxmmxuz7nv73nj6.png)
*在 Python 编程中写 Linux Shell 脚本*
本篇中，我们会讨论控制流（根据用户输入的信息、计算的结果，或者一个变量的当前值选择不同的动作行为）和循环（自动重复执行任务），接着应用我们目前所学东西来编写一个简单的 shell 脚本，这个脚本会显示操作系统类型、主机名、内核版本、版本号和机器硬件架构。
这个例子尽管很基础，但是会帮助我们证明，比起使用一般的 bash 工具，我们通过发挥 Python 面向对象的特性来编写 shell 脚本会更简单些。
换句话说，我们想从这里出发：
```
# uname -snrvm
```
![](/data/attachment/album/201608/19/172456a42h54di1i57m5m5.png)
*检查 Linux 的主机名*
到
![](/data/attachment/album/201608/19/172457qudccc2cd2hvxch2.png)
*用 Python 脚本来检查 Linux 的主机名*
或者
![](/data/attachment/album/201608/19/172457hxqpq4f9kdqxgxg9.png)
*用脚本检查 Linux 系统信息*
看着不错，不是吗？那我们就挽起袖子，开干吧。
### Python 中的控制流
如我们刚说那样，控制流允许我们根据一个给定的条件，选择不同的输出结果。在 Python 中最简单的实现就是一个 `if`/`else` 语句。
基本语法是这样的：
```
if 条件:
    # 动作 1
else:
    # 动作 2
```
当“条件”求值为真（true），下面的代码块就会被执行（`# 动作 1`代表的部分）。否则，else 下面的代码就会运行。 “条件”可以是任何表达式，只要可以求得值为真或者假。
举个例子：
1. `1 >> rockBands = []
>>> rockBands.append("Roxette")
>>> rockBands.append("Guns N' Roses")
>>> rockBands.append("U2")
>>> for x in rockBands:
        print(x)
或
>>> firstName = "Gabriel"
>>> for x in firstName:
        print(x)
```
上面例子的输出如下图所示：
![](/data/attachment/album/201608/19/172457k3jjjzjxdjgw3j9j.png)
*学习 Python 中的循环*
### Python 模块
很明显，必须有个办法将一系列的 Python 指令和表达式保存到文件里，然后在需要的时候取出来。
准确来说模块就是这样的。比如，os 模块提供了一个到操作系统的底层的接口，可以允许我们做许多通常在命令行下执行的操作。
没错，os 模块包含了许多可以用来调用的方法和属性，就如我们之前文章里讲解的那样。不过，我们需要使用 `import` 关键词导入（或者叫包含）模块到运行环境里来：
```
>>> import os
```
我们来打印出当前的工作目录：