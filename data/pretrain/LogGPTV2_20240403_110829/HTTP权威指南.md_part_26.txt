### 6.4 修改Web服务器配置以重定向客户端请求

某些Web服务器可以被配置为向客户端发送一条HTTP重定向命令（响应码305），将客户端请求重定向到代理服务器。当客户端接收到该重定向命令后，会与指定的代理进行通信（参见图6-14d）。下一节将详细解释如何配置客户端以使其将流量发送给代理。第20章则进一步讨论了如何通过配置网络、DNS以及服务器来实现流量重定向至代理。

**图6-14 重定向Web请求到代理的方法**

(a) 配置为使用代理的客户端  
(b) 拦截流量并将其重定向到代理的网络  
(c) 作为Web服务器替代物的代理  
(d) Web服务器将HTTP请求重定向到代理  

### 6.4 客户端的代理设置

现代Web浏览器普遍支持多种代理配置方式，包括但不限于以下几种：

- **手工配置**：显式地设定要使用的代理。
- **预配置浏览器**：由浏览器厂商或发行商在产品发布前对代理设置进行预配置。
- **PAC文件**：提供一个JavaScript编写的自动配置脚本的URI，客户端下载并执行该脚本来决定是否及如何使用代理。
- **WPAD协议**：支持Web代理自动发现，允许客户端自动检测并获取适当的PAC文件。

#### 6.4.1 手工代理配置

许多Web客户端提供了用户界面供手动设置代理选项。例如，在Netscape Navigator 6中，可以通过`编辑 -> 首选项 -> 高级 -> 代理`路径访问相关设置；而在Internet Explorer 5中，则是通过`工具 -> Internet选项 -> 连接设置`来完成类似的操作。

#### 6.4.2 使用PAC文件进行动态代理配置

相较于静态的手动配置，PAC (Proxy Auto-Configuration) 文件提供了一种更加灵活且易于管理的方式。它基于JavaScript语言编写，能够根据特定条件选择最合适的代理服务器。每个PAC文件必须包含一个名为 `FindProxyForURL(url, host)` 的函数，用于返回适当的代理服务器信息或指示直接连接。

##### 示例 PAC 文件
```javascript
function FindProxyForURL(url, host) {
    if (url.startsWith("http:")) {
        return "PROXY http-proxy.mydomain.com:8080";
    } else if (url.startsWith("ftp:")) {
        return "PROXY ftp-proxy.mydomain.com:8080";
    } else {
        return "DIRECT";
    }
}
```

#### 6.4.3 WPAD 协议简介

WPAD (Web Proxy Auto-Discovery Protocol) 是一种让客户端自动发现和下载PAC文件的标准。它依次尝试多种技术（如DHCP, SLP, DNS等）直到成功为止，从而简化了大型组织内部网络中的代理配置过程。

### 6.5 处理代理请求时遇到的一些挑战

本节探讨了一些常见的关于代理服务器请求处理的问题，比如不同类型的URI格式、隐藏原始服务器主机名的方法等，并给出了相应的解决方案建议。