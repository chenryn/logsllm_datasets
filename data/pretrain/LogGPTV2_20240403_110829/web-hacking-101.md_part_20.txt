### Respect for Your Time and Value

**Don’t Shout Hello Before Crossing the Pond**

On March 17, 2016, Mathias Karlsson wrote an excellent blog post about potentially finding a Same Origin Policy (SOP) bypass. The SOP is a security feature that defines how web browsers allow scripts to access content from websites. Mathias was kind enough to let me include some of his content here. As an aside, Mathias has an impressive record on HackerOne; as of March 28, 2016, he ranked in the 97th percentile in Signal and 95th percentile in Impact, with 109 bugs found for companies such as HackerOne, Uber, Yahoo, and CloudFlare.

The phrase “Don’t shout hello before you cross the pond” is a Swedish saying that means you shouldn't celebrate until you are absolutely certain. This is particularly relevant in the context of hacking, which is not always straightforward.

Mathias discovered that Firefox on macOS would accept malformed hostnames. For example, the URL `http://example.com..` would load `example.com` but send `example.com..` in the Host header. He then tried `http://example.comevil.com` and got the same result. He immediately realized that this could be used to bypass the SOP because Flash would treat `http://example.com..evil.com` as being under the `*.evil.com` domain. After checking the Alexa top 10,000 sites, he found that 7% were exploitable, including Yahoo.com.

He created a writeup but decided to do more verification. A coworker confirmed the bug on their virtual machine, and even after updating Firefox, the bug persisted. He hinted at the finding on Twitter, thinking it was verified. However, he made a critical mistake: he didn’t update his operating system to the latest version. After doing so, the bug was no longer present. It turned out that this issue had been reported six months prior and was fixed in macOS Yosemite 10.10.5.

This story illustrates that even experienced hackers can make mistakes and underscores the importance of thoroughly confirming the exploitation of a bug before reporting it.

I am grateful to Mathias for allowing me to include this. I recommend following him on Twitter (@avlidienbrunn) and checking out his work on labs.detectify.com.

### Parting Words

I hope this chapter has helped you and that you are better prepared to write a comprehensive report. Before submitting, take a moment to reflect on your report. If it were to be disclosed and read publicly, would you be proud of it?

Everything you submit should be something you are prepared to stand behind and justify to the company, other hackers, and yourself. I offer this advice not to discourage you but to help you avoid common pitfalls. When I started, I submitted questionable reports just to be on the board and be helpful. However, companies receive a lot of reports, and it is more beneficial to find a fully reproducible security bug and report it clearly.

You might wonder who really cares. On platforms like HackerOne, your reports matter. Your stats are tracked, and each valid report is recorded against your Signal, a metric ranging from -10 to 7, which averages the value of your reports:
- Submit spam: -10
- Submit a non-applicable report: -5
- Submit an informative report: 0
- Submit a resolved report: 7

Signal is used to determine who gets invited to private programs and who can submit reports to public programs. Private programs are often fresh targets for hackers, as these are sites just entering the bug bounty program and are open to a limited number of hackers. This means less competition for potential vulnerabilities.

As for reporting to other companies, use my experience as a cautionary tale. I was invited to a private program and found eight vulnerabilities in a single day. However, that night, I submitted a non-applicable report to another program, which dropped my Signal to 0.96. The next day, I tried to report to the private company again but received a notification that my Signal was too low, and I had to wait 30 days to report to them or any other company with a Signal requirement of 1.0. This was frustrating, as others could have found the vulnerabilities during that time, costing me potential rewards. Since then, I’ve vowed to improve my Signal, and I encourage you to do the same.

Good luck hunting!

### Tools

Below is a list of tools useful for vulnerability hunting, in no particular order. While some automate the process of searching for vulnerabilities, they should not replace manual work, keen observation, and intuitive thinking.

#### Burp Suite
- **Website**: https://portswigger.net/burp
- **Description**: An integrated platform for security testing, essential for beginners. It includes:
  - An intercepting proxy for inspecting and modifying traffic.
  - An application-aware Spider for crawling content and functionality.
  - A web scanner for automating vulnerability detection.
  - A repeater for manipulating and resending individual requests.
  - A sequencer tool for testing token randomness.
  - A comparer tool to compare requests and responses.
- **Tutorial**: Bucky Roberts from The New Boston has a tutorial series available at https://vimeo.com/album/3510171.

#### ZAP Proxy
- **Website**: https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project
- **Description**: A free, community-based, open-source platform similar to Burp for security testing. It includes a Proxy, Repeater, Scanner, Directory/File Bruteforcer, and supports add-ons for additional functionality.

#### Knockpy
- **GitHub**: https://github.com/guelfoweb/knock
- **Description**: A Python tool for identifying subdomains by iterating over a large wordlist. Identifying subdomains increases the testable surface area of a company.
- **Requirements**: Python (tested with version 2.7.6), Google DNS (8.8.8.8 | 8.8.4.4).

#### HostileSubBruteforcer
- **GitHub**: https://github.com/nahamsec/HostileSubBruteforcer
- **Description**: A tool by @nahamsec (Ben Sadeghipour) that bruteforces existing subdomains, providing IP addresses, hosts, and setup status, checking AWS, GitHub, Heroku, Shopify, Tumblr, and Squarespace. Useful for finding subdomain takeovers.

#### Sublist3r
- **GitHub**: https://github.com/aboul3la/Sublist3r
- **Description**: A Python tool for enumerating subdomains using search engines like Google, Yahoo, Bing, Baidu, and Ask. It also gathers subdomains using Netcraft, VirusTotal, ThreatCrowd, DNSdumpster, and PassiveDNS.

#### crt.sh
- **Website**: https://crt.sh
- **Description**: A site for browsing Certificate Transparency logs, revealing subdomains associated with certificates.

#### IPV4info.com
- **Website**: http://ipv4info.com
- **Description**: A site for finding domains hosted on a given server. For example, entering `yahoo.com` will provide Yahoo’s IP range and all domains served from the same servers.

#### SecLists
- **GitHub**: https://github.com/danielmiessler/SecLists
- **Description**: A collection of lists used during hacking, including usernames, passwords, URLs, fuzzing strings, and common directories/files/subdomains. Maintained by Daniel Miessler and Jason Haddix.

#### XSS Hunter
- **Website**: https://xsshunter.com
- **Description**: A tool by Matt Bryant (formerly of the Uber security team) for finding blind XSS vulnerabilities. It provides a special `xss.ht` short domain for identifying and hosting payloads, and sends email notifications when the XSS fires.

#### sqlmap
- **Website**: http://sqlmap.org
- **Description**: An open-source penetration tool for automating the detection and exploitation of SQL injection vulnerabilities. It supports a wide range of database types and SQL injection techniques.

#### Nmap
- **Website**: https://nmap.org
- **Description**: A free and open-source utility for network discovery and security auditing. It uses raw IP packets to determine available hosts, services, operating systems, packet filters, and more.

#### Eyewitness
- **GitHub**: https://github.com/ChrisTruncer/EyeWitness
- **Description**: A tool for taking screenshots of websites, providing server header information, and identifying default credentials. Useful for detecting services running on HTTP and HTTPS ports, and can be used with Nmap.

#### Shodan
- **Website**: https://www.shodan.io
- **Description**: An internet search engine for devices. It helps discover connected devices, their locations, and users. It also offers a Firefox plugin for quick domain information access.

#### Censys
- **Website**: https://censys.io
- **Description**: A search engine for asking questions about hosts and networks that make up the Internet. It collects data through daily scans of the IPv4 address space.

#### What CMS
- **Website**: http://www.whatcms.org
- **Description**: A simple application for identifying the likely Content Management System (CMS) of a site. Knowing the CMS and its version can help identify vulnerabilities.

#### BuiltWith
- **Website**: http://builtwith.com
- **Description**: A tool for fingerprinting different technologies used on a target, covering over 18,000 types of internet technologies, including analytics, hosting, and CMS.

#### Nikto
- **Website**: https://cirt.net/nikto2
- **Description**: An open-source web server scanner that tests for dangerous files/programs, outdated server versions, version-specific problems, and server configuration issues.

#### Recon-ng
- **Bitbucket**: https://bitbucket.org/LaNMaSteR53/recon-ng
- **Description**: A full-featured Web Reconnaissance framework written in Python. It provides a powerful environment for open-source web-based reconnaissance, including subdomain discovery, sensitive file discovery, and username enumeration.

#### GitRob
- **GitHub**: https://github.com/michenriksen/gitrob
- **Description**: A command-line tool for finding sensitive information in publicly available files on GitHub. It iterates over public organization and member repositories, matching filenames against patterns for sensitive or dangerous information.

#### CyberChef
- **Website**: https://gchq.github.io/CyberChef/
- **Description**: A versatile tool providing various encoding/decoding functions, saving favorites, and downloading results.

#### OnlineHashCrack.com
- **Website**: www.onlinehashcrack.com
- **Description**: An online service for recovering passwords (MD5, NTLM, WordPress, etc.), WPA dumps, and MS Office encrypted files. It helps identify hash types and supports over 250 hash types.

#### idb
- **Website**: http://www.idbtool.com
- **Description**: A tool for simplifying common tasks in iOS app security assessments and research. Hosted on GitHub.

#### Wireshark
- **Website**: https://www.wireshark.org
- **Description**: A network protocol analyzer for detailed network traffic analysis. More useful for non-HTTP/HTTPS communication. For beginners, Burp Suite may be more beneficial for HTTP/HTTPS traffic.

#### Bucket Finder
- **Download**: https://digi.ninja/files/bucket_finder_1.1.tar.bz2
- **Description**: A tool for searching readable S3 buckets and listing their files. It can also find buckets that deny file listing.