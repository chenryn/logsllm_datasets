updateRun(fF(b, c, d), 0x49b40821,
bytes_to_int32(databytes, ptr + 60), 22)
updateRun(fG(b, c, d), 0xf61e2562,
bytes_to_int32(databytes, ptr + 4), 5)
updateRun(fG(b, c, d), 0xc040b340,
bytes_to_int32(databytes, ptr + 24), 9)
updateRun(fG(b, c, d), 0x265e5a51,
bytes_to_int32(databytes, ptr + 44), 14)
updateRun(fG(b, c, d), 0xe9b6c7aa,
bytes_to_int32(databytes, ptr), 20)
updateRun(fG(b, c, d), 0xd62f105d,
bytes_to_int32(databytes, ptr + 20), 5)
updateRun(fG(b, c, d), 0x2441453,
bytes_to_int32(databytes, ptr + 40), 9)
updateRun(fG(b, c, d), 0xd8a1e681,
bytes_to_int32(databytes, ptr + 60), 14)
updateRun(fG(b, c, d), 0xe7d3fbc8,
bytes_to_int32(databytes, ptr + 16), 20)
updateRun(fG(b, c, d), 0x21e1cde6,
bytes_to_int32(databytes, ptr + 36), 5)
bytes_to_int32(databytes, ptr + 56), 23)
updateRun(fH(b, c, d), 0xa4beea44,
bytes_to_int32(databytes, ptr + 4), 4)
updateRun(fH(b, c, d), 0x4bdecfa9,
bytes_to_int32(databytes, ptr + 16), 11)
updateRun(fH(b, c, d), 0xf6bb4b60,
bytes_to_int32(databytes, ptr + 28), 16)
updateRun(fH(b, c, d), 0xbebfbc70,
bytes_to_int32(databytes, ptr + 40), 23)
updateRun(fH(b, c, d), 0x289b7ec6,
bytes_to_int32(databytes, ptr + 52), 4)
updateRun(fH(b, c, d), 0xeaa127fa,
bytes_to_int32(databytes, ptr), 11)
updateRun(fH(b, c, d), 0xd4ef3085,
bytes_to_int32(databytes, ptr + 12), 16)
updateRun(fH(b, c, d), 0x4881d05,
bytes_to_int32(databytes, ptr + 24), 23)
updateRun(fH(b, c, d), 0xd9d4d039,
bytes_to_int32(databytes, ptr + 36), 4)
updateRun(fH(b, c, d), 0xe6db99e5,
bytes_to_int32(databytes, ptr + 48), 11)
updateRun(fH(b, c, d), 0x1fa27cf8,
bytes_to_int32(databytes, ptr + 60), 16)
updateRun(fH(b, c, d), 0xc4ac5665,
bytes_to_int32(databytes, ptr + 8), 23)
updateRun(fI(b, c, d), 0xf4292244,
bytes_to_int32(databytes, ptr), 6)
updateRun(fI(b, c, d), 0x432aff97,
bytes_to_int32(databytes, ptr + 28), 10)
updateRun(fI(b, c, d), 0xab9423a7,
bytes_to_int32(databytes, ptr + 56), 15)
updateRun(fI(b, c, d), 0xfc93a039,
bytes_to_int32(databytes, ptr + 20), 21)
updateRun(fI(b, c, d), 0x655b59c3,
bytes_to_int32(databytes, ptr + 48), 6)
updateRun(fI(b, c, d), 0x8f0ccc92,
bytes_to_int32(databytes, ptr + 12), 10)
updateRun(fI(b, c, d), 0xffeff47d,
bytes_to_int32(databytes, ptr + 40), 15)
updateRun(fI(b, c, d), 0x85845dd1,
bytes_to_int32(databytes, ptr + 4), 21)
updateRun(fI(b, c, d), 0x6fa87e4f,
bytes_to_int32(databytes, ptr + 32), 6)
updateRun(fI(b, c, d), 0xfe2ce6e0,
bytes_to_int32(databytes, ptr + 60), 10)
updateRun(fI(b, c, d), 0xa3014314,
bytes_to_int32(databytes, ptr + 24), 15)
updateRun(fI(b, c, d), 0x4e0811a1,
bytes_to_int32(databytes, ptr + 52), 21)
updateRun(fI(b, c, d), 0xf7537e82,
bytes_to_int32(databytes, ptr + 16), 6)
updateRun(fI(b, c, d), 0xbd3af235,
bytes_to_int32(databytes, ptr + 44), 10)
updateRun(fI(b, c, d), 0x2ad7d2bb,
bytes_to_int32(databytes, ptr + 8), 15)
updateRun(fI(b, c, d), 0xeb86d391,
bytes_to_int32(databytes, ptr + 36), 21)
// update buffers
h0 = _add(h0, a)
h1 = _add(h1, b)
h2 = _add(h2, c)
h3 = _add(h3, d)
if (debug == true){
document.write("run times: "+i+"h3: "+h3+"h2: "+h2+"h1:
"+h1+"h0: "+h0+"")
}
}
result['hash'] = int128le_to_hex(h3, h2,
h1, h0);
return result;
// 检测分组后开头是否有0，如果有则去掉
function ltripzero(str){
if (str.length != 8) {
return false;
}
if (str == "00000000"){
return str;
}
var result = '';
if (str.indexOf('0') == 0 ) {
var tmp = new Array();
tmp = str.split('');
for (i=0;i 56) {
// pad to next 512 bit block
for (var i = 0; i = 0; i--) {
ta = arguments[i]
t = (ta & 0xFF)
ta = ta >>> 8
t = t >> 8
t = t >> 8
t = t >> 8
}
return retval
}
// 32 bit left-rotation
function rol(num, places) {
return ((num >> (32 - places))
}
// The 4 MD5 functions
function fF(b, c, d) {
return (b & c) | (~b & d)
}
function fG(b, c, d) {
return (d & b) | (~d & c)
}
function fH(b, c, d) {
return b ^ c ^ d
}
function fI(b, c, d) {
return c ^ (b | ~d)
}
// pick 4 bytes at specified offset.
Little-endian is assumed
function bytes_to_int32(arr, off) {
return (arr[off + 3] >> 0).toString(16)
return "00000000".substr(0, 8 -
t1.length) + t1
}
}
第12章 Web框架安全
前面的章节，我们讨论了许多浏览器、服务器端的安全问题，这些问题都有对应的
解决方法。总的来说，实施安全方案，要达到好的效果，必须要完成两个目标：
（1）安全方案正确、可靠；
（2）能够发现所有可能存在的安全问题，不出现遗漏。
只有深入理解漏洞原理之后，才能设计出真正有效、能够解决问题的方案，本书的