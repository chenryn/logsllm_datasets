# 【缺陷周话】第41期：忽略返回值
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 1、忽略返回值
一些函数具有返回值且返回值用于判断函数执行的行为，如判断函数是否执行成功，因此需要对函数的返回值进行相应的判断，以 fgets() 函数为例，其原型为：
char fgets(char buf, int bufsize, FILE *stream);
如果函数执行成功，则返回第一个参数 buf；如果发生错误，则返回
NULL，如果没有对函数返回值进行检测，那么当读取发生错误时，则可能因为忽略异常和错误情况导致允许攻击者引入意料之外的行为。
详细请参见：CWE-252: Unchecked Return Value。
## 2、忽略返回值的危害
忽略函数返回值会导致未定义的行为，包括信息泄露、拒绝服务、甚至程序崩溃等。
CVE中也有一些与之相关的漏洞信息，从2018年1月至2019年6月，CVE中就有34条相关漏洞信息。漏洞信息如下：
## 3、示例代码
示例源于SamateJuliet Test Suite for C/C++ v1.3
([https://samate.nist.gov/SARD/testsuite.php)，源文件名：CWE252_Unchecked_Return_Value__char_fgets_01.c。](https://samate.nist.gov/SARD/testsuite.php\)%EF%BC%8C%E6%BA%90%E6%96%87%E4%BB%B6%E5%90%8D%EF%BC%9ACWE252_Unchecked_Return_Value__char_fgets_01.c%E3%80%82)
###  3.1 缺陷代码
在上述示例代码中，第33行使用 fgets() 函数从标准输入流中读取数据，但没有对 fgets() 的返回值进行检测，因此存在“忽略返回值”问题。
使用代码卫士对上述示例代码进行检测，可以检出“忽略返回值”缺陷，显示等级为中。如图1所示：
图1：忽略返回值检测示例
###  3.2 修复代码
在上述修复代码中，Samate给出的修复方式为： 在第33行对 fgets() 函数的返回值是否为NULL 进行了判断，当返回值为 NULL
时程序终止，从而避免了“忽略返回值”问题。
使用代码卫士对修复后的代码进行检测，可以看到已不存在“忽略返回值”缺陷。如图2：
图2：修复后检测结果
## 4、如何避免忽略返回值
（1）对函数返回值进行恰当的判断，避免当函数执行异常后可能带来的风险。
（2）使用源代码静态分析工具，可以有效发现这类问题。