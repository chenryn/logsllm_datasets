# 01 \| 区域和可用区：欢迎来到云端数据中心你好，我是何恺铎，欢迎来到《深入浅出云计算》专栏。这是课程的第一讲，我们就从IaaS来入手，开始对云计算的讨论。 IaaS 的本质，是对云数据中心和各类 IT基础设施的抽象，是基于软件技术对物理硬件进行的封装和虚拟。这为云计算用户屏蔽了大量底层细节，能让我们在较高的层面进行架构设计和资源使用，大大提高了工作效率。 说起我们大多数开发者最常用的 IaaS服务，恐怕要数云上虚拟机了。没错，虚拟机肯定会是我们 IaaS部分的讲解重点。不过在此之前，我想让你对整个云端数据中心，先建立起一个高屋建瓴的认识，帮助你理解宏观层面的重要概念。这会对我们后续的学习大有裨益。 所以第一讲，我们就先来谈谈云计算中的**区域**和**可用区**。 指点江山，云计算中的"区域"云计算中最顶层的概念，就是**区域**（Region）了。在大家的日常认知中，它当然是一个地理概念。而在云计算行业中，区域对应的则是云计算厂商在某个地理位置提供的所有云服务的组合，是厂商对外提供云服务的基本单位和容器。 所以绝大多数的云服务，都会按区域进行部署和落地；用户使用的所有云资源，也都会隶属于一个区域，这通常是在创建资源时就确定了的。 常见的区域，我们一般以**国家或地区命名**，也经常辅以城市和序号予以区分。比如，阿里云的华北 1区（青岛）、华北 2 区（北京），以及 AWS 的美国西部 1区（加利福尼亚北部）、美国西部 2区（俄勒冈州）等。 与此同时，每个区域还会有个字母数字构成的区域代号（Region ID 或 RegionCode）。比方说，阿里云华北 1 区代号为 cn-qingdao，AWS 美国西部 1区的代号为 us-west-1等。这些代号方便我们在程序或脚本中对区域进行唯一指定，有时也会出现在门户控制台URL 中。 ![](Images/1c5354d34eeee3ae92ee9ea35f282e7a.png)savepage-src="https://static001.geekbang.org/resource/image/e9/22/e9a72227034fedd2b17976687007e322.jpg"}阿里云的全球区域slate-object="mark"} 当然，想要开设一个新区域，绝非一件容易的事情。它有点像网络游戏中的"开服"，包含了云计算服务商在某个地区建立数据中心，安置大量的计算、存储、网络等硬件资源，以及部署虚拟化、服务组件、资源调度等各种复杂软件，最后与外界互联网相连，获得批准对外提供云服务的全过程。 **所以区域的设立和分布，相当程度地体现了云厂商的业务重点和地区倾向**。小型云厂商一般会着重在个别国家或地区深耕；而大型云厂商实力雄厚，会在全球范围内拥有众多开放区域，以便用户能够在全球范围内管理和部署自己的应用。 考虑到经济效益和地理冗余，在典型情况下，云厂商设置的不同区域之间的距离，一般为数百公里或以上，这也对应了单个区域能够辐射和服务的范围。 云厂商在选址时一般会有两种思路： 1.  一种是考虑放在        **人口稠密的中心城市**        ，离用户和商业更近，以提供较快的接入体验；        2.  另一种则是在        **相对偏远的地区**        ，当地往往能够提供良好的气候条件、充足的建设空间，以及较低的电力、带宽等运营维护成本。        AWS在中国开设的两个区域，就是典型的例子：由光环新网运营的北京区域，位处繁华都市；由宁夏西云运营的宁夏区域则地广人稀。有时这样的搭配被称为"**前店后厂**"模式。 如何选择云上"区域"？区域是如此的重要，所以不仅是云厂商，我们的应用和架构，同样需要先挑选最合适的落脚点。那么，**当我们作为用户时，应该如何选择合适的区域呢？** **首要的考量因素，当然在于区域的地理位置本身**。这很好理解，我们需要让它尽可能地靠近我们应用所面向的最终用户，来保证更快的接入速度。 比如，当我们主要面向中国大陆用户服务，那自然不需要考虑其他国家的区域。 而如果我们的应用是具有鲜明地域性特征的服务，像是搭建一个面向华东地区的本地生活服务，那就应该更细致地就近选择区域了，比如说，我可以选择阿里云的"华东1（杭州）"或者"华东2（上海）"等区域。 另外，如果你的场景中需要本地数据中心与云端进行互联，也就是混合云架构，那么同样也需要事先注意云区域的地理位置选择。**混合云的专线接入，一般以同城或短距离接入为主**，这样你也能够较好地控制费用，同时提高线路的稳定性。 **第二个考量因素，非常重要而又容易被忽视，那就是区域之间云服务的差别。** 前面我们提到，区域是云计算物理上存在的一个基本单位，所以从 IaaS 到PaaS各项云服务的落地，也是按照区域进行的。换句话说，**同一个云在不同的区域，所能提供的服务和规模可能是不同的。** >  > **小提示：**> > >>>  > 厂商通常会大力宣传新机型或新服务的推出，但关于这个新服务在哪些区域可用的信息时常会淡化处理，放在不那么显眼的位置。我们需要特别注意这些信息。> > >因此，你就非常有必要在选择区域之前，先摸清楚相关区域的具体某项服务的可用性。 比如，生产环境需要一些 GPU机型来运行深度学习工作，那你就一定要通过官方网站查询，最好是进行实操验证，来确认理想的GPU机型真的存在于你所准备选择的区域；或者，你看到云厂商发布了全新数据库服务，那么在技术选型时也千万不要忘记，验证一下该服务在你选择的区域是确实可用的。 **另外，区域的"开服时间"，也往往会与区域内云服务的可用性有比较大的关联。** 一般来说，新开服的区域通常会落地最新一代的硬件和云端服务，也有非常充沛的资源可供调用，但它未必能迅速覆盖该云的所有服务，相关支持团队可能也需要进行磨合。 而历经时间考验的老区域，则通常会拥有更为丰富的产品选择和成熟的技术支持，但有时对新特性的部署和落地，可能会因为原有条件的限制而进展得缓慢一些。如果早期规划过于保守，极端情况下还可能出现局部"满服"而无法扩展某类资源的尴尬局面。 >  > **小提示：**> > >>>  > 不同云不同区域的实际情况千差万别。我上面说的这些，只是给了你一定的判断思路，仅供参考。必要时，你应当咨询云销售或客服来获取更细致的信息。> > >总而言之，新旧区域哪个更好，并不能一概而论，需要根据你的服务需求和待选区域的实际情况来综合衡量。 **第三个区域选择的考量因素，则是成本因素。即便是同一种服务的价格，在不同区域也往往是不相同的。** 当你的应用需要大批量地采购同一种型号的虚拟机时，或者是你想利用云存储设立一个大规模的云端备份中心，我都建议你仔细比对一下不同区域相关服务的价格，也许你会有惊喜的发现。个别区域会具有明显的价格优势，比如阿里云的华北5 区（呼和浩特），和 AWS中国的宁夏区域，以此来吸引用户的入驻。 谈到成本，这里我还想补充说明一下**区域的流量费用，是你需要注意的**。如果把区域作为一个有边界范围的实体圈起来，这个流量可以分为三类：**入站流量、出站流量和内部流量**。在现代云计算的计费框架下，一般会倾向于让入站流量和内部流量免费或接近免费，而出站流量则单独收费。 多区域架构浅谈接下来我们谈谈**多区域架构**，它指的是部分关键应用，为了追求最佳的用户体验和高可用性，需要把多个区域的资源和能力结合起来进行构建。 你首先需要了解，主流云厂商在跨区域方面也进行了大量建设和投资，主要体现为： 1.  **物理上**        ，各区域之间建设有网络互联专线，一般称为骨干网（Backbone）。骨干网的存在使得同一个云在不同区域间的通信，能够有较高的带宽和较低的延时。        2.  **软件层面**        ，允许位于不同区域的虚拟网络跨区域进行互联，使得多区域的私有内网能够借助自有骨干网无缝高速打通。        3.  **DNS 解析层面**        ，通常会提供就近解析和智能路由能力，将分布广泛的 C    端流量引流到最近的数据中心，以获得最快的响应速度。        ![](Images/ac654d2449696a62f62a71716a16f684.png)savepage-src="https://static001.geekbang.org/resource/image/d0/2a/d0fe39ce8cdda5f781b355de14b8b72a.jpg"}AWS 全球骨干网（来自slate-object="mark"}AWS 官网slate-object="mark"}slate-object="inline"）slate-object="mark"} 由此可见，公有云的基础设施（尤其是骨干网的存在）能够极大地方便我们构建多区域的应用程序。为了让你对云的骨干网有一个感性的认识，我们来进行一个**动手小实验**，实际感受一下区域间互联的吞吐能力。 我们就以 AWS中国的北京区域和宁夏区域作为例子。 首先，我在两边都各自创建了一台虚拟机，在获取 IP并开放相应端口后，使用 **iperf3**工具进行网络吞吐能力测试。先让一端作为服务器在某个端口监听：     [ec2-user@ip-172-31-xx-yy ~]$ iperf3 -s -p 3390    -----------------------------------------------------------    Server listening on 3390    -----------------------------------------------------------然后让另一端作为客户端，发送数据进行测试：     [ec2-user@ip-10-0-1-101 ~]$ iperf3 -c aa.bb.cc.dd -p 3390    Connecting to host aa.bb.cc.dd, port 3390    [  4] local 10.0.1.101 port 43640 connected to aa.bb.cc.dd port 3389    [ ID] Interval           Transfer     Bandwidth       Retr  Cwnd    [  4]   0.00-1.00   sec  53.6 MBytes   450 Mbits/sec    0   3.11 MBytes    [  4]   1.00-2.00   sec  61.2 MBytes   514 Mbits/sec    0   3.11 MBytes    [  4]   2.00-3.00   sec  61.2 MBytes   514 Mbits/sec    0   3.11 MBytes    [  4]   3.00-4.00   sec  61.2 MBytes   514 Mbits/sec    0   3.11 MBytes    [  4]   4.00-5.00   sec  60.0 MBytes   503 Mbits/sec    0   3.11 MBytes    [  4]   5.00-6.00   sec  60.0 MBytes   503 Mbits/sec    0   3.11 MBytes    [  4]   6.00-7.00   sec  61.2 MBytes   514 Mbits/sec    0   3.11 MBytes    [  4]   7.00-8.00   sec  61.2 MBytes   514 Mbits/sec    0   3.11 MBytes    [  4]   8.00-9.00   sec  61.2 MBytes   514 Mbits/sec    0   3.11 MBytes    [  4]   9.00-10.00  sec  60.0 MBytes   503 Mbits/sec    0   3.11 MBytes    - - - - - - - - - - - - - - - - - - - - - - - - -    [ ID] Interval           Transfer     Bandwidth       Retr    [  4]   0.00-10.00  sec   601 MBytes   504 Mbits/sec    0             sender    [  4]   0.00-10.00  sec   599 MBytes   502 Mbits/sec                  receiver    iperf Done.可以看到，在并发度默认为 1且未做任何调优的情况下，距离上千公里的双机点对点传输就达到了 500Mbps以上，效果相当不错。 >  > **小提示：**> > >>>  > 网络传输速度受到许多因素的影响。此处的测试结果数字仅供参考，不代表所测专线的实际带宽能力。事实上，通过增加并发度（如> iperf3 的 -P> 选项）并加强机器配置等，你还可以成倍地提升测试效果。建议你一定要结合自己的云环境和需求场景进行实际的测试。> > >所以，在骨干网的加持下，通过合理架构完全可以让多个区域的云服务融为一体。**借助云的力量，小厂也能轻松拥有巨头的分布式部署能力。** 在应用架构层面，多区域并不意味着，我们需要把某区域的资源依葫芦画瓢复制到其他区域，而是可以**根据实际情况各司其职，让不同区域担任不同的角色，联动起来达到业务目的**。 比如，我们可以将面向消费者服务的触点部署到多个区域，就近服务各地区的互联网流量，而偏后台的数据分析和BI服务，则可以安置在性价比较高的非一线城市区域，业务数据可通过骨干网不断回传。这是一种经典的分工模式。 当然，多区域架构固然诱人，我们也不应当走向另一个极端：**轻率、随意地拓展区域**。因为每一个区域的增加，都会相应增加应用架构的复杂性和流量费用，也给我们的维护工作带来负担，这些额外的成本可能会抵消多区域架构带来的好处。 什么是"可用区"？除了"区域"之外，很可能你还听说过"**可用区**"（AvailabilityZone）这个术语，它同样是非常重要的概念。因为看上去和区域有点相似，有些同学会把它们等同看待。事实并非如此。 可用区是区域的**下级概念**，是指一个具备完整而独立的电力供应、冷却系统、网络设施的数据中心单元。一个区域通常由多个可用区高速互联组成。区域内的可用区一般位于同一个城市，之间相距往往在一百公里以内。 所以物理上的"数据中心"和"机房"概念，若要严谨地对应到云端，其实是在可用区这个层面。 你可能会问，一个区域看上去拥有一个数据中心就足够了，为什么还要建造多个可用区呢？ 首要的原因，当然是**为了解决区域内高可用性问题**，这也正是"可用区"名字的由来。尽管数据中心内部有着非常精密的运作系统和冗余机制，但地震、火灾、雷击等极端情况下，仍有可能造成数据中心级别的故障。 为了避免单个数据中心故障让整个区域不可用，那自然就有必要建设多个相对独立的数据中心，也就是多个可用区了。它能让区域中的服务达到相当高的可用性。许多云上的PaaS服务，正是依赖多可用区，来建设架构并保证冗余的。 所以你在设计 IaaS层面架构时，也可以利用可用区来实现自己的业务效果。比如在创建云虚拟机时，我们是可以指定可用区的： ![](Images/660a04787f763583b86572bad1c5109d.png)savepage-src="https://static001.geekbang.org/resource/image/38/8d/383b52132dca221c37a31a68fc963b8d.jpg"}阿里云华东 1 区可用区选择界面slate-object="mark"} 多可用区架构的选择，与前面探讨的多区域架构类似，同样是一个在网络性能、成本、可用性之间权衡的问题。我们可以将资源安排在同一个可用区，以便获得较高的网络互访性能；也可以安排在不同的可用区，以实现故障隔离和服务冗余。 区域需要多个可用区的另一个原因，在于**区域本身有扩展的需求**。一些区域由于早期的容量规划和成本控制原因，很可能在若干年的运营后就会变得资源紧张、后劲不足。 这时得益于可用区的机制，区域可以通过新建可用区，不断扩展自身容量，补充新鲜血液；而老旧的可用区，则可不对新用户开放，逐步封存甚至淘汰，这让区域形成了良好的新陈代谢机制。 所以反过来讲，**可用区的数量也可以成为一个衡量区域规模的重要指标**。数量越多，意味着这个区域规模越大。在选择区域的时候，这个指标也可以作为重要参考。 课堂总结与思考今天是我们《深入浅出云计算》的第一讲，主要讨论了区域和可用区这两个核心概念。我把这一讲的要点简单总结如下： 1.  区域是云计算的顶层概念，云服务以区域为单位对外开放；        2.  区域选择需要考虑多种因素，包括但不限于地理位置、服务丰富性、开服时间、资源成本、可用区数量等；        3.  可用区是区域之下的重要层级，代表独立的数据中心，一个区域内往往有多个可用区；        4.  妥善将资源分布到不同可用区，可实现故障隔离，提升架构的可用性。        在讲解这些内容的同时，今天我们也触碰到了网络和高可用架构等相当硬核的话题。如果你觉得还不过瘾，也没有关系，后续会有相关的专题章节作进一步的探讨。 **最后，我想给你留下两个思考题，欢迎你在留言区和我互动：** 1.  你日常接触的云计算区域是哪些？你有察觉到区域之间的一些差别吗？        2.  在 2019 年 AWS re:Invent    大会上，亚马逊还推出了全新的"本地区域"（Local    Zone）概念。这又是为什么场景所设计的？层级上它更接近"区域"还是"可用区"呢？        如果你觉得有收获，也欢迎把这篇文章分享给你的朋友。感谢阅读，我们下期再见。 
# 02 \| 云虚拟机（一）：云端"攒机"，有哪些容易忽视的要点？你好，我是何恺铎。前一讲，我先从数据中心的角度入手，和你讲解了云计算中"区域"和"可用区"的概念，帮助你建立起了大局观。今天，我们就开始进入微观层面，来介绍和讨论IaaS中最重要的核心服务：云虚拟机。我想，你可能对虚拟机并不陌生，现在虚拟机的应用已经很普遍了。传统的物理服务器上通过安装虚拟化软件，就可以虚拟出多个互相隔离的虚拟机，来帮助我们提高资源的使用效率。云计算中的虚拟机，本质上也是如此，也是底层计算存储能力的抽象和开放。所以你也许会问，那么云虚拟机到底有什么值得讨论的呢？看上去也就是选取CPU、内存、硬盘几大件，然后启动后登录使用，似乎没有什么新鲜的东西？没错，云虚拟机粗看起来和传统服务器较为类似。但当你对它的应用逐渐深入、规模不断加大时，就非常有必要去深入了解云虚拟机的特点了，因为你开始需要针对不同的场景进行选型，也要在性能和成本间找到最佳的平衡，让你的应用效益最大化。因此，我接下来就会用三讲课程，为你详细讲解下云端虚拟机的"门道"。云虚拟机到底是什么？云虚拟机，顾名思义，是在云端虚拟出的服务器。这个服务器你可以完全地控制它，从底层操作系统到安装上层应用。站在技术实现的角度来讲，虚拟化技术是云虚拟机服务的核心，它本身是一个非常宏大的技术领域。比如你可能听说过Xen、KVM、VMWare、HyperV等等虚拟化产品和技术。云计算中所使用的虚拟化技术，也大都是从这些虚拟化实现方式演化而来的。作为开发者，我们当然不需要成为虚拟化技术专家。我们只需要知道，云端的虚拟化技术在不断进步和发展，使得云端虚拟化的性能损耗在不断减少、资源利用率不断提升就可以了。但你很有必要去了解云计算中虚拟机的体系结构，这也是云虚拟机与传统虚拟机的最大不同。云虚拟机的体系结构，用一句话来概括一下，就是全面解耦的**计算存储分离**的设计思想。>  > 小提示：计算存储分离是云计算设计理念中最重要的思想之一，不仅仅体现在虚拟机上，也体现在其他的云服务架构中。我们今后还会不断涉及。> > >传统的虚拟化，往往是对单一物理机器资源的纵向切割，计算、存储、网络等各方面的能力都是一台物理机的子集。因此，从可伸缩性的角度来说，传统虚拟机存在较大的局限，当物理机的局部出现故障时，也很容易影响到里面的虚拟机。得益于云端大规模的专属硬件以及高速的内部网络，云虚拟机的组成则有所不同。除了核心的CPU与内存部分仍属于一台宿主机外，它的网络、硬盘等其他部分，则可以超脱于宿主机之外，享受云端其他基础设施的能力。大致架构如下图所示：![](Images/a17205c95fe2a880abcecab6dbe9f7d0.png)savepage-src="https://static001.geekbang.org/resource/image/78/f9/785d6518852a25283a5337646a19a1f9.jpg"}你要注意的是，这里我所给出的仅仅是一个简化加工之后的示意图。实际的云计算内部实现，会远比这个要复杂和精妙。不同的云的内部，也会有许多不同的专用硬件各显神通。所以，云虚拟机，与其说是由一台宿主机虚拟而成的，不如说是云数据中心中的不同部分一起协作，"拼凑"而成的一台机器。这样虚拟出来的机器，我们在使用感受上其实与传统服务器并无不同，但在可扩展性和故障隔离方面，它就具有很大的优势了。举个例子来说，一台云虚拟机，它可以同时挂载很多硬盘，还能够插上很多"网卡"，拥有多个不同的外部IP。这就是充分解耦带来的好处。各家厂商的云虚拟机服务的名称会略有不同，阿里云称为云服务器ECS（Elastic Compute Service），AWS 称为 EC2（Elastic ComputeCloud），Azure 就叫 Virtual Machine，腾讯云则叫做云服务器 CVM（CloudVirtual Machine）等等。这里，你需要注意将虚拟机服务和一些建站类服务区分开来，因为它们有时在名称上可能比较类似。比如"云主机"这个叫法，很多云上就是指云虚拟机，在个别云上对应的却是简单建站服务，请你注意不要混淆。>  > 建站类服务主要是提供一些网站的托管运行环境，如> PHP。它是一个相对受限的环境，严格来说属于 PaaS> 服务的范畴，比较注重易用性。而虚拟机呢，则提供了一台真正意义上的服务器，从操作系统到上层应用，都可以自己控制，比起建站类服务来说要开放、通用得多。> > >虽然各个云厂商对云虚拟机有不同的叫法，但它们的产品形态是比较一致的。当你来到虚拟机服务的门户，一般会有一个列表界面，能够列出当前你拥有的所有虚拟机，你可以按照不同字段过滤、删选、排序。你还可以点击某个VM 查看详情，界面一般会展示出 VM的常用运行指标。![](Images/9e4e526e54feed34f1320fa407c70c0f.png)savepage-src="https://static001.geekbang.org/resource/image/f8/91/f86e8298381c2bfcf7d101ff3ea92a91.jpg"}AWS EC2 自带的指标监控slate-object="mark"}云端"攒机"实战讲到这里，你已经基本了解云虚拟机的概念了。接下来，让我们进入云虚拟机的实际操作环节。所有的云上，创建虚拟机时一般都会有相当贴心的向导，你可以在虚拟机门户上点击"创建"，然后按照步骤一步步进行即可。今天，我们就以在阿里云上创建Linux虚拟机为例，帮你把"攒机"时最主要的环节串一串，同时顺便给你介绍一下，那些在"攒机"时容易被忽视但又非常关键的要点。>  > 小提示：在本次实验中，建议你选择"按量付费"的付费模式，这也是云计算的经典付费模式。这种模式是按虚拟机的使用时间付费，比较适合短期实验。当然，更多付费模式都各有特点，后面的第> 4 讲中我们会进行比较和探讨。> > >**第一步，当然是选择和确认虚拟机的所在区域**。区域的概念，我在上一讲中已经提到过，它决定了虚拟机的地理位置。![](Images/d83e8b7439a2188322553df8a2dc2fb8.png)savepage-src="https://static001.geekbang.org/resource/image/e9/99/e96a0f7c49173b188154929bfbaa9499.jpg"}>  > 小提示：在部分云中，区域是顶级概念，指定新建虚拟机的区域需要你事先在门户的右上角进行选择和切换，如> AWS。> >这样，新建的虚拟机就会处于你当前选择的区域。你还可以指定区域内的特定可用区。**随后，就是虚拟机的配置确认环节**，也就是我们通常所说的什么型号、几个核、几 G内存的选择。配置的选择无疑非常重要，我会在下一讲着重介绍，这里我们先不妨选择默认的2 核 8G 配置。![](Images/da4b79e0468edeeb6efca925313de3c7.png)savepage-src="https://static001.geekbang.org/resource/image/90/b6/9063f760c1a2bc2fe49e266534ed29b6.jpg"}接着，就有你需要注意的一个要点：**选择操作系统镜像**。在这里，你可以选择虚拟机所要安装和使用的操作系统，比如常见的CentOS 和Ubuntu，同时你也需要选择这个系统具体的版本号。在操作系统的列表中，你往往会看到厂商的自有操作系统，比如阿里云的Aliyun Linux、AWS 的 Amazon Linux等。这是一个很有意思的事情。既然已经有诸多流行的 Linux发行版了，为什么云厂商还要推出自己的 Linux版本呢？我们什么时候才应该考虑使用它们呢？![](Images/47cdee6fdcb932d9a3e2a1c97a66da86.png)savepage-src="https://static001.geekbang.org/resource/image/61/d9/61b6f428f8f492ba33a17c641af510d9.jpg"}你可以这样理解：1.  首先，厂商的 Linux    版本，在理论上会和自己云上的硬件有更好的适配，这样能够更充分地发挥相关硬件的性能。一般来说，厂商也会在自己的云上进行充分的测试和验证。        2.  其次，在内核和基础组件的选择上，厂商专有操作系统往往会根据自己的需求判断，来进行一些取舍和裁剪，所以一般会有一个相对苗条的身材，占用比较小的磁盘空间，同时启动速度更快。这是一种更适合云环境的选择，尤其是当你的虚拟机集群规模较大时，就能够显出规模经济效应了。        3.  再次，厂商操作系统会预装和云的使用操作方面的一些软件包和    SDK，能够为你提供便利。比如说，厂商一般会预装该云的命令行工具（CLI，Command    Line Interface），像是 AWS CLI    等。    4.  另外，当然也有云厂商出于"自主可控"方面的考虑，想拥有自己能完全控制的操作系统，不但技术上可以自主演化，还能防范一些商务合作上的风险。厂商自家的    PaaS    服务，它的底层也一般是使用自己的操作系统。        所以，如果你希望操作系统有更好的软件"兼容性"，或是公司有统一的标准，就可以选择熟悉的老牌Linux 系统；而如果你有一些大规模、注重性能的业务，不妨考虑尝试下厂商的Linux 操作系统。**接下来，在系统盘方面，我们选择默认给出的40G"高效云盘"即可**。云硬盘的故事非常精彩，我们第 5讲中会专项讨论，这里你只需要保持这个默认选项就可以了。![](Images/d2145b3068a240008622fad3b94fede4.png)savepage-src="https://static001.geekbang.org/resource/image/33/31/334c79beaad866a9f85b09fdf6d3aa31.jpg"}**点击"下一步"，我们来到网络和安全组的配置页面**。在这里，你可以配置私有网络、IP、带宽等重要的网络选项。虚拟私有网络（VPC）同样是一个很大的话题，我们会在第6 讲展开学习。这里我们简单起见，请勾选"分配公网 IP地址"的选项。这样创建的虚拟机，会自动被分配一个公开 IP地址，便于我们稍后从自己的电脑直接发起连接。![](Images/dcf5a9e94cbbfcba605f98c513873626.png)savepage-src="https://static001.geekbang.org/resource/image/e5/0e/e5b2880979b3c1a5019a80becb0c600e.jpg"}今天我想着重讨论的另一个重点，是接下来选项中的**[网络安全组 slate-object="mark"}**（Network Security Group, 简称NSG）。如果这里配置不当，就会直接影响虚拟机的使用。很多新同学由于不太了解这个概念，常常会造成无法远程连接登录的情况。你可以把网络安全组理解为一层覆盖在虚拟机之外的网络防火墙。它能够控制虚拟机入站、出站的流量，并能根据协议、端口、流向等所设定的规则，来决定是否允许流量通过。所以某种程度上，网络安全组和操作系统中我们熟知的防火墙（如 Linux 的iptables 和 Windows防火墙）一样，都起到网络安全防护的作用。但你需要注意的是它们的区别：网络安全组并不工作在操作系统层面，而是在操作系统层之外，是额外的一层防护。非法流量在尚未到达OS 的网络堆栈之前，就已经被它阻断了。所以 **NSG的一个优点在于，它不会影响 VM的性能。** 另外，**网络安全组是一种可复用的配置**。如果你有大量虚拟机适用于同样的网络控制规则，那么，你就能够很方便地让它们使用同一个网络安全组，这样你管理起来会非常方便。网络安全组是绝大多数云都支持和实现了重要特性，它体现了云计算中**软件定义网络**的特点。网络安全组非常灵活，你可以随时更改，规则也会动态生效。>  > 小提示：当你在排查虚拟机的连通性相关问题时，比如假设你的网站或 API> 无法被访问，那你一定要记得检查网络安全组中的设置，查看它相关的端口和协议是否已经开放。> > >![](Images/83f14d773968e6b199f91f8153dd7a9b.png)savepage-src="https://static001.geekbang.org/resource/image/4a/ab/4ae25a707929d30b41c1d91c0803dfab.jpg"}OK，回到我们虚拟机创建的流程，所以我们要创建或使用一个，至少开放了 **22端口**的网络安全组，以便我们能够通过 SSH连接上去。阿里云中，就提供了方便的"默认安全组"，我们只需要勾选需要开放的端口，就会帮助我们生成一个安全组实例，并对这台机器启用。你也可以事先手工创建一个安全组，并在此处选择。![](Images/f5c28c157a97756df9c27212e2d7fedc.png)savepage-src="https://static001.geekbang.org/resource/image/99/4e/998ab7dd2987d2c2adb7aeedb05cca4e.jpg"}**再点击下一步，我们就进入了"系统配置"阶段**，在这里，你可以为实例命名，指定用于登录的用户名密码或密钥对等，这里比较简单我就不再赘述了。![](Images/71f8bc292cf0f4a88074747dd20a76d4.png)savepage-src="https://static001.geekbang.org/resource/image/7a/91/7aefdff1f6f390eab112e0c612910991.jpg"}然后，暂时跳过一些可选的高级设置，**确认订单后，按下"创建实例"，就可以等待虚拟机的生成了**。一般数十秒至数分钟之内，一台崭新的云服务器就会就绪，进入运行状态。![](Images/4096488683825f42b325cda52768d460.png)savepage-src="https://static001.geekbang.org/resource/image/3d/03/3d6eb8164a7096fad0e1bfca06a88b03.jpg"}此时，你可以通过 SSH 连接上虚拟机的公开 IP，使用 hostnamectl命令查看一下虚拟机的信息，嗯，一切正常。    client@clientVM:~$ ssh -i ./geektime-ali-sh.pem PI:EMAIL    Welcome to Alibaba Cloud Elastic Compute Service !    [root@my-ecs-vm1 ~]