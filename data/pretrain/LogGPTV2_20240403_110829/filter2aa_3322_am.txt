3.1.6 授权验证绕过漏洞
授权验证绕过漏洞是一种在没有授权认证的情况下可以直接访问
需要通过授权才能访问的系统资源，或者访问超出了访问权限的安全
缺陷。漏洞产生的原因是应用系统在处理认证授权请求时响应不当，
用户可通过发送特制格式的请求数据绕过授权验证过程。授权验证绕
过漏洞可导致未授权访问或越权访问。未授权访问是指在没有认证授
权的情况下能够直接访问需要通过认证才能访问的系统资源，越权访
问是指使用权限低的用户访问权限较高的用户或者相同权限的不同用
户可以互相访问（见图3-7）。蓝队主要利用授权验证绕过漏洞实现以
下目的：
·访问目标应用系统后台未授权资源，获取敏感信息，积累渗透
条件；
·通过利用漏洞获取目标应用系统的控制权限，进一步开展渗
透；
·获取目标应用系统更高的控制权限，以获取更多的目标资源。
图3-7 Jenkins未授权访问漏洞信息
授权验证绕过漏洞也多存在于各类Web平台、网络代理框架与网络
业务应用之中。比如：Apache Shiro[1]权限绕过漏洞（CVE-2020-
11989）是由于处理身份验证请求时出错导致的，远程攻击者可以发送
特制的HTTP请求，绕过身份验证过程并获得对应用程序的未授权访
问；MongoDB[2]Server安全机制绕过漏洞（CNVD-2020-35382）源于应
用没有正确序列化内部的授权状态，攻击者可利用该漏洞绕过IP地址
白名单保护机制。
[1] Apache Shiro是一个强大且易用的Java安全框架，执行身份验证、授
权、密码和会话管理。
[2] MongoDB是一个基于分布式文件存储的数据库，旨在为Web应用提
供可扩展的高性能数据存储解决方案。
3.1.7 权限提升漏洞
权限提升漏洞是指本地系统或系统应用在低权限情况下可被利用
提升至高权限的安全缺陷，是因本地操作系统内网缓冲区溢出而可以
执行任意代码或因系统应用管理配置不当而可以越权操作导致的。权
限提升漏洞主要包括本地系统提权、数据库提权、Web应用提权和第三
方软件提权。权限提升漏洞多被攻击者用于在对渗透控制目标原有低
权限的基础上通过提权实现高权限命令执行或获得系统文件修改的权
限，从而实现在目标网络内更大的操作控制能力。蓝队主要利用权限
提升漏洞实现以下目的：
·获取本地系统管理员权限，以便获取用户Hash、修改系统配置
等，更方便进一步渗透拓展；
·通过数据库、Web应用、第三方软件实现对本地服务器的拓展
控制，以获取更多信息资源。
权限提升漏洞多存在于本地主机或服务器、数据库应用、Web应用
系统、虚拟化管理平台等之中。比如：Windows本地权限提升漏洞
（CVE-2021-1732）就可以被攻击者利用来将本地普通用户权限提升至
最高的system权限。该漏洞利用Windows操作系统win32k内核模块的一
次用户态回调机会，破坏函数正常执行流程，造成窗口对象扩展数据
的属性设置错误，最终导致内核空间的内存越界读写；当受影响版本
的Windows操作系统用户执行攻击者构造的利用样本时，将会触发该漏
洞，造成本地权限提升（见图3-8）。又如：Linux sudo权限提升漏洞
（CVE-2021-3156）产生的原因是Linux安全工具sudo在运行命令时对
命令参数中使用反斜杠转义特殊字符审核不严格而导致缓冲区溢出。
利用该漏洞，攻击者无须知道用户密码且在默认配置下，就可以获得
Linux系统的root权限。
图3-8 Windows本地权限提升漏洞（CVE-2021-1732）PoC应用示例
3.2 口令爆破
在网络攻防演练中，目标网络或系统有后台或登录入口的（如Web
管理、Linux系统SSH登录、Windows远程桌面、Telnet、FTP、网关管
理、VPN登录、OA系统、邮件系统或数据库服务器等），攻击者也常常
会将这些登录入口作为攻击的重点。只要能通过各种手段获取这些入
口的账户口令，攻击者就能获得目标网络或系统的访问控制权，访问
用户能访问的任何资源，并在此基础上开展进一步的攻击渗透。口令
爆破就是攻击者尝试所有可能的“用户名+口令”组合，逐一进行验
证，并尝试破解目标用户的账户口令的一种攻击手法。口令爆破是蓝
队获取目标网络或系统登录入口账户口令的重要手段。在实战攻防演
练中，由于目标网络的整体防护水平及人员网络安全意识不强，目标
网络内外网应用、服务器、网关默认口令没有修改或使用弱口令的情
况普遍存在，这为蓝队实现口令爆破提供了可能。根据口令复杂度的
不同，口令爆破可以分为弱口令和口令复用两类。
3.2.1 弱口令
弱口令通常是指容易被攻击者猜测或被破解工具破解的口令。弱
口令仅包含简单的数字和字母组合，例如123456、root、admin123
等；或是仅有一些常用或简单的变形，例如Admin、p@ssword、
root!@#等。蓝队可以通过构建弱口令字典，借助弱口令扫描工具或口
令爆破工具对远程桌面、SSH管理、默认共享等进行登录尝试（见图3-
9）。
图3-9 实战攻防演练中典型的弱口令示例
弱口令多是由于目标人员的网络安全意识不足，未能充分认识到
弱口令的安全隐患严重性导致的。除了常见的弱数字和字母组合，实
战攻防演练中常见的弱口令还有以下两种情况。
（1）产品默认口令
在部署网关、路由、综管平台、数据库服务器应用时，如果未对
设备或系统的默认口令进行修改，而这些产品的默认口令信息多可以
通过公网查询到，那么在蓝队攻击渗透过程中它们就很容易被作为首
要的口令尝试选择。此类口令利用在实战攻防演练中占据相当大的比
例，尤其是在内网拓展中，成功率非常高。
（2）与用户名关联
这种情况主要是指用户名和口令具有很大的关联性，口令是账户
使用者的姓名拼音或是用户名的简单变形等。比如，很多企业员工使
用类似zhangsan、zhangsan001、zhangsan123、zhangsan888之类的口
令。针对这类口令，蓝队在攻击前通过信息搜集提取目标人员信息
后，常常通过目标人员姓名构建简单的密码字典进行枚举即可攻陷目
标OA系统、邮件系统等。
3.2.2 口令复用
口令复用是指多个设备或系统使用同一口令的情况。实战攻防演
练中，口令复用表现为目标网络内同一账户口令被用在同类设备应用
甚至不同设备应用上。蓝队通过某一途径获取了其账户口令后，就可
以通过口令复用的方式轻而易举地登录并控制这些设备应用。口令复
用中用到的口令多是比较复杂的口令，面向的也多是相对重要的设备
应用，比如一些重要的网关设备、业务服务器、业务系统等，所以口
令复用极容易导致网络节点批量失陷，造成比较大的攻击面。口令复
用常常是指同一口令，但在实战攻防演练中，在原有口令上进行简单
的变形或是以数字相加对应设备排序等情况，也可以归为口令复用。
3.3 钓鱼攻击
钓鱼攻击是一种典型的欺诈式攻击手段，攻击者通过伪装成可以
信任的角色，利用电子邮件或其他通信渠道向被攻击者发送植入了木
马的文档或恶意链接，并诱骗被攻击者点击执行，从而实现对被攻击
者计算机的远程控制或恶意程序感染。实战攻防演练中，蓝队对目标
进行钓鱼攻击的主要目的是在目标网络中建立支点，实现外网打点突
破或内网定向攻击。通过钓鱼攻击控制被攻击者主机，并利用内网信
息搜集手段从被控的目标主机上搜集有关目标网络的安全认证、业务
应用系统操作、网络共享访问、网络组织架构和部门人员等敏感信
息，为后续进一步攻击渗透积累条件。根据钓鱼的具体实现目标的不
同，蓝队进行钓鱼攻击分为外网钓鱼和内网钓鱼，二者的主要区别见
表3-1。
表3-1 内外网钓鱼的主要区别
3.3.1 外网钓鱼
蓝队外网钓鱼的主要目的是实现对目标网络的打点突破，即向前
期搜集到的目标内部人员邮箱、平台客服、微信公众号发送植入了木
马的文件，诱骗目标人员点击钓鱼文件，使木马在对方主机上运行回
连，实现对目标主机的远程控制，并以此为支点进一步渗透目标内
网。外网钓鱼攻击的目标人员和诱骗素材投递途径往往有限，比如：
钓鱼的目标人员往往受限于前期通过各种手段能够搜集到的有关人
员，主要是一些对外业务交流人员、招聘人员、客服人员等；诱骗素
材投递途径也受限于外网邮箱、客服平台或微信公众号等外网应用。
实战攻防演练中，蓝队外网钓鱼很少使用水坑钓鱼，因为在有在控目
标网络服务器的情况下，再进行水坑钓鱼就是非必要的了（见图3-
10）。
图3-10 实战攻防演练中的钓鱼案例
外网钓鱼攻击包括以下几个步骤。
（1）钓鱼目标选定
外网钓鱼目标的选择要遵循一个原则：选择网络安全意识薄弱的
目标人员。要尽量选择客服人员、人事部门人员、财务人员或商务人
员这类人员进行钓鱼，因为这类人员通常网络安全知识基础薄弱，对
来自外网的安全威胁缺乏足够的认识，对网络钓鱼的安全防范意识
弱，所以对其进行钓鱼攻击就很容易成功，即使钓鱼过程有异常情况
（如木马运行异常、杀毒软件报警、钓鱼素材不能正常显示等）发
生。外网钓鱼应尽量避免针对运维管理人员这类具有较强网络安全知
识基础的人员，除非掌握了其相当准确的个人情况（喜好、工作习
惯、工作岗位），以及有高效的诱骗工具、素材和充分的异常应对措
施。
（2）钓鱼工具准备
高效的工具是保证钓鱼成功的关键。工具的准备工作主要围绕诱
骗文档格式选择和木马免杀展开：诱骗文档格式决定了木马触发的方
式，木马免杀则决定了是否成功运行并回连控制。在实战攻防演练中
常见的诱骗文档格式和形式有可执行文件、反弹脚本、Office宏、
Office文档捆绑、CHM文档、LNK文件、HTA文件、文件后缀RTLO和自解
压运行压缩包等，这些文档格式和形式可以根据钓鱼素材灵活搭配使
用。木马免杀则主要依据前期目标信息搜集，综合考虑目标网络安全
防护、杀毒软件类型、钓鱼目标个人办公环境等因素进行有针对性的
免杀，以确保木马顺利执行并出网回连。