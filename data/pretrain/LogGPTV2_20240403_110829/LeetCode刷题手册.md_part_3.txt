1017. Convert to Base -2
185. Day of the Week 
184. Distance Between Bus Stops
175. Prime Arrangements 
145. Binary Tree Coloring Game
089. Duplicate Zeros 
079. Letter Tile Possibilities 
054. Distant Barcodes
052. Grumpy Bookstore Owner
051. Height Checker 
049. Last Stone Weight Il
047. Remove All Adjacent Duplicates In String 
189. Maximum Number of Balloons
170. Compare Strings by Frequency of the Smallest Character
160. Find Words That Can Be Formed by Characters
157. Online Majority Element In Subarray
137. N-th Tribonacci Number 
123. Lowest Common Ancestor of Deepest Leaves
122. Relative Sort Array 
108. Defanging an IP Address 
105. Filling Bookcase Shelves 
040.M
028. Recover a Tree From Preorder Traversal 
171. Remove Zero Sum Consecutive Nodes from Linked List 
154. Day of the Year
128. Number of Equivalent Domino Pairs
110. Delete Nodes And Return Forest 
---
## Page 13
为什么会写这个开源书
一般动手操作，实践类的书都会有这个名字。
直译的话就是烹饪书，教你做各种食谱美食的书。经常看O'Reilly技术书的同学对这个名词会很熟悉。
什么是Cookbook
助冠名的比赛获得前几名除了有奖品，还能直接拿到内推的机会。
它刷题主要是为了面试。据历史记载，这个网站 2011年就成立了，马上就要到自己10周年的生日
说到LeetCode，作为一个程序员来说，应该不陌生，近几年参加面试都会提到它。国内外的程序员用
关于LeetCode
第一章序章
了。每周举行周赛，双周赛，月赛，在有限时间内编码，确实非常能考验人的算法能力。一些大公司赞
1470. Shuffle the Array 
1317. Convert Integer to the Sum of Two No-Zero Integers
1464. Maximum Product of Two Elements in an Array 
1455. Check If a Word Occurs As a Prefix of Any Word in a Sentence
1313. Decompress Run-Length Encoded List 
1306. Jump Game Ill
1305. Al Elements in Two Binary Search Trees
1302. Deepest Leaves Sum 
1300. Sum of Mutated Array Closest to Target 
1299. Replace Elements with Greatest Element on Right Side
1295. Find Numbers with Even Number of Digits
1290. Convert Binary Number in a Linked List to Integer
1283. Find the Smallest Divisor Given a Threshold
1281. Subtract the Product and Sum of Digits of an Integer
1275. Find Winner on a Tic Tac Toe Game
1266. Minimum Time Visiting All Points 
1260. Shift 2D Grid
1254. Number of Closed Islands 
1252. Cells with Odd Values in a Matrix
389. Create Target Array in the Given Order
1385. Find the Distance Value Between Two Arrays
1380. Lucky Numbers in a Matrix
1304. Find N Unique Integers Sum up to Zero
1287. Element Appearing More Than 25% In Sorted Array
---
## Page 14
关于书中的代码
刷到 800 题的时候回头开始二刷，三刷。(不达目的不罢休吧~)
2020 年笔者肯定还会继续刷题，因为还没有达到自己的一些目标。可能会朝着1000 题奋进，也有可能
际上每天有时候不止一题，最终完成了600+：
笔者从 2019年3月25号开始刷题，到2020年3月25号，整整一年的时间。原计划是每天一题。实
麻麻的算法模板。知识学会了，终身都是自己的，没有学会，那些知识都是身外之物。
的选手，看到了自己和他们的差距。最后，就是那200 多页，有些自己都没有完全理解的，打印的密密
ICPC，但是由于资质不高，没有拿到一块金牌。所以在算法方面，我对自己的评价算是新手吧。参加
笔者是一个刚刚入行一年半的 gopher 新人，还请各位大佬多多指点小弟我。大学参加了 3年ACM-
关于作者
ACM-ICPC 最大的收获是训练了思维能力，这种能力也会运用到生活中。其次是认识了很多国内很聪明
能力，在人生的舞台上开出自己的"屏"。全书配色也都是绿色，因为这是 AC 的颜色。
图片，这张孔雀开屏是其中一张。孔雀开屏的意义是希望大家刷完LeetCode 以后，提高了自身的算法
描风的图片。常见的能找到 40 张这种风格的图片。不过用的人太多了，笔者费劲的找了其他几张这种
都是稀缺动物，并且画风都是黑白素描风。这些动物都有版权了，所以只能在网上找没有版权的黑白素
常看 O'Reilly动物书的同学一看这个封面就知道是向他们致敬。确实是这个目的。O'Reilly 的封面动物
关于书的封面
己的知识漏洞，强迫自己去弥补。笔者在公司做过相关的分享，感受很深，双方受益都还不错。
让他完全听懂，很能锻炼人的表达能力。在讲解中很可能还会遇到听者的一些提问，这些问题可能是自
起交流学习。对于自己来说，写题解也是一种提高。把一道深奥的题目讲给一点都没有头绪的人，并能
笔者刷题刷了一年了，想和大家分享分享一些做题心得，解题方法。想和有相同爱好的人交个朋友，
Basic
(当然这些都是过去了，不重要了，全当是奋斗路上的一些小插曲)
有时候笔者早上6 点起床刷题，提交以后也都是前一天的。
想出来了就到第二天凌晨了。于是再做一题当做第二天的量。结果会发现这2题都算前一天的。
的问题，导致我空白了这22个格子。比如有一道Hard 题很难，当天工作也很多，晚上下班回家
图也是按照这个时区计算的。也就是说，中国每天早上8点之前，是算前一天的！也是因为时区
果你也想坚持，
一个温馨提示：
题。现在不知道算不算是"出来混的，总是要还的”。
另外，
★★★☆☆
在大学期间，笔者做题的时候最讨厌写题解，感觉是浪费时间，用更多的时间去做更多的
halfrost
让这个图全绿，一定要注意以下的问题：LeetCode 服务器是在+O 时区的，这个
笔者本以为每天做一题，会让这个 submissons 图全绿，但是我发现我错了。如
Edit Profle
+
---
## Page 15
一起开始刷题吧~
最后
如果书中文章有所遗漏，欢迎点击所在页面下边的 edit 按钮进行评论和互动，感谢您的支持与帮助。
互动与勘误
使用说明
本书的算法全部用 Go 语言实现。
编程语言
想通过 LeetCode 提高算法能力的编程爱好者。
目标读者
当然，如果还有其他更优美的解法，
高
有发现这个问题，很多题用正确的代码连续交了很多次，一年提交3400+次，导致我的正确率也变的奇
LeetCode 统计代码运行时长会有波动的，相同的代码提交 10 次可能就会 beats 100%了。笔者开始没
面试官会更满意一些
如果给了这样的答案，
有好几道 Hard 题，笔者都用暴力解法 AC 了，然后只 beats 了 5%。这题就如同没做一样。而且面试中
有可能读者会问，为何要追求 beats 100%。笔者认为优化到beats 100% 才算是把这题做出感觉了。
继续优化到100%再放进来。
本书题目的代码都已经 beats 100% 了。没有 beats 100% 题解就没有放到本书中了。那些题目笔者会
代码都放在 github repo 中，按题号可以搜索到题目。
●
本电子书每页都接入了 Gitalk，每一页的最下方都有评论框可以评论，如果没有显示出来，请检查
本电子书的左上角有搜索栏，可以迅速帮你找到你想看的章节和题号。
?
思路，看解题思路；实在优化不到100%，看看代码。
自己实现出来了，提交以后有错误，自己先 debug。AC 以后没有到100% 也先自己思考如何优
关于题解，笔者建议这样使用：先自己读题，思考如何解题。如果15 分钟还没有思路，那么先看
自己的网络。
化。如果每道题自己都能优化到100%了，那么一段时间以后进步会很大。所以总的来说，实在没
者提供的代码，找出自己到底哪里不会写，找出问题记下来，这就是自己要弥补的知识漏洞。如果
笔者的解题思路，但是不要看代码。有思路以后自己用代码实现一遍。如果完全不会写，那就看笔
些
面试官也不会满意，“还有没有更优解？"。如果通过自己的思考能给出更优解，
，也能 beats 100% 的，欢迎提交 PR，
，笔者和大家一起学习。
---
## Page 16
第二章算法专题
题解里面的所有题目版权均归 LeetCode和力扣中国所有
本作品采用 知识署名-非商业性使用-禁止演绎 (BY-NC-ND）4.0 国际许可协议 进行许可。
LeetCode
fmt.Printf("Hello, Golang!")
---
## Page 17
Array
那么就分享一下笔者目前刷过的题，和有相似点的题目吧。
分，还在学习中。
之优雅的地方。笔者认为称它为算法的艺术不为过。动态规划这类型，笔者也还没有刷完，只刷了一部
做到目前为止，
其实相同的题目刷2，3道就可以了。相同类型的题目非常熟练的情况下，再多刷几道也是做无用功。
那么这一章就把已经刷完了的专题都整理一遍。有相似套路的题目都放在一起，如果想快速面试的话,
个版本了(一年迭代一版)。
这个阶段的刷题心得，和大家一起交流。要想把LeetCode 所有题目都刷完，看来这本书要迭代 5～10
年才能把所有的题目刷完。时间太长了。所以先给自己定了一个小目标，500题就先把书写出来，总结
了。而且以我当前的刷题速度，一年才完成 500+，一年LeetCode 也会更新 400+多题，要起码 5~10
真了。因为LeetCode 每天都会增加新题，有时候工作忙了，刷题进度就完全追不上题目更新的速度
本来天真的认为，把LeetCode 所有题都完整刷一遍，就可以完整这本书了。经过事实证明，确实是天
16. 3Sum Closest 
15. 3Sum 
11. Container With Most Water
1. Two Sum
Title
，笔者认为动态规划是最灵活的类型，
 Solution
Go
15
Go
D
，这类题目没有一个模板可以给你套用，它也是算法
Difficulty
Medium
Medium
Medium 
Easy
O(n~2)
O(n~2) 
(u)o
(u)o
Time
Space
0(1)
(u)o
0(1)
(u)o
收藏
---
## Page 18
Stock II 
122. Best Time to Buy and Sell
120. Triangle 
90. Subsets Il
 88. Merge Sorted Array
 84. Largest Rectangle in Histogram
Array I 
80. Remove Duplicates from Sorted 
79. Word Search 
78. Subsets 
75. Sort Colors
64. Minimum Path Sum
63. Unique Paths Il 
 62. Unique Paths
 59. Spiral Matrix Il 
 57. Insert Interval 
 56. Merge Intervals 
 54. Spiral Matrix 
 53. Maximum Subarray
48. Rotate Image
 42. Trapping Rain Water
 41. First Missing Positive 
40. Combination Sum Il
 39. Combination Sum
121. Best Time to Buy and Sell
 27. Remove Element
Stock
Array
26. Remove Duplicates from Sorted 
18. 4Sum
G
G
Go
15
G
Go
G
G
Go
15
Go
Go
5
G
G
Go
Go
Medium
Medium
Medium
Medium
Medium
Medium
Medium
Medium
Medium
Medium
Medium
Medium
Medium
Medium
 Medium
Medium
Medium
Easy
 Hard 
Easy
 Hard
Hard
Easy
Easy
Easy
Easy
O(n log  
O(n log
O(n log 
O(n^2)
O(n^2)
O(n~2)
O(n~2) 
O(n^2) 
O(n^2)
O(n^2)
(Evu)o
(u)o
O(n)
(u)o
(u)o
O(n)
O(n)
(u)o
(u)o
n）
(u)o
(u)o
(u)o
(u)o
(u)o
n）
n)
(u)o
(u)o
O(n~2)
O(n^2)
O(n~2)
O(n~2)
O(n^2)
O(n~2)
0(1)
(u)o
(Zvu)o
(u)o
O(n)
0(1)
O(n)
0(1
O(n)
0(1)
0(1)
0(1)
0(1)
O(n)
O(n)
(u)o
0(1)
0(1)
0(1)
0(1)
人
---
## Page 19
Backtracking
 977. Squares of a Sorted Array 
969. Pancake Sorting 
922. Sort Array By Parity Il 
 907. Sum of Subarray Minimums
891. Sum of Subsequence Widths
 867. Transpose Matrix
766. Toeplitz Matrix
746. Min Cost Climbing Stairs 
Stock with Transaction Fee 
714. Best Time to Buy and Sel
713. Subarray Product Less Than K
628. Maximum Product of Three 
566. Reshape the Matrix
532. K-diff Pairs in an Array
287. Find the Duplicate Number
283. Move Zeroes
219. Contains Duplicate lIl
217. Contains Duplicate 
216. Combination Sum Ill 
209. Minimum Size Subarray Sum 
sorted
167. Two Sum Il - Input array is 
152. Maximum Product Subarray 
126. Word Ladder Il 
Numbers
← leetCode
 Backtracking
Explore
Go
G
Go
G
Go
G
G
G
G
Go
G
G
Go
Go
Go
Go
G
G
G
Medium
Medium
Medium
Medium
Medium 
Medium
 Medium
Medium 
Easy
Hard 
Easy
Easy
Easy
Easy