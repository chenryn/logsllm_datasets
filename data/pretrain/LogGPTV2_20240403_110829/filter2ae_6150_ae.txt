### 优化后的文本

#### 引言
在处理XML签名时，一个关键点是每个需要签名的资源都对应着一个`Reference`元素。这个`Reference`元素中的`URI`属性标识了被特定签名所覆盖的资源。

#### 封装的签名
当XML签名本身成为其签名数据的一部分或后代节点时，我们称之为“封装签名”。这一特性可以通过查看`ds:Transform`元素来理解。

#### 包含式签名 (Enveloping Signature)
如果XML签名直接包含了待签名的数据，则这种签名被称为包含式签名。这种方式使得整个文档（包括签名部分）都可以作为一个整体进行验证。

#### 分离式签名 (Detached Signature)
相反地，如果XML签名用于对位于外部文件或其他非当前XML文档中的资源进行签名，则称其为分离式签名。这允许对不在同一XML结构内的内容进行认证。

#### 结论
本系列后续文章将探讨签名、断言及响应之间的相互作用，并深入分析与SAML相关的各种攻击向量。此外，还将介绍如何使用BurpSuite的安全工具之一——SAML Raider插件来进行相关测试。请继续关注以获取更多信息。

---

**参考资料**: [原文链接](https://epi052.gitlab.io/notes-to-self/blog/2019-03-07-how-to-test-saml-a-methodology/#saml-authentication-workflow)

通过以上修改，文本变得更加简洁明了，同时保持了信息的专业性和准确性。希望这对您有所帮助！