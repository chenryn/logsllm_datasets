in our data set are covered by which
test. Figure 9 shows the fractions of aircraft in the data set
covered by Test 1, Test 2, or both depending on the target’s
altitude. The results show that Test 1 clearly outperforms
Test 2. Overall, 61.2 % of the aircraft are covered only by
Test 1 while 2.9 % are covered only by Test 2. In addition,
8.9 % are covered by both tests. This result is not surprising
since the receiver density of the OpenSky Network is high
(which beneﬁts Test 1), while the aircraft density (which Test 2
relies on) is limited due to separation minima. In total, we can
summarize that if the spoofer’s target is at an altitude above
11 km and the spoofer is directly underneath the target, the
detection rate is about 75 % using both tests. If the spoofer uses
higher transmission powers or if it is not directly underneath
the target, the detection rate increases quickly towards 100 %
(not shown in the Figure).
As mentioned above, Test 1 directly depends on multilatera-
tion coverage and should therefore work better at high altitudes
where aircraft are tracked by more sensors. In contrast, Test 2
beneﬁts from dense airspaces since close aircraft “protect”
one another. To further investigate this effect, we considered
the cumulative distribution of the altitudes of all aircraft and
compared it to those of the aircraft protected by either of the
tests. The results are shown in Figure 10. As expected, Test 2
has a distribution similar to all altitudes. The steep inclines in
its distribution conﬁrm that it is most effective at the common
altitudes above 10 km (en route ﬂights) and at around 1 km
(approach areas). Most aircraft detected by Test 1, on the other
hand, were higher than 10 km which also complies with the
above hypothesis.
Detection Delay. We deﬁne the detection delay as the delay
between the point in time when the attack takes effect, i. e.,
when the aircraft’s GPS sensor locks on to the spoofed signal
until the detection test will detect the attack. As for Test 1,
this corresponds to the delay between receiving the ADS-B
position and the MLAT position update. To evaluate this, we
used the open-source MLAT implementation [41] with the
OpenSky Network’s real-time data stream and measured the
time between the reception of an ADS-B position and the
1026
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:29 UTC from IEEE Xplore.  Restrictions apply. 
y
t
i
l
i
b
a
b
o
r
P
e
v
i
t
l
a
u
m
u
C
1.00
0.75
0.50
0.25
0.00
0
10
20
Time [s]
Test Method
Test 1
Test 2
30
40
Fig. 11. Comparison of the detection times of Test 1 and Test 2 in the
OpenSky Network data set.
TABLE IV
SIMULATION FRAMEWORK PARAMETERS
10 6
10 5
10 4
10 3
10 2
10 1
0
]
m
f
[
r
e
o
o
p
S
o
t
e
c
n
a
t
s
D
i
4
2
1
0.5
0.1
0.01
5
Elapsed Time after Spoofing Attack [min]
10
15
Parameter
Sensor Density
Airspace Density
Flightpath
Flight Altitude
Airspeed
Parameter Range
(cid:3)
(cid:3)
(100 km)2
(cid:2)
(cid:2)
1
10 . . . 100
10 . . . 100
1
(100 km)2
random
0 . . . 10,000 [m]
0 . . . 1,000 [km/h]
Default
OpenSky
OpenSky
OpenSky
OpenSky
OpenSky
Spoofer Position
Spooﬁng Range
Spoofed Track Velocity
random
10 . . . 200 [km]
0 . . . 10,000 [km/h]
random
100 km
1,000 km/h
GPS Noise (std)
MLAT Noise (std)
0.01 . . . 4 [m]
1 . . . 100 [m]
4 m
10 m
emission of the respective position by the MLAT implementa-
tion. As for Test 2, the delay can be reduced to the inter-arrival
times between spoofed position reports. Figure 11 shows the
distributions for the delays of the two tests. The delay of
Test 1 is a result of the delay of the relatively long MLAT
calculations. Test 2, on the other hand, can detect an attack as
soon as a false position report is received from two different
aircraft. Note that the position broadcast interval of ADS-B
is random within an interval of 0.4 s to 0.6 s, explaining the
average detection delay close to 0.5 s.
Conclusion. The results of our evaluation show that with
realistic air trafﬁc and implementation characteristics, the two
tests can reach a detection rate of up to 75 % when the attacker
is directly underneath the target. While Test 1 performs much
better in terms of coverage and detection rate, the detection
delay is much smaller for Test 2. These results encourage a
complementary implementation as proposed in Section III-B4.
B. Spoofer Localization Performance
To evaluate Crowd-GPS-Sec in terms of GPS spoofer lo-
calization accuracy, we have built a simulation framework in
MATLAB, which allows us to analyze spooﬁng scenarios in a
controlled environment without having to spoof real aircraft.
In particular, we assess the impact of noise in the GPS-derived
position reports, MLAT positioning noise, and spoofed track
velocity.
Fig. 12. The impact of GPS noise models ranging from σGPS = 4 m to
0.01 m on the spoofer localization, depicted including standard deviation
errorbars. The MLAT positioning accuracy is ﬁxed to σMLAT = 10 m.
Simulation Framework. While we are interested in results
from varying parameter sets, we otherwise incorporate realistic
data observed by the sensor infrastructure of the OpenSky
Network. Table IV contains an overview of the utilized
simulation parameters. In the default case, our simulation
samples aircraft from the OpenSky Network including reported
positions, altitudes, airspeeds, and headings. The spoofer is
randomly positioned in an exemplary area of (400 km)2 and
its range is set to 100 km spooﬁng a track of 1,000 km/h.
On the other hand, we are able to simulate different airspace
constellations, attacker conﬁgurations, and noise impacts of
MLAT and GPS. In particular, we consider standard assump-
tions taken from speciﬁcations [1] and technical reports [42]
as well as more optimistic assumptions that could be achieved
with more sophisticated equipment.
To simulate the impact of GPS spooﬁng on aircraft, we
imitate position reports from already spoofed aircraft by incor-
porating the attacker-controlled position and adding Gaussian
noise according to the considered noise model. Subsequently,
we apply standard noise correction techniques based on a
Kalman ﬁlter [43]. For the error minimization considering
distance relations, we implement a numerical solver. To cope
with an increasing number of equations, we only evaluate the
relations at discrete time intervals which are deﬁned as the
time that has elapsed since the spooﬁng attack was launched,
ranging from a few seconds up to 15 minutes.
Metrics. In order to quantify our results we deﬁne two
metrics. First, we consider the distance between the actual
spoofer position and our estimation. Second, we construct a
circle around our estimated position with a radius equal to
the distance to the actual spoofer. We consider this to be
the search space to ﬁnd the attacker and we compare it to
the observed area of (400 km)2, on which the spoofer was
randomly positioned. For each of the analyzed parameter sets,
we performed 200 randomized simulation runs and averaged
the results.
1027
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:36:29 UTC from IEEE Xplore.  Restrictions apply. 
10 6
10 5
]
m
f
[
r
e
o
o
p
S
o
10 4
t
e
c
n
a
t
s
D
i
10 3
0
100
50
10
5
1
]
m
f
[
r
e
o
o
p
S
o
t
e
c
n
a
t
s
D
i
15
5
10
Elapsed Time after Spoofing Attack [min]
10 6
10 5
10 4
10 3
0
6
30
100
300
1000
5
10
15
Elapsed Time after Spoofing Attack [min]
Fig. 13. The considered MLAT positioning noise models in the range
of σMLAT = 100 m to 1 m do not show any signiﬁcant impact on the local-
ization accuracy. The results are based on a high GPS noise of σGPS = 4 m.
Fig. 14. The velocity of the spoofed track is analyzed for speeds be-
tween vtrack = 6 km/h to 1,000 km/h. The results consider a GPS
noise level of σGPS = 1 m and an MLAT positioning accuracy error
of σMLAT = 10 m.
1) Impact of GPS Accuracy: Figure 12 depicts the impact
of high GPS noise (σ = 4 m) to low GPS noise (σ = 0.01 m)
applied to the latitude and longitude direction. We do not
require altitude information for spoofer localization and can
therefore neglect altitude inaccuracies. We conclude that the
extent of noise in the reported GPS positions is a dominating
factor that can make the difference between a few kilome-
ters and merely tens of meters in spoofer localization. In
particular, we achieve an average localization accuracy of ap-
prox. 8.2 km for σGPS = 4 m, approx. 1.7 km for σGPS = 1 m,
and approx. 149 m for σGPS = 0.1 m, each after 15 min-
utes. Considering the search space reduction, we need to
scan approx. 0.13 % for σGPS = 4 m, approx. 5.8 × 10
−5
for σGPS = 1 m, and approx. 4.4 × 10
−7 for σGPS = 0.1 m,
again after 15 minutes. Furthermore, we can observe that
the localization accuracy increases rapidly within the ﬁrst
few minutes, whereas after 5 min the accuracy only improves
slowly. From 5 min to 15 min, the distance roughly halves.
As a result, we can already give a good spoofer position
estimation in a timely manner after the spooﬁng attack is
launched and narrow it down to a more exact position after a
few minutes.
2) Impact of MLAT Accuracy: Another uncertainty of our
localization approach is the accuracy of the MLAT posi-
tioning that we require to determine the actual (unspoofed)
aircraft positions. We choose to vary the MLAT accuracy
between high noise (σMLAT = 100 m) and lower noise lev-
els (σMLAT = 1 m), each representing the standard deviation
in latitude, longitude, and altitude. Figure 13 contains the
impact on the localization of different MLAT noise levels.
In contrast to the strong dependence on the GPS noise in
the spoofed measurements, the MLAT noise has little impact
on the accuracy of the spoofer localization. As a result, our
localization approach does not rely on highly accurate MLAT
measurements of the actual aircraft position and can still
perform decently on relatively noisy data.
3) Impact of Spoofed Track Velocity: As the spoofed track
velocity vtrack is part of the scaling factor in the distance
relations, we identify it to be another important parameter.
The results for varying spoofed track velocities are depicted in
Figure 14. For a spoofed track velocity of vtrack = 300 km/h,
the accuracy decreases by nearly one fourth. The accuracy
decreases further for a track velocity of vtrack = 100 km/h.
Eventually, for track speeds lower than vtrack = 30 km/h,
the spoofer localization fails to narrow down a useful search
radius. However, considering less GPS noise, we expect to
see better results even for lower track velocities. The strong
dependence on the track velocity is due to the scaling factor,
which relates the observed distances to the spoofed track
velocity and the speed of light. Hence, low velocities result
in smaller distance differences among the spoofed aircraft and
are relatively more affected by system-intrinsic noise.
V. DISCUSSION