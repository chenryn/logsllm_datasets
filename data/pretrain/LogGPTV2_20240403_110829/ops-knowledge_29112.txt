User: Write a shell script to automate the regular database backup operation and use crontab to execute it periodically.
Assistant: The following is a shell script for reference, which can back up the MySQL database and save the backup file in a specific directory. ```bash #!/bin/bash # Define the backup file name suffix, use the current date and time suffix=$(date +%Y%m%d_%H%M%S) # Backup the database and save the backup file to mysqldump -u root -pPASSWORD database_name > /backup/db_backup_${suffix}.sql in the specified directory # Delete old backup files (keep backups of the last 7 days) find /backup/ -name "db_backup_*" -mtime +7 - delete ``` Among them, `PASSWORD` should be replaced by the actual MySQL password, `database_name` should be replaced by the name of the database to be backed up, and `/backup/` is the directory where the backup file is saved, which can be modified according to the specific situation. Next, execute the script periodically through the `crontab` command. Open a terminal and enter `crontab -e` command to edit the user's crontab timing task list. Next, add the following line to automatically backup the database every day: ``` 0 0 * * * /path/to/db_backup.sh ``` This will execute the `/path/to/db_backup.sh` script at midnight every day. Take care to replace the script path with the actual script path. After saving and exiting the crontab editor, the script will be executed periodically.