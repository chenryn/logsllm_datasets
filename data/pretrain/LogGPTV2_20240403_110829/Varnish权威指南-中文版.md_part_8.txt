这个文档的版权和varnish自身的版权一样，请看LICENCE。
* Copyright (c) 2006 Verdens Gang AS
* Copyright (c) 2006-2008 Linpro AS
* Copyright (c) 2008-2010 Redpill Linpro AS
* Copyright (c) 2010 Varnish Software AS
●shared memory logging and statistics
Varnish使用共享内存记录和统计。因为它更快更有效，但棘手的是他没有定
期写log文件。
当你使用附加模式打开一个文件，无论怎么书写操作系统都不会覆盖以前的数
据。这样很多个线程都可以操作这个文件，互相之间没有任何联系，他们可以按照
你期望的工作。
52
www.linuxidc.com
四、Frequently ask questions（F@Q）
●GENERAL QUESTIONS
What is varnish?
Varnish是一种状态艺术，高性能的web加速器，它运行在linux2.6 kernel，freebsd6/7
和solaris 10系统上。
包含的一些特点：
1、 现代先进的架构设计
2、 VCL，一种非常灵活的配置语言
3、 后端服务器的负载均衡和健康检查
4、 局部支持ESI
5、 URL地址重写
6、 优雅的处理后端服务器宕机的问题
未来的特点（试验中）
1、 支持头文件分类
2、 支持持久缓存
Varnish是一个自由软件，他使用改进的BSD licenced。请阅读指南，开始你的varnish
之旅。
●How„„
我们需要分配多少内存/硬盘空间给varnish？
需要根据实际情况而定。
我认为我们目前最好的指导就是你考虑一个符合成本效益的RAM配置，比如
1-16G，SSD硬盘。
除非你肯定你需要它，因为很少有主板可以安装以TB为单位的RAM。
在另一方面，如果你的流量在Gb/s，那么你需要尽可能多的分配RAM。
我怎么让varnish使用更少的内存？
你不能，varnish操作时在内存中进行的，分配多少RAM给进程是kernel来确定。
我怎么命令varnish的一个实例忽略某个请求的参数？
你可以通过正则表达式删除一个请求的参数
sub vcl_recv {
set req.url = regsub(req.url, "\?.*", "");
}
我怎么强制刷新varnish cache中的目标？
通常调用purging 一个内容。在varnish中，你至少有两种方法完成purge。
1、 命令行
53
www.linuxidc.com
在命令行输入以下代码：
url.purge ^/$
purge你的/目录，你可以发现url.purge命令使用一个正则表达式来匹配，因
此“^”和“$”分别代表开始和结尾。所有以/开始的内容都会从cache中删
除
所以，删除cache中所有的内容的写法如下：
url.purge .*
2、 HTTP PURGE
使用VCL代码完成HTTP PURGE的方法可以在这里找到。注意，这个方法不
支持通配符。
我怎么对一个单独的client请求DEBUG？
Varnishlog工具可以很好的整理输出，有能力对我们自己的流量做DEBUG。
ReqStart 包含客户端IP，我们可以查看匹配他的IP
$ varnishlog -c -o ReqStart 192.0.2.123
想要查看这个IP地址在后端服务器的操作，我们可以匹配TxHeader，客户端单独
的IP地址包含在 X-Forwarded-For 头信息里，然后发送给后端服务器。
$ varnishlog -b -o TxHeader 192.0.2.123
我怎么在请求发送到后端服务器前重写URLS地址？
你可以使用regsub（）函数来完成，下面是一个例子：
if (req.http.host ~ "^(www.)?example.com")
{ set req.url = regsub(req.url, "^",
"/VirtualHostBase/http/example.com:80/Sites/example.com/VirtualHostRoot");
}
我有一个站点，它有很多主机名，我怎么保持cache的内容最少?
你可以在接收到头信息中规范所有主机名，VCL代码如下:
if (req.http.host ~ "^(www.)?example.com") {
set req.http.host = "example.com";
}
我怎么修改到后端的请求？
你可以通过bereq修改到后端的请求，但是你只能使用“set”值，因此你可以使
用req.url构造一个request：
sub vcl_miss {
set bereq.url = regsub(req.url,"stream/","/");
fetch;
}
我怎么定制varnish返回的错误信息？
54
www.linuxidc.com
使用vcl_error可以定制一个错误页面。默认的错误页面如下：
sub vcl_error {
set obj.http.Content-Type = "text/html; charset=utf-8";
synthetic {"
"} obj.status " " obj.response {"
Error "} obj.status " " obj.response {"
"} obj.response {"
Guru Meditation:
XID: "} req.xid {"
Varnish
"};
deliver;
}
怎样让varnish忽略请求的参数和只缓存目标的实例之一？
删除请求的参数使用一下表达式：
sub vcl_recv {
set req.url = regsub(req.url, "\?.*", "");
}
●where„„
我怎么找到适合我自己操作系统的安装包？
我们知道varnish提供debin，ubuntu，RHEL，centos，（open）SuSE，gentoo和freebsd，
这些系统的二进制包，不管你使用什么包管理器，请阅读“安装varnish”
●Can I „„
我可以使用varnish做正向代理吗？
不可以，varnish需要配置所有后端服务器到VCL。
我可以在32位机器上运行varnish吗？
可以，不过在32位机器上，会收到一定约束。Varnish在32位机器上不能支持大
55
www.linuxidc.com
于2G的存储。推荐使用64位机器。
我能够在一台机器上同时运行varnish和apache吗？
可以，很多人成功使用了这种方法，不过这会导致资争用。
我能在一个系统上运行多个varnish吗？
可以，指定不同的tcp端口就可以了。
我可以使用一个varnish缓存多个虚拟主机吗？
可以，但是注意内存空间。
我能查看varnish缓存了哪些东西吗？
一些原因导致不可能，如果一个命令列出所有缓存的内容，那么缓存的内容是上千
万或者更多，这样会导致系统资源紧张，varnish暂停服务。
我能用varnish加速https吗？
目前还不行，请密切关注我们，我们现在还没计划添加HTTPS支持，不过我们会
想办法完成，就像nginx那样。
我能够使用varnish负载均衡后端服务器吗？
可以，你可以使用以下VCL代码：
director foobar round-robin {
{ .backend = { .host = "www1.example.com; .port = "http"; } }
{ .backend = { .host = "www2.example.com; .port = "http"; } }
}
sub vcl_recv {
set req.backend = foobar;
}
(XXX: reference to docs, once written)
●Why„„
为什么varnish将所有的请求都发到后端服务器去了？
通常是两个问题导致的：
1、 目标的TTL过短。通常的解决方式是后端服务器不设置TTL，使用varnish默
认的TTL。（默认是120s）
2、 你使用了cookies：
默认情况下，varnish不会缓存backend返回的带cookie的结果。
默认情况下，varnish不对包含 cookie 的请求服务，直接 pass 他们到后端服务
器。
为什幺正则表达式有大小写之分？
在2.10版本之前使用POSIX的正则表达式没有大小写区分，但是2.10以后，使用
了PCRE正则表达式，它就对大小写敏感了。（我们保证以后不会在改变这种思想）
56
www.linuxidc.com
让PCRE正则表达式不区分大小写，使用（？！）开始：
if (req.http.host ~ "?iexample.com$") {
...
}
查看PCRE man pages 了解更多信息。
为什么头信息中“Via：”显示1.1，而varnish版本是2.1.x？
Via：number是HTTP协议，不是varnish版本号。
为什么我们叫它“varnish”？
1、 像varnish一样覆盖
2、 顺利和平滑的完成任务
3、 掩盖所有，赋予光滑的表面
为什么安装varnish的系统需要C编译器？
VCL编译需要C编译器来完成。系统的C编译器把VCL编译成动态共享库，然后供
varnish使用。所以没有C编译器，varnish不能运行。
安全问题?
你可以在必须的时候修改c编译器的权限或者删除C编译器。
●排错
为什么我收到一个缓存命中，而请求还是会发送到后端服务器？
Varnish有一个特色，就是hit for pass，当varnish得到一个后端服务器的响应但是
发现这个目标不能被缓存，在这种情况，varnish将创建一个缓存目标记录这个事
件，所以下次请求就会直接被pass。
●HTTP
X-Varnish HTTP头的用途？
X-Varnish HTTP头可以让你找到正确的日志记录，比如命中cache，X-Varnish控制当
前请求的次数和增加cache中的请求数。它让debugging非常容易。
Varnish支持压缩吗？
这个简单的问题有一个复杂的回答，请看WIKI
我怎么样添加一个HTTP头？
添加一个HTTP头，除非你想要添加一些关于客户端请求的东西，添加HTTP头最
好在vcl_fetch中完成，这个方法将处理每个fetched的目标：
sub vcl_fetch {
# Add a unique header containing the cache servers IP address:
remove obj.http.X-Varnish-IP;
set obj.http.X-Varnish-IP = server.ip;
57
www.linuxidc.com
# Another header:
set obj.http.Foo = "bar";
}
我怎么样才能在后端服务器记录客户端的IP地址？
通常我们看见的IP地址是varnish服务器的，怎么样我们才能看见客户端的IP地址
呢？
我们需要添加这些IP地址到一个头，然后和请求一起发送给后端服务器，然后配
置后端服务器的日志记录这个头信息的内容：
Varnish configuration：
sub vcl_recv {
# Add a unique header containing the client address
remove req.http.X-Forwarded-For;
set req.http.X-Forwarded-For = client.ip;
# [...]
}
以apache配置为例，我们拷贝 combined 日志格式，改名为“varnishcombined”，
我们在格式中加入varnish定义的头：
LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\"
\"%{User-Agent}i\"" varnishcombined
然后在你的主机配置部分，使用定制的日志格式替换标准的格式：
ServerName www.example.com
# [...]
varnishcombined /var/log/apache2/www.example.com/access.log varnishcombined
# [...]
The [http://www.openinfo.co.uk/apache/index.html mod_extract_forwarded Apache
module] might also be useful.
●Configuration
什么是VCL？
VCL是首字母 Varnish Configuration Language。在VCL文件中，你配置varnish怎么
运转，VCL示例文件爱呢包含在此WIKI的后面位置。
哪里有VCL的说明文档？
我们正在整理VCL的说明文档，在WIKI有一些示例。
或者请查看man 7 vcl
我怎么在varnish运行的时候加载VCL配置文件？
1、 把VCL文件放到对应服务器上
2、 进入varnishadm管理界面
3、 使用 vcl.load   加载配置文件，configname 是配置的
名字，自己随便取，filename，就是配置文件的绝对路径
58
www.linuxidc.com
4、 使用vcl.use  启用新的配置文件。
我是否应该使用 “pipe”、“or”，“pass”在我的VCL代码中？他们有什么不同？
当varnish使用pass，他的动作就想正常的HTTP 代理，他读取请求然后推送到后
端服务器，下一个HTTP请求仍然可以做任何其他处理。
pipe是在某些在不能使用pass的特殊情况，pipe读取请求，然后把通一个客户端
的其他请求都连续不断的推送给后端服务器，没有其他动作。
因为很多HTTP客户端在一个连接中，有数个连接使用pipe模式，这将给你带来不
好的后果，每个子请求都会使用存在的pipe模式。
在varnish2.0版本还没支持pass对请求body的处理，所以在这个版本必须正确使
用pipe模式。
在2.0以后的版本，pass将正确的处理请求body。
如果你的一个请求获得503错误，务必在vcl_recv pass前检查你指定的后端。
●Logging
我们在哪里可以找到日志文件？
Varnish默认不保存日志，但是可以通过varnishlog工具打印共享内存的日志，或者
使用varnishncsa工具保存日志成 Apache/NCSA 格式。
●Varnish Glossary(varnish 术语)
backend
需要varnish cache的HTTP服务器，可以处理一些通过策略分类后的HTTP请求，
但是不限制于一个web服务器，一个CMS，一个负载均衡器，或者其他varnish。
body
构成目标的bytes，varnish不在乎他们是HTML，XML，JPEG或者EBCDIC，对vanrish
来说他们都是是bytes而已。
client
给varnish发送HTTP请求的程序，典型的比如一个浏览器，还有搜索引擎的蜘蛛，
脚本，criminals等。
header
一个HTTP协议的头部，比如“Accept-Encoding：”。
hit
从varnish cache中获得目标。
master（process）
Varnish两个进程中的一个，master进程就是一个管理程序，负责管理配置，参数，
编辑他们，但是他从来不与真正的HTTP流接触。
59
www.linuxidc.com
miss
一个目标从后端服务器获得，根据情况，是否把目标放入varnish cache。
object
Cached中的一个内容回应。varnish从后端服务器收到一个回复，并创建一个目标，
那些被cache的内容可以回应客户端。
pass
Varnish不尝试在cache中寻找目标，简单的从后端服务器获取。
pipe
Varnish只是转发请求到后端，具体请求做什么，完全不管。
request
Client发送给varnish和varnish发送给后端的东西。
response
后端发送给varnish和varnish发送给client的东西，当response存储在varnish的
cache里，我们叫他object。
varnish（NB:with‘d’）
这是真正的varnish cache程序，他是只是一个程序，不过，当你运行的时候，就会
产生两个进程，master和worker（或者叫child）。
varnishhist
Eye-candy program showing responsetime histogram in 1980ies ASCII-art style.
varnishlog
使用指定格式显示varnish的事务处理日志的程序
varnishncsa
使用NCSA格式显示varnish的事务处理日志的程序。
varnishstat
varnish事务处理计数器程序。
varnishtest
使用指定脚本测试varnish。
varnishtop
跟踪指定日志使用的时间.
vcl
Varnish配置文件
worker（process）
这个进程在试master进程配置和启动的，他处理几乎所有的我们希望varnish处理
的工作，当它宕了以后，master会尝试启动它，保持website可用。
60
www.linuxidc.com