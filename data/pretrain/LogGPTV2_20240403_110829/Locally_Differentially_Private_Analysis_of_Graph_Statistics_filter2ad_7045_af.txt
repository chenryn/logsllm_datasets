Upper Bound
O
(cid:16) d2k‚àí2
(cid:17)
(eŒµ‚àí1)6 n4(cid:17)
(cid:16) e6Œµ
Œµ2 n
O
max
Two-rounds local
Upper Bound
O
(when G ‚àº G(n,Œ±)) O
Œµ2 n
(eŒµ‚àí1)2 (d3
(cid:16) d2k‚àí2
(cid:16) eŒµ
(cid:17)
max
‚Ñ¶
‚Ñ¶
maxn + eŒµ
Œµ2 d2
maxn)
(cid:17)
Table 2: Bounds on l2 losses for privately estimating fk(cid:63) and f(cid:52) with Œµ-edge LDP. For upper-bounds, we assume that Àúdmax = dmax.
For the centralized model, we use the Laplace mechanism. For the one-round f(cid:52) algorithm, we apply Theorem 4 with constant
Œ±. For the two-round protocol f(cid:52) algorithm, we apply Theorem 6 with Œµ1 = Œµ2 = Œµ
2.
5 Experiments
Based on our theoretical results in Section 4, we would like
to pose the following questions:
‚Ä¢ For triangle counts, how much does the two-rounds in-
teraction help over a single round in practice?
‚Ä¢ What is the privacy-utility trade-off of our LDP algo-
rithms (i.e., how beneÔ¨Åcial are our LDP algorithms)?
We conducted experiments to answer to these questions.
5.1 Experimental Set-up
We used the following two large-scale datasets:
IMDB. The Internet Movie Database (denoted by IMDB) [2]
includes a bipartite graph between 896308 actors and 428440
movies. We assumed actors as users. From the bipartite graph,
we extracted a graph G‚àó with 896308 nodes (actors), where
an edge between two actors represents that they have played
in the same movie. There are 57064358 edges in G‚àó, and the
average degree in G‚àó is 63.7 (= 57064358
896308 ).
Orkut. The Orkut online social network dataset (denoted
by Orkut) [37] includes a graph G‚àó with 3072441 users
and 117185083 edges. The average degree in G‚àó is 38.1
(= 117185083
3072441 ). Therefore, Orkut is more sparse than IMDB
(whose average degree in G‚àó is 63.7).
For each dataset, we randomly selected n users from the
whole graph G‚àó, and extracted a graph G = (V,E) with n users.
Then we estimated the number of triangles f(cid:52)(G), the number
3 f(cid:52)(G)
of k-stars fk(cid:63)(G), and the clustering coefÔ¨Åcient (=
f2(cid:63)(G) )
using Œµ-edge LDP (or Œµ-edge centralized DP) algorithms in
Section 4. SpeciÔ¨Åcally, we used the following algorithms:
Algorithms for triangles. For algorithms for estimating
f(cid:52)(G), we used the following three algorithms: (1) the RR
(Randomized Response) with the empirical estimation method
in the local model (i.e., LocalRR(cid:52) in Section 4.2), (2) the two-
rounds algorithm in the local model (i.e., Local2Rounds(cid:52) in
Section 4.3), and (3) the Laplacian mechanism in the central-
ized model (i.e., CentralLap(cid:52) in Section 4.2).
Algorithms for k-stars. For algorithms for estimating
fk(cid:63)(G), we used the following two algorithms: (1) the Lapla-
Figure 4: Construction of an independent cube for a k-star
function (n = 6, dmax = 4). From a 3-regular graph G = (V,E)
and M = {(v1,v3), (v2,v6), (v4,v5)}, we make a graph G(cid:48) =
(V,E(cid:48)) such that E(cid:48) = E \M. Then A = {(V,E(cid:48)‚à™N) : N ‚äÜ M}
(cid:1))-independent cube for fk(cid:63).
forms an (n,2(cid:0)dmax‚àí2
k‚àí1
and dmax = 4.
Using the structure that the (n,D)-independent cube im-
poses on f , we can prove a lower bound:
Theorem 7. Let ÀÜf (G) have the form of (6), where R1, . . . ,Rn
are independently run. Let A be an (n,D)-independent cube
for f . If (R1, . . . ,Rn) provides Œµ-relationship DP, then we have
(cid:19)
.
(cid:18)
eŒµ
(eŒµ + 1)2 nD2
(e2Œµ+1)2 nD2(cid:17)
(cid:16) e2Œµ
.
1
A ‚àë
G‚ààA
E[l2
2 ( f (G), ÀÜf (G))] = ‚Ñ¶
(n,2(cid:0)dmax‚àí2
A corollary of Theorem 7 is that if R1, . . . ,Rn satisfy Œµ-edge
LDP, then they satisfy 2Œµ -relationship DP and thus for edge
LDP we have a lower bound of ‚Ñ¶
(cid:1))-independent cube for a k-star function implies
Theorem 7, combined with the fact that there exists an
2 ‚àí
Corollary 1. In Appendix C, we also construct an (n, dmax
2) independent cube for f(cid:52) and establish a lower bound of
‚Ñ¶(
(e2Œµ+1)2 nd2
The upper and lower bounds on the l2 losses shown in this
max) for f(cid:52).
k‚àí1
e2Œµ
section appear in Table 2.
USENIX Association
30th USENIX Security Symposium    993
ùë£4ùë£5ùë£2ùë£3ùê∫=(ùëâ,ùê∏)ùë£6ùë£1ùë£4ùë£5ùë£2ùë£3ùëÄùë£6ùë£1ùë£4ùë£5ùë£2ùë£3ùê∫‚Ä≤=(ùëâ,ùê∏‚Ä≤)ùë£6ùë£1ùëõ,ùëëùëöùëéùë•‚àí2ùëò‚àí1-independentcubeùíúforùëìùëò‚ãÜ‚Ä¶Figure 5: Relation between the number of users n and the l2
2, Àúdmax = dmax).
loss in triangle counts when Œµ = 1 (Œµ1 = Œµ2 = 1
Here we do not evaluate LocalRR(cid:52) when n > 10000, because
it is inefÔ¨Åcient (see Section 4.3 ‚ÄúTime complexity‚Äù).
cian mechanism in the local model (i.e., LocalLapk(cid:63) in Sec-
tion 4.1) and (2) the Laplacian mechanism in the centralized
model (i.e., CentralLapk(cid:63) in Section 4.1).
For each algorithm, we evaluated the l2 loss and the relative
error (as described in Section 3.4), while changing the values
of n and Œµ. To stabilize the performance, we attempted Œ≥ ‚àà N
ways to randomly select n users from G‚àó, and averaged the
utility value over all the Œ≥ ways to randomly select n users.
When we changed n from 1000 to 10000, we set Œ≥ = 100
because the variance was large. For other cases, we set Œ≥ = 10.
In Appendix B, we also report experimental results using
artiÔ¨Åcial graphs based on the Barab√°si-Albert model [9].
5.2 Experimental Results
Relation between n and the l2 loss. We Ô¨Årst evaluated the
l2 loss of the estimates of f(cid:52)(G), f2(cid:63)(G), and f3(cid:63)(G) while
changing the number of users n. Figures 5 and 6 shows
the results (Œµ = 1). Here we did not evaluate LocalRR(cid:52)
when n was larger than 10000, because LocalRR(cid:52) was in-
efÔ¨Åcient (as described in Section 4.3 ‚ÄúTime complexity‚Äù).
2. As for Àúdmax, we set
In Local2Rounds(cid:52), we set Œµ1 = Œµ2 = 1
Àúdmax = dmax (i.e., we assumed that dmax is publicly available
and did not perform graph projection) because we want to ex-
amine how well our theoretical results hold in our experiments.
We also evaluate the effectiveness of the private calculation
of dmax at the end of Section 5.2.
Figure 7 shows that the l2 loss is roughly consistent with
our upper-bounds in terms of Œµ. For example, when we de-
crease Œµ from 0.4 to 0.1, the l2 loss increases by a factor of
994    30th USENIX Security Symposium
USENIX Association
Figure 6: Relation between the number of users n and the l2
2, Àúdmax = dmax).
loss in k-star counts when Œµ = 1 (Œµ1 = Œµ2 = 1
Figure 5 shows that Local2Rounds(cid:52) signiÔ¨Åcantly outper-
forms LocalRR(cid:52). SpeciÔ¨Åcally, the l2 loss of Local2Rounds(cid:52)
is smaller than that of LocalRR(cid:52) by a factor of about 102. The
difference between Local2Rounds(cid:52) and LocalRR(cid:52) is larger
in Orkut. This is because Orkut is more sparse, as described
in Section 5.1. For example, when n = 10000, the maximum
degree dmax in G was 73.5 and 27.8 on average in IMDB and
Orkut, respectively. Recall that for a Ô¨Åxed Œµ, the expected l2
loss of Local2Rounds(cid:52) and LocalRR(cid:52) can be expressed as
O(nd3
max) and O(n4), respectively. Thus Local2Rounds(cid:52) sig-
niÔ¨Åcantly outperforms LocalRR(cid:52), especially in sparse graphs.
Figures 5 and 6 show that the l2 loss is roughly consistent
with our upper-bounds in terms of n. SpeciÔ¨Åcally, LocalRR(cid:52),
Local2Rounds(cid:52), CentralLap(cid:52), LocalLapk(cid:63), and CentralLapk(cid:63)
achieve the expected l2 loss of O(n4), O(nd3
max),
O(nd2k‚àí2
max ), respectively. Here note that each
user‚Äôs degree increases roughly in proportion to n (though
the degree is much smaller than n), as we randomly select n
users from the whole graph G‚àó. Assuming that dmax = O(n),
Figures 5 and 6 are roughly consistent with the upper-bounds.
The Ô¨Ågures also show the limitations of the local model in
terms of the utility when compared to the centralized model.
Relation between Œµ and the l2 loss. Next we evaluated the l2
loss when we changed the privacy budget Œµ in edge LDP. Fig-
ure 7 shows the results for triangles and 2-stars (n = 10000).
Here we omit the result of 3-stars because it is similar to that
of 2-stars. In Local2Rounds(cid:52), we set Œµ1 = Œµ2 = Œµ
2.
max ), and O(d2k‚àí2
max), O(d2
Q‡µàOORVVLocalRR‚àÜLocal2Rounds‚àÜCentralLap‚àÜOORVVQ‡µàD,0'%ﬂù E2UNXWﬂù WULDQJOHVWULDQJOHVLocal2Rounds‚àÜCentralLap‚àÜQ‡µàOORVVLocalRR‚àÜLocal2Rounds‚àÜCentralLap‚àÜOORVVQ‡µàWULDQJOHVWULDQJOHVLocal2Rounds‚àÜCentralLap‚àÜQ‡µàOORVVOORVVQ‡µàD,0'%ﬂù E2UNXWﬂù VWDUVVWDUVLocalLap‡¨∂‚ãÜCentralLap‡¨∂‚ãÜLocalLap‡¨∑‚ãÜCentralLap‡¨∑‚ãÜQ‡µàOORVVOORVVQ‡µàVWDUVVWDUVLocalLap‡¨∂‚ãÜCentralLap‡¨∂‚ãÜLocalLap‡¨∑‚ãÜCentralLap‡¨∑‚ãÜFigure 7: Relation between Œµ in edge LDP and the l2 loss
when n = 10000 (Œµ1 = Œµ2 = Œµ
2, Àúdmax = dmax).
about 5000, 200, and 16 for both the datasets in LocalRR(cid:52),
Local2Rounds(cid:52), and CentralLap(cid:52), respectively. They are
roughly consistent with our theoretical results that for small
Œµ, the expected l2 loss of LocalRR(cid:52), Local2Rounds(cid:52), and
CentralLap(cid:52) is O(Œµ‚àí6)2, O(Œµ‚àí4), and O(Œµ‚àí2), respectively.
Figure 7 also shows that Local2Rounds(cid:52) signiÔ¨Åcantly out-
performs LocalRR(cid:52) especially when Œµ is small, which is also
consistent with our theoretical results. Conversely, the differ-
ence between LocalRR(cid:52) and Local2Rounds(cid:52) is small when
Œµ is large. This is because when Œµ is large, the RR outputs the
true value with high probability. For example, when Œµ ‚â• 5,
the RR outputs the true value with eŒµ
eŒµ+1 > 0.993. However,
LocalRR(cid:52) with such a large value of Œµ does not guarantee
strong privacy, because it outputs the true value in most cases.
Local2Rounds(cid:52) signiÔ¨Åcantly outperforms LocalRR(cid:52) when
we want to estimate f(cid:52)(G) or fk(cid:63)(G) with a strong privacy
guarantee; e.g., Œµ ‚â§ 1 [38].
Relative error. As the number of users n increases, the num-
bers of triangles f(cid:52)(G) and k-stars fk(cid:63)(G) increase. This
causes the increase of the l2 loss. Therefore, we also evalu-
ated the relative error, as described in Section 3.4.
Figure 8 shows the relation between n and the relative
error (we omit the result of 3-stars because it is similar to
that of 2-stars). In the local model, we used Local2Rounds(cid:52)
and LocalLapk(cid:63) for estimating f(cid:52)(G) and fk(cid:63)(G), respec-
tively (we did not use Local2RR(cid:52), because it is both inac-
curate and inefÔ¨Åcient). For both algorithms, we set Œµ = 1 or
2 in Local2Rounds(cid:52)) and Àúdmax = dmax. Then
2 (Œµ1 = Œµ2 = Œµ
2We used eŒµ ‚âà Œµ + 1 to derive the upper-bound of LocalRR(cid:52) for small Œµ.
Figure 8: Relation between n and the relative error. In the local
model, we used Local2Rounds(cid:52) (Œµ = 1 or 2) and LocalLapk(cid:63)
(Œµ = 1 or 2) for estimating triangle counts f(cid:52)(G) and k-star
counts fk(cid:63)(G), respectively ( Àúdmax = dmax).
we estimated the clustering coefÔ¨Åcient as: 3 ÀÜf(cid:52)(G,Œµ1,Œµ2,dmax)
,
ÀÜfk(cid:63)(G,Œµ,dmax)
where ÀÜf(cid:52)(G,Œµ1,Œµ2,dmax) and ÀÜfk(cid:63)(G,Œµ,dmax) are the estimates
of f(cid:52)(G) and fk(cid:63)(G), respectively. If the estimate of the clus-
tering coefÔ¨Åcient is smaller than 0 (resp. larger than 1), we set
the estimate to 0 (resp. 1) because the clustering coefÔ¨Åcient is
always between 0 and 1. In the centralized model, we used
CentralLap(cid:52) and CentralLapk(cid:63) (Œµ = 1 or 2, Àúdmax = dmax) and
calculated the clustering coefÔ¨Åcient in the same way.