leakage
deﬁned
resulting from EncsI
The
LENCsI (k0, k1, y1, m)
is
(SL(k0, pA, k1), SL(k0, pB, y1), L⊕(m, y1),
SL(k−, pA, k0), k−) with k− ← {0, 1}n.
k0 (m)
:=
as
Table 2: The ENCs and ENCsI schemes.
scheme. The ENCs scheme, while being similar to the single
block version of ENC, bears important diﬀerences with it:
1. It has no leak-free initialization process. This is not
necessary for a one-time version of the scheme.
2. Its ciphertext contains k1. While being harmless from
a black-box point of view, including k1 in the cipher-
text will show to be useful in bounding the amount of
information that leakages can transfer between rounds.
We will provide constructive evidence that this addi-
tion is necessary after the proof of Lemma 3.
3. Its leakages contain S L(k−, pA, k0), k− with a random
k−. This leakage has a similar purpose as adding k1 in
the ciphertext. Namely, it will be used to bound the
information that can leak, in the multi-block setting,
from the encryption of previous blocks.
3.4 One-time ideal versions of our schemes
We now idealize the Encs encryption process by replacing
the use of F for computing k1 and y1 by the selection of
random values. Furthermore, we adapt the corresponding
leakages using S L. The resulting algorithms are deﬁned in
the right part of Table 2. The following lemma expresses
that leaking encryptions produced with these two schemes
are hard to distinguish, by relying on the 2-simulatability
assumption and the properties of the PRF.
Lemma 2. Ideal single block encryption. Let F :
{0, 1}n × {0, 1}n → {0, 1}n be a (s, t, prf )-PRF, whose im-
plementation has a leakage function LF having (sS , tS , s, t,
2-sim) 2-simulatable leakages, and let S L be an appropriate
(sS , tS )-bounded leakage simulator. Then, for every m, pA,
pB, p ∈ {0, 1}n, pA (cid:54)= pB, and every (s − sr, t − tr)-bounded
distinguisher DL, the following holds:
(cid:104)DL (m, LEncs(k0, m)) = 1
(cid:105) −
(cid:12)(cid:12)(cid:12)Pr
(cid:17)
= 1
(cid:105)(cid:12)(cid:12)(cid:12) ≤ prf + 2-sim,
Pr
m, LEncsI(k0, m)
(cid:104)DL(cid:16)
with sr := 3· sS + 1, tr = max(tprf , tsim), tprf being equal to
3·tS augmented with the time needed to make 2 oracle queries
to the PRF challenger and select a uniformly random key in
{0, 1}n, and tsim the time needed to relay the content of two
Enc and one Gen queries from and to a q-sim challenger.
Proof. We follow the same approach as used for proving
Lemma 1: ﬁrst replace the leakages of LEncs with simulated
leakages, relying on the simulatability assumption, then re-
place the outputs of the PRF of LEncs with random values,
relying on the assumption that F is a PRF.
We now transpose the deﬁnitions of ENCs and ENCsI to
the multi-block setting, but still focusing on the one-time en-
cryption case. The resulting schemes, ENC(cid:96) and ENC(cid:96)I are
described in Table 3. These ideal versions are closer to the
ENC scheme deﬁnition: while we still ignore the leak-free ini-
tialization process, the ciphertexts do not contain the extra
key block any more, and the leakages follow the natural def-
inition. Just as before, we express that leaking encryptions
produced with these two schemes are hard to distinguish.
Lemma 3. Ideal multiple block encryption. Let F
and S L be deﬁned as in Lemma 2. Then, for every (cid:96)-block
message m, every pA, pB and every (s − sr, t − tr)-bounded
distinguisher DL, the following holds:
(cid:12)(cid:12)(cid:12)Pr
(cid:104)DL (m, LEnc(cid:96)(k0, m))) = 1
(cid:105)(cid:12)(cid:12)(cid:12) ≤ (cid:96)(prf + 2-sim).
(cid:105) −
(cid:17)
(cid:104)DL(cid:16)
Pr
m, LEnc(cid:96)I(k0, m)
= 1
Here, sr = (cid:96)(2sS + 3) and tr is equal to 2(cid:96)tS augmented with
the time needed to pick 2(cid:96) random values in {0, 1}n, evaluate
F 2(cid:96) times and compute (cid:96) ⊕ operations.
Proof. We deﬁne the hybrid distributions H0, . . . , H(cid:96) in
which Hi(m) is deﬁned as the concatenation of an ideal exe-
cution LEnc(cid:96)I
k0 (m[1,i]) and a real execution LEnc(cid:96)ki (m[i+1,(cid:96)])
with k0 chosen uniformly at random and ki resulting from
the evaluation of Enc(cid:96)I. It is clear that H0 is distributed just
as the inputs of DL in the ﬁrst probability distribution from
the lemma’s statement, while H(cid:96) is distributed as the inputs
of DL in the second probability distribution. We now show
that the probability with which DL can distinguish Hi−1
from Hi is bounded by prf + 2-sim, which will in turn im-
ply the expected result. For this purpose, we build, from
DL, a (s, t)-bounded distinguisher DL(cid:48) between the two dis-
tributions d1 and d2 that are the input of the distinguisher
of Lemma 2. DL(cid:48) receives its inputs mi, ci, ki, and leakages
lA, lB, l⊕, ls, ki−2 sampled from d1 or d2. It then: (1) Sam-
ples the encryption of the i− 1 ﬁrst blocks of m from LEnc(cid:96)I,
except that it uses ki−2 as key for the round i − 1 and ls
as leakage for computing ki−1; (2) Extends it with ci and
the leakages lA, lB and l⊕ for the i-th round; (3) Extends it
with LEnc(cid:96)ki (m[i+1,(cid:96)]) for the last (cid:96)− i− 1 rounds. It can be
easily veriﬁed that, if the inputs of DL(cid:48) are sampled from d1
(resp d2), then DL(cid:48) produced something sampled according
to Hi−1 (resp. Hi). If fed to DL, the result will enable DL(cid:48) to
distinguish Hi−1 from Hi with the same probability DL(cid:48) dis-
tinguishes d1 from d2. Furthermore, by inspection, we can
verify that DL(cid:48) is (s, t)-bounded. Applying Lemma 2, this
probability is then bounded by prf + 2-sim, as desired.
103Description of ENC(cid:96):
• Gen picks k0 ← {0, 1}n.
• Enc(cid:96)k0 (m1, . . . , m(cid:96)) returns c1, . . . , c(cid:96),
where ci = yi ⊕ mi, yi = Fki−1 (pB)
and ki = Fki−1 (pA).
• Dec proceeds in the natural way.
The leakage LEnc(cid:96)(k0, m) resulting from com-
puting Enc(cid:96)k0 (m) is deﬁned by the sequence
of (LF(pA, ki−1), LF(pB, ki−1), L⊕(mi, yi)) for
i ∈ {1, . . . , (cid:96)}.
Description of ENC(cid:96)I:
• Enc(cid:96)I
k0 (m1, . . . , m(cid:96)) returns (c1, . . . , c(cid:96)),
where ci = yi ⊕ mi, y1, . . . , y(cid:96) ← {0, 1}n
and k1, . . . , k(cid:96) ← {0, 1}n.
The leakage LEnc(cid:96)I (k, y, m) resulting from com-
puting Enc(cid:96)I
k0 (m) with the random vectors
k and y is deﬁned by the
sequence of
(SL(ki−1, pA, ki), SL(ki−1, pB, yi), L⊕(mi, yi))
for i ∈ {1, . . . , (cid:96)}.
Table 3: The ENC(cid:96) and ENC(cid:96)I schemes.
Further remarks on the deﬁnition of Encs. The proof
above heavily relies on the use of the extra leakages pro-
vided when running Encs, for the linking of the hybrids.
This is however not just an artifact that we use to simplify
our proof. Consider for instance a situation in which Encs
would not leak k1 and a simple leakage function LF(p, k)
would leak just the ﬁrst bit of k ⊕ Fk(p). In such a setting,
if k1 is not leaked, the leakage does not provide any useful
information on the encrypted message (we just loose one bit
of security for the key). So, if we encrypt the messages m1
and m2 with Encs using two independent keys, the leakages
do not provide us with any useful information. However,
if we encrypt the message (m1, m2) using Enc(cid:96), we will ob-
tain c1, c2 and leakages containing the ﬁrst bit of k0 ⊕ y1,
k0 ⊕ k1 and k1 ⊕ y2, from which we can derive the ﬁrst bit
of y1 ⊕ y2, and eventually the ﬁrst bit of m1 ⊕ m2, which
was not available before. This observation is a constructive
evidence that encrypting two message blocks with Enc(cid:96) can
be far more damaging on the privacy than encrypting these
blocks independently with a version of Encs from which k1
would not be leaked. The leakage of k1 in Encs prevents
the shortcoming we just described, as k1 would provoke the
leakage of the ﬁrst bit of each message block.
3.5 From 1-block to (cid:96)-block security
The above section demonstrated how one-time versions of
our encryption scheme can be idealized with controlled secu-
rity loss, in the case of single and multiple block encryption.
We now use these idealized encryption processes to evaluate
the (eavesdropper) security of an (cid:96)-block encryption with
Enc(cid:96)I by comparison with the security of (cid:96) encryptions with
EncsI performed with independent keys, block by block.
Lemma 4. For every pair of (cid:96)-block messages m0 and m1
and (s, t)-bounded adversary AL, there is an (s − sr, t − tr)-
bounded adversary AL(cid:48) such that the following holds:
(cid:12)(cid:12)(cid:12)Pr
(cid:104)AL(cid:16)
(cid:12)(cid:12)(cid:12)Pr
(cid:96)(cid:88)
i=1
= 1
(cid:105)
(cid:17)
(cid:104)AL(cid:16)
(cid:17)
ki (m0
i )
LEnc(cid:96)I
(cid:104)AL(cid:48)(cid:16)
k0 (m0)
−Pr
LEncsI
(cid:17)
LEnc(cid:96)I
k0 (m1)
= 1
(cid:105)−
(cid:104)AL(cid:48)(cid:16)
= 1
Pr
LEncsI
ki (m1
i )
(cid:105)(cid:12)(cid:12)(cid:12) ≤
(cid:17)
(cid:105)(cid:12)(cid:12)(cid:12) ,
= 1
with all k’s chosen uniformly at random, sr = (cid:96)(2sS +1) and
tr equal to 2(cid:96)tS to which we add the time needed to sample
2(cid:96) random values and compute (cid:96) times the ⊕ operations.
Proof. We proceed in two steps. We start by building
a sequence of (cid:96) + 1 messages mh,0, . . . , mh,(cid:96) starting from
m0 and modifying its blocks one by one until obtaining m1.
That is, mh,i := m1
[i+1,(cid:96)]. From the triangle inequal-
ity, it holds that:
[1,i], m0
(cid:104)AL(cid:16)
(cid:12)(cid:12)(cid:12)Pr
(cid:104)AL(cid:16)
(cid:12)(cid:12)(cid:12)Pr
(cid:96)(cid:88)
i=1
(cid:17)
(cid:105)
(cid:104)AL(cid:16)
= 1
LEnc(cid:96)I
k0 (m0)
− Pr
LEnc(cid:96)I
ki (mh,i−1)
(cid:17)
k0 (m1)
= 1
LEnc(cid:96)I
(cid:17)
(cid:105)−
(cid:104)AL(cid:16)
= 1
(cid:105)(cid:12)(cid:12)(cid:12) ≤
(cid:17)
(cid:105)(cid:12)(cid:12)(cid:12) .
= 1
Pr
LEnc(cid:96)I
ki (mh,i)
The (cid:96) diﬀerences in the sum above can now be related to
the probability of distinguishing the encryptions of single
from an EncsI encryption of m0,i or m1,i
block messages:
with the associated leakage LEncsI , it is immediate to sample
an Enc(cid:96)I encryption of mh,i−1 or mh,i with the associated
leakage LEnc(cid:96)I . The cost of this sampling is bounded by sr
leakage queries and running time tr.
Injecting Lemmas 2 and 3, which relate real and ideal
encryptions, into Lemma 4, we obtain Theorem 3 which is
our main result for eavesdropper security.
Theorem 3. Let F be a (s, t, prf )-PRF, with a leakage
simulator S L as in Lemma 2, and let (sr, tr) be the bounds
deﬁned in Lemma 3. For every pair of (cid:96)-block messages m0
and m1 and (s − sr, t − tr)-bounded adversary AL, there is
an (s − 2sr, t − 2tr)-bounded adversary AL(cid:48) such that the
following holds:
(cid:105)
(cid:104)AL(cid:0)LEnc(cid:96)k0 (m0)(cid:1) = 1
(cid:105)(cid:12)(cid:12)(cid:12) ≤
(cid:104)AL(cid:0)LEnc(cid:96)k0 (m1)(cid:1) = 1
(cid:12)(cid:12)(cid:12)Pr
(cid:105)−
(cid:104)AL(cid:48)(cid:0)LEncski (m0
i )(cid:1) = 1
(cid:104)AL(cid:48)(cid:0)LEncski (m1
i )(cid:1) = 1
(cid:105)(cid:12)(cid:12)(cid:12) + 4(cid:96)(prf + 2-sim).
(cid:12)(cid:12)(cid:12)Pr
(cid:96)(cid:88)
− Pr
Pr
i=1
It indicates that, if we want to bound the probability that
an attacker distinguishes the encryptions of two (cid:96)-block mes-