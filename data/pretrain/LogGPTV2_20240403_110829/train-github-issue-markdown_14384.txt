This issue is related to character encoding of the request parameters when
sending a GET request. In my scenario, I need the percent character to not be
encoded as %25. The `urllib.parse.urlencode` function has the `safe` input for
this purpose. However, the `requests.get` function does not have such input.
Therefore, I use `urllib.parse.urlencode` with `safe='%'` to get an ampersand-
separated string of my request parameters and send that in for the `params`
value of `requests.get`. Even with this trick, the response that I get is
different than what I get with `urllib.request.Request`. The interesting thing
is that when I print `response.url` (where `response` is the response object
of `requests.get`), I see that the percent character is not encoded, but still
the response is incorrect. It seems like encoding takes place somewhere else.
I really hate abandoning the requests package because of this defect. I was
wondering if there is any way this can be fixed in a future release.
## Expected Result
        1135
        57
        1
           36145
            ...
## Actual Result
        0
        0
        1
## Reproduction Steps
This is the URL I am hitting:
`http://productsearch.linksynergy.com/productsearch?token=&mid=36145&cat=Women%27s+Warehouse+Sale+-+Up+To+70%+Off&keyword=dress&pagenumber=1`
Unfortunately, I cannot share the token. The decoded value for the `cat`
parameter is "Women's Warehouse Sale - Up To 70% Off". The percent sign after
70 is the one that is causing the issue.
    import requests
    with requests.Session() as http_session:
         response = http_session.get('http://productsearch.linksynergy.com/productsearch', params='token=&mid=36145&cat=Women%27s+Warehouse+Sale+-+Up+To+70%+Off&keyword=dress&pagenumber=1')
## System Information
    $ python -m requests.help
    {
      "chardet": {
        "version": "4.0.0"
      },
      "cryptography": {
        "version": ""
      },
      "idna": {
        "version": "2.10"
      },
      "implementation": {
        "name": "CPython",
        "version": "3.7.2"
      },
      "platform": {
        "release": "5.8.0-40-generic",
        "system": "Linux"
      },
      "pyOpenSSL": {
        "openssl_version": "",
        "version": null
      },
      "requests": {
        "version": "2.25.1"
      },
      "system_ssl": {
        "version": "1010106f"
      },
      "urllib3": {
        "version": "1.26.3"
      },
      "using_pyopenssl": false
    }
This command is only available on Requests v2.16.4 and greater. Otherwise,  
please provide some basic information about your system (Python version,  
operating system, &c).