构建可靠的自动化发布体系
葛隽@携程
PI:EMAIL
1
交付的困惑
哥！好了没
苦逼的开发
2
CONTENTS
一、Coding之外的瓶颈
二、建立面向交付的运维体系
三、快速迭代中的质量管理
四、构建可靠的自动化发布
3
一. Coding之外的瓶颈
面临的挑戓
1. 团队协同：13+SBU事业部，1900+人团队协作交付
2. 迭代压力：每周800+项目戒变更，如何构建可靠的测试/开发环境
3. 项目间应用相互依赖：不能管理依赖版本就会出现混乱
4. 排障需要透明：开发要求更多生产权限，运营要求限制开发权限
5. 发布过程保障：平滑的用户访问，99.99%网站可用性（一秒价值￥5000）
6. 上线压力：半夜的上线过程是每个程序员的煎熬和噩梦
快
产品变化快，交付要更快！
亏联网公司的特征：
4
一. Coding之外的瓶颈
我们的结构
DEV
OPS
规划交付计划
（ROP）
可交付运维体系
代码分支管理
（SCM）
DEVOPS
自动化发布体系
5
二.建立面向交付的运维体系
开发和运维的鸿沟
DEV OPS
• 忙亍解决需求和Bug • 生产可用性99.99%
• 不愿意关心环境问题 • 标准化运营流程
• 生产排障，像跨栏 • 生产故障，只能升级事件
• 上线问题，项目延期 • 开发需求太多，满足不了
6
二.建立面向交付的运维体系
打破鸿沟，关键看理念
1. DEV：提前规划项目，预支OPS资源
2. OPS：规划权利边界，透明运维体系，标准资源，被动转主动
3. DEVOPS：管理代码分支，环境构建，预控环境和发布风险
7
二.建立面向交付的运维体系
关键点
1. 应用须支持裸机发布
2. 可伸缩的于服务器资源体系（标准化IDC资源）
3. 环境变量管理（应用配置文件\容器配置文件\Pool依赖关系）
4. 自动化测试、性能测试体系
5. 透明的服务器监控体系（Zabbix\XMon）
8
二. 建立面向交付的运维体系
代码、配置和环境分离，自动构建环境
容器配置
站点和环境配置工具
服务器
Domain Model
Environment
一键部署
应用包
Release Branch
ConfGen
APP Code
ConfigProfile
9
二. 建立面向交付的运维体系
总结
• 打破思想鸿沟，规划和透明资源
• 标准化环境配置，管理环境变量
• DEVOPS工具管理过程
10
三.快速迭代中的质量管理
迭代是产品的生命线，但质量必须被控制
1. 合理资源发布顺序
2. Pool关系解耦
3. 生产预测试服务器群
4. 精细化Rolling过程
5. 完整的监控体系
6. 回退的指标基线
11
三.快速迭代中的质量管理
合理资源发布和回退顺序
图片资源
Web Resource API 前端APP
多槽位设计 向下兼容 多版本管理
DB object
向下兼容
1 2 3 4
回退 回退 回退
不把所有鸡蛋放在一个篮子里
12
三.快速迭代中的质量管理
Pool关系解耦
• 规划Pool层面关系（SBU/API/APP）
• 构造稳定的Pool顺序
• Pool应用按机器同进同出
酒店APP
酒店PoAoPl I
公P共ooAlP I
JoPboWol S
Pool
13
三.快速迭代中的质量管理
生产预测试服务器群
• 代码提前更新到新版本
• 预测试服务器外网不能进入，内网可访问
• 尝试用预测试服务接入生产流量，并通过工具收集反馈
预测试期间
上线后
14
二. 建立面向交付的运维体系
编译即发布
自动化验证
Release
ROP Jenkies Roller 集成环境
Branch
15
三.快速迭代中的质量管理
精细化控制Rolling过程
平滑的用户访问，保证网站99.99%可用性
（一秒价值￥5000+）
工工作作版版本本AB 工工作作版版本本AB 工工作作版版本本AB 工工作作版版本本AB
1. 从集群拉出服务器
2.切换版本
CRoller
3.将服务器拉入集群
工作版本A>>工作版本B
Monitor
4.进行冒烟测试，完毕
5.服务器依次切换新版本
16
三.快速迭代中的质量管理
完整的监控体系
1. 服务器性能指标
2. 容器异常指标
3. 应用健康指标
4. 数据库负载指标
5. ATP
17
三.快速迭代中的质量管理
回退指标
1. 可量化指标：容器异常指标、服务器性能指标、应用健康指标
2. 触发硬指标立即触发回退
3. 软指标触发预警和停止动作
4. 紧急回退和常规回退
18
三.快速迭代中的质量管理
总结
1. 发布质量需要DEVOPS过程来保证
2. 发布质量需要指标来评估
3. 回退不是失败，而是避免更大的错误
19
四.构建可靠自动化发布
名词说明
AR：Auto Roller 自动化配置工具
ROP：Roll Out Plan 开发团队发布的配置工具
Roller Monitor：跟踪发布过程，收集各项指标，评估发布质量
Train和Coach：
1. 项目Coach：由1个戒多个应用组成
2. Pool Coach：指部署同一服务器一组的应用集合（Pool）
3. 多个Coach组成一个Train
4. SBU管理所属的Train，小迭代Coach ，大迭代Train
20
四.构建可靠自动化发布
测试环境发布：按项目交付，持续集成
规划 持续交付 FAT（功能环境）
1.代码迁入
ROP 构建 更新
SBU
2.自动Job
创建项目Coach 容器 版本
3.人工触发
自动化测试工具
评估交付结果
21
四.构建可靠自动化发布
生产紧急发布
DEV UAT PROD 完成
冒烟环境 Baking Rolling
项目Coach（ROP通
子Coach
过）
子Coach
AR（DevOPS配置） Roller （Rolling过程）
回退计划 Roller Monitor
22
四.构建可靠自动化发布
基亍Pool集群的生产发布，最大可能减少生产影响
DEV UAT PROD 完成
项目Coachs（ROP通
冒烟环境 Baking Rolling
过）
Train（产品
包）
子Train
子Train
AR（DevOPS配置） Roller （Rolling过程）
回退计划 Roller Monitor
23
四.构建可靠自动化发布
CRoller Monitor 自动监测每批次交付版本质量
每批次机器
自动决策（停止戒立即回
发布前 发布中
退）
环境自动化检测/Rolling日志 服务器Rolling日志
机器就绪 容器就绪
发布后
URL自动化测试 测试团队
时间轴维度
机器
7X24常规监控指标（分钟采样） 容器指标 APP(clog)
（xmon）
CRoller Monitor
24
四.构建可靠自动化发布
可靠的回退
• 工具自动回退（可量化指标和基线）
• 不确定问题（先暂停，再决定继续戒回退）
• 手工回退（紧急和常规）
25
四.构建可靠自动化发布
总结
• 快 牺牲质量
• 不打没准备的仗（提前规划计划和回退方案）
• 不把所有鸡蛋放在一个篮子
• 分解过程，改进体系，控制影响范围
• 量化指标，监控所有关键细节
• 工具胆大、心细，自动化控制过程
26
四.如何构成自动化
构建说明
Jenkies
自动化发布平台
Roller XMON
Monitor
ROP AR(Train)
Sys Log
ConfigMan
服务器/APP/ Pool逻辑集群
27
谢谢欣赏！
2014.04.24
28