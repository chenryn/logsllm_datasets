## BenchmarkSQL 测试Oracle 12c TPC-C 性能    
##### [TAG 21](../class/21.md)
### 作者                                                                 
digoal               
### 日期                 
2015-12-23                
### 标签               
PostgreSQL , Oracle , 12c , benchmarksql , tpc-c    
----              
## 背景             
使用BenchmarkSQL测试一下Oracle 12c的TPC-C性能，同时对比一下PostgreSQL 9.5的性能。  
测试机：  
3 * PCI-E SSD，逻辑卷条带，XFS，数据块对齐，16核开HT，256G内存。  
12c安装，配置请参考  
[《Linux RHEL6 x64 命令行静默安装 Oracle 12c - 1》](../201512/20151222_01.md)    
[《Linux RHEL6 x64 命令行静默安装 Oracle 12c - 2》](../201512/20151223_01.md)   
下载benchmarksql  
http://sourceforge.net/projects/benchmarksql/  
下载安装 JDK7  
```  
http://www.oracle.com/technetwork/cn/java/javase/downloads/jdk7-downloads-1880260.html  
wget http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.rpm  
rpm -ivh jdk-7u79-linux-x64.rpm  
```  
检查包安装位置(使用rpm安装时也可以直接指定位置)  
```  
rpm -ql jdk  
...  
/usr/java/jdk1.7.0_79/bin/java  
...  
```  
配置JAVA环境变量，将ORACLE jdbc驱动拷贝到benchmark/run目录  
```  
$  cp ~/oracle/product/12.1.0/db_1/jdbc/lib/ojdbc6.jar   benchmarksql/run/  
$  cp ~/oracle/product/12.1.0/db_1/jdbc/lib/ojdbc7.jar   benchmarksql/run/  
$  export JAVA_HOME=/usr/java/jdk1.7.0_79  
$  export PATH=$JAVA_HOME/bin:$PATH  
$  export CLASSPATH=.:./ojdbc6.jar:./ojdbc7.jar:$CLASSPATH  
```  
修改runSQL.sh，加上$CLASSPATH，否则会报oracle驱动CLASS不存在的错误。  
```  
$  vi runSQL.sh  
myCP="../lib/postgresql-9.3-1101.jdbc41.jar"  
myCP="$myCP:../dist/BenchmarkSQL-4.1.jar"  
myOPTS="-Dprop=$1"  
myOPTS="$myOPTS -DcommandFile=$2"  
java -cp .:$myCP:$CLASSPATH $myOPTS ExecJDBC  
$ vi runLoader.sh   
java -cp .:$CLASSPATH:../lib/postgresql-9.3-1101.jdbc41.jar:../dist/BenchmarkSQL-4.1.jar -Dprop=$1 LoadData $2 $3 $4 $5  
```  
修改props.ora  
```  
$  vi props.ora   
driver=oracle.jdbc.driver.OracleDriver  
conn=jdbc:oracle:thin:@localhost:1521:orcl12c  
user=benchmarksql  
password=benchmarksql  
```  
创建数据库用户  
```  
$  sqlplus "/ as sysdba"  
SQL> create user benchmarksql identified by "benchmarksql";  
SQL> grant dba,connect to benchmarksql;  
SQL> alter user benchmarksql default tablespace users;  
```  
优化参数  
设置ORACLE 批量提交参数  
```  
SQL> alter system set commit_write='batch,nowait';  
```  
使用强制软解析  
```  
SQL> alter system set cursor_sharing=force;  
```  
使用O_DIRECT  
```  
SQL> alter system set filesystemio_options=directio scope=spfile;  
SQL> alter system set disk_asynch_io=false scope=spfile;  
(以上参数 lunar 建议后改为如下)  
SQL> alter system set filesystemio_options=setall scope=spfile;  
SQL> alter system reset disk_asynch_io scope=spfile;  
```  
修改最大连接数，打开游标数。  
```  
SQL> alter system set processes=1000 scope=spfile;  
SQL> ALTER SYSTEM SET open_cursors=900 SCOPE=BOTH;  
alter system set session_cached_cursors=0 scope=spfile;  
(以上参数 lunar 建议后改为如下)  
SQL> alter system reset session_cached_cursors scope=spfile;  
```  
重启数据库.  
关闭numa, 防止NUMA影响(需重启操作系统)：  
```  
grub.conf  
numa=off  
```  
扩展表空间，防止空间不够。(1000个warehouse够用了）。  
```  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users01.dbf' size 31G;  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users02.dbf' size 31G;  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users03.dbf' size 31G;  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users04.dbf' size 31G;  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users05.dbf' size 31G;  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users06.dbf' size 31G;  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users07.dbf' size 31G;  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users08.dbf' size 31G;  
SQL>  alter tablespace users add datafile '/disk1/digoal/oradata/users09.dbf' size 31G;  
alter tablespace UNDOTBS1 add datafile '/disk1/digoal/oradata/undotbs1_01.dbf' size 31G;  
alter tablespace UNDOTBS1 add datafile '/disk1/digoal/oradata/undotbs1_02.dbf' size 31G;  
alter tablespace SYSTEM add datafile '/disk1/digoal/oradata/system_01.dbf' size 31G;  
alter tablespace SYSAUX add datafile '/disk1/digoal/oradata/sysaux_01.dbf' size 31G;  
alter tablespace TEMP add tempfile '/disk1/digoal/oradata/temp_01.dbf' size 31G;  
alter tablespace TEMP add tempfile '/disk1/digoal/oradata/temp_02.dbf' size 31G;  
```  
新增redo log file，默认只有3个50MB的redo log，产生大量log file switch (checkpoint incomplete)和log file switch completion等待事件。  
```  
select group#,sequence#,bytes,members,status from v$log;  
select member from v$logfile;  
alter database add logfile group 4 ('/disk1/digoal/oradata/orcl12c/redo04.log') size 2g;  
alter database add logfile group 5 ('/disk1/digoal/oradata/orcl12c/redo05.log') size 2g;  
alter database add logfile group 6 ('/disk1/digoal/oradata/orcl12c/redo06.log') size 2g;  
alter database add logfile group 7 ('/disk1/digoal/oradata/orcl12c/redo07.log') size 2g;  
alter database add logfile group 8 ('/disk1/digoal/oradata/orcl12c/redo08.log') size 2g;  
alter database add logfile group 9 ('/disk1/digoal/oradata/orcl12c/redo09.log') size 2g;  
alter database add logfile group 10 ('/disk1/digoal/oradata/orcl12c/redo10.log') size 2g;  
alter system switch logfile;  
alter system switch logfile;  
alter system switch logfile;  
alter system switch logfile;  
alter system checkpoint;  
alter database drop logfile group 1;  
alter database drop logfile group 2;  
alter database drop logfile group 3;  
rm -f /disk1/digoal/oradata/orcl12c/redo01.log  
rm -f /disk1/digoal/oradata/orcl12c/redo02.log  
rm -f /disk1/digoal/oradata/orcl12c/redo03.log  
alter database add logfile group 1 ('/disk1/digoal/oradata/orcl12c/redo01.log') size 2g;  
alter database add logfile group 2 ('/disk1/digoal/oradata/orcl12c/redo02.log') size 2g;  
alter database add logfile group 3 ('/disk1/digoal/oradata/orcl12c/redo03.log') size 2g;  
```  
修改benchmarksql建表SQL的ORACLE兼容性：  
```  
$  vi sqlTableCreates  
create sequence benchmarksql.hist_id_seq;  
create table benchmarksql.history (  
  hist_id  integer default benchmarksql.hist_id_seq.nextval primary key,  
  h_c_id   integer,  
  h_c_d_id integer,  
  h_c_w_id integer,  
  h_d_id   integer,  
  h_w_id   integer,  
  h_date   timestamp,  
  h_amount decimal(6,2),  
  h_data   varchar(24)  
);  
```  
创建表  
```  
$  cd benchmarksql/run  
$  ./runSQL.sh props.ora sqlTableCreates  
```  
导入数据  
```  
$  nohup ./runLoader.sh props.ora numWarehouses 1000 >./load.log 2>&1 &  
```  
单位为50万。1000将写入5亿记录。  
```  
......  
------------- LoadJDBC Statistics --------------------  
     Start Time = Sat Jan 09 01:41:18 CST 2016  
       End Time = Sat Jan 09 05:35:35 CST 2016  
       Run Time = 14057 Seconds  
    Rows Loaded = 499139685 Rows  
Rows Per Second = 35508 Rows/Sec  
------------------------------------------------------  
```  
修改创建索引的脚本ORACLE兼容性。  
删除以下无效SQL  
```  
-- select setval('hist_id_seq', (select max(hist_id) + 1 from benchmarksql.history), false);  
-- vacuum analyze;  
```  
增加  
```  
exec dbms_stats.gather_schema_stats( -   
  ownname          => 'BENCHMARKSQL', -   
  options          => 'GATHER AUTO', -   
  estimate_percent => dbms_stats.auto_sample_size, -   
  method_opt       => 'for all columns size repeat', -   
  degree           => 34 -   
   );  
```  
创建索引   
```  
$  ./runSQL.sh props.ora sqlIndexCreates  
```  
手工修改序列值  
```  
SQL> select max(hist_id) + 1 from benchmarksql.history;  
MAX(HIST_ID)+1  
--------------  
      30000001  
SQL> select benchmarksql.hist_id_seq.nextval from dual;  
   NEXTVAL  
----------  
         1  
SQL> alter sequence benchmarksql.hist_id_seq increment by 30000001;  
Sequence altered.  
SQL> select hist_id_seq.nextval from dual;  
   NEXTVAL  