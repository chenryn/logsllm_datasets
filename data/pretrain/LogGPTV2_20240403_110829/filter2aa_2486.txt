### Cobalt Strike C2 漏洞分析

**发布日期**: 2022-05-12  
**分类**: 基础设施  
**作者**: hosch3n@逐日实验室

#### 概述
Cobalt Strike 是一个知名的红队命令与控制框架，采用 Beacon、TeamServer 和 Client 架构。TeamServer 存在受限路径穿越写文件和反序列化漏洞，这些漏洞可以被经过认证的客户端恶意利用。Client 也存在反序列化漏洞，可能受到 RogueCS 攻击。

#### 威胁建模
由于该软件的特殊性，我们需要明确什么是真正的漏洞：
1. 直接攻击 TeamServer 暴露的服务。
2. 通过 Beacon 攻击 TeamServer。
3. 通过 Client 攻击 TeamServer。
4. 通过 TeamServer 攻击 Client。

需要注意的是，TeamServer 控制 Beacon 是其正常功能的一部分，任何所谓的“TeamServer 攻击 Beacon”的操作都不能算作漏洞。因此，TeamServer 是核心，应优先进行安全分析。

#### 历史漏洞

##### in-the-wild 利用
- **漏洞描述**: 利用 TeamServer 从 Beacon 下载文件时，会将 Beacon 可控数据中的 IP 字段作为目录的特点，实现路径穿越写计划任务 RCE。
- **影响**: 攻击者可以通过此漏洞在目标系统上执行任意代码。

##### CVE-2021-36798
- **漏洞描述**: 利用 TeamServer 从 Beacon 加载截图和键盘记录时，会根据 Beacon 可控数据中的字节大小申请内存的特点，实现内存耗尽 DoS。
- **影响**: 攻击者可以导致 TeamServer 内存耗尽，从而使其无法正常工作。

##### CVE-2022-23317
- **漏洞描述**: 为了兼容 proxy 功能（路径以 http:// 开头），没有对 URL 路径进行严格校验。动态调试显示这会绕过 profile 相关配置，直接获取公钥等数据。
- **影响**: 攻击者可以绕过某些安全配置，获取敏感信息。

##### 虚假的 DoS
- **漏洞描述**: 在 `BeaconC2.process_beacon_data` 中存在一处利用条件较为苛刻的 DoS。
- **影响**: 攻击者可以触发此漏洞，但实际利用难度较高。

##### 受限路径穿越
- **漏洞描述**: 用于防止路径穿越的核心是 `CommonUtils.SafeFile` 方法，判断解析前后的路径是否还以限定前缀开头。然而，这允许向上穿越一级并获取到前缀开头的文件对象。
- **示例**: CVE-2022-23457 就是一个例子。以 `ManageUser.process` 为例，Client 可以通过 Host File 功能上传文件到 TeamServer 并映射至 Web 服务。这里 Client 与 TeamServer 基于序列化通过 socket 通信，`SafeFile` 的第二个参数 `var1.arg(0)` 是客户端可控的，在 `UploadFile.result` 中拼接上前缀就可以实现受限路径穿越写文件。
- **影响**: 攻击者可以利用此漏洞在服务器上写入文件，但实际利用效果有限。

##### 反序列化
- **漏洞描述**: 反序列化的核心是 `TeamSocket.readObject` 方法，实际使用的是 `ObjectInputStream.readUnshared`。它在 `ManageUser.run` 中被 `PostAuthentication.clientAuthenticated` 通过多线程拉起。
- **流程**: 客户端在 `Connect.dialogAction` 发起连接时可以向 TeamServer 传输序列化对象，如果服务端存在 gadgets 环境就可被恶意利用。
- **利用条件**: Client 攻击 TeamServer 需要知道服务端的密码（如通过泄漏或反制获取 `.aggressor.prop` 配置文件）。通过 TeamServer 可以攻击任何前来连接的 Client。
- **危害**: 危害程度取决于运行环境中 gadgets 的能力。目前尚未在 CS 内置的 lib 中找到有实质危害的 gadgets。对于原生 JRE 环境，可以通过 `DeserializationBomb` 造成 CPU 型 DoS。多核环境只会影响单核，且不太可能通过反序列化造成内存型 DoS。但如果以前调试漏洞在 `jre/lib/ext` 之类的目录引入过危险依赖，或者使用了特定版本（如 7u21）则可能导致 RCE。

#### 结论
Cobalt Strike 的 TeamServer 和 Client 存在多个安全漏洞，包括路径穿越、反序列化和 DoS。尽管一些漏洞的实际利用效果有限，但仍需重视并采取相应措施进行修复。特别是对于反序列化漏洞，需要特别注意运行环境中的依赖库，以防潜在的 RCE 风险。