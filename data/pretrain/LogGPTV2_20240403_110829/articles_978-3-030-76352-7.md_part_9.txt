check the correctness of the initial BP models.
Blockchain-Based Business Processes 49
2 Solidity-to-CPN Translation
To illustrate our approach and prove its feasibility, we adapt the Blind Auction
exampleincludedin[1].Figure1describestheworkflowoftheblindauctionsys-
tem.Forafulldescriptionoftheusecase,wereferthereadertotheSolidity2CPN
document available at this repository1.
rreeddddiiBB
Place blinded Request
Reveal bids
bid withdrawal
Blinded bid Revealed WithdrawalPending
ACK ACK
+ deposit Bid + key request returns
Receive nnooiittccuuAA rreeddllooHH
Receive Receive withdraw
blinded bids revealed bids requests
Start Start Reveal End Reveal End
Auction Auction
Bidding window Revealing window
Fig.1. Blind auction workflow
The general idea of our approach is to start from a CPN model representing
the general workflow of the smart contract (level-0 model) and then to build
on it by embedding it with submodels representing the smart contract func-
tions (level-1 models). In a level-0 model, we distinguish the user’s behaviour
part which models the way users can interact with the system and the smart
contract’s behaviour part which represents the system. These two are linked
via communication places. Figure2 shows the level-0 model of the previously
described blind auction use case.
We see a smart contract as a set of statements. A statement can be either a
compound, asimpleor acontrol one.Asimplestatement canbeanassignment,
a variable declaration, a sending or a returning statement. A control statement
can be a requirement, a selection or a loop (a for or a while loop).
2.1 Translation Algorithm
Our proposed algorithms are structured as follows:
– extendModeltakesasinputthelevel-0CPNmodelandbuildstheextended
hierarchical model by by calling insertSubModel for each transition corre-
sponding to a function in the Solidity smart contract.
1 https://github.com/garfatta/solidity2cpn.
50 I. Garfatta et al.
LLLaaasssttt BBBiiidddsss PPPooossssssiiibbbllleee PPPooossssssiiibbbllleee PPPooossssssiiibbbllleee
LLLoooggg SSSeeecccrrreeettt KKKeeeyyysss BBBiiidddsss DDDeeepppooosssiiitttsss
withdraw
Call1
[bidValue > lastBid]
bid bid reveal reveal withdraw withdraw
Call ACK Call ACK Call2 ACK
BBBiiiddddddeeerrrsss BBBiiiddddddeeerrr R1 R2 W1 W2
User’s
Full Bids behaviour
PP0011 P02 P12 P22
bid P11 rreevveeaall P21 withdraw Communication
Parameters PPaarraammeetteerrss Parameters places
BBiiddddiinngg
bid reveal Withdraw
Smart
Revealing F T Contract
close finish terminate
behaviour
Fig.2. Blind auction - level-0 model
– insertSubModelisresponsibleforreplacingatransitionbyitscorrespond-
ing level-1 submodel and connecting it to the level-0 model.
– createSubModel is the main algorithm. It generates the level-1 submodel
for each transition by browsing the body of its corresponding function recur-
sivelyandcreatesCPNpatternsaccordingtothetypeoftheprocessedstate-
ment that interconnect to create the transition’s submodel.
2.2 Application on the Blind Auction Use Case
The application of the algorithm on the level-0 model of the Blind Auction use
case (see Fig.2) yields a hierarchical CPN model whose level-1 submodels are
created by the execution of createSubmodel. Figure3 shows the submodel
corresponding to transition withdraw in the level-0 model. The rest of the sub-
models can be found in the online Solidity2CPN document (See footnote 1).
amount
F
F
t1 F2 t3
withdraw p2 T F2 t4
Parameters
T T2 t2 p11
P21 T2
P22
Fig.3. SubModel of transition withdraw
Blockchain-Based Business Processes 51
3 Smart Contract Verification via CPN Tools
Having established the CPN model for a smart contract, verifying properties of
thesmartcontractwouldcomedowntoverifyingpropertiesontheCPNmodel.
WehaveimplementedtheCPNmodelforourBlindAuctionusecaseusingCPN
Tools which leverages explicit model checking techniques, and investigated its
potential in the verification of behavioural and contract-specific properties.
InTable1wepresentstatespaceanalysisstatisticsfordifferentinitialmark-
ingvalues.Wenotethattheunprovidedvaluesmeanthatthestatespacegenera-
tionhadnotfinishedafterseveralhoursofexecution.Thisisduetotheinfamous
state space explosion problem associated with explicit state space exploration.
Table 1. State Space Analysis Results for different initial markings
Bidders 1 2 3 4 5 1 1 1
Possible bids 1 1 1 1 1 2 3 4
Possible secret keys 1 1 1 1 1 2 3 4
Possible deposits 1 1 1 1 1 2 3 4
State space Without hierarchy 4s 4s 6s 252s – 4s 30s –
generation time With hierarchy 5s 5s 10s 1001s – 5s 74s –
#Nodes Without hierarchy 24 235 3118 47621 – 484 19984 –
With hierarchy 44 583 9166 156117 – 1424 65513 –
#Arcs Without hierarchy 26 378 7106 145062 – 555 22980 –
With hierarchy 46 900 19784 446326 – 1545 70704 –
#Dead Without hierarchy 3 10 35 124 – 49 1999 –
Markings With hierarchy 3 10 35 124 – 49 1999 –
The state space report generated by CPN Tools allows the deduction of sev-
eralgeneralbehaviouralproperties.Forinstance,inourusecaseapplication,the
report confirms the boundedness of all the places of the modelled system. More
specific properties can be verified by elaborating CTL properties. For instance,
we can formulate a termination property to check the model’s capability to
alwaysreachaterminalstate(adeadmarking)wherecertainconditionsaremet.
We include the definition of such a property in the Solidity2CPN document6.
4 Conclusion
Thegoalofourworkistoproposeaformalapproachfortheverificationofsmart
contracts. In this context, we propose in this paper a translation algorithm that
generatesahierarchicalCPNmodelrepresentingagivenSoliditysmartcontract,
includingbothitscontrol-flowanddataaspects.CTLpropertiesarethenverified
52 I. Garfatta et al.
on the CPN model to check corresponding properties on the smart contract,
unrestrictedly to certain predefined vulnerabilities.
Inviewoftheresultspresentedinthispaper,itmaybeconcludedthatCPN
Tools does not hold much potential for the verification of properties on CPN
modelsofsmartcontractsduetothestatespaceexplosionproblem.Wedoprove,
however,thattheideaofusingCPNsasarepresentationformalismispromising
for it allows the consideration of the data aspect, and thus the formulation of
contract-specificproperties.Toovercometheencounteredlimitations,weintend
toinvestigatethepotentialofHelena [6]asananalyzerforHighLevelNets.This
toolofferson-the-flyverificationofLTLproperties,whichunliketheverification
of CTL properties offered by CPN Tools, does no always require the generation
of the whole state space. To further improve the tool’s performance, we also
intend to work onHelena’s model checker by embedding it with an extension to
anexistingtechniquepreviouslydevelopedtodealwiththestatespaceexplosion
problem in regular Petri nets [9] and applying it on CPNs.
References
1. Solidity documentation. https://solidity.readthedocs.io/en/latest/
2. Formal verification for solidity contracts - ethereum community forum, October
2015.https://forum.ethereum.org/discussion/3779/formal-verification-for-solidity-
contracts
3. Amani, S., B´egel, M., Bortin, M., Staples, M.: Towards verifying ethereum smart
contractbytecodeinisabelle/hol.In:Proceedingsofthe7thACMSIGPLANInter-
national Conference on Certified Programs and Proofs, pp. 66–77 (2018)
4. Bhargavan,K.,etal.:Formalverificationofsmartcontracts:shortpaper.In:Pro-
ceedingsofthe2016ACMWorkshoponProgrammingLanguagesandAnalysisfor
Security, PLAS@CCS 2016, Vienna, Austria, 24 October 2016, pp. 91–96 (2016)
5. Chen, T., Li, X., Luo, X., Zhang, X.: Under-optimized smart contracts devour
yourmoney.In:IEEE24thInternationalConferenceonSoftwareAnalysis,Evolu-
tionandReengineering,SANER2017,Austria,20–24February2017,pp.442–446
(2017)
6. Evangelista, S.: High level petri nets analysis with helena. In: Ciardo, G., Daron-
deau,P.(eds.)ICATPN2005.LNCS,vol.3536,pp.455–464.Springer,Heidelberg
(2005). https://doi.org/10.1007/11494744 26
7. Jensen, K., Kristensen, L.M.: Coloured Petri Nets: Modelling and Validation of
Concurrent Systems, 1st edn. Springer, Heidelberg (2009). https://doi.org/10.
1007/b9511210.1007/b95112
8. Kalra, S., Goel, S., Dhawan, M., Sharma, S.: ZEUS: analyzing safety of smart
contracts.In:25thAnnualNetworkandDistributedSystemSecuritySymposium,
NDSS 2018, San Diego, California, USA, 18–21 February 2018 (2018)
9. Klai, K., Poitrenaud, D.: MC-SOG: an LTL model checker based on symbolic
observation graphs. In: 29th International Conference Applications and Theory
of Petri Nets, PETRI NETS 2008, China, 23–27 June, Proceedings. pp. 288–306
(2008)
10. L´opez-Pintado, O., Garc´ıa-Ban˜uelos, L., Dumas, M., Weber, I., Ponomarev, A.:
Caterpillar:abusinessprocessexecutionengineontheethereumblockchain.Softw.
Pract. Exp. 49(7), 1162–1193 (2019)
Blockchain-Based Business Processes 53
11. Luu, L., Chu, D., Olickel, H., Saxena, P., Hobor, A.: Making smart contracts
smarter.In:Proceedingsofthe2016ACMSIGSACConferenceonComputerand
CommunicationsSecurity,Vienna,Austria,24–28October2016,p.254–269(2016)
12. Mavridou, A., Laszka, A., Stachtiari, E., Dubey, A.: Verisolid: correct-by-design
smart contracts for ethereum. In: Financial Cryptography and Data Security -
23rd International Conference, St. Kitts and Nevis, 18–22 February 2019, p. 446–
465 2019)
13. Mendling,J.,Weber,I.:Blockchainsforbusinessprocessmanagement-challenges
and opportunities. EMISA Forum 38(1), 22–23 (2018)
14. Torres, C.F., Schu¨tte, J., State, R.: Osiris: hunting for integer bugs in ethereum
smart contracts. In: Proceedings of the 34th Annual Computer Security Appli-
cations Conference, ACSAC 2018, PR, USA, 03–07 December 2018, p. 664–676
(2018)
Formal Quality of Service Analysis in the
Service Selection Problem
B
Agust´ın Eloy Martinez-Sun˜´e( )
Departamento de Computaci´on, Universidad de Buenos Aires,
Buenos Aires, Argentina
PI:EMAIL
Abstract. The Service Selection problem has driven a lot of attention
from the Service-Oriented community in the past few decades. Rapidly
evolving cloud computing technologies foster the vision of a Service-
Oriented Computing paradigm where multiple providers offer specific
functionalities as services that compete against each other to be auto-
matically selected byservice consumers. We present a researchprogram
that focuses on Quality of Service aware Service Selection. We discuss
our vision and research methodology in the context of the state of the
art of the topic and review the main contributions of our approach.
1 Introduction
One of the main characteristics of the Service-Oriented Computing paradigm is
thecapabilityofbuildingcomplexapplicationsbycomposingwebservicesasfun-
damentalbuildingblocks[3].Theemergenceofthisparadigmhasbeenaccompa-
nied by an increasing number of globally available computational resources and
communicationinfrastructure,andalsobyadeeptransformationofthebusiness
models associated with the construction of software systems. Providers of cloud
computing platforms such as Amazon Web Services and Google Cloud rely on
this type of infrastructure to offer a wide variety of options to developers and
web service providers, where a distinctive feature is the high level of granularity
withwhichcompaniescanoptimizetheuseoftheseresourcestobettersuittheir
business goals. Pricing schemes that depend on the amount of time a computa-
tional resource is used or the amount of memory available are some examples
of the attributes used as knobs. Emerging technologies such as serverless com-
puting or Function as a Service (FaaS) open up even more possibilities for the
vision of a Service-Oriented Computing paradigm.
From an academic point of view, one of the issues that has driven a lot of
attention from the Service-Oriented community in the past few decades is the
Research partly supported by the European Unions Horizon 2020 research and inno-
vationprogramundertheMarieSkodowska-CuriegrantagreementNo778233,andby
Universidad de Buenos Aires by grant UBACyT 20020170100544BA.
Supervised by Carlos G. L´opez Pombo.
(cid:2)c SpringerNatureSwitzerlandAG2021
H.Hacidetal.(Eds.):ICSOC2020Workshops,LNCS12632,pp.54–60,2021.
https://doi.org/10.1007/978-3-030-76352-7_8
Formal Quality of Service Analysis in the Service Selection Problem 55
Service Selection problem [3, pt. II]. Stated in general terms, this is the prob-
lem of selecting the most appropriate web service(s), from a pool of available
ones, that best match(es) the functional and non-functional requirements and
constraints specified by the client. Such a procedure is referred to as the deter-
minationofaServiceLevelAgreement(SLA)betweentheserviceconsumerand
theprovider.InthisresearchprojectwefocusonQualityofService(QoS)aware
service selection: given multiple providers offering services that are satisfactory
in terms of the functional requirements, how can we decide the best match in
terms of their QoS, non-functional, characteristics.
Therestofthis paperis structuredas follows: Sect.2gives aclear statement
oftheproblemandintroducesthemainquestionsthatguideourresearch,Sect.3
reviewsthestateoftheartandputsourapproachincontext,Sect.4reviewsthe
maincontributionsofourapproachand,finally,Sect.5presentssomeconcluding
remarks.
2 Problem Definition
Our research problem can be stated more clearly in the following way:
Definition 1 (QoS-aware service selection problem). Given a set S =
{s 1,s 2,...,sn} of QoS profiles each describing the Quality of Service aspects of
differentservices being offered,andgiven a QoSrequirementRq describing what
the client needs (or prefers) in terms of QoS:
Choose a service s∈S that fulfils (or best suits) the client needs Rq.
The reader might be familiar with different variations of this problem such
as the service ranking problem where the goal is to obtain an ordering of S,
instead of just one particular element of it; or the problem in the context of web
services composition where the goal usually is to choose multiple services such
that, if composed according to a given plan, the aggregated Quality of Service
satisfies predefined needs or established criteria. Some variations of the problem
will drive important research questions but the core challenges are captured by
Definition 1. Some of the research questions that immediately arise from the
problem statement are:
– What is the appropriate representation for the QoS profile and the QoS
requirements?
– What is the appropriate analysis procedure to automatically find the right