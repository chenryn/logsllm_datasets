title:On the impact of policing and rate guarantees in DiffServ networks:
a video streaming application perspective
author:Wael Ashmawi and
Roch Gu&apos;erin and
Stephen Wolf and
Margaret H. Pinson
On the Impact of Policing and Rate Guarantees in Diff-Serv 
Networks:  A Video Streaming Application Perspective 
 Wael Ashmawi* 
Intel Corp. 
3600 Juliette Lane 
Santa Clara, CA 95052 
PI:EMAIL 
Roch Guerin** 
U. of Pennsylvania 
200 South 33rd Street 
Philadelphia, PA 19104 
PI:EMAIL 
Stephen Wolf,  Margaret Pinson 
Inst. Telecommun. Sciences 
325 Broadway 
Boulder, CO 80305-3328 
(steve,mpinson)@its.bldrdoc.gov 
ABSTRACT  
Over  the  past  few  years,  there  have  been  a  number  of  proposals 
aimed at introducing different levels of service in the Internet.  One 
of the  more recent proposals is the Differentiated Services (Diff-
Serv) architecture, and in this paper we explore how the policing 
actions and associated rate guarantees provided by the Expedited 
Forwarding (EF) translate into perceived benefits for applications 
that  are  the  presumed  users  of  such  enhancements.    Specifically, 
we  focus  on  video  streaming  applications  that  arguably  have 
relatively  strong  service  quality  requirements,  and  which  should, 
therefore,  stand  to  benefit  from  the  availability  of  some  form  of 
enhanced service. Our goal is to gain a better understanding of the 
relation that exists between application level quality measures and 
the  selection  of  the  network  level  parameters  that  govern  the 
delivery of the guarantees that an EF based service would provide. 
Our  investigation,  which  is  experimental  in  nature,  relies  on  a 
number of standard streaming video servers and clients that have 
been  modified  and  instrumented  to  allow  quantification  of  the 
perceived  quality  of 
received  video  stream.  Quality 
assessments  are  performed  using  a  Video  Quality  Measurement 
tool based on the ANSI objective quality standard.  Measurements 
were  made  over  both  a  local  Diff-Serv  testbed  and  across  the 
QBone,  a  QoS  enabled  segment  of  the  Internet2  infrastructure.  
The paper reports and analyzes the results of those measurements. 
1.  Introduction  
the 
As  IP  networks  are  being  used  to  carry  an  ever-increasing 
range  of  traffic  types,  it  has  been  argued  that  the  associated 
diversity  of  service  requirements  calls  for  the  introduction  of 
service  differentiation  in  the  network.    A  recent  proposal  in  that 
direction  is  embodied  in  the  Differentiated  Services  (Diff-Serv) 
architecture [1] that supports service differentiation by specifying a 
small  number  of  different  “behaviors”  [12],[16]  for  the  network 
when forwarding packets. Our general goal in this paper is to gain 
a better understanding of the relation that exists between the better 
network  guarantees  that  such  new  capabilities  are  providing  and 
the actual benefits that ensue as perceived by the applications that 
use them. Because this is obviously a broad topic with possibly as 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not  made  or  distributed  for  profit  or  commercial  advantage  and  that 
copies bear  this  notice  and the  full citation  on  the  first  page.  To  copy 
otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires prior specific permission and/or a fee. 
SIGCOMM’01, August 27-31, 2001, San Diego, California, USA. 
Copyright 2001 ACM 1-58113-411-8/01/0008…$5.00. 
many  different  answers  as  there  are  applications,  we  narrow  our 
investigation  to  a  specific  application,  namely,  streaming  video.  
Video  applications  are  gaining  in  popularity  and  have  seen 
significant  evolution  over  the  past  five  years.    Early  video 
transmissions  over  IP  networks  were  mostly  limited  to  content 
delivery  that  allowed  users  to  download  compressed  videos  in 
order  to  play  them  back  locally.  The  disadvantage  of  having  to 
wait  for  the  download  to  complete  before  being  able  to  start 
playing  back  a  video  as  well  as  the  desire  to  avoid  storage,  and 
ultimately  duplication,  of  local  copies,  quickly  led  to  the 
development  of  progressive  download  technologies  that  allow 
clients  to  watch  the  video  as  the  content  files  are  being 
downloaded.  Several  currently  available  video  compression 
schemes  were  modified 
to  enable  progressive  downloads: 
QuickTime™,  VIVO™,  VIDO™,  and  RealNetworks™  are 
examples of such schemes♣. 
One of the main challenges for these new technologies is to 
develop adaptive schemes capable of dealing with the uncertainty 
of network resource availability between clients and servers.  This 
has  led  to  a  number  of  approaches  aimed  at  “dynamically” 
adjusting  the  rate  of  video  delivery  based  on  estimating  the 
resources  available  between  the  server  and  the  client.    The  more 
basic  schemes  only  allow  users  to  select  from  several  possible 
video  qualities  at  the  connection  setup  time,  based  on  an  initial 
estimate  of  the  available  bandwidth  between  the  server  and  the 
client.  Some  of  the  more  sophisticated  and  recent  schemes,  e.g., 
[23], include the ability to increase or decrease quality in real-time 
as available resources vary.  These advances not withstanding, the 
transmission  of  video  over  the  Internet  has  remained  somewhat 
hampered  by  the  relative  unpredictability  of  its  quality,  in 
particular  when  it  comes  to  the  delivery  of  high  bit  rate  video 
streams.  As a result, video streaming has been identified by many 
as an application that stands to benefit most from the introduction 
of Differentiated Services. 
interested 
Instead,  as  stated  earlier,  we  are 
Our  goal  in  this  paper  is  not  to  argue  for  or  against  such  a 
position. 
in 
understanding  how  the  network  level  mechanisms  of  Diff-Serv, 
and  in  particular  their  configuration,  translate  into  better  video 
quality for the users viewing them.  Specifically, we want to “plot” 
the evolution of video quality perceived by a user, as a function of 
(cid:137)                                                                        
*  The  work  of  this  author  was  done  while  at  the  University  of 
Pennsylvania and was supported by NSF Grant ANI99-06855. 
** The  work of this author was  supported in part by NSF  Grants 
ANI99-02943, ANI99-06855, and ANI00-85930. 
the  various  network  level  parameters,  e.g.,  token  rate  and  burst 
size,  associated  with  the  support  of  different  types  of  network 
services.  Clearly, video quality will depend on a number of other 
factors,  in  particular  the  design  of  the  server  itself,  which  can 
heavily  influence  the  outcome  based  on  how  well  it  takes 
advantage  of  the  different  services  offered  by  the  network.    Our 
perspective  is,  however,  not  that  of  a  video  server  designer.  
Instead,  we  want  to  take  the  position  of  a  typical  user,  one  who 
relies on existing client and server technology and who is trying to 
determine how best to connect the two across a Diff-Serv enabled 
network.    In  other  words,  the  user  has  no  or  limited  information 
about the internals of the video server and clients, and is primarily 
focused on selecting network parameters  for its video connection 
in  order  to  maximize  video  quality.  Implicit  here  is  the  fact  that 
there is a cost associated with network resources, so that the user 
has an incentive for understanding their relation to video quality, 
and achieving the best possible quality with the minimum amount 
of network resources. 
Despite  its  relatively  simple  formulation  and  the  several 
restrictions we impose, e.g., servers and clients as “black boxes,” 
and Diff-Serv as the only network level  mechanism  we consider, 
achieving  the  stated  goal  of  accurately  evaluating  the  relation 
between network parameters and user level quality is not a simple 
task,  as  there  are  still  many  different  aspects  to  consider  and 
possible  parameters  to  vary.    A  first  and  critical  dimension  is  to 
measure video quality, as users viewing the received video streams 
perceive  it.    Clearly,  network-level  impairments  such  as  packet 
losses or delay and the availability of resources such as bandwidth 
will play a role, and it is safe to say that video quality will improve 
as available bandwidth increases or as losses and delay decrease.  
However, this is a far cry from providing a precise and quantitative 
evaluation  of 
  On  one  hand, 
characterizing the relation that exists between network parameters 
such  as  token  bucket  parameters  and  network  performance,  e.g., 
losses or delay, is a relatively well investigated area when it comes 
to video, and a number of works have provided guidelines on how 
to  select  parameters,  e.g.,  [20][21][24]  and  how  to  measure 
network  performance  [11][22].    On  the  other  hand,  determining 
how  these  translate  into  different  levels  of  video  quality  has 
received  little  attention.    As  a  result,  one  of  this  paper’s 
contributions  is  to  provide  a  quantitative,  even  if  still  partial, 
answer to this question and to illustrate the use of objective video 
quality measurement tools in doing so.   
the  relation  between 
them. 
Another  difficulty  in  accurately  characterizing  how  “better” 
network  services  can  improve  user  level  perception  of  video 
quality is to perform such an evaluation in a reasonably realistic 
setting.    Because  our  investigation  is  experimental  in  nature,  the 
approach we took to address this issue was to consider a relatively 
broad  range  of  configurations  and  scenarios.    Specifically,  we 
experimented with multiple types of video servers and clients, as 
well  as  several  video  clips  and  encoding  schemes.    In  addition, 
several  different  network  configurations  were  employed,  ranging 
from  a  Diff-Serv  capable  local  testbed  to  video  transmissions 
across the QBone [25], a wide area Diff-Serv enabled segment of 
the Internet2 Abilene network. 
 In the rest of this paper, we describe the experimental setup 
used  for  our  investigation  and  report  our  findings  regarding  the 
relation that exists between network level quality and the resulting 
video  quality  as  perceived  by  users.    The  paper  is  structured  as 
follows.    In  Section  2,  we  provide  background  information  on 
Differentiated Services, video server technology, and video quality 
measurement  tools.    Because  of  constraints  imposed  by  the 
testbeds  over  which  we  conducted  our  experiments,  in  particular 
the wide area testbed we had access to, our focus has mainly been 
on a service built on the Expedited Forwarding Per Hop Behavior 
(EF PHB). Section 3 is devoted to a description of the three main 
components  of  our  experimental  setup: 
  the  video  quality 
measurement tool, the setup we have developed in order to capture 
the video information we feed to the quality measurement tool, and 
the  different  network  testbed  configurations.    Results  and  their 
analyses  that  illustrate  the  relation  and  differences  that  exist 
between  network  level  and  user  level  quality  measures  are  the 
topic of Section 4.   Finally, Section 5 summarizes our findings and 
concludes the paper. 
2.  Background Material 
2.1 The Differentiated Services Architecture 
The  Diff-Serv  working  group  has  put  forth  a  number  of 
specifications  outlining  not  only  the  general  architecture  of  the 
Diff-Serv approach [1] and the fields in the IP header available to 
support it [19], but also specifying two1 initial Per Hop Behaviors 
(PHBs)  that  are  to  be  used  to  provide  differentiated  forwarding 
treatments  in  Diff-Serv  enabled  networks.    The  basic  premise  of 
the Diff-Serv architecture is that complex flow level functions are 
performed at the network edge, and that core routers only support a 
few coarse classes or Behavior Aggregates (BAs).  The Diff-Serv 
architecture,  therefore,  relies  on  two  distinct  components:    flow 
classifiers  and  policers  at  the  edges  that  are  responsible  for 
mapping  incoming  packets  to  the  appropriate  BA  and  marking 
them with the appropriate Diff-Serv Code Point (DSCP) [19], and 
various scheduling and buffer management mechanisms in the core 
that  are  responsible  for  implementing  the  different  PHBs  and 
mapping packets to PHBs based on their DSCP.  
Of  most  significance  in  the  context  of  our  investigation  are 
the  policing  actions  performed  at  the  network  edge  and  the 
parameters they involve.  Specifically, policers are used to impose 
limitations on the traffic entering the network marked with a given 
DSCP.    These  limitations  are  typically  enforced  through  a  token 
bucket, e.g., [13][14], that controls both the rate and the burstiness 
of  the  traffic.    The  token  bucket  parameters,  i.e.,  token  rate  and 
token bucket depth, therefore play a major role in determining the 
level  of  service  provided  to  a  flow  assigned  to  a  given  BA.  In 
addition  to  the  token  bucket  parameters,  the  policing  actions 
applied to non-conformant packets, i.e., packets that arrive to find 
an empty token bucket2, are also expected to have a major impact 
on  performance.    A  complete  investigation  should,  therefore, 
consider  all  possible  combinations  of  these  different  factors  to 
assess their relative effect on user level video quality.  Fortunately, 
the current specification of the two PHBs that have been defined 
somewhat  limits  the  range  of  combinations  that  need  to  be 
considered. Specifically, the Expedited Forwarding (EF) PHB [16] 
essentially requires a small burst size, i.e., a token bucket depth of 
one or at most two Maximum Transmission Units (MTUs), and a 
policer  that  either  drops  or  shapes  non-conformant  packets. 
Conversely, while the Assured Forwarding (AF) PHB [12] group 
allows  for  a  wider  range  of  burst  sizes,  it  primarily  calls  for 
(cid:137)                                                                        
1 Actually one PHB [16] and a PHB Group [12]. 
2 Note that we assume here that tokens correspond to credits that 
are  needed  to  transmit  packets.    This  is  consistent  with  the 
terminology of RFC 2212, 2697, and 2698. 
policing actions that mark packets with different “colors” (DSCPs) 
depending  on  their  level  of  non-conformance.    As  mentioned 
earlier, our focus is on the EF PHB for which the main variables 
are the token rate and token bucket depth assigned to the stream 
and whether the policer shapes or drops non-conformant packets.  
Some preliminary experiments were conducted using the AF PHB 
that  are  not  reported  in  this  paper,  as  the  results  were  heavily 
dependent  on  the  level  of  cross  traffic  and  its  impact  on  the 
performance  given 
  A  comprehensive 
investigation of these issues calls for an altogether separate paper. 
2.2 Streaming Video Technologies 
to  marked  packets. 
New  streaming  technologies  use  special  servers  to  deliver 
video  content  intelligently  and  adaptively  to  clients.  This  is 
accomplished through the use of a protocol between the server and 
its clients that allows continuous monitoring of the resources, e.g., 
bandwidth, available between them. Based on this information, the 
server can respond to network dynamics and deliver the content at 
a  suitable  data  rate  given  the  available  bandwidth  and  the 
compression rate of the audio and video content.  
Existing servers rely on either standard, e.g., MPEG [18], or 
proprietary,  e.g.,  Windows  Media  Technology™  (WMT)  [28], 
media  formats,  and  this  affects  the  type  of  video  clips  they  can 
stream.  
types 
Standard  servers  such  as  MPEG  streaming  servers  support 
either MPEG-1 or MPEG-2 encoded video with different rates and 
frame sizes. Often, large to medium scale servers are designed to 
deliver  MPEG  content 
in  broadband  Intranet/Internet 
environments,  i.e.,  environments  where  bandwidth  is  reasonably 
plentiful. Microsoft Netshow Theater™, 2netfx-ThunderCastIP™, 
and  IBM  Video  Charger™  are  examples  of  such  servers  with 
which  we  experimented.    These  three  servers  are  designed  to 
deliver high quality full motion MPEG-1 or MPEG-2 digital video 
streams  (up  to  15  Mbps  per  stream)  over  IP  networks.  In  our 
experiments,  we  noticed  that  even  for  constant  rate  encoding,  all 
three  servers  generate  reasonably  bursty  traffic,  although  with 
sizable differences in the magnitude of the burstiness.  This is not 
entirely  unexpected  in  the  context  of  video,  but  does  have 
important implications for the network and the potential benefits of 
service  differentiation.    The  main  contributor  to  the  size  of  the 
bursts  generated  by  each  server  appears  to  be  the  size  of  the 
(application  level)  datagrams  they  are  configured  to  use.    In 
particular,  the  first  two  servers  are  configured  to  generate  large 
datagrams that can be up to 16280 bytes long3, and which are then 
fragmented into smaller (1500-byte) packets by the IP stack on the 
server itself prior to their transmission on the network.  This results 
in the generation of relatively large bursts of back-to-back packets.  
In  contrast,  the  Video  Charger™  server  allows  smaller  message 
sizes  so  that  while  some  burstiness  remained  in  the  traffic  it 
generated,  it  was  significantly  lower  than  with  the  other  two.  
Because  of  their  propensity  to  generate  large  intrinsic  bursts,  the 
first  two  servers  did  not  perform  very  well  in  bandwidth-
constrained  environments,  and  we  found  that  their  behavior  in 
settings  supporting  service  differentiation  was  of  limited  interest, 
i.e., mostly bi-modal with poor performance until sufficient (peak) 
bandwidth was allocated and nearly perfect performance thereafter.  
(cid:137)                                                                        
3  The  datagram  size  for  both  the  Netshow  Theater™  and 
ThunderCastIP™  servers  is  actually  proportional  to  the  frame 
size and the MPEG encoding rate. 
As  a  result,  our  experiments  with  video  servers  using  standard 
video formats were mostly limited to the Video Charger™ server.   
We  also  experimented  with  another  server  that  exhibited 
similar  burstiness  characteristics,  while  relying  on  a  proprietary 
data format.  Specifically, we experimented with a Windows Media 
Technologies™ server, which uses Microsoft Advanced Streaming 
Format  (ASF)  or  Windows  Media  Video™  (WMV).  ASF  and 
WMV integrate and synchronize objects of different  media types 
(audio,  video,  and  data)  optimized  (encoded)  for  delivery  over 
lossy networks. Both formats support multiple bandwidths within a 
single  file.  Media  objects  stored  in  the  media  files  are  encoded 
using  a  variety  of  encoders  implemented  by  Microsoft  media 
technologies. In addition, the server also supports reduced message 
size (UDP/TCP packet size) for its encoded content that can fit in a 
single packet.  This eliminates the previously mentioned problem 
of generating large bursts of back-to-back packets because of large 
messages  being  fragmented  in  many  small  packets  prior  to 
transmission.  
2.3 Video quality assessments 
Rating  the  (user  level)  quality  of  video  streamed  over  IP 
networks is a difficult task, and there are no standard procedures 
one can simply apply to generate the desired quality measures.  As 
a  result,  the  approach  we  took  was  to  rely  on  methods  that  had 
been  developed  for  video  quality  assessment  in  more  traditional 
environments, i.e., television and video conferencing technologies, 
and then to adapt those techniques to our own environment.  This 
task was further complicated by the fact that standardized objective 
video quality assessment methods for digital  video systems are a 