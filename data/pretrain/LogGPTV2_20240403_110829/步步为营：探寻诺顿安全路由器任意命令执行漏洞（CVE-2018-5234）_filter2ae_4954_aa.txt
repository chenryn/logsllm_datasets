# 逐步深入：诺顿安全路由器任意命令执行漏洞（CVE-2018-5234）的探索

#### 译文声明
本文为翻译文章，原文来源：[https://embedi.com/](https://embedi.com/)。具体内容及含义以原文为准。

近期，物联网设备频繁遭受黑客攻击的新闻频现媒体，引发了对物联网设备安全性的广泛关注。Trustwave发布的一份报告指出，随着使用物联网设备的企业数量增长，这些设备的安全性问题所导致的潜在影响也在扩大。同时，卡巴斯基实验室也发布了一份关于新型高级持续性威胁（APT）Slingshot的报告，揭示了黑客可能通过感染路由器来进一步攻击网络中的其他计算机。

## 一、引言
当前，许多公司（包括防病毒软件生产商）都在开发和推广针对物联网设备的硬件安全解决方案。Embedi的研究人员已对部分此类产品进行了安全性检查，旨在向公众提供这些设备存在的安全缺陷及相关信息。此前，我们已经对Bitdefender BOX进行了全面分析。鉴于网络安全是当前开发者关注的重点领域，我们将继续进行研究，以期这些“网络守护者”产品能够更有效地履行其职能，并保护物联网设备及其自身。

本文将详细探讨赛门铁克的Norton Core Secure WiFi Router（诺顿核心安全无线路由器）。我们将挖掘该产品中的漏洞并描述其现有的安全缺陷。尽管存在一些不足之处，本文还将客观地讨论赛门铁克在物联网安全领域的成就及其产品的强大功能。

## 二、设备概述
这款高性能双频WiFi路由器配备了双核CPU和扩展内存，据官方介绍，与普通WiFi路由器相比，它支持高速互联网连接。诺顿核心安全无线路由器的主要优势在于其对连接到网络的物联网设备提供安全保障。此外，该设备还具备以下功能（部分需订阅）：
1. 内置防火墙；
2. 防护病毒、恶意软件等网络威胁；
3. 保护身份信息及交易安全；
4. 全面的家长控制（如时间限制、内容过滤、阻止特定设备访问互联网）；
5. 网络级安全措施（DPI、IDS、IPS、安全DNS、加密用户连接）；
6. 远程配置设备（通过智能手机应用程序）；
7. 安全评分；
8. 自动检测连接的设备。

官方声称，启用订阅服务后，用户无需再安装额外的防病毒软件。目前，该设备仅在美国市场销售及运营。

## 三、设备行为
若启用互联网接入与蓝牙功能（支持低功耗蓝牙），则可通过相应的智能手机应用程序（iOS或Android版）完成设备的初始设置。在此过程中，可配置WAN接口并更新固件（如有必要）。随后，路由器会在云端被识别并分配给指定用户（即授权的应用程序用户）。之后，只要用户连接至互联网，即可远程执行设置变更，而路由器会同步配置更新。因此，得益于远程管理特性，用户与路由器之间的交互得以最小化。

此外，该设备还配备了一套流量分析系统，包含多个插件，其中部分插件会将检查数据发送至云端（例如Mobile Insight）。这意味着，如果路由器无法接入互联网，则无法修改设备配置（甚至更改WiFi密码），且某些关键的安全子系统也将被禁用。

当用户尝试访问恶意或禁止访问的网站时，页面会被替换为相关警告信息，如“成人内容已被屏蔽”或“当前互联网访问受限”。这表明路由器上运行着一个Web服务器。

路由器还具有LiveUpdate持续固件更新系统，在每次启动时都会检查是否有可用的固件更新，并定期在设备使用期间重复此过程。

## 四、文件系统访问
要进行详细的系统分析，必须访问存储于设备内部存储器中的文件。以下是几种实现方法，先从最简单的开始介绍。
### 4.1 通过UART接口
首先尝试的方法是通过UART接口连接（如下图所示）。理论上，我们可以借此获得文件系统的访问权限（可能是非特权级别）。

正如预期，在设备启动过程中显示了U-Boot和Linux内核加载状态的信息。日志表明已初始化三个串行接口，包括两个常规接口和一个高速BLE接口。其中一个应能通过UART提供完整的I/O访问权限：

    ...
    [    0.000000] Kernel command line: console=ttyMSM0,115200n8 root=/dev/mmcblk0p10 rootwait
    ...
    [    1.242535] msm_serial_hsl_probe: detected port #0 (ttyMSM0)
    [    1.242734] 16340000.serial: ttyMSM0 at MMIO 0x16340000 (irq = 184, base_baud = 115200) is a MSM
    [    1.242872] msm_hsl_console_setup: console setup on port #0
    [    1.934480] console [ttyMSM0] enabled
    [    1.938436] msm_serial_hsl_probe: detected port #1 (ttyMSM1)
    [    1.943913] 16540000.serial: ttyMSM1 at MMIO 0x16540000 (irq = 188, base_baud = 115200) is a MSM
    [    1.952800] msm_serial_hsl_init: driver initialized
    [    1.958433] 16640000.hs_uart: ttyHS0 at MMIO 0x16640000 (irq = 190, base_baud = 460800) is a MSM HS UART
    ...

然而，在系统初始化完成后，由于默认禁用了Shell输出，getty无法工作，从而无法访问文件系统。不过，我们仍可以通过这种方法观察到路由器的加载状态。

### 4.2 获取固件
另一种方法是从设备固件中提取文件，以获取内部存储器中的内容。通常可以从制造商官网下载固件，或从安装了对应应用的手机上获取。还可以尝试在设备试图从互联网下载更新时拦截通信。

起初，我们在赛门铁克Norton官网上寻找资源，并尝试从手机及应用程序中获取，但均未成功。最终决定在固件更新过程中尝试截获。我们知道LiveUpdate系统会在设备上运行，并且路由器在初始设置阶段会检查更新。

为了在更新过程中获取固件，我们让设备通过代理服务器连接到互联网。使用一台运行Linux系统的计算机作为代理服务器，并利用iptables配置NAT，以便设备通过代理服务器的DHCP获得IP地址：

    $ iptables -t nat -A POSTROUTING -o internet0 -j MASQUERADE
    $ iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    $ iptables -A FORWARD -i net0 -o internet0 -j ACCEPT
    $ iptables -I INPUT -p udp --dport 67 -i net0 -j ACCEPT

通过WireShark分析通信发现，其DNS服务器为199.85.126.15和199.85.127.15。整个固件获取过程未采用任何形式的加密。具体步骤如下：
1. 通过上述DNS解析liveupdate.symantecliveupdate.com的地址；
2. 向minitri.flg文件发出GET请求，该文件作为是否可以进行更新的有效指示：

    $ curl -H "Host: liveupdate.symantecliveupdate.com" -X GET "152.195.132.156//minitri.flg"