rience”, Carnegie Mellon University Parallel Data Lab Technical Report CMU-
PDL-14-102, 2014.
[San11] N. Santos and A. Schiper, “Tuning Paxos for High-Throughput with Batching
and Pipelining”, in 13th Int’l Conf. on Distributed Computing and Networking,
2012.
508 | Bibliography
[Sar97] N. B. Sarter, D. D. Woods, and C. E. Billings, “Automation Surprises”, in
Handbook of Human Factors & Ergonomics, 2nd edition, G. Salvendy (ed.), Wiley,
1997.
[Sch14] E. Schmidt, J. Rosenberg, and A. Eagle, How Google Works: Grand Central
Publishing, 2014.
[Sch15] B. Schwartz, “The Factors That Impact Availability, Visualized”, blog post, 21
December 2015.
[Sch90] F. B. Schneider, “Implementing Fault-Tolerant Services Using the State
Machine Approach: A Tutorial”, in ACM Computing Surveys, vol. 22, no. 4, 1990.
[Sec13] Securities and Exchange Commission, “Order In the Matter of Knight Capital
Americas LLC”, file 3-15570, 2013.
[Sha00] G. Shao, F. Berman, and R. Wolski, “Master/Slave Computing on the Grid”,
in Heterogeneous Computing Workshop, 2000.
[Shu13] J. Shute et al., “F1: A Distributed SQL Database That Scales”, in Proc. VLDB
2013, 2013.
[Sig10] B. H. Sigelman et al., “Dapper, a Large-Scale Distributed Systems Tracing
Infrastructure”, Google Technical Report, 2010.
[Sin15] A. Singh et al., “Jupiter Rising: A Decade of Clos Topologies and Centralized
Control in Google’s Datacenter Network”, in SIGCOMM ’15.
[Skel13] M. Skelton, “Operability can Improve if Developers Write a Draft Run
Book”, blog post, 16 October 2013.
[Slo11] B. Treynor Sloss, “Gmail back soon for everyone”, blog post, 28 February
2011.
[Tat99] S. Tatham, “How to Report Bugs Effectively”, 1999.
[Ver15] A. Verma, L. Pedrosa, M. R. Korupolu, D. Oppenheimer, E. Tune, and J.
Wilkes, “Large-scale cluster management at Google with Borg”, in Proceedings of
the European Conference on Computer Systems, 2015.
[Wal89] D. R. Wallace and R. U. Fujii, “Software Verification and Validation: An
Overview”, IEEE Software, vol. 6, no. 3 (May 1989), pp. 10, 17.
[War14] R. Ward and B. Beyer, “BeyondCorp: A New Approach to Enterprise Secu‐
rity”, in ;login:, vol. 39, no. 6, December 2014.
[Whi12] J. A. Whittaker, J. Arbon, and J. Carollo, How Google Tests Software:
Addison-Wesley, 2012.
[Woo96] A. Wood, “Predicting Software Reliability”, in Computer, vol. 29, no. 11,
1996.
[Wri12a] H. K. Wright, “Release Engineering Processes, Their Faults and Failures”,
(section 7.2.2.2) PhD Thesis, University of Texas at Austin, 2012.
Bibliography | 509
[Wri12b] H. K. Wright and D. E. Perry, “Release Engineering Practices and Pitfalls”,
in Proceedings of the 34th International Conference on Software Engineering
(ICSE ’12). (IEEE, 2012), pp. 1281–1284.
[Wri13] H. K. Wright, D. Jasper, M. Klimek, C. Carruth, Z. Wan, “Large-Scale Auto‐
mated Refactoring Using ClangMR”, in Proceedings of the 29th International Con‐
ference on Software Maintenance (ICSM ’13), (IEEE, 2013), pp. 548–551.
[Zoo14] ZooKeeper Project (Apache Foundation), “ZooKeeper Recipes and Solu‐
tions”, in ZooKeeper 3.4 documentation, 2014.
510 | Bibliography
Index
Symbols Borg example, 81
/varz HTTP handler, 109 cross-industry lessons, 467
database example, 73-75
A Diskerase example, 85
focus on reliability, 83
abusive client behavior, 382
Google's approach to, 70
access control, 89
hierarchy of automation classes, 72
ACID datastore semantics, 287, 341
recommendations for enacting, 84
acknowledgments, xxi-xxiv
specialized application of, 79
adaptive throttling, 250
use cases for, 70-73
Ads Database, 73-75
automation tools, 194
AdSense, 31
autonomous systems, 67
aggregate availability equation, 27, 477
Auxon case study, 207-209, 211-213
aggregation, 114, 180
availability, 38, 341
agility vs. stability, 97
(see also service availability)
(see also software simplicity)
availability table, 477
Alertmanager service, 119
alerts
B
defined, 56
false-positive, 180 B4 network, 15
software for, 18 backend servers, 19, 231
(see also Borgmon; time-series monitor‐ backends, fake, 204
ing) backups (see data integrity)
anacron, 316 Bandwidth Enforcer (BwE), 17
Apache Mesos, 15 barrier tools, 193, 195, 293
App Engine, 146 batch processing pipelines, 350
archives vs. backups, 343 batching, 282, 302, 329
asynchronous distributed consensus, 289 Bazel, 90
atomic broadcast systems, 295 best practices
attribution policy, xx capacity planning, 482
automation for change management, 10
applying to cluster turnups, 75-81 error budgets, 481
vs. autonomous systems, 67 failures, 479
benefits of, 67-70 feedback, 174
best practices for change management, 10 for incident management, 166
511
monitoring, 481 product launches and, 376
overloads and failure, 483 traditional approach to, 207
postmortems, 171-172, 482 cascading failures
reward systems, 174 addressing, 280-283
role of release engineers in, 88 causes of, 260-265
rollouts, 480 defined, 259, 308
service level objectives, 480 factors triggering, 276
team building, 483 overview of, 283
bibliography, 501 preventing server overload, 265-276
Big Data, 327 testing for, 278-280
Bigtable, 17, 31, 65 (see also overload handling)
bimodal latency, 273 change management, 10
black-box monitoring, 55, 59, 120 (see also automation)
blameless cultures, 170 change-induced emergencies, 153-155
Blaze build tool, 90 changelists (CLs), 20
Blobstore, 17, 342 Chaos Monkey, 196
Borg, 14-16, 81-83, 329 checkpoint state, 195
Borg Naming Service (BNS), 16 cherry picking tactic, 89
Borgmon, 108-123 Chubby lock service, 18, 291
(see also time-series monitoring) planned outage, 39, 47
alerting, 18, 118 client tasks, 231
configuration, 121 client-side throttling, 249
rate() function, 116 clients, 19
rules, 114-118 clock drift, 287
sharding, 119 Clos network fabric, 14
timeseries arena, 111 cloud environment
vectors, 112-113 data integrity strategies, 341, 356
break-glass mechanisms, 201 definition of data integrity in, 340
build environments, 190 evolution of applications in, 341
business continuity, 337 technical challenges of, 344
Byzantine failures, 290, 304 clusters
applying automation to turnups, 75-81
C cluster management solution, 329
defined, 14
campuses, 14
code samples, xx
canarying, 34, 155, 189, 380
cognitive flow state, 409
CAP theorem, 286
cold caching, 274
CAPA (corrective and preventative action), 465
colocation facilities (colos), 85
capacity planning
Colossus, 16
approaches to, 105
command posts, 164
best practices for, 482
communication and collaboration
Diskerase example, 85
blameless postmortems, 171
distributed consensus systems and, 307
case studies, 432-439
drawbacks of "queries per second", 248
importance of, 440
drawbacks of traditional plans, 208
with Outalator, 181
further reading on, 106
outside SRE team, 437
intent-based (see intent-based capacity
position of SRE in Google, 425
planning)
production meetings (see production meet‐
mandatory steps for, 11
ings)
preventing server overload with, 266
512 | Index
within SRE team, 430 idempotency, 316
company-wide resilience testing, 106 large-scale deployment of, 317
compensation structure, 128 leader and followers, 321
computational optimization, 209 overview of, 326
configuration management, 93, 153, 201, 277 Paxos algorithm and, 320-325
configuration tests, 188 purpose of, 315
consensus algorithms reliability applications of, 316
Egalitarian Paxos, 302 resolving partial failures, 322
Fast Paxos, 301, 320 storing state, 324
improving performance of, 296 tracking cron job state, 319
Multi-Paxos, 303 uses for, 315
Paxos, 290, 303 cross-industry lessons
Raft, 298, 302 Apollo 8, xvii
Zab, 302 comparative questions presented, 459
(see also distributed consensus systems) decision-making skills, 469-470
consistency Google's application of, 470
eventual, 287 industry leaders contributing, 460
through automation, 67 key themes addressed, 459
consistent hashing, 227 postmortem culture, 465-467
constraints, 208 preparedness and disaster testing, 462-465
Consul, 291 repetitive work/operational overhead, 467
consumer services, identifying risk tolerance of, current state, exposing, 138
28-31
continuous build and deployment D
Blaze build tool, 90
D storage layer, 16
branching, 90
dashboards
build targets, 90
benefits of, 57
configuration management, 93
defined, 55
deployment, 93
data analysis, with Outalator, 181
packaging, 91
data integrity
Rapid release system, 90, 91
backups vs. archives, 343
testing, 90
case studies in, 360-366
typical release process, 92
conditions leading to failure, 346
contributors, xxii-xxiv
defined, 339
coroutines, 327
expanded definition of, 340
corporate network security, 106
failure modes, 349
correctness guarantees, 335
from users’ perspective, 345
correlation vs. causation, 136
overview of, 368
costs
selecting strategy for, 341-343, 356
availability targets and, 30, 32
SRE approach to, 349-360
direct, 4
SRE objectives for, 344-349
of failing to embrace risk, 25
SRE principles applied to, 367-368
indirect, 4
strict requirements, 340
of sysadmin management approach, 4
technical challenges of, 344
CPU consumption, 248, 262, 383
data processing pipelines
crash-fail vs. crash-recover algorithms, 290
business continuity and, 337
cron
challenges of uneven work distribution, 328
at large scale, 325
challenges to periodic pattern, 328
building at Google, 319-325
drawbacks of periodic, 329-332
Index | 513
effect of big data on, 328 distributed periodic scheduling (see cron)
monitoring problems, 331-332 DNS (Domain Name System)
origin of, 327 EDNS0 extension, 225
overview of, 338 load balancing using, 224-227
pipeline depth, 328 DoubleClick for Publishers (DFP), 437-439
simple vs. multiphase pipelines, 328 drains, 277
Workflow system, 333, 335 DTSS communication files, 327
data recovery, 359 dueling proposers situation, 298
datacenters durability, 38
backbone network for, 15
data validation, 357 E
load balancing, 231-246
early detection for data integrity, 356
topology of, 14
(see also data integrity)
datastores
Early Engagement Model, 448-451
ACID and BASE, 287, 341, 347
“embarrassingly parallel” algorithms, 328
reliable replicated, 292
embedded engineers, 417-423
Decider, 74
emergency preparedness, 361
decision-making skills, 469
cross-industry lessons, 462
defense in depth, for data integrity, 349, 361,
emergency response
367
change-induced emergencies, 153-155
demand forecasting, 11
essential elements of, 151
dependency hierarchies, 58, 263