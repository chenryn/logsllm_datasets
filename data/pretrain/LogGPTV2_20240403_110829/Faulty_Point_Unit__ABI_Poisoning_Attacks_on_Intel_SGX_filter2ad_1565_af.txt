Table 4: Benchmarks with SPEC CPU 2017 under compilation with the x87 FPU and with the SSE, both shown for different
rounding modes. Listed are all workloads in the fprate test class and their result in the given configuration.
fotonik3d
cactuBSSN namd
Rounding mode
specrand
imagick
bwaves
blender
cam4
parest
povray
roms
e
l
g
n
i
S
o
i
s
i
c
e
r
p
n To nearest
Downward
Upward
To zero
To nearest
Downward
Upward
To zero
E
S
S
¸
Ø
Ø
Ø
¸
¸
¸
¸
Ø
Ø
Ø
Ø
¸
Ø
Ø
Ø
Ø
Ø
Ø
Ø
¸
Ø
Ø
Ø
Ø
Ø
Ø
Ø
¸
¸
Ø
¸
Ø
Ø
Ø
Ø
¸
¸
Ø
¸
lbm wrf
¸
Ø
Ø
Ø
Ø
Ø
Ø
Ø
¸ ¸
Ø
¸
¸
Ø
Ø
¸
¸
¸
¸
Ø
¸
Ø
¸
Ø
Ø
Ø
Ø
Ø
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
¸
nab
Ø
Ø
Ø
Ø
¸
¸
¸
¸
Ø
Ø
Ø
Ø
¸
Ø
Ø
Ø
Ø
Ø
Ø
Ø
¸
¸
¸
¸
Ø
Ø
Ø
Ø
¸
Ø
Ø
Ø
to pose a threat to the promise of transparently shielding enclave
applications [22, 43].
In this work, we presented novel ABI-level attacks on the largely
overlooked x87 FPU and SSE state that allow an unprivileged adver-
sary to impact the integrity of enclaved floating-point operations, in
terms of the rounding mode, precision, and silently introduced NaN
values. We furthermore explored an innovative controlled-channel
attack variant that abuses attacker-induced floating-point excep-
tions to partially breach the confidentiality of otherwise private
enclaved floating-point operations. In a comprehensive analysis of
this vulnerability space in 7 popular runtimes, developed by both
academia and industry, we were able to provide a proof-of-concept
attack for 5 of them. Moreover, our analysis revealed that 2 pre-
viously patched production runtimes remained vulnerable to NaN
injection, further highlighting the intricacy of fully mitigating this
ABI-level attack surface. While the eventual impact of our FPU
poisoning attacks remains intrinsically application-dependent, we
have presented several case studies that illustrate the potential
exploitability in selected application binaries.
The fundamental issue can be mitigated by simply setting the
x87 FPU control word as well as the SSE MXCSR register into known
states when entering enclaved execution. Mitigating the followup
MMX issue requires an additional emms instruction to place the
FPU in the expected x87 mode. Regarding more principled mitiga-
tion strategies however, we explicitly recommend that shielding
runtimes perform a full xrstor to initialize the complete processor-
extended state whenever the enclave is entered. Although this may
come with a slightly increased cost in performance, we believe that
our findings underscore the need for shielding runtimes to move
away from selective register cleansing on an ad-hoc case-by-case
basis, in order to more systematically prevent any orthogonal ABI-
level issues that may arise in current or future processor extensions.
Six of the seven investigated enclave shielding runtimes have now
opted to perform such a full xrstor or in the case of Graphene
perform an equivalent fxrstor while SGX-LKL will inherit the
xrstor mitigation from Microsoft OpenEnclave in the future.
In the wider perspective, our work highlights the fallacy and chal-
lenges of implementing a high-assurance TEE on top of a complex
instruction set architecture like x86, with arguably too many ne-
glected legacy features and strict backwards compatibility. We argue
that, in an era where the research community is increasingly look-
ing into subtle microarchitectural CPU vulnerabilities [6, 25, 41, 42],
the strictly architectural attack surface of today’s complex x86 pro-
cessor features remains not sufficiently understood. As such, an
Figure 6: Composite image of the Blender benchmark in
Spec CPU 2017 under attack by our FPU attacker in x87 sin-
gle precision mode when rounding towards zero. Areas in
red differ from the expected render image with the zoomed-
in area showing differences visible to the human eye.
a snow cover on the mountains. With the attack (right), however,
the shadow is missing and the contours of the mountains are lower,
making the snow cover to appear to float. It is evident that the
visual perturbations between the baseline and attacked rendering
are small, yet the fact that they are visible even for human observers
clearly illustrates the potential impact of insufficient ABI shield-
ing on the integrity of an outsourced enclave rendering service.
Such an attack may for instance be relevant when an untrusted
cloud provider has an economical incentive to stealthily degrade
the quality of refined 3D movie stills from a competitor.
From the SPEC analysis, we conclude that common applications
may widely fail when unexpectedly interfaced with a malicious ABI
and that attacker-induced floating-point errors in larger applica-