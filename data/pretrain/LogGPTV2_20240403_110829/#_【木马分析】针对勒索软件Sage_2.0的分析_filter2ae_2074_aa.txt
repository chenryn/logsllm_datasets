# 【木马分析】针对勒索软件Sage 2.0的分析
|
##### 译文声明
本文是翻译文章，文章来源：cert.pl
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
作者：[兴趣使然的小胃](http://bobao.360.cn/member/contribute?uid=2819002922)
预估稿费：180RMB
投稿方式：发送邮件至[linwei#360.cn](mailto:PI:EMAIL)，或登陆[网页版](http://bobao.360.cn/contribute/index)在线投稿
**  
**
**前言**
Sage勒索软件是勒索软件家族的一个新成员，也是勒索软件CryLocker的一个变种。从目前情况分析，隐藏在Sage背后的始作俑者与勒索软件Cerber、Locky和Spora的散布者应该师出同门。
在本文的分析案例中，Sage借助垃圾邮件进行传播扩散，恶意垃圾邮件中仅仅包含一个zip压缩文件，没有其他文字内容。该zip文件包含了一份Word宏文档，其主要功能是下载及安装Sage勒索软件。
运行该勒索软件后，Windows的UAC窗口会不断重复显示，直到用户点击“Yes”按钮，允许勒索软件运行为止。
随后勒索软件开始对文件进行加密，被加密过的文件名以“.sage”结尾。
勒索软件的赎金页面会告诉受害者去Tor网络页面支付赎金，但首先受害者需要输入正确的验证码才能访问该页面。
验证码校验通过后，受害者可以看到Sage 2.0的主页面，如下图所示。
受害者甚至可以在这个网站与软件作者进行交流。
Sage不会在加密工作结束后自我删除，而是将自身复制到“%APPDATA%Roaming”目录，每次系统重启后，Sage会重新加密所有文件，直到受害者支付赎金。
**技术分析**
接下来我们将着重从技术角度对Sage 2.0进行分析。
软件的主函数流程与以下代码类似：
    int main(int argc, const char **argv, const char **envp)
    {
      ModCheck();
      DebugCheck();
      AntiDebug(v3);
      if ( AntiDebugCheckMutex() )
        return 0;
      GetOrGenerateMainCryptoKey();
      if ( IsProtectedLocale() )
      {
        FingerprintLocation(2);
        Sleep(0x493E0u);
        FingerprintLocation(2);
        Sleep(0x927C0u);
        FingerprintLocation(2);
        SelfDelete();
        result = 0;
      }
      else
      {
        if ( !CheckFingerprintLocation() )
          return 0;
        result = CreateThreadsAndEncrypt(&mainEncKeyt);
      }
      return result;
    }
代码中包含很多的指纹信息探测及检查过程，这些过程都是常见流程，比较有趣的功能包括以下几点：
**1）调试开关功能**
首次运行时软件可能会出现某些问题，因此软件内置了一个调试命令行参数功能来测试软件设置参数是否正确：
    LPWSTR *DebugCheck()
    {
      cmdLine = GetCommandLineW();
      result = CommandLineToArgvW(cmdLine, &numArgs);
      if ( numArgs == 2 )
      {
        result = (LPWSTR *)result[1];
        if ( *result == 'd' && !*(result + 1) )
        {
          if ( AttachConsole(0xFFFFFFFF) )
          {
            stdout = GetStdHandle(0xFFFFFFF5);
            debugmsg = sprintf_0("{"b":"%#.*s"}", 8, FingerprintDword + 4);
            WriteFile(stdout, debugmsg, lstrlenA(debugmsg), &NumberOfBytesWritten, 0);
          }
          ExitProcess(0);
        }
      }
    }
调试功能的运行结果如下图所示。
这个调试功能之所以存在，可能是因为作者疏忽大意，忘了从最终版本中删除相应代码。
**2）区域检查功能**
Sage 2.0的作者给了某几个国家特殊关照，如以下的区域检查代码片段：
    signed int IsProtectedLocale()
    {
      localeCount = GetKeyboardLayoutList(10, (HKL *)&List);
      if ( localeCount = localeCount )
          return 0;
      }
      return 1;
    }
上述代码对用户键盘布局进行了检测，next变量的数值与语种的对应关系为：
有点令人失望的是波兰语系并不在软件的例外列表中，如果Sage作者能看到这篇文章的话，请将0x15值添加到程序代码中（注：作者的调侃）。  
**3）地理位置指纹识别功能**
Sage试图通过maps.googleapis.com得到宿主机的地理位置信息以及SSID、MAC信息，如以下代码：
    strcpy_((int)arg0, "/maps/api/browserlocation/json?browser=firefox&sensor=true");
    i = 0;
    if ( v12[1] )
    {
        offset = 0;
        do
        {
            ss_ = (int)&v12[offset + 2];
            if ( *(_DWORD *)ss_ > 1) - 100);
            }
            ++i;
            offset += 90;
        }
        while ( i < v12[1] );
    }
    // ...
    DoHttpGetRequest((DWORD)&dwNumberOfBytesAvailable, "maps.googleapis.com", 0x1BBu, v8)
特征文件判定，文件加密流程开始前，Sage首先检查某个特征文件是否存在：
    if ( CreateFileW(L"C:\Temp\lol.txt", 0x80000000, 1u, 0, 3u, 0, 0) == (HANDLE)-1 )
    {
        // encryption code
    }
Sage作者通过判断特征文件是否存在，决定加密流程是否启动，以避免对作者本机的文件造成影响。
若该特征文件不存在，Sage将启动加密流程。
**文件后缀清单**
Sage不会对所有文件进行加密，它只对文件后缀清单中的文件进行加密，受影响的文件后缀如下所示：
    .dat .mx0 .cd .pdb .xqx .old .cnt .rtp .qss .qst .fx0 .fx1 .ipg .ert .pic .img
    .cur .fxr .slk .m4u .mpe .mov .wmv .mpg .vob .mpeg .3g2 .m4v .avi .mp4 .flv
    .mkv .3gp .asf .m3u .m3u8 .wav .mp3 .m4a .m .rm .flac .mp2 .mpa .aac .wma .djv
    .pdf .djvu .jpeg .jpg .bmp .png .jp2 .lz .rz .zipx .gz .bz2 .s7z .tar .7z .tgz
    .rar .zip .arc .paq .bak .set .back .std .vmx .vmdk .vdi .qcow .ini .accd .db
    .sqli .sdf .mdf .myd .frm .odb .myi .dbf .indb .mdb .ibd .sql .cgn .dcr .fpx
    .pcx .rif .tga .wpg .wi .wmf .tif .xcf .tiff .xpm .nef .orf .ra .bay .pcd .dng
    .ptx .r3d .raf .rw2 .rwl .kdc .yuv .sr2 .srf .dip .x3f .mef .raw .log .odg .uop
    .potx .potm .pptx .rss .pptm .aaf .xla .sxd .pot .eps .as3 .pns .wpd .wps .msg
    .pps .xlam .xll .ost .sti .sxi .otp .odp .wks .vcf .xltx .xltm .xlsx .xlsm
    .xlsb .cntk .xlw .xlt .xlm .xlc .dif .sxc .vsd .ots .prn .ods .hwp .dotm .dotx
    .docm .docx .dot .cal .shw .sldm .txt .csv .mac .met .wk3 .wk4 .uot .rtf .sldx
    .xls .ppt .stw .sxw .dtd .eml .ott .odt .doc .odm .ppsm .xlr .odc .xlk .ppsx
    .obi .ppam .text .docb .wb2 .mda .wk1 .sxm .otg .oab .cmd .bat .h .asx .lua .pl
    .as .hpp .clas .js .fla .py .rb .jsp .cs .c .jar .java .asp .vb .vbs .asm .pas
    .cpp .xml .php .plb .asc .lay6 .pp4 .pp5 .ppf .pat .sct .ms11 .lay .iff .ldf
    .tbk .swf .brd .css .dxf .dds .efx .sch .dch .ses .mml .fon .gif .psd .html
    .ico .ipe .dwg .jng .cdr .aep .aepx .123 .prel .prpr .aet .fim .pfb .ppj .indd
    .mhtm .cmx .cpt .csl .indl .dsf .ds4 .drw .indt .pdd .per .lcd .pct .prf .pst
    .inx .plt .idml .pmd .psp .ttf .3dm .ai .3ds .ps .cpx .str .cgm .clk .cdx .xhtm
    .cdt .fmv .aes .gem .max .svg .mid .iif .nd .2017 .tt20 .qsm .2015 .2014 .2013
    .aif .qbw .qbb .qbm .ptb .qbi .qbr .2012 .des .v30 .qbo .stc .lgb .qwc .qbp
    .qba .tlg .qbx .qby .1pa .ach .qpd .gdb .tax .qif .t14 .qdf .ofx .qfx .t13 .ebc
    .ebq .2016 .tax2 .mye .myox .ets .tt14 .epb .500 .txf .t15 .t11 .gpc .qtx .itf
    .tt13 .t10 .qsd .iban .ofc .bc9 .mny .13t .qxf .amj .m14 ._vc .tbp .qbk .aci