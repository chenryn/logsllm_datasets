---
author: ''
category: 系统运维
comments_data:
- date: '2014-05-26 15:45:09'
  message: 马，正好要用
  postip: 121.48.185.156
  username: 微博评论
- date: '2014-05-26 16:33:02'
  message: 貌似没有 禁用 递归啊？
  postip: 220.181.108.168
  username: 微博评论
- date: '2014-05-26 16:33:02'
  message: 回复@闪电川冰:是的，这个是简单指南，其中关于如何禁止开放查询，会在另外一篇，我们还没翻译。事实上。DNS之复杂，远非一篇小文能说清楚，这里只是一个简单引导。
  postip: 220.181.108.168
  username: 微博评论
- date: '2014-05-26 18:33:00'
  message: 回复@Linux中国:好的 持续关注中...
  postip: 54.221.166.63
  username: 微博评论
- date: '2014-05-26 20:03:00'
  message: 回复@闪电川冰:已经有了、文内有链接。当然距离一个安全的dns还很远。
  postip: 220.181.108.170
  username: 微博评论
- date: '2014-07-28 09:03:09'
  message: 讲得挺多的。看WIN下搭个DNS也是挺费事的。
  postip: 183.63.82.194
  username: arhool
- date: '2014-07-28 10:02:56'
  message: 其实搭建容易，麻烦在需要了解精通一系列DNS的各种机制、规范什么的。
  postip: 106.120.101.58
  username: linux
count:
  commentnum: 7
  favtimes: 4
  likes: 0
  sharetimes: 3
  viewnum: 16391
date: '2014-05-26 15:14:00'
editorchoice: false
excerpt: 任何运作中的域名至少有两台DNS服务器，一台称为主域名服务器（比如叫做ns1），而另一台称为从域名服务器（比如叫做ns2）。这些服务器通常用于故障转移：如果一台宕机，另外一台就激活成为DNS服务器（译注：此处译者有不同意见，事实上两个或更多的DNS服务器是共同工作的，并不是第一台停止服务后，第二台才接替工作。解析器是随机选择一个DNS服务器进行询问，如果超时则会询问下一个，这是多个DNS的故障容错机制）。也可以实现包括负载均衡、防火墙和集群在内的更为复杂的故障转移机制。
  一个域的所有DNS条目都会被添加到主域名服务器，
fromurl: ''
id: 3092
islctt: true
largepic: /data/attachment/album/201405/26/151355uzrlxqrp5855qdxy.jpg
permalink: /article-3092-1.html
pic: /data/attachment/album/201405/26/151355uzrlxqrp5855qdxy.jpg.thumb.jpg
related:
- displayorder: 0
  raid: 2969
- displayorder: 1
  raid: 3093
reviewer: ''
selector: ''
summary: 任何运作中的域名至少有两台DNS服务器，一台称为主域名服务器（比如叫做ns1），而另一台称为从域名服务器（比如叫做ns2）。这些服务器通常用于故障转移：如果一台宕机，另外一台就激活成为DNS服务器（译注：此处译者有不同意见，事实上两个或更多的DNS服务器是共同工作的，并不是第一台停止服务后，第二台才接替工作。解析器是随机选择一个DNS服务器进行询问，如果超时则会询问下一个，这是多个DNS的故障容错机制）。也可以实现包括负载均衡、防火墙和集群在内的更为复杂的故障转移机制。
  一个域的所有DNS条目都会被添加到主域名服务器，
tags:
- DNS
thumb: false
title: CentOS上配置主DNS服务器的简易指南
titlepic: false
translator: GOLinux
updated: '2014-05-26 15:14:00'
---
任何运作中的域名至少有两台DNS服务器，一台称为主域名服务器（比如叫做ns1），而另一台称为从域名服务器（比如叫做ns2）。这些服务器通常用于故障转移：如果一台宕机，另外一台就激活成为DNS服务器（译注：此处译者有不同意见，事实上两个或更多的DNS服务器是共同工作的，并不是第一台停止服务后，第二台才接替工作。解析器是随机选择一个DNS服务器进行询问，如果超时则会询问下一个，这是多个DNS的故障容错机制）。也可以实现包括负载均衡、防火墙和集群在内的更为复杂的故障转移机制。
一个域的所有DNS条目都会被添加到主域名服务器，从服务器只会根据主服务器上的SOA记录的序列号参数从主服务器同步所有信息。
此教程将会讲述**如何创建一台在CentOS上运行的主DNS服务器**。请注意，本教程中提到的DNS服务器将会是一台开放DNS服务器，这也就是说该服务器将会回应来自任何IP地址的查询。对于DNS服务器的访问控制将在[此教程](http://linux.cn/article-2969-1.html)中讨论（译注：开放的DNS服务器是一个安全隐患）。
![](/data/attachment/album/201405/26/151355uzrlxqrp5855qdxy.jpg)
在开始之前，我想要提一下的是，DNS可以在chroot环境中配置，也可以在非chroot环境中配置。chroot环境将DNS服务器限制在系统中某个特定目录中，以避免让服务器具有系统级的访问权限。在此环境中，任何DNS服务器的安全漏洞不会导致整个系统的破坏。将DNS服务器置于chroot环境中，对于部署测试也很有用。
### 目标
我们将在基于域名example.tst的测试环境中配置一台DNS服务器，这个域名是虚假的（并不真实存在的）。这样，我们就不会意外干扰到其它真实的域名。
在该域中，有以下三台服务器。
|  |  |  |  |
| --- | --- | --- | --- |
| 服务器 | IP地址 | 托管的服务 | 完全限定域名（FQDN） |
| Server A | 172.16.1.1 | Mail | mail.example.tst |
| Server B | 172.16.1.2 | Web, FTP | www.example.tstftp.example.tst |
| Server C | 172.16.1.3 | Primary DNS server | ns1.example.tst |
我们将会配置一台主域名服务器，并添加上表中必要的域和DNS记录。
### 设置主机名
所有的主机名必须以完全限定域名的方式正确定义，可以通过以下方法完成设置。
```
# vim /etc/sysconfig/network 
```
---
```
HOSTNAME=ns1.example.tst
```
注：该文件中指定的主机名参数在服务器启动后才会启用（译注：或者网络服务重启后），因此，该设置不会马上生效。下面的命令可以立刻临时性地修改主机名。
```
# hostname ns1.example.tst 
```
一旦设置，主机名可以通过以下命令验证。
```
# hostname   
ns1.example.tst
```
在进入下一步之前，请确保上述三台服务器上的主机名已经设置正确。
### 安装软件包
我们将使用bind来配置DNS服务，该软件可以很方便地通过yum来安装。
不使用chroot环境的：
```
# yum install bind bind-chroot 
```
使用chroot环境的：
```
# yum install bind bind-chroot 
```
### 准备配置文件
正如前面提到的，bind可以在chroot环境下配置，或者在非chroot环境下配置，配置文件的路径会因为是否安装chroot包而不同。
|  |  |  |
| --- | --- | --- |
|  | 配置文件路径 | 区域文件路径 |
| 不带有 chroot | /etc/ | /var/named/ |
| 带有 chroot | /var/named/chroot/etc/ | /var/named/chroot/var/named/ |
可以使用默认提供的named.conf配置文件，但是为了更方便使用，我们将使用另外一个简单的配置文件模板。
非chroot环境：
```
# cp /usr/share/doc/bind-9.8.2/sample/etc/named.rfc1912.zones /etc/named.conf
```
chroot环境：
```
# cp /usr/share/doc/bind-9.8.2/sample/etc/named.rfc1912.zones /var/named/chroot/etc/named.conf
```
现在来备份并修改配置文件。
非chroot环境：
```
# vim /etc/named.conf 
```
chroot环境：
```
# vim /var/named/chroot/etc/named.conf 
```
添加/修改以下行：
```
options {
## 区域文件存放目录 ##
directory "/var/named";
## 对于非本地权威域的请求转发到 Google 的公开 DNS 服务器 ##
forwarders { 8.8.8.8; };
};
## 申明一个本地域 example.tst ##
zone "example.tst" IN {
        type master;
        file "example-fz"; ## 存储文件名，放在 /var/named ##
        allow-update { none; };
};
## 为IP段 172.16.1.0 提供反向解析 ##
zone "1.16.172.in-addr.arpa" IN {
        type master;
        file "rz-172-16-1"; ## 存储文件名，放在 /var/named ##
        allow-update { none; };
};
```
### 准备区域文件
那些默认的区域文件会自动创建到/var/named 或者/var/named/chroot/var/named (chroot环境)。如果在这些地方找不到这些文件，/usr/share/doc/bind目录中提供了模板文件，可以从这里拷贝。
假设默认区域文件没有提供，我们可以从/usr拷贝模板文件。
非chroot环境：
```
# cp /usr/share/doc/bind-9.8.2/sample/var/named/named.* /var/named/
```
chroot环境：
```
# cp /usr/share/doc/bind-9.8.2/sample/var/named/named.* /var/named/chroot/var/named
```
很好！由于现在默认的区域文件已经准备好，我们可以为example.tst和172.16.1.0网络创建区域文件了，以下要点必须时刻谨记。
* 区域文件中的特殊字符‘@’意味着空。（译注：意即代表本域。）
* 所有的完全限定域名必须以点‘.’结束。如：example.tst.如果没有这个点，你会发生问题。（译注：即会被当做当前@所代表的域的子域。）
#### 1. 转发区域（本地权威域）
转发区域包含了名称到IP地址的映射。对于公开的域，域名托管提供商的DNS服务器存储了转发区域文件。（译注：转发区域即本地的权威域，由这个服务器自身提供权威的解析数据）
非chroot环境：