  Concurrency 
  (1/100) 
% 
  IO 
  Wait 
  vs. 
  Concurrency% 
  IO 
  Wait 
  vs. 
  Concurrency 
  (1/100) 
26 
	Dense 
  Searches % 
  CPU 
  U;l. 
  vs. 
  Concurrency 
  (1/100) 
% 
  IO 
  Wait 
  vs. 
  Concurrency 
  (1/100) 
27 
Dense 
  Searches 
  + 
  Indexing 
% 
  CPU 
  U;l. 
  vs. 
  Concurrency 
  (searching 
  1/100) 
Indexing 
  Thruput 
  vs. 
  Concurrency 
  (searching 
  1/100) 
Indexing 
  off 
Indexing 
  on 
Hijng 
  100%off 
Indexing 
  on 
Hijng 
  100% 
earlier 
|  | SpeedOfLight 1/100  |  |
|---|---|---|
|  |SpeedOfLight 1/100  | |
28 
Dense 
  Search 
  Test 
  Conclusions 
  Dense 
  workloads 
  are 
  CPU 
  bound 
  Dense 
  workloads 
  (repor;ng, 
  trending 
  etc.) 
  play 
  rela;vely 
  “okay” 	with 
  indexing 
	–While 
  indexing 
  throughput 
  decreases 
  by 
  ~40% 
  search 
  ;meby 
  ~40% 
  search 
  ;me 
  increases 	only 
  marginally 
  Faster 
  disk 
  wont 
  necessarily 
  help 
  as 
  much 
  here 
	–Majority 
  of 
  ;me 
  in 
  dense 
  searches 
  is 
  spent 
  in 
  CPU 
  decompressing 
  rawdata 	+ 
  other 
  SPL 
  processing 
  Faster 
  and 
  more 
  CPUs 
  would 
  have 
  improved 
  overall 
  performance 
29 
	Rare 
  Searches % 
  CPU29 
	Rare 
  Searches % 
  CPU 
  U;l. 
  vs. 
  Concurrency 
 1/M 
1/100M 
Reads/s 
  (sar) 
% 
  IO 
  Wait 
30 
	Rare 
  Searches % 
  CPU 
  U;l. 
  vs. 
  Concurrency 
 1/M 
1/100M 
Reads/s 
  (sar) 
% 
  IO 
  Wait 
CPU 
Bound 
31 
	Rare 
  Searches 
  + 
  Indexing % 
  CPU 
  U;l. 
  vs. 
  Concurrency 
 1/M 
1/100M 
Reads/s 
  (sar) 
% 
  IO 
  Wait 
32 
| More 
  numbers  |  | SpeedOfLight 1/1Mnumbers  |  | SpeedOfLight 1/1M 
1/100M  |
|---|---|---|
| Indexing    Thruput    (KB/s)    vs.    Concurrency  | |SpeedOfLight 1/1M  1/100M  |
| Indexing    Thruput    (KB/s)    vs.    Concurrency  | |SpeedOfLight 1/1M  1/100M  |
| Density  | 1/1M  | 1/1M  | 1/1M  | 1/100M  | 1/100M  | 1/100M  |
|---|---|---|---|---|---|---|
| Test    Type  |Indexing    off  |Indexing    on  |diff  |Indexing    off  |Indexing    on  |diff  || Avg    Search    Time  |1041s  |1806s  |+73.5%  |231s  |304s  |+31.6%  |
33 
Rare 
  Search 
  Conclusions 
  Rare 
  workloads 
  (inves;ga;ve, 
  ad-­‐hoc) 
  are 
  IO 
  bound 
  Rare 
  workloads 
  (high 
  IO 
  wait) 
  do 
  not 
  play 
  well 
  with 
  indexing 
	–Search 
  ;me 
  increases 
  significantly 
  when 
  indexing 
  is 
  on. 
  Also, 
  indexing 
  throughputAlso, 
  indexing 
  throughput 
  takes 
  an 
  equal 	hit 
  on 
  the 
  opposite 
  direc;on 
  1/100M 
  searches 
  have 
  a 
  lesser 
  impact 
  on 
  IO 
  than 
  1/1M 
  When 
  indexing 
  is 
  on, 
  in 
  1/1M 
  case 
  search 
  ;me 
  increases 
  more 
  substan;ally 
  vs. 	1/100M. 
  Search 
  and 
  indexing 
  are 
  both 
  conten;ng 
  for 
  IO 
  In 
  case 
  offor 
  IO 
  In 
  case 
  of 
  1/100M, 
  bloomfilters 
  save 
  precious 
  IO 
  which, 
  in 
  turn, 
  allows 
  for 
  a 
  beWer 	indexing 
  throughput 
	–Bloomfilters 
  are 
  special 
  data 
  structures 
  that 
  indicate 
  with 
  100% 
  certainty 
  that 
  a 
  term 
  does 
  not 	exist 
  in 
  a 
  bucket 
  (effec;vely 
  telling 
  the 
  search 
  process 
  to 
  skipsearch 
  process 
  to 
  skip 
  that 
  bucket). 
–Note 
  the 
  higher 
  CPU 
  consump;on 
  during 
  1/100M 
  searches 
  with 
  indexing 
  on 
  Faster 
  disks 
  would 
  have 
  definitely 
  helped 
  here 
  More 
  CPUs 
  would 
  not 
  have 
  improved 
  performance 
  by 
  much 
34 
Is 
  My 
  Search 
  CPU 
  or 
  IO 
  Bound? 
Guideline 
  in 
  absence 
  ofGuideline 
  in 
  absence 
  of 
  full 
  instrumenta;on 
  command.search.rawdata 
  ~ 
  CPU 
  Bound 
–Others: 
  .kv, 
  .typer, 
  .calcfields, 
  command.search.index 
  ~ 
  IO 
  Bound 
35 
| 	Top 
  Takeaways/Re-­‐Cap•Indexing 
	–Distribute 
  – 
  Splunk 
  scales 
  horizontally 
	–Tune 
  event 
  breaking 
  and 
  ;mestamp 
  extrac;on 
	–Faster 
  CPUs 
  will 
  help 
  withCPUs 
  will 
  help 
  with 
  indexing 
  performance 
•Searching 
	–Dense 
  Search 
  Workloads 
	êCPU 
  Bound, 
  beWer 
  with 
  indexing 
  than 
  rare 
  workloads  | 	Top 
  Takeaways/Re-­‐Cap•Indexing 
	–Distribute 
  – 
  Splunk 
  scales 
  horizontally 
	–Tune 
  event 
  breaking 
  and 
  ;mestamp 
  extrac;on 
	–Faster 
  CPUs 
  will 
  help 
  with 
  indexing 
  performancewith 
  indexing 
  performance 
•Searching 
	–Dense 
  Search 
  Workloads 
	êCPU 
  Bound, 
  beWer 
  with 
  indexing 
  than 
  rare 
  workloads  | CPU 
Term 
Density 
IO  |
|---|---|---|
| 	êFaster    and    more    CPUs    will    help  –Rare    Search    Workloads  	êIO    Bound,    not    that    great    with    indexing 	êBloomfilters    help    significantly  	êFaster    disks    will    help  |  |CPU  Term  Density  IO  || 	êFaster    and    more    CPUs    will    help  –Rare    Search    Workloads  	êIO    Bound,    not    that    great    with    indexing 	êBloomfilters    help    significantly  	êFaster    disks    will    help  |  |Helps  |
| 	êFaster    and    more    CPUs    will    help  –Rare    Search    Workloads  	êIO    Bound,    not    that    great    with    indexing 	êBloomfilters    help    significantly  	êFaster    disks    will    help  | |More    distribu;on Faster,    more    CPUs || •Performance  |  |More    distribu;on Faster,    more    CPUs |
| •Performance  |  |More    distribu;on Faster    Disks,    SSDs |
| –Avoid    generality,    op;mize    for    expected    case    and    add  |inves;ga;ve    type  |More    distribu;on Faster    Disks,    SSDs |
| hardware    whenever    you    can  |hardware    whenever    you    can  |More    distribu;on Faster    Disks,    SSDs |36 
Copyright 
  © 
  2014 
  Splunk 
  Inc. 
QUESTIONS? 
	You 
  may 
  also 
  like: Architec&ng 
  and 
  Sizing 
  Your 
  Splunk 
  Deployment 	Jiffy 
  Lube 
  Quick 
  Tune-­‐Up 
  for 
  Your 
  Environment 	Splunk 
  Monitoring 
  Console 
Tes;ng 
  Disclaimer 
  Reminder 
1. 
2. 
3. Tes;ng 
  conducted 
  on 
  arbitrary 
  datasets “Closed 
  course” 
  (lab) 
  environment 
Not 
  to(lab) 
  environment 
Not 
  to 
  be 
  interpreted 
  out 
  of 
  context 
38 
THANK 
  YOU 
feedback: 
  PI:EMAIL