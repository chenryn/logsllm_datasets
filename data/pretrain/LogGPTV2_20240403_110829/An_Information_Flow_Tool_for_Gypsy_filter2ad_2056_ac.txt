### 优化后的文本

#### 1. 初始定义与授权
我们定义一个操作，称为OP1。
授权使用范围仅限于：清华大学。下载时间：2021年3月25日7:08:41 UTC，来源为IEEE Xplore。使用受限。

#### 2. 代码示例与SRM表
```plaintext
A := B;
C := if D
then E
else F ;
```
在Kemmerer最初提出的方案中，所有与给定操作相关的信息流都记录在一个列中，这将导致如下SRM条目：

| 操作   | 资源 | 属性 |
|--------|------|------|
| A      | B    | M    |
| C      | D    | R    |
| C      | E    | R    |
| C      | F    | R    |

根据此SRM的自然解释，从B、D、E和F到A和C的信息流是存在的。然而，代码审查显示这不是真的，更合适的SRM应为：

| 操作   | 资源 | 属性 | OP1 | OP1 |
|--------|------|------|-----|-----|
| A      | B    | M    |     |     |
| C      | D    | R    |     |     |
| C      | E    | R    |     |     |
| C      | F    | R    |     |     |

#### 3. 守卫扩展
即使这个版本也可以进一步细化，因为它显示C总是包含E和F的信息，而实际上它只包含其中一个。为了反映这种细化，可以使用以下SRM扩展：

| 操作/守卫 | 资源 | 属性 | OP1 | OP1 | OP1 | OP1 |
|------------|------|------|-----|-----|-----|-----|
| G1         | 真    | M    |     |     |     |     |
| G2         | D    | R    |     |     |     |     |
| G3         | 非D  | R    |     |     |     |     |

Gypsy SRM工具提供了一个完整的SRM基本视图，其中复杂例程的多个信息流被组合成一列，但它计算了扩展形式。基于每个操作进行的信息流解释也显示了扩展列和守卫信息。

#### 4. GIFT工具
Gypsy SRM工具虽然成功，但其应用需要大量手动分析，即使是提供了说明材料，对于大型或复杂的系统仍然存在问题。因此，开发了Gypsy Information Flow Tool (GIFT)来帮助通过生成信息流公式来机械化分析过程。

#### 5. 其他隐蔽通道工具
基于信息流定理生成的几个隐蔽通道工具已经建立起来。最著名的是[10]和[27]中的旧SPECIAL工具和新SPECIAL工具。这些工具要求系统的状态机规范采用受限形式。对每个系统组件和系统操作调用者分配安全级别（通常是任意的）。对于系统内的每次信息传递，生成一个假设定理，如果该定理成立，则保证信息传递符合系统的安全策略。

这种方法过于保守，原因有：
1. 它孤立地考虑操作。通常情况下，没有方法可以利用某个例程的明显不安全性。
2. 对每个状态组件进行分类标签的要求导致某些组件标签不合适。在许多情况下，失败定理的数量取决于所使用的标签策略，并且需要大量努力来选择合适的标签。

如果能找到一种标签，使得没有失败定理，则模型没有隐蔽存储通道。失败定理并不一定表示可利用的通道，但确保这一点需要大量努力。大多数实际系统在应用此方法时会表现出相当数量的失败定理。

#### 6. 简化示例
上面讨论的SRM方法所用的代码片段不符合Gypsy隐蔽通道分析的约定。尽管如此，它仍可用于展示GIFT生成的公式类型。如果我们将其呈现为一组等效的受保护赋值语句，则变为：

```plaintext
if true then A := B;
if D then C := E;
if not D then C := F;
```

除了描述系统条件信息流的受保护赋值外，还需要知道每个系统实体A、B、C、D、E和F的安全级别。不失一般性，我们将为每个实体定义一个唯一的级别函数，而不指定所需的参数。我们将这些函数命名为Level_of_A(...)到Level_of_F(...)。从SRM和受保护赋值可以看出，信息无条件地从B流向A，当D=true时从E流向C，当D=false时从F流向C，以及无条件地从D流向C。这些流是安全的，当且仅当目标的安全级别等于或高于源的安全级别，并且满足流动条件。这产生了以下信息流公式：

- Level_of_A(...) ≥ Level_of_B(...)
- Level_of_C(...) ≥ Level_of_D(...)
- D => Level_of_C(...) ≥ Level_of_E(...)
- not D => Level_of_C(...) ≥ Level_of_F(...)

如果每个公式都能被证明，则该片段是安全的。

#### 7. 有趣的应用
SRM工具支持除隐蔽通道分析之外的其他分析。20世纪80年代末，CLI与TRW和TIS合作开发了一种用于构建高性能可信系统的进程模型。在项目的第二阶段，我们将该模型应用于多级安全窗口系统的设计。正式分析是主要的风险缓解策略之一，SRM工具在窗口架构设计中发挥了重要作用。我们正在讨论是否通过对X窗口参考实现施加TCB来尝试保护X窗口协议，还是采用更为激进的方法。隔间模式工作站(CMWs)采用了前者，但我们不确定我们的目标——TCSEC的B3级别能否通过这种方法满足。剪切和粘贴操作特别具有挑战性。我们在Gypsy中创建了ICCCM剪切和粘贴协议的模型，并使用SRM工具分析其信息流特性。分析确认了我们的直觉，即双向消息无法在MLS环境中支持。CMW项目通过宣布这些是隐蔽通道并接受行为来掩盖这一问题。最终，我们得出结论，X协议本质上在MLS意义上是不安全且不可保护的。这促使我们采取了一种新的架构方法。

#### 8. 资源列表
以下是资源列表及其属性：

| 资源 | 属性 | OP1 | OP1 |
|------|------|-----|-----|
| SIZE(STATE.ATOM LIST) | R | R | R |
| DOMAIN(STATE.ATOM LIST) | R | R | R |
| RANGE(STATE.ATOM LIST) | R | R | R |
| SIZE(STATE.ATOM LIST[IND#1]) | R | R | R |
| STATE.ATOM LIST[IND#1][IND#2] | R | R | R |
| SIZE(STATE.CLIENT LIST) | R | R | R |
| DOMAIN(STATE.CLIENT LIST) | R | R | R |
| RANGE(STATE.CLIENT LIST) | R | R | R |
| STATE.CLIENT LIST[IND#3].P | R | R | R |
| STATE.CLIENT LIST[IND#3].SL | R | R | R |
| STATE.CURRENTTIME | R | R | R |
| SIZE(STATE.PENDING EVENTS) | R | R | R |
| STATE.PENDING EVENTS[IND#4].BODY | R | R | R |
| STATE.PENDING EVENTS[IND#4].EV NAME | R | R | R |
| STATE.PENDING EVENTS[IND#4].ORIGINATOR | R | R | R |
| STATE.PENDING EVENTS[IND#4].RECIPIENT | R | R | R |
| STATE.REQUESTOR | R | R | R |
| STATE.REQUEST P | R | R | R |
| SIZE(STATE.SELECTION LIST) | R | R | R |
| DOMAIN(STATE.SELECTION LIST) | R | R | R |
| RANGE(STATE.SELECTION LIST) | R | R | R |
| STATE.SELECTION LIST[IND#5].OWNER | R | R | R |
| STATE.SELECTION LIST[IND#5].TIME | R | R | R |
| SIZE(STATE.WIN LIST) | R | R | R |
| DOMAIN(STATE.WIN LIST) | R | R | R |
| RANGE(STATE.WIN LIST) | R | R | R |
| STATE.WIN LIST[IND#6].OWNER | R | R | R |
| SIZE(STATE.WIN LIST[IND#6].PROPS) | R | R | R |
| DOMAIN(STATE.WIN LIST[IND#6].PROPS) | R | R | R |
| RANGE(STATE.WIN LIST[IND#6].PROPS) | R | R | R |
| SIZE(STATE.WIN LIST[IND#6].PROPS[IND#7].DATA) | R | R | R |
| STATE.WIN LIST[IND#6].PROPS[IND#7].DATA[IND#8] | R | R | R |
| STATE.WIN LIST[IND#6].PROPS[IND#7].FORMAT | R | R | R |
| STATE.WIN LIST[IND#6].PROPS[IND#7].TYPE VAL | R | R | R |
| USER-IN | R | R | R |
| USER-OUT | R | R | R |
| SETSEL | R | R | R |
| GETSEL | R | R | R |
| CONVRT | R | R | R |
| CHANGE | R | R | R |
| SENDEV | R | R | R |
| SELECT | R | R | R |
| SELECT | R | R | R |
| SELECT | R | R | R |
| #1 | R | R | R |
| #2 | R | R | R |
| #3 | R | R | R |
| #4 | R | R | R |
| #5 | R | R | R |
| #6 | R | R | R |
| #7 | R | R | R |
| #8 | R | R | R |