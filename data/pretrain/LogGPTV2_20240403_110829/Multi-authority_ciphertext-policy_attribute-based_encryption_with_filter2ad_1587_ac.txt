U={att1,att2,…,attn}  be  the  set  of  all  possible  attributes  in 
possible  values  for  atti  where  ni=|Si|.  Here  e  is  the 
The  proposed  algorithm  is  an  extension  of  the  algorithm 
proposed  in  [5]  for  a  single-authority  ABE  system.  We 
extend  the  same  to  include  the  support  for  a  typical  multi 
authority setup. One more advantage of proposed system is 
that  it  ensures  the  key  privacy  also  as  the  AAs  do  not 
require  the  user’s  private  key  to  add  the  attribute  values  – 
the same can be done using the public key of the user too. 
The proposed protocol is based on construction of [5], so as 
[5]  is  secure  thus  our  protocol  is  secure  under  the 
assumption that challenger plays role of CA and all AAs. 
B.  Multi authority ABE with constant ciphertext length 
The proposed scheme consists of 6 algorithms. 
Here  (cid:1852)(cid:3043) =  group  of  prime  order  p.  Assume 
universe.  Assume  Si={(cid:1874)(cid:3036),(cid:2869),(cid:1874)(cid:3036),(cid:2870),…,(cid:1874)(cid:3036),(cid:3041)(cid:3284)  }  be  the  set  of  all 
admissible bilinear map function. We assume that (cid:2009) and (cid:2009)(cid:4593) 
(cid:2009)(cid:3036),(cid:3037)(cid:3405)(cid:2009)(cid:3036),(cid:3037)(cid:4593)  and also (cid:2009)(cid:3036),(cid:3037) , (cid:2009)(cid:3036),(cid:3037)(cid:4593)∈(cid:1852)(cid:3043). 
bilinear group G0 of prime order p with generator (cid:1859). Then it 
will choose two exponents y,(cid:2010)∈R(cid:1852)(cid:3043). Here we assume that 
MPK=G0, (cid:1859), h=(cid:1859)(cid:3081), Y=(cid:1857) (cid:4666)(cid:1859),(cid:1859)(cid:4667)(cid:3052).  
MSK=( (cid:2010), (cid:1877)) 
SK for attribute i. It selects exponent (cid:2009)(cid:3036).(cid:3037)∈R(cid:1852)(cid:3043). 
 (cid:1862)∈(cid:4670)1,(cid:1866)(cid:3036)(cid:4671)(cid:1842)(cid:1837)(cid:3036),(cid:3037)=(cid:1859)(cid:3080)(cid:3284),(cid:3285) 
(cid:1845)(cid:1837)(cid:3036),(cid:3037)= (cid:2009)(cid:3036),(cid:3037) 
The algorithm chooses (cid:1870)∈R (cid:1852)(cid:3043).  
SK = (cid:1859)(cid:4666)(cid:3052)(cid:2878)(cid:3045)(cid:4667)/(cid:3081) ,  
PK = (cid:1859)(cid:3045) 
L = (cid:1486)  
KeyGen(MSK,u) : This algorithm run by CA to create the 
SK  for  user  u.  L  is  the  list  of  attributes  that  user  has,  so 
initially it is empty. 
AAi  setup:  This  algorithm  run  by  AA  to  generate  PK  and 
MPK is available to all algorithms. 
Setup:  This  algorithm  run  by  CA  and  it  will  choose  a 
RequestAttributeSK(PK,u,SKi)  :  This  algorithm  run  by 
AA consist of attribute i and it takes identity of user, public 
key of user and as an output it adds the attribute i in user u’s 
secret  key.  Note  that  the  AA  adds  the  attribute  i  in  user’s 
secret key without using the SK of user, so this will prevent 
the attack of malicious AA. The AA adds the attribute i to 
the list L of user.  
Dx=(cid:4666)(cid:1859)(cid:3045)(cid:4667)(cid:3080)(cid:3284),(cid:3285) and L = L + (cid:1874)(cid:3036),(cid:3037) 
exponent s∈R(cid:1852)(cid:3043). 
C3= (∏ (cid:1859)(cid:3080)(cid:3284),(cid:3285)
C4= ((cid:1860)(cid:4667)s  =(cid:1859)(cid:3081)(cid:3046)  
(cid:3047)∈(cid:3024)
C1=M Ys 
C2=gs 
) s 
CT=C1, C2, C3,C4 
Encrypt(M,W,PK1,PK2,…,PKN) : This encryption takes as 
input message M, access formula W and the required public 
keys of authorities for which sender uses the attributes in W. 
The CT (Ciphertext) will calculate as follows. Sender selects 
=         C1 e(gr,C2) e(C3,gr)   
AS,  user  just  multiplies  all  the  related  values,  which  were 
given in the secret key. 
Decrypt(SK,CT)  :    The  decryption  algorithm  takes  SK  of 
user  and  ciphertext  CT  as  input  and  return  message  M  if 
attributes  in  SK  satisfy  the  access  policy  of  CT  otherwise 
NULL. Assume AS ⊆ L and AS = W. After identifying the 
        e(C4, (cid:1859)(cid:4666)(cid:3052)(cid:2878)(cid:3045)(cid:4667)/(cid:3081))     e(C2 , (∏
(cid:3047)∈(cid:3002)(cid:3020)
 and q=∑
Here p=∑
=  M e(g,g)y s e(g,g)r s e(g,g)r s p 
          e(gs,gy+r) e(gs,gr  q) 
=   M  
(cid:1859)(cid:3080)(cid:3295)(cid:2878) (cid:3049)(cid:3032)(cid:3045)(cid:3295)
(cid:2009)(cid:3036),(cid:3037)
(cid:2009)(cid:3036),(cid:3037)
(cid:3049)(cid:3284),(cid:3285)∈(cid:3002)(cid:3020)
(cid:3049)(cid:3284),(cid:3285)∈(cid:3024)
) r ) 
for 
responsible 
the  user  and 
The  proposed  algorithm  deals  with  the  constant  length 
ciphertext  in  a  typical  multi-authority  ABE  system.  Under 
the  assumption  that  the  attributes  in  a  policy  must  be  a 
subset of attributes in user’s secret key, and that there is a 
trusted  CA 
the  key 
management,  our  algorithm  ensures  constant 
length 
ciphertext. The proposed approach is also collusion resistant 
because no two users have the same r values for their key as 
we  show  earlier.  In  addition,  if  one  of  the  AA  is 
compromised then also the scheme is safe due to the distinct 
keys of the users under one AA. The only way the scheme 
can  be  compromised  is  if  the  AAs  and  the  CA  collude  – 
which a very remote possibility is.  
Construction of secret keys (cid:2009)(cid:2191),(cid:2192) 
(cid:3405)∑
Here  we  assume  that ∑
(cid:2009)(cid:3036),(cid:3037)
(cid:2009)(cid:3036),(cid:3037)
and  AS  ⊆  L’ 
exists  AS  ⊆  L 
(cid:3049)(cid:3284),(cid:3285)∈(cid:3002)(cid:3020)(cid:4594)
(cid:3049)(cid:3284),(cid:3285)∈(cid:3002)(cid:3020)
=∑
∑
 than L’ can decrypt W, where L’(cid:1644) 
(cid:2009)(cid:3036),(cid:3037)
(cid:2009)(cid:3036),(cid:3037)
W and L (cid:1639) W. This assumption holds with given probability 
(cid:3049)(cid:3284),(cid:3285)∈(cid:3002)(cid:3020)(cid:4594)
(cid:3049)(cid:3284),(cid:3285)∈(cid:3002)(cid:3020)
where N= ∏ (cid:1866)(cid:3036)
(cid:3041)(cid:3036)(cid:2880)(cid:2869)
 = (cid:4666)1(cid:3398) (cid:3015)(cid:2879)(cid:2869)(cid:3043) (cid:4667)(cid:3015)>  (1- (cid:3015)(cid:4666)(cid:3015)(cid:2879)(cid:2869)(cid:4667)(cid:3043)
(cid:3408)(cid:4666)(cid:3043)(cid:2879)(cid:4666)(cid:3015)(cid:2879)(cid:2869)(cid:4667)(cid:4667)(cid:3263)
 (cid:4667)> 
(cid:3043)(cid:4666)(cid:3043)(cid:2879)(cid:2869)(cid:4667)…(cid:4666)(cid:3043)(cid:2879)(cid:4666)(cid:3015)(cid:2879)(cid:2869)(cid:4667)(cid:4667)
(1- (cid:3015)(cid:3118)(cid:3043) (cid:4667). 
(cid:3043)(cid:3263)
(cid:3043)(cid:3263)
.  If  there 
that 
such 
 . 
International Conference on Computer & Communication Technology (ICCCT)-20114541)  Security Analysis 
 otherwise. 
generator for group G so 
Now  A gives the challenge access structure W* to  X. Let 
Z = e((cid:1859), (cid:1859))abc if (cid:2033) = 0 
   = e((cid:1859), (cid:1859))z    otherwise 
Here we assume that CA and all the attribute authorities are 
combined. 
Theorem 1: The proposed multi-authority CP-ABE scheme 
satisfies  the  indistinguishability  of  messages  under  the 
DBDH assumption. 
Proof: Assume that the adversary A wins the selective game 
can  construct  simulator  X  that  will  break  the  DBDH 
which is number of access structure. The DBDH challenger 
for  multi  authority  CP-ABE  with  the  advantage (cid:2035).  So  we 
assumption  with  advantage (cid:3106)(cid:2870)  (1-(cid:3015)(cid:3118)(cid:3043) )  where  N= ∏ (cid:1866)(cid:3036)
(cid:3041)(cid:3036)(cid:2880)(cid:2869)
generates  a,b,c,z∈R(cid:1852)(cid:3043), (cid:2033)∈R  {0,1}  and (cid:1859),  where (cid:1859) is  the 
The DBDH challenger gives ((cid:1859), (cid:1859)a, (cid:1859)b, (cid:1859)c,Z)∈G (cid:3400) G1 to X. 
W*=[W1*,W2*,…,Wk*].  X  selects  u ∈R(cid:1852)(cid:3043) and  sets  h=(cid:1859)u 
and  Y=e((cid:1859) a, (cid:1859) b)=e((cid:1859) ,(cid:1859) )ab.  For (cid:2009)(cid:3036),(cid:3037)(cid:4593)
 {i ∈  [1,n],  j ∈ 
[1,(cid:1866)(cid:3036) ]} ∈R(cid:1852)(cid:3043) X  computes  private  keys (cid:2009)(cid:3036),(cid:3037) {i ∈ [1,n],  j ∈ 
[1,(cid:1866)(cid:3036) ]}  and  public  keys (cid:1846)(cid:3036),(cid:3037)(cid:4668)(cid:1861)∈(cid:4670)1,(cid:1866)(cid:4671),(cid:1862)∈(cid:4670)1,(cid:1866)(cid:3036)(cid:4671)(cid:4669)  as 
follows. (cid:2009)(cid:3036),(cid:3037)  = (cid:2009)(cid:3036),(cid:3037)(cid:4593) if((cid:1874)(cid:3036),(cid:3037) = (cid:1849)(cid:3036)(cid:1499)) 
       = b (cid:2009)(cid:3036),(cid:3037)(cid:4593)   otherwise 
if((cid:1874)(cid:3036),(cid:3037)(cid:3404)(cid:1849)(cid:3036)(cid:1499)) 
(cid:1846)(cid:3036),(cid:3037) = (cid:1859)(cid:3080)(cid:3284),(cid:3285)(cid:4594)
      =  (cid:4666)(cid:1859)(cid:2912)(cid:4667)(cid:3080)(cid:3284),(cid:3285)(cid:4594)
X  gives  MPK=(e, (cid:1859),h,Y,(cid:1846)(cid:3036),(cid:3037) {i ∈ [1,n],  j ∈ [1,(cid:1866)(cid:3036)]}  )  to  A. 
For  Extract  query  L  there  exists (cid:1874)(cid:3036),(cid:3037)  =  Li  and (cid:1874)(cid:3036),(cid:3037)(cid:3405) W* 
because  L (cid:3405) W*.  So  we  can  write ∑
(cid:2009)(cid:3036),(cid:3037)
where  X1,  X2 ∈(cid:1852)(cid:3043).  Here  X1  and  X2can  be  represented  as 
(cid:3049)(cid:3284),(cid:3285) ∈ L
sum  of (cid:2009)(cid:3036),(cid:3037)(cid:4593)
selects (cid:2010)∈R(cid:1852)(cid:3043) and set r =(cid:3081)(cid:2879)(cid:3048)(cid:3028)(cid:3025)(cid:2870)  and compute SKL as follows 