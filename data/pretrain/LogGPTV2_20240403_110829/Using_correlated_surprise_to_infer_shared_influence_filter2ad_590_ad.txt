of an extremum on the delay axis. 
100-200 
learn from the location 
Here, we see that it occurs at a delay of, roughly, 
the delay is 
interval, 
samples (at a 0.04-second sampling 
at the 
around 4-8 seconds). 
* LASER1)(t), 
result of computing (PLANNER_TRAJ 
so the 
on P LANNER_TRAJ tend to 
interpretation 
occur between 4-8 seconds after those on LASERl. More 
is the direction: 
important 
anomalies. 
anomalies 
When 
isolating 
5.1, this turns out to 
be an important 
than the value, however, 
precede the planner 
piece of information. 
the bug mentioned 
is that anomalies 
in Section 
software 
the laser 
vertex. 
arrow originating 
from every 
at a box indi­
SIG from the 
a similar 
at every enclosed 
arrow in Stanley'S 
that each laser component 
with each planning 
the directed 
LASER* to the box containing 
from a box denotes 
vertex inside the box; an arrow terminating 
cates such an arrow terminating 
Consequently, 
box containing 
indicates 
influence 
plain the SWERVE component, 
Section 
stated dependencies,  meaning 
obscured 
software component. 
We ex­
in 
do not map to 
diagram has 
that the SIG reveals. 
diagram indicate 
rather than functional 
The edges in the dependency 
5.6. Most of the strongest 
interactions 
the dependency 
influences 
patterns, 
important 
plotted 
P LANNER* 
intended 
dependen­
as a red rectangle, 
shares a time-delayed 
communication 
cies. In fact, Stanley 
broke shortly 
were clearly 
they continued 
would it affect the behavior 
diagram is unhelpful, 
query a SIG to elucidate 
of the vehicle? 
The dependency 
but in Section 
5.6 we show how to 
By using 
window 
Even in an offline context, 
this kind of influence. 
SIGs are dynamic. 
relative 
particular 
a series of such 
of influence 
we can consider 
Furthermore, 
during the second race mission, 
to examine changes over time. A SIG for Junior 
in Figure 12. Dashed grey means the 
edges are new, and an open arrowhead 
only a subset of the data, such as from a particular 
of time, we can see the structure 
to 
that period. 
periods 
showing influence 
to the first is plotted 
edge is gone, thicker 
means the arrow changed. 
omitted. 
as training 
the first and second thirds of the Urban Challenge 
"missions"), 
ture. Notice that many components 
of 
SIG, and thus omitted 
from the plots, 
the value of c. As this parameter 
as 
it tends to zero, the graph becomes fully connected. 
are 
models use the entire 
log 
this graph using only data from 
with edges marked to denote changes in struc­
are disconnected 
in this 
as a consequence 
data, we generate 
Disconnected 
the component 
edges vanish; 
components 
increases, 
Although 
(called 
One change that stands out is the new influence 
RADARS and P ASSALEXTOUTP UT2. Further 
tion of the data shows several 
ponents; 
a lower value of c would have shown the radars in 
anomalies 
at the radar com­
between 
examina­
5.5 SIGs 
Using the method described 
in Section 
3.4, we distill 
the 
into SIGs. We compute a statisti­
similar 
matrices 
to Section 
for space reasons). 
for Stanley, 
omitted 
cross-correlation 
cal baseline 
0.15 (details 
with c =  0.15 and a  =  90 is  shown 
ure I I, alongside 
notational 
grey boxes around sets of vertices. 
shorthand 
the software dependency 
to reduce graph clutter, 
For Stanley, 
a SIG 
on the right in Fig­
diagram. 
As a 
4.4, of just under 
we introduce 
An arrow originating 
978-1-4244-7501-8/101$26.00 
©2010 IEEE 
198 
DSN 2010: Oliner et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:06:05 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
Now there are six components 
that seem to be related 
two observations 
arrows from the 
(i) directed 
mean that the laser anomalies 
and (ii) the four lasers 
form 
but the SIG highlights 
to the planner 
the planner 
indicating 
to the swerving, 
that narrow it down further: 
software 
lasers 
preceded 
anomalies 
a clique, 
that there may be another 
influencing 
discussion 
the SIG and Figure 10 confirmed that the planner 
lagged behind the lasers' 
by several 
Observation 
(ii) suggests 
rather than the lasers 
lasers, 
them all, that we are not modeling. 
in Section 
misbehavior 
that a component 
themselves, 
3.5.) Observation 
component, 
(Recall 
the 
from 
(i) is evident 
shared by the 
may be at fault. 
typically 
seconds. 
Figure 12. Dynamic changes in Junior's 
with c =  0.15 and 0: =  90. 
SIG, 
the most 
but RADARS exhibited 
a clique, 
Many of the edges that disappeared 
lies during the first mission 
Studying 
us to discover 
structure 
such dynamic behaviors. 
changes in influence 
did not manifest 
pronounced 
did so because anoma­
effect. 
in the second. 
over time enables 
physical 
we happened 
connectivity 
For the vehicles, 
does not change 
of which 
to observe during that period. If 
during a race, so any changes are a consequence 
influences 
we only had access to the latter 
logs, for instance, 
agnose the swerving 
behavior 
to observe. 
riods, 
physical 
bug because there was little 
For larger systems 
changes in the SIG may correspond 
and longer time pe­
or 
it would have been more difficult 
modifications. 
with upgrades 
to di­
half of the Grand Challenge 
swerving 
According 
to the Stanford 
Racing Team, these observa­
to quickly 
diagrams, 
of how a dependency 
bug. At the time, without 
diagnose 
the 
access to a SIG and 
it took them two 
diagram is used: start at 
near the bottom of the graph, verify that 
tions would have been sufficient 
swerving 
working from the dependency 
months to chase down the root cause. This is a natural 
consequence 
some component 
the code is correct, 
All of the software was working correctly, 
til they realized 
opposite 
making a diagnosis. 
pass the rest of the system and look at some component 
shared by the lasers, 
move up to the parent(s), 
however, 
and un­
at the input end (the 
success 
The SIG would have told them to by­
end from the swerving) 
which was the true cause. 
there were anomalies 
there was little 
and repeat. 
in 
5.6 Swerving Bug 
Starting 
only with the logs from the Grand Challenge 
that Stanley 
race and the knowledge 
havior between Miles 22 and 35, we show how a simple 
application 
components. 
of our method points directly 
exhibited 
strange 
be­
at the responsible 
a synthetic 
was observed. 
the time the majority 
First, we construct 
component called 
SWERVE, whose anomaly signal is nonzero only for a single 
period that includes 
of surprising 
havior (swerving) 
We could refine this signal 
to indicate 
but the surprising 
ification 
implicate 
when the bug manifested 
is that, even with this sloppy spec­
method is still able to 
of the bug, our statistical 
the source of the problem. 
Second, we update Stanley's 
SIG as though SWERVE 
more precisely 
result 
be­
itself, 
component. 
is the graph on the 
The result 
the correlation 
values for the 
with which SWERVE seems to share an 
were just another 
right in Figure 11. Consider 
seven components 
influence: 
components, 
software 
all four laser sensors, 
the two planning 
sensor. 
The temperature  sensor 
is actually 
and the temperature 
SWERVE. This spurious  correlation 
our sloppy synthetic 
SWERVE anomaly signal is (carelessly) 
the beginning 
turns out, is increasing 
over the course of the race. 
with 
is the price we pay for 
it occurs because the 
only near 
of the race while the TEMP anomaly signal, 
anomaly signal; 
non-zero 
it 
anti-correlated 
The bug, which turned out to be a non-deterministic, 
im­
However, the 
triggered 
by a buffer shared by the 
timing dependency 
our method provides 
is still not fully understood. 
was sufficient 
Indeed, 
SIG, Figure 12, where the lasers 
plicit 
laser sensors, 
for the Racing 
formation 
this is evident 
Team to avoid these issues in Junior. 
are not influ­
from Junior's 
encing the rest of the system as they were in Stanley. 
More 
information 
paper concerning Stanley [21]. 
bug can be found in the journal 
on the swerving 
in­
6 Thunderbird 
Supercomputer 
We briefly describe 
the use of SIGs to localize 
a non­
system (the Thun­
supercomputer 
bug in a non-embedded 
performance 
derbird 
(n =  9024) using a component 
quency of terms in log messages 
cept for the different 
use of the SIGs is identical 
we focus only on the new aspects 
[16]) of significantly 
model based on the fre­
of timing. 
Ex­
and 
5; 
to the case study in Section 
anomaly signal, 
of this study. 
[15] instead 
larger scale 
the construction 
Say that Thunderbird's  administrator 
notices that a 
message and would 
the following 
it: kernel:  Losing some 
particular 
node generates 
like to better understand 
ticks... checking if CPU frequency 
changed. For tightly 
bird, static 
dependency 
edges; meanwhile, 
the logs do not contain 
integrated 
diagrams 
are dense with irrelevant 
the information 
systems like Thunder­
978-1-4244-7501-8/10/$26.00 
©2010 IEEE 
199 
DSN 2010: Oliner et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:06:05 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
about component 
necessary 
Instead, 
or communication 
dynamic dependencies. 
of our SIG 
we show how a simple application 
interactions 
for computing 
patterns 
about the bug. Using the model 
above [15], which in­
knowledge, 
we first compute 
method leads to insight 
based on term frequency mentioned 
no system-specific 
corporates 
anomaly signals 
swerving 
another 
it generates 
bug (see Section 
this "CPU error". 
SIG contains 
The resulting 
for all components. 
As with Stanley's 
5.1), we can easily synthesize 
anomaly signal for each node, nonzero only when 
Furthermore, 
clusters 
of components 
fact: when one 
(both 
corre­
other nodes tend to generate 
and normal) 
can quickly 
the CPU error, 
see that these clusters 
that yield a surprising 
suggesting 
the bug. Indeed, 
groups, 
may be triggering 
synthetic 
node generates 
both the CPU error and other rare messages. 
the administrator 
spond to job scheduling 
workload 
that there was a bug in the Linux kernel that would cause 
it to skip interrupts 
the kernel to erroneously 
had changed and to generate 
SIG method shows immediately 
fluence with other nodes in the same job scheduling 
an insight 
that helps both isolate 
avenues of investigation. 
CPU error. 
The 
that the error shares an in­
group; 
the cause and rule out other 
leading 
that the clock frequency 
under heavy network activity, 
the misleading 
believe 
it turns out 
that a particular 
7 Contributions 
[2]  P. 
Bahl, R. Chandra, A. Greenberg, 
and M. Zhang. Towards highly reliable 
services 
COMM, 2007. 
of multi-level 
via inference 
[3] P. Barham, A. Donnelly, R. Isaacs, 
S .  Kandula, D.  A. Maltz, 
enterprise network 
dependencies. In SIG­
and R.  Mortier. 
and workload modelling. In 
Using 
Magpie for request extraction 
OSDI,2004. 
[4] P. C. Bates. Debugging heterogeneous 
using event-based 
on Computer Systems, 1 3( 1 ) :1 -3 1 ,  1 995. 
models of behavior. 
distributed systems 
ACM Transactions 
[5] M. Brodie, I. Rish, and S .  Ma. Optimizing probe selection 
Sys­
for fault localization. In IntI. Workshop on Distributed 
tems: Operations and Management (DSOM), October 200 1 .  
[6] A .  Brown, G .  Kar, and A .  Keller. An active approach to char­
acterizing  dynamic  dependencies  for 
in a distributed environment. 
Seattle, 
problem determination 
In IEEE 1M, pages 377-390, 
WA , 200 1 .  
[7] M .  Y. Chen, A .  Accardi, E .  Kiciman, J .  Lloyd, D .  Patterson, 
A. Fox, and E. Brewer. Path-based failure and evolution 
management. 
In NSDI, 2004. 
[8]  M. Y. Chen, E. Kiciman, E. Fratkin, 
A. Fox, and E. Brewer. 
Pinpoint: 
services. In DSN, June 2002. 
problem determination in large, dynamic internet 
[9]  S. Chutani and H. Nussbaumer. On the distributed 
fault 
diagnosis of computer networks. In IEEE Symposium on 
Computers and Communications, 
Egypt, June 1 995. 
pages 7 1 -77, Alexandria, 
[ 1 0] I. Cohen, S .  Zhang, M .  Goldszmidt, J. Symons, T. Kelly, 
and A. Fox. Capturing, indexing, clustering, and retrieving 
system history. In SOSP, 2005. 
[ 1 1 ]  S .  Kandula, D. Katabi, and J.-P. Vasseur. Shrink: A tool for 
failure diagnosis in  IP networks. In MineNet Workshop at 
SIGCOMM, 2005. 
IP fault localization 
70,2005. 
via risk modeling. In NSDI, pages 57-
[ 1 3 ]  S .  Kullback. 
Statistician, 
The Kullback-Leibler 
4 1 :  340-341, 1 987. 
distance. The American 
[ 1 4] M. Montemerlo et al. Junior: The Stanford entry in the Ur­
ban Challenge. 
2008. 
Journal of Field Robotics, 
25(9):569-597, 
[ 1 5] A.  J. Oliner, A. Aiken, and J. Stearley. 
Alert detection 
in 
system logs.  In 
ICDM, December 2008. 
[ 1 6] A.  J. Oliner and J. Stearley. 
What supercomputers 
say: A 
study of five system logs. In DSN, 2007. 
[ 17] P. Reynolds, C. Killian, 
J. L. Wiener,  J.  C. 
Mogul, M. A. 
in dis­
the unexpected 
Shah, and A. Vahdat. Pip: Detecting 
tributed 
systems. In NSDI, 2006. 
[ 1 8] P. Reynolds, J. L. Wiener, J. C. Mogul, M .  K. Aguilera, 
and 
debugging for 
performance 
A. Vahdat. WA P5: black-box 
wide-area systems. In WWW, 2006. 
[ 1 9] I. Rish, M. Brodie, N. Odintsova, 
S .  Ma, and G. Grabarnik. 
Real-time 
ing active probing. In NOMS, 2004. 
problem determination in distributed 
systems us­
[20] H. A. Sturges. The choice of a class interval. 
1. American 
Statistical 
Association
, 1 926. 
[21 ]  S. Thrun and M .  Montemerlo, 
et al. Stanley: The robot 
that won the DARPA Grand Challenge. Journal of Field 
Robotics, 
23(9): 66 1 -692, June 2006. 
among components 
in a system and present 
[ 1 2] R. R. Kompella, J. Yates, A. Greenberg, 
and A. C. Snoeren. 
In this paper, we propose using influence to characterize 
noise-robust 
the interactions 
a method for constructing 
(SIGs) that model the strength 
fluence. We abstract 
enables 
Our simulation 
tonomous vehicles 
the benefits of using influence 
cies and demonstrate 
can equip users to better 
components 
modeling 
experiments 
identify 
and a production 
supercomputer 
dependen­
over traditional 
show 
how an understanding 
the sources 
of influences 
of problems. 
Structure-of-Influence 
Graphs 
and temporal 
of in­
ordering 
as anomaly signals, 
which 
of heterogeneous 
systems. 
and case studies 
with two au­
Acknowledgments 
The authors 
would like to thank the following 
people for 
their time, expertise, 
ter Hawkins, 
Randall 
rest of the Stanford 
and data: Xuan V ii, Jon Stearley, 
LaViolette, 
Pe­
Mike Montemerlo 
and the 
Racing Team, and our reviewers. 
References 
[ 1 ]  M. K. Aguilera, 
J.  C. Mogul, J. L. Wiener, P. Reynolds, and 
A. Methitacharoen. 
systems of black boxes. In SOSP, pages 74-89,2003. 
Performance 
debugging for distributed 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
200 
DSN 2010: OIiner et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:06:05 UTC from IEEE Xplore.  Restrictions apply.