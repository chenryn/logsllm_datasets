# Fastjson 。
跟进源码分析了safemode模式底层实现原理，当Fastjson解析到Json串中出现了“@type”键后会统一进入反序列化解析流程，从value中获取需反序列化的类名，经过ParserConfig#checkAutoType检查函数校验。并根据是否开启autotype使用不同先后顺序的黑白名单做类名检查。引入safemode模式后在执行后续反序列化过程前做了一次判断，当开启safemode时，由于布尔类型变量为true，对于传入的任意类名直接抛出异常，从而不进行后续的反序列化流程。Safemode可以说是等价于一个是否开启反序列化功能的总开关，开启后则禁用了反序列化功能。其中核心实现代码如下所示：
开启safeMode模式后，依靠移除反序列化功能，从而保障不会遭受反序列化漏洞危害所造成的影响。理论上不用因为日后所爆发的反序列化漏洞原因而不断升级至新版本。
## 四、Reference
  1. 
  2. 