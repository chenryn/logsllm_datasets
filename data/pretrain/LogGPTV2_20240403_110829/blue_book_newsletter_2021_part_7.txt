* Correction: Add the insights of a nagios power user.
    * Update open source and community analysis with nagios exchange.
    * Correct nagios community analysis with its trajectory
    * Correct the analysis of the high availability of nagios
    * Add the option to host the script exporter in a dedicated server
### [Prometheus Install](prometheus_installation.md)
* Correction: Add warning that helm 2 support is dropped.
    If you want to use the helm chart above 11.1.7 you need to use helm 3.
* Improvement: [Add upgrading notes from 10.x -> 11.1.7.](prometheus_installation.md#upgrading-notes)
    !!! warning "Don't upgrade to 12.x if you're still using Helm 2."
### [Elasticsearch Exporter](elasticsearch_exporter.md)
* New: Introduce the prometheus elasticsearch exporter.
    The [elasticsearch exporter](https://github.com/prometheus-community/elasticsearch_exporter) allows
    monitoring [Elasticsearch](elasticsearch.md) clusters with [Prometheus](prometheus.md).
    Explain how to install it, configure the grafana dashboards and the
    alerts.
* Improvement: Add more elasticsearch alerts.
    Measure the search latency, search rate and create alerts on the garbage
    collector, json parser and circuit breaker errors
* New: Add alert on low number of healthy master nodes.
## [Scrum](scrum.md)
* New: Introduce the scrum framework.
    [Scrum](https://en.wikipedia.org/wiki/Scrum_%28software_development%29) is an
    [agile](https://en.wikipedia.org/wiki/Agile_software_development) framework for
    developing, delivering, and sustaining complex products, with an initial
    emphasis on software development, although it has been used in other fields such
    as personal task management.  It is designed for teams of ten or fewer members,
    who break their work into goals that can be completed within time-boxed
    iterations, called sprints, no longer than one month and most commonly two
    weeks. The Scrum Team track progress in 15-minute time-boxed daily meetings,
    called daily scrums. At the end of the sprint, the team holds sprint review, to
    demonstrate the work done, a sprint retrospective to improve continuously, and
    a sprint planning to prepare next sprint's tasks.
    In the article I explain:
    * I use to do [the meetings](scrum.md#the-meetings): [Daily](scrum.md#daily-meetings), [Refinement](scrum.md#refinement-meetings), [Retros](scrum.md#retro-meetings), [Reviews](scrum.md#review-meetings) and [Plannings](scrum.md#planning-meetings).
    * The relevant [roles](scrum.md#the-roles).
    * Some [definitions](scrum.md#definitions), such as definition of done
      and definition of ready.
# Software Architecture
## [Domain Driven Design](domain_driven_design.md)
* Improvement: Add warning when migrating old code.
    You may be tempted to migrate all your old code to this architecture once
    you fall in love with it. Truth being told, it's the best way to learn how to
    use it, but it's time expensive too! [The last
    refactor](https://github.com/lyz-code/clinv/pull/40) I did required a
    change of 60% of the code. The upside is that I reduced the total lines of
    code a 25%.
## [Architecture Decision Record](adr.md)
* New: Introduce the Architecture Decision Records.
    [ADR](https://github.com/joelparkerhenderson/architecture_decision_record) are
    short text documents that captures an important architectural decision made
    along with its context and consequences.
* New: [Update the ADR template with the week learnings.](adr.md#adr-template)
    * Add the Proposals and Date sections
    * Explain the possible Status states.
    * Add an [Ultisnip](https://github.com/SirVer/ultisnips) vim snippet.
    * Explain how I've used it to create [mkdocs-newsletter](https://github.com/lyz-code/mkdocs-newsletter).
* Improvement: Explain how to show relationship between ADRs.
    Suggest a [mermaidjs](mermaidjs.md) diagram to show the state of the
    project ADRs.
# Operative Systems
## [Linux](tahoe.md)
* New: Introduce Tahoe-LAFS.
    [Tahoe-LAFS](https://en.wikipedia.org/wiki/Tahoe-LAFS) is a free and open,
    secure, decentralized, fault-tolerant, distributed data store and distributed
    file system.
    Tahoe-LAFS is a system that helps you to store files. You run a client program
    on your computer, which talks to one or more storage servers on other computers.
    When you tell your client to store a file, it will encrypt that file, encode it
    into multiple pieces, then spread those pieces out among multiple servers. The
    pieces are all encrypted and protected against modifications. Later, when you
    ask your client to retrieve the file, it will find the necessary pieces, make
    sure they haven’t been corrupted, reassemble them, and decrypt the result.
### [Linux Snippets](linux_snippets.md)
* New: [Explain how to split a file into many with equal number of lines.](linux_snippets.md#split-a-file-into-many-with-equal-number-of-lines)
    ```bash
    split -l 200000 filename
    ```
* New: [Explain how to identify what a string or file contains.](linux_snippets.md#identify-what-a-string-or-file-contains)
    Using [pywhat](https://github.com/bee-san/pyWhat)
* New: [Explain how to allocate space for a virtual filesystem.](linux_snippets.md#allocate-space-for-a-virtual-filesystem)
    ```bash
    fallocate -l 20G /path/to/file
    ```
* New: [Document how to bypass client SSL certificate with a cli tool.](linux_snippets.md#bypass-client-ssl-certificate-with-cli-tool)
    Websites that require clients to authorize with an TLS certificate are difficult
    to interact with through command line tools that don't support this feature.
    To solve it, we can use a transparent proxy that does the exchange for us.
### [afew](vim_tabs.md)
* New: Explain how to use tabs, buffers and windows in vim.
* New: Introduce afew.
    [afew](https://github.com/afewmail/afew) is an [initial tagging
    script](http://notmuchmail.org/initial_tagging/) for [notmuch
    mail](notmuch.md).
    Its basic task is to provide automatic tagging each time new mail is registered
    with `notmuch`. In a classic setup, you might call it after `notmuch new` in an
    offlineimap post sync hook.
### [alot](vim_plugins.md)
* New: [Follow the issue to add elipsis instead of ... in vim-abolish.](vim_plugins.md#issues)
* Correction: Forget to use abolish to insert the elipsis symbol.
    Tpope said that it's not going to happen.
* New: Introduce vim-easymotion.
    EasyMotion provides a much simpler way to use some motions in vim. It takes the
    `` out of `w` or `f{char}` by highlighting all possible
    choices and allowing you to press one key to jump directly to the target.
    When one of the available motions is triggered, all visible text preceding or
    following the cursor is faded, and motion targets are highlighted.
* Reorganization: Move vim-test to the plugins page.
* Correction: Typo.
    There was a missing comma in the list.
* Improvement: [Explain how to configure the vim-easymotion movement keys.](vim_plugins.md#vim-easymotion)
* New: Introduce alot.
    [alot](https://github.com/pazz/alot) is a terminal-based mail user agent based
    on the [notmuch mail indexer](notmuch.md). It is written in python using the
    urwid toolkit and features a modular and command prompt driven interface to
    provide a full MUA experience.
### [ActivityWatch](activitywatch.md)
* New: Introduce ActivityWatch tracking software.
    It's a web application that can be installed both in Linux and Android
    that automatically tracks where you spend the time on.
    Super interesting for life logging and automating stuff. Until I save
    some time to react on the data, I'll just gather it and see how to
    aggregate it.
* Improvement: Add week insights.
    * [The browser watcher is not very accurate](https://github.com/ActivityWatch/aw-watcher-web/issues/20).
    * The vim editor watcher doesn't add [git branch information](https://github.com/ActivityWatch/aw-watcher-vim/issues/19).
    * Syncing data between devices [is not yet supported](https://github.com/ActivityWatch/activitywatch/issues/35).
### [beancount](beancount.md)
* New: Introduce the cli double entry accounting program.
* New: Add links on how to use as a library.
* Correction: Correct the git repository link.
### [Beets](beets.md)
* New: Introduce Beets the music management library.
    [Beets](https://beets.io/) is a music management library used to get your music
    collection right once and for all. It catalogs your collection, automatically
    improving its metadata as it goes using the MusicBrainz database. Then it
    provides a set of tools for manipulating and accessing your music.
### [dunst](dunst.md)
* New: Introduce dunst.
    [Dunst](https://dunst-project.org/) is a lightweight replacement for the
    notification daemons provided by most desktop environments. It’s very
    customizable, isn’t dependent on any toolkits, and therefore fits into those
    window manager centric setups we all love to customize to perfection.
### [Dynamic DNS](dynamicdns.md)
* New: Introduce the Dynamic DNS concept.
    [Dynamic DNS (DDNS)](https://en.wikipedia.org/wiki/Dynamic_DNS) is a method of
    automatically updating a name server in the Domain Name Server (DNS), often in
    real time, with the active DDNS configuration of its configured hostnames,
    addresses or other information.
### [elasticsearch](elasticsearch.md)
* New: Explain how to reindex an index.
* Correction: Explain how to restore only some indices.
    ```bash
    curl -X POST "{{ url }}/_snapshot/{{ backup_path }}/{{ snapshot_name }}/_restore?pretty" -H 'Content-Type: application/json' -d'
    {
      "indices": "{{ index_to_restore }}",
    }'
    ```
* New: [Explain how to fix Circuit breakers triggers.](elasticsearch.md#fix-circuit-breakers-triggers)
* Correction: Correct the way of closing an index.
    Use a POST instead of a GET
* New: [Explain how to calculate the amount of memory required to do KNN operations.](elasticsearch.md#knn-sizing)
* New: [Explain how to do KNN warmup to speed up the queries.](elasticsearch.md#knn-warmup)
* New: [Explain how to deal with the AWS service timeout.](elasticsearch.md#deal-with-the-aws-timeout-service)
### [Gajim](gajim.md)
* New: Introduce gajim.
    [Gajim](https://gajim.org/) is the best Linux XMPP client in terms of end-to-end
    encryption support as it's able to speak OMEMO.
### [Github cli](gh.md)
* New: Basic usage of gh.
    [`gh`](https://github.com/cli/cli) is GitHub’s official command line tool.
    It can be used to speed up common operations done with github, such as
    opening PRs, merging them or checking the checks of the PRs
### [Graylog](graylog.md)
* New: Introduce Graylog.
    [Graylog](https://www.graylog.org/) is a log management tool. The commit
    includes some tips like how to send a test message to check an input.
### [HAProxy](haproxy.md)
* New: Add interesting guidelines on [how to configure HAProxy in AWS](https://github.com/jvehent/haproxy-aws).
### [Hard drive health](hard_drive_health.md)
* New: Taking care of your hard drives.
    Hard drives die, so we must be ready for that to happen. There are several
    solutions, such as using [RAID](https://en.wikipedia.org/wiki/RAID) to minimize
    the impact of a disk loss, but even then, we should monitor the [bad
    sectors](https://en.wikipedia.org/wiki/Bad_sector) to see when are our disks
    dying.
    In the article we talk about [S.M.A.R.T](https://en.wikipedia.org/wiki/S.M.A.R.T.) and how to solve some hard drive problems.
### [Hushboard](husboard.md)
* New: Introduce Husboard.
    [Hushboard](https://kryogenix.org/code/hushboard/) is an utility that mutes your microphone while you’re typing.
    (Thanks [M0wer](https://m0wer.github.io/memento/computer_science/gnu_linux/hushboard/)!)
### [Jellyfin](jellyfin.md)
* New: Introduce the media system and monitor interesting issues.
    [Jellyfin](https://jellyfin.org/) is a Free Software Media System that puts you
    in control of managing and streaming your media. It is an alternative to the
    proprietary Emby and Plex, to provide media from a dedicated server to end-user
    devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and
    ported to the .NET Core framework to enable full cross-platform support. There
    are no strings attached, no premium licenses or features, and no hidden agendas:
    just a team who want to build something better and work together to achieve it.
* Correction: Explain how to fix the stuck at login page issue.
    ```bash
    systemctl stop jellyfin.service
    mv /var/lib/jellyfin/data/jellyfin.db{,.bak}
    systemctl start jellyfin.service
    systemctl stop jellyfin.service
    mv /var/lib/jellyfin/data/jellyfin.db{.bak,}
    systemctl start jellyfin.service
    ```
* Correction: Explain how to fix the Intel Hardware transcoding.
    ```bash
    docker exec -it jellyfin /bin/bash
    wget https://repo.jellyfin.org/releases/server/ubuntu/versions/jellyfin-ffmpeg/4.3.2-1/jellyfin-ffmpeg_4.3.2-1-focal_amd64.deb
    dpkg -i jellyfin-ffmpeg_4.3.2-1-focal_amd64.deb
    ```
* Improvement: [Explain how to fix the wrong image covers.](jellyfin.md#wrong-image-covers)
    Remove all the `jpg` files of the directory and then fetch again the data from
    your favourite media management software.
* New: [Track the issue of trailers not working.](jellyfin.md#issues)
* New: [Explain how to fix the green bars in the reproduction.](jellyfin.md#green-bars-in-the-reproduction)
* Correction: [Fix the stuck at login page error.](jellyfin.md#stuck-at-login-page)
    If you use [jfa-go](https://github.com/hrfee/jfa-go) for the invites, you may
    [need to regenerate all the user
    profiles](https://github.com/hrfee/jfa-go/issues/101), so that the problem is
    not introduced again.
* New: [Track subtitles get delayed from the video on some devices issue.](jellyfin.md#issues)
### [ffmpeg](ffmpeg.md)
* New: Introduce the program and multiple of it's uses.
    [ffmpeg](https://www.ffmpeg.org/) is a complete, cross-platform solution
    to record, convert and stream audio and video.
### [Kitty](kitty.md)
* New: Introduce kitty the terminal emulator.
    [kitty](https://sw.kovidgoyal.net/) is a fast, feature-rich, GPU based terminal
    emulator written in C and Python with nice features for the keyboard driven
    humans like me.
* New: [Scrollback when ssh into a machine doesn't work.](kitty.md#scrollback-when-ssh-into-a-machine-doesn't-work)
    This happens because the kitty terminfo files are not available on the server.
    You can ssh in using the following command which will automatically copy the
    terminfo files to the server:
    ```bash
    kitty +kitten ssh myserver
    ```