subnetting) to select addresses to probe within each BGP
advertised preﬁx. The motivation is to adapt the number
of probes to the degree of subnetting within the preﬁx to
avoid wasted probing. We term this strategy “subnet cen-
tric.” The current Ark strategy assumes a ﬁxed subnetting
boundary, which may be too granular (wasted probing) or
too coarse (missing information). In contrast, we ensure that
subsequent destinations in a preﬁx are as distinct as possi-
ble in their most signiﬁcant bits, i.e., likely part of distinct
subnet preﬁxes. We term this selection of destination the
least common preﬁx principle. For example, to choose four
probes for preﬁx 192.168.0.0/16, our algorithm initially picks
four addresses from the distinct preﬁxes: 192.168.0.0/18,
192.168.64.0/18, 192.168.128.0/18, and
192.168.192.0/18.
As probing progresses, we use our pair-wise ED measure to
determine whether ﬁner-grained destinations within a pre-
ﬁx are yielding useful additional information. The preﬁx is
continually probed until the ED value of the paths returned
by a pair falls within an empirically derived pre-determined
threshold τ = 3.
3.2
Interface Set Cover
DoubleTree [8] explores a method to adapt probing in real-
time as a measurement cycle progresses. By beginning at a
heuristically chosen mid-point and working both back to the
vantage point (decreasing TTL) and toward the destination
(increasing TTL), DoubleTree achieves packets savings by
preempting a trace when a previously discovered interface
is observed – the inherent assumption is that subsequent
probes along the path will be duplicates of previous traces.
While DoubleTree’s technique partially addresses our ﬁnd-
ings in §2, it must determine a path’s mid-point and does
not cope well with load balancing. More importantly, it
treats each cycle independently and is agnostic to informa-
tion learned in previous probing cycles. Our goal is to lever-
age this knowledge to reduce the number of trace packets in
subsequent cycles.
We hypothesize a greedy Interface Set Cover (ISC) scheme
that always selects a subset of probing packets based on the
interface-level topology of the previous cycle. More specif-
ically, the interface-level topology includes directed edges
where the direction of the edge records the direction of a
probe. (It is not a problem if an edge is bi-directional, which
for the interface-level graph should occur only as outliers.)
The ISC scheme iteratively selects paths, and sub-paths,
from the directed interface-level topology of the previous
round, such that packets would probe interfaces that are
not yet accounted for by the paths already selected. The
initial “bootstrap” set of destinations may be chosen using
our subnet centric probing algorithm. We note that the
optimization problem of identifying a minimum subset of
paths to cover the interfaces discovered is an instance of the
well-known NP-complete “Min Set Cover” problem. How-
ever, eﬃcient greedy solutions have been shown to be ln n
approximate of optimal [9].
Formally, let P be a set of paths from vantage points to
destinations. Each (cid:3)pi ∈ P is a vector of router interfaces
167 100000
 10000
 1000
t
n
u
o
C
 100
 10
 1
 1
Ark (Ground Truth)
Subnet Centric
Prefix Directed
AS Directed
 10
 100
 1000
Degree
h
t
u
r
T
d
n
u
o
r
G
k
r
A
m
o
r
f
e
c
n
e
r
e
f
f
i
D
 1
 0.9
 0.8
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
Subnet-Centric
Prefix-Directed
AS-Directed
Verticies
Edges
h
t
u
r
T
d
n
u
o
r
G
k
r
A
m
o
r
f
e
c
n
e
r
e
f
f
i
D
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
Subnet-Centric
Prefix-Directed
AS-Directed
Probes(load)
(a)
Inferred degree distribution:
subnet centric probing well approxi-
mates Ark ground truth.
(b) Model ﬁdelity: Subnet centric
probing captures ≥ 90% of the ver-
tices and edges.
(c) Induced load: Subnet centric
uses (cid:4) 60% of the ground truth load.
Figure 3: Subnet Centric directed probing performance.
S
corresponding to the i’th path. Let the universe of interfaces
i,j pi[j]. A sub-path, pi[n : m], is the n through
be I =
m’th hops of (cid:3)pi, and includes the case of a full path1. The
size of sub-path |pi[n : m]| is m − n + 1, i.e. the number of
packets to probe hops n through m. The ISC problem is to
ﬁnd the set of sub-paths from P with minimum total size
among all subsets of paths covering I. We thus contrast ISC
with the full set cover problem that ﬁnds a covering set of
paths (cid:3)pi from P of minimum size.
We observe that a tension exists between the two conﬂict-
ing goals of reducing probing traﬃc and capturing dynamic
forwarding paths. Many networks deploy traﬃc engineering
and load balancing. Thus, regardless of whether only full
paths or sub-paths are used, we expect that probes will re-
veal deviations from the prior cycle. When this occurs, we
augment ISC with a “change driven” logic: during the inter-
face veriﬁcation phase, if an interface other than expected is
found, ISC begins a DoubleTree-like strategy probing out-
ward in both directions from the unexpected interface. This
allows ISC to not only learn of load balancing over multiple
cycles, but also adapt to underlying topological changes.
3.3 Vantage Point Spreading
Internet-scale mapping involves probing from dozens of
diﬀerent vantage points (VPs). How to divide the probing
among VPs presents another opportunity for an adaptive
strategy to reduce the probing traﬃc. However, as our pre-
ceding analysis in §2 shows, additional vantage points yield
more interface information. Further, in the next section we
ﬁnd that the information gain of additional VPs to the same
destination decays slowly. Therefore, due to large value in
any additional vantage points, we adopt a simple strategy
for assigning destinations to VPs.
Our vantage point spreading algorithm simply uses as many
distinct VPs as possible for the set of destinations within a
given BGP preﬁx. When combined with subnet centric prob-
ing, as additional destinations are chosen from determined
subnet preﬁxes, vantage point spreading will assign them, if
possible, to VPs not yet used for the original BGP preﬁx,
or otherwise distribute them as uniformly as possible when
there are more destinations to be probed than VPs.
1In practice then, a trace sub-path has the same origin and
destination IP addresses, but uses TTL=n to m.
4. RESULTS
Having deﬁned our three intelligent topology measure-
ment primitives, this section examines their individual per-
formance through a series of Ark experiments.
4.1 Subnet Centric Probing
We evaluate the subnet centric probing strategy against
a full cycle of Ark probing, which for the sake of this exer-
cise we will consider to be the known ground-truth. Note
that this ground-truth is a relative measure, rather than the
actual topology which remains unknown. We simulate var-
ious strategies by ﬁltering the full Ark probe data from a
cycle, i.e. we simulate diﬀerent resulting topologies by selec-
tively using diﬀerent available Ark paths. Our performance
measures examine the balance between probing load and the
topological structure resulting from the probes.
To gain intuition over using external BGP data to drive
probe selection, we ﬁrst follow a na¨ıve strategy similar to
[14]. We select a single destination per BGP preﬁx at ran-
dom from the available Ark traces; eﬀectively assuming that
this single destination is representative of the entire cluster
of destinations that fall within its preﬁx. Similarly, we ex-
periment with an even coarser technique whereby trace des-
tinations are clustered according to their AS and a single
destination in the AS is deemed representative of the AS.
We build the interface-level graph as inferred by the raw
Ark data as well as using a single destination per preﬁx and
a single destination per AS. The degree distribution of the
resulting inferred graphs is given Figure 3(a). While both
na¨ıve strategies capture a structure that appears similar to
ground-truth from the full Ark data, there are large numbers
of missing interfaces and edges (40-80% of total as shown in
Figure 3(b)). However, as shown in Figure 3(c), the preﬁx
clustering method requires approximately one-ﬁfth of the
full probing load while the AS clustering method results in
even greater probe savings.
Armed with this intuition over the potential probe sav-
ings, we ask whether the subnet centric probing algorithm
can strike a better balance between consumed probing load
and the ﬁdelity of the resulting topology. We observe no
qualitative diﬀerence2 in the topology resulting from the
2We omit other graph-theoretic measures [24, 16] for brevity,
but note that such metrics show similarity to ground truth.
168s
e
c
a
f
r
e
t
n
I
d
e
s
s
M
i
f
o
n
o
i
t
c
a
r
F
 0.1
 0.09
 0.08
 0.07
 0.06
 0.05
 0.04
 0.03
 0.02
 0.01
 0
 1
Full Trace SetCover
ISC
 2
 3
 4
 5
 6
 7
 8
 9
 10
 11
Cycle Separation (Days)
s
e
t
u
o
r
e
c
a
r
T
l
l
u
F
o
t
o
i
t
a
R
d
a
o
L
 0.7
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
 11
Cycle Separation (Days)
Full Trace SetCover
ISC
(a) Set cover performance (model interface ﬁdelity rel-
ative to traceroute baseline).
(b) Set cover eﬃciency (induced packet load relative
to traceroute baseline).
Figure 4: Comparing full trace topology set covering and ISC techniques over time.