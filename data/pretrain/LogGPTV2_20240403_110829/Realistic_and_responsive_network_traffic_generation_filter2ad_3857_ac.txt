TCPOTHER
TCPOTHER
KAZAA
Auck
Mawi
Mawi2
CAIDA
TOTAL
Date
Mbps
5.53
17.79
21.96
184.17
pps
979
2229
2907
22786
pps
Table 3: Median and IQR parameter values (Trace/Swing) for Auck, Mawi and CAIDA traces.
Model Parameters→
(Trace)Application(Statistic)↓
(Auck) HTTP (Median)
(Auck) HTTP (IQR)
(Auck) SQUID (Median)
(Auck) SQUID (IQR)
(Mawi) HTTP (Median)
(Mawi) HTTP (IQR)
(Mawi) TCPOTHER (Median)
(Mawi) TCPOTHER (IQR)
(CAIDA) HTTP (Median)
(CAIDA) HTTP (IQR)
(CAIDA) KAZAA (Median)
(CAIDA) KAZAA (IQR)
REQ
(Bytes)
420 / 421
201 / 203
535 / 536
178 / 181
415 / 414
406 / 408
36 / 36
1014 / 642
341 / 341
446 / 464
57 / 57
319 / 316
RSP
(Bytes)
747 / 735
3371 / 3357
1649 / 1523
5224 / 5225
462 / 438
2956 / 2947
68 / 80
516 / 755
361 / 355
6705 / 6649
100 / 96
317 / 324
numconn
interconn
numpairs
numrre
interRRE reqthink
1 / 1
1 / 1
2 / 2
6 / 6
1 / 1
0 / 0
1 / 1
0 / 0
1 / 1
1 / 1
1 / 1
0 / 0
(Secs)
0.4 / 0.4
1.0 / 0.9
1.0 / 1.0
2.7 / 2.2
0.7 / 0.7
2.2 / 2.0
1.5 / 1.5
4.9 / 3.3
0.5 / 0.6
1.8 / 1.8
1.3 / 1.4
2.7 / 2.6
1 / 1
0 / 0
1 / 1
2 / 2
1 / 1
0 / 0
1 / 1
5 / 5
1 / 1
0 / 0
1 / 1
0 / 0
(Secs)
10.9 / 10.5
8.8 / 8.4
8.6 / 7.7
7.6 / 4.1
10.6 / 10.2
9.4 / 8.4
10.7 / 11.4
9.5 / 10.3
10.2 / 10.5
8.9 / 9.0
12.0 / 16.2
14.9 / 12.2
(Secs)
0.1 / 0.1
0.8 / 0.8
0.6 / 0.6
1.4 / 1.4
0.2 / 0.2
2.0 / 1.9
0.1 / 0.1
0.3 / 0.3
0.1 / 0.0
0.6 / 0.5
0.2 / 0.1
0.6 / 0.5
1 / 1
0 / 1
1 / 1
1 / 1
1 / 1
0 / 0
1 / 1
0 / 0
1 / 1
0 / 1
1 / 1
0 / 0
analysis (MRA) [1, 17, 21] to compare byte and packet-arrival rates
at varying time scales. Intuitively, wavelet scaling plots, or energy
plots, show the variance (burstiness) in the trafﬁc arrival process
at different timescales. It enables visual inspection of the complex
structure in trafﬁc processes. For example, consider the top pair of
curves in Figure 8. The x-axis represents increasing time scales (on
a log scale) beginning at 1 ms and the y-axis is the Energy of the
trafﬁc at a given time scale. A sharp dip in the curve, for instance,
one that happens at time scale of 9 (256ms) suggests a strong
periodicity (and hence lower variance and Energy) around that time
scale. The presence of a dip at the time scale of the dominant RTT
of ﬂows is well understood [12, 21, 41] and results from the self-
clocking nature of TCP. Likewise, if all ﬂows arriving at a target
link are bottle-necked upstream at a link whose capacity is 10Mbps,
then we would expect a dip at 1.2ms (the time to transmit a 1500
byte packet across a 10Mbps link). For more detailed analysis and
interpretation, we refer the reader to [1, 12].
For our purposes, if the energy plot for a generated trace
closely matches the energy plot for the original trace, then we may
conclude that the burstiness of the packet or byte arrival process
matches at a variety of timescales for the two traces. Such matching
is important if the generated traces are to be successfully employed
for scenarios sensitive to burstiness, e.g., high-speed router design,
active queue management, or ﬂow classiﬁcation. Matching the
energy plot of a given plot at both ﬁne- (sub-RTT) and coarse-
timescales has proven difﬁcult. To the best of our knowledge, our
work is the ﬁrst to show such a match across a range of timescales.
5. APPLICATION STUDIES
Given our general validation approach, we now present the
results of case studies for: i) capturing the ﬁne-grained behavior
of individual application classes in our packet traces, ii) validating
macro properties of our generated traces, and iii) matching bursti-
ness of trafﬁc across a range of time granularities.
5.1 Distribution parameters
We ﬁrst measure Swing’s ability to accurately capture the
distributions for the structural properties of users and applications.
We present results for three representative applications taken from
our three traces: KAZAA from CAIDA, SQUID from Auck, and
HTTP from Mawi. Importantly, our model is generic to each
of these application classes and requires no manual conﬁgura-
tion for the various traces/applications. Results for other appli-
cation classes/trace combinations are similar. Table 3 compares
the distribution of our parameters relative to the original trace
(Trace/Swing), with the median values and IQR. Matching IQR
values and the median indicates similar distributions for both the
extracted and generated values.
While the required level of accuracy is application-dependent,
based on these results we are satisﬁed with our ability to reproduce
application and user characteristics. We have found that model
parameters that attempt to reproduce human/machine think time
are the most difﬁcult to accurately extract and reproduce. For
instance, the IQR of interconn times for Auck/SQUID differs by
500ms. However, our sensitivity experiments (§ 5.3) reveal that
it is important to consider these characteristics to reproduce trace
properties and that our approximations appear sufﬁcient based on
the quality of the generated traces. On the other hand, we achieve
near perfect accuracy for more mechanistic model parameters such
as request and response size (see Table 3).
Given validation of our application and user models, we
next consider wide-area network conditions. Figure 5 shows the
extracted values of the two-way latencies of hosts on either side of
the target link in the Auck trace. More than 75% of the hosts see
Comparing CDFs of host delays
Comparing CDFs of link capacities
Comparing CDFs of loss rates
1
n
o
i
t
c
a
r
f
e
v
i
t
l
a
u
m
u
C
0.8
0.6
0.4
0.2
0
AuckDir0
SwingDir0
AuckDir1
SwingDir1
600
0
200
400
Delay from host to the target link (msec)
800
1
n
o
i
t
c
a
r
f
e
v
i
t
l
a
u
m
u
C
0.8
0.6
0.4
0.2
0
0
AuckDir0
SwingDir0
AuckDir1
SwingDir1
150
200
50
100
Link Capacities of hosts (mbps)
1
n
o
i
t
c
a
r
f
e
v
i
t
l
a
u
m
u
C
0.8
0.6
0.4
0.2
0
0
Auck
Swing
5
10
15
20
Loss rate of links (percentage)
Figure 5: Two-way delay for hosts.
Figure 6: Upstream and downstream
Capacities.
Figure 7: Loss rates for feeding links
Smallest time scale = 1 msec 
Smallest time scale = 1 msec 
Smallest time scale = 1 msec 
)
)
j
(
y
g
r
e
n
E
(
g
o
l
2
28
26
24
22
20
18
16
0
AuckDir0
AuckDir1
SwingDir0
SwingDir1
)
)
j
(
y
g
r
e
n
E
(
2
g
o
AuckDir0
AuckDir1
SwingDir0
SwingDir1
25
20
15
)
)
j
(
y
g
r
e
n
E
(
g
o
2
l
l
5