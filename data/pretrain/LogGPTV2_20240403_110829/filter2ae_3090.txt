# Fuddly：Fuzzing和数据处理框架

## 译文声明
本文为翻译文章，原文来源：360安全播报。译文仅供参考，具体内容及含义以原文为准。
原文链接：[此处应插入原文链接]

## 简介
Fuddly是一个集成了fuzzing（模糊测试）功能与数据处理能力的框架。

### 主要功能
- **图形化数据模型**：
  - 支持通过可视化方式表达复杂的数据结构。
  - 提供对复杂数据的有效管理手段。
  - 对现有数据进行分析和整理。
  - 自动生成并变异fuzzing策略。
  
- **自动化fuzzing测试框架**：
  - 自动扫描目标系统。
  - 利用独立探针(probes)对目标执行监控与分析。
  - 自动记录每次测试的历史信息，便于随时查阅。
  - 自动处理从被测目标收集到的数据，支持特定类型的数据转换。

### 当前不足之处
- 缺少完整的官方文档。
- 更多详情，请参阅TODO文件。

## 文档结构概览
本框架的文档组织结构可访问以下链接查看：[http://fuddly.readthedocs.org/en/develop/](http://fuddly.readthedocs.org/en/develop/)

#### 生成本地文档步骤
1. 进入`docs/`目录。
2. 使用`make html`命令生成HTML格式的文档。
3. 执行`make latexpdf`命令创建PDF版本的手册。
4. 最终生成的所有文档将被保存在`docs/build/`子目录中。

## 启动及测试示例
位于`fuzzfmk/test.py`的脚本包含了所有用于验证Fuddly功能的测试案例。运行此脚本即可开始测试过程。

#### 常见命令行参数
- 开启全部组件进行测试:
  ```bash
  python fuzzfmk/test.py --all
  ```
- 仅启用部分预设组件:
  ```bash
  python fuzzfmk/test.py
  ```
- 忽略特定于数据模型的错误（如重复替换相同数据），减少无效输出:
  ```bash
  python fuzzfmk/test.py --ignore-dm-specifics
  ```

## 其他说明
如果您自行设计了新的数据模型，可以将其放置于`imported_data/`文件夹内以便使用。

## 依赖项
- 支持Python 2 和 Python 3 版本。
- 必须安装的库：
  1. [six](http://pythonhosted.org/six/) 库以确保跨版本兼容性。
  2. SQLite3 数据库。
- 可选安装的扩展包：
  - `xtermcolor`: 终端颜色渲染工具。
  - `cups`: Python接口至CUPS打印系统。
  - `rpyc`: 实现远程过程调用功能。
- 文档构建所需工具：
  - Sphinx (版本≥1.3): 用于生成项目文档。
  - TeX Live (可选): 生成PDF手册时需要。
  - ReadTheDocs主题(可选): 提升HTML文档外观。

*注意：获取软件的具体下载地址请参照原文提供的链接。*