requirement of DeMiCPU, we test the system by setting the sampling
rate to 100, 200, 1 k, 5 k, 25 k, 100 k, and 200 kHz respectively. 100
traces from each of the 90 devices are collected at each sampling
rate for training and testing. The resulting precisions and recalls are
shown in Fig. 14, from which we can observe that precisions and
recalls of DeMiCPU do not change significantly with lower sampling
rates. Especially, with a 1 kHz sampling rate, DeMiCPU achieves a
precision of 98.5% and a recall of 98.3%, which are nearly equivalent
to the results under higher sampling rates. Even with a 100 Hz
sampling rate, the precision and recall can be as high as 93.2%. This
finding is encouraging since it indicates that DeMiCPU can even use
ubiquitous smart devices with limited sampling rate capability for
fingerprint collection. For instance, most smartphones nowadays
are equipped with a built-in magnetometer that supports 100 Hz
sampling rate. Low requirement of sampling rate makes DeMiCPU a
more universal device fingerprinting mechanism.
Scalability of DeMiCPU. Although it’s difficult to evaluate the
6.4.4
capability of DeMiCPU with a very large set of devices, we conduct
several experiments in which we increase the number of tested
devices gradually to get a sense of how DeMiCPU scales. With the
same settings in the 90-device experiments, we change the total
number of tested devices and repeat the experiments. First, we
randomly choose and use 20 devices to obtain the precision and
recall of DeMiCPU. Then, we increase the quantity of devices to
30, 50, 70 and 90, and recalculate the precisions and recalls. Tab. 2
shows how accuracy changes with the increasing number of devices,
Table 2: Average precision, recall and F1-Score of DeMiCPU
with different numbers of tested devices.
Number of devices
20
30
50
70
90
Precision Recall
1.000
0.996
0.997
0.994
0.991
1.000
0.997
0.997
0.995
0.991
F1-Score
1.000
0.996
0.997
0.994
0.991
from which we can find that the performance of DeMiCPU does not
change significantly as the number of devices increases. It provides
encouraging signs that DeMiCPU is likely scalable to a large number
of devices.
Impact of Alien Devices. In real-world deployment, it is likely
6.4.5
that DeMiCPU needs to identify alien devices, i.e., devices that are
not trained beforehand. To understand how DeMiCPU performs with
alien devices, we conduct the following experiments. From the 90
devices, we randomly choose 85 devices for training and get the
corresponding 85 binary classifiers. The rest 5 devices, which serve
as aliens to the trained system (they are never used for training),
are utilized to test the performance. The 5 devices take turns to
input their traces to each of the 85 classifiers to see if they can be
accepted. We repeat the experiment for 10 times to eliminate the
random errors and plot the CDF of true negative rates in Fig. 15.
The results reveal that DeMiCPU can successfully reject alien devices
with a minimum probability of 98.2% and an average probability of
98.7%, which indicates its high reliability.
6.4.6 Multi-round Fingerprinting. In aforementioned evaluation,
the threshold for each binary classifier is 0.5 by default. However,
in practice, precision is likely to be prior to recall for the sake of
high reliability and security, and recall can be further improved
through multi-round fingerprinting.
To investigate the appropriate threshold to achieve high preci-
sion and the minimum fingerprinting round to achieve high recall,
we plot the precision-recall curve by varying the threshold for each
classifier. As DeMiCPU is a system consisting of multiple binary clas-
sifiers, we employ the same threshold in each classifier and average
their precisions and recalls as the final performance. The results
shown in Fig. 16 reveal that, for both laptops and smartphones, the
and the gain of the antennas. Much work has demonstrated the
feasibility of replaying radio frequency (RF) signals at reasonable
cost, e.g., utilizing a Universal Software Radio Peripheral (USRP)
with a matching antenna to replay signals at 2.4 or 5 GHz for Wi-Fi,
900 MHz for GSM (Global System for Mobile Communications),
13.56 MHz for NFC (Near-field Communication), and etc. These
RF bands are at least at the order of MHz and a variety of off-the-
shelf matching antennas are available. In comparison, the effective
frequency range of DeMiCPU is below 10 kHz, whose matching an-
tennas, i.e., VLF (very low frequency) antennas, are usually used
for military communication with submarines and few commodity
antennas are available. Moreover, VLF antennas are typically large,
e.g., a dipole antenna for 10 kHz can be longer than 7.5 km.
Without matching antennas, we may refer to dedicated equip-
ment to record MI samples. For instance, we found a N9038A MXE
EMI receiver from Keysight that can analyze signals from 3 Hz to 44
GHz at the cost of $90, 000 USD. However, we were unable to find
equipment that can reproduce the recorded samples with abundant
signals ranging from DC to 10 kHz since most RF generators on
the market only support frequency higher than 9 kHz.
DIY set with handcrafted coils. Unable to replay MI signals
with COTS devices, we design our own replay equipment: We record
the MI sample with the DRV425 magnetic sensor and replay the
signal with a handcrafted induction coil driven by a MSP430F5529
LaunchPad [23], as shown in Fig. 17. We program the LaunchPad
to output the recorded MI sample in a form of discrete voltages,
which are then converted into analog signals by a Digital-to-Analog
Converter (DAC). The analog voltage signals are further converted
into corresponding current signals to drive the induction coil. A
ferrite core is inserted into the coil to augment its permeability. A
Constant Voltage Source (CVS) is utilized to power the VCC, and
an oscilloscope is used to monitor the output voltage of the DAC.
To quantify the MI signals measured by sensors, we refer to
the Ampere’s circuital law [45], which models the magnetic flux
generated by a charged coil as follows:
ΦB = μN IScosθ
(9)
where μ is the magnetic permeability of the coil, N is the number
of turns, I is the current flowing through the coil, S is the area of
the magnetic sensor’s sensing surface, and θ is the angle between
the magnetic field lines and the normal line (perpendicular) to S.
Therefore, although we elaborately reproduce the MI signal, the
distance and angle between the coil and sensor affect the measure-
ment. Given the dynamic nature of the produced magnetic field and
the noise introduced during DA conversion, it is extremely difficult
for the sensor to record MI signals that equal the recorded one.
To validate, we randomly choose five samples from five devices,
and obtain 10 replayed samples for each. Although we try our best
to obtain a similar replayed signal, none of them matches with the
enrolled fingerprints. We believe that is because the fingerprint dis-
crepancy caused by the CPU hardware is subtle and the differences
as well as noises introduced during the replay attack is likely to
ruin such subtle characteristics. Thus, replay attacks targeted at
DeMiCPU are challenging to perform even at a single point and the
difficulty will increase dramatically with the increasing of testing
sensors.
Figure 17: DIY replay attack equipment with a handcrafted
induction coil. The recorded MI sample is emitted by the
MSP430 in the form of discrete voltages, which are first con-
verted into analog signals by a Digital-to-Analog Converter
(DAC) and then converted into corresponding current sig-
nals by a Voltage-to-Current Converter (VCC).
precision approaches 100% when the threshold increases. Specif-
ically, for laptops, the recall is 97.0% when the precision is 99.9%
with a threshold of 0.54, which can be further improved to 99.9%
with two-round fingerprinting and 99.99% with three-round fin-
gerprinting. Similarly, for smartphones, the recall is 98.3% when
the precision is 99.9% with a threshold of 0.64, and the recall can
approach 99.999% with only three-round fingerprinting. Therefore,
with three-round fingerprinting, DeMiCPU can achieve a 99.9% pre-
cision and an over 99.99% recall on both laptops and smartphones.
To summarize, our evaluation with 90 laptops and smartphones
shows that smart devices can be identified leveraging the finger-
prints of their CPU modules. While even a larger study is needed
to confirm the scalability of our findings, to the best of our knowl-
edge, this is the first work to attempt device fingerprinting based
on fingerprints of CPU modules.
7 DISCUSSION
In this section, we conduct the security analysis and discuss the
limitations of DeMiCPU.
7.1 Security Analysis
Since the goal of the attackers is to impersonate a legitimate device,
we discuss two attacks: replay attacks and mimicry attacks. To
launch a replay attack, an adversary may have a brief physical
access to the target device. She may record the MI signal of the
target device and replay the recorded sample to fool the DeMiCPU
sensor. For mimicry attacks, she may find a similar device to imitate
the legitimate one.
7.1.1 Replay Attack. A replay attack consists of two steps: record-
ing and reproducing. We study the feasibility of such attacks based
on two sets of equipment: commercial off-the-shelf (COTS) devices
and DIY sets with handcrafted coils.
COTS device. The effectiveness of recording and emitting radia-
tion signals is determined by the sensitivity of the sampling devices
7.1.2 Mimicry Attack. The mimicry attack utilizes a similar device
to imitate the target device by manipulating the software or config-
urations of the attack device. To impersonate the target device, the
attack device has to precisely learn and mimic the fingerprint of
the victim. However, the essential discrepancies of DeMiCPU finger-
prints originate from the hardware of CPU modules. Manipulating
software or configurations may alter the CPU fingerprint but the
mapping between the configurations and the fingerprint is difficult
to profile. As a result, the mimicry is likely to be unsupervised. In
addition, according to our observations, the fingerprint discrepancy
caused by the hardware of the CPU module is subtler compared
with that caused by configurations. Thus, mimicry attack is not
likely to make the attack device’s fingerprint exactly the same as
the one of the target device.
In summary, given the low frequency nature and the high preci-
sion of DeMiCPU, we believe it is difficult for adversaries to launch
either a replay attack or a mimicry attack against DeMiCPU.
7.2 Limitation
Authentication Point. DeMiCPU that relies on one sensor requires
the test point within a 16 mm range, which may affect the usability.
A significant displacement of the DeMiCPU sensor from the CPU
module may lead to failure in identification. However, we envision it
can be addressed by exploiting a sensor array, which shall effectively
reduce the requirement of test points and enlarge the fingerprinting
area.
Long-term Consistency. We conducted our experiments over
30 days. However, a smart device usually can be used for years and
it may experience changes due to aging, which in turn may change
the features gradually. For example, the number of available CMOS
transistors in the CPU may decrease due to the hardware aging.
Nevertheless, we assume that we can compensate the aging by
postulating a fingerprint slow updating technique: We update the
fingerprints in the database occasionally if the current fingerprint
is still classified to the legitimate user yet a small constant offset is
detected, such that slow changes can be compensated.
User Process Suppress. DeMiCPU employs a higher priority
for stimulation compared with other user processes. As a result,
other user applications will be suppressed during fingerprinting.
However, as DeMiCPU stimulation only lasts for 0.6 s, we argue it
is relatively short and might be acceptable for most applications
without affecting user experience.
Firmware-update Resistance. The firmware and CPU microcode
of a smart device can be updated in accordance with requirements.
During our experiments, the devices were kept natural and haven’t
been updated intentionally. As the firmware and CPU microcode
may affect the execution of CPU instructions, they may have impact
on DeMiCPU fingerprinting. We remain it as the future work.
8 RELATED WORK
Device Fingerprinting. Fingerprint is one of the most common
biometrics in user identification [24, 35]. The same concept was
extended to device identification by the US government in 1960s
to identify and track unique mobile transmitters [27]. Since then,
much effort has been devoted to identifying network devices by
building a fingerprint out of their software or hardware. In terms of
software-based fingerprint, the combination of chipsets, firmware
and device drivers [15], timing interval of probe request frames [12],
patterns of wireless traffic [33], and browser properties [46], can
be used to identify devices. The downside of these methods is that
fingerprints will change once device configuration or user behavior
changes. Hardware-based approaches fingerprint a device through
their physical components or properties. Clock skews [26, 34], radio
frequency (RF) discrepancy at the waveform [20, 36, 41] or modula-
tion [5] levels are well explored to identify wireless devices such as
Wi-Fi routers. Mobile device fingerprinting utilizes the difference in
hardware compositions [34, 40] or components such as accelerom-
eters [13, 42], gyroscopes [2], microphones [11, 48], speakers [47],
cameras [14, 29], Bluetooth implementation [1], or some of them
in combination [4, 21]. The advantage of hardware-based device
fingerprinting is that fingerprints are generated essentially from
manufacture discrepancies, which can remain stable during the
lifecycle of the device and are difficult to mimic.
EMI Leakage Based Side-channels. The use of EMI leakage
as a side-channel has been widely investigated. This work [17] ex-
tracts the key of RSA software implementation on a Lenovo laptop
using a near-field magnetic probe with a frequency around 100 kHz.
Vaucelle et al. [43] detect the existence of ambient electromagnetic
fields using a magnetometer bracelet with a frequency of up to 50
kHz. DOSE [9] detects the usage of electrical appliances by moni-
toring device EMI radiations with an expensive EMI measurement
equipment. Magnifisense [44] recognizes the electrical appliance
usage using a wrist-worn magnetic sensor and a set of data ac-
quisition device, with a sampling rate of 16-bit resolution at 44.1
kHz. ZOP [8] utilizes electromagnetic emanations generated by
computing systems during program execution to track a program’s
execution path and generate profiling information.
DeMiCPU is inspired by the aforementioned work and utilizes
the natural discrepancies existing in CPU modules. Given the fact
that a CPU module is indispensable for almost all mobile or smart
devices, DeMiCPU makes a more universal method compared with
aforementioned built-in sensor based approaches.
9 CONCLUSION AND FUTURE WORK
In this paper, we propose DeMiCPU, an effective device fingerprint-
ing approach utilizing the unique features of magnetic induction
(MI) signals generated from CPU modules, as a result of hardware
discrepancy. We evaluate DeMiCPU with 90 mobile devices, includ-
ing 70 laptops and 20 smartphones. The results show that DeMiCPU
can achieve 99.1% precision and recall on average and 98.6% preci-
sion and recall for 30 identical devices, with a fingerprinting time
of 0.6 s. Both precision and recall can be further improved to 99.9%
with multi-round fingerprinting.
Future directions include exploring a larger study to confirm the
scalability of DeMiCPU.
ACKNOWLEDGMENTS
We thank all anonymous reviewers for their insightful comments on
this paper. This work is supported by China NSFC Grant 61702451,
ZJNSF Grant LGG19F020020, and the Fundamental Research Funds
for the Central Universities 2019QNA4027.
and Secure Computing 12, 5 (2015), 519–532.
[35] Ratha, N. K., Bolle, R. M., Pandit, V. D., and Vaish, V. Robust fingerprint
authentication using local structural similarity. In WACV (2000), IEEE, pp. 29–34.
[36] Remley, K., Grosvenor, C. A., Johnk, R. T., Novotny, D. R., Hale, P. D., McKin-
ley, M., Karygiannis, A., and Antonakakis, E. Electromagnetic signatures of
wlan cards and network security. In ISSPIT (2005), IEEE, pp. 484–488.
[37] Solomon, D. A., Russinovich, M. E., and Ionescu, A. Windows internals. Mi-
crosoft Press, 2009.
[38] Suleiman, D., Ibrahim, M., and Hamarash, I. Dynamic voltage frequency
scaling (dvfs) for microprocessors power and energy reduction. In ICEEE (2005).
[39] Travers, M. Cpu power consumption experiments and results analysis of intel
i7-4820k.
[40] Uluagac, A. S., Radhakrishnan, S. V., Corbett, C., Baca, A., and Beyah,
R. A passive technique for fingerprinting wireless devices with wired-side
observations. In CNS (2013), IEEE, pp. 305–313.
[41] Ureten, O., and Serinken, N. Wireless security through rf fingerprinting.
Canadian Journal of Electrical and Computer Engineering 32, 1 (2007), 27–33.
[42] Van Goethem, T., Scheepers, W., Preuveneers, D., and Joosen, W.
Accelerometer-based device fingerprinting for multi-factor mobile authentication.
In ESSoS (2016), Springer, pp. 106–121.
[43] Vaucelle, C., Ishii, H., and Paradiso, J. A. Cost-effective wearable sensor to
detect emf. In CHI (2009), ACM, pp. 4309–4314.
[44] Wang, E. J., Lee, T.-J., Mariakakis, A., Goel, M., Gupta, S., and Patel, S. N.
Magnifisense: Inferring device interaction using wrist-worn passive magneto-
inductive sensors. In UbiComp (2015), ACM, pp. 15–26.
[45] Wikipedia. Ampère’s circuital law, May 2018. https://en.wikipedia.org/wiki/
Amp%C3%A8re%27s_circuital_law.
[46] Yen, T.-F., Xie, Y., Yu, F., Yu, R. P., and Abadi, M. Host fingerprinting and
tracking on the web: Privacy and security implications. In NDSS (2012).
[47] Zhou, Z., Diao, W., Liu, X., and Zhang, K. Acoustic fingerprinting revisited:
Generate stable device id stealthily with inaudible sound. In CCS (2014), ACM,
pp. 429–440.
[48] Zou, L., He, Q., and Wu, J. Source cell phone verification from speech recordings
using sparse representation. Digital Signal Processing 62 (2017), 125–136.
A APPENDIX
A.1 Experimental Device
REFERENCES
[1] Aksu, H., Uluagac, A. S., and Bentley, E. Identification of wearable devices
with bluetooth. IEEE Transactions on Sustainable Computing (2018).
[2] Baldini, G., Steri, G., Dimc, F., Giuliani, R., and Kamnik, R. Experimental iden-
tification of smartphones using fingerprints of built-in micro-electro mechanical
systems (mems). Sensors 16, 6 (2016), 818.
[3] Bellovin, S. M., and Merritt, M. Cryptographic protocol for secure communi-
cations, Aug. 31 1993. US Patent 5,241,599.
[4] Bojinov, H., Michalevsky, Y., Nakibly, G., and Boneh, D. Mobile device
identification via sensor fingerprinting. arXiv preprint arXiv:1408.1416 (2014).
[5] Brik, V., Banerjee, S., Gruteser, M., and Oh, S. Wireless device identification
with radiometric signatures. In MobiCom (2008), ACM, pp. 116–127.
[6] Brown, G. FEAST, January 2017. https://github.com/Craigacp/FEAST.
[7] Bullock, J.
LibXtract, July 2014. http://jamiebullock.github.io/LibXtract/
documentation/.
[8] Callan, R., Behrang, F., Zajic, A., Prvulovic, M., and Orso, A. Zero-overhead
profiling via em emanations. In ISSTA (2016), ACM, pp. 401–412.
[9] Chen, K.-Y., Gupta, S., Larson, E. C., and Patel, S. Dose: Detecting user-driven
operating states of electronic devices from a single sensing point. In PerCom
(2015), IEEE, pp. 46–54.
[10] Cleveland, T. L. Bi-directional power system for laptop computers. In APEC
(2005), vol. 1, IEEE, pp. 199–203.
[11] Das, A., Borisov, N., and Caesar, M. Do you hear what i hear?: Fingerprinting
smart devices through embedded acoustic components. In CCS (2014), ACM,
pp. 441–452.
[12] Desmond, L. C. C., Yuan, C. C., Pheng, T. C., and Lee, R. S. Identifying unique
devices through wireless fingerprinting. In WiSec (2008), ACM, pp. 46–55.
[13] Dey, S., Roy, N., Xu, W., Choudhury, R. R., and Nelakuditi, S. Accelprint:
Imperfections of accelerometers make smartphones trackable. In NDSS (2014).
[14] Dirik, A. E., Sencar, H. T., and Memon, N. Digital single lens reflex camera iden-
tification from traces of sensor dust. IEEE Transactions on Information Forensics
and Security 3, 3 (2008), 539–552.
[15] Franklin, J., McCoy, D., Tabriz, P., Neagoe, V., Randwyk, J. V., and Sicker, D.
Passive data link layer 802.11 wireless device driver fingerprinting. In USENIX
Security (2006), vol. 3, pp. 16–89.
[16] Gartner. Gartner Forecasts Flat Worldwide Device Shipments Until 2018, January
2017. http://www.gartner.com/newsroom/id/3560517.
[17] Genkin, D., Pachmanov, L., Pipman, I., and Tromer, E. Stealing keys from pcs
using a radio: Cheap electromagnetic attacks on windowed exponentiation. In
CHES (2015), Springer, pp. 207–228.
[18] Getz, R., and Moeckel, B. Understanding and eliminating emi in microcontroller
applications. National Semiconductor (1996).
[19] Geurts, P., Ernst, D., and Wehenkel, L. Extremely randomized trees. Machine
learning 63, 1 (2006), 3–42.
[20] Hall, J., Barbeau, M., and Kranakis, E. Radio frequency fingerprinting for
intrusion detection in wireless networks. IEEE Transactions on Defendable and
Secure Computing 12 (2005), 1–35.
[21] Hupperich, T., Hosseini, H., and Holz, T. Leveraging sensor fingerprinting
for mobile device authentication. In Detection of Intrusions and Malware, and
Vulnerability Assessment. Springer, 2016, pp. 377–396.
[22] Instrument, T. Integrated Fluxgate Magnetic Sensor IC for Open-Loop Applications,
March 2016. https://www.ti.com/product/DRV425.
[23] Instruments, T. MSP430F5529 LaunchPad Development Kit, April 2017. http:
//www.ti.com/lit/ug/slau533d/slau533d.pdf.
[24] Jain, A. K., Hong, L., Pankanti, S., and Bolle, R. An identity-authentication
system using fingerprints. IEEE 85, 9 (1997), 1365–1388.
[25] Keysight. U2541A 250kSa/s USB Modular Simultaneous Data Acquisition, June
2017. https://tinyurl.com/yb5r768y.
[26] Kohno, T., Broido, A., and Claffy, K. C. Remote physical device fingerprinting.
IEEE Transactions on Dependable and Secure Computing 2, 2 (2005), 93–108.
[27] Langley, L. E. Specific emitter identification (sei) and classical parameter fusion
technology. In WESCON (1993), IEEE, pp. 377–381.
[28] Le Sueur, E., and Heiser, G. Dynamic voltage and frequency scaling: The laws
of diminishing returns.
[29] Lukas, J., Fridrich, J., and Goljan, M. Digital camera identification from sensor
pattern noise. IEEE Transactions on Information Forensics and Security 1, 2 (2006),
205–214.
[30] Marr, D., Binns, F., Hill, D., Hinton, G., Koufaty, D., et al. Hyper-threading
technology in the netburst® microarchitecture. Hot Chips (2002).
[31] Mondri, R., and Bitan, S. Inspected secure communication protocol, Sept. 1
2009. US Patent 7,584,505.
[32] Nguyen, K. T., Laurent, M., and Oualha, N. Survey on secure communication
protocols for the internet of things. Ad Hoc Networks 32 (2015), 17–31.
[33] Pang, J., Greenstein, B., Gummadi, R., Seshan, S., and Wetherall, D. 802.11
user fingerprinting. In MobiCom (2007), ACM, pp. 99–110.
[34] Radhakrishnan, S. V., Uluagac, A. S., and Beyah, R. Gtid: A technique for
physical device and device type fingerprinting. IEEE Transactions on Dependable
Table 3: Experimental devices and their detailed specifications. A total of 90 devices are used, including 70 laptops and 20
smartphones. Among them, 1-30, 31-33, 50-51, 84-85 and 88-89 are of the same model and OS respectively.
No.
Manuf.
Model
OS
Model
Core Number Thread Number Test Point
CPU Parameters
1-30
31-33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50-51
52
53
54
55