title:An information-theoretic approach to traffic matrix estimation
author:Yin Zhang and
Matthew Roughan and
Carsten Lund and
David L. Donoho
An Information-Theoretic Approach to Trafﬁc Matrix
Estimation
Yin Zhang Matthew Roughan Carsten Lund
AT&T Labs – Research
(yzhang,roughan,lund)@research.att.com
David Donoho
Stanford University
PI:EMAIL
ABSTRACT
Trafﬁc matrices are required inputs for many IP network manage-
ment tasks: for instance, capacity planning, trafﬁc engineering and
network reliability analysis. However, it is difﬁcult to measure these
matrices directly, and so there has been recent interest in inferring
trafﬁc matrices from link measurements and other more easily mea-
sured data. Typically, this inference problem is ill-posed, as it in-
volves signiﬁcantly more unknowns than data. Experience in many
scientiﬁc and engineering ﬁelds has shown that it is essential to
approach such ill-posed problems via “regularization”. This paper
presents a new approach to trafﬁc matrix estimation using a regular-
ization based on “entropy penalization”. Our solution chooses the
trafﬁc matrix consistent with the measured data that is information-
theoretically closest to a model in which source/destination pairs are
stochastically independent. We use fast algorithms based on mod-
ern convex optimization theory to solve for our trafﬁc matrices. We
evaluate the algorithm with real backbone trafﬁc and routing data,
and demonstrate that it is fast, accurate, robust, and ﬂexible.
Categories and Subject Descriptors
C.2.3 [Computer-Communications Networks]: Network Opera-
tions—network monitoring; C.2.5 [Computer-Communications Net-
works]: Local and Wide-Area Networks—Internet
General Terms
Measurement, Performance
Keywords
Trafﬁc Matrix Estimation, Information Theory, Minimum Mutual
Information, Regularization, Trafﬁc Engineering, SNMP.
1.
INTRODUCTION
A point-to-point trafﬁc matrix gives the volume of trafﬁc between
origin/destination pairs in some network. Trafﬁc matrices are re-
quired inputs for many IP network management tasks: for instance,
capacity planning, trafﬁc engineering and network reliability analy-
sis. However, it is difﬁcult to measure these matrices directly, and so
there is interest in inferring trafﬁc matrices from link load statistics
and other more easily measured data [24, 23, 3, 16, 28].
Trafﬁc matrices may be estimated or measured at varying levels
of detail [15]: between Points-of-Presence (PoPs) [16], routers [28],
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’03, August 25–29, 2003, Karlsruhe, Germany.
Copyright 2003 ACM 1-58113-735-4/03/0008 ...$5.00.
links, or even IP preﬁxes [8]. The ﬁner grained trafﬁc matrices are
generally more useful, for example, in the analysis of the reliability
of a network under a component failure. During a failure, IP trafﬁc
is rerouted to ﬁnd the new path through the network, and one wishes
to test if this would cause a link overload anywhere in the network.
Failure of a link within a PoP may cause trafﬁc to reroute via al-
ternate links within the PoP without changing the inter-PoP routing.
Thus to understand failure loads on the network we must measure
trafﬁc at a router-to-router level. In general, the inference problem is
more challenging at ﬁner levels of detail, the ﬁnest so far considered
being router-to-router.
The challenge lies in the ill-posed nature of the problem: for a
network with N ingress/egress points we need to estimate the N2
origin/destination demands. At a PoP level N is in the tens, at a
router level N may be in the hundreds, at a link level N may be tens
of thousands, and at the preﬁx level N may be of the order of one
hundred thousand. However, the number of pieces of information
available, the link measurements, remains approximately constant.
One can see the difﬁculty — for large N the problem becomes mas-
sively underconstrained.
There is extensive experience with ill-posed linear inverse prob-
lems from ﬁelds as diverse as seismology, astronomy, and medical
imaging [1, 2, 17, 18, 26], all leading to the conclusion that some
sort of side information must be brought in, producing a result which
may be good or bad depending on the quality of this information.
All of the previous work on IP trafﬁc matrix estimation has incor-
porated prior information: for instance, Vardi [24] and Tebaldi and
West [23] assume a Poisson trafﬁc model, Cao et al. [3] assume
a Gaussian trafﬁc model, Zhang et al. [28] assume an underlying
gravity model, and Medina et al. [16] assume a logit-choice model.
Each method is sensitive to the accuracy of this prior: for instance,
[16] showed that the methods in [24, 23, 3] were sensitive to their
prior assumptions, while [28] showed that their method’s perfor-
mance was improved if the prior (the so called gravity model) was
generalized to more accurately reﬂect realistic routing rules.
In contrast, this paper starts from a regularization formulation of
the problem drawn from the ﬁeld of ill-posed problems, and derives
a prior distribution that is most appropriate to this problem. Our
prior assumes source/destination independence, until proven other-
wise by measurements. The method then blends measurements with
prior information, producing the reconstruction closest to indepen-
dence, but consistent with the measured data. The method proceeds
by solving an optimization problem that is understandable and in-
tuitively appealing. This approach allows a convenient implemen-
tation using modern optimization software, with the result that the
algorithm is very efﬁcient.
We test the estimation algorithm extensively on network trafﬁc
and topology data from an operational backbone ISP. The results
show that the algorithm is fast, and accurate for point-to-point trafﬁc
matrix estimation. We also test the algorithm on topologies gener-
ated through the Rocketfuel project [21, 14, 22] to resemble alter-
native ISPs, providing useful insight into where the algorithm will
Given the complexity and ill-posed nature of the point-to-multipoint
problem, one is tempted to throw his arms in the air and say: “we
cannot solve the point-to-multipoint problem with link level data;
we need better information (for instance from Netﬂow [8]).” This
paper shows, however, that by adopting the regularization approach
above it is possible to make some progress towards solving this
problem. We cannot estimate demand matrices at the ideal level
of detail (preﬁx level), because the data at our disposal (SNMP link
loads) cannot distinguish preﬁxes. However, the operational reali-
ties of large networks make a simpliﬁcation to router level practical,
and useful. Using these simpliﬁcations we present a method for
estimating the point-to-multipoint demand matrices, though in this
paper we only test these implicitly to make the results more directly
comparable to previous work.
work well. One interesting side result is that there is a relationship
between the network trafﬁc and topology that is beneﬁcial in this
estimation problem. We also test the sensitivity of the algorithm
to measurements errors, demonstrating that the algorithm is highly
robust to errors, and missing data in the trafﬁc measurements.
Our approach also allows us to address the problem of estimating
point-to-multipoint demand matrices. As shown in [8], point-to-
point trafﬁc matrices are not always enough for applications. Under
some failures the trafﬁc may actually change its origin and desti-
nation; its network entry and exit points. The point-to-point trafﬁc
matrix will be altered, because the point-to-point trafﬁc matrix de-
scribes the “carried” load on the network between two points. The
demand matrix, which describes the “offered” load for an IP net-
work, is point-to-multipoint. To understand this, consider a packet
entering a backbone ISP through a customer link, destined for an-
other backbone ISP’s customer. Large North-American backbone
providers typically are connected at multiple peering points. Our
packet could reach its ﬁnal destination through any of these peering
links; the actual decision is made through a combination of Bor-
der Gateway Protocol (BGP) and Interior Gateway Protocol (IGP)
routing protocols. If the normal exit link fails, then the routing pro-
tocols would choose a different exit point. In a more complicated
scenario, the recipient of the packet might be multi-homed — that
is, connected to more than one ISP. In this case the packet may exit
the ﬁrst ISP through multiple sets of peering links. Finally, even sin-
gle homed customers may sometimes be reached through multiple
inter-AS (Autonomous System) paths.
An advantage of the approach used in this paper is that it also
provides some insight into alternative algorithms. For instance, the
simple gravity model of [28] is equivalent to complete independence
of source and destination, while the generalized gravity model cor-
responds to independence conditional on source and destination link
classes. Furthermore, the algorithm of [28] is a ﬁrst-order approx-
imation of the algorithm presented here, explaining the success of
that algorithm, and suggesting that it also can be extended to mea-
sure point-to-multipoint demand matrices. Our method opens up
further opportunities for extensions, given the better understanding
of the importance of prior information about network trafﬁc and how
it can be incorporated into the process of ﬁnding trafﬁc matrices. For
instance, an appealing alternative prior generation procedure is pro-
posed in [16] (this idea is suggested in [16] but the mechanism to
do so is not explored). Alternatively, the Bayesian method of [23]
can be placed into the optimization framework here, with a different
penalty function, as could the methods of [24, 3].
Finally, we examine some alternative measurement strategies that
could beneﬁt our estimates. We examine two possibilities: the ﬁrst
(suggested in [16]) is to make direct measurements of some rows of
the trafﬁc matrix, the second is to measure local trafﬁc matrices as
suggested in [25]. Both result in improvements in accuracy, how-
ever, we found in contrast to [16] that the order in which rows of the
trafﬁc matrix are included does matter — adding rows in order of
the largest row sum ﬁrst is better than random ordering.
To summarize, this paper demonstrates a speciﬁc tool that works
well on large scale point-to-point trafﬁc matrix estimation, and can
be extended in a number of ways, for instance to compute point-to-
multipoint demand matrices. The results show that it is important
to add appropriate prior information. Our prior information is based
on independence-until-proven-otherwise, which is plausible, com-
putationally convenient, and results in accurate estimates.
The paper begins in Section 2 with some background: deﬁnitions
of terminology and descriptions of the types of data available. Sec-
tion 3 describes the regularization approach used here, and our al-
gorithm, followed by Section 4, the evaluation methodology, and
Section 5, which shows the algorithm’s performance on a large set
of measurements from an operational tier-1 ISP. Section 6 exam-
ines the algorithm’s robustness to errors in its inputs, and Section 7
shows the ﬂexibility of the algorithm to incorporate additional in-
formation. We conclude the paper in Section 8.
2. BACKGROUND
2.1 Network
An IP network is made up of routers and adjacencies between
those routers, within a single AS or administrative domain. It is nat-
ural to think of the network as a set of nodes and links, associated
with the routers and adjacencies, as illustrated in Figure 1. We re-
fer to routers and links that are wholly internal to the network as
Backbone Routers (BRs) and links, and refer to the others as Edge
Routers (ERs) and links.
One could compute trafﬁc matrices with different levels of ag-
gregation at the source and destination end-points, for instance, at
the level of PoP to PoP, or router to router, or link to link [15]. In
this paper, we are primarily interested in computing router to router
trafﬁc matrices, which are appropriate for a number of network and
trafﬁc engineering applications, and can be used to construct more
highly aggregated trafﬁc matrices (e.g. PoP to PoP) using topology
information [15]. We may further specify the trafﬁc matrix to be
between BRs, by aggregating up to this level.
Peer A
Peer B
Peers
Peering Links
IP Network Backbone
Access Links
Customers
Figure 1: IP network components and terminology
In addition, it is helpful for IP networks managed by Internet Ser-
vice Providers (ISPs) to further classify the edge links. We cate-
gorize the edge links into access links, connecting customers, and
peering links, which connect other (non-customer) autonomous sys-
tems. A signiﬁcant fraction of the trafﬁc in an ISP is inter-domain
and is exchanged between customers and peer networks. Today traf-
ﬁc to peer networks is largely focused on dedicated peering links, as
illustrated in Figure 1. Under the typical routing policies imple-
mented by large ISPs, very little trafﬁc will transit the backbone
from one peer to another. Transit trafﬁc between peers may reﬂect
a temporary step in network consolidation following an ISP merger
or acquisition, but should not occur under normal operations.
In large IP networks, distributed routing protocols are used to
build the forwarding tables within each router. It is possible to pre-
dict the results of these distributed computations from data gathered
from router conﬁguration ﬁles, or a route monitor such as [19]. In
our investigation, we employ a routing simulator such as in [7] that
makes use of this routing information to compute a routing matrix.
We also simulate load balancing across multiple shortest paths.
2.2 Trafﬁc Data
In IP networks today, link load measurements are readily avail-
able via the Simple Network Management Protocol (SNMP). SNMP
is unique in that it is supported by essentially every device in an IP
network. The SNMP data that is available on a device is deﬁned
in a abstract data structure known as a Management Information
Base (MIB). An SNMP poller periodically requests the appropriate
SNMP MIB data from a router (or other device). Since every router
maintains a cyclic counter of the number of bytes transmitted and re-
ceived on each of its interfaces, we can obtain basic trafﬁc statistics
for the entire network with little additional infrastructure (a poller).
The properties of data gathered via SNMP are important for the
implementation of a useful algorithm — SNMP data has many lim-
itations. Data may be lost in transit (SNMP uses unreliable UDP
transport; copying to our research archive may also introduce loss).
Data may be incorrect (through poor router vendor implementa-
tions). The sampling interval is coarse (in our case 5 minutes).
Many of the typical problems in SNMP data may be mitigated by
using hourly trafﬁc averages (of ﬁve minute data), and we shall use
this approach. The problems with the ﬁner time-scale data make
time-series approaches to trafﬁc matrix estimation more difﬁcult.
We use ﬂow level data in this paper for validation purposes. This
data is collected at the router which aggregates trafﬁc by IP source
and destination address, and port numbers. This level of granularity
is sufﬁcient to obtain a real trafﬁc matrix [8], and in the future such
measurement may provide direct trafﬁc matrix measurements, but
at present limitations in vendor implementations prevent collection
of this data from the entire network.
2.3 Information Theory
Information theory is of course a standard tool in communications
systems [12], but a brief review will set up our terminology. We
begin with basic probabilistic notation: we deﬁne pX(x) to mean
the probability that a random variable X is equal to x. We shall
typically abuse this notation (where it is clear) and simply write
p(x) = pX(x). Suppose for sake of discussion that X and Y are
independent random variables, then
p(x, y) = p(x)p(y),
(1)
i.e. the joint distribution is the product of its marginals. This can be
equivalently written using the conditional probability
p(x|y) = p(x).
(2)
In this paper we shall typically use, rather than the standard random
variables X and Y , S and D, the source S and the destination D
of a packet (or bit). Thus p(d|s) is the conditional probability of a
packet (bit) exiting the network at D = d, given that it entered at
S = s, and p(d) is the unconditional probability of a packet (bit)
going to D = d.
We can now deﬁne the Discrete Shannon Entropy of a discrete
random variable X taking values xi as
H(X) = −Xi
p(xi) log2 p(xi),
(3)
The entropy is a measure of the uncertainty about the outcome of
X. For instance, if X = x1 with certainty, then H(X) = 0, and
H(X) takes its maximum value when X is uniformly distributed —
that is, when the uncertainty about its value is greatest.
We can also deﬁne the conditional entropy of one random variable
Y with respect to another X by
H(Y |X) = −Xj
p(xi)Xi
p(yi|xi) log2 p(yi|xi),
(4)
where p(yi|xi) is the probability that Y = yi conditional on X =
xi. H(Y |X) can be thought of as the uncertainty remaining about
Y given that we are informed of the outcome of X. Notice that the
joint entropy of X and Y can be shown to be
H(X, Y ) = H(X) + H(Y |X).
We can also deﬁne the Shannon information
I(Y |X) = H(Y ) − H(Y |X),
(5)
(6)
which therefore represents the decrease in uncertainty about Y from
measurement of X, or the information that we gain about Y from
X. The information is symmetric, I(X|Y ) = I(Y |X) and so we
can refer to this as the mutual information of X and Y , and write
as I(X, Y ). Note that I(X, Y ) ≥ 0, with equality if and only if X
and Y are independent — when X and Y are independent X gives
us no additional information about Y .
The mutual information can be written in a number of ways, but
here we write it
p(x, y) log2