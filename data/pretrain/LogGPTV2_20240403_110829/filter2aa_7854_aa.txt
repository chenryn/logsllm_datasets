---
title: C++
date: 2021-06-01 11:51:44
background: bg-[#6d94c7]
tags:
categories:
  - Programming
intro: |
    C++ quick reference cheat sheet that provides basic syntax and methods.
plugins:
    - copyCode
---
Getting Started
--------
### hello.cpp
```cpp
#include 
int main() {
    std::cout > num;
std::cout 
void hello(); // Declaring
int main() {  // main function
    hello();    // Calling
}
void hello() { // Defining
    std::cout 
namespace ns1 {int val(){return 5;}}
int main()
{
    std::cout 
namespace ns1 {int val(){return 5;}}
using namespace ns1;
using namespace std;
int main()
{
    cout  marks; // Definition
marks[0] = 92;
marks[1] = 97;
marks[2] = 98;
// Define and initialize
std::array = {92, 97, 98};
// With empty members
std::array marks = {92, 97};
std::cout  marks = {92, 97, 98, 99, 98, 94};
// Print first element
std::cout > marks[2];
```
### Displaying
```cpp
char ref[5] = {'R', 'e', 'f'};
// Range based for loop
for (const int &n : ref) {
    std::cout = 90) {
    std::cout = 80) {
    std::cout = 70) {
    std::cout = 60)
    std::cout  b`  | a is greater b               |
| `a = b` | a is greater or equal to b   |
#### Assignment Operators
| Example  | Equivalent to   |
|----------|-----------------|
| `a += b` | _Aka_ a = a + b |
| `a -= b` | _Aka_ a = a - b |
| `a *= b` | _Aka_ a = a * b |
| `a /= b` | _Aka_ a = a / b |
| `a %= b` | _Aka_ a = a % b |
#### Logical Operators
| Example        | Meaning                |
|----------------|------------------------|
| `exp1 && exp2` | Both are true _(AND)_  |
| `exp1 || exp2` | Either is true _(OR)_  |
| `!exp`         | `exp` is false _(NOT)_ |
#### Bitwise Operators
| Operator | Description             |
|----------|-------------------------|
| `a & b`  | Binary AND              |
| `a | b`  | Binary OR               |
| `a ^ b`  | Binary XOR              |
| `~ a`    | Binary One's Complement |
| `a > b` | Binary Shift Right      |
### Ternary Operator
```
           ┌── True ──┐
Result = Condition ? Exp1 : Exp2;
           └───── False ─────┘
```
---
```cpp
int x = 3, y = 5, max;
max = (x > y) ? x : y;
// Outputs: 5
std::cout  y) {
    max = x;
} else {
    max = y;
}
// Outputs: 5
std::cout  0; i++) {
    std::cout 
int main()
{
    auto print = [](int num) { std::cout  arr = {1, 2, 3, 4};
    std::for_each(arr.begin(), arr.end(), print);
    return 0;
}
```
### Range-based (Since C++11)
```cpp
for (int n : {1, 2, 3, 4, 5}) {
    std::cout << n << " ";
}
// Outputs: 1 2 3 4 5
```
---
```cpp
std::string hello = "QuickRef.ME";
for (char c: hello)
{