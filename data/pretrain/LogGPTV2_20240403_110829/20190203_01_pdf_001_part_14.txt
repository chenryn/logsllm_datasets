 USAGE privilege on schema _edb_replicator_pub.
 USAGE privilege on sequence rrep_tx_seq.
 INSERT privileges on the shadow tables corresponding to publication tables in
which the role will be inserting, updating, or deleting rows. Shadow tables follow
the naming convention rrst_schema_table. Note that shadow tables exist
only if the trigger-based method of synchronization is to be used.
The following example shows the creation of a new role and the granting of the
privileges on the publication tables and the control schema objects to the role for the
trigger-based method of synchronization replication:
CREATE ROLE newuser WITH LOGIN PASSWORD 'password';
GRANT USAGE ON SCHEMA edb TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.dept TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.emp TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.jobhist TO newuser;
GRANT USAGE ON SCHEMA _edb_replicator_pub TO newuser;
GRANT USAGE ON SEQUENCE _edb_replicator_pub.rrep_tx_seq TO newuser;
GRANT INSERT ON _edb_replicator_pub.rrst_edb_dept TO newuser;
GRANT INSERT ON _edb_replicator_pub.rrst_edb_emp TO newuser;
GRANT INSERT ON _edb_replicator_pub.rrst_edb_jobhist TO newuser;
When using the log-based method a role needs access to the publication tables and to
certain control schema objects as well under certain circumstances.
When using the log-based method of synchronization replication, a role must be granted
the following privileges on the control schema objects if the role is to be permitted to use
the TRUNCATE command on the publication tables:
 USAGE privilege on schema _edb_replicator_pub.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 152
EDB Postgres Replication Server User’s Guide
 INSERT privilege on table
_edb_replicator_pub.rrep_wal_events_queue.
The following example shows the creation of a new role and the granting of the
privileges on the publication tables to the role for the log-based method of
synchronization replication:
CREATE ROLE newuser WITH LOGIN PASSWORD 'password';
GRANT USAGE ON SCHEMA edb TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.dept TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.emp TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.jobhist TO newuser;
In addition, if the TRUNCATE command is to be permitted on the publication tables, grant
the following additional privileges:
GRANT TRUNCATE ON edb.dept TO newuser;
GRANT TRUNCATE ON edb.emp TO newuser;
GRANT TRUNCATE ON edb.jobhist TO newuser;
GRANT USAGE ON SCHEMA _edb_replicator_pub TO newuser;
GRANT INSERT ON _edb_replicator_pub.rrep_wal_events_queue TO newuser;
5.1.5 Preparing the Subscription Database
This section discusses the preparation of a database that will be used as a subscription
database.
The tables and views in a given publication must all be replicated to the same database.
This database is called the subscription database. A subscription database user name
must be created with the following characteristics:
 The subscription database user can connect to the subscription database.
 The subscription database user has the privileges to create database objects for the
replicated tables and views from publications.
 The subscription database user has the privileges necessary to execute the
TRUNCATE command on the replicated tables.
See Section 5.1.5.1 for preparation of a Postgres subscription database. See Section
5.1.5.2 for preparation of an Oracle subscription database. See Section 5.1.5.3 for
preparation of a SQL Server subscription database.
5.1.5.1 Postgres Subscription Database
A database user name must be chosen or created to serve as the subscription database
user. The user name must have a password. The subscription database user becomes the
owner of the replicated database objects.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 153
EDB Postgres Replication Server User’s Guide
When creating the subscription database definition, the subscription database user name
is entered in the Subscription Service – Add Database dialog box (see Section 5.3.2).
The subscription database user must also have the ability to run the TRUNCATE command
on the subscription tables. This requires the following:
 The subscription database user must have superuser privileges.
 The subscription database user must have the ability to modify the system catalog
tables in order to disable foreign key constraints on subscription tables. (See
appendix Section 10.4.4 for more information on this requirement.)
You have the following two choices for choosing the subscription database user name:
 Use the Postgres user name postgres created upon installation of PostgreSQL
(enterprisedb for Advanced Server installed in Oracle compatible
configuration mode) for the subscription database user name. If you choose this
option, skip Step 1 and proceed to Step 2.
 Create a new subscription database user name. For this option, proceed to Step 1.
Step 1: Create a superuser as the subscription database user.
CREATE ROLE subuser WITH LOGIN SUPERUSER PASSWORD 'password';
Step 2: Create or choose the subscription database.
The names of the schemas containing the publication tables and views become the names
of the Postgres schemas for the subscription tables. The subscription server creates these
schemas in the subscription database when the subscription is created. If schemas with
these names already exist in the subscription database, the existing schemas will be used
to store the subscription tables.
For a SQL Server publication database: If the schema containing the publication tables
and views in SQL Server is named dbo, then the subscription server creates a schema
named dbo_sql in the Postgres subscription database for the subscription tables.
(Schema dbo is a special reserved schema in Postgres.)
The existing schemas must not contain any tables or views with the same names as the
publication tables and views. The subscription server returns an error if there are already
identically named tables or views. You must delete or rename these tables and views
before the subscription can be created.
A new subscription database owned by the subscription database user subuser can be
created with the following:
CREATE DATABASE subdb OWNER subuser;
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 154
EDB Postgres Replication Server User’s Guide
5.1.5.2 Oracle Subscription Database
Step 1 (Optional): If you do not have an existing database that you want to use as your
subscription database, create a new database. This step can be fairly complicated. Refer
to the appropriate Oracle documentation for performing this task.
Step 2: Create a database user name for the subscription database user. The subscription
database user name must have a password, and it must have the ability to create a
database session. The subscription database user becomes the owner of the replicated
database objects.
Note (For Oracle 12c Pluggable Database): The subscription database user can be an
Oracle local user or a common user. The local user exists within and has access to only a
single, user-created pluggable database (PDB), which is to be used as the subscription
database. Common user names typically begin with C## or c## and can access multiple
pluggable databases.
Note (For Oracle 12c Pluggable Database): Creation and granting of privileges for a
local user must be done while connected to the pluggable database to be used as the
subscription database. Creation of a common user must be done within the Oracle 12c
root container CDB$ROOT. Granting of privileges to the common user must be done while
connected to the pluggable database to be used as the subscription database.
Note (For Oracle 12c Non-Container Database): Creation and granting of privileges to
the subscription database user are performed in the same manner as for Oracle versions
prior to 12c.
When creating the subscription database definition, the subscription database user name
is entered in the Subscription Service – Add Database dialog box (see Section 5.3.2).
CREATE USER subuser IDENTIFIED BY password;
GRANT CONNECT TO subuser;
Step 3: Grant the privileges needed to create the replicated database objects.
The replicated database objects are created in the schema owned by, and with the same
name as the subscription database user.
GRANT RESOURCE TO subuser;
Step 4 (For Oracle 12c only): Grant the privileges required to access tablespaces. The
GRANT UNLIMITED TABLESPACE privilege must be granted to the subscription
database user. This requirement applies to both a pluggable database and a non-container
database.
GRANT UNLIMITED TABLESPACE TO subuser;
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 155
EDB Postgres Replication Server User’s Guide
5.1.5.3 SQL Server Subscription Database
Step 1: Create or choose the subscription database.
The names of the schemas containing the publication tables and views become the names
of the SQL Server schemas for the subscription tables. The subscription server creates
these schemas in the subscription database when the subscription is created. If schemas
with these names already exist in the subscription database, the existing schemas will be
used to store the subscription tables.
Note: If the schema containing the publication tables and views is named public, then
the subscription server creates a schema named public_sql in the SQL Server
subscription database for the subscription tables.
The existing schemas must not contain any tables or views with the same names as the
publication tables and views. The subscription server returns an error if there are already
identically named tables or views. You must delete or rename these tables and views
before the subscription can be created.
A new subscription database can be created as shown by the following:
USE master;
GO
CREATE DATABASE subdb;
GO
Step 2: Create a SQL Server login for the subscription database user. The login must
have a password.
When creating the subscription database definition, the SQL Server login is entered in the
Subscription Service – Add Database dialog box (see Section 5.3.2).
CREATE LOGIN subuser WITH PASSWORD = 'password';
GO
Step 3: In the subscription database, a database user must exist that is to be the creator
and owner of the subscription tables. This database user must be mapped to the SQL
Server login created in Step 2.
In this example, the database user is given the same name as the SQL Server login
subuser.
USE subdb;
GO
CREATE USER subuser FOR LOGIN subuser;
GO
Step 4: Grant the database level privileges needed by the subscription database user to
create the schema and tables for the subscription.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 156
EDB Postgres Replication Server User’s Guide
GRANT CREATE SCHEMA TO subuser;
GRANT CREATE TABLE TO subuser;
GO
5.1.6 Verifying Host Accessibility
If more than one computer is used to host the components of the replication system, each
computer must be able to communicate with the others on a network.
There are a number of different aspects of this topic as discussed in the following
sections.
5.1.6.1 Firewalls and Access to Ports
Verify that the firewalls on the hosts allow access from the other hosts running
replication system components. Refer to the directions for your host’s operating system
to enable accessibility.
In addition if you are running the xDB Replication Console or the xDB Replication
Server CLI on a different host than where the publication server or subscription server are
running, be sure the firewall on the host running these servers allows access to the ports
used by the publication server and subscription server.
The xDB Replication Console and xDB Replication Server CLI access the publication
server and the subscription server using Java Remote Method Invocation (RMI) through
the designated ports.
The publication server uses the port number you specified on the Publication Server
Details screen in Step 16 of Section 3.1 as well the port offset by a value of 2 greater than
this specified port number. So for a default publication server installation, access is
required for port numbers 9051 and 9053.
The subscription server uses the port number you specified on the Subscription Server
Details screen in Step 17 of Section 3.1 as well as the port offset by a value of 2 greater
than this specified port number. So for a default subscription server installation, access is
required for port numbers 9052 and 9054.
When you install xDB Replication Server, the port numbers you specify for the
publication server and the subscription server are stored in the xDB Startup Configuration
file as shown by the following example. See Section 2.3.1.4 for information on the xDB
Startup Configuration file.
#!/bin/sh
JAVA_EXECUTABLE_PATH="/usr/bin/java"
JAVA_MINIMUM_VERSION=1.7
JAVA_BITNESS_REQUIRED=64
JAVA_HEAP_SIZE="-Xms256m -Xmx1536m"
PUBPORT=9051
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 157
EDB Postgres Replication Server User’s Guide
SUBPORT=9052
If you want to use different port numbers, modify the PUBPORT and SUBPORT entries in
the xDB Startup Configuration file and restart the publication server and subscription
server.
Note: If you change the port numbers for the publication server or subscription server for
which there are existing replication systems, there are additional updates you must
perform upon these existing replication systems. See Section 7.6.1.2 for changes that
must be made for the publication server metadata in the control schema if the port
number used by the subscription server has been changed. See Section 5.5.3 for changes
that must be made for the subscription metadata in the control schema if the port number
used by the publication server has been changed.
5.1.6.2 Network IP Addresses
When configuring a replication system, you must supply the network location of various
components such as the publication server, subscription server, publication database
server, and subscription database server. This information, consisting of the component’s
IP address and port number, is stored in the control schema.
When one component needs to access another, it refers to the network location stored in
the control schema.
During replication system configuration it is strongly suggested that you supply the
actual network IP address of each component and avoid the usage of the loopback
address, localhost or 127.x.x.x, even if all components are running on the same host.
You can obtain the network IP address using the following command:
For Linux only: Use the /sbin/ifconfig command.
For Windows only: Open a Command Prompt window and use the ipconfig
command.
The loopback address works as long as the communicating components are on the same
host, but if at some future point, you decide to move a component to a different host on
the network, the loopback address stored as the component’s network address in the
control schema will no longer work for the component trying to make the connection.
For Linux only: You may need to modify the /etc/hosts file so that a host’s network
IP address is associated with the host’s name.
Note: For an alternative to modifying the /etc/hosts file see Section 10.4.1.7.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 158
EDB Postgres Replication Server User’s Guide
The default configuration on Linux systems associates the host name with the loopback
address in the /etc/hosts file as shown by the following example:
127.0.0.1 localhost.localdomain localhost
This is also verified by using the hostname -i command, which returns the IP address
associated with the host name:
$ hostname -i
127.0.0.1
In these circumstances, certain xDB Replication Server components will have trouble
locating its other components on the network as in the following cases:
 When the user interface attempts to connect to the publication server or
subscription server
 When the subscription server attempts to connect to the publication server
If the loopback address 127.x.x.x is returned such as in the preceding example, edit the
/etc/hosts file so that the network IP address is associated with the host name instead.
The following example shows the modified /etc/hosts file so that the host name
localhost is now associated with the network IP address 192.168.2.22 instead of
the loopback address 127.0.0.1:
#127.0.0.1 localhost.localdomain localhost
192.168.2.22 localhost.localdomain localhost
::1 localhost6.localdomain6 localhost6
On some Linux systems, you may need to restart the network service after you have
modified the /etc/hosts file. This may be done a number of different ways depending
upon the Linux system you are using as shown by the following variations:
service network restart
/etc/init.d/networking restart
sudo /etc/init.d/networking restart
The following example illustrates the service network command:
$ su root
Password:
$ service network restart
Shutting down loopback interface: [ OK ]
Bringing up loopback interface: [ OK ]
Use the following command for CentOS 7 or RHEL 7:
systemctl restart network
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 159
EDB Postgres Replication Server User’s Guide
The hostname -i command now returns the network IP address of the host:
$ hostname -i
192.168.2.22
5.1.6.3 Postgres Server Authentication
A Postgres database server uses the host-based authentication file, pg_hba.conf, to
control access to the databases in the database server.
You need to modify the pg_hba.conf file in the following locations:
 On each Postgres database server that contains a Postgres publication database
 On each Postgres database server that contains a Postgres subscription database
In a default Postgres installation, this file is located in the directory
POSTGRES_INSTALL_HOME/data.
The modifications needed to the pg_hba.conf file for each of the aforementioned cases
are discussed in the following sections.
Postgres Publication Database
For a Postgres publication database, the following is needed to allow access to the
publication database:
host pub_dbname pub_dbuser pub_ipaddr/32 md5
host pub_dbname pub_dbuser sub_ipaddr/32 md5
The value you substitute for pub_dbname is the name of the Postgres publication
database you intend to use. The value you substitute for pub_dbuser is the publication
database user name you created in Step 1 of Section 5.1.4.3.
For a Postgres publication database named edb, the resulting pg_hba.conf file appears
as follows:
# TYPE DATABASE USER ADDRESS METHOD
# "local" is for Unix domain socket connections only
local all all md5
# IPv4 local connections:
host edb pubuser 192.168.2.22/32 md5
host all all 127.0.0.1/32 md5
# IPv6 local connections:
host all all ::1/128 md5
# Allow replication connections from localhost, by a user with the
# replication privilege.
#local replication enterprisedb md5
#host replication enterprisedb 127.0.0.1/32 md5
#host replication enterprisedb ::1/128 md5
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 160