### Privileges for Synchronization Replication

#### Trigger-Based Method
For the trigger-based method of synchronization replication, the following privileges are required:

- **USAGE** privilege on the schema `_edb_replicator_pub`.
- **USAGE** privilege on the sequence `rrep_tx_seq`.
- **INSERT** privileges on the shadow tables corresponding to the publication tables. Shadow tables follow the naming convention `rrst_schema_table` and exist only if the trigger-based method is used.

**Example:**
```sql
CREATE ROLE newuser WITH LOGIN PASSWORD 'password';
GRANT USAGE ON SCHEMA edb TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.dept TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.emp TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.jobhist TO newuser;
GRANT USAGE ON SCHEMA _edb_replicator_pub TO newuser;
GRANT USAGE ON SEQUENCE _edb_replicator_pub.rrep_tx_seq TO newuser;
GRANT INSERT ON _edb_replicator_pub.rrst_edb_dept TO newuser;
GRANT INSERT ON _edb_replicator_pub.rrst_edb_emp TO newuser;
GRANT INSERT ON _edb_replicator_pub.rrst_edb_jobhist TO newuser;
```

#### Log-Based Method
For the log-based method of synchronization replication, the role needs access to the publication tables and certain control schema objects under specific circumstances. If the role is to be permitted to use the `TRUNCATE` command on the publication tables, the following additional privileges are required:

- **USAGE** privilege on the schema `_edb_replicator_pub`.
- **INSERT** privilege on the table `_edb_replicator_pub.rrep_wal_events_queue`.

**Example:**
```sql
CREATE ROLE newuser WITH LOGIN PASSWORD 'password';
GRANT USAGE ON SCHEMA edb TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.dept TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.emp TO newuser;
GRANT SELECT, INSERT, UPDATE, DELETE ON edb.jobhist TO newuser;

-- Additional privileges for TRUNCATE command
GRANT TRUNCATE ON edb.dept TO newuser;
GRANT TRUNCATE ON edb.emp TO newuser;
GRANT TRUNCATE ON edb.jobhist TO newuser;
GRANT USAGE ON SCHEMA _edb_replicator_pub TO newuser;
GRANT INSERT ON _edb_replicator_pub.rrep_wal_events_queue TO newuser;
```

### Preparing the Subscription Database

This section covers the preparation of a database that will be used as a subscription database. The tables and views in a given publication must all be replicated to the same database, known as the subscription database.

#### Requirements for the Subscription Database User
- The user can connect to the subscription database.
- The user has the necessary privileges to create database objects for the replicated tables and views from publications.
- The user has the necessary privileges to execute the `TRUNCATE` command on the replicated tables.

#### Postgres Subscription Database

1. **Choose or Create a Subscription Database User:**
   - The user must have a password.
   - The user becomes the owner of the replicated database objects.

2. **Create the Subscription Database:**
   - The names of the schemas containing the publication tables and views become the names of the Postgres schemas for the subscription tables.
   - If schemas with these names already exist, they will be used to store the subscription tables.
   - For SQL Server publications, if the schema is named `dbo`, a schema named `dbo_sql` is created in the Postgres subscription database.

3. **Grant Necessary Privileges:**
   - The user must have superuser privileges.
   - The user must have the ability to modify system catalog tables to disable foreign key constraints on subscription tables.

**Example:**
```sql
-- Step 1: Create a superuser as the subscription database user
CREATE ROLE subuser WITH LOGIN SUPERUSER PASSWORD 'password';

-- Step 2: Create or choose the subscription database
CREATE DATABASE subdb OWNER subuser;
```

#### Oracle Subscription Database

1. **Create or Choose a Subscription Database (Optional):**
   - Refer to Oracle documentation for creating a new database.

2. **Create a Database User:**
   - The user must have a password and the ability to create a database session.
   - The user becomes the owner of the replicated database objects.

3. **Grant Necessary Privileges:**
   - Grant the `RESOURCE` role.
   - Grant `UNLIMITED TABLESPACE` privilege.

**Example:**
```sql
-- Step 2: Create a database user name for the subscription database user
CREATE USER subuser IDENTIFIED BY password;
GRANT CONNECT TO subuser;

-- Step 3: Grant the privileges needed to create the replicated database objects
GRANT RESOURCE TO subuser;

-- Step 4: Grant the privileges required to access tablespaces
GRANT UNLIMITED TABLESPACE TO subuser;
```

#### SQL Server Subscription Database

1. **Create or Choose the Subscription Database:**
   - The names of the schemas containing the publication tables and views become the names of the SQL Server schemas for the subscription tables.
   - If the schema is named `public`, a schema named `public_sql` is created in the SQL Server subscription database.

2. **Create a SQL Server Login:**
   - The login must have a password.

3. **Create a Database User:**
   - Map the database user to the SQL Server login.

4. **Grant Necessary Privileges:**
   - Grant `CREATE SCHEMA` and `CREATE TABLE` privileges.

**Example:**
```sql
-- Step 1: Create or choose the subscription database
USE master;
GO
CREATE DATABASE subdb;
GO

-- Step 2: Create a SQL Server login for the subscription database user
CREATE LOGIN subuser WITH PASSWORD = 'password';
GO

-- Step 3: Create a database user mapped to the SQL Server login
USE subdb;
GO
CREATE USER subuser FOR LOGIN subuser;
GO

-- Step 4: Grant the database level privileges needed by the subscription database user
GRANT CREATE SCHEMA TO subuser;
GRANT CREATE TABLE TO subuser;
GO
```

### Verifying Host Accessibility

If multiple computers are used to host the components of the replication system, each computer must be able to communicate with the others on a network.

#### Firewalls and Access to Ports
- Ensure firewalls allow access from other hosts running replication system components.
- Verify that the firewall on the host running the xDB Replication Console or CLI allows access to the ports used by the publication and subscription servers.
- Default port numbers for the publication server and subscription server are 9051 and 9052, respectively, with additional ports offset by 2.

#### Network IP Addresses
- Supply the actual network IP address of each component during configuration.
- Avoid using the loopback address (`localhost` or `127.x.x.x`).
- Modify the `/etc/hosts` file on Linux systems to associate the host's network IP address with the host's name.

#### Postgres Server Authentication
- Modify the `pg_hba.conf` file to control access to the databases.
- Add entries for the publication and subscription databases to allow access from the specified IP addresses.

**Example:**
```plaintext
# TYPE DATABASE USER ADDRESS METHOD
local all all md5
host edb pubuser 192.168.2.22/32 md5
host all all 127.0.0.1/32 md5
host all all ::1/128 md5
```

---

Copyright Â© 2010 - 2018 EnterpriseDB Corporation. All rights reserved.