o
l
f
e
t
a
g
e
r
g
g
a
#
10
1
N = 1
N = 10
N = 100
N = 1,000
N = 10,000
bounds 
100
10000
1e+06
1e+08
sampling threshold z
Appendix: Proofs of Theorems
Proof of Lemma 1: Using (6) Var((cid:2)y) = E[Var((cid:2)y |(cid:2)x)]+Var(E[(cid:2)y |
(cid:2)x]). Now(cid:2)y = w(cid:2)x/p((cid:2)x) where w is an indicator random variable
that takes the value 1 with probability p((cid:2)x). Hence Var((cid:2)y | (cid:2)x) =
(cid:2)x2(1 − p((cid:2)x))/p((cid:2)x). (Note this is bounded at x = 0 due to the
assumption of right continuity of x/p(x) at x = 0.) Finally, E[(cid:2)y |
(cid:2)x] =(cid:2)x, and the result follows.
Proof of Theorem 1: (i) E[(cid:2)X | {(cid:2)xi}] =
(cid:2)xi and E[(cid:2)xi] = xi.
Var((cid:2)yi) = E[(cid:2)xi max{zq
−1xi +Var(cid:2)xi.
Var(cid:2)xi = E[Var((cid:2)xi | {uij})] + Var(E[(cid:2)xi | {uij}])
Similarly, conditioning on {uij} and using (6) we ﬁnd
−1−(cid:2)xi, 0}]+Var(cid:2)xi ≤ zq
(ii) Applying Lemma 1,
(cid:1)n
(18)
(19)
i=1
Figure 7: Aggregate ﬂow: number of unique destination BGP
preﬁxes per hour, as function of smart sampling threshold z,
for different packet sampling periods N. Also shown for each
N: bound Rs from Theorem 1, where rate Ragg of presentation
of unique BGP preﬁxes is determined from NetFlow records.
=
= E[Var(N q
−1
mi(cid:3)
viuij bj | {uij})]
mi(cid:3)
+ Var(E[N q
1 − q
q
E[(N
j=1
−1
mi(cid:3)
j=1
viuij bj|{uij}])
mi(cid:3)
j=1
uijbj )2] + Var(N
(20)
uijbj )(21)
j=1
7.5 Volume of Aggregated Smart Sampled Flows
We compare the upper bound (13) on the rate of production
of aggregated smart sampled records with the corresponding es-
timate (16) obtained by modeling the smart sampling of individual
ﬂows. Figure 7 shows this comparison as a function of the sampling
threshold z for the ﬁve cases of the sampling period for N from 1
to 10, 000. Flow keys are aggregated on destination BGP preﬁx.
The bounds we obtained using the total byte rate B of the raw un-
sampled ﬂow records; Ragg was determined by applying (16) to the
raw unsampled ﬂow records. In applications, Ragg may be avail-
able by collecting aggregate sampled NetFlow records directly. As
with the unaggregated records, the curve merge for large z, which
takes the role of the mean number of bytes represented per aggre-
gated sampled ﬂow. As remarked in Section 6.2.2, this property
will hold for any aggregations scheme for large enough z.
8. CONCLUSIONS AND APPLICATIONS
This paper has described a Trafﬁc Analysis Platform (TAP): a
hierarchical infrastructure for the measurement and collection of
trafﬁc ﬂow records. Sampling of packets and ﬂows is required to
manage consumption of TAP resources. This comes at the costs
of introducing statistical uncertainty into trafﬁc usage, since this
must now be estimated from measurements. We gave a simple up-
per bound on the variance of usage estimates. This led us to the
guideline, that the system should be run (under normal operational
situations) in a way where ﬂow loss is kept minimal and preferably
avoided altogether. We gave simple bounds for the consumption of
resources in the TAP architecture, and some estimates that make
use of detailed ﬂow records. These results constitute a set of tools
that enable planning the resources of TAP infrastructure in order to
meet accuracy goals in the estimation of network usage.
Further applications for smart sampling exist in the TAP archi-
tecture. Long-term archival of ﬂow records requires potentially
large amounts of storage. A further round of smart sampling can
be used to reduce storage volumes while retaining the ability to
recover detail from the archived data.
(cid:2)
i=1
which yields the last two terms of (ii) after some algebra. The
bound (iii) then follows easily.
(cid:2)
(cid:2)
(cid:2)x
(cid:2) =
k=1
(cid:2)
−1X +
(cid:1)n
(cid:2)
ik = N q
−1
(cid:2)
i =
Since
Var((cid:2)x
i=1
j=1 vikuij rijkbj.
(iv) We label by (i, k) the measured ﬂows arising from the split
of sampled packets from original ﬂow i into &i measured ﬂows la-
beled by k. The random variable rijk indicates the assignment of
a sample packet to a measured ﬂow: rijk = 1 if packet j from
original ﬂow i is sampled (uij = 1) and occurs in measured ﬂow
(i, k); otherwise rijk = 0. We will not need to specify a law
for the {rijk}. Independent indicator variables vik take the value
1 if measured ﬂow (i, k) is not dropped, this with probability q,
(cid:2)
i where
(cid:2)
i is an unbiased estimator of xi and
is an unbiased estimator of X. Repeating the decompo-
(cid:2)) ≤ zq
(cid:2)
i). Condi-
tioning on {uij , rijk} and using (6),
and 0 otherwise. The usage estimate is (cid:2)X
(cid:1)(cid:17)i
(cid:1)mi
(cid:2)x
(cid:2)x
ik, and(cid:2)x
(cid:1)m1
k=1 rijk = 1, (cid:2)x
hence (cid:2)X
(cid:1)n
sition (18), we ﬁnd Var((cid:2)X
Var((cid:2)x
i | {uij , rijk})] + Var(E[(cid:2)x
i) = E[Var((cid:2)x
Now, by conditional independence of (cid:2)x
(cid:17)i(cid:3)
Var((cid:2)x
E[Var((cid:2)x
ik | {uij , rijk})]
i | {uij , rijk})] = E[
(cid:2)
(cid:2)
mi(cid:3)
(cid:17)i(cid:3)
mi(cid:3)
(cid:17)i(cid:3)
mi(cid:3)
(cid:1)(cid:17)i
k=1 rijk = 1. For the same last reason, E[(cid:2)x
E[(cid:2)xi | {uij}], and so combining with (19), (20), (22) and (23), we
ﬁnd Var((cid:2)x
i) ≤ Var((cid:2)xi), and the result follows.
i | {uij , rijk}])
(cid:2)
(22)
ik given {uij , rijk}, the
(cid:2)
≤ 1 − q
q
1 − q
q
ﬁrst term in (22) is
1 − q
q
uijrijkbij)2]
uij rijkbij)2]
E[
(N
k=1
j=1
E[(N
uijbij )2]
(23)
=
=
E[(N
k=1
j=1
since
(cid:2)
k=1
j=1
i | {uij , rijk}] =
(cid:2)
Proof of Lemma 3: E[w(cid:2)x2(1 − p(x))/p2((cid:2)x) | (cid:2)x] = (cid:2)x2(1 −
p((cid:2)x))/p((cid:2)x) and so the result follows from Lemma 1.
Proof of Theorem 2: Suppose there are n ≥ 2 packet in the orig-
inal ﬂow and that m ≥ 2 of these are selected. Let τ1, τ2, . . . , τm
be the (unordered) arrival times of the m packets. These times have
−m.
joint probability distribution function PDF gm(τ1, . . . , τm) = t
Let the times between successive packets be σ1, . . . , σm−1. They
have joint PDF hm, where
(cid:12)
hm(s1, . . . , sm−1) = m!
gm(τ1, . . . , τm)dτ1 . . . dτm
i=1 si)
τ1≤(t−(cid:1) m−1
= m!(t − m−1(cid:3)
(cid:12)
m, where
i=1
(cid:1)m−1
(24)
i=1 si ≤ t, and 0 otherwise. The PDF hm is invariant
when
under permutation of the si, and hence all the σi have the same
marginal distribution h1
si)/t
m
,
h1
m(s1) =
hm(s1, . . . , sm−1)ds2 . . . dsm−1
(cid:1) m−1
i=2 si≤t−s1
= m(t − s1)m−1t
−m
,
(25)
for s1 ∈ [0, t], and 0 elsewhere.
t h1
(cid:14)
(cid:15)
n
m
N
m=1
(cid:13) T
The number of measured ﬂows is 1 plus the number of si that
exceed T . Hence the mean number of measured ﬂows is 1 +
(m − 1)P[σi > T ]. Note this expressions also holds for the
case m = 1. For T ≥ t, P[σi > T ] = 0. For T ∈ [0, t),
m(s1)ds1 = (1 − T /t)m. Combining these
P[σi > T ] =
we ﬁnd P[σi > T ] = κm for all T ≥ 0. Thus f (n, t; N, T ) =
−m(1 − 1/N )n−m(1 + (m − 1)κm), which after
some algebra is seen to be equal to (9). If n = 1 then f = 1/N,
which agrees with (9) in this special case.
(cid:1)n
an unbiased estimator (cid:2)X =
(cid:2)xi comprising a sum of n mea-
sured ﬂows each of (random) size(cid:2)xi, collected over an interval of
n(cid:3)
min{1, E(cid:2)xi/z} (26)
−1 min{n, X/z} = min{R, B/z}
duration τ . The expected average rate of smart sampled ﬂows over
the interval is
Proof of Theorem 3: As before, consider total bytes X having
Epz((cid:2)xi) =≤ τ
(cid:1)n
Rs = τ
n(cid:3)
= τ
(27)
−1
i=1
−1
i=1
i=1
9. REFERENCES
[1] J. Apisdorf, K. Claffy, K. Thompson, and R. Wilder,
“OC3MON: Flexible, Affordable, High Performance
Statistics Collection,” For further information see
http://www.nlanr.net/NA/Oc3mon
[2] R. C´aceres, N.G. Dufﬁeld, A. Feldmann, J. Friedmann, A.
Greenberg, R. Greer, T. Johnson, C. Kalmanek,
B.Krishnamurthy, D. Lavelle, P.P. Mishra, K.K.
Ramakrishnan, J. Rexford, F. True, and J.E. van der Merwe,
“Measurement and Analysis of IP Network Usage and
Behavior”, IEEE Communications Magazine, vol. 38, no. 5,
pp. 144–151, May 2000.
[3] B.-Y. Choi, J.Park, Zh.-L. Zhang, “Adaptive Random
Sampling for Load Change Detection”, ACM SIGMETRICS
2002 (Extended Abstract).
[4] Cisco NetFlow; for further information see
http://www.cisco.com/warp/public/732/netﬂow/index.html
[5] K.C. Claffy, H.-W. Braun, and G.C. Polyzos.
“Parameterizable methodology for internet trafﬁc ﬂow
proﬁling”, IEEE Journal on Selected Areas in
Communications, vol. 13, no. 8, . 1481–1494, October 1995.
[6] N.G. Dufﬁeld, C. Lund, M. Thorup, “Charging from sampled
network usage,” ACM SIGCOMM Internet Measurement
Workshop 2001, San Francisco, CA, November 1-2, 2001.
[7] N.G. Dufﬁeld, C. Lund, M. Thorup, “Learn More, Sample
Less: Control of Volume and Variance in Network
Measurement”, submitted for publication.
[8] N.G. Dufﬁeld, C. Lund, M. Thorup, “Properties and
Prediction of Flow Statistics from Sampled Packet Streams,”
ACM SIGCOMM Internet Measurement Workshop 2002,
Marseille, France, November 6-8, 2002.
[9] N. G. Dufﬁeld and M. Grossglauser, “Trajectory Sampling
for Direct Trafﬁc Observation”, IEEE/ACM Transactions on
Networking, vol. 9, pp. 280-292, 2001. Abridged version
appeared in Proc. ACM Sigcomm 2000, Computer
Communications Review, Vol 30, No 4, October 2000, pp.
271–282.
[10] C. Estan and G. Varghese, “New Directions in Trafﬁc
Measurement and Accounting”, Proc SIGCOMM 2002,
Pittsburgh, PA, August 19–23, 2002.
[11] A. Feldmann, A. Greenberg, C. Lund, N. Reingold, J.
Rexford, F. True, ”Deriving trafﬁc demands for operational
IP networks: methodology and experience”, In Proc. ACM
Sigcomm 2000, Computer Communications Review, Vol 30,
No 4, October 2000, . 257–270.
[12] A. Feldmann, A. Greenberg, C. Lund, N. Reingold, J.
Rexford, “NetScope: trafﬁc engineering for IP networks”,
IEEE Network, vol. 14, no. 2, pp. 11–19, March-April 2000.
[13] A. Feldmann, J. Rexford, and R. C´aceres, “Efﬁcient Policies
for Carrying Web Trafﬁc over Flow-Switched Networks,”
IEEE/ACM Transactions on Networking, vol. 6, no.6, pp.
673–685, December 1998.
[14] Inmon Corporation, “sFlow accuracy and billing”, see:
http://www.inmon.com/PDF/sFlowBilling.pdf
[15] D.G. Horvitz and D.J. Thompson, “A Generalization of
Sampling without replacement from a Finite Universe”, J.
Amer. Statist. Assoc. Vol. 47, pp. 663-685, 1952.
[16] “Internet Protocol Flow Information ” (IPFIX). IETF
Working Group. See: http://net.doit.wisc.edu/ipﬁx/
[17] P. L’Ecuyer, ”Efﬁcient and portable combined random
number generators”, Communications of the ACM
31:742–749 and 774, 1988.
[18] J. Postel, “Transmission Control Protocol,” RFC 793,
September 1981.
[19] J. Reynolds, Ed., “Assigned Numbers: RFC 1700 is
Replaced by an On-line Database”, RFC 3232, January 2002.
[20] S.M. Ross, “Applied Probability Models with Optimization
Applications, Dover, New York, 1970.