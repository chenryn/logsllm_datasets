# 数据准备labels=np.array([u" 推进 ","KDA",u" 生存 ",u" 团战 ",u" 发育 ",u" 输出 "])stats=[83, 61, 95, 67, 76, 88]
# 画图数据准备，角度、状态值angles=np.linspace(0, 2*np.pi, len(labels), endpoint=False)stats=np.concatenate((stats,[stats[0]]))angles=np.concatenate((angles,[angles[0]]))
# 用 Matplotlib 画蜘蛛图fig = plt.figure()ax = fig.add_subplot(111, polar=True)   ax.plot(angles, stats, 'o-', linewidth=2)ax.fill(angles, stats, alpha=0.25)
# 设置中文字体font = FontProperties(fname=r"C:\Windows\Fonts\simhei.ttf", size=14)  ax.set_thetagrids(angles * 180/np.pi, labels, FontProperties=font)plt.show()代码中 flt.figure 是创建一个空白的 figure对象，这样做的目的相当于画画前先准备一个空白的画板。然后add_subplot(111) 可以把画板划分成 1 行 1 列。再用 ax.plot 和 ax.fill进行连线以及给图形上色。最后我们在相应的位置上显示出属性名。这里需要用到中文，Matplotlib对中文的显示不是很友好，因此我设置了中文的字体font，这个需要在调用前进行定义。最后我们可以得到下面的蜘蛛图，看起来是不是很酷？![](Images/c6ec77c6907ce1c111fe583031164a09.png){savepage-src="https://static001.geekbang.org/resource/image/19/7d/1924d3cbf035053fa3d5043794624c7d.png"}**二元变量分布**如果我们想要看两个变量之间的关系，就需要用到二元变量分布。当然二元变量分布有多种呈现方式，开头给你介绍的散点图就是一种二元变量分布。在 Seaborn 里，使用二元变量分布是非常方便的，直接使用 sns.jointplot(x,y, data=None, kind) 函数即可。其中用 kind表示不同的视图类型："kind='scatter'"代表散点图，"kind='kde'"代表核密度图，"kind='hex'"代表 Hexbin 图，它代表的是直方图的二维模拟。这里我们使用 Seaborn 中自带的数据集tips，这个数据集记录了不同顾客在餐厅的消费账单及小费情况。代码中total_bill 保存了客户的账单金额，tip 是该客户给出的小费金额。我们可以用Seaborn 中的 jointplot 来探索这两个变量之间的关系。    import matplotlib.pyplot as pltimport seaborn as sns
# 数据准备tips = sns.load_dataset("tips")print(tips.head(10))
# 用 Seaborn 画二元变量分布图（散点图，核密度图，Hexbin 图）sns.jointplot(x="total_bill", y="tip", data=tips, kind='scatter')sns.jointplot(x="total_bill", y="tip", data=tips, kind='kde')sns.jointplot(x="total_bill", y="tip", data=tips, kind='hex')plt.show()代码中我用 kind 分别显示了他们的散点图、核密度图和 Hexbin图，如下图所示。散点图：```{=html}```![](Images/cc87105bc6a393fe44d0741a5d29ea1c.png){savepage-src="https://static001.geekbang.org/resource/image/a3/54/a3efa7acabdb7ab7976c826ca5a76754.png"}```{=html}```核密度图：```{=html}```![](Images/61b92d2b763499e9cd05fb821665ee40.png){savepage-src="https://static001.geekbang.org/resource/image/6b/f7/6bd77fa07d150546c0f23e5a0d12b1f7.png"}```{=html}```Hexbin 图：```{=html}```![](Images/125c1acc9f60f80704fab45f53b14cc6.png){savepage-src="https://static001.geekbang.org/resource/image/7c/aa/7cbdbb115e7d984c3086acb689b661aa.png"}```{=html}```
### **成对关系**如果想要探索数据集中的多个成对双变量的分布，可以直接采用 sns.pairplot()函数。它会同时展示出 DataFrame中每对变量的关系，另外在对角线上，你能看到每个变量自身作为单变量的分布情况。它可以说是探索性分析中的常用函数，可以很快帮我们理解变量对之间的关系。pairplot 函数的使用，就像在 DataFrame 中使用 describe()函数一样方便，是数据探索中的常用函数。这里我们使用 Seaborn 中自带的 iris数据集，这个数据集也叫鸢尾花数据集。鸢尾花可以分成 Setosa、Versicolour和 Virginica 三个品种，在这个数据集中，针对每一个品种，都有 50个数据，每个数据中包括了 4个属性，分别是花萼长度、花萼宽度、花瓣长度和花瓣宽度。通过这些数据，需要你来预测鸢尾花卉属于三个品种中的哪一种。    import matplotlib.pyplot as pltimport seaborn as sns
# 数据准备iris = sns.load_dataset('iris')
# 用 Seaborn 画成对关系sns.pairplot(iris)plt.show()这里我们用 Seaborn 中的 pairplot函数来对数据集中的多个双变量的关系进行探索，如下图所示。从图上你能看出，一共有sepal_length、sepal_width、petal_length 和 petal_width4个变量，它们分别是花萼长度、花萼宽度、花瓣长度和花瓣宽度。下面这张图相当于这 4个变量两两之间的关系。比如矩阵中的第一张图代表的就是花萼长度自身的分布图，它右侧的这张图代表的是花萼长度与花萼宽度这两个变量之间的关系。![](Images/10d50462e9218e77b4bf3420b7c87c2d.png){savepage-src="https://static001.geekbang.org/resource/image/88/0d/885450d23f468b9cbcabd90ff9a3480d.png"}
## 总结我今天给你讲了 Python 可视化工具包 Matplotlib 和 Seaborn工具包的使用。他们两者之间的关系就相当于 NumPy 和 Pandas 的关系。Seaborn是基于 Matplotlib 更加高级的可视化库。另外针对我讲到的这 10种可视化视图，可以按照变量之间的关系对它们进行分类，这些关系分别是比较、联系、构成和分布。当然我们也可以按照随机变量的个数来进行划分，比如单变量分析和多变量分析。在数据探索中，成对关系pairplot() 的使用，相好比 Pandas 中的 describe()使用一样方便，常用于项目初期的数据可视化探索。在 Matplotlib 和 Seaborn的函数中，我只列了最基础的使用，也方便你快速上手。当然如果你也可以设置修改颜色、宽度等视图属性。你可以自己查看相关的函数帮助文档。这些留给你来进行探索。关于本次 Python 可视化的学习，我希望你能掌握：1.  视图的分类，以及可以从哪些维度对它们进行分类；2.  十种常见视图的概念，以及如何在 Python    中进行使用，都需要用到哪些函数；3.  需要自己动手跑一遍案例中的代码，体验下 Python 数据可视化的过程。![](Images/ffa031e063ea1735611b8159169d0422.png){savepage-src="https://static001.geekbang.org/resource/image/8e/d2/8ed2addb00a4329dd63bba669f427fd2.png"}最后，我给你留两道思考题吧，Seaborn 数据集中自带了 car_crashes数据集，这是一个国外车祸的数据集，你要如何对这个数据集进行成对关系的探索呢？第二个问题就是，请你用Seaborn 画二元变量分布图，如果想要画散点图，核密度图，Hexbin图，函数该怎样写？欢迎你在评论区与我分享你的答案，也欢迎点击"[请朋友读]{.orange}"，把这篇文章分享给你的朋友或者同事，一起来动手练习一下。![](Images/8b75105190797b2e4f7be2536b6543db.png){savepage-src="https://static001.geekbang.org/resource/image/48/96/48cb89aa8c4858bbc18df3b3ac414496.jpg"}
# 16丨数据分析基础篇答疑截止到今天，我们已经将数据分析基础篇的内容都学习完了。在这个过程中，感谢大家积极踊跃地进行留言，既给其他同学提供了不少帮助，也让专栏增色了不少。在这些留言中，有很多同学对某个知识点有所疑惑，我总结了NumPy、Pandas、爬虫以及数据变换中同学们遇到的问题，精选了几个具有代表性的来作为答疑。