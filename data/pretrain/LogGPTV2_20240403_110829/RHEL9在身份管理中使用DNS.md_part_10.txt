    [创建并配置了](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/configuring_and_managing_identity_management/index#preparing-your-environment-for-managing-idm-using-ansible-playbooks_configuring-and-managing-idm){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，来作为存储示例
    playbook 副本的中心位置。
-   您可以了解 [DNS 位置
    的部署注意事项](#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#deployment-considerations-for-dns-locations_using-ansible-to-manage-dns-locations-in-idm "DNS 位置的部署注意事项"){.link}。
:::
::: orderedlist
**步骤**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  生成位于
    `/usr/share/doc/ansible-freeipa/playbooks/location/`{.literal}
    目录中的 `location-present.yml`{.literal} 文件的副本：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/location/location-present.yml location-present-copy.yml
    ```
3.  打开 `location-present-copy.yml`{.literal} Ansible playbook
    文件进行编辑。
4.  通过在 `ipalocation`{.literal} task 部分中设置以下变量来调整该文件：
    ::: itemizedlist
    -   调整任务的 `name`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为位置的名称。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: location present example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that the "germany" location is present
        ipalocation:
          ipaadmin_password: Secret123
          name: germany
    ```
5.  保存这个文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory location-present-copy.yml
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅使用 [IdM Web UI 将 IdM 服务器 分配给 DNS 位置，或使用 IdM CLI
    将 IdM 服务器分配给 DNS
    位置](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#assigning-an-idm-server-to-a-dns-location-using-the-idm-web-ui_managing-dns-locations-in-idm){.link}。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#using-ansible-to-ensure-an-idm-location-is-absent_using-ansible-to-manage-dns-locations-in-idm}使用 Ansible 确保 IdM 位置不存在 {.title}
:::
作为 Identity Management(IdM)的系统管理员，您可以配置 IdM DNS
位置，以便客户端在最接近的网络基础架构中找到身份验证服务器。
以下流程描述了如何使用 Ansible playbook 来确保 IdM 中不存在 DNS
位置。这个示例描述了如何确保 IdM 中不存在 [**germany**]{.strong} DNS
位置。因此，您无法将特定的 IdM 服务器分配给这个位置，本地 IdM
客户端无法使用它们。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   没有 IdM 服务器分配给ger [**many DNS**]{.strong} 位置。
-   您已在 Ansible 控制节点上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   示例假定您已
    [创建并配置了](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/configuring_and_managing_identity_management/index#preparing-your-environment-for-managing-idm-using-ansible-playbooks_configuring-and-managing-idm){.link}
    [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录，来作为存储示例
    playbook 副本的中心位置。
:::
::: orderedlist
**步骤**
1.  进入 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  在 `/usr/share/doc/ansible-freeipa/playbooks/location/`{.literal}
    目录中复制 `location-absent.yml`{.literal} 文件：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/location/location-absent.yml location-absent-copy.yml
    ```
3.  打开 `location-absent-copy.yml`{.literal} Ansible playbook
    文件进行编辑。
4.  通过在 `ipalocation`{.literal} task 部分中设置以下变量来调整该文件：
    ::: itemizedlist
    -   调整任务的 `name`{.literal}，使其与您的用例对应。
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员的密码。
    -   将 `name`{.literal} 变量设置为 DNS 位置的名称。
    -   确保 `state`{.literal} 变量设置为 `absent`{.literal}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: location absent example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure that the "germany" location is absent
        ipalocation:
          ipaadmin_password: Secret123
          name: germany
          state: absent
    ```
5.  保存这个文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory location-absent-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-locations-in-idm_working-with-dns-in-identity-management.html#_additional_resources_3}其他资源 {.title}
:::
::: itemizedlist
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-location.md`{.literal} 文件。
-   请参阅 `/usr/share/doc/ansible-freeipa/playbooks/location`{.literal}
    目录中的 Ansible playbook 示例。
:::
:::
:::
[]{#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html}
::: chapter
::: titlepage
# []{#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management}第 6 章 在 IdM 中管理 DNS 转发 {.title}
:::
以下流程描述了如何在 Identity Management(IdM)Web UI、IdM CLI 以及使用
Ansible 中配置 DNS 全局转发器和 DNS 转发区域：
::: itemizedlist
-   [IdM DNS
    服务器的两个角色](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#the-two-roles-of-an-idm-dns-server_managing-dns-forwarding-in-idm "IdM DNS 服务器的两个角色"){.link}
-   [IdM 中的 DNS
    转发策略](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#dns-forward-policies-in-idm_managing-dns-forwarding-in-idm "IdM 中的 DNS 转发策略"){.link}
-   [在 IdM Web UI
    中添加全局转发器](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#adding-a-global-forwarder-in-the-idm-web-ui_managing-dns-forwarding-in-idm "在 IdM Web UI 中添加全局转发器"){.link}
-   [在 CLI
    中添加全局转发器](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#adding-a-global-forwarder-in-the-cli_managing-dns-forwarding-in-idm "在 CLI 中添加全局转发器"){.link}
-   [在 IdM Web UI 中添加 DNS Forward
    区域](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#adding-a-dns-forward-zone-in-the-idm-web-ui_managing-dns-forwarding-in-idm "在 IdM Web UI 中添加 DNS Forward 区域"){.link}
-   [在 CLI 中添加 DNS Forward
    区域](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#adding-a-dns-forward-zone-in-the-cli_managing-dns-forwarding-in-idm "在 CLI 中添加 DNS Forward 区域"){.link}
-   [使用 Ansible 在 IdM 中建立 DNS
    全局转发器](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#establishing-a-dns-global-forwarder-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 在 IdM 中建立 DNS 全局转发器"){.link}
-   [使用 Ansible 确保 IdM 中存在 DNS
    全局转发器](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#ensuring-the-presence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 确保 IdM 中存在 DNS 全局转发器"){.link}
-   [使用 Ansible 确保 IdM 中没有 DNS
    全局转发器](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#ensuring-the-absence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 确保 IdM 中没有 DNS 全局转发器"){.link}
-   [使用 Ansible 确保 IdM 中禁用了 DNS Global
    Forwarders](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#ensuring-dns-global-forwarders-are-disabled-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 确保 IdM 中禁用了 DNS Global Forwarders"){.link}
-   [使用 Ansible 确保 IdM 中存在 DNS Forward
    区](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#ensuring-the-presence-of-a-dns-forward-zone-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 确保 IdM 中存在 DNS Forward 区"){.link}
-   [使用 Ansible 确保 DNS Forward Zone 在 IdM
    中有多个转发器](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#ensuring-a-dns-forward-zone-has-multiple-forwarders-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 确保 DNS Forward Zone 在 IdM 中有多个转发器"){.link}
-   [使用 Ansible 确保 IdM 中禁用了 DNS Forward
    区域](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#ensuring-a-dns-forward-zone-is-disabled-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 确保 IdM 中禁用了 DNS Forward 区域"){.link}
-   [使用 Ansible 确保 IdM 中没有 DNS Forward
    区](#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#ensuring-the-absence-of-a-dns-forward-zone-in-idm-using-ansible_managing-dns-forwarding-in-idm "使用 Ansible 确保 IdM 中没有 DNS Forward 区"){.link}
:::
::: section
::: titlepage
# []{#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#the-two-roles-of-an-idm-dns-server_managing-dns-forwarding-in-idm}IdM DNS 服务器的两个角色 {.title}
:::
DNS 转发会影响 DNS 服务如何应答 DNS 查询。默认情况下，集成了 IdM 的
Berkeley Internet Name Domain (BIND) 作为一个
[*authoritative*]{.emphasis} 和一个 [*recursive*]{.emphasis} DNS
服务器：
::: variablelist
[权威 DNS 服务器]{.term}
:   当 DNS 客户端查询属于 IdM 服务器对其具有权威的 DNS
    区域的名称时，BIND
    会回复包含该区中的数据。权威数据始终优先于任何其他数据。
[递归 DNS 服务器]{.term}
:   当 DNS 客户端查询 IdM 服务器没有权威的名称时，BIND 会尝试使用其他
    DNS 服务器解析查询。如果没有定义转发器，BIND 会询问 Internet 上的
    root 服务器，并使用递归解析算法回答 DNS 查询。
:::
在某些情况下，不需要让 BIND 直接联系其他 DNS 服务器，并根据 Internet
上可用的数据执行递归。您可以将 BIND 配置为使用另一个 DNS 服务器（
[*转发器*]{.emphasis} ）来解析查询。
当您将 BIND 配置为使用转发器时，查询和答案会在 IdM
服务器和转发器之间转发，IdM 服务器作为非权威数据的 DNS 缓存。
:::
::: section
::: titlepage
# []{#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#dns-forward-policies-in-idm_managing-dns-forwarding-in-idm}IdM 中的 DNS 转发策略 {.title}
:::
IdM 支持 `first`{.literal} 和 `only`{.literal} 标准 BIND 转发策略，以及
`none`{.literal} 特定于 IdM 的转发策略。
::: variablelist
[先转发第一个 [*（默认）*]{.emphasis}]{.term}
:   IdM BIND 服务将 DNS
    查询转发到配置的转发程序。如果查询因为服务器错误或超时而失败，BIND
    将使用 Internet 上的服务器回退到递归解析。`转发第一个`{.literal}
    策略是默认策略，它适用于优化 DNS 流量。
[仅转发]{.term}
:   IdM BIND 服务将 DNS
    查询转发到配置的转发程序。如果查询因为服务器错误或超时而失败，BIND
    会将错误返回给客户端。对于分割 DNS 配置的环境，建议
    `仅进行转发`{.literal} 策略。
[none [*（转发禁用）*]{.emphasis}]{.term}
:   DNS 查询不会通过 `none`{.literal}
    转发策略转发。禁用转发仅作为全局转发配置的特定区覆盖。这个选项等同于在
    BIND 配置中指定转发器的空列表。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您不能使用转发功能将 IdM 中的数据与其他 DNS
服务器中的数据合并。您只能转发 IdM DNS 中主区的查询。
默认情况下，如果查询的 DNS 名称属于 IdM 服务器权威的区域，BIND
服务不会将查询转发到其他服务器。在这种情况下，如果 IdM
数据库中无法找到查询的 DNS 名称，则返回 `NXDOMAIN`{.literal}
回答。未使用转发。
:::
::: example
[]{#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#idm140467028610656}
**例 6.1. 使用情况示例**
::: example-contents
IdM 服务器对 [**test.example**]{.strong}有权威。DNS 区域.BIND
被配置为把查询转发到带有 [**192.0.2.254**]{.strong} IP 地址的 DNS
服务器。
当客户端发送对不存在的. [**test.example**]{.strong}的查询时。DNS
名称，BIND 检测到 IdM 服务器对 [**test.example.**]{.strong}
区域具有权威，且不会将查询转发到 [**192.0.2.254.**]{.strong}
服务器。因此，DNS 客户端接收 `NXDomain`{.literal}
错误消息，通知查询域不存在的用户。
:::
:::
:::
::: section
::: titlepage
# []{#managing-dns-forwarding-in-idm_working-with-dns-in-identity-management.html#adding-a-global-forwarder-in-the-idm-web-ui_managing-dns-forwarding-in-idm}在 IdM Web UI 中添加全局转发器 {.title}
:::
这部分论述了如何在 Identity Management(IdM)Web UI 中添加全局 DNS
转发程序。
::: itemizedlist
**先决条件**
-   以 IdM 管理员身份登陆到 IdM Web UI。
-   您知道 DNS 服务器的 Internet 协议(IP)地址，以将查询转发到。