title:POSTER: Towards Highly Interactive Honeypots for Industrial Control
Systems
author:Stephan Lau and
Johannes Klick and
Stephan Arndt and
Volker Roth
POSTER: Towards Highly Interactive Honeypots for
Industrial Control Systems
Stephan Lau
Freie Universität Berlin
PI:EMAIL
Johannes Klick
Freie Universität Berlin
johannes.klick@fu-
berlin.de
Stephan Arndt
Freie Universität Berlin
stephan.arndt@fu-
berlin.de
Volker Roth
Freie Universität Berlin
PI:EMAIL
ABSTRACT
Honeypots are a common tool to set intrusion alarms and to
study attacks against computer systems. In order to be con-
vincing, honeypots attempt to resemble actual systems that
are in active use. Recently, researchers have begun to develop
honeypots for programmable logic controllers (PLCs). The
tools of which we are aware have limited functionality com-
pared to genuine devices. Particularly, they do not support
running actual PLC programs.
In order to improve upon the interactive capabilities of
PLC honeypots we set out to develop a simulator for Siemens
S7-300 series PLCs. Our current prototype XPOT supports
PLC program compilation and interpretation, the proprietary
S7comm protocol and SNMP. While the supported feature
set is not yet comprehensive, it is possible to program it using
standard IDEs such as Siemens’ TIA portal. Additionally,
we emulate the characteristics of the network stack of our
reference PLC in order to resist OS ﬁngerprinting attempts
using tools such as Nmap.
Initial experiments with students whom we trained in PLC
programming indicate that XPOT may resist cursory in-
spection but still fails against knowledgeable and suspicious
adversaries. We conclude that high-interactive PLC hon-
eypots need to support a fairly complete feature set of the
genuine, simulated PLC.
Keywords
Honeypot; Programmable Logic Controller (PLC); Industrial
Control Systems (ICS); SCADA
1.
INTRODUCTION
Connecting devices to the Internet often increases their
utility – at the price of signiﬁcant risks to their integrity
and availability. Of particular concern are espionage and low
intensity conﬂicts that target critical infrastructures such as
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS’16 October 24-28, 2016, Vienna, Austria
c(cid:13) 2016 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-4139-4/16/10.
DOI: http://dx.doi.org/10.1145/2976749.2989063
industrial processes. However, unless a cataclysmic event
occurs, the impeding risks are unlikely to stem the ﬂood of
devices being connected to the Internet.
In order to defend against these risks, it is necessary to
build capabilities to detect and deter threats to critical infras-
tructures. Eﬀective deterrence requires that one attributes
attacks to their origins. At the time of writing, attacks often
proceed for weeks or even months before they are detected.
Once an adversary realizes that his attack is detected, he
will likely take measures to make attribution harder. There-
fore, it is attractive to observe and study how an adversary
proceeds and what level of sophistication he has, without
him becoming aware his attack has been detected.
Honeypots are a classical detection mechanism. In order
to be eﬀective, honeypots must keep adversaries occupied or
even resist attempts of suspicious adversaries to tell honey-
pots apart from genuine systems. Most honeypot technology
has been developed for Internet services and not for indus-
trial processes. While honeypots can be built using genuine
control system hardware, this is not a particularly cost eﬀec-
tive or scalable approach. A software-based solution would
certainly be preferable.
In our poster, we present the current status of our ongoing
work to develop honeypot technology for industrial control
systems (ICS). We focus on Siemens S7-300 series controllers
speciﬁcally, because Siemens is a market leader in the ICS
market.
Several other research projects aim at developing honey-
pots for industrial control systems as well. We are only aware
of projects that target Siemens PLCs as we do. However,
we found that these projects still oﬀer limited interactivity.
With our project we aim to improve interactivity so that we
can monitor and analyze adversaries’ actions in addition to
detecting them.
In what follows, we introduce a hierarchical classiﬁcation
system with clearly delineated classes and we categorize
related work according to it. Subsequently, we introduce
XPOT, our medium-interactive honeypot technology. We
continue with a description of our evaluation eﬀorts and end
with brief conclusions.
2. HONEYPOT CLASSIFICATION
Honeypots are typically classiﬁed according to their level
of interactivity. However, the pertinent taxonomy is not
standardized and several diﬀerent ﬂavors of deﬁnitions ex-
ist [6, 8, 11]. The terms low-interactive and high-interactive
are widely used, medium-interactive or pure are seen less
often. We suggest a more rigorous classiﬁcation according
to clearly delineated criteria. Consider a simple abstraction
of a PLC, which consists of a host and a program (run by
the host). Both the host and the program have inputs and
outputs. A honeypot can have:
1. Low interactivity: The adversary can interact with
the host but not with the program.
2. Medium interactivity: The adversary can interact
with the host and the program.
3. High interactivity: The adversary can interact with
the host and the program and he can read and write
programs.
Interaction is deﬁned as sending queries and receiving replies.
Within each class we can establish a partial order of interac-
tivity by deﬁning sets of interactions an adversary is allowed
to make. For example, we can limit the adversary to subsets
of instructions or functions of the PLC. One honeypot is
more interactive than another within the same class if and
only if the set of interactions it allows is a proper superset
of what the other honeypot allows. In what follows we apply
our classiﬁcation system to related work.
3. RELATED WORK
Conpot [10] is a low-interactive honeypot according to
our classiﬁcation. Among other protocols, it simulates a
Siemens SIMATIC S7-200 PLC with Modbus and S7comm
connectivity. Its default setup can be extended to simulate
other Siemens PLCs which use the proprietary S7comm
protocol. The implementation of S7comm protocol is fairly
incomplete, though. At the time of writing, it is only possible
to read entries of the System State List (SSL). Conpot adds
two of them by default, which identify the model and version
of the Siemens PLC. A genuine Siemens PLC has about
1000 of these entries. The missing ones make it easy for an
adversary to identify Conpot.
CryPLH [1] simulates a S7-300. The authors identify Cry-
PLH as a high-interactive honeypot with the stated goal to
improve upon the interactivity, conﬁgurability and indistin-
guishability of previous developments. CryPLH reproduces
static copies of the web interface of a genuine PLC which
appear identical to the originals. The login is disabled so
that adversaries cannot access status information. CryPLH
oﬀers a SNMP service that identiﬁes as the PLC and provides
network statistics obtained from the host OS. Adversaries
can even connect to CryPLH using Siemens’ SIMATIC Step 7
software. However, CryPLH simulates the highest protection
level and rejects any passwords submitted to it. Thereby,
CryPLH prevents further exploration by adversaries. Since
adversaries can neither observe nor modify the program the
PLC supposedly runs, CryPLH would still be classiﬁed as
low-interactive in our classiﬁcation scheme. However, the
Nmap TCP/IP OS ﬁngerprint is distinct from that of a gen-
uine PLC, which renders CryPLH readily identiﬁable as a
honeypot.
The ICS Security Workspace [3] operators apparently host
PLC honeypots. Since they did not publish descriptions of
their honeypot setup or its capabilities we can only make
inferences from honeypot logs they released. Their logs
resemble Snap7 [9] output and show many requests for iden-
tiﬁcation entries in the SSL, most of which originated from
Shodan [7] and Censys [2]. Two connections are particularly
interesting. One connection queried additional SSL entries
and some program and data blocks. An engineering worksta-