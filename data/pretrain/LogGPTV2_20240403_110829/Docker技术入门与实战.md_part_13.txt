--->54e5665500b9
--->570c26a9de68
-->Running in 8c1ad26742bc
>
->5c6b90057a1d
第二部分实战案例
sample
run.sh
Dockerfile
Using cache
3
--index.html
e06feb0790d7
RUN apt-get-yq install
:FRoM sshd:dockerfile
-DFOREGROUND
context
"Asia/Shanghai">/etc/timezone
daemon
daemon
apache2&&
n6.144kB
rm-rf/var/lib/apt/lists/*
&&dpkg-reconfigure-f
---
## Page 97
Step 16:ENV APACHE_SERVERNAME
Removing intermediate container 3d0d8506856c
Step 15:ENV APACHE_SERVERADMIN admin@localhost
Removing intermediatecontainer a9c46477ebe9
Removing intermediate
Step 12:ENV APACHE_PID_FILE
Step 11:ENV APACHE_LOG_DIR/var/log/apache2
Removing intermediate container b179ff1391c8
St
Removing intermediate container c9c6c12d1982
Step 9:ENV APACHE_RUN_USER
Removing intermediate
R
t
Removing
Step6:
Removing intermediate container f372648d02d9
Step5:ADDrun.sh/run.sh
Removing intermediate container 8clad26742bc
Rem
Rem
Universal Time is now:
Local time is now:
--->1f352c6d2635
tep 14:ENV APACHE_LOCK_DIR
-->
-->679d9964bb34
-->6d0e7acaf398
tep 13:ENV APACHE_RUN_DIR
cep 10:ENV APACHE_RUN_GROUP
一
-->04d64839c7b3
->Running
->Running
->27f2ddba296e
-->8d56f68dbfc6
>
->47d9b17eaec3
->Running
->Running in c9c6c12d1982
->c048a78c17fd
noving
->6e96f581ee0d
1n
->f995bd0d6f89
88f25f8e2609
Running in 405884f45d23
Running in a3daf191e6b2
Running
2e0a58be0f9c
Running in ae60847251c8
:COPY sample/
g intermediate
RUN chmod
RUN mkdir
in 3d0d8506856c
in 76c6e7401eca
in 92401ab1dbee
in b179ff1391c8
gin d5355f5e2992
755/*.sh
container 92401ab1dbee
container 2461604081e3
/app
container d5355f5e2992
container ae60847251c8
Mon 0ct2712:19:19UTC2014.
Mon 0ct 2720:19:19 csT 2014.
/var/run/apache2
www-data
/var/lock/apache2
/var/run/apache2.pid
www-data
localhost
第11章Web服务器与应用
TK
28
---
## Page 98
测试镜像
apache：ubuntu镜像：
84
第二部分实战案例
hoursago
3ad7182aa47f
890c04ff8d76
64681e2ae943
CONTAINER ID
$sudo docker ps
64681e2ae943f18eae9f599dbc43b5f44d9090bdca3d8af641d7b371c124acfd
$sudo docker run-d-P apache:ubuntu
运行镜像，
ubuntu
ubuntu
busybox
debian
sshd
sshd
apache
REPOSITORY
$sudo docker images
此时镜像已经创建成功了。
Successfully built 1d865e3032d
Removing intermediate container ee18331b3e69
Step 21:CMD/run.sh
Removing intermediate
Removing intermediate container 2c38a2ca6d14
Step 18:ENV APACHE_DOCUMENTROOT /var/www
Step 17:ENV APACHE_SERVERALIAS docker.localhost
Removing intermediate container 405884f45d23
hours ago
-->1d865e3032d7
--->Running in ee18331b3e69
--->5b08d6572b75
---> Running in cab9677d0756
-->d8649b79e085
-=-> Running in 0528963fade4
Running in 2c38a2ca6d14
，并使用-P参数映射需要开放的端口（22和80端口）：
WORKDIR/app
0.0.0.0:100->22/tcp
0.0.0.0:101->22/tcp
latest
14.04
latest
latest
ubuntu
dockerfile
ubuntu
TAG
sshd:dockerfile
sshd:ubuntu
apache:ubuntu
IMAGE
container 641c59ded9da
container cab9677d0756
COMMAND
下面，
ba5877dc9bec
ba5877dc9bec
e72ac664f4f0
61f7f4f722fb
7aef2cd95fd0
570c26a9de68
d865e3032d7
IMAGE ID
查看本地已有的镜像列表，读者可见新增的
focused_ptolemy
CREATED
21hours ago
9hoursago
46 seconds ago
CREATED
21
9 hours ago
2seconds ago
months ago
months ago
weeks ago
days ago
hours ago
STATUS
PORTS
192.7
192.7
2.433
85.1MB
255.2
246.5
263.8MB
VIRTUAL SIZE
Exited (0)3
Up 1 seconds
Exited (0)
一
NAMES
---
## Page 99
机上当前目录下的www目录到容器内的/var/www目录：
映射本地目录
令。因此，需要在run.sh脚本中添加启动 sshd的服务的命令：
两个端口：22和80。
外开放的 80端口，而在sudodocker ps-a命令的返回中，却看到新启动的容器映射了
不知道有没有细心的读者发现，在apache镜像的Dockerfile中只用EXPOSE定义了对
Dockerfile创建的镜像拥有继承的特性
可以通过映射本地目录的方式来指定容器内Apache服务响应的内容，例如映射本地主
在当前目录内创建www目录，并放上自定义的页面index.html，内容为：
这次创建的镜像将默认会同时启动 SSH和Apache服务。
$ sudo docker build -t apache:ubuntu
再次创建镜像：
这说明在使用Dockerfle创建镜像时，会继承父镜像的开放端口，但却不会继承启动命
这是因为在run：sh脚本中并未启动SSH服务。
但是实际上，
读者也可以在其他设备上通过访问宿主主机ip：49172来访问 sample站点。
Apache/2.4.7 (Ubuntu) Server at 127.0.0.1 Port 80
This is the first day I meet the new world.
Hi Docker
www:/var/www:roapache:ubuntu
exec apache2 -D FOREGROUND
#!/bin/bash
$cat run.sh
Hello Docker!
$cur1127.0.0.1:49172
在本地主机上用curl抓取网页来验证刚才创建的sample站点：
How are you?
Hi Docker
/usr/sbin/sshd&
，当尝试使用SSH登录到容器时，会发现无法登录。
第11章Web服务器与应用
---
## Page 100
地方，可以查看第一部分中关于Dockerfile的介绍章节和上一小节Apache镜像的创建过程。
Dockerfile文件和需要的脚本文件，如果读者对使用Dockerfile创建镜像的步骤还有不清楚的
Nginx官方版本
淘宝增强版-
11.2
html页面信息：
86第二部分实战案例
由于使用Dockerfle生成镜像的步骤大多类似。为了节约篇幅，这里直接介绍使用的
#安装nginx，设置nginx以非 daemon 启动。
本节将首先介绍Nginx官方发行版本的镜像生成，然后介绍在国内应用量众多的Nginx
口作为负载均衡服务器：Nginx既可以在内部直接支持Rails和 PHP，也可以支持作为
口作为Web服务器：相比Apache，Nginx使用更少的资源，支持更多的并发连接，体
Nginx是一个高性能的Web和反向代理服务器，它具有很多非常优越的特性：
在本地主机上可访问测试容器提供的Web服务，查看获取内容为新配置的index.
RUN\
MAINTAINER waitfish from dockerpool.com(PI:EMAIL)
#下面是一些创建者的基本信息
FROM sshd:dockerfile
#设置继承自创建的sshd镜像
1.Nginx Dockerfile
Nginx安装非常简单，配置文件非常简洁（还能够支持Perl语法），Bug非常少
口作为邮件代理服务器：Nginx同时也是一个非常优秀的邮件代理服务器（最早开发这个
echo"\ndaemon off;">>/etc/nginx/nginx.conf&&\
rm-rf/var/lib/apt/lists/*&&
apt-get install
要重新启动。你还能够在不间断服务的情况下进行软件版本的升级。
Nginx启动特别容易，并且几乎可以做到7×24不间断运行，即使运行数个月也不需
产品的目的之一也是作为邮件代理服务器），Last.fm描述了成功并且美妙的使用经验。
用效率都比Perlbal要好得多。
HTTP代理服务器对外进行服务。Nginx用C编写，不论是系统资源开销还是CPU使
轻松支持高达50000个并发连接数的响应。
现更高的效率，这点使Nginx尤其受到虚拟主机提供商的欢迎。一个Nginx实例能够
Nginx
—Tengine镜像的生成。
-ynginx&&\
---
## Page 101
Step 3:ADD run.sh/run.sh
var/lib/nginx
step
Step0:FRoM sshd:dockerfile
Sending build context to
Sending build context to Docker daemon 4.096 kB
$sudo dockerbuild -t nginx:stable
使用docker build命令，
3.创建镜像
/usr/sbin/nginx
#!/bin/bash
$cat run.sh
2.查看run.sh脚本文件内容
/usr/sbin/sshd&
EXPOSE
EXPOSE80
#定义输出端口
CMD ["/run.sh"]
#定义输出命令
WORKDIR/etc/nginx
#定义工作目录
var/log/nginx"]
#定义可以被挂载的目录，分别是虚拟主机的挂载目录、证书目录、配置目录和日志目录
ADD run.sh /run.sh
#添加我们的脚本，并设置权限，这会覆盖之前放在这个位置的脚本
你的应用程序发生不可思议的效果哦
#注意这里要更改系统的时区设置，
--->79149a429c7a
---> Using cache
--->
RUN
--->570c26a9de68
echo
2:RUN
5c6b90057ald
443
"Asia/Shanghai">
apt-get
>>/etc/nginx/nginx.conf&&
install-ynginx&&
Docker daemon
创建镜像nginx：stable：
，因为在Web应用中经常会用到时区这个系统变量，默认的ubuntu会让
noninteractivetzdata
/etc/timezone&&\
"/etc/nginx/certs",
////
第11章Web服务器与应用
chown-R www-data:www-data
"/etc/nginx/conf.d",
87
/：
---
## Page 102
88
第二部分实战案例
返回Nginx 的欢迎页面，说明Nginx已经正常启动了：
Welcome to nginx!
$cur1127.0.0.1:49193
访问本地的49193端口：
0.0.0.0:49191->22/tcp,
08c456536e69
CONTAINER ID
$ sudo docker ps
08c456536e69c8e36670f3bc6b496020e76d28fc9d33a8bcd01ff6d61bc72c4a
启动容器，