title:Post-quantum Security using Channel Noise
author:Setareh Sharifian and
Reihaneh Safavi-Naini and
Fuchun Lin
POSTER: Post-quantum Security using Channel Noise
Setareh Sharifian
University of Calgary
PI:EMAIL
Reihaneh Safavi-Naini
PI:EMAIL
University of Calgary
PI:EMAIL
Fuchun Lin
Nanyang Technological University
ABSTRACT
Post-quantum secure communication has attracted much interest
in recent years. Known computationally secure post-quantum key
agreement protocols are resource intensive for small devices. These
devices may need to securely send frequent short messages, for
example to report the measurement of a sensor. Secure communi-
cation using physical assumptions provides information-theoretic
security (and so quantum-safe) with small computational over-head.
Security and efficiency analysis of these systems however is asymp-
totic. In this poster we consider two secure message communication
systems, and derive and compare their security and efficiency for
finite length messages. Our results show that these systems indeed
provide an attractive alternative for post-quantum security.
KEYWORDS
Post-quantum Security; Information-theoretic security; Physical-
layer Security; Wiretap Channel; Finite-length Regime
ACM Reference Format:
Setareh Sharifian, Reihaneh Safavi-Naini, and Fuchun Lin. 2018. POSTER:
Post-quantum Security using Channel Noise. In 2018 ACM SIGSAC Con-
ference on Computer and Communications Security (CCS ’18), October 15–
19, 2018, Toronto, ON, Canada. ACM, New York, NY, USA, 3 pages. https:
//doi.org/10.1145/3243734.3278517
1 INTRODUCTION
Internet of Things (IoT) promises universal connectivity for bil-
lions of sensors that will sense our environment and automate
many aspects of our lives [14]. In many scenarios data that is col-
lected by sensors and exchanged among devices are highly sensitive
and must be protected over a long period of time. Most of today’s
cryptographic algorithms and protocols assume a computationally
bounded adversary, and for their security rely on the computational
difficulty of solving problems such as discrete logarithm (DL) and
integer factorization problems. These problems have been the basis
of security of Diffie-Hellman (DH) key agreement protocol, and RSA
cryptosystem. Peter Shor [11] proposed efficient (polynomial-time)
quantum algorithms for both DL and integer factorization problems,
which effectively break down the cryptographic infrastructure of
the Internet, if a quantum-computer is developed. Recent develop-
ments in quantum technologies has led to the announcement by
security agencies [12] to move to quantum-safe algorithms and this
has been followed by standardization efforts [6] in this domain.
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
© 2018 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-5693-0/18/10.
https://doi.org/10.1145/3243734.3278517
To provide post-quantum security one can use computational
assumptions such as Learning With Error (LWE) [9], for which
no quantum algorithm is known, and use secure key agreement
protocols that are based on such assumptions. Many such protocols
including the ones in [1] and [3], are not suitable for resource
constrained devices that are common in IoT systems. For example,
according to [3], establishing a key with 144 bits of classical security
and 130 bits of quantum security roughly requires 22.5 Kbytes of
communication using Frodo (a LWE-based key exchange) protocol,
while a practical RSA key agreement protocol with 128 bits of
claimed classical security and no quantum security requires almost
0.7 Kbytes of communication.
An alternative approach to providing post-quantum private com-
munication is to use physical layer assumptions to provide secrecy.
Physical layer security adds a layer of security to communication
that is afforded by small devices and can be complemented by extra
layers of security using traditional cryptographic systems [7]. Using
physical layer assumptions for securing communication dates back
to Wyner’s pioneering work [15] on providing communication se-
crecy using channel noise. Wyner made the ingenious observation
that noise in the environment can be used as a cryptographer’s
resource. In Wyner wiretap model, and its extension by Csiszár and
Körner [4], the sender is connected to the receiver and the eaves-
dropper (wiretapper) through two noisy channels, referred to as
the receiver channel, T, (also called the main channel) and the wire-
tapper channel, W, respectively. The works in [4, 15] proved that in
this model, secure communication with asymptotic perfect secrecy
and reliability is possible without using any secret key, as long as
the wiretapper channel is “noisier" than the main channel. Wiretap
model perfectly captures wireless communication systems in which
a transmitted message can be intercepted by an eavesdropper who
is at the reception distance of the transmitter, albeit in a weaker
form. The model has intrigued the research community as well as
system developers who are interested in lightweight but strong
cryptographic solutions, because it promises information-theoretic
security with long-term security guarantee, without the need for
shared secret key. Design of a wiretap protocol requires correct
estimation of the noise over communication channels which may
be challenging. In an IoT setting however, since many sensors sense
the environment, building a model of the environment and noise in
the communication channel can be robustly done. Wiretap codes
are traditionally analyzed in asymptotic regime. While this anal-
ysis is essential to gain confidence about security, for real-world
applications, one needs to estimate concrete performance param-
eters of the codes in finite-length regime. To compare efficiency
of wiretap codes in practice, the rate of secure communication for
finite-length messages must be found. Finite-length comparison of
wiretap codes, in addition to estimating the decoding error of the
receiver (reliability error), must also consider the secrecy level that
Poster PresentationCCS’18, October 15-19, 2018, Toronto, ON, Canada2288is offered by the code for the finite-length messages. This is a chal-
lenging problem that has found significant attention in recent years
[8]. In this poster, we outline an approach for evaluating security
of modular wiretap codes and use it to compare two constructions.
2 APPROACH
A capacity-achieving wiretap code is an encoding scheme for a
wiretap channel that achieves the highest theoretically possible
rate of secure message transmission (number of securely transmit-
ted message bits per channel use). Explicit constructions of wiretap
codes can be divided into those that are based on a specific error
correcting code [5], and constructions that separate coding for se-
curity (or secure coding), from coding for reliability (for the main
channel), and so are not restricted to a specific error correcting
code (ECC). The latter constructions are called Modular, which are
attractive from practical view point due to their flexibility in the
choice of error correcting codes. These constructions, are seeded
encryption systems and require a random seed to be shared by the
transmitter and the receiver. The seed can be sent by the sender to
the receiver over the main channel using an error correcting code
to provide reliability. The seed length does not affect asymptotic
efficiency of the system because it can be reused for encrypting of
multiple blocks. The only two constructions that provide semantic
security are in [2] and [10]. We will focus on these constructions.
In this work, we first propose a framework for comparing the ef-
ficiency of modular constructions by defining the finite-length rate
(FLR), and then compare the FLR for the two modular constructions
called Hash-then-Encode (HtE) [10] and Invert-then-Encode (ItE) [2].
Finite-length Efficiency. In [10], the effective communication
rate of a seeded wiretap coding is introduced that takes into ac-
count the length of the seed. This rate will be used to define and
respectively compare the finite-length rate (FLR) of the security
coding components of the two known seeded wiretap constructions
i.e., HtE and ItE.
Definition 2.1. The effective communication rate of a seeded en-
cryption system, taking into account the transmission cost of the
seed, is R =
encryption block length + seed length .
message length
For finite-length messages, security and reliability losses will be
non-zero values and must be estimated for a given message length
and eavesdropper channel. This analysis in general is complex and
will require finite-length analysis of the specific ECC that is used
for correcting error in the receiver channel, or obtaining general
bounds on the decoding error for a finite-length ECC [8]. The
following definition of FLR, considers security and reliability of
finite-length wiretap codes.
Definition 2.2. For a wiretap channel W(·) and a single message
block m of length b, a wiretap code with encoder WtEnc(·) has
finite-length rate (ϵ, δ )-F LR
(1) For any m0 and m1,
(ϵ, δ ), if
[b]
SD[W(WtEnc(m0))); W(WtEnc(m1)))] ≤ ε.
received by Bob, will satisfy max
(2) For any message mA sent by Alice, the corresponding mB
Pr[mA (cid:44) mB] ≤ δ .
(3) For any message m of length b, the encoding rate satisfies,
mA∈{0,1}b