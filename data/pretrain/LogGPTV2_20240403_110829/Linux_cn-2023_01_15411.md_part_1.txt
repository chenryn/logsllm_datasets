---
author: Georg Link, Sophia Vargas
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 2154
date: '2023-01-04 17:31:37'
editorchoice: false
excerpt: 想知道如何为你的开源软件项目收集使用指标？本文探讨了多种替代方案的利弊。
fromurl: https://opensource.com/article/22/12/open-source-usage-metrics
id: 15411
islctt: true
largepic: /data/attachment/album/202301/04/173129vmnstoxnzmjlnsxw.jpg
permalink: /article-15411-1.html
pic: /data/attachment/album/202301/04/173129vmnstoxnzmjlnsxw.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lkxed
summary: 想知道如何为你的开源软件项目收集使用指标？本文探讨了多种替代方案的利弊。
tags:
- 开源软件
- 使用情况
thumb: false
title: 衡量你的开源软件使用情况的 8 种方法
titlepic: true
translator: CanYellow
updated: '2023-01-04 17:31:37'
---

![](/data/attachment/album/202301/04/173129vmnstoxnzmjlnsxw.jpg)

想知道如何为你的开源软件项目收集使用指标？本文探讨了多种替代方案的利弊。

我们这些支持开源项目社区的人经常被问到许多关于使用指标的问题。这些指标通常是为了通过用户数量和知名度来衡量软件的重要性。我们通常想知道有多少人使用该软件，有多少次安装，以及有多少人接触过它。然而，直接回答这些问题并不容易。

如果你正在寻找一个明确的解决方案，可能会感到失望。有关使用指标的问题，目前还没有完美的答案，至少没有完全准确的答案。好消息是，有一些近似和替代指标可以部分满足你对软件使用情况了解的需求。本文将探讨这些替代方案及其优缺点。

### 下载量

当你浏览提供软件的网站时，通常可以看到软件的下载次数。例如，Firefox 曾经有一个下载计数器，其下载量是一个令人印象深刻的数字，显示出 Firefox 在一段时间内的流行度。

然而，个人行为会直接影响这一数字的准确性。例如，当一个人定期重置设备时，每次重建都会触发一次独立的下载。因此，需要设计一种方法从下载量中去除多次重复下载的情况。此外，系统管理员可能会下载一个新版本的 Firefox 并将其复制到 U 盘上，然后安装到数百台设备上，这也会导致下载量被低估。

下载量指标易于收集，你可以在服务器上记录每一个下载请求。问题在于你不知道在这些软件下载后会发生什么。下载者是否如预期那样使用软件，还是遇到问题而放弃了它？

对于开源项目，你可以考虑以下途径的下载指标：
- 项目官网
- 包管理器（如 npm、PyPi 和 Maven）
- 代码仓库（如 GitHub、GitLab、Gitee 等）

你可能还对源代码的下载量感兴趣，因为下游项目更可能使用源代码形式。相应的下载指标包括：
- 从代码仓库克隆的数量（如 GitHub、GitLab 和 Gitee）
- 从官网下载的归档文件（tar、zip）数量
- 通过包管理器下载的源代码数量

源代码的下载指标比二进制代码的下载指标更不可靠。例如，开发人员可能配置构建管道每次构建都克隆你的仓库，或者自动构建过程失败后不断克隆你的仓库。此外，如果源代码仓库在某些地方缓存了，下载来源可能是这些缓存。

总而言之，下载量指标是提供当前使用情况和探测趋势的良好指征。虽然无法明确定义一次下载如何转化为实际使用，但增加的下载量可以被视为更多潜在用户的标志。例如，如果你为软件做了广告并在活动期间得到更高的下载量，可以合理假设广告推动了更多人下载该软件。下载行为的来源与元数据还可以提供更多与使用行为相关的信息，帮助社区决定优先支持哪个平台或版本。

### 议题

作为一个开源项目，你可能有一个议题追踪器。当某人提出一个议题时，通常有两个目标：报告漏洞或请求增加功能。提议者很可能已经使用过你的软件。作为用户，他们可能发现了一个漏洞或发现了对新功能的需求。

显然，大多数用户不会执行额外步骤来提交议题。提议者是我们忠实的用户，我们应该感谢他们。此外，通过提出议题，他们已经成为非代码贡献者，也有可能成为代码贡献者。经验法则是大约每 10,000 名用户中，可能有 100 名提议者和 1 名代码贡献者。当然，这个比例会因用户类型而异。

回到指标问题，你可以将提议者数量作为评估使用量的下界。相关的指标包括：

[相关阅读：跟踪你的开源社区的 5 个指标](https://opensource.com/article/22/11/community-metrics)
---