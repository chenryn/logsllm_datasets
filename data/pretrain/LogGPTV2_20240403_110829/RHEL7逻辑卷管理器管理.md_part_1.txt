[]{#index.html}
::: book
::: titlepage
::: producttitle
[Red Hat Enterprise Linux]{.productname
xmlns:d="http://docbook.org/ns/docbook"} [7]{.productnumber
xmlns:d="http://docbook.org/ns/docbook"}
:::
# []{#index.html#Logical_Volume_Manager_Administration}逻辑卷管理器管理 {.title}
## LVM 管理员指南 {.subtitle}
### [``{=html}![Logo](Common_Content/images/title_logo.png)``{=html}]{.inlinemediaobject} {.corpauthor}
::: legalnotice
[]{#index.html#idm140426110524016}
# 法律通告 {.legalnotice}
::: para
Copyright []{.trademark}© 2015 Red Hat, Inc. and others.
:::
::: para
This document is licensed by Red Hat under the [Creative Commons
Attribution-ShareAlike 3.0 Unported
License](http://creativecommons.org/licenses/by-sa/3.0/). If you
distribute this document, or a modified version of it, you must provide
attribution to Red Hat, Inc. and provide a link to the original. If the
document is modified, all Red Hat trademarks must be removed.
:::
::: para
Red Hat, as the licensor of this document, waives the right to enforce,
and agrees not to assert, Section 4d of CC-BY-SA to the fullest extent
permitted by applicable law.
:::
::: para
Red Hat, Red Hat Enterprise Linux, the Shadowman logo, JBoss, OpenShift,
Fedora, the Infinity logo, and RHCE are trademarks of Red Hat, Inc.,
registered in the United States and other countries.
:::
::: para
[Linux]{.trademark}® is the registered trademark of Linus Torvalds in
the United States and other countries.
:::
::: para
[Java]{.trademark}® is a registered trademark of Oracle and/or its
affiliates.
:::
::: para
[XFS]{.trademark}® is a trademark of Silicon Graphics International
Corp. or its subsidiaries in the United States and/or other countries.
:::
::: para
[MySQL]{.trademark}® is a registered trademark of MySQL AB in the United
States, the European Union and other countries.
:::
::: para
[Node.js]{.trademark}® is an official trademark of Joyent. Red Hat
Software Collections is not formally related to or endorsed by the
official Joyent Node.js open source or commercial project.
:::
::: para
The [OpenStack]{.trademark}® Word Mark and OpenStack logo are either
registered trademarks/service marks or trademarks/service marks of the
OpenStack Foundation, in the United States and other countries and are
used with the OpenStack Foundation\'s permission. We are not affiliated
with, endorsed or sponsored by the OpenStack Foundation, or the
OpenStack community.
:::
::: para
All other trademarks are the property of their respective owners.
:::
:::
::: abstract
**摘要**
::: para
本书旨在介绍 LVM 逻辑卷管理器（logical volume
manager）信息，其中包括在集群环境中运行 LVM 的信息。
:::
:::
:::
:::
[]{#LVM_overview.html}
::: chapter
::: titlepage
# [⁠]{#LVM_overview.html#LVM_overview}第 1 章 LVM 逻辑卷管理器 {.title}
:::
::: para
本章概要介绍发布 Red Hat Enterprise Linux 7 后 LVM
逻辑卷管理器的新功能，同时还提供逻辑卷管理器组件的高级概述。
:::
::: section
::: titlepage
# [⁠]{#LVM_overview.html#s1-ov-newfeatures-7.1-LVM}1.1. Red Hat Enterprise Linux 7.1 中新的和更改的功能 {.title}
:::
::: para
Red Hat Enterprise Linux 7.1 包括以下文档及功能更新和更改。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    已明确用于精简配置卷及精简配置快照的文档。有关 LVM
    精简配置的附加信息，请参考 `lvmthin`{.command}(7) man
    page。有关精简配置卷的常规信息，请参考 [第 2.3.4 节
    "精简配置逻辑卷（精简卷）"](#LVM_components.html#thinprovisioned_volumes){.xref}。有关精简配置快照卷的信息，请参考
    [第 2.3.6 节
    "精简配置快照卷"](#LVM_components.html#thinly-provisioned_snapshot_volumes){.xref}。
    :::
-   ::: para
    本手册在 [第 B.2 节 "`lvm dumpconfig`{.command}
    命令"](#config_file.html#lvm_dumpconfig){.xref} 中论述
    `lvm dumpconfig`{.command} 命令。
    :::
-   ::: para
    本手册在 [第 B.3 节 "LVM
    配置文件"](#config_file.html#lvm_profiles){.xref} 中论述 LVM
    配置文件。
    :::
-   ::: para
    本手册在 [第 3.7 节 "使用 `lvm`{.command} 命令显示 LVM
    信息"](#LVM_administration.html#lvmdisplaycommand){.xref} 中论述
    `lvm`{.command} 命令。
    :::
-   ::: para
    在 Red Hat Enterprise Linux 7.1 发行本中，可以使用
    `lvcreate`{.command} 和 `lvchange`{.command} 命令的 -k 和 -K
    选项控制精简池快照的激活，如 [第 4.4.17 节
    "控制逻辑卷激活"](#LVM_CLI.html#LV_activate){.xref} 所述。
    :::
-   ::: para
    这个手册论述了 `vgimport`{.command} 命令的 `--force`{.option}
    参数。可使用该参数导入缺少物理卷的卷组，并随后运行
    `vgreduce --removemissing`{.command} 命令。有关 `vgimport`{.command}
    命令的详情，请查看 [第 4.3.15 节
    "将卷组移动到其他系统"](#LVM_CLI.html#VG_move){.xref}。
    :::
-   ::: para
    这个手册论述了 `vgreduce`{.command} 命令的 `--mirrorsonly`{.option}
    参数。可使用该参数只删除从已失败物理卷镜像映象的逻辑卷。有关使用此选项的详情，请查看
    [第 4.3.15 节
    "将卷组移动到其他系统"](#LVM_CLI.html#VG_move){.xref}。
    :::
:::
::: para
另外对整篇文档进行小的技术修正及说明。
:::
:::
::: section
::: titlepage
# [⁠]{#LVM_overview.html#logical_volumes}1.2. 逻辑卷 {.title}
:::
[]{#LVM_overview.html#idm140426180980704 .indexterm}
::: para
逻辑卷管理会根据物理存储生成提取层，以便创建逻辑存储卷。这样就比直接使用物理存储在很多方面提供了更大的灵活性。使用逻辑卷时不会受物理磁盘大小限制。另外，软件无法看到硬件存储配置，因此可在不停止应用程序或者卸载文件系统的情况下，重新定义大小并进行移动。这样可降低操作成本。
:::
::: para
使用逻辑卷比直接使用物理存储时有以下优势：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    灵活的容量
    :::
    ::: para
    当使用逻辑卷时，可在多个磁盘间扩展文件系统，因为可以将磁盘和分区集合成一个逻辑卷。
    :::
-   ::: para
    可重新设定大小的存储池
    :::
    ::: para
    可以使用简单软件命令增加或者减少逻辑卷大小，而无需对所在磁盘设备重新格式化或者重新分区。
    :::
-   ::: para
    在线数据重新定位
    :::
    ::: para
    要部署更新、更快或者更有弹性的存储子系统，以便您可以在系统活跃时移动数据。在磁盘处于使用状态时重新分配磁盘。例如，可以在删除热插拔磁盘前将其清空。
    :::
-   ::: para
    方便的设备命名
    :::
    ::: para
    可使用用户定义及自定义命名组管理逻辑存储卷。
    :::
-   ::: para
    磁盘条带化
    :::
    ::: para
    可以创建一个可在两个或者更多磁盘间条状分布数据的逻辑卷。这可大幅度提高吞吐量。
    :::
-   ::: para
    镜像卷
    :::
    ::: para
    逻辑卷为您提供了方便配置数据镜像的方法。
    :::
-   ::: para
    卷快照
    :::
    ::: para
    可使用逻辑卷提取设备快照，这样可在持续备份或者在不影响真实数据的情况下测试修改效果。
    :::
:::
::: para
本文档的以下内容对在 LVM 中使用这些功能进行了论述。
:::
:::
::: section
::: titlepage
# [⁠]{#LVM_overview.html#LVM_definition}1.3. LVM 构架概述 {.title}
:::
[]{#LVM_overview.html#idm140426161157792
.indexterm}[]{#LVM_overview.html#idm140426159833088
.indexterm}[]{#LVM_overview.html#idm140426159831648
.indexterm}[]{#LVM_overview.html#idm140426159830688 .indexterm}
::: para
在 Linux 操作系统的 Red Hat Enterprise Linux 4 中，LVM2 替换了原来的
LVM1 逻辑卷管理器，LVM2 比 LVM1 具有更通用的内核架构。相对
LVM1，它有如下改进：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    灵活的容量
    :::
-   ::: para
    更有效的元数据存储
    :::
-   ::: para
    更好的修复格式
    :::
-   ::: para
    新的 ASCII 元数据格式
    :::
-   ::: para
    元数据的原子变化
    :::
-   ::: para
    元数据冗余副本
    :::
:::
::: para
LVM2 可向下兼容 LVM1，但不支持快照和集群。您可以使用
`vgconvert`{.command} 命令将卷组从 LVM1 格式转换成 LVM2 格式。有关转换
LVM 元数据格式的详情请参考 `vgconvert`{.command}(8) man page。
:::
::: para
LVM
逻辑卷的基本物理存储单元是块设备，比如一个分区或者整张磁盘。将这个设备初始化为
LVM [*物理卷*]{.emphasis}（PV）。
:::
::: para
要创建一个 LVM
逻辑卷，就要将物理卷合并到[*卷组*]{.emphasis}（VG）中。这就生成了磁盘空间池，用它可分配
LVM
逻辑卷（LV）。这个过程和将磁盘分区的过程类似。逻辑卷由文件系统和应用程序（比如数据库）使用。
:::
[]{#LVM_overview.html#idm140426158797648 .indexterm}
::: para
[图 1.1 "LVM 逻辑卷组成"](#LVM_overview.html#basic_lvm_volume){.xref}
演示一个简单 LVM 逻辑卷的组成：
:::
::: figure
[⁠]{#LVM_overview.html#basic_lvm_volume}
::: figure-contents
::: mediaobject
![LVM 逻辑卷组成](images/overview/basic-lvm-volume.png)
:::
:::
**图 1.1. LVM 逻辑卷组成**
:::
::: para
有关 LVM 逻辑卷组成的详情请参考 [第 2 章 *LVM
组件*](#LVM_components.html){.xref}。
:::
:::
::: section
::: titlepage
# [⁠]{#LVM_overview.html#LVM_Cluster_Overview}1.4. 集群逻辑卷管理器（CLVM） {.title}