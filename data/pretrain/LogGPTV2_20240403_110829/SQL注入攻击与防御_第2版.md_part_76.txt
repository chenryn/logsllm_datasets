#120114 0:30:52 server id 1 end_1og_pos 4584 Query thread_id=16
exec_time=0 error_code=0
COMIT
/ *!*/ ;
DELIMITER;
 End of log file
1/。botutqbsA= Aq poppe / xvaro
/*150003 SET COMPLETION_TYPE=BOLD_COMPLETION_TYPE*/ ;
PostgreSQL
可以使用PostgreSQL命令行客户端米返回事务日志信息。在PostgreSQL中，事务日志默
认是不启用的，在启用了PostgreSQL的事务日志之后，也可以再将其禁用。在较新版本的具
有UNLOGGED表的PostgreSQL中，无论启用还是禁用了事务日志，都不会将相关的INSERT、
UPDATE 和DELETE操作写入事务日志中。由于存在这些局限，在调查取证时，最好利用
PostgreSQL的statement log来标识我们感兴趣的那些事务，包括来自UNLOGGED表的那些事
务。关于如何访间statementlog，请参考前面“2.数据库执行计划”中PostgreSQL的例子。
在调查取证期间，事务日志具有重要的作用，但也存在一定的局限性。事务日志是高度可
配置的，其配置最终决定了有多少信息可以记录在事务日志中，以及在事务日志被覆写
(overwriten)之前这些信息的生存期有多长。事务日志信息可以持续任意长的时间，从几分钟
到数月，甚至一直持续记录。不同的RDBMS平台在事务日志的保留和记录的信息方面存在着
重要的差别，建议读者参阅数据库厂商的说明文档以获得更详细的信息。
4.数据库对象的时间截
从专用内存管理到运行自已的虚拟操作系统以管理内存和处理器，近年来数据库开始模仿
操作系统。另外，与操作系统类似，绝大多数RDBMS产品还为在系统结构内创建和修改的对
象和文件维护着时间截信息。
在调查取证期间，生成关键对象和相应时间截的列表是个好办法，这可以在可疑攻击时间
段内标识对象的创建和修改活动。在调查可疑的SQL注入攻击时，请注意下列常常与攻击有关
的活动：
·创建用户账号，这通常用于创建访问的后门。
373
---
## Page 388
SQL注入攻击与防御（第2版）
·为已有账号增加权限，这通常是执行权限提升的一部分操作。
·创建表，新创建的表通常用于在将信息返回给攻击者之前，存储中间结果。
下面是一些可以在Microsoft SQL Server、Oracle、MySQL 和 PostgreSQL数据库上运行的
查询，这些查询可以返回时间截信息。
SQL Server
下面的查询将返回当前数据库中视图、过程、函数、表和扩展过程的一个列表，并按照修
改日期和创建日期以降序方式排序：
(select sob.name as *object*, sch.name as *schena′, type_desc,
create_date, modify_date from sys.all_objects sob, sys.schemas sch
WHERE sob.schema_id = sch.schema_id and sob.type IN (*v', *P', *FN′,
*U′,*S′,*IT′,*X′))
UNION
(select name, '', 'Db_User', createdate, updatedate from sys.sysusers)
NOIN∩
(select name, '', 'Login*, createdate, updatedate from sys.syslogins)
在下面的查询结果示例中，应该将表名!nv!stble视为可疑情况，因为这是个异常的表名，
如果该表是在攻击时间段内创建或修改过的话，就更应该加以调查，如图10-4所示。
Rese
nane
otiedt_d
type_desc
oreale_dae
nodly_date
1
nvsble
5575058
USER_TABLE
2012-01409 22:44.34.897
2012-01-09 22:44:34.897
2
Vacation
2121058582
2137058649
PatEnployee
USER_TABLE
2012-0109 22:23:46.217
2012-01-09 22:23:46.217
3
USER_TABLE
2012-01-09 22:23:46.013
2012-01-09 22:23:46.013
Enployee
2105058535
USER_TABLE
2012-01-09 22:23:44.247
2012-0109 22:23:44.247
5
ayuoftobprfis
SYSTEM_TALE
SYSTEM_TABLE
2008-07-09 16:20:01.070 2010-11-19 22:17:38.350
6
tysanymkeys
图10-4查询结果示例，包含了 Microsoft SQL Server 对象的时间截
Oracle
在Oracle中，可以使用下面的查询返回当前数据库中数据库对象类型的一个列表，比如表、
视图和过程，并按照修改日期和创建日期以降序方式排序：
Select object_name, object_id, object_type, created, last_DDL_time from
dba_objects ORDER BY LAST_DDL_time DESC, created DESC;
查询结果的示例如图10-5所示。
MySQL
当使用MySQL数据库时，应该注意对于某些对象—比如触发器和视图
并不存储时
间戳。运行下面的查询，没有时间截的对象将返回NULL值作为时间戳列的值：
TABLE_TYPE as "OBJECT_TYPE", CREATE_TIME, UPDATE_TIME from
information_schema.tables)
UNION
374
---
## Page 389
第10章确认并从SQL注入攻击中恢复
(SELECT SPECIFIC_NAME, ROUTINE_SCHEMA, ROUTINE_TYPE, CREATED, LAST_
ALTERED FROM information_schema.routines WHERE ROUTINE_TYPE =
′PROCEDURE*)
UNION
(SELECT User, '', 'DB_USER', **, ** from mysql.user)
Administrator:Command Prom
DBJECTRNE
0BJECT_ID 0BJECT_TYE
CREIEDLAST
LNSEVTOLERNP
12704
33-N0N-11
1588
33-N0N-11
B0-HN-11
25-
-
MOCPOS
RSESCLERI_RECINERRBLE_SORIPT
354
255
THELE
JOB
3-H0N
24-
-21 25-
24-18
77853
THBLE
2牛
NPRNETER_PK
7705
DNEX
PRRTITION
TNEE
PHRTTIH
TRTITON
carn
RCTNEER
MDEX
NDEK
TRTITON
KISTORY
THELE
PRTTTIN
HRTITEION
SERNICE_SHTPK
IS3S
INEX
PRRTITION
PRRTITN
3-JRN-12
HPRRRRETER"
7249
7250
TRELE
PRRTITION
图10-5包含Oracle对象时间戳的查询结果示例
查询结果的示例如图10-6所示。
DBJECT
OBJECT_SCHEMA
CBECT_TYPE
CHARACTER_SETS
inlomaion_schena
SYSTEMVEW
201201-1511:4513
COLLATIONS
nfonalion_schena
201201-1511:1
COLLATION_CHARACTER_SET_APPUCABIUTY ifomalion_schena
M3AW31SAS
201201-1511:45:13 
COLUIMNS
ifomalion_schena
SYSTEMVEW
201201-1511:45:13 2012-01-1511:45:13
COUUN_PRMLEGES
irlomalior, chena
SYSTEMVIEW
201201-15114513 
ENGNES
ilomadion_schena
SYSTEMVIEW
201201-1511:513 
EVENTS
rlomalior_schena
A3IAW31SAS
201201-1511:45:13 2012-01-1511:45:13
图10-6包含MySQL对象时间戳的查询结果示例
在MySQL中，某些对象并没有与之关联的时间戳，签于此，建议检查查询结果，注意那
些不符合服务器命名规范的条目。
PostgreSQL
对于创建的对象、表和用户等，PostgreSQL并不记录它们的时间戳信息。
可以使用下面的查询，返回当前数据库中关键对象的名称、模式和类型。可以检查不符合
规范的对象名称，应该将其视为可疑对象并由系统数据库管理员进行鉴定：
*OBJECT_TYPE" from Pg_proc UNION ALL select tgname,
0.8
from pg_trigger
‘','TRIGGER'
UNION ALL select tablename, schemaname, 'TABLE' from Pg_tables UNION
375
---
## Page 390
SQL注入攻击与防御（第2版）
ALL select usename, '', *usER' from pg_user
查询结果的示例如图10-7所示。
OBJECT_NAME
OBJECT_SCHEMA
test
text
OBJECT_TYPE
same
sqliaplenentation infc infornation schens
TABLE
3q]langueges
infornation schena