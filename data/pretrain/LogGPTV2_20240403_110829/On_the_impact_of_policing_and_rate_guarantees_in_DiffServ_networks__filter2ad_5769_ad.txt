set the encoding rate for audio near zero.  
Lost Clip 
Session: 
Bytes encoded (total): 6936504 
Bit rate (expected): 1015.5 Kbps 
Bit rate (average): 771.7 Kbps 
Video [1015.4 Kbps]: 
Bytes encoded (total):6935380 
Bit rate (expected):1015.4 Kbps 
Bit rate (average):771.6 Kbps 
Frames per second (expected):30.0 
Frames per second (average):29.9 
Frames (total):2150 
Audio [0.1 Kbps]: 
Bytes encoded (total):1124 
Bit rate (expected):0.1 Kbps 
Bit rate (average):0.1 Kbps 
Samples (total):562 
Dark Clip 
Session: 
Bytes encoded (total):11976984 
Bit rate (expected):1015.6 Kbps 
Bit rate (average):680.5 Kbps 
Video [1015.5 Kbps]: 
Bytes encoded (total):11974782 
Bit rate (expected):1015.5 Kbps 
Bit rate (average):680.4 Kbps 
Frames per second (expected):30.0 
Frames per second (average):30.0 
Frames (total):4219 
Audio [0.1 Kbps]: 
Bytes encoded (total):2202 
Bit rate (expected):0.1 Kbps 
Bit rate (average):0.1 Kbps 
Samples (total):1101 
Table 3. Properties of Windows Media Encoded Clips. 
4.  Results  
As  mentioned  in  Section  2.2,  we  originally  considered  a 
number  of  different  video  servers  but  ultimately  limited  our 
experiments  to only  two  types  of  servers:    The  Video  Charger™ 
server  for experiments over the  QBone and a Windows Media™ 
server for experiments over our local testbed.  Table 4 summarizes 
the different configurations used. 
As mentioned previously in Section 2.2, the main motivation 
for not including the other servers we initially considered was their 
relatively poor performance in the presence of the dropped packets 
induced by traffic policers. Recall that those servers rely on large 
datagrams  for  the  transmission  of  video  frames,  and  those 
datagrams were then fragmented into many smaller packets, so that 
the loss of even one packet at the policer would typically result in 
the  loss  of  an  entire  datagram.    This  problem  was  further 
compounded  by  the  fact  that  a  single  datagram  triggered  the 
generation of many back-to-back packets, which resulted in several 
dropped packets at the policer because of the small token bucket 
depth used for EF traffic. In addition, policing losses together with 
the service guarantees provided to EF traffic appeared to somewhat 
confuse the adaptation mechanism of the servers.  Specifically, the 
fact that delivered packets experienced small delays seems to have 
been  interpreted  by  the  server  as  an  indication  that  sufficient 
bandwidth  was  available.  As  a  result,  the  adaptation  mechanism 
reacted to the loss of packets (because of policing) by forcing the 
server to increase its data rate to make up for the losses. This in 
turn  resulted  in  further  packet  losses  followed  by  yet  other  rate 
increases until performance got so poor that the server would back 
down  to  very  low  transmission  rates.    This  cycle  would  repeat  a 
number of times, until the client decided to break the connection, 
as  it  was  deemed  too  unreliable.  In  short,  traffic  conditioning 
essentially misled the dynamic rate control approach of the servers, 
to the point of making them unusable unless the token rate was set 
to the maximum rate of the server.  
Video Server used 
Network protocol 
Contents Type 
Contents properties 
PHB tested 
Service parameters  
Out of profile 
QBone 
UDP 
MPEG1 
rate 
Drop 
Video Charger  Windows Media Server 
Experiments on 
Local Testbed 
TCP, UDP 
WMV Format 
Constant Bit 
Max bit rate is constant 
EF 
Token rate, Bucket Depth 
Drop (router 1) 
for 
tool 
action 
the  VQM 
(Shape – Linux router) 
Table 4. Summary of Experimental Configurations. 
The  main  results  of  our  experiments  consist  of  the  quality 
estimates  generated  by 
the  different 
configurations  we  tried.  Before  we  proceed  with  the  description 
and  discussion  of  the  results,  it  is  important  to  note  that  there  is 
some  variability  in  the  results  themselves.    Specifically,  for  the 
same  combination  of  video  server,  video  client,  and  network 
parameters,  it  is  possible  to  obtain  slightly  different  quality 
estimates  in  consecutive  runs  of  an  experiment.    This  is  because 
many factors can affect the set of packets ultimately delivered to 
the client together with their timing.  For example, different load 
conditions  at  the  server  or  variations  in  the  level  of  interfering 
traffic through the local network connecting the server to the router 
performing  policing,  can  all  influence  the  set  of  packets  that  the 
policer will ultimately drop.  Those differences in lost packets will 
in  turn  affect  the  resulting  quality  of  the  video  played  out  at  the 
client. In particular, as seen in, say, in Figure 7 and Figure 8, it is 
quite possible for a small increase in token rate to yield a degraded 
video quality.  This is in part because depending on the types of 
scenes,  the  intrinsic  rate  of  the  video  clip,  and  how  the  server 
reacts  to  a  slight  increase  in  token  rate,  the  end-result  need  not 
always  be  fewer  dropped  frames.  Such  inherent  issues  not 
withstanding,  we  have  tried  to  minimize  such  variations  by 
eliminating  most  external  interference  sources,  e.g.,  dedicated 
video  server,  absence  of  local  interfering  traffic,  etc.,  so  that  the 
focus  was  on  the  impact  of  policing  actions  for  different 
configurations.  Note that a few  experiments on the local testbed 
did  involve  interfering  cross-traffic,  and  the  QBone  experiments 
did not allow us to control the presence and absence of interfering 
traffic.  In all cases where we were able to compare the outcome of 
experiments  with  and  without  interfering  traffic,  only  minor 
variations  were  observed  that  were  primarily  a  reflection  of  how 
the  different  routers  implemented  the  prioritization  of  EF  traffic.  
In general, it is impossible to completely eliminate all sources of 
variation,  and  although  results  did  not  vary  significantly  when 
experiments  were  repeated,  it  is  important  to  keep  this  in  mind 
when  interpreting  the  results.    In  other  words,  general  trends  are 
clearly meaningful, but minor fluctuations in quality need not be. 
4.1 QBone Testbed Results 
Copies  of  the  clips  Dark  and  Lost  encoded  at  the  different 
rates  identified  in  Section  3.3  were  streamed  through  the  QBone 
from a Video Charger server located at the remote site to a video 
client  at  the  local  site  (see  Figure  5).  Streaming  was  done  over 
UDP, as this was the only configurable option at the remote server 
when EF marking was also to be applied. Each clip was streamed 
through  the  network  several  times  and  for  different  choices  of 
network  service  parameters  (token  rate  and  bucket  depth).    Two 
(small)  token  bucket  depth  values  were  used,  namely  3000 bytes 
and 4500 bytes, and for each the token rate value was varied from 
just  below  the  average  stream  rate  to  a  value  for  which  the 
maximum  video  quality  rating  of  0  was  achieved.  This  typically 
corresponded  to  the  maximum  rate  of  the  video  stream.    Initial 
results are shown in Figure 7 through Figure 9 for the Lost clip and 
in  Figure 10 through Figure 12 for the Dark clip.  Each figure has 
two  sets  of  curves,  one  for  each  token  bucket  depth.    The  two 
curves in each set correspond to the fraction of lost frames and the 
corresponding  video  quality  rating  produced  by  the  VQM  tool.  
For comparison purposes, those values are plotted against the same 
y-axis scale, while the x-axis corresponds to increasing token rate 
values.  Tables available from [2] provide more precise numerical 
values.  Recall  that  a  quality  score  of  1.0  is  the  worst  possible7, 
while a score of 0.0 corresponds to the best possible video quality, 
i.e., identical to the quality of the original clip used as reference. 
Quality Index, 
B=3000 
Frame Loss,  
B=3000 
Quality Index, 
B=4500 
Frame Loss, 
B=4500 
0.00 0.10 0.20 0.30 0.40 0.50 0.60 0.70 0.80 0.90 1.00 
s
s
o
L
e
m
a
r
F
x
e
d
n
/
I
y
t
i
l
a
u
Q
1200 
1400 
1600 
1800 
Token Rate 
2000 
2200 
Figure 7. QBone Streaming (Lost clip/1.7Mbps encoding): 
Video Quality & Frame Loss vs Token Rate. 
s
s
o
l
e
m
a
r
F
/
x
e
d
n
I
y
t
i
l
a
u
Q
0.00 0.10 0.20 0.30 0.40 0.50 0.60 0.70 0.80 0.90 1.00 
1200 
Quality Index 
B=3000 
Frame Loss, 
B=3000 
Quality Index, 
B=4500 
Frame Loss, 
B=4500 
1400 
1800 
1600 
Token Rate 
2000 
2200 
Figure 8. QBone Streaming (Lost clip/1.5 Mbps encoding): 
Video Quality & Frame Loss vs Token Rate. 
(cid:137)                                                                        
7  Quality  index  scores  may  exceed  1.0  for  extremely  distorted 
video that falls outside the range of subjective assessments used 
to develop the VQM tool. 
In  this  first  set  of  experiments,  the  quality  of  the  received 
video  was  compared  to  that  of  the  transmitted  clip,  i.e.,  the 
reference points were different for each encoding rate. The first set 
of  experiments  was  performed  to  assess  the  quality  degradations 
resulting from network impairments. In a latter set of experiments, 
the  comparison  was  done  with  respect  to  the  highest  quality 
original  clip,  namely  the  clip  corresponding  to  a  1.7  Mbps 
encoding  rate,  so  as  to  assess  the  trade-off  that  exists  between 
quality degradations imposed by the network and those due to the 
encoding itself.   
Quality Index, 
B=3000 
Frame Loss, 
B=3000 
Quality Index, 
B=4500 
Frame Loss, 
B=4500 
s
s
o
l
e
m
a
r
F
/
x
e
d
n
I
y
t
i
l
a
u
Q
1.00 
0.80 
0.60 
0.40 
0.20 
0.00 
700 
l
s
s
o
e
m
a
r
F
/
x
e
d
n
I
y
t
i
l
a
u
Q
1.00 
0.90 
0.80 
0.70 
0.60 
0.50 
0.40 
0.30 
0.20 
0.10 
0.00 
1200 
800 
900 
Token Rate 
1000 
1100 
Figure 9. QBone Streaming (Lost clip/1.0Mbps encoding): 
Video Quality & Frame Loss vs Token Rate. 
Quality Index, 