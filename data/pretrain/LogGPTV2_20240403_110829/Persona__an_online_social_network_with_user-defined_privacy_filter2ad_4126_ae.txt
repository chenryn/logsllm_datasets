text and signature) data for Facebook proﬁle pages
by number of data items on the page.
Figure 4: CDF of total size of plaintext and stored
(ciphertext and signature) data for Facebook proﬁle
pages.
exchange their current locations with friends but not third
parties, enabling functionality similar to that of Loopt [25]
without trusting the service provider.
The requirements for encryption performance of mobile
OSN clients are a bit diﬀerent from their desktop counter-
parts. Because of their smaller screens and often slower net-
 0 2 4 6 8 10 10 20 30 40 50 60 70 80 90 100Total Profile Load Time (seconds)Number of Data ItemsCool - 100 PoliciesCool - 10 PoliciesCool - 1 PolicyWarm 0 0.2 0.4 0.6 0.8 1 0 2 4 6 8 10CDFTotal Profile Load Time (seconds)WarmCool - 1 PolicyCool - 10 PoliciesCool - 100 Policies 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 10 20 30 40 50 60 70 80 90 100Time to Decrypt and Verify (seconds)Number of Data ItemsCool 0 20 40 60 80 100 10 20 30 40 50 60 70 80 90 100Data Size (KBs)Number of Data ItemsStoredPlaintext 0 0.2 0.4 0.6 0.8 1 0 20 40 60 80 100 120 140CDFData Size (KBs)PlaintextStored144work connections, the requirements for decryption are less
demanding: when only a few messages may be retrieved or
displayed at a time, decrypting only a few items is necessary.
Conversely, mobile devices tend to have limited computation
power and limited battery life, so the operations themselves
should be reasonably interactive.
We cross-compiled the cpabe [2] libraries and their de-
pendencies (pbc [27], gmp, glib, openssl, gettext, libiconv,
and libintl) for the iPhone SDK 2.2.1 [4].2 Some of these
libraries (e.g., libcrypto from OpenSSL) are present on the
device but not included in the oﬃcial SDK. Cryptographic
operations supported on the device may be implemented
using hardware acceleration when applications are written
using Apple’s deﬁned APIs; writing directly to the OpenSSL
library forgoes these potential advantages. In other words,
our benchmark is suﬃcient to show that ABE is practical
on a widespread mobile device, but not intended to compare
ABE or AES performance from one device to another.
On a ﬁrst-generation iPhone (620MHz ARM), decryption
of ABE encrypted text fragments smaller than 1KB takes
approximately 0.254 seconds. This value is the average time
to decrypt 40 randomly-generated messages of 40 diﬀerent
sizes drawn uniformly at random from 0 to 4095 bytes of
5 diﬀerent access structures having one to ﬁve attributes.
Message size and access structure have little eﬀect: the mes-
sage itself is encrypted using AES-128, and the access struc-
ture appears to have a greater eﬀect on the time to encrypt
than to decrypt. Encryption times average 0.926 seconds
with one attribute (an average of 25 messages of 25 sizes;
some of this time is likely consumed by AES-128 key gener-
ation) and 0.43 seconds for each additional attribute.
We believe that the 0.254 second object decryption time
compares favorably to the typical RTT of cellular data sys-
tems (Lee [22] reported a 417ms average RTT for 1x EV-DO)
and does not preclude a mobile Persona.
7. RELATED WORK
We present related work dealing with studies of OSN pri-
vacy, systems implementing privacy on OSNs, access control,
ABE, and systems built on ABE.
OSN studies. Several works examine the characteristics
and recent growth of OSNs [12, 17, 19, 28, 29]. Krishna-
murthy and Willis [20] study how OSNs share users’ per-
sonal data with third parties such as applications and ad-
vertisers. They note that Facebook places no restrictions
on the data that is shared with external applications. Ad-
vertisers use personal data, as well as information acquired
through cookies, to serve targeted ads.
Prior research has characterized privacy problems with
OSNs. Acquisti and Gross [1, 13] show that Facebook users
at CMU often share more data than they are aware of.
Lam et al. [21] study a Taiwanese OSN to show that users’
annotations compromise the privacy of others. Ahern et
al. [3] study Flickr to see how location information is leaked
through users’ photographs. Several studies [16, 18, 38] ex-
ploit the friend graph to infer characteristics about users.
Persona resolves these issues by allowing users to precisely
express the policies under which their data, including friend
information, is encrypted and stored.
to
2Patches
braries using Apple’s gcc
http://www.cs.umd.edu/projects/persona
cross-compilation
enable
li-
compiler are available at
these
of
OSN privacy systems. The research community has rec-
ognized the problem of privacy in OSNs and proposed sev-
eral solutions which build on top of existing OSNs. NOYB [14]
hides an OSN user’s personal data by swapping it with data
“atoms” of other OSN users. NOYB provides a way to map
these atoms to their original contents. ﬂyByNight [26] is a
Facebook application that facilitates secure one-to-one and
one-to-many messages between users. Finally, Lockr [34]
uses ACLs based on social attestations of the relationship
between two users, similar to how Persona distributes ASK s
to users that satisfy certain attributes. Persona and Lockr
both use XML-based formats to transfer privacy-protecting
structures.
Access control and ABE. In Persona, the attributes a
user has determines what data they can access. This re-
sembles role-based access control [11] and attribute-based
access control, which bases authorization decisions on the
attributes assigned to users [6, 40]. Attribute based encryp-
tion (ABE) was introduced as an application of a type of
identity based encryption (IBE) called fuzzy IBE [32]. Un-
like early ABE schemes, CP-ABE [5], which Persona uses,
binds ciphertexts to access structures while secret keys con-
tain attributes. Ciphertexts can be decrypted with a key
that contains a set of attributes that satisﬁes the access
structure. Multi-authority ABE [7, 23] removes the need
for transitive key translations but requires each user to have
a globally-unique identiﬁer and the attribute set to be par-
titioned amongst the users.
Pirretti et al. [31] show how to build a dating social net-
work that only reveals information about a user if their at-
tributes match another user’s desired description. Unlike
Persona, their system relies on a single authority to gener-
ate all secret keys. Traynor et al. [35] introduce a tiered
architecture to improve the performance of ABE so that it
scales to millions of users.
8. DISCUSSION
Our Persona prototype and evaluation demonstrates new
functionality and reasonable performance. In this section,
we discuss unexplored questions a large-scale deployment
will have to confront.
Factoring applications. Persona was motivated by the
observation that current OSN applications have complete
access to user data. Current Persona applications, on the
other hand, have no access to user data and must oper-
ate entirely using data references. Applications that act on
user data must be given selective access as described in Sec-
tion 4.3. This approach is similar to how others [20] have
discussed statically classifying user data in OSNs for appli-
cation access.
An alternate design is to refactor applications into one
piece administered by the application provider (as now),
and another piece capable of transforming user data that
would be executed on a trusted host (likely, within the user’s
browser). Existing taint-tracking techniques [33, 39] can be
used to guarantee that user-data remains safe. This option
relieves the user from thinking about what data should be
released to which applications; however, application design
and implementation must undergo a substantial change.
Factored data. Persona decouples application metadata
from encrypted content. This may lead to cases when one
is available but not the other. Ideally, data and metadata
would share availability, but combining both might lead to
145unacceptable performance or violate storage policy (about
where data might be stored). A scalable policy-compliant
design for a fate-sharing [8] dissemination infrastructure is
an open problem.
Deployment incentives. OSNs are popular, in part, be-
cause they are free. Persona’s design requires users to con-
tract with applications, and some applications, such as the
storage service, may have little incentive to provide free ser-
vice. Users may have to pay for this storage or agree to use
some other service or applications in exchange for free stor-
age. Other applications—for instance, versions of Doc—may
augment the metadata with advertisements, which may pro-
vide a sustaining deployment model. As privacy-enhanced
OSNs become popular, current OSN providers may choose
to incorporate privacy features, in eﬀect supporting the Per-
sona + Facebook model we have implemented.
9. CONCLUSION
Privacy controls provided by existing OSNs are not suﬃ-
cient since they rely on trusting the OSNs with data from
which they can proﬁt. We have shown how ABE and tradi-
tional public key cryptography can be combined to provide
the ﬂexible, user-deﬁned access control needed in OSNs. We
have described group-based access policies and the mecha-
nisms needed to provide decryption and authentication by
both groups and individuals. We have demonstrated the ver-
satility of these operations in an OSN design called Persona,
which provides privacy to users and the facility for creating
applications like those that exist in current OSNs.
To prove the feasibility of Persona, we implemented and
evaluated Persona on Facebook proﬁle data. Median load
times in Persona are 2.3 seconds and the median size of the
encrypted proﬁle data is 20.4 KB. We have shown that we
can achieve privacy in OSNs with acceptable performance
even on mobile devices.
Acknowledgments
We would like to thank Alan Mislove for providing us with
the Facebook proﬁle data used in our evaluation. We would
also like to thank Balachander Krishnamurthy, Dov Gordon,
Katrina LaCurts, and our anonymous reviewers for their
assistance and comments. This work was supported in part
by NSF grant CNS-0626629.
10. REFERENCES
[1] A. Acquisti and R. Gross. Imagined communities:
Awareness, information sharing, and privacy on the
facebook. In PET, 2006.
[2] Advanced crypto software collection.
http://acsc.csl.sri.com/cpabe/.
[3] S. Ahern, et al. Over-exposed?: privacy patterns and
considerations in online and mobile photo sharing. In
Human Factors in Computing Systems, 2007.
[4] Apple iPhone SDK. http://developer.apple.com/iphone/.
[5] J. Bethencourt, A. Sahai, and B. Waters. Ciphertext-policy
attribute-based encryption. In Security and Privacy, 2007.
[6] P. A. Bonatti and P. Samarati. A uniform framework for
regulating service access and information release on the
web. Journal of Computer Security, 2002.
[7] M. Chase. Multi-authority attribute based encryption. In
TCC, 2007.
[8] D. Clark. The design philosophy of the darpa internet
protocols. In SIGCOMM, 1988.
[9] Facebook statement of rights and responsibilities.
http://www.facebook.com/press/info.php?statistics#
/terms.php?ref=pf.
[10] Facebook statistics.
http://www.facebook.com/press/info.php?statistics.
[11] D. F. Ferraiolo and D. R. Kuhn. Role-based access
controls. In National Computer Security Conference, 1992.
[12] M. Gjoka, M. Sirivianos, A. Markopoulou, and X. Yang.
Poking facebook: Characterization of OSN applications. In
WOSN, 2008.
[13] R. Gross and A. Acquisti. Information revelation and
privacy in online social networks (the facebook case). In
WPES, 2005.
[14] S. Guha, K. Tang, and P. Francis. NOYB: Privacy in
online social networks. In WOSN, 2008.
[15] K. P. Gummadi, S. Saroiu, and S. D. Gribble. King:
Estimating latency between arbitrary internet end hosts. In
IMC, 2002.
[16] J. He, W. W. Chu, and Z. V. Liu. Inferring privacy
information from social networks. In ISI, 2006.
[17] J. Kleinberg. Challenges in social network data: Processes,
privacy and paradoxes. In KDD, 2007. Invited talk.
[18] A. Korolova, R. Motwani, S. U. Nabar, and Y. Xu. Link
privacy in social networks. In Information and Knowledge
Mining (CIKM), 2008.
[19] B. Krishnamurthy. A measure of online social networks. In
COMSNETS, 2009.
[20] B. Krishnamurthy and C. E. Wills. Characterizing privacy
in online social networks. In WOSN, 2008.
[21] I.-F. Lam, K.-T. Chen, and L.-J. Chen. Involuntary
information leakage in social network services. In IWSEC,
2008.
[22] Y. Lee. Measured TCP performance in CDMA 1x EV-DO
network. In PAM, 2006.
[23] H. Lin, Z. Cao, X. Liang, and J. Shao. Secure threshold
multi authority attribute based encryption without a
central authority. In INDOCRYPT, 2008.
[24] Linkedin. http://www.linkedin.com/.
[25] Loopt. http://www.loopt.com.
[26] M. M. Lucas and N. Borisov. flybynight: Mitigating the
privacy risks of social networking. In WPES, 2008.
[27] B. Lynn. On the implementation of pairing-based
cryptosystems. Ph.D. thesis, Stanford, 2008.
[28] A. Mislove, et al. Measurement and analysis of online
social networks. In IMC, 2007.
[29] A. Mislove, et al. Growth of the ﬂickr social network. In
WOSN, 2008.
[30] D. Naor, M. Naor, and J. B. Lotspiech. Revocation and
tracing schemes for stateless receivers. In CRYPTO, 2001.
[31] M. Pirretti, P. Traynor, P. McDaniel, and B. Waters.
Secure attribute-based systems. In ACM CCS, 2006.
[32] A. Sahai and B. Waters. Fuzzy identity-based encryption.
In Eurocrypt, 2005.
[33] U. Shankar, et al. Detecting format-string vulnerabilities
with type qualiﬁers. In USENIX Security, 2001.
[34] A. Tootoonchian, et al. Lockr: Social access control for web
2.0. In WOSN, 2008.
[35] P. Traynor, K. Butler, W. Enck, and P. McDaniel.
Realizing massive-scale conditional access systems through
attribute-based cryptosystems. In NDSS, 2008.
[36] Where I’ve been. http://apps.facebook.com/whereivebeen/.
[37] C. K. Wong, M. Gouda, and S. S. Lam. Secure group
communications using key graphs. SIGCOMM CCR,
28(4):68–79, 1998.
[38] W. Xu, X. Zhou, and L. Li. Inferring privacy information
via social relations. In ICDEW, 2008.
[39] H. Yin, et al. Capturing system-wide information ﬂow for
malware detection and analysis. In CCS, 2007.
[40] T. Yu, M. Winslett, and K. E. Seamons. Supporting
structured credentials and sensitive policies through
interoperable strategies for automated trust negotiation.
Transactions on Information and System Security, 2003.
146