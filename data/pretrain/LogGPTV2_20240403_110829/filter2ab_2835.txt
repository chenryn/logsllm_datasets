### Title: Black Hat EU-22: IoT Manufacturers' New Nightmare: Design Flaws and Deployment Chaos in Cloud-based IoT Access Control Policies

Modern Internet of Things (IoT) device manufacturers are increasingly leveraging managed Platform-as-a-Service (PaaS) and Infrastructure-as-a-Service (IaaS) IoT clouds, such as AWS IoT and Azure IoT, for secure and convenient development and deployment. IoT access control is typically enforced through manufacturer-specified, cloud-enforced policies (e.g., JSON documents called IoT Policies on AWS IoT), which define which users can access specific IoT devices and resources under certain constraints.

However, developing and deploying these policies securely can be complex, leaving ample room for errors. Flawed IoT access policies can lead to significant security vulnerabilities for both IoT users and manufacturers. In this presentation, we will uncover design flaws and poor deployment practices in IoT policies from real-world manufacturers. We will introduce four new types of flaws (zero-days) that are commonly encountered:

1. **Semantic Gap in IoT Access Policies**: This flaw arises when there is a discrepancy between the intended and actual policy semantics.
2. **Flawed Cooperation Between IAM Policy and IoT Policy**: This occurs when Identity and Access Management (IAM) policies and IoT policies do not work together effectively, leading to security gaps.
3. **Dilemma with IoT Policy Templates**: This issue involves the misuse or misconfiguration of pre-defined policy templates, which can introduce unintended access permissions.
4. **Constraint of IoT-Policy Mutual Exclusion**: This flaw arises when policies are not designed to handle mutual exclusions, leading to conflicting access rules.

The first two flaws are related to the design phase, while the last two pertain to the deployment and implementation phase. Our research identified these flaws in 36 IoT manufacturers and 310 open-source AWS-IoT-based projects on GitHub. Specifically, 13 manufacturers suffered from 25 instances of the new flaws, and 172 IoT policies from GitHub were found to be flawed.

We reported our findings to the affected manufacturers, GitHub project owners, and AWS. Most vendors have acknowledged the issues, and AWS is collaborating with us to address these flaws at their root. Additionally, we will introduce P-Verifier, a new formal verification tool designed to help developers and manufacturers ensure the accuracy and security of their IoT access policies before they go into production. Our evaluation demonstrates that P-Verifier is highly usable and accurate, providing a robust solution to mitigate these common flaws.