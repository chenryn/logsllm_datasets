1
关于Tomcat中的三个Context的理解
Context
ServletContext
ApplicationContext
StandardContext
@yzddmr6
p⽜在知识星球⾥问了⼀个问题：Tomcat中这三个StandardContext、ApplicationContext、
ServletContext都是⼲什么的
skay师傅给出了⾃⼰的理解：https://mp.weixin.qq.com/s/BrbkTiCuX4lNEir3y24lew
这⾥来讲⼀讲我的理解，说的不⼀定对，仅供参考。
context是上下⽂的意思，在java中经常能看到这个东⻄。那么到底是什么意思呢？
根据我的理解，如果把某次请求⽐作电影中的事件，那么context就相当于事件发⽣的背景。例如⼀部电影
中的某个镜头中，张三⼤喊“奥利给”，但是只看这⼀个镜头我们不知道到底发⽣了什么，张三是谁，为什
么要喊“奥利给”。所以就需要交代当时事情发⽣的背景。张三是吃饭前喊的奥利给？还是吃饭后喊的奥利
给？因为对于同⼀件事情：张三喊奥利给这件事，发⽣的背景不同意义可能是不同的。吃饭前喊奥利给可
能是饿了的意思，吃饭后喊奥利给可能是说吃饱了的意思。在WEB请求中也如此，在⼀次request请求发
⽣时，背景，也就是context会记录当时的情形：当前WEB容器中有⼏个filter，有什么servlet，有什么
listener，请求的参数，请求的路径，有没有什么全局的参数等等。
Context
2
ServletContext是Servlet规范中规定的ServletContext接⼝，⼀般servlet都要实现这个接⼝。⼤概就是
规定了如果要实现⼀个WEB容器，他的Context⾥⾯要有这些东⻄：获取路径，获取参数，获取当前的
filter，获取当前的servlet等
ServletContext
  1 package javax.servlet;
  2
  3 ...
  4
  5 public interface ServletContext {
  6     String TEMPDIR = "javax.servlet.context.tempdir";
  7     String ORDERED_LIBS = "javax.servlet.context.orderedLibs";
  8
  9     String getContextPath();
 10
 11     ServletContext getContext(String var1);
 12
 13 ...
 14
 15     /** @deprecated */
 16     @Deprecated
 17     Servlet getServlet(String var1) throws ServletException;
 18
 19     /** @deprecated */
 20     @Deprecated
 21     Enumeration getServlets();
 22
 23     /** @deprecated */
 24     @Deprecated
 25     Enumeration getServletNames();
 26
 27     void log(String var1);
 28
 29     /** @deprecated */
 30     @Deprecated
 31     void log(Exception var1, String var2);
 32
3
 33     void log(String var1, Throwable var2);
 34
 35     String getRealPath(String var1);
 36
 37     String getServerInfo();
 38
 39     String getInitParameter(String var1);
 40
 41     Enumeration getInitParameterNames();
 42
 43     boolean setInitParameter(String var1, String var2);
 44
 45     Object getAttribute(String var1);
 46
 47     Enumeration getAttributeNames();
 48
 49     void setAttribute(String var1, Object var2);
 50
 51     void removeAttribute(String var1);
 52
 53     String getServletContextName();
 54
 55     Dynamic addServlet(String var1, String var2);
 56
 57     Dynamic addServlet(String var1, Servlet var2);
 58
 59     Dynamic addServlet(String var1, Class var
2);
 60
 61     Dynamic addJspFile(String var1, String var2);
 62
 63      T createServlet(Class var1) throws Se
rvletException;
 64
 65     ServletRegistration getServletRegistration(String var1);
 66
 67     Map getServletRegistr
ations();
 68
 69     javax.servlet.FilterRegistration.Dynamic addFilter(String va
4
r1, String var2);
 70
 71     javax.servlet.FilterRegistration.Dynamic addFilter(String va
r1, Filter var2);
 72
 73     javax.servlet.FilterRegistration.Dynamic addFilter(String va
r1, Class var2);
 74
 75      T createFilter(Class var1) throws Serv
letException;
 76
 77     FilterRegistration getFilterRegistration(String var1);
 78
 79     Map getFilterRegistrat
ions();
 80
 81     SessionCookieConfig getSessionCookieConfig();
 82
 83     void setSessionTrackingModes(Set var1);
 84
 85     Set getDefaultSessionTrackingModes();
 86
 87     Set getEffectiveSessionTrackingModes();
 88
 89     void addListener(String var1);
 90
 91      void addListener(T var1);
 92
 93     void addListener(Class var1);
 94
 95      T createListener(Class var1) th
rows ServletException;
 96
 97     JspConfigDescriptor getJspConfigDescriptor();
 98
 99     ClassLoader getClassLoader();
100
101     void declareRoles(String... var1);
102
103     String getVirtualServerName();
5
在Tomcat中，ServletContext规范的实现是ApplicationContext，因为⻔⾯模式的原因，实际套了⼀层
ApplicationContextFacade。关于什么是⻔⾯模式具体可以看这篇⽂章，简单来讲就是加⼀层包装。
其中ApplicationContext实现了ServletContext规范定义的⼀些⽅法，例如addServlet,addFilter等
StandardContext存在于org.apache.catalina.core.StandardContext。
实际上研究ApplicationContext的代码会发现，ApplicationContext所实现的⽅法其实都是调⽤的
this.context中的⽅法
104
105     int getSessionTimeout();
106
107     void setSessionTimeout(int var1);
108
109     String getRequestCharacterEncoding();
110
111     void setRequestCharacterEncoding(String var1);
112
113     String getResponseCharacterEncoding();
114
115     void setResponseCharacterEncoding(String var1);
116 }
ApplicationContext
StandardContext
6
⽽这个this.context就是⼀个实例化的StandardContext对象。
所以在我看来，StandardContext是Tomcat中真正起作⽤的Context，负责跟Tomcat的底层交互，
ApplicationContext其实更像对StandardContext的⼀种封装。
⽤下⾯这张图来展示⼀下其中的关系
7
回过头看内存⻢。以添加filter为例，从上⾯的分析我们可以知道ApplicationContext跟Standerdcontext
这两个东⻄都有addFilter的⽅法。那么实际选⽤哪⼀个呢？其实两种办法都可以。三梦师傅在基于tomcat
的内存 Webshell ⽆⽂件攻击技术这篇⽂章⾥是利⽤反射修改了Tomcat的LifecycleState，绕过限制条件
调⽤的ApplicationContext中的addFilter⽅法。
8
但是因为实际上最终调⽤的还是StandardContext的addFilter⽅法，所以我们就可以直接调⽤
StandardContext的addFilter⽅法进⾏绕过，从⽽省去了绕过⼀堆判断的过程。这种实现具体可以看这个
师傅的公众号⽂章。