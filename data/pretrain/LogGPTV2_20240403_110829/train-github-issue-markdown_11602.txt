When mapping a object, TS can't retain the keys accessor.
Following example uses lodash _.mapValues, which maps a object.
    var newUsers = _.mapValues({
      'fred':    { 'user': 'fred',    'age': 40 },
      'pebbles': { 'user': 'pebbles', 'age': 1 }
    }, function(o) { return o.age; }); // -> _.Dictionary
    let ageFred = newUsers['fred']; // is number
    newUsers.fred // <-- invalid because TypeScript can't retain the keys.
I can't think a way to type _.mapValues so it would retain the keys. Retaining
keys requires new kind of typing capabilities for the TypeScript.
I find myself needing to retain keys in surprising many places, e.g. when
uncurrying a object full of functions.