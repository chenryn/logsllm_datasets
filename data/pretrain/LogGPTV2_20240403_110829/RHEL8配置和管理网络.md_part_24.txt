**其它资源**
-   有关 `nmcli`{.literal}的详情，请查看 `nmcli(1)`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#configuring-a-static-route-using-control-center_configuring-static-routes}使用 control-center 配置静态路由 {.title}
:::
您可以在 GNOME 中使用 `control-center`{.literal}
来添加到网络连接配置的静态路由。
本节中的步骤论述了如何将路由添加到使用 `198.51.100.1`{.literal}
运行的网关的 `192.0.2.0/24`{.literal} 网络。
::: itemizedlist
**先决条件**
-   网络已配置。
-   静态路由的网关必须在接口上直接访问。
-   连接的网络配置在 `control-center`{.literal}
    应用程序中打开。请参阅[使用 nm-connection-editor
    配置以太网连接。](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-an-ethernet-connection-using-nm-connection-editor_configuring-an-ethernet-connection "使用 nm-connection-editor 配置以太网连接"){.link}
:::
::: orderedlist
**流程**
1.  打开 `IPv4`{.literal} 标签页。
2.  （可选）通过点击 `IPv4`{.literal} 标签中的 `Routes`{.literal} 项中的
    [On]{.guibutton}
    按钮来禁用自动路由，只使用静态路由。如果启用了自动路由，Red Hat
    Enterprise Linux 将使用静态路由和从 DHCP 服务器接收的路由。
3.  输入地址、子网掩码、网关和可选的指标值：
    [![IPv4 static route in control
    center](images/IPv4-static-route-in-control-center.png)]{.inlinemediaobject}
4.  点击 [应用]{.guibutton}。
5.  在 `Network`{.literal} 窗口中，通过将连接到 Off 的按钮切换为
    [Off]{.guibutton} 并返回 On 来禁用并重新启用连接，以使
    [更改]{.guibutton} 生效。
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    重启连接会破坏那个接口的连接。
    :::
6.  （可选）验证路由是否活跃：
    ``` literallayout
    $ ip route
    ...
    192.0.2.0/24 via 198.51.100.1 dev example proto static metric 100
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#configuring-a-static-route-using-nm-connection-editor_configuring-static-routes}使用 nm-connection-editor 配置静态路由 {.title}
:::
您可以使用 `nm-connection-editor`{.literal}
应用程序为网络连接配置添加静态路由。
本节中的步骤论述了如何将路由添加到使用 `192.0.2.0/24`{.literal}
运行网关的 `198.51.100.1`{.literal} 网络，这些网关可通过
`example`{.literal} 连接访问。
::: itemizedlist
**先决条件**
-   网络已配置。
-   静态路由的网关必须在接口上直接访问。
:::
::: orderedlist
**流程**
1.  打开终端窗口并输入 `nm-connection-editor`{.literal}:
    ``` literallayout
    $ nm-connection-editor
    ```
2.  选择 `example`{.literal} 连接并点击 gear wheel 图标编辑现有连接。
3.  打开 `IPv4`{.literal} 标签页。
4.  点击 [路由]{.guibutton} 按钮。
5.  点击 [添加]{.guibutton}
    按钮并输入地址、子网掩码、网关以及可选的指标值。
    [![IPv4 static route in nm connection
    editor](images/IPv4-static-route-in-nm-connection-editor.png)]{.inlinemediaobject}
6.  点击 [确定]{.guibutton}。
7.  点击 [Save]{.guibutton}。
8.  重启网络连接以使更改生效。例如，要使用命令行重启 `example`{.literal}
    连接：
    ``` literallayout
    $ sudo nmcli connection up example
    ```
9.  （可选）验证路由是否活跃：
    ``` literallayout
    $ ip route
    ...
    192.0.2.0/24 via 198.51.100.1 dev example proto static metric 100
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#configuring-a-static-route-using-the-nmcli-interactive-mode_configuring-static-routes}使用 nmcli 互动模式配置静态路由 {.title}
:::
您可以使用 `nmcli`{.literal}
程序的互动模式将静态路由添加到网络连接配置中。
本节中的步骤论述了如何将路由添加到使用 `192.0.2.0/24`{.literal}
运行网关的 `198.51.100.1`{.literal} 网络，这些网关可通过
`example`{.literal} 连接访问。
::: itemizedlist
**先决条件**
-   网络已配置
-   静态路由的网关必须在接口上直接访问。
-   如果用户在物理控制台中登录，用户权限就足够了。否则，命令需要
    `root`{.literal} 权限。
:::
::: orderedlist
**流程**
1.  为 `example`{.literal} 连接打开 `nmcli`{.literal} 互动模式：
    ``` literallayout
    $ sudo nmcli connection edit example
    ```
2.  添加静态路由：
    ``` literallayout
    nmcli> set ipv4.routes 192.0.2.0/24 198.51.100.1
    ```
3.  （可选）验证路由是否已正确添加到配置中：
    ``` literallayout
    nmcli> print
    ...
    ipv4.routes:        { ip = 192.0.2.1/24, nh = 198.51.100.1 }
    ...
    ```
    `ip`{.literal} 属性显示了要路由的网络，`nh`{.literal}
    属性显示了网关（下一跳）。
4.  保存配置：
    ``` literallayout
    nmcli> save persistent
    ```
5.  重启网络连接：
    ``` literallayout
    nmcli> activate example
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    当您重启连接时，所有当前使用这个连接的连接将会被暂时中断。
    :::
6.  保留 `nmcli`{.literal} 互动模式：
    ``` literallayout
    nmcli> quit
    ```
7.  （可选）验证路由是否活跃：
    ``` literallayout
    $ ip route
    ...
    192.0.2.0/24 via 198.51.100.1 dev example proto static metric 100
    ```
:::
::: itemizedlist
**其它资源**
-   有关互动模式中可用命令列表，请在互动 shell 中输入 `help`{.literal}。
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#proc_configuring-a-static-route-using-nmstatectl_configuring-static-routes}使用 nmstatectl 配置静态路由 {.title}
:::
您可以使用 `nmstatectl`{.literal} 实用程序在网络连接配置中添加静态路由。
本节中的步骤论述了如何将路由添加到使用 `198.51.100.1`{.literal}
运行网关的 `192.0.2.0/24`{.literal} 网络，这些网关可通过
`enp1s0`{.literal} 接口访问。
::: itemizedlist
**先决条件**
-   配置了 `enp1s0`{.literal} 网络接口。
-   静态路由的网关必须在接口上直接访问。
-   已安装 `nmstate`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  创建包含以下内容的 YAML 文件，如
    `~/add-static-route-to-enp1s0.yml`{.literal} ：
    ``` literallayout
    ---
    routes:
      config:
      - destination: 192.0.2.0/24
        next-hop-address: 198.51.100.1
        next-hop-interface: enp1s0
    ```
2.  将设置应用到系统：
    ``` literallayout
    # nmstatectl set ~/add-static-route-to-enp1s0.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 `nmstatectl`{.literal} 的详情，请查看 `nmstatectl(8)`{.literal}
    man page。
-   如需了解更多配置示例，请参阅
    `/usr/share/doc/nmstate/examples/`{.literal} 目录。
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#proc_configuring-a-static-route-using-rhel-system-roles_configuring-static-routes}使用 RHEL 系统角色配置静态路由 {.title}
:::
您可以使用 `networking`{.literal} RHEL 系统角色配置静态路由。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
当您运行使用 `networking`{.literal} RHEL 系统角色的 play 时，如果设置与
play
中指定的设置不匹配，系统角色会覆盖具有相同名称的现有连接配置集。因此，始终在
play 中指定网络连接配置集的完整配置，即使 IP
配置已经存在。否则，角色会将这些值重置为默认值。
:::
具体来说，该流程会使用以下设置创建或更新 `enp7s0`{.literal} 连接配置集：
::: itemizedlist
-   静态 IPv4 地址 - `198.51.100.20`{.literal}，子网掩码为
    `/24`{.literal}
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal}，子网掩码为
    `/64`{.literal}
-   IPv4 默认网关 - `198.51.100.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `198.51.100.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
-   静态路由：
    ::: itemizedlist
    -   `192.0.2.0/24`{.literal} 使用网关 `198.51.100.1`{.literal}
    -   `203.0.113.0/24`{.literal} 使用网关 `198.51.100.2`{.literal}
    :::
:::
::: itemizedlist
**先决条件**
-   在控制节点上安装 `ansible`{.literal} 和
    `rhel-system-roles`{.literal} 软件包。
-   如果您运行 playbook 时使用了与 `root`{.literal} 不同的远程用户,
    则此用户在受管节点上需要具有适当的 `sudo`{.literal} 权限。
:::
::: orderedlist
**流程**
1.  如果 playbook 要针对其执行的主机还没有在清单中，请将此主机的 IP
    或名称添加到 `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/add-static-routes.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with static IP and additional routes
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: linux-system-roles.network
        vars:
          network_connections:
            - name: enp7s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 198.51.100.20/24
                  - 2001:db8:1::1/64
                gateway4: 198.51.100.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 198.51.100.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
                route:
                  - network: 192.0.2.0
                    prefix: 24
                    gateway: 198.51.100.1
                  - network: 203.0.113.0
                    prefix: 24
                    gateway: 198.51.100.2
              state: up