`BmFwVerifySelfIntegrity` 函数打补丁，因为 `bootmgr` 二进制文件没有以任何方式修改。 从这一点来看，引导代码的功能几乎与
UEFI 版本的引导代码相同，导致恶意驱动程序(位于第0轨道上，从第6扇区开始)被投放到下列位置之一，具体取决于架构: \-`\SystemRoot\System32\drivers\beep.sys (x86)` \-`\SystemRoot\System32\drivers\null.sys (x64)`
在这种情况下，加密的配置不会放入到`syslog`文件中，而是一直隐藏在损坏的磁盘的扇区5中。
传统版本 ESPecter 使用的修改过的磁盘方案
## 内核模式驱动程序
驱动程序的主要目的是加载用户模式的有效负载，设置键盘记录程序，并最终删除自身。设置键盘记录程序分为两个步骤: \-首先，它创建了一个名为`\device\WebBK`的设备，该设备公开了一个处理来自用户模式组件的`IRP_MJ_device_control`请求的函数。
这个函数支持一个 IOCTL (输入/输出控制)代码(`0x22C004`) ，可用于触发负责一个异步过程调用例程的注册，它用于处理截获的击键记录。 \-通过为键盘驱动程序`object\Device\KeyboardClass0`的`IRP_MJ_读取`请求设置`CompletionRoute`，可以拦截击键。
该过程完成后，任何进程都可以通过定义自己的例程并使用自定义 IOCTL `0x22C004`来记录截获的击键，并将其传递给创建的设备对象。
默认情况下，驱动程序会加载两个基本有效负载——`WinSys.dll`和 `Client.dll`——它们具有下载和执行其他有效负载的能力。第一个，
`WinSys.DLL`，它是以加密的形式嵌入到驱动程序的二进制文件中的。第二个，`Client.dll`，由
`WinSys.dll`下载到文件`\SystemRoot
\Temp\memlog`，也是以加密的形式，使用相同的加密方法——一个简单的带减法的单字节异或——但不是相同的密钥。这两个库都被解密并由驱动程序放到系统目录
`\SystemRoot\System32\`中。
通过将`WinSys.dll`和`Client.dll`库分别注入`svchost.exe`和`winlogon.exe`，可以实现它们的执行。为此，驱动程序使用
`PsSetLoadImageNotifyRoutine`注册图像加载回调例程 `NotifyRoutine`，用于执行: \-在winlogon.exe进程的上下文中，从Client.dll导出主线程 \- 在svchost.exe进程的上下文中，从WinSys.dll导出主线程
`NotifyRoutine`在执行之前在内存中挂钩`winlogon.exe`和`svchost.exe`进程映像的入口点;
然后这个挂钩负责加载和执行适当的有效负载 DLL。如下图所示，该例程只处理正在加载的第一个`svchost.exe`或 `winlogon.exe`映像。
## 用户模式组件–WinSys.dll
WinSys.dll充当基本更新代理，定期联系其C&C服务器以下载或执行其他有效负载或执行简单命令。C&C地址以及其他值（如活动ID、bootkit版本、C&C通信尝试之间的时间和活动小时数范围）位于配置中，可从以下位置加载：
\- `HKLM\SYSTEM\CurrentControlSet\Control`注册表中的`DefaultConfig`值 \-`\SystemRoot\Temp\syslog`文件 \- 或者直接从特定磁盘扇区（传统引导版本中）获取
如果同时存在注册表和磁盘存储配置，则使用注册表中的配置。
### C&C通信
`WinSys.dll`使用HTTPS与其C&C进行通信，通过使用以下URL格式发送HTTP GET请求来启动通信：
https:///Heart.aspx？ti=&tn=&tg=&tv=
其中，`drive_ID`是主系统卷序列号的MD5散列，其他参数是识别该恶意软件实例的具体信息。
因此，C&C可以使用显示为字符串的命令ID（随意后跟命令参数）进行响应。命令的完整列表见表1。
表1. WinSys 组件 c & c 命令
命令 ID | 描述 | 网址  
---|---|---  
1或4 | Exit. | -  
2 | 使用 HTTP POST 将各种系统信息(CPU 名称、 OS 版本、内存大小、以太网 MAC 地址、已安装软件列表等)上传到预定义的 URL |
https:///GetSysteminfo.aspx  
3 | 下载或下载并执行文件到预定义的位置从预定义的 URL 使用 HTTP GET | https:///UpLoad.aspx?ti=  
5 | 重启电脑 (只适用于 windowsvista) | 不适用  
6 | 使用HTTP GET从预定义的 URL 下载新配置，并将其保存到注册表中 | https:///ModifyIpaddr.aspx?ti=  
## 用户模式组件-Client.dll
恶意驱动程序部署的第二个有效负载是 Client.dll。它是一个后门，支持众多的命令集(表2)
，并包含各种自动数据外泄功能，包括文档窃取、键盘记录和通过定期截屏来监视受害者的屏幕。所有收集到的数据都存储在一个隐藏的目录中，每个数据源都有单独的子目录（所用目录路径的完整列表可以从我们的
[GitHub](https://github.com/eset/malware-ioc/tree/master/especter)存储库中获得）。还要注意的是，击键的拦截是由驱动程序处理的，客户机只需要将 IOCTL
`0x22C004`发送到驱动程序的设备，以便将截获的击键保存到文件中，从而注册其日志功能。
客户端负载通过将 IOCTL 发送到 bootkit 的设备驱动程序来设置键盘记录器功能
客户端组件的配置应该以加密形式存在文件覆盖中。它包含诸多信息，如 c & c 地址和端口，表明应该收集哪些数据的标志(按键、屏幕截图、具有特定扩展名的文件)
，屏幕截图线程的时间段，外泄数据的最大文件大小，以及文件扩展名列表。
### C&C 通信
客户端设置了自身与 C&C 的通信通道。为了与 C&C 进行通信，它使用单字节 XOR 加密的 TCP
协议，与密钥不同，该协议应用于的非空消息字节，在这里分析的活动中，密钥是`0x66`。通信是通过向配置中指定的 IP: PORT
对发送信标消息来启动的。此消息包含`drive_ID`值(主系统卷的序列号 MD5散列)以及一个指定消息类型的值，即命令请求或上传收集的数据。
在执行 C&C 命令后，结果将报告给 C&C，并指定执行操作的结果代码、命令
ID，有趣的是，每个这样的结果报告消息都带有一个水印/标记，表示位于偏移量`0x04`的宽字符串`WBKP`，这使得在网络级别识别这种恶意通信更加容易。
表2. 客户端 C&C 命令列表
命令 ID | 描述  
---|---  
0x0000 | 停止后门  
0x0064 | 执行从 C&C 接收的命令行并使用管道捕获输出  
0x00C8 | 根据 C&C 命令参数的值，执行电源命令下线、断电、重新启动或关机  
0x012C | 截取前景窗口的屏幕快照，完整的屏幕快照，或者根据参数值改变自动的屏幕快照参数  
0x0190 | 执行各种文件系统操作  
0x01F4 | 上传收集的数据和文件  
0x0258 | 执行各种与服务相关的命令  
0x02BC | 执行各种与进程相关的命令  
0x0320 | 修改配置值  
0x0384 | 停止/启动键盘记录器，具体取决于参数的值  
## 总结
ESPecter可以说明，在前OS持久性方面，威胁行为者不仅依赖 UEFI 固件植入，他们还投入时间创建了恶意软件，但由于有 UEFI Secure
Boot 等现有安全机制的存在，如果启用和配置正确，这些恶意软件很容易被这些机制阻止。
## IoCs
一个完整的 IoCs 和示例列表可以在我们的 [GitHub](https://github.com/eset/malware-ioc/tree/master/especter) 存储库中找到。
### ESET 检测
EFI/Rootkit.ESPecter Win32/Rootkit.ESPecter Win64/Rootkit.ESPecter
### C&C IP 地址和域的配置
    196.1.2[.]111
    103.212.69[.]175
    183.90.187[.]65
    61.178.79[.]69
    swj02.gicp[.]net
    server.microsoftassistant[.]com
    yspark.justdied[.]com
    crystalnba[.]com
### Legacy版本安装程序
    ABC03A234233C63330C744FDA784385273AF395B
    DCD42B04705B784AD62BB36E17305B6E6414F033
    656C263FA004BB3E6F3EE6EF6767D101869C7F7C
    A8B4FE8A421C86EAE060BB8BF525EF1E1FC133B2
    3AC6F9458A4A1A16390379621FDD230C656FC444
    9F6DF0A011748160B0C18FB2B44EBE9FA9D517E9
    2C22AE243FDC08B84B38D9580900A9A9E3823ACF
    08077D940F2B385FBD287D84EDB58493136C8391
    1D75BFB18FFC0B820CB36ACF8707343FA6679863
    37E49DBCEB1354D508319548A7EFBD149BFA0E8D
    7F501AEB51CE3232A979CCF0E11278346F746D1F
### 受损的windows启动管理器
    27AD0A8A88EAB01E2B48BA19D2AAABF360ECE5B8
    8AB33E432C8BEE54AE759DFB5346D21387F26902