| 信息安全和信创化的强制要求 | 基于 GPT 模型的⼯具不符合信息安全要求 | 假设1  |
|---|---|---|
| 信息安全和信创化的强制要求 |基于 GPT 模型的⼯具不符合信息安全要求 |每个⼤型企业都将有私有化的⼤语⾔模型 || ⼤型企业尤其是银⾏，⾯临最强的信息安全监管及 |⽬前⼤多⼯具基于 OpenAI GPT 构建，不能私有化 |每个⼤型企业都将有私有化的⼤语⾔模型 |
| 信创化、国产化要求，需要国产⽣态中能⼒突出的 |部署，不符合信息安全的强制要求；需要寻找能够 |每个⼤型企业都将有私有化的⼤语⾔模型 |
| ⼤模型 |部署，不符合信息安全的强制要求；需要寻找能够 |每个⼤型企业都将有私有化的⼤语⾔模型 |
| ⼤模型 |私有化部署且⽔平相当的替代品。 |每个⼤型企业都将有私有化的⼤语⾔模型 |
开源⼤模型表现偏弱、⾃⼰训练成本⾼
| ⽬前可私有化部署的⼤模型，其⾃然语⾔理解和代码 | 公开LLM 针对专业领域表现不佳，适⽤性差 | 假设2  |
|---|---|---|
| ⽣成的⽔平与GPT有⼀定差距；根据⼤语⾔模型论⽂ |缺乏专业知识，对于某些专业领域缺乏⾜够的理 |假设2  || 做⼀些粗略的数学计算，如果⽤的是 Facebook  |解。它受训练数据中的影响，容易产⽣偏⻅和错 |假设2  |
| 做⼀些粗略的数学计算，如果⽤的是 Facebook  |误。 |假设2  |
| LLaMA，训练成本（不考虑迭代或者出错）⼤约是 |误。 |假设2  |
| 400 万美元，如果是⾕歌PaLM，⼤约 2700 万美 |LLM ⼯具碎⽚化 |假设2  |
| 400 万美元，如果是⾕歌PaLM，⼤约 2700 万美 |LLM ⼯具碎⽚化 |私有化的主流⽅式：开源 LLM + 微调 |
| 元。 |LLM ⼯具碎⽚化 |私有化的主流⽅式：开源 LLM + 微调 |
| 与企业内部⼯具进⾏结合 |LLM ⼯具碎⽚化 |私有化的主流⽅式：开源 LLM + 微调 |
| 碎⽚化的应⽤提效效果有限，把 AI ⽆缝集成到 |LLM ⼯具碎⽚化 |私有化的主流⽅式：开源 LLM + 微调 || 碎⽚化的应⽤提效效果有限，把 AI ⽆缝集成到 |各类⼯具都是在⼀个个分散的⼯作节点上辅助，使 |私有化的主流⽅式：开源 LLM + 微调 |
| BizDevOps ⼯具链中，技术难度尚未可知。 |各类⼯具都是在⼀个个分散的⼯作节点上辅助，使 |私有化的主流⽅式：开源 LLM + 微调 |
| BizDevOps ⼯具链中，技术难度尚未可知。 |⽤时来回切换⼯具的成本很⾼，整体端到端地提效 |私有化的主流⽅式：开源 LLM + 微调 |
不明显。
LLM + ⼯序 
探索与构建路径
前期探索过程：在摸索中前进 从 “0” 开始，要学习和解决的问题、挑战太多太多了。
|  |  |  |
|---|---|---|
| 现有的开源模型能满⾜需求吗？ |产品形态应该是怎样的？（聊天、交互式） |如何⾼效构建上下⽂？（2K） || 合理的指令（输⼊和输出）应该是怎样的？ | 与现有⼯具对⽐竞争⼒在哪？（端到端？） | 如何提升速度？（缓存、减少请求） |
|---|---|---|
| 微调的成本和⼯作量在哪？ |⼯具是否需要重写⼀遍？ |如何提升准确率/接受率？ |
|  | |如何提升准确率/接受率？ |
SDLC 中的⾼价值部分 
在私有化模型的能⼒之内，最适合探索的是什么？
| 产品设计 | 产品设计 | 开发计划 | 建模 | 架构设计 | API 设计 | 详细设计 | 开发 | 编码后 |
|---|---|---|---|---|---|---|---|---|
| 产品设计 |特性设计 |开发计划 |建模 |架构设计 |API 设计 |详细设计 |编码 |编码后 |
| ⽤户调研 | 功能细分 | 验收条件 | 事件⻛暴 | 时序图设计 | API 定义 | 代码设计 | 代码⽣成 | 代码检视 ||---|---|---|---|---|---|---|---|---|
| 产品创新 |UX Design |优化级 |领域模式 |组件图设计 |API 定义 |代码设计 |单元测试⽣成 |提交信息 |
| 产品定义 |UX Design |优化级 |领域模式 |设计模式 |API 定义 |代码设计 |单元测试⽣成 |提交信息 |
| 产品定义 |⾮功能需求 |迭代计划 |限界上下⽂ |设计模式 |API 定义 |代码设计 |单元测试⽣成 |提交信息 |
| 原型 |⾮功能需求 |发布计划 |限界上下⽂ |⽂档 |API 定义 |代码设计 |单元测试⽣成 |提交信息 |
⾥程碑设计
运维 交付 测试
| Monitor | 
 | 部署 | 
 | 
 | 测试⽤例 |
|---|---|---|---|---|---|
| Monitor |  |部署 |  |  |设计 || Monitor |  |部署 |  |  |设计 |
| ⽇志分析 |  |  |  |  |测试⽤例⽣成 |
| 客户⽀持 |  | |  | | |
| 客户情绪分析 | | |  | | |
⼤语⾔模型友好的⼯序 
架构与⼤语⾔结合设计 API 新⼯序过程示例
Evolve
上游 API 格式 数据⼯程
（Swagger、Postman）
| LLM 友好的 API  | Prompt | Test and learn | Explore | Eval | Scale | Feedback |
|---|---|---|---|---|---|---|
| LLM 友好的 API  |Prompt |Test and learn |MVP |Eval |Build |Feedback |
| LLM 友好的 API  |试验 |Test and learn |MVP |Eval |Build |Feedback |下游 API 格式
（Spring、Django）
Discover Define Define Delivery Delivery Delivery
| 流程与“语⾔”⼯程 | 流程与“语⾔”⼯程 | 数据与 Prompt ⼯程 | 数据与 Prompt ⼯程 | 上下⽂与平台⼯程 | 上下⽂与平台⼯程 |
|---|---|---|---|---|---|
| ● |软件开发过程资产化 |● |MVP 与微调试验 |● |上下⽂⼯程 |
| ● |资产的“语⾔建模” |● |增量引导指标设计 |● |持续反馈的平台⼯程 |
Discover 
探索阶段
软件⼯程过程资产化（API 示例）
基于私有化 LLM 的新⼯序⼀部分取决于：已有的软件过程资产（基于架构规范）
	挑战：
	1. 定义概念 
	2. 标准化流程（⼯序）	3. 审视规范 
	4. 过程资产
新机遇？2. 标准化流程（⼯序）	3. 审视规范 
	4. 过程资产
新机遇？
资产的“语⾔建模”
探索适合于⼤语⾔模型的资产代码化形式
 建模 API Spec
源 
格 
式
视
化 
Define
定义阶段
26
MVP 与微调试验：数据处理与 Prompt 优化
对已有数据进⾏标准化，⽣成指令格式数据集（反复多次）
预期数据结果 	两种不同⽅式
{ 
"instruction": "⽣成 RESTful API 
接⼝", 
"input": "查看账户收⼊,添加收⼊记录,修改收⼊记
录,删除收⼊记录", 
"output": "## Enrichment API\n\n> 
Incomes\n| API | Method | Description | 
| Request | Response | Error Response |\n|  | 基于已有数据⽣成 | OpenAI 蒸馏 ||---|---|---|
| --- | --- | --- | --- | --- | --- |\n| / |基于已有数据⽣成 |OpenAI 蒸馏 |
api/incomes/?page=1&account=uuid | GET | 
| | page: 1, account: uuid | [200: {}, 401:  | 1. 收集公开数据集（HuggingFace..） | 1. 内部数据集不够时，可以模拟场景 |
|---|---|---|