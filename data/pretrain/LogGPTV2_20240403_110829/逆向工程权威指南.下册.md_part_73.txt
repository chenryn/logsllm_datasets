MUL
r0,r0,r2
x2, 1L0.1921
STR
ADD
r0,r0,r2
r0,[r1,#0]  v1
BFC
r0,+23,#9
ORR
VMOV
r0,x0,#0x40000000
VSUB.F32 s0,s0,s1
02*08
ENDP
BK
1r
PROC
PUSH
r4,f0
(xT*sx*2)
LDR
MOV
r3,r4
r5, 110.1961
150 , 681
AOK
VMOV,F32 s2,s0
BL
f1
BL.
VMOV.F32 s1,s2
f1
ADD
VMUL.F32 s1,91,91
r3, r3,#1
VMLA.r32 s1,s0,s0
VMOV
CMP
r0, s1
ADDLT
r0,#0x3f800000
r4,r4,11
BLT
dKO
r3,r5
110.68)
VMOV
s0,r4
VMOV.F64 d1, #4.00000000
VCVT.r32.$32 s0, a0
VCVT.F64.r32 d0, s0
VMUL.F64d0,d0,d1
VLDR
d1,110.2001
VCVT.F32.F64 ±0, d2
VDIV.F64 d2,d0, d1
POP
ENOP
(r4,r5,pc)
|10.1841
DCD
11-data11
---
## Page 421
第100章
中等难度练习题
897
(10.1881
(10.192)
DCD
0x0019660d
DCD
0x3c6ef35f
1961°011
(L0.200|
DCD
0x000f4240
DCFD
0x412e648000000000：1000000
AREA 11-data11, 0ATA,
DCD
0x00000000
v1
ALIGN=2
DCD
0x12345678
100.6.5
Optimizing GCC 4.9.1 ( ARM64 )
指令清单100.8Optimizing GCC 4.9.1（ARM64）
f1:
adrp
x2, LA8CROR0
nov
nOV
*CA
v0,
26125
novk
v3,
0x19, 1s1 16
62303
novk
v0,
[x2,#:1o12: LANCHOR0]
0x3c6e, 1s1 16
1dr
Aoug
s0,
v1,
nadd
3.0e+0
v0,
v1, x3, v0
[x2,:1o12: LANCHOR0]
and
v0,
vo,
wO,1073741824
v0, 8388607
330
Aoug
s1,
s0, s1, s0
v0
fsub
sail_function:
ret
nov
adrp
x7,
w3,
16960
novk
v3,
0xf, 1s1 16
fnov
mov
'28
3.0e+0
1dr
w1,
[x7,:1o12: .LANCH0R0]
fnov
s3,
1.0e+0
.L5:
nov
v6,26125
novk
nov
*ON
w6,
0x19, 1s1 16
62303
novk
v0,
0x3c6e, 1s1 16
nov
v5,
26125
nadd
nov
W4,
v1,
1, v6, v0
62303
novk
v5,
0x19, 1s1 16
novk
w4,
0x3c6e, 1s1 16
and
idd
w6,
w0,
￥1, 8388607
v0,
0, 1073741824
w2, 1
130
madd
fnov
s0,
W1,
￥0
￥5, v4
and
w0,
1,
8388607
orr
w0,
w0,
1073741824
fsub
fnov
80,
81,
s0,
0
fsub
s1, s1,
s2
Cmu1
91,
52
Enadd
80,
81,
s0,
#1
fcnp
s0, s3
s0, s1
---
## Page 422
868
逆向工程权威指南（下册）
cse1
td 'gx *x *n
ben 
sub8
+*x *gn
scvtf
$0, 2
.15
fnov
[×7, #:1o12: . LANCH0R]]
fevt
d0,
d1,
4.0e+0
fnu1
d0,
d0, d1
$0
1dr
d1,
fdiv
d0, d1
-IC0
fevt
s0,d0
.LC0:
ret
-word
word
1093567616
白
.V1:
.V2:
vord
1013904223
-word
1664525
S60C°(A
,word
305419896
100.6.6
Optimizing GCC 4.4.5 ( MIPS )
指令清单 100.9Optimizing GCC 4.4.5（MIPS）（IDA )
f1:
mOV
inu1
eax, DWORD PTR v1.2084[xip]
add
eax,
eax,
1013904223
eax, 1664525
mov
DWORD PTR v1.2084[rip], eax
and
eax, 8388607
mov
or
DWORD 2TR [rsp-4], eax
eax,
1073741824
mov55
subss
KRn9,
0NORD PTR ,1C0[x1p]
[>dsx]d 8N
101
Kmm9,
push
rbp
push
xor
dqa
xor
ebx,
rbx
sub
rsp, 16
ebx
L6:
xor
eax, e4x
ca11
{1
XOE
DMORD PTR [rsp], xan0
eax, edx
ca11
novss
novss
f1
xnn1,
DWC8D PT8 [rsp]
mu1ss
ma1s5
xnn1,
xnm0,
xsm0
Lea
eax,
[rbx+1]
addss
nov33
xnm1
xnn0
D80RD TR LC1(rip]
CENX
uconiss
xnn0
xs1
cmova
add
ebp,
eEK,
eax
cp
ebp,
1
.16
1000000
cvts12ss
jne
xmm0, ebx
unpck1ps
crtps2pd
me0,
xmm0
mu1sd
xnn0, cwoRD PTR IC2[xip]
xmm0, xan0
---
## Page 423
第100章中等难度练习题
899
divsd
xm0, cWoRo PTR .LC3 [rip]
add
rsp, 16
pop
rbx
unpcklpd
pop
rbp
crtpd2ps
v1.2084:
ret
-LC0:
-1ong
305419896
-1ong
1077936128
.LC1:
LC2:
-1ong
1065353216
.1ong
-LC3:
-1ong
1074790400
.1ong
-1ong
1093567616
100.7
练习题2.16
这个题目是一
一个著名的函数。请问它的计算结果是什么？如果输入了4和2，该程序会出现栈溢出问题。
为什么会这样，代码里有错误么？
100.7.1
Optimizing MSVC 2012 x64
nG - 48
nf = 56
$1814:
PROC
push
rbx
mov
sub
eax, edx
rsp,
32
mor
ebx, ecx
test
Je
SHORT SL811Bf
ecx, ecK
$1L58f:
test
SHORT $LNLef
eax, eax
nov
Jne
eax, 1
S118f:
jnp
SHORT SLS128f
nov
Lea
ca11
ecx, ebx
$IN129f:
test
dec
ebx, ebx
ebx
SLN11#f:
SHORT SLL5ef
Ine
add
rsp, 32
eax
pop
ret
0
xqx
ENDP
100.7.2
Optimizing Keil ( ARM mode )
f P90C
PUSH
(r4,1r)
---