worse than this system compared to the full feature set (88% TPR
for 2% FPR during the validation phase) but clearly outperforms it
when compared to the graph-only features.
A number of systems aim at detecting malicious hosts based on
structural properties of malware delivery networks. Although the
goal of Marmite is to detect malicious (cid:128)les, these approaches have
similarities with our system in the way they operate. Zhang et
al. [41] proposed ARROW, a system to detect drive-by download at-
tacks. (cid:140)e system builds a hostname-IP mapping to identify central
servers of malware distribution networks (MDNs), and generates
corresponding signatures. (cid:140)ese signatures are later used to detect
malicious webpages.
Li et al. [20] performed a large scale study on the topological
relations among hosts in the malicious Web infrastructure. (cid:140)e sys-
tem constructs hostname-IP clusters (HICs) and builds topological
relationship between HICs. Utilizing the observation that there is a
higher density of interconnections among malicious infrastructures
than in the rest of the web, a variation of page-rank algorithm is
employed to detect dedicated malicious hosts. Stokes et al. [32]
proposed WebCop, a bo(cid:138)om up approach to detect malware dis-
tribution sites. (cid:140)e system uses the (cid:128)nal destination distribution
sites as the starting point, and follows the web graph hyperlinks in
reverse to identify the higher level landing sites. WebCop further
utilizes the identi(cid:128)ed landing sites to detect unknown distribution
sites that share a landing site with a known malware distribution
site. Stringhini et al. [35] presented SpiderWeb, a system that builds
graphs of HTTP redirections used in the delivery of malware, and
performs classi(cid:128)cations on these graphs for malware detection.
Mekky et al. [22] expanded on this model, looking not only at auto-
mated redirections but also at the links clicked by users. Manadhata
et al. [21] presented an approach to perform belief propagation over
download graphs to detect malicious hosts. (cid:140)is system is designed
to operate over proxy logs for a single organization, while Mar-
mite is designed to operate over the entire Internet. Although
Marmite could be extended to detect malicious hosts, in its current
implementation it is designed to identify malicious (cid:128)les.
Compared to all these approaches, Marmite is generic as it does
not rely to particular network structures and protocols. (cid:140)is is an
important advantage, because it makes our approach applicable
to se(cid:138)ings di(cid:130)erent than HTTP. Marmite also does not rely on
features that are typical of how cybercriminals operate (e.g., their
use of Domain Generation Algorithms of Fast Flux), and is therefore
resilient to evasion — in fact, we showed that Marmite is still able
to e(cid:129)ciently detect malware six months a(cid:137)er the system was tuned.
10 CONCLUSION
We presented Marmite, a system that is able to detect malicious
(cid:128)les by leveraging a global download graph and label propagation
with Bayesian con(cid:128)dence. We showed that the global download
graph used by Marmite does not signi(cid:128)cantly change over time,
and therefore our system can detect malware for over six months
without need of being re-tuned. We were able to grow our knowl-
edge of malware samples by up to eleven times compared to the
malicious seeds used, and we showed that 36% of our detections do
not appear on VirusTotal three months a(cid:137)er they were detected by
Marmite. We presented a number of case studies that aim to shed
light on malware delivery ecosystems. We hope that these examples
will help our community be(cid:138)er understand the idiosyncrasies asso-
ciated with malware delivery, and devise be(cid:138)er mitigation systems
based on these observations. From our end, we showed that build-
ing a whitelist of known benign (cid:128)les can be a simple and durable
solution to systematic false positives.
ACKNOWLEDGEMENTS
We would like to thank the anonymous reviewers for their feedback,
and our shepherd Christian Rossow for his help in improving the
(cid:128)nal version of this paper. (cid:140)is work was supported by UCL through
a BEAMS Future Leaders in Engineering and Physical Sciences
Award and by the EPSRC under grant EP/N008448/1.
[4] Bergstra, J., and Bengio, Y. Random Search for Hyper-parameter Optimization.
REFERENCES
[1] National So(cid:137)ware Reference Library. h(cid:138)p://www.nsrl.nist.gov/.
[2] VirusTotal. h(cid:138)ps://www.virustotal.com.
[3] Antonakakis, M., Perdisci, R., Nadji, Y., Vasiloglou, N., Abu-Nimeh, S.,
Lee, W., and Dagon, D. From throw-away tra(cid:129)c to bots: detecting the rise of
DGA-based malware. In USENIX Security Symposium (2012).
Journal of Machine Learning Research (Feb. 2012).
[5] Caballero, J., Grier, C., Kreibich, C., and Paxson, V. Measuring pay-per-
install: (cid:140)e commoditization of malware distribution. In USENIX Security Sym-
posium (2011).
[6] Egele, M., Scholte, T., Kirda, E., and Kruegel, C. A survey on automated
dynamic malware-analysis techniques and tools. ACM Computer Surveys 44, 2
(2012).
[7] Fawcett, T. An introduction to roc analysis. Pa(cid:136)ern Recogn. Le(cid:136). 27, 8 (June
[8] Grier, C., Ballard, L., Caballero, J., Chachra, N., Dietrich, C. J., Levchenko,
K., Mavrommatis, P., McCoy, D., Nappa, A., Pitsillidis, A., et al. Manufactur-
ing compromise: the emergence of exploit-as-a-service. In ACM conference on
Computer and communications security (CCS) (2012).
[9] Holz, T., Gorecki, C., Rieck, K., and Freiling, F. C. Measuring and Detect-
ing Fast-Flux Service Networks. In Network and Distributed Systems Security
Symposium (NDSS) (2008).
Invernizzi, L., Comparetti, P. M., Benvenuti, S., Cova, M., Kruegel, C., and
Vigna, G. EvilSeed: A Guided Approach to Finding Malicious Web Pages. In
IEEE Symposium on Security and Privacy (2012).
2006), 861–874.
[10]
101[11]
Invernizzi, L., Miskovic, S., Torres, R., Kruegel, C., Saha, S., Vigna, G., Lee, S.,
and Mellia, M. Nazca: Detecting malware distribution in large-scale networks.
In Network and Distributed System Security Symposium (NDSS) (2014).
[12] Kapravelos, A., Shoshitaishvili, Y., Cova, M., Kruegel, C., and Vigna, G.
Revolver: An automated approach to the detection of evasive web-based malware.
In USENIX Security Symposium (2013).
[13] Karampatziakis, N., Stokes, J. W., Thomas, A., and Marinescu, M. Detection
of Intrusions and Malware, and Vulnerability Assessment (DIMVA). 2013, ch. Using
File Relationships in Malware Classi(cid:128)cation.
[14] Kharraz, A., Robertson, W., Balzarotti, D., Bilge, L., and Kirda, E. Cu(cid:138)ing
the gordian knot: a look under the hood of ransomware a(cid:138)acks. In Detection of
Intrusions and Malware, and Vulnerability Assessment (DIMVA) (2015).
[15] Kirat, D., Vigna, G., and Kruegel, C. Barecloud: bare-metal analysis-based
evasive malware detection. In USENIX Security Symposium (2014).
and model selection. In IJCAI (1995).
[17] Kotzias, P., Bilge, L., and Caballero, J. Measuring PUP Prevalence and PUP
Distribution through Pay-Per-Install Services. In USENIX Security Symposium
(2016).
[18] Kruegel, C., Robertson, W., Valeur, F., and Vigna, G. Static disassembly of
[16] Kohavi, R. A study of cross-validation and bootstrap for accuracy estimation
obfuscated binaries. In USENIX Security Symposium (2004).
[19] Kwon, B. J., Mondal, J., Jang, J., Bilge, L., and Dumitras, T. (cid:140)e dropper e(cid:130)ect:
Insights into malware distribution with downloader graph analytics. In ACM
Conference on Computer and Communications Security (CCS) (2015).
[20] Li, Z., Alrwais, S., Xie, Y., Yu, F., and Wang, X. Finding the linchpins of the dark
web: A study on topologically dedicated hosts on malicious web infrastructures.
In IEEE Symposium on Security and Privacy (2013).
[21] Manadhata, P. K., Yadav, S., Rao, P., and Horne, W. Detecting malicious
domains via graph inference. In European Symposium on Research in Computer
Security (ESORICS) (2014).
[22] Mekky, H., Torres, R., Zhang, Z.-L., Saha, S., and Nucci, A. Detecting malicious
HTTP redirections using trees of user browsing activity. In INFOCOM (2014).
[23] Nachenberg, C., Wilhelm, J., Wright, A., and Faloutsos, C. Polonium:
Tera-scale graph mining and inference for malware detection.
[24] Nelms, T., Perdisci, R., Antonakakis, M., and Ahamad, M. Webwitness:
Investigating, categorizing, and mitigating malware download paths. In USENIX
Security Symposium (2015).
[25] Nguyen, G. H., Bouzerdoum, A., and Phung, S. L. Learning pa(cid:138)ern classi(cid:128)cation
tasks with imbalanced data sets. Tech. rep., 2009.
[26] Pitsillidis, A., Kanich, C., Voelker, G. M., Levchenko, K., and Savage, S.
Taster’s choice: A comparative analysis of spam feeds. In ACM Conference on
Internet Measurement Conference (IMC) (2012).
[27] Rahbarinia, B., Balduzzi, M., and Perdisci, R. Real-time detection of malware
downloads via large-scale url− > (cid:128)le− > machine graph mining. In ACM Asia
Conference on Computer and Communications Security (ASIACCS) (2016).
[28] Rajab, M. A., Ballard, L., Lutz, N., Mavrommatis, P., and Provos, N. Camp:
Content-agnostic malware protection. In Network and Distributed System Security
Symposium (NDSS) (2013).
[29] Ramachandran, A., Dagon, D., and Feamster, N. Can DNS-based blacklists
keep up with bots? In CEAS (2006).
[30] Rossow, C., Dietrich, C., and Bos, H. Large-scale analysis of malware down-
loaders. In Detection of Intrusions and Malware, and Vulnerability Assessment
(DIMVA). 2013.
[31] Song, D., Brumley, D., Yin, H., Caballero, J., Jager, I., Kang, M. G., Liang,
Z., Newsome, J., Poosankam, P., and Saxena, P. Bitblaze: A new approach to
computer security via binary analysis. In Information systems security. 2008.
[32] Stokes, J. W., Andersen, R., Seifert, C., and Chellapilla, K. Webcop: Locating
neighborhoods of malware on the web. In USENIX Workshop on Large-Scale
Exploits and Emergent (cid:138)reats (LEET) (2010).
[33] Stone-Gross, B., Cova, M., Cavallaro, L., Gilbert, B., Szydlowski, M., Kem-
merer, R., Kruegel, C., and Vigna, G. Your botnet is my botnet: analysis of a
botnet takeover. In ACM conference on Computer and communications security
(CCS) (2009).
[34] Stone-Gross, B., Holz, T., Stringhini, G., and Vigna, G. (cid:140)e underground
economy of spam: A botmaster’s perspective of coordinating large-scale spam
campaigns. In Workshop on lage-scale exploits and emerging threats (LEET) (2011).
[35] Stringhini, G., Kruegel, C., and Vigna, G. Shady paths: Leveraging sur(cid:128)ng
crowds to detect malicious web pages.
In ACM conference on Computer and
communications security (CCS) (2013).
[36] Tamersoy, A., Roundy, K., and Chau, D. H. Guilt by association: Large scale
malware detection by mining (cid:128)le-relation graphs. In ACM SIGKDD International
Conference on Knowledge Discovery and Data Mining (2014).
[37] Thomas, K., Crespo, J., Picod, J.-M., Phillips, C., Sharp, C., Decoste, M.-A.,
Tofigh, A., Courteau, M.-A., Ballard, L., Shield, R., Jagpal, N., Abu Rajab,
M., Mavrommatis, P., Provos, N., Bursztein, E., and McCoy, D. Investigating
Commercial Pay-Per-Install and the Distribution of Unwanted So(cid:137)ware.
In
USENIX Security Symposium (2016).
[38] Vadrevu, P., Rahbarinia, B., Perdisci, R., Li, K., and Antonakakis, M. Mea-
suring and detecting malware downloads in live network tra(cid:129)c. In ESORICS.
2013.
[39] Willems, C., Holz, T., and Freiling, F. Toward automated dynamic malware
analysis using cwsandbox. In IEEE Symposium on Security & Privacy (2007).
Bayesian Label Propagation with Con(cid:128)dence.
[40] Yamaguchi, Y., Faloutsos, C., and Kitagawa, H. PAKDD. 2015, ch. SocNL:
[41] Zhang, J., Seifert, C., Stokes, J. W., and Lee, W. Arrow: Generating signatures
In International World Wide Web Conference
[42] Zhu, X., Ghahramani, Z., and Lafferty, J. Semi-supervised learning using
to detect drive-by downloads.
(WWW) (2011).
gaussian (cid:128)elds and harmonic functions. In ICML (2003).
A PUP OPERATION
As an additional experiment, we also wanted to study PUP binaries
as discussed in Section 6.1. We use a download graph from January
3rd in this study. Figure 11 illustrates one of these cases. (cid:140)e site
balancer1.amber1glue.com was hosted by three IP addresses in
the course of the day. (cid:140)e (cid:128)rst two belong to web hosting company
CloudFlare, and the last is from MTS PJSC, registered in Russia.
In total, 72 (cid:128)les dropped from this URL were previously identi(cid:128)ed
and con(cid:128)rmed to belong to the Mizenota family (via VirusTotal).
811 (cid:128)les are marked as PUP by Symantec. Both 72 con(cid:128)rmed mali-
cious and 811 newly discovered (cid:128)les share the same naming pat-
tern: ‘string 10924 i il.exe’, e.g.
‘MS
+Office+2010+Crack+Prod 10924 i18078 21319 il2622354.ex
e’, ‘Structural+analysis +hibbe 10924 i1807858669 il2 64
0857.exe’. Another binary (classi(cid:128)ed as Amonetize) with SHA2
9A91B... also dropped (cid:128)ve PUP (cid:128)les with the same name but
di(cid:130)erent SHA2s. (cid:140)is case study shows that di(cid:130)erent PUP-related
PPI services, already studied in previous work [17, 37], o(cid:137)en share
the same delivery infrastructure.
Figure 11: PUP case study detected by Marmite.
(cid:140)is case study illustrates the blurry line between malware and
PUP (cid:128)les. While some (cid:128)les are classi(cid:128)ed as malware by VirusTotal,
some other are not, and are considered as PUP by Symantec. (cid:140)e
label propagation performed by Marmite is able to (cid:131)ag all of them
as malicious.
{…72 conﬁrmed fromMizenota Family{811 shady binarieshttp://balancer1.amber1glue.com/download.php{5 shady binaries104.24.98.90104.24.99.90192.162.0.103CloudFlare, Inc. (CLOUD14)CloudFlare, Inc. (CLOUD14)MTS PJSCAmonetize102