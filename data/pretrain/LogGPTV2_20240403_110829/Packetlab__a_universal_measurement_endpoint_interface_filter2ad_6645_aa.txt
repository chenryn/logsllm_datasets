title:Packetlab: a universal measurement endpoint interface
author:Kirill Levchenko and
Amogh Dhamdhere and
Bradley Huffaker and
kc claffy and
Mark Allman and
Vern Paxson
PacketLab: A Universal Measurement Endpoint Interface
Kirill Levchenko
UC San Diego
PI:EMAIL
kc claffy
CAIDA
PI:EMAIL
Amogh Dhamdhere
PI:EMAIL
CAIDA
PI:EMAIL
Mark Allman
ICSI
Bradley Huffaker
CAIDA
PI:EMAIL
Vern Paxson
UC Berkeley/ICSI
PI:EMAIL
ABSTRACT
The right vantage point is critical to the success of any active
measurement. However, most research groups cannot afford to
design, deploy, and maintain their own network of measurement
endpoints, and thus rely measurement infrastructure shared by
others. Unfortunately, the mechanism by which we share access
to measurement endpoints today is not frictionless; indeed, issues
of compatibility, trust, and a lack of incentives get in the way of
efficiently sharing measurement infrastructure.
We propose PacketLab, a universal measurement endpoint in-
terface that lowers the barriers faced by experimenters and mea-
surement endpoint operators. PacketLab is built on two key ideas:
It moves the measurement logic out of the endpoint to a separate
experiment control server, making each endpoint a lightweight
packet source/sink. At the same time, it provides a way to delegate
access to measurement endpoints while retaining fine-grained con-
trol over how one’s endpoints are used by others, allowing research
groups to share measurement infrastructure with each other with
little overhead. By making the endpoint interface simple, we also
make it easier to deploy measurement endpoints on any device
anywhere, for any period of time the owner chooses. We offer
PacketLab as a candidate measurement interface that can accom-
modate the research community’s demand for future global-scale
Internet measurement.
CCS CONCEPTS
• Networks → Network measurement;
KEYWORDS
Network measurement, PacketLab
ACM Reference Format:
Kirill Levchenko, Amogh Dhamdhere, Bradley Huffaker, kc claffy, Mark All-
man, and Vern Paxson. 2017. PacketLab: A Universal Measurement Endpoint
Interface. In Proceedings of IMC ’17, London, United Kingdom, November 1–3,
2017, 7 pages.
https://doi.org/10.1145/3131365.3131396
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
IMC ’17, November 1–3, 2017, London, United Kingdom
© 2017 Copyright held by the owner/author(s). Publication rights licensed to Associa-
tion for Computing Machinery.
ACM ISBN 978-1-4503-5118-8/17/11...$15.00
https://doi.org/10.1145/3131365.3131396
1 INTRODUCTION
Having the right vantage points can make or break a network
study. Whether it is observing Internet censorship, testing for
network neutrality violations, or building a map of the Internet,
researchers need access to end hosts from which they can conduct
their measurements. Indeed, research groups invest considerable
effort to secure access to such end hosts and operate them as
measurement endpoints. The result has been a proliferation
of Internet measurement platforms with different underlying
architectures, implementations, functionalities, APIs, and user
bases. Unfortunately, to run experiments on these platforms at
scale, outside researchers and platform operators must overcome
several obstacles:
• Compatibility. Each measurement platform has its own de-
ployment and usage models. The experimenter must port her
experiment to each platform individually—not an easy task.
To break the N -interfaces-to-N -platforms paradigm, we need
a single universal interface that works across all platforms,
allowing experiments to scale easily.
• Incentives. Many platform operators provide technical sup-
port to the experimenter in the design phase of an experiment
and operational support during deployment. The cost of pro-
viding these services falls on the operator and thus limits the
number of outside experiments a platform can support. By re-
ducing their support costs, platform operators can accept more
outside experiments.
• Trust. On general-purpose platforms that do not limit exper-
imenters to a fixed set of measurements, platform operators
must trust each experimenter to behave according to a specified
set of rules, and this can limit the set of experimenters admitted
to a platform. To encourage platform operators to open their
measurement infrastructure to a greater user base, operators
need reliable mechanisms to guarantee compliance with their
rules.
To lower these barriers, we propose a clean-slate measurement ar-
chitecture we call PacketLab. PacketLab is not a new measurement
platform; rather, PacketLab provides a lightweight, universal inter-
face to existing measurement endpoints. Our value proposition to
measurement platform operators is that PacketLab gives them con-
trol over how their platform is used and does so in a low-overhead
way. By lowering barriers to sharing, PacketLab makes it easy to
expose network vantage points to the measurement community,
including new vantage points that are not part of an existing mea-
surement platform. For experimenters, PacketLab provides a single
interface to multiple measurement platforms, so that researchers
IMC ’17, November 1–3, 2017, London, United Kingdom
Levchenko et al.
develop and test their experiments once and then run them on any
endpoint exporting the PacketLab interface.
To meet these goals, PacketLab makes several unique design de-
cisions. First and foremost, we argue that measurement endpoints
should provide an interface to the network, and not to the endpoint
computing hardware. Current platforms follow a model where
adding a new experiment (whether one’s own or external) requires
updating software on the endpoint. Our philosophy is that adding
a new experiment should require no changes to endpoints. This is
only possible if we decouple the platform from the experiment. In
PacketLab, measurement endpoints are simple packet senders and
receivers. All experiment logic is located on a separate experiment
controller that carries out the experiment. During an experiment,
the experiment controller tells the endpoint what packets to send
and what packets to capture and send back. This separation of ex-
periment and platform means that measurement endpoints can be
very simple while still supporting experiments of arbitrary com-
plexity built on basic send and capture primitives. And because
endpoints are simple, it is easy to add PacketLab support to ex-
isting measurement platforms. PacketLab experiment controllers
are ephemeral, lasting only for the duration of an experiment. An
experiment controller is provisioned and operated by the experi-
menter, not the platform operator, shifting costs typically borne by
platform operators to the experimenter.
To control access to their endpoints, operators issue crypto-
graphic certificates that authorize an experimenter to carry out
a particular set of experiments. The experimenter’s experiment
controller then presents this certificate to each measurement end-
point she wishes to use. Certificates include restrictions that allow
endpoint operators to limit the kinds of traffic that can be generated
or collected at their measurement endpoints.
2 BACKGROUND AND RELATED WORK
End-host network measurement is an active area of research, with
several measurement platforms in operation:
• FCC’s MBA [2]
• BISmark [30]
• RIPE Atlas [4]
• ICLab [1]
• CAIDA Ark [14] • OONI [25]
• MITATE [17]
• Netalyzr [19]
• Dasu [26]
• Scriptroute [29] • PEERING [27]
• CAIDA Periscope [16]
We refer the reader to Bajpai and Schonwalder’s recent survey [6]
for an in-depth description of these efforts. Of particular relevance
to this work are those platforms that explicitly invite outside exper-
iments, namely BISmark, RIPE Atlas, FCC’s Measuring Broadband
America (MBA), Scriptroute, and Ark, as well as the more general
PlanetLab [3] platform. Both BISmark and MBA started specifically
for broadband speed measurements. CAIDA’s Ark infrastructure
was designed to be a community platform for active Internet mea-
surement. RIPE Atlas was designed to support the operational needs
of the RIPE community.
Ark, BISmark, and MBA can support arbitrary experiments that
are vetted by the platform operator. Vetting as well as experiment
development, testing, and deployment require involvement of the
platform operator, and it is these costs that PacketLab aims to mini-
mize. Furthermore, porting experiments to these platforms can be
non-trivial. For example, when we wanted to extend our measure-
ment of inter-domain congestion [20], originally written for Ark, to
run on BISmark, differences between the platforms required us to
re-design the experiment, moving most of the experiment logic off
the endpoint. We argue that these platforms, and the experiments
using them, stand to gain by offering an interface like PacketLab.
Scriptroute allows researchers to run scripts (written in the Ruby
language) on the measurement endpoints without prior vetting,
applying a local policy filter to limit the kind of traffic an endpoint
can send. One of the unique features of Scriptroute is that it also
allows measurement packet destinations to express a traffic policy
by encoding it in a DNS record for the network.
In contrast, PacketLab moves all experiment logic off the end-
point, allowing researchers to write experiments in a language
of their choice. PEERING, a measurement platform designed for
routing experiments, follows the same philosophy, providing an
OpenVPN tunnel to the researcher for handling traffic for an adver-
tised route. To support general-purpose measurements, PacketLab
endpoints also provide packet filtering, timestamping and schedul-
ing primitives.
MITATE, a measurement platform aimed at mobile devices, keeps
endpoints simple yet general by letting experimenters send an arbi-
trary, but pre-declared sequence of packets with a specific timing.
The authors ensure that “these packets do not pose threats to other
systems by matching them against signatures of known exploits
using intrusion detection mechanisms.”
At the more conservative end, RIPE Atlas supports a fixed (but
useful) set of measurements that include ping, traceroute, DNS,
SSL/TLS and some HTTP types. By limiting itself to measurements
generally considered safe, RIPE Atlas achieves greater deployment
(nearly 10,000 endpoints—an order of magnitude more than Ark
and BISmark combined). RIPE Atlas underscores the importance of
providing guaranteed limits to what an experiment can do in order
to scale access to vantage points.
PacketLab is not another measurement platform, but an interface
to existing and future platforms. In principle, each of the above
platforms can provide a PacketLab interface in addition to their
native interface. To make this possible, PacketLab will provide an
access control and experiment monitoring system that allows each
platform operator to enforce their desired experiment policy, while
making as few assumptions as possible about the endpoint.
The measurement community has long sought a single inter-
face to unify existing measurement platforms. There have been
numerous discussions on federating existing measurement infras-
tructure, notably at the past three CAIDA AIMS workshops [11–13]
(PacketLab itself was the subject of extended discussion at AIMS
2017). Projects such as MPlane [31] and Tophat [9] have attempted
to either federate existing infrastructures, or build an intelligent
measurement plane with probes that can execute measurements
on-demand. Bajpai et al. [5] discussed the issue of platform inte-
gration at a Dagstuhl seminar, arguing that integration could be
achieved by encouraging convergence towards an agreed-upon set
of measurement primitives, tools, data storage formats, as well as
a software management framework. PacketLab adresses the same
need in a different way: moving all experiment logic to the experi-
ment controller, leaving only the most simple packet send/receive
mechanism on the endpoint.
PacketLab: A Universal Measurement Endpoint Interface
IMC ’17, November 1–3, 2017, London, United Kingdom
3 ARCHITECTURE
The PacketLab architecture consists of measurement endpoints, ren-
dezvous servers, and experiment controllers. Measurement endpoints
may be software agents (e.g. Netalyzr), dedicated servers (e.g. Ark),
or embedded systems connected to a home router (e.g. BISmark).
Endpoints are managed and maintained by an endpoint operator. Ex-
cept for granting permission to conduct an experiment, PacketLab
does not specify how endpoint operators interact with measure-
ment endpoints or if they do so at all. An endpoint operator can
grant an experimenter (researcher) permission to use the endpoints
he controls. The remainder of this section describes these elements
of PacketLab in greater detail.
3.1 Measurement Endpoints
PacketLab measurement endpoints are software or hardware agents
capable of sending and receiving packets on the Internet. A Packet-
Lab endpoint provides an experimenter an interface to the network
rather than an interface to the endpoint hardware. To run an ex-
periment, an experiment controller operated by the experimenter
interactively controls the measurement endpoint. In PacketLab ter-
minology, experiments are short-lived interactive sessions between
an experiment controller and an endpoint, generally lasting only
a few minutes. A long-lived real-world research experiment will
involve many short interactive sessions (PacketLab experiments).
An endpoint’s role during an experiment is simple: it sends packets
that the experiment controller tells it to send, and it captures pack-
ets the experiment controller tells it to capture. All experiment logic
is located on the experiment controller so that the measurement
endpoint interface can remain simple and universal.
Network Primitives. The interface PacketLab endpoints export
to experiment controllers is shown in Table 1. PacketLab endpoints
can provide two kinds of access to the network: a raw IP interface,
or a native TCP/UDP socket serviced by the endpoint’s operating
system. While the endpoint network access API (commands with
an n prefix) resemble the BSD sockets interface, there are also