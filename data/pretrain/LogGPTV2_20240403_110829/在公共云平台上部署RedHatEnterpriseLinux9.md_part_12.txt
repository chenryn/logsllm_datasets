:::
在安装 AWS CLI 前，您需要创建一个 AWS 访问密钥和 AWS Secret
访问密钥。隔离和资源代理 API 使用 AWS 访问密钥和 Secret
访问密钥连接到集群中的每个节点。
完成以下步骤以创建这些密钥。
::: itemizedlist
**先决条件**
-   您的 IAM 用户帐户必须具有 Programmatic
    访问权限。如需更多信息，请参阅[设置 AWS
    环境](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html){.link}。
:::
::: orderedlist
**流程**
1.  启动 [AWS 控制台](https://console.aws.amazon.com/console/){.link}。
2.  点击您的 AWS 帐户 ID 来显示下拉菜单，并选择 [**My Security
    Credentials**]{.strong}。
3.  点 [**Users**]{.strong}。
4.  选择用户并打开 [**Summary**]{.strong} 屏幕。
5.  点 [**Security credentials**]{.strong} 选项卡。
6.  点 [**Create access key**]{.strong}。
7.  下载 `.csv`{.literal}
    文件（或保存这两个密钥）。创建隔离设备时需要输入这些密钥。
:::
:::
::: section
::: titlepage
# []{#configuring-a-red-hat-high-availability-cluster-on-aws_deploying-a-virtual-machine-on-aws.html#installing-aws-command-line-interface_configuring-a-red-hat-high-availability-cluster-on-aws}安装 AWS CLI {.title}
:::
本章的许多流程包括使用 AWS CLI。完成以下步骤以安装 AWS CLI。
::: itemizedlist
**先决条件**
-   您需要已创建并有权访问 AWS 访问密钥 ID 和 AWS Secret
    访问密钥。有关信息和说明，请参阅[快速配置 AWS
    CLI](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html#cli-quick-configuration){.link}。
:::
::: orderedlist
**步骤**
1.  安装 Python 3 和 `pip`{.literal} 工具。
    ``` literallayout
    # dnf install python3
    # dnf install python3-pip
    ```
2.  使用 `pip`{.literal} 命令安装 [AWS
    命令行工具](https://aws.amazon.com/cli/){.link}。
    ``` literallayout
    # pip3 install awscli
    ```
3.  运行 `aws --version`{.literal} 命令，来验证您是否安装了 AWS CLI。
    ``` literallayout
    $ aws --version
    aws-cli/1.19.77 Python/3.6.15 Linux/5.14.16-201.fc34.x86_64 botocore/1.20.77
    ```
4.  根据 AWS 访问详情配置 AWS 命令行客户端。
    ``` literallayout
    $ aws configure
    AWS Access Key ID [None]:
    AWS Secret Access Key [None]:
    Default region name [None]:
    Default output format [None]:
    ```
:::
::: itemizedlist
**其它资源**
-   [快速配置 AWS
    CLI](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html#cli-quick-configuration){.link}
-   [AWS 命令行工具](https://aws.amazon.com/cli/){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-a-red-hat-high-availability-cluster-on-aws_deploying-a-virtual-machine-on-aws.html#aws-creating-a-rhel-ha-ec2-instance_configuring-a-red-hat-high-availability-cluster-on-aws}创建 HA EC2 实例 {.title}
:::
完成以下步骤以创建用作 HA
集群节点的实例。请注意，您有几个选项可用于获取用于集群的 RHEL 镜像。有关
AWS 镜像选项的信息，请参阅 ["AWS 上的 Red Hat Enterprise Linux
镜像选项"一节](#assembly_deploying-a-virtual-machine-on-aws_cloud-content.html#aws-image-options_deploying-a-virtual-machine-on-aws "AWS 上的 Red Hat Enterprise Linux 镜像选项"){.xref}。
您可以创建和上传用于集群节点的自定义镜像，也可以选择黄金镜像（云访问镜像）或按需镜像。
::: itemizedlist
**先决条件**
-   您需要已设置 AWS 环境。如需更多信息，请参阅[使用 Amazon EC2
    设置](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html){.link}。
:::
::: orderedlist
**流程**
1.  在 AWS EC2 Dashboard 中选择 [**Images**]{.strong}，然后选择
    [**AMI**]{.strong}。
2.  右键点击您的镜像并选择 [**Launch**]{.strong}。
3.  选择一个满足或超过工作负载要求的 [**Instance
    Type**]{.strong}。根据您的 HA 应用，每个实例可能需要具有更高的容量。
    如需有关实例类型的信息，请参阅 [Amazon EC2
    实例类型](https://aws.amazon.com/ec2/instance-types/){.link}。
4.  点 [**Next：配置实例详情**]{.strong}。
    ::: orderedlist
    1.  输入您要为集群创建的 [**Number of
        instances**]{.strong}。本章示例使用三个集群节点。
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        不要启动自动缩放组。
        :::
    2.  对于 [**Network**]{.strong}，请选择您在 [Set up AWS
        environment](https://access.redhat.com/articles/3354781#header11){.link}
        中创建的 VPC。选择实例子网以创建新子网。
    3.  为 Auto-assign Public IP 选择 [**Enable**]{.strong}。以下是
        [**Configure Instance Details**]{.strong}
        所需的最小选择。根据您的特定 HA 应用，您可能需要进行其他选择。
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        这些是创建基本实例所需的最小配置选项。根据您的 HA
        应用程序要求查看其他选项。
        :::
    :::
5.  点 [**Next：添加 Storage**]{.strong}
    并验证默认存储是否已经足够。除非您的 HA
    应用程序需要其他存储选项，您不需要修改这些设置。
6.  点 [**Next：添加 Tags**]{.strong}。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    标签可帮助您管理 AWS 资源。有关标记的信息，请参阅[标记您的 Amazon
    EC2
    资源](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html){.link}。
    :::
7.  点 [**Next：配置安全组**]{.strong}。选择在 [Setting the AWS
    environment](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html){.link}
    中创建的现有安全组。
8.  点击 [**Review and Launch**]{.strong} ，并验证您的选择。
9.  点击
    [**Launch**]{.strong}。此时会提示您选择现有密钥对或创建新密钥对。选择在
    [Setting up the AWS
    environment](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html){.link}
    时创建的密钥对。
10. 点击 [**Launch Instances**]{.strong}。
11. 点击 [**View Instances**]{.strong}。您可以命名实例。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    另外，您可以使用 AWS CLI 启动实例。如需更多信息，请参阅 Amazon
    文档中的[启动、列出和终止 Amazon EC2
    实例](https://docs.aws.amazon.com/cli/latest/userguide/cli-services-ec2-instances.html){.link}。
    :::
:::
::: itemizedlist
**其它资源**
-   [AWS Management
    Console](https://console.aws.amazon.com/console/home){.link}
-   [Setting Up with Amazon
    EC2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/get-set-up-for-amazon-ec2.html){.link}
-   [Amazon EC2
    实例](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Instances.html){.link}
-   [Amazon EC2
    实例类型](https://aws.amazon.com/ec2/instance-types/){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-a-red-hat-high-availability-cluster-on-aws_deploying-a-virtual-machine-on-aws.html#aws-configuring-the-private-key-in-ha_configuring-a-red-hat-high-availability-cluster-on-aws}配置私钥 {.title}
:::
在 SSH 会话中使用私有 SSH
密钥文件（`.pem`{.literal}）之前，请完成以下配置任务来使用该文件。
::: orderedlist
**步骤**
1.  将密钥文件从 `Downloads`{.literal} 目录移到您的 `主`{.literal}
    目录或 `~/.ssh 目录 `{.literal}。
2.  输入以下命令更改密钥文件的权限，以便只有 root 用户才能读取它。
    ``` literallayout
    # chmod 400 KeyName.pem
    ```
:::
:::
::: section
::: titlepage
# []{#configuring-a-red-hat-high-availability-cluster-on-aws_deploying-a-virtual-machine-on-aws.html#aws-connecting-to-an-instance_configuring-a-red-hat-high-availability-cluster-on-aws}连接到 EC2 实例 {.title}
:::
在所有节点上完成以下步骤来连接 EC2 实例。
::: orderedlist
**步骤**
1.  启动 [AWS Console](https://console.aws.amazon.com){.link} ，并选择
    EC2 实例。
2.  点击 [**Connect**]{.strong} ，并选择 [**A standalone SSH
    client**]{.strong}。
3.  在 SSH 终端会话中，使用弹出窗口中提供的 AWS
    示例连接到实例。如果示例中没有显示路径，请为您的
    `KeyName.pem`{.literal} 文件添加正确的路径。
:::
:::
::: section
::: titlepage
# []{#configuring-a-red-hat-high-availability-cluster-on-aws_deploying-a-virtual-machine-on-aws.html#aws-installing-rhel-ha-packages-and-agents_configuring-a-red-hat-high-availability-cluster-on-aws}安装高可用性软件包和代理 {.title}
:::
在所有节点上完成以下步骤，安装高可用性软件包和代理。
::: orderedlist
**流程**
1.  输入以下命令删除 AWS Red Hat Update
    Infrastructure（RHUI）客户端。由于您要使用红帽云访问订阅，因此除了订阅之外，您不应该使用
    AWS RHUI。
    ``` literallayout
    $ sudo -i
    # dnf -y remove rh-amazon-rhui-client*
    ```
2.  在红帽注册虚拟机。
    ``` literallayout
    # subscription-manager register --auto-attach
    ```
3.  禁用所有软件仓库。
    ``` literallayout
    # subscription-manager repos --disable=*
    ```
4.  启用 RHEL 9 服务器 HA 软件仓库。
    ``` literallayout
    # subscription-manager repos --enable=rhel-9-for-x86_64-highavailability-rpms
    ```
5.  更新 RHEL AWS 实例。
    ``` literallayout
    # dnf update -y
    ```
6.  安装红帽高可用性附加组件软件包，以及高可用性通道的所有可用的隔离代理。
    ``` literallayout
    # dnf install pcs pacemaker fence-agents-aws
    ```
7.  在上一步中的 `pcs`{.literal} 和 `pacemaker`{.literal}
    安装过程中，创建了用户 `hacluster`{.literal} 。在所有群集节点上为
    `hacluster`{.literal} 创建密码。所有节点都使用相同的密码。
    ``` literallayout
    # passwd hacluster
    ```
8.  如果安装了 `firewalld.service`{.literal}，请在 RHEL Firewall 中添加
    `high availability`{.literal} 服务。
    ``` literallayout
    # firewall-cmd --permanent --add-service=high-availability
    # firewall-cmd --reload
    ```
9.  启动 `pcs`{.literal} 服务，并使其在引导时启动。
    ``` literallayout
    # systemctl start pcsd.service
    # systemctl enable pcsd.service
    ```
10. 编辑 `/etc/hosts`{.literal} ，并添加 RHEL 主机名和内部 IP
    地址。详情请参阅[如何在 RHEL 集群节点上设置 /etc/hosts
    文件？](https://access.redhat.com/solutions/81123){.link}
:::
::: itemizedlist
**验证**
-   确保 `pcs`{.literal} 服务正在运行。
    ``` literallayout
    # systemctl status pcsd.service
    pcsd.service - PCS GUI and remote configuration interface
    Loaded: loaded (/usr/lib/systemd/system/pcsd.service; enabled; vendor preset: disabled)
    Active: active (running) since Thu 2018-03-01 14:53:28 UTC; 28min ago
    Docs: man:pcsd(8)
    man:pcs(8)
    Main PID: 5437 (pcsd)
    CGroup: /system.slice/pcsd.service
         └─5437 /usr/bin/ruby /usr/lib/pcsd/pcsd > /dev/null &
    Mar 01 14:53:27 ip-10-0-0-48.ec2.internal systemd[1]: Starting PCS GUI and remote configuration interface…
    Mar 01 14:53:28 ip-10-0-0-48.ec2.internal systemd[1]: Started PCS GUI and remote configuration interface.
    ```
:::
:::
::: section
::: titlepage