    ：
    ``` literallayout
    [sssd]
    domains = domain1, domain2, domain3
    ```
2.  通过在 PAM 配置文件中设置 domain 选项来指定 PAM
    服务可以进行身份验证的 `域`{.literal} 或域。例如：
    ``` literallayout
    auth        sufficient    pam_sss.so forward_pass domains=domain1
    account     [default=bad success=ok user_unknown=ignore] pam_sss.so
    password    sufficient    pam_sss.so use_authtok
    ```
    在本例中，您将允许 PAM 服务仅对 `domain1`{.literal} 进行身份验证。
:::
::: itemizedlist
**验证步骤**
-   通过 `domain1 进行身份验证`{.literal}.它必须成功。
:::
:::
:::
[]{#eliminating-typographical-errors-in-local-SSSD-configuration_restricting-domains-for-pam-services-using-sssd.html}
::: chapter
::: titlepage
# []{#eliminating-typographical-errors-in-local-SSSD-configuration_restricting-domains-for-pam-services-using-sssd.html#eliminating-typographical-errors-in-local-SSSD-configuration_restricting-domains-for-pam-services-using-sssd}第 10 章 在本地 SSSD 配置中消除拼写错误 {.title}
:::
您可以使用 `sssctl config-check`{.literal} 命令测试主机上的
`/etc/sssd/sssd.conf`{.literal} 文件是否包含任何拼写错误。
::: itemizedlist
**先决条件**
-   以 root 身份登录。
-   `sssd-tools`{.literal} 软件包已安装。
:::
::: orderedlist
**流程**
1.  输入 `sssctl config-check`{.literal} 命令：
    ``` literallayout
    # sssctl config-check
    Issues identified by validators: 1
    [rule/allowed_domain_options]: Attribute 'ldap_search' is not allowed in section 'domain/example1'. Check for typos.
    Messages generated during configuration merging: 0
    Used configuration snippet files: 0
    ```
2.  打开 `/etc/sssd/sssd.conf`{.literal}
    文件并更正拼写错误。例如，如果您收到上一步中的出错信息，将
    [**ldap_search**]{.strong} 替换为 [**ldap_search_base**]{.strong}:
    ``` literallayout
    [...]
    [domain/example1]
    ldap_search_base = dc=example,dc=com
    [...]
    ```
3.  保存该文件。
4.  重启 SSSD：
    ``` literallayout
    # systemctl restart sssd
    ```
:::
::: itemizedlist
**验证步骤**
-   输入 `sssctl config-check`{.literal} 命令：
    ``` literallayout
    # sssctl config-check
    Issues identified by validators: 0
    Messages generated during configuration merging: 0
    Used configuration snippet files: 0
    ```
:::
`/etc/sssd/sssd.conf`{.literal} 文件现在没有拼写错误。
:::
[]{#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html}
::: chapter
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd}第 11 章 IdM 中 SSSD 身份验证故障排除 {.title}
:::
在 Identity Management(IdM)环境中的身份验证涉及许多组件：
::: itemizedlist
**在 IdM 客户端中：**
-   SSSD 服务.
-   名称服务切换(NSS)。
-   可插拔验证模块(PAM)。
:::
::: itemizedlist
**在 IdM 服务器上：**
-   SSSD 服务.
-   IdM 目录服务器.
-   IdM Kerberos 密钥分发中心(KDC)。
:::
::: itemizedlist
**如果您要以 Active Directory(AD)用户进行身份验证：**
-   AD 域控制器上的目录服务器.
-   AD 域控制器上的 Kerberos 服务器.
:::
要验证用户，您必须使用 SSSD 服务执行以下功能：
::: itemizedlist
-   从身份验证服务器检索用户信息。
-   提示用户输入其凭据，将这些凭据传递到身份验证服务器，然后处理结果。
:::
以下小节讨论 SSSD
服务和存储用户信息的服务器之间的信息流，以便您可以排除环境中身份验证尝试失败的问题：
::: orderedlist
1.  [使用 SSSD 获取 IdM
    用户信息时的数据流](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#con_data-flow-when-retrieving-idm-user-information-with-sssd_assembly_troubleshooting-authentication-with-sssd-in-idm "使用 SSSD 获取 IdM 用户信息时的数据流"){.link}
2.  [使用 SSSD 获取 AD
    用户信息时的数据流](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#con_data-flow-when-retrieving-ad-user-information-with-sssd_assembly_troubleshooting-authentication-with-sssd-in-idm "使用 SSSD 获取 AD 用户信息时的数据流"){.link}
3.  [以 IdM 中的 SSSD
    用户身份进行身份验证时的数据流](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#con_data-flow-when-authenticating-as-a-user-with-sssd-in-idm_assembly_troubleshooting-authentication-with-sssd-in-idm "以 IdM 中的 SSSD 用户身份进行身份验证时的数据流"){.link}
4.  [缩小身份验证问题的范围](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#proc_narrowing-the-scope-of-authentication-issues_assembly_troubleshooting-authentication-with-sssd-in-idm "缩小身份验证问题的范围"){.link}
5.  [SSSD
    日志文件和日志记录级别](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#ref_sssd-log-files-and-logging-levels_assembly_troubleshooting-authentication-with-sssd-in-idm "SSSD 日志文件和日志记录级别"){.link}
6.  [在 sssd.conf 文件中为 SSSD
    启用详细日志记录](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#proc_enabling-detailed-logging-for-sssd-in-the-sssdconf-file_assembly_troubleshooting-authentication-with-sssd-in-idm "在 sssd.conf 文件中为 SSSD 启用详细日志记录"){.link}
7.  [使用 sssctl 命令为 SSSD
    启用详细的日志记录](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#proc_enabling-detailed-logging-for-sssd-with-the-sssctl-command_assembly_troubleshooting-authentication-with-sssd-in-idm "使用 sssctl 命令为 SSSD 启用详细的日志记录"){.link}
8.  [从 SSSD 服务收集调试日志，对 IdM
    服务器的身份验证问题进行故障排除](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#proc_gathering-debugging-logs-from-the-sssd-service-to-troubleshoot-authentication-issues-with-an-idm-server_assembly_troubleshooting-authentication-with-sssd-in-idm "从 SSSD 服务收集调试日志，对 IdM 服务器的身份验证问题进行故障排除"){.link}
9.  [从 SSSD 服务收集调试日志，以对 IdM
    客户端的身份验证问题进行故障排除](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#proc_gathering-debugging-logs-from-the-sssd-service-to-troubleshoot-authentication-issues-with-an-idm-client_assembly_troubleshooting-authentication-with-sssd-in-idm "从 SSSD 服务收集调试日志，以对 IdM 客户端的身份验证问题进行故障排除"){.link}
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#con_data-flow-when-retrieving-idm-user-information-with-sssd_assembly_troubleshooting-authentication-with-sssd-in-idm}使用 SSSD 获取 IdM 用户信息时的数据流 {.title}
:::
下图使用 `getent passwd `{.literal} 命令在请求 IdM
用户信息的过程中简化 IdM 客户端和 IdM 服务器之间的信息流。
[![A diagram with numbered arrows representing the flow of information
between an IdM client and an IdM server. The following numbered list
describes each step in the
process.](images/169_RHEL_IdM_with_SSSD_0621-user_info.png)]{.inlinemediaobject}
::: orderedlist
1.  `getent`{.literal} 命令会触发来自 `libc`{.literal} 库的
    `getpwnam`{.literal} 调用。
2.  The `libc`{.literal} 库引用 `/etc/nsswitch.conf`{.literal}
    配置文件来检查哪个服务负责提供用户信息，并发现 `SSSD`{.literal}
    服务的条目。
3.  The `libc`{.literal} library opens then `ss_sss`{.literal} 模块。
4.  nss_sss 模块检查内存映射缓存以获取用户信息。如果缓存中存在数据，则
    `ss_sss`{.literal} 模块会返回它。
5.  如果用户信息不在内存映射缓存中，则会将请求传递给 SSSD
    `sssd_nss`{.literal} 响应程序进程。
6.  SSSD 服务检查其缓存。如果缓存中存在数据并有效，sssd `_nss`{.literal}
    响应程序会从缓存中读取数据并将其返回到应用。
7.  如果缓存中没有数据或数据已过期，sssd `_nss`{.literal}
    响应器将查询相应的后端进程并等待回复。SSSD 服务在 IdM 环境中使用 IPA
    后端，通过 `sssd.conf`{.literal} 配置文件中的
    `id_provider=ipa`{.literal} 启用。
8.  `sssd_be`{.literal} 后端进程连接到 IdM 服务器，并从 IdM LDAP
    目录服务器请求信息。
9.  IdM 服务器上的 SSSD 后端响应 IdM 客户端上的 SSSD 后端进程。
10. 客户端上的 SSSD 后端将生成的数据存储在 SSSD
    缓存中，并提醒已更新缓存的响应程序进程。
11. `sssd_nss`{.literal} 前端响应器进程从 SSSD 缓存检索信息。
12. `sssd_nss`{.literal} 响应器将用户信息发送到 then `ss_sss`{.literal}
    响应者，以完成请求。
13. The `libc`{.literal} 库将用户信息返回到请求它的应用程序。
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#con_data-flow-when-retrieving-ad-user-information-with-sssd_assembly_troubleshooting-authentication-with-sssd-in-idm}使用 SSSD 获取 AD 用户信息时的数据流 {.title}
:::
如果您在 IdM 环境和 Active Directory(AD)域之间建立了跨林信任，则在 IdM
客户端上检索 AD 用户信息时的信息流与检索 IdM
用户信息时的信息流非常相似，以及联系 AD 用户数据库的额外步骤。
下图是当用户使用 `getent passwd `{.literal}
命令请求 AD 用户信息时，信息流的简化。当使用 [SSSD 检索 IdM
用户信息时，此图不包括数据流](#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#con_data-flow-when-retrieving-idm-user-information-with-sssd_assembly_troubleshooting-authentication-with-sssd-in-idm "使用 SSSD 获取 IdM 用户信息时的数据流"){.link}
中讨论的内部详细信息。它侧重于 IdM 客户端上的 SSSD 服务、IdM 服务器上的
SSSD 服务和 AD 域控制器上的 LDAP 数据库之间的通信。
[![A diagram with numbered arrows representing the flow of information
between an IdM client, an IdM server, and an AD Domain Controller. The
following numbered list describes each step in the
process.](images/169_RHEL_IdM_with_SSSD_0621-ad_user_info.png)]{.inlinemediaobject}
::: orderedlist
1.  IdM 客户端为 AD 用户信息查找其本地 SSSD 缓存。
2.  如果 IdM 客户端没有用户信息，或者信息是 stale，客户端上的 SSSD
    服务会联系 IdM `服务器上的 extdom_extop`{.literal} 插件来执行 LDAP
    扩展操作并请求信息。
3.  IdM 服务器上的 SSSD 服务在其本地缓存中查找 AD 用户信息。
4.  如果 IdM 服务器在其 SSSD
    缓存中没有用户信息，或者其信息为过时，它将执行 LDAP 搜索，以从 AD
    域控制器请求用户信息。
5.  IdM 服务器上的 SSSD 服务从 AD 域控制器接收 AD
    用户信息，并将其存储在其缓存中。
6.  `extdom_extop`{.literal} 插件从 IdM 服务器上的 SSSD
    服务接收信息，该服务完成 LDAP 扩展操作。
7.  IdM 客户端上的 SSSD 服务从 LDAP 扩展操作接收 AD 用户信息。
8.  IdM 客户端将 AD 用户信息存储在其 SSSD
    缓存中，并将信息返回给请求它的应用程序。
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_restricting-domains-for-pam-services-using-sssd.html#con_data-flow-when-authenticating-as-a-user-with-sssd-in-idm_assembly_troubleshooting-authentication-with-sssd-in-idm}以 IdM 中的 SSSD 用户身份进行身份验证时的数据流 {.title}
:::
以 IdM 服务器或客户端中的用户身份进行身份验证涉及以下组件：
::: itemizedlist
-   启动身份验证请求的服务，如 sshd 服务。
-   可插拔验证模块(PAM)库及其模块.
-   SSSD 服务、其响应者和后端。
-   智能卡读取器，如果配置了智能卡验证。
-   身份验证服务器：
    ::: itemizedlist
    -   IdM 用户通过 IdM Kerberos 密钥分发中心(KDC)进行身份验证。
    -   Active Directory(AD)用户通过 AD 域控制器(DC)进行身份验证。
    :::
:::
下图是用户在尝试通过命令行上的 SSH
服务在本地登录主机期间需要进行身份验证时的简化信息流。
[![A diagram with numbered arrows representing the flow of information
between an IdM client and an IdM server or AD Domain Controller during
an authentication attempt. The following numbered list describes each
step in the
process.](images/169_RHEL_IdM_with_SSSD_0621-authentication.png)]{.inlinemediaobject}
::: orderedlist
1.  使用 `ssh`{.literal} 命令尝试身份验证会触发 `libpam`{.literal} 库。
2.  `libpam`{.literal} 库引用 `/etc/pam.d/`{.literal}
    目录中与请求身份验证尝试的服务对应的 PAM 文件。在本例中，libpam
    库涉及通过本地主机上的 SSH 服务进行身份验证，`libpam`{.literal}
    库检查 `/etc/pam.d/system-auth`{.literal} 配置文件并发现 SSSD PAM 的
    `pam_sss.so`{.literal} 条目：
    ``` literallayout
    auth    sufficient    pam_sss.so
    ```
3.  要确定哪些身份验证方法可用，lib `pam`{.literal} 库会打开
    `pam_sss`{.literal} 模块，并将 `SSS_PAM_PREAUTH`{.literal}
    请求发送到 SSSD `服务的 sssd_pam`{.literal} PAM 响应者。
4.  如果配置了智能卡验证，SSSD 服务会生成一个临时 `p11_child`{.literal}
    进程，以检查智能卡并从中检索证书。
5.  如果为用户配置了智能卡验证，sssd `_pam`{.literal}
    响应程序会尝试将智能卡中的证书与用户匹配。`sssd_pam`{.literal}
    响应器还搜索用户所属的组，因为组成员身份可能会影响访问控制。
6.  `sssd_pam`{.literal} 响应器将 `SSS_PAM_PREAUTH`{.literal} 请求发送到
    `sssd_be`{.literal}
    后端响应器，以查看服务器支持的身份验证方法，如密码或 2
    因素身份验证。在 IdM 环境中，SSSD 服务使用 IPA
    响应器，默认的身份验证方法是 Kerberos。在本例中，用户使用简单的
    Kerberos 密码进行身份验证。
7.  `sssd_be`{.literal} 响应器生成一个临时 `krb5_child`{.literal} 进程。
8.  `krb5_child`{.literal} 进程联系 IdM 服务器上的
    KDC，并检查可用的身份验证方法。
9.  KDC 响应请求：
    ::: orderedlist
    1.  `krb5_child`{.literal} 进程评估回复，并将结果发回到
        `sssd_be`{.literal} 后端进程。
    2.  `sssd_be`{.literal} 后端进程会接收结果。
    3.  `sssd_pam`{.literal} 响应器会收到结果。
    4.  `pam_sss`{.literal} 模块接收结果。
    :::
10. 如果为用户配置了密码身份验证，`pam_sss`{.literal}
    模块将提示用户输入其密码。如果配置了智能卡验证，`pam_sss`{.literal}