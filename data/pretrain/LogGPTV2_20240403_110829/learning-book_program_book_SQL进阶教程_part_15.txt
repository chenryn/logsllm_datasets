TblAge，TblSex这样不指定连接条件，把需要连接的表写在一起，其效
果与交叉连接一样。
---
## Page 96
1-5外连接的用法一
83
作为乘法运算的连接
连接相当于乘法运算”，大家应该还记得吧？这种说法并不是一种比喻，
而是事实，观察一下运算前后的行数就能明白这点。
接下来，我们将以下面的商品主表和商品销售历史管理表为例，深入
探讨一下，
Items
SalesHistory
no
sale_dal
qu
10
 FD
2007100110
20071001
4
20
CDR
20
10
30
MO
20071001 30
3
40
DVD
20071003 10
32
20071003 30
12
2007~1004 20
22
20071004 30
7
先使用这两张表生成一张统计表，以商品为单位汇总出各自的销量。
我们期望的结果是像下面这样的。
iten_no
total_qty
10
36
20
32
30
22
40
因为没有销售记录（完全卖不动）的40号商品DVD也需要输出在
结果里，所以很显然，这里需要使用外连接。恐怕很多人会想到下面这种
做法。
-解答（1）：通过在连接前聚合来创建一对一的关系
SELBCr I.ites_no, SH.total_qty
FROM Itens I LEFT OUTER JOIN
(SEL&CT 1ten_no, SUN(quantity) AS total_gty
BS (0u91T A8 4no1D
FRCM SalesHiatory
ON I.ites_no = SH.1ten_no
---
## Page 97
84
—第1章神奇的 SQL
这种做法的确是正确的，代码也很容易理解。这条语句首先在连接前
按商品编号对销售记录表进行聚合，进而生成了一张以item_no为主键
的临时视图，如下表所示。
■以商品编号为主键的临时视图（SH）
iem_ro
_中
10
36
20
32
30
22
接下来，通过“item_no”列对商品主表和这个视图进行连接操作后，
商品主表和临时视图就成为了在主键上进行的一对一连接。这个查询看起
来还真不错。
但是，如果从性能角度考虑，这条SQL语句还是有些间题的。比如
临时视图SH的数据需要临时存储在内存里，还有就是虽然通过聚合将
item_no变成了主键，但是SH上却不存在主键索引，因此我们也就无法
利用索引优化查询。
要改善这个查询，关键在于导入“把连接看作乘法运算”这种视点。
商品主表Items 和视图SH确实是一对一的关系，但其实从“item_no”
列看，表Items 和表 SalesHistory是一对多的关系。而且，当连接操作的
双方是一对多关系时，结果的行数并不会增加。这就像普通乘法里任意数
注0
乘以1后，结果不会变化一样·
在二元运算中，如是某个值和其
他任盘恤进行运算结果都不会改
外连接会增加只在商品主表里存在的40号商品DVD的行，所以严
元。例如与整数进行乘生运算时
空,那么我们称这个值为单位
格地讲，行数并非没有增加。但是这不会导致表SalesHistory里已有的10
的 1。 以及,加达运算时的 0。 从
这一点来要。 在 SOL 的连接运算
号或20号商品的行异常增加，进而引起结果异常。按照这种思路改良后
中。具有单位元性质的是“只有
的 SQL语句如下所示。
一行数据的表”。因为数据行数
连接，结累行数都与原表行数一
为1的表和其他任意表进行交叉
-解答（2）：先进行一对多的连接再聚合
样
SELScT I.item_no, sun (sH.quantity) As total_gty
FBOM Itens I LEFT OUTER JOIN SalesHiatory SH
GROUP BY I.1ten_no;:
ON I.iten_no=SH.1ten_no一对多的连接
这种做法代码更简洁，而且没有使用临时视图，所以性能也会有所
改善。
图灵社区会员非洲铜（PI:EMAIL）专享尊重版权
---
## Page 98
因而这种做法就不能再使用。这时，需要先把某张表聚合一下，使两张表
注0
变成一对多的关系。
如果图练习多对多情况下的连接
和聚合等高组内容，可以参考
一对一或一对多关系的两个集合，在进行连接操作后行数不会（异常
Jbe Ceko 的著作 (50. 解感 [ 第
2 质) 中的“迷凰 41 短算°。
地）增加。
这个技巧在需要使用连接和聚合来解决问题时非常有用，请然练掌握。
读到这里应该有人注意到了，其实前面那个统计人口分布的问题也可
以用类似的方法来解决。这种解法的练习放到了本节最后的练习题里，读
完本节后请挑战一下。
全外连接
本节的前半部分主要从应用的角度介绍了外连接的一些内容。后半部
分将换个角度，从面向集合的角度介绍一下外连接本身的一些性质。
标准SQL里定义了外连接的三种类型，如下所示。
左外连接（LEFTOUTERJOIN）
·右外连接（RIGHTOUTERJOIN）
全外连接（FULLOUTERJOIN）
其中，左外连接和右外连接没有功能上的区别。用作主表的表写在运
算符左边时用左外连接，写在运算符右边时用右外连接。相信这两种大家
已经很熟悉了。在这三种里，全外连接相对来说使用较少。从面向集合的
角度来看，它有很多有趣的特点，所以接下来我们主要了解一下全外连接。
关于“全外连接到底是怎么回事”，相比用语言来描述，具体的实例
更容易让我们明白，所以这里先来看一道简单的例题。
Class_A
（编号）
专
田中
铃木
伊集院
---
## Page 99
86
第1章种奇的 SQL
Class_B
[编号]
name（名字）
田中
铃木
西园寺
在这两张班级学生表里，田中和铃木同时属于两张表，而伊集院和西
园寺只属于其中一张表。全外连接是能够从这样两张内容不一致的表里，
没有遗漏地获取全部信息的方法，所以也可以理解成“把两张表都当作主
表来使用”的连接。
-全外连接保留全部信息
SELSCT COALESCE (A.1d, B.1d) AS 1d,
A.nane As A_nane,
B.nane AS B_name
FBOM Class_A A FULL OOTER JOIN Class_B B
ON A.1d = B.1d;
■执行结果
id
A_oane
B_name
田中
田中
铃木
铃木
伊集院
西园寺
可以看到，两张表里的4个人全部出现在结果里了。COALESCE是
SQL的标准函数，可以接受多个参数，功能是返回第一个非NULL的参数。
使用左（右）外连接时，只能使用两张表中的一张作为主表，所以不能同
息”的意思。
如果所用的数据库不支持全外连接，可以分别进行左外连接和右外连
注0
接，再把两个结果通过UNION合并起来，也能达到同样的目的·
例加，MySDL还不支持完全外查
接，而是把它归类为“未来的中
长期计别内的新功能
--数据库不支持全外连接时的替代方案
SELBCT A-id As id, A-name, B.name
FROM Cla8s_AA
LEFT OUTER JOIN ClaSS_BB
ON A.id = B.id
---
## Page 100
1-5外连接的用法
87
SELBCT B.id As id, A.name, B.name
NOIKn
FROM Cla8s_A A RIGHT OUTER JOIN Class_B 3
ON A.id = B.id;
这种写法虽然也能获取到同样的结果，但是代码比较长，而且使用
两次连接后还要用UNION来合并，性能也不是很好。
其实，我们还可以换个角度，把表连接看成集合运算。内连接相当于
求集合的积（INTERSECT，也称交集），全外连接相当于求集合的和（UNION，
也称并集）。下面是两者的维恩图（Venn Diagram，亦称文氏图）。
■内连接相当于求集合的积[INTERSECT
伊集院
田中铃木
西园寺
■全外连接相当于求集合的和（UNION】
伊集院
田中铃木
西园寺
语句也是）。接下来，我们将利用外连接的这些特性，实际练习一下集合
运算。
用外连接进行集合运算
SQL是以集合论为基础的，但令人费解的是，很长一段时间内它连基
注0
础的集合运算都不支持·。UNION是SQL-86标准开始加入的，还算比较早。
关于SIL中集合运算特的各种注
盘点，详见1-7节。
INTERSECT和EXCEPT 都是SQL-92 标准才加入的。关系除法运算还没有
被标准化，这个前面也提到过。而且，各个DBMS提供商在功能的实现
---
## Page 101
88
第1章神奇的 SQL
程度上也有所不同，参差不齐。集合运算符会进行排序，所以可能会带来
性能上的间题。因此，了解一下集合运算符的替代方案还是有意义的。
前面介绍了交集和并集，下面来介绍一下差集的求法。注意一下前面
有关全外连接的例题会发现，伊集院在A班里存在而在B班里不存在，
“B_name”列的值是NULL;相反，西园寺在B班里存在而在A班里不存在，
"A_name”列的值是NULL。于是，我们可以通过判断连接后的相关字段
是否为NULL来求得差集。
用外连接求差集：A-B
SSLBCT A.id As id,A.name AS A_oane
PROM Cla8s_AA LEPT OUTER JOIN Class_B B
MHERE B.nane IS NULLJ
ON A.id = B.id
■执行结果
1d
A_nane
伊集院
■用外连接求差集[A-B】
伊集院
田中铃木
西园寺
用外连接求差集：B-A
SSL&CT B.id AS id, B.name AS B_name
FROM Class_A ARIGHT OUTER JOIN Class_B B
ON A.id = B.id
MHERE A.name IS NULL)
---
## Page 102
1-5外连接的用法一
68
■执行结果
1d
B_nane
西园寺
■用外连接求差集（B-A）
伊集院
田中铃木
西园寺
当然，用外连接解决这个间题不太符合外连接原本的设计目的。但是
对于不支持差集运算的数据库来说，这也可以作为NOTIN和NOT
EXISTS之外的另一种解法，而且它可能是差集运算中效率最高的，这也
是它的优点。
用全外连接求异或集
接下来我们考虑一下如何求两个集合的异或集。SQL没有定义求异
或集的运算符，如果用集合运算符，可以有两种方法。一种是{AUNION B)
EXCEPT (A INTERSBCT B) , 另—种是 (A EXCEPT B) UNION (B EXCEPT A)。
两种方法都比较麻烦，性能开销也会增大。
现在请再仔细看一下前面有关全外连接的执行结果，是否得到了灵
感呢？
SELECT c0ALESCE(A.id, B.1d) AS 1d,
COALEscE(A.nane , B.nane I AS nane 
FROM Class_A A FULL CUTER JOIN Class_B B
ON A.1d = B.1d
HHERE A.nane IS NULL