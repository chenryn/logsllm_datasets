打开一个终端窗口，并使用 `cd ` 进入下载 Jenkins 的目录。（在继续之前，请确保已安装 JDK 并将其添加到环境路径。）执行以下命令，该命令将 WAR 文件作为可执行二进制文件运行：
```
java -jar ./jenkins.war
```
如果一切顺利，Jenkins 应该在默认端口 8080 上启动并运行。
![Execute as an executable JAR binary](/data/attachment/album/201911/07/001009d95m2m7a5l71a7mt.jpg "Execute as an executable JAR binary")
#### 步骤三：创建一个新的 Jenkins 作业
打开一个 Web 浏览器并导航到 `localhost:8080`。除非你有以前安装的 Jenkins，否则应直接转到 Jenkins 仪表板。点击 “Create New Jobs”。你也可以点击左侧的 “New Item”。
![Create New Job](/data/attachment/album/201911/07/001016soymzmw6ijmlwlky.jpg "Create New Job")
#### 步骤四：创建一个流水线作业
在此步骤中，你可以选择并定义要创建的 Jenkins 作业类型。选择 “Pipeline” 并为其命名（例如，“TestPipeline”）。单击 “OK” 创建流水线作业。
![Create New Pipeline Job](/data/attachment/album/201911/07/001031wg79r7whc8a7trrc.jpg "Create New Pipeline Job")
你将看到一个 Jenkins 作业配置页面。向下滚动以找到 “Pipeline” 部分。有两种执行 Jenkins 流水线的方法。一种方法是在 Jenkins 上直接编写流水线脚本，另一种方法是从 SCM（源代码管理）中检索 Jenkins 文件。在接下来的两个步骤中，我们将体验这两种方式。
#### 步骤五：通过直接脚本配置并执行流水线作业
要使用直接脚本执行流水线，请首先从 GitHub 复制该 [Jenkinsfile 示例](https://github.com/bryantson/CICDPractice)的内容。选择 “Pipeline script” 作为 “Destination”，然后将该 Jenkinsfile 的内容粘贴到 “Script” 中。花一些时间研究一下 Jenkins 文件的结构。注意，共有三个阶段：Build、Test 和 Deploy，它们是任意的，可以是任何一个。每个阶段中都有一些步骤；在此示例中，它们只是打印一些随机消息。
单击 “Save” 以保留更改，这将自动将你带回到 “Job Overview” 页面。
![Configure to Run as Jenkins Script](/data/attachment/album/201911/07/001036ecn4kagkepd4rrka.jpg "Configure to Run as Jenkins Script")
要开始构建流水线的过程，请单击 “Build Now”。如果一切正常，你将看到第一个流水线（如下面的这个）。
![Click Build Now and See Result](/data/attachment/album/201911/07/001043q82ept8gztjyygt1.jpg "Click Build Now and See Result")
要查看流水线脚本构建的输出，请单击任何阶段，然后单击 “Log”。你会看到这样的消息。
![Visit sample GitHub with Jenkins get clone link](/data/attachment/album/201911/07/001050tc5goho54c7ho77l.jpg "Visit sample GitHub with Jenkins get clone link")
#### 步骤六：通过 SCM 配置并执行流水线作业
现在，换个方式：在此步骤中，你将通过从源代码控制的 GitHub 中复制 Jenkinsfile 来部署相同的 Jenkins 作业。在同一个 [GitHub 存储库](https://github.com/bryantson/CICDPractice)中，通过单击 “Clone or download” 并复制其 URL 来找到其存储库 URL。
![Checkout from GitHub](/data/attachment/album/201911/07/001103i1r17ko1ain74ig5.jpg "Checkout from GitHub")
单击 “Configure” 以修改现有作业。滚动到 “Advanced Project Options” 设置，但这一次，从 “Destination” 下拉列表中选择 “Pipeline script from SCM” 选项。将 GitHub 存储库的 URL 粘贴到 “Repository URL” 中，然后在 “Script Path” 中键入 “Jenkinsfile”。 单击 “Save” 按钮保存。
![Change to Pipeline script from SCM](/data/attachment/album/201911/07/001107uee117e4cebeglcv.jpg "Change to Pipeline script from SCM")
要构建流水线，回到 “Task Overview” 页面后，单击 “Build Now” 以再次执行作业。结果与之前相同，除了多了一个称为 “Declaration: Checkout SCM” 的阶段。
![Build again and verify](/data/attachment/album/201911/07/001113pbowpfs5ik6wjjjt.jpg "Build again and verify")
要查看来自 SCM 构建的流水线的输出，请单击该阶段并查看 “Log” 以检查源代码控制克隆过程的进行情况。
![Verify Checkout Procedure](/data/attachment/album/201911/07/001127igezne9kn444es4e.jpg "Verify Checkout Procedure")
### 除了打印消息，还能做更多
恭喜你！你已经建立了第一个 Jenkins 流水线！
“但是等等”，你说，“这太有限了。除了打印无用的消息外，我什么都做不了。”那没问题。到目前为止，本教程仅简要介绍了 Jenkins 流水线可以做什么，但是你可以通过将其与其他工具集成来扩展其功能。以下是给你的下一个项目的一些思路：
* 建立一个多阶段的 Java 构建流水线，从以下阶段开始：从 Nexus 或 Artifactory 之类的 JAR 存储库中拉取依赖项、编译 Java 代码、运行单元测试、打包为 JAR/WAR 文件，然后部署到云服务器。
* 实现一个高级代码测试仪表板，该仪表板将基于 Selenium 的单元测试、负载测试和自动用户界面测试，报告项目的运行状况。
* 构建多流水线或多用户流水线，以自动化执行 Ansible 剧本的任务，同时允许授权用户响应正在进行的任务。
* 设计完整的端到端 DevOps 流水线，该流水线可提取存储在 SCM 中的基础设施资源文件和配置文件（例如 GitHub），并通过各种运行时程序执行该脚本。
学习本文结尾处的任何教程，以了解这些更高级的案例。
#### 管理 Jenkins
在 Jenkins 主面板，点击 “Manage Jenkins”。
![Manage Jenkins](/data/attachment/album/201911/07/001137wiytv9i9dyoy9mg8.jpg "Manage Jenkins")
#### 全局工具配置
有许多可用工具，包括管理插件、查看系统日志等。单击 “Global Tool Configuration”。
![Global Tools Configuration](/data/attachment/album/201911/07/001154kyeubgymwzgcssqz.jpg "Global Tools Configuration")
#### 增加附加能力
在这里，你可以添加 JDK 路径、Git、Gradle 等。配置工具后，只需将该命令添加到 Jenkinsfile 中或通过 Jenkins 脚本执行即可。
![See Various Options for Plugin](/data/attachment/album/201911/07/001201kkihb070nr7r67qm.jpg "See Various Options for Plugin")
### 后继
本文为你介绍了使用酷炫的开源工具 Jenkins 创建 CI/CD 流水线的方法。要了解你可以使用 Jenkins 完成的许多其他操作，请在 Opensource.com 上查看以下其他文章：
* [Jenkins X 入门](https://opensource.com/article/18/11/getting-started-jenkins-x)
* [使用 Jenkins 安装 OpenStack 云](https://opensource.com/article/18/4/install-OpenStack-cloud-Jenkins)
* [在容器中运行 Jenkins](/article-9741-1.html)
* [Jenkins 流水线入门](https://opensource.com/article/18/4/jenkins-pipelines-with-cucumber)
* [如何与 Jenkins 一起运行 JMeter](https://opensource.com/life/16/7/running-jmeter-jenkins-continuous-delivery-101)
* [将 OpenStack 集成到你的 Jenkins 工作流中](https://opensource.com/business/15/5/interview-maish-saidel-keesing-cisco)
你可能对我为你的开源之旅而写的其他一些文章感兴趣：
* [9 个用于构建容错系统的开源工具](https://opensource.com/article/19/3/tools-fault-tolerant-system)
* [了解软件设计模式](https://opensource.com/article/19/7/understanding-software-design-patterns)
* [使用开源工具构建 DevOps 流水线的初学者指南](/article-11307-1.html)
---
via: 
作者：[Bryant Son](https://opensource.com/users/brson) 选题：[lujun9972](https://github.com/lujun9972) 译者：[wxy](https://github.com/wxy) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出