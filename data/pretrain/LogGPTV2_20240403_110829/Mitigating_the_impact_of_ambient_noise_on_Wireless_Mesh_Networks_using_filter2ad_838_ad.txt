the absence of a MQT. However, given the genericity of our ap-
proach, nothing impairs assigning a M QT = 0 to batmand in our
algorithm, or to any other proactive routing protocol which does
not consider its use. Our technique is applied before the moment of
sending a routing packet every time T. Then, the algorithm proposed
must obtain the value of lqi and lqi−1. The value of lqi can be easily
obtained from the current state of the routing manager module.
However, not all the protocols consider storing the previous state.
Accordingly, the algorithm must store lqi to provide lqi−1 in the
next iteration of T. This cost is negligible in terms of memory
footprint even for the tiny devices considered in the paper.
The next step involves computing lqi+T window through the ex-
pression in Formula 3. In case this value is underneath MQT, the
value of nReplicas indicating the number of replicated packets that
will be sent in T, is progressively increased only if its current value is
lower than Nmax. Otherwise, in case the link has overcome from the
risk of disappearing, the number of replicas is progressively reduced
up to 0, thus restoring the default behaviour of the protocol. The
value of nReplicas is also stored to increase or decrease it in the
following iteration, depending on the state of the link.
In any case, all the replicated packets send the same information,
so, any packet already received will be discarded. Our goal thus is
not sending new packets with further information, but increasing
the probability of broadcasting the same information at least once.
As all the protocols natively implement the mechanism to discard
replicas, no additional strategy has been required to be introduced in
our algorithm in the reception of packets. Given the simplicity of the
operations considered, and the time elapsed between the iterations,
the overhead introduced in the protocol in terms of CPU is also
negligible (less than 1%).
LINK-QUALITY-BASED ADAPTIVE PACKET REPLICATION
Table III
/*obtain the value of the variables needed*/
load lqi, lqi−1, nReplicas
/*deduce future link quality*/
compute lqi+T window
/*determine the number of replicas to send*/
if (lqi+T window ≤ MQT) then
01: Nmax=...
02: /*every time a new routing packet is forged*/
03: for each T
04:
05:
06:
07:
08:
09:
10:
11:
12:
13:
14:
15:
16:
/*save the variables for the next iteration*/
store lqi, nReplicas
send(nReplicas,routingP acket)
else
if (nReplicas 0) then nReplicas − −
/*send the replicas required [0,limit]*/
C. Assessing The Modiﬁed Version of Routing Protocols
Additional experimental campaigns were required to show the
effectiveness of the algorithm proposed. In general, the results
obtained via Figure 6 seem quite promising. Concretely, let us
ﬁrst analyse the Figure 6a, which represents the routing overhead
introduced by the routing protocols implementing the algorithm
proposed. Basically, when applying our technique, all the routing
protocols balance their overhead to adapt their behaviour in a
context-aware way. In terms of routing information sent, this balance
goes from the regular behaviour of the protocol (see Figure 4a) to a
behaviour similar to the experienced when applying the batmand-
like conﬁguration (see Figure 4b). In the ﬁrst case, no additional
routing packet is sent, so the intrusiveness introduced in the net-
work is null. Conversely, when the ambient noise increases and the
routing protocol requires a major effort to maintain their routes,
it is allowed to increment the amount of routing information sent.
Unlike the regular behaviour of the routing protocols considered,
what is constant using our technique is not the rate of routing packets
sent, but the rate of received ones. The goal thus, is maintaining the
routing capability as longer as possible, even with a severe amount
of ambient noise. If comparing the new results with the previous
overhead involving the packets sent, all the protocols reduce the
amount of packets sent up to around 70% packet loss caused by
ambient noise. In this condition of extreme necessity for the links
survival, the routing protocols using our technique are forced even
to increase the overhead introduced with respect to the batmand-
like conﬁguration. Indeed, olsrd, babeld and batmand increment
13%, 15% and 150% in this point. However, the major difference is
that now, the RA increases in these conditions. Beyond this ambient
noise rate, the routing packets received decrease given the practical
bound imposed by Nmax to limit the packet replication indeﬁnitely.
If taking these results in mind when comparing the route avail-
ability obtained when applying our technique, with those provided
previously in Figure 3c and Figure 3d (for the default conﬁguration)
and Figure 3e and Figure 3f (for the batmand-like conﬁguration), the
beneﬁts of our technique can be observed. Concretely, the regular
behaviour of the targeted route S-D is absolutely improved with
respect to the default conﬁguration in all the protocols (see Figure
6b). In the case of the batmand-like conﬁguration (see Figure 6c),
results are very similar for olsrd and babeld (less than 3% of
difference), but taking into account that the overhead introduced has
been widely reduced for the ranges of breaks and workday (more
than 150% in all the cases), where the protocols will operate most of
the time. Additionally, it is worth noting that thanks to this technique
batmand speeds up its converge time, thus incrementing its route
availability with respect to its default conﬁguration from 5% to 10%.
All these improvements are observed in terms of the EPDR in
Figure 6d and Figure 6e, thus enhancing the general behaviour of
the WMN with respect to the regular behaviour of the protocol.
V. CONCLUSIONS
Link-quality based mechanisms enable routing protocols to select
the optimal route between two nodes using a criterion more accurate
than the mere hops number. However, as far as their conﬁguration
must be statically (off-line) tuned, these mechanisms do not provide
enough level of adaptivity to keep communication links alive in the
presence of persistent ambient noise.
This practical experience report has analysed how three state-of-
the-art protocols, OLSR, Babel and B.A.T.M.A.N, manage commu-
nication links and which conﬁguration parameters inﬂuence such
process. By acting on such parameters it has been shown that, under
similar conﬁgurations, differences between considered protocols
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:20:46 UTC from IEEE Xplore.  Restrictions apply. 
Figure 6. Experimental results after applying the link-quality-based packet replication
mainly rely on the overhead they induce in the network rather than
in their protection capabilities. However, this level of overhead may
be seen as unaffordable, when noise does not exist or it is very low.
The strategy proposed to keep links alive in the presence of
ambient noise tries to improve the network converge time resulting
from a high level of ambient noise.
Although results have been obtained from OLSR, Babel and
B.A.T.M.A.N, a number of conclusions can be generalised and
applied to any type of proactive routing protocol incorporating
similar link-quality-based mechanisms. From such ideas, a novel
strategy to ﬁght against ambient noise is proposed as a complement
to the existing solutions. Its novelty is on promoting the dynamic
adaptiveness of the routing protocol to the network environment to
determine the optimum amount of routing information that must be
exchanged among nodes in a given moment.
Given the genericity of this approach, it could result of interest,
not only to WMNs in particular, but also to any type of ad hoc
network (sensor networks, mobile ad hoc networks or vehicular ad
hoc networks) in a wide range of context of use. Reengineering the
proposed link-quality-based replication algorithm as following an
Aspect-orientation has the potential of improving its portability to
other different proactive routing protocols. However, the complexity
of redeploying our algorithm using AOP is something that goes
beyond the scope of this paper.
ACKNOWLEDGEMENTS
Work supported by Spanish MICINN SEMSECAP project (TIN-
2009-13825) and by UPV GIMCS project (PAID-06-10-2388).
REFERENCES
[1] M. Raya, J.-P. Hubaux, and I. Aad, “Domino: a system to detect
greedy behavior in ieee 802.11 hotspots,” in Proceedings of the
2nd international conference on Mobile systems, applications, and
services (MobiSys), 2004, pp. 84–97.
[2] X. Ni, K.-c. Lan, and R. Malaney, “On the performance of expected
transmission count (etx) for wireless mesh networks,” in Proceedings
of
the 3rd International Conference on Performance Evaluation
Methodologies and Tools (ValueTools), 2008, pp. 77:1–77:10.
[3] J. Geibig and D. Bradler, “Self-organized aggregation in irregular
wireless networks,” in Wireless Days, 2010, pp. 1–7.
[4] G. Feng, F. Long, and Y. Zhang, “Hop-by-hop congestion control for
wireless mesh networks with multi-channel mac,” in Proceedings of
the 28th IEEE conference on Global telecommunications (GLOBE-
COM), 2009, pp. 242–246.
[5] N. Tcholtchev and R. Chaparadza, Autonomic Fault-Management and
resilience from the perspective of the network operation personnel,
2010.
[6] T. Clausen and P. Jacquet, “Optimized Link State Routing Proto-
col(OLSR),” RFC 3626, 2003.
[7] J.
Chroboczek,
[Online].
http://www.pps.jussieu.fr/ jch/software/babel/, 2011.
“BABEL,”
Available:
[8] “Open Mesh, Better Approach To Mobile Ad hoc Networking
(B.A.T.M.A.N.),” [Online]. Available: http://www.open-mesh.net/,
2011.
[9] D. Raychaudhuri, I. Seskar, M. Ott, S. Ganu, K. Ramachandran,
H. Kremo, R. Siracusa, H. Liu, and M. Singh, “Overview of the orbit
radio grid testbed for evaluation of next-generation wireless network
protocols,” in IEEE Wireless Communications and Networking, vol. 3,
march 2005, pp. 1664 – 1669.
[10] D. Andr´es, J. Friginal, J.-C. Ruiz, and P. Gil, “An attack injection
approach to evaluate the robustness of ad hoc networks,” in IEEE
Paciﬁc Rim International Symposium on Dependable Computing
(PRDC), 2009, pp. 228–233.
[11] Y. Sun, I. Sheriff, E. M. Belding-Royer, and K. C. Almeroth, “An
experimental study of multimedia trafﬁc performance in mesh net-
works,” in Workshop on Wireless trafﬁc measurements and modeling
(WiTMeMo), 2005, pp. 25–30.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:20:46 UTC from IEEE Xplore.  Restrictions apply. 
	
	
 !∀#∀∃%&
∋(∋∀∀(	
	
 !∀#∀∃%&
∋(∋∀∀(∗∗∗∗	
			
		
(∋
∀ ∃)∋(∋
∀ ∃)∋ !∀#∀∃%&
∋(∋∀∀(	
	
 !∀#∀∃%&
∋(∋∀∀(	
	
 !∀#∀∃%&
∋(∋∀∀(	
%∗∗

+∀%∗∗

+∀Analysis of one route without node crashesAnalysis of one route when an intermediate node crashes∃Ambient noise rate (%)Ambient noise rate (%)
Ambient noise rate (%)Ambient noise rate (%)Ambient noise rate (%)