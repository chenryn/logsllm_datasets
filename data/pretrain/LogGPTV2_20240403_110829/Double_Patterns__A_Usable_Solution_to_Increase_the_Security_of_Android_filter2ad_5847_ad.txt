mance
Control
BL-First
BL-Both
3x3 Patterns
4-Digit PINs
6-Digit PINs
n
209
211
214
4637
851
369
Blocklist Hits
No.
%
–
33.2%
8.9%
70
19
–
–
–
10 Guesses
3 Guesses
No.
%
No.
9
1.9%
4
2
0%
0
0%
0
1
5.3% 556
245
39
3.2%
27
19
8.1%
24
%
4.3%
1.0%
0.5%
13.0% 1089
65
4.6%
6.5%
33
30 Guesses
%
No.
5.3%
11
1.9%
4
0.9%
2
23.6%
7.6%
9.0%
targeting a specific victim. A targeted attacker may have addi-
tional information about the victims tendencies or have previous
observations (e.g., shoulder surfing [5, 14, 21, 27]), and thus, a
generic attacker provides a lower bound for attacker performance.
It also provides direct comparisons to other mobile authentica-
tion [4, 6, 10, 19, 29].
We consider two variations of the generic attacker: a perfect
knowledge and a simulated attacker. A perfect knowledge attacker
is an upper bound on the performance of a generic attacker, and as-
sumes that the attacker knows the exact distribution of frequencies
of authentication being guessed (the perfect knowledge), and thus
always guesses the next most frequent pattern. A simulated attacker,
however, has a set of training data of the authentication, and must
use that information to guess a set of unknown authentication.
Perfect knowledge attacker. The primary results of the perfect
knowledge attacker analysis is presented in Table 5. We present
the guessing statistics for DPatt, as well as comparisons to other
mobile authentication for 3x3 Patterns [4, 18, 26, 28] and 4-/6-digit
PINs [19]. As the data sets are of varied sizes, for a more fair com-
parisons we randomly down-sampled the larger data sets to 209
and report the average (and inset median) of 500 repetitions. We
consider two metrics for a perfect knowledge attacker, as described
by Bonneau et al. [9].
First, for a throttled attacker who has a limited number of guesses,
the β-success-rate, which describes the percentage of the dataset
guessed after β guesses. Reported as λβ in Table 5, one can observe
that traditional 3x3 patterns (and also 4x4) have much worse (higher
guessing percentages) than 4-/6-digit PINs; however, the DPatt
improves the situation greatly. After 10 guesses, (control) DPatt
perform more similarly to PINs, but after 30 guesses, the percentage
of control DPatt guessed greatly increases. Using either blocklisting
technique greatly degrades the attacker performance, where BL-
First treatment produces an even stronger authentication then 4-/6-
Digit PINs.
The H∞ statistic, which relates to a throttled attacker perfor-
mance, describes how diverse (in bits of entropy) the most frequent
authentication is in the data set. For example, this measures how
common is the most common authentication, like “password” or
“1234,” and how much benefit an attacker gains from just guessing
the most common password. While there is a small improvement
for control DPatt as compared to other authentications, the blocklist
treatments greatly decrease the commonality of the most common
authentication. This suggests that minimal interaction in the selec-
tion process can lead to increased security in user choice.
The second metric, α-guess-work, correlates with an unthrottled
attacker that is unconstrained by the number of attempts to guess
an authentication. Here we measure, in bits of entropy, how much
“work” is required to guess an α fraction of the data set. Higher
entropy describes more work for the attacker, and thus stronger
authentication.
These results are indicated by(cid:101)Gα in Table 5. In all cases, we find
that DPatt is more diverse (has a higher entropy) and thus more
secure than traditional patterns. For guessing 20% of the data, the
control treatment DPatt is nearly 0.5 bits higher, and the BL-First
treatment is nearly 1.5 bits higher. The security of DPatt, again, is
more similar to that of 4-/6-digit PINs, and in some cases stronger.
Simulated attacker. Recall that a simulated attacker must guess
a set of unknown authentications based on a set of training data.
One such way to model this situation includes cross-fold validation,
where the data is divided into n folds and the attacker trains on
each of n − 1 folds, guessing the remaining fold (the test set). As
the DPatt data sets are not large enough for sufficient cross-fold
validation, we take a different approach to generate a synthetic
training set from traditional 3x3 patterns.
Comprising of 4,637 patterns, the simulated training set was
constructed based on other published data of 3x3 patterns [4, 18,
26, 28]. We transformed these into Double Patterns by matching
each pattern with every other pattern, allowing for repetition of
DPatts. We removed any invalid DPatts where the two patterns are
the same. As an example: if there were 10 occurrences of ‘L’ shaped
patterns in the data set and 5 occurrences of ‘M’ shaped patterns,
the synthetic training set would have 50 ‘L-M’ DPatts and 50 ‘M-L’
DPatts, but no ‘M-M’ nor ‘L-L’ as these are invalid DPatts.
This method provided us with 21,421,974 DPatts, which we sorted
based on frequency order. The simulated attacker then guessed
DPatts from most frequent to least frequent in the synthetic data
set. More advanced techniques for ordering DPatts in the synthetic
data set could be used, such as ordering completely by a Markov
225ACSAC 2020, December 7–11, 2020, Austin, USA
Timothy J. Forman and Adam J. Aviv
Figure 4: Simulated attacker on double pattern, first
100 guesses.
Figure 5: Simulated attacker on double pattern, first
100 000 guesses.
Figure 6: Simulated attacker on first pattern of dou-
ble pattern.
Figure 7: Simulated attacker on second pattern of
double pattern.
model, but we found through experimentation that simply guess-
ing in frequency order was the attacker’s best strategy where ties
are broken by the Markov model. In the blocklist treatments, we
assumed the attacker had knowledge of the blocklist, and thus
avoided guessing disallowed DPatts.
In a world where DPatts are actively used, an attacker would
instead train on known DPatts as used in the wild (or at least
self-reported to be used). We could simulate such a scenario by
performing a cross-validation simulated guesser, whereby we divide
the data into n groups, train on n−1 of them and guess the remaining.
Unfortunately, the size of data is not sufficient to support this
method. For example, with a standard cross-validation of 5 groups
(or folds), the attacker would train ∼150 and only guess ∼50 DPatts,
which is too small to potentially generalize. We instead opt for a
simulated DPatt set. Future research on this topic, where additional
DPatts were collected, could use this data as training to evaluate
the security of newly collected DPatts.
We used similar guessing techniques when comparing DPatt to
4-/6-digit PINs. We followed the same strategy outlined by Market
et al. [19] where they used the Amitay 4-digit data set [1] and the
RockYou 6-digit data set [13] to guess their sample of PINs. When
comparing DPatt to 3x3 patterns, we used a cross-fold validation as
there are no available secondary data sets to use of sufficient size,
and followed the guessing methods outlined by Aviv et al. [4].
The main guessing results are presented in Figures 4 and 5 and
Table 6. Observe that DPatts, across all treatments, are more chal-
lenging for a simulated attacker to guess than other deployed au-
thentication choices. At 30 guesses the attacker can only guess 5.3%
of the control treatment DPatts, compared to 23.6% of traditional
3x3 patterns, 7.6% of the 4-digit PINs, and 9.0% of the 6-digit PINs.
The disparity in strength between DPatt and other methods only
increases with the implementation of blocklisting, where 1.9% of the
BL-First patterns and 0.9% of the BL-Both patterns are discovered
at 30 guesses. This suggests that significant security improvements
could be gained from using DPatt even without a blocklist, but a
blocklist would further enhance the security.
We also analyzed the individual patterns of a DPatt. In Figures 6
and 7, we perform simulated guessing of the first and second pat-
tern (respectively) by guessing based on frequency order of the
3x3 data set. As before, we assume the attacker has knowledge
of the blocklist. In the control treatment, the second component
pattern is more difficult to guess than the first component (48.3%
vs. 22.9% after 30 guesses), which suggest that participants choose
more diverse second patterns to assist in visualizing a complete
DPatt. Interestingly, the second component pattern of the control
treatment is roughly as difficult to guess as traditional 3x3 patterns
(23.6% after 30 guesses). These results suggest that, without inter-
ventions, while participants select individual patterns of a DPatt
that are no stronger (and often weaker) than selecting a single
 0 0.05 0.1 0.15 0.2 0 10 20 30 40 50 60 70 80 90 10010 guesses30 guesses6-Digit PINs4-Digit PINs3x3 PatternsBL-frst/-both DPattControl DPattFraction GuessedNumber of GuessesControl DPattBL-frst DPattBL-both DPatt3x3 Patterns4-Digit PINs6-Digit PINs 0 0.2 0.4 0.6 0.8 1 0 10000 20000 30000 40000 50000 60000 70000 80000 90000 100000Fraction GuessedNumber of GuessesControl DPattBL-frst DPattBL-both DPatt3x3 Patterns4-Digit PINs6-Digit PINs 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0 10 20 30 40 50 60 70 80 90 10010 guesses30 guesses4-/6-Digit PINsBL-frst DPatt3x3 PatternsBL-both DPattControl DPattFraction GuessedNumber of GuessesControl DPattBL-frst DPattBL-both DPatt3x3 Patterns4-Digit PINs6-Digit PINs 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0 10 20 30 40 50 60 70 80 90 10010 guesses30 guessesFraction GuessedNumber of GuessesControl DPattBL-frst DPattBL-both DPatt3x3 Patterns4-Digit PINs6-Digit PINs226Double Patterns: A Usable Solution to Increase the Security of Android Unlock Patterns
ACSAC 2020, December 7–11, 2020, Austin, USA
pattern, it is the combination of the two patterns in a DPatt that
provides the added security.
5.3 Usability
In this section, we discuss the usability of DPatts based on the SUS
scores, entry times, recall rates, response to security perception
questions, and qualitative feedback. To code qualitative responses,
we randomly selected a 25% sub-sample of the responses (50 re-
sponses from each treatment). Two coders independently coded the
responses and met to collaboratively code responses where coding
differed.
Entry/Selection time. Across all treatments, it took participants a
mean time of 27.14s (sd=16.93s) to select a DPatt, taking an average
of 3.70 attempts (sd=2.99) per participant, or 4.93s (sd=2.16s) per
attempt. Recalling their DPatt is similar to an entry event, as in,
participants do not need to complete the complex task of selection.
When recalling their DPatt, participants spent an average of 4.94s
(sd=3.01s) using 1.37 attempts (sd=0.84). Across all treatments the
mean time per attempt was 3.34s (sd=1.34s), and the mean time per
correct attempt was 3.35s (sd=1.31s). For comparison, related work
has shown that Android patterns take on average 3.0s to enter and
PIN’s take 4.7s [16], so DPatt adds only minimal time overhead to
pattern entry. For a more detailed breakdown of selection and entry
times, refer to Table 7.
Perceptions of usability. We use the System Usability Scale to
measure participants perception of usability. Reported in Table 8,
across all treatments, an SUS score of 73.21 was reported, which
is acceptable usability in the 60th percentile. However, when you
break down the results based on current (or prior) Android pattern
users, there is a much higher perception of usability. These partici-
pants provided an average SUS score of 78.27 which is in the 80th
percentile for SUS. While there were dips in SUS due to blocklist-
ing, across all treatments Android pattern users rated DPatt more
favorably.
Perceptions of security. We asked participants to subjectively
evaluate the security of DPatts in relation to existing method of
authentication, using Likert agreement scale responses. We asked
about the security of DPatt itself, and in comparison to original
Android patterns, 4-digit PINs, 6-digit PINs, and alpha-numeric
passwords. We also observed difference in responses of pattern
users and non-patterns users (U = 31740.5, p 50%) for non-utilization
within the sub-sample was the notion that the participant’s DPatt
had been collected in the survey, so they would want to choose a
new DPatt. We believe that this suggests DPatts found in the wild
would likely be similar to those collected here, or at least more
complex than those found in our survey results.