CodeQLOpenJDK
CodeQL
CodeQL Extractor 
 Extractor 
 src.zip 
CodeQL
LGTMCodeQLQL
LGTMGitHubWorkflow
LGTMOpenJDKDatabase
openjdk/jdk8utag
ubuntu 16.04
Boot_JDKjdk 1.7.0_80
Target_OpenJDK:OpenJDK 8u73
Boot_JDK
 tar.gz Boot_JDK jdk-7u80-linux-x64.tar.gz
Toolchain
# 
mkdir /usr/lib/jvm
tar -zxvf jdk-7u80-linux-x64.gz -C /usr/lib/jvm
# 
vim ~/.bashrc
export JAVA_HOME=/usr/lib/jvm/jdk1.7.0_80
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  
export PATH=${JAVA_HOME}/bin:$PATH
# 
source /.bashrc
# JDK
update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.7.0_80/bin/java 300 
update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.7.0_80/bin/javac 
300  
update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk1.7.0_80/bin/jar 300   
update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/jdk1.7.0_80/bin/javah 
300   
update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/jdk1.7.0_80/bin/javap 
300 
update-alternatives --config java
# 
java -version
apt-get update
apt-get upgrade
apt-get install -y build-essential gdb cmake cpio file unzip zip wget ccache
cmake3.81
OpenJDK
&
CodeQL
apt-get install -y --no-install-recommends  libfontconfig1-dev libfreetype6-dev  
libcups2-dev libx11-dev  libxext-dev  libxrender-dev  libxrandr-dev  libxtst-dev  
libxt-dev libasound2-dev  libffi-dev  autoconf 
cd ~/OpenJDK8u73
wget http://ftp.gnu.org/gnu/make/make-3.81.tar.gz 
  && tar -zxvf make-3.81.tar.gz 
  && cd make-3.81 
  && bash configure -prefix=/usr 
  && make 
  && make install
# cmake
cmake -v
chmod 777 configure
./configure --with-target-bits=64 --with-boot-jdk=/usr/lib/jvm/jdk1.7.0_80 --with-
debug-level=slowdebug --enable-debug-symbols ZIP_DEBUGINFO_FILES=0
make all DISABLE_HOTSPOT_OS_VERSION_CHECK=OK ZIP_DEBUGINFO_FILES=0
cd build/linux-x86_64-normal-server-slowdebug/jdk/bin 
OpenJDKbuildCodeQL
CodeQL
DatabaseVSCode
codeql database create Openjdk8u73_db --language="java" --command="make all 
DISABLE_HOTSPOT_OS_VERSION_CHECK=OK ZIP_DEBUGINFO_FILES=0"
1. MacOSXcodeclangToolchainLinux
2. LinuxCodeQL CLICodeQL Lib,
3. make
4. Boot_JDKTarget_JDKJDK
5. JarCodeQL
openjdk
OpenJDK8CodeQL
openjdk/jdk8u
Build OpenJDK
fnmsd/OpenJDK8-BuildEnv-Docker