## 用PostgreSQL 递归SQL与plpgsql函数 绘制分形图 - 曼德勃罗集(Mandelbrot-上帝的指纹) 和 Julia 集 - `z->z^2+c`    
### 作者    
digoal    
### 日期    
2022-08-18    
### 标签    
PostgreSQL , 分形 , 曼德勃罗集 , plpgsql , 递归 , Julia , Mandelbrot    
----    
## 背景    
https://www.zhihu.com/question/265983000    
分形的公式非常简单, 但是却能变幻出无穷无尽的自相似状态, 所以也被誉为神性法则. (非常符合一生二二生三三生万物的特性, 无穷无尽.  )  
- 此外, 分形还能够创造维度, 例如一维的线段, 通过分形能铺满整个面, 变成二维的平面.  这个法则也适用于生物领域, 例如以氨基酸为基本单位分形而构成的生物高分子(蛋白质). 所以请想象一下, 通过分形我们也许能找到进入更高维度生命的通道?   建议阅读《规模》?    
1、分形公式如下:    
```    
z=z^2+c    
z可以是单数、也可以是复数、甚至可以是多维数.    
```    
2、复数运算:    
```    
(a+bi)(c+di) = (ac-bd)+(ad+bc)i    
(a+bi) + (c+di) = (a+c)+(b+d)i    
(a+bi) - (c+di) = (a-c)+(b-d)i    
```    
3、如何生成分形图案?  
当z0固定时, 取不同的c值, z的发散速度是不一样的, 例如某个c值, 100次之后z就趋于无穷大, 某个c, 不管迭代多少次, z都在某个范围内跳动.    
那么以一块白布为底图, 把c的坐标映射到这个二维白布中, 用颜色来标记该c值引起的z值发散速度, 越黑表示z值越不会被发散. c在复平面上的像素就组成了一副分形图案.    
来个简单的, 了解一下c和z0固定时, 如何产生z的迭代值, 观察z的发散速度:    
```    
WITH RECURSIVE t(n, zr, zi, cr, ci) AS (    
    VALUES (1, 0.15::float8, 0.15::float8, -0.75::float8, 0.0::float8)    
  UNION ALL    
    SELECT n+1, zr*zr - zi*zi + cr, zr*zi + zi*zr + ci, cr, ci FROM t WHERE n >    
  for x in -300..300 loop  -- cr, 表示白布的x轴像素点范围是-300到300    
  >    
  for y in -200..200 loop  -- ci, 表示白布的y轴像素点范围是-200到200    
  >    
  for k in 1..200 loop  -- z的发散速度, i 表示颜色深度; 最多迭代200次, 200次就是黑色, 1次可能就接近白色.    
    tmpr := zr*zr - zi*zi + x::numeric/300.0::numeric;    
    tmpi := zr*zi + zi*zr + y::numeric/200.0::numeric;    
    zr := tmpr;    
    zi := tmpi;    
    i := k;    
    exit label_i when sqrt(zr*zr + zi*zi) > 2;    -- z的迭代次数截止于|z|>2, 因为此时z会无限发散.    
  end loop label_i ;    
  raise notice 'cr:%, ci:%, i:%', x, y, i;    
  zr := 0.0;  -- z0r    
  zi := 0.0;  -- z0i    
  end loop label_y ;    
  end loop label_x ;    
end;    
$$;    
```    
cr为x坐标, ci为y坐标, i为颜色深度:    
```    
NOTICE:  cr:-300, ci:-200, i:3    
NOTICE:  cr:-300, ci:-199, i:3    
NOTICE:  cr:-300, ci:-198, i:3    
NOTICE:  cr:-300, ci:-197, i:3    
NOTICE:  cr:-300, ci:-196, i:3    
NOTICE:  cr:-300, ci:-195, i:3    
NOTICE:  cr:-300, ci:-194, i:3    
NOTICE:  cr:-300, ci:-193, i:3    
NOTICE:  cr:-300, ci:-192, i:3    
NOTICE:  cr:-300, ci:-191, i:3    
NOTICE:  cr:-300, ci:-190, i:3    
NOTICE:  cr:-300, ci:-189, i:3    
NOTICE:  cr:-300, ci:-188, i:3    
NOTICE:  cr:-300, ci:-187, i:3    
NOTICE:  cr:-300, ci:-186, i:3    
NOTICE:  cr:-300, ci:-185, i:3    
NOTICE:  cr:-300, ci:-184, i:3    
NOTICE:  cr:-300, ci:-183, i:3    
NOTICE:  cr:-300, ci:-182, i:3    
NOTICE:  cr:-300, ci:-181, i:3    
NOTICE:  cr:-300, ci:-180, i:3    
NOTICE:  cr:-300, ci:-179, i:3    
NOTICE:  cr:-300, ci:-178, i:3    
NOTICE:  cr:-300, ci:-177, i:3    
NOTICE:  cr:-300, ci:-176, i:3    
NOTICE:  cr:-300, ci:-175, i:3    
NOTICE:  cr:-300, ci:-174, i:3    