        *major* 和​​​ *minor* 是​​​由​​​*《​​​Linux
        分​​​配​​​设​​​备​​​》​​​*指​​​定​​​的​​​设​​​备​​​节​​​点​​​数​​​。​​​主​​​设​​​备​​​号​​​和​​​副​​​设​​​备​​​号​​​使​​​用​​​冒​​​号​​​分​​​开​​​。​​​例​​​如​​​：`8`{.literal}
        是​​​主​​​设​​​备​​​号​​​，指​​​定​​​ SCSI 磁​​​盘​​​驱​​​动​​​器​​​；副​​​设​​​备​​​号​​​ `1`{.literal}
        指​​​定​​​第​​​一​​​个​​​ SCSI 磁​​​盘​​​驱​​​动​​​器​​​中​​​的​​​第​​​一​​​个​​​分​​​区​​​；因​​​此​​​`8:1`{.literal}
        完​​​整​​​指​​​定​​​这​​​个​​​分​​​区​​​，对​​​应​​​位​​​于​​​ `/dev/sda1`{.filename}
        的​​​一​​​个​​​文​​​件​​​系​​​统​​​。​​​
        :::
        ::: para
        `*`{.literal}
        可​​​代​​​表​​​所​​​有​​​主​​​要​​​和​​​次​​​要​​​设​​​备​​​节​​​点​​​，例​​​如​​​：`9:*`{.literal}（所​​​有​​​ RAID
        设​​​备​​​）或​​​者​​​ `*:*`{.literal}（所​​​有​​​设​​​备​​​）。​​​
        :::
    [access]{.term}
    :   ::: para
        *access* 是​​​以​​​下​​​一​​​个​​​或​​​者​​​多​​​个​​​字​​​母​​​序​​​列​​​：
        :::
        ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
        -   ::: para
            `r`{.literal} - 允​​​许​​​任​​​务​​​从​​​指​​​定​​​设​​​备​​​中​​​读​​​取​​​
            :::
        -   ::: para
            `w`{.literal} - 允​​​许​​​任​​​务​​​写​​​入​​​指​​​定​​​设​​​备​​​
            :::
        -   ::: para
            `m`{.literal} - 允​​​许​​​任​​​务​​​生​​​成​​​还​​​不​​​存​​​在​​​的​​​设​​​备​​​文​​​件​​​
            :::
        :::
        ::: para
        例​​​如​​​：当​​​将​​​ *access* 指​​​定​​​为​​​ `r`{.literal}
        时​​​，则​​​只​​​能​​​从​​​指​​​定​​​设​​​备​​​中​​​读​​​取​​​任​​​务​​​，但​​​当​​​将​​​ *access* 指​​​定​​​为​​​
        `rw`{.literal}
        时​​​，则​​​既​​​可​​​从​​​该​​​设​​​备​​​中​​​读​​​取​​​任​​​务​​​，也​​​可​​​向​​​该​​​设​​​备​​​中​​​写​​​入​​​任​​​务​​​。​​​
        :::
    :::
[devices.deny]{.term}
:   ::: para
    指​​​定​​​ cgroup 中​​​任​​​务​​​不​​​能​​​访​​​问​​​的​​​设​​​备​​​。​​​条​​​目​​​语​​​法​​​与​​​
    `devices.allow`{.filename} 一​​​致​​​。​​​
    :::
[devices.list]{.term}
:   ::: para
    报​​​告​​​为​​​这​​​个​​​ cgroup 中​​​的​​​任​​​务​​​设​​​定​​​访​​​问​​​控​​​制​​​的​​​设​​​备​​​。​​​
    :::
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#sec-freezer}3.6. freezer {.title}
:::
::: para
`freezer`{.systemitem} 子​​​系​​​统​​​挂​​​起​​​或​​​者​​​恢​​​复​​​ cgroup 中​​​的​​​任​​​务​​​。​​​
:::
::: variablelist
[freezer.state]{.term}
:   ::: para
    `freezer.state`{.systemitem} 有​​​三​​​个​​​可​​​能​​​的​​​值​​​：
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `FROZEN`{.literal} \-- 挂​​​起​​​该​​​ cgroup 中​​​的​​​任​​​务​​​。​​​
        :::
    -   ::: para
        `FREEZING`{.literal} \-- 该​​​系​​​统​​​正​​​在​​​挂​​​起​​​该​​​ cgroup 中​​​的​​​任​​​务​​​。​​​
        :::
    -   ::: para
        `THAWED`{.literal} \-- 已​​​经​​​恢​​​复​​​该​​​ cgroup 中​​​的​​​任​​​务​​​。​​​
        :::
    :::
:::
::: para
要​​​挂​​​起​​​具​​​体​​​进​​​程​​​：
:::
::: {.procedure xmlns:d="http://docbook.org/ns/docbook"}
1.  ::: para
    将​​​那​​​个​​​进​​​程​​​移​​​动​​​到​​​附​​​加​​​了​​​ `freezer`{.systemitem} 子​​​系​​​统​​​的​​​层​​​级​​​的​​​ cgroup
    中​​​。​​​
    :::
2.  ::: para
    停​​​滞​​​那​​​个​​​具​​​体​​​ cgroup 以​​​便​​​挂​​​起​​​其​​​中​​​包​​​含​​​的​​​这​​​个​​​进​​​程​​​。​​​
    :::
:::
::: para
不​​​可​​​能​​​将​​​进​​​程​​​移​​​动​​​到​​​挂​​​起​​​（frozen）的​​​ cgroup 中​​​。​​​
:::
::: para
请​​​注​​​意​​​可​​​将​​​ `FROZEN`{.literal} 和​​​ `THAWED`{.literal} 值​​​写​​​入​​​
`freezer.state`{.filename}，但​​​无​​​法​​​写​​​入​​​
`FREEZING`{.literal}，只​​​能​​​读​​​取​​​它​​​。​​​
:::
:::
::: section
::: titlepage
# [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#sec-memory}3.7. memory {.title}
:::
::: para
`memory`{.systemitem} 子​​​系​​​统​​​自​​​动​​​生​​​成​​​ cgroup
中​​​任​​​务​​​使​​​用​​​的​​​内​​​存​​​资​​​源​​​报​​​告​​​，并​​​设​​​定​​​由​​​那​​​些​​​任​​​务​​​使​​​用​​​的​​​内​​​存​​​限​​​制​​​：
:::
::: variablelist
[memory.stat]{.term}
:   ::: para
    报​​​告​​​大​​​范​​​围​​​内​​​存​​​统​​​计​​​，如​​​下​​​表​​​所​​​述​​​：
    :::
    ::: table
    [⁠]{#ch-Subsystems_and_Tunable_Parameters.html#memorystat}
    **表 3.1. memory.stat 报​​​告​​​的​​​值​​​**
    ::: table-contents
      -----------------------------------------------------------------------------------------------------------
      统​​​计​​​                                       描​​​述​​​
      ------------------------------------------ ----------------------------------------------------------------
      `cache`{.systemitem}                       页​​​缓​​​存​​​，包​​​括​​​
                                                 `tmpfs`{.systemitem}（`shmem`{.systemitem}），单​​​位​​​为​​​字​​​节​​​
      `rss`{.systemitem}                         匿​​​名​​​和​​​ swap 缓​​​存​​​，[*不​​​*]{.emphasis}包​​​括​​​
                                                 `tmpfs`{.systemitem}（`shmem`{.systemitem}），单​​​位​​​为​​​字​​​节​​​
      `mapped_file`{.systemitem}                 memory-mapped 映​​​射​​​的​​​文​​​件​​​大​​​小​​​，包​​​括​​​
                                                 `tmpfs`{.systemitem}（`shmem`{.systemitem}），单​​​位​​​为​​​字​​​节​​​
      `pgpgin`{.systemitem}                      存​​​入​​​内​​​存​​​中​​​的​​​页​​​数​​​
      `pgpgout`{.systemitem}                     从​​​内​​​存​​​中​​​读​​​出​​​的​​​页​​​数​​​
      `swap`{.systemitem}                        swap 用​​​量​​​，单​​​位​​​为​​​字​​​节​​​
      `active_anon`{.systemitem}                 在​​​活​​​跃​​​的​​​最​​​近​​​最​​​少​​​使​​​用​​​（least-recently-used，LRU）列​​​表​​​中​​​的​​​匿​​​名​​​和​​​
                                                 swap 缓​​​存​​​，包​​​括​​​
                                                 `tmpfs`{.systemitem}（`shmem`{.systemitem}），单​​​位​​​为​​​字​​​节​​​
      `inactive_anon`{.systemitem}               不​​​活​​​跃​​​的​​​ LRU 列​​​表​​​中​​​的​​​匿​​​名​​​和​​​ swap 缓​​​存​​​，包​​​括​​​
                                                 `tmpfs`{.systemitem}（`shmem`{.systemitem}），单​​​位​​​为​​​字​​​节​​​
      `active_file`{.systemitem}                 活​​​跃​​​ LRU 列​​​表​​​中​​​的​​​ file-backed 内​​​存​​​，以​​​字​​​节​​​为​​​单​​​位​​​
      `inactive_file`{.systemitem}               不​​​活​​​跃​​​ LRU 列​​​表​​​中​​​的​​​ file-backed 内​​​存​​​，以​​​字​​​节​​​为​​​单​​​位​​​
      `unevictable`{.systemitem}                 无​​​法​​​再​​​生​​​的​​​内​​​存​​​，以​​​字​​​节​​​为​​​单​​​位​​​
      `hierarchical_memory_limit`{.systemitem}   包​​​含​​​ `memory`{.systemitem} cgroup 的​​​层​​​级​​​的​​​内​​​存​​​限​​​制​​​，单​​​位​​​为​​​字​​​节​​​
      `hierarchical_memsw_limit`{.systemitem}    包​​​含​​​ `memory`{.systemitem} cgroup 的​​​层​​​级​​​的​​​内​​​存​​​加​​​ swap
                                                 限​​​制​​​，单​​​位​​​为​​​字​​​节​​​
      -----------------------------------------------------------------------------------------------------------
    :::
    :::
    ::: para
    另​​​外​​​，这​​​些​​​文​​​件​​​除​​​ `hierarchical_memory_limit`{.systemitem} 和​​​
    `hierarchical_memsw_limit`{.systemitem} 之​​​外​​​，都​​​有​​​一​​​个​​​对​​​应​​​前​​​缀​​​
    `total`{.systemitem}，它​​​不​​​仅​​​可​​​在​​​该​​​ cgroup 中​​​报​​​告​​​，还​​​可​​​在​​​其​​​下​​​级​​​
    cgroup 中​​​报​​​告​​​。​​​例​​​如​​​：`swap`{.systemitem} 报​​​告​​​ cgroup 的​​​ swap
    用​​​量​​​，`total_swap`{.systemitem} 报​​​告​​​该​​​ cgroup 及​​​其​​​所​​​有​​​子​​​组​​​群​​​的​​​ swap
    用​​​量​​​总​​​和​​​。​​​
    :::
    ::: para
    当​​​您​​​解​​​读​​​ `memory.stat`{.systemitem}
    报​​​告​​​的​​​数​​​值​​​时​​​，请​​​注​​​意​​​各​​​个​​​统​​​计​​​数​​​据​​​之​​​间​​​的​​​关​​​系​​​：
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `active_anon`{.systemitem} + `inactive_anon`{.systemitem} =
        匿​​​名​​​内​​​存​​​ + `tmpfs`{.systemitem} 的​​​文​​​件​​​缓​​​存​​​ + swap 缓​​​存​​​
        :::
        ::: para
        因​​​此​​​，`active_anon`{.systemitem} + `inactive_anon`{.systemitem}
        ≠​​​ `rss`{.systemitem}，因​​​为​​​ `rss`{.systemitem} 不​​​包​​​括​​​
        `tmpfs`{.systemitem}。​​​
        :::
    -   ::: para
        `active_file`{.systemitem} + `inactive_file`{.systemitem} =