HashGen
V
C
c
Selected secure hash function
Hash generating function for Hash_DRBG [26]
Updated value during each call to the DRBG
Constant value that depends on the seed
Counter indicates the number of requests for pseudorandom bits
Algorithm 1 Identity block generation process
Input: Initial values for V , C, c
Output: Next candidates block for temporary identity
1: returned_bits ← HashGen(V )
2: H = Hash(0x03 || V )
3: V = V + H + C + c
4: c = c + 1
5: realloc_identity_block = returned_bits
6: return realloc_identity_block
used for temporary ID reallocation. Hash_DRBG is a CPRNG
standardized as NIST SP 800-90A [26]. A deterministic random
bit generator (DRBG) generates a sequence of bits from a secret
initial value called a seed. If the seed is not known and it has
sufficient entropy, the cryptographic DRBG has a property that
the output is unpredictable [10]. Kan et al. showed that the
Hash_DRBG is secure if an appropriate hash function is used
for the algorithm (e.g., SHA 256 could be used.) [16]. The
Algorithm 1 briefly shows the identity generation process using
Hash_DRBG [26] (see Table IV for notations). If the block
size is 256-bit, it can generate 8 outputs of 30-bit length with
only one operation.
The M-TMSI part of the GUTI has a total length of
32 bits; however, the two most significant bits are fixed for
mapping with legacy networks [2]. Therefore, we need to
obtain 30 bits from Hash_DRBG. By using CPRNG, we
can generate a random GUTI. However, we have to avoid
collision following R3. As the M-TMSI is only 32 bits long,
to check the preemption of a randomly generated temporal
ID value, we can simply use a bitmap structure. Considering
the number of available M-TMSI, MME needs 230 bins to
check the usage of the M-TMSI value. When using a bitmap
structure that can denote 8 bins with 1 byte, 128 MB memory
is required. In addition, the occupancy can be checked by
performing simple bitwise operations. Because Hash_DRBG
could be based on SHA-256, the computational overhead is
negligible [12]. Nevertheless, the time-memory trade-off to
generate a few M-TMSIs in advance may reduce the online
M-TMSI generation overhead. In the case of an MME that
has 40 million subscribers 11 and that generates four M-TMSIs
in advance, the probability of generating a preempted value
is negligible 12. We believe that requirements R1 and R4
are implementation- and operator-specific, and we do not
discuss how to satisfy them in this study. However, these two
requirements are crucial for avoiding location tracking.
11Maximum capacity of commercial MME [27]
12Probability of collision with generated one M-TMSI is ( 4∗107
230 ); therefore,
that when preparing four M-TMSIs in advance would be ( 4∗107
4 ≈ 1.92 ·
230 )
10−6
C. Temporary Identifier Allocation in 3GPP
We discuss the requirement and the solution (Solutions
#7.23 and #7.24) contained in the report from 3GPP [1]. As
the reports study the current security issues in LTE, the security
problems examined in this study as well as the requirements
and solutions are written in an ad-hoc manner. We extract key
requirements and solution ideas here. 3GPP also recognizes
R1, R2, R3, and R5 as requirements. However, the solution
examples provided in the reports are quite different from ours.
Unlike our solution, solutions #7.23 and #7.24 both bind
KASM E, the key shared between the MME and the subscriber,
to generate the GUTI. The authors use KASM E to generate
temporary identifier that because KASM E is a secret value
known only to the MME and the subscriber. However, the au-
thors did not discuss other reasons for this binding. In addition,
as we discussed previously, to generate an unpredictable GUTI,
a random seed long enough to be secure against exhaustive
search is sufficient, and such binding is unnecessary, as CPRNG
is secure.
For collision avoidance, solutions #7.23 and #7.24 suggest
different mechanisms. The former suggests using the MAC
(Message Authentication Code) to verify the identity. The latter
suggests to increasing the length of M-TMSI to 64 or 80 bits
to avoid the Birthday paradox. We believe that both are too
expensive and unnecessary by sacrificing 128 MB of memory
for checking duplicates.
These solutions are difficult
to apply to current LTE
networks because they require major changes in UE and
MME; by contrast, our solution only needs a small update
to MME. With regard to Solution #7.23, supporting the MAC
for each paging message results in additional implementation
in both the UE and the MME. Extending the length of the
temporary identifier (Solution #7.24) requires the subscriber
to replace the SIM card in use. In addition, #7.24, which
suggests synchronized temporary identifier, should sufficiently
cover side-effects such as synchronization problems [19] due
to unexpected identity updates. Therefore, it can be a candidate
solution for the next generation but is not suitable for current
networks.
VIII. CONCLUSION
Mobile network operators and standards have invested
a considerable amount of effort into identity management
logic in cellular networks to ensure the confidentiality of
their subscribers’ identities. Unfortunately, subscribers are not
safe from privacy leakage owing to incomplete specifications
in the relevant standards and incorrect operation of identity
management schemes by carriers. In this study, we examined the
identity management systems of 28 carriers over 11 countries
and showed that currently deployed systems fail to protect
subscribers’ temporary identity.
We identified three vulnerable implementations that allow an
adversary to easily obtain the victims’ location: rarely changed
temporary identity, easily predictable identity allocation logic,
and lack of resilience to exceeding allocation requests. We
implemented three smart attacks to efficiently locate the victim
and showed that they worked, even under the assumption that
the previous solution is adopted as well. To prevent the threat
14
of leaking the victim’s location, we described the requirements
of an identity management logic and presented a solution that
involves allocating an unpredictable temporary identity and
updating it frequently. Our solution can be deployed with
a small overhead, and we believe that carriers can support
the confidentiality of their subscribers securely by using our
solution.
ACKNOWLEDGMENT
We would like to thank the anonymous reviewers and
our shepherd, Brad Reaves, for their insightful comments and
suggestions to improve the paper. This research was supported
by the MSIP (Ministry of Science, ICT and Future Planning),
Korea, under the ITRC (Information Technology Research
Center) support program (IITP-2017-2015-0-00403) supervised
by the IITP (Institute for Information & communications
Technology Promotion) and supported by Samsung Research,
Samsung Electronics. We would like to thank Shinjo Park,
Hyunwook Hong, Dongkwan Kim, Hongil Kim, Eunkyu Lee,
Kibum Choi and Youngseok Park on a collection of data.
REFERENCES
[1]
3GPP. TR 33.899, “Study on the security aspects of the next generation
system,” 2017.
3GPP. TS 23.003, “Numbering, addressing and identification,” 2017.
[2]
[3] 3GPP. TS 24.008, “Mobile radio interface Layer 3 specification; Core
network protocols; Stage 3,” 2017.
[4] 3GPP. TS 24.301, “Non-Access-Stratum (NAS) protocol for Evolved
Packet System (EPS); Stage 3,” 2017.
3GPP. TS 33.102, “3G security; Security architecture,” 2017.
[5]
[6] 3GPP. TS 33.402, “System Architecture Evolution (SAE); Security
aspects of non-3GPP accesses,” 2017.
[7] 3GPP. TS 36.331, “Evolved Universal Terrestrial Radio Access (E-
UTRA); Radio Resource Control (RRC); Protocol specification,” 2017.
[8] M. Arapinis, L. Mancini, E. Ritter, M. Ryan, N. Golde, K. Redon,
and R. Borgaonkar, “New privacy issues in mobile telephony: fix
and verification,” in Proceedings of the ACM SIGSAC Conference on
Computer and Communications Security (CCS), 2012.
[9] M. Arapinis, L. I. Mancini, E. Ritter, and M. Ryan, “Privacy through
pseudonymity in mobile telephony systems.” in Proceedings of the
Network and Distributed System Security Symposium (NDSS), 2014.
[10] E. Barker, “NIST Special Publication 800-57 Part 1 Revision 4-
Recommendation for Key Management (Part 1: General),” 2016.
[11] Cisco,
“MME Administration Guide,”
http://www.cisco.com/c/
en/us/support/wireless/asr-5000-series/products-installation-and-
configuration-guides-list.html.
“Crypto++ Benchmarks.” [Online]. Available: https://www.cryptopp.
com/benchmarks.html
[12]
[13] David Nowoswiat,
“Managing LTE Core Network Signaling
Traffic.” [Online]. Available: https://insight.nokia.com/managing-lte-
core-network-signaling-traffic
“Facebook.” [Online]. Available: https://www.facebook.com/
[14]
[15] N. Golde, K. Redon, and J.-P. Seifert, “Let me answer that for you:
Exploiting broadcast information in cellular networks.” in USENIX
Security Symposium, 2013, pp. 33–48.
[16] W. Kan, “Analysis of underlying assumptions in nist drbgs.” IACR
Cryptology ePrint Archive, vol. 2007, p. 345, 2007.
[17] S. M. Karsten Nohl, “Wideband GSM sniffing,” in Chaos Communication
Congress, 2010. [Online]. Available: http://events.ccc.de/congress/2010/
Fahrplan/events/4208.en.html
[18] M. S. A. Khan and C. J. Mitchell, “Improving air interface user privacy in
mobile telephony,” in International Conference on Research in Security
Standardisation. Springer, 2015, pp. 165–184.
[19] ——, “Trashing IMSI Catchers in Mobile Networks,” in Proceedings of
the ACM Conference on Security and Privacy in Wireless and Mobile
Networks (WiSec), 2017.
15
[20] D. F. Kune, J. Koelndorfer, N. Hopper, and Y. Kim, “Location leaks on
the GSM Air Interface,” in Proceedings of the Network and Distributed
System Security Symposium (NDSS), 2012.
[21] P. P. Lee, T. Bu, and T. Woo, “On the detection of signaling dos attacks
on 3g wireless networks,” in INFOCOM 2007. 26th IEEE International
Conference on Computer Communications. IEEE, 2007, pp. 1289–1297.
[22] Y. Li, C. Peng, Z. Yuan, J. Li, H. Deng, and T. Wang, “Mobileinsight:
extracting and analyzing cellular network information on smartphones.”
in Proceedings of the ACM Annual International Conference on Mobile
Computing & Networking (MobiCom), 2016.
[23] Z. Li, W. Wang, C. Wilson, J. Chen, C. Qian, T. Jung, L. Zhang, K. Liu,
X. Li, and Y. Liu, “Fbs-radar: Uncovering fake base stations at scale
in the wild,” in Proceedings of the Network and Distributed System
Security Symposium (NDSS), 2017.
J. Martin, T. Mayberry, C. Donahue, L. Foppe, L. Brown, C. Riggins,
E. C. Rye, and D. Brown, “A study of mac address randomization in
mobile devices and when it fails,” Proceedings on Privacy Enhancing
Technologies, vol. 4, pp. 268–286, 2017.
[24]
[25] Melih Tufan,
[Online].
Available: https://www.ericsson.com/ericsson/investors/doc/2011/ap_
forum/ericsson_apac_forum_150911_packet_networks.pdf
“Packet Networks Portfolio,”
2011.
[26] NIST, SP, “800-90a revision 1,” Recommendation for Random Number
Generation Using Deterministic Random Bit Generators, 2015.
[27] Nokia, “The Alcatel-Lucent 9471 Wireless Mobility Manager,” https:
//resources.ext.nokia.com/asset/156819.
[28] Nokia Network, “Signaling is growing 50% faster than data traffic,”
2012.
[29] SecUpwN,
“Android
IMSI-Catcher Detector,”
2012,
https:
//cellularprivacy.github.io/Android-IMSI-Catcher-Detector/.
[31]
[30] A. Shaik, R. Borgaonkar, N. Asokan, V. Niemi, and J.-P. Seifert,
“Practical Attacks Against Privacy and Availability in 4G/LTE Mobile
Communication Systems,” Proceedings of the Network and Distributed
System Security Symposium (NDSS), 2016.
“Fake Mobile Phone Towers Operating In The UK,” http://news.sky.
com/story/fake-mobile-phone-towers-operating-in-the-uk-10356433.
“The body-worn “IMSI catcher” for all your covert phone snooping
needs,” http://news.sky.com/story/fake-mobile-phone-towers-operating-
in-the-uk-10356433.
J. Soto, “Statistical testing of random number generators,” in Proceedings
of the 22nd National Information Systems Security Conference, vol. 10,
no. 99. NIST Gaithersburg, MD, 1999, p. 12.
[32]
[33]
[34] SRLabs, “CatcherCatcher,” 2013, https://opensource.srlabs.de/projects/
mobile-network-assessment-tools/wiki/CatcherCatcher.
[35] SRLabs, “SnoopSnitch,” 2014. [Online]. Available: https://opensource.
[36]
[37] STOKE,
srlabs.de/projects/snoopsnitch
“srsLTE.” [Online]. Available: https://github.com/srsLTE/srsLTE
2013,
http:
//s1.q4cdn.com/427257256/files/doc_downloads/Stoke_Documents/150-
0032-001_IndInsights_ChartingSignalingStorms_Final.pdf.
“Charting
Signaling
Storms,”
the
[38] P. Traynor, M. Lin, M. Ongtang, V. Rao, T. Jaeger, P. McDaniel, and
T. La Porta, “On cellular botnets: measuring the impact of malicious
devices on a cellular network core,” in Proceedings of the ACM SIGSAC
Conference on Computer and Communications Security (CCS), 2009.
[39] G.-H. Tu, Y. Li, C. Peng, C.-Y. Li, H. Wang, and S. Lu, “Control-plane
protocol interactions in cellular networks,” in Proceedings of the 2014
ACM conference on SIGCOMM. ACM, 2014, pp. 223–234.
[40] G.-H. Tu, C. Peng, H. Wang, C.-Y. Li, and S. Lu, “How voice calls
affect data in operational LTE networks,” in Proceedings of the ACM
Annual International Conference on Mobile Computing & Networking
(MobiCom), 2013.
“USRP B210.” [Online]. Available: https://www.ettus.com/product/
details/UB210-KIT
[41]
[42] F. van den Broek, R. Verdult, and J. de Ruiter, “Defeating IMSI catchers,”
in Proceedings of the ACM SIGSAC Conference on Computer and
Communications Security (CCS), 2015, pp. 340–351.
“WhatsApp,” https://www.whatsapp.com/.
[43]