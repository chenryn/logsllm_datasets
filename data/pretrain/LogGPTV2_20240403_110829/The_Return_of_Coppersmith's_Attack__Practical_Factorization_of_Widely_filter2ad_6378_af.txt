### Services and Key Analysis

We analyzed the cryptographic keys for a range of services, including VAT forms, private company management (all types), and voting (esteid). Approximately 10% of randomly selected citizens' keys were examined. The results indicated a mix of on-card and out-of-card key generation. More than half of the analyzed keys were vulnerable for esteid, and all keys were vulnerable for esteid-digi and esteid-resident. No vulnerable keys were detected for esteid-mobiil. Extrapolating these findings to the entire population suggests that at least hundreds of thousands of keys are vulnerable.

Additionally, we analyzed a limited sample of keys extracted from the physical electronic documents of three other countries. One country, Slovakia, was found to be issuing documents with fingerprinted 2048-bit keys.

These results highlight the general difficulty in analyzing impacted domains. Large-scale analysis was feasible only for the Estonian eID due to the availability of a public directory, which revealed that more than half of the documents were vulnerable. The small samples collected for other countries, such as Slovakia, provide limited insight. It is unclear whether all other documents are vulnerable or if only a limited production series is affected. Alternatively, it is possible that only non-vulnerable series from other countries were inspected.

### Potential Impact

The possibility of factorizing on-card keys could lead to the cloning of legitimate passports or identity cards. The Slovak national ID, which is also deployed in an eGovernment system, uses on-chip generated digital signatures as a replacement for traditional handwritten signatures. If compromised, this could have significant security implications.

### Code Signing

#### GitHub

Digital signing of applications, modules, OS distributions, and code is now common. In some cases, application signing is mandatory and enforced by the platform (e.g., Android, iOS, OS drivers), or voluntarily adopted by developers. GPG signatures can authenticate commits or tags submitted by developers to source control systems like GitHub.

To access Git repositories hosted on GitHub, developers can use SSH authentication as an alternative to passwords for both read and write permissions. Users can also upload GPG keys for commit signing. We analyzed the profiles of almost 25 million GitHub users and found 4.7 million SSH keys in a scan performed in February 2017.

Hundreds of fingerprinted keys were discovered, including those with access to very popular repositories with up to 2,000 stars (user bookmarks) for user-owned repositories and over 50,000 stars for organization-owned repositories. The impact is magnified because some relevant repositories are libraries used in other projects and are trusted by third-party developers.

In total, we found 447 fingerprinted keys. More than half (237) had practically factorizable key lengths of 2048 bits, with the rest mostly being 4096-bit RSA keys. Determining whether a particular account has write access to repositories not explicitly owned by the account is not straightforward. Similarly, membership in an organization does not guarantee write access to specific repositories. GitHub does not provide this information directly, and the APIs that can be used to derive this information are limited. The information can be inferred from an analysis of previously performed commits by the given user. We verified several instances manually and confirmed access with factorizable keys.

The overall impact is significant. Fortunately, any potential changes made to a repository can be traced back to a particular commit due to the nature of source control systems. Many projects also use commit reviews (e.g., pull requests), where increased caution should be exercised until affected users move to more secure keys.

#### Maven

The Maven public repository has required developers to sign uploaded artifacts since approximately 2009. Each developer must be associated with a PGP key that is publicly reachable from a PGP keyserver. Each artifact is uniquely identified by a tuple (group ID, artifact ID, version). We downloaded the most recent versions of each artifact found in the Maven repository index in April 2017. In total, we downloaded 180,730 artifacts equipped with the Maven index file (pom.xml), of which 161,841 had a signature on the pom.xml file. There were 16,959 unique PGP keys, of which 5 were fingerprinted, all with 4096-bit moduli (not considered practically factorizable by our method). The potentially affected artifacts appear as dependencies in only a few other artifacts, so the impact is estimated to be small.

#### Android

We downloaded the 540 most popular Android applications and the 540 top-ranking Android games according to the Google Play top charts. The content of the Android application package (APK) is signed with the developer key before being published to the Google Play system. Developers cannot easily change the signing keys, so the applications likely use the same keys since their first upload. No fingerprinted keys were detected among the top 540 applications and games in a scan performed in January 2017. The analysis should be extended to less popular applications. If any vulnerable keys are found in established applications, the affected developers may face complications migrating to different signing keys.

### Trusted Platform Modules (TPM)

Trusted Platform Module (TPM) is a specification created by the Trusted Computing Group. TPMs are cryptographic hardware (usually in the form of a chip attached to a motherboard) that provide basic cryptographic functionality. Typical use cases include: a) secure storage of a user’s private keys or disk decryption keys; b) maintaining an unspoofable log of applications via a hash chain (Platform Configuration Registers – PCRs); and c) attestation of the state of the platform to a remote entity by an on-TPM signature of the PCRs. The TPM specification version 1.2 supports only RSA with 2048-bit keys.

We analyzed a sample of 41 different laptop models equipped with TPM chips. Six different manufacturers were detected, with chips supplied by Manufacturer (acronym IFX) being the most common and found in 10 devices. TPM chips from devices produced before 2013 and with firmware versions between 1.02 and 3.19 do not exhibit a fingerprint and are not factorizable by our method. All chips found in devices introduced in 2013 or later were vulnerable, including both TPM 1.2 and TPM 2.0. The fingerprinted keys from the RSALib appear earliest in the firmware version 4.32. All subsequent chip versions, including 5.x and 6.x, were also found to produce vulnerable keys. We hypothesize that the RSALib was first used with TPM firmware version 4.x.

There are two important RSA private keys stored inside a TPM: the Endorsement key (EK), which is permanently embedded by the chip manufacturer during production and cannot be changed, and the long-term Storage Root Key (SRK), which is generated on-chip when a user claims TPM ownership. Additionally, dedicated Attestation Identity Keys (AIKs) used for Remote Attestation may be generated.

The factorization of the EK compromises the root of trust for chip authentication. An attacker can generate a new keypair outside the TPM and then sign it with the factorized EK, making it trusted by the remote system (e.g., the company network).

The TPM can hold only a limited number of private keys directly on the chip. Other private keys are generated inside the TPM but are wrapped by the SRK and exported outside the TPM. If required, the keys are imported back, unwrapped, and used. The factorization of the SRK allows an attacker to decrypt all previously exported wrapped private keys, including "sealed storage" packages with sensitive information otherwise readable only on the particular machine with the associated AIK keys used for Remote Attestation. If AIK is directly factorized or its value is compromised due to the factorization of the SRK, an attacker can forge an attestation report, allowing them to start additional or modified malicious software without being noticed.

"Sealed storage" is also utilized by Microsoft BitLocker full disk encryption software to store a sensitive value required to obtain the Volume Master Key. BitLocker is typically set up together with TPM and an additional secret (either a PIN, a recovery key on a USB token, or both). The possibility to factorize TPM’s 2048-bit SRK directly leads to the decryption of the unwrapping key necessary to decrypt the Volume Master Key, bypassing the need for TPM to validate the correctness of a PIN value via a dedicated PCR. As a result, an attacker can decrypt a disk from a stolen laptop with a vulnerable TPM if encrypted by BitLocker in TPM+PIN mode (but not in a configuration with an additional USB token). We did not verify the attack in practice due to BitLocker’s proprietary storage format and the cost of factorizing a 2048-bit SRK key.

### PGP with Cryptographic Tokens

The private key used in Pretty Good Privacy (PGP) is typically a very sensitive long-term secret. If compromised, an attacker can forge new signatures and decrypt all previously captured messages, as PGP does not provide forward secrecy. Many users choose to use a cryptographic device that stores and performs private key operations inside a secure environment using an OpenPGP compliant application.

A large fraction of public keys used for PGP can be easily downloaded from PGP keyservers. Since the content of PGP key servers is publicly available, vulnerable keys can be easily identified along with the associated user contact information. We analyzed the state of a PGP keyserver from mid-April 2017, which contained a total of 4.6 million master keys and 4.4 million sub-keys, with 1.9 million and 1.7 million, respectively, being RSA keys. We detected 2,892 fingerprinted keys. Of these, two keys are 1024-bit and 954 keys are 2048-bit—both lengths are practically factorizable. Additionally, 86 and 1,846 fingerprinted (but not feasibly factorizable by our method) keys of 3072 and 4096-bit lengths, respectively, were detected. Finally, four keys with uncommon lengths of 3008 and 3104-bit were present.

The earliest creation date of a fingerprinted key, as obtained from a PGP certificate, is 2006, but only for a single user. We hypothesize this finding was caused by an incorrect system clock. The subsequent observed year is 2009, again with a single user only. 2013 is the earliest year with keys from multiple users. No key is observed originating in the year 2014, with more fingerprinted keys observed from July 2015 onwards. This date coincides with the official launch of the cryptographic token Yubikey 4.

### Summary of Impact

| Domain Name | Used Length (bits) | Public Key Availability | Misuse |
|-------------|--------------------|-------------------------|--------|
| TLS/HTTPS   | 2048 or higher     | Easy                    | MitM/eavesdropping, message eavesdropping, forgery |
| Message Security (PGP) | 2048 or higher | Easy | Unseal data, forged attestation |
| Trusted Boot (TPM) | 2048 or bigger | Limited | Clone passport, e-gov document forgery |
| Electronic IDs (eID, ePassport) | 768/960/1024/1182 | Limited | Clone card, fraudulent transaction |
| Payment Cards (EMV)* | Depends on use | Limited | Forged certificates, MitM |
| Certification Authorities (root, intermediate)* | 1024-4096 | Easy | Unauthorized access or operation |
| Authentication Tokens (U2F) | 2048 | Limited | Malicious application update |
| Software Signing | 2048 | Easy | Depends on use |

*No fingerprinted keys were found in the very limited dataset of 13 EMV cards that we collected or for large datasets of browser-trusted root and intermediate CAs.

### Analyzed Datasets

- **All browser-trusted roots (173), level ≤ 3 intermediates (1,869)**: 0 keys
- **ICAO Document Signing Certificates, CSCA Master Lists**: 0 keys
- **Sample of 130,152 randomly selected citizens**: # Vulnerable keys/devices, % Vulnerable