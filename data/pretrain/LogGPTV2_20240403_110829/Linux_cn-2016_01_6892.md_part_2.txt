> 照目前情况看，在安装任何与 Windows 8 兼容的主流桌面 Linux 发行版前，应该正确安装好 Grub 2。然而，如果 bootloader 损坏，你可以使用 live 发行版修复机器。在启动 live 介质之时，请确保是以 UEFI 模式启动。计算机每个可移动驱动器的启动菜单将会有两个： 一个普通的和一个以 EFI 标记的。使用后者会用到 **/sys/firmware/efi/** 文件中的 EFI 变量。
> 
> 
> 在 live 环境中，挂载教程前面所提的安装挂掉系统的根文件系统。除此之外，还需要挂载 ESP 分区。假设分区是 **/dev/sda1** ，你可以如下所示挂载：
> 
> 
> 
> ```
> sudo mount /dev/sda1 /mnt/boot/efi
> 
> ```
> 
> 接着在 chroot 到安装完毕的发行版前之前，使用 `modprobe efivars` 加载 **efivars** 模块。
> 
> 
> 在这里， Fedora 用户可以使用如下命令重新安装 bootloader
> 
> 
> 
> ```
> yum reinstall grub2-efi shim
> 
> ```
> 
> 但在此之前，需要使用
> 
> 
> 
> ```
> grub2-mkconfig -o /boot/grub2/grub.cfg
> 
> ```
> 
> 来产生新的配置文件。 Ubuntu 用户则改用以下命令
> 
> 
> 
> ```
> apt-get install --reinstall grub-efi-amd64
> 
> ```
> 
> 一旦 bootloader 正确就位，退出 chroot ，卸载所有分区，重启到 Grub 2 菜单。
> 
> 
> 
### 伙计，我的 Grub 哪去了？
Grub 2 最好的特性是可以随时重新安装。因此，当其它像 Windows 之类的系统用它们自己的 bootloader 替换后，导致 Grub 2 丢失，你可以使用 live 发行版，寥寥数步即可重装 Grub 。假设你在 `/dev/sda5` 安装了一个发行版，若要重装 Grub ，你只需首先使用以下命令为发行版创建一个挂载目录：
```
sudo mkdir -p /mnt/distro
```
然后挂载分区，如下：
```
mount /dev/sda5 /mnt/distro
```
接着就能重装 Grub 了，如下：
```
grub2-install --root-directory=/mnt/distro /dev/sda
```
这个命令会改写 `/dev/sda` 设备上的 MBR 信息，指向当前 Linux 系统，并重写一些 Grub 2 文件，如 **grubenv** 和 **device.map** 。
另一个问题常见于装有多个发行版的计算机上。当你安装了新的 Linux 发行版，它的 bootloader 应当要能找到所有已经安装的发行版。一旦不行，只要引导进入新安装的发行版，并运行
```
grub2-mkconfig
```
在运行这个命令之前，请确保启动菜单中缺失的发行版的 root 分区已经挂载。如果你想添加的发行版有单独的 `/root` 和 `/home` 分区，在运行 `grub2-mkconfig` 之前，只需挂载包含 `/root` 的分区。
虽然 Grub 2 能够找到大部分发行版，但是在 Ubuntu 中尝试添加安装的 Fedora 系统需要额外的一个步骤。如果你以默认设置安装了 Fedora ，则发行版的安装器已经创建了 LVM 分区。此时你需要使用发行版的包管理系统安装 **lvm2** 驱动，如下
```
sudo apt-get install lvm2
```
才能使得 Grub 2 的 `os-prober` 脚本能够找到并将 Fedora 添加进启动菜单。
> 
> ### 常见用户设置
> 
> 
> Grub 2 有很多可配置变量。 这里有一些 `/etc/default/grub` 文件中你最可能会修改到的常见变量。 **GRUB\_DEFAULT** 变量指定默认的启动项，可以设置为数字值，比如 0 ，表示第一个菜单项，或者设置为 “saved” ，将指向上一次启动时选中的菜单项。 **GRUB\_TIMEOUT** 变量指定启动默认菜单项之前的停留时间。 **GRUB\_CMDLINE\_LINUX** 列出了要传递给所有 Linux 菜单项的内核命令行参数。
> 
> 
> 如果 **GRUB\_DISABLE\_RECOVERY** 变量设置为 **true** ，那么将不生成恢复模式菜单项。这些菜单项会以单用户模式启动发行版，这种模式下允许你利用命令行工具修复系统。 **GRUB\_GFXMODE** 变量同样有用，它指定了菜单上文本显示的分辨率，它可以设置为你的显卡所支持的任何数值。
> 
> 
> ![](/data/attachment/album/201601/15/225259jrxb4a3hxbmb7aq3.jpg)
> 
> 
> *Grub 2 有个命令行模式，通过在 bootloader 菜单上按 C 进入。*
> 
> 
> 
### 彻底的修复
如果 `grub2-install` 命令不能正常运作，使得你无法引导进入 Linux ，你需要完整地重装以及重新配置 bootloader 。为此目的，需要用到强大的 **chroot** 功能将运行环境从 live CD 环境切换至我们想修复的 Linux 的安装位置。任何拥有 **chroot** 工具的 Linux live CD 都可以实现这个目的。不过需要确保 live 介质的系统架构和硬盘上系统的架构一致。因此当你希望 **chroot** 到 64 位系统，你必须使用 amd64 live 发行版。
启动进入 live 发行版之后，首先需要检查机器上的分区。使用 `fdisk -l` 列出磁盘上所有分区，记录你想修复的 Grub 2 系统所在的分区。
假设我们希望从安装在 `/dev/sda5` 中的发行版中恢复 bootloader 。启动终端使用如下命令挂载分区：
```
sudo mount /dev/sda5 /mnt
```
此时需要 绑定   （    bind    ） Grub 2 bootloader 需要进入的目录，以便检测其它操作系统：
```
$ sudo mount --bind /dev /mnt/dev
$ sudo mount --bind /dev/pts /mnt/dev/pts
$ sudo mount --bind /proc /mnt/proc
$ sudo mount --bind /sys /mnt/sys
```
此时可以离开 live 环境进入安装在 **/dev/sda5** 分区中的发行版了，通过 **chroot** ：
```
$ sudo chroot /mnt /bin/bash
```
现在可以安装、检测、以及升级 Grub 了，跟之前一样，使用
```
sudo grub2-install /dev/sda
```
命令来重装 bootloader 。因为 **grub2-install** 命令不能创建**grub.cfg** 文件，需要手动创建，如下
```
sudo grub-mkconfig -o /boot/grub/grub.cfg
```
这样应该就可以了。现在你就有了 Grub 2 的一份全新拷贝，罗列了机器上所有的操作系统和发行版。在重启电脑之前，你需要依次退出 chroot 系统，卸载所有分区，如下所示：
```
$ exit
$ sudo umount /mnt/sys
$ sudo umount /mnt/proc
$ sudo umount /mnt/dev/pts
$ sudo umount /mnt/dev
$ sudo umount /mnt
```
现在你可以安全地重启电脑了，而它应该会回退到 Grub 2 的控制之中，你已经修好了这个 bootloader。
> 
> ### 添加自定义菜单项
> 
> 
> 如果希望往 bootloader 菜单里添加菜单项，你需要在 **40\_custom** 文件里添加一个 启动段   （    boot stanza    ） 。例如，你可以使用它展示一个菜单项来启动安装在可移动 USB 驱动里的 Linux 发行版。假设你的 USB 驱动器是 **sdb1** ，并且 vmlinuz 内核镜像和 虚拟文件系统   （    initrd    ） 都位于根 (/)目录下，在 **40\_custom** 文件中添加以下内容：
> 
> 
> 
> ```
> menuentry “Linux on USB” {
>    set root=(hd1,1)
>    linux /vmlinuz root=/dev/sdb1 ro quiet splash
>    initrd /initrd.img
> }
> 
> ```
> 
> 相比使用设备和分区名，使用它们的 UUID 可以获得更精确结果，比如
> 
> 
> 
> ```
> set root=UUID=54f22dd7-eabe
> 
> ```
> 
> 使用
> 
> 
> 
> ```
> sudo blkid
> 
> ```
> 
> 来获得所有已连接的驱动器和分区的 UUID 。你还可以为你磁盘上没被 os-prober 脚本找到的发行版添加菜单项，只要你知道该发行版的安装位置以及其内核和 虚拟文件系统   （    initrd    ） 的位置即可。
> 
> 
> 
---
via: 
作者：[Mayank Sharma](https://www.linuxvoice.com/author/mayank/) 译者：[soooogreen](https://github.com/soooogreen) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出