布式计算的“最后一公里”，以将设备、移动应用程序和浏览器连接到后
端服务。
在gRPC 
API中，客户端应用程序通过远程方法调用在其他服务器
的应用程序，多个RPC系统之间，围绕API服务的思想，通过协议约定
接口参数和返回类型，完成不同服务能力的组合。不同的客户端或服
务器端之间，无须考虑编程语言的不同，均参照协议约定远程调用接
口，如图1-12所示。
●图1-12 gRPC通信
在客户端与服务器端之间，将数据（比如JSON格式数据）序列化
为二进制编码，然后使用Protobuf协议进行通信。gRPC API通常适用于
对接口安全性或性能要求较高的场景，比如某个具备管理功能属性的接
口，想通过严格的gRPC API约束其调用者的范围，则Protobuf协议恰好
满足此需求。
Protobuf协议的消息结构是通过Protocol Buffer Language语言进行定
义和描述的，其数据结构描述文件的拓展名是.proto，其样例结构如
下：
在使用时，需要先将.proto的文件编译，再序列化，才能在通信中
使用。读者可以将其理解为：客户端和服务器端通信时，先将JSON或
XML格式的数据使用Protobuf技术转换为二进制流的数据格式，再进行
传输。
在表现形式上，gRPC API比RESTful API相对来说具有更好的隐蔽
性，同时gRPC 
API的技术实现中也支持多种安全机制，比如通信链路
的SSL/TLS安全协议、X.509数字证书的认证、OAuth协议授权访问、
Google令牌认证等。
1.3.6 类XML-RPC及其他API技术
类XML-RPC及其他API技术比较杂乱，以类XML-RPC技术为主，
它除了包含XML-RPC的API接口调用外，还有一些以XML为数据格式
的信息交换技术，如即时通信的XMPP，在这里，也将这类的接口都归
类到类XML-RPC API中。另外，还有一些如JMS、Dubbo之类的接口技
术，也归类到这里，做统一的叙述。
下面，一起来看看类XML-RPC API。
XML-RPC是一种简单、古老的远程接口调用方法，使用HTTP将信
息在客户端和服务器端之间传输。从通信的消息格式上看，与其他的
API技术典型的差异在于消息体的XML文档化，如下面样例所示。
类XML-RPC请求：在请求消息中，所有的节点包含在methodCall
中，其中methodName节点表示调用的方法名，param节点表示调用时使
用的参数类型及其参数值。比如此样例中，请求调用的方法为
testRPC，调用时参数值为2：
类XML-RPC响应：在响应消息中，所有的节点包含
methodResponse中，其中param节点为正确响应的内容。比如此样例
中，响应消息的值为字符串类型的admin：
从样例可以看出，变化的主要内容是通信交互的消息体，还有一点
需要注意的是，对于远程接口中某个方法的调用，是在消息体中定义
的，比如样例中调用远程接口的testRPC方法包含在XML格式中，而不
是像普通的HTTP请求，放在URL路径中。除了上述差异，其他（如
HTTP Header相关字段）与普通HTTP消息无异，调用堆栈与1.2.1节描述
的RMI无异，更多差异化的细节体现在后端服务的逻辑实现上。
JMS作为Java消息服务类应用程序接口在大型企业级项目中也被频
繁使用，市场上也有多种具体的产品实现，比如ActiveMQ、Kafka、
Rabbit MQ等。与XML-RPC类不同，JMS的组成结构相对复杂些，如图
1-13所示。
●图1-13 JMS通信过程
JMS主要用于两个应用程序之间或分布式系统中发送消息，进行同
步或异步通信。消息发布者产生消息，并将消息发布到消息队列或对外
发布主题Topic。在P2P模式下，每条消息仅会传送给一个消费者；而在
发布/订阅模式下，每条消息会发送给订阅的多个消息消费者。JMS消息
作为通信内容的载体，其结构主要分为消息头、属性和消息体三个部
分。根据消息类型的不同，常用的主要有TextMessage文本消息、
MapMessage键值对消息、BytesMessage二进制数据格式消息、
ObjectMessage Java序列化对象消息以及StreamMessage以XML为传输载
体的流消息。
通过理解JMS、XML-RPC的消息传输，能帮助读者快速理解
Dubbo、XMPP等类型接口的技术原理，这也是将其他的API技术归类到
此类型的另一个原因。
1.4 Top N互联网企业API使用现状
API技术的发展加速了API的广泛使用，而API的广泛使用又促进了
API技术的发展。在API经济的促进下，互联网企业不断地加入到API能
力服务提供商的行列。
1.4.1 API开放平台发展历程
在国外，最早可以追溯到2007年的Facebook开放平台，Facebook首
次利用开放平台，推动第三方开发者参与开发与应用集成，将互联网带
入开放平台的时代。
继Facebook获得成功之后，Google也推出了自己的开放平台战略。
Google于23008年推出了Google App Engine平台，通过对外提供开发套
件的形式，为第三方开发者提供Google基础设施支撑能力。
而国内在23010年前后，头部的互联网公司相继开放了自己的API平
台，典型的有人人网、微博、百度、腾讯、盛大等。人人网开放平台于
2008年开始，到2012年的“人人网开放平台OpenDay”活动日，已完成了
全部API的开放，对外开放的API接口已多达830多个，涉及用户信息、
好友关系、日志、相册、状态、新鲜事、通知、公共主页等多个方面。
腾讯开放平台于23010年开始，2015年腾讯全球合作伙伴大会上，腾讯
集团COO任宇昕表示，腾讯开放平台5年来，接入应用数已超过400万。
腾讯开放平台上合作伙伴的收益分成就已超过1300亿，孵化的上市或借
壳上市的公司已经超过230家。通过这些数据，可以看出，腾讯开放平
台在战略上是成功的。
当今，当人们在互联网上用搜索引擎搜索OpenAPI开放平台时，会
发现很多企业都在使用API开放平台，API技术已渗透到IT信息服务的方
方面面，如图1-14所示。
●图1-14 通过微软Bing搜索关键字“OpenAPI开放平台”的结果
1.4.2 API在腾讯的使用现状
腾讯是中国最大的互联网综合服务提供商之一，其业务范围包含社
交、金融、娱乐、资讯、工具、平台等，很多知名的互联网应用都是腾
讯的产品，比如QQ、微信、财付通、微信支付、腾讯视频、QQ音乐、
应用宝等。腾讯开放平台作为第三方开发者与腾讯产品之间的纽带，给
优秀的第三方开发者和腾讯都带来了巨大的流量和收入。
当读者访问腾讯开放平台的官方网站时，可以看到已形成了基于开
放平台的规模化的合作应用生态，包含覆盖130亿账户的六大服务平
台：应用开放平台、微信开放平台、AI开放平台、创业服务平台、内容
开放平台、QQ开放平台，如图1-15所示。
●图1-15 腾讯开放平台官网首页六大平台介绍
这些平台通过API对外开放的形式，将腾讯产品后端的业务能力提
供出去，引入第三方开发者或厂商，不断创新，构建庞大的“腾讯+服
务”的生态系统，为2B和2C类客户提供优质服务。
1.4.3 API在百度的使用现状
百度是国内较早开始建设API开放平台的企业之一，从早期单一的
百度搜索开放平台到现在的百度数据开放平台、百度AI开放平台、百度
移动开放平台、百度语音开放平台、百度地图开放平台等，其服务能力
以API的形式逐步完成对外开放。在2019年12月10日，百度地图生态大
会公开的报告显示，其位置服务日均请求次数已突破13200亿次，注册
开发者数量达1380万，服务超过530万个移动应用，已成为中国最大的
智能化位置服务平台。从百度地图开发平台的官网可以看到，为了构建
地图生态，对第三方开发者和合作厂商提供了丰富的API接口，如图1-
16所示。
●图1-16 百度地图API服务接口
通过对腾讯、百度等互联网企业使用API开放平台的介绍以及它们
对外提供的业务解决方案可以看出，API技术早已渗透到各行各业。随
着物联网和53G技术的迅速发展，各种新业务能力的API仍在不断地涌
现，API技术正迎来蓬勃向上的春天。
1.5 小结
本章从API的发展历史谈起，围绕Web技术的发展历程，重点介绍
了Web应用型API的不同类型以及每一种类型的主要特点。通过本章内
容，读者能对API所关注的内容以及所提供的功能有大致的了解。最
后，结合国内外互联网厂商在API开放平台的使用情况，介绍了API的
当前现状和发展前景，可以说，API技术正在改变着人们的生活，并呈
现良好的发展势头。那么在如此良好的前景下，当前的API应用有哪些
安全问题？这将是下一章要介绍的重点内容。
第2章 API安全的演变
人类社会发展与危机并存，互联网技术也是如此。从API技术开始
出现，API安全缺陷就一直伴随着API技术在企业应用中的变化而变
化。前有古老的Windows 95 API漏洞，后有各种现代API问题导致的数
据泄露，不同的只是API安全问题发生的原理。
本章从API安全的含义出发，介绍API安全现状、常见API安全问题
以及API安全发展趋势等内容，为读者讲述API安全的演变过程。
2.1 API安全现状
API技术广泛使用的同时，带来的安全问题也愈加突出，从不断出
现的与API安全相关的安全事件中，来探讨一下API安全的现状。
2.1.1 什么是API安全
从API的发展过程可以了解到，API安全问题一直伴随着API技术的
发展在不断变化。可以用一句话来概括API安全的定义：API安全是从
安全的角度关注API领域的安全问题和这些问题的解决方案，从技术和
管理两个层面提高API自身和API周边生态的安全性。
本书谈论的API实际是以现代API为主，其关注的安全领域与传统
的Web安全比较接近，但又不同于Web安全，属于IT领域中技术细分的
交叉地带。传统Web安全更多的是关注Web应用程序的安全性，以服务
器端应用程序安全为主，其漏洞表现形式主要为SQL注入、XSS、CSRF
等。而API安全是在API技术被广泛使用后，攻击面不断扩大的情况下
带来的安全管理问题和安全技术问题，它面临的外部环境比传统的Web
安全更为复杂，通常内部包含API服务及其运行环境（与传统Web安全
相似），外部包含API客户端应用程序、IoT设备、监管政策以及第三方
合作厂商运作支持等，是API经济背景下各个方面安全能力的总集。
API安全包含的内容如图2-1所示。
图23-1从网络安全、Web应用安全、安全开发、监管合规43个主
要方面重点描述了API安全关注的核心内容。在网络层面，API安全主
要关注客户端应用程序与API服务器端之间的通信安全；在Web应用层
面，重点关注API客户端应用与API服务器端之间的协议规范、常见的
API漏洞类型以及如何通过API安全设计规避这些安全问题；在安全开
发层面，从API生命周期的角度，结合SDL或DevSecOps模型来综合管
理API开发过程的安全性；在监管合规层面，需要结合法律法规和行业
监管要求，考虑API数据隐私保护和合规性设计。
●图2-1 API安全在多个安全细分领域的交叉内容
2.1.2 API安全问题主要成因
既然API安全问题由来已久，那么API安全的真实情况到底如何？
不妨先来看一看2020年初的几起数据泄露事件。
2020年33月底，多家网络媒体爆料，某社交平台数据疑似大规模泄
露，涉及53亿多用户，随后社交平台的安全专员回复是在23018年底，
有黑客通过手机通讯录接口，伪造本地通讯录来获得手机号与平台用户