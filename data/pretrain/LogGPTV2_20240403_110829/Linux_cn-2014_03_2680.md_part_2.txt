输出样例：
[![](/data/attachment/album/201403/13/102929zi14vzpkp937d1mm.jpg)](http://www.cyberciti.biz/howto/unix-linux-job-control-command-list-for-bash-ksh-shell/attachment/run-xeyes-command-in-background/)
*Fig.01: 在后台运行 xeyes 命令*
我使用&符号让一个 job 在后台运行。shell 会打印一行信息类似如下:
```
[1] 6891
```
在这个例子中，有两个数字输出，分别表示：
* [1](http://www.cyberciti.biz/faq/unix-linux-jobs-command-examples-usage-syntax/) : 在后台执行的 xeyes 任务的作业号为 1。
* 6891 : 作业1的进程ID。
我在多执行一些 job:
```
## 启动一个文本编辑器，X 的系统负载显示，和 sleep 命令 ##
gedit /tmp/hello.c &
xload &
sleep 100000 &
```
### #2: 列出当前的作业
要[查看当前 shell 的激活的任务状态](http://www.cyberciti.biz/faq/unix-linux-jobs-command-examples-usage-syntax/)，输入：
```
$ jobs
$ jobs -l
```
输出如下:
```
[1]   9379 Running                 xeyes &
[2]   9380 Running                 gedit /tmp/hello.c &
[3]-  9420 Running                 xload &
[4]+  9421 Running                 sleep 100000 &
```
简要描述如下：
| 字段 | 值 | 描述 | 示例 |
| --- | --- | --- | --- |
| 1 | [1] | **jobID** 或 **JOB\_SPEC** - 工作号要与fg, bg, wait, kill和其他shell命令一起使用。你必须在工作号前缀添加一个百分号：(`**%**`)。加号 (`+`) 标识着默认的或是现在的作业。减号 (`-`) 标识着前一个作业。 | `%1``fg %1``kill %2` |
| 2 | 9379 | **进程 ID** - 系统自动为每个进程创建并分配地独有的身份标志号。 | kill 9379 |
| 3 | Running | **状态** - 关于作业的状态:`**Running**` - 该 作业正在运行,还没有被外部信号挂起。`**Stopped**` - 该作业已经被挂起。 | N/A |
| 4 | xeyes & | **command** - 由shell给出的命令。 | script &firefox url& |
你也可以用 ps 命名列出当前系统正在运行的进程:
```
$ ps
```
### #3: 停止或挂起正在运行的作业
按下[Ctrl]-[Z]键或使用[kill 命令](http://www.cyberciti.biz/faq/unix-kill-command-examples/),如下所示：
```
kill -s stop PID
```
举个例子，启动[ping 命令](http://www.cyberciti.biz/faq/unix-ping-command-examples/)，然后用 Ctrl-Z 键来停止 ping 命令作业：
[![](/data/attachment/album/201403/13/102931y9nquzs59x5yyy9y.gif)](http://www.cyberciti.biz/howto/unix-linux-job-control-command-list-for-bash-ksh-shell/attachment/suspend-unix-job-command/)
*Animated gif 01: 挂起 ping 命令作业*
### #4: 在前台恢复 挂起的/停止的作业
让我们[恢复处于停止状态下的作业，让它回到前台继续运行](http://www.cyberciti.biz/faq/unix-linux-fg-command-examples-usage-syntax/)，要将其变成当前作业，必须借助[fg 命令](http://www.cyberciti.biz/faq/unix-linux-fg-command-examples-usage-syntax/)。具体语法如下：
```
## ping 命令的作业号的值为5 ##
fg %5
```
我也可以规定命令行开端符合字符串"ping"的作业[译注：不能出现不明确的字符串，例如如果后台有两个 vim 进程而你敲入 fg %vim 会报错。]:
```
## %String ##
fg %ping
```
输出样例：
```
64 bytes from www.cyberciti.biz (75.126.153.206): icmp_req=3 ttl=53 time=265 ms
64 bytes from www.cyberciti.biz (75.126.153.206): icmp_req=4 ttl=53 time=249 ms
64 bytes from www.cyberciti.biz (75.126.153.206): icmp_req=5 ttl=53 time=267 ms
^C
```
### #5: 在后台恢复 挂起/停止状态的作业
在这个例子中，我使用[yum 命令](http://www.cyberciti.biz/faq/rhel-centos-fedora-linux-yum-command-howto/)更新所有安装在 Redhat 或 CentOS Linux 生产服务器上的软件包并置于后台作业。
```
# yum -y update &>/root/patch.log &
```
然而，由于一些原因(例如,过载问题)我决定停止这个作业20分钟：
```
# kill -s stop %yum
```
输出样例：
```
[7]+  Stopped                 yum -y update &>/root/patch.log &
```
用 bg 重启停止在后台的 yum 进程
现在，我将要[恢复停止的 yum -y update &>/root/patch.log & 作业](http://www.cyberciti.biz/faq/unix-linux-bg-command-examples-usage-syntax/)，键入：
```
# bg %7
```
或者：
```
# bg %yum
```
输出样例：
```
[7]+ yum -y update &>/root/patch.log &
```
### #6: 杀死作业/进程
杀死[yum 命令](http://www.cyberciti.biz/faq/rhel-centos-fedora-linux-yum-command-howto/)进程，输入如下[kill 命令](http://www.cyberciti.biz/faq/unix-kill-command-examples/)及其作业号 7：
```
# kill %7