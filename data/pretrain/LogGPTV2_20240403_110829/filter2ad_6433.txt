# Title: POSTER: Towards Automating Detection of Anomalous HTTP Requests with Joint Probability Estimation of Characters

## Authors
- Pratibha Khandait
- Neminath Hubballi
- Katrin Franke

### Affiliations
- **Department of Computer Science, Indian Institute of Technology Indore**
  - Pratibha Khandait
  - Neminath Hubballi
  - Email: [PI:EMAIL]

- **Department of Computer Science, Norwegian University of Science and Technology**
  - Katrin Franke
  - Email: [PI:EMAIL]

## Abstract
Web applications are frequently exploited using techniques such as injection, buffer overflow, and others. An HTTP request carrying malicious content will differ from a normal request. In this paper, we propose a method to detect such anomalous HTTP requests using regular expression-based signatures. These signatures are generated by identifying specific character combinations from known malicious requests. We identify characters that are useful for differentiating between normal and anomalous requests based on their frequency values and select those combinations with high joint probability values. Our experiments with various sample attack types demonstrate that the proposed method can effectively identify anomalous HTTP requests.

## CCS Concepts
- **Security and Privacy**: Vulnerability Assessment, Software and Application Security, Network Security
- **Networks**: Application Layer Protocols

## Keywords
- HTTP
- SQL Injection
- Cross-Site Scripting
- Web Attacks

## ACM Reference Format
Pratibha Khandait, Neminath Hubballi, and Katrin Franke. 2020. POSTER: Towards Automating Detection of Anomalous HTTP Requests with Joint Probability Estimation of Characters. In Proceedings of the 15th ACM Asia Conference on Computer and Communications Security (ASIA CCS '20), October 5–9, 2020, Taipei, Taiwan. ACM, New York, NY, USA, 4 pages. https://doi.org/10.1145/3320269.3405434

## 1 Introduction
Web application vulnerabilities constitute a significant portion of internet security issues. Common vulnerabilities include injection attacks, cross-site request forgery (CSRF) attacks, brute force login attempts, and path traversal attacks. Web applications are prime targets due to their frequent handling of sensitive information like credit card details, bank transactions, and online shopping carts. The consequences of an attack can be severe, including the compromise of personal data and manipulation of information in shopping carts. Protection against these attacks often involves Web Application Firewalls (WAFs) and intrusion detection systems, which screen HTTP requests to determine if they are normal or contain malicious content. WAFs block requests that match known attack patterns.

In this paper, we propose a method to generate rules for detecting web attacks. The method is based on the premise that certain character combinations appear in HTTP requests carrying attack payloads. We identify these combinations by comparing their frequency differences in normal and malicious requests and use them to generate rules for WAFs.

### Prior Work
Literature on detecting and mitigating web attacks can be categorized into two main areas:

1. **Web Application Firewalls (WAFs)**: These systems use rules to either block or allow HTTP requests. Negative rules block known attack types, while positive rules define legitimate requests. Examples include TokDoc, which sanitizes requests by replacing known malicious content, and FlowWatcher, which detects data disclosure vulnerabilities by intercepting HTTP post requests and responses.

2. **Intrusion Detection Systems (IDS)**: These systems model HTTP requests by breaking them into short sequences or generating signatures for various attacks. Examples include PAYL, Anagram, Layergram, and Rangegram, which use n-grams and rating functions to classify requests. Some IDSs use Markov models to identify anomalies in web requests.

## 2 Generating Signatures

### 2.1 Selecting Differentiating Characters
To detect malicious HTTP requests, we leverage the unique patterns found in web attacks. For example, a JavaScript injection attack might include specific syntax, while an SQL injection attack might involve dropping a table and selecting entries. By parsing HTTP requests and estimating the joint probability of character pairs, we can identify combinations that are likely to appear together. We compare the normalized frequency of occurrence in both normal and malicious requests to select characters with high frequency differences.

### 2.2 Regular Expression Based Signature Generation
Once the differentiating characters are selected, we write regular expressions to search for these combinations in test HTTP requests. We further refine the regular expressions by analyzing the order and context in which these characters appear. A sample regular expression for detecting a cross-site scripting (XSS) attack is provided.

## 3 Experiments
We evaluated the proposed approach using the HTTP CSIC 2010 dataset. The dataset was divided into training and testing sets, and we used it to estimate the joint probability of character combinations. Regular expression-based signatures were generated for each attack type and tested. The results show that the proposed method can detect a range of anomalous HTTP requests with high accuracy and low false positives.

## 4 Conclusion
In this paper, we proposed a method to detect anomalous HTTP requests using regular expression-based signatures. These signatures are generated from character combinations that differentiate normal and malicious requests. Our experiments with a publicly available dataset demonstrated the effectiveness of the proposed method in identifying various types of web attacks.

## Acknowledgments
This research is financially supported under the Indo-Norway SPARC project through grant number SPARC/2018-2019/P448/SL by the Government of India.

## References
- [1] Davide Ariu, Roberto Tronci, and Giorgio Giacinto. 2011. HMMPayl: An Intrusion Detection System Based on Hidden Markov Models. Computer Security 30, 4 (2011), 221–241.
- [2] Igino Corona, Davide Ariu, and Giorgio Giacinto. 2009. HMM-Web: A Framework for the Detection of Attacks Against Web Applications. In ICC ’09: Proceedings of IEEE International Conference on Communications. 1–6.
- [3] Carmen Torrano Gimenez, Alejandro Perez Villegas, and Gonzalo Alvarez Maranon. 2010. HTTP DATASET CSIC 2010. http://www.isi.csic.es/dataset/. Online; Accessed 20-Feb-2020.
- [4] Neminath Hubballi, Santosh Biswas, and Sukumar Nandi. 2010. Layered Higher Order n-grams for Hardening Payload based Anomaly Intrusion Detection. In FARES ’10: Proceedings of the workshop on Frontiers of Availability, Reliability and Security. 1–6.
- [5] Tammo Krueger, Christian Gehl, Konrad Rieck, and Pavel Laskov. 2010. TokDoc: A Self-healing Web Application Firewall. In SAC ’10: Proceedings of the 2010 ACM Symposium on Applied Computing. ACM, 1846–1853.
- [6] Divya Muthukumaran, Dan O'Keeffe, Christian Priebe, David Eyers, Brian Shand, and Peter Pietzuch. 2015. FlowWatcher: Defending Against Data Disclosure Vulnerabilities in Web Applications. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security - CCS '15. ACM Press.
- [7] Mayank Swarnkar and Neminath Hubballi. 2015. Rangegram: A Novel Payload Based Anomaly Detection Technique Against Web Traffic. In ANTS ’15: Proceedings of the 9th IEEE International Conference on Advanced Networks and Telecommunications Systems. 1–6.
- [8] Ke Wang, Janak J. Parekh, and Salvatore J. Stolfo. 2006. Anagram: A Content Anomaly Detector Resistant to Mimicry Attack. In RAID’06: Proceedings of the 9th International Conference on Recent Advances in Intrusion Detection. 226–248.
- [9] Ke Wang and Salvatore J. Stolfo. 2004. PAYL: Anomalous Payload-based Network Intrusion Detection. In RAID ’04: Proceedings of Recent Advances in Intrusion Detection. 203–222.