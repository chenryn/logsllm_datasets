Original report at SourceForge, opened Fri Feb 11 22:02:28 2011
One of the annoying things about axes.hist is that with histtype='step' the
automatic legend style is an empty box, instead of a line, as I would expect.
This behaviour doesn't seem to make sense, because it seems a line would be
much more appropriate for this case. Example code to demonstrate this:
import matplotlib.pyplot as plt  
plt.hist([0,1,1,2,2,2], [0,1,2,3], histtype='step', label="histtype='step'")  
plt.legend()  
plt.show()
With the current uncustomisability of legend styles one can get around this by
using proxy Line2D objects in building the legend, but this can be a common
operation and becomes messy and annoying.
The cause of this is the fact that in axes.py::7799 (current SVN head), in
axes.hist, patch objects are always created, even for the line-based step
style. I searched the tracker, and couldn't find this mentioned before.
Attached is a patch that makes the very simple change of swapping out the call
to .fill for .plot (only the function is changed here, not yet the
documentation), and it appears to work but I haven't tested exhaustively.
  * Is this intended behaviour, that I am just not understanding the requirement for?
  * This will cause the return signature to possibly include Line2D's, instead of just patches. Will this break anything?
Thoughts?
### SourceForge History
  * On Fri Feb 11 22:02:28 2011, by ndevenish: File Added: 401440: histtype_plot.patch