**Describe the bug**
There is an issue with some incorrect texture colours when loading a GLTF
model via `GLTFLoader` when `WebGLRenderer` is instantiated with `alpha` set
to `true`.
**To Reproduce**
Steps to reproduce the behavior:
Instantiate `WebGLRenderer` with `alpha` set to `false`.
_**Code**_
    import * as THREE from "three";
    import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
    const renderer = new THREE.WebGLRenderer({
      // ...
      antialias: true,
      alpha: true // this is what causes the texture colour issue
    });
    const width = 1024;
    const height = 768;
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);
    const ambientLight = new THREE.AmbientLight();
    scene.add(ambientLight);
    // Load model and add to scene
    const loader = new GLTFLoader();
    loader.load("model.gltf", (gltf) => {
      scene.add(gltf.scene);
    });
    // Render scene
    (function render() {
      renderer.render(scene, camera);
      requestAnimationFrame(animate);
    })();
**Live Demos**
alpha: true | alpha: false  
---|---  
https://codesandbox.io/s/pedantic-cloud-vgppt?file=/src/index.js |
https://codesandbox.io/s/dry-http-fdykp?file=/src/index.js  
Below is the output where `WebGLRenderer` has been instantiated with `alpha`
set to `true` and `false`
alpha: true | alpha: false  
---|---  
![](https://user-
images.githubusercontent.com/5284715/116463928-36d3a200-a863-11eb-980e-d29320fbdad2.png)
| ![image](https://user-
images.githubusercontent.com/5284715/116463976-48b54500-a863-11eb-8b8b-9000cccfa7d4.png)  
**Expected behavior**
I believe setting the `alpha` to `true` or `false` shouldn't have an effect on
how solid textures are rendered. The expected behaviour would be for textures
to render consistently regardless of the alpha setting.