Technical Report, LSDIS Lab, Computer Science Department, University of Georgia, September 2002. © UGA
Healthcare Enterprise Process Development and Integration
Kemafor Anyanwu, Amit Sheth, Jorge Cardoso, John Miller, Krys Kochut
LSDIS Lab, Department of Computer Science
University of Georgia
Athens GA 30602-7404, USA
Contact: PI:EMAIL, Tel: 706-542-2310, Fax: 706-542-4771
Abstract
Healthcare enterprises involve complex processes that span diverse groups and
organizations. These processes involve clinical and administrative tasks, large
volumes of data, and large numbers of patients and personnel. The tasks can be
performed either by humans or by automated systems. In the latter case, the tasks
are supported by a variety of software applications and information systems which
are very often heterogeneous, autonomous, and distributed. The development of
systems to manage and automate these processes has increasingly played an
important role in improving the efficiency of healthcare enterprises.
In this paper we look at four healthcare and medical applications that involve
investigative, clinical, and administrative functions. Based on these applications,
we derive the requirements for developing enterprise applications that involve the
coordination of a variety of tasks performed by humans, information systems, and
legacy applications.
Keywords: workflow management systems, healthcare processes, healthcare applications-
clinical pathways, immunization tracking, eligibility referral, genome sequencing
1 Introduction
The recent push for healthcare reform has caused healthcare organizations to focus on
ways to streamline their processes in order to deliver high quality care while at the same
time reducing costs. This has precipitated a review and upgrade of clinical and
administrative protocols and the increased use of information systems to improve the
efficiency of certain processes. Since processes are fundamental building blocks of an
organization’s success, information technologies that focus on process management and
improvement are good candidates for helping healthcare organizations fulfill their
corporate vision.
In the past two decades, a special interest has been taken in Workflow Management
Systems (WfMSs) as a tool to streamline, automate, and re-engineer business processes.
There are many workflow products which adequately support relatively simple processes,
such as document management, form processing, and imaging. However, they fall short
in meeting the challenges of mission-critical processes, which are often complex,
September 5, 2002 1
Technical Report, LSDIS Lab, Computer Science Department, University of Georgia, September 2002. © UGA
dynamic, large-scale, and QoS-based (Sheth, Georgakopoulos et al. 1996; Cardoso, Sheth
et al. 2002). These qualities are typical in healthcare processes.
Healthcare processes are very complex, involving both clinical and administrative
tasks, large volumes of data, and a large number of patients and personnel. For example,
an out-patient clinic visit involves administrative tasks performed by an assistant and
clinical tasks performed by a doctor or by a nurse. For an in-patient hospital visit, this
scenario involves more activities, and the process entails a duration that lasts at least as
long as the duration of patient hospitalization.
Healthcare processes are also very dynamic. As processes are instantiated, changes
in healthcare treatments, drugs, and protocols may invalidate running instances, requiring
reparative actions (Berry and Myers 1998; Shrivastava and Wheater 1998). For example,
a care pathway for a patient with disease condition ‘A’ may need to be changed as new
drugs are discovered.
Large-scale processes often span multiple healthcare organizations and run over long
periods of time (Dayal, Hsu et al. 1991). This type of process requires highly scalable
workflow systems to support large instances (Bonner, Shruf et al. 1996). Furthermore,
these large-scale processes often need to be integrated with legacy information systems
and with distributed, autonomous, and heterogeneous computing environments
(Georgakopoulos, Hornick et al. 1995); thus, they require support for transactional
features and error handling (Worah, Sheth et al. 1997).
Another important requirement is the management of Quality of Service (Cardoso
2002; Cardoso, Sheth et al. 2002). Healthcare organizations operating in modern markets
require Quality of Service (QoS) management. Services with well-defined specifications
must be available to patients. An appropriate control of quality leads to the creation of
quality care services; these, in turn, fulfill patient satisfaction.
This paper discusses the use of the METEOR workflow system for managing
mission-critical healthcare processes. The workflow management and enterprise
application integration techniques developed in the METEOR system are intended to
reliably support complex, dynamic, large-scale, and QoS-based workflow applications in
real-world, multi-enterprise, and heterogeneous computing environments.
An important aspect of the METEOR project is that technology and system
development efforts occurred in close collaboration with industry partners. Key
healthcare partners have included the Connecticut Healthcare Research and Education
Foundation (CHREF), the Medical College of Georgia (MCG), and the Advanced
Technology Institute. These collaborations have generated a detailed study of healthcare
workflow application requirements, the prototyping of significant healthcare workflow
applications with a follow-on trial, and the evaluation of METEOR’s technology.
This paper is structured as follows. In section 2, we discuss the current generation of
information systems to support healthcare processes, and we highlight some
shortcomings of these systems. Section 3 describes the METEOR system, and section 4
discusses four healthcare workflow applications that use the METEOR system to meet
requirements. Section 5 summarizes the benefits of the METEOR approach. Finally,
section 6 presents our conclusions.
September 5, 2002 2
Technical Report, LSDIS Lab, Computer Science Department, University of Georgia, September 2002. © UGA
2 Supporting Healthcare Processes with the Current Generation of
Workflow Systems
Traditionally, healthcare processes have been managed using limited forms of workflow.
Some examples of these are clinical and administrative protocols. However, these
“protocols have remained limited in their usefulness in part because developers have
rarely incorporated both clinical and administrative activities into one comprehensive
care protocol. This lack of integration hinders the delivery of care, as the effectiveness of
protocols is often dependent on many administrative tasks being properly executed at the
correct time” (Chaiken 1997). Consequently, many healthcare organizations are now
turning to workflow management techniques to help improve the efficiency of their work
processes.
The trend toward computerizing business processes has led to a large number of
commercially available information systems, some of which specifically target the
healthcare sector. These systems offer various levels of process support, functionality,
and robustness.
At one end of the spectrum, we have customized workflow application systems that
support human-oriented and vertical group processes. These processes typically involve a
relatively few number of tasks which are executed in a predefined sequence and which
require few roles in a single group of an organization. In these types of applications, the
process model is embedded in the application, and customers need to configure the
application in order to tailor it to their specific process.
Some examples include VMI medical (2002), which offers a pediatric cardiology
workflow system; TeleTracking (2002), which enables hospital administrators and staff
to effectively manage, coordinate, and deliver quality care to patients; and the Soarian
(2002) system, which synchronizes workflows across the entire enterprise and
orchestrates patient care by bringing together clinical, financial, therapeutic, and
diagnostic information.
Another class of applications at this end of the spectrum focuses on supporting
information and document management functions. These applications are usually built on
the top of data management systems which are designed to capture, store, retrieve, and
manage unstructured information objects such as text, spreadsheets, audio clips, images,
video, files, and multimedia.
Some examples include CareFlowNet (2002), which provides for the creation,
management, and delivery of medical documentation, and SoftMed (2002), which
provides a suite of applications for clinical data management, patient information
management, and document acquisition and storage.
At the other end of the process support spectrum, we have workflow management
systems which are more general purpose systems. These systems provide tools for
process definition, workflow enactment, administration, and for the monitoring of
workflow processes.
Research prototypes include METEOR (Kochut, Sheth et al. 1999), MOBILE
(Jablonski 1994), ADEPT (Reichert and Dadam 1998), EXOTICA (Mohan, Alonso et al.
1995), and MENTOR (Wodtke, Weissenfels et al. 1996). Commercial products include
MQSeries Workflow (IBM 2002), Staffware (Staffware 2002), TIBCO InConcert
(TIBCO 2002), and COSA Workflow (COSA 2002). General information on workflow
September 5, 2002 3
Technical Report, LSDIS Lab, Computer Science Department, University of Georgia, September 2002. © UGA
systems can be found at the Workflow and Reengineering International Association
(WARIA 2002) and the Workflow Management Coalition (WfMC 2002) Web sites.
The current generation of workflow systems adequately supports administrative and
production workflows (McCready 1992), but they are less adequate for some of the more
horizontal healthcare processes which have more complex requirements. These types of
processes are dynamic and involve different types of tasks; these can be human-oriented,
associated with legacy applications, or associated with database transactions. The
processes are large-scale, cross-functional, and cross-organizational, where the different
participating groups have distributed and heterogeneous computing environments.
Workflow infrastructures to support such processes are limited. This is mainly because
many systems have a centralized client/server architecture and support only static
processes. They also lack support for features such as exception modeling and handling
and QoS management.
Another very important requirement that current workflow systems seldom provide
is an integration environment. It is clear that the different functional groups of a
healthcare organization may require different types of applications to support their
processes. For example, integrating Picture Archiving and Communication Systems
(PACS) with hospital or radiology information systems will allow radiologists to be
presented with collateral patient information. This allows for patient history, clinical
information, symptoms, and the previous examination history to be presented to the
physician along with images retrieved from the PACS, greatly aiding in the interpretation
of images (DeJesus 1998).
Healthcare organizations typically have various information systems, including
legacy applications, that are used routinely and need to be integrated. Unfortunately,
many workflow systems of the current generation are based on closed, proprietary
architectures. This makes supporting interoperability and integration a complicated, if not
impossible, task.
The METEOR system was specifically developed to provide a solution to the
problems outlined previously. It supplies an infrastructure that supports mission-critical
enterprise-wide processes and that integrates heterogeneous, autonomous, and distributed
information systems. A general description of the system is given in the next section. For
a comprehensive and detailed description, the reader is referred to Miller, Palaniswami et
al. (1998) and Kochut, Sheth et al. (1999).
3 The METEOR System
The METEOR (Managing End to End OpeRations) system leverages Java, CORBA, and
Web technologies to provide support for the development of enterprise applications that
require workflow management and integration. It enables the development of complex
workflow applications which involve legacy information systems and that have
geographically distributed and heterogeneous hardware and software environments,
spanning multiple organizations. It also provides support for dynamic workflows
processes, error and exception handling, recovery, and QoS management. The METEOR
system has been successfully used to prototype and deploy several healthcare
applications. Our success is due in part to extensive collaboration with our healthcare
industry partners.
September 5, 2002 4
Technical Report, LSDIS Lab, Computer Science Department, University of Georgia, September 2002. © UGA
The METEOR system includes all of the components needed to design, build,
deploy, run, and monitor workflow applications. METEOR provides the four main
services shown in Figure 3-1: the Builder, the Enactment, the Repository, and the
Manager services.
WORKFLOW DESIGNER
MODEL
REPOSITORY
MONITOR
AUTOMATIC CODE GENERATION
TASK TASK TASK
Mgr. Mgr. Mgr.
AND
TASK TASK
TASK
DB
TASK
Mgr.
WEB /
TASK
CORBA
Figure 3-1: METEOR system architecture
3.1 The Builder Service
The builder service supports the graphical design of workflows (Lin 1997; Zheng 1997).
It includes three main components. The task design component provides interfaces with
external task development tools, such as Microsoft’s FrontPage to design the interface of
a user task. The network design component is used to set dependencies, data objects, and
transition functions among tasks; it is also used to define security domains and roles. The
data design component allows the user to specify data objects that are employed in the
workflow.
The service outputs an XML-based representation of process definitions which may
be formatted to be compliant with the Workflow Process Definition Language (WPDL)
of the Workflow Management Coalition (WfMC 2002).
3.2 The Enactment Service
There are two enactment services provided by METEOR – ORBWork (Kochut, Sheth et
al. 1999) and WebWork (Miller, Palaniswami et al. 1998). Both services use a fully-
distributed open architecture. WebWork is a comparatively light-weight implementation
that is well-suited for traditional workflows’ help-desk and data exchange applications.
ORBWork is better suited for more demanding, mission-critical enterprise applications
September 5, 2002 5
Technical Report, LSDIS Lab, Computer Science Department, University of Georgia, September 2002. © UGA
which require high scalability, robustness, exception-handling support, QoS management,
and dynamic modifications.
3.3 The Repository Service
The repository service maintains information about workflow definitions and associated
workflow applications. The builder service tools communicate with the repository service
to retrieve, update, and store workflow definitions, thereby providing support for rapid
application development in the builder service. The builder service tools are capable of
browsing the contents of the repository and incorporating fragments (either sub-
workflows or individual tasks) of existing workflow definitions into the one currently
being created.
A detailed description of the first design and implementation of this service is
presented in Yong (1998), and a XML based implementation is described in Arpinar,
Miller et al. (2001).
3.4 Management Services
The tools provided by these services are used for administering and monitoring workflow
instances. The administration service is used by the workflow administrator to perform
management functions, such as installing and configuring workflow instances, load-
balancing, and modifying workflow processes in execution. The monitor provides a tool
for querying and viewing the state of workflow instances.
3.5 METEOR’s Advanced Features
Automatic Code Generation
METEOR has a suitable code generator (Miller, Palaniswami et al. 1998) that is used to
build workflow applications from the workflow specifications generated by the builder
service or from those stored in the repository. The code automatically generated from the
workflow design stage greatly minimizes the steps required to implement the workflow.
This frees the designer from having to worry about details of communication or about
data passing among existing tasks.
Fully Distributed System
The fully distributed architecture of METEOR yields significant benefits in the area of
scalability. METEOR’s architecture has three major advantages. First, it allows for the
support of workflow processes that are geographically distributed. Secondly, it provides
support for load-balancing among all the participating host machines. Finally, it
eliminates the existence of a single point of failure within the system.
The Use of Standards
The METEOR system closely follows the specification and interoperability standards set
by bodies such as the WfMC (WfMC 2002) and the Object Management Group (OMG
1998). METEOR also supports workflow interoperability standards such as JFLOW
September 5, 2002 6
Technical Report, LSDIS Lab, Computer Science Department, University of Georgia, September 2002. © UGA
(JFLOW 1998) and SWAP (Swenson 1998), and it utilizes CORBA1 due to its