User: 请完成网络运维领域的自动化脚本类任务请编写一个Python脚本，扫描本地网络上所有设备的IP地址和MAC地址，并将结果保存到一个文件中。


Assistant: 由于获取本地网络所有设备的IP地址和MAC地址需要使用一些底层操作，因此需要通过第三方库来实现。本文将使用scapy库来实现。请先使用pip安装scapy库。

代码如下：

```python
from scapy.all import ARP, Ether, srp

# 定义要扫描的网络地址
target_ip = "192.168.1.0/24"

# 创建ARP请求包
arp = ARP(pdst=target_ip)

# 创建以太网包，目标地址为广播地址（ff:ff:ff:ff:ff:ff）
ether = Ether(dst="ff:ff:ff:ff:ff:ff")

# 组合请求包
packet = ether/arp

# 发送请求并获取响应
result = srp(packet, timeout=3, verbose=0)[0]

# 打印结果
devices = []
for sent, received in result:
 # 提取IP地址和MAC地址
 devices.append({'ip': received.psrc, 'mac': received.hwsrc})
 print(f"IP地址：{received.psrc}，MAC地址：{received.hwsrc}")

# 将结果保存到文件中
with open('devices.txt', 'w') as file:
 for device in devices:
 file.write(f"IP地址：{device['ip']}，MAC地址：{device['mac']}\n")
```

首先，我们定义要扫描的网络地址，可以是一个具体的IP地址或一个网段。然后，我们创建ARP请求包和以太网包，并将它们组合成一个请求包。接着，我们使用srp函数发送请求并获取响应，函数的timeout参数表示等待响应的时间，verbose参数表示是否输出详细信息。最后，我们提取响应中的IP地址和MAC地址，将它们存储在一个列表中，并打印它们。同时，我们将结果保存到文件中，每个设备的IP地址和MAC地址占一行。