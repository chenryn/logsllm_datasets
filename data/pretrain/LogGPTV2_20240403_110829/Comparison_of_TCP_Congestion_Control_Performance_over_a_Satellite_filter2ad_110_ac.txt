Many TCP ﬂows stream video content and these may be capped by the
video rate, which itself depends upon the video encoding. However, assuming
videos are downloaded completely, about 90% of YouTube videos are less than
30 MBytes [7].
Figure 6 depicts the time on the y-axis (in seconds) to download an object for
the given size on the x-axis (in MBytes). The object size increment is 1 MByte.
Each point is the average time required by a algorithm to download an object
of the indicated size, shown with a 95% conﬁdence interval.
From the ﬁgure, for the smallest objects (1 MByte), Hybla and PCC down-
load the fastest, about 4 s, owning to the larger initial congestion windows they
both have (2.5x to 5x larger than either BBR or Cubic). In general, this larger
initial window means Hybla downloads small objects fastest followed by PCC
up to about 20 MBytes, then BBR and Cubic. After 20 MBytes, BBR down-
loads objects faster than PCC, perhaps because BBR exits its starting phase
later than does PCC – BBR exits when the delivery rate has not increased by
25% for 3 round-trip times and PCC exits when its utility function decreases.
For an average Web page download (5 MBytes), Hybla takes an average of about
4 s, PCC 7 s, BBR 10 s and Cubic 13 s. For 90% of all videos and the largest Web
pages (30 MBytes), Hybla takes about 8 s, BBR and PCC about twice that and
Cubic about thrice.
Table 5 presents the summary statistics for the ﬁrst 30 s of each ﬂow for each
algorithm. During start-up, Cubic has a low round-trip time, mostly because it
takes a long time to ramp up throughput. BBR has the highest round-trip time
despite not having the highest throughput – that is had by Hybla, despite having
a lower round-trip time than BBR. The relatively higher average round-trip time
for BBR may be because it keeps up to a bandwidth-delay product of packets
in queue. PCC has average throughputs and round-trip times, but the steadiest
TCP over a Satellite
509
Fig. 6. Download time versus download object size.
round-trip times, possibly stabilized by the utility function rather than probing
for increased data rates (and causing variable amounts of queuing) as do the
other algorithms.
Table 5. Start-up summary statistics.
Algorithm Tput (Mb/s)
RTT (ms)
Table 6. Startup throughput eﬀect
size (versus Cubic).
Mean Std Dev Mean Std Dev
t(158) p
Eﬀect Size
BBR
Cubic
Hybla
PCC
23.1
16.6
40.8
20.3
1.8
0.3
2.9
1.6
917
757
799
806
42.9
22.3
130.8
15.1
BBR 31.9 <.0001 5
Hybla 74.2 <.0001 12
PCC 20.3 <.0001 3.2
Table 6 is like Table 2, but for start-up (the ﬁrst 30 s). From the table, the
start-up throughput diﬀerences compared to Cubic are all statistically signiﬁ-
cant. The eﬀect sizes for comparing Cubic throughput to PCC, BBR and Hybla
throughputs are all very large.
4.5 Power
In addition to examining throughput and round-trip time separately, it has been
suggested that throughput and delay can be combined into a single “power”
metric by dividing throughput by delay [14] – the idea is that the utility of
higher throughput is oﬀset by higher delay and vice-versa. Doing power analysis
using the mean throughput (in Mb/s) and delay (in seconds) for each algorithm
for start-up and steady state yields the numbers in Table 7 (units are MBits).
The algorithm with the most power in each phase is indicated in bold.
510
S. Claypool et al.
Table 7. TCP Power – throughput ÷ delay
Algorithm Power (MBits)
Steady Start-up
BBR
Cubic
Hybla
PCC
145
150
136
164
25
22
51
25
During steady state, PCC is the most powerful based on high throughput
with the lowest round-trip times. Cubic is more powerful than BBR or Hybla
since it has good throughput and round-trip times, whereas BBR is deﬁcient in
throughput and Hybla in round-trip times.
At start-up, Hybla has the most power by far, primarily due to its high
throughput. BBR, Cubic and PCC are similar at about half the power of Hybla.
5 Conclusion
Satellite Internet connections are important for providing reliable connectivity,
but to date, there are few published research papers detailing TCP congestion
control performance over actual satellite networks.
This paper presents results from experiments on a commercial satellite net-
work, comparing four TCP congestion control algorithms – the two dominant
algorithms, Cubic and BBR, a commercial implementation of PCC, and the
satellite-tuned Hybla. These algorithms have diﬀerent approaches to congestion
control: loss-based (Cubic), bandwidth estimation-based (BBR), utility function-
based (PCC), and satellite-optimized (Hybla). Results from 80 downloads for
each protocol, interlaced so as to minimize temporal diﬀerences, provide for
steady state and start-up performance. Baseline satellite network results are
obtained by long-term round-trip analysis in the absence of our other traﬃc.
Overall, the production satellite link has consistent baseline round-trip times
near the theoretical minimum (about 600 ms) and very low (about 0.2%) loss
rates. For TCP downloads, during steady state, the four algorithms evaluated
– Cubic, BBR, Hybla and PCC – have similar median throughputs, but Hybla
and Cubic have slightly higher mean throughputs owing to BBR’s bitrate reduc-
tion when probing for minimal round-trip times (probing ∼10 s, each lasting for
∼1.5 s). During start-up, Hybla’s higher throughputs allow it to complete small
downloads (e.g., Web pages) about twice as fast as BBR (∼5 s versus ∼10),
while BBR is about 50% faster (∼10 s versus ∼15 s) than Cubic. Hybla is able to
avoid some of the high retransmission rates for Cubic and BBR, and to a lesser
extent PCC, caused by saturating the bottleneck queue. However, Hybla does
have consistently higher round-trip times, an artifact of continually having more
packets in the bottleneck queue, while PCC has the lowest. Combining through-
put and round-trip into one “power” metric shows PCC the most powerful at
TCP over a Satellite
511
steady state, owing to high throughput and steady, low round-trip times, and
Hybla the most powerful during start-up owing to fast throughput ramp-ups.
Future work includes evaluating settings for TCP, such as the initial conges-
tion window, and algorithm-speciﬁc settings such as RT T0 for Hybla. Since BBR
does not always share equitably with Cubic [9], future work is to run multiple
ﬂows over the satellite link. When BBR v2 is out of alpha/preview, we plan
to evaluate it, and QUIC [6], too. Other future work is to compare the algo-
rithms with a performance enhancing proxy (PEP), designed to mitigate the
high-latencies on the satellite link.
Acknowledgments. Thanks to Amit Cohen, Lev Gloukhenki and Michael Schapira
of Compira Labs for providing the implementation of PCC. Also, thanks to the anony-
mous reviewers and shepherd Srikanth Sundaresan for their thoughtful feedback on
improving our paper.
References
1. Arun, V., Balakrishnan, H.: Copa: practical delay-based congestion control for the
Internet. In: Proceedings of the Applied Networking Research Workshop, Montreal,
QC, Canada, July 2018
2. Association, S.I.: Introduction to the satellite industry (2020). https://tinyurl.com/
y5m7z77e
3. Barakat, C., Chaher, N., Dabbous, W., Altman, E.: Improving TCP/IP over geo-
stationary satellite links. In: Proceedings of GLOBECOM. Rio de Janeireo, Brazil,
December 1999
4. Caini, C., Firrincieli, R.: TCP Hybla: a TCP enhancement for heterogeneous net-
works. Int. J. Satell. Commun. Netw. 22(5), 547–566 (2004)
5. Cao, Y., Jain, A., Sharma, K., Balasubramanian, A., Gandhi, A.: When to use and
when not to use BBR: an empirical analysis and evaluation study. In: Proceedings
of the Internet Measurement Conference (IMC), Amsterdam, NL, October 2019
6. Cardwell, N., Cheng, Y., Yeganeh, S.H., Jacobson, V.: BBR congestion control.
IETF Draft draft-cardwell-iccrg-bbr-congestion-control-00, July 2017
7. Che, X., Ip, B., Lin, L.: A survey of current Youtube video characteristics. IEEE
Multimedia 22(2), 56–63 (2015)
8. Cisco: Interface and Hardware Component Conﬁguration Guide, Cisco IOS Release
15M&T. Cisco Systems, Inc. (2015). chapter: Rate Based Satellite Control Protocol
9. Claypool, S., Claypool, M., Chung, J., Li, F.: Sharing but not caring - performance
of TCP BBR and TCP CUBIC at the network bottleneck. In: Proceedings of the
15th IARIA Advanced International Conference on Telecommunications (AICT),
Nice, France, August 2019
10. Data and analysis: webpages are getting larger every year, and here’s why it mat-
ters. Solar Winds Pingdom, 15 November 2018. https://tinyurl.com/y4pjrvhl,
11. Dong, M., Li, Q., Zarchy, D., Godfrey, P.B., Schapira, M.: PCC: re-architecting
congestion control for consistent high performance. In: Proceedings of the 12th
USENIX Symposium on Networked Systems Design and Implementation (NSDI),
Oakland, CA, USA (2015)
12. Dong, M., et al.: PCC Vivace: online-learning congestion control. In: Proceedings of
the 15th USENIX Symposium on Networked Systems Design and Implementation
(NSDI), Renton, WA, USA, April 2018
512
S. Claypool et al.
13. Everts, T.: The average web page is 3 MB. how much should we care? Speed
Matters Blog, 9th August 2017. https://speedcurve.com/blog/web-performance-
page-bloat/
14. Floyd, S.: Metrics for the evaluation of congestion control mechanisms. RFC 5166,
March 2008
15. Ha, S., Rhee, I., Xu, L.: CUBIC: a new TCP-friendly high-speed TCP variant.
ACM SIGOPS Oper. Syst. Rev. 42(5), 64–74 (2008)
16. Cardwell, N., Cheng, Y., Gunn, C.S., Yeganeh, S.H., Jacobson, V.: BBR:
congestion-based congestion control. Commun. ACM 60(2), 58–66 (2017)
17. Obata, H., Tamehiro, K., Ishida, K.: Experimental evaluation of TCP-STAR for
satellite Internet over WINDS. In: Proceedings of the International Symposium on
Autonomous Decentralized Systems. Tokyo, Japan, March 2011
18. Utsumi, S., et al.: A new analytical model of TCP Hybla for satellite IP networks.
J. Netw. Comput. Appl. 124, 137–147 (2018)
19. Wang, Y., Zhao, K., Li, W., Fraire, J., Sun, Z., Fang, Y.: Performance Evaluation of
QUIC with BBR in Satellite Internet. In: Proceedings of the 6th IEEE International
Conference on Wireless for Space and Extreme Environments (WiSEE), Huntsville,
AL, USA, December 2018