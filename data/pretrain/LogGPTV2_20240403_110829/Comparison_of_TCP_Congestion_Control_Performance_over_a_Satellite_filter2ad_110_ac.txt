### Introduction

Many TCP flows stream video content, and these may be capped by the video rate, which is dependent on the video encoding. However, assuming videos are downloaded completely, approximately 90% of YouTube videos are less than 30 MBytes [7].

### Download Time Analysis

Figure 6 illustrates the time (in seconds) required to download an object of a given size (in MBytes). The object size increments by 1 MByte. Each point represents the average time required by an algorithm to download an object of the indicated size, with a 95% confidence interval.

For the smallest objects (1 MByte), Hybla and PCC download the fastest, taking about 4 seconds, due to their larger initial congestion windows (2.5x to 5x larger than BBR or Cubic). Generally, this larger initial window means Hybla downloads small objects fastest, followed by PCC up to about 20 MBytes, then BBR and Cubic. After 20 MBytes, BBR downloads objects faster than PCC, possibly because BBR exits its starting phase later—BBR exits when the delivery rate has not increased by 25% for 3 round-trip times, while PCC exits when its utility function decreases.

For an average web page download (5 MBytes), Hybla takes about 4 seconds, PCC takes 7 seconds, BBR takes 10 seconds, and Cubic takes 13 seconds. For 90% of all videos and the largest web pages (30 MBytes), Hybla takes about 8 seconds, BBR and PCC take about twice that, and Cubic takes about three times as long.

### Start-Up Summary Statistics

Table 5 presents the summary statistics for the first 30 seconds of each flow for each algorithm. During start-up, Cubic has a low round-trip time, primarily because it takes a long time to ramp up throughput. BBR has the highest round-trip time despite not having the highest throughput, which is achieved by Hybla. The relatively higher average round-trip time for BBR may be due to its strategy of maintaining a bandwidth-delay product of packets in queue. PCC has average throughputs and round-trip times but exhibits the steadiest round-trip times, possibly stabilized by its utility function rather than probing for increased data rates, which can cause variable queuing.

| Algorithm | Tput (Mb/s) | RTT (ms) |
|-----------|-------------|----------|
| BBR       | 23.1        | 917      |
| Cubic     | 16.6        | 757      |
| Hybla     | 40.8        | 799      |
| PCC       | 20.3        | 806      |

### Startup Throughput Effect

Table 6 compares the startup throughput differences relative to Cubic. All differences are statistically significant, with large effect sizes.

| Algorithm | Mean | Std Dev | t(158) | p | Effect Size |
|-----------|------|---------|--------|---|-------------|
| BBR       | 31.9 | 1.8     | <.0001 | 5 |
| Hybla     | 74.2 | 2.9     | <.0001 | 12 |
| PCC       | 20.3 | 1.6     | <.0001 | 3.2 |

### Power Analysis

Combining throughput and delay into a single "power" metric (throughput divided by delay) provides a comprehensive measure of performance. Table 7 shows the power for each algorithm during steady state and start-up.

| Algorithm | Steady State | Start-Up |
|-----------|--------------|----------|
| BBR       | 145          | 25       |
| Cubic     | 150          | 22       |
| Hybla     | 136          | 51       |
| PCC       | 164          | 25       |

During steady state, PCC is the most powerful, combining high throughput with the lowest round-trip times. Cubic is more powerful than BBR or Hybla, with good throughput and round-trip times. BBR is deficient in throughput, and Hybla in round-trip times.

At start-up, Hybla has the most power, primarily due to its high throughput. BBR, Cubic, and PCC have similar power, about half that of Hybla.

### Conclusion

Satellite Internet connections are crucial for reliable connectivity, but there are few published research papers detailing TCP congestion control performance over actual satellite networks. This paper presents results from experiments on a commercial satellite network, comparing four TCP congestion control algorithms: Cubic, BBR, PCC, and Hybla. These algorithms use different approaches: loss-based (Cubic), bandwidth estimation-based (BBR), utility function-based (PCC), and satellite-optimized (Hybla).

Results from 80 downloads for each protocol, interlaced to minimize temporal differences, provide steady-state and start-up performance. Baseline satellite network results show consistent round-trip times near the theoretical minimum (about 600 ms) and very low loss rates (about 0.2%).

Overall, during steady state, the four algorithms have similar median throughputs, but Hybla and Cubic have slightly higher mean throughputs. During start-up, Hybla's higher throughputs allow it to complete small downloads (e.g., web pages) about twice as fast as BBR, while BBR is about 50% faster than Cubic. Hybla avoids high retransmission rates but has consistently higher round-trip times. Combining throughput and round-trip into one "power" metric shows PCC as the most powerful at steady state, and Hybla as the most powerful during start-up.

Future work includes evaluating TCP settings, such as the initial congestion window, and algorithm-specific settings like RTT0 for Hybla. Additionally, future research will focus on running multiple flows over the satellite link and evaluating BBR v2 and QUIC. Comparing the algorithms with a performance-enhancing proxy (PEP) designed to mitigate high latencies on the satellite link is also planned.

### Acknowledgments

Thanks to Amit Cohen, Lev Gloukhenki, and Michael Schapira of Compira Labs for providing the implementation of PCC. Thanks also to the anonymous reviewers and shepherd Srikanth Sundaresan for their valuable feedback.

### References

[1] Arun, V., Balakrishnan, H.: Copa: practical delay-based congestion control for the Internet. In: Proceedings of the Applied Networking Research Workshop, Montreal, QC, Canada, July 2018

[2] Association, S.I.: Introduction to the satellite industry (2020). https://tinyurl.com/y5m7z77e

[3] Barakat, C., Chaher, N., Dabbous, W., Altman, E.: Improving TCP/IP over geostationary satellite links. In: Proceedings of GLOBECOM. Rio de Janeiro, Brazil, December 1999

[4] Caini, C., Firrincieli, R.: TCP Hybla: a TCP enhancement for heterogeneous networks. Int. J. Satell. Commun. Netw. 22(5), 547–566 (2004)

[5] Cao, Y., Jain, A., Sharma, K., Balasubramanian, A., Gandhi, A.: When to use and when not to use BBR: an empirical analysis and evaluation study. In: Proceedings of the Internet Measurement Conference (IMC), Amsterdam, NL, October 2019

[6] Cardwell, N., Cheng, Y., Yeganeh, S.H., Jacobson, V.: BBR congestion control. IETF Draft draft-cardwell-iccrg-bbr-congestion-control-00, July 2017

[7] Che, X., Ip, B., Lin, L.: A survey of current YouTube video characteristics. IEEE Multimedia 22(2), 56–63 (2015)

[8] Cisco: Interface and Hardware Component Configuration Guide, Cisco IOS Release 15M&T. Cisco Systems, Inc. (2015). Chapter: Rate Based Satellite Control Protocol

[9] Claypool, S., Claypool, M., Chung, J., Li, F.: Sharing but not caring - performance of TCP BBR and TCP CUBIC at the network bottleneck. In: Proceedings of the 15th IARIA Advanced International Conference on Telecommunications (AICT), Nice, France, August 2019

[10] Data and analysis: webpages are getting larger every year, and here’s why it matters. Solar Winds Pingdom, 15 November 2018. https://tinyurl.com/y4pjrvhl

[11] Dong, M., Li, Q., Zarchy, D., Godfrey, P.B., Schapira, M.: PCC: re-architecting congestion control for consistent high performance. In: Proceedings of the 12th USENIX Symposium on Networked Systems Design and Implementation (NSDI), Oakland, CA, USA (2015)

[12] Dong, M., et al.: PCC Vivace: online-learning congestion control. In: Proceedings of the 15th USENIX Symposium on Networked Systems Design and Implementation (NSDI), Renton, WA, USA, April 2018

[13] Everts, T.: The average web page is 3 MB. How much should we care? Speed Matters Blog, 9th August 2017. https://speedcurve.com/blog/web-performance-page-bloat/

[14] Floyd, S.: Metrics for the evaluation of congestion control mechanisms. RFC 5166, March 2008

[15] Ha, S., Rhee, I., Xu, L.: CUBIC: a new TCP-friendly high-speed TCP variant. ACM SIGOPS Oper. Syst. Rev. 42(5), 64–74 (2008)

[16] Cardwell, N., Cheng, Y., Gunn, C.S., Yeganeh, S.H., Jacobson, V.: BBR: congestion-based congestion control. Commun. ACM 60(2), 58–66 (2017)

[17] Obata, H., Tamehiro, K., Ishida, K.: Experimental evaluation of TCP-STAR for satellite Internet over WINDS. In: Proceedings of the International Symposium on Autonomous Decentralized Systems. Tokyo, Japan, March 2011

[18] Utsumi, S., et al.: A new analytical model of TCP Hybla for satellite IP networks. J. Netw. Comput. Appl. 124, 137–147 (2018)

[19] Wang, Y., Zhao, K., Li, W., Fraire, J., Sun, Z., Fang, Y.: Performance Evaluation of QUIC with BBR in Satellite Internet. In: Proceedings of the 6th IEEE International Conference on Wireless for Space and Extreme Environments (WiSEE), Huntsville, AL, USA, December 2018