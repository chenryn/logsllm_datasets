User: 如何使用Ansible自动化工具快速部署和配置服务器环境？请提供详细的Ansible脚本示例。
Assistant: Ansible是一种自动化工具，可以简化服务器环境的管理和配置。使用Ansible可以自动化整个部署过程，从而减少了手动操作的错误和时间成本。

以下是一个简单的Ansible脚本示例，用于在Ubuntu服务器上安装Apache和PHP。

1. 首先，您需要安装Ansible。在Ubuntu系统上，可以使用以下命令安装。

   ```
   $ sudo apt update
   $ sudo apt install ansible
   ```

2. 创建一个名为"webserver"的Ansible主机清单文件。

   ```
   [webserver]
   server1 ansible_host=192.168.1.100 ansible_user=ubuntu
   server2 ansible_host=192.168.1.101 ansible_user=ubuntu
   ```

   在这个例子中，我们有两个服务器（server1和server2），它们的IP地址分别是192.168.1.100和192.168.1.101，都是使用用户名"ubuntu"进行SSH登录的。

3. 创建一个Ansible Playbook文件，用于自动化配置服务器。

   ```
   ---
   - hosts: webserver
     vars:
       http_port: 80
       php_version: "7.2"
     become: yes
     tasks:
     - name: Install Apache2
       apt: name=apache2 state=present update_cache=yes
     - name: Install PHP
       apt: name=php{{ php_version }} php{{ php_version }}-cli php{{ php_version }}-mysql libapache2-mod-php{{ php_version }} state=present update_cache=yes
     - name: Start Apache2 service
       systemd:
         name: apache2
         state: started
         enabled: yes
     - name: Modify Apache2 port
       replace:
         path: /etc/apache2/ports.conf
         regexp: 'Listen 80'
         replace: 'Listen {{ http_port }}'
       notify:
         - restart Apache2 service
     handlers:
       - name: restart Apache2 service
         systemd:
           name: apache2
           state: restarted
   ```

   在这个Playbook中，我们定义了以下任务：

   - 安装Apache2和PHP。
   - 启动Apache2服务。
   - 修改Apache2的端口，将默认端口80修改为http_port变量定义的端口。
   - 如果Apache2的配置文件被修改，则重启Apache2服务。

4. 运行Playbook

   ```
   $ sudo ansible-playbook -i hosts webserver.yml
   ```

   这将自动配置您的服务器以安装Apache和PHP。

   Ansible可以自动化许多其他任务，例如安装软件包，更新配置文件，并确保服务器配置与所需的规范一致。通过编写正确的Playbook，您可以轻松地自动化大量常见的服务器管理任务，从而使服务器环境部署更加高效。