3-319-63688-7{_}11
[5] Lorenz Breidenbach, Phil Daian, Floriantra Er, and Ari Juels. 2018. Enter the
Hydra: Towards Principled Bug Bounties and Exploit-Resistant Smart Contracts.
In 27th USENIX Security Symposium (USENIX Security 18). 1335–1352. https:
//thehydra.io/paper.pdf
[6] Miguel Castro and Barbara Liskov. 1999. Practical Byzantine Fault Tolerance. In
Proceedings of the Third Symposium on Operating Systems Design and Implemen-
tation. 173–186. https://doi.org/10.1.1.17.7523 arXiv:arXiv:1203.6049v1
[7] Gaby G. Dagher, Benedikt Bünz, Joseph Bonneau, Jeremy Clark, and Dan Boneh.
2015. Provisions: Privacy-preserving proofs of solvency for Bitcoin exchanges. In
Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications
Security - CCS ’15. ACM Press, New York, New York, USA, 720–731. https:
//doi.org/10.1145/2810103.2813674
[8] Philip Daian, Steven Goldfeder, Tyler Kell, Yunqi Li, Xueyuan Zhao, Iddo Bentov,
Lorenz Breidenbach, and Ari Juels. 2019. Flash Boys 2.0: Frontrunning, Transac-
tion Reordering, and Consensus Instability in Decentralized Exchanges. (2019).
arXiv:1904.05234 http://arxiv.org/abs/1904.05234
[9] Bernardo David, Peter Gaži, Aggelos Kiayias, and Alexander Russell. 2018.
Ouroboros Praos: An Adaptively-Secure, Semi-synchronous Proof-of-Stake
Blockchain. In Advances in Cryptology - EUROCRYPT 2018, Jesper Buus Nielsen
and Vincent Rijmen (Eds.), Vol. 46. Springer International Publishing, Cham,
66–98. https://doi.org/10.1007/978-3-319-78375-8_3
[15] Shane Frederick, George Loewenstein, and Ted O’Donoghue. 2002. Time Dis-
counting and Time Preference: A Critical Review. Journal of Economic Literature
40, 2 (2002), 351–401. http://www.jstor.org/stable/2698382
[16] Sebastian Gajek. 2018.
Graded Token-Curated Decisions with Up-
/Downvoting. https://medium.com/coinmonks/graded-token-curated-decisions-
with-up-downvoting-designing-cryptoeconomic-ranking-and-2ce7c000bb51
[17] Juan Garay, Aggelos Kiayias, and Nikos Leonardos. 2015. The bitcoin backbone
protocol: Analysis and applications. In Advances in Cryptology-EUROCRYPT
2015. Springer, 281–310. http://courses.cs.washington.edu/courses/cse454/15wi/
papers/bitcoin-765.pdf
[18] Arthur Gervais, Ghassan O Karame, Karl Wüst, Vasileios Glykantzis, Hubert
Ritzdorf, and Srdjan Capkun. 2016. On the security and performance of proof of
work blockchains. In Proceedings of the 2016 ACM SIGSAC Conference on Computer
and Communications Security. ACM, 3–16.
[19] Arthur Gervais, Hubert Ritzdorf, Ghassan O Karame, and Srdjan Capkun. 2015.
Tampering with the delivery of blocks and transactions in bitcoin. In Proceedings
of the 22nd ACM SIGSAC Conference on Computer and Communications Security.
ACM, 692–705.
[20] Dominik Harz and Magnus Boman. 2019. The Scalability of Trustless Trust. In 2nd
Workshop on Trusted Smart Contracts (Financial Cryptography and Data Security).
279–293. https://doi.org/10.1007/978-3-662-58820-8_19 arXiv:1801.09535
[21] Ethan Heilman, Alison Kendler, Aviv Zohar, and Sharon Goldberg. 2015. Eclipse
Attacks on Bitcoin’s Peer-to-Peer Network. In 24th USENIX Security Symposium
(USENIX Security 15). 129–144. https://www.usenix.org/system/files/conference/
usenixsecurity15/sec15-paper-heilman.pdf
[22] Ferry Hendrikx, Kris Bubendorfer, and Ryan Chard. 2015. Reputation systems:
A survey and taxonomy. J. Parallel and Distrib. Comput. 75 (jan 2015), 184–197.
https://doi.org/10.1016/j.jpdc.2014.08.004
[23] Audun Jøsang, Roslan Ismail, and Colin Boyd. 2007. A survey of trust and
reputation systems for online service provision. Decision Support Systems 43, 2
(mar 2007), 618–644. https://doi.org/10.1016/j.dss.2005.05.019
[24] Harry Kalodner, Steven Goldfeder, Xiaoqi Chen, S Matthew Weinberg, and Ed-
ward W Felten. 2018. Arbitrum: Scalable, private smart contracts. In Proceedings
of the 27th USENIX Conference on Security Symposium. USENIX Association,
1353–1370.
[25] Sepandar D Kamvar, Mario T Schlosser, and Hector Garcia-Molina. 2003. The
Eigentrust algorithm for reputation management in P2P networks. In Proceedings
of the twelfth international conference on World Wide Web - WWW ’03. ACM Press,
New York, New York, USA, 640. https://doi.org/10.1145/775152.775242
[26] Rami Khalil and Arthur Gervais. 2017. Revive: Rebalancing Off-Blockchain
Payment Networks. Cryptology ePrint Archive, Report 2017/823. http://eprint.
iacr.org/2017/823.pdf Accessed:2017-09-26.
[27] Rami Khalil, Arthur Gervais, and Guillaume Felley. 2018. NOCUST–A Securely
Scalable Commit-Chain. IACR Cryptology ePrint Archive 2018 (2018), 642.
[28] Rami Khalil, Arthur Gervais, and Guillaume Felley. 2019. TEX-A Securely Scalable
Trustless Exchange. IACR Cryptology ePrint Archive 2019 (2019), 265.
[29] Ahmed Kosba, Andrew Miller, Elaine Shi, Zikai Wen, and Charalampos Papa-
manthou. 2016. Hawk: The blockchain model of cryptography and privacy-
preserving smart contracts. In Symposium on Security & Privacy. IEEE. http:
//eprint.iacr.org/2015/675.pdf
[30] Ranjit Kumaresan and Iddo Bentov. 2014. How to use bitcoin to incentivize
correct computations. In Proceedings of the 2014 ACM SIGSAC Conference on
Computer and Communications Security. ACM, 30–41. http://www.cs.technion.
ac.il/~idddo/incentivesBitcoin.pdf
[31] Yoad Lewenberg, Yoram Bachrach, Yonatan Sompolinsky, Aviv Zohar, and Jef-
frey S Rosenschein. 2015. Bitcoin Mining Pools: A Cooperative Game Theoretic
Analysis Categories and Subject Descriptors. Proceedings of the 14th International
Conference on Autonomous Agents and Multiagent Systems (AAMAS 2015) (2015),
919–927.
[32] Orfeas Stefanos Thyfronitis Litos and Dionysis Zindros. 2017. Trust Is Risk: A
Decentralized Financial Trust Platform. (2017), 156 pages.
[33] Loi Luu, Jason Teutsch, Raghav Kulkarni, and Prateek Saxena. 2015. Demystifying
incentives in the consensus computer. In Proceedings of the 22nd ACM SIGSAC
Conference on Computer and Communications Security. ACM, 706–719. http:
//www.comp.nus.edu.sg/~prateeks/papers/VeriEther.pdf
[34] Trent McConaghy. 2018. The Layered TCR. https://blog.oceanprotocol.com/the-
layered-tcr-56cc5b4cdc45
[35] P McCorry, S Bakshi, I Bentov, Andrew Miller, and ... 2018. Pisa: Arbitration
Outsourcing for State Channels. (2018). https://www.cs.cornell.edu/{~}iddo/pisa.
pdf
[36] Patrick McCorry, Alexander Hicks, and Sarah Meiklejohn. 2018. Smart Con-
tracts for Bribing Miners. In Financial Cryptography and Data Security. FC 2018.,
Vol. 10958. Springer Berlin Heidelberg, 3–18. https://doi.org/10.1007/978-3-662-
58820-8_1
[37] Mike Goldin. 2017. Token-Curated Registries 1.0. (2017), 10 pages. https://
medium.com/@ilovebagels/token-curated-registries-1-0-61a232f8dac7
[38] Andrew Miller, Yu Xia, Kyle Croman, Elaine Shi, and Dawn Song. 2016. The
honey badger of BFT protocols. In Proceedings of the 2016 ACM SIGSAC Conference
on Computer and Communications Security. ACM, 31–42.
[39] Moore, Tyler and Christin, Nicolas. 2013. Beware the middleman: Empirical
analysis of Bitcoin-exchange risk. In International Conference on Financial Cryp-
tography and Data Security. Springer, 25–33.
[40] Satoshi Nakamoto. 2008. Bitcoin: A Peer-to-Peer Electronic Cash System. https:
//bitcoin.org/bitcoin.pdf. https://bitcoin.org/bitcoin.pdf Accessed: 2015-07-01.
[41] Noam Nisan, Tim Roughgarden, Eva Tardos, and Vijay V. Vazirani. 2007. Al-
gorithmic Game Theory. Vol. 1. Cambridge University Press, Cambridge. 1–754
pages. https://doi.org/10.1017/CBO9780511800481 arXiv:0907.4385
[42] Rafael Pass, Lior Seeman, and Abhi Shelat. 2017. Analysis of the Blockchain
Protocol in Asynchronous Networks. In Advances in Cryptology - EUROCRYPT
2017, Vol. 10211. 643–673. https://doi.org/10.1007/978-3-319-56614-6_22
[43] Isaac Pinyol and Jordi Sabater-Mir. 2013. Computational trust and reputation
models for open multi-agent systems: A review. Artificial Intelligence Review 40,
1 (2013), 1–25. https://doi.org/10.1007/s10462-011-9277-z
[44] Joseph Poon and Thaddeus Dryja. 2016. The bitcoin lightning network. https:
//lightning.network/lightning-network-paper.pdf. https://lightning.network/
lightning-network-paper.pdf Accessed: 2016-07-07.
[45] Achill Rudolph. 2018. Ranking Token Curated Registries. https://medium.com/
coinmonks/ranking-token-curated-registries-e9a92dc85b31
[46] Tuomas W. Sandholm and Victor R. Lesser. 2001. Leveled Commitment Contracts
and Strategic Breach. Games and Economic Behavior 35, 1-2 (2001), 212–270.
https://doi.org/10.1006/game.2000.0831
[47] Tendermint. 2016. Introduction to Tendermint - Tendermint. https://tendermint.
[48] Jason Teutsch and Christian Reitwießner. 2017. A scalable verification solution
for blockchains. (2017), 44 pages.
[49] Petar Tsankov, Andrei Dan, Dana Drachsler-Cohen, Arthur Gervais, Florian
Buenzli, and Martin Vechev. 2018. Securify: Practical security analysis of smart
contracts. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and
Communications Security. ACM, 67–82.
[50] Gavin Wood. 2014. Ethereum: a secure decentralised generalised transaction
ledger. (2014), 32 pages.
com/intro
Publishing.
[51] Michael Wooldridge. 2009. An Introduction to MultiAgent Systems (2nd ed.). Wiley
[52] Jiangshan Yu, David Kozhaya, Jeremie Decouchant, and Paulo Verissimo. 2019.
IEEE Trans. Comput. (2019), 1–1.
RepuCoin: Your Reputation is Your Power.
https://doi.org/10.1109/TC.2019.2900648
[53] Alexei Zamyatin, Dominik Harz, Joshua Lind, Panayiotis Panayiotou, Arthur
Gervais, and William J. Knottenbelt. 2019. XCLAIM: Trustless, Interoperable,
Cryptocurrency-Backed Assets. In Proceedings of the IEEE Symposium on Security
& Privacy, May 2019. 1254–1271. https://doi.org/10.1109/SP.2019.00085
[54] Fan Zhang, Ethan Cecchetti, Kyle Croman, Ari Juels, and Elaine Shi. 2016. Town
Crier: An Authenticated Data Feed for Smart Contracts. In Proceedings of the
2016 ACM SIGSAC Conference on Computer and Communications Security. ACM,
270–282. https://eprint.iacr.org/2016/168.pdf
[55] Guy Zyskind, Oz Nathan, and Alex Pentland. 2015. Enigma: Decentralized
computation platform with guaranteed privacy. arXiv preprint arXiv:1506.03471.
https://arxiv.org/pdf/1506.03471.pdf Accessed: 2017-08-22.
A CRYPTOECONOMIC PROTOCOLS
Figure 6: A cryptoeconomic protocol consists of three states.
(1) an agent commits to the fulfilment of a specification ϕ.
(2) the agent executes an action that either evaluates to true
or false w.r.t. the specification. (3) the protocol is concluded
by rewarding or punishing the agent for its action.
B INCENTIVE PROOFS
The rational agent type Tr needs to decide which action to perform
at the highest layer. From Figure 3, we see that at the highest layer
the agent has either the choice to perform the desired action which
results in a utility of p − cA − E[rD3] or an undesired action which
is equivalent to a utility of v − cA − E[rD3] − D3. In this simplified
figure, there are three layers. However, we can generalise this by
assuming ω layers. By Definition 4, the rational type cannot come
to a decision just considering these two utility functions. Reaching
a decision requires Tr to consider several time-steps. By integrating
Balance, we transform the decision process into a sequential game.
B.1 Decision boundary for type Tr
The total utility received by an agent performing desired actions in
the highest layer, for a sequence that lasts t = ω rounds, is expressed
by:
(cid:19)
ω−1(cid:88)
t=0
uA =
(cid:19)t(cid:18)
(cid:18) δ
(cid:18) ω−1(cid:88)
1 + r
p − cA − E[rDω]
(24)
∞(cid:88)
γ =0
Summing over cycles to infinity yields the following expression
(τ swapped for t to express ‘within’ cycle time):
uA =
( δ
1 + r
)γ ω
( δ
1 + r
τ =0
)τ (p − cA − E[rDω])
(25)
The total utility corresponding to an agent who commits an
undesired action in the highest layer ω, followed by ω − 1 desired
(cid:19)
InitCom-mittedCon-cludedExecutedcommit to Aexecute desired actionexecute undesired actionexecute paymentexecute punishmentCon-cludedExecutedDesired outcomeUndesired outcome12a2b3a3bProof. First, we equate (24) and (26) characterizing the decision
boundary. Next, we set Dω = fω Dbase and Dt = ft Dbase (where t
and m are are substitutes for a single cycle). This leaves us with the
following equality.
(cid:19)
(cid:18) δ
ω−1(cid:88)
(cid:18) δ
ω−1(cid:88)
t=0
+
(cid:19)t(cid:18)
(cid:19)t(cid:18)
1 + r
t=1
p − cA − E[r fω Dbase]
= v − cA − E[r fω Dbase] − (fω Dbase)
1 + r
p − cA − E[r ft Dbase]
(cid:19)
(31)
We assume that the agent is able to progress to the next layer
after every time step t. Also, we apply our initial assumptions that
p − cA for performing a desired action is 0, and that cA for the
undesired action is 0. We then simplify (31).
(cid:19)t(cid:18)
(cid:18) δ
1 + r
ω−1(cid:88)
t=1
= v − fω Dbase +
(cid:19)
− E[r fω Dbase]
(cid:19)t(cid:18)
(cid:18) δ
ω−1(cid:88)
(cid:18) δ
(cid:19)t(cid:18)
ω−1(cid:88)
1 + r
t=1
1 + r
t=1
− E[r ft Dbase]
E[rDbase(ft − fω)]
(cid:19)
(cid:19)
(32)
(33)
γ =0
∞(cid:88)
ω−1(cid:88)
(cid:18)
τ =1
+
actions to return to that layer, can be expressed as a sequence with
t = ω rounds as follows. We express the deposit D of layer Lm ∈ L
at time t with Dt .
uA = v − cA − E[rDω] − Dω +
p − cA − E[rDt ]
(26)
Summing over cycles to infinity yields the following expression
(τ swapped for t to express ‘within’ cycle time):
(cid:19)t(cid:18)
(cid:18) δ
1 + r
ω−1(cid:88)
t=1
(cid:18)
uA =
( δ
1 + r
)γ ω
v − cA − Dω − E[rDω]
(cid:19)
( δ
1 + r
)τ (p − cA − E[rDτ ])
(cid:19)
(27)
The decision boundary for agents of type Tr is found by equating
equations (25) and (27). This is as follows.
∞(cid:88)
γ =0
( δ
1 + r
ω−1(cid:88)
∞(cid:88)
τ =1