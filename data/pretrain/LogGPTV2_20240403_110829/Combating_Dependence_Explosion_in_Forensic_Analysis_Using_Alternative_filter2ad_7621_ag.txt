audit logs.
X. Conclusions
In this paper, we presented a new approach for fast and accurate
reconstruction of APT campaigns. It relied on two new techniques,
tag attenuation and tag decay, to mitigate the dependence explosion
problem. Our experimental evaluation demonstrates that our
approach is highly effective in automatic detection of stealthy
APT-style campaigns in real-time. Our techniques cut down false
alarms by over an order of magnitude, while yielding compact
scenario graphs that were smaller by a factor of 35x on average.
Starting from logs containing many millions of events, these graphs
pick out just a few dozen events representing an attacker’s activities.
1152
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:02:08 UTC from IEEE Xplore.  Restrictions apply. 
References
[1] Actions Taken by Equifax and Federal Agencies in Response to the 2017
Breach. https://www.gao.gov/assets/700/694158.pdf.
[2] APT Notes. https://github.com/kbandla/APTnotes. Accessed: 2016-11-10.
[3] DARPA transparent
release.
https://github.com/darpa-i2o/Transparent-Computing/. Accessed: 2019-1-14.
engagement
computing
3
data
[4] FreeBSD DTrace. https://wiki.freebsd.org/DTrace/. Accessed: 2019-5-1.
[5]
IBM QRadar SIEM. https://www.ibm.com/us-en/marketplace/ibm-qradar-
siem.
IBM X-Force Threat Intelligence Index. https://www.ibm.com/security/data-
breach/threat-intelligence. Accessed: 2019-3-7.
[6]
[7] Logrhythm, the security intelligence company. https://logrhythm.com/.
[8] MANDIANT: Exposing One of China’s Cyber Espionage Units.
https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-
apt1-report.pdf. Accessed: 2016-11-10.
[9] The opm data breach: How the government jeopardized our national security
for more than a generation. https://oversight.house.gov/report/opm-data-
breach-govern ment-jeopardized-national-security-generation/.
[10] SIEM, AIOps, Application Management, Log Management, Mach ine
Learning, and Compliance. https://www.splunk.com/.
[11] Source: Deloitte Breach Affected All Company Email, Admin Accounts.
affected-all-
https://krebsonsecurity.com/2017/09/source-deloitte-breach-
company-email-admin-accounts/.
[12] Mart´ın Abadi, Mihai Budiu, ´Ulfar Erlingsson, and Jay Ligatti. Control-flow
integrity principles, implementations, and applications. ACM Transactions
on Information and System Security (TISSEC), 2009.
[13] Chloe Albanesius.
Target
http://www.pcmag.com/article2/0,2817,2454977,00.asp, 2014.
accessed 16-February-2017].
Ignored Data Breach Warning Signs.
[Online;
[14] Steven Arzt, Siegfried Rasthofer, Christian Fritz, Eric Bodden, Alexandre
Bartel, Jacques Klein, Yves Le Traon, Damien Octeau, and Patrick McDaniel.
Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware
taint analysis for android apps. SIGPLAN Not., 2014.
[15] Sandeep Bhatkar, Abhishek Chaturvedi, and R. Sekar. Dataflow anomaly
detection. In IEEE Security and Privacy, 2006.
[16] Sandeep Bhatkar, Daniel C. DuVarney, and R. Sekar. Address obfuscation:
an efficient approach to combat a board range of memory error exploits. In
USENIX Security Symposium, 2003.
[17] Lorenzo Cavallaro, Prateek Saxena, and R Sekar. Anti-taint-analysis:
Practical evasion techniques against information flow based malware defense.
Technical report, Secure Systems Lab at Stony Brook University, 2007.
[18] Herv´e Debar and Andreas Wespi. Aggregation and correlation of
intrusion-detection alerts. In RAID. Springer, 2001.
[19] Henry Hanping Feng, Oleg M Kolesnikov, Prahlad Fogla, Wenke Lee, and
Weibo Gong. Anomaly detection using call stack information. In IEEE
Security and Privacy, 2003.
[20] Stephanie Forrest, Steven Hofmeyr, Anil Somayaji, and Thomas Longstaff.
A sense of self for unix processes. In IEEE Security and Privacy, 1996.
[21] Debin Gao, Michael K Reiter, and Dawn Song. Gray-box extraction of
execution graphs for anomaly detection. In ACM CCS, 2004.
[22] Peng Gao, Xusheng Xiao, Ding Li, Zhichun Li, Kangkook Jee, Zhenyu
Wu, Chung Hwan Kim, Sanjeev R Kulkarni, and Prateek Mittal. SAQL: A
stream-based query system for real-time abnormal system behavior detection.
In USENIX Security Symposium, 2018.
[23] Peng Gao, Xusheng Xiao, Zhichun Li, Fengyuan Xu, Sanjeev R Kulkarni,
and Prateek Mittal. AIQL: Enabling efficient attack investigation from
system monitoring data. In USENIX ATC, 2018.
[24] Ashish Gehani and Dawood Tariq. Spade: support for provenance auditing
in distributed environments. In International Middleware Conference, 2012.
[25] Ashvin Goel, W-C Feng, David Maier, and Jonathan Walpole. Forensix: A
robust, high-performance reconstruction system. In 25th IEEE International
Conference on Distributed computing systems workshops, 2005.
[26] Ashvin Goel, Kenneth Po, Kamran Farhadi, Zheng Li, and Eyal de Lara. The
Taser intrusion recovery system. In SOSP, 2005.
[28] N. Hasabnis, A. Misra, and R. Sekar. Light-weight bounds checking. In
Code Generation and Optimization, 2012.
[29] Wajih Ul Hassan, Shengjian Guo, Ding Li, Zhengzhang Chen, Kangkook
Jee, Zhichun Li, and Adam Bates. Nodoze: Combatting threat alert fatigue
with automated provenance triage. In NDSS, 2019.
[30] Md Nahid Hossain, Sadegh M. Milajerdi, Junao Wang, Birhanu Eshete, Rigel
Gjomemo, R. Sekar, Scott Stoller, and V.N. Venkatakrishnan. SLEUTH:
Real-time attack scenario reconstruction from COTS audit data. In USENIX
Security, 2017.
[31] Md Nahid Hossain, Junao Wang, R Sekar, and Scott D Stoller. Dependence
In USENIX
preserving data compaction for scalable forensic analysis.
Security, 2018.
[32] Yang Ji, Sangho Lee, Evan Downing, Weiren Wang, Fazzini Mattia, Taesoo
Kim, Alessandro Orso, and Wenke Lee. Rain: Refinable attack investigation
with on-demand inter-process information flow tracking. In ACM CCS, 2017.
[33] Yang Ji, Sangho Lee, Mattia Fazzini, Joey Allen, Evan Downing, Taesoo
Kim, Alessandro Orso, and Wenke Lee. Enabling refinable cross-host attack
In USENIX
investigation with efficient data flow tagging and tracking.
Security, 2018.
[34] Klaus Julisch. Clustering intrusion detection alarms to support root cause
analysis. Transactions on Information and System Security (TISSEC), 2003.
[35] Vasileios P. Kemerlis, Georgios Portokalidis, Kangkook Jee, and Angelos D.
Keromytis. Libdft: Practical Dynamic Data Flow Tracking for Commodity
Systems. SIGPLAN Not., 2012.
[36] Samuel T. King and Peter M. Chen. Backtracking intrusions. In SOSP, 2003.
[37] Samuel T. King, Zhuoqing Morley Mao, Dominic G. Lucchetti, and Peter M.
Chen. Enriching intrusion alerts through multi-host causality. In NDSS, 2005.
[38] Calvin Ko, Manfred Ruschitzka, and Karl Levitt. Execution monitoring
of security-critical programs in distributed systems: A specification-based
approach. In IEEE Security and Privacy, 1997.
[39] Clemens Kolbitsch, Paolo Milani Comparetti, Christopher Kruegel, Engin
Kirda, Xiao-yong Zhou, and XiaoFeng Wang. Effective and efficient
malware detection at the end host. In USENIX Security, 2009.
[40] Christopher Kruegel, Fredrik Valeur, and Giovanni Vigna. Intrusion detection
and correlation: challenges and solutions. Springer Science & Business
Media, 2005.
[41] Christopher Kruegel and Giovanni Vigna. Anomaly detection of web-based
attacks. In ACM CCS, 2003.
[42] S. Kumar and E. Spafford. A pattern-matching model for intrusion detection.
In National Computer Security Conference, 1994.
[43] Volodymyr Kuznetsov, L´aszl´o Szekeres, Mathias Payer, George Candea,
R Sekar, and Dawn Song. Code-pointer integrity. In Operating Systems
Design and Implementation, 2014.
[44] Yonghwi Kwon, Dohyeong Kim, William Nick Sumner, Kyungtae Kim,
Brendan Saltaformaggio, Xiangyu Zhang, and Dongyan Xu. Ldx: Causality
inference by lightweight dual execution. ASPLOS, 2016.
[45] Yonghwi Kwon, Fei Wang, Weihang Wang, Kyu Hyung Lee, Wen-Chuan
Lee, Shiqing Ma, Xiangyu Zhang, Dongyan Xu, Somesh Jha, Gabriela
Ciocarlie, Ashish Gehani, and Vinod Yegneswaran. Mci: Modeling-based
causality inference in audit logging for attack investigation. In NDSS, 2018.
[46] Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. High accuracy attack
provenance via binary-based execution partition. In NDSS, 2013.
[47] Wenke Lee, Salvatore J Stolfo, and Kui W Mok. A data mining framework
for building intrusion detection models. In IEEE Security and Privacy, 1999.
[48] Lixin Li, Jim Just, and R. Sekar. Address-space randomization for windows
systems. In Annual Computer Security Applications Conference (ACSAC),
2006.
[49] Ninghui Li, Ziqing Mao, and Hong Chen. Usable Mandatory Integrity
Protection for Operating Systems . In S&P. IEEE, 2007.
[50] Zhenkai Liang, Weiqing Sun, V. N. Venkatakrishnan, and R. Sekar. Alcatraz:
An Isolated Environment for Experimenting with Untrusted Software. In
ACM TISSEC, 2009.
[51] Yushan Liu, Mu Zhang, Ding Li, Kangkook Jee, Zhichun Li, Zhenyu Wu,
Junghwan Rhee, and Prateek Mittal. Towards a timely causality analysis
for enterprise security. In NDSS, 2018.
[27] Guofei Gu, Phillip A Porras, Vinod Yegneswaran, Martin W Fong, and
Wenke Lee. Bothunter: Detecting malware infection through ids-driven
dialog correlation. In USENIX Security Symposium, 2007.
[52] Shiqing Ma, Juan Zhai, Fei Wang, Kyu Hyung Lee, Xiangyu Zhang, and
Dongyan Xu. MPI: Multiple perspective attack investigation with semantic
aware execution partitioning. In USENIX Security, 2017.
1153
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:02:08 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 12: Browser extension. The attack started when a vulnerable browser-plugin pass mgr got compromised while visiting a malicious website. This raised MemExec
alarms. Next, the compromised plug-in downloaded a program gtcache and executed it, resulting in a F ileExec alarm. In turn, gtcache downloaded and executed ztmp.
Both programs performed recon to collect and exfiltrate sensitive information to the network, resulting in several DataLeak alarms. Tracing back from these alarms,
MORSE identified pass mgr as the entry point. A forward analysis from this node yielded the above scenario graph.
Fig. 13: User-level rootkit. This attack takes advantage of a user-level rootkit, in the form of a shared library libselinux.so, which had been installed on the victim host
prior to the start of the engagement. During the engagement, the attacker accessed this rootkit to exfiltrate /etc/shadow to a remote IP address, raising a DataLeak alarm.
This was the sole indication of unusual behavior in the audit data, thus making this the most stealthy attack in our dataset. The attacker, possibly after using password
cracking on this shadow file, obtains access to a second machine via ssh. Since the sole alarm was generated by a bash process, we marked it suspicious, and performed
a forward analysis from there. Since the resulting graph was large, we refined the forward analysis to follow only process creation and execution edges to yield the above
graph. Note that the attacker ran several commands to collect sensitive data, such as tcpdump, ifconfig, and ps. Other notable commands include clear console and chsh.
On the second machine, since a suspect process from the first machine connected to it, the target process (sshd) was marked as a suspect subject by MORSE. The scenario
graph originating from this sshd process has been shown together with the scenario graph generated on the first host, with the network connection indicated with a dashed line.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:02:08 UTC from IEEE Xplore.  Restrictions apply. 
1154
O:/lib64/ld-linux-x86-64.so.2S:/etc/firefox/native-messaging-hosts/pass_mgr /home/admin/.mozilla/native-messaging-hosts/pass_mgr.jsonLDO:IP:3d8245e8:80WRO:Pipe[114-115]WRCRTMEMCRTMPRATRS:/bin/sh -c 2E2F6774636163686520263E2F6465762F6E756C6C2026CLNO:/etc/firefox/native-messaging-hosts/gtcacheWRCRTO:Pipe[86-113]RDRDS:firefoxRDSUCLNS:./gtcacheCLNS:/tmp/ztmpWRSUO:IP:a242ef4b:80WRS:uname -aCLNLDEXEO:/bin/shEXEO:Pipe[26-27]WRCRTMPRATRCLNSUCLNO:IP:92994497:80WRO:IP:119200fc:80WRO:Pipe[116-117]WRCRTO:/tmp/ztmpRMMODWRCRTO:/lib/x86_64-linux-gnu/libc.so.6LDLDO:/dev/urandomRDRDRDO:/etc/passwdRDEXELDRDO:Pipe[305-306]RDWRCRTSUO:/bin/unameEXEO:Pipe[67-71]RDS:socat TCP4-LISTEN:4444,reuseaddr,fork EXEC:catCLNS:/bin/bash -lCLNS:catCLNSUCLNCLNS:ps -auxCLNS:uname -aCLNS:cat /etc/hostsCLNS:cat /etc/shadowCLNS:/usr/bin/clear_console -qCLNS:groupsCLNS:ls /etc/bash_completion.dCLNS:cargo --listCLNS:tail -n +2CLNS:sudo chsh -s /bin/bash -PSUSUSUSUSUSUSUSUSUSUSUSUCLNS:chsh -s /bin/bash -PSUSUS:sh -c /bin/bashCLNSUS:/bin/bashCLNCLNCLNSUCLNS:ifconfigCLNS:tcpdump -i eth1 -n icmpCLNS:tcpdump -i em2.128 -n icmpCLNS:tcpdump -i em2.128CLNS:ssh -C PI:EMAIL:ssh -C admin@128.55.12.118CLNS:ps auxCLNS:/bin/sh /usr/bin/lesspipeCLNS:dircolors -bCLNSUSUSUSUSUSUS:/usr/sbin/sshd -D -RSUSUCLNS:basename /usr/bin/lesspipeCLNS:dirname /usr/bin/lesspipeCLNSUSUSUCLNS:-bashSUSUCLNS:wallCLNS:wall -PCLNS:/usr/bin/clear_console -qCLNS:ls /etc/bash_completion.dCLNS:cargo --listCLNS:tail -n +2CLNS:/bin/sh /usr/bin/lesspipeCLNS:dircolors -bCLNS:sudo echo greetingsSUS:sudo wall -PSUSUSUS:sh -c /bin/bashCLNSUSUSUSUSUCLNS:basename /usr/bin/lesspipeCLNS:dirname /usr/bin/lesspipeCLNSUSUSUSUCLNS:echo greetingsSUSUSUS:/bin/bashCLNCLNCLNCLNCLNCLNSUCLNS:cat /etc/hostsCLNS:uname -aCLNS:ls --color=autoCLNS:ls --color=auto workCLNS:cat /home/admin/work/hostsCLNSUSUCLNSUSUSUSUSU[79] Wai-Kit Sze and R Sekar. A portable user-level approach for system-wide
integrity protection. In ACSAC, 2013.
[80] Wai Kit Sze and R Sekar. Provenance-based integrity protection for windows.
In ACSAC, 2015.
[81] Laszlo Szekeres, Mathias Payer, Tao Wei, and R Sekar. Eternal war in
memory. S&P Magazine, 2014.
[82] Prem Uppuluri and R Sekar. Experiences with specification based intrusion
detection. In Recent Advances in Intrusion Detection, 2001.
[83] G. Vigna and R. Kemmerer. Netstat: A network-based intrusion detection
approach. In Computer Security Applications Conference, 1998.
[84] Wei Wang and Thomas E Daniels. A graph based approach toward network
forensics analysis. ACM Transactions on Information and System Security
(TISSEC), 2008.
[85] Wikipedia. Ccleaner. https://en.wikipedia.org/wiki/CCleaner. Accessed:
2019-03-28.
[86] Wei Xu, Sandeep Bhatkar, and R. Sekar. Practical dynamic taint analysis
for countering input validation attacks on web applications. Technical Report
SECLAB-05-04, Department of Computer Science, Stony Brook University,
May 2005.
[87] Wei Xu, Sandeep Bhatkar, and R Sekar. Taint-enhanced policy enforcement:
A practical approach to defeat a wide range of attacks. In USENIX Security,
2006.
[88] Wei Xu, Daniel C. DuVarney, and R. Sekar. An efficient and backwards-
In
compatible transformation to ensure memory safety of C programs.
Foundations of software engineering, 2004.
[89] Zhang Xu, Zhenyu Wu, Zhichun Li, Kangkook Jee, Junghwan Rhee,
Xusheng Xiao, Fengyuan Xu, Haining Wang, and Guofei Jiang. High fidelity
data reduction for big data security dependency analyses. In ACM CCS, 2016.
Integrating ids alert correlation and
os-level dependency tracking. In International Conference on Intelligence
and Security Informatics, 2006.
[90] Yan Zhai, Peng Ning, and Jun Xu.
[91] Mingwei Zhang and R Sekar. Control flow integrity for cots binaries. In
USENIX Security, 2013.
[53] Shiqing Ma, Xiangyu Zhang, and Dongyan Xu. ProTracer: Towards practical
provenance tracing by alternating between logging and tainting. In NDSS,
2016.
the PaX team.
http://pax.grsecurity.net/docs/aslr.txt, 2001.
randomization.
Address
[54]
space
layout
[55] Sadegh M Milajerdi, Birhanu Eshete, Rigel Gjomemo, and VN Venkatakr-
ishnan. Propatrol: Attack investigation via extracted high-level tasks. In In
International Conference on Information Systems Security, Springer, 2018.
and
Poirot: Aligning attack behavior with kernel
[56] Sadegh M Milajerdi, Birhanu Eshete, Rigel Gjomemo,
VN Venkatakrishnan.
audit records for cyber threat hunting. In ACM CCS, 2019.
[57] Sadegh M. Milajerdi, Rigel Gjomemo, Birhanu Eshete, R. Sekar, and V.N.
Venkatakrishnan. HOLMES: Real-time APT Detection through Correlation
of Suspicious Information Flows. In IEEE Security and Privacy, 2019.
[58] MITRE Corporation. Adversary Tactics and Techniques Knowledge Base
(ATT&CK). https://attack.mitre.org/. Accessed: 2019-03-04.
[59] Stephanie Mlot. Neiman Marcus Hackers Set Off Nearly 60K Alarms.
[Online;
http://www.pcmag.com/article2/0,2817,2453873,00.asp, 2014.
accessed 16-February-2017].
[60] Kiran-Kumar Muniswamy-Reddy, David A Holland, Uri Braun, and Margo I
Seltzer. Provenance-aware storage systems. In USENIX ATC, 2006.
[61] Santosh Nagarakatte, Jianzhou Zhao, Milo M.K. Martin, and Steve
Zdancewic. Softbound: highly compatible and complete spatial memory
safety for c. SIGPLAN Not., 2009.
James Newsome and Dawn Song. Dynamic taint analysis for automatic
detection, analysis, and signature generation of exploits on commodity
software. In NDSS, 2005.
[62]
[63] Anh Nguyen-Tuong, Salvatore Guarnieri, Doug Greene, Jeff Shirley, and
David Evans. Automatically hardening web applications using precise
tainting. In 20th IFIP International Information Security Conference, 2005.
[64] Peng Ning, Yun Cui, and Douglas S Reeves. Constructing attack scenarios
through correlation of intrusion alerts. In ACM CCS, 2002.
[65] Peng Ning and Dingbang Xu. Learning attack strategies from intrusion alerts.
In ACM CCS, 2003.
[66] Steven Noel, Eric Robertson, and Sushil Jajodia. Correlating intrusion events
and building attack scenarios through attack graph distances. In Annual
Computer Security Applications Conference, 2004.
[67] Kexin Pei, Zhongshu Gu, Brendan Saltaformaggio, Shiqing Ma, Fei Wang,
Zhiwei Zhang, Luo Si, Xiangyu Zhang, and Dongyan Xu. HERCULE:
Attack story reconstruction via community discovery on correlated log graph.
In ACSAC, 2016.
[68] Devin J Pohly, Stephen McLaughlin, Patrick McDaniel, and Kevin Butler.
Hi-Fi: Collecting high-fidelity whole-system provenance. In ACSAC, 2012.
[69] P. Porras and R. Kemmerer. Penetration state transition analysis: A rule based
intrusion detection approach. In Annual Computer Security Applications
Conference, 1992.
[70] Xinzhou Qin and Wenke Lee. Statistical causality analysis of infosec alert
data. In RAID, 2003.
[71] R. Sekar. An efficient black-box technique for defeating web application
attacks. In Network and Distributed System Security Symposium, 2009.
[72] R. Sekar, M. Bendre, P. Bollineni, and D. Dhurjati. A fast automaton-based
approach for detecting anomalous program behaviors. In IEEE Security and
Privacy, 2001.
[73] Xiaokui Shu, Frederico Araujo, Douglas L Schales, Marc Ph Stoecklin,
Jiyong Jang, Heqing Huang, and Josyula R Rao. Threat intelligence
computing. In ACM CCS, 2018.
[74] Xiaokui Shu, Danfeng Yao, and Naren Ramakrishnan. Unearthing stealthy
program attacks buried in extremely long execution paths. In ACM CCS, 2015.
[75] G. Edward Suh, Jae W. Lee, David Zhang, and Srinivas Devadas. Secure
program execution via dynamic information flow tracking. In ASPLOS, 2004.
[76] Weiqing Sun, R. Sekar, Zhenkai Liang, and V. N. Venkatakrishnan.
Expanding malware defense by securing software installations. In Detection
of Intrusions and Malware, and Vulnerability Assessment (DIMVA), 2008.
[77] Weiqing Sun, R. Sekar, Gaurav Poothia, and Tejas Karandikar. Practical
Proactive Integrity Preservation: A Basis for Malware Defense. In IEEE
Security and Privacy, 2008.
[78] Xiaoyan Sun, Jun Dai, Peng Liu, Anoop Singhal, and John Yen. Using
bayesian networks for probabilistic identification of zero-day attack paths.
IEEE Transactions on Information Forensics and Security, 2018.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:02:08 UTC from IEEE Xplore.  Restrictions apply. 
1155