:::
::: para
这个示例假设那个从旧的 `slapd`{.systemitem} 配置转换来的文件位于
`/etc/openldap/slapd.conf`{.filename}，且新的 OpenLDAP 配置的目录位于
`/etc/openldap/slapd.d/`{.filename}。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    删除新 `/etc/openldap/slapd.d/`{.filename} 目录中的内容：
    :::
    ``` screen
    # rm -rf /etc/openldap/slapd.d/*
    ```
-   ::: para
    运行 `slaptest`{.command} 检查配置文件的有效性并执行新的配置目录：
    :::
    ``` screen
    slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d
    ```
-   ::: para
    在新目录中配置新权限：
    :::
    ``` screen
    chown -R ldap:ldap /etc/openldap/slapd.d
    ```
    ``` screen
    chmod -R 000 /etc/openldap/slapd.d
    ```
    ``` screen
    chmod -R u+rwX /etc/openldap/slapd.d
    ```
-   ::: para
    确认该服务可用于新的配置目录后，请删除旧的配置文件：
    :::
    ``` screen
    rm -rf /etc/openldap/slapd.conf
    ```
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-Security_Authentication.html#sect-Migration_Guide-Security_Authentication-Checksums}8.4. Checksum {.title}
:::
::: para
红帽企业版现在比起之前在更多地方使用 SHA-256
摘要算法来进行数据验证和认证，从加密性较差的 SHA-1 和 MD5 算法升级。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-Security_Authentication.html#sect-Migration_Guide-Security_Authentication-PAM}8.5. 可插拔认证模块（PAM） {.title}
:::
::: para
PAM 服务的通用配置位于 `/etc/pam.d/system-auth-ac`{.filename} 文件中。
:::
::: para
认证模块现在也写入了额外的 PAM 配置文件：
`/etc/pam.d/password-auth-ac`{.filename}，`/etc/pam.d/smartcard-auth-ac`{.filename}
和 `/etc/pam.d/fingerprint-auth-ac`{.filename}。
:::
::: para
`sshd`{.systemitem} 的 PAM 模块和其它像 `ftpd`{.systemitem}
这样的远程服务现在包括红帽企业版 Linux 6 中的
`/etc/pam.d/password-auth`{.filename}文件，而不是
`/etc/pam.d/system-auth`{.filename}。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-Security_Authentication.html#sect-Migration_Guide-Security_Authentication-System_users}8.6. 系统用户 {.title}
:::
::: para
静态分配 UID/GID 数字阈值（由 `/usr/share/doc/setup-*/uidgid`{.filename}
文件的 [setup]{.package} 软件包定义）已经从 100（ 红帽企业版 3、4、和 5
中）到红帽企业版 Linux 6 的 200。这个更改可以影响有100-200
动态或静态分配的 UID/GIDs 系统，并引起安装和一些应用程序运行的失败。
:::
::: para
动态 UID/GID 分配现在在红帽企业版 Linux 6 中的范围是 499
向下。对静态系统用户来说，[setup]{.package}
软件包强制无保留创建时，推荐使用 UID/GID 范围 300 或以上。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-Security_Authentication.html#idm140693955088016}8.7.  NIST SCAP 1.2 证书 {.title}
:::
::: para
从 Red Hat Enterprise Linux 6.6
起，OpenSCAP（[openscap]{.package}）被国家标准技术局（NIST）安全内容自动化协议（SCAP）1.2
认证。SCAP
提供了标准化方法来维持企业系统的安全，使您能自动核实补丁存在，检查系统安全配置设置，并检查是否有泄漏迹象。
:::
::: para
Red Hat Enterprise Linux 6.6
也包括以一个新的软件包，[scap-security-guide]{.package}，这个软件包提供了更多如何最大限度利用
OpenSCAP 的信息。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-Security_Authentication.html#idm140693955084736}8.8. 更改到 RSA 和 DSA 秘钥生成 {.title}
:::
::: para
普通 Red Hat Enterprise Linux 6 操作允许RSA 和 DSA
任何型号的秘钥生成。如果 Red Hat Enterprise Linux 6 在 FIPS
模式中运行将会有额外的限制。
:::
::: para
从 Red Hat Enterprise Linux 6.6 起，*`OPENSSL_ENFORCE_MODULUS_BITS`*
环境变量决定 FIPS 模式中的秘钥生成行为。
:::
::: para
当使用 FIPS 模式时，*`OPENSSL_ENFORCE_MODULUS_BITS`*
环境变量是被设置好的，仅仅 2048 bit 或 3072 bit RSA 和 DSA
秘钥可被生成。
:::
::: para
如果 *`OPENSSL_ENFORCE_MODULUS_BITS`*
环境变量没有被设置好，秘钥生成行为不会从先前发行版本的 Red Hat
Enterprise Linux 6 产生更改：系统可以生成比 1024 bits、1024 bits 的DSA
秘钥、2048 bits、或是3072 bits 更大或同等的 RSA 秘钥。
:::
:::
:::
[]{#chap-Migration_Guide-System_Monitoring_And_Kernel.html}
::: chapter
::: titlepage
# [⁠]{#chap-Migration_Guide-System_Monitoring_And_Kernel.html#chap-Migration_Guide-System_Monitoring_And_Kernel}第 9 章 系统监控和内核 {.title}
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-System_Monitoring_And_Kernel.html#sect-Migration_Guide-System_Monitoring_And_Kernel-dracut}9.1. dracut {.title}
:::
::: para
替代 [*mkinitrd*]{.emphasis} 使用 [*dracut*]{.emphasis}
工具。而且，不再默认使用 `/etc/modprobe.conf`{.filename}
文件来管理内核模块，但是如果手动创建还是可以继续使用。作为
[*dracut*]{.emphasis} 工具的使用范例，参考如下：
:::
``` screen
# mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r)-old.img
# dracut --force /boot/initramfs-$(uname -r).img $(uname -r)
```
::: para
您可以在配置目录 `/etc/dracut.conf.d`{.filename} 找到
[*dracut*]{.emphasis} 的配置文件。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-System_Monitoring_And_Kernel.html#idm140693985073616}9.2. IP 虚拟服务器（IPVS） {.title}
:::
::: para
红帽企业版 Linux 6.5
引入了新的同步信息协议格式。提供这个新格式可以防止由于备份服务器节点持续连接，过早超时造成的业务服务的中断，以防切换到备份服务器节点时导致不稳定的状态。
:::
::: para
这个新格式与红帽企业版 Linux 6.4 或先前版本，或是早于
kernel-2.6.32-406.el6
的内核版本是不兼容的。更新主机节点前请更新备份节点。
:::
::: para
要继续使用同步信息的旧格式，例如您想在更新备份节点前更新主机节点，请设置
`/proc/sys/net/ipv4/vs/sync_version`{.filename} 的值到 `0`{.literal}。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-System_Monitoring_And_Kernel.html#sect-Migration_Guide-System_Monitoring_And_Kernel-Joystick_support}9.3. Joystick 支持 {.title}
:::
::: para
不默认启用Joystick 设备支持。红帽企业版 Linux 6 内核不再提供 joystick
模块。
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Migration_Guide-System_Monitoring_And_Kernel.html#idm140693918901536}9.4.  Automatic Bug Reporting Tool（ABRT） {.title}
:::
::: para
从 Red Hat Enterprise Linux 6.6 起，错误自动陈述工具（Automatic Bug
Reporting Tool ，简称 ABRT）已被更新到版本 2。这个更新删除了一些限制
，但是涉及到了配置和行为的一些更改。
:::
::: para
不再在数据库中存储问题数据，比如说是与故障有关的问题数据。现在，这个信息存储为问题数据目录文件。所以，已简化
`/etc/abrt/abrt.conf`{.filename}
配置文件，而有些配置指令现在已过时或是指定在其它位置。
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    不再在 `/etc/abrt/abrt.conf`{.filename} 中指定
    *`OpenGPGCheck`*、*`BlackList`*、*`ProcessUnpackaged`* 和
    *`BlackListedPaths`* 指示。而是在
    `/etc/abrt/abrt-action-save-package-data.conf`{.filename}
    文件中指定它们。
    :::
-   ::: para
    不再需要或支持 *`Database`* 指示。
    :::
-   ::: para
    `post-create`{.systemitem} 事件已经替代 *`ActionsandReporters`*
    指示。更多关于 ABRT 2 中的事件，详情请参见〈[第 9.4.1 节 "ABRT
    事件"](#chap-Migration_Guide-System_Monitoring_And_Kernel.html#abrt-events){.xref}〉。
    :::
-   ::: para
    `abrt.conf`{.filename} 文件的
    `[AnalyzerActionsAndReporters]`{.literal}
    部分现在已经过时。`analyze_*`{.systemitem} 和
    `report_*`{.systemitem}
    事件已经替代了之前在这部分配置的指示（*`Kerneloops`*、 *`CCpp`* 和
    *`Python`*）。更多关于 ABRT 2 中事件，详情请参见〈[第 9.4.1 节 "ABRT
    事件"](#chap-Migration_Guide-System_Monitoring_And_Kernel.html#abrt-events){.xref}〉。
    :::
-   ::: para
    除了还未被移植的 *`ReadonlyLocalDebugInfoDirs`*
    指示，`abrt-ccpp`{.systemitem} 服务已替代 C/C++ hook 功能 。
    :::
-   ::: para
    [abrt-addon-python]{.package} 软件包已替代 Python hook 的功能。
    :::
-   ::: para
    `abrt-oops`{.systemitem} 服务、相关的 `abrt-dump-oops`{.command} 和
    `abrt-action-kerneloops`{.command} 命令已经替代了内核 oops hook
    的功能。
    :::
:::
::: para
ABRT 提供了许多用于灵活自动地报告问题数据的命令，包括如下：
:::
::: variablelist
[reporter-bugzilla]{.term}
:   ::: para
    检查与 ABRT hash 有一样指定问题数据目录的 bug、注释现有的
    bug，或者适当创建新的 bug。除默认软件包外，这个命令还需要
    [libreport-plugin-bugzilla]{.package} 软件包。
    :::
[reporter-kerneloops]{.term}
:   ::: para
    报告 kernel oops 到合适的网站。这个命令需要默认软件包之外的
    [libreport-plugin-kerneloops]{.package} 软件包。
    :::
[reporter-mailx]{.term}
:   ::: para
    通过邮件发送问题数据目录的内容。这个命令需要除默认软件包之外的
    [libreport-plugin-mailx]{.package} 插件。
    :::
[reporter-print]{.term}
:   ::: para
    打印问题数据到标准输出或指定文件。这个命令需要除默认文件包之外的
    [libreport-plugin-logger]{.package} 软件包。
    :::
[reporter-rhtsupport]{.term}
:   ::: para
    报告问题数据到 RHT 支持。这个命令需要除默认软件包之外的
    [libreport-plugin-rhtsupport]{.package} 插件。
    :::
[reporter-upload]{.term}
:   ::: para
    上传问题数据目录的一个 tarball 到指定
    URL。这个命令需要除默认软件包之外的
    [libreport-plugin-reportuploader]{.package} 软件包。
    :::
:::
::: section
::: titlepage