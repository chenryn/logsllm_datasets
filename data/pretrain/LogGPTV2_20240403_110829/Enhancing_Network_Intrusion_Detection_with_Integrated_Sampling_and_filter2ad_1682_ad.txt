### TCP Port Scan and Related Activities

**TCP Port Scan → LANMan Share Enumeration**
- **Confidence:** 66.66%
- **Support:** 1.7

### 3. Scanning Activity
Rules of this type often appear when a network is subjected to a series of exploit and probing attempts. These brute force attacks generate a wide range of signatures, often associated with a reconnaissance event such as a TCP port scan. The attacker's goal is to identify open vulnerabilities for future exploitation. It is important to distinguish between legitimate scanning activities, such as those conducted by network security staff using automated tools to verify that hosts are up-to-date with the latest security patches, and malicious scans.

### Association Rules for Scanning Activity

- **RPC Race Condition Exploitation → TCP SYN Port Sweep**
  - **Confidence:** 51%
  - **Support:** 1.8

- **SQL Query in HTTP Request → TCP SYN Port Sweep**
  - **Confidence:** 43%
  - **Support:** 1.7

- **FTP RealPath Buffer Overflow → TCP SYN Port Sweep**
  - **Confidence:** 100%
  - **Support:** 0.2

### 4. Worm-Related Rules
Worms propagate by exploiting vulnerabilities to gain control of victim servers and then scan the network for other vulnerable machines to ensure rapid and widespread infection before a patch can be implemented. The following rules define multi-stage worm attacks:

- **NETBIOS SMB–DS IPC Unicode Share Access + ICMP L3 Retriever Ping → NETBIOS SMB–DS Session Setup and Unicode Username Overflow Attempt**
  - **Rule for Black/Nyxem Worm**
  - **Confidence:** 100%
  - **Support:** 41

- **MS-SQL Version Overflow Attempt → MS-SQL Worm Propagation Attempt**
  - **Rule for SQL Slammer Worm**
  - **Confidence:** 100%
  - **Support:** 35

### 5.2 Identification of High-Risk Networks
On average, 87% of our experiments generated no rules for a given network over a 24-hour period. This means that out of 135 networks, only 17 produced rules in a single 24-hour period. Figure 4 shows the rule count per monitored network on a logarithmic scale. Out of the 19 networks that produced rules, 12 generated 10 or fewer rules, while one network generated 117 rules and another generated 2295 rules. This graph helps operational personnel identify which networks require immediate attention.

### 5.3 Facilitation of Sensor Tuning and Root Cause Analysis
Similar to Julisch's use of cluster analysis for identifying the root cause of false positive alarms, our data mining framework can help determine the root causes of certain alarms. Figure 5 shows a 30-day trend of rule volumes for a selected network, highlighting spikes on two separate days. These spikes, representing 4854 and 7926 rules, were found to be related to a denial of service attack on an electronic commerce site. The investigation revealed that the actual cause was a misconfigured IP route between a web application server and an LDAP server. Fixing this IP routing problem reduced the number of alarms and improved the fidelity of the alarm stream.

### 6. Conclusion
We have presented a novel framework for applying association rule mining techniques to the millions of alarms received daily at large Managed Security Service Providers. Our framework successfully discovers patterns of alarms associated with new attack strategies, reducing the time required for SOC personnel to implement meta-rules for detecting future instances of emerging attacks. By highlighting these patterns, we close the time gap between the appearance of new attack profiles in the alarm logs and the configuration of rules in the ESM, while also reducing human error and the costs associated with manual inspection of large alarm logs.

### Acknowledgments
We would like to thank the Security Intelligence and Managed Security Service Delivery teams at IBM for their assistance in conducting our experiments.

### References
[References listed as provided]

---

This revised text aims to be more coherent, professional, and easier to understand. It maintains the technical details while improving the flow and clarity of the information.