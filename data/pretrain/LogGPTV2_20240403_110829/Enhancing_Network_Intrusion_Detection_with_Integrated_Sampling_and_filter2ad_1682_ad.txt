[TCP Port Scan][TCP Probe HTTP ]⇒ [LANMan share enum]
Conﬁdence = 66.66
Support = 1.7
3. Scanning Activity:
Rules of this type frequently materialized when a network experienced a se-
ries of exploit and probing attempts. This type of brute force attack results
in a set of rules where the actual attacks span a wide range of signatures,
and are associated with a reconnaissance event in the form of a TCP port
scan. The goal of the attacker in these situations was to discover open vul-
nerabilities on a system to be exploited in future attacks. A special case
which had to be considered when searching for these types of attacks was
whether or not the scanning activity was legitimate traﬃc generated as part
of a policy veriﬁcation procedure. This was most commonly caused by the
use of an automated scanning appliance under the control of the network
security staﬀ as a means of ensuring that the hosts under their control had
been updated with the most recent security patches.
A Framework for the Application of Association Rule Mining
13
[RPC Race Condition Exploitation ]⇒ [TCP SYN Port Sweep]
Rules for Scanning Activity
Conﬁdence = 51
Support = 1.8
[SQL Query in HTTP Request ]⇒ [TCP SYN Port Sweep]
Conﬁdence = 43
Support = 1.7
[FTP RealPath Buﬀer Overﬂow]⇒ [TCP SYN Port Sweep]
Conﬁdence = 100
Support = 0.2
4. Worm Related Rules:
Worms propagate by exploiting vulnerabilities to gain control of a victim
server, subsequently scanning the network for other vulnerable machines,
as to guarantee rapid and widespread infection before a patch can be im-
plemented. The following example rules deﬁne a multi-stage worm attack
which took advantage of ﬁle sharing vulnerabilities which exist in a widely
deployed operating system. The ﬁrst rule correlates an overﬂow exploit of
an SMB vulnerability, and subsequent access. The existence of the [ICMP
L3 Retriever Ping]alert is indicative of Black/Nyxem worm activity.
[NETBIOS SMB–DS IPC unicode share access][ICMP L3retriever Ping]⇒
[NETBIOS SMB–DS Session Setup And request unicode username overﬂow attempt]
Rule for Black/Nyxem Worm
Conﬁdence = 100
Support = 41
Another example of worm related patterns which we detected describes cor-
relations relevant to the SQL Slammer worm which ravaged the Internet in
2002, and is still frequently detected. This worm exploited a buﬀer overﬂow
vulnerability to execute malicious code and install itself on the victim ma-
chine, after which it scanned for other hosts to which it could propagate. Two
mature signatures exist for this worm in our monitoring environment. The
ﬁrst signature describes the initial overﬂow attempt, followed by a propaga-
tion attempt. Our framework was able to determine that a strong correlation
exists between these two signatures. Using this information, we can then code
a new rule into the ESM which watches for this type of pattern, and raises
a meta alarm when it is detected.
While worms such as SQL Slammer are well known, we have shown that
our method can consistently detect the patterns which are generated in the
alarm stream by their propagation. Based on this, we feel that the tech-
niques presented here can be applied to detect future instances of emerging
worm traﬃc, independent of whether the intrusion detection sensors supply
14
J.J. Treinen and R. Thurimella
[MS-SQL version overﬂow attempt]⇒ [MS-SQL Worm Propagation attempt]
Rule for SQL Slammer Worm
Conﬁdence = 100
Support = 35
worm speciﬁc signatures, or if the newly emerging worm manifests itself as
a combination of existing signatures.
5.2 Identiﬁcation of High Risk Networks
As mentioned previously, we found that on average, 87 percent of our experi-
ments generated no rules for a given network over a 24-hour period. This trans-
lates to the total number of networks for which rules were produced in a single
24-hour period being 17 out of 135. Figure 4 shows a typical count of rules gen-
erated per monitored network on a logarithmic scale. In this case, 19 out of the
135 monitored networks produced rules. Of these 19 networks, 12 produced 10
or less rules for that particular day, while one network produced 117 and one
produced 2295. Graphing these counts highlights the anomalous networks, which
provides a useful tool for operational personnel to see which networks require
immediate attention.
Single Day Rule Count By Network ID
l
s
e
u
R
f
o
r
e
b
m
u
N
10000
1000
100
10
1
Rule Count
1
3
5
7
9
11
13
15
17
19
Network ID
Fig. 4. Anomalous Network Activity as Shown by a Count of Rules Produced Per
Network for a Selected Day
5.3 Facilitation of Sensor Tuning and Root Cause Analysis
Much in the same way that Julisch describes the use of cluster analysis for the
identiﬁcation of the root cause of false positive alarms in [18,20,21], we have
A Framework for the Application of Association Rule Mining
15
found that we can facilitate the determination of root causes of certain alarms
using our data mining framework.
Anomalous Network Activity
t
n
u
o
C
e
u
R
l
10000
8000
6000
4000
2000
0
2/12/2006
Network 1
2/19/2006
2/26/2006
3/5/2006
3/12/2006
Date
Fig. 5. Spikes Indicating Anomalous Activity For a Single Network
Figure 5 shows a 30-day trend of rule volumes broken out by day for a selected
network. The spikes represent the generation of 4854 and 7926 rules on two sepa-
rate days, respectively. When we inspected these rules, they appeared to describe
a denial of service attack on an electronic commerce site. The rules covered 47
percent of the alarms which were generated on the corresponding days, and were
comprised of a ﬂood of Half Open SYN signatures, coupled with various other at-
tack signatures. After some investigation, it was discovered that the actual cause
of the alarms was a misconﬁgured IP route between a web application server and
an LDAP server. Every time that a user attempted to authenticate to the appli-
cation, the request was lost due to the IP stack’s inability to complete the TCP
handshake. The intrusion detection sensors interpreted this as a spoofed source
IP address, which resulted in a ﬂood of the corresponding alarms to the security
operations center. By ﬁxing this IP routing problem, the corresponding reduction
in alarms would provide increased ﬁdelity in the alarm stream for that network as
well as increased chances that legitimate attack traﬃc would not be overlooked.
6 Conclusion
We have outlined a novel framework for the application of association rule mining
techniques on the millions of alarms which are received daily at large Managed
Security Service Providers. As new attack strategies emerge, our framework is
successful at discovering the associated patterns of alarms which occur as a result
16
J.J. Treinen and R. Thurimella
of the attacker’s actions in the victim network. By highlighting these patterns,
we reduce the time required for SOC personnel to implement meta rules which
ensure the detection of future instances of emerging attacks.
Our framework provides a reliable means of closing the time gap between the
appearance of new attack proﬁles in the alarm logs and the conﬁguration of
rules in the ESM. We accomplished this while reducing the human-error factor,
as well as the costs associated with manually inspecting large alarm logs.
In addition to the ability to discover new rules for the ESM, we have also
shown that our framework can be used to ﬂag suspicious network activity for
in-depth analysis by operations staﬀ in an oﬀ-line environment. The use of our
framework can detect a variety of classes of attacks which may have been lost in
the large data volumes due to processing time constraints in the on-line moni-
toring system.
Acknowledgments
We would like to extend our gratitude to the Security Intelligence and Managed
Security Service Delivery teams at IBM for their assistance in carrying out our
experiments.
References
1. Agrawal, R., Imielinski, T., Swami, A.: Mining Association Rules Between Sets
of Items in Large Databases. Proceedings of the ACM SIGMOD Conference on
Management of Data (1993) 207-216
2. Ali, K., Manganaris, S., Srikant, R.: Partial Classiﬁcation Using Association Rules.
Proceedings of the Third International Conference on Knowledge Discovery and
Data Mining (1997) 115-118
3. Apap, F., Honig, A., Hershkop, S., Eskin, E., Stolfo, S.: Detecting Malicious Soft-
ware by Monitoring Anomalous Windows Registry Accesses. Proceedings of Recent
Advances in Intrusion Detection, 5th International Symposium (2002) 36-53
4. Arcsight Corporation.: Arcsight ESM Product Brief. http://www.arcsight.com/
collateral/ArcSight ESM brochure.pdf (2005)
5. Arcsight Corporation.: Arcsight Pattern Discovery Product Brief. http://www.
arcsight.com/collateral/ArcSight Pattern Discovery.pdf (2005)
6. Barbara, D., Couto, J., Jajodia, S., Wu, N.: ADAM: A Testbed for Exploring the
Use of Data Mining in Intrusion Detection. SIGMOD Record Volume 30 Number
4 (2001) 15-24
7. Cisco Systems. Network Security Database. http://www.cisco.com/cgi-bin/front.
x/csec/idsAllList.pl (2005)
8. Debar, H., Wespi, A.: Aggregation and Correlation of Intrusion-Detection Alerts.
Proceedings of Recent Advances in Intrusion Detection, 4th International Sympo-
sium (2001) 85-103
9. Fayyad, U. Piatetsky-Shapiro, G. Smyth, P.: The KDD Process for Extracting
Useful Knowledge From Volumes of Data . Communications of the ACM (1996)
27-34
A Framework for the Application of Association Rule Mining
17
10. Guan, Y., Ghorbani, A., Belacel, N.: Y-Means : A Clustering Method for Intru-
sion Detection. Proceedings of Canadian Conference on Electrical and Computer
Engineering (2003)
11. Han, J., Cai, Y., Cercone, N.: Knowledge Discovery in Databases: An Attribute-
Oriented Approach. Proceedings of the 18th International Conference on Very
Large Data Bases (1992) 547-559
12. Han, J., Cai, Y., Cercone, N.: Data-Driven Discovery of Quantitative Rules in
Relational Databases. IEEE Transactions on Knowledge and Data Engineering,
Volume 5 (1993) 29-40
13. Honig, A., Howard, A., Eskin, E., Stolfo, S.: Adaptive Model Generation : An Ar-
chitecture for the Deployment of Data Mining-based Intrusion Detection Systems.
Applications of Data Mining in Computer Security, Barbara, D., Sushil, J., eds.
Boston : Kluwer Academic Publishers (2002) 153-194
14. Hosel, V., Walcher, S.: Clustering Techniques : A Brief Survey. http://ibb.gsf.de/
reports/2001/walcher.ps (2000)
15. IBM Corporation : DB2 Intelligent Miner for Modeling. New York (2005)
16. IBM Corporation : IBM DB2 Intelligent Miner Modeling Administration and Pro-
gramming Guide v8.2. Second Edition. New York (2004)
17. Julisch, K.: Mining Alarm Clusters to Improve Alarm Handling Eﬃciency. Pro-
ceedings of the 17th Annual Computer Security Applications Conference (2001)
12-21
18. Julisch, K.: Data Mining for Intrusion Detection A Critical Review. Applications
of Data Mining in Computer Security, Barbara, D., Sushil, J., eds. Boston : Kluwer
Academic Publishers (2002) 33-62
19. Julisch, K., Dacier, M.: Mining Intrusion Detection Alarms for Actionable Knowl-
edge. Proceedings of the Eighth ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining (2002) 366-375
20. Julisch, K. Clustering Intrusion Detection Alarms to Support Root Cause Analy-
sis. ACM Transactions on Information and System Security, Volume 6, Number 4
(2003) 443-471
21. Julisch, K. Using Root Cause Analysis to Handle Intrusion Detection Alarms. PhD
Thesis. Universit¨at Dortmund (2003)
22. Lee, W., Stolfo, S.: Data Mining Approaches for Intrusion Detection. Proceedings
of the 7th USENIX Security Symposium (1998) 79-94
23. Lee, W., Stolfo, W., Mok, K.: Mining Audit Data to Build Intrusion Detection
Models. Proceedings of the Fourth International Conference on Knowledge Dis-
covery and Data Mining (1998) 66-72
24. Lee, W. Stolfo, S. Kui, M.: A Data Mining Framework for Building Intrusion
Detection Models. IEEE Symposium on Security and Privacy (1999) 120-132
25. Lee, W., Stolfo, S., Chan, P., Eskin, E., Fan, W., Miller, M., Hershkop, S., Zhang,
J.: Real Time Data Mining-based Intrusion Detection. Proceedings of the 2nd
DARPA Information Survivability Conference and Exposition (2001)
26. Lippmann, R., Haines, J., Fried, D., Korba, J., Das, K.: The 1999 DARPA Oﬀ-Line
Intrusion Detection Evaluation. Computer Networks, Volume 34 (2000) 579-595
27. Manganaris, S., Christensen, M., Zerkle, D., Hermiz, K.: A Data Mining Analysis
of RTID Alarms. Proceedings of Recent Advances in Intrusion Detection, Second
International Workshop (1999)
28. Mchugh, J.: Testing Intrusion Detection Systems: A Critique of the 1998 and 1999
DARPA Intrusion Detection System Evaluations as Performed by Lincoln Labora-
tory. ACM Transactions on Information and System Security, Volume 3, Number
4 (2000) 262-294
18
J.J. Treinen and R. Thurimella
29. McLure, S., Scambray, J., Kurtz, G.: Hacking Exposed Fifth Edition: Network
Security Secrets & Solutions : McGraw-Hill/Osborne (2005)
30. Nauta, K., Lieble, F.: Oﬄine Network Intrusion Detection: Mining TCPDUMP
Data to Identify Suspicious Activity. Proceedings of the AFCEA Federal Database
Colloquium (1999)
31. Ning, P., Cui, Y., Reeves, D., Xu, D.: Techniques and Tools for Analyzing Intrusion
Alerts. ACM Transaction on Information and System Security. Volume 7, No. 2
(2004) 274-318
32. Noel, S., Wijesekera, D., Youman, C.: Modern Intrusion Detection, Data Mining,
and Degrees of Attack Guilt. Applications of Data Mining in Computer Security,
Barbara, D., Sushil, J., eds. Boston : Kluwer Academic Publishers (2002) 1-31
33. Portnoy, L., Eskin, E., Stolfo, S.: Intrusion Detection with Unlabeled Data Us-
ing Clustering. Proceedings of ACM CSS Workshop on Data Mining Applied to
Security (2001)
34. Schultz, M., Eskin, E., Zadok, E., Stolfo, S.: Data Mining Methods for Detection
of New Malicious Executables. Proceedings of IEEE Symposium on Security and
Privacy (2001)
35. Stolfo, S., Lee, W., Chan, P., Fan, W., Eskin, E.: Data Mining-based Intrusion
Detectors: An Overview of the Columbia IDS Project. SIGMOD Record, Vol. 30,
No. 4 (2001) 5-14
36. Valdes, A., Skinner, K.: Probabilistic Alert Correlation. Proceedings of Recent
Advances in Intrusion Detection, Third International Workshop (2001) 54-68
37. Yang, D., Hu, C., Chen, Y.: A Framework of Cooperating Intrusion Detection
Based on Clustering Analysis and Expert System. Proceedings of the 3rd interna-
tional conference on Information Security (2004)
Behavioral Distance Measurement Using
Hidden Markov Models
Debin Gao, Michael K. Reiter, and Dawn Song
Carnegie Mellon University
PI:EMAIL, PI:EMAIL, PI:EMAIL
Abstract. The behavioral distance between two processes is a measure
of the deviation of their behaviors. Behavioral distance has been proposed
for detecting the compromise of a process, by computing its behavioral
distance from another process executed on the same input. Provided that
the two processes are diverse and so unlikely to fall prey to the same at-
tacks, an increase in behavioral distance might indicate the compromise
of one of them. In this paper we propose a new approach to behavioral