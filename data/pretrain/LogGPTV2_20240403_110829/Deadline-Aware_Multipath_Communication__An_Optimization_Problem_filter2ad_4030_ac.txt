(SEE TABLE III). δ = 800 MILLISECONDS (TOP). λ = 90 MBPS
(BOTTOM). COLUMNS CONTAINING ONLY 0’S ARE OMITTED.
Rate λ (Mbps)
x0,0
10–20
40
60
80
100
120
140
0
0
0
0
4/25
3/10
2/5
Lifetime δ
150–400 ms
450–700 ms
750–1000 ms
1050+ ms
x0,0
7/9
0
1/15
1/27
x1,0
0
7/9
0
0
Solution
x1,2
0
5/8
5/6
15/16
4/5
2/3
4/7
Solution
x1,1
0
0
0
20/27
x2,2
1
3/8
1/6
1/16
1/25
1/30
1/35
Quality Q
100%
100%
100%
100%
84%
70%
60%
x1,2
x2,2
Q
0
0
8/9
0
2/9
2/9
2/45
2/9
22.2%
84.4%
93.3%
93.3%
While Table IV shows purely theoretical performance
results (and how they can be obtained), Figure 2 also shows
the results of our simulation (which closely approximates
the theoretical upper bound) and the maximum quality that
can be achieved by using only one of the two paths.
Experiment 2: Random Delays
In this experiment, we test the random-delay extension of
our model presented in Section VI in a simulation setting
with two paths. We used path characteristics similar to the
ﬁrst experiment, but we added a random component to delay.
It has been reported that packet delays along a particular
Multipath (simulation)
Path 1 (theory)
Multipath (theory)
Path 2 (theory)
%
n
i
)
Q
(
y
t
i
l
a
u
Q
%
n
i
)
Q
(
y
t
i
l
a
u
Q
100
90
80
70
60
50
40
30
20
10
100
90
80
70
60
50
40
30
20
10
0
10 20 30 40 50 60 70 80 90 100 110 120 130 140 150
Data rate (lambda) in Mbps
0
100 200 300 400 500 600 700 800 900 1000 1100
Lifetime (delta) in milliseconds
Figure 2. Theoretical and simulation results for a network with two paths.
See Tables III and IV for network characteristics and solutions. δ = 800
milliseconds (top). λ = 90 Mbps (bottom).
Internet path can be approximated by a shifted gamma
distribution [23]–[26]. Therefore, we deﬁne delay on path
i as a random variable di = Xi + ηi, where ηi is a location
parameter and where Xi is a random variable following
a gamma distribution, i.e., with the following cumulative
distribution function:
where
and
,
Γ(αi)
γ(αi, βix)
P (Xi ≤ x) =
(cid:17) ∞
xα−1e−xdx
(cid:17) x
Γ(α) =
0
γ(α, x) =
0
tα−1e−tdt.
(31)
(32)
(33)
Such a random variable has an expected value E[di] =
ηi + αiβi and a variance Var[di] = αiβ2
i .
493
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:36:58 UTC from IEEE Xplore.  Restrictions apply. 
The distribution parameters and the other network char-
acteristics used in this simulation are shown in Table V.
To minimize the effects of queueing delay and concentrate
on the simulated delay distribution, we over-provisioned
both paths (in terms of bandwidth), but only used the
allowed amount of bandwidth (bi) speciﬁed in the model
(see Section IX-A for a discussion on queueing delays).
vertical dashed line, if the capacity of the network is un-
derestimated, unsurprisingly, the quality decreases because
the model forces packets to be dropped. On the right-hand
side, however, messages are not dropped and congest the
network. Therefore, the loss rate increases proportionally
due to overﬂowing packet buffers and the communication
quality remains mostly unaltered.
PATH CHARACTERISTICS USED IN EXPERIMENT 2.
Table V
Bandwidth (Mbps) bi
Delay (ms) parameter ηi
Delay (ms) parameter αi
Delay (ms) parameter βi
Loss rate τi
Path 1
80
400
10
4
0.2
Path 2
20
100
5
2
0
To calculate retransmission timeouts, we use Equation 26
that we can rewrite here as
ti,j = max
t∈R+
(FXj (δ − ηj − t)
· (FXi (t − ηi) ∗ fXmin (t − ηmin))),
(34)
where FX () and fX () denote, respectively, the cumulative
distribution function and the probability density function of a
random variable X, and ∗ stands for convolution. The above
method does not necessarily produce a unique solution. In
this case, the optimal timeouts that we choose are
t1,2 = 615 ms,
t2,1 = 252 ms,
t2,2 = 323 ms.
(35)
The timeout t1,1 is not deﬁned here because it is not
possible to perform a retransmission in time with that
particular path combination and a lifetime of 750 ms.
In this particular network setting, when we generate data
at a rate λ = 90 Mbps, with a lifetime δ = 750 ms,
our model extension indicates that the expected quality is
93.3% and when we used the extension in the simulation,
out of 100,000 generated packets, 93,332 were received
before their deadline. This indicates that the model produces
realistic results and that Algorithm 1 closely approximates
theoretical values, in the long run.
Experiment 3: Sensitivity
Since our model requires the sender to estimate the end-
to-end characteristics of the network being used (discussed
in Section VIII), we analyse how sensitive the model is to
inaccurate estimations. In particular, Figure 3 (top) shows
how erroneous bandwidth estimation affects the communi-
cation quality when two paths are used simultaneously (with
the network characteristics presented in Table III, λ = 90
Mbps, δ = 800 milliseconds). On the left-hand side of the
%
n
i
)
Q
(
y
t
i
l
a
u
Q
%
n
i
)
Q
(
y
t
i
l
a
u
Q
%
n
i
)
Q
(
y
t
i
l
a
u
Q
Path 1
Path 2
100
90
80
70
60
50
-50
-40
-30
-20
-10
0
10
20
30
40
50
Error on the estimated bandwidth in %
100
90
80
70
60
50
100
84
68
52
36
20
-50
-40
-30
-20
-10
0
10
20
30
40
50
Error on the estimated delay in %
-0.2 -0.1
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
1
Error on the estimated loss
Figure 3.
model in function of estimation errors on the two different paths.
Simulation results showing the performance of our multipath
With regard to delay (middle of Figure 3), as expected,
the quality is maximal when there is no estimation error.
Moreover, there is a large plateau at the maximum quality
value, which indicates that, in this particular scenario, the
model is not sensitive to small (< 10%) erroneous delay
estimations.
Finally, the bottom part of Figure 3 shows that erroneously
estimating loss (by a reasonable amount) also results in a
small decrease in communication quality.
494
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:36:58 UTC from IEEE Xplore.  Restrictions apply. 
VIII. PRACTICAL CONSIDERATIONS
A. Estimation Techniques
The model presented above assumes that the sender has a
some knowledge about the network’s characteristics. To use
the model in practice, it is necessary to estimate bandwidth,
delay, and loss, on each path. In this section, we discuss ap-
proaches for estimating these values in a real-world setting.
Bandwidth Estimation: The bandwidth of a network
path is probably the most challenging metric to estimate,
for several reasons. Firstly, bandwidth is a broad term and
can refer to at least three different speciﬁc metrics in the
context of data networks: capacity (maximum possible band-
width), available bandwidth (maximum unused bandwidth),
and TCP throughput or bulk transfer capacity (throughput
obtainable by a single TCP connection, which is not an ap-
propriate metric in the context of this paper) [27]. Moreover,
for each of these metrics, several estimation techniques have
been proposed and many tools (open source or commercial)
are available, each with advantages and drawbacks. Another
important aspect
to consider is congestion control. TCP
typically uses window-based congestion control, but other
schemes based on an explicit optimization of the sending
rate have been developed. For example, PCC [28] adjusts the
sending rate depending on the outcome of a utility function.
When the system reaches a stable state, the rate determined
by the congestion control algorithm can directly be used as
the value of bi in our model.
Delay Estimation: Estimating the average delay is
relatively straightforward. As soon as an acknowledgment
is received, an RTT value can be computed. However, as
we assume that acknowledgments always come from the
same path (the one with the lowest latency), estimating the
delay of all paths requires a more elaborate acknowledgment
scheme (such as the one we outline in Section VIII-C). To
estimate the probability distribution Di that delay follows
on a given path (Equation 24), two approaches are possible.