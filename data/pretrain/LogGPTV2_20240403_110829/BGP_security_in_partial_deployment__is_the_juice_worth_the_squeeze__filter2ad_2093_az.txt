Corollary E.1 tells us that for determining whether s is
immune, doomed or protectable in security 3rd model, it is
suﬃcient to keep track of all the routes of the best type and
shortest length of s (i.e. all the routes in BPR(s,∅, m, d)),
because s is guaranteed to stabilize to one of these routes.
Therefore, if all such routes are legitimate (resp., attacked),
then s will always stabilize to a legitimate (resp., attacked)
route under any S*BGP deployment S, so s must be im-
mune (resp., doomed). However, if some of these routes are
legitimate and some are attacked, then whether s stabilizes
to a route to m or d depends on deployment S, so s must
be protectable.
E.2 Computing partitions: security 2nd
The algorithm for determining partitions for the security
2nd model is slightly diﬀerent from that used when security is
third. We still use the algorithm from Appendix B.2, except
that now, for every AS discovered in the BFS computation
we need to keep track of all perceivable routes in its PR
set that are of the same type as the routes in its BPR set.
We keep track of whether (1) all such routes lead to the
destination, or (2) all such routes lead to the attacker or (3)
some of these routes lead to the destination and others to the
attacker. We classify ASes in the 1st category as immune,
ASes in the 2nd category as doomed, and ASes in the 3rd
category as protectable.
The following allows us to prove the correctness of this
algorithm:
Corollary E.2. In the security 2nd routing model, for
any destination d, attacker m source s and deployment S ⊆
V , s will stabilize to a route of the same type as any route
in BPR(s,∅, m, d).
Proof. This follows from the correctness of our algo-
rithm for computing routes in the security 2nd model (Ap-
pendix B.3). Because in the security 2nd model security is
prioritized above route length, but below route type, all the
routes in BPR(s)r must be contained in the set of routes in
PR(s, m, d) that are of the same type as routes in BPR(s,∅, m, d).
Recall that BPRr(s) is the set of best perceivable routes of
s during iteration r of the appropriate subroutines FSCR
and FCR, FPeeR, or FSPrvR and FPrvR of our algorithm,
if BPR(s, S, m, d) contains customer, peer or provider routes
respectively. Also, note that by the correctness of our al-
gorithm, s must stabilize to a route in BPRr(s) for some
iteration r of exactly one of these subroutines.
Therefore, if s has customer routes in BPR(s,∅, m, d), it
will be “ﬁxed” to a route during either the FSCR or FCR
subroutines of this algorithm for any choice of S. If s has
peer routes in BPR(s,∅, m, d), it will be “ﬁxed” to a route
in the FPeeR subroutine for any choice of S. Finally, if s
has provider routes in BPR(s,∅, m, d), it will be “ﬁxed” to a
route in either FSPrvR or FPrvR subroutines for any choice
of S.
Corollary E.2 tells us that to determine if s is immune,
doomed or protectable in security 2nd model, it is suﬃcient
to keep track of all the routes of the best type of s (i.e.,
. all s’s perceivable routes of the same type as routes in
BPR(s,∅, m, d)), because s is guaranteed to stabilize to one
of these routes. Therefore, if all such perceivable routes are
legitimate (resp., attacked) , then s must stabilize to a legit-
imate (resp., attacked) route under any S*BGP deployment
S, so s must be immune (resp., doomed). However, if some
of these routes are legitimate and some are attacked, then
whether s stabilizes to a route to m or d depends on deploy-
ment S, so s must be protectable.
E.3 Computing partitions: security 1st
In this paper we assume that all source ASes are pro-
tectable in security 1st model (see e.g., Figure 3). Techni-
cally, however, there can be doomed and immune ASes in
the security 1st model, in a few exceptional cases; here we
argue the the number of such ASes is negligible.
Doomed ASes. We can characterize doomed ASes as
follows.
Observation E.3. In the security 1st model, for a par-
ticular destination-attacker pair (d, m), a source AS vi is
doomed if and only if every one of its perceivable routes
PR(vi, m, d) contains m.
If every perceivable route from vi to d contains m, then
there is no S*BGP deployment scenario that could result
in vi being happy. On the other hand, if vi is not doomed,
then there must be at least one S*BGP deployment scenario
that results in vi being happy, in which case vi must select
a route to d that does not contain m.
ASes that single-homed to the attacking AS m are cer-
tainly doomed, per Observation E.4. There are 11, 953 and
11, 585 single-homed stub ASes (without peers) for the reg-