lpiSPIMQConnect
zstMQConnect
ziiMQCONN
ziiClearUpAgent
xcsTerminate
xlsThreadInitialization
xcsConnectSharedMem
xstConnSetInSPbyHandle
xstConnSharedMemSet
xcsFFST
MQM Trace History
xcsCheckProcess
xlsThreadInitialization
-->
IBM MQ troubleshooting and support 365
xcsConnectSharedMem
-->
xcsRequestThreadMutexSem
xihGetConnSPDetailsFromList
xstCreateConnExtentList
xstConnSetInSPbyHandle
-->
xstSerialiseSPList
-->
xllSpinLockRequest
xstGetSetDetailsFromSPByHandle
xstConnSharedMemSet
-->
xstConnectExtent
-->
xstAddConnExtentToList
xcsBuildDumpPtr
-->
xcsGetMem
xcsBuildDumpPtr
xcsBuildDumpPtr
xcsFFST
Process Control Block
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :8bba0:0:6d E7C9C8D7 000004E0 00000699 00000000 XIHP...\...r....
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :8bbb0:1:6d 00000000 00000002 00000000 00000000 ................
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :8bbc0:2:6d 80000000 00000000 EC161F7C FC002DB0 ...........@...¢
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :8bbd0:3:6d 80000000 00000000 EC161F7C FC002DB0 ...........@...¢
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :8bbe0:4:6d 00000000 00000000 00000000 00000000 ................
Thread Control Block
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :1db0:20:6d E7C9C8E3 00001320 00000000 00000000 XIHT............
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :1dc0:21:6d 00000001 00000000 00000000 00000000 ................
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :1dd0:22:6d 80000000 00000000 DD13C17B 81001000 ..........A#a...
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :1de0:23:6d 00000000 00000046 00000002 00000001 ................
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :1df0:24:6d 00000000 00000000 00000000 00000000 ................
RecoveryIndex
SPP:0000 :1aefSTRMQM_R MAYFCT 020100 :2064:128:6d 00000000 ....
Note:
1.The MQM Trace History section is a log of the 200 most recent function trace statements, and is
recorded in the FFST report regardless of any TRCMQM settings.
2.The queue manager details are recorded only for jobs that are connected to a queue manager subpool.
3.When the failing component is xehAS400ConditionHandler, additional data is logged in the errors
directory giving extracts from the job log relating to the exception condition.
The function stack and trace history are used by IBM to assist in problem determination. In most cases,
there is little that the system administrator can do when an FFST report is generated, apart from raising
problems through the IBM Support Center.
366 Troubleshooting and Support for IBM MQ
FFST: IBM MQ for Windows
Describes the name, location, and contents of the First Failure Support Technology ( FFST ) files for
Windows systems.
In IBM MQ for Windows, FFST information is recorded in a file in the C:\Program
Files\IBM\MQ\errors directory.
An FFST file contains one or more records. Each FFST record contains information about an error that
is normally severe, and possibly unrecoverable. These records typically indicate either a configuration
problem with the system or an IBM MQ internal error.
FFST files are named AMQ nnnnn.mm.FDC, where:
nnnnn
Is the ID of the process reporting the error
mm
Starts at 0. If the full file name already exists, this value is incremented by one until a unique FFST file
name is found. An FFST file name can already exist if a process is reused.
An instance of a process will write all FFST information to the same FFST file. If multiple errors occur
during a single execution of the process, an FFST file can contain many records.
When a process writes an FFST record it also sends a record to the Event Log. The record contains
the name of the FFST file to assist in automatic problem tracking. The Event log entry is made at the
application level.
A typical FFST log is shown in Figure 56 on page 368.
IBM MQ troubleshooting and support 367
+-----------------------------------------------------------------------------+
| WebSphere MQ First Failure Symptom Report |
| ========================================= |
| |
| Date/Time :- Mon January 28 2008 21:59:06 GMT |
| UTC Time/Zone :- 1201539869.892015 0 GMT |
| Host Name :- 99VXY09 (Windows 7 Build 2600: Service Pack 1) |
| PIDS :- 5724H7200 |
| LVLS :- 7.0.0.0 |
| Product Long Name :- IBM MQ for Windows |
| Vendor :- IBM |
| Probe Id :- HL010004 |
| Application Name :- MQM |
| Component :- hlgReserveLogSpace |
| SCCS Info :- lib/logger/amqhlge0.c, 1.26 |
| Line Number :- 246 |
| Build Date :- Jan 25 2008 |
| CMVC level :- p000-L050202 |
| Build Type :- IKAP - (Production) |
| UserID :- IBM_User |
| Process Name :- C:\Program Files\IBM\MQ\bin\amqzlaa0.exe |
| Process :- 00003456 |
| Thread :- 00000030 |
| QueueManager :- qmgr2 |
| ConnId(1) IPCC :- 162 |
| ConnId(2) QM :- 45 |
| Major Errorcode :- hrcE_LOG_FULL |
| Minor Errorcode :- OK |
| Probe Type :- MSGAMQ6709 |
| Probe Severity :- 2 |
| Probe Description :- AMQ6709: The log for the Queue manager is full. |
| FDCSequenceNumber :- 0 |
+-----------------------------------------------------------------------------+
MQM Function Stack
zlaMainThread
zlaProcessMessage
zlaProcessMQIRequest
zlaMQPUT
zsqMQPUT
kpiMQPUT
kqiPutIt
kqiPutMsgSegments
apiPutMessage
aqmPutMessage
aqhPutMessage
aqqWriteMsg
aqqWriteMsgData
aqlReservePutSpace
almReserveSpace
hlgReserveLogSpace
xcsFFST
MQM Trace History
-------------} hlgReserveLogSpace rc=hrcW_LOG_GETTING_VERY_FULL
-------------{ xllLongLockRequest
-------------} xllLongLockRequest rc=OK
...
Figure 56. Sample IBM MQ for Windows First Failure Symptom Report
The Function Stack and Trace History are used by IBM to assist in problem determination. In many cases
there is little that the system administrator can do when an FFST record is generated, apart from raising
problems through the IBM Support Center.
In certain circumstances a small dump file can be generated in addition to an FFST file and placed in the
C:\Program Files\IBM\MQ\errors directory. A dump file will have the same name as the FFST file,
in the form AMQnnnnn.mm.dmp. These files can be used by IBM to assist in problem determination.
368 Troubleshooting and Support for IBM MQ
First Failure Support Technology ( FFST ) files and Windows clients
The files are produced already formatted and are in the errors subdirectory of the IBM MQ MQI client
installation directory.
These are normally severe, unrecoverable errors and indicate either a configuration problem with the
system or an IBM MQ internal error.
The files are named AMQnnnnn.mm.FDC, where:
• nnnnn is the process ID reporting the error
• mm is a sequence number, normally 0
When a process creates an FFST it also sends a record to the system log. The record contains the name of
the FFST file to assist in automatic problem tracking.
The system log entry is made at the "user.error" level.
First Failure Support Technology is explained in detail in First Failure Support Technology ( FFST ).
FFST: IBM MQ classes for JMS
Describes the name, location, and contents of the First Failure Support Technology ( FFST ) files that are
generated by the IBM MQ classes for JMS.
When using the IBM MQ classes for JMS, FFST information is recorded in a file in a directory
that is called FFDC, which by default is a subdirectory of the current working directory for the
IBM MQ classes for JMS application that was running when the FFST was generated. The FFST
information is recorded whether you are using Jakarta Messaging 3.0 or JMS 2.0. If the property
com.ibm.msg.client.commonservices.trace.outputName has been set in the IBM MQ classes for JMS
configuration file, the FFDC directory is a subdirectory of the directory that the property points to. For
more information, see The IBM MQ classes for JMS/Jakarta Messaging configuration file.
An FFST file contains one FFST record. Each FFST record contains information about an error that
is normally severe, and possibly unrecoverable. These records typically indicate either a configuration
problem with the system or an internal error within the IBM MQ classes for JMS .
FFST files are named JMSC nnnn.FDC, where nnnn starts at 1. If the full file name already exists, this
value is incremented by one until a unique FFST file name is found.
An instance of an IBM MQ classes for JMS application writes FFST information to multiple FFST files.
If multiple errors occur during a single execution of the application, each FFST record is written to a
different FFST file.
Sections of an FFST record
An FFST record that is generated by the IBM MQ classes for JMS contains the following sections:
The header
A header, indicating the time when the FFST record was created, the platform that the IBM MQ
classes for JMS application is running on, and the internal method that was being called. The header
also contains a probe identifier, which uniquely identifies the place within the IBM MQ classes for JMS
that generated the FFST record.
Data
Some internal data that is associated with the FFST record.
Version information
Information about the version of the IBM MQ classes for JMS being used by the application that
generated the FFST record.
Stack Trace
The Java stack trace for the thread that generated the FFST record.
IBM MQ troubleshooting and support 369
Property Store Contents
A list of all of the Java system properties that have been set on the Java Runtime Environment that the
IBM MQ classes for JMS application is running in.
WorkQueueMananger Contents
Information about the internal thread pool that is used by the IBM MQ classes for JMS .
Runtime properties
Details about the amount of memory and the number of processors available on the system where the
IBM MQ classes for JMS application is running.
Component Manager Contents
Some information about the internal components that are loaded by the IBM MQ classes for JMS .
Provider Specific information
Information about all of the active JMS Connections, JMS Sessions, MessageProducer, and
MessageConsumer objects currently being used by the IBM MQ classes for JMS application that was
running when the FFST was generated. This information includes the name of the queue manager that
JMS Connections and JMS Sessions are connected to, and the name of the IBM MQ queue or topic
objects that are being used by MessageProducers and MessageConsumers.
All Thread information
Details about the state of all of the active threads in the Java Runtime Environment that the IBM MQ
classes for JMS application was running in when the FFST record was generated. The name of each
thread is shown, together with a Java stack trace for every thread.
Example FFST log file
----------------------------------START FFST------------------------------------
c:\JBoss-6.0.0\bin\FFDC\JMSCC0007.FDC PID:4472
JMS Common Client First Failure Symptom Report
Product :- IBM MQ classes for JMS
Date/Time :- Mon Feb 03 14:14:46 GMT 2014
System time :- 1391436886081
Operating System :- Windows Server 2008
UserID :- pault
Java Vendor :- IBM Corporation
Java Version :- 2.6
Source Class :- com.ibm.msg.client.commonservices.j2se.wmqsupport.PropertyStoreImpl
Source Method :- getBooleanProperty(String)
ProbeID :- XS002005
Thread :- name=pool-1-thread-3 priority=5 group=workmanager-threads
ccl=BaseClassLoader@ef1c3794{vfs:///C:/JBoss-6.0.0/server/default/deploy/basicMDB.ear}
Data
----
| name :- com.ibm.mq.connector.performJavaEEContainerChecks
Version information
-------------------
Java Message Service Client
7.5.0.2
p750-002-130627
Production
IBM MQ classes for Java Message Service
7.5.0.2
p750-002-130627
Production
IBM MQ JMS Provider
7.5.0.2
p750-002-130627
Production
Common Services for Java Platform, Standard Edition
7.5.0.2
p750-002-130627
370 Troubleshooting and Support for IBM MQ
Production
Stack trace
-----------
Stack trace to show the location of the FFST call
| FFST Location :- java.lang.Exception
| at com.ibm.msg.client.commonservices.trace.Trace.getCurrentPosition(Trace.java:1972)
| at com.ibm.msg.client.commonservices.trace.Trace.createFFSTString(Trace.java:1911)
| at com.ibm.msg.client.commonservices.trace.Trace.ffstInternal(Trace.java:1800)
| at com.ibm.msg.client.commonservices.trace.Trace.ffst(Trace.java:1624)
| at
com.ibm.msg.client.commonservices.j2se.propertystore.PropertyStoreImpl.getBooleanProperty(
PropertyStoreImpl.java:322)
| at
com.ibm.msg.client.commonservices.propertystore.PropertyStore.getBooleanPropertyObject(Pr
opertyStore.java:302)
| at
com.ibm.mq.connector.outbound.ConnectionWrapper.jcaMethodAllowed(ConnectionWrapper.java:510)
| at