### 标准属性
- **标准属性**：Created、LastModified、Permissions、Owner、Group、Size、Contents、Flags（仅限 Unix）、SymLinkPath（仅限 Unix）

### 作为目录装入的驱动器
- 如果不是网络驱动器，可以将作为目录装入的驱动器视为任意其他目录。网络驱动器在此情况下会被忽略。

### 替换数据流
- **基于 NTFS 的文件系统支持替换数据流**：使用此功能时，其行为类似于文件中的多个文件。
- **示例**：
  ```cmd
  echo plain > sample.txt
  echo alternate > sample.txt:s
  more < sample.txt
  ```
- **特定流的匹配**：使用 `:` 符号来指定特定流。例如，`sample.txt:s` 仅匹配 "s" 流，而不匹配主要的 `sample.txt` 流。
- **排除所有替换流**：以下示例将包括 `sample.txt`，但排除其所有替换流：
  ```xml
  <FileSet>
    <Include>sample.txt</Include>
    <Exclude>sample.txt:*</Exclude>
  </FileSet>
  ```

### Key 的含义
- **Key** 是一种模式，用于匹配相对于 "base" 指定的目录相对的文件路径。这是一种层次结构模式，其中用 `/` 隔开的模式各部分与给定操作系统的文件分隔符隔开的路径各部分匹配。

### 子元素
- **Include/Exclude**：有关允许的属性和子元素，请参阅 include/exclude 的一般说明（第 218 页）。此处仅包含与该 FileSet 实体集类相关的特定信息。

### FileSet 的 Include/Exclude 特殊属性
- **executable**：确定文件是否可执行。这并不意味着文件权限允许执行此文件，而是检查文件的内容以确定文件是否是可执行文件。
- **注意**：这是一个相对开销较大的操作，因为它需要客户端打开文件并检查前一千或两千个字节以查找有效的可执行映像标头。如果任何包括/排除规则使用 "executable"，将导致扫描次数减少。

### GroupSet
- **GroupSet** 表示一个组集。这些组仅仅是本地组。
- **标记属性**：相对于完整性监控规则所监控的实体的属性，以下是标记本身的 XML 属性。
  - **onChange**：将受实时监控。默认值为 `false`，允许值为 `true` 或 `false`。
- **实体集属性**：
  - **Description**：（仅限 Windows）组的文字描述。
  - **Group**：组 ID 和名称。
  - **Members**：组成员的逗号分隔列表。
  - **SubGroups**：（仅限 Windows）组的各子组的逗号分隔列表。
- **速记属性**：Standard 包括 Group、Members、SubGroups。
- **Key 的含义**：Key 是组的名称。这不是层次结构实体集，因此 `**` 模式不适用。

### InstalledSoftwareSet
- **InstalledSoftwareSet** 表示一组已安装的软件。用于唯一标识已安装应用程序的 "key" 的组成是特定于平台的，通常是应用程序名称或唯一数值的速记版本。
- **Key 的含义**：Key 是已安装软件的名称。这不是层次结构键，因此 `**` 模式不适用。在 Windows 上，key 通常是 GUID。
- **子元素**：Include 和 Exclude。
- **特殊属性**：
  - **name**（仅限 Windows）：允许在应用程序显示名称中使用 `?` 和 `*` 通配符匹配。
  - **manufacturer**：允许在应用程序的出版商或制造商中使用 `?` 和 `*` 通配符匹配。

### PortSet
- **PortSet** 代表一组侦听端口。
- **标记属性**：
  - **onChange**：将受实时监控。默认值为 `false`，允许值为 `true` 或 `false`。
- **实体集属性**：
  - **Created**：仅限 Windows，表示创建此 TCP/UDP 链接的时间。
  - **Listeners**：活动侦听器数。
  - **Path**：仅限 Windows，指定拥有相应端口的模块的简短名称。
  - **Processes**：仅限 Windows，指定拥有相应端口的模块的完整路径。
  - **ProcessId**：仅限 Windows，指定执行此端口绑定的进程的 PID。
  - **User**：仅限 Linux，指定拥有相应端口的用户。
- **Key 的格式**：
  - 例如：`tcp/172.14.207.94/80`
  - 对于 IPv6 地址：`tcp6/3ffe:1900:4545:3:200:f8ff:fe21:67cf/80`
- **键的匹配**：使用 `*` 和 `?` 可执行 Unix 风格的全局匹配。例如：
  - `*/72.14.207.9?/80` 匹配 IP 地址为 72.14.207.90 到 72.14.207.99 上的端口 80。
  - `*/72.14.207.2*/80` 匹配 IP 地址 72.14.207.2、72.14.207.20 到 72.14.207.29 以及 72.14.207.200 到 72.14.207.255 上的端口 80。
  - `*/80` 匹配任意 IP 上的端口 80。

希望这些优化后的文本更加清晰、连贯和专业。如果有进一步的需求，请随时告知！