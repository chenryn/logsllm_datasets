    print(lis)
#### **实例 040：逆序列表**
题目 将一个数组逆序输出。
程序分析 依次交换位置，或者直接调用 reverse 方法。
    lis=[1,10,100,1000,10000,100000]
    for i in range(int(len(lis)/2)):
        lis[i],lis[len(lis)-1-i]=lis[len(lis)-1-i],lis[i]
    print('第一种实现：')
    print(lis)
    lis=[1,10,100,1000,10000,100000]
    print('第二种实现：')
    lis.reverse()
    print(lis)
#### **实例 041：类的方法与变量**
题目 模仿静态变量的用法。
程序分析 构造类，了解类的方法与变量。
    def dummy():
        i=0
        print(i)
        i+=1
    class cls:
        i=0
        def dummy(self):
            print(self.i)
            self.i+=1
    a=cls()
    for i in range(50):
        dummy()
        a.dummy()
#### **实例 042：变量作用域**
题目 学习使用 auto 定义变量的用法。
程序分析 python 中的变量作用域。
    i=0
    n=0
    def dummy():
        i=0
        print(i)
        i+=1
    def dummy2():
        global n
        print(n)
        n+=1
    print('函数内部的同名变量')
    for j in range(20):
        print(i)
        dummy()
        i+=1
    print('global声明同名变量')
    for k in range(20):
        print(n)
        dummy2()
        n+=10
#### **实例 043：作用域、类的方法与变量**
题目 模仿静态变量 (static) 另一案例。
程序分析 综合实例 041 和实例 042。
    class dummy:
        num=1
        def Num(self):
            print('class dummy num:',self.num)
            print('global num: ',num)
            self.num+=1
    n=dummy()
    num=1
    for i in range(5):
        num*=10
        n.Num()
#### **实例 044：矩阵相加**
题目 计算两个矩阵相加。
程序分析 创建一个新的矩阵，使用 for 迭代并取出 X 和 Y
矩阵中对应位置的值，相加后放到新矩阵的对应位置中。
    X = [[12,7,3],
        [4 ,5,6],
        [7 ,8,9]]
    Y = [[5,8,1],
        [6,7,3],
        [4,5,9]]
    res=[[0,0,0],
        [0,0,0],
        [0,0,0]]
    for i in range(len(res)):
        for j in range(len(res[0])):
            res[i][j]=X[i][j]+Y[i][j]
    print(res)
#### **实例 045：求和**
题目 统计 1 到 100 之和。
程序分析 无
    res=0
    for i in range(1,101):
        res+=i
    print(res)
#### **实例 046：打破循环**
题目 求输入数字的平方，如果平方运算后小于 50 则退出。
程序分析 无
    while True:
        try:
            n=float(input('输入一个数字：'))
        except:
            print('输入错误')
            continue
        dn=n**2
        print('其平方为：',dn)
        if dnb:
        print('a>b')
    else:
        print('a=b')
#### **实例 049：lambda**
题目 使用 lambda 来创建匿名函数。
程序分析 无
    Max=lambda x,y:x*(x>=y)+y*(y>x)
    Min=lambda x,y:x*(x>4
    d=c&b
    print('a:',bin(a))
    print('b:',bin(b))
    print('c:',bin(c))
    print('d:',bin(d))
#### **实例 055：按位取反**
题目 学习使用按位取反\~。
程序分析 \~0=1; \~1=0;
    print(~234)
    print(~~234)
#### **实例 056：画圈**
题目 画图，学用 circle 画圆形。
程序分析 无。
    from tkinter import *
    canvas=Canvas(width=800,height=600,bg='yellow')
    canvas.pack(expand=YES,fill=BOTH)
    k=1
    j=1
    for i in range(26):
        canvas.create_oval(310-k,250-k,310+k,250+k,width=1)
        k+=j
        j+=0.3
    mainloop()
#### **实例 057：画线**
题目 画图，学用 line 画直线。
程序分析 无。
    if __name__ == '__main__':
        from tkinter import *
        canvas = Canvas(width=300, height=300, bg='green')   
        canvas.pack(expand=YES, fill=BOTH)                  
        x0 = 263
        y0 = 263
        y1 = 275
        x1 = 275
        for i in range(19):
            canvas.create_line(x0,y0,x0,y1, width=1, fill='red')
            x0 = x0 - 5
            y0 = y0 - 5
            x1 = x1 + 5
            y1 = y1 + 5
        x0 = 263
        y1 = 275
        y0 = 263
        for i in range(21):
            canvas.create_line(x0,y0,x0,y1,fill = 'red')
            x0 += 5
            y0 += 5
            y1 += 5
        mainloop()
#### **实例 058：画矩形**
题目 画图，学用 rectangle 画方形。
程序分析 无。
    if __name__ == '__main__':
        from tkinter import *
        root = Tk()
        root.title('Canvas')
        canvas = Canvas(root,width = 400,height = 400,bg = 'yellow')
        x0 = 263
        y0 = 263
        y1 = 275
        x1 = 275
        for i in range(19):
            canvas.create_rectangle(x0,y0,x1,y1)
            x0 - = 5
            y0 - = 5
            x1 += 5
            y1 += 5
        canvas.pack()
        root.mainloop()
#### **实例 059：画图（丑）**
题目 画图，综合例子。
程序分析 丑。
    if __name__  == '__main__':
        from tkinter import *
        canvas = Canvas(width = 300,height = 300,bg = 'green')
        canvas.pack(expand = YES,fill = BOTH)
        x0 = 150
        y0 = 100
        canvas.create_oval(x0 - 10,y0 - 10,x0 + 10,y0 + 10)
        canvas.create_oval(x0 - 20,y0 - 20,x0 + 20,y0 + 20)
        canvas.create_oval(x0 - 50,y0 - 50,x0 + 50,y0 + 50)
        import math
        B = 0.809
        for i in range(16):
            a = 2 * math.pi / 16 * i
            x = math.ceil(x0 + 48 * math.cos(a))
            y = math.ceil(y0 + 48 * math.sin(a) * B)
            canvas.create_line(x0,y0,x,y,fill = 'red')
        canvas.create_oval(x0  60,y0  60,x0 + 60,y0 + 60)
        for k in range(501):
            for i in range(17):
                a = (2 * math.pi / 16) * i + (2 * math.pi / 180) * k
                x = math.ceil(x0 + 48 * math.cos(a))
                y = math.ceil(y0 + 48 + math.sin(a) * B)
                canvas.create_line(x0,y0,x,y,fill = 'red')
            for j in range(51):
                a = (2 * math.pi / 16) * i + (2* math.pi / 180) * k - 1
                x = math.ceil(x0 + 48 * math.cos(a))
                y = math.ceil(y0 + 48 * math.sin(a) * B)
                canvas.create_line(x0,y0,x,y,fill = 'red')
        mainloop()
#### **实例 060：字符串长度**
题目 计算字符串长度。
程序分析 无。
    s='zhangguang101'
    print(len(s))
#### **实例 061：杨辉三角**
题目 打印出杨辉三角形前十行。
程序分析 无。
    def generate(numRows):
        r = [[1]]
        for i in range(1,numRows):
            r.append(list(map(lambda x,y:x+y, [0]+r[-1],r[-1]+[0])))
        return r[:numRows]
    a=generate(10)
    for i in a:
        print(i)
#### **实例 062：查找字符串**
题目 查找字符串。
程序分析 无。
    s1='aabbxuebixuebi'
    s2='ab'
    s3='xue'
    print(s1.find(s2))
    print(s1.find(s3))
#### **实例 063：画椭圆**
题目 画椭圆。
程序分析 使用 tkinter。
    if __name__ == '__main__':
        from tkinter import *
        x = 360
        y = 160
        top = y - 30
        bottom = y - 30
        canvas = Canvas(width = 400,height = 600,bg = 'white')