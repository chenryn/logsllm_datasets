# 4-Base64
---
### 目标
对 `T4.exe` 进行逆向分析，重点在于识别并理解其中的 Base64 编码逻辑。

### 分析步骤

1. **打开目标文件**：
   - 使用 IDA Pro 打开 `T4.exe` 文件。
   - 定位到 `main` 函数，并进行初步分析。根据需要重命名函数以提高代码可读性。

2. **识别关键函数**：
   - 在 `main` 函数的第 17 行，发现一个名为 `sub_455A94` 的子函数。
   - 双击进入 `sub_455A94`，观察其内部实现。该函数实际上是对 `sub_45A3F0` 的一层封装。
   - 继续跟进 `sub_45A3F0`，进一步深入分析其具体行为。

3. **查找全局资源引用**：
   - 在 `sub_45A3F0` 中，注意到多次引用了名为 `off_529000` 的全局变量。
   - 双击进入 `off_529000`，跳转至其定义处。
   - 查看定义可知，`off_529000` 是一个指向字符串 `aAbcdefghijklmn` 的指针。

4. **定位关键字符串**：
   - 在 `aAbcdefghijklmn` 的数据段中，发现了另一个重要字符串：`ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789`。
   - 根据经验判断，这很可能是用于 Base64 编码/解码的标准字符集。

5. **确认编码流程**：
   - 通过以上线索，可以推测 `sub_45A3F0` 实现了一个 Base64 编码过程。
   - 为了验证这一假设，尝试将已知的编码结果 `Zm1jZH9cSVJXT0NFSFJHW09ZU1tVaA==` 解码为原始数据。
   - 然后使用某个值（例如 `i`）与解码后的每个字节进行异或操作，得到最终输出。

6. **解题方法**：
   - 利用 CyberChef 工具快速将 Base64 字符串转换为格式化的 16 进制表示。
   - 应用之前编写的异或运算脚本处理这些十六进制数值，从而恢复出原始输入。

### 参考资料
- [萌新学逆向——T4 Base64算法](https://mp.weixin.qq.com/s/HUE8DE-K4n0NytzrO4I49A)

通过上述步骤，我们不仅能够更好地理解程序的工作原理，还能够有效地解决基于 Base64 编码的问题。