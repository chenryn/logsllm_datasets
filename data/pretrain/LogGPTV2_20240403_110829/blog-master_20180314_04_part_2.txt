3、写，当某个primary shard不可用时，会将数据写入到其他可用的primary shard。除非所有的primary shard都不可用，这次聚合的中间结果才会丢弃。  
写高可用取决于primary shard数，坏num_shards-1=2个NODE，不影响写，不会丢数据。  
当所有primary shard都不可用时，如果集群中还有可用的NODE(即CV设置的num_shards小于PP集群的节点数时)，那么这个NODE会继续计算，但是结果会被丢弃（因为没有任何可用的PRIMARY SHARD）。  
4、写，如果cv采用了读优化模式，那么如果有primary shard异常，虽然数据可以正常路由到其他的primary shard，但是打乱了读优化模式下的cv group数据分布，会导致数据不平衡。读不平衡的CV，同时又不进行COMBINE，就会读到不一致的结果。如何解决请看后面的平衡章节。  
### 什么时候可能丢数据？  
当primary shard所在的NODE挂掉，并且这个NODE不可能再恢复时，那么可能导致数据丢失。（由于replica shard是异步的逻辑复制，所以不能保证数据不丢失，而且replica是用来提高读负载均衡能力的，也未设计为FAILOVER节点，即单向复制）  
1、如何防止数据丢失？  
为NODE所在的PostgreSQL实例实施高可用，备份策略。要做到0丢失，可以使用实例级多副本的方法，或者共享存储多副本的方法。例子：     
[《PostgreSQL 10 on ECS 实施 流复制备库镜像+自动快照备份+自动备份验证+自动清理备份与归档》](../201711/20171129_02.md)    
[《PostgreSQL 10 + PostGIS + Sharding(pg_pathman) + MySQL(fdw外部表) on ECS 部署指南(适合新用户)》](../201710/20171018_01.md)    
只要primary node的数据不丢失，就不会有数据丢失。  
2、读时，如何跳过不可用的shard（指某个shard的primary shard以及所有的replica shard都不可用），输出部分结果？  
```  
pipeline_cluster.skip_unavailable = true  
查询时，可以跳过不可用的shard，返回不完整的CV结果。  
```  
### 读优化模式数据rebalance  
在读优化模式下（read_optimized），当有primary shard异常时，正常来说应该分发到这个primary shard的cv group，可能会先写到其他的primary shard，保证写正常进行同时保证数据的完整性。  
但是由于读优化模式下，读CV时，不做数据COMBINE，所以这部分数据会存在但是“读不到”。  
pipeline_cluster.shards元数据表的balanced列，如果为false，表示这个shard的数据需要rebalance。如果你发现读优化模式的shard balanced列为false，就需要手工rebalance了。  
写优化模式pipeline_cluster.shards.balanced永远是true的，因为写优化模式下，不需要rebalance，查询时会combine agg column。  
Pipelinedb cluster版，未来会考虑自动在后台对读优化模式的cv，进行检测，发现需要rebalance时，自动进行rebalance，确保查询的全局一致性。(当然，这是个偶发问题，暂时看来还没有非常完美的解决方案)  
内核优化建议：  
对于读优化模式，可以先查看一下是否需要rebalance，如果需要，则查询时使用combine进行查询，同时通知rebalance任务，开启异步的rebalance。  
## 渊源    
pipelinedb与citus有一定的渊源，cluster版本，应该借鉴了很多citus pg_shard插件的设计理念，甚至可能有大量代码复用。    
https://www.citusdata.com/product    
https://github.com/citusdata/pg_shard    
https://github.com/citusdata/citus    
## 小结    
pipelinedb cluster定位是一个分布式流式计算引擎。支持了良好的计算扩展性、可靠性、负载均衡能力，同一个CV支持跨SHARD计算，支持读优化模式，支持写优化模式，同时支持写优化模式的自动合并聚合计算结果，是一个非常棒的分布式流计算引擎。      
通过分发中间聚合结果，优化了网络开销。     
在读可用性方面，CV通过内部逻辑订阅实现多副本，解决了读高可用与负载均衡的问题。  
在写可用性方面，任意primary shard都可以接受数据存储（读时combine），所以写本身就是高可用的。  
## 参考    
http://enterprise.pipelinedb.com/docs/index.html    
http://docs.pipelinedb.com/aggregates.html#combine    
https://www.citusdata.com/product    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")