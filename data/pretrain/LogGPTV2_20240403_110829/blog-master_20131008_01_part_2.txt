[root@db-172-16-3-39 memory]# stap -e 'probe kernel.function("icmp_echo") {var=$skb; printf("%d\n", @cast(var,"sk_buff")->tstamp->off_sec); exit();}'  
1381207332  
5.6.12  in   
This expression evaluates to true if the array contains an element with the specified index.  
判断value是否是数组的下标, 返回0假 或 1真;  
举例 :   
[root@db-172-16-3-39 memory]# stap -e 'global arr1; probe begin {arr1["a"]=1; arr1["b"]=2; printf("%d\n", @1 in arr1); exit();}' "a"   
1  
[root@db-172-16-3-39 memory]# stap -e 'global arr1; probe begin {arr1["a"]=1; arr1["b"]=2; printf("%d\n", @1 in arr1); exit();}' "b"   
1  
[root@db-172-16-3-39 memory]# stap -e 'global arr1; probe begin {arr1["a"]=1; arr1["b"]=2; printf("%d\n", @1 in arr1); exit();}' "c"   
0  
5.6.13 [ , ... ] in   
The number of index values must match the number of indexes previously specified.  
如果数组的下标是多元下标, 那么需要使用这种语法来匹配 :   
[ , ... ] in   
下标个数必须相同. 否则报错  
举例 :   
[root@db-172-16-3-39 memory]# stap -e 'global arr1; probe begin {arr1["a","b","c"]=1; arr1["b","a","c"]=2; printf("%d\n", ["b", "a", "c"] in arr1); exit();}'  
1  
[root@db-172-16-3-39 memory]# stap -e 'global arr1; probe begin {arr1["a","b","c"]=1; arr1["b","a","c"]=2; printf("%d\n", ["a", "c", "b"] in arr1); exit();}'  
0  
如果下标个数不一致, 将报错  
[root@db-172-16-3-39 memory]# stap -e 'global arr1; probe begin {arr1["a","b","c"]=1; arr1["b","a","c"]=2; printf("%d\n", ["a", "c"] in arr1); exit();}'  
semantic error: inconsistent arity (3 vs 2): identifier 'arr1' at :1:98  
        source: global arr1; probe begin {arr1["a","b","c"]=1; arr1["b","a","c"]=2; printf("%d\n", ["a", "c"] in arr1); exit();}  
                                                                                                                 ^  
semantic error: arity 3 first inferred here: identifier 'arr1' at :1:27  
        source: global arr1; probe begin {arr1["a","b","c"]=1; arr1["b","a","c"]=2; printf("%d\n", ["a", "c"] in arr1); exit();}  
                                          ^  
Pass 2: analysis failed.  Try again with another '--vp 01' option.  
同样, 在定义数组时, 也必须与第一次定义一致, 所以以下操作也是错误的 :   
[root@db-172-16-3-39 memory]# stap -e 'global arr1; probe begin {arr1["a","b","c"]=1; arr1["b","a"]=2; exit();}'  
semantic error: inconsistent arity (3 vs 2): identifier 'arr1' at :1:48  
        source: global arr1; probe begin {arr1["a","b","c"]=1; arr1["b","a"]=2; exit();}  
                                                               ^  
semantic error: arity 3 first inferred here: identifier 'arr1' at :1:27  
        source: global arr1; probe begin {arr1["a","b","c"]=1; arr1["b","a"]=2; exit();}  
                                          ^  
Pass 2: analysis failed.  Try again with another '--vp 01' option.  
6. stap参数传入  
Literals passed in from the stap command line  
Literals are either strings enclosed in double quotes ('' '') or integers.  
Script arguments at the end of a command line are expanded as literals.   
You can use these in all contexts where literals are accepted.   
A reference to a nonexistent argument number is an error.  
5.7.1 $1 ... $ for literal pasting 传入整型用$  
Use $1 ... $ for pasting the entire argument string into the input stream, which will be further lexically tokenized.  
5.7.2 @1 ... @ for strings 传入字符串用@  
Use @1 ... @ for casting an entire argument as a string literal.  
5.7.3 Examples  
For example, if the following script named example.stp  
probe begin { printf("%d, %s\n", $1, @2) }  
is invoked as follows  
# stap example.stp '5+5' mystring  
then 5+5 is substituted for $1 and "mystring" for @2. The output will be  
10, mystring  
[参考]  
1. https://sourceware.org/systemtap/langref/Language_elements.html  
2. http://blog.163.com/digoal@126/blog/static/16387704020138392759478/  
3. http://en.wikipedia.org/wiki/Unary_operation  
4. http://en.wikipedia.org/wiki/Signed_number_representations  
5. http://blog.163.com/digoal@126/blog/static/163877040201391391613269/  
6.   
/usr/src/linux/include/linux/skbuff.h  
struct sk_buff {  
        /* These two members must be first. */  
        struct sk_buff          *next;  
        struct sk_buff          *prev;  
        struct sock             *sk;  
        struct skb_timeval      tstamp;  
        struct net_device       *dev;  
        struct net_device       *input_dev;  
        union {  
                struct tcphdr   *th;  
                struct udphdr   *uh;  
                struct icmphdr  *icmph;  
                struct igmphdr  *igmph;  
                struct iphdr    *ipiph;  
                struct ipv6hdr  *ipv6h;  
                unsigned char   *raw;  
        } h;  
        union {  
                struct iphdr    *iph;  
                struct ipv6hdr  *ipv6h;  
                struct arphdr   *arph;  
                unsigned char   *raw;  
        } nh;  
        union {  
                unsigned char   *raw;  
        } mac;  
        struct  dst_entry       *dst;  
        struct  sec_path        *sp;  
... 略  
6.   
/usr/src/debug/kernel-2.6.18/linux-2.6.18-348.12.1.el5.x86_64/net/ipv4/icmp.c  
static void icmp_echo(struct sk_buff *skb)  
{  
        if (!sysctl_icmp_echo_ignore_all) {  
                struct icmp_bxm icmp_param;  
                icmp_param.data.icmph      = *skb->h.icmph;  
                icmp_param.data.icmph.type = ICMP_ECHOREPLY;  
                icmp_param.skb             = skb;  
                icmp_param.offset          = 0;  
                icmp_param.data_len        = skb->len;  
                icmp_param.head_len        = sizeof(struct icmphdr);  
                icmp_reply(&icmp_param, skb);  
        }  
}  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")