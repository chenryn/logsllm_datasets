原文：
近日一类在野活跃且隐秘型很好的多功能恶意软件感染了西班牙和法国的诸多用户主机，其功能复杂完善，近乎绕过了市面上所有AV的检测。
### 0x01 摘要
近日国外安全专家enSilo和Adi
Zeligson发现了一款叫做DarkGate且从未被AV检测到的高度复杂的恶意软件。其设计是针对Windows工作站和支持一个反应性的命令和控制系统，DarkGate通过torrent文件传播。当用户执行时，DarkGate能够绕过多个AV产品的检测并执行恶意代码，包括加密货币挖掘、密码窃取、勒索和远程控制等。
DarkGate的特点:
  * 利用Akamai(阿卡迈 一家CDN公司)的CDN和AWS这样合法服务来建立C&C通信以规避AV检测。
  * 使用多种方法避免传统AV检测，包括某国际AV大厂的对`Process Hollowing`技术拦截。
  * 可通过几个已知的文件恢复工具防止核心文件被删的。
  * 使用了两种不同的用户帐户控制(UAC)绕过技术来提权
  * 可执行多种恶意代码，包括加密货币挖掘，密码窃取(窃取与密码钱包相关的用户凭证)，勒索和远程控制。
### 0x02 技术分析
这种恶意软件名为DarkGate，通过分析得知其旨在感染整个欧洲，特别是西班牙和法国的目标。DarkGate的功能包括挖矿、从加密钱包窃取凭证、勒索以及对感染PC进行远程控制。
enSilo发现这个恶意软件的作者建立了一个执行命令和控制的机制，方便他们在接收到新感染的密码钱包的通知后采取行动。如果DarkGate检测用户有任何有趣的操作时，他们就可以在被感染的机器上安装一个定制的远程访问工具，方便进行手动操作。
日常研究恶意软件活动的过程中，为了其功能以及开发者在感染后的操作我们偶尔会主动让恶意软件感染自己的测试机器。比如某次与恶意软件的开发者的邂逅中，我们很确定对方检测到了我们的活动，并且对方立即使用了特制的勒索软件感染了我们的测试机器，从而阻止我们的分析。
DarkGate这款恶意软件的作者似乎投入了大量的时间和精力，利用多种规避技术来避免被发现。其中一种使用的技术是Hook用户模式来绕过，这种技术使得DarkGate可以在很长一段时间内逃避各种AV的检测。
enSilo研究小组跟踪了“DarkGate”及其变种，发现大多数AV厂商都没有发现它。也正是这个发现促使我们开始研究恶意软件的各种新特性，这些特性在技术分析部分有提到。DarkGate的每一个变种技术都在不断革新，值得关注。
虽然挖矿，盗密码和勒索这几个功能表明作者的动机是为了钱，但是作者是否还有其他动机有待商榷。
### 0x03 变种分析
通过技术分析我们可以发现DarkGate与此前检测到的[Golroted](https://www.bankinfosecurity.asia/cert-in-warns-info-stealing-trojan-a-8444)恶意软有关联。其使用了`Nt* API`来调用并执行`Process
Hollowing`。此外，`Golroted`还使用了UAC绕过技术，这是一种基于`SilentCleanup`计划任务的技术。DarkGate同时使用了这两种技术。
在分析Golroted和DarkGate二进制文件的差异后，我们发现了两者有大量重叠的代码。如图1所示，两种恶意软件的变异体都在进程`vbc.exe`上执行`Process
Hollowing`函数。DarkGate稍作修改而已。
图1:Golrating和DARKGATE的二进制文件差异
### 0x04 感染策略
可以确定的是DarkGate和Golroted使用的两种截然不同的感染方法。恶意文件伪装为电影和电视剧的Torrent文件进行传播并在受害者的机器上执行VB脚本。
如图2所示众的第二个文件，`the-walking-dead-9-5-hdtv-720p.torrent.vbe`使用了一种更简单的方法来感染受害者，那就是直接发带有恶意文件的钓鱼邮件（图3）。
图2:TORRENT文件的截图
图3 包含`THE-WALKING-DEAD-9-5-HDTV-720P.TORRENT.VBE`文件的钓鱼邮件
### 0x05 DARKGATE执行四部曲
#### 0x05_add_01 起
DARKGATE使用了一种独特的多级解压方法。执行的第一个文件是被混淆后的VB脚本，其功能类似于国内的Downloader，只执行一些简单的操作。紧随其后的第一阶段，几个文件会被放入一个隐藏后的文件夹`C:\{username}`。其中包括`autoit3.exe`，`test.au3`,
`pe.bin`，`shell.txt`。接下来test.au3这个AutoIt脚本会调用autoit3.exe的删除功能并执行。
图4 被混淆后的VB脚本
#### 0x05_add_02 承
在第二阶段，AutoIt脚本会在自启目录下创建了一个名为`bill.ink`的快捷方式。创建完成后触发`C:\{username}\shell.txt`文件中的二进制代码。
#### 0x05_add_03 转
第三个阶段将会解密并执行`shell.txt`中的代码。该脚本使用了一种非常少见的技术来执行二进制代码。主要流程如下:
  * 从`shell.txt`众加载二进制代码并载入内存
  * 将数据复制到可执行内存空间(`DLLStructCreate`和`DllStructSetData`)
  * 引用`CallWindowProc`的二进制代码并作为`lpPrevWndFunc`参数来调用
图5 解密后的AUTOIT脚本
#### 0x05_add_04 合
最后，在前面提到的多级解压技术下从`shell.txt`中加载的二进制代码并执行以下操作:
  * 检索可执行文件，验证是否为了卡巴斯基下安装目录下的可执行文件名。
  * 读取`pe.bin`并解密。
  * 使用`Process Hollowing`技术将从`pe.bin`解密出来的代码注入到`vbc.exe`进程中。
研究发现如果DarkGate检测到卡巴斯基的存在，它会将恶意软件加载到shellcode的一部分，而不是使用`Process
Hollowing`技术。解密后的`pe.bin`文件是DarkGate的核心文件。负责与C&C服务器通信并执行接收到的命令。
总结一下这四个阶段的解压技术：
  1. 加载的初始代码是使用VB编写的，负责删除所有相关文件:
  2. autoit3.exe
  3. test.au3
  4. pe.bin
  5. shell.txt
一旦点击就会运行AutoIt脚本。
  1. AutoIt脚本用AutoIt解释器运行并解密二进制代码，然后将其加载到内存中。
  2. 执行二进制代码并绕过卡巴斯基的检测。
  3. 解密并执行最终的二进制文件`pe.bin`
图6 上诉四部曲流程图
最终的二进制文件会从`C:\{computer_name}`复制到`C:\Program
data`并使用当前用户生成id的前8位数字作为文件名称(格式为：ID2-xxxxx 后面会解释)。
最后的二进制文件在注册表中写入一个键值:`\SOFTWARE\Microsoft\Windows\CurrentVersion\Run`。
键名是用户生成id的前8位数字，键值是从`C:\{computer_name}`复制到`C:\Program
data`文件夹的AutoIt脚本，如图7所示:
图7 写入的键值
### 0x06 挖矿分析
DarkGate会先从C&C服务器上获取挖矿的程序  
图8 挖矿程序的下载请求
如图9所示,
`startminer`命令请求作为响应的一部分，目的是告诉恶意软件开始挖掘。分离消息的不同部分，第一部分将被加密写入`config.bin`配置中。即矿工程序的命令行。第二部分是`cpu.bin`解密后的矿工可执行文件。挖掘代码本身是通过`Process
Hollowing`技术注入到`systeminfo.exe`进程完成的。
图9:检索矿工负载
### 0x07 钱包凭证窃取分析
前面提到恶意软件的另一个功能是可以搜索并窃取加密钱包的凭证。恶意软件在windows前台进程的名称中查找与不同类型的加密钱包相关的特定字符串，如果找到匹配的字符串，则向C&C服务器发送特定的消息。
以下是受影响的网站/钱包程序列表:
检索值 | 目标  
---|---  
sign-in / hitbtc |   
binance - log in |   
litebit.eu - login |   
binance - iniciar sesi |   
cryptopia - login |   
user login - zb spot exchange |  
sign in | coinEx |   
electrum |   
bittrex.com - input |   
exchange - balances |  
eth) - log in |  
blockchain wallet |   
bitcoin core |   
kucoin |   
metamask |   
factores-Binance |  
litecoin core |   
myether |   
表1 受影响的网站及钱包程序
### 0x08 控制分析
以目前的情况来看，似乎DarkGate的作者使用了很复杂的技术来避免逆向分析以及网络安全产品的检测。
DarkGate将六个域名硬编码在了代码里面，如下所示：
  * akamai.la
  * hardwarenet.cc
  * ec2-14-122-45-127.compute-1.amazonaws.cdnprivate.tel
  * awsamazon.cc
  * battlenet.la
  * a40-77-229-13.deploy.static.akamaitechnologies.pw
值得一提的事作者似乎还使用了另一个混淆视听的技巧，即使用这些C2地址看起来像来自Akamai或Amazon的合法rDNS记录的NS记录。使用rDNS通信的原意是应该任何监视网络流量的人都很容易忽略和忽略它们。
### 0x09 两种避免AV检测的手法
DarkGate的作者最担心的似乎是AV的检测。所以其在反虚拟机和用户验证技术上投入了大量精力，而不是反调试技术。
#### 0x09_add_01 反虚拟机
DarkGate用来避免被AV检测到的第一种方法是确定自身是否是在沙箱或者虚拟机中。基于所使用的策略，我们认为作者开发时检测沙箱/虚拟机的部分不多，事实如此，因为现在的沙箱经过了很多优化，过多的检测也无益。
在图10中，我们可以看到DarkGate使用Delphi的`Sysutils::DiskSize`和`GlobalMemoryStatusEx`来获取磁盘大小和物理内存。如果当前该计算机的磁盘空间小于101GB或内存小于4GB就会被视为虚拟机，DarkGate将自动终止运行。
图10 环境硬盘和RAM的检测
#### 0x09_add_02 反AV
DarkGate会检测表2中列出的AV是否存在于受感染的机器上。除了卡巴斯基，Trend和IOBIt。对于其他大多数的AV来说，如果恶意软件检测到任何这些AV，它门也就只会通知服务器而已。
进程名 | AV厂商  
---|---  
astui.exe | Avast  
avpui.exe | Kaspersky  
avgui.exe | AVG  
egui.exe | Nod32  
bdagent | Bitdefender  
avguard.exe | Avira  
nis.exe | Norton  
ns.exe | Norton  
nortonsecurity.exe | Norton  
uiseagnt.exe | Trend Micro  
bytefence.exe | ByteFence  
psuaconsole.exe | Panda  
sdscan.exe Search & Destroy mcshield.exe | McAfee  
mcuicnt.exe | McAfee  
mpcmdrun.exe | Windows Defender  
superantispyware.exe | SUPER AntiSpyware  