## 谈谈蜜罐与内网安全
#### 0x00 写在前面
蜜罐系统通过在网络中部署感应节点，实时感知周边网络环境，同时将感应节点日志实时存储、可视化分析，来实现对网络环境中的威胁情况感知。网上的开源蜜罐很多，种类不一，不可枚举。有针对单个服务的蜜罐，也有多个服务整合在一起的。Github上有个项目，收集汇总了免费和开源的蜜罐，项目地址：[awesome-honeypots](https://github.com/paralax/awesome-honeypots)，该项目按照蜜罐类型做了分类，包括Web蜜罐、各种服务蜜罐以及一些蜜罐相关组件（包括网络分析工具、前端和可视化工具等），收集的很全面。
但是一个好的蜜罐，应该做到：
**能模拟大多数常见协议、能够模拟影响面广泛的应用协议和漏洞、能够在TCP/UDP全端口捕获未知的恶意扫描、蜜罐便于协议扩展、蜜罐结果的数据格式简单便于分析。**
#### 0x01 开源蜜罐调研
有大佬将一些开源蜜罐本地搭建试用，做了对比分析，详见《[开源蜜罐测评报告](https://www.freebuf.com/articles/paper/207739.html)》。作者分析了四十几个蜜罐，其实不用看文章，很多蜜罐由于年久没有更新维护，易用性不高。根据文中作者试用后的描述，感觉效果还不错的一些蜜罐如下：
> web蜜罐
  1. [snare](https://github.com/mushorg/snare): 一个Web蜜罐，该蜜罐可克隆某个网站，可捕捉到web攻击载荷。可以配合[tanner](https://github.com/mushorg/tanner)（评估HTTP请求并组成snare事件服务的响应）一起使用。但是snare在克隆网站的时候可能会有报错；
  2. [phpmyadmin_honeypot](https://github.com/gfoss/phpmyadmin_honeypot) : 一个简单有效的phpmyadmin蜜罐；
  3. [basic-auth-pot](https://github.com/bjeborn/basic-auth-pot): http身份验证蜜罐（可以捕捉到账号和密码也有访问的日志）；
  4. [Shadow Daemon](https://shadowd.zecure.org/overview/introduction/):一个不错的web蜜罐（需要二次开发把连接器弄进程序里面，这个过程有点麻烦），可以捕捉到web攻击载荷；
  5. [django-admin-honeypot](https://github.com/dmpayton/django-admin-honeypot) : 一个仿造Django管理员登陆页面的web蜜罐，用于记录未经授权访问的企图并通知管理员。
> 服务蜜罐
  1. [RDPy](https://github.com/citronneur/rdpy) :是Microsoft RDP远程桌面协议协议客户端和服务器端的纯Python实现，RDPY支持标准RDP安全层基于SSL的RDP和NLA身份验证通过ntlmv2身份验证协议。该蜜罐还支持RDP和VNC远程连接时截图。但是使用hydra爆破的时候会报错，如果做蜜罐的话会产生大量的rss文件很麻烦，比较适合内网钓鱼；
  2. [Honeygrove](https://github.com/UHH-ISS/honeygrove) : 一个基于Python的模块化蜜罐，基于[Broker](https://github.com/zeek/broker)和[Twisted Framework](https://twistedmatrix.com/trac/wiki)构建；
  3. [honeytrap](https://github.com/honeytrap/honeytrap) : 一个可扩展的开源蜜罐，用于运行、监控和管理蜜罐；
  4. [Cowrie](https://github.com/cowrie/cowrie) :一种中等交互式SSH和Telnet蜜罐，用于记录暴力攻击和攻击者执行的shell交互;
  5. [sshlowpot](https://github.com/magisterquis/sshlowpot) ：低交互式ssh蜜罐。接受给定端口上的SSH连接（默认为2222），记录身份验证尝试并告知连接客户端身份验证失败；
  6. [sshhipot](https://github.com/magisterquis/sshhipot) : 高交互性ssh蜜罐，这个蜜罐的高交互是因为它使用了代理模式，也就是说攻击者攻击蜜罐的时候，蜜罐就会连接真实机，以达到代理捕捉数据的功能；
  7. [ssh-honeypot](https://github.com/droberson/ssh-honeypot) : 伪造 SSHD，可记录 IP 地址、用户名与密码；
  8. [UDPot Honeypot](https://github.com/jekil/UDPot): 一个DNS蜜罐，将所有请求记录到SQLite数据库并具有可配置的交互级别；
> 其他蜜罐
  1. [DSHP](https://github.com/naorlivne/dshp) : 一个简单的蜜罐，亮点是被扫描或攻击时，支持邮件告警；
  2. [OpenCanary](https://github.com/thinkst/opencanary/) : 支持多种虚假服务，服务开启和关闭比较简单；
  3. [Artillery](https://github.com/BinaryDefense/artillery) : 开源蓝队工具，旨在通过多种办法保护 Linux 和 Windows 操作系统。；
  4. [Heralding](https://github.com/johnnykv/heralding) :目前支持以下协议：ftp，telnet，ssh，http，https，pop3，pop3s，imap，imaps，smtp，vnc，postgresql和socks5，日志会生成会话(SESSION)和验证(AUTH)；
作者文章未描述到且讨论较多的蜜罐/蜜罐平台还包括：[Kippo](https://github.com/desaster/kippo)(一款强大的中等交互的SSH蜜罐)、[Dionaea](https://github.com/DinoTools/dionaea)(低交互蜜罐，可视化方便，捕获对服务的攻击数据，记录攻击源和目标
IP、端口、协议类型等信息，以及完整的网络会话过程，自动分析其中可能包含的 shellcode
及其中的函数调用和下载文件，并获取恶意程序)、[T-POT](https://github.com/dtag-dev-sec/tpotce)(将很多开源蜜罐整合在一起的蜜罐平台)、[Hfish](https://github.com/hacklcx/HFish)(扩展企业安全测试主动诱导型开源蜜罐框架系统，记录黑客攻击手段)、[MHN](https://github.com/threatstream/mhn)(一个用于管理和收集蜜罐数据的中心服务器。通过MHN，可以实现快速部署多种类型的蜜罐并且通过web可视化界面显示蜜罐收集的数据，目前支持的蜜罐类型有Dionaea,
Snort, Cowrie, glastopf等)等。另外还有针对漏洞的蜜罐，例如[Drupal
RCE](https://github.com/d1str0/drupot) 、[Struts2 RCE( CVE
2017-5638)](https://github.com/Cymmetria/StrutsHoneypot)等。
#### 0x02 蜜罐与内网安全
在谈到蜜罐与内网安全时，不得不提 **sosly**
师傅的硕士论文（[蜜罐与内网安全从0到1](https://sosly.me/index.php/2018/03/22/jymiguan7/)，共七篇）。很详细的介绍了蜜罐对于内网安全的意义以及使用MHN的实践。
对于内网来说，常见的攻击手段包括网络嗅探、资产探测/端口扫描、暴力破解、拒绝服务、ARP攻击、DNS劫持、漏洞利用（redis未授权访问、jboss配置不当导致的rce等）等，且内网的攻击手段是随着服务种类的增多不断增加的。我们需要做的，是发现内网中的异常行为/攻击行为。相比外网来说，无需收集0day、无需分析恶意ip、对接威胁情报等，所以我们不需要高交互类型的蜜罐，在内网中低交互的蜜罐能满足我们的需求。所谓低交互蜜罐，就是通过模拟服务，监听端口连接并记录数据包，可以实现端口扫描和暴力破解的检测等。
企业内部的业务繁杂，且安全性较薄弱。且内网的安全相对外网更加被动，所以打造一款适合企业内部使用的低交互蜜罐有其价值和意义。去年公司有几台机器中了勒索病毒，因为内网机器/个人PC多，查了很久无法确认内网是否还有其他机器被感染，后来部署了个OpenCanary，那阵子OpenCanary的日志非常多，排查到好几台的内网中毒机器。
根据公司自身情况，试着分析下一个好的并适用于自身的内网低交互蜜罐，应该满足以下几个条件：
  1. _覆盖常见协议/服务，能在TCP/UDP全端口捕获未知的恶意扫描；_
  2. _可支持分布式部署，覆盖生产内网和办公内网，且节点尽量覆盖面广；_
  3. _日志记录准确、统一集中收集且数据格式简单，便于后续的日志分析和页面展示；_
  4. _方便进行二次开发；_
  5. _前端页面展示直观清晰，且支持邮件/钉钉告警；_
前文提到的蜜罐，我们挑选几个蜜罐平台（支持多种服务）在内网搭建测试并对比，看是否满足我们的基本要求。本次测试选择OpenCanary、T-POT、MHN、Artillery、Heralding和HFish。
##### (1) OpenCanary
###### > 简介
OpenCanay是一种基于命令行式的蜜罐服务系统，没有UI页面，基本操作都是通过命令行，配置通过改写配置文件。其基本实现原理也是通过设置各种监听的端口，模拟各种流行的服务，而底层实现端口监听。
去年 **pirogue**
师傅基于OpenCanary实现了个web端后台管理：[opencanary_web](https://github.com/p1r06u3/opencanary_web)，系统实现基于nginx和tornado，数据库系统使用的是mysql，前端使用的是vue。适用于内网多节点部署，架构图如下：
该蜜罐支持16种协议，内网多个节点部署后，日志统一发送到web端，入库存储，界面展示。
后台可统计的信息如下：
作者将OpenCanary蜜罐框架分析的日志和服务（协议）做了记录，可依照进行二次开发：[opencanary二次开发(1)-日志格式](http://pirogue.org/2019/01/15/opencanary_2/)。
###### > 开发语言
Python, 依赖于twisted的python库实现。
###### > 本地搭建测试
部署方法参照github上的方法就可以，尽量使用centos7的系统，在centos6.x上装过两次都有一些报错。
部署完成后，OpenCanary服务端开放端口如下：
对该机器ip进行nmap扫描，web端收到攻击日志：
首页两个简单的图表：
###### > 说明
总体来说使用起来还是比较便捷，使用python开发，二次开发起来比较方便。后台展示比较直观，也支持邮件告警。作者的思路很棒，将各个节点的日志通过web请求统一发到web端，然后进行入库展示。但是测试过程中，感觉日志量很大，nmap扫描一下，就有七八页的日志，配置邮件告警后，收到的邮件非常多。
##### (2) T-Pot
###### > 简介
T-Pot是一个比较成熟的蜜罐平台，2016年推出的，目前最新版本是19.03。T-Pot最大的特点是集成了很多款开源蜜罐以及流量检测项目(Suricata)，并集成了威胁情报，且做了统一管理和统一日志收集展示。目前版本基于docker,
docker-compose并且包括以下蜜罐的docker镜像:
T-Pot集成蜜罐 | 说明  
---|---  