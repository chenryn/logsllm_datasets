extra gateways the IPs of the stratum servers used by each
mining pool. Indeed, previous studies [36] noted that stratum
servers tend to be co-located in the same preﬁx as the pool’s
gateway. Since the URLs of the stratum servers are public
(Section II), we simply resolved the DNS name (found on the
pools websites or by directly connecting to them) and add the
corresponding IPs to our IP-to-pool dataset.
Mining power To infer the mining power attached to pools,
we tracked how many blocks each pool mined during the
10 days interval [2] and simply assigned them a proportional
share of the total mining power.
AS-level topology and forwarding paths We used the AS-
level topologies provided by CAIDA [5] to infer the for-
warding paths taken between any two ASes. An AS-level
topology is a directed graph in which a node corresponds
to an AS and a link represents an inter-domain connection
between two neighboring ASes. Links are labeled with the
business relationship linking the two ASes (customer, peer or
provider). We computed the actual forwarding paths following
the routing tree algorithm described in [30] which takes into
account the business relationships between ASes.
Mapping Bitcoin nodes to ASes We ﬁnally inferred the
most-speciﬁc preﬁx and the AS hosting each Bitcoin node
by processing more than 2.5 million BGP routes (covering all
Internet preﬁxes) advertised on 182 BGP sessions maintained
by 3 RIPE BGP collectors [10] (rrc00, rrc01 and rrc03). The
mapping is done by associating each preﬁx to the origin AS
advertising it and by validating the stability of that origin AS
over time (to avoid having the mapping polluted by hijacks).
B. Findings
We now discuss the key characteristics of the Bitcoin
network from the Internet routing perspective. We explain
which of them constitute enablers or hindrances for an AS-
level attacker.
A few ASes host most of the Bitcoin nodes Fig. 5a depicts
the cumulative fraction of Bitcoin nodes as a function of the
number of hosting ASes. We see that only 13 (resp. 50) ASes
383
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:19:24 UTC from IEEE Xplore.  Restrictions apply. 
i
s
e
d
o
n
n
o
c
t
i
b
f
o
%
.
m
u
c
100
80
60
40
20
0
d
e
t
p
e
c
r
e
t
n
i
s
n
o
i
t
c
e
n
n
o
c
%
1
10
100
# of ASes
1222
.
m
u
c
100
80
60
40
20
0
1
10
# of ASes
100
1222
(a) Only 13 ASes host 30%
of the entire network, while 50
ASes host 50% of the Bitcoin
network.
Fig. 5: Bitcoin is heavily centralized from a routing viewpoint.
(b) Few ASes intercept
large
percentages of Bitcoin trafﬁc: 3
of them intercept 60% of all
possible Bitcoin connections.
host 30% (resp. 50%) of the entire Bitcoin network. These
ASes pertain to broadband providers such as Comcast (US),
Verizon (US) or Chinanet (CN) as well as to cloud providers
such as Hetzner (DE), OVH (FR) and Amazon (US). We
observe the same kind of concentration when considering the
distribution of Bitcoin nodes per IP preﬁx: only 63 preﬁxes
(0.012% of the Internet) host 20% of the network.
Regarding delay attacks,
this high concentration makes
Bitcoin trafﬁc more easy to intercept and therefore more
vulnerable. With few ASes hosting many nodes, any AS on-
path (including the host ASes) is likely to intercept many
connections at once, making delay attacks more disruptive.
Regarding partition attacks, the effect of the concentration is a
bit more nuanced. Indeed, high concentration reduces the total
number of feasible partitions because of intra-AS connections
that cannot be intercepted (Section IV-A). At the same time,
tough, the remaining feasible partitions are much easier to
achieve since they require fewer hijacked preﬁxes (Section IV).
A few ASes naturally intercept the majority of the Bit-
coin trafﬁc Large transit providers (i.e., Tier-1s) tend to be
traversed by a large fraction of all the Bitcoin connections.
Fig. 5b depicts the cumulative percentage of connections that
can be intercepted by an increasing number of ASes (e.g.,
by colluding with each other). We see that only three ASes,
namely Hurricane Electric, Level3, and Telianet, can together
intercept more than 60% of all possible Bitcoin connections,
with Hurricane alone being on path for 32% of all connections.
these few ASes could act as
powerful delay attackers. Regarding partition attacks, this ob-
servation does not have any direct implication as partitioning
requires a full cut to be effective (Section IV).
>90% of Bitcoin nodes are vulnerable to BGP hijacks
93% of all preﬁxes hosting Bitcoin nodes are shorter than
/24, making them vulnerable to a global IP hijack using
more-speciﬁc announcements. Indeed, preﬁxes strictly longer
than /24 (i.e., /25 or longer) are ﬁltered by default by many
ISPs. Observe that the remaining 7% hosted in /24s are not
necessarily safe. These can still be hijacked by another AS
performing a shortest-path attack, i.e., the attacker, who will
advertise a /24 just like the victim’s provider will attract trafﬁc
from all ASes that are closer to her in terms of number of hops.
Regarding delay attacks,
While this ﬁnding does not have a direct impact on delay
attacks, it clearly helps partition attackers as they can divert
almost all Bitcoin trafﬁc to their infrastructure (modulo stealth
connections, see Section IV).
Mining pools tend to be distributed and multi-homed
Mining pools have a complex infrastructure compared to
regular nodes. We found that all pools use at least two ASes
to connect to the Bitcoin network, while larger pools such as
Antpool, F2Pools, GHash.IO, Kano use up to 5 ASes.
Pool multi-homing makes both network attacks more chal-
lenging and is one of the main precaution measures node
owners can use against routing attacks. While harder, routing
attacks are still possible in the presence of multi-homing as
we illustrate in Section VIII.
Bitcoin routing properties are stable over time While nu-
merous nodes continuously join and leave the Bitcoin network,
the routing properties highlighted in this section are stable. As
validation, we ran our analysis daily over a 4 month period.
We found that the same IPs were present on average for 15.2
consecutive days (excluding IPs that were seen only once).
Moreover, 50 ASes hosted each day 49.5% of Bitcoin clients
(standard deviation: 1.2%) while 24.7% of Bitcoin nodes are
found daily in just 100 preﬁxes (standard deviation: 1.77%).
VII. PARTITIONING BITCOIN: EVALUATION
In this section, we evaluate the practicality and effectiveness
of partitioning attacks by considering four different aspects of
the attack. First, we show that diverting Bitcoin trafﬁc using
BGP hijacks works in practice by performing an actual hijack
targeting our own Bitcoin nodes (Section VII-A). Second, we
show that hijacking fewer than 100 preﬁxes is enough to
isolate a large amount of the mining power due to Bitcoin’s
centralization (Section VII-B). Third, we show that much
larger hijacks already happen in the Internet
today, some
already diverting Bitcoin trafﬁc (Section VII-C). Fourth, we
show that Bitcoin quickly recovers from a partition attack once
it has stopped (Section VII-D).
A. How long does it take to divert trafﬁc with a hijack?
We hijacked and isolated our own Bitcoin nodes which were
connected to the live network via our own public IP preﬁxes.
In the following, we describe our methodology as well as our
ﬁndings with regard to the time it takes for a partition to be
established.
Methodology We built our own virtual AS with full BGP
connectivity using Transit Portal (TP) [46]. TP provides virtual
ASes with BGP connectivity to the rest of the Internet by
proxying their BGP announcements via multiple worldwide
deployments, essentially acting as a multi-homed provider to
the virtual AS. In our experiment, we used the Amsterdam
TP deployment as provider and advertised 184.164.232.0/22 to
it. Our virtual AS hosted six bitcoin nodes (v/Satoshi:0.13.0/).
Each node had a public IP in 184.164.232.0/22 (.1 to .6
addresses) and could therefore accept connections from any
other Bitcoin node in the Internet.
384
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:19:24 UTC from IEEE Xplore.  Restrictions apply. 
100
s
n
o
i
t
c
e
n
n
o
C
#
F
D
C
80
60
40
20
0
0
10
20
30
40
50
60
70
80
Seconds from hijack until traffic is received
Fig. 6: Intercepting Bitcoin trafﬁc using BGP hijack is fast
and effective: all the trafﬁc was ﬂowing through the attacker
within 90 seconds. Results computed while performing an
actual BGP hijack against our own Bitcoin nodes.
We performed a partition attack against our 6 nodes using
BGP hijacking. For this, we used Cornell, another TP
deployment, as the malicious AS. Speciﬁcally, we advertised
the preﬁx 184.164.235.0/24 via the Cornell TP. This ad-
vertisement is a more-speciﬁc preﬁx with respect to the an-
nouncement coming from the Amsterdam TP and covers all
the IPs of our nodes. Thus, after the new preﬁx announcement
is propagated throughout the Internet, Bitcoin trafﬁc directed
to any of our nodes will transit via Cornell instead of
Amsterdam. To mimic an interception attack (Section II),
we conﬁgured the Cornell TP to forward trafﬁc back to
our AS. As such, connections to our nodes stayed up during
the hijack even though they experienced a higher delay.
We performed the attacks 30 times and measured the time
elapsed from announcement of the most speciﬁc preﬁx until
all trafﬁc towards our nodes was sent via the Cornell TP.
Diverting Bitcoin trafﬁc via BGP is fast (takes <2 minutes)
The results of our experiment are shown in Fig. 6. The
main insight is that the attacker received the hijacked trafﬁc
very quickly. After only 20 seconds, more than 50% of the
connections are diverted. Within 1.5 minutes, all trafﬁc was
transiting via the malicious AS. Thus, attacked nodes are
effectively isolated almost as soon as the hijack starts.
We took great care to ensure that our experiments did not
negatively impact the actual Bitcoin network. We discuss the
ethical considerations behind our experiments in Appendix F.
B. How many preﬁxes must be hijacked to isolate mining
power?
Having shown that hijacking preﬁxes is an efﬁcient way
to divert Bitcoin trafﬁc, we now study the practicality of
isolating a speciﬁc set of nodes P . We focus on isolating sets
holding mining power because they are: (i) more challenging
to perform (as mining pools tend to be multi-homed); and (ii)
more disruptive as successfully partitioning mining power can
lead to the creation of parallel branches in the blockchain.
To that end, we ﬁrst estimate the number of preﬁxes the
attacker needs to hijack to isolate a speciﬁc set of nodes as
a function of the mining power they hold. In the following
subsection, we evaluate how practical a hijack of that many
385
Isolated
mining power
8%
30%
40%
47%
min. # pfxes
to hijack
32
83
37
39
median # pfxes
to hijack
70
83
80
39
# feasible
partitions
14
1
8
1
TABLE I: Hijacking <100 preﬁxes is enough to feasibly
partition ∼50% of the mining power. Complete table in Ap-
pendix B.
preﬁxes is with respect to the hijacks that frequently take place
in the Internet.
Methodology As described in Section IV, not all sets of nodes
can be isolated as some connections cannot be intercepted. We
therefore only determine the number of preﬁxes required to
isolate sets P that are feasible in the topology we inferred in
Section VI. In particular, we only consider the sets of nodes
that contain: (i) either all nodes of an AS or none of them; and
(ii) either the entire mining pool, namely all of its gateways or
none of them. With these restrictions, we essentially avoid the
possibility of having any leakage point within P , that is caused
by an intra-AS or intra-pool stealth connection. However, we
cannot account for secret peering agreements that may or may
not exist between pools. Such agreements are inherently kept
private and their existence is difﬁcult to ascertain.
Hijacking <100 preﬁxes is enough to isolate ∼50% of
Bitcoin mining power In Table I we show the number of
different feasible sets of nodes we found containing the same
amount of mining power (4th and 1st column, respectively).
We also include the minimum and median number of the
preﬁxes the attacker would need to hijack to isolate each
portion of mining power (2nd and 3rd column, respectively).
As predicted by the centralization of the Bitcoin network
(Section VI), the number of preﬁxes an attacker needs to hijack
to create a feasible partition is small: hijacking less than 100