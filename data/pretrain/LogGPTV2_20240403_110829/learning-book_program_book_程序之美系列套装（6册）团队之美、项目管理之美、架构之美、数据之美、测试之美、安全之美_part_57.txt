意到这种事情。
Andrew：你认为经理有责任注意到这些事情吗？
Scot：我希望是这样。优秀的经理或团队负责人有责任留意团队中
的每个人，说来容易，但是在一些场合中是很难做到的。不论谁在
团队中担任负责人或经理角色，都应当留意一下并问问自己，“这
到了什么问题？”
经理们需要一定的技巧才能注意到这些事情，状态报告可能没有
用。性格内向的人可能不会写到状态报告中。“我不喜欢和这些人
一起工作。我没有办法完成这些事情，我无法适应这里的环境。”
团队领导需要注意到这些。
假设某人注意到这个人遇到困难，无法很好地融入团队。我希望发
现问题的那个人在团队中把问题提出来，或向互相叫的外向的人
指出这个问题：“嗨，这个方法对你有效，但是Sally在这里确实很
不适应。你能不能和她谈谈，让事情平静下来并找到和她一起工作
的方式？”团队中每个人都必须找到能够和Sally工作的各种方式，
Sally可能也需要有一点改进。我们都必须利用这个机会学习，对于
我来说，这是职业精神的标志。你应当不断地改进做事情和工作的
方式。特别是，你必须善于协作，和其他人一起工作，在团队中工
作。
对于技术人员，这可能是个难题。这个行业是根据人们的技术能力
进行回报的，我们在技术方面都做好了准备，但是在“情商和人际
能力”方面一一也可以换个说法，总之是在这方面认识不足，结果
是对这方面的关注也同样不足。而这些是重要的事情，至少在软件
开发中是这样。在软件团队中，人是成功最主要的因素。你和其他
人的交流方式比你今天使用的任何一种很酷的新技术所产生的影响
都要大。这是我们认识不足的某种问题。
311
---
## Page 313
Andrew：听到这样的话，我想很多人都会有点吃惊你职业生涯中的
很多时间都在谈论架构、开发和实践方法；谈论面向对象开发、
UML和软件建模、敏捷开发、计划制定和一般的过程。但是，当谈
到团队面对的最大问题时，你提出的却是有关人的，说的是人们如
何在一起工作。当你发现这一点时感到吃惊吗？或者你从一开始就
知道这一点了？
Scot：是的，我感到吃惊，但是我很早就发现了，是通过观察和经
验发现的。我很早就注意到需要关注的不仅仅是技术。实际上，我
并没有马上往人这方面想。我首先意识到的是我们除了技术层面，
还要关注过程和实践方法。当我回到学校攻读硕士学位时，我并始
把注意力放到了计算机支持的协作工作（CSCW）上，这个学术术
语有点复杂，其实就是群件的意思。我从中认识到了软件人员问题
的重要性，因为这正是CSCW的内容。在这种情况下，应当如何使
用技术让人们更有效地在一起工作？我就这样对这些软件问题越来
越了解。
Jenny：你也花了很多时间做有关实践方法的讲座，编写这方面的书
籍、文章。你是否发现了人们使用的实践方法本身有助于跨越你所
谈到的、在团队建设中遇到的障碍？或者，相应地也会出现糟糕的
一面，这些实践方法本身成为了障碍？
Scot：在非单人的开发中，类似结对编程这样的技术（或者是来自
敏捷建模、与其他人一起建模），你会逐渐认识到你们必须经常在
一起工作。敏捷领域中有很多人都采取一种他们叫做“混合结对”的
实践方法，不仅要结对编程，而且要定期交换和你结对编程的人。
采取这样的做法，不仅工作质量得到了提升，在与其他人一起工作
的时候还能学到很多东西。通过定期交换结对的人，强化了这个好
处，而且为了在这个环境中生存下来，团队也必须学习这些交流技
巧。
但是就像你指出的那样，这种想法本身可能也面临着困难，不是每
个人都能以这种方式工作。这是敏捷领域遇到的难题之一。在某种
程度上，我们正在谈论并试图提高的软件技能对某些人来说形成了
进入该领域的障碍。有些人只想关注技术，非常希望独自一人工
作。这样也是可行的。我认为这也是一个组织或团队需要认识到一
件事情：不是每个人都一样，有些人就是不愿意在团队中工作。有
些工作是可以单枪匹马地完成的。我认为这是一个重要的观察结
果。
312
---
## Page 314
Andrew：为了编写这本书，我们做过一些调查，和很多人交谈过
他们给我们介绍了敏捷实践和敏捷的概要。每个人对敏捷的实际含
义似乎都有一点不同的定义。你能不能讲一下你是如何并始采用敏
捷的？解决的是什么样的问题？另外，因为银弹是不存在的，所以
我们想知道敏捷又会带来了什么问题？我们很想听听你在这方面的
想法，以及敏捷对于你来说真正的含义是什么。
Scott：当然可以。在敏捷建模网站
（http://www.agilemodeling.com/）上我给出了自己的定义。我在电
件开发是一种选代和增量（演进）的软件开发方法，由自我组织的
团队通过高度协作的方式，在一个繁文节“刚好足够"的有效的监
管体系中，以节省成本和及时的方式生产高质量的软件，从而满足
利益相关者不断变化的需求。”
其中的部分内容是一些无可争议的原则。但是我认为所有这些内容
都是重要的特征，有很多是基于团队的。例如，很显然，所有关于
高度协作的方式以及自我组织的团队的说法都是从团队的角度来看
问题的。但是很遗憾，很多敏捷人士都忽略了一个问题，那就是监
管体制方面的问题。
没有哪个团队是在真空中工作的。团队在一个大的组织和大的环境
中工作。团队的工作需要监管，监管在某种程度上可以成为一件好
事。但糟糕的是，监管并不总是在以正确的方式进行，这也就是为
什么一些软件专业人士在看到你使用监管（governance）这个术语
时会感到畏缩。但是你必须让监管简明，尽可能让它有效。
与利益相关者紧密合作是至关重要的，这是一个团队协作的问题。
在敏捷领域中，我们谈论的是“整个团队”的概念。取决于不同的观
点，这可以算是一种实践方法，也可以不算。为了完成工作，团队
中的人应当具备足够的技能，不管是什么事情都应当一起工作。这
是一件非常好的事情。但是常常被人们忽略的一点是需要有人密切
注意整个团队，确保整个团队停留在正轨上，确保他们所做的任何
事情对整个组织来说都是有意义的。我认为在敏捷社区中对这方面
的讨论还不够。
Andrew：你说的那两个东西一—监管与自我组织的团队，我觉得像
是自相矛盾的。
313
---
## Page 315
Scot：不是自相矛盾的。每个人都要接受监管，这一点经常被忽
略。“自我组织"并不意味着你不受控制、只管做自己的事情。它的
意思是由团队成员决定如何实现目标。但是目标本身、他们使用的
资源、他们用来做这些事情的某一段时间，这些都是由组织监管
的。有人要提供资金。仅仅财务一项就是个问题，因为如果组织不
喜欢你们团队所作的事情，他们可以不再提供资金。这是一个很难
处理的监管机制，但是相当现实。你们的团队是怎么并始工作的？
如果是软件并发项目，必然存在某种你们将要努力实现的目标。需
要设置愿景、任务一一愿景、任务也是监管的一种形式。团队的权
利和责任、报告机制，这些都是监管。例如，初级程序员可能和高
级技术主管的决策权是不一样的。这也是某种形式的监管。
所以我认为在很多情况中，监管都没有受到重视。这种情况随处可
见，但是我们并没有意识到。如果忽略了监管就太遗憾了，因为我
在敏捷社区看到的一种情况是对于官僚主义和浪费时间的做法有一
种偏执的怀疑，像监管这类东西都应当马上痛斥一通。“我们不需
要任何监管，完全是浪费时间！”嗯，这是不对的。糟糕的监管会
前弱领导能力。让我们试着提高监管的有效性，因为监管的价值在
于帮我们做出好的决策，走向正确的方向。让我们去芜存菁，把洗
澡水倒掉，但把孩子留下。
Andrew：这么说，一个团队可以由愿景监管，可以由项目的目标监
管，也可以由团队和公司的专长和局限所监管。我看到过不少项目
都偏离正轨，因为是项目而不是其他方式监管着愿景。我想你可能
会把这算作功能蔓延。
Scott：是的。愿景应当随着时间的推移而发展一一应当这样，因为
环境也在随着时间的推移而发展。但是不知什么原因，我们看到的
情况是，在项目还远远没有并始的时候，某人就有了这样一个想
法，说你需要做什么事情，并且不管目标是什么都要实现。一个组
织总会有很多要做的事情。但是资金只有这么多，所以他们必须选
择做些什么，希望能够有效地完成。因为你要确保实现那些目标，
所以项目决定了工作量。如果目标发生了变化，要确保自已立刻跟
着变，你需要监管这种发展。你需要常常对照现实情况做出检查，
应当经常进行检查，但实际上并没有做到。
我们希望了解人们是如何定义成功的，因为没有这方面的数据，所
以我在一两年前通过《Dr.Dobb's》杂志发起了一项调查。我的观点
是如果项目遇到困滩，应当有人站出来说：“嗨，项目遇到困滩
314
---
## Page 316
了！”必须有人做出决策，看看如何把团队带出困境。如果没有人
知道如何把团队带出困境，现在就需要切断供给，不要再把钱扔到
没用的地方。这是我的观点，我不知道有多少人也有同样的想法，
所以发起了一项调查。只有41%～42%的调查者说，在他们的组织
中，在项目遇到困难时，把项目取消掉是一种成功一—这个调查结
果太让人遗憾了，因为如果发现项目遇到困难，我会尽可快地让它
摆脱困境。我会考虑尽早地停掉项目。这显然也不是个好主意，但
是我宁愿浪费50万元的学费，也不愿意浪费几百万元去买个教训。
唯一让其可行的方式是监控发生的事情，问自己一些问题。团队仍
旧成功吗？这个项目还有意义吗？因为团队可能对此变得有盲点。
不论项目的范围是什么，一个团队都可能取得成功。但是环境可能
已经发生变化了，团队也许并没有意识到这一点。项目不管当初是
因为什么原因启动，现在都可能已经发生变化了，需要停掉它。
比如说在2008年秋天我们遇到了金融危机。很多金融机构的业务环
境在9月～10月间发生了巨大变化。我确信他们把一些项目搁浅
了，因为业务环境发生巨大变化，有些项目不再有意义了。这根本
不是开发团队的错误。还是那句话，为什么要把钱扔在无谓的地方
Andrew：让项目与公司保持一致，让某个人保持关注，确保项目构
建的是它应该构建的东西，这种说法让我想到了一个很多敏捷团队
都面临的问题。但是我从来没有听人谈起过，也许你可以把它讲得
清楚一些。很多敏捷团队遵循的一个必不可少的实践方法，同时也
是我认为非常好的一种实践方法是让业务代表加入到团队中。有时
候是兼职的，有时候甚至需要全职投入。我能够看到让利益相关者
和业务人员加入团队对于交流和信息共享能够带来很好的价值，并
且确保功能不会向错误的方向蔓延。但是，实际上，我没有看到这
种方法得到很好的应用，因为我很少遇到利益相关者说他们有那种
时间，不管怎么样都抽不出时间来。
但是，如果将利益相关者纳入团队，我担心他们可能遇到一个问
题，他们开始受到你刚才所说的盲点的影响。如果把利益相关者从
业务方带到团队中，每个人都受到同一个盲点的影响，那么应当由
谁来查看项目的目标以确保目标与公司的需要保持一致？
Scott：有儿个方面。有时候局外人会变成局内人，不管进到团队中
的人是谁，结果都一样。如果你和一个已经存在的团队一起紧密地
315
---
## Page 317
工作，你就开始适应那个团队了，对你原来那个地方，也就是我们
这里所说的业务，适应得就少一点了。这可能成为一个问题。
“整个团队"这个观念的一个危险之处是群体思维。群体思维的基本
观念是如果一组人在一起工作的时间足够长一一可能是几个月，他
们就并始以同样的方式思考了，对于同样的问题产生盲点。心理学
家有时候把这种情况与风险决策联系起来。例如，你可能不愿花
100元赌马。但是如果你和朋友一起外出，其中一位花了100元赌
马，另外一位也花了100元赌马，于是花100元赌马在你看来似乎风
险越来越小了。于是，整个小组一起将做出一个他们认为非常危险
的决定，但是因为你在这个小组中，突然间那个风险似乎就变小
了。于是那种事情也就出现了。
有一些有趣的团队动力是你必须注意到的。没有什么事情是完美