title:Privacy-Preserving Location Tracking of Lost or Stolen Devices: Cryptographic
Techniques and Replacing Trusted Third Parties with DHTs
author:Thomas Ristenpart and
Gabriel Maganis and
Arvind Krishnamurthy and
Tadayoshi Kohno
Privacy-Preserving Location Tracking of Lost or Stolen Devices:
Cryptographic Techniques and Replacing Trusted Third Parties with DHTs
Thomas Ristenpart∗
Gabriel Maganis†
∗University of California, San Diego
Arvind Krishnamurthy†
Tadayoshi Kohno†
†University of Washington
PI:EMAIL
{gym,arvind,yoshi}@cs.washington.edu
Abstract
We tackle the problem of building privacy-preserving
device-tracking systems — or private methods to assist in
the recovery of lost or stolen Internet-connected mobile
devices. The main goals of such systems are seemingly
contradictory:
to hide the device’s legitimately-visited
locations from third-party services and other parties (lo-
cation privacy) while simultaneously using those same
services to help recover the device’s location(s) after it
goes missing (device-tracking). We propose a system,
named Adeona, that nevertheless meets both goals.
It
provides strong guarantees of location privacy while pre-
serving the ability to efﬁciently track missing devices.
We build a version of Adeona that uses OpenDHT as the
third party service, resulting in an immediately deploy-
able system that does not rely on any single trusted third
party. We describe numerous extensions for the basic de-
sign that increase Adeona’s suitability for particular de-
ployment environments.
1
Introduction
The growing ubiquity of mobile computing devices, and
our reliance upon them, means that losing them is simul-
taneously more likely and more damaging. For example,
the annual CSI/FBI Computer Crime and Security Sur-
vey ranks laptop and mobile device theft as a prevalent
and expensive problem for corporations [16]. To help
combat this growing problem, corporations and individ-
uals are deploying commercial device-tracking software
— like “LoJack for Laptops” [1] — on their mobile de-
vices. These systems typically send the identity of the
device and its current network location (e.g., its IP ad-
dress) over the Internet to a central server run by the
device-tracking service. After losing a device, the ser-
vice can determine the location of the device and, subse-
quently, can work with the owner and legal authorities to
∗Work done while at the University of Washington.
recover the device itself. The number of companies of-
fering such services, e.g., [1, 9, 21, 29, 34, 37, 38], attests
to the large and growing market for device tracking.
Unfortunately, these systems are incompatible with
the oft-cited goal of location privacy [17, 22, 23] since
the device-tracking services can always monitor the lo-
cation of an Internet-enabled device — even while the
device is in its owner’s possession. This presents a signif-
icant barrier to the psychological acceptability of track-
ing services. To paraphrase one industry representative:
companies will deploy these systems in order to track
their devices, but they won’t like it. The current situation
leaves users of mobile devices in the awkward position of
either using tracking services or protecting their location
privacy.
We offer an alternative: privacy-preserving device-
tracking systems. Such a system should provide strong
guarantees of location privacy for the device owner’s le-
gitimately visited locations while nevertheless enabling
tracking of the device after it goes missing. It should do
so even while relying on untrusted third party services to
store tracking updates.
The utility of device tracking systems. Before div-
ing into technical details, we ﬁrst step back to reevalu-
ate whether device tracking, let alone privacy-preserving
device tracking, even makes sense as a legitimate secu-
rity tool for mobile device users. A motivated and suf-
ﬁciently equipped or knowledgeable thief (i.e., the mali-
cious entity assumed in possession of a missing device)
can always prevent Internet device tracking: he or she
can erase software on the device, deny Internet access,
or even destroy the device. One might even be tempted
to conclude that the products of [1, 9, 21, 29, 34, 37, 38]
are just security “snake oil”.
We purport that this extreme view of security is in-
appropriate for device tracking. While device tracking
will not always work, these systems can work, and ven-
dors (who may be admittedly biased) claim high recov-
USENIX Association  
17th USENIX Security Symposium 
275
ery rates [1]. The common-case thief is, after all, often
opportunistic and unsophisticated, and it is against such
thieves that tracking systems can clearly add signiﬁcant
value. Our work aims to retain this value while simulta-
neously addressing the considerable threats to user loca-
tion privacy.
System goals. A device tracking system consists of:
client hardware or software logic installed on the device;
(sometimes) cryptographic key material stored on the de-
vice; (sometimes) cryptographic key material maintained
separately by the device owner; and a remote storage fa-
cility. The client sends location updates over the Inter-
net to the remote storage. Once a device goes missing,
the owner or authorized agent searches the remote stor-
age for location updates pertaining to the device’s current
whereabouts.
To understand the goals of a privacy-preserving track-
ing system, we begin with an exploration of existing or
hypothetical tracking systems in scenarios that are de-
rived from real situations (Section 2). This reveals a re-
strictive set of deployment constraints (e.g., supporting
both efﬁcient hardware and software clients) and an intri-
cate threat model for location privacy where the remote
storage provider is untrusted, the thief may try to learn
past locations of the device, and other outsiders might
attempt to glean private data from the system or “piggy-
back” on it to easily track a device. We extract the fol-
lowing main system goals.
(1) Updates sent by the client must be anonymous and
unlinkable. This means that no adversary should
be able to either associate an update to a particular
device, or even associate two updates to the same
(unknown) device.
(2) The tracking client must ensure forward-privacy,
meaning a thief, even after seeing all of the inter-
nal state of the client, cannot learn past locations of
the device.
(3) The client should protect against timing attacks by
ensuring that the periodicity of updates cannot be
easily used to identify a device.
(4) The owner should be able to efﬁciently search the
remote storage in a privacy-preserving manner.
(5) The system must match closely the efﬁciency, de-
ployability, and functionality of existing solutions
that have little or no privacy guarantees.
These goals are not satisﬁed by straightforward or exist-
ing solutions. For example, simply encrypting location
updates before sending to the remote storage does not
allow for efﬁcient retrieval. As another example, mecha-
nisms for generating secure audit logs [32], while seem-
ingly applicable, in fact violate our anonymity and un-
linkability requirements by design.
We emphasize that one non-goal of our system is im-
proved device tracking. As discussed above, all tracking
systems in this category have fundamental limitations.
Indeed, our overarching goal is to show that, in any set-
ting where deploying a device tracking system makes
sense, one can do so effectively without compromising
privacy.
Adeona. Our system, named Adeona after the Roman
goddess of “safe returns,” meets the aggressive goals
outlined above. The client consists of two modules: a
location-ﬁnding module and a cryptographic core. With
a small amount of state, the core utilizes a forward-secure
pseudorandom generator (FSPRG) to efﬁciently and
deterministically encapsulate updates, rendering them
anonymous and unlinkable, while also scheduling them
to be sent to the remote storage at pseudorandomly deter-
mined times (to help mitigate timing attacks). The core
ensures forward-privacy: a thief, after determining all of
the internal state of the client and even with access to all
data on the remote storage, cannot use Adeona to reveal
past locations of the device. The owner, with a copy of
the initial state of the client, can efﬁciently search the
remote storage for the updates. The cryptographic core
uses only a sparing number of calls to AES per update.
The cryptographic techniques in the Adeona core have
wide applicability, straightforwardly composing with
any location-ﬁnding technique or remote storage instan-
tiation. We showcase this by implementing Adeona as
a fully functional tracking system using a public dis-
tributed storage infrastructure, OpenDHT [30]. We could
also have potentially used other distributed hash table in-
frastructures such as the Azureus BitTorrent DHT. Using
a DHT for remote storage means that there is no sin-
gle trusted infrastructural component and that deploy-
ment can proceed immediately in a community-based
way. End users need simply install a software client to
enable private tracking service. Our system provides the
ﬁrst device tracking system not tied to a particular ser-
vice provider. Moreover, to the best of our knowledge,
we are also the ﬁrst to explore replacing a centralized
trusted third-party service with a decentralized DHT.
Extensions. Adeona does make slight trade-offs be-
tween simplicity, privacy, and device tracking. We ad-
dress these trade-offs with several extensions to the ba-
sic Adeona system. These extensions serve two pur-
poses: they highlight the versatility of our basic privacy-
enhancing techniques and they can be used to better pro-
tect the tracking client against technically sophisticated
thieves (at the cost of slight increases in complexity).
In particular, we discuss several additions to the basic
functionality of Adeona. For example, we design a novel
cryptographic primitive, a tamper-evident FSPRG, to al-
low detection of adversarial modiﬁcations to the client’s
state.
276 
17th USENIX Security Symposium 
USENIX Association
Implementation and ﬁeld testing. We have imple-
mented the Adeona system and some of its extensions
as user applications for Linux and Mac OS X. Moreover,
we conducted a short trial in which the system was de-
ployed on real users’ systems, including a number of lap-
tops. Our experience suggests that the Adeona system
provides an immediate solution for privacy-preserving
device tracking. The code is currently being readied for
an open-source public release to be available at http://
adeona.cs.washington.edu/, and we encourage the
further use of this system for research purposes.
Outline. In the next section we provide a detailed dis-
cussion of tracking scenarios that help motivate our (in-
volved) design constraints and threat models. Readers
eager for technical details might skip ahead to Section 3,
which describes the Adeona core. The full system based
on OpenDHT is given in Section 4. We provide a se-
curity analysis in Section 5. Our implementations, their
evaluation, and the results of the ﬁeld trial appear in
Section 6. We discuss Adeona’s suitability for further de-
ployment settings in Section 7 and extensions to Adeona
are detailed in Section 8. We conclude in Section 9.
2 Problem Formulation
To explore existing and potential tracking system de-
signs and understand the variety of adversarial threats,
we ﬁrst study a sequence of hypothetical tracking sce-
narios. While ﬁctional, the scenarios are based on real
stories and products. These scenarios uncover issues that
will affect our goals and designs for private device track-
ing.
Scenario 1. Vance, an avid consumer of mobile devices,
recently heard about the idea of “LoJack for Laptops.”
He searches the Internet, ﬁnds the EmailMe device track-
ing system, and installs it on his laptop.1 The EmailMe
tracking client software sends an email (like the example
shown in Figure 1) to his webmail account every time
the laptop connects to the Internet. Months later, Vance
is distracted while working at his favorite coffee shop,
and a thief takes his laptop. Now Vance’s foresight ap-
pears to pay off: he uses a friend’s computer to access
the tracking emails sent by his missing laptop. Work-
ing with the authorities, they are able to determine that
the laptop last connected to the Internet from a public
wireless access point in his home city. Unfortunately the
physical location was hard to pinpoint from just the IP
addresses. A month after the theft Vance stops receiving
tracking emails. An investigation eventually reveals that
the thief sold the laptop at a ﬂea market to an unsuspect-
ing customer.2 That customer later resold the laptop at a
pawn shop. The pawnbroker, before further reselling the
laptop, must have refurbished the laptop by wiping its
hard drive and installing a fresh version of the operating
system.
Discussion: The theft of Vance’s laptop highlights a few
issues regarding limitations on the functionality of de-
vice tracking systems. First, a client without hardware-
support can provide network location data only when
faced by such a ﬂea-market attack: these occur when a
technically unsophisticated thief steals a device to use it
or sell it (with its software intact) as quickly as possible.
Second, network location information will not always be
sufﬁcient for precisely determining the physical location
of a device. Third, all clients (even those with hardware
support) can be disabled from sending location updates
(simply by disallowing all Internet access or by ﬁltering
out just the location updates if they can be isolated).
The principal goal of this paper is not to achieve bet-
ter Internet tracking functionality than can be offered by
existing solutions. Instead, we address privacy concerns
while maintaining device tracking functionality equiva-
lent to solutions with no or limited privacy guarantees.
The next scenarios highlight the types of privacy con-
cerns inherent to tracking systems.
Scenario 2. A few weeks before the theft of Vance’s
laptop, Vance was the target of a different kind of at-
tack. His favorite coffee shop had been targeted by crack-
ers because the shop is in a rich neighborhood and their
routers are not conﬁgured to use WPA [19]. The crackers
recorded all the coffee shop’s trafﬁc, including Vance’s
location-update emails, which were not encrypted. (The
webmail service did not use TLS, nor does the EmailMe
client encrypt the outgoing emails.) The crackers sell the
data garnered from Vance’s tracking emails to identity
thieves, who then use Vance’s identity to obtain several
credit cards.
Discussion: The content of location updates should al-
ways be sent via encrypted channels, lest they reveal
private information to passive eavesdroppers. This is of
particular importance for mobile computing devices, be-
cause of their almost universal use of wireless communi-
cation, which may or may not use encryption.
Scenario 3. Vance works as a salesman for a small
distributor of coffee-related products, called Very Good
Coffee (VGC). He recently went on a trip abroad for
VGC to investigate purchasing a supplier of coffee beans.
On his return trip, he was stopped at customs and
his laptop was temporarily conﬁscated for an “inspec-
tion” [28, 33]. Vance, with his ever-present foresight, had
predicted this would happen: he encrypted all his sensi-
tive work-related ﬁles and removed any information that
might leak what he had been doing while in country. The
laptop was shortly returned with ﬁles apparently unmod-
iﬁed.
Unknown to Vance, the EmailMe client had cached
USENIX Association  
17th USENIX Security Symposium 
277
From: PI:EMAIL
To: PI:EMAIL
BCC: PI:EMAIL
Subject: Information
PCPH Pro For Win 95/98/ME/NT/2K/XP - Version 3.0 (Eval)
Date: 16-08-2007
Time: 11:14:05
Computer Name : TOM-8F760D01401
User Name : LOCAL SERVICE
IPAddress :0.0.0.0
IPAddress :128.208.7.80
Mac Address: 00-18-8B-A2-05-E5
Mac Address: 00-18-DE-9B-F0-5A
Serial Number: DC44BF26
Registrants Name: Tom
Organization: Tom
Address: 513 Brooklyn Avenue
City: Seattle
State/Province: WA
Zip/Postal Code: 98105
Country: USA
Work Phone: 2066163997
...
Figure 1: Example tracking email sent (unencrypted) by PC Phone Home [9] from one of the authors’ laptops.
all the recently visited network locations on the laptop.
Included were several IP addresses used by the supplier
that VGC intended to purchase. The customs agents sold
this information to a local competitor of VGC. Using this
tip, the local competitor successfully blocked VGC’s bid
to purchase the supplier.
Discussion: This scenario addresses the need for for-
ward privacy. A tracking client should not cache previ-
ous locations, lest a thief (or even, as the scenario depicts,
some other untrusted party with temporary access to the
device) easily break the owner’s past location privacy.
Scenario 4. Hearing about Vance’s recent troubles with
property and identity theft, the VGC management chose
to contract with (the optimistically named) All Devices
Recovered (AllDevRec) to provide robust tracking ser-
vices for VGC’s mobile assets. AllDevRec, having made
deals with laptop manufacturers, ensures that VGC’s
new laptops have hardware-supported tracking clients in-
stalled. The clients send updates using a proprietary
protocol over an an encrypted channel to AllDevRec’s
servers each time an Internet connection is made.3
Ian, a recovery-management technician employed by
AllDevRec, has a good friend Eve who happens to work
at a business that competes with VGC. Ian brags to Eve
that his position in AllDevRec allows him to access the
locations from which VGC’s employees access the Inter-
net. This gives Eve an idea, and so she goads Ian into
giving her information on the network locations visited
by VGC sales people. From this Eve can infer the coffee
shops VGC is targeting as potential customers, allowing
her company to precisely undercut VGC’s offerings.
Discussion: Using encrypted channels is insufﬁcient to
guarantee data privacy once the location updates reach
a service provider’s storage systems. The location up-
dates should remain encrypted while stored. This mit-
igates the level of trust device owners must place in a
service provider’s ability to enforce proper data manage-
ment policies (to protect against insider attacks) and se-
curity mechanisms (to protect against outsiders gaining
access).
Scenario 5. Vance, now jobless due to VGC’s recent
bankruptcy, has been staying at Valerie’s place. Va-
lerie works at a large company, with its own in-house IT
staff. The management decided to deploy a comprehen-
sive tracking system for mobile computing asset man-
agement. To ensure employee acceptability of a tracking
system, the management had the IT staff implement a
system with privacy and security issues in mind: each
device is assigned a random identiﬁcation number and
a public key, secret key pair for a public-key encryption
scheme. The database mapping a device to its identiﬁ-
cation number, public key, and secret key is stored on
a system with several procedural safeguards in place to
ensure no unwarranted accesses. With each new Internet
connection, the tracking client sends an update encrypted
under the public key and indexed under the random iden-
tiﬁcation number.