# Title: Privacy-Preserving Location Tracking of Lost or Stolen Devices: Cryptographic Techniques and Replacing Trusted Third Parties with DHTs

## Authors:
- Thomas Ristenpart<sup>∗</sup>
- Gabriel Maganis<sup>†</sup>
- Arvind Krishnamurthy<sup>†</sup>
- Tadayoshi Kohno<sup>†</sup>

<sup>∗</sup>University of California, San Diego  
<sup>†</sup>University of Washington  
PI:EMAIL  
{gym,arvind,yoshi}@cs.washington.edu

## Abstract
We address the challenge of developing privacy-preserving device-tracking systems to assist in the recovery of lost or stolen Internet-connected mobile devices. The primary objectives of such systems are seemingly contradictory: to maintain the privacy of the device's legitimate locations from third-party services and other parties (location privacy) while simultaneously leveraging these services to recover the device's location after it goes missing (device tracking). We propose a system, named Adeona, that achieves both goals by providing strong location privacy guarantees while preserving the ability to efficiently track missing devices.

Adeona uses OpenDHT as the third-party service, resulting in a deployable system that does not rely on any single trusted third party. We also describe several extensions to the basic design to enhance Adeona's suitability for various deployment environments.

## 1. Introduction
The increasing ubiquity of mobile computing devices and our reliance on them means that losing them is both more likely and more damaging. For example, the annual CSI/FBI Computer Crime and Security Survey ranks laptop and mobile device theft as a prevalent and costly problem for corporations [16]. To combat this issue, corporations and individuals are deploying commercial device-tracking software, such as "LoJack for Laptops" [1], on their mobile devices. These systems typically send the device's identity and its current network location (e.g., IP address) over the Internet to a central server managed by the device-tracking service. After a device is lost, the service can determine its location and work with the owner and legal authorities to recover it. The growing number of companies offering such services, e.g., [1, 9, 21, 29, 34, 37, 38], indicates a large and expanding market for device tracking.

Unfortunately, these systems conflict with the goal of location privacy [17, 22, 23] because the device-tracking services can always monitor the location of an Internet-enabled device, even when it is in the owner's possession. This presents a significant barrier to the psychological acceptability of tracking services. As one industry representative put it, companies will use these systems to track their devices, but they won't like it. The current situation leaves users of mobile devices in the awkward position of either using tracking services or protecting their location privacy.

We offer an alternative: privacy-preserving device-tracking systems. Such a system should provide strong guarantees of location privacy for the device owner's legitimate locations while still enabling the tracking of the device after it goes missing. It should do so even while relying on untrusted third-party services to store tracking updates.

### The Utility of Device Tracking Systems
Before delving into technical details, we first reevaluate whether device tracking, let alone privacy-preserving device tracking, makes sense as a legitimate security tool for mobile device users. A motivated and sufficiently equipped or knowledgeable thief (i.e., the malicious entity assumed to be in possession of a missing device) can always prevent Internet device tracking by erasing software on the device, denying Internet access, or even destroying the device. One might conclude that the products of [1, 9, 21, 29, 34, 37, 38] are just security "snake oil."

However, this extreme view of security is inappropriate for device tracking. While device tracking will not always work, these systems can work, and vendors (who may be biased) claim high recovery rates [1]. The common-case thief is often opportunistic and unsophisticated, and it is against such thieves that tracking systems can add significant value. Our work aims to retain this value while addressing the considerable threats to user location privacy.

### System Goals
A device tracking system consists of:
- Client hardware or software logic installed on the device.
- (Sometimes) cryptographic key material stored on the device.
- (Sometimes) cryptographic key material maintained separately by the device owner.
- A remote storage facility.

The client sends location updates over the Internet to the remote storage. Once a device goes missing, the owner or authorized agent searches the remote storage for location updates related to the device's current whereabouts.

To understand the goals of a privacy-preserving tracking system, we explore existing or hypothetical tracking systems in scenarios derived from real situations (Section 2). This reveals a restrictive set of deployment constraints (e.g., supporting both efficient hardware and software clients) and a complex threat model for location privacy where the remote storage provider is untrusted, the thief may try to learn past locations of the device, and other outsiders might attempt to glean private data from the system or "piggy-back" on it to easily track a device. We extract the following main system goals:

1. **Anonymity and Unlinkability**: Updates sent by the client must be anonymous and unlinkable. No adversary should be able to associate an update to a particular device or even associate two updates to the same (unknown) device.
2. **Forward-Privacy**: The tracking client must ensure forward-privacy, meaning a thief, even after seeing all of the internal state of the client, cannot learn past locations of the device.
3. **Timing Attack Protection**: The client should protect against timing attacks by ensuring that the periodicity of updates cannot be easily used to identify a device.
4. **Efficient and Privacy-Preserving Search**: The owner should be able to efficiently search the remote storage in a privacy-preserving manner.
5. **Efficiency, Deployability, and Functionality**: The system must match the efficiency, deployability, and functionality of existing solutions that have little or no privacy guarantees.

These goals are not satisfied by straightforward or existing solutions. For example, simply encrypting location updates before sending to the remote storage does not allow for efficient retrieval. Mechanisms for generating secure audit logs [32], while seemingly applicable, violate our anonymity and unlinkability requirements by design.

We emphasize that one non-goal of our system is improved device tracking. As discussed above, all tracking systems in this category have fundamental limitations. Our overarching goal is to show that, in any setting where deploying a device tracking system makes sense, one can do so effectively without compromising privacy.

### Adeona
Our system, named Adeona after the Roman goddess of "safe returns," meets the aggressive goals outlined above. The client consists of two modules: a location-finding module and a cryptographic core. With a small amount of state, the core utilizes a forward-secure pseudorandom generator (FSPRG) to efficiently and deterministically encapsulate updates, rendering them anonymous and unlinkable, while also scheduling them to be sent to the remote storage at pseudorandomly determined times (to help mitigate timing attacks). The core ensures forward-privacy: a thief, after determining all of the internal state of the client and even with access to all data on the remote storage, cannot use Adeona to reveal past locations of the device. The owner, with a copy of the initial state of the client, can efficiently search the remote storage for the updates. The cryptographic core uses only a sparing number of calls to AES per update.

The cryptographic techniques in the Adeona core have wide applicability, straightforwardly composing with any location-finding technique or remote storage instantiation. We showcase this by implementing Adeona as a fully functional tracking system using a public distributed storage infrastructure, OpenDHT [30]. We could also have potentially used other distributed hash table infrastructures such as the Azureus BitTorrent DHT. Using a DHT for remote storage means there is no single trusted infrastructural component, and deployment can proceed immediately in a community-based way. End users need only install a software client to enable private tracking service. Our system provides the first device tracking system not tied to a particular service provider. Moreover, to the best of our knowledge, we are also the first to explore replacing a centralized trusted third-party service with a decentralized DHT.

### Extensions
Adeona does make slight trade-offs between simplicity, privacy, and device tracking. We address these trade-offs with several extensions to the basic Adeona system. These extensions serve two purposes: they highlight the versatility of our basic privacy-enhancing techniques and can be used to better protect the tracking client against technically sophisticated thieves (at the cost of slight increases in complexity).

In particular, we discuss several additions to the basic functionality of Adeona. For example, we design a novel cryptographic primitive, a tamper-evident FSPRG, to allow detection of adversarial modifications to the client's state.

### Implementation and Field Testing
We have implemented the Adeona system and some of its extensions as user applications for Linux and Mac OS X. We conducted a short trial in which the system was deployed on real users' systems, including a number of laptops. Our experience suggests that the Adeona system provides an immediate solution for privacy-preserving device tracking. The code is currently being readied for an open-source public release, available at http://adeona.cs.washington.edu/, and we encourage further use of this system for research purposes.

### Outline
In the next section, we provide a detailed discussion of tracking scenarios that help motivate our (involved) design constraints and threat models. Readers eager for technical details might skip ahead to Section 3, which describes the Adeona core. The full system based on OpenDHT is given in Section 4. We provide a security analysis in Section 5. Our implementations, their evaluation, and the results of the field trial appear in Section 6. We discuss Adeona's suitability for further deployment settings in Section 7 and detail extensions to Adeona in Section 8. We conclude in Section 9.

## 2. Problem Formulation
To explore existing and potential tracking system designs and understand the variety of adversarial threats, we first study a sequence of hypothetical tracking scenarios. While fictional, the scenarios are based on real stories and products. These scenarios uncover issues that will affect our goals and designs for private device tracking.

### Scenario 1: Vance's Laptop Theft
Vance, an avid consumer of mobile devices, recently heard about the idea of "LoJack for Laptops." He installs the EmailMe device tracking system on his laptop. The EmailMe tracking client software sends an email (like the example shown in Figure 1) to his webmail account every time the laptop connects to the Internet. Months later, Vance's laptop is stolen at a coffee shop. Vance uses a friend's computer to access the tracking emails sent by his missing laptop. Working with the authorities, they determine that the laptop last connected to the Internet from a public wireless access point in his home city. Unfortunately, the physical location was hard to pinpoint from just the IP addresses. A month after the theft, Vance stops receiving tracking emails. An investigation reveals that the thief sold the laptop at a flea market to an unsuspecting customer, who later resold it at a pawn shop. The pawnbroker, before reselling the laptop, refurbished it by wiping its hard drive and installing a fresh version of the operating system.

**Discussion**: This scenario highlights several issues regarding the limitations of device tracking systems. First, a client without hardware support can provide network location data only when faced with a flea-market attack, where a technically unsophisticated thief steals a device to use or sell it quickly. Second, network location information may not always be sufficient for precisely determining the physical location of a device. Third, all clients (even those with hardware support) can be disabled from sending location updates by disallowing all Internet access or filtering out the location updates if they can be isolated.

The principal goal of this paper is not to achieve better Internet tracking functionality than existing solutions. Instead, we address privacy concerns while maintaining device tracking functionality equivalent to solutions with no or limited privacy guarantees.

### Scenario 2: Privacy Breach
A few weeks before the theft of Vance's laptop, his favorite coffee shop was targeted by crackers because it is in a rich neighborhood and its routers are not configured to use WPA [19]. The crackers recorded all the coffee shop's traffic, including Vance's location-update emails, which were not encrypted. The crackers sold the data to identity thieves, who used Vance's identity to obtain several credit cards.

**Discussion**: The content of location updates should always be sent via encrypted channels to prevent revealing private information to passive eavesdroppers. This is particularly important for mobile computing devices due to their almost universal use of wireless communication, which may or may not use encryption.

### Scenario 3: Forward-Privacy Violation
Vance works as a salesman for a small distributor of coffee-related products, called Very Good Coffee (VGC). He recently went on a trip abroad to investigate purchasing a supplier of coffee beans. On his return trip, his laptop was temporarily confiscated for an "inspection" [28, 33]. Vance had encrypted all his sensitive work-related files and removed any information that might leak what he had been doing while in the country. The laptop was returned with files apparently unmodified.

Unknown to Vance, the EmailMe client had cached all the recently visited network locations on the laptop, including several IP addresses used by the supplier VGC intended to purchase. The customs agents sold this information to a local competitor of VGC, who successfully blocked VGC's bid to purchase the supplier.

**Discussion**: This scenario highlights the need for forward-privacy. A tracking client should not cache previous locations, lest a thief or another untrusted party with temporary access to the device easily break the owner's past location privacy.

### Scenario 4: Insider Threat
Hearing about Vance's recent troubles with property and identity theft, VGC management contracted with All Devices Recovered (AllDevRec) to provide robust tracking services for VGC's mobile assets. AllDevRec, having made deals with laptop manufacturers, ensures that VGC's new laptops have hardware-supported tracking clients installed. The clients send updates using a proprietary protocol over an encrypted channel to AllDevRec's servers each time an Internet connection is made.

Ian, a recovery-management technician employed by AllDevRec, has a friend Eve who works at a business that competes with VGC. Ian brags to Eve that his position allows him to access the locations from which VGC's employees access the Internet. Eve goads Ian into giving her information on the network locations visited by VGC salespeople. From this, Eve infers the coffee shops VGC is targeting as potential customers, allowing her company to undercut VGC's offerings.

**Discussion**: Using encrypted channels is insufficient to guarantee data privacy once the location updates reach a service provider's storage systems. The location updates should remain encrypted while stored to mitigate the level of trust device owners must place in a service provider's ability to enforce proper data management policies and security mechanisms.

### Scenario 5: In-House IT Solution
Vance, now jobless due to VGC's recent bankruptcy, has been staying at Valerie's place. Valerie works at a large company with its own in-house IT staff. The management decided to deploy a comprehensive tracking system for mobile computing asset management. To ensure employee acceptability of a tracking system, the management had the IT staff implement a system with privacy and security in mind: each device is assigned a random identification number and a public key, secret key pair for a public-key encryption scheme. The database mapping a device to its identification number, public key, and secret key is stored on a system with several procedural safeguards to ensure no unwarranted accesses. With each new Internet connection, the tracking client sends an update encrypted under the public key and indexed under the random identification number.