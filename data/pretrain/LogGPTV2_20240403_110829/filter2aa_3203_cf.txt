Routing and Remote Access, check for the following: 
Active connection security rules with the Windows Firewall with Advanced Security snap-in 
Active IPsec policies with the IP Security Monitor snap-in 
Routing and Remote Access IPv4 packet filters on routing interfaces with the Routing and Remote 
Access snap-in 
NAT/Basic Firewall routing protocol component of Routing and Remote Access 
On intermediate IPv4 routers or firewalls that are from third-party hardware vendors, check for the 
configuration of packet filters—also called access lists—and IPsec policies and filters. 
On the destination node that is running Windows, check for the following: 
Active connection security rules with the Windows Firewall with Advanced Security snap-in 
Active IPsec policies with the IP Security Monitor snap-in 
Whether Internet Connection Firewall or Windows Firewall is enabled 
TCP/IP filtering 
On the destination node that is running Windows Server 2008 or Windows Server 2003 and Routing 
and Remote Access, check for the following: 
Active connection security rules with the Windows Firewall with Advanced Security snap-in 
Active IPsec policies with the IP Security Monitor snap-in 
Routing and Remote Access IPv4 packet filters on routing interfaces with the Routing and Remote 
Access snap-in 
NAT/Basic Firewall routing protocol component of Routing and Remote Access 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 472 
Whether Internet Connection Firewall or Windows Firewall is enabled 
TCP/IP filtering 
For more information about IPsec and packet filtering components, see Chapter 13, "Internet Protocol 
Security (IPsec) and Packet Filtering." 
View and Manage the Local IPv4 Routing Table 
The inability to reach a local or remote destination might be due to incorrect or missing routes in the 
IPv4 routing table. To view the IPv4 routing table, use the route print or netstat –r commands. Verify 
that you have a route corresponding to your local subnet and, if a default gateway is configured, a 
default route. If you have multiple default routes with the same lowest metric, then change your IPv4 
configuration so that only one exists and is using the interface that connects to the network with the 
largest number of subnets, such as the Internet. 
To add a route to the IPv4 routing table, use the route add command. To modify an existing route, use 
the route change command. To remove an existing route, use the route delete command. 
Verify Router Reliability 
If you suspect a problem with router performance, use the pathping –d IPv4Address command to trace 
the route a packet takes to a destination and display information on packet losses for each router and 
link in the path. The –d command line option prevents the Pathping tool from performing a DNS reverse 
query on every near-side router interface in the routing path, which speeds up the display of the routing 
path. 
Verifying DNS Name Resolution for IPv4 Addresses 
If reachability using IPv4 addresses works but reachability using host names does not, then you might 
have a problem with host name resolution, which is typically an issue with configuration of the DNS 
client or problems with DNS registration.  
You can use the following tasks to troubleshoot problems with DNS name resolution: 
Verify DNS configuration 
Display and flush the DNS client resolver cache 
Test DNS name resolution with the Ping tool 
Use the Nslookup tool to view DNS server responses 
Verify DNS Configuration 
On the node having DNS name resolution problems, verify the following: 
Host name 
Primary DNS suffix 
DNS suffix search list 
Connection-specific DNS suffixes 
DNS servers 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 473 
You can obtain this information from the display of the ipconfig /all command. To obtain information 
about which DNS names should be registered in DNS, use the netsh interface ip show dns 
command. 
To register the appropriate DNS names as IPv4 address resource records (also known as A resource 
records) with DNS dynamic update, use the ipconfig /registerdns command. 
Display and Flush the DNS Client Resolver Cache 
TCP/IP checks the DNS client resolver cache before sending DNS name queries. If a positive cache 
entry for name exists, the corresponding IPv4 address is used. If a negative cache entry for the name 
exists, DNS name queries are not sent. 
To display the contents of the DNS client resolver cache, use the ipconfig /displaydns command. To 
flush the contents of the DNS client resolver cache and reload it with the entries in the Hosts file, use 
the ipconfig /flushdns command. 
Test DNS Name Resolution with Ping 
To test DNS name resolution, use the Ping tool and ping a destination by its host name or fully qualified 
domain name (FQDN). The Ping tool display shows the FQDN and its resolved IPv4 address. If the 
host on which the Ping tool is being used is using both IPv4 and IPv6 and the DNS query returns both 
IPv4 and IPv6 addresses, the Ping tool will use IPv6 addresses before IPv4 addresses. To force the 
Ping tool to use an IPv4 address, use the –4 Ping command option. 
Use the Nslookup Tool to View DNS Server Responses 
If the Ping tool is using the wrong IPv4 address, flush the DNS client resolver cache with the ipconfig 
/flushdns command and use the Nslookup tool to determine the set of addresses returned in the DNS 
Name Query Response message. At the Nslookup > prompt, use the set d2 command to display the 
maximum amount of information about the DNS response messages. Then, use Nslookup to look up 
the desired FQDN and display the details of the DNS response message. Look for A records in the 
detailed display of the DNS response messages. 
Verifying NetBIOS Name Resolution 
If reachability using IPv4 addresses works but reachability using NetBIOS names does not, then you 
might have a problem with NetBIOS name resolution, which is typically a problem with NetBIOS over 
TCP/IP configuration or WINS registration.  
The following tools and tasks can be used to troubleshoot problems with NetBIOS name resolution: 
Verify NetBT configuration 
Display and reload the NetBIOS name cache 
Test NetBIOS name resolution with Nbtstat 
Verify NetBIOS over TCP/IP Configuration 
On the node having NetBIOS name resolution problems, verify the following: 
NetBIOS computer name 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 474 
NetBIOS node type 
Primary WINS server 
Secondary WINS server 
Whether NetBIOS over TCP/IP is disabled 
You can obtain this information from the display of the ipconfig /all command. To obtain information 
about the NetBIOS scope ID assigned to each interface, use the nbtstat -c command. To verify 
whether Lmhosts lookup is enabled, check the WINS tab for the advanced properties of the Internet 
Protocol Version 4 (TCP/IPv4) or Internet Protocol (TCP/IP) component.  
To display the local NetBIOS name table, use the nbtstat –n command. To display the NetBIOS name 
table of a remote computer, use the nbtstat –a ComputerName or nbtstat –A IPv4Address commands. 
To release and re-register the NetBIOS names of the node in WINS, use the nbtstat -RR command. 
Display and Reload the NetBIOS Name Cache 
The NetBIOS name cache is checked before sending WINS or broadcast name queries. If an entry 
exists for a resolved name, TCP/IP uses the corresponding IPv4 address. To display the contents of the 
NetBIOS name cache, use the nbtstat -c command. To flush the contents of the NetBIOS name cache 
and reload it with the #PRE entries in the Lmhosts file, use the nbtstat -R command. 
Test NetBIOS Name Resolution with Nbtstat 
To test NetBIOS name resolution, use the nbtstat –a ComputerName command. This command 
displays the NetBIOS name table of a computer specified by its NetBIOS computer name. 
Verifying IPv4-based TCP Sessions 
If reachability and name resolution are working but you cannot establish a TCP session with a 
destination host, use the following tasks: 
Check for packet filtering 
Verify TCP session establishment 
Verify NetBIOS sessions 
Check for Packet Filtering 
As previously discussed in the "Verifying IPv4 Communications" section of this chapter, packet filtering 
by the source node, intermediate routers, and the destination node can prevent TCP sessions from 
completing. Use the information in the "Verifying IPv4 Communications" section of this chapter to check 
for packet filtering or IPsec policies at the source node, intermediate routers and firewalls, and the 
destination node. 
In many cases, packet filtering is configured to allow specific types of traffic and discard all others, or to 
discard specific types of traffic and accept all others. As an example of the former case, a firewall or 
Web server might be configured to allow only HyperText Transfer Protocol (HTTP) traffic and discard all 
other traffic destined for the Web server. This means that you will be able to view Web pages on the 
Web server, but not ping the Web server or access its shared folders and files. 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 475 
Verify TCP Session Establishment 
To verify that a TCP connection can be established using the known destination TCP port number, you 
can use the telnet IPv4Address TCPPort command. For example, to verify whether the Web server 
service on the computer with the IPv4 address of 131.107.78.12 is accepting TCP connections, use the 
telnet 131.107.78.12 80 command.  
If the Telnet tool is successful in creating a TCP connection, the command prompt window will clear 
and, depending on the protocol, display some text. This window allows you to type in commands to the 
service to which you have connected. Type Control-C to exit the Telnet tool. If the Telnet tool cannot 
successfully create a TCP connection, it displays the message "Connecting To IPv4Address...Could not 
open connection to the host, on port TCPPort: Connect failed". 
To test TCP connections, you can also use Port Query, a free tool from Microsoft to help troubleshoot 
TCP/IP connectivity issues for specific types of TCP and UDP traffic. Port Query has a command-line 
version (Portqry.exe) (available at PortQry Command Line Port Scanner Version 2.0) and a graphical 
user interface version (Portqueryui.exe) (available at PortQryUI - User Interface for the PortQry 
Command Line Port Scanner). Both versions run on Windows XP and Windows Server 2003-based 
computers. 
Another tool that you can use to test TCP connection establishment is Test TCP (Ttcp). With Ttcp, you 
can both initiate TCP connections and listen for TCP connections. You can also use the Ttcp tool for 
UDP traffic. With Ttcp, you can configure a computer to listen on a specific TCP or UDP port without 
having to install the application or service on the computer. This allows you to test network connectivity 
for specific traffic before the services are in place. 
For more information about Port Query and Ttcp, see Testing Network Paths for Common Types of 
Traffic. 
Verify NetBIOS Sessions 
To verify that you have established NetBIOS sessions, you can use the nbtstat –s command, which 
displays the NetBIOS session table. 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 476 
Troubleshooting IPv6 
The following sections describe the tools and techniques used to identify a problem at successive 
layers of the TCP/IP protocol stack using an IPv6 Internet layer. Depending on the type of problem, you 
might do one of the following: 
Start at the bottom of the stack and move up. 
Start at the top of the stack and move down. 
The following sections are organized from the top of the stack and describe how to: 
Verify IPv6 connectivity. 
Verify DNS name resolution for IPv6 addresses. 
Verify IPv6-based TCP connections. 
Although not specified in the following sections, you can also use Network Monitor to capture IPv6 
traffic to troubleshoot many problems with IPv6-based communications. However, to correctly interpret 
the display of IPv6 packets in Network Monitor, you must have detailed knowledge of the protocols 
included in each packet. 
Verifying IPv6 Connectivity 
You can use the following tasks to troubleshoot problems with IPv6 connectivity: 
Verify configuration 
Manage configuration 
Verify reachability 
Check packet filtering 
View and manage the IPv6 routing table 
Verify router reliability 
Verify Configuration 
To check the current IPv6 settings for the correct address configuration (when manually configured) or 
an appropriate address configuration (when automatically configured), you can use the following: 
ipconfig /all 
The display of the ipconfig /all command includes IPv6 addresses, default routers, and DNS 
settings for all interfaces. The Ipconfig tool only works on the local computer.  
netsh interface ipv6 show address 
This command only displays the IPv6 addresses assigned to each interface. Netsh can also be 
used to show the configuration of a remote computer by using the –r RemoteComputerName 
command line option. For example, to display the configuration of the remote computer named 
FILESRV1, use the netsh –r filesrv1 interface ipv6 show address command. 
Chapter 16 – Troubleshooting TCP/IP 
TCP/IP Fundamentals for Microsoft Windows  
Page: 477 
Manage Configuration 
To manually configure IPv6 addresses, use the netsh interface ipv6 set address command. In most 
cases, you do not need to manually configure IPv6 addresses because they are automatically assigned 
for hosts through IPv6 address autoconfiguration. 
To make changes to the configuration of IPv6 interfaces, use the netsh interface ipv6 set interface 
command. To add the IPv6 addresses of DNS servers, use the netsh interface ipv6 add dns 
command. 
You can use the –r RemoteComputerName command line option of the Netsh tool to manage the IPv6 
configuration of a remote computer. 
Verify Reachability 
To verify reachability with a local or remote destination, try the following: 
Check and flush the neighbor cache 
Similar to the Address Resolution Protocol (ARP) cache, the neighbor cache stores recently 
resolved link-layer addresses. To display the current contents of the neighbor cache, use the netsh 
interface ipv6 show neighbors command. To flush the neighbor cache, use the netsh interface 
ipv6 delete neighbors command. 
Check and flush the destination cache 
The destination cache stores next-hop IPv6 addresses for destinations. To display the current 
contents of the destination cache, use the netsh interface ipv6 show destinationcache 
command. To flush the destination cache, use the netsh interface ipv6 delete destinationcache 
command. 
Ping the default router 
Use the Ping tool to ping your default router by its IPv6 address. You can obtain the link-local IPv6 
address of your default router from the display of the ipconfig, netsh interface ipv6 show routes, 
route print, or nbtstat -r commands. Pinging the default router tests whether you can reach local 
nodes and whether you can reach the default router, which forwards IPv6 packets to remote nodes. 
When you ping the default router, you must specify the zone identifier (ID) for the interface on which 
you want the ICMPv6 Echo Request messages to be sent. The zone ID is the interface index of the 
default route (::/0) with the lowest metric, from the display of the netsh interface ipv6 show routes 
or route print commands. 
This step might not succeed if the default router is filtering all ICMPv6 messages. 
Ping a remote destination by its IPv6 address 
If you are able to ping your default router, ping a remote destination by its IPv6 address. This step 
might not succeed if the destination is filtering all ICMPv6 messages. 
Trace the route to the remote destination 
If you are unable to ping a remote destination by its IPv6 address, there might be a routing problem 