        ```
    :::
:::
SSSD 现在使用 AD 中的 POSIX 属性，而不是在本地创建它们。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您必须为 AD 中用户配置了相关的 POSIX
属性（`uidNumber`{.literal}、`gidNumber`{.literal}、`unixHomeDirectory`{.literal}
和 `loginShell`{.literal}）。
:::
::: itemizedlist
**验证步骤**
-   显示 AD 用户详情，如管理员用户：
    ``` literallayout
    # getent passwd PI:EMAIL
    PI:EMAIL:*:10000:10000:Administrator:/home/Administrator:/bin/bash
    ```
:::
::: itemizedlist
**其它资源**
-   有关 ID 映射和 `ldap_id_mapping`{.literal} 参数的详情，请查看
    `sssd-ldap(8)`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#connecting-to-multiple-domains-different-ad-forests-sssd_connecting-directly-to-ad}使用 SSSD 连接到不同 AD 林中的多个域 {.title}
:::
此流程描述了在不同地区(AD)域中加入和验证多个 Active
Directory(AD)域，这些域之间没有信任。
这个示例描述了加入两个域 `addomain1.com`{.literal} 和
`addomain2.com`{.literal}。使用 `realmd`{.literal}
加入第一个域，并为那个域自动配置 SSSD、Kerberos 和其他工具。使用
`adcli`{.literal} 加入附加域，并手动编辑配置文件使其包含这些域。
::: itemizedlist
**先决条件**
-   确保 RHEL 主机上的以下端口已为 AD 域控制器打开并可以被访问。
    ::: table
    []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#idm140251627680400}
    **表 1.3. 使用 SSSD 将 Linux 系统直接集成到 AD 所需的端口**
    ::: table-contents
      服务            端口   协议         备注
      --------------- ------ ------------ --------------------------------------------
      DNS             53     UDP 和 TCP    
      LDAP            389    UDP 和 TCP    
      Kerberos        88     UDP 和 TCP    
      Kerberos        464    UDP 和 TCP   kadmin 用来设置和更改密码
      LDAP 全局目录   3268   TCP          如果使用 `id_provider = ad`{.literal} 选项
      NTP             123    UDP          可选
    :::
    :::
-   确保您为 DNS 使用 AD 域控制器服务器。
-   验证两个系统中的系统时间已被同步。这样可确保 Kerberos 正常工作。
-   确保每个 AD 域中具有 AD 管理员帐户的凭证，该帐户有权将机器加入到该域
:::
::: orderedlist
**流程**
1.  安装所需的软件包。
    ``` literallayout
    # yum install sssd realmd adcli samba-common-tools oddjob oddjob-mkhomedir
    ```
2.  使用 `realmd`{.literal} 加入第一个 AD 域 `addomain1.com`{.literal}。
    ``` literallayout
    # realm join ADDOMAIN1.COM
    ```
3.  将系统 keytab 重命名为唯一名称。
    ``` literallayout
    # mv /etc/krb5.keytab /etc/addomain1.com.krb5.keytab
    ```
4.  使用 `adcli`{.literal} 加入第二个 AD 域，以及任何附加域。使用
    `-K`{.literal} 选项指定将在其中写入主机凭证的 Kerberos keytab
    的唯一路径。
    ``` literallayout
    # adcli join -D dc2.addomain2.com -K /etc/addomain2.com.krb5.keytab
    ```
5.  修改 `/etc/krb5.conf`{.literal}。
    ::: itemizedlist
    -   添加 `includedir`{.literal} 选项以包含 SSSD 配置文件。
    -   使用 `dns_lookup_kdc`{.literal} 选项为 AD Domain Controller 启用
        DNS 查找。
        ``` literallayout
        includedir /var/lib/sss/pubconf/krb5.include.d/
        [logging]
         default = FILE:/var/log/krb5libs.log
         kdc = FILE:/var/log/krb5kdc.log
         admin_server = FILE:/var/log/kadmind.log
        [libdefaults]
         default_realm = ADDOMAIN1.COM
         dns_lookup_realm = false
         dns_lookup_kdc = true
         ticket_lifetime = 24h
         renew_lifetime = 7d
         forwardable = true
        ...
        ```
    :::
6.  修改 `/etc/sssd/sssd.conf`{.literal} 以包含正在使用的所有 AD
    域的信息。
    ``` literallayout
    [sssd]
    services = nss, pam
    config_file_version = 2
    domains = addomain1.com, addomain2.com
    [domain/addomain1.com]
    id_provider = ad
    access_provider = ad
    krb5_keytab = /etc/addomain1.com.krb5.keytab
    ldap_krb5_keytab = /etc/addomain1.com.krb5.keytab
    ad_server = dc1.addomain1.com
    ad_maximum_machine_account_password_age = 0
    use_fully_qualified_names = true
    default_shell=/bin/bash
    override_homedir=/home/%d/%u
    [domain/addomain2.com]
    id_provider = ad
    access_provider = ad
    krb5_keytab = /etc/addomain2.com.krb5.keytab
    ldap_krb5_keytab = /etc/addomain2.com.krb5.keytab
    ad_server = dc2.addomain2.com
    ad_maximum_machine_account_password_age = 0
    use_fully_qualified_names = true
    default_shell=/bin/bash
    override_homedir=/home/%d/%u
    [nss]
    [pam]
    ```
    ::: itemizedlist
    -   对于每个域部分，使用 `krb5_keytab`{.literal} 和
        `ldap_krb5_keytab`{.literal} 选项指定对应于每个域的 Kerberos
        keytab 的路径。
    -   设置 `ad_maximum_machine_account_password_age = 0`{.literal}
        以禁用更新主机 Kerberos 密钥。
    -   设置 `use_fully_qualified_names = true`{.literal}
        以区分不同域的用户。
    -   设置
        `override_homedir = /home/%d/%u`{.literal}，使来自不同域（`%d`{.literal}）的用户（`%u`{.literal}）都会获得唯一的主目录。例如：用户
        `PI:EMAIL`{.literal} 的主目录是
        `/home/addomain1.com/linuxuser`{.literal}。
    :::
7.  SSH 从系统密钥选项卡中检索主机密钥，并通过 GSSAPI/Kerberos
    提供单点登录功能。如果要使用单点登录，将所有当前 Kerberos
    主机密钥复制到 `/etc/kbr5.keytab`{.literal} 系统 keytab。
    ``` literallayout
    # ktutil
    ktutil:  rkt /etc/addomain1.com.krb5.keytab
    ktutil:  rkt /etc/addomain2.com.krb5.keytab
    ktutil:  wkt /etc/krb5.keytab
    ```
8.  重启并启用 SSSD 服务。
    ``` literallayout
    # systemctl restart sssd
    # systemctl enable sssd
    ```
:::
::: orderedlist
**验证步骤**
1.  显示来自每个 AD 域的用户详情：
    ``` literallayout
    # id PI:EMAIL
    uid=1240800500(PI:EMAIL) gid=1240800513(domain PI:EMAIL) groups=1240800513(domain PI:EMAIL),1240800512(domain PI:EMAIL),1240800518(schema PI:EMAIL),1240800520(group policy creator PI:EMAIL),1240800572(denied rodc password replication PI:EMAIL),1240800519(enterprise PI:EMAIL)
    # id PI:EMAIL
    uid=1013800500(PI:EMAIL) gid=1013800500(PI:EMAIL) groups=1013800500(PI:EMAIL),1013800513(domain PI:EMAIL)
    ```
2.  以来自每个域的用户身份登录，验证为该用户创建了正确的主目录。
    ``` literallayout
    # ssh PI:EMAIL@localhost
    PI:EMAIL@localhost's password:
    Creating directory '/home/addomain1.com/administrator'.
    $ pwd
    /home/addomain1.com/administrator
    ```
    ``` literallayout
    # ssh PI:EMAIL@localhost
    PI:EMAIL@localhost's password:
    Creating directory '/home/addomain2.com/administrator'.
    $ pwd
    /home/addomain2.com/administrator
    ```
:::
:::
:::
::: section
::: titlepage
# []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#con_how-the-ad-provider-handles-dynamic-dns-updates_connecting-rhel-systems-directly-to-ad-using-sssd}AD 供应商如何处理动态 DNS 更新 {.title}
:::
Active
Directory（AD）通过超时（[*aging*]{.emphasis}）和删除（[*scavenging*]{.emphasis}）不活跃的记录来主动维护
DNS 记录。
默认情况下，SSSD 服务会按照以下间隔刷新 RHEL 客户端的 DNS 记录：
::: itemizedlist
-   身份提供程序每次上线时。
-   每次 RHEL 系统重启时。
-   在 `/etc/sssd/sssd.conf`{.literal} 配置文件中的
    `dyndns_refresh_interval`{.literal} 选项指定的时间间隔。默认值为
    `86400`{.literal} 秒（24 小时）。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您将 `dyndns_refresh_interval`{.literal} 选项设置为与 DHCP
    租期相同的间隔，您可以在 IP 租期被续订后更新 DNS 记录。
    :::
:::
SSSD 使用 Kerberos/GSSAPI 为 DNS(GSS-TSIG)使用 Kerberos/GSSAPI 向 AD
服务器发送动态 DNS 更新。这意味着您只需要启用到 AD 的安全连接。
::: itemizedlist
**其它资源**
-   `sssd-ad(5)`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory.html#proc_modifying-dynamic-dns-settings-for-the-ad-provider_connecting-rhel-systems-directly-to-ad-using-sssd}修改 AD 供应商的动态 DNS 设置 {.title}
:::
以下流程调整 SSSD 服务中的设置，以影响它如何自动更新加入 Active
Directory 环境的 RHEL 主机的 DNS 记录。
::: itemizedlist
**先决条件**
-   您已使用 SSSD 服务将 RHEL 主机加入到 Active Directory 环境。
-   您需要 `root`{.literal} 权限来编辑 `/etc/sssd/sssd.conf`{.literal}
    配置文件。
:::
::: orderedlist
**流程**
1.  在文本编辑器中打开 `/etc/sssd/sssd.conf`{.literal} 配置文件。
2.  在 AD 域的 `[domain]`{.literal} 部分添加以下选项，将 DNS
    记录刷新间隔设置为 12 小时，禁用更新 PTR 记录，并将 DNS 记录到
    Live(TTL)设置为 1 小时。
    ``` literallayout
    [domain/ad.example.com]
    id_provider = ad
    ...
    dyndns_refresh_interval = 43200
    dyndns_update_ptr = false
    dyndns_ttl = 3600
    ```
3.  保存并关闭 `/etc/sssd/sssd.conf`{.literal} 配置文件。
4.  重启 SSSD 服务以载入配置更改。
    ``` literallayout
    [root@client ~]# systemctl restart sssd
    ```
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
您可以通过将 `sssd.conf`{.literal} 文件中的 `dyndns_update`{.literal}
选项设置为 `false`{.literal} 来禁用动态 DNS 更新：
``` literallayout
[domain/ad.example.com]
id_provider = ad
...
dyndns_update = false
```
:::
::: itemizedlist
**其它资源**
-   `sssd-ad(5)`{.literal} man page