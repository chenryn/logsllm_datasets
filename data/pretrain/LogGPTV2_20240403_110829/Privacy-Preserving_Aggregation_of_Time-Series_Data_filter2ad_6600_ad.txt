δ . Then, there is a randomized procedure
to generate r = (r1, . . . , rn) that is (, δ)-DD-private
with respect to sum. Moreover, for all x ∈ (Zp)n,
for all 0  0 and 0  0 and 0  1 is given the sum of the secrets of the en-
tities at the level below. (For j = 1, each entity above
the leaf nodes is given the negative of the sum of the se-
crets of the participants below it, as is done in the basic
construction.)
Product, rather than sum. The basic construction
can be easily modiﬁed to support oblivious computa-
tion of a product instead of a sum. Simply encrypt χ
as c ← χ · H(t)ski. Because the plaintext is no longer
in the exponent, this scheme for products does not suffer
from the small plaintext restriction.
8 Open Research Challenges
This paper deﬁned a new problem – how an untrusted
data aggregator can compute aggregate statistics over ci-
phertexts from multiple sources, while preserving each
individual’s privacy in a strong sense. We formally de-
ﬁned privacy notions, and demonstrated a construction
allowing the aggregator to compute the sum statistic for
time series data.
This paper leaves open several problems that are both
intriguing and challenging. We hope to inspire future re-
search efforts in this new direction, especially in solving
the challenges stated below.
Construction supporting large plaintext space. One
limitation of our cryptographic construction is that it
(a)  = 0.1, δ = 0.001
(b)  = 0.5, δ = 0.1
Figure 2: Empirical error of our scheme and the naive scheme. The x-axis is the number of participants, and the y-axis shows
the mean and standard deviation of error (in absolute value). Each participant’s data is a bit from {0, 1}. The naive scheme is where
each participant adds independent geometric noise to her input and uploads the perturbed data to the aggregator.
supports only polynomial-sized plaintext spaces for
computing sums. However, when our construction is
modiﬁed to support the product statistic, it can readily
support large plaintext spaces. One interesting chal-
lenge, therefore, is to design a scheme that supports
large plaintext spaces for computing sums. A promis-
ing direction is to try other algebraic primitives such as
bilinear groups, Paillier groups, lattices, etc.
Richer statistics. An important goal in this research
direction is the ability to support rich statistics. In gen-
eral, we can imagine that the aggregator may wish to
evaluate an arbitrary polynomial-time function f on the
participants inputs. While recent advances on fully-
homomorphic encryption schemes [8, 18] are encour-
aging, they do not directly apply in our setting, as their
homomorphic operations are performed over ciphertexts
encrypted under the same key.
In general, it is inter-
esting and challenging to consider expressive homomor-
phic encryption schemes over ciphertexts encrypted un-
der multiple user keys.
Dynamic joins and leaves.
In our scheme, whenever
a participant dynamically joins or leaves the system, we
need to perform the trusted setup phase again. This
makes our scheme more suitable for scenarios where the
set of participants is relatively static over time. An im-
portant open problem is to provide better support for dy-
namic joins and leaves, a capability that is valuable in
systems with high churn.
Node failures. One or more participants may fail to
upload their encrypted values in a certain time period.
Malicious participants may also fail to respond in the
form of a Denial-of-Service attack. When this happens,
our scheme requires that the aggregator is unable to de-
crypt any partial information about the remaining partic-
ipants. This requirement is inherent in our security deﬁ-
nition – had we allowed the aggregator to decrypt partial
information about a subset of the users, then even when
all participants are functioning, a malicious aggregator
is free to use inputs from only a subset of the partici-
pants. We acknowledge that this mode of failure may
not be desirable in some practical settings. Therefore,
one open problem is how to support graceful degrada-
tion in the face of failures. This question is challeng-
ing to answer, as it remains unclear what security notion
one might employ to deal with node failures. The se-
curity deﬁnition must somehow reconcile two conﬂict-
ing goals, the requirement of graceful degradation in the
presence of failures, and the requirement that the aggre-
gator should not learn anything from a subset of the in-
puts.
Acknowledgments
We gratefully thank the anonymous reviewers for in-
sightful comments and feedback.
Dawn Song is partially supported by the National
Science Foundation under Grants No.
0716230,
0448452 and CCF-0424422, and by the Ofﬁce of Naval
Research under MURI Grant No. N000140911081. Any
opinions, ﬁndings, and conclusions or recommendations
expressed in this material are those of the authors and do
not necessarily reﬂect the views of the National Science
Foundation, or the Ofﬁce of Naval Research.
References
[1] D. J. Bernstein and T. L. (editors).
eBACS:
ECRYPT benchmarking of cryptographic systems.
http://bench.cr.yp.to, accessed 7 March
2011.
[2] D. Boneh, E.-J. Goh, and K. Nissim. Evaluating
2-DNF formulas on ciphertexts. In TCC, 2005.
[3] C. Castelluccia, A. C.-F. Chan, E. Mykletun, and
G. Tsudik. Efﬁcient and provably secure aggrega-
tion of encrypted data in wireless sensor networks.
ACM Trans. Sen. Netw., 5(3):1–36, 2009.
[4] A. Cavoukian, J. Polonetsky, and C. Wolf. Smart-
Privacy for the smart grid: embedding privacy into
Identity
the design of electricity conservation.
in the Information Society, 3(2):275–294, August
2010.
[5] C. Dwork. Differential privacy.
ICALP, 2006.
Invited talk at
[6] C. Dwork, K. Kenthapadi,
F. McSherry,
I. Mironov, and M. Naor.
Our data, our-
selves: Privacy via distributed noise generation. In
EUROCRYPT, 2006.
[7] C. Dwork, F. McSherry, K. Nissim, and A. Smith.
Calibrating noise to sensitivity in private data anal-
ysis. In TCC, 2006.
[8] C. Gentry. Fully homomorphic encryption using
ideal lattices. In STOC, pages 169–178, 2009.
[9] A. Ghosh, T. Roughgarden, and M. Sundarara-
jan. Universally utility-maximizing privacy mech-
In STOC ’09: Proceedings of the 41st
anisms.
annual ACM symposium on Theory of computing,
2009.
[10] O. Goldreich.
Secure multi-party computa-
tion. http://www.wisdom.weizmann.ac.
il/˜oded/PS/prot.ps.
[11] E. Magkos, M. Maragoudakis, V. Chrissikopou-
los, and S. Gritzalis. Accurate and large-scale
privacy-preserving data mining using the election
paradigm. Data & Knowledge Engineering, 2009.
[12] J. Menezes, P. C. V. Oorschot, and S. A. Vanstone.
Handbook of applied cryptography. CRC Press,
1997.
[13] I. Mironov, O. Pandey, O. Reingold, and S. Vad-
In
Computational differential privacy.
han.
CRYPTO, 2009.
[14] A. D. Molina, M. Salajegheh, and K. Fu. HIC-
CUPS: health information collaborative collection
using privacy and security. In SPIMACS’09, pages
21–30, 2009.
[15] E. L. Quinn. Privacy and the new energy infras-
tructure. SSRN, Feb 2009.
[16] V. Rastogi and S. Nath. Differentially private ag-
gregation of distributed time-series with transfor-
mation and encryption. In SIGMOD 2010, pages
735–746, 2010.
[17] E. G. Rieffel, J. Biehl, W. van Melle, and A. J.
Lee. Secured histories: computing group statis-
tics on encrypted data while preserving individual
privacy. In submission, 2010.
[18] M. van Dijk, C. Gentry, S. Halevi, and V. Vaikun-
tanathan. Fully homomorphic encryption over the
integers. In EUROCRYPT, 2010.
[19] Z. Yang, S. Zhong, and R. N. Wright. Privacy-
preserving classiﬁcation of customer data without
loss of accuracy. In In SIAM SDM, 2005.
A Proof of Aggregator Oblivious Security
First, prove that the following intermediate game is
difﬁcult to win, given that Decisional Difﬁe-Hellman is
hard. Let G be a group of prime order p.
Setup. The challenger picks random generators g, h ∈
G, and random α0, α1, . . . , αn ∈ Zp such that
i αi = 0. The challenger gives the adversary
(cid:80)
g, h, gα0, gα2, . . . , gαn.
Queries.
The adversary can make “compromise”
queries adaptively and ask for the value of αi. The