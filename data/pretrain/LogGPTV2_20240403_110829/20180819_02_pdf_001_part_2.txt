37 CREATE UNIQUE INDEX name ON table (column [, …]);
38
39
40 表达式索引主要用于在查询条件中存在基于某个字段的函数或表达式的结果与其他值进行比
较的情况，如：
41 SELECT * FROM test1 WHERE lower(col1) = 'value';
42 此时，如果我们仅仅是在col1字段上建立索引，那么该查询在执行时一定不会使用该索
引，而是直接进行全表扫描。如果该表的数据量较大，那么执行该查询也将会需要很长时
间。解决该问题的办法非常简单，在test1表上建立基于col1字段的表达式索引，如：
43 CREATE INDEX test1_lower_col1_idx ON test1 (lower(col1));
修改函数的属主：
1 ALTER FUNCTION "public"."insert_user"(i_username text, i_emailaddress
text) OWNER TO "inofa";
to_char函数，第一个参数的类型必须是date类型，不能是varchar
读写分离示例：
1 #代理proxydb上插数据的函数：
2 CREATE OR REPLACE FUNCTION insert_user(i_username text, i_emailaddress
text)
3 RETURNS integer AS $$
4 CLUSTER 'write_cluster';
5 RUN ON ANY;
6 $$ LANGUAGE plproxy;
7
8 #代理proxydb上查询数据的函数
9 CREATE OR REPLACE FUNCTION get_user_email(i_username text)
10 RETURNS SETOF text AS $$
11 CLUSTER 'read_cluster';
12 RUN ON ANY;
13 $$ LANGUAGE plproxy;
14
15
16 CREATE or REPLACE FUNCTION sumtest(
17 username text,
18 out out_result INT,
19 out em text,
20 out im INT
21 )returns record
22 as $$
23 BEGIN
24 BEGIN
25 em :=get_user_email(username);
26 im :=insert_user('xiaoming', em);
27 out_result:=1;
28 EXCEPTION
29 when OTHERS THEN
30 out_result:=0;
31 end;
32 end;
33 $$
34 LANGUAGE 'plpgsql';
1. 下面是PostgreSQL中支持的时间/日期操作符的列表：
操作
例子 结果
符
+ date '2001-09-28' + integer '7' date '2001-10-05'
timestamp '2001-09-28 0
+ date '2001-09-28' + interval '1 hour'
1:00'
timestamp '2001-09-28 0
+ date '2001-09-28' + time '03:00'
3:00'
+ interval '1 day' + interval '1 hour' interval '1 day 01:00'
timestamp '2001-09-29 0
+ timestamp '2001-09-28 01:00' + interval '23 hours'
0:00'
+ time '01:00' + interval '3 hours' time '04:00'
- - interval '23 hours' interval '-23:00'
- date '2001-10-01' - date '2001-09-28' integer '3'
- date '2001-10-01' - integer '7' date '2001-09-24'
timestamp '2001-09-27 2
- date '2001-09-28' - interval '1 hour'
3:00'
- time '05:00' - time '03:00' interval '02:00'
- time '05:00' - interval '2 hours' time '03:00'
timestamp '2001-09-28 0
- timestamp '2001-09-28 23:00' - interval '23 hours'
0:00'
- interval '1 day' - interval '1 hour' interval '23:00'
timestamp '2001-09-29 03:00' - timestamp '2001-09
- interval '1 day 15:00'
-27 12:00'
* interval '1 hour' * double precision '3.5' interval '03:30'
/ interval '1 hour' / double precision '1.5' interval '00:40'
2. 日期/时间函数：
返
回
函数 描述 例子 结果
类
型
age(timesta int 减去参数，生成一个使 43 years 9
age('2001-04-10', timest
mp, timesta erv 用年、月的"符号化"的 mons 27 d
amp '1957-06-13')
mp) al 结果 ays
int 43 years 8
age(timesta 从current_date减去得 age(timestamp '1957-06
erv mons 3 da
mp) 到的数值 -13')
al ys
dat
current_date 今天的日期
e
tim
current_time 现在的时间
e
tim
current_time est
日期和时间
stamp am
p
date_part(tex do date_part('hour', timesta
获取子域(等效于extrac
t, timestam ubl mp '2001-02-16 20:38:4 20
t)
p) e 0')
do
date_part(tex 获取子域(等效于extrac date_part('month', interv
ubl 3
t, interval) t) al '2 years 3 months')
e
tim
date_trunc(t date_trunc('hour', timest 2001-02-1
est
ext, timesta 截断成指定的精度 amp '2001-02-16 20:38:4 6 20:00:00
am
mp) 0') +00
p
extract(field do extract(hour from timest
from timesta ubl 获取子域 amp '2001-02-16 20:38:4 20
mp) e 0')
extract(field do
extract(month from inter
from interva ubl 获取子域 3
val '2 years 3 months')
l) e
tim
localtime 今日的时间
e
tim
est
localtimesta
mp am 日期和时间
p
tim
当前的日期和时间(等效
est
now() 于 current_timestam
am
p)
p
tex
timeofday() 当前日期和时间
t
3. EXTRACT，date_part函数支持的field：
来源： http://blog.csdn.net/snn1410/article/details/7741283
结
域 描述 例子
果
EXTRACT(CENTURY FROM
CENT 2
世纪 TIMESTAMP '2000-12-16 1
URY 0
2:21:13');
EXTRACT(DAY from TIMEST
1
DAY (月分)里的日期域(1-31) AMP '2001-02-16 20:38:4
6
0');
EXTRACT(DECADE from TI 2
DEC
年份域除以10 MESTAMP '2001-02-16 20: 0
ADE
38:40'); 0
EXTRACT(DOW FROM TIME
每周的星期号(0-6；星期天是0) (仅用于timest
DOW STAMP '2001-02-16 20:38:4 5
amp)
0');
EXTRACT(DOY from TIMES
一年的第几天(1 -365/366) (仅用于 timestam 4
DOY TAMP '2001-02-16 20:38:4
p) 7
0');
EXTRACT(HOUR from TIME
HOU 2
小时域(0-23) STAMP '2001-02-16 20:38:4
R 0
0');
2
8
MICR 5
OSEC EXTRACT(MICROSECONDS 0
秒域，包括小数部分，乘以 1,000,000。
OND from TIME '17:12:28.5'); 0
S 0
0
0
MILL EXTRACT(MILLENNIUM fro
ENNI 千年 m TIMESTAMP '2001-02-16 3
UM 20:38:40');
2
MILLI 8
EXTRACT(MILLISECONDS fr
SECO 秒域，包括小数部分，乘以 1000。 5
om TIME '17:12:28.5');
NDS 0
0
EXTRACT(MINUTE from TI
MIN 3
分钟域(0-59) MESTAMP '2001-02-16 20:
UTE 8
38:40');
对于timestamp数值，它是一年里的月份数(1- EXTRACT(MONTH from TI
MON
12)；对于interval数值，它是月的数目，然后 MESTAMP '2001-02-16 20: 2
TH
对12取模(0-11) 38:40');
EXTRACT(QUARTER from TI
QUA 该天所在的该年的季度(1-4)(仅用于 timestam
MESTAMP '2001-02-16 20: 1
RTER p)
38:40');
EXTRACT(SECOND from TI
SECO 4
秒域，包括小数部分(0-59[1]) MESTAMP '2001-02-16 20:
ND 0
38:40');
EXTRACT(WEEK from TIME
WEE
该天在所在的年份里是第几周。 STAMP '2001-02-16 20:38:4 7
K
0');
2
EXTRACT(YEAR from TIMES
0
YEAR 年份域 TAMP '2001-02-16 20:38:4
0
0');
1