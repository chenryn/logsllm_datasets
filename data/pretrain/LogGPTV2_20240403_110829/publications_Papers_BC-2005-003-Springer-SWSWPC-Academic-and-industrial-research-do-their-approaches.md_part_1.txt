Academic and Industrial Research:
Do their Approaches Differ in Adding Semantics to Web
Services?
Jorge Cardoso1, John Miller2, Jianwen Su3, and Jeff Pollock4
1 Department of Mathematics and Engineering
University of Madeira
9100-390, Funchal, Portugal
PI:EMAIL
2 Department of Computer Science,
University of Georgia
415 Graduate Studies Research Center
Athens GA 30602-7404,USA
PI:EMAIL
3 Department of Computer Science,
University of California
Santa Barbara, CA 93106-5110, USA
PI:EMAIL
4 Network Inference,
5900 La Place Ct., Suite 250
Carlsbad, CA 92008, USA
PI:EMAIL
Abstract. Since the new terms, "Semantic Web" and "Web services",
havebeenintroduced,researchershavefollowedtwodifferentroads.Fol-
lowing one road, academia has focused on developing a new set of lan-
guages to enable the automation of Web services execution and inte-
gration based on the Semantic Web. On the other road, industry has
taken the lead to propose and develop technologies and infrastructures
tosupportWebservicesandWebprocesseswithout,untilrecently,pay-
ing much attention to semantics. It is fundamental to analyze the trend
that is being followed with regard to the "Semantic Web" and "Web
services". Therefore, two important questions need to be answered: "do
the approaches taken by academia and industry differ in how they add
semantics to Web services?" and "are their efforts converging or diverg-
ing?" This paper, based on a panel discussion at an international con-
ference on Web services, which consisted of members of both academia
and industry, addresses precisely these two questions.
1 Introduction
In July of 2004, a panel was convened to consider a convergence or divergence
betweenacademicandindustrialapproachestoaddingsemanticstoWebservice
2
and/orWebprocessdescriptions.Everyoneagreesthatmoresemantics(ormean-
ing) should be added to Web service descriptions. Differences results when the
communitiesaddressthequestionsofhowandhowmuch.Howmuchsemantics?
Should a Web service operation be given a full semantic specification, say using
operational semantics [15] or would a functional classification or categorization
suffice? How machine processable or understandable should the semantics be
on the formality vs. informality scale? For example, a complete and formal se-
mantic specification is difficult for humans to create or understand. A simpler
agreement based approach predicated on standard interfaces (e.g., port types)
may be a better short-term solution. It is also possible to move the standard
back to an ontological level and then require the parts of a port type to map to
anontology.Thisapproachtointeroperabilityhasprovedsuccessfulindatabase
integration (where each schema is mapped to a common ontology). One could
expect similar success for Web services, yet the problem is more complicated
since the description of operations is more complicated than description of data
objects.
Given the importance and complexity of the issue (adding semantics), it
makessensethattheacademicandindustrialapproachesdodiffer.Theindustrial
approach should be near-term, practical and with a high probability of success,
whileacademiacanaffordtobelong-term,ambitiousandspeculative.However,
toomuchdivergencemaycauseafractureinwhichindustrysettlesfortoolittle
and academia will design great things that will never be used.
In this paper, we briefly survey the current research and development oc-
curring in academia and industry on Semantic Web Services (SWS). The panel
consisted of researchers from both sectors and the paper strives for a balanced
treatment highlighting the strengths of both approaches, analyzing their differ-
ences and seeking common ground for future work.
The paper is organized as follows: Section 2 reviews the brief history of
attempting to provide semantics for Web services and relates this to the long
history of attempting this for programs. Issues and directions are discussed as
wellassomeaspectsofcurrentactiveresearchprojectsarehighlighted.Section3
parallel section2, but fromanindustrial perspective.Becauseof thecomplexity
ofsemantics,therearelikelytobediminishingreturnsiftoomuchisadded(e.g.,
problemswithintractabilityandundecidabilityaswellastoohardtouse).This
section will start with the currently used standards for describing (WSDL 1.1)
[22], publishing (UDDI 2.0) [19] and orchestrating (BPEL 1.1) [1] Web services
and will consider how semantics are and will impact new (e.g., WSDL 2.0 [23]
and UDDI 3.0 [20]) as well as future standards. Section 4 attempts to resolve
the differing approaches into a recipe for long-term cooperation and success of
this most vital new technological area. Finally, section 5 gives a brief summary
of the most important aspects discussed in this paper.
3
2 Academic Research on SWS
AcademicresearchintoSemanticWebServicesbeganwiththeworkofDAML-S
group [4]. Theidea was to useaformal language to preciselydefine what aWeb
servicedoes.AbasicdescriptionalongtheselineisprovidedbytheWebService
DescriptionLanguage(WSDL).WSDLdescriptionsarerathershallowandfocus
on operational aspects. As a consequence, these descriptions are inadequate for
automated discovery or composition of Web services. Much richer and deeper
machine-processable descriptions arethereforerequired. The DAML-S (now the
OWL-S [13]) group added profile, process and grounding descriptions. A profile
describes what the Web service does functionally in terms of input (I), output
(O),precondition(P),andresult(R),theprocessdescribeshowitisbuiltoutof
componentsandthegroundingmapsthesetoWSDLfiles.Muchofthesemantics
is captured in the IOPR specifications.
A Web service, as a software component, has one or more operations that
can be invoked as well as its own state. An operation may be described by
indicating the types of its inputs and outputs, anypreconditions required of the
input as well as the results of the operation (either on the state or the outputs
produced).Actually,thisgoalofspecifyingwhatanoperationdoesor,ingeneral,
whataprocessdoeshasalongtraditioninComputerScienceandincludeswork
in the fields of program methodology, formal programming language semantics,
software engineering and software agents. The problems are complex, but the
potential payoff is great.
Besides the major OWL-S project, there are two ongoing projects being de-
veloped in the US, the LSDIS METEOR-S project, and in Europe, the DERI
SWWS project.
The METEOR-S [14] (METEOR for Semantic Web services) project is fo-
cused on the usage of semantics for the complete lifecycle of semantic Web
processes,whichrepresentcomplexinteractionsbetweensemanticWebservices.
The METEOR-S project targets research on four important areas of the lifecy-
cle of semantic Web processes, namely, annotation, discovery, composition, and
execution. For each of the research stages in the lifecycle a framework, infras-
tructure or environment has been developed and implemented. The METEOR-
S semantic Web Service Annotation Framework (MWSAF) semi-automatically
marks up Web service descriptions with ontologies. The algorithms developed
matchandannotateWSDLfileswithrelevantontologies.TheMETEOR-SWeb
Service Discovery Infrastructure (MWSDI) uses an ontology-based approach to
organize registries, enabling semantic classification of all Web services based on
domains. Each of these registries supports semantic publication of the Web ser-
vices, which is used during the discovery process. The METEOR-S Web Service
Composition Framework (MWSCF) enhances current Web process composition
techniques by using Semantic Templates to capture the semantic requirements
of the process [3]. The METEOR-S Web Service Dynamic Process Manager
(MWSDPM) allows deployment-time and run-time binding of Web services to
an abstract process, based on business and process constraints.
4
DERI[5]iscurrentlyworkingonaprojecttitledSemanticWebenabledWeb
Services (SWWS). DERI researchers recognize that to use the full potential of
Web services and the technology around UDDI, WSDL and SOAP, it is indis-
pensabletousesemantics,sincecurrenttechnologiesprovidelimitedsupportfor
automating Web service discovery, composition and execution. Important ob-
jectives of the SWWS initiative include providing a richer framework for Web
servicedescriptionanddiscovery,aswellas,providingscalableWebservicemedi-
ationmiddleware.Anynecessarymediationwouldbeappliedbasedonsemantic
data and process ontologies and semantic interoperation.
Aside from investigations on functional descriptions of Web services, there
are also work on behavioral descriptions (see [11]). The behavior signature [11]
ofaservicedescribeshowtheservicecaninteractwithotherservices.Providing
behaviorsignaturesiscriticalinservicecomposition.Forexample,thetwointer-
actingservicesmaybothwaitformessagesfromeachotherandnoneofthemcan
thusproceed[6,7].IthasbeenarguedthatWebservicecomposition,automated
or semi-autmated, critically relies on the interaction patterns in the behavior
specification [9,10,21,2]. A tool WSAT was recently developed for analyzing
conversations and Web service bahaviors [7].
3 Industrial Research and Development on SWS
The industrial research related to semantic Web services depends on the ongo-
ingdevelopmentofopenstandardsthatensureinteroperabilitybetweendifferent
implementations. Several initiatives have been conducted with the intention to
provide platforms and languages that will allow easy integration of heteroge-
neous systems. The standardization efforts for the technologies that underlie
Web services includeSimple Object Access Protocol (SOAP) [17], Web Services
Description Language (WSDL), Universal Description, Discovery and Integra-
tion(UDDI),andprocessdescriptionlanguages.Severalprocessdescriptionlan-
guages have been proposed and studied by the industry.
These languages include W3C WS Choreography Group, Business Process
Execution Language for Web Services (BPEL4WS, or simply BPEL) (from Mi-
crosoft, IBM, BEA), WSCL (from HP), BPML (from Microsoft), WSCI (from
SUN, BEA, Yahoo, and other), XLANG (from Microsoft), and WSFL (from
IBM).
The WSDL is already well established as an essential building block in the
evolving stack of Web service technologies, and is being developed and stan-
dardized in the W3C’s Web Services Description Working Group. WSDL is a
specification to describe networked XML-based services. It provides a simple
way for service providers to describe the basic format of requests to their sys-
tems regardless of the underlying protocol. WSDL is a key part of the effort
of the UDDI initiative to provide directories and descriptions of such on-line