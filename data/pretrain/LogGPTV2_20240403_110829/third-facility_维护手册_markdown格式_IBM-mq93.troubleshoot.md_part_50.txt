### Exchanging Information with IBM Software Support

For instructions on using FTP and email, refer to the section "Exchanging information with IBM Software Support."

To open or update a support case, visit the [IBM My Support site](https://www.ibm.com/mysupport). 

**Note:** Always update your case to indicate that data has been sent.

If you need to speak with IBM Software Support, contact your country representative. For support in the US, call 1-800-IBM-SERV.

### Related Tasks
- **"Troubleshooting distributed queue management problems"** (Page 76)
  - This section provides troubleshooting information for issues related to Distributed Queue Management (DQM).

### Collecting Information for Client Application Problems

If you need assistance from IBM Support to resolve an issue with an IBM MQ C, C++, COBOL, .NET, pTAL, RPG, or Visual Basic client application on Multiplatforms, follow these steps to collect and send troubleshooting information:

#### Before You Begin
Answer the following questions about the problem:
- What client application problem did you observe on the system?
- When did the problem start and stop?
- What is the name of the client application, and which queue manager does it connect to?
- Which SVRCONN channel, queues, and other objects does the client application use?

#### About This Task
If the client application problem is currently occurring or can be reproduced, generate data to provide more information about the issue. After collecting the information, send it to IBM.

#### Procedure
1. **Generate a Trace of the Client Application:**
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)

2. **Generate a Simultaneous Trace of the Remote Queue Manager (if applicable):**
   - If the client application is receiving unexpected errors from a remote queue manager, generate a trace on that queue manager as well.
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)

3. **Save the Output from the `mqconfig` Command (Linux and UNIX systems only):**
   - Save the output from the `mqconfig` command and place it directly in the top-level IBM MQ errors directory. The automatic and manual data collection processes will collect files from this directory.

4. **Collect IBM MQ Data:**
   - You can do this either automatically or manually:
     - **Automatically:**
       - Use the `runmqras` command as described in "Collecting troubleshooting information automatically with runmqras" (Page 303).
       - Example command for collecting data from queue manager QMA:
         ```sh
         runmqras -section defs,trace -qmlist QMA -caseno TS001234567
         ```
     - **Manually:**
       - Follow the instructions in "Collecting troubleshooting information manually" (Page 306).

5. **Send the Collected Information to IBM:**
   - Provide a detailed description of the problem along with the collected data. Do not send data without a description.

### Collecting Information for IBM MQ Clustering Problems

If you need assistance from IBM Support to resolve an issue with IBM MQ clustering on Multiplatforms, follow these steps to collect and send troubleshooting information:

#### Before You Begin
Answer the following questions about the problem:
- What IBM MQ clustering problem did you observe on the system?
- When did the problem start and stop?
- What does your cluster topology look like, and where are the full repositories located?
- Which cluster queue managers, channels, queues, and topics are involved in the problem?

#### About This Task
If the IBM MQ clustering problem is currently occurring or can be reproduced, generate data to provide more information about the issue. After collecting the information, send it to IBM.

#### Procedure
1. **Generate a Trace of the Queue Manager:**
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)

2. **Generate Traces on Other Queue Managers in the Cluster (if applicable):**
   - If the problem involves other queue managers in the cluster, such as the cluster full repositories, generate traces on those queue managers as well.
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)

3. **Save the Output from the `mqconfig` Command (Linux and UNIX systems only):**
   - Save the output from the `mqconfig` command and place it directly in the top-level IBM MQ errors directory. The automatic and manual data collection processes will collect files from this directory.

4. **Collect IBM MQ Data:**
   - You can do this either automatically or manually:
     - **Automatically:**
       - Use the `runmqras` command as described in "Collecting troubleshooting information automatically with runmqras" (Page 303).
       - Example command for collecting data from queue managers QMA and REPOS1:
         ```sh
         runmqras -section defs,cluster,trace -qmlist QMA,REPOS1 -caseno TS001234567
         ```
     - **Manually:**
       - Follow the instructions in "Collecting troubleshooting information manually" (Page 306).

5. **Send the Collected Information to IBM:**
   - Provide a detailed description of the problem along with the collected data. Do not send data without a description.

### Collecting Information for Data Conversion Problems

If you need assistance from IBM Support to resolve a data conversion issue on Multiplatforms, follow these steps to collect and send troubleshooting information:

#### Before You Begin
Answer the following questions about the problem:
- What data conversion problem did you observe on the system?
- What is the `MQMD.Format` of the message and its original `MQMD.CodedCharSetId` (CCSID)?
- What is the intended `MQMD.CodedCharSetId` to which the message should be converted?
- Which specific characters in the message are invalid, and which characters did you expect to see instead?

#### About This Task
If the data conversion problem is currently occurring or can be reproduced, generate data to provide more information about the issue. After collecting the information, send it to IBM.

#### Procedure
1. **Browse the Message:**
   - Use a sample program such as `amqsbcg` to browse the message immediately after it has been put to an IBM MQ queue.
   - Example command to browse messages on a queue called 'Target.Queue' on queue manager 'QMA':
     ```sh
     amqsbcg Target.Queue QMA > Target.Queue.browse.txt
     ```

2. **Generate a Trace of the Queue Manager:**
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)

3. **Generate a Trace if the Message is Corrupted During Transfer:**
   - If the message contents are corrupted while flowing over an IBM MQ channel with `CONVERT(YES)`, generate a trace of the queue manager while the message is flowing across the sending channel.
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)

4. **Browse the Message Again:**
   - Use a sample program such as `amqsbcg` to browse the message just before it is retrieved by the target application.
   - Example command to browse messages on a queue called 'Target.Queue' on queue manager 'QMA':
     ```sh
     amqsbcg Target.Queue QMA > Target.Queue.browse.txt
     ```

5. **Generate a Trace if the Message is Corrupted Upon Retrieval:**
   - If the message contents are corrupted when the target application gets the message, generate a trace of the queue manager while the application is getting the message.
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)

6. **Collect IBM MQ Data:**
   - You can do this either automatically or manually:
     - **Automatically:**
       - Use the `runmqras` command as described in "Collecting troubleshooting information automatically with runmqras" (Page 303).
       - Example command for collecting data from queue manager QMA:
         ```sh
         runmqras -section defs,cluster,trace -qmlist QMA -caseno TS001234567
         ```
     - **Manually:**
       - Follow the instructions in "Collecting troubleshooting information manually" (Page 306).

7. **Send the Collected Information to IBM:**
   - Provide a detailed description of the problem along with the collected data. Do not send data without a description.

### Collecting Information for Dead-Letter Queue Problems

If an IBM MQ queue manager is placing messages on its dead-letter queue (DLQ) on Multiplatforms, follow these steps to collect and send troubleshooting information:

#### Before You Begin
Answer the following questions about the problem:
- What dead-letter queue problem did you observe on the system?
- When did the problem start and stop?
- Where are the dead-letter messages coming from, and what is their intended route?

#### About This Task
If the messages are going to the dead-letter queue right now, or if you can reproduce the problem that causes the messages to go there, generate data to provide more information about the issue. After collecting the information, send it to IBM.

#### Procedure
1. **Generate a Trace of the Queue Manager:**
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)

2. **Browse the Messages on the Dead-Letter Queue:**
   - Use a sample program such as `amqsbcg` to browse the messages on the dead-letter queue just before they are retrieved by the target application.
   - Example command to browse messages on a queue called 'Target.Queue' on queue manager 'QMA':
     ```sh
     amqsbcg Target.Queue QMA > Target.Queue.browse.txt
     ```
   - Place the browse output file, e.g., `QMA.DLQ.browse.txt`, directly in the high-level error log directory:
     - `var/mqm/errors` on Linux.
     - `MQ_INSTALLATION_PATH\errors` on Windows.

3. **Collect IBM MQ Data:**
   - You can do this either automatically or manually:
     - **Automatically:**
       - Use the `runmqras` command as described in "Collecting troubleshooting information automatically with runmqras" (Page 303).
       - Example command for collecting data from queue manager QMA:
         ```sh
         runmqras -section defs,cluster,trace -qmlist QMA -caseno TS001234567
         ```
     - **Manually:**
       - Follow the instructions in "Collecting troubleshooting information manually" (Page 306).

4. **Send the Collected Information to IBM:**
   - Provide a detailed description of the problem along with the collected data. Do not send data without a description.

### Collecting Information for Error Message and FFST Problems

If you need assistance from IBM Support to resolve an issue with IBM MQ logging error messages or writing FFSTs (FDC files) on Multiplatforms, follow these steps to collect and send troubleshooting information:

#### Before You Begin
Answer the following questions about the problem:
- What unexpected error messages or FFSTs did you observe on the system?
- When did the error messages or FFSTs start and stop?
- Were there any changes made to the system before the problem started?

#### About This Task
If the error message or FFST problem is currently occurring or can be reproduced, generate data to provide more information about the issue. After collecting the information, send it to IBM.

#### Procedure
1. **Generate a Trace of the Queue Manager:**
   - Refer to the appropriate tracing guide for your platform:
     - [Tracing on AIX and Linux](#tracing-on-aix-and-linux)
     - [Tracing on Windows](#tracing-on-windows)
     - [Tracing on IBM i](#tracing-on-ibm-i)
   - Consider generating a high-detail trace if you have sufficient disk space.

2. **Collect IBM MQ Data:**
   - You can do this either automatically or manually:
     - **Automatically:**
       - Use the `runmqras` command as described in "Collecting troubleshooting information automatically with runmqras" (Page 303).
       - Example command for collecting data from queue manager QMA:
         ```sh
         runmqras -section defs,cluster,trace -qmlist QMA -caseno TS001234567
         ```
     - **Manually:**
       - Follow the instructions in "Collecting troubleshooting information manually" (Page 306).

3. **Send the Collected Information to IBM:**
   - Provide a detailed description of the problem along with the collected data. Do not send data without a description.

### Collecting Information for Hang and High CPU Usage Problems

If you need assistance from IBM Support to resolve a problem with IBM MQ performance, hanging, or excessively high CPU usage on Multiplatforms, follow these steps to collect and send troubleshooting information:

#### Before You Begin
Answer the following questions about the problem:
- What performance problem or hang did you observe on the system?
- When did the problem start and stop?
- Which processes were involved in the performance problem or hang?
- Were there any recent changes to the system or to your applications before the problem?

#### About This Task
To identify the cause of the problem, it is essential to gather information from the system when the performance problem or hang is occurring, including stack dumps and other debugging data from the queue managers and applications showing the problem. After collecting the information, send it to IBM.

#### Procedure
1. **Generate Data from Managed File Transfer Processes:**
   - Generate three javacores from the hanging Managed File Transfer process, delaying approximately one minute between each one.
     - **Agent Javacores:**
       - Use the `fteSetAgentTraceLevel` command to generate agent javacores. Example:
         ```sh
         fteSetAgentTraceLevel -jc AGENTNAME
         ...
         fteSetAgentTraceLevel -jc AGENTNAME
         ...
         fteSetAgentTraceLevel -jc AGENTNAME
         ```
         Replace `AGENTNAME` with the name of the Managed File Transfer agent that is hanging.
     - **Logger Javacores:**
       - Use the `fteSetLoggerTraceLevel` command to generate logger javacores. Example:
         ```sh
         fteSetLoggerTraceLevel -jc LOGGERNAME
         ...
         fteSetLoggerTraceLevel -jc LOGGERNAME
         ...
         fteSetLoggerTraceLevel -jc LOGGERNAME
         ```
         Replace `LOGGERNAME` with the name of the Managed File Transfer logger that is hanging.

2. **Send the Collected Information to IBM:**
   - Provide a detailed description of the problem along with the collected data. Do not send data without a description.

### Tracing Guides
- **[Tracing on AIX and Linux](#tracing-on-aix-and-linux)**
- **[Tracing on Windows](#tracing-on-windows)**
- **[Tracing on IBM i](#tracing-on-ibm-i)**

For more details, refer to the respective sections in the documentation.

---

This optimized version aims to make the text more organized, clear, and professional. It includes consistent formatting, improved readability, and a logical flow of information.