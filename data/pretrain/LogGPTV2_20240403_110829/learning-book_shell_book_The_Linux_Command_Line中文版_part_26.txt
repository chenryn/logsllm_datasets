Gateway
Gennask
Flags
MSS Windov irtt Iface
192.168.1.0
255.255.255.0U
0
0 eth0
default
192.168.1.1 0.0.0.0
UG
0 eth0
在这个简单的例子里面，我们看到了，位于防火墙之内的局域网中，一台客户端计算机的典
型路由表。第一行显示了目的地192.168.1.0。IP地址以零结尾是指网络，而不是独立主机，所
以这个目的地意味着局域网中的任何一台主机。下一个字段，Gateway，是网关（路由器）的
名字或IP地址，用它来连接当前的主机和目的地的网络。若这个字段显示一个星号，则表明
不需要网关。
204
---
## Page 206
最后一行包含目的地default。指的是发往任何表上没有列出的目的地网络的流量。在我们
的实例中，我们看到网关被定义为地址192.168.1.1的路由器，它应该能知道怎样来处理目的地
流量。
netstat 程序有许多选项，我们仅仅讨论了几个。查看netstat命令的手册，可以得到所有
选项的完整列表。
17.2网络中传输文件
网络有什么用处呢？除非我们知道了怎样通过网络来传输文件。有许多程序可以用来在网络中
传送数据。我们先讨论两个，随后的章节里再介绍几个。
17.2.1ftp
ftp命令属于真正的“经典”程序之一，它的名字来源于其所使用的协议，就是文件传输协议。
FTP被广泛地用来从因特网上下载文件。大多数，并不是所有的，网络浏览器都支持FTP，你
经常可以看到它们的URI以协议ftp://开头。在出现网络浏览器之前，ftp程序已经存在了。
ftp程序可用来与FTP服务器进行通信，FTP服务器就是存储文件的计算机，这些文件能够
通过网络下载和上传。
FTP（它的原始形式）并不是安全的，因为它会以明码形式发送帐号的姓名和密码。这就意
味着这些数据没有加密，任何嗔探网络的人都能看到。由于此种原因，几乎因特网中所有FTP
登录系统。
在下面的例子中，我们将展示一个典型的会话，从匿名FTP服务器，其名字是fileserver
的/pub/_images/Ubuntu-8.04的目录下，使用ftp程序下载一个Ubuntu系统映像文件。
[nedlinuxbox -]$ ftp fileserver
Connected to fileserver .localdomain.
220 (vsFTPd 2.0.1)
Mane (fileserver:me) : anonymous
pronssed ou fproads aseotd TE
Passvord:
230 Login successful
Using binary mode to transfer files.
ftp> cd pub/cd\_inages/Ubuntu-8.04
250 Directory successfully changed.
205
---
## Page 207
ftp> 1s
200 PORT connand successful. Consider using PASV.
150 Here cones the directory listing.
rv-rv-r-- 1 500 500 733079552 Apr 25 03:53 ubuntu-8.04- desktop-i386.iso
226 Directory send OK.
ftp> 1cd Deslrtop
Local directory nov /home/ne/Desittop
ftp> get ubuntu-8.04-desktop-i386.iso
1ocal: ubuntu-8.04-desktop-i386.iso renote: ubuntu-8.04-desktop-
1386.150
200 PORT connand successful. Consider using PASV.
150 Opening BINARY node data connection for ubuntu-8.04-desktop-
i386.iso (733079552 bytes) .
226 File send OK.
733079552 bytes received in 68.56 secs (10441.5 kB/s)
ftp> bye
这里是对会话期间所输入命令的解释说明：
命令
意思
ftp fileserver
唤醒ftp程序，让它连接到FTP服务器，file-
server °
snoufuote
登录名。输入登录名后，将出现一个密码提示。
一些服务器将会接受空密码，其它一些则会要
求一个邮件地址形式的密码。如果是这种情况，
试着输入“PI:EMAIL”。
cdpub/cd_images/Ubuntu-跳转到远端系统中.要下载文件所在的目录下，
8.04
注意在大多数匿名的FTP服务器中，支持公共
下载的文件都能在目录pub下找到
1s
列出远端系统中的目录。
led Desktop
跳转到本地系统中的-/Desktop目录下。在实
例中，ftp程序在工作目录-下被唤醒。这个命
令把工作目录改为/Desktop
206
---
## Page 208
get
ubuntu-8.04-desktop-告诉远端系统传送文件到本地。因为本地系统
i386.is0
的工作目录已经更改到了/Desktop，所以文件
会被下载到此目录。
bye
退出远端服务器，结束ftp程序会话。也可以使
用命令quit和exit。
表17-1:
用户足够权限的服务器中，则可以执行很多普通的文件管理任务。虽然很笨拙，但它真能工作。
17.2.2lftp-更好的 ftp
ftp并不是唯一的命令行形式的FTP客户端。实际上，还有很多。其中比较好（也更流行的）
是Iftp程序，由AlexanderLukyanov编写完成。虽然lftp工作起来与传统的ftp程序很相似，
但是它带有额外的便捷特性，包括多协议支持（包括HTTP），若下载失败会自动地重新下载
后台处理，用tab按键来补全路径名，还有很多。
17.2.3 wget
另一个流行的用来下载文件的命令行程序是wget·若想从网络和FTP网站两者上都能下载
数据，wget是很有用处的。不只能下载单个文件，多个文件，甚至整个网站都能下载。下载
linuxcommand.org网站的首页，我们可以这样做：
dd·xoput/3xopeuuoxnutt//:dq sa8n s[-xoqxnutgou]
-11 :02:51-- http://linuxcounand.org/index-php
=>*index.pbp*
Resolving linuxcomnand.org... 66.35.250.210
Connecting to linuxcomnand.org166.35.250.2101 :80... connected,
HTTP request sent, avaiting response.. 200 0K
Length: unspecified [text/htn1]
>]
=> ]
3,120
-,--K/s
11:02:51 (161.75 MB/s) - *index.php* saved [3120]
207
---
## Page 209
这个程序的许多选项允许wget递归地下载，在后台下载文件（你退出后仍在下载），能完
成未下载全的文件。这些特性在其优秀的命令手册中有着详尽地说明。
17.3与远程主机安全通信
通过网络来远程操控类Unix的操作系统已经有很多年了。早些年，在因特网普遍推广之前
有一些受欢迎的程序被用来登录远程主机。它们是rlogin和telnet程序。然而这些程序，拥有
和ftp程序一样的致命缺点；它们以明码形式来传输所有的交流信息（包括登录命令和密码）。
这使它们完全不适合使用在因特网时代。
17.3.1ssl
为了解决这个问题，开发了一款新的协议，叫做SSH（Secure Shell）。SSH解决了这两个基本
的和远端主机安全交流的问题。首先，它要认证远端主机是否为它所知道的那台主机（这样就
阻止了所谓的“中间人”的攻击），其次，它加密了本地与远程主机之间所有的通讯信息。
SSH由两部分组成。SSH服务端运行在远端主机上，在端口22上监听收到的外部连接，而
SSH客户端用在本地系统中，用来和远端服务器通信。
大多数Linux发行版自带一个提供SSH功能的软件包，叫做OpenSSH，来自于BSD 项
目。一些发行版默认包含客户端和服务端两个软件包（例如RedHat），而另一些（比方说
Ubuntu）则只提供客户端。为了能让系统接受远端的连接，它必须安装OpenSSH-server软件
包，配置，运行它，并且（如果系统正在运行，或者系统在防火墙之后）它必须允许在TCP端
口22上接收网络连接。
小贴示：如果你没有远端系统去连接，但还想试试这些实例，则确认安装了OpenSSH-server
软件包，则可使用locallhost作为远端主机的名字·这种情况下，计算机会和它自己创建网络连
接。
用来与远端SSH服务器相连接的SSH客户端程序，顺理成章，叫做ssh。想要连接到名叫
remote-sys的远端主机，我们可以这样使用ssh客户端程序：
208
---
## Page 210
ss-oomx qes s[- xoqxnutoou]
The authenticity of host *renote-sys (192.168.1.4)′ can′t be
established.
RSA lkey fingerprint is
41 :ed:7a:df : 23: 19 : bf :3c :a5 :17 :bc:61:b3:7f :d9: bb
Are you sure you vant to continue connecting (yes/no)?
第一次尝试连接，提示信息表明远端主机的真实性不能确立。这是因为客户端程序以前从
没有看到过这个远端主机。为了接受远端主机的身份验证凭据，输入“yes”。一旦建立了连接
会提示用户输入他或她的密码：
of knovm hosts.
me@renote-sys′s passvord:
成功地输入密码之后，我们会接收到远端系统的shell提示符：
Last 1ogin: Sat Aug 30 13:00:48 2008
[nelremote-sys -]$
远端shell会话一直存在，直到用户输入exit命令后，则关闭了远程连接。这时候，本地的
shell会话恢复，本地shell提示符重新出现。
也有可能使用不同的用户名连接到远程系统。例如，如果本地用户“me”，在远端系统中有
一个帐号名“bob”，则用户me能够用bob帐号登录到远端系统，如下所示：
[ne@linuxbox -]$ ssh boblrenote-sys
boblremote-sys′s passvord:
Last 1ogin: Sat Aug 30 13:03:21 2008
[bob@renote-sys -]$
正如之前所讲到的，ssh验证远端主机的真实性。如果远端主机不能成功地通过验证，则会
提示以下信息：
209
---
## Page 211
G002000200200020020000002002000200200020020020002002002000
WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED
10020002002000200200000020020002002000200200200020020002002
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING KASTY!
TPpTu4uy-ueu) sou 4q31 nof uo Burddoxpsaaeo oq ptnoo ouoauog
attack) !
见，因为每个人都知道ssh会针对这种状况发出警告。最有可能的罪魁祸首是远端系统已经改
变了：例如，它的操作系统或者是SSH服务器重新安装了。然而，为了安全起见，第一个可能
性不应该被轻易否定。当这条消息出现时，总要与远端系统的管理员查对一下。
当确定了这条消息归结为一个良性的原因之后，那么在客户端更正问题就很安全了。使用
文本编辑器（可能是vim）从文件~/.ssh/known_hosts中删除废弃的钥匙，就解决了问题。在
上面的例子里，我们看到这样一句话：
Offending key in /hose/me/ .ssh/knoun_hosts:1
这意味着known_hosts文件的第一行包含那个冲突的钥匙。从文件中删除这一行，则ssh
程序就能够从远端系统接受新的身份验证凭据。
除了能够在远端系统中打开一个shell会话，ssh程序也允许我们在远端系统中执行单个命
令。例如，在名为remote-sys的远端主机上，执行free 命令，并把输出结果显示到本地系统
shell会话中。
[ne@linuxbox -]$ ssh remote-sys free
me@tvin4's passvord:
totalused
free
shared buffers cached
Ken:
775536 507184 268352
0110068 154596
210
---
## Page 212
/+ buffers/cache: 242520533016
Svap: 0 1572856 0 110068 154596
[ne@linuxbox -]$
有可能以更有趣的方式来利用这项技术，比方说下面的例子，我们在远端系统中执行命
令，并把命令输出重定向到本地系统中的一个文件里面。
xxp dirlist.txt
SSH通道
当你通过SSH协议与远端主机建立连接的时候，其中发生的事就是在本地与远
令安全地传输到远端系统，同样地，再把执行结果安全地发送回来。除了这个基本
功能之外，SSH协议允许大多数网络流量类型通过这条加密通道来被传送，在本地
与远端系统之间创建一种VPN（虚拟专用网络）。
可能这个特性的最普遍的用法是允许传递X窗口系统流量。在运行着X服务端
的系统（也就是，能显示GUI的机器）上，能登录远端系统并运行一个X客户端程
序（一个图形化应用），而应用程序的显示结果出现在本地。这很容易完成，这里有
个例子：假设我们正坐在一台名为linuxbox的Linux系统前，且系统中运行着X
服务端，现在我们想要在名为remote-sys的远端系统中运行xload程序，但是要在
211
---
## Page 213
ssoqouox-qes$[-xoqxnuttoou]
meQrenote-sys's passvord:
Last 1ogin: Mon Sep 08 13:23:11 2008
peox s[- sfs-ouoxgou]
这个xload命令在远端执行之后，它的窗口就会出现在本地。在某些系统中，你
17.3.2 scp 和 sftp
OpenSSH软件包也包含两个程序，它们可以利用SSH加密通道在网络间复制文件。第一个，
scp（安全复制）被用来复制文件，与熟悉的cp程序非常相似。最显著的区别就是源或者目标
路径名要以远端主机的名字，后跟一个冒号字符开头。例如，如果我们想要从remote-sys远端
系统的家目录下复制文档document.txt，到我们本地系统的当前工作目录下，可以这样操作：
[ne@linuxbox -]$ scp remote-sys:document,txt -
me@renote-sys's passvord:
docunent.txt
100%
5581
5.5KB/s
00 : 00
[ne@linuxbox -]$
和ssh命令一样，如果所需的远端主机帐户名与本地系统中的不一致，那么你可以把用户名
添加到远端主机名的开头：
[ne@linuxbox -]$ scp bob@remote=sys:document.txt
第二个SSH文件复制程序是sftp，顾名思义，它是ftp程序的安全替代品。sftp工作起来
与我们之前使用的ftp程序很相似：然而，它不用明码形式来传递数据，它使用加密的SSH通
道。sftp有一个重要特性强于传统的ftp命令，就是sftp不需要远端系统中运行FTP服务端。
它仅仅需要SSH服务端。这意味着任何一台能用SSH客户端连接的远端机器，也可当作类似
于FTP的服务器来使用。这里是一个样本会话：
212
---
## Page 214
[ne@linuxbox -]S sftp reaote-sys
Connecting to remote-sys...