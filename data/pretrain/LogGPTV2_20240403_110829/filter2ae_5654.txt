## 漏洞信息

近日，Atlassian官方发布了一则关于Atlassian Jira Server的远程代码执行（RCE）漏洞公告。该漏洞编号为CVE-2021-43947，并被描述为对CVE-2021-39115补丁的绕过。对于CVE-2021-39115漏洞的具体复现过程，请参考以下文章：
> **参考资料**  
> [CVE-2021-39115 - Atlassian Jira Service Management Server SSTI漏洞分析](https://mp.weixin.qq.com/s?__biz=Mzg3MTU0MjkwNw==&mid=2247483682&idx=1&sn=b6d6299795235c39a86dc8e2a1914cc2&chksm=cefdb836f98a3120346feb343efc15de64df15c3358461fab99a9789e86fbd11d4a6f9b4deba&token=1141420492&lang=zh_CN#rd)

## 漏洞分析

为了便于调试，在安装Jira后，可以修改`/bin/setenv.bat`文件以添加如下调试信息：

```shell
set JVM_SUPPORT_RECOMMENDED_ARGS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:8787
```

重启服务并开启远程调试功能:

```shell
start-jira.bat /fg
```

鉴于此漏洞是对已有补丁的一种绕过方式，我们首先对比了新旧版本中的更改。Atlassian Jira Server通过黑名单机制修复了Velocity模板注入(SSTI)漏洞。查看`velocity.properties`配置文件可知，相较于之前版本，新版本增加了若干个黑名单条目，包括但不限于以下几类对象：

- `webwork.util.ValueStack`
- `javax.el.ELProcessor`
- `javax.script.ScriptEngineManager`
- `java.lang.ProcessBuilder`
- `javax.el.ImportHandler`
- `javax.el.ELManager`

熟悉这些类别的安全研究人员可能已经能够推测出如何绕过当前的安全措施。接下来，我们将从代码审计的角度简要介绍触发该漏洞的过程。

根据问题发生的上下文环境——即邮件处理部分——我们可以直接定位到`com.atlassian.jira.web.action.admin.mail.SendBulkMail#doExecute`方法，并追踪其调用栈直至`org.apache.velocity.app.VelocityEngine#evaluate`处，这里是模板渲染发生的地方。

为了更有效地绕过黑名单限制，建议编写测试代码并在断点位置尝试使用不同模板逐步验证是否成功绕过了现有防护。这种做法不仅有助于深入理解漏洞机理，也为后续的研究提供了便利条件。

## 漏洞复现

关于如何复现此次漏洞的具体步骤，读者可参照之前针对CVE-2021-39115所做的详细说明：
> **参考资料**  
> [CVE-2021-39115 - Atlassian Jira Service Management Server SSTI漏洞分析](https://mp.weixin.qq.com/s?__biz=Mzg3MTU0MjkwNw==&mid=2247483682&idx=1&sn=b6d6299795235c39a86dc8e2a1914cc2&chksm=cefdb836f98a3120346feb343efc15de64df15c3358461fab99a9789e86fbd11d4a6f9b4deba&token=1141420492&lang=zh_CN#rd)