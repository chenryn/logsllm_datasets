Reciprocation between neighbours is used to encourage
resource contribution in several deployed peer-to-peer net-
works [15, 16, 17]. These systems differ in how they al-
locate resources among cooperative neighbours, but all of
them provide a higher level of service to contributors than
non-contributors. Hash trees [24] are calculated in advance
and used to verify each block of data received, so these net-
works are only suitable for distributing static ﬁles.
SLIC [25] is an incentive mechanism for message for-
warding in peer-to-peer search overlays. The level of ser-
vice received from a neighbour is measured by the number
of search results it returns, but without a way to verify re-
sults this creates an incentive to return a large number of
bogus results.
In contrast, the U-ACK protocol makes it
easy to detect bogus acknowledgements.
SHARP [26] is a general framework for peer-to-peer re-
source trading; digitally signed ‘tickets’ are used to reserve
and claim resources such as storage, bandwidth and com-
putation. Claims can be delegated, so peers can trade re-
sources with peers more than one hop away, but the iden-
tities of all peers in the delegation chain must be visible in
order to validate the claim. This makes SHARP unsuitable
for untrusted environments and unlinkable communication.
6.2. Authenticated acknowledgements
2HARP [2] is a routing protocol for ad hoc wireless net-
works in which each node that receives a packet sends an
acknowledgement to the previous two nodes, allowing each
node to verify that its downstream neighbour forwarded the
packet. Every node has a public/private key pair for signing
acknowledgements; these key pairs must be certiﬁed by a
central authority to prevent nodes from generating extra key
pairs and using them to create bogus acknowledgements.
This requirement makes 2HARP unsuitable for use in open
membership networks.
IPSec [27] uses message authentication codes for end-
to-end authentication at the network layer. This makes it
possible to authenticate transport-layer acknowledgements
as well as data, but the MACs can only veriﬁed by the end-
points, not by third parties such as relays.
TLS [28] uses MACs at the transport layer. TCP headers
are not authenticated, however, so it is possible for relays to
forge TCP acknowledgements. As with IPSec, the MACs
used by TLS cannot be veriﬁed by relays.
Some robust routing protocols for ad hoc networks use
MACs to acknowledge messages and to detect faulty links
and nodes [29, 30]. This requires a trusted certiﬁcate au-
thority for key distribution, and rules out unlinkability.
6.3. Authentication using one-way func-
tions
Gennaro and Rohatgi [31] describe two methods for au-
thenticating streams using one-way functions. The ﬁrst
scheme uses one-time signatures [32, 33]. Each block of the
stream contains a public key, and is signed with the private
key corresponding to the public key contained in the previ-
ous block. The ﬁrst block carries a conventional asymmet-
ric signature. One-time signatures are large, so this scheme
has a considerable bandwidth overhead. The computational
cost of verifying a one-time signature is comparable to that
of an asymmetric signature, although signing is more efﬁ-
cient.
The second scheme uses chained hashes, where each
block contains the hash of the next block, and the ﬁrst block
carries an asymmetric signature. The entire stream must be
known to the originator before the ﬁrst block is sent. This
scheme is similar to the use of hash trees in ﬁle-sharing net-
works.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:53:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007The Guy Fawkes protocol [34] also uses chained hashes.
The originator does not need to know the entire stream in
advance, but each block must be known before the previous
block is sent. Each block carries a preimage and a hash
that are used to verify the previous block, and a hash that
commits to the contents of the next block. The ﬁrst block
carries a conventional signature.
Several ad hoc routing protocols use hash chains to re-
duce the number of asymmetric signature operations [35,
36, 37, 38]. Others use delayed disclosure, in which a hash
and its preimage are sent by the same party at different
times, requiring loose clock synchronisation [36, 39, 40].
In our protocol the preimage is not sent until the hash is
received, so no clock synchronisation is required.
The schemes described above use similar techniques to
the protocol described in this paper, but their aims are dif-
ferent. Whereas the aim of a signature scheme is to asso-
ciate messages with an originator, the aim of our protocol
is to associate an acknowledgement with a message, with-
out identifying the originator or destination of the message.
The signature schemes mentioned above therefore require
an initial asymmetric signature to identify the originator,
whereas the U-ACK protocol does not require asymmetric
cryptography.
7. Conclusion and future work
We have described the U-ACK protocol, which enables
nodes in a network to measure the dependability of their
neighbours in forwarding messages using unforgeable ac-
knowledgements (U-ACKs). The protocol does not require
trust between all nodes in the network; the only nodes that
need to be able to verify one another’s identities are the
originator and destination. The acknowledgements created
by the protocol are unforgeable but can be veriﬁed by un-
trusted third parties. The protocol has broad applicability:
it can operate at the network layer or in a peer-to-peer over-
lay, and does not require relays to establish a security asso-
ciation with the endpoints, or to be aware of the details of
higher-layer protocols. It can be seen as a building block
for dependable communication systems, allowing nodes to
measure the level of service received from their neighbours
using an application-speciﬁc dependability metric (ASDM)
that is a function of the messages sent and the U-ACKs re-
ceived.
We are currently investigating speciﬁc properties of the
protocol when used in peer-to-peer systems, e.g.
the dy-
namics of resource usage that occur with a mixture of free
riders, altruists and reciprocators. The investigations will
explore the sensitivity of the U-ACK scheme to various pa-
rameters such as the size and structure of the network, the
proportion of free riders, etc.
The U-ACK scheme could also have applicability to sys-
tems that need to be robust to Byzantine failures, such as ap-
plications for safety-critical systems, civil defence and mil-
itary use.
References
[1] R. Perlman. Network layer protocols with Byzantine
robustness. PhD Thesis, Department of Electrical En-
gineering and Computer Science, Massachusetts Insti-
tute of Technology, August 1988.
[2] P.W. Yau and C.J. Mitchell. 2HARP: A secure routing
protocol to detect failed and selﬁsh nodes in mobile ad
hoc networks. In Proc. 5th World Wireless Congress,
San Francisco, CA, USA, pages 1–6, 2004.
[3] D. Quercia, M. Lad, S. Hailes, L. Capra and S. Bhatti.
STRUDEL: Supporting trust in the dynamic establish-
ment of peering coalitions. In Proc. 21st Annual ACM
Symposium on Applied Computing (SAC2006), Bour-
gogne University, Dijon, France, 23-27 April 2006.
[4] T.W. Ngan, D.S. Wallach, and P. Druschel. Enforcing
fair sharing of peer-to-peer resources. In F. Kaashoek
and I. Stoica, editors, Proc. 2nd International Work-
shop on Peer-to-Peer Systems (IPTPS ’03), Berkeley,
CA, USA, February 2003, volume 2735 of Lecture
Notes in Computer Science, pages 149–159. Springer,
2003.
[5] M. Ham and G. Agha. ARA: A robust audit to prevent
In 5th IEEE Interna-
free-riding in P2P networks.
tional Conference on Peer-to-Peer Computing, Kon-
stanz, Germany, August-September 2005.
[6] S. Buchegger and J.Y. Le Boudec. A robust reputa-
tion system for P2P and mobile ad hoc networks. In
2nd Workshop on Economics of Peer-to-Peer Systems,
Cambridge, MA, USA, June 2004.
[7] L. Anderegg and S. Eidenbenz. Ad hoc VCG: A truth-
ful and cost-efﬁcient routing protocol for mobile ad
hoc networks with selﬁsh agents. In ACM Mobicom,
2003.
[8] P. Druschel and A. Rowstron. PAST: A large-scale,
persistent peer-to-peer storage utility.
In 8th Work-
shop on Hot Topics in Operating Systems, Elmau, Ger-
many, May 2001.
[9] A. Adya, W.J. Bolosky, M. Castro, G. Cermak, R.
Chaiken, J.R. Douceur, J. Howell, J.R. Lorch, M.
Theimer, and R.P. Wattenhofer. FARSITE: Federated,
available, and reliable storage for an incompletely
trusted environment.
In Proc. 5th USENIX Sympo-
sium on Operating Systems Design and Implementa-
tion, Boston, MA, USA, pages 1–14, December 2002.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:53:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007[10] M. Rogers and S. Bhatti. Cooperation in decentralised
In London Communications Symposium,
networks.
London, UK, September 2005.
[22] K. Ostrowski, K. Birman, and A. Phanishayee. Quick-
Silver scalable multicast. Technical Report TR2006-
2063, Cornell University, April 2006.
[11] J.R. Douceur. The Sybil attack.
In P. Druschel, F.
Kaashoek, and A. Rowstron, editors, Proc. 1st Inter-
national Workshop on Peer-to-Peer Systems (IPTPS
’02), Cambridge, MA, USA, March 2002, volume
2429 of Lecture Notes in Computer Science, pages
251–260. Springer, 2002.
[12] J.H. Saltzer, D.P. Reed, and D.D. Clark. End-to-end
arguments in system design. ACM Transactions on
Computer Systems, 2(4):277–288, November 1984.
[13] X. Wang, D. Feng, X. Lai, and H. Yu.
Colli-
sions for hash functions MD4, MD5, HAVAL-128 and
RIPEMD, 2004. Cryptology ePrint 2004/199, avail-
able from http://eprint.iacr.org/2004/
199.pdf.
[14] X. Wang, Y.L. Yin, and H. Yu. Finding collisions in
the full SHA-1. In 25th Annual International Cryp-
tology Conference, Santa Barbara, CA, USA, August
2005.
[15] C. Grothoff.
An excess-based economic model
resource allocation in peer-to-peer networks.
for
Wirtschaftsinformatik, 45(3):285–292, June 2003.
[16] B. Cohen. Incentives build robustness in BitTorrent.
In Workshop on Economics of Peer-to-Peer Systems,
Berkeley, CA, USA, June 2003.
[17] Y. Kulbak and D. Bickson.
The eMule protocol
speciﬁcation.
Technical report, School of Com-
puter Science and Engineering, Hebrew University of
Jerusalem, January 2005.
[18] P. Gauthier, B. Bershad, and S.D. Gribble. Dealing
with cheaters in anonymous peer-to-peer networks.
Technical Report 04-01-03, University of Washington,
January 2004.
[19] D. Goldschlag, M. Reed, and P. Syverson. Onion rout-
ing for anonymous and private internet connections.
Communications of the ACM, 42(2):39–41, February
1999.
[20] The IETF Reliable Multicast Transport (RMT) Work-
http://www.ietf.org/html.
ing Group.
charters/rmt-charter.html
[21] K. Birman, M. Hayden, O. Ozkasap, Z. Xiao, M.
Budiu, and Y. Minsky. Bimodal multicast. ACM
Transactions on Computer Systems, 17(2):41–88,
May 1999.
[23] S. Rafaeli and D. Hutchison. A survey of key manage-
ment for secure group communication. ACM Comput-
ing Surveys, 35(3):309–329, September 2003.
[24] R. Merkle. Protocols for public key cryptosystems. In
IEEE Symposium on Security and Privacy, Oakland,
CA, USA, April 1980.
[25] Q. Sun and H. Garcia-Molina. SLIC: A selﬁsh link-
based incentive mechanism for unstructured peer-to-
peer networks.
In 24th International Conference on
Distributed Computing Systems, 2004.
[26] Y. Fu, J. Chase, B. Chun, S. Schwab, and A. Vahdat.
SHARP: An architecture for secure resource peering.
In 19th ACM Symposium on Operating Systems Prin-
ciples, Bolton Landing, NY, USA, October 2003.
[27] S. Kent and R. Atkinson. RFC 2401: Security archi-
tecture for the internet protocol, November 1998.
[28] T. Dierks and C. Allen. RFC 2246: The TLS protocol,
January 1999.
[29] B. Awerbuch, D. Holmer, C. Nita-Rotaru, and H.
Rubens. An on-demand secure routing protocol re-
silient to Byzantine failures. In Proc. ACM Workshop
on Wireless Security (WiSe’02), Atlanta, GA, USA,
pages 21–30, September 2002.
[30] I. Avramopoulos, H. Kobayashi, R. Wang, and A. Kr-
ishnamurthy. Highly secure and efﬁcient routing. In
IEEE Infocom, Hong Kong, March 2004.
[31] R. Gennaro and P. Rohatgi. How to sign digital
streams. In B.S.J. Kaliski, editor, Proc. 17th Annual
Cryptology Conference (CRYPTO ’97), Santa Bar-
bara, CA, USA, August 1997, volume 1294 of Lecture
Notes in Computer Science, pages 180–197. Springer,
1997.
[32] L. Lamport. Constructing digital signatures from a
one-way function. Technical Report CSL-98, SRI In-
ternational, Palo Alto, CA, USA, 1979.
[33] R. Merkle. A digital signature based on a conventional
encryption function.
In C. Pomerance, editor, Proc.
Conference on the Theory and Applications of Cryp-
tographic Techniques (CRYPTO ’87), Santa Barbara,
CA, USA, August 1987, volume 293 of Lecture Notes
in Computer Science. Springer, 1988.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:53:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007[34] R.J. Anderson, F. Bergadano, B. Crispo, J.H. Lee,
C. Manifavas, and R.M. Needham. A new family of
authentication protocols. Operating Systems Review,
32(4):9–20, October 1998.
[35] R. Hauser, T. Przygienda, and G. Tsudik. Reducing
the cost of security in link-state routing. In ISOC Sym-
posium on Network and Distributed System Security,
San Diego, CA, USA, February 1997.
[36] S. Cheung.
An efﬁcient message authentication
scheme for link state routing.
In Proc. 13th Annual
Computer Security Applications Conference (ACSAC
’97), San Diego, CA, USA, pages 90–98, December
1997.
[37] M.G. Zapata and N. Asokan. Securing ad hoc rout-
ing protocols.
In Proc. ACM Workshop on Wireless
Security (WiSe’02), Atlanta, GA, USA, pages 1–10,
September 2002.
[38] Y.C. Hu, D.B. Johnson, and A. Perrig. SEAD: Secure
efﬁcient distance vector routing for mobile wireless ad
hoc networks. In 4th IEEE Workshop on Mobile Com-
puting Systems and Applications (WMCSA ’02), June
2002.
[39] A. Perrig, R. Canneti, J.D. Tygar, and D. Song. The
TESLA broadcast authentication protocol. Crypto-
Bytes, 5(2):2–13, 2002.
[40] Y.C. Hu, A. Perrig, and D.B. Johnson. Ariadne: A se-
cure on-demand routing protocol for ad hoc networks.
In 8th International Conference on Mobile Computing
and Networking (MobiCom), September 2002.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:53:01 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007