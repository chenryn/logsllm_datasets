User: How to write a simple script in Python that checks the availability of a web server and sends a notification if the server goes down?
Assistant: Here is a simple Python script that uses the requests library to check the availability of a web server and send email notifications if the server is down: ```python import requests import smtplib from email.mime.text import MIMEText from email.header import Header # Set the URL of the server to check url = "https://example.com" # Set the email address and SMTP server information for sending notifications sender = "example@gmail.com" recipient = "admin@example.com" smtp_server = "smtp.gmail.com" smtp_port = 587 smtp_username = "example@gmail.com" smtp_password = "password" # Send email notification function def send_notification(email_subject, email_body): message = MIMEText(email_body, "plain", " utf-8") message["From"] = Header(sender, "utf-8") message["To"] = Header(recipient, "utf-8") message["Subject"] = Header(email_subject, "utf-8") smtp_conn = smtplib.SMTP(smtp_server, smtp_port) smtp_conn.starttls() smtp_conn.login(smtp_username, smtp_password) smtp_conn.sendmail(sender, recipient, message.as_string()) smtp_conn.quit() # to check Server availability response = requests.get(url) if response.status_code != 200: email_subject = "Web server failure" email_body = f "Web server {url} is unreachable with status code {response.status_code}" send_notification(email_subject , email_body) ``` This script uses the requests library to send HTTP requests to check server availability. If the server returns a status code other than 200, it means that the server has failed, and an email notification will be sent to the administrator. The function of sending email notifications is implemented using the smtplib and email libraries. In actual use, you need to configure the URL, SMTP server information, email address, SMTP authentication information, etc. in the script according to the actual situation.