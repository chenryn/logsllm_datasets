    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
Remote Code Evolution
_start:
    xor reg1, reg1
 push reg1
    pushad
    sub reg1, reg1
    mov reg1, [fs:dword 0x30]
    add reg2, reg2
    movzx reg2, byte [reg1+2]
    mov reg3, reg4
    mov dword [esp+32], reg2
    popad
    pop eax
    ret
end:
push 0{
Insertion
Insertion
Insertion
n*nop
Morphing Techniques
add esp,36
push reg2
sub esp,32
33
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
_start:
    xor reg1, reg1
 push reg1
    pushad
    sub reg1, reg1
    mov reg1, [fs:dword 0x30]
    add reg2, reg2
    movzx reg2, byte [reg1+2]
    mov reg3, reg4
    mov dword [esp+32], reg2
    popad
    nop
    pop eax
    nop
    ret
end:
Remote Code Evolution
First Morphing Stage
34
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
Second Morphing Stage
Remote Code Evolution
line1: 
    xor edi, edi 
    jmp long line2
line11: 
    popad 
    jmp long line12
line10: 
    nop 
    jmp long line11
line5: 
    jmp long line6
line4: 
    sub edi, edi 
    jmp long line5
line3: 
    pushad 
    jmp long line4
line2: 
    push edi 
    jmp long line3
line8: 
    mov ecx, edx 
    jmp long line9
line7: 
    movzx ebx, byte [edi+2] 
    jmp long line8
line6: 
    add ebx, ebx 
    jmp long line7
line9: 
    mov dword [esp+32], ebx 
    jmp long line10
line15: 
    ret 
    jmp long line16
line14: 
    nop 
    jmp long line15
line13: 
    pop eax 
    jmp long line14
line12: 
    nop 
    jmp long line13
35
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
line1: 
    xor edi, edi 
    jmp long line2
line11: 
    popad 
    jmp long line12
line10: 
    nop 
    jmp long line11
line5: 
    jmp long line6
line4: 
    sub edi, edi 
    jmp long line5
line3: 
    pushad 
    jmp long line4
line2: 
    push edi 
    jmp long line3
line8: 
    mov ecx, edx 
    jmp long line9
line7: 
    movzx ebx, byte [edi+2] 
    jmp long line8
line6: 
    add ebx, ebx 
    jmp long line7
line9: 
    mov dword [esp+32], ebx 
    jmp long line10
line15: 
    ret 
    jmp long line16
line14: 
    nop 
    jmp long line15
line13: 
    pop eax 
    jmp long line14
line12: 
    nop 
    jmp long line13
Third Morphing Stage
Remote Code Evolution
36
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
Self Modifying Body Polymorphism
line1: 
    xor edi, edi 
    jmp long line2
line1: 
    pushad 
    pushf 
    call line1_1 
    db 5 
    db 1 
    dd -1 
    db 0 
    dd 27 
    db 4 
    dd 3524080526 
    db 0 
    dd 7 
    db 2 
    dd 545547056 
    mov eax, 93 
    add ecx, eax 
    mov eax, ecx 
    mov ebx, 0x11223344 
    not ebx 
    mov [ecx], ebx 
    add ecx, 4 
    mov ebx, 0x11223344 
    ror ebx, 27 
    mov [ecx], ebx 
    add ecx, 4 
    xor dword [ecx], 0x11223344 
    add ecx, 4 
    mov ebx, 0x11223344 
    ror ebx, 7 
    mov [ecx], ebx 
    add ecx, 4 
    add dword [ecx], 0x11223344 
    add ecx, 4 
    jmp eax 
line1_2: 
    popf 
    popad 
     xor edi, edi 
   jmp long line2 
    nop 
    . . . 20*nops 
    nop 
line1_1: 
    mov ecx, [esp] 
    nop 
    nop 
    mov dl, 0xe9 
    mov byte [ecx], dl 
    mov edx, 0x00000058 
    mov dword [ecx+1], edx 
    ret
Random Obfuscation Keys
        db 5 
    db 1 
    dd -1 
    db 0 
    dd 27 
    db 4 
    dd 3524080526 
    db 0 
    dd 7 
    db 2 
    dd 545547056
Self modifying instructions 
    mov eax, 93 
    add ecx, eax 
    mov eax, ecx 
    mov ebx, 0x11223344 
    not ebx 
    mov [ecx], ebx 
    add ecx, 4 
    mov ebx, 0x11223344 
    ror ebx, 27 
    mov [ecx], ebx 
    add ecx, 4 
    xor dword [ecx], 0x11223344 
    add ecx, 4 
    mov ebx, 0x11223344 
    ror ebx, 7 
    mov [ecx], ebx 
    add ecx, 4 
    add dword [ecx], 0x11223344 
    add ecx, 4 
    jmp eax
line1_1: 
    mov ecx, [esp] 
    nop 
    nop 
    mov dl, 0xe9 
    mov byte [ecx], dl 
    mov edx, 0x00000058 
    mov dword [ecx+1], edx 
    ret
Self Modifying
Forth Morphing Stage
37
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4
    jmp ebx
line95_2:
    popf
    popad
    nop
    jmp long line96
line95_1:
    mov eax, [esp]
    nop
    nop
xor eax, eax
xor ecx, ecx
xor edx, edx
    mov cl, 0xe9
    mov byte [eax], cl
    xor edx, 0
    mov ecx, 0x00000057
    mov dword [eax+1], ecx
    ret
Self Modifying Blocks
Obfuscation Keys
Self modifying code
All blocks have same 
identical structure
One block per 
morphed instruction 
Fifth Morphing Stage
38
line46_1:
    mov ecx, [esp]
    nop
    nop
    mov dl, 0xe9
    test edx, edx
    mov byte [ecx], dl
    xor eax, 0
    mov edx, 0x00000067
    mov dword [ecx+1], edx
    ret
line95:
    pushad
    pushf
    call line95_1
    db 7
    db 3
    dd 838225172
    db 2
    dd 4211932376
    db 4
    dd 2520091426
    db 3
    dd 946381070
    db 2
    dd 3318121790
    db 2
    dd 1375432265
    db 1
    dd -1
    mov ebx, 92
    add eax, ebx
    mov ebx, eax
    sub dword [eax], 0xe82c334d
    add eax, 4
    add dword [eax], 0xa1723594
    add eax, 4
    xor dword [eax], 0xb1c21343
    add eax, 4
    sub dword [eax], 0x111111ee
    add eax, 4
    add dword [eax], 0xaaccee22
    add eax, 4