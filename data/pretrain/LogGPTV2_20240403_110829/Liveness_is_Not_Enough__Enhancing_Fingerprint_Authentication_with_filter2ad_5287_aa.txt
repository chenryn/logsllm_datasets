title:Liveness is Not Enough: Enhancing Fingerprint Authentication with
Behavioral Biometrics to Defeat Puppet Attacks
author:Cong Wu and
Kun He and
Jing Chen and
Ziming Zhao and
Ruiying Du
Liveness is Not Enough: Enhancing Fingerprint 
Authentication with Behavioral Biometrics to 
Defeat Puppet Attacks
Cong Wu, Kun He, and Jing Chen, Wuhan University; Ziming Zhao, 
Rochester Institute of Technology; Ruiying Du, Wuhan University
https://www.usenix.org/conference/usenixsecurity20/presentation/wu
This paper is included in the Proceedings of the 29th USENIX Security Symposium.August 12–14, 2020978-1-939133-17-5Open access to the Proceedings of the 29th USENIX Security Symposium is sponsored by USENIX.Liveness(cid:1)is(cid:1)Not(cid:1)Enough:(cid:1)Enhancing(cid:1)Fingerprint(cid:1)Authentication
with(cid:1)Behavioral(cid:1)Biometrics(cid:1)to(cid:1)Defeat(cid:1)Puppet(cid:1)Attacks
Cong(cid:1)Wu1,2,(cid:1)Kun(cid:1)He1∗,(cid:1)Jing(cid:1)Chen1,2∗,(cid:1)Ziming(cid:1)Zhao3,(cid:1)Ruiying(cid:1)Du1
{cnacwu,(cid:1)hekun,(cid:1)chenjing,(cid:1)duraying}@whu.edu.cn,(cid:1)PI:EMAIL
1School(cid:1)of(cid:1)Cyber(cid:1)Science(cid:1)and(cid:1)Engineering,(cid:1)Wuhan(cid:1)University,
2Shenzhen(cid:1)Institute(cid:1)of(cid:1)Wuhan(cid:1)University,(cid:1)3Rochester(cid:1)Institute(cid:1)of(cid:1)Technology(cid:1)
Abstract
Fingerprint authentication has gained increasing popularity
on mobile devices in recent years. However, it is vulnera-
ble to presentation attacks, which include that an attacker
spoofs with an artiﬁcial replica. Many liveness detection solu-
tions have been proposed to defeat such presentation attacks;
however, they all fail to defend against a particular type of pre-
sentation attack, namely puppet attack, in which an attacker
places an unwilling victim’s ﬁnger on the ﬁngerprint sensor.
In this paper, we propose FINAUTH, an effective and efﬁcient
software-only solution, to complement ﬁngerprint authenti-
cation by defeating both synthetic spoofs and puppet attacks
using ﬁngertip-touch characteristics. FINAUTH characterizes
intrinsic ﬁngertip-touch behaviors including the acceleration
and the rotation angle of mobile devices when a legitimate
user authenticates. FINAUTH only utilizes common sensors
equipped on mobile devices and does not introduce extra
usability burdens on users. To evaluate the effectiveness of
FINAUTH, we carried out experiments on datasets collected
from 90 subjects after the IRB approval. The results show
that FINAUTH can achieve the average balanced accuracy
of 96.04% with 5 training data points and 99.28% with 100
training data points. Security experiments also demonstrate
that FINAUTH is resilient against possible attacks. In addition,
we report the usability analysis results of FINAUTH, including
user authentication delay and overhead.
1 Introduction
In recent years, ﬁngerprint sensors have been widely inte-
grated into smartphones and tablets. Combined with Fast
IDentity Online (FIDO) [11] and other protocols, a ﬁngerprint
sensor enables applications [71], such as mobile banking, to
locally authenticate end users instead of asking them to type
passwords on a small touchscreen [1, 7]. It is estimated that
920 million global shipments of smartphones (about 64%)
∗The corresponding authors are Kun He and Jing Chen.
were equipped with a ﬁngerprint sensor in 2017, and the num-
ber will increase to 1.25 billion (about 75%) by 2020 [8].
However, ﬁngerprint authentication is vulnerable to presen-
tation attacks [70], where attackers bypass the authentication
using artiﬁcial crafts, e.g. gummy ﬁngers that have ﬁngerprint
impressions, or human-based instruments [39]. To defend
against presentation attacks, hardware-based solutions rely
on additional hardware to acquire biological traits, such as
blood pressure [42], odor [15], oxygen saturation [59], heart-
beat [10], and electrocardiograph [40]. And, software-based
solutions utilize image processing to extract more discrimi-
native physical characteristics, such as the size of ﬁngerprint
ridges [55], density [26], continuity [58], texture [27], and
train the detection model via machine learning methods to
enhance the security against ﬁngerprint spoofs [30, 56].
Unfortunately, existing methods to enhance the security of
ﬁngerprint authentication only focus on liveness detection,
which determines whether the input ﬁngerprint comes from
a live human being. These systems are powerless against
puppet attacks, in which an attacker places an unwilling but
legitimate victim’s ﬁnger on the ﬁngerprint sensor, e.g., the
victim is sleeping or passed out. Puppet attack was highlighted
in ISO/IEC 30107 [39], and of increasing concern because
it is easy to perform [2]. Because the ﬁngerprint and other
biological traits are collected from the real and legitimate
user in puppet attacks, existing liveness detection methods all
fail [4].
Even though combining ﬁngerprint with behavioral biomet-
rics is a promising approach in defeating puppet attacks, exist-
ing behavioral biometrics, including keystroke dynamic [34],
gesture pattern [65], and gait pattern [49], are not suitable
to enhance the security of ﬁngerprint authentication due to
the following reasons: i) these methods place extra usability
burdens on users by requiring additional gestures; ii) these
methods rely on behavioral biometric information collected
in a relatively long time, e.g. more than 1 second [65], while
ﬁngerprint authentication happens in 0.29 seconds on average
based on our experiments (Section 7.4). The key challenge
in designing a practical puppet-attack-resistant ﬁngerprint
USENIX Association
29th USENIX Security Symposium    2219
authentication is to detect impostors promptly without under-
mining the usability of ﬁngerprint authentication.
To overcome this challenge, we utilize the intrinsic
ﬁngertip-touch characteristics to model users’ movements
in legitimate authentications to defend against all presentation
attacks, including the puppet attack. The term of ﬁngertip-
touch in this paper refers to the behavior completed in an
instant when a user gets the mobile device in hand and applies
his/her ﬁnger to ﬁngerprint sensors. We model these move-
ments with acceleration and rotation angle, which can be
retrieved from built-in sensors, such as accelerometer, magne-
tometer, and gyroscope. This is inspired by the fact that users
place their ﬁngers on a ﬁngerprint sensor to perform authen-
tication repeatedly (average 50 times a day [72]) and these
habitual behaviors form stationary and unique muscle mem-
ory [9, 63]. We identify latent time- and frequency-domain
features, and use the convolutional neural network (CNN) to
extract discriminative features from characterized behavior,
i.e., accelerations and rotation angles. We develop an effective
and efﬁcient authentication system named FINAUTH, which
can be easily deployed on mobile devices as auxiliary authen-
tication for ﬁngerprint authentications without introducing
additional hardware or gestures.
Attack Models. We consider the following three types of
attacks: i) Artiﬁcial replica attack: the attacker can forge fake
ﬁngerprints to spoof the ﬁngerprint system [17]; ii) Puppet
attack: the attacker can put an unwilling victim’s ﬁnger on the
ﬁngerprint sensor [39]; iii) Mimicry attack: the attacker knows
how our approach works and attempts to defeat our approach
by mimicking the victim’s movements in authentication [34].
FINAUTH can defeat the ﬁrst two types of attackers. Also, it
is difﬁcult for the third type of attackers to bypass FINAUTH.
The contributions of this paper are summarized as follows:
• We propose FINAUTH to complement ﬁngerprint au-
thentication for defending presentation attacks, includ-
ing the puppet attack. FINAUTH models a user’s intrinsic
ﬁngertip-touch behavior during ﬁngerprint authentica-
tion. FINAUTH uses built-in sensors and does not require
additional hardware.
• To evaluate the performance of FINAUTH, we collected
a dataset of ﬁngertip-touch behavior data from 90 sub-
jects. Our experimental results show that FINAUTH can
achieve a balanced accuracy of 96.04% with only 5 train-
ing data points, while the balanced accuracy can be im-
proved to 99.28% with 100 training data points.
• We demonstrate the security of FINAUTH in defeating
three types of attacks, including artiﬁcial replica attacks,
puppet attacks, and mimicry attacks. Experiment results
show that attack success rates are all below 0.3% under
the authentication model trained using 100 data points.
The rest of this paper is organized as follows. Section 2
presents the overview of FINAUTH. In Section 3, we intro-
(cid:39)(cid:68)(cid:87)(cid:68)(cid:3)(cid:51)(cid:85)(cid:72)(cid:83)(cid:85)(cid:82)(cid:70)(cid:72)(cid:86)(cid:86)(cid:82)(cid:85)
(cid:41)(cid:72)(cid:68)(cid:87)(cid:88)(cid:85)(cid:72)(cid:3)(cid:40)(cid:91)(cid:87)(cid:85)(cid:68)(cid:70)(cid:87)(cid:82)(cid:85)
(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:82)(cid:85)
(cid:40)(cid:81)(cid:85)(cid:82)(cid:79)(cid:79)(cid:80)(cid:72)(cid:81)(cid:87)
(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(cid:54)(cid:75)(cid:82)(cid:85)(cid:87)(cid:16)(cid:87)(cid:76)(cid:80)(cid:72)(cid:3)(cid:41)(cid:82)(cid:88)(cid:85)(cid:76)(cid:72)(cid:85)(cid:3)
(cid:87)(cid:85)(cid:68)(cid:81)(cid:86)(cid:73)(cid:82)(cid:85)(cid:80)
(cid:48)(cid:82)(cid:71)(cid:72)(cid:79)(cid:3)
(cid:87)(cid:85)(cid:68)(cid:76)(cid:81)(cid:76)(cid:81)(cid:74)
(cid:51)(cid:85)(cid:72)(cid:71)(cid:76)(cid:70)(cid:87)(cid:76)(cid:81)(cid:74)
(cid:54)(cid:72)(cid:81)(cid:86)(cid:82)(cid:85)(cid:3)(cid:71)(cid:68)(cid:87)(cid:68)
(cid:58)(cid:68)(cid:89)(cid:72)(cid:79)(cid:72)(cid:87)(cid:3)(cid:71)(cid:72)(cid:81)(cid:82)(cid:76)(cid:86)(cid:76)(cid:81)(cid:74)
(cid:38)(cid:75)(cid:68)(cid:85)(cid:68)(cid:70)(cid:87)(cid:72)(cid:85)(cid:76)(cid:93)(cid:76)(cid:81)(cid:74)(cid:3)(cid:73)(cid:76)(cid:81)(cid:74)(cid:72)(cid:85)(cid:87)(cid:76)(cid:83)(cid:16)
(cid:87)(cid:82)(cid:88)(cid:70)(cid:75)(cid:3)(cid:69)(cid:72)(cid:75)(cid:68)(cid:89)(cid:76)(cid:82)(cid:85)
(cid:36)(cid:70)(cid:70)(cid:72)(cid:79)(cid:72)(cid:85)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)
(cid:53)(cid:82)(cid:87)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(cid:68)(cid:81)(cid:74)(cid:79)(cid:72)
(cid:51)(cid:82)(cid:90)(cid:72)(cid:85)(cid:3)(cid:86)(cid:83)(cid:72)(cid:70)(cid:87)(cid:85)(cid:68)(cid:79)(cid:3)(cid:71)(cid:72)(cid:81)(cid:86)(cid:76)(cid:87)(cid:92)
(cid:38)(cid:49)(cid:49)(cid:16)(cid:69)(cid:68)(cid:86)(cid:72)(cid:71)(cid:3)
(cid:73)(cid:72)(cid:68)(cid:87)(cid:88)(cid:85)(cid:72)(cid:3)(cid:72)(cid:91)(cid:87)(cid:85)(cid:68)(cid:70)(cid:87)(cid:82)(cid:85)
(cid:40)(cid:81)(cid:85)(cid:79)(cid:17)
(cid:56)(cid:86)(cid:72)(cid:85)(cid:86)(cid:10)(cid:3)(cid:83)(cid:85)(cid:82)(cid:73)(cid:76)(cid:79)(cid:72)(cid:3)
(cid:38)(cid:49)(cid:49)(cid:16)(cid:69)(cid:68)(cid:86)(cid:72)(cid:71)(cid:3)(cid:73)(cid:72)(cid:68)(cid:87)(cid:88)(cid:85)(cid:72)(cid:86)
(cid:36)(cid:88)(cid:87)(cid:75)(cid:17)
(cid:36)(cid:88)(cid:87)(cid:75)(cid:72)(cid:81)(cid:87)(cid:76)(cid:70)(cid:68)(cid:87)(cid:76)(cid:82)(cid:81)(cid:3)
(cid:85)(cid:72)(cid:86)(cid:88)(cid:79)(cid:87)
(cid:36)(cid:70)(cid:70)(cid:17)
(cid:53)(cid:72)(cid:77)(cid:17)
Figure 1: The workﬂow of FINAUTH.
duce the data preprocessing and the method to characterize
ﬁngertip-touch behaviors. Sections 4 and 5 illustrate feature
processing and classiﬁcation approaches. We describe details
of experiment design and data collection in Section 6. Sec-
tion 7 reports experimental results of reliability, security, and
usability. We review related work in Section 8, and discuss
our study in Section 9. Section 10 concludes this paper.
2 Overview of FINAUTH
Similar to most authentication schemes, FINAUTH consists
of two phases: enrollment and authentication. In enrollment,
FINAUTH builds a user proﬁle from the ﬁrst successful ﬁnger-
print authentications. After a user proﬁle is built, FINAUTH
enters the authentication phase, in which FINAUTH assists
the ﬁngerprint sensor to authenticate a user.
FINAUTH only employs built-in sensors on smart devices,
including accelerometer, gyroscope, and magnetometer, to
sense phone movements incurred by ﬁngertip-touch behav-
iors. The accelerometer and gyroscope are motion sensors,
which can monitor device movement. The magnetometer is
a position sensor to determine a device’s physical position
in the real frame of reference, which is leveraged for data
calibration to acquire more precise motion information.
As shown in Figure 1, FINAUTH consists of three mod-
ules, including data preprocessor, feature extractor, and au-
thenticator. The data preprocessor runs in the background
to monitor ﬁngerprint authentication events. Upon detecting
ﬁngerprint-inputting, data preprocessor starts to collect ac-
celerometer, gyroscope, and magnetometer data. Then, data
preprocessor uses wavelet denoising method to reduce noise.
FINAUTH characterizes ﬁngertip-touch behaviors using ac-
celerations and rotation angles. For the feature extractor,
FINAUTH generates power spectral density for characterized
ﬁngertip-touch behavior information using short-time Fourier
transform (STFT), and then uses CNN-based feature extractor
to extract features. To proﬁle legitimate users with only suc-
cessful login data points, FINAUTH trains a machine learning
model based on a one-class classiﬁer, which is later used for
authentication.
2220    29th USENIX Security Symposium
USENIX Association
z
Yaw
y
Pitch
Roll
x
Figure 2: Roll, pitch, and yaw.
Rotation angles. A ﬁngertip-touch behavior also causes
a device to rotate slightly. As shown in Figure 2, we use
the classical Euler angle parameterization to represent the
rotations, which are denoted as roll (φ), pitch (θ), and yaw
(ψ). We compute the rotation angles using the sensed data
through the following steps [16, 73]:
the coarse angles (φc,θc,ψc) are computed us-
ing accelerometer and magnetometer data as shown in
Eq. 1, 2, and 3 [75].
1)
φc = arctan(
θc = arctan(
)
x + a2
z
−ay(cid:3)−a2
−ax
(2)
az
sin(φc)sin(θc)mx + cos(φc)my + sin(φc)cos(φc)mz
(1)
)
cos(θc)mx + sin(θc)mz
3 Data Preprocessing
ψc = arctan
.
(3)
In this section, we present the data collection and preprocess-
ing approaches adopted by FINAUTH. We also illustrate how
FINAUTH characterizes ﬁngertip-touch behaviors.
3.1 Data Collection and Denoising
Data collection. Once a user places her ﬁnger on the ﬁnger-
print sensor, FINAUTH starts to collect accelerometer, gyro-
scope, and magnetometer data for a short period t with the
sampling rate fs. For each authentication attempt, FINAUTH
collects n (n = t × fs) samples of sensor data. Each sample is
9-dimensional denoted as (ar
y, mr
z),
where r stands for raw data, a, g, m represent accelerome-
ter, gyroscope, and magnetometer data respectively, and x,
y, and z represent the three axes. We use a row vector, e.g.
aaar = (ar
z), to denote a data sample from a sensor and
use a column vector, e.g. aaar
x = (ar
x,n)T , to represent all
x,1
n samples at one axis (e.g. x-axis).
, ...,ar
x, mr
z, mr
x, gr
x, ar
y, ar
y, gr
z, gr
x,ar
y,ar
Denoising. Because slight vibrations, even sounds, can in-
troduce measurable noise to the built-in sensors [43], it is
important to reduce the noise from the sensed data. We apply
wavelet denoising [79], which is widely used in signal pro-
cessing, on the column vectors of the sensed data (e.g. aaar
x). A
denoised sample is represented as (ax, ay, az, gx, gy, gz, mx,
my, mz).
3.2 Characterizing Fingertip-touch Behaviors
From the denoised data, we use accelerations and rotation
angles to characterize ﬁngertip-touch behaviors.
Accelerations. Accelerations of a device can represent the
dynamic force acting upon a device from a user. We use the
accelerations along the three axes at the device coordinate sys-
y + a2
tem (ax,ay,az) and the net acceleration (a
z )
to model ﬁngertip-touch characteristics. The coordinate sys-
tem of a smartphone is shown as Figure 2.
a2
x + a2
(cid:3) =
(cid:2)
∂(θ)
∂(t) ,
2) to get more accurate angles, we then use the gyroscope
data to get the partial derivatives of φ, θ, ψ with respect to time
∂(ψ)
∂(φ)
∂(t) ). The gyroscope measures the angular velocity,
∂(t) ,
(
and the dynamic angle can be obtained by integrating the
angular velocity, which is given in Eq. 4 [57].
⎡
⎢⎢⎣
sin(φc)tan(θc)
sin(φc)tan(θc)
⎤
⎥⎥⎦ =
−sin(φc)
cos(φc)
⎤
⎦
⎤
⎦
sin(φc)/cos(θc)
cos(φc)/cos(θc)
⎡
⎣1
0
0
∂(φ)
∂(t)
∂(θ)
∂(t)
∂(ψ)
∂(t)