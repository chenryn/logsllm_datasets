### Redundant Ethernet Interface in SRX Series Chassis Cluster

A redundant Ethernet interface in an SRX Series chassis cluster consists of physical interfaces from both the primary and secondary nodes. In this setup, each node contributes one physical interface to form a redundant Ethernet interface. For a Link Aggregation Group (LAG) configuration, more than two physical interfaces can be configured within the redundant Ethernet interface.

### Example: Configure IP Monitoring on SRX Series Firewalls

#### Table of Contents
- Requirements
- Overview
- Configuration
  - CLI Quick Configuration
  - Step-by-Step Procedure
- Verification

#### Requirements
Before you begin, configure the following RPM (Real-Time Performance Monitoring) options:
- `target-address`
- `probe-count`
- `probe-interval`
- `test-interval`
- `thresholds`
- `next-hop`

#### Overview
This example demonstrates how to set up IP monitoring on an SRX Series Firewall.

#### Configuration

##### CLI Quick Configuration
To quickly configure this example, follow these steps:
1. Copy the commands below.
2. Paste them into a text file.
3. Remove any line breaks.
4. Adjust the details to match your network configuration.
5. Copy and paste the commands into the CLI at the `[edit]` hierarchy level.
6. Enter `commit` from configuration mode.

```shell
set services rpm probe Probe-Payment-Server test paysvr target address 1.1.1.10
set services rpm probe Probe-Payment-Server test paysvr probe-count 10
set services rpm probe Probe-Payment-Server test paysvr probe-interval 5
set services rpm probe Probe-Payment-Server test paysvr test-interval 5
set services rpm probe Probe-Payment-Server test paysvr thresholds successive-loss 10
set services rpm probe Probe-Payment-Server test paysvr next-hop 2.2.2.1
set services ip-monitoring policy Payment-Server-Tracking match rpm-probe Probe-Payment-Server
set services ip-monitoring policy Payment-Server-Tracking then preferred-route route 1.1.1.0/24 next-hop 1.1.1.99
```

##### Step-by-Step Procedure
1. **Configure the target address under the RPM probe:**
   ```shell
   [edit]
   user@host# set services rpm probe Probe-Payment-Server test paysvr target address 1.1.1.10
   ```

2. **Configure the probe count under the RPM probe:**
   ```shell
   [edit]
   user@host# set services rpm probe Probe-Payment-Server test paysvr probe-count 10
   ```

3. **Configure the probe interval (in seconds) under the RPM probe:**
   ```shell
   [edit]
   user@host# set services rpm probe Probe-Payment-Server test paysvr probe-interval 5
   ```

4. **Configure the test interval (in seconds) under the RPM probe:**
   ```shell
   [edit]
   user@host# set services rpm probe Probe-Payment-Server test paysvr test-interval 5
   ```

5. **Configure the threshold successive loss count under the RPM probe:**
   ```shell
   [edit]
   user@host# set services rpm probe Probe-Payment-Server test paysvr thresholds successive-loss 10
   ```

6. **Configure the next-hop IP address under the RPM probe:**
   ```shell
   [edit]
   user@host# set services rpm probe Probe-Payment-Server test paysvr next-hop 2.2.2.1
   ```

7. **Configure the IP monitoring policy under services:**
   ```shell
   [edit]
   user@host# set services ip-monitoring policy Payment-Server-Tracking match rpm-probe Probe-Payment-Server
   ```

8. **Configure the IP monitoring preferred route under services (optional):**
   ```shell
   [edit]
   user@host# set services ip-monitoring policy Payment-Server-Tracking then preferred-route route 1.1.1.0/24 preferred-metric 4
   ```

9. **Configure the IP monitoring interface actions (optional):**
   - **Enable:**
     ```shell
     [edit]
     user@host# set services ip-monitoring policy Payment-Server-Tracking then interface ge-0/0/1 enable
     ```
   - **Disable:**
     ```shell
     [edit]
     user@host# set services ip-monitoring policy Payment-Server-Tracking then interface fe-0/0/[4-6] disable
     ```

10. **Configure the no-preempt option (optional):**
    ```shell
    [edit]
    user@host# set services ip-monitoring policy Payment-Server-Tracking no-preempt
    ```

#### Verification

##### Verifying IP Monitoring
**Purpose:** Verify the IP monitoring status of a policy.

**Action:** Enter the following command to verify the configuration:
```shell
show services ip-monitoring status
```

### Example: Configure IP Monitoring on SRX5000 Line

#### Table of Contents
- Requirements
- Overview
- Configuration
  - CLI Quick Configuration
  - Step-by-Step Procedure
- Verification

#### Requirements
- Two SRX5800 Services Gateways with identical hardware configurations.
- One SRX Series Firewall.
- One EX8208 Ethernet Switch.
- Physically connect the two SRX5800 devices (back-to-back for the fabric and control ports) and ensure they are the same models. Configure these two devices in a cluster.

#### Overview
IP address monitoring checks end-to-end reachability of configured IP addresses and allows a redundancy group to automatically fail over when not reachable through the child link of a redundant Ethernet interface (reth). Redundancy groups on both devices in a cluster can be configured to monitor specific IP addresses to determine whether an upstream device in the network is reachable.

When multiple IP addresses are configured on the reth interface in a chassis cluster setup, IP monitoring uses the first IP address from the list of IP addresses configured for that reth interface on the primary node and the first IP address from the list of secondary IP addresses configured for that reth interface on the backup node. The first IP address is the one with the smallest prefix (netmask).

**Note:**
- IP monitoring is not supported on an NP-IOC card.
- IP monitoring does not support MIC online/offline status on SRX Series Firewalls.

#### Configuration

##### CLI Quick Configuration
To quickly configure this example, follow these steps:
1. Copy the commands below.
2. Paste them into a text file.
3. Remove any line breaks.
4. Adjust the details to match your network configuration.
5. Copy and paste the commands into the CLI at the `[edit]` hierarchy level.
6. Enter `commit` from configuration mode.

```shell
set chassis cluster reth-count 1
set chassis cluster redundancy-group 0 node 0 priority 254
set chassis cluster redundancy-group 0 node 1 priority 1
set chassis cluster redundancy-group 1 node 0 priority 200
set chassis cluster redundancy-group 1 node 1 priority 199
set chassis cluster redundancy-group 1 ip-monitoring global-weight 255
set chassis cluster redundancy-group 1 ip-monitoring global-threshold 80
set chassis cluster redundancy-group 1 ip-monitoring retry-interval 3
set chassis cluster redundancy-group 1 ip-monitoring retry-count 10
set chassis cluster redundancy-group 1 ip-monitoring family inet 192.0.0.1 weight 80
set chassis cluster redundancy-group 1 ip-monitoring family inet 192.0.0.1 interface reth0.0 secondary-ip-address 192.0.2.2
set interfaces ge-0/0/1 gigether-options redundant-parent reth0
set interfaces ge-4/0/1 gigether-options redundant-parent reth0
set interfaces reth0 redundant-ether-options redundancy-group 1
set interfaces reth0 unit 0 family inet address 192.0.2.1/24
set routing-options static route 192.0.0.1/32 next-hop 192.0.2.3
```

##### Step-by-Step Procedure
1. **Specify the number of redundant Ethernet interfaces:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster reth-count 1
   ```

2. **Specify a redundancy group's priority for primacy on each node of the cluster:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 0 node 0 priority 254
   user@host# set chassis cluster redundancy-group 0 node 1 priority 1
   user@host# set chassis cluster redundancy-group 1 node 0 priority 200
   user@host# set chassis cluster redundancy-group 1 node 1 priority 199
   ```

3. **Configure the redundant Ethernet interfaces to redundancy-group 1:**
   ```shell
   {primary:node0}[edit]
   user@host# set interfaces reth0 redundant-ether-options redundancy-group 1
   user@host# set interfaces reth0 unit 0 family inet address 192.0.2.1/24
   ```

4. **Assign child interfaces for the redundant Ethernet interfaces from node 0 and node 1:**
   ```shell
   {primary:node0}[edit]
   user@host# set interfaces ge-0/0/1 gigether-options redundant-parent reth0
   user@host# set interfaces ge-4/0/1 gigether-options redundant-parent reth0
   ```

5. **Configure the static route to the IP address that is to be monitored:**
   ```shell
   {primary:node0}[edit]
   user@host# set routing-options static route 192.0.0.1/32 next-hop 192.0.2.3
   ```

6. **Configure IP monitoring under redundancy-group 1 with global weight and global threshold:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring global-weight 255
   user@host# set chassis cluster redundancy-group 1 ip-monitoring global-threshold 80
   ```

7. **Specify the retry interval:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring retry-interval 3
   ```

8. **Specify the retry count:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring retry-count 10
   ```

9. **Assign a weight to the IP address to be monitored, and configure a secondary IP address that will be used to send ICMP packets from the secondary node to track the IP being monitored:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring family inet 192.0.0.1 weight 80
   user@host# set chassis cluster redundancy-group 1 ip-monitoring family inet 192.0.0.1 interface reth0.0 secondary-ip-address 192.0.2.2
   ```

**Note:**
- The redundant Ethernet (reth0) IP address, 192.0.2.1/24, is used to send ICMP packets from node 0 to check the reachability of the monitored IP.
- The secondary IP address, 192.0.2.2, should belong to the same network as the reth0 IP address.
- The secondary IP address is used to send ICMP packets from node 1 to check the reachability of the monitored IP.

#### Verification

##### Verifying Chassis Cluster Status— Before Failover
**Purpose:** Verify the chassis cluster status, failover status, and redundancy group information before failover.

**Action:** From operational mode, enter the following command:
```shell
show chassis cluster status
```

**Example Output:**
```shell
Cluster ID: 11
Node Priority Status Preempt Manual failover
Redundancy group: 0 , Failover count: 0
node0 254 primary no no
node1 1 secondary no no
Redundancy group: 1 , Failover count: 0
node0 200 primary no no
node1 199 secondary no no
```

##### Verifying Chassis Cluster IP Monitoring Status— Before Failover
**Purpose:** Verify the IP status being monitored from both nodes and the failover count for both nodes before failover.

**Action:** From operational mode, enter the following command:
```shell
show chassis cluster ip-monitoring status redundancy-group 1
```

**Example Output:**
```shell
node0:
--------------------------------------------------------------------------
Redundancy group: 1
IP address Status Failure count Reason
192.0.0.1 reachable 0 n/a
node1:
--------------------------------------------------------------------------
Redundancy group: 1
IP address Status Failure count Reason
192.0.0.1 reachable 0 n/a
```

##### Verifying Chassis Cluster Status— After Failover
**Purpose:** Verify the chassis cluster status, failover status, and redundancy group information after failover.

**Action:** From operational mode, enter the following command:
```shell
show chassis cluster status
```

**Example Output:**
```shell
Cluster ID: 11
Node Priority Status Preempt Manual failover
Redundancy group: 0 , Failover count: 0
node0 254 primary no no
node1 1 secondary no no
Redundancy group: 1 , Failover count: 1
node0 0 secondary no no
node1 199 primary no no
```

##### Verifying Chassis Cluster IP Monitoring Status— After Failover
**Purpose:** Verify the IP status being monitored from both nodes and the failover count for both nodes after failover.

**Action:** From operational mode, enter the following command:
```shell
show chassis cluster ip-monitoring status redundancy-group 1
```

**Example Output:**
```shell
node0:
--------------------------------------------------------------------------
Redundancy group: 1
IP address Status Failure count Reason
192.0.0.1 unreachable 1 unknown
node1:
--------------------------------------------------------------------------
Redundancy group: 1
IP address Status Failure count Reason
192.0.0.1 reachable 0 n/a
```

### Related Documentation
- Example: Configuring an Active/Passive Chassis Cluster on SRX5800 Devices
- Example: Configure Chassis Cluster Redundancy Group IP Address Monitoring

#### Table of Contents
- Requirements
- Overview
- Configuration
  - CLI Quick Configuration
  - Step-by-Step Procedure
- Verification

#### Requirements
Before you begin, ensure the following:
- Set the chassis cluster node ID and cluster ID. See: [Example: Setting the Node ID and Cluster ID for Security Devices in a Chassis Cluster](#link)
- Configure the chassis cluster management interface. See: [Example: Configuring the Chassis Cluster Management Interface](#link)
- Configure the chassis cluster fabric. See: [Example: Configuring the Chassis Cluster Fabric Interfaces](#link)

#### Overview
You can configure redundancy groups to monitor upstream resources by pinging specific IP addresses that are reachable through redundant Ethernet interfaces on either node in a cluster. You can also configure global threshold, weight, retry interval, and retry count parameters for a redundancy group. When a monitored IP address becomes unreachable, the weight of that monitored IP address is deducted from the redundancy group IP address monitoring global threshold. When the global threshold reaches 0, the global weight is deducted from the redundancy group threshold. The retry interval determines the ping interval for each IP address monitored by the redundancy group. The pings are sent as soon as the configuration is committed. The retry count sets the number of allowed consecutive ping failures for each IP address monitored by the redundancy group.

In this example, you configure the following settings for redundancy group 1:
- IP address to monitor: 10.1.1.10
- IP address monitoring global-weight: 100
- IP address monitoring global-threshold: 200
- IP address retry-interval: 3 seconds
- IP address retry-count: 10
- Weight: 100
- Redundant Ethernet interface: reth1.0
- Secondary IP address: 10.1.1.101

#### Configuration

##### CLI Quick Configuration
To quickly configure this example, follow these steps:
1. Copy the commands below.
2. Paste them into a text file.
3. Remove any line breaks.
4. Adjust the details to match your network configuration.
5. Copy and paste the commands into the CLI at the `[edit]` hierarchy level.
6. Enter `commit` from configuration mode.

```shell
{primary:node0}[edit]
user@host#
set chassis cluster redundancy-group 1 ip-monitoring global-weight 100
set chassis cluster redundancy-group 1 ip-monitoring global-threshold 200
set chassis cluster redundancy-group 1 ip-monitoring retry-interval 3
set chassis cluster redundancy-group 1 ip-monitoring retry-count 10
set chassis cluster redundancy-group 1 ip-monitoring family inet 10.1.1.10 weight 100 interface reth1.0 secondary-ip-address 10.1.1.101
```

##### Step-by-Step Procedure
1. **Specify a global monitoring weight:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring global-weight 100
   ```

2. **Specify the global monitoring threshold:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring global-threshold 200
   ```

3. **Specify the retry interval:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring retry-interval 3
   ```

4. **Specify the retry count:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring retry-count 10
   ```

5. **Specify the IP address to be monitored, weight, redundant Ethernet interface, and secondary IP address:**
   ```shell
   {primary:node0}[edit]
   user@host# set chassis cluster redundancy-group 1 ip-monitoring family inet 10.1.1.10 weight 100 interface reth1.0 secondary-ip-address 10.1.1.101
   ```

#### Verification
From configuration mode, confirm your configuration by entering the following command:
```shell
show chassis cluster redundancy-group
```