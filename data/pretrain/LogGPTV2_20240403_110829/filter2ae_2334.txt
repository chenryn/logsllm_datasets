## 0x00 前言

在之前的文章中，我们介绍了两种利用COM对象劫持实现的后门技术。这两种方法的具体思路如下：

### 第一种：通过CLR劫持.NET程序
**正常使用CLR的方法**：
1. 设置注册表键值 `HKEY_CURRENT_USER\Software\Classes\CLSID`。
2. 在命令提示符（cmd）下输入以下命令：
   ```shell
   SET COR_ENABLE_PROFILING=1
   SET COR_PROFILER={11111111-1111-1111-1111-111111111111}
   ```
   这样可以劫持当前命令提示符下所有.NET程序的启动。

**后门利用思路**：
通过WMI修改环境变量，使CLR作用于全局，从而劫持所有.NET程序的启动。经实际测试，该方法有效。系统启动后会默认调用.NET程序，加载CLR，从而触发后门。

### 第二种：劫持CAccPropServicesClass和MMDeviceEnumerator
这种方法曾被木马COMpfun使用。具体步骤如下：
1. 设置注册表键值 `HKEY_CURRENT_USER\Software\Classes\CLSID`，以指定实例CAccPropServicesClass和MMDeviceEnumerator对应的DLL。
2. 当IE浏览器进程iexplore.exe启动时，会调用以上两个实例。
3. 通过注册表设置这两个实例对应的DLL，可以劫持IE浏览器的启动，实现后门触发。

需要注意的是，该方法属于被动后门，只有用户启动IE浏览器时才能触发后门。然而，在众多COM对象中，存在能够劫持桌面进程explorer.exe的方法，相当于一个主动后门。例如，劫持MruPidlList。

**注**：该方法曾被多个已知恶意软件使用。

本着研究所有已公开的COM对象后门利用方法并总结应对COM劫持防御方法的原则，本文将介绍另外两种COM劫持的后门利用方法。

之前的两篇文章：
- [Use CLR to maintain persistence](http://www.4hou.com/technology/6863.html)
- [Use COM Object hijacking to maintain persistence——Hijack CAccPropServicesClass and MMDeviceEnumerator](http://www.4hou.com/technology/7010.html)

## 0x01 简介

本文将要介绍以下内容：
- 通过劫持MruPidlList实现的后门思路
- 恶意利用实例
- 总结应对COM劫持的防御方法

## 0x02 通过劫持MruPidlList实现的后门思路

### 注册表位置
- `HKCU\Software\Classes\CLSID`
- 创建项 `{42aedc87-2188-41fd-b9a3-0c966feabec1}`
- 创建子项 `InprocServer32`
- 默认键值为测试DLL的绝对路径，例如：`C:\test\calc.dll`
- 创建键值 `ThreadingModel`，类型为 `REG_SZ`，值为 `Apartment`

### 具体操作
1. 该注册表位置对应COM对象MruPidlList，作用于shell32.dll。
2. shell32.dll是Windows的32位外壳动态链接库文件，用于打开网页和文件、建立文件时的默认文件名设置等功能。
3. explorer.exe会调用shell32.dll，加载COM对象MruPidlList。
4. 系统在启动时默认启动进程explorer.exe。如果劫持了COM对象MruPidlList，就能劫持进程explorer.exe，实现后门随系统开机启动，相当于一个主动后门。
5. 为了便于测试，无需重启系统，只需结束进程explorer.exe再新建进程explorer.exe即可。
6. 新建进程后，加载calc.dll，弹出计算器。

### 测试示例
- **64位系统**：注册表位置不变，但需要换用64位DLL。重启时后门触发，启动calc.exe。
- **Win8系统**：同样适用。

## 0x03 恶意利用实例

### 1. COMRAT
- 可疑与Uroburos和Agent.BTZ同源。
- Uroburos：至今发现的最先进rootkit恶意程序之一。
- Agent.BTZ：一款在2008年用于渗透五角大楼的恶意软件。

### 2. ZeroAccess rootkit
- 感染过大约900多万台计算机。
- 使用另一个COM劫持的位置：
  - 注册表位置：`HKCU\Software\Classes\clsid{fbeb8a05-beee-4442-804e-409d6c4515e9}`
  - 利用方法同上，也能够劫持explorer.exe。

### 3. BBSRAT
- 详细资料请参阅相关文献。

## 0x04 防御

由于COM对象是操作系统的正常功能，禁用COM对象不太现实。以下键值指向的DLL路径应该特别注意：
- `HKCU\Software\Classes\CLSID{42aedc87-2188-41fd-b9a3-0c966feabec1}`
- `HKCU\Software\Classes\CLSID{fbeb8a05-beee-4442-804e-409d6c4515e9}`
- `HKCU\Software\Classes\CLSID{b5f8350b-0548-48b1-a6ee-88bd00b4a5e7}`
- `HKCU\Software\Classes\Wow64\32\Node\CLSID{BCDE0395-E52F-467C-8E3D-C4579291692E}`

### 防御方法
1. 使用应用程序白名单规则，禁止加载第三方DLL。
2. 对注册表 `HKCU\Software\Classes\CLSID` 的写入和修改操作进行记录并调查。

更多关于COM对象劫持的资料可参考相关文献。

## 0x05 小结

本文介绍了两种利用COM劫持实现的后门方法，并结合之前文章中的两种方法，综合分析了COM劫持的防御方法。特别值得注意的是，COM劫持后门能够绕过Autoruns对启动项的检测，实际防御时应关注这一细节。

> 本文为 3gstudent 原创稿件，授权嘶吼独家发布，如若转载，请注明原文地址。