I desire to visualize a mesh + its wireframe. The mesh is open and therefore
some back faces are visible.
Using a solid color for the wireframe gives uneven contrast between the shaded
triangles and the unshaded edges:
http://jsfiddle.net/4nf8y3z1/1/
Using `lights: true` on the LineBasicMaterial seems not to work:
http://jsfiddle.net/4nf8y3z1/2/
    Uncaught TypeError: Cannot set property 'value' of undefined
    three.js:22031 Uncaught TypeError: Cannot set property 'needsUpdate' of undefined
    three.js:22031 Uncaught TypeError: Cannot set property 'needsUpdate' of undefined
As a workaround, I'm using a MeshPhongMaterial and a Mesh for the wireframe
too, using the same geometry, and passing `wireframe: true`. This works great
for the front-faces, but not for the back faces:
http://jsfiddle.net/4nf8y3z1/3/
Therefore, I played a bit with the GLSL shaders to change the illumination
models such that instead of saturating dotNL, it takes the absolute value, so
that back faces are shaded exactly as if they were front-facing:
http://jsfiddle.net/4nf8y3z1/4/
(this last jsfiddle is the same as the previous, except that it includes
three_fix.js instead of three.min.js)
I just wanted to share this with you, and let you decide whether you want to
integrate these changes, possibly with more thought (is changing saturate ->
abs always ok, or could it break other thing? is the additional cost of the
abs() ok? maybe this should be a parameter of the material? etc.).
For now, I just directly modified the build file three.js to get what I
wanted, I don't have much more time for further investigation. :)
Great library by the way, I've started using it two days ago and I love it!