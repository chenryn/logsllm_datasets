的一样，请参考13.2.1.3节。已有账户的当前密码都会被指定的任意一个密码所替换。
auth_info。它表示的是账户密码或认证方法。它是可选的，在已指定账户认证信息的情
请参考13.2.1.1节。
account。它表示的是被授予权限的那个账户。其格式为'user_name'@'host_name
关权限名字的后面。
columms。它表示的是受权限影响的列。多个列之间必须以逗号隔开，并且需要列在
语句，SHUTDOWN权限允许用户关闭服务器。每次可以指定多个权限，其间用逗号隔开。
privileges。它表示的是分配给账户的权限。例如，SELECT权限允许用户执行sELECT
[WITH grant or resource management options];
访问操作系统的密码，或者与实现了单点登录机制的某个外部认证服务器进行交互。
可以进行多少次连接或可以执行多少条语句加以限制。这些选项有助于防止某些账户
给其他用户。WITH子句还可用于指定资源管理选项，从而让你可以对某个账户每小时
连接。
况下（如使用CREATEUSER），不需要使用它。如果使用它，其语法格式与CREATEUSER
的级别，其中包括数据库、表、列（如果指定了columns子句）或存储例程。
用到所有数据库和所有表。全局权限可被当作超级用户权限。权限也可以应用到特定
what。它表示的是权限应用的级别。最高级别是全局级，其中给定的任何权限将会应
括号里。它是
身内部管理的密码类型来进行认证，还允许使用凭据来进行认证。例如，认证插件可以
认证插件应该会受到欢迎，因为在认证方法的实现方面，它们除了允许使用MySQL本
比较少见，因为认证插件是最近（在MySQL5.5.7里）才引入的功能。随着时间的推移，
第13章安全性与访问控制
account[auth_info]
权限分配
privileges[(columns)]
止GRANT语句在未得到认证信息的情况下创建账户。
，可以设置sql_mode系统变量，以启用SQL的NO_AUTO_CREATE_USER 模式。
是可选的，并且只用于设置列相关的权限。每个列列表必须紧跟在每个相
，可以使用GRANT语句，其语法格式如下：
---
## Page 503
SHUTDOWN 权限就不应该被随意分配。
况下，在分配这些权限时需要加倍小心，因为它们会让用户对服务器的运作产生影响。例如，
请参考13.3节，其中会对这些权限与底层权限表之间的关系进行探讨。
与账户有关的内容，（如资源限制或是否需要SSL），而不是更改账户的权限。更多的补充说明
“所有权限”（GRANTOPTION除外），USAGE 表示的是“无权限”。USAGE的主要作用在于更改
另外，还有两个特殊权限说明符：ALL和USAGE。其中，ALL（或ALLPRIVILEGES）表示的是
13.2.2.1
子句。
下面这些权限适用于管理操作，如控制服务器的运作或用户进行权限授予的能力。通常情
一个账户可被授予多种权限。这些权限主要分为两类（之前讲过)：管理权限和对象权限。
FILE
 CREATE USER
接下来的几节将展示如何回答这些问题，并通过示例来说明如何使用GRANT语句的各种
RELOAD
OPROXY
PROCESS
口是否应该对该用户的资源占用量进行限制？
口该用户是否应该被授予管理员权限？
口
此权限让你能够执行某些服务器管理操作。在拥有 RELOAD 权限之后，便可以执行像
该用户能做的任何事情。
此权限使你能够获得另一个用户的权限。换句话说，你可以充当另一个用户的代理，做
权限的情况下，你也可以看到自己的活动情况。
权限，你可以查看所有的活动情况，甚至包括其他用户的活动情况。即使在没有PROCESS
句或者 mysqladmin processlist 命令来查看与当前执行的活动相关的信息。利用这种
作是服务器里运行的进程。有了PROCESS 权限，你便可以使用 SHOW PROCESSLIST语
MySQL服务器是多线程的，能够同时为多个客户端连接提供服务。这些线程可以被当
它可以让你将自己拥有的权限授予其他用户，其中包括GRANTOPTION 权限。
GRANT OPTION
件。更多相关信息请参考12.2.1.1节。
以普通的登录账户身份运行服务器，
root登录用户身份运行服务器，因为root用户可以在文件系统的任何地方创建新文件。
它极其危险，详情请参考13.2.6节。如果你拥有FILE权限，那么在Unix上一定不要以
尽管服务器会有这些预防措施，但是如果没有充足的理由，请不要分配这个权限，因为
■你只能访问那些公开可读的文件，这样的文件不可能被认定为是受保护的。
服务器会采取下面几个预防措施。
此权限可以让你告诉服务器读取或写入服务器主机的文件。为限定此权限的使用范围，
PRIVILEGES.
此权限允许使用的语句包括CREATE USER、DROP USER、RENAME USER和 REVOKE ALL
是否需要使用安全连接？
这些权限应该应用于哪些内容？
这种限制，那么你便可以将mysql数据库里的那些权限表的内容完全替换掉。）
件（如/etc/passwd 或者其他人数据库中的数据库文件）覆盖掉。（例如，如果没有
任何你想要写入的文件都不能事先存在。这样可以防止你强迫服务器把某些重要的文
定义账户的权限
，可以确保它只能在该账户可以访问的目录里创建文
13.2管理MySQL用户账户
483
---
## Page 504
所管理的那些数据进行访问的能力。
484
 CREATE TABLESPACE
 CREATE ROUTINE
ALTER
下面这些权限适用于针对对象
CREATE
口
SUPER
SHUTDOWN
SHOW DATABASES
口
口
此权限使你能够创建存储函数和存储过程。
此权限使你能够创建、
在 CREATE TABLE 语句里。
此权限使你能够创建数据库和表。它不能让你创建表索引，
此权限使你能够更改或删除存储函数和存储过程。
需要某些附加权限。
此权限使你可以使用 ALTER TABLE 语句。不过根据你想对表进行的具体操作，可能还
器为管理连接预留的连接槽，
max_connections设置，这样，你就可以在所有常规插槽都被占用的情况下，访问服务
拥有SUPER 权限，便可以使用mysqladmin debug，它会在连接服务器时覆盖任何
存储在 DES 密钥文件里的密钥为基础的。
DEFINER子句里指定任何账户，利用DES_DECRYPT（）函数执行DES解密，该函数是以
和 STOP SLAVE。在有了 SUPER 权限之后，你还可以在定义视图或存储程序的语句中的
MASTER、PURGE BINARY LOGS、SHOWMASTER STATUS、SHOW SLAVE STATUS、START SLAVE
的情况下，你也始终可以终止自己的进程。
限，你可以终止任何进程，甚至包括那些属于其他用户的进程。即使在没有 SUPER 权限
此权限使你能够使用KILL语句或mysqladminkil1命令来终止服务器进程。利用此权
此权限使你能够关闭服务器，如使用mysqladmin shutdown命令。
此权限启用的其他语句包括SET（用于修改全局系统变量和全局事务的特性）、CHANGE
SHOWDATABASES语句，则可以在启动服务器时带上--skip-showdatabase选项。
TABLES，它们通常都是全局授予的。如果只想让拥有SHOWDATABASES权限的用户执行
意一个全局权限也可以达到这一效果，这些权限包括CREATE TEMPORARY TABLES和LOCK
限，则只能看到你对其拥有权限的那个给定数据库的名称。不过，通过适用于数据库的任
此权限使你能够通过执行 SHOW DATABASES 语句查看到所有数据库的名称。如果没有此权
务器账户。
SLAVE HOSTS 和 SHOW BINLOG EVENTS 语句。该权限只能授予那些连接主服务器的从服
此权限使客户端能够连接主服务器，发出让从服务器进行更新的请求，且能使用 SHOW
服务器的位置和状态。
此权限使你可以使用语句 SHOW MASTER STATUS 和 SHOW SLAVE STATUS 来查询主、
flush-tables和flush-threads。
refresh、flush-hosts、flush-logs、
FLUSH和 RESET 这样的语句。另外还可以执行这样几个mysqladmin命令：reload、
ALTER ROUTINE
REPLICATION SLAVE
REPLICATION CLIENT
第13章安全性与访问控制
删除或更改表空间。
（如数据库、
、表和存储过程）的操作。它们控制着对服务器
flush-privileges、flush-status
除非这些索引一开始便定义
从
---
## Page 505
（columns）子句，以在列级别上分配该权限。后面会有示例演示这种语法。
可以对其进行控制，如表13-2所示。对于表级的说明符，可以在权限名字的后面指定一个
该权限，并且还必须拥有GRANTOPTION权限。
个INSERT 操作，因此它需要DELETE 和INSERT 权限。想要分配某个权限，你必须先自己拥有
ON*
ON**
你可以在不同的级别上进行权限分配，从全局级别到非常特定的级别。通过ON子句说明符
有些操作需要多种权限的组合。例如，REPLACE 操作会在执行 DELETE 之后隐式地执行一
UPDATE
此权限使你能够添加和删除触发器。
 TRIGGER
此权限使你能够使用SHOWCREATEVIEW语句查看视图定义。
SHOWVIEW
SELECT
此权限未使用。
REFERENCES
口
INSERT
此权限使你能够创建或删除表的索引、为键缓存分配索引，以及将索引预加载到键缓存。
INDEX
此权限使你能够执行存储函数和存储过程。
EXECUTE
此权限使你能够对事件调度器的各个事件进行操作。
EVENT
此权限使你能够删除数据库和表。它不允许你删除索引。
DROP
此权限使你能够修改表里的行。
此权限使你能够将行插入表里。
此权限使你能够删除表里的行。
DELETE
此权限使你能够创建视图。
CREATE VIEW
此权限使你能够利用CREATE TEMPORARY TABLE语句创建临时表。
CREATE TEMPORARYTABLES
这样的SELECT语句，不需要此权限，因为它们只是在执行表达式计算，并未涉及表。
此权限使你能够使用SELECT语句检索表里的数据。对于像SELECT NOW（)或SELECT4/2
LOCKTABLES权限设置无关。
务器在语句执行过程中代表你隐式获得的那些锁。这类锁的设置和释放都是自动的，
SELECT 权限的表，不过它能让你设置读锁或写锁，而不只是读锁。此权限不适用于服
此权限使你能够通过显式地执行LOCKTABLES语句来锁定表。它仅适用于你对其拥有
权限说明符
LOCK TABLES
针对默认数据库的数据库级权限；如果无默认数据库，则出错
全局权限：所有数据库以及其中的所有对象
表13-2
权限级别说明符
权限作用级别
13.2管理MySQL用户账户
485
与
---
## Page 506
则不能将针对此数据库的ALL权限授给这位用户。实际上，只要指定需要启用的特定权限即可：
某个用户能够读取和修改 sampab数据库里已有表的内容，但是不能创建新表或删除已有表，
SELECT语句。也就是说，reader是一个“只读”用户。
户，他可以从任何主机进行连接，并可以访问menagerie 数据库里的所有表，但是只能使月
可以对 sampdb 数据库里的所有表执行所有操作。第二组语句会创建一个名为 reader 的受限用
使用ONdb_name.*子句：
清除日志操作的管理脚本（参考12.8.7节）。
个名为flush 的用户，它除了能执行 FLUSH语句外什么事情也不能做：
权限说明符ON＊.*。例如，RELOAD 权限允许使用FLUSH语句，因此下面这几条语句将创建一
一种明智的做法，
例子里创建的账户只能从本地主机进行连接。对超级用户能够连接服务器的主机进行限制，是
括对其他用户进行授权）的超级用户账户，可以执行以下语句：
OPTION 权限。
的真实含义是“有一个例外的所有权限”，该例外就是GRANT和 REVOKE 操作所需要的GRANT
数据库、表或例程权限。对于列权限，必须明确地列出你想要授予的每一种权限。“所有权限”
486
在进行授权时，可以同时列出多个权限，而各权限之间必须使用逗号隔开。例如，想要让
数据库级的权限适用于某个特定的数据库及其所有对象。在这一级进行权限分配的方法是，
全局权限的作用范围最大，因为它们能应用到任何数据库。为创建一个能做任何事情（包
全局级别，它会授予全部权限。在表级别，它只会授予适用于表的权限。ALL只能用于全局
ON account
ONtbl_name
ON db_name.tbl_name
如果存在歧义，想显式地指定权限所要应用的对象类型，可以包含关键字TABLE、FUNCTION
ONdb_name.*
上面第一组语句授予用户bill的权限是：当他从主机mamba.example.com连接服务器时，
CREATE USER'reader'@'%'IDENTIFIED BYdirt';
CREATE USERbill'@'mamba.example.com' IDENTIFIED BY'rock';
这种类型的MySQL 账户对编写某些类型的管理脚本很有用处，
ON＊.*子句代表的意思是“所有数据库及其中的所有对象”。出于安全的考虑，在上面这个
权限说明符ALL（或者ALLPRIVILEGES）会把给定级别上的所有权限授予账户。
USAGE权限只能在全局级指定（即需要与ON*，*一起使用）。
GRANTRELOAD
db_name.routine_name
权限说明符
第13章安全性与访问控制
，因为这样可以防止某组主机进行密码攻击的尝试。
ON*.*To'flush'@'localhost';
代理权限：account为被代理用户
指定数据库里指定例程的权限
表权限：默认数据库里指定表的所有列
表权限：指定表里的所有列
数据库权限：指定数据库里的所有对象
权限作用级别
，比如在文件维护期间执行
续
，例如，
表
局
用
---
## Page 507
13.2.2.3要
行连接，或者想对该账户的连接进行限制，那么可以使用下面这几条语句：
特性。例如，想要