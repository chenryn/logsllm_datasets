# Google OpenTitan，硬件安全的泰坦之箭？
##### 译文声明
本文是翻译文章，文章原作者 tencent，文章来源：security.tencent.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 导语：
从Windows
98的CIH病毒，到2011年的BMW木马，再到2018年的APT-28攻击，底层安全威胁此起彼伏。企业信息基础设施是否值得信任，已成为服务提供商需要回应的关键问题。今年11月Google
OpenTitan项目正式发布，平台可信启动问题成为业内关注焦点。本文将解读Titan安全芯片的基本原理，并针对现阶段服务器硬件安全防护体系的建设思路和大家做一下简单探讨。
## 1.不断升级的攻防博弈
对于服务器平台的底层攻击，大多集中在对固件（Firmware）内容的非法修改上。早期的Legacy
BIOS木马，以破坏机器的可用性为主要目标，如CIH病毒，可以直接清空BIOS导致无法正常开机。其他的固件木马，通过感染个人电脑的主/卷引导目录（MBR/VBR），实现持久化驻留的目的，使终端用户叫苦不迭。
随着技术演变，Legacy BIOS逐步被UEFI（服务器启动的新规范）替代，硬件木马也被更多地应用到高级入侵与渗透之中（如APT-28
LoJax木马）。与之前被黑产利用，存在明显异常行为的特征不同，固件入侵威胁变得更隐蔽、更顽固，例如针对特定企业的供应链攻击、针对特定机器的恶意女仆攻击（基于物理接触，如通过U盘植入木马）、利用启动管理命令实现启动路径修改攻击（如efibootmgr指令）等——这些恶意向量不再局限于OS层的渗透范畴，因此可以有效地绕过常规监控策略。
硬件安全风险带来了信任的危机，尤其是大型企业，影响更加广泛。在企业内部，数据中心基础设施是否安全可靠？在企业外部，是否可以让云平台得到所服务用户的信任？
妥善解决上述问题的一种策略是，充分利用现有的安全防护技术，如IDS、IPS、WAF，布下天罗地网——可是这些方式即便发现异常，也很难准确地定位风险来源，无法彻底排除隐患；另一种方式是通过可信执行环境（TEE），如Intel
SGX技术，以内存加密的方式构建应用程序独享的可信执行区域，将一部分机密的数据和代码隔离起来做机密计算。但这种方式实际上并没有缓解机器被攻陷的风险，偏安一隅的思路能够暂时保障数据安全，但无法保护平台本身不被入侵。
## 2.防御方法与业内标杆
那保障平台安全的有效方案是什么样的呢？一种可行策略是，构建无法被篡改的信任根（RoT，Root of
Trust），对于平台启动过程中所需执行的固件对象，在其执行前，依次进行合法性验证与信任链条的扩展。在所有固件对象完成校验后，平台执行操作系统的启动，这样一来，系统最终进入可被信任的Runtime状态。
这个方法听上去简单直接，但操作起来又是另一番情景——图1给出了NIST标准下服务器架构所包含的组成对象，在操作系统层之下，存在十几种硬件固件对象，如：
  1. UEFI BIOS：服务器系统启动固件，其固件镜像存储于SPI总线下的一块闪存片（Boot FW Flash）中；
  2. BMC：带外管理系统，有单独固件，提供不依赖操作系统的服务器管理能力；
  3. Boot Loader: 操作系统OS引导程序，其主要功能是用来载入OS内核；
  4. NIC：外设网卡及其固件；
  5. GPU：显卡及其固件；
图1 服务器系统组成元素
理想情况当然是对涉及到的全体固件对象进行合法性校验，但这不现实，臃肿的开机检测过程会极大地影响机器启动的效率，复杂的厂商供应链组成也让这一目标的达成变得困难；同时，鉴于入侵某些固件的难度很高，攻击的概率很小，这样的防护方式也会显得多此一举——在考虑攻击者的利用难度、风险水平等多个维度后，底层安全防护最主要的固件对象，一般聚焦在BIOS，BMC和Boot
Loader上。
不管是现有的硬件防护方案（如TPM 2.0技术, 后文会进一步说明），还是业内普遍认可的
“下一代硬件安全防护方案”，基本上是围绕上述三大固件对象进行安全方案的设计。主流的下一代硬件安全防护方案包括Google Titan[1]、Intel
PFR[2]、Microsoft Cerberus[3]和我国沈昌祥院士提出的TPCM[4]。区别于现有TPM
2.0方案所提供的被动式校验固件的能力，这些新的设计都满足主动校验服务器关键固件的能力，但由于涉及到主板设计和硬件结构的定制修改，除了Google
Titan方案在谷歌云内部被使用之外，其余方案还未能广泛应用到实际案例中。作为下一代硬件防护方案的标杆，下面将为大家解读Google
Titan安全芯片的基本原理。
## 3.Google Titan概述
Titan芯片在Google Cloud Next
2017大会上首次被提出，它主要被用来保障谷歌云基础设施的启动安全。在功能层面，Titan具有以下三大核心特征：
（1）自主可控的物理可信根：
与传统的TPM 2.0外设芯片不同的是，Titan芯片中包含了Google的物理可信根BOOT
ROM，可以作为平台启动信任的锚点，这样一来，谷歌服务器启动的信任起点便掌握在了自己的手中。
由于引入了BOOT ROM，Titan也包含了一个自我修复功能，可以保证在出现Titan芯片漏洞时，对BOOT ROM进行升级，重新建立信任关系。
如图2所示，Titan在硬件结构上包括了一块32位的RISC-V处理器，具有密码和密钥管理功能的外设部分（与TPM
2.0的设计几乎一致），以及蓝色部分中，作为硬件可信根而存在的BOOT ROM。
图2 Titan组成元素一览
（2）首指令完整性校验：
通过Titan芯片，可以实现对于BIOS早期运行代码的合法性验证，通过校验后再执行相关的代码。
图3 Titan芯片主板连接方式示意图
实现上述首指令完整性校验的关键是Titan芯片在主板上的特殊连接方式，如图3所示，Titan芯片串接了SPI总线，如守门员一样介于主板南桥（PCH）或带外管理系统（BMC）与BIOS固件的闪存芯片之间。这样一来，Titan芯片驱动下的服务器启动过程可描述为：
1.当CPU上电开机/重启时，开机/重启信号由PCH或BMC传递至Boot FW Flash途中，由Titan芯片接收并拦截。
2.Titan芯片执行其只读内存（BOOT
ROM）下的代码，并启动一个自检程序，检测Titan芯片自身没有被篡改过。如自检通过，Titan芯片中的代码将正常运行。
3.Titan芯片通过签名校验的方式，验证BIOS固件的合法性。在校验通过后，释放原始的开机/重启信号。从而BIOS固件得以被正常加载并执行启动操作。
4.经过检验的BIOS固件会配置服务器并且加载Boot Loader，Boot Loader会检查和加载操作系统OS。
（3）持续监控SPI总线上的异常操作。
如图4所示，在完成上述服务器启动过程后，Titan芯片会实时监控SPI总线上的数据流，任何试图修改Flash固件的非法操作都会被过滤掉，以持续保障BIOS固件的安全。
图4 Titan在SPI总线上的监控逻辑
除了上述主要特征以外，Titan的支撑系统也引入了一系列防篡改机制，来抵御包括侧信道攻击在内的安全威胁，相应的防护措施包括攻击检测（故障、激光、热、电压）、保险丝、密钥存储、时钟和内存完整性检查等。同时，Titan也使用OTP保险丝跟踪服务器从制造到生产整个生命周期的过程。
挑战与局限。
需要指出的是，从目前公开的材料来看[1]，Titan方案还没有解决如何进行BMC和Boot
Loader的安全防护。对于BIOS的防护，实现首指令完整性这一点也依赖SPI总线的硬件结构调整和支持，对于一些企业用户来说，改造成本依旧比较高。此外，在SPI总线上进行监控和流量管理，也不免会产生对正常业务的误伤，如何保障监控逻辑的安全性，也需要谨慎和严密的设计。
## 4.OpenTitan：群雄逐鹿下的厂商生态
国外厂商在下一代平台硬件安全方案上，呈现出百家争鸣的态势，除了Google的Titan[1]，还包括前文提及到的Intel PFR[2]，Microsoft
Cerberus[3]，以及国内倡导的TPCM解决方案[4]等。