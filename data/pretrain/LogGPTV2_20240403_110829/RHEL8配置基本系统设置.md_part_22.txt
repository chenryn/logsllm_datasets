:::
:::
::: section
::: titlepage
# []{#editing-user-groups-using-the-command-line_configuring-basic-system-settings.html#changing-the-primary-group-of-a-user_editing-user-groups-using-the-command-line}更改用户的主组群 {.title}
:::
您可以将现有用户的主要组更改为新组。
::: orderedlist
**先决条件：**
1.  `root`{.literal} 访问权限
2.  新组必须存在
:::
::: itemizedlist
**流程**
-   更改用户的主组群：
    ``` screen
    # usermod -g group-name user-name
    ```
    使用新主 [*组的名称替换*]{.emphasis} group [*-name，并使用用户名替换
    user-name*]{.emphasis}。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    更改用户的主组时，命令还会将用户主目录中所有文件的组所有权自动更改为新的主组。您必须手动修复用户主目录外文件的组所有权。
    :::
    ::: example
    []{#editing-user-groups-using-the-command-line_configuring-basic-system-settings.html#idm140142117033360}
    **例 22.3. 更改用户主要组群示例：**
    ::: example-contents
    如果 user `arah`{.literal} 属于主 groups
    `arah1`{.literal}，且您想要更改用户的主组群 to
    `sarah2`{.literal}，请使用：
    ``` screen
    # usermod -g sarah2 sarah
    ```
    :::
    :::
:::
::: itemizedlist
**验证步骤**
-   验证您是否更改了用户的主组群：
    ``` screen
    $ groups sarah
    ```
    输出显示：
    ``` screen
    sarah : sarah2
    ```
:::
:::
::: section
::: titlepage
# []{#editing-user-groups-using-the-command-line_configuring-basic-system-settings.html#adding-a-user-to-a-supplementary-group-from-the-command-line_editing-user-groups-using-the-command-line}使用命令行将用户添加到补充组中 {.title}
:::
您可以将用户添加到补充组中，以管理权限或启用对特定文件或设备的访问权限。
::: itemizedlist
**先决条件**
-   `root`{.literal} 访问权限
:::
::: itemizedlist
**流程**
-   要在用户的附加组中添加一个组，请使用：
    ``` screen
    # usermod --append -G group-name username
    ```
    使用组群名称替换 [*group- name*]{.emphasis}，并将
    [*group-name*]{.emphasis} 替换为组的名称。
    ::: example
    []{#editing-user-groups-using-the-command-line_configuring-basic-system-settings.html#idm140142018410064}
    **例 22.4. 将用户添加到补充组中**
    ::: example-contents
    要将用户 `sysadmin`{.literal} 添加到
    `system-administrators`{.literal} 组中，请使用：
    ``` screen
    # usermod --append -G system-administrators sysadmin
    ```
    :::
    :::
:::
::: itemizedlist
**验证步骤**
-   要验证新的组被添加到用户 `sysadmin`{.literal} 的附加组中，请使用：
    ``` screen
    # groups sysadmin
    ```
    输出显示：
    ``` screen
    sysadmin : sysadmin system-administrators
    ```
:::
:::
::: section
::: titlepage
# []{#editing-user-groups-using-the-command-line_configuring-basic-system-settings.html#removing-a-user-from-a-supplementary-group_editing-user-groups-using-the-command-line}从补充组中删除用户 {.title}
:::
您可以从补充组中删除现有用户，以限制其权限或文件和设备的访问权限。
::: itemizedlist
**先决条件**
-   `root`{.literal} 访问权限
:::
::: itemizedlist
**流程**
-   从补充组中删除用户：
    ``` screen
    # gpasswd -d user-name group-name
    ```
    [*使用用户名替换 user-name*]{.emphasis}，并使用补充组的名称替换
    [*group-name*]{.emphasis}。
    ::: example
    []{#editing-user-groups-using-the-command-line_configuring-basic-system-settings.html#idm140142014590352}
    **例 22.5. 从补充组中删除用户**
    ::: example-contents
    如果 sarah 用户有一个主要 groups `arah2`{.literal}，并且属于次要组
    `wheel`{.literal} `和开发人员`{.literal}，并且您希望从组
    `开发人员`{.literal} 中删除该用户，请使用：
    ``` screen
    # gpasswd -d sarah developers
    ```
    :::
    :::
:::
::: itemizedlist
**验证步骤**
-   验证您是否从次要组 developers 中删除了用户 sarah：
    ``` screen
    $ groups sarah
    ```
    输出显示：
    ``` screen
    sarah : sarah2 wheel
    ```
:::
:::
::: section
::: titlepage
# []{#editing-user-groups-using-the-command-line_configuring-basic-system-settings.html#changing-the-supplementary-groups-of-the-user_editing-user-groups-using-the-command-line}更改用户的所有附加组群 {.title}
:::
您可以覆盖您希望用户成为其成员的补充组的列表。
::: itemizedlist
**先决条件**
-   `root`{.literal} 访问权限
-   补充组必须存在
:::
::: itemizedlist
**流程**
-   覆盖用户的辅组列表：
    ``` screen
    # usermod -G group-names username
    ```
    使用一个或多个补充组的名称替换
    [*group-names*]{.emphasis}。要将用户一次性添加到多个补充组中，请使用逗号分隔组名称，并且没有插入空格。例如：
    `wheel,developer`{.literal}。
    使用用户名称替换 [*user-name*]{.emphasis}。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    如果用户当前不是您未指定的组的成员，该命令会从组中删除该用户。
    :::
    ::: example
    []{#editing-user-groups-using-the-command-line_configuring-basic-system-settings.html#idm140142016957392}
    **例 22.6. 更改用户的附加组群列表**
    ::: example-contents
    如果 user `arah`{.literal} 有一个主要组
    `arah2`{.literal}，并且属于补充组
    `wheel`{.literal}，并且您希望用户属于三个补充组
    `developer`{.literal}、sys`admin`{.literal} 和
    `security`{.literal}，请使用：
    ``` screen
    # usermod -G wheel,developer,sysadmin,security sarah
    ```
    :::
    :::
:::
::: itemizedlist
**验证步骤**
-   验证您设置的补充组列表是否正确：
    ``` screen
    # groups sarah
    ```
    输出显示：
    ``` screen
    sarah : sarah2 wheel developer sysadmin security
    ```
:::
:::
:::
[]{#managing-sudo-access_configuring-basic-system-settings.html}
::: chapter
::: titlepage
# []{#managing-sudo-access_configuring-basic-system-settings.html#managing-sudo-access_configuring-basic-system-settings}第 23 章 管理 sudo 访问 {.title}
:::
系统管理员可以授予 `sudo`{.literal} 访问权限，以允许非 root
用户执行通常为 `root`{.literal} 用户保留的管理命令。因此，非 root
用户可以在不登录 `root`{.literal} 用户帐户的情况下执行此类命令。
::: section
::: titlepage
# []{#managing-sudo-access_configuring-basic-system-settings.html#con_user-authorizations-in-sudoers_managing-sudo-access}sudoers 中的用户授权 {.title}
:::
`/etc/sudoers`{.literal} 文件指定哪些用户可以使用 `sudo`{.literal}
命令运行哪些命令。规则可应用到单独的用户和用户组。您还可以使用别名简化为主机组、命令甚至用户定义规则。默认别名在
`/etc/sudoers`{.literal} 文件的第一部分中定义。
当用户尝试使用 `sudo`{.literal} 特权来运行 `/etc/sudoers`{.literal}
文件中不允许的命令时，系统会记录一条消息，其中含有
`用户名 : user not in sudoers`{.literal} to the journal 日志。
默认的 `/etc/sudoers`{.literal}
文件提供授权信息和示例。您可以通过从行开头删除 `#`{.literal}
注释字符激活具体示例规则。与用户相关的授权部分带有以下标记：
``` screen
## Next comes the main part: which users can run what software on
## which machines  (the sudoers file can be shared between multiple
## systems).
```
您可以使用以下格式创建新的 `sudoers 授权`{.literal} 并修改现有的授权：
``` screen
username hostname=path/to/command
```
其中：
::: itemizedlist
-   [*username*]{.emphasis} 是用户或组的名称，如 `user1 或`{.literal}
    `%group1`{.literal}。
-   [*hostname*]{.emphasis} 是应用该规则的主机的名称。
-   [*path/to/command*]{.emphasis}
    是命令的完整绝对路径。您还可以通过在命令路径后面添加这些选项，将用户限制为仅使用特定选项和参数执行命令。如果没有指定任何选项，用户可以将
    命令用于所有选项。
:::
您可以将任何这些变量替换为
`ALL`{.literal}，以将规则应用到所有用户、主机或命令。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
使用超过许可规则（如
`ALL ALL=(ALL)ALL）`{.literal}，所有用户都可以以所有用户的身份在所有主机上运行所有命令。这可能导致安全风险。
:::
您可以使用！` 运算符`{.literal} 指定错误的参数。例如，使用
`!root`{.literal} 指定除 `root`{.literal}
用户之外的所有用户。请注意，使用允许列表来允许特定用户、组和命令比使用
blocklist
来禁止特定用户、组和命令更安全。通过使用允许列表，您还可以阻止新的未授权用户或组。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
避免对命令使用负规则，因为用户可以通过使用 `alias`{.literal}
命令重命名命令来克服此类规则。
:::
系统会从头到尾读取 `/etc/sudoers`{.literal}
文件。因此，如果文件中包含一个用户的多个条目，则按顺序应用条目。如果值冲突，系统将使用最后一个匹配项，即使它不是最为具体的匹配项。
向 `sudoers`{.literal} 添加新规则的首选方法是在
`/etc/sudoers.d/`{.literal} 目录中创建新文件，而不是将规则直接输入到
`/etc/sudoers`{.literal}
文件。这是因为此目录的内容在系统更新期间保留。此外，修复单独文件中的任何错误要比在
`/etc/sudoers`{.literal} 文件中错误更为简单。当系统在
`/etc/sudoers 文件中达到以下行时读取 /etc/sudoers`{.literal}.d``{=html}
目录中的文件：
``` screen
#includedir /etc/sudoers.d
```
请注意，此行开头的数字符号 `#`{.literal}
是语法的一部分，并不意味着行是注释。该目录中文件的名称不得包含句点
`。`{.literal} 且不得以波形符 `~`{.literal} 结尾。
:::
::: section
::: titlepage
# []{#managing-sudo-access_configuring-basic-system-settings.html#granting-sudo-access-to-a-user_managing-sudo-access}为用户授予 sudo 访问权限 {.title}
:::
系统管理员可以授予 `sudo`{.literal} 访问权限来允许非 root
用户执行管理命令。`sudo`{.literal} 命令在不使用 `root`{.literal}
用户密码的情况下为用户提供管理访问。
当用户需要执行管理命令时，您可以在使用 `sudo`{.literal}
命令前执行该命令。然后会像 `root`{.literal} 用户一样执行该命令。
请注意以下限制：
::: itemizedlist
-   只有 `/etc/sudoers`{.literal} 配置文件中列出的用户才能使用
    `sudo`{.literal} 命令。
-   该命令在用户的 shell 中执行，而不是在 `root`{.literal} shell