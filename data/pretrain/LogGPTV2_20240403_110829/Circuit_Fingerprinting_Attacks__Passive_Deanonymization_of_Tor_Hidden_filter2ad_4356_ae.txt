### Observations and Analysis

We observed a rapid decrease in performance as the number of websites in the training set increased. In general, the classifiers performed better in identifying client connections compared to hidden service servers. The True Positive Rate (TPR) was comparable for both, but the False Positive Rate (FPR) was significantly lower for classifying clients. This discrepancy is likely due, at least in part, to our use of a single real hidden service to emulate multiple hidden services, which fails to capture the variations in hardware, software, locations, and other characteristics that would be present in actual hidden service servers.

### Future Possible Defenses

Our attacks exploit specific properties of the circuits used for hidden service activities. For the first attack (Section 5.1), we identified three key features: (1) Duration of Activity (DoA), (2) number of outgoing cells, and (3) number of incoming cells. To defend against this, Tor should address these three features:

1. **Circuit Lifespan Standardization**: All circuits should have similar lifetimes. Client IP and hidden service IP connections should last either a very short or very long time, which is highly identifiable. We recommend padding circuits with less than 400 seconds of activity to have a lifetime of 400-800 seconds. Additionally, hidden services should re-establish their connections to their IPs every 400-800 seconds to avoid any circuits from lasting too long.
   
2. **Cell Traffic Normalization**: Hidden service and client IPs should have a larger and varying number of outgoing and incoming cells. Currently, IPs are only used to establish connections, limiting the number of exchanged cells. We suggest sending and receiving a random number of PADDING cells, such that the median value of incoming and outgoing cells is similar to that of a general circuit. Our evaluation on the same dataset used in Section 6.1 showed that the TPR for the IPs and RPs fell below 15% when these features were normalized. Once the features look the same, the classifiers cannot perform much better than random guessing.

To prevent the second attack (Section 5.2), we recommend that every circuit be established in pairs with the same sequence for the first few cells. If an extend fails for either circuit (which should be a rare occurrence), the entire process should be restarted to ensure no information is leaked. Tor can leverage its preemptive circuits, which are already built for performance reasons, to implement this defense efficiently.

### Experimental Results

We conducted experiments to evaluate the performance of different classifiers in both closed and open world settings. Figures 14 and 15 show the TPR and FPR for client and server classification, respectively.

In all settings, the k-Nearest Neighbors (k-NN) classifier performed the best for classifying hidden services. This is because k-NN considers multiple features simultaneously, whereas tree-based classifiers evaluate each feature sequentially.

- **Closed World Setting**: The accuracy of k-NN was 97% for classifying clients and 94.7% for servers.
- **Open World Setting**: The TPR of k-NN decreased slightly as the number of trained non-monitored websites increased. For clients, the TPR ranged from 90% to 88%, and for servers, it ranged from 96% to 88%. The FPR steadily decreased with more non-monitored websites: for clients, it varied from 40% to 2.9% depending on the number of trained pages. Similarly, the FPR for classifying servers also decreased.

### Related Work

Several attacks challenging the security of Tor have been proposed, most of which are based on side-channel leaks such as congestion, throughput, and latency. Other attacks exploit Tor's bandwidth-weighted router selection algorithm or its router reliability and availability. These attacks are typically active, requiring periodic measurements, induced congestion, routing influence, or circuit termination.

Our attacks, like various Website Fingerprinting (WF) attacks, are passive. Other passive attacks against Tor include Autonomous Systems (AS) observers, where the attacker is an AS between the client and entry guard, and between the exit and destination.

Additionally, several attacks aim to deanonymize hidden services. Øverlier and Syverson [32] and Biryukov et al. [6] presented attacks where the adversary deploys a router in the network and uses a client to repeatedly connect to the target hidden service, eventually allowing the attacker to deanonymize the hidden service.

### Conclusion

Tor’s hidden services allow users to provide content and run servers while maintaining anonymity. In this paper, we present the first passive attacks on hidden services, enabling an entry guard to detect hidden service activity from the client or server side. The weaker attacker, who does not have perfect circuit visibility, can exploit the distinctive features of the IP and RP circuit communication and lifetime patterns to classify monitored circuits into five different classes. For the stronger attacker with perfect circuit visibility, a novel pairwise circuit correlation attack can identify distinctive cell sequences that accurately indicate IP and RP circuits.

We evaluated our attacks using network traces obtained by running our own clients and hidden service on the live Tor network. Our results show that these attacks can be carried out easily and yield very high TPR and very low FPR. We also studied the applicability of WF attacks on hidden services and proposed defenses to mitigate our traffic analysis attacks.

### Code and Data Availability

Our data and scripts are available at http://people.csail.mit.edu/kwonal/hswf.tar.gz.

### Acknowledgements

The authors thank Tao Wang and the reviewers for their useful feedback and comments. This research was supported in part by the QCRI-CSAIL partnership.