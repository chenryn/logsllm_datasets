Root Store. Error code 21 means that only one certiﬁcate was sent
1Certiﬁcate pinning has been suggested as useful here. The idea
is to imitate the trust model of SSH where a host key is viewed as
correct on ﬁrst encounter and its key remembered by the client for
veriﬁcation upon revisit.
Figure 7: Domain names appearing in subjects of certiﬁcates most
frequently used on many hosts.
(correct chain, correct host name). This is a rather poor ﬁnding,
considering how popular some of these hosters are.
www.snakeoil.dom is a standard certiﬁcate for the Apache Web
server, possibly appearing here because of Apache servers that run
a default conﬁguration (but probably are not intended to be ac-
cessed via HTTPs). We continued to investigate host names for
those certiﬁcates that occurred at least a 1,000 times, and found that
these seemed to be primarily Web hosting companies. We explore
the issues of domain names in the subject ﬁelds and correctness of
certiﬁcates in the sections below.
Validity of Certiﬁcation Chains. There are several factors
that determine whether a browser should accept a certiﬁcate as cor-
rect or not. The ﬁrst one is whether the certiﬁcation chain presented
by a server is correct, i.e., the chain is complete and leads to a Root
Certiﬁcate in the browser’s Root Store, no certiﬁcate in the chain
has expired and all signatures in the chain verify, etc.
There are a number of causes for a broken chain. We thus inves-
tigated the correctness of chains with respect to the Firefox Root
Store from the ofﬁcial developer repositories at the time of the scan
or monitoring run. Note that a missing Root Certiﬁcate only means
that the certiﬁcate is not valid in a default Firefox, but the Root
Store of a client can be reconﬁgured to contain the required Root
Certiﬁcate. Moreover, some CAs have not yet been included in
Root Stores, although a number of people consider them trustwor-
thy. A prominent example is CACert.org, a community-driven non-
proﬁt CA.
433(i.e., no chain) and there is no Root Certiﬁcate in the Root Store
that would match the issuer of the end-host certiﬁcate. Error code
32 is interesting: it means that one or more certiﬁcates in the chain
are marked as not to be used for issuing other certiﬁcates.
Some certiﬁcates found in all scans were found to have broken
or nonsensical validity periods. Since there are less than 10 oc-
currences in any scan, we did not investigate them further. We also
found cases where signatures are wrong and cannot be veriﬁed. Ra-
tios were between 0.01% and 0.1%.
Figure 8 reveals that trust chains were valid in about 60% of
cases when considering the active scans and over all certiﬁcates.
Expired certiﬁcates (about 18%) and self-signed certiﬁcates (about
25%) are by far the most frequent errors found. The number of
valid certiﬁcates does not change signiﬁcantly when considering
distinct certiﬁcates only. This means that issuing and deployment
of certiﬁcates with valid trust chains are in line, which is a positive
ﬁnding. Between November 2009 and April 2011, however, these
numbers also remained constant. The same can be said for expired
certiﬁcates: their number also remained around 18%. Note that the
entries on the Alexa list had greatly differed by then; more than
550,000 hosts in April 2011 had not been on our expanded list in
November 2009. We can thus say that even while the popularity
of Web sites may change (and new sites likely enter the stage), the
picture of this PKI with respect to valid certiﬁcates remains the
same. This is a rather poor ﬁnding, as no improvement seems to
occur.
Error code 20 increased in frequency: the number rose to around
8% in April 2011. We do not know a reason. Error codes 19 and
32 occurred very rarely. For our scans from Germany, we can thus
conclude expired certiﬁcates and self-signed certiﬁcates are the ma-
jor cause for chain veriﬁcation failures. We compared our ﬁndings
to the vantage points in Santa Barbara and Shanghai (Fig. 8; only
Shanghai data shown) and found the perspective from these vantage
points is almost the same.
Figure 8 also shows the ﬁndings for MON1 and MON2. Here,
the situation is somewhat different. Although the number of valid
chains was similar in MON1 (57.94%), it was much higher in
MON2 (83.07%). We can also see that the number of errors due
to expired certiﬁcates or with Error 20 has decreased. This does
not mirror the ﬁndings from our scans. We did not ﬁnd an immedi-
ate explanation for this phenomenon and will monitor it further.
We consequently also compared our results with the full data set
of the EFF, which represents the global view for the IPv4 space. We
found differences. First of all, the ratio of self-signed certiﬁcates
is much higher in the EFF data set. This is not surprising, given
that certiﬁcation costs effort and often money – operators on not so
high-ranking sites may opt for self-issued certiﬁcates, or just use
the default certiﬁcates of common Web servers like Apache.
On the whole, however, the fact that about 40% of certiﬁcates
in the top 1 million sites show broken chains is discouraging, even
when considering that self-signed certiﬁcates are so common.
Correct Host Name in Certiﬁcate. The second major factor
to determine whether a certiﬁcate should be accepted is the correct
identiﬁcation of the certiﬁed entity. The application itself needs to
check if the subject of the certiﬁcate matches the entity it has con-
tacted. The common practice on the WWW (but also for IMAPs
and POPs) is that the client veriﬁes that the subject certiﬁed in the
certiﬁcate matches the DNS name of the server. In X.509 termi-
nology and syntax, the subject ﬁeld must be a Distinguished Name
(DN). A Common Name (CN) is part of the DN. Very commonly,
a DNS name is stored in the CN. Instead of writing the DNS name
into the subject ﬁeld, an alternative is to put it in the certiﬁcate’s
Subject Alternative Name (SAN) ﬁeld. This can actually be viewed
as desirable, as this is the intended purpose for this ﬁeld [1]. It is,
however, the less common practice. We checked if the CN attribute
in the certiﬁcate subject matched the server’s host name. Then,
we checked if the SAN matched. We call certiﬁcates with correct
chains where CN or SAN match ‘absolutely valid’. Where the CN
or SAN ﬁelds were wild-carded, we interpreted them according to
RFC 2818 [26], i.e., *.domain.com matches a.domain.com but
not a.b.domain.com. One exception was to count a single * as
not matching, in accordance with Firefox’s behavior. Note that we
can conduct this investigation only for data sets from our scans, as
neither data from monitoring nor the EFF data contain an indication
of the requested host name.
In TUM-Apr2011, we found that the CNs in only 119,648 of
the 829,707 certiﬁcates matched the host name. When we allowed
Subject Alternative Names, too, this number rose to 174,620. How-
ever, when we restrict our search to certiﬁcates that also had correct
chains, the numbers are 101,238 (correct host name in CN) and
149,900 (correct host name in CN or in SAN). This corresponds
to just 18.07% of all certiﬁcates. We checked whether the pic-
ture changed for the data set of April 2011 where we had SNI en-
abled. This was not the case. The number of certiﬁcates with both
valid chains and correct host names remained at 149,451 (18.09%).
We deduce from this that client-side lack of SNI support is not
the problem. We also determined the numbers for Tue-Nov2009,
Tue-Apr2010 and TUM-Sep2010: they are 14.88%, 15.88% and
16.88%, respectively. This indicates a weak but positive trend.
Our ﬁndings mean that only up to 18% of certiﬁcates can be
counted as absolutely valid according to the rules implemented in
popular browsers – in a scan of the top 1 million Web sites. More
than 80% of the issued certiﬁcates lead to a browser warning – we
are not surprised that so many people are used to security warnings.
These are major shortcomings that need to be addressed. However,
we also have to add a word of caution here: while a poor ﬁnding, it
is likely that many of these hosts are actually not intended to be ac-
cessed via HTTPs and thus neglect this critical conﬁguration. Nor-
mal users may therefore never encounter the misconﬁgured site,
even in the case of very popular sites. Still, omitting support for
TLS/SSL does not increase security, either.
Unusual Host Names in the Common Name. We encoun-
tered a few unusual host names. In 60,201 cases (TUM-Apr2011-
SNI, i.e., SNI enabled), we found the string ‘plesk’ as a CN. Our
hypothesis was that this is a standard certiﬁcate used by the Paral-
lels/Plesk virtualization and Web hosting environment. We tested
this by rescanning the hosts, hashing the HTTP reply (HTML) and
creating a histogram of this that counted how often which answer
occurred. Just 8 kinds of answers were responsible alone for 15,000
variants of a Plesk Panel site, stating “site/domain/host not conﬁg-
ured” or the like. As there are standard passwords for the Plesk
Panel sites readily available via simple Google search, we ﬁnd it
problematic that such entry points cannot be authenticated in so
many cases. A further favorite of ours are certiﬁcates issued for
localhost, which we found 38,784 times. Fortunately, neither
certiﬁcates with ‘plesk’ nor localhost were ever found to have
valid chains.
However, by far the most answers occurred on relatively few
hosts (2–10). We sampled some of these and found that HTTP
redirections to normal HTTP sites were common after the TLS/SSL
session establishment.
Host Names in Self-Signed Certiﬁcates. Server operators
may opt to issue a certiﬁcate to themselves and act as their own CA.
434EV Status
Yes
No
Tue-Nov2009
1.40%
98.60%
TUM-Sep2010
2.10%
97.90%
TUM-Apr2011
2.50%
97.50%
Shanghai
2.56%
97.44%
Santa Barbara Moscow
2.51%
˙Izmir
2.50%
97.51% 97.49% 97.50%
2.49%
Table 3: Deployment of EV certiﬁcates over time and from Germany; and the same for April 2011 from Shanghai, Santa Barbara, Moscow
and ˙Izmir.
Hence, no external, responsible Certiﬁcation Authority exists. This
saves the costs for certiﬁcation, but requires users to accept the self-
signed certiﬁcate and trust it. The value of self-signed certiﬁcates
is debatable: some view them as useful in a Trust-On-First-Use
security model, as successfully used in the popular SSH protocol;
others view them as contrary to the goals of X.509. Our own view
is that self-signed certiﬁcates can be useful for personally operated
servers, or where it is safe to assume that a Man-in-the-middle at-
tack in the ﬁrst connection attempt is unlikely. In the data set with
enabled SNI (TUM-Apr2011-SNI) we checked if the self-signed
certiﬁcates have a subject that matches the host name. The result
is sobering: 97.78% of CNs do not match. Subject Alternatives
Names matched in 0.5% of cases, but were rarely used (1.65% of
certiﬁcates). Interestingly, the top 3 account for more than 50%
of the different CNs. ‘plesk’ occurred in 27.30% of certiﬁcates,
localhost or localhost.localdomain in 25.39%. The remain-
ing CNs in the top 10 were usually in the range of 0.5–3%. The
bulk of CNs is made up of entries that do not occur more than 1–4
times. Our conclusion is that self-signed certiﬁcates are not main-
tained with respect to host name. This does not make them useless
in the above mentioned security model, but it certainly makes them
puzzling when encountered by the average user.
Extended Validation (EV). Technically, a user should not
only verify that the domain in the CN or SAN matches, but that
other information in the certiﬁcate correctly identiﬁes the entity on
an organizational level, e.g., that it is really the bank he intended
to connect to – and not a similar-looking phishing domain. This
is the purpose of so-called Extended Validation certiﬁcates, which
have been introduced several years ago. EV certiﬁcates are meant
to be issued under the relatively extensive regulations described by
the CA/Browser-Forum [27]. An object identiﬁer in the certiﬁcate
identiﬁes it as EV. A browser is meant to signal EV status to the
user (e.g., via a green highlight in the address bar).
We analyzed how often EV certiﬁcates are used; Table 3 shows
the results. One can see that there is a light trend towards more EV
certiﬁcates. We inspected the top 10,000 hosts in TUM-Apr2011
more closely and found that the ratio of EV certiﬁcates was 8.93%.
For the top 1,000 hosts it was 8.11%, and for the top 100, 8.33%.
Surprisingly, for the top 50 it was 5.17%. We found two explana-
tions for this. First, Google sites dominate the top 50 (almost half
of all hosts), and Google does not use EV. Second, a number of
well-known Web sites (e.g., Amazon and eBay) use different hosts
to let users log in. These are not in the top 50, but use EV.
Our conclusion here is that EV certiﬁcates are not very wide-
spread, even though they can be very useful for sensitive domains
(one may count Google’s services among those, but also any bank).
Since they are commonly more expensive than standard certiﬁcates,
which are just issued against a domain name, this is somewhat to
be expected. Even then, this is a sad ﬁnding.
Length of Certiﬁcation Chain. As explained in Section 2,
probabilities for negligence and errors can be assumed to increase
with a high number of intermediate certiﬁcates if these are not sub-
ject to the same control as within the Root CA, e.g., if they are used
Figure 9: Chain characteristics for two scans, one monitoring run,
and the EFF data. If no intermediate certiﬁcates are sent, the chain
length is 0.
by Intermediate CAs outside the direct control of the Root CA. Fur-
thermore, servers sometimes sent more certiﬁcates than needed to
build a valid chain. This can potentially reduce performance.
We thus computed the length of certiﬁcation chains by only
counting those certiﬁcates in the chain that were neither the end-
host certiﬁcate, nor Root Certiﬁcates, nor self-signed intermediate
certiﬁcates2. The latter cannot possibly contribute to an otherwise
valid certiﬁcation chain.
Figure 9 shows the result for two scans and one monitoring run
from Germany, and a comparison with the EFF data set. We see
that the vast majority of certiﬁcates is veriﬁed through a chain of
length ≤ 3. For the EFF data, which was obtained in the ﬁrst half
of 2010, this cutoff is even at a length of ≤ 2. At the other end,
more than half of the certiﬁcates have a chain length of 0. An ex-
planation for this can be the relatively large fraction of self-signed
certiﬁcates. When comparing Tue-Nov2009 to TUM-Apr2011, we
see that the share of chains of length 0 has greatly decreased while
the share of chains with length ≥ 1 has signiﬁcantly increased by
about 20%. The graph, as well as the increased average chain
length (0.52 for Tue-Nov2009 vs. 0.67 for TUM-Apr2011) point
to a weak tendency in the past 1.5 years to employ more intermedi-
ate certiﬁcates, not less. Overall, however, certiﬁcation chains have
remained remarkably short. Considering the trade-off of too many
intermediate certiﬁcates vs. the beneﬁts of using them, this seems
more a positive development than a negative one.
The maximum length of chains found in scans is 16-17; in the
EFF data, it is 18; whereas in the monitoring data, it is only 11 and
12, respectively. The scans thus have detected hosts with very un-
usual chain lengths (outliers), whereas most certiﬁcate chains are
actually relatively short. In summary, we note that the chain length