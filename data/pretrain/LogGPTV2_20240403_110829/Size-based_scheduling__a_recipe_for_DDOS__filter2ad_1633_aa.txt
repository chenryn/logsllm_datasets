title:Size-based scheduling: a recipe for DDOS?
author:Abdul Serwadda and
Vir V. Phoha and
Idris A. Rai
Size-Based Scheduling: A Recipe for DDOS?
Louisiana Tech University
Abdul Serwadda
Ruston, LA 71272
Louisiana, USA
PI:EMAIL
Louisiana Tech University
Vir V. Phoha
Ruston, LA 71272
Louisiana, USA
PI:EMAIL
Makerere University
Idris A. Rai
P.O Box 7062
Kampala, Uganda
PI:EMAIL
ABSTRACT
Internet traﬃc measurements have shown that the majority
of the Internet’s ﬂows are short, while a small percentage
of the largest ﬂows are responsible for most of the bytes.
To exploit this property for performance improvement in
routers and Web servers, several studies have proposed size-
based scheduling to oﬀer preferential treatment to the short-
est ﬂows. In this work, we present analytical and simulation
results which conﬁrm that size-based scheduling will ease
the task of launching DDOS attacks on the Internet.
Categories and Subject Descriptors
C.2.0 [Computer-Communication Networks]: General-
Security and protection
General Terms
Performance, Security
Keywords
Denial of Service, LAS, SRPT, TCP
1.
INTRODUCTION
The term Size-based Scheduling (SBS) refers to scheduling
policies which make use of job size information when mak-
ing scheduling decisions. In the Internet, SBS policies have
been proposed to oﬀer preferential treatment to short ﬂows
while ensuring that long ﬂows do not starve. Prominent ex-
amples include proposals for the use of Shortest Remaining
Processing Time (SRPT) in Web servers [3, 4] and the use
of Least Attained Service (LAS) in routers [7] and wireless
LANs [9]. Other hybrid size-aware policies have also been
proposed [2]
Unfortunately, owing to a priority mechanism which segre-
gates between connections by virtue of their size/age, SBS
has the potential to facilitate a previously unknown type
of DDOS against Internet systems.
In this new type of
DDOS, an attacker aiming to overrun an SBS target (server
or router) would bombard it with packets from very short
ﬂows, exploiting the priority mechanism and subsequently
incurring a much lower cost than would be the case under
Copyright is held by the author/owner(s).
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
ACM 978-1-4503-0244-9/10/10.
the legacy First-In-First-Out (FIFO) or Processor sharing
(PS) schedulers in routers and servers respectively.1
By taking advantage of the priority mechanism, the at-
tacker’s packets always go to the head of the queue, avoiding
the baggage of having to overﬂow the router/server buﬀers.
This is the reason as to why the attacker can use a lower
attack-traﬃc rate (a.k.a lower cost) than would be required
against a FIFO or PS scheduler. Moreover, this exploitation
of the priority mechanism (and reduced cost of attack) also
applies to existing attacks such as SYN ﬂoods which use a
single packet to open each connection.
As revealed by a recent study [1], a large number of ad-
dress blocks still permit IP address spooﬁng, owing mostly
to inconsistent application of ingress and egress ﬁltering.
This serves important evidence that attacks in which an at-
tacker may seek to cycle through a range of IP addresses,
with short sequences of packets being disguised as distinct
ﬂows can still be realistically launched today.
We illustrate SBS’s inherent vulnerability to DDOS at-
tacks. Although our research focuses on LAS in compari-
son to FIFO scheduling in routers, we believe that all SBS
schemes that favor short ﬂows should not deviate much from
the behavior of LAS under the kinds of attacks studied.
Over the past decade, several papers have conﬁrmed that
SBS oﬀers answers to a number of performance deﬁciencies
in Internet systems. However, to the best of our knowledge,
this is the ﬁrst paper to provide an insight into a major se-
curity vulnerability of SBS in the Internet. The contribution
of this work is summarized below:
- First, we expose a new mechanism of DDOS attack that
may arise out of the implementation of SBS in the Internet.
- Second, we show that to completely shut down a FIFO
router in a Mice DDOS attack, the minimum required
sending rate of attack traﬃc must at least exceed that re-
quired to shut down a LAS router
- Third, we show that even for attack traﬃc rates which
are not high enough to completely shut down FIFO/LAS
routers, the amount of service degradation seen at LAS
is always greater or equal to that seen under FIFO. This,
and the second contribution underline why it may be much
easier for attackers to compromise the quality of Internet
communications if LAS/SRPT ever get deployed.
1Because it uses very short ﬂows, we use the terms Mice
DDOS attack and Mice attack to refer to this attack in the
subsequent sections of the of the paper
7292. OPERATION OF FIFO AND LAS
Under FIFO, packets are processed in the order in which
they arrive at the router queue. When a packet arrives at a
full queue, it is dropped.2
Under LAS, the next packet to be served belongs to the
ﬂow that has received the least amount of service. When the
buﬀer is full, the packet dropped belongs to the ﬂow that
has received the most service. Thus if a connection uses only
a few packets (such as in attacks using extensive spooﬁng),
these packets will always be treated as priority packets.
2.1 Difference in Attack-trafﬁc Rates
Assume an attacker who perpetually cycles through a range
of IP addresses to disguise each packet as a new ﬂow3. For
a Mice attack launched against a LAS router in this way,
each of these packets will be seen as the ﬁrst packet of a
connection, and will be treated with highest priority. If the
LAS router operates at a line speed of C bits/s (a.k.a service
rate of the router), it is trivial to note that an attack-traﬃc
rate of C bits/s suﬃces to completely stop legitimate ﬂows
from accessing the service of the router. The ﬁrst packet of
each legitimate ﬂow would also be processed, however, this
is a negligible amount of service as compared to the size of a
ﬂow. Below, we show that the attack-traﬃc rate required to
completely deny access to a FIFO router exceeds the Cbits/s
required against LAS.
Theorem 1. For a FIFO router operating at a line rate
of C bits/s, and traversed by TCP ﬂows of mean round trip
time RT T , the minimum required attack-traﬃc rate R to
completely shut down the router in an amount of time T1 is
+ C, where α ≈0 is a fraction representing
R = C.RT T (1−α)
the proportion of legitimate UDP traﬃc that still ﬁnds a free
slot in the buﬀer despite the attack.
T1
Proof. Assume that the router is traversed by only UDP
and TCP traﬃc. This is reasonable considering that other
protocols continue to occupy less than 1% of the Internet’s
total transport protocol mix [6]. By the bandwidth-delay
product, the router buﬀer size is CRT T . Suppose the ﬁrst
attack packets arrive at the router queue at t=0, and the
router buﬀer is completely overrun by attack-traﬃc at t=T1.
During the interval [0, T1), the proportion of the buﬀer oc-
cupied by legitimate packets may vary due to arrival of new
ﬂows and (or) exit of completed and timed-out ﬂows. Let
β ∈ (0, 1) represent the average buﬀer proportion occupied
by legitimate packets in the interval [0, T1). At t = 0, the
buﬀer space to be ﬁlled by attack-traﬃc may hence be es-
timated as C.RT T − β.C.RT T = C.RT T (1 − β). To ﬁll
this proportion of the buﬀer, an attacker must send traﬃc
at a rate R > Cbits/s for a time t1, such that t1(R − C) =
C.RT T (1 − β). The buﬀer is ﬁlled up after a duration ap-
proximately given by
C.RT T (1 − β)
R − C
t1 =
(1)
At t = t1, legitimate TCP ﬂows encountering a full buﬀer
begin to time out with high probability since they start to
lose packets. As some TCP connections timeout, the buﬀer
2We focus on FIFO/Drop-tail since the attacks we discuss
utilize extensive spooﬁng and are highly distributed and thus
cant be throttled by Random Early Detection (RED)
3In practice several packets may comprise a ﬂow
space to be ﬁlled by the attacker increases, since the router
is still sending out packets at the line rate, Cbits/s. As
attack-traﬃc occupies the space vacated by the timed out
TCP connections, the buﬀer again gets ﬁlled up and more
TCP connections timeout with high probability on encoun-
tering a full buﬀer. Eventually, all TCP connections will
time out while legitimate UDP ﬂows continue to occupy the
proportion α < β.
On average, during the interval between t=t1 and the in-
stant when the last legitimate TCP connection is forced to
time out, the attacker needs to ﬁll the proportion (β − α)
left behind by the departing TCP ﬂows. Following the ap-
proach used in Equation 1, this proportion is ﬁlled in time
t2, where
C.RT T (β − α)
R − C
t2 =
(2)
The total time (t1 + t2), required to overrun the buﬀer may
, where α ≈0 for t ≥ T1,
be estimated as: T1 = C.RT T (1−α)
since legitimate UDP ﬂows lose a lot of packets at the full
buﬀer. The attack-traﬃc rate required to initiate full DOS
is thus always greater than C, and is approximated as:
R−C
R =
C.RT T (1 − α)
T1
+ C
(3)
After sustaining the rate R bits/s for a time T1 seconds, a
reduced rate of C bits/s is enough to keep the buﬀer full.
These results conﬁrm that a minimum attack-traﬃc rate
of C bits/s can completely deny access to a LAS router but
cannot achieve the same feat against a FIFO router. As
shown by Equation 3, the diﬀerence between R and C is
only signiﬁcant if T1 is small. As an example of a case for
which R(cid:29) C, we discuss the Shrew attack [8, 5], a router
DDOS attack that strictly demands a value of T1 ≤ RT T .
Figure 1: Mechanism of the Shrew attack
2.1.1 Case Study 1: The Shrew Attack
Figure 1 illustrates a Shrew attack with period T (typically≈
1s). In each attack burst, attack traﬃc overﬂows the router
buﬀer, forcing TCP senders to timeout. In between bursts
the attacker sends no traﬃc. AB represents the peak sending
rate which the attacker must realise almost instantaneously.
Traﬃc is sent at this peak rate for 20 - 200ms [8], an inter-
val which approximates mean Internet RTTs . This interval
includes both the time to ﬁll the buﬀer (equal to T1 in Equa-
tion 3), and the duration of buﬀer occupancy (t).
As shown in Equation 3, to ﬁll the buﬀer in time T1 ≤
RT T , the value of R (at FIFO router) must be a large mul-
tiple of C, since α ≈ 0. Comparing to the case of LAS, a
rate of Cbits/s using the Mice mechanism is enough to carry
out the Shrew attack at a router operating at Cbits/s. At
this rate, all legitimate packets get queued (and/or) dropped
730at the router buﬀer. If attack-traﬃc arrives at Cbits/s for
about an RT T , legitimate ﬂows have their packets trapped
for about an RT T , the approximate burst length required
for the Shrew attack. These trapped packets will then trig-
ger most TCP end-systems to timeout, since they are under
the illusion that packets have been dropped.