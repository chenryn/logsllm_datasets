Explanation:
only 1771 contains an even number of digits.
Constraints:
●1= 0; i-- {
temp = arr[i]
arr[i] = j
j = max(j, temp)
return arr
1300.SumofMutatedArrayClosesttoTarget
题目
jo wns aua angea on jenba aq o Aeue uaaig au ul anen ueu jael saaui aua lie aueup am
the array gets as close as possible (in absolute dlifference) to target
 In case of a tie, return the minimum such integer.
Notice that the answer is not neccesarilly a number from arr
Example 1:
Input: arr = [4,9,3], target = 10
output: 3
Explanation: when using 3 arr converts to [3, 3, 3] which sums 9 and that′s
the optimal answer.
Example 2:
Input: arr = [2,3,5], target = 10
Output:5
Example 3:
Input: arr = [60864,25176,27249,21296,20204], target = 56803
Output: 11361
Constraints:
●1 >1
if calculateSum(arr,mid) *maxLevel {
*maxLevel, *sum = level, root.Val
} else if level == *maxLevel{
*sum += root.val
dfsDeepestLeavesSum(root.Left, level+l, maxLevel, sum)
dfsDeepestLeavesSum(root.Right, level+1l, maxLevel, sum)
1304.FindNUniqueIntegersSumuptoZero
题目
Given an integer n, return any array containing n unique integers such that they add up to 0.
Example 1:
Input: n = 5
Output: [-7,-1,1,3,4]
Explanation: These arrays also are accepted [-5,-1,1,2,3] , [-3,-1,2,-2,4] 
Example 2:
Input: n = 3
output: [-1,0,1]
Example 3:
Input: n = 1
output: [0]
Constraints:
1 index 4 -> index 1 -> index 3
index 5 -> index 6 -> index 4 -> index 1 -> index 3
---
## Page 1107
Example 2:
Input: arr = [4,2,3,0,3,1,2], start = 0
Output: true
Explanation:
One possible way to reach at index 3 with value 0 is:
index 0 -> index 4 -> index 1 -> index 3
Example 3:
Input: arr = [3,0,2,1,2], start = 2
Output: false
Explanation: There is no way to reach at index 1 with value 0.
Constraints
●1  []ue => 0  ●
●0 = 0 && start = 0 ). For each such pair, there are freq elements with value va1 concatenated in a sublist.
Concatenate all the sublists from left to right to generate the decompressed list.
Return the decompressed list
Example 1:
Input: nums = [1,2,3,4]
Output: [2,4,4,4]
Explanation: The first pair [1,2] means we have freq = 1 and val = 2 so we
generate the array [2].
The second pair [3,4] means we have freq = 3 and val = 4 so we generate
[4,4,4] .
At the end the concatenation [2] + [4,4,4] is [2,4,4,4].
Example 2:
Input: nums = [1,1,2,3]
output: [1,3,3]
Constraints
●2=0），每一对都表示解压后子列表中有freq个值为val的元素，你需要从左到
右连接所有子列表以生成解压后的列表。请你返回解压后的列表。
---
## Page 1109
解题思路
给定一个带编码长度的数组，要求解压这个数组
·简单题。按照题目要求，下标从0开始，奇数位下标为前一个下标对应元素重复次数，那么就把
这个元素append几次。最终输出解压后的数组即可。
代码
package leetcode
func decompressRLElist(nums []int) []int {
res := []int{}
for i：= 0;i <1en(nums);1 += 2 {
for j := 0; j < nums[i]; j++ {
res = append(res, nums[i+1])
return res
1317.ConvertlntegertotheSumofTwoNo-Zero
Integers
题目
dlecimal representation.
Return a list of two integers [A, B] where:
●A and B are No-Zero integers.
●A+B=n
It's guarateed that there is at least one valid solution. If there are many valid solutions you can
return any of them.
Example 1:
Input: n = 2
output: [1,1]
Explanation: A = 1, B = 1. A + B = n and both A and B don′t contain any 0 in
their decimal representation.
Example 2:
---
## Page 1110
Input: n = 11
output: [2,9]
Example 3:
Input: n = 10000
output: [1,9999]
Example 4: