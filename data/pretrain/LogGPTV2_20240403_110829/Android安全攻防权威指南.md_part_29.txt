110第5章理解Android的攻击面
目标因特网部件扩展（MIME）是这层上的一个著名标准；
口第7层—应用层是高层次协议客户端和服务器应用程序之间直接产生与消费数据的层
次。这一层上的标准协议包括域名系统协议（DNS）、动态主机配置协议（DHCP）、文件
传输协议（FTP）、简单网络管理协议（SNMP）、超文本传输协议（HTTP）和简单邮件传
输协议（SMTP）等。
第7层：应用层
第6层：表示层
第5层：会话层
第4层：传输层
第3层：网络县
第2层：数据链路层
第1层：物理层
图5-2OSI的 7层模型
现代网络通信已经在7层OSI模型上进行了进一步扩展，举例来说，Web服务经常利用HTTP
协议层之上的一层或多层来实现。在Android系统中，缓冲协议（protobufs）用来传输结构化数
据并实现远程过程调用（RPC）协议。尽管protobufs看起来是提供了表示层的功能，但这个协
议的通信经常使用HTTP传输。这些层之间的界限已经变得模。
本节中提及的协议在现代因特网连接的设备中扮演着重要角色。Android设备支持并使用这
里提及的所有协议，并以统一的方式或格式进行了实现。后面几小节将讨论这些协议及其对应的
攻击面是如何起作用的。
3.网络配置与防御
今天的因特网生态圈已经和1980年代时期完全不同了，在那个时代，因特网绝大部分是开
放的。主机之间可以互相自由地连接，用户被普遍认为是可信的。20世纪80年代末和90年代初，
网络管理员们开始注意到一些恶意用户人侵到计算机系统中。人们意识到不是所有用户都可以信
任，于是防火墙开始出现并被部署在网络边界上进行防御。从那时起，保护单一主机免受网络攻
击的主机防火墙也偶尔被使用。
时间快进到1999年，网络地址转换（NAT）技术被发明，使得使用私有地址的网络内部主
机可以和开放因特网上的主机进行通信，2013年，可分配的IPv4地址块减少到历史薪低，NAT
技术帮助缓解了这一压力。出于这些原因，NAT在家庭网络与手机网络中都非常普遍。这种技术
的工作原理是在网络层修改地址，简单而言，NAT路由器作为在城域网（WAN）和本地局域网
（LAN）主机之间的一个透明代理，从城域网连接到局域网中一台主机需要在NAT路由器上进行
特殊的配置，如果没有进行这类配置，NAT路由器就相当于一种防火墙。结果是，NAT可以让
---
## Page 127
5.3远程攻击面111
完全屏蔽某些攻击面。
尽管移动通信网络和Wi-Fi网络都是通过无线访问的，但是两者在如何提供、配置与控制上
有着区别。对给定的运营商网络进行访问是被严密控制的，需要从运营商那里购买一张SIM（用
户身份识别模块）卡。运营商通常会计算数据流量，并以MB或GB为单位计费。他们也会通过
配置接人点名称（APN）的方式，来限制移动设备在网络中的行为，例如可以通过APN禁用客
户间的连接。正如前面提到的，运营商也会尽可能地使用NAT技术。考虑到所有这些方面，运
营商网络比家庭网络更加限制了所暴露的攻击面。但是要注意的是，运营商网络的情况各有不同，
一些安全意识薄弱的运营商可能会将客户的移动设备直接暴露给因特网。
4.相邻关系
在网络中，相邻指的是节点之间的关系。本章会涉及两种相邻关系，一种是局域网中设备的
相邻关系，我们称之为网络邻居或逻辑相邻。这个概念与物理相邻是不同的，物理相邻指的是攻
击者的物理位置与他的攻击目标在某一特定范围内。面攻击者可以通过直接访问局域网、攻陷局
城网中其他主机，或者通过虚拟专有网（VPN）进行访问等多种方式，来和目标主机建立起网络
邻居关系。另外一种相邻关系是通过路由器节点获得的特权位置，攻击者可以通过攻击网络路由
机制或者攻陷目标节点的路由器或代理，来建立起这种相邻关系。在这种情况下，攻击者被视为
在路径上（on-path），也就是说，攻击者在目标节点和与之通信的远程节点之间的网络路径上。
获得这种更受信任的位置，可以让许多种原来并不可行的攻击变得可行。我们将在后面使用这些
概念，来明确地标识特定攻击面是否可达，如果攻击面可达，是在什么样的范围中可达。
·网络邻居
与目标节点成为同一局域网上的邻居节点，攻击者可以获得一个发起攻击的特权优势位置。一
般的局域网配置使得网络相当开放，和早期的因特网比较类似。首先，局域网上的计算机不会在任
何NAT设备或边界防火境后面。此外，节点之间通常也没有路由器。数据包不再使用IP协议进行
路由，而是基于媒介访问控制（MAC）地址进行广播或分发，而主机间的通信经常只做很少甚至
根本没有做协议验证。一些局域网配置甚至允许任意节点监听网络上的所有通信。这类攻击面本身
就已经拥有了很强的能力，面将它和一些技巧相结合，可以让一些更加强力的攻击变得可能。
极少进行协议验证的事实，使得各种类型的藏骗攻击都可以成功实施。在一次默骗攻击中，
攻击者会对他发出数据包的源地址进行伪造，企图伪装成其他主机，达到利用信任关系或者隐藏
攻击真实源的目的。这些类型的攻击在公共因特网上是难以实施的，因为上面存在着防范欺骗攻
击数据包的过滤规则，以及内在的延迟间题。这种类型的绝大多数攻击在网络层及之上的层运行，
但是这并不是严格的要求。一类称为ARP欺骗或ARP缓存中毒的歌骗攻击是在数据链路层上实
施的。如果成功，这类攻击可以让攻击者欺骗一个目标节点，使之认为攻击节点就是网关路由器。
这可以有效地让攻击者从网络邻居的身份转变为路径上设备的角色。而从这个关键点可能进行的
攻击将在下一小节中详细讨论。对于ARP欺骗攻击最有效的防御方法是使用静态ARP映射表，
但这在未root的移动设备上是不可行的。对DNS的攻击更加容易，因为网络邻居节点拥有很低
的延迟，这意味着攻击者可以比因特网上的主机更快进行响应。对DHCP的欺骗攻击对于获取目
标系统更多的控制权也是相当有效的。
---
## Page 128
112第5章理解Android的攻击面
·路径上攻击
路径上攻击，通常被称为中间人（MiM）攻击，是非常具有破坏力的一种攻击方式。在达
到网络上这样一个受信任的位置后，攻击者可以选择对流经它的任意网络流量进行阻断、修改或
者转发。攻击者也可以对流量进行监听，从面发现认证凭据，如口令或者浏览器Cookie，甚至可
以对加密通信进行降级、剥离或者其他类型的透明监控。在这样一个受信任的关键点上，攻击者
可能同时影响一大群用户，或者选择性地针对某一个用户。从这个网络路径上经过的任何人都可
能受到攻击。
获得这种类型位置的一种方法是，利用目标与其所钟爱服务器之间已建立的信任关系。许多
软件客户端都是对服务器充分信任的。尽管攻击者可以建立一些并不在路径上的恶意服务器来利
用这类信任关系，但是他们必须说服目标来访问这些服务器。在路径上意味着攻击者可以假冒成
目标用户连接的任意服务器。例如，考虑目标用户会在每天上午通过他的Android手机访问
http://www.cnn.com，那么路径上的攻击者可以假冒成CNN站点，分发漏润利用代码，并展示原
始的CNN站点内容，这样目标用户就不会意识到有任何异常。我们将在5.2.5节中更加详细地讨
论Android的客户端攻击面。
值得庆幸的是，对于大多数攻击者面言，想要在因特网上达到这种特权角色还是相当困难的。
成为一个路径上攻击者的方法包括攻陷路由器或DNS服务器、使用合法的监听手段，在网络邻
居条件下操纵主机，以及修改全局的因特网路由表等。一种在实际中相对简单的方法是通过注册
商劫持域名。另一种相对容易的方法只对Wi-Fi和移动通信等无线网络有效。在这些网络上，可
能利用物理邻近关系来操纵无线电通信，或是搭建一个供目标连接的假冒无线访问点或伪基站。
现在我们已经介绍完基本的网络概念以及它们是如何与攻击和攻击者关联的，是时候深入到
Android攻击面了。理解这些概念，对于分析一个给定攻击面是否可达是非常关键的。
5.3.2网络协议栈
安全漏洞研究中的“圣杯”是这样一种远程攻击，它不需要与目标交互就可以实施，面且能
够获取系统的完全访问权限。在这种攻击场景中，攻击者通常只需能在因特网上与目标主机进行
通信即可。而这类攻击可以简单到发送单个数据包，也可能需要一长串复杂的协议谈判过程。由
于防火墙和NAT技术的广泛采用，这一攻击面变得更难以可达，因此在这些底层代码中的安全
漏洞往往只暴露给网络邻居攻击者。
在Android系统上，符合这一描述的主要攻击面是Linux内核中的网络协议栈，这一软件栈
中包含了对IP、TCP、UDP和ICMP等协议的实现。网络协议栈的目标是为操作系统维护网络状
态，并通过套接字API向用户空间软件开放。如果在对IPv4或IPv6数据包处理过程中存在着一
个可利用的缓冲区溢出漏洞，那么这将成为可能出现的最为严重的安全漏洞类型。对这样一个安
全漏洞的成功利用，将导致远程执行内核空间中的任意代码。然而这种类型的安全漏洞是非常稀
有的，当然也没有出现以Android设备为目标的此类漏洞。
---
## Page 129
5.3选程攻击面
113
注意内存破坏漏洞肯定不是影响网络协议机的唯一一种安全温洞类型，举例未说，TCP序列
号可预测等协议层攻击都可以归类到这个攻击面中。
遗憾的是，进一步枚举这个攻击面是个非常费人力的过程。在一个活跃设备上，/proc/net目
录是尤其值得关注的。具体面言，这个目录中的ptype文件中提供了设备所支持的协议类型列表，
以及这些协议所对应的接收函数。如下片段显示了在一部运行Android 4.3的GalaxyNexus手机
中的这一文件内容：
she119maguro1/  $cat/proc/net/ptype
Type Device
0800
ip_rcv+0x0/0x430
Function
0011
11c_rev+0x0/0x314
11c_xcv+0x0/0x314
0004
0806
5300
phonet_rcv+0x0/0x524
arp_rcv+0x0/0x144
86dd
shel1emaguro: / $
1pv6_rcv+0x0/0x600
从这个输出结果中可以看到，该设备内核支持IPv4、IPv6、两种类型的LLC、PhoNet和ARP。
这些信息及更多细节在内核的构建配置文件中可以找到。获取内核构建配置文件的具体指令将在
第10章中提供。
5.3.3暴露的网络服务
无需目标用户交互的联网服务是第二位有吸引力的攻击面。这些服务通常在用户空间中执
行，消除了获得内核空间代码执行的可能性。但是仍然有一些潜在的网络服务，如果被成功利用
攻击面中的安全漏洞，仍可以获取到root权限，不过这类网络服务在Android系统上是极少的。
无论如何，利用这一攻击面暴露的安全漏洞可以让攻击者在设备上获得初始立足点，而进一步的
访问权限可以通过权限提升攻击来获取，我们将在本章后面讨论这类攻击。
很遗憾，绝大多数Android设备默认不包含任何联网服务。这一攻击面的大小主要取决于在设
备上运行的软件。举例来说，第10章将介绍如何启用可经过TCP/IP进行访问的Android调试桥
（ADB）服务。如果进行了这一操作，设备就会在网络上监听连接，暴露出原先并不存在的额外攻
击面。Android应用是另一个能让网络服务暴露的途径。一些应用会监听连接，例如通过虚拟网络
计算（VNC）、远程桌面（RDP）、安全shell（SSH）或其他协议向设备提供额外网络访问的应用。
枚举这一攻击面可以用两种方法。一种方法是，研究者使用端口扫描器（如Nmap）来探测
设备，以查看是否监听了哪些端口。使用这一方法可以同时测试设备与网络配置，但是如果没有
发现监听服务，也不一定意味着服务并没有开放监听。另一种方法是，研究者可以使用shell访
问来枚举出设备上的监听端口。如下shell会话片段显示了应用这种方法的一个实例。
she119maguro:/ $ netstat -an 1 grep LISTEN
9d37
011:1122
111 *
LISTEN
shel1emaguro:/ $
---
## Page 130
114第5章理解Android的攻击面
netstat 命令显示出/proc/net 目录中 tcp、tcp6、udp和udp6的信息。输出结果显示端口 1122
上开放了某个服务、而这正是我们告诉 SSHServer（由Ice ColdApps公司开发）应用在其上启用
SSH服务器的端口。
当启用Wi-Fi热点功能后，额外的网络服务也会出现。以下显示了当这一功能激活后，
netstat命令的输出结果。
shel1emaguro:/ $ netstat -an
Proto Recv-Q Send-Q Loca1 Address
0 127.0.0.1:53
Foreign Address
0.0.0.0:*
State
tcp
0
LISTEN
do1
udp
0
0 192.168.43.1:53
0 127.0.0.1:53
0.0.0.0: *
0,0.0.0; *
LISTEN
0
CLOSE
udp
0
0 192.168.43.1:53
0.0.0.0:*
udp
0 0.0.0.0: 67
0.0.0.0:*
CLOSE
3SOTO