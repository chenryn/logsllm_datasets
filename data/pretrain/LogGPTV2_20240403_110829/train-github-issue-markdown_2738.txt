Certainly! Here is a more polished and professional version of your text:

---

### Implementation of `MKMapView` in Flutter using the `UIKitView` Platform View

I have implemented an `MKMapView` for iOS using the new `UIKitView` platform view. The implementation works well, except for some issues with gesture recognizers that are causing errors.

#### Flutter Implementation

```dart
typedef void DossierMapViewCreatedCallback(DossierMapViewController controller);

/// Displays a map with dossiers.
class DossierMapView extends StatefulWidget {
  const DossierMapView({
    Key key,
    this.onDossierMapViewCreated,
    this.gestureRecognizers,
  }) : super(key: key);

  final DossierMapViewCreatedCallback onDossierMapViewCreated;
  final Set<Factory<OneSequenceGestureRecognizer>> gestureRecognizers;

  @override
  State<DossierMapView> createState() => _DossierMapViewState();
}

class _DossierMapViewState extends State<DossierMapView> {
  final Completer<DossierMapViewController> _controller = Completer();

  @override
  Widget build(BuildContext context) {
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return AndroidView(
          viewType: _dossierMapViewType,
          onPlatformViewCreated: _onPlatformViewCreated,
        );
      case TargetPlatform.iOS:
        return GestureDetector(
          child: UiKitView(
            viewType: _dossierMapViewType,
            onPlatformViewCreated: _onPlatformViewCreated,
            gestureRecognizers: <Factory<OneSequenceGestureRecognizer>>{
              Factory<EagerGestureRecognizer>(() => EagerGestureRecognizer()),
            }.toSet(),
          ),
        );
      default:
        return Text(
          '$defaultTargetPlatform is not yet supported by the dossiers_map_view plugin',
        );
    }
  }

  void _onPlatformViewCreated(int id) {
    final controller = DossierMapViewController._(id);
    _controller.complete(controller);
    if (widget.onDossierMapViewCreated != null) {
      widget.onDossierMapViewCreated(controller);
    }
  }
}

class DossierMapViewController {
  final MethodChannel _channel;

  DossierMapViewController._(int id)
      : _channel = MethodChannel('plugins.maxdoro.com/dossiermapview_$id');

  Future<void> setDossierList(List<Map<String, dynamic>> list) async {
    await _channel.invokeMethod('setDossierList', list);
  }
}
```

#### Gesture Recognizer Issues

The critical part of the implementation is likely the gesture recognizer setup. When dragging or zooming the map, the following exceptions are thrown:

```
[VERBOSE-2:shell.cc(184)] Dart Error: Unhandled exception:
'package:flutter/src/gestures/converter.dart': Failed assertion: line 250 pos 18: 'state.down': is not true.
#0      _AssertionError._doThrowNew (dart:core/runtime/liberrors_patch.dart:40:39)
#1      _AssertionError._throwNew (dart:core/runtime/liberrors_patch.dart:36:5)
#2      PointerEventConverter.expand (package:flutter/src/gestures/converter.dart:250:18)
#3      _SyncIterator.moveNext (dart:core/runtime/libcore_patch.dart:151:12)
#4      ListQueue.addAll (dart:collection/queue.dart:715:25)
#5      _WidgetsFlutterBinding&BindingBase&GestureBinding._handlePointerDataPacket (package:flutter/src/gestures/binding.dart:83:27)
#6      _invoke1 (dart:ui/hooks.dart:165:13)
#7      _dispatchPointerDataPacket (dart:ui/hooks.dart:119:5)

[VERBOSE-2:shell.cc(184)] Dart Error: Unhandled exception:
'package:flutter/src/gestures/converter.dart': Failed assertion: line 143 pos 18: '!state.down': is not true.
#0      _AssertionError._doThrowNew (dart:core/runtime/liberrors_patch.dart:40:39)
#1      _AssertionError._throwNew (dart:core/runtime/liberrors_patch.dart:36:5)
#2      PointerEventConverter.expand (package:flutter/src/gestures/converter.dart:143:18)
#3      _SyncIterator.moveNext (dart:core/runtime/libcore_patch.dart:151:12)
#4      ListQueue.addAll (dart:collection/queue.dart:715:25)
#5      _WidgetsFlutterBinding&BindingBase&GestureBinding._handlePointerDataPacket (package:flutter/src/gestures/binding.dart:83:27)
#6      _invoke1 (dart:ui/hooks.dart:165:13)
#7      _dispatchPointerDataPacket (dart:ui/hooks.dart:119:5)
```

These exceptions occur frequently, and they are related to the `assert` statements in the `PointerEventConverter` class, specifically testing the `state.down` condition.

#### Environment Details

Running `flutter doctor -v` provides the following output:

```
sanders-mbp:waarnemingenapp sandervanderwal$ flutter doctor -v
[✓] Flutter (Channel master, v0.11.4-pre.6, on Mac OS X 10.14.1 18B75, locale en-NL)
    • Flutter version 0.11.4-pre.6 at /Users/sandervanderwal/Developer/flutter
    • Framework revision df57dc9da9 (10 hours ago), 2018-11-11 22:36:47 -0800
    • Engine revision 5646e86a6f
    • Dart version 2.1.0 (build 2.1.0-dev.9.3 9c07fb64c4)
[✓] Android toolchain - develop for Android devices (Android SDK 28.0.2)
    • Android SDK at /Users/sandervanderwal/Library/Android/sdk
    • Android NDK location not configured (optional; useful for native profiling support)
    • Platform android-28, build-tools 28.0.2
    • Java binary at: /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/bin/java
    • Java version OpenJDK Runtime Environment (build 1.8.0_152-release-1136-b06)
    • All Android licenses accepted.
[✓] iOS toolchain - develop for iOS devices (Xcode 10.1)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Xcode 10.1, Build version 10B61
    • ios-deploy 1.9.2
    • CocoaPods version 1.5.3
[✓] Android Studio (version 3.2)
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin version 30.0.1
    • Dart plugin version 181.5656
    • Java version OpenJDK Runtime Environment (build 1.8.0_152-release-1136-b06)
[✓] Connected device (1 available)
    • Turminder Xuss • ca4f8a0ddd55132ab42c253d7496b90a38b6b53c • ios • iOS 12.1
• No issues found!
```

---

This version of the text is more organized, clear, and professional. It should help in understanding the issue and the context better.