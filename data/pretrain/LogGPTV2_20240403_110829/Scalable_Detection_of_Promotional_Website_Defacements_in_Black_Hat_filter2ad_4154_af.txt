have similar embeddings if they appear in similar con-
texts in the corpus. As such, DMOS has generalization
power and can understand never-before-seen jargons to
a certain extent since jargons often appear in similar
contexts.
6.2 Robustness
Schemes
against Other
Evasion
Defacers can adjust their strategy to keep defacements hidden
from DMOS. They can hide the illicit content by embedding
it within images. Worse still, these images can be obfuscated
by introducing distortions and noises [48]. However, such
evasion techniques cannot make illicit content appear in the
search results and limit their impact. An adversary may use
other evasion tricks by targeting speciﬁc search engines only.
For example, defacers may leverage JavaScript to hide illicit
content from search engines except for Google, since the
latter can somehow index JavaScript framework [2]. However,
DMOS does not limit itself to get web pages from crawlers
only. Instead, it can be used together with other web page
acquisition channels (e.g., ﬁrewalls), making such evasion
tricks less effective.
In this section, we review existing efforts in website deface-
ment detection from three perspectives.
7.1 Defacement Detection
Davanzo et al. [25] treat web defacement detection as an
anomaly detection problem of web pages. However, the eval-
uation is based on only 620 hand-picked web pages, which
undermines its general applicability. Delta [20] designs a
framework to detect whether a website change is malicious or
benign based on clustering. By approaching the problem visu-
ally, Meerkat [21] renders web pages using headless browsers
and applies computer vision techniques to identify the mali-
cious content changes among screenshots of the website. How-
ever, these works are more suitable for detecting politically-
motivated defacements, where websites’ visual appearance
is deliberately changed. They are unlikely to achieve similar
performance for stealthy promotional defacements.
The most related work of DMOS should be [39], which
utilizes the hashing trick to create a hierarchical representa-
tion of web documents (e.g., HTML, JavaScript, CSS, etc.)
and then feed such input to neural networks for general web
documents classiﬁcation. However, this work does not utilize
the information carried by HTML tags and thus cannot dis-
tinguish stealthy defacements from legitimate noises in many
cases. Furthermore, [39] uses the web content reported to
VirusTotal [5], a platform aggregating many anti-virus prod-
ucts, to train the network. As discussed in Section 4.3, most
vendors in VirusTotal fail to detect promotional defacements,
which affects the performance of the trained model.
7.2 Black Hat SEO Investigation
Black hat SEO has become the most popular channel for ad-
vertising illicit goods and services. Wang et al. [44] show
that at least 0.48% of Google autocomplete results are pol-
luted. Nektarios et al. [34] construct a representative list of
218 drug-related keywords for Google search and automati-
cally gather 40,000 malicious search results to quantify the
prevalence of search-redirection attacks, especially for unli-
censed pharmacies. Following a similar approach, Nektarios
et al. [33] further perform a four-year long longitudinal in-
vestigation to reveal the evolution of the attacking strategies
and technologies. Advanced offensive techniques, like using
jargons, turn out to be effective and, as reported by [42], can
often evade detection to bypass blockade by search engines.
Towards this end, Liao et al. [35] develop a semantics-based
approach to facilitate search engines to detect those compro-
mised sites by identifying the semantic gaps between the
malicious keywords and the infected sponsored Top-Level
Domains (sTLD). In contrast, DMOS supports the detection
of promotional defacements in any domain without limiting
to speciﬁc sTLD.
3718    30th USENIX Security Symposium
USENIX Association
7.3 Natural Language Processing
Besides defacement detection literature, researchers have
made substantial progress in the area of natural-language-
processing-based text classiﬁcation, e.g., BERT [24], Fast-
Text [31], etc. Our scheme differs from typical document
classiﬁcation work, e.g. sentiment analysis, in that we seek to
detect an active adversary who tries hard to evade detection
and is willing to obscure the semantics of their text. While
inspired by Hierarchical Attention Network [46], we have de-
veloped new techniques to encode the HTML tag information
into the neural network and examine content at hierarchical
spatial scales. As a result, we can capture locality and thus
achieve higher accuracy compared to the direct application of
state-of-the-art NLP models.
8 Conclusion
In this paper, we propose DMOS, a scalable cloud-based de-
tector for promotional website defacements. Using DMOS,
we examine 38,526,989 web pages over 7,298 websites, ﬁnd-
ing 11% of which, to our surprise, have been defaced at least
once. Our study demonstrates the pervasiveness of conspiring
acts between the seekers and promoters of illicit goods and
services over the Internet. By effectively detecting website de-
facements at their early stage, DMOS has substantially raised
the bar to thwart the negative impact of promotional deface-
ments as the site owners can quickly remove the illicit content
to contain its damage. The ﬁndings of our measurement study
also reveal new interesting phenomena in the Internet under-
ground ecosystem.
Acknowledgements and Ethical Considerations
We thank our shepherd Prof. Bimal Viswanath and the anony-
mous reviewers for their valuable comments, which help to
improve the paper considerably. We also thank our colleagues
Shangcheng Shi, Zuoye Gong, and Zhiyi Cheng for their help
in this work. This research is supported in part by the CUHK
Project Impact Enhancement Fund (Project#3133292) and the
CUHK MobiTeC R&D Fund. For all the Chinese websites in
our experiments, crawling and detection of websites are au-
thorized by their owners with legal agreements. The crawled
pages are kept privately and cannot be shared with the public.
We have informed owners of all the 824 defaced websites de-
tected in our online experiment and provided them a complete
list of defaced page URLs. All the site owners had subse-
quently conﬁrmed our ﬁndings, removed the illicit content,
and deployed further security measures. For the defacements
we identiﬁed throughout our English dataset collection pro-
cess, most affected websites had removed the illicit content
by themselves during our experiment. We have notiﬁed four
websites where defacements remain.
References
[1] Four-corner system, 1995.
[2] Can google properly crawl and index javascript frameworks? a
javascript seo experiment. online, 2017. https://www.onely.com/
blog/javascript-seo-experiment/.
[3] Central ofﬁce notice: Government websites domain policy.
on-
line, 2018. http://www.gov.cn/zhengce/content/2018-09/06/
content_5319675.htm.
[4] ssdeep project. online, 2018. https://ssdeep-project.github.io/
ssdeep/index.html.
[5] Virustotal. online, 2018. https://www.virustotal.com.
[6] Aho–corasick algorithm. online, 2019. https://en.wikipedia.org/
wiki/Aho%E2%80%93Corasick_algorithm.
[7] Baidu url security center. online, 2019. https://bsb.baidu.com.
[8] China webmaster. online, 2019. http://top.chinaz.com/.
[9] Chinese wiki corpus. online, 2019. https://dumps.wikimedia.org/
zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2.
[10] Language model. online, 2019. https://en.wikipedia.org/wiki/
Language_model.
[11] Selenium. online, 2019. https://www.seleniumhq.org/.
[12] Tencent url security center. online, 2019. https://urlsec.qq.com.
[13] Tensorﬂow. online, 2019. https://www.tensorflow.org/.
[14] Tﬁdf. online, 2019. https://en.wikipedia.org/wiki/Tf%E2%80%
93idf.
[15] Exploring google hacking techniques.
online, 2020.
https://
securitytrails.com/blog/google-hacking-techniques.
[16] Kafka: A distributed streaming platform. online, 2020. https://
kafka.apache.org/intro.
[17] Sample defacement dataset of english webpages. online, 2020. http:
//mobitec.ie.cuhk.edu.hk/DMoS/.
[18] Some example tools for defacement and black hat seo. online, 2020.
http://www.zylou.cn/hmseo.
[19] Transformers: State-of-the-art natural language processing for py-
https://github.com/
online, 2020.
torch and tensorﬂow 2.0.
huggingface/transformers.
[20] BORGOLTE, K., KRUEGEL, C., AND VIGNA, G. Delta: Automatic
identiﬁcation of unknown web-based infection campaigns. In Proceed-
ings of the 2013 ACM SIGSAC Conference on Computer & Communi-
cations Security.
[21] BORGOLTE, K., KRUEGEL, C., AND VIGNA, G. Meerkat: Detecting
website defacements through image-based object recognition. In 24th
USENIX Security Symposium.
[22] CHEN, T., AND GUESTRIN, C. Xgboost: A scalable tree boosting sys-
tem. In Proceedings of the 22nd acm sigkdd international conference
on knowledge discovery and data mining (2016), ACM, pp. 785–794.
[23] CHUNG, Y.-J., TOYODA, M., AND KITSUREGAWA, M. A study of
link farm distribution and evolution using a time series of web snap-
shots. In Proceedings of the 5th international workshop on Adversarial
information retrieval on the Web (2009), ACM, pp. 9–16.
[24] DEVLIN, J., CHANG, M.-W., LEE, K., AND TOUTANOVA, K. Bert:
Pre-training of deep bidirectional transformers for language understand-
ing. In Proceedings of the 2019 Conference of the North American
Chapter of the Association for Computational Linguistics: Human
Language Technologies, Volume 1, pp. 4171–4186.
[25] G. DAVANZO, E. M., AND BARTOLI, A. Anomaly detection tech-
niques for a web defacement monitoring service. In Expert Systems
with Applications (2011).
USENIX Association
30th USENIX Security Symposium    3719
[26] GESENHUES, A. Study: Organic search drives 51% of trafﬁc, social
only 5%. Search Engine Land (2014).
[27] GOOGLE.
line, 2018.
7408270?hl=en.
Policies for content posted by users on search.
on-
https://support.google.com/websearch/answer/
[28] IMF. The countries with the largest shadow economies. online, 2017.
https://tinyurl.com/x0b0r79y.
[29] JOHN, J. P., YU, F., XIE, Y., KRISHNAMURTHY, A., AND ABADI,
M. deseo: Combating search-result poisoning. In USENIX security
symposium (2011), pp. 20–35.
[30] JOSLIN, M., LI, N., HAO, S., XUE, M., AND ZHU, H. Measuring
and analyzing search engine poisoning of linguistic collisions.
In
Proceedings-IEEE Symposium on Security and Privacy (2019), IEEE.
[31] JOULIN, A., GRAVE, E., BOJANOWSKI, P., AND MIKOLOV, T. Bag
of tricks for efﬁcient text classiﬁcation. In Proceedings of the 15th Con-
ference of the European Chapter of the Association for Computational
Linguistics: Volume 2, Short Papers (2017), pp. 427–431.
[32] LAN, Z., CHEN, M., GOODMAN, S., GIMPEL, K., SHARMA, P., AND
SORICUT, R. Albert: A lite bert for self-supervised learning of language
representations. In International Conference on Learning Representa-
tions (2019).
[33] LEONTIADIS, N., MOORE, T., AND CHRISTIN, N. A nearly four-year
longitudinal study of search-engine poisoning. In Proceedings of the
2014 ACM SIGSAC Conference on Computer and Communications
Security, pp. 930–941.
[34] LEONTIADIS, N., MOORE, T., AND CHRISTIN, N. Measuring and
analyzing search-redirection attacks in the illicit online prescription
drug trade. In USENIX Security Symposium (2011), vol. 11.
[35] LIAO, X., YUAN, K., WANG, X., PEI, Z., YANG, H., CHEN, J., DUAN,
H., DU, K., ALOWAISHEQ, E., ALRWAIS, S., ET AL. Seeking non-
sense, looking for trouble: Efﬁcient promotional-infection detection
through semantic inconsistency search. In 2016 IEEE Symposium on
Security and Privacy (SP), pp. 707–723.
[36] MAGGI, F., BALDUZZI, M., FLORES, R., GU, L., AND CIANCAGLINI,
V. Investigating web defacement campaigns at large. In Proceedings
of the 2018 on Asia Conference on Computer and Communications
Security.
[37] MIKOLOV, T., CHEN, K., CORRADO, G., AND DEAN, J. Efﬁcient
estimation of word representations in vector space. arXiv preprint
arXiv:1301.3781 (2013).
[38] PENNINGTON, J., SOCHER, R., AND MANNING, C. Glove: Global
vectors for word representation. In Proceedings of the 2014 conference
on empirical methods in natural language processing (EMNLP) (2014),
pp. 1532–1543.
[39] SAXE, J., HARANG, R., WILD, C., AND SANDERS, H. A deep learn-
ing approach to fast, format-agnostic detection of malicious web con-
tent. In 2018 IEEE Security and Privacy Workshops (SPW), pp. 8–14.
[40] SEOMOZ. Google algorithm change history. online, 2018. https:
//moz.com/google-algorithm-change.
[41] VASWANI, A., SHAZEER, N., PARMAR, N., USZKOREIT, J., JONES,
L., GOMEZ, A. N., KAISER, Ł., AND POLOSUKHIN, I. Attention is
all you need. In Advances in neural information processing systems
(2017), pp. 5998–6008.
[42] WANG, D. Y., DER, M., KARAMI, M., SAUL, L., MCCOY, D., SAV-
AGE, S., AND VOELKER, G. M. Search+ seizure: The effectiveness of
interventions on seo campaigns. In Proceedings of the 2014 Conference
on Internet Measurement Conference, pp. 359–372.
[43] WANG, D. Y., SAVAGE, S., AND VOELKER, G. M. Cloak and dagger:
dynamics of web search cloaking. In Proceedings of the 18th ACM
conference on Computer and communications security (2011), pp. 477–
490.
[44] WANG, P., MI, X., LIAO, X., WANG, X., YUAN, K., QIAN, F., AND
BEYAH, R. Game of missuggestions: Semantic analysis of search-
autocomplete manipulations. In 25th Annual Network & Distributed
System Security Symposium (NDSS) (2018).
[45] YANG, H., MA, X., DU, K., LI, Z., DUAN, H., SU, X., LIU, G.,
GENG, Z., AND WU, J. How to learn klingon without a dictionary:
Detection and measurement of black keywords used by the underground
economy. In 2017 IEEE Symposium on Security and Privacy (SP),
pp. 751–769.
[46] YANG, Z., YANG, D., DYER, C., HE, X., SMOLA, A., AND HOVY,
E. Hierarchical attention networks for document classiﬁcation. In
Proceedings of the 2016 conference of the North American chapter of
the association for computational linguistics: human language tech-
nologies, pp. 1480–1489.
[47] YUAN, K., LU, H., LIAO, X., AND WANG, X. Reading thieves’ cant:
automatically identifying and understanding dark jargons from cyber-
In 27th USENIX Security Symposium (2018),
crime marketplaces.
pp. 1027–1041.
[48] YUAN, K., TANGY, D., LIAO, X., WANG, X., FENG, X., CHEN, Y.,
SUN, M., LU, M., AND ZHANG, K. Stealthy porn: Understanding real-
world adversarial images for illicit online promotion. In Proceedings-
IEEE Symposium on Security and Privacy (2019).
[49] YUJIAN, L., AND BO, L. A normalized levenshtein distance metric.
IEEE transactions on pattern analysis and machine intelligence 29, 6
(2007), 1091–1095.
A Collecting Alarming Keywords
Compared to illicit keywords, developing the alarming key-
words turns out to be relatively straightforward. While de-
facers often obfuscate keywords, it noteworthy that many
obfuscated jargons share the same stem (i.e., commonly-used
sequence). For example, there are many illicit phrases derived
from “mark six”, like “buy mark six in Hong Kong” or “Hong
Kong mark six”. However, the stem “mark six” is seldom
changed. As such, the number of stems is limited, making
them suitable as alarming keywords. Speciﬁcally, we build
the alarming keywords as follows:
• We build a dictionary of stop words (e.g., “the”, “Hong
Kong”), which are used in the legitimate dataset as well.
• For each phrase, we remove the stop words. For example,
“buy mark six in Hong Kong” becomes “buy mark six”.
• We extract all n-gram sequences where n is larger than
a threshold θn (set to 2), e.g., “buy mark six” is splitted
into “buy mark”, “mark six”, and “buy mark six”.
• For each sequence, we compute its frequency in the de-
faced and legitimate dataset, fd and fl, respectively.
• Finally, we compute the frequency difference fd − fl for
all substrings, starting from the shortest one. If it is more
than a threshold θalarm, we include this sequence as an
alarming keyword.
Note that we will extract at least one sequence from every il-
licit phrase to ensure the completeness of alarming keywords.
3720    30th USENIX Security Symposium
USENIX Association