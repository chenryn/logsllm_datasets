# 八、下一步是什么？
在这最后一章中，我们将讨论向您的监控添加警报的好处，从而了解您可以采取哪些后续步骤来监控您的容器。此外，我们将介绍一些不同的场景，以及哪种类型的监控适合每种场景:
*   常见问题(性能、可用性等)以及哪种类型的监控最适合您的情况。
*   就您收集的指标发出警报有什么好处，有哪些选择？
# 部分场景
为了了解您可能希望为基于容器的应用实现哪种类型的监控，我们应该研究几个不同的示例配置，基于容器的应用可以部署到这些配置中。首先，让我们提醒自己关于宠物、牛、鸡和雪花。
## 宠物、牛、鸡和雪花
回到[第 1 章](1.html#DB7S1-fcf7b4d102f841bba77b823d677470e0 "Chapter 1. Introduction to Docker Monitoring")*Docker 监控介绍*，我们谈到了宠物、牛、鸡和雪花；在那一章中，我们描述了每个术语在应用于现代云部署时的含义。在这里，我们将更详细地讨论如何将这些术语应用于您的容器。
### 宠物
对于被视为宠物的容器，您将比在指定主机上运行单个或少量固定容器的可能性更大。
这些容器中的每一个都可以被认为是单点故障；如果其中任何一个发生故障，都很可能导致应用出错。更糟糕的是，如果主机因为任何原因停机，您的整个应用都将离线。
对于我们使用 Docker 的大多数第一步，这是一种典型的部署方法，无论如何都不应该被认为是不好的、不被认可的或不被推荐的；只要你意识到的局限性，你就会没事。
这种模式也可以用来描述大多数开发环境，因为您会根据需要不断检查它的运行状况和调整。
您很可能将机器托管在本地计算机或托管服务上，如数字海洋([https://www.digitalocean.com/](https://www.digitalocean.com/))。
### 牛
对于大部分生产或业务关键型部署，您的目标应该是启动您的容器，其配置允许它们在故障后自动恢复，或者，当需要更多容量时，启动额外的容器，然后在扩展事件结束时终止。
您很可能会使用基于公共云的服务，如下所示:
*   亚马逊 EC2 容器服务:[https://aws.amazon.com/ecs/](https://aws.amazon.com/ecs/)
*   谷歌容器引擎:[https://cloud.google.com/container-engine/](https://cloud.google.com/container-engine/)
*   joyentTriton:[https://www . joyent . com/blog/understance-Triton-containers/](https://www.joyent.com/blog/understanding-triton-containers/)
或者，您将在自己的服务器上使用 Docker 友好和集群感知的操作系统进行托管，如下所示:
*   韩文: [https://coreos.com/](https://coreos.com/)
*   牧场主:[http://rancher.com/rancher-os/](http://rancher.com/rancher-os/)
只要您可以将流量路由到容器，您就不会太在意容器在主机集群中的启动位置。为了向群集添加更多容量，您将在需要时启动其他主机，并在不需要时从群集中删除它们，以节省成本。
### 鸡
不仅仅是你可能会使用容器来启动，处理数据，然后终止。这可以在任何时候发生，从一天一次到一分钟几次。您将使用分布式计划程序，如下所示:
*   kubrines 由谷歌:t1【http://kubrines . io/发布
*   阿帕奇 月份： [http://mesos.apache.org/](http://mesos.apache.org/)
因此，您的集群中将有大量的容器启动和终止；只要您的数据被正确处理并传递回您的应用，您肯定不会关心容器在哪里启动，甚至不会关心流量如何路由到它。
像*黄牛*部分描述的集群一样，主机将自动添加和删除，可能是为了响应计划的高峰，如月末报告或季节性销售等。
### 雪花
我希望你从第一章中带走的一件事是，如果你有任何服务器或服务，你认为是雪花，那么你应该做些什么来尽快淘汰它们。
幸运的是，由于应用容器化的工作方式，您应该永远无法使用 Docker 创建雪花，因为您的容器化环境应该总是可复制的，要么是因为您有 Docker 文件(每个人都做备份，对吗？)或者您有一个容器映像的工作副本，因为您已经使用内置工具将容器作为一个整体导出。
### 注
有时可能无法使用 Docker 文件创建容器。相反，您可以使用 export 命令备份或迁移容器。有关导出容器的更多信息，请参见以下网址:
[https://docs.docker.com/reference/commandline/export/](https://docs.docker.com/reference/commandline/export/)
如果你发现自己处于这种境地，让我第一个祝贺你，在任何问题出现之前，通过将你的雪花提升为宠物甚至牛来减轻未来的灾难。
### 类型
**还在跑雪花？**
如果您发现自己仍在运行雪花服务器或服务，我再怎么强调也不为过，您应该考虑尽快记录、迁移或更新雪花。监控一个你可能无法恢复的服务是没有意义的。请记住如果你真的需要运行旧技术，有一些容器，比如 PHP4。
## 场景一
您正在使用 Docker Hub 的官方容器运行个人 WordPress 网站；容器已经使用 Docker Compose 文件启动，就像我们在本书中多次使用的文件一样。
您将 Docker Compose 文件存储在 GitHub 存储库中，并且可以拍摄主机的快照作为备份。因为这是您自己的博客，所以您可以在单个基于云的主机上运行它。
合适的监控如下:
*   Docker 统计
*   Docker 顶
*   Docker 日志
*   顾问
*   西斯迪格
由于您运行的是作为备份的单个主机，因此您并不真正需要将日志文件运送到中央位置，因为主机的可能性很小；像容器一样，它的主机将在线几个月甚至几年。
您不太可能需要深入挖掘容器的历史性能统计数据，因为大多数调优和故障排除都是在出现问题时实时完成的。
使用建议的监控工具，您将能够实时了解容器内发生的情况，并获得关于消耗过多内存和 CPU 的进程的足够信息，以及来自容器内的任何错误消息。
您可能希望启用一个服务，如 Pingdom([https://www.pingdom.com/](https://www.pingdom.com/))或正常运行机器人([http://uptimerobot.com/](http://uptimerobot.com/))。这些服务每隔几分钟轮询您的网站，以确保您配置它们的网址，检查它是否在特定时间内加载或根本不加载。如果他们检测到页面加载的任何减速或失败，他们可以配置为发送初始警报，通知您存在潜在问题，例如提到的两个服务都有免费层。
## 场景二
您正在运行一个定制的电子商务应用，该应用需要高度可用，并且在您的高峰期也可以扩展。您正在使用公共云服务及其附带的工具集来启动容器并将流量路由到它们。
合适的监控如下:
*   卡迪西亚+普罗米修斯
*   扎比克斯
*   Sysdig Cloud
*   新遗迹服务器监控
*   Datadog
*   ELK +日志包
*   日志条目
*   冷淡地
在这种情况下，企业不仅需要收到有关容器和主机故障的通知，还需要将您的监控数据和日志远离主机服务器，以便您可以正确地查看历史信息。您可能还需要将 PCI 合规性或内部审计的日志保留一段固定的时间。