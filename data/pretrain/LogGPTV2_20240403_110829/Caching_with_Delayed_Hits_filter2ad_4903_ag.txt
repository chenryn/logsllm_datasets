can be at most one eviction after t and no later than T (two evictions
require data arrival in between). If there is no eviction, then the LHS
is 0. The RHS is also 0 since the request for i at T will not be put in
(i)
Z (T +1) = 0. If there is an eviction at some u
the queue and thus x
(i)
with t < u ≤ T , then all the summands except x
0 (u)· 1ai(u)=−1 on
the LHS are 0. So the LHS is equal to 1. The RHS is also equal to 1
since the request for i at T sees nothing in the cache nor the queue.
In summary, (28) holds when x
(i)
1 (t) =1 for some t∗ <t ≤T .
Next, consider the case where x
(i)
1 (t) = 0 for all t with t∗ < t ≤ T .
In this case there is no data arrival for object i during the whole time
period. Then again there can be at most one eviction. Suppose there
is no eviction for all t with t∗ <t ≤T . Then the LHS of (28) is 0. In this
case, object i is either in the cache for all timestep t with t∗ < t ≤T
or it is not in the cache for all t with t∗ < t ≤ T . If it is in the cache
(i)
Z (T +1) =0. If it is always
all the time, then the RHS is also 0 since x
not in the cache, then T <t∗ +Z since the request at t∗ is put in the
(i)
queue and arrive at t∗ +Z, but we have assumed that x
1 (t) =0 for all
(i)
t with t∗ < t ≤T . However, T < t∗ +Z implies that x
t∗+Z−T (T +1) =
(i)
Z (t∗ +1) =1, which implies that the RHS of (28) is 0. Therefore, for
x
the case of no eviction, LHS and RHS are equal. Suppose there is an
eviction at some t with t∗ <t ≤T . Then the LHS of (28) is equal to 1.
(i)
1 (t) =0 for all t with t∗ <t ≤T , object i
Since we have assumed that x
(i)
τ (T) =0 for 0≤τ ≤ Z.
cannot reenter the cache after the eviction. So x
Then the request for i at T will be added to the queue, so the RHS of
(28) is equal to 1. Therefore, LHS and RHS are also equal in this case.
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
Nirav Atre, Justine Sherry, Weina Wang, and Daniel S. Berger
Claim 1. For any object i and any timestep T ≥ Z,
(i)
cch(T −1).
Claim 2. For any object i and any T ≥ 0,
(i)
0 (T) = f
x
τ (T +1)(cid:17)
(i)
.
(i)
(cid:16)1−x
Z (T +1)·Z−1
τ (T +1)(cid:17)
(cid:16)1−x
τ =1
(i)
=1
(i)
τ (T +1) =0 for all τ =0,1,...,Z−1
(i)
mem(T) =x
f
(i)
Z (T +1)·Z−1
τ =1
(i)
Z (T +1) =1,x
(i)
1 (T +Z) =1.
We note that in Claim 2,
(29)
x
⇔x
⇔x
(32)
(33)
Combining the arguments above, we have shown that the flow
conservation constraint (21) is satisfied.
Now let us check the constraint (22), i.e., we want to show that
x
+x
(i)
(i)
+x
Term (L1)
Term (L2)
(i)
1 (T −1)·1{ai(T−1)=1}
(i)
0 (T −1)·1{ai(T−1)=0}
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
(cid:16)1−x
τ (T +1−Z)(cid:17)
Z (T +1−Z)·Z−1
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)
Term (L3)
(i)
1 (T)·1{ai(T)=1}
Term (R1)
(i)
0 (T)·1{ai(T)=−1}
Term (R2)
(i)
1 (T)·1{ai(T)=0}
(i)
0 (T)·1{ai(T)=0}
τ =1
+x
+x
+x
.
Term (R3)
Term (R4)
=x
x
We start by discussing different cases of Term (L3). Suppose (L3) =1.
Then
(i)
τ (T +1−Z) =0,τ =1,2,...,Z−1.
(i)
τ (T +1−Z) =0 for all 1≤τ ≤ Z−1 and x
(i)
Z (T +1−Z) =1,x
(30)
(i)
0 (T + 1− Z) = 0 by (13) and object i will not arrive
In this case, x
(i)
0 (t) = 0 for t = T +1−Z ,T +2−Z ,...,T , and
until timestep T . So x
(i)
1 (T) = 1. Then (L1) = (L2) = (R1) = (R3) = 0 and (R2) + (R4) = 1.
x
Therefore (29) holds.
(i)
τ (T +1−Z) =1 for some 1≤
Now suppose (L3) =0. Then either x
(i)
Z (T +1−Z) =0.
τ ≤ Z−1 or x
• Suppose it is the former case. Then let t∗ be the earliest time with
(i)
T +1− Z ≤ t∗ ≤ T −1 such that x
1 (t∗) = 1. In fact, since all the
requests in queue will be resolved when the data arrives, t∗ is
(i)
1 (t∗) = 1.
also the only time between T −Z +1 and T such that x
(i)
0 (t) = 0 for all t with T − Z ≤ t ≤ t∗.
So (R2) = (R4) = 0. Also, x
If t∗ = T − 1, then (L1) = 0 and (L2) = (R1) + (R3). If t∗ < T − 1,
(i)
(i)
0 (T − 1) + ai(T − 1), we have
0 (T) = x
then (L2) = 0. Since x
(L1) =(R1)+(R3). So (29) holds.
(i)
τ (T +1−Z) =0forall1≤τ ≤ Z−1
• Supposeitisthelattercase,i.e.,x
(i)
(i)
Z (T +1− Z) = 0. Then x
1 (t) = 0 for T +1− Z ≤ t ≤ T . So
and x
(L2) =(R2) =(R4) =0. Similar to the former case, it can be shown
that (L1) =(R1)+(R3).
Combining the arguments above, we have shown that (29) always
holds and thus the flow conservation constraint (22) is satisfied.
Now we prove the other direction of the lemma, i.e., we prove that
any feasible set of flow variables define a feasible cache schedule. Let
(i)
(i)
evict(T) be a set of feasible flow variables. We show
mem(T),f
f
that the cache schedule defined below is feasible. For each timestep
T ≥ Z,
(i)
cch(T),f
ai(T) =
1
when f
(i)
mem(T −Z) =1, f
(i)
evict(T) =0,
and f
(i)
cch(T −1) =1 and f
otherwise.
−1 when f
0
(i)
cch(T −1) =0,
(i)
evict(T) =1,
(31)
For T with 0 ≤ T < Z, let ai(T) = 0, which is always feasible. Let
(i)
τ (T) with i ∈[M],τ =0,...,Z be the state of the system as defined
x
in (4) and (5) under this cache schedule in (31) . To show that this
schedule is feasible, we first prove the following claims.
Therefore, it is equivalent to f
We prove both claims by induction.
(i)
mem(T) =x
(i)
1 (T +Z).
We want to show that x
dynamics in (11), we have that x
(i)
0 (T) = 0 for all i since
Proof of Claim 1. Base case. When T = Z, x
we start from an empty cache and ai(u) = 0 for 0≤ u < Z. We have
(i)
cch(Z−1).
also defined f
(i)
cch(T −1).
(i)
cch(T). Note that by the system
(i)
(i)
0 (Z) = f
cch(Z−1) to be 0 as an custom. So x
(i)
Induction step. Assume that for someT ≥ Z, x
0 (T) = f
(i)
0 (T +1) = f
(i)
0 (T +1) =x
We consider the different cases of ai(T).
(i)
• If ai(T) = 1, then by (31), f
cch(T − 1) = 0, f
(i)
0 (T)+ai(T).
(i)
mem(T − Z) = 1 and
(i)
evict(T) = 0. By the flow conservation at Vcch,T , we have that
(i)
(i)
(i)
0 (T) = f
cch(T − 1).
cch(T) = 1. By the induction assumption, x
f
(i)
(i)
0 (T +1) = f
cch(T).
Then x
(i)
• If ai(T) = −1, then by (31), f
evict(T) = 1. Due
to the unit demand of each object, it is not hard to show that the
total incoming flow an object to a vertex is at most 1. Specifically,
(i)
(i)
mem(T −Z)≤ 1. So
cch(T −1)+ f
consider the vertex Vcch,T . Then f
(i)
(i)
cch(T) = 0.
mem(T −Z) = 0. By the flow conservation at Vcch,T , f
f
(i)
0 (T +1) = f
Since x
• If ai(T) =0, by (31), we have the following possibilities:
(i)
0 (T)+ai(T) =1. So x
(i)
cch(T −1) = 1 and f
(i)