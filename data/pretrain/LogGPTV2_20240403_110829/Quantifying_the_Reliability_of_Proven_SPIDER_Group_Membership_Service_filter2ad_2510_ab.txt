### Applied to a System with Transient and Permanent Faults

The third strategy involves convicting all permanently faulty nodes while leaving transiently faulty nodes in the set of eligible voters, allowing the transient faults to expire. In this experiment, we only consider transient faults with durations shorter than or equal to the diagnosis period. This is particularly relevant for populations of transient faults such as noise on the communication network, which gets mapped to nodes by the group membership service.

### 4. Reliability Modeling

#### 4.2. State Space

We present how to construct Markov models to measure the probability that the Maximum Fault Assumption (MFA) fails to hold, which is the relevant 'failure' according to the Fault-Error-Failure terminology [7]. If the MFA is violated, the system guarantees may not hold, leading to potential failure. Figure 2 illustrates the Markov model for one possible system configuration. This particular model is quite compact, with most models having hundreds of states and thousands of transitions.

#### 4.1. Software Tools: ASSIST, SURE, STEM

Three Markov analysis tools developed at NASA Langley Research Center were used to model the SPIDER group membership service fault tolerance and to estimate the probability that each part of the MFA would not hold. The ASSIST program translates parameterized text specifications into Markov models. Then, either STEM (Scaled Taylor Exponential Matrix) or SURE (Semi-Markov Unreliability Range Evaluator) solves the Markov model. STEM provides an exact solution and is limited to pure Markov models, while SURE provides upper and lower bounds on reliability, usually within five percent of each other [3], and can handle other classes of transitions besides exponential transitions. Butler and Johnson explain the underlying mathematics of these tools and provide numerous fault-tolerance examples in [4]. Our models involved only exponential transitions, so either tool could be used. All measurements presented here were done with STEM.

Note that another Markov solver could potentially be used; the approach is not limited to these three software tools. ASSIST, STEM, and SURE can be obtained from NASA Langley at:
http://shemesh.larc.nasa.gov/fm/ftp/sure/sure.html.

A variety of configurations can be modeled with reasonable effort. The designer first specifies the possible component state space items. Link failures are mapped to nodes, so the state space need only cover nodes. The two types of component nodes, Bus Interface Units (BIUs) and Redundancy Management Units (RMUs), are not interchangeable. A node may be good, permanently faulty, or transiently faulty. The SPIDER MFA lists three types of faults: benign, symmetric, and asymmetric. We modeled these types separately to keep the state space manageable. Convicting a faulty node causes it to become a benign permanently faulty node, so all models included benign permanently faulty BIU and RMU state space items. The maximum number of state space items in our models is eight: (2 component types) * (3 fault manifestations) + (2 benign faulty state space items).

The example in Figure 2 shows transient fault arrivals and recovery only, with no permanent faults or convictions. Therefore, there are (2 component types) * (2 fault manifestations, good/faulty) = four items in the state space that the designer must specify. The ovals represent possible states. Since redundant components are present, the system can tolerate some combinations of faulty components. The numbers of working and faulty nodes are listed inside each oval, as the state space, given as (Good RMUs, Faulty RMUs, Good BIUs, Faulty BIUs). The example system in Figure 2 has three RMUs and four BIUs. In the start state at the top, all nodes are working, so that state space is (3, 0, 4, 0). Combinations of faulty nodes are listed in other ovals, for example, the state space (3, 0, 3, 1) represents one faulty BIU, and the state space (2, 1, 4, 0) represents one faulty RMU.

#### 4.3. Transitions

Next, the designer must specify transitions. In this model, nodes are conserved, so a transition will take a node out of one state and put it into another. There are three types of transitions:

1. **Fault Arrival Transitions**: Transform a good component into a faulty component.
2. **Recovery Transitions**: When the duration of a transient fault expires, a transiently faulty node reverts to a good node.
3. **Conviction Transitions**: An asymmetric or symmetric node can be convicted, becoming a benign permanently faulty node. In this model, there is no reintegration of permanently faulty nodes, so they cannot be transformed back into good nodes.

The transitions occur at a rate defined by the fault arrival rate and the number of components currently occupying a state. For example, if a fault occurs at rate F that transforms a good BIU into a faulty BIU, and there are currently 10 good BIUs, the Markov model transition rate will be 10*F. Our models use exponential rates only, because we are modeling uncorrelated, independent faults. In Figure 2, transition rates are listed on the arrows between states. FAULT is the fault arrival rate, and RECOVERY is the transient fault expiration rate (derived from the duration). The example uses constant rates; however, most of our models have multiple fault arrival rates according to fault type. The FAULT or RECOVERY rate is multiplied by the number of eligible components in the source state, for example, the 3*FAULT transition from the start state for the chance of an RMU becoming faulty and the 4*FAULT transition from the start state for the chance of a BIU becoming faulty.

#### 4.4. Death States

Finally, the designer must specify the conditions for death states, where the guarantees may not hold. Our three death state conditions map to the three parts of the MFA. The bottom of Figure 2 shows the three types of death states, labeled with the word ‘DEATH’. MFA.3 assumes that there will not be an asymmetric faulty BIU and an asymmetric faulty RMU at the same time (the leftmost death state – 2, 1, 3, 1). MFA.1 assumes that a majority of BIUs are good (the middle death state – 3, 0, 2, 2), and MFA.2 assumes that a majority of RMUs are good (the rightmost death state – 1, 2, 4, 0). More death state space combinations are possible, but for our experiments, the combinations were aggregated by the first MFA violation.

### 5. Experiment

#### 5.1. Fault Model

The fault model includes both permanent and transient faults, with three fault types: asymmetric, symmetric, and benign. The fault model is not intended to represent all possible fault sources. Correlated faults are not included, and reintegration (and reintegration faults) are not considered. Comprehensive proofs of reintegration are not currently available, but reintegration would be an interesting area for future work. The fault types are tested separately to facilitate comparison and reduce model complexity. Since there is no benefit to convicting benign faulty nodes, it is useful to examine types separately to avoid overemphasizing any benefits of a transient fault tolerance policy. However, the reliability of a combination of types may not equal the weighted percentage of individual type data. Despite these limitations, the study provides insight into the expected reliability of the MFA with different conviction policies.

Permanent faults are modeled with a fixed exponential rate per component. A Bit Error Rate (BER) model is used as the transient fault source, where, in our model, each single corrupted bit constitutes a single transient fault. We assume the bit errors occur randomly and independently, so the BER is an exponential rate. Our fault model extends somewhat to correlated faults. In SPIDER, as in most other Time Division Multiple Access (TDMA) network protocols, a single corrupted bit within a frame will cause the entire frame to be faulty. Appended error detection codes can be constructed to detect most multiple bit errors in the same frame. Therefore, our fault model accounts for multiple bit errors within one frame, given an error detection code with adequate detection power. The BER fault model does not represent correlated multiple bit errors that span frames.

#### 5.2. Variable Parameters

The list of variable experiment parameters is given in Table 1. The Perfect policy was only tested for a BER range of 10^-12 through 10^-9. For computational efficiency reasons, a separate Markov model was generated for each combination of parameters (called a design point), for a total of 12,600 models. (10 BIU values * 5 RMU values * 12 BERs * 3 Durations * 3 Fault Types * 2 Policies) + (10 BIU values * 5 RMU values * 4 BERs * 3 Durations * 3 Fault Types * 1 Policy). Modeling other ranges of parameters is possible, but we selected these ranges as most representative of the aerospace/aviation domain.

**Table 1. Variable Experiment Parameters**

| Parameter                      | Examined Values                                                                                         |
|--------------------------------|---------------------------------------------------------------------------------------------------------|
| BIUs                           | 1, 2, 3, 4, 5, 6, 7, 8, 9, 10                                                                           |
| RMUs                           | 1, 2, 3, 4, 5                                                                                           |
| Bit Error Rate (BER)           | 10^-20, 10^-19, 10^-18, 10^-17, 10^-16, 10^-15, 10^-14, 10^-13, 10^-12, 10^-11, 10^-10, 10^-9          |
| Diagnosis Period/Transient Duration | 1 round, 10 rounds, 100 rounds                                                                         |
| SPIDER Fault Types             | Asymmetric, Symmetric, Benign                                                                          |
| Conviction Policies            | All Permanent, All Transient, Perfect                                                                   |

- **Bus Interface Unit (BIU)**: The number of BIUs ranged from one through ten. Ten is a conservative number for the expected number of BIUs in a system, as BIUs map one-to-one with processing elements, and fielded systems are expected to have tens of nodes. A maximum of ten BIUs was chosen due to the O(2^n) processing time of the Markov solver, and adding more BIUs did not drastically improve assumption reliability past five or six BIUs. This was partly due to the decision to apportion the maximum bandwidth among the BIUs instead of having each BIU send a fixed amount of data.

- **Redundancy Management Unit (RMU)**: The number of RMUs ranged from two through five. The number of RMUs is not expected to exceed five in a fielded system. Three RMUs is the minimum number required to mask a single fault by majority vote (with two RMUs, the fault will be detected but not masked), so fielded systems would likely have three or four RMUs.

- **Bit Error Rate (BER)**: We analyzed a range of 10^-12 errors/bits through 10^-9 errors/bits as the expected aerospace operational range. Data on acceptable and actual BERs can be found from standards and equipment manufacturers. For example, Jain reports that the Fiber Distributed Data Interface (FDDI) standard used for fiber optic local area networks mandates a BER of less than 2.5 * 10^-10 errors/bits [11]. For additional study, we examined lower bit error rates down to 10^-20 errors/bits, with data for 10^-17 errors/bits and higher presented here.

- **Diagnosis Rate / Transient Error Duration**: In SPIDER, the transient error duration is conservatively determined by the diagnosis period. Any fault-related evidence accumulated by a node is cleared upon each execution of the Diagnosis protocol. Therefore, an error from a transient fault according to the BER model will last, at most, for a time equal to the diagnosis period. In a TDMA round, if each node sends one frame per round, the round length is determined by the shortest frame period in the system. We used a 5 ms round. In SPIDER, the Diagnosis protocol executes periodically at the end of an integer number of rounds, so we selected a range of 1 to 100 rounds for the diagnosis period. We did not include overhead from the Diagnosis protocol, instead using the maximum bandwidth for all design points. We did not investigate transient faults with longer durations than the diagnosis period, as a BER model would not adequately represent those faults.

#### 5.3. Static Parameters

A number of other parameters needed to be specified, which were kept static for these experiments.

- **Permanent Fault Arrival Rates**: The permanent fault arrival rate was 10^-5 faults/hour for the BIUs (as the processing element fault rate will dominate) and 10^-6 faults/hour for the RMUs.

- **Maximum Data Throughput**: The maximum data throughput of SPIDER RMUs is currently 1 MBit/sec. We modeled 1 MBit/sec per each RMU and apportioned the bandwidth among the BIUs, in order to keep the total data rate at 1 MBit/sec. An alternative would be to specify a fixed data rate per BIU, but the total data rate would vary.

- **Bit Representation**: What constitutes one 'bit'? In a bus topology, a sender sends one distinct message per bus. In a star topology, a sender sends one distinct message per star, and each star then forwards N distinct messages to each of its N receivers. Should these replicated bits count as multiple bits or as a single bit for BER computations? Since the amount of energy and distance traveled could be the same, we modeled this as a single bit regardless of the topology.

- **Mission Time**: A one-hour mission time was used to easily obtain the reliability per hour and to limit the size of the models.

### 6. Results

This section presents results to three topics of investigation, with these main observations.

- **Viable Design Space**: For each conviction policy, how reliable is the MFA for different system parameter values? The MFA reliability differed drastically for studied parameter configurations, from fewer than 10^-11 violations per hour to more than 10^-3 violations per hour. Inadequate assumption reliability is one reason a system may fail, impacting system reliability. Some configurations seem inadequate for a safety-critical system, while others perform well. Surprisingly, the 'All Transient' policy outperformed the standard 'All Permanent' policy for an important range of the design space.

- **Policy Trade-off**: At what BERs does the 'All Transient' policy surpass the 'All Permanent' policy? The 'All Transient' policy outperformed the standard 'All Permanent' policy for the expected operational BER range of 10^-12 to 10^-9 errors/bits. The trade-off points occurred at specific BER values, indicating the superiority of the 'All Transient' policy in certain scenarios.