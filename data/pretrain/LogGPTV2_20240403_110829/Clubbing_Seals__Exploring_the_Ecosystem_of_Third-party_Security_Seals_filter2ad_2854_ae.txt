given the current architecture of security seals, the honesty
of a seal provider, and the security of a seal-using website
seem to be contradictory goals.
The only solution to this conundrum appears to be a vig-
ilant webmaster. If a webmaster is able to ﬁx a discovered
vulnerability within the grace period allotted by the seal
provider, then the vulnerable website can avoid detection by
attackers, while the seal provider can maintain its certiﬁca-
tion honesty. As such, the companies that do not currently
provide a grace period – possibly thinking that this results
to higher security standards – are actually doing a disservice
to their clients.
7. RELATED WORK
While there has been some evidence of the improper cer-
tiﬁcation done by security seal providers, this evidence is ei-
ther anecdotal or gathered in an ad-hoc manner for a handful
of websites [16, 33]. To the best of our knowledge, this pa-
per is the ﬁrst to systematically evaluate the certiﬁcation of
popular third-party security seals, at a large scale and from
a security point of view.
In this section, we review prior
work on all aspects of third-party seals and the eﬀectiveness
of automated vulnerability scanners.
Third-party Seals
Third-party seals originally received attention from the user-
interface and economics community, where researchers tried
to identify whether a seal is recognizable and whether it
leads to an increase of trust and thus increased sales for
the seal-bearing website. In 2002, Head and Hassanein [10]
discovered that the awareness and inﬂuence of third-party
seals was low and calling for more research on the placement
and appearance of seals that would increase their awareness
level. Belanger et al. [4] studied the role of various factors
in how trustworthy a website appears to consumers, includ-
ing third-party security seals. The authors discovered that
the users valued security features (such as the presence of
encryption) more than security seals. Kimery et al. dis-
cover that while a consumer’s attitude in online merchants
is positively correlated with the consumer’s trust of those
merchants, the presence of third-party seals does not aﬀect
the consumer’s trust [19].
Interestingly, not all researchers have reached the same
conclusions. Houston et al. [14] survey 106 students and dis-
covered a positive correlation between the presence of a seal
and the perceived quality of a product which is in turn cor-
related with a consumer’s willingness to buy. Hu et al. [15]
empirically examined the eﬀects of various seals and, con-
trary to the aforementioned research, concluded that most
seals that deal with trust do in fact increase a consumer’s
intent to purchase. Later research by Kim et al. [18] showed
that seals have a positive eﬀect of reducing security-related
concerns of consumers, but only after the consumers are ed-
ucated about security and privacy threats, as well as the role
of third-party security seals.
The seal providers themselves rely mostly on testimoni-
als by existing clients in order to convince businesses to
adopt third-party seals. The majority of the testimonials,
as well as much of the seal-provider’s own advertising, re-
volve more around the increased sales and monetary gains
resulting from the adoption of a security seal, rather than
the number of vulnerabilities discovered.
Edelman [8] approached third-party seals from a diﬀerent
angle.
Instead of investigating the eﬀect of seals on con-
sumers, he investigated the trustworthiness of sites that em-
ploy third-party trust seals. Trust seals are diﬀerent from
the security seals that we investigated in this paper, in that
they certify a merchant’s trustworthiness, instead of their se-
curity. These trust seals are typically focusing on the privacy
policy of online merchants and attempt to ensure that the
merchant does not abuse the details collected by their cus-
tomers. Edelman argued that a trustworthy company does
not need an external entity to certify its trustworthiness. By
using “site safety” information provided by SiteAdvisor, he
found that websites using these seals are more likely to be
untrustworthy than websites that do not use trust seals.
Effectiveness of Automated Vulnerability Scanners
A core component of a third-party security seal vendor is
the automated vulnerability scanner that dictates whether
a website should be “awarded” the seal or not.
Doup´e et al. conducted the most recent survey of the thor-
oughness of black-box automated vulnerability scanners, by
evaluating eleven diﬀerent scanners against a known vulner-
able web application [7]. The authors discovered that many
of the evaluated scanners could not cope with modern web
927application technologies, such as the presence of JavaScript,
and thus could not fully explore websites, much less discover
all known vulnerabilities in a test web application.
One diﬀerence between security seals and generic web ap-
plication scanners that is worth mentioning, is the latter’s
higher tolerance for false positives. In a common penetra-
tion test, the tester can go through a relatively large number
of false positives without any adverse eﬀects for the tested
service. Contrastingly, security seal vendors do not have this
luxury, as false positives that stop the seal from appearing
on their clients websites will not be tolerated by the clients
who pay for the certiﬁcation of their websites. As such, it
is possible that the scanners of third-party seal providers
choose to err on the safe side in order to lower or altogether
avoid false positives which, almost unavoidably, will result
in less true positives.
8. CONCLUSION
Providers of security seals claim that websites that make
use of their services will appear more trustworthy to the eyes
of consumers and will thus have an increase in their sales. In
this paper, we put the security guarantees of seal providers,
i.e., the guarantees that indirectly inﬂuence a consumer’s
feelings of trust, to the test. Through a series of automatic
and manual experiments, we discovered that third-party se-
curity seals are severely lacking in their thoroughness and
coverage of vulnerabilities. We uncovered multiple rudimen-
tary vulnerabilities in websites that were certiﬁed to be se-
cure and showed that websites that use third-party security
seals do not follow security best practices any better than
websites that do not use seals. In addition, we proposed a
novel attack where seals can be used as vulnerability oracles
and describe how an attacker can abuse seal providers to dis-
cover the exact exploit for any given vulnerable seal-using
website.
Overall, our ﬁndings show that current state-of-practice
of third-party security seals is far from ideal. While we pro-
pose steps that seal providers can take that will substantially
increase the accuracy and eﬀectiveness of their security cer-
tiﬁcation, the issue of inadvertently creating a vulnerability
oracle seems to be central to the current architecture of secu-
rity seals and appears to not have a technical solution which
does not sacriﬁce, either the honesty of a seal provider, or
the security of the certiﬁed website.
Acknowledgments: We want to thank the anonymous
reviewers for the valuable comments. This research was per-
formed with the ﬁnancial support of the Prevention against
Crime Programme of the European Union (B-CCENTRE),
the Research Fund KU Leuven, and the EU FP7 projects
NESSoS and STREWS.
9. REFERENCES
[1] L. Arsene. Xbox Live Accounts of Microsoft
Employees Hacked Using Social Engineering.
http://www.hotforsecurity.com/blog/xbox-live-
accounts-of-microsoft-employees-hacked-using-
social-engineering-5716.html.
[2] A. Barth. HTTP State Management Mechanism.
IETF RFC, 2011.
[3] A. Barth, C. Jackson, and J. C. Mitchell. Robust
defenses for cross-site request forgery. In Proceedings
of the 15th ACM conference on Computer and
communications security, CCS ’08, pages 75–88, New
York, NY, USA, 2008. ACM.
[4] F. Belanger, J. S. Hiller, and W. J. Smith.
Trustworthiness in electronic commerce: the role of
privacy, security, and site attributes. The Journal of
Strategic Information Systems, 11(3):245–270, 2002.
[5] P. Bright. Anonymous speaks: the inside story of the
HBGary hack. http://arstechnica.com/tech-
policy/2011/02/anonymous-speaks-the-inside-
story-of-the-hbgary-hack/.
[6] A. Z. Broder, S. C. Glassman, M. S. Manasse, and
G. Zweig. Syntactic Clustering of the Web. Computer
Networks and ISDN Systems, 29(8-13), Sept. 1997.
[7] A. Doup´e, M. Cova, and G. Vigna. Why Johnny Can’t
Pentest: An Analysis of Black-box Web Vulnerability
Scanners. In Proceedings of the Conference on
Detection of Intrusions and Malware and Vulnerability
Assessment (DIMVA), Bonn, Germany, July 2010.
[8] B. Edelman. Adverse Selection in Online “Trust”
Certiﬁcations. In Proceedings of the 11th International
Conference on Electronic Commerce, ICEC ’09, pages
205–212, 2009.
[9] S. Fox. Pew Research : 51% of U.S. Adults Bank
Online.
http://www.pewinternet.org/2013/08/07/51-of-u-
s-adults-bank-online/.
[10] M. M. Head and K. Hassanein. Trust in e-commerce:
evaluating the impact of third-party seals. Quarterly
Journal of Electronic Commerce, 3:307–326, 2002.
[11] OpenSSL ‘Heartbleed’ vulnerability (CVE-2014-0160).
https://www.us-cert.gov/ncas/alerts/TA14-098A.
[12] J. Hodges, C. Jackson, and A. Barth. HTTP Strict
Transport Security (HSTS). IETF RFC, 2012.
[13] J. Horrigan. Pew Research : Online Shopping.
http://www.pewinternet.org/2008/02/13/online-
shopping/.
[14] R. W. Houston and G. K. Taylor. Consumer
Perceptions of CPA WebTrust assurances: Evidence of
an Expectation Gap. International Journal of
Auditing, 3(2):89–105, 1999.
[15] X. Hu, Z. Lin, and H. Zhang. Trust promoting seals in
electronic markets: an exploratory study of their
eﬀectiveness for online sales promotion. Journal of
Promotion Management, 9(1-2):163–180, 2002.
[16] T. Hunt. Why I am the world’s greatest lover (and
other worthless security claims).
http://www.troyhunt.com/2013/05/why-i-am-
worlds-greatest-lover-and.html.
[17] J. P. John, F. Yu, Y. Xie, A. Krishnamurthy, and
M. Abadi. deSEO: Combating Search-result Poisoning.
In Proceedings of the 20th USENIX Conference on
Security, SEC’11, 2011.
[18] D. J. Kim, C. Steinﬁeld, and Y.-J. Lai. Revisiting the
role of web assurance seals in business-to-consumer
electronic commerce. Decision Support Systems,
44(4):1000–1015, 2008.
[19] K. M. Kimery and M. McCord. Third-party
assurances: the road to trust in online retailing. In
Proceedings of the 35th Annual Hawaii International
Conference on System Sciences. IEEE, 2002.
928[20] B. Krebs. A First Look at the Target Intrusion,
Malware. http://krebsonsecurity.com/2014/01/a-
first-look-at-the-target-intrusion-malware/.
[21] B. Krebs. Adobe Breach Impacted At Least 38 Million
Users. http://krebsonsecurity.com/2013/10/adobe-
breach-impacted-at-least-38-million-users/.
[22] A. Langley. Apple’s SSL/TLS Bug. https://www.
imperialviolet.org/2014/02/22/applebug.html.
[23] M. Marlinspike. New Tricks for Defeating SSL in
Practice. Blackhat, 2009.
[24] McAfee. The Economic Impact of Cybercrime and
Cyber Espionage.
http://www.mcafee.com/sg/resources/reports/rp-
economic-impact-cybercrime.pdf.
[25] N. Nikiforakis, L. Invernizzi, A. Kapravelos,
S. Van Acker, W. Joosen, C. Kruegel, F. Piessens, and
G. Vigna. You are what you include: large-scale
evaluation of remote javascript inclusions. In
Proceedings of the 2012 ACM conference on Computer
and Communications Security (CCS), pages 736–747,
2012.
[26] N. Olivarez-Giles. Snapchat Data Breach Exposes
Millions of Names, Phone Numbers.
http://blogs.wsj.com/digits/2014/01/01/
snapchat-alleged-leak-4-million-users/.
[27] M. Rajab, L. Ballard, N. Jagpal, P. Mavrommatis,
D. Nojiri, N. Provos, and L. Schmidt. Trends in
circumventing web-malware detection. Google, Google
Technical Report, 2011.
[28] D. Reisinger. Syrian Electronic Army hacks Forbes,
steals user data.
http://www.cnet.com/news/syrian-electronic-
army-hacks-forbes-steals-user-data/.
[29] D. Ross and T. Gondrom. HTTP Header
X-Frame-Options. IETF RFC, 2013.
[30] S. Stamm, B. Sterne, and G. Markham. Reining in the
web with content security policy. In Proceedings of the
19th international conference on World wide web,
WWW ’10, pages 921–930, New York, NY, USA,
2010. ACM.
[31] Trend Micro Site Safety Center.
http://global.sitesafety.trendmicro.com/.
[32] M. Vasek and T. Moore. Identifying Risk Factors for
Webserver Compromise. In Proceedings of the
Eighteenth International Conference on Financial
Cryptography and Data Security, FC’ 14, 2014.
[33] J. Vijayan. ‘Hacker Safe’ seal: Web site shield, or
target? http:
//www.computerworld.com/s/article/9057878/
_Hacker_Safe_seal_Web_site_shield_or_target_?
[34] M. West. Play safely in sandboxed IFrames. 2013.
APPENDIX
Client-side Security Mechanisms
Here we present brief descriptions of the client-side security
mechanisms that we used as indicators of an overall “security
hygiene” when comparing seal-using websites, to websites of
an equivalent ranking and category that do not use seals.
• HTTP Strict Transport Security (HSTS): HSTS
is a security policy mechanism where a web server can
force complying browsers to interact with it using only
HTTPS connections [12]. By sending out the HSTS
policy via the appropriate HTTP header, a web server
speciﬁes a period of time during which the browser is
instructed that all requests to that website need to be
sent over HTTPS, regardless of what a user requests.
• Secure Cookies: Using the Secure ﬂag on Set-Cookie
headers limits the scope of a cookie to only secure chan-
nels [2], making the cookie less likely to be stolen by a
MitM attacker.
• HttpOnly Cookies: Cookies are, by default, acces-
sible to JavaScript code, which can lead to the theft
of cookies in an XSS attack. To defend against this, a
website operator can use the HttpOnly ﬂag on cookies,
making them unavailable to client-side JavaScript.
• Content Security Policy (CSP): To mitigate a wide
range of injection vulnerabilities, such as Cross-Site
Scripting (XSS), a website operator can make use of
the CSP mechanism. CSP provides a standard HTTP
header that allows website owners to declare approved
sources of content that browsers should be allowed to
load on any given webpage [30]. Whenever a requested
resource originates from a source that is not deﬁned in
the policy, it will not be loaded.
• X-Frame-Options (XFO): When an attacker is able
to load a website, or part of a website in a frame or
iframe element, the website might be vulnerable to
Clickjacking attacks. The XFO response header can
be used to instruct a user’s browser whether a certain
page is allowed to be embedded in a frame [29].
• iframe sandboxing: The sandbox attribute for the
iframe element, introduced in HTML5, enables a set
of extra restrictions on any content loaded in a frame,
which can be used to limit the capabilities given to
untrusted framed pages [34].
• Anti-CSRF Tokens: The “best practice” defense for
Cross-Site Request Forgery (CSRF) attacks is the in-
clusion of a secret long random token (also known as
nonce) with each request, and validation of that token
at the server side [3]. To check for nonces, we searched
for forms that contained a hidden form element that
was most likely used as a nonce. More speciﬁcally, form
elements were marked as nonces when their name con-
tained the keywords “token”, “nonce”, or “csrf”, and
when their value was a long alpha-numerical string.
• X-Content-Type-Options: Internet Explorer has a
MIME-sniﬃng feature that will attempt to determine
the content type for each downloaded resource. This
feature, however, can lead to security problems for servers
hosting untrusted content. To prevent MIME-sniﬃng,
a web server can send the X-Content-Type-Options re-
sponse header with the nosniff value.
• SSL-stripping Vulnerable Form: For performance
reasons, some websites only implement HTTPS for cer-
tain webpages that contain sensitive information (such
as a log-in page), which may result in forms vulnera-
ble to SSL stripping [23]. As a result, a MitM attacker
can replace all HTTPS form links on the HTTP page
to HTTP links, which will allow the attacker to later
intercept sensitive form data.
929