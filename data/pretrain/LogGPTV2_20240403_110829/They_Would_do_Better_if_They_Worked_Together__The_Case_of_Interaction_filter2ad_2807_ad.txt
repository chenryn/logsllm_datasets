researchers who tested the PWMs were instructed to follow
these descriptions using the interaction model of the respective
PWM. If a feature such as autosave was not available or work-
ing, we tried to ﬁnd a solution by using a simple Google query
including the name of the PWM, the term “password manager”
and the feature in question to ﬁnd existing settings that resolve
the issue. After a ﬁrst pilot run in which we tested each PWM
with all MWEs, we ﬁxed remaining bugs and obtained an
overview over the different approaches PWMs deploy in order
to ﬁnalize our rating. We included these considerations for the
ratings in order to prevent unfair treatment of more manual
approaches like having to click an input ﬁeld to trigger the
PWM. We also used this pilot to clear up any confusion about
interaction descriptions and conditions between the authors.
Password Manager Approaches. PWMs differ vastly in the
approaches they use to implement autosave, autoﬁll and au-
tologin features. While the terms suggest automatic behavior,
they often require manual intervention. An overview of the
strategies encountered during the PWM tests is given in
Table II. The approaches described for each PWM were used
as a baseline to assign codes to each MWE. If a PWM did not
support feature e. g. TOTP, we used the code “Not Applicable”
in contrast to “No Solution Found” for PWMs that supported
the feature, although it was not available or working in both
cases. We did however count it as “No Solution Found” when
PWMs did not support common approaches like HTTP Basic
Authentication (W01 & W02) or simple input ﬁeld uses like
pin entry (AA-01).
As can be seen in Table II, PWMs usually autosave cre-
dentials by asking after a login was submitted. In a few
cases such as Norton, 1Password or Blur, this feature can be
triggered manually or enabled in the settings. Only Passbolt
does not offer an autosave feature. For autoﬁll, about half of
our tested PWMs ﬁlled the stored credentials automatically
as soon as the login page is loaded, while the others require
manual intervention such as using a context menu or clicking
an icon within the input ﬁelds. Only Keeper uses an approach
in between by automatically asking if credentials should be
autoﬁlled, but still requiring the user to manually agree.
Finally, we found that as few as four out of our 15 PWMs
support an autologin feature. Although two others, LastPass
and KeePassXC, allow to control autologin in their settings,
the remaining nine PWMs do not offer the feature at all.
Study Protocol. Following the study protocol, two authors
reviewed all PWMs they did not review during the piloting. For
each test, we re-installed the extensions and started the PWMs
with fresh user proﬁles, to ensure a clean testing environment.
We went
through the entire set of MWEs, followed the
instructions given on each test case page and based our rating
on the conditions we set for a seamless interaction. After
rating all managers this way, the two involved authors merged
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:15:22 UTC from IEEE Xplore.  Restrictions apply. 
1374
the results together with the third author who conducted the
piloting for that PWM. We used this very elaborate approach in
order to capture as many workarounds and additional settings
as possible, detect inconsistent behavior and prevent unfair
ratings. Since some of the problematic interactions we examine
can be considered edge cases, we refrain from ranking the
tested PWMs or apply similarly subjective measures and com-
parisons. This is especially important as we do not consider
the actual real world frequency of the issues found in our set
of interactions.
B. Limitations
Our analysis was conducted between 11/13/2020 and
11/18/2020 with at that time most recent versions for each
PWM. As PWMs might have been updated after our analysis,
more recent versions could behave differently due to added
or modiﬁed support for features or known issues. Similar,
user feedback for more recent versions of a PWM might raise
new issues we did not include in our analysis. We used four
different labels to distinguish how well a PWM was able
to deal with the different interactions. Although all authors
discussed the fulﬁllment criteria for each interaction together,
the individual ratings might be subjective and can depend on
the respective settings and overall setup. However, since we
tested all PWMs with three authors, we are conﬁdent to have
correctly estimated the capabilities of each. We further argue
that if a setting was available, but hard to ﬁnd and not regarded
in our evaluation, this decrease in usability can also lead to a
rating such as ’No solution found’. Additionally, some settings
might depend on settings only available in e. g. beta builds of
a PWM which were not used in our analysis. Furthermore,
PWMs might include manual or hardcoded workarounds for
certain websites, which would not necessarily trigger in our
MWEs and lead us to mark the respective interaction as failed.
While we base all interactions on real user feedback and our
implementations follow examples given in reviews, support
requests and GitHub issues, we cannot guarantee that all
examples are reﬂective of common real world issues. However,
all problems depicted in our MWEs are valid problems that
represent obstacles PWMs face. In many cases, we prioritized
having more different interactions to increase problem diver-
sity over testing multiple variants of the same issue. Since
PWMs use a variety of approaches to implement different
features such as autoﬁll or autosave, this might have led to
our evaluation favoring certain PWMs.
C. Results
The results of our evaluation are summarized in table V-C.
In the following, we will describe interesting ﬁndings and
interactions per category.
Additional Elements (Authentication Related). In this cat-
egory, our MWEs were largely unsupported. AA-01 (pin ﬁeld
required for authentication) proved to be especially difﬁcult,
with only two PWMs receiving conditional ratings at best.
This is likely due the ﬁve input ﬁelds included,
that are
combined to an array and therefore use the same name-
attribute. The example further contains no ﬁeld with the type
password, which might disturb PWM ﬁeld detection. Only
AA-03 (login page contains both login and registration forms),
received seven (46%) seamless PWM ratings. Three other
cases, including tests for additional required authentication
ﬁelds (e. g. for pin codes or last names), received up to three
seamless, requiring workarounds or outright failing with most
PWMs. This is due to poor or missing support for additional
or custom authentication ﬁelds. Most PWMs did not offer to
store information other than a username and a password.
Additional Elements (Not Authentication Related). This
category contains cases with website elements that are not
directly part of the authentication process such as radio but-
tons or checkboxes (e. g. Remember Login buttons), but also
unrelated form elements (e. g. setting panels). In interaction
AN-01 (admin panel with multiple user authentication ﬁelds),
seven (46%) PWMs got a seamless rating, successfully ﬁlling
admin credentials while leaving out credential ﬁelds for other
users. Another problematic interaction was AN-02, which
contained a Remember Me checkbox and a panel consisting of
multiple radio buttons representing choices that a PWM should
remember. Only one PWM provided a seamless experience
by directly storing the choices with the credentials, therefore
demonstrating an exemplary solution to this autosave problem,
while two being able to store custom ﬁelds on manual interac-
tion. Interaction AN-03 (multiple input elements outside of the
login form) includes scripts that report when a PWM interacts
with more than the necessary input ﬁelds by checking if events
on the other elements are triggered. Here, ten PWMs (66%)
correctly avoided ﬁeld interactions. This case only concerned
PWMs that scan and potentially test (e. g. click or send a
keyboard event) all page input ﬁelds. Surprisingly, all default
browser PWMs failed this test, interacting with each input ﬁeld
while submitting the form. Finally, we reconstructed upload
ﬁelds that some users reported to be obstructed by the PWM
extension in AN-04. However, we found them to work with
all PWMs, representing one of two interactions that received
only seamless rating.
Domain Matching. This category covered some of the most
commonly reported issues such as account usage across mul-
tiple subdomains (D-01) or multiple redirects after login,
obstructing autosave functionalities (D-05). Both performed
noticeably better than others, with nine (60%, D-01) and
ten (66%, D-05) seamless interactions. This implies that
these are common issues which are likely solved by defaults
similar to the same-origin policy [19], [23], [24]. Another
interesting interaction is D-02 (account management across
multiple different second-level or top-level domains), inspired
by an issue with e. g. ShareLaTeX’s move to Overleaf [9], or
domain moves and multi-service domains like discord.gg and
discord.com. In all of these cases, multiple different domains
point towards the same service. D-02 was not seamlessly
handled by any PWM, likely because there is no reliable
way to automatically detect if a service or an authentication
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:15:22 UTC from IEEE Xplore.  Restrictions apply. 
1375
RESULTS FOR OUR EVALUATION TESTING PASSWORD MANAGERS AGAINST THE PREVIOUSLY GENERATED MINIMAL WORKING EXAMPLES.
TABLE III
Interaction Legend:
Seamless , Manual , No Solution Found , Not Applicable
Color scheme optimized for color blindness and b/w printouts.
Nr Description
Additional Elements (Auth)
AA-01 Multiple input ﬁelds for single input, e.g. 5 input ﬁelds for a 5-letter PIN
AA-02 Multiple login buttons (e.g. user & password ﬁelds, Google signin, SSO)
AA-03 Site includes more authentication-related forms than necessary (e.g. login & registration)
AA-04 Site includes more authentication ﬁelds than user & password (e.g. lastname)
Additional Elements (Non-Auth)
AN-01 Site includes an admin panel with multiple user authentication ﬁelds
AN-02 Site includes checkbox and radio buttons that the PWM is supposed to remember (e.g. ”Remember
AN-03 Site with interactable elements such as drop-downs unrelated to authentication, but affected by the
Login”)
PWM
AN-04 Site with form submits unrelated to authentication
Domain Matching
D-01 Base domain with subdomains using the same credentials
D-02 Multiple distinct domains (e.g. ShareLaTeX & Overleaf) using the same authentication realm
D-03 Base domain with subdomains using separate services
D-04 Login is available via both HTTP (port 80) and HTTPS (port 443)
D-05 Multiple redirects after login submission that obstruct auto-save
D-06 Login form in an iframe which loads a different website
D-07 Base domain with several paths or subpages with seperate services
Input Fields
Input ﬁeld deﬁnition includes e.g. ”code” substring, can be confused with TOTP codes.
Input ﬁeld has misleading or unusual name, e.g. ”auth” or ”IDToken1” for username ﬁelds
Input ﬁeld has misleading or unusual type, e.g. ”password” for TOTP ﬁelds
I-01
I-02
I-03
I-04 autocomplete tags are used within input ﬁelds (e.g. autocomplete=username)
I-05 No information on type of input ﬁeld (i.e. no hints in ID, name, type or other attributes)
I-06 Form with  for username instead of input ﬁeld
I-07
I-08
I-09 Website manipulates input data to a semantical equivalent (e.g. changes email to uppercase)
Input ﬁeld has no type attribute
Input ﬁeld has a max-length smaller than the pre-generated password
JavaScript
J-01 Hidden password ﬁeld (e.g. display:none HTML-style)
J-02 Submit button is only enabled after registering a keypress event
J-03 Multiple login steps on one page: only user ﬁeld initially visible, password shows up in later step.
J-04 Multiple login steps over multiple pages: only user ﬁeld initially visible, password shows up in
J-05 Site manipulates input in some way (e.g. substitutes with ****, adds whitespaces, deletes automated
later step.
inputs)
J-06 Site with a dummy password ﬁeld that is swapped with an initially hidden real one on interaction
Non-Standard Forms
N-01 No form tag around the login ﬁelds that the (login-)data via Ajax
N-02 Form element is a custom WebComponent-Tag
N-03 Submit button is a div with role=button
N-04 Form submit button is not part of the form itself
N-05 Hyperlink instead of submit button that triggers JavaScript
Timing
T-01 Delay initializing authentication ﬁelds (pages load slowly)
T-02 Delay between generation of TOTP and input submission (e.g. due to users waiting too long)
Web Standards
W-01 HTTP basic authentication as login method
W-02 Multiple ﬁles behind HTTP basic authentication triggering multiple authentication requests that
might fail due to request-reply mismatches
a
r
i
v
A
n
o
t
r
o
N
s
s
a
P
t
s
a
L
e
n
a
l
h
s
a
D
r
u
l
B
n
e
d
r
a
w
Password Manager
X
C
X
d
s
r
s
o
a
w
p
e
s
s
e
a
K
P
1
m
r
o
F
o
b
o
R
r
e
p
e
e
K
s
s
a
p
n
E
t
i
B
t
l
o
b
s
s
a
P
M
W
P
M
W
P
M
W
P
e
g
d
E
e
m
o
r
h
C
x
o
f
e