User: 如何利用 Docker 容器化部署应用程序？请提供一个可行的 Docker Compose 示例。
Assistant: Docker 容器化部署应用程序的步骤：

1. 准备 Dockerfile 文件

在应用程序的根目录下创建 Dockerfile 文件，并在该文件中定义应用程序运行所需的镜像和配置信息。

例如，对于一个使用 Python 编写的 Flask 程序，Dockerfile 可以如下所示：

```
FROM python:3.7-alpine

RUN apk add --no-cache gcc musl-dev linux-headers

WORKDIR /app

COPY requirements.txt .

RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD ["python", "app.py"]
```

2. 创建 Docker 镜像

运行以下命令，创建 Docker 镜像：

```
docker build -t my-flask-app .
```

其中，-t 参数指定镜像名称为 my-flask-app。

3. 创建 Docker Compose 文件

创建一个 docker-compose.yml 文件，定义应用程序的服务和容器的配置信息。

例如，以下是一个运行 Flask 应用程序的 Docker Compose 示例：

```
version: "3.7"

services:
  web:
    image: my-flask-app
    ports:
      - "5000:5000"
```

该文件定义了一个服务 web，该服务使用 my-flask-app 镜像，并将容器的 5000 端口映射到主机的 5000 端口。

4. 运行 Docker Compose

运行以下命令，启动应用程序：

```
docker-compose up
```

该命令将启动 web 服务，并在控制台输出应用程序的日志信息。

5. 访问应用程序

在浏览器中输入 http://localhost:5000，即可访问部署在 Docker 容器中的应用程序。

以上是一个简单的 Docker 容器化部署应用程序的示例，可以根据具体的应用程序需求，进行相应的配置和修改。