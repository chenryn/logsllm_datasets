![](../../.gitbook/assets/1571410207_5da9d11f4a8e7.png)
重置root登录密码
![](../../.gitbook/assets/1571410270_5da9d15e049c4.png)
好，已经登录成功了
![](../../.gitbook/assets/1571410326_5da9d196b7612.png)
找到了一个flag，看来不是这个
![](../../.gitbook/assets/1571410509_5da9d24d31e65.png)
查看本地开放的端口，就是pure-ftp有可疑，毕竟只有21端口咱们没有使用到
![](../../.gitbook/assets/1571410626_5da9d2c20d3d4.png)
找到了FTP的密码
    root@db:~# cat /etc/pure-ftpd/pureftpd.passwd 
    celes:$1$LwZNkFH0$8rq4AbiYLXkfSMPXB1psV/:1000:1000::/var/log/./::::::::::::
  咱们根目录有一个叫.words.txt文件，可能是密码表，使用john进行爆破，还是找不到密码
![](../../.gitbook/assets/1571411024_5da9d4507cdd0.png)
**其实有个问题很奇怪的，正常来说，一个靶机就只有一张网卡，但是这个靶机就不同，有两张网卡，而且是不同的网段**
![](../../.gitbook/assets/1571411134_5da9d4be152f6.png)
于是，我抓一下eth1网卡的流量，看到有人登录ftp
![](../../.gitbook/assets/1571411324_5da9d57c74b61.png)
以十六进制的方式查看，找到了ftp账号和密码，他们使用的用户名`celes`和密码登录`im22BF4HXn01`
![](../../.gitbook/assets/1571411463_5da9d6071d866.png)
ssh登录上去
![](../../.gitbook/assets/1571411523_5da9d64352975.png)
可以看到这是ftp连接脚本
![](../../.gitbook/assets/1571411645_5da9d6bd09860.png)
在操作历史记录里面找到一个可疑操作，这是一个python图片隐写术的库
    celes@dev1:~$ cat .bash_history 
    stepic --help
![](../../.gitbook/assets/1571411773_5da9d73d86d75.png)
也就是说，图片是关键，我们找到图片kvasir.png，使用xxd导出图片
![](../../.gitbook/assets/1571452853_5daa77b5abeea.png)
还原图片
          root@kali:/tmp# cat k.hex | xxd -r -p  k.jpg
  一张很诡异的外星人图片，虽然是打不开
![](../../.gitbook/assets/1571453067_5daa788b3977c.png)
使用`stepic`，我们可以从图像中检索一些隐藏的数据`k.png`。 **(pip3 install stepic，pip不可以)，**
这样就找到了一串十六进制的字符串
```
root@kali:/tmp# stepic -i k.jpg -d
89504e470d0a1a0a0000000d494844520000012200000122010300000067704df500000006504c5445ffffff00000055c2d37e00000104494441540899ed98c90dc32010459152804b72eb2ec9054422304bc089655f180ec9fb0730f07cfa9a0552420821f43fcaa6674aeb5e96dbe23b1b5434a58be559bf1e59befa03a848aa5ab22de690f2d530a8895473086a365500e7a1265132b5b3bbfc05358e7a57640b919bba0d358eeab55c9c418da7cc0df1a576a2792fa561ad035434a5920b808588d974e215d4584acff4065626ffe9db47a8e194eec805a00d7621830aa6acffd40c95d5a6fa27d404cae555e13475410550e6cca113ed72145424a56ee8ab4f8989ecb5196a02d5bdfa2477e83333410553d97ba093cc04154c89a439ba880ea881944c2d3aea0a6a0e75acc8528c4550e1144208a15fd70b88df9bb4ae0a3dc20000000049454e44ae426082
```
接着生成文件
    echo 89504e470d0a1a0a0000000d494844520000012200000122010300000067704df500000006504c5445ffffff00000055c2d37e00000104494441540899ed98c90dc32010459152804b72eb2ec9054422304bc089655f180ec9fb0730f07cfa9a0552420821f43fcaa6674aeb5e96dbe23b1b5434a58be559bf1e59befa03a848aa5ab22de690f2d530a8895473086a365500e7a1265132b5b3bbfc05358e7a57640b919bba0d358eeab55c9c418da7cc0df1a576a2792fa561ad035434a5920b808588d974e215d4584acff4065626ffe9db47a8e194eec805a00d7621830aa6acffd40c95d5a6fa27d404cae555e13475410550e6cca113ed72145424a56ee8ab4f8989ecb5196a02d5bdfa2477e83333410553d97ba093cc04154c89a439ba880ea881944c2d3aea0a6a0e75acc8528c4550e1144208a15fd70b88df9bb4ae0a3dc20000000049454e44ae426082 | xxd -r -p > kvasir.png
因此，我们还有另一个图像文件。在默认查看器中打开会`kali`导致错误，拖到windows环境下就可以看到图片
![](../../.gitbook/assets/1571453402_5daa79da42802.png)
解析二维码的内容，
 **Nk9yY31hva8q**
![](../../.gitbook/assets/1571453440_5daa7a00d6bc2.png)
登录时`celes`，我们收到邮件通知，我们去查看一下有什么邮件
![](../../.gitbook/assets/1571453562_5daa7a7a71de5.png)
在db主机那里找了terra的服务器，IP是192.168.3.50
![](../../.gitbook/assets/1571453764_5daa7b44cd9f0.png)
找了个扫描器的脚本，查看这台服务器开放了那个端口
    #!/usr/bin/env python
    from socket import *
    if __name__ == '__main__':
        target = raw_input('Enter host to scan: ')
        targetIP = gethostbyname(target)
        print 'Starting scan on host ', targetIP
        #scan reserved ports
        for i in range(0, 65535):
            s = socket(AF_INET, SOCK_STREAM)
            result = s.connect_ex((targetIP, i))
            if(result == 0) :
                print 'Port %d: OPEN' % (i,)
            s.close()
  开放了22，4444端口
![](../../.gitbook/assets/1571454076_5daa7c7c03564.png)
使用上面的密码登录ssh，发现密码错误
![](../../.gitbook/assets/1571454125_5daa7cad268f1.png)
nc查看一下4444端口
![](../../.gitbook/assets/1571454252_5daa7d2cb8eca.png)
回想起来，我记得我们在目标上找到了一个词表`192.168.2.200`。略过列表`.words.txt`，我注意到上面列表中的一项匹配。`snaaa`是的字谜`sanaa`。同样`obner`是的字谜`borne`。
EXP脚本
    from socket import socket
    def isAnagram(str1, str2):
        str1_list = list(str1)
        str1_list.sort()
        str2_list = list(str2)
        str2_list.sort()
        return (str1_list == str2_list)
    words = list(open('.words.txt', 'r'))