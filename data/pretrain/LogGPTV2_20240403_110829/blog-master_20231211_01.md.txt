## PostgreSQL 17 preview - btree index backward scan (order by desc 场景)优化  
### 作者                    
digoal                    
### 日期                    
2023-12-11               
### 标签                    
PostgreSQL , PolarDB , DuckDB , btree , order by desc , backward scan      
----                    
## 背景     
本优化order by desc 场景可以少扫描1个leaf page.   
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=c9c0589fda0edc46b8f5e7362b04636c0c4f0723  
```  
Optimize nbtree backward scan boundary cases.  
author	Peter Geoghegan 	  
Fri, 8 Dec 2023 19:05:17 +0000 (11:05 -0800)  
committer	Peter Geoghegan 	  
Fri, 8 Dec 2023 19:05:17 +0000 (11:05 -0800)  
commit	c9c0589fda0edc46b8f5e7362b04636c0c4f0723  
tree	c09896c93142dc771714209bf94eb8c0aa595090	tree  
parent	b437571714707bc6466abde1a0af5e69aaade09c	commit | diff  
Optimize nbtree backward scan boundary cases.  
Teach _bt_binsrch (and related helper routines like _bt_search and  
_bt_compare) about the initial positioning requirements of backward  
scans.  Routines like _bt_binsrch already know all about "nextkey"  
searches, so it seems natural to teach them about "goback"/backward  
searches, too.  These concepts are closely related, and are much easier  
to understand when discussed together.  
Now that certain implementation details are hidden from _bt_first, it's  
straightforward to add a new optimization: backward scans using the   
Reviewed-By: Matthias van de Meent   
Discussion: https://postgr.es/m/CAH2-Wz=PI:EMAIL  
```  
```  
+--  
+-- Add coverage for optimization of backwards scan index descents  
+--  
+-- Here we expect _bt_search to descend straight to a leaf page containing a  
+-- non-pivot tuple with the value '47', which comes last (after 11 similar  
+-- non-pivot tuples).  Query execution should only need to visit a single  
+-- leaf page here.  
+--  
+-- Test case relies on tenk1_hundred index having a leaf page whose high key  
+-- is '(48, -inf)'.  We use a low cardinality index to make our test case less  
+-- sensitive to implementation details that may change in the future.  
+set enable_seqscan to false;  
+set enable_indexscan to true;  
+set enable_bitmapscan to false;  
+explain (costs off)  
+select hundred, twenty from tenk1 where hundred   Index Scan Backward using tenk1_hundred on tenk1  
+         Index Cond: (hundred   Index Scan Backward using tenk1_hundred on tenk1  
+         Index Cond: (hundred <= 48)  
+(3 rows)  
+  
+select hundred, twenty from tenk1 where hundred <= 48 order by hundred desc limit 1;  
+ hundred | twenty   
+---------+--------  
+      48 |      8  
+(1 row)  
+  
```  
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")