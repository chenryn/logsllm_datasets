title:Xunlei: Peer-Assisted Download Acceleration on a Massive Scale
author:Prithula Dhungel and
Keith W. Ross and
Moritz Steiner and
Ye Tian and
Xiaojun Hei
Xunlei: Peer-Assisted Download Acceleration
on a Massive Scale
Prithula Dhungel1, Keith W. Ross1, Moritz Steiner2,
Ye Tian3, and Xiaojun Hei4
1 Polytechnic Institute of NYU, Brooklyn, NY, USA
2 Bell Labs, Alcatel-Lucent, Holmdel, NJ, USA
3 University of Science and Technology of China, Hefei, China
4 Huazhong University of Science and Technology, Hubei, China
Abstract. We take a close look at Xunlei, an enormously popular down-
load acceleration application in China. Xunlei forms a complex ecosys-
tem, with Xunlei peers extensively interacting with independent HTTP
and FTP servers, cyberlockers (such as megaupload and hotﬁle), the Bit-
Torrent and eDonkey ﬁle-sharing systems, as well as with other Xunlei
peers. After performing a protocol analysis on Xunlei, we develop a com-
prehensive measurement infrastructure, enabling us to gain new insights
into the scale of content, swarm sizes, and several unique characteristics
of the system mechanisms in Xunlei.
1
Introduction
In this paper, we take a close look at Xunlei, an enormously popular download
acceleration application in China. Xunlei is largely conﬁned to China and has
received relatively little attention in the research community to date. It is an
interesting application for many reasons. First, it employs several interesting
innovations, many of which we will explore in this measurement study. Second,
it forms a complex ecosystem, extensively interacting with independent servers,
cyberlockers (such as megaupload and hotﬁle), and two major peer-to-peer (P2P)
ﬁle sharing systems. Third, as demonstrated in our study, it is deployed on a
massive scale. To the best of our knowledge, only a few preliminary studies
of Xunlei have been carried out to date, focusing on the protocols used for
transferring data among peers [4,5].
When installing the Xunlei client, a plug-in is also installed into Internet
Explorer. With this plug-in installed, when a user downloads a ﬁle from within
the browser, the Xunlei client takes over the download. Xunlei can be used to
download various types of ﬁles including video ﬁles, pdf ﬁles, executables, and
even email attachments. The Xunlei client supports multiple protocols for ﬁle
download, including HTTP, FTP, RTSP, and MMS. The Xunlei client also serves
as a BitTorrent (BT) and eDonkey client. It was reported recently that Xunlei
has recently become the most popular BitTorrent client [2].
Xunlei further provides peer-assisted and server-assisted download accelera-
tion. Whenever the Xunlei client is instructed to download a ﬁle from an HTTP
N. Taft and F. Ricciato (Eds.): PAM 2012, LNCS 7192, pp. 231–241, 2012.
c(cid:2) Springer-Verlag Berlin Heidelberg 2012
232
P. Dhungel et al.
server, from an FTP server, from the BT system, or from the eDonkey system,
the Xunlei client contacts Xunlei’s centralized tracker, which provides the client
a list of other Xunlei peers that share this ﬁle. The client can then download
portions of the ﬁle from other Xunlei peers while also downloading portions from
the original source. Xunlei clients communicate with the tracker and communi-
cate with each other using proprietary Xunlei protocols. Moreover, in addition
to providing a list of Xunlei peers that have the ﬁle, the tracker also provides
servers (HTTP, FTP) that have the ﬁle. To the best of our knowledge, Xunlei is
the only widely-deployed download manager that provides both peer and server
assistance when downloading ﬁles.
To assist users in locating ﬁles, Xunlei provides a search engine, gougou.com,
which indexe a subset of the content indexed by the Xunlei tracker system. For
each Gougou indexed ﬁle, there is a pointer to a download link (e.g., to an HTTP
server, an FTP server, or a BT infohash) for initiating download with the Xunlei
client. Recently, the Xunlei network also started a VoD service, known as Xun-
lei Kankan, which serves thousands of movies and TV shows. To view Kankan
videos, a user needs to install the proprietary Kankan client. As with Xunlei ﬁle
downloads, Kankan video distribution is peer-assisted. An extended version of this
paper is available as a technical report [3]. Our contributions in this paper include:
1. Xunlei uses encrypted proprietary protocols for communication between
Xunlei clients, between Xunlei client and Xuneli tracker, and between Xunlei
client and Xunlei’s proprietary distributed hash table (DHT). We performed
a protocol analysis, uncovering Xunlei protocol message formats, and formats
for Xunlei peer IDs.
2. Based on our understanding of the Xunlei protocols, we developed a mea-
surement infrastructure for the Xunlei ecosystem. Our measurement plat-
form consists of a Xunlei DHT crawler, a Xunlei tracker crawler, and several
website crawlers.
3. Given that the Xunlei tracker tracks content emanating from many diﬀerent
sources and protocols, we investigated the scale of content being tracked. We
compared the amount of content being tracked by Xunlei with the amount
of content being tracked by the (currently) most popular BT tracker. We
found swarm sizes in Xunlei and BT to be of comparable size.
4. We performed an analysis of whether content ﬂows from BT to HTTP and
FTP servers via Xunlei. We found that such ﬂows are common for popular
BT content, and often the ﬁles are deposited into cyberlocker sites. We ob-
served that Xunlei is also providing peer-assisted download acceleration for
large email attachments hosted in mail servers.
5. By crawling the Xunlei trackers, we determined the swarm sizes for the VoD
movies available from Kankan. We found Kankan swarm sizes to be much
larger than the largest swarms in BitTorrent.
2 New Insights into Xunlei
Xunlei uses a proprietary, closed source, protocol. In order to develop measure-
ment tools for the Xunlei ecosystem, we carried out a laborious analysis of the
Xunlei: Peer-Assisted Download Acceleration on a Massive Scale
233
Xunlei protocols, including determining the syntax and semantics of many of
the protocol messages, as well as the formats for Xunlei peer IDs. This was a
particularly challenging task since most of the ﬁelds in the Xunlei packets are
encrypted. In this process, we discovered that Xunlei clients also join two sep-
arate DHTs: its own proprietary DHT and also the Mainline BitTorrent DHT.
As part of our packet analysis, we were also able to understand how the Xunlei
DHT operates and many of the DHT message formats. To this end, we have also
understood the details of the encryption/decryption algorithms used.Xunlei uses
AES in ECB mode for encrypting messages exchanged between its entities. The
64-bit key for each message is pre-pended to the message itself. To understand
the details of the Xunlei protocol, we used Wireshark to passively monitor the
traﬃc ﬂowing in and out of a Xunlei client in our university network, and then
later studied this data.
The Xunlei tracker plays a central role in the Xunlei ecosystem. It not only
tracks a huge number of ﬁles, but also tracks ﬁles originating from many diﬀerent
sources, including cyberlockers, FTP servers, mail servers. We have found that
whenever a Xunlei peer downloads a ﬁle (or a portion thereof) from some source,
it notiﬁes the tracker. In this manner, when another Xunlei client wants to
download the ﬁle, the tracker can provide all known sources, including peers
and servers.
We have observed that each peer in Xunlei uses diﬀerent identiﬁers for itself
when joining diﬀerent networks. For example, it uses a 16-byte identiﬁer when
joining the KAD network, a 20-byte identiﬁer in the Xunlei DHT, a 20-byte
identiﬁer for BitTorrent, and a 16-byte unique identiﬁer when registering itself
with the Xunlei central trackers when downloading ﬁles. We refer to this last
type of identiﬁer as the Xunlei ID for the peer. Its ﬁrst 12 bytes correspond
to the hexadecimal equivalent of the MAC address of the machine the client is
running on. Therefore, each Xunlei client can be uniquely identiﬁed by its Xunlei
ID over extended periods of time.
Diﬀerent types of sources use diﬀerent types of identiﬁers for the same ﬁle:
Servers use URLs, BT uses a 20-byte infohash of the ﬁle, and eDonkey uses the
16-byte eDonkey hash extracted from the ed2k link. In order for the tracker to
provide cross-protocol sources for a particular request, the Xunlei client con-
structs an internal hash for each ﬁle it has been downloaded, and then sends
this hash to a tracker, along with the identiﬁers of the sources from which it
downloaded the ﬁle. The tracker most likely has a hash table, with the internal
hash being the key, and a list of all sources that are known to have the ﬁle, with
the identiﬁer type being source speciﬁc. These sources can include HTTP, FTP,
RTSP, and MMS URLs, a BT infohash, an eDonkey hash, and the Xunlei IDs
of the peers holding the ﬁle.
One can view Xunlei as an eﬀort to consolidate the many diﬀerent ways of
exchanging content on the Internet. The user does not need to be concerned
about whether the content is hosted by cyberlockers, available on some P2P ﬁle-
sharing network, or on traditional web servers. The underlying infrastructure is
abstracted and made compatible on a chunk level.
234
P. Dhungel et al.
2.1 Multi-protocol Support
As an example of Xunlei’s cross-protocol operation, consider a ﬁle that is present
in an HTTP server and also within BT. Suppose initially the tracker is not aware
of this ﬁle. When a Xunlei client downloads the ﬁle from BT, it calculates the
internal hash of the ﬁle and informs the tracker of the mapping between the BT
infohash and the internal hash. When another Xunlei client downloads the same
ﬁle directly from the server, it calculates the (same) internal hash for the ﬁle and
informs the tracker of the mapping between the HTTP URL and the internal
hash.
In this manner, the Xunlei tracker knows that the BT infohash and the HTTP
URL correspond to the same ﬁle. Thereafter, if a Xunlei client initiates a down-
load with the BT infohash, the Xunlei tracker can provide it with the HTTP
server link and the Xunlei peers that have copies of the ﬁle. We performed sev-
eral simple tests for veriﬁcation. For example, when using Xunlei to download
a particular BT ﬁle, only 4% of the ﬁle came from BT, the remainder of the
ﬁle came from an HTTP server (74%) and from Xunlei peers using the Xunlei
protocol (22%).
2.2 Bandwidth Leeching
Since the Xunlei tracker provides the Xunlei client with a list of servers currently
hosting a ﬁle, when a user initiates download for a ﬁle from gougou.com (or any
other location), the Xunlei client can often download much of the content in the
ﬁle from a non-Xunlei server, which typically use advertising to generate rev-
enue. Xunlei thus negatively impacts their proﬁts, since users are downloading
from them without eyeballing their websites. This phenomenon is referred to as
bandwidth leeching. Xunlei allows, however, such servers to receive compensation
by joining the Xunlei Union. We also note that Xunlei provides bandwidth as-
sistance to non-Xunlei servers and sources. For example, when a Xunlei client
initiates a download directly from an HTTP server (for example, a cyberlocker
such as megaupload), if other Xunlei peers have already downloaded the ﬁle (or
are currently downloading it), then those peers can assist the server. As we will
discuss in the body of the paper, even the downloading of e-mail attaches can
beneﬁt from Xunlei’s bandwidth assistance.
As mentioned earlier, the Xunlei client acts as a BT client during BT down-
loads. However, unlike other BT clients, it does not allow a user to create a
.torrent ﬁle. The user instead would have to use a traditional BT client to do
that. However, once the .torrent ﬁle (and then the ﬁle corresponding to the .tor-
rent) is downloaded using a Xunlei client, the ﬁle gets tracked by the Xunlei
tracker and hence enters the Xunlei domain. After this, when a Xunlei client
begins to download the BT ﬁle, it receives peer-assistance from Xunlei peers
(which may no longer be active in the swarm but nevertheless have a copy of
the ﬁle).
Xunlei: Peer-Assisted Download Acceleration on a Massive Scale
235
2.3 Tracker and Client Protocol
By monitoring and analyzing the traﬃc at a local Xunlei client, we were able to
identify the details of messages exchanged by the client with the Xunlei trackers
when requesting the resource list for any given ﬁle. We now discuss some of the
more important observations we made about the protocol.
When downloading a ﬁle using a resource link (e.g., made available by gou-
gou.com), the Xunlei client sends a message with the link to the central tracker,
which in turn returns two 20-byte hash values and a single 8-byte code corre-
sponding to the ﬁle. These hash values and the code are then used to request the
peer and server resource lists for the ﬁle. The two hash values and the code for
a ﬁle can also be obtained from the trackers by sending the unique 20-byte iden-
tiﬁer for the ﬁle. For ﬁles indexed in gougou.com, the identiﬁer is also available
in its gougou page.
For BitTorrent ﬁles, the Xunlei client uses the infohash of the ﬁle as the 20-
byte identiﬁer in the message sent to the tracker. For eDonkey ﬁles, the 20 byte
identiﬁer is obtained from the 16 byte hash extracted from the ed2k link along
with the ﬁle size. When the Xunlei client sends to the tracker an identiﬁer that
is not currently being tracked by Xunlei, the tracker does not return the two
hash values and the code. Through out the paper, we consider a ﬁle as being
“tracked” by Xunlei if the trackers return the two hash values and the code for
the ﬁle. This is the technique that we use in Section 3.1 to evaluate the fraction
of BitTorrent and eDonkey ﬁles tracked by Xunlei.
Country
Mainland China 5,261,157
57,852
Taiwan
20,222
Hong Kong
7,340
Malaysia
Korea
7,043
4,865
Singapore
4,326
Japan
4,237
United States
2,995
Macau
1,802
Italy
United Kingdom
1,497
1,150
Canada
813
Australia
616
Venezuela
France
470
Peers Population Ratio
1,330.1 3,955
23.0 2,512
7.1 2,852
280
144
4.7 1,034
34
13
0.6 5,273
31
24
34
38
22
7
58.1
62.3
33.8
21.2
27.2
64.8
26.2
48.7
126.8
310.2
Fig. 1. Message exchange between Xun-
lei client and trackers when requesting
resource list
Fig. 2. Country Level Distribution of Peers
3 Measuring the Scale of Xunlei
We used the results from protocol analysis to develop a measurement infrastruc-
ture for the Xunlei network. As shown in Figure 3, our measurement platform
236
P. Dhungel et al.
consists of three major components: a Xunlei DHT crawler, a Xunlei tracker
crawler, and several website crawlers.
Xunlei DHT
Xunlei Tracker System