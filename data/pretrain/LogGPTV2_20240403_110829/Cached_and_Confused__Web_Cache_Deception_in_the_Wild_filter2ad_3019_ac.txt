### Vulnerable Domain Names and Notification Process

We identified several vulnerable domain names under the ownership of the contacted party. We informed them of our intention to publicly publish these results, assured them that their identities would not be disclosed, and advised them to remediate the issue, as adversaries could easily replicate our experiment and compromise their sites. We also explicitly stated that we did not seek or accept bug bounties for these notifications.

The notification letters were sent prior to submitting this work for review, providing the impacted parties with reasonable early notice. As of this writing, 12 of the affected sites have implemented mitigations.

### Repeatability

One of the authors of this paper is affiliated with a major CDN provider at the time of writing. However, the work and results presented in this paper do not use any internal or proprietary company information, nor any data pertaining to the company’s customers. We conducted this study using only publicly available data sources and tools. Our methodology is repeatable by other researchers without access to any CDN provider internals.

## Web Cache Deception Measurement Study

We conducted two measurement studies to characterize web cache deception (WCD) vulnerabilities on the Internet. In this first study, we aim to answer the following research questions:

- **Q1:** What is the prevalence of WCD vulnerabilities on popular, highly-trafficked domains? (§4.2)
- **Q2:** Do WCD vulnerabilities expose PII, and if so, what kinds? (§4.3)
- **Q3:** Can WCD vulnerabilities be used to defeat defenses against web application attacks? (§4.3)
- **Q4:** Can WCD vulnerabilities be exploited by unauthenticated users? (§4.3)

In the following sections, we describe the data collected, discuss the results of the measurement, and consider the implications for PII and important web security defenses. Finally, we summarize the conclusions drawn from the study. In Section 5, we will present a follow-up experiment focusing on advanced path confusion techniques.

### Table 2: Summary of Crawling Statistics

| Category   | Pages         | Domains       | Sites     |
|------------|---------------|---------------|-----------|
| Crawled    | 1,470,410     | 124,596       | 295       |
| Vulnerable | 17,293 (1.2%) | 93 (0.1%)     | 16 (5.4%) |

**Figure 3:** Distribution of the measurement data and vulnerable sites across the Alexa Top 5K.

### 4.1 Data Collection

We developed a custom web crawler to collect the data used in this measurement. The crawler ran from April 20-27, 2018, as a Kubernetes pod allocated 16 Intel Xeon 2.4 GHz CPUs and 32 GiB of RAM. Following the methodology described in Section 3, we configured the crawler to identify vulnerable sites from the Alexa Top 5K at the time of the experiment. To scalably create test accounts, we filtered the initial measurement seed pool for sites that provide user authentication via Google OAuth. This filtering narrowed the set of sites to 295. Table 2 summarizes our crawling statistics.

### 4.2 Measurement Overview

**Alexa Ranking:**
From the 295 sites in the collected dataset, the crawler identified 16 sites (5.4%) with WCD vulnerabilities. Figure 3 shows the distribution of all sites and vulnerable sites across the Alexa Top 5K. The distribution of vulnerable sites is roughly proportional to the number of sites crawled, suggesting that the incidence of WCD vulnerabilities is not correlated with site popularity.

**Content Delivery Networks (CDNs):**
Using heuristics that search for well-known vendor strings in HTTP headers, we labeled each domain and site with the corresponding CDN. Table 3 presents the results of this labeling. Note that many sites use multiple CDN solutions, so the sum of values in the first four rows may exceed the totals in the last row.

**Table 3: CDN Usage**

| CDN          | Pages         | Domains       | Sites     |
|--------------|---------------|---------------|-----------|
| Cloudflare   | 161,140 (11.0%) | 4,996 (4.0%)  | 143 (48.4%) |
| Akamai       | 225,028 (15.3%) | 16,473 (13.2%) | 100 (33.9%) |
| CloudFront   | 10,107 (8.1%)  | 107 (36.3%)   | 2 (<0.1%)  |
| Other CDNs   | 100,009 (6.8%) | 244,081 (16.6%) | 2,456 (2.0%) |
| Total        | 707,210 (48.1%) | 33,675 (27.0%) | 244 (82.7%) |

All instances of vulnerable pages observed are served over a CDN, but vulnerabilities are not unique to any one CDN vendor. While 82.7% of sites in our experiment use a CDN, a more balanced study comparing CDNs to centralized web caches is necessary to eliminate inherent bias and draw meaningful conclusions. Overall, these results indicate that CDN deployments are prevalent among popular sites, potentially leading to more opportunities for WCD attacks.

**Response Codes:**
Table 4 shows the distribution of HTTP response codes observed for the vulnerable sites. The distribution is dominated by 404 Not Found, which is allowed behavior according to RFC 7234 [21]. Only 12 sites leaked resources with a 200 OK response, but manual examination revealed that more PII was leaked from this category of resource.

**Table 4: Response Codes**

| Response Code | Pages         | Domains       | Sites     |
|---------------|---------------|---------------|-----------|
| 404 Not Found | 17,093 (98.8%) | 82 (88.2%)    | 10 (62.5%) |
| 200 Ok        | 205 (1.2%)    | 19 (20.4%)    | 12 (75.0%) |

**Cache Headers:**
Table 5 breaks down the cache-relevant headers collected from vulnerable sites. Despite the presence of headers that prohibit caching, pages carrying these headers are still cached, indicating that site administrators override header-specified caching policies. This suggests that user-agents cannot rely on cache headers to determine with certainty whether a resource has been cached.

**Table 5: Cache Headers**

| Header                                       | Pages         | Domains       | Sites     |
|----------------------------------------------|---------------|---------------|-----------|
| Expires:                                     | 1,642 (9.5%)  | 23 (24.7%)    | 13 (81.2%) |
| Pragma: no-cache                             | 652 (3.8%)    | 11 (11.8%)    | 6 (37.5%)  |
| Cache-Control: max-age=, public              | 1,698 (9.8%)  | 1,093 (6.3%)  | 307 (1.8%) |
| Cache-Control: max-age=, must-revalidate, private | 102 (0.6%)  | 67 (0.4%)     | 64 (0.4%)  |
| Cache-Control: max-age=, no-cache, no-store  | 51 (0.3%)     | 5 (<0.1%)     | 5 (<0.1%)  |
| Cache-Control: max-age=, no-cache            | 3 (<0.1%)     | 1 (<0.1%)     | 26 (28.0%) |
| Cache-Control: max-age=, must-revalidate     | 10 (10.8%)    | 1 (1.1%)      | 1 (1.1%)   |
| Cache-Control: max-age=, must-revalidate, no-transform, private | 3 (3.2%)     | 4 (4.3%)     | 1 (1.1%)   |
| Cache-Control: no-cache                      | 2 (2.2%)      | 1 (1.1%)      | 1 (1.1%)   |
| All (none)                                   | 1,698 (9.8%)  | 26 (28.0%)    | 14 (87.5%) |
| Total                                        | 15,595 (90.2%) | 67 (72.0%)    | 3 (18.8%)  |

### 4.3 Vulnerabilities

**Table 6: Types of Vulnerabilities Discovered**

| Leakage           | Pages         | Domains       | Sites     |
|-------------------|---------------|---------------|-----------|
| PII               | 17,215 (99.5%) | 88 (94.6%)    | 14 (87.5%) |
| User Name         | 934 (5.4%)    | 17 (18.3%)    | 8 (50.0%)  |
| Email             | 16,281 (94.1%) | 71 (76.3%)    | 7 (43.8%)  |
| Phone             | 557 (3.2%)    | 10 (10.8%)    | 6 (37.5%)  |
| CSRF (JS)         | 102 (0.6%)    | 1 (1.1%)      | 1 (6.2%)   |
| CSRF (POST)       | 130 (0.8%)    | 10 (10.8%)    | 6 (37.5%)  |
| CSRF (GET)        | 59 (0.3%)     | 5 (5.4%)      | 4 (25.0%)  |
| Sess. ID / Auth. Code | 72 (0.4%)    | 5 (5.4%)      | 3 (18.8%)  |
| JS                | 8 (<0.1%)     | 4 (4.3%)      | 2 (12.5%)  |
| Total             | 17,293        | 93            | 16        |

**PII:**
14 of the 16 vulnerable sites leaked various types of PII, including names, usernames, email addresses, and phone numbers. Additional PII categories included financial and health information. Such PII can be used for highly effective spearphishing attacks.

**Security Tokens:**
Using an entropy-based procedure, we analyzed the data for leaked security tokens. Manual verification confirmed that 6 of the 16 vulnerable sites leaked CSRF tokens valid for a session, allowing attackers to conduct CSRF attacks despite deployed defenses. These tokens were found in hidden form elements, inline JavaScript, and URL query parameters. Additionally, 6 sites leaked session identifiers or user-specific API tokens in inline JavaScript, which could be used to impersonate victim users.

**Authenticated vs. Unauthenticated Attackers:**
Our methodology included a detection step to determine if a suspected WCD vulnerability was exploitable by an unauthenticated user. In almost every case, the discovered vulnerabilities were exploitable by unauthenticated users. Manual examination of the few false negatives confirmed that all remaining vulnerabilities were also exploitable by unauthenticated users.