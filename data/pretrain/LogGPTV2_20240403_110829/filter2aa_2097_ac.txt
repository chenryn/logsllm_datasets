# TCP/IP Stack Fingerprinting with Xprobe2

## Overview
Xprobe2 is a powerful tool for identifying the operating system (OS) of a remote host by analyzing its TCP/IP stack characteristics. This document provides an in-depth look at how to use Xprobe2, including best practices and advanced features.

## Basic Usage
Xprobe2 uses a variety of modules to perform OS fingerprinting. The following example demonstrates a basic scan:

```bash
spanion:~/tmp/xprobe2-demo/src # ./xprobe2 -v -c ../etc/xprobe2.conf -D 8 -p TCP:22:open 192.168.0.203
```

### Output
```plaintext
Xprobe2 v.0.1 Copyright (c) 2002-2003 PI:EMAIL, PI:EMAIL, PI:EMAIL
...
[+] Following modules are loaded:
[x][1] ICMP echo (ping)
[x][2] TTL distance
[x][3] ICMP echo
[x][4] ICMP Timestamp
[x][5] ICMP Address
[x][6] ICMP Info Request
[x][7] ICMP port unreach
[+] 7 modules registered
[+] Initializing scan engine
[+] Running scan engine
[+] Host: 192.168.0.203 is up (Guess probability: 100%)
[+] Target: 192.168.0.203 is alive
[+] Primary guess:
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.4" (Guess probability: 100%)
[+] Other guesses:
[+] Host 192.168.0.203 Running OS: "FreeBSD 5.1" (Guess probability: 100%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 5.0" (Guess probability: 100%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.8" (Guess probability: 100%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.7" (Guess probability: 100%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.6.2" (Guess probability: 100%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.6" (Guess probability: 100%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.5" (Guess probability: 100%)
...
```

## Advanced Usage
### Example with TCP Handshake Module
Adding the TCP handshake module can improve the accuracy of the fingerprinting process:

```bash
spanion:~/tmp/xprobe2-demo/src # ./xprobe2 -v -c ../etc/xprobe2.conf -p TCP:22:open 192.168.0.203
```

### Output
```plaintext
Xprobe2 v.0.1 Copyright (c) 2002-2003 PI:EMAIL, PI:EMAIL, PI:EMAIL
...
[+] Following modules are loaded:
[x][1] ICMP echo (ping)
[x][2] TTL distance
[x][3] ICMP echo
[x][4] ICMP Timestamp
[x][5] ICMP Address
[x][6] ICMP Info Request
[x][7] ICMP port unreach
[x][8] TCP Handshake
[+] 8 modules registered
[+] Initializing scan engine
[+] Running scan engine
[+] Host: 192.168.0.203 is up (Guess probability: 100%)
[+] Target: 192.168.0.203 is alive
[+] Primary guess:
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.4" (Guess probability: 100%)
[+] Other guesses:
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.8" (Guess probability: 96%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 4.7" (Guess probability: 96%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 5.1" (Guess probability: 93%)
[+] Host 192.168.0.203 Running OS: "FreeBSD 5.0" (Guess probability: 93%)
...
```

## Port Scanner Integration
The success of some fingerprinting modules depends on probing open TCP ports and closed UDP ports. Therefore, a port scanner module has been implemented as an independent module.

### Example with Port Scanner
```bash
[root@fremont src]# ./xprobe2 -v -c ../etc/xprobe2.conf -t 1 -s 5 -P –T 20-40,80 x.x.x.x
```

### Output
```plaintext
Xprobe2 v.0.1 Copyright (c) 2002-2003 PI:EMAIL, PI:EMAIL, PI:EMAIL
[+] Target is x.x.x.x
[+] Loading modules.
[+] Following modules are loaded:
[x][1] ICMP echo (ping)
[x][2] TTL distance
[x][3] ICMP echo
[x][4] ICMP Timestamp
[x][5] ICMP Address
[x][6] ICMP Info Request
[x][7] ICMP port unreach
[x][8] TCP Handshake
[x][9] Portscanner
[+] 9 modules registered
[+] Initializing scan engine
[+] Running scan engine
[+] Host: x.x.x.x is up (Guess probability: 100%)
[+] Target: x.x.x.x is alive rtt: 1
[+] Portscan results for x.x.x.x:
[+]  Stats:
[+]   TCP: 4 - open, 18 - closed, 0 - filtered
[+]   UDP: 0 - open, 0 - closed, 0 - filtered
[+]   Portscan took 0.95 seconds.
[+]  Details:
[+]   Proto     Port Num.       State           Serv. Name
[+]   TCP       21              open            ftp
[+]   TCP       23              open            telnet
[+]   TCP       37              open            time
[+]   TCP       80              open            http
[+]  Other ports are in closed state.
[+] Primary guess:
[+] Host x.x.x.x Running OS: "HP UX 11.0" (Guess probability: 100%)
[+] Other guesses:
[+] Host x.x.x.x Running OS: "HP UX 11.0i" (Guess probability: 96%)
[+] Host x.x.x.x Running OS: "Sun Solaris 9 (SunOS 2.9)" (Guess probability: 90%)
[+] Host x.x.x.x Running OS: "Sun Solaris 6 (SunOS 2.6)" (Guess probability: 87%)
[+] Host x.x.x.x Running OS: "Sun Solaris 7 (SunOS 2.7)" (Guess probability: 87%)
[+] Host x.x.x.x Running OS: "Sun Solaris 8 (SunOS 2.8)" (Guess probability: 87%)
[+] Host x.x.x.x Running OS: "OpenBSD 2.5" (Guess probability: 78%)
[+] Host x.x.x.x Running OS: "OpenBSD 2.9" (Guess probability: 78%)
[+] Host x.x.x.x Running OS: "NetBSD 1.4" (Guess probability: 78%)
[+] Host x.x.x.x Running OS: "NetBSD 1.4.1" (Guess probability: 78%)
[+] Cleaning up scan engine
[+] Modules deinitialized
[+] Execution completed.
```

## Controlling the Sending Stream
A command-line option, `-s`, controls the sending stream of the port scanner module. The value given is in milliseconds and helps prevent denial of service conditions.

### Example
```bash
[root@fremont src]# ./xprobe2 -v -c ../etc/xprobe2.conf -t 1 -s 10 -P -T 21,22,23,25,80 x.x.x.x
```

### Output
```plaintext
Xprobe2 v.0.1 Copyright (c) 2002-2003 PI:EMAIL, PI:EMAIL, PI:EMAIL
[+] Target is x.x.x.x
[+] Loading modules.
[+] Following modules are loaded:
[x][1] ICMP echo (ping)
[x][2] ICMP echo
[x][3] ICMP Timestamp
[x][4] ICMP Address
[x][5] ICMP port unreach
[x][6] TCP Handshake
[x][7] Portscanner
[+] 7 modules registered
[+] Initializing scan engine
[+] Running scan engine
[+] Host: x.x.x.x is up (Guess probability: 100%)
[+] Target: x.x.x.x is alive rtt: 1
[+] Portscan results for x.x.x.x:
[+]  Stats:
[+]   TCP: 1 - open, 4 - closed, 0 - filtered
[+]   UDP: 0 - open, 0 - closed, 0 - filtered
[+]   Portscan took 0.37 seconds.
[+]  Details:
[+]   Proto     Port Num.       State           Serv. Name
...
```

## Enhanced Receive Timeout Specifications
There are three receiving timeouts:
1. **ICMP Echo Discovery**: The timeout is the round-trip time (RTT) multiplied by two.
2. **ICMP Echo Discovery Module**: Use the `-t` option to specify the receiving timeout in milliseconds.
3. **Port Scanner**: The timeout is calculated as `(number of ports to scan * (sending delay + 10)) + RTT*2`.

## Module Control
Use the `-D` option to exclude specific modules and the `-M` option to include only specific modules.

### Example
```bash
[root@fremont src]# ./xprobe2 -v -c ../etc/xprobe2.conf -D 2 -D 6 -t 1 -s 10 -P -T 21,22,23,25,80 x.x.x.x
```

### Output
```plaintext
Xprobe2 v.0.1 Copyright (c) 2002-2003 PI:EMAIL, PI:EMAIL, PI:EMAIL
[+] Target is x.x.x.x
[+] Loading modules.
[+] Following modules are loaded:
[x][1] ICMP echo (ping)
[x][2] ICMP echo
[x][3] ICMP Timestamp
[x][4] ICMP Address
[x][5] ICMP port unreach
[x][6] TCP Handshake
[x][7] Portscanner
[+] 7 modules registered
[+] Initializing scan engine
[+] Running scan engine
[+] Host: x.x.x.x is up (Guess probability: 100%)
[+] Target: x.x.x.x is alive rtt: 1
[+] Portscan results for x.x.x.x:
[+]  Stats:
[+]   TCP: 1 - open, 4 - closed, 0 - filtered
[+]   UDP: 0 - open, 0 - closed, 0 - filtered
[+]   Portscan took 0.37 seconds.
[+]  Details:
[+]   Proto     Port Num.       State           Serv. Name
...
```

## Conclusion
Xprobe2 is a versatile tool for OS fingerprinting, offering a range of modules and options to fine-tune the scanning process. By understanding and utilizing these features, you can achieve more accurate and efficient results.

---

**O F I R   A R K I N,   F O U N D E R,   T H E   S Y S – S E C U R I T Y   G R O U P**
**© 2 0 0 0 – 2 0 0 3     T H E   S Y S – S E C U R I T Y   G R O U P**