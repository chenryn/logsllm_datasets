a tunnel (i.e., from the gateway to the endpoint of that tunnel), it is
encrypted several times by the originator using the selected hops’
public keys. Each hop peels off one encryption layer to learn the
address of the next hop where the message needs to be forwarded
Measuring the I2P Anonymity Network and its Censorship Resistance
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
several “health” tests, such as stability and uptime in the network,
outbound message queue throughput, delay, and so on.
The netDb contains two types of network metadata: LeaseSets
and RouterInfos. For instance, Bob’s LeaseSet tells Alice the contact
information of the tunnel gateway of Bob’s inbound tunnel. A
RouterInfo provides contact information about a particular I2P
peer, including its key, capacity, address, and port. To publish his
LeaseSets, Bob sends a DatabaseStoreMessage (DSM) message to
several floodfill routers, which encapsulates his LeaseSets. To query
Bob’s LeaseSet information, Alice sends a DatabaseLookupMessage
(DLM) to those floodfill routers.
2.2 Related Work
I2P Network Measurement. There have been only a few stud-
2.2.1
ies on monitoring I2P prior to this work. In 2011, Timpanaro et
al. [68] built their monitoring architecture on the Planet Lab testbed
to characterize the usage of the I2P network. Planet Lab is a net-
work consisting of voluntary nodes run by research institutes and
universities around the globe. Therefore, bandwidth and traffic
policies of nodes running on this network are often restricted. As
acknowledged by the group, only 15 floodfill routers could be set
up successfully due to the bandwidth rate restrictions of Planet
Lab, thus limiting the amount of collected data. The authors later
expanded their work to characterize the usage of I2P, particularly
the use of file-sharing applications in the network [66, 67].
In 2014, Liu et al. [40] reported that they could observe 25,640
peers per day over a period of two weeks using various methods
to discover the network topology. However, there are some issues
with the methodology that the authors used to collect RouterInfos,
which we will discuss in later sections. More recently, Jeong et
al. [37] reported leakage of .i2p domain name resolution queries
in the public DNS infrastructure. Russia, the USA, and China are
top countries of leakage sources. Gao et al. [19] conducted a study
on the popularity and availability of eepsites (I2P’s terminology for
anonymous websites). The authors claimed the discovery of 1,861
online eepsites, which made up over 80% all anonymous websites
in the I2P network.
2.2.2 Anonymous Communication Network Blockage. To the best
of our knowledge, there has been no prior work focusing on the
blocking resistance of I2P. Throughout this paper, we aim to shed
some light on this aspect of the network. Similar to Tor or any other
anonymous network, I2P is susceptible to blockage. Prior to this
study, there have been some commercial tools alleging to be able
to block I2P. However, to the best of our knowledge, despite the
range of techniques used by these tools, none are able to block I2P
effectively, or at least not to the degree that would be required for a
large-scale adoption (e.g., nationwide blocking). We briefly review
some of these tools below.
In network management, firewall rules are often employed to
allow or filter out traffic. Popular blocking techniques often base on
port number, protocol signature, and IP address. However, anonymity
networks, including Tor and I2P, are designed to withstand censor-
ship [29, 54, 61]. As a result, any attempts to block these networks
could cause considerable collateral damage.
For port-based censorship, blocking onion relay ports (orports) or
directory information exchange ports (dirports) is effective enough
Figure 1: Basic communication between two I2P peers using
unidirectional tunnels [27].
to. When the message passes through an inter-tunnel (i.e., from an
outbound tunnel to an inbound tunnel), garlic encryption (i.e. ElGa-
mal/AES) is employed by the originator [32], adding an additional
layer of end-to-end encryption to conceal the message from the
outbound tunnel endpoint and the inbound tunnel gateway [27].
Unlike Tor, multiple messages can be bundled together in a single
I2P garlic message. When they are revealed at the endpoint of the
transmission tunnel, each message, called "bulb" [17] (or "clove" in
I2P’s terminology [32]), has its own delivery instructions. Another
major difference between Tor and I2P is that all I2P nodes (except
hidden routers, discussed in Section 5.1) also participate in the
network as relays, routing traffic for other nodes. In Figure 1, the
hops (denoted by boxed onions) forming the tunnels for Alice and
Bob correspond to actual I2P users. While routing messages for
Alice and Bob, these hops can also communicate with their intended
destinations in the same way Alice and Bob do. Similarly, Alice and
Bob can be chosen by other peers to participate in the tunnels these
peers will form.
2.1.2 Distributed Directory. The network database of I2P, called
netDb, plays a vital role in the I2P network by allowing peers to
query for information about other peers and hidden services. The
network database is implemented as a distributed hash table using
a variation of the Kademlia algorithm [44]. A newly joining peer
initially learns a small portion of the netDb through a bootstrapping
process, by fetching information about other peers in the network
from a set of hardcoded reseed servers. Unlike Tor directory author-
ities, these reseed servers do not have a complete view of the whole
I2P network. They are equivalent to any other peer in the network,
with the extra ability to announce a small portion of known routers
to newly joining peers.
Queries for the network database are answered by a group of
special floodfill routers [34], which play an essential role in main-
taining the netDb. One of their main responsibilities is to store
information about peers and hidden services in the network in a
decentralized fashion using indexing keys (i.e. routing keys). These
keys are calculated by a SHA256 hash function of a 32-byte binary
search key which is concatenated with a UTC date string. As a
result, these hash values change every day at UTC 00:00 [34]. In the
current I2P design, there are two ways to become a floodfill router.
The first option is to manually enable the floodfill mode from the
I2P router console. The other possibility is that a high-bandwidth
router could become a floodfill router automatically after passing
AliceBobOutbound TunnelOutbound TunnelInbound TunnelInbound TunnelGateway routerEncrypted communicationEndpoint routerIMC ’18, October 31-November 2, 2018, Boston, MA, USA
NP. Hoang et al.
3 ETHICAL CONSIDERATIONS
Conducting research on anonymity networks comprising thousands
of users must be performed in a responsible manner that both
respects user privacy, and does not disrupt the operation of the
network. It also necessitates all collected data to be handled in a
careful manner [51]. Although I2P routers are run by individuals
who may actively use the I2P network for their own purposes, our
study does not involve any human subjects research, as it focuses
on studying the infrastructure provided by I2P. Our measurements
do not capture users’ traffic or their online activities. We solely
measure network-level characteristics of the I2P network.
to block Tor relays, and blocking UDP port 123 would prevent I2P
from functioning properly because the I2P router software needs
the Network Time Protocol (NTP) service to operate properly. Nev-
ertheless, many Tor relays have orports and dirports running over
port 80 (HTTP) or 443 (HTTPS), while many legitimate applications
also use port 123 for the NTP service. Furthermore, I2P is a P2P
network application that can run on a wide range of ports using
both UDP and TCP. More specifically, I2P can run on any arbitrary
port in the range of 9000–31000 [30]. As a result, port blocking is
not ideal for large-scale censorship because it can unintentionally
block the traffic of other legitimate applications.
As nationwide Internet censorship is growing worldwide, Deep
Packet Inspection (DPI) is widely used by various entities to detect
the traffic pattern of connections to anonymity networks [6, 39, 70].
Regardless of the use of well-known ports (i.e., 80, 443), the traf-
fic of connections to Tor entry relays is fingerprintable and easily
blocked by DPI- enabled firewall. Consequently, Tor’s pluggable
transports have been introduced to cope with this problem [63].
These pluggable transports make traffic from a client to Tor bridges
look similar to other innocuous and widely-used traffic. Similarly,
the design of I2P also obfuscates its traffic to prevent payload-
analysis-based protocol identification. However, flow analysis can
still be used to fingerprint I2P traffic in the current design because
the first four handshake messages between I2P routers can be de-
tected due to their fixed lengths of 288, 304, 448, and 48 bytes [26].
To solve this problem, the I2P team is working on the development
of an authenticated key agreement protocol that resists various
forms of automated identification and other attacks [35].
Tenable, a network security company, provides a firewall service
that contains some modules to detect I2P traffic. Based on our
review of their guidelines, none of them seem to be efficient in
blocking I2P. For instance, one of the guidelines for detecting I2P
outbound traffic is to manually inspect the system for any rogue
process [59], which may not be feasible for large-scale blocking
such as nationwide censorship.
SonicWALL, a company specialized in content control and net-
work security, suggests blocking I2P by filtering out both UDP and
TCP tunnel traffic to block proxy access with their App Control [53].
However, this approach is not feasible at a large scale either, as
the company acknowledges that the approach may cause collateral
damage by unintentionally blocking other legitimate traffic, such
as encrypted UDP, IPSec VPN, and other encrypted TCP traffic.
A more effective approach is destination filtering. To implement
this approach, a censor has to compile a list of active I2P peer ad-
dresses and block access to all of them. This address-based blocking
approach will have a severe impact on the process of forming new
I2P tunnels, thus preventing users from accessing the I2P network.
Furthermore, a simpler but still effective way to prevent new users
from accessing I2P is to block access to I2P reseed servers, which
are required for the bootstrapping process. Consequently, first-time
users will not be able to access the I2P network if they are not able
to fetch RouterInfos of other peers.1 One of the goals of our work
is to evaluate the cost and the effectiveness of the address-based
blocking approach against I2P.
1To cope with this problem, I2P has a method for “manual” reseeding of a router, which
we discuss in Section 6.1.
To conduct our measurements, we need to introduce and oper-
ate several additional routers into the live I2P network. This is a
standard approach in the context of studying anonymity networks,
as is evident by the many previous works that have followed it to
study the Tor network [2, 3, 45, 52, 55]. The I2P team also oper-
ates an I2P router to gather network information for development
purposes [74, 75]. In particular, the stats.i2p website provides
network performance graphs to help the I2P developers with mon-
itoring the network and assessing the effectiveness of software
changes in each release.
The I2P community has come up with a set of guidelines [33] for
responsibly conducting research in the I2P network, to which we
strictly adhered. According to these guidelines, we were in close
contact with the I2P team regarding the purposes of our study and
our measurements. Adhering to the principle of minimizing the
collected data to only the absolutely necessary, we collect from
I2P’s netDb only each node’s IP address, hash value, and capacity
information available in RouterInfos. Finally, we securely delete all
collected data after statistically analyzing them. Only aggregated
statistics about the collected data are published.
One could consider the (temporary) collection of IP addresses
as a potential violation of user privacy. The topic of whether IP
addresses are Personally Identifiable Information (PII) is controver-
sial across many jurisdictions [38]. As stated in Section 3.3.3 of the
Guide to Protecting the Confidentiality of Personally Identifiable
Information published by NIST [15], IP address not readily linkable
to databases or other sources that would identify specific individu-
als, are not considered as PII. Therefore, the IP addresses observed
in our measurements cannot be considered PII, since they are not
linkable to any other data collected throughout our experiments
that could be used to identifying any individuals. Note that the
current design of I2P does not hide the use of I2P from a user’s
Internet service provider (ISP)—the I2P router software only helps
to maintain the secrecy of messages and the anonymity between
peers. Nevertheless, we still need to analyze IP-related data in a
responsible manner that will minimize the risk of exposure to third
parties (before it is deleted). For instance, when mapping IP ad-
dresses to their geographic location, we do not query any public
APIs. Instead, we use a locally installed version of the MaxMind
Database to map them in an offline fashion.
While previous works intensively crawled reseed servers and
floodfill routers to harvest the netDb [40], we only monitor the
network in a passive manner to avoid causing any interference or
unnecessarily overloading any I2P peers. I2P can be launched in a
virtual network mode for studies related to testing attacks on the
Measuring the I2P Anonymity Network and its Censorship Resistance
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
network [33]. However, experimenting on a virtual network does
not fit our research goal, which is to estimate the population of I2P
peers and assess the network’s resistance to blockage.
We should note that throughout our study, we not only con-
tribute additional routing capacity to the I2P network, but also help
in maintaining the distributed network database. Considering only
the main experiment over a period of three months, each router
under our control is configured to contribute a shared bandwidth
of 8 MB/s in each direction, with an observed maximum usage of
5MB/s.
4 METHODOLOGY
Since I2P is a distributed network without any centralized authori-
ties, we need to take a black-box approach to answer our research
questions regarding the size of the I2P network and its resistance to
censorship. In practice, there are several ways for an adversary to
harvest I2P’s network database (netDb). For instance, one can keep
crawling the hard-coded reseed servers to fetch as many Router-
Infos as possible. However, to cope with such malicious activities,
reseed servers are designed so that they only provide the same set
of RouterInfos if the requesting source is the same. Nevertheless,
an adversary who has control over a large number of IP addresses
can still continuously harvest the netDb by crawling the reseed
servers from different IP addresses. Another way of harvesting
netDb information is to manipulate the netDb mechanism in an
aggressive manner through the DatabaseLookupMessage (DLM)