using Eq. 9; the median result across 20 random instances is shown
in Figure 8 (upper). Figure 8 (lower) shows the corresponding BER as
a function of time (i.e., TTB). Note that the pausing algorithm has a
better performance than the non-pausing algorithm (regardless of
Opt and Fix strategy) despite the fact that each anneal in the former
(Ta +Tp) takes twice as much time than the latter (when Ta = 1 µs).
Based on this empirical finding, we will present the results in the
following section only for the protocol that includes a pause.
SIGCOMM ’19, August 19–23, 2019, Beijing, China
Minsung Kim, Davide Venturelli, and Kyle Jamieson
Figure 9: Time-to-BER (TTB) comparison across different user numbers
and modulations. Upper: ideal scheme using Opt. Lower: QuAMax’s perfor-
mance optimizing with Fix. Solid lines and dashed lines report median and
mean TTB across 20 instances, respectively. Shading reports 10th. and 90th.
percentiles of average BER at a certain time and each × symbol reports each
instance’s TTB (x-value) for a certain target BER.
Figure 10: TTB with target BER 10−6 for different modulations and user
numbers across 20 instances. Colored boxes report QuAMax (5th., 95th. as
whiskers, upper/lower quartiles as boxes, median as the thick horizontal
mark, and thin horizontal marks for outliers.)
Figure 11: Time-to-FER for different users, modulations, and frame sizes;
left: median Opt (idealized), right: mean Fix (QuAMax).
5.3.3 QuAMax: End-to-End performance. We now evaluate the
TTB and TTF (Time-to-FER) of QuAMax, comparing:
(1) QuAMax: Fixed-parameter, average-case performance.
(2) Oracle: Median-case Opt performance (§5.3.2: outlier data points
have minimal influence on the median order statistic), optimiz-
ing QA parameters.8
Figure 9 shows the TTB with varying user numbers and modula-
tions at the edge of QuAMax’s performance capabilities. Solid and
8Outlier mitigation methods for QA may address such outliers in future work [40].
Figure 12: Detailed view (cf. Fig. 4) of an example wireless channel at six
different SNRs (18-user QPSK).
dashed lines report median and average BER, respectively. We note
that mean TTB dominates median TTB due to a small number of
long-running outliers. QuAMax accordingly sets a time deadline
(measured median TTB for the target BER) for decoding and after
that discards bits, relying on forward error correction to drive BER
down. Next considering the relationship between TTB and problem
size, Fig. 10 explores TTB for target BER 10−6, for each instance
that reaches a BER of 10−6 within 10 ms as well as average perfor-
mance. ML problems of these sizes are well beyond the capability
of conventional decoders (cf. Table 1), and we observe that Opt
achieves superior BER within 1–100 µs and that QuAMax achieves
an acceptable BER for use below error control coding. Note that
instances with TTB below the minimum required time (i.e., Ta +
Tp) caused by parallelization require (an amortized) 2 µs.
Next, we consider frame error rate performance, measuring mean
and median FER QuAMax achieves. Results in Fig. 11 show that
tens of microseconds suffice to achieve a low enough (below 10−3)
FER to support high throughput communication for 60-user BPSK,
18-user QPSK, or four-user 16-QAM suffices to serve four users
with the idealized median performance of Opt. QuAMax (mean Fix)
achieves a similar performance with slightly smaller numbers of
users. Furthermore, our results show low sensitivity to frame size,
considering maximal-sized internet data frames (1,500 bytes) all
the way down to TCP ACK-sized data frames (50 bytes).
5.4 Performance under AWGN Noise
We next evaluate the impact of AWGN from the wireless channel,
testing six SNRs ranging from 10 dB to 40 dB. In order to isolate
the effect of noise, the results in this subsection fix the channel
and transmitted bit-string and consider ten AWGN noise instances.
Looking at the data in depth to begin with, the effect of AWGN
channel noise, which is itself additive to ICE, is shown in Fig. 12
for six illustrative examples. As SNR increases, the probability of
finding the ground state and the relative energy gap tend to increase.
At 10 dB SNR the energy gap between the lowest and second lowest
energy solutions narrows to just three percent, leaving minimal
room for error. In terms of overall performance, Fig. 13 (left) shows
TTB at 20 dB SNR, varying number of users and modulation. At a
fixed SNR, we observe a graceful degradation in TTB as the number
of users increases, across all modulations. Fig. 13 (right) shows TTB
at a certain user number, varying SNR and modulation. At a fixed
user number, as SNR increases, performance improves, noting that
the idealized median performance of Opt shows little sensitivity to
SNR, achieving 10−6 BER within 100 µs in all cases.
Leveraging Quantum Annealing for Large MIMO Processing in
Centralized Radio Access Networks
SIGCOMM ’19, August 19–23, 2019, Beijing, China
Figure 13: TTB comparison across different user numbers, modulations,
and SNRs. Left: varying the number of users at SNR 20 dB. Right: varying
SNR at a certain number of users. Thick lines report QuAMax’s perfor-
mance (mean Fix), and same style but thin (purple) lines report the idealized
performance (median Opt).
Figure 14: QuAMax’s performance comparison against the zero-forcing
decoder across different user numbers, modulations, and SNRs. Each ×
symbol (left-to-right: 36, 48, 60 users for BPSK and 12, 14, 16 users for QPSK)
reports the zero-forcing decoder’s BER and corresponding processing time.
Fig. 14 compares QuAMax’s performance versus zero-forcing
decoder at bad SNR scenarios, showing the necessity of ML-based
MIMO decoders for large MIMO system. Linear decoders such as
zero-forcing and MMSE suffer from the effect of the poor channel
condition (when Nt ≈ Nr ), requiring Nr > Nt (i.e., more antennas)
for appropriate BER performance. In Figure 14, QuAMax reaches
the zero-forcing’s BER (or even better BER) approximately 10-1000
times faster than zero-forcing in both BPSK and QPSK modula-
tion. Here, computation times for zero-forcing are inferred from
processing time using a single core in BigStation [76], one of the
current large MIMO designs based on zero-forcing. While this pro-
cessing time can be reduced proportionally with more cores, BER
(i.e., quality of solutions) remains unchanged. The Sphere Decoder
achieves comparable BER, but processing time cannot fall below a
few hundreds of µs with the given numbers of users and SNRs.9
9Extreme levels of parallelization or GPU implementation might be able to resolve the
issue. However, practical constraints will eventually limit the increase in performance
on classical platforms [38]. Contrarily, overheads in QuAMax are apart from pure
computation, which can be resolved by engineering design.
Figure 15: Experimentally measured channel trace [61] results: upper plots
report TTB (Opt, Fix); lower plots report TTF of median Opt and mean
Fix (QuAMax). Thin and thick lines report median and mean, respectively.
TTB’s error bars indicate 15th. and 85th. percentiles.
5.5 Trace-Driven Channel Performance
We evaluate system performance with real wideband MIMO chan-
nel traces at 2.4 GHz, between 96 base station antennas and eight
static users [61]. This dataset comprises the largest MIMO trace
size currently available. For each channel use, we randomly pick
eight base station antennas to evaluate the 8 × 8 MIMO channel
use at SNR ca. 25–35 dB: Fig. 15 shows the resulting TTB and TTF.
We achieve 10−6 BER and 10−4 FER within 10 µs for QPSK. For
BPSK, considering multiple problem instances operating in parallel,
we achieve the same BER and FER within (an amortized) 2 µs pe-
riod. This implies that tens of microseconds suffice to achieve a low
BER and FER even without parallelization of identical problems,
which creates an opportunity for QuAMax to parallelize different
problems (e.g., different subcarriers’ ML decoding).
6 RELATED WORK
Applications of QA. Despite the immaturity of software toolchains,
existing quantum annealing machines have been already programmed
successfully to solve problems in Planning and Scheduling [57],
Databases [66], Fault Diagnostics [55], Machine Learning [54], Fi-
nance [59], Data Analysis [47], Chemistry [31], and Space Sciences/-
Aeronautics [3]. A Similar problem to ML detection, CDMA mul-
tiuser demodulation, was solved using quantum fluctuations con-
trolled by the transverse field (similar as QA) in [53]. Of particular
relevance is work on optimization of fully-connected graphs, such
as the ones used to map the ML problem [69]; the results of which
showed that QA performance could match the most highly opti-
mized simulated annealing code run on the latest Intel processors.
For further details on the logical to physical qubit embedding pro-
cess, see Venturelli et al. [69]. Efficient embeddings which do not
force the chip coverage to be a triangle are also known [7].
QAOA. Quantum Approximate Optimization Algorithms, invented
in 2014 [23], and recently generalized for constrained combinatorial
optimization [28], require digital gate-model QC, which became
available at reasonable scale only in 2017 (prototypes from IBM,
Rigetti Computing, and Google are available). While QA and QAOA
require different hardware (the former is analog, the latter digital)
they have in common that: (1) For problems that don’t have hard
SIGCOMM ’19, August 19–23, 2019, Beijing, China
Minsung Kim, Davide Venturelli, and Kyle Jamieson
constraints, the programming step consists in defining a classical
combinatorial problem which is cast into QUBO [9, 72] or Ising form,
hence they both may leverage our formulation §3.2. (2) QAOA can
be seen in some parameter range as a “digitized” version of QA, and
it has been formally demonstrated that it can simulate the results
and performance of QA and outperform it, in principle [77]. The
first commonality is particularly important since it opens the door
to application of our techniques on future hardware capable of
running QAOA.
Conventional ML Detectors. Faster silicon based ML detector
strategies typically approximate and parallelize the ML computa-
tion [15, 73]. In these general directions, much progress has been
made to the point that Sphere Decoders have been realized in ASIC
hardware [10, 74] but fall short for the reasons noted in Table 1
when the setting demands more antennas at the AP (serving more
users), or when the modulation chosen increases [32, 76].
7 DISCUSSION
In this section, we discuss the current status of QA technology and
practical considerations.
Computational Power Consumption. The computation in the
DWQ2 is performed at zero energy consumption, as dictated by
reversible computing, although energy is dissipated in the initializa-
tion and readout. The DW2Q draws 16 kW of power, primarily used
by the cryogenic refrigeration unit [17]. The computational power
(per watt) for QPUs is expected to increase much more rapidly
than for conventional computing platforms since the DW2Q power
draw is not expected to change much as qubit and coupler counts
grow in future generation systems while the computational power
substantially increases.
Operating Expenses. Operating the DW2Q results in significant
electricity cost, and the dilution refrigerator requires liquid nitrogen
1-2 times a month, for a total yearly cost of about USD $17,000.
Processing Times. The scenario envisioned by QuAMax assumes
a centralized RAN architecture where a QPU, co-located with cen-
tralized RAN computational resources in a data center, is connected
to the APs via high-speed fiber or millimeter-wave links. In this
setting, a latency between the APs and data center will not be sig-
nificant. Nonetheless, QuAMax cannot be deployed today, since
additional processing times in the current QPU include approxi-
mately 30-50 ms preprocessing time, 6-8 ms programming time, and
0.125 ms readout time per anneal. These overheads are well beyond
the processing time available for wireless technologies (at most
3–10 ms). However, these overhead times are not of a fundamental
nature and can be reduced by several orders of magnitude by efforts
in system integration. By means of extrapolation of improvement
trends it is expected that quantum engineering advances in su-
perconducting qubit technology will enable QuAMax to be viable
within a decade. Moreover, QuAMax’s Ising form (in Section 3.2.2)
can be adapted to be run in other emerging physics-based optimiza-
tion devices based on photonic technologies [29] whose processing
times overhead are in principle much faster. Hence, we leave an
end-to-end evaluation in a fully centralized RAN architecture, with
more advanced hardware, as future work.
8 CONCLUSION
QuAMax is the first design, implementation and experimental eval-
uation of a quantum-computing solver for the computationally
challenging ML MIMO decoding problem. Our performance results
establish a baseline for a future fully-integrated systems in the
context of the centralized RAN architecture. We show that once
engineering efforts optimize the integration between quantum and
conventional computation, quantum computation should be consid-
ered a competitive technology for the future design of high-capacity
wireless networks.
Future Work. There are several improvements over the design we
have evaluated here. First, we anticipate that further optimization
of |JF |, Ta, and sp as well as new QA techniques such as reverse
annealing [68] may close the gap to Opt performance. Second, there
are changes in QA architecture expected in annealers due this year
[21] featuring qubits with 2× the degree of Chimera, 2× the number
of qubits and with longer range couplings. Based on similar gains
in recent results on different problem domains [29], we anticipate
this will permit ML problems of size, e.g. 175 × 175 for QPSK and
dramatically increase the parallelization opportunity of the chip
due to the reduced embedding overhead where each chain now
only requires N/12 + 1 qubits.
Going forward, we will benefit from QA technology improve-
ments from the international community manufacturing quantum
annealers with advanced capabilities. According to the develop-
ment roadmap for these next-generation quantum optimizers, it is
expected that in ca. a decade a system such as QuAMax could be
based on chips with tens of thousands of highly-connected qubits,
with annealing schedules capable of more advanced quantum ef-
fects (e.g. non-stoquasticity [51]) and engineering advances will
have order-of-magnitude improvements on the aforementioned
overhead operation times. While quantum annealers are ahead in
terms of number of qubits, gate-model systems offer additional con-
trols that may conceivably increase performance in the future. We
will investigate MIMO ML decoding on gate-model QPUs in future
work, which currently cannot support algorithms that decode more
than 4×4 BPSK.
ACKNOWLEDGEMENTS
We thank our shepherd John Heidemann and the anonymous re-
viewers for their insightful feedback. We thank the NASA Quantum
AI Laboratory (QuAIL) and D-Wave Systems for useful discussions.
The research is supported by National Science Foundation (NSF)
Awards #1824357 and #1824470 and by the USRA Cycle 3 Research
Opportunity Program that allowed machine time on the DW2Q
hosted at NASA Ames Research Center. Kyle Jamieson and Minsung
Kim are partially supported by the Princeton University School of
Engineering and Applied Science Innovation Fund. This work does
not raise any ethical issues.
Leveraging Quantum Annealing for Large MIMO Processing in
Centralized Radio Access Networks
REFERENCES
[1] Erik Agrell, Thomas Eriksson, Alexander Vardy, and Kenneth Zeger. 2002.
Closest point search in lattices. IEEE transactions on information theory 48, 8
(2002), 2201–2214.
[2] Tameem Albash, Victor Martin-Mayor, and Itay Hen. 2019. Analog errors in
Ising machines. Quantum Science and Technology 4, 2 (2019), 02LT03.
[3] Rupak Biswas, Zhang Jiang, Kostya Kechezhi, Sergey Knysh, Salvatore Mandrà,
Bryan O’Gorman, Alejandro Perdomo-Ortiz, Andre Petukhov, John
Realpe-Gómez, Eleanor Rieffel, Davide Venturelli, Fedir Vasko, and Zhihui Wang.
2017. A NASA perspective on quantum computing: Opportunities and
challenges. Parallel Comput. 64 (2017), 81–98.
[4] Sergio Boixo, Troels F Rønnow, Sergei V Isakov, Zhihui Wang, David Wecker,
Daniel A Lidar, John M Martinis, and Matthias Troyer. 2014. Evidence for
quantum annealing with more than one hundred qubits. Nature Physics 10, 3
(2014), 218.
[5] Sergio Boixo, Vadim N Smelyanskiy, Alireza Shabani, Sergei V Isakov, Mark
Dykman, Vasil S Denchev, Mohammad H Amin, Anatoly Yu Smirnov, Masoud
Mohseni, and Hartmut Neven. 2016. Computational multiqubit tunnelling in
programmable quantum annealers. Nature Communications 7 (2016). http://
www.nature.com/ncomms/2016/160107/ncomms10327/full/ncomms10327.html
[6] Michael Booth, Steven P Reinhardt, and Aidan Roy. 2017. Partitioning