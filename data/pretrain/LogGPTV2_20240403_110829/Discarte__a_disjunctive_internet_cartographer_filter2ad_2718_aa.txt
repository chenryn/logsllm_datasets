title:Discarte: a disjunctive internet cartographer
author:Rob Sherwood and
Adam Bender and
Neil Spring
DisCarte: A Disjunctive Internet Cartographer∗
Rob Sherwood
University of Maryland
PI:EMAIL
Adam Bender
University of Maryland
PI:EMAIL
Neil Spring
University of Maryland
PI:EMAIL
ABSTRACT
Internet topology discovery consists of inferring the inter-router
connectivity (“links”) and the mapping from IP addresses to routers
(“alias resolution”). Current topology discovery techniques use
TTL-limited “traceroute” probes to discover links and use direct
router probing to resolve aliases. The often-ignored record route
(RR) IP option provides a source of disparate topology data that
could augment existing techniques, but it is difﬁcult to properly
align with traceroute-based topologies because router RR imple-
mentations are under-standardized. Correctly aligned RR and trace-
route topologies have fewer false links, include anonymous and
hidden routers, and discover aliases for routers that do not respond
to direct probing. More accurate and feature-rich topologies ben-
eﬁt overlay construction and network diagnostics, modeling, and
measurement.
We present DisCarte, a system for aligning and cross-validating
RR and traceroute topology data using observed engineering prac-
tices. DisCarte uses disjunctive logic programming (DLP), a logi-
cal inference and constraint solving technique, to intelligently merge
RR and traceroute data. We demonstrate that the resultant topol-
ogy is more accurate and complete than previous techniques by
validating its internal consistency and by comparing to publicly-
available topologies. We classify irregularities in router implemen-
tations and introduce a divide-and-conquer technique used to scale
DLP to Internet-sized systems.
Categories and Subject Descriptors
C.2.1 [Communication Networks]: Network Architecture and De-
sign — Network Topology
General Terms
Measurement, Experimentation, Veriﬁcation
Keywords
Network Topology Discovery, DisCarte, Disjunctive Logic Pro-
gramming, Record Route, Alias Resolution
∗
This work was supported by grants ANI 0092806 and CNS-
0435065 from the National Science Foundation.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’08, August 17–22, 2008, Seattle, Washington, USA.
Copyright 2008 ACM 978-1-60558-175-0/08/08 ...$5.00.
1.
INTRODUCTION
Knowledge of the global topology of the Internet allows network
operators and researchers to determine where losses, bottlenecks,
failures, and other undesirable and anomalous events occur. Yet
this topology remains largely unknown: individual operators may
know their own networks, but neighboring networks are amorphous
clouds. The lack of precise global topology information hinders
network diagnostics [42, 24, 15, 17], inﬂates IP path lengths [10,
39, 36, 43], reduces the accuracy of Internet models [46, 25, 16],
and encourages overlay networks to ignore the underlay [2, 27].
Because network operators rarely publish their topologies, and
the IP protocols have little explicit support for exposing the In-
ternet’s underlying structure, researchers must infer the topology
from measurement and observation. A router-level network topol-
ogy consists of two types of features:
links and aliases. A link
connects two IP addresses on distinct routers, and an alias identi-
ﬁes two IP addresses on the same router. The goal is to discover
a router-level map that is both accurate—all inferred features re-
ﬂect the actual topology—and complete—features are inferred for
as many pairs of IP addresses as possible.
The problem is that topology discovery techniques are error-
prone. The current state-of-the-art [40, 21] uses TTL-limited probes,
i.e., traceroute (TR), to infer links, and direct router probing [40,
12] to discover aliases. However, topologies inferred from these
techniques are known to inﬂate the number of observed routers [44],
record incorrect links [3], and bias router degree distributions [18].
These errors result from routers that do not respond to alias reso-
lution techniques, anonymous routers [45], mid-measurement path
instabilities [30], MPLS [35], and insufﬁcient measurement van-
tage points. The Passenger tool [38] demonstrates that the record
route (RR) IP option discovers aliases for unresponsive routers and
exposes MPLS tunnels, anonymous routers, and mid-measurement
path instabilities. However, RR’s accuracy depends on correctly
aligning RR and TR discovered IPs, itself an error-prone procedure.
Passenger’s preliminary work reports that almost 40% of their data
could not be aligned and was unusable. Of the usable data, almost
11% of the inferred aliases were incorrect.
Unfortunately, accuracy and completeness can be at odds: for
example, measuring more path data can help complete the map,
but may also contribute inaccurate links. This is because topology
errors accumulate—adding additional correct facts cannot “aver-
age away” a falsely asserted link. Similarly, alias inferences are
transitive—a single false alias causes a cascading transitive closure
of false aliases. We make the observation that if all topology data
has error, then the vast data required for a complete map must have
a great deal of accumulated error. Thus, in order to achieve both
accuracy and completeness at the same time, a topology inference
system must actively identify and remove error.
Our insight is that the overall error can be reduced by cross-
validating both TR and RR inference techniques against observed
network engineering practices. For example, a correctly imple-
mented router would never forward packets directly back to itself,
so any topology that asserts a link and an alias between the same
pair of IP addresses must be inaccurate. Thus, by carefully merg-
ing three disparate sources of information, the resultant topology is
both more accurate and more complete.
We present DisCarte, a novel topology data cross-validation sys-
tem. DisCarte formulates topology inference and cross-validation
as a constraint solving problem using disjunctive logic program-
ming (DLP). DisCarte inputs traces from TR and RR, and, using
observed network engineering practices as constraints, outputs a
single merged topology. Compared to Rocketfuel-based [40] tech-
niques, topologies produced with DisCarte ﬁnd 11% more aliases
from unresponsive routers, and expose additional topology features
such as MPLS, router manufacturer, equal cost multi-pathing, and
hidden and anonymous routers. Compared to Passenger [38], Dis-
Carte correctly aligns 96% of RR and TR addresses, and reduces
the false alias rate to approximately 3%. The effect of the improved
topology is visually evident: we compare the topology of the pop-
ular Abilene network as inferred by Rocketfuel and DisCarte to the
actual published topology (Figure 1).
In this paper, we describe the qualitative beneﬁts of DisCarte in-
ferred topologies (Section 2) and the difﬁculties in achieving accu-
rate topologies (Section 3). We then discuss the individual elements
of the DisCarte system (Section 4) and a novel divide-and-conquer
scheme (Section 5) we implement to scale DLP to the 1.3 billion
facts in our system. We detail our data collection process (Sec-
tion 6), quantify the beneﬁt of DisCarte inferred topologies (Sec-
tion 7), and show DisCarte’s effect on bias (Section 8). We then
conclude how one might redesign record route (Section 10) to aid
topology discovery and describe our future work (Section 11).
2. CROSS-VALIDATING WITH DISCARTE
In this section, we describe the beneﬁts of correctly merged trace-
route-inferred and RR-inferred topologies. Traceroute (TR) uses
TTL-limited probes to generate ICMP time-exceeded responses from
each router on a path. The source IP address of each time-exceeded
message exposes an IP address for the corresponding router. The
record route (RR) IP option is an array in the IP header into which
each router on the path inserts an IP address. The array can store
at most nine addresses, bound by the size limit of the IP header.
Because of how they are implemented (Section ??), TR and RR
discover distinct IP addresses for a given router. TR discovers the
IP address for the incoming interface whereas RR can discover the
outgoing or internal routing interface depending on implementa-
tion. We say that a TR-trace and RR-trace have been correctly
address aligned if each TR-discovered address has been correctly
mapped to the RR-discovered address of the same router.
TR and RR can be combined into a single TTL-limited probe
with the RR option set. Because an ICMP unreachable error mes-
sage includes the entire IP header of the failed message, we can
recover the RR array from the responses to TTL-limited probes:
RR packets need not reach the destination of the probe. Thus, RR
does not require the packet destination to return the RR probe, i.e.,
“ping -R” is not the only means of collecting RR data.
2.1 Beneﬁts of Cross-Validation
Cross-validating TR and RR information against observed net-
work engineering practices results in higher quality address align-
ment. Correct address alignment discovers aliases for routers that
do not respond to direct probing, hidden and anonymous routers,
and multi-path load balancing.
Alias resolution does not require direct probing.
In our survey, 193,192 of 602,136 (32.1%) IP addresses do not
respond to probes addressed directly to them, preventing both IP-
identiﬁer-based matching (“ally” [40]) and source-address match-
ing [29, 12] alias resolution techniques. Six years ago, approxi-
mately 10% were unresponsive [40], suggesting that techniques for
alias resolution without direct probing will be increasingly impor-
tant. We further characterize the aliases RR allows us to discover
in Section 7.
RR exposes hidden and anonymous routers.
We call routers hidden if they do not decrement TTL and do not
appear inside a traceroute; some implementations of MPLS [35]
cause hidden routers. Anonymous routers [45] are routers that decre-
ment TTL but do not send the corresponding ICMP time-exceeded
messages: they appear as a ’*’ in traceroute. The absence of in-
formation from these routers is a signiﬁcant source of error [45].
Out of 100,256 routers observed in our study, RR discovered IP
addresses for 2,440 (2.4%) distinct anonymous routers that would
have been missed by TR-only techniques. Additionally, we dis-
cover 329 (0.3%) distinct hidden routers.
RR discovers multi-path load balancing.
Internet Service Providers (ISPs) use multiple routes across equal-
cost paths to load balance trafﬁc. To prevent out-of-order packet
arrival, load balancing routers attempt to map packets in the same
ﬂow to the same path. However, due to implementation decisions [6]
in some routers, packets with IP options, including RR, break this
ﬂow-to-path mapping and traverse multiple equal-cost paths. Thus,
probes with RR detect load balancing routers and enumerate addi-
tional paths more correctly than TR alone.
RR exposes mid-measurement path instability.
Mid-measurement path instabilities cause TR to infer incorrect
links: TR assumes that sequential probes traverse the same paths.
Recent techniques (Paris traceroute [3] and TCP Sidecar [37, 38])
mitigate this concern by preventing a speciﬁc class of instabilities:
ﬁve-tuple load balancing multi-path. Because RR has per-packet
path information, we can detect all forms of mid-measurement path
changes in the ﬁrst nine hops. Thus, links discovered via RR exist
with higher conﬁdence than links discovered by TR alone.
A trace between Zhengzhou University, China to SUNY Stony
Brook, USA (Figure 2) is an example of the differences between
topology discovery with and without DisCarte. Each box repre-
sents a router, and each rectangle within a router represents an in-
terface. Lines between interfaces indicate links. We resolve DNS
names of IP addresses when available, and show only the ﬁrst four
hops of the trace then a dotted line to the destination. The trace
without RR discovers at most one interface on each router, and
fails to discover any interfaces on router 3 (because it is anony-
mous). Adding RR to the probes and performing address alignment
(Section 3) discovers many interfaces on each router and exposes
many connections between routers, presumably for load balancing.
Router labels (S1, R2, etc.) are annotated with their inferred RR
implementation type (Section 3.1).
2.2 Cross Validation Limitations: RR
Many of the beneﬁts of cross-validation rely on the RR option
which has two limitations: RR includes only nine hops of data and
packets with RR may be dropped or ﬁltered. We describe each in
turn.
Because the IP header can hold at most 60 bytes, RR can record
only nine IP addresses. We believe the nine-hop limit is why RR
has been passed over for topology discovery. Yet, there is reason
dnvrng
sttlng
dnvrng
dnvrng
snvang
newy32aoa
newy32aoa
wash
kans
newy32aoa
atla
atla
wash
newy32aoa
atla
wash
newy32aoa
dnvrng
losang
atla
wash
newy32aoa
sttlng
chic
atla
atla
wash
wash
sttlng
kans
salt
newy32aoa
newy32aoa
sttlng
sttlng
wash
hstnng
wash
losang
hstnng
sttlng
atla-m5
dnvrng
snvang
snvang
snvang
chic
chic
atla
hstnng
losang
chic
chic
chic
chic
chic
chic
hstnng
snvang
kans
salt
losang
hstnng
chic
wash
chic
hstnng
kans
atla
kans
chic
losang
chic
chic
chic
chic
losang
chic
chic
chic
chic
chic
atla-m5
newy32aoa
wash
chic
atla
hstnng
kans
salt
sttlng
losang
snvang
atla-m5
newy32aoa
wash
chic
atla
hstnng
kans
salt
sttlng
losang
snvang
dnvrng
dnvrng
Figure 1: Abilene topology: inferred by Rocketfuel (left, routers unresponsive to direct alias resolution), DisCarte (middle), and
actual topology (right). Rectangles are routers with interior ovals representing interfaces.
to revisit this concern. PlanetLab makes available a geographically
diverse set of vantage points; these may be within nine hops of