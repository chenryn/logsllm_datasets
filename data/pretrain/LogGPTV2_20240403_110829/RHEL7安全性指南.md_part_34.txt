:   ::: para
    `msg`{.literal} 输入栏记录：
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `audit(time_stamp:ID)`{.literal} 表格中记录的时间戳和特殊
        ID。如果多种记录生成为相同审核事件的一部分，那么它们可以共享相同的时间戳和
        ID。
        :::
    -   ::: para
        Kernel 或者用户空间应用提供不同的事件特定 `name=value`{.literal}
        组。
        :::
    :::
[`arch=c000003e`{.literal}]{.term}
:   ::: para
    `arch`{.literal} 输入栏包括关于系统CPU架构的信息。值
    `c000003e`{.literal} 是使用 16 进制表示法编码。当使用
    `ausearch`{.command} 命令搜寻审核记录时, 使用 `-i`{.option} 或者
    `--interpret`{.option} 选项自动转化为 16 进制值可供人读取的对等语。
    `c000003e`{.literal} 值被解释为 `x86_64`{.literal}。
    :::
[`syscall=2`{.literal}]{.term}
:   ::: para
    `syscall`{.literal} 输入栏记录了传输给 Kernel 的输入栏类型。值
    `2`{.literal} 可以与在 `/usr/include/asm/unistd_64.h`{.filename}
    文件中可供人读取的对等语相匹配。 在这种情况下，`2`{.literal} 是
    `open`{.literal} 系统调用。 请注意 [**ausyscall**]{.application}
    实用程序允许您把系统调用数字转换成可供人读取的对等语。 使用
    `ausyscall --dump`{.command}
    命令来展示所有的系统调用和它们的号码。如想要获取更多信息，请参考
    [[ausyscall]{.refentrytitle}(8)]{.citerefentry} 手册页。
    :::
[`success=no`{.literal}]{.term}
:   ::: para
    `success`{.literal}
    输入栏记录了系统调用是否被成功地记录在特定事件中。在这种情况下，调用不会成功。
    :::
[`exit=-13`{.literal}]{.term}
:   ::: para
    `exit`{.literal}
    输入栏包含详细说明由系统调用所返回的退出代码的值。在不同的系统调用中，值各不相同。您可以用以下命令把值解释为可供人读取的对等语：`ausearch --interpret --exit -13`{.command}（假设您的审核日志中包含的事件没有退出代码
    `-13`{.literal}）。
    :::
[`a0=7fffd19c5592`{.literal}, `a1=0`{.literal}, `a2=7fffd19c5592`{.literal}, `a3=a`{.literal}]{.term}
:   ::: para
    `a0`{.literal} 到 `a3`{.literal}
    输入栏记录了前四个参数，在这个事件中使用 16
    进制编码系统调用。这些参数取决于使用的系统调用；它们可以通过
    [**ausearch**]{.application} 实用程序来解释。
    :::
[`items=1`{.literal}]{.term}
:   ::: para
    `items`{.literal} 输入栏包含事件中路径记录的数量。
    :::
[`ppid=2686`{.literal}]{.term}
:   ::: para
    `items`{.literal} 输入栏记录了父进程
    ID（PPID）。在这个情况下，`2686`{.literal} 是 `bash`{.systemitem}
    进程的 PPID。
    :::
[`pid=3538`{.literal}]{.term}
:   ::: para
    `pid`{.literal} 输入栏记录了进程
    ID（PID）。在这个情况下，`3538`{.literal} 是 `cat`{.systemitem}
    进程的 PID。
    :::
[`auid=500`{.literal}]{.term}
:   ::: para
    `auid`{.literal} 输入栏记录了审核用户 ID，这个是
    loginuid。这个ID是用户在登录时使用的并且即使当用户身份改变时，也可以通过每个进程获取该ID。（例如，通过切换用户账户，使用
    `su - john`{.command}命令）。
    :::
[`uid=500`{.literal}]{.term}
:   ::: para
    `uid`{.literal} 输入栏记录了开始分析进程的用户
    ID。使用以下指令：`ausearch -i --uid UID`{.command}，用户 ID
    就可以被解释为用户名字。在这个情况下， `500`{.literal} 是
    `shadowman`{.literal} 的用户 ID。
    :::
[`gid=500`{.literal}]{.term}
:   ::: para
    `gid`{.literal} 输入栏记录了开始分析进程用户的 ID组。
    :::
[`euid=500`{.literal}]{.term}
:   ::: para
    `euid`{.literal} 输入栏记录了开始分析进程用户的有效用户 ID。
    :::
[`suid=500`{.literal}]{.term}
:   ::: para
    `suid`{.literal} 输入栏记录了开始分析进程的用户的设置用户 ID。
    :::
[`fsuid=500`{.literal}]{.term}
:   ::: para
    `fsuid`{.literal} 输入栏记录了开始分析进程用户的文件系统用户 ID。
    :::
[`egid=500`{.literal}]{.term}
:   ::: para
    `egid`{.literal} 输入栏记录了开始分析进程用户的有效群组 ID。
    :::
[`sgid=500`{.literal}]{.term}
:   ::: para
    `sgid`{.literal} 输入栏记录了开始分析进程用户的设置群组 ID。
    :::
[`fsgid=500`{.literal}]{.term}
:   ::: para
    `fsgid`{.literal} 输入栏记录了开始分析进程的用户的文件系统群组 ID。
    :::
[`tty=pts0`{.literal}]{.term}
:   ::: para
    `tty`{.literal} 输入栏记录了调用分析进程的终端。
    :::
[`ses=1`{.literal}]{.term}
:   ::: para
    `ses`{.literal} 输入栏记录了调用分析进程会话的会话 ID。
    :::
[`comm="cat"`{.literal}]{.term}
:   ::: para
    `comm`{.literal}
    输入栏记录了命令行的名字，它被用于调用分析进程。在这种情况下
    `cat`{.command} 命令被用来触发审核事件。
    :::
[`exe="/bin/cat"`{.literal}]{.term}
:   ::: para
    `exe`{.literal} 输入栏记录了被用来调用分析进程的可执行的路径。
    :::
[`subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023`{.literal}]{.term}
:   ::: para
    `subj`{.literal} 输入栏记录了 SELinux
    语境，运用此语境可以在执行时间中标注分析进程。
    :::
[`key="sshd_config"`{.literal}]{.term}
:   ::: para
    `key`{.literal}
    输入栏记录了所有管理者定义的字符串，它与在审核日志中生成该事件的规则有关。
    :::
:::
### [⁠]{#chap-system_auditing.html#bh-second_record}第二记录
::: variablelist
[`type=CWD`{.literal}]{.term}
:   ::: para
    在第二记录中，`type`{.literal} 输入栏数值是 `CWD`{.literal} ---
    当前工作目录。这种类型用于记录在被执行的第一记录中详细说明的触发系统调用的进程。
    :::
    ::: para
    这个记录的目的是为了记录当前进程的位置以防在相关的 PATH
    记录中捕捉到相对路径。运用这个方法可以重塑绝对路径。
    :::
[`msg=audit(1364481363.243:24287)`{.literal}]{.term}
:   ::: para
    `msg`{.literal} 输入栏持有与第一记录中的数值相同的时间戳和 ID 值。
    :::
[`cwd="/home/shadowman"`{.literal}]{.term}
:   ::: para
    `cwd`{.literal} 输入栏含有进入目录的路径，在目录中触发系统调用。
    :::
:::
### [⁠]{#chap-system_auditing.html#bh-third_record}第三记录
::: variablelist
[`type=PATH`{.literal}]{.term}
:   ::: para
    在第三记录中， `type`{.literal} 输入栏值是
    `PATH`{.literal}。每个审核事件包含一个 `PATH`{.literal}
    对于每条路径种类的记录作为一个参数，传输给系统调用。在审核事件中，只有一条路径（`/etc/ssh/sshd_config`{.filename}）被用来作为参数。
    :::
[`msg=audit(1364481363.243:24287):`{.literal}]{.term}
:   ::: para
    `msg`{.literal} 输入栏持有与第一和第二记录中的值相同的时间戳和 ID
    值。
    :::
[`item=0`{.literal}]{.term}
:   ::: para
    `item`{.literal} 输入栏表明在所有项目中，哪个项目在
    `SYSCALL`{.literal}
    类型记录中，参考了当前记录。这个是数字是以零为基准；值 `0`{.literal}
    意味着它是第一项。
    :::
[`name="/etc/ssh/sshd_config"`{.literal}]{.term}
:   ::: para
    `name`{.literal}
    输入栏记录了文件或者目录的所有路径，作为参数被传输给系统调用。在这种情况下，它是
    `/etc/ssh/sshd_config`{.filename} 文件。
    :::
[`inode=409248`{.literal}]{.term}
:   ::: para
    `inode`{.literal}
    输入栏包含索引结点数字，与记录在事件中的文件和目录有关。以下命令体现了与
    `409248`{.literal} 索引结点数字相关的文件和目录：
    :::
    ``` screen
    ~]# find / -inum 409248 -print
    /etc/ssh/sshd_config
    ```
[`dev=fd:00`{.literal}]{.term}
:   ::: para
    `dev`{.literal} 输入栏明确说明了设备的次要和主要
    ID，它包含记录在事件中的文件和目录。在这种情况下，值代表
    `/dev/fd/0`{.filename} 设备。
    :::
[`mode=0100600`{.literal}]{.term}
:   ::: para
    `mode`{.literal} 输入栏记录了文件和目录权限，用 16
    进制表示法编码。在这种情况下，`0100600`{.literal} 可以被解释为
    `-rw-------`{.literal}，意味着对于 `/etc/ssh/sshd_config`{.filename}
    文件，只有 root 用户拥有读取并且输入权限。
    :::
[`ouid=0`{.literal}]{.term}
:   ::: para
    `ouid`{.literal} 输入栏记录了对象所有者的用户 ID。
    :::
[`ogid=0`{.literal}]{.term}
:   ::: para
    `ogid`{.literal} 输入栏记录对象拥有者的群组 ID。
    :::
[`rdev=00:00`{.literal}]{.term}
:   ::: para
    `rdev`{.literal}
    输入栏包含记录的设备识别器只用于特殊文件。在这种情况下，正常文件是不用来作为记录文件的。
    :::
[`obj=system_u:object_r:etc_t:s0`{.literal}]{.term}
:   ::: para
    `obj`{.literal} 输入栏记录了 SELinux
    语境，运用此语境可以在执行时间中标注分析进程。
    :::
:::
::: para
以上分析过的审核事件是事件所包含的所有可能位置栏的一小部分。为了列出所有事件的位置栏及解释，请参考〈[第 B.1 节
"审核事件字段"](#app-Audit_Reference.html#sec-Audit_Events_Fields){.xref}〉。为了列出所有事件类型以及解释，请参考〈[第 B.2 节
"审核记录类型"](#app-Audit_Reference.html#sec-Audit_Record_Types){.xref}〉。
:::
::: example
[⁠]{#chap-system_auditing.html#ex-audit_log_events}
**例 5.5. 其他的 `audit.log`{.filename} 事件。**
::: example-contents
::: para
以下审核事件记录了成功启动的 `auditd`{.systemitem} 守护程序。
`ver`{.literal} 位置栏显示了已经开始的审核守护程序的版本。
:::
``` screen
type=DAEMON_START msg=audit(1363713609.192:5426): auditd start, ver=2.2 format=raw kernel=2.6.32-358.2.1.el6.x86_64 auid=500 pid=4979 subj=unconfined_u:system_r:auditd_t:s0 res=success
```
::: para
以下审核事件记录了作为 root 用户使用 UID 500 登录失败。
:::
``` screen
type=USER_AUTH msg=audit(1364475353.159:24270): user pid=3280 uid=500 auid=500 ses=1 subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 msg='op=PAM:authentication acct="root" exe="/bin/su" hostname=? addr=? terminal=pts/0 res=failed'
```
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-system_auditing.html#sec-Searching_the_Audit_Log_Files}5.7. 搜索审核日志文件 {.title}
:::
::: para
[**ausearch**]{.application}
实用程序允许您为特定事件搜索审核日志文件。默认情况下，[**ausearch**]{.application}
寻找 `/var/log/audit/audit.log`{.filename} 文件。您可以使用
`ausearch options -if file_name`{.command}命令来详细说明不同的文件。在一个
`ausearch`{.command} 命令中提供多种选择等同于使用 [*AND*]{.emphasis}
运算符。
:::
::: example
[⁠]{#chap-system_auditing.html#ex-ausearch_examples}
**例 5.6. 使用 `ausearch`{.command} 搜索审核日志文件**
::: example-contents
::: para
因登录失败而搜索 `/var/log/audit/audit.log`{.filename}
文件，请使用以下命令。
:::
``` screen
~]# ausearch --message USER_LOGIN --success no --interpret
```