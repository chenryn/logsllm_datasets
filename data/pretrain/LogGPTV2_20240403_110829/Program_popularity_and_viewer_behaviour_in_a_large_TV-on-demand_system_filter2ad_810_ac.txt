### 4.2.2 The Lifespan of a TV News Program

TV news programs have a much shorter lifespan compared to movies. Figure 12 illustrates the rank and number of requests per hour for a news program that was broadcast live at 19:00. Most of the requests occur in the first hour when the program becomes available. During this period, the news program immediately rises to the top of the ranking, becoming the most requested program. However, its popularity quickly declines, and there are virtually no requests for the news program after the first day. This access pattern is notably different from the one observed in Figure 11 for a simultaneously available movie.

### 4.2.3 Periodic Increases in Popularity for TV Series and Children’s Programs

The interest in a TV program typically decreases over time. However, the popularity of a program can also experience temporary or periodic increases. As discussed in previous sections, the number of requests for a program varies throughout the day and week. Additionally, rental movies often see an increase in ranking during weekends.

Many TV shows are part of a series. When a new episode is aired, there is often renewed interest in older episodes available on-demand. Figure 13 provides an example, showing the rank and number of started sessions per day for an episode of a weekly home improvement TV show. The program's rank increases every Thursday when the series is broadcast on traditional scheduled TV.

Figure 14 illustrates the number of requests per day and the ranking for a cartoon. After an initial peak in interest, the popularity stabilizes at a steady level over the month. However, on an hourly basis, the ranking fluctuates. Figure 15 shows the ranking per hour during the first week, with a similar pattern observed over the next three weeks. The program frequently enters and exits the top 100 list, often twice a day.

Children’s programs experience an increase in requests during mornings and early evenings, which is a daily recurring pattern. At these times, there is relatively low demand for other TV programs, so fewer requests are needed to achieve a high ranking.

### 5. Impact on Caching

In the previous sections, we examined various aspects of access patterns in a TV-on-Demand system. In this section, we explore the impact of these patterns on caching. We analyze the proportion of requests that are not first-time requests for a program, which could potentially be served from a cache. We consider different population sizes and time periods.

We use trace-driven simulation to investigate the cache friendliness of the workload with limited cache sizes and classic LRU (Least Recently Used) and LFU (Least Frequently Used) cache replacement policies. We run the sequence of requests through caches of varying sizes and examine the resulting cache hit ratios.

#### 5.1 Cacheability

For on-demand caching, the first request for a program must go to the central server. However, if we assume an unlimited cache size, all subsequent requests could be served from the local cache. Therefore, it is important to examine the proportion of requests that are not first-time requests, which we refer to as cacheability.

Our dataset does not include information about program size, so we only consider requests. Cacheability is defined as the share of requests that are not first-time requests. If \( k_i \) is the total number of requests for a program \( k \), then the cacheability is given by:

\[
\text{Cacheability} = \frac{\sum_{i=1}^{n} (k_i - 1)}{\sum_{i=1}^{n} k_i}
\]

where \( n \) is the number of programs.

In the TV-on-Demand system, the share of first-time requests is very low when considering all clients over a long period. The cacheability over 125 days is 99.13%.

Figure 16 shows the cacheability per day and per hour for populations of different sizes. The median cacheability per hour for all clients in the region during the week is 59%, with large daily variations. During nighttime, many programs are requested only once, leading to low cacheability. On Friday and Saturday evenings, cacheability exceeds 80%.

Figure 17 presents examples of cacheability over 125 days for smaller populations. For very small populations, the probability that a viewer will choose a program that no one else in the group has requested before is high, resulting in low cacheability. However, for groups of 1000 viewers, the cacheability is above 60%. The median cacheability for five different groups of 1000 viewers was 63.9%, with the lowest result being 61.7%.

#### 5.2 Limited Cache Size

While the cacheability in the TV-on-Demand system is high, practical limitations in cache size must be considered. To study the cache friendliness of the workload, we use trace-driven simulation. We run the sequence of requests through caches of different sizes and analyze the cache hit ratios for three classic caching policies:

- **Least Recently Used (LRU)**: This strategy removes the program that has not been requested for the longest time.
- **Least Frequently Used (LFU)**: This strategy discards the program that is requested least often, based on the hit ratio of all programs currently in the cache.
- **Clairvoyant**: This strategy, used for comparison, deletes the program that will not be needed for the longest time. It is implemented by running through the traces twice to determine future requests.

Figure 18 shows the cache hit ratios for the LRU, LFU, and Clairvoyant replacement policies for increasing cache sizes. The hit ratios are calculated over 3 days, and the x-axis represents the cache size in terms of the number of programs. The median number of distinct programs requested per day is 7523. To relate the hit ratio and cache size to daily demand, we specifically examine cache sizes of 376, 752, and 1504 programs.