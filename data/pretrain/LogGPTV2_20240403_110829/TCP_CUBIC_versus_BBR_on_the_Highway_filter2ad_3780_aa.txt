title:TCP CUBIC versus BBR on the Highway
author:Feng Li and
Jae Won Chung and
Xiaoxiao Jiang and
Mark Claypool
TCP CUBIC versus BBR on the Highway
Feng Li1, Jae Won Chung1, Xiaoxiao Jiang1(B), and Mark Claypool2
1 Verizon Labs, 60 Sylvan Road, Waltham, MA 02451, USA
PI:EMAIL
2 Worcester Polytechnic Institute, 100 Institute Road, Worcester, MA 01609, USA
Abstract. 4G Long Term Evolution (LTE) networks present new fea-
tures of high capacities together with end-user mobility. These challenges
have led to a gap in the understanding of the eﬀectiveness of TCP con-
gestion control algorithms in LTE networks with mobile users. To fur-
ther understanding, we conduct a detailed measurement study comparing
TCP CUBIC with Bottleneck Bandwidth and Round-trip propagation
time (BBR) – a new congestion control alternative developed by Google
– in a high-speed driving scenario over a tier-1 U.S. wireless carrier. Our
results show CUBIC and BBR generally have similar throughputs, but
BBR has signiﬁcantly lower self-inﬂicted delays than CUBIC.
1 Introduction
Access between urban towers is one of the most important features of 4G LTE
networks, providing mobility for end users, particularly when driving. While
studies have helped to better understand LTE performance [2,5,7,10,13], unfor-
tunately, there has been little systematic research on “in the wild” TCP per-
formance for driving at high speeds (e.g., on the U.S. Interstate). This lack
of knowledge makes modeling and simulating TCP over LTE networks diﬃcult
and slows development of TCP improvements for mobile networks. Moreover, the
new Bottleneck Bandwidth and Round-trip propagation time (BBR) congestion
control algorithm [3,4] has yet to be evaluated over 4G LTE.
To better understand TCP performance in highway driving conditions and
provide valuable mobility performance data on U.S. LTE networks, we collect real-
world network traces from a tier-1 wireless carrier while driving on a U.S. inter-
state highway between Worcester, MA, and Morristown, NJ, driving about 8 h
and 400 miles (675 km) round-trip. Our traces include physical and medium access
control layer measurements (e.g., signal strength and tower handover), correlated
with higher-layer TCP performance (e.g., throughput and round-trip time).
Our results show that: (1) there is a fairly uniform distribution (0 to 30 dB) of
signal to interference-plus-noise ratios (SINRs) along the route; (2) the round-
trip times from the mobile device to servers in the wireless AS are modest,
mostly ranging from 40–80 ms; (3) most downloads (20 MBytes) do not expe-
rience a tower handover despite the highway speeds; (4) for 20 MB downloads,
BBR and CUBIC have similar throughputs, but BBR has signiﬁcantly lower
c(cid:2) Springer International Publishing AG, part of Springer Nature 2018
R. Beverly et al. (Eds.): PAM 2018, LNCS 10771, pp. 269–280, 2018.
https://doi.org/10.1007/978-3-319-76481-8_20
270
F. Li et al.
round-trip times; (5) for 1 MB downloads, BBR has higher throughputs but also
higher round-trip times; and (6) for 20 MB downloads, BBR experiences far fewer
duplicate ACKs than does CUBIC (median less than 1% versus about 5–10%).
The rest of paper is organized as follows: Sect. 2 summarizes related research;
Sect. 3 describes our methodology for measuring TCP over 4G LTE while high-
way driving; Sect. 4 presents the physical and medium access control layer mea-
surement results; Sect. 5 compares the performance of TCP under the experiment
conditions; and Sect. 6 concludes our work and presents possible future work.
2 Related Work
Huang et al. [5] studied the performance of TCP over LTE through packet traces
collected from a carrier’s network. Although their results conﬁrm shorter round-
trip times over LTE compared to 3G, they do not provide physical nor medium
access control layer analysis. Xiao et al. [12] measured TCP throughput and
round-trip times over stationary, driving and railway scenarios in LTE. While
their results show TCP throughput degrades in high-speed conditions, their mea-
sured throughputs are lower than what is typically available with LTE. Merz
et al. [7] conducted a measurement study focusing on the performance of LTE
in high-speed conditions, but their measurements do not include upper layer
performance (e.g., the Transport layer).
Most closely related to our study, Eneko et al. [2] and Remi et al. [10] inves-
tigated performance with wireless mobility for ﬁve diﬀerent TCP congestion
control algorithms (CCAs): CUBIC, New Reno, Westwood+, Illinois, and CAIA
Delay Gradient (CDG). Although they used Linux kernel code [11] for the CCAs,
their network was simulated via ns-3,1 making it diﬃcult to determine how well
their results match real highway driving conditions.
Our work diﬀers from the above by providing comparative TCP performance
in a highway driving scenario, with insights into radio conditions, and a ﬁrst look
at the performance of the Bottleneck Bandwidth and Round-trip propagation
time (BBR) algorithm [4] over 4G as it compares to CUBIC. Plus, we have
an opportunity to conﬁrm some of the simulated results by Robert et al. [10]
with experimental measurements, and compare some measured results by Xiao
et al. [12], Huang et al. [5] and Cardwell et al. [4] to our measurements.
3 Methodology
Figure 1 depicts details of our measurement methodology. Shown are the con-
gestion control algorithms (CCAs) studied (Sect. 3.1), the experiment setup
(Sect. 3.2) and the driving scenario (Sect. 3.3).
1 https://www.nsnam.org.
TCP CUBIC versus BBR on the Highway
271
Fig. 1. Measurement setup and driving scenario
3.1 Congestion Control Algorithms
Our study focuses on three TCP CCAs:
CUBIC (k3.19) and CUBIC (k4.8) – the default CCA in most Linux
servers. The CUBIC version used for production servers is generally based on
the series 3 kernel, but CUBIC for the series 4 kernel is slightly diﬀerent. So, one
testbed server runs CUBIC on a 3.19.0-25-generic kernel and another CUBIC
on a 4.8-rc6 kernel, treating each as separate CCAs for this study.
BBR [4] – a new congestion control algorithm which calculates the conges-
tion window size by measuring the bottleneck bandwidth and round-trip prop-
agation time and sends packets at a paced rate. One of our testbed servers runs
BBR with net-next2 as a patch for Linux kernel 4.8-rc6.
3.2 Experiment Setup
We perform measurements on a tier-1 wireless carrier while driving in South-
ern New England (U.S.) on two consecutive weekdays, October 24th and 25th,
2016. Before starting, we setup three separate servers – one for each TCP CCA
studied – each a HP Proliant 460c Gen9 blade with 128 GB RAM and a dual
socket 2.60 GHz ten-core Intel Xeon ES-2660v3 CPUs on the same chassis. All
three servers are inside the wireless carrier AS, connected to the Internet through
the same HPE 6120XG 10 Gbps switch.
The three servers are conﬁgured with the same parameters, except for the
Linux kernel version and CCA (see Sect. 3.1). All kernel parameters are set
to their default values, except for two Ethernet parameters tweaked to improve
throughput: (i) Ethernet transmission queue size (txqueuelen) increased to 10 k
packets for higher throughput; and (ii) MTU reduced to 1428 bytes to accom-
modate GTP headers, avoiding fragmentation on the LTE network. Based on
recommendations by Cardwell et al. [4], we enable fair queuing and pacing using
2 git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git.
272
F. Li et al.
Linux Traﬃc Control (tc) utilities on the BBR server only (such settings are
not known to impact CUBIC performance and generally are not enabled).
All three servers run Apache 2.4.7 with PHP 5.5. A custom PHP script
dynamically generates 20 MB ﬁles with random content (to avoid any possi-
ble caching) for the smart phone to download. Tcpdump captures packet traces,
setup to record 300 bytes per packet to provide complete TCP headers (the
servers send only TCP traﬃc to the smart phone). Tests show the PHP script
and tcpdump have less than a 1% CPU load on each server. Note, the three
servers are dedicated to our performance study, reachable only from a small
number of smart phones from our test device pool.
The client smart phone is an LG G2 VS980 with 2 GB RAM and a 32-bit
Qualcomm Snapdragon S4 Prime Quad Core CPU, running Android 4.3.2 and
continually at full charge via a power brick. The phone runs Qualipoc, measuring
radio characteristics each second, baseline round-trip times via ping (ICMP), and
throughput via HTTP download.
The cellular network provides LTE services over two radio spectra: Band
XIII and Advanced Wireless Service (AWS). AWS normally provides more link
capacity in urban areas while Band XIII provides a larger coverage over rural
areas. Since no U.S. carrier provides continuous AWS coverage along highways,
the smart phone is locked to Band XIII for this study.
Our measurement test suite contains 40 test iterations. Each iteration pings
the server (three 56-byte ICMP packets, separated by one second), pauses 3 s,
and then serially downloads a 20 MB ﬁle from each of the three servers. The suite
pauses about 10 s between iterations. In total, one test suite run takes about 1 h,
providing an opportunity for a driver break between suite runs.
3.3 Driving Scenario
As shown in Fig. 2, our highway driving measurements are between Worces-
ter, MA and Morristown, NJ on two consecutive days: departing Worcester on
October 24, 2016 at 3:37 pm to Morristown and returning from Morristown on
Fig. 2. Driving route
TCP CUBIC versus BBR on the Highway
273
6:00 pm on October 25th to Worcester. The average driving speed is 65–70 mph
(about 30 m/s). The total driving distance is about 400 miles (675 km) and takes
8 h, including traﬃc, breaks, and refueling. On each trip, the full test suite is
run three times, with the driver stopping only in-between test suites.
4 Radio Network Characteristics
This section analyzes select radio network characteristics as one aspect of LTE
performance.
i
n
o
i
t
u
b
i
r
t
s
D
e
v
i
t
a
u
m
u
C
l
1
0.75
0.5
0.25
0
-5
0
5
BBR
CUBIC(k3.19)
CUBIC(k4.8)
10
15
Avg SINR (dB)
20
25
30
)
%
(
n
o
i
t
l
a
u
d
o
M
100
90
80
70
60
50
40
30
20
10
0
QPSK
QAM16
QAM64
[-5,0)
[0,5)
[5,10)
[10,15)
[15,20)
[20,25)
[25,30)
SINR (dB)
Fig. 3. SINR distribution
Fig. 4. Downlink modulation vs. SINR
Figure 3 shows the distribution of Signal to Interference-plus-Noise Ratios
(SINRs) for the diﬀerent TCP congestion control algorithms (CCAs). The x-axis
is the SINR, averaged over a trial (ﬁle download), with a trendline shown for each
CCA. From the ﬁgure, the trendlines overlap, suggesting that each CCA experi-
ences similar radio conditions on aggregate, allowing for an equitable comparison
of overall performance. Based on this lack of diﬀerentiation, we do not present
breakdown by CCA for further physical and medium access control layer analy-
sis. For comparison, our observed SINRs match those Merz et al. [7] measured on
inter-city trains in Europe, suggesting similarity in radio coverage.
The modulation (or encoding scheme) selection in LTE depends on the SINR
measured by both user equipment (UE) and radio tower computers (eNodeBs).
Figure 4 shows a histogram of the downlink modulations used for diﬀerent SINRs.
The x-axis is the recorded SINR (in dB) clustered into 5 dB bins, and the y-axis
is the percentage of transmission blocks (TBs) sent at that modulation. For the
best radio conditions (SINRs greater than 20 dB), more than 90% of TBs are
transmitted in 64 QAM (6 bits per symbol). For the worst (SINRs less than
5 dB), most of TBs are transmitted in QPSK (4 bits per symbol). In between
(SINRs between 5 dB and 15 dB), the eNodeBs adapt transmissions among all
three modulations.
274
F. Li et al.
5 CCA Performance
5.1 Single Trial
For illustration, this section compares a single trial of BBR and CUBIC (k4.8)3
over time. Both trials had an SINR greater than 20 dB with no tower handover
and neither ﬂow experienced TCP retransmissions nor packet drops. In Fig. 5,
the left ﬁgure compares the bytes in ﬂight (the as-yet unacknowledged transmit-
ted bytes), while the right ﬁgure shows the round-trip times (RTTs) measured
via TCP ACKs. The BBR ﬂow averaged 45 Mbps and the CUBIC ﬂow aver-
aged 36 Mbps. For comparison, the CUBIC throughputs are about the same as
the maximum simulated throughputs for stationary UEs by Robert et al. [10],
conﬁrming their simulations with our measurements.
From the ﬁgures, BBR transmits aggressively during its initial probing phase
showing a packet and RTT burst, reducing the congestion window to around
500 KB after about 1 s, which also reduces the RTT. After the probing phase,
BBR maintains an RTT under 80 ms and a congestion window around 500 KB.
CUBIC, on the other hand, exits from slow start early in the download (around
0.5 s) with a small congestion window. Although CUBIC’s congestion window is
able to grow up to 1 MB by the end of the download, it is unlikely to fully utilize
the radio link resources for the duration.
)
B
K
(
t
h
g
i
l
F
n
i
s
e
t
y
B
1200
1000
800
600
400
200
CUBIC 4.8
BBR
200
150
100
50
)
s
m
(
T
T
R
CUBIC 4.8
BBR
0
0
1
2
3
Time (secs)
4
5
0
0
1
(a) Bytes in Flight
2
3
Time (secs)
(b) RTT
4
5
Fig. 5. Single trial downlink for BBR and CUBIC (k4.8)
5.2 Throughput
For a core measure of performance, Fig. 6(a) shows the cumulative distribution
of TCP throughputs over all trials, with the x-axis the throughput measured for
each trial. Each CCA is shown with a diﬀerent trendline. Table 1 summarizes
the means, standard deviations, medians and 95% conﬁdence intervals (CI) of
the means.
From Fig. 6(a) and Table 1, the throughput ranges considerably for all three
CCAs with Q1 (the ﬁrst quartile) at about 7 Mbps and Q3 (the third quartile)
at about 20 Mbps. All three CCAs can occasionally achieve more than 30 Mbps.
3 CUBIC (k3.19) behaves similarly to CUBIC (k4.8).
TCP CUBIC versus BBR on the Highway
275
(a)
(b)
Fig. 6. TCP throughput distribution
At the highest, BBR achieves slightly more than 44 Mbps, close to the theo-
retical maximum downlink bit rate of 45 Mbps on a 10 MHz channel with 64
QAM modulation [6]. However, most of the BBR distribution is similar to that
of CUBIC, with overlapping conﬁdence intervals, suggesting comparable perfor-
mance. For comparison, Nguyen et al. [8] only report a throughgput of 2–4 Mbps
when simulating vehicle mobility in ns-3, showing real-world measurements can
be much higher. Xiao et al. [12] report even lower LTE throughput measurements
of around 1.5 Mbps on a train at about 100 kph (around our average speeds), and
much lower at 300 kph. Cardwell et al. [4] measure 2x to 25x greater through-
puts for BBR versus CUBIC for a high-speed (wired) WAN, suggesting BBR’s
throughput beneﬁts may not carry over to LTE.
Table 1. Summary statistics of TCP throughputs
Congestion control algorithm Mean (Mbps) Median (Mbps) 95% CI of Mean
BBR
CUBIC(k3.19)
CUBIC(k4.8)
14.1 ± 9.5
14.0 ± 8.4
13.0 ± 7.8
11.6
11.6
11.1
Left Right
13.1 15.2
13.2 14.8
12.2 13.8
Since 90% of ﬂows from LTE networks carry less than 36 KB on their down-
link payload, and only 0.6% of ﬂows carry more than 1 MB on their downlink
payload [5], to represent small downloads, we also analyze our packet traces
truncated after the ﬁrst ACK with a sequence number larger than 1 MB.
Figure 6(b) shows the cumulative distribution of TCP throughputs with the
same axes and trendlines as for Fig. 6(a). From Fig. 6(b), BBR’s probing phase
results in higher throughputs than CUBIC’s slow start, with a median 1 MB
throughput for BBR about 50% higher than for CUBIC. In comparison to the
throughputs in Fig. 6(b), the highest TCP throughputs (anything larger than
12.5 Mbps) are only achieved for ﬂows larger 1 MB.
276