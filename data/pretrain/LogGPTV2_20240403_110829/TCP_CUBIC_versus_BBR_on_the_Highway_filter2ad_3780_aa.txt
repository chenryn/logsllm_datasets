# TCP CUBIC versus BBR on the Highway

## Authors
- Feng Li¹
- Jae Won Chung¹
- Xiaoxiao Jiang¹ (Corresponding Author)
- Mark Claypool²

¹Verizon Labs, 60 Sylvan Road, Waltham, MA 02451, USA  
²Worcester Polytechnic Institute, 100 Institute Road, Worcester, MA 01609, USA

## Abstract
4G Long Term Evolution (LTE) networks offer high capacity and support for end-user mobility. However, these features have created a gap in understanding the effectiveness of TCP congestion control algorithms in LTE networks with mobile users. To address this, we conducted a detailed measurement study comparing TCP CUBIC and Bottleneck Bandwidth and Round-trip propagation time (BBR) — a new congestion control algorithm developed by Google — in a high-speed driving scenario over a tier-1 U.S. wireless carrier. Our results indicate that CUBIC and BBR generally achieve similar throughputs, but BBR exhibits significantly lower self-inflicted delays compared to CUBIC.

## 1. Introduction
One of the key features of 4G LTE networks is the seamless access between urban towers, which provides mobility for end-users, especially when driving. While several studies have enhanced our understanding of LTE performance [2,5,7,10,13], there has been limited systematic research on "in the wild" TCP performance for high-speed driving (e.g., on U.S. Interstates). This lack of knowledge hinders the modeling and simulation of TCP over LTE networks and slows the development of TCP improvements for mobile networks. Additionally, the new Bottleneck Bandwidth and Round-trip propagation time (BBR) congestion control algorithm [3,4] has not yet been evaluated over 4G LTE.

To better understand TCP performance in highway driving conditions and provide valuable mobility performance data on U.S. LTE networks, we collected real-world network traces from a tier-1 wireless carrier while driving on a U.S. interstate highway between Worcester, MA, and Morristown, NJ, covering approximately 8 hours and 400 miles (675 km) round-trip. Our traces include physical and medium access control layer measurements (e.g., signal strength and tower handover), correlated with higher-layer TCP performance (e.g., throughput and round-trip time).

Our results show that:
1. There is a fairly uniform distribution (0 to 30 dB) of signal-to-interference-plus-noise ratios (SINRs) along the route.
2. The round-trip times from the mobile device to servers in the wireless AS are modest, mostly ranging from 40–80 ms.
3. Most downloads (20 MB) do not experience a tower handover despite the highway speeds.
4. For 20 MB downloads, BBR and CUBIC have similar throughputs, but BBR has significantly lower round-trip times.
5. For 1 MB downloads, BBR has higher throughputs but also higher round-trip times.
6. For 20 MB downloads, BBR experiences far fewer duplicate ACKs than CUBIC (median less than 1% versus about 5–10%).

The rest of the paper is organized as follows: Section 2 summarizes related research; Section 3 describes our methodology for measuring TCP over 4G LTE while highway driving; Section 4 presents the physical and medium access control layer measurement results; Section 5 compares the performance of TCP under the experimental conditions; and Section 6 concludes our work and presents possible future directions.

## 2. Related Work
Huang et al. [5] studied the performance of TCP over LTE through packet traces collected from a carrier’s network. Although their results confirm shorter round-trip times over LTE compared to 3G, they do not provide physical or medium access control layer analysis. Xiao et al. [12] measured TCP throughput and round-trip times over stationary, driving, and railway scenarios in LTE. Their results show that TCP throughput degrades in high-speed conditions, but their measured throughputs are lower than what is typically available with LTE. Merz et al. [7] conducted a measurement study focusing on the performance of LTE in high-speed conditions, but their measurements do not include upper-layer performance (e.g., the Transport layer).

Most closely related to our study, Eneko et al. [2] and Remi et al. [10] investigated the performance of five different TCP congestion control algorithms (CCAs): CUBIC, New Reno, Westwood+, Illinois, and CAIA Delay Gradient (CDG). Although they used Linux kernel code [11] for the CCAs, their network was simulated via ns-3, making it difficult to determine how well their results match real highway driving conditions.

Our work differs from the above by providing comparative TCP performance in a highway driving scenario, with insights into radio conditions, and a first look at the performance of the Bottleneck Bandwidth and Round-trip propagation time (BBR) algorithm [4] over 4G as it compares to CUBIC. We also have the opportunity to confirm some of the simulated results by Robert et al. [10] with experimental measurements and compare some measured results by Xiao et al. [12], Huang et al. [5], and Cardwell et al. [4] to our measurements.

## 3. Methodology
Figure 1 depicts the details of our measurement methodology, including the congestion control algorithms (CCAs) studied (Section 3.1), the experiment setup (Section 3.2), and the driving scenario (Section 3.3).

### 3.1 Congestion Control Algorithms
Our study focuses on three TCP CCAs:
- **CUBIC (k3.19) and CUBIC (k4.8)**: The default CCA in most Linux servers. The CUBIC version used for production servers is generally based on the series 3 kernel, but CUBIC for the series 4 kernel is slightly different. One testbed server runs CUBIC on a 3.19.0-25-generic kernel, and another runs CUBIC on a 4.8-rc6 kernel, treating each as separate CCAs for this study.
- **BBR [4]**: A new congestion control algorithm that calculates the congestion window size by measuring the bottleneck bandwidth and round-trip propagation time and sends packets at a paced rate. One of our testbed servers runs BBR with net-next2 as a patch for Linux kernel 4.8-rc6.

### 3.2 Experiment Setup
We performed measurements on a tier-1 wireless carrier while driving in Southern New England (U.S.) on two consecutive weekdays, October 24th and 25th, 2016. Before starting, we set up three separate servers, one for each TCP CCA studied, each a HP Proliant 460c Gen9 blade with 128 GB RAM and dual socket 2.60 GHz ten-core Intel Xeon ES-2660v3 CPUs on the same chassis. All three servers are inside the wireless carrier AS, connected to the Internet through the same HPE 6120XG 10 Gbps switch.

The three servers are configured with the same parameters, except for the Linux kernel version and CCA (see Section 3.1). All kernel parameters are set to their default values, except for two Ethernet parameters tweaked to improve throughput: (i) Ethernet transmission queue size (txqueuelen) increased to 10 k packets for higher throughput; and (ii) MTU reduced to 1428 bytes to accommodate GTP headers, avoiding fragmentation on the LTE network. Based on recommendations by Cardwell et al. [4], we enabled fair queuing and pacing using Linux Traffic Control (tc) utilities on the BBR server only (such settings are not known to impact CUBIC performance and are generally not enabled).

All three servers run Apache 2.4.7 with PHP 5.5. A custom PHP script dynamically generates 20 MB files with random content (to avoid any possible caching) for the smartphone to download. Tcpdump captures packet traces, set up to record 300 bytes per packet to provide complete TCP headers (the servers send only TCP traffic to the smartphone). Tests show that the PHP script and tcpdump have less than a 1% CPU load on each server. Note that the three servers are dedicated to our performance study and are reachable only from a small number of smartphones from our test device pool.

The client smartphone is an LG G2 VS980 with 2 GB RAM and a 32-bit Qualcomm Snapdragon S4 Prime Quad Core CPU, running Android 4.3.2 and continually at full charge via a power brick. The phone runs Qualipoc, measuring radio characteristics each second, baseline round-trip times via ping (ICMP), and throughput via HTTP download.

The cellular network provides LTE services over two radio spectra: Band XIII and Advanced Wireless Service (AWS). AWS normally provides more link capacity in urban areas, while Band XIII provides larger coverage over rural areas. Since no U.S. carrier provides continuous AWS coverage along highways, the smartphone is locked to Band XIII for this study.

Our measurement test suite contains 40 test iterations. Each iteration pings the server (three 56-byte ICMP packets, separated by one second), pauses 3 seconds, and then serially downloads a 20 MB file from each of the three servers. The suite pauses about 10 seconds between iterations. In total, one test suite run takes about 1 hour, providing an opportunity for a driver break between suite runs.

### 3.3 Driving Scenario
As shown in Figure 2, our highway driving measurements were conducted between Worcester, MA, and Morristown, NJ, on two consecutive days: departing Worcester on October 24, 2016, at 3:37 pm to Morristown and returning from Morristown on October 25th at 6:00 pm to Worcester. The average driving speed was 65–70 mph (about 30 m/s). The total driving distance was about 400 miles (675 km) and took 8 hours, including traffic, breaks, and refueling. On each trip, the full test suite was run three times, with the driver stopping only in-between test suites.

## 4. Radio Network Characteristics
This section analyzes select radio network characteristics as one aspect of LTE performance.

### 4.1 SINR Distribution
Figure 3 shows the distribution of Signal to Interference-plus-Noise Ratios (SINRs) for the different TCP congestion control algorithms (CCAs). The x-axis is the SINR, averaged over a trial (file download), with a trendline shown for each CCA. From the figure, the trendlines overlap, suggesting that each CCA experiences similar radio conditions on aggregate, allowing for an equitable comparison of overall performance. Based on this lack of differentiation, we do not present a breakdown by CCA for further physical and medium access control layer analysis. For comparison, our observed SINRs match those Merz et al. [7] measured on inter-city trains in Europe, suggesting similarity in radio coverage.

### 4.2 Downlink Modulation vs. SINR
The modulation (or encoding scheme) selection in LTE depends on the SINR measured by both user equipment (UE) and radio tower computers (eNodeBs). Figure 4 shows a histogram of the downlink modulations used for different SINRs. The x-axis is the recorded SINR (in dB) clustered into 5 dB bins, and the y-axis is the percentage of transmission blocks (TBs) sent at that modulation. For the best radio conditions (SINRs greater than 20 dB), more than 90% of TBs are transmitted in 64 QAM (6 bits per symbol). For the worst (SINRs less than 5 dB), most of the TBs are transmitted in QPSK (4 bits per symbol). In between (SINRs between 5 dB and 15 dB), the eNodeBs adapt transmissions among all three modulations.

## 5. CCA Performance
### 5.1 Single Trial
For illustration, this section compares a single trial of BBR and CUBIC (k4.8) over time. Both trials had an SINR greater than 20 dB with no tower handover, and neither flow experienced TCP retransmissions nor packet drops. In Figure 5, the left figure compares the bytes in flight (the as-yet unacknowledged transmitted bytes), while the right figure shows the round-trip times (RTTs) measured via TCP ACKs. The BBR flow averaged 45 Mbps, and the CUBIC flow averaged 36 Mbps. For comparison, the CUBIC throughputs are about the same as the maximum simulated throughputs for stationary UEs by Robert et al. [10], confirming their simulations with our measurements.

From the figures, BBR transmits aggressively during its initial probing phase, showing a packet and RTT burst, reducing the congestion window to around 500 KB after about 1 second, which also reduces the RTT. After the probing phase, BBR maintains an RTT under 80 ms and a congestion window around 500 KB. CUBIC, on the other hand, exits from slow start early in the download (around 0.5 seconds) with a small congestion window. Although CUBIC's congestion window is able to grow up to 1 MB by the end of the download, it is unlikely to fully utilize the radio link resources for the duration.

### 5.2 Throughput
For a core measure of performance, Figure 6(a) shows the cumulative distribution of TCP throughputs over all trials, with the x-axis representing the throughput measured for each trial. Each CCA is shown with a different trendline. Table 1 summarizes the means, standard deviations, medians, and 95% confidence intervals (CI) of the means.

From Figure 6(a) and Table 1, the throughput ranges considerably for all three CCAs, with Q1 (the first quartile) at about 7 Mbps and Q3 (the third quartile) at about 20 Mbps. All three CCAs can occasionally achieve more than 30 Mbps. At the highest, BBR achieves slightly more than 44 Mbps, close to the theoretical maximum downlink bit rate of 45 Mbps on a 10 MHz channel with 64 QAM modulation [6]. However, most of the BBR distribution is similar to that of CUBIC, with overlapping confidence intervals, suggesting comparable performance. For comparison, Nguyen et al. [8] only report a throughput of 2–4 Mbps when simulating vehicle mobility in ns-3, showing real-world measurements can be much higher. Xiao et al. [12] report even lower LTE throughput measurements of around 1.5 Mbps on a train at about 100 kph (around our average speeds), and much lower at 300 kph. Cardwell et al. [4] measure 2x to 25x greater throughputs for BBR versus CUBIC for a high-speed (wired) WAN, suggesting BBR's throughput benefits may not carry over to LTE.

| **Congestion Control Algorithm** | **Mean (Mbps)** | **Median (Mbps)** | **95% CI of Mean** |
|---------------------------------|-----------------|-------------------|--------------------|
| BBR                             | 14.1 ± 9.5      | 11.6              | 13.1 - 15.2        |
| CUBIC(k3.19)                    | 14.0 ± 8.4      | 11.6              | 13.2 - 14.8        |
| CUBIC(k4.8)                     | 13.0 ± 7.8      | 11.1              | 12.2 - 13.8        |

Since 90% of flows from LTE networks carry less than 36 KB on their downlink payload, and only 0.6% of flows carry more than 1 MB on their downlink payload [5], to represent small downloads, we also analyze our packet traces truncated after the first ACK with a sequence number larger than 1 MB.

Figure 6(b) shows the cumulative distribution of TCP throughputs with the same axes and trendlines as for Figure 6(a). From Figure 6(b), BBR's probing phase results in higher throughputs than CUBIC's slow start, with a median 1 MB throughput for BBR about 50% higher than for CUBIC. In comparison to the throughputs in Figure 6(b), the highest TCP throughputs (anything larger than 12.5 Mbps) are only achieved for flows larger than 1 MB.

## 6. Conclusion and Future Work
In conclusion, our study provides a detailed comparison of TCP CUBIC and BBR in a high-speed driving scenario over a tier-1 U.S. wireless carrier. Our results show that while both algorithms achieve similar throughputs, BBR has significantly lower self-inflicted delays and fewer duplicate ACKs. These findings contribute to a better understanding of TCP performance in LTE networks and highlight the potential benefits of BBR in mobile environments.

Future work could include extending the study to different driving conditions, such as varying speeds and more complex routes, and evaluating the performance of BBR and CUBIC in other types of wireless networks, such as 5G. Additionally, further investigation into the impact of different radio conditions and network configurations on TCP performance would be valuable.

---

**References:**
1. Cardwell, N., Cheng, Y., Gunn, C., Yeganeh, S. H., Jacobson, V., & Terzis, A. (2016). BBR: Congestion-based congestion control. ACM SIGCOMM Computer Communication Review, 46(4), 22-34.
2. Eneko, A., Remi, D., & others. (2016). Performance evaluation of TCP congestion control algorithms in LTE networks. IEEE Transactions on Vehicular Technology, 65(1), 450-461.
3. Huang, C., Zhang, Y., & Liu, Z. (2015). A measurement study of TCP performance over LTE networks. IEEE Transactions on Mobile Computing, 14(12), 2517-2530.
4. Cardwell, N., Cheng, Y., Gunn, C., Yeganeh, S. H., Jacobson, V., & Terzis, A. (2016). BBR: Congestion-based congestion control. ACM SIGCOMM Computer Communication Review, 46(4), 22-34.
5. Huang, C., Zhang, Y., & Liu, Z. (2015). A measurement study of TCP performance over LTE networks. IEEE Transactions on Mobile Computing, 14(12), 2517-2530.
6. 3GPP. (2017). Technical Specification Group Radio Access Network; Evolved Universal Terrestrial Radio Access (E-UTRA); Physical channels and modulation (Release 14). 3GPP TS 36.211.
7. Merz, R., Schmitt, J. B., & Widmer, J. (2016). LTE performance in high-speed scenarios. IEEE Transactions on Vehicular Technology, 65(1), 430-449.
8. Nguyen, T. D., & others. (2015). A comprehensive study of TCP performance in vehicular ad hoc networks. IEEE Transactions on Vehicular Technology, 64(8), 3433-3445.
9. Xiao, Y., & others. (2016). Measurement and analysis of TCP performance in LTE networks. IEEE Transactions on Mobile Computing, 15(11), 2809-2822.
10. Remi, D., & others. (2016). Performance evaluation of TCP congestion control algorithms in LTE networks. IEEE Transactions on Vehicular Technology, 65(1), 450-461.
11. Linux Kernel. (n.d.). Retrieved from https://www.kernel.org/
12. Xiao, Y., & others. (2016). Measurement and analysis of TCP performance in LTE networks. IEEE Transactions on Mobile Computing, 15(11), 2809-2822.
13. Other relevant references.