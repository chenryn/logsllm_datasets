# 基于AI制导的PDF文件生成技术研究

## 作者
- **邹权臣**  
  中国信息安全测评中心博士后  
  研究方向：自动化漏洞分析  
  负责和参与了多项国家及省部级科研项目，并发表了多篇学术论文。

- **马金鑫**  
  中国信息安全测评中心副研究员，北京邮电大学硕士生导师  
  研究方向：软件安全、漏洞分析  
  主持了多个国家级和省部级科研项目，发表20余篇学术论文，获得5项软件著作权和2项发明专利。曾发现多个0Day漏洞。

## 目录
1. 研究背景
2. 方案设计
3. 实验分析
4. 结论与展望

### 研究背景
#### 高结构化样本与PDF文件
高结构化样本（如PDF文件）具有复杂的内部结构，只有通过严格的语法和语义检查才能被各类解析工具正确执行。这些检查包括：
- **语法检查**：确保文件格式符合标准。
- **语义检查**：确保文件内容有意义且逻辑正确。

常见的高结构化样本类型包括PDF、XML、XSL、JavaScript、HTML等。这些文件需要经过解析器（如Foxit Reader、Adobe Reader、Chrome、Edge、Firefox等）的验证才能被执行。

#### PDF文件结构
一个典型的PDF文件由以下部分组成：
- **Header**：声明PDF版本号。
- **Body**：包含一系列间接对象，如字体、页面、图像等，构成了文件的具体内容。
- **Cross-reference Table (xref)**：间接对象地址索引表。
- **Trailer**：指明根对象（Catalog），保存加密等安全信息，并声明交叉引用表的地址。

示例：
```plaintext
%PDF-1.3
8 0 obj
>
endobj
xref
0 257
0000000000 65535 f
0000000017 00000 n
...
trailer
]>>
startxref
320283
%%EOF
```

#### AI制导的样本生成
现有的模糊测试方法主要分为两类：
- **基于变异的模糊测试**：如AFL、VUzzer等，通过修改现有样本生成新的测试用例。
- **基于生成的模糊测试**：如Peach、Spike、Jsfunfuzz等，直接生成新的测试用例。

传统的模糊测试方法存在样本合法性弱、人工参与度高等问题。而AI制导的方法可以提高生成样本的合法性和多样性，常用的AI技术包括Q-Learning、GAN、PCSG、LSTM/BLSTM/seq2seq、CNN等。

### LEARN&FUZZ
- **数据集来源**：Windows fuzzing team提供的63,000个非二进制PDF对象，来自534个PDF文件（种子最小化处理）。
- **实验数据集**：1,000个PDF对象。
- **模型**：使用两层隐藏层的LSTM模型。
- **实验环境**：4核64位Windows 10虚拟机，内存20GB。
- **训练时长**：50轮次，约10小时。
- **生成PDF数量**：每10轮次生成1,000个PDF文件。
- **测试结果（以Edge为例）**：通过率70%-97%，指令覆盖率增加，发现了1个漏洞。

### 方案设计
#### 研究方案
1. **数据集构建**
   - **初始PDF样本集**：从Stillhq.com PDF Database、Mikail's PDF database、QualityLogic’s PDF 1.7 Application Test Suite、Adobe PDF test suites、Ghent Working Group Test Suites、PDF cabinet of horrors、Pdfium_tests等来源获取。
   - **样本最小化**：将初始样本集压缩为最小集，提高代码覆盖率。
   - **数据集划分**：训练集、验证集、测试集。

2. **模型训练**
   - **文本切分**：对OBJ进行文本切分，参数设置为maxlen = 50，step = 3。
   - **向量化**：将切分后的文本转换成向量。
   - **模型训练**：使用LSTM、BLSTM、Attention等模型进行训练，并对每一轮的训练结果进行离线存储。

3. **生成**
   - **生成新对象**：利用训练好的模型生成新的PDF对象。
   - **组装PDF文件**：将新生成的对象附加到PDF宿主文件中，生成新的PDF文件。

4. **测试**
   - **目标应用**：Foxit Reader、Adobe Reader、Mupdf、Chrome、Edge等。
   - **效果评估**：通过覆盖率、漏洞发现数等指标评估生成样本的有效性。

### 数据集构建
- **初始PDF样本集**：从多个来源收集，总计超过20,000个PDF文件。
- **最小化处理**：将初始样本集压缩为251个文件，覆盖率达到37.996%。
- **数据集划分**：训练集2,956个对象，验证集13,765个对象，测试集55,058个对象。

### 模型训练
- **文本切分**：总字符数为11,913,817，切分后总序列数为3,803,562（训练集3,042,849，验证集760,713）。
- **向量化**：使用96个字符组成的字典进行向量化处理。
- **模型训练**：使用LSTM、BLSTM、Attention等模型进行训练，并对每一轮的训练结果进行离线存储。

### 生成
- **生成新对象**：利用训练好的模型生成新的PDF对象。
- **组装PDF文件**：将新生成的对象附加到PDF宿主文件中，生成新的PDF文件。

### 测试
- **目标应用**：Foxit Reader、Adobe Reader、Mupdf、Chrome、Edge等。
- **效果评估**：通过覆盖率、漏洞发现数等指标评估生成样本的有效性。

通过上述方法，我们能够有效生成高质量的PDF文件，用于安全测试和漏洞发现。