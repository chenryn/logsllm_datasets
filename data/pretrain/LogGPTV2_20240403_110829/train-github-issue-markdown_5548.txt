I enable `ResourceQuota` in my cluster. I have one namespace `ns-xnxin`. I
have 2 quotas created for that namespace:
    (venv)xnxin@LM-SHC-00950210:~/workspace/go/src/k8s.io/kubernetes/yamls$ kubectl describe quota quota --namespace=ns-xnxin
    Name:           quota-xnxin
    Namespace:      ns-xnxin
    Resource        Used    Hard
    --------        ----    ----
    cpu         0   20
    memory          0   1Gi
    pods            3   3
    services        0   5
    Name:       quota-xnxin-test
    Namespace:  ns-xnxin
    Resource    Used    Hard
    --------    ----    ----
    pods        3   1
    services    0   5
Before creating quotas, there are already 3 Pods running under `ns-xnxin`.
Then, I tried to create new Pod two times, but got different response:
    (venv)xnxin@LM-SHC-00950210:~/workspace/go/src/k8s.io/kubernetes/yamls$ kubectl create -f busybox-limit.json --namespace=ns-xnxin
    Error from server: error when creating "busybox-limit.json": Pod "busybox-limit" is forbidden: limited to 3 pods
    (venv)xnxin@LM-SHC-00950210:~/workspace/go/src/k8s.io/kubernetes/yamls$ kubectl create -f busybox-limit.json --namespace=ns-xnxin
    Error from server: error when creating "busybox-limit.json": Pod "busybox-limit" is forbidden: limited to 1 pods
It seems that api-server do quota validation in a random behavior by the first
get quota record.  
I think this is not a consistent behavior and need to be enhanced. Two
proposed options:
  * If k8s accept duplicate resource definition in different quota (for example, in two quotas, both of them contains Pod quota), the quota validation should be done against the sum of them.
  * Another option is to have resource conflict validation during quota creation. Say, do not allow duplicated resource in different quota.