# Tracing and Analyzing Web Access Paths Based on User-Side Data Collection: How Do Users Reach Malicious URLs?

**Authors:**  
Takeshi Takahashi†, Christopher Kruegel‡, Giovanni Vigna‡, Katsunari Yoshioka∗, Daisuke Inoue†

**Affiliations:**  
† National Institute of Information and Communications Technology, PI:EMAIL, PI:EMAIL  
‡ University of California, Santa Barbara, {chris, vigna}@cs.ucsb.edu  
∗ Yokohama National University, PI:EMAIL

## Abstract
Web browsing exposes users to various security threats, such as malware infections and social engineering attacks. Despite the efforts of security and browser vendors to protect users, some still access malicious URLs. To improve protection, it is essential to understand how users reach these URLs. In this study, we collect web access records from users using a browser extension. Unlike network-side data collection, user-side data collection allows us to distinguish between users and browser tabs, facilitating more efficient data analysis. We propose a method to extract entire web access paths leading to malicious URLs, termed "hazardous paths." By analyzing these paths, we examine initial access points, the risk levels of bookmarked URLs, the time taken to reach malicious URLs, and the number of concurrently active browser tabs. Additionally, we introduce a preemptive domain filtering scheme to identify and filter domains that lead to malicious URLs, even if they are not blacklisted.

## 1. Introduction
The Internet has become an indispensable part of daily life, with many people accessing the web multiple times a day. However, web browsing exposes users to various security threats, including malware infections and social engineering attacks. Various techniques have been implemented to minimize the risk of accessing malicious URLs. For example, the Google Chrome browser uses Google Safe Browsing (GSB) to block access to known malicious URLs. Despite these measures, users still encounter malicious URLs during web browsing.

To better understand how users reach malicious URLs and to enhance their protection, we introduce a per-user data analysis scheme. We collect web access records using a browser extension, which provides detailed data such as user IDs, browser tab IDs, and navigation information. This data enables us to reconstruct entire web access paths to malicious URLs, called hazardous paths. We analyze the entry points of these paths, the risk levels of bookmarked URLs, the time required to reach malicious URLs, and the number of concurrently active browser tabs. Furthermore, we propose a preemptive domain filtering scheme to identify and filter domains that lead to malicious URLs, even if they are not blacklisted.

### Contributions
- **User-Side Data Collection:** We describe a user-side data collection approach using a browser extension, which provides a broader range of data compared to network-side data collection.
- **Hazardous Path Reconstruction:** We introduce a scheme to reconstruct hazardous paths by tracing previous accesses, minimizing ambiguity by distinguishing between users and browser tabs.
- **Behavioral Analysis:** We analyze users' browsing behaviors, revealing that bookmark access is a major entry point for hazardous paths and that reviewing bookmarks can reduce the risk of reaching malicious URLs.
- **Preemptive Domain Filtering:** We propose a scheme to filter traffic on domains that lead to malicious URLs, even if they are not blacklisted.

### Organization of the Paper
- **Section 2:** Describes our user-side data collection scheme.
- **Section 3:** Introduces the method to reconstruct hazardous paths.
- **Section 4:** Presents an analysis of users who reach malicious URLs.
- **Section 5:** Introduces the preemptive domain filtering scheme.
- **Section 6:** Discusses additional issues.
- **Section 7:** Reviews related work.
- **Section 8:** Concludes the paper.

## 2. User-Side Data Collection
We collect web access records at the user side using a browser extension developed in-house. The extension runs on the Chrome browser and is available to anyone who agrees to the terms and conditions. The extension acts as a sensor, recording each user's web access activities and periodically sharing the data with a server. The extension is in Japanese, so we assume the primary users are Japanese speakers.

### 2.1 Collected Data
Our browser extension uses Google Chrome's APIs to collect web access data, including:
- **URL:** The URL of the requested document.
- **Timestamp:** The UNIX time when the request is issued.
- **Referer:** The referer value from the HTTP request header.
- **Tab ID:** The identifier of the browser tab.
- **Tab URL:** The URL shown on the browser tab.
- **Resource Type:** The type of resource, such as main_frame, sub_frame, image, etc.
- **Transition Type:** The cause of the navigation, such as auto_bookmark, link, typed, etc.

Additionally, the browser extension and server provide:
- **User ID:** A unique user identifier.
- **Source Tab ID:** The identifier of the tab that generated the current tab.
- **GSB Evaluation Results:** An indicator of whether the URL is listed by GSB.
- **Alexa Traffic Rank:** The traffic ranking provided by Alexa Top Sites.

### 2.2 Ethical Considerations
We worked with our Internal Review Board to ensure ethical and respectful use of the collected data. All users must agree to the terms and conditions, which specify that the data will be used to detect and prevent access to malicious URLs. Personally identifiable information is expunged or coded, and raw URLs are not shared externally. Users can request the deletion of their records, and all data is stored securely.

### 2.3 Access Log Complementation
Our data collection scheme sometimes fails to capture certain data due to implementation imperfections, user actions, and high processing burdens. We complement missing main frame entries by generating complementary entries where necessary.

### 2.4 Dataset
Our dataset consists of data collected from February 1, 2019, to January 31, 2020. During this period, 4,306,529,287 access records were collected, including 76,474 accesses to malicious URLs. On average, 831 users accessed the web daily, 1,650 users monthly, and 115 users (victims) accessed malicious URLs at least once a month.

## 3. Access Path Reconstruction
This section introduces our access path reconstruction scheme, which extracts hazardous paths by recursively tracing previous accesses until the entry point is identified.

### 3.1 Previous Access Tracing
Our scheme traces previous accesses using user IDs and tab IDs to minimize the scope of analysis. If the transition type is "reload," the reload tracing method is used. If a source tab ID is set, the source-tab tracing method is used. Otherwise, the in-tab tracing method is used. If no previous access is found, the global tracing method is applied.

### 3.2 Case Studies
We present case studies to demonstrate the effectiveness of our access path reconstruction scheme.

## 4. Analysis of Users Reaching Malicious URLs
We analyze the web access activities of users who reach malicious URLs, focusing on initial access points, the risk levels of bookmarked URLs, the time required to reach malicious URLs, and the number of concurrently active browser tabs.

### 4.1 Entry Points of Hazardous Paths
We find that bookmark access is a major entry point for hazardous paths, indicating that reviewing and sanitizing bookmarks can reduce the risk of reaching malicious URLs.

### 4.2 Risk Level of Bookmarked URLs
We define a parameter to indicate the certainty of reaching malicious URLs and show that some bookmark entries lead directly to malicious URLs.

### 4.3 Time and Concurrent Tabs
We analyze the time required to reach malicious URLs and the number of concurrently active browser tabs, demonstrating the usability of user-side data for further analysis.

## 5. Preemptive Domain Filtering Scheme
We introduce a preemptive domain filtering scheme to identify and filter domains that lead to malicious URLs, even if they are not blacklisted. The scheme calculates the risk levels of all domains on hazardous paths and identifies those likely to navigate users to malicious URLs.

### 5.1 Effectiveness
Our analysis shows that non-malicious domains often lead users to malicious URLs. The scheme can filter traffic on these domains or provide alerts to protect users.

## 6. Additional Issues
We discuss additional issues not addressed in the earlier sections.

## 7. Related Work
We review related work in the field of web security and user behavior analysis.

## 8. Conclusion
In conclusion, our study provides insights into how users reach malicious URLs and introduces a preemptive domain filtering scheme to enhance user protection. Our user-side data collection and analysis methods offer a new perspective on web security.

---

This optimized version of the text is more structured, coherent, and professional, with clear headings and subheadings for easy navigation.