|               | 提示：您可以包括阶段使用的字段。                     |
|               |                                                      |
|               | 不包括所                                             |
|               | 有必需字段的记录将根据为管道配置的错误处理进行处理。 |
+---------------+------------------------------------------------------+
| [Preconditi   | 必须计算为true才能允许                               |
| ons](https:// | 记录进入处理阶段的条件。单击添加以创建其他前提条件。 |
| streamsets.co |                                                      |
| m/documentati | 不满足所                                             |
| on/datacollec | 有前提条件的记录将基于为阶段配置的错误处理进行处理。 |
| tor/latest/he |                                                      |
| lp/datacollec |                                                      |
| tor/UserGuide |                                                      |
| /Pipeline_Des |                                                      |
| ign/DroppingU |                                                      |
| nwantedRecord |                                                      |
| s.html#concep |                                                      |
| t_msl_yd4_fs) |                                                      |
+---------------+------------------------------------------------------+
| [On Record    | 阶段的错误记录处理：                                 |
| Error         |                                                      |
| ](https://str | 丢弃-丢弃记录。                                      |
| eamsets.com/d |                                                      |
| ocumentation/ | 发送到错误-将记录发送到管道以进行错误处理。          |
| datacollector |                                                      |
| /latest/help/ | 停止管道-停止管道。                                  |
| datacollector |                                                      |
| /UserGuide/Pi |                                                      |
| peline_Design |                                                      |
| /ErrorHandlin |                                                      |
| g.html#concep |                                                      |
| t_atr_j4y_5r) |                                                      |
+---------------+------------------------------------------------------+
(2)要配置字段表达式，请单击"表达式"选项卡并配置以下信息：
+-------------+--------------------------------------------------------+
| **Field     | **说明**                                               |
| Expression  |                                                        |
| Property**  |                                                        |
+=============+========================================================+
| Output      | 将表达式的结果传递给下一阶段的字段。                   |
| Field       | 输入新字段或现有字段的名称，如下所示：/ FieldName。    |
|             |                                                        |
|             | 如果使用现有字段，Expression Evaluator将替换现有值。   |
|             |                                                        |
|             | 您可以使用星号通配符表示数组索引和映射元素。           |
+-------------+--------------------------------------------------------+
| Expression  | 表达评估。                                             |
|             |                                                        |
|             | 可选单击Ctrl +空格键以获取有关创建表达式的帮助。       |
+-------------+--------------------------------------------------------+
(3)使用简单或批量编辑模式，单击"添加"图标以添加其他字段表达式。
(4)要配置记录头属性表达式，请配置以下信息：
+-----------------+----------------------------------------------------+
| **Record Header | **说明**                                           |
| Attribute       |                                                    |
| Expression      |                                                    |
| Property**      |                                                    |
+=================+====================================================+
| Header          | 记录标头属性，用于将表达式的结果传递给下一个阶段。 |
| Attribute       | 输入新属性或现有属性的名称，如下所示：\。                                           |
|                 |                                                    |
|                 | 使用现有属性时，Expression Evaluator将替换现有值。 |
|                 |                                                    |
|                 | 注意：避免更改Data Collector生成的标头属性的值。   |
+-----------------+----------------------------------------------------+
| Expression      | 表达评估。                                         |
|                 |                                                    |
|                 | 可选单击Ctrl +空格键以获取有关创建表达式的帮助。   |
+-----------------+----------------------------------------------------+
(5)使用简单或批量编辑模式，单击"添加"图标以添加其他标头属性表达式。
(6)要配置字段属性表达式，请配置以下信息：
+---------------+------------------------------------------------------+
| **Field       | **说明**                                             |
| Attribute     |                                                      |
| Expression    |                                                      |
| Property**    |                                                      |
+===============+======================================================+
| Field         | field属性将表达式的结果传递给下一个阶段。            |
| Attrib        | 输入新属性或现有属性的名称，如下所示：\。                                             |
| /streamsets.c |                                                      |
| om/documentat | 使用现有属性时，Expression Evaluator将替换现有值。   |
| ion/datacolle |                                                      |
| ctor/latest/h |                                                      |
| elp/datacolle |                                                      |
| ctor/UserGuid |                                                      |
| e/Graphics/ic |                                                      |
| on_moreInfo.p |                                                      |
| ng](media/ima |                                                      |
| ge91.png){wid |                                                      |
| th="0.1263888 |                                                      |
| 8888888888in" |                                                      |
| heigh         |                                                      |
| t="0.12638888 |                                                      |
| 888888888in"} |                                                      |
+---------------+------------------------------------------------------+
| Expression    | 表达评估。                                           |
|               |                                                      |
|               | 可选单击Ctrl +空格键以获取有关创建表达式的帮助。     |
+---------------+------------------------------------------------------+
(7)使用简单或批量编辑模式，单击"添加"图标以添加其他字段属性表达式。
更多计算表达式内容会在第五章节EL表达式语言部分进行详细讲解。
#### Field Mask/脱敏
使用Field
Masker来隐藏字段值内容，比如信用卡号码，以防止敏感信息到达内部数据库。
Field
Masker提供固定长度和可变长度的屏蔽方式，以屏蔽字段中的所有数据。要显示数据中的指定位置，可以使用自定义模式。要显示数据中的一组位置，可以使用正则表达式掩码定义数据的结构然后显示一个或多组数据。
对于信用卡号码，我们将使用以下正则表达式来隐藏最后四位之外的所有数字：
*(.\*)(\[0-9\]{4})*
正则表达式定义了两个组，以便我们可以显示第二组数字。
信用卡脱敏流程如下：
1.在画布上添加一个字段屏蔽处理器，并将Jython Evaluator连接到画布上。
2.在"属性"面板中，单击"mask"选项卡。
3.在"要屏蔽的字段"字段中单击。滚动浏览字段列表并选择表示信用卡数据的字段：/credit_card，当管道对数据预览有效时，将显示字段列表。如果列表不显示，可以手动输入字段路径。
![IMG_275](media/image92.png){width="5.763888888888889in"
height="3.714583333333333in"}
4.要使用正则表达式作为掩码并显示信用卡号的最后4位数字，请按以下方式配置其余属性：
"属性"面板配置：
+---------------+------------------------------------------------------+
| **常规属性**  | **说明**                                             |
+===============+======================================================+
| 姓名          | 阶段名称                                             |
+---------------+------------------------------------------------------+
| 说明          | 可选说明                                             |
+---------------+------------------------------------------------------+
| [Required     | 必须包含要传递到阶段的记录的数据的字段。             |
| Fie           |                                                      |
| lds](https:// | 提示：您可以包括阶段使用的字段。                     |
| streamsets.co |                                                      |
| m/documentati | 不包括所                                             |
| on/datacollec | 有必需字段的记录将根据为管道配置的错误处理进行处理。 |
| tor/latest/he |                                                      |
| lp/datacollec |                                                      |
| tor/UserGuide |                                                      |
| /Pipeline_Des |                                                      |
| ign/DroppingU |                                                      |
| nwantedRecord |                                                      |
| s.html#concep |                                                      |
| t_dnj_bkm_vq) |                                                      |
+---------------+------------------------------------------------------+
| [Preconditi   | 必须计算为true才能允许                               |
| ons](https:// | 记录进入处理阶段的条件。单击添加以创建其他前提条件。 |
| streamsets.co |                                                      |
| m/documentati | 不满足所                                             |
| on/datacollec | 有前提条件的记录将基于为阶段配置的错误处理进行处理。 |
| tor/latest/he |                                                      |
| lp/datacollec |                                                      |
| tor/UserGuide |                                                      |
| /Pipeline_Des |                                                      |
| ign/DroppingU |                                                      |
| nwantedRecord |                                                      |
| s.html#concep |                                                      |
| t_msl_yd4_fs) |                                                      |
+---------------+------------------------------------------------------+
| [On Record    | 阶段的错误记录处理：                                 |
| Error         |                                                      |
| ](https://str | 丢弃-丢弃记录。                                      |
| eamsets.com/d |                                                      |
| ocumentation/ | 发送到错误-将记录发送到管道以进行错误处理。          |
| datacollector |                                                      |
| /latest/help/ | 停止管道-停止管道。                                  |
| datacollector |                                                      |
| /UserGuide/Pi |                                                      |
| peline_Design |                                                      |
| /ErrorHandlin |                                                      |
| g.html#concep |                                                      |
| t_atr_j4y_5r) |                                                      |
+---------------+------------------------------------------------------+
"掩码"选项卡配置：
+------------+---------------------------------------------------------+
| **Mask**   | **Valid Scripting Objects**                             |
+============+=========================================================+
| mask type  | 选择mask的方式，目前支持4种方式：                       |
|            |                                                         |
|            | -   Fixed length:                                       |
|            |                                                         |
|            | -   Variable length:                                    |
|            |                                                         |
|            | -   custom:                                             |
|            |                                                         |
|            | -   Regular Expression:                                 |
|            |                                                         |
|            | ![](media/image93.png){width="3.13580271216098in"       |
|            | height="0.6159722222222223in"}                          |
+------------+---------------------------------------------------------+
#### Javascript Evaluator
javascript评估器基于javascript代码处理数据。使用javascript处理器使用javascript代码执行自定义处理。
您可以为处理器开发以下脚本：
-   初始化脚本-设置任何所需资源或连接的可选初始化脚本。初始化脚本在管道启动时运行一次。
-   主处理脚本-处理数据的主脚本。根据配置的处理模式，为每个记录或每批数据运行主脚本。
-   销毁脚本-可选的销毁脚本，用于关闭处理器打开的任何资源或连接。销毁脚本在管道停止时运行一次。
在管道中使用JavaScript评估器时，数据收集器将一批数据传递给处理器，并将数据转换为易于编写脚本的数据结构进行处理。
可以从脚本调用外部Java代码。JavaScript评估器支持Java版本8u40和更高版本以及ECMAScript版本5.1。处理器在Nashorn
JavaScript引擎上运行。
JavaScriptEvaluator提供了大量的示例代码，您可以使用这些代码来开发脚本。
##### 处理模式
您可以选择JavaScript评估器用于处理主脚本的处理模式。您可以在每个处理模式中使用相同的脚本。但是，在以批处理模式运行之前，应该在主脚本中包括错误处理。
javascript评估器为主脚本提供以下处理模式：
1、按记录记录
处理器为每个记录调用脚本。处理器将记录作为映射传递给脚本，并分别处理每个记录。
脚本不需要错误处理逻辑。错误记录将传递给处理器进行错误处理。处理器根据记录错误属性处理错误记录。
使用此模式可避免在代码中包含错误处理逻辑。由于此模式为每个记录调用脚本，管道性能将受到负面影响。
2、按批次处理
处理器为每个批调用脚本。处理器将批作为数组传递给脚本，并一次处理批。
在脚本中包含错误处理逻辑。如果没有错误处理逻辑，单个错误记录将整个批发送到处理器进行错误处理。处理器根据记录错误属性处理错误记录。
使用此模式通过一次处理一批数据来提高性能。
##### javascript脚本对象
根据脚本类型，可以在JavaScript评估器中使用不同的脚本对象：
+------------+---------------------------------------------------------+
| **Script   | **Valid Scripting Objects**                             |
| Type**     |                                                         |
+============+=========================================================+
| Init       | 可以在初始化脚本中使用以下脚本对象：                    |
|            |                                                         |
|            | state                                                   |
|            |                                                         |
|            | log                                                     |
|            |                                                         |
|            | sdcFunctions - 所有方法，例如getFieldNull和createMap。  |
+------------+---------------------------------------------------------+
| Main       | 您可以在主脚本中使用以下脚本对象：                      |
|            |                                                         |
|            | • records                                               |
|            |                                                         |
|            | • state                                                 |
|            |                                                         |
|            | • log                                                   |
|            |                                                         |
|            | • output                                                |
|            |                                                         |
|            | • error                                                 |
|            |                                                         |
|            | • sdcFunctions - 所有方法。                             |
+------------+---------------------------------------------------------+
| Destroy    | 您可以在destroy脚本中使用以下脚本对象：                 |
|            |                                                         |
|            | •state                                                  |
|            |                                                         |
|            | •log                                                    |
|            |                                                         |
|            | •sdcFunctions -                                         |
|            | 所有方                                                  |
|            | 法，例如getFieldNull，createMap，createEvent和toEvent。 |
+------------+---------------------------------------------------------+
在Data Collector Edge管道中，JavaScript
Evaluator脚本不能包含sdcFunctions对象。
注意：您无需使用脚本对象从JavaScript Evaluator调用管道运行时参数。
您可以在任何处理器脚本中使用以下语法：\$ {\}。
脚本对象在每种脚本类型中的工作方式相同：
1、record记录
要处理的记录集合。 记录对象包括基于您使用的处理模式的不同元素：
-   按记录记录 - 记录数组包含一个记录元素。 记录包含单个值元素。
    value元素包含记录的数据。
-   批处理 - 记录数组包括批处理中的所有记录。
映射和列表记录字段分别映射到JavaScript映射和数组。
2、state状态
在init，main和destroy脚本的调用之间存储信息的对象。状态是包含键/值对集合的映射对象。您可以使用状态对象来缓存数据，例如查找，计数或与外部系统的连接。
状态对象的功能很像成员变量：
-   信息是暂时的，并在管道停止或重新启动时丢失。
-   状态对象仅适用于其定义的处理器阶段的实例。如果管道在集群模式下执行，则状态对象不会跨节点共享。
所有三个脚本都可以使用相同的状态对象实例。例如，您可以使用init脚本打开与数据库的连接，然后在状态对象中存储对该连接的引用。在主脚本中，您可以使用状态对象访问打开的连接。然后在destroy脚本中，您可以使用状态对象关闭连接。