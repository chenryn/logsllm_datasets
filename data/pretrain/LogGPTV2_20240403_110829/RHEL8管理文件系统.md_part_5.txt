文件共享。所有 NFS
版本都依赖于客户端和服务器间的远程过程调用（RPC）。要共享或者挂载 NFS
文件系统，下列服务根据所使用的 NFS 版本而定：
::: variablelist
[`nfsd`{.literal}]{.term}
:   为共享 NFS 文件系统请求的 NFS 服务器内核模块。
[`rpcbind`{.literal}]{.term}
:   接受本地 RPC
    服务的端口保留。这些端口随后可用（或公告），以便对应的远程 RPC
    服务可以访问它们。The `rpcbind`{.literal} 服务响应对 RPC
    服务的请求，并设置与请求的 RPC 服务的连接。这不能与 NFSv4 一起使用。
[`rpc.mountd`{.literal}]{.term}
:   NFS 服务器使用这个过程来处理来自 NFSv3 客户端的 `MOUNT`{.literal}
    请求。它检查所请求的 NFS 共享是否目前由 NFS
    服务器导出，并且允许客户端访问它。如果允许挂载请求，nfs
    `-mountd`{.literal} 服务会以 Success 状态回复，并将此 NFS 共享的
    File-Handle 返回给 NFS 客户端。
[`rpc.nfsd`{.literal}]{.term}
:   这个过程启用了要定义的服务器公告的显式 NFS 版本和协议。它与 Linux
    内核配合使用，以满足 NFS 客户端的动态需求，例如在每次 NFS
    客户端连接时提供服务器线程。这个过程对应于 `nfs-server`{.literal}
    服务。
[`lockd`{.literal}]{.term}
:   这是一个在客户端和服务器中运行的内核线程。它实施网络锁定管理器(NLM)协议，它允许
    NFSv3 客户端锁定服务器上的文件。每当运行 NFS 服务器以及挂载 NFS
    文件系统时，它会自动启动。
[`rpc.statd`{.literal}]{.term}
:   这个过程实施网络状态监控器(NSM)RPC 协议，该协议可在重新启动 NFS
    服务器时通知 NFS 客户端，而无需正常关闭。The `rpc-statd`{.literal}
    服务由 `nfs-server`{.literal} 服务自动启动，不需要用户配置。这不能与
    NFSv4 一起使用。
[`rpc.rquotad`{.literal}]{.term}
:   这个过程为远程用户提供用户配额信息。The `rpc-rquotad`{.literal}
    服务由 `nfs-server`{.literal} 服务自动启动，不需要用户配置。
[`rpc.idmapd`{.literal}]{.term}
:   此进程提供 NFSv4 客户端和服务器加速，在 on-the-wire NFSv4 名称（
    `以用户@域`{.literal}的形式字符串）和本地 UID 和 GID 之间映射。要使
    `idmapd`{.literal} 使用 NFSv4 起作用，必须配置
    `/etc/idmapd.conf`{.literal} 文件。至少应指定 `Domain`{.literal}
    参数，该参数定义 NFSv4 映射域。如果 NFSv4 映射域与 DNS
    域名相同，可以跳过这个参数。客户端和服务器必须同意 NFSv4
    映射域才能使 ID 映射正常工作。
    只有 NFSv4 服务器使用 `rpc.idmapd`{.literal}，它由
    `nfs-idmapd`{.literal} 服务启动。NFSv4 客户端使用基于密钥环的
    `nfsidmap`{.literal} 实用程序，由内核按需调用以执行 ID 映射。如果
    `nfsidmap`{.literal} 出现问题，客户端将返回到使用
    `rpc.idmapd`{.literal}。
:::
### []{#mounting-nfs-shares_managing-file-systems.html#_the_rpc_services_with_nfsv4}NFSv4 的 RPC 服务
挂载和锁定协议已合并到 NFSv4 协议中。该服务器还会侦听已知的 TCP 端口
2049。因此，NFSv4 不需要与 `rpcbind、lock`{.literal} `d`{.literal} 和
`rpc-statd`{.literal} 服务交互。NFS 服务器上仍然需要
`nfs-mountd`{.literal} 服务来设置导出，但不涉及任何无线操作。
::: itemizedlist
**其它资源**
-   [仅配置 NFSv4 服务器，无
    `rpcbind`{.literal}](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#configuring-an-nfsv4-only-server_exporting-nfs-shares){.link}.
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#nfs-host-name-formats_mounting-nfs-shares}NFS 主机名格式 {.title}
:::
这部分论述了在挂载或导出 NFS 共享时用来指定主机的不同格式。
您可以使用以下格式指定主机：
::: variablelist
[单台机器]{.term}
:   以下任意一种：
    ::: itemizedlist
    -   完全限定域名（可由服务器解析）
    -   主机名（可由服务器解析）
    -   IP 地址。
    :::
:::
::: variablelist
[IP 网络]{.term}
:   以下格式之一有效：
    ::: itemizedlist
    -   [*[`a.b.c.d/z`{.literal}]{.replaceable}*]{.emphasis}
        [*[`，其中 a.b.c.d`{.literal}]{.replaceable}*]{.emphasis}
        [*[`是`{.literal}]{.replaceable}*]{.emphasis} 网络，z
        是子网掩码中的位数，例如 `192.168.0.0/24`{.literal}。
    -   [*[`a.b.c.d/子网掩码`{.literal}]{.replaceable}*]{.emphasis}，其中
        [*[`a.b.c.d`{.literal}]{.replaceable}*]{.emphasis}
        是网络掩码，[*[`子网掩码`{.literal}]{.replaceable}*]{.emphasis}
        为子网掩码；例如 `192.168.100.8/255.255.255.0`{.literal}。
    :::
[Netgroups]{.term}
:   `@group-name`{.literal} 格式，其中
    [*[`group-name`{.literal}]{.replaceable}*]{.emphasis} 是 NIS
    netgroup 名称。
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#installing-nfs_mounting-nfs-shares}安装 NFS {.title}
:::
这个过程安装挂载或导出 NFS 共享所需的所有软件包。
::: itemizedlist
**流程**
-   安装 `nfs-utils`{.literal} 软件包：
    ``` screen
    # yum install nfs-utils
    ```
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#discovering-nfs-exports_mounting-nfs-shares}发现 NFS 导出 {.title}
:::
这个步骤发现给定 NFSv3 或者 NFSv4 服务器导出哪个文件系统。
::: itemizedlist
**流程**
-   对于支持 NFSv3 的任何服务器，请使用 `showmount`{.literal} 实用程序：
    ``` screen
    $ showmount --exports my-server
    Export list for my-server
    /exports/foo
    /exports/bar
    ```
-   对于支持 NFSv4 的任何服务器，挂载根目录并查找：
    ``` screen
    # mount my-server:/ /mnt/
    # ls /mnt/
    exports
    # ls /mnt/exports/
    foo
    bar
    ```
:::
在同时支持 NFSv4 和 NFSv3 的服务器上，这两种方法都有效并产生相同的结果。
::: itemizedlist
**其它资源**
-   `showmount(8)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#mounting-an-nfs-share-with-mount_mounting-nfs-shares}使用 mount 挂载一个 NFS 共享 {.title}
:::
这个过程使用 `mount`{.literal} 实用程序挂载从服务器导出的 NFS 共享。
::: itemizedlist
**流程**
-   要挂载一个 NFS 共享，请使用以下命令：
    ``` screen
    # mount -t nfs -o options host:/remote/export /local/directory
    ```
    这个命令使用以下变量：
    ::: variablelist
    [[*[选项]{.replaceable}*]{.emphasis}]{.term}
    :   以逗号分隔的挂载选项列表。
    [[*[主机]{.replaceable}*]{.emphasis}]{.term}
    :   导出您要挂载的文件系统的服务器的主机名、IP
        地址或者完全限定域名。
    [[*[/remote/export]{.replaceable}*]{.emphasis}]{.term}
    :   从服务器导出的文件系统或目录，即您要挂载的目录。
    [[*[/local/directory]{.replaceable}*]{.emphasis}]{.term}
    :   挂载 [*[/remote/export]{.replaceable}*]{.emphasis}
        的客户端位置。
    :::
:::
::: itemizedlist
**其它资源**
-   [常用 NFS
    挂载选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#common-nfs-mount-options_mounting-nfs-shares){.link}.
-   [NFS
    主机名格式.](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#nfs-host-name-formats_mounting-nfs-shares){.link}
-   [使用挂载挂载文件系统](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#mounting-a-file-system-with-mount_assembly_mounting-file-systems){.link}.
-   `mount(8)`{.literal} man page
-   `exports(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#common-nfs-mount-options_mounting-nfs-shares}常用 NFS 挂载选项 {.title}
:::
这部分列出了在挂载 NFS
共享时常用的选项。这些选项可用于手动挂载命令、`/etc/fstab`{.literal}
设置和 `autofs`{.literal}。
::: variablelist
[`lookupcache=mode`{.literal}]{.term}
:   指定内核应该如何管理给定挂载点的目录条目缓存。[*[模式]{.replaceable}*]{.emphasis}
    的有效参数为 `all`{.literal}、`none`{.literal} 或
    `positive`{.literal}。
[`nfsvers=version`{.literal}]{.term}
:   指定要使用的 NFS 协议版本，其中
    [*[version]{.replaceable}*]{.emphasis} 为 `3、4`{.literal}
    ``{.literal}、`4.0`{.literal}、`4.1`{.literal} 或
    `4.2`{.literal}。这可用于运行多个 NFS
    服务器的主机，或者禁用使用较低版本重试挂载。如果没有指定版本，NFS
    将使用内核和 `挂载`{.literal} 程序支持的最高版本。
    选项与 `nfs vers`{.literal} ``{=html}
    相同，出于兼容性的原因包含在此发行版本中。
[`noacl`{.literal}]{.term}
:   关闭所有 ACL 处理。当与旧版本 Red Hat Enterprise Linux、Red Hat
    Linux 或 Solaris 交互时，可能会需要此功能，因为最新的 ACL
    技术与较旧的系统不兼容。
[`nolock`{.literal}]{.term}
:   禁用文件锁定。当连接到非常旧的 NFS 服务器时，有时需要这个设置。
[`noexec`{.literal}]{.term}
:   防止在挂载的文件系统中执行二进制文件。这在系统挂载不兼容二进制文件的非
    Linux 文件系统时有用。
[`nosuid`{.literal}]{.term}
:   禁用 `set-user-identifier`{.literal} 和
    `set-group-identifier`{.literal} 位。这可防止远程用户通过运行
    `setuid`{.literal} 程序获得更高的特权。
[`port=num`{.literal}]{.term}
:   指定 NFS 服务器端口的数字值。If [*[num]{.replaceable}*]{.emphasis}
    为 `0`{.literal} （默认值），然后 `挂载`{.literal} 在远程主机上查询
    `rpcbind`{.literal} 服务，以获取要使用的端口号。如果远程主机上的 NFS
    服务没有使用其 `rpcbind`{.literal} 服务注册，则改为使用标准 NFS
    端口号 TCP 2049。
[`rsize=num`{.literal} 和 `wsize=num`{.literal}]{.term}
:   这些选项设定单一 NFS 读写操作传输的最大字节数。
    `rsize 和 wsize`{.literal} ``{=html}
    没有固定的默认值。默认情况下，NFS
    使用服务器和客户端都支持的最大值。在 Red Hat Enterprise Linux 8
    中，客户端和服务器最大为 1,048,576 字节。详情请查看 [rsize 和 wsize
    的默认和最大值是什么？](https://access.redhat.com/solutions/753853){.link}Kbase
    文章。
[`sec=flavors`{.literal}]{.term}
:   用于访问挂载导出中文件的安全类别。[*[类别值是一个由一个或多个安全类别]{.replaceable}*]{.emphasis}
    组成的冒号分隔列表。
    默认情况下，客户端会尝试查找客户端和服务器都支持的安全类别。如果服务器不支持任何选定的类别，挂载操作将失败。
    可用类别（flavor）：
    ::: itemizedlist
    -   `sec=sys`{.literal} 使用本地 UNIX UID 和 GID。它们使用
        `AUTH_SYS`{.literal} 验证 NFS 操作。
    -   `sec=krb5`{.literal} 使用 Kerberos V5 而不是本地 UNIX UID 和 GID
        来验证用户。
    -   `sec=krb5i`{.literal} 使用 Kerberos V5
        进行用户身份验证，并使用安全校验和执行 NFS
        操作的完整性检查，以防止数据篡改。
    -   `sec=krb5p`{.literal} 使用 Kerberos V5
        进行用户身份验证、完整性检查，并加密 NFS
        流量以防止流量嗅探。这是最安全的设置，但它也会涉及最大的性能开销。
    :::
[`tcp`{.literal}]{.term}
:   指示 NFS 挂载使用 TCP 协议。
:::
::: itemizedlist
**其它资源**
-   `mount(8)`{.literal} man page
-   `nfs(5)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#mounting-nfs-shares_managing-file-systems.html#_additional_resources}其它资源 {.title}
:::
::: itemizedlist
-   [Linux NFS
    wiki](https://linux-nfs.org/wiki/index.php/Main_Page){.link}
-   [永久挂载 NFS
    共享.](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#assembly_persistently-mounting-file-systems_managing-file-systems){.link}
-   根据需要挂载 NFS 共享.
    [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#assembly_mounting-file-systems-on-demand_managing-file-systems](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/managing_file_systems/index#assembly_mounting-file-systems-on-demand_managing-file-systems){.link}
:::
:::
:::
[]{#exporting-nfs-shares_managing-file-systems.html}
::: chapter
::: titlepage
# []{#exporting-nfs-shares_managing-file-systems.html#exporting-nfs-shares_managing-file-systems}第 4 章 导出 NFS 共享 {.title}
:::
作为系统管理员，您可以使用 NFS 服务器通过网络共享系统中的目录。
::: section
::: titlepage
# []{#exporting-nfs-shares_managing-file-systems.html#introduction-to-nfs_exporting-nfs-shares}NFS 简介 {.title}