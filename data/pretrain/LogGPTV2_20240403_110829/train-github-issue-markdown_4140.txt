**I'm submitting a ...** (check one with "x")
    [x] bug report => search github for a similar issue or PR before submitting
    [ ] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**  
Having an empty base path within a module's routing loaded using loadChildren
does not work with named outlet navigation.
**Expected behavior**  
Empty base path does work as documented in the Angular documentation on
asynchronous routing. Note that this issue occurs both with asynchronous
routing (path-based) loadChildren usage as well as with `loadChildren: () =>
Module`.
**Minimal reproduction of the problem with instructions**  
This plunker shows the problem.  
Clicking the 'Contact' link doesn't work and produces the error "Cannot match
any routes."
_**app-routing.module**_
    const appRoutes: Routes = [
      { path: 'admin', loadChildren: () => AdminModule },
      { path: '',   redirectTo: '/admin', pathMatch: 'full' }
    ];
_**admin-routing.module**_
    const adminRoutes: Routes = [
    { 
      path: '', 
      component: AdminComponent,
      children: [ 
        {
          path: 'compose',
          component: ComposeMessageComponent,
          outlet: 'popup'
        }
      ]
    }];
This plunker _does_ work.
_**app-routing.module**_
    const appRoutes: Routes = [
      { path: 'admi', loadChildren: () => AdminModule },
      { path: '',   redirectTo: '/admi/n', pathMatch: 'full' }
    ];
_**admin-routing.module**_
    const adminRoutes: Routes = [
    { 
      path: 'n', 
      component: AdminComponent,
      children: [ 
        {
          path: 'compose',
          component: ComposeMessageComponent,
          outlet: 'popup'
        }
      ]
    }];
The key difference is the adminRoutes path not being empty.
**Please tell us about your environment:**
  * **Angular version:** 2.4.5
  * **Browser:** all
  * **Language:** all