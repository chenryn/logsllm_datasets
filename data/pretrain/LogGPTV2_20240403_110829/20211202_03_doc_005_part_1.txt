Advanced SQL
04 — Window Functions
Torsten Grust
Universität Tübingen, Germany
1 ┆ Window Functions
With SQL:2003, the ISO SQL Standard introduced window
functions, a new mode of row-based computation:
SQL Modes of Computation
SQL Feature Mode of Computation
function row → row
table-generating function row → table of rows
aggregate group of rows → row (one per group)
window function " row vicinity → row (one per row)
Window functions …
… are row-based: each individual input row r is mapped
to one result row,
… use the vicinity around r to compute this result row.
Row Vicinity: Window Frames
Each row is the current row at
┌────┬───┐
one point in time.
row│ A │ ⋯ │
├────┼───┤ vicinity
ϱ₁│┈v₁┈│┈┈┈│┈┈┐⋰
Row vicinity (window, frame) is
ϱ₂│ v₁ │ │ ┊
based on either:
ϱ₃│ v₃ │ │ ┊
ϱ₄│ v₃ │␥␥␥│ current row
ϱ₅│ v₃ │ │ ┊
➊ row position (ROWS windows)
ϱ₆│┈v₄┈│┈┈┈│┈┈┘
ϱ₇│ v₅ │ │ ➋ row values vᵢ (RANGE windows)
ϱ₈│ v₅ │ │
└────┴───┘
As the current row changes, the
window slides with it.
Window semantics depend on a defined row ordering.
⚠
Window Frame Specifications (Variant: ROWS)
window function ordering criteria frame specification
UVW U────V────W U─V─W
‹f› OVER (ORDER BY ‹e₁›,…,‹eₙ› [ ROWS ‹frame› ])
┌────┬───┐ ‹frame›:
row│ A │ ⋯ │
├────┼───┤ [ϱ₁,…,ϱ₄]: :; ?>:@?>A;A BC;D;AE>F G>A D?CC;> L BC;D;AE>F G>A M N@OO@=E>F
ϱ₅│ │ │ ┊ ┇ PQR PQR
ϱ₆│╍╍╍╍│╍╍╍│╍╍┊╍╍┛ ‹n› ‹m›
ϱ₇│┈┈┈┈│┈┈┈│┈┈┘⋱
└────┴───┘ [ϱ₄,…,ϱ₇]: :; D?CC;>A ?>:@?>A;A N@OO@=E>F
Window Frame Specifications (Variant: RANGE)
window function frame specification
UVW U─V─W
‹f› OVER (ORDER BY A [ RANGE ‹frame› ])
┌────┬───┐ ‹frame›:
row│ A │ ⋯ │
├────┼───┤ [ϱ₁,…,ϱ₅]: :; ?>:@?>A;A BC;D;AE>F G>A D?CC;> D?CC;>A ?>:@?>A;A N@OO@=E>F
Window Frame Specifications: Abbreviations
┌────┬───┐
row│ A │ ⋯ │ [ϱ₁,…,ϱ₅]: @\;C ❪❫ ≡ all rows form the window frame
├────┼───┤ ⋰ (for any current row)
ϱ₁│┈┈┈┈│┈┈┈│┈┈┐
ϱ₂│ │ │ ┊
ϱ₃│␥␥␥␥│␥␥␥│ current row
ϱ₄│ │ │ ┊
ϱ₅│┈┈┈┈│┈┈┈│┈┈┘
└────┴───┘
┌────┬───┐
row│ A │ ⋯ │ [ϱ₁,…,ϱ₄]: @\;C ❪@CA;C :` G❫ ≡
├────┼───┤ ⋰
ϱ₁│┈v₁┈│┈┈┈│┈┈┐ @\;C ❪@CA;C :` G
ϱ₂│ v₂ │ │ ┊ CG>F; :; ?>:@?>A;A BC;D;AE>F
ϱ₃│␥v₃␥│␥␥␥│ current row G>A D?CC;> p0.x),
-- ➋ MAX(⍺) scan (to the right of p₀)
max_scan(x, max_angle) AS (
SELECT a.x,
MAX(a.angle)
OVER (ORDER BY abs(p0.x - a.x)) AS max_angle
FROM angles AS a),
⋮
/
Looking Left and Right: PARTITION BY
┊
p₀ ☻ ├ ⁸⁰⁰ᵐ
├ ⁷⁰⁰ᵐ
p₃ ├ ⁶⁰⁰ᵐ
p₂ ├ ⁵⁰⁰ᵐ
├ ⁴⁰⁰ᵐ
p₄ p₁ ├ ³⁰⁰ᵐ
├ ²⁰⁰ᵐ
⍺₇ ⍺₆ ⍺₆ ⍺₆ ⍺₆ ⍺₅ ⍺₄ ⍺₃ ⍺₂ 0° ⍺₁ ⍺₁ ⍺₁
┊
wGx❪α❫ scan┊
┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬──┬── Δx
₅₀ₘ ₂₀ₘ ₀ₘ ₂₀ₘ
P─────────────Q───────────R┊P────Q────R