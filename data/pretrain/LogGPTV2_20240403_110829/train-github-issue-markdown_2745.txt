ReactDOM and React are good separation of concerns. However, except for
special cases, React applications almost always require the ReactDOM as well.
The special cases can obviously have their own builds which can remove the
unnecessary dependency. But React officially should serve a single library
which includes the ReactDOM as a single resource. It absolutely makes no sense
for an extra network request for a library that's 900 bytes gzipped.
This cost is even multiplied, since the official CDNs seem to already have a
redirection in place. At the moment of filing this issue, a request to
https://fb.me/react-0.14.7.min.js ends up with 301 to https://fbcdn-
dragon-a.akamaihd.net/hphotos-ak-
xfa1/t39.3284-6/12624086_185960608428874_474870377_n.js
And similar redirects for ReactDOM. That's `4` requests in place of what could
be a `2`. 2 requests, for a mere 900 bytes. In other words, taking the
overhead of TCP/IP and HTTP, `an overhead of nearly half a kilobyte with about
600ms of latency (in my geographic location) for a mere 900 bytes`. Now, add
to the fact that the `gzip would probably nullify that 900 bytes almost
entirely` if its included as a part of the other 70kb file, due to binary
compression.
I'm honestly quite surprised why it was even decided to separate them (Not as
libraries, but in terms of deployment).