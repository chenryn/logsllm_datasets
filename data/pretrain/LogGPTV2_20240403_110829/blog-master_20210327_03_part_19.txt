                                 ->  Merge Join  
                                       Merge Cond: (t4.id = t5.id)  
                                       ->  Index Scan using t4_pkey on t4  
                                       ->  Index Scan using t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa on t5  
(16 rows)  
/*+Leading((t5(t4(t3(t2 t1)))))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading((t5 (t4 (t3 (t2 t1)))))  
not used hint:  
duplication hint:  
error hint:  
                                QUERY PLAN                                  
--------------------------------------------------------------------------  
 Hash Join  
   Hash Cond: (t5.id = t1.id)  
   ->  Seq Scan on t5  
   ->  Hash  
         ->  Merge Join  
               Merge Cond: (t4.id = t1.id)  
               ->  Sort  
                     Sort Key: t4.id  
                     ->  Seq Scan on t4  
               ->  Materialize  
                     ->  Merge Join  
                           Merge Cond: (t3.id = t1.id)  
                           ->  Sort  
                                 Sort Key: t3.id  
                                 ->  Seq Scan on t3  
                           ->  Materialize  
                                 ->  Merge Join  
                                       Merge Cond: (t2.id = t1.id)  
                                       ->  Index Scan using t2_pkey on t2  
                                       ->  Index Scan using t1_pkey on t1  
(20 rows)  
/*+Leading(((((t1 t2)t3)t4)t5))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading(((((t1 t2) t3) t4) t5))  
not used hint:  
duplication hint:  
error hint:  
                                          QUERY PLAN                                            
----------------------------------------------------------------------------------------------  
 Nested Loop  
   ->  Merge Join  
         Merge Cond: (t1.id = t4.id)  
         ->  Merge Join  
               Merge Cond: (t1.id = t3.id)  
               ->  Merge Join  
                     Merge Cond: (t1.id = t2.id)  
                     ->  Index Scan using t1_pkey on t1  
                     ->  Index Scan using t2_pkey on t2  
               ->  Sort  
                     Sort Key: t3.id  
                     ->  Seq Scan on t3  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Index Scan using t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa on t5  
         Index Cond: (id = t1.id)  
(17 rows)  
/*+Leading(((((t5 t4)t3)t2)t1))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading(((((t5 t4) t3) t2) t1))  
not used hint:  
duplication hint:  
error hint:  
                                                   QUERY PLAN                                                     
----------------------------------------------------------------------------------------------------------------  
 Nested Loop  
   Join Filter: (t2.id = t1.id)  
   ->  Nested Loop  
         Join Filter: (t3.id = t2.id)  
         ->  Merge Join  
               Merge Cond: (t4.id = t3.id)  
               ->  Merge Join  
                     Merge Cond: (t5.id = t4.id)  
                     ->  Index Scan using t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa on t5  
                     ->  Sort  
                           Sort Key: t4.id  
                           ->  Seq Scan on t4  
               ->  Index Scan using t3_pkey on t3  
         ->  Index Scan using t2_pkey on t2  
               Index Cond: (id = t5.id)  
   ->  Index Scan using t1_pkey on t1  
         Index Cond: (id = t5.id)  
(17 rows)  
/*+Leading(((t1 t2)(t3(t4 t5))))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading(((t1 t2) (t3 (t4 t5))))  
not used hint:  
duplication hint:  
error hint:  
                                                      QUERY PLAN                                                        
----------------------------------------------------------------------------------------------------------------------  
 Merge Join  
   Merge Cond: (t1.id = t3.id)  
   ->  Merge Join  
         Merge Cond: (t1.id = t2.id)  
         ->  Index Scan using t1_pkey on t1  
         ->  Index Scan using t2_pkey on t2  
   ->  Materialize  
         ->  Merge Join  
               Merge Cond: (t3.id = t4.id)  
               ->  Index Scan using t3_pkey on t3  
               ->  Materialize  
                     ->  Merge Join  
                           Merge Cond: (t4.id = t5.id)  
                           ->  Index Scan using t4_pkey on t4  
                           ->  Index Scan using t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa on t5  
(15 rows)  
/*+Leading(((t5 t4)(t3(t2 t1))))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading(((t5 t4) (t3 (t2 t1))))  
not used hint:  
duplication hint:  
error hint:  
                                             QUERY PLAN                                               
----------------------------------------------------------------------------------------------------  
 Merge Join  
   Merge Cond: (t4.id = t1.id)  
   ->  Merge Join  
         Merge Cond: (t5.id = t4.id)  
         ->  Index Scan using t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa on t5  
         ->  Sort  
               Sort Key: t4.id  
               ->  Seq Scan on t4  
   ->  Materialize  
         ->  Merge Join  
               Merge Cond: (t3.id = t1.id)  
               ->  Sort  
                     Sort Key: t3.id  
                     ->  Seq Scan on t3  
               ->  Materialize  
                     ->  Merge Join  
                           Merge Cond: (t2.id = t1.id)  
                           ->  Index Scan using t2_pkey on t2  
                           ->  Index Scan using t1_pkey on t1  
(19 rows)  
/*+Leading((((t1 t2)t3)(t4 t5)))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading((((t1 t2) t3) (t4 t5)))  
not used hint:  
duplication hint:  
error hint:  
                                                QUERY PLAN                                                  
----------------------------------------------------------------------------------------------------------  
 Merge Join  
   Merge Cond: (t1.id = t4.id)  
   ->  Merge Join  
         Merge Cond: (t1.id = t3.id)  
         ->  Merge Join  
               Merge Cond: (t1.id = t2.id)  
               ->  Index Scan using t1_pkey on t1  
               ->  Index Scan using t2_pkey on t2  
         ->  Sort  
               Sort Key: t3.id  
               ->  Seq Scan on t3  
   ->  Materialize  
         ->  Merge Join  
               Merge Cond: (t4.id = t5.id)  
               ->  Index Scan using t4_pkey on t4  
               ->  Index Scan using t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa on t5  
(16 rows)  
/*+Leading((((t5 t4)t3)(t2 t1)))*/  
EXPLAIN (COSTS false) SELECT * FROM t1, t2, t3, t4, t5 WHERE t1.id = t2.id AND t1.id = t3.id AND t1.id = t4.id AND t1.id = t5.id;  
LOG:  pg_hint_plan:  
used hint:  
Leading((((t5 t4) t3) (t2 t1)))  
not used hint:  
duplication hint:  
error hint:  
                                                QUERY PLAN                                                  
----------------------------------------------------------------------------------------------------------  
 Merge Join  
   Merge Cond: (t3.id = t1.id)  
   ->  Merge Join  
         Merge Cond: (t4.id = t3.id)  
         ->  Merge Join  
               Merge Cond: (t5.id = t4.id)  
               ->  Index Scan using t5_idaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa on t5  
               ->  Sort  
                     Sort Key: t4.id  
                     ->  Seq Scan on t4  
         ->  Index Scan using t3_pkey on t3  
   ->  Materialize  
         ->  Merge Join  
               Merge Cond: (t2.id = t1.id)  
               ->  Index Scan using t2_pkey on t2  
               ->  Index Scan using t1_pkey on t1  
(16 rows)  
-- inherite table test to specify the index's name  
EXPLAIN (COSTS false) SELECT * FROM p2 WHERE id >= 50 AND id   Seq Scan on p2 p2_1  
         Filter: ((id >= 50) AND (id   Seq Scan on p2_c1 p2_2  
         Filter: ((id >= 50) AND (id   Seq Scan on p2_c1_c1 p2_3  
         Filter: ((id >= 50) AND (id   Seq Scan on p2_c1_c2 p2_4  
         Filter: ((id >= 50) AND (id = 50 AND id   Index Scan using p2_pkey on p2 p2_1  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_pkey on p2_c1 p2_2  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_c1_pkey on p2_c1_c1 p2_3  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_c2_pkey on p2_c1_c2 p2_4  
         Index Cond: ((id >= 50) AND (id = 50 AND id   Index Scan using p2_id_val_idx on p2 p2_1  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_id_val_idx on p2_c1 p2_2  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_c1_id_val_idx on p2_c1_c1 p2_3  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_c2_id_val_idx on p2_c1_c2 p2_4  
         Index Cond: ((id >= 50) AND (id = 50 AND id   Index Scan using p2_val_id_idx on p2 p2_1  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_val_id_idx on p2_c1 p2_2  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_c1_val_id_idx on p2_c1_c1 p2_3  
         Index Cond: ((id >= 50) AND (id   Index Scan using p2_c1_c2_val_id_idx on p2_c1_c2 p2_4  
         Index Cond: ((id >= 50) AND (id = '50' AND val   Seq Scan on p2 p2_1  
         Filter: ((val >= '50'::text) AND (val   Seq Scan on p2_c1 p2_2  
         Filter: ((val >= '50'::text) AND (val   Seq Scan on p2_c2 p2_3  
         Filter: ((val >= '50'::text) AND (val   Seq Scan on p2_c3 p2_4  
         Filter: ((val >= '50'::text) AND (val   Seq Scan on p2_c4 p2_5  
         Filter: ((val >= '50'::text) AND (val   Seq Scan on p2_c1_c1 p2_6  
         Filter: ((val >= '50'::text) AND (val   Seq Scan on p2_c1_c2 p2_7  
         Filter: ((val >= '50'::text) AND (val   Seq Scan on p2_c3_c1 p2_8  
         Filter: ((val >= '50'::text) AND (val   Seq Scan on p2_c3_c2 p2_9  
         Filter: ((val >= '50'::text) AND (val = '50' AND val <= '51' AND p2.ctid = '(1,1)';  
LOG:  available indexes for IndexScan(p2):  
LOG:  available indexes for IndexScan(p2_c1):  
LOG:  available indexes for IndexScan(p2_c2):  
LOG:  available indexes for IndexScan(p2_c3):  