    -   ::: para
        `--enableldap`{.command} --- 在 `/etc/nsswitch.conf`{.filename}
        打开 LDAP 支持，允许系统从 LDAP
        目录获取用户的信息（UID、主目录、shell
        等等）。要使用这个选项，必须安装 `nss-pam-ldapd`{.filename}
        软件包。还必须用 `--ldapserver=`{.command} 和
        `--ldapbasedn=`{.command} 指定服务器和基础 *DN（Distinguished
        Name）*。
        :::
    -   ::: para
        `--enableldapauth`{.command} --- 使用 LDAP
        作为验证方法。这启用了用于验证和更改密码的 `pam_ldap`{.filename}
        模块，它使用 LDAP 目录。要使用这个选项，必须安装
        `nss-pam-ldapd`{.filename} 软件包。还必须用
        `--ldapserver=`{.command} 和 `--ldapbasedn=`{.command}
        指定服务器和基本 DN。如果环境中没有使用 *TLS (Transport Layer
        Security)*，则请使用 `--disableldaptls`{.command}
        选项确保结果配置文件可以工作。
        :::
    -   ::: para
        `--ldapserver=`{.command} --- 如果指定 `--enableldap`{.command}
        或 `--enableldapauth`{.command}
        之一，则可使用这个选项指定所使用的 LDAP 服务器名称。在
        `/etc/ldap.conf`{.filename} 文件中设置这个选项。
        :::
    -   ::: para
        `--ldapbasedn=`{.command} --- 如果指定 `--enableldap`{.command}
        或 `--enableldapauth`{.command}
        之一，则可使用这个选项指定用来保存用户信息的 LDAP 目录树中的
        DN。在 `/etc/ldap.conf`{.filename} 文件中设置这个选项。
        :::
    -   ::: para
        `--enableldaptls`{.command} --- 使用
        TLS（传输层安全）查寻。该选项允许 LDAP 在验证前向 LDAP
        服务器传送加密的用户名和密码。
        :::
    -   ::: para
        `--disableldaptls`{.command} --- 不使用 TLS（传输层安全）在使用
        LDAP 验证的环境中查寻。
        :::
    -   ::: para
        `--enablekrb5`{.command} --- 使用 Kerberos 5 验证用户。Kerberos
        自己不知道主目录、UID 或 shell。如果启用 Kerberos，则必须启用
        LDAP、NIS、Hesiod，或者使用 `/usr/sbin/useradd`{.command}
        命令以便使这个工作站获知用户的帐号。如果使用这个选项，则必须安装
        `pam_krb5`{.filename} 软件包。
        :::
    -   ::: para
        `--krb5realm=`{.command} --- 工作站所属的 Kerberos 5 网域。
        :::
    -   ::: para
        `--krb5kdc=`{.command} --- 为网域要求提供服务的 KDC（或者一组
        KDC）。如果网域内有多个 KDC，使用逗号（,）将其分开。
        :::
    -   ::: para
        `--krb5adminserver=`{.command} --- 网域内还运行 kadmind 的
        KDC。该服务器处理更改密码以及其他管理请求。如果有一个以上
        KDC，则该服务器必须是主 KDC。
        :::
    -   ::: para
        `--enablehesiod`{.command} --- 启用 Hesiod
        支持查找用户主目录、UID 和 shell。在网络中设置和使用 Hesiod
        的更多信息，可以在 `glibc`{.filename} 软件包中包括的
        `/usr/share/doc/glibc-2.x.x/README.hesiod`{.filename}
        中找到。Hesiod 是使用 DNS 记录来存储用户、组和其他信息的 DNS
        的扩展。
        :::
    -   ::: para
        `--hesiodlhs`{.command} 和 `--hesiodrhs`{.command} ---
        `Hesiod`{.systemitem} LHS (left-hand side) 和 RHS (right-hand
        side) 的值，在 `/etc/hesiod.conf`{.filename}
        中设置。`Hesiod`{.systemitem} 库使用这个选项来决定查找信息时搜索
        DNS 的名字，类似于 [**LDAP**]{.application} 对基本 DN 的使用。
        :::
        ::: para
        要查找 `jim`{.systemitem} 用户信息，Hesiod 库会查找
        `jim.passwd`{.literal}，这应该解析为 TXT
        文本记录，类似其
        `passwd`{.filename}文件中的条目（`jim:*:501:501:Jungle Jim:/home/jim:/bin/bash`{.computeroutput}）。要查找组，Hesiod
        会查找 `jim.group`{.literal}。
        :::
        ::: para
        根据号码查找用户和组，在 `jim.passwd`{.literal} 中使用 CNAME
        `501.uid`{.literal}，并在 `jim.group`{.literal} 中使用 CNAME
        `501.gid`{.literal}。注：执行搜索时，程序库没有在 LHS 和 RHS
        值前放置句号 `.`{.literal}。所以，如果 LHS 和 RHS
        值都需要在它们前面放一个句点，则为 `--hesiodlhs`{.command} 和
        `--hesiodrhs`{.command} 设置的值中必须包含句点。
        :::
    -   ::: para
        `--enablesmbauth`{.command} --- 启用根据 SMB 服务器（典型的是
        Samba 或 Windows 服务器）的用户验证。SMB
        验证支持不知道主目录、UID 或 shell。如果启用 SMB，则必须通过启用
        LDAP、NIS、Hesiod，或者使用 `/usr/sbin/useradd`{.command}
        命令，让工作站了解该用户帐户。
        :::
    -   ::: para
        `--smbservers=`{.command} --- 用来做 SMB
        验证的服务器名称。要指定多个服务器，用逗号（,）来分隔它们。
        :::
    -   ::: para
        `--smbworkgroup=`{.command} --- SMB 服务器的工作组名称。
        :::
    -   ::: para
        `--enablecache`{.command} --- 启用 `nscd`{.command}
        服务。`nscd`{.command}
        服务会将用户、组和其他类型的信息存入缓存。如果选择在网络中使用
        NIS、LDAP 或 Hesiod 配置用户和组的信息，缓存就尤其有用。
        :::
    -   ::: para
        `--passalgo=`{.command} --- 指定 `sha256`{.command} 设定 SHA-256
        哈希算法，或 `sha512`{.command} 设定 SHA-512 哈希算法。
        :::
    :::
[`autopart`{.command}（自选）[]{#ch-kickstart2.html#idm139817197738016 .indexterm}]{.term}
:   ::: para
    自动生成分区：root (`/`{.filename}) 分区（1 GB 或者更大），swap
    分区以及适用于该架构的 boot 分区。
    :::
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    注：`autopart`{.option} 选项不能与
    `part/partition`{.option}、`raid`{.option}、`logvol`{.option} 或者
    `volgroup`{.option} 在同一 Kickstart 文件中使用。
    :::
    :::
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `--encrypted`{.command} ---
        是否应该默认加密所有支持的设备？这与在初始分区页面中选择
        [**加密**]{.guilabel} 复选框作用相当。
        :::
    -   ::: para
        `--cipher=`{.command} --- 指定如果对
        [**anaconda**]{.application} 默认 aes-xts-plain64
        不满意时使用的加密类型。必须与 `--encrypted`{.command}
        选项一同使用这个选项，单独使用无效。*《 Red Hat Enterprise Linux
        安全指南》*中有可用加密类型列表，但 Red Hat 强烈推荐使用
        aes-xts-plain64 或者 aes-cbc-essiv:sha256。
        :::
    -   ::: para
        `--passphrase=`{.command} ---
        提供在系统范围内用于所有加密设备的默认密码短语。
        :::
    -   ::: para
        `--escrowcert=URL_of_X.509_certificate`{.command} ---
        将所有加密卷数据加密密码保存在 `/root`{.filename} 中，使用来自
        *URL_of_X.509_certificate* 指定的 URL 的 X.509
        证书加密。每个加密卷的密码都作为单独的文件保存。这个选项只在指定了
        `--encrypted`{.command} 时才有意义。
        :::
    -   ::: para
        `--backuppassphrase=`{.command} ---
        为每个加密卷添加随即生成的密码短语。在 `/root`{.filename}
        中单独的文件中保存这些密码短语，使用 `--escrowcert`{.command}
        指定的 X.509 证书加密。这个选项只在指定 `--escrowcert`{.command}
        时才有意义。
        :::
    :::
[`autostep`{.command}（自选）[]{#ch-kickstart2.html#idm139817174755136 .indexterm}]{.term}
:   ::: para
    与 `interactive`{.command} 类似，但它会进入下一个页面。主要用于
    debug，且不应在部署系统时使用，因为可能会与软件包安装冲突。
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `--autoscreenshot`{.command} ---
        在安装的每一步采用截屏并将这些映像在完成安装后复制到
        `/root/anaconda-screenshots`{.command}。这部分是本文档中最有用的部分。
        :::
    :::
[`bootloader`{.command}（必选）[]{#ch-kickstart2.html#idm139817200777136 .indexterm}]{.term}
:   ::: para
    指定安装引导装载程序的方法。安装和升级时都需要这个选项。
    :::
    ::: {.important xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    ::: para
    如果选择文本模式 kickstart
    安装，请确定指定分区、引导装载程序和软件包选择选项。这些步骤在文本模式中是自动执行的，且
    [**anaconda**]{.application}
    无法提示有缺少的信息。如果没有选择这些选项，[**anaconda**]{.application}
    将停止安装进程。
    :::
    :::
    :::
    ::: {.important xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **重要**
    :::
    ::: admonition
    ::: para
    强烈
    建议在每台机器中都设置引导装载程序密码。未经保护的引导装载程序程序可导致潜在攻击者修改系统引导选项，并获取对该系统的未授权访问。有关引导装载程序密码及密码一般安全性的详情请查看*《Red
    Hat Enterprise Linux 安全性指南》*中*《工作站安全性》*一章。
    :::
    :::
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `--append=`{.command} ---
        指定内核参数。要指定多个参数，使用空格分隔它们。例如：
        :::
        ``` screen
        bootloader --location=mbr --append="hdd=ide-scsi ide=nodma"
        ```
    -   ::: para
        `--driveorder`{.command} --- 指定在 BIOS
        引导顺序中的首选驱动器。例如：
        :::
        ``` screen
        bootloader --driveorder=sda,hda
        ```
    -   ::: para
        `--disabled`{.option} --- This option is a stronger version of
        `--location=none`{.option}. While `--location=none`{.option}
        simply disables bootloader installation, `--disabled`{.option}
        disables bootloader installation and also disables installation
        of the bootloader package, thus saving space.
        :::
    -   ::: para
        `--location=`{.command} ---
        指定写入引导记录的位置。有效的值如下：`mbr`{.command}（默认）、`partition`{.command}（在包含内核
        --- UEFI 需要的分区的第一个扇区安装引导装载程序）或
        `none`{.command}（不安装引导装载程序）。
        :::
        ::: important
        ::: admonition_header
        **重要**
        :::
        ::: admonition
        ::: para
        使用 UEFI 固件的 64 位 AMD 及 Intel
        系统要求将该引导装载程序安装到使用 GUID 分区表（GPT）标记磁盘的
        EFI 系统分区中。在使用主引导记录（MBR）的磁盘中，要求使用
        `clearpart`{.command} 和 `zerombr`{.command}
        重新标记该磁盘。重新标记磁盘将使该磁盘中获得所有输入无法访问，并要求创建一个新分区布局。
        :::
        :::
        :::
    -   ::: para
        `--password=`{.command} --- 如果使用 GRUB，则将 GRUB
        引导装载程序的密码设置到这个选项指定的位置。这应该被用来限制对可以传入任意内核参数的
        GRUB shell 的访问。
        :::
    -   ::: para
        `--iscrypted`{.command} --- 如果使用
        GRUB，且密码已加密，则需包含此选项。会根据密码自动探测加密方法。
        :::
        ::: para
        To create an encrypted password, use the following command:
        :::
        ``` programlisting
        python -c 'import crypt; print(crypt.crypt("My Password"))'
        ```
        ::: para
        This will create a sha512 crypt of your password.
        :::
    -   ::: para
        `--upgrade`{.command} ---
        升级现有的引导装载程序配置，保留其中原有的项目。该选项仅可用于升级。
        :::
    :::
[`clearpart`{.command}（自选）[]{#ch-kickstart2.html#idm139817122465536 .indexterm}]{.term}
:   ::: para
    从该系统中删除分区要在生成新分区之前完成。默认情况下未删除任何分区。
    :::
    ::: {.note xmlns:d="http://docbook.org/ns/docbook"}
    ::: admonition_header
    **注意**
    :::
    ::: admonition
    ::: para
    如果使用 `clearpart`{.command} 命令，`--onpart`{.command}
    命令就不能够用在逻辑分区上。
    :::
    :::
    :::
    ::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
    -   ::: para
        `--all`{.command} --- 删除系统中的所有分区。
        :::
        ::: warning
        ::: admonition_header
        **警告**
        :::
        ::: admonition
        ::: para
        这个选项会删除安装程序可以到达的所有磁盘，包括附加的网络存储。使用这个选项应格外小心。
        :::
        ::: para
        可以使用 `--drives=`{.option} 选项防止 `clearpart`{.command}
        清空要保留的存储，并通过稍后附加网络存储要清理的驱动器（例如：在
        Kickstart 文件的 `%post`{.command}
        部分），或将用来访问网络存储的内核模块放入黑名单。
        :::
        :::
        :::
        ::: important
        ::: admonition_header
        **重要**
        :::
        ::: admonition
        ::: para
        The `clearpart`{.command} cannot clear an existing BIOS RAID
        setup. For this, the command `wipefs -a`{.command} must be added
        to your `%pre`{.command} script. Note that this will wipe all
        metadata from the RAID.
        :::
        :::
        :::
    -   ::: para
        `--drives=`{.command} ---
        指定从哪个驱动器中清除分区。例如，下面的命令清除了主 IDE
        控制器上的前两个驱动器上所有分区：
        :::
        ``` screen
        clearpart --drives=hda,hdb --all
        ```
        ::: para
        要清除多路径设备，请使用 `disk/by-id/scsi-WWID`{.literal}
        格式，其中 *WWID* 是该设备的*通用识别符*。例如：要清除 WWID 为
        `58095BEC5510947BE8C0360F604351918`{.literal} 的磁盘，请使用：
        :::
        ``` screen
        clearpart --drives=disk/by-id/scsi-58095BEC5510947BE8C0360F604351918
        ```
        ::: para
        所有多路经设备首选这个格式，但如果有出错信息，也可使用*逻辑卷管理*（LVM）清除不使用的多路径设备，请使用
        `disk/by-id/dm-uuid-mpath-WWID`{.literal} 格式，其中 *WWID*
        是该设备的*通用识别符*。例如：要清除 WWID 为
        `2416CD96995134CA5D787F00A5AA11017`{.literal} 的磁盘，请使用：
        :::
        ``` screen
        clearpart --drives=disk/by-id/dm-uuid-mpath-2416CD96995134CA5D787F00A5AA11017
        ```
        ::: warning
        ::: admonition_header
        **警告**
        :::
        ::: admonition
        ::: para
        永远不要使用类似 `mpatha`{.systemitem}
        的设备名称指定多路径设备。类似 `mpatha`{.systemitem}
        的设备名称不是具体到某个磁盘。在安装过程中命名为
        `/dev/mpatha`{.systemitem} 的磁盘可能并不是希望得到的那个。因此
        `clearpart`{.command} 命令可能会对错误的磁盘进行操作。
        :::
        :::
        :::
    -   ::: para
        `--linux`{.command} --- 删除所有 Linux 分区。
        :::
    -   ::: para
        `--none`{.command}（默认）--- 不删除任何分区。
        :::
    -   ::: para