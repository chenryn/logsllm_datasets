˜Z = д(f (Z))
(15)
Line 9 of Algorithm 3 implements the hierarchical clustering [6]
on the rows of the trained autoencoder model ˜Z to obtain the recon-
structed community structure ˜ci. The entire process is repeated for
each community in order to obtain the reconstructed community
˜cm} for accurate social bonet community detection.
set ˜C = { ˜c1, ...,
Algorithm 3 Deep Autoencoder based SBCD
Input: C = {c1, ..., cm} communities, κ: number of hidden
layers
Output: ˜C = { ˜c1, ....,
˜C = ϕ
1:
2: for each community ci ∈ C do
3:
˜cm} reconstructed communities
Compute normalized weighted behavioral similarity matrix
for each participant pi ∈ ci do
Sci using Equation (9)
Compute trust value of pi (i.e., Tpi ) using Equation (10)
end for
Z ← concat(Sci ,Tci )
˜Z ← Train the autoencoder model with Z and κ using
Equations (13) and (14)
Execute hierarchical cluster on the rows of ˜Z to obtain ˜ci
˜C = ˜C ∪ ˜ci
4:
5:
6:
7:
8:
9:
10:
11: end for
For each community ci, the weighted behavioral similarity ma-
trix Sci is constructed in such a way that each element wij in Sci is
computed with the help of Equation (9), i.e., wij ∈ RU ×U , where
Sci is a similarity matrix in the form RU ×U and U represents the
number of participants in the community ci. Further, the trust ma-
= [Tp1,Tp2 ....]T , where
trix for ith community is represented as Tci
Tpi ∈ RU ×1 and Tci is a trust matrix in the form RU ×1 . Equation
(10) evaluates the trust value Tpi of each participant pi ∈ ci (Lines
1-6, Algorithm 3). By concatenating the similarity matrix Sci with
trust matrix Tci , we construct the aggregated matrix Z, i.e., RU ×V
where V = U + 1. Now Z along with the weighted similarity matrix
and trust matrix are given as input to the deep autoencoder model,
which is trained to reconstruct the social botnet communities more
accurately (Lines 7-8, Algorithm 3). The Deep Autoencoder consists
of two phases, namely encoding f (Z) : RU ×V → RU ×D and decod-
ing д(Y) : RU ×D → RU ×V . In the encoding phase, the aggregated
matrix Z is mapped to D-dimensional hidden layers to obtain Y,
computed as
Y = f (Z) = siд(Wh2 · siд(Wh1Z + bh1) + bh2)
(13)
whereWh1,Wh2, bh1 and bh2 are respectively the weights and biases
of the encoding phase in the deep autoencoder. Here, siд(σ) =
1+e−σ , where σ is an argument, represents a mapping function for
both encoding and decoding phases. In the decoding phase, Y is
mapped to obtain the reconstructed aggregated matrix ˜Z as follows:
(14)
˜Z = д(Y) = siд(Wh4 · siд(Wh3Y + bh3) + bh4)
1
5 EXPERIMENTAL EVALUATION
In this section, we evaluate the performance of our proposed algo-
rithms for detecting social botnet communities, and compare them
with two recent methods, namely detecting spam communities
(SpamCom) [3] and Botnet Discovery [23]. The SpamCom identifies
spammers (or social spam bots) based on the user behavioral fea-
tures and applies clique to determine strongly connected botnet
communities. On the other hand, the Botnet Discovery identifies
bots by considering correlation graph and applies modularity based
clustering approach for community detection. We consider two
datasets, such as The Fake Project dataset [5] and Social Honeypot
dataset [10] for performance evaluation.
The proposed SBCD and DA-SBCD algorithms consider two pa-
rameters – similarity value (Section 4.2) and trust value (Section 4.3)
– to detect botnet communities. With the help of available ground
truth from the above datasets, we evaluate the performance of our
algorithms in terms of normalized mutual information (NMI), pre-
cision, recall, F-measure and G-measure. These metrics are defined
as follows:

• Normalized Mutual Information (NMI): There exist two dif-
ferent types of communities, namely detected communities
˜C and ground-truth labeled communities (cid:174)C. Let qij represent
the number of participants in a detected community ˜ci with
label j. Let qi and qj represent the number of participants
in each detected community ˜ci and with labeled data j for a
ground-truth labeled community (cid:174)cj, respectively. We define
N MI( ˜C, (cid:174)C) =
 (cid:174)cj ∈ (cid:174)C qi j loд n .qi j
n )( (cid:174)cj ∈ (cid:174)C qj loд qj
˜ci ∈ ˜C
˜ci ∈ ˜C qi loд qi
(cid:114)
(
where n represents the total number of participants. If NMI is
close to zero, it implies that there exists dissimilarity between
the detected and ground-truth labeled communities. If NMI
is close to one, it implies that there exists high similarity
between the detected and ground-truth labeled communities.
T P +F P , where T P (respec-
tively, F P) represents similar (respectively, dissimilar) type
of participants assigned to the same community.
• Precision (P): It is defined as P = T P
n )
qi .qj
• Recall (R): It is defined as R = T P
T P +F N , where F N represents
similar type of participants that are assigned to different
communities.
• F-measure (F): It is defined as F = 2×pr ecision×r ecall
• G-measure (G): It is defined as G =(cid:112)precision × recall
pr ecision+r ecall
Session 13: Malware ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan7140.9
0.8
0.7
I
M
N
0.6
0.5
0.4
0.3
)
%
(
n
o
i
s
i
c
e
r
P
)
%
(
e
r
u
s
a
e
m
-
F
100
90
80
70
60
50
40
30
20
10
100
90
80
70
60
50
40
30
20
10
I
M
N
1
0.8
0.6
0.4
0.2
0
2 hidden layers
3 hidden layers
4 hidden layers
Social Honeypot
The Fake Project
Social Honeypot
The Fake Project
0.2
0.4
0.6
0.8
1
α
(a) Varying the parameter α
(b) Varying the number of hidden layers
Figure 2: Performance of DA-SBCD algorithm on two Twitter datasets
100
90
80
70
60
50
40
30
20
10
100
90
80
70
60
50
40
30
20
10
)
%
(
l
l
a
c
e
R
)
%
(
e
r
u
s
a
e
m
G
-
Botnet Discovery
SpamCom
SBCD
DA-SBCD
0.2
0.4
0.6
Parameter µ
(a) Precision
0.8
1
Botnet Discovery
SpamCom
SBCD
DA-SBCD
0.2
0.4
0.6
Parameter µ
(c) F-measure
0.8
1
Botnet Discovery
SpamCom
SBCD
DA-SBCD
0.2
0.4
0.6
Parameter µ
(b) Recall
0.8
1
Botnet Discovery
SpamCom
SBCD
DA-SBCD
0.2
0.4
0.6
Parameter µ
(d) G-measure
0.8
1
Figure 3: Comparison of DA-SBCD algorithm with other botnet communities detection algorithms on The Fake Project dataset
Session 13: Malware ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan715100
80
70
60
40
20
)
%
(
l
l
a
c
e
R
Botnet Discovery
SpamCom
SBCD
DA-SBCD
Botnet Discovery
SpamCom
SBCD
DA-SBCD
0.2
0.4
0.6
Parameter µ
(a) Precision
0.8
1
0.2
0.8
1
0.4
0.6
Parameter µ
(b) Recall
90
80
70
60
50
40
30
)
%
(
e
r
u
s
a
e
m
G
-
Botnet Discovery
SpamCom
SBCD
DA-SBCD
Botnet Discovery
SpamCom