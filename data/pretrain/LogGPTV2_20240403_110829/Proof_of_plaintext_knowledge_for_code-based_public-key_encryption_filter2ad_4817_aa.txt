# Title: Proof of Plaintext Knowledge for Code-Based Public-Key Encryption Revisited

## Authors
Rong Hu, Kirill Morozov, and Tsuyoshi Takagi

## Abstract
This work revisits public-key encryption with a focus on two key aspects: 1) providing stronger security guarantees that do not degrade with the number of users, which is essential for widely deployed encryption schemes where many sessions are performed concurrently, as in the case of the Internet; and 2) exploring functional encryption, introduced by Boneh, Sahai, and Waters in 2011, which allows selective computation on encrypted data, as opposed to the coarse-grained access provided by traditional public-key encryption. Functional encryption generalizes traditional public-key encryption by using a master secret key to generate functional decryption keys, each associated with a specific function. An encryption of a message \( m \), together with a functional decryption key associated with function \( f \), decrypts the value \( f(m) \) without revealing any additional information about the encrypted message \( m \). A typical application involves encrypting sensitive medical data and generating functional decryption keys for functions that compute statistics on this encrypted data, without revealing individual medical records.

In this thesis, we present a new public-key encryption scheme that satisfies a strong security guarantee, does not degrade with the number of users, and prevents adversaries from tampering with ciphertexts. We also introduce new functional encryption schemes whose security is based on well-founded assumptions. Our approach is bottom-up, starting from simple constructions that handle a restricted class of functions and extending these to richer functionalities. Additionally, we focus on adding new features that make functional encryption more practical, such as multi-input functional encryption, where encryption is split among different non-cooperative users. We also provide techniques to decentralize the generation of functional decryption keys and the setup of the functional encryption scheme, thereby eliminating the need for a trusted third party holding the master secret key.

## Résumé
Nos travaux revisitent le chiffrement à clé publique de deux façons : 1) nous offrons une meilleure garantie de sécurité que les chiffrements à clé publique typiques, qui gèrent de nombreux utilisateurs pouvant coopérer pour réaliser des attaques sophistiquées. Une telle sécurité est nécessaire lorsque l'on considère des schémas de chiffrement largement déployés, où de nombreuses sessions ont lieu de manière concurrente, comme sur Internet ; 2) nous examinons le chiffrement fonctionnel, introduit en 2011 par Boneh, Sahai et Waters, qui permet un calcul sélectif sur les données chiffrées, contrairement à l'accès tout ou rien permis par les schémas de chiffrement à clé publique traditionnels. Il généralise ces derniers en utilisant une clé secrète maîtresse pour générer des clés de déchiffrement fonctionnelles, chacune associée à une fonction particulière. Le déchiffrement d'un message \( m \) avec une clé de déchiffrement fonctionnelle associée à une fonction \( f \) donne la valeur \( f(m) \), sans révéler d'informations supplémentaires sur le message chiffré \( m \). Un scénario typique implique le chiffrement de données médicales sensibles et la génération de clés de déchiffrement fonctionnelles pour des fonctions qui calculent des statistiques sur ces données chiffrées, sans révéler les dossiers médicaux individuels.

Dans cette thèse, nous présentons un nouveau schéma de chiffrement à clé publique qui satisfait une garantie de sécurité forte, ne se dégrade pas avec le nombre d'utilisateurs et empêche les adversaires de modifier activement les chiffres. Nous proposons également de nouveaux schémas de chiffrement fonctionnel dont la sécurité repose sur des hypothèses calculatoires robustes. Notre approche est bottom-up, commençant par des constructions simples qui gèrent une classe restreinte de fonctions et les étendant à des fonctionnalités plus riches. Nous portons également une attention à l'ajout de nouvelles fonctionnalités qui rendent le chiffrement fonctionnel plus pratique, tel que le chiffrement fonctionnel multi-entrée, où le chiffrement est partagé entre différents utilisateurs non coopératifs. Nous fournissons également des techniques pour décentraliser la génération de clés de déchiffrement fonctionnelles et la mise en place du schéma de chiffrement, éliminant ainsi la nécessité d'une tierce partie de confiance détenant la clé secrète maîtresse.

## Table of Contents
1. **Introduction**
   1.1. Tight Security
     1.1.1. State of the Art in Tight Security
     1.1.2. Contribution 1: Tightly CCA-Secure Encryption without Pairing
   1.2. Functional Encryption
     1.2.1. State of the Art in Functional Encryption
     1.2.2. Contribution 2: Functional Encryption with New Features and Richer Functionalities
     1.2.3. Other Contributions

2. **Preliminaries**
   2.1. Notations and Basics
     2.1.1. Collision Resistant Hashing
     2.1.2. Symmetric-Key Encryption
     2.1.3. Authenticated Encryption
     2.1.4. Public-Key Encryption
     2.1.5. Key-Encapsulation Mechanism
   2.2. Cryptographic Assumptions
     2.2.1. Prime-Order Groups
     2.2.2. Pairing Groups
     2.2.3. Matrix Diffie-Hellman
     2.2.4. Decisional Composite Residuosity
     2.2.5. Learning With Errors
   2.3. Definitions for Single-Input Functional Encryption
   2.4. Definitions for Multi-Input Functional Encryption
     2.4.1. Security Notions
     2.4.2. Removing the Extra Condition Generically
   2.5. Definitions for Multi-Client Functional Encryption
   2.6. Concrete Instances of Functional Encryption for Inner Products
     2.6.1. Inner-Product FE from MDDH
     2.6.2. Inner-Product FE from LWE
     2.6.3. Inner-Product FE from DCR

3. **Tightly CCA-Secure Encryption without Pairings**
   3.1. Multi-ciphertext PCA-Secure KEM
     3.1.1. Our Construction
     3.1.2. Security Proof
   3.2. Multi-ciphertext CCA-Secure Public Key Encryption Scheme
     3.2.1. Our Construction
     3.3. Security Proof of PKE

4. **Multi-Input Inner-Product Functional Encryption from Pairings**
   4.1. Selectively-Secure, Private-Key MIFE for Inner Products
     4.1.1. Selectively-Secure, Multi-Input Scheme from Single-Input Scheme
     4.1.2. Putting Everything Together
   4.2. Achieving Adaptive Security

5. **Multi-Input Inner-Product Functional Encryption without Pairings**
   5.1. From Single to Multi-Input FE for Inner Product
     5.1.1. Information-Theoretic MIFE with One-Time Security
     5.1.2. Our Transformation for Inner Product over \( \mathbb{Z}_L \)
     5.1.3. Our Transformation for Inner Product over \( \mathbb{Z} \)
   5.2. Concrete Instances of FE for Inner Product
     5.2.1. Inner Product FE from MDDH
     5.2.2. Inner Product FE from LWE
     5.2.3. Inner Product FE from DCR

6. **Multi-Client Inner Product Functional Encryption**
   6.1. MCFE with One-AD-IND-Weak Security
   6.2. From One to Many Ciphertext for MCFE
   6.3. Secret Sharing Encapsulation
     6.3.1. Definitions
     6.3.2. Construction of the Secret Sharing Encapsulation
   6.4. Strengthening the Security of MCFE Using SSE
     6.4.1. Generic Construction of xx-AD-IND Security for MCFE
   6.5. Decentralizing MCFE
     6.5.1. Distributed Sum
     6.5.2. Our DSum Protocol
       6.5.3. Security Analysis
     6.5.4. Application to DMCFE for Inner Products

7. **Functional Encryption for Quadratic Functions**
   7.1. Private-Key FE with One-SEL-IND Security
   7.2. Public-Key FE

8. **Conclusion**
   8.1. Summary of the Contributions
   8.2. Open Problems