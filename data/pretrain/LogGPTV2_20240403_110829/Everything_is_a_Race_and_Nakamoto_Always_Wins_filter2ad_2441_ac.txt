E
(5)
occurs.
0
ij
We can interpret the definition of a Nakamoto block in terms of
a fictitious system, having the same block mining times as the actual
system, where there is a growing chain consisting of only honest
blocks and the adversary trees are racing against this honest chain.
(Figure 3). The event E
is the event that the adversary tree rooted
at the i-th honest block does not catch with the fictitious honest
chain any time after the mining of the j-th honest block. When the
fictitious honest chain reaches a Nakamoto block, it has won the
race against all adversary trees rooted at the past honest blocks.
Even though the events are about a fictitious system with a
purely honest chain and the longest chain in the actual system
may consist of a mixture of adversary and honest blocks, the actual
chain can only grow faster than the fictitious honest chain, and so
we have the following key lemma showing that a Nakamoto block
will stabilize and remain in the actual chain forever.
Lemma 3.1. (Nakamoto blocks stabilize, ∆ = 0.) If the j-th
honest block is a Nakamoto block, then it will be in the longest chain
C(t) for all t > τ h
j ) will be a prefix of C(t) for
all t > τ h
j .
j . Equivalently, C(τ h
,
Proof. Note that although honest nodes may have different
views of the longest chain because of the adversary capability A4,
T (p)(t) = T (q)(t) and hence L(p)(t) = L(q)(t) always hold for any
q (cid:44) p at any time t when ∆ = 0. Let L(t) be the length of the longest
chain in the view of honest nodes. L(0) = 0. Note that since the
length of the chain C(p)(t) increments by 1 immediately at every
honest block mining event (this is a consequence of ∆ = 0), it
follows that for all i and for all t > τ h
i
0
j
(6)
L(t) − L(τ h
We now proceed to the proof of the lemma.
We will argue by contradiction. Suppose F
be the smallest t such that C(τ h
i ) ≥ Ah(t) − Ah(τ h
i ).
occurs and let t∗ >
j ) is not a prefix of C(p)(t) for
τ h
j
some 1 ≤ p ≤ n. Let bi be the last honest block on C(p)(t∗) (which
must exist, because the genesis block is by definition honest.) If
, then C(p)(t−
1 ) is the prefix
bi is generated at some time t1 > τ h
j
of C(p)(t∗) before block bi, and does not contain C(τ h
j ) as a prefix,
contradicting the minimality of t∗. So bi must be generated before
, and hence bi is the i-th honest block for some i  0 case.
3.2 General network delay ∆
Definition 3.2 of a Nakamoto block is tailored for the zero network
delay case. When the network delay ∆ > 0, there is forking in the
blockchain even without adversary blocks, and two complexities
arise:
(1) Even when a honest block b has won the race against all the
previous adversary trees, there can still be multiple honest
blocks on the same level as b in the mother tree T(t) due to
forking. Hence there is no guarantee that b will remain in
the longest chain.
(2) Even when the honest block b is the only block in its level,
the condition in Equation (4) is not sufficient to guarantee
the stabilization of b: the number of honest blocks mined is
an over-estimation of the amount of growth in the honest
chain due to forking.
The first complexity is a consequence of the fact that when the
network delay is non-zero, the adversary has the additional power
to delay delivery of honest blocks to create split view among the
honest nodes. In the context of the formal security analysis of
Nakamoto’s PoW protocol, the limit of this power is quantified by
the notion of uniquely successful rounds in [GKL15] in the lock-step
synchronous round-by-round model, and extended to the notion of
convergence opportunities in [PSS17] in the ∆-synchronous model.
The honest blocks encountering the convergence opportunities are
called loners in [Ren19].
Definition 3.3. The j-th honest block mined at time τ h
is called
j
a loner if there are no other honest blocks mined in the time interval
[τ h
j − ∆, τ h
It is shown in [PSS17, Ren19] that a loner must be the only
honest block in its depth in T(t) at any time t after the block is
+ ∆].
j
mined. Thus, to deal with the first complexity, we simply strengthen
the definition of a Nakamoto block to restrict it to also be a loner
block. Since loner blocks occur frequently, this is not an onerous
restriction.
To deal with the second complexity, we define the race of the
adversary trees not against a fictitious honest chain without forking
as in definition 3.2, but against a fictitious honest tree with worst-
case forking. This tree is defined as follows.
honest fictitious tree Th(t) as a tree which evolves as follows:
Definition 3.4. Given honest block mining times τ h
(1) Th(0) is the genesis block.
(2) The first mined honest block and all honest blocks within ∆
are all appended to the genesis block at their respective mining
times to form the first level.
i ’s, define a
(3) The next honest block mined and all honest blocks mined within
time ∆ of that are added to form the second level (which first
level blocks are parents to which new blocks is immaterial) .
(4) The process repeats.
Let Dh(t) be the depth of Th(t).
We are now ready to put everything together to define Nakamoto
blocks in general.
Definition 3.5. (Nakamoto block for general ∆) Let us de-
fine:
Eij = event that Di(t)  τ h
j
i
j−1
i =0
Fj =
occurs.
Eij
(10)
Note that when ∆ = 0, Dh(t) = Ah(t), the number of honest
blocks mined in [0, t]. Hence Eij = E
. Also, every block is a loner.
Here Definition 3.5 degenerates to Definition 3.2. Moreover, it is
not difficult to see that
0
ij
Dh(t − ∆) − Dh(τ h
i + ∆) ≤ Ah(t) − Ah(τ h
i )
so Definition 3.5 is indeed a strengthening of Definition 3.2. This
strengthening allows us to show that Nakamoto blocks stabilize for
all ∆ > 0.
Theorem 3.2. (Nakamoto blocks stabilize, general ∆) If the
j-th honest block is a Nakamoto block, then it will be in the chain
C(t) for all t > τ h
+ ∆. This implies that the longest chain until the
j
j-th honest block has stabilized.
The proof of Theorem 3.2 is given in §B.
Nakamoto blocks are defined for general longest chain protocols.
When applied to the Praos/SnowWhite protocols, the definition of
Nakamoto blocks is a weakening of the definition of pivots in [PS17].
Although [PS17] did not define pivots explicitly in terms of races,
one can re-interpret the definition as a race between the adversary
and a fictitious honest chain consisting of only loner honest blocks.
This fictitious chain can never occur in the actual system even when
no adversary blocks are made public, because there are other honest
blocks which are not loners but can make it into the main chain.
On the other hand, Nakamoto blocks are defined directly as a race
between the adversary and the fictitious honest chain which would
arise if there were no public adversary blocks. This is why the
definition of Nakamoto blocks leads to a tight characterization of
the security threshold in the Praos/SnowWhite protocols, matching
the private attack threshold, while the definition of pivots in [PS17]
cannot. (Theorem 4.2). This tightening is similar to the tightening
done in the recent work [KQR20] for the lock-step round-by-round
model.
4 SECURITY ANALYSIS
The goal of this section is to show that the private attack is the worst
attack for the three models defined in Section 2. More precisely, we
want to show that security threshold, i.e. the maximum adversary
power tolerable for any adversary strategy, is the same as that of
Nakamoto’s private attack. This is true for any total mining rate λ
and for any ∆. (In fact, the threshold depends only on the product
λ∆.) We will use the notion of Nakamoto blocks to establish these
results.
4.1 Statement of results
Our goal is to generate a transaction ledger that satisfies persistence
and liveness as defined in [GKL15]. Together, persistence and live-
ness guarantee robust transaction ledger; honest transactions will
be adopted to the ledger and be immutable.
Definition 4.1 (from [GKL15]). A protocol Π maintains a robust
public transaction ledger if it organizes the ledger as a blockchain
of transactions and it satisfies the following two properties:
• (Persistence) Parameterized by τ ∈ R, if at a certain time a
transaction tx appears in a block which is mined more than τ
time away from the mining time of the tip of the main chain
of an honest node (such transaction will be called confirmed),
then tx will be confirmed by all honest nodes in the same
position in the ledger.
• (Liveness) Parameterized by u ∈ R, if a transaction tx is
received by all honest nodes for more than time u, then all
honest nodes will contain tx in the same place in the ledger
forever.
As discussed in the introduction, the condition for the private
attack on Nakamoto’s Proof-of-Work protocol to be successful is
λa > λgrowth(λh, ∆) =
λh
1 + λh ∆
(11)
in the fully decentralized regime. In terms of β, the fraction of
adversary power, and λ, the total block mining rate:
1 − β
β >
1 + (1 − β)λ∆
.
(12)
The parameter λ∆ is the number of blocks generated per network
delay, and determines the latency and throughput of the blockchain.
If this condition is satisfied, then clearly the ledger does not have
persistency or liveness. Hence, the above condition can be inter-
preted as a tradeoff between latency/throughput and the security
(under private attack).
In the Praos/SnowWhite protocol, the honest growth rate is the
same as in the PoW system. Consider now the adversary blocks.
They are mined according to a Poisson process at rate λa. When
a block is mined, the adversary gets to append that block to all
the blocks in the current adversary chain (cf. Figure 4(b)). This
leads to an exponential increase in the number of adversary blocks.
However, the depth of that chain increases by exactly 1. Hence the
growth of the adversary chain is exactly the same as the advversary
chain under PoW. Hence, we get exactly the same private attack
threshold (12) in both the PoW and the Praos/SnowWhite PoS
protocols.
The theorem below shows that the the private attack threshold
yields the true security threshold for both classes of protocols.
Theorem 4.2. If
1 − β
1 + (1 − β)λ∆
,
β  0.
For the Chia Proof-of-Space model, the private attack is analyzed
in [CP19, FZ18]. The growth rate of the private adversary chain is
eλa. (The magnification by a factor of e is due to the Nothing-at-
Stake nature of the protocol; more on that in Section 4.4.). Hence
the condition for success for the private attack is:
eλa >
λh
1 + λh ∆
,
(14)
in the fully decentralized setting. This implies the following condi-
tion on β, the adversary fraction of space resources:
1 − β
1 + (1 − β)λ∆
.
eβ >
(15)
For the Chia model, this threshold yields the true threshold as
well.
Theorem 4.3. If
1 − β
1 + (1 − β)λ∆
,
eβ  0.
The security thresholds for the different models are plotted in
Figure 1, comparing to existing lower bounds in the literature.
6In contrast to the theorems in [GKL15, PSS17], this theorem guarantees high proba-
bility persistence and liveness for each transaction rather than for the entire ledger.
This is because our model has an infinite time-horizon while their model has a finite
horizon, and guarantees for an infinite ledger is impossible. However, one can easily
translate our results to high probability results for an entire finite ledger over a time
horizon of duration polynomial in the security parameter σ using the union bound.
4.2 Approach
To prove Theorems 4.2 and 4.3, we use the technique of Nakamoto
blocks developed in Section 3. Theorem 3.2 states that Nakamoto
blocks remain in the longest chain forever. The question is whether
they exist and appear frequently regardless of the adversary strat-
egy. If they do, then the protocol has liveness and persistency:
honest transactions can enter the ledger frequently through the
Nakamoto blocks, and once they enter, they remain at a fixed loca-
tion in the ledger. More formally, we have the following result.
Lemma 4.4. Define Bs,s +t as the event that there is no Nakamoto
blocks in the time interval [s, s + t]. If
P(Bs,s +t)  0 for all j
and for all adversary strategy, in the parameter regime when
the private attack growth rate is less than the honest chain
growth rate.