# How Vulnerable Are Unprotected Machines on the Internet?

## Authors
- Yuanyuan Grace Zeng<sup>1</sup>
- David Coffey<sup>2</sup>
- John Viega<sup>1</sup>

<sup>1</sup>SilverSky, {yzeng,jviega}@silversky.com  
<sup>2</sup>McAfee, Inc., david.coffey@mcafee.com

### Abstract
This study investigates the vulnerability of unprotected machines on the Internet. Using Amazonâ€™s Elastic Compute Cloud (EC2) and a VMware ESXi server, we deployed and monitored 18 Windows machines (Windows Server 2008, XP, and 7) without antivirus or firewall protection at two locations: in the cloud and on-premise. Some machines were configured with all ports open and services emulated, while others had default configurations. All machines received port scans within minutes and vulnerability probes within hours. Machines with wide-open configurations were exploited within a day, whereas those with out-of-the-box configurations experienced very few exploitations. Our findings include:
- Attackers are constantly searching for victims.
- The more open ports and listening services a machine has, the more risks it faces.
- Brute-force login attempts are the most common type of attack.
- Exploitations targeting software or operating system vulnerabilities are not widely observed.

### 1. Introduction
The Internet is a fertile ground for opportunistic attackers, with thousands of threats circulating. Most computers today are protected by firewalls, IDS/IPS, and antivirus (AV) tools. However, what happens in the worst-case scenario when they lack any protection? Previous experiments on "Time-to-Live-on-the-Network" [5] and "Survival Time" [11] of Windows machines were conducted years ago using older Windows versions. The Internet Storm Center of SANS claimed a "Four-Minute Windows Survival Time" in 2008, which was criticized for using outdated Windows XP RTM or SP1.

Since then, the Internet threat environment has become more dangerous, but Windows operating systems have also become more secure. In the past five years, there has been no comprehensive study on attacks against unprotected machines running current operating systems. To address this gap, we investigated how an unprotected machine with a current operating system fares in today's threat environment. We wanted to determine how soon such a machine would be probed and attacked, and what the most prevalent attacks are.

We tested unprotected machines in two environments: the cloud (Amazon EC2) and on-premise (connected directly to a DSL line). We focused on Windows operating systems, which account for over 80% of the market share [3]. To our knowledge, this is the first experiment conducted on Windows 2008 and Windows 7 machines. Unlike previous studies that only measured the time to infection, our experiment tracked different stages of the malware infection process, including port scans, vulnerability probes, and exploitations.

### 2. Related Work
In addition to the empirical time-to-live studies on Windows machines, other research areas are relevant to our work. One area is vulnerability assessment. Ten et al. [13] proposed a framework to quantify and evaluate SCADA system vulnerabilities at multiple levels. Hartung et al. [6] demonstrated the ease of compromising sensor nodes and suggested countermeasures. McQueen et al. [7] created a time-to-compromise model for visible system components, considering known vulnerabilities and attacker skill levels. Another relevant topic is the analysis of Internet-wide malware propagation. Moore et al. [8] studied the Code-Red worm, detailing its spread and infected machine properties. Shannon et al. [12] monitored the Witty worm outbreak through a network telescope, reporting scanning rates, infection duration, and victim numbers. Moore et al. [9] studied the use of public search engines to locate vulnerable servers, finding that this method was widely used to compromise web servers for hosting malware and phishing sites.

### 3. Experiment Design

#### 3.1 Scope of the Experiment
Machines can be infected through user-involved actions or vulnerability exploitation. Our experiment focused on the latter, with no user interaction. Each Windows machine met the following criteria:
- Connected to the Internet with a unique public IP address.
- All incoming traffic (TCP, UDP, ICMP) allowed by a network-based firewall.
- In-host Windows firewall disabled, no antivirus installed.
- Network traffic captured by Wireshark, Registry changes by Regshot, and system-wide activities by Windows event logs.

#### 3.2 Experiment Setup
Our experiment spanned February to April and August to October 2012, involving 18 machines at two locations: Amazon EC2 and a VMware ESXi server on-premise.

**In-Cloud Experiment:** We ran 15 machines in Amazon EC2 with two configurations: "wide-open" and "out-of-the-box." The wide-open configuration opened all ports and emulated all possible services to attract malicious attempts. The out-of-the-box configuration used default open ports and services. We tested Windows Server 2008 R1 SP2 and R2 SP1, disabling all firewalls and antivirus programs. For the wide-open scenario, we installed HoneyBot [1], a low-interactive honeypot, and launched ten instances across different geographical zones. For the out-of-the-box scenario, we made a clean install of Windows Server 2008 and ran five instances.

**On-Premise Experiment:** We set up a VMware ESXi 5.0 server connected to a DSL line at our office in North Carolina. We tested non-server Windows OS versions: Windows 7 Professional SP1 and Windows XP Professional SP2. Default open ports included 135 (RPC), 139 (NetBIOS), 445 (SMB), and 3389 (RDP). We later opened additional ports on the Windows XP machines. Each virtual machine had a unique public IP, and we confirmed their reachability from the Internet.

### 4. Experiment Results

#### 4.1 In-Cloud Experiment
**Scan, Probe, and Exploitation Times of Occurrence:**
Malware infections follow a predictable pattern: port scan, vulnerability probe, and exploitation. In the wide-open scenario, the first port scan occurred after an average of 23.4 minutes, and the first vulnerability probe after 56.4 minutes. Probes targeted well-known ports such as 22 (SSH), 23 (Telnet), 25 (SMTP), 80 (HTTP), 445 (SMB), 1080 (SOCKS Proxy), 1433 (Microsoft SQL Server), and 3389 (RDP). Servers in the same zone on EC2 took longer to see the first scans and probes, possibly due to new, unexplored IP spaces. Exploitation attempts typically occurred within 24 hours, with an average time of 18.6 hours. Commonly exploited ports included 445 (SMB), 1434 (Microsoft SQL Monitor), 2967 (Symantec AV), and 12147 (Symantec Alert Management System 2). Most exploits were known threats, with some targeting old vulnerabilities, such as the Slammer worm (2003) and a stack overflow vulnerability (2006).

In the out-of-the-box scenario, the first port scan arrived after an average of 13 minutes, and the first vulnerability probe within 3 hours. Probes were mainly login attempts to the Samba share (445) or via RDP (3389). No exploitation attempts were observed, likely due to the limited number of open ports.

**Top Targeted Ports:**
In the wide-open scenario, the most targeted ports were 1080 (SOCKS), 1433 (Microsoft SQL Server), and 25 (SMTP). In the out-of-the-box scenario, over 60% of traffic went to ports 445 and 3389, with other common ports like 1433, 80, 4899, and 1080 receiving numerous scans despite being closed.

**Login Attempts:**
We observed a large number of login attempts, almost all of which failed according to Windows security event logs. Each test machine received over 1,000 login requests daily through ports 445/139 (SMB/NetBIOS) or 3389 (RDP). Multiple IPs tested the same dictionary of usernames, with "administrator" being the most brute-forced. Table 2 lists the commonly brute-forced usernames.

| Usernames |
|-----------|
| 1         |
| 123       |
| a         |
| actuser   |
| adm       |
| admin     |
| admin1    |
| admin2    |
| administrator |
| aspnet    |
| backup    |
| console   |
| david     |
| guest     |
| john      |
| owner     |
| root      |

### Figures
- **Figure 1.** Scan and Probe Times of Occurrence on Wide-Open Servers (in minutes)
- **Figure 2.** Exploitation Attempt Times of Occurrence on Wide-Open Servers (in hours)
- **Figure 3.** Scan and Probe Times of Occurrence on Out-of-the-Box Servers (in minutes)

### Tables
- **Table 1.** Top 10 Targeted Ports
- **Table 2.** Brute-Forced Usernames