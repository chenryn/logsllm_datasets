Real-time Bluetooth Device Detection
with Blue Hydra
Granolocks
Zero_Chaos
● Pwnie Express
● Focused on device detection 
● Enjoys long walks in the woods
● Travel to exotic locations
● Draws pretty weird pictures
● Existential AF
● Hacking the planet
● Gives great back rubs
Granolocks Narcissus
Zero_Chaos Narcissus
● Eagle Scout
● Open{Zaurus,Embedded,wrt} Maintainer
● Aircrack-ng Developer
− Injection/Drivers, airmon-zc
● Pentoo Linux Developer
● Gentoo Linux Developer
● Random Hacker of ARMs
● Husband & Father
● Random Association of Wireless Researchers (RAWR)
− Defcon/Shmoocon/etc Wireless CTF
● Far too easily entertained
● Not a lawyer
What is Bluetooth
● Cheap
● Cable replacement
● Frequency Hopping Spread Spectrum
● No monitor mode :-(
● Class
− Class 1 100mW (high power devices, Sena dongle)
− Class 2 10mW (phone / most laptops)
− Class 3 1mW
Bluetooth Waterfall
Bluetooth Classic
● Discoverable
● Non-discoverable
● Pairing
Bluetooth Low Energy
● General Discoverability
● Limited Discoverability
● Non-discoverable
− Yet somehow still advertises?
Bluetooth Proliferation
● Random IoT
● Wearables (sales in 2015)
● Fitbit     21 million
● Xiaomi 12 million
● Apple   11.6 million
● Garmin 3.3 million
● Samsung 3.1 million
● Others 27 million
● Total 78.1 million
● *Source: IDC Worldwide Quarterly Wearable Device 
Tracker, February 23, 2016
Prior Art - Cracking
● Redfang
● Btcrack
● Crackle
− Le pin cracker
● Bluesnarfer
− Phonebook dumping from old phones
Prior Art - Discovery
● Bluelog
− Discoverable classic mode only
− No le support
− Mostly a logger
● Btscanner
− Discoverable classic mode only
− No le support
− Unmaintained
− Neat gui
Useful Tools
● Bluez - Useful documentation and examples
● hciconfig
● hcitool
− Only discoverable classic devices
− Lescan works but hard to parse
− outdated
● Test-scripts bluez-test discovery
− Easy to modify
− Shows classic and le
− Hides some le devices
− Teaches us how to talk to the bluetooth card
− Only sees “discoverable” devices
Ubertooth
● Ubertooth-scan
● Ubertooth-rx
− Ubertooth-rx -z
Blue Hydra - Goals 
● Like airodump-ng and btscanner
● Support btle
● Find as many devices as possible
● Database backend
● Minimal direct hardware interfacing - for now :) 
● Not interested in cracking/brute forcing
Blue Hydra design logic
● Languages used (by volume): 
− Ruby, Bash, Python
● Build on top of existing tools
− Rapid development
− Modify as needed
− Minimize need to interact directly with hardware
● Run threads for each discrete task
● Unify into a processing thread
btmon 
● Bluez btmon
● Monitor raw hci info passing between system 
and adapter 
● Reasonably Parseable 
● Receive info from many different tool 
commands in one place
● Monitor one or many bluetooth dongles
btmon Threads
● Execute and filter
● Batch messages by devices
● Parse message batches
Bluetooth Discovery Thread
● Interaction Point with bluetooth device
● Fed commands from a queue
● Run classic discovery (bin/test-discovery)
● Listen for le advertisements (bin/test-discovery)
● Info from classic / le devices (hctiool)
● Test if devices are present (l2ping)
Ubertooth Thread
● Runs and parses ubertooth-rx -z -t
● Bluetooth Classic non-discoverable (transmitting)
● Currently sniffing for Bluetooth Basic Rate connections
● Optional, not a replacement for required BT device
Data processing thread 
● Updates records
● Device Correlation 
−MAC
−UAP/LAP (Ubertooth)
physical: DE:AD:BE:EF:CA:FE
ubertooth: ??:??:BE:EF:CA:FE
significant: 00:00:BE:EF:CA:FE
−LE Proximity ID / Major & Minor Number 
(ibeacon)
● Feedback Loop
CUI Thread
● Command-line User Interface
● Default Behavior 
● Live View of devices
● Sortable by column
● Extensible columns to support smaller devices
DEMO
● Doing it live!
DEMO backup
DEMO backup
DEMO backup
Where to get it?
● https://github.com/pwnieexpress/blue_hydra
● Download, install deps, run from git checkout
● *or*
● Pentoo 2015.0 RC5 Live iso
Conclusions
● Bluetooth hasn’t been looked at much in years
● Simple idea, harder than expected
● Surprising to see just how many devices are out 
there
THANKS
● DEF CON for letting us present
● Pwnie Express for paying us to build blue hydra 
then turning around and letting us open source 
it
● Coconut Picard for helping us release this code 
as BSD
● Ubertooth team for being awesome
● Bluez team for our first solid beating
Q & A
Q&A will be in room 
https://github.com/pwnieexpress/blue_hydra
                     @Zero_ChaosX
                     @granolocks