6
Implementation and Performance
ANDaNA is implemented as an application-level ser-
vice consisting of client “stack” (used by consumers)
and server program that runs on ANDaNA ARs. Both
are written in C and interface to NDN through Unix
domain sockets.8 Cryptographic algorithms are imple-
mented using OpenSSL [42]. Hybrid encryption is ob-
tained using RSA-OAEP [10] and AES+HMAC [15, 7].
The latter is also used for symmetric encryption. We
use SHA-256 for HMAC and 1024- and 128-bit keys
for RSA and AES, respectively. Loose time synchro-
nization among ANDaNA client and servers are achieved
using pool.ntp.org, a public pool of NTP servers.
ANDaNA client encrypts interests from user appli-
cations.
In order to hide all possible sources of de-
anonymizing information, encryption is performed over
the full interest packet, including: name, scope, exclu-
sion ﬁlters and duplicate suppression string ﬁelds. Fol-
lowing NDN “rules”, ANDaNA AR announces the abil-
ity to serve the root (“/”) namespace and receives all
trafﬁc sent from (or to) the local NDN routing process.
This allows trafﬁc to be routed through ANDaNA by
default, requiring no changes to existing applications.
For more granularity, consumers can vary the default
namespace, e.g., “/andana/”. However, this would
require privacy-seeking applications to explicitly direct
their trafﬁc to that namespace, similar to today’s conﬁg-
urable proxy settings.
ANDaNA servers run as applications on NDN routers.
Each server is responsible for its relay and session cre-
ation namespaces. The former is a globally routable
namespace used for receiving both session-based and
asymmetrically encrypted Interests.
Clients using
session-based encryption in ANDaNA need to ﬁrst es-
tablish symmetric keys with servers. To start a new
session with a server, a clients sends an interest in the
createsession namespace, registered by the server
code as a sub-preﬁx of the relay namespace.
8At the time of this writing, there is no direct function interface to
NDN
We deployed our prototype and run a series of tests
on the Open Network Laboratory (ONL) [34]. ONL is a
testbed developed by Washington University to enable
experimental evaluation of advanced networking con-
cepts in a realistic environment. To guarantee highly re-
producible results, ONL provides reservation-based ex-
clusive access to most of its host and network resources.
All our experiments used single-core Linux machines
with 512 MB of RAM and gigabit switches (one ma-
chine per switch).
We compare plain NDN and ANDaNA on a simple
line topology with four switches and four Linux ma-
chines, each corresponding to an NDN node. Static
routing is established between nodes. The ﬁrst NDN
node in the line topology acts as a consumer and runs
ccngetfile — a small tool from CCNx open-source
library that retrieves data published as NDN content and
stores it in a local ﬁle. We performed tests with 1, 10,
and 100MB ﬁles; each ﬁle was retrieved from the NDN
repository of the machine at the other end of the line
topology. Results of this comparison for 10MB ﬁles
are summarized in Fig. 1. Due to space constraints, we
illustrate all ﬁle retrieval results in Appendix B. Re-
sults show that computational overhead introduced by
ANDaNA roughly doubles download times over plain
NDN. This is assuming an almost-perfect world where
ARs topologically align with the best path and link
bandwidths are abundant.
In order to compare ANDaNA’s computational over-
head with a similar anonymizing tool, we deployed Tor
over ONL and measured its overhead over TCP/IP. We
measured performance of TCP/IP baseline deploying
ﬁve switches, connected in a line, and two Linux ma-
chines (one at each end): the ﬁrst acting as client (run-
ning curl), the second – as server (running lighttpd
HTTP server). Performance of Tor was measured on a
topology that closely mimics that of TCP/IP baseline:
ﬁve switches, connecting three Tor relays, a client and a
server. To ensure “line” topology, Tor client is conﬁg-
ured to use explicit entry and exit nodes; DNS lookups
are avoided by using IP addresses in all tests.
Before discussing the results, we mention some com-
parison details. NDN is a research project and its code
is optimized for functionality rather than performance.
It provides content authentication through digital signa-
tures – a computationally expensive feature not present
in either TCP/IP or Tor. NDN stack currently runs as a
user-space application, in contrast to TCP/IP that runs
in kernel-space. Finally, in all our experiments, NDN
had to run on top of TCP/IP (rather than at layer 2) due
to limitations of the underlying ONL testbed. Conse-
quently, we believe a fair comparison between ANDaNA
and Tor can only be achieved by focusing the analysis
on relative overhead imposed by each, over the network
Figure 1. Left: RTT for 10MB of content over NDN
(limited anonymity). Right: RTT for 10MB of content
over ANDaNA (full anonymity).
Figure 2. Comparison of 1, 10, and 100MB ﬁle down-
load times over Tor, ANDaNA-S and ANDaNA-A with
respect to respective baselines. Left: transfer time and
circuit setup time. Right: transfer time only.
it is deployed, i.e., NDN and TCP/IP respectively.
Figure 2 shows the performance of ANDaNA and
Tor with respect to their baselines. The graph on the
left shows the measurements including the time re-
quired to setup a Tor circuit and all ephemeral cir-
cuits for ANDaNA. Session-based ANDaNA is denoted
by ANDaNA-S, while ANDaNA with asymmetric encryp-
tion is referred to as ANDaNA-A. For small- to medium-
size ﬁles (1-10MB), overhead of ANDaNA-A is between
1.5× and 1.75×. As expected, ANDaNA-S exhibits
lower overhead (1.45× to 1.7×) due to more efﬁcient
symmetric encryption.
In comparison, Tor’s download time for the same
amount of data is between 2.3 and 7 times higher than
that of TCP/IP. This imposes signiﬁcant overhead for
content size that ﬁts many typical web pages. Whereas,
ANDaNA is efﬁcient in anonymizing such trafﬁc pat-
terns. Large ﬁle transfers are more efﬁcient with Tor,
which increases the total download time by about 1.4
times, compared to 2.4 and 2.1 of ANDaNA-A and
ANDaNA-S.
The right-side graph in Figure 2 shows the rela-
tive speed of three approaches without including circuit
setup time. Our measurements show that overhead of
ephemeral circuit creation in ANDaNA-S is negligible.
Since a new ephemeral circuit must be selected for ev-
ery interest with ANDaNA-A, we simply report the same
values from the previous graph. Results conﬁrm that
overhead of circuit creation in Tor is signiﬁcant when
retrieving small-size content. Removing this initializa-
tion phase from the measurements signiﬁcantly reduces
Tor’s overhead. However, the overhead of ANDaNA with
respect to its baseline is still smaller than that of Tor for
content up to 10MB.
In absolute terms (comparing raw download times),
Tor + TCP/IP performs better than ANDaNA + NDN in
our testbed experiments. However, we believe that, in
a realistic geographically-distributed deployment setting
with limited-bandwidth links, ANDaNA + NDN would
provide a signiﬁcant performance advantage over Tor +
TCP/IP due to its shorter (ephemeral) circuits. In other
words, we anticipate that shorter circuits and content
caching in ANDaNA + NDN would result in apprecia-
bly lower overall download times than Tor + TCP/IP in
a global internet setting.
 0 20 40 60 80 100 120 0 2 4 6 8 10 12 14 16 18RTT (ms)Start Time (s) 0 20 40 60 80 100 120 0 2 4 6 8 10 12 14 16 18RTT (ms)Start Time (s) 1 2 3 4 5 6 7 8 1 10 100Download Time RatioFile Size (MB)Tor/HTTPANDaNA-S/NDNANDaNA-A/NDN 1 2 3 4 5 6 7 8 1 10 100Download Time RatioFile Size (MB)Tor/HTTPANDaNA-S/NDNANDaNA-A/NDN7 Conclusions and Future Work
Content-centric networking is a major transition from
today’s world that focuses on communication end-
points. NDN project represents one of the most visible
current research efforts aiming to bring content-centric
networking into the foreground by using it as a possi-
ble future Internet architecture. Despite some privacy-
friendly features and side-effects, NDN poses some in-
teresting privacy challenges. This work presents an ini-
tial attempt to provide anonymity in NDN. The main
contribution of this work is threefold: (1) exploration
of privacy issues in NDN, (2) design of an anonymiza-
tion tool – ANDaNA, and (3) its security analysis and
performance assessment.
At the same time, particularly because the entire
NDN project (and, of course, ANDaNA) represent work-
in-progress, one of the main goals of this paper is to so-
licit comments from the security research community.
Also, since our work merely scratches the surface of pri-
vacy issues in content-centric networking and NDN, a
number of issues are left for future work, including:
• More performance experimentation with ANDaNA,
especially, in larger testbeds and under various traf-
ﬁc load / congestion scenarios. (This should lead to
better code proﬁling and lower overhead.)
• Comprehensive directory service for effective
large-scale distribution of up-to-date AR informa-
tion.
• In-depth study of both privacy and performance
trade-offs in the use of asymmetric vs. symmetric
ANDaNA variants.
• DoS mitigation measures, such as computational
puzzles for circuit establishment.
• Red-teaming experiments to assess realistic privacy
attainable with ANDaNA.
• Modiﬁcation of ANDaNA to support other emerg-
ing content-centric architectures and comparative
experiments among them.
Acknowledgments
We thank NDSS’12 anonymous reviewers for their
valuable feedback. We are also grateful to Van Jacob-
son, Jim Thornton, Kasper Rasmussen, Yanbin Lu, Lixia
Zhang and Mark Baugher for their helpful input and
comments on earlier drafts of this paper. This work was
conducted in the context of the NSF project: “CNS-
1040802: FIA: Collaborative Research: Named Data
Networking (NDN)”.
References
[1] M. Abdalla, M. Bellare, and G. Neven. Robust en-
cryption. In Theory of Cryptography Conference,
TCC 2010, 2010.
[2] A. Abdul-Rahman. The PGP Trust Model, 1997.
[3] Anonymizer anonymous surﬁng. http://www.
anonymizer.com/.
[4] S. Arianfar, T. Koponen, S. Shenker, and B. Ragha-
van. On preserving privacy in content-oriented
In ACM SIGCOMM Workshop on
networks.
Information-Centric Networking, 2011.
[5] K. Bauer, D. McCoy, D. Grunwald, T. Kohno, and
D. Sicker. Low-resource routing attacks against
In The 2007 Workshop on
anonymous systems.
Privacy in the Electronic Society, 2007.
[6] M. Bellare, B. A., D. A., and D. Pointcheval. Key-
privacy in public-key encryption. In ASIACRYPT,
2001.
[7] M. Bellare, R. Canetti, and H. Krawczyk. Key-
ing hash functions for message authentication. In
CRYPTO, 1996.
[8] M. Bellare and S. Miner. A forward-secure digital
signature scheme. In CRYPTO, 1999.
[9] M. Bellare and C. Namprempre. Authenticated
encryption: Relations among notions and analysis
of the generic composition paradigm. Journal of
Cryptology, 21(4), 2008.
[10] M. Bellare and P. Rogaway. Optimal asymmetric
encryption. In EUROCRYPT, 1994.
[11] T. Callahan, M. Allman, and V. Paxson. A longi-
In The 11th interna-
tudinal view of http trafﬁc.
tional conference on passive and active measure-
ment, 2010.
[12] Content centric networking (CCNx) project.
http://www.ccnx.org.
[13] D. Chaum. Untraceable electronic mail, return ad-
dresses, and digital pseudonyms. Communications
of the ACM, 24(2), 1981.
[14] D. Chaum. Security without identiﬁcation: Trans-
action systems to make big brother obsolete. Com-
munications of the ACM, 28(10), 1985.
[15] J. Daemen and V. Rijmen. The design of Rijndael:
AES - the advanced encryption standard. Springer,
2002.
[16] G. Danezis, R. Dingledine, and N. Mathewson.
Mixminion: Design of a type III anonymous re-
mailer protocol. In The 2003 IEEE Symposium on
Security and Privacy, 2003.
[17] W. Difﬁe and M. Hellman. New directions in cryp-
tography. Information Theory, IEEE Transactions
on, 22(6), 1976.
[18] R. Dingledine, N. Mathewsonn, and P. Syverson.
Tor: The second-generation onion router. In The
13th USENIX Security Symposium, 2004.
[19] J. Feigenbaum, A. Johnson, and P. Syverson. A
model of onion routing with provable anonymity.
In Financial Cryptography, 2007.
[20] National science foundation (NSF) future of inter-
net architecture (FIA) program. http://www.
nets-fia.net/.
[21] M. Freedman and R. Morris. Tarzan: A peer-to-
peer anonymizing network layer. In The 9th ACM
Conference on Computer and Communications Se-
curity, 2002.
[22] E. Gabber, P. Gibbons, D. Kristol, Y. Matias, and
A. Mayer. Consistent, yet anonymous, web access
with lpwa. Communications of the ACM, 42(2),
1999.
[23] M. Gritter and D. Cheriton. An architecture for
content routing support in the internet. In USENIX
Symposium on Internet Technologies and Systems.
USENIX Association, 2001.
[24] C. G¨ulc¨u and G. Tsudik. Mixing e-mail with Ba-
bel. In Network and Distributed Security Sympo-
sium, 1996.
[25] A. Houmansadr, G. Ngyuen, M. Caesar, and
N. Borisov. Cirripede: Circumvention infrastruc-
ture using router redirection with plausible denia-
bility. In The 18th ACM Conference on Computer
and Communications Security, 2011.
[26] I2P anonymous networking project. http://
www.i2p2.de/.
[27] V. Jacobson, D. Smetters, J. Thornton, M. Plass,
N. Briggs, and R. Braynard. Networking named
The 5th international conference on
content.
Emerging networking experiments and technolo-
gies, 2009.