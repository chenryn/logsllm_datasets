对于入侵检测来说，黑暗网络是使用已分配的未使用的 IP 地址和一个检测进入黑暗网络
流量的设备，如果一个正在探测网络的攻击者或恶意软件正在试图扩散，那么在黑暗网络中的
主机将会探测和捕捉到这个活动。这样的检测很准，很少有误报，因为合法流量不会出现在黑
暗网络中。（有点像是蜜罐、蜜网）
对于黑客攻击来说，暗网是不会发现和记录的，隐藏的网络。
H.3 白名单/黑名单
白名单/黑名单很好理解，不解释了，配防火墙都知道。
白名单列表中的电子邮件地址和/或互联网地址，是己知“好”的人。相对应，黑名单列
表是己知“坏”的人。灰名单是一种方法，意思是“我不知道你是谁，所以我会通过一些额外
的安全措施，使您的电子邮件发出之前，我接受它。”
H.4 第三方安全服务
用第三方要考虑合规性。比如：与第三方公司签订合同，以帮助提供动态应用程序安全测
试(DAST)服务，一个 DAST 技术用于检测应用程序有安全漏洞时的运行状态。大多数 DAST 解决
方案是基于 Web 的，测试公开的 HTTP 和 HTML Web 启用应用程序。
1.渗透测试 Penetration Testing
渗透测试(通常简称为 pentest)，模仿一个实际攻击来尝试确定攻击者会使用哪些技术绕
过应用程序，系统，网络或组织的安全性。它可能包括漏洞扫描，端口扫描，数据包嗅探，DoS
攻击和社会工程技术等。渗透测试的目标有：
①确定系统对于一个攻击的容忍度。（测底线）
②确定员工检测和实时响应攻击的能力。（验能力）
③识别可以降低风险的控制措施。（提建议）
渗透测试和安全评估一样，也有几种不同的类型：
白盒（全知识）、黑盒（零知识）、灰盒（部分知识）。
2.渗透测试的风险
有些方法可能会导致系统或网络中断。
3.道德黑客行为 Ethical Hacking
道德黑客经常被用作渗透测试的另一个名称。道德黑客指的是了解网络安全和并知道如何
破解安全性，却不利用该知识为自己谋利的人。就是红客。
H.5 沙箱 Sandboxing
沙箱/沙盒：是一种虚拟化软件，可以让程序运行在自己独立的虚拟环境。它为应用提供
了一个安全边界，以防止应用程序与其他应用程序交互，通常情况下，程序运行在沙箱中，对
文件和系统限制访问，相关的改变都是临时的。这是一种替代基于签名/特征的防护软件（入
侵检测系统）的解决方案，被看作是发现零日，尤其是隐身攻击恶意软件的一种方式，可以检
测未知的应用或未知的病毒，也可以用来观察恶意软件的行为。
—206—
虚拟机或沙箱有时也称为模拟缓冲区(emulation buffer)。
H.6 蜜罐/蜜网 Honeypots/Honeynets
前面讲入侵检测有一个黑暗网络的技术，其实有点类似了。蜜罐就是用有漏洞的系统或网
络来引诱和发现恶意攻击，可以用来延迟入侵者的侵入时间，以便 IDS 尽可能多的检测和收集
有关入侵者的信息。蜜罐系统是一个诱饵服务器或系统，通常部署在一个防火墙的 DMZ 区，不
能取代传统的安全系统，他们只是标准的入侵检测系统(IDS)的变种，但更侧重于信息收集和
欺骗。许多安全专家认为蜜罐能够有效防范零日攻击。这会涉及一些法律问题，当蜜罐的所有
者通过“钓鱼执法”来诱捕未授权的入侵者，可能是非法的。
两个或多个蜜罐在网络上形成一个蜜网。通常，蜜网是用于监测一个大的/或更多不同的
网络，一个蜜罐可能并不够用，也不典型全面。蜜网和蜜罐通常是大规模网络中入侵检侧系统
的组成部分。蜜场是一个集中的蜜罐分析工具。包括一些常见的蜜罐：
与蜜罐相关的概念还有一个“伪漏洞”Pseudo Flaws。伪漏洞是被故意植入在系统中试图
引诱攻击者的虚假漏洞或明显漏洞。
常见的蜜罐工具有：
①Glastopf，开源蜜罐，Python+PHP+MySQL。
②Specter，商业蜜罐。
③Ghost USB，免费的 USB 仿真蜜罐，针对 U 盘病毒。
④KFSensor，基于 Windows 和蜜罐的 IDS。
另一个概念是“填充单元/填空模块”Padded Cells。填充单元是一个模拟环境，类似蜜
罐一样，通过提供伪造数据来吸引入侵者的兴趣。当入侵者被 IDS 检测到的时候，入侵者被自
动地转移到一个填充单元。填充单元具有实际网络的结构和布局，但是在填充单元里，入侵者
既不能执行任何恶意的活动，也不能访问任何机密数据。
诱捕(Enticement)为他人的预谋(Ready and Willing)犯罪提供机会。
陷害(Entrapment)是引诱或劝说他人进行非预谋(No Previous Intent)犯罪。
H.7 反恶意软件
阻止恶意代码最重要的措施是使用带有最新文件的反恶意软件的软件 anti-malware。而
攻击者则定期发布新的恶意软件，并经常修改现有的恶意软件，以防反恶意软件的检测。反恶
意软件厂商寻找这些变化，并开发新的签名文件来检测新的恶意软件并对其进行修改。
1.恶意软件
要监视恶意软件，有必要介绍沙箱和钩子。这些钩子可以直接插入到一个程序去通知或调
用(回调函数)库的函数。拦截系统调用的主要问题是，沙箱看不到恶意软件执行任何指令之间
的调用。这是一个很大的盲点，恶意软件的作者可以把这个作为一个目标，在系统调用之间运
行代码。恶意软件采用了多种技术和方法来逃避检测。这些技术之一将恶意代码延迟执行，使
得一个沙箱超时。然而，要做到这一点，恶意软件并不是简单的睡眠。相反，恶意软件执行一
些无用的计算活动，恶意软件通过延迟技术的工作原理，因为它在沙箱中仅仅是执行功能，从
哪方面来看，都像是一个正常的程序。
—207—
另一个逃避的方法是通过环境进行的检查。恶意软件作者可以添加新的，与零日有关的环
境，检查相关的系统运行和操作的返回值进行规避，迫使供应商更新他们的沙盘来应对。
I.实施和支持补丁与漏洞管理
1.补丁管理 Patch Management
补丁有时被称为更新、快速修复或热修复。服务包是一个补丁的集合，携带着一个系统当
前最新的补丁。一个有效的补丁管理程序能够确保系统安装当前最新的补丁。下面是有效的补
丁管理程序的通用步骤：
①评估补丁 Evaluate：确定补丁是否适用于他们的系统。
②测试补丁 Test：确定该补丁不会带来其他副作用。
③批准补丁 Approve：确定补丁的安全性后，就会批准补丁的部署。
④部署补丁 Deploy：经过测试和批准，管理员部署补丁。
⑤确认补丁己部署 Verify：在部署补丁后，管理员定期测试和审计系统，以确保系统补
丁仍然有效。
补丁星期二和漏洞星期三 Patch Tuesday and Exploit Wednesday。
微软经常在每个月的第二个星期二发布补丁，这一天通常被称为补丁星期二。于是，很多
黑客立马利用该补丁所补救的漏洞来进行攻击，因为很多用户不会那么快就把新补丁打上，这
个时间段被称为漏洞星期三。
2.漏洞管理 Vulnerability Management
漏洞管理是指定期检测漏洞，及时修补高危漏洞，评估并采取相应措施以减少相关风险。
一个漏洞管理程序的两个常见要素是例行漏洞扫描和定期脆弱性评估。职责分离原则会要求组
织中一个人负责补丁，一个人负责漏洞，可以互相验证、监督。
3.漏洞扫描 Vulnerability Scans
利用漏洞扫描器来检测系统和网络中的漏洞，如补丁丢失或弱口令等，并在被攻击之前修
补漏洞。最著名的工具是 Nessus，不过它已经商业化了，要收费。
4.脆弱性评估 Vulnerability Assessments
从字面上看，就是漏洞水平评估。一个脆弱性评估不只是漏洞扫描结，还要分析过去所有
的漏洞扫描报告，以确定该单位是否正在修复漏洞。脆弱性评估往往是风险分析或风险评估的
一部分，以确定在一个时间点的漏洞。
短期脆弱性评估有时也被看作是风险评估。做渗透测试的前提也是先做脆弱性评估。
5.常见漏洞和披露 Common Vulnerabilities and Exposures
主要是官方的漏洞库了。如：通用漏洞披露(CVE) Common Vulnerability and Exposures，
它由 MITRE 维护。
J.参与和理解变更管理流程（例如：版本控制、基线化、安全性影响分析）
变更管理的主要目标是确保变更不会导致中断。变更管理流程要求适当的人员在实施变更
前需审查和批准变更，并做详细记录。其实，变更管理的内容放在这个位置不合适，应该在讲
完 D.2 章节的配置管理，也就是搞完“基线”后，接着搞“变更”。
—208—
1.安全影响分析
做变更，必须先做安全影响分析。变更管理控制提供了一个过程去控制、文档化、跟踪和
审计所有系统的变化。在变更管理过程中的常见任务如下：
①请求变更 Request。
②影响分析/影响评估 Impact Assessment
③审查变更 Review
④批准/不批准 Approve/reject/Approval/Disapproval
⑤构建和测试 Build and Test （考试中有排序题，记住要先测试变更，再执行变更）
⑥通知/通告 Notification
⑦实施变更 Schedule and implement。
⑧验证 Validation
⑨记录/版本更新和基线 Document。
2.版本控制 Versioning
如果不能通过某种类型的版本控制系统来控制变更，可能会引发由于变更导致的系统瘫
痪。变更管理必须文档化。
K.实施恢复策略
自然灾害有很多，像火灾、地震、洪水、暴雨、台风什么的；人为灾害也有很多，像火灾、
恐怖袭击、工业爆炸、停电什么的；此外，公共基础设施的灾害也有很多，像软/硬件故障、
停电、罢工、盗窃什么的。信息安全的范畴很大，凡是影响系统和数据安全稳定的因素都要考
虑，安全专家必须是全才。
保护服务器、电源什么的是很常见的技术了，不多说。
K.1 备份存储策略（例如异地存储、电子链接、磁带旋转）
这章考的比较细的。
1.磁盘阵列 Redundant Arrays of inexpensive Disks
在计算机中添加容错和系统恢复组件的常见方法是增加一个冗余磁盘阵列(RAID)。一些常
见的配置如下：常考是的 0、1、1+0、5。先要了解几个技术：镜像 Mirroring、校验 Parity、
条纹/条带化 Striping(字节级、块级的并发存储)。
①RAID-0，也被称为条带 striping。它使用两个或两个以上的磁盘，提高性能，但不容
错。写文件到多个磁盘上的条纹上，无奇偶校验信息的使用。这种技术允许快速阅读和写入磁
盘，因为所有的磁盘可以并行访问。然而，如果没有奇偶校验信息，不提供冗余，就不可能从
硬盘故障中恢复过来。它不能用在高可用性要求的系统上，但它代表了最快的磁盘阵列。
②RAID-l，也被称为镜像 mirroring。它使用两个磁盘，并含有相同的数据信息。如果一
个磁盘损坏，另一个磁盘仍含有数据。提供容错。这个级别的所有写入磁盘，并从一个磁盘复
制到另一个，创建了两个镜像的驱动器。这种技术也被称为数据镜像。它提供了冗余，当一个
硬盘驱动器失败时，另一个是可用的。RAID 1 是非常昂贵的，从驱动器的空间的角度来看，
有一半的空间用来做磁盘的镜像了。
—209—
③RAID-2，这是理论的 RAID 级别，实际上没有应用，反正很复杂。
④RAID 3 和 4（0 加校验；1 加校验），使用 3 个以上的硬盘，基于 RAID-0 的条带化，增
加额外的奇偶校检信息，来实现冗余容错，如果一个数据磁盘失败，还可以重建磁盘的信息。
其中，RAID 3 的磁盘空间利用更高，但 RAID 4 的速度更快。在这两种情况下，都有一个硬盘
是单独存储奇偶校检信息的，它可能成为速度的瓶颈，也是一个单点故障点。（1 或 0 加上一
个校验盘）
⑤RAID-5，也叫做奇偶校验 striping with parity。它使用 3 个或多个磁盘，相当于一
个磁盘，其中包含奇偶校验信息。如果单一磁盘损坏，则磁盘阵列将继续运行，但速度会变慢。
这一级别需要三个或更多个驱动器来实现，类似于 RAID4，但不使用专用的奇偶校验硬盘，数
据和奇偶校验信息是在存在所有驱动器上的。这种阵列是最流行的，可以容忍任何一个驱动器
的损失。
⑥RAID 6，使用两组奇偶校验信息，可容忍 2 个硬盘同时故障，并不常用。
⑦RAID-10，也被称为 RAID 1+0、RAID 0+1 或条带镜像 stripe of mirrors。是在条带(RAID-0)
配置上再配置两个或者两个以上的镜像(RAID-l)。它使用至少 4 个磁盘，但可以支持更多的，
磁盘可添加数应为偶数。即使多个磁盘损坏，只要在每个镜像中至少有一个驱动器继续运行，
它就能继续运行。在一般情况下，RAID 1+0 全面优于 RAID 0+1，无论是在速度和冗余。
⑧RAID 15，(镜像奇偶校验集合，即 RAID 1 然后 RAID 5)/(奇偶校验镜像磁盘组，即 RAID
5 然后 RAID1)。这是极端的容错，磁盘空间效率低。
要理解：容错与备份是不同的概念。奇偶检验使用的技术是汉明编码（Hamming Coee）。
2.独立磁带冗余阵列 RAIT Redundant Array of independent Tapes
磁带媒体也可提供冗余。这被称为独立磁带冗余阵列(RAIT)。一个 RAIT 是机制自动转存
和驱动机制之间的磁带设备。RAIT 利用条带，但是没有冗余。这也是常见的使用磁带进行备
—210—
份和恢复的多个副本。类似于 RAID，只不过有磁盘变成磁带。
其它的技术还有：
3.大规模非活动磁盘阵列 Massive Array of Inactive Disks (MAID)
是只有处于活动状态的磁盘驱动器才会在某一特定时间内启动的一项存储技术。大规模非
活动磁盘阵列在减少电能消耗的同时延长了驱动的使用寿命。
4.数据库恢复 Database Recovery
创建远程数据库内容备份有 3 种主要技术手段：电子链接、远程日志处理和远程镜像。