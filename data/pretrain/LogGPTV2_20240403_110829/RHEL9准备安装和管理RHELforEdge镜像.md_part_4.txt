:::
::: section
::: titlepage
# []{#composing-rhel-for-edge-images-using-image-builder-in-rhel-web-console_composing-installing-managing-rhel-for-edge-images.html#downloading-a-rhel-for-edge-image_composing-rhel-for-edge-images-using-image-builder-in-rhel-web-console}下载 RHEL for Edge 镜像 {.title}
:::
Image Builder 成功创建 RHEL for Edge 镜像后，将镜像下载到本地主机上。
::: title
**步骤**
:::
下载镜像：
::: orderedlist
1.  在 [**More Options**]{.strong} 菜单中点 [Download]{.guibutton}。
    Image Builder 将文件下载到您的默认下载位置。
:::
下载的文件包含一个 `.tar`{.literal} 文件，其中包含适用于 RHEL for Edge
Commit 和 RHEL for Edge 容器镜像的 OSTree 存储库，或 RHEL for Edge
安装程序镜像（带有 OSTree 存储库）的 `.iso`{.literal}
文件。此存储库包含提交和 `json`{.literal}
文件，其中包含有关存储库内容的信息元数据。
:::
::: section
::: titlepage
# []{#composing-rhel-for-edge-images-using-image-builder-in-rhel-web-console_composing-installing-managing-rhel-for-edge-images.html#_additional_resources}其他资源 {.title}
:::
::: itemizedlist
-   [使用 Image Builder 命令行编写 RHEL for Edge
    镜像](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/composing_installing_and_managing_rhel_for_edge_images/index#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images){.link}。
:::
:::
:::
[]{#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images.html}
::: chapter
::: titlepage
# []{#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images.html#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images}第 4 章 使用 Image Builder 命令行编写 RHEL for Edge 镜像 {.title}
:::
您可以使用 Image Builder 创建自定义 RHEL for Edge 镜像(OSTree commit)。
要访问 Image Builder 并创建自定义 RHEL for Edge 镜像，您可以使用 RHEL
web 控制台界面或命令行界面。本章提供有关使用 CLI 为 Edge 镜像创建 RHEL
的信息。
对于基于网络的部署，使用 CLI 编写 RHEL for Edge
镜像的工作流涉及以下高级别步骤：
::: orderedlist
1.  为 RHEL for Edge 镜像创建蓝图
2.  创建 RHEL for Edge Commit 镜像
3.  下载 RHEL for Edge Commit 镜像
:::
对于不是基于网络的部署，使用 CLI 编写 RHEL for Edge
镜像的工作流涉及以下高级别步骤：
::: orderedlist
1.  为 RHEL for Edge 镜像创建蓝图
2.  创建 RHEL for Edge 容器镜像
3.  创建无自定义的蓝图
4.  为 Edge 安装程序创建 RHEL
5.  下载 RHEL for Edge 镜像
:::
要执行这些步骤，请使用 `composer-cli`{.literal} 软件包。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
要以非 root 用户身份运行 `composer-cli`{.literal} 命令，您必须是我们
`ldr`{.literal} 组的一部分，或者必须具有系统的管理员访问权限。
:::
::: section
::: titlepage
# []{#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images.html#_network_based_deployments_workflow}基于网络的部署工作流 {.title}
:::
::: section
::: titlepage
## []{#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images.html#creating-an-image-builder-blueprint-for-a-rhel-for-edge-image-using-the-command-line-interface_composing-a-rhel-for-edge-image-using-image-builder-command-line}使用 Image Builder 命令行界面创建 RHEL for Edge Commit 镜像蓝图 {.title}
:::
要为 RHEL for Edge Commit 镜像创建一个蓝图，请执行以下步骤：
::: orderedlist
**步骤**
1.  以 TOML（Tom's Obvious Minimal
    Language）格式创建一个明文文件，带有以下内容：
    ``` screen
    name = "blueprint-name"
    description = "blueprint-text-description"
    version = "0.0.1"
    modules = [ ]
    groups = [ ]
    ```
    其中,
    ::: itemizedlist
    -   [*blueprint-name*]{.emphasis} 是名称，print-text-description
        是您的蓝图的描述。
    -   [*0.0.1*]{.emphasis} 是 Semantic Versioning 方案的版本号。
    -   [*模块*]{.emphasis} 描述了要安装到镜像中的软件包名称和匹配版本的
        glob，例如：软件包名称 = \"tmux\"，匹配的版本 glob 是 version =
        \"2.9a\"。
        请注意，目前软件包和模块之间没有区别。
    -   [*组*]{.emphasis}是要安装到镜像中的软件包组，如组软件包
        anaconda-tools。
        此时，如果您不知道模块和组，请将它们留空。
    :::
2.  包含所需的软件包，并在蓝图中自定义其他详情以满足您的要求。
    对于要包含在蓝图中的每个软件包，请在文件中添加以下行：
    ``` screen
    [[packages]]
    name = "package-name"
    version = "package-version"
    ```
    其中,
    ::: itemizedlist
    -   package-name 是软件包的名称，如 httpd、gdb-doc 或 coreutils。
    -   package-version 是您要使用的软件包的版本号。
        package-version 支持以下 dnf 版本规格：
    -   对于特定版本，请使用具体版本号，如 8.3.0。
    -   对于最新可用版本，请使用星号 \*。
    -   对于最新的次版本，请使用如 8.\* 的格式。
    :::
3.  将蓝图推送到镜像构建器服务器：
    ``` screen
    # composer-cli blueprints push blueprint-name.toml
    ```
4.  列出现有的蓝图，以检查创建的蓝图是否已成功推送并存在。
    ``` screen
    # composer-cli blueprints show BLUEPRINT-NAME
    ```
5.  检查蓝图中列出的组件和版本是否有效：
    ``` screen
    # composer-cli blueprints depsolve blueprint-name
    ```
:::
::: itemizedlist
**其他资源**
-   [支持的镜像自定义](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/composing_a_customized_rhel_system_image/index#image-customizations_creating-system-images-with-composer-command-line-interface){.link}.
:::
:::
::: section
::: titlepage
## []{#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images.html#creating-a-rhel-for-edge-image-with-image-builder-using-the-command-line-interface_composing-a-rhel-for-edge-image-using-image-builder-command-line}使用 Image Builder 命令行界面创建 RHEL for Edge Commit 镜像 {.title}
:::
要使用 Image Builder 命令行界面创建 RHEL for Edge Commit
镜像，请确定您满足以下先决条件并遵循这个流程。
::: itemizedlist
**先决条件**
-   您已为 RHEL for Edge Commit 镜像创建了一个蓝图。
:::
::: orderedlist
**步骤**
1.  创建 RHEL for Edge Commit 镜像。
    ``` screen
    # composer-cli compose start blueprint-name image-type
    ```
    其中,
    ::: itemizedlist
    -   [*blueprint-name*]{.emphasis} 是 RHEL for Edge 蓝图名称。
    -   [*image-type*]{.emphasis} 是用于 [**基于网络的部署**]{.strong}
        `的边缘提交`{.literal}。
        这时将显示一个确认已添加到队列中的 composer
        进程。它还显示创建的镜像的通用唯一标识符 (UUID) 号。使用 UUID
        号来跟踪构建。另外，记录 UUID 号以易于执行进一步的任务。
    :::
2.  检查镜像 compose 状态。
    ``` screen
    # composer-cli compose status
    ```
    输出以以下格式显示状态：
    ``` screen
     RUNNING date blueprint-name blueprint-version image-type
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    镜像创建过程需要 20 分钟才能完成。
    :::
    要中断镜像创建过程，请运行：
    ``` screen
    # composer-cli compose cancel 
    ```
    要删除现有镜像，请运行：
    ``` screen
    # composer-cli compose delete 
    ```
    镜像就绪后，您可以下载并在 [**网络部署中使用**]{.strong}。
:::
::: itemizedlist
**其他资源**
-   [在命令行界面中使用镜像构建器创建系统镜像](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/composing_a_customized_rhel_system_image/index#creating-a-system-image-with-composer-in-the-command-line-interface_creating-system-images-with-composer-command-line-interface){.link}
:::
:::
::: section
::: titlepage
## []{#composing-a-rhel-for-edge-image-using-image-builder-command-line_composing-installing-managing-rhel-for-edge-images.html#creating-a-rhel-for-edge-image-with-a-parent-commit-using-image-builder-command-line-interface_composing-a-rhel-for-edge-image-using-image-builder-command-line}使用 Image Builder 命令行界面的父提交创建 RHEL for Edge 镜像更新 {.title}
:::
如果您对现有蓝图进行了更改，例如，您添加了一个新的软件包，并希望使用这个新软件包更新现有
RHEL for Edge 镜像，您可以使用父提交 ID 生成更新的 RHEL for Edge
Commit(.tar)镜像。
要使用 Image Builder 命令行界面的父提交创建 RHEL for Edge
镜像，请确定您满足以下先决条件，然后按照以下步骤操作。
::: itemizedlist
**先决条件**
-   您已为 RHEL for Edge 镜像更新了现有蓝图。
-   您有一个现有的 RHEL for Edge 镜像(OSTree commit)。请参阅[提取 RHEL
    for Edge
    镜像提交](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/composing_installing_and_managing_rhel_for_edge_images/index#extracting-the-tar-file-commit_installing-rpm-ostree-images){.link}
:::
::: orderedlist
**步骤**
1.  创建 RHEL for Edge 镜像。
    ``` screen
    # composer-cli compose start-ostree --ref rhel/8/x86_64/edge --parent parent-OSTree-commit-id blueprint-name image-type
    ```
    其中,
    ::: itemizedlist
    -   [*\--ref*]{.emphasis} 与构建 ostree 存储库的值相同
    -   [*\--parent*]{.emphasis} 是 OSTree 父提交
    -   [*blueprint-name*]{.emphasis} 是 RHEL for Edge 蓝图名称。
    -   [*image-type*]{.emphasis} 是 `edge-commit`{.literal}（对于
        [**network-based deployment**]{.strong}）
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        `--parent`{.literal} 参数只能用于 RHEL for Edge
        Commit(.tar)镜像类型。将 `--url`{.literal} 和
        `--parent`{.literal} 参数一起使用会产生错误。
        :::
        这时将显示一个确认已添加到队列中的 composer
        进程。它还显示创建的镜像的通用唯一标识符 (UUID) 号。使用 UUID
        号来跟踪构建。另外，记录 UUID 号以易于执行进一步的任务。
    :::
2.  检查镜像 compose 状态。
    ``` screen
    # composer-cli compose status
    ```
    输出以以下格式显示状态：
    ``` screen
     RUNNING date blueprint-name blueprint-version image-type
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    完成镜像创建过程需要几分钟时间。
    :::
    （可选）要中断镜像创建过程，请运行：
    ``` screen
    # composer-cli compose cancel 
    ```
    （可选）要删除现有镜像，请运行：
    ``` screen
    # composer-cli compose delete 
    ```
:::