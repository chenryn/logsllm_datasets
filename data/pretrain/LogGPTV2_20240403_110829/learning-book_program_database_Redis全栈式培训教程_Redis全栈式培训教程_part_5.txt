null
Q
6
8
10
null
10
null
春风阁讲堂出品
---
## Page 48
4.2.7.快速列表quicklist
头部查找
quicklist
尾部查找
quicklist
quicklist
quicklist
quicklist
node1
node2
node3
node3
zplist
zplist
zplist
zplist
春风阁讲堂出品
48
---
## Page 49
4.3.String数据类型
4.3.1.基本介绍
数据类型
类型名称
特征说明
场景使用
String类型是Redis最基本的数据类型，
一个key 对应一个 value
String
字符串
String 是二进制安全的，redis 的 String可以包含任何数据。如 jpg图片或者序列化对象
非常多，万物皆可转String类型
String类型的值最大能存储512MB
String类存储的逻辑结构图
我们可以按key进行进行增、删、查、改
key1的值
key1
Key
值必须为字符串
key2
key2的值
必
须为字符串
key3
key3的值
key4
key4的值
春风阁讲堂出品
9
---
## Page 50
4.3.2.内部实现
Redis中的 String内部实现有三种场景
int编码方式
字符串是整数
直接存储在redisObject的ptr处
embstr编码方式
String编码优化
字符串长度44
redisObject的ptr指针指向sds对象
1.Redis的字符串是动态字符串，是可以修改的字符串，内部结构实现上类似于Java的ArrayList，采用预分配余的方式来减少内存的频繁分配
2.1
Redis的字符串有两种存储方式，在长度特别短时，使用embstr、int类型，当长度超过44时，使用raw形式存储
3.Redis提供了命令OBJECTENCODINGkey来查询内部编码方式
192.168.128.167:6379>0BJECTENC0DINGa
"raw"
192.168.128.167:6379>
4.Redis在使用的时候，Value值不宜过大，当超过10K的时候，我们就要特别注意性能的问题
春风阁讲堂出品
50
---
## Page 51
4.3.3.常用命令
行数
类型名称
行数
SET key value，指定key 的值
16
MSETNX key value [key value ...]，同时设置一个或多个 key-value 对，
当且仅当所有给定key都不存在
GET key，获取指定key 的值
17
INCR key，将key 中储存的数字值增一
3
SETRANGEkey offset value，用value参数覆写给定key所储存的字符串值，
18
DECRkey，将key 中储存的数字值减一。
从偏移量offset 开始
4
GETRANGE key start end，返回 key 中字符串值的子字符
19
INCRBY key increment，将key 所储存的值加上给定的增量值（increment）
5
GETSET key value，将给定key 的值设为 value，并返回key 的I旧值
20
DECRBY key decremen，key 所储存的值减去给定的减量值（decrement）
6
GETDEL key，获取某个key 的值，将删除
21
INCRBYFLOAT key increment，将key所储存的值加上给定的浮点增量值
7
MSET key value[key value...］，同时设置一个或多个 key-value 对
22
APPEND key value，将指定的 value 追加到该key 值的末尾。
8
MGET key1[key2..]，获取所有（一个或多个）给定key的值
9
GETBIT key offset，对key所储存的字符串值，获取指定偏移量上的位（bit)
10
SETBITkey offsetvalue，设置或清除指定偏移量上的位（(bit）
11
SETEX key seconds value，将值 value 关联到 key，并设定过期时间 seconds
12
GETEXkey.…-获取key的值，并设置过期时间
13
PSETEX key milliseconds value，这个命令和 SETEX 命令相似，但它以毫
秒为单位设置key的生存时间，而不是像 SETEX命令那样，以秒为单位
14
SETNX key value，只有在key 不存在时设置 key 的值
15
STRLENkey，返回key所储存的字符串值的长度。
春风阁讲堂出品
51
---
## Page 52
4.4.Hash数据类型
4.4.1.基本介绍
数据类型
类型名称
特征说明
场景使用
Redis Hash是一个键值(key=>value)对集合。
存储带有属性的对象，Hash类型主要是为了解决String类型在存储对象时候的困难[对象
Hash
哈希
Redis Hash 特别适合用于存储对象
类数据的存储如果具有较为频繁的更新需求，操作会显得非常麻烦]
Hash类的逻辑结构图
存储空间
filed
value
id
1314
hash_key
code
code_1314
我们可以按hash_key操作
name
春风阁
我们也可以按filed操作
春风阁讲堂出品
52
---
## Page 53
4.4.2.内部实现
Hash类的实现，在编码方式上有两种：zipList/listpack，hashTable
value大小=3.2、版本=7
redis3.2以下
zplist
value大小<=list-max-ziplist-size（默认为64）
元素个数大小<=list-max-ziplist-entries（默认512）
双向链表
redis3.2以下
redis3.2以上
list类编码优化
quicklist
list-max-ziplist-size默认值为-2,zip数据大小为8kb
list-compress-depth默认为0，表示不压缩
redis 7
quicklist
list-max-listpack-size默认值为-2,zip数据大小为8kb
list-compress-depth默认为0，表示不压缩
1.redis的list数据类型最早使用的是一个双向链表linkedlist，但双向链表的prev与next指针会占用大量的内存空间。为了节约内存开销，redis从
3.2版本开始，使用一个快速列表quicklist保存数据
2.quicklist是ziplist/listpack和linkedlist 的混合体，它将linkedlist按段切分，每一段使用ziplist/listpack来紧凑存储，多个ziplist/listpack之间使用
双向指针串接起来。
春风阁讲堂出品
---
## Page 58
4.5.3.常用命令
行数
类型名称
行数
LPUSHkey value1[value2]，将一个或多个值插入到列表头部
11
LRANGE key start stop，获取列表指定范围内的元素
2
RPUSHkey value1[value2]，在列表中添加个或多个值
12
LLEN key，获取列表长度
3
LPOPkey，移出并获取列表的第一个元素
13
BLPOP key1[key2］timeout，移出并获取列表的第一个元素，如果
列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。
RPOPkey，移除列表的最后一个元素，返回值为移除的元素
14
BRPOPkey1[key2］timeout，移出并获取列表的最后一个元素，如
果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。
LPUSHXkey value，将一个值插入到已存在的列表头部
15
LTRIM key start stop，对一个列表进行修剪（trin），就是说，让列
表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。
RPUSHX key value，为已存在的列表添加值
16
BRPOPLPUSH source destination timeout，从列表中弹出一个值，将
弹出的元素插入到另外一个列表中并返回它：如果列表没有元素会阻
塞列表直到等待超时或发现可弹出元素为止。
7
LSET key index value，通过索引设置列表元素的值
17
RPOPLPUSH source destination，移除列表的最后一个元素，并将该
元素添加到另一个列表并返回
8
LINDEXkey index，通过索引获取列表中的元素
9
LINSERT key BEFORE|AFTER pivot value，在列表的元素前或者后插入元素
10
LREM key count value，移除列表元素
春风阁讲堂出品
---
## Page 59
春风阁讲堂出品
---
## Page 60
4.6.Set数据类型
4.6.1.基本介绍
数据类型
类型名称
特征说明
场景使用
Redis的Set是string类型的无序集合
1、共同好友
Set
集合
集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是0（1）
2、既是热门，又是精华的帖子
为集合提供了求交集、并集、差集等操作
Set类的逻辑结构图
存储空间
set_key
成
成
成
员
员
员
我们可以按set_key操作
2
3
我们也可以按set_key+键值进行操作
春风阁讲堂出品
60
---
## Page 61
4.6.2.内部实现
set内部实现有两种方式，inset和hashtable
元素必须为整数
inset
元素个数<=set-max-intset-entries（默认为512）
Set类编码优化
hashtable
其它实现
1.redis为了节省内存开销，对于集合类型，如果集合的数据都是整数，且个数比较少的情况下，会优先使用inset实现
2.
inset实现时，内部数量不宜过大，默认为512以下
春风阁讲堂出品
---
## Page 62
4.6.3.常用命令
行数
类型名称
行数
SADD key member1[member2]，向集合添加一个或多个成员
12
SMOVE source destination member，将menber 元素从 source 集合移动到
destination 集合
2
SREM key memberl[member2]，移除集合中一个或多个成员
13