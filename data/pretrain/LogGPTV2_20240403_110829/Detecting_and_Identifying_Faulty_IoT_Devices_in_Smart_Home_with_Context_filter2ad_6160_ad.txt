### Testbed and Actuator Data Evaluation

The testbed was the only available dataset containing actuator data, which we used to evaluate actuator faults. DICE identified problematic actuators with an average precision of 92.5% and recall of 94.9%. This indicates that our system can detect and identify actuator faults with high accuracy.

### Detection and Identification Time

We measured the average detection and identification times of DICE across each dataset (Fig. 10). The detection time is the duration from the occurrence of a fault until DICE detects its presence. The identification time is the duration from the occurrence of a fault until DICE identifies the faulty sensor. Generally, the correlation degree and the detection/identification time were proportional. 

For nine out of ten datasets, DICE detected faults within 10 minutes and identified them within 30 minutes. For houseA, the detection and identification times were 21.88 minutes and 72.82 minutes, respectively. Despite this, even the slowest detection time of DICE (houseA) was significantly faster than the fastest reported average detection time in prior research, which was 12 hours. Therefore, we are confident that DICE can promptly identify faulty sensors in real-time. We provide a detailed explanation for the varying detection and identification times across different datasets in Section V-D.

### Comparison of Detection Times

We compared the detection times of the correlation check and transition check in houseA, houseB, and houseC (Table III). The transition check was approximately three times slower than the correlation check. This is because correlation violations are detected almost instantly, while the transition check requires a contrasting transition to occur. Typically, a sensor state set retained its value for several minutes, which did not cause any drastic changes. As a result, DICE detects faults after a transition violation, which takes more time than the correlation check.

### Computation Time

To verify the feasibility of DICE, we measured the computation times for the correlation check, transition check, and identification across the ten datasets (Fig. 11). DICE spent less time on the correlation check in houseA, houseB, and houseC compared to the other datasets. The correlation check time was most influenced by obtaining probable groups, and the number of sensors affected this process. For example, in our Smart Home testbed with 37 sensors, the number of bits converted by numeric sensors exceeded 100, increasing the correlation check time. However, the maximum computation time per sensor state set in real-time was below 50 ms, which is reasonable. The transition check and identification times were negligible and similar across datasets due to simple probability comparisons and bit value comparisons, respectively.

### Correlation Degree

We calculated the correlation degree, which indicates the level of correlation among sensors. A higher correlation degree means more sensors react together. Table IV summarizes the correlation degree for each dataset. HouseA had the lowest correlation degree (1.4), meaning one or two sensors were activated simultaneously on average for each unique sensor state set. The DICE datasets for a real-world Smart Home had the highest correlation degree (10.6), and twor and hh102 had a larger number of deployed sensors. This shows that the number of sensors and the correlation degree are not directly proportional. Instead, the accuracy and detection/identification time depend on the correlation degree. Datasets with higher correlation degrees achieved better detection and identification accuracy. In houseA, which had the lowest correlation degree, the accuracy and detection/identification times were lower but still acceptable.

### Ratio of Detected Faults

We analyzed the ratio of faults detected by the correlation check and transition check based on fault types (Fig. 12). All fail-stop faults were detected during the correlation check, while most stuck-at faults were detected in the transition check. Fail-stop faults alter the correlation among sensors, making them easily detectable by the correlation check alone. Stuck-at faults, however, maintain the correlation relationship, and DICE detects them using the transition check, which captures abnormal behaviors. We believe that simple fail-stop faults can be detected by prior techniques, but the transition check is necessary for detecting non-fail-stop faults of various types.

### Discussion

#### Multi-User Cases

Our experiments considered a Smart Home with one or two occupants. All five heterogeneous sensor failure detection solutions in Section II-C also targeted single or two-occupant Smart Homes. However, DICE can work for Smart Homes with multiple residents if they are present during the precomputation phase. In such cases, the number of unique sensor state sets may grow exponentially due to the increased possible combinations. For example, in a single-resident case, kitchen sensors are likely to be activated, but in a multi-resident case, bathroom or bedroom sensors may also react, increasing the number of sensor combinations. This can decrease accuracy or increase computation cost and time.

To address this, users can group spatially close sensors and run DICE separately for each group. For instance, kitchen sensors can be grouped and run separately from bathroom or bedroom sensors. We plan to conduct multi-user case experiments in future work.

#### Multi-Fault Cases

In our experiments, we inserted one sensor fault at a time, but multiple faults can occur simultaneously in Smart Homes. To test this, we randomly selected one to three faulty sensors to generate simultaneous faults. In these multi-fault cases, we set the value of `numThre` to 3. The average precision and recall for identifying multiple faulty sensors were 79.5% and 63.3%, respectively, which is within a reasonable range.

#### Impact of Different Parameters

The precomputation period affects DICE's accuracy. A short precomputation period results in insufficient context extraction, leading to lower precision. Using the first 150 hours of the datasets as precomputation data decreased the precision by 10%. Thus, a longer precomputation period improves precision. The segment size also impacts accuracy. Reducing the segment size to three hours decreased the recall by 6% because faults maintaining correlation do not make illegal transitions within this time. The optimal segment size we found empirically was one minute.

### Security Expansion

Correlation analysis helps IoT systems detect malicious devices. DICE can detect malicious numeric sensors in addition to binary sensors but cannot currently detect passive malicious or information-leaking sensors. We are working on this aspect.

### Conclusion

A system that detects and identifies faulty devices is essential for reliable Smart Home services. Prior art has been inapplicable due to usability, generality, feasibility, and promptness issues. We proposed DICE, a future-oriented, context-based method to detect faulty IoT devices. In the precomputation phase, we extracted context information based on sensor correlations and state transitions without requiring activity annotations or supplementary information. In the real-time phase, we checked for violations of the precomputed context to detect and identify faulty sensors. DICE successfully identified faulty devices with an average precision of 94.9% and recall of 92.5%. Our system took an average of 3 minutes to detect faults and 28 minutes to identify faulty devices, reducing to 7 minutes under optimal conditions. DICE promptly detects and identifies sensor faults with high accuracy, contributing to building highly reliable Smart Homes.

### Acknowledgments

This work was supported by Samsung Research Funding Center of Samsung Electronics under Project Number SRFC-TB1403-04.

### References

[References listed here as provided in the original text]