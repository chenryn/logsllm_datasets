    # You can also add additional options under the section of your module and
    # they will be available in your Python class.
    [feedback]
    # Automatically report errors that occurred during an analysis. Requires the
    # Cuckoo Feedback settings in cuckoo.conf to have been filled out properly.
    enabled = yes --反馈关闭 no，一般都会报错
    [jsondump]
    enabled = yes  --JSON开启
    indent = 4
    calls = yes
    # The various modes describe which information should be submitted to MISP,
    # separated by whitespace. Available modes: maldoc ipaddr hashes url.
    mode = maldoc ipaddr hashes url
    [mongodb]
    enabled = yes   --开启数据库mongodb
    host = 127.0.0.1
    port = 27017
    db = cuckoo   -- 你需要登陆mongodb创建数据库cuckoo
    store_memdump = yes
    paginate = 100
    # MongoDB authentication (optional).  --我这里没有用账号密码
    username =
    password =MongoDB authentication (optional). --我这里没有用账号密码 username = password =
**以上是主要配置，你需要执行以下指令启动Web界面，提供了三种方式都可以，你有可能会报错MongoDB：**
    cuckoo web runserver
    cuckoo web runserver 0.0.0.0:PORT
    cuckoo web -H host -p port
**如果你Mongodb报错如下，先排查是不是环境变量问题，先尝试导入环境变量：**
    Error： In order to use the Cuckoo Web Interface it is required to have MongoDB up-and-running and enabled in Cuckoo. Please refer to our official documentation as well as the $CWD/conf/reporting.conf file.
    解决方案一：export CUCKOO=/opt/cuckoo
**如果还是报错，查看你的Mongodb版本，apt-get默认安装的老版本3.6的，可以更新到db version
v4.0.10或者更高版本，如何更新呢？可以参考如下：**
    个人建议先卸载干净，有些依赖包没有被升级也会报错
    Uninstall:
    apt-get purge mongodb-org*
    sudo rm -r /var/log/mongodb
    sudo rm -r /var/lib/mongodb
    dpkg -P xxx
    apt-get clean
    Install:
    sudo apt-get install -y mongodb-org=4.0.10 mongodb-org-server=4.0.10 mongodb-org-shell=4.0.10 mongodb-org-mongos=4.0.10 mongodb-org-tools=4.0.10
    echo "mongodb-org hold" | sudo dpkg --set-selections
    echo "mongodb-org-server hold" | sudo dpkg --set-selections
    echo "mongodb-org-shell hold" | sudo dpkg --set-selections
    echo "mongodb-org-mongos hold" | sudo dpkg --set-selections
    echo "mongodb-org-tools hold" | sudo dpkg --set-selections
**重新启动Mongodb服务，创建数据库cuckoo，工作目录与环境变量都没问题，Web就OK了，执行指令，成功信息如下** ：
    (venv) root@ubuntu:/opt/cuckoo# cuckoo web runserver Performing system checks...
    (venv) root@ubuntu:/opt/cuckoo# cuckoo web runserver
    Performing system checks...
    System check identified no issues (0 silenced).
    July 08, 2019 - 20:37:21
    Django version 1.8.4, using settings 'cuckoo.web.web.settings'
    Starting development server at http://127.0.0.1:8000/
    Quit the server with CONTROL-C.
**先来看看Web页面：**
**看起来还不错，但是cukoo没办法分析的，因为没还安装内存分析的工具。还需要把API接口联调成功，Python有成熟cuckoo
api库，我们只需要让cuckoo支持api响应，官方参考如下：**
    Starting the API server
    In order to start the API server you can simply do:
    $ cuckoo api
    By default it will bind the service on localhost:8090. If you want to change those values, you can use the following syntax:
    $ cuckoo api --host 0.0.0.0 --port 1337
    $ cuckoo api -H 0.0.0.0 -p 1337
**和Web的启动方式是一样的，如果你用Pycharm也许会遇到一些问题Windows下，你可以尝试安装VCForPython27.msi：**
    解决Pycharm 调用 cuckoo api包接口依赖关系： VCForPython27.msi
**其实cuckoo还支持Nginx代理等扩展，非常灵活，更多信息需要参考文档与手册。**
**➄ Online virus api：你需要到提供免费api情报或者沙箱网站，注册账号，获取属于自己的私钥Key，然后参考api手册，去使用.**
    微步云 API：
    API官方参考手册：https://s.threatbook.cn/api
    免费支持接口模块：文件类型与URL扫描
    VirusTotal API:
    API官方参考手册： https://developers.virustotal.com/reference#getting-started
    免费支持接口模块:文件、URL、域名及端口
**➅ Volatitity:
Github:
它的强大无容置疑，主流平台全部支持，都可以进行内存取证: **
**安装如下：**
    unzip volatility_2.6_lin64_standalone.zip
    cd volatility_2.6_lin64_standalone
    root@ubuntu:~/volatility_2.6_lin64_standalone#   ls 
    AUTHORS.txt  CREDITS.txt  LEGAL.txt  LICENSE.txt  README.txt  volatility_2.6_lin64_standalone
    root@ubuntu:~/volatility_2.6_lin64_standalone#  ./volatility_2.6_lin64_standalone -h
    你可以看到输出信息
**如果在Linux下单独使用该工具，需要Profile，你可以通过该网站获取：**
**Github直接下载制作好的Profile:** 
**获取内存： 也可以 apt-get install volatility
volatility-tools**  
**获取内存： 也可以 apt-get install volatility volatility-tools**
**我们关注的是cuckoo上配置与使用volatility工具来完成内存分析，你需要去理解memory.conf配置文件，在这之前你必须满足两个条件：**
    启用volatility中$CWD/conf/processing.conf 
    启用memory_dump中$CWD/conf/cuckoo.conf
**cuckoo.conf:**
    # Enable creation of memory dump of the analysis machine before shutting
    # down. Even if turned off, this functionality can also be enabled at
    # submission. Currently available for: VirtualBox and libvirt modules (KVM).
    memory_dump = yes --改为yes
**processing.conf:**
    [memory]
    # Create a memory dump of the entire Virtual Machine. This memory dump will
    # then be analyzed using Volatility to locate interesting events that can be
    # extracted from memory.
    enabled = yes   -- 改为yes
    你还可以配置扫描线程等
**memory.conf：**
    # Volatility configuration
    # Basic settings
    [basic]
    # Profile to avoid wasting time identifying it
    guest_profile = WinXPSP2x86 --内存镜像设置
    # Delete memory dump after volatility processing.
    delete_memdump = no
    后面每个小节都是插件的配置，支持virustotal api，可以开启辅助分析：
    [virustotal]
    enabled = yes   -开启virustotal模块扫描
    # How much time we can wait to establish VirusTotal connection and get the
    # report.
    timeout = 60
    # Enable this option if you want to submit files to VirusTotal not yet available
    # in their database.
    # NOTE: if you are dealing with sensitive stuff, enabling this option you could
    # leak some files to VirusTotal.
    scan = yes
    # Add your VirusTotal API key here. The default API key, kindly provided
    # by the VirusTotal team, should enable you with a sufficient throughput
    # and while being shared with all our users, it shouldn't affect your use.
    key = a0283a2c3d55728300d064874239b5346fb991317e8449fe43c902879d758088   -- 请求私钥
**打开cuckoo的Web页面，然后提交测试的样本，如下所示：**
**cuckoo与cuckoo web都正常运行，发现提交的样本无法分析一直pending，有可能cuckoo与cuckoo
web不再同一个环境下，因为运行都在venv
Python独立的环境下运行的，别忘了临时变量问题，你需要看一看两个evn是不是相同的，都设置了CUCKOO=/opt/cuckoo：**
    (venv) root@ubuntu:/opt/cuckoo/conf# env | grep cuckoo
    OLDPWD=/opt/cuckoo
    PWD=/opt/cuckoo/conf
    CUCKOO=/opt/cuckoo
**点击文件名查看详细的样本信息，因为签名与yara都没有下载，详细有很多分析显示不完善：**
**➆ Cowrie蜜罐安装： 本想介绍HoneyDrive 与 t-pot，但是这些并不复杂，他们也是由多个蜜罐组成。**
**☣
T-pot有着良好的可视化，es数据库插件会让你的展示更绚丽，HoneyDrive镜像3.9g左右，不过你在安装过程中.ova镜像导入虚拟机会遇到一些问题，比如不符合ovf的规范，你需要下载VMware-ovftool-4.2.0-5965791-win.x86_64.msi工具，去把你的ova转换成VM镜像打开，如果上述环境都搭建成功，这些东西将很简单，。**
**☽ 介绍Cowrie主要想聊聊表与字段关联，这些数据很重要这是一个恶意链的概念：**  
**这是一个低交互蜜罐或者中交互蜜罐，简单说可以记录ssh与telnet暴力破解，记录黑客爆破后指令，你可以参考官方：**  
**这里不再介绍安装与数据库配置，我们来看一看cowrie数据库表，这里使用的mysql(你需要导入生成这些表)，如下所示：**
    mysql> show tables;
    +------------------+
    | Tables_in_cowrie |
    +------------------+
    | auth             |
    | clients          |
    | downloads        |
    | input            |
    | ipforwards       |
    | ipforwardsdata   |
    | keyfingerprints  |
    | params           |
    | sensors          |
    | sessions         |
    | ttylog           |
    +------------------+
**部署后去理解这些表与表之间的关系，当运行cowrie之后，数据库也都开始了工作，他们之间依赖session字段串联，利用字段可以串烧一条简单的恶意链，当然没有进行任何扩展，比如对ip进行扩展，地区查询域名查询等，如下所示：**
    ip（攻击者ip） --> session(连接会话) --> exec（执行的命令） --> file（下载的恶意代码） --> count（排行及次数，定性）
**➥ 如果你是一个SQL新手，你可以参考这些SQL语句来帮助你更好的使用mysql：**
    # GRANT ALL PRIVILEGES ON *.* TO 'cowire'@'%'IDENTIFIED BY 'cowrie' WITH GRANT OPTION;远程连接提权
    # update user set host = '%' where user = 'root';
    # update user set authentication_string=password('yibanrensheng1997.') where user='cowrie';修改密码
    # select TABLE_NAME,COLUMN_NAME,CONSTRAINT_NAME from INFORMATION_SCHEMA.KEY_COLUMN_USAGE where CONSTRAINT_SCHEMA ='cowrie' AND REFERENCED_TABLE_NAME = 'sessions';  查看外键
    # SET FOREIGN_KEY_CHECKS=0;   设置外键约束不起效
    # flush privileges            刷新
    # show variables like 'collation_%';   查看所有格式
    # truncate table 表名;
    # select username, count(*) as count from auth group by username order by count desc limit 20; 统计爆破账户排行
    # select password, count(*) as count from auth group by password order by count desc limit 20; 统计爆密码排行
    # select ip, count(*) as count from sessions group by ip order by count desc limit 20; 统计爆破次数最多的ip
    # select distinct ip from sessions;  去掉重复的ip
    # select distinct input from input;  获取去重后的指令
**ϡ
其实这篇文章主要介绍了基础知识与思路，附加串烧部署，这部分也是非常耗费精力，所以不要把部署不太当回事，后面会遇到很多莫名的BUG。下次有时间将会带来串烧工具，用高乐积木真正的运作起来。**
**✍ 后记：研究这东西有用吗？**  
**总会有一些朋友说我这东西有啥用，也不挣钱，确实，也许有用，也许一点用都没。我也总会想一些问题，就像下面着几种情况：  
搞渗透的一定要会系统漏洞？熟悉保护模式？  
搞二进制，玩逆向一定要懂web漏洞？java反序列化之类的。  
搞安服的就不能挖漏洞？不能花时间研究学习，业余时间也尝试一下自动化如何挖cve、src？  
最后对于我来说，这些知识一定会有辅助作用，对工作是一定有提升与帮助的，这并不意味是个全栈工程师，仅仅代否愿意去接触新的知识，或说热爱某些东西，更多的精力去做你喜爱的事情，所以说这是格局问题，一个人一个想法。**  
**☭
关于二次开发个人也是学习道路上的一员，平常业余时间去研究，所以并不一定有第三篇文章，二次开发与优化基本属于系统层面、内核、保护模式、HOOK关联性很大，像逆一个sandbox时长也好久，希望有兴趣的你一起学习交流。**  
**☪ 后续：**  
**《利用Python开源工具部署自己的恶意代码自动化（二）高乐积木》  
《利用Python开源工具部署自己的恶意代码自动化（三）深度优化与二次开发》**