14.2.1.1 某企业数据库配置信息泄露
步骤一：利用各类搜索引擎搜索敏感文件，搜索的语法为“site：github.com
password”，就可以直接在GitHub网站上找到配置信息。如图14-1所示，可以获得某企业
数据库配置信息。
图14-1 数据库配置信息
步骤二：利用数据库配置信息成功登录数据库，可获得大量企业用户信息，如图14-2
所示。
图14-2 成功登录数据库
14.2.1.2 某著名厂商数千名员工信息泄漏
步骤一：通过GitHub查找到某厂商的一个开源项目，如图14-3所示，发现其中一份文
件包含一个加密信息。
图14-3 网站配置信息
步骤二：通过base64解密，发现是一个HTTP请求包，并且包含Cookies值。将请求包
的内容复制到浏览器即可登录内部系统，如图14-4所示。
图14-4 利用数据包登录后台
步骤三：如图14-5所示，在该系统可以获得该企业数千名员工信息。
图14-5 内部通讯录
14.1.2 无限制登录任意账号
由于各类应用的安全防护手段参差不齐，导致攻击者可以利用漏洞绕过登录限制，或
者利用已经认证的用户，通过修改身份ID登录任意账号。
14.2.2.1 某大学网站SQL注入漏洞可绕过登录限制
步骤一：某学校网站后台为http：//www.xxx.edu.cn/login.asp，登录界面如图14-6所
示。
图14-6 绕过登录测试
步骤二：因网站登录处过滤不严格导致存在SQL注入漏洞，利用万能密码，可以绕过
登录的限制成功登录后台，如图14-7所示。
图14-7 成功登录
14.2.2.2 某APP客户端可以劫持任意账号
步骤一：在某App的官网上查看已经注册的用户，如图14-8所示。
图14-8 查看注册用户ID
步骤二：通过浏览器审查元素，如图14-9所示，可以得到该用户的ID值。
图14-9 查看用户ID
步骤三：下载该客户端，单击微博授权登录，如图14-10所示。
图14-10 授权登录
步骤四：在登录过程中截取数据包，如图14-11所示，修改uid里面的数据，即可登录
其他人的账号。
图14-11 替换用户ID
步骤五：如图14-12所示，成功利用微博劫持他人账号并登录成功。
图14-12 成功登录他人账号
14.1.3 电子邮件账号泄露事件
电子邮箱业务基于计算机和通信网的信息传递业务，利用电信号传递和存储信息，为
用户传送电子信函、文件数字传真、图像和数字化语音等各类型的信息。电子邮件最大的
特点是，人们可以在任何地方、任何时间收、发信件，解决了时空的限制，大大提高了工
作效率，为办公自动化、商业活动提供了很大便利。但电子邮件账号泄露，也将引发大量
的信息泄露。
14.2.3.1 邮件账号引发的信息泄漏
步骤一：如图14-13所示，通过搜索引擎查找某公司公开于互联网的文件。
图14-13 敏感文件查找
步骤二：下载该XLS文件，从文件中获得某企业员工的邮件账号密码，如图14-14所
示，成功登录邮件系统。
图14-14 登录邮件系统
步骤三：在一份邮件中发现该公司部分信息，包括VPN登录地址、OA系统及内网各
个系统的登录方式，利用该邮件的账号密码均能登录各类内网系统，从而获得大量敏感数
据。如图14-15所示，成功拨入VPN，任意访问内网系统。
步骤四：如图14-16所示，成功登录OA系统，可以获取职工个人信息，包括手机号
码、身份证、工作内容等。
图14-15 登入VPN
图14-16 登录OA系统
步骤五：如图14-17所示，成功登录内部订单系统，查看大量订单数据。
图14-17 登录内部数据平台
14.1.4 中间人攻击
中间人攻击，即所谓的Main-in-the-middle（MITM）攻击，顾名思义，就是攻击者插
入到原本直接通信的双方中间，让双方以为还在直接跟对方通信，但实际上双方的通信对
象已变成了攻击者，同时信息已经被中间人获取或篡改。而中间人攻击不仅可以捕获
HTTP未加密的传输数据，更可以捕获HTTPS协议加密的数据。
HTTPS中间人攻击一般分为SSL连接建立前的攻击，以及HTTPS传输过程中的攻击。
常见的HTTPS中间人攻击，会首先需结合ARP、DNS欺骗、伪造CA证书等技术，来对会
话进行拦截。
14.2.4.1 SSL证书欺骗攻击
SSL证书欺骗攻击较为简单，首先通过DNS劫持和局域网ARP欺骗甚至网关劫持等技
术，将用户的访问重定向到攻击者的设备上，让用户机器与攻击者机器建立HTTPS连接
（使用伪造的CA证书），而攻击者机器再跟Web服务端连接。这样攻击者的机器分别与
用户和真正的服务器建立 SSL 连接，通过这两个连接之间转发数据，就能得到被攻击者
和服务器之间交互的数据内容。但用户的浏览器会提示证书不可信，只要用户不单击继续
就能避免被劫持。所以这是最简单的攻击方式，也是最容易识别的攻击方式。如图14-18
所示，为SSL证书欺骗攻击流程。
图14-18 证书欺骗过程
14.2.4.2 SSL劫持
SSL劫持，是指将页面中的HTTPS超链接全都替换成HTTP版本，让用户始终以明文
的形式进行通信。在现实生活中，用户在浏览器上输入域名，大部分采用直接输入网址的
方式，从而会忽略该网站采用的协议类型。例如打开百度，一般会直接输入
www.baidu.com，用户向百度发送一个 HTTP 请求，而不是 HTTPS。HTTP是以明文传输
数据的，因此如果利用 SSL 劫持攻击，使 HTTPS 协议的网站降级到HTTP，就能获取敏
感数据。
有部分网站并非全部采用HTTPS协议，只是在需要进行敏感数据传输时才使用
HTTPS 协议，如登录认证、传输敏感身份数据等时候。中间人攻击者在劫持了用户与服
务端的会话后，将HTTP页面里所有的HTTPS超链接都换成HTTP，用户在单击相应的链
接时，使用HTTP协议来进行访问。这样即使服务器对相应的URL只支持HTTPS链接，但
中间人攻击者一样可以和服务建立HTTPS连接之后，将数据使用HTTP协议转发给客户
端，实现会话劫持。
SSL劫持攻击手段更让人防不胜防，因为用户无法提前知道网站是否使用HTTPS 或
者 HTTP，而在用户的浏览器上更不会弹框告警或者网页错误显示。如图11-19所示为SSL
劫持攻击流程。
图14-19 SSLStrip攻击示例
如图14-20所示，可利用SSLStrip工具成功劫持Gmail账号。
图14-20 劫持Gmail账号
14.1.5 撞库攻击
撞库是黑客通过收集互联网已泄露的用户和密码信息，生成对应的字典表，尝试批量
登录其他网站后，得到一系列可以登录的用户名和密码组合。由于很多用户在不同网站使
用的是相同的账号和密码，因此黑客可以通过获取用户在 A 网站的账户从而尝试登录B网
站，这就可以理解为撞库攻击。
14.2.5.1 某知名公司子站存在撞库风险
步骤一：某知名公司官方网站用户登录有验证码校验机制，但有个子站没有限制登录
次数，因此可利用该子站进行撞库攻击，在该子站验证成功后再返回主站进行登录，如图
14-21和图14-22所示。
图14-21 子站登录界面
图14-22 登录数据包
步骤二：如图14-23所示，利用捕获到的数据包通过Burp Suite的intruder模块进行撞库
攻击。
图14-23 Burp Suite暴力破解
步骤三：利用该子站撞库攻击的结果，返回主站登录尝试，如图14-24所示，成功登
录主站。
图14-24 利用撞库成功登录
14.3 防范账号泄露的相关手段
随着互联网和各类网络应用的快速发展，关于保护账号安全的措施也迫在眉睫。总结
本章的账号安全相关案例，建议企业在防护账号和密码方面使用如下措施：
（1）核查数据库中的账号和密码存储方式，自行加密用户敏感数据，严格限制数据
库的访问条件，禁止外部连接数据库。
（2）采用 HTTPS 协议对账户认证过程实现加密封装，确保身份认证过程无法被窃
取。
（3）加强网络信息安全意识，网络管理人员对内部员工进行安全意识培训，禁止使
用弱口令，禁止公开个人账号密码，定期修改密码。
（4）使用数字证书认证。数字证书是通过运用对称和非对称密码体制等密码技术建
立起一个严密的身份认证系统，从而保证信息除发送方和接收方外不被其他人窃取。
（5）了解互联网账号泄露事件，存在账号泄露事件时第一时间通知客户修改个人账
号和密码，避免撞库攻击。
（6）加强对网站的安全防护能力，定期进行安全评估和升级更新，避免攻击者利用
漏洞获取账户信息。
第15章 密码找回安全案例总结
密码找回功能中潜在的逻辑漏洞，将使互联网用户的账户面临严重的安全风险。本章
将全面剖析常见密码找回逻辑漏洞案例，使读者了解和掌握该功能中存在的问题，规避密
码找回安全风险。
15.1 密码找回凭证可被暴力破解
密码找回凭证是指在密码找回过程中，服务端向用户的注册手机或者邮箱中发送的验
证码或特殊构造的URL等用于用户自证身份的信息。当用户凭证的验证次数未做限制或限
制不严可被绕过时，攻击者可以通过暴力枚举用户凭证的方式，冒充该用户重置其密码。
其业务流程如图15-1所示。
图15-1 业务流程图
15.1.1 某社交软件任意密码修改案例
2012年，某社交软件的官网上新增了一个忘记账号或密码的链接。
步骤一：单击忘记密码链接后，进入重设密码选择页，如图15-2和图15-3所示。
图15-2 忘记密码链接
图15-3 重设密码选择页
步骤二：选择使用手机号重设密码，并输入一个真实注册用户的手机号码，如图15-4
所示。
图15-4 重设密码页面
步骤三：单击“下一步”按钮后，系统提示将发送验证码到注册手机，如图15-5所示。
图15-5 发送验证码页面
步骤四：单击“我已收到验证短信”后，系统弹出重置密码确认页，需要输入手机上收
到的验证码作为密码找回凭证。核对成功则可以成功进行密码重置，如图15-6所示。
图15-6 发送验证码页面
步骤五：单击“OK”并对该请求进行抓包，获取到包文：
check=false&phone=186XXXXXXXX&……&verifycode=1234。
步骤六：根据以上包文信息可以发现该密码找回功能的验证码比较简单，只有4位数
字，可以尝试枚举修改包文中的verifycode进行暴力破解。几次尝试后收到系统提示“您的
提交请求过于频繁，请稍后再试。”说明该网站的密码找回功能是对用户凭证的验证频率
做了限制的，只能想办法绕过其限制。
步骤七：经过一系列尝试后发现，在phone=186XXXXXXXX的号码后面随机添加不
为数字的字符时，可以绕过此限制。于是推测其漏洞点在于判断 phone=186XXXXXXXX
的尝试次数时未对phone的值进行提纯，所以可以利用在号码后添加随机字符的方式绕过
限制。但在下一步操作的时候，只取了phone中的数字部分，然后再取出此号码的
verifycode进行比对，比对成功则修改密码，如图15-7所示。
图15-7 暴力破解示例
15.2 密码找回凭证直接返回给客户端
有些信息系统在密码找回功能的设计上存在逻辑漏洞，可能会将用于用户自证身份的
信息的密码找回凭证以各种各样的方式返回到客户端。这样攻击者只要通过在本地抓取数
据包并对其内容加以分析就能获取到其他用户的密码找回凭证，从而冒充该用户重置密