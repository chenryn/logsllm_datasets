ipaddr del10.0.2.11/24 deveth0 1abeleth0:0/dev/nu11
fi
/dev/nu11
---
## Page 273
第12章循环控制及状态返回值的应用实践255
ifconfigetho：Sipdown&>/dev/nul1/dev/nu11
RETVAL=$?
if[ SRETVAL -eq 0]
then
action *S1 sip*/bin/true
/dev/nu11
D0xe
sun=0
vhile read 1ine
do
nuuoo11（.（/[6-0]nu）s.nus.-unus.u-]
>/tnp/zhiwen.1og/tmp/zhiwen.1og
for n in (0..32767)
do
echo*echo Snimd5sunSn*>>/tmp/zhiwen.1og
<上述内容被注释掉了，读者也可以打开注释查看。
#done
md5char-*4fe8bf20ed*
<定义特破解的字特串。
while read 1ine
<==进入描坏。
do
b--..dab.]
<循环日志中的每一行都通过grep进行过滤，如果符合要求，则
wc后的值会等于1，表示查找到了。
then
echo $line
<打印查找到的行
break
---
## Page 277
第12章循环控制及状态返四值的应用实践258
fi
done</tmp/zhiwen.1og<==读取加客事的日志。
执行结果如：
[root8oldboy scripts]sh 12_4_2.sh
1dcca23355272056f04fe8bf20edfce0 -5
该4fe8bf20ed对应的md5sum加密前的随机数为数字5。
特别说明：可访问如下地址或手机扫二维码查看第12章的核心脚本代码。
http://oldboy.blog.51cto.com/2561410/1855261
---
## Page 278
Linux
第13章
Shell数组的应用实践
13.1Shell数组介绍
13.1.1为什么会产生Shell数组
通常在开发Shell脚本时，定义变量采用的形式为“a=1;b=2:c=3"，可如果有多个
变量呢？这时再逐个地定义就会很费劲，并且要是有多个不确定的变量内容，也会难以
进行变量定义，此外，快速读取不同变量的值也是一件很痛苦的事情，于是数组就诞生
了，它就是为了解决上述问题而出现的”。
13.1.2什么是Shell数组
如果读者有过其他语言的编程经历，那么想必会熟悉数组的概念。简单地说，