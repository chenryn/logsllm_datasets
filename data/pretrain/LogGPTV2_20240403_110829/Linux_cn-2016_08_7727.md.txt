---
**作者**: TONY BRADLEY  
**类别**: 观点

**评论数据**:
- 日期: 2016-08-29 11:29:14
- 消息: 还是不理解
- IP地址: 110.96.139.116
- 用户名: 来自北京的 Firefox 48.0|Windows 7 用户

**统计信息**:
- 评论数: 1
- 收藏次数: 0
- 点赞数: 0
- 分享次数: 0
- 浏览量: 3939

**发布日期**: 2016-08-29 10:54:12  
**编辑推荐**: 否  
**摘要**: DevOps通常被认为是一种文化而非技术。尽管有效的DevOps实践需要特定工具和经验，但其成功的核心在于企业内部团队和个人之间的高效协作，以实现更快、更高效的工作流程。

**来源链接**: http://devops.com/2016/05/16/scaling-collaboration-devops/  
**文章ID**: 7727  
**是否为翻译文章**: 是  
**大图链接**: /data/attachment/album/201608/29/105415syslywh0rfhdmr55.jpg  
**永久链接**: /article-7727-1.html  
**缩略图链接**: /data/attachment/album/201608/29/105415syslywh0rfhdmr55.jpg.thumb.jpg  
**相关文章**: 无  
**审阅者**: 无  
**选择器**: 无  
**标签**:
- DevOps

**标题图片**: 有  
**标题**: DevOps 的弹性合作  
**更新日期**: 2016-08-29 10:54:12  
**译者**: Bestony  
**校对**: wxy

---

![](/data/attachment/album/201608/29/105415syslywh0rfhdmr55.jpg)

熟悉DevOps的人普遍认为它更多体现为一种文化而非单纯的技术。虽然在实践中，DevOps确实依赖于一些特定的工具和技术知识，但其实现成功的基石在于组织内部如何促进团队与个人间的有效协作，从而能够更加迅速且高效地完成任务。

大多数DevOps平台及工具设计时均考虑到了可扩展性。由于DevOps环境往往基于云架构，并具有高度动态性，因此对于DevOps软件来说，具备实时伸缩的能力以解决可能出现的问题至关重要。这种需求同样适用于人的因素，只是在人这一方面，灵活性的合作方式显得尤为重要。

跨部门的协同工作是确保DevOps项目成功的关键要素之一。优秀的代码开发最终必须转化为实际产品才能为客户创造价值。企业在面临挑战时，需要找到方法来无缝连接各个环节，同时尽可能提高速度并保持自动化水平，而不牺牲质量或性能。那么，企业该如何优化从代码编写到部署的整个过程，同时保证维护工作的透明度、可控性和合规性呢？

### 新兴趋势
首先，让我们通过分享来自[451 Research](https://451research.com/)的一些关于DevOps及其广泛应用的数据来提供一些背景信息。目前，云计算、敏捷开发以及DevOps的理念和实践正变得越来越重要。根据451 Research的研究显示，越来越多的企业正在采用这些技术，包括容器技术，在生产环境中也得到了广泛的应用。

采用这些技术和方法有很多好处，比如增强灵活性和响应速度、降低成本、提高适应能力和可靠性等。然而，据451 Research指出，团队也面临着诸如缺乏相应技能人才、新兴技术不够成熟、成本高昂以及安全问题等诸多障碍。

在“[Voice of the Enterprise: SDI Q4 2015 survey](https://451research.com/)”报告中，超过一半（57.1%）的受访者表示他们计划稍后或最后才开始采用新技术；而近一半（48.3%）则认为自己属于早期采用者。

这种普遍态度也体现在其他调查结果中。当被问及容器技术的应用情况时，约半数（50.3%）受访者表示并不打算使用；另外49.7%的人则处于规划、试点或积极使用阶段。近三分之二（65.1%）的受访者表示他们使用了敏捷开发方法来构建应用程序，但只有不到四成（39.6%）的人表示正在全面实施DevOps策略。值得注意的是，尽管敏捷软件开发已经存在多年，但451 Research观察到容器技术和DevOps的采纳率正在显著上升，这标志着一个新趋势的出现。

当被要求列出前三大IT痛点时，最常见的答案包括成本/预算限制、人力资源短缺以及遗留系统问题。随着企业向云端迁移、采用DevOps模式及容器化解决方案，这些问题都需要得到妥善处理，并结合合理的技术规划和高效的团队协作加以解决。

### 当前状况
软件行业正处于快速变革之中，很大程度上得益于DevOps推动下的跨业务集成式软件开发模式的发展。如今，软件开发不再局限于封闭的小圈子内，而是变得更加开放、社会化。

几年前还仅存在于理论探讨中的概念与方法如今已迅速成长为当今驱动价值创造的主要技术和框架。企业利用敏捷、精益管理、虚拟化、云计算、自动化及微服务等理念简化开发流程，使工作变得更加高效。

为了应对当前挑战并在竞争中脱颖而出，公司必须完成一系列关键任务。其中最主要的挑战是如何在加快开发速度的同时控制成本。团队需要消除IT与其他业务领域之间的壁垒，在技术驱动的竞争环境中提供更多有价值的合作伙伴关系。

在这个过程中，敏捷开发、云计算、DevOps以及容器技术发挥着重要作用，而将这一切联系在一起的正是有效的团队合作。每种技术和方法都有其独特的优势，但真正的价值来自于团队作为一个整体进行规模化协作的能力，以及所使用的工具和平台的支持。此外，成功的DevOps实施还需要除开发人员和IT运维团队之外的其他利益相关方参与进来，例如安全专家、数据库管理员、存储专家及业务分析师等。

### 合作即平台
有一些在线服务和平台，如GitHub，促进了开发者之间的合作。这类在线平台不仅作为代码仓库发挥作用，还能带来超出单纯代码存储的价值。

像这样的[协作平台](http://devops.com/events/analytics-of-collaboration-on-github/)之所以有助于开发者和团队合作，是因为它们提供了一个可以共享和讨论代码及流程的社区环境。管理者可以通过该平台监控进度并跟踪即将发布的代码版本。开发人员可以在一个受控环境中测试新想法，然后有效地将其传达给适当的团队成员。

敏捷开发和DevOps的一个关键要素就是允许开发人员快速测试新功能并收集反馈。目标是在不影响产品质量的前提下，避免浪费时间在基础设施建设或召开额外会议讨论细节上。例如，通过GitHub这样的平台，参与者可以轻松发起代码审查请求，无需安排专门的时间来进行面对面交流，这样可以让开发者继续专注于手头的工作，从而提高生产力和满意度。

Sendachi公司的Steven Anderson指出，GitHub不仅仅是一个协作工具，也是一个支持持续集成和提升代码质量的利器。

协作平台的另一个优点是能够让大型团队拆分成多个小团队，每个小组可以更专注地处理特定组件。此外，除了代码管理外，这些平台还提供了文件共享等功能，进一步模糊了技术与非技术贡献之间的界限，增加了项目的可见度和透明度。

### 合作是关键
毫无疑问，合作对于DevOps文化的形成至关重要，也是在当今快节奏环境下保持竞争优势的重要因素。高层的支持以及内部倡导非常重要。同时，团队也需要接受文化上的转变——朝着共同目标努力，融合不同职能部门的专业技能。

建立这样一种文化，离不开高效的合作机制。一个协作平台是实现灵活合作不可或缺的部分，因为它简化了生产活动，减少了重复劳动，并能产出更高品质的结果。

---

原文链接：[DevOps.com](http://devops.com/2016/05/16/scaling-collaboration-devops/)  
作者：[TONY BRADLEY](http://devops.com/author/tonybsg/)  
译者：[Bestony](https://github.com/Bestony)  
校对：[wxy](https://github.com/wxy)  
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出