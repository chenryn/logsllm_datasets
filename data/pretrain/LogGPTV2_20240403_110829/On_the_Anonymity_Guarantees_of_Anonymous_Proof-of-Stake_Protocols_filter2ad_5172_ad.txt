implying
] = p
of
the
PL
IV. A LOWER BOUND ON THE ANONYMITY OF STATE
MACHINE REPLICATION
In this section, we describe a lower bound on the anonymity
of state machine replication protocols tolerating a f fraction
of Byzantine parties. In particular, we show that there exist
executions of deterministic state machine replication protocols
in a permissioned setting where an honest party does not
obtain better than (1−2f )-anonymity. In the following section
we then show how such a lower bound can be used by an
adversary to learn whether an honest party (or a set of honest
parties) hold a stake of (1 − 2f ) fraction or higher.
A. Deﬁnitions
We start with deﬁning terminology required for our lower
bound. A state-machine replication protocol provides clients
with the same interface as that of a single non-faulty server
storing a sequence of values. Typically, these values are stored
as blocks, where each block contains a set of transactions, each
signed by the clients. We model the sequence of blocks output
by a party Pi via a write-once array [Bi
2, . . . ] (initialized
to ⊥ values), where Bi
j indicates the j-th block output by Pi.
Deﬁnition 1 (State Machine Replication). Let Πf be a proto-
col executed by parties P1, . . . , Pn who receive transactions as
input and maintain a local array B as described above. We
say that Πf is an f-secure z-live state machine replication
protocol if the following properties hold when up to an f
fraction of parties is Byzantine:
1, Bi
blocks Bi
k and Bj
• Consistency: If
two honest parties Pi and Pj output
k in slot k, then Bi
• External validity: The output block is either ⊥ or each
transaction included in the output block is signed by a
client.
k = Bj
k.
• Liveness: Any transaction that is input to an honest z
fraction of the n parties is eventually output by every
honest party in some block.
We want to capture the notion of anonymity with state
machine replication protocols. The notion of anonymity allows
a party sending a message in the protocol execution to remain
indistinguishable from a group of other parties. In particular,
we deﬁne a protocol message as a-anonymous if a party
sending a message can be anonymous among an a fraction
of all parties. We will now present a deﬁnition for a single-
shot anonymous state machine replication protocol:
Deﬁnition 2 (Single-shot anonymous state machine repli-
cation). Let Πf,z,t,a be a protocol executed by parties
P1, . . . , Pn who receive transactions as input and output a
block B. We say that Πf,z,t,a is an f-secure (z, t)-live a-
anonymous single-shot state machine replication protocol if
the following properties hold when up to an f fraction of
parties is Byzantine:
• Consistency: If
two honest parties Pi and Pj output
• External validity: The output block is either ⊥ or each
transaction included in the output block is signed by a
client.
blocks Bi and Bj, then Bi = Bj.
• Liveness: Any transaction that is input to at least an
honest z fraction of the n parties more than t time units
before the start of the protocol is output by every honest
party.
• Anonymity: The protocol obtains a-anonymity, i.e., every
message sent by an honest party in the protocol
is
anonymous among an a fraction of parties participating
in the protocol.
Each time unit described in this section equals ∆ time.
For simplicity, in this section, we always refer to integral
time units. Note that the above deﬁnition makes the liveness
constraint concrete: it speciﬁes a time delay before the start
of the execution of the single-shot SMR protocol such that if
a z fraction of honest parties receive an input, the protocol
should output
the liveness
constraint provided by the protocol is weak — only old enough
transactions are required to be output by the parties.2 Observe
that z ≤ 1 − f is a trivial bound on z since a protocol needs
to be live when all honest parties receive a transaction.
B. A (1 − 2f )-anonymity Lower Bound
it. If the value of t is large,
An adversary can control an f fraction of Byzantine parties
and can know the state of each of these parties. Hence, (1−f )-
anonymity is a trivial lower bound on the anonymity that can
be obtained for any protocol. In the following, we present a
tighter lower bound of a = (1−2f )-anonymity for an f-secure
(z, t)-live a-anonymous single-shot state machine replication
protocol Πf,z,t,a when f < 1/3.
Intuition. Let us ﬁrst reason why this holds for t = 0, i.e., for
a protocol that guarantees an output of v when (1−f ) fraction
of honest parties have received the same input v before the
2We assume that parties in the protocol execution have large enough
bandwidth available to them and are as such not constrained by the available
bandwidth.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:16:55 UTC from IEEE Xplore.  Restrictions apply. 
1825
Figure 5. Intuition for the lower bound. The ﬁgure shows three different
execution worlds. In each world, the x-axis represents time and the vertical
line represents the start of execution. Parties are split into three groups P , Q,
and R of sizes f, f, and 1 − 2f respectively. If a group of parties is placed
before the vertical line, then they have received an input v before the start of
execution.
Figure 6. The notation World W i,i−1
A|B . A world representing the times
when parties receive inputs. The x-axis represents time units before the start
of execution. While times are represented as integers, they should be thought
of as integral multiples of ∆. In this world, parties in set A and B receive
inputs i and i − 1 time units before the start of execution.
start of the protocol execution. The value of a = 1 − 2f.
Suppose the parties are split into three sets P , Q, and R of
sizes f, f, and (1 − 2f ) respectively. If the protocol starts in
a world (World 2 in Figure 5) with no faulty parties and with
an input v that is sent to parties in P and R, then for the
liveness property to hold, all honest parties output v. Hence,
if the protocol required parties in R (and also P ) to send a
message that resulted in the output to be v, then the protocol
obtains anonymity no better than 1 − 2f. This is because in a
different world (World 1 in Figure 5), parties in P could be
corrupt and honestly following the protocol speciﬁcation, and
hence R does not obtain more anonymity than the size of its set
(recall that parties in Q did not obtain the input and R cannot
detect that P is corrupt if it follows the protocol speciﬁcation).
Thus, it remains to prove that corrupt P ’s messages alone does
not result in all honest parties to output v in World 2. Observe
that if this were the case, then in a different world (World 3
in Figure 5) where only honest P obtains the input, the output
will still have been v (since R’s contribution did not matter
and the protocol is deterministic). However, in this world, P
obtains f < 1 − 2f-anonymity for f < 1/3.
Formal lower bound. We now present our lower bound for
a general t, z, and f < 1/3. Throughout, we assume that the
parties are split in three groups P , Q, and R that respectively
contain f, f, and 1 − 2f fractions of all parties. We use the
notation W i,i−1
A|B to denote the order in which an input v arrives
at sets of parties A and B in a given world (see Figure 6).
Speciﬁcally, the notation W i,i−1
A|B means that in this world, the
input v is received by parties in set A and set B at i and i− 1
units of time respectively, before the start of the protocol. To
clarify, if a party receives an input i = 0 time units before the
start of the protocol, the party has received the input when the
protocol starts. If i < 0, then the party does not have access
to the input at the start of the protocol. Also, observe that due
to the ∆-synchrony constraint, a group of honest parties can
only receive an input at most one time unit (∆ time) after the
ﬁrst honest party receives this input. This explains why the
time units i and i − 1 are always consecutive in any world.
Our lower bound results will require sending only one input
to different parties at different times, and hence, the notation
W i,i−1
A|B sufﬁces. Moreover, since only one input v is sent,
the output is either v or a ⊥. We now prove a sequence of
lemmas that help us eventually prove the desired lower bound
on anonymity. Please refer to Figure 7 to aid the understanding
of Lemmas 1 and 2.
Lemma 1 (R-anonymity). Assume Πf,z,t,a provides better
than (1 − 2f )-anonymity and f < 1/3. Let 0 ≤ (cid:96) ≤ t. If
the output of Πf,z,t,a in World W (cid:96),(cid:96)−1
Q|P,R is ⊥ then the output
of Π in World W (cid:96),(cid:96)−1
Q,R|P is also ⊥.
the output of W (cid:96),(cid:96)−1
Q|P,R is ⊥.
Proof. By assumption,
In
World W (cid:96),(cid:96)−1
Q,R|P parties in Q and R receive input v, (cid:96) time
units before the start of the protocol. If the output of Πf,z,t,a
in W (cid:96),(cid:96)−1
Q,R|P were v then parties in R do not obtain anonymity
better than 1−2f. This is because the protocol is deterministic,
and the only aspect that changed is the fact that parties in R
received the input earlier. This must be a result of at least one
party in R sending a message based on the input v.
This contradicts the claim that Πf,z,t,a provides better
that (1 − 2f )-anonymity. Therefore, the output of Πf,z,t,a in
worlds W (cid:96),(cid:96)−1
Q|P,R and W (cid:96),(cid:96)−1
Q,R|P must be ⊥.
Lemma 2 (P -anonymity). Assume Πf,z,t,a provides better
than (1 − 2f )-anonymity and f < 1/3. Let 0 ≤ (cid:96) ≤ t. If
the output of Πf,z,t,a in World W (cid:96),(cid:96)−1
Q,R|P is ⊥ then the output
P|Q,R is also ⊥.
of Πf,z,t,a in World W (cid:96)+1,(cid:96)
Proof. By assumption, the output of W (cid:96),(cid:96)−1
Q,R|P is ⊥. The only
difference between World W (cid:96),(cid:96)−1
P|Q,R is in
P receiving the input (cid:96) + 1 time units earlier instead of (cid:96) − 1
time units. If the output of Πf,z,t,a in world W (cid:96)+1,(cid:96)
P|Q,R is v, then
parties in P do not obtain better than f < 1 − 2f anonymity.
This is because the protocol is deterministic, and the only
aspect that changed is the fact that parties in P received the
input earlier. This must be a result of at least one party in P
sending a message based on the input v. This contradicts the
claim that Πf,z,t,a provides better that (1 − 2f )- anonymity.
Hence, the output of Πf,z,t,a in World W (cid:96)+1,(cid:96)
Q,R|P and World W (cid:96)+1,(cid:96)
P|Q,R must be ⊥.
Lemma 3 (Q-anonymity). Assume Πf,z,t,a provides better
than (1 − 2f )-anonymity and f < 1/3. Let 0 ≤ (cid:96) ≤ t. If
the output of Πf,z,t,a in World W (cid:96),(cid:96)−1
P,R|Q is ⊥ then the output
Q|P,R is also ⊥.
of Πf,z,t,a in World W (cid:96)+1,(cid:96)
Proof. Follows similarly to the proof of Lemma 2.
Lemma 4 (Invariance of Anonymous Output). Assume
Πf,z,t,a provides better than (1−2f )-anonymity and f < 1/3.
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:16:55 UTC from IEEE Xplore.  Restrictions apply. 
1826
PRQExecution startstimePRQPRQWorld 1World 2World 3AB……ii-1i-20-1i+1Execution startsFigure 7. Figure representing the worlds used in Lemmas 1 and 2.
P,R|Q is ⊥.
For any 0 ≤ (cid:96) ≤ t, the output of Πf,z,t,a in (i) World W (cid:96),(cid:96)−1
Q,R|P
is ⊥, and (ii) in World W (cid:96),(cid:96)−1
Proof. We prove the statement by induction.
Base case: (cid:96) = 0. We ﬁrst note that when (cid:96) = 0, the output
of Πf,z,t,a in World W 0,−1
Q|P,R must be ⊥. If the output was
v, Πf,z,t,a would not provide better than f < (1 − 2f )-
anonymity to parties in Q. This is because in this world, Q is
the only set of parties who have received v before the start of
the execution and who could have participated with input v.
Hence, the output of Πf,z,t,a in W 0,−1
Q|P,R is ⊥. Next, it follows
from Lemma 1 that the output of Πf,z,t,a in World W 0,−1
Q,R|P
is also ⊥.
Starting with World W 0,−1
P|Q,R and using a similar argument,
P,R|Q is ⊥.
we can show that the output in World W (cid:96),(cid:96)−1
Inductive step: (cid:96) = k.
Proposition 1. Assume Πf,z,t,a
(1 − 2f )-anonymity.
worlds W k,k−1
Πf,z,t,a in worlds W k+1,k
If
P,R|Q is ⊥,
P,R|Q and W k+1,k
the
Q,R|P and W k,k−1
output
Q,R|P is also ⊥.
provides better
than
in
then the output of
of Πf,z,t,a
P,R|Q and W k+1,k
Q,R|P and W k,k−1
By inductive hypothesis we know that output of Πf,z,t,a
in worlds W k,k−1
P,R|Q is ⊥. Using this hypothesis
and respectively applying Lemmas 2 and 3, we can state that
the output of Πf,z,t,a in worlds W k+1,k
P|Q,R and W k+1,k
Q|P,R is also
⊥. Next, we can apply Lemma 1 to state that the output of
Q,R|P is also ⊥. This proves
Πf,z,t,a in worlds W k+1,k
the proposition.
Theorem 1. For any deterministic single-shot anonymous
state machine replication protocol Πf,z,t,a satisfying Deﬁni-
tion 2, there exists an execution that cannot provide better
than a = (1 − 2f )-anonymity when z = 1 − f and f ≤ 1/3 .
Proof. We prove by contradiction. Let Πf,z,t,a be a protocol
that achieves better than (1 − 2f )-anonymity, and (z, t)-
liveness.
Consider a World W t,t−1
Q,R|P where all parties are honest, and
Q and R receive input v, t time units before the start of the
protocol, while parties in P receive it t − 1 time units earlier.
Due to the liveness property, the output of the honest parties
in Πf,z,t,a in World W t,t−1
Q,R|P must be v.
Now consider a different World ˆW t,t−1
Q,R|P that is exactly the
same as World W t,t−1
Q,R|P except that parties in Q are corrupt.
However, the parties in Q follow the protocol speciﬁcation.
Hence, for parties in R (and P ), this world is indistinguishable
Q,R|P . Hence, the honest parties in P and R
from World W t,t−1
will still output v.
However, this contradicts Lemma 4 which states that, for a
Πf,z,t,a that provides better than (1− 2f )-anonymity and f <
1/3, for any 0 ≤ (cid:96) ≤ t, the output of Πf,t,a in World W (cid:96),(cid:96)−1
Q,R|P
must be ⊥.
Interpreting the lower bound constraints. We now make a
few remarks about this lower bound. First, our lower bound
statement ﬁxes a liveness constraint, and then argues that a
protocol satisfying this constraint cannot obtain anonymity for
some execution. While we do not prove the converse, it should
hold true too: if we ﬁx an anonymity constraint (for instance,
to be (1 − f )), it should be the case that the protocol will not
be live.
Second, the arguments in the lower bound assume that par-
ties use an input during the execution only if it was available to
them at the start. However, there may exist protocols that use