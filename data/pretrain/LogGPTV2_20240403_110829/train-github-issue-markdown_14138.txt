By **fuzxxl**:

The following code is compatible with Go 1.2 but fails to compile with the most recent Go tip (4b3cdcb02f2d).

```go
package cgotest

/*
#cgo CFLAGS: -std=c99
#pragma pack(1)
struct foo {
    char c;
    int x;
};
*/
import "C"
import "unsafe"

func foo(f *C.struct_foo) int {
    return int(f.x)
}
```

The corresponding `_cgo_type.go` file generated by the compiler looks like this:

```go
type _Ctype_char int8
type _Ctype_int int32
type _Ctype_struct_foo struct {
    c   _Ctype_char
    _   [4]byte
}
```

In Go 1.2, the type definition for `struct_foo` included the `x` field instead of an underscore. This change appears to be a regression.

### Explanation:
- The original code defines a C struct `foo` with two fields: `char c` and `int x`.
- In Go 1.2, the generated Go type for `struct_foo` correctly included both fields.
- However, in the latest Go tip, the `x` field is replaced by an underscore (`_`), which is a padding field. This results in the `x` field being inaccessible from Go, leading to a compilation error.

This change seems to be a regression, as it breaks the expected behavior of accessing the `x` field from Go.