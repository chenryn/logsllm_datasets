(e.g., trafﬁc between a CDN front-end server and a back-end server
or between a Web proxy and a Web server), as well as trafﬁc ex-
changed between automated hosts such as crawlers or auctioneers
and any other Web server.
3. DATA SETS
In this work we rely on measurements collected at a diverse set
of vantage points.
1The bidders may also contact other entities (i.e., trackers) to get
information regarding the proﬁle of the visitor [33, 59].
IXPs: Packet-sampled traces collected at two Internet eXchange
Points (IXPs), which allow us to study back-ofﬁce trafﬁc
in an inter-domain environment, as exchanged between hun-
dreds of networks [6].
ISP: Anonymized packet-sampled traces collected from two transat-
lantic links from a Tier-1 ISP, providing a view of back-ofﬁce
trafﬁc on long-distance links.
Access network: Anonymized packet dumps collected in a resi-
dential network of a Tier-1 ISP, revealing front-ofﬁce trafﬁc
between end users and servers.
CDN: Web server logs from multiple servers in different locations
within a large commercial CDN. These logs give us an inside
view of back-ofﬁce trafﬁc created by a CDN.
Active measurements: Probes of IP addresses and DNS reverse
lookups to identify Web servers.
This diverse set of traces allows us to study back-ofﬁce trafﬁc
in a variety of locations, including between domains, on backbone
links, and within a CDN. Table 1 summarizes the properties of our
data sets.
The IXP traces are collected from the public switching infras-
tructure at two European IXPs. This includes a large IXP (L-IXP)
with around 500 members and a medium-sized IXP (M-IXP) with
around 100 members. Among the member ASes there are many
CDNs, Web hosting services, cloud providers, and large commer-
cial Web sites. We collect sFlow records [51] with a 1 out of 16K
sampling rate. sFlow captures the ﬁrst 128 bytes of each sampled
Ethernet frame, providing us access to full network- and transport-
layer headers and some initial bytes of the payload, allowing for
deep packet inspection (DPI).
The ISP traces are collected from two transatlantic links on the
backbone of a large European Tier-1 ISP. These links carry mainly
transit trafﬁc. We collect anonymized packet traces with a random
packet sampling rate of 1 out of 1K. We also collect unsampled
anonymized packet dumps in a residential network with about 20K
end users of the same ISP.
The logs from the large commercial CDN encompass the activ-
ity of all servers at one hosting location in each of ﬁve large cities.
Each log entry contains TCP summary statistics including endpoint
IPs, number of bytes transferred, and initial TCP handshake round-
trip latency. In addition, we received a complete list of all IP ad-
dresses used by the CDN infrastructure.
We also use active measurement data from the ZMap Project [25].
This data set contains a list of IPs, i.e., servers, that are responsive
to GET requests on port 80 (HTTP) and SSL services on port 443
(HTTPS), spanning the time period from October 2013 to January
2014. In addition, we also make use of the data made public by the
259Type
Exchanges
Transit ISP
Eyeball ISP
Server
Name
L-IXP
M-IXP
BBone-1
BBone-2
RBN
CDN
Daily trafﬁc rate
11,900 TB
1,580 TB
40 TB
70 TB
35 TB
350 TB
Collection
sFlow (1/16K)
sFlow (1/16K)
Period
37th week 2013
4th week 2014
Packet sampled (1/1K)
Packet sampled (1/1K)
Packet dumps (unsampled)
Server logs (unsampled)
5th Feb. - 12th Feb. 2014
4th week 2014
9th. Jan. 2014
24-25 Apr. 2014
% TCP % Web of TCP
78.27%
84.40%
97.22%
92.22%
64.58%
86.30%
78.74%
73.87%
79.45%
74.83%
95%
95%
Table 1: Summary of the vantage points and collected traces.
Name
L-IXP
M-IXP
BBone-1
BBone-2
#IPs Method
C-O (%)
S-O (%) Dual (%)
DPI+ZMap
DPI+ZMap
45.79M DPI
1.9M DPI
1.1M DPI
4.5M DPI
DPI+Zmap
DPI+ZMap
96.90
93.85
95.15
92.86
92.26
86.62
95.54
93.97
2.74
2.74
4.62
4.62
7.56
7.56
4.36
4.36
0.36
3.40
0.24
2.52
0.18
5.82
0.09
1.67
Table 2: Web activity of IPs: client-only (C-O), server-only (S-
O), or both (dual) across vantage points.
authors of [18, 56] that disclose the set of IPs used by the Google
infrastructure. When combining Google IPs with one of our packet
traces, we use the snapshot of the Google IPs that corresponds to
the last day of the trace.
4.
IDENTIFYING BACK-OFFICE TRAFFIC
Given the above characteristics of back-ofﬁce Web trafﬁc, we
next describe how we identify a signiﬁcant fraction of it within our
data sets. Our methodology involves three steps. First, we classify
all IPs based on whether they are involved in any Web activity.
Second, we classify their activities as either Web client, Web server,
or both—client and server. Finally, we identify auctioneers and
crawlers among the clients, bidders among the servers, and Web
proxies among those that are acting as both clients and servers.
4.1 Web server endpoints
We focus only on those IPs for which we see Web activity in our
traces, meaning either HTTP or HTTPS activity. For this we rely
on well-known signatures to detect HTTP requests (GET, POST)
and responses (HTTP/1.{0,1}) on any TCP port. For HTTPS
we use signatures to match packets to/from port 443 that contain a
SSL/TLS hand-shake, i.e., Client Hello and Server Hello
messages [15]. We focus on IPv4, since IPv6 trafﬁc accounts for
less than 1% of the trafﬁc across all data sets.
The result is a set of Web server endpoints, i.e., tuples that con-
tain the IP address and the corresponding port number, as identiﬁed
using the above-mentioned signatures. We then refer to all pack-
ets that are sent to/from one of the Web endpoints as Web trafﬁc.
Our methodology ensures that in the case of server IPs also hosting
other applications on different ports (e.g., email), only their Web-
related trafﬁc is considered. Table 1 shows the percentages of Web
trafﬁc within our different data sets. As expected, this trafﬁc consti-
tutes a large fraction of the TCP trafﬁc, ranging from 64% to 95%
in each data set.
4.2 IP: Client/server/dual roles
Given that we have identiﬁed Web server endpoints, we next
classify the Web activity of IP addresses to be client-only, server-
only, or both (referred to as dual behavior in the following). We say
that an IP address acts only as server if all of its trafﬁc is related to
its previously identiﬁed server-endpoint(s) (typically on port 80).
If we see this IP address acting only as client, i.e., sending requests
and receiving replies from other server-endpoints, it is classiﬁed as
client only. If we see an IP address both acting as client and as
server i.e., it runs a server on a speciﬁc port but also issues requests
towards other servers, we classify its behavior as dual.2
Depending on the vantage point however, one may not see all
Web activity a host is involved in. For example, a proxy server
might exhibit only client-activity when monitored in the core of
the Internet, and only server-activity when monitored in an access
network. To tackle this limitation, we rely on a combination of
passive and active measurements to uncover more IPs with dual-
behavior as follows: we obtain a list of client IPs via DPI from our
traces and then use the ZMap data set to check if these IPs respond
to HTTP(S) queries. The ZMap data set provides lists of IPs that
answer to a GET on port 80 or to an SSL handshake on port 443.
Thus, if we see an IP address acting only as client, but we ﬁnd it in
the ZMap data set, we classify its behavior as dual.
Table 2 shows the classiﬁcation of IPs when only relying on DPI
(ﬁrst row for each vantage point), as well as after taking the ZMap
data set into account (second row for each vantage point). We make
three observations. First, with only DPI, roughly 90% of IPs are
classiﬁed as client-only across all data sets. Second, a signiﬁcant
fraction of the server IPs also show client behavior e.g., with DPI
we see in the L-IXP trace that 11% of the total number of servers
also act as clients. Third, adding more information for identify-
ing dual behavior helps e.g., with DPI+ZMap we see in the L-IXP
trace that 55% of the servers behave also as clients. Indeed, the
fraction of IPs acting both as clients and servers increases signiﬁ-
cantly across all vantage points when combining active and passive
measurements.
There are two main caveats when using this classiﬁcation ap-
proach, which likely result in some overcounting of dual hosts on
the one hand, as well as some undercounting on the other hand.
One factor contributing to possibly overcounting dual hosts in-
clude the use of dynamically assigned IP addresses. If a dual host
is assigned different IP addresses at different times, then each of
those IP addresses may be classiﬁed as a dual host, even though
at other times the same IP addresses act only as servers or, more
commonly, only as clients. Dynamically assigned IP addresses are
typically found in residential networks. Due to bandwidth limi-
tations, these addresses do not serve a signiﬁcant fraction of Web
trafﬁc or a signiﬁcant fraction of Web requests. Nevertheless, to
minimize the impact of dual hosts with dynamically assigned ad-
dresses on our statistics, we only count as servers IP addresses that
appear in two consecutive snapshots of the ZMap data set, i.e., they
replied to HTTP requests issued two weeks apart.
On the other hand, our methodology may undercount dual hosts
because is not able to detect more complex cases of dual behav-
2Recall that requests are typically issued with ephemeral source
port numbers.
260s
t
s
e
u
q
e
r
i
d
e
v
e
c
e
r
105
104
103
102
101
100
100
101
102
103
sent requests
104
100
s
t
s
e
u
q
e
r
f
o
%
80
60
40
20
0
L−IXP
M−IXP
BBone−1
BBone−2
100
80
0
20
40
60
% of the IPs
t
u
o
−
n
a
f
t
s
e
u
q
e
r
104
103
102
101
100
100
101
102
103
sent requests
104
(a) Scatterplot: # sent vs. received requests
sampled per IP in the L-IXP trace.
(b) Cumulative sum: # of requests sampled
per IP, ranked by activity.
(c) Scatterplot: # sampled sent requests vs.
fan-out per IP in the L-IXP trace.
Figure 3: Web IP activity: request frequency and fan-out.
ior, e.g., if a server has multiple interfaces and thus sends/receives
trafﬁc from multiple IP addresses, each acting only as a client or
server. Furthermore, while we can uncover the server activity of a
host that acts only as a client in our traces using the ZMap data set,
we lack the tools to uncover the opposite case i.e., to uncover the
client activity of a host that acts only as a server in our traces.