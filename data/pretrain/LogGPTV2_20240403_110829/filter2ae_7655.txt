# 2022年工业信息安全技能大赛“望岳杯”锦标赛 wp
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x01 恶意文件
动调动调
OD直接动调，更具xxx的流程图可以看到程序的整体结构，然后结合流程图使用OD动调
最终ip地址是存在了`[ebp+ecx-0x14]`的位置
将这一处跳转和两处的exit nop掉
跟踪到`[ebp+ecx-0x14]`在内存中的位置，一直F8就可以了
这里是端口，小端排序 `1F
57`，转换成十进制就是8023，前边在存储ip地址的时候就已经存到`[ebp-0x1D0]`的位置了，所以最终ip：1.15.228.170:8023
**flag{1.15.228.170:8023}**
## 0x02 攻击行为还原
FlaG.txt有密文
`c=1566077545968868311749088444723100549024925747577903610033503`
Id_rsa有
`-----n=1606938044309278499168642398192229212629290234347717645487123-----`
`-----e=65537-----`
在线分解n
    #coding:utf-8
    import binascii
    from libnum import n2s,s2n
    import base64
    def gcd(a, b):
        if a ?/\'\"\\|'
    for i in s:
        for j in s:
            for k in s:
                for l in s:
                    for m in s:
                        #print(1)
                        md5 = hashlib.md5()
                        c = str(i) + '1_1001_10_600_600_' + str(j) + str(k) + '00' + str(l) + str(m) + '7_202103301539'
                        #print(c)
                        md5.update(c.encode('utf-8'))
                        d = md5.hexdigest()
                        #print(c)
                        if d[:4] == 'b9fd' and d[6:9] =='9d5':
                            print(c)
                            print(d)
**flag{1500.87}**
## 0x06 文件格式分析
使用binwalk查看文件发现文件是一个zip压缩包，于是使用010editor修改文件头为504B，修改后缀为zip并解压文件，解压后打开文件
使用basecrack工具进行解码，得到flag
**flag{W3lc0Me_t0_Xinx1}**