new  information  for  the  next  step,  we  assume  the  time 
needed  for  combining  is  irrelevant  and  assumed  to  be 
zero.  This  assumption 
is  especially  appropriate  for 
heartbeat-style failure detectors since a gossip  message is 
typically  composed  by  a  list  of  identifiers  of  all  the 
is  no  global 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:10:56 UTC from IEEE Xplore.  Restrictions apply. 
members  and  the  corresponding  values  of  their  heartbeat 
counters.  We  assume  the  fail-stop  failure  model  is 
employed  and  the  process  crashes  are  permanent,  or 
equivalently, a process that recovers from a crash will get 
a new identity. 
Local  broadcasts  are  inherently  unreliable:  messages 
may  be  delayed  or  dropped  by  communication  links. 
However, we assume that in most cases, a local broadcast 
is  delivered 
to  each  recipient  with  some  message 
propagation delay smaller than a reasonable time, denoted 
as TLB (similar assumptions can be found in the literature 
for  end-to-end  message  delay  [2,  12]).  Otherwise,  for 
simplicity,  that  message  is  treated  as  lost.  To  make  our 
work  more  general,  we  assume  there  is  no  location 
method,  for  example  Global  Position  System  (GPS), 
available to the nodes in the network. We do not consider 
MAC layer issues (e.g., collision detection) in  this paper, 
because  (i)  we  want  to  decouple  the  effect  of  the  MAC 
layer from the effect of gossiping, and (ii) since our gossip 
schemes  are  designed  for  middleware  services,  MAC 
layer  performance  is  also  affected  by  other  concurrent 
traffic 
flow 
the  network  and  becomes  very 
unpredictable. 
in 
4. Foundation and Basic Structure 
failure  detection 
First,  for  simplicity,  we  assume  there  is  exactly  one 
member  in  each  mobile  host  and  each  member  uses  its 
mobile host NID as its unique identifier to the rest of this 
paper. Such assumption is not unreasonable in wireless ad 
hoc networks since the mobile hosts are usually organized 
together for some special task, such as a rescue mission or 
automated  battlefield  management.  In  practice, 
the 
proposed  gossiping  schemes  can  be  adapted  to  operate 
over  some  virtual 
infrastructure  (e.g.,  a  connected 
dominating  set)  and  each  node  disseminates 
the 
integrated,  host-level 
information. 
However, 
the  above  assumption  provides  a  useful 
benchmark  for  performance  evaluation.  To  discuss  the 
heartbeat-style 
failure  detection  services  based  on 
gossiping,  some  foundations  and  notations  described 
below  are  used  according  to  those  proposed  by  van 
Renesse  et al.  [2].  However,  the  underlying  gossiping 
mechanism  is  totally  different.  First,  failure  detection  is 
based  on  a  list  of  member  identifiers  and  the  values  of 
their  heartbeat  counters  (we  denote  this  list  as  hbc_list). 
Each  member  maintains  its  hbc_list.  Periodically,  each 
member  increases  the  value  of  its  heartbeat  counter, 
updates  its  hbc_list,  and  forwards  this  information  by 
transmitting a gossip message. The details of actions upon 
receiving a gossip message can be found in [2]. 
The  following  settings  are  slightly  different.  Each 
member  transmits  its  gossip  message  at  regular  intervals. 
Because  the  resources  are  scarce  in  wireless  ad  hoc 
networks, we have to take advantage of the physical-layer 
broadcasting  feature  of  radio  communications.  If  a  node 
transmits  a  message,  all  the  one-hop  neighbors  of  the 
sender  will  try  to  receive  this  message.  The  gossiping 
schemes  run  in  rounds.  At  the  beginning  of  each  round, 
each  member increases the  value of its heartbeat counter. 
The length of a round is Tgossip (which is typically tens of 
seconds),  and  each  member  transmits  at  most  one  gossip 
message in each round. Although in practice the intervals 
are  not  perfectly  synchronized,  several 
reasonable 
assumptions  can  be  made:  (i)  the  maximum  deviation  of 
the  clocks  can  be  adjusted  by  some  time  synchronization 
services,  and  (ii)  the  transmission  time  of  a  gossip 
message is much shorter than the length of a round. Since 
the  proposed  schemes  do  not  depend  on  precise 
synchronization,  we  assume  the  clock  drifts  are  within 
tens  of  milliseconds  in  most  cases  and  therefore  neglect 
this influence while considering many other uncertainties, 
such as message delays and message losses. 
5. Linear Solution 
A  simple  but  practical  solution  is  directly  inspired 
from  [19],  in  which  Basagni  et al.  introduced  a  linear 
broadcast  algorithm  for  ad  hoc  networks  that  guarantees 
the  delivery  of  a  message  in  the  presence  of  collisions. 
The  broadcasting  can  be  achieved  in  a  layer-by-layer 
fashion.  Although  it  is  designed  for  the  broadcasting 
problem  with  a  different  system  and  failure  model,  the 
distributed  and  mobility-independent  nature  make  it  very 
applicable  to  our  problem.  The  adapted  linear  scheme 
operates  in  a  way  that  each  member  transmits  the  gossip 
message  according  to  the  order  of  its  identifier  in  each 
round.  More  formally,  at  the  beginning,  each  member 
waits for a period of time. A member with identifier i sets 
this  waiting  time  to  (πi  –  1) × Tgossip  /  N,  where  πi  is  the 
order  of  i  among  all  the  members.  After  that,  each 
member transmits a gossip message during a time interval 
Tgossip.  Obviously,  an  alternative  way  to  implement  the 
linear scheme is to ask each member to transmit its gossip 
message at random time during each round. However, this 
scheme  will  increase  the  probability  that  two  members 
within  one-hop  neighborhood 
their  gossip 
messages too closely in time. We assume that Tgossip / N is 
sufficiently  long  for  completing  most  local  broadcasts.  It 
is  reasonable  because  Tgossip  usually  becomes  larger  as  N
increases.  Since  we  assume  a  process  is  assigned  a  new 
identifier  after  recovering  from  a  crash,  for  each  member 
with  identifier  i,  the  value  of  πi  is  decided  by  the 
information  provided  by 
this 
information  is  apt  to  be  (partially)  inaccurate,  we  found 
that  the  influence  is  not  serious  from  simulation  results. 
We  do  not  consider  the  situation  that  N  can  change 
dramatically in this paper. 
its  hbc_list.  Though 
transmit 
We  refer  to  a  gossiping  method  as  effective  if  each 
member can diffuse the information included in its gossip 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:10:56 UTC from IEEE Xplore.  Restrictions apply. 
message  to  all  the  other  members  by  N × D  message 
transmissions,  assuming  that  there  are  no  message  losses 
or  topology  changes.  For  the  failure  detection  service 
described  above,  this  information  is  the  content  of  its 
hbc_list. If all the corresponding heartbeat counter values 
in  the  hbc_list  of  a  gossip  message  gm1  are  no  less  than 
those  of  another  gossip  message  gm2,  we  say  that  gm1
includes  gm2.  Albeit  loose,  it  is  a  basic  consideration  in 
designing  gossiping  schemes 
for  wireless  ad  hoc 
networks,  since  for  each  member  the  diameter  D  should 
be  an  upper  bound  on  the  length  of  relaying  paths  to 
diffuse  its  messages.  In  the  linear  method,  for  each 
member, after transmitting its gossip message, all its one-
hop  neighbors  merge  that  message  and  transmit  their 
gossip messages in Tgossip. Therefore, the gossiping will be 
completed  in  at  most  D  rounds.  Our  experimental  results 
showed that the actual number of rounds needed is usually 
much smaller. The most obvious advantage of this method 
is its simplicity, and it can serve as a baseline performance 
measurement. On the other hand, since the entire network 
topology  cannot  be  known  in  advance,  this  method  is 
rather  applicable  to  real  networks.  In  fact,  in  [20]  it  was 
shown  that  the  linear  broadcast  algorithm  is  optimal  to 
their problem under some restricted conditions. 
6. Transient Hierarchical Solution 
6.1. Observations
Conceptually,  for  each  mobile  host  to  forward  its 
gossip message to another mobile hosts not in the one-hop 
neighborhood,  this  message  must  be  relayed  by  some 
other  intermediate  nodes.  First  we  introduce  the  concept 
of dominating sets. A dominating set V′ of G is a subset V′
⊂ V such that each node in V is either in V′ or is a one-hop 
neighbor  of  some  node  in  V′.  If  V′  is  a  connected  sub-
graph of G, then V′ is called  a connected dominating  set. 
In the literature broadcasting in a wireless ad hoc network 
based  on  a  connected  dominating  set  is  a  widely  used 
approach,  that  is,  when  a  broadcast  message  is  first 
received,  only  the  nodes  belonging  to  the  connected 
dominating set will retransmit it. For gossiping, however, 
this  concept  cannot  be  applied  directly.  To  reduce  the 
communication  overhead  of  gossiping  in  our  case,  an 
important  observation  is  that  a  member  can  merge  its 
information with that in the received gossip messages. To 
improve  the  efficiency,  arranging  the  transmitting  orders 
of  all  the  members  in  each  round  based  on  some  global 
hierarchy seems attractive. For example, in Figure 1, if p3
is  elected  as  the  root  and  a  spanning  tree  is  constructed, 
then  in  each  round  the  gossiping  can  be  performed  in  a 
sequence  based  on  this  tree  structure:  {p1, p2, p4, p3}.  All 
the  pieces  of  information  will  be  disseminated  to  every 
member  in  one  round.  However,  in  mobile  wireless 
environments,  an  explicit  global  coordination  is  unlikely, 
not  only  the  extra  control  messages  for  maintaining  a 
global hierarchy is too expensive, but also such scheme is 
usually very sensitive to failures of some particular mobile 
hosts,  for  example,  the  root  node  in  the  above  case. 
Therefore,  the  decision  of  when  to  transmit  the  gossip 
message  can  only  be  made  separately  and  based  on  the 
local information of each mobile host. 
in 
[6], 
is:  considering 
To  calculate  dominating  sets  in  a  distributed  way, 
many proposed algorithms require some local information 
(e.g., [6, 7]). One of the most basic ideas, as described in 
the  marking  process 
the 
corresponding  graph  G,  if  a  node  v ∈ V  has  two 
unconnected one-hop neighbors, then v is a candidate for a 
dominating set. We call v a marked node as in [6]. In the 
example  of  Figure  1,  p3  is  the  only  marked  node.  It  is 
shown  in  [6]  that  the  node  set  VM  formed  by  all  the 
marked  nodes  has  the  following  properties:  (i)  it  is  a 
connected  dominating  set  of  G,  and  (ii)  the  shortest  path 
between  any  two  nodes  does  not  include  any  unmarked 
node  as  an  intermediate  node.  It  makes  sense  to  take 
advantage  of  these  two  properties  since  a  connected 
dominating  set  is  widely  used  as  a  dynamic  virtual 
infrastructure for message forwarding, and for every node 
pair to exchange their information, relaying the  messages 
through  a  shortest  path  may  help  to  shorten  the  total 
transmission  time.  The  marking  process  requires  each 
node  to  know  only  two-hop  neighborhood  information, 
which  makes  it  be  able  to  react  quickly  in  a  dynamic 
environment.  The 
the  one-hop 
neighbors can be obtained by using some form of HELLO
messages that are sent periodically and asynchronously by 
each  node 
the 
information  of  two-hop  neighbors,  a  common  solution  is 
that  each  node  attaches  the  list  of  its  own  one-hop 
neighbors while sending the HELLO messages. These two 
kinds  of  information  are  extensively  used  to  facilitate 
message  routing  and  broadcasting  in  wireless  ad  hoc 
networks  and  therefore,  the  cost  of  maintaining  such 
information can be amortized. Note that the neighborhood 
information  is  updated  by  HELLO  messages  and  the 
membership information is updated by gossip messages. 
its  presence.  To  obtain 
information  about 
to  declare 
From  the  local  point  of  view,  whenever  a  gossip 
message  is  transmitted,  the  information  included  in  it 
should  be  relayed  as  far  as  possible.  Considering  an 
unmarked  node,  since  any  two  of  its  one-hop  neighbors 
are  connected,  transmitting  its  gossip  message  has  no 
effect  on  relaying  information  to  a  node  that  is  further 
than  one-hop  distance.  On  the  other  hand,  for  a  marked 
node  with  c  unconnected  one-hop  neighbor  pairs,  if  it 
transmits  its  gossip  message  later  than  all  its  one-hop 
neighbors, 2c paths for relaying information to a two-hop 
neighbor can be generated. For example, in Figure 1, if p3
is  the  last  to  transmit  its  gossip  message,  four  two-hop 
relaying paths are generated by one message transmission: 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:10:56 UTC from IEEE Xplore.  Restrictions apply. 
(p1 → p4), (p2 → p4), (p4 → p1), (p4 → p2). For a graph G
with D > 2 and |VM| >1, to complete gossiping, there must 
be at least |V| × (|V| - 1) relaying paths: {(pi → pj) | pi, pj ∈
V, pi ≠ pj}  for  information  dissemination.  However,  it 
becomes  much  more  complex 
to  make  decisions, 
especially  when  no  more  than  two-hop  neighborhood 
information  is  available.  Therefore,  our  idea  is  basic:  try 
to generate more long-hop-distance relaying paths in each 
gossip message transmission. 
6.2. Two-Phase Gossiping Scheme
solve 
just  once.  We 
If  the  corresponding  graph  G  becomes  larger,  the 
relaying  paths  tend  to  conflict  with  each  other.  For 
example, in Figure 2 (a), it is impossible to generate (p0 →
p3)  and  (p3 → p0)  if  each  node  transmits  its  gossip 
message 
this  problem  by 
decomposing  the  relaying  process  into  two  phases:  the 
inward  phase  and  the  outward  phase.  Each  phase  is  of 
length Tgossip and is counted as one round. We assign each 
edge  in  G  with  a  direction.  The  gossip  messages  are 
relayed  following  those  directions  during  the  inward 
phase and in opposite directions during the outward phase. 
The  basic  idea  behind  this  scheme  is  to  make  some  sink
nodes  be  automatically  and  dynamically  generated  in  the 
inward  phase  for  gathering  the  gossip  messages  of  the 
nodes in their vicinity. After that, the gathered information 
is diffused in a reversed manner. 
Herein  we  define  the  marked-weight  of  node  p,  mw
(p),  as  the  number  of  pairs  of  its  unconnected  one-hop 
neighbors. A  marked node p has mw (p) ≥ 1. Let |(pi, pj)| 
represent  the  hop  distance  between  node  pi  and  pj.  When 
the inward round starts, each unmarked node transmits its 
gossip  messages  before  its  marked  one-hop  neighbors 
since  fewer  long-hop-distance  relaying  paths  will  be 
generated  if  the  order  is  reversed.  For  the  transmission 
order  between  a  marked  node  p  and  its  marked  one-hop 
neighbor  q,  their  priorities  are  decided  based  on  more 
local information. It is clear that for each node pair (pi, pj)
that  |(pi, pj)|  =  d ≥  3,  the  shortest  relaying  path  between 
these two nodes must include (d – 1) marked nodes, and at 
least  (d  –  3)  of  them  have  unconnected  marked  one-hop 
neighbors. For each node p, let N1 (p), N2 (p), and NUM (p)
be  the  set  of  the  one-hop  neighbors,  two-hop  neighbors, 
and node pairs of unconnected marked one-hop neighbors 
of  p, 
the  power  consumption 
introduced  by  computations  should  also  be  considered  in 
mobile  computing,  we  use  the  following  simple  formula 
to calculate the gossip-weight gw (p) of node p:
+
respectively.  Since 
(
 umw
)( 
))(
pmw
( 
+
 )
gw
( 
p
 mw 
v
=
  )
.
∈(cid:166)
Nvu
),(
UM
(
p
)
The priority of node p is a tuple pri (p) = ,  where  pid  (p)  is  the  identifier  of  p. Let  pri
(p1) =  and pri (p2) = , then pri
(p1) > pri (p2) if gw1 > gw2 or (gw1 = gw2 and n1 > n2) or 
(gw1 = gw2 and n1 = n2 and id1 > id2). That is, the way we 
determine the transmission order is intuitive: if node p has 
higher  mw  (p),  larger  NUM  (p),  and  the  nodes  in  NUM  (p)
also  have  high  marked-weight,  then  p  should  transmit  its 
gossip  message  later.  We  assume  p  piggybacks  its 
HELLO  message  with  the  values  of  mw  (p)  and  pri  (p).
The  whole  computation  can  be  completed  by  2  HELLO 
message  exchanges  after  the  marking  process:  one  for 
calculating  pri  (p)  and  another  for  getting  the  priority 
information  from  its  one-hop  neighbors.  The  computing 