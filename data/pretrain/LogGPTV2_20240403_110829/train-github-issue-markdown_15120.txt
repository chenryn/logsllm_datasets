## ❓ Questions and Help
I have successfully built LibTorch for C++ API under Windows with CUDA 10.1.
Although CUDA seems to be enabled and configured correctly in CMake, and
`torch_cuda.lib` is correctly inserted into the linker directives of
`torch.lib`, I still get a message saying it is not linked with CUDA support
in my test app.
    try {    
        std::cout :d>;--expt-relaxed-constexpr;--expt-extended-lambda;-Xcompiler /wd4819 -Xcompiler /wd4503 -Xcompiler /wd4190 -Xcompiler /wd4244 -Xcompiler /wd4251 -Xcompiler /wd4275 -Xcompiler /wd4522;-Wno-deprecated-gpu-targets;--expt-extended-lambda;-gencode;arch=compute_61,code=sm_61;-DCUDA_HAS_FP16=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__
        CUDA host compiler  : $(VCInstallDir)Tools/MSVC/$(VCToolsVersion)/bin/Host$(Platform)/$(PlatformTarget)
        USE_TENSORRT        : OFF
      USE_ROCM              : OFF
      USE_EIGEN_FOR_BLAS    : ON
      USE_FBGEMM            : OFF
      USE_FFMPEG            : OFF
      USE_GFLAGS            : OFF
      USE_GLOG              : OFF
      USE_LEVELDB           : OFF
      USE_LITE_PROTO        : OFF
      USE_LMDB              : OFF
      USE_METAL             : OFF
      USE_MKL               : OFF
      USE_MKLDNN            : ON
      USE_MKLDNN_CBLAS      : OFF
      USE_NCCL              : OFF
      USE_NNPACK            : OFF
      USE_NUMPY             : OFF
      USE_OBSERVERS         : ON
      USE_OPENCL            : OFF
      USE_OPENCV            : OFF
      USE_OPENMP            : ON
      USE_TBB               : OFF
      USE_PROF              : OFF
      USE_QNNPACK           : OFF
      USE_REDIS             : OFF
      USE_ROCKSDB           : OFF
      USE_ZMQ               : OFF
      USE_DISTRIBUTED       : OFF
      Public Dependencies  : Threads::Threads;caffe2::mkldnn
      Private Dependencies : cpuinfo;fp16;aten_op_header_gen;foxi_loader
CUDA info:
    deviceQuery.exe Starting...
     CUDA Device Query (Runtime API) version (CUDART static linking)
    Detected 1 CUDA Capable device(s)
    Device 0: "GeForce GTX 1080"
      CUDA Driver Version / Runtime Version          10.2 / 10.1
      CUDA Capability Major/Minor version number:    6.1
      Total amount of global memory:                 8192 MBytes (8589934592 bytes)
      (20) Multiprocessors, (128) CUDA Cores/MP:     2560 CUDA Cores
      GPU Max Clock rate:                            1734 MHz (1.73 GHz)
      Memory Clock rate:                             5005 Mhz
      Memory Bus Width:                              256-bit
      L2 Cache Size:                                 2097152 bytes
      Maximum Texture Dimension Size (x,y,z)         1D=(131072), 2D=(131072, 65536), 3D=(16384, 16384, 16384)
      Maximum Layered 1D Texture Size, (num) layers  1D=(32768), 2048 layers
      Maximum Layered 2D Texture Size, (num) layers  2D=(32768, 32768), 2048 layers
      Total amount of constant memory:               65536 bytes
      Total amount of shared memory per block:       49152 bytes
      Total number of registers available per block: 65536
      Warp size:                                     32
      Maximum number of threads per multiprocessor:  2048
      Maximum number of threads per block:           1024
      Max dimension size of a thread block (x,y,z): (1024, 1024, 64)
      Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)
      Maximum memory pitch:                          2147483647 bytes
      Texture alignment:                             512 bytes
      Concurrent copy and kernel execution:          Yes with 2 copy engine(s)
      Run time limit on kernels:                     Yes
      Integrated GPU sharing Host Memory:            No
      Support host page-locked memory mapping:       Yes
      Alignment requirement for Surfaces:            Yes
      Device has ECC support:                        Disabled
      CUDA Device Driver Mode (TCC or WDDM):         WDDM (Windows Display Driver Model)
      Device supports Unified Addressing (UVA):      Yes
      Device supports Compute Preemption:            Yes
      Supports Cooperative Kernel Launch:            No
      Supports MultiDevice Co-op Kernel Launch:      No
      Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0
      Compute Mode:
    deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 10.2, CUDA Runtime Version = 10.1, NumDevs = 1
    Result = PASS
cc @peterjc123