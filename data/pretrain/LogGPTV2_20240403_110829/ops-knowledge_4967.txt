User: How to use Python code to automatically detect server hardware information?
Assistant: You can use third-party modules in Python (such as psutil, cpuinfo, pySMART, etc.) and tools provided by the operating system (such as dmidecode, lshw, hwinfo, etc.) to obtain hardware information on the server. The following is a sample code snippet that demonstrates how to use the psutil and cpuinfo modules to get the server's CPU, memory, disk, and network information: ``` python import psutil import cpuinfo # Get the CPU model and core number cpu_info = cpuinfo.get_cpu_info() cpu_model = cpu_info['brand_raw'] cpu_cores = psutil.cpu_count(logical=False) # Get the total amount of memory mem_total = psutil.virtual_memory().total # Get disk information disk_partitions = psutil.disk_partitions(all=True) disk_usage = {} for partition in disk_partitions: try: usage = psutil.disk_usage(partition.mountpoint) disk_usage[partition.device] = { 'total': usage.total, 'used': usage.used, 'percentage': usage.percent } except Exception: pass # Get network traffic information net_io_counters = psutil.net_io_counters() net_info = { 'bytes_sent': net_io_counters.bytes_sent, 'bytes_recv': net_io_counters.bytes_recv, 'packets_sent': net_io_counters.packets_sent, 'packets_recv ': net_io_counters.packets_recv } `` ` The resulting information can then be stored in a database or a report generated for subsequent use.