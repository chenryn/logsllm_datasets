使用的网络接口
#### 探测选项
ZMap允许用户指定并添加自己所需要的[探测模块](/article-5860-1.html#probemodule)。 探测模块的职责就是生成要发送的探测包，并处理主机回复的响应包。
**--list-probe-modules**
列出可用探测模块（如tcp\_synscan）
**-M, --probe-module=name**
选择[探测模块](/article-5860-1.html#probemodule)（默认值= tcp\_synscan）
**--probe-args=args**
向模块传递参数
**--list-output-fields**
列出可用的输出模块
#### 输出选项
ZMap允许用户指定和编写他们自己的[输出模块](/article-5860-1.html#outputmodule)。输出模块负责处理由探测模块返回的字段，并将它们输出给用户。用户可以指定输出的字段，并过滤相应字段。
**--list-output-modules**
列出可用输出模块（如tcp\_synscan）
**-O, --output-module=name**
选择[输出模块](/article-5860-1.html#outputmodule)（默认值为csv）
**--output-args=args**
传递给输出模块的参数
**-f, --output-fields=fields**
输出的字段列表，以逗号分割
**--output-filter**
指定输出[过滤器](/article-5860-1.html#outputfilter)对[探测模块](/article-5860-1.html#probemodule)定义字段进行过滤
#### 附加选项
**-C, --config=filename**
加载[配置文件](/article-5860-1.html#config)，可以指定其他路径。
**-q, --quiet**
不必每秒刷新输出
**-g, --summary**
在扫描结束后打印配置和结果汇总信息
**-v, --verbosity=n**
日志详细程度（0-5，默认值= 3）
**-h, --help**
打印帮助并退出
**-V, --version**
打印版本并退出
### 附加信息
#### TCP SYN 扫描
在执行TCP SYN扫描时，ZMap需要指定一个目标端口，也支持指定发起扫描的源端口范围。
**-p, --target-port=port**
扫描的TCP端口（例如 443）
**-s, --source-port=port|range**
发送扫描数据包的源端口（例如 40000-50000）
**警示！** ZMap基于Linux内核使用RST包来应答SYN/ACK包响应，以关闭扫描器打开的连接。ZMap是在Ethernet层完成包的发送的，这样做是为了减少跟踪打开的TCP连接和路由寻路带来的内核开销。因此，如果您有跟踪连接建立的防火墙规则，如类似于`-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT`的netfilter规则，将阻止SYN/ACK包到达内核。这不会妨碍到ZMap记录应答，但它会阻止RST包被送回，最终被扫描主机的连接会一直打开，直到超时后断开。我们强烈建议您在执行ZMap时，选择一组主机上未使用且防火墙允许访问的端口，加在`-s`后（如 `-s '50000-60000'` ）。
#### ICMP Echo 请求扫描
虽然在默认情况下ZMap执行的是TCP SYN扫描，但它也支持使用ICMP echo请求扫描。在这种扫描方式下ICMP echo请求包被发送到每个主机，并以收到ICMP应答包作为答复。实施ICMP扫描可以通过选择icmp\_echoscan扫描模块来执行，如下：
```
$ zmap --probe-module=icmp_echoscan
```
#### UDP 数据报扫描
ZMap还额外支持UDP探测，它会发出任意UDP数据报给每个主机，并接收UDP或ICMP不可达的应答。ZMap可以通过使用--probe-args命令行选项来设置四种不同的UDP载荷。这些是：可在命令行设置可打印的ASCII 码的‘text’载荷和十六进制载荷的‘hex’，外部文件中包含载荷的‘file’，和通过动态字段生成的载荷的‘template’。为了得到UDP响应，请使用-f参数确保您指定的“data”字段处于输出范围。
下面的例子将发送两个字节'ST'，即PCAnwywhere的'status'请求，到UDP端口5632。
```
$ zmap -M udp -p 5632 --probe-args=text:ST -N 100 -f saddr,data -o -
```
下面的例子将发送字节“0X02”，即SQL Server的'client broadcast'请求，到UDP端口1434。
```
$ zmap -M udp -p 1434 --probe-args=hex:02 -N 100 -f saddr,data -o -
```
下面的例子将发送一个NetBIOS状态请求到UDP端口137。使用一个ZMap自带的载荷文件。
```
$ zmap -M udp -p 1434 --probe-args=file:netbios_137.pkt -N 100 -f saddr,data -o -
```
下面的例子将发送SIP的'OPTIONS'请求到UDP端口5060。使用附ZMap自带的模板文件。
```
$ zmap -M udp -p 1434 --probe-args=file:sip_options.tpl -N 100 -f saddr,data -o -
```
UDP载荷模板仍处于实验阶段。当您在更多的使用一个以上的发送线程（-T）时可能会遇到崩溃和一个明显的相比静态载荷性能降低的表现。模板仅仅是一个由一个或多个使用${}将字段说明封装成序列构成的载荷文件。某些协议，特别是SIP，需要载荷来反射包中的源和目的包。其他协议，如portmapper和DNS，每个请求包含的字段应该是随机的，或降低被Zamp扫描的多宿主系统的风险。
以下的载荷模板将发送SIP OPTIONS请求到每一个目的地：
```
OPTIONS sip:${RAND_ALPHA=8}@${DADDR} SIP/2.0
Via: SIP/2.0/UDP ${SADDR}:${SPORT};branch=${RAND_ALPHA=6}.${RAND_DIGIT=10};rport;alias
From: sip:${RAND_ALPHA=8}@${SADDR}:${SPORT};tag=${RAND_DIGIT=8}
To: sip:${RAND_ALPHA=8}@${DADDR}
Call-ID: ${RAND_DIGIT=10}@${SADDR}
CSeq: 1 OPTIONS
Contact: sip:${RAND_ALPHA=8}@${SADDR}:${SPORT}
Content-Length: 0
Max-Forwards: 20
User-Agent: ${RAND_ALPHA=8}
Accept: text/plain
```
就像在上面的例子中展示的那样，注意每行行末以\r\n结尾，请求以\r\n\r\n结尾，大多数SIP实现都可以正确处理它。一个可以工作的例子放在ZMap的examples/udp-payloads目录下 (sip\_options.tpl).
当前实现了下面的模板字段：
* **SADDR**: 源IP地址的点分十进制格式
* **SADDR\_N**: 源IP地址的网络字节序格式
* **DADDR**: 目的IP地址的点分十进制格式
* **DADDR\_N**: 目的IP地址的网络字节序格式
* **SPORT**: 源端口的ascii格式
* **SPORT\_N**: 源端口的网络字节序格式
* **DPORT**: 目的端口的ascii格式
* **DPORT\_N**: 目的端口的网络字节序格式
* **RAND\_BYTE**: 随机字节(0-255)，长度由=(length) 参数决定
* **RAND\_DIGIT**: 随机数字0-9，长度由=(length) 参数决定
* **RAND\_ALPHA**: 随机大写字母A-Z，长度由=(length) 参数决定
* **RAND\_ALPHANUM**: 随机大写字母A-Z和随机数字0-9，长度由=(length) 参数决定
### 配置文件
ZMap支持使用配置文件来代替在命令行上指定所有要求的选项。配置中可以通过每行指定一个长名称的选项和对应的值来创建：
```
interface "eth1"
source-ip 1.1.1.4-1.1.1.8
gateway-mac b4:23:f9:28:fa:2d # upstream gateway
cooldown-time 300 # seconds
blacklist-file /etc/zmap/blacklist.conf
output-file ~/zmap-output
quiet
summary
```
然后ZMap就可以按照配置文件并指定一些必要的附加参数运行了：
```
$ zmap --config=~/.zmap.conf --target-port=443
```
### 详细
ZMap可以在屏幕上生成多种类型的输出。默认情况下，Zmap将每隔1秒打印出相似的基本进度信息。可以通过设置`--quiet`来禁用。
```
0:01 12%; send: 10000 done (15.1 Kp/s avg); recv: 144 143 p/s (141 p/s avg); hits: 1.44%
```
ZMap同样也可以根据扫描配置打印如下消息，可以通过'--verbosity`参数加以控制。
```
Aug 11 16:16:12.813 [INFO] zmap: started
Aug 11 16:16:12.817 [DEBUG] zmap: no interface provided. will use eth0
Aug 11 16:17:03.971 [DEBUG] cyclic: primitive root: 3489180582
Aug 11 16:17:03.971 [DEBUG] cyclic: starting point: 46588
Aug 11 16:17:03.975 [DEBUG] blacklist: 3717595507 addresses allowed to be scanned
Aug 11 16:17:03.975 [DEBUG] send: will send from 1 address on 28233 source ports
Aug 11 16:17:03.975 [DEBUG] send: using bandwidth 10000000 bits/s, rate set to 14880 pkt/s
Aug 11 16:17:03.985 [DEBUG] recv: thread started
```