incoming data packets and ACKs are modeled as M/D/1
queues. Let QD and QA denote the queues for data and
ACKs respectively. The utilizations of QD and QA are ρD
and ρA, respectively.
We assume that the receiver implements delayed ACK pol-
icy2, since this policy is commonly used in practice [21, 7].
To accommodate the eﬀects of delayed ACK, we consider
four data packets P1, P2, P3 and P4, each of 1500 bytes,
sent back-to-back from the sender. Without loss of gener-
ality, we assume that packet P1 is acknowledged. Since we
assume delayed ACK, packet P3 is also acknowledged. Let
A1 and A3 denote the ACKs corresponding to packets P1
and P3, respectively. Then A1 and A3 form an ACK-pair.
Let ∆A represent the inter-ACK time of A1 and A3 at the
monitoring point. Let ∆ denote the inter-arrival time of
the data packets P1 and P3 at the monitoring point. Then
∆ = 120 × 2 = 240 µs since each Pi (i = 1, . . . , 4) is 1500
bytes and the bandwidth of link L2 is 100 Mbps.
Intuitively, the random backoﬀ mechanism in 802.11 (i.e.,
a host must wait for a random backoﬀ interval to trans-
mit [17]) and the half duplex nature of wireless channels (i.e.,
data packets and ACKs contend for media access at a wire-
less host) may lead to larger inter-ACK times in WLAN than
those in Ethernet. To demonstrate analytically that this is
indeed the case, we consider the following worst-case scenar-
ios (in terms of diﬀerentiating Ethernet and WLAN hosts).
In the Ethernet setting, we assume cross traﬃc traversing
both queues, QD and QA, at the router so that the Ethernet
link may be heavily utilized. In the WLAN setting, the wire-
less link between the access point and the receiver is under
idealized conditions, i.e., the channel is perfect, and is only
used by the access point and the receiver. As we shall see,
even in the above scenarios, the inter-ACK times of WLAN
are generally larger than those of Ethernet, and hence can
be used to diﬀerentiate WLAN and Ethernet connections.
2That is, a receiver releases an ACK after receiving two
packets, or if the delayed-ACK timer is triggered after the
arrival of a single packet.
3.2 Analysis of Ethernet
We next present two theorems on inter-ACK times in the
Ethernet setting. Their proofs are found in Appendices A
and B, respectively.
Theorem 1. (Inter-ACK time distribution for Eth-
ernet) In the Ethernet setting, when 0 
600 µs)  600 µs) > 0.96.
3.4 Analysis of 802.11g WLAN
We next show that 54 Mbps 802.11g WLAN generally has
larger inter-ACK times than 100 Mbps Ethernet although
they have comparable bandwidths. We again assume ideal
conditions. For 54 Mbps 802.11g, the transmission overhead
for a TCP packet with zero payload is 103 µs. The slot
time is 9 µs. The receiver waits for a random backoﬀ time
uniformly distributed in [0, 15] time slots (i.e., [0, 135] µs)
before transmitting a packet. Therefore, the MAC service
time of a data packet (1500 bytes) is uniformly distributed in
[325, 460] µs; the MAC service time of an ACK (40 bytes) is
uniformly distributed in [109, 244] µs. We have the following
theorem for the 802.11g WLAN setting; the proof is found
in Appendix D.
Theorem 4. (Inter-ACK time distribution for 802.11g)
In the 802.11g WLAN setting, under idealized conditions,
P (∆A > 600 µs) > 0.45.
3.5 Summary of Analysis
The above analysis demonstrates that, even when WLAN
is under idealized conditions while Ethernet LAN is fully uti-
lized, using TCP ACK-pairs can eﬀectively diﬀerentiate Eth-
ernet and WLAN connections: for Ethernet, less than 18%
of the inter-ACK times exceed 600 µs, while for 802.11b and
802.11g, at least 96% and 45% of the inter-ACK times ex-
ceed 600 µs (see Theorems 1, 3 and 4). Under more realistic
conditions (e.g., noisy wireless channel and with contention),
inter-ACK times in WLAN may be even higher than those
in Ethernet. Last, our analysis is based on the fundamental
properties of the 802.11 CSMA/CA MAC protocol and the
half-duplex nature of wireless channels, thus indicating that
using inter ACK-time is a robust technique and cannot be
easily spoofed (e.g., it is robust against MAC-address spoof-
ing).
4. ONLINE DETECTION ALGORITHMS
In this section, we develop two online algorithms to detect
wireless hosts based on our analysis in the previous section.
Both algorithms use sequential hypothesis test technique
and take the inter-ACK times as the input. The ﬁrst al-
gorithm requires knowing the inter-ACK time distributions
for Ethernet and WLAN traﬃc a priori. The second al-
gorithm does not have such a requirement.
Instead, it is
directly based on Theorems 1 and 2 (see Section 3). We
refer to these two algorithms as sequential hypothesis test
with training and sequential hypothesis test without train-
ing respectively. The algorithm without training, although
is not as powerful as the one with training (see Section 7),
is suitable for scenarios where the inter-ACK time distribu-
tions are not available a priori (e.g., for organizations with
no wireless networks).
We now describe these two algorithms in detail. Both
algorithms use at most N = 100 ACK-pairs to make a deci-
sion (i.e., whether the connection is Ethernet or WLAN) to
accommodate the scenarios where a host switches between
Ethernet and WLAN connections.
4.1 Sequential Hypothesis Test with Training
We have demonstrated that the inter-ACK time distribu-
tions for Ethernet and WLAN diﬀer signiﬁcantly (see Sec-
tion 3). When these distributions are known, we can calcu-
late the likelihoods that a host uses Ethernet and WLAN
respectively given a sequence of observed inter-ACK times.
If the likelihood of using WLAN is much higher than that of
using Ethernet, we conclude that the host uses WLAN (and
vice versa).
i }n
i }n
We now describe the test in more detail. Let {δA
i=1
represent a sequence of inter-ACK time observations from
a host, and {∆A
i=1 represent their corresponding random
variables. Let E and W represent respectively the events
that a host uses Ethernet and WLAN. Let LE = P (∆A
1 =
δA
1 , ∆A
n | E) be the likelihood that this
observation sequence is from an Ethernet host. Similarly,
let LW = P (∆A
n | W ) be the
likelihood that the observation sequence is from a WLAN
host. Let pi = P (∆A
| E) be the probability that the
i-th inter-ACK time has value δA
i given that it is from an
2 , . . . , ∆A
2 , . . . , ∆A
2 = δA
n = δA
i = δA
i
1 = δA
1 , ∆A
2 = δA
n = δA
Figure 3: Sequential hypothesis test with training,
N = 100.
}
n = 0, lE = lW = 0.
do {
Identify an ACK-pair
n = n + 1
pn = P (∆A
n | E), qn = P (∆A
lE = lE + log pn, lW = lW + log qn
n = δA
n = δA
n | W )
if lW − lE > log K
Report WLAN, n = 0, lE = lW = 0.
else if lW − lE  1 be a threshold. If after the n-th ACK-pair, the
ratio of LW and LE is over the threshold, i.e., LW /LE > K,
then the host is classiﬁed as a WLAN host. If LW /LE  600 µs). By Theorem 1, we have p  − log K
log θ
Report WLAN. m = n = 0.
else if n  1 be a threshold. Then the likelihood ratio
test rejects the null hypothesis H0 when
i }n
pi,
n
Yi=1
Yi=1
qi.
λ =
sup0≤p≤θ pm(1 − p)n−m
sup0≤p≤1 pm(1 − p)n−m <
1
K
In the middle term above, the numerator is the maximum
probability of having the observed sequence (which has m
inter-ACK times exceeding 600 µs) computed over parame-
ters in the null hypothesis (i.e., 0 ≤ p ≤ θ). The denomina-
tor of λ is the maximum probability of having the observed
sequence over all possible parameters (i.e., 0 ≤ p ≤ 1). If
λ < 1/K, that is, there are parameter points in the alterna-
tive hypothesis for which the observed sample is much more
likely than for any parameter points in the null hypothe-
sis, the likelihood ratio test concludes that H0 should be
rejected. In other words, if λ < 1/K, the likelihood ratio
test concludes that the host uses WLAN.
We now derive a sequential hypothesis test from the above
likelihood ratio test. Let ˆp = m/n, where m is the num-
ber of inter-ACK times exceeding 600 µs and n is the to-
tal number of inter-ACK times.
It is straightforward to
show that ˆp is the maximum likelihood estimator of p, i.e.,
sup0≤p≤1 pm(1−p)n−m is achieved when p = ˆp. When ˆp ≤ θ,
we have sup0≤p≤θ pm(1 − p)n−m = sup0≤p≤1 pm(1 − p)n−m,