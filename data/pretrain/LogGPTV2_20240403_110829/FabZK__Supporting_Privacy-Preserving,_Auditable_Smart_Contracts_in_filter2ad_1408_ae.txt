w1
1 , chall1, resp1)
w2
2 , chall2, resp2),
(cid:2)
i=0 Tokeni)/Token
i=0 Comi)/ComRP, y1 = (
1 ∧ g
2 ∧ g
and g
To verify whether such a DZKP in Equation (7) is valid,
the veriﬁer ﬁrst checks whether gresp = (gx)challgw and
then yresp = (yx)challyw for the two non-interactive Σ-
protocols ZK1 and ZK2 [59].
x1
1
x2
2
for the spending organization and
for other organizations must be pkrRP. This is
holds for the spending
holds
guar-
(cid:2)(cid:2)
Token
(cid:2)
because (s/ComRP)skspend = t/Token
organization while (Com/ComRP)skother = t/Token
and Token
for other organizations. Moreover, Token
r−rRP = y2.
antee that g1
sk = y1 and g2
(cid:2)(cid:2)
(cid:2)(cid:2)
(cid:2)
Note that, Token
x2
.
(cid:2)
Proof: For the spending organization,
m(cid:5)
sk = (
g1
Comi)sk/(ComRP)sk
i=0
(cid:2)m
(cid:2)m
(cid:2)m
= (g
= (h
(cid:2)m
i=0 ui h
i=0 ri )sk/(h
i=0 ri )sk/(g
i=0 ui h
rRP )sk
rRP )sk = t/pkrRP = y1,
m(cid:5)
i=0
r−rRP = pkr−rRP = (
g2
Comi)sk/(ComRP)sk
(cid:2)(cid:2) = y2.
= (s/ComRP)sk = Token/Token
As for other organizations,
g1
sk = (s/ComRP)sk = t/Token
r−rRP = pkr−rRP = Token/Token
g2
(cid:2) = y1,
(cid:2)(cid:2) = y2.
A DZKP allows the prover to create a real proof using
real values (e.g., sk) and a fake proof using fake values
(e.g., an arbitrary number), and the veriﬁer to validate DZKP
by itself without distinguishing between real proof and fake
proof. When a prover knows the secret key of the spending
organization skspend but not others’ skother, sk in Equation (5)
is an arbitrary random number but not skother. To conceal
the transaction graph, the sk in Equation (6) is an arbitrary
random number other than skspend.
Proof: Suppose sk is the spending organization’s secret
key skspend. Substitute sk with skspend in Equation (6), we
have:
Token
(cid:2)(cid:2) = Token · (s/ComRP)skspend = Token · g1
= Token · y1 = Token · t/Token
(cid:2)
.
skspend
(8)
(cid:2)
(cid:2)(cid:2)
, Token
Equation (8) shows a linear relationship among Token,
Token
, and t. A linear relationship reveals the iden-
tity of the spending organization through trivial computation
by an observer. Therefore, sk (cid:8)= skspend in Equation (6).
REFERENCES
[1] “British Airways data breach: Russian hackers sell 245,000
credit card details,” https://www.theweek.co.uk/96327/british-
airways-data-breach-how-to-check-if-you-re-affected.
[2] “Equifax Data Breach Impacts 143 Million Americans,”
https://www.forbes.com/sites/leemathews/2017/09/07/equifax-
data-breach-impacts-143-million-americans/.
Security
[3] “Facebook
Accounts
https://www.nytimes.com/2018/09/28/technology/facebook-
hack-data-breach.html.
Exposes
Users,”
Million
Breach
50
of
[4] S.
Gressin,
breach,”
https://www.consumer.ftc.gov/blog/2018/12/ marriott-data-
breach, 2018.
Marriott
“The
data
[5] “Uber Settles Data Breach Investigation for $148 Mil-
lion,” https://www.nytimes.com/2018/09/26/technology/uber-
data-breach.html.
[6] “Verizon
partner
data
breach
millions
poses
https://www.theverge.com/2017/7/12/15962520/verizon-
nice-systems-data-breach-exposes-millions-customer-records.
customer
of
ex-
records,”
[7] S. Nakamoto, “Bitcoin: A peer-to-peer electronic cash sys-
tem,” http://bitcoin.org/bitcoin.pdf.”
[8] “Ripple,” https://ripple.com/.
[9] “Digital Asset,” https://www.digitalasset.com/.
[10] “Stella,” https://www.stellar.org/.
[11] “Zcash,” https://z.cash/.
553
[12] E. B. Sasson, A. Chiesa, C. Garman, M. Green, I. Miers,
E. Tromer, and M. Virza, “Zerocash: Decentralized anony-
mous payments from bitcoin,” in IEEE Symposium on Secu-
rity and Privacy, 2014, pp. 459–474.
[13] G. Wood, “Ethereum: A secure decentralised generalised
transaction ledger,” 2017.
[14] G. Maxwell, Conﬁdential Transactions, https://people.xiph.
org/∼greg/conﬁdential values.txt.
[15] A. Poelstra, A. Back, M. Friedenbach, G. Maxwell, and
P. Wuille, “Conﬁdential assets,” in 4th Workshop on Bitcoin
and Blockchain Research, April 2017.
[16] E. Androulaki, A. Barger, V. Bortnikov, C. Cachin, K. Chris-
tidis, A. De Caro, D. Enyeart, C. Ferris, G. Laventman,
Y. Manevich, S. Muralidharan, C. Murthy, B. Nguyen,
M. Sethi, G. Singh, K. Smith, A. Sorniotti, C. Stathakopoulou,
M. Vukoli´c, S. W. Cocco, and J. Yellick, “Hyperledger fabric:
A distributed operating system for permissioned blockchains,”
in EuroSys, 2018, pp. 30:1–30:15.
[17] “JPMC Quorum,” https://www.jpmorgan.com/global/Quorum.
[18] “Private and conﬁdential
transactions with Hyperledger
https://developer.ibm.com/tutorials/cl-blockchain-
Fabric,”
private-conﬁdential-transactions-hyperledger-fabric-zero-
knowledge-proof/.
[19] E. Cecchetti, F. Zhang, Y. Ji, A. Kosba, A. Juels, and
E. Shi, “Solidus: Conﬁdential distributed ledger transactions
via pvorm,” in ACM CCS, 2017, pp. 701–717.
[20] N. Narula, W. Vasquez, and M. Virza, “zkledger: Privacy-
preserving auditing for distributed ledgers,” in Symposium
on Networked Systems Design and Implementation, 2018, pp.
65–80.
[21] T. P. Pedersen, “Non-interactive and information-theoretic
secure veriﬁable secret sharing,” in Advances in Cryptology
— CRYPTO ’91. Berlin, Heidelberg: Springer Berlin Hei-
delberg, 1992, pp. 129–140.
[22] CPA Canada and American Institute of CPAs, “Blockchain
technology and its potential impact on the audit and assurance
profession,” 2017.
[23] “Tendermint,” https://tendermint.com.
[24] “Chain,” https://chain.com/.
[25] D. Ongaro and J. Ousterhout, “In search of an understandable
consensus algorithm,” in USENIX Annual Technical Confer-
ence, 2014, pp. 305–320.
[26] F. P. Junqueira, B. C. Reed, and M. Seraﬁni, “Zab:
High-performance broadcast for primary-backup systems,” in
IEEE/IFIP International Conference on Dependable Systems
Networks (DSN), 2011, pp. 245–256.
[27] “Go
Hyperledger
https://github.com/hyperledger/fabric-sdk-go.
SDK
for
[28] “Java
Hyperledger
https://github.com/hyperledger/fabric-sdk-java.
SDK
for
Fabric,”
Fabric,”
554
[29] “Node.js
Hyperledger
https://github.com/hyperledger/fabric-sdk-node.
SDK
for
Fabric,”
[30] M. Blum, A. De Santis, S. Micali, and G. Persiano, “Nonin-
teractive zero-knowledge,” SIAM J. Comput., vol. 20, no. 6,
pp. 1084–1118, Dec. 1991.
[31] B. B¨unz, J. Bootle, D. Boneh, A. Poelstra, P. Wuille, and
G. Maxwell, “Bulletproofs: Short proofs for conﬁdential
transactions and more,” in IEEE Symposium on Security and
Privacy, May 2018, pp. 315–334.
[32] D. Chaum and T. P. Pedersen, “Wallet databases with ob-
servers,” in Proceedings of Advances in Cryptology, 1992,
pp. 89–105.
[33] R. Cramer, I. Damg˚ard, and B. Schoenmakers, “Proofs of
partial knowledge and simpliﬁed design of witness hiding pro-
tocols,” in 14th Annual International Cryptology Conference
on Advances in Cryptology, 1994, pp. 174–187.
[34] “Protobuf,” https://developers.google.com/protocol-buffers/.
[35] “What
is
https://www.investopedia.com/terms/o/otc.asp.
Over-The-Counter
-
OTC,”
[36] “libsnark:
for
https://github.com/scipr-lab/libsnark/.
a C++
library
zkSNARK proofs,”
[37] D. Lukianov, “Compact conﬁdential transactions for bitcoin,”
http://voxelsoft.com/dev/cct.pdf, 2015.
[38] T. Rufﬁng and G. Malavolta, “Switch commitments: A safety
switch for conﬁdential transactions,” in Financial Cryptogra-
phy Workshops, ser. Lecture Notes in Computer Science, vol.
10323. Springer, 2017, pp. 170–181.
[39] G. Maxwell and A. Poelstra, “Borromean ring signatures,”
2015.
[40] S. Noether and A. Mackenzie, “Ring conﬁdential transac-
tions,” Ledger, vol. 1, pp. 1–18, 2016.
[41] E. Ben-Sasson, A. Chiesa, D. Genkin, E. Tromer, and
M. Virza, “SNARKs for C: verifying program executions
succinctly and in zero knowledge,” in CRYPTO (2), ser.
Lecture Notes in Computer Science, vol. 8043.
Springer,
2013, pp. 90–108.
[42] E. Ben-Sasson, A. Chiesa, E. Tromer, and M. Virza, “Succinct
non-interactive zero knowledge for a von neumann architec-
ture,” in USENIX Security, San Diego, CA, 2014, pp. 781–
796.
[43] N. Bitansky, A. Chiesa, Y. Ishai, O. Paneth, and R. Ostrovsky,
“Succinct non-interactive arguments via linear interactive
proofs,” in Theory of Cryptography.
Berlin, Heidelberg:
Springer Berlin Heidelberg, 2013, pp. 315–333.
[44] R. Gennaro, C. Gentry, B. Parno, and M. Raykova, “Quadratic
span programs and succinct nizks without pcps,” in Advances
in Cryptology – EUROCRYPT, 2013, pp. 626–645.
[45] J. Groth, “Short pairing-based non-interactive zero-knowledge
arguments,” in Advances in Cryptology - ASIACRYPT 2010,
2010, pp. 321–340.
[46] H. Lipmaa, “Progression-free sets and sublinear pairing-
based non-interactive zero-knowledge arguments,” in Theory
of Cryptography. Berlin, Heidelberg: Springer Berlin Hei-
delberg, 2012, pp. 169–189.
[53] T. Rufﬁng, P. Moreno-Sanchez, and A. Kate, “Coinshufﬂe:
Practical decentralized coin mixing for bitcoin,” in ESORICS
(2), ser. Lecture Notes in Computer Science, vol. 8713.
Springer, 2014, pp. 345–364.
[47] ——, “Succinct non-interactive zero knowledge arguments
from span programs and linear error-correcting codes,” in
ASIACRYPT (1), ser. Lecture Notes in Computer Science, vol.
8269. Springer, 2013, pp. 41–60.
[54] L. Valenta and B. Rowan, “Blindcoin: Blinded, accountable
mixes for bitcoin,” in Financial Cryptography Workshops, ser.
Lecture Notes in Computer Science, vol. 8976.
Springer,
2015, pp. 112–126.
[48] B. Parno, J. Howell, C. Gentry, and M. Raykova, “Pinocchio:
Nearly practical veriﬁable computation,” in IEEE Symposium
on Security and Privacy, May 2013, pp. 238–252.
[55] E. Z. Yang, “Secure multiparty Bitcoin anonymization,”
http://blog.ezyang.com/2012/07/secure-multiparty-bitcoin-
anonymization/.
[49] J. Bonneau, A. Narayanan, A. Miller, J. Clark, J. A. Kroll,
and E. W. Felten, “Mixcoin: Anonymity for bitcoin with
accountable mixes,” in Financial Cryptography and Data
Security. Springer, 2014, pp. 486–504.
[50] E. Heilman, L. Alshenibr, F. Baldimtsi, A. Scafuro, and
S. Goldberg, “Tumblebit: An untrusted bitcoin-compatible
anonymous payment hub,” in NDSS, 2017.
[51] G. Maxwell, “CoinJoin: Bitcoin privacy for the real world,”
https://bitcointalk.org/index.php?topic=279249.
[52] M. Rosenfeld, “Using mixing transactions
to improve
anonymity,” https://bitcointalk.org/index.php?topic=54266.
[56] J. H. Ziegeldorf, F. Grossmann, M. Henze, N. Inden, and
K. Wehrle, “Coinparty: Secure multi-party mixing of bit-
coins,” in ACM CODASPY, 2015, pp. 75–86.
[57] “Coinjoin Sudoku,” http://www.coinjoinsudoku.com/.
[58] “Blockchain’s SharedCoin Users Can Be Identiﬁed, Says
https://www.coindesk.com/blockchains-
Security Expert,”
sharedcoin-users-can-identiﬁed-says-security-expert.
[59] J. Camenisch, A. Kiayias, and M. Yung, “On the portability
of generalized schnorr proofs,” in Conference on Advances in
Cryptology - EUROCRYPT, vol. 5479, 2009, pp. 425–442.
555