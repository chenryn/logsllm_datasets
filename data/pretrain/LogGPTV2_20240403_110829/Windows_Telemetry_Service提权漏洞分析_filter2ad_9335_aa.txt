# Windows Telemetry Service提权漏洞分析
|
##### 译文声明
本文是翻译文章，文章原作者 secret，文章来源：secret.club
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 0x00 前言
在本文中，我们将分析“Connected User Experiences and Telemetry
Service”（互联用户体验和遥测服务），也就是`diagtrack`服务。本文涉及到与NTFS相关的一些术语，因此大家需要对相关背景有所了解。
我在Feedback Hub中观察到一个有趣的“Advanced
Diagnostics”（高级诊断）功能，所有用户都可以触发该功能，触发在`C:\Windows\Temp`目录中的文件活动，而所有用户具备该目录的写权限。
逆向分析该功能比较复杂，如果想复现所需的交互过程也颇具挑战，因为该服务使用的是WinRT
IPC，而不是COM。我对WinRT不是特别熟悉，因此需要先做些背景工作。
在`C:\Program
Files\WindowsApps\Microsoft.WindowsFeedbackHub_1.2003.1312.0_x64__8wekyb3d8bbwe\Helper.dll`中，我找到了一个比较有趣的函数：
    WINRT_IMPL_AUTO(void) StartCustomTrace(param::hstring const& customTraceProfile) const;
该函数将在Diagtrack
Service的安全上下文中执行`WindowsPerformanceRecorder`配置，该配置在XML文件中定义，而文件路径通过参数传递给该函数。
文件路径采用基于`System32`目录的相对路径解析方式，因此我在所有用户都具备写权限的目录（`System32\Spool\Drivers\Color`）中存放了一个XML文件，然后传递这个相对文件路径，随后`Diagtrack`成功开始跟踪相关事件。
典型的`WindowsPerformanceRecorder`配置文件至少应该满足如下格式：
## 0x01 信息泄露
由于我们具备该文件的完整控制权限，因此可能有一些攻击机会。该文件中`EventCollector`元素的`Name`属性用来创建跟踪事件的文件名，配置文件对应的文件路径为：
    C:\Windows\Temp\DiagTrack_alternativeTrace\WPR_initiated_DiagTrackAlternativeLogger_DiagTrack_XXXXXX.etl
其中`XXXXXX`为`Name`属性的值。
由于我们可以控制文件名及路径，因此可以将名字设置为`\..\..\file.txt`，对应的路径为：
    C:\Windows\Temp\DiagTrack_alternativeTrace\WPR_initiated_DiagTrackAlternativeLogger_DiagTrack\..\..\file.txt:.etl
这将导致目标服务使用的是`C:\Windows\Temp\file.txt`文件。
目标服务会使用`SYSTEM`权限，通过 **[FILE_OVERWRITE_IF](https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntcreatefile)**
参数来打开事件记录文件，因此我们有可能使用`SYSTEM`权限覆盖可写的任何文件。如果在`SYSTEM`可写的路径中附加`::$INDEX_ALLOCATION`，那么也有可能创建文件及目录。
从信息泄露角度来看，能够选择目标服务所执行的ETW Provider本身就是非常有趣的一个攻击点。
如果某个服务在某个目录中创建了一个文件，而我们不具备该目录的权限，导致无法列出相关的文件，此时这种技术就能派上用场。
如下图所示，我们可以借助`Microsoft-Windows-Kernel-File`
Provider，从`etl`文件中获取这些文件名，具体方式是在`WindowsPerformanceRecorder`配置文件中添加`22FB2CD6-0E7B-422B-A0C7-2FAD1FD0E716`信息：
     0xFFFF81828C6AC858
     0xFFFF81828C85E760