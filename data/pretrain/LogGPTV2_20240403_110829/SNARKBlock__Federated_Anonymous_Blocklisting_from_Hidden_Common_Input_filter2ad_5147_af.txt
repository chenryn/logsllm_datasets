the random beacon model. Cryptology ePrint Archive,
Report 2017/1050, 2017. https://eprint.iacr.org/2017/1050.
[BKSV20] Karim Baghery, Markulf Kohlweiss, Janno Siim, and
Mikhail Volkhov. Another look at extraction and random-
ization of groth’s zk-SNARK. Cryptology ePrint Archive,
Report 2020/811, 2020. https://eprint.iacr.org/2020/811.
[BMM+20] Benedikt B¨unz, Mary Maller, Pratyush Mishra, Nirvan
Tyagi, and Psi Vesely. Proofs for inner pairing products
and applications. Cryptology ePrint Archive, Report
2019/1177, 2020. https://eprint.iacr.org/2019/1177.
[BGM17]
[BMW03] Mihir Bellare, Daniele Micciancio, and Bogdan Warinschi.
Foundations of group signatures: Formal deﬁnitions, sim-
pliﬁed requirements, and a construction based on general
assumptions. In Eli Biham, editor, EUROCRYPT 2003,
volume 2656 of LNCS, pages 614–629. Springer, Heidel-
berg, May 2003.
Sean Bowe. BLS12-381: New zk-SNARK Elliptic Curve
Construction, 2017. https://electriccoin.co/blog/new-snark
-curve/.
[Cv91]
[CS03]
[CS97]
[CL02]
[Cha85]
[CCDW20] Weikeng Chen, Alessandro Chiesa, Emma Dauterman,
and Nicholas P. Ward. Reducing participation costs via
incremental veriﬁcation for ledger systems. Cryptology
ePrint Archive, Report 2020/1522, 2020. https://ia.cr/20
20/1522.
David Chaum. Security without identiﬁcation: Transaction
systems to make big brother obsolete. Commun. ACM,
28(10):1030–1044, 1985.
Jan Camenisch and Anna Lysyanskaya. Dynamic accumu-
lators and application to efﬁcient revocation of anonymous
credentials. In Moti Yung, editor, CRYPTO 2002, volume
2442 of LNCS, pages 61–76. Springer, Heidelberg, August
2002.
Jan Camenisch and Markus Stadler. Proof systems for
general statements about discrete logarithms. Technical
report, 1997.
Jan Camenisch and Victor Shoup. Practical veriﬁable
encryption and decryption of discrete logarithms. In Dan
Boneh, editor, CRYPTO 2003, volume 2729 of LNCS,
pages 126–144. Springer, Heidelberg, August 2003.
David Chaum and Eug`ene van Heyst. Group signatures.
In Donald W. Davies, editor, EUROCRYPT’91, volume
547 of LNCS, pages 257–265. Springer, Heidelberg, April
1991.
Facebook. Help Center - What names are allowed on
Facebook? https://www.facebook.com/help/1121467055
38576. Accessed on Nov. 26, 2021.
FCC. Internet access services: Status as of december 31,
2018. https://docs.fcc.gov/public/attachments/DOC-3669
80A1.pdf, 2020.
Georg Fuchsbauer, Eike Kiltz, and Julian Loss. The alge-
braic group model and its applications. In Hovav Shacham
and Alexandra Boldyreva, editors, CRYPTO 2018, Part II,
volume 10992 of LNCS, pages 33–62. Springer, Heidel-
berg, August 2018.
Amos Fiat and Adi Shamir. How to prove yourself:
Practical solutions to identiﬁcation and signature problems.
In Andrew M. Odlyzko, editor, CRYPTO’86, volume 263
of LNCS, pages 186–194. Springer, Heidelberg, August
1987.
Georg Fuchsbauer. Subversion-zero-knowledge SNARKs.
Cryptology ePrint Archive, Report 2017/587, 2017. https:
//eprint.iacr.org/2017/587.
[FCC20]
[FKL18]
[Fuc17]
[FS87]
[Fac]
[Gro16]
[GKK+19] Lorenzo Grassi, Daniel Kales, Dmitry Khovratovich,
Arnab Roy, Christian Rechberger, and Markus Schofneg-
ger. Starkad and Poseidon: New hash functions for zero
knowledge proof systems. Cryptology ePrint Archive,
Report 2019/458, 2019. https://eprint.iacr.org/2019/458.
Jens Groth. On the size of pairing-based non-interactive
arguments. In Marc Fischlin and Jean-S´ebastien Coron,
editors, EUROCRYPT 2016, Part II, volume 9666 of LNCS,
pages 305–326. Springer, Heidelberg, May 2016.
Ryan Henry and Ian Goldberg. Formalizing anonymous
blacklisting systems. In 2011 IEEE Symposium on Security
and Privacy, pages 81–95. IEEE Computer Society Press,
May 2011.
[HG11]
[JKTS07]
[HKR19] Max Hoffmann, Michael Klooß, and Andy Rupp. Efﬁcient
zero-knowledge arguments in the discrete log setting, re-
visited. In Lorenzo Cavallaro, Johannes Kinder, XiaoFeng
Wang, and Jonathan Katz, editors, ACM CCS 2019, pages
2093–2110. ACM Press, November 2019.
Peter C. Johnson, Apu Kapadia, Patrick P. Tsang, and
Sean W. Smith. Nymble: Anonymous IP-address blocking.
In Nikita Borisov and Philippe Golle, editors, PET 2007,
volume 4776 of LNCS, pages 113–133. Springer, Heidel-
berg, June 2007.
Abhiram Kothapalli, Srinath T. V. Setty, and Ioanna Tzialla.
Nova: Recursive zero-knowledge arguments from folding
[KST21]
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:56 UTC from IEEE Xplore.  Restrictions apply. 
961
[LH10]
[LLX07]
[Lyn]
[MP21]
[Rad21]
[Red20]
schemes. Cryptology ePrint Archive, Report 2021/370,
2021. https://eprint.iacr.org/2021/370.
Zi Lin and Nicholas Hopper. Jack: Scalable accumulator-
based nymble system. pages 53–62, 01 2010.
Jiangtao Li, Ninghui Li, and Rui Xue. Universal accumu-
lators with efﬁcient nonmembership proofs. In Jonathan
Katz and Moti Yung, editors, ACNS 07, volume 4521 of
LNCS, pages 253–269. Springer, Heidelberg, June 2007.
Ben Lynn. PBC Library - Pairing-Based Cryptography -
About.
Tal Malkin and Chris Peikert, editors. CRYPTO 2021,
Part I, volume 12825 of LNCS, Virtual Event, August
2021. Springer, Heidelberg.
Radiolab. The Ceremony, 2021. https://www.wnycstudios.
org/podcasts/radiolab/articles/ceremony.
Reddit Staff. Reddit in 2020. (https://old.reddit.com/r/blo
g/comments/k967mm/reddit in 2020/, 2020.
[Sal19]
[TAKS10]
[TAKS08]
[RMM21] Michael Rosenberg, Mary Maller, and Ian Miers. Snark-
block: Federated anonymous blocklisting from hidden
common input aggregate proofs. Cryptology ePrint
Archive, Report 2021/1577, 2021. https://ia.cr/2021/1577.
Sara Salinas. Facebook pays the reviewers ﬁltering porn
and murder a tiny fraction of its median salary, explosive
report says. https://www.cnbc.com/2019/02/25/facebook
-pays-content-moderators-a-fraction-of-median-salary-r
eport.html, Feb 2019.
Patrick P. Tsang, Man Ho Au, Apu Kapadia, and Sean W.
Smith. PEREA: towards practical TTP-free revocation in
anonymous authentication. In Peng Ning, Paul F. Syverson,
and Somesh Jha, editors, ACM CCS 2008, pages 333–344.
ACM Press, October 2008.
Patrick P. Tsang, Man Ho Au, Apu Kapadia, and Sean W.
Smith. BLAC: Revoking Repeatedly Misbehaving Anony-
mous Users without Relying on TTPs. ACM Transactions
on Information and System Security, 13(4):1–33, Decem-
ber 2010.
P. P. Tsang, A. Kapadia, C. Cornelius, and S. W. Smith.
Nymble: Blocking misbehaving users in anonymizing
networks. IEEE Transactions on Dependable and Secure
Computing, 8(2):256–269, 2011.
Giuseppe Vitto and Alex Biryukov. Dynamic universal
accumulator with batch update over bilinear groups.
Cryptology ePrint Archive, Report 2020/777, 2020. https:
//eprint.iacr.org/2020/777.
https://stats.wikimedia.org/#/en.wikipedia.org/contrib
uting/edits/normal|bar|2020-11-04∼2021-11-24|∼total|
monthly.
[TKCS11]
[VB20]
[Wik]
[WZC+18] Howard Wu, Wenting Zheng, Alessandro Chiesa,
Raluca Ada Popa, and Ion Stoica. DIZK: A distributed
zero knowledge proof system.
In William Enck and
Adrienne Porter Felt, editors, USENIX Security 2018,
pages 675–692. USENIX Association, August 2018.
ZCash. What is Jubjub?, 2019. https://z.cash/technology/
jubjub/.
[ZCa19]
APPENDIX
A. Cryptographic Deﬁnitions
We leave the full deﬁnitions of the cryptographic
assumptions we rely on for the extended version of
this paper [RMM21]. We will use the deﬁnition of the
Discrete Log (DL) assumption from [FKL18] and the
deﬁnitions of the q-ASDBP and q-SDH assumptions from
[BMM+20].
We will use the deﬁnitions of computation knowledge
soundness and perfect honest-veriﬁer zero-knowledge
(HVZK) from [BMM+20] in the following proofs of
soundness and zero-knowledge.
B. Deferred proofs
Recall RHMIPP is a zero-knowledge (“hiding”) version
of the RMIPP−k relation. Both relations are detailed in
Figure 1, and their proof systems are given in [BMM+20].
We defer the proof of knowledge soundness to the
extended version of this paper [RMM21].
Lemma 4. The HMIPP protocol
(Lemma 5 in [BMM+20])
Lemma 5 (HMIPP Computational Knowledge Sound-
ness). HMIPP on n elements is computationally knowl-
edge sound against algebraic adversaries under the n-
ASDBP and 2n-SDH assumptions.
is perfect HVZK.
Recall RHWW is the proof of hidden wire well-
formedness described in Section VI. We state its theorems
of soundness and zero-knowledge below, and defer the
proofs and full description of the algorithms to the
extended version of this paper.
Lemma 6. HWW is Perfect HVZK.
Lemma 7. HWW is statistically knowledge-sound.
Theorem 1 (SNARKBLOCK Security). SNARKBLOCK
described in Figure 3 is blocklistable, anonymous and
non-frameable provided that Groth16 and HICIAP proofs
are knowledge-sound and subversion zero-knowledge;
Schnorr signatures are unforgeable; Prf is pseudorandom;
and Com is binding and hiding.
Proof Sketch. Blocklistability. Let A be an adversary
that breaks blocklistability. Then A generates a verifying
attestation (πzkbl, tag, nonce). Either an extractor can
output k such that tag = Prfk(n); or ˆπtag is a forgery for
HICIAP and we cannot extract a verifying Groth16 state-
ment and proof k,πtag breaking knowledge soundness;
or πtag is a forgery for Groth16 and tag (cid:54)= Prfk(nonce)
breaking knowledge soundness.
Either an extractor can output a verifying signature
σ under some identity providers public key pki∗ on the
message com = Com(k,r) the same k and some r; or
ˆπlink is a forgery for Link breaking knowledge soundness;
or the adversary can ﬁnd com = Com(k(cid:48),r(cid:48)) for different
k(cid:48),r(cid:48) breaking binding; or ˆπisu is a forgery for HICIAP
and we cannot extract a verifying Groth16 proof πisu for
k breaking knowledge soundness; or ((k, I ),πisu) is a
forgery for Groth16 breaking knowledge soundness. If
σ is a verifying signature then either pki∗ authenticated
com at some point, or we break unforgeability of the
signature scheme.
If σ has been authenticated by pki∗ that gets blocked
then (tag, nonce) gets added to L . If A later generates a
verifying attestation with respect to the same σ then either
ˆπlink is a forgery for Link breaking knowledge soundness;
or the adversary can ﬁnd com = Com(k(cid:48),r(cid:48)) for different
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:56 UTC from IEEE Xplore.  Restrictions apply. 
962
k(cid:48),r(cid:48) breaking binding; or ˆπchunk is a forgery for HICIAP
and we cannot extract verifying Groth16 proofs πchunk j
for k breaking knowledge soundness; or πchunk j
is a
forgery for Groth16 for some j and Prfk(nonce∗) = tag∗
for some (nonce∗, tag∗) ∈ L breaking knowledge sound-
ness; or σ is never associated with a blocked session and
A does not break blocklistability.
Non-Frameability.
If an adversarial identity provider
prevents an honest user from authenticating then they
must get some (nonce, tag) added to L such that
tag = Prfk(nonce) for an honest user’s k. By the pseudo-
randomness of Prf and the anonymity of SNARKBLOCK,
the probability that they guess any such tag is negligible.
Anonymity. We claim that the transcript between an
honest user and any number of identity providers and
service providers is uncorrelated. By the hiding of Com
we have that com reveals no information about k (and uses
distinct r each registration). By the zero-knowledge of
HICIAP we have that πzkbl reveals no information (even
to the identity providers). nonce is chosen uniformly
at random for each session associated with k. By the
pseudorandomness of Prf, tag is indistinguishable from
random for users that don’t know k and thus reveals no
information about k. Thus the scheme is anonymous. (cid:3)
Theorem 2 (HICIAP Soundness). HICIAP on n − 2
proofs has witness-extended emulation against algebraic
adversaries under the DL, n-ASDBP, and 2n-SDH
assumptions.
Proof. We wish to show that, there exists an expected
HICIAP(ck, crs, ˆS)
polynomial
which outputs a witness (a0,A(cid:48),B(cid:48),C(cid:48)) such that for all
i = 1, . . . ,n− 2,
time HICIAP extractor EP∗
Groth16.Vfy(cid:0)crs, (A(cid:48)
i), (a0, ˆSi)(cid:1) .
time
there
extracts
polynomial
By Theorem 3 of
is
extractor ETIPP
an
for
expected
(A,B)
TIPP(comA, comB, aggAB,r) which
such that comA = A ∗ ck1, comB = ck2 ∗ B, and
aggAB = Ar ∗ B. By Theorem 6 of [BMM+20], there
is an expected polynomial time extractor EMIPP−k for
MIPPk(comin, aggin,r(cid:48)) which extracts
ˆS(cid:48) such that
ˆS(cid:48) ∗ ck1,[:n−2] = comin and (ˆS(cid:48))r(cid:48)
= aggin. By Lemma 5,
there is an expected polynomial time extractor EHMIPP
for HMIPP(comC, aggC,r) which extracts (C,z4) such
that Cr = aggC and comC = e(z4G, ck3) + (C∗ ck1). By
Lemma 7, there is an expected polynomial time extractor
EHWW(coma0,W,P1,P2,P3,G1,G2)
for HWW which
extracts (a0,z1,z3) such that coma0 = a0P1 + z1P2 + z3P3
and W = a0G1 + z1G2.
Let P∗ be a probabilistic prover with ﬁxed randomness
and unknown probability ε of producing an argument
that accepts. We deﬁne an extractor EP∗
HICIAP(ck, crs, ˆS),
which extracts the witness (a0,A,B,C), as follows.
i,C(cid:48)
i,B(cid:48)
[BMM+20],
First, run HICIAP with a random r ← F, and run all
the subprotocols honestly. Note that, by the deﬁnition of