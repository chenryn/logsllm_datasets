[dmtsai@study ~]$ echo $myname
VBird its me
[dmtsai@study ~]$ myname='$name its me'
[dmtsai@study ~]$ echo $myname
$name its me
发现了吗？没错！使用了单引号的时候，那么 $name 将失去原有的变量内容，仅为一般字符的显示型态而已！这里必需
要特别小心在意！
例题：
在指令下达的过程中，反单引号（ ` ）这个符号代表的意义为何？
答：
在一串指令中，在 ` 之内的指令将会被先执行，而其执行出来的结果将做为外部的输入信息！例如 uname -r 会显示出目
前的核心版本，而我们的核心版本在 /lib/modules 里面，因此，你可以先执行 uname -r 找出核心版本，然后再以“ cd 目
录”到该目录下，当然也可以执行如同上面范例六的执行内容啰。
另外再举个例子，我们也知道， locate 指令可以列出所有的相关文件文件名，但是，如果我想要知道各个文件的权限
呢？举例来说，我想要知道每个 crontab 相关文件名的权限：
[dmtsai@study ~]$ ls -ld `locate crontab`
[dmtsai@study ~]$ ls -ld $（locate crontab）
如此一来，先以 locate 将文件名数据都列出来，再以 ls 指令来处理的意思啦！了了吗？ ^_^
例题：
若你有一个常去的工作目录名称为：“/cluster/server/work/taiwan_2015/003/”，如何进行该目录的简化？
答：
在一般的情况下，如果你想要进入上述的目录得要“cd /cluster/server/work/taiwan_2015/003/”， 以鸟哥自己的案例来
说，鸟哥跑数值模式常常会设置很长的目录名称（避免忘记），但如此一来变换目录就很麻烦。 此时，鸟哥习惯利用下
面的方式来降低指令下达错误的问题：
[dmtsai@study ~]$ work="/cluster/server/work/taiwan_2015/003/"
[dmtsai@study ~]$ cd $work
未来我想要使用其他目录作为我的模式工作目录时，只要变更 work 这个变量即可！而这个变量又可以在 bash 的配置文
件（~/.bashrc）中直接指定，那我每次登陆只要执行“ cd $work ”就能够去到数值模式仿真的工作目录了！是否很方便
呢？ ^_^
环境变量可以帮我们达到很多功能～包括主文件夹的变换啊、提示字符的显示啊、可执行文件搜寻的路径啊等等的， 还有很多很多啦！
那么，既然环境变量有那么多的功能，问一下，目前我的 shell 环境中， 有多少默认的环境变量啊？我们可以利用两个指令来查阅，分别是
env 与 export 呢！
用用 env 观观察察环环境境变变量量与与常常见见环环境境变变量量说说明明
范例一：列出目前的 shell 环境下的所有环境变量与其内容。
[dmtsai@study ~]$ env
HOSTNAME=study.centos.vbird  ' <== 如果你使用跳脱符号 （\） 第二行以后的提示字符也
$ <== 目前这个 shell 所使用的 PID
? <== 刚刚执行完指令的回传值。
...
# 有许多可以使用的函数库功能被鸟哥取消啰！请自行查阅！
一般来说，不论是否为环境变量，只要跟我们目前这个 shell 的操作接口有关的变量， 通常都会被设置为大写字符，也就是说，“基本
上，在 Linux 默认的情况中，使用{大写的字母}来设置的变量一般为系统内定需要的变量”。 OK！OK！那么上头那些变量当中，有哪些是比较
重要的？大概有这几个吧！
PS1：（提示字符的设置）
这是 PS1 （数字的 1 不是英文字母），这个东西就是我们的“命令提示字符”喔！ 当我们每次按下 [Enter] 按键去执行某个指令
后，最后要再次出现提示字符时， 就会主动去读取这个变量值了。上头 PS1 内显示的是一些特殊符号，这些特殊符号可以显示不同的
信息， 每个 distributions 的 bash 默认的 PS1 变量内容可能有些许的差异，不要紧，“习惯你自己的习惯”就好了。 你可以用 man bash
[3]去查询一下 PS1 的相关说明，以理解下面的一些符号意义。
\d ：可显示出“星期 月 日”的日期格式，如："Mon Feb 2"
\H ：完整的主机名称。举例来说，鸟哥的练习机为“study.centos.vbird”
\h ：仅取主机名称在第一个小数点之前的名字，如鸟哥主机则为“study”后面省略
\t ：显示时间，为 24 小时格式的“HH:MM:SS”
\T ：显示时间，为 12 小时格式的“HH:MM:SS”
\A ：显示时间，为 24 小时格式的“HH:MM”
\@ ：显示时间，为 12 小时格式的“am/pm”样式
\u ：目前使用者的帐号名称，如“dmtsai”；
\v ：BASH 的版本信息，如鸟哥的测试主机版本为 4.2.46（1）-release，仅取“4.2”显示
\w ：完整的工作目录名称，由根目录写起的目录名称。但主文件夹会以 ~ 取代；
\W ：利用 basename 函数取得工作目录名称，所以仅会列出最后一个目录名。
\# ：下达的第几个指令。
\$ ：提示字符，如果是 root 时，提示字符为 # ，否则就是 $ 啰～
好了，让我们来看看 CentOS 默认的 PS1 内容吧：“[\u@\h \W]\$ ”，现在你知道那些反斜线后的数据意义了吧？ 要注意喔！那个
反斜线后的数据为 PS1 的特殊功能，与 bash 的变量设置没关系啦！不要搞混了喔！ 那你现在知道为何你的命令提示字符是：“
[dmtsai@study ~]$ ”了吧？好了，那么假设我想要有类似下面的提示字符：
[dmtsai@study /home/dmtsai 16:50 #12]$
那个 # 代表第 12 次下达的指令。那么应该如何设置 PS1 呢？可以这样啊：
[dmtsai@study ~]$ cd /home
[dmtsai@study home]$ PS1='[\u@\h \w \A #\#]\$ '
[dmtsai@study /home 17:02 #85]$
# 看到了吗？提示字符变了！变的很有趣吧！其中，那个 #85 比较有趣，
# 如果您再随便输入几次 ls 后，该数字就会增加喔！为啥？上面有说明滴！