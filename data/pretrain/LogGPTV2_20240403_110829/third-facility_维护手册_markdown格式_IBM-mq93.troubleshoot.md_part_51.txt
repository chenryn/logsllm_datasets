where LOGGERNAME is the name of the Managed File Transfer logger that is hanging.
The javacores generated by this method are stored in the Managed File Transfer data directory,
based on the coordination queue manager name and the agent name. For example:
On UNIX and Linux
/var/mqm/mqft/logs/COORDQMNAME/loggers/LOGGERNAME
/var/mqm/mqft/logs/COORDQMNAME/agents/AGENTNAME
On Windows
C:\Program Files\IBM\MQ\mqft\logs\COORDQMNAME\agents\AGENTNAME
C:\Program Files\IBM\MQ\mqft\logs\COORDQMNAME\loggers\LOGGERNAME
This location might vary, depending on which version of IBM MQ you are using. For more
information, see Program and data directory locations on Windows.
In these examples, AGENTNAME or LOGGERNAME is the name of the Managed File Transfer agent
or logger that is hanging, and COORDQMNAME is the name of the coordination queue manager.
2.For all other Managed File Transfer commands, generate three javacores from the process as shown
in the following examples.
The javacores or thread dumps in this case are typically written to the working directory of the
command.
a)
On UNIX and Linux, list the Java virtual machines that are using ps and find the one that is running
the hanging Managed File Transfer command. Then send SIGQUIT to that process identifier (PID)
to generate a javacore or thread dump.
The kill -QUIT command does not terminate Java virtual machines on UNIX and Linux, but
instead makes them create a javacore or thread dump. For example:
sh> ps -ef | egrep 'PID|StartAgent'
UID PID PPID C STIME TTY TIME CMD
7001 37789 1 0 Sun03PM ?? 3:07.35 java ... com.ibm.wmqfte.api.StartAgent
AGENT1
7001 69177 64373 0 2:35PM ttys003 0:00.00 egrep PID|StartAgent
sh> kill -QUIT 37789
...
sh> kill -QUIT 37789
...
sh> kill -QUIT 37789
b)
On Windows, start the Managed File Transfer command from the Windows command prompt.
IBM MQ troubleshooting and support 325
Be sure to add the -F option to the fteStartAgent and fteStartLogger commands so that
they will run in the foreground and not in the background or as a Windows service. Then type the
Ctrl+Break keyboard sequence to generate a javacore from the process. For example:
C:\> fteStartLogger -F LOGGER1
...
Ctrl+Break
...
Ctrl+Break
...
Ctrl+Break
c)
On IBM i, list the Java virtual machine jobs in the system using WRKJVMJOB option 7 to find the
one running the hanging managed file transfer command. Then press F3 to exit and use the job
Number, User and Job name to generate a Java thread dump from the job.
For example:
===> WRKJVMJOB
Opt Job Name User Number Function Status
QJVACMDSRV QMQM 136365 PGM-StartAgent THDW
QYPSJSVR QYPSJSVR 136415 PGM-jvmStartPa SIGW
Use option 7 to find the right job and F3 to return to the command line:
===> GENJVMDMP JOB(136365/QMQM/QJVACMDSRV) TYPE(*JAVA)
3.
On UNIX and Linux, use the stackit and sigdump scripts to generate debugging data from
processes.
a)Download the IBM stackit and sigdump scripts. On Linux systems you must install the GNU
debugger (GDB), even if temporarily, for stackit to work:
• Download stackit
• Download GDB for Linux
b)Run the stackit script three times against the affected IBM MQ queue managers and
applications, with a delay of a minute or less between each run.
For example:
sh> stackit -m QMA -m QMB -n myapp -f /var/mqm/errors/stackit-1.txt
sh> sleep 30
sh> stackit -m QMA -m QMB -n myapp -f /var/mqm/errors/stackit-2.txt
sh> sleep 30
sh> stackit -m QMA -m QMB -n myapp -f /var/mqm/errors/stackit-3.txt
c)Run the sigdump script once against the affected IBM MQ queue managers. The sigdump script
will cause each queue manager to generate diagnostic FFST files.
For example:
sh> sigdump -m QMA -m QMB
4.
On Windows, generate debugging from processes by using debugging utilities.
a)Download the following debugging utilities from Microsoft if you do not have them on your system:
• The latest version of the debugging tools for Windows, obtained from Debug Diagnostic Tool
• Download Microsoft PsList
• Download Microsoft Handle
• Download Microsoft Process Monitor
326 Troubleshooting and Support for IBM MQ
b)Display the list of processes:
C:\> tasklist -v
c)Display additional information about each process:
C:\> pslist -x
d)Display information about IBM MQ processes and any affected applications by passing the first
few characters of each process name to the handle program, for example:
C:\> handle -a -p amq
C:\> handle -a -p runmq
C:\> handle -a -p myapp
e)Gather data from hangs (or even crashes) of IBM MQ processes and any affected applications, for
example:
C:\> adplus -hang -pn amqzxma0.exe
C:\> adplus -hang -pn amqzlaa0.exe
C:\> adplus -crash -pn runmqchi.exe
f)Use the Microsoft Process Monitor tool to provide real-time stack data, loaded modules,
environment information, files accessed, libraries used, registry keys accessed, and more
information.
This tool can be very CPU intensive, even with filtering options set. See the section "Scripting
Process Monitor" in the included procmon.chm help file for information on using it in a script or
batch file.
5.
On IBM i, generate debugging data from processes by using the MQSTACK and SERVICEDOCS tools:
a)Download and run the IBM MQSTACK tool. MQSTACK will show the status of all threads for all
queue manager processes, however it does not show information about non-IBM processes.
b)For processes that are not part of the queue manager, such as application programs, run the
SERVICEDOCS utility. SERVICEDOCS will show the stack for the main thread of every process on
the system.
6.Generate an IBM MQ trace while the problem is happening:
• Linux and UNIX
• Windows
• IBM i
To avoid worsening the system performance, stop the trace after a short period of time (for example,
after a minute or less).
7.If the hang or high CPU usage is happening inside WebSphere Application Server, complete the
WebSphere Application Server MustGather instructions for your platform:
• AIX
• Linux
• Windows
• IBM i
8.
On UNIX and Linux systems, save the output from the mqconfig command.
9.Place the following information directly in the top-level IBM MQ errors directory:
• The debug files that you collected in Step 1.
IBM MQ troubleshooting and support 327
• The output from the mqconfig command that you collected in Step 4.
The automatic and manual data collection processes in Step “10” on page 328 both collect files
found in this directory.
10.Collect the IBM MQ data.
You can do this either automatically or manually:
• Collect the data automatically by using the runmqras command as described in “Collecting
troubleshooting information automatically with runmqras” on page 303. Be sure to collect the
runmqras defs, cluster, and trace sections, and to specify your case number as shown in the
following example:
runmqras -section defs,cluster,trace -qmlist QMA -caseno TS001234567
• Alternatively, collect the data manually as described in “Collecting troubleshooting information
manually” on page 306.
11.Send the information that you have collected to IBM.
A good description of the problem and the data is the most important information you can provide to
IBM. Do not send data without providing a description!
For FTP and email instructions, see Exchanging information with IBM Software Support.
To open or update a case, go to the IBM My Support site.
Note: Always update your case to indicate that data was sent.
If you need to speak with IBM Software Support, contact your country representative. If you need to
speak with IBM Software Support in the US, you can call 1-800-IBM-SERV.
Related tasks
“Troubleshooting message problems” on page 177
Collecting information for IBM MQ Explorer problems
If you need assistance from IBM Support to resolve a problem with IBM MQ Explorer when administering
a queue manager , you first need to collect troubleshooting information to send to IBM Support to help
find a solution.
Before you begin
Before you start this task, answer the following questions about the problem:
• What IBM MQ Explorer problem did you observe on the system?
• Which queue managers are you trying to administer, and on what systems are they located?
• Which operating system version and IBM MQ version are the remote queue managers running?
From IBM MQ 9.3.0, the IBM MQ Explorer feature is no longer included in
the Server product on Windows or Linux x86_64. It is still available as a separate download for those
platforms. For more information, see Installing and uninstalling IBM MQ Explorer as a stand-alone
application on Linux and Windows.
About this task
IBM MQ Explorer is available for Linux and Windows systems as a standalone installation through Fix
Central. IBM MQ Explorer can administer local queue managers where it is installed as well as remote
queue managers on all platforms.
It is important to gather information from the IBM MQ Explorer when the problem is happening in order to
identify the cause.
After collecting the troubleshooting information, you can send it to IBM.
328 Troubleshooting and Support for IBM MQ
Procedure
1.Generate an IBM MQ Explorer trace which shows the problem when you try to use IBM MQ Explorer to
administer the queue manager.
2.Generate a trace of the queue manager while the application is putting the message:
• “Tracing on AIX and Linux” on page 376
• “Tracing on Windows” on page 391
• “Tracing on IBM i” on page 381
3.If there is a graphical problem in IBM MQ Explorer, take a screen shot or use a camera phone to
capture an image of the problem.
4.Collect the IBM MQ data.
a)Record the MQ Explorer version and maintenance level.
b)Record the MQ version and maintenance level of the target queue manager.
c)Record the operating system version and maintenance level where both the IBM MQ Explorer and
the target queue manager are running.
d)If you are using the stand-alone IBM MQ Explorer installed from Fix Central, list the contents of its
installation directory, for example:
sh> ls -alR "/opt/ibm/wmq-explorer"
C:\> DIR /S "C:\Program Files\IBM\MQ Explorer"
Note: The directory name is chosen during installation and might differ from these examples.
e)Find the IBM MQ Explorer .log file.
When IBM MQ Explorer encounters an error, it might create a file called just .log with more
information. Look for the .log file in the appropriate directory based on the IBM MQ Explorer
installation type and the user who encountered the problem, and collect the .log file as well as all
other files in the .metadata directory. In the following examples, $HOME and %USERPROFILE%
are user-specific environment variables used to locate the files.
To find the .log file for the stand-alone IBM MQ Explorer:
sh> ls -al "$HOME"/IBM/*MQ/workspace/.metadata/.log
C:\> DIR "%USERPROFILE%\IBM\*MQ\workspace\.metadata\.log"
f)If IBM MQ Explorer is having difficulty connecting, use your operating system tools to list network
connections on both sides immediately before and after the connection attempt:
• To display network connections on UNIX and Linux:
sh> netstat -an
• To display network connections on Windows:
C:\>NETSTAT -AN
g)Manually package your files for IBM:
• “Manually packaging information on UNIX and Linux” on page 311
• “Manually packaging information on Windows” on page 313
5.Send the information that you have collected to IBM.
IBM MQ troubleshooting and support 329
A good description of the problem and the data is the most important information you can provide to
IBM. Do not send data without providing a description!
For FTP and email instructions, see Exchanging information with IBM Software Support.
To open or update a case, go to the IBM My Support site.
Note: Always update your case to indicate that data was sent.
If you need to speak with IBM Software Support, contact your country representative. If you need to
speak with IBM Software Support in the US, you can call 1-800-IBM-SERV.
Related tasks
Troubleshooting problems with IBM MQ Explorer
Collecting information for installation and uninstallation problems
If you need assistance from IBM Support to resolve a problem IBM MQ or one of its fix packs is failing
to install or uninstall properly on Multiplatforms, you first need to collect troubleshooting information to
send to IBM Support to help find a solution.
Before you begin
Before you start this task, answer the following questions about the problem:
• What are you trying to install or uninstall?
• What account are you using to perform the installation or uninstallation?
About this task
It is helpful to gather information from the system when the installation or uninstallation problem is
happening in order to identify the cause.
After collecting the data, you can then send the information that you have collected to IBM.
Procedure
1.Run the installation or uninstallation with debug logging enabled in order to gather more detailed
information about the failure:
a)
To generate debug installation and uninstallation data on AIX:
i)Export the environment variable INST_DEBUG=YES, which directs AIX to log extra debugging
information. Then run the installation or uninstallation, either through SMIT or by running the
installp command directly. For example:
sh> export INST_DEBUG=YES
sh> installp...
ii)Unset the INST_DEBUG variable when done:
sh> unset INST_DEBUG
The smit.log file, located in the root directory of the system, will contain the debugging
information from the installation or uninstallation attempt.
b)
To generate debug installation and uninstallation data on Linux, add the -vv option to the rpm
command and capture all output (stdout and stderr) to a file.
For example:
sh> rpm -vv ... 2>&1 | tee mqinstall.log
330 Troubleshooting and Support for IBM MQ
c)
To generate debug installation and uninstallation data on Windows, use the msiexec command
with the option /l*vx to log debugging output to a file.
To determine what additional parameters to use to install or uninstall IBM MQ with msiexec, see
Installing the server using msiexec. For example:
C:\> msiexec /l*vx "C:\mqinstall.log" ...
d)
To generate debug installation and uninstallation data on IBM i, specify the OUTPUT(*PRINT)
option on the RSTLICPGM or DLTLICPGM commands to ensure that a job log is spooled.
For example:
===> RSTLICPGM ... OUTPUT(*PRINT)
Then use WRKSPLF option 5 to display the joblog.
2.Collect the IBM MQ data.
Save the output of any errors reported by the installation or uninstallation process. Take a screen shot
of the error, or use a camera phone to capture an image of the problem.
a)Record the MQ version and maintenance level currently on the system or identify the version you
are attempting to install.
b)Record the operating system version and maintenance level.
c)If your system has more than one IBM MQ installation, record your IBM MQ installation details:
• On UNIX and Linux:
sh> dspmqinst > /tmp/dspmqinst.txt
• On Windows:
C:\> dspmqinst > %TEMP%/dspmqinst.txt
d)
On UNIX and Linux systems, include the /etc/opt/mqm/mqinst.ini file, if it exists.
e)
On Windows systems, save a copy of the MQ information from the Windows registry information
using the amquregn program, if you have an IBM MQ installation available to run it.
f)Record the precise commands that you used to start the installation or uninstallation process.
On Linux, include the crtmqpkg command that you used to repackage IBM MQ, if you
are working with multiple installations.
g)
On AIX systems, collect the smit.log and smit.script files found in the root directory of the
system.
h)
On Windows systems, collect the MSI installer log file. If you used msiexec, then you will
have selected the file name on the command line. Otherwise, include all files named MSI*.*,
MQ*.*, and amq*.* located in the %TEMP% directory of the user who attempted the installation
or uninstallation. Include the files amqmsccw.txt and amqmjpse.txt from the IBM MQ data
directory, if they exist.