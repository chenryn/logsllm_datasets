### Automated PIN Cracking

**Presenters:**
- **Justin Engler**: Senior Security Engineer, iSEC Partners
- **Paul Vines**: Security Engineering Intern, iSEC Partners

**Agenda:**
1. Current PIN Cracking Methods
2. Cracking with Robots
   - R2B2 (Robotic Reconfigurable Button Basher)
   - C3BO (Capacitive Cartesian Coordinate Bruteforcing Overlay)
3. Defeating the Robots

---

### PINs and Their Vulnerabilities

- **PINs as a Lock Mechanism:**
  - One of the most popular ways to lock mobile devices.
  - Commonly only 4 digits, despite the ability to use longer PINs.
  - User-chosen, often resulting in low-entropy PINs.

### Current PIN Cracking Methods

1. **Jailbreak and Crack:**
   - **Method:** Use jailbreaking or rooting exploits on the device to bypass the lock screen.
   - **Problem:** Not all devices have known exploits for gaining root access without wiping the device.

2. **Keyboard Emulation:**
   - **Method:** If the device supports a keyboard attachment, create a device that emulates a keyboard and tries all possible PIN combinations automatically.
   - **Problem:** Not all devices support an external keyboard.

3. **Punish an Intern:**
   - **Method:** Force an intern to manually try all 10,000 4-digit combinations.
   - **Problem:** Interns may miss some combinations due to human error.

### PIN Cracking with Robots

#### Required Abilities:
- Push buttons in sequence.
- Remember which buttons were pushed.
- Recognize success.

#### Robotic Reconfigurable Button Basher (R2B2)

- **Components:**
  - **Body:** Homemade Delta Robot.
  - **Controller:** Arduino Uno.
  - **Total Cost:** Less than $200.

- **Delta Robot:**
  - Designed for fast, precise industrial work.
  - Composed of three single-motor arms, providing 3D movement with a small range of motion.
  - Simple motion control.

- **Arduino Uno:**
  - Standard microcontroller board for robotic hobbyists.
  - Open-source code for controlling a delta robot by Dan Royer (marginallyclever.com).
  - Uses serial port communication for control.
  - Easy to modify for pressing buttons and controlled via Python.

- **Modifications:**
  - The original delta robot kit was modified to use a touch-screen stylus tip for pressing buttons.
  - A camera was added to facilitate user interface setup and PIN cracking task.
  - Motion control software was adjusted to achieve up to 5 presses per second.

- **Python Integration:**
  - Controls robot movement through the serial port.
  - Performs image analysis of the camera feed.
  - Provides a simple user interface for setting up the PIN cracking task.
  - Detects successful PIN entry to stop the robot and alert the user.

- **Efficiency:**
  - Compiled password datasets to generate a frequency table of 4-digit PINs.
  - This approach is more efficient than brute-forcing all 10,000 possibilities.

- **Challenges:**
  - **Detecting Button Values:** Difficult to reliably detect on all devices.
  - **Recognizing Delays:** Some devices have easily recognizable delay messages; manual input of delay patterns can be necessary.

- **Real Buttons:**
  - R2B2 can also be used for brute-force PIN cracking on physical keypads, provided it can detect success.

### Capacitive Cartesian Coordinate Bruteforcing Overlay (C3BO)

- **Method:**
  - Attach a grid of electrodes to the device's virtual keyboard.
  - Trigger electrodes via an Arduino to simulate touches.
  - No mechanical motion, allowing faster button pressing.
  - Requires more user configuration to place the electrodes.

- **Cost and Software:**
  - Cheaper than R2B2 (~$50).
  - Similar software for controlling and detecting device state changes using a camera.

### Defeating the Robots

- **Forced Delay Timer:**
  - After X attempts, a delay timer is enforced.
  - On Android, this is always 30 seconds, making R2B2 take ~20 hours in the worst case.

- **User Lockout:**
  - On iOS, lockout occurs after 11 attempts.
  - R2B2 would be defeated unless the PIN is one of the 10 most popular.

### Comparison of Methods

- **Jailbreak + Bypass:**
  - Best if available.
- **Keyboard Emulator:**
  - Fastest brute-forcing method.
- **C3BO:**
  - Usable on any capacitive touch keyboard, slightly slower and more setup required than a keyboard emulator.
- **R2B2:**
  - Flexible and usable on almost any PIN-protected device but slower and more cumbersome.

### Acknowledgments

- Thanks to iSEC Partners and the NCC Group for supporting this research.
- Thanks to Dan Royer for providing the initial motion control code and robot build plans.