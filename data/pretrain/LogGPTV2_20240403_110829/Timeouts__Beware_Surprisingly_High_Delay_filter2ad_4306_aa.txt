title:Timeouts: Beware Surprisingly High Delay
author:Ramakrishna Padmanabhan and
Patrick Owen and
Aaron Schulman and
Neil Spring
Timeouts: Beware Surprisingly High Delay
Ramakrishna
Padmanabhan
University of Maryland
PI:EMAIL
Patrick Owen
University of Maryland
PI:EMAIL
Aaron Schulman
Stanford University
PI:EMAIL
Neil Spring
University of Maryland
PI:EMAIL
ABSTRACT
Active probing techniques, such as ping, have been used to
detect outages. When a previously responsive end host fails
to respond to a probe, studies sometimes attempt to conﬁrm
the outage by retrying the ping or attempt to identify the
location of the outage by using other tools such as tracer-
oute. The latent problem, however, is, how long should one
wait for a response to the ping? Too short a timeout risks
confusing congestion or other delay with an outage. Too
long a timeout may slow the process and prevent observ-
ing and diagnosing short-duration events, depending on the
experiment’s design.
We believe that conventional timeouts for active probes
are underestimates, and analyze data collected by Heide-
mann et al.
in 2006–2015. We ﬁnd that 5% of pings from
5% of addresses take more than 5 seconds. Put another way,
for 5% of the responsive IP addresses probed by Heidemann,
a false 5% loss rate would be inferred if using a timeout of 5
seconds. To arrive at this observation, we ﬁltered artifacts
of the data that could occur with too-long a timeout, includ-
ing responses to probes sent to broadcast addresses. We also
analyze ICMP data collected by Zmap in 2015 to ﬁnd that
around 5% of all responsive addresses observe a greater than
one second round-trip time consistently. Further, the preva-
lence of high round trip time has been increasing and it is
often associated with the ﬁrst ping, perhaps due to negotiat-
ing a wireless connection. In addition, we ﬁnd that the Au-
tonomous Systems with the most high-latency addresses are
typically cellular. This paper describes our analysis process
and results that should encourage researchers to set longer
timeouts when needed and report on timeout settings in the
description of future measurements.
Categories and Subject Descriptors
C.2.5 [Computer-Communication Networks]: Local and
WideArea Networks—Internet
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
IMC’15, October 28–30, 2015, Tokyo, Japan.
Copyright is held by the owner/author(s). Publication rights licensed to ACM.
ACM 978-1-4503-3848-6/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2815675.2815704.
Keywords
Timeouts; ICMP Echo; Ping; Outages; Reachability; Out-
age Detection; Maximum Segment Lifetime
1.
INTRODUCTION
Active probes, such as the echo requests sent by ping, can
be used to study network reliability [10,14,18,21,23]. A path
to a destination is working if the ping is successful: an echo
request solicits an echo response. An outage is detected
if a previously responsive destination stops responding to
successive probes, using multiple probes because infrequent
loss is expected in the Internet [17]. Each study then applies
a diﬀerent approach to conﬁrm or diagnose the outage.
Unfortunately, the time one should wait for a response
is not well understood. Protocols like TCP and DNS use
timeouts near three seconds, and various tools use compa-
rable thresholds: iPlane [14] uses 2 seconds with one retry,
Trinocular [18] uses 3 seconds, and Scriptroute [22] defaults
to 3 second timeouts. However, TCP and DNS are both
able to tolerate longer delays because the timeout is merely
a trigger for retransmission: both give up on the connection
much later. In contrast, network measurements that time-
out quickly have the advantage of being responsive—they
may send follow up probes to explore a potential outage—
but a disadvantage in that these detected losses, and ulti-
mately outages, may not be real.
In this paper, we try to ﬁnd a good timeout for active
probing. We begin by studying ping latencies from Internet-
wide surveys [7] conducted by ISI, including 9.64 billion
ICMP Echo Responses from 4 million diﬀerent IP addresses
in 2015. The probing scheme for this survey sets a timeout
threshold of 3 seconds [7], although this timeout appears to
vary in practice, and only matches responses that arrive be-
fore this timer ﬁres: we call these responses survey-detected
responses. Survey-detected responses include a microsecond-
precise round-trip time. When an echo request does not re-
ceive a response before the timeout, it is recorded in the data
with a timestamp in seconds. When an echo response is re-
ceived that does not match an echo request that has not yet
timed out, that response is also recorded in the data with
a timestamp in seconds. Thus it is possible to re-process
the data to identify echo responses that took longer than
the timeout to arrive. We term such responses unmatched
responses, and can determine a round trip time precise only
to seconds.
We classify unmatched responses into three categories: (a)
delayed responses potentially caused by congestion, (b) re-
303sponses that were triggered by later requests sent to broad-
cast addresses (broadcast responses), and (c) duplicate re-
sponses, some of which appear consistent with denial of ser-
vice attacks. Since broadcast responses and duplicate re-
sponses do not contribute to the latency analysis, we term
them unexpected responses and remove them with ﬁlters.
We then verify the high latencies by repeating measure-
ments using other probing techniques, comparing the statis-
tics of various surveys, and investigating high-latency be-
havior of ICMP compared to UDP and TCP. Finally, we
explain these distributions by isolating satellite links, con-
sidering sequences of latencies at a higher sampling rate, and
classifying a complete sample of the Internet address space
through a modiﬁed Zmap client. The classiﬁcation process
reveals that the Autonomous Systems with the most high
latency addresses are cellular.
This paper is organized as follows. We discuss related
work, primarily as a means of motivating our study by de-
scribing prior timeouts, in Section 2. We describe the ISI
survey dataset and our methods of extracting high latency
despite a short timeout in Section 3. Section 4 provides the
key results: how long a timeout must be to capture a high
percentage of responses from a high percentage of hosts.
Section 5 addresses doubts about whether these latencies
are real, and Section 6 focuses on identifying the networks
and behaviors responsible for high latencies. We conclude
in Section 7 with our recommendations.
2.
IMPORTANCE OF PROBE TIMEOUTS
In this section, we describe why it is important to choose
an appropriate timeout for active probes, especially when
used for outage detection. We also describe measurement
studies with particular attention to what timeouts were used
and how those timeouts were chosen.
2.1 Selecting a timeout
Conventional wisdom suggests that active probes on the
Internet should timeout after a few seconds. The belief is
that after a few seconds there is a very small chance that a
probe and response will still exist in the network.
When a probe experiences a timeout, it is generally as-
sumed that either the probe is lost or the end-host is no
longer reachable. For most active probing systems, any
timed out active probes are followed up with retransmis-
sions to increase the conﬁdence that a lack of response is
due to a lack of reachability and not loss. These followup
probes will also have a timeout that is generally the same
as the ﬁrst attempt.
Studies on Internet outages and connectivity problems
rely on these probe timeouts to indicate that hosts are no
longer reachable. However, non-responses to active probes
within a timeout can occur for other reasons than the host
being oﬄine. Selecting a timeout value that is too-low will
ignore delayed responses and might add to congestion by
performing retransmissions to an already congested host.
Timeout values that are too high will delay retransmissions
that can conﬁrm an outage. In addition, too-high timeouts
increase the amount of state that needs to be maintained
at a prober, since every probe will need to be stored until
either the probe times out, or the response arrives.
Even for studies that don’t focus upon outages, selecting a
good timeout is important. For instance, in the ISI surveys
we study, most probes solicit no responses. To the best of
our knowledge, this is the ﬁrst paper that investigates this
broad lack of responses to see if researchers are simply using
timeouts that are too short.
2.2 Timeouts used in outage and connectivity
studies
Outage detection systems such as Trinocular [18] and Thun-
derping [21] tend to use a 3 second timeout for active probes
because it is the default TCP SYN/ACK timeout [3]. Trinoc-
ular probes all /24s on the Internet [18].
It does so by
sending ICMP echo requests to a few addresses in all /24
address blocks and analyzes responses to detect outages on
the block level. Trinocular performs adaptive retransmission
and sends up to 15 additional probes to an address block
before declaring an outage for that block. Thunderping [21]
sends ICMP echo requests to IP addresses that are likely to
be subject to severe weather from multiple vantage points
periodically and detects outages when all vantage points fail
to receive a response.
It executes its probing with Scrip-
troute [22], where each probe has a 3 second timeout. Thun-
derping retransmits probes ten times before declaring a host
is unresponsive.
Internet performance monitoring systems use a wide range
of probe timeouts. On the shorter side, iPlane [14] and Hub-
ble [10] send ICMP echo requests with a 2 second timeout.
iPlane declares a host unresponsive after one failed retrans-
mission. Hubble waits two minutes after a failed probe then
retransmits probes six times and ﬁnally declares reachability
with traceroutes. On the longer side, Feamster et al. [6] used
a one hour timeout after each probe. However, they chose a
long timeout to avoid errors due to clock drift between their
probing and probed hosts; they did not do so to account for
links that have excessive delays. PlanetSeer [23] assumed
that four consecutive TCP timeouts (3.2-16 seconds) indi-
cates a path anomaly.
It is especially important for connectivity measurements
from probing hardware placed inside networks to have time-
outs because of the limited memory in the probing hard-
ware. The RIPE Atlas [19] probing hardware sends con-
tinuous pings to various hosts on the Internet to observe
connectivity. The timeout for their ICMP echo requests is
1 second [8]. The SamKnows probing hardware uses a 3
second timeout for ICMP echo requests sent during loaded
intervals [20].
We started this study with the expectation that these
timeout values might need minor adjustment to account for
large buﬀers in times of congestion; what we found was quite
diﬀerent.
3. PRIMARY DATASET OVERVIEW
In this section, we describe the ISI survey dataset we use
for our analysis of ping latency. We perform a preliminary
analysis of ping latency and ﬁnd that the dataset contains
diﬀerent types of responses that should (or should not) be
matched to identify high-latency responses. Finally, we de-
scribe techniques to remove responses that could induce er-
rors in the latency analysis.
3.1 Raw ISI survey data
ISI has conducted Internet wide surveys [7] since 2006.
Precise details can be found in Heidemann et al. [7], and
technical details of the data format online [9], but we present
a brief overview here.
304requests because they arrived within the timeout. We call
these responses survey-detected responses.
We aggregate round trip time measurements in terms of
the distribution of latency values per IP address, focusing
on characteristic values on the median, 80th, 90th, 95th,
98th and 99th percentile latencies. That is, we attempt to
treat each IP address equally, rather than treat each ping
measurement equally. This aggregation ensures that well-
connected hosts that reply reliably are not over-represented
relative to hosts that reply infrequently.
Taking ISI survey datasets from 2011–2013 together, we
show a CDF of these percentile values considering only survey-
detected responses in Figure 1. Taken literally, 95% of echo
replies from 95% of addresses will arrive in less than 2.85
seconds. However, it is apparent that the distribution is
clipped at the 3 second mark, although a few responses were
matched even after 7 seconds.
We observe three broad phases in this graph: (1) the lower
40% of addresses show a reasonably tight distribution in
which the 99th percentile stays close to the 98th; (2) the
next 50% in which the median remains low but the higher
percentiles increase; and (3) the top 10% where the median
rises above 0.5 seconds.
3.3 Unmatched responses
If a probe takes more than three seconds to solicit a re-
sponse, it appears as if the probe timed-out and the response
was unsolicited or unmatched. Since it appears from Figure 1
that three seconds is short enough that it is altering the dis-
tribution of round trip times, we are interested in matching
these echo responses to construct the complete distribution
of round trip times.
Matching these responses to ﬁnd delayed responses is not a
simple matter, however. In particular, we ﬁnd two causes of
unexpected responses that should not yield samples of round
trip times: unmatched responses solicited by echo requests
sent to broadcast addresses and apparent denial of service
responses.
We match a delayed response with its corresponding re-
quest as follows: Given an unmatched response having a
source IP address, we look for the last request sent to that
IP address. If the last request timed out and has not been
matched, the latency is then the diﬀerence between the times-
tamp of the response and the timestamp of the request.
ISI recorded the timestamp of unmatched responses to a
1 second precision, thus the latencies of inferred delayed re-
sponses are precise only to a second.
The presence of unexpected responses can lead to the in-
ference of incorrect latencies for delayed responses using this
technique: not all unexpected responses should be matched
by source address. We thus develop ﬁlters to remove unex-
pected responses from the set of unmatched responses.
We note that it is possible to match responses to requests
explicitly using the id and sequence numbers associated with
ICMP echo requests, and even perhaps using the payload.
These attributes were not recorded in the ISI dataset, which
motivates us to develop the source address based scheme.
We use these ﬁelds when running Zmap or other tools to
conﬁrm high latencies in Section 5 below.
3.3.1 Broadcast responses
The dataset contains several instances where a ping to
a destination times out, but is closely followed by an un-
Figure 1: CDF of percentile latency of survey-detected re-
sponses per IP address: Each point represents an IP ad-
dress and each curve represents the percentile from that IP
address’s response latencies. The slope of the latency per-
centiles increases around the 3 second mark, suggesting that
ISI’s prober timed out responses that arrived after 3 seconds.
Each survey includes pings sent to approximately 24,000
/24 address blocks, meant to represent 1% of all allocated
IPv4 address space. Once an address block is included,
ICMP echo request probes are sent to all 256 addresses in the
selected /24 address blocks once every 11 minutes, typically
for two weeks. The blocks included in each survey consist of
four classes, including blocks that were chosen in 2006 and
probed ever since, as well as samples of blocks that were re-
sponsive in the last census—another ISI project that probes
the entire address space, but less frequently. However, we
treat the union of these classes together.
We use data from 103 surveys taken between April 2006
and February 2015, and performed initial studies based on
2011–2013 data, but focus on the most recent of them, in
January and February of 2015 for data quality and time-
liness. The dataset consists of all echo requests that were
sent as part of the surveys in this period, as well as all echo
responses that were received. Of particular importance is
that echo responses received within, typically, three seconds