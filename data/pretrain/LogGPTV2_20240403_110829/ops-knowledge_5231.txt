User: Is there any OOTB way to get a post build step to push the results of a Jenkins build back to a (Subversion) repository?  We use one repository for sources and another to record the binaries for every commit to trunk (very useful for debugging).  The Jenkins pull on the source SVN repository change works perfectly, the build step is fine, but now we need the 'what next' step.
A Python script to handle the push back to SVN is easy enough to write providing it can find the build result details but how best to integrate this with Jenkins?  I see some posts/plugins about GIT, but not so much about SVN.  Failing a plugin for the job I'll hook in a post-build script using the postbuild-task plugin.
Assistant: I'd not do this.  There isn't an OOTB solution as this would generally be seen as a terrible idea - committing on at least two levels:
1. committing derived artifacts is sub-optimal
2. committing binaries is sub-optimal
However if I absolutely had too I'd setup a job that did the binary commit that shared the same workspace as the compile job. I'd' have the commit job triggered on success of the compile - this job could run your script (python, or a simple bash build step that invokes svn cli.  Be sure to set the compile job to block when downstream job is building, you wouldn't want the binaries changing during the commit.