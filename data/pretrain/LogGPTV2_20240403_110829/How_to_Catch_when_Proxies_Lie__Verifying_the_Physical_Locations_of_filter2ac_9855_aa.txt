title:How to Catch when Proxies Lie: Verifying the Physical Locations of
Network Proxies with Active Geolocation
author:Zachary Weinberg and
Shinyoung Cho and
Nicolas Christin and
Vyas Sekar and
Phillipa Gill
How to Catch when Proxies Lie
Verifying the Physical Locations of Network Proxies with Active Geolocation
Zachary Weinberg
Carnegie Mellon University
PI:EMAIL
Shinyoung Cho
Stony Brook University
PI:EMAIL
Nicolas Christin
Carnegie Mellon University
PI:EMAIL
Vyas Sekar
Carnegie Mellon University
PI:EMAIL
Phillipa Gill
University of Massachusetts
PI:EMAIL
ABSTRACT
Internet users worldwide rely on commercial network proxies both
to conceal their true location and identity, and to control their appar-
ent location. Their reasons range from mundane to security-critical.
Proxy operators offer no proof that their advertised server loca-
tions are accurate. IP-to-location databases tend to agree with the
advertised locations, but there have been many reports of serious
errors in such databases.
In this study we estimate the locations of 2269 proxy servers from
ping-time measurements to hosts in known locations, combined
with AS and network information. These servers are operated by
seven proxy services, and, according to the operators, spread over
222 countries and territories. Our measurements show that one-
third of them are definitely not located in the advertised countries,
and another third might not be. Instead, they are concentrated in
countries where server hosting is cheap and reliable (e.g. Czech
Republic, Germany, Netherlands, UK, USA).
In the process, we address a number of technical challenges with
applying active geolocation to proxy servers, which may not be
directly pingable, and may restrict the types of packets that can be
sent through them, e.g. forbidding traceroute. We also test three
geolocation algorithms from previous literature, plus two variations
of our own design, at the scale of the whole world.
CCS CONCEPTS
• Networks → Network measurement; Network structure;
KEYWORDS
active geolocation, virtual private networks, network proxies
ACM Reference Format:
Zachary Weinberg, Shinyoung Cho, Nicolas Christin, Vyas Sekar, and Phill-
ipa Gill. 2018. How to Catch when Proxies Lie: Verifying the Physical Loca-
tions of Network Proxies with Active Geolocation. In 2018 Internet Measure-
ment Conference (IMC ’18), October 31–November 2, 2018, Boston, MA, USA.
ACM, New York, NY, USA, 15 pages. https://doi.org/10.1145/3278532.3278551
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
© 2018 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-5619-0/18/10...$15.00
https://doi.org/10.1145/3278532.3278551
203
1 INTRODUCTION
Commercial VPN services compete to offer the highest speed, the
strongest privacy assurances, and the broadest possible set of server
locations. One of the services in this study advertises servers in
all but seven of the world’s sovereign states, including implausible
locations such as North Korea, Vatican City, and Pitcairn Island.
They offer no proof of their claims. IP-to-location databases often
agree with their claims, but these databases have been shown to
be full of errors [18, 38, 42]. Worse, they rely on information that
VPN providers may be able to manipulate, such as location codes
in the names of routers [7].
VPN services that consolidate their servers in a smaller number
of locations than they advertise can choose those locations for
better performance, reliability, and reduced operational expenses.
This gives them a competitive advantage over services that strive
for true location diversity. If they can manipulate IP-to-location
databases, they can still provide the appearance of location diversity.
Many of a VPN service’s customers may well be satisfied with
appearances. For instance, the IP-to-location database entry is more
important than the physical location for customers using VPNs
to defeat geographic restrictions on online media streaming [2].
However, for others the physical location can be essential. We
started the investigation leading to this paper when we attempted
to use commercial VPN services for censorship monitoring, but
could not reproduce the observations reported by volunteers within
a country known for censoring the Internet.
In this paper, we apply active geolocation to check the advertised
locations of VPN servers. Active geolocation estimates the location
of an Internet host by measuring packet round-trip times between
it and other hosts in known locations. It has been demonstrated to
work at the scale of a large country or small continent (e.g. China,
Europe, and the USA), with varying levels of accuracy, depending
on how efficient the regional network is [8, 11, 16, 32]. However,
it has not been thoroughly tested at the scale of the entire world,
and, to our knowledge, it has only once before been applied to
commercial proxy servers [39].
Using active geolocation, we can usually locate a VPN server
to within 1000 km2, anywhere in the world. Our results are more
precise in more densely connected regions and/or when landmarks
are nearby, but even when we are uncertain about where a server
actually is, we can still disprove blatant inaccuracies in marketing
claims. For instance, if we know that a server is in Belgium, Nether-
lands, or Germany, but not which, that still proves it is not in North
Korea. We tested 2269 servers operated by seven VPN services,
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
Zachary Weinberg et al.
hand, for China, several papers report that simple models are more
accurate [8, 11, 32]. They propose that simple models are more
robust in the face of severe congestion. Li et al. [32] specifically
points out that a minimum travel distance assumption is invalid in
the face of large queueing delays at intermediate routers. A second
possibility is that sophisticated models are more reliable when there
are more possible paths between landmarks and targets, as is the
case in Europe and North America, but not China [16]. A third is that
models tested on PlanetLab nodes [37] gain an unfair advantage due
to the generally better connectivity enjoyed by academic networks.
In Section 5, we test four algorithms, covering a range of model
complexity, on hosts crowdsourced from all over the world. We also
find that simple models are more effective, overall, and our data is
more consistent with the congestion explanation.
Increasing the number of landmarks improves accuracy but also
slows down the measurement process, since all of the landmarks
must send packets to the target and wait for replies (or vice versa).
If they all do this simultaneously, they may create enough extra
network congestion to invalidate the measurement [22]. Several
researchers have observed that landmarks far away from the tar-
get are less useful, and proposed a two-stage process, in which a
small number of widely dispersed landmarks identify the subcon-
tinental region where the target lies, and then a larger group of
landmarks within that region pin down the target’s position more
accurately [11, 23, 26, 46].
Challenges of geolocating proxies. Less than ten percent of
the proxies we are interested in testing will respond to pings, and
we do not have the ability to run measurement programs on the
proxies themselves. We can only send packets through the proxies,
which means the apparent round-trip time to each landmark is
the sum of the round-trip time from the proxy to the landmark,
and the round-trip time from our measurement client to the proxy.
This is similar to the problem faced by Castelluccia et al. [5] when
attempting to geolocate botnet command-and-control servers, and
we adopt the same solution, as discussed further in Section 5.3.
3 ALGORITHM SELECTION
Since the proxies we are investigating could be spread all over the
world, we must find an active geolocation algorithm that will work
at the scale of the whole world. We reimplemented four active
geolocation algorithms from earlier papers: CBG [20], Octant [45],
Spotter [30], and an Octant/Spotter hybrid of our own invention.
We did not have access to the original implementations, and we had
to fill in gaps in all their published descriptions. All the software
we developed for this project is open-source and available online.1
Eriksson et al. [15] recommend considering external facts about
where a server could plausibly be, such as “on land, and not in
Antarctica.” We take this advice and exclude all terrain north of
85° N and south of 60° S from the final prediction region for each
target and algorithm. Using the 2012 Natural Earth [36] map of
the world, we also exclude oceans and lakes. We do not, however,
exclude any islands, no matter how small or remote, because some
of the proxy providers do claim to have servers on remote islands
(e.g. Pitcairn).
1https://github.com/zackw/active-geolocator
Figure 1: The principle of multilateration. If something is
within 500 km of Bourges, 500 km of Cromer, and 800 km of
Randers, then it is in Belgium (roughly).
including five of the top 20 by number of claimed countries. At least
a third of all the servers we tested are not in their advertised country.
2 BACKGROUND
Existing methods for finding the physical location Internet hosts
can be divided into two general classes. Passive methods collect
location information from regional Internet registries, location in-
formation encoded in router hostnames, and private consultation
with individual ISPs [7], and produce a database mapping IP ad-
dresses to locations. These databases are widely used, but notorious
for their errors [18, 38, 42], some of which are significant enough
that they make the news [21].
Active methods, on the other hand, rely on measurements of
packet round-trip time between a target host, which is to be located,
and a number of landmark hosts, which are in known locations.
The simplest active method is to guess that the target is in the
same place as the landmark with the shortest round-trip time [8,
35, 46]. This breaks down when the target is not near any of the
landmarks. The next step up in complexity is to estimate, for each
landmark, the maximum distance that a packet could have traveled
in the time measured, and draw disks on a map, bounded by these
distances. The target must be in the region where the disks all
intersect. This process is called multilateration. Figure 1 shows an
example: measurements taken from Bourges in France, Cromer in
the UK, and Randers in Denmark produce an intersection region
roughly covering Belgium.
The central problem for network multilateration is that network
packets do not travel in straight lines. Cables are laid on practical
paths, not great circles. Network routes are optimized for bandwidth
rather than latency, leading to “circuitous” detours that can add
thousands of kilometers to the distance traveled [29, 31, 34]. Inter-
mediate routers can add unbounded delays [32]. Distance and delay
do still correlate, but not in a straightforward way. Much research
on active methods focuses on increasingly sophisticated models of
the delay-distance relationship [4, 12, 14, 20, 30, 31, 34, 35, 45]. One
common refinement is to assume a minimum travel distance for
any given delay, as well as a maximum.
Challenges of global geolocation. When both landmarks and
targets are in the same subcontinental region, sophisticated models
improve accuracy—if that region is Europe or the USA. On the other
204
How to Catch when Proxies Lie
IMC ’18, October 31–November 2, 2018, Boston, MA, USA
Figure 2: Example calibration scatterplots for CBG, (Quasi-)Octant, and Spotter.
3.1 Constraint-Based Geolocation
Constraint-Based Geolocation (CBG) is one of the oldest and sim-
plest multilateration algorithms. It uses a linear model for the delay-
distance relationship, limited by a “baseline” speed of 200 km/ms,
or 2
3c, which is approximately how fast signals propagate in fiber-
optic cable. For each landmark, CBG computes a “bestline” from
the calibration data, which is as close as possible to all of the data
points on a scatterplot of delay as a function of distance, while
remaining below all of them, and above the baseline. This will be
a speed slower than 200 km/ms, and will therefore give a smaller
estimate of how far a packet could have gone in a given time. Each
landmark’s bestline gives the maximum distance for a round-trip
measurement to that landmark.
The left panel of Figure 2 shows an example calibration for CBG.
The blue dots are round-trip time measurements taken by one
RIPE anchor. The bestline (solid) is above the baseline (dotted); it
passes through exactly two data points, with all the others above. It
corresponds to a speed of 93.5 km/ms—less than half the theoretical
maximum. The “slowline” will be explained in Section 5.1.
3.2 Quasi-Octant
Octant elaborates on CBG in two ways. First, it estimates both
the maximum and the minimum distance to each landmark, and
draws rings on the map, not disks. Second, Octant uses piecewise-