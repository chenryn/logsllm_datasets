I have a function that takes a complicated options object as its only
argument.  
Also, I am using object destructuring with default values to set default
values, which are actually callbacks with similar signatures.
The parameters of the callbacks should be independent of each other. However,
babel 6.26.0 is still giving a "Duplicate declaration" error.
### Input Code
    export function createConnectionType({
      resolveTotalCount = ({ first, ...searchContext }) => {},
      resolveEdges = ({ first, ...searchContext }) => {},
    }) {}
REPL: http://bit.ly/2CVCWuB
### Babel/Babylon Configuration (.babelrc, package.json, cli command)
    # .babelrc
    {
      "presets": [
        ["env", {
          "targets": {
            "node": "current"
          }
        }],
        "stage-3"
      ]
    }
    # Versions
    $ node_modules/.bin/babel --version
    6.26.0 (babel-core 6.26.0)
### Expected Behavior
It should compile to something like:
    export function createConnectionType({
      resolveTotalCount,
      resolveEdges,
    }) {
      if(!resolveTotalCount) resolveTotalCount = (_ref) => {const {first} = _ref; const searchContext = _objectWithoutProperties(_ref)};
      if(!resolveEdges) resolveEdges = (_ref) => {const {first} = _ref; const searchContext = _objectWithoutProperties(_ref)};
    }
### Current Behavior
When babel-preset-env is enabled, it gives compile error
    repl: Duplicate declaration "searchContext"
      1 | export function createConnectionType({
      2 |   resolveTotalCount = ({ first, ...searchContext }) => {},
    > 3 |   resolveEdges = ({ first, ...searchContext }) => {},
        |                               ^
      4 | }) {}
When babel-preset-env is disabled, it gives:
    /* (_objectWithoutProperties omitted) */
    export function createConnectionType(_ref) {
      let {
        resolveTotalCount = ({ first }) => {},
        resolveEdges = ({ first }) => {}
      } = _ref,
          searchContext = _objectWithoutProperties(_ref.resolveTotalCount, ["first"]),
          searchContext = _objectWithoutProperties(_ref.resolveEdges, ["first"]);
    }
Note that searchContext in the two default values are totally messed up.
Seems that there are something wrong with object rest destructuring on
function arguments.
### Context
This is the full code:  
https://github.com/cofacts/rumors-
api/tree/914b16ea0bc9274f7b16c6a09669f3a2627fe030/src/graphql/util.js#L146-L181
The repository was using Babel-core 6.18 and it successfully compiles.
### Your Environment
software | version(s)  
---|---  
Babel | 6.26.0  
node | 8.9.1  
npm | 5.5.1  
Operating System | Mac OSX 10.11