事实上，TAG是一个描述芯片、集成电路或微处理器中某个特性的通用词汇。对固件和软
件调试来说，它更像是汽车的变速器。抽象地说，变速器在汽车中改变齿轮的运转。然面，不同
的汽车制造商生产的变速器在结构上都有所不同，因此维修、拆解和诊断也变得错综复杂。
---
## Page 351
13.1设备的硬件接口
335
作为标准，JTAG优先对这些底层特性和功能进行规范化，但并没有专门说明软件调试协议
的数据应该是怎样的。从软件的角度来看，许多JTAG片内调试器（On-ChipDebugger，OCD）
在实现上趋于雷同，并提供相同的最小功能集。绝大部分JTAG实现都提供了这些核心功能：单
步、断点、重启、监视点、寄存器查看和边界扫描等。此外，这些设备上的大部分JTAG引脚标
签使用相同的标记和缩写。因此从功能的角度来看，也很容易导致对TAG的误解。
JTAG标准定义了5个用于通信的标准引脚，在PCB板丝印层上以及芯片（或设备）的规格
书中也许会看到它们：
口TDO：测试数据输出
TDI：测试数据输人
口TMS：测试模式选择
TCK：测试时钟
 TRST：测试重置
图13-6展示了在不同设备上使用的多种标准JTAG接头。
14针接头
20针接头
Vsup
GND
Vtref
20
V
nTRST
 GND
TRST-
GND
TDI 
GND
TDI =
GND
TMS
GND
TMS
GND
TCK
GND
TCK
GND
TD0
-SRST
RTCK
 GND
Vtref
1
GND
TD0
 GND
nSRST-
GND
DGBRQ-
GND
DGBACK-
610
GND
图13-6JTAG接头图例
引脚名基本上说明了它们的用途。搞软件的人可能马上会认为TAG作为标准不仅定义了引
脚，还定义了引脚之间的通信；但事实并非如此。在软件和固件调试方面，JTAG标准仅仅定义
了2个引脚用于数据传输：
TDO：测试数据输出
口TDI：测试数据输人
接下来，该标准定义了在这些引脚之上传输的一些命令及其格式，用于实现更多的JTAG功
能，但是并没要求传输这些数据应该用什么类型的串行协议。JTAG还指明了与JTAG总线相连
的设备不同的运行模式：
13
---
## Page 352
336
第13章硬件层的攻击
口BYPASS模式：简单地将来自TDI的数据传递给TDO
口EXTEST（外部测试）模式：从TDI接收指令，读取外部引脚状态信息，传递给TDO
口INTEST（内部测试）模式：读取内部状态信息，传递给TDO：还可以做“其他”用户自
定义的内部事务
对于所有基于JTAG数据引脚的软件或固件，其调试通信都基于厂商对INTEST模式JTAG
通信的定制实现。事实上，这也是软件调试者以及逆向工程师和漏洞研究人员最关心的部分。
这些在芯片与调试器之间传输的软件或固件调试信息都是上面所讲的定制实现，与JTAG规范
本身无关。
另一个对JTAG的常见误解，是认为它直接与某一个处理器相连，或者认为它专门用于调试
单一的目标。事实上，JTAG本身产生于一种叫作边界扫描的技术。这种技术将PCB板上的多块
芯片串接到一起进行底层诊断，比如检查引脚状态（前面提到的EXTEST模式），测量电量，甚
至分析逻辑。因此，JTAG在本质上意味着将多块芯片连接起来。图13-7说明了多块芯片如何被
连接起来形成一条JTAG总线。
TMS
TCK
TMS
TMS
TMS
TCK
设备！
TCK
设备2
TCK
TDI
设备3
KLL
TDO
TDI
TDO
TDI
TDO
图13-7申接形成一条JTAG总线
同样地，TAG规范设置了一个主设备和多个从设备，因此它支持将多个处理器不以特定先
后顺序地用菊花链串起来。主设备通常是调试器硬件（比如PC和JTAG调试器适配器）或者诊
断硬件，PCB板上所有的芯片则通常是从设备。对于逆向工程师来说，了解这个菊花链连接很重
要，因为商业产品中的JTAG接口往往既与核心处理器相连，也和外设控制器（比如蓝牙、以太
网和其他申行设备）相连。知道了这个情况，在后面配置调试器工具和阅读调试器文档时可以避
免不少挫折。
此外，JTAG规范并不指明设备之间的具体顺序，从设备也绝不会自已引导一个通信会话，
理解这一点有助于使用和检查TAG设备。比如，可以确定手中的调试器是链上唯一的主设备。
图13-8展示了连接上一个主设备后整个通信链路的状态。
---
## Page 353
13.1设备的硬件接口
337
共有AG
接口防标
JCK
TRST
图13-8JTAG菊花链
现在可以意识到，JTAG主要用于电子工程意义上的调试，而软件开发者、逆向工程师和漏
洞研究者主要关心的还是如何在设备上调试软件或固件。在这个方面，JTAG规范只是宽松地定
义了引脚及其标签，其中的数据通过申行协议进行传输。
JTAG规范并未要求使用哪种申行协议，也没有定义所传输数据的编码格式。但是各种各样
的处理器中都实现了JTAG，这是怎么做到的呢？关键在于各有各的具体实现，这也是开发者社
区的主要误解所在。
在JTAG中，固件和软件调试可以使用不同的数据格式，甚至使用不同的连线方式。比如德
州仪器公司的MSP430系列微处理器，其JTAG实现使用的就是一个名为Spy-Bi-Wire的串行通
信协议。传统的JTAG实现需要使用4或5根线，面这个协议只使用2根。如果一个设备使用了
MSP430，即便其PCB板上有一个接口被标记为JTAG或者有JTAG引脚标签，JTAG连接的串行
引脚也会使用Spy-Bi-Wire。因此，硬件调试器要将数据传递给软件调试器，先要理解这些引脚
配置及其串行协议（见图13-9）。
V
/AL/ON
R1
0.1μ
MSP430Fxx
DOTDI
NOCTARGE
EST
TCK
TESTSBWTOK
V/AO
图13-9Spy-Bi-Wire的接线方式
---
## Page 354
338第13章硬件层的攻击
图13-9中，左边是一个传统的14针JTAG接口，但是它只有2根线通过Spy-Bi-Wire与右边
的MSP430处理器相连（分别是RST/NMI/SBWTDIO和TEST/SBWTCK）。除了物理连线方式的
差异，采用的电线线路协议（也就是INTEST用户定义节中通过TDO和TDI引脚的调试数据流）
有时候也不同。因此，与被调试对象进行交互的调试软件也有所不同。这就导致不同的设备有不
同的定制调试线缆、调试硬件和调试软件。
不要被上面的内容吓到，我们只是想解释一些背景情况，以防读者误以为JTAG是一个高度
标准化的通用调试银弹，从面在实际操作时失望。了解JTAG的这些情况后，接下来看看需要哪
些工具及其原因。
2. JTAG 巴别鱼
幸运的是，有儿家公司意识到，面对各种各样的IAG实现，人们会需要巴别鱼。Segger、
Lauterbach和IAR等厂商生产了基于PC的软件和灵活的硬件设备，用于完成这些神奇的翻译工
作。因此，使用其中一台设备就可以与各类JTAG硬件打交道。
·JTAG运配器
这种通用的JTAG调试器与那些通用的电视遥控器非常像。生产这些调试器的厂商会公布其
长期支持的设备列表，其中包含JTAG调试器可以识别并支持的成千上万种集成电路和微处理器
的序列号。和电视遥控器类似，特性越多、可编程性越强、支持设备数量越多，调试器的价格就
越高。在下订单购买一款JTAG调试器之前，很重要的一点是要确定它支持你想调试的设备
图13-10所示的SeggerJ-Link也许是最流行的JTAG调试器，也是最适合绝大部分读者的一
款。它相对来说比较便宜，但是支持的设备数量繁多，因此成为开发者们的最爱。J-Link有不同
的型号，主要是特性上有所不同，但是核心的通用调试功能是一样的。
图13-10Seggcr 公司的 J-Link 调试器
①Babel fish.《银河系漫游指南》中提到的一种通用翻译器。—译者注
---
## Page 355
13.1设备的硬件接口
339
通过USB接口将J-Link盒子与计算机相连，然后通过排线或者自制跳线将其与要调试芯片
相连（13.1.4节会进一步介绍），就可以开始调试了。接下来，Segger 的较件会与J-Link 设备互
动，使用它控制目标设备。J-Link软件甚至可以充当GDB服务端的角色，以便于使用熟悉的GDB
终端来调试芯片。图13-11演示了将GDB附着到SeggerJ-Link调试服务端上的情形
SIGGER 3-Uink GDI Server V458a
G hs 127.001
Kirk [amecisd
CJAG 
PFx 7agoad ndD
AJ
[us eds]
ad3
"263
add
-x000）