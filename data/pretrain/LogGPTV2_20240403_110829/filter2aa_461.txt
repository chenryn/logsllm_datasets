# 快手应用安全演进之路

## 讲师介绍
- **姓名**：廖新喜
- **教育背景**：大连理工大学毕业
- **现任职位**：快手Web安全负责人
- **工作经历**：
  - **2011-2014**：绿盟科技极光扫描器开发，担任安全开发工程师。
  - **2014-2019**：专注于Web漏洞挖掘，尤其擅长Java反序列化漏洞。在此期间，他向RedHat、Apache、Amazon、Weblogic和阿里提交了超过10份RCE级别的漏洞报告，并在各大国内安全峰会上发表演讲。因其卓越贡献，被誉为国内Weblogic漏洞挖掘及反序列化漏洞挖掘领域的领军人物。
  - **2019至今**：作为快手的Web安全负责人，致力于构建和完善企业级的安全防护体系。由其主导的《Java代码安全漏洞治理》项目荣获公司研发线质效提升奖。

## 目录
1. 作坊阶段
2. 自动化阶段
3. BP（Business Process）阶段

### 一、作坊阶段 (2019年及以前)
#### 应用安全现状
- 缺乏编码规范与知识积累
- 端口管理缺失
- 没有明确的安全评估标准或指标

#### 关键改进措施
- 建立了初步的安全度量体系，包括SRC众测平台、按期修复率等关键性能指标
- 引入自检机制以提高内部发现并解决潜在威胁的能力
- 针对高危漏洞实施专项监控

### 二、自动化阶段 (2020年)
#### 主要挑战
- 漏洞难以得到有效控制
- 内部系统缺乏有效权限管理
- 第三方库存在安全隐患
- 修复流程缺乏标准化指导

#### 解决方案
- 构建静态代码分析工具，特别是针对核心业务中的Java后端进行深入检查
- 推动实施更严格的身份验证策略
- 下线存在风险的技术组件如Fastjson
- 开发专门用于管理外部依赖库的新系统
- 提供SDK形式的安全支持服务

### 三、BP阶段 (2021年)
#### 面临问题
- 业务快速增长导致新的安全需求不断涌现
- 发现漏洞的时间点滞后增加了处理成本
- 新兴类型的安全威胁日益复杂难解

#### 应对策略
- 完善SDL（Security Development Lifecycle）框架下的BP架构设计
- 形成从白盒测试到灰盒测试再到黑盒测试的多层次防御体系
- 设定具体目标，例如将最终漏出比例控制在5%以下，并逐年减少漏出数量
- 引入IAST技术作为加强应用程序安全性的重要手段之一

通过上述各阶段的努力，快手逐步建立起了一套全面且高效的应用安全管理体系。