    ```
3.  运行 playbook：
    ::: itemizedlist
    -   以 `root`{.literal} 用户身份连接到受管主机，输入：
        ``` literallayout
        # ansible-playbook -u root ~/add-static-routes.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/add-static-routes.yml
        ```
        `--ask-become-pass`{.literal} 选项确定
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，请以当前登录到控制节点的用户 `ansible-playbook`{.literal}
    连接到受管主机。
:::
::: itemizedlist
**验证步骤**
-   显示路由表：
    ``` literallayout
    # ip -4 route
    default via 198.51.100.254 dev enp7s0 proto static metric 100
    192.0.2.0/24 via 198.51.100.1 dev enp7s0 proto static metric 100
    203.0.113.0/24 via 198.51.100.2 dev enp7s0 proto static metric 100
    ...
    ```
:::
::: itemizedlist
**其它资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    file
-   `ansible-playbook(1)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#creating-static-routes-configuration-files-in-key-value-format-when-using-the-legacy-network-scripts_configuring-static-routes}使用旧的网络脚本以键-值格式创建静态路由配置文件 {.title}
:::
这个步骤描述了，在使用旧的网络脚本而不是 NetworkManager 时，如何手动为
`192.0.2.0/24`{.literal} 网络的 IPv4
路由创建路由配置文件。在这个示例中，IP 地址为 `198.51.100.1`{.literal}
的对应网关可以通过 `enp1s0`{.literal} 接口访问。
此流程中的示例使用 key-value-format 中的配置条目。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
旧的网络脚本只支持静态 IPv4 路由的键值格式。对于 IPv6 路由，使用
`ip`{.literal}-command-format。[在使用旧的网络脚本时，请参阅在
ip-command-format
中创建静态路由配置文件](#configuring-static-routes_configuring-and-managing-networking.html#creating-static-routes-configuration-files-in-ip-command-format-when-using-the-legacy-network-scripts_configuring-static-routes "在使用旧的网络脚本时，使用 ip-command-format 创建静态路由配置文件"){.link}。
:::
::: itemizedlist
**先决条件**
-   静态路由的网关必须在接口上直接访问。
-   未安装 `NetworkManager`{.literal} 软件包，或者
    `NetworkManager`{.literal} 服务被禁用。
-   已安装 `network-scripts`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  将静态 IPv4 路由添加到
    `/etc/sysconfig/network-scripts/route-enp0s1`{.literal} 文件：
    ``` literallayout
    ADDRESS0=192.0.2.0
    NETMASK0=255.255.255.0
    GATEWAY0=198.51.100.1
    ```
    ::: itemizedlist
    -   `ADDRESS0`{.literal} 变量定义第一个路由条目的网络。
    -   `NETMASK0`{.literal} 变量定义第一个路由条目的子网掩码。
    -   `GATEWAY0`{.literal} 变量定义了到远程网络或主机的网关 IP
        地址，用于第一个路由条目。
        如果您添加多个静态路由，请增加变量名称的数量。请注意，每个路由的变量都必须按顺序编号。例如，`ADDRESS0`{.literal}、`ADDRESS1`{.literal}、`ADDRESS3`{.literal}
        等。
    :::
2.  重启网络：
    ``` literallayout
    # systemctl restart network
    ```
:::
::: itemizedlist
**其它资源**
-   有关配置旧的网络脚本的详情，请参考
    `/usr/share/doc/network-scripts/sysconfig.txt`{.literal} 文件。
:::
:::
::: section
::: titlepage
# []{#configuring-static-routes_configuring-and-managing-networking.html#creating-static-routes-configuration-files-in-ip-command-format-when-using-the-legacy-network-scripts_configuring-static-routes}在使用旧的网络脚本时，使用 ip-command-format 创建静态路由配置文件 {.title}
:::
此流程描述了如何使用旧网络脚本为以下静态路由手动创建路由配置文件：
::: itemizedlist
-   到 `192.0.2.0/24`{.literal} 网络的 IPv4 路由。IP 地址为
    `198.51.100.1`{.literal} 的对应网关可以通过 `enp1s0`{.literal}
    接口访问。
-   到 `2001:db8:1::/64`{.literal} 网络的 IPv6 路由。IP 地址为
    `2001:db8:2::1`{.literal} 的对应网关可以通过 `enp1s0`{.literal}
    接口访问。
:::
此流程中的示例使用 `ip`{.literal}-command-format 中的配置条目。
::: itemizedlist
**先决条件**
-   静态路由的网关必须在接口上直接访问。
-   未安装 `NetworkManager`{.literal} 软件包，或者
    `NetworkManager`{.literal} 服务被禁用。
-   已安装 `network-scripts`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  将静态 IPv4 路由添加到
    `/etc/sysconfig/network-scripts/route-enp0s1`{.literal} 文件：
    ``` literallayout
    192.0.2.0/24 via 198.51.100.1 dev enp0s1
    ```
2.  将静态 IPv6 路由添加到
    `/etc/sysconfig/network-scripts/route6-enp0s1`{.literal} 文件：
    ``` literallayout
    2001:db8:1::/64 via 2001:db8:2::1 dev enp0s1
    ```
3.  重启网络：
    ``` literallayout
    # systemctl restart network
    ```
:::
::: itemizedlist
**其它资源**
-   有关配置旧的网络脚本的详情，请参考
    `/usr/share/doc/network-scripts/sysconfig.txt`{.literal} 文件。
:::
:::
:::
[]{#configuring-policy-based-routing-to-define-alternative-routes_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-policy-based-routing-to-define-alternative-routes_configuring-and-managing-networking.html#configuring-policy-based-routing-to-define-alternative-routes_configuring-and-managing-networking}第 22 章 配置基于策略的路由以定义其他路由 {.title}
:::
默认情况下，RHEL
中的内核决定使用路由表根据目标地址转发网络数据包。基于策略的路由允许您配置复杂的路由场景。例如，您可以根据各种条件来路由数据包，如源地址、数据包元数据或协议。
本节论述了如何使用 NetworkManager 配置基于策略的路由。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在使用 NetworkManager 的系统中，只有 `nmcli`{.literal}
工具支持设置路由规则，并将路由分配到特定表。
:::
::: section
::: titlepage
# []{#configuring-policy-based-routing-to-define-alternative-routes_configuring-and-managing-networking.html#routing-traffic-from-a-specific-subnet-to-a-different-default-gateway-using-networkmanager_configuring-policy-based-routing-to-define-alternative-routes}使用 NetworkManager 将特定子网的流量路由到不同的默认网关 {.title}
:::
本节论述了如何将 RHEL 配置为默认路由将所有流量路由到互联网供应商 A
的路由器。使用基于策略的路由，RHEL
会将从内部工作站子网接收的流量路由到供应商 B。
该流程假设以下网络拓扑：
[![policy based
routing](images/policy-based-routing.png)]{.inlinemediaobject}
::: itemizedlist
**先决条件**
-   系统使用 `NetworkManager`{.literal} 配置网络，这是默认设置。
-   要在流程中设置的 RHEL 路由器有四个网络接口：
    ::: itemizedlist
    -   `enp7s0`{.literal} 接口连接到供应商 A 的网络。提供商网络中的网关
        IP 是 `198.51.100.2`{.literal}，网络使用了 `/30`{.literal}
        网络掩码。
    -   `enp1s0`{.literal} 接口连接到供应商 B 的网络。提供商网络中的网关
        IP 是 `192.0.2.2`{.literal}，网络使用了 `/30`{.literal}
        网络掩码。
    -   `enp8s0`{.literal} 接口使用内部工作站连接到
        `10.0.0.0/24`{.literal} 子网。
    -   `enp9s0`{.literal} 界面连接到有公司服务器的
        `203.0.113.0/24`{.literal} 子网。
    :::
-   内部工作站子网中的主机使用 `10.0.0.1`{.literal}
    作为默认网关。在此过程中，您可以将此 IP 地址分配给路由器的
    `enp8s0`{.literal} 网络接口。
-   服务器子网中的主机使用 `203.0.113.1`{.literal}
    作为默认网关。在此过程中，您可以将此 IP 地址分配给路由器的
    `enp9s0`{.literal} 网络接口。
-   `firewalld`{.literal} 服务已启用并激活。
:::
::: orderedlist
**流程**
1.  将网络接口配置为供应商 A:
    ``` literallayout
    # nmcli connection add type ethernet con-name Provider-A ifname enp7s0 ipv4.method manual ipv4.addresses 198.51.100.1/30 ipv4.gateway 198.51.100.2 ipv4.dns 198.51.100.200 connection.zone external
    ```
    `nmcli connection add`{.literal}
    命令创建网络管理器连接配置集。以下列表描述了该命令的选项：
    ::: itemizedlist
    -   `type`{.literal} `ethernet`{.literal}：定义连接类型是以太网。
    -   `con-name`{.literal}
        `connection_name`{.literal}：设置配置集的名称。使用有意义的名称以避免混淆。
    -   `ifname`{.literal} `network_device`{.literal}：设置网络接口。
    -   `ipv4.method`{.literal} `manual`{.literal}：允许配置静态 IP
        地址。
    -   `ipv4.addresses`{.literal}
        `IP_address/subnet_mask`{.literal}：设置 IPv4 地址和子网掩码。
    -   `ipv4.gateway`{.literal}
        `IP_address`{.literal}：设置默认网关地址。
    -   `ipv4.dns`{.literal} `IP_of_DNS_server`{.literal}：设置 DNS
        服务器的 IPv4 地址。
    -   `connection.zone`{.literal}
        `firewalld_zone`{.literal}：将网络接口分配给定义的
        `firewalld`{.literal} 区。请注意，`firewalld`{.literal}
        会自动启用分配给 `external`{.literal} 区的接口的伪装。
    :::
2.  将网络接口配置为供应商 B:
    ``` literallayout
    # nmcli connection add type ethernet con-name Provider-B ifname enp1s0 ipv4.method manual ipv4.addresses 192.0.2.1/30 ipv4.routes "0.0.0.0/0 192.0.2.2 table=5000" connection.zone external
    ```
    这个命令使用 `ipv4.routes`{.literal} 参数而不是
    `ipv4.gateway`{.literal}
    设置默认网关。这需要为这个连接分配默认网关到不同的路由表（`5000`{.literal}）而不是默认路由表。当连接被激活时，NetworkManager
    会自动创建这个新的路由表。
3.  将网络接口配置为内部工作站子网：
    ``` literallayout
    # nmcli connection add type ethernet con-name Internal-Workstations ifname enp8s0 ipv4.method manual ipv4.addresses 10.0.0.1/24 ipv4.routes "10.0.0.0/24 src=192.0.2.1 table=5000" ipv4.routing-rules "priority 5 from 10.0.0.0/24 table 5000" connection.zone internal
    ```
    此命令使用 `ipv4.routes`{.literal} 参数将静态路由添加到路由表, ID 为
    `5000`{.literal}。`10.0.0.0/24`{.literal}
    子网的这个静态路由使用本地网络接口的 IP 地址到供应商
    B（`192.0.2.1`{.literal}）作为下一跳。
    另外，该命令使用 `ipv4.routing-rules`{.literal} 参数添加带有优先级
    `5`{.literal} 的路由规则，该规则将 `10.0.0.0/24`{.literal}
    子网中的流量路由到表 `5000`{.literal}。低的值具有更高的优先级。
    请注意，`ipv4.routing-rules`{.literal} 参数中的语法与
    `ip route add`{.literal} 命令中的语法相同，不过
    `ipv4.routing-rules`{.literal} 始终需要指定优先级。
4.  将网络接口配置为服务器子网：
    ``` literallayout
    # nmcli connection add type ethernet con-name Servers ifname enp9s0 ipv4.method manual ipv4.addresses 203.0.113.1/24 connection.zone internal
    ```
:::
::: orderedlist
**验证步骤**
1.  在内部工作站子网的 RHEL 主机上：
    ::: orderedlist
    1.  安装 `traceroute`{.literal} 软件包：
        ``` literallayout
        # yum install traceroute
        ```
    2.  使用 `traceroute`{.literal} 工具显示到互联网主机的路由：
        ``` literallayout
        # traceroute redhat.com
        traceroute to redhat.com (209.132.183.105), 30 hops max, 60 byte packets
         1  10.0.0.1 (10.0.0.1)     0.337 ms  0.260 ms  0.223 ms
         2  192.0.2.1 (192.0.2.1)   0.884 ms  1.066 ms  1.248 ms
         ...
        ```
        命令的输出显示路由器通过
        `192.0.2.1`{.literal}发送数据包，这是供应商 B 的网络。
    :::
2.  在服务器子网的 RHEL 主机上：
    ::: orderedlist
    1.  安装 `traceroute`{.literal} 软件包：
        ``` literallayout
        # yum install traceroute
        ```
    2.  使用 `traceroute`{.literal} 工具显示到互联网主机的路由：
        ``` literallayout
        # traceroute redhat.com
        traceroute to redhat.com (209.132.183.105), 30 hops max, 60 byte packets
         1  203.0.113.1 (203.0.113.1)    2.179 ms  2.073 ms  1.944 ms
         2  198.51.100.2 (198.51.100.2)  1.868 ms  1.798 ms  1.549 ms
         ...
        ```
        命令的输出显示路由器通过
        `198.51.100.2`{.literal}发送数据包，这是供应商 A 的网络。
    :::
:::
::: title
**故障排除步骤**
:::
在 RHEL 路由器中：
::: orderedlist
1.  显示规则列表：