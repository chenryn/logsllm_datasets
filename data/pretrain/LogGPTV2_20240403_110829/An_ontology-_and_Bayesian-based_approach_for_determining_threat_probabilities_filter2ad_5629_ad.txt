A three-point Likert scale (high, medium, low) was used to
describe the e(cid:11)ectiveness of the attacker. According to [23],
the following rating scale was applied: (1) High - the attack-
er is highly motivated and su(cid:14)ciently capable, (2) Medium
- the attacker is motivated and capable, and (3) Low - the
attacker lacks motivation and capability.
4.4.4 Running example
Since the considered no data backup strategy is not con-
nected to an attacker pro(cid:12)le its calculation is excluded from
the running example.
4.5 Control Combination Variable
The control combination e(cid:11)ectiveness vector
⃗CCEVi rep-
resents an intermediate variable, which summarizes the ef-
fectiveness ratings of its parents f ⃗CE1, ..., ⃗CEng in order to
decrease the probability calculation complexity at the sub-
⃗P PVi .
sequent vulnerability exploitation probability vector
4.5.1 Determining factors
Since the vector
⃗CCEVi is just intermediate, the only fac-
tors which determine its status are its parent vectors ⃗CEi.
While this seems to be a straight forward summarization
⃗CCEVi parents, namely
of discrete values, the nature of
f ⃗CE1, ..., ⃗CEng, has to be taken into account to consider
the following circumstances: (1) control dependencies, such
as an automatic (cid:12)re extinguishing system which requires a
(cid:12)re detector, and (2) control interferences, such as the in-
stallation of several anti-virus solutions on one system which
would interfere with each other.
4.5.2 Calculation
Since controls which interfere with each other are modeled
in the security ontology as separate vulnerabilities, they are
not considered in this calculation schema. The e(cid:11)ectiveness
of a control combination is the addend of all connected con-
trol instances taking their individual weight into consider-
ation. Besides the weight WCEi , a binary indicator ReCEi
(ReCEi =f0, 1g) was introduced for each control, which s-
tates if the required controls are implemented regarding the
respective control. For example, if an automatic (cid:12)re extin-
guishing system was modeled and there was no correspond-
ing (cid:12)re detector in the control combination set, ReCEi of the
automatic (cid:12)re extinguishing system would be zero, since it
is useless without a (cid:12)re detector.
n∑
( ⃗CEi (cid:3) WCEi
(cid:3) ReCEi )
⃗CCEVi =
(17)
i=1
∑
All weights WCEi in the above formula sum up to 1 !
n
i=1 WCEi = 1.
4.5.3 Rating
For rating the control combination e(cid:11)ectiveness a three-
point Likert scale was used, allowing high, medium, and low
as possible values. See Section 4.6.2 for the rating scale
interpretation.
4.5.4 Running example
The e(cid:11)ectiveness of the backup strategy control depends
on the e(cid:11)ectiveness of the implemented data backup policy.
In our example the implemented data backup policy is low
e(cid:11)ective.
⃗CCEVN BS = f0, 0, 100g (cid:3) 1 (cid:3) 1
(18)
4.6 Control Variable
The control e(cid:11)ectiveness vector
⃗CEi describes the e(cid:11)ec-
tiveness of the implemented control.
4.6.1 Determining factors
E(cid:11)ectiveness is de(cid:12)ned by [4] as the ability to achieve
stated goals or objectives, judged in terms of both, output
and impact. Since the potential control implementations are
directly related to a speci(cid:12)c threat, their e(cid:11)ectiveness can
be rated based on their ability to mitigate the corresponding
vulnerability.
4.6.2 Rating
For rating the control e(cid:11)ectiveness ⃗CEi a three-point Lik-
ert scale was used: (1) High - the control is highly capable
to mitigate a given vulnerability, (2) Medium - the control is
capable to mitigate a given vulnerability, and (3) Low - the
control may impede the exploitation of a given vulnerability.
4.6.3 Running example
The implemented data backup policy (DBP) has been rat-
ed as low e(cid:11)ective:
⃗CEDBP = f0, 0, 100g
(19)
5. KNOWLEDGE INCORPORATION
After introducing the formalisms of the Bayesian threat
probability determination, this section aims at describing
the connection to the security ontology, which provides a
foundation to enrich the Bayesian network with concrete
knowledge. Since the security ontology provides detailed
knowledge about threat, vulnerability, and control depen-
dencies, this knowledge could be utilized to build up the
Bayesian network for the threat probability determination.
Figure 2 gives an overview of the connections between the
proposed Bayesian threat probability determination and the
security ontology. The entire Bayesian network for the threat
probability determination (containing 518 nodes, 621 links,
and 68.192 conditional probabilities) can be downloaded from
http://securityontology.sba-research.org/threatnet.zip. Please
note that the entire Bayesian network is automatically gen-
erated based on its network variable speci(cid:12)cations (cf. Sec-
tion 4) and the knowledge provided by the security ontology.
5.1 Threat Variables
First of all, the approach has to set up a threat net, in-
cluding the relations between the threats and their a priori
threat probability. Since each threat modeled in the secu-
rity ontology is connected by the relation sec:givesRiseTo
to follow-up threats (see Figure 2) the corresponding threat
net can easily be created. The a priori threat probability
⃗APTi for each threat Ti is also derived from the se-
vector
curity ontology, depending on the actual physical location
350
of the organization. The sec:Probability concept and the
sec:probabilityDistribution property of the security ontology
connect each threat of a given physical location with its a
priori probability. Since weights for all threat probability
in(cid:13)uencing factors (in(cid:13)uencing threats and vulnerabilities)
are necessary, they are distributed equally. For example,
if one threat was in(cid:13)uenced by two threats, the weight for
each in(cid:13)uencing factor, namely the two in(cid:13)uencing threats
and the vulnerabilities node, would be 0.3333. Tuning these
default weights is of course possible, if necessary.
5.2 Intermediate Vulnerability Variables
⃗P PV STi
For each threat the approach has to determine the corre-
sponding vulnerabilities. In the security ontology this rela-
tionship is modeled by the sec:exploits relation (see Figure 2)
which allows revealing the vulnerabilities of a given threat.
As the vulnerabilities vector
is determined by sin-
gle vulnerabilities and their weights, the weight of each vul-
nerability which in(cid:13)uences the intermediate vulnerabilities
vector
was determined. Since the security ontology
provides a severity rating SVi for each vulnerability (high
(3), medium (2), and low(1)), a numerical weight WP PVi
for
each vulnerability can be determined by dividing the sever-
ity of the considered vulnerability by the severity sum of all
vulnerabilities relevant to the threat:
⃗P PV STi
SVi∑
n
j=1 SVj
WP PVi
=
(20)
5.3 Vulnerability Variables
2 ; WAPTi
= 1
1
⃗AEVi , and
⃗APTi , are weighted equally (WCCEVi
= 1
⃗AEVi and the a priori threat probability
The exploitation probability of each vulnerability vari-
able is determined by (1) the e(cid:11)ectiveness of the implement-
⃗CCEVi , (2) the attacker’s e(cid:11)ective-
ed control combination
⃗AEVi in the case of a deliberate threat source or by
ness
⃗APTi in the case of an ac-
the a priori threat probability
cidental threat source. By default all components, namely
⃗CCEVi ,
=
2 )). While the attacker’s ef-
2 ; (WAEVi
⃗APTi
fectiveness
are not rated on an asset-speci(cid:12)c level, the control combina-
⃗CCEVi is determined speci(cid:12)cally for the
tion e(cid:11)ectiveness
considered asset. Therefore, reasoning algorithms query the
security ontology regarding those control implementations
e(cid:11)ectiveness values which are relevant for the considered as-
set/vulnerability combination (e.g. the e(cid:11)ectiveness of the
anti virus solution installed on PC1 to determine together
with further input factors the malware threat probability).
5.4 Control Implementation Variables
With the security ontology relation sec:mitigatedBy (see
Figure 2) the required control implementation combination
which is necessary to mitigate the given vulnerability can
be derived. Since each implementation in the recommended
⃗CEi, the
control combination has a di(cid:11)erent e(cid:11)ectiveness
weight WCEi di(cid:11)ers dependently on the implementation’s
importance for the current control combination. The secu-
rity ontology concept sec:ControlImplementation represents
the e(cid:11)ectiveness for each control/implementation combina-
tion ⃗CEi by a three-point Likert scale (high, medium, low).
As the asset-speci(cid:12)c threat probability determination takes
only those control implementations into consideration which
are able to protect the considered asset, reasoning algorithm-
351
Figure 5: Determining the control implementation
weight in a given threat context
s are utilized to populate the Bayesian network with the
correct (cid:12)ndings (e.g. e(cid:11)ectiveness ratings) regarding rele-
vant control implementation nodes. By changing the con-
trol combination (e.g. substituting low-e(cid:11)ective control im-
plementations by highly e(cid:11)ective control implementations)
the exploitation probability of the corresponding vulnera-
bility and subsequently the probability of the correspond-
ing threat alter to maintain the consistency of the Bayesian
network. Together with the threat impact, the changed
threat probability allows the determination of the impact
of a certain control implementation on the actual risk lev-
el (risk = threat probability x threat impact). To prior-
itize control implementations regarding their potential to
in(cid:13)uence the posterior threat probability, an algorithm for
determining the threat-speci(cid:12)c weight of each control im-
plementation has been developed. Starting from the con-
sidered threat the algorithm runs parent-side through the
entire Bayesian network and determines all paths from the
considered threat node to each control implementation n-
ode. To determine the weight of each identi(cid:12)ed control im-
plementation node the algorithm multiplies the weights of
each node located on the identi(cid:12)ed path. Figure 5 shows
a simpli(cid:12)ed example including the paths: (1) Unauthorized
Physical Access - Unlocked Doors - Locked Doors Policy
! 1.0 (cid:3) 0.5 (cid:3) 0.5 = 0.25, (2) Unauthorized Physical Ac-
cess - No Access Regulation Control - Security Guard or
Entry Checkpoint ! 1.0 (cid:3) 0.5 (cid:3) 1
3 = 0.16666, and (3) Unau-
thorized Physical Access - No Access Regulation Control -
Access System ! 1.0 (cid:3) 0.5 (cid:3) 1
3 = 0.16666. According to
the results, the unauthorized physical access threat proba-
bility mitigation is determined at most by the locked doors
policy followed by the security guard/entry checkpoint and
access system controls. The speci(cid:12)c weight of each control
implementation in a given threat context is especially at
the control evaluation phase of the information security risk
management process of paramount importance.
6. EVALUATION
Before we describe the conducted evaluation we stress
that the proposed approach tries to measure what is in
fact not measurable: (cid:12)ctive values, namely threat proba-
bilities. However, the proposed approach provides the risk
management (cid:12)eld with a comprehensible threat probabili-
ty determination methodology which is based on a shared
understanding of the information security domain (security
ontology). We used qualitative ratings (e.g., high, medi-
um, and low) to assess the input variables and developed a
method to map the distribution of each Bayesian network
node to a lower and an upper bound percent value. To eval-
uate the Bayesian threat probability determination includ-
Unauthorized Physical AccessUnlocked DoorsNo Access Regulation ControlLocked Doors PolicyAttacker EffectivenessAttacker EffectivenessAccess SystemSecurity Guard or Entry Checkpoint*****1.00.50.50.250.16660.16660.50.50.3330.3330.333ing its (cid:12)ctive output, a team of eight information security
professionals was compiled to assess the approach itself and
the transformed probabilities (a priori to posterior) taking
the given in(cid:13)uence factors into consideration.
In the (cid:12)rst
evaluation round, the expert team was introduced to our
Bayesian threat probability determination approach, to the
Bayesian network structure and how it was derived from
existing best-practice guidelines and information security s-
tandards. Although there were minor disagreements about
the variable selection (such as the attractiveness of a target
system, which is incorporated in this model in the attacker
motivation variable), the expert team approved of the struc-
ture of the network. Since the calculation schemes for each
network node (variable) were designed generically, incorpo-
rating weights and enabling the usage of di(cid:11)erent rating s-
cales, it was approved after a discussion by the expert team.
Besides evaluating the network structure, we conducted ex-
periments to see how small changes in input values result in
small or large changes in output values and if it is possible
to output non-intuitive results. As the Bayesian network is
generated based on accepted domain knowledge, it conducts
its calculations based on an approved network structure and
conditional probability tables that have been built based on
accepted node weightings. Therefore, our experiments did
not show any non-intuitive output or changes in output vales
that could not be justi(cid:12)ed with the corresponding input val-
ue changes.
6.1 Dynamic Changes
New vulnerabilities are discovered on a nearly daily basis.
So the question is how the system reacts to such dynamic
changes. As the Bayesian network for the proposed threat
probability determination is completely generated from the
security ontology, new knowledge facts such as vulnerabil-
ities have to be integrated into the ontology to a(cid:11)ect the
probability calculation. Consider the following example: on
September 24 2010 a new vulnerability of a major PDF read-
er software is discovered. In the worst case this vulnerabili-
ty is exploited by the data disclosure threat. The (cid:12)rst step
is to create a new vulnerability individual in the ontology
and relate the newly created individual with the vulnerabili-
ty exploitedBy Threat relation to the data disclosure threat.
As the vulnerability severity is considered as high we set its