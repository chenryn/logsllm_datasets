### Monthly Observations and Methodology
Please note that the announce rates for HTTP/1.1 (H1) are underestimated, as H1 sites are not required to use NPN/ALPN. The table also reports the total number of probed sites. From November 2014 to August 2015, we used the Alexa Top 1 Million list fetched on November 10th, 2014. Starting in September 2015, we merged the current Alexa list with our own daily, continuously expanding the pool of sites we query (1.8 million as of October 16th, 2015).

### Overview
From November 2014 through August 2015, Table 1 shows mostly constant H1 and SPDY announce rates, with the exception of a significant drop in May 2015 (2.2 and 2.5 percentage points, respectively). In contrast, the HTTP/2 (H2) announce rate grew by 50%—from 1.4% to 2.2%—with most of the growth occurring after May 2015, when H2 was standardized. As we expanded the pool of sites we probed (starting in September 2015), H1 and SPDY announce rates grew slowly (SPDY from 5.1% in July to 5.7% in October), while H2 announce rates grew more quickly (from 2.2% in July to 3.7% in October). Interestingly, we observed a 0.1% drop in SPDY in October (about 2,000 sites) and a 0.6% increase in H2 (about 10,000 sites). If this trend continues, H2 support will likely overtake SPDY in the near future.

**Table 1. Protocol support from Nov. 2014–Oct. 2015 as a percentage of top 1 million Alexa sites.**

| Month | HTTP/1.1 | SPDY/3.1 | HTTP/2 | NPN | ALPN | H2C | Total Sites |
|-------|----------|----------|--------|-----|------|-----|-------------|
| Nov   | 9.8%     | 5.8%     | 1.4%   | 9.8%| -    | 0%  | 1M          |
| Dec   | 10.2%    | 5.9%     | 1.4%   | 10.2%| -    | 0%  | 1M          |
| Jan   | 10.5%    | 6.0%     | 1.3%   | 10.5%| -    | 0%  | 1M          |
| Feb   | 10.8%    | 6.2%     | 1.3%   | 10.8%| -    | 0%  | 1M          |
| Mar   | 11.2%    | 6.3%     | 1.3%   | 11.2%| -    | 0%  | 1M          |
| Apr   | 11.3%    | 6.3%     | 1.3%   | 11.3%| -    | 0%  | 1M          |
| May   | 9.1%     | 3.7%     | 1.2%   | 9.1% | -    | 0%  | 1M          |
| Jun   | 9.7%     | 4.1%     | 1.4%   | 9.7% | -    | 0%  | 1M          |
| Jul   | 10.8%    | 5.1%     | 2.2%   | 10.8%| 0.006%| 0%  | 1M          |
| Aug   | 11.4%    | 5.6%     | 2.7%   | 11.4%| 0.06%| 0%  | 1M          |
| Sep   | 12.1%    | 5.8%     | 3.0%   | 12.1%| 0.2% | 0%  | 1.4M        |
| Oct   | 12.1%    | 5.7%     | 3.6%   | 12.1%| 1.04%| 1.20%| 1.8M        |

### NPN, ALPN, and H2C
As of October 2015, 50% of the sites supporting NPN also support ALPN. We added ALPN support to our measurement platform in September 2015; previous manual ALPN tests showed less than 0.5% adoption. By October 2015, there were already 1,200 websites supporting ALPN but not NPN, 20% more than in September. H2C announcement also grew quickly, reaching 1.37% in October 2015 (about 22,000 sites). However, our UPGRADE header tests found only 20-30 sites that actually support H2C.

### HTTP/2 Adoption
We now examine HTTP/2 adoption in detail. Figure 1(a) shows the evolution of the number of websites that (1) announce H2 support (H2-announce), (2) respond using H2, even just to return an error page or redirect (H2-partial), and (3) actually serve page content with H2 (H2-true, cf. Sect. 3). Figure 1(a) highlights the substantial growth of H2 adoption after its standardization in May 2015. The figure also shows a large difference between "announced" (H2-announce) and "actual" H2 support (H2-partial and H2-true). However, while between November 2014 and May 2015, only 5% of the websites announcing H2 support actually responded using H2 (H2-partial), this increased to 55% by October 2015. Before May 2015, most websites serving content with H2 were well-configured and properly working (i.e., the gap between H2-partial and H2-true was small). After May, the gap widened considerably: most new websites supporting H2 showed some misconfiguration, like redirecting to an error page. This trend continued until October 2015, when the gap between H2-partial and H2-true was suddenly reduced.

### Web Server Implementations
To further understand the different levels of H2 support, Figure 1(b) plots the popularity of the web server implementations powering the H2-true websites. Note that the resolution of this data is weekly until September 2015 and daily thereafter. For visibility, Figure 1(b) shows only the six most popular web server implementations (out of the 53 encountered). Figure 1(b) indicates that, between October 2014 and May 2015, most H2-true websites were powered by Google web servers (google frontend, gws, gse, and sffe). In May 2015, two new H2 implementations debuted: LiteSpeed and NGINX. Their adoption rates were very different; while LiteSpeed websites were quickly updated—LiteSpeed usage grew from 10 websites to 2,000 within two months—NGINX websites upgraded more slowly. The combination of fast adoption and the fact that most LiteSpeed websites were H2-partial and not H2-true suggests that LiteSpeed is used more for virtual hosting than NGINX. Despite lower overall numbers, NGINX currently powers more than 7,000 H2-true websites (71.7% of all H2-true websites) compared to LiteSpeed's 1,300.

### Notable Events
Figure 1(a) highlights several notable events. First, the number of servers supporting H2 drastically dropped over four days (December 14th–18th) due to Google, the primary adopter of H2 at that time, disabling H2 support on their servers because of an issue with SDCH compressed content in Chromium. It took a month for the problem to be fixed, and H2 support was re-enabled over four days (January 11th–15th), likely reflecting a specific roll-out policy for server configuration changes. The next interesting event occurred between May and June 2015, when the number of H2-partial websites—though they were mostly error pages—doubled from 600 to 1,200. This spike was due to Hawk Host, a virtual web hosting provider, updating its servers with the latest version of LiteSpeed, which supports H2. Figure 1(a) also shows a sudden increase in H2 support on October 3rd, caused by NGINX's footprint growing 40% (from 25,000 to 35,000 websites) thanks to WordPress updating to the latest NGINX release. Finally, note that the spikes in August and September were due to the extension of the pool of websites we queried (cf. Table 1).

### Takeaway
The H2 adoption trend reflects the broader Internet ecosystem, where most websites do not control their own technology stacks. A few big players are responsible for the spread of new technologies, and the average website owners might not even know they are serving content over H2.

### Website Structure
Modern web pages are usually composed of several embedded objects, including images, JavaScripts, and style sheets. During our 11-month measurement campaign, we found no indication of a difference in the number of objects between pages served with H1 and H2 (cf. Fig. 2(a)). To verify this quantitatively, we computed the cosine similarity of the object counts for H1 and H2 every week and found values ranging from 0.96 to 0.98. Thus, at a macroscopic level, there is no difference in the content composition between the two protocols. Figure 2(a) also shows that from November 2014 to May 2015, pages served with H2 were mostly small pages, i.e., 50% had 10 objects or fewer. After May 2015, more complex websites started to support H2; for example, in October 2015, 50% of websites had about 60 objects, which is in line with the average number of objects per webpage reported in [21].

The objects embedded within a web page often reside on another web server, and the browser must open new TCP connections independent of the application protocol in use. Additionally, the browser must renegotiate which application protocol to use for each new TCP connection. Therefore, even if a website supports H2, it is possible that only a fraction of its objects are delivered using H2. Although not shown due to space limitations, we found that half of the websites actually serve about 50% of their content using H2. Only 10% of the websites serve 100% of their objects using H2; these websites contain fewer objects and have an overall smaller size—400 KB on average compared to 1.5 MB for all websites.