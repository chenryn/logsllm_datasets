在一个NxN的坐标方格grid中，每一个方格的值grid[i]表示在位置（i.j)的平台高度。现在开始下
雨了。当时间为t时，此时雨水导致水池中任意位置的水位为t。你可以从一个平台游向四周相邻的任
意一个平台，但是前提是此时水位必须同时淹没这两个平台。假定你可以瞬间移动无限距离，也就是默
认在方格内部游动是不耗时的。当然，在你游泳的时候你必须待在坐标方格里面。
你从坐标方格的左上平台（0，0)出发。最少耗时多久你才能到达坐标方格的右下平台（N-1，N-1)？
提示：
● 2  maxwait {
maxwait = row[j]
：
for minwait = len(grid) 11 col >= 1en(grid[o]) {
return
---
## Page 753
if grid[row][co1]>flag 11 flags[row] [co1]== flag{
return
flags[row] [col] = flag
addFlags(grid, flags, flag, row-1, co1)
addFlags(grid, flags, flag, row+l, col)
addFlags(grid, flags, flag, row, co1-1)
addFlags(grid, flags, flag, row, co1+1)
//解法二并查集（并不是此题的最优解）
func swimInwaterl(grid [][]int) int {
n, uf, res := len(grid), template.UnionFind{}, 0
uf.Init(n * n)
for uf.Find(o) != uf.Find(n*n-1) {
for i:= 0;i res {
continue
if i [mqe, Mqe]
//第二步：
// [mqe, Mqe]
1->[mqe Mqe mQe MQe]
//第二步：
// [mqe Mqe mQe MQe] -> [mqe Mqe mQe MQe mqE MqE mQE MQE]
func letterCasePermutationl(S string) []string {
res := make([]string,0，1='a′&& c='A′&&c float64(mid)*float64(A[j]){
j++
count += n -j
if j p*A[j]{
p =A[i]
q = A[j]
if count == K {
return []int{p, q}
}else if count <K {
1ow = mid
}else{
high = mid
//解法二暴力解法，时间复杂度0（n^2）
func kthSmallestPrimeFractionl(A []int, K int) []int {
if 1en(A) == 0 11 (1en(A)*(1en(A)-1))/2 <K {
return []int{}
fractions := []Fraction{}
for i := 0; i < len(A); i++ {
for j := i + 1; j < len(A); j++ {
fractions = append(fractions, Fraction{molecule: A[i], denominator:
A[j]}]
sort.Sort(SortByFraction(fractions))
return []int{fractions[K-1].molecule, fractions[K-1].denominator}
// Fraction define
type Fraction struct {
---
## Page 760
molecule
int
denominator int
//SortByFraction define
type SortByFraction []Fraction
func (a SortByFraction) Len() int
{return len(a) }
func (a SortByFraction) Swap(i, j int) { a[1],a[j] = a[j], a[1] }
func (a SortByFraction) Less(i, j int) bool {
return a[i]-molecule*a[j] .denominator < a[j]-molecule*a[i] .denominator
793.PreimageSizeofFactorialZeroesFunction
题目
Let f(x) be the number of zeroes at the end of x! . (Recall that x! = 1 * 2 * 3 *
X
and by convention, 0! = 1 .)
For example, f(3) = 0 because 3! = 6 has no zeroes at the end, while f(11) = 2 because 11! =
39916800 has 2 zeroes at the end. Given K, find how many non-negative integers x have the
property that f(x) = K
Example 1:
Input: K = 0
Output: 5
Explanation: 0!, 1!, 2!, 3!, and 4! end with K = 0 zeroes
Example 2:
Input: K = 5
output: 0
Explanation: There is no x such that x! ends in K = 5 zeroes.
Note:
●K will be an integer in the range [0, 109]
题目大意
f（x)是x!末尾是0的数量。（回想一下×!=1*2*3*..*x，且0！=1）
例如，f(3)=0，因为3！=6的末尾没有0；而f(11)=2，因为11!=39916800末端有2个0。给定K，找
出多少个非负整数x，有f(x)=K的性质。
注意：
---
## Page 761
·K是范围在[0,10^9]的整数。
解题思路
·给出一个数K，要求有多少个n能使得n！末尾0的个数等于K。
·这一题是基于第172题的逆过程加强版。第172题是给出n，求得末尾0的个数。由第172题可
以知道，n！末尾0的个数取决于因子5的个数。末尾可能有K个0，那么n最多可以等于5
K，在[0，5*k]区间内二分搜索，判断mid末尾0的个数，如果能找到K，那么就范围
5，如果找不到这个K，返回0。为什么答案取值只有0和5呢？因为当n增加5以后，因子5
的个数又加一了，末尾又可以多1个或者多个0如果加5以后，有多个5的因子，例如25，
125，就有可能末尾增加多个0）。所以有效的K值对应的n的范围区间就是5。反过来，无效的
K值对应的n是0。K在5An的分界线处会发生跳变，所有有些值取不到。例如，n在
[0,5）内取值，K=0；n在[5,10）内取值，K=1；n在[10,15）内取值，K=2；n
在[15,20）内取值，K=3；n在[20,25）内取值，K=4；n在[25,30）内取值，K=
6，因为25提供了2个5，也就提供了2个0，所以K永远无法取值等于5，即当K=5时，
找不到任何的n与之对应。
·这一题也可以用数学的方法解题。见解法二。这个解法的灵感来自于：n！末尾0的个数等于[1，n]
所有数的因子5的个数总和。其次此题的结果一定只有0和5（分析见上一种解法）。有了这两个结
论以后，就可以用数学的方法推导了。首先n可以表示为5进制的形式
n= 5 *a0 + 5*1 + 5²*a2+ ..+ 5*an,(an< 5)
上面式子中，所有有因子5的个数为：
年C
这个总数就即是K。针对不同的n，an的通项公式不同，所以表示的K的系数也不同。cn的通项公式
呢？
K
①n * Cn
Cn = 5 * Cn1 + 1
由上面这个递推还能推出通项公式（不过这题不适用通项公式，是用递推公式更方便）：
---
## Page 762
5°
Cn
A
判断K是否能表示成两个数列的表示形式，等价于判断K是否能转化为以Cn为基的变进制数。到此，
转化成类似第483题了.代码实现不难，见解法二
代码
package leetcode