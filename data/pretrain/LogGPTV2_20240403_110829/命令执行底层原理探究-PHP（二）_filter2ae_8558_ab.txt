### PHP 编译与调试指南

#### 配置编译参数
在本例中，我们将以 Debug 模式编译 PHP 内核源码。以下是具体的配置步骤：

1. 打开命令行工具，进入 PHP 源码目录：
   ```sh
   cd xxx\php-7.2.9-windows-debug
   ```

2. 运行 `configure.bat` 脚本并设置编译选项：
   ```sh
   configure.bat --disable-all --enable-cli --enable-debug
   ```

3. 输出信息示例：
   ```
   PHP Version: 7.2.9
   Saving configure options to config.nice.bat
   Checking for cl.exe ...
   WARNING: Using unknown MSVC version 19.28.29335
     Detected compiler MSVC 19.28.29335, untested
     Detected 32-bit compiler
   Checking for link.exe ...  D:\QSoftware\VS2019Professional\Professional\VC\Tools\MSVC\14.28.29333\bin\HostX86\x86
   Checking for nmake.exe ...
   Checking for lib.exe ...
   Checking for bison.exe ...
   Checking for sed.exe ...
   Checking for re2c.exe ...
     Detected re2c version 1.1.1
   Checking for zip.exe ...
   Checking for lemon.exe ...
   Checking for mc.exe ...  C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x86
   Checking for mt.exe ...  C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x86
   WARNING: Debug builds cannot be built using multi processing
   Build dir: D:\QSec\Code-Audit\PHP\PHP-Source-Code\php-7.2.9-windows-debug\Debug_TS
   PHP Core:  php7ts_debug.dll and php7ts_debug.lib
   Checking for wspiapi.h ...
   Enabling IPv6 support
   Enabling SAPI sapi\cli
   Checking for library edit_a.lib;edit.lib ...
   Enabling extension ext\date
   Enabling extension ext\pcre
   Enabling extension ext\reflection
   Enabling extension ext\spl
   Checking for timelib_config.h ...  ext/date/lib
   Enabling extension ext\standard
   Creating build dirs...
   Generating files...
   Generating Makefile
   Generating main/internal_functions.c
   Generating main/config.w32.h
   Generating phpize
   Done.
   Enabled extensions:
   -----------------------    | Extension  | Mode   |
   -----------------------    | date       | static |
   | pcre       | static |
   | reflection | static |
   | spl        | static |
   | standard   | static |
   -----------------------
   Enabled SAPI:
   -------------    | Sapi Name |
   -------------    | cli       |
   -------------
   ------------------------------------------------
   |                 |                            |
   ------------------------------------------------
   | Build type      | Debug                      |
   | Thread Safety   | Yes                        |
   | Compiler        | MSVC 19.28.29335, untested |
   | Architecture    | x86                        |
   | Optimization    | disabled                   |
   | Static analyzer | disabled                   |
   ------------------------------------------------
   Type 'nmake' to build PHP
   ```

#### 开始编译
运行 `nmake` 指令进行编译：
```sh
nmake
```

输出信息示例：
```
Microsoft (R) 程序维护实用工具 14.28.29335.0 版
版权所有 (C) Microsoft Corporation。  保留所有权利。
Recreating build dirs
        type ext\pcre\php_pcre.def > D:\QSec\Code-Audit\PHP\PHP-Source-Code\php-7.2.9-windows-debug\Debug_TS\php7ts_debug.dll.def
        "C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x86\mc.exe" -h win32\ -r D:\QSec\Code-Audit\PHP\PHP-Source-Code\php-7.2.9-windows-debug\Debug_TS\ -x D:\QSec\Code-Audit\PHP\PHP-Source-Code\php-7.2.9-windows-debug\Debug_TS\ win32\build\wsyslog.mc
MC: Compiling win32\build\wsyslog.mc
cl: 命令行 warning D9035 :“Gm”选项已否决，并将在将来的版本中移除
php_cli.c
cl: 命令行 warning D9035 :“Gm”选项已否决，并将在将来的版本中移除
php_cli_process_title.c
...
...
```

编译完成后，在当前源码目录生成 `Debug_TS` 项目（编译后的 PHP 可执行文件 `php.exe` -> 32 位）。

#### 测试 `Debug_TS/php.exe`
进入 `Debug_TS` 目录并测试 PHP 版本：
```sh
cd xxx\php-7.2.9-windows-debug\Debug_TS
php.exe -v
```

输出信息示例：
```
PHP 7.2.9 (cli) (built: Dec 15 2020 14:40:17) ( ZTS MSVC 19.28.29335, untested x86 DEBUG )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
```

### 源码调试
通过配置 VSCode 进行 PHP 内核源码的调试工作：

1. 用 VSCode 打开 PHP 7.2.9 编译的源代码项目。
2. 在源代码目录下的 `Debug_TS` 里，创建一个用于测试的 PHP 文件 `test.php`。
3. 点击功能菜单 `Run -> Start Debugging` 【F5】，弹框中任意选择一个，自动生成调试配置文件 `.vscode/launch.json`，修改其内容如下：
   ```json
   {
       "version": "0.2.0",
       "configurations": [
           {
               "name": "Windows PHP7.2.9 Source Code Debug",
               "type": "cppvsdbg",
               "request": "launch",
               "program": "${workspaceRoot}/Debug_TS/php.exe",
               "args": ["${file}"],
               "stopAtEntry": false,
               "cwd": "${workspaceRoot}/Debug_TS/",
               "environment": [],
               "externalConsole": false
           }
       ]
   }
   ```

4. 注意这里需要安装扩展 `C/C++`，同时这里的调试和 GDB 没有关系。
5. 打开 `php-7.2.9-windows-debug/sapi/cli/php_cli.c` 源文件（程序执行入口文件），定位到第 1200 行的 `main` 函数内打上断点。
6. 点击 `Run -> Start Debugging` 【F5】 开始调试。

#### VSCode 调试窗口介绍
- **Continue/Pause**：运行 F5
- **Step Over**：单步 步过 F10
- **Step Into**：单步 步入 F11
- **Step Out**：跳出 函数 Shift+F11
- **Restart**：重新 调试 Ctrl+Shift+F5
- **Stop**：关闭 调试 Shift+F5

### 源码执行
#### 任务执行
如果需要单纯执行 PHP 代码，则需要配置 `tasks.json` 任务文件。初始化点击 `Terminal -> Configure Tasks` 进行模板文件的创建，然后选择其他命令执行模板即可。