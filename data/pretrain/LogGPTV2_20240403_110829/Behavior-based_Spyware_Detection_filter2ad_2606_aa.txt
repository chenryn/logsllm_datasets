# Behavior-based Spyware Detection

**Authors:**
- Engin Kirda, Secure Systems Lab, Technical University Vienna, ek@seclab.tuwien.ac.at
- Christopher Kruegel, Secure Systems Lab, Technical University Vienna, chris@seclab.tuwien.ac.at
- Greg Banks, Department of Computer Science, University of California, Santa Barbara, nomed@cs.ucsb.edu
- Giovanni Vigna, Department of Computer Science, University of California, Santa Barbara, vigna@cs.ucsb.edu
- Richard A. Kemmerer, Department of Computer Science, University of California, Santa Barbara, kemm@cs.ucsb.edu

## Abstract
Spyware is rapidly becoming a major security issue, as these programs are surreptitiously installed on users' workstations to monitor their actions and gather private information. Current anti-spyware tools, similar to traditional antivirus tools, rely on signatures associated with known spyware programs. However, these techniques can be easily evaded through simple obfuscation. This paper introduces a novel technique for detecting spyware based on the characterization of spyware-like behavior. The technique focuses on a popular class of spyware applications that use Internet Explorer's Browser Helper Object (BHO) and toolbar interfaces to monitor user browsing behavior. Our approach combines static and dynamic analysis to determine whether the behavior of BHOs and toolbars in response to simulated browser events should be considered malicious. Evaluation on a representative set of spyware samples demonstrates the effectiveness of our method in reliably identifying malicious components using an abstract behavioral characterization.

**Keywords:** spyware, malware detection, static analysis, dynamic analysis.

## 1. Introduction
Spyware is increasingly becoming one of the major threats to the security of Internet users. A comprehensive analysis by Webroot and Earthlink revealed that a significant portion of Internet-connected computers is infected with spyware, with an average of 25 different spyware programs per scanned host. Unlike other types of malware, such as viruses and worms, spyware primarily aims to monitor user behavior and steal private information, such as keystrokes and browsing patterns. This data is then sent back to the spyware distributors for targeted advertising or marketing analysis. Additionally, spyware can hijack a user's browser, directing them to specific websites, and degrade system performance due to poor coding.

Several anti-spyware products have been developed to identify and remove unwanted spyware. These tools typically use the same technology as antivirus products, relying on signature-based detection. However, this approach has limitations, including the need for continuous updates and vulnerability to simple obfuscation techniques.

This paper presents a novel spyware detection technique that overcomes some of the limitations of existing approaches. Our technique is based on an abstract characterization of the behavior of a popular class of spyware programs that use Internet Explorer's BHO and toolbar interfaces. By combining static and dynamic analysis, we can determine if a component monitors user actions and reports findings to an external entity. This characterization is independent of the binary image, making it effective against previously unseen spyware and resilient to obfuscation.

**Main Contributions:**
- We introduce a novel characterization of the behavior of spyware components implemented as BHOs or toolbars.
- We present new static and dynamic analysis techniques to reliably identify malicious behavior in BHOs and toolbar components.
- We provide experimental results on a substantial body of spyware and benign samples, demonstrating the effectiveness of our approach.

The remainder of the paper is structured as follows:
- Section 2: Related Work
- Section 3: Background on BHOs and Toolbars
- Section 4: Abstract Characterization of Spyware Behavior
- Section 5: Motivation for Static and Dynamic Analysis
- Sections 6 and 7: Details of Our Technique
- Section 8: Limitations of Our System
- Section 9: Experimental Evaluation
- Section 10: Conclusion and Future Work

## 2. Related Work
Spyware is difficult to define, as it encompasses various types of malicious software with different behaviors and levels of "maliciousness." For example, adware, which displays targeted advertisements, is considered less malicious than keyloggers, which record every keystroke. Regardless of the type, spyware is generally undesirable code that users want to remove from their systems.

The increasing awareness of the spyware problem has led to the development of several commercial anti-spyware products, such as AdAware and SpyBot. Recently, Microsoft released a beta version of Windows AntiSpyware. These tools use signatures to detect known spyware, but they cannot detect previously unseen malware instances, a limitation shared by many antivirus and intrusion detection systems.

Researchers have proposed behavior-based malware detection techniques to overcome these limitations. These techniques aim to characterize a program's behavior independently of its binary representation, allowing for the detection of entire classes of malware and resilience to obfuscation and polymorphism. For example, Christodorescu et al. characterized different variations of worms by identifying semantically equivalent operations, while others have focused on kernel-level rootkits.

Our approach is similar to Microsoftâ€™s Strider Gatekeeper, which monitors auto-start extensibility points (ASEPs) to detect surreptitious installations. However, our technique is more powerful as it identifies a general behavior pattern of acquiring and leaking private information. Additionally, our method uses a combination of static and dynamic analysis, providing a precise characterization of application behavior in response to browser events, reducing false positives.

While our technique is not completely general, it focuses on a prevalent type of spyware: those that exploit Internet Explorer's BHO and toolbar interfaces. This focus is justified by the high prevalence of such spyware, as confirmed by recent studies and US-CERT reports. Future work will address other forms of spyware and platforms.

## 3. Spyware, Browser Helper Objects, and Toolbars
Spyware authors have multiple options for monitoring user behavior on Windows hosts. Common mechanisms include Layered Service Providers, background processes, and browser plug-ins. Internet Explorer plug-ins, particularly BHOs and toolbars, are widely used in spyware to access user browsing habits and control browser behavior.

BHOs and toolbars are COM objects that implement specific interfaces. At startup, Internet Explorer loads all registered BHOs and toolbars, calling the `SetSite` method to pass a reference to the browser's `IUnknown` interface. This allows BHOs and toolbars to query and access other browser interfaces, such as `IWebBrowser2` and `IConnectionPoint`, enabling them to control browser behavior and access sensitive data. Due to this, BHOs and toolbars are often core components in spyware applications.

## 4. Spyware Characterization
A key characteristic of spyware is the collection of data about user behavior and the transmission of this information to a third party. For BHOs and toolbars, we need to identify the mechanisms they use to monitor user behavior and leak gathered data.

The most straightforward mechanism is to subscribe to browser events using the `DWebBrowserEvents2` interface. By analyzing these subscriptions and the subsequent actions, we can determine if a component is engaging in malicious behavior.