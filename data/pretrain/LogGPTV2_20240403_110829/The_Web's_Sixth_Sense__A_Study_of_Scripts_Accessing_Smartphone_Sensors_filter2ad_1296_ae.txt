fingerprint matches that of a Firefox for Android running on a real
smartphone to the best extent possible. We also observed several ad
platforms identify our browser as mobile and start serving mobile
ads. However, there may still be ways, for example, detecting the
lack of hand movements in the sensor data stream could potentially
help websites detect OpenWPM-Mobile as an automated desktop
browser and treat differently.
9 CONCLUSION
Our large-scale measurement of sensor API usage on the mobile
web reveals that device sensors are being used for purposes other
than what W3C standardization body had intended. We found that
a vast majority of third-party scripts are accessing sensor data for
measuring ad interactions, verifying ad impressions, and tracking
devices. Our analysis uncovered several scripts that are sending
raw sensor data to remote servers. While it is not possible to de-
termine the exact purpose of this sensor data exfiltration, many
of these scripts engage in tracking or web analytic services. We
also found that existing countermeasures such as Disconnect, Easy-
List and EasyPrivacy were not effective at blocking such tracking
scripts. Our evaluation of nine popular mobile browsers has shown
that browsers, including the privacy-oriented Firefox Focus and
Brave, commonly fail to implement the mitigation guidelines rec-
ommended by the W3C against the misuse of sensor data. Based
on our findings, we recommend browser vendors to rethink the
risks of exposing sensitive sensors without any form of access con-
trol mechanism in place. Also, website owners should be given
more options to limit the sensor misuse from untrusted third-party
scripts.
10 ACKNOWLEDGEMENTS
We would like to thank all the anonymous reviewers for their
feedback. We would also like to thank Arvind Narayanan, Steven
Englehardt and our shepherd Ben Stock for their valuable feedback.
This material is based in part upon work supported by the National
Science Foundation under Grant No. 1739966.
REFERENCES
[1] Gunes Acar, Christian Eubank, Steven Englehardt, Marc Juarez, Arvind
Narayanan, and Claudia Diaz. 2014. The Web never forgets: Persistent tracking
mechanisms in the wild. In Proceedings of the 21st ACM SIGSAC Conference on
Computer and Communications Security (CCS). 674–689.
[2] Gunes Acar, Marc Juarez, Nick Nikiforakis, Claudia Diaz, Seda Gürses, Frank
Piessens, and Bart Preneel. 2013. FPDetective: dusting the web for fingerprinters.
In Proceedings of the 20th ACM SIGSAC conference on Computer and Communica-
tions Security (CCS). 1129–1140.
[3] Alex Aiken. 2018. A system for detecting software similarity. https://theory.
stanford.edu/~aiken/moss/.
[4] Furkan Alaca and PC van Oorschot. 2016. Device fingerprinting for augmenting
web authentication: Classification and analysis of methods. In Proceedings of the
32nd Annual Conference on Computer Security Applications. 289–301.
[5] Alexa 2018. Alexa top sites service. https://www.alexa.com/topsites.
[6] Martin Azizyan, Ionut Constandache, and Romit Roy Choudhury. 2009. Surround-
Sense: Mobile phone localization via ambience fingerprinting. In Proceedings of
the 15th annual international conference on Mobile computing and networking.
261–272.
[7] T. Berners-Lee, R. Fielding, and L. Masinter. 2005. RFC 3986, Uniform Resource
Identifier (URI): Generic syntax. http://www.ietf.org/rfc/rfc3986.txt.
[8] Frédéric Besson, Nataliia Bielova, and Thomas Jensen. 2014. Browser randomisa-
tion against fingerprinting: A quantitative information flow approach. In Nordic
Conference on Secure IT Systems. 181–196.
[9] Hristo Bojinov, Yan Michalevsky, Gabi Nakibly, and Dan Boneh. 2014. Mobile
device identification via sensor fingerprinting. CoRR abs/1408.1416 (2014). http:
//arxiv.org/abs/1408.1416
[10] David J. Bradshaw. 2017. iFrame resizer. https://github.com/davidjbradshaw/
iframe-resizer.
[11] Brave Browser 2018. Fingerprinting protection mode. https://github.com/brave/
browser-laptop/wiki/Fingerprinting-Protection-Mode.
[12] Bugzilla. 2018. 1436874 - Restrict device motion and orientation events to secure
contexts. https://bugzilla.mozilla.org/show_bug.cgi?id=1436874.
[13] Elie Bursztein, Artem Malyshev, Tadek Pietraszek, and Kurt Thomas. 2016. Pi-
casso: Lightweight device class fingerprinting for web clients. In Proceedings
of the 6th Workshop on Security and Privacy in Smartphones and Mobile Devices.
93–102.
[14] Liang Cai and Hao Chen. 2012. On the practicality of motion based keystroke
inference attack. In International Conference on Trust and Trustworthy Computing.
Springer, 273–290.
[15] Yinzhi Cao, Song Li, and Erik Wijmans. 2017. (Cross-)Browser fingerprinting
via OS and hardware level features. In Proceeding of 24th Annual Network and
Distributed System Security Symposium (NDSS).
[16] Ian Clelland. 2017. Feature policy: Draft community group report. https://wicg.
github.io/feature-policy/.
[17] Anupam Das, Gunes Acar, and Nikita Borisov. 2018. A Crawl of the mobile
web measuring sensor accesses. University of Illinois at Urbana-Champaign.
https://doi.org/10.13012/B2IDB-9213932_V1
[18] Anupam Das, Nikita Borisov, and Matthew Caesar. 2014. Do you hear what I
hear?: Fingerprinting smart devices through embedded acoustic components. In
Proceedings of the 21st ACM SIGSAC Conference on Computer and Communications
Security (CCS). 441–452.
[19] Anupam Das, Nikita Borisov, and Matthew Caesar. 2016. Tracking mobile web
users through motion sensors: Attacks and defenses. In Proceeding of the 23rd
Annual Network and Distributed System Security Symposium (NDSS).
[20] Anupam Das, Nikita Borisov, and Edward Chou. 2018. Every move you make:
Exploring practical issues in smartphone motion sensor fingerprinting and coun-
termeasures. Proceedings on the 18th Privacy Enhancing Technologies (PoPETs) 1
(2018), 88–108.
[21] Apple developers. 2018. App store review guidelines. https://developer.apple.
com/app-store/review/guidelines/.
[22] DeviceAtlas 2018. Device browser. https://deviceatlas.com/device-data/devices.
[23] Sanorita Dey, Nirupam Roy, Wenyuan Xu, Romit Roy Choudhury, and Srihari
Nelakuditi. 2014. AccelPrint: Imperfections of accelerometers make smartphones
trackable. In Proceedings of the 21st Annual Network and Distributed System
Security Symposium (NDSS).
[24] Digioh 2018. We give marketers power. http://digioh.com/.
[25] Disconnect 2018. Disconnect defends the digital you. https://disconnect.me/.
[26] DoubleVerify 2018. Authentic impression. https://www.doubleverify.com/.
[27] EasyList authors 2018. EasyList. https://easylist.to/easylist/easylist.txt.
[28] EasyPrivacy authors 2018. EasyPrivacy. https://easylist.to/easylist/easyprivacy.
txt.
[29] Peter Eckersley. 2010. How unique is your web browser?. In Proceedings of the
10th International Conference on Privacy Enhancing Technologies (PETS). 1–18.
[30] Electronic Frontier Foundation 2018. Panopticlick. https://panopticlick.eff.org/.
[31] Steven Englehardt and Arvind Narayanan. 2016. Online tracking: A 1-million-site
measurement and analysis. In Proceedings of the 23rd ACM SIGSAC Conference on
Computer and Communications Security (CCS).
[32] European Commission 2018. The General Data Protection Regulation (GDPR).
https://ec.europa.eu/info/law/law-topic/data-protection/data-protection-eu_
en.
[33] F5 2018.
Silverline web application firewall.
https://f5.com/products/
deployment-methods/silverline/cloud-based-web-application-firewall-waf.
[34] ForeSee 2018. CX with certainty | ForeSee. https://www.foresee.com/.
[35] Alex Gibson. 2015. Detecting shake in mobile device.
https://github.com/
alexgibson/shake.js/.
[36] GitHub. 2018. Disallow sensor access on insecure contexts. https://github.com/
brave/browser-android-tabs/issues/549.
[37] GitHub. 2018. Disallow sensor access on insecure contexts. https://github.com/
mozilla-mobile/focus-android/issues/2092.
[38] GitHub. 2018. Firefox Focus is making sensor APIs available to cross-origin
iFrames. https://github.com/mozilla-mobile/focus-android/issues/2044.
[39] Jun Han, E. Owusu, L. T. Nguyen, A. Perrig, and J. Zhang. 2012. ACComplice:
Location inference using accelerometers on smartphones. In Proceedings of the 4th
International Conference on Communication Systems and Networks (COMSNETS).
1–9.
[40] J. Hua, Z. Shen, and S. Zhong. 2017. We can track you if you take the metro:
Tracking metro riders using accelerometers on smartphones. IEEE Transactions
on Information Forensics and Security 12, 2 (2017), 286–297.
[41] Thomas Hupperich, Davide Maiorca, Marc Kührer, Thorsten Holz, and Giorgio
Giacinto. 2015. On the robustness of mobile device fingerprinting: Can mobile
users escape modern web-tracking mechanisms?. In Proceedings of the 31st Annual
Computer Security Applications Conference (ACSAC). ACM, 191–200.
[42] jQuery Mobile 2018. Orientationchange event. https://api.jquerymobile.com/
orientationchange/.
[43] Jonathan Kingston. 2018. Bug 1359076 - Disable devicelight, deviceproximity
and userproximity events. https://bugzilla.mozilla.org/show_bug.cgi?format=
default&id=1359076.
[44] Tadayoshi Kohno, Andre Broido, and K. C. Claffy. 2005. Remote physical device
fingerprinting. IEEE Transaction on Dependable Secure Computing 2, 2 (2005),
93–108.
[45] Oleg Korsunsky. 2018. Polyfill for CSS position: sticky. https://github.com/
wilddeer/stickyfill.
[46] Andreas Kurtz, Hugo Gascon, Tobias Becker, Konrad Rieck, and Felix Freiling.
2017. Fingerprinting mobile devices using personalized configurations. Proceed-
ings on Privacy Enhancing Technologies (PoPETs) 2016, 1 (2017), 4–19.
[47] Pierre Laperdrix, Benoit Baudry, and Vikas Mishra. 2017. FPRandom: Randomiz-
ing core browser objects to break advanced device fingerprinting techniques. In
International Symposium on Engineering Secure Software and Systems. Springer,
97–114.
com/.
[48] Pierre Laperdrix, Walter Rudametkin, and Benoit Baudry. 2016. Beauty and the
beast: Diverting modern web browsers to build unique browser fingerprints. In
Proceedings of the 37th IEEE Symposium on Security and Privacy (S&P). 878–894.
[49] Jonathan R Mayer. 2009. “Any person... a pamphleteer”: Internet anonymity in
the age of Web 2.0. Undergraduate Senior Thesis, Princeton University (2009).
[50] Jonathan R Mayer and John C Mitchell. 2012. Third-party web tracking: Policy
and technology. In Proceedings of the 33rd IEEE Symposium on Security and Privacy
(S&P). 413–427.
[51] Maryam Mehrnezhad, Ehsan Toreini, Siamak F. Shahandashti, and Feng Hao.
2015. TouchSignatures: Identification of user touch actions based on mobile
sensors via JavaScript. In Proceedings of the 10th ACM Symposium on Information,
Computer and Communications Security (ASIACCS). 673–673.
[52] Georg Merzdovnik, Markus Huber, Damjan Buhov, Nick Nikiforakis, Sebastian
Neuner, Martin Schmiedecker, and Edgar Weippl. 2017. Block me if you can:
A large-scale study of tracker-blocking tools. In IEEE European Symposium on
Security and Privacy (EuroS&P). 319–333.
[53] Yan Michalevsky, Dan Boneh, and Gabi Nakibly. 2014. Gyrophone: Recognizing
speech from gyroscope signals. In Proceedings of the 23rd USENIX Conference on
Security Symposium. 1053–1067.
[54] Modernizr. 2018. Respond to your user’s browser features. https://modernizr.
[55] Sue B. Moon, Paul Skelly, and Don Towsley. 1999. Estimation and removal of clock
skew from network delay measurements. In Proceedings of the 18th Annual IEEE
International Conference on Computer Communications (INFOCOM). 227–234.
[56] Keaton Mowery and Hovav Shacham. 2012. Pixel perfect: Fingerprinting canvas
in HTML5. In Proceedings of Web 2.0 Security and Privacy Workshop (W2SP).
[57] Mozilla Foundation 2018. Public suffix list. https://publicsuffix.org/.
[58] Nick Nikiforakis, Luca Invernizzi, Alexandros Kapravelos, Steven Van Acker,
Wouter Joosen, Christopher Kruegel, Frank Piessens, and Giovanni Vigna. 2012.
You are what you include: Large-scale evaluation of remote JavaScript inclusions.
In Proceedings of the 19th ACM SIGSAC conference on Computer and Communica-
tions Security (CCS). 736–747.
[59] Nick Nikiforakis, Wouter Joosen, and Benjamin Livshits. 2015. PriVaricator: De-
ceiving fingerprinters with little white lies. In Proceedings of the 24th International
Conference on World Wide Web (WWW). 820–830.
[60] Nick Nikiforakis, Alexandros Kapravelos, Wouter Joosen, Christopher Kruegel,
Frank Piessens, and Giovanni Vigna. 2013. Cookieless monster: Exploring the
ecosystem of web-based device fingerprinting. In Proceedings of the 34th IEEE
Symposium on Security and Privacy (S&P). 541–555.
[61] Lukasz Olejnik. 2017.
light
W3C ambient
stealing-sensitive-browser-data-with-the-w3c-ambient-light-sensor-api/.
Stealing sensitive browser data with the
https://blog.lukaszolejnik.com/
[62] Lukasz Olejnik, Gunes Acar, Claude Castelluccia, and Claudia Diaz. 2015. The
leaking battery. In International Workshop on Data Privacy Management. 254–263.
[63] Emmanuel Owusu, Jun Han, Sauvik Das, Adrian Perrig, and Joy Zhang. 2012.
ACCessory: Password inference using accelerometers on smartphones. In Pro-
ceedings of the 12th Workshop on Mobile Computing Systems and Applications
(HotMobile). 9:1–9:6.
[64] PerimeterX 2018. Stop bot attacks: Bot detection and bot protection with unpar-
sensor API.
alleled accuracy. https://www.perimeterx.com/.
[65] Mike Perry, Erinn Clark, Steven Murdoch, and George Koppen. 2018. The design
and implementation of the Tor browser (DRAFT). https://www.torproject.org/
projects/torbrowser/design/.
[66] Davy Preuveneers and Wouter Joosen. 2015. Smartauth: Dynamic context finger-
printing for continuous user authentication. In Proceedings of the 30th Annual
ACM Symposium on Applied Computing. 2185–2191.
[67] Samsung Newsroom 2014.
rate, finger
10-sensors-of-galaxy-s5-heart-rate-finger-scanner-and-more.
and more.
scanner
10
Sensors of Galaxy S5: Heart
https://news.samsung.com/global/
[68] Florian Scholz et al. 2017. Devicemotion - web APIs | MDN. https://developer.
mozilla.org/en-US/docs/Web/Events/devicemotion.
[69] scikit-learn developers 2018. Python sklearn DBSCAN. http://scikit-learn.org/
stable/modules/generated/sklearn.cluster.DBSCAN.html.
[70] scikit-learn developers 2018.
Python sklearn RandomForestClassi-
http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.
fier.
RandomForestClassifier.html.
[71] Connor Shea et al. 2018. DeviceLightEvent - web APIs | MDN. https://developer.
mozilla.org/en-US/docs/Web/API/DeviceLightEvent.
[72] Connor Shea et al. 2018. DeviceProximityEvent - web APIs | MDN. https:
//developer.mozilla.org/en-US/docs/Web/API/DeviceProximityEvent.
[73] Muhammad Shoaib, Stephan Bosch, Ozlem Durmaz Incel, Hans Scholten, and
Paul J. M. Havinga. 2014. Fusion of smartphone motion sensors for physical
activity recognition. Sensors 14, 6 (2014), 10146–10176.
[74] Ronnie Simpson. 2016. Mobile and tablet internet usage exceeds desktop for
first time worldwide | StatCounter Global Stats. http://gs.statcounter.com/press/
mobile-and-tablet-internet-usage-exceeds-desktop-for-first-time-worldwide.
[75] Sizmek 2018. Impressions that inspire. https://www.sizmek.com/.
[76] Jan Spooren, Davy Preuveneers, and Wouter Joosen. 2015. Mobile device finger-
printing considered harmful for risk-based authentication. In Proceedings of the
8th European Workshop on System Security (EuroSec). ACM, 1–6.
[77] Emily Stark, Mike Hamburg, and Dan Boneh. 2017. Stanford JavaScript Crypto
Library. https://github.com/bitwiseshiftleft/sjcl/blob/master/sjcl.js.
[78] Oleksii Starov and Nick Nikiforakis. 2017. XHOUND: Quantifying the finger-
printability of browser extensions. In Proceeding of the 38th IEEE Symposium on
Security and Privacy (S&P). 941–956.
[79] Xing Su, Hanghang Tong, and Ping Ji. 2014. Activity recognition with smartphone
sensors. Tsinghua Science and Technology 19, 3 (2014), 235–249.
[80] Rich Tibbett, Tim Volodine, Steve Block, and Andrei Popescu. 2018. Device-
Orientation event specification. https://w3c.github.io/deviceorientation/
[81] Christof Ferreira Torres, Hugo Jonker, and Sjouke Mauw. 2015. FP-Block: Usable
web privacy by controlling browser fingerprinting. In European Symposium on
Research in Computer Security (ESORICS). Springer, 3–19.
[82] Tom Van Goethem and Wouter Joosen. 2017. One side-channel to bring them
all and in the darkness bind them: Associating isolated browsing sessions. In
Proceeding of the 11th USENIX Workshop on Offensive Technologies (WOOT).
[83] Tom Van Goethem, Wout Scheepers, Davy Preuveneers, and Wouter Joosen. 2016.
Accelerometer-based device fingerprinting for multi-factor mobile authentication.
In Proceeding of the International Symposium on Engineering Secure Software and
Systems. 106–121.
[84] Valentin Vasilyev. 2018. fingerprintjs2: Modern & flexible browser fingerprinting
library. https://github.com/Valve/fingerprintjs2.
[85] Antoine Vastel, Pierre Laperdrix, Walter Rudametkin, and Romain Rouvoy. 2018.
FP-STALKER: Tracking browser fingerprint evolutions. In Proceeding of the 39th
IEEE Symposium on Security and Privacy (S&P). 1–14.
[86] Matthew Wagerfield. 2017. Parallax.js. https://github.com/wagerfield/parallax.
[87] Rick Waldron, Mikhail Pozdnyakov, and Alexander Shalamov. 2017. Sensor use
cases: W3C Note. https://w3c.github.io/sensors/usecases.html.
[88] Zhi Xu, Kun Bai, and Sencun Zhu. 2012. TapLogger: Inferring user inputs on
smartphone touchscreens using on-board motion sensors. In Proceedings of the
5th ACM Conference on Security and Privacy in Wireless and Mobile Networks
(WISEC). 113–124.
[89] Zhe Zhou, Wenrui Diao, Xiangyu Liu, and Kehuan Zhang. 2014. Acoustic finger-
printing revisited: Generate stable device ID stealthily with inaudible sound. In
Proceedings of the 21st ACM SIGSAC Conference on Computer and Communications
Security (CCS). 429–440.
A CLUSTERING PSEUDO-CODE
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53