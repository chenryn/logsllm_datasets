inside a hidden
injected a
directory. On March 6,
full-ﬂedged graphical user
the
backdoor, giving them full control of the website as
shown in Figure 7. All of these ﬁles remained in the
website for over a month. On 13 April 2019, TARDIS
found that the attackers deleted the earlier injected
malware to hide their previous footprints. The timeline
provided by TARDIS reveals that multi-stage attack
activities persisted in this website during a period of 3
months and provides a compromise window (23 February
to 13 April 2019) outside of which the website can be
safely rolled back. Manual investigation revealed that the
CVE-2018-7600
input
sanitation on Form API (FAPI) AJAX requests, was
exploited by the attacker. Note that this vulnerability
was not patched until a month after this attack began.
[33] vulnerability,
insuﬃcient
(GUI)
for
Fig. 7: GUI backdoor injected in a Drupal website.
VII. Limitations
to
stages
norm is
collect website
through multiple
The accuracy of inferring the provenance of attacks is
limited by the granularity of the backups. The current
industry
backups
nightly [19]–[23]. We have shown that this is suﬃcient for
recovering the timeline of an attack. However,
if a
fast-paced attack goes
in
between two consecutive backups, TARDIS would only
have visibility into ﬁles at the time of the backups.
Essentially, TARDIS enables website owners to calibrate
between the granularity of taking backups (i.e., making
TARDIS more accurate) versus
requiring a deeper
manual inspection when an attack does occur.
As these multi-stage attacks evolve, TARDIS’s spatial
metric identiﬁcation rules might need to change over
expected, and TARDIS’s
time. This
modular nature makes adding new spatial metrics
straightforward. Further, TARDIS’s methodology of
temporal correlation of spatial metrics should stand the
test of time, as it was designed agnostic to the individual
metrics and is based on the invariants of the phases
which multi-stage attacks go through.
evolution is
VIII. Related Work
the
[36]
used
published which
of hosting providers
response
Large-Scale Study of Web Attacks. Several studies
have
been
high-interaction
honeypots
to understand web attacks on a large
scale [26], [34], [35]. Further, some techniques tried to
assess the impact of web application compromises by
studying
role
and
understanding the
landscape by studying
large-scale notiﬁcation campaigns
to
[37]. Similar
TARDIS, Canali
also
found attackers
dropping large volumes of ﬁles on the web server. While
these techniques focused on attacks targeting a generic
web application, this research studied the spread of
multi-stage attacks on CMS-based websites and, more
speciﬁcally, within production websites. Our study and
TARDIS were designed to investigate such multi-stage
attacks based on only nightly website backups.
et.al.
[26]
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:40:22 UTC from IEEE Xplore.  Restrictions apply. 
1168
level
these
attack
(nightly
log-based
detection,
ﬁne-grained
is
backups)
advanced multi-stage
already the
to model
Causality Modeling.
There have been signiﬁcant
advances in identifying the provenance of an attack by
monitoring the behavior of a system in order
to
reconstruct the chain of events that led to the attack [4],
[7], [12], [13], [17], [38], [39]. Most works which focused
on
e.g.,
Holmes [3] and Sleuth [16], are built on OS audit data
logs for real-time analytics.
and used system-call
However,
provenance
tracking techniques require signiﬁcant instrumentation
and are hardly deployed by CMS hosting companies.
TARDIS leverages what
industry
standard
long-lived
multi-stage attack progression via temporal correlation of
spatial metrics and outlier detection.
Web Application Security. To preemptively secure
websites against attack, recent research has focused on
analyzing particular classes of attacks,
such as ad
[44], cross-site
injection [40]–[42], survey scams [43],
scripting [45]–[48], PHP code injection [49],
[50], SQL
injection [48], [51]–[53], ﬁle inclusion attacks [54], [55],
etc. These research techniques focus on individual layers
of web applications. However, since CMSs contain code
across
and are marketed to
less-technical website operators, attack-vector-speciﬁc
solutions are not commonly deployed. TARDIS is
attack-vector agnostic and enables the investigation of a
compromised CMS post-attack.
layers
these
all
of
IX. Conclusion
the attack phases and enables
This paper presented a systematic study of the CMS
attack landscape across 306, 830 unique production
websites, using TARDIS. Targeting the problem of
investigating compromises in CMS-based websites using
only the readily available nightly backups, TARDIS
provides a novel provenance inference technique that
reconstructs
rapid
recovery from an attack. Using the temporal correlation
of spatial metrics representing each snapshot, TARDIS
recovers the compromise window and the progression of
attack phases. TARDIS uncovered 20,591 websites that
were victims of long-lived multi-stage attacks and was
shown to be highly accurate in revealing attacks in
CMS-based websites, regardless of the underlying CMS.
We are working with CodeGuard to informing the
website owners and remediate the identiﬁed attacks.
X. Acknowledgment
The authors would like to thank the anonymous
reviewers for their constructive comments and feedback.
We also thank Professor Manuel Egele for his guidance
while shepherding this paper, and our collaborators at
CodeGuard
and
suggestions throughout this research. This work was
supported, in part, by NSF under Award 1916550. Any
opinions, ﬁndings, and conclusions in this paper are
comments
insightful
their
for
those of the authors and do not necessarily reﬂect the
views of our sponsors or collaborators.
References
[1] W3Techs - Usage of content management systems for
websites, https://w3techs.com/technologies/overview/
content_management/all, [Accessed: 2019-01-16].
[2] Popular CMS by Market Share, https://websitesetup.
org/popular-cms/, [Accessed: 2019-06-30].
in
for
audit
logging
inference
[3] S. M. Milajerdi, R. Gjomemo, B. Eshete, R. Sekar, and
V. Venkatakrishnan, “HOLMES: Real-time apt detection
through correlation of suspicious information ﬂows,” in
Proc. 40th IEEE S&P, San Francisco, CA, May 2019.
[4] S. Ma, J. Zhai, F. Wang, K. H. Lee, X. Zhang, and
D. Xu, “MPI: Multiple perspective attack investigation
with semantic aware execution partitioning,” in Proc.
26th USENIX Sec., Vancouver, BC, Canada, Aug. 2017.
[5] Y. Kwon, F. Wang, W. Wang, K. H. Lee, W.-C. Lee,
S. Ma, X. Zhang, D. Xu, S. Jha, G. Ciocarlie,
A. Gehani, and V. Yegneswaran, “MCI: Modeling-based
causality
attack
investigation,” in Proc. 2018 NDSS, San Diego, CA,
Feb. 2018.
21st ACM International Conference
[6] Y. Kwon, D. Kim, W. N. Sumner, K. Kim,
B. Saltaformaggio, X. Zhang, and D. Xu, “LDX:
Causality inference by lightweight dual execution,” in
Proc.
on
Architectural Support for Programming Languages and
Operating Systems (ASPLOS), Atlanta, GA, Apr. 2016.
[7] K. H. Lee, X. Zhang, and D. Xu, “High accuracy attack
provenance via binary-based execution partition,” in
Proc. 20th NDSS, San Diego, CA, Feb. 2013.
[8] K. H. Lee, X. Zhang, and D. Xu, “LogGC: Garbage
collecting audit log,” in Proc. 20th ACM CCS, Berlin,
Germany, Oct. 2013.
[9] S. Ma, K. H. Lee, C. H. Kim, J. Rhee, X. Zhang, and
low cost and instrumentation-free
D. Xu, “Accurate,
security audit logging for windows,” in Proc. 31st
ACSAC, 2015.
[10] P. Vadrevu, J. Liu, B. Li, B. Rahbarinia, K. H. Lee, and
R. Perdisci, “Enabling reconstruction of attacks on users
via eﬃcient browsing snapshots,” in Proc. 2017 NDSS,
San Diego, CA, Feb. 2017.
[11] S. Ma, J. Zhai, Y. Kwon, K. H. Lee, X. Zhang,
G. Ciocarlie, A. Gehani, V. Yegneswaran, D. Xu, and
S. Jha, “Kernel-supported cost-eﬀective audit logging
for causality tracking,” in Proc. 2018 USENIX Annual
Technical Conference (ATC), Boston, MA, Jul. 2018.
[12] S. Ma, X. Zhang, and D. Xu, “ProTracer: Towards
practical provenance tracing by alternating between
logging and tainting,” in Proc. 2016 NDSS, San Diego,
CA, Feb. 2016.
[13] S. Sitaraman and S. Venkatesan, “Forensic analysis of
ﬁle system intrusions using improved backtracking,” in
Proc. 3rd IEEE International Workshop on Information
Assurance, IEEE, College Park, MD, USA, Mar. 2005.
[14] K. Pei, Z. Gu, B. Saltaformaggio, S. Ma, F. Wang,
Z. Zhang, L. Si, X. Zhang, and D. Xu, “HERCULE:
attack story reconstruction via community discovery on
correlated log graph,” in Proc. 32nd ACSAC, 2016.
[15] F. Wang, Y. Kwon, S. Ma, X. Zhang, and D. Xu,
“Lprov: Practical library-aware provenance tracing,” in
Proc. 34th ACSAC, 2018.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:40:22 UTC from IEEE Xplore.  Restrictions apply. 
1169
Sekar,
Stoller,
S. D.
[16] M. N. Hossain, S. M. Milajerdi, J. Wang, B. Eshete,
R. Gjomemo, R.
and
V. Venkatakrishnan, “Sleuth: Real-time attack scenario
reconstruction from cots audit data,” in Proc. 26th
USENIX Sec., Vancouver, BC, Canada, Aug. 2017.
[17] Y. Liu, M. Zhang, D. Li, K. Jee, Z. Li, Z. Wu, J. Rhee,
and P. Mittal, “Towards a timely causality analysis for
enterprise security,” in Proc. 2018 NDSS, San Diego, CA,
Feb. 2018.
[18] HostGator.com LLC, https : / / www . hostgator . com,
[Accessed: 2019-06-12].
[19] Dropmysite - Cloud Backups for Websites & Databases,
https://www.dropmysite.com/, [Accessed: 2018-10-31].
[20] CodeGuard, https://www.codeguard.com/, [Accessed:
2019-01-20].
[21] GoDaddy, https://www.godaddy.com/web- security/
website-backup, [Accessed: 2018-01-20].
[23]
[22] Sucuri, https://sucuri.net/website-backups/, [Accessed:
2018-10-31].
iPage, https://www.ipage.com/web-backup, [Accessed:
2018-10-31].
[24] W. U. Hassan, S. Guo, D. Li, Z. Chen, K. Jee, Z. Li, and
A. Bates, “Nodoze: Combatting threat alert fatigue with
automated provenance triage,” in Proc. 2019 NDSS, San
Diego, CA, Feb. 2018.
[25] New Research from Advanced Threat Analytics, https://w
ww.prnewswire.com/news-releases/new-research-from-
advanced- threat- analytics- finds- mssp- incident- respo
nders- overwhelmed- by- false- positive- security- alerts-
300596828.html, [Accessed: 2019-01-20].
[26] D. Canali and D. Balzarotti, “Behind the scenes of
online attacks: An analysis of exploitation behaviors on
the web,” in Proc. 20th NDSS, San Diego, CA, Feb.
2013.
zxcvbn: Low-Budget Password Strength Estimation, https:
//github.com/dropbox/zxcvbn, [Accessed: 2019-05-28].
[28] D. C. Howell, “Median absolute deviation,” Wiley
[27]
StatsRef: statistics reference online, 2014.
[29] A. Koufakou, E. G. Ortiz, M. Georgiopoulos,
G. C. Anagnostopoulos, and K. M. Reynolds, “A
scalable and eﬃcient outlier detection strategy for
categorical
IEEE International
Conference on Tools with Artiﬁcial Intelligence (ICTAI
2007), IEEE, vol. 2, 2007, pp. 210–217.
[30] What CMS Is This Site Using? https://whatcms.org/,
data,”
19th
in
[Accessed: 2019-06-26].
[31] CMS-Garden CMSScanner, https://github.com/CMS-
Garden/cmsscanner, [Accessed: 2019-06-12].
for
library
[32] Pandas: Flexible and powerful data analysis and
Python,
manipulation
https : / / github . com / pandas - dev / pandas, [Accessed:
2019-05-28].
[33] Drupal: CVE-2018-7600: Remote Code Execution - SA-
CORE-2018-002, https://www.rapid7.com/db/vulnerab
ilities/drupal-cve-2018-7600, [Accessed: 2019-06-26].
[34] O. Starov, J. Dahse, S. S. Ahmad, T. Holz, and
N. Nikiforakis, “No honor among thieves: A large-scale
analysis of malicious web shells,” in Proc. 25th WWW,
2016.
[35] O. Catakoglu, M. Balduzzi,
and D. Balzarotti,
“Automatic extraction of indicators of compromise for
web applications,” in Proc. 25th WWW, 2016.
[36] D. Canali, D. Balzarotti, and A. Francillon, “The role
of web hosting providers in detecting compromised
websites,” in Proc. 22nd WWW, Rio de Janeiro, Brazil,
May 2013.
scale:
deceptive
Assessing
[37] B. Stock, G. Pellegrino, C. Rossow, M. Johns, and M.
Backes, “Hey, you have a problem: On the feasibility of
large-scale web vulnerability notiﬁcation,” in Proc. 25th
USENIX Sec., Austin, TX, Aug. 2016.
[38] S. T. King and P. M. Chen, “Backtracking intrusions,”
in Proc. 19th ACM Symposium on Operating Systems
Principles (SOSP), Bolton Landing, NY, Oct. 2003.
[39] K.-K. Muniswamy-Reddy, U. Braun, D. A. Holland, P.
Macko, D. L. MacLean, D. W. Margo, M. I. Seltzer, and
R. Smogor, “Layering in provenance systems.,” in Proc.
2009 USENIX Annual Technical Conference (ATC), San
Diego, CA, Jun. 2009.
[40] S. Arshad, A. Kharraz, and W. Robertson, “Identifying
extension-based ad injection via ﬁne-grained web
content provenance,” in Proc. 19th RAID, Evry, France,
Sep. 2016.
[41] K. Thomas, E. Bursztein, C. Grier, G. Ho, N. Jagpal,
A. Kapravelos, D. McCoy, A. Nappa, V. Paxson,
P. Pearce, N. Provos, and M. Abu Rajab, “Ad injection
at
advertisement
modiﬁcations,” in Proc. 36th IEEE S&P, San Jose, CA,
May 2015.
[42] X. Xing, W. Meng, B. Lee, U. Weinsberg, A. Sheth,
R. Perdisci, and W. Lee, “Understanding malvertising
through ad-injecting browser extensions,” in Proc. 24th
WWW, 2015.
[43] A. Kharraz, W. Robertson, and E. Kirda, “Surveylance:
Automatically detecting online survey scams,” in Proc.
39th IEEE S&P, San Francisco, CA, May 2018.
J. W. Clark and D. McCoy, “There are no free ipads:
An analysis of survey scams as a business.,” in Proc. 6th
USENIX LEET, Washington, D.C., United States, Aug.
2013.
[45] W. Melicher, A. Das, M. Sharif, L. Bauer, and L. Jia,
“Riding out domsday: Toward detecting and preventing
dom cross-site scripting,” in Proc. 2018 NDSS, San Diego,
CA, Feb. 2018.
[46] B. Stock, S. Lekies, T. Mueller, P. Spiegel, and M. Johns,
“Precise client-side protection against dom-based cross-
site scripting.,” in Proc. 2014 NDSS, San Diego, CA, Feb.
2014.
[47] G. Wassermann and Z. Su, “Static detection of
in Proc. 30th
on Software Engineering
cross-site
International Conference
(ICSE), Leipzig, Germany, May 2008.
scripting vulnerabilities,”
[48] M. Backes, K. Rieck, M. Skoruppa, B. Stock, and
F. Yamaguchi, “Eﬃcient and ﬂexible discovery of php
application
European
Symposium on Security and Privacy (EuroS&P), IEEE,
Paris, France, Apr. 2017.
vulnerabilities,”
[49] D. R. Sahu and D. S. Tomar, “DNS pharming through
PHP injection: Attack scenario and investigation,” IJ
Computer Network and Information Security, vol. 4,
pp. 21–28, 2015.
[50] V. Yerram and G. V. R. Reddy, “A solution to php code
Proc.
[44]
in
injection attacks and web vulnerabilities,” 2014.
[51] Z. S. Alwan and M. F. Younis, “Detection and prevention
of sql injection attack: A survey,” International Journal
of Computer Science and Mobile Computing, vol. 6, no. 8,
pp. 5–17, 2017.
[52] N. Singh, M. Dayal, R. Raw, and S. Kumar, “Sql
injection: Types, methodology, attack queries and
prevention,” in Proc. 3rdComputing for Sustainable
Global Development (INDIACom), IEEE, New Delhi,
India, Mar. 2016.
[53] A. Pramod, A. Ghosh, A. Mohan, M. Shrivastava, and
R. Shettar, “Sqli detection system for a safer web
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:40:22 UTC from IEEE Xplore.  Restrictions apply. 
1170
application,” in Proc. 2015IEEE International Advance
Computing Conference, IEEE, Bangalore, India, Jun.
2015.
Paper. Breach Security Inc., May, 2009.
[54] H. F. G. Robledo, “Types of hosts on a remote ﬁle
inclusion (rﬁ) botnet,” in Proc. Electronics, Robotics
and Automotive Mechanics Conference, Jun. 2008.
[55] O. Katz, “Detecting remote ﬁle inclusion attacks,” White
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:40:22 UTC from IEEE Xplore.  Restrictions apply. 
1171