www.TopSage.com
TODS
v) in (request-query request)
Help
(:td v))))})
26.6查询参数
325
---
## Page 343
图26-6所示的页面里。
示的页面。
326
如果你在表单中填入“abc”和“def”两个值，那么点击Okay按钮应该会把你带到一个类似
将你的浏览器指向http://localhost:2001/simple-form，然后你应该可以看到一个类似图26-5所
(publish :path "/simple-form" :function 'simple-form)
(defun simple-form (request entity)
(with-http-response 
(with-http
第 26章
(let ((*html-output*
(html
（:html
(:head (:title "Simple Form"))
(:form :method "posT"
:body
Done
实践：用 AllegroServe 进行 Web 编程
Dona
okay  Reset
Password 
Foo
Elle Edt Yiew Go Boo
(:p(:input
(:table
body
(:tr {:td
(:tr (:td "Foo")
(:input ::type "reset"
(request entity)
(:td (:input :name "foo" :size 20)))
(request entity :content-type "text/html")
图26-5 http://ocalhost:2001/simple-form
:td
www.TopSage.com
图26-6提交一个简单表单的结果
{:input
:name
"Password")
(request-reply-stream request)))
okm
arks
"submit"
 :name "password"
:action
djoR
:value "Reset"))))))))))
:type
"/show-query-params"
:type "password"
:value
"Okay")
:size 20))))
---
## Page 344
cookie值。
浏览器发送的每个cookie对应的键值对。从这个alist中，可以使用ASSOc和cDR来提取单独的
的全局时间里被保存。一个值为零的：expire参数告诉客户端立即丢弃已有的cookie。?
(默认值），那么浏览器只把cookie保存到它被关闭时。其他可能的值是：never，这意味着cookie
其他可能影响发送到浏览器的cookie的参数包括:expires、:path、:domain和:secure。
中不同属性的关键字参数。其中两个你必须传递的是:name和:value参数，两者都应该是字符串。
调用函数set-cookie-header。该函数的第一个参数是请求对象，其余参数都是用来设定cookie
续请求一起发送，具体方法是，在with-http-response的主体中调用with-http-body之前
26.7
类型的转换工作变得更加容易。
析出整数的话）要么返回一个整数。在26.8节中，你将开发一些宏来使查询参数的提取和到多种
有：junk-allowed参数的PARSE-INTEGER来确保它要么返回NIL（如果不能从给定字符串中解
询参数的情况下将它绑定到空字符串""，从而处理NIL的情形。然后，你可以使用带
RANDoM的数字时需要同时考虑这两种情况。你可以在绑定limit-string时当没有"limit"查
版本如下所示：
名并将其值以字符串的形式返回，或者当没有参数时返回NIL。一个参数化的random-number
种情况下，你可以使用函数request-query-value，它接受一个请求对象和你想要查询的参数
可能想要修改random-number，令你传给RANDoM的限制值可以通过一个查询参数来提供。在这
① 关于其他参数的含义，可参见AllegroServe文档和RFC 2109，这些文档里描述了cookie机制。
在设置了一个cookie以后，可以使用函数get-cookie-values得到一个alist，其中含有由
当然，你只需要担心:expires，它控制浏览器应该保存cookie多久。如果:expires是NIL
在AllgroServe中你可以发送一个Set-Cookie头来告诉浏览器保存一个cookie并将其随着后
下面的函数可以显示出浏览器所发送的所有cookie的名字和值：
由于request-query-value可能返回NIL或一个空字符串，在把参数解析成一个用来传给
(defun random-number (request entity)
尽管如此，多数时候你不需要在所有查询参数上迭代，你只需要提取单独的参数。例如，你
cookie
(with-http-body (request entity)
(let* ((*html-output*
(html
(:html
(:head (:title "Random"))
:body
(((0o0t (1 pamo1e-yun(: 6ut1s-1T1t 1a6a2u1-as1ed) 1o) 111)
((((((((((atwt wopuex) auid:) ：:iaqmu wopue d:)
limit-string
O】
(request-reply-stream request))
www.TopSage.com
request)
26.7cookie
327
---
## Page 345
value”的cookie。如果你点击链接Look at cookie jar，那么你将被带到/show-cookies页面，在
页面。同时，服务器将发送一个Set-Cookie头部，其中带有一个名为“MyCookie”值为“Acookie
示，因为你还没有设置任何cookie。
328
如果你输入URLhttp://localhost:2001/set-cookie，那么你的浏览器应该会显示如图26-8所示的
(defunset-cookie(request entity)
为了设置cookie，你需要另外一个函数，例如：
第一次加载页面http://localhost:2001/show-cookies时，它应该会说“Nocookies”，如图26-7所
(publish :path"/show-cookies":function'show-cookies)
(defunshow-cookies (request entity)
(set-cookie-header request
(with-http-body
(with-html-output ((request-reply-stream request))
第26章
(with-html-output((request-reply-stream request))
(html
(html
(:standard-page
(:standard-page
(if（null
(:title
(:p（:a:href"/show-cookies""Look atcookie jar."))))))))
:title
:p
Nocookies.
ElleEdntYlewGoBookmarks
Done
(html
实践：用AllegroServe进行Web编程
"Cookie
(:table
图26-7
"SetCookie")
do（html（:tr（:tdkey）（:tdvalue）))))))))))))
(request
(get-cookie-values request))
set
没有cookies的http://localhost:2001/show-cookies
www.TopSage.com
entity)
:name
Iools
"MyCookie":value "A cookie value"）
Help
---
## Page 346
地用来定义那些处理特定URL请求的函数。
后，你还需要记得publish这些函数。
request-query-value调用以及更多的代码来将这些字符串转化成任何你实际需要的类型。最
的话）with-html-output的调用。然后，在需要获取查询参数的函数里，还会有大量的
都会包含对with-http-response、with-http-body以及（如果你打算使用FOO来生成HTML
字符串和提交数据中的查询参数，设置和获取cookie值的能力,以及生成发给浏览器响应的能力)，
26.8小型应用框架
每个请求中发送该cookie，直到你关闭了浏览器。
那里你将看到新的cookie，如图26-9所示。由于你并未指定一个:expires参数，浏览器将继续在
但这需要写很多令人厌烦的重复性代码。
为了减少样板代码的数量，可以在AllegroServer之上编写一个小型的框架，使其可以更容易
举个例子，你编写的每一个HTML生成函数都需要带有参数request和entity，并且它们
尽管AllegroServe为你提供了用来编写服务端Web代码的几乎所有基本功能（访问URL的查询
C sab FeoktesMozalb Farefo tstos
Dane
MyCookie A cookie value
?
ouog
Look at cookie jar.
Cookie set.
EllEdn Vlew GoBookmarksIToolsHelp
图26-9设置cookie之后的http://localhost:2001/show-cookies
图26-8. http://localhost:2001/set-cookie
www.TopSage.com
Help
26.8小型应用框架
329
---
## Page 347
26.9
面的5行：
的参数将使用由参数名、函数名所在的包以及函数名构成的cookie，这对该函数而言将是唯一的。
共享一些值，且不必担心被其他包里的函数参数所破坏。最后，一个带有stickness值为：local
那么cookie的名字将根据参数的名字和函数名所在的包构造出来，这样来自同一个包的函数可以
名方式。这样，使用同名的全局粘滞参数的不同函数将共享其值。如果stickness是:package，
它将在该页面的后续请求中保持该值，即便没有查询参数被提供。
发送，其中保存了同名cookie的值。这样，在显式地通过一个查询参数的值来指定粘滞参数以后，
应当在没有查询参数的情况下从一个适当命名的cookie中获取,并且Set-Cookie头部应当在响应中
型。default-value必须是该给定类型的一个值。最后，如果有stickness，它表示参数的值
其中的type必须是一个define-url-function可以识别的名字。我将很快讨论如何定义新的类
query-parameter的完整语法如下所示：
用列表来指定，还可以指定自动的类型转换、默认值以及是否在cookie中查找并保存该值。
的情形下，一个查询参数的值是同名的查询参数或POST数据字段中的字符串。如果查询参数使
单的页面来说，它只含有S-表达式形式的HTML。
其中body是产生页面HTML的代码，它将被包装在一个对FOO的html宏的调用中，因此对于简
中的变量上。这样，define-url-function定义的基本形式如下所示：
码。它也负责生成代码来从查询参数和cookie中解出值，并将这些值绑定到声明在函数参数列表
布的函数。这个宏展开成一个含有适当样板代码的DEFUN，以及在同名的URL下发布该函数的代
举个例子,你可以使用define-url-function来将之前random-page的17行定义替换成下
330
在宏的主体中，查询参数变量将被绑定到同名查询参数或来自一个cookie的值上。在最简单
所使用的cookie名取决于stickness的值：使用值:global，cookie将采用与参数相同的命
 name l (name type [default-value] [stickiness])
(define-url-function name (request query-parameter*)
 基本的思路是先定义一个宏define-url-function，再用它来定义可自动通过publish发
我将会自顶向下地解释define-url-function的实现。该宏本身如下所示:
如果要限制参数为粘滞的，你可以将limit的声明改成（limitinteger 1000:local）。
(:html
body)
(let ((params (mapcar #'normalize-param params)))