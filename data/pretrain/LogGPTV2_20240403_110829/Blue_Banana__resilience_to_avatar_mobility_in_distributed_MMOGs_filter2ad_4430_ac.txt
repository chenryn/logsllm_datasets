new maps from the previous 
ensures 
The model of movements 
re­
grouped in hotspots 
during time. 
To generate 
movements, 
states: 
the avatar is exploring 
the avatar is moving to a new location 
at each step, each avatar is in 
(H)alted, 
the avatar does not 
one of the following 
the 
move at this step; (E)xploring, 
map; (T)raveling, 
on 
the map. Each state has its own maximal speed value Smax. 
Once Smax is reached, 
we 
consider 
during the movement (states 
acceleration 
acceleration 
value is a parameter 
an avatar moves from a position 
speed increases. 
it suddenly 
of the model generator. 
to another, 
E and T). The 
As 
that an avatar has a constant 
stops and its state machine enters the H state. 
and takes the follow-
When an avatar reaches 
the acceleration 
The trace generator 
drops. Otherwise, 
is configurable 
at each step, its 
its final position, 
application-defined 
978-1-4244-7501-8/lO/$26.00 
©2010 IEEE 
175 
DSN 20lO: Legtchenko 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:00:02 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
4) the proportion 
1) the number of avatars; 
ing parameters: 
the map; 3) the number of hotspots 
of avatars 
hotspot; 
E and T; 6) the acceleration; 
maximal speeds for states 
the probabilities 
ferent states. 
and the radius of each 
5) the 
inside hotspots; 
7) 
between the dif­
to transitions 
associated 
2) the size of 
changes its direction 
and therefore 
has a chaotic 
movement. 
State T: If the avatar enters in state T (HtoT or EtoT), 
on the map by using  the 
placement 
a new position 
function 
the avatar picks 
initial 
roughly 
sition. 
ment to its new position. 
the density 
the same. It also begins its movement to its 
TtoT, it continues 
If it takes the transition 
to ensure that 
its move­
remains 
new po­
Generation of the initial map. During the first phase, 
randomly 
Otherwise, 
accordingly 
be placed in a hotspot 
Then, for each avatar, the generator 
to the proportion 
chooses the positions 
of the 
decides 
if it 
If this is not the case, the avatar 
placed on the map using a uniform probabil­
the trace generator 
hotspots. 
should be placed in a hotspot 
of avatars 
inside hotspots. 
is randomly 
ity law (it can therefore 
desert). 
the hotspots 
the 
coordinates 
angle is chosen using a uniform law and the distance 
to the 
hotspot 
sures a very high density 
parable 
Initially, 
center with a Zipf's law [34]. The Zipf's law en­
com­
the polar 
using a uniform law and computes 
of the avatar from the center of the hotspot: 
to the ones observed 
all avatars 
in the center of the hotspot, 
in both NVEs and real life. 
are in the state H. 
the generator 
chooses one of 
randomly 
or in the 
Evaluation of generated traces. Due to lack of space, 
traces 
in [18]. It 
by La and 
is presented 
collected 
of the trace generator 
to real traces 
generated 
[17] from Second Life. These real traces have 
the evaluation 
compares 
Michiardi 
been collected 
two Second Life islands 
"Dance" and "Isle Of View" which were chosen to be rep­
resentative 
uation uses metrics 
the map nor of the avatars' 
of the Second Life players' 
that do not depend neither 
by crawling 
behavior. 
on the size of 
number. 
The eval­
called 
The results 
show that the traces generated 
from this 
model are similar 
to the real ones. 
5. Evaluation 
HtaH: pl 
evaluation 
a detailed 
This section 
presents 
nana. The evaluation 
Blue Banana to measure the performance 
tion mechanism. 
mented on top of the PeerSim discrete 
Both Solipsis 
Solipsis 
compares 
and Blue Banana are imple­
event simulator 
with and without 
of the anticipa­
of Blue Ba­
[14]. 
5.1. Description 
of the simulations 
The PeerSim simulator 
is a widespread platform 
for test­
Figure 2. State machine and transition 
probabilities. 
[1, 10, 13]. It has been designed 
ing distributed 
for scalability 
simulation 
event driven one. The simulation 
driven engine which performs 
applications 
and is simple to use. It is composed of two 
(cycle-based) 
one and an 
is realized 
more accurate 
a simplified 
engines, 
with the event 
simulations. 
Generation of movements. During the second phase, 
At the beginning 
moves the avatars 
step by step. The fig­
the trace generator 
ure 2 presents 
the associated 
the generator 
to the state transition 
the automaton 
state transition 
used for state transition 
At each step, 
probabilities. 
the state of all the avatars 
thanks 
reevaluates 
with 
probabilities: 
State H: If an avatar enters or stays in the state H (tran­
TtoH, EtoH and HtoH), the avatar does not move 
sitions 
at this step. 
trace (described 
The simulator, 
overlay 
Solipsis 
bility 
trace. 
vant because 
NVEs. 
of avatars 
Evaluating 
of the simulation, 
4) is injected 
in Section 
the initial 
map of the 
in the simulator. 
based on this map, initializes 
and then waits until every node respects 
rules (see Section 
mo­
3.1). After the convergence, 
the Solipsis 
the two 
is simulated 
Blue Banana with the real traces is irrele­
by injecting 
the rest of the 
the benefits 
are not significant 
with small-scale 
HtoE, 
on the map. 
State E: If the avatar takes one of the transitions 
The parameters 
of the simulations 
are: 1) 1000 avatars, 
the same during 
remains globally 
if the avatar is in a hotspot 
TtoE or EtoE2, the avatar picks a new position 
To ensure that the density 
the trace, 
sen inside the same hotspot 
its position 
in the state E and takes the transition 
movement to its new position. 
sitions 
on the map. If the avatar is 
its 
the two tran­
We differentiate 
is chosen randomly 
its new position 
is cho­
EtoEI and EtoE2 to ensure that an avatar regularly 
equivalent 
to 9 Second Life maps, 3) 3 high 
9549 avatars 
per 
per sq. mile), which is, 
4) Hotspot density: 
(24720 avatars 
2) A surface 
density hotspots, 
square kilometer 
for example, 
The constant 
m.s-2, 6) Nodes have an ADSL connection 
download 
tency between nodes is randomly 
just below the density 
acceleration 
of avatars 
7) The network la­
set between 80 and 120 
of New York City, 5) 
during movement is 5 
and IMbit upload bandwidth, 
with the Zipf's law, otherwise, 
EtoE 1 it continues 
with a  IOMbit 
978-1-4244-7501-8/10/$26.00 
©2010 IEEE 
176 
DSN 2010: Legtchenko 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:00:02 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
•  Exchanged 
messages 
count. This metric measures 
the 
only 
The measures 
because Blue Banana mes­
messages 
are small: they 
impact of Blue Banana on the network. 
count the number of messages 
sages and Solipsis 
only contain 
nodes (a Solipsis 
avatar and the IP address 
the coordinates 
maintainance 
identifier, 
of the node). 
of the prefetched/maintained 
geographic 
coordinates 
of its 
The evaluation 
of the second metric only takes in ac­
of that subset of avatars 
This specificity 
in state t of the Blue Banana 
is due to the fact that Blue 
only when an avatar is 
count the subset of avatars 
state machine. 
Banana sends prefetching 
requests 
in this state. Yet, the proportion 
is extremely 
multaneously 
avatars. 
their playing 
If they were all considered 
would have been skewed, and the benefits of Blue Banana 
would have been difficult 
that are not moving do not often change 
area, thus knowing their elders for a long time. 
the mean values 
small: at maximal mobility 
only about 110 avatars 
in the state t for 1000 
for that metric, 
to evaluate. 
The avatars 
rate, there are si­
5.3. Result analysis 
Figure 3 presents 
the evaluation 
lines) compared with Solipsis 
for the three metrics 
for 
results 
The most interesting 
Blue Banana (solid 
lines). 
ity rate of 55%0 shows that Blue Banana (i) decreases 
number of transient failures 
time of forthcoming 
erage knowledge 
(iii) 
a network overhead 
results 
(dashed 
for a realistic 
mobil­
the 
by 20%, (ii) increases 
the av­
elders by 270% and 
in the rest of this section. 
are analyzed 
of only 2%. This positive 
generates 
in detail 
rate observed 
in real traces 
decreases 
by 20%. For low mobility 
approximatively 
the number 
rates, 
Blue 
half of the rule­
the efficiency 
rate increases, 
of 
This is due to the fact that when 
Violation of Solipsis rules. The first metric evalua­
in Figure 3.a shows that the Blue Banana 
to adapt 
the number of viola­
With a mobility 
rate 
the number of tran­
reducing 
rules. 
on time, significantly 
helps the Solipsis 
fundamental 
technique 
overlay 
failures 
For the mobility 
the Blue Banana algorithm 
tion presented 
prefetching 
itself 
tions of the Solipsis 
lower than 80%0, Blue Banana decreases 
sient failures. 
(55%0), 
of transient 
Banana helps avoiding 
As the mobility 
violations. 
Blue Banana decreases. 
the mobility 
nodes are more likely 
less when the avatar reaches 
very dynamic NVEs (mobility 
Banana stops helping 
neighbors 
the regular 
Solipsis 
kind of dynamicity 
in real Second Life traces (mobility 
set of Solipsis 
to find new interesting 
rate increases, 
the overlay. 
the avatars 
to move fast and thus to become use­
For 
than 80%0), Blue 
their supposed 
rate greater 
position. 
is far above the mobility 
neighbors. 
However, 
rates observed 
this 
rate equals 55%0). To 
are also moving and when they are injected 
neighbor 
in 
they are useless, 
forcing 
Most of the prefetched 
of the prefetched 
but MMOG participants 
between 
Notice that with the con­
the maximum speed of avatars 
can reach the speed of a helicopter 
(100 m.s). This 
need 
3. More­
with a fast mean of transportation
is 5 m.s-2, so the avatars 
do 
reach the maximal speed. In fact this speed is 
the worst case: when an avatar moves from 
ms with an uniform distribution. 
stant acceleration, 
hotspots 
speed may seem exaggerated, 
to be provided 
over, the constant 
not instantly 
only reached in 
a hotspot 
corner. 
ure 3.a shows that 99% of overall movements 
to 4Om, which means that the speed of 99% of the 
inferior 
does not exceed 20 m.s. 
avatars 
in a corner of the map to a hotspot 
The actual speed of most avatars 
acceleration 
is much lower: Fig­
have a length 
in the opposite 
5.2. Evaluation  metrics 
To highlight 
the qualities 
and the drawbacks 
of Blue Ba­
these 
overlay 
changing 
of avatars 
and rapidly 
that have a straight 
i.e, that are in the state (T)raveling 
their continuously 
state machine (see Section 
of 
4). Indeed, 
depends on the mobility rate of the 
and high 
are the ones that need to quickly download data 
play­
nana, each experiment 
NVE: the proportion 
speed movement, 
the mobility 
avatars 
to maintain 
ing areas. The higher the NVE mobility 
the underlying 
mobility 
ures. The mobility 
Life traces (see Section 
imatively 
avatars 
sand at each moment of the simulation). 
the mobility 
uation. To achieve 
transitions 
55%0 (which means that the average number of 
in the state T is around 55 per thou­
we vary 
Therefore, 
rate between 5%0 and 110%0 during the eval­
of the 
has to adapt, which means that high 
rates are likely to cause a lot of transient 
fail­
model, tweaked to be close to Second 
rate of approx­
that, we vary the probabilities 
that lead to the T state of the trace generator. 
simultaneously 
4), has a mobility 
rate is, the faster 
The following 
metrics 
are used to evaluate 
mobility 
re­
silience 
of Blue Banana: 
•  Violation 
of Solipsis 
of the global connectivity 
leads to transient 
Section 
failures 
3.1). 
fundamental  rules. 
The failure 
rule or the local awareness 
rule 
(see the description 
of Solipsis 
in 
avatars 
for how long time, in average, 
of nodes ahead of the movement. This 
(in state t of the 
for fast-moving 
time 
the average knowledge 
•  Knowledge 
metric measures, 
Blue Banana state machine), 
of elders: 
other node ahead of its movement. 
known ahead of the movement is also measured. 
measures 
con­
stantly 
ing area of a moving avatar. 
an indication 
retrieve 
of the quantity 
about its future playing 
about the play­
therefore 
give 
an avatar can 
The number of nodes 
These 
are important 
needs to download 
area before reaching 
new information 
of information 
These measures 
a node knows an­
because the NVE application 
it. 
3For example, Second Life players are able to fly. 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
177 
DSN 2010: Legtchenko 
et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:00:02 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEE/IFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
3000 
2800 
2600 
2400 
2200 
2000 
1800 
1600 
1400 
1200 
1000 
" -
500 
450 
400 
350 
-;; 
.§. 
ID 
. " 
ID '" " 
2! • 0 c '" 
300 
250 
200 
20  40  60  80  100 
120 
150 
Mobility rate (per thousand) 
(a) 
230 
220 
210 
200 
00 
ID  190 
'" '" 180 
00 
00 
ID :>: 
170 
160 
150 
140 
130 
- ... ... - -- -- - - - - -
20  40  60  80  100 120 
Mobility rate (per thousand) 
20  40  60  80  100  120 
Mobility rate (per thousand) 
(b) 
(c) 
Figure 3. Dashed lines: Solipsis, 
better), 
per second (lower is better). 
(b) Average knowledge time of nodes ahead of movement (higher is better), 
Solid lines:  Blue 
Banana. (a) Average number of overlay transient 
per second (lower is 
(c) Average number of messages sent per node 
failures 
is low thanks to the fact 
of Blue Banana is sufficiently 
In most of the cases, the prefetching 
requests 
pro­
about nodes that will be requested 
in the 
messages 
(see Section 
This overhead 
as these nodes are actually 
metric description). 
that the prediction technique 
accurate. 
vide information 
near future: 
simply takes them in the pre fetched 
additional 
comes then from the wrongly prefetched 
reused by the overlay. 
for rapidly 
which also 
that beyond a mobility 
lay generates 
bility 
increases. 
due to the relaxed 
moving avatars 
lowers the overhead. 
rate grows, the proportion 
more messages 
Therefore, 
In addition 
is doubled (see also Section 
3.2), 
This optimization 
rate of 80%0, the basic Solipsis 