另存为turtle.ovpn和redteam.ovpn
设置LAN Turtle和初始配置，如图6.5所示。
图6.5
（1）插入USB和以太网。
（2）使用Nmap扫描本地网络的22端口。
nmap x.x.x.x/24 -p 22 -T 5 --open。
（3）SSH与root @ [ip]密码为sh3llz。
（4）更新LAN Turtle。
（5）更改MAC地址非常重要。LAN Turtle使用相同的制造商MAC地址，因此需要修改MAC地址使其看起来像一个随机设备。
更改您的MAC地址。
（6）安装OpenVPN。
转到Modules→Select→Configure→Directory—Yes。
安装OpenVPN。
（7）设置OpenVPN配置文件。
返回Modules→openvpn→Configure→在turtle.opvn中粘贴所有内容并保存。
（8）确保LAN Turtle OpenVPN服务在启动时加载，这样我们只需删除它执行以下操作。
转到Modules→openvpn→Enable。
（9）最后，我们需要在LAN Turtle上修改防火墙规则。
退出Turtle菜单，编辑防火墙规则。 
nano/ etc / config / firewall
配置zone'vpn'。 
确保将option forward设置为ACCEPT
添加配置转发规则
（10）配置转发。
选项src wan。
选项dest lan。
（11）配置转发。
选项src   vpn。
选项dest wan。
（12）配置转发。
选项src   wan。
选项dest vpn。
（13）重新登录Turtle菜单→Modules→openvpn→start。
（14）在Turtle上启动OpenVPN客户端。确保它正常工作，返回到OpenVPN AS服务器并检查连接。
我们现在配置了LAN Turtle，这样LAN Turtle无论何时连接到网络，都将回连到VPN服务器，我们可以通过SSH工具登录到LAN Turtle。下面看一个例子。
从Kali攻击者主机访问VPN服务器。
openvpn --config ./redteam.ovpn。
我们需要获取VPN服务器所在网络的IP地址，以便通过红队VPN路由所有流量。 
以SSH方式登录LAN Turtle
退出Turtle菜单，获取被攻击者网络的内部接口（ifconfig命令）的IP地址。根据IP地址和子网掩码，找到IP地址范围。在我们的示例中，Turtle所在的网络是10.100.100.0/24
最后，启用转发，如图6.6所示。 
返回OpenVPN AS并编辑用户lanturtle参数
User Permissions→lanturtle→show
编辑VPN Gateway为“Yes”，添加内部地址范围（10.100.100.0/24）
保存并更新
以SSH方式登录到LAN Turtle上，使用命令reboot重新启动。
图6.6
现在，我们通过攻击者设备VPN，经过VPN LAN Turtle，将所有流量路由到被攻击者公司的网络。在图6.7中，我们登录到VPN服务器，扫描LAN Turtle的内部网络10.100.100.0/24。我们可以看到已成功配置从VPN网关、LAN Turtle到公司网络的路由。从攻击者Kali主机，我们可以开展全部的漏洞扫描、网络搜索和Masscan等攻击操作。
图6.7
就是这样！您现在拥有一个快速放置设备，可以让您与被攻击者网络保持完全连接。您需要采取一些措施确保成功概率更高。
设置一个每天重置设备的定时任务。隧道可能会中断，每次LAN Turtle重新启动时，都会重新启动新连接。
一些公司阻止某些端口外联。在这种情况下，我们使用443端口，在绝大多数环境中都允许外联。对于有些使用Web代理的公司，可能会阻止直接通过443端口外联的流量。您可能需要重新配置LAN Turtle，启动时自动尝试多个不同的端口或协议（TCP / UDP）。
如果要放置两个或更多设备，那么需确保VPN服务器和MAC地址不同。曾经有过这样的情况，每次我们的设备在任务中被发现都是由于IT管理员偶然地移动或者更换计算机引起的。
6.3 Packet Squirrel
Hak5的另一个与LAN Turtle具有相似功能的工具是Packet Squirrel，如图6.8所示。 Packet Squirrel使用USB micro供电，但Packet Squirrel不是单端USB以太网适配器，而是两端都是以太网电缆。这是捕获流量或创建VPN连接的另一种方法。
图6.8
与LAN Turtle配置类似，Packet Squirrel配置如下。
设置/root/payloads/switch3/payload.sh。 
FOR_CLIENTS = 1
设置/etc/config/firewall。 
与LAN Turtle防火墙规则修改一致
上传LANTurtle.ovpn文件到/root/payloads/switch3/config.ovpn目录。
您现在有另一台设备，一旦设备连接到网络，将有一个反向VPN连接回公司。
此外，您的确应该拥有一个Packet Squirrel设备，因为针对Packet Squirrel已经有大量好的研究成果。您使用SWORD可以轻松地将Packet Squirrel转换为一个OpenWRT的渗透测试放置设备。
6.4 Bash Bunny
在本书之前的版本中，我们讨论了Rubber Ducky以及介绍它如何模拟HID设备（如键盘）来存储命令。作为红队，Rubber Ducky是一个很好的工具，因为它可以用于社会工程攻击实践，加速PowerShell命令的传递，可以突破没有键盘但有USB接口的自助服务终端系统。
Bash Bunny是Rubber Ducky的高级版本。它不仅可以执行HID类型的攻击，而且还可以做更多的事情。Bash Bunny有两个独立的空间来存储两个攻击（以及一个额外的管理设置）。这些静荷可以用来窃取凭证、网络钓鱼、Ducky攻击、运行PowerShell命令、执行扫描和侦察，以及执行Metasploit autopwn等。
在本书之前的版本中，我们介绍了使用KonBoot绕过您不知道密码的主机。KonBoot适用于没有加密主机，主机从USB设备启动，覆盖本地管理员密码。虽然主机需要完全重启，但这会使您登录这台没有凭证的主机。您可能还没有用过KonBoot，我们在模拟攻击行动中一直使用它，并取得了巨大成功。
您不想使用KonBoot可能有两个原因：这种攻击方式不适用于加密计算机；您可能不想重新启动被攻击者的主机。如何从锁定的主机获取信息，来访问网络上的其他主机或获得散列/密码？这就是Bash Bunny发挥作用的地方。
我们将使用Bash Bunny运行两种不同的攻击静荷。如果我们有物理访问权限，那么这两个静荷将从锁定（或解锁）系统获取信息。下面我们将演示BunnyTap和QuickCreds的使用。
6.4.1 突破进入CSK公司
经过数小时，您终于进入了CSK公司，之后您有几小时的时间，可以用于模拟黑客攻击。您接触第一台主机，插入KonBoot并重新启动系统，但是发现这些系统已经加密。然后，转到下一台处于锁定屏幕保护状态的主机。您插入Bash Bunny两次，分别运行BunnyTap和QuickCreds程序。几分钟后，QuickCreds中的Responder程序搜集到NetNTLMv2散列值。我们使用hashcat工具破解散列值，几分钟内获得用户的密码！在我们无法获取或破解散列值的机器上，BunnyTap运行PosionTap，捕获热门网站的Cookie，并配置为内部应用程序。我们导入这些Cookie，将便携式计算机连接到他们的网络，替换敏感网站的应用程序Cookie，无须知道网站密码，即可获取这些网站的访问权限。
在Kali上设置Bash Bunny。
下载最新的固件。
将Bash Bunny设置在Switch 3上（Arminy Mode）——布防模式（最靠近USB端口）。
将固件放在USB加载的根目录，拔下插头，重新插入，等待约10min，直到它闪烁蓝光。
完成所有操作后，返回Bash Bunny，编辑以下文件。
payloads> switch1> payload.txt
\# System default payload
LED B SLOW
ATTACKMODE ECM_ETHERNET STORAGE
拔下您的设备。
在Kali设备上设置互联网共享。 
wget bashbunny.com/bb.sh
chmod + x bb.sh
./bb.sh
引导模式（选择所有默认值）
将Bash Bunny设置在Switch 1上（离USB最远）。完成后，需确保Bash Bunny已连接，在那里您应该看到Cloud←→Laptop←→Bunny镜像。
在您的Kali机器上，使用密码hak5bunny通过SSH连接到Bash Bunny，如图6.9所示。
图6.9
下面介绍如何登录Bash Bunny。
在您的Kali机器上，使用密码hak5bunny通过SSH连接到Bash Bunny。
ssh root@172.16.64.1。
在Bash Bunny中更新并安装一些工具。 
apt-get update
apt-get upgrade
export GIT_SSL_NO_VERIFY=1
git clone https://github.com/lgandx/Responder.git/tools/responder
git clone https://github.com/CoreSecurity/impacket.git/tools/impacket