### 3 Preliminary Clickstream Analysis

We begin our data analysis by examining the high-level characteristics of Sybil and normal users on Renren. Our objectives are to provide an overview of the dataset and to demonstrate the potential of clickstreams as a rich data source for detecting malicious behavior. To achieve these goals, we analyze the data in four ways: 
1. We examine session-level characteristics.
2. We analyze the activities users engage in during each session.
3. We construct a state-based Markov Chain model to characterize the transitions between clicks during sessions.
4. We use a Support Vector Machine (SVM) approach to identify the key features that distinguish Sybil and normal user clickstreams.

#### 3.1 Session-level Characteristics

In this section, we aim to determine the session-level differences between normal and Sybil accounts in our dataset. 

First, we examine the total number of sessions from each user. As shown in Figure 1, more than 50% of Sybils have only a single session, which is significantly fewer than normal users. It is likely that these Sybils sent spam during their single session and were subsequently banned. A small portion of Sybils are very active, with over 100 sessions.

Next, we investigate the daily activity patterns of Sybils and normal users. Figure 2 shows that all users exhibit a clear diurnal pattern, with most sessions starting during daytime hours. This indicates that at least a significant portion of Sybils in our dataset could be controlled by real people exhibiting normal behavioral patterns.

We then look at the number of sessions per user per day. Figure 3 reveals that 80% of Sybils log in to Renren once per day or less, compared to 20% of normal users. The duration of Sybil sessions is also much shorter, as shown in Figure 4: 70% of Sybil sessions last less than 100 seconds, whereas only 10% of normal sessions are this short. The majority of normal sessions last several minutes.

Figure 5 shows the number of clicks per session per user. Almost 60% of Sybil sessions contain only one click, while 60% of normal user sessions have 10 or more clicks. Additionally, Sybils click much faster than normal users. As shown in Figure 6, the average inter-arrival time between Sybil clicks is an order of magnitude shorter than for normal clicks, suggesting that Sybils do not linger on pages and may be performing automated activities.

The observed session-level characteristics of Sybils are driven by attackers' attempts to circumvent Renren's security features. Renren limits the number of actions each account can take, such as 50 friend requests per day and 100 profiles browsed per hour. To maximize efficiency, attackers create many Sybils, quickly log in to each one, perform malicious activities (e.g., sending unsolicited friend requests and spam), and then log out and move to the next Sybil. As shown in Table 2, Sybils spend a significant number of clicks sending friend requests and browsing profiles, despite Renren’s security restrictions.

#### 3.2 Clicks and Activities

Having characterized the session-level characteristics of our data, we now analyze the type and frequency of clicks within each session. As shown in Table 2, we categorize clicks into high-level OSN features. In total, we observe 55 activities that can be grouped into 8 primary categories:

- **Friending**: Includes sending friend requests, accepting or denying those requests, and unfriending.
- **Photo**: Includes uploading photos, organizing albums, tagging friends, browsing friends’ photos, and writing comments on photos.
- **Profile**: Encompasses browsing user profiles, with privacy settings restricting the displayed information.
- **Share**: Refers to users posting hyperlinks on their wall, such as links to videos, news stories, blog posts, and photo albums.
- **Message**: Includes status updates, wall posts, and real-time instant messages (IM).
- **Blog**: Encompasses writing blogs, browsing blog articles, and leaving comments on blogs.
- **Notification**: Refers to clicks on Renren’s notification mechanism that alerts users to comments or likes on their content.
- **Like**: Corresponds to the user liking (or unliking) content on Renren.

Table 2 displays the most popular activities on Renren, showing the number of clicks (in thousands) and the percentage of clicks. Only activities with ≥1% of clicks for either Sybils or normal users are shown. The "Like" category has no activity with ≥1% of clicks and is omitted from the table.

Table 2 reveals contrasting behavior between Sybils and normal users. Normal users’ clicks are heavily skewed toward viewing photos (76%), albums (6%), and sharing (4%). In contrast, Sybils expend most of their clicks sending friend requests (41%), viewing photos (24%), and browsing profiles (16%). This behavior supports the strategy of friending normal users and then spamming them. However, given that other attacks are possible, we cannot rely solely on this feature to identify Sybils.

Normal users and Sybils share content (4% and 3%, respectively) and send messages (2% and 2%) at similar rates. This is important because sharing and messaging are the primary channels for spam dissemination on Renren. The similar rates of legitimate and illegitimate sharing/messaging indicate that spam detection systems cannot simply use numeric thresholds to detect spam content.

#### 3.3 Click Transitions

Sections 3.1 and 3.2 highlight some of the differences between Sybils and normal users. Next, we examine differences in click ordering, i.e., the likelihood of a user transitioning from activity A to activity B during a single session.

We use a Markov Chain model to analyze click transitions. Each state represents a click category, and edges represent transitions between categories. We add two abstract states, initial and final, to mark the beginning and end of each click session. Figure 7 shows the category transition probabilities for both Sybils and normal users. Edges with probability <5% are pruned (except for transitions to the final state), and categories with no incoming edges after pruning are omitted.

Figure 7(a) shows that Sybils follow a very regimented set of behaviors. After logging in, Sybils immediately begin one of three malicious activities: friend invitation spamming, spamming photos, or profile browsing. The profile browsing path represents crawling behavior, where the Sybil repeatedly views user profiles until their daily allotment of views is exhausted.

Compared to Sybils, normal users (Figure 7(b)) engage in a wider range of activities, and the transitions between states are more diverse. The highest centrality category is photos, and it is also the most probable state after login. Intuitively, users start from their newsfeed, where they are likely to see and click on friends’ recent photos. The second most probable state after login is checking recent notifications. Sharing and messaging are both low-probability states, which aligns with studies showing that users generate new content less than once per day.

It is clear from Figure 7 that currently, Sybils on Renren are not trying to precisely mimic the behavior of normal users. However, we do not feel that this type of modeling represents a viable Sybil detection approach. Simply put, it would be trivial for Sybils to modify their behavior to appear more like normal users. If Sybils obfuscated their behavior by decreasing their transition probability to friending and profile browsing while increasing their transition probability to photos and blogs, distinguishing between the two models would be extremely difficult.

#### 3.4 SVM Classification

The above analysis shows that Sybil sessions have very different characteristics compared to normal user sessions. Based on these results, we explore the possibility of distinguishing normal and Sybil sessions using a Support Vector Machine (SVM). For our SVM experiments, we extract 4 features from session-level information and 8 features from click activities:

- **Session Features**: Average clicks per session, average session length, average inter-arrival time between clicks, and average sessions per day.
- **Click Features**: Percentage of clicks in each of the 8 click categories.

We computed values for all 12 features for all users in our dataset, input the data to an SVM, and ran 10-fold cross-validation. The resulting classification accuracy was 98.9%, with 0.8% false positives (i.e., classifying normal users as Sybils) and 0.13% false negatives (i.e., classifying Sybils as normal users). Table 3 shows the weights assigned to the top 5 features. Features with positive weight values are more indicative of Sybils, while features with negative weights indicate they are more likely in normal users. Overall, higher absolute values of the weights correspond to features that more strongly indicate either Sybils or normal users. These features agree with our ad-hoc observations in previous sections.

| Feature | Weight |
|---------|--------|
| % of clicks under Friending | +5.65 |
| % of clicks under Notification | -3.68 |
| Time interval of clicks (TBC) | -3.73 |
| Session length (SL) | +1.34 |
| % of clicks under Photo | +0.93 |

While our SVM results are quite good, an SVM-based approach is still a supervised learning tool. In practice, we would like to avoid using any ground truth datasets to train detection models, as they can introduce unknown biases. Later, we will describe our unsupervised detection techniques in detail.

#### 3.5 Discussion

In summary, we analyze the Renren clickstream data to characterize user behavior from three angles: sessions, click activities, and click transitions. SVM analysis of these basic features demonstrates that clickstreams are useful for identifying Sybils on social networks. However, these basic tools (session distributions, Markov Chain models, SVM) are of limited use in practice, as they require training on large samples of ground-truth data. For a practical Sybil detection system, we must develop clickstream analysis techniques that leverage unsupervised learning on real-time data samples, i.e., require zero or little ground-truth. In the next section, we will focus on developing clickstream models for real-time, unsupervised Sybil detection.

### 4 Clickstream Modeling and Clustering

In Section 3, we showed that clickstream data for Sybils and normal users capture the differences in their behavior. In this section, we build models of user activity patterns that can effectively distinguish Sybils from normal users. Our goal is to cluster similar clickstreams together to form general user “profiles” that capture specific activity patterns. We then leverage these clusters (or profiles) to build a Sybil detection system.

We begin by defining three models to represent a user’s clickstream. For each model, we describe similarity metrics that allow us to cluster similar clickstreams together. Finally, we use our ground-truth data to evaluate the efficacy of each model in distinguishing Sybils from normal users. We build upon these results later to develop practical Sybil detection systems based on clickstream analysis.

#### 4.1 Clickstream Models

We define three models to capture a user’s clickstream:

- **Click Sequence Model (CS)**: This model treats each user’s clickstream as a sequence of click events, sorted by order of arrival. As shown in Section 3, Sybils and normal users exhibit different click transition patterns and focus their energy on different activities.

- **Time-based Model (TB)**: This model focuses on the distribution of gaps between events. Each user’s clickstream is represented by a list of inter-arrival times [t1, t2, t3, ..., tn], where n is the number of clicks in a user’s clickstream. As shown in Figure 6, Sybils and normal users generate click events at different speeds.

- **Hybrid Model (H)**: This model combines click types and click inter-arrival times. Each user’s clickstream is represented as an in-order sequence of clicks along with inter-event gaps between clicks. For example: a(t1)c(t2)a(t3)d(t4)b, where a, b, c, d are click types, and ti is the time interval between the ith and (i + 1)th event.

**Click Types**: Both the Click Sequence Model and the Hybrid Model represent each event in the sequence by its click event type. We can control the granularity of the event types in our sequence representation. One approach is to encode clicks based on their specific activity (Renren’s logs define 55 unique activities). Another option is to encode click events using their broader category (our 55 activities fall under 8 click categories, as described in Section 3.2). Our experimental analysis evaluates both representations to understand the impact of granularity on model accuracy.

#### 4.2 Computing Sequence Similarity

Having defined three models of clickstream sequences, we now investigate methods to quantify the similarity between clickstreams. In other words, we want to compute the distance between pairs of clickstreams. First, we discuss general approaches to computing the distance between sequences. Then we discuss how to apply each approach to our three clickstream models.

##### 4.2.1 Defining Distance Functions

**Common Subsequences**: