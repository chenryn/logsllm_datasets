3 Preliminary Clickstream Analysis
We begin the analysis of our data by looking at the high-
level characteristics of Sybil and normal users on Ren-
Figure 5: Average # of clicks per ses-
sion per user.
Figure 6: Average time interval be-
tween clicks per session per user.
ren. Our goals are to provide an overview of the dataset,
and to motivate the use of clickstreams as a rich data
source for uncoveringmalicious behavior. Towards these
ends, we analyze our data in four ways: ﬁrst, we exam-
ine session-level characteristics. Second, we analyze the
activities users engage in during each session. Third, we
construct a state-based Markov Chain model to charac-
terize the transitions between clicks during sessions. Fi-
nally, we use a Support Vector Machine (SVM) approach
to learn the important features that distinguish Sybil and
normal user clickstreams.
3.1 Session-level Characteristics
In this section, we seek to determine the session-level
differences between normal and Sybil accounts in our
dataset. First, we examine the total number of sessions
from each user. As shown in Figure 1, >50% of Sybils
have only a single session; far fewer than normal users.
It is likely that these Sybils sent spam during this sin-
gle session and were banned shortly thereafter. A small
portion of Sybils are very active and have >100 sessions.
Next, we examine when Sybils and normal users are
active each day. Figure 2 shows that all users exhibit a
clear diurnal pattern, with most sessions beginning dur-
ing daytime. This indicates that at least a signiﬁcant por-
tion of Sybils in our dataset could be controlled by real
people exhibiting normal behavioral patterns.
Next, we investigate the number of sessions per user
per day. Figure 3 shows that 80% of Sybils only login to
Renren once per day or less, versus 20% of normal users.
The duration of Sybil sessions is also much shorter, as
shown in Figure 4: 70% of Sybil session are <100 sec-
onds long, versus 10% of normal sessions. The vast ma-
USENIX Association  
22nd USENIX Security Symposium  243
jority of normal sessions last several minutes.
Figure 5 shows the number of clicks per session per
user. Almost 60% of Sybil sessions only contain one
click, whereas 60% of normal user sessions have ≥10
clicks. Not only do Sybil sessions tend to be shorter,
but Sybils also click much faster than normal users. As
shown in Figure 6, the average inter-arrival time between
Sybil clicks is an order of magnitude shorter than for nor-
mal clicks. This indicates that Sybils do not linger on
pages, and some of their activities may be automated.
The observed session-level Sybil characteristics are
driven by attacker’s attempts to circumvent Renren’s se-
curity features. Renren limits the number of actions each
account can take, e.g. 50 friend requests per day, and 100
proﬁles browsed per hour. Thus, in order to maximize
efﬁciency, attackers create many Sybils, quickly login to
each one and perform malicious activities (e.g. sending
unsolicited friend requests and spam), then logout and
move to the next Sybil. As shown in Table 2, Sybils
spend a great deal of clicks sending friend requests and
browsing proﬁles, despite Renren’s security restrictions.
3.2 Clicks and Activities
Having characterized the session-level characteristics of
our data, we now analyze the type and frequency clicks
within each session. As shown in Table 2, we organize
clicks into categories that correspond to high-level OSN
features. Within each category there are activities that
map to particular Renren features. In total, we observe 55
activities that can be grouped into 8 primary categories.
These categories are:
• Friending: Includes sending friend requests, accept-
ing or denying those requests, and un-friending.
• Photo:
Includes uploading photos, organizing al-
bums, tagging friends, browsing friend’s photos, and
writing comments on photos.
• Proﬁle: This category encompasses browsing user
proﬁles. Like Facebook, proﬁles on Renren can be
browsed by anyone, but the information that is dis-
played is restricted by the owner’s privacy settings.
• Share: Refers to users posting hyperlinks on their
wall. Common examples include links to videos and
news stories on external websites, or links to blog
posts and photo albums on Renren.
• Message: Includes status updates, wall posts, and
real-time instant-messages (IM).
• Blog: Encompasses writing blogs, browsing blog ar-
ticles, and leaving comments on blogs.
• Notiﬁcation: Refers to clicks on Renren’s notiﬁca-
tion mechanism that alerts users to comments or likes
on their content.
Category
Friending
Description
Send request
Accept invitation
Invite from guide
Visit photo
Visit album
Visit proﬁles
Share content
Send IM
Visit/reply blog
Sybil Clks Nrml Clks
# (K) % # (K) %
0
417
20
0
16
0
76
242
Photo
6
25
4
160
Proﬁle
4
27
Share
20
2
Message
2
12
Blog
Notiﬁcation Check notiﬁcation
2
8
Table 2: Clicks from normal users and Sybils on different
Renren activities. # of clicks are presented in thousands.
Activities with <1% of clicks are omitted for brevity.
16
13
0
4,432
330
214
258
99
103
136
41
2
2
24
2
16
3
2
1
1
• Like: Corresponds to the user liking (or unliking)
content on Renren.
Table 2 displays the most popular activities on Ren-
ren. The number of clicks on each activity is shown (in
thousands), as well as the percent of clicks. Percentages
are calculated for Sybils and normal users separately, i.e.
each “%” column sums to 100%. For the sake of brevity,
only activities with ≥1% of clicks for either Sybils or
normal users are shown. The “Like” category has no ac-
tivity with ≥1% of clicks, and is omitted from the table.
Table 2 reveals contrasting behavior between Sybils
and normal users. Unsurprisingly, normal users’ clicks
are heavily skewed toward viewing photos (76%), al-
bums (6%), and sharing (4%).
In contrast, Sybils ex-
pend most of their clicks sending friend requests (41%),
viewing photos (24%), and browsing proﬁles (16%). The
photo browsing and proﬁle viewing behavior are related:
these Sybils crawl Renren and download users’ personal
information, including proﬁle photos.
Sybils’ clicks are heavily skewed toward friending
(41% for Sybils, 0.3% for normal users). This behavior
supports one particular attack strategy on Renren: friend-
ing normal users and then spamming them. However,
given that other attacks are possible (e.g. manipulating
trending topics [16], passively collecting friends [32]),
we cannot rely on this feature alone to identify Sybils.
Normal users and Sybils share content (4% and 3%,
respectively) as well as send messages (2% and 2%)
at similar rates. This is an important observation, be-
cause sharing and messaging are the primary channels
for spam dissemination on Renren. The similar rates
of legitimate and illegitimate sharing/messaging indicate
that spam detection systems cannot simply leverage nu-
meric thresholds to detect spam content.
244  22nd USENIX Security Symposium 
USENIX Association
0.89
Friend Invitation
0.38
0.91
0.07
INITIAL
0.06
Photo
0.04
FINAL
0.44
0.05
0.57
Profile
0.34
0.07
0.21
Notification
0.33
0.42
Blog
0.19
0.11
0.25
0.93
0.14
0.31
INITIAL
0.39
Photo
0.04
FINAL
0.13
0.17
0.16
0.31
Share
Profile
0.46
0.16
0.47
0.31
(a) State transitions for a Sybil account.
(b) State transitions for a real user.
Figure 7: Categories and transition probabilities in the clickstream models of Sybils and normal users.
3.3 Click Transitions
Sections 3.1 and 3.2 highlight some of the differences
between Sybils and normal users. Next, we examine dif-
ferences in click ordering, i.e. how likely is it for a user
to transition from activity A to activity B during a single
session?
We use a Markov Chain model to analyze click tran-
sitions. In this model, each state is a click category, and
edges represent transitions between categories. We add
two abstract states, initial and ﬁnal, that mark the begin-
ning and end of each click session. Figure 7 shows the
category transition probabilities for both Sybils and nor-
mal users. The sum of all outgoing transitions from each
category is 1.0. To reduce the complexity of the Figure,
edges with probability <5% have been pruned (except
for transitions to the ﬁnal state). Categories with no in-
coming edges after this pruning process are also omitted.
Figure 7(a) demonstrates that Sybils follow a very reg-
imented set of behaviors. After logging-in Sybils imme-
diately begin one of three malicious activities: friend in-
vitation spamming, spamming photos, or proﬁle brows-
ing. The proﬁle browsing path represents crawling be-
havior: the Sybil repeatedly views user proﬁles until their
daily allotment of views is exhausted.
Compared to Sybils, normal users (Figure 7(b)) en-
gage in a wider range of activities, and the transitions
between states are more diverse. The highest centrality
category is photos, and it is also the most probable state
after login. Intuitively, users start from their newsfeed,
where they are likely to see and click on friends’ recent
photos. The second most probable state after login is
checking recent notiﬁcations. Sharing and messaging are
both low probability states. This makes sense, given that
studies of interactions on OSNs have shown that users
generate new content less than once per day [41, 17].
It is clear from Figure 7 that currently, Sybils on Ren-
ren are not trying to precisely mimic the behavior of nor-
mal users. However, we do not feel that this type of
modeling represents a viable Sybil detection approach.
Simply put, it would be trivial for Sybils to modify
their behavior in order to appear more like normal users.
If Sybils obfuscated their behavior by decreasing their
transition probability to friending and proﬁle browsing
while increasing their transition probability to photosand
blogs, then distinguishing between the two modelswould
be extremely difﬁcult.
3.4 SVM Classiﬁcation
The above analysis shows that Sybil sessions have very
different characteristics compared to normal user ses-
sions. Based on these results, we explore the possibil-
ity of distinguishing normal and Sybil sessions using a
Support Vector Machine (SVM) [26]. For our SVM ex-
periments, we extract 4 features from session-level infor-
mation and 8 features from click activities:
• Session Features: We leverage 4 features extracted
from user sessions: average clicks per session, aver-
age session length, average inter-arrivaltime between
clicks, and average sessions per day.
• Click Features: As mentioned in Section 3.2, there
are 8 categories of clicks activities on Renren. For
each user, we use the percentage of clicks in each
category as a feature.
We computed values for all 12 features for all users in
our dataset, input the data to an SVM, and ran 10 fold
cross-validation. The resulting classiﬁcation accuracy
was 98.9%, with 0.8% false positives (i.e. classify nor-
mal users as Sybils) and 0.13% false negatives (i.e. clas-
sify Sybils as normal users). Table 3 shows the weights
assigned to the top 5 features. Features with positive
weight values are more indicative of Sybils, while fea-
tures with negative weights indicate they are more likely
in normal users. Overall, higher absolute value of the
weights corresponds to features that more strongly indi-
cate either Sybils or normal users. These features agree
with our ad-hoc observations in previous sections.
USENIX Association  
22nd USENIX Security Symposium  245
Feature
% of clicks under Friending
% of clicks under Notiﬁcation
Time interval of clicks (TBC)
Session length (SL)
% of clicks under Photo
Weight
+5.65
-3.68
-3.73
+1.34
+0.93
Table 3: Weight of features generated by SVM.
While our SVM results are quite good, an SVM-based
approach is still a supervised learning tool. In practice,
we would like to avoid using any ground truth datasets
to train detection models, since they can introduce un-
known biases. Later, we will describe our unsupervised
detection techniques in detail.
3.5 Discussion
In summary, we analyze the Renren clickstream data to
characterize user behavior from three angles: sessions,
click activities, and click transitions. SVM analysis of
these basic features demonstrates that clickstreams are
useful for identifying Sybils on social networks.
However,
these basic tools (session distributions,
Markov Chain models, SVM) are of limited use in prac-
tice: they require training on large samples of ground-
truth data. For a practical Sybil detection system, we
must develop clickstream analysis techniques that lever-
age unsupervised learning on real-time data samples, i.e.
require zero or little ground-truth. In the next section, we
will focus on developing clickstreams models for real-
time, unsupervised Sybil detection.
4 Clickstream Modeling and Clustering
In Section 3, we showed that clickstream data for Sybils
and normal users captured the differences in their behav-
ior. In this section, we build models of user activity pat-
terns that can effectively distinguish Sybils from normal
users. Our goal is to cluster similar clickstreams together
to form general user “proﬁles” that capture speciﬁc activ-
ity patterns. We then leverage these clusters (or proﬁles)
to build a Sybil detection system.
We begin by deﬁning three models to represent a
user’s clickstream. For each model, we describe similar-
ity metrics that allow us to cluster similar clickstreams
together. Finally, we use our ground-truth data to eval-
uate the efﬁcacy of each model in distinguishing Sybils
from normal users. We build upon these results later to
develop practical Sybil detection systems based on click-
stream analysis.
4.1 Clickstream Models
We deﬁne three models to capture a user’s clickstream.
Click Sequence Model.
We start with the
most straightforward model, which only considers click
events. As shown in Section 3, Sybils and normal users
exhibit different click transition patterns and focus their
energy on different activities. The Click Sequence (CS)
Model treats each user’s clickstream as a sequence of
click events, sorted by order of arrival.
Time-based Model.
As shown in Figure 6,
Sybils and normal users generate click events at different
speeds. The Time-based Model focuses on the distribu-
tion of gaps between events: each user’s clickstream is
represented by a list of inter-arrival times [t1,t2,t3, ...,tn]
where n is the number of clicks in a user’s clickstream.
Hybrid Model.
The Hybrid Model combines click
types and click inter-arrival times. Each user’s click-
stream is represented as an in-order sequence of clicks
along with inter-event gaps between clicks. For exam-
ple: a(t1)c(t2)a(t3)d(t4)b where a,b,c,d are click types,
and ti is the time interval between the ith and (i + 1)th
event.
Click Types. Both the Click Sequence Model and the
Hybrid Model represent each event in the sequence by
its click event type. We note that we can control how
granular the event types are in our sequence representa-
tion. One approach is to encode clicks based on their
speciﬁc activity. Renren’s logs deﬁne 55 unique activi-
ties. Another option is to encode click events using their
broader category. In our dataset, our 55 activities fall un-
der 8 click categories(see Section 3.2). Our experimental
analysis evaluates both representations to understand the
impact of granularity on model accuracy.
4.2 Computing Sequence Similarity
Having deﬁned three models of clickstream sequences,
we now move on to investigating methods to quantify the
similarity between clickstreams. In other words, we want
to compute the distance between pairs of clickstreams.
First, we discuss general approaches to computing the
distance between sequences. Then we discuss how to
apply each approach to our three clickstream models.
4.2.1 Deﬁning Distance Functions
Common Subsequences.