consists of(l+ 2)λ bits (our GC for comparison has additionally
two blinding bits per party) for OT, 4lλ for the GC itself and(l+2)λ
OT sender, where l is the bitlength of the evaluator’s input
As GC generator, the DO’s communication cost in each comparison
texts per AND-gate multiplied by the security parameter
In a GC protocol, the cost of the generator consists of:
is the bitlength multiplied by the security parameter
for the garbled input. After the GC protocol with the DA, the DO
sends 2 bits to the CSP. In total, the DO sends
((l+ 2)λ+ 4lλ+(l+ 2)λ+ 2)d=((6l+ 4)λ+ 2)d bits.
The communication cost of the GC evaluator consists only of
its cost of the OT extension protocol which is lλ [3] for the OT
receiver, where l is the bitlength of the evaluator’s input. Hence, in
the OOPE protocol the DA sends((l+ 2)λ+ 2)d bits.
At security level λ= 128 bits, κ is at least 4096 bits long. Assum-
ing l = 32 bits and d = 20 (i.e., the OPE-tree contains about one
million entries), this results in communication costs of 10.07 kB,
61.25 kB, and 10.62 kB for the CSP, the DO and the DA, respectively.
B CORRECTNESS AND SECURITY PROOFS
Proof. Let bд = (i f x > x then 1 else 0) and be = (i f x ≠
Theorem B.1 (Correctness). The protocol ΠOOPE is correct.
′
′
a, x+r) of the DA and(bo, b
x then 1 else 0). From inputs(ba, b
o, x+
′
′
r) of the DO the garbled circuit returns(be⊕ba⊕bo, bд⊕b
a⊕b
o) to
′
′
o) to the DO. Then the DA resp.
a⊕b
the DA and(be⊕ba⊕bo, bд⊕b
′
′
′
′
o, be⊕ba, bд⊕b
a, be⊕bo, bд⊕b
the DO sends(ba, b
a)
o) resp.(bo, b
to the CSP. With Equation 7 the CSP can correctly deduce be and
bд. The correctness of binary search concludes the proof.
(cid:3)
Theorem B.2 (Security). The protocol ΠOOPE securely implements
the OOPE functionality in the semi-honest model with one corrupted
party.
Proof. Since the protocol makes a call to the comparison func-
tionality involving the DO and the DA, the proof will use the simu-
lators of Theorem 7 of [32] to generate their views. Let So and Sa
ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan
Anselme Tueno and Florian Kerschbaum
, x
,
o
o
o
a
a
, b
, x
̃︀,
a , b
a , b
o , b
o , b
o , b
′(i)
(i)
(i)⨆︁, x
(i)
(i)+ r
(i)+ r
⎜x
′(i)
′(i)
(i)
(i)
(i)̃︀,∐︀b
(i)+ r
vo(∐︀b
(i)
(i)
(i)
′(i)
′(i)
(i)
д ⊕ b
a ⊕ b
a ⊕ b
e ⊕ b
∐︀b
(i)
(i)
(i)
′(i)
д ⊕ b
̃︀
∐︀b
e ⊕ b
(a) DO View: for i= 1⋯l
′(i)
′(i)⨆︁, x
′(i)
(i)
⎜x
(i)
(i)
′(i)
′(i)̃︀,∐︀b
(i)
1 ⊕ b
So(∐︀b
(i)
(i)
(i)
′(i)̃︀,
1 ⊕ b
2 ⊕ b
∐︀b
(i)
(i)
∐︀b
̃︀
(b) DO Simulator: for i= 1⋯l
, x
, b
, b
, b
, b
, b
, b
1
2
,
(i)+ r
(i)̃︀),
(i)
2 ⊕ b
′(i)̃︀),
,
r
o
o
o
a
a
, b
, x
a , b
a , b
o , b
o , b
o , b
′(i)
(i)
(i)
(i)
, x+ r
′(i)
(i)
′(i)
(i)
(i)+ r
(i)̃︀,∐︀b
va(∐︀b
, x+ r
′(i)
(i)
(i)
(i)
(i)
′(i)
д ⊕ b
a ⊕ b
e ⊕ b
∐︀b
̃︀,
a ⊕ b
(i)
(i)
(i)
′(i)
∐︀b
e ⊕ b
д ⊕ b
̃︀
(a) DA View: for i= 1⋯l
′(i)
′(i)
(i)
′(i)
, x+ r
(i)
(i)
′(i)
(i)
′(i)̃︀,∐︀b
1 ⊕ b
, x+ r
Sa(∐︀b
(i)
(i)
′(i)̃︀,
(i)
2 ⊕ b
1 ⊕ b
∐︀b
(i)
(i)
∐︀b
̃︀
(b) DA Simulator: for i= 1⋯l
(i)
2 ⊕ b
, b
, b
, b
, b
, b
, b
1
2
,
r
(i)̃︀),
′(i)̃︀),
Figure 16: DO Simulation
Figure 17: DA Simulation
(resp. va and vo) be the simulators (resp. the views) of the DO and
the DA in the comparison protocol. We follow the idea of [32] by
proving the cases separately, when the DO is corrupted, the DA is
corrupted and the CSP is corrupted.
Figure 16b, where x
are random bits.
Case 1 - DO is corrupted: The view of the DO consists of random-
ized inputs and its view in the comparison steps. Let l be the number
of comparisons required to encrypt x, then view ΠOOPE
illustrated in Figure 16a.
DO (S, x, sk) is
Upon input(n, sk,∅) SDO generates the output as illustrated in
(i)
′(i)
(i)
′(i) is a random integer and b
′(i)
(i)
(i)+ r
′(i) respectively. Furthermore,
(i)
(i)
(i)
e ⊕b
д ⊕
(i)
(i)
from each other (Equation 4). This is because x
are just as random as x
since b
b
a
of Yao’s protocol (Theorem 7 of [32]) finishes the proof.
Clearly the outputs of Figures 16a and 16b are indistinguishable
a
are also just as random as b
are randomly chosen by the DA, b
(i)
(i)
(i)
respectively. The security
′(i)
′(i)
′(i)
(i)
and b
o , b
a , b
, b
, b
, b
, b
, b
, b
, b
a
1
2
2
1
o
Case 2 - DA is corrupted: This case is similar to the DO’s case
with the only difference that the DA knows x which is the same in
each round. View view ΠOOPE
DA (S, x, sk) is illustrated in Figure 17a.
Notice that also the DA is unaware of the result of the compar-
ison, because the output is randomized by a bit of the DO. The
(n, x, y) SDA generates the output illustrated in Figure 17b, where
simulator for the DA works in the same way as SDO . On input
(i)
CSP (S, x, sk)
Case 3 - CSP is corrupted: The CSP’s view view ΠOOPE
consists of random integers and GC’s outputs from the DA and the