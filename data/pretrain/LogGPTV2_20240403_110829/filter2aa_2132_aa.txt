# FuzzBunch与NOPEN C2工具的研究分析

## 目录
- 概述
- 基本信息
- 测试环境
- 操作流程
  - Beacon生成
  - 启动监听程序
  - 执行Beacon

## 概述
本文基于EQGRP公开资料，对相关工具的开发实现和攻击防御思路进行了研究。由于未能找到NOPEN C2工具在Windows平台下的Beacon程序，我们转向了FuzzBunch（模糊测试工具集），该工具同样支持Windows平台上的C2操作。尽管它是一个Python程序，但其功能仍能满足我们的需求。因此，本文将详细介绍如何利用FuzzBunch进行C2操作，并探讨其与NOPEN C2工具联动的可能性。

## 基本信息
本次研究使用的代码来自Shadow Brokers泄露的数据，经过网络接力后，我们选择了由Francisco Donoso修改并由三好学生进一步优化的版本。当然，也可以直接从泄露代码构建777388/EQGRP_Lost_in_Translation项目：

```bash
git clone https://github.com/3gstudent/fuzzbunch.git
```

克隆完成后，请确保你的环境中已安装以下软件及其对应版本：
- Python 2.7.18
- pywin32
- Java 1.8.0_41 (OpenJDK)

执行`java -jar Start.jar`后，会启动一个用Java Swing编写的GUI客户端。

## 测试环境
测试环境包括两台设备：一台作为FuzzBunch控制机，另一台作为目标机。具体配置如下：
- **控制机**:
  - OS: Microsoft Windows 10 Pro
  - Version: 10.0.19043
  - System Type: x64-based PC
  - IP Address: 172.19.2.1
- **目标机**:
  - OS: Windows XP SP3 中文版
  - IP Address: 172.19.2.16

## 操作流程

### Beacon生成
通过`pc_prep`命令可以生成PeddleCheap Payload。此命令行支持TAB补全。

```bash
pc_prep
```

根据提示选择合适的Payload类型及配置选项。例如，选择标准TCP连接(i386-winnt Level3 sharedlib)并设置回调地址为本地IP(127.0.0.1)。最终生成的文件路径类似如下：

```
D:\Logs\fb\z0.0.0.1\Payloads\PeddleCheap_2022_04_04_03h16m55s.945/PC_Level3_exe.configured
```

### 启动监听程序
在PaddleCheap页面中设置监听参数，确保这些参数与之前生成的Beacon配置一致，以保证客户端能够成功上线。启动监听后，在终端上会显示相关信息，如加载模块、获取远程时间等。

### 执行Beacon
将生成的Beacon文件复制到目标机并执行。此时，服务端应能接收到目标机的上线信息，并显示详细的连接状态及后续操作指令。

以上步骤展示了如何使用FuzzBunch进行基本的C2操作。尽管整个过程较为复杂，但对于理解和实施高级渗透测试具有重要价值。希望本文能为你提供有价值的参考。