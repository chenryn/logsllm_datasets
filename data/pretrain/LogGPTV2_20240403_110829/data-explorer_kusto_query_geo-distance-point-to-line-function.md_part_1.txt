---
title:  geo_distance_point_to_line()
description: Learn how to use the geo_distance_point_to_line() function to calculate the shortest distance between a coordinate and a line or multiline on Earth.
ms.reviewer: mbrichko
ms.topic: reference
ms.date: 12/18/2022
---
# geo_distance_point_to_line()
Calculates the shortest distance in meters between a coordinate and a line or multiline on Earth.
## Syntax
`geo_distance_point_to_line(`*longitude*`,`*latitude*`,`*lineString*`)`
[!INCLUDE [syntax-conventions-note](../../includes/syntax-conventions-note.md)]
## Parameters
| Name | Type | Required | Description |
|--|--|--|--|
| *longitude* | `real` |  :heavy_check_mark: | The geospatial coordinate longitude value in degrees. A valid value is in the range [-180, +180].|
| *latitude* | `real` |  :heavy_check_mark: | The geospatial coordinate latitude value in degrees. A valid value is in the range [-90, +90].|
| *lineString* | `dynamic` |  :heavy_check_mark: | A line or multiline in the [GeoJSON format](https://tools.ietf.org/html/rfc7946).|
## Returns
The shortest distance, in meters, between a coordinate and a line or multiline on Earth. If the coordinate or lineString are invalid, the query will produce a null result.
> [!NOTE]
>
> * The geospatial coordinates are interpreted as represented by the [WGS-84](https://earth-info.nga.mil/index.php?dir=wgs84&action=wgs84) coordinate reference system.
> * The [geodetic datum](https://en.wikipedia.org/wiki/Geodetic_datum) used to measure distance on Earth is a sphere. Line edges are [geodesics](https://en.wikipedia.org/wiki/Geodesic) on the sphere.
> * If input line edges are straight cartesian lines, consider using [geo_line_densify()](geo-line-densify-function.md) in order to convert planar edges to geodesics.
### LineString definition and constraints
dynamic({"type": "LineString","coordinates": [[lng_1,lat_1], [lng_2,lat_2],..., [lng_N,lat_N]]})
dynamic({"type": "MultiLineString","coordinates": [[line_1, line_2, ..., line_N]]})
* LineString coordinates array must contain at least two entries.
* Coordinates [longitude, latitude] must be valid where longitude is a real number in the range [-180, +180] and latitude is a real number in the range [-90, +90].
* Edge length must be less than 180 degrees. The shortest edge between the two vertices will be chosen.
> [!TIP]
>
> * Using literal LineString or a MultiLineString may result in better performance.
> * If you want to know the shortest distance between one or more points to many lines, consider folding these lines into one multiline. See the following [example](#examples).
## Examples
### Shortest distance to airport
The following example finds the shortest distance between North Las Vegas Airport and a nearby road.
:::image type="content" source="media/geo-distance-point-to-line-function/distance-point-to-line.png" alt-text="Distance between North Las Vegas Airport and road.":::
> [!div class="nextstepaction"]
> Run the query
```kusto
print distance_in_meters = geo_distance_point_to_line(-115.199625, 36.210419, dynamic({ "type":"LineString","coordinates":[[-115.115385,36.229195],[-115.136995,36.200366],[-115.140252,36.192470],[-115.143558,36.188523],[-115.144076,36.181954],[-115.154662,36.174483],[-115.166431,36.176388],[-115.183289,36.175007],[-115.192612,36.176736],[-115.202485,36.173439],[-115.225355,36.174365]]}))
```
**Output**
| distance_in_meters |
|--------------------|
| 3797.88887253334   |
### Storm events across the south coast
Storm events in south coast US. The events are filtered by a maximum distance of 5 km from the defined shore line.
:::image type="content" source="media/geo-distance-point-to-line-function/us-south-coast-storm-events.png" alt-text="Storm events in the US south coast.":::
> [!div class="nextstepaction"]
> Run the query
```kusto