the number of 3-node subgraphs with different node degree com-
binations, i.e. an alternative representation of the clustering coef-
ﬁcient distribution. dK-n (where n is the number of nodes in the
graph) captures the complete graph structure. We show a detailed
83example in Figure 1, where we list dK-2 and dK-3 distributions
for a graph.
dK is ideal for us because the dK-series is a set of data tuples
that provides a natural ﬁt for injecting statistical noise to attain dif-
ferential privacy. In addition, together with their matching gener-
ators, higher levels of dK-series, i.e. n > 3, could potentially
provide us with a bidirectional transformation from a graph to its
statistical representation and back.
While larger values of K will capture more structural informa-
tion and produce higher ﬁdelity synthetic graphs, it comes at the
expense of higher computation and storage overheads. Our work
focuses on the dK-2 series, because generator algorithms have not
yet been discovered for dK-series where K≥3. While this may
limit the accuracy of our current model, our methodology is gen-
eral, and can be used with higher order dK-series when their gen-
erators are discovered.
-Differential Privacy in Graphs.
Given the above, we can
now outline how to integrate differential privacy in the context of
graphs. An -differentially private graph system would output a
graph that given a statistical description of an input graph, the prob-
ability of seeing two similar graphs as the real input graph is close,
where closeness between the two probabilities is quantiﬁed by .
A larger value of  means it is easier to identify the source of the
graph structure, which means a lower level of graph privacy.
Prior work has demonstrated that in many cases, accuracy of
query results on differentially private databases can be improved by
decomposing complex queries into sequences of “simple counting
queries” that happen to have extremely low sensitivity [9, 10, 15].
Unfortunately, this approach will not work in our context, since our
goal is to achieve privacy guarantees on whole graph datasets, and
not just privacy for simple graph queries such as node degree dis-
tributions. In the next section, we start with a basic formulation
of a differentially private graph model, and then provide an opti-
mized version. We illustrate the ﬁnal process, shown as Pygmalion
in Figure 2.
3. FIRST STEPS
In this section, we perform the analytical steps necessary to inte-
grate -differential privacy into the dK graph model. Our goal is to
derive the amount of noise necessary to achieve a given -privacy
level. The amount of Laplacian noise necessary is a function of
both , the user-speciﬁed privacy parameter, and S, the sensitiv-
ity of the dK function. First, we formally deﬁne the dK-2 se-
ries, and derive its sensitivity SdK−2. Next, we describe the dK-
perturbation algorithm (dK-PA) for injecting noise into the original
dK-2 series, and prove that it provides the desired -differential pri-
vacy. Our analysis shows that the asymptotic bound on noise used
in dK-PA grows polynomially with maximum node degree, which
means we need to inject relatively large levels of noise to guarantee
-privacy. Finally, as expected, our experiments on real graphs con-
ﬁrm that dK-PA generates synthetic graphs with signiﬁcant loss in
accuracy. This poor result motivates our search for improved tech-
niques in Section 4.
3.1 Sensitivity of dK-2
dK-function.
We formally deﬁne dK-2 as a function over a
graph G = (V, E), where V is the set of nodes and E is the set of
edges connecting pair of nodes in V :
dK(G) : Gn → $
where Gn is the set of graphs with n = |V | nodes and $ is the set
of unique degree tuples in the dK-2-series with the corresponding
i=1
count of instances in G. Formally, $ is a collection of {dx, dy; k}
where each entry represents that the number of connected compo-
nents of size 2 with degree (dx, dy) is k. Let m be the cardinality
of $. Because the maximum number of entries in dK-2 is bounded
by the number of possible degree pairs, Pdmax
i, where dmax be
the maximum node degree in G, thus m = O(d2
max). Prior stud-
ies have demonstrated that in large network graphs dmax is upper
bounded by O(√n) [29,43], and thus, in those cases, m is upper
bounded by O(n).
Sensitivity Analysis.
In the context of differential privacy, the
sensitivity of a function is deﬁned as the maximum difference in
function output when one single element in the function domain
is modiﬁed. The domain of dK-2 is a graph G. Neighbor graphs
of G are all the graphs G! which differ from G by at most a single
edge. Changing a single edge in G will result in one or more entries
changing in the corresponding dK-2-series. Thus, the sensitivity of
dK-2 is computed as the maximum number of changes in the dK-
2-series among all of G’s neighbor graphs.
LEMMA 1. The sensitivity of dK-2 on a graph G, SdK−2, is
upper bounded by 4 · dmax + 1.
PROOF. Let e be a new edge added to a graph G = (V, E)
between any two nodes u, v ∈ V . Once the edge e is added to
G the degrees of u and v increase from d to (d + 1) and from
d! to (d! + 1) respectively. This graph transformation produces
the following changes in the dK-2 on G: the frequency k of tuple
{d + 1, d! + 1; k} gets incremented by 1 because of the new edge
(u, v). For example, a new edge between A and C in Figure 1
produces an increment of the frequency k of the tuple {2, 3; k}
from k = 1 to k = 2. Furthermore, a total of d + d! already
present tuples need to be updated with the new degree of u and v,
and so the tuples with the old degrees get decremented by a total of
d + d! and the tuples reﬂecting the new degree get incremented for
a total of d + d!. To summarize, the overall number of changes in
the dK-2 -series is 2(d + d!) + 1. In the worst case, when u and v
are nodes of maximum degree dmax, the total number of changes
in the original dK-2-series by adding an edge between u and v is
upper bounded by 4 · dmax + 1.
Lemma 1 derives only the upper bound of the sensitivity because,
as in Deﬁnition 3 [14], it is the sufﬁcient condition to derive the nec-
essary amount of noise to achieve a given -privacy level. Lemma 1
shows that the sensitivity of dK-2 is high, since dmax has been
shown to be O(√n) in measured graphs [29, 43]. Note that prior
work on differential privacy [9,10,15,23] generally involved func-
tions with a much lower sensitivity, i.e. 1. In these cases, the low
sensitivity means that the amount of noise required to generate dif-
ferentially private results is very small. In contrast, the sensitivity
of our function indicates that the amount of noise needed to guar-
antee -differential privacy in dK-2 will be high. Therefore, the
accuracy of synthetic graphs generated using this method will be
low. Note that if we use a higher order dK-series, i.e. K ≥ 3,
we would have found an even higher sensitivity value, which may
further degrade the accuracy of the resulting synthetic graphs.
3.2 The dK-Perturbation Algorithm
We now introduce the dK-perturbation algorithm (dK-PA) that
computes the noise to be injected into dK-2 to obtain -differential
In dK-PA, each element of the dK-2-series is al-
privacy [14].
tered based on a stochastic variable drawn from the Laplace distri-
bution, Lap(λ). This distribution has density function proportional
to e− |x|
λ , with mean 0 and variance 2λ2. The following theorem
84Pygmalion
Measured
Graph
dK Series
dK
Query
Sorted
dK Series
Clustered
dK Series
Sorting
Clustering
Noise
Injection
Perturbed
dK Series
dK
Generation
Di!erentially
Private
Graph
Figure 2: Overview of Pygmalion. -differential privacy is added to measured graphs after sorting and clustering the dK-2-series.
proves the conditions under which -differential privacy is guaran-
teed [17].
THEOREM 1. Let gDK be the privacy mechanism performed on
)m. For any G
dK such that !DK(G) = dK(G) + Lap( SdK−2
and G! differing by at most one edge, gDK provides -differential
privacy if:

˛˛˛ ln
P r[ !DK(G) = s]
P r[ !DK(G!) = s]
˛˛˛ ≤ 
PROOF. Let s = be a possible output of
!DK(G) and m the number of its entries, and let G! be the graph
with at most one different edge from G. Using the conditional prob-
abilities, we have:
P r[ !DK(G) = s]
P r[ !DK(G!) = s]
=
mY
i=1
P r[ !DK(G)i = si|s1, ...si−1]
P r[ !DK(G!)i = si|s1, ...si−1]
,
since each item of the product has the ﬁrst i − 1 values of dK-2
ﬁxed. Each si is the result of applying Laplacian noise calibrated
by SdK−2. Note that Lemma 1 has studied the sensitivity of dK-2,
SdK−2, under the condition that two graphs differ by at most one
edge. Thus, the conditional probability is Laplacian, allowing us to
derive the following inequalities:
Type
Internet
Facebook
Monterey Bay
Graph
WWW
AS
Russia
Mexico
LA
Nodes
325,729
16,573
14,260
97,134
598,140
603,834
Edges
1,090,108
40,927
93,291
289,324
4,552,493
7,676,486
Table 1: Different measurement graphs used for experimental
evaluation.
Theorem 1 shows that by adding noise to the dK-2-series using
independent Laplace random variables calibrated by SdK−2 from
Lemma 1, we achieve the desired -privacy.
Quantifying Accuracy. We apply the error analysis proposed
by [25] on dK-PA to quantify the accuracy of the synthetic graphs
it produces, compared to the original graphs.
DEFINITION 2. For a perturbed dK-2-series that is generated
by the privacy mechanism gDK on a graph G, as deﬁned in Theo-
rem 1, the estimated error on gDK can be computed as the expected
randomization in generating gDK.
We now quantify the expected randomization in gDK:
mX
i=1
E[( !DK(G)i − dK(G)i)2] = mE[Lap(
SdK−2

)2]
mY
i=1
P r[ !DK(G)i = si|s1, ...si−1]
P r[ !DK(G!)i = si|s1, ...si−1]
≤
mY
i=1
e
| !
DK(G" )i|
DK(G)i −
σ
!
Using Lemma 1 and that m = O(d2
max)we have:
where σ is the scale parameter of the Laplace distribution that is
4dmax+1

. Thus,
mY
e
| !
DK(G" )i|
DK(G)i −
σ
!
|| !
DK(G" )||1
DK(G)−
σ
!
= e
i=1
where, by deﬁnition !DK(G) = dK(G)+Lap( SdK−2
DK(G!)||1 ≤ SdK−2 with SdK−2 ≤ 4dmax + 1 as proved in
Lemma 1. Thus, we have:
), and ||DK(G)−

|| !
DK(G" )||1
DK(G)−
σ
!
e
=
||dK(G)+Lap(
SdK−2

)−dK(G" )−Lap(
SdK−2

)||1
= e
and so, by applying the logarithmic function, we have that
≤ e
σ

4dmax+1
4dmax+1
= e
˛˛˛ ln
which concludes the proof.
P r[ !DK(G) = s]
P r[ !DK(G!) = s]
˛˛˛ ≤ 
mE[Lap(
SdK−2

)2] = mV ar(Lap(
dmax

)) =
2m · d2
2
max
= O(
d4
max
2
).
This asymptotical bound shows that the noise injected by dK-PA
into dK-2 scales with the fourth-degree polynomial of dmax. This
result implies that synthetic graphs generated by dK-PA will have
relatively low accuracy because of the large error introduced by the
perturbation process. Furthermore, it implies that even for rela-
tively weak privacy guarantees, dK-PA will introduce large errors
that may signiﬁcantly change the structure of the resulting synthetic
graphs from the original.
3.3 Validation on Real Graphs
At this point, we have demonstrated analytically that the impact
of adding noise to the dK-2-series using dK-PA will result in syn-
thetic graphs that deviate signiﬁcantly from the originals. In this
section, we empirically evaluate the impact of adding noise to the
dK-2-series by executing dK-PA on real graphs.
Methodology.
To illustrate that our system is applicable to
different types of graphs, we select a group of graphs that include
social graphs from Facebook [41, 43], a WWW graph [3] and an
AS topology graph [38] crawled on Jan 1st, 2004, which have
85e
c
n
a
t
s
D
i
 1e+09
 1e+08
 1e+07
 1e+06
 100000
 10000
 1000
 100
 10
 1
 0.1
 1
dK-PA
Ideal
dK-PA
Ideal
e
c
n
a
t
s
D
i
 1e+09
 1e+08
 1e+07
 1e+06
 100000
 10000
 1000
 100