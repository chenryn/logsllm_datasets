找回密码功能模块中通常会将用户凭证（一般为验证码）发送到用户自己才可以看到
的手机号或者邮箱中，只要用户不泄露自己的验证码就不会被攻击者利用，但是有些应用
程序在验证码发送功能模块中验证码位数及复杂性较弱，也没有对验证码做次数限制而导
致验证码可被暴力枚举并修改任意用户密码。
在测试验证码是否可以被暴力枚举时，可以先将验证码多次发送给自己的账号，观察
验证码是否有规律，如每次接收到的验证码为纯数字并且是4位数。
12.2.2 测试流程
验证码暴力破解是指在密码重置的过程中使用 Burp Suite 不断地尝试对验证码进行猜
解的测试。一旦验证码猜解成功即可对被攻击账号进行密码重置，如图 12-6所示。
图12-6 验证码发送流程
步骤一：在某 App 的找回密码功能模块中要求用户输入手机号并发送验证码，可以
先将验证码发送到自己手机号来查看验证码是否有规律，可以被暴力枚举。案例中验证码
为4位数，如图12-7所示。
图12-7 验证码是4位数字
步骤二：当确定用户验证码可以暴力枚举后，可以抓取验证码校验请求，对验证码进
行暴力破解。在验证码未知的情况下，可以先填写任意4位数字，如图12-8所示。
图12-8 抓取验证请求包
步骤三：当请求包被拦截后可以观察参数名为mm的请求值是用户的手机号码，参数
名为pno的请求值是验证码（在还不知道验证码的情况下随意填写的），参数名为pas的参
数值是验证码校验成功后要修改的密码，如图12-9所示。
图12-9 验证码校验请求包
请求包如下：
步骤四：这里可以将请求包发送到Burp Suite工具中的Intruder模块中，并把pno验证
码参数设置为变量载入 4 位数字的密码字典进行枚举测试，可以通过 length 响应长度来观
察payload请求的验证码是否和其他请求不一样，如果发生不一样的情况可能就是真实的
验证码。如图12-10所示，从响应包内容可以观察出验证码枚举猜解正确并修改密码成
功。
图12-10 验证码暴力枚举
12.2.3 修复建议
为了避免出现验证码被暴力破解的情况，建议对用户输入的验证码校验采取错误次数
限制并提高验证码的复杂度。
12.3 接口参数账号修改测试
12.3.1 测试原理和方法
找回密码功能逻辑中常常会在用户修改密码接口提交参数中存在传递用户账号的参
数，而用户账号参数作为一个可控的变量是可以被篡改的，从而导致修改账号密码的凭证
或修改的目标账号出现偏差，最终造成任意账号密码修改的漏洞，如图12-11所示。
图12-11 修改密码接口存在email参数
通常在找回密码逻辑中，服务端会要求用户提供要修改的账号，然后给这个账号发送
只有账号主人才能看到的凭证。比如给这个账号主人绑定的邮箱或手机号发送验证码，或
者找回密码的链接，这样可以保证只有账号主人才可以看到这些凭证。但是如果服务端对
账号的控制逻辑不当，就会导致原有账号被篡改为其他账号，服务端把凭证发送给篡改后
的账号的邮箱或手机，最终造成可利用凭证重置任意账号密码的漏洞。
12.3.2 测试流程
接口参数账号修改测试流程为拦截前端请求，通过修改请求内邮箱或手机号等参数，
将修改后数据发送给服务器进行欺骗达到密码重置的目的，如图12-12所示。
步骤一：在某网站的找回密码功能中，当输入用户账号后会出现发送重置密码邮件的
按钮。在单击发送按钮时抓包，可以看到用户的邮箱已经出现在了数据包的email参数值
中，那么尝试将email参数修改为我们自己的邮箱会出现什么情况？如图12-13所示。
步骤二：修改email参数的值后，网站提示邮件已经发送成功，此时可以打开我们自
己的邮箱查看修改密码邮件是否收到，如图12-14所示。
图12-12 接口参数修改流程
图12-13 修改密码绑定邮箱可修改
图12-14 发送邮件成功
步骤三：可以看到修改密码的链接已经发送到邮箱中，打开链接即可修改目标用户的
密码，尽管目标用户绑定的并不是我们的邮箱，服务端仍将邮件发送到了我们篡改后的邮
箱中，如图12-15所示。
图12-15 接收到修改密码邮件
步骤四：通过上面的案例可以看到，服务端并没有校验这个邮箱是否是该账号绑定的
邮箱，而是直接向请求中的email参数对应的邮箱发送邮件。类似这种直接修改请求参数
的情况不仅在发送邮件时存在，如果修改密码请求中包含目标账号参数，也可以通过篡改
账号参数重置目标账号密码，如图12-16所示。
图12-16 重置密码页面
例如，某个找回密码发送给用户邮件中的接口URL如下：
http://www.xxx.com/repwd?account=PI:EMAIL&token=1239392342234
那么只需要将account参数修改为我们需要的账号，如PI:EMAIL，修改后如下：
http://www.xxx.com/repwd?account=foo@163&token=1239392342234
因为这里的Token可重复使用，这样就可以直接修改掉PI:EMAIL账号的密码了，
在测试找回密码功能模块时要留意数据包参数中的账号是否可修改。
12.3.3 修复建议
对找回密码的 Token 做一对一的校验，一个 Token 只能修改一个用户，同时一定要
保证Token不泄露。
12.4 Response状态值修改测试
12.4.1 测试原理和方法
Response状态值修改测试，即修改请求的响应结果来达到密码重置的目的，存在这种
漏洞的网站或者手机App往往因为校验不严格而导致了非常危险的重置密码操作。
这种漏洞的利用方式通常是在服务端发送某个密码重置的凭证请求后，出现特定的响
应值，比如true、1、ok、success等，网站看到回显内容为特定值后即修改密码，通常这
种漏洞的回显值校验是在客户端进行的，所以只需要修改回显即可。
12.4.2 测试流程
Response 状态值修改测试流程主要是分析服务端校验后的结果，正确和错误分别是
什么样的返回结果，通过修改返回结果为正确来欺骗客户端，以达到密码重置的目的，如
图12-17所示。
图12-17 Response状态值修改测试流程
步骤一：某网站的找回密码功能需要发送验证码到用户手机，用户输入收到的验证码
即可重置密码。但是如果他的回显值被修改呢？我们来做个测试，输入要找回的目标手机
号，短信认证码可以随便填写，然后单击“找回密码”按钮对该请求抓包，如图12-18所
示。
图12-18 找回密码页面
步骤二：可以看到这个请求包含了validateCode和phone两个参数，在Burp Suite中右
击intercept选项，选择Do intercept→Response to this request，设置后就可以看到这个请求
的回显Response包了，如图12-19所示，接着单击“Forward”转发这个请求。
图12-19 设置请求响应拦截
步骤三：转发后可以看到Response的回显包已经成功接收到了，但是包返回的值是
false，通常false是失败的含义，也就是说服务端校验验证码的时候发现验证码不一致然后
返回了false给客户端，这里我们可以尝试修改false值为true，然后单击“Intercept is on”按钮
关闭拦截让数据包正常发送，如图12-20、图12-21所示。
图12-20 服务端返回false
步骤四：接着可以看到页面直接跳转到了重置密码页面，如图12-22所示，于是轻松
达到了任意密码修改的目的，在这个测试过程中只需要知道目标的账号而不需要知道任何
绑定邮箱或者验证码就可以修改密码。
图12-21 修改false为true
图12-22 进入重置密码页面
12.4.3 修复建议
注意不要在前端利用服务端返回的值判断是否可以修改密码，要把整个校验环节交给
服务端验证。
12.5 Session覆盖测试
12.5.1 测试原理和方法
找回密码逻辑漏洞测试中也会遇到参数不可控的情况，比如要修改的用户名或者绑定
的手机号无法在提交参数时修改，服务端通过读取当前session会话来判断要修改密码的账
号，这种情况下能否对Session中的内容做修改以达到任意密码重置的目的呢？
在某网站中的找回密码功能中，业务逻辑是：由用户使用手机进行注册，然后服务端
向手机发送验证码短信，用户输入验证码提交后，进入密码重置页面。
对网站中Session覆盖的测试如下：
（1）需要准备自己的账号接收凭证（短信验证码）；
（2）获得凭证校验成功后进入密码重置页面；
（3）在浏览器新标签重新打开找回密码页面，输入目标手机号；
（4）此时当前 Session 账户已经被覆盖，重新回到第二步中打开的重置密码页面即
可重置目标手机号。
12.5.2 测试流程
步骤一：在找回密码页面中输入 A 手机号（尾号 3274），然后单击“下一步”按钮，
如图12-23所示。
图12-23 找回密码第一步
步骤二：单击“立即验证”按钮，接收短信验证码。输入验证码通过验证后，就可以进
入密码重置页面了，如图12-24、图12-25所示。
图12-24 找回密码第二步验证手机号
图12-25 进入重置密码页面
步骤三：这里我们密码重置的目标账号是B手机号（尾号为5743），接下来打开一个
新的标签并进入找回密码第一步的页面，输入B手机号后单击“下一步”按钮，如图12-26所
示。
图12-26 新标签重新进入找回密码覆盖session
步骤四：此时成功进入第二步，向B手机号（尾号为5743）发送验证码。B手机收到
的短信验证码我们无法得知，但是不要担心，在这一步服务端已经将当前Session会话设
置为B手机号（尾号为5743）的用户，这个时候再刷新A手机号（尾号3274）密码重置页
面。
步骤五：通过观察页面上显示的手机号，可以看出已经由A手机号（尾号3274）改为
了B手机号（尾号为5743），这说明Session成功覆盖了。这意味着重置密码将修改的是B
手机号（尾号为5743）的密码，如图12-27所示，这样就又诞生了一个任意密码重置漏
洞。
图12-27 重新进入找回密码页面
12.5.3 修复建议
Session覆盖类似于账号参数的修改，只是以控制当前Session的方式篡改了要重置密
码的账号，在重置密码请求中一定要对修改的账号和凭证是否一致做进一步的校验。
12.6 弱Token设计缺陷测试
12.6.1 测试原理和方法
在找回密码功能中，很多网站会向用户邮箱发送找回密码页面链接。用户只需要进入
邮箱，打开找回密码邮件中的链接，就可以进入密码重置页面了。找回密码的链接通常会
加入校验参数来确认链接的有效性，通过校验参数的值与数据库生成的值是否一致来判断
当前找回密码的链接是否有效。
例如，网站给出的找回密码的url如下，单击这个链接将跳转到重置密码页面。
http://www.xxx.com/findpwd?uid=xx-uu-xx-sxx&token=1497515314
观察这个链接的参数，uid参数可能是对应修改密码的账户，Token就是之前提到的校
验参数了，这个参数的值看起来像一个时间戳，猜测系统生成这个token的机制就是使用
的时间戳。把这个值通过时间格式化后发现确实变成了日期，那么这个Token就是可预测
的一个时间范围的时间戳，只需要通过这个时间段就可以推测或者暴力枚举出系统生成的
时间戳值了，如图12-27所示。
图12-28 时间戳转换
类似这样的弱Token现象有很多，比如将用户的uid加密成MD5或者base64编码，或者
直接用uid+4位随机数等这种可预测性的内容作为Token，测试时只需要多发几个找回密码
的请求观察系统每次发送的找回密码链接中的参数值是否有规律即可。
12.6.2 测试流程
步骤一：在类似的接收凭证方式的密码找回功能中，填写邮箱或者手机号，多单击几
次发送验证信息，可以在邮箱中获得多个找回密码的凭证，如图12-29、图12-30所示。
图12-29 发送验证信息
图12-30 接收多个找回密码邮件
图12-31 找回密码邮件内容
步骤二：邮箱中收到多封密码找回邮件，观察链接中的密码找回凭证是否有规律可
循，以下列出几个找回密码的链接。
第一封邮件：