```
$ scp -r PI:EMAIL:/home/ostechnix/Documents Downloads/
```
上述命令将从远程系统将整个 `Documents` 目录复制到本地的 `Downloads` 目录。
#### 7. 使用 SCP 在两台远程计算机之间复制文件
使用 `scp` 命令将文件从一个远程系统直接复制到另一个远程系统，运行：
```
$ scp PI:EMAIL:/home/senthil/File1.txt PI:EMAIL:/home/kumar/
```
它会要求你输入两个远程系统的密码：
其中，
* `PI:EMAIL` - 文件源端远程系统的用户名和 IP 地址
* `/home/senthil/File1.txt` - 复制的文件名及其位置
* `PI:EMAIL` - 复制文件到目标端的用户名和 IP 地址
* `/home/kumar` - 在目标端上保存复制文件的位置
上述命令将从远程主机 `192.168.1.40` 复制 `/home/senthil/File1.txt` 到 `192.168.1.20` 上的 `/home/kumar/` 目录。
在这种方法中，数据将直接从一个远程系统传输到另一个远程系统。如果你想通过本地机器路由流量，使用 `-3` 参数，如下所示：
```
$ scp -3 PI:EMAIL:/home/senthil/File1.txt PI:EMAIL:/home/kumar/
```
#### 8. 使用 SCP 复制文件时启用压缩
到目前为止，我们在没有压缩的情况下传输了文件。现在我们将使用 `-C` 参数在传输文件时启用压缩。
```
$ scp -C File1.txt PI:EMAIL:/home/ostechnix/
```
`-C` 参数将在源端启用压缩，并在目标端自动解压数据。
通过启用压缩，可以显著提高文件复制或传输速度。
#### 9. 使用 SCP 传输文件时限制带宽
我们可以使用 `-l` 参数限制带宽。注意，最大带宽单位为 Kbits/s。1 Byte = 8 bit。因此，如果你想将带宽限制在 200KB/s，`-l` 的值将是 **1600**（200\*8）。
```
$ scp -l 1600 File1.txt PI:EMAIL:/home/ostechnix/
```
这在传输大文件时非常有用，可以防止 SCP 限制带宽。
#### 10. 使用 SCP 复制文件时使用不同端口
作为系统管理员，出于安全原因，你可能在远程服务器上 [更改了 SSH 协议的默认端口](https://ostechnix.com/how-to-change-apache-ftp-and-ssh-default-port-to-a-custom-port-part-3/)。这种情况下，你可以在传输文件时使用 `-P` 参数指定端口号。注意：大写的 `P`。
```
$ scp -P 2022 File1.txt PI:EMAIL:/home/ostechnix/
```
#### 11. 使用 SCP 复制文件时使用不同的加密方法
默认情况下，SCP 使用 `AES-128` 对文件进行加密。如果你想使用不同的加密方法，使用 `c` 参数。
例如，如果你想使用 **3des-cbc** 加密方法，命令如下所示：
```
$ scp -c 3des-cbc File1.txt PI:EMAIL:/home/ostechnix/
```
要查看支持的密码列表，执行：
```
$ ssh -Q cipher localhost | paste -d, -s -
```
示例输出：
```
3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,PI:EMAIL,aes128-ctr,aes192-ctr,aes256-ctr,PI:EMAIL,PI:EMAIL,PI:EMAIL
```
#### 12. 在详细模式下使用 SCP 复制文件
如果你想知道使用 `scp` 复制文件时幕后发生了什么，你可以使用 `-v` 参数。使用详细模式传输文件时，终端上会显示执行 `scp` 命令执行的每一步过程。这在故障排除时很方便。
```
$ scp -v File1.txt PI:EMAIL:/home/ostechnix/
```
在详细模式下发送文件时，你将看到大量输出，如下所示：
![在详细模式下使用 SCP 复制文件](/data/attachment/album/202212/24/152255vu039jzvzeeuc9mn.png)
#### 13. 在安静模式下使用 SCP 传输文件
我们可以使用 `-q` 参数在安静模式下传输文件。在安静模式下共享文件时，不会在输出中显示进度、警告或诊断信息。
```
$ scp -q File1.txt PI:EMAIL:/home/ostechnix/
```
#### 14. 使用 SCP 传输文件时保留文件属性
使用 `-p` 参数可以保留文件修改时间、访问时间和模式等文件属性。注意，这是**小写的 p**。
```
$ scp -p File1.txt PI:EMAIL:/home/ostechnix/
```
#### 15. 使用 SCP 复制文件时使用身份文件
SSH 同时支持基于密码和密钥的身份验证。密钥是 Linux 环境中使用最广泛的身份验证方法。
如果你想在传输文件时使用基于密钥的身份验证，使用 `-i` 参数指定身份文件或私钥。
```
$ scp -i my_private_key.pem File1.txt PI:EMAIL:/home/ostechnix/
```
#### 16. 使用不同的 ssh 配置文件
在某些情况下，你需要使用不同的网络来连接到 Linux 系统，或你有一个代理服务器。这在情况下，你可以配合 `-F` 参数使用不同的 `ssh_config` 文件。
```
$ scp -F /home/ostechnix/my_ssh_config File1.txt PI:EMAIL:/home/ostechnix/
```
#### 17. 使用 IPv4 或 IPv6 复制文件
在复制文件时，我们可以强制 SCP 只使用 IPv4 或 IPv6 地址。IPv4 网络添加 `-4` 参数，IPv6 网络添加 `-6` 参数可以实现这一点。
```
$ scp -6 File1.txt PI:EMAIL:/home/ostechnix/
```
### 常见问题
#### 问题 1：什么是 SCP？
SCP 是一个命令行程序，旨在将文件和目录从本地系统安全地传输到远程系统，反之亦然，或者直接在两个远程系统之间传输。
#### 问题 2: 如何使用 SCP 将文件从本地复制到远程计算机？
将文件从本地复制到远程系统，命令如下：
```
scp SourceFile.txt User@RemoteHost:/some/remote/directory
```
#### 问题 3：如何递归复制文件和目录？
递归复制包含子目录的目录，使用 `-r` 参数：
```
scp -r /some/local/directory User@RemoteHost:/some/remote/directory
```
#### 问题 4：使用 SCP 可以传输多个文件吗？
当然，只要用空格分隔源文件名即可。
从本地复制多个文件到远程：
```
scp file1.txt file2.txt file3.txt User@RemoteHost:/some/remote/directory
scp {file1,file2,file3}.txt User@RemoteHost:/some/remote/directory
scp *.txt User@RemoteHost:/some/remote/directory
```
从远程复制多个文件到本地：
```
scp User@RemoteHost:/some/remote/directory/\{file1.txt,file2.txt,file3.txt\} /some/local/directory
```
从一个远程系统复制多个文件到另一个远程系统：
```
$ scp User@RemoteHost1:/some/remote/directory/\{file1.txt,file2.txt,file3.txt\} User@RemoteHost2:/some/remote/directory/
```
#### 问题 5：如何传输目录下的所有文件？
传输整个目录，首先进入该目录：
```
cd dir_name
```
然后，
```
scp *.txt User@RemoteHost:/some/remote/directory
```
#### 问题 6：可以压缩文件吗？
当然。使用 `-C` 压缩文件。文件会在源端压缩，在目标端自动解压缩。
```
scp -C /some/large/file User@RemoteHost:/some/remote/directory
```
#### 问题 7：可以保留文件属性吗？
保留原始文件的修改时间、访问时间和模式等文件属性，使用 `-p` 参数。
```
scp -p file.txt User@RemoteHost:/some/remote/directory
```
#### 问题 8: 可以使用其他端口吗？
当然。SCP 配合 `-P` 参数允许你使用其他端口。
```
scp -P 2022 file.txt User@RemoteHost:/some/remote/directory
```
#### 问题 9: 可以使用不同的加密方法吗？
当然。使用 `-c` 参数。
```
scp -c 3des-cbc User@RemoteHost:/some/remote/directory
```
#### 问题 10: 如何列出 SSH 支持的加密方法？
使用以下命令查看 SSH 和 SCP 支持的加密方法列表：
```
ssh -Q cipher localhost | paste -d, -s -
```
#### 问题 11：SCP 真的安全吗？
当然，它用起来是完全安全的。SCP 和 openSSH 使用相同的 SSH 机制。传输的数据在源端加密，目标端解密。
#### 问题 12：可以从 Windows 系统传输文件到 Linux 吗？
当然。使用 `PSCP` 程序将文件从 windows 传输到 Linux 平台，你也可以使用 `WinSCP`。
### 总结
在这篇全面指南中，我们了解了什么是 SCP，以及如何在 Linux 中使用 **SCP 安全地传输文件**，其中包括 **17 个 SCP 命令示例**，另外还回答了关于 SCP 的常见问题。
无论你是 Linux 管理人员、开发人员还是普通用户，你都会面临某个时候将文件复制到远程系统或从远程系统复制文件的情况，知道如何**使用 SCP 安全地复制文件**将是非常有用的。
---
via: 
作者：[sk](https://ostechnix.com/author/sk/) 选题：[lkxed](https://github.com/lkxed) 译者：[MjSeven](https://github.com/MjSeven) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出