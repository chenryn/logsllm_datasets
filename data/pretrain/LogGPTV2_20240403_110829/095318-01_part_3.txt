$mkdir -p tmp amrood test
$
该命令会创建所有不存在的上级目录
。
3.4.4 删除目录
可以使用 命令来删除目录 例如
rmdir , :
$rmdir dirname
$
注意 删除目录时请确保目录为空 不会包含其他文件或目录
: , 。
也可以使用 命令同时删除多个目录
rmdir 。
$rmdir dirname1 dirname2 dirname3
$
如果 为空 则会被删除 成功删除目录后不会输
dirname1、dirname2、dirname3 , 。rmdir
出任何信息
。
3.4.5 改变所在目录
可以使用 命令来改变当前所在目录 进入任何有权限的目录 语法为
cd , , :
$cd dirname
其中 为路径 既可以为相对路径 也可以为绝对路径 例如
,dirname , , 。 :
$cd usr local bin
$
43
可以进入 目录 可以使用相对路径从这个目录进入
/usr/local/bin 。 /usr/home/amrood
目录
。
$cd home amrood
$
3.4.6 重命名目录
命令也可以用来重命名目录 语法为
mv(move) , :
$mv olddir newdir
下面的例子将会把 目录重命名为 目录
mydir yourdir 。
$mv mydir yourdir
$
3.5 Linux文件权限和访问模式
为了更加安全地存储文件 为不同的文件赋予了不同的权限 每个文件都拥有下
,Linux ,
面 种权限
3 。
所有者权限 文件所有者能够进行的操作
• : 。
组权限 文件所属用户组能够进行的操作
• : 。
外部权限 其他权限 其他用户可以进行的操作
• ( ): 。
3.5.1 查看文件权限
使用 命令可以查看与文件权限相关的信息
“ls-l” 。
$ls -l home amrood
-rwxr-xr-- 1 amrood users 1024 Nov 2 00 10 myfile
drwxr-xr--- 1 amrood users 1024 Nov 2 00 10 mydir
第一列包含了文件或目录的权限 第一列的第一个字符代表文件类型 代表是普通文
。 ,-
件 代表是文件夹 而接下来的字符所对应的权限一共分成 组 个一组 分别属于文件
,d 。 3 ,3 ,
所有者 文件所属用户组和其他用户 权限中的每个字符都代表不同的权限 其中分别为读
、 。 ,
取 写入 和执行
(r)、 (w) (x)。
第一组字符 表示文件所有者的权限 表示所有者拥有读取 写
(2~4) ,-rwxr-xr-- (r)、
入 和执行 的权限
(w) (x) 。
第二组字符 表示文件所属用户组的权限 表示该组拥有读取 和执
(5~7) ,-rwxr-xr-- (r)
行 的权限 但没有写入权限
(x) , 。
第三组字符 表示所有其他用户的权限 表示其他用户只能读取
(8~10) ,rwxr-xr-- (r)
文件
。
44
3.5.2 文件访问模式
文件权限是 系统的第一道安全防线 基本的权限有读取 写入 和执行
Linux , (r)、 (w) (x)。
读取 用户能够读取文件信息 查看文件内容
: , 。
写入 用户可以编辑文件 可以向文件写入内容 也可以删除文件内容
: , , 。
执行 用户可以将文件作为程序来运行
: 。
3.5.3 目录访问模式
目录的访问模式和文件类似 但是稍有不同
, 。
读取 用户可以查看目录中的文件
: 。
写入 用户可以在当前目录中删除文件或创建文件
: 。
执行 执行权限赋予用户遍历目录的权利 例如 执行 和 命令
: , , cd ls 。
3.5.4 改变权限
可以使用 命令来改变文件或目录的访问权限 权限可以使用符
chmod(changemode) ,
号或数字来表示
。
1. 使用符号表示权限
对于初学者来说 最简单的就是使用符号来改变文件或目录的权限 用户可以增加
, , (+)
和删除 权限 也可以指定特定权限 表 列举了权限更改符号
(-) , 。 3-3 。
表3-3 权限更改符号
符 号 说 明
为文件或目录增加权限
+
删除文件或目录的权限
-
设置指定的权限
=
下面的例子将会修改 文件的权限
testfile 。
$ls -l testfile
-rwxrwxr-- 1 amrood users 1024 Nov 2 00 10 testfile
$chmod o+wx testfile
$ls -l testfile
-rwxrwxrwx 1 amrood users 1024 Nov 2 00 10 testfile
$chmod u-x testfile
$ls -l testfile
-rw-rwxrwx 1 amrood users 1024 Nov 2 00 10 testfile
$chmod g=rx testfile
$ls -l testfile
-rw-r-xrwx 1 amrood users 1024 Nov 2 00 10 testfile
也可以同时使用多个符号
。
$chmod o+wx u-x g=rx testfile
$ls -l testfile
-rw-r-xrwx 1 amrood users 1024 Nov 2 00 10 testfile
45
2. 使用数字表示权限
除了符号 也可以使用八进制数字来指定具体权限 如表 所示
, , 3-4 。
表3-4 使用数字表示权限
数 字 说 明 权 限
没有任何权限
0 ---
执行权限
1 --x
写入权限
2 -w-
执行权限和写入权限 执行 写入
3 :1( )+2( )=3 -wx
读取权限
4 r--
读取和执行权限 读取 执行
5 :4( )+1( )=5 r-x
读取和写入权限 读取 写入
6 :4( )+2( )=6 rw-
所有权限 读取 写入 执行
7 :4( )+2( )+1( )=7 rwx
下面的例子 首先使用 命令查看 文件的权限 然后使用 命令更改权限
, “ls-l” testfile , chmod 。
$ls -l testfile
-rwxrwxr-- 1 amrood users 1024 Nov 2 00 10 testfile
$ chmod 755 testfile
$ls -l testfile
-rwxr-xr-x 1 amrood users 1024 Nov 2 00 10 testfile
$chmod 743 testfile
$ls -l testfile
-rwxr---wx 1 amrood users 1024 Nov 2 00 10 testfile
$chmod 043 testfile
$ls -l testfile
----r---wx 1 amrood users 1024 Nov 2 00 10 testfile
3.5.5 更改所有者和用户组
在 中 每添加一个新用户 就会为它分配一个用户 和群组 上面提到的文
Linux , , ID ID,
件权限也是基于用户和群组来分配的
。
有如下两个命令可以改变文件的所有者或群组
。
命令是 的缩写 用来改变文件的所有者
chown:chown changeowner , 。
命令是 的缩写 用来改变文件所在的群组
chgrp:chgrp changegroup , 。
命令用来更改文件所有者 其语法如下
chown , 。
$ chown user filelist
可以是用户名或用户 例如
user ID, :
$ chown amrood testfile
$
该命令将 文件的所有者改为
testfile amrood。
注意 超级用户 可以不受限制地更改文件的所有者和用户组 但是普通用户只能
: root ,
更改所有者是自己的文件或目录
。
46
命令用来改变文件所属群组 其语法为
chgrp , :
$ chgrp group filelist
可以是群组名或群组 例如
group ID, :
$ chgrp special testfile
$
上述命令将文件 的群组改为
testfile special。
在 中 一些程序需要特殊权限才能完成用户指定的操作 例如 用户的密码保存
Linux , 。 ,
在 文件中 出于安全考虑 一般用户没有读取和写入的权限 但是当我们使用
/etc/shadow , , 。
命令来更改密码时 需要对 文件有写入权限 这就意味着 程
passwd , /etc/shadow 。 ,passwd
序必须要给我们一些特殊权限 才可以向 文件写入内容
, /etc/shadow 。
通过给程序设置 和 位来赋予普通用户
Linux SUID(SetUserID) SGID(SetGroupID)
特殊权限 当运行一个带有 位的程序时 就会继承该程序所有者的权限 如果程序
。 SUID , 。
不带 位 则会根据程序使用者的权限来运行
SUID , 。
也是一样 一般情况下程序会根据用户的组权限来运行 但是给程序设置
SGID 。 , SGID
后 就会根据程序所在组的组权限运行
, 。
如果程序设置了 位 则会在表示文件所有者可执行权限的位置上出现' ' 同样
SUID , s。 ,
如果设置了 则会在表示文件群组可执行权限的位置上出现' ' 如下所示
SGID, s。 :
$ ls -l usr bin passwd
-r-sr-xr-x 1 root bin 19031 Feb 7 13 47 usr bin passwd
*
$
执行命令后的第四个字符不是' '或' ' 而是' ' 说明 文件设置了
x -, s, /usr/bin/passwd
位 这时普通用户会以 用户的权限来执行 程序
SUID , root passwd 。
注意 小写字母' '说明文件所有者有执行权限 大写字母' '说明程序所有者没有执
: s (x), S
行权限
(x)。
如果在表示群组权限的位置上出现 位 那么也仅有 类用户可以删除该目录下
SGID , 3
的文件 目录所有者 文件所有者 超级用户
: 、 、 root。
为一个目录设置 和 位可以使用下面的命令
SUID SGID 。
$ chmod ug+s dirname
$ ls -l
drwsr-sr-x 2 root root 4096 Jun 19 06 45 dirname
$
3.6 Linux环境变量
在 中 环境变量是一个很重要的概念 环境变量可以由系统 用户 及其他
Linux , 。 、 、Shell
程序来设定 这里变量就是一个可以被赋值的字符串 赋值范围包括数字 文本 文件名 设
。 , 、 、 、
47
备及其他类型的数据
。
下面的例子将为变量 赋值 然后使用 命令输出
TEST , echo 。
$TEST="Linux Programming"
$echo $TEST
Linux Programming
注意 变量赋值时前面不能加 符号 变量输出时必须要加 前缀 退出 时 变
: $ , $ 。 Shell ,
量将消失
。
登录系统后 会有一个初始化的过程 用来设置环境变量 这个阶段 会读
,Shell , 。 ,Shell
取 和 两个文件 过程如下
/etc/profile .profile , :