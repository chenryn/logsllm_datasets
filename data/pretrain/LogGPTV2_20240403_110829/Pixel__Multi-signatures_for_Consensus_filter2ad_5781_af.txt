以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 引用文献

[33] Felix Günther, Britta Hale, Tibor Jager, 和 Sebastian Lauer. 0-RTT密钥交换与完全前向保密. 在Jean-Sébastien Coron和Jesper Buus Nielsen编辑的EUROCRYPT 2017第三部分中，LNCS第10212卷，第519-548页。Springer, Heidelberg, 2017年4月至5月。

[34] Timo Hanke, Mahnush Movahedi, 和 Dominic Williams. DFINITY技术概览系列：共识系统, 2018年。

[35] K. Itakura 和 K. Nakamura. 适合数字多重签名的公钥密码系统. 技术报告, NEC Research and Development, 1983年。

[36] Gene Itkis 和 Leonid Reyzin. 具有最优签名和验证的前向安全签名. 在Joe Kilian编辑的CRYPTO 2001中，LNCS第2139卷，第332-354页。Springer, Heidelberg, 2001年8月。

[37] Thomas Kerber, Aggelos Kiayias, Markulf Kohlweiss, 和 Vassilis Zikas. Ouroboros Crypsinous: 保护隐私的权益证明. 在IEEE Symposium on Security and Privacy SP, 第157-174页, 2019年。

[42] Derek Leung, Adam Suhl, Yossi Gilad, 和 Nickolai Zeldovich. Vault: Algorand加密货币的快速引导. 在第26届年度网络与分布式系统安全研讨会(NDSS 2019), 美国加利福尼亚州圣迭戈, 2019年2月24-27日。

[43] Steve Lu, Rafail Ostrovsky, Amit Sahai, Hovav Shacham, 和 Brent Waters. 无随机预言机的顺序聚合签名和多签名. 在Serge Vaudenay编辑的EUROCRYPT 2006中，LNCS第4004卷，第465-485页。Springer, Heidelberg, 2006年5月至6月。

[44] Changshe Ma, Jian Weng, Yingjiu Li, 和 Robert H. Deng. 基于离散对数的高效多签名方案在纯公钥模型中的应用. Designs, Codes and Cryptography, 54(2):121–133, 2010年。

[45] Di Ma 和 Gene Tsudik. 前向安全的顺序聚合认证. 在2007 IEEE Symposium on Security and Privacy (S&P 2007)中，第86-91页。IEEE Computer Society, 2007年。

[46] Tal Malkin, Daniele Micciancio, 和 Sara K. Miner. 有效通用的前向安全签名，具有无限数量的时间周期. 在Lars R. Knudsen编辑的EUROCRYPT 2002中，LNCS第2332卷，第400-417页。Springer, Heidelberg, 2002年4月至5月。

[47] Silvio Micali. ALGORAND: 高效且民主的账本. CoRR, abs/1607.01341, 2016年。

[38] Thomas Kerber, Markulf Kohlweiss, Aggelos Kiayias, 和 Vassilis Zikas. Ouroboros Crypsinous: 保护隐私的权益证明. Cryptology ePrint Archive, Report 2018/1132, 2018年。
https://eprint.iacr.org/2018/1132.

[48] Silvio Micali, Kazuo Ohta, 和 Leonid Reyzin. 可问责子组多签名: 扩展摘要. 在Michael K. Reiter和Pierangela Samarati编辑的ACM CCS 2001中，第245-254页。ACM Press, 2001年11月。

[39] Aggelos Kiayias, Alexander Russell, Bernardo David, 和 Roman Oliynykov. Ouroboros: 一种可证明安全的权益证明区块链协议. 在Jonathan Katz和Hovav Shacham编辑的CRYPTO 2017第一部分中，LNCS第10401卷，第357-388页。Springer, Heidelberg, 2017年8月。

[40] Eleftherios Kokoris-Kogias, Philipp Jovanovic, Nicolas Gailly, Ismail Khoffi, Linus Gasser, 和 Bryan Ford. 通过集体签名增强比特币的安全性和性能以实现强一致性. 在Thorsten Holz和Stefan Savage编辑的USENIX Security 2016中，第279-296页。USENIX Association, 2016年8月。

[41] Hugo Krawczyk. 从任何签名方案中简单地构建前向安全签名. 在Dimitris Gritzalis, Sushil Jajodia, 和 Pierangela Samarati编辑的ACM CCS 2000中，第108-115页。ACM Press, 2000年11月。

[49] Satoshi Nakamoto. 比特币: 一种点对点电子现金系统. http://bitcoin.org/bitcoin.pdf, 2008年。

[50] Kazuo Ohta 和 Tatsuaki Okamoto. 基于Fiat-Shamir方案的数字多签名方案. 在Hideki Imai, Ronald L. Rivest, 和 Tsutomu Matsumoto编辑的ASIACRYPT'91中，LNCS第739卷，第139-148页。Springer, Heidelberg, 1993年11月。

[51] Rafael Pass 和 Elaine Shi. Thunderella: 具有乐观即时确认的区块链. 在EUROCRYPT, 第3-33页, 2018年。

[52] Andrew Poelstra. 关于权益和共识. https://download.wpsoftware.net/bitcoin/pos.pdf, 2015年。

[53] Thomas Ristenpart 和 Scott Yilek. 拥有证明的力量: 保护多方签名免受恶意密钥攻击. 在Moni Naor编辑的EUROCRYPT 2007中，LNCS第4515卷，第228-245页。Springer, Heidelberg, 2007年5月。

[54] David Schwartz, Noah Youngs, 和 Arthur Britto. Ripple协议共识算法. Ripple Labs Inc白皮书, https://ripple.com/files/ripple_consensus_whitepaper.pdf, 2014年。

[55] N. R. Sunitha 和 B. B. Amberker. 前向安全多签名. 在Manish Parashar和Sanjeev K. Aggarwal编辑的分布式计算与互联网技术国际会议(ICDCIT 2008)中，LNCS第5375卷。Springer, 2009年。

[56] Algorand团队. Algorand区块链特性规范版本1.0. Github, 2019年。

[57] Algorand团队. Algorand拜占庭容错协议规范. Github, 2019年。

[58] Elrond团队. Elrond: 通过自适应状态分片和安全的权益证明实现的高度可扩展的公共区块链. https://elrond.com/files/Elrond_Whitepaper_EN.pdf, 2019年。

[59] ZILLIQA团队. ZILLIQA技术白皮书, 2017年. http://docs.zilliqa.com/whitepaper.pdf.

[60] Riad S. Wahby 和 Dan Boneh. 快速简单的常数时间哈希到BLS12-381椭圆曲线. IACR TCHES, 2019(4):154–179, 2019年.
https://tches.iacr.org/index.php/TCHES/article/view/8348.

[61] Jia Yu, Fanyu Kong, Xiangguo Cheng, Rong Hao, Yangkui Chen, Xuliang Li, 和 Guowen Li. 前向安全多签名、门限签名和盲签名方案. Journal of Networks, 5(6):634–641, 2010年。

### 安全性证明

**证明**: 我们将通过两个步骤来证明该定理。首先，我们展示当消息空间\( M = \{0,1\}^\kappa \)且\( H_q \)为恒等函数时（即将一个\(\kappa\)-位字符串解释为整数），该方案是选择性安全的。

**第一步: sfu-cma**. 我们证明当消息空间\( M = \{0,1\}^\kappa \)且\( H_q \)为恒等函数时，该方案在\((\ell-\text{wBDHI}^*_3)\)假设下是sfu-cma安全的。通过描述一个算法\( B \)，给定一个成功的sfu-cma伪造者\( A' \)，解决\((\ell-\text{wBDHI}^*_3)\)问题。输入\((A_1 = g^{\alpha_1}, B_1 = g^{\alpha_2}, \ldots, B_\ell = g^{\alpha_\ell}, C)\)，算法\( B \)如下进行。

它首先运行\( A \)以获得\((\bar{t}, t^*, M^*)\)。即，\( A \)接收\( sk_{\bar{t}} \)并生成对\( t^* \)和\( M^* \)的伪造。设\( w^* \in \{0,1,2\}^{\ell-1} \)使得\( w^* = w^*_{\ell-1} \| 0^{\ell-1-|t^*|} \)。然后设置公钥和公开参数为：
\[ y \leftarrow B_1^{w^*} \]
\[ h \leftarrow g^\gamma \]
\[ h_0 \leftarrow g^{\gamma_0} \]
\[ h_i \leftarrow g^{\gamma_i} \cdot A_1^{-w^*_{\ell-i+1}} \cdot A^{-M^*} \cdot \prod_{j=1}^{\ell-1} A_j^{w^*_{\ell-j+1}} \]
其中\(\gamma, \gamma_0, \ldots, \gamma_\ell \xleftarrow{\$} \mathbb{Z}_q\)。

通过这样设置参数，\( B \)隐式地设置了\( x = \alpha_1 \cdot g^{\alpha_{\ell+1}} \)。这种归约使我们能够实现两个目标：

- 从\( t^* \)和\( M^* \)的伪造中提取\( hx \)的值（由\( A' \)提供），允许\( B \)轻松计算其\((\ell-\text{wBDHI}^*_3)\)解\( e(g_1, C)^{\alpha_{\ell+1}} \)；
- 模拟所有不是\( w^* \)前缀的\( w' \in \{0,1,2\}^{\leq \ell-1} \)的\(\tilde{sk}_{w'}\)；这有助于模拟签名和破坏预言机。

算法\( B \)响应\( A' \)的预言机查询如下：

- **密钥更新**: \( B \)只需跟踪当前的时间段\( t \)即可，无需模拟其他内容。
- **签名**: 我们首先描述如何回答时间段\( t \neq t^* \)的消息\( M \)的签名查询，然后描述\( t = t^* \)且\( M \neq M^* \)的情况。设\( w \in \{0,1,2\}^{\ell-1} \)使得\( w = t \| 0^{\ell-1-|t|} \)。

  - **情况1: \( t \neq t^* \)**. 显然，\( t \neq t^* \Rightarrow w \neq w^* \)。（这里关键使用了\( t, t^* \in \{1,2\}^* \)的事实。）设\( w' = w_1 \| \cdots \| w_k \)表示\( w \)的最短前缀，该前缀不是\( w^* \)的前缀。扩展\(\tilde{sk}_{w'}\)的记号，\( B \)可以推导出有效的密钥\(\tilde{sk}_{w'}\)，从而容易推导出\(\tilde{sk}_w\)和\( t, M \)的签名。回顾\(\tilde{sk}_{w'}\)的结构为：
    \[
    (\tilde{sk}_{w'}) = (c, d, e_{k+1}, \ldots, e_\ell) = \left( g^r, \left( h_0 \cdot \prod_{i=1}^k h_{w_i} \right)^r, h_r^{k+1}, \ldots, h_r^\ell \right)
    \]
    对于均匀分布的\( r \)值。首先关注第二部分\( d \)，我们有：
    \[
    d = \left( h_0 \cdot \prod_{i=1}^k h_{w_i} \right)^r
    \]
    设四个括号内的因子分别为\( F_1, F_2, F_3, F_4 \)，它们的乘积为\( F \)。如果令
    \[
    r \leftarrow r' + \frac{\alpha_k (k - w^*_k)}{w^*_k - w_k} \mod q
    \]
    其中\( r' \xleftarrow{\$} \mathbb{Z}_q \)，则我们有
    \[
    d = A^\gamma \cdot g^{\alpha_{\ell+1}} \cdot F^{r'}
    \]
    这个乘积中的第一个和第三个因子很容易计算。第二个因子允许\( B \)计算其\((\ell-\text{wBDHI}^*_3)\)解\( e(g^{\alpha_{\ell+1}}, C) \)，因此\( B \)不能直接计算它。最后一个因子\( F \)可以写成以下四个因子的乘积：
    \[
    F_1, F_2, F_3, F_4
    \]

---

希望这些修改能使文本更加清晰、连贯和专业。如果有进一步的修改需求，请告知。