Consider:
    using BenchmarkTools
    struct Foo{T}
        x::T
    end
    const m = [1,2,3]
    const k = 1:3
    @btime Foo(k);
    @btime Foo(m);
Output:
    julia> @btime Foo(k);
      0.029 ns (0 allocations: 0 bytes)
    julia> @btime Foo(m);
      4.952 ns (1 allocation: 16 bytes)
It doesn't seem like `Foo(m)` should allocate when `Foo(k)` can avoid it.
* * *