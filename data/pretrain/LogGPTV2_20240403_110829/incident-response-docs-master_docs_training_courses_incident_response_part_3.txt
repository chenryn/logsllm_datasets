_033. Make a decision._
Once we have a collection of actions and their associated risks, it's time to make a decision. Sometimes there's an obvious path forward, with one option being clearly better. But sometimes you're presented with two equally bad options.
There’s no golden rule here I can give you, it’ll be up to context and your company culture. But my advice if you can't decide between two options is to literally flip a coin. **Making the wrong decision is better than making no decision.** Making no decision doesn't help to make forward progress, you learn nothing new and the incident is still going on. Making a decision, even if it's the "wrong" one will give you more information. If it turns out to be wrong, you can then put all your resources into the other option.
A wrong decision gives you more useful information, making no decision gives you nothing. You want to avoid [decision paralysis](https://xkcd.com/1801/) at all costs, as it can prolong your incident further.
???+ aside hide-arrow "'Do nothing' is an acceptable decision."
    I should note that the above advice is intended for the situation when you can't decide between two options. "Do nothing" is a perfectly acceptable decision if that's the course of action you want to take. It is sometimes appropriate to get more information by waiting and seeing what changes.
---
### Gain Consensus
![034](../../assets/slides/incident_response/incident_response.034.jpeg)
_034. Gain consensus._
Once we've made a decision, we need to gain consensus for our plan. But wait, why? Didn't I say earlier that the IC is basically a dictator and everyone should follow their instructions? While technically true, we want to be sure we give a chance to listen to any potential problems our experts may have with the plan. We don't want people to come back later and say things like "I knew that wouldn't work". We want to make sure we stop the [hindsight 20/20 problem](https://en.wikipedia.org/wiki/Hindsight_bias). It demotivates responders, and wastes time.
But gaining consensus amongst a large group of people can be a bit difficult.
---
### Blue Background
![035](../../assets/slides/incident_response/incident_response.035.jpeg)
_035. This background is blue._
Let's look at a quick example to show what I mean,
> I propose that this background is blue. Does everyone agree?
???+aside hide-arrow "Audience participation!"
    This is where I would usually get few people from the audience nodding or quietly saying "Yes". I'll point to about 5 or 6 people who did nothing and ask them one by one if they agree. Until it gets uncomfortable.
See how long it’s taking us to reach consensus? **Distributed consensus is hard**, you’ll be there forever trying to agree on the proposed actions.
Let's try it a different way,
> I propose that this background is blue. Are there any strong objections? ... Hearing none, the background is blue, let's proceed.
---
### Any Strong Objections?
![036](../../assets/slides/incident_response/incident_response.036.jpeg)
_036. Are there any strong objections? [Docs Reference](../../training/incident_commander.md#gaining-consensus-polling-during-a-decision)_
See how much faster that was? I **implicitly got the consensus of everyone in the room**, so none of you could come back later and say you didn't think the background was blue, because I gave you all a chance to object.
Doing it this way optimizes for the 99% case. Most of the time there won’t be any objections and you can just continue. But likewise, we don't really care if people agree with us. We care if people _disagree_, that's the information we need the most. If you ask everyone to agree, you may get one person saying "No" with a really important point, but you can't hear them because everyone else is saying "Yes".
---
### Strong
![037](../../assets/slides/incident_response/incident_response.037.jpeg)
_037. STRONG objections._
This is one of the most useful phrases in your toolkit as an IC as it allows you to get consensus on a decision very quickly, and prevents the hindsight problem from popping up later. The way we phrased it though is important, the word "**strong**" subconsciously instills in people that we're still in an incident situation, and normal concerns might not apply.
Make sure to leave enough of a pause for people to raise any objections they may have. It's no good asking for strong objections then moving on. All responders need to have the opportunity to raise a concern.
So now that we have consensus, we need to execute the plan, that means assigning the task to someone. Before we do that though, I have a quick question.
---
### How Long Have I Been Talking?
![038](../../assets/slides/incident_response/incident_response.038.jpeg)
_038. How long have I been talking?_
At the start, I asked if someone could keep track of the time for me. Did anyone actually do that? Can anyone tell me exactly how long I've been talking?
Probably not. But why not? I clearly asked.
It's likely because of how I phrased the question.
---
### Bystander Effect
![039](../../assets/slides/incident_response/incident_response.039.jpeg)
_039. Bystander effect._
I said "Can someone...". This is called the [bystander effect](https://en.wikipedia.org/wiki/Bystander_effect). Everyone assumed someone else was doing it, so no one ended up doing it. If by some chance, someone actually did do it, you won't know who it is anyway, or if they've even started.
A good example of this is if there's a medical emergency, and you shout "Somebody call 911!", you'll find that no one does, because everyone assumes someone else is doing it. If you're ever in that situation, you want to point to someone and say "You, call 911". Then it'll get done.
???+ aside hide-arrow "Localization"
    If you're outside the US, substitute 911 for whatever your local emergency number is. You probably don't want to be shouting "You, call 911" if you're in Europe for example.
So what I should've done was point to someone in the room and say,
> You, please keep track of the time and give me a little wave when we get to 30 minutes, starting now. Understood?
See how different that was?
---
### Assigning Tasks
![040](../../assets/slides/incident_response/incident_response.040.jpeg)
_040. Assigning tasks. [Docs Reference](../../training/incident_commander.md#assigning-tasks)_
In the context of an incident, that might look like this. It's a little more verbose than "Can someone investigate the cause?", but it's a lot clearer what I want to happen. Brings us back to clear is better than concise from earlier.
Several important things happened in this exchange as I was assigning the task.
---
### Assign Specific People
![041](../../assets/slides/incident_response/incident_response.041.jpeg)
_041. Assign tasks to a specific person._
First, the task was assigned **directly to a specific person**. It’s ok to assign it to a role to “DBA on-call…”, etc. But it must be a single individual. Don't assign things to a group, because they won't get done.
---
### Time Limit
![042](../../assets/slides/incident_response/incident_response.042.jpeg)
_042. Time-box all tasks._
Second, the task was given a time-limit. This means the SME knows exactly how long until I come back to them for an answer, so they won’t be surprised or caught off guard. It sets the expectations.
---
### Acknowledgement
![043](../../assets/slides/incident_response/incident_response.043.jpeg)
_043. Get acknowledgement._
Finally, I confirmed that they had understood the instructions and are going to carry them out. So I don’t come back in 5 minutes and find they never started, or have additional questions.
---
### Followup
![044](../../assets/slides/incident_response/incident_response.044.jpeg)
_044. Followup._
Then after the time is up, we can simply ask for the results of their task. Of course they will always have the right answer the first time and will never need any additional time to investigate, right?
---
### Need More Time?
![045](../../assets/slides/incident_response/incident_response.045.jpeg)
_045. What if they need more time?_
It's not always going to be the case that things get done within the timeframe. So what do you do if, after 5 minutes, they need more time?
Don’t just give them another arbitrary time limit, because they’ll keep coming back and you’re just going to be wasting time giving them 5 minutes chunks for an hour. Instead, ask your experts how long they need.
---
### More Time
![046](../../assets/slides/incident_response/incident_response.046.jpeg)
_046. More time._
This isn't going to be like in the movies, where you ask how long someone needs, they say two hours and you slam you fist on a table and say "You've got one!". You need to **trust in your experts** to give you accurate estimates, and give them the time they need. Putting people under unreasonable pressure is only going to lead to mistakes being made.
???+ aside hide-arrow "You can do this the first time too."
    You can also just ask your experts how long they need the first time you hand out the task instead of picking a time yourself. Sometimes we've found it easier to give a time-limit ourselves if it's an action that's been done before and we have a rough idea of how long it should take. But there's nothing wrong with asking how long someone needs as you assign the task either.
---
### Solving Incidents (1)
![047](../../assets/slides/incident_response/incident_response.047.jpeg)
_047. Flow chart for solving incidents._
And we just keep following this pattern until the incident is resolved.
1. Ask for a status from your experts.
1. Decide on an action based on what you’re told, gaining consensus for the plan.
1. Assign the task out.
1. Follow up with the tasks once done, and repeat if there are still problems.
---
### Solving Incidents (2)
![048](../../assets/slides/incident_response/incident_response.048.jpeg)
_048. Another flow chart for solving incidents.._
More generally, we’re following [this cycle](../../training/incident_commander.md#handling-incidents) for each incident. We size-up the situation, stabilize things (that's the loop we just showed), keep everyone updated as to what's going on, then verify the situation is fixed before ending the response. If it's not fixed, we start again.
---
### Ignore the IC
_![049](../../assets/slides/incident_response/incident_response.049.jpeg)_
_049. "Ignore the IC, do what I say!"_
Uh oh, an executive has joined the response and is trying to override the IC’s decisions. That’s not great.
Remember that the IC is the ultimate authority in incident response, their decisions are the ones that matter. So how do you handle the awkward situation when someone tries to override those decisions?
We have a top tip here, a great question to keep in your tool belt as an incident commander. A simple question that can immediately diffuse this situation.
---
### Do You Wish To Take Command?
![050](../../assets/slides/incident_response/incident_response.050.jpeg)
_050. Do you wish to take command? [Docs Reference](../../training/incident_commander.md#executive-swoop-overriding-the-incident-commander)_
> Do you wish to take command?
Watch how quickly they don’t answer with “yes”.
If they do, great! You’re off the hook and can respond with,
> Understood. Everyone on the call be advised, I'm handing over command to executive A. They are now the Incident Commander.
But most of the time they’ll say either say "No"", or not answer at all, in which case you can continue on as normal, perhaps saying,