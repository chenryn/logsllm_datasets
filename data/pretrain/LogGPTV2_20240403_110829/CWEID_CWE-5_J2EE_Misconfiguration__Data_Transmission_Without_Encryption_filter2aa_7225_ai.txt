title_zh:空的同步代码块
The code has a return statement inside a finally block, which will cause any thrown exception in the try block to be discarded.
### CWEID:CWE-587 Assignment of a Fixed Address to a Pointer
title_zh:对Finalize()的显式调用
The product sets a pointer to a specific address other than NULL or 0.
### CWEID:CWE-588 Attempt to Access Child of a Non-structure Pointer
title_zh:尝试访问一个非结构体指针的子域
Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption.
### CWEID:CWE-589 Call to Non-ubiquitous API
title_zh:将一个固定地址复制给指针
The product uses an API function that does not exist on all versions of the target platform. This could cause portability problems or inconsistencies that allow denial of service or other consequences.
### CWEID:CWE-586 Explicit Call to Finalize()
The product makes an explicit call to the finalize() method from outside the finalizer.
### CWEID:CWE-591 Sensitive Data Storage in Improperly Locked Memory
title_zh:释放并不在堆上的内存
The product stores sensitive data in memory that is not locked, or that has been incorrectly locked, which might cause the memory to be written to swap files on disk by the virtual memory manager. This can make the data more accessible to external actors.
### CWEID:CWE-592 DEPRECATED: Authentication Bypass Issues
title_zh:敏感数据存储于加锁不恰当的内存区域
This weakness has been deprecated because it covered redundant concepts already described in :CWE-287:.
### CWEID:CWE-593 Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created
title_zh:对非普适API的调用
The product modifies the SSL context after connection creation has begun.
### CWEID:CWE-594 J2EE Framework: Saving Unserializable Objects to Disk
title_zh:认证绕过：SSL对象创建后修改OpenSSLCTX对象
When the J2EE container attempts to write unserializable objects to disk there is no guarantee that the process will complete successfully.
### CWEID:CWE-590 Free of Memory not on the Heap
title_zh:J2EE框架：将不可序列化的对象存储到磁盘上
The product calls free() on a pointer to memory that was not allocated using associated heap allocation functions such as malloc(), calloc(), or realloc().
### CWEID:CWE-596 DEPRECATED: Incorrect Semantic Object Comparison
title_zh:错误对对象引用当作对象内容进行比较
This weakness has been deprecated. It was poorly described and difficult to distinguish from other entries. It was also inappropriate to assign a separate ID solely because of domain-specific considerations. Its closest equivalent is :CWE-1023:.
### CWEID:CWE-598 Use of GET Request Method With Sensitive Query Strings
The web application uses the HTTP GET method to process a request and includes sensitive information in the query string of that request.
### CWEID:CWE-595 Comparison of Object References Instead of Object Contents
title_zh:在字符串比较中使用了错误的操作符
The product compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects.
### CWEID:CWE-599 Missing Validation of OpenSSL Certificate
title_zh:缺失对OpenSSL证书的验证
The product uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements.
### CWEID:CWE-600 Uncaught Exception in Servlet 
title_zh:通过GET请求中的查询字符串导致的信息暴露
The Servlet does not catch all exceptions, which may reveal sensitive debugging information.
### CWEID:CWE-597 Use of Wrong Operator in String Comparison
title_zh:Servlet中未捕获的异常
The product uses the wrong operator when comparing a string, such as using "==" when the .equals() method should be used instead.
### CWEID:CWE-602 Client-Side Enforcement of Server-Side Security
title_zh:使用客户端的认证机制
The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.
### CWEID:CWE-601 URL Redirection to Untrusted Site ('Open Redirect')
title_zh:公开静态最终域索引互斥的对象
A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.
### CWEID:CWE-605 Multiple Binds to the Same Port
title_zh:服务端安全的客户端实施
When multiple sockets are allowed to bind to the same port, other services on that port may be stolen or spoofed.
### CWEID:CWE-607 Public Static Final Field References Mutable Object
title_zh:指向未可信站点的URL重定向（开放重定向）
A public or protected static final field references a mutable object, which allows the object to be changed by malicious code, or accidentally from another package.
### CWEID:CWE-608 Struts: Non-private Field in ActionForm Class
title_zh:对同一端口的多重绑定
An ActionForm class contains a field that has not been declared private, which can be accessed without using a setter or getter.
### CWEID:CWE-603 Use of Client-Side Authentication
title_zh:XML外部实体引用的不恰当限制（XXE）
A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.
### CWEID:CWE-609 Double-Checked Locking
title_zh:循环条件输入未经检查
The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient.
### CWEID:CWE-606 Unchecked Input for Loop Condition
title_zh:Structs：动作表单类中存在非私有域
The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.
### CWEID:CWE-612 Improper Authorization of Index Containing Sensitive Information
title_zh:资源在另一范围的外部可控制索引
The product creates a search index of private or sensitive documents, but it does not properly limit index access to actors who are authorized to see the original information.
### CWEID:CWE-613 Insufficient Session Expiration
title_zh:HTTPS会话中未设置’Secure’属性的敏感Cookie
According to WASC, "Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization."
### CWEID:CWE-614 Sensitive Cookie in HTTPS Session Without 'Secure' Attribute
title_zh:通过私有数据的索引导致的信息暴露
The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.
### CWEID:CWE-610 Externally Controlled Reference to a Resource in Another Sphere
title_zh:不充分的会话过期机制
The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.
### CWEID:CWE-611 Improper Restriction of XML External Entity Reference
title_zh:通过注释导致的信息暴露
The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.
### CWEID:CWE-615 Inclusion of Sensitive Information in Source Code Comments
title_zh:双重检查的加锁机制
While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc.
### CWEID:CWE-616 Incomplete Identification of Uploaded File Variables (PHP)
title_zh:上传文件变量的不完整标识（PHP）
The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files.
### CWEID:CWE-617 Reachable Assertion
title_zh:可达断言
The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.
### CWEID:CWE-618 Exposed Unsafe ActiveX Method
title_zh:暴露的不安全ActiveX方法
An ActiveX control is intended for use in a web browser, but it exposes dangerous methods that perform actions that are outside of the browser's security model (e.g. the zone or domain).
### CWEID:CWE-619 Dangling Database Cursor ('Cursor Injection')
title_zh:数据库游标悬挂（游标注入）
If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor "dangling."
### CWEID:CWE-621 Variable Extraction Error
title_zh:函数挂钩参数的验证不恰当
The product uses external input to determine the names of variables into which information is extracted, without verifying that the names of the specified variables are valid. This could cause the program to overwrite unintended variables.
### CWEID:CWE-622 Improper Validation of Function Hook Arguments
title_zh:未经验证的口令修改
The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities.
### CWEID:CWE-625 Permissive Regular Expression
title_zh:变量抽取错误
The product uses a regular expression that does not sufficiently restrict the set of allowed values.
### CWEID:CWE-623 Unsafe ActiveX Control Marked Safe For Scripting
title_zh:可执行体正则表达式错误
An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting.
### CWEID:CWE-624 Executable Regular Expression Error
title_zh:不安全的ActiveX控件被标记为脚本安全
The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers.
### CWEID:CWE-620 Unverified Password Change
title_zh:宽松定义的正则表达式
When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.
### CWEID:CWE-626 Null Byte Interaction Error (Poison Null Byte)
title_zh:空字节交互错误
The product does not properly handle null bytes or NUL characters when passing data between different representations or components.
### CWEID:CWE-637 Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism')
title_zh:使用不正确指定参数的函数调用
The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used.
### CWEID:CWE-638 Not Using Complete Mediation
title_zh:动态变量执行
The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.
### CWEID:CWE-627 Dynamic Variable Evaluation
title_zh:未能安全地进行程序失效（FailingOpen）
In a language where the user can influence the name of a variable at runtime, if the variable names are not controlled, an attacker can read or write to arbitrary variables, or access arbitrary functions.
### CWEID:CWE-628 Function Call with Incorrectly Specified Arguments
title_zh:保护机制不必要的复杂性（未使用经济性的机制）
The product calls a function, procedure, or routine with arguments that are not correctly specified, leading to always-incorrect behavior and resultant weaknesses.
### CWEID:CWE-636 Not Failing Securely ('Failing Open')
title_zh:未能使用完整仲裁
When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions.
### CWEID:CWE-639 Authorization Bypass Through User-Controlled Key
title_zh:通过用户控制密钥绕过授权机制
The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.
### CWEID:CWE-641 Improper Restriction of Names for Files and Other Resources
title_zh:忘记口令恢复机制弱
The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.
### CWEID:CWE-640 Weak Password Recovery Mechanism for Forgotten Password
title_zh:文件和其他资源名称限制不恰当
The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.
### CWEID:CWE-643 Improper Neutralization of Data within XPath Expressions ('XPath Injection')
title_zh:对关键状态数据的外部可控制
The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.
### CWEID:CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax
title_zh:依赖于外部提供文件的文件名或扩展名
The product does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.
### CWEID:CWE-645 Overly Restrictive Account Lockout Mechanism
title_zh:使用未经净化的URL路径进行授权决策
The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.
### CWEID:CWE-642 External Control of Critical State Data
title_zh:对HTTP头部进行脚本语法转义处理不恰当
The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.
### CWEID:CWE-646 Reliance on File Name or Extension of Externally-Supplied File
title_zh:XPath表达式中数据转义处理不恰当（XPath注入）
The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.
### CWEID:CWE-647 Use of Non-Canonical URL Paths for Authorization Decisions
title_zh:过度限制的账户封锁机制
The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.
### CWEID:CWE-649 Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking
title_zh:在服务器端信任HTTP权限模型
The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.
### CWEID:CWE-648 Incorrect Use of Privileged APIs
title_zh:特权API的不正确使用
The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.
### CWEID:CWE-651 Exposure of WSDL File Containing Sensitive Information
title_zh:依赖于未经完整性检查的安全相关输入的混淆或加密
The Web services architecture may require exposing a Web Service Definition Language (WSDL) file that contains information on the publicly accessible services and how callers of these services should interact with them (e.g. what parameters they expect and what types they return).
### CWEID:CWE-650 Trusting HTTP Permission Methods on the Server Side
title_zh:通过WSDL文件导致的信息暴露
The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state.
### CWEID:CWE-652 Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')
title_zh:XQuery表达式中数据转义处理不恰当（XQuery注入）
The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.
### CWEID:CWE-653 Improper Isolation or Compartmentalization
title_zh:不充分的划分
The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.
### CWEID:CWE-654 Reliance on a Single Factor in a Security Decision
title_zh:依赖构建于封闭的安全性
A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.
### CWEID:CWE-655 Insufficient Psychological Acceptability
title_zh:不充分的心理学可接受性
The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose.
### CWEID:CWE-657 Violation of Secure Design Principles
title_zh:在安全决策中依赖单个元素
The product violates well-established principles for secure design.
### CWEID:CWE-656 Reliance on Security Through Obscurity
title_zh:违背安全设计原则
The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.