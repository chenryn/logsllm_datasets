title:Finding Critical Traffic Matrices
author:Yin Zhang and
Zihui Ge
Finding Critical Trafﬁc Matrices
Yin Zhang
Department of Computer Sciences
University of Texas at Austin
Austin, TX 78712, USA
PI:EMAIL
Zihui Ge
AT&T Labs – Research
180 Park Avenue
Florham Park, NJ 07932, USA
PI:EMAIL
Abstract
A trafﬁc matrix represents the amount of trafﬁc between
origin and destination in a network. It has tremendous po-
tential utility for many IP network engineering applications,
such as network survivability analysis, trafﬁc engineering,
and capacity planning. Recent advances in trafﬁc matrix es-
timation have enabled ISPs to measure trafﬁc matrices con-
tinuously. Yet a major challenge remains towards achieving
the full potential of trafﬁc matrices. In practical network-
ing applications, it is often inconvenient (if not infeasible)
to deal with hundreds or thousands of measured trafﬁc ma-
trices. So it is highly desirable to be able to extract a small
number of “critical” trafﬁc matrices. Unfortunately, we are
not aware of any good existing solutions to this problem
(other than a few ad hoc heuristics). This seriously limits
the applicability of trafﬁc matrices.
To bridge the gap between the measurement and the ac-
tual application of trafﬁc matrices, we study the critical traf-
ﬁc matrices selection (CritMat) problem in this paper. We
developed a mathematical problem formalization after iden-
tifying the key requirements and properties of CritMat in
the context of network design and analysis. Our complex-
ity analysis showed that CritMat is NP-hard. We then de-
veloped several clustering-based approximation algorithms
to CritMat. We evaluated these algorithms using a large
collection of real trafﬁc matrices collected in AT&T’s North
American backbone network. Our results demonstrated that
these algorithms are very effective and that a small number
(e.g., 12) of critical trafﬁc matrices sufﬁce to yield satisfac-
tory performance.
1 Introduction
Today’s large operational IP networks often consist of
hundreds of routers, thousands of links, tens of thousands
of routes, and may carry over one peta-byte (= 1015 bytes)
trafﬁc per day. How to effectively design, engineer, and
manage such large networks is crucial to end-to-end network
performance and reliability. Until recently, a major obsta-
cle to developing sound methods for network engineering in
operational IP networks has been the inability of network
operators to measure the trafﬁc matrix. A trafﬁc matrix rep-
resents the amount of trafﬁc between origin and destination
in a network. It is an essential input for a variety of IP net-
work engineering applications, such as capacity planning,
trafﬁc engineering, and network survivability analysis. Due
to the extreme importance of trafﬁc matrices, there has been
tremendous efforts and many recent advances in the area of
trafﬁc matrix estimation [7, 12, 15, 16]. These techniques
have enabled Internet service providers to accurately mea-
sure the trafﬁc matrix of their network in a continuous fash-
ion (in the granularity of minutes to an hour).
Having gladly left behind the days without a good trafﬁc
matrix, however, network operators and engineers are now
facing the new challenge of having to deal with hundreds
or even thousands of trafﬁc matrices, all from real measure-
ment at different time instances. Ideally, network engineers
would like to base their design and analysis on all trafﬁc
matrices for a signiﬁcant period of time (e.g., a couple of
months). These trafﬁc matrices can capture the normal traf-
ﬁc variation from temporal-geographical patterns (e.g., traf-
ﬁc from east-coast and west-coast reaches peak usage at dif-
ferent hour of day) to trafﬁc engineering activities, (e.g., a
customer network shifts its trafﬁc to a different egress point
during maintenance). However, in practice, it is usually in-
convenient or infeasible to use a large number of trafﬁc ma-
trices. It is inconvenient since many trafﬁc analysis tasks re-
quire human intervention (e.g., examine the scenario where
congestion has occurred). Dealing with a large number of
trafﬁc matrices is very undesirable.
It is infeasible since
many trafﬁc engineering applications are very computation-
ally expensive. For example, ﬁnding the optimal OSPF link
weights that minimize link utilization for an IP network is
known to be NP-complete [8]. In [8, 9], Fortz and Thorup
have developed a local search technique that is demonstrated
to ﬁnd good solutions for real networks. However, this tech-
nique can only handle a relatively small number of traf-
ﬁc matrices, as the computational cost becomes prohibitive
when the number of input trafﬁc matrices is large. Given
such difﬁculties, it is natural to ask the following question:
With hundreds or thousands of trafﬁc matrices
available, can we extract a small number of “crit-
ical” ones and use only them for network design
and analysis?
The above question has been asked frequently by net-
work operators and engineers. Unfortunately, the solutions
developed so far are often quite ad hoc. One common prac-
tice is to generate a “peak-all-elements” trafﬁc matrix that
has the peak demand for each origin-destination ﬂow. An-
other approach is to take the trafﬁc matrix at the network-
wide busiest time (i.e., the trafﬁc matrix with the largest to-
tal volume). However, none of them are satisfactory – the
“peak-all-elements” trafﬁc matrix are usually too conserva-
tive since it signiﬁcantly over-estimates the total trafﬁc vol-
ume; whereas the busiest-time trafﬁc matrix runs the risk of
underestimating the demands since not all ﬂows peak at the
network peak.
In this paper, we seek to bridge the gap between the mea-
surement and the actual application of trafﬁc matrices by
developing effective solutions to the critical trafﬁc matrix
selection (CritMat) problem. To the best of our knowledge,
this is the ﬁrst study on the critical trafﬁc matrices selection
problem. Our contributions in this paper can be summarized
as follows.
• We have closely examined the critical trafﬁc matrices
selection problem in the context of network design and
analysis, and identiﬁed the key requirements and de-
sired properties.
• We have developed a mathematical problem formula-
tion, which addresses the need for a range of practical
network applications.
• We have formally analyzed the complexity of this prob-
lem and shown that it is NP-hard. We have then devel-
oped several clustering-based approximation solutions
to the problem.
• We have evaluated our algorithms using a large collec-
tion of real trafﬁc matrices. Our results have demon-
strated that these algorithms are very effective and that
a small number (e.g., 12) of critical trafﬁc matrices suf-
ﬁce to yield satisfactory performance.
The rest of the paper is organized as follows. Section 2
characterizes the requirements and properties of the critical
trafﬁc matrices selection problem and provides a mathemat-
ical formalization and a complexity analysis of the problem.
Section 3 describes the algorithms that we proposed for crit-
ical trafﬁc matrices selection. We describe our data set and
evaluation methodology in Section 4 and present the perfor-
mance results of our algorithms in Section 5. We conclude
in Section 6.
2 Problem Description and Formalization
Network engineers are constantly facing the challenge
driven by two conﬂicting requirements – on one hand, there
is a need to design and provision the network in a robust
way so that the network is prepared for any worst-case sce-
narios; on the other hand, constraint due to limited capital
expenditure requires the network to operate in a most ef-
ﬁcient manner. Therefore, when choosing candidate trafﬁc
matrices for network design and analysis, network engineers
are often looking for a small set of critical trafﬁc matrices
that can represent all worst-case scenarios without inﬂating
the trafﬁc demand by too much. Our focus in this paper is
to address the following problem: how to extract a small
number of such critical trafﬁc matrices from a large collec-
tion (hundreds or thousands) of measured trafﬁc matrices
for network engineering purposes?
So far, we have been vague about “worst-case” scenar-
ios. In the context of network engineering, worst-case often
refers to the situation when some link in the network is con-
gested or heavily loaded. As manifested to network users,
congestion often means high packet loss and long link delay
on all trafﬁc that traverses through this link. Thus, it is nat-
ural to use link utilization based metrics, e.g., the network-
wide maximum link utilization, to measure the level of “bad-
ness” of a trafﬁc matrix. Two properties about trafﬁc ma-
trix and link utilization become useful here – the monotonic
property and the linear property. The monotonic property
says that when a trafﬁc matrix X1 has every ﬂow smaller
than or equal to the corresponding ﬂow in another trafﬁc
matrix X2, i.e., X2 dominates X1, the link utilization for
demand X1 should always be smaller than or equal to the
link utilization for demand X2 under any routing conﬁgu-
ration. The linear property states that if under a routing
conﬁguration, the link utilizations are Y1 and Y2 for traf-
ﬁc demand matrix X1 and X2 respectively, then for demand
X3 = aX1+(1−a)X2, the resulting link utilizations should
be Y3 = aY1 + (1− a)Y2 under the same routing conﬁgura-
tion. Here, a is a scaler between 0 and 1, and Y1, Y2, Y3 are
vectors with size equal to the number of links in the network.
Figure 1. Example for a 2-Dimensional TM Set
The monotonic and linear properties allow us to focus on
critical trafﬁc matrices that can dominate all measurement
trafﬁc matrices by linear combination. Figure 1 illustrates
an example for a two dimensional trafﬁc matrices set.
In
Figure 1, the dots represent the real trafﬁc matrices obtained
from data measurement, and the two squares are the two
critical trafﬁc matrices desired. The concerns for “prepare-
for-worst-case” and “minimum-oversizing” by network en-
gineers become the requirements of 1) critical trafﬁc matri-
ces dominating all measurement trafﬁc matrices by linear
combination and 2) the convex hull of the critical trafﬁc ma-
critical traffic matricestraffic matricesfrom measurementtrices having small volume (or area in the two-dimensional
example). However, since trafﬁc matrix usually has very
high dimensions – a network of N nodes has N 2 ﬂows in
its trafﬁc matrix, computing the volume of the polyhedron
formed by the critical trafﬁc matrices is a difﬁcult task by it-
self. Thus we further restrict ourselves to the solution space
where all critical trafﬁc matrices are constrained to be close
to an original measured trafﬁc matrix. This turns out to be
a reasonable requirement in practice. This is because for
tasks such as capacity planning and weight optimization, it
is desirable to conduct analysis based on trafﬁc matrices that
match real trafﬁc patterns or scenarios.
2.1 Problem Formalization
Having carefully examined the properties and require-
ments of the problem, we now provide a formal statement
of this optimization problem, namely the critical trafﬁc
matrices selection (CritMat) problem. We will repre-
sent each trafﬁc matrix as a K-dimensional vector where
K is a large number. Given a ﬁnite set of trafﬁc matri-
ces X = {~x1, ~x2, . . . , ~xn} and an integer m, the Crit-
Mat problem is to ﬁnd a set of critical trafﬁc matrices,
Y = {~y1, ~y2, . . . , ~ym}, that minimizes distance function
||~y, X||
max
~y∈Y
subject to dominance constraint
∀~x ∈ X,∃a1, a2, . . . , am,
m(cid:88)
i=1
m(cid:88)
ai~yi.
ai = 1 and ~x ≤d
i=1
only if ~x is smaller than ~y in all K dimensions.
Here, ~x ≤d ~y, i.e., ~x being dominated by ~y, is true if and
The distance function ||~y, X|| can be deﬁned in a number
• the minimum distance to an input trafﬁc matrix
of ways:
||~y, X|| = min
~x∈X
|~y − ~x|2
• the maximum difference in each dimension from the
closest input trafﬁc matrix
|~y − ~x|∞