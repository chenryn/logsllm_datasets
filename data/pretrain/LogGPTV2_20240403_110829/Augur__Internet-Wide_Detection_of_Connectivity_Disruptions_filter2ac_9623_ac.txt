counter must also be small compared to the magnitude
of the perturbations that we induce.
Section V describes how we identify reﬂectors that meet these
requirements.
B. Site Requirements
Our method also requires that sites exhibit certain network
properties, allowing for robust measurements at reﬂectors
across the Internet. Unlike reﬂectors, site requirements are not
absolute. In some circumstances, failure to meet a requirement
requires discarding of a result, or limits possible outcomes, but
we can still use the site for some measurements.
1) SYN-ACK retransmission (SAR). SYN-ACK retries
by sites can signal outbound blocking due to a re-
ﬂector’s RST packets not reaching the site. If a site
does not retransmit SYN-ACKs, we can still detect
inbound blocking, but we cannot distinguish instances
of outbound blocking from cases where there is no
blocking.
2) No anycast. If a site’s IP address is anycast, the mea-
surement machine and reﬂector may be communicating
with different sites; in this case, RSTs from the reﬂector
will not reach the site that our measurement machine
communicates with, which would result in successive
SYN-ACK retransmissions from the site and thus falsely
indicate outbound blocking.
3) No ingress ﬁltering. If a site’s network performs ingress
ﬁltering, spoofed SYN packets from the measurement
machine may be ﬁltered if they arrive from an unex-
pected ingress, falsely indicating inbound blocking.
4) No stateful ﬁrewalls or network-speciﬁc blocking. If
a site host or its network deploys a distributed state-
ful ﬁrewall, the measurement machine’s SYN packet
may establish state at a different ﬁrewall than the one
encountered by a reﬂector’s RSTs,
thus causing the
ﬁrewall to drop the RSTs. This effect would falsely
indicate outbound blocking. Additionally, if a site or its
ﬁrewall drops trafﬁc from some IP address ranges but not
431
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:21 UTC from IEEE Xplore.  Restrictions apply. 
others (e.g., from non-local reﬂectors), the measurement
machine may falsely detect blocking.
number of trials required to produce a detection, thus enabling
efﬁcient measurement.
Section V-E describes how we identify sites that satisfy these
requirements.
C. Detecting Disruptions
As discussed in Section III, we detect connectivity dis-
ruptions by perturbing the IP ID counter at
the reﬂector
and observing how this value evolves with and without our
perturbation.
Approach: Statistical detection. We measure the natural
evolution of a reﬂector’s counter periodically in the absence
of perturbation as a control that we can compare against the
evolution of the IP ID under perturbation. We then perturb the
IP ID counter by injecting SYN packets and subsequently mea-
sure the evolution of this counter. We take care not to involve
any site or reﬂector in multiple simultaneous measurements,
since doing so could conﬂate two distinct results.
Ultimately, we are interested in detecting whether the IP ID
evolution for a reﬂector changes as a result of the perturbations
we introduce. We can represent this question as a classical
problem in statistical detection, which attempts to detect
the presence or absence of a prior (i.e., perturbation or no
perturbation), based on the separation of the distributions
under different values of the prior. In designing this detection
method, we must determine the random variable whose distri-
bution we wish to measure, as well as the speciﬁc detection
approach that allows us to distinguish the two values of the
prior with conﬁdence. We choose IP ID acceleration (i.e., the
second derivative of IP ID between successive measurements)
as ideally this value has a zero mean, regardless of reﬂector.
With a zero mean, the distribution of the random variable
should be stationary and the distribution should be similar
across reﬂectors. Conceptually, this can be thought of as a
reﬂector, at a random time, being as likely to experience trafﬁc
“picking up” as not. However, subtle Internet complexities
such as TCP slow start bias this measure slightly. We discuss
empirical measures of these priors and their impact on our
method in Section V-D.
In contrast, the ﬁrst derivative (IP ID velocity) is not sta-
tionary. Additionally, each reﬂector would exhibit a different
mean velocity value, requiring extensive per-reﬂector baseline
measurements to capture velocity behavior.
Detection framework: Sequential hypothesis testing (SHT).
We use sequential hypothesis testing (SHT) [31] for the
detection algorithm. SHT is a statistical framework that uses
repeated trials and known outcome probabilities (priors) to
distinguish between multiple hypotheses. The technique takes
probabilities for each prior and tolerable false positive and
negative rates as input and performs repeated online trials until
it can determine the value of the prior with the speciﬁed false
positive and negative rates. SHT’s ability to perform online
detection subject to tunable false positive/negative rates, and
its tolerance to noise, make it well-suited to our detection task.
Additionally, it is possible to compute an expectation for the
We begin with the SHT formulation developed by Jung
et al. [31], modifying it
to accommodate our application.
For this application to hold, the IP ID acceleration must be
stationary (discussed more in Section V-D), and the trials must
be independent and identically distributed (i.i.d.). To achieve
i.i.d., we randomize our trial order and mapping between sites
and reﬂectors and run experiments over the course of weeks.
For a given site Si and reﬂector Rj, we perform a series
of N trials, where we inject spoofed SYN packets to Si and
observe IP ID perturbations at Rj. We let Yn(Si, Rj) be a
random variable for the nth trial, such that:
(cid:2)
Yn(Si, Rj) =
0
1
if no IP ID acceleration occurs
if IP ID acceleration occurs
during the measurement window following injection. We iden-
tify two hypotheses: H0 is the hypothesis that no inbound
blocking is occurring (the second derivative of IP ID values
between successive measurements should be observed to be
positive, which we deﬁne as IP ID acceleration), and H1 is
the hypothesis that blocking is occurring (no IP ID accelera-
tion). Following constructions from previous work, we must
identify the prior conditional probabilities of each hypothesis,
speciﬁcally:
Pr[Yn = 0|H0] = θ0, Pr[Yn = 1|H0] = 1 − θ0
Pr[Yn = 0|H1] = θ1, Pr[Yn = 1|H1] = 1 − θ1
The prior θ1 is the probability of no observed IP ID acceler-
ation in the case of inbound blocking. We can experimentally
measure this prior as the probability of IP ID acceleration
during our reﬂector control measurements, since the IP ID
acceleration likelihood during control measurements is the
same as during inbound blocking (as no additional packets
reach the reﬂector in both cases). Intuitively, we can think of
this value as 0.5 given the prior discussion of second-order
value being thought of as zero mean (i.e., in aggregate trafﬁc,
with no induced behavior, acceleration is as likely to occur as
deceleration).
The prior 1 − θ0 is the probability of observed IP ID
acceleration during injection. It can be measured as the prob-
ability of IP ID acceleration during an injection period across
all reﬂector injection measurements. Assuming no blockage
and perfect reﬂectors with no other trafﬁc, this value can be
thought of as approaching 1. The prior can be estimated from
all reﬂector measurements under the assumption that blocking
is uncommon for a reﬂector. However, even if the assumption
does not hold and blocking is common, the prior estimation
is still conservative in that it drives the prior closer to the θ1,
making detection more difﬁcult, increasing false negatives.
From the construction above, we deﬁne a likelihood ratio
Λ(Y ), such that:
Λ(Y ) ≡ Pr[Y |H1]
Pr[Y |H0]
= ΠN
n=1
Pr[Yn|H1]
Pr[Yn|H0]
432
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:18:21 UTC from IEEE Xplore.  Restrictions apply. 
(cid:87)
(cid:86)
(cid:72)
(cid:55)
(cid:3)
(cid:79)
(cid:68)
(cid:81)
(cid:82)
(cid:76)
(cid:87)
(cid:70)
(cid:72)
(cid:85)
(cid:76)
(cid:71)
(cid:37)
(cid:76)
(cid:3)
(cid:18)
(cid:3)
(cid:71)
(cid:81)
(cid:88)
(cid:82)
(cid:69)
(cid:81)
(cid:44)
(cid:3)
(cid:87)
(cid:86)
(cid:72)
(cid:55)
(cid:71)
(cid:81)
(cid:88)
(cid:82)
(cid:69)
(cid:88)
(cid:50)
(cid:87)
(cid:55)(cid:85)(cid:76)(cid:68)(cid:79)(cid:3)(cid:60)(cid:81)(cid:11)(cid:54)(cid:76)(cid:15)(cid:53)(cid:77)(cid:12)
(cid:56)(cid:83)(cid:71)(cid:68)(cid:87)(cid:72)(cid:3)(cid:60)(cid:15)(cid:3)(cid:513)(cid:11)(cid:60)(cid:12)
(cid:513)(cid:11)(cid:60)(cid:12)(cid:3)(cid:148)(cid:3)(cid:536)(cid:19)
(cid:49)(cid:82)
(cid:513)(cid:11)(cid:60)(cid:12)(cid:3)(cid:149)(cid:3)(cid:536)(cid:20)
(cid:49)(cid:82)
(cid:81)(cid:3)(cid:31)(cid:32)(cid:3)(cid:49)
(cid:60)(cid:72)(cid:86)
(cid:38)(cid:82)(cid:81)(cid:87)(cid:76)(cid:81)(cid:88)(cid:72)(cid:3)(cid:87)(cid:82)(cid:3)(cid:81)(cid:72)(cid:91)(cid:87)(cid:3)(cid:87)(cid:85)(cid:76)(cid:68)(cid:79)
(cid:55)(cid:85)(cid:76)(cid:68)(cid:79)(cid:3)(cid:59)(cid:81)(cid:11)(cid:54)(cid:76)(cid:15)(cid:53)(cid:77)(cid:12)
(cid:56)(cid:83)(cid:71)(cid:68)(cid:87)(cid:72)(cid:3)(cid:59)(cid:15)(cid:3)(cid:513)(cid:11)(cid:59)(cid:12)
(cid:513)(cid:11)(cid:59)(cid:12)(cid:3)(cid:149)(cid:3)(cid:536)(cid:20)
(cid:49)(cid:82)
(cid:513)(cid:11)(cid:59)(cid:12)(cid:3)(cid:148)(cid:3)(cid:536)(cid:19)
(cid:49)(cid:82)
(cid:81)(cid:3)(cid:31)(cid:32)(cid:3)(cid:49)
(cid:60)(cid:72)(cid:86)
(cid:38)(cid:82)(cid:81)(cid:87)(cid:76)(cid:81)(cid:88)(cid:72)(cid:3)(cid:87)(cid:82)(cid:3)(cid:81)(cid:72)(cid:91)(cid:87)(cid:3)(cid:87)(cid:85)(cid:76)(cid:68)(cid:79)
(cid:60)(cid:72)(cid:86)
(cid:50)(cid:88)(cid:87)(cid:83)(cid:88)(cid:87)(cid:3)(cid:43)(cid:20)(cid:3)
(cid:11)(cid:44)(cid:81)(cid:18)(cid:37)(cid:76)(cid:3)(cid:37)(cid:79)(cid:82)(cid:70)(cid:78)(cid:76)(cid:81)(cid:74)(cid:12)
(cid:60)(cid:72)(cid:86)
(cid:43)(cid:19)(cid:15)(cid:3)(cid:42)(cid:82)(cid:3)(cid:87)(cid:82)(cid:3)(cid:50)(cid:88)(cid:87)(cid:69)(cid:82)(cid:88)(cid:81)(cid:71)
(cid:11)(cid:49)(cid:82)(cid:3)(cid:44)(cid:81)(cid:18)(cid:37)(cid:76)(cid:3)(cid:37)(cid:79)(cid:82)(cid:70)(cid:78)(cid:76)(cid:81)(cid:74)(cid:12)
(cid:49)(cid:82)
(cid:50)(cid:88)(cid:87)(cid:83)(cid:88)(cid:87)(cid:3)(cid:56)(cid:81)(cid:78)(cid:81)(cid:82)(cid:90)(cid:81)
(cid:50)(cid:88)(cid:87)(cid:83)(cid:88)(cid:87)
(cid:60)(cid:72)(cid:86)
(cid:54)(cid:36)(cid:53)(cid:11)(cid:54)(cid:76)(cid:12)
(cid:49)(cid:82)
(cid:50)(cid:88)(cid:87)(cid:83)(cid:88)(cid:87)(cid:3)
(cid:49)(cid:82)(cid:3)(cid:44)(cid:81)(cid:18)(cid:37)(cid:76)(cid:3)(cid:69)(cid:79)(cid:82)(cid:70)(cid:78)(cid:76)(cid:81)(cid:74)
(cid:60)(cid:72)(cid:86)
(cid:50)(cid:88)(cid:87)(cid:83)(cid:88)(cid:87)(cid:3)(cid:46)(cid:19)(cid:3)
(cid:11)(cid:50)(cid:88)(cid:87)(cid:3)(cid:37)(cid:79)(cid:82)(cid:70)(cid:78)(cid:76)(cid:81)(cid:74)(cid:12)
(cid:60)(cid:72)(cid:86)
(cid:49)(cid:82)
(cid:50)(cid:88)(cid:87)(cid:83)(cid:88)(cid:87)(cid:3)(cid:46)(cid:20)
(cid:11)(cid:49)(cid:82)(cid:3)(cid:37)(cid:79)(cid:82)(cid:70)(cid:78)(cid:76)(cid:81)(cid:74)(cid:12)
(cid:50)(cid:88)(cid:87)(cid:83)(cid:88)(cid:87)(cid:3)
(cid:49)(cid:82)(cid:3)(cid:44)(cid:81)(cid:18)(cid:37)(cid:76)(cid:3)(cid:69)(cid:79)(cid:82)(cid:70)(cid:78)(cid:76)(cid:81)(cid:74)
Fig. 2: Flow chart of our algorithm to identify both inbound
and outbound blocking using a series of sequential hypothesis
tests. Detailed descriptions of the notation and terminology are
given in Section IV-C.
where Y is the sequence of trials observed at any point. We
derive an upper bound threshold η1 such that:
Pr[Y1, . . . YN|H1]
Pr[Y1, . . . YN|H0]
≥ η1
and a similar lower bound threshold η0. Both η0 and η1 are
bounded by functions of the tolerable probability of false
positives and negatives. We elaborate on these bounds and the
impact of false positives and negatives later in this section.
Figure 2 illustrates our detection algorithm, which performs
a series of sequential hypothesis tests; the rest of this section
describes this construction in detail. The Inbound Blocking
portion of Figure 2 shows how SHT uses this construction to
make decisions. This is extended to include outbound blocking
subsequently.
As each trial is observed, we update the likelihood ratio
function Λ(Y ) based on the prior probabilities. Once updated,
we compare the value of Λ(Y ) against
the thresholds η0
and η1. If Λ(Y ) ≤ η0, we accept H1 and output Input or
Bidirectional Blocking.
If Λ(Y ) ≥ η1, we accept H0, which is that IP ID acceler-
ation occurred as a result of no inbound blocking. This does
not give us a result, as we still must decide between outbound
blocking and no blocking. To make this decision, we proceed
to the second SHT phase,“Outbound Test,” which is discussed
subsequently.
A third output of the system is that Λ(Y ) did not meet either
threshold. If there are more trials we restart the algorithm. If
we have exhausted our trials, we output the result blockage
that of Si at Rj is undetermined.
Outbound blocking detection with SHT. Given IP ID ac-
celeration at the reﬂector, we must distinguish outbound-only
blocking from a lack of blocking whatsoever. To do so, we
develop a key new insight that relies on a secondary IP ID
acceleration that should occur due to subsequent SYN-ACK
retries by the site.
To determine a site’s eligibility for outbound blocking
detection, we must identify whether it retries SYN-ACKs,
and that the retries have reliable timing. Section V discusses
these criteria further. We abstract this behavior as a function
SAR(Si) (for SYN-ACK Retry) that
indicates whether a
site is suitable for outbound blocking detection. We deﬁne
(cid:2)
Xn(Si, Rj) such that:
0
1
if no IP ID accel. during SAR
if IP ID accel. during SAR
Xn(Si, Rj) =
We now formulate two new hypotheses, K0 such that outbound
blocking is occurring (IP ID acceleration occurs during the
SAR time window), and K1 such that there is no connection
blocking (IP ID acceleration does not occur during the SAR
window). From this:
Pr[Xn = 0|K0] = θ0, Pr[Xn = 1|K0] = 1 − θ0