enables more decentralized implementations. It is thus well-suited
for game matchmaking, and in turn for Htrae, since even when there
is a centralized matchmaking service it must dramatically limit its
per-machine state due to the large number of participants.
The idea of an NCS was ﬁrst proposed for use in GNP [23].
This system makes use of a ﬁxed set of nodes called landmarks.
Once the system obtains the RTT between each pair of landmarks,
the system computes the virtual coordinates for each landmark in a
324way that minimizes the sum of the squared error in RTT estimation
over all landmark pairs. For a non-landmark node to compute its
virtual coordinates, it ﬁnds its RTT to each landmark, and chooses
virtual coordinates for itself that minimize the sum of the squared
error in RTT estimation over all paths from itself to the landmark.
One downside of this approach is that the landmarks become
bottlenecks. To allay this issue, Lighthouse [25] uses multiple sets
of landmarks, each with its own distinct coordinate space. Light-
house uniﬁes these spaces into a global space so that the distance
between coordinates in distinct spaces can be calculated. PIC [5]
expands the set of landmarks further by allowing any node, once it
has computed its coordinates, to become a landmark for new nodes.
Another approach is to let nodes calculate coordinates using mea-
surements to only a subset of the landmarks, as in ICS [15] or with
virtual landmarks [30]. However, provisioning even a few land-
marks to deal with millions of customers is an expensive proposi-
tion for a game matchmaking system.
Fortunately, some researchers have discovered that landmarks
are not necessary. There exist graph embedding techniques that
rely only on distance measurements between nodes, enabling nodes
to learn reasonable coordinates in a global space by progressive re-
ﬁnement based on latency measurements. These techniques include
spring embedding [8], used by Vivaldi [6], and force-ﬁeld explosion
simulation, used by Big-Bang Simulation [28]. Such embedding
techniques are thus well suited to the application of game match-
making, which is why we use one in Htrae.
Researchers have noted problems with NCSes, including the
sensitivity of coordinate embeddings to initial conditions and the
difﬁculty of embedding triangle-inequality violations [12]. Sug-
gested ﬁxes have included techniques for avoiding local minima
and otherwise reducing the effect of initial conditions [28], rather
than choosing initial conditions based on geography as we do.
Wang et al.proposed solutions to the problem triangle-inequality
violations pose [33]; we have adapted one of them for use in Htrae
and evaluated its effectiveness in a realistic workload.
We are not the ﬁrst to attempt using an Earth-like coordinate sys-
tem, but we are the ﬁrst to have done so successfully. In the paper
describing GNP [23], the authors indicate they found a spherical
coordinate system inferior to a Euclidean one. Vivaldi’s creators
found a similar result [6]. However, we got it to work by using a
new approach not tried before: using geolocation for all machines’
initial positions, not just for a small number of landmarks.
7.3 Geolocation
Htrae relies upon earlier work that has enabled and reﬁned the
estimation of the latitude and longitude of a machine. NetGeo [21]
extracts textual location names from whois records and looks them
up in a geographic database. IP2Geo [24] extracts location names
from the DNS name of the node or nearby nodes. OASIS [10]
uses Meridian [34] to ﬁnd which infrastructure node with a known
geographic location is closest to an address preﬁx, and assigns
that geographic location to that preﬁx. Finally, some commercial
databases [20] complement these techniques with others such as
mining websites that ask users for their location.
7.4 Evaluation
One of our contributions is a thorough evaluation of latency pre-
diction on a large distributed system. Generally, latency prediction
system evaluations have used data sets such as PlanetLab ping times
and King measurements, which are not representative of home ma-
chines and do not illustrate realistic churn. A notable exception
is that of Ledlie et al. [13], who deployed the Vivaldi algorithm
in the Azureus BitTorrent client, revealing much about the sources
of error in a large P2P system containing mostly home machines.
Pyxida, the resulting NCS implementation, incorporates solutions
to many of these problems, and is generally considered the state-of-
the-art in NCSes [13]. Our trace of game players’ machines is even
larger than Pyxida’s corpus, and has enabled us to evaluate in even
more detail the effectiveness of various implementation elements
of an NCS. It also allowed us to examine properties of latency and
churn speciﬁc to game-matchmaking scenarios, and to devise a sys-
tem with signiﬁcantly better predictive power than Pyxida.
8. CONCLUSION
Htrae is a latency prediction system designed for use in game
matchmaking and other latency-sensitive applications that run pri-
marily on home machines. Htrae is simple and scalable, as illus-
trated by the small size of our implementation and the ease of our
deployment. Its primary innovation is that it uses a novel combi-
nation of two classic approaches to latency prediction, geolocation
and a network coordinate system (NCS), fusing them in a way that
mitigates the disadvantages of each. It achieves this fusion by as-
signing each machine a location on a virtual Earth; each location
starts out roughly matching the machine’s approximate real-world
location, and is then dynamically adjusted to improve the corre-
spondence between distances and latencies.
To guide our design of a system to deal with realistic game
matchmaking scenarios, we used observations of 50 million match-
making probes among 3.5 million game machines. This data has
enabled a thorough evaluation of our system, showing how effec-
tive its various elements are, how well it solves classic problems
in latency prediction, and how well it performs relative to other
state-of-the-art latency prediction systems. We found that Htrae sig-
niﬁcantly out-predicts other latency predictors, including Pyxida,
iPlane, and OASIS. With Htrae, 90th percentile prediction error is
reduced by a factor of well over 2, as is 90th percentile best-server
error. As a consequence, we expect our system to enable more efﬁ-
cient and effective matchmaking for games, as well as for a variety
of other applications where users are sensitive to latency.
9. ACKNOWLEDGMENTS
We thank Chris Butcher, Roger Wolfson and Luke Timmins for
all their work collecting Halo 3 traces and sharing them with us.
We are also grateful to the creators of OASIS and iPlane for their
public query services, and in particular to Harsha Madhyastha for
providing code to query iPlane. We thank all our volunteers for
running the Htrae system on their home machines.
10. References
[1] D. Andersen, H. Balakrishnan, F. Kaashoek, and R. Morris.
Resilient overlay networks. In Proc. Symposium on
Operating Systems Principles (SOSP), Oct. 2001.
[2] T. Beigbeder, R. Coughlan, C. Lusher, J. Plunkett, E. Agu,
and M. Claypool. The effects of loss and latency on user
performance in unreal tournament 2003 R(cid:13). In In NetGames,
Aug./Sep. 2004.
[3] Bungie. Halo 3 Forum.
http://www.bungie.net/Forums/posts.aspx?postID=8455638.
[4] D. R. Choffnes and F. Bustamante. Taming the Torrent: A
practical approach to reducing cross-ISP trafﬁc in
peer-to-peer systems. In Proc. SIGCOMM Conference, pages
363–374, Aug. 2008.
325[5] M. Costa, M. Castro, A. Rowstron, and P. Key. PIC: Practical
Internet coordinates for distance estimation. In Proc.
International Conference on Distributed Computing Systems
(ICDCS), pages 178–187, Mar. 2004.
[6] F. Dabek, R. Cox, F. Kaashoek, and R. Morris. Vivaldi: A
decentralized network coordinate system. In Proc.
SIGCOMM Conference, pages 426–437, Aug./Sep. 2004.
[7] F. Dabek, J. Li, E. Sit, J. Robertson, M. F. Kaashoek, and
R. Morris. Designing a DHT for low latency and high
throughput. In Proc. Symposium on Networked Systems
Design and Implementation (NSDI), pages 85–98, Mar. 2004.
[8] P. Eades. A heuristic for graph drawing. Congressus
Numerantium, 42:149–160, 1984.
[9] P. Francis, S. Jamin, C. Jin, Y. Jin, D. Raz, Y. Shavitt, and
L. Zhang. IDMaps: A global Internet host distance
estimation service. IEEE/ACM Transactions on Networking,
Oct. 2001.
[10] M. J. Freedman, K. Lakshminarayanan, and D. Mazi`eres.
OASIS: Anycast for any service. In Proc. Symposium on
Networked Systems Design and Implementation (NSDI),
pages 129–142, May 2006.
[11] S. Guha and P. Francis. Characterization and measurement of
TCP traversal through NATs and ﬁrewalls. In Proc. Internet
Measurement Conference (IMC), Oct. 2005.
[12] I. Herman, G. Melanc¸on, and M. S. Marshall. Graph
visualization and navigation in information visualization: a
survey. IEEE Transactions on Visualization and Computer
Graphics, 6:24–43, 2000.
[13] J. Ledlie, P. Gardner, and M. Seltzer. Network coordinates in
the wild. In Proc. Symposium on Networked Systems Design
and Implementation (NSDI), pages 299–311, Apr. 2007.
[14] Y. Lee, S. Agarwal, C. Butcher, and J. Padhye. Measurement
and estimation of network QoS among peer Xbox 360 game
players. In Proc. Passive and Active Measurement
Conference (PAM), pages 41–50, Apr. 2008.
[15] H. Lim, J. C. Hou, and C.-H. Choi. Constructing Internet
coordinate system based on delay measurement. IEEE
Transactions on Networking, 13(3):513–525, June 2005.
[16] C. Lumezanu, D. Levin, and N. Spring. PeerWise discovery
and negotiation of faster paths. In Proc. Workshop on Hot
Topics in Networks (HotNets), Nov. 2007.
[17] C. Lumezanu and N. Spring. Measurement manipulation and
space selection in network coordinates. In Proc.
International Conference on Distributed Computing Systems
(ICDCS), pages 361–368, June 2008.
[18] H. V. Madhyastha, T. Isdal, M. Piatek, C. Dixon,
T. Anderson, A. Krishnamurthy, and A. Venkataramani.
iPlane: An information plane for distributed services. In
Proc. Symposium on Operating Systems Design and
Implementation (OSDI), pages 367–380, Nov. 2006.
[19] H. V. Madhyastha, E. Katz-Bassett, T. Anderson,
A. Krishnamurthy, and A. Venkataramani. iPlane Nano: Path
prediction for peer-to-peer applications. In Proc. Networked
Systems Design and Implementation (NSDI), Apr. 2009.
[20] MaxMind. Geolocation and online fraud prevention from
MaxMind. http://www.maxmind.com/.
[21] D. Moore, R. Periakaruppan, and J. Donohoe. Where in the
world is netgeo.caida.org? In Proc. INET Conference, July
2000.
[22] D. R. Morrison. PATRICIA—practical algorithm to retrieve
information coded in alphanumeric. Journal of the ACM
(JACM), 15(4):514–534, Oct. 1968.
[23] T. S. E. Ng and H. Zhang. Predicting Internet network
distance with coordinates-based approaches. In Proc. IEEE
Computer and Communications Conference (INFOCOM),
2002.
[24] V. N. Padmanabhan and L. Subramanian. An investigation of
geographic mapping techniques for Internet hosts. In Proc.
SIGCOMM Conference, pages 173–185, Aug. 2001.
[25] M. Pias, J. Crowcroft, S. Wilbur, T. Harris, and S. Bhatti.
Lighthouses for scalable distributed location. In Proc.
International Workshop on Peer-to-Peer Systems (IPTPS),
Feb. 2003.
[26] J. Rosenberg, J. Weinberger, C. Huitema, and R. Mahy.
STUN – simple traversal of user datagram protocol (UDP)
through network address translators (NATs). Network
Working Group RFC 3489, Mar. 2003.
[27] Route Views Project. University of Oregon.
http://www.routeviews.org/.
[28] Y. Shavitt and T. Tankel. Big-Bang Simulation for
embedding network distances in Euclidean space.
IEEE/ACM Transactions on Networking, 12(6):993–1006,
Dec. 2004.
[29] Y. Staff. Video game sales break records. http://
us.i1.yimg.com/videogames.yahoo.com/feature/
video-game-sales-break-records/1181404, Jan. 2008.
[30] L. Tang and M. Crovella. Virtual landmarks for the Internet.
In Proc. Internet Measurement Conference (IMC), pages
143–152, Oct. 2003.
[31] W. Theilmann and K. Rothermel. Dynamic distance maps of
the Internet. In Proc. Joint Conference of the IEEE Computer
and Communications Societies (INFOCOM), Mar. 2000.
[32] W. S. Togerson. Multidimensional scaling of similarity.
Psychometrika, 30(4):379–393, Dec. 1965.
[33] G. Wang, B. Zhang, and T. S. E. Ng. Towards network
triangle inequality violation aware distributed systems. In
Proc. Internet Measurement Conference (IMC), pages
145–157, Oct. 2007.
[34] B. Wong, A. Slivkins, and E. G. Sirer. Meridian: A
lightweight network location service without virtual
coordinates. In Proc. SIGCOMM Conference, pages 85–96,
Aug. 2005.
[35] G. Yona, N. Linial, and M. Linial. ProtoMap: automatic
classiﬁcation of protein sequences and hierarchy of protein
families. Nucleic Acids Research, 28(1):49–55, 2000.
[36] H. Zheng, E. K. Lua, M. Pias, and T. G. Grifﬁn. Internet
routing policies and round-trip times. In Proc. Passive and
Active Measurement Conference (PAM), Mar./Apr. 2005.
[37] G. Zigelman, R. Kimmel, and N. Kiryati. Texture mapping
using surface ﬂattening via multi-dimensional scaling. IEEE
Transactions on Visualization and Computer Graphics,
8(2):198–207, Apr. 2002.
326