hide its own identity while communicating with another node in the anonymous network
(which in turn can be anonymized, or not, by its own choice).
5.2.  A First Glance
Now, let’s say we have a situation where a network node, , wishes to be anonymous while
communicating with another network node, . The resulting situation when using the protocol can
be illustrated with the following figure.
Figure 1. One-way anonymized communication, overview
As can be seen in the figure, the traffic from  is being forwarded through a number of inter-
mediary nodes before reaching , and any reply from  will be sent back through the same path.
This way,  has no way of knowing the identity of , since  only knows the IP address of the last
intermediary node, but has no knowledge of what is going on beyond that point.
   = End-point node
   = Selected intermediary network node
   = Non-involved network node
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
13(68)
5.3.  A Little Further Look
As a necessary consequence of the protocol design (which is in turn based on the previously
listed goals, directives and assumptions, and will be described in more detail later in this paper),
all nodes in the network are responsible for maintaining their own anonymizing forwarding paths
like this, or routing paths as they are called within the bounds of this protocol.
In the previous example, the routing path belonged to node , and thus could only be used to
anonymize node . This means that, in this example, only node  was being anonymized. This is
a perfectly valid circumstance though, where a node, in this case node , has only joined the
network to be able to communicate with anonymized nodes, while not itself being anonymized.
There are of course plenty of situations where both parties of a communication session want to
remain anonymous, and the resulting situation can be illustrated with the following figure.
Figure 2. Two-way anonymized communication, overview
As can be seen in this figure, the traffic from node  is now being forwarded though a group of
intermediary nodes, owned and controlled by , after which it is sent to another group of
intermediary nodes, owned and controlled by , and then finally reaches node . Any reply from 
will be sent in reverse, back through the same path.
This way,  has no way of knowing the identity of , since  only knows (at most) the IP address
of the last intermediary node in the routing path owned by , but has no knowledge of what is
going on beyond that point. This time though, the exact same thing also applies in the reverse
direction, i.e.  has no way of knowing the identity of , since  only knows (at most) the IP
address of the last intermediary node in the routing path owned by , but has no knowledge of
what is going on beyond that point.
We now have a simple model for a communication session where neither party has the ability to
know the identity of the other party, while still being able to engage in unrestricted communi-
cation. This is practically what the Phantom protocol is about at its core, but as they say, the devil
is in the details, and there are quite a bunch of those to consider.
   = End-point node
   = Selected intermediary network node
   = Non-involved network node
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
14(68)
6.  High-Level Design
The previous chapter raises several questions, and also allows for a few more definitions. This
chapter will try to clear up a few of these, while still on a higher, non-detailed, level.
6.1.  Some Further Definitions
• 
A routing path is a number of network nodes in the anonymous network, in a defined
order, selected by a particular anonymized node that also “owns” the path, over which
communications to/from this anonymized node can be forwarded/routed in order to help
keep its real identity hidden from its communication peers in the anonymous network.
• 
An exit routing path, or exit route, is a routing path through which the owning anonymized
node can make outgoing connections to other nodes in the anonymous network, and
thus, a mechanism for anonymizing network clients.
• 
The outermost node in an exit route is called an exit node.
• 
An entry routing path, or entry route, is a routing path through which the owning
anonymized node can accept incoming connections from other nodes in the anonymous
network, and thus, a mechanism for anonymizing network servers.
• 
The outermost node in an entry route is called an entry node.
• 
A routing tunnel is a connection established over a routing path, over which the
anonymized node owning the routing path can perform TCP-equivalent anonymized
communication with a specific peer node in the anonymous network.
• 
The network database is a fully distributed, decentralized database, based on DHT
(distributed hash table1) technology. It contains a number of individual virtual “tables”,
which in turn contain all global information necessary for the operation of the anonymous
network. All network nodes have access to the necessary parts of the contents of this
database, through a well-defined API.
• 
An AP address (Anonymous Protocol address) is the equivalent of an IP address within
the bounds of the anonymous network. AP addresses are used to identify individual
nodes on the anonymous network (without for that sake being able to deduce their IP
address or any similarly identifying real-world information).
6.2.  Routing Paths
The concept of routing paths is the central anonymizing mechanism of the protocol. All network
nodes wanting to hide their identity, i.e. the anonymized nodes of the network, make use of such
routing paths, and the individual anonymized nodes are also fully responsible for setting up and
maintaining these paths by themselves.
Routing paths can either be used to anonymize outgoing connections (e.g. clients connecting to a
web server) or to anonymize incoming connections (e.g. a web server wanting to remain
anonymous, while still allowing any client to connect to it), or both. This decision is also up to
each individual network node itself to make. As mentioned in the definitions above, a routing path
used to anonymize outgoing connections is called an exit path, and a routing path used to
anonymize incoming connections is called an entry path.
The general idea behind a routing path is that any node in the network, let’s call it , is able to
route its communications with any other node in the network through an arbitrary number of
intermediary network nodes. These intermediary network nodes are selected by the anonymized
node itself, which means that they are at worst probabilistically insecure (if random nodes are
selected from the network, there is a risk that they are malicious and collaborating with other
1 http://en.wikipedia.org/wiki/Distributed_hash_table
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
15(68)
nodes out-of-band, in order to reveal the identity of other nodes), and at best fully trusted (i.e. if
network nodes belonging to trusted friends are used).
The probabilistic insecurity factor is handled by using an arbitrary number of intermediary nodes,
selected by the anonymized node itself. The protocol is also designed such that no intermediary
node can derive the position at which it is located in the routing path, also not whether it is
adjacent to the anonymized node itself or not, and finally not even in which direction of the path
that the anonymized node is located. Also, the protocol is designed in such a way that no
intermediary node can ever eavesdrop on any of the information being routed through it, by
means of encryption.
Let’s illustrate such a routing path with a figure.
   = Anonymized network node
   = Selected intermediary network node
   = Selected terminating intermediary network node
Arbitrarily many intermediary nodes here
Figure 3. Routing path, overview
As can be seen in the figure, the anonymized node itself resides in one end of the routing path,
and is then followed by an arbitrary number of intermediary nodes, before the routing path finally
terminates in a special terminating intermediary node. If the routing path is an exit path, this
terminating intermediary node is called an exit node, and if the routing path is an entry path, the
terminating intermediary node is called an entry node. Both the number of nodes and the exact
nodes themselves are selected by the anonymized node, when it constructs the routing path.
The terminating intermediary node has some special responsibilities in addition to the pure data
routing task to which all intermediary nodes are dedicated. In the case of exit paths, the
terminating node (i.e. the exit node) establishes all outbound connections to target AP addresses
requested by the anonymized node that owns the routing path (thus being located at the other
end of it). In the case of entry paths, the terminating node (i.e. the entry node) listens for incoming
connections from other nodes in the anonymous network, and forwards these into the routing
path in order to establish a full connection from the remote peer to the anonymized node that
owns the routing path (thus being located at the other end of it).
As soon as such an outgoing or incoming connection is established, it becomes a separate
routing tunnel inside the routing path. The same routing path can theoretically be used for an
arbitrary number of parallel routing tunnels.
The real security of the protocol is of course intricately connected to the details of exactly how
these routing paths are created by the anonymized nodes, and how they are found by other
peers in the anonymous network. This will be discussed in detail in the following chapter, about
low-level design. Before we get to that, however, there are still some components of the protocol
left to discuss at this higher level.
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
16(68)
6.3.  Routing Tunnels
As mentioned in the definitions section above, a routing tunnel is the dedicated communication
channel created inside a routing path as soon as a connection is successfully established
between the anonymized node owning the routing path and another node on the anonymous
network. Such a connection between two nodes on the network can be seen as the anonymized
equivalent of a TCP connection over the common Internet.
It should be noted however, that the routing tunnel does not constitute the entire anonymized
connection between two nodes on the network. Rather, it makes up only the half of the
connection that belongs to the node owning the routing path over which the connection is being
established. The connection then continues from the terminating intermediary node of the routing
path, off to the other half of the connection, belonging to the other peer of the connection. This
can be illustrated with the following figure.
Figure 4. Two-way anonymized connection, involving two routing paths/tunnels
As can be seen in the figure, both of the end-point nodes of the connection are anonymized, and
thus each has its own routing path. These two routing paths are then connected with each other
by their respective exit/entry nodes, forming a single two-way anonymized connection, passing
through two routing tunnels and a connecting link between them.
As described in the previous chapter, not all nodes in the anonymous network are necessarily
anonymized though. Some of the nodes could just as well only be in the network to be able to
communicate with other anonymized nodes, without for that matter having the need to anonymize
themselves, thus saving resources and improving performance. Imagine for example a human
rights discussion forum on a web server located in a free democratic country. Such a web server
doesn’t have any immediate reason to anonymize itself, while at the same time some of its users
located in countries with repressive regimes might have an urgent need to both anonymize
themselves with respect to the web server (out of fear that someone connected to the regime
might get access to its log files) and also hide from their own ISP the fact that they are
communicating with this web server at all. In this situation, the web server can join the
anonymous network just in order to be able to accommodate users having these needs, but can
still itself be completely without anonymization. This can be illustrated with the following figure,
where the anonymized web client is represented by the anonymized node , and the non-
anonymized web server, still located on the anonymous network, is represented by the node :
   = End-point node
   = Selected intermediary network node
   = Selected terminating intermediary network node
   = Non-involved network node
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
17(68)
Figure 5. One-way anonymized connection, involving one routing path/tunnel
As can be seen in the figure, only the anonymized web client end-point node () of the
connection has its own routing path. The exit node of this routing path then connects directly to
the non-anonymized web server end-point node (). Thus, the entire one-way anonymized
connection constitutes a single routing tunnel, going over the single routing path, finally being
connected directly to the non-anonymized end-point node () with a connecting link from the exit
node of the exit path belonging to the anonymized node ().
It should be noted however, that even though the end-point node () is not anonymized, it is still
part of the anonymous network, reachable (only) through an AP address just like any other node
in the network. Not only that, but the protocol is also designed in such a way that it should be
impossible for any node (in this case ) to know or conclude if it is connected directly to a node
(in this case ), or to a routing path owned by the same node. Thus, even nodes that don’t make
use of routing paths themselves can still in many ways be considered as being anonymized, if by
no other means, through the existence of “reasonable doubt”, which has very important
performance implications for the protocol. This kind of reasonable doubt is, of course, of little use
for a server with a static AP address, since it won’t take long for any client to notice that the IP
address of its “entry node”, i.e. the server node itself in the non-anonymized case, is always the
same. For various clients in different situations, however, this can be of great usefulness,
discussed in more detail a bit later.
Anyway, the real security of the protocol is of course intricately connected to the details of exactly
how these routing tunnels are established over the routing paths, connected with each other, and
how data is routed through them. This will be discussed in detail in the following chapter, about
low-level design. Before we get to that, however, there are still some components of the protocol
left to discuss at this higher level.
   = End-point node
   = Selected intermediary network node
   = Selected terminating intermediary network node
   = Non-involved network node
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author:
Magnus Bråding
Version: 0.7
2008-08-04
18(68)
6.4.  AP Addresses
6.4.1.   
A Comparison between AP Addresses and IP Addresses
As mentioned in the definition section above, an AP address (Anonymous Protocol address) is
the equivalent of an IP address within the bounds of the anonymous network. Just like with IP
addresses on the Internet, each network node on the anonymous network has a unique AP
address2. There is, however, one key difference between an IP address on the Internet today,
and an AP address on the anonymous network. This difference lies in the connection between
the network address used by a person or company, and their real identity.
With a common IP address on the Internet today, it is always theoretically possible to track down
the real individual behind the address, or at least the legally responsible individual behind the
address.
With an AP address in the anonymous network, no one should be able to infer any further
information about the real identity of the node behind an address just by knowing the address
itself. To put it another way, just because you can communicate with someone over the network,
you shouldn’t automatically be able to get hold of their real identity. This key difference between
IP addresses and AP addresses is actually the entire reason for using the anonymization protocol
in the first place, rather than just using normal Internet communication directly over standard
TCP/IP.
Other than this key difference, AP addresses are actually extremely similar to IP addresses, for
the reasons further discussed below.
6.4.2.   
Backward Compatibility with TCP/IP Enabled Applications
The structure of an AP address is identical to the structure of an IP address, i.e. it constitutes 32
bits, arranged in four period-separated 8 bit numbers, like “1.2.3.4”. This equivalence to IP
addresses is very important in order to maintain backward compatibility with all existing IP
network communication enabled software, and even the possibility to anonymization-enable
these applications without their own knowledge, without their source code, and without the
participation of their authors.
This kind of third-party anonymization enabling of existing applications can be easily
accomplished by the simple application of some binary network API hooks, as long as the
application level interface for communicating over the anonymous network is identical to the
application level interface for communicating over standard TCP/IP.
For this reason, AP addresses have been designed to permit just that, an interface identical to
standard TCP/IP communications, and thus, AP addresses are structured just like IP addresses.
In order for a node on the anonymous network to connect to another node on the anonymous
network, a port number is also needed in addition to stating an AP address, just like with TCP
connections, for the same backward compatibility reasons.
Do note however, that as IPv6 addresses become commonplace on the Internet, there’s nothing
in the design of the protocol that makes it hard to start supporting these too, in exactly the same
way.
2 Actually, only nodes wanting to accept incoming connections really need to have an AP address, even.
White Paper:
Generic, Decentralized, Unstoppable Anonymity: The Phantom Protocol
Author: