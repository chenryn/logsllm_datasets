title:Settling Payments Fast and Private: Efficient Decentralized Routing
for Path-Based Transactions
author:Stefanie Roos and
Pedro Moreno-Sanchez and
Aniket Kate and
Ian Goldberg
Settling Payments Fast and Private: Efﬁcient
Decentralized Routing for Path-Based Transactions
Stefanie Roos
University of Waterloo
PI:EMAIL
Pedro Moreno-Sanchez
Purdue University
PI:EMAIL
Aniket Kate
Purdue University
PI:EMAIL
Ian Goldberg
University of Waterloo
PI:EMAIL
7
1
0
2
c
e
D
3
1
]
R
C
.
s
c
[
2
v
8
4
7
5
0
.
9
0
7
1
:
v
i
X
r
a
Abstract—1 Decentralized path-based transaction (PBT) net-
works maintain local payment channels between participants.
Pairs of users leverage these channels to settle payments via a
path of intermediaries without the need to record all transactions
in a global blockchain. PBT networks such as Bitcoin’s Lightning
Network and Ethereum’s Raiden Network are the most prominent
examples of this emergent area of research. Both networks
overcome scalability issues of widely used cryptocurrencies by
replacing expensive and slow on-chain blockchain operations with
inexpensive and fast off-chain transfers.
At the core of a decentralized PBT network is a routing
algorithm that discovers transaction paths between sender and
receiver. In recent years, a number of routing algorithms have
been proposed,
including landmark routing, utilized in the
decentralized IOU credit network SilentWhispers, and Flare, a
link state algorithm for the Lightning Network. However, the
existing efforts lack either efﬁciency or privacy, as well as the
comprehensive analysis that is indispensable to ensure the success
of PBT networks in practice. In this work, we ﬁrst identify
several efﬁciency concerns in existing routing algorithms for
decentralized PBT networks. Armed with this knowledge, we
design and evaluate SpeedyMurmurs, a novel routing algorithm
for decentralized PBT networks using efﬁcient and ﬂexible
embedding-based path discovery and on-demand efﬁcient stabi-
lization to handle the dynamics of a PBT network. Our simulation
study, based on real-world data from the currently deployed
Ripple credit network, indicates that SpeedyMurmurs reduces
the overhead of stabilization by up to two orders of magnitude
and the overhead of routing a transaction by more than a factor
of two. Furthermore, using SpeedyMurmurs maintains at least
the same success ratio as decentralized landmark routing, while
providing lower delays. Finally, SpeedyMurmurs achieves key
privacy goals for routing in decentralized PBT networks.
I.
INTRODUCTION
Since the advent of Bitcoin [19], many other blockchain-
based payment systems have been proposed and deployed
in practice to serve a multitude of purposes. For instance,
IOweYou (IOU) credit networks [3], [7] such as Ripple [1],
[28] or Stellar [32] leverage blockchain technology to enable
real-time gross settlements [25] between two end users across
different currencies and assets signiﬁcantly cheaper than the
current central banking system. Ethereum [6] builds on top of
a blockchain to construct a platform to run fully expressive
smart contracts.
However, the growing base of users and transactions is
resulting in blockchain scalability issues [2], [21]. Moreover,
the public nature of the blockchain leads to demonstrable
privacy breaches of sensitive data such as the identities of
1This paper will appear at NDSS 2018
the transaction partners and the transaction value [9], [13],
[14], [18], [26]. Academic and industry efforts are leading
towards peer-to-peer (P2P) path-based transaction (PBT) net-
works such as the Lightning Network [21] for Bitcoin, the
Raiden Network [24] for Ethereum, SilentWhispers [11] for
credit networks, or InterLedger [33] and Atomic-swap [10]
for inter-blockchain transactions; these decentralized PBT net-
works are promising for addressing scalability, efﬁciency, and
interoperability concerns with blockchains through off-chain
transactions requiring no expensive mining efforts. In fact, at
a recent blockchain event, the InterLedger team demonstrated
a transaction through seven blockchains including those in
Bitcoin, Ethereum, and Ripple [36].
Unlike in blockchain-based PBT networks such as Ripple
or Stellar, two users u and v in a decentralized PBT network lo-
cally maintain a weighted link (also called a payment channel,
state channel, or credit link, depending on the application). The
link’s weight characterizes the amount of funds (or assets) that
one user can transfer to the other, the exact nature of the link
depending on the application. For instance, in a credit network,
the weight deﬁnes the difference between the amount of credit
u is willing to grant v and the amount v already owes u.
A PBT network builds on top of three key algorithms:
routing, payment and accountability. The routing algorithm
is in charge of ﬁnding paths with enough funds from sender
to receiver. The payment algorithm settles the funds between
sender and receiver along the paths connecting them. Finally,
the accountability algorithm allows the resolution of disputes
in the presence of misbehaving users.
While frequently omitted or disregarded as an orthogonal
problem, the design of the routing algorithm is key to the
PBT network’s effectiveness, characterized by the fraction of
successfully resolved transactions; efﬁciency, characterized by
the delays experienced during a transaction as well as the
overhead created by transactions; and scalability, characterized
by the ability of a PBT network to maintain effectiveness and
efﬁciency for a growing base of users and transactions.
Whereas industry supposedly considers efﬁciency, effec-
tiveness, and scalability to be the main concerns for designing
a routing algorithm, we additionally emphasize the need for
privacy. Otherwise, the routing algorithm might reveal sensitive
information such as the transaction value, the identity of sender
and receiver, and the debt of one user to another. In this paper,
we stress that all of effectiveness, efﬁciency, scalability, and
privacy are important to the design of a routing algorithm.
A routing algorithm lacking any of these key properties is
unlikely to be deployed.
The few routing algorithms proposed so far for PBT
networks fail to achieve either privacy, efﬁciency, or scalability.
For instance, the routing algorithm in Ripple and Stellar relies
on a public blockchain that logs the complete PBT network,
thereby introducing blockchain fees and impeding privacy.
Canal [35] relies on a single server to store the complete
PBT network, ﬁnd paths, and settle payments between users.
Therefore, the server is trivially aware of all links between
users and their transactions. PrivPay [17] leverages trusted
hardware to encrypt the PBT network data at the server and
uses oblivious algorithms to hide the access patterns, thereby
increasing the privacy for the links between users and their
payments. Nevertheless, PrivPay still suffers from a single
point of failure and low scalability. Flare [23], a routing
algorithm for the Lightning Network, requires every user in the
path from sender to receiver to send the current fund amounts
for their payment channels to the sender,
thereby leaking
sensitive information [23]. The most promising approach with
regard to privacy is SilentWhispers [11], a decentralized PBT
network without a public ledger. However, as we show in this
paper, the routing algorithm in SilentWhispers lacks efﬁciency.
In this work, we present SpeedyMurmurs, a routing algo-
rithm for PBT networks that provides formal privacy guaran-
tees in a fully distributed setting and outperforms the state-
of-the-art routing algorithms in terms of effectiveness and
efﬁciency. SpeedyMurmurs extends VOUTE [30], a privacy-
preserving embedding-based [20] routing algorithm for mes-
sage delivery in route-restricted P2P networks. Targeting mes-
sage transmission in undirected and unweighted networks
rather than payments, VOUTE is unequipped for dealing
with weighted links and speciﬁcally changes of these weights
as a result of previous transfers. SpeedyMurmurs combines
the underlying ideas of VOUTE with the speciﬁcs of credit
networks. In particular:
• SpeedyMurmurs considers both the available funds and
the closeness to the destination of a neighbor when
routing a payment, resulting in an efﬁcient algorithm with
ﬂexible path selection.
• SpeedyMurmurs employs an on-demand efﬁcient sta-
bilization algorithm that reacts to changes of links if
necessary but keeps the overhead corresponding to these
changes low.
• SpeedyMurmurs provides an improved handling of con-
current transactions by allowing nodes to proactively allo-
cate exactly the amount of funds required for a transaction
rather than barring concurrent transactions from using a
link altogether or risking failures during the subsequent
payment phase.
• In our simulation study, which models a credit network
and transactions based on a real-world dataset of Ripple
ranging from 2013 to 2016, SpeedyMurmurs performs
transactions at about twice the speed of SilentWhispers
and reduces the communication overhead of transactions
by at least a factor of two while maintaining a similar or
higher effectiveness.
• SpeedyMurmurs reduces the overhead of managing link
changes by 2–3 orders of magnitude except for rare
phases (approximately one per year) in the Ripple dataset
corresponding to sudden rapid growth.
• SpeedyMurmurs achieves value privacy, i.e., the value
of a transaction remains hidden, as well as sender and
receiver privacy, i.e., the identities of the two users remain
hidden from the adversary.
In summary, SpeedyMurmurs offers an effective, efﬁcient,
and scalable solution for privacy-preserving routing in PBT
networks,
thus being a promising candidate for upcoming
deployment of such networks. Our release of the initial results
initiated a discussion about the deployment of SpeedyMurmurs
or related algorithms in the context of the Lightning network.2
II. STATE OF THE ART AND LIMITATIONS
We ﬁrst brieﬂy overview the notion of a PBT network.
Then, we introduce the concepts of landmark routing and
embedding-based routing, including the description of Silent-
Whispers [11], a PBT network based on landmark routing, and
VOUTE [30], an embedding-based routing algorithm, which
we adapt to PBT networks in Section IV.
A. PBT Networks
In a PBT network, pairs of users locally maintain links
weighted with application-dependent funds. In the Lightning
Network for instance, two users create a link by adding a
deposit transaction in the blockchain and update such links by
locally adjusting their deposit’s value. The Lightning Network
thereby reduces the load on the blockchain and it has become
the most promising alternative for scaling Bitcoin.
The payment operation in a PBT network involves a path of
intermediate users who adjust their links pairwise to effectively
settle funds between a sender and a receiver. In the Lightning
Network, each intermediate user increases her deposit’s value
with their predecessor on the path by the transaction amount.
Similarly, she decreases the deposit’s value with her successor
by the same amount. However, a payment cannot be performed
without a routing algorithm to ﬁnd the path itself at ﬁrst.
B. Landmark Routing
The landmark routing technique [34] enables the computa-
tion of a subset of paths between a sender and a receiver in a
PBT network without relying on the cost-intensive max-ﬂow
approach. The key idea of landmark routing is to determine
a path from sender to receiver through an intermediate node,
called a landmark, usually a well-known node of high connec-
tivity. Using several such landmarks increases the number of
computed paths between sender and receiver. While landmark
routing does not discover all possible paths and hence might
lead to a lower probability for a successful payment, past work
indicates that the decrease of success is small in comparison
to the gain in performance [17], [35].
Initially, each landmark starts two instances of the Breadth-
First Search (BFS) algorithm, resulting in two spanning trees.
In the ﬁrst instance, only forward edges are considered and
shortest paths from the landmark to each node are calculated.
2https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/
000798.html
2
The second instance considers only reverse edges and results
in shortest paths between each node and the landmark. As PBT
networks change over time, landmarks repeat this initialization
process periodically.
The path discovery between a sender and receiver then
concatenates the path from the sender to the landmark (using
reverse edges) and the path from the landmark to the receiver
(using forward edges). The sender can send funds along the
path as long as the amount of funds is at most as high as the
available credit on each link on the path.
There are two versions of landmark routing. The ﬁrst
version, which we call landmark-centered, always concatenates
a path from the source to a landmark and from the landmark
to the destination. The second version, which we call tree-only
routing, discovers the shortest path in the BFS tree, which does
not necessarily contain a landmark.
1) Landmark Routing in SilentWhispers: SilentWhispers
utilizes landmark-centered routing to discover multiple paths
and then performs multi-party computation to determine the
amount of funds to send along each path. The initialization
of the landmark routing follows the above description, using
multiple landmarks that perform periodic BFSs.
The actual payment relies on two operations: a probe
operation and the actual payment operation. We here describe
the probe operation as it performs the routing and decides
on the credit to be transferred along each path. The payment
operation then merely executes the transfers suggested by the
probe operation in a secure manner.
At the core of the probe operation is a secret-sharing-based
multiparty computation that computes the credit available in
a path. After discovering paths between sender and receiver
using landmark routing, each pair of adjacent users in the path
sends a share of their link’s value to each of the landmarks.
The sender and receiver must construct additional shares that
act as padding in order to hide the actual length of the path,
and effectively preserve the identities of the actual sender and
receiver. With the help of cryptographic signatures, relying on
fresh keys to hide the identities of the nodes on the path, and
using multiparty computation, the landmarks determine shares
that the sender can combine to obtain the minimal available
credit zi of the ith path. If the sum of the zi values is at least
equal to the total payment amount, the sender assigns values
c1, . . . , c|L| to the paths such that ci ≤ zi. The result of the
probe operation are these values ci and handles to the paths,
which the payment operation leverages to perform the actual
transfer.
2) Weaknesses of SilentWhispers: Based on the above
description, we identify four issues related to the implemen-
tation of the routing algorithm in SilentWhispers. First, the
periodic tree creation (execution of BFS) fails to take into
account changes in the network immediately, which can lead to
signiﬁcant failure rates due to outdated information. Moreover,
periodic tree creation induces unnecessary overhead due to re-
computation for parts of the PBT network that might not have