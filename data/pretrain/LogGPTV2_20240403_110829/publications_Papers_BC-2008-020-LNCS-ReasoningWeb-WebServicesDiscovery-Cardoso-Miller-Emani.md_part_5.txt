registry for a service with an input FinanceAccount (see Section 3).
Let us also assume that the registry has only an advertisement with the input Con-
tract. In such a case, the registry informs the user that no Web service matching the
search criteria was found. This search was based solely on a syntactic analysis. Now,
let us assume that Web services descriptions are annotated with ontological concepts.
The two Web services’ inputs, FinanceAccount and Contract, are annotated with con-
cepts with the same name in the ontology shown in Figure 4 (the names are the same
for simplicity reasons, they could be different). Using this ontology, a semantically
enhanced UDDI registry can use the ontological information to improve the search.
In such a situation, the results of the match would return a Web service since the
concept Contract is a generalization of concept FinanceAccount. That is, the proper-
ties of the concept FinanceAccount,
{agreementMember, agreementPeriod, effectiveDate, insured, accountHolder,
amountDue}
are a superset of the properties of the concept Contract,
{agreementMember, agreementPeriod, effectiveDate, insured}.
Since all the properties of Contract exist in FinanceAccount, there is a match and a
reference to the Web service is returned to the user. This example shows that different
concepts from the same ontology can be matched by our algorithm even when their
properties do not match semantically. The example shown in section 3.3 also illus-
trates that two concepts from two different ontologies can be matched by our algo-
rithm even if their properties do not match syntactically.
From the business perspective SM-T, MWSDI, and Lumina are all about grouping
services and distributing them in different registries based on domain knowledge, for
locating the right services easily. On the other hand, from the technical perspective,
SM-T, MWSDI, and Lumina can provide a scalable infrastructure for accessing mul-
tiple registries and semantic enhancements to current service discovery mechanisms.
We believe that to develop processes in the current network economy [45], architec-
tures and algorithms like SM-T, MWSDI, and Lumina will drive the evolution of
businesses’ interactions using Web services. This infrastructure will also help Web
services by changing the focus from a static to a more dynamic business settings. To
discover Web services using Lumina the following steps can be followed:
• Download Lumina and install it as the eclipse plug in. Radiant has to be in-
stalled before installing Lumina.
• The screen is divided into six parts: Navigator/Outline, UDDI editor WSDL
editor, Information list, Discovered results and Ontology navigator.
264 J. Cardoso, J.A. Miller, and S. Emani
• Follow the same steps as for Radiant to load the ontology, create a new project
and WSDL.
• Click on the Registry drop down menu and select registry. A window pops up.
Add a new registry and connect.
• Click on the Publish menu and publish a business followed by the WSDL.
• In the UDDI editor select the operation, input, and output according to what
you want to discover the web service and drag and drop the concept on them
from the ontology navigator.
• At the information list the selected operations or IOPEs will be displayed se-
lect on them and click on discover.
• The web services discovered will be displayed on the discovered results pane.
5 Related Work
The discovery of services “boils down” to determining the similarity of services’ prop-
erties which are typically annotated with ontological concepts. In the literature we can
find four distinct approaches to calculate the semantic relations among concepts. In
[25-27], ontology based approaches are presented. The most basic metric simply com-
putes the distance between two concepts in an ontology. Corpus based approaches are
described in [28-30]. These approaches use a corpus to establish the statistical co-
occurrence of words. Information theoretic approaches [23, 31-33] consider both a
corpora and an ontology, and use the notion of information content from the field of
information theory. By statistically analyzing corpora, probabilities are associated to
concepts based on word occurrences. Dictionary based approaches [34, 35] use a ma-
chine readable dictionary to discover relations between concepts. For example, one
approach determines the sense of a word in a given text by counting the overlaps be-
tween dictionary definitions of the various senses.
Some of the above approaches, to calculate the semantic relations among concepts,
have been used to deploy discover algorithm for semantic Web services. The OWL-
S/UDDI Matchmaker [46] introduces semantic search into the UDDI directory by em-
bedding an OWL-S Profile in a UDDI data structure, and augmenting the UDDI registry
with an OWL-S matchmaking component. The matching algorithm recognizes four
degrees of match between two concepts defined in the same ontology: (1) exact, (2)
plug in, (3) subsume, and (4) fail. The function used by the algorithm is asymmetric and
is based on the existence of relationships between concepts. When no direct relationship
exists among two concepts the algorithm simply returns fail. Unlike the algorithm pre-
sented in this paper, the OWL-S/UDDI Matchmaker searches for services based on
inputs and outputs within the IOPEs (Input, Output, Precondition, and Effect) of the
profile which must belong to the same ontology. Our approach allows evaluating the
similarities of IOPE that are annotated with concepts from distinct ontologies.
The METEOR-S [20] Web Service Annotation Framework (WSAF) allows semi-
automatically matching WSDL concepts (such as inputs and outputs) to DAML and RDF
ontologies using text-based information retrieval techniques (for example, synonyms, n-
grams and abbreviation). The strength of matches (SM) is calculated using a scoring
formula which involves element (ElemMatch) and structure level schema (Sche-
maMatch) matching. The ElemMatch function performs the element level matching
Web Services Discovery Utilizing Semantically Annotated WSDL 265
based on the linguistic similarity of the names of the two concepts. The SchemaMatch
function examines the structural similarity between two concepts. A concept in an ontol-
ogy is usually defined by its properties, superclasses and subclasses. Since concept labels
are somewhat arbitrary, examining the structure of a concept description can provide
more insight into its semantics. In WSAF, the XML representation of WSDL is matched
against the concepts of a given ontology. The best match between WSDL and ontological
concepts are returned to users as a suggestion of potential mappings. It should be noticed
that the work presented in [20] cannot be easily adapted to our problem. There are several
reasons for this. First, the weight values for calculating the MS function were set without
empirical testing and validation. Also, the weights are not defined for a set of ElemMatch
and SchemaMatch values. For example, if 0.5<ElemMatch<0.65 then no weights are
suggested. Furthermore, the function that computes the ElemMatch of a WSDL concept
and an ontological concept is not defined when the MatchScore is other than zero, but is
less than one, using the NGram or Synonym matching algorithms.
In [47], the authors present a hybrid approach to Semantic Web service matching.
The hybrid matchmaker, called OWLS-MX, is to be used to find service requests
specified in OWL-S. OWLS-MX can be seen as an extension of the OWL-S/UDDI
Matchmaker presented in [46]. Their approach is somewhat similar to our in that they
“complement logic based reasoning with approximate matching based on syntactic
information retrieval (IR) based similarity computations”. The IR based methods used
include: the extended Jacquard similarity coefficient, the cosine similarity value, and
the Jensen-Shannon information divergence based similarity value. Our approach dif-
fers in the sense that we have used q-grams for syntactic matching. But this is only a
minor difference since, as we have explained previously in section 4.3, in our approach
other syntactic matching functions can be used such as: soundex, abbreviation expan-
sion, stemming, tokenization and other techniques borrowed from the information
retrieval (see [37].), including the matching function used by OWLS-MX. The major
difference in our work lies on the use of the Tversky’s model. While OWLS-MX
mainly compares concepts syntactically when the logic-based comparison fails, in our
approach we compare syntactically, not the concepts themselves, but the properties of
the concepts. For example, if the concepts ‘car’ and ‘automobile’ are compared using
OWLS-MX and the concepts are not related with a parent -child relationship (i.e., an
exact, plug-in, or subsumes relationship is not found), the algorithm will answer fail,
meaning that there is no match. Using SM-T, the algorithm will try to syntactically
match the properties of the concepts. Therefore, if the concept ‘car’ has the properties:
‘engine’, ‘body’ and ‘wheels’ and the concept ‘automobile’ has the properties; ‘bigen-
gine’, ‘car_body’ and ‘fourwheels’, the SM-T algorithm will indicate that there is a
partial match (this will be expressed with a normalized value).
6 Conclusions
In this paper we have described a semantic matching algorithm to be used by UDDI
registries enhanced with semantics. Our algorithm can work with Web services de-
scribed with WSMO and OWL-S, or annotated with SAWSDL (previously WSDL-S).
Compared to previous work [46], we do not limit the classification of the accuracy of
matching a request with an advertisement using a four value schema (i.e. exact, plug
266 J. Cardoso, J.A. Miller, and S. Emani
in, subsume, and fail). The accuracy of matching is assessed with a continue function
with the range [0..1]. Furthermore, and compared to [46], we allow the matching of
semantic Web services both with and without a common ontology commitment. This
aspect is important since it is not realistic to assume that Web services will always be
defined by the same ontology. In some cases, similar services may be defined by
different ontologies. Furthermore, we take into account functionality.
Our algorithm relies on Tversky’s feature-based similarity model to match requests
with advertisement. This model takes into account the features or properties of onto-
logical concepts and not the taxonomy that defines the hierarchy of concepts. We
believe that when matching inputs, outputs and functionality, the analysis of features
of concepts is fundamental when matching concepts from different ontologies, since
they typically have distinct taxonomies. The matching process can be easily extended
to include non-functional capabilities of services.
References
1. Chinnici, R., et al.: Web Services Description Language (WSDL) Version 1.2, W3C
Working Draft 24 (2003)
2. Chinnici, R., et al.: Web Services Description Language (WSDL) Version 2.0 Part 1: Core
Language (2006), http://www.w3.org/TR/wsdl20/
3. UDDI. Universal Description, Discovery, and Integration (UDDI v3.0) (2005),
http://www.uddi.org/
4. SOAP. Simple Object Access Protocol 1.2 (2003),
http://www.w3.org/TR/soap12-part1/
5. Cardoso, J., Sheth, A.P.: Introduction to Semantic Web Services and Web Process Compo-
sition. In: Cardoso, J., Sheth, A.P. (eds.) Semantic Web Process: powering next generation
of processes with Semantics and Web services, pp. 1–13. Springer, Heidelberg (2005)
6. Cardoso, J., Sheth, A.: Semantic e-Workflow Composition. Journal of Intelligent Informa-
tion Systems (JIIS) 21(3), 191–225 (2003)
7. Verma, K., et al.: METEOR-S WSDI: A Scalable P2P Infrastructure of Registries for Se-
mantic Publication and Discovery of Web Services. Journal of Information Technology
and Management (ITM), Special Issue on Universal Global Integration 6(1), 17–39 (2005)
8. Curbera, F., Ehnebuske, D., Rogers, D.: Using WSDL in a UDDI Registry, Version 1.07, UDDI
Best Practice, May 21 (2002), http://www.uddi.org/pubs/wsdlbestpractices-
V1.07-Open-20020521.pdf (Retrieved October 12, 2006)
9. Sheth, A., Meersman, R.: Amicalola Report: Database and Information Systems Research
Challenges and Opportunities in Semantic Web and Enterprises. SIGMOD Record 31(4),
98–106 (2002)
10. Smeaton, A., Quigley, I.: Experiment on Using Semantic Distance Between Words in Im-
age Caption Retrieval. In: 19th Intemational Conference on Research and Development in
Information Retrifval SIGIR 1996, Zurich, Switzerland (1996)
11. Rodríguez, A., Egenhofer, M.: Determining Semantic Similarity Among Entity Classes
from Different Ontologies. IEEE Transactions on Knowledge and Data Engineering 15(2),
442–456 (2002) (in press)
12. Klein, M., Bernstein, A.: Searching for Services on the Semantic Web Using Process On-
tologies. In: International Semantic Web Working Symposium (SWWS), Stanford Univer-
sity, California, USA (2001)
Web Services Discovery Utilizing Semantically Annotated WSDL 267
13. Cardoso, J., et al.: Academic and Industrial Research: Do their Approaches Differ in Add-
ing Semantics to Web Services. In: Cardoso, J., Sheth, A. (eds.) Semantic Web Process:
powering next generation of processes with Semantics and Web services, pp. 14–21.
Springer, Heidelberg (2005)
14. Martin, D., et al.: Bringing Semantics to Web Services: The OWL-S Approach. In: Car-
doso, J., Sheth, A.P. (eds.) SWSWPC 2004. LNCS, vol. 3387. Springer, Heidelberg (2005)
15. Roman, D., et al.: WWW: WSMO, WSML, and WSMX in a nutshell. In: Mizoguchi, R.,
Shi, Z.-Z., Giunchiglia, F. (eds.) ASWC 2006. LNCS, vol. 4185. Springer, Heidelberg
(2006)
16. Akkiraju, R., et al.: Web Service Semantics - WSDL-S (2006),
http://www.w3.org/Submission/WSDL-S (Retrieved October 10, 2006)
17. Sivashanmugam, K., et al.: Framework for Semantic Web Process Composition. Interna-
tional Journal of Electronic Commerce (IJEC), Special Issue on Semantic Web Services
and Their Role in Enterprise Application Integration and E-Commerce 9(2), 71–106
(2004-2005)
18. Farrell, J., Lausen, H.: Semantic Annotations for WSDL (2006),
http://www.w3.org/2002/ws/sawsdl/spec/SAWSDL.html
19. Gomadam, K., et al.: Radiant: A tool for semantic annotation of Web Services. In: 4th In-
ternational Semantic Web Conference ISWC 2005, Galway, Ireland (2005)
20. Patil, A., et al.: MWSAF - METEOR-S Web Service Annotation Framework. In: 13th
Conference on World Wide Web, New York City, USA (2004)
21. Cardoso, J., Sheth, A.: Semantic Web Services, Processes and Applications. In: Jain, R.,
Sheth, A. (eds.) Semantic Web and Beyond: Computing for Human Experience. Springer,
Heidelberg (2006)
22. Paolucci, M., et al.: Semantic Matching of Web Services Capabilities. In: Horrocks, I.,
Hendler, J. (eds.) ISWC 2002. LNCS, vol. 2342. Springer, Heidelberg (2002)
23. Tversky, A.: Features of Similarity. Psychological Review 84(4), 327–352 (1977)
24. Zavaracky, A.: Glossary-Based Semantic Similarity in the WordNet Ontology, in Depart-
ment of Computer Science, University College Dublin, Dublin (2003)
25. Wu, Z., Palmer, M.: Verb Semantics and Lexical Selection. In: 32nd Annual Meeting of
the Associations for Computational Linguistics (ACL 1994), Las Cruces, New Mexico
(1994)
26. Rada, R., et al.: Development and Application of a Metric on Semantic Nets. IEEE Trans-
actions on Systems, Man, and Cybernetics 19(1), 17–30 (1989)
27. Leacock, C., Chodorow, M.: Combining local context and WordNet similarity for word
sense identification. In: Fellbaum, C. (ed.) WordNet: An Electronic Lexical Database, pp.
265–283. MIT Press, Cambridge (1998)
28. Turney, P.D.: Mining the Web for Synonyms: PMI-IR versus LSA on TOEFL. In: 12th
European Conference on Machine Learning. Springer, Heidelberg (2001)
29. Keller, F., Lapata, M.: Using the Web to Obtain Frequencies for Unseen Bigrams. Compu-
tational Linguistics (2003)
30. Church, K.W., Hanks, P.: Word association norms, mutual information, and Lexicography.
In: Vancouver, B.C. (ed.) 27th Annual Meeting of the Association for Computational Lin-
guistics. Association for Computational Linguistics, Vancouver (1989)
31. Lin, D.: An information-theoretic definition of similarity. In: 15th International Conf. on
Machine Learning. Morgan Kaufmann, San Francisco (1989)
32. Resnik, P.: Using Information Content to Evaluate Semantic Similarity in a Taxonomy. In:
14th International Joint Conference on Artificial Intelligence (1995)
268 J. Cardoso, J.A. Miller, and S. Emani
33. Jiang, J., Conrath, D.: Semantic Similarity Based on Corpus Statistics and Lexical Taxon-
omy. In: Intemational Conference on Computational Linguistics (ROCLINGX), Taiwan
(1997)
34. Lesk, M.: Automatic sense disambiguation using machine readable dictionaries: how to
tell a pine cone from an ice cream cone. In: 5th annual international conference on Systems
documentation. ACM Press, New York (1986)
35. Banerjee, S., Pedersen, T.: Gloss Overlaps as a Measure of Semantic Relatedness. In:
Eighteenth International Joint Conference on Artificial Intelligence, Acapulco, Mexico
(2003)
36. Richardson, R., Smeaton, A.: Using WordNet in a Knowledge-Based Approach to Infor-
mation Retrieval. Dublin City University/School of Computer Applications, Dublin, Ire-
land (1995)
37. Belew, R.K.: Finding Out About: A Cognitive Perspective on Search Engine Technology
and the WWW, p. 356. Cambridge University Press, Cambridge (2000)
38. Salton, G.: Automatic Text Processing: The Transformation, Analysis and Retrieval of In-
formation by Computer. Addison-Wesley, Massachusetts (1988)
39. UDDI. UDDI Spec. Technical Committee, UDDI Version 3.0.2, (2004),
http://uddi.org/pubs/uddi_v3.htm
40. Paolucci, M., et al.: Semantic matching of Web services capabilities. In: First International
Semantic Web Conference on the Semantic Web, Sardinia, Italy. LNCS. Springer, Heidel-
berg (2002)
41. Cardoso, J.: Quality of Service and Semantic Composition of Workflows, in Department
of Computer Science, p. 215. University of Georgia, Athens (2002)
42. Jaeger, M.C., Tang, S.: Ranked matching for service descriptions using DAML-S. In:
Persson, A., Stirna, J. (eds.) CAiSE 2004. LNCS, vol. 3084. Springer, Heidelberg (2004)
43. Trastour, D., Bartolini, C., Gonzalez-Castillo, J.: A Semantic Web approach to service de-
scription for matchmaking of services. In: The first Semantic Web Working Symposium,
California, USA (2001)
44. Cohen, W., Ravikumar, P., Fienberg, S.: A comparison of string distance metrics for
name-matching tasks. In: Kurumatani, K., Chen, S.-H., Ohuchi, A. (eds.) IJCAI-WS 2003
and MAMUS 2003. Springer, Heidelberg (2003)
45. Sheth, A.P., v.d Aalst, W., Arpinar, I.B.: Processes Driving the Networked Economy.
IEEE Concurrency 7(3), 18–31 (1999)
46. Srinivasan, N., Paolucci, M., Sycara, K.: An efficient algorithm for OWL-S based seman-
tic search in UDDI. In: Cardoso, J., Sheth, A. (eds.) Lecture Notes in Computer Science.
Springer, Heidelberg (2005)
47. Klusch, M., Fries, B., Sycara, K.: Automated Semantic Web Service Discovery with
OWLS-MX. In: Alonso, E., Kudenko, D., Kazakov, D. (eds.) AAMAS 2000 and AAMAS
2002. ACM Press, New York (2006)