title:Characterizing the Deployment and Performance of Multi-CDNs
author:Rachee Singh and
Arun Dunna and
Phillipa Gill
Characterizing the Deployment and Performance of
Multi-CDNs
Rachee Singh
PI:EMAIL
UMass Amherst
Arun Dunna
PI:EMAIL
UMass Amherst
Phillipa Gill
PI:EMAIL
UMass Amherst
ABSTRACT
Pushing software updates to millions of geographically diverse
clients is an important technical challenge for software providers. In
this paper, we characterize how content delivery networks (CDNs)
are used to deliver software updates of two prominent operating
systems (Windows and iOS), over a span of 3 years. We leverage a
data set of DNS and ping measurements from 9,000 RIPE Atlas
clients, distributed across 206 countries, to understand regional and
temporal trends in the use of multiple CDNs for delivering OS
updates. We contrast two competing methodologies for distributing
OS updates employed by Microsoft and Apple, where the majority
of Microsoft clients download Windows updates from their local
ISP. But, 90% of Apple clients access iOS updates from Apple’s
own network. We ﬁnd an approximate improvement of 70 ms in the
latency observed by clients in Asia and Africa when accessing
content from edge caches in local ISPs. Additionally, Microsoft
provides lower latencies to its clients in developing regions by
directing them to Akamai’s rich network of edge caches. We also
observe that clients in developing regions accessing Windows
updates from Level 3 get poor latencies arising from the absence of
Level 3’s footprint in those regions.
CCS CONCEPTS
• Networks ! Network measurement; Location based services;
Network monitoring;
ACM Reference Format:
Rachee Singh, Arun Dunna, and Phillipa Gill. 2018. Characterizing the
Deployment and Performance of Multi-CDNs.
In 2018 Internet
Measurement Conference (IMC ’18), October 31-November 2, 2018, Boston,
MA,
York,
pages.
https://doi.org/10.1145/3278532.3278548
ACM,
USA,
USA.
New
NY,
7
INTRODUCTION
1
Content Delivery Networks (CDNs) are employed by various
content providers to facilitate low-latency access to clients around
the globe. CDN deployments require a signiﬁcant ﬁnancial
investment by the content providers themselves [1]. With CDNs
leveraging their own proprietary store of network measurement data
and mapping heuristics, these networks can present different
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
IMC ’18, October 31-November 2, 2018, Boston, MA, USA
© 2018 Copyright held by the owner/author(s). Publication rights licensed to ACM.
ACM ISBN 978-1-4503-5619-0/18/10. . . $15.00
https://doi.org/10.1145/3278532.3278548
strengths and weaknesses relative to each other in terms of serving
certain types of clients (e.g., mobile users) or different geographic
regions (e.g., developing regions) better. These strengths combined
with a desire to improve reliability in the face of the failure of a
single CDN has led some organizations to use multiple CDNs to
deliver their content [2].
While the use of multiple CDN providers has been known for
nearly a decade, studies of their deployment have been limited.
Content providers have an interest in quantifying the performance
of multiple CDNs but publishing such data can be challenging if it
reﬂects poorly on their business partners. In this study, we take an
alternate approach by studying the deployment of multi-CDNs for
content delivery using end-to-end path latency observed by clients.
Using data from a recent plenary at RIPE71 [3], we focus on the
multi-CDN infrastructure employed by two large software vendors
(Apple and Microsoft) for delivering operating system (OS) updates
to their customers.
We extend prior analysis of this dataset and develop methods
to identify CDN edge caches and assign them to the appropriate
CDN provider (§3). With this methodology and dataset we perform
one of the ﬁrst large-scale and longitudinal analyses of multi-CDN
deployments. We speciﬁcally focus on understanding several facets
of multi-CDN deployment: (1) the mix of CDN providers employed
by content providers (§4.1), (2) the performance of the different
CDN providers (approximated by latency) (§4.2) and in different
regions (§4.3), (3) the stability of replica mappings (§5), and (4) the
impact of shifting between CDN providers for clients (§6).
Through our analysis, we make the following key observations:
Regional performance trends. There are signiﬁcant regional
variations in the client-side latency across continents. While clients
in developed regions (e.g., North America and Europe) observe a
median latency of 20 ms, clients in developing regions (e.g., Africa,
Asia, South America) observe median latencies as high as 200 ms.
There has been a decline in latency of access in developing regions
over
the last
room for
improvement.
Performance impact of edge caches. Clients in developing regions
observe signiﬁcant improvement in latency by accessing content
from local edge caches (Section 6.2). In particular, clients in Africa
see over 10X reduction in latency by migrating towards edge caches.
there is signiﬁcant
two years but
2 BACKGROUND
Latency is an important aspect of user experience on the Internet.
Due to this, content providers like Google, Microsoft, etc. have either
partnered with Content Delivery Networks (CDNs) or developed
their own solutions to bring content closer to users. Broadly, CDNs
employ one of two approaches for mapping content servers to clients:
DNS-based redirection of clients: CDNs that provide DNS
based client redirection develop a notion of the best edge server for
clients and use DNS responses to direct clients to the selected
replica(s). When the client resolves the URL of an object hosted on
the CDN, the authoritative name server of the CDN responds with
the IP address of the best edge server for the client. One limitation
of DNS based redirection is that all clients which have the same
local DNS resolver are redirected to the same edge server. While
this works well when clients use nearby local DNS resolvers, it fails
when a single resolver is responsible for a geographically diverse
set of clients (e.g., Google’s open DNS resolver [4]).
The Akamai CDN employs DNS based schemes for redirecting
clients to edge servers [5]. Building such an infrastructure for content
delivery is expensive and requires regular telemetry from clients to
determine the client-server mapping. Researchers have studied the
performance of DNS based redirection at Akamai and quantiﬁed
cases where DNS redirection under-performs and have proposed
measures to ﬁx the problem [5]. However, their solution relies on
ISPs implementing DNS ECS (RFC 7871).
Anycast based redirection of clients. CDNs also use anycast
routing for client redirection by announcing an edge server IP via
BGP from multiple locations on the Internet. Depending on the
client’s location, their ISP will choose the best path towards the
anycast preﬁx based on BGP routing policies. This approach is
simple to deploy since it does not require infrastructure deployment
or telemetry from the CDN. But this ease of deployment of anycast
CDNs comes at the cost of ﬁne-grained control. This can lead to
overloading of edge servers and inability to migrate speciﬁc clients
away from the overloaded server. Additionally, if a non-deterministic
phenomenon such as congestion in routers affects latency towards an
edge server, then anycast, which is BGP-driven, remains unaware.
Microsoft’s Bing service uses anycast, with a recent study
measuring its performance, and contrasting it with a DNS-based
approach [6]. This work analyzes active and passive measurements
from Microsoft’s edge servers to clients and categorizes client
preﬁxes that observe high latency from edge servers. They ﬁnd that
20% of client preﬁxes observe worse latency using anycast CDN as
compared DNS based CDNs.
3 METHODOLOGY
In this section, we discuss the measurement methodology used to
collect data on multi-CDN deployments and identify speciﬁc CDNs
and edge caches within the data set. The data set we consider
focuses on CDN deployments used to distribute operating system
(OS) updates for two large software vendors: Microsoft and Apple.
3.1 Data Collection
We leverage data collected over two years by ⇠9,000 RIPE Atlas
nodes located in ⇠3,000 autonomous systems (ASes) around the
world [3] to perform a detailed characterization of multi-CDN
deployment by two large software vendors: Microsoft and Apple.
Data is collected by issuing ping measurements from all available
vantage points in the RIPE Atlas platform to domains used for
hosting software updates: download.windowsupdate.com and
appdownload.itunes.apple.com for Microsoft
and Apple,
Table 1: Summary of our data set
Start Date
End Date
MSFT IPv4 August 1, 2015 August 31, 2018
MSFT IPv6 August 1, 2015 August 31, 2018
Apple IPv4 August 1, 2015 August 31, 2018
# Measurements
225,012,410
62,757,527
992, 988,166
respectively. Each probe resolves the domain name locally, and then
performs 5 pings to the resolved IP address. The average, minimum
and maximum round-trip time (RTT) of 5 pings is recorded for each
measurement. For Microsoft, both IPv4 and IPv6 pings are
performed every hour of the day. IPv4 pings are performed every 15
minutes to the Apple update URL. Table 1 summarizes our dataset.
Figure 1(a) shows the number of RIPE Atlas client preﬁxes (/24
granularity) that issue IPv4 ping measurements towards Microsoft’s
domain each day. The ﬁgure shows that the majority of probes are
located in Europe as RIPE Atlas is known to have a bias towards this
region. However, our analysis includes measurements from over 250
client preﬁxes in Africa, over 150 in South America and over 200
in Oceania. The number of clients increases across all continents
over the course of the measurement period with an average of 8,060
client preﬁxes making measurements each day.
Figure 1(b) shows the number of unique Microsoft server preﬁxes
that respond to our IPv4 ping measurements. We see an increase in
server IPs observed over time due expansion in CDN infrastructure.
Data Normalization. Since the distribution of RIPE Atlas probes
is skewed towards certain geographical regions (e.g., Europe) and
networks, we normalized the number of ping measurements
analyzed from each AS in a given time window. This normalization
can be done in several ways. We experiment with two normalization
techniques: (1) sampling a ﬁxed number of latency measurements
from each network and (2) sampling pings in proportion to the frac-
tion of all Internet users in that network. We obtain the number of
users in a network from the APNIC Labs AS Population dataset [9]
which estimates the subscriber could per AS. Both techniques yield
similar content provider composition and median latency in our
analysis and we present results of the normalization technique
where sampling is done in proportion to the number of subscribers
in a network. Since the number of users in a network can be a very
small fraction of all subscribers on the Internet, we sampled at least
5 pings from each network in a measurement time window.
Identifying CDN instances
3.2
In each measurement, the software update URL is resolved using
the resolve on probe option on RIPE Atlas vantage points. In this
section, we describe our method for identifying the organization
(content provider or CDN) the client is being referred to.
Identifying Content Providers. Content providers like Microsoft
and Apple have multiple ASes in different countries. We refer to
these ASes as the content provider’s family of ASes. We identify
content provider families using CAIDA’s AS to organization
mapping (AS2Org) [7]. We do a regular expression based search on
the name ﬁeld in AS2Org to ﬁnd members in a content provider’s
family. Additionally, ASes with same organization IDs in AS2Org
are considered to belong to the same organization. Using these
techniques, we ﬁnd 40 ASes corresponding to Microsoft and 11
ASes corresponding to Apple’s family of networks.
information to identify a CDN instance but using a combination of
reverse DNS, WhatWeb scanning and AS2Org mappings, we are
able identify nearly all CDN edge cache instances, leaving about
0.1% of the ping destination IPs unidentiﬁed. For these unidentiﬁed
IPs, all three of reverse DNS lookup, Whatweb scans and IP-to-AS
conversion fails (Other category in Figure 2a).
Total CDNs observed. We ﬁnd 1,059 ASes serving Microsoft’s
IPv4 clients, of which 930 contain edge caches. Similarly, we ﬁnd
that 449 ASes serve Microsoft’s IPv6 clients, and 407 of these
contain edge caches. Lastly, we ﬁnd 879 ASes serve Apple’s clients,
and 752 of these ASes contain edge caches. Since Akamai’s edge
caches are located in a large number of countries, we group all
Akamai edge caches into one bucket and refer to it as Edge - Akamai
in our analysis.
3.3 Limitations
In this section we discuss the challenges we face in making infer-
ences from the measurement study and describe ways in which we
mitigate them.
Skewed distribution of RIPE Atlas probes. Overall performance
measurement from RIPE Atlas probes will be biased towards the
performance observed by European clients, where the majority of
RIPE probes are located. We analyze the performance on a per-
continent basis to mitigate the geographical bias. A similar bias
can occur when a single network hosting disproportionately large
number of probes dominates the overall performance statistics. To
mitigate this we normalize the ping packet counts from each network
such that the contribution of pings from a network is proportional to
the number of users in the network [9]. Thus, from the set of RTT
measurements from a network in a given time window, we randomly
sample pings in proportion to the fraction of users (or eyeballs) in
that network.
Failed DNS resolutions and other errors. We observed ping and
DNS resolution failures during measurements (2% for Microsoft
IPv4, 10% for Microsoft
IPv6 and 3% for Apple IPv4
measurements). We excluded these data points from the analyses.
Additionally, some RIPE probes tend to be unreliable. Measuring
from these probes makes it hard to reason about the longitudinal
aspects of their performance. Therefore, we exclude probes with
less than 90% availability from our analysis.
Latency as an approximation for performance.
In this study,
we measured the latency of accessing OS updates from various
content providers. However, content providers often optimize other
parameters of client-side performance like throughput and stability
of the replica in terms of anycast routing [12].
4 CHARACTERIZING MULTI-CDNS
In this section, we describe the characteristics of multi-CDN deploy-
ments that serve content to Microsoft and Apple clients. We discuss
the combination of CDN providers that serve OS updates to clients
(§4.1) and compare the performance of these providers (§4.2). We
then analyze regional trends in the latency with a focus on clients in
developing regions like Asia, Africa and South America (§4.3).
(a)
(b)
Figure 1: Figure(a) shows the number of unique client preﬁxes (/24) that ping Mi-
crosoft’s software update domain in our measurements, per day. Figure(b) shows
the number of unique server preﬁxes (/24) that respond to the pings, per day.
Identifying CDN edge caches. Edge caches, deployed in ISP net-
works, serve an important role in bringing content closer to clients.
However, when a client is referred to an edge cache, we will usually
observe this as an IP address allocated to an ISP that is unrelated to
the CDN. To determine which CDN an edge cache IP corresponds
to we perform the following steps:
• We perform a reverse DNS lookup on the server IP address. We
develop regular expressions to identify speciﬁc CDNs based
on the returned hostname (e.g., Akamai hostnames contain
deploy.static.akamaitechnologies.com, Microsoft hostnames
contain msedge.net).
• Not all server IPs will resolve to a hostname or may resolve to
a hostname that does not correspond to a given CDN. In such
cases, we use the WhatWeb [8] web scanner to ﬁnd details
about IP addresses. WhatWeb is a web scanner which scans
IP addresses and domain names to ﬁngerprint them. We use
a set of regular expressions to identify instances of Akamai
(ﬁngerprint has the string AkamaiGHost) and Amazon (result
includes the string AWS).
Using AS2Org, we identiﬁed 40% of all Microsoft’s server
addresses that belong to popular CDN families (like Microsoft,
Apple, Akamai etc.). Regular expression search on hostnames
derived from reverse DNS and WhatWeb identiﬁed another 12% of
all Microsoft IPv4 server addresses observed in our measurements.
Finally, not all WhatWeb and DNS responses provide enough
Other Edge Caches
Level 3
Limelight
Edge − Akamai
Akamai
Apple
5
1
0
2
−
7
0
5
1
0
2
−
0
1
6
1
0
2
−
1
0
6
1
0
2
−
4
0
6
1
0
2
−
7
0
6
1
0
2
−
0
1
7
1
0
2
−
1
0
7
1
0
2
−
4
0
7
1
0
2
−
7
0
7
1
0
2
−
0
1
8
1
0
2
−
1
0
8
1
0
2
−
4
0
8
1
0
2
−
7
0
Date (MM−YYYY)
(a) Apple IPv4 Usage
Other Edge Caches
Level 3
Limelight
Edge − Akamai
Akamai
Apple
s
t
s
e
u
q
e
R
f
o
n
o
i
t
c
a
r
F
100%
75%
50%
25%
0%
)
s
m
(
T
T
R
n
a
i
d
e
M
150
100
50
0
s
t
s
e
u
q
e
R
f
o
n
o
i
t
c
a
r
F
100%
75%
50%
25%
0%
Other Edge Caches
Level 3
Akamai
Edge − Akamai
Microsoft
5
1
0
2
−
0
1
6
1
0
2
−
1
0
6
1
0
2
−
4
0
6
1
0
2
−
7
0
6
1
0
2
−
0
1
7
1
0
2
−
1
0
7
1
0
2
−
4
0
7
1
0
2
−
7
0
7
1
0
2
−
0
1
8
1
0
2
−
1
0
8
1
0
2
−
4
0
8
1
0
2
−
7
0
Date (MM−YYYY)
(a) CDNs providing Microsoft’s OS updates over IPv4.
)
s
m
(
T
T
R
n
a
i
d
e
M
150
100
50
0
Other Edge Caches
Level 3
Akamai
Edge − Akamai
Microsoft
5
1
0
2
−
0
1
6
1
0
2
−
1
0
6
1
0
2
−
4
0
6
1
0
2
−
7
0
6
1
0
2
−
0
1
7
1
0
2
−
1
0
7
1
0
2
−
4
0
7
1
0