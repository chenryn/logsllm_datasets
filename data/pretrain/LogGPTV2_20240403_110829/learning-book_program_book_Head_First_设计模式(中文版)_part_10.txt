数据。
2
狗对象
2
猫对象
主题对象
一旦数据改变，新的数
据会以某种形式送到
老鼠对象
观察者手上
观察者对象
这个对象不是观察老，所
以在主题数据改变时不会
鸭子对象
被通知。
PDG
你现在的位置
45
---
## Page 82
观察者模式的一天
观察者模式的一天
购对
鸭子对象过来告诉主题，它
（订阅）
想当一个观察者。
对等
要注册（
鸭子其实想说的是：我对你的
老鼠对
数据改变感兴趣，一有变化请
臀子对
许多观察者
通知我。
鸭子对象现在已经是正式的观察
者了。
狗对像
主题对象
鸭子静候通知，等待参与这项伟
韩子对售
对象
大的事情。一旦接获通知，就会
O
得到一个整数。
老鼠对售
许多观察者
主题有了新的数据值！
狗对像
8
主题对象
现在鸭子和其他所有观察者都会
收到通知：主题已经改变了。
对子对
对
老鼠对
许多观察者
46
第2章
---
## Page 83
观察者模式
我要删除自己
狗对象
老鼠对象要求从观察者中把自己
主题对象
除名。
（取消订阅）
附子对
猫对象
老鼠已经观察此主题太久，厌倦
了，所以决定不再当个观察者。
老鼠对象
许多观察者
狗对
老鼠离开了！
象
主题知道老鼠的请求之后，把它
鸭子对
对象
从观察者中除名。
老鼠对售
许多观察者
主题有一个新的整数。
14
14
除了老鼠之外，每个观察者都会收到
14
狗对
通知，因为它已经被除名了。嘘！
不要告诉别人，老鼠其实心中暗暗
时子对
对象
地怀念这些整数，或许哪天又会再
次注册，回来继续当观察者呢！
老鼠对像
许多观察者
你现在的位置
47
---
## Page 84
五分钟短剧
五分钟短剧：观察的主题
在今天的讽刺短剧中，有两个后泡沫时期的软件工程师，遇
到一个真正的猎头
我是Ron，我正在导
好的，宝贝！
找一个Java程序员的工作，
我把你和其他人都加
入我的JaVa程际员清单
我有五年经验，而险…...
中，不要打电话给我，我
会打电活给你。
猎头/主题
我把你加入我的清单
一号软件开发人员
中。你会和其他人一样
收到我的通知。
你好，我是
Jill。我写过
很多EJB系统，我对
Java程序员的工作感
家
兴越。
PDG
二号软件开发人员
主题
48
第2章
---
## Page 85
观察者模式
其间，Ron和Jill继续过自己的日子，
如果Java工作来了，他们会接到通知，
毕竞，他们是观察者嘛！
谢谢，我立刻把
我的简历发过去。
嗨！观察
这个家伙根本是个混
者，
“JavaBeans反
蛋，谁需要他呀！我要
斗城”需要一个JaVa程
自己去找工作
序员，快去应征，别搞砸
了！
哇哈哈！把介绍
L
费汇到我的银行
户头，宝贝！
观察者
观察者
主题
妈的！你给我记着
我会找机会整你，你别想
Jil自己找到工作了！
在本村混了。我立刻把你从
你可以把我从
名单中国除！！！
名单中副除，
我
自己找到工作了！
PDG
观察者
主题
你现在的位置
49
---
## Page 86
定义观察者模式
两周后·····
Jill热爱她的现状，她不再是观察者了。她还
因为签约获得了一笔奖金，因为公司不用拨出
一大笔钱给猎头。
但是，我们亲爱的Ron，又如何了？我们听说他设局
把原来的猎头搞得毫无招架之力。他不只是一个观察
者，也有了自己的求职者清单，只要付一笔钱给猎头，
就可从其他求职者赚取更多钱。Ron既是一个主题，
也是一个观察者，集两种角色于一身。
PDG
50
第2章
---
## Page 87
观察者模式
定义观察者模式
当你试图勾勒观察者模式时，可以利用报纸订阅服务，以及出
版者和订阅者比拟这一切。
在真实的世界中，你通常会看到观察者模式被定义成：
观察者模式定义了一
观察者模式定义了对象之间的一对多依赖，这
系列对象之间的一对
样一来，当一个对象改变状态时，它的所有依赖者都
多关系。
会收到通知并自动更新。
当一个对象改变状态，
让我们看看这个定义，并和之前的例子做个对照：
其他依赖者都会收到
通知。
一对多关系
有状态的
对象
狗对象
主题对象
依赖老对
对
自动更新/通知
老鼠对
许多级察者
主题和观察者定义了一对多的关系。观察者依赖于此主题，只
要主题状态一有变化，观察者就会被通知。根据通知的风格，
观察者可能因此新值而更新。
稍后你会看到，实现观察者模式的方法不只一种，但是以包含
PDG
Subject与Observer接口的类设计的做法最常见。
让我们快来看看吧..
你现在的位置
51
---
## Page 88
松耦合
定义观察者模式：类图
每个主题可以有
所有潜在的观察者必须实现观察
许多观察者
老接口，这个接口只有update(）一
这是主题接口，对象使用此
个方法，当主题状态改变时它被
接口注册为观察老，或老把
调用。
自己从观察老中到除
>
许多观察者
Subject
>
registerObserver(]
Observer
removeObserver()
update()
notifyObservers()
ConcreteSubject
主题
registerObserver() [)]
removeObserver() (..)
update()
一个具体主题总是实现主题
notilyObservers() (-)
//其他观察者的具体
方法
接口，除了注册和撤销方法
心外，具体主题还实现了
getState()
setState()
notisyO6servers（）方法，此方法
用于在状态改变时更新所有当
前观察者。
具体的观察者可以是实现此
接口的任意类。观察者必须
具体主题也可能有设置和获取
注册具体主题，以便接收更
状态的方法（稍后全进一步讨
论）。
新。
therepareno
DumbQuestions
问：
这和一对多的关系有何关联？
其间的依赖是如何产生的？
答：
利用观察者模式，主题是具有状态
合：
因为主题是真正拥有数据的人，观察
的对象，并且可以控制这些状态。也就是说，
者是主题的依赖者、在数据变化时更新，这样比
有“一个”具有状态的主题。另一方面，观察者
起让许多对象控制同一份数据来，可以得到更干
使用这些状态，虽然这些状态并不属于他们。有
净的的00设计。
许多的观察者，依赖主题来告诉他们状态何时改
变了。这就产生一个关系：“一个”主题对“多
个”现察者的关系。
52
第2章
---
## Page 89
观察者模式
松耦合的威力
当两个对象之间松耦合，它们依然可以交互，但是不太清楚彼此的细节。
观察者模式提供了一种对象设计，让主题和观察者之间松耦合。
为什么呢？
关于观察者的一切，主题只知道观察者实现了某个接口（也就是Observer接口）。主
题不需要知道观察者的具体类是谁、做了些什么或其他任何细节。
任何时候我们都可以增加新的观察者。因为主题唯一依赖的东西是一个实现
Observer接口的对象列表，所以我们可以随时增加观察者。事实上，在运行时我们可
以用新的观察者取代现有的观察者，主题不会受到任何影响。同样的，也可以在任何
时候删除某些观察者。
你能够找到
多少种不同
有新类型的观察者出现时，主题的代码不需要修改。假如我们有个新的具体类需要当
的改变：
观察者，我们不需要为了兼容新类型而修改主题的代码，所有要做的就是在新的类里
实现此观察者接口，然后注册为观察者即可。主题不在乎别的，它只会发送通知给所
有实现了观察者接口的对象。
我们可以独立地复用主题或观察者。如果我们在其他地方需要使用主题或观察者，可
以轻易地复用，因为二者并非紧耦合。
改变主题或观察者其中一方，并不会影响另一方。因为两者是松耦合的，所以只要他
们之间的接口仍被遵守，我们就可以自由地改变他们。
设计原则
为了交互对象之间的松耦合设计而
努力。
松耦合的设计之所以能让我们建立有弹性的OO系统，能够应对变化，
是因为对象之间的互相依赖降到了最低。
你现在的位置，53
---
## Page 90
规划气象站
Sharpenyourpencil
在继续后面的内容之前，请试着画出实现气象站所需要的类，其中包括
WeatherData类及布告板组件。确定你的图能够显示出各个部分如何结合起来，以
及别的开发人员如何能够实现他自己的布告板组件。
如果你需要一点小帮助，请阅读下一页，你的队友正在讨论如何设计气象站。
54
第2章
---
## Page 91
观察者模式
办公室隔间对话
回到气象站项目，你的队友们已经开始全面思考这个问题了·
那么，我们该如何建
立这个系统？
Mary：这个嘛！使用观察者模式啰！
Sue：是的.....但是如何应用？
Mary：唔，我们再看一下定义好了：
观察者模式定义了对象之间的一对多依赖，这样一来，当一个对象改变状态时，它的所有依
赖者都会收到通知并自动更新。
Mary：当你思考这个定义时，你会发现很有道理。我们的WeatherData类正是此处所说
Sue：没错。WeatherData对象的确是有状态，包括了温度、湿度、气压，而这些值都会改变。
Mary：对呀！而且，当这些观测值改变时，必须通知所有的布告板，好让它们各自做出处
理。
Sue：好棒！我现在知道如何将观察者模式应用在气象站问题上了。
Mary：还有一些问题有待理清，我现在还不太了解它们的解决方法。
Sue：什么问题？
Mary：其中一个问题是，我们如何将气象观测值放到布告板上。
Sue：回头去看看观察者模式的图，如果我们把WeatherData对象当作主题，把布告板当作观
察者，布告板为了取得信息，就必须先向WeatherData对象注册。对不对？
Mary：是的.…….一且WeatherData知道有某个布告板的存在，就会适时地调用布告板的某个
方法来告诉布告板观测值是多少。
Sue：我们必须记得，每个布告板都有差异，这也就是为什么我们需要一个共同的接口的原
因。尽管布告板的类都不一样，但是它们都应该实现相同的接口，好让WeatherData对象能够
知道如何把观测值送给它们。
Mary：我懂你的意思。所以每个布告板都应该有一个大概名为update（）的方法，以供
WeatherData对象调用。
Sue：而这个updateO方法应该在所有布告板都实现的共同接口里定义。