# 3 0x000000000042effc in transcode () at ffmpeg.c:4162
# 4 0x000000000042f716 in main (argc=0x4, argv=0x7fffffffea48) at
ffmpeg.c:4357
# 5 0x00007ffff48a543a in __libc_start_main () from /usr/lib/libc.so.6
# 6 0x0000000000407ada in _start ()
get_input_packet() 调用结束之后打印pkt的内容，可以看到里面已经有了/etc/passwd文件的开头的部分信息。  
然后 ffmpeg会转码成mpeg2的编码格式，最后封装成一个 mp4文件。打开 MP4文件，我们就能看到泄露出的文件内容了。
不转码的avi文件也是可以播放的，只是他播放的文件是当前调用ffmpeg的应用，例如你用爱奇艺打开就是调用爱奇艺的播放器，而爱奇艺是用了ffmpeg代码，就可以读到爱奇艺应用的的内部文件，就造成信息泄露，因为这些文件是没有权限读取的。
例如可以读到data/data/com.qiyi.video/shared_prefs/cn.com.mma.mobile.tracking.sdkconfig.xml
而转码的目的就是把你上传视频的服务器文件写死在转码后的文件，就是你无论转成.mp4,flv都可以播放的。
另一种攻击方式  
攻击者针对 fix 又提出了另一种 bypass
方式
这次的 POC 生成的playlist长下面这样
# EXTM3U
# EXT-X-MEDIA-SEQUENCE:0
# EXTINF:1.0
GOD.txt
# EXTINF:1.0
/etc/passwd
# EXT-X-ENDLIST
翻译一下作者在评论区的说明：  
首先我们有几点需要了解关于HLS playlist 是怎么被处理的：  
1.处理一个 playlist 的时候ffmpeg把所有 segment 的内容连接在一起然后当做一个单独的文件来处理  
2.ffmpeg会使用 playlist 第一个 segment 来决定文件的类型  
3.ffmpeg用一种特殊的方式来处理.txt后缀的文件，它会尝试将文件的内容以终端的方式打印在屏幕上
所以上面的 playlist 的处理流程是这样的：  
1.ffmpeg在 GAB2字幕块里面看到了#EXTM3U标签，认定文件类型是 HLS playlist。  
2.GOD.txt这个文件甚至不需要存在，但是它的名字足够ffmpeg把文件类型检测成txt类型了  
3.ffmpeg把 playlist 的所有 segment
的内容连接在一起，因为只有/etc/passwd这个文件是实际存在的，所以最后的内容就是/etc/passwd文件的内容  
4.因为这个文件的类型是 txt 类型，所以ffmpeg绘制一个终端来打印这个文件。
需要注意的是在解析 playlist 文件的时候，每一个 segment 的url协议d的白名单为'file,
crypto'，所以这里直接把/etc/passwd改成
对官方补丁的分析  
补丁链接：  
官方对这个漏洞的修复也很简单，只是对播放列表中 file 协议的文件扩展名使用了白名单进行过滤。一定程度上缓解了攻击，但是还是可以泄露出那些多媒体文件。
typedefstructHLSContext {  
//...省略了一下结构体的内容  
\+ char _allowed_extensions; //增添一个字段，限制了允许的文件扩展名  
} HLSContext;  
staticintopen_url(AVFormatContext _s,  
AVIOContext * _pb, constchar_ url,AVDictionary _opts, AVDictionary_ opts2, int
*is_http)  
{  
//...  
// only http(s) & file are allowed  
\- if (!av_strstart(proto_name, "http", NULL) && !av_strstart(proto_name,
"file", NULL))  
\+ if (av_strstart(proto_name, "file", NULL)) {  
\+ if (strcmp(c->allowed_extensions, "ALL") && !av_match_ext(url,
c->allowed_extensions)) {  
\+ av_log(s, AV_LOG_ERROR,  
\+ "Filename extension of \'%s\' is not a common multimedia extension, blocked
for security reasons.\n"  
\+ "If you wish to override this adjust allowed_extensions, you can set it to
\'ALL\' to allow all\n",  
\+ url);  
\+ return AVERROR_INVALIDDATA;  
\+ }  
\+ } elseif (av_strstart(proto_name, "http", NULL)) {  
\+ ;  
\+ } elsereturn AVERROR_INVALIDDATA;  
+  
//...  
}
总结  
这个漏洞和以往的核心是m3u8文件可以根据指定url获取图片文字，而它里面的http协议和file协议没有过滤好，导致可以ssrf和读取任意文件，以前的漏洞是利用concat可以把泄露的信息传回给攻击者，这个是通过播放视频，可以把信息展示给攻击者。以后会有可能用别的方式触发ffmpeg的别的流程，绕过file协议的过滤。
参考资料  
XBIN 文件格式的详细介绍：
* * *
  * 作者：栈长、胖苗、超六@蚂蚁金服，更多安全知识分享和热点信息，请关注阿里聚安全的官方博客