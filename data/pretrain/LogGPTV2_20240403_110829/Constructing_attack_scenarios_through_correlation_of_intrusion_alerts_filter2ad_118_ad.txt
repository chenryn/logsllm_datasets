initial phase of the attacks involved an IP Sweep attack.
Though many packets were involved, we counted them as a
single attack. Similarly, the (cid:12)nal phase had a DDOS attack,
which generated many packets but was also counted as one
attack. For the rest of the attacks, we counted each action
(e.g., telnet, Sadmind Ping) initiated by the attacker as one
attack. The numbers of attacks observable in these datasets
are shown in Table 2. Note that some activities such as telnet
are not usually considered as attacks; however, we counted
them if the attacker used them as part of the attacks.
RealSecure Network Sensor 6.0 generated duplicate alerts
for certain attacks. For example, the same rsh connection
that the attacker used to access the compromised host trig-
gered two alerts. As a result, the number of true alerts (i.e.,
the alerts corresponding to actual attacks) is greater than
the number of detected attacks. The detection rates were
calculated as #detected attacks
#observable attacks , while the false alert rates
were computed as (1 (cid:0) #true alerts
).
Table 2 summarizes the results of these experiments. These
results show that discarding uncorrelated alerts reduces the
#alerts
252Sadmind_
Ping67341
Sadmind_
Ping67286
FTP_Syst
67243
Sadmind_
Ping67343
Sadmind_Amslverify_Overflow67438
Sadmind_Amslverify_Overflow67442
Sadmind_Amslverify_Overflow67428
Sadmind_Amslverify_Overflow67430
Sadmind_Amslverify_Overflow67416
Sadmind_Amslverify_Overflow67417
Sadmind_Amslverify_Overflow67420
Sadmind_Amslverify_Overflow67422
Sadmind_Amslverify_Overflow67424
Sadmind_Amslverify_Overflow67426
Email_Almail_Overflow67304
Sadmind_Amslverify_Overflow67432
Sadmind_Amslverify_Overflow67434
Sadmind_Amslverify_Overflow67436
Sadmind_Amslverify_Overflow67440
Email_Almail_Overflow67529
Rsh67535
Rsh67536
Rsh67538
Rsh67539
Rsh67562
Rsh67542
Rsh67546
Rsh67547
Rsh67549
Rsh67550
Rsh67540
Rsh67543
Rsh67545
Rsh67553
Rsh67558
Rsh67559
Rsh67560
Mstream_Zombie67563
Mstream_Zombie67777
Mstream_Zombie67767
Mstream_Zombie67537
Mstream_Zombie67776
Mstream_Zombie67554
Stream_DoS67773
Figure 3: The (only) hyper-alert correlation graph discovered in the inside network tra(cid:14)c of LLDOS 1.0.
Table 1: Completeness and soundness of alert correlation.
# correctly correlated alerts
# related alerts
# correlated alerts
LLDOS 1.0
DMZ
Inside
LLDOS 2.0.2
DMZ
Inside
54
57
57
41
44
44
5
8
5
12
18
13
completeness measure Rc
soundness measure Rs
94.74% 93.18% 62.5% 66.7%
94.74% 93.18% 100% 92.3%
Dataset
# observable
Tool
# alerts # detected Detection # true False alert
Table 2: Ability to di(cid:11)erentiate true and false alerts
attacks
attacks
DMZ
LLDOS
1.0
Inside
LLDOS
2.0.2
DMZ
Inside
89
60
7
15
RealSecure
Our method
RealSecure
Our method
RealSecure
Our method
RealSecure
Our method
891
57
922
44
425
5
489
13
51
50
37
36
4
3
12
10
rate
57.30%
56.18%
61.67%
60%
57.14%
42.86%
80.00%
66.67%
alerts
57
54
44
41
6
3
16
10
rate
93.60%
5.26%
95.23%
6.82%
98.59%
40%
96.73%
23.08%
false alert rates greatly without sacri(cid:12)cing the detection rate
too much. Thus, it is reasonable to treat correlated alerts
more seriously than uncorrelated ones. However, simply dis-
carding uncorrelated alerts is dangerous, since some of them
may be true alerts, which correspond to individual attacks
or attacks our method fails to correlate.
5. RELATED WORK
Intrusion detection has been studied for about twenty
years, since Anderson’s report [1]. An excellent overview
of current intrusion detection techniques and related issues
can be found in a recent book [3]. The introduction has
discussed several alert correlation methods.
This paper is a part of a series of e(cid:11)orts on alert correla-
tion. On the basis of the result in this paper, we have devel-
oped three utilities called adjustable graph reduction, focused
analysis, and graph decomposition to facilitate the interac-
tive analysis of large sets of intrusion alerts [11]. Moreover,
we have adapted main memory database query optimization
techniques for e(cid:14)cient alert correlation [13]. The resulting
techniques can substantially reduce the execution time re-
quired by alert correlation.
The work closest to ours is the alert correlation method
by Cuppens and Miege in the context of MIRADOR project
[4], which has been done independently and in parallel to our
work. The MIRADOR approach also correlates alerts using
253partial match of prerequisites (pre-conditions) and conse-
quences (post-conditions) of attacks, which are derived from
attack database described in LAMBDA [5], and uses \ontol-
ogy rules" to represent the implication relationships between
predicates. An additional notion of abductive correlation
has been introduced in [4] to deal with attacks missed by
IDS, which is not in our model. However, our method al-
lows alert aggregation during and after correlation, while the
MIRADOR approach treats alert aggregation as an individ-
ual stage before alert correlation. This di(cid:11)erence has led to
the three utilities for interactive intrusion analysis [11].
Several techniques have used prerequisite and consequence
of attacks for vulnerability analysis purposes. In [14], model
checking technique was applied to analyze network vulner-
abilities on the basis of prerequisites and results (i.e., con-
sequences) of exploits (i.e., attacks) along with hosts and
network connectivity information. In [15] and [9], the tech-
nique in [14] was further extended to generate and analyze
all possible attacks against a vulnerable networked system.
These techniques are focused on analyzing what attacks may
happen to a given system. In contrast, our purpose is to re-
construct what has happened to a given system according
to the alerts reported by IDSs, and our technique has to
deal with the inaccuracy of IDSs (i.e., false alerts and unde-
tected attacks). We consider our method as complementary
to these vulnerability analysis techniques.
6. CONCLUSION AND FUTURE WORK
This paper presented a practical method for construct-
ing attack scenarios through alert correlation, using prereq-
uisites and consequences of intrusions. The approach was
based on the observation that in series of attacks, compo-
nent attacks were usually not isolated, but related as dif-
ferent stages, with the earlier stages preparing for the later
ones. This paper proposed a formal framework to repre-
sent alerts along with their prerequisites and consequences,
and developed a method to correlate related hyper-alerts
together, including an intuitive representation of correlated
alerts that reveals the attack scenario of the corresponding
attacks. We also developed an o(cid:11)-line tool on the basis of
the formal framework. Our initial experiments have demon-
strated the potential of our method in correlating alerts and
di(cid:11)erentiating false and true alerts.
Several issues are worth future research. In particular, we
plan to develop better ways to specify hyper-alert types, es-
pecially how to represent predicates to be included in their
prerequisite and consequence sets to get the best perfor-
mance for alert correlation.
7. ACKNOWLEDGEMENTS
The authors would like to thank the anonymous review-
ers for their valuable comments. This work is partially
supported by the U.S. Army Research O(cid:14)ce under grant
DAAD19-02-1-0219, by the National Science Foundation un-
der grant 0207297, and by NCSU Center for Advanced Com-
puting & Communication.
8. REFERENCES
[1] J. P. Anderson. Computer security threat monitoring
and surveillance. Technical report, James P. Anderson
Co., Fort Washington, PA, 1980.
[2] AT & T Research Labs. GraphViz - open source graph
layout and drawing software.
http://www.research.att.com/sw/tools/graphviz/.
[3] R. Bace. Intrusion Detection. Macmillan Technology
Publishing, 2000.
[4] F. Cuppens and A. Miege. Alert correlation in a
cooperative intrusion detection framework. In Proc. of
the 2002 IEEE Symposium on Security and Privacy,
May 2002.
[5] F. Cuppens and R. Ortalo. LAMBDA: A language to
model a database for detection of attacks. In Proc. of
Recent Advances in Intrusion Detection (RAID 2000),
pages 197{216, September 2000.
[6] O. Dain and R. Cunningham. Fusing a heterogeneous
alert stream into scenarios. In Proc. of the 2001 ACM
Workshop on Data Mining for Security Applications,
pages 1{13, Nov. 2001.
[7] H. Debar and A. Wespi. Aggregation and correlation
of intrusion-detection alerts. In Recent Advances in
Intrusion Detection, LNCS 2212, pages 85 { 103, 2001.
[8] ISS, Inc. RealSecure intrusion detection system.
http://www.iss.net.
[9] S. Jha, O. Sheyner, and J. Wing. Two formal analyses
of attack graphs. In Proc. of the 15th Computer
Security Foundation Workshop, June 2002.
[10] MIT Lincoln Lab. 2000 DARPA intrusion detection
scenario speci(cid:12)c datasets. http://www.ll.mit.edu/
IST/ideval/data/2000/2000_data_index.html, 2000.
[11] P. Ning, Y. Cui, and D. S. Reeves. Analyzing intensive
intrusion alerts via correlation. In Proc. of the 5th
Int’l Symposium on Recent Advances in Intrusion
Detection (RAID 2002), October 2002.
[12] P. Ning, Y. Cui, and D. S. Reeves. Constructing
attack scenarios through correlation of intrusion alerts
(full version). Technical Report TR-2002-13, North
Carolina State University, Department of Computer
Science, August 2002.
[13] P. Ning and D. Xu. Adapting query optimization
techniques for e(cid:14)cient intrusion alert correlation.
Technical Report TR-2002-14, North Carolina State
University, Department of Computer Science,
September 2002.
[14] R. Ritchey and P. Ammann. Using model checking to
analyze network vulnerabilities. In Proc. of IEEE
Symposium on Security and Privacy, pages 156{165,
May 2000.
[15] O. Sheyner, J. Haines, S. Jha, R. Lippmann, and
J. Wing. Automated generation and analysis of attack
graphs. In Proc. of IEEE Symposium on Security and
Privacy, May 2002.
[16] S. Staniford, J. Hoagland, and J. McAlerney. Practical
automated detection of stealthy portscans. To appear
in Journal of Computer Security, 2002.
[17] S. Templeton and K. Levit. A requires/provides model
for computer attacks. In Proc. of New Security
Paradigms Workshop, pages 31 { 38. September 2000.
[18] A. Valdes and K. Skinner. Probabilistic alert
correlation. In Proc. of the 4th Int’l Symposium on
Recent Advances in Intrusion Detection (RAID 2001),
pages 54{68, 2001.
254