title:A conceptual framework for Group-Centric secure information sharing
author:Ram Krishnan and
Ravi S. Sandhu and
Jianwei Niu and
William H. Winsborough
A Conceptual Framework for
Group-Centric Secure Information Sharing
Ram Krishnan
George Mason University
PI:EMAIL
Jianwei Niu
Univ of Texas at San Antonio
PI:EMAIL
ABSTRACT
In this paper, we propose a conceptual framework for de-
veloping a family of models for Group-Centric information
sharing. The traditional approach to information sharing,
characterized as Dissemination-Centric in this paper, focuses
on attaching attributes and policies to an object (sometimes
called “sticky policies”) as it is disseminated from producers
to consumers in a system. In contrast, Group-Centric shar-
ing envisions bringing the subjects and objects together in
a group to facilitate sharing. The metaphor is that of a se-
cure meeting room where participants and information come
together to “share” information for some common purpose.
Another metaphor is that of the subscription model where,
depending on policy, joining users may or may not be autho-
rized to access past content. We argue that in such contexts,
and in accordance with diﬀerent application use cases, au-
thorizations are inﬂuenced by the temporal ordering of sub-
ject and object group membership and by the precise nature
of membership operations. For instance some subjects may
only get future information added to the group while others
may also be able to access previously added information. We
develop a lattice of models based on variations of these basic
membership operations, and discuss usage scenarios to illus-
trate practical applications of this lattice. Two principles
guide Group-Centric models. First, “share but diﬀerentiate”
which promotes sharing while diﬀerentiating user authoriza-
tions depending on temporal aspect of membership. Next,
“groups within groups” which advocates relationships (such
as a hierarchy) between multiple groups. In this paper, we
conﬁne our attention to read accesses in a single group.
Categories and Subject Descriptors
D.4.6 [Operating Systems]: Security and Protection –
Access controls; K.6.5 [Management of Computing and
Information Systems]: Security and Protection
–Unauthorized access
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’09, March 10-12, 2009, Sydney, NSW, Australia.
Copyright 2009 ACM 978-1-60558-394-5/09/03 ...$5.00.
Ravi Sandhu
Univ of Texas at San Antonio
PI:EMAIL
William H. Winsborough
Univ of Texas at San Antonio
PI:EMAIL
General Terms
Security
Keywords
Information Sharing, Models, Access Control
1.
INTRODUCTION
This paper introduces the concept of Group-Centric Se-
cure Information Sharing (g-SIS) and provides a concep-
tual framework to develop a family of models. The tra-
ditional approach to information sharing, characterized as
Dissemination-Centric sharing in this paper, focuses on at-
taching attributes and policies to an object as it is dissemi-
nated from producers to consumers in a system. These poli-
cies are sometimes described as being “sticky”. As an object
is disseminated further down a supply chain the policies may
get modiﬁed, such modiﬁcation itself being controlled by ex-
isting policies. This mode of information sharing goes back
to early discussions on originator-control systems [9, 13] in
the 1980’s and Digital Rights Management in the 1990’s
and 2000’s. XrML [1], ODRL [3] and XACML [2] are re-
cent examples of policy languages developed for this pur-
pose. Dissemination-Centric sharing describes in advance
the characteristics or properties of subjects who may access
the object by attaching “sticky policies” to be enforced when
a subject attempts to access the object.
The vision of Group-Centric sharing diﬀers in that it ad-
vocates bringing the subjects and objects together to fa-
cilitate sharing. The metaphor is that of a secure meet-
ing room where participants and information come together
to “share” for some common purpose. This common pur-
pose can range from collaboration on a speciﬁc goal-oriented
task (such as designing a new product) to participation in a
shared activity (such as a semester long class) to subscrip-
tion to a magazine (where the publisher contributes infor-
mation that the participants read and possibly respond to
content in associated blogs and forums). Visualize a con-
versation room where users may join, leave and re-join but
only hear the conversation occurring during their participa-
tion period. For instance, in a Program Committee meeting
Alice may be excused from the room when her paper is be-
ing discussed and may re-join the room after that portion of
the discussion has concluded. In doing so, the conversation
that occurred during her absence is not accessible to her. In
another setting, all conversations are recorded on a white-
384Figure 1: Subject Membership States.
board in the room and as Alice re-joins she is able to see
what happened during her absence. Such a room may also
be appropriate in a diﬀerent context such as a design group
wherein Alice participates as a consultant on demand.
Another metaphor is that of the subscription model where
subscribers can receive content depending on when the sub-
scription began. For example, when Alice subscribes to an
online news magazine, she may be allowed to access only
new content published after she paid for the subscription.
In another setting (probably a higher priced subscription),
she may also be allowed to access the magazine’s archives.
These two metaphors illustrate two important principles
in the Group-Centric approach. The ﬁrst principle is “share
but diﬀerentiate”. As one can see, sharing is enabled by
joining and adding information to group. Yet, users’ access
is diﬀerentiated by the time at which they join and the time
at which the requested information is added to the group.
The second principle is the notion of “groups within groups”.
That is, in a given g-SIS system, there may be any number
of groups. The relationship between these groups can be of
any type. One well-known structure is that of a hierarchy,
where subjects at a higher level dominate those at the lower
levels in terms of read access.
We envision that Dissemination-Centric and Group-Cent-
ric sharing will co-exist in a mutually supportive manner.
For example, objects could be Added with “sticky” policies
in a Group-Centric model. In this case, the objects may have
controls imposed by both the Group-Centric model and the
“sticky policies”. Also, the “sticky policies” on the object
could determine whether or not an object can be added to
the group in the ﬁrst place. It may turn out that at a the-
oretical level whatever Dissemination-Centric can achieve
Group-Centric can also achieve and vice versa. But at a
pragmatic level, we believe these are signiﬁcantly diﬀerent
approaches to information sharing.
In this paper, we propose a conceptual framework for de-
veloping a family of models for g-SIS. We propose an ab-
stract set of group operations: Join and Leave for subjects,
Add and Remove for objects. Subjects may Join, Leave and
possibly re-Join the group. This is illustarted in ﬁgure 1.
Similarly, objects may be Added, Removed and re-Added
to the group. Further each of these operations could be of
many diﬀerent types. For example, a Strict Join will only
allow a joining subject to access objects added to the group
after Join time. But a Liberal Join, in addition, will allow
the subject to access objects added before Join time.
In
general, there may be any number of such variations beyond
those explicitly identiﬁed in this paper.
Figure 2: Subject Operations Illustration.
Figure 3: Object Operations Illustration.
Authorizations concerning who controls Join, Leave, Add
and Remove are addressed as administrative tasks expressed
in an administrative model. While a g-SIS administrative
model is important, many approaches have been considered
in the literature (see [10, 15] for example). Further, the
administrative model is likely to be application dependant.
Consider two diﬀerent g-SIS applications, one where users
need to pay to join a group and another where users are
admitted based on organizational needs. The administrative
model for these two applications is likely to be diﬀerent.
Without clear understanding of the operational semantics,
an administrative model would be premature.
We believe that authorizations concerning the operational
aspects that bear on group membership is a more interesting
and novel problem, and this will be the focus of this paper.
We leave the development of an administrative g-SIS model
for future work. Furthermore, we conﬁne our attention to
correct authorization behavior with respect to read access
in a single group. We have developed extensions to other
forms of accesses such as write or update and multiple groups.
Discussion of these is out of scope for this paper.
2. A FAMILY OF G-SIS MODELS
We now discuss a family of g-SIS models based on speciﬁc
variation of subject and object operations (Join, Leave and
Add, Remove respectively). The semantics of variations are
based on the temporal ordering of subject and object group
memberships. However, there may be any number of addi-
tional semantics beyond those identiﬁed here.
Strict Join (SJ) Vs Liberal Join (LJ): In SJ, the joining
subject can access only those objects added after Join time.
However, LJ allows the subject additionally to access objects
that were added prior to the time of Join. Suppose that in
ﬁgure 2 the second Join (s1) is an SJ. Then s1 can only
access o4 and o5. If the Join was an LJ instead of SJ, s1 can
also access o2 and o3.
Strict Leave (SL) Vs Liberal Leave (LL): In SL, the leav-
ing subject loses access to all objects.
In LL, the leaving
subject can retain access to objects authorized prior to the
time of Leave. In ﬁgure 2, on SL, s1 loses access to all group
385object, the most permissive model (LJ, LL, LA, LR) should
also grant access to the same object.
An authorization policy can be formally speciﬁed for each
of these 16 models that specify the conditions under which
a subject may access an object. For example, authorization
will succeed for the (SJ, SL, SA, SR) model in any state,
if the requested object was added after the subject joined
the group and both the subject and object are still current
group members at the time of request. This can be precisely
speciﬁed using Linear Temporal Logic (LTL) [12] as follows:
Definition 2.1
(Most Restrictive Specification).