that information, the SH can decide on whether the corresponding
SM is allowed to continue to be in operation. If so, a deferral ticket
is generated and submitted to the AWDT for the SM. The AWDT for
the SM is somewhat special as a timeout does not trigger a device
reset (like with the AWDT in the SW) but, instead, shuts down the
SM.
Before the SM is booted again, the hypervisor ensures that only
an authenticated image of the SM can be booted. If the verification
fails, a new image is downloaded from the SH, stored, and booted.
We refer to this procedure as virtual gated boot. Similar to gated
boot, a signed boot ticket from the SH is required for booting. A
request for such a ticket contains two checksums: A measurement
of the virtual bare-metal binary to be executed in the SM (M5)
and a measurement of the static file system of the SM (M6). The
virtual bare-metal binary of the SM and its static file system is
not stored on the static file system of the hypervisor, but, instead,
stored on the dynamic file system of the hypervisor. The integrity
of those components is solely ensured by virtual gated boot and
the corresponding SH.
CPUs, RAMNICEL3EL2EL1EL0DriverRoutingOSSecure WorldProxyTrusted OSAWDTNormal WorldSMSecure MonitorHypervisorTicket ReceiverMMAWDTInspectorVMICommunicationTCBReset Entity459ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Röckl, et al.
From the perspective of the SH, the system architecture suffices
the criteria of weak dominance. Given that the hypervisor level
is not compromised, the SH can stop issuing fresh deferral tickets
for the SM. Subsequently, the timeout of the AWDT for the SM
exceeds and the SM is reset. Virtual gated boot is executed, which
downloads new software from the SH and boots it in the SM. This
guarantee holds as long as the strong dominator acts in accordance
(i.e. the hypervisor dispatches virtual gated boot and the SM).
In contrast to the SM, the Management Machine (MM) is di-
rectly exposed to the network and, thus, the first contact point of a
network-facing attacker. We design our system in a way that the
MM is weakly dominated by the IH (Figure 1) in order to enable
intrusion and anomaly detection features for the MM. Compara-
ble to the SM, there is a compound component consisting of an
AWDT and an inspector for the MM on the hypervisor level. It is
important to note that a timeout of the AWDT for the MM does
not trigger a reset of the MM but a reset of the complete device.
This is because the MM provides basic network connectivity for the
system. After the MM would have been shut down, virtual gated
boot would have no network connectivity in order to communicate
with the IH and authenticate the boot. Therefore, the complete de-
vice reset is triggered if the AWDT of the MM expires. The virtual
bare-metal binary of the MM and its static file system are stored
on the static file system of the hypervisor. This way, a device reset
triggers gated boot (Section 4.4.1), which resets and updates the
MM to a trustworthy state.
4.6 Intrusion and Anomaly Detection
One of the contributions of our work focuses on an interface for
the detection of intrusions and anomalies in an SM. Specifically,
we bind the dynamic state of a VM to a weak dominance relation-
ship. A request for a deferral ticket (TReq) in the context of a weak
dominance relationship contains measurements of the dynamic
runtime state of the SM. The corresponding inspector, which runs
on the hypervisor-level, relies on VMI in order to extract relevant
information from the VM. Regarding intrusion detection, a piece of
relevant information might be a list of running processes. Likewise,
for anomaly detection, the current level of CPU usage might be
valuable. The TReq is signed with a key only accessible on hyper-
visor level before it is sent to the SH. Being able to sign messages
statically remote attests the SM (Section 4.8). The SH decides on
whether the SM is allowed to continue to be in operation, based
on a valid signature, the current timeout of the AWDT of the SM,
and the dynamic state of the SM. Thus, the SH acts as a remote
intrusion and anomaly detection system. If the SH detects an anom-
aly (e.g. unusual high CPU usage for a long time) or suspects an
intrusion (e.g. an unknown process is running), the SH stops issuing
deferral tickets for the SM and makes use of the weak dominance
relationship in order to reset the SM to a trustworthy state. As long
as an adversary has not hijacked the hypervisor level, the adversary
cannot tamper with the dynamic state information sent to the SH.
This is because an adversary in the SM has no access to the key
material required to validly sign messages to the SH.
An important point to inspect is why the additional layer of a
hypervisor is justified. Technically, one is able to introspect the
NW from the SW as well [5, 9, 30, 74]. However, we propose a
multi-layered defense model with a minimal TCB (Section 5). It is
expected that any additional functionality in the TEE increases its
complexity and, thus, weakens its security. For example, Machiry
et al. [54] showed that boomerang attacks specifically abuse access
to the normal-world addresses from the SW. Therefore, we assume
that it is currently infeasible to implement a secure introspection
system in the SW without increasing the attack surface to a level
that cannot be considered as minimal any longer.
4.7 Granular Resets
Another feature of the system architecture is the support of granu-
lar resets of an SM without influencing other SMs on the system.
Generally speaking, there are two reasons for a reset of an SM: (1)
A new version for the service is available and the update should be
deployed to the SM and (2) an intrusion or anomaly of the SM is
detected. In both cases, a reset is followed by an execution of virtual
gated boot, which resets the SM to a trustworthy and updated state.
Conceptually, there are multiple SMs on one device. Resetting one
SM does not interfere with other SMs or impact their availability in
any way. Thus, higher overall service availability is achieved when
compared to related system architectures [40, 74, 78].
4.8 Key Derivation
We enrich gated boot to use DICE++ for updates of early-boot
stages (Section 4.4.1). Additionally, we propose a key derivation
process that enables static remote attestation for the system and
its VMs. Based on the CDI (Section 3.3), gated boot derives a key
pair KGB, K−1
GB and a self-signed certificate, which are used to sign
messages from gated boot in the case that gated boot needs to
rely on the included network stack to communicate with the IH. A
correct signature statically remote attests the state of gated boot
to the IH. Subsequently, gated boot measures the so-called Trusted
Firmware (TF) in EL3 and calculates M1 (Section 4.4.1). Gated boot
determines H(CDI||M1), which is the seed for a key pair KT F , K−1
T F .
Subsequently, a certificate {T F , KT F }K−1
is generated. The key
KGB, the key pair KT F , K−1
T F and the certificate are passed to the
TF, which is the next component in the boot process.
T F)||M2||M3||M4), where Mx
denotes a measurement of a boot stage x (Section 4.4.1). The value
is the seed for a so-called infrastructure (subscript I) key pair KI ,
K−1
is generated. The infras-
I
tructure key pair is used to sign messages from the SW to the IH
(Section 4.4.2). The key pair KI , K−1
, the certificate {T F , KT F }K−1
,
and the certificate {I , KI }K−1
Additionally, the TF calculates H(H(K−1
T F)||M3||M4) as a seed.
Based on this seed, the hypervisor (subscript HV) key pair KHV ,
K−1
HV is derived. A certificate {H , KHV }K−1
is generated. The key
KGB, the key pair KHV , K−1
, and
the certificate {HV , KHV }K−1
Each VM on the system is assigned a Universally Unique Identi-
fier (UUID) and a per-VM secret, referred to as the Virtual Unique
Device Secret (VUDS). For each VM, the hypervisor calculates a
seed H(H(K−1
HV )||VU DS||M5||M6), where Mx denotes a measure-
ment of a VM component x (Section 4.5). The value is the seed for
a key pair, e.g. KSM , K−1
SM . Likewise, a certificate {SM, KSM}K−1
HV , the certificate {T F , KT F }K−1
G B
are passed to the hypervisor.
The TF calculates a seed H(H(K−1
. Likewise, a certificate {I , KI }K−1
T F
I
T F
are passed to the trusted OS.
G B
HV
G B
T F
T F
460Advanced System Resiliency Based on Virtualization Techniques for IoT Devices
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
is generated. The key KSM is used to sign messages to the SH.
Based on a pre-shared KGB, a signed message with a correct sig-
nature chain {T F , KT F }K−1
, and {SM, KSM}K−1
statically remote attests the state of the SM to the SH.
, {HV , KHV }K−1
HV
G B
T F
4.9 Secure Identity Re-Association
Identity re-association based on DICE++ (Section 3.4) becomes
necessary if gated boot is updated. Subsequently, the pre-shared
key KGB changes. Both the IH and the SHs need to re-associate old
and new key material with high assurances.
After an update of gated boot, the new version is responsible
for identity re-association with the IH. Both gated boot and the
IH have access to a pre-shared secret static_sym (Section 3.4) as
a trust anchor for the identity re-association. Gated boot claims
a new identity to the IH, containing the newly derived key KGB.
Knowing static_sym, the IH is able to verify the newly generated
key material [40]. Subsequently, the device resets and gated boot
can be executed as usually during the next boot.
During provisioning of a VM, vm_sym = H(VU DS||vm_uuid)
is calculated and pre-shared with the corresponding SH. After an
update of gated boot, the identity of a VM needs to be securely
re-associated with each SH. This is because KGB has changed and
remote attesting the state of a VM to an SH is based on a pre-
shared KGB. To re-associate the identity, the hypervisor calculates
vm_auth = H(vm_sym||M5||M6), where Mx denotes a measure-
ment of a VM component (Section 4.5). Subsequently, the hyper-
visor creates an identity claim consisting of vm_uuid, KGB, and
vm_auth (Section 3.4). The SH verifies the identity claim relying on
vm_sym and accepts the new KGB. Afterward, virtual gated boot is
executed and the start-up process of the associated VM is initiated.
5 SECURITY DISCUSSION
This section discusses the security of our system architecture. The
TCB consists of gated boot (21 kLoC [78]), TF-A (300 kLoC [51]),
the trusted OS (OP-TEE [49], 270 kLoC), and the AWDT (250 LoC).
In terms of custom software, Xu et al. [78] add the same amount
of code to the TCB. The TF and the trusted OS are the de-facto
standards for a recent open-source TEE based on ARMv8-A and
code minimization is an ongoing challenge [11, 50]. Importantly,
the hypervisor and the VMs are not part of the TCB. We claim that
any software component that is not in the TCB may be subject to
compromise without losing remote recoverability. To verify, we
consider a multi-layer defense model and discuss the attacker’s
capabilities at each level.
5.1 Network-Facing Attacker
Every message between a hub and the device or a VM is signed.
Being able to sign a message statically remote attests the device to
the IH, the SM to the SH, and the MM to the IH. In addition to that,
every message between the device / a VM and a hub is protected
from replays by using nonces. Thus, blocking messages is the only
possible network-facing and message-focused attack vector. There
are several options:
(1) The attacker blocks the retrieval process of deferral tickets
for the AWDT in the SW. Subsequently, the AWDT in the
SW expires and gated boot is triggered, conducting the recov-
ery process. Thus, a network-facing attacker might render
the device temporarily unavailable. However, as we assume
that long-standing network-level attacks and outages are
mitigated on the infrastructure level of an Internet Service
Provider (ISP), only a short and temporary DoS attack is
possible [78]. The exact duration of short depends on the
underlying communication network, its security features,
and the exact use case of the IoT device.
(2) The attacker blocks the retrieval process of deferral tickets
for the AWDT of the MM. Subsequently, the AWDT for the
MM expires, the device is reset, and gated boot is triggered.
After that, the attack vector is analogous to (1).
(3) The attacker blocks the retrieval process of deferral tickets
for the AWDT of the SM. Subsequently, the AWDT for the
SM expires and the SM is shut down. Virtual gated boot is
executed, which communicates to the SH to retrieve a boot
ticket. If the communication between virtual gated boot and
the SH is still blocked by an attacker, a temporary DoS of
the SM is possible. Again, we assume that long-standing
network-level attacks and outages are mitigated on the in-
frastructure level of an ISP.
While a network-facing attacker is not able to break the dom-
inance relationships, a vulnerability in the network stack or an
application service might allow an attacker to elevate their privi-
leges to the MM or the SM, respectively.
5.2 Attacker in the MM or the SM