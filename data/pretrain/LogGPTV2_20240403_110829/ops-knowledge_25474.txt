Certainly! Here is a more polished and professional version of your text:

---

**Environment Details:**
- Server: AWS EC2
- Operating System: Amazon Linux
- Python Version: 2.7.10

When I run the following command:
```bash
$ pip --version
```
The output is:
```
pip 7.1.2 from /usr/local/lib/python2.7/site-packages (python 2.7)
```
This indicates that `pip` is installed and working correctly.

However, when I use `sudo` to run the same command:
```bash
$ sudo pip --version
```
I encounter the following traceback:
```
Traceback (most recent call last):
  File "/usr/bin/pip", line 5, in <module>
    from pkg_resources import load_entry_point
  File "/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py", line 3020, in <module>
    working_set = WorkingSet._build_master()
  File "/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py", line 616, in _build_master
    return cls._build_from_requirements(__requires__)
  File "/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py", line 629, in _build_from_requirements
    dists = ws.resolve(reqs, Environment())
  File "/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py", line 807, in resolve
    raise DistributionNotFound(req)
pkg_resources.DistributionNotFound: pip==6.1.1
```

**Analysis:**
- When running `pip` without `sudo`, it uses the version located at `/usr/local/lib/python2.7/site-packages/pip`, which is `pip 7.1.2`.
- When running `pip` with `sudo`, it uses the version located at `/usr/bin/pip`, which is an older version and results in the error.

**Solution:**
To resolve this issue, you can upgrade the `pip` version using `easy_install` with `sudo`:
```bash
sudo easy_install --upgrade pip
```

This will ensure that both the user and root environments are using the same, updated version of `pip`.

--- 

I hope this helps! Let me know if you need further assistance.