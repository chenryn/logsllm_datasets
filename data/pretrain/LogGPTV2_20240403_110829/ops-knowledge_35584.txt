We have a robust set of unit tests for our code, which complete in under 2 minutes. Additionally, we use TeamCity to build and run these tests after each commit. Despite this, we still encounter issues where a developer "forgets" to run all the tests before committing, leading to a failed build in TeamCity. If this occurs late in the day, such as at 6 PM, the build may remain broken overnight.

The term "forgets" is often used broadly, but there are other common reasons that can lead to a TeamCity failure, even if the developer remembers to run the tests. These include:

- A developer only committing some of the modified files in their workspace.
- A file being modified outside of Eclipse, so the Eclipse Team Synchronization perspective does not detect it as dirty.

How does your organization handle these challenges?

We are considering implementing a "check-in procedure" for developers, which would involve an automated tool that runs all unit tests and then commits all modified (dirty) files in the workspace. Do you have any experience with such a process? Are you aware of any tools that could facilitate this? Our development environment uses Python with the Eclipse PyDev plugin.

---

In one of my previous teams, we had a policy where anyone who broke the tests was responsible for bringing bacon sandwiches for the whole team the next morning. While this approach might seem extreme, it proved to be very effective!