title:Guess Who's Texting You? Evaluating the Security of Smartphone Messaging
Applications
author:Sebastian Schrittwieser and
Peter Fr&quot;uhwirt and
Peter Kieseberg and
Manuel Leithner and
Martin Mulazzani and
Markus Huber and
Edgar R. Weippl
Evaluating the Security of Smartphone Messaging Applications
Guess Who’s Texting You?
Sebastian Schrittwieser, Peter Fr¨uhwirt, Peter Kieseberg, Manuel Leithner,
Martin Mulazzani, Markus Huber, Edgar Weippl
SBA Research gGmbH
Vienna, Austria
(1stletterﬁrstname)(lastname)@sba-research.org
Abstract
In recent months a new generation of mobile messag-
ing and VoIP applications for smartphones was introduced.
These services offer free calls and text messages to other
subscribers, providing an Internet-based alternative to the
traditional communication methods managed by cellular
network carriers such as SMS, MMS and voice calls. While
user numbers are estimated in the millions, very little atten-
tion has so far been paid to the security measures (or lack
thereof) implemented by these providers.
In this paper we analyze nine popular mobile messaging
and VoIP applications and evaluate their security models
with a focus on authentication mechanisms. We ﬁnd that a
majority of the examined applications use the user’s phone
number as a unique token to identify accounts, which fur-
ther encumbers the implementation of security barriers. Fi-
nally, experimental results show that major security ﬂaws
exist in most of the tested applications, allowing attack-
ers to hijack accounts, spoof sender-IDs or enumerate sub-
scribers.
1
Introduction
In the past few months, several new smartphone mes-
saging and VoIP services with a novel user authentication
concept were introduced. These new-generation commu-
nication applications aim at replacing traditional text mes-
saging (SMS) and only require the user’s phone number for
registration. Contrary to well-known instant messaging ser-
vices, no additional authentication mechanisms other than
the phone number are used by these applications. In this
paper we focus on the security of applications that are using
this novel authentication concept. Due to this limitation,
services such as Skype, Facebook Chat and Google Chat
were regarded as out of scope. Note that these services have
been the subject of an ample amount of past research.
The common advantages of the tools we examined lie in
very simple and fast setup routines combined with the possi-
bility to incorporate existing on-device address books. Ad-
ditionally these services offer communication free of charge
and thus pose a low entry barrier to potential customers.
However, we ﬁnd that the very design of most of these mes-
saging systems thwarts their security measures, leading to
issues such as the possibility for communication without
proper sender authentication.
The main contribution of our paper is an evaluation of the
security of mobile messaging applications with the afore-
mentioned properties and the possibilities of abuse in real-
world scenarios. Additionally, we draw attention to a num-
ber of suitable security mechanisms to prevent the misuse of
these systems. The rest of the paper is organized as follows:
Section 2 gives an overview of related work. Section 3 out-
lines the basic functionalities of the examined communica-
tions services, while Section 4 introduces our threat assess-
ment for these applications. Section 5 documents our ﬁnd-
ings and explains how the ﬂaws we identiﬁed might pose
threats to users. We conclude in Section 6 and give a brief
overview of approaches for future research.
2 Related Work
In this paper we document our ﬁndings on weak user
authentication in messaging applications on smartphones.
User authentication is a popular ﬁeld of research in informa-
tion security [16, 2], especially applied to distributed sys-
tems [13] or for web services [11, 18]. A vast number of
protocols has been designed to provide secure user authen-
tication, for example based on Kerberos [15] or public key
cryptography and the usage of a PKI [4].
Due to the steadily increasing pervasiveness of smart-
phones these platforms have sparked the interest of the se-
curity community. The security features and properties of
Android [9, 8, 3, 10] as well as iOS [5] have been widely
studied. Furthermore, smartphone application security has
been evaluated in the past [6, 7]. To the best of our knowl-
edge no evaluation of novel smartphone messaging services
analyzed in this paper has been published at the time of
writing. Recently, cloud storage services have attracted the
interest of security researchers [12] analyzing the implica-
tions of faulty authentication in that area. There are numer-
ous applications for Android that promise encrypted, secure
communication, such as RedPhone and TextSecure [17].
3 Mobile Messaging Applications
General Characteristics All applications analyzed in
this paper have one thing in common: They use the user’s
phone number as the basis for identiﬁcation. During the
setup process, the software asks the user to enter the phone
number of the device. Although Android can grant di-
rect access to the user’s phone number to applications, this
mechanism is currently not in use. Apple’s iOS App Store
guidelines on the other hand do not allow applications to
access the phone number, making manual input necessary.
One major, if unintentional, beneﬁt of this approach is that
even devices without a phone module (e.g. a WiFi-only
tablet) can be activated using the phone number of another
device. It should be noted that these messaging applications
use the phone number for user identiﬁcation only and do not
attempt to communicate over the regular mobile phone net-
work. The main problem with this approach is naturally that
the system has to verify the user’s input, seeing as a mali-
cious user could enter someone else’s phone number and
therefore hijack or create an account with false credentials.
All the messengers we analyzed implement measures to
prevent users from impersonating others by trying to au-
thenticate a number they do not control. Still, several of
these approaches display fundamental design ﬂaws. Sec-
tion 5 analyzes the shortcomings of several messengers.
WhatsApp The most popular tested application (judg-
ing by its widespread distribution among various smart-
phone platforms) is the WhatsApp messenger. It is a cross-
platform messaging application for Android, BlackBerry,
iOS and Symbian. The vendor has not released any in-
formation on its user base, however, based on the Android
Market sales, it can be estimated to have at least a few mil-
lion users1. Recently, the vendor reported that in one single
day over one billion messages were sent over Whatsapp2.
In contrast to other comparable messengers, this piece of
software does not support calls via VoIP.
1https://market.android.com/details?id=com.whatsapp,
retrieved on
August 23rd, 2011
2http://blog.whatsapp.com/index.php/2011/10/one-billion-messages,
retrieved on November 2nd, 2011
4 Evaluation
In this section we detail the methodology and the exper-
imental setup of our evaluation.
4.1 Methodology
For our evaluation, we selected nine popular messaging
and VoIP applications for both Android and iOS. We es-
timated the user base of the applications by accumulating
data available from the Android Market3 and Xyologic4, a
company providing download estimations for iOS applica-
tions. Table 1 gives an overview of the applications and
their features. The great majority of our selected smart-
phone messaging applications support Voice over Internet
Protocol (VoIP) calls and text messages. Furthermore, all
tested applications used the user’s phone number as the
unique user ID for initial authentication, with the Short
Message Service (SMS) being the preferred method to ver-
ify the user’s control over a given phone number. We
then identiﬁed ﬁve possible attack vectors exploiting the
insufﬁcient authentication methods employed in these ap-
plications. Lastly, we systematically examined the soft-
ware packages for the presence of these ﬂaws. This sec-
tion describes the ﬁve common attack vectors we identiﬁed
amongst popular smartphone messaging applications.
Authentication Mechanism and Account Hijacking
We analyzed the initial setup mechanisms of the applica-
tions during which a phone number is linked to a device.
None of the tested applications retrieve the device’s phone
number automatically but instead ask the user to input it
manually during the setup phase. The common method to
verify the entered number is sending a SMS message to the
speciﬁed number containing a veriﬁcation PIN that the user
has to enter in the application’s user interface. We analyzed
the communication between phone and server during the
initial setup and tested if an attacker could hijack accounts
by passing another user’s phone number as his/her own.
Sender ID Spooﬁng / Message Manipulation In the sec-
ond part of our evaluation, we analyzed the communication
between the phone and the server during message sending
and receiving. The attack scenarios for this part are a ma-
licious user that wants to send a message with a spoofed
sender ID. In contrast to the scenario outlined in the previ-
ous paragraph, the attacker may do this without hijacking
the entire account.
The manipulation of a message during transfer is another
possible threat, however, as most tested application use en-
3https://market.android.com, retrieved on November 2nd, 2011
4http://search.xyologic.com, retrieved on November 2nd, 2011
WhatsApp 2.6.4
Viber 2.0.3
eBuddy XMS 1.15.2
Tango 1.6.9568
Voypi 1.2
Forfone 1.5.6
HeyTell 2.3.0
EasyTalk 2.0.1
Wowtalk 1.0.3
WhatsApp 2.6.4
Viber 2.0.3
eBuddy XMS 1.15.2
Tango 1.6.9568
Voypi 1.2
Forfone 1.5.6
HeyTell 2.3.0
EasyTalk 2.0.1
Wowtalk 1.0.3
VoIP
no
yes
no
yes
yes
yes
yes
yes
yes
Text Messages
yes
yes
yes
no
yes
yes
no
yes
yes
Number Veriﬁcation
SMS, active SMS
SMS and passive phone call
SMS
SMS
SMS
SMS
no
SMS
SMS
Uploads Address Book
yes
yes
yes
yes
yes
yes
no
yes
yes
Status Messages
Platforms
Estimated User Base
yes
no
no
no
no
no
no
no
yes
Android, iOS, BlackBerry, Symbian
Android, iOS
Android, iOS
Android, iOS
Android, iOS
Android, iOS
Android, iOS
iOS
iOS
23-63M
10-15M
1-1.5M
10-15M
0.1-0.15M
0.2-0.25M
5-9M
0.25-0.3M
0.06M