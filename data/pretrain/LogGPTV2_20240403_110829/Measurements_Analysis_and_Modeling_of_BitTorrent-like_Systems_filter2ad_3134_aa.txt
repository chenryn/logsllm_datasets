# Title: Measurements, Analysis, and Modeling of BitTorrent-like Systems

**Authors:**
- Lei Guo<sup>1</sup>
- Songqing Chen<sup>2</sup>
- Zhen Xiao<sup>3</sup>
- Enhua Tan<sup>1</sup>
- Xiaoning Ding<sup>1</sup>
- Xiaodong Zhang<sup>1</sup>

**Affiliations:**
- <sup>1</sup>Department of Computer Science, College of William and Mary, Williamsburg, VA 23187, USA
- <sup>2</sup>Department of Computer Science, George Mason University, Fairfax, VA 22030, USA
- <sup>3</sup>AT&T Labs-Research, 180 Park Ave., Florham Park, NJ 07932, USA

**Contact:**
- {lguo, etan, dingxn, zhang}@cs.wm.edu
- PI:EMAIL (for George Mason University)
- PI:EMAIL (for AT&T Labs-Research)

## Abstract

Existing studies on BitTorrent systems are primarily focused on single-torrent scenarios, while more than 85% of all peers participate in multiple torrents according to our trace analysis. Furthermore, these studies often make unrealistic assumptions, leading to insufficiently insightful and accurate models even for single-torrent scenarios. Our analysis of representative BitTorrent traffic provides several new findings regarding the limitations of BitTorrent systems:

1. The exponentially decreasing peer arrival rate leads to poor service availability over time, making it difficult for files to be located and downloaded.
2. Client performance in BitTorrent-like systems is unstable and fluctuates significantly with changes in the peer population.
3. Existing systems can provide unfair services, where peers with high download speeds tend to upload less.

In this paper, we study these limitations in realistic environments. Motivated by our analysis and modeling results, we build a graph-based multi-torrent model to study inter-torrent collaboration. Our model quantitatively demonstrates the benefits of inter-torrent collaboration over directly incentivizing seeds to stay longer. We also discuss a system design to show the feasibility of multi-torrent collaboration.

## 1. Introduction

BitTorrent [8] is a next-generation Peer-to-Peer (P2P) system that has gained significant popularity. According to a recent CNN report, BitTorrent traffic represents 53% of all P2P traffic on the Internet as of June 2004 [16]. Unlike traditional P2P systems such as Gnutella [1], KaZaa [2], and eDonkey/eMule/Overnet [3], which organize peers sharing different files into a single network, BitTorrent organizes peers sharing the same file into a P2P network, focusing on fast and efficient file distribution. In BitTorrent, a file is divided into small chunks, and peers can download multiple chunks in parallel. A "tit-for-tat" incentive mechanism encourages peers with high upload bandwidth to have corresponding high download bandwidth, effectively preventing free riding, a common issue in early P2P systems [5].

Other P2P systems, such as KaZaa and eMule, use participation levels or credit/reputation systems to track peer contributions, but these mechanisms are either too complex or easily circumvented [4, 6]. In contrast, BitTorrent's direct "tit-for-tat" mechanism is simple and effective. BitTorrent-like systems scale well during flash crowd periods and are widely used for distributing large software packages [7, 14].

Research on BitTorrent-like systems has shown their effectiveness [7, 14, 17, 18, 23]. Recent work using a fluid model has verified the stability and effectiveness of the current incentive mechanism [18]. However, this model assumes a Poisson arrival process, which is unrealistic over long periods [17]. Consequently, the model only characterizes performance under stable conditions, which, as our trace analysis shows, are short-lived. Additionally, existing studies focus on single-torrent systems, while most peers (> 85%) participate in multiple torrents.

In this work, we present an extensive study of BitTorrent-like P2P systems through measurements, trace analysis, and modeling. We first analyze the evolution of BitTorrent systems based on realistic assumptions derived from traces. We find that although the existing system effectively addresses the "flash crowd" problem upon the debut of a new file, it has the following limitations:
- Service availability deteriorates quickly due to the exponentially decreasing peer arrival rate and the lack of seeds.
- Client performance is unstable and fluctuates with the peer population.
- Unfair services are provided, where peers with high download speeds tend to upload less.

Motivated by these findings, we further study multi-torrent systems through trace analysis and modeling. Although it is generally understood that collaboration among multiple torrents might overcome some of the limitations of single-torrent systems, our work is the first to quantitatively and comprehensively analyze the multi-torrent system. We characterize the peer request pattern in multiple torrents, study the service potentials a torrent can provide and receive from other torrents, and demonstrate the benefits of inter-torrent collaboration. We also propose and discuss a new architecture to facilitate inter-torrent collaboration, showing its feasibility and compatibility with current BitTorrent systems.

Our contributions include:
- Identifying three limitations of existing BitTorrent-like systems through torrent evolution studies.
- Building a graph-based multi-torrent model to quantify the benefits of inter-torrent collaboration.
- Proposing and discussing a new architecture for inter-torrent collaboration.

The remainder of the paper is organized as follows: Section 2 presents related work. Section 3 discusses the modeling and characterization of BitTorrent-like systems. Section 4 presents our multi-torrent model. Section 5 proposes and discusses an architecture for inter-torrent collaboration. Section 6 concludes the paper.

## 2. Related Work

The amount of P2P traffic and the population of P2P users on the Internet continue to grow. Numerous studies have been conducted on the measurements, modeling, and algorithms of various P2P systems.

Measurement studies [19, 20] characterize P2P traffic over the Internet, including Napster, Gnutella, and KaZaa systems. Study [12] analyzes the popularity of P2P content and characterizes the "download at most once" property of P2P clients. Extensive measurements and traffic analysis on BitTorrent systems have also been conducted recently. Study [14] analyzes a five-month workload of a single BitTorrent system for software distribution involving thousands of peers, assessing the performance during flash crowds. In [7], authors analyze BitTorrent traffic of thousands of torrents over a two-month period, focusing on file characteristics and client access patterns. Work [17] presents the current infrastructure of BitTorrent file-sharing systems, including web servers/mirrors for directory services, metadata distribution, and P2P content sharing. The authors also find that the arrival, abort, and departure processes of downloaders do not follow a Poisson distribution in an eight-month trace, contrary to previous modeling assumptions [18].

A queuing model for P2P file-sharing systems is proposed in [11]. Study [23] analyzes the service capacity of BitTorrent-like systems and finds that multi-part downloading improves performance during flash crowds. Study [18] characterizes the overall performance of BitTorrent-like systems using a simple fluid model and analyzes the effectiveness of the BitTorrent incentive mechanism using game theory. Study [15] introduces a probabilistic model of coupon replication systems and analyzes performance in environments without altruistic user behaviors or load balancing strategies like "rarest first" in BitTorrent. Study [22] proposes an interest-based content location approach for P2P systems, where peers self-organize into small groups to collaborate more efficiently, similar to BitTorrent networks. In [21], a P2P protocol is proposed for bulk data transfer, aiming to improve client performance and reduce server load using enhanced algorithms over BitTorrent systems.

Unlike previous studies, our modeling and trace analysis provide an understanding of torrent evolution in BitTorrent systems and the relationships among multiple torrents. Our results reveal three limitations in current BitTorrent systems and propose an innovative architecture to facilitate inter-torrent collaboration, representing the first step towards making BitTorrent a reliable and efficient content delivery vehicle.

## 3. Modeling and Characterization of BitTorrent-like Systems

### 3.1 Torrent Popularity Characterization

In this study, we analyze and model BitTorrent traffic based on two types of traces. The first trace contains statistics collected from two popular dedicated tracker sites, sampled every half hour for 48 days from 2003-10-23 to 2003-12-10. This trace was collected by the University of Massachusetts, Amherst [7] (referred to as the tracker trace). We identify different peers and match multiple sessions of the same download using methods similar to those in [14]. Firewalled peers, though they cannot accept incoming connections, are included in the tracker statistics. We extract the peer request time, downloading/uploading bytes, bandwidth, and information for each torrent, such as birth time and file size. Due to space limitations, we present the analysis results of the larger tracker trace, which includes more than 1,500 torrents (about 550 fully traced during their lifecycles). The smaller trace yields similar results.

To better understand BitTorrent traffic, we also collected meta file downloading traces from a large commercial server farm hosted by a major ISP and a large group of home users connected via a well-known cable company, using the Gigascope appliance [10], from 2004-09-28 to 2004-10-07. The server farm trace includes about 50 tracker sites hosting hundreds of torrents, and the cable network trace includes about 3,000 BitTorrent users (by IP addresses) requesting thousands of torrents. Both traces include the first IP packets of all HTTP downloads of .torrent files, with timestamps representing the peer arrival time to the torrent. We also extract the creation time of each .torrent file, representing the torrent birth time.

Figure 1(a) shows the complementary CDF (CCDF) distribution of the time after torrent birth for requests to all fully-traced torrents in the tracker trace. For peers downloading the file in multiple sessions, only the first requests are considered. The y-axis at time t denotes the total number of requests for all torrents minus the cumulative number of requests after time t since the torrents were born. Figures 1(b) and 1(c) show the CCDF distribution of the time when a .torrent file was downloaded after torrent birth in the server farm and cable network, respectively. Note that the y-axis is in log scale in all three figures.

All three curves can be fitted with straight lines, suggesting that the number of peer arrivals decreases exponentially with time after a torrent is born. To validate this conjecture, we use the least square method to fit the logarithm of the complementary of the number of peer arrivals for each torrent in the tracker trace. We define the relative deviation of the fitting for the number of requests at a time instant as | log N0 - log N | / log N0 × 100%, where N0 is the actual complementary value of the number of requests and N is the fitting result. Figure 2 shows the distribution of average fitting deviation for each fully-traced torrent with at least 20 peers during its lifetime. Each point on the x-axis denotes a torrent, sorted in non-ascending order of torrent population, and the corresponding value on the y-axis denotes the average relative fitting deviation. The fitting is more accurate for torrents with larger populations, and the overall average relative deviation is about 6%. We do not fit the curve for individual torrents in the server farm and cable network traces because the data collection duration is short and does not cover the entire lifespan of torrents. In the remainder of this paper, we use the tracker trace for modeling and analysis.

We define the torrent popularity at a time instant as the peer arrival rate of the torrent, which is the derivative of the peer arrival time distribution. Since the derivative of an exponential function is also an exponential function, we assume that the peer arrival rate of a torrent follows an exponential decreasing rule with time t:

\[
\lambda(t) = \lambda_0 e^{-t/\tau}
\]

where \(\lambda_0\) is the initial arrival rate when the torrent starts, and \(\tau\) is the attenuation parameter of the torrent evolution. In Section 3.3, we will use a fluid model to re-evaluate our assumption.

### 3.2 Evolution and Service Availability of BitTorrent

We define the torrent lifespan as the duration from the birth of the torrent to the time after which there is no complete copy of the file in the system, and new arriving peers cannot complete downloading. To simplify the modeling, we assume that the initial seed exits the system as soon as a downloader has downloaded the file completely. In practice, the initial seed may stay online for a longer time, and some seeds may return to the system to serve the content.

The inter-arrival time between two successive arriving peers \(\delta t\) can be approximated as \(1/\lambda\). Denote the rate at which seeds leave the system as \(\gamma\), then the average service time of a seed can be approximated as \(1/\gamma\). As shown in Figure 3, peer n and peer n+1 are the n-th and (n+1)-th arriving peers in the torrent, at times \(t_n\) and \(t_{n+1}\), respectively. The inter-arrival time between peer n and peer n+1 can be estimated as \(\delta t_n = t_{n+1} - t_n \approx 1/\lambda(t_n)\). Peer n downloads the file with speed \(u_n\) and then stays in the torrent for a time duration \(1/\gamma\).

[Insert Figure 3: The death of a torrent due to large inter-arrival time of peers]

This section continues with further details and analysis, but the structure and clarity have been improved for better readability and professional presentation.