title:Measurements, Analysis, and Modeling of BitTorrent-like Systems
author:Lei Guo and
Songqing Chen and
Zhen Xiao and
Enhua Tan and
Xiaoning Ding and
Xiaodong Zhang
Measurements, Analysis, and Modeling of BitTorrent-like Systems
Lei Guo1, Songqing Chen2, Zhen Xiao3, Enhua Tan1, Xiaoning Ding1, and Xiaodong Zhang1
1Department of Computer Science
2Department of Computer Science
3AT&T Labs-Research
College of William and Mary
Williamsburg, VA 23187, USA
{lguo, etan, dingxn, zhang}@cs.wm.edu
George Mason University
Fairfax, VA 22030, USA
PI:EMAIL
180 Park Ave.
Florham Park, NJ 07932, USA
PI:EMAIL
Abstract
Existing studies on BitTorrent systems are single-torrent
based, while more than 85% of all peers participate in
multiple torrents according to our trace analysis. In ad-
dition, these studies are not sufﬁciently insightful and ac-
curate even for single-torrent models, due to some unre-
alistic assumptions. Our analysis of representative Bit-
Torrent trafﬁc provides several new ﬁndings regarding
the limitations of BitTorrent systems:
(1) Due to the
exponentially decreasing peer arrival rate in reality, ser-
vice availability in such systems becomes poor quickly,
after which it is difﬁcult for the ﬁle to be located and
downloaded. (2) Client performance in the BitTorrent-
like systems is unstable, and ﬂuctuates widely with the
peer population. (3) Existing systems could provide un-
fair services to peers, where peers with high download-
ing speed tend to download more and upload less.
In
this paper, we study these limitations on torrent evolu-
tion in realistic environments. Motivated by the analy-
sis and modeling results, we further build a graph based
multi-torrent model to study inter-torrent collaboration.
Our model quantitatively provides strong motivation for
inter-torrent collaboration instead of directly stimulating
seeds to stay longer. We also discuss a system design to
show the feasibility of multi-torrent collaboration.
1 Introduction
BitTorrent [8] is a new generation of Peer-to-Peer (P2P)
system that has become very popular recently. Accord-
ing to a recent CNN report, BitTorrent trafﬁc represents
53% of all P2P trafﬁc on the Internet in June 2004 [16].
Unlike traditional P2P systems such as Gnutella [1],
KaZaa [2], and eDonkey/eMule/Overnet [3], in which
peers sharing different ﬁles are organized together and
exchange their desired ﬁles with each other, BitTorrent
organizes peers sharing the same ﬁle into a P2P net-
work and focuses on fast and efﬁcient replication to dis-
tribute the ﬁle. In BitTorrent, a ﬁle is divided into small
chunks, and a peer can download multiple chunks of
the ﬁle in parallel. Peers with different ﬁle chunks are
stimulated to exchange with each other through a “tit-
for-tat” incentive mechanism, which enables peers with
high uploading bandwidth to have corresponding high
downloading bandwidth. In this way, BitTorrent prevents
free riding effectively, which is very common in early
P2P systems [5]. P2P systems for exchanging different
ﬁles such as KaZaa and eMule use participation levels
or credit/reputation systems to track the contribution of
each peer, and encourage peers to contribute by giving
higher service priority to those peers with more contri-
bution. However, such systems are either too complex
and unrealistic or very easy to be circumvented [4, 6].
Compared to these systems, the direct “tit-for-tat” mech-
anism of BitTorrent is very simple and effective. In prac-
tice, BitTorrent-like systems scale fairly well during ﬂash
crowd period and are now widely used for various pur-
poses, such as for distributing large software packages
[7, 14].
Research has been conducted to study the effective-
ness of BitTorrent-like systems [7, 14, 17, 18, 23]. The
most recent work shows the stability of BitTorrent-like
systems through a ﬂuid model, and veriﬁes the effec-
tiveness of the current incentive mechanism [18]. How-
ever, this ﬂuid model assumes a Poisson arrival model
for the requests, which has been shown to be unrealistic
during a long period (eight months) of trace study [17].
Consequently, the model can only characterize the per-
formance of the BitTorrent system under stable condi-
tions. In reality, as shown by our trace analysis, the sta-
ble period is very short. In addition, all existing stud-
ies on BitTorrent-like systems focus on the behaviors of
single-torrent systems only, while our traces show that
most peers (> 85%) participate in multiple torrents.
In this work, we present an extensive study of
BitTorrent-like P2P systems through measurements,
trace analysis, and modeling. We ﬁrst study the evolu-
USENIX Association
Internet Measurement Conference 2005  
35
tion of BitTorrent systems based on realistic assumptions
analyzed from traces. We ﬁnd that although the existing
system is effective to address the “ﬂash crowd” problem
upon the debut of a new ﬁle, it has the following limita-
tions:
measurements, trace analysis, and modeling in Section 3,
and present our multi-torrent model in Section 4. Sec-
tion 5 proposes and discusses an architecture for inter-
torrent collaboration. We make concluding remarks in
Section 6.
• Due to the exponentially decreasing peer arrival rate
and the lack of seeds (peers with a full copy of the
ﬁle), service availability in the BitTorrent system
becomes poor quickly, after which it is difﬁcult for
the ﬁle to be located and downloaded.
• Client performance in the BitTorrent system is un-
stable and ﬂuctuates substantially with peer popula-
tion variations.
• Existing systems can provide unfair services to
peers. Studying the peer contribution ratio (up-
loaded bytes over downloaded bytes), we ﬁnd that
the peer contribution ratio decreases with its down-
loading speed.
Motivated by the results for the single-torrent system,
we further study the multi-torrent system through trace
analysis and modeling. Although it was generally under-
stood that collaboration among multiple torrents might
overcome some of the limitations of the single-torrent
system, to our best knowledge, our work is the ﬁrst to
quantitatively and comprehensively analyze the multi-
torrent system.
In detail, we (1) characterize the peer
request pattern in multiple torrents; (2) study the service
potentials a torrent can provide to and get from other tor-
rents; (3) demonstrate the beneﬁt of inter-torrent collab-
oration. In addition, we discuss a new architecture to fa-
cilitate inter-torrent collaboration and show the feasibil-
ity and compatibility to the current BitTorrent systems.
Our contributions in this work are:
• We ﬁnd three limitations of existing BitTorrent-like
systems through torrent evolution study based on
correct peer arrival pattern.
• Motivated by the modeling and analysis results, we
build a graph-based multi-torrent model to quan-
tify the inter-torrent collaboration beneﬁt. The re-
sult shows that inter-torrent collaboration is much
more effective than directly stimulating seeds to
stay longer, addressing the well-known problem of
lacking incentives to seeds.
• Guided by the modeling result, we propose and dis-
cuss a new architecture for inter-torrent collabora-
tion.
The remainder of the paper is organized as follows.
Section 2 presents related work. We demonstrate the
limitations of existing BitTorrent-like systems through
2 Other Related Work
The amount of P2P trafﬁc and the population of P2P
users on the Internet keeps increasing. A lot of studies
have been performed on the measurements, modeling,
and algorithms of different P2P systems.
Measurement studies
[19, 20] characterize the P2P
trafﬁc over the Internet, including Napster, Gnutella,
and KaZaa systems. Study [12] analyzes the popular-
ity of P2P content over the Internet and characterizes the
“download at most once” property of P2P clients. Ex-
tensive measurements and trafﬁc analysis on BitTorrent
systems have also been conducted recently. Study [14]
analyzes a ﬁve-month workload of a single BitTorrent
system for software distribution that involved thousands
of peers, and assesses the performance of BitTorrent at
the ﬂash crowd period. In [7], authors analyze the Bit-
Torrent trafﬁc of thousands of torrents over a two-month
period, with respect to ﬁle characteristics and client ac-
cess characteristics. Work [17] presents the current in-
frastructure of BitTorrent ﬁle sharing systems, including
the Web servers/mirrors for directory service, meta-data
distribution, and P2P content sharing. The authors also
ﬁnd that the arrival, abort, and departure processes of
downloaders do not follow a Poisson distribution in the
eight-month trace they collected, which was assumed in
the previous modeling study [18].
A queuing model for P2P ﬁle sharing systems is pro-
posed in [11]. Study [23] analyzes the service capacity of
BitTorrent-like systems, and ﬁnds that multi-part down-
loading helps P2P systems to improve performance dur-
ing ﬂash crowd period. Study [18] further characterizes
the overall performance of BitTorrent-like systems us-
ing a simple ﬂuid model, and analyzes the effectiveness
of BitTorrent incentive mechanism using game theory.
Study [15] introduces a probabilistic model of coupon
replication systems, and analyzes the performance under
an environment where neither altruistic user behaviors
nor load balancing strategies (such as rarest ﬁrst in Bit-
Torrent) are supported.
Study [22] proposes an interest-based content location
approach for P2P systems. By self-organizing into small
groups, peers with the same interest can collaborate more
efﬁciently, which is similar to the BitTorrent networks,
where all peers share the same ﬁle. In [21], a P2P pro-
tocol is proposed for bulk data transfer, which aims to
improve client performance and to reduce server load,
by using enhanced algorithms over BitTorrent systems.
36
Internet Measurement Conference 2005
USENIX Association
Different from all studies above, our modeling and
trace analysis provide an understanding of torrent evo-
lution in the BitTorrent systems and the relation among
multiple torrents over the Internet. Furthermore, our re-
sults reveal three limitations in current BitTorrent sys-
tems, and propose an innovative architecture to facilitate
inter-torrent collaboration, which represents the ﬁrst step
towards making the current BitTorrent-like system a re-
liable and efﬁcient content delivery vehicle.
3 Modeling
and Characterization
of
BitTorrent-like Systems
In a BitTorrent system, the content provider creates a
meta ﬁle (with the .torrent sufﬁx name) for the tor-
rent ﬁle it wants to share, and publishes the meta ﬁle on
a Web site. Then the content provider starts a BitTor-
rent client with a full copy of the torrent ﬁle as the orig-
inal seed. For each torrent ﬁle, there is a tracker site,
whose URL is encoded in the meta ﬁle, to help peers
ﬁnd each other to exchange the ﬁle chunks. A user starts
a BitTorrent client as a downloader at the beginning to
download ﬁle chunks from other peers or seeds in par-
allel. A peer that has downloaded the ﬁle completely
also becomes a seed that could in turn provide down-
loading service to other peers. All peers in the system,
including both downloaders and seeds, self-organize into
a P2P network, known as a torrent. The initial seed can
leave the torrent when there are other seeds available, and
content availability and system performance in the future
depend on the arrival and departure of downloaders and
other seeds.
Previous research has studied BitTorrent-like systems
through trace analysis and modeling, and veriﬁed its ef-
fectiveness during ﬂash crowds, which normally hap-
pen soon upon the debut of a new ﬁle [18]. However,
no existing work has characterized overall client perfor-
mance in the lifetime of a torrent when the ﬁle popularity
changes. This is particularly important for BitTorrent-
like systems where service availability relies purely on
the voluntary participation of peers. This is in contrast
to a client-server model where a permanent site (i.e., a
server) can provide persistent service.
In this section, we study torrent evolution, download-
ing service availability, client performance ﬂuctuation,
and service fairness in BitTorrent-like systems based on
torrent popularity characterization. We propose an evo-
lution model for BitTorrent-like systems and analyze the
torrent lifespan, ratio of failed peers, and the service pol-
icy of seeds, based on both the modeling and trace anal-
ysis.
3.1 Torrent Popularity Characterization
In this study, we analyze and model BitTorrent trafﬁc
based on two kinds of traces. The ﬁrst one contains the
statistics collected from two popular dedicated tracker
sites (although each torrent can have its own tracker site,
there are many dedicated tracker sites on the Internet pro-
viding persistent service, each of which may host thou-
sands of torrents), sampled every half an hour for 48
days from 2003-10-23 to 2003-12-10. This trace was
collected by University of Massachusetts, Amherst [7]
(abbreviated as the tracker trace or trace in the remain-
der of this paper). We identify different peers and match
multiple sessions of the same downloading with the sim-
ilar methods used in study [14]. The ﬁrewalled peers,
although they cannot accept incoming connections and
thus are not listed in the tracker query responses to allow
other peers to connect to, are still included in the tracker
statistics. We extract the peer request time, download-
ing/uploading bytes, the downloading/uploading band-
width of all peers for each torrent, and the information
for each torrent such as torrent birth time and ﬁle size.
Due to space limitations, we only present the analysis re-
sults of the larger tracker trace, which includes more than
1,500 torrents (about 550 torrents are fully traced during
their lifecycles). The smaller trace has similar results.
In order to better understand BitTorrent trafﬁc over
the Internet, we also collected the BitTorrent meta ﬁle
downloading trace from a large commercial server farm
hosted by a major ISP and a large group of home users
connected to the Internet via a well-known cable com-
pany, using the Gigascope appliance [10], from 2004-
09-28 to 2004-10-07. The server farm trace includes
about 50 tracker sites hosting hundreds of torrents, and
the cable network trace includes about 3,000 BitTorrent
users (by IP addresses) requesting thousands of torrents
on the Internet. Both traces include the ﬁrst IP packets of
all HTTP downloading of the .torrent ﬁles, with the
timestamp when the packet is captured (the downloading
time of the .torrent ﬁle). This timestamp represents
the peer arrival time to the torrent. We also extract the
timestamp encoded in each .torrent ﬁle, which is the
creation time of the meta ﬁle and represents the torrent
birth time.
Figure 1(a) shows the complementary CDF (CCDF)
distribution of the time after torrent birth for the requests
to all fully-traced torrents in the tracker trace. For peers
downloading the ﬁle in multiple sessions, only the ﬁrst
requests are considered. The y-axis at time t denotes the
total number of requests for all torrents in the trace minus
the cumulative number of requests for all torrents after
time t since they are born. Figures 1(b) and 1(c) show
the CCDF distribution of the time when a .torrent
ﬁle was downloaded after torrent birth in the server farm
USENIX Association
Internet Measurement Conference 2005  
37
105
104
103
102
101
s
t
s
e
u
q
e
r
r
e
e
p
f
o
r
e
b
m
u
n
100
0
10
raw data
linear fit
103
102
101
raw data
linear fit
i
g
n
d
a
o
n
w
o
d
l
e
l
i
f
t
n
e
r
r
o
t
.
f
o
r
e
b
m
u
n
i
g
n
d
a
o
n
w
o
d
l
e
l
i
f
t
n
e
r
r
o
t
.
f
o
r
e
b
m
u
n
raw data
linear fit
104
103
102
101
40
50
100
0
50
100
150
200
time after torrent birth (day)
250
100
0
100
200
300
400
time after torrent birth (day)
500
20
30
time after torrent birth (day)
(a) Tracker trace
(b) Server farm trace
(c) Cable network trace
Figure 1: The complementary CDF distribution of peer arrival time (time of a peer’s ﬁrst request to a torrent or time
when a meta ﬁle was downloaded) after torrent birth for three BitTorrent traces (y-axis is in log scale)
35
30
25
20
15
10
)
%
(
n
o
i
t
i
a
v
e
d
e
v
i
t
l
a
e
r
5
0
0
100
200
300
400
500
torrents
Figure 2: Fitting deviations of fully-traced torrents in the
tracker trace
and in the cable network, respectively. Note that y-axis
is in log scale in the three ﬁgures.
All three curves can be ﬁtted with straight lines. This
consistent trend strongly suggests that after a torrent is
born, the number of peer arrivals to the torrent decreases
exponentially with time in general. To validate that this
conjecture holds for individual torrents as well, we use
the least square method to ﬁt the logarithm of the com-
plementary of the number of peer arrivals for each tor-
rent in the tracker trace. We deﬁne the relative devia-
tion of the ﬁtting for the number of requests at a time
instant as | log N0−log N |
× 100%, where N0 is the actual
complementary value of the number of requests and N
is the ﬁtting result. Figure 2 shows the distribution of
average ﬁtting deviation for each fully-traced torrent that
has at least 20 peers during its lifetime. In this ﬁgure,
each point in the x-axis denotes a torrent, sorted in non-
ascending order of torrent population during the entire
lifetime, and the corresponding value in y-axis denotes
the average of relative ﬁtting deviation of this torrent. We
can see the ﬁtting is more accurate for torrents with larger
population, and the overall average relative deviation is
log N0
only about 6%. We do not ﬁt the curve for individual
torrents in the server farm and cable network trace, be-
cause the data collection duration is short so that they do
not cover the whole lifespans of torrents. In the remain-
der part of this paper, we only use the tracker trace for
modeling and analysis.
We deﬁne the torrent popularity at a time instant as
the peer arrival rate of the torrent at that time, which is
the derivative of the peer arrival time distribution of that
torrent. Since the derivative of an exponential function
is also an exponential function, we assume that the peer
arrival rate of a torrent follows an exponential decreasing
rule with time t
λ(t) = λ0e− t
τ ,
(3.1)
where λ0 is the initial arrival rate when the torrent starts,
and τ is the attenuation parameter of the torrent evolu-
tion. In Section 3.3, we will use a ﬂuid model to evaluate
our assumption again.
3.2 Evolution and Service Availability of
BitTorrent
We deﬁne the torrent lifespan as the duration from the
birth of the torrent to the time after which there is no
complete copy of the ﬁle in the system, and the new ar-
riving peers cannot complete downloading. To simplify
the modeling, we assume that the initial seed exits the
system as soon as a downloader has downloaded the ﬁle
completely. In practice, the initial seed may stay online
in the system for a longer time, and some seeds may re-
turn to the system to serve the content.
The inter-arrival time between two successive arriv-
ing peers δt can be approximated as 1
λ . Denote the rate at
which seeds leave the system as γ, then the average ser-
vice time of a seed can be approximated as 1
γ . As shown
in Figure 3, peer n and peer n+1 are the n-th and (n+1)-
th arriving peers in the torrent, at the time tn and tn+1,
38
Internet Measurement Conference 2005
USENIX Association
Figure 3: The death of a torrent due to large inter-arrival
time of peers
respectively. The inter-arrival time between peer n and
peer n+1 can be estimated as δtn = tn+1 − tn ≈ 1
λ(tn) .
Peer n downloads the ﬁle with speed un and then stays
in the torrent for a time duration 1