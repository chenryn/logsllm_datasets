attacker can inject rogue DNS records of arbitrary domain
names into the forwarders’ cache, and bypass common de-
fences including randomized ephemeral ports and 0x20 en-
coding. By testing on current implementations, we ﬁnd sev-
eral home router models and DNS software vulnerable to this
attack, including those of large vendors. Meanwhile, through
a nationwide measurement study, we assess the affected pop-
ulation of mobile clients using the vulnerable devices. From
the implementations we ﬁnd a diversity in the industry on un-
derstanding the role of DNS forwarders. Also, there is still a
lack of implementation guidelines on forwarding devices in
the DNS speciﬁcations. As such, we believe more attention
should be raised from the community to the understanding
and the security status of DNS forwarders.
USENIX Association
29th USENIX Security Symposium    589
Acknowledgements
We sincerely thank all anonymous reviewers for their valu-
able comments to improve the paper. We also thank the
GeekPwn Cyber Security Competition.
This work is supported by National Key R&D Program
of China, Grant No. 2017YFB0803202; NSFC Grant No.
U1836213, U1636204; State Key Laboratory of Computer
Architecture (ICT, CAS) under Grant No. CARCH201703;
National Science Foundation under Grant No. 1652954,
1646641 and 1619391.
References
[1] Cloud delivered enterprise security by opendns.
https://www.opendns.com/.
[2] Cloudﬂare Resolver.
com/.
[3] Comodo secure dns.
secure-dns/.
https://cloudflare-dns.
https://www.comodo.com/
[4] Create your perfect wiﬁ system - linksys. https://
www.linksys.com/us/.
[5] D-link: Consumer.
consumer.
https://www.dlink.com/en/
[6] Dnrd, domain name relay daemon.
sourceforge.net/.
http://dnrd.
[7] Dnsmasq - network services for small networks. http:
//www.thekelleys.org.uk/dnsmasq/doc.html.
[15] Netgear, howpublished = https://www.netgear.
com/.
[16] Norton connectsafe. https://www.publicdns.xyz/
public/norton-connectsafe.html.
[17] Openwrt project. https://openwrt.org/.
[18] Powerdns. https://www.powerdns.com/.
[19] Quad9 DNS: Internet Security & Privacy In a Few Easy
Steps. https://www.quad9.net/.
[20] Tenda wireless router. http://simulator.tendacn.
com/N301v2/.
[21] Tp-link: Wiﬁ networking equipment for home & busi-
ness. https://www.tp-link.com/us/.
[22] Verisign public dns offers dns stability and security.
https://www.verisign.com/en_US/security-
services/public-dns/index.xhtml.
[23] Wireless
routers
|
networking
|
asus
global.
https://www.asus.com/Networking/Wireless-
Routers-Products/.
[24] Dan kaminsky’s blog.
http://dankaminsky.com/
2008/07/21/130/, 2008.
[25] Bind 9 - versatile, classic, complete name server soft-
ware. https://www.isc.org/bind/, 2019.
[26] Bugcrowd. https://www.bugcrowd.com/, 2019.
[27] Nlnet
labs - unbound.
https://nlnetlabs.nl/
projects/unbound/about/, 2019.
[8] Domain name system (dns) overview.
https:
//docs.microsoft.com/en-us/previous-
versions/windows/it-pro/windows-server-
2012-r2-and-2012/hh831667(v=ws.11).
[28] Geoffrey Alexander, Antonio M Espinoza, and Je-
didiah R Crandall. Detecting tcp/ip connections via
ipid hash collisions. Proceedings on Privacy Enhanc-
ing Technologies, 2019(4):311–328, 2019.
[9] Gee hiwiﬁ. https://www.hiwifi.com/.
[10] Google Public DNS. https://developers.google.
com/speed/public-dns/.
[11] Huawei wireless routers-huawei ofﬁcial site. https:
//consumer.huawei.com/eg-en/support/smart-
home/wireless-routers/.
[12] Introducing a new whoami tool for dns resolver infor-
https://developer.akamai.com/blog/
mation.
2018/05/10/introducing-new-whoami-tool-
dns-resolver-information.
[13] Knot DNS. https://www.knot-dns.cz/.
[14] Mi router 3 - mi.com. https://www.mi.com/mea/
mi-router-3/.
[29] Mark Andrews. Negative caching of dns queries (dns
ncache). 1998.
[30] R Arends, R Austein, M Larson, Daniel Massey, and
Scott W Rose. Protocol modiﬁcations for the dns secu-
rity extensions rfc 4035. Technical report, 2005.
[31] Ray Bellis. Dns proxy implementation guidelines.
2009.
[32] Stephane Bortzmeyer. Dns privacy considerations.
2015.
[33] Markus Brandt, Tianxiang Dai, Amit Klein, Haya Shul-
man, and Michael Waidner. Domain validation++ for
In Proceedings of the 2018 ACM
mitm-resilient pki.
SIGSAC Conference on Computer and Communica-
tions Security, pages 2060–2076. ACM, 2018.
590    29th USENIX Security Symposium
USENIX Association
[34] Taejoong Chung, Roland van Rijswijk-Deij, Balakr-
ishnan Chandrasekaran, David Choffnes, Dave Levin,
Bruce M Maggs, Alan Mislove, and Christo Wilson.
A longitudinal, end-to-end view of the {DNSSEC}
In 26th {USENIX} Security Symposium
ecosystem.
({USENIX} Security 17), pages 1307–1322, 2017.
[35] Carlo Contavalli, Wilmer van der Gaast, David C
Lawrence, and Warren Kumari. Rfc 7871-client sub-
net in dns queries. 2016.
[36] David Dagon, Manos Antonakakis, Paul Vixie, Tatuya
Jinmei, and Wenke Lee.
Increased dns forgery re-
sistance through 0x20-bit encoding: security via leet
In Proceedings of the 15th ACM conference
queries.
on Computer and communications security, pages 211–
222. ACM, 2008.
[46] John W Heffner, Ben Chandler, and Matt Mathis. Ipv4
reassembly errors at high data rates. 2007.
[47] Amir Herzberg and Haya Shulman. Security of patched
dns. In European Symposium on Research in Computer
Security, pages 271–288. Springer, 2012.
[48] Amir Herzberg and Haya Shulman. Fragmentation
considered poisonous, or: One-domain-to-rule-them-
all. org. In 2013 IEEE Conference on Communications
and Network Security (CNS), pages 224–232. IEEE,
2013.
[49] Amir Herzberg and Haya Shulman. Vulnerable delega-
tion of dns resolution. In European Symposium on Re-
search in Computer Security, pages 219–236. Springer,
2013.
[37] Joao Damas, Michael Graff, and Paul Vixie. Extension
mechanisms for dns (edns (0)). 2013.
[50] Paul Hoffman, Andrew Sullivan, and K Fujiwara. Dns
terminology. Technical report, 2019.
[38] Zakir Durumeric, David Adrian, Ariana Mirian,
Michael Bailey, and J. Alex Halderman. A search en-
gine backed by Internet-wide scanning. In 22nd ACM
Conference on Computer and Communications Secu-
rity, October 2015.
[39] R Elz and R Bush. Rfc 2181: Clariﬁcations to the dns
speciﬁcation. Technical report, Updates RFC 1034,
RFC 1035, RFC 1123. Status: Proposed standard,
1997.
[40] Kazunori Fujiwara.
against
Measures
dns
cache poisoning attacks using ip fragmentation.
https://indico.dns-oarc.net/event/31/
contributions/692/attachments/660/1115/
fujiwara-5.pdf.
[41] Kazunori Fujiwara, Andrew Sullivan, and Paul Hoff-
man. Dns terminology. 2019.
[42] Yossi Gilad and Amir Herzberg. Fragmentation con-
sidered vulnerable: blindly intercepting and discarding
fragments. In Proceedings of the 5th USENIX confer-
ence on Offensive technologies, pages 2–2. USENIX
Association, 2011.
[43] Yossi Gilad, Amir Herzberg, and Haya Shulman. Off-
path hacking: The illusion of challenge-response au-
IEEE Security & Privacy, 12(5):68–77,
thentication.
2013.
[51] Charles Hornig. A standard for the transmission of ip
datagrams over ethernet networks. Technical report,
1984.
[52] A Hubert and R Van Mook. Measures for making dns
more resilient against forged answers. Technical report,
RFC 5452, January, 2009.
[53] Dan Kaminsky. The massive, multi-vendor issue and
the massive, multi-vendor ﬁx. Technical report, 2008.
[54] Christopher A Kent and Jeffrey C Mogul. Fragmenta-
tion considered harmful, volume 17. 1987.
[55] Amit Klein and Benny Pinkas. From IP ID to device ID
and KASLR bypass. In 28th USENIX Security Sympo-
sium (USENIX Security 19), pages 1063–1080, Santa
Clara, CA, August 2019. USENIX Association.
[56] Jeffrey Knockel and Jedidiah R Crandall. Counting
In 4th
packets sent between arbitrary internet hosts.
{USENIX} Workshop on Free and Open Communica-
tions on the Internet ({FOCI} 14), 2014.
[57] Marc Kührer, Thomas Hupperich, Jonas Bushart,
Christian Rossow, and Thorsten Holz. Going wild:
Large-scale classiﬁcation of open dns resolvers.
In
Proceedings of the 2015 Internet Measurement Confer-
ence, pages 355–368. ACM, 2015.
[44] Fernando Gont. Rfc 7739-security implications of pre-
dictable fragment identiﬁcation values. 2016.
[58] Paul Mockapetris. Rfc-1034 domain names-concepts
and facilities. Network Working Group, page 55, 1987.
[45] Andreas Gustafsson. Handling of unknown dns re-
source record (rr) types. 2003.
[59] Jeffrey C Mogul and Steven E Deering. Path mtu dis-
covery. Technical report, 1990.
USENIX Association
29th USENIX Security Symposium    591
[60] VC NewsNetwork.
Wiﬁ home router market
2019 global analysis, opportunities and forecast to
2025. https://www.reuters.com/brandfeatures/
venture-capital/article?id=105961, 2019.
[61] Vicky Risk. Edns (in) compatibility. https://www.
isc.org/docs/DNS-OARC-EDNS-Compliance.pdf,
2015.
[62] Kyle Schomp, Tom Callahan, Michael Rabinovich, and
Mark Allman. On measuring the client-side dns in-
frastructure. In Proceedings of the 2013 conference on
Internet measurement conference, pages 77–90. ACM,
2013.
[63] Kyle Schomp, Tom Callahan, Michael Rabinovich, and
Mark Allman. Assessing dns vulnerability to record in-
jection. In Proceedings of the Passive and Active Mea-
surement Conference, 2014.
[64] Kyle Schomp, Tom Callahan, Michael Rabinovich, and
Mark Allman. Dns record injectino vulnerabilities
in home routers. http://www.icir.org/mallman/
talks/schomp-dns-security-nanog61.pdf, 2014.
[65] Christoph Schuba. Addressing weaknesses in the do-
main name system protocol. Master’s thesis, Purdue
University, West Lafayette, IN, 1993.
[66] Haya Shulman and Michael Waidner. Fragmentation
considered leaking: port inference for dns poisoning.
In International Conference on Applied Cryptography
and Network Security, pages 531–548. Springer, 2014.
[67] Joe Stewart. Dns cache poisoning–the next generation,
2003.
[68] Yves Vanaubel, Jean-Jacques Pansiot, Pascal Mérindol,
and Benoit Donnet. Network ﬁngerprinting: Ttl-based
router signatures. In Proceedings of the 2013 confer-
ence on Internet measurement conference, pages 369–
376. ACM, 2013.
[69] Paul Vixie. Dns and bind security issues.
Security Symposium, 1995.
In Usenix
[70] Paul Vixie, S Thomson, Y Rekhter, and J Bound. Rfc
2136: Dynamic updates in the domain name system
(dns update), 1997.
[71] Xu Zhang, Jeffrey Knockel, and Jedidiah R Crandall.
Onis:
Inferring tcp/ip-based trust relationships com-
pletely off-path. In IEEE INFOCOM 2018-IEEE Con-
ference on Computer Communications, pages 2069–
2077. IEEE, 2018.
Figure 11: Headers in a DNS packet
Appendices
A IP Fragmentation
IP fragmentation allows IP datagrams to be transmitted
through networks which limit packets to a small size. On
an arbitrary internet path, Path Maximum Transmission Unit
(PMTU) deﬁnes the size limit of IP packets, and datagrams
larger than PMTU will be fragmented. PMTU equals the
minimum MTU of each hop in the path, and can be discov-
ered using a technique described in [59]. Particularly, the
MTU of Ethernet is 1,500 bytes [51].
As shown in Figure 11, IP fragmentation and reassembly
is supported by using several ﬁelds of the IP header: Iden-
tiﬁcation (IPID), Don’t Fragment bit (DF), More Fragment
bit (MF) and Fragment Offset. If a sender does not desire a
datagram to be fragmented, the DF ﬂag is set. The MF ﬂag in-
dicates whether this is the last fragment of the datagram, and
is cleared in the last fragment. Fragment Offset shows the
position of current fragment in the original datagram. Most
importantly, fragments of one IP datagram have the same
IPID, in order to be correctly reassembled.
Speciﬁcally for DNS packets, they contain IP header, UDP
header and DNS header. If a DNS packet is fragmented, only
the ﬁrst fragment will have UDP header and DNS header.
Fragmentation considered “harmful”. Despite being one
of the IP basic functions, there has been long discussions
on the problems caused by IP fragmentation. The earliest
report on the issue dates back to 1987 [54], which shows
that fragmentation can lead to poor performance and com-
plete communication failure. As documented by [46], IP
fragmentation can also result in frequent data corruption.
In recent studies, IP fragmentation can be used to circum-
vent DNS cache injection defences [43, 48], or cause CAs
to issue fraudulent certiﬁcates [33]. Because of the security
issues, there have been discussions on completely avoiding
fragmentation behaviors [40].
B IPID Assignment of Public DNS Services
Using the technique described in Section 4, we test the IPID
assignment of egress resolvers of 7 public DNS services. We
592    29th USENIX Security Symposium
USENIX Association
Figure 13:
DNS for
156.154.180.*).
IPID assignment of Norton ConnectSafe
fragmented DNS responses (egress resolver:
Figure 14: IPID assignment of Google Public DNS (egress
resolver: 172.253.0.*).
Figure 12: IPID assignment of a) Cloudﬂare DNS, b) Quad9
DNS, c) OpenDNS, and d) Comodo Secure DNS, observed
from one vantage point. Each line represents one egress re-
solver, and each dot marks one DNS response packet.
use two vantage points as DNS clients, and start the mea-
surement on both machines at the same time. We change the
speed of DNS queries every 100 seconds (from 1Qps, 10Qps
to 100Qps).
Hash-based IPID counters. We ﬁnd that egress resolvers
of Cloudﬂare, Quad9, OpenDNS, Comodo and Norton use
hash-based IPID counters. Figure 12 shows the IPIDs of
DNS responses received by one DNS client. After separat-
ing responses from different egress resolvers (i.e., lines in
Figure 12), we ﬁnd that the egress resolvers use predictable
incremental IPID counters. The increments are linear with
time, because in hash-based algorithms each IPID counter
is shared by an array of destination addresses. We conﬁrm
that the algorithm is hash-based, because the IPIDs of DNS
reponses sent to our two vantage points are not related.
Particularly, as shown in Figure 13, Norton Connect-
Safe uses hash-based IPID counters for fragmented DNS re-
sponses only, and uses zero IPID values when they are not
fragmented. This design has made IPID prediction easier, as
most DNS packets on the Internet are not fragmented, so the
IPID counters are hardly increased by normal responses.
Random IPID assignment. As shown in Figure 14, egress
resolvers of Google and Verisign use random IPID assign-
ment. As upstream resolvers, the two services cannot be ex-
ploited in the attack.
USENIX Association
29th USENIX Security Symposium    593