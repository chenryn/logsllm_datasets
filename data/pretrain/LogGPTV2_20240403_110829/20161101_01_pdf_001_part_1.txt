Author: Digoal.Zhou
Phone:
Mail: PI:EMAIL
QQ: 276732431
Blog: http://blog.163.com/digoal@126/
Day 1
Day 1
 About PostgreSQL  索引
 并发控制
 Tutorial
 SQL性能优化
 安装
 初始化集群
 配置集群
 启动/关闭集群
 连接PostgreSQL
 SQL Language
 SQL语法
 数据定义
 数据操作
 权限
 数据类型
 函数与操作符
 类型转换
About PostgreSQL
 Maximum size for a database? unlimited
 Maximum size for a table? 32 TB
 Maximum size for a row? 400 GB
 Maximum size for a field? 1 GB
 Maximum number of rows in a table? unlimited
 Maximum number of columns in a table? 250-1600 depending
on column types
 Maximum number of indexes on a table? unlimited
Tutorial
安装
初始化集群
配置集群
启动/关闭集群
连接PostgreSQL
Tutorial
版本
PostgreSQL 9.1.3
CentOS 5.x 64
安装前准备工作
下载源码
http://www.postgresql.org/ftp/source/v9.1.3/
配置存储
配置OS
配置存储
 磁盘选择
 机械盘 VS SSD
 RAID选择
 RAID5, RAID5/0, RAID1, RAID1/0
 RAID5, RAID5/0 写性能差, 坏盘后性能下降严重, REBUILD耗时长. 可以使用n-1的
容量.
 RAID1, RAID1/0 读写性能好, 坏盘后基本没有性能下降, REBUILD耗时短. 可以使
用n/2的容量.
 高端存储CACHE够大的情况下RAID5, RAID5/0写性能也可以接受.
 存储CACHE
 有掉电保护的情况下, 建议开启存储或RAID卡的写CACHE.
 磁盘的CACHE一定要关闭.
 pg_test_fsync模块调用各种同步写函数测试存储处理IO的能力
 测试包含write-back和write-through
 http://blog.163.com/digoal@126/blog/static/163877040201141795025354/
 http://blog.163.com/digoal@126/blog/static/1638770402012449234965/
配置存储
 使用fdatasync函数测试同步写举例, 往同一个位置写.
 【参考】Linux Programmer's Manual (open, write, lseek, fdatasync)
open一次,
循环多次
write
fdatasync
lseek
配置存储
 不调用同步写函数的写举例
每次
open
write
close
配置OS
 结合PostgreSQL编译安装时configure的选项, 有选择的安装OS的依赖包.
 OS配置
 /etc/sysctl.conf
 /etc/security/limits.conf
 /etc/sysconfig/iptables
 时间调整
 自动 配置ntpd服务 或者 使用crontab如下
 8 * * * * /usr/sbin/ntpdate asia.pool.ntp.org && /sbin/hwclock --systohc
 设备管理
 逻辑卷, blockdev --setra
 文件系统
 XFS, ext3, ext4, ZFS
 noatime
 添加用户
 配置环境
 【参考】
 CentOS kernel-doc-x.x.xx-xxx
配置OS
 #!/bin/bash  vi /etc/sysctl.conf
 # simple shmsetup script
 page_size=`getconf PAGE_SIZE`  kernel.shmmax =
 phys_pages=`getconf _PHYS_PAGES`  kernel.shmall =
 shmall=`expr $phys_pages`  kernel.shmmni = 4096
 shmmax=`expr $shmall \* $page_size`  kernel.sem = 50100 64128000 50100 1280
 echo kernel.shmmax = $shmmax  fs.file-max = 7672460
 echo kernel.shmall = $shmall  net.ipv4.ip_local_port_range = 9000 65000
 net.core.rmem_default = 1048576
 net.core.rmem_max = 4194304
 net.core.wmem_default = 262144
 net.core.wmem_max = 1048576
 fs.aio-max-nr = 1048576
 sysctl -p
配置OS
 vi /etc/security/limits.conf  vi /etc/sysconfig/iptables
 * soft nofile 131072  -A RH-Firewall-1-INPUT -i lo -j ACCEPT
 * hard nofile 131072  # 允许源IP
 * soft nproc 131072  -A RH-Firewall-1-INPUT -s 192.168.0.0/16 -
j ACCEPT
 * hard nproc 131072
 * soft core unlimited  # 允许源IP访问目标端口
 * hard core unlimited  # -A RH-Firewall-1-INPUT -s
192.168.1.0/24 -m state --state NEW -m tcp -
 * soft memlock 50000000
p tcp --dport 1921 -j ACCEPT
 * hard memlock 50000000
 # 允许任意IP访问目标端口
 # -A RH-Firewall-1-INPUT -p tcp -m state --
state NEW -m tcp --dport 5432 -j ACCEPT
配置OS
 useradd postgres
 vi ~/.bash_profile
 export PGPORT=5432
 export PGDATA=/data01/pgdata/digoal/5432/pg_root
 export PGHOME=/opt/pgsql
 export PGHOST=$PGDATA
 export LANG=en_US.utf8
 export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib
 export DATE=`date +"%Y%m%d%H%M"`
 export PATH=$PGHOME/bin:$PATH:.
 export MANPATH=$PGHOME/share/man:$MANPATH
 alias rm='rm -i'
 alias ll='ls -lh‘
 【参考】
 http://www.postgresql.org/docs/9.1/static/libpq-envars.html
安装
 su - root
 tar -jxvf postgresql-9.1.3.tar.bz2
 chown -R postgres:postgres postgresql-9.1.3
 su - postgres
 cd postgresql-9.1.3
 ./configure --prefix=/opt/pgsql --with-pgport=5432 --with-perl --with-python --with-openssl --
with-pam --without-ldap --with-libxml --with-libxslt --enable-thread-safety
 gmake world
 su - root
 gmake install-world
 【参考】
 postgresql-9.1.3/INSTALL
初始化集群
 initdb -A md5 -D $PGDATA -E UTF8 --locale=C -W
 -A, --auth=METHOD
 default authentication method for local connections
 [-D, --pgdata=]DATADIR
 location for this database cluster
 -E, --encoding=ENCODING
 set default encoding for new databases
 --locale=LOCALE
 set default locale for new databases
 -W, --pwprompt
 prompt for a password for the new superuser
配置集群
 pg_hba.conf
 # TYPE DATABASE USER ADDRESS METHOD
 # "local" is for Unix domain socket connections only
 # local all all md5
 local all all trust
 # IPv4 local connections:
 # host all all 127.0.0.1/32 md5
 host all all 127.0.0.1/32 trust
 # IPv6 local connections:
 host all all ::1/128 md5
 host test all 0.0.0.0/0 md5
 host postgres all 0.0.0.0/0 reject
 host all all 0.0.0.0/0 md5
配置集群(列出部分配置)
 postgresql.conf  max_wal_senders = 32
 listen_addresses = '0.0.0.0'  hot_standby = on
 unix_socket_directory = '.'  random_page_cost = 2.0
 unix_socket_permissions = 0700  effective_cache_size = 12000MB
 shared_buffers = 512MB  log_checkpoints = on
 maintenance_work_mem = 512MB  log_statement = 'ddl'
 max_stack_depth = 8MB  track_activity_query_size = 2048
 shared_preload_libraries =  autovacuum = on
'pg_stat_statements'
 log_autovacuum_min_duration = 0
 wal_level = hot_standby  custom_variable_classes =
 wal_buffers = 16384kB 'pg_stat_statements'
 synchronous_commit = off  pg_stat_statements.max = 1000
 wal_writer_delay = 10ms  pg_stat_statements.track = all
 checkpoint_segments = 128
 archive_mode = on
 archive_command = '/bin/date'
配置集群
可动态调整的配置修改后如何生效(包括pg_hba.conf)
pg_ctl reload -D $PGDATA
或者给postgres主进程发出SIGHUP信号
静态配置修改后如何生效
pg_ctl stop -m fast -D $PGDATA
pg_ctl start -D $PGDATA
启动/关闭集群
 启动
 su - postgres
 pg_ctl start -D $PGDATA
 关闭
 su - postgres
 pg_ctl stop -m fast -D $PGDATA
启动/关闭集群
 关闭的几种模式
 smart(默认)
等待所有已经连接的客户端断开连接
等待online 备份完成
 fast
不等待客户端断开连接
所有在进行的事务全部回滚, 然后断开连接
如果有的户, 终止online 备份
 immediate
abort掉所有的进程, 最快的关集群方式, 但是重启集群时需要恢复.
一般用在紧急维护, 如UPS的电不够了, 需要马上停库, 停主机.
 一般可以先用smart模式关集群, 执行后数据库将不允许新的连接进来. 等已有的连接事务
执行完成后用再fast关集群. 尽量减少事务回滚的可能.
连接PostgreSQL
 连接数据库
 psql -h 127.0.0.1
 psql -h $ip
 psql -h unix_socket
SQL Language
Say SQL
SQL Syntax
SQL Syntax-Lexical Structure
 SELECT * FROM pg_class WHERE relname = 'pg_statistic' LIMIT 1; -- is one
comment
 TOKEN
 keyword (SELECT FROM WHERE LIMIT)
 identifier or quoted identifier (pg_class relname, 表名, 列名,对象名...)
默认小写, 如需大写需使用双引号
 literal or constant ('pg_statistic' 1)
 special character symbol (*)
 comment (-- is one-line comment) or (/* */ multi-line comment)
 operator (=)