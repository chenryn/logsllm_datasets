# 【漏洞分析】CVE-2017-3881：思科 Catalyst 交换机远程代码执行漏洞分析
|
##### 译文声明
本文是翻译文章，文章来源：artkond.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
****
翻译：[shan66](http://bobao.360.cn/member/contribute?uid=2522399780)
预估稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**  
**
**前言**
您的Catalyst交换机上是否启用了telnet？ 如果是的话，那就要小心了。本文将向读者介绍针对配备了最新固件的Catalyst
2960交换机的远程代码执行漏洞的概念验证攻击技术。具体的漏洞利用代码可以从[这里](https://github.com/artkond/cisco-rce/)下载。以下是对2017年3月7日中情局泄露的机密文件中的一个安全漏洞的利用开发流程的详细说明，此外，思科公司于2017年3月17日也公开披露了该漏洞的详细情况。但是，截止撰写本文时，仍然没有可用的补丁。尽管如此，还是有一个补救措施的，那就是禁用telnet，并代之以使用SSH。
**CIA泄漏的Vault 7**
2017年3月7日，中央情报局的一系列文件被泄露，并被公布到维基解密上。其中，一份文件中涉及了一个影响多款Cisco交换机的远程代码执行漏洞。这个漏洞在泄露的文档中的代号为ROCEM。虽然提到的技术细节很少，但仍然引起了人们的注意。
Vault
7的文档暴露了实际的漏洞利用代码的测试过程，但是没有泄露漏洞利用的源代码。根据泄露的内容来看，有两点格外引入注目：该工具可以以交互模式或设置模式启动。其中，交互模式通过telnet发送有效载荷，并能够在同一telnet连接的上下文中立即向攻击者提供命令shell。下面的内容引自该[文档](https://wikileaks.org/ciav7p1/cms/page_23134373.html)：
    Started ROCEM interactive session - successful: 
    root@debian:/home/user1/ops/adverse/adverse-1r/rocem# ./rocem_c3560-ipbase-mz.122-35.SE5.py -i 192.168.0.254
    [+] Validating data/interactive.bin
    [+] Validating data/set.bin
    [+] Validating data/transfer.bin
    [+] Validating data/unset.bin
    ****************************************
    Image: c3560-ipbase-mz.122-35.SE5
    Host: 192.168.0.254
    Action: Interactive
    ****************************************
    Proceed? (y/n)y
    Trying 127.0.0.1...
    [*] Attempting connection to host 192.168.0.254:23
    Connected to 127.0.0.1.
    Escape character is '^]'.
    [+] Connection established
    [*] Starting interactive session
    User Access Verification
    Password:
    MLS-Sth#
    MLS-Sth# show priv
    Current privilege level is 15
    MLS-Sth#show users
    Line User Host(s) Idle Location
    * 1 vty 0 idle 00:00:00 192.168.221.40
    Interface User Mode Idle Peer Address
    MLS-Sth#exit
    Connection closed by foreign host.
设置模式。修改交换机内存，以便将来可以在无需密码的情况下建立telnet连接。下面的内容引自该[文档](https://wikileaks.org/ciav7p1/cms/page_17760327.html)：
    Test set/unset feature of ROCEM
    DUT configured with target configuration and network setup
    DUT is accessed by hopping through three flux nodes as per the CONOP
    Reloaded DUT to start with a clean device
    From Adverse ICON machine, set ROCEM:
    root@debian:/home/user1/ops/adverse/adverse-1r/rocem# ./rocem_c3560-ipbase-mz.122-35.SE5.py -s 192.168.0.254
    [+] Validating data/interactive.bin
    [+] Validating data/set.bin
    [+] Validating data/transfer.bin
    [+] Validating data/unset.bin
    ****************************************
    Image: c3560-ipbase-mz.122-35.SE5
    Host: 192.168.0.254
    Action: Set
    ****************************************
    Proceed? (y/n)y
    [*] Attempting connection to host 192.168.0.254:23
    [+] Connection established
    [*] Sending Protocol Step 1
    [*] Sending Protocol Step 2
    [+] Done
    root@debian:/home/user1/ops/adverse/adverse-1r/rocem#
    Verified I could telnet and rx priv 15 without creds:
    root@debian:/home/user1/ops/adverse/adverse-1r/rocem# telnet 192.168.0.254
    Trying 192.168.0.254...
    Connected to 192.168.0.254.
    Escape character is '^]'.
    MLS-Sth#
    MLS-Sth#show priv
    Current privilege level is 15
    MLS-Sth#
在研究此漏洞时，我们发现了一段非常有用的信息，即telnet的调试输出。下面是引自该文档的内容：
    14. Confirm Xetron EAR 5355 - Debug telnet causes anomalous output 
      1.Enabled debug telnet on DUT
      2.Set ROCEM
      3.Observed the following:
        000467: Jun 3 13:54:09.330: TCP2: Telnet received WILL TTY-SPEED (32) (refused)
        000468: Jun 3 13:54:09.330: TCP2: Telnet sent DONT TTY-SPEED (32)
        000469: Jun 3 13:54:09.330: TCP2: Telnet received WILL LOCAL-FLOW (33) (refused)
        000470: Jun 3 13:54:09.330: TCP2: Telnet sent DONT LOCAL-FLOW (33)
        000471: Jun 3 13:54:09.330: TCP2: Telnet received WILL LINEMODE (34)
        000472: Jun 3 13:54:09.330: TCP2: Telnet sent DONT LINEMODE (34) (unimplemented)
        000473: Jun 3 13:54:09.330: TCP2: Telnet received WILL NEW-ENVIRON (39)
        000474: Jun 3 13:54:09.330: TCP2: Telnet sent DONT NEW-ENVIRON (39) (unimplemented)
        000475: Jun 3 13:54:09.330: TCP2: Telnet received DO STATUS (5)
        000476: Jun 3 13:54:09.330: TCP2: Telnet sent WONT STATUS (5) (unimplemented)
        000477: Jun 3 13:54:09.330: TCP2: Telnet received WILL X-DISPLAY (35) (refused)
        000478: Jun 3 13:54:09.330: TCP2: Telnet sent DONT X-DISPLAY (35)
        000479: Jun 3 13:54:09.330: TCP2: Telnet received DO ECHO (1)
        000480: Jun 3 13:54:09.330: Telnet2: recv SB NAWS 116 29
        000481: Jun 3 13:54:09.623: Telnet2: recv SB 36 92 OS^K'zAuk,Fz90X
        000482: Jun 3 13:54:09.623: Telnet2: recv SB 36 0 ^CCISCO_KITS^Ap
请注意该服务在最后一行接收到的CISCO_KITS选项，这是一个非常重要的字符串。
**思科的漏洞报告**
思科公司于2017年3月17日[公布](https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20170317-cmp)了其交换机中存在的这个漏洞。这份报告是基于Vault 7中的文档：
Cisco IOS和Cisco IOS
XE软件中的思科集群管理协议（CMP）处理代码中的漏洞可能允许未经身份验证的远程攻击者重新加载受影响的设备，或者远程执行具有更高权限的代码。
在撰写本文时，除了下段文字之外，仍然没有更多的细节可用：
集群管理协议在内部使用Telnet作为集群成员之间的信令和命令协议。这个漏洞是由于两个因素共同导致的：
没有将与CMP有关的Telnet选项限制在集群成员之间的内部本地通信中，而是接受和处理通过任何与受影响设备的Telnet连接发送的此类选项，与此同时，也没有正确处理畸形的与CMP有关的Telnet选项。
长话短说，该漏洞允许攻击者利用telnet服务在目标交换机上远程执行代码。但为了应用这个报告，我需要更多的信息。所以我决定深入研究一下思科集群管理协议。
**交换机群集**
好吧！我搞了两个Catalyst
2960交换机来研究这个漏洞。集群技术会将交换机设置为主从关系。主交换机能够在从交换机上获得特权命令shell。正如Cisco在其报告中所提到的那样，telnet被用作集群成员之间的命令协议。有关群集的信息可以在这里找到，这里是一个设置群集环境的例子。
现在，我们来考察一下集群成员之间的通信。以下是主交换机的配置：
    cluster enable CLGRP 0
    cluster member 1 mac-address xxxx.xxxx.xxxx
这会把附近的交换机添加为集群的从交换机。rcommand 允许从主交换机的接口上获得从设备的命令接口。这符合设计预期。
    catalyst1>rcommand 1
    catalyst2>who
        Line       User       Host(s)              Idle       Location
    *  1 vty 0                idle                 00:00:00 10.10.10.10
      Interface      User        Mode                     Idle     Peer Address
我们来看看rcommand生成的流量：
嘿! telnet流量能干啥？ 报告明确指出：
集群管理协议在内部使用Telnet作为集群成员之间的信令和命令协议。
不错，实际上运行show version可以看到更多的流量：
    catalyst2>show version
    Cisco IOS Software, C2960 Software (C2960-LANBASEK9-M), Version 12.2(55)SE1, RELEASE SOFTWARE (fc1)
阿哈！Telnet流量实际上被封装在第2层的LLC数据包中。如果仔细观察的话，在源和目的地字段中就会注意到带有MAC地址的IP数据包。在这些“IP”数据包之内，含有telnet会话的有效TCP帧。
telnet会话通常出现在telnet选项磋商之前，其中包括：终端大小、终端类型等信息。要想了解更多信息，请参考RFC。
在提交catalyst2>消息之前，会向服务器端一个telnet选项：
在这里，您可以看到从主交换机发送到从交换机的telnet选项“CISCO_KITS”。在执行漏洞利用代码期间出现的这个字符串，同样出现在Vault
7文档中，并且一模一样。接下来，我们将深入考察交换机的内部原理。
**搞定固件**
固件位于交换机的flash:.bin中。
    catalyst2#dir flash:
    Directory of flash:/
        2  -rwx     9771282   Mar 1 1993 00:13:28 +00:00  c2960-lanbasek9-mz.122-55.SE1.bin
        3  -rwx        2487   Mar 1 1993 00:01:53 +00:00  config.text
内置的ftp客户端允许将此固件传输至任意ftp服务器。好，现在我们就借助binwalk来分析和提取该文件的内容：
    $ binwalk -e c2960-lanbasek9-mz.122-55.SE1.bin 
    DECIMAL       HEXADECIMAL     DESCRIPTION
    --------------------------------------------------------------------------------    112           0x70            bzip2 compressed data, block size = 900k
为了便于对获取的二进制数进行静态分析，我们最好找到固件加载的偏移量。实际上，在引导过程中，该偏移量将打印输出到串行控制台中：
    Loading "flash:c2960-lanbasek9-mz.122-55.SE1.bin"...@@@@@@@@@@@@@@@@@@@@@@
    File "flash:c2960-lanbasek9-mz.122-55.SE1.bin" uncompressed and installed,
    entry point: 0x3000
    executing...