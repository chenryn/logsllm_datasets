### Information from the DISPLAY CONN Command

The `DISPLAY CONN` command provides detailed information about applications connected to a queue manager. It also helps in diagnosing long-running units of work. You can periodically collect this information to identify and investigate any long-running units of work, and then display detailed information about the specific connection.

### Diagnostic Aids for CICS

#### CICS Diagnostic Transactions
CICS diagnostic transactions can be used to display information about queue manager tasks and MQI (Message Queue Interface) calls. These tools are useful for investigating and troubleshooting issues related to these facilities.

- **CKQC Transaction**: The CKQC transaction, part of the CICS adapter control panels, displays information about queue manager tasks, including their current state (e.g., a GET WAIT). For more details, refer to the "Administering IBM MQ for z/OS" documentation.

#### Application Development Environment
The application development environment for CICS is consistent with that of any other CICS application. Therefore, you can use any standard tools in this environment to develop IBM MQ applications. Specifically, the CICS Execution Diagnostic Facility (CEDF) captures entry and exit points for each MQI call, as well as calls to all CICS API services. Examples of CEDF output for MQI calls are provided in the following sections.

#### CICS Adapter Trace Entries
The CICS adapter writes trace entries to the CICS trace. These entries are described in detail in the "CICS adapter trace entries" section on page 403.

#### Additional Trace and Dump Data
Additional trace and dump data is available from the CICS region. These entries are documented in the CICS Problem Determination Guide.

### Examples of CEDF Output from MQI Calls

#### Example CEDF Output for the MQOPEN Call

**Parameters for the MQOPEN Call:**
- **ARG 000**: Connection handle
- **ARG 001**: Object descriptor
- **ARG 002**: Options
- **ARG 003**: Object handle
- **ARG 004**: Completion code
- **ARG 005**: Reason code

**Example CEDF Output (Hexadecimal):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000010000000200004044') AT X'05ECAFD8'
001: ARG 001 (X'D6C440400000000100000001C3C5C4C6') AT X'00144910'
001: ARG 002 (X'00000072000000000000000000000000') AT X'001445E8'
001: ARG 003 (X'00000000000000720000000000000000') AT X'001445E4'
001: ARG 004 (X'00000000000000000000000000000000') AT X'001445EC'
001: ARG 005 (X'00000000000000000000000000000000') AT X'001445F0'
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000010000000200004044') AT X'05ECAFD8'
001: ARG 001 (X'D6C440400000000100000001C3C5C4C6') AT X'00144910'
001: ARG 002 (X'00000072000000000000000000000000') AT X'001445E8'
001: ARG 003 (X'00000001000000720000000000000000') AT X'001445E4'
001: ARG 004 (X'00000000000000000000000000000000') AT X'001445EC'
001: ARG 005 (X'00000000000000000000000000000000') AT X'001445F0'
```

**Example CEDF Output (Character):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('.............. .')
001: ARG 001 ('OD ........CEDF')
001: ARG 002 ('................')
001: ARG 003 ('................')
001: ARG 004 ('................')
001: ARG 005 ('................')
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('.............. .')
001: ARG 001 ('OD ........CEDF')
001: ARG 002 ('................')
001: ARG 003 ('................')
001: ARG 004 ('................')
001: ARG 005 ('................')
```

#### Example CEDF Output for the MQCLOSE Call

**Parameters for the MQCLOSE Call:**
- **ARG 000**: Connection handle
- **ARG 001**: Object handle
- **ARG 002**: Options
- **ARG 003**: Completion code
- **ARG 004**: Reason code

**Example CEDF Output (Hexadecimal):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000010000007200000000') AT X'001445E0'
001: ARG 001 (X'00000001000000720000000000000000') AT X'001445E4'
001: ARG 002 (X'00000000000000010000000200004044') AT X'05ECAFD8'
001: ARG 003 (X'00000000000000000000000800000008') AT X'001445EC'
001: ARG 004 (X'00000000000000080000000800000060') AT X'001445F0'
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000000000007200000000') AT X'001445E0'
001: ARG 001 (X'00000000000000720000000000000000') AT X'001445E4'
001: ARG 002 (X'00000000000000010000000200004044') AT X'05ECAFD8'
001: ARG 003 (X'00000000000000000000000800000008') AT X'001445EC'
001: ARG 004 (X'00000000000000080000000800000060') AT X'001445F0'
```

**Example CEDF Output (Character):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('................')
001: ARG 001 ('................')
001: ARG 002 ('.............. .')
001: ARG 003 ('................')
001: ARG 004 ('...............-')
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('................')
001: ARG 001 ('................')
001: ARG 002 ('.............. .')
001: ARG 003 ('................')
001: ARG 004 ('...............-')
```

#### Example CEDF Output for the MQPUT Call

**Parameters for the MQPUT Call:**
- **ARG 000**: Connection handle
- **ARG 001**: Object handle
- **ARG 002**: Message descriptor
- **ARG 003**: Put message options
- **ARG 004**: Buffer length
- **ARG 005**: Message data
- **ARG 006**: Completion code
- **ARG 007**: Reason code

**Example CEDF Output (Hexadecimal):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000010000007200000000') AT X'001445E0'
001: ARG 001 (X'00000001000000720000000000000000') AT X'001445E4'
001: ARG 002 (X'D4C44040000000010000000000000008') AT X'001449B8'
001: ARG 003 (X'D7D4D640000000010000002400000000') AT X'00144B48'
001: ARG 004 (X'00000008000000000000000000040000') AT X'001445F4'
001: ARG 005 (X'5C5CC8C5D3D3D640E6D6D9D3C45C5C5C') AT X'00144BF8'
001: ARG 006 (X'00000000000000000000000800000000') AT X'001445EC'
001: ARG 007 (X'00000000000000080000000000000000') AT X'001445F0'
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000010000007200000000') AT X'001445E0'
001: ARG 001 (X'00000001000000720000000000000000') AT X'001445E4'
001: ARG 002 (X'D4C44040000000010000000000000008') AT X'001449B8'
001: ARG 003 (X'D7D4D640000000010000002400000000') AT X'00144B48'
001: ARG 004 (X'00000008000000000000000000040000') AT X'001445F4'
001: ARG 005 (X'5C5CC8C5D3D3D640E6D6D9D3C45C5C5C') AT X'00144BF8'
001: ARG 006 (X'00000000000000000000000800000000') AT X'001445EC'
001: ARG 007 (X'00000000000000080000000000000000') AT X'001445F0'
```

**Example CEDF Output (Character):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('................')
001: ARG 001 ('................')
001: ARG 002 ('MD ............')
001: ARG 003 ('PMO ............')
001: ARG 004 ('................')
001: ARG 005 ('**HELLO WORLD***')
001: ARG 006 ('................')
001: ARG 007 ('................')
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('................')
001: ARG 001 ('................')
001: ARG 002 ('MD ............')
001: ARG 003 ('PMO ............')
001: ARG 004 ('................')
001: ARG 005 ('**HELLO WORLD***')
001: ARG 006 ('................')
001: ARG 007 ('................')
```

#### Example CEDF Output for the MQPUT1 Call

**Parameters for the MQPUT1 Call:**
- **ARG 000**: Connection handle
- **ARG 001**: Object descriptor
- **ARG 002**: Message descriptor
- **ARG 003**: Put message options
- **ARG 004**: Buffer length
- **ARG 005**: Message data
- **ARG 006**: Completion code
- **ARG 007**: Reason code

**Example CEDF Output (Hexadecimal):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000000000007200000000') AT X'001445E0'
001: ARG 001 (X'D6C440400000000100000001C3C5C4C6') AT X'00144910'
001: ARG 002 (X'D4C44040000000010000000000000008') AT X'001449B8'
001: ARG 003 (X'D7D4D640000000010000002400000000') AT X'00144B48'
001: ARG 004 (X'00000008000000080000006000040000') AT X'001445F4'
001: ARG 005 (X'5C5CC8C5D3D3D640E6D6D9D3C45C5C5C') AT X'00144BF8'
001: ARG 006 (X'00000000000000000000000800000008') AT X'001445EC'
001: ARG 007 (X'00000000000000080000000800000060') AT X'001445F0'
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000000000007200000000') AT X'001445E0'
001: ARG 001 (X'D6C440400000000100000001C3C5C4C6') AT X'00144910'
001: ARG 002 (X'D4C44040000000010000000000000008') AT X'001449B8'
001: ARG 003 (X'D7D4D640000000010000002400000000') AT X'00144B48'
001: ARG 004 (X'00000008000000080000006000040000') AT X'001445F4'
001: ARG 005 (X'5C5CC8C5D3D3D640E6D6D9D3C45C5C5C') AT X'00144BF8'
001: ARG 006 (X'00000000000000000000000800000008') AT X'001445EC'
001: ARG 007 (X'00000000000000080000000800000060') AT X'001445F0'
```

**Example CEDF Output (Character):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('................')
001: ARG 001 ('OD ........CEDF')
001: ARG 002 ('MD ............')
001: ARG 003 ('PMO ............')
001: ARG 004 ('...........-....')
001: ARG 005 ('**HELLO WORLD***')
001: ARG 006 ('................')
001: ARG 007 ('...............-')
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('................')
001: ARG 001 ('OD ........CEDF')
001: ARG 002 ('MD ............')
001: ARG 003 ('PMO ............')
001: ARG 004 ('...........-....')
001: ARG 005 ('**HELLO WORLD***')
001: ARG 006 ('................')
001: ARG 007 ('...............-')
```

#### Example CEDF Output for the MQGET Call

**Parameters for the MQGET Call:**
- **ARG 000**: Connection handle
- **ARG 001**: Object handle
- **ARG 002**: Message descriptor
- **ARG 003**: Get message options
- **ARG 004**: Buffer length
- **ARG 005**: Message buffer
- **ARG 006**: Message length
- **ARG 007**: Completion code
- **ARG 008**: Reason code

**Example CEDF Output (Hexadecimal):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000010000007200000000') AT X'001445E0'
001: ARG 001 (X'00000001000000720000000000000000') AT X'001445E4'
001: ARG 002 (X'D4C44040000000010000000000000000') AT X'001449B8'
001: ARG 003 (X'C7D4D6400000000100004044FFFFFFFF') AT X'00144B00'
001: ARG 004 (X'00000008000000000000000000040000') AT X'001445F4'
001: ARG 005 (X'00000000000000000000000000000000') AT X'00144C00'
001: ARG 006 (X'00000000000000000004000000000000') AT X'001445F8'
001: ARG 007 (X'00000000000000000000000800000000') AT X'001445EC'
001: ARG 008 (X'00000000000000080000000000000000') AT X'001445F0'
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 (X'00000000000000010000007200000000') AT X'001445E0'
001: ARG 001 (X'00000001000000720000000000000000') AT X'001445E4'
001: ARG 002 (X'D4C44040000000010000000000000008') AT X'001449B8'
001: ARG 003 (X'C7D4D6400000000100004044FFFFFFFF') AT X'00144B00'
001: ARG 004 (X'00000008000000080000000000040000') AT X'001445F4'
001: ARG 005 (X'5C5CC8C5D3D3D640E6D6D9D3C45C5C5C') AT X'00144C00'
001: ARG 006 (X'00000008000000000004000000000000') AT X'001445F8'
001: ARG 007 (X'00000000000000000000000800000008') AT X'001445EC'
001: ARG 008 (X'00000000000000080000000800000000') AT X'001445F0'
```

**Example CEDF Output (Character):**

**Entry:**
```
STATUS: ABOUT TO EXECUTE COMMAND
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('................')
001: ARG 001 ('................')
001: ARG 002 ('MD ............')
001: ARG 003 ('GMO ...... .....')
001: ARG 004 ('................')
001: ARG 005 ('................')
001: ARG 006 ('................')
001: ARG 007 ('................')
001: ARG 008 ('................')
```

**Exit:**
```
STATUS: COMMAND EXECUTION COMPLETE
CALL TO RESOURCE MANAGER MQM
001: ARG 000 ('................')
001: ARG 001 ('................')
001: ARG 002 ('MD ............')
001: ARG 003 ('GMO ...... .....')
001: ARG 004 ('................')
001: ARG 005 ('**HELLO WORLD***')
001: ARG 006 ('................')
001: ARG 007 ('................')
001: ARG 008 ('................')
```

### Related References
- **MQOPEN - Open object**
- **MQCLOSE - Close object**
- **MQPUT - Put message**
- **MQPUT1 - Put one message**
- **MQGET - Get message**

For more detailed information, refer to the IBM MQ documentation and the CICS Problem Determination Guide.