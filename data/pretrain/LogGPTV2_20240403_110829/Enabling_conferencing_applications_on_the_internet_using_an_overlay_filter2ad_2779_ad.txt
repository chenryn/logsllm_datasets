### Primary Set Bandwidth Analysis
**Figure 10: Mean Bandwidth vs. Rank at 2.4 Mbps Source Rate for the Extended Set of Machines**

### Extended Set Bandwidth and Latency Analysis
From the perspective of Round-Trip Time (RTT), we observe that the Bandwidth-Latency scheme performs almost indistinguishably from the Latency-Only scheme, and both achieve performance reasonably close to Sequential Unicast. However, more surprisingly, the Prop-Delay-Only scheme results in RTTs at least 100 ms higher than Bandwidth-Latency for machines with lower ranks, leading to poor performance even in the RTT metric. This is because delays in the Internet often arise due to congestion, and optimizing solely for propagation delay does not necessarily optimize the latencies experienced by the application. This observation is particularly significant in our environment, where many hosts are behind 10 Mbps connections, and poorly constructed overlays could cause congestion near a host.

While we used conservative pre-configured degree bounds as recommended in [2, 3, 6], this strategy is not capable of handling dynamic cross-traffic. In contrast, the dynamic nature of Bandwidth-Latency and Latency-Only enables them to perform better in such situations.

We also evaluated the Bandwidth-Only scheme in this environment. The bandwidth results were comparable to those of Bandwidth-Latency, but the RTT results were worse. Due to the poor performance of Prop-Delay-Only, our future evaluations will focus on Latency-Only when analyzing delay-based schemes.

### Extended Set at 2.4 Mbps Source Rate
Our results so far demonstrate that even in less heterogeneous environments like the Primary Set, good performance requires considering both bandwidth and latency metrics in overlay construction. To further emphasize the importance of these metrics, we consider extremely heterogeneous environments represented by the Extended Set. Figures 10 and 11 plot the bandwidth and RTT against host ranks for the four schemes of interest.

The Sequential Unicast curves show that there are several members with low bandwidth and high latencies from the source, indicating the heterogeneity in the set we consider. Even in such a heterogeneous setting, Bandwidth-Latency achieves performance close to Sequential Unicast. Apart from the less well-connected hosts (ranks 1–5), all other members achieve bandwidths of at least 1.8 Mbps and see RTTs of less than 250 ms on average. For ranks 1–5, Bandwidth-Latency exploits Internet routing pathologies and provides better performance than Sequential Unicast. A striking example was two machines in Taiwan, where only one had good performance to machines in North America. In our runs, the machine with poorer performance achieved significantly better performance by connecting to the other machine in Taiwan.

Next, we observe that Bandwidth-Only results in high RTT, while Latency-Only performs poorly in bandwidth. For example, for machines of rank 7, Bandwidth-Latency can sustain throughputs almost 800 Kbps more than Latency-Only and can achieve RTTs more than 100 ms lower than Bandwidth-Only. Further, Bandwidth-Latency has smaller standard deviations, indicating that the overlays it produces consistently attain good performance in both bandwidth and latency. Finally, Bandwidth-Latency provides equivalent performance to Bandwidth-Only in bandwidth and to Latency-Only in RTT, indicating that optimizing for multiple metrics does not compromise performance with respect to any single metric.

### Summary of Comparison Results
- Our techniques enable the construction of efficient overlays optimized for both bandwidth and latency, as required by conferencing applications. Even in extremely heterogeneous environments, Bandwidth-Latency has performance comparable to Sequential Unicast and sometimes performs better by exploiting Internet pathologies.
- Random overlays do not perform well even in settings with a small amount of heterogeneity.
- Overlays that adapt to simple static metrics like propagation delay perform poorly in both bandwidth and latency. This is because schemes that use only static metrics fail to detect and react to network congestion, resulting in larger queuing delays and higher packet loss.
- Overlays that adapt to latency alone cannot provide good bandwidth performance, especially at higher source rates. Conversely, overlays that adapt to bandwidth alone cannot provide good latencies. These results indicate that latency and bandwidth are not strongly correlated on the Internet, and it is critical to consider both metrics to construct overlays optimized for conferencing applications.

### Network Level Metrics
Table 1 compares the mean normalized resource usage (Section 5.3) of the overlay trees produced by various schemes for different environments and source rates. The values are normalized with respect to the resource usage with native IP Multicast support, determined as explained in Section 5.3. Thus, we aim for the normalized resource usage to be as small as possible, with a value of 1.00 representing an overlay tree that has the same resource usage as IP Multicast. Given that the trees constructed by self-organizing protocols can change over time, we consider the final tree produced at the end of an experiment. However, we observe that the overlays produced by these schemes are reasonably stable after about four minutes.

Several observations can be made from Table 1:
1. Naive degenerated unicast trees, which have all recipients rooted at the source, and schemes such as Random that do not explicitly exploit network information, have high resource usage.
2. Protocols that adapt to bandwidth alone (Bandwidth-Only) make less efficient use of network resources compared to protocols such as Bandwidth-Latency and Latency-Only, which consider delay-based metrics.
3. The resource usage with Bandwidth-Latency is slightly higher than Latency-Only, reflecting the cost of adapting to better bandwidth paths.
4. The resource usage with Bandwidth-Latency increases with source rate (in the Primary Set). This is because it favors higher bandwidth paths over lower delay paths at higher source rates.

We also determined the resource usage of Min-Span, the minimum spanning tree of the complete graph of all members, computed by estimating the delays of all links of the complete graph. Minimum spanning trees are known to be optimal with respect to resource usage, and as Table 1 shows, they have lower resource usage than IP Multicast. This indicates that an End System Multicast architecture can indeed make as efficient, if not better, use of network resources than IP Multicast. However, while minimum spanning trees are efficient from the network perspective, it is not clear that they are efficient from the application perspective.

### Protocol Overhead
Table 2 summarizes the protocol overhead (Section 5.3) involved in Bandwidth-Latency, along with a breakdown of the main factors contributing to the overhead. We find that the average overhead is between 10% to 15% across all settings. This indicates that even simple heuristics can keep the overall overhead low. More than 90% of the overhead is due to members probing each other for bandwidth. Other sources of overhead contribute just 3–7% of the overhead, including the exchange of routing messages between neighbors, group management algorithms to keep the overlay connected, and probes to determine the delay and routing state of remote members. This confirms our intuition that techniques for lowering protocol overhead must focus on reducing the costs of bandwidth probes.

An analysis of our logs reveals that the simple heuristics introduced in Section 4.2 can reduce around 50% of possible bandwidth probes between pairs of members over a 20-minute period. In experiments with the Extended Set, there are no bandwidth probes to the member behind the ADSL connections. Additionally, there are very few probes from a machine in North America to hosts in Asia and Europe. While the results are encouraging, overhead due to active bandwidth measurements can be a concern as one considers larger-sized groups. We present some of our ideas for tackling this in Section 8.

### Adapting to Network Dynamics
Section 6 has shown that it is important to adapt to dynamic metrics such as bandwidth and latency while constructing overlays optimized for conferencing applications. When network congestion occurs, overlays need to adapt by making appropriate topology changes in a timely fashion to ensure good and stable application performance. In this section, we evaluate how quickly our protocol can adapt to changes in network conditions and study the factors that contribute to adaptation times.

To study these issues, we design a set of experiments on the Internet where we artificially introduce network congestion on selected links in the overlay tree and evaluate how our system responds to these congestion signals. Our study is conducted using our Bandwidth-Latency overlay scheme.