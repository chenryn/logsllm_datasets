then read back to the process. Tracking such data propagation
would be challenging.
Figure 2(b) demonstrates an example where the value of
argv[1] determines whether a logic bomb can be triggered.
However, argv[1] is propagated via a ﬁle in a covert way.
Failure in handling the challenge incurs Es2.
3) Parallel Program: Traditional data-ﬂow analysis ap-
proaches generally cannot handle concurrent programs. Data
propagation among threads may have many possibilities, and
modeling such data-ﬂow is very expensive.
Figure 2(d) demonstrates a parallel program which imple-
ments two threads. The symbolic value from the main thread
is processed in another thread with a self-incremental function.
Then the symbolic value is evaluated against the condition for
trigger the bomb path. If a concolic execution tool does not
support concurrent programs, it may raise Es2 and generate a
wrong test case for triggering the bomb.
4) Symbolic Array: When symbolic values serve as pointers
or offsets to access data in memory, challenges arise for
generating constraint models. An effective constraint model
should include all the data within the memory region so that
a solver can infer which data satisﬁes the model. Otherwise,
Es3 occurs.
Figure 2(c) demonstrates an example with a one-level
symbolic array. To execute the bomb path, 6 should be
assigned to the argv[1] as an array index.
5) Contextual Symbolic Value: Symbolic values can be
used as parameters for retrieving data from the environment
(e.g., disk). The challenge is similar to symbolic array and is
more complex.
Figure 2(e) shows such an example. If argv[1] points to
a ﬁle that can be opened by the program, the bomb would
get triggered. However, it is difﬁcult for concolic executors to
interpret the semantic and to know which ﬁle exists on disk.
6) Symbolic Jump: After each round of concrete execu-
tion, the instructions which indicate branches with symbolic
conditions should be extracted, so that the constraint models
can be generated respectively. However, such branches can be
performed in covert ways. For example, we may use symbolic
values as the offset of an unconditional jump. Theoretically,
we may assign different values so that the program can jump
to any address within the program. In this way, symbolic jump
acts similarly as a conditional jump.
Figure 2(f) demonstrates a code snippet where the symbolic
value determines the target address of the unconditional jump.
To trigger the bomb, we may simply assign 7 to argv[1].
Failure in handling symbolic jump incurs Es3.
7) Floating-point Number: When the symbolic conditions
involve ﬂoating-point numbers, errors may occur. A ﬂoating-
point number (f ∈ F) approximates a real number (r ∈ R)
with a ﬁxed number of digits in the form of f = signif icand∗
exp. The representation is essential for computers, as the
base
memory spaces are limited in comparison with the inﬁnity
of R. As a tradeoff, ﬂoating-point numbers have only limited
precision, which causes some unsatisﬁable constraints over R
can be satisﬁed over F with a rounding mode.
Figure 2(g) demonstrates such an example. The conditional
expression 1024 + x = 1024 && x > 0 has no solutions for
x over R, but it has solutions over F, such as 0.00001.
C. Scalability Challenges
Small-size programs may also lead to path explosions.
The essential idea is that small-size programs can have high
complexity. This can be achieved in two ways: extensively
using external function calls, or using a crypto function that
has high complexity. We discuss the two challenges in bellow.
1) External Function Call: Shared libraries, such as libc
and libm (i.e., a math library), have been widely used in
binaries. They provide some basic function implementations
to facilitate software development. External functions become
the augmented part of a program once being called, and they
enlarge the code complexity in nature.
184
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:00:37 UTC from IEEE Xplore.  Restrictions apply. 
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:143)(cid:131)(cid:139)(cid:144)(cid:4666)(cid:139)(cid:144)(cid:150)(cid:3)(cid:131)(cid:148)(cid:137)(cid:133)(cid:481)(cid:3)(cid:133)(cid:138)(cid:131)(cid:148)(cid:3)(cid:535)(cid:535)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4667)
(cid:4668)
(cid:149)(cid:150)(cid:148)(cid:151)(cid:133)(cid:150) (cid:150)(cid:139)(cid:143)(cid:135)(cid:152)(cid:131)(cid:142) (cid:150)(cid:152)(cid:482)
(cid:137)(cid:135)(cid:150)(cid:150)(cid:139)(cid:143)(cid:135)(cid:145)(cid:136)(cid:134)(cid:131)(cid:155) (cid:4666)(cid:428)(cid:150)(cid:152)(cid:481)(cid:3)(cid:17)(cid:24)(cid:15)(cid:15)(cid:4667)(cid:482)
(cid:139)(cid:136)(cid:3)(cid:4666)(cid:150)(cid:152)(cid:484)(cid:150)(cid:152)(cid:820)(cid:149)(cid:135)(cid:133) (cid:3404)(cid:3404)(cid:3)(cid:884)(cid:887)(cid:884)(cid:886)(cid:888)(cid:882)(cid:890)(cid:882)(cid:882)(cid:882)(cid:4667)
(cid:5)(cid:145)(cid:143)(cid:132)(cid:4666)(cid:4667)(cid:482)
(cid:135)(cid:142)(cid:149)(cid:135)
(cid:9)(cid:145)(cid:145)(cid:132)(cid:131)(cid:148)(cid:4666)(cid:4667)(cid:482)
(cid:4669)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:143)(cid:131)(cid:139)(cid:144)(cid:4666)(cid:139)(cid:144)(cid:150)(cid:3)(cid:131)(cid:148)(cid:137)(cid:133)(cid:481)(cid:3)(cid:133)(cid:138)(cid:131)(cid:148)(cid:535)(cid:535)(cid:3)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:140)(cid:481)(cid:139)(cid:3404)(cid:131)(cid:150)(cid:145)(cid:139)(cid:4666)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4670)(cid:883)(cid:4671)(cid:4667)(cid:482)(cid:3)
(cid:133)(cid:138)(cid:131)(cid:148)(cid:3)(cid:136)(cid:139)(cid:142)(cid:135)(cid:4670)(cid:4671)(cid:3)(cid:3404)(cid:3)(cid:822)(cid:150)(cid:143)(cid:146)(cid:484)(cid:133)(cid:145)(cid:152)(cid:146)(cid:148)(cid:145)(cid:822)(cid:482)
(cid:133)(cid:138)(cid:131)(cid:148)(cid:3)(cid:133)(cid:143)(cid:134)(cid:4670)(cid:884)(cid:887)(cid:888)(cid:4671)(cid:482)
(cid:149)(cid:146)(cid:148)(cid:139)(cid:144)(cid:150)(cid:136)(cid:4666)(cid:133)(cid:143)(cid:134)(cid:481)(cid:3)(cid:822)(cid:135)(cid:133)(cid:138)(cid:145)(cid:3)(cid:936)(cid:134)(cid:3)(cid:3408)(cid:3)(cid:936)(cid:149)(cid:819)(cid:144)(cid:822)(cid:481)(cid:3)(cid:139)(cid:481)(cid:3)(cid:136)(cid:139)(cid:142)(cid:135)(cid:4667)(cid:482)(cid:3)
(cid:149)(cid:155)(cid:149)(cid:150)(cid:135)(cid:143)(cid:4666)(cid:133)(cid:143)(cid:134)(cid:4667)(cid:482)
(cid:9)(cid:12)(cid:15)(cid:8)(cid:3)(cid:535)(cid:136)(cid:146) (cid:3404)(cid:3)(cid:136)(cid:145)(cid:146)(cid:135)(cid:144)(cid:4666)(cid:136)(cid:139)(cid:142)(cid:135)(cid:481)(cid:3)(cid:822)(cid:148)(cid:822)(cid:4667)(cid:482)
(cid:136)(cid:149)(cid:133)(cid:131)(cid:144)(cid:136)(cid:4666)(cid:136)(cid:146)(cid:481)(cid:822)(cid:936)(cid:134)(cid:822)(cid:481)(cid:428)(cid:140)(cid:4667)(cid:482)
(cid:136)(cid:133)(cid:142)(cid:145)(cid:149)(cid:135)(cid:4666)(cid:136)(cid:146)(cid:4667)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:140)(cid:3)(cid:3404)(cid:3404)(cid:3)(cid:889)(cid:4667)(cid:4668)
(cid:5)(cid:145)(cid:143)(cid:132)(cid:4666)(cid:4667)(cid:482)
(cid:4669)(cid:3)(cid:135)(cid:142)(cid:149)(cid:135)(cid:4668)
(cid:9)(cid:145)(cid:145)(cid:132)(cid:131)(cid:148)(cid:4666)(cid:4667)(cid:482)
(cid:4669)
(cid:148)(cid:135)(cid:143)(cid:145)(cid:152)(cid:135)(cid:4666)(cid:136)(cid:139)(cid:142)(cid:135)(cid:4667)(cid:482)
(cid:883)(cid:882)
(cid:883)(cid:883)
(cid:883)(cid:884)
(cid:883)(cid:885)
(cid:883)(cid:886)
(cid:883)(cid:887)
(cid:883)(cid:888)
(cid:4669)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:143)(cid:131)(cid:139)(cid:144)(cid:4666)(cid:139)(cid:144)(cid:150)(cid:3)(cid:131)(cid:148)(cid:137)(cid:133)(cid:481)(cid:3)(cid:133)(cid:138)(cid:131)(cid:148)(cid:535)(cid:535)(cid:3)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:131)(cid:148)(cid:155)(cid:4670)(cid:4671)(cid:3)(cid:3404)(cid:3)(cid:4668)(cid:883)(cid:481)(cid:884)(cid:481)(cid:885)(cid:481)(cid:886)(cid:481)(cid:887)(cid:481)(cid:888)(cid:481)(cid:889)(cid:481)(cid:890)(cid:481)(cid:891)(cid:481)(cid:882)(cid:4669)(cid:482)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:154)(cid:3)(cid:3404)(cid:3)(cid:131)(cid:150)(cid:145)(cid:139)(cid:4666)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4670)(cid:883)(cid:4671)(cid:4667)(cid:482)
(cid:139)(cid:136)(cid:4666)(cid:131)(cid:148)(cid:155)(cid:4670)(cid:154)(cid:4671)(cid:3)(cid:3404)(cid:3404)(cid:3)(cid:889)(cid:4667)(cid:4668)
(cid:5)(cid:145)(cid:143)(cid:132)(cid:4666)(cid:4667)(cid:482)
(cid:4669)
(cid:135)(cid:142)(cid:149)(cid:135)
(cid:9)(cid:145)(cid:145)(cid:132)(cid:131)(cid:148)(cid:4666)(cid:4667)(cid:482)
(cid:4669)
(a) Symbolic variable declaration.
(b) Covert Symbolic propagation.
(c) Symbolic array.
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:152)(cid:145)(cid:139)(cid:134)(cid:535)(cid:3)(cid:12)(cid:144)(cid:133)(cid:4666)(cid:152)(cid:145)(cid:139)(cid:134)(cid:535)(cid:3)(cid:139)(cid:4667)(cid:4668)
(cid:3397)(cid:3397)(cid:3)(cid:535)(cid:4666)(cid:4666)(cid:139)(cid:144)(cid:150)(cid:535)(cid:4667)(cid:3)(cid:139)(cid:4667)(cid:482)
(cid:4669)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:143)(cid:131)(cid:139)(cid:144)(cid:4666)(cid:139)(cid:144)(cid:150)(cid:3)(cid:131)(cid:148)(cid:137)(cid:133)(cid:481)(cid:3)(cid:133)(cid:138)(cid:131)(cid:148)(cid:535)(cid:535)(cid:3)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4667)(cid:4668)
(cid:146)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:820)(cid:150) (cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:482)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:139) (cid:3404)(cid:3)(cid:131)(cid:150)(cid:145)(cid:139)(cid:4666)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4670)(cid:883)(cid:4671)(cid:4667)(cid:482)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:148)(cid:133) (cid:3404)(cid:3)(cid:146)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:820)(cid:133)(cid:148)(cid:135)(cid:131)(cid:150)(cid:135)(cid:4666)(cid:428)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:481)(cid:3)
(cid:17)(cid:24)(cid:15)(cid:15)(cid:481)(cid:3)(cid:12)(cid:144)(cid:133)(cid:481)(cid:3)(cid:4666)(cid:152)(cid:145)(cid:139)(cid:134)(cid:3)(cid:535)(cid:4667)(cid:3)(cid:428)(cid:139)(cid:4667)(cid:482)(cid:3)
(cid:883)(cid:882)
(cid:883)(cid:883)
(cid:883)(cid:884)
(cid:883)(cid:885)
(cid:883)(cid:886)
(cid:883)(cid:887)
(cid:148)(cid:133) (cid:3404)(cid:3)(cid:146)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:820)(cid:140)(cid:145)(cid:139)(cid:144)(cid:4666)(cid:150)(cid:138)(cid:148)(cid:135)(cid:131)(cid:134)(cid:481)(cid:3)(cid:17)(cid:24)(cid:15)(cid:15)(cid:4667)(cid:482)(cid:3)
(cid:139)(cid:136)(cid:4666)(cid:139) (cid:3404)(cid:3404)(cid:3)(cid:889)(cid:4667)(cid:4668)
(cid:5)(cid:145)(cid:143)(cid:132)(cid:4666)(cid:4667)(cid:482)
(cid:4669)
(cid:4669)
(cid:9)(cid:145)(cid:145)(cid:132)(cid:131)(cid:148)(cid:4666)(cid:4667)(cid:482)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:143)(cid:131)(cid:139)(cid:144)(cid:4666)(cid:139)(cid:144)(cid:150)(cid:3)(cid:131)(cid:148)(cid:137)(cid:133)(cid:481)(cid:3)(cid:133)(cid:138)(cid:131)(cid:148)(cid:535)(cid:535)(cid:3)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4667)(cid:3)(cid:4668)(cid:3)
(cid:9)(cid:12)(cid:15)(cid:8)(cid:3)(cid:535)(cid:136)(cid:146) (cid:3404)(cid:3)(cid:136)(cid:145)(cid:146)(cid:135)(cid:144) (cid:4666)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4670)(cid:883)(cid:4671)(cid:481)(cid:3)(cid:822)(cid:148)(cid:822)(cid:4667)(cid:482)
(cid:139)(cid:136)(cid:3)(cid:4666)(cid:136)(cid:146) (cid:488)(cid:3404)(cid:3)(cid:17)(cid:24)(cid:15)(cid:15)(cid:4667)(cid:3)(cid:4668)
(cid:5)(cid:145)(cid:143)(cid:132)(cid:4666)(cid:4667)(cid:482)
(cid:4669)(cid:3)(cid:3)(cid:135)(cid:142)(cid:149)(cid:135)(cid:4668)
(cid:9)(cid:145)(cid:145)(cid:132)(cid:131)(cid:148)(cid:4666)(cid:4667)(cid:482)
(cid:4669)
(cid:4669)
(cid:883)
(cid:884)
(cid:885)
(cid:886)
(cid:887)
(cid:888)
(cid:889)
(cid:890)
(cid:891)
(cid:851)(cid:134)(cid:135)(cid:136)(cid:139)(cid:144)(cid:135)(cid:3)(cid:140)(cid:143)(cid:146)(cid:4666)(cid:131)(cid:134)(cid:134)(cid:148)(cid:4667)(cid:3)(cid:131)(cid:149)(cid:143)(cid:4666)(cid:822)(cid:140)(cid:143)(cid:146) (cid:535)(cid:936)(cid:882)(cid:822)(cid:483)(cid:483)(cid:822)(cid:148)(cid:822)(cid:4666)(cid:131)(cid:134)(cid:134)(cid:148)(cid:4667)(cid:483)(cid:4667)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:143)(cid:131)(cid:139)(cid:144)(cid:4666)(cid:139)(cid:144)(cid:150)(cid:3)(cid:131)(cid:148)(cid:137)(cid:133)(cid:481)(cid:3)(cid:133)(cid:138)(cid:131)(cid:148)(cid:535)(cid:535)(cid:3)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4667)(cid:4668)
(cid:139)(cid:144)(cid:150)(cid:3)(cid:131)(cid:134)(cid:134)(cid:148) (cid:3404)(cid:3)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4670)(cid:882)(cid:4671)(cid:4670)(cid:882)(cid:4671)(cid:3)(cid:486) (cid:884)(cid:888)(cid:482)
(cid:131)(cid:134)(cid:134)(cid:148) (cid:3404)(cid:3)(cid:131)(cid:134)(cid:134)(cid:148) (cid:486) (cid:131)(cid:150)(cid:145)(cid:139)(cid:4666)(cid:131)(cid:148)(cid:137)(cid:152)(cid:4670)(cid:883)(cid:4671)(cid:4667)(cid:482)
(cid:136)(cid:142)(cid:131)(cid:137)(cid:820)(cid:882)(cid:483)
(cid:140)(cid:143)(cid:146)(cid:4666)(cid:428)(cid:428)(cid:136)(cid:142)(cid:131)(cid:137)(cid:820)(cid:882)(cid:3)(cid:3397)(cid:3)(cid:131)(cid:134)(cid:134)(cid:148)(cid:4667)(cid:482)
(cid:5)(cid:145)(cid:143)(cid:132)(cid:4666)(cid:4667)(cid:482)
(cid:9)(cid:145)(cid:145)(cid:132)(cid:131)(cid:148)(cid:4666)(cid:4667)(cid:482)