by a linear function, and is largely independent of the ap-
plication characteristics for the different platform and bench-
marks pairs we tested. However, the regression co-efﬁcients
are platform-speciﬁc, potentially indicating dependent on the
cooling infrastructure itself.
4
)
)
)
)
)
)
)
)
s
s
s
s
s
s
s
s
r
r
r
r
r
r
r
r
u
u
u
u
u
u
u
u
o
o
o
o
o
o
o
o
h
h
h
h
h
h
h
h
(
(
(
(
(
(
(
(
F
F
F
F
F
F
F
F
B
B
B
B
B
B
B
B
T
T
T
T
T
T
T
T
M
M
M
M
M
M
M
M
0
0
0
0
0
0
0
0
6
6
6
6
6
6
6
6
0
0
0
0
0
0
0
0
5
5
5
5
5
5
5
5
0
0
0
0
0
0
0
0
4
4
4
4
4
4
4
4
0
0
0
0
0
0
0
0
3
3
3
3
3
3
3
3
0
0
0
0
0
0
0
0
2
2
2
2
2
2
2
2
0
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
0
0
0
0
0
0
0
0
●
●
●
● Lower Bound
Upper Bound
Average
Arrhenius
0
0
0
0
0
0
0
0
10
10
10
10
10
10
10
10
20
20
20
20
20
20
20
20
30
30
30
30
30
30
30
30
40
40
40
40
40
40
40
40
50
50
50
50
50
50
50
50
60
60
60
60
60
60
60
60
Temperature (°C)
Temperature (°C)
Temperature (°C)
Temperature (°C)
Temperature (°C)
Temperature (°C)
Temperature (°C)
Temperature (°C)
Fig. 5: Temperature and MTBF data of top, middle, and
bottom cages on Titan. MTBF is calculated according to the
total number of failures across cabinets, while temperature is
calculated based on each individual cabinet.
B. Temperature Effects on MTBF
As discussed in the previous section, we relate power
capping and system reliability by understanding how power
capping affects temperature and then how temperature im-
pacts the MTBF of the system. Previous works have shown
the evidence that temperature can affect the overall system
reliability [25]–[29].
In this section, we establish how temperature affects the
MTBF of the system. For this purpose, we take advantage
of Arrhenius Equation [30], which has been shown to ﬁt
computing systems [31] deﬁning mean time between failure
(MTBF) dependence on temperature.
M T BF (Pi) = M T BFbase/FA(T EM P (Pi))
(4)
FA(x) is the acceleration factor under a given temperature x,
as deﬁned in Equation 5.
FA(x) = e
Ea
k
×(1/T EM Pbase−1/x)
(5)
k is Boltzmann constant which equals to 8.617 ×10−5 eV/°K.
Ea represents activation energy. Using the Titan supercom-
puter’s data, we demonstrate that this relationship holds true
in a large-scale HPC computing facility. Fig. 5 shows the
temperature and MTBF data for different levels on cages in
the cabinet for the Titan supercomputer. Each server cabinet in
Titan consists of three cages, top, middle, and bottom. Cold air
ﬂows from bottom cage to top cage, which creates a gradient
in ambient temperature. The temperature increases as we go
from bottom cage to the top cage and hence, lower cages tend
to have shorter MTBF. We set M T BFbase and T EM Pbase
as MTBF and average temperature of bottom cage. Then, we
calculate temperature for middle and top cages based on MTBF
of corresponding cage level using Equation 4. As shown in Fig.
5, temperature data for middle and top cages closely match
the ﬁeld data for the empirical value of activation energy,
Ea = 0.7eV . We also plot the variance in the temperature data
to show that it falls within the range and has similar trend.
This mathematical relationship can be used to model the
system’s reliability behavior and its impact on the optimal
checkpointing interval. However, it is important to note the
potential limitation and scope of this approach. We recognize
that power-capping alone may not be responsible for tempera-
ture of different computing components. The inefﬁciencies in
power/cooling infrastructure may cause temperature variability,
in addition to what may be caused by the power-capping alone.
Our approach doesn’t directly and explicitly model such vari-
ance caused by the power/cooling infrastructure itself. Focus
of this paper is to understand the impact of power-capping on
checkpointing decisions, although other environmental condi-
tions may also contribute toward such decision. We also note
that power/cooling infrastructure can not completely mitigate
the temperature’s impact on system MTBF without dynami-
cally changing the cooling infrastructure load. However, cur-
rent HPC facilities often do not react dynamically to load-
changes in order to adjust cooling resources. They are typically
designed for a ﬁxed load and therefore, power capping effect
on the temperature will exist in such systems. Therefore, it
is important to explicitly model and understand the power-
capping’s effect on checkpointing decisions, performance and
energy consumption. Finally, we also note that we do not
model the effect of variance in temperature on failures [29]
since the presence of such effects in the Titan supercomputer’s
failure and temperature logs was not statistically signiﬁcant.
Finding 3: The system MTBF decreases with increase
in temperature. The effect of temperature on the system MTBF
can be modeled by Arrhenius Equation. We also show that the
ﬁeld data obtained on Titan validates this relationship.
VI. POWER CAPPING EFFECTS ON THE OCI
TABLE III: Symbols and Deﬁnitions
Symbols
Pi
α
β, β(Pi)
γ
ǫ
T EM Pbase
M T T Fbase
T EM P (Pi)
FA(x)
Ttotal, Ttotal(Pi)
Tcomp, Tcomp(Pi)
Tchkp, Tchkp(Pi)
Twaste, Twaste(Pi)
Pcomp
Pchkp
Etotal, Etotal(Pi)
Ecomp, Ecomp(Pi)
Echkp, Echkp(Pi)
Ewaste, Ewaste(Pi)
T comp
waste, T comp
waste(Pi)
T chkp
waste, T chkp
waste(Pi)
Trestart, Trestart(Pi)
Deﬁnitions
power cap
checkpointing interval
time to take a checkpoint
time to restart from a failure
fraction of lost work
baseline temperature
baseline MTTF under T EM Pbase
temperature under power cap Pi
acceleration factor under temperature x
total execution time
total computation time
total time in taking checkpoints
total wasted time
computing power consumption
checkpointing power consumption
total energy consumption
total computation energy
total energy in taking checkpoints
total wasted energy
total wasted computation time
total wasted checkpoint time
total time in restarting
* Symbols with overlines have the same meanings as the ones
without overlines, except that they are under power cap Pi.
In section VI-A, ﬁrst, we revisit how the ﬁrst order model
calculates the OCI [10], as shown in Equations 6 to 11. Then
we introduce our power capping aware OCI model based on
the ﬁrst order model in section VI-B. In section VI-C, we
revisit the high order model [12] and develop our high order
power-aware OCI model using the same approach in ﬁrst order
model. Table III lists all the parameters used in the models.
5
A. First Order Model
According to the ﬁrst order model, when considering
checkpoint and restart, the total execution time is composed of
successful computation time, successful checkpoint time and
wasted time caused by failures, as shown in Eq. 6.
Ttotal = Tcomp + Tchkp + Twaste
(6)
Waste	
Time	
…	
Compute	&	
Checkpoint	
Failure	
Checkpoint	
Interval	
Restart	
Compute	
Checkpoint	
…	
Compute	
Checkpoint	
α	
β	
ε(α+β)	
γ	
Fig. 6: An example of computation, checkpoint, failure, and
restart. Computation is divided into multiple segments and a
checkpoint is taken at the end of each segment.
An example to illustrate computing, checkpoint, failure,
and restart is given in Fig. 6. Checkpointing interval is denoted
as α. Time to take a single checkpoint is denoted as β. ǫ
represents the fraction of lost computation and checkpoint. γ
is the time to restart from a failure. Total amount of time spent
in checkpointing can be expressed as Eq. 7.
Tchkp = (
Tcomp
α
− 1) × β
(7)
Time wasted due to failures consists of lost computation
(T comp
waste), and time spent in restart
process (Trestart), which can be expressed as Eq. 8.
waste), lost checkpoint (T chkp
Twaste = T comp
waste + T chkp
Tcomp
T comp
waste =
× (e
α+β
waste + Trestart
M T BF − 1)(ǫ × α)
T chkp
waste =
Trestart =
α
Tcomp
α
Tcomp
α
× (e
α+β
M T BF − 1)(ǫ × β)
(8)
× (e
α+β
M T BF − 1)(γ)
Based on Eq. 6, total energy consumption of the ﬁrst order
model is shown in Eq. 9.
Etotal =Pcomp × Tcomp + Pchkp × Tchkp
+ Pcomp × T comp
waste + Pchkp × (T chkp
waste + Trestart)
(9)
Replacing Tchkp and Twaste in Eq. 6 and Eq. 9, we can get
the expressions of total time (Ttotal) and energy consumption
(Etotal) in the ﬁrst order model.
The OCI optimized for execution time (αt) is achieved
when d
dα (Ttotal) = 0. Similarly, the OCI optimized for energy
consumption (αe) is achieved when d
dα (Etotal) = 0. When
α+β
M T BF −1 can be approximated
α+β ≪ M T BF , expression e
as α+β
M T BF . Solving the differential equations, we can get the
expressions for the OCI optimized for execution time (α−
t ) and
energy consumption (α−
e ) for the ﬁrst order model, which are
shown in Eq. 10 and Eq. 11 respectively. Note the superscript
“−” signiﬁes that OCI is from a power-unaware model.
α−
t =rβ2 +
β × γ
ǫ
+
M T BF × β
ǫ
(10)
6
α−
e =s Pchkp
Pcomp
× (β2 +
β × γ
ǫ
+
M T BF × β
ǫ
)
(11)
Finding 4: Even without applying power-capping, the
OCI optimized for energy can be smaller than the OCI opti-
mized for performance. The difference between these OCIs gets
larger as the ratio of power consumption during checkpointing
to power consumption during computing becomes smaller.
B. First Order Power-aware Model
Taking the ﬁrst order model described here as a baseline,
we propose a power-aware OCI model. The goal is to express
Ttotal and Etotal as functions of power cap Pi. Similar to
Equation 6 and 9, we can write the following equations for
execution time and energy consumption under a given power
cap Pi (i.e., Ttotal(Pi), Etotal(Pi)).
Ttotal(Pi) = Tcomp(Pi) + Tchkp(Pi) + Twaste(Pi)
(12)
Etotal(Pi) =Pi × Tcomp(Pi) + Pchkp × Tchkp(Pi)
+ Pi × T comp
waste(Pi)
+ Pchkp × (T chkp
waste(Pi) + Trestart(Pi))
(13)
Equations 7 and 8 are also applicable here if we replace Tcomp
by Tcomp(Pi) and M T BF by M T BF (Pi). According to Eq.
1, Tcomp can be expressed as functions of Pi (i.e., Tcomp(Pi)).
Also, based on Eq. 3, Eq. 4 and Eq. 5, MTBF can also be
expressed as a function of Pi (i.e., M T BF (Pi)). Note that β
is dominated by writing checkpoints to storage system, and
γ is dominated by reading checkpoints from storage system.
Since we ﬁnd in our experiments that time to write checkpoints
does not vary signiﬁcantly with power capping, as shown in
Eq. 2, it is reasonable to assume that time to read checkpoints
is also independent of power capping. Therefore, we assume
γ to be independent of power capping. After performing these
substitutions we can obtain detailed expressions for Ttotal(Pi)
and Etotal(Pi). We do not show them here due to space limit.
The OCI optimized for execution time (α+
t ) and op-
timized for energy consumption (α+
e ) are achieved when
d
dα (Ttotal(Pi)) = 0 and d
dα (Etotal(Pi)) = 0 respectively. Note
that superscript “+” signiﬁes that the OCI includes the power
capping aware model. When α + β ≪ M T BF , solving the
differential equations, we can get the functional relationship
between power and OCI, as shown in Eq. 14 and 15.
α+
t =sβ2 +
e =s Pchkp
Pi
α+
2 × β × γ
ǫ
+
M T T Fbase × β
FA(C×Pi+D) × ǫ
(14)
× [β2 +
2 × β × γ
ǫ
+
M T T Fbase × β
FA(C×Pi+D) × ǫ
]
(15)
We note that Power capping aware OCI has no dependence
on the regression co-efﬁcients A and B, which show how
power capping affects compute phase performance.
Finding 5: Power capping aware OCI is not determined
by how the compute phase performance is affected by power
capping. That
two applications with varying sensitivity
toward power capping on their compute phase performance,
will have the same OCI if all else is the same.
is,
C. High Order Models
VII. MODEL VALIDATION AND MODEL-DRIVEN STUDY
The high order model reﬁnes Twaste in the ﬁrst order
model in the following three steps. First, high order model
introduces the fraction of lost work over a time interval φ(∆t)
to replace ǫ, which is shown in Eq. 16, similar to [12]. Second,
high order model deﬁnes the number of failures as Ttotal
M T BF
to consider multiple failures in a computing segment. Finally,
high order model considers failures during restart processes.
Reﬁned T comp
waste, and Trestart are shown in Eq. 17 and
Eq. 18.
waste, T chkp
φ(∆t) =
∆t
1 − e∆t/M T BF
M T BF
+
1
(16)
(17)
T comp
waste =
T chkp
waste =
× [φ(α + β) × α × e−
Ttotal
M T BF
+ φ(α + β + γ) × α × (1 − e−
Ttotal
M T BF
+ φ(α + β + γ) × β × (1 − e−
× [φ(α + β) × β × e−
α+β+γ
M T BF
α+β+γ
M T BF )]
α+β+γ
M T BF
α+β+γ
M T BF )]
Trestart =
× [γ × e−
Ttotal
M T BF
+ φ(α + β + γ) × γ × (1 − e−
α+β+γ
M T BF
(18)
α+β+γ
M T BF )]
Replacing Twaste in the ﬁrst order model, the expression
of Ttotal for the high order model is shown in Eq. 19.
Ttotal =M T BF × (
Tcomp
α
−
β
α + β
)
× e
γ
M T BF × (e
α+β
M T BF − 1)
(19)
High order model can also be extended to power-aware OCI
model using same approach in Section VI-B. Since the high
order model only reﬁnes Twaste, we can derive Ttotal(Pi)
and Etotal(Pi) from Twaste(Pi). Similar to Eq. 17, Eq. 18,
and Eq. 19, T comp
waste(Pi), and Trestart(Pi) can be
expressed if Ttotal, M T BF , and φ is replaced by Ttotal(Pi),
M T BF (Pi) and φ(∆t). Similar to Section VI-B, M T BF (Pi)
can be obtained using Eq. 3, 4 and 5. Expression for Ttotal(Pi)
is shown in Eq. 20 and Eq. φ(∆t) is deﬁned in Eq. 21.
waste(Pi), T chkp
Ttotal(Pi) =M T BF (Pi) × (
γ
Tcomp(Pi)
α
α+β
−
β
α + β
)
× e
M T BF (Pi ) × (e
M T BF (Pi ) − 1)
φ(∆t) =
M T BF (Pi)
∆t
+
1
1 − e∆t/M T BF (Pi)
(20)
(21)
e ) are achieved when d
Based on Eq. 13, we can also get the expression of Etotal(Pi)
for power capping aware high order model. The OCI op-
timized for execution time (α+
t ) and optimized for energy
consumption (α+
dα (Ttotal(Pi)) = 0 and
d
dα (Etotal(Pi)) = 0 respectively. The analytical solution of
the OCI can be found in [11] [12]. However, the analytical
solutions are approximation to or estimation of OCIs based on
certain conditions. In order to accurately predict OCIs under all
conditions, we use the numeric solver “vpasolve” in MATLAB
to calculate OCIs for both ﬁrst order power-aware model and
high order power-aware model.
7
In this section, we perform simulations using an event-
driven simulator and validate our model against simulation
results. Then, we conduct model-driven study to compare
our power-aware OCI models with the prior power capping
unaware OCI models (i.e., ﬁrst order and high order models).
To validate our power capping aware OCI model, we
use a simulation based approach to compare against. We
developed an event-driven simulator to simulate the compute
phase, checkpointing phase, and failure events. The simulator
generates random failures which follow a Poisson process, and
intervals between failures follow an exponential distribution.
The execution time, checkpointing time, and MTBF is adjusted
in the simulation based on the input power capping level in
accordance to relationships derived in previous sections.
Threats to validity: We recognize that our ﬁndings are
bounded by the assumptions and parameter settings. To mimic
real-world scenario, our simulation based evaluation is driven
by parameters obtained from real-system experiments, large-
scale application characteristics, empirical parameters obtained
from HPC facility. The simulation based study uses power
capping related coefﬁcients that are experimentally obtained
from the different Intel Xeon platforms for a variety of
scientiﬁc applications. Simulation based study is driven by
failure and I/O data obtained from the Titan supercomputer and
the temperature dependence of MTBF has also been simulated
based on the Titan supercomputer data. At the same time, we
also acknowledge that it is not always possible to obtain real-
world data to drive simulation based studies. In such cases, we
have used a range of parameters to simulate the impact of such
factors. We simulated failure events using Weibull distribution
to mimic real-world scenario and obtained similar accuracy
and results, but results are omitted due to space restrictions.
Fig. 7 shows the total execution time and energy consump-
tion under different power-caps for a peta-scale system, similar
to the Tian supercomputer. The ﬁgure curves correspond to
our power capping aware models and the simulation. We
also mark the OCIs obtained by previous models and OCIs
obtained by new power capping aware model. The simula-
tion setup assumes a 120 hour long application running on
a Titan-like supercomputer, which is composed of 20,000
nodes. It assumes to have the same MTBF as Titan under
the same temperature. The power capping effect is modeled
after Xeon E5-2630 processor. The regression co-efﬁcients
corresponds to that platform and pseudo applications from the
NAS benchmark suite (LU, SP, BT) on that platform. Note
that these applications have similar regression co-efﬁcients.
We later perform sensitivity analysis w.r.t. such co-efﬁcients
as well. The checkpointing power is taken as 21.4 watts as on
measured on this platform. The baseline power consumption
is 64.1 watts under no power capping. Baseline temperature is
calculated based on Eq. 3, and baseline MTBF is calculated
based on MTBF and temperature data from Titan logs using
Arrhenius Equation with the empirical value of activation
energy. The checkpointing time is taken as to be 3.6% of
the compute time as obtained from our experiments from the
BLCR checkpointing library. We assume that time to restart
equals to time to checkpoint, since the former one primarily
reads checkpoints from storage system and the latter one
0
0
4
2
0