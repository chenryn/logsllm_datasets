User: 在一个分布式系统中，如何确保不同节点之间的数据一致性？请列举至少两种数据一致性协议，并分别简要说明其工作原理和优缺点。
Assistant: 数据一致性是分布式系统中非常关键的问题，一般采用以下两种协议保证数据一致性：

1. 两阶段提交（Two-Phase Commit，2PC）协议

工作原理：当一个事务要提交时，首先询问所有参与的节点，是否可以提交。如果所有节点都可以提交，则该事务正式提交。如果在询问过程中，某个节点发现自己的提交可能出现问题，它可以请求中止整个事务。该协议分为两个阶段：

- 准备阶段：主节点询问所有从节点是否可以提交，当且仅当所有节点都可以提交时，主节点通知所有节点提交；
- 提交阶段：所有节点开始提交事务，如果所有节点均提交成功，则该事务正式提交，否则进行回滚操作。

优点：能够保证数据的强一致性。如果参与的节点中有一个节点失效，协议能够检测出来并阻塞整个事务的提交，保证了数据的一致性。

缺点：需要所有节点处于同步状态，否则会出现死锁问题；需要等待主节点的询问和提交，网络延迟大时会降低系统的性能。

2. 基于版本的并发控制（Optimistic Concurrency Control，OCC）协议

工作原理：当一个事务要修改数据时，先判断该数据是否被其他事务修改。如果没有被修改，则该事务可以继续修改。如果已经被修改，则该事务进行回滚操作。改协议分为三个阶段：

- 读取阶段：读取数据并记录版本号；
- 写入阶段：执行修改操作；
- 提交阶段：检查版本号，如果没有被修改则正式提交，否则回滚操作。

优点：不需要每个节点都处于同步状态，更新操作只需要拒绝同时修改同一数据的事务即可，提高了系统的性能。

缺点：不能保证数据的强一致性，在高并发场景下会导致大量回滚操作，增加系统开销。同时需要保证事务提交顺序的正确性，否则同一数据的不同修改可能会覆盖或者丢失。