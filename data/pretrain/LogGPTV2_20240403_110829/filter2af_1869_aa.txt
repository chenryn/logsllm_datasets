# 0x01 基础知识
内网渗透，从字面上理解便是对目标服务器所在内网进行渗透并最终获取域控权限的一种渗透。内网渗透的前提需要获取一个Webshell，可以是低权限的Webshell，因为可以通过提权获取高权限。
在进行内网渗透之前需要了解一个概念，域环境。在内网中，往往可能存在几百上千台机器，例如需要对机器进行升级、打补丁、设置权限等，管理员不可能一台一台地更新修改。因此便衍生出了域环境。管理员以一台主机作为域控制器新建一个域，将所有其他主机加入域中，以域控来操作其他主机。因为域控的高权限，导致了域控所在的主机的管理员账号密码，可以登录任意一台主机，所以内网渗透的最终目标，往往便是拿下域控的权限。
首先通过提权获取一个具有管理员权限的账号密码hacker/1234,abcd。具体提权过程就不细说了。下面将利用获取的这个具有管理员权限的账号密码正式开始内网渗透实践。
# 0x02 内网穿透
在渗透测试过程中，我们拿下了一台服务器的权限，并且通过netstat
-ano发现开启了3389端口，想要远程桌面连接的时候发现无法连接。这是因为我们获取的服务器所处的环境为内网，而内网主机的3389端口，是公网IP通过端口映射的。也就是说，我们连接的外网IP地址的3389端口，映射到内网中，不一定是那台服务器的3389端口。  
解决这种问题的方法有两种：  
1、让目标机器去连接外网主机（必须有一台公网服务器，内网主机能够访问互联网）  
2、在目标机器上设置一个信号站（放一个WEB文件在目标机器上，所有流量都经过这个文件通信）  
在渗透测试过程中，内网主机不能够访问互联网是很常见的，下面通过方法2进行内网穿透。
## 一、具体流程
1、首先需要一款工具regeorg来建立一个信号站。  
2、这里以PHP站点为例，将tunnel.nosocket.php文件通过之前获取的Webshell上传到站点，尝试使用web端访问确定文件存在。  
3、以python环境运行reGeorgSocksProxy.py脚本，将从本机的3344端口经过的数据都发送给目标机器的tunnel.nosocket.php文件。
    python reGeorgSocksProxy.py -l 127.0.0.1 -p 3344 -u http://192.168.229.151/tunnel.nosocket.php
4、使用工具proxifier，设置远程桌面软件mstsc.exe的数据包从本地的3344端口出网。  
5、成功进行内网穿透，通过远程桌面连接到目标主机。  
其他内网穿透方法还有Frp、Ew、nps等，都是一些可以穿透的工具，原理为搭建一条直通内网的隧道，这里就不详细介绍了。
# 0x03 内网信息收集
1、使用PsExec.exe获取SYSTEM权限  
进行内网信息收集需要具有一定的权限，所以先进行提权获取SYSTEM权限。
    PsExec.exe -s -i -d cmd
2、获取所有域用户列表  
使用net user /domain命令获取内网的域为xxx.cool，域中具有Administrator、Guest、krbtgt、web用户。  
3、获取域用户组信息  
使用net group /domain命令获取域用户组信息。  
4、获取域管理员列表  
使用net group "domain admins" /domain 命令获取域管理员列表，域管账户只有Administrator。  
5、获取域服务器的IP地址  
通过ping 域名称来获取域服务器的IP地址。（也可以通过查看dns服务器的IP地址，结合进行判断域服务器的IP地址。）  
​
6、安装Nmap进行扫描  
前面介绍了Nmap工具，在内网渗透过程中也可以通过Nmap获取内网信息。  
1）首先通过Webshell上传Nmap的安装包。  
2）远程连接目标服务器并安装Nmap进行内网信息收集。  
7、内网主机存活探测因为动静比较大，也可以通过nbtscan工具进行。因为相对于Nmap的大规模扫描行为，nbtscan基于NetBios进行探测，即是相当于windows打开我的电脑中的网络一样，被发现的几率相对低一些。
# 0x04 Hash读取
此处Hash读取通过工具mimikatz来进行，mimikatz是由本杰明·德尔皮创建开发的一个能够从内存中读取hash账号密码的工具，也可以说是内网渗透中的神器。
下面介绍如何通过mimikatz工具读取服务器内存中存储的hash密码。  
1、首先以管理员权限打开mimikatz。  
2、使用privilege::debug提升权限。  
3、使用sekurlsa::logonpasswords读取到内存中的管理者账号的明文密码和本机的web用户的密码。  
4、远程桌面登录管理员账号。  
# 0x05 Hash传递
## 一、基础知识
上面介绍了如何进行Hash读取，如果域控管理员使用自己的域控账号登录了服务器，那么就可以抓取到域控的账号和密码了。这样的危害性是巨大的，所以在渗透测试过程中，内网的机器往往会打
**KB2871997** 补丁，并且修改注册表关闭Wdigest
Auth。这样抓取的就不是明文密码了。虽然还是能够获取密文Hash，但是密文Hash往往不可逆，解开需要花费大量精力。  
在域环境下，检测密码不是先将Hash解密再验证是否正确的。在验证输入的账号密码是否正确的时候，是通过验证Hash是否相同来进行校验的。也就是说，或许我们可以通过获取的Hash来伪造管理员账号密码登录，也就是Hash传递，又叫PTH，通过将获取的NTLM密文传递到验证登录的机器，绕过正常验证进行登录系统。
## 二、Wdigest
注册表中的Wdigest功能关系着内存中是否有明文密码，通过查看注册表键值，可以判断Wdigest功能状态。如果该项值为“1”则为开启，即可以获取明文密码，如果该项值为“0”，则明文密码不会出现在内存中。开启和关闭Wdigest
Auth命令如下：  
（1）开启Wdigest Auth
    reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f
（2）关闭Wdigest Auth
    reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f
## 三、IPC$
#### 1、概念
IPC$(Internet Process
Connection)是共享"命名管道"的资源，它是为了让进程间通信而开放的命名管道，通过提供可信任的用户名和口令，连接双方可以建立安全的通道并以此通道进行加密数据的交换，从而实现对远程计算机的访问。
    IPC$的使用条件：
    开放了139、445端口；
    目标开启IPC$文件共享；
    获取用户账号密码。