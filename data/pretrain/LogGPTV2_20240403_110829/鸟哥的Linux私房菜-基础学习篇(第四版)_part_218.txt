在构建软件包时，可以指定每个文件的类型，包括文档文件（使用 `%doc` 标记）和配置文件（使用 `%config` 标记）等。

### %changelog
该部分主要用于记录软件的历史更新记录。每条记录应以星号（*）开头，并随后列出时间、修改者姓名、电子邮件地址以及软件版本。减号（-）后则应详细说明所做的更改。例如：
```
%changelog
* Wed Sep 09 2015 VBird Tsai <vbird@example.com> - 4.2.6p5-20.vbird
- 仅重新构建此 SRPM 至 RPM。
* Tue Jun 23 2015 CentOS Sources <sources@centos.org> - 4.2.6p5-19.el7.centos.1
- 更新品牌标识。
```

通过以上示例可以看出，ntp.spec 文件对于管理软件包信息至关重要。当我们使用 `rpm -q` 查询相关信息时，实际上是从这些 spec 文件中读取数据的。接下来我们将介绍如何将 SRPM 编译成 RPM 包。

### 使用 rpmbuild 指令编译或打包 SRPM/RPM
一旦您的 spec 文件准备就绪，后续步骤就变得相当简单了。这里我们介绍两个常用的 `rpmbuild` 命令选项：

- **-ba**：同时生成二进制（RPM）和源代码（SRPM）包。
  
执行命令如下：
```bash
[root@study SPECS]# rpmbuild -ba main.spec
```

上述命令运行后，您将会看到类似以下输出，表明已成功创建了所需的 RPM 和 SRPM 文件：
```
Wrote: /root/rpmbuild/SRPMS/main-0.1-1.el7.centos.src.rpm
Wrote: /root/rpmbuild/RPMS/x86_64/main-0.1-1.el7.centos.x86_64.rpm
Wrote: /root/rpmbuild/RPMS/x86_64/main-debuginfo-0.1-1.el7.centos.x86_64.rpm
```

### 安装/测试/实际查询
现在让我们安装并测试刚刚打包好的软件包：
```bash
[root@study ~]# yum install /root/rpmbuild/RPMS/x86_64/main-0.1-1.el7.centos.x86_64.rpm
```

检查安装情况及包详情：
```bash
[root@study ~]# rpm -ql main
/usr/local/bin/main  # 尝试运行 main 程序看看！

[root@study ~]# rpm -qi main
Name        : main
Version     : 0.1
Release     : 1.el7.centos
Architecture: x86_64
Install Date: Wed 09 Sep 2015 04:29:08 PM CST
Group       : Scientific Support
Size        : 7200
License     : GPLv2
Signature   : (none)
Source RPM  : main-0.1-1.el7.centos.src.rpm
Build Date  : Wed 09 Sep 2015 04:27:29 PM CST
Build Host  : study.centos.vbird
Relocations : (not relocatable)
URL         : http://linux.vbird.org/
Summary     : 显示正弦值和余弦值。
Description :
这个软件包允许用户输入名字并计算相应的正弦和余弦值。
```

至此，您已经学会了如何自定义和打包自己的软件程序！这不仅令人兴奋，而且为将来进一步定制和分发您的软件奠定了基础。此外，您还可以手动调整 SRPM 的源文件内容以满足特定需求。