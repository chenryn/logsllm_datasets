Although Deno is "headless" that does not mean image/canvas processing would
be useless. Why? Many of us use "image as data", for example zxy Tiles for map
data (elevation is quite popular)
And often the results of the computations are exported by creating a canvas
with the data and downloading it as an image.
I realize we have deno-canvas and skia_canvas  
https://github.com/DjDeveloperr/deno-canvas  
https://github.com/DjDeveloperr/skia_canvas
But they both have problems, see:  
#18919  
.. which is continues here: DjDeveloperr/deno-canvas#34  
#19247
I should add that I used these to test 23 agent based models with deno,
replacing a prior fragile Puppeteer solution (to run them in the browser). The
runtime dropped drastically: from 3 minutes to 6 seconds (using 23 Deno
workers)
So some really important "image as data" work is limping along with the
current canvas/image libraries but having the browser and Deno have exactly
the same API would be far better.
I propose Deno match the browser's canvas/image API, that is createCanvas and
ImageBitmap.