title:Measuring What is Not Ours: A Tale of 3\(^\mboxrd\) Party
Performance
author:Utkarsh Goel and
Moritz Steiner and
Mike P. Wittie and
Martin Flack and
Stephen Ludin
Measuring What is Not Ours:
A Tale of 3rd Party Performance
Utkarsh Goel1(B), Moritz Steiner2, Mike P. Wittie1, Martin Flack2,
and Stephen Ludin2
1 Montana State University, Bozeman, USA
{utkarsh.goel,mwittie}@cs.montana.edu
2 Akamai Technologies, Inc., San Francisco, USA
{moritz,mflack,sludin}@akamai.com
Abstract. Content Providers make use of, so called 3rd Party (3P) ser-
vices, to attract large user bases to their websites, track user activities
and interests, or to serve advertisements. In this paper, we perform an
extensive investigation on how much such 3Ps impact the Web perfor-
mance in mobile and wired last-mile networks. We develop a new Web
Party Trailing Ratio, to represent the frac-
performance metric, the 3
tion of the critical path of the webpage load process that comprises of
only 3P downloads. Our results show that 3Ps inﬂate the webpage load
time (PLT) by as much as 50% in the extreme case. Using URL rewrit-
ing to redirect the downloads of 3P assets on 1st Party infrastructure,
we demonstrate speedups in PLTs by as much as 25%.
rd
1 Introduction
Content Providers (CPs) such as Facebook, Google, and others seek to attract
large number of users to their websites and to generate high revenue. As a result,
CPs strive to develop attractive and interactive websites that keep their users
engaged. JavaScript libraries from online social networks, advertisements, and
user tracking beacons allow CPs to personalize webpages based on end-users’
interests, while various CSS frameworks make websites aesthetically pleasing [8,
10]. Further, webpage analytic APIs and performance monitoring tools allow CPs
to monitor the user-perceived performance of their websites [9]. However, as CPs
continue to evolve their websites with increasing number of features, the webpage
load time (PLT) starts to increase – resulting in poor user experience [6,13].
To speed up the delivery of static Web content to end-users, CPs make con-
tracts with Content Delivery Networks (CDNs), such as Akamai. CDN servers
are distributed deep inside many last mile wired and mobile ISPs worldwide
and thus provide low-latency paths to end-users [23,25]. Additionally, CDNs
are motivated to adopt new and upcoming faster Internet technologies, such
as HTTP/2 and IPv6 to achieve even faster content delivery for their CP cus-
tomers [16,19,22]. Although CDNs are eﬀective in reducing download times of
Web objects they serve, as CPs continue to enhance their websites by embedding
c(cid:2) Springer International Publishing AG 2017
M.A. Kaafar et al. (Eds.): PAM 2017, LNCS 10176, pp. 142–155, 2017.
DOI: 10.1007/978-3-319-54328-4 11
Measuring What is Not Ours: A Tale of 3rd Party Performance
143
external resources that the surrogate CDN does not serve, it becomes challeng-
ing for the CDN to speed up components of webpages beyond its control [15,17].
More generally, the usage of external resources have increased in last few years
and have thus imposed a much harder challenge on CDNs to improve PLTs.
The performance of such external resources have been a great area of inter-
est in the Web performance community. Previous attempts to classify exter-
nal resources as 3rd Party (3P) involves comparing object hostnames to the
hostname of the base page URL. However, such techniques often lead to inac-
curate classiﬁcation. For example, while the two hostnames www.qq.com and
btrace.qq.com appear to be from the same party, objects from www.qq.com are
served from a surrogate CDN infrastructure, whereas objects from btrace.qq.com
are served from an origin infrastructure. To bring clarity to classiﬁcation of 3P
assets, we refer the server infrastructure that serves the base page HTML as the
1st Party (1P) provider, such as a CDN provider acting as surrogate infrastruc-
ture for its CP customers. Additionally, we refer as to 3P as any asset embedded
in the webpage that is not served by the same infrastructure as the base page
HTML. The downloads of such assets cannot be optimized by 1P provider.
Current 3P performance analysis techniques only investigate the overall load
time of 3P assets [6,11], however, such techniques fail to investigate the exis-
tence of 3P assets on webpage critical path [27]. Moreover, previous work mea-
sures 3P performance by comparing PLTs for a webpage with and without 3P
resources [3]. However, we show in Fig. 1 that such techniques may not result
in accurate comparison of PLTs, as removing a 3P resource may also remove
other resources that are dependent on the removed resource. For example, while
50% of the 3P resources initiate download of at least one other resource on the
webpage, many 3P resources initiate downloads of upto 10 other resources.
We argue that the key to minimize 3P impact on PLT is to ﬁrst under-
stand which speciﬁc 3P assets lie on webpages’ critical path. In this paper, we
extend our previous work of evaluating the impact of 3Ps on PLT over mobile
networks [21]. Speciﬁcally, we investigate 3P impact on PLT over wired and
well-provisioned datacenter networks and suggest a potential solution to mit-
igate their impact through experimental evaluation. Speciﬁcally, we make the
following four contributions in this paper:
Fig. 1. Dependency on 3P assets.
Fig. 2. A waterfall diagram with one 3P
and two 1P objects.
144
U. Goel et al.
Analysis of webpage structure: We make extensive use of the open-source
data available at the HTTP Archive [2] to expose the characteristics of 3P assets
embedded into the top 16,000 Alexa webpages [7], currently served by four major
CDN providers. Speciﬁcally, for 3P assets in each webpage in our dataset, we
calculate the number of unique domain names resolved, HTTP requests sent,
total bytes, and total uncompressed bytes downloaded, among many other char-
acteristics.
Extensive Measurement: To measure the impact of 3P downloads on Web
performance, we devise a new Web performance metric, 3rdParty Trailing Ratio
(3PTR), that represents the PLT fraction of the download time of 3P assets on web-
page critical path. As shown in Fig. 2, the 3PTR is the PLT fraction that is accounted
for by the sum of the download times of 3P objects whose download times do not
overlap with any 1P object, as highlighted by the shaded areas. To calculate 3PTR
from HTTP Archive (HAR) ﬁles, we encourage readers to experiment with http://
nl.cs.montana.edu/tptr.
Next, using cellular and wired clients of Gomez Mobile and Gomez Last-
Mile testbeds [4], we run several active experiments for three months in 2016 to
calculate 3PTR for hundreds of webpages and identify which 3P resources impact
PLTs. We also use measurement data from HTTP Archive to calculate 3PTR
for the top 16,000 Alexa webpages loaded from a well-provisioned datacenter
network [2].
Problems Discovered and Solutions: In our analysis of 3P performance,
we discover two major problems. First, we identify that for many webpages, 3P
assets that lie on the webpage critical path contribute up to 50% of the total
PLT. To the best of our knowledge, there is currently no known best-practice as
to how 1Ps could optimize 3P downloads to mitigate their impact on the PLT.
Solution: We investigate how 1P providers could safely redirect 3P downloads
onto their infrastructures for faster delivery of 3P assets. Based on our mea-
surements, we demonstrate that rewriting 3P URLs in a way that enables 1P
servers to deliver 3P assets improves PLTs by up to 25%. The faster PLTs are
achieved as rewritten URLs eliminate DNS lookups to 3P hostnames, the clients
download 3P assets from 1Ps using an existing TCP connection to the 1P server,
and that the 1P (surrogate CDN) servers are likely closer to clients than the 3P
servers. Additionally, 1P servers could compress any uncompressed 3P assets
before transferring them to clients. And ﬁnally, 1Ps could use new content deliv-
ery protocols, such as HTTP/2 and IPv6 for even faster delivery that many 3Ps
do not employ.
Second, using the HTTP Archive data we identify that several 3P vendors do
not compress Web objects even when clients indicate support for compression in
HTTP request headers. Incidentally, we identify that some 1P providers deliver
uncompressed objects as well, even when clients indicate support for compres-
sion. Our investigation suggests that this behavior is due to misconﬁgured HTTP
response headers on 1P servers.
Measuring What is Not Ours: A Tale of 3rd Party Performance
145
Solution: We made recommendations to several 1P providers, providing them
with a list of URLs to conﬁgure compression for the objects that they currently
serve uncompressed.
2 Data Collection
We use the open-sourced HTTP Archive dataset, an initiative by Google,
Mozilla, and other industry leaders, to analyze structures of diﬀerent websites [2].
The HTTP Archive data is collected using the WebPageTest framework, where
webpages are loaded over virtual machines inside a datacenter [14]. The page
loads are then translated into a format similar to HTTP Archive format (HAR)
containing the timing data and as well as the HTTP request and response head-
ers for each object embedded in the webpage under test.
For our analysis, we extract only the HTTP request and response headers
pertaining to the top 16,000 Alexa webpages. In particular, for each requested
object we extract HTTP headers indicating the response size, Cache-Control,
associated hostname, and whether the response was compressed when the client
indicates support for compression in the HTTP request headers. Since many
3P assets load after the onLoad event triggered by the Web browser and since
we only focus on understanding how much 3P downloads impact the PLT, we
consider the measurement data for objects loaded only until the onLoad event.1
Next, for each hostname we perform a dig operation to check whether the
hostname resolves to a canonical name (CNAME) associated with any of the
four CDN providers we use in this study. If a hostname for an object does not
resolve to a CNAME associated to the 1P serving the base page HTML, we
consider that object as a 3P asset, with respect to that 1P. Additionally, if the
hostname does not resolve to any CNAME, we consider that hostname as 3P
for all four 1P CDN providers. While many 1P providers use anycast addressing
for their CDN servers, the four CDN providers we use in this study perform
DNS-based addressing and resolve hostnames to CNAMEs associated to them.
Finally, for each webpage, we calculate the total number of domain names
resolved and HTTP requests sent for objects that we label as 3P. We also cal-
culate the total number of bytes, total number of uncompressed bytes, and
total number of cacheable bytes delivered by various 3P vendors by parsing the
Content-Encoding and Cache-Control headers in the HTTP response, respec-
tively. Our total dataset consists of structures for 16,000 webpages requesting a
total of 1.6 M objects, out of which about 525 K (32%) objects belong to diﬀerent
3P providers.
To collect measurement data pertaining to 3P impact on PLT, we con-
duct several active experiments using the Gomez Mobile testbed to load 60
mobile-speciﬁc webpages served by the production servers of a major CDN
provider [1,4]. We also conduct active experiments using Gomez Wired Last-
Mile testbed to load a set of 376 webpages designed for larger screens from
1 We refer to the time Web browsers take to trigger the onLoad event as the webpage
load time (PLT) [5].
146
U. Goel et al.
the same CDN. The selected webpages are limited to a few hundred because of
the operational costs related to running Gomez experiments and that the cho-
sen webpages are among the most popular sites served by the CDN. Next, we
conﬁgure both Gomez mobile and wired clients to load each website 400 times
and record the browser exposed Navigation and Resource Timing data after
each page load [5,12]. The Navigation and Resource Timing data we obtain
from Gomez consists of timestamps when the page starts to load, timestamps
when each object starts and ﬁnishes loading (including the time to perform DNS
lookup, TCP handshake time, SSL handshake time, time to receive the ﬁrst bit,
and the object download time), and the timestamp when the onLoad event is
triggered by the Web browser. Our conﬁgured Gomez clients also record the host-
names associated with each requested object, which we use to identify whether
the object downloaded is a 3P asset or a 1P asset, similarly to how we iden-
tify this information using the HTTP Archive data. In addition to using Gomez
clients, we use measurement data from the HTTP Archive to extract Resource
Timing data pertaining to each object downloaded for the top 16000 Alexa web-
pages. Such a comprehensive measurement allows us to understand the impact
of 3P assets on PLTs when loaded under diﬀerent network conditions, such as
cellular, wired, and well-provisioned datacenter networks.
3 Exposing Characteristics of 3P Assets
Using the HTTP Archive data, in Fig. 3 we show the distribution of the number
of unique domain names resolved and total number of HTTP requests sent by
clients to download 3P assets for diﬀerent webpages. In general, we observe that
50% of the webpages resolve atleast 10 unique 3P domain names and issue a
total of about 50 HTTP requests to diﬀerent 3P vendors. For mobile clients,
where radio latency and the latency to cellular DNS servers is a few hundred
milliseconds, resolving multiple 3P domain names introduces signiﬁcant latency
to the overall PLT [22,23,26]. Further, such a large number of DNS lookups could
result in many round trips to establish several new TCP connections to distant
8
0
.
s
e
g
a
p
b
e
W
f
4
0
.
o
n
o
i
t
c
a
r
F
0
0
.
DNS
HTTP
200 500
5 10
2
Number of 3rd Party Requests
50
1
0
.
1
8
.
0
6
.
0
4
.
0
2
.
0
s
e
g
a
p
b
e
W
f
o
n
o
i
t
c
a
r
F
0
.
0
1
Uncompressed
Cacheable
Total
1000
10000
10
100
Amount of 3rd Party Data (KB)
Fig. 3. Distribution of the number of
DNS lookup and HTTP requests made
to download 3P assets.
Fig. 4. Distribution of total, uncom-
pressed, and cacheable bytes down-
loaded from 3P vendors.
Measuring What is Not Ours: A Tale of 3rd Party Performance
147
3P servers – introducing additional delay to the object load times, especially
during the TCP slow start phase of each connection.
Next, in Fig. 4, we show the distribution of the total amount of data down-
loaded from 3P servers, and as well as the total number of uncompressed bytes
transferred by 3P servers, when clients indicate support for compression in the
HTTP request headers. 50% of the webpages download atleast 400 KB data from
diﬀerent 3P providers, out of which at least 40 KB of data is transferred uncom-
pressed, and almost all of the data transferred by 3P servers is cacheable by
clients or any intermediate Web proxy. The opportunity to cache 3P data allows
1Ps to compress and serve requests from their infrastructures.
4 Third Party Trailing Ratio
3P assets embedded on a webpage require multiple DNS lookups and down-
load of hundreds of kilobytes of data, however, 3P assets that do not lie
on the webpage critical path do not impact the PLT. Therefore, we investi-
gate the time spent by 3P downloads on the critical paths of webpages. For
the purposes of this investigation, we devise a new Web performance metric,
3rd Party Trailing Ratio (3PTR), that represents the fraction of PLT that is
spent only by 3P downloads and during which no 1P asset is downloading in
parallel, as denoted by the two shaded areas in Fig. 2.
To calculate 3PTR, we employ a two step process as follows: First, using start
and end timestamps of all object downloads, we calculate all non-overlapping
time intervals of 1P and 3P downloads independently [20]. Second, using the
above time intervals, for each 3P interval we identify whether there is any time
duration that does not overlap with any 1P interval. The sum of all such 3P time
intervals results in the 3P delay. Finally, the percentage of PLT that belongs to
3P delay is referred to 3PTR.
In Fig. 5, we show the 3PTR distributions for 60 webpages served by a major
CDN provider, where we load each webpage 400 times from Gomez Mobile clients
connected to cellular networks. For ﬁgure clarity, we sort pages along the x-axis
based on the median 3PTR value. In general, we observe that 3P downloads do not
impact PLT for about half of the webpages in our dataset. With these webpages,
when 3P assets are being downloaded, one or more longer 1P assets are also being
0
8
)
%
(
0
6
R
T
P
T
0
4
0
2
0
Distinct Webpages
Fig. 5. 3PTR distributions for webpages
served to Gomez Mobile.
0
8
)