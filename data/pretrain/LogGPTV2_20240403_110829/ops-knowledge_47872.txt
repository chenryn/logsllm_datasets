### Problem: Upgrading Python from 2.4 to 2.6 on CentOS 5

**Current Setup:**
- **Operating System:** CentOS 5 (Full)
- **Existing Python Version:** 2.4, located at `/usr/lib/python2.4/`
- **Additional Modules for Python 2.4:** Located in `/usr/lib/python2.4/site-packages/`
- **New Python Version:** 2.6, built from source and installed at `/usr/local/lib/python2.6/`
- **Default Python Version:** Set to Python 2.6
- **Issue:** Old modules for Python 2.4 are no longer in the `PYTHONPATH`, causing issues such as `yum` being broken ("no module named yum").

**Question:**
What is the correct way to migrate or install modules to Python 2.6?

### Solution:

To ensure that your Python 2.6 environment has the necessary modules, you can use the following methods:

1. **Using `easy_install`:**
   - `easy_install` is a convenient tool for installing Python packages. You can use it to install the required modules for Python 2.6.
   - Ensure that `setuptools` is installed for Python 2.6. If not, you can install it using:
     ```sh
     /usr/local/bin/easy_install-2.6 setuptools
     ```
   - Then, use `easy_install` to install the required modules:
     ```sh
     /usr/local/bin/easy_install-2.6 <module_name>
     ```

2. **Manual Installation:**
   - If `easy_install` is not available or if you prefer a more manual approach, you can install modules by following these steps:
     1. Download the source code of the module.
     2. Unpack the source code to a directory.
     3. Navigate to the unpacked directory.
     4. Run the installation script with the new Python interpreter:
        ```sh
        /usr/local/bin/python2.6 setup.py install
        ```

### Example: Installing a Module Manually

Suppose you want to install the `requests` module:

1. Download the `requests` source code:
   ```sh
   wget https://files.pythonhosted.org/packages/source/r/requests/requests-<version>.tar.gz
   ```

2. Unpack the downloaded file:
   ```sh
   tar -xzf requests-<version>.tar.gz
   cd requests-<version>
   ```

3. Install the module using the new Python interpreter:
   ```sh
   /usr/local/bin/python2.6 setup.py install
   ```

### Verifying the Python Version

To check which version of Python is currently set as the default, you can use:
```sh
python -V
```

If you need to ensure that the correct Python interpreter is being used, you can specify the full path:
```sh
/usr/local/bin/python2.6 -V
```

By following these steps, you should be able to successfully migrate and install the necessary modules for Python 2.6, resolving issues such as the broken `yum` command.