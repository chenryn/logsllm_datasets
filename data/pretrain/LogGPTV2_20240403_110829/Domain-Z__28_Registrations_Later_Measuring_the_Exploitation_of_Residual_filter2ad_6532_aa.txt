title:Domain-Z: 28 Registrations Later Measuring the Exploitation of Residual
Trust in Domains
author:Chaz Lever and
Robert J. Walls and
Yacin Nadji and
David Dagon and
Patrick D. McDaniel and
Manos Antonakakis
2016 IEEE Symposium on Security and Privacy
2016 IEEE Symposium on Security and Privacy
Domain-Z: 28 Registrations Later
Measuring the Exploitation of Residual Trust in Domains
†
Chaz Lever
∗
, Robert Walls
†
, Yacin Nadji
†
, David Dagon
∗
, Patrick McDaniel
‡
, Manos Antonakakis
{chazlever,yacin,manos}@gatech.edu, PI:EMAIL, {rjwalls,mcdaniel}@cse.psu.edu
† Georgia Institute of Technology, School of Computer Science,
‡ Georgia Institute of Technology, School of Electrical and Computer Engineering,
∗ Pennsylvania State University, Department of Computer Science and Engineering
Abstract—Any individual that re-registers an expired domain
implicitly inherits the residual trust associated with the domain’s
prior use. We ﬁnd that adversaries can, and do, use malicious re-
registration to exploit domain ownership changes—undermining
the security of both users and systems. In fact, we ﬁnd that
many seemingly disparate security problems share a root cause
in residual domain trust abuse. With this study we shed light
on the seemingly unnoticed problem of residual domain trust
by measuring the scope and growth of this abuse over the
past six years. During this time, we identiﬁed 27,758 domains
from public blacklists and 238,279 domains resolved by malware
that expired and then were maliciously re-registered. To help
address this problem, we propose a technical remedy and discuss
several policy remedies. For the former, we develop Alembic, a
lightweight algorithm that uses only passive observations from the
Domain Name System (DNS) to ﬂag potential domain ownership
changes. We identify several instances of residual trust abuse
using this algorithm, including an expired APT domain that could
be used to revive existing infections.
I.
INTRODUCTION
Domain names have become the Internet’s de facto root
of trust. In practice, they are also a root of insecurity as
common security systems depend on the unfounded assump-
tion that domain ownership remains constant; this leaves users
vulnerable to exploitation when domain ownership changes.
For instance, authentication systems often rely on email to
reset user passwords. Such schemes fail when the domain
for that credential changes ownership—e.g., by expiration,
auction, or transfer—and thus is no longer associated with the
original owner. Consequently, an adversary can exploit this
vulnerability to hijack the email address via a malicious re-
registration of the domain.
In this paper, we study the exploitation of domain owner-
ship changes and ﬁnd that the phenomenon of residual trust
abuse is the underlying cause of many, seemingly disparate,
security issues. Among these, we found vulnerabilities allow-
ing an attacker to maliciously register a domain to: (i) siphon
University trafﬁc and email by exploiting expired nameserver
domains; (ii) hijack Regional Internet Registry (RIR) accounts
and allocate IP addresses using expired email domains; and
(iii) distribute malicious updates for benign software, including
an instance that
left users of a major Linux distribution
vulnerable. The preceding examples demonstrate that even a
single instance of residual trust abuse has major implications
for the security of users and systems alike.
Despite the serious consequences of malicious registra-
tions, the scope of the phenomenon has yet to be rigorously
characterized and quantiﬁed. Our study seeks to ﬁll this knowl-
edge gap. Using data collected over six years, we show that
adversaries are actively exploiting residual trust. To quantify
this, we analyze the overlap between expired domains and
both (i) hand-curated lists of malicious domains, i.e., public
blacklists; and (ii) domains queried by malware, as such
queries are an indicator of abuse. We ﬁnd that almost 8.7%
of the domain names that appeared on public blacklists (since
2009) were listed after the domains expired and changed own-
ership. In other words, over the last six years at least 27,758
were abusing residual trust. Similarly, we identiﬁed 238,279
domains that expired, were re-registered, and then contacted
by malware—indicating likely malicious registrations. These
domains account for 3.9% of all domains resolved by malware
in our dataset. To put this into perspective, the size of this
set is comparable to the 320,009 domains listed on public
blacklists since 2009. Even more, empirical evidence suggests
this is a rapidly growing problem. We found the exploitation of
ownership changes has grown by orders of magnitude since we
began collecting data. Between 2009 and 2012 there were 784
observed blacklist instances of abuse, but in 2014 alone, that
number increased to over 9,000. We observed similar growth
for expired domains resolved by malware, indicating this trend
is not unique to blacklists.
In light of the increasing abuse of residual trust—e.g.,
malicious re-registration of domain names—better tools and
policies are necessary to ensure the security of both users and
systems. We argue that a comprehensive solution must consider
both technical and non-technical remedies. For the former we
propose Alembic, a lightweight algorithm that can be used to
identify likely changes in ownership. This algorithm scales to
large amounts of trafﬁc, requires only access to historical DNS
data, and ranks likely changes in domain ownership. Using our
algorithm, we were able to identify several cases of potential
residual trust abuse, including a currently expired advanced
persistent threat (APT) domain. The expired APT domain ex-
ample demonstrates how easily domains with negative residual
trust can be used to revive existing infections. For the non-
technical remedies, we discuss several potential policy changes
2375-1207/16 $31.00 © 2016 IEEE
© 2016, Chaz Lever. Under license to IEEE.
DOI 10.1109/SP.2016.47
DOI 10.1109/SP.2016.47
691
691
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 
and their implementation challenges.
Summarizing, our study makes the following contributions:
• We introduce the concept of residual trust and, us-
ing numerous real world cases of domain misuse,
demonstrate how it is the underlying cause of many
seemingly disparate security problems. Furthermore,
we distinguish between positive and negative residual
trust and discuss how each could be abused or cause
unintended consequences.
• We provide the ﬁrst large-scale analysis of residual
trust abuse by using several large datasets for expired
domains, passive DNS, network malware traces, and
aggregated public blacklists. Our observations show
malicious parties are actively abusing residual trust
and that it is a growing problem.
• We propose a technical remedy and discuss several
non-technical remedies to help deal with the growing
abuse of residual trust. For the former, we introduce
a lightweight algorithm, Alembic, to help locate likely
ownership changes. Using our algorithm, we ﬁnd
several previously unidentiﬁed instances of abuse,
including an expired APT domain.
While identifying changes in domain ownership would appear
to be straightforward using WHOIS information [26], mining
WHOIS is a challenging and resource-intensive task. Some
researchers are trying to solve this problem with better auto-
mated solutions [36], but this does not address the problem that
simply obtaining WHOIS information is expensive and hard to
scale. Further, WHOIS information is rarely available in bulk.
It is common for registry access to be limited to just a handful
of queries (less than 1000) per day from a given host. While
there are commercial companies offering limited API-based
access to WHOIS information [16], [4], [15], they are cost-
prohibitive and lack external validation. Due to the previously
mentioned WHOIS limitations, it is outside the capabilities
of most practitioners, research groups, and all but a handful
of organizations to generate a comprehensive set of historic
WHOIS records through which domain ownership changes can
be identiﬁed.
These above constraints make building a traditional detec-
tion system for domain ownership changes extremely difﬁcult.
Therefore, we chose to create an efﬁcient and highly scalable
algorithm that helps ﬁnd potential domain ownership changes
using only DNS information.
II. BACKGROUND
We deﬁne the term residual trust as the historical reputation
of a domain that is implicitly transferred with changes in
ownership. In this section, we detail the process governing
a domain’s expiration. In the following sections, we explain
how these expired domains can be exploited by abusing the
domain’s residual trust.
registered for a period of one or more years, after which the
registrant (i.e., owner) has the option to renew.
As a domain registration approaches its expiration date, it
begins the formal ICANN expiration process. For generic top-
level domains (such as .com, .net, and .info) the expiration
process is governed by ICANN’s Expired Registration Recov-
ery Policy (ERRP) [33]. We summarize this process in Figure 1
and discuss the details below.
ICANN’s expiration process is intended to address several
past and potential abuses such as “domain sniping”, whereby
a vigilant “domainer” would register the domain seconds after
expiration and extort a price to transfer the domain back to the
former owner. Under the current process, domainers hoping to
speculate on expired and lapsed domains must now wait until
the release event, giving the current registrant time to renew
the registration even after the domain expires.
Speciﬁcally, the ERRP requires registrars attempt to notify
the lapsed owners (twice prior to expiration, once after).
However, in practice, many owners cannot be reached due
to a variety of reasons including inaccurate registration in-
formation, general neglect, or “tucked” domains. The latter
reason, tucked domains, refers to situations where the contact
information for the domain resides entirely under the expiring
DNS zone itself. For instance, the registrar contact information,
WHOIS information, and start of authority SOA RNAME [38]
may be entirely under the expiring zone.
After the domain expires,
the registrar will delete the
to enter a 30-day
domain from the TLD zone causing it
Redemption Grace Period (RGP). Typically, deletion occurs
within 1–45 days after expiration, but the exact length of time
may vary due to extenuating circumstances or provisions in
the myriad registrar and registry agreements. While in the
grace period, the expired domain may still be renewed by the
previous registrant, but this is typically at a higher cost. The
domain is released ﬁve days following the conclusion of the
RGP and becomes available for re-registration by others.
There are other variations of the domain expiration process.
For example, the Canadian Internet Registration Association
uses a “To Be Released” (TBR) process where expiring
domains are listed along with all homonyms. For example,
cardreaders.ca is TBR listed along with all accented
variations such as c¸ardreaders.ca, c´ardreaders.ca,
and other permutations. The 30-day process includes a short
advance bid auction followed by general release.
Since many expiring domains are valuable brands, large
their resources to attempt
groups of “drop-catchers” pool
registration in the ﬁrst seconds after release. In order to prevent
DDoS-style events against the registries, many providers stag-
ger the release of expiring domains and publish the speciﬁc
hour (and often the speciﬁc minute) during which a given do-
main will become available. Since valuable dropped domains
are generally acquired within seconds, this strategy minimizes
the period over which large volumes of registration attempts
are directed against the registry.
Domain names are registered, owned, and expired using
processes created by Internet Corporation for Assigned Names
and Numbers (ICANN) in conjunction with registry operators
and registrars. With a few exceptions, domains are typically
Despite the post-expiration deletion phase, during which
the domain is typically unreachable, third party users will
often still attempt to connect to the domain. Increasingly, these
connections are through automated tools, and users are often
692692
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 



 


!



 





!


!


Fig. 1: Timeline of a domain expiration.
unaware the domain is even absent from DNS. For example,
operating systems may attempt to update installed packages
through an automated (e.g., cron, launchd) process. Browser
plugins may contact home sites upon application startup.
Software sharing tools may create connections to numerous
ﬁle sharing sites on startup in order to obtain timely updates
and routing tables stored in distributed hash tables. All of the
domains associated with these automated activities can and do
expire. Therefore, the party acquiring the expired domain has
thousands and even millions of users contacting the site. We
discuss speciﬁc examples and the security implications of this
phenomenon in the next section.
III. ABUSING RESIDUAL TRUST
In this section, we discuss ﬁve real world examples of
residual trust abuse that exploit expired domains previously
used for a variety of Internet functions and services—including
university DNS servers, CIDR allocations from Regional
Internet Registries (RIRs), browser extensions, open source
software, and promotional media content. These case studies
demonstrate the unintended consequences that result from the
residual trust placed upon domains by both users and systems.
Our goal is to introduce the reader to the scope and severity
of the problems caused by expired domains with concrete
examples. Furthermore, these examples demonstrate that many
seemingly disparate security issues actually share a common
underlying cause: residual trust in domains.
A. Expired Nameserver Domains
In our ﬁrst example, one of the DNS nameserver domains
for the Benedictine University expired—potentially leaking
sensitive university emails to the domain’s new owners. Ac-
cording to our passive DNS sources, the ben.edu domain
owned by Benedictine University used the following name-
servers, among others, in 2012:
ben.edu. IN NS ns1.bobbroadband.com.
ben.edu. IN NS ns2.bobbroadband.com.
the expiration of bobbroadband.com did not disrupt res-
olution of ben.edu as other DNS authorities were still
available. Then, on October 25, 2012, the nameservers for
bobbroadband.com were switched to the following:
bobbroadband.com. IN NS ns1.pendingrenewaldeletion.com.
bobbroadband.com. IN NS ns2.pendingrenewaldeletion.com.
The zone pendingrenewaldeletion.com is a spe-
cial zone used by the registrar to manage the ﬁnal stages of
the domain through to the redemption grace period. The reader
should note that the redemption grace period (described in
Section II) is designed to cause an outage as a ﬁnal way
to notify a domain owner of an expiration. In this case,
however, the redemption grace period process did not disrupt
the university’s DNS because other nameservers were still
providing service. Ironically, the resiliency of DNS prevented
the redemption grace period process from providing one last
notice-through-outage to users.
After the domain expired completely, it was purchased
by a search engine optimization (SEO) company that then
responded to all domain queries with a wild-card answer. This
directed all trafﬁc destined for ben.edu (e.g., HTTP trafﬁc,
email, etc.) to an advertising site. These events are summarized
in Figure 2.
This change is especially subtle because it was the domain
of one of the nameservers for ben.edu that expired and not
the university’s own DNS record. Furthermore, the university
still had other nameservers that would direct trafﬁc to the
school’s servers, preventing the outage from occurring after
every TTL for a given record. Thus, the outage intermittently
manifested itself only if the nameserver handling a resolution
was the one controlled by the SEO company—not one of the
remaining authorities operated by the school.
Given the legal protections generally afforded to student
emails, the ad company likely had no right to the trafﬁc despite
owning the domain. Clearly, there existed residual trust in
the expired bobbroadband.com domain since an entire
university depended upon it.
In other words, the hosts under bobbroadband.com
provided secondary NS service for the university. It is com-
mon for organizations to rely on secondary DNS services
from other organizations, often in different TLDs, to provide
power and geographic diversity for their DNS. Consequently,
In a subsequent survey of the edu TLD, we identiﬁed
nearly a hundred expired zones under the TLD. We offered our
survey results of possible outages, similar to ben.edu, to the
DNS community. An enterprise DNS company now provides
secondary services for schools that formerly relied on expired
693693
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 






























Fig. 2: Residual Trust Exploitation in University DNS Servers
or expiring secondary nameservers. While the problems caused
in this example were many, the underlying cause was simple:
residual trust in domains.
rely on domains. Consequently, possession of a domain is often
sufﬁcient to demonstrate ownership of RIR CIDR allocations.
B. Expired Email Domains
In our second case study, we show how expired domain
names could affect Regional Internet Registries (RIRs) op-
erators. The RIRs locally administer the allocation of IP
addresses [31] and maintain a database of which individuals
have been allocated a speciﬁc Classless Inter-Domain Routing
(CIDR) network. Stolen or hijacked RIR credentials can,
therefore, lead to serious security incidents.
Account information for the RIR is protected using email as
a trust anchor, and therefore, trust is effectively placed in who-
ever owns the domain speciﬁed by an email address. A simple
check of the RIR databases yields all of the email addresses
for CIDR operators, and registration checks on these domains
indicated that hundreds of technical and administrative point-
of-contact (PoC) listings were under expired domains.1
In all cases of expired contact details, we found either
the notify or abuse-mailbox ﬁelds for inetnum and
aut-num RIR objects contained emails under expired do-
mains. One could simply register these domains, request a
password reset, and log into the management
interface to
manage the allocated CIDRs. Indeed, there are several cases
where this technique was abused to send spam [47].
We were in the process of notifying the various RIRs of
our discovery when other researchers made public a technical
report on this general problem [44]. Their work focused just
on RIR objects, but we believe it supports our general focus
on techniques to identify and manage expired domains. We
continue to work through our RIR notiﬁcation process and,
therefore, omit listing the affected domains.
Like the previous case study, the underlying cause of this
problem is residual trust. Email is regularly used as a trust
anchor for online services and email addresses fundamentally
C. Expired Browser-Related Domains
Residual trust also offers an avenue for exploiting software.
For example, many browser plugins contact one or more
domains on startup to load both settings and content. To
quantify this problem, we inspected approximately forty thou-
sand plugins (many with different versions) from the Mozilla
store. Speciﬁcally, we examined the online credentials of the
authors, sites contacted by the plugins, and the author’s contact
information in the XPI manifest ﬁles. We found some 159
expired domains available for immediate registration.
Anyone could register one of these expired domains used
by popular web browser plugins, some with tens of thousands
of installations. This creates the possibility for a new owner to
push updates to the plugin or to potentially take ownership of
the associated developer account. While users may have trusted
the original plugin developer, this trust should not extend to the
new owners of the domains used by the plugin. This problem
is exacerbated by the fact that users will be unaware of such
ownership changes. Given that browser plugins can modify
browser settings and behavior, this leads to potential security
problems that are difﬁcult to diagnose.
Our goal here is not to simply identify another browser
plugin vulnerability. Other researchers have addressed other
security aspects of browser extensions [21], [22], [35], [24]
by analyzing the behavior and structure of browser plugins.
Indeed, our analysis of this space was aided by the tools
and frameworks noted above. Rather, this case identiﬁes yet
another instance of the unintended consequences caused by
residual
in domains. While existing work may stop
potential abuse of this vector, we argue that the change in
ownership of plugin domains is better dealt with by addressing
the root cause: residual trust in domains.
trust
D. Expired Open Source Software Domains
1To verify the expiration of each domain, we used a domain reseller account
to access the parent registry via Extensible Provisioning Protocol (EPP) [32].
This step was necessary as DNS lookups resulting in RCODE=3 or NXDOMAIN
merely indicate the absence of records in a zone, not the availability of the
record for registration. For a discussion of EPP use, we refer the reader to [30].
Residual trust from domain expirations also affects soft-
ware repositories. Recently, the photo editing tool Gimp failed
to renew its domain name, gimp.org. Fortunately, users
noted the outage (days after the failed registration) [45] and
694694
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 
reported the problem. This allowed the domain to be recovered
during the grace period—before a malicious registrant could
obtain the domain and offer corrupted versions of the software.
A more disquieting outcome was seen in the recent “De-
bian multimedia” episode. For a while, an unafﬁliated party
operated an unofﬁcial Debian repository mirror of multime-
dia applications (many of which did not meet the license
requirements for the ofﬁcial Debian distribution). The do-
main debian-multimedia.org became popular and was
linked to by various blogs, HOWTO articles, and software
sites. Consequently,
the site was added to the Advanced
Packaging Tool mirror list for many Debian users. After
some discussion with the maintainers of the ofﬁcial Debian
distribution, the debian-multimedia.org owner agreed
to create a new domain called deb-multimedia.org to
avoid any indication of ofﬁcial endorsement. The previous
debian-multimedia.org site later expired and was reg-
istered by a party unknown to the Debian community.
In effect,
the new site owner had the ability to push
software updates. This capability could be used to offer updates
for even non-multimedia related packages such as the kernel or
the base system. While a repository key system offered users
the option to protect their updates, many users may choose
to ignore warnings or may not have installed a key for the
old site. This risk compelled the Debian maintainers to release
a warning to end users instructing them to manually remove
the old repository domain [48]. The notice alerted us to the
problem, which we diagnosed as yet another symptom of a
larger problem: residual trust in domains.
As noted above, there are protections against abuses in
this dimension: software signing,
local mirrors, staggered
distributions in networks, rollbacks, and the like. But it is
not clear if these solutions can be universally adopted by end
users—many of whom simply wanted non-free multimedia
software and followed well-intentioned but incomplete Internet
resources. Instead of addressing the speciﬁcs of this challeng-
ing security area (the signing and veriﬁcation of distributed
software systems), we argue for a root-cause treatment of the
problem: identifying changes in ownership of expired domains
with residual trust.
E. Expired Spam Domains
In the previous cases studies, we examined cases where
positive residual trust could be abused for malicious purposes,
but we have yet to discuss the implications of domains carrying
negative residual trust. Similar to benign domains, domains
used for abuse often expire, and when this happens, they can
be registered by new owners intending to use them for non-
abusive purposes. But what happens when the new owner goes
to share that newly purchased domain? Not surprisingly, the
new owner may be censored by the same automatic safeguards
put in place to protect online communities. Most maintainers
of security lists or products will be completely unaware of
ownership changes, and it may take a considerable amount of
time before a domain is reclassiﬁed as non-abusive.
A public instance of this happened back in 2013 when
Kirk Cameron released the ﬁlm Unstoppable, a Christian
movie targeting religious moviegoers [28]. A domain was
purchased to market the ﬁlm on the Internet, but this domain
Dataset Cardinalities
DG
DM
DB
179,326,265
6,112,964
320,009
DM ∪ DB
6,395,634
Datasets
B
A
∩ DB
DG
∩ DM
DG
DM ∩ DB
DG
∩ (DM ∪ DB)
Dataset Intersections
A ∩ B
%A
0.1% 101,322
0.2% 292,494
0.1%
8,075
0.2% 385,741
%B
31.7%
4.8%
2.5%
6.0%
TABLE I: In addition to the relative sizes of each set, this
ﬁgure shows the relationships between the datasets of expired
DG, malware DM , and public blacklist DB domains.
had previously been used to send spam—a fact presumably
unknown the ﬁlm’s creators. Consequently, when this domain
was used to market the ﬁlm on Facebook, it was blocked
by Facebook’s automated spam detection systems. This led
to heavily publicized outcries of censorship by the movie’s
producer and fans. Even after disclosing that the domain had
been blocked by their automated spam detection systems,
numerous articles decrying Facebook’s censorship practices
remained without update. Such claims of censorship, even after
proven false, are a risk and a liability for a social network with
millions of users of differing beliefs and world views.
Ultimately, this is yet another unintended consequence of
the residual trust placed in domains. This incident could have
been prevented if there were better systems in place to evaluate
the trust associated with domains. Such systems could inform
potential registrants of a domain’s history before purchase or
update security products after domain ownership changes.
IV. MEASURING RESIDUAL TRUST ABUSE
In this section, we take a step back from looking at the
speciﬁc cases of abuse and instead analyze the problem of
residual trust abuse at scale. In particular, we analyze expired
domains and malicious re-registrations from the past six years
(2009–2015). We aggregate data from public blacklists, mal-
ware feeds, gTLD zone ﬁles, and other sources to measure the
scope and growth of residual trust abuse. In summary:
• Measuring Scope. To measure scope, we identify and
characterize expired domains associated with mali-
cious behavior. In particular, we focus on expired
domain names found on public blacklists or resolved
by malware over the last six years. Our goal, in part,
is to quantify the extent to which expired domains are
exploited via malicious re-registration.
• Measuring Growth. For growth, we study the change
in residual trust abuse over time by leveraging the
temporal properties of our dataset. We measure when
the domains expired and when they were used for
abuse, allowing us to calculate the number of active
instances of residual trust abuse.
Before diving into the results, we begin with a short discussion
of the datasets used for our measurement study.
695695
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:15:05 UTC from IEEE Xplore.  Restrictions apply. 
A. Measurement Datasets
Restricting our observation period to 2009–2015, we focus
on the domains that were (i) observed to expire, (ii) placed on a
public blacklist, or (iii) resolved by malware. The intersection
between domains that expired and that were used for abuse
yields sets of domains that are likely targets of residual trust
abuse—possibly resulting in a malicious re-registration. In the
following sections, we deﬁne these three sets of domains and
provide greater detail about their contents.
1) Expired domains (DG): We calculated the set of expired
domains DG by comparing successive gTLD zone transfers
and recording removals. While the removal of a domain from
a zone is a strong indicator of expiration, we further vetted
such domains through the Extensible Provisioning Protocol
(EPP) [32] using the domain reseller account noted in Sec-
tion III. Finally, we augmented DG with data obtained from a
commercial drop-catch registration service [12].
Our DG set consists of expired domains spanning Novem-
ber 2008 to July 2015 and contains 179,326,265 unique
domains. Most commonly, the DG domains expired due to the
registrant’s failure to re-register the domain. In a few cases, the
domain changed ownership due to a trademark dispute [34],
suspension, or registry action stemming from a court order.
2) Blacklist domains (DB): The set DB is an aggregation
of eight public blacklists (Table II) collected from December
2009 to July 2015. As such,
includes several different
types of malicious behavior from botnets to drive-by down-
loads. Importantly, DB represents a human-curated list of
domains associated with undesirable behavior. In total, there
are 320,009 unique domains in this set. We use temporal
information from our sources to determine whether a domain
was added to a blacklist (DB) before or after it expired (DG).
it
3) Malware domains (DM ): DM is a set of domains
known to have been queried by malware. This set is compiled
from three dynamic malware execution feeds: one academic
and two commercial. These frameworks employ dynamic
analysis to derive network and system indicators from bina-
ries. These indicators often include URLs used for malicious
purposes, e.g., command and control or advertisement fraud.
This dataset also contains temporal information for the
malware execution (i.e., timestamp and DNS query), allowing
us to determine whether the domain was used by malware
before or after its expiration. DM contains domains from seven
years, occurring between the beginning of 2009 and July 2015,
of malware execution traces from the aforementioned feeds and
contains 6,112,964 unique domain names in total.
While not a guarantee of maliciousness,
the domains
logged by these systems adds a useful perspective to our analy-
sis. This is especially true for those domains that appeared in a
dynamic analysis trace after an ownership change. The reader
should perceive this DM set as an indicator, not a guarantee,
of abusive behavior.
4) Potentially abused expired domains (DZ ): Finally, we
deﬁne the set of all domains that expired and were potential
Target
Malware, C&C.
Malware.
Blacklist
Abuse.ch
Malware DL
Blackhole DNS Malware, Spyware.
sagadc
hphosts
SANS
itmate
driveby
Malware, Fraud, SPAM.
Malware, Fraud, Ad tracking.
Aggregate list.
Malicious Webpages.
Drive-by downloads.
Source
[5]
[13]
[6]
[10]
[8]
[11]
[9]
[7]
TABLE II: Blacklist sources for DB.
Num. of Domains
Avg. Days
Expired Before Abuse
DZ DG ∩ DM DG ∩ DB
27,758
692
238,279
911
263,847
888
Abused Before Expiration
DZ DG ∩ DM DG ∩ DB
73,564
340
54,215
397
123,396
364
Num. of Domains
Avg. Days
TABLE III: A breakdown of how many domains expired before
and after abuse for expired blacklist (DG ∩ DB), malware
(DG ∩ DM ), and all abusive (DZ ) domains—as well as the
average number of days between abuse and expiration.
targets of residual trust abuse as DZ = DG ∩ (DM ∪ DB).2
In the context of this study, DZ acts as an upper bound on
the number of expired domains witnessed between 2009 and
2015 that appeared on human-curated blacklists or that were
resolved by malware. A summary describing the relationships
between each of the above datasets can be seen in Table I. In
total, DZ comprises 385,741 domains.
B. Measuring Active Residual Trust Abuse
In order to measure active instances of residual trust abuse,
we focus on domains that have expired (DG) and also appear
on blacklists (DB) or are resolved by malware (DM ). This set,
DZ , contains domains that are likely candidates for residual
trust abuse through malicious re-registration of the domain.
While the majority, 292,494 (75.8%), of the domains in DZ
were associated with malware resolutions, almost a third,
101,322 (31.7%), appeared on at least one hand-curated public
blacklist. These numbers indicate that a substantial portion
of the expired domains were manually linked with abusive
behavior. This raises an interesting question. Did the expiration
occur before or after abuse?