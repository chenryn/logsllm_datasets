    libshella_3.0.0.0.so:A54EF614 00 10 A0 E3 MOV             R1, #0
    libshella_3.0.0.0.so:A54EF618 2B F8 FF EB BL              memset_0
    ;将var_810和var_814置0
    ;将dword_A54F1008置存进变量var_C
    libshella_3.0.0.0.so:A54EF61C 00 30 A0 E3 MOV             R3, #0
    libshella_3.0.0.0.so:A54EF620 10 38 0B E5 STR             R3, [R11,#var_810]
    libshella_3.0.0.0.so:A54EF624 00 30 A0 E3 MOV             R3, #0
    libshella_3.0.0.0.so:A54EF628 14 38 0B E5 STR             R3, [R11,#var_814]
    libshella_3.0.0.0.so:A54EF62C 10 31 9F E5 LDR             R3, =(dword_A54F1008 - 0xA54EF638)
    libshella_3.0.0.0.so:A54EF630 03 30 8F E0 ADD             R3, PC, R3 ; dword_A54F1008
    libshella_3.0.0.0.so:A54EF634 00 30 93 E5 LDR             R3, [R3]
    libshella_3.0.0.0.so:A54EF638 0C 30 0B E5 STR             R3, [R11,#var_C]
    libshella_3.0.0.0.so:A54EF63C 33 00 00 EA B               loc_A54EF710
### while循环
    libshella_3.0.0.0.so:A54EF640             ; ---------------------------------------------------------------------------    libshella_3.0.0.0.so:A54EF640
    libshella_3.0.0.0.so:A54EF640             loc_A54EF640                            ; CODE XREF: sub_A54EF5B4+16Cj
    ;2.while循环体
    ;将我们在栈上申请的第一个0x400字节空间的栈指针作为参数传入fgets中，来存从输入流中获取的数据
    libshella_3.0.0.0.so:A54EF640 01 3B 4B E2 SUB             R3, R11, #-var_400
    libshella_3.0.0.0.so:A54EF644 04 30 43 E2 SUB             R3, R3, #4
    libshella_3.0.0.0.so:A54EF648 08 30 43 E2 SUB             R3, R3, #8
    libshella_3.0.0.0.so:A54EF64C 03 00 A0 E1 MOV             R0, R3
    libshella_3.0.0.0.so:A54EF650 01 1B A0 E3 MOV             R1, #0x400
    libshella_3.0.0.0.so:A54EF654 08 20 1B E5 LDR             R2, [R11,#var_8]
    libshella_3.0.0.0.so:A54EF658 45 F8 FF EB BL              fgets
    ;将var_40C地址赋给R2
    ;将var_810地址赋给R3
    ;将var_814地址赋给R12
    ;将var_80C地址赋给var_834(SP)、var_830(SP+4)、var_82C(SP+8)、var_828(SP+C)
    ;将var_818赋给var_824
    ;调用sscanf(var_40C, "%lx-%lx %s %s %s %s %s", &var_810, &var_814, var_834, var_830, var_82C, var_828, var_824);
    libshella_3.0.0.0.so:A54EF65C 01 2B 4B E2 SUB             R2, R11, #-var_400
    libshella_3.0.0.0.so:A54EF660 04 20 42 E2 SUB             R2, R2, #4
    libshella_3.0.0.0.so:A54EF664 08 20 42 E2 SUB             R2, R2, #8
    libshella_3.0.0.0.so:A54EF668 02 3B 4B E2 SUB             R3, R11, #-var_800
    libshella_3.0.0.0.so:A54EF66C 04 30 43 E2 SUB             R3, R3, #4
    libshella_3.0.0.0.so:A54EF670 0C 30 43 E2 SUB             R3, R3, #0xC
    libshella_3.0.0.0.so:A54EF674 81 CE 4B E2 SUB             R12, R11, #-var_810
    libshella_3.0.0.0.so:A54EF678 04 C0 4C E2 SUB             R12, R12, #4
    libshella_3.0.0.0.so:A54EF67C 02 1B 4B E2 SUB             R1, R11, #-var_800
    libshella_3.0.0.0.so:A54EF680 04 10 41 E2 SUB             R1, R1, #4
    libshella_3.0.0.0.so:A54EF684 08 10 41 E2 SUB             R1, R1, #8
    libshella_3.0.0.0.so:A54EF688 00 10 8D E5 STR             R1, [SP,#0x834+var_834]
    libshella_3.0.0.0.so:A54EF68C 02 1B 4B E2 SUB             R1, R11, #-var_800
    libshella_3.0.0.0.so:A54EF690 04 10 41 E2 SUB             R1, R1, #4
    libshella_3.0.0.0.so:A54EF694 08 10 41 E2 SUB             R1, R1, #8
    libshella_3.0.0.0.so:A54EF698 04 10 8D E5 STR             R1, [SP,#0x834+var_830]
    libshella_3.0.0.0.so:A54EF69C 02 1B 4B E2 SUB             R1, R11, #-var_800
    libshella_3.0.0.0.so:A54EF6A0 04 10 41 E2 SUB             R1, R1, #4
    libshella_3.0.0.0.so:A54EF6A4 08 10 41 E2 SUB             R1, R1, #8
    libshella_3.0.0.0.so:A54EF6A8 08 10 8D E5 STR             R1, [SP,#0x834+var_82C]
    libshella_3.0.0.0.so:A54EF6AC 02 1B 4B E2 SUB             R1, R11, #-var_800
    libshella_3.0.0.0.so:A54EF6B0 04 10 41 E2 SUB             R1, R1, #4
    libshella_3.0.0.0.so:A54EF6B4 08 10 41 E2 SUB             R1, R1, #8
    libshella_3.0.0.0.so:A54EF6B8 0C 10 8D E5 STR             R1, [SP,#0x834+var_828]
    libshella_3.0.0.0.so:A54EF6BC 18 18 1B E5 LDR             R1, [R11,#var_818]
    libshella_3.0.0.0.so:A54EF6C0 10 10 8D E5 STR             R1, [SP,#0x834+var_824]
    libshella_3.0.0.0.so:A54EF6C4 02 00 A0 E1 MOV             R0, R2
    libshella_3.0.0.0.so:A54EF6C8 78 20 9F E5 LDR             R2, =(aLxLxSSSSS - 0xA54EF6D4)
    libshella_3.0.0.0.so:A54EF6CC 02 20 8F E0 ADD             R2, PC, R2              ; "%lx-%lx %s %s %s %s %s"
    libshella_3.0.0.0.so:A54EF6D0 02 10 A0 E1 MOV             R1, R2
    libshella_3.0.0.0.so:A54EF6D4 03 20 A0 E1 MOV             R2, R3
    libshella_3.0.0.0.so:A54EF6D8 0C 30 A0 E1 MOV             R3, R12
    libshella_3.0.0.0.so:A54EF6DC 27 F8 FF EB BL              sscanf
    ;大于或者小于等于就跳转
    libshella_3.0.0.0.so:A54EF6E0 10 28 1B E5 LDR             R2, [R11,#var_810]
    libshella_3.0.0.0.so:A54EF6E4 0C 30 1B E5 LDR             R3, [R11,#var_C]
    libshella_3.0.0.0.so:A54EF6E8 03 00 52 E1 CMP             R2, R3
    libshella_3.0.0.0.so:A54EF6EC 07 00 00 8A BHI             loc_A54EF710
    libshella_3.0.0.0.so:A54EF6F0 14 38 1B E5 LDR             R3, [R11,#var_814]
    libshella_3.0.0.0.so:A54EF6F4 0C 20 1B E5 LDR             R2, [R11,#var_C]
    libshella_3.0.0.0.so:A54EF6F8 03 00 52 E1 CMP             R2, R3
    libshella_3.0.0.0.so:A54EF6FC 03 00 00 2A BCS             loc_A54EF710
    libshella_3.0.0.0.so:A54EF700 08 00 1B E5 LDR             R0, [R11,#var_8]
    libshella_3.0.0.0.so:A54EF704 20 F8 FF EB BL              unk_A54ED78C
    libshella_3.0.0.0.so:A54EF708 00 30 A0 E3 MOV             R3, #0
    libshella_3.0.0.0.so:A54EF70C 07 00 00 EA B               loc_A54EF730
    libshella_3.0.0.0.so:A54EF710             ; ---------------------------------------------------------------------------    libshella_3.0.0.0.so:A54EF710
    libshella_3.0.0.0.so:A54EF710             loc_A54EF710                            ; CODE XREF: sub_A54EF5B4+88j
    libshella_3.0.0.0.so:A54EF710                                                     ; sub_A54EF5B4+138j ...
    ;1.while条件判断
    ;判断var_8代表的文件描述符是否指向了文件结束标志
    libshella_3.0.0.0.so:A54EF710 08 00 1B E5 LDR             R0, [R11,#var_8]
    libshella_3.0.0.0.so:A54EF714 1F F8 FF EB BL              feof
    libshella_3.0.0.0.so:A54EF718 00 30 A0 E1 MOV             R3, R0
    libshella_3.0.0.0.so:A54EF71C 00 00 53 E3 CMP             R3, #0
    libshella_3.0.0.0.so:A54EF720 C6 FF FF 0A BEQ             loc_A54EF640
    libshella_3.0.0.0.so:A54EF724 08 00 1B E5 LDR             R0, [R11,#var_8]
    libshella_3.0.0.0.so:A54EF728 17 F8 FF EB BL              fclose
    libshella_3.0.0.0.so:A54EF72C 00 30 E0 E3 MOV             R3, #0xFFFFFFFF
    libshella_3.0.0.0.so:A54EF730
    libshella_3.0.0.0.so:A54EF730             loc_A54EF730                            ; CODE XREF: sub_A54EF5B4+158j
    libshella_3.0.0.0.so:A54EF730 03 00 A0 E1 MOV             R0, R3
    libshella_3.0.0.0.so:A54EF734 04 D0 4B E2 SUB             SP, R11, #4
    libshella_3.0.0.0.so:A54EF738 00 88 BD E8 LDMFD           SP!, {R11,PC}
    libshella_3.0.0.0.so:A54EF738             ; End of function sub_A54EF5B4
### 伪代码
    var_8 = fopen("/proc/self/maps", "r");
    memset(&var_40C ,0, 0x400);
    memset(&var_80C ,0, 0x400);
    var_C = dword_A54F1008; //libshella_3.0.0.0.so内存基址往后偏移0x1000的位置，也就是解密开始的位置
    while(feof(var_8)==0)
    {
        fgets(&var_40C, 0x400; var_8);
        sscanf(var_40C, "%lx-%lx %s %s %s %s %s", &var_810, &var_814, var_834, var_830, var_82C, var_828, var_824);
        if(var_810>var_C || var_814 <= var_C)
        {
            fclose(var_8);
            return 0;
        }
    }
    fclose(var_8);
    return 1;
## 解密section
### 初始化
​ 参数入栈：so路径，一个常量
    STMFD           SP!, {R11,LR}
    ADD             R11, SP, #4
    SUB             SP, SP, #0x22C0
    SUB             SP, SP, #0x28
    LDR             R3, =0xFFFFDD2C         ;0x22d4
    SUB             R2, R11, #-var_4
    STR             R0, [R2,R3]
    LDR             R3, =0xFFFFDD28
    SUB             R12, R11, #-var_4
    STR             R1, [R12,R3]
### 打印sdk_version
    SUB             R2, R11, #-var_A0
    MOV             R3, #0x40
    MOV             R0, R2
    MOV             R1, #0
    MOV             R2, R3
    BL              memset_0
    SUB             R3, R11, #-var_A0
    LDR             R2, =(aRo_build_versi - 0xB391868C)
    ADD             R2, PC, R2 ; "ro.build.version.sdk"
    MOV             R0, R2
    MOV             R1, R3
    BL              property_get
    SUB             R3, R11, #-var_A0
    MOV             R0, R3
    BL              atoi
    MOV             R3, R0
    MOV             R2, R3
    LDR             R3, =(dword_B391B004 - 0xB39186B4)
    ADD             R3, PC, R3 ; dword_B391B004
    STR             R2, [R3]
    LDR             R3, =(dword_B391B004 - 0xB39186C0)
    ADD             R3, PC, R3 ; dword_B391B004
    LDR             R3, [R3]
    MOV             R0, #6
    LDR             R2, =(aTxtag - 0xB39186D0)
    ADD             R2, PC, R2 ; "txtag"
    MOV             R1, R2
    LDR             R2, =(aVersionD - 0xB39186DC)
    ADD             R2, PC, R2 ; "version:%d"
    BL              printf_log
### do-while，打开本地so文件
    loc_B39186DC
    LDR             R3, =0xFFFFDD2C
    SUB             R1, R11, #-var_4
    LDR             R0, [R1,R3]
    MOV             R1, #0x80000
    BL              open
    STR             R0, [R11,#var_28]
    LDR             R3, [R11,#var_28]
    CMN             R3, #1
    BEQ             loc_B39186DC
### for循环
    SUB             R2, R11, #-var_F8