Meta-Event 10: [P3,N2,V1,M2]
User action: ”id” command
System reaction 1: executes id program
System reaction 2: checks user identity
System response: answer to id
manifestations
Syslog
Tcp
Syscall
weak
-
strong
-
no
-
strong
-
strong
-
no
-
-
-
weak
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
weak
-
strong
-
-
-
strong
-
strong
-
-
-
-
-
weak
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
strong
-
strong
-
strong
-
strong
-
strong
-
strong
-
strong
-
strong
strong
no
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
there are no entries from the actual system violation. The
stack operations are invisible in these logs; only the effects
of the commands in the buffer overﬂow code can be seen.
It is not obvious from the network trafﬁc log that the started
X11 session is caused by the attack, while it is striking in the
syscall logs that the tcpdump program changes its execution
behaviour drastically after receiving the attack packet. The
processes involved in the attack is tcpdump, which executes
“sh”, and “xterm”. Table 4 shows the events and presence
of attack manifestations for the Tcpdump attack.
Meta-event 1 and 2 are both good events, even if event
7
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Table 3. Summary of indicators and useful log data
for OpenSSH attack
#
Log elements
Event
Log
Table 5. Summary of indicators and useful log data
for the Tcpdump attack
Log
#
Log elements
Event
Indica-
tor class
[U4,C1]
E8(ua)
syslog
[U5,C2]
E8(ua)
[U4,C1]
E8(ua)
[U2,C1]
[U1,C1]
E8(s5)
E8(s1)
tcpdump
header
tcpdump w.
data
syscall name
syscall seq.
[U2,C3]
E8(s7)
syscall w. ret
[U1,C1]
[U1,C2]
[U1,C1]
[U1,C1]
[U1,C1]
[U1,C1]
[U1,C4]
[U1,C1]
[U1,C1]
[U1,C4]
E8(ua)
E8(ua)
E8(s1)
E8(s1)
E6(ua)
E6(ua)
E6(ua)
E7(ua)
E7(ua)
E7(ua)
syscall w. arg
syscall w. arg
syscall w. arg
syscall w. arg
syscall w. arg
syscall w. arg
syscall w. arg
syscall w. arg
syscall w. arg
syscall w. arg
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
program name(sshd, login), time
text(event, user, host)
src-port(ssh), TCP-ﬂags, srcIP,
dstIP, dst-port
src-port(ssh), data
process name(login), setresuid()
process name(login), open(),
read(), fstat64(), old mmap(),
mprotect(), close()
process name(bash), getuid() (or
geteuid()) with return value + info
to see that bash was started from
login, with another user name: e.g.
process name(login), pid(login,
bash), execve(arg1,...), chdir(arg1)
process name(sshd), read(..,arg2,..)
process name(sshd), read(..,arg2,..),
open(arg1,...)
process name(login), open(arg1,...)
process name(login), read(..,arg2,..)
process name(bash), read(..,arg2,..)
process name(bash), read(..,arg2,..)
process name(sshd), write(..,arg2,..)
process name(bash), read(..,arg2,..)
process name(bash), read(..,arg2,..)
process name(sshd), write(..,arg2,..)
Table 4. Attack events for the Tcpdump attack
Attack events
Meta-Event 1: [P1,N2,V1,M1]
User action: Attack with wrong offset
System reaction 1: receive packet
System reaction 2: decode packet
System reaction 3: system overwrites return addr.
System reaction 4: system uses new return addr.
System reaction 5: tcpdump crash
System response: no response
Meta-Event 2: [P2,N1,V1,M1]
User action: Send buffer overﬂow AFS packet
System reaction 1: receive packet
System reaction 2: decode packet
System reaction 3: system overwrites return addr.
System reaction 4: system uses new return addr.
System reaction 5: system executes attack code
System reaction 6: Xterm with root shell started
System response: Xterm win. with root prompt
Meta-Event 3: [P3,N2,V2,M2]
User action: ”whoami” command
System reaction 1: executes whoami program
System reaction 2: checks user identity
System response: answer to whoami
Meta-Event 4: [P3,N2,V2,M2]
User action: ”id” command
System reaction 1: executes id program
System reaction 2: checks user identity
System response: answer to id
Presence of attack
manifestations
Syslog
Tcp
Syscall
no
no
no
no
no
no
-
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
no
strong
strong
no
no
no
strong
-
strong
strong
no
no
no
no
strong
strong
strong
no
no
strong
strong
no
no
strong
no
strong
no
no
no
strong
-
no
strong
no
no
no
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
strong
2 is slightly better since it is not necessary for the user to
try the attack with the wrong offset before he succeeds. We
have chosen to focus on the indicators for event 2 here. Ta-
ble 5 shows the classiﬁed indicator and the log elements
they require.
The ﬁrst indicator is used to check packet length on
incoming packets to port 7000. Probably, the length of
this packet exceeds the normal length. The second indi-
cator checks if the system answers the incoming packet to
8
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
Indica-
tor class
[U2,C1]
[U2,C2]
[U2,C1]
[U1,C1]
[U1,C2]
[U3,C1]
[U2,C1]
E2(ua)
E2(s1)
E2(s6)
E2(ua)
E2(s6)
E2(sr)
E2(s5)
tcpdump header
tcpdump header
tcpdump header
tcpdump w. data
tcpdump w. data
tcpdump w. data
syscall name
[U2,C1]
E2(s5)
syscall name
[U2,C1]
E2(s5)
syscall name
[U2,C1]
E2(s5)
syscall name
[U2,C1]
E2(s6)
syscall name
[U2,C2]
E2(s5)
syscall seq.
[(U2+)U3,
C1]