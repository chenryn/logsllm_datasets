title:PEACE: A Policy-Based Establishment of Ad-hoc Communities
author:Sye Loong Keoh and
Emil Lupu and
Morris Sloman
P EACE : A Policy-based Establishment of Ad-hoc Communities
Sye Loong Keoh, Emil Lupu and Morris Sloman
Department of Computing
Imperial College London
180, Queen’s Gate, London, SW7 2AZ, UK
{slk, e.c.lupu, m.sloman}@doc.ic.ac.uk
Abstract
Ad-hoc networks are perceived as communities of au-
tonomous devices that interconnect with each other. Typ-
ically, they have dynamic topologies and cannot rely on a
continuous connection to the Internet. Users’ devices often
do not have a priori knowledge of each other and cannot
rely upon pre-existing shared information. This introduces
difﬁcult security issues when attempting to provide authen-
tication, membership management and access control. De-
signing a framework which allows the secure establishment
and management of ad-hoc communities remains a signiﬁ-
cant challenge. In this paper, we propose a novel policy-
based security framework to facilitate the establishment,
evolution and management of mobile ad-hoc networks. We
introduce a community speciﬁcation, called doctrine, which
deﬁnes the roles of the participants in the community, the
characteristics that participants must exhibit in order to be
eligible to play a role, as well as the policies governing their
behaviour within the community. Based on the doctrine, we
propose a set of security protocols to bootstrap the commu-
nity, manage the membership, and govern the access to the
services provided by the participants. We have investigated
the impact of mobility on the proposed security protocols
and observed that the protocol is robust to changes in the
network topology.
1. Introduction
The proliferation of computing devices, which are be-
ing progressively embedded in the objects of everyday life,
gives rise to numerous interactions and collaborations be-
tween these devices. Applications rely increasingly upon
services provided by other computing devices and this
dependence is exacerbated when devices are mobile, au-
tonomous and interconnected through inherently unreliable
wireless links. For example, implanted or wearable medi-
cal devices on a patient collaborate in order to monitor the
healthcare of the individual; PDAs and laptops of different
persons can interact in an ad-hoc business meeting and vir-
tual organisations are frequently formed between businesses
to share resources. Ad-hoc networking (e.g. MANET)
is the platform that supports such collaborations, and the
primary motivation of this work is to provide a policy-
based security framework for establishing communities of
autonomous devices in the wireless environment.
There is little related work addressing the issue of how to
establish an ad-hoc network, determining who can partici-
pate and join the collaboration, what resources and services
are needed, and who can access these services. All these
issues are difﬁcult to solve because ad-hoc networks cannot
rely upon the availability of any ﬁxed network infrastruc-
ture. Thus, the provision of security services is difﬁcult as
the information available to the user is limited, e.g. Cer-
tiﬁcation Authorities (CAs) cannot be reached at all time.
Various security issues such as authentication, membership
management and access control to the resources shared in
the network need to be resolved. Some of these issues have
been addressed independently and prior research has mainly
focussed on the context of ad-hoc routing [24, 16, 14, 13],
middleware support [18], and communication infrastruc-
ture. However, few attempts have been made to address
authentication and access control issues in ad-hoc networks.
A security framework is needed to support the estab-
lishment, evolution and management of ad-hoc networks in
which users can have the assurance that their devices would
only interact with other devices that the user trusts to be
safe.
Interactions between devices need to be controlled
in order to prevent unauthorised access to system resources
and services. A policy-based approach is ﬂexible, scalable
and permits adaptation to changes in security requirements
and context of the ad-hoc network by dynamically loading
and removing policies from the system without interrupting
its functioning. In this paper, we propose a novel policy-
based security framework and a set of security protocols to
bootstrap an ad-hoc network, manage its membership, and
control access to the services provided by the participants.
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
We also show that the proposed solution is robust to changes
in the network topology.
The paper is organised as follows.
In section 2, we
present the notion of community in the context of ad-hoc
networks. In section 3, we describe our framework, while
section 4 outlines the protocols used to establish and man-
age an ad-hoc community. Section 5 describes the architec-
ture and presents some preliminary results. In section 6, we
describe related work, and this is followed by discussions
and future work in section 7. Section 8 concludes the paper.
2. Ad-hoc Communities
In socio-economic studies, the term community com-
monly refers to a group of people with common interests or
characteristics [31, 1] who live in the same locality [9, 1]
under the governance of a set of laws [8]; and that they in-
teract [19] with each other.
In the context of ad-hoc networking, we perceive an ad-
hoc network as a community of autonomous devices that
collaborate and share resources with each other. It is sim-
ilar to the virtual enclaves [30] that enables the sharing of
resources and services between several organisations. The
motivation for users to form a community stems from the
need to access resources and use services that they do not
have on their own. We ﬁrst present a deﬁnition of ad-hoc
communities and subsequently, we outline the properties of
an ad-hoc community with regards to this deﬁnition.
Deﬁnition 1. An ad-hoc community interconnects a
group of devices, maintains membership and ensures that
only entities, i.e., users or computing services, which pos-
sess certain credentials, attribute information and charac-
teristics can join the community (common characteristics).
The members of the community rely upon each other to pro-
vide services and share resources (interactions). These in-
teractions are regulated through a set of well-deﬁned rules
and policies (law) that govern the access to the services and
resources in the community.
2.1. Common Characteristics
The main characteristics of the ad-hoc communities we
seek to deﬁne are that behaviour within the community is
regulated through a set of policies and that only participants
who satisfy well deﬁned admission criteria can be admitted
in the community. An example of such communities are
disaster relief operations that require a coalition to be set up
among the police, ﬁre brigade, ambulance etc. and where
membership is restricted, in terms of the characteristics of
the users who can participate. This is inline with the notion
of regularity-based trust [22] that builds trust relationships
among the users in the community. Trust arises from the
fact that participants in the community know that all other
participants have satisﬁed the admission criteria speciﬁed
and, consequently, have the expectation that they will be-
have accordingly. The next section discusses the need for
policies to regulate the behaviour of the participants.
2.2. Policies or Law
Since the purpose of an ad-hoc community is to enable
interactions between its participants, it is thus important to
ensure that these interactions are governed by well-deﬁned
policies that deﬁne the rules for accessing services and re-
sources in the community. Policies are explicitly speciﬁed
and known to all the participants.
The rationale for explicitly specifying the rules or secu-
rity policies is to build trust between the participants. Trust
in this context derives from the fact that participants’ be-
haviour is expected to be consistent with both the charac-
teristics dictated by the admission criteria and the policies
governing the behaviour within the community. Typically,
the participants that form the community have to rely on
each other to provide the services that they do not have on
their own and usually, they do not have any a priori knowl-
edge about each other. As a result, collaborations among
them cannot be set up because they do not trust each other
to use their respective services and resources. Therefore,
there is a need for explicit speciﬁcation of policies for each
community. By knowing the policies, a user is aware of the
potential users that it might trust to interact with, the ser-
vices and resources that it has access to, and the policies it
must enforce in order to protect its resources and services.
3. A Model of Ad-hoc Communities
In this section, we present a model for ad-hoc communi-
ties. The community doctrine is a speciﬁcation that clearly
deﬁnes: the roles of the participants in the community, the
rules (or policies) governing their behaviour in terms of au-
thorisations, obligations and constraints which external en-
tities have to satisfy in order to join the community. Thus,
only the eligible users are allowed to participate in the com-
munity, and each of them is allocated a set of access priv-
ileges to use the resources and services provided by other
members. In addition, a set of protocols for the formation
and evolution of the community is required and forms an
integral part of the management of the community.
In essence, a doctrine is an information model that com-
prises tuples (cid:1)R, P, S, TK, Sig(cid:2) of a community, C, where:
• R - denotes the role types of the participating users in
the community.
• P - deﬁnes a set of policies that regulate the behaviour
of the participants assigned to the roles. Authori-
sation policies associate the permissions with roles,
Proceedings of the 20th Annual Computer Security Applications Conference (ACSAC’04) 
1063-9527/04 $ 20.00 IEEE 
while obligation policies are event-condition-action
rules that facilitate the adaptation and security man-
agement of the community.
• S - deﬁnes the constraints of the community. It is used
to specify security requirements, e.g. separation-of-
duty and cardinality constraints which must be pre-
served when the membership changes.
• TK - denotes public-keys of the credential issuers, e.g.
Certiﬁcation Authorities (CAs) and Attribute Authori-
ties (AAs).
• Sig - Each doctrine must be signed by its issuer in order
to preserve its integrity and authenticity.
The following scenario gives an example of an ad-hoc
community:
Alice is on a business trip from London to Paris. She
will have to spend two hours on the train. With a limited
number of songs on her PDA, she would like to engage in a
media ﬁles sharing activity, where she can exchange songs
with other passengers onboard. Most of her songs are
purchased from the iTunes Music Store and Napster.com.
She is a premium subscriber of both music stores, so she
has the privileges to download unlimited number of songs.
Therefore, the exchange of songs can only be performed
with other passengers who are the premium subscribers as
well, otherwise, there will be a breach of copyright issues.
She is also interested to browse the top stories of today’s
news, e.g. Avantgo news on PDAs if there are any news
services provided by other passengers on the train.
Typically, doctrines are speciﬁed by a variety of issuers.
In this scenario, EuroRail can issue a doctrine to enable
its passengers to set up communities on the train or alter-
natively any music providers. The doctrine can be used to
instantiate several communities with different participants
and each participant maintains a set of preferences specify-
ing the characteristics of the communities that it is willing
to participate in. The decision to join a community is based
on the attributes of the doctrine, e.g. whether the user trusts
the issuer of the doctrine, or the services which the user will
be allowed to access if it joins the community.
3.1. Role Types and User-Role Assignment Policies
The doctrine deﬁnes role types, R and user-role assign-
ment policies, U RA, so that access control permissions can
be associated with roles rather than individual identities.
Let R = {r1, ..., rn} be a set of role types of a community,
C, where there is a ﬁnite number, n ≥ 1.
In our scenario, communities can be established to fa-
cilitate the exchange of music ﬁles and news stories. Par-
ticipants of the community can be represented as three role
types, R = {premium user, normal user, news server}.
Each role type has a user-role assignment policy, U RA,
so that only authorised users are allowed to join the com-
munity in that role. In order to be assigned to a role type,
the user must possess the required attributes, e.g. be a sub-
scriber of a music provider, a member of AOL etc. This is
termed as credential requirement, cr as it designates the cre-
dentials or certiﬁcations that a user or a service must exhibit
in order to demonstrate that it possesses certain attributes or
characteristics. This could be the user’s position in an or-
ganisation, professional membership, etc.
Let E be a URA policy speciﬁed for each role type in
the community. E is expressed in disjunctive normal form
(DNF) where the predicates are made up of credential re-
quirements. Users have to present a set of credentials or at-
tribute certiﬁcates which will be checked against the URA
policy. If the URA policy is satisﬁed, the user is assigned to
the role type and an instance of the role is created.
As an example, the URA policy for the roles normal
user, premium user and news server can be deﬁned in the
corresponding DNF as follows:
Enormal = {SubscriberiT unes ∨ M emberAOL ∨
Subscribernapster}
Epremium = {P remiumiT unes ∨ P remiumnapster}
Enews = {P assengerEuroRail}
where only the subscribers of iTunes, napster or members
of AOL can join the community as normal user. To join
as a premium user, the user must be a premium subscriber
of either iTunes or napster, while any passenger who can
provide news service can join as news server.
A user can satisfy more than one URA policy and hence
can be assigned to more than one role in a community.