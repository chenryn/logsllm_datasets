---
**作者**: Daniel Oh  
**分类**: 容器与云  
**评论数据**: 无  
**统计**:
- 评论数: 0
- 收藏次数: 0
- 点赞数: 0
- 分享次数: 0
- 浏览量: 5782
**日期**: 2021-06-18 10:14:16  
**编辑推荐**: 否  
**摘要**: 一份关于开发和实施云原生（容器优先）软件的检查清单。  
**来源网址**: <https://opensource.com/article/20/1/cloud-native-software>  
**ID**: 13497  
**是否翻译**: 是  
**大图**: /data/attachment/album/202106/18/101348dcjg3u7wugo5uouw.jpg  
**永久链接**: /article-13497-1.html  
**图片**: /data/attachment/album/202106/18/101348dcjg3u7wugo5uouw.jpg.thumb.jpg  
**相关文章**: 无  
**审阅者**: wxy  
**选择者**: lujun9972  
**概要**: 一份关于开发和实施云原生（容器优先）软件的检查清单。  
**标签**:
- 云原生
- 容器
**缩略图**: 否  
**标题**: 云原生软件的 6 个要求  
**标题图片**: 是  
**翻译者**: geekpi  
**更新时间**: 2021-06-18 10:14:16

---

## 摘要
本文提供了一份关于开发和实施云原生（容器优先）软件的检查清单。

![](/data/attachment/album/202106/18/101348dcjg3u7wugo5uouw.jpg "团队检查清单")

多年来，单体应用一直是实现业务需求的标准企业架构。然而，随着云基础设施开始以规模和速度推动业务发展，这种局面发生了重大变化。应用架构也相应转变，以适应云原生应用、微服务、无服务器以及事件驱动的服务，这些服务运行在跨混合云和多云平台的不可变基础设施上。

### 云原生与 Kubernetes 的联系
根据 [云原生计算基金会 (CNCF)](https://github.com/cncf/toc/blob/master/DEFINITION.md) 的定义：

> “云原生技术使企业在现代动态环境中构建和运行可扩展的应用，如公共云、私有云和混合云。容器、服务网格、微服务、不可变基础设施和声明式 API 都是这种方法的典范。”

> “这些技术使得松散耦合的系统具有弹性、可管理和可观测性。结合强大的自动化，它们使工程师能够以最小的工作量频繁且可预测地进行重要变更。”

像 [Kubernetes](https://opensource.com/resources/what-is-kubernetes) 这样的容器编排平台允许 DevOps 团队建立不可变基础设施，以开发、部署和管理应用服务。现在，快速迭代的速度与业务需求保持一致。构建容器以在 Kubernetes 中运行的开发人员需要一个高效的工作环境。

### 云原生软件的要求
创建云原生应用架构需要哪些能力？开发人员将从中获得哪些好处？

虽然构建和架构云原生应用的方法有很多，但以下是一些需要考虑的关键方面：

- **运行时**: 更多地使用容器优先或 Kubernetes 原生语言编写，例如 Java、Node.js、Go、Python 和 Ruby。
- **安全性**: 在多云或混合云应用环境中部署和维护应用时，安全性至关重要，应作为环境的一部分。
- **可观测性**: 使用 Prometheus、Grafana 和 Kiali 等工具，通过提供实时指标和有关应用在云中的使用和行为的更多信息来增强可观测性。
- **效率**: 专注于极小的内存占用、更小的构件大小和快速启动时间，使应用可跨混合/多云平台移植。
- **互操作性**: 将云原生应用与能够满足上述要求的开源技术相结合，包括 Infinispan、MicroProfile、Hibernate、Kafka、Jaeger、Prometheus 等，以构建标准运行时架构。
- **DevOps/DevSecOps**: 这些方法论旨在持续部署到生产环境，与最小可行产品 (MVP) 一致，并将安全性作为工具的一部分。

### 让云原生具体化
云原生似乎是一个抽象的术语，但回顾一下定义并像开发人员一样思考可以使它更加具体。为了使云原生应用成功，它们需要包含一系列定义明确的组成部分。

你如何规划云原生应用的设计？请在评论中分享你的想法。

---

**作者**: [Daniel Oh](https://opensource.com/users/daniel-oh)  
**选题**: [lujun9972](https://github.com/lujun9972)  
**译者**: [geekpi](https://github.com/geekpi)  
**校对**: [wxy](https://github.com/wxy)  
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出。

---