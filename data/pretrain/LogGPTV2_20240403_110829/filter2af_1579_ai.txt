        call 5
        set_local 0
        i32.const 8
        call 5
        set_local 1
        i32.const 16
        call 5
        set_local 2
        i32.const 2672
        get_local 5
        i32.const 32
        call 2
        drop
        get_local 0
        call 1
        set_local 3
        get_local 1
        call 3
        drop
        i32.const 0
        set_local 6
        block  ;; label = @1
          loop  ;; label = @2
            get_local 6
            i32.const 16
            i32.eq
            br_if 1 (;@1;)
            get_local 2
            get_local 6
            i32.add
            get_local 0
            get_local 6
            i32.add
            i32.load8_u
            i32.store8
            get_local 6
            i32.const 1
            i32.add
            set_local 6
            br 0 (;@2;)
          end
        end
        get_local 5
        i32.const 32
        call 10
        set_local 4
        i32.const 0
        set_local 6
        block  ;; label = @1
          loop  ;; label = @2
            get_local 6
            i32.const 8
            i32.eq
            br_if 1 (;@1;)
            get_local 4
            get_local 6
            i32.add
            tee_local 5
            get_local 5
            i32.load8_u
            get_local 1
            get_local 6
            i32.add
            i32.load8_u
            i32.xor
            i32.store8
            get_local 6
            i32.add
            i32.load8_u
            i32.xor
            i32.store8
            get_local 6
            i32.const 1
            i32.add
            set_local 6
            br 0 (;@2;)
          end
        end
        get_local 1
        call 7
        get_local 4
        i32.const 16
        call 10
        set_local 1
        get_local 4
        call 7
        i32.const 0
        set_local 6
        block  ;; label = @1
          loop  ;; label = @2
            get_local 6
            i32.const 16
            i32.eq
            br_if 1 (;@1;)
            get_local 1
            get_local 6
            i32.add
            tee_local 5
            get_local 5
            i32.load8_u
            get_local 2
            get_local 6
            i32.add
            i32.load8_u
            i32.xor
            i32.store8
            get_local 6
            i32.const 1
            i32.add
            set_local 6
            br 0 (;@2;)
          end
        end
        get_local 2
        call 7
        get_local 1
        get_local 0
        i32.const 16
        i32.add
        get_local 3
        call 5
        tee_local 6
        get_local 3
        i32.const -16
        i32.add
        tee_local 2
        call 11
        i32.const 0
        get_local 2
        i32.store offset=2680
        get_local 0
        call 7
        get_local 6)
看上去很长，把这个decrypt函数稍微翻译下：
    看上去很长，把这个decrypt函数稍微翻译下：
        (func (;decrypt;) (type 0) (result i32)
        (local i32 i32 i32 i32 i32 i32 i32)
        i32.const 32
        call malloc 
        set_local 5             // var_5 = malloc(32);
        i32.const 1024
        call malloc
        set_local 0             // var_0 = malloc(1024);
        i32.const 8             
        call malloc
        set_local 1             // var_1 = malloc(8);
        i32.const 16
        call malloc
        set_local 2             // var_2 = malloc(16);
        i32.const 2672
        get_local 5             
        i32.const 32
        call read_file          // readfile(21, var_5, 2672);
        drop
        get_local 0
        call read_data          
        set_local 3             // var_3 = read_data(var_0);
        get_local 1
        call read_pass          // read_pass(var_1);
        drop
        i32.const 0
        set_local 6             // var_6 = 0;
        block  ;; label = @1
          loop  ;; label = @2       // while;
            get_local 6
            i32.const 16
            i32.eq
            br_if 1 (;@1;)          // if(var_6 == 16) break;
            get_local 2
            get_local 6
            i32.add             //  var_2 + var_6;
            get_local 0
            get_local 6
            i32.add             //  var_0 + var_6;
            i32.load8_u         
            i32.store8          // *(var_2 + var_6) = *(var_0+var_6);
            get_local 6
            i32.const 1
            i32.add             
            set_local 6
            br 0 (;@2;)         // var_6 += 1;
          end
        end
        get_local 5
        i32.const 32
        call hash               
        set_local 4             // var_4 = hash(var_5, 32);
        i32.const 0
        set_local 6             // var_6 = 0;
        block  ;; label = @1
          loop  ;; label = @2
            get_local 6
            i32.const 8
            i32.eq
            br_if 1 (;@1;)          // if(var_6 == 8) break;
            get_local 4
            get_local 6
            i32.add             // var_4 + var_6;
            tee_local 5         // var_5 = var_4 + var_6
            get_local 5
            i32.load8_u         // *var_5;
            get_local 1
            get_local 6
            i32.add             // var_1 + var_6;
            i32.load8_u         // *(var_1 + var_6);
            i32.xor
            i32.store8          // *(var_4 + var_6) ^= *var_5;
            get_local 6
            i32.const 1
            i32.add
            set_local 6         // var_6 += 1;
            br 0 (;@2;)
          end
        end
        get_local 1
        call free               // free(var_!);
        get_local 4
        i32.const 16
        call hash               