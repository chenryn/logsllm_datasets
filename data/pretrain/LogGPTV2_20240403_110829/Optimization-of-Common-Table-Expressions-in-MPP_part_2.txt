include several pipelined execution stages, with explicit commu-
aseparatesubplan,optimizedinisolationofthemainquery. This
nicationbetweennodesateachstage. Forexample,amulti-stage
approachcouldresultindismissingimportantoptimizationoppor-
aggregation can be used to compute an aggregate over the entire
tunitiessuchas(1)inliningCTE,(2)enforcingphysicalproperties
datasetusingallthenodes.
suchassortorderonCTEoutputwhenalltheCTEconsumersre-
Pivotal’sGreenplumDatabase(GPDB)[9]isanMPPanalytics
quirethesameproperties,and(3)pushingdownpredicatesintothe
database. GPDB adopts a shared-nothing architecture with mul-
CTEsubplan(cf.Section6.3).
tiple cooperating processors (typical deployments include tens or
Oracleoptimizer[4]generatesplansthatcanstoretheresultsof
hundreds of nodes). Storage and processing of large amounts of
asubqueryintoatemporarytablethatcanbereferredtoasmany
dataarehandledbydistributingtheloadacrossseveralserversor
times as needed. The optimizer can inline each reference to the
hoststocreateanarrayofindividualdatabases, workingtogether
refactored subquery. The MATERIALIZE and INLINE optimizer
topresentasingledatabaseimage. Themasteristheentrypoint,
hints can be used to influence the decision. HP Vertica [3] and
whereclientsconnectandsubmitSQLstatements. Themasterco-
PDW[10]alsomaintainCTEresultsinatemporarytableforthe
ordinatesworkwithotherdatabaseinstances,calledsegments.
durationofqueryexecution.
Duringqueryexecution,datacanbedistributedinmultipleways
Optimization using Materialized Views. In traditional includinghasheddistribution,wheretuplesaredistributedtoseg-
databasesystems, usingmaterializedviewsinqueryoptimization mentsbasedonsomehashfunction,replicateddistribution,where
andexecutionisawell-studiedproblem[6,14,8]. Ourapproach afullcopyofatableisstoredateachsegmentandsingletondistri-
ofexploringinliningalternativeshassimilaritiestothecost-driven bution,wherethewholedistributedtableisgatheredfrommultiple
methodologyusedindecidingwhetherornottouseamaterialized segmentstoasinglehost(usuallythemaster).
viewinansweringaquery.However,theproblemaddressedinour Special operators, called Motion operators, are used to ac-
workisorthogonaltothematerializedviewselectionproblemand complish data communication among segments. A Motion op-
canbedifferentiatedasfollows;first,usingmaterializedviewsde- erator acts as the boundary between two active processes send-
pendsprimarilyonviewmatchingtechniquestodecidewhethera ing/receivingdataandpotentiallyrunningindifferentnodes. The
materializedviewcanbeusedtooptimizeaparticularquery. Ex- goal of Motion operators is to establish a given data distribution.
plicitCTEsdonotgenerallyrequireviewmatchingsincetheyare For example, to establish a hashed distribution on column x, an
defined and referenced in the query. View matching techniques instance of Redistribute(x) Motion operator, running on segment
can be used to detect common subexpressions that are implicitly S, sends tuples on S to other segments based on the hash value
defined in the query. Our framework can leverage and build on of x, and also receives tuples from other Redistribute(x) opera-
suchtechniquestocaptureandoptimizesubexpressionswithinour tor instances running, in parallel, on other segments. Similarly,
1706
Sequence#
NL#Join#
CTEProducer(0)# NL#Join#
Select# Select# Select#
i_color=‘red’# i_color=‘redi_’c#olor=‘red’# CTEConsumer(0)# CTEConsumer(0)#
TableScan(item)# TableScaTna(bitleeSmca)#n(item)#
Sequence#
7/8=4"*3;5& 7/87)2>=4"*3;5& (item)# (item)#
3'%"45& (item)#
(a) CTEsinlined (b) Noinlining
!&#$/.0$1+2('34($ !"#$%&'($)*+,-$.,++$
Figure2:LogicalrepresentationofqueryinExample3 Figure3:ExecutionplansofqueryinExample3
a Broadcast Motion and Gather Motion operators are used to es- 7/8=4"*3;5& 6)'2&
products,includingGPDB[9]andHAWQ[5]. Orcaisamodern 6)'2&
top-downqueryoptimizerbasedontheCascadesframework[7]. 7/87)2>=4"*3;5& 7/87)2>=4"*3;5& 7/87)2>=4"*3?5& 7/87)2>=4"*3?5&
In Orca, the plan space is encodedin a compact data structure
!&#$/.0$1+2('34(5$ !"#$%&'($)*+,-$.,++$
calledtheMemo[7]consistingofasetofcontainerscalledgroups.
Eachgroupcontainslogicallyequivalentexpressions,calledgroup
Figure4:LogicalrepresentationofqueryinExample4
expressions. Eachgroupexpressionisanoperatorwhosechildren
areothergroups.ThisrecursivestructureoftheMemoallowscom-
pactencodingofahugespaceofpossibleplans. TheMemogroup
• CTEAnchor: ThisoperatordenoteswhereaparticularCTE
thatcontainsthequerytopoperatoriscalledthe“root”group.
is defined in the query. It defines the scope of that CTE.
Planalternativesaregeneratedbytransformationrulesthatpro-
ACTEcanbereferencedonlyinthesubtreerootedbythe
duceeitherequivalentlogicalexpressions, orphysicalimplemen-
correspondingCTEAnchoroperator.
tationsofexistingexpressions.Theresultsofapplyingtransforma-
tionrulesareaddedtotheMemo,whichmayresultincreatingnew
• Sequence: This is a binary operator that executes its chil-
groupsand/oraddingnewexpressionstoexistinggroups.
dreninorder(lefttoright),andreturnstheresultsoftheright
Duringoptimization,anoperatormayrequestitschildrentosat-
child. OrcaalsousestheSequenceoperatorforoptimizing
isfyphysicalproperties(e.g., sortorderanddatadistribution). A
queriesonpartitionedtables[2].
child plan may either satisfy the required properties on its own
(e.g., an IndexScan delivers sorted data), or an enforcer operator Figure 3 shows two possible execution plans for the query in
(e.g.,Sort)needstobeusedtodelivertherequiredproperties. Figure2. Inthefirstplan, allCTEsareinlined. Inthiscase, the
CTEAnchor is removed, and each CTEConsumer is replaced with
4. REPRESENTATIONOFCTEs thewholetreerepresentingtheCTEdefinition.Inthesecondplan,
thereisnoCTEinlining. TheCTEAnchorhasbeenreplacedbya
To illustrate how we represent queries with CTEs in Orca, we
SequenceoperatorthathastheCTEProducerasitsfirstchild,and
startwiththefollowingsimpleexample:
theoriginalchildoftheCTEAnchorasitssecondchild.
Example3. TheSequenceoperatorguaranteesaspecificorderofexecution,
wherethesubtreeundertheCTEProducerisexecutedfirstbefore
WITH v AS (SELECT ibrand FROM item WHERE icolor = ’red’) anyofthecorrespondingCTEConsumersstartexecution. Asare-
SELECT * FROM v as v1, v as v2
WHERE v1.ibrand = v2.ibrand; sult,whenexecutionreachestheCTEConsumer,thedataisalready
available to read. This guarantees that generated plans have no
The initial logical representation of the query is shown in Fig-
deadlocks,especiallywithplansthathavemultipleCTEs.Weelab-
ure2.WeintroducethefollowingnewCTEoperators:
orateonthispointinSection5.
The previous operators can also be used to represent nested
• CTEProducer: Thisoperatorisinitiallysetastherootofa
CTEs,asweshowinthefollowingexample:
separate logical tree which corresponds to the CTE defini-
tion.Thereisonesuchtree–andonesuchCTEProducerop- Example4.
erator–foreveryCTEdefinedinthequery. Thesetreesare
notinitiallyconnectedtothemainlogicalquerytree. Each WITH v as (SELECT icurrentprice p FROM item
WHERE icolor = ’red’),
CTEProducerhasauniqueid.
w as (SELECT v1.p FROM v as v1, v as v2
WHERE v1.p %
Figure5:Executionplanswithdeadlocks #?*"=",@A,31B%
IC%
';35/%
Note that some CTEConsumer nodes are in the main query and EC% FC%
someareinsidethetreeunderaCTEProducer,whichcorresponds &'(&"$4253,-./% 63=3*>% &'(&"$4253,-./% 63=3*>%
#?*"=",@A,31B% #?*"=",@A,31B%
toCTEsbeingreferencedfrominsideotherCTEs. JC% KC%
';35/% ';35/%
5. CTEEXECUTIONANDDEADLOCKS
Figure7:Memoafterapplyingtransformations
Executing plans with CTEs creates dependencies between dif-
ferent parts of the plan that need to be satisfied at runtime. The
optimizermusttakethesedependenciesintoaccount,andguaran- joinoperatorwillnotproduceanytuples.Inthiscase,theCTEPro-
teethatthegeneratedplanisdeadlockfreeforanypossibleinput. ducer placed under the inner child of the join will never be exe-
A possible approach is to place the CTEProducer as a child of cuted. When execution reaches the CTEConsumer placed under
oneoftheCTEConsumernodes.ConsiderthequeryinExample3, thetopjoinoperator,itwilltrytoreadtuplesfromaCTEProducer
withthelogicalrepresentationinFigure2.Onepossibleexecution thathasneverexecuted,resultinginadeadlock.
plancanuseaNestedLoopJoin(NLJoin),andattachtheCTEPro- In theory, these situations could be avoided during query opti-
ducerdirectlyundertheCTEConsumerontheinner(right)sideof mizationorexecution. However, thiswouldmaketheprocessing
thejoin(seeFigure5(a)).Inthisplan,theNLJoinnodetriggersthe logicincreasinglycomplexbytightlycouplingoptimizerandexe-
executionofitsouter(left)child, whichtriggerstheexecutionof cutionenginedesigns,resultinginmaintainabilityandextensibility
theCTEConsumerontheleftside. ThisCTEConsumerwouldbe challenges. TheproblemisaggravatedinthecontextofMPPsys-
blocked,sincethetuplesittriestoreadhavenotyetbeenproduced. tems, where we need to handle communication among processes
Since the outer child of the NLJoin is blocked, execution never ondifferentnodes. TheSequenceoperatorgreatlysimplifiesthe
reachestheinnerchild,whichissupposedtoexecutetheCTEPro- decisionontheplacementoftheCTEProducerintheplan,andal-
ducer. Therefore this plan results in a deadlock. This deadlock lowstheoptimizertotransparentlyperformseveraloptimizations
could have been avoided if the CTEProducer is placed under the withoutworryingaboutdeadlocks.
consumerwhichisexecutedfirst,whichistheouter(left)childof
theNLJoininthiscase.Ana¨ıvemethodtoavoiddeadlockscanbe 6. PLANENUMERATION
summarizedinthefollowingsteps:
Inthissection,weillustratehowtogenerateplanalternativesfor
1. OptimizequerywithoutconsideringtheCTEexpressions. querieswithCTEs. WeusethelogicalquerydepictedinFigure2
2. OptimizeeachoftheseCTEexpressionsseparately. forillustration.Theinitiallogicalqueryexpressionisfirstinserted
3. ForeachCTEinthequery(inorderofdependency): intotheMemo,creatingasmanyMemogroupsasrequired. Fig-
(a) Traverse the execution plan of the main query in the ure6showsarepresentationoftheMemoafterinitializingitwith
orderofexecution thislogicalexpression,whereeachnumberedboxrepresentsadis-
(b) Plug the tree corresponding to this CTEProducer un- tinctMemogroup.
derthefirstcorrespondingconsumerencountereddur-
6.1 TransformationRules
ingthistraversal
A transformation rule takes as input an expression in a Memo
Oneobviousdrawbackofthisapproachisthatthefirststepdoes group, and produces another expression to be added to the same
nottakeintoaccountthecostofexecutingtheCTEProducer,which group. For each CTE, we generate the alternatives of inlining or