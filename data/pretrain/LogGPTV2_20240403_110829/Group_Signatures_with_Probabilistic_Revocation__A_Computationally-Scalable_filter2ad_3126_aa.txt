title:Group Signatures with Probabilistic Revocation: A Computationally-Scalable
Approach for Providing Privacy-Preserving Authentication
author:Vireshwar Kumar and
He Li and
Jung-Min "Jerry" Park and
Kaigui Bian and
Yaling Yang
Group Signatures with Probabilistic Revocation: A
Computationally-Scalable Approach for Providing
Privacy-Preserving Authentication
Vireshwar Kumar1, He Li1, Jung-Min (Jerry) Park1, Kaigui Bian2, Yaling Yang1
1 Electrical and Computer Engineering
2 Electronics Engineering and Computer Science
Virginia Tech
Blacksburg, VA, USA
{viresh, heli, jungmin, yyang8}@vt.edu
Peking University
Beijing, China
PI:EMAIL
ABSTRACT
Group signatures (GSs) is an elegant approach for provid-
ing privacy-preserving authentication. Unfortunately, mod-
ern GS schemes have limited practical value for use in large
networks due to the high computational complexity of their
revocation check procedures. We propose a novel GS scheme
called the Group Signatures with Probabilistic Revocation
(GSPR), which signiﬁcantly improves scalability with regard
to revocation. GSPR employs the novel notion of probabilis-
tic revocation, which enables the veriﬁer to check the revo-
cation status of the private key of a given signature very ef-
ﬁciently. However, GSPR’s revocation check procedure pro-
duces probabilistic results, which may include false positive
results but no false negative results. GSPR includes a pro-
cedure that can be used to iteratively decrease the probabil-
ity of false positives. GSPR makes an advantageous trade-
oﬀ between computational complexity and communication
overhead, resulting in a GS scheme that oﬀers a number of
practical advantages over the prior art. We provide a proof
of security for GSPR in the random oracle model using the
decisional linear assumption and the bilinear strong Diﬃe-
Hellman assumption.
Categories and Subject Descriptors
E.3 [Data]: Data Encryption—Public Key Cryptosystems;
K.4.1 [Computer and Society]: Public Policy Issues—
Privacy
Keywords
Privacy-preserving authentication; group signature; proba-
bilistic revocation.
1.
INTRODUCTION
The notion of authentication is to enable a sender to prove
her identity to a distant communication partner and/or to
show that she is the origin of the transmitted data. This se-
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from Permissions@acm.org.
CCS’15, October 12–16, 2015, Denver, Colorado, USA.
c(cid:13) 2015 ACM. ISBN 978-1-4503-3832-5/15/10 ...$15.00.
DOI: http://dx.doi.org/10.1145/2810103.2813602.
curity attribute is essential to most of today’s applications
that rely on digital communications over insecure networks.
In some applications, however, authentication is not suﬃ-
cient, and in addition to authentication, the sender’s pri-
vacy need to be protected—the combination of these two
attributes is often referred to as privacy-preserving authen-
tication (PPA). PPA schemes are needed in applications
where the veriﬁers should not learn the actual identity of
the sender (i.e., signer), and are willing to accept an au-
thentication artifact (i.e., signature) that is veriﬁably linked
to an anonymous sender, knowing that the sender’s identity
can be revealed by a trusted third party, if disputes need
to be resolved. A wide variety of applications require PPA,
including safety applications for vehicular networks, identity
escrow schemes, anonymous credential systems, remote at-
testation of computing platforms, and device-to-device com-
munications in the Internet-of-Things (IoT) paradigm.
For deployment in large networks, PPA protocols need to
rely on public-key cryptography. In public-key cryptosystem-
based PPA protocols, there are three entities that interact
with each other: signer, veriﬁer, and group manager. The
roles of the signer and the veriﬁer are obvious. The group
manager plays an important role. During the initialization
process, the group manager generates parameters, and cer-
tiﬁcates (e.g., public-key certiﬁcates) and the private sign-
ing key of each group member. Most importantly, the group
manager has the ability to reveal the signer’s true identity if
a dispute needs to be resolved. PPA schemes can be broadly
categorized into two approaches: pseudonym-based signa-
tures (PSs) [20] and group signatures (GSs) [6].
In PSs, legacy public-key cryptosystems (e.g., RSA) are
used. The group manager provides the signer with a list of
pseudonyms and the corresponding private keys, public keys,
and public-key certiﬁcates. The signer creates a signature
based on her pseudonym, and replaces her pseudonym with
a new one periodically to preserve anonymity. Although the
PS approach is straightforward, it has a number of draw-
backs. Because each pseudonym needs to be used with its
unique set of private and public keys and a certiﬁcate, key
management and distribution become a very onerous burden
in large networks [12].
GSs do not require public-key certiﬁcates, and hence do
not need a certiﬁcate distribution framework. In GS, each
signer is a member of a group, and she is provided with a pri-
vate key tuple by the group manager. Using this tuple, the
1334signer generates signatures without revealing her true iden-
tity to the veriﬁer. In the case of a conﬂict, the signature can
be “opened” by the group manager, and the identity of the
signer is revealed. The most practical GS schemes support
veriﬁer-local revocation (VLR) [3, 6, 16]. To perform VLR,
the group manager generates a revocation token for each
signer (which is a portion of the private key), publishes it in
a revocation list, and distributes the revocation list to the
veriﬁers. To check the revocation status of the private key
used to generate the received signature, the veriﬁer performs
the revocation check procedure. This procedure involves go-
ing through the revocation list, and checking whether any
of the revocation tokens contained therein can be mapped
to the received signature. This means that the computation
time for the revocation check procedure increases linearly
with the number of revoked private keys. Moreover, the
computational cost of the procedure for each revocation to-
ken is expensive. After a thorough and comprehensive anal-
ysis of existing GSs, the authors of [13] recently concluded
that revocation remains the major performance bottleneck of
modern GS schemes, and that further research is urgently
needed to design schemes oﬀering better scalability with re-
gard to revocation.
In this paper, we propose a novel VLR GS scheme called
Group Signatures with Probabilistic Revocation (GSPR). As
its name implies, the most striking attribute of GSPR is that
it supports probabilistic revocation. That is, GSPR’s revo-
cation check procedure does not produce deterministic re-
sults, but instead produces probabilistic results, which may
include false positive (i.e., false alarm) results but no false
negative results. Here, a false negative result refers to an
instance in which the revocation check algorithm fails to de-
tect that the revocation token associated with the received
signature is included in the revocation list. GSPR includes
a procedure that can be used to iteratively decrease the
probability of false alarms. The use of probabilistic revo-
cation (instead of deterministic revocation) enables GSPR
to elegantly address the primary performance bottleneck of
GSs—i.e., enable very eﬃcient revocation checking with only
a modest increase in the signature size. In fact, GSPR’s re-
vocation check time does not grow linearly with the number
of revoked keys.
The dramatic improvement in the computational eﬃciency
of the revocation check procedure is made possible by the use
of “alias codes”. Each alias code is a vector of +1s and −1s
with desirable cross-correlation properties, and each alias
code is mapped to an “alias token” (which is equivalent to
a revocation token in legacy VLR GS schemes) included in
each signature. The group manager creates a “revocation
code” (which is equivalent to a revocation list) by adding all
of the alias codes mapped to revoked alias tokens, and then
distributes this to the veriﬁers. The veriﬁer performs the
revocation check procedure by ﬁrst mapping the signature’s
alias token to an alias code, and then computing the cross
correlation of the alias code and the revocation code. Note
that the veriﬁer is able to check whether a particular alias
code is included in the revocation code in a single cross-
correlation operation, and thus avoids the burden of legacy
GS schemes in which the veriﬁer needs to iteratively check
each revocation token in the revocation list. Because of the
probabilistic nature of the revocation check procedure, its
result is not guaranteed to be correct with certainty, but
only with a certain probability.
The paper’s main contributions are summarized below.
• We propose a novel VLR GS scheme called Group
Signatures with Probabilistic Revocation which signif-
icantly reduces the computational complexity of the
revocation check procedure compared to the prior art.
• We propose the novel concept of probabilistic revoca-
tion which makes an advantageous tradeoﬀ between
computational complexity and communication over-
head. This tradeoﬀ enables GSPR to have signiﬁcantly
better scalability in terms of revocation compared to
the prior art.
• We provide a comprehensive security analysis of GSPR
in the random oracle model using standard complexity
assumptions often used in evaluating legacy schemes.
The rest of this paper is organized as follows. We provide
the security assumptions in Section 2, and present the model
and security deﬁnitions in Section 3. We present the details
of GSPR in Section 4, and analyze its security properties
in Section 5. We perform the computational and communi-
cation overhead analysis of GSPR in Section 6. We discuss
GSPR in the context of safety applications for vehicular net-
works in Section 7. We discuss the related work in Section 8,
and conclude the paper in Section 9.
2. PRELIMINARIES
The proposed scheme is constructed in cyclic groups with
a computable bilinear map [5]. Moreover, the security of
the proposed scheme is proved in the random oracle model
using the Decisional Linear (DLIN) assumption [4] and the
q-Bilinear Strong Diﬃe-Hellman (BSDH) assumption [10].
In this section, we review the deﬁnitions of bilinear groups
and of the complexity assumptions.
Deﬁnition 1. (Bilinear Groups): (G1, G2) is called a
bilinear group pair, if there exists a group GT and a bilinear
map e : G1 × G2 → GT with the following properties:
1. G1, G2 and GT are multiplicative cyclic groups of prime
order p;
2. g1 is a generator of G1, and g2 is a generator of G2;
3. ψ is an eﬃciently computable isomorphism from G2 to
G1, with ψ(g2) = g1;
4. e is an eﬃciently computable bilinear map with the
following properties:
• Bilinear: e(ua, vb) = e(u, v)ab, ∀u ∈ G1, v ∈ G2
p represents the set of in-
p, where Z∗
and a, b ∈ Z∗
tegers modulo p; and
• Non-degenerate: e(g1, g2) 6= 1.
When G1 = G2, ψ is an identity map. On the other hand,
when G1 6= G2, certain families of non-supersingular elliptic
curves can be used for eﬃcient implementation of bilinear
groups, and ψ can be implemented by a trace map [14].
Deﬁnition 2. (DLIN Assumption): Given u0, u1, h, ua
0,
ub
1, Z ∈ G2, where a, b ∈ Z∗
p, as input for each probabilis-
tic polynomial time (PPT) algorithm A, the probability
with which A is able to diﬀerentiate whether Z = ha+b or
Z R←− G2 is negligibly small. Here, R←− represents a random
selection.
2 , · · · , gγq
Deﬁnition 3. (BSDH Assumption): Given a (q + 2)-
tuple (g1, g2, gγ
2 ) as input for each PPT algorithm
A, the probability that A outputs a pair (e(g1, g2)1/(γ+x), x),
where x ∈ Z∗
p, is
negligibly small.
R←− G2, g1 = ψ(g2), and γ R←− Z∗
p, g2
13353. MODEL AND SECURITY DEFINITIONS
In this section, we describe the algorithms that make up
GSPR, and review the security properties of GSs.
Deﬁnition 4. (Group Signatures with Probabilistic
Revocation): It is composed of the following algorithms.
• KeyGen(λ): With the security parameter, λ ∈ N, this
algorithm generates a group public key gpk, and a
group manager’s secret gms. Here, N represents the
set of natural numbers.
• Join(gms, i, m): To add the signer i ∈ [1, n], where n is
the total number of signers in the network, as a mem-
ber of the group with the secret gms, this algorithm
generates a set of m alias tokens, xik, ∀k ∈ [1, m],
a corresponding secret/private key gski and a corre-
sponding revocation token grti, and makes an entry
into a registration list regi. In this paper, we use the
terms “secret key” and “private key” interchangeably.
• Sign(gpk, gski, M ): With the group public key gpk,
and the signer’s secret key gski, this algorithm gener-
ates signature σ with alias token xik on message M .
• Verify(gpk, RC, σ, M ):
If both of the following sub-
algorithms produce an output value of valid, this al-
gorithm outputs the value valid; otherwise, it outputs
the value invalid.
– SignCheck(gpk, σ, M ): With the group public key
gpk and a purported signature σ on a message M ,
this sub-algorithm outputs the value valid if σ is
an honest signature on M ; otherwise, it outputs
the value invalid.
– RevCheck(RC, σ): With a revocation code RC
and a purported signature σ, this sub-algorithm
outputs the value valid if the alias token xik em-
bedded in σ is determined to be unrevoked; oth-
erwise, it outputs the value invalid.
• Revoke(grti, RC): This algorithm updates the revo-
cation code RC using the revocation token grti if the
membership of signer i is to be revoked. Here, revoking
the membership of the signer is equivalent to revoking
her private key and revoking all of her alias tokens.
• Open(reg, σ, M ): Given a valid signature σ on a mes-
sage M , created by a signer i ∈ [1, n], this algorithm
outputs the signer’s identity i.
In this paper, we assume that the group manager runs
KeyGen to set-up the group, Join to add a signer to the
group, Revoke to revoke a private key of a signer, and Open
to open a signature. The signer runs Sign to sign a message,
and the veriﬁer runs Verify to verify a signed message.
In the following discussion, we review the three attributes
of GSs as per the deﬁnitions given in [2].
• Correctness: This ensures the following properties.
– Signature Correctness: This ensures that if a sig-
nature is generated by an honest signer, the sig-
nature check algorithm (i.e., SignCheck) outputs
the value valid.
– Identity Correctness: This ensures that if a sig-
nature is generated by an honest signer, the group
manager correctly reveals the identity of the signer
using the signature open algorithm (i.e., Open).
– Revocation Correctness: This ensures that if a
signature is generated by an honest signer using
an unrevoked private key, the revocation check al-
gorithm (i.e., RevCheck) outputs the value valid.
• Anonymity: This property ensures that no party ex-
cept the group manager is able to identify the signer
of a given signature.
• Traceability: This property requires that no colluding
set of signers (even consisting of the entire group) can
create signatures that cannot be traced back to a signer
in the group, or signatures that cannot be traced back
to some member of the colluding set.
The revocation correctness property is not considered a
core security property in most GSs. However, it is an impor-
tant property to consider in evaluating our proposed scheme,
GSPR, with respect to other GS schemes. GSPR satisﬁes
all of the security properties listed above with the exception