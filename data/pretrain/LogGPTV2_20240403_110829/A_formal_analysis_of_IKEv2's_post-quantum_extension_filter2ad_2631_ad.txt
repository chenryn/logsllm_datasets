// was generated
before
// , $R , ' responder ', 
5
// ^ ' IKE_SA_INIT ', '1', 'i ' are
message metadata
6 in
7 [ Fr (~ nI )
8 , Fr (~ spiI )
id )
// 
11 [ Out ( msg1 )
12 , StateInitI ($I , $R , ~ spiI , ~eI , ~nI , msg1 )
13
// ^ internal state of Initiator is
registered
14 , ! DHtoReveal ($I , ~ eI ) ]
ephemeral key is ~ eI
// , k)
6
7 msg1 = 
// ^ initiator 's first message
8
9 msg2 = , keymat )]->
// upon use of this rule , the action fact
above is registered
// which states that $R in the role of the
responder has agreed
// on the key ' keymat ' in the session 
with nonces 
22 [ Out ( msg2 )
23 , StateInitR ($I , $R , spiI , ~ spiR , nI , ~nR ,
// msg2 is published
keyma t, msg1 , msg2 , epI , epR )
24
// ^ internal state of Responder is
registered
25 , ! DHtoReveal ($R , ~ eR ) ]
ephemeral key is ~ eR
// , k) // shared key
5
6 signed_octets = 
7 auth_pl = sign ( signed_octets , skI )
8
9 encr_pl = senc { } keymat
10
11 integ_I = hmac (
// ^ R 's init message
15
16 msg3 =  // , keymat )
, epR , ~nR >
// ^ response
10
11 in
12 [ In ( msg1 )
// , $I , ' initiator ', , keymat )]->
22 , Fr (~ idR )
// 
with nonces 
30
31 [ StateAuthI ($I , $R , ~ idI , spiI , spiR , nI ,
nR , keyma t, msg1 , msg2 , 'g '^eI , epR )
// ^ Initiator 's new internal state is
32
registered
33 , Out ( msg3 ) ]
// 
5 encr_pl_I = senc {}
keymat
6 integ_I = hmac (, keymat )
26
27
28
29
30
31
, Completed (, $R , ' responder ',
$I , keymat )
, IdentityLearnt (~ idR ) ]->
// upon use of this rule , 3 action facts
are registered
// which state that I 's signature was
verified ,
// that R completed a run of the protocol
in the responder role with peer $I
// in the session  with shared
key ' keymat '
// and that a peer learnt R 's identity
32
33
34 [ ChildSAR ($I , $R , ~ spiC , hmac ( keyma t, ) )
35
// ^ action fact : Responder derived
ChildSA values
36 , Out ( msg4 ) ] // and msg4 is published
7 msg3 = 
8
9 // Responder 's authentication message
10 signed_octets_R = 
11 auth_pl_R = sign ( signed_octets_R , skR )
12 encr_pl_R = senc { 
5 encr_pl_I = senc {} keymat
pkR >} keymat
6 integ_I = hmac (, keymat )
'r ', encr_pl_R >, keymat )
7 msg4 = 
encr_pl_R , integ_R >
15 in
16 [ In ( msg3 )
published ,
// )
// , ck ) > // } keymat
10 integ_I = hmac (,
16 , ! PubKey ($R , pkR ) // if this is $R 's public
keymat )
static key ]
11 msgINT = 
pkR ) , true )
Completed (, $I , ' initiator ',
$R , keymat )
IdentityLearnt ( idI )
IKeys ($I , $R , spiC , ck ) ]->
// upon use of this rule , 4 action facts
18 ,
19 ,
20 ,
21
are registered
// which state that R 's signature was
verified ,
12
13 in
14 [ In ( msg2 )
15 , Fr (~ peI )
16 , Fr (~ nI2 )
17 , StateInitI ($I , spiI , eI , nI , msg1 )
18 ]
19 -- [ Agreed (, $I , ' initiator ', , keymat )
22
23
24
25
// that I completed a run of the protocol
in the initiator role with peer $R
20 , INTERMEDIATE_I ($I , $R ) ]-> //  with shared
$I and $R
key ' keymat '
// and that a peer learnt R 's identity and
I registered ck as ChildSA-key
26 [ Out ( mTest ) ]
// , ck ) >)
// ^ and a valid test message was
published for it
33 -- [ RConfirm ($I , $R , spiC , ck )]-> // < then
upon use of this rule , the session
registers that R has received a message