title:Publicly verifiable ownership protection for relational databases
author:Yingjiu Li and
Robert Huijie Deng
Publicly Veriﬁable Ownership Protection for Relational
Databases
Yingjiu Li
School of Information Systems
Singapore Management University
80 Stamford Road, Singapore 178902
Robert Huijie Deng
School of Information Systems
Singapore Management University
80 Stamford Road, Singapore 178902
PI:EMAIL
PI:EMAIL
ABSTRACT
Today, watermarking techniques have been extended from the mul-
timedia context to relational databases so as to protect the owner-
ship of data even after the data are published or distributed. How-
ever, all existing watermarking schemes for relational databases are
secret key based, thus require a secret key to be presented in proof
of ownership. This means that the ownership can only be proven
once to the public (e.g., to the court). After that, the secret key
is known to the public and the embedded watermark can be eas-
ily destroyed by malicious users. Moreover, most of the existing
techniques introduce distortions to the underlying data in the wa-
termarking process, either by modifying least signiﬁcant bits or ex-
changing categorical values. The distortions inevitably reduce the
value of the data. In this paper, we propose a watermarking scheme
by which the ownership of data can be publicly proven by anyone,
as many times as necessary. The proposed scheme is distortion-
free, thus suitable for watermarking any type of data without fear
of error constraints. The proposed scheme is robust against typical
database attacks including tuple/attribute insertion/deletion, ran-
dom/selective value modiﬁcation, data frame-up, and additive at-
tacks.
Categories and Subject Descriptors
H.2.4 [Database Management]: Systems—relational databases
Keywords
Relational database, ownership protection, public veriﬁability, wa-
termark, certiﬁcate
1.
INTRODUCTION
Ownership protection of digital products after dissemination has
long been a concern due to the high value of these assets and the
low cost of copying them (i.e., piracy problem). With the fast devel-
opment of information technology, an increasing number of digital
products are distributed through the internet. The piracy problem
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIACCS’06, March 21-24, 2006, Taipei, Taiwan.
Copyright 2006 ACM 1-59593-272-0/06/0003 ...$5.00.
has become one of the most devastating threats to networking sys-
tems and electronic business. In recent years, realizing that “the law
does not now provide sufﬁcient protection to the comprehensive
and commercially and publicly useful databases that are at the heart
of the information economy” [12], people have joined together to
ﬁght against theft and misuse of databases published online (e.g.,
parametric speciﬁcations, surveys, and life sciences data) [32, 4].
To address this concern and to ﬁght against data piracy, water-
marking techniques have been introduced, ﬁrst in the multimedia
context and now in relational database literature, so that the own-
ership of the data can be asserted based on the detection of wa-
termark. The use of watermark should not affect the usefulness of
data, and it must be difﬁcult for a pirate to invalidate watermark de-
tection without rendering the data much less useful. Watermarking
thus deters illegal copying by providing a means for establishing
the original ownership of a redistributed copy [1].
In recent years, researchers have developed a variety of water-
marking techniques for protecting the ownership of relational data-
bases [1, 28, 26, 29, 13, 19, 20, 2] (see Section 5 for more on related
work). One common feature of these techniques is that they are se-
cret key based, where ownership is proven through the knowledge
of a secret key that is used for both watermark insertion and de-
tection. Another common feature is that distortions are introduced
to the underlying data in the process of watermarking. Most tech-
niques modify numerical attributes [1, 28, 29, 13, 19, 20], while
others swap categorical values [26, 2]. The distortions are made
such that the usability of data for certain applications is not af-
fected and that watermark detection can be performed even in the
presence of attacks such as value modiﬁcation and tuple selection.
The above two features may severely affect the application of
watermarking techniques for relational databases. First, the secret
key based approach is not suitable for proving ownership to the
public (e.g., in a court). To prove ownership of suspicious data,
the owner has to reveal his secret key to the public for watermark
detection. After being used one time, the key is no longer secret.
With access to the key, a pirate can invalidate watermark detection
by either removing watermarks from protected data or adding a
false watermark to non-watermarked data.
Second, the distortions that are introduced in the process of wa-
termarking may affect the usefulness of data. Even though cer-
tain kind of error constraints (e.g., means and variances of water-
marked attributes) can be enforced prior to or during the water-
marking process, it is difﬁcult or even impossible to quantify all
possible constraints, which may include domain constraint, unique-
ness constraint, referential integrity constraint, functional depen-
dencies, semantic integrity constraint, association, correlation, car-
dinality constraint, the frequencies of attribute values, and statisti-

cal distributes. In addition, any change to categorical data may be
considered to be signiﬁcant. Another difﬁculty is that the distor-
tions introduced by watermarking cannot be reduced arbitrarily. A
tradeoff has to be made between watermark distortions and the ro-
bustness of watermark detection (roughly speaking, the more dis-
tortions introduced in the watermarking process, the more likely
that a watermark can be detected in the presence of database at-
tacks).
In this paper, we attempt to design a new database watermarking
scheme that can be used for publicly veriﬁable ownership protec-
tion and that introduces no distortions. Our research was motivated
in part by certain aspects of public key watermarking schemes in
the multimedia context, yet it is fundamentally different and partic-
ularly customized for relational databases (see also Section 5 for re-
lated work). Our scheme has the following unique properties. First,
our scheme is publicly veriﬁable. Watermark detection and own-
ership proof can be effectively performed publicly by anyone as
many times as necessary. Second, our scheme introduces no errors
to the underlying data (i.e., it is distortion-free); it can be used for
watermarking any type of data including integer numeric, real nu-
meric, character, and Boolean, without fear of any error constraints.
Third, our scheme is efﬁcient for incremental updating of data. It
is designed to facilitate typical database operations such as tuple
insertion, deletion, and value modiﬁcation. Fourth, our scheme is
robust. It is difﬁcult to invalidate watermark detection and owner-
ship proof through typical database attacks and other attacks. With
these properties, we believe that our watermarking technique can
be applied practically in the real world for the protection of owner-
ship of published or distributed databases.
The rest of the paper is organized as follows. Section 2 presents
our watermarking scheme, which includes watermark generation
and detection. Section 3 studies how to prove ownership publicly
using a watermark certiﬁcate. It also investigates certiﬁcate revoca-
tion and incremental update in our scheme. Section 4 analyzes the
robustness of our scheme and the tradeoff between its robustness
and overhead. Section 5 comments on related work, and section 6
concludes the paper.
2. THE SCHEME
Our scheme watermarks a database relation R whose schema is
R(P, A0, . . . , Aν−1), where P is a primary key attribute (later we
discuss extensions for watermarking a relation that does not have
a primary key attribute). There is no constraint on the types of
attributes used for watermarking; the attributes can be integer nu-
meric, real numeric, character, Boolean, or any other types. At-
tributes are represented by bit strings in computer systems. Let η
denote the number of tuples in relation R. For each attribute of
a tuple, the most signiﬁcant bit (MSB) of its standard binary rep-
resentation may be used in the generation of a watermark.
It is
assumed that any change to an MSB would introduce intolerable
error to the underlying data value. For ease of referencing, Table 1
lists the symbols that will be used in this paper.
2.1 Watermark Generation
Let the owner of relation R possess a watermark key K, which
will be used in both watermark generation and detection. The wa-
termark key should be capable of publicly proving ownership as
many times as necessary. This is contrast to traditional watermark-
ing, where a watermark key is kept secret so that the database owner
can prove his ownership by revealing the key for detecting the wa-
termark. However, under that formation, the ownership can be pub-
licly proved only once. In addition, the key should be long enough
to thwart brute force guessing attacks to the key.
Algorithm 1 genW (R, K, γ) // Generating watermark W for DB
relation R
1: for each tuple r in R do
2:
construct a tuple t in W with the same primary key t.P =
r.P
for i=0; i  τ then
15:
16: else
17:
18: end if
end if
delete the j-th attribute from r
return false
return true
end for
contributes γ MSBs from different attributes that are pseudo-randomly
selected based on the watermark key and the primary key of the tu-
ple. It is impossible for an attacker to remove all of the watermark
bits by deleting some but not all of the tuples and/or attributes from
the watermarked data. The larger the watermark generation param-
eter γ, the more robust our scheme is against such deletion attacks.
2.2 Watermark Detection
Our watermark detection is designed to be performed publicly
by anyone as many times as necessary. This is a notable difference
compared from previous approaches, which are secret key based. In
watermark detection, the public watermark key K and watermark
W are needed to check a suspicious database relation R.
It is
assumed that the primary key attribute has not been changed or
else can be recovered. If the primary key cannot be relied on, one
can turn to other attributes, as will be discussed in Section 2.4.
Algorithm 2 gives the procedure detW (R, K, γ, W, τ ) for de-
tecting watermark W from relation R, where γ is the watermark
generation parameter used in watermark generation, and τ is the
watermark detection parameter that is the least fraction of correctly
detected watermark bits. Both parameters are used to control the
assurance and robustness of watermark detection, as will be ana-
lyzed in Section 4. The watermark detection parameter τ is in the
range of [0.5, 1). To increase the robustness of watermark detec-
tion, we do not require that all detected MSBs in R match the
corresponding bits in W , but that the percentage of the matches is
more than τ (i.e., match count/total count > τ in algorithm 2).
2.3 Randomized MSBs
0
Most modern computers can represent and process four primi-