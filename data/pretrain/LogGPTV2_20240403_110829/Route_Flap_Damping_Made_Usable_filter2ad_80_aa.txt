title:Route Flap Damping Made Usable
author:Cristel Pelsser and
Olaf Maennel and
Pradosh Mohapatra and
Randy Bush and
Keyur Patel
Route Flap Damping Made Usable
Cristel Pelsser1, Olaf Maennel2, Pradosh Mohapatra3, Randy Bush1, and Keyur Patel3
1 Internet Initiative Japan
Tokyo, Japan
{cristel,randy}@iij.ad.jp
2 Loughborough University
United Kingdom
PI:EMAIL
3 Cisco Systems
San Jose, CA, USA
{pmohapat,keyupate}@cisco.com
Abstract. The Border Gateway Protocol (BGP), the de facto inter-domain rout-
ing protocol of the Internet, is known to be noisy. The protocol has two main
mechanisms to ameliorate this, MinRouteAdvertisementInterval (MRAI), and
Route Flap Damping (RFD). MRAI deals with very short bursts on the order of a
few to 30 seconds. RFD deals with longer bursts, minutes to hours. Unfortunately,
RFD was found to severely penalize sites for being well-connected because topo-
logical richness ampliﬁes the number of update messages exchanged. So most
operators have disabled it. Through measurement, this paper explores the avenue
of absolutely minimal change to code, and shows that a few RFD algorithmic
constants and limits can be trivially modiﬁed, with the result being damping a
non-trivial amount of long term churn without penalizing well-behaved preﬁxes’
normal convergence process.
1 Introduction
Despite the huge success of the Internet, the dynamics of the critically important inter-
domain routing protocol, the Border Gateway Protocol (BGP), remain a subject of re-
search. In particular, despite a large number of research efforts, the convergence of
BGP[6, 11], and lately, the chattiness of BGP, also called BGP churn [3], are still not
well understood. Further observations have been made of duplicated and/or ‘unneces-
sary’ updates [15]. These all ultimately lead to slow protocol convergence.
Understanding the BGP mystery is critical. In the case of convergence, vendors may
improve code based on insights into propagation patterns, which in turn could lead to
less churn, and thus lower load, a more robust network, and faster response to failure
events. Researchers suggesting replacement protocols could design them with an in-
depth understanding of what works today, what does not work well, and why.
This paper aims at one facet in this spectrum: how, with absolutely minimal code
change, to better differentiate the normal path-vector protocol convergence process
from abnormal activity, such as heavily ﬂapping preﬁxes. It has been shown that a
single triggering event can cause multiple BGP updates elsewhere in the Internet [5, 6].
We say a BGP route is ﬂapping or unstable if a router originates multiple BGP update
N. Spring and G. Riley (Eds.): PAM 2011, LNCS 6579, pp. 143–152, 2011.
c(cid:2) Springer-Verlag Berlin Heidelberg 2011
144
C. Pelsser et al.
messages (reachable or unreachable) for the preﬁx in a ‘short’ time interval and prop-
agates those changes to its neighbors. However, BGP, being a path-vector protocol is
also subject to topological ampliﬁcation, sometimes called path exploration. One trig-
gering event can cause multiple BGP updates at a topologically distant router. Studies
using BGP beacons [12] have illustrated this effect. It is important to understand that
this is a property (or artifact) of the BGP protocol itself and does not correspond to con-
stantly changing topology. In fact, studies of BGP update behavior and trafﬁc ﬂow have
found little correlation [20]. The trafﬁc may continue to reach its destination despite the
constant noise of BGP update messages.
While this is conceptually very simple, it is not easy to distinguish real topological
changes from path exploration in the BGP signal. Ideally, we would like to maximize
the speed topological information is propagated, while minimizing exchanged messages
required to converge to a stable path. However, the root cause of a BGP update typically
cannot be known. Therefore mechanisms to reduce BGP’s chattiness face the dilemma
of ﬁnding appropriate algorithms and parameters.
Huston [8] has observed that a small portion of the preﬁxes generate a high number
of BGP update messages. In Figure 1 we show a similar observation. Most preﬁxes
receive very few updates. Only 3% of the preﬁxes are responsible for 36% percent of
the BGP messages. The plot shows the number of update messages that are received at
a router in our measurement setup (Fig. 3) for each preﬁx during the week from Sept.
29th to Oct. 6th, 2010.
Number of update messages per prefix on all sessions
s
e
g
a
s
s
e
m
f
o
r
e
b
m
u
N
 1e+06
 100000
 10000
 1000
 100
 10
 1
0
50k
100k
150k
200k
250k
300k
Prefix index
All sessions at r0
l
s
a
v
r
e
t
n
i
r
u
o
h
1
n
i
s
e
g
a
s
s
e
m
f
o
r
e
b
m
u
N
 10000
 1000
 100
 10
 1
 0.1
 0.01
 0.001
 10000
CDF for the NTT session
 100000
Number of prefixes
min
avg
max
Fig. 1. Update count per preﬁx at r0 during the
week of Sept. 29th to Oct. 6th 2010
Fig. 2. Update count per preﬁx from a single
BGP session in one hour bins
Figure 2 illustrates the churn, i.e. update messages per hour that are received on
a session with a tier-1 ISP. The y-axis depicts the number of updates received for a
particular preﬁx per one hour bin, while the x-axis shows the preﬁxes sorted by the
number of update messages received. The majority of preﬁxes account for few updates,
while a small number of preﬁxes account for a very high number of updates within
a short time period. The ﬁgure shows three curves, the minimum (vertical line), the
average (lower curve) and maximum (top curve) number of updates in one hour bins.
Router r0 receives a full routing table, 326,575 routes, from NTT. One might expect
that most of those routes would be stable and not receive any updates at all. However,
Route Flap Damping Made Usable
145
we observe updates for 153,773 preﬁxes during one week of observation. And the router
receives up to 1,647 updates in one hour for the preﬁx with the highest churn (see right
most point on the top curve in Figure 2), there are less than ten updates for more than
100,000 of the preﬁxes for which there were any updates. Most preﬁxes for which we
observe BGP update messages are quiet most of the time. Only 0.01% of the preﬁxes
are always present in the trace, with one preﬁx having a minimum of 913 BGP updates
per hour over the whole trace (which explains the vertical line in Figure 2). These
observations conﬁrm that most preﬁxes are very quiet, and only a very small number of
the preﬁxes are responsible for the majority of the BGP churn.
For some preﬁxes the router received hundreds and thousands of update messages,
over arbitrarily long time-periods. We hypothesize those updates are being caused by
some periodic events and/or ﬂapping. This cannot be ‘normal’ protocol convergence.
This is causing an unnecessary load on the global routing system.
2 Background
There are many causes for route ﬂapping. One common cause is a router or a link going
up and down due to a faulty circuit or hardware. Another cause is a BGP session being
reset. BGP policy changes can also lead to the readvertisement of routes and can thus be
interpreted as a route ﬂap, this also includes policy changes for trafﬁc engineering. Fur-
thermore, IGP cost changes may cause BGP updates which then propagate across the
Internet [17]. Duplicate advertisements [15] are probably the best example of ‘unnec-
essary’ updates that do not contain any new topological information. Lastly, the BGP
protocol is known to be inherently unstable [1, 4, 7].
Today, two approaches attempt to make the trade-off between convergence time and
message count [6]. First, the MinRouteAdvertisementInterval timer (MRAI) [16] speci-
ﬁes the minimum time between BGP advertisements to a peer. While it is recommended
to be a per preﬁx timer, existing implementations typically use a per-peer timer for
all preﬁxes sent via that peering. By default, it is 30 seconds (jittered) for an eBGP
peer, and ﬁve seconds for iBGP. The idea is that the router waits for the ‘path explo-
ration’ downstream to ﬁnish, before sending any updates. However, as mentioned ear-
lier, no technique can reliably discriminate between ﬂapping routes and routes that are
‘converging’.
The second technique is Route Flap Damping (RFD) [19]. It is more complex and
ﬁne-grained, as routers maintain a penalty value per preﬁx and per session. Routes with
a penalty above a given threshold are damped, e.g., newly received announcements are
suppressed and not considered as suitable alternatives to reach a destination. The idea is
that heavily ﬂapping paths are putting a large burden on the routing system as a whole
and to protect the Internet from such routes, it is better to disregard the path and drop
its trafﬁc than to let such preﬁxes potentially cause cascading failures due to system
overload. Of course, despite observations, stable routes are not supposed to be affected
by this mechanism. Thus, there is still room for research in this area. For instance, the
work of Huston [10] is promising in that it aims to categorize updates and determine
the types that are potential indicators of path hunting. However, live detection of such
updates is much more CPU and memory intensive than the brutally simple approach
explored in this paper.
146
C. Pelsser et al.
Using RFD [19], each preﬁx accumulates a penalty which is incremented on receipt
of an announce or withdraw message for that preﬁx. This penalty is a simple counter
and the values added to the penalty are listed in Table 4. When the penalty reaches
a given threshold, the ‘suppress penalty’, the route is damped, i.e. quarantined. It is
not advertised by the router until the penalty gets below another threshold, the ‘reuse
penalty’. The penalty value of a damped route is decremented using a ‘half-life’, i.e.
it is divided by two after ‘half-life’ seconds. Upon the receipt of further updates the
penalty continues to grow. However, there is a ‘max suppress time’, which constitutes
a maximum time the route can be damped. E.g., provided that the route is not receiving
any further updates, a damped preﬁx is typically released after one hour. This translates
into a ‘maximum suppress penalty’, which is computed using the suppress threshold,
the reuse threshold and the half-life time. For example, with Cisco default parameters a
penalty of 12,000 will result in a suppression of one hour if no further updates for that
preﬁx arrive. We refer to the work of Mao et al. [13] for a detailed study of the RFD
algorithm.
RFD has been reported to be harmful [2] in that, with current default settings and
recommendations [14], it penalizes routes which are not ﬂapping, but receiving multi-
ple updates due to path exploration. This severely impacts convergence. Reachability
problems for over an hour have been observed where there was no physical outage,
network problem, or congestion that would justify any packet drops. In fact, it has been
shown that perfectly valid and ﬁne paths can be withdrawn due to RFD [2]. As a con-
sequence most operators have disabled RFD. On the other hand, we see serious BGP
noise affecting router load and burdening the whole system [9].
Can research on BGP dynamics lead to an appropriate recommendation of RFD pa-
rameters? What would happen if we adopted a strategy to select only the ‘heavy hitters’,
the heavily ﬂapping routes, or ‘elephants’ as we call them – but leave the converging
routes, or ‘mice’, in peace? BGP churn should decrease signiﬁcantly compared to the
current situation where RFD is turned off, yet the BGP convergence for preﬁxes with
‘normal’ BGP activity would not be affected. In this paper, we try to ﬁnd and propose
such appropriate parameters.
3 Measurement Setup
In this section, we present our experimental design. We describe a change to Cisco’s
IOS XR BGP implementation to enable the collection of damping statistics, the location
of the router in the Internet and the BGP feeds that it receives. Then we explain how we
collected and analyzed the RFD data.
Router r0 in Figure 3 is a Cisco 12406 running a minimally modiﬁed version of
Cisco’s IOS XR software to enable us to perform a detailed analysis of what the router
‘thinks’. The router applies the RFD algorithm using the normal penalty values. The
modiﬁed code does not actually damp the routes, instead it records the calculated
penalty values of each route and its supposed status, active or damped. The other modi-
ﬁcation was that no ‘Maximum Suppress Penalty’ was imposed, e.g., the penalty values
could increase above 12,000.
Route Flap Damping Made Usable
147
(cid:4)(cid:21)(cid:25)(cid:15)(cid:18)(cid:15)(cid:26)(cid:1)(cid:7)(cid:10)(cid:1)
(cid:8)(cid:14)(cid:14)(cid:22)(cid:23)(cid:1)