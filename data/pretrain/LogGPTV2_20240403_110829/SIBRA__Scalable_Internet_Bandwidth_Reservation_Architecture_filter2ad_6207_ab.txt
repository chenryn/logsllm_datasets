limit the bandwidth for ephemeral paths: An ephemeral path
is created by launching a request
through existing steady
paths whose amounts of bandwidth determine – up to a ﬁxed
scaling factor – the bandwidth of the requested ephemeral
path. More precisely, an ephemeral path is created through
the combination of (i) a steady up-path in the source ISD, (ii)
the steady part of a core path, and (iii) a steady down-path
in the destination ISD.3 The ephemeral path request uses only
the steady portion of a link (the blue part in Figure 2); the
actual ephemeral path trafﬁc uses only the ephemeral portion
of a link (the orange part in Figure 2). In other words, the
more steady bandwidth a customer purchases locally within
her ISD, the larger the fraction of ephemeral bandwidth she
obtains to any other ISD in the Internet.
Based on these ideas, it becomes intuitively clear how
botnet-size independence is achieved and how the tragedy of
the network-link commons is resolved: Each pair of domains
can obtain a minimum bandwidth allocation, based on their
respective steady paths and based on the core contract. Thus,
a botnet cannot inﬂuence the minimum allocation, no matter
its size and distribution. A bot can only use up the bandwidth
allocated to the AS it resides in, but not lower the minimum
allocation of any other AS. It is thus in the responsibility of
3For instance, Figure 1 shows an ephemeral path from host S in ASE to
host D in ASH. If the source and destination are in the same ISD, then the
core path may not be necessary, e.g., the ephemeral path inside the US ISD.
3
Fig. 2: The anatomy of SIBRA links: 80% of the link bandwidth is
used for ephemeral trafﬁc, 5% for steady trafﬁc, and 15% for best-
effort trafﬁc. The core path from ASD1 to ASB2 comprises steady and
ephemeral trafﬁc, but excludes best-effort trafﬁc.
an AS to manage its allocations, and thereby to prevent bots
from obtaining resources of others within that AS.
In case an AS is dissatisﬁed with its minimum allocation,
it can purchase more bandwidth for its steady paths, as well
as request its core AS to purchase a larger allocation for the
core contract, which the AS would likely need to pay for. An
important point of these contracts is that, in order to scale, core
contracts are purely neighbor-based: only neighboring ASes
perform negotiations.
SIBRA’s scalability is additionally based on a relatively
low number of ephemeral paths, compared to all possible
end-to-end paths in today’s Internet, considered for instance
by IntServ [42]. As mentioned above, an ephemeral path in
SIBRA is fully determined by choosing two steady paths and
a core path. The number of steady up-/down-paths an AS
can simultaneously have is upper-bounded by a small SIBRA
system parameter (e.g., 5 to 7), and the number of core paths
is naturally upper-bounded by the number of ISDs.
To make SIBRA viable for practical applications, we need
to ensure that all aspects of the system are scalable and
efﬁcient, which holds in particular for the frequent operations
such as ﬂow admission, reservation renewal, and monitoring
and policing. For instance, all fastpath operations are per-ﬂow
stateless to avoid state-exhaustion attacks and to simplify the
router architecture.
B. Core paths
Directly-connected core ASes (i.e., Tier-1 ISPs) are expected
to agree on a guaranteed amount of bandwidth for trafﬁc
traversing their connecting links. We envision that ASes ratify
such core contracts on mutual business advantages for their
customers, on top of currently negotiated customer-to-provider
or peering relations. Similar to SLAs, core contracts are long
term (e.g., on the order of months) and can have an up-time
associated (e.g., the bandwidth is guaranteed 99.99% of the
time). Core contracts comprise steady and ephemeral trafﬁc,
as illustrated in the shaded part of Figure 2. If one of the ASes
sends more trafﬁc than agreed on, the AS is held accountable,
according to the established contract.
Core contracts are initiated by receiver core ASes: each
core AS observes the historical trafﬁc values received on its
neighboring links, and proposes in the core contracts similar
values for the trafﬁc the AS is willing to absorb. For instance,
  ASH   ASESISDAustriaISD Japan ISD  GermanyASF     ASB1ASD1ASB2   ASA2  ASG DISD United StatesASC1steady pathephemeral pathcore pathprovider-to-customer linkpeering link!!!!!!corepath   ASG   ASH ASB1ASB2steadypathephemeralpathASD1D80% ephemeral5% steady15% best-effortFig. 3: Core contracts between core ASes (ASD1, ASD1a, ASB1, ASB2).
Destination
ASB2
ASB2
...
Path
ASB1 → ASB2
ASD1a → ASB1 → ASB2
...
Bandwidth
1 Tbps
2 Tbps
...
Fig. 4: Core contracts table at ASD1. Two core paths lead to ASB2.
in Figure 3, ASB2 proposes to absorb 5 Tbps of steady and
ephemeral trafﬁc from ASB1 (Step x), and ASB1 accepts. The
contract is followed as long as ASB1 sends at most 5 Tbps
to ASB2, regardless of whether ASB1 is the actual origin of
the trafﬁc, or ASB1 only forwards someone else’s trafﬁc to
ASB2. For instance, ASB1 could forward trafﬁc from ASD1
and ASD1a to ASB2. In the example, ASB1 offers to forward
1 Tbps from ASD1 (Step y), and 3 Tbps from ASD1a (Step z).
ASD1a extends the latter contract by proposing to ASD1 to
absorb 2 Tbps towards ASB2 (Step {). After completion of
the negotiation, ASD1 obtains guaranteed bandwidth to ASB2
along two core paths.
Figure 4 illustrates a local guaranteed-bandwidth table
that stores such core paths for ASD1. The table resembles a
forwarding table and may contain multiple entries for each
destination core AS, one entry for each core path. It results
from the contract proposals and the received acknowledgments
for a speciﬁc destination, ASB2 in this case. For brevity’s sake,
Figure 4 shows only the entries for destination ASB2.
The bandwidth of a core path reﬂects the overall trafﬁc
volume exchanged between the source and the destination
ASes. To bootstrap the process, each participating AS observes
aggregate trafﬁc volumes on its neighboring links, and initiates
contracts with a bandwidth of 85% of the observed aggregate
volume (5% steady + 80% ephemeral). The initially estimated
contracts are reﬁned as dictated by the customer requirements
and payments (explained below).
Scalability. The core contract proposals traverse only one link
before being accepted or denied. For instance, in Figure 3,
ASB1 ﬁrst accepts ASB2’s proposal (Step x), and only after-
wards, it submits its offers (Steps y and z). Achieving global
consensus through immediate agreements is possible due to
the destination-initiated process of establishing core contracts,
in which the supported amount of trafﬁc is already speciﬁed
4
Fig. 5: Transit ASF processing reservation requests for sources S1,
S2, S3 and destination D.4
and can thus be decided based on local knowledge. In contrast,
source-initiated requests would require a distributed consensus
algorithm that would traverse all ASes whose agreement
is required. SIBRA’s design decision sacriﬁces such costly
interactions for better scalability, achieving a core contract
design that is scalable with the number of core ASes.
Payment. Core paths not only guarantee bandwidth between
ISDs, they also regulate the trafﬁc-related money ﬂow between
core ASes according to existing provider-to-customer (p2c) or
peering (p2p) relationships (e.g., c2p between ASB2 and ASB1,
and p2p between ASD1 and ASB1).
Similar to today’s state of affairs, we believe that market
forces create a convergence of allocations and prices when
ASes balance the bandwidth between their peers and adjust the
contracts such that the direct core AS neighbors are satisﬁed.
The neighbors, in turn, recursively adapt their contracts to
satisfy the bandwidth requirements of their customers. Paying
customers thus indirectly dictate to core ASes the destination
ISDs of core paths and the speciﬁed bandwidth in the contracts.
C. Steady paths
Steady paths are intermediate-term, low-bandwidth reserva-
tions that are established by ASes for guaranteed communi-
cation availability within an ISD. We envision that the default
validity of steady paths is on the order of minutes, but it can
periodically be extended. An endpoint AS can voluntarily tear
down its steady path before expiration and set up a new steady
path. For example, in Figure 1, ASE sets up a steady path to
ASA2, and ASH requests bandwidth guarantees from ASB2. As
mentioned earlier, SIBRA uses steady paths for two purposes:
(1) as communication guarantees for low-bandwidth trafﬁc,
and (2) as building block for ephemeral paths: to guarantee
availability during connection setup and to perform weighted
bandwidth reservations (Section III-D).
Reservation request. SIBRA leverages so-called SCION rout-
ing beacons [9] that disseminate top-down from the ISD core
to the ASes. On their journey down, they collect AS-level path
information as well as information about the current amount
of available bandwidth (both steady and ephemeral) for each
link. When a leaf AS receives such a routing beacon with
information about a path segment, the AS can decide to submit
4We use the term destination in the following (and also in Figure 5) to stay
as general as possible. For steady-path reservation requests, the destination is
the ISD core; for ephemeral-path reservation requests, the destination will be
another end host (Section III-D).
ISDJapan2 Tbps to ASB2YESpeering linkp2c linkYESYES1 Tbps to ASB23 Tbps to ASB223ASB25 Tbpsto ASB2YES1ASB1via ASB1bw oﬀeranswerASA2ISDAustriaISD United StatesISDGermanyASC1ASD1ASD1a4143ﬂowID1ﬂowID2ﬂowID3(Step I)Admission controltemporary reserv.actual reserv.failed reserv.(Step IV) Actual reservation(Step III) Reservation ticket  generation(Step II)TemporaryreservationData2egressrouteringressrouterS2S1  DsourcesourcedestinationS3sourceASFa reservation request that promotes the path segment to a
steady path. In this case, the leaf AS (e.g., ASE in Figure 1,
or S3 in Figure 5) computes a new ﬂow ID, chooses the
amount of bandwidth and the expiration time, and sends a
steady path reservation message up the path to the core. The
requested amount of bandwidth can be chosen from a number
of predeﬁned bandwidth classes, introduced for monitoring
optimization purposes (Section III-E).
that
Each intermediate AS on the path to the core performs
admission control by verifying the availability of steady band-
width to its neighbors on the path (Step I in Figure 5). Given
the fact
inbound trafﬁc from multiple ingress routers
may converge at a single egress router, admission control
is performed at both ingress and egress routers. Speciﬁcally,
the ingress router of ASi checks the availability of steady
bandwidth on the link ASi−1 → ASi, and the egress router
of ASi on the link ASi → ASi+1. If enough bandwidth is
available at both the ingress and the egress router (Case 
in Figure 5), both routers temporarily reserve the requested
bandwidth (Step II). Subsequently, the egress router of ASi
issues a cryptographically authenticated reservation token (RT)
encoding the positive admission decision (Step III).
An RT generated by ASi is authenticated using a crypto-
graphic key Ki known only to ASi, by which ASi can later
verify if an RT embedded in the data packet is authentic.
More speciﬁcally, the RT contains the authenticated ingress
and the egress interfaces of ASi, and the reservation request
information. RTs are onion-authenticated to prevent an attacker
from crafting a steady path from RT chunks:
RTASi = ingressASi (cid:107) egressASi (cid:107)
(cid:0)ingressASi (cid:107) egressASi (cid:107) Request (cid:107) RTASi−1
MACKi
(cid:1)
where Request is deﬁned as Bwreq (cid:107) ExpTime (cid:107) ﬂowID. We
emphasize that steady path reservation ﬂow identiﬁers are
independent of TCP ﬂow identiﬁers: A steady path can carry
packets from multiple TCP ﬂows, as long as these packets
contain the RTs corresponding to the steady path in their
header.
If at least one of the routers of ASi cannot meet the request
(Case ), it suggests an amount of bandwidth that could be
offered instead, and adds this suggestion to the packet header.
Although already failed, the request is still forwarded to the
destination (i.e., to the ISD core in case of steady paths)
to collect suggested amounts of bandwidth from subsequent
ASes. This information helps the source make an informed
and direct decision in a potential bandwidth re-negotiation.
As steady paths are only infrequently updated, scalability
and efﬁciency of steady path updates are of secondary impor-
tance. However, ASi can still perform an efﬁcient admission
decision by simply considering the current utilization of its
directly adjacent AS neighbors. Such an efﬁcient mechanism
is necessary for reservation requests (and renewals) to be
fastpath operations, avoiding to access per-path state. In case
of a positive admission decision, ASi needs to account for the
steady path individually per leaf AS where the reservation
originates from. Only slowpath operations, such as policing
of misbehaving steady paths, need to access this per-path
information about individual steady paths.
Conﬁrmation and usage. When the reservation request
reaches the destination D, the destination replies to the request-
5
ing source (e.g., S3) either by a conﬁrmation message (Case
 in Figure 5) containing the RTs accumulated in the request
packet header, or by a rejection message (Case ) containing
the suggested bandwidth information collected before.4 As the
conﬁrmation message travels back to the source, every ingress
and egress router accepts the reservation request and switches
the reservation status from temporary to active (Step IV).
In order to use the reserved bandwidth for actual data
trafﬁc, the source includes the RTs in the packet header.
D. Ephemeral paths
Ephemeral paths are used for communication with guaranteed
high bandwidth. Ephemeral paths are short-lived, only valid
on the order of tens of seconds, and thus require continuous
renewals through the life of the connection. The source, the
destination, and any on-path AS can rapidly renegotiate the
allocations. Figure 1 shows two ephemeral paths, one inside
an ISD, one across three ISDs.
We emphasize that the amount of ephemeral bandwidth
that is proportional to steady bandwidth may constitute a lower
bound: If more ephemeral bandwidth is available (for instance
since not everybody might be using his fair share of ephemeral