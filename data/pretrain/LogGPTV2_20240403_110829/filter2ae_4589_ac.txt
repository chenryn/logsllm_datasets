    libshella_3.0.0.0.so:AF7A1BD8 LDR             R1, [R11,#var_30]
    libshella_3.0.0.0.so:AF7A1BDC ADD             R2, R1, R2
    libshella_3.0.0.0.so:AF7A1BE0 LDRB            R1, [R2]
    libshella_3.0.0.0.so:AF7A1BE4 LDRB            R2, [R11,#var_2A]
    libshella_3.0.0.0.so:AF7A1BE8 EOR             R2, R1, R2
    libshella_3.0.0.0.so:AF7A1BEC AND             R2, R2, #0xFF
    libshella_3.0.0.0.so:AF7A1BF0 STRB            R2, [R3]
    ;同上类似
    ;var_30的值加上var_18的值保存到R3，这是准备修改数据的内存地址
    ;var_30的值加上var_18的值指向的1字节内存数据保存到R1
    ;var_13 & var_14，结果取低八位赋值给R0
    ;var_12和R0进行异或，取低八位，接着加上R1，取低八位，将数据存入内存R3指向的地方
    libshella_3.0.0.0.so:AF7A1BF4 LDR             R3, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1BF8 LDR             R2, [R11,#var_30]
    libshella_3.0.0.0.so:AF7A1BFC ADD             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1C00 LDR             R2, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1C04 LDR             R1, [R11,#var_30]
    libshella_3.0.0.0.so:AF7A1C08 ADD             R2, R1, R2
    libshella_3.0.0.0.so:AF7A1C0C LDRB            R1, [R2]
    libshella_3.0.0.0.so:AF7A1C10 LDRB            R0, [R11,#var_13]
    libshella_3.0.0.0.so:AF7A1C14 LDRB            R2, [R11,#var_14]
    libshella_3.0.0.0.so:AF7A1C18 AND             R2, R0, R2
    libshella_3.0.0.0.so:AF7A1C1C AND             R0, R2, #0xFF
    libshella_3.0.0.0.so:AF7A1C20 LDRB            R2, [R11,#var_12]
    libshella_3.0.0.0.so:AF7A1C24 EOR             R2, R0, R2
    libshella_3.0.0.0.so:AF7A1C28 AND             R2, R2, #0xFF
    libshella_3.0.0.0.so:AF7A1C2C ADD             R2, R1, R2
    libshella_3.0.0.0.so:AF7A1C30 AND             R2, R2, #0xFF
    libshella_3.0.0.0.so:AF7A1C34 STRB            R2, [R3]
    ;var_12加上var_13,取低八位，赋值给R2
    ;R2减去var_14，取低八位赋值给R2
    ;var_31和R2进行与运算，结果取低八位赋给R2
    ;var_18和R2进行与运算，结果取低八位赋给R2
    ;var_11加上R2的值，并赋给var_11
    libshella_3.0.0.0.so:AF7A1C38 LDRB            R2, [R11,#var_12]
    libshella_3.0.0.0.so:AF7A1C3C LDRB            R3, [R11,#var_13]
    libshella_3.0.0.0.so:AF7A1C40 ADD             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1C44 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C48 LDRB            R3, [R11,#var_14]
    libshella_3.0.0.0.so:AF7A1C4C RSB             R3, R3, R2
    libshella_3.0.0.0.so:AF7A1C50 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C54 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C58 LDRB            R3, [R11,#var_31]
    libshella_3.0.0.0.so:AF7A1C5C AND             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1C60 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C64 LDR             R3, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1C68 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C6C AND             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1C70 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C74 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C78 LDRB            R3, [R11,#var_11]
    libshella_3.0.0.0.so:AF7A1C7C ADD             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1C80 STRB            R3, [R11,#var_11]
    ;var_18取低八位，加上var_11，取低八位赋值给R2, (unsigned __int8)(var_18 + var_11)
    ;var_31和R2异或，取低八位，加上var_12,结果保存到var_12，var_12 += (unsigned __int8)(var_18 + var_11) ^ var_31
    libshella_3.0.0.0.so:AF7A1C84 LDR             R3, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1C88 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C8C LDRB            R3, [R11,#var_11]
    libshella_3.0.0.0.so:AF7A1C90 ADD             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1C94 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C98 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1C9C LDRB            R3, [R11,#var_31]
    libshella_3.0.0.0.so:AF7A1CA0 EOR             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1CA4 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1CA8 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1CAC LDRB            R3, [R11,#var_12]
    libshella_3.0.0.0.so:AF7A1CB0 ADD             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1CB4 STRB            R3, [R11,#var_12]
    ;var_13 ^= (unsigned __int8)(var_31-var11) ^ var_18
    libshella_3.0.0.0.so:AF7A1CB8 LDRB            R2, [R11,#var_31]
    libshella_3.0.0.0.so:AF7A1CBC LDRB            R3, [R11,#var_11]
    libshella_3.0.0.0.so:AF7A1CC0 RSB             R3, R3, R2
    libshella_3.0.0.0.so:AF7A1CC4 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1CC8 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1CCC LDR             R3, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1CD0 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1CD4 EOR             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1CD8 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1CDC LDRB            R3, [R11,#var_13]
    libshella_3.0.0.0.so:AF7A1CE0 EOR             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1CE4 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1CE8 STRB            R3, [R11,#var_13]
    ;var_14 += (unsigned __int8)(var_18)-(var_31 +var_11)
    libshella_3.0.0.0.so:AF7A1CEC LDR             R3, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1CF0 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1CF4 LDRB            R1, [R11,#var_31]
    libshella_3.0.0.0.so:AF7A1CF8 LDRB            R3, [R11,#var_11]
    libshella_3.0.0.0.so:AF7A1CFC ADD             R3, R1, R3
    libshella_3.0.0.0.so:AF7A1D00 AND             R3, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1D04 RSB             R3, R3, R2
    libshella_3.0.0.0.so:AF7A1D08 AND             R2, R3, #0xFF
    libshella_3.0.0.0.so:AF7A1D0C LDRB            R3, [R11,#var_14]
    libshella_3.0.0.0.so:AF7A1D10 ADD             R3, R2, R3
    libshella_3.0.0.0.so:AF7A1D14 STRB            R3, [R11,#var_14]
    ;var_18++
    libshella_3.0.0.0.so:AF7A1D18 LDR             R3, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1D1C ADD             R3, R3, #1
    libshella_3.0.0.0.so:AF7A1D20 STR             R3, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1D24
    libshella_3.0.0.0.so:AF7A1D24 loc_AF7A1D24                            ; CODE XREF: sub_AF7A1944+224j
    ;2.for的判断操作：
    ;var_18-var_3C的结果是否让zbit置1或者让(cbit xor vbit)为1，满足条件则跳转到循环体
    libshella_3.0.0.0.so:AF7A1D24 LDR             R2, [R11,#var_18]
    libshella_3.0.0.0.so:AF7A1D28 LDR             R3, [R11,#var_3C]
    libshella_3.0.0.0.so:AF7A1D2C CMP             R2, R3
    libshella_3.0.0.0.so:AF7A1D30 BLE             loc_AF7A1B6C
    ;4.结尾
    ;将之前修改为可写可执行的内存块，恢复可读可执行权限，mprotect(var_38+var_30, (var_40/0x1000 + 1)*0x1000, 5)
    libshella_3.0.0.0.so:AF7A1D34 LDR             R3, [R11,#var_38]
    libshella_3.0.0.0.so:AF7A1D38 LDR             R2, [R11,#var_30]
    libshella_3.0.0.0.so:AF7A1D3C ADD             R2, R2, R3
    libshella_3.0.0.0.so:AF7A1D40 LDR             R3, [R11,#var_40]
    libshella_3.0.0.0.so:AF7A1D44 ADD             R3, R3, #0xFF0
    libshella_3.0.0.0.so:AF7A1D48 ADD             R3, R3, #0xF
    libshella_3.0.0.0.so:AF7A1D4C BIC             R3, R3, #0xFF0
    libshella_3.0.0.0.so:AF7A1D50 BIC             R3, R3, #0xF
    libshella_3.0.0.0.so:AF7A1D54 MOV             R0, R2
    libshella_3.0.0.0.so:AF7A1D58 MOV             R1, R3
    libshella_3.0.0.0.so:AF7A1D5C MOV             R2, #5
    libshella_3.0.0.0.so:AF7A1D60 BL              mprotect_0
    ;针对解密的内存区域进行缓存更新，sub_B39E47E8(var_38+var_30, var_40)
    libshella_3.0.0.0.so:AF7A1D64 LDR             R3, [R11,#var_38]
    libshella_3.0.0.0.so:AF7A1D68 LDR             R2, [R11,#var_30]
    libshella_3.0.0.0.so:AF7A1D6C ADD             R2, R2, R3
    libshella_3.0.0.0.so:AF7A1D70 LDR             R3, [R11,#var_40]
    libshella_3.0.0.0.so:AF7A1D74 MOV             R0, R2
    libshella_3.0.0.0.so:AF7A1D78 MOV             R1, R3
    libshella_3.0.0.0.so:AF7A1D7C BL              sub_B39E47E8
    ;将var_8的值存到dword_AF7A5008变量中
    libshella_3.0.0.0.so:AF7A1D80 LDR             R2, [R11,#var_8]
    libshella_3.0.0.0.so:AF7A1D84 LDR             R3, =(dword_AF7A5008 - 0xAF7A1D90)
    libshella_3.0.0.0.so:AF7A1D88 ADD             R3, PC, R3 ; dword_AF7A5008
    libshella_3.0.0.0.so:AF7A1D8C STR             R2, [R3]
    libshella_3.0.0.0.so:AF7A1D90 BL              unk_AF7A1898
    libshella_3.0.0.0.so:AF7A1D94 SUB             SP, R11, #4
    libshella_3.0.0.0.so:AF7A1D98 LDMFD           SP!, {R11,PC}
    libshella_3.0.0.0.so:AF7A1D98 ; End of function sub_AF7A1944
## 遍历/proc/self/maps获取so库基址
### 初始化
  1. 保存上一个栈的栈帧，并将R11指向栈底的返回地址
  2. 参数入栈
    libshella_3.0.0.0.so:A54EF5B4 00 48 2D E9 STMFD           SP!, {R11,LR}
    libshella_3.0.0.0.so:A54EF5B8 04 B0 8D E2 ADD             R11, SP, #4
    libshella_3.0.0.0.so:A54EF5BC 83 DE 4D E2 SUB             SP, SP, #0x830
    libshella_3.0.0.0.so:A54EF5C0 18 08 0B E5 STR             R0, [R11,#var_818]
### 文件操作，开辟内存
    ;给寄存器存入参数，获取文件标识符到变量var_8中
    libshella_3.0.0.0.so:A54EF5C4 70 31 9F E5 LDR             R3, =(aProcSelfMaps - 0xA54EF5D0)
    libshella_3.0.0.0.so:A54EF5C8 03 30 8F E0 ADD             R3, PC, R3              ; "/proc/self/maps"
    libshella_3.0.0.0.so:A54EF5CC 03 00 A0 E1 MOV             R0, R3
    libshella_3.0.0.0.so:A54EF5D0 68 31 9F E5 LDR             R3, =(unk_A54EFA5C - 0xA54EF5DC)
    libshella_3.0.0.0.so:A54EF5D4 03 30 8F E0 ADD             R3, PC, R3 ; unk_A54EFA5C
    libshella_3.0.0.0.so:A54EF5D8 03 10 A0 E1 MOV             R1, R3
    libshella_3.0.0.0.so:A54EF5DC 61 F8 FF EB BL              fopen
    libshella_3.0.0.0.so:A54EF5E0 08 00 0B E5 STR             R0, [R11,#var_8]
    ;准备将栈内从栈底的局部变量往上开始的0x400字节数据置零
    ;第一个减4是上一个栈帧的帧地址，第二个减8是两个局部变量(var_8,var_C)
    libshella_3.0.0.0.so:A54EF5E4 01 3B 4B E2 SUB             R3, R11, #-var_400
    libshella_3.0.0.0.so:A54EF5E8 04 30 43 E2 SUB             R3, R3, #4
    libshella_3.0.0.0.so:A54EF5EC 08 30 43 E2 SUB             R3, R3, #8
    libshella_3.0.0.0.so:A54EF5F0 01 2B A0 E3 MOV             R2, #0x400
    libshella_3.0.0.0.so:A54EF5F4 03 00 A0 E1 MOV             R0, R3
    libshella_3.0.0.0.so:A54EF5F8 00 10 A0 E3 MOV             R1, #0
    libshella_3.0.0.0.so:A54EF5FC 32 F8 FF EB BL              memset_0
    ;准备将栈内紧接着上面的0x400字节数据置零
    libshella_3.0.0.0.so:A54EF600 02 3B 4B E2 SUB             R3, R11, #-var_800
    libshella_3.0.0.0.so:A54EF604 04 30 43 E2 SUB             R3, R3, #4
    libshella_3.0.0.0.so:A54EF608 08 30 43 E2 SUB             R3, R3, #8
    libshella_3.0.0.0.so:A54EF60C 01 2B A0 E3 MOV             R2, #0x400
    libshella_3.0.0.0.so:A54EF610 03 00 A0 E1 MOV             R0, R3