415,607
3,178
568,072
2012-10
2013-03
Unique IMEI
Unique IMSI
# of Phone Model
Unique IP Address
First log time
Last log time
Table 10: Statistics of infected smartphones
7. RELATED WORK
In this section, we present some related works which are
related to Android malware, Android application security
and Android ﬁrmware security.
In [8], authors presented the ded decompiler and carried
out a study of 1,100 Android applications. Their analysis
framework allows researchers to observe not only the ex-
istence of dangerous functionality, but also how it occurs
within an Android app. Felt et al.
studied 18 Android
malware in [9]. Jia et al. [18] conducted a study on the
run-time enforcement of information-ﬂow. In [33], authors
discussed how to enhance users’ comprehension of Android
permissions. ADAM [35] and DroidChameleon [23] are two
systems to generate Android malware variants. [40] was the
ﬁrst paper to provide a systematic study on the detection
of malicious applications on Android Markets. The authors
successfully discovered 211 malware and carefully analyzed
the malicious behaviors of the malware. DroidMOSS [37] is
an Android system to detect repackaged applications using
fuzzy hashing. ContentScope [39] aimed to ﬁnd the passive
Figure 3: Distribution of infected Android devices around the world due to the pre-installed malware “CE-
Plugnew”
Country
# of Infected
IP Addresses
CN-(CHINA)
TW-(TAIWAN)
HK-(HONG KONG)
KR-(REPUBLIC OF KOREA)
US-(UNITED STATES)
MY-(MALAYSIA)
VN-(VIET NAM)
RU-(RUSSIAN FEDERATION)
VE-(VENEZUELA)
MO-(MACAU)
SG-(SINGAPORE)
IT-(ITALY)
AU-(AUSTRALIA)
CA-(CANADA)
ES-(SPAIN)
GB-(UNITED KINGDOM)
TH-(THAILAND)
FR-(FRANCE)
DE-(GERMANY)
PH-(PHILIPPINES)
BG-(BULGARIA)
KZ-(KAZAKHSTAN)
ID-(INDONESIA)
NZ-(NEW ZEALAND)
AR-(ARGENTINA)
SA-(SAUDI ARABIA)
561,657
1,299
891
453
385
305
202
168
165
159
155
141
126
114
105
105
88
81
74
66
62
62
61
58
57
50
Table 11: Number of infected IP addresses in coun-
tries
content leaks and pollution in Android applications. Smart-
Droid [34] can automatically reveal the UI-based trigger con-
ditions.
In [38], Zhou et al. studied characterization and
evolution of Android malware with 1,260 samples. Kevin
McNamee [21] showed us how to build a spyphone. How-
ever, all of the above mentioned works only focused on the
detection and functionalities of Android malware and they
did not focus on Android ﬁrmware security.
Woodpecker [12] analyzed each application in a smart-
phone ﬁrmware to explore the reachability of a dangerous
permission from a public, unguarded interface. Lei et al.
[20] studied ten representative stock Android images from
ﬁve popular smartphone vendors and they found a lot of se-
curity problems on the permission usages of pre-installed ap-
plications. However, all of the above mentioned works only
focused on the applications. XRay[28] is an app for scan-
ning security vulnerabilities of Android system, so it cannot
scan the ﬁrmwares. Our paper is the ﬁrst detailed study on
both pre-installed application security and system security
for Android ﬁrmwares.
In particular, we have done large
scale experiments on 250 Android ﬁrmwares and performed
a detailed case study on infected ﬁrmwares.
8. CONCLUSION
As malware writers are using ﬁrmwares to spread new
malware, there is an urgent need to combat this new form of
distribution channel. We present the design and implemen-
tation of “DroidRay”: a security evaluation system for cus-
tomized Android ﬁrmwares. The system uses both static and
dynamic analyses to evaluate the ﬁrmware security on appli-
cation level and system level. We carry out a comprehensive
study on 24,009 pre-installed applications and 250 Android
ﬁrmware systems, and discover compromised ﬁrmwares can
contaminate the system and inject new malware into de-
vices. We found 1,947 (8.1%) pre-installed applications have
signature vulnerability and 19 (7.6%) ﬁrmwares contain pre-
installed malware. In addition, we discovered 142 (56.8%)
Android ﬁrmwares have the default signature vulnerability,
ﬁve (2.0%) Android ﬁrmwares contain malicious hosts ﬁle, at
most 40 (16.0%) Android ﬁrmwares have native level priv-
ilege escalation vulnerability and at least 249 (99.6%) An-
droid ﬁrmwares have Java level privilege escalation vulnera-
bility. In particular, we carry out detailed investigation on a
real world pre-installed zero-day Android malware known as
CEPlugnew, which involves 348,018 infected Android smart-
phones and reveal its geographical spread.
References
[1] F. Adrienne, Porter, C. Erika, H. Steve, S. Dawn, and
W. David. Android permissions demystiﬁed. In Pro-
ceedings of ACM Conference on Computer and Com-
munications Security (CCS), 2011.
[2] C-skill. Gingerbreak. http://c-skills.blogspot.hk
/2011/04/yummy-yummy-gingerbreak.html, 2011.
[3] C-skill. Rageagainstthecage.
https://github.com/b
ibanon/android-development-codex/wiki/rageaga
instthecage, 2011.
[4] A. Central. Android central (rom market).
http://
www.androidcentral.com/tags/firmware, 2013.
[5] C. Daily.
Low-end
smartphone
ﬁght.
http://www.chinadaily.com.cn/bizchina/2012s
martphone/2012-07/16/content_15703750.htm, 2012.
[18] L. Jia,
J. Aljuraidan, E. Fragkaki, L. Bauer,
M. Stroucken, K. Fukushima, S. Kiyomoto, and
Y. Miyake. Run-time enforcement of information-ﬂow
properties on Android (extended abstract).
In Com-
puter Security—ESORICS 2013: 18th European Sym-
posium on Research in Computer Security, Sept. 2013.
[19] Jidi. Rom jidi (rom market). http://www.romjd.com/,
2013.
[20] W. Lei, G. Michael, Z. Yajin, W. Chiachih, and J. Xux-
ian. The impact of vendor customizations on android
security. In Proceedings of ACM Conference on Com-
puter and Communications Security (CCS), 2013.
[21] K. McNamee. How to build a spyphone.
Blackhat,
2013.
[22] C. Mod. Cyanogen mod (rom forum). http://www.cy
anogenmod.org/, 2013.
[6] N. V. Database. Cve-2009-1185.
http://web.nvd.
nist.gov/view/vuln/detail?vulnId=CVE-2009-1185,
2009.
[23] V. Rastogi, Y. Chen, and X. Jiang. Droidchameleon:
evaluating android anti-malware against transforma-
tion attacks. In Proceedings of the ASIACCS ’13.
[7] DownloadAndroidROM. Downloadandroidrom (rom
[24] Revolutionary. Zergrush.
http://forum.xda-develo
market). http://downloadandroidrom.com/, 2013.
pers.com/showthread.php?t=1296916, 2011.
[8] W. Enck, D. Octeau, P. McDaniel, and S. Chaudhuri.
A study of android application security. In Proceedings
of the 20th USENIX conference on Security, SEC’11,
2011.
[9] A. P. Felt, M. Finifter, E. Chin, S. Hanna, and D. Wag-
ner. A Survey of Mobile Malware in the Wild. In Pro-
ceedings of the 1st ACM workshop on Security and pri-
vacy in smartphones and mobile devices, 2011.
[10] Google. Android open source project. http://source
.android.com, 2008.
[11] Google. virustotal.
https://www.virustotal.com/,
2013.
[12] M. Grace, Y. Zhou, Z. Wang, and X. Jiang. Systematic
Detection of Capability Leaks in Stock Android Smart-
phones. In Proceedings of the 19th Annual Network &
Distributed System Security Symposium, 2012.
[25] saurik. Android bug superior to master key.
http:
//www.saurik.com/id/18, 2009.
[26] saurik. Exploit and ﬁx android master key.
http:
//www.saurik.com/id/17, 2009.
[27] saurik. Yet another android master key bug.
http:
//www.saurik.com/id/19, 2009.
[28] D. Security. Xray for android. http://www.xray.io/
#vulnerabilities.
[29] Shendu. Rom shendu (rom market).
http://www.sh
endu.com/android/, 2013.
[30] VR-ZONE. Research shows chinese manufacturers ac-
count for 20 percent of smartphones worldwide, india on
the rise.
http://vr-zone.com/articles/research-
shows-chinese-manufacturers-account-for-20-
percent-of-smartphones-worldwide-india-on-the-
rise/49868.html, 2013.
[13] I. D. C. (IDC). Apple cedes market share in smartphone
operating system market as android surges and win-
dows phone gains, according to idc. http://www.idc.
com/getdoc.jsp?containerId=prUS24257413, 2013.
[31] D. Walker. Pay-per-install pays big bucks in the
http://www.scmagazine.com/pay-
mobile world.
per-install-pays-big-bucks-in-the-mobile-
world/article/258731/, 2012.
[14] G. Inc. Google map apis. http://developers.googl
[32] Xda. Xda-developers (rom forum). http://www.xda-
e.com/maps/, 2012.
developers.com/, 2013.
[15] L. Inc. Security alert: Malware found targeting custom
https://blog.lookout.com/b
roms
log/2011/06/15/security-alert-malware-found-
targeting-custom-roms-jsmshider/, 2011.
(jsmshider).
[16] Ipmart.
Ipmart (rom forum).
http://www.ipmart-
forum.com/forum.php, 2013.
[17] J. Janego. The security implications of custom android
http://labs.neohapsis.com/2011/12/21/
roms.
the-security-implications-of-custom-android-
roms/, 2012.
[33] L. Yang, N. Boushehrinejadmoradi, P. Roy, V. Gana-
pathy, and L. Iftode. Short paper: enhancing users’
comprehension of android permissions. In Proceedings
of the second ACM workshop on Security and privacy
in smartphones and mobile devices, SPSM ’12, 2012.
[34] C. Zheng, S. Zhu, S. Dai, G. Gu, X. Gong, X. Han, and
W. Zou. Smartdroid: an automatic system for revealing
ui-based trigger conditions in android applications. In
Proceedings of the second ACM workshop on Security
and privacy in smartphones and mobile devices, SPSM
’12, 2012.
[35] M. Zheng, P. P. C. Lee, and J. C. S. Lui. Adam: an au-
tomatic and extensible platform to stress test android
anti-virus systems. In Proceedings of the 9th interna-
tional conference on Detection of Intrusions and Mal-
ware, and Vulnerability Assessment, DIMVA’12, 2013.
[36] Zhijia. Rom zhijia (rom market). http://www.romzj.
com/, 2013.
[37] W. Zhou, Y. Zhou, X. Jiang, and P. Ning. Droid-
MOSS: Detecting Repackaged Smartphone Applica-
tions in Third-Party Android Marketplaces.
In Pro-
ceedings of the second ACM conference on Data and
Application Security and Privacy, 2012.
[38] Y. Zhou and X. Jiang. Dissecting Android Malware:
Characterization and Evolution. In Proceedings of the
33rd IEEE Symposium on Security and Privacy, 2012.
[39] Y. Zhou and X. Jiang. Detecting passive content leaks
and pollution in android applications. In Proceedings
of the 20th Annual Symposium on Network and Dis-
tributed System Security, 2013.
[40] Y. Zhou, Z. Wang, W. Zhou, and X. Jiang. Hey, You,
Get Oﬀ of My Market: Detecting Malicious Apps in
Oﬃcial and Alternative Android Markets. In Proceed-
ings of the 19th Annual Network & Distributed System
Security Symposium, 2012.
[41] H. Z. Zihang Xiao, Qing Dong and X. Jiang.
http:
Oldboot:
//blogs.360.cn/360mobile/2014/01/17/oldboot-
the-first-bootkit-on-android/, 2014.
the ﬁrst bootkit on Android.