**Migrated Issue, Originally Created by Anonymous**

### Environment
- **SQLAlchemy Version:** 0.6beta1
- **Previous Working Version:** 0.5

### Description
The following code, which worked in SQLAlchemy 0.5, is now causing an error in version 0.6beta1.

### Code
```python
from sqlalchemy import create_engine, Table, MetaData, __version__

print(__version__)

# Database connection setup
engine = create_engine('oracle://xxx:xxx@XXX', echo=False)
metadata = MetaData(engine)

# Create a function in the database
engine.execute("""
    CREATE OR REPLACE FUNCTION ADDONE (a NUMBER) RETURN NUMBER
    DETERMINISTIC
    IS
    BEGIN
        RETURN a + 1;
    END;
""")

# Drop and recreate the table
try:
    engine.execute('DROP TABLE BOB')
except Exception:
    pass

engine.execute('CREATE TABLE BOB (a NUMBER)')
engine.execute('CREATE INDEX fn_idx ON BOB (ADDONE(a))')

# Reflect the table into SQLAlchemy
bob_table = Table(
    'bob',
    metadata,
    autoload=True
)
```

### Error
The code results in the following traceback:

```python
Traceback (most recent call last):
  File "bob.py", line 28, in <module>
    autoload=True
  File "/home/geraint/work/sqlalchemy/lib/sqlalchemy/schema.py", line 202, in __new__
    table._init(name, metadata, *args, **kw)
  File "/home/geraint/work/sqlalchemy/lib/sqlalchemy/schema.py", line 250, in _init
    _bind_or_error(metadata).reflecttable(self, include_columns=include_columns)
  File "/home/geraint/work/sqlalchemy/lib/sqlalchemy/engine/base.py", line 1450, in reflecttable
    self.dialect.reflecttable(conn, table, include_columns)
  File "/home/geraint/work/sqlalchemy/lib/sqlalchemy/engine/default.py", line 122, in reflecttable
    return insp.reflecttable(table, include_columns)
  File "/home/geraint/work/sqlalchemy/lib/sqlalchemy/engine/reflection.py", line 362, in reflecttable
    sa_schema.Index(name, *[table.columns[c] for c in columns],
  File "/home/geraint/work/sqlalchemy/lib/sqlalchemy/util.py", line 666, in __getitem__
    return self._data[key]
KeyError: u'sys_nc00002$'
```

### Additional Notes
- The `ADDONE` function is created as a deterministic function.
- The `BOB` table is created with a single column `a` of type `NUMBER`.
- An index `fn_idx` is created on the `BOB` table using the `ADDONE` function.
- The error occurs when trying to reflect the `BOB` table into SQLAlchemy.

Please let me know if you need any further information or if there are any specific steps to resolve this issue.