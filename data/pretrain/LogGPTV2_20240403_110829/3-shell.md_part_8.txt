sed '2a xxx' #在第二行下面一行插入xxx
sed '2i xxx' #在第二行上面一行插入xxx
sed '3c xxx' #替换第三行
sed '/root/c xxx' 替换包含root的行为xxx
### 命令指令: P 打印出查询信息
\[root@server0 \~\]# cat /opt/abcdef
aa
bb
cc
dd
ee
ff
\[root@server0 \~\]# sed \'2,4p\' /opt/abcdef #显示第2行到第4行,未加-n
aa
bb
bb
cc
cc
dd
dd
ee
ff
\[root@server0 \~\]# sed -n \'2,4p\' /opt/abcdef #显示第2到4行,加了-n
bb
cc
dd
\[root@server0 \~\]# sed -n \'2p;4p\' /opt/abcdef #显示第2和第4行
bb
dd
\[root@server0 \~\]# sed -n \'2,+2p\' /opt/abcdef
#从第2行开始,再打印后面2行,
bb
cc
dd
\[root@server0 \~\]# sed -n \'1\~2p\' /opt/abcdef
#从第一行开始,每跨2行打印,奇数
aa
cc
ee
\[root@server0 \~\]# sed -n \'\$=\' /opt/abcdef #显示最后一行的行数
7
\[root@server0 \~\]# sed -n \'\$p\' /opt/4day/xyz #显示最后一行的内容
\[root@server0 \~\]# sed -n \'=\' /opt/4day/xyz #显示行号
### 命令指令: d 删除指定信息
\[root@server0 \~\]# sed \'1d\' /opt/abcdef #删除第一行
bb
cc
dd
ee
ff
\[root@server0 \~\]# sed -n \'1d\' /opt/abcdef #带了-n
实际操作成功但是看不到效果
\[root@server0 \~\]# sed \'1d;3d\' /opt/abcdef 删除第1行和第3行
bb
dd
ee
ff
\[root@server0 \~\]# sed \'1d;+3d\' /opt/abcdef #错误操作
sed：-e 表达式 #1，字符 5：无法将 +N 或 \~N 作为第一个地址
\[root@server0 \~\]# sed \'1,+3d\' /opt/abcdef
#删除第1行,以及第1行后面的三行
ee
ff
\[root@server0 \~\]# sed \'1\~3d\' /opt/abcdef
#删除第一行,每隔三行删除一个
bb
cc
ee
Ff
\[root@server0 \~\]# sed \'1,2d\' nssw.txt #删除1到2行
dsfa
dfAsd
sdf
### 命令指令:s替换基本功能（s/旧内容/新内容/选项）：
\[root@server0 \~\]# sed \'s/the/xyz/\' /opt/4day/xyz
> #替换每一行的第一个the为xyz
aaaaaaaaaexyz
xyzbbbbbbbaaaaaaaa
aaaaaaa xyz bbbbbb
dddddddddcccccccccaaaaaaaaa
a
\[root@server0 \~\]# sed \'1s/the/xyz/\' /opt/4day/xyz
> #替换第1行的第一个the为xyz
aaaaaaaaaexyz
thebbbbbbbaaaaaaaa
aaaaaaa the bbbbbb
dddddddddcccccccccaaaaaaaaa
a
\[root@server0 \~\]# sed -n \'1s/the/xyz/p\' /opt/4day/xyz
#替换第1行的the为xyz
aaaaaaaaaexyz #替换第1行的the为xyz,并且只显示修改了的行
\[root@server0 \~\]# sed \'s/a/x/\' /opt/4day/xyz #每行第一个a替换成x
xaaaaaaaaethe
thebbbbbbbxaaaaaaa
xaaaaaa the bbbbbb
dddddddddcccccccccxaaaaaaaa
x
\[root@server0 \~\]# sed \'2s/a/x/\' /opt/4day/xyz #第二行第一个a替换成x
aaaaaaaaaethe
thebbbbbbbxaaaaaaa
aaaaaaa the bbbbbb
dddddddddcccccccccaaaaaaaaa
a
\[root@seer0 \~\]# sed \'2,5s/a/x/\' /opt/4day/xyz
#第二行到第五行第一个a替换成x
aaaaaaaaaethe
thebbbbbbbxaaaaaaa
xaaaaaa the bbbbbb
dddddddddcccccccccxaaaaaaaa
x
\[root@server0 \~\]# sed \'s/a/x/2\' /opt/4day/xyz
#所有行的第二个a替换为x
axaaaaaaaethe
thebbbbbbbaxaaaaaa
axaaaaa the bbbbbb
dddddddddcccccccccaxaaaaaaa
a
s/peer0.org1.example.com/peer1.org1.example.com/
\[root@server0 \~\]# sed \'3s/a/x/2\' /opt/4day/xyz
#第三行的第二个a替换为x
aaaaaaaaaethe
thebbbbbbbaaaaaaaa
axaaaaa the bbbbbb
dddddddddcccccccccaaaaaaaaa
a
\[root@server0 \~\]# sed \'2s/a/x/g\' /opt/4day/xyz
#第二行的所有a替换为x
aaaaaaaaaethe
thebbbbbbbxxxxxxxx
aaaaaaa the bbbbbb
dddddddddcccccccccaaaaaaaaa
a
\[root@server0 \~\]# sed \'s/\^the/xyz/\' /opt/4day/xyz
#将以the开头的替换为xyz
aaaaaaaaaethe
xyzbbbbbbbaaaaaaaa
aaaaaaa the bbbbbb
dddddddddcccccccccaaaaaaaaa
a
## sed 使用基本正则 ' '内加/ 
sed -n '/the/p' xyz #查找含"the"的行
sed -n '/\^the/p' xyz #查找含"the"开头的行
sed -n \'1p\' 1.txt
sed -n \'2,4p\' /opt/abcdef #显示第2到4行,加了-n
sed -n \'2p;4p\' /opt/abcdef #显示第2和第4行
sed -n \'2,+2p\' /opt/abcdef #从第2行开始,再打印后面2行,
sed -n \'1\~2p\' /opt/abcdef #从第一行开始,每跨2行打印,奇数
sed -n \'\$=\' /opt/abcdef #显示最后一行的行数
sed -n \'\$p\' /opt/4day/xyz #显示最后一行的内容
sed -n \'=\' /opt/4day/xyz #显示行号
sed '/the/d' xyz #删除含"the"的行
sed '/\^the/d' xyz #删除含"the"开头的行
sed '/\^the/!d' xyz #含"the"开头的行不删除,别的全部删除
sed '/\^\$/d;/\^#/d' xyz #删除空行与#开头的(注释)
Sed 's/a/x' xyz #替换所有行中的第一个a
sed '2s/a/x' xyz #替换第2行中的第一个a
sed -n \'1s/the/xyz/p\' xyz #替换第1行的the为xyz,并且只显示修改了的行
sed \'2,5s/a/x/\' /opt/4day/xyz #第二行到第五行第一个a替换成x
sed \'s/a/x/2\' /opt/4day/xyz #所有行的第二个a替换为x
sed \'2s/a/x/g\' /opt/4day/xyz #第二行的所有a替换为x
sed \'s/\[0-9\]//g\' nssw.txt #删除所有的数字
sed -r \'s/\^ +//g\' nssw.txt #删除所有行行首空格\^ +之间有空格
sed \'s/\^the/xyz/\' /opt/4day/xyz #将所有行,以the开头的替换为xyz
sed \'4,7s/\^/#/\' a.txt #将第4\~7行注释掉（行首加#号）文本中,每行的
前面都有默认有个\^
sed \'s/\^#an/an/\' a.txt #解除以#an开头的行的注释（去除行首的#号）
sed \'s#/bin/bash#/sbin/sh#\' a.txt #将/bin/bash替换为/sbin/sh
sed \'s/(\[A-Z\])/(\\1)/g\' nssw.txt #将所有大写添加括号
sed \'s/.\$//;s/.//2\' nssw.txt #每行的第二个和最后一个删除
sed -i \'s/\\(\^\[\[:space:\]\]\\)/#\\1/g\' /tmp/rc.local
#将空格开头的前面添加一个#
\# THIS FILE I #修改前
\# \# THIS FILE I #修改后
sed -r \'s/\^(.)(.\*)(.)\$/\\3\\2\\1/\' nssw.txt #第一个最后一个对调
## sed支持扩展正则 加 -r 选项
Sed -rn '/the\|bbb/p' xyz #查找含有"the"或者"bbb"的行 \| 为扩展正则
\[root@server0 \~\]# cat nssw.txt
Hello the world
ni hao ma beijing
\[root@server0 \~\]# sed \'s/.\$//;s/.//2\' nssw.txt
#每行的最后一个和第二个删除
Hllo the worl
n hao ma beijing
**sed正则表达式匹配,各种括号的转义和不转义**
\[ \] 需要匹配的时候，需要转义(这个是叛徒)
echo \"\[ \]\"\|sed \'s/\\\[.\*\\\]/aaa/g\'
( ) 需要匹配的时候，不要转义
echo \"( )\"\|sed \'s/( )/c/g\'
{ } 需要匹配的时候，不要转义
echo \"{ }\"\|sed \'s/{ }/c/g\'
当需要匹配数字，字母等使用中括号时候\[\]不要转义
但使用{}大括号作为特殊字符时候，{}需要转义。
echo \"333\"\|sed \'s/\[0-9\]\\{3\\}/ccc/g\'
当需要适配符，需要使用\\1来替换正则表达式的对应参数时：()需要转义
不能写(regrexxxx)，要写\\(regrexxxx\\)
echo \"{1234567}\"\|sed \'s/{\\(\[0-9\]\*\\)}/\\1/g\'
与此对应的还有 +和\*
在做为特别字符时候+必须转义为
\\+才有效，
而\*则不需要。
举个例子：
echo \"ccc\"\| sed \'s/c\*/aaa/g\'#正确
echo \"ccc\"\| sed \'s/c\\\*/aaa/g\'#错误
echo \"ccc\"\| sed \'s/c+/aaa/g\'#错误
echo \"ccc\"\| sed \'s/c\\+/aaa/g\'#正确
## sed复制粘贴
2）将文件中每行的第一个、倒数第1个字符互换
每行文本拆分为"第1个字符"、"中间的所有字符"、"倒数第1个字符"三个部分，然后通过替换操作重排顺序为"3-2-1"：
\[root@svr5 \~\]# sed -r \'s/\^(.)(.\*)(.)\$/\\3\\2\\1/\' nssw.txt
\^(.) 复制开头为\\1 (.\*)复制身体为\\2 (.)\$复制结尾为\\3
重新组合:\\3\\2\\1
\[root@server0 \~\]# sed -r \'s/(\[A-Z\])/(\\1)/\' nssw.txt
#将所有的大写添加()
(H)ello the world
ni hao a (B)eijing
dsfa
df(A)sd
## sed (i a c)多行文本处理
sed \[选项\] \'条件指令\' 文件..
sed工具的多行文本处理操作指令：
> i： 在指定的行之前插入文本
>
> a：在指定的行之后追加文本
>
> c：替换指定的行
\[root@server0 \~\]# sed \'i x\' nssw.txt #不加行号,默认在所有行之前插入
x
Hello the wor44ld
x
ni hao a Bei333jing
x
dssdf12fa
\[root@server0 \~\]# sed \'/\^H/i x\' nssw.txt #在H开头的行之前插入
x
Hello the wor44ld
ni hao a Bei333jing
\[root@server0 \~\]# sed \'/\^H/a x\' nssw.txt #在H开头的行之后插入
Hello the wor44ld
x
ni hao a Bei333jing
\[root@server0 \~\]# sed \'2c x\' nssw.txt #将整个第2行替换为x
Hello the wor44ld
x
dssdf12fa
## sed读取(r)与保存文件(w)
sed \[选项\] \'条件指令\' 文件..
指令:
r 读取文件
w 保存到文件