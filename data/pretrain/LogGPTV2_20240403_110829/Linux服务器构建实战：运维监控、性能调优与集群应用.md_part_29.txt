Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
和使用这个共享磁盘了。
磁盘分区，其中“/dev/sdb：5724MB”就是iSCSI共享磁盘。接下来就可以在Linux上管理
IncomingUser login.windows.auth windowssecret
Target iqn.2000-04.net.ixdba:sdc1
IncomingUser discovery.auth discoverysecret
接着修改/etc/iet/ietd.conf文件。修改后的内容如下：
ALL ALL
#iqn.2002-04.net.ixdba:sdc2 192.168.12.26
#iqn.2000-04.net.ixdba:sdc1 192.168.12.136
首先修改/etc/iet/initiators.allow文件，打开所有权限。修改后的内容如下：
1.配置iSCSITarget
此种方式在配置方面稍微复杂一些，需要在Initiator主机和iSCSITarget服务器上进行
第二阶段是登录Target/iqn/Lun时所使用的账号密码（即Login登录时用的）。
第一阶段是discovery查询认证所使用的账号和密码（即 SendTargets用的）。
iSCSITarget以账号密码方式认证分为两阶段：
最后，登录windows系统，打开MicrosoftiSCSIInitiator，添加iSCSI共享磁盘即可。
通过重启iscsi-target服务，
/dev/sdb1
Units = cylinders of 10974 *
Disk /dev/sdb: 5724 MB, 5724794880 bytes
/dev/sda2
Units = cylinders of 16065 ·512= 8225280 bytes
255 heads,
[root@ Initiator iscsi]#fdisk -1
192.168.12.246:3260,1 iqn.2002-04.net.ixdba:sdc2
[root@ Initiator iscsi]#iscsiadm -m discovery -t sendtargets -p 192.168.12.246
[root@ Initiator iscsi]# /etc/init.d/iscsi restart
接着，在IP地址为192.168.12.26的LinuxInitiator主机上执行如下操作：
Device
Device Boot
Boot
www.Linuxidc.com
63 sectors/track,
Start
Start
重新执行Target发现，Linux系统已经识别了Target共享的
512=5618688 bytes
38913
End
End
312464250
5585735
Blocks
104391
Blocks
83
H
Linux
Systen
Linux LVM
System
177
PDG
---
## Page 194
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
Target/iqn/Lun时所使用的账号密码，也必须与initiator主机中设定的用户名和密码一致。
“IncomingUser”选项包含在对应的Target中，用来指定Windows和Linux客户端主机登录
用的账号和密码，必须与Initiator主机中设定的用户名和密码一致。第二个和第三个
178第篇
Units = cy1inders of 16065 * 512 = 8225280 bytes
255 heads,63 sectors/track,38913 cylinders
Disk /dev/sda: 320.0 GB,320072933376 bytes
[root@ Initiator iscsi ]# fdisk -1
从查询结果可知，Initiator查询到了两个Target，最后执行fdisk 操作。过程如下：
192.168.12.246:3260,1 iqn.2002-04.net.ixdba:sdc2
192.168.12.246:3260,1 ign.2000-04.net.ixdba:sdc1
[root@ Initiator iscsi ]#/etc/init.d/iscsi restart
配置完毕后，重启Initiator，重新执行discovery查询，操作如下：
discovery.s
discovery.sendtargets.auth.username =discovery.auth
discovery.sendtargets.auth.authmethod = CHAP
#以下三个是针对diacovery的
node.session.auth.password =linuxsecret
node.session.auth.username = login.linux.auth
node.session.auth.authmethod = CHAP
#以下三个是针对login的
修改/etc/iscsi/iscsid.conf文件，添加如下选项：
2.配置LinuxInitiator主机
所有配置完毕以后，重启iscsi-target服务。
其中，第一个“IncomingUser”是个全局参数，
Lun 0 Path=/dev/sdc2,Type=fileio
tncominguse
Target iqn.2002-04.net.ixdba:sdc2
Lun 0 Path=/dev/sdc1,Type=fileio
Device Boot
www.Linuxidc .com
#验证害码，必须与Target端对应的IncomingUser选项设置的害码一致
sendtargets.auth.password = discoverysecret
#验证用户名称，可以是任意字料，但必须与Target端IncomingUser配置的名称一致
#表示discovery时启用CHAP验证
#验证害码，必须与Target端对应的IncomingUser选项设置的密码一致
并验证用户名称，可以是任意字符，但必须与Target端IncomingUser配置的名字一致
#表示在登录时启用CHAP验证
login.linux.auth linuxsecret
Start
End
Blocks
用来指定discovery查询认证所使
Id System
PDG
---
## Page 195
查看Windows磁盘管理器，可以看到共享硬盘分区，如图7-11所示。
态，即 Microsoft iSCSIInitiator已经连接上了iSCSI Target服务器共享的磁盘分区。最后，
Target/iqn/Lun时所使用的账号密码。填写完毕单击“确定”按钮。
单击“Advanced”按钮，如图7-10所示。
钮，然后在弹出的“LogOn toTarget”对话框中
Target，选中第一个名为“Targetiqn.2000-04.
Initiator已经从iSCSITarget端查询到了两
和密码。填写完毕后单击“确定”按钮。
复选框，然后填写discovery查询认证所使用的账号
如图7-9所示。
址和端口，填写完毕后单击“Advanced”按钮，
“Discovery”，然后在“Target Portals”部分
开Microsoft iSCSIInitiator，选择第二个标
面已经介绍过，这里只讲述不同的地方。先打
sdb:5724MB”就是识别的硬盘标识和大小。
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
在此对话框中，选中“CHAPlogon information”复选框，然后填写客户端登录iSCSI
接着选择第三个标签“Targets”，此
在此对话框中，选中“CHAPlogoninfomation”
框，在此对话框中填写iSCSITarget的IP地
“Add”按钮，弹出“Add Target Portal”
配置WindowsInitiator主机的方法在1
3.配置WindowsInitiator主机
从fdisk的输出结果可知，LinuxInitiator已经成功地连接了iSCSI共享磁盘，而“/dev/
/dev/sdb1
Units = cylinders of 10974 * 512 = 5618688 bytes
177 heads, 62 sectors/track, 1018 cylinders
Disk/dev/sdb:5724 MB,5724794880 bytes
/dev/sda2
/dev/sda1
Device Boot
Start
1018
38913
End
13
个
前
312464250
图7-9添加Discovery查询认证的账号密码
5585735
Blocks
104391
192.168.12.246
Daa dget
RceIP
red
ced Setting
sane
Id System
Be Linux LVM
83 Linux
Linux
179
X
---
## Page 196
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
180
到这里为止，Windows可以对这个iSCSI磁盘进行分区、格式化等操作了。
Www.Linuxidc.com
图7-10添加客户端登录iSCSITarget时所使用的账号和密码
图7-11通过iSCSI共享给Windows的磁盘
57.61
GB
39.24
PDG
---
## Page 197
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
已经出现了一些新的网络技术用于改善TCP/IP协议栈开销。
于通用TCP/IP协议的网络存储面临的一个很重要的性能问题就是TCP/IP协议栈开销。目前
不可靠的数据链路上实现可靠的数据传输，其性能必然受限于TCP/IP本身的传输性能，基
存在的性能瓶颈问题，分别介绍对iSCSI网络存储进行性能优化的几种方法。
的问题就变得显而易见了。下面根据iSCSI协议在数据传输、数据拷贝、数据校验三个方面
7.8.2iSCSI性能优化
载以及实际的网络带宽，因此进行数据传输也会占用系统CPU资源。
数据传输过程是利用TCP/IP协议进行网络传输的，必然受限于TCP/IP协议栈本身的开销负
目标服务器。读操作过程的操作顺序正好相反，目标服务器端操作也与启动服务器端类似。
数据拷贝过程也会占用发送端或接收端的大量CPU资源及内存带宽，从而影响系统性能。
耗大量CPU资源，因此会严重影响iSCSI系统的性能。
还必须进行CRC循环余校验计算，由于校验生成与检测属于高密度计算型操作，需要消
PDU数据包进行CRC校验计算，以便接收端接收到数据后进行正确性检验。数据封装过程
的iSCSI协议数据传输包括数据封装、数据拷贝、数据传输三个步骤。
销，在实际应用中，iSCSI数据传输性能仍然存在瓶颈。以发送端的写操作为例，一次完整
受限于TCP/IP协议栈负载及以太网最大带宽，另外iSCSI协议层也会额外增加一些负载开
7.8.1iSCSI性能瓶颈
7.8
iSCSI协议利用通用的TCP/IP协议进行海量存储数据传输，传统的TCP/IP协议用于在
1.优化网络传输
通过前面的介绍，已经了解了影响iSCSI性能的瓶颈，因此如何优化现有的iSCSI系统
TCP/IP层接收到数据包后通过PCIDMA的方式将数据传递给网卡，经物理链路传输到
3.数据传输
封装完毕后的PDU数据包以数据拷贝的方式传递给操作系统的TCP/IP协议层缓冲区，
2.数据拷贝
iSCSI协议层首先将接收到的命令封装成iSCSI协议层的PDU数据包，此过程还需要对
1.数据封装
iSCSI协议建立在传统的TCP/IP协议之上，在进行实际数据传输时，其传输系统性能
iSCSI性能优化方案
---
## Page 198
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
的CRC校验数据来保证。
合，可以通过关闭CRC校验的方法来优化iSCSI性能，而数据的正确性可以依靠TCP/IP层
调安全性，CRC校验意义就不大，所以在一些对性能要求很高而对数据安全性要求不高的场
性能。
然能进一步释放CPU资源，但iSCSIHBA硬件处理能力有限制，无法分享CPU日益提升的
来说就是一块SCSI卡，既不存在数据拷贝问题，也不存在数据校验问题。采用硬件方案虽
协议全部集成到网卡上构成iSCSI的HBA适配卡，这种方式中的iSCSIHBA适配卡对主机
优化数据校验性能成为优化iSCSI性能的关键。目前常用的优化方案有下面几种。
QLogic等。
系统性能。
硬件实现。
件方案：TOE方案是将过去由操作系统完成的TCP/IP协议栈直接转移到TOE网卡上由
性能，最终影响iSCSI系统性能。为了避免数据拷贝操作，目前主要的方法是采用TOE硬
次，内存数据拷贝又必须依赖于CPU执行指令来完成，因此会消耗CPU资源并降低内存
方式传递给TCP/IP协议栈的缓冲区进行网络传输。而内存拷贝要进行内存读写操作各一
的网络通道。
最常见的分离方法是采用虚拟局域网（VLAN)，限制iSCSI网络通向虚拟局域网，保持正常
还会使LAN的存储数据受到影响。正确的做法是将iSCSISAN网络与日常的用户网络分开。
样也可缓解主机CPU的压力。
卡，可进一步释放主机CPU资源，进而降低CPU利用率。
182
3)iSCSISAN网络绝不能与一般的以太网用户混合。如果混合不仅会削弱SAN的性能
CRC校验主要保证PDU数据在传输中的安全性和可靠性，避免数据被纂改。如果不强
通过优化CRC校验算法来加快校验过程也是提高iSCSI性能的一个途径。
为了进一步消除CRC校验运算对系统CPU资源的影响，工业界将iSCSI协议及TCP/IP
（1）iSCSIHBA硬件方案
CRC校验数据的生成或检测均是计算密集型操作，会消耗大量的CPU资源，因此如何
3.数据校验的优化
iSCSI协议层建立在传统的TCP/IP协议层之上，其PDU数据包必须通过内存拷贝的
2.避免数据拷贝
2）一些新型网卡可以实现过去由主机TCP/IP软件协议栈完成的TCP包拆分功能，这
（3）直接关闭校验
（2）优化数据校验
1）有些新型网卡可以分担过去由主机CPU完成的CRC校验和计算功能，利用这些网
TOE卡可以从一些供应商处获得，如Alacritech、LeWizCommunications、
这个方案有效地避免了TCP/IP协议栈对系统CPU资源的占用，优化了iSCSI
www.Linuxidc.com
---
## Page 199
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
将拥有广阔的应用前景。
输三个方面进行改善。随着iSCSI技术的日益成熟，采用iSCSI技术构建的IP存储网络系统
异地容灾。而对iSCSI存储系统的优化，主要集中在对iSCSI数据校验、数据拷贝、数据传
维护，并可以有效减少用户投资，节约成本。同时，iSCSI还具有良好的扩展性，方便进行
识，同时也能够迅速地搭建出一套iSCSI存储系统。
iSCSI在安全方面的设置方法。通过本章的学习，读者能够对iSCSI有一个基本的了解和认
7.9本章小结
利用iSCSI技术构建的基于IP的存储网络系统，无需昂贵的专用存储网络，
本章主要讲述了网络存储iSCSI技术的概念、组成、安装、配置和使用，还介绍了
www.Linuxidc.com
网结存储iSCSI183
，易于管理
PDG
---
## Page 200
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
MASTER SERVER只有一个，而CHUNKSERVER和CLIENT可以有多个。MFS读进程和
MFS的网络组成及运行原理如图8-1所示。
8.1MFS概论
是它能够实现在线扩展。读者必须明白的一点是，MFS是一种半分布式文件系统。
够实现RAID的功能，不但能够更节约存储成本，而且不逊色于专业的存储系统，更重要的
MFS的网络组成有三部分：MASTER SERVER、CHUNKSERVER和CLIENT，其中
MFS 的官方网站为http://www.moosefs.org/，在这里可以获取更为详细的帮助。官方
本章讲述的是Linux下的开源存储系统MFS，它是由波兰人开发的。MFS文件系统能
CHUNKSERVER3
CHUNKSERVER 2
CHUNKSERVER1
Www.Linuxidc.com
第8章
图8-1MFS组成及运行原理图
分布式存储系统MFS
KERNFL(eg.Unux)
applic
CLIENT
KERNFL(eg.FreeBSD)
mfsmount
CLIENT M
<元数据操作
Metadats
---
## Page 201
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
8.2.1MFS文件系统结构
8.2MFS文件系统
写进程的工作机制分别如图8-2和图8-3所示。
MFS文件系统结构参见图8-1，整个文件系统包含4种角色，分别是：
www.Linuxidc.com
CLIENTS
CLIENTS
3在CHUNK SERVER(S)
1要读的数据在哪里
图8-3MFS写进程的工作机制
图8-2MFS读进程的工作机制
SERVER(S)
到卿里？
1写数据
3向CHUNKSERVER(S)索要数据
返回写成功信息
4返回索要数据
4写数据
MASTER SERVER
T
2b返回成功信息
上创建新的块
SERVER(S)
（可选）
CHUNK SERVERS
0O-C
CHUNK SERVERS
5数据同步
FS185
君
PDG
---
## Page 202
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
192.168.3.98、192.168.3.138和192.168.3.139。下面介绍MFS 的搭建过程。
8.2.2
186第9篇
[root@nas mfs-1.6.11]#./configure --prefix=/usr/local/mfs \
（4）脚本配置