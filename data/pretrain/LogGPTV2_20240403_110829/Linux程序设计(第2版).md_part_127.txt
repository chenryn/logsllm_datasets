## Page 684
### 666 Linux程序设计

我们首先编译这个程序，然后将其复制到cgi-bin目录。接着，我们需要修改HTML表单，使其ACTION属性指向`/cgi-bin/decode1`，METHOD属性设置为POST。新的HTML文件名为`cgi5.html`。

#### 图20-8 提交的表单信息
Netscape: 简单的HTML表单文档  
![Netscape](http://1ocalhost/blp2e/cgi4.htnl)  
输入您的数据：  
请输入您希望访问的内容：  
- 亚洲
- 非洲
- 北美洲
- 南美洲
- 澳大利亚

提交表单后，浏览器将显示如图20-9所示的画面，可以看到表单数据中的换行符被保留了下来。

### 操作注释
以下C语言代码可以分为几个小段落来解释。在程序开始时，我们定义了一个结构体用于成对保存名/值组合，并创建一个数组来存储这些结构体。为了简化示例，我们对数据长度进行了限制。实际应用中，可以使用节点链表，每个节点包含一个指针，指向通过`malloc`分配的内存区域，从而消除数据长度的限制。

加入Java编程群：524621833

---

## Page 685
### 第20章 因特网程序设计：CGI
#### 667

接下来，我们调用`get_input`例程加载`name_val_pairs`数组。整个过程包括以下几个步骤：
1. 检查数据是通过POST还是GET方法传递。
2. 将数据传递给`ip_data`指向的字符串。
3. 对整个字符串进行分割，以便逐个处理“name=value”形式的子字符串（以“&”字符分隔）。
4. 对每一对名/值组合调用`load_nv_pair`，将成对的数据项从等号“=”处分割，并将加号“+”替换为空格。

完成输入数据处理后，我们将得到的名/值对打印出来。注意，在输出之前添加了“Content-type”行和一个空白行，每行输出数据都以回车和换行结束。

### 20.4 向客户端返回HTML
目前，我们的CGI程序发送给客户端的是纯文本。虽然功能正常，但外观不够吸引人。下面我们探讨如何让CGI程序生成HTML，使其输出更像普通的Web页面。

因为CGI程序完全控制发送给客户端的数据，所以它可以发送多种类型的数据而不仅仅是文本。通过使用“Content-type”控制行指定MIME类型及其子类型，我们可以发送HTML内容。例如：

```c
printf("Content-type: text/html\r\n\r\n");
```

更好的做法是编写一些工具函数来处理向客户端发送各种HTML标签的底层功能。以下是几个这样的工具函数：

- `html_content`：通知客户端我们将发送HTML内容。
- `html_start`：开始发送HTML文档标题部分，并启动文档主体。
- `html_header`：按指定级别输出段落标题文字。
- `html_text`：输出普通段落文本。
- `html_end`：结束HTML页面。

这些函数的实现如下：

```c
static void html_content(void) {
    printf("Content-type: text/html\r\n\r\n");
}

static void html_start(const char *title) {
    printf("<!DOCTYPE html>\n<html>\n<head>\n<title>%s</title>\n</head>\n<body>\n", title);
}

static void html_header(int level, const char *header_text) {
    if (level < 1 || level > 6) level = 6; // 强制级别为有效数字
    printf("<h%d>%s</h%d>\r\n", level, header_text, level);
}

static void html_text(const char *text) {
    printf("<p>%s</p>\r\n", text);
}

static void html_end(void) {
    printf("</body>\n</html>\n");
}
```

### 20.5.4 隐藏上下文信息
在许多情况下，服务器需要在前后表单之间传递一些信息，例如用户名或客户编号。由于表单是分开处理的，我们可以在表单上使用隐藏域来传递这些信息。当CGI程序生成的表单发送给客户端时，可以定义一个或多个隐藏域并设置默认值。用户提交表单后，CGI程序可以从隐藏域中提取上下文信息。

加入Java编程群：524621833

---

请告诉我是否还有其他部分需要优化！