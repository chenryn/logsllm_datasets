valid under the established ChildSA key .
34 [ ]
A.5 IKE_INTERMEDIATE
1 rule IKE_INTERMEDIATE_I : // I 's second key
exchange message
2 let
3 msg2 = 
4
5 k = epR ^ eI
6 keymat = h(, k)
7
21
22 [ Out ( msgINT )
23 , StateIntermI ($I , $R , spiI , spiR , nI , nR , ~
nI2 , keyma t, msg1 , msg2 , msgINT , 'g '^eI ,
24 epR , ~ peI )
25 , ! DHQtoReveal ($I , ~ peI ) ] // } keymat_old
5 integ_I = hmac (,
keymat_old )
6 msgINT = 
7
8 pq = pepI ^~ peR
9 keymat = h( keymat_old , )
10
11 // R encrypts and integrity-protects the
message with the previously exchanged
key
12 encr_pl_R = senc {} keymat_old
13 integ_R = hmac (,
keymat_old )
102A formal analysis of IKEv2’s post-quantum extension
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
14 msgINT2 = 
15 in
16 [ In ( msgINT )
17 , Fr (~ peR )
18 , Fr (~ nR2 )
19 , StateInitR ($I , $R , spiI , spiR , nI , nR ,
keymat_old , msg1 , msg2 , epI , epR )
20 ]
21 -- [ Agreed (, $R , ' responder ', , keymat )]->
22
23 [ Out ( msgINT2 )
24 , StateIntermR ($I , $R , spiI , spiR , nI , nR ,
nI2 , ~ nR2 , keymat_old , keyma t,
15 & RConfirm (I , R , spi2 , ck2 ) @ # j2
16 & # i2  ( Ex spi2 role2 peer nonce keymat2 #j .
Agreed ( spi2 , B , role2 , peer , nonce ,
keymat2 ) @ #j
25 msg1 , msg2 , msgINT , msgINT2 , epI , epR , pepI ,
6 & #j  ( Ex spi2 role nonce keymat2 #j . Agreed (
spi2 , R , role , I , nonce , keymat2 ) @ #j
8 & #j  ( Ex spi2 role nonce keymat2 #j . Agreed (
spi2 , I , role , R , nonce , keymat2 ) @ #j
9 & #j  ( Ex spi2 #k .
8 Completed ( spi2 , R , ' responder ', I , keymat ) @
#k)"
1 lemma agreement_r [ use_induction ]:
2 " All spi I R keymat #j .
103ACSAC ’21, December 6–10, 2021, Virtual Event, USA
S. Gazdag et al.
3 Completed ( spi , R , ' responder ', I , keymat ) @
#j
4 & not ( Ex #k . RevSk (I) @ k)
5 & not ( Ex #k . RevSk (R) @ k)
6 & not ( Ex #k . RevDH (I) @ k)
7 & not ( Ex #k . RevDH (R) @ k)
8 == > ( Ex spi2 #k .
9 Completed ( spi2 , I , ' responder ', R , keymat ) @
#k)"
Session Uniqueness. The following lemma proves Session
A.6.3
uniqueness:
1 lemma session_uniqueness :
2 " All I R spi spi2 keymat role #j #l.
3 Completed ( spi , I , role , R , keymat ) @ #j
4 & Completed ( spi2 , I , role , R , keymat ) @ #l
5 == > (# j = #l)"
A.6.4 Consistency. The following lemma proves Consistency:
1 lemma consistency :
2 " All spi I R keymat keymat2 #i #j .
3 Completed ( spi , I , ' initiator ', R , keymat ) @
#i
4 & Completed ( spi , R , ' responder ', I , keymat2 )
@ #j
5 & not ( Ex #k . RevSk (R) @ #k)
6 == > ( keymat = keymat2 )"
A.6.5 Key Secrecy. The following lemma proves Key secrecy:
1 lemma key_secrecy [ reuse ]:
2 " All spi I R role keymat #j .
3 Completed ( spi , I , role , R , keymat ) @ #j
4 & not ( Ex #m . RevSk (R) @ #m)
5 & not ( Ex #m . RevDH (I) @ #m)
6 & not ( Ex #m . RevDH (R) @ #m)
7 == > not ( Ex #m . K( keymat ) @ #m)"
Identity Hiding. The following lemma proves Identity Pro-
A.6.6
tection:
1 lemma identity_hiding_R :
2 " All spi I R keymat id #i .
3 Completed ( spi , R , ' responder ', I , keymat ) @
#i
4 & IdentityLearnt ( id ) @ #i
5 & not ( Ex #k . RevSk (I) @ #k)
6 & not ( Ex #k . RevDH (I) @ #k)
7 & not ( Ex #k . RevDH (R) @ #k)
8 == > not ( Ex #j .
K( id ) @ #j)"
A.7 Additional code for verifying
quantum-safe IKEv2
A.7.1 Revelation of quantum-resistant key. The following lemma
allows the revelation of quantum-resistant DH-keys.
1 rule reveal_dhq :
2 [ ! DHQtoReveal ($I , k) ]
3 -- [ RevDHQ ( $I )]->
4 [ Out (k) ]
A.7.2 Affected lemmata. As stated in Section 5.2, the lemmata for
Weak Agreement, Agreement, Key Secrecy, and Identity Protection
are only achieved if the DH-values remain secret, and therefore
need to be updated for modeling a quantum-based attacker.
1 lemma weak_agreement_i [ use_induction ]:
2 " All spi I R keymat #i .
3 Completed ( spi , I , ' initiator ', R , keymat ) @
#i
4 & not ( Ex #k . RevSk (R) @ k)
5 & not ( Ex #k . RevDHQ (I) @ k)
6 & not ( Ex #k . RevDHQ (R) @ k)
7 == > ( Ex spi2 role nonce keymat2 #j . Agreed (
spi2 , R , role , I , nonce , keymat2 ) @ #j
8 & #j  ( Ex spi2 role nonce keymat2 #j . Agreed (
spi2 , I , role , R , nonce , keymat2 ) @ #j
9 & #j  ( Ex spi2 #k .
8 Completed ( spi2 , R , ' responder ', I , keymat ) @
#k)"
1 lemma pq_agreement_r [ use_induction ]:
2 " All spi I R keymat #j .
3 Completed ( spi , R , ' responder ', I , keymat ) @
#j
4 & not ( Ex #k . RevSk (I) @ k)
5 & not ( Ex #k . RevSk (R) @ k)
104A formal analysis of IKEv2’s post-quantum extension
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
6 & not ( Ex #k . RevDHQ (I) @ k)
7 & not ( Ex #k . RevDHQ (R) @ k)
8 == > ( Ex spi2 #k .
9 Completed ( spi2 , I , ' responder ', R , keymat ) @
#k)"
6 & #j  (# i = #j)"
4 & not ( Ex #k . RevSk (R) @ k)
5 & not ( Ex #k . RevDH (I) @ k)
6 & not ( Ex #k . RevDH (R) @ k)
7 == > ( Ex spi2 role keymat2 #j . Completed (
spi2 , R , role , I , keymat2 ) @ #j
1 lemma pq_key_secrecy [ reuse ]:
2 " All spi I R role keymat #i .
3 Completed ( spi , I , role , R , keymat ) @ #i
4 & not ( Ex #j . RevSk (R) @ #j)
5 & not ( Ex #j . RevDHQ (I) @ #j)
6 & not ( Ex #j . RevDHQ (R) @ #j)
7 == > not ( Ex #j . K( keymat ) @ #j)"
1 lemma pq_identity_hiding_R :
2 " All spi R I keymat id #i .
3 Completed ( spi , R , ' responder ', I , keymat ) @
#i
4 & IdentityLearnt ( id ) @ #i
5 & not ( Ex #k . RevSk (I) @ #k)
6 & not ( Ex #k . RevDHQ (I) @ #k)
7 & not ( Ex #k . RevDHQ (R) @ #k)
8 == > not ( Ex #j .
K( id ) @ #j)"
A.8 Alternative code for authentication
lemmata where “has been running the
protocol” is interpreted as “has completed
the protocol”
A.8.1 Variants for standard IKEv2.
1 lemma aliveness_i [ use_induction ]:
2 " All spi I R keymat #i .
3 Completed ( spi , I , ' initiator ', R , keymat ) @
#i
4 & not ( Ex #k . RevSk (R) @ k)
5 == > ( Ex spi2 peer role keymat2 #j .
Completed ( spi2 , R , role , peer , keymat2 )
@ #j
6 & #j  ( Ex spi2 peer role keymat2 #j .
Completed ( spi2 , I , role , peer , keymat2 )
@ #j
8 & #j  ( Ex spi2 role keymat2 #j . Completed (
spi2 , I , role , R , keymat2 ) @ #j
9 & #j  ( Ex spi2 role keymat2 #j . Completed (
spi2 , R , role , I , keymat2 ) @ #j
8 & #j  ( Ex spi2 role keymat2 #j . Completed (
spi2 , I , role , R , keymat2 ) @ #j
9 & #j < #i)"
105