在这种情况中，G3RUH加扰器是无法工作的。有这样的事实，我们的二进制代码要传递给寄存器进行处理，
sdr100在Outernet的软件中作为sdr接收器，那么，他只可能是基于ARM或者86-64架构上运行的Linux操作系统，而最新的软件版本只对arm进行支持，所以，Outernet上用于接收的部分应该是像树莓派3一样的arm板。
我对x86-64架构下的客户端程序中的sdr100二进制文件进行了逆向，来获取Outernet解扰算法，原来，这是
IESS-30解码器，很显然，这个算法的详细细节在卫星地球站的文档中没有公开。但是，我还是找到了一个文档[19]（见28页），里面的描述有助于我的逆向。
我设计了一个模块用于 IESS-308
解码，您可以在这里[20]看到这个模块的代码。如果你熟悉乘法加扰器，你会发现这个加扰器很普通，但是，它用了一个计数器。
下面的流图可以测试我们的 IESS-308 解码器
输入流显示出了很明显的结构，所以我们有信心，这个解码器是正常的。你可以看到一些白色和青色的水平线，这符合长时间连续二进制0,1传输的特征。这张图中的每行每列的水平线的数量和分布代表着二进制的数据，如果把它们垂直摆放在一条线上，看起来可能更明显，我们会很容易发现什么数据是不改变的（例如报文头）或者改变的（例如数据段）。在这条推文中[21]，你可以看到进行如上工作的一个例子。
下一步工作是解帧，通常，我们可以通过仔细观察比特流来识别帧标记，但是，在这里我们可以通过逆向sdr100二进制代码的方式减轻工作量。sdr100中，有一些函数的名称中含有HDLC，所以我们猜测可能是使用来HDLC帧，我们尝试从数据流中恢复HDLC帧。
GNU Radio中，提供了用于解HDLC帧的模块，但是，我准备用我自己的gr-kiss[22]模块。这个模块的好处是可以去保留CRC码校验错误的数据帧。有的时候，可能一个数据帧只有几个bit是错误的，他就被完全丢弃了。然而，保留CRC校验错误的帧对于逆向协议和分析测试是很有用的。有时候，HDLC帧会有几个bit的错误，那可能是因为干扰或者解码器参数没有优化，也有可能碰巧只有16位的CRC码出现了错误。在这种情况下，保留错误帧也是很有用的。
到现在为止，我们还没有考虑信号的极性，在接受
BPSK信号的时候，你不知到他是一个原始信号还是一个翻转信号（即0,1的互换），是否进行了180度的相位翻转是模糊的，很多时候，采用差分编码来消除这种模糊性。HDLC
可能采用的是NRZ-I，也可能没有采用差分编码，而采用其他方式消除模糊，这又是一个实验和试错的过程。
实际上，Outernet不使用任何一种差分编码，因此我们需要一个正置的数据流和一个反置的数据流，只有一个可以正常工作，但是我们实现不知道是哪一个。（当我们失去信号之后，下一次连接，它可能改变。）
下面是HDLC解帧的流图，“Invert
bit”是一个自定义的模块，他的功能就是进行位翻转。也可以使用程序提供的模块实现这一功能。下面，我把两个HDLC解帧模块连接在数据流上，在其中一个前面进行位翻转。
当我们运行这个流图之后，在控制台上会看到数据帧的出现。因为我们开启了CRC检查，
所以我们确信我们的接收机可以正常工作。毕竟，如果我们在处理的时候有错误，是不可能出现这么多通过CRC校验的数据帧。
我们GNU Radio阶段的任务就完成了，一旦提取了HDLC数据帧，就需要使用free-outernet[23]这个Python脚本进行UDP发送，或者把它们存在一个文件里。free-outernet会回复被传输的文件，它还会打印一些有趣的调试和技术信息。
下面你可以看到脚本可以恢复的两个文件，e89f-messages-0.html.tbz2包含了用于业余无线电的APRS[25]信息，和ed57-amazon.com.html.tbz2，其中包含亚马逊的维基百科网页[26]。大部分的文件是以tbz2压缩格式发送的。另一个有趣的事情是，每分钟，会有一个时间数据包。这用来更新接收器的时钟信号，因为使用的是小型ARM，所以没有真实的时钟或者网络连接。
提取文件后，我们可以在Web浏览器中打开亚马逊的维基百科页面。这页是一个HTML文件，其中包含CSS样式表和图片。它为独立的查看而进行了小尺寸优化，所以所有的超链接已被删除。
对广播文件协议的介绍超出了本文的范围，你可以在我的博客[27]中找到完整的描述。我唯一不能逆向的是使用了应用级FEC的LDPC编码。它可以使接受程序在一些数据帧错误的情况下恢复文件，由于LDPC码的译码没有实现，所以你需要获取一个文件所有的数据帧才能使用我们的脚本恢复，你可以看到github上有关于LDPC的进展[28]。
**参考链接**
[1]
[2][https://en.wikipedia.org/wiki/L_band](https://en.wikipedia.org/wiki/L_band)
[3][https://en.wikipedia.org/wiki/Inmarsat](https://en.wikipedia.org/wiki/Inmarsat)
[4][https://github.com/Outernet-Project/outernet-linux-lband/blob/master/bin/sdr100-1.0.4](https://github.com/Outernet-Project/outernet-linux-lband/blob/master/bin/sdr100-1.0.4)
[5][http://sdr.osmocom.org/trac/wiki/rtl-sdr](http://sdr.osmocom.org/trac/wiki/rtl-sdr)
[5][http://cgit.osmocom.org/libmirisdr/](http://cgit.osmocom.org/libmirisdr/)
[6][https://github.com/daniestevez/gr-outernet](https://github.com/daniestevez/gr-outernet)
[7][https://github.com/daniestevez/free-outernet](https://github.com/daniestevez/free-outernet)
[8][http://datumsystems.com/m7](http://datumsystems.com/m7)
[9][http://destevez.net/tag/outernet/](http://destevez.net/tag/outernet/)
[10][https://twitter.com/scott23192](https://twitter.com/scott23192)
[11][http://www.ka9q.net/oldquotes.html](http://www.ka9q.net/oldquotes.html)
[12][http://gnuradio.org/redmine/projects/gnuradio/wiki/Guided_Tutorial_PSK_Demodulation](http://gnuradio.org/redmine/projects/gnuradio/wiki/Guided_Tutorial_PSK_Demodulation)
[13][http://gnuradio.org/redmine/projects/gnuradio/wiki/Guided_Tutorials](http://gnuradio.org/redmine/projects/gnuradio/wiki/Guided_Tutorials)
[14][http://spench.net/](http://spench.net/)
[15][http://wiki.spench.net/wiki/Gr-baz#auto_fec](http://wiki.spench.net/wiki/Gr-baz#auto_fec)
[16][https://gist.github.com/daniestevez/79f6f9971e1c6f883cb67a2989ba33e6](https://gist.github.com/daniestevez/79f6f9971e1c6f883cb67a2989ba33e6)
[17][https://gist.github.com/daniestevez/70d570292493daac33efb1767fc478ed](https://gist.github.com/daniestevez/70d570292493daac33efb1767fc478ed)
[18][http://destevez.net/2016/05/scramblers-and-their-implementation-in-gnuradio/](http://destevez.net/2016/05/scramblers-and-their-implementation-in-gnuradio/)
[19][http://www.etsi.org/deliver/etsi_etr/100_199/192/01_60/etr_192e01p.pdf](http://www.etsi.org/deliver/etsi_etr/100_199/192/01_60/etr_192e01p.pdf)
[20][https://github.com/daniestevez/gr-outernet/blob/master/lib/descrambler308_impl.cc#L72](https://github.com/daniestevez/gr-outernet/blob/master/lib/descrambler308_impl.cc#L72)
[21][https://twitter.com/ea4gpz/status/786518040141717505](https://twitter.com/ea4gpz/status/786518040141717505)
[22][https://github.com/daniestevez/](https://github.com/daniestevez/gr-kiss)[g](https://github.com/daniestevez/gr-kiss)[r-k](https://github.com/daniestevez/gr-kiss)[iss](https://github.com/daniestevez/gr-kiss)
[23]
[24]
[25] [http://aprs.org/outnet.html](http://aprs.org/outnet.html)
[26]
[27]
[28]