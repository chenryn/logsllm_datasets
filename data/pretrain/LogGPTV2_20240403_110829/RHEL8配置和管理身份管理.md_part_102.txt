:::
::: section
::: titlepage
# []{#using-canonicalized-dns-host-names-in-idm_configuring-and-managing-idm.html#enabling-canonicalization-of-host-names-in-service-principals-on-clients_using-canonicalized-dns-host-names-in-idm}在客户端的服务主体中启用主机名规范 {.title}
:::
本节论述了如何在客户端的服务主体中启用主机名规范化。
请注意，如果您使用主机主体别名，如
["向主机主体中添加别名"一节](#using-canonicalized-dns-host-names-in-idm_configuring-and-managing-idm.html#adding-an-alias-to-a-host-principal_using-canonicalized-dns-host-names-in-idm "向主机主体中添加别名"){.xref}
所述，则不需要启用规范化。
::: itemizedlist
**先决条件**
-   已安装 Identity Management(IdM)客户端。
-   以 `root`{.literal} 用户身份登录 IdM 客户端。
-   主机名在网络中是唯一的。
:::
::: orderedlist
**流程**
1.  将 `/etc/krb5.conf`{.literal} 文件中的 `[libdefaults]`{.literal}
    部分中的 `dns_canonicalize_hostname`{.literal} 参数设置为
    `false`{.literal} ：
    ``` literallayout
    [libdefaults]
    ...
    dns_canonicalize_hostname = true
    ```
:::
:::
::: section
::: titlepage
# []{#using-canonicalized-dns-host-names-in-idm_configuring-and-managing-idm.html#options-for-using-host-names-with-dns-host-name-canonicalization-enabled_using-canonicalized-dns-host-names-in-idm}启用 DNS 主机名规范化使用主机名的选项 {.title}
:::
如果您如
["在客户端的服务主体中启用主机名规范"一节](#using-canonicalized-dns-host-names-in-idm_configuring-and-managing-idm.html#enabling-canonicalization-of-host-names-in-service-principals-on-clients_using-canonicalized-dns-host-names-in-idm "在客户端的服务主体中启用主机名规范"){.xref}
所述，在 `/etc/krb5.conf`{.literal} 文件中设置了
`dns_canonicalize_hostname = true`{.literal}，您可以在服务主体中使用主机名时具有以下选项：
::: itemizedlist
-   在 Identity
    Management(IdM)环境中，您可以在服务主体中使用完整主机名，如
    `host/PI:EMAIL`{.literal}。
-   在没有 IdM 的环境中，但如果 RHEL 主机作为 Active
    Directory(AD)域的成员，则不需要进一步考虑，因为 AD
    域控制器(DC)自动为注册到 AD 的机器的 NetBIOS 名称创建服务主体。
:::
:::
:::
[]{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html}
::: chapter
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm}第 72 章 使用 Ansible playbook 在 IdM 中管理全局 DNS 配置 {.title}
:::
使用 Red Hat Ansible Engine `dnsconfig`{.literal} 模块，您可以配置
Identity Management(IdM)DNS 的全局配置。全局 DNS
配置中定义的设置应用到所有 IdM DNS 服务器。但是，全局配置优先于特定 IdM
DNS 区的配置。
`dnsconfig`{.literal} 模块支持以下变量：
::: itemizedlist
-   全局转发器，特别是 IP 地址和用于通信的端口。
-   全局转发策略：只有、first 或 none。有关这些 DNS
    转发策略类型的详情，请查看 [IdM 中的 DNS
    转发策略](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#dns-forward-policies-in-idm_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 中的 DNS 转发策略"){.link}。
-   同步正向查找和反向查找区域。
:::
::: itemizedlist
**先决条件**
-   DNS 服务安装在 IdM 服务器上。有关如何使用集成 DNS 安装 IdM
    服务器的详情，请查看以下链接之一：
    ::: itemizedlist
    -   [安装 IdM 服务器：使用集成的 DNS，集成的 CA 作为 root
        CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-with-integrated-dns_installing-identity-management){.link}
    -   [安装 IdM 服务器：具有集成的 DNS，具有外部 CA
        作为根CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-with-external-ca_installing-identity-management){.link}
    -   [安装 IdM 服务器：使用集成的 DNS,没有
        CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-without-a-ca_installing-identity-management){.link}
    :::
:::
 \
本章包括以下部分：
::: itemizedlist
-   [IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf
    中的全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#how-idm-ensures-that-global-forwarders-from-etc-resolv-conf-are-not-removed-by-networkmanager_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf 中的全局转发器"){.link}
-   [使用 Ansible 在 IdM 中存在 DNS
    全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#ensuring-the-presence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible 在 IdM 中存在 DNS 全局转发器"){.link}
-   [使用 Ansible 确保 IdM 中没有 DNS
    全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#ensuring-the-absence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible 确保 IdM 中没有 DNS 全局转发器"){.link}
-   [IdM 中 DNS
    转发策略](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#dns-forward-policies-in-idm_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 中的 DNS 转发策略"){.link}的介绍
-   [使用 Ansible playbook 确保 IdM DNS 全局配置中设置了 forward first
    策略](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#using-an-ansible-playbook-to-ensure-that-the-forward-first-policy-is-set-in-idm-dns-global-configuration_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 确保 IdM DNS 全局配置中设置了 forward first 策略"){.link}
-   [使用 Ansible playbook 确保 IdM DNS
    中禁用了全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#using-an-ansible-playbook-to-ensure-that-global-forwarders-are-disabled-in-idm-dns_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 确保 IdM DNS 中禁用了全局转发器"){.link}
-   [使用 Ansible playbook 确保 IdM DNS
    中禁用了正向和反向查找区域的同步](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#using-an-ansible-playbook-to-ensure-that-synchronization-of-forward-and-reverse-lookup-zones-is-disabled-in-idm-dns_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 确保 IdM DNS 中禁用了正向和反向查找区域的同步"){.link}
:::
::: section
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#how-idm-ensures-that-global-forwarders-from-etc-resolv-conf-are-not-removed-by-networkmanager_managing-global-dns-configuration-in-idm-using-ansible-playbooks}IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf 中的全局转发器 {.title}
:::
使用集成 DNS 安装 Identity Management(IdM)将
`/etc/resolv.conf`{.literal} 文件配置为指向 `127.0.0.1`{.literal}
localhost 地址：
``` literallayout
# Generated by NetworkManager
search idm.example.com
nameserver 127.0.0.1
```
在某些情况下，如使用 `动态主机配置`{.literal}
协议(DHCP)的网络，`NetworkManager`{.literal} 服务可能会恢复对
`/etc/resolv.conf`{.literal} 文件的更改。为了使 DNS 配置持久，IdM DNS
安装过程还通过以下方式配置 `NetworkManager`{.literal} 服务：
::: orderedlist
1.  DNS 安装脚本会创建一个
    `/etc/NetworkManager/conf.d/zzz-ipa.conf`{.literal}
    `NetworkManager`{.literal} 配置文件来控制搜索顺序和 DNS 服务器列表：
    ``` literallayout
    # auto-generated by IPA installer
    [main]
    dns=default
    [global-dns]
    searches=$DOMAIN
    [global-dns-domain-*]
    servers=127.0.0.1
    ```
2.  `NetworkManager`{.literal} 服务已重新加载，该服务始终使用
    `/etc/ NetworkManager/conf.d/ 目录中最后一个文件中的设置创建 /etc/resolv`{.literal}.conf``{=html}
    文件。这时为 `zzz-ipa.conf`{.literal} 文件。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
不要手动修改 `/etc/resolv.conf`{.literal} 文件。
:::
:::
::: section
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#ensuring-the-presence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks}使用 Ansible 在 IdM 中存在 DNS 全局转发器 {.title}
:::
本节论述了 Identity Management(IdM)管理员可以如何使用 Ansible playbook
来确保 IdM 中存在 DNS 全局转发器。在下例中，IdM 管理员确保在 DNS
服务器中存在一个到 IPv4 地址为 `7.7.9.9`{.literal}，IP v6 地址为
`2001:db8::1:0`{.literal}，端口 `53`{.literal} 的 DNS global forwarder。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsconfig`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsconfig
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    `server.idm.example.com`{.literal}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  制作 `forwarders-absent.yml`{.literal} Ansible playbook
    文件的副本。例如：
    ``` literallayout
    $ cp forwarders-absent.yml ensure-presence-of-a-global-forwarder.yml
    ```
4.  打开 `ensure-presence-global-forwarder.yml`{.literal} 文件进行编辑。
5.  通过设置以下变量来调整文件：
    ::: orderedlist
    1.  将 playbook `的 name`{.literal} 变量
        `更改为 Playbook，以确保 IdM DNS 中存在全局转发器`{.literal}。
    2.  在 `tasks`{.literal} 部分中，将任务 `的名称`{.literal}
        更改为确保
        `存在 DNS global forwarder 在端口 53 上存在 7.7.9.9 和 2001:db8::1:0`{.literal}。
    3.  在 `ipadnsconfig`{.literal} 部分的 `forwarders`{.literal} 部分：
        ::: orderedlist
        1.  将第一个 `ip_address`{.literal} 值更改为全局转发器的 IPv4
            地址： `7.7.9.9`{.literal}。
        2.  将第二个 `ip_address`{.literal} 值更改为全局转发器的 IPv6
            地址： `2001:db8::1:0`{.literal}。
        3.  验证 `端口`{.literal} 值是否已设置为 `53`{.literal}。
        :::
    4.  将 `状态`{.literal} 更改为 `present`{.literal}。
        对于当前示例为修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Playbook to ensure the presence of a global forwarder in IdM DNS
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure the presence of a DNS global forwarder to 7.7.9.9 and 2001:db8::1:0 on port 53
        ipadnsconfig:
          forwarders:
            - ip_address: 7.7.9.9
            - ip_address: 2001:db8::1:0
              port: 53
          state: present
    ```
6.  保存该文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-presence-of-a-global-forwarder.yml
    ```
:::
::: itemizedlist
**其它资源**
-   您可以在
    `/usr/share/doc/ansible -freeipa/ 目录中的 README-dnsconfig.md`{.literal}
    Markdown 文件中看到 ansible``{=html} -freeipa``{=html}
    `ipadnsconfig 模块的`{.literal} 更多 Ansible playbook
    示例。该文件还包含 `ipadnsconfig`{.literal} 变量的定义。
:::
:::
::: section
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_configuring-and-managing-idm.html#ensuring-the-absence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks}使用 Ansible 确保 IdM 中没有 DNS 全局转发器 {.title}
:::
本节论述了 Identity Management(IdM)管理员可以如何使用 Ansible playbook
来确保 IdM 中缺少 DNS 全局转发器。在以下示例步骤中，IdM 管理员确保在 DNS
服务器中没有到 IP v4 地址为 `8.8.6.6`{.literal}，IP v6 地址为
`2001:4860:4860::8800`{.literal} 端口 `53`{.literal} 的 DNS global
forwarder。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
:::
::: orderedlist
**流程**
1.  导航到
    `/usr/share/doc/ansible-freeipa/playbooks/dnsconfig`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsconfig
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    `server.idm.example.com`{.literal}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  制作 `forwarders-absent.yml`{.literal} Ansible playbook
    文件的副本。例如：
    ``` literallayout
    $ cp forwarders-absent.yml ensure-absence-of-a-global-forwarder.yml
    ```
4.  打开 `ensure-absence-of-a-global-forwarder.yml`{.literal}
    文件进行编辑。
5.  通过设置以下变量来调整文件：