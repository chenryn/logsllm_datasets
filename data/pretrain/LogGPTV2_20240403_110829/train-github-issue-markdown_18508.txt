 **TypeScript Version:**
1.9.0-dev / nightly (1.9.0-dev.20160311)
**Code**
    class ModelA
    {
        public prop : T;
        public constructor($prop : T) { }
        public Foo(
            $fn1 : ($x : T) => TData,
            $fn2 : ($x : TData) => TModel) { }
        public Foo1>(
            $fn1 : ($x : T) => TData,
            $fn2 : ($x : TData) => TModel) { }
        public Foo2>(
            $fn1 : ($x : T) => TData,
            $fn2 : ($x : TData) => TModel) { }
    }
    class ModelB extends ModelA { }
    class BaseData
    {
        public a : string;
    }
    class Data extends BaseData
    {
        public b : Data;
    }
    class P
    {
        public static Run()
        {
            var modelA = new ModelA(new Data());
            modelA.Foo(x1 => x1.b, x2 => new ModelB(x2));
            modelA.Foo1(x1 => x1.b, x2 => new ModelB(x2));
            // Why is this not working??? inferred type for x2 : BaseData
            modelA.Foo2(x1 => x1.b, x2 => new ModelB(x2)); // Error
        }
    }
**Expected behavior:**  
modelA.Foo2 call should infer the type.
**Actual behavior:**  
Is not inferring the actual type.