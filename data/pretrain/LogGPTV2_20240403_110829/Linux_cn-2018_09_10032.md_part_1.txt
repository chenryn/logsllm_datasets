---
author: Edaena Salinas
category: 观点
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 4620
date: '2018-09-19 23:25:00'
editorchoice: false
excerpt: 聊聊白板编程面试
fromurl: https://medium.freecodecamp.org/what-i-learned-from-programming-interviews-29ba49c9b851
id: 10032
islctt: true
largepic: /data/attachment/album/201809/19/232639udzlfvfqy6v66fvt.jpeg
permalink: /article-10032-1.html
pic: /data/attachment/album/201809/19/232639udzlfvfqy6v66fvt.jpeg.thumb.jpg
related: []
reviewer: wxy
selector: ''
summary: 聊聊白板编程面试
tags:
- 面试
thumb: false
title: 我从编程面试中学到的
titlepic: true
translator: DavidChenLiang
updated: '2018-09-19 23:25:00'
---
![](/data/attachment/album/201809/19/232639udzlfvfqy6v66fvt.jpeg)
在 2017 年，我参加了 ‘计算机行业中的女性’ 的[Grace Hopper 庆祝活动](https://anitab.org/event/2017-grace-hopper-celebration-women-computing/)。这个活动是这类科技活动中最大的一个。共有 17,000 名女性IT工作者参加。
这个会议有个大型的配套招聘会，会上有招聘公司来面试会议参加者。有些人甚至现场拿到 offer。我在现场晃荡了一下，注意到一些应聘者看上去非常紧张忧虑。我还隐隐听到应聘者之间的谈话，其中一些人谈到在面试中做的并不好。
我走近我听到谈话的那群人并和她们聊了起来并给了一些面试上的小建议。我想我的建议还是比较偏基本的，如“（在面试时）一开始给出个能工作的解决方案也还说的过去”之类的，但是当她们听到我的一些其他的建议时还是颇为吃惊。
为了能更多的帮到像她们一样的小白面试者，我收集了一些过去对我有用的小点子，这些小点子我已经发表在了 [prodcast episode](https://thewomenintechshow.com/2017/12/18/programming-interviews/) 上。它们也是这篇文章的主题。
为了实习生职位和全职工作，我做过很多次的面试。当我还在大学主修计算机科学时，学校每个秋季学期都有招聘会，第一轮招聘会在校园里举行。(我在第一和最后一轮都搞砸过。)不过，每次面试后，我都会反思哪些方面我能做的更好，我还会和朋友们做模拟面试，这样我就能从他们那儿得到更多的面试反馈。
不管我们怎么样找工作: 工作中介、网络，或者学校招聘，他们的招聘流程中都会涉及到技术面试：
近年来，我注意到了一些新的不同的面试形式出现了：
* 与招聘方的一位工程师结对编程
* 网络在线测试及在线编码
* 白板编程（LCTT 译注： 这种形式应该不新了）
我将重点谈谈白板面试，这种形式我经历的最多。我有过很多次面试，有些挺不错的，有些被我搞砸了。
#### 我做错的地方
首先，我想回顾一下我做的不好的地方。知错能改，善莫大焉。
当面试者提出一个要我解决的问题时， 我立即马上立刻开始在白板上写代码，什么都不问。
这里我犯了两个错误：
#### 没有澄清对解决问题有关键作用的信息
比如，我们是否只用处理数字或者字符串？我们要支持多种数据类型吗？如果你在开始解题前不去问这些问题的话，你的面试官会有一种不好的印象：这个人在我们公司的话，他不会在开始项目工作之前不问清楚到底要做什么。而这恰恰是在工作场合很重要的一个工作习惯。公司可不像学校，你在开始工作前可不会得到写有所有详细步骤的作业说明。你得靠自己找到这些步骤并自己定义他们。
#### 只会默默思考，不去记录想法或和面试官沟通
在面试中，很多时候我也会傻傻站在那思考，什么都不写。我和一个朋友模拟面试的时候，他告诉我因为他曾经和我一起工作过所以他知道我在思考，但是如果他是个陌生的面试官的话，他会觉得我正站在那冥思苦想，毫无头绪。不要急匆匆的直奔解题而去是很重要的。花点时间多想想各种解题的可能性。有时候面试官会乐意和你一起探索解题的步骤。不管怎样，这就是在一家公司开工作会议的的普遍方式，大家各抒己见，一起讨论如何解决问题。
### 想到一个解题方法
在你开始写代码之前，如果你能总结一下要使用到的算法就太棒了。不要上来就写代码并认为你的代码肯定能解决问题。
这是对我管用的步骤：
1. 头脑风暴
2. 写代码
3. 处理错误路径
4. 测试
#### 1、 头脑风暴