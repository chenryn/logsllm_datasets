+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| age \| tinyint(3) unsigned \| YES \| \| NULL \| \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
1 row in set (0.00 sec)
#### 整数型
![LINUXNSD_V01DBA1DAY01_042](media/image11.png){width="4.936111111111111in"
height="3.061111111111111in"}
#### 浮点型
![LINUXNSD_V01DBA1DAY01_043](media/image12.png){width="5.03125in"
height="3.240972222222222in"}
mysql\> create table t6(pay float(7,2));
Query OK, 0 rows affected (0.25 sec)
mysql\> desc t6 ;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| pay \| float(7,2) \| YES \| \| NULL \| \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
1 row in set (0.00 sec)
mysql\> insert into t6 values(111.222);
Query OK, 1 row affected (0.04 sec)
mysql\> select \* from t6 ;
+\-\-\-\-\-\-\--+
\| pay \|
+\-\-\-\-\-\-\--+
\| 111.22 \|
+\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
### 字符类型char/varchar：
![LINUXNSD_V01DBA1DAY01_045](media/image13.png){width="4.245138888888889in"
height="3.5069444444444446in"}
一个英语字母为一个字符
char:未指定字符数，默认为１
 性能比varchar要好，不需要检查数据大小，节省cpu资源
varchar ：必须指定字符数．不然会报错
> 最大字符长度为：65532字符,
mysql\> create table t7 (name char(20),homedir char(15),mail
varchar(30));
Query OK, 0 rows affected (0.25 sec)
mysql\> insert into t7 values(\"zdd\",\"hunan\",\"PI:EMAIL\");
Query OK, 1 row affected (0.07 sec)
mysql\> select \* from t7 ;
+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
\| name \| homedir \| mail \|
+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
\| zdd \| hunan \| PI:EMAIL \|
+\-\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.01 sec)
### 日期时间类型
**日期时间：datetime ** 占用４个字节
> 范围：1000-01-01 00:00:00.000000～9999-12-31 23:59:59.9999
**日期时间：timestamp** 占用４个字节 
> 范围：1970-01-01 00:00:00.000000\~2038-01-19 03:14:07.9999
Datetime和timestamp存储格式：yyyymmddHHMMSS，201901012018
**日  期：date** 占用４个字节 范围：0001-01-01\~9999-12-31 格式:yyyymmdd
**年  份：year** 占用１个字节 范围：1901－2155 格式:yyyy
**时  间：time** 占用３个字节 格式：HH:MM:SS
mysql\> create table t8 (
-\> name char(15),
-\> age tinyint unsigned,
-\> birthday date,
-\> upclass time,
-\> party datetime,
-\> cs year
-\> );
Query OK, 0 rows affected (0.28 sec)
mysql\> insert into t8
values(\"zdd\",17,20191123,083000,20190214203000,1991);
Query OK, 1 row affected (0.03 sec)
mysql\> desc t8;
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| name \| char(15) \| YES \| \| NULL \| \|
\| age \| tinyint(3) unsigned \| YES \| \| NULL \| \|
\| birthday \| date \| YES \| \| NULL \| \|
\| upclass \| time \| YES \| \| NULL \| \|
\| party \| datetime \| YES \| \| NULL \| \|
\| cs \| year(4) \| YES \| \| NULL \| \|
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
6 rows in set (0.00 sec)
mysql\> select \* from t8;
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
\| name \| age \| birthday \| upclass \| party \| cs \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
\| zdd \| 17 \| 2019-11-23 \| 08:30:00 \| 2019-02-14 20:30:00 \| 1991 \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
1 row in set (0.00 sec)
#### Datetime和timestamp日期时间区别
#### 使用两位数给year类型字段赋值
![LINUXNSD_V01DBA1DAY01_049](media/image14.png){width="4.898611111111111in"
height="2.932638888888889in"}
mysql\> create table t9(
-\> meetting datetime,
-\> party timestamp );
Query OK, 0 rows affected (0.24 sec)
mysql\> insert into t9 values(20190128135823,20190504180000);
Query OK, 1 row affected (0.04 sec)
mysql\> insert into t9(meetting) values(20190128135823);
Query OK, 1 row affected (0.04 sec)
#party是timestamp日期类型，未插入数据自动用系统时间填充，请如下例第二条数据
mysql\> insert into t9(party) values(20190128135823);
Query OK, 1 row affected (0.05 sec)
#meetting是datetime日期类型，未插入数据为空值，请看下例第三条数据
mysql\> select \* from t9;
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| meetting \| party \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 2019-01-28 13:58:23 \| 2019-05-04 18:00:00 \|
\| 2019-01-28 13:58:23 \| 2019-02-13 17:14:27 \|  
\| NULL \| 2019-01-28 13:58:23 \|  
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
3 rows in set (0.00 sec)
#### 时间函数
![LINUXNSD_V01DBA1DAY01_051](media/image15.png){width="5.210416666666666in"
height="3.734722222222222in"}
### 枚举类型ENUM/SET
![LINUXNSD_V01DBA1DAY01_054](media/image16.png){width="5.760416666666667in"
height="3.004861111111111in"}
mysql\> create table t10(
-\> name char(10),
-\> sex enum(\"boy\",\"girl\"),
-\> likes set(\"hgn\",\"game\",\"sleep\",\"eat\")
-\> );
Query OK, 0 rows affected (0.44 sec)
mysql\> insert into t10 values( \"zdd123\",\"man\",\"hgn,game\");
ERROR 1265 (01000): Data truncated for column \'sex\' at row 1
#"man"超出 enum的集合范围
mysql\> insert into t10 values( \"zdd123\",\"boy\",\"hgn,game\");
Query OK, 1 row affected (0.04 sec)
mysql\> select \* from t10 ;
+\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| name \| sex \| likes \|
+\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| zdd123 \| boy \| hgn,game \|
+\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
### 表中有多个字段，只给其中一个赋值
mysql\> insert into t9(meetting) values(20190128135823);
3.1 问题
本案例要求熟悉MySQL的字段数据类型、表结构，各种时间函数的使用的使用，完成以下任务操作：
在studb库里创建stuinfo表，表结构、字段类型自定义
表结构自定义，并合理使用数据类型
练习各种时间函数的使用
3.2 步骤
实现此案例需要按照如下步骤进行。
### 步骤一：创建studb库、stuinfo表
#### 1）新建studb库，并切换到studb库
mysql\> CREATE DATABASE studb;
Query OK, 1 row affected (0.00 sec)
mysql\> USE studb;
Database changed
#### 2）新建stuinfo表
假定stuinfo表用来记录每个家庭成员的姓名（name）、性别（gender）、出生日期（birth）、职业（job）、与户主关系（relation）。
mysql\> CREATE TABLE stuinfo (
-\> name varchar(16) NOT NULL,
-\> gender enum(\'male\',\'femal\') DEFAULT \'male\',
-\> birth date NOT NULL,
-\> job varchar(16) DEFAULT \'\',
-\> relation varchar(24) NOT NULL,
-\> PRIMARY KEY(name)
-\> );
Query OK, 0 rows affected (0.61sec)
查看stuinfo表的字段结构：
mysql\> DESC stuinfo;
(字段名 ＋字段类型    ＋是否为空＋是否为主键＋默认值＋描述信息）
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| name \| varchar(16) \| NO \| PRI \| NULL \| \|
\| gender \| enum(\'male\',\'femal\') \| YES \| \| male \| \|
\| birth \| date \| NO \| \| NULL \| \|
\| job \| varchar(16) \| YES \| \| \| \|
\| relation \| varchar(24) \| NO \| \| NULL \| \|
+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
5 rows in set (0.00 sec)
### 步骤二：练习各种时间函数的使用
#### 1）使用now()查看当前的日期和时间
mysql\> select now();
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| now() \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 2019-02-13 17:24:31 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.01 sec)
#### 2）使用sysdate()查看系统日期和时间
mysql\> SELECT sysdate();
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| sysdate() \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 2017-04-02 04:03:21 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
#### 3）使用curdate()获得当前的日期，不含时间
mysql\> SELECT curdate();
+\-\-\-\-\-\-\-\-\-\-\--+
\| curdate() \|
+\-\-\-\-\-\-\-\-\-\-\--+
\| 2017-04-02 \|
+\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
#### 4）使用curtime()获得当前的时间，不含日期
mysql\> SELECT curtime();
+\-\-\-\-\-\-\-\-\-\--+
\| curtime() \|
+\-\-\-\-\-\-\-\-\-\--+
\| 04:04:55 \|
+\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
#### 5）分别获取当前日期时间中的年份、月份、日
mysql\> SELECT year(now()),month(now()),day(now());
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+
\| year(now()) \| month(now()) \| day(now()) \|
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+
\| 2017 \| 4 \| 2 \|
+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
#### 6）获取系统日期时间中的月份、日
mysql\> SELECT month(sysdate()),day(sysdate());
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| month(sysdate()) \| day(sysdate()) \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 4 \| 2 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
#### 7）获取系统日期时间中的时刻
mysql\> SELECT time(sysdate());
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| time(sysdate()) \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| 04:06:08 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
### 步骤三：利用日期函数插入数据
![LINUXNSD_V01DBA1DAY01_051](media/image15.png){width="5.210416666666666in"
height="3.734722222222222in"}
mysql\> select \* from t8 ;
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
\| name \| age \| birthday \| upclass \| party \| cs \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
\| zdd \| 17 \| 2019-11-23 \| 08:30:00 \| 2019-02-14 20:30:00 \| 1991 \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
1 row in set (0.00 sec)
mysql\> insert into db1.t8 values(
-\> \"zdd2\",28,curdate(),curtime(),now(),year(now()) );
Query OK, 1 row affected (0.03 sec)
mysql\> select \* from t8;
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
\| name \| age \| birthday \| upclass \| party \| cs \|
+\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+
\| zdd \| 17 \| 2019-11-23 \| 08:30:00 \| 2019-02-14 20:30:00 \| 1991 \|
\| zdd2 \| 28 \| 2019-02-13 \| 17:33:29 \| 2019-02-13 17:33:29 \| 2019