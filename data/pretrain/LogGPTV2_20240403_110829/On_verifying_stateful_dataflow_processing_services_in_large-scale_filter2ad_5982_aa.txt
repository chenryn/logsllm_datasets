title:On verifying stateful dataflow processing services in large-scale
cloud systems
author:Juan Du and
Xiaohui Gu and
Ting Yu
On Verifying Stateful Dataﬂow Processing Services in
Large-Scale Cloud Systems
Juan Du, Xiaohui Gu, Ting Yu
Department of Computer Science, North Carolina State University
Raleigh, North Carolina, USA
PI:EMAIL, {gu,yu}@csc.ncsu.edu
ABSTRACT
Cloud computing needs to provide integrity assurance in order
to support security sensitive application services such as critical
dataﬂow processing. In this paper, we present a novel RObust Ser-
vice Integrity Attestation (ROSIA) framework that can efﬁciently
verify the integrity of stateful dataﬂow processing services and pin-
point malicious service providers within a large-scale cloud sys-
tem. ROSIA achieves robustness by supporting stateful dataﬂow
services such as windowed stream operators, and performing in-
tegrated consistency check to detect colluding attacks. We have
implemented ROSIA on top of the IBM System S dataﬂow process-
ing system and tested it on the NCSU virtual computing lab. Our
experimental results show that our scheme is feasible and efﬁcient
for large-scale cloud systems.
Categories and Subject Descriptors: H.4 [Information Systems
Applications]: General
General Terms: Security, Management, Veriﬁcation
1.
INTRODUCTION
With rapid adoption of the concepts of Software as a Service
(SaaS) and Service Oriented Architecture (SOA), cloud infrastruc-
tures have emerged as promising service provisioning platforms.
Cloud infrastructures allow multiple users, called tenants, to lease
computing resources from the cloud to run their applications. Thus,
application service providers can conveniently use the cloud infras-
tructure to provide their software as services in a cost-effective way.
In particular, our work focuses on dataﬂow processing services [4]
that often demand high-performance continuous processing over
data streams. Dataﬂow processing service has many real world
applications such as security surveillance, scientiﬁc study, and busi-
ness intelligence.
However, in open cloud systems, which consist of service providers
from different security domains, we can no longer assume that all
service components are trustworthy. For example, service compo-
nents may include security holes that can be exploited by attackers.
Attackers can also pretend to be legitimate service providers to
compromise service delivery. In particular, it is challenging to en-
sure the result integrity of dataﬂow processing services. Compared
with conﬁdentiality and privacy concerns that have been addressed
by previous research [7], the result integrity concern is the most
prevalent, which needs to be addressed no matter whether public or
private data are processed by the cloud system. Although previous
work has provided various integrity attestation solutions [2, 8] for
Copyright is held by the author/owner(s).
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
ACM 978-1-4503-0244-9/10/10.
distributed systems, those techniques often require trusted hard-
ware or secure kernel to be co-existed with the remote computing
platform, which is difﬁcult to be applied in cloud systems where
service providers often autonomously control their computing en-
vironments and run proprietary software. To this end, the goal
of our research is to develop practical service integrity attestation
techniques that do not require application modiﬁcations or assume
trusted entities on the third-party service provider site.
It is a challenging task to perform service integrity attestation for
dataﬂow applications in cloud systems. First, dataﬂow applications
require continuous runtime integrity attestation. Traditional Byzan-
tine fault detection schemes [6] rely on full time majority voting
on a set of service replicas over all input data, which fall short
for cloud infrastructures in terms of scalability.
In our previous
work, we proposed RunTest, a replay-based randomized attestation
scheme [3] that randomly selects a subset of input data to replay
and performs result consistency check to detect malicious service
providers. RunTest examines each service function individually
and identiﬁes nodes that fall outside of the maximum consistency
clique as malicious. However, real world dataﬂow applications of-
ten include stateful service functions such as windowed stream op-
erators [4]. In contrast to a stateless function whose output merely
depends on the input, the output of a stateful function depends on
both the input data and the state of the service component (e.g., pre-
viously received data in sliding-window stream operators). Thus,
simply replaying the input will yield inaccurate integrity checking
results. Second, multiple malicious service providers may launch
strategic colluding attacks to the cloud system. For example, they
can always give consistent wrong results and form a majority clique
in a speciﬁc service function to trick the algorithm to label be-
nign service providers as malicious. Thus, it is insufﬁcient to only
examine consistency relationships in individual service functions
separately.
In this paper, we present a novel RObust Service Integrity Attes-
tation (ROSIA) framework that can efﬁciently verify the integrity
of stateful dataﬂow processing services and pinpoint malicious ser-
vice providers within a large-scale cloud infrastructure. ROSIA
achieves robustness in two major aspects. First, ROSIA supports
replay-based consistency check for stateful data processing ser-
vices. Second, ROSIA can pinpoint malicious service providers
even when the system is under strategic colluding attacks. Specif-
ically, this paper makes the following contributions: 1) We pro-
vide two safe consistency check schemes for stateful services. Our
schemes do not require direct service state reset, which may alert
malicious service providers about the integrity attestation and is
impractical for implementation-speciﬁc state changes; 2) ROSIA
performs comprehensive integrity attestation by examining both
consistency and inconsistency relationships. This scheme can both
672S2
VM
S1
VM
P3
P3
S3
VM
P2
S1
VM
P1
… d3, d2, d1
User
Portal
S3
VM
P4
S6
VM
P3
S6
VM
P1
Original Dataflow
Attestation Dataflow
Service provider/
cloud tenant
Data processing 
component
Virtual machine
Application data
Pi
Si
VM
di
Figure 1: Multi-tenant cloud infrastructure.
achieve higher attack detection accuracy and limit the scope of
the damage caused by colluding attackers; and 3) We have imple-
mented the ROSIA system on top of the IBM System S stream
processing system [4] and tested it on the NCSU virtual computing
lab (VCL) [1]. Our experiment results show that ROSIA can ef-
ﬁciently verify the integrity of stateful dataﬂow applications while
imposing low overhead to the cloud system.
2. SYSTEM MODEL AND ASSUMPTIONS
We now introduce the multi-tenant cloud system, illustrated by
Figure 1. Each service provider pi can lease a set of virtual ma-
chines (VMs) from the cloud system to provide one or more ser-
vice components. A service component si is a self-contained soft-
ware unit providing a certain service function fi. Users can ac-
cess the services by making a request through some portal node,
who composes composite services from different service compo-
nents according to the user’s function speciﬁcation [5]. The portal
node accepts input data tuples di from the user, forwards to differ-
ent service components for processing, and delivers ﬁnal results to
the user. A service function may be provided by different service
providers.
Our work focuses on detecting service integrity attack to dataﬂow
processing applications where a malicious service component may
give untruthful data processing results. We assume that the total
number of malicious service components is less than that of benign
ones in the entire cloud system. But we do not assume benign
service components have to be the majority for each speciﬁc service
function as in [3]. Attackers could sporadically collude, which
means an attacker can collude with an arbitrary subset of its col-
luders at an arbitrary time. Attackers can be selective cheating,
which means they can misbehave on selective input data and/or on
selective subset of service functions. These characteristics require
that the detection scheme must be robust and scalable to capture
unpredictable and occasional misbehavior.
3. DESIGN AND ALGORITHMS
Our algorithm pinpoints malicious service providers based on
the consistency / inconsistency relationships between service providers.
It includes three parts: 1) A runtime attestation scheme, called
replay-based consistency check, to derive the consistency / incon-
sistency relationships between functionally equivalent service providers;
2) Consistency graph and inconsistency graph models to aggregate
attestation results; and 3) A pinpointing algorithm that takes the
attestation graphs as input and outputs malicious service providers.
Replay-based Consistency Check. The basic idea is to feed the
same input data into functionally equivalent service components
and compare output results to ﬁnd out consistency/inconsistency
relationships between service providers. Two service providers
have consistency relationship if they always give consistent output
results on all input data, or have inconsistency relationship if they
give inconsistent outputs on at least one input data. Result consis-
tency is deﬁned as either result equality, or the distance between
the results according to some distance function falling within a
threshold. Note that we perform integrity attestation by replaying
a subset of original input data at a later time. Thus, the malicious
attackers cannot avoid the risk of being detected when they produce
false results on the original data.
For stateless functions, given the same input data, two benign