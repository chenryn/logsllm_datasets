Config-FileFormat
Command-LineFormat
VariableName
OptionSetsVariable
cupgrad
Default
PermittedValues
--innodb_fast_shutdown=#
Valid Values
Type
Global
innodb_fast_shutdown
Yes
Yes,innodb_fast_shutdown
innodb_fast_shutdown
pta
0,1,2
boolean
---
## Page 71
7）正常启动MySQL服务，命令如下：
6）再次关闭MySQL服务，命令如下：
MySQLd_safe--defaults-file=/etc/my.cnf--user=MySQL&
/etc/init.d/MySQLstop或MySQLadmin-uroot-p123456shutdown
Running'MySQL_fix_privilege_tables...
test.t2
test.t1
test.log20111207
test.log20111206
test.log20111205
test.log20111204
test.log20111202
test.log20111201
test.log20111130
test.log20111129
test.log20111128
test.log20111127
test.heartbeat
MySQL.user
MySQL.time_zone_transition
MySQL.time_zone_name
MySQL.event
MySQL.db
MySQL.columns_priv
est.log20111203
M
M
M
M
Lookingfor'MySQLcheck'as:bin/MySQLcheck
Lookingfor'MySQL'as:bin/MySQL
M
M
ySQL.time_zone_transition_type
ySQL.time_zone_leap_second
ySQL.time_zone
ySQL.tables_priv
ySQL.slow_log
ySQL.servers
ySQL.procs_priv
SQL.proc
SQL.plugin
SQL.ndb_binlog_index
SQL.host
ySQL.help_topic
ySQL.help_relation
ySQL.help_keyword
ySQL.help_category
ySQL.general_log
SQL.func
OK
只
只
OK
OK
吴
吴
吴吴吴吴
吴
OK
0
OK
OK
OK
第1章MySQL5.5介绍·57
---
## Page 72
58·第一部分MySQL5.5新特性篇
XFS分区，MySQL5.5.20二进制版本。
装MySQL5.5时出现系统崩溃（如图1-24所示），当时的环境为：系统是RHEL5.3，64位，
在升级过程中，有一个需要注意的问题，
系统崩溃时，作者用DELLDRAC远程管理卡抓的截屏如图1-25所示。
至此，升级过程完毕。
8）来查看一下版本，如下所示：
1row inset(0.00 sec)
@@innodb_version
MysQL>select@@innodb_version;
rowinset(0.00sec)
5.5.20-enterprise-commercial-advanced-log
MySQL>selectversion();
1.1.8
version()
5:57
1]#
niti
图1-25系统崩溃信息
图1-24系统崩溃信息
l/mvsgl/bin/ayaql
50:571
nefiatelg
eiib 1.3.8
，这是作者之前在安装时遇到的。RHEL5.3安
mie bui lt.0
defanite-file=/ete/ay.
0E
---
## Page 73
图1-27所示。
1.7.2
注意
系统正常了，没有出现死机情况。
核未自带XFS文件系统，是通过往内核打补丁使之支持的，后来把系统升级为RHEL5.5，
这里选择Linux-Generic版本，它有两个版本，
安装MySQL是件很简单的事情，只需下载官方的二进制版即可，如图1-26所示。
RHEL5.5版本开始，内核支持XFS文件系统。
可以看出，XFS文件系统在读写时出现报错。出现此问题的原因是，RHEL5.3系统内
shell>chown-RMySQLdata
shell>chown-Rroot.
shell>scripts/MysQL_install_db--user=MySQL
shell>chgrp-R MysQL.
shell>chown-RMySQL
shell>cdMySQL
shell>In-sfull-path-to-MySQL-VERSION-OSMySQL
shell>tar zxvf/path/to/MySQL-VERSION-OS.tar.gz
shell>useradd-r-g MysQLMySQL
shell>groupaddMySQL
解压缩完成以后，
hell>cd/usr/local
直接安装MySQL5.5，采用数据导出／导入方式升级
Generic
2.6(x86,32-bit),Compressed
x86_64.tar.
，查看安装文档INSTALL-BINARY，按照给出的操作步骤安装即可。
Linux-Generic
Select Platform:
5.5.31
Selectversion:
MySQL CommunityServer5.5.31
Generally Available(GA)ReleasesDevelopment Releases
图1-2732位和64位二进制版本
图1-26二进制版本
口
，一个是32位的，一个是64位的，如
Seleet
Seleet
5.5.31
.5.31
MDs:65f1bd1656d922b4a6f48f71d7e
170.0M
171.4M
---
## Page 74
60·第一部分MySQL5.5新特性篇
能，在物理服务器资源已经达到饱和的情况下，应用程序仍然能够响应各种事件。
发数改进措施使MySQL5.5在高事务处理频率和用户连接负载下，仍然能够保持很高的性
处理只读（ReadOnly）操作时的性能和可扩展性，它们是在MySQL5.1中的200%。新的并
了如下配置：
认内置的InnoDB引擎的实例。
统平台基准进行的。这些基准包括在MySQL5.1版本中配置了可选的InnoDB1.0插件和默
多处理器/多核、超线程构架中支持更好。为了便于快速参考，下面对Linux平台和
1.8性能测试：MySQL5.5与MySQL5.1
Windows平台下的MySQL5.5版本和MySQL5.1版本所做的性能比较是在Oracle的内置系
如下：
在MySQL5.5中，官方做了大量的工程性工作，并且重构了InnoDB，特别是在CPU
根据要求，在对Linux系统平台的MySQL5.5进行 Sysbench 基准测试时，对服务器做
图1-28显示了Linux系统中，在高事务处理频率和连接负载的情况下，MySQL5.5在
4颗CPU，每颗CPU有6个核。
IntelXeonx7460,x86_64。
MySQL5.5在Linux系统平台下的Sysbench基准测试
然后在原来的MySQL5.1数据库中把数据导出来，在MySQL5.5中还原即可。命令
口操作系统：Fedora10。
shell>cp support-files/MysQL.server/etc/init.d/MysQL.server
#Nextcommand isoptional
shell>bin/MySQLd_safe--user=MySQL&
shell>cpsupport-files/my-medium.cnf/etc/my.cnf
#Nextcommand is optional
处理
物
每秒
口
主频2.86GHz、32GB内存。
8000
1000
2000
3000
4000
5000
6000
7000
t0
4
图1-28Linux系统下 Sysbench 基准-只读（ReadOnly)
1632
64
数据库连接数
1282563845127681024
---
## Page 75
服务器资源已经达到饱和的情况下，仍然保持高于MySQL5.1之前版本的性能。
负载的情况下，MySQL5.5的性能有所下降，但新的并发数改进措施使MySQL5.5在物理
处理读/写操作时的性能和可扩展性是MySQL5.1的370%。虽然在高事务处理频率和连接
图1-29显示了Linux系统中，在高事务处理频率和连接负载的情况下，MySQL5.5在
秒物理
LO00
图1-29Linux系统下 Sysbench基准-读/写（Read/Write）
1632
641282563845127681024
数据库连接数
第1章MySQL5.5介绍·61
---
## Page 76
复制模式。
注意
一台设置为半同步复制模式的从服务器及时收到信息为止。
(如图2-1所示)。当出现超时情况时，源主服务器会暂时切换到异步复制模式，直到至少有
务器一个反馈，告诉对方已经接收完毕，这时主库线程才返回给当前 session告知操作完成
接收完主服务器发送的binlog日志文件并写入自己的中继日志relay log里，然后会给主服
有接收到主机发送过来的binlog日志，会造成主服务器／从服务器的数据不一致，甚至在
时也带来了很高的风险，这就意味着当主服务器或从服务器端发生故障时，有可能从机没
库把binlog日志发送给从库，这一动作就结束了，并不会验证从库是否接收完毕，但这同
2.1
恢复时会造成数据丢失。
为了解决上述问题，MySQL5.5引人了一种半同步复制模式，该模式可以确保从服务器
半同步复制模式必须在主服务器和从服务器端同时启用，否则主服务器默认使用异步
默认情况下，MySQL5.1/5.5的复制功能是异步的，异步复制可以提供最佳的性能，主
半同步复制简介
半同步复制
第2章
数据
MySQL主服务器
应用程序
日志
二进制
复制器
半同步
图2-1
半同步复制模式
确认
复制
复制器
半同步
MySQL从服务器
制日志
中继二进
数据
---
## Page 77
2.3
系统会自动加载该插件，无须再次执行上面的命令。
可很简单地安装完毕：
等步骤），半同步复制插件在目录/usr/local/MySQL/lib/plugin下，只需按照下面的步骤，即
2.2
这里采用MySQL二进制版本（官方编译好的版本，无需configure;make;make install
在初次加载插件后，MySQL会将该插件记录到系统表MySQL.plugin中，下次启动时
在slave从库上共有两个配置参数，如下所示：
口rpl_semi_sync_master_trace_level=32，指用于开启半同步复制模式时的调试级别，
rpl_semi_sync_master_wait_no_slave，表示是否允许master每个事务提交后都要等
rpl_semi_sync_master_timeout=10 000，该参数默认为10 000毫秒，即10秒，
rpl_semi_sync_master_enabled=ON，表示在master上已经开启半同步复制模式。
半同步复制的配置参数较少，其中，在master主库上有4个相关参数，如下所示：
这样以后启动MySQL时就会自动开启半同步复制功能。
另外，在my.cnf配置文件里加人：
rpl_semi_sync_slave_enabled=1
rpl_semi_sync_master_enabled=1
SET GLOBALrpl_semi_sync_slave_enabled=ON;
install pluginrpl_semi_sync_slave soname'semisync_slave.so';
SET GLOBALrpl_semi_sync_master_enabled=ON;
在master和 slave库首次启动时，安装插件，并开启半同步复制。
installpluginrpl_semi_sync_mastersoname'semisync_master.so';
-rwxr-xr-x1MysQLMySQL 80K11-2323:38 semisync_slave.so
rwxr-xr-x1MysQLMySQL147K11-2323:38semisync_master.so
[root@vm01plugin]#Il-h semisync_*
usr/local/MysQL/lib/plugin
[root@vm01plugin]#pwd
默认是32。
root@vm01plugin]#
参数说明
slave追赶上后，也不会开启半同步复制模式，需要手工开启。
待 slave 的接收确认信号。默认为ON，即每一个事务都会等待。如果为OFF，则
恢复了，则会自动再次回到半同步复制模式。
秒，则降级为异步复制模式，不再等待 slave 从库。如果主库再次探测到 slave 从库
过，这个参数是动态可调的，它用来表示如果主库在某次事务中的等待时间超过10
半同步复制安装配置
第2章半同步复制·63
不
---
## Page 78
64·第一部分MySQL5.5新特性篇
FILE='MySQL-bin.000001',master_LOG_POS=107;
MySQL5.1版本-样。
2.4.1如何验证半同步复制是否正常工作
2.4
安装完毕后，就要完成主从同步配置了，
首先，在master库上导出一份全量数据：
在上面的状态信息中，有以下参数值得关注：
如何验证半同步复制模式是否已经开始工作了呢？可以采用如下方法。
master_HST=192.168.8.22,master_USER=repl,master_PASWORD=repl,master_PORT=3306,master_G
然后，把主库上导出的全量数据远程复制到从库上，在 slave 库上导人全量数据完毕后：
口rpl_semi_sync_slave_trace_level=32，指用于开启半同步复制模式时的调试级别，默
rpl_semi_sync_slave_enabled=ON，表示在 slave上已经开启半同步复制模式。
14 rows in set(0.00 sec)
在master主库上，查看状态，如下：
建立主从复制，并开启同步。
start slave;
MySQL>showstatuslike'%semi%;
CHANGEmasterTO
--single-transaction--master-data=2-A>alldata.sql
Rpl_semi_sync_master_wait_pos_backtraverse
Rpl_semi_sync_master_tx_waits
Rpl_semi_sync_master_timefunc_failures
Rpl_semi_sync_master_status
Rpl_semi_sync_master_no_tx
Rpl_semi_sync_master_net_waits
Rpl_semi_sync_master_net_wait_time
Rpl_semi_sync_master_clients
Variable_name
/usr/local/MysQL/bin/MySQLdump-uroot-p123456-q
Rpl_semi_sync_master_tx_wait_time
Rpl_semi_sync_master_tx_avg_wait_time
功能测试
认是32。
0
|Value
0
0
0
2
0
0
，在MySQL5.5版本中该配置方法和
---
## Page 79