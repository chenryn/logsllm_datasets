“Tracing on AIX and Linux” on page 376
On AIX and Linux, you can use the strmqtrc and endmqtrc commands to start and end tracing, and
dspmqtrc to display a trace file. On AIX, you can use AIX system trace in addition to using the strmqtrc
and endmqtrc commands.
“Using trace with IBM MQ server on IBM i” on page 382
If you have an IBM MQ server installation on IBM i, you can use the TRCMQM command to start and stop
tracing and specify the type of trace that you require. Alternatively, you can control tracing from the IBM
i command line by calling the QMQM/STRMQTRC and QMQM/ENDMQTRC programs, or in the IBM i Qshell
using the STRMQTRC, ENDMQTRC and DSPMQTRC commands.
“Tracing on z/OS” on page 395
There are different trace options that can be used for problem determination with IBM MQ. Use this topic
to understand the different options and how to control trace.
Using com.ibm.mq.commonservices
The com.ibm.mq.commonservices properties file contains the following entries relating to the output
of diagnostics from the Java components of IBM MQ.
Note that case is significant in all these entries:
Diagnostics.Java= options
Which components are traced using Java trace. Options are one or more of explorer, soap, and
wmqjavaclasses, separated by commas, where "explorer" refers to the diagnostics from the IBM MQ
Explorer, "soap" refers to the diagnostics from the running process within IBM MQ Transport for SOAP,
and "wmqjavaclasses" refers to the diagnostics from the underlying IBM MQ Java classes. By default
no components are traced.
Diagnostics.Java.Trace.Detail= high|medium|low
Detail level for Java trace. The high and medium detail levels match those used in IBM MQ tracing
but low is unique to Java trace. This property is ignored if Diagnostics.Java is not set. The default is
medium.
IBM MQ troubleshooting and support 441
Diagnostics.Java.Trace.Destination.File= enabled|disabled
Whether Java trace is written to a file. This property is ignored if Diagnostics.Java is not set. The
default is disabled.
Diagnostics.Java.Trace.Destination.Console= enabled|disabled
Whether Java trace is written to the system console. This property is ignored if Diagnostics.Java is not
set. The default is disabled.
Diagnostics.Java.Trace.Destination.Pathname= dirname
The directory to which Java trace is written. This property is ignored if Diagnostics.Java is not set or
Diagnostics.Java.Trace.Destination.File=disabled. On AIX and Linux systems, the default is /var/mqm/
trace if it is present, otherwise the Java console (System.err). On Windows, the default is the system
console.
Diagnostics.Java.FFDC.Destination.Pathname= dirname
The directory to which Java FFDC output is written. The default is the current working directory.
Diagnostics.Java.Errors.Destination.Filename= filename
The fully qualified file name to which Java error messages are written. The default is AMQJAVA.LOG in
the current working directory.
An example of a com.ibm.mq.commonservices properties file is given in Figure 62 on page 442. Lines
beginning with the number sign (#) are treated as comments.
#
# Diagnostics for MQ Explorer are enabled
#
Diagnostics.wmqexplorer
#
# High detail Java trace
#
Diagnostics.Java.Trace.Detail=high
#
# Java trace is written to a file and not to the console.
#
Diagnostics.Java.Trace.Destination.File=enabled
Diagnostics.Java.Trace.Destination.Console=disabled
#
# Directory for Java trace file
#
Diagnostics.Java.Trace.Destination.Pathname=c:\\tracedir
#
# Directory for First Failure Data Capture
#
Diagnostics.Java.FFDC.Destination.Pathname=c:\\ffdcdir
#
# Directory for error logging
#
Diagnostics.Java.Errors.Destination.Filename=c:\\errorsdir\\SOAPERRORS.LOG
#
Figure 62. Sample com.ibm.mq.commonservices properties file
Java trace and FFDC files
File name conventions for Java trace and FFDC files.
When Java trace is generated for IBM MQ Transport for SOAP, it is written to a file with a name
of the format AMQ. diagid. counter.TRC. Here, diagid is the value of the system property
com.ibm.mq.commonservices.diagid associated with this Java process, as described earlier in this
section, and counter is an integer greater than or equal to 0. All letters in the name are in uppercase,
matching the naming convention used for normal IBM MQ trace.
If com.ibm.mq.commonservices.diagid is not specified, the value of diagid is the current time, in the
format YYYYMMDDhhmmssmmm.
When Java trace is generated for the IBM MQ Explorer, it is written to file with a name of the format
AMQYYYYMMDDHHmmssmmm.TRC.n. Each time IBM MQ Explorer trace is run, the trace facility renames all
442 Troubleshooting and Support for IBM MQ
previous trace files by incrementing the file suffix .n by one. The trace facility then creates a new file with
the suffix .0 that is always the latest.
The IBM MQ Java classes trace file has a name based on the equivalent IBM MQ Transport for SOAP Java
trace file. The name differs in that it has the string .JC added before the .TRC string, giving a format of
AMQ. diagid. counter.JC.TRC.
When Java FFDC is generated for the IBM MQ Explorer or for IBM MQ Transport for SOAP, it is written to a
file with a name of the format AMQ. diagid. counter.FDC where diagid and counter are as described
for Java trace files.
Java error message output for the IBM MQ Explorer and for IBM MQ Transport for SOAP is written to
the file specified by Diagnostics.Java.Errors.Destination.Filename for the appropriate Java process. The
format of these files matches closely the format of the standard IBM MQ error logs.
When a process is writing trace information to a file, it appends to a single trace output file for the lifetime
of the process. Similarly, a single FFDC output file is used for the lifetime of a process.
All trace output is in the UTF-8 character set.
Tracing Managed File Transfer resources on Multiplatforms
The trace facility in Managed File Transfer is provided to help IBM Support diagnose your problems and
issues. You can trace various different resources.
Related tasks
“Collecting troubleshooting information for IBM Support” on page 302
When you open a case with IBM, you can include additional IBM MQ troubleshooting information
(MustGather data) that you have collected to help with investigating the problem. In addition to the
information described in this section, IBM Support might request further information on a case by case
basis.
Tracing Managed File Transfer agents on Multiplatforms
The trace facility in Managed File Transfer is provided to help IBM Support diagnose your problems and
issues. Various commands and properties control the behavior of this facility.
About this task
If you are asked to provide trace output to investigate an issue with an agent, use one of the following
options, depending on whether it is possible for you to stop the agent for a short period of time.
If you are unsure which option to use, contact your IBM Support representative and they will advise you
on the best way to collect trace for the issue that you are seeing.
Procedure
• If it is possible for you to stop an agent for a short period of time, collect a trace of the agent from
startup.
For more information, see “Collecting a Managed File Transfer agent trace from startup” on page 444.
• If it is not possible for you to stop an agent, then collect a trace dynamically using the
fteSetAgentTraceLevel command.
For more information, see “Collecting a Managed File Transfer agent trace dynamically” on page 445.
IBM MQ troubleshooting and support 443
Collecting a Managed File Transfer agent trace from startup
Where it is possible for you to stop an agent for a short period of time, you should collect Managed File
Transfer agent trace from startup.
Before you begin
You need to set various properties in the agent.properties file for the agent that needs to be traced.
About this task
To collect a trace from startup, complete the following steps.
Procedure
1.Locate the agent.properties file for the agent that needs to be traced.
The agent.properties file can be found in the MQ_DATA_PATH/mqft/config/
coordination_qmgr_name/agents/agent_name directory.
2.Edit the files and add entries for the following properties:
• trace=trace specification
The trace property determines the internal classes and packages that are to be traced.
Unless otherwise specified by your IBM Support representative, set this property to the value
com.ibm.wmqfte=all.
• traceFiles=number of trace files to use
• traceSize=size of each trace file, in MB
The traceFiles and traceSize properties are used to control the amount of trace data that is
collected. You should set these properties to large values, to collect as much trace data as possible.
For example, to collect 1GB of wrapping trace using the trace specification com.ibm.wmqfte=all,
add the following lines to the agent.properties file:
trace=com.ibm.wmqfte=all
traceFiles=5
traceSize=200
This results in the agent writing trace data to a maximum of 5 files, where each file has a size of
200MB.
For more information on these agent properties, see The MFT agent.properties file.
3.Stop the agent that needs to be traced, using the fteStopAgent command.
4.Start the agent, by running the fteStartAgent command.
5.Reproduce the issue.
6.Stop the agent.
7.Edit the agent.properties file for the agent, and remove the entries for the trace, traceFiles,
and traceSize properties that you added in step “2” on page 444.
This ensures that trace is not enabled the next time you restart the agent.
Results
The resultant trace files are written to the MQ_DATA_PATH/mqft/logs/coordination_qmgr_name/
agents/agent_name/logs/trace%PID% directory, where %PID% is the process identifier for the
agent.
444 Troubleshooting and Support for IBM MQ
Collecting a Managed File Transfer agent trace dynamically
The fteSetAgentTraceLevel command allows trace to be collected from a running agent. This can be
very useful if IBM Support need to see a trace from an agent that cannot be stopped.
About this task
To collect a trace from an agent using the fteSetAgentTraceLevel command, complete the following
steps.
Procedure
1.Turn on trace for the agent by running the following command:
fteSetAgentTraceLevel -traceAgent classes=level agent_name
The -traceAgent parameter determines the internal classes and packages that are to be traced.
Unless otherwise specified by your IBM Support representative, set this property to the value
com.ibm.wmqfte=all.
2.Reproduce the issue.
3.Turn off trace for the agent by running the following command:
fteSetAgentTraceLevel -traceAgent =off agent_name
If an agent is busy, the trace files might wrap quickly and overwrite the information needed to investigate
the issue. If this is so, schedule some time to stop the agent then proceed as detailed in the following
steps. If you cannot stop the agent for a short period of time, contact your IBM Support representative
and discuss alternative trace specifications to use, to reduce the amount of trace data that is being
generated.
4.Locate the agent.properties file for the agent that needs to be traced.
The agent.properties file can be found in the MQ_DATA_PATH/mqft/config/
coordination_qmgr_name/agents/agent_name directory.
5.Edit the file and add entries for the following properties:
traceFiles=number_of_trace_files_to_use
traceSize=size_of_each_trace_file_in_MB
The traceFiles and traceSize properties are used to control the amount of trace data that is
collected.
The default value of the traceFiles property is 5, and the traceSize property has the default
value of 20MB. This means that if you turn on trace dynamically, and you have not set the properties,
the agent writes trace information to 5 wrapping trace files, each with a maximum size of 20MB.
You should set these properties to large values, to collect as much trace data as possible.
For example, to collect 1GB of wrapping trace, add the following lines to the agent.properties
file:
traceFiles=5
traceSize=200
This results in the agent writing trace data to a maximum of 5 files, where each file has a size of
200MB.
For more information on these agent properties, see The MFT agent.properties file.
6.Stop the agent, by running the fteStopAgent command.
7.Start the agent, by running the fteStartAgent command.
8.Enable trace for the agent, by running the following command:
IBM MQ troubleshooting and support 445
fteSetAgentTraceLevel -traceAgent classes=level agent_name
Unless otherwise specified by your IBM Support representative, set the -traceAgent property to
the value com.ibm.wmqfte=all.
9.Reproduce the issue.
10.Turn trace off on the agent by running the following command:
fteSetAgentTraceLevel -traceAgent =off agent_name
Results
The resultant trace files are written to the MQ_DATA_PATH/mqft/logs/coordination_qmgr_name/
agents/agent_name/logs/trace%PID% directory, where %PID% is the process identifier for the
agent.
Tracing Managed File Transfer commands on Multiplatforms
The trace facility in Managed File Transfer is provided to help IBM Support diagnose your problems and
issues. You can use this facility to trace commands.
About this task
Attention: Tracing a command only collects information about the processing done by the
command. It does not trace any activity that an agent might perform while processing that
command.
Procedure
1.Bring up a command prompt, and navigate to the MQ_INSTALLATION_PATH\bin directory.
2.Run the command:
./command_name -trace classes=level -tracePath directory_path command_arguments
command_name -trace classes=level -tracePath directory_path command_arguments
where
• command_name is the name of the command to be traced.
• classes=level is the trace level to use, and which classes to enable trace for. Unless otherwise
specified by your IBM Support Representative, set this to com.ibm.wmqfte=all.
• directory_path is the directory where the trace files will be written to.
• command_arguments are the arguments that need to be passed to the command, for example, the
name of the agent for the ftePingAgent command.
Results
The resultant trace files are written to the directory specified by the -tracePath parameter.
The trace files are called trace%PID%.txt.number, where:
• %PID% is the process identifier for the command.
• number is a sequence number for the trace file. Typically, the trace information generated by a
command is contained within a single trace file that has a sequence number of 0.
446 Troubleshooting and Support for IBM MQ
However, it is possible that a command will generate a lot of trace information. In this situation, the
trace will be written to multiple files. The current trace file has a sequence number of 0, the next oldest
trace file has a sequence number of 1, and so on.
Trace output for commands are written to a maximum of five wrapping trace files. The maximum size of
each trace file is 20MB.
Note: If the user running the command does not have permission to write to the directory specified by the
-tracePath parameter, the trace output is written to standard error.
Example
In this example, the fteListAgents command is traced, and the trace is written to the C:\trace
directory:
fteListAgents -trace com.ibm.wmqfte=all -tracePath C:\trace
In this example, the fteCreateTransfer command is traced, and the trace is written to the /tmp
directory:
fteCreateTransfer -trace com.ibm.wmqfte=all -tracePath /tmp -t text -sa AGENT1
-da AGENT2 -df /import/transferredfile.txt /export/originalfile.txt
The trace file written to /tmp only contains information about the processing performed by the
fteCreateTransfer command, such as, how the command builds the transfer request message that is
sent to the agent, and how long it waits for the agent to send back an acknowledgment indicating that it
has received the request. The trace file does not contain any information about the transfer itself.
Tracing Managed File Transfer standalone loggers on
Multiplatforms
The trace facility in Managed File Transfer is provided to help IBM Support diagnose your problems and
issues. Various commands and properties control the behavior of this facility.
About this task
If you are asked to provide trace output to investigate an issue with a logger, use one of the following
options, depending on whether it is possible for you to stop the logger for a short period of time.
If you are unsure which option to use, contact your IBM Support representative and they will advise you
on the best way to collect trace for the issue that you are seeing.
Procedure
• If it is possible for you to stop a logger for a short period of time, collect a trace of the logger from
startup.
See “Collecting a Managed File Transfer standalone logger trace from startup” on page 447.
• If it is not possible for you to stop a logger, then collect a trace dynamically using the
fteSetLoggerTraceLevel command.
See “Collecting a Managed File Transfer standalone logger trace dynamically” on page 448.
Collecting a Managed File Transfer standalone logger trace from startup
Where it is possible for you to stop a logger for a short period of time, you should collect Managed File
Transfer logger trace from startup.
Before you begin
You need to set various properties in the logger.properties file for the logger that needs to be traced.
IBM MQ troubleshooting and support 447
About this task
To collect a trace from startup, complete the following steps.
Procedure
1.Locate the logger.properties file for the logger that needs to be traced.
The logger.properties file can be found in the MQ_DATA_PATH/mqft/config/
coordination_qmgr_name/loggers/logger_name directory.
2.Edit the file and add entries for the following properties: