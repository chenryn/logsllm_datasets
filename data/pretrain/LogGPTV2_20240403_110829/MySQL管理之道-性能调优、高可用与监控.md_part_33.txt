from_Isn=0
backup_type=full-backuped
[root@M12013-06-12_16-46-36]#catxtrabackup_checkpoints
13061216:59:56innobackupex:completedOK!
-incremental-basedir=/bak/fullbak/2013-06-12_16-46-36/
innobackupex--defaults-file=/etc/my.cnf/bak/fullbak/
1）先进行全量备份，命令如下：
tar-ixvfbackup.tar
13061216:16:42innobackupex:completed0K!
13061216:16:42innobackupex:Connectiontodatabaseserverclosed
innobackupex:MySQLbinlogposition:filename'mysql-bin.000001',position151
innobackupex:Backupcreatedindirectory'/usr/local/mysql/data'
本地服务器IP：192.168.8.25
[root@M1bak]#cdfullbak/2013-06-12_16-46-36/
第6章备份与恢复·233
---
## Page 248
234·第二部分故障诊断与性能优化篇
/etc/init.d/mysqlstart
5）启动MySQL数据库，命令如下：
chown-Rmysql.mysql/usr/local/mysql/data/
4）数据恢复完成之后，需要修改相关文件的权限，命令如下：
innobackupex--copy-back/bak/fullbak/2013-06-12_16-46-36/
3）将备份文件中的数据恢复到数据库中，命令如下：
innobackupex-apply-log/bak/fullbak/2013-06-12_16-46-36/
2）再恢复全量事务日志，命令如下：
innobackupex--apply-log--redo-only/bak/fullbak/2013-06-12_16-46-36/
1）先恢复增量事务日志，命令如下：
进行增量恢复的步骤如下：
6．增量恢复
-incremental-dir=/bak/incrementbak/2013-06-12_16-59-27/
[root@M1 2013-06-12_16-59-27]#
compact=0
last_Isn=3143308222
to_lsn=3143308222
from_Isn=3143306401
[root@M12013-06-12_16-59-27]#cat xtrabackup_checkpoints
root@M12013-06-12_16-59-27]#
[root@M1bak]#cd incrementbak/2013-06-12_16-59-27/
---
## Page 249
第8章
第7章
批量管理服务器
目前流行的4种高可用架构
高可用集群管理篇
第三部分
---
## Page 250
进行相互间的健康状态检查，即心跳探测。心跳探测主要通过网络来进行，包括私网心跳
是评价一款集群软件高可用性的重要指标。此外，在集群系统中，服务器之间还需要定期
可用集群产品而言，故障监视都是最核心的功能。监视资源种类的多少和监视层次的深浅，
际需求和集群软件的发展趋势出发，谈谈如何选择一款好的高可用软件。对于任何一款高
多的集群软件产品，用户应该怎样把握自己的需求，做出正确的选择呢？下面就从用户实
以上的节点，提供比双机热备更多、更高级的功能，更能满足用户不断出现的需求变化。
系统能持续对外提供服务。双机热备只是高可用集群的一种，高可用集群系统可以支持两个
务器出现故障时，可由另一台服务器承担服务任务，从而在无人工干预的情况下，自动保证
故障检查和业务切换的自动化。
的职责。因此，对于用户而言，集群永远不会停机。高可用集群软件的主要作用就是实现
件的易错性所带来的损失。如果某个节点失效，它的备援节点将在几秒钟的时间内接管它
何时恢复为可用。这个任务通常由一组被称为“心跳”的代码完成。
点上运行，不会引起服务中断。从这个定义可以看出，集群必须检测节点和服务何时失效
系统的内部，若有一个或者多个节点停止工作，服务将会从故障节点切换到正常工作的节
群（cluster）就是一组计算机，它们在用户面前表现为一个单一的系统，在这样一组计算机
了配置及可操作性方面的复杂性，因此选择好的高可用软件至关重要。
降到最低。高可用集群的应用系统有多样化发展的趋势，用途也越来越多样化，同时带来
务程序对外不间断地提供服务，从而把软件、硬件、人为等因素造成的故障对业务的影响
在高可用集群朝多样化、易操作、易维护等方向迅速发展的今天，面对市场上品种繁
高可用集群的出现是为了使集群的整体服务尽可能可用，从而减少由计算机硬件和软
只有两个节点的高可用集群又称为双机热备，即使用两台服务器互相备份。当一台服
高可用集群，英文原文为High Availability Cluster，简称HA Cluster，简单地说，集
高可用集群是指以减少服务中断时间为目的的服务器集群技术。它通过保护用户的业
目前流行的4种高可用架构
第7章
---
## Page 251
采取人工方式重新与新的master进行同步复制。
刚才没有同步复制完的数据，这时有可能把用户新发表的文章更改掉，造成用户数据丢失
文章，当原来的master修好后，由于I/O和SQL线程还处于开启状态，因此还会继续同步
机的压力很大，假设落后2000秒，那么这台主机就挂了，另一台主机接管（VIP漂移到从
些工作全部自动完成，不需要人工干涉，需要人工做的只是修复MySQL服务器中的故障。
MySQL服务器的工作正常时，Keepalived会自动将MySQL服务器加人到服务器群中，
工作出现故障，Keepalived将检测到，并将有故障的MySQL服务器从系统中剔除，
以自定义脚本，使用起来比较灵活，再加上MySQL5.5版本的新特性一
MySQL互为主从关系，这样就保证了两台MySQL数据的一致性，然后用Keepalived实现
以及红帽 RHCS 高可用集群套件。下面分别介绍下这四种集群以及适用的场景。
考虑到这种情况，这里用的还是master-slave（主从）架构，在这种架构中，故障切换以后
当然也可以设置为双master，但这里有个端，比如，当某用户发表文章时，由于此时主
Keepalived的安装和脚本定制工作。
7.1.1
因此，
虚拟VIP，通过Keepalived自带的服务监控功能来实现MySQL故障时自动切换，并且可
7.1
在高负荷状态下心跳超时所导致的误切换。
机上）时，因为同步延时大，用户刚才发表的文章还没复制过来，于是用户又发表了一篇
关于MySQL-HA，目前有多种解决方案，目前互联网上用得较多的是Keepalived+
MySQL架构为master-slave（主从）形式，当master故障时，会自动切换到slave上
MySQL主从复制搭建，相对简单，限于篇幅，这里不多介绍，下面主要讲解一下
Keepalived的作用是检测MySQL服务器的状态，如果有一台MySQL服务器死机，
使用MySQL主从复制技术是一种非常简单、便捷的解决方案，在高可用集群环境中，
#./configure
#wgethttp://www.keepalived.org/software/keepalived-1.2.7.tar.gz
接下来看看主从架构的安装方法：
下面是配置环境：
VIP:192.168.8.50
slave:192.168.8.23
master:192.168.8.22
cdkeepalived-1.2.7
、可以把故障切换时数据丢失的风险降到最低。
Keepalived+MySQLReplication架构的搭建演示
采用MySQL 自带的 Replication架构
第7章目前流行的4种高可用架构·237
一半同步复制技术
---
## Page 252
238
·第三部分高可用集群管理篇
 notify_master：状态改变为master后执行的脚本。
其中各参数的含义如下：
vrrp_instance VI_1{
vrrp_sync_groupVG1{
vrrp_scriptcheck_run{
global_defs{
#morekeepalived.conf
配置文件和脚本如下所示：
#chkconfig--level345keepalivedon
#cp/usr/local/etc/rc.d/init.d/keepalived/etc/rc.d/init.d/
#make&&make install
#cp/usr/local/etc/keepalived/keepalived.conf/etc/keepalived/
group{
chkconfig--addkeepalived
cp/usr/local/sbin/keepalived/usr/sbin/
mkdir/etc/keepalived
cp/usr/local/etc/sysconfig/keepalived/etc/sysconfig/
interval300
script"/home/sh/mysql_check.sh"
router_id KeepAlive_MySQL
virtual_ipaddress
notify_stop/home/sh/stop.sh
notify_backup/home/sh/backup.sh
check_run
track_script{
authentication{
advert_int1
priority100
virtual_router_id51
interfaceetho
stateBACKUP
notify_master/home/sh/master.sh
nopreempt
VI_1
192.168.8.50
auth_pass 1111
auth_typePASS
---
## Page 253
这4个脚本的用法：
master.sh表示状态改变为 master后执行的脚本。首先判断同步复制是否执行完毕，
mysql_check.sh是健康检查脚本，
这里用到了4个脚本：mysql_check.sh、master.sh、backup.sh、stop.sh，下面解释一下
master_Log_File=S(mysql-e"show slave status\G"| grep-wmaster_Log_File|awk-F":""[print $S2))
口 notify：任意状态改变后执行的脚本。
口notify_fault：状态改变为fault后执行的脚本。
口 notify_backup：状态改变为backup 后执行的脚本。
#/bin/bash
#more master.sh
/etc/init.d/keepalivedstop
if[$i=0]&&[Sj=0]
=S?
psaux|grepmysqld|grep-vgrep>/dev/null2>&1
=$?
mysql-e"show status;">/dev/null 2>&1
done
then
。
whiletrue
#!/bin/bash
#moremysql_check.sh
口
/root/.bash_profile
else
/root/.bash_profile
exit0
notify_stop：VRRP停止后执行的脚本。
if[Si=1]&&[$j=0]
unt=1
日志和pos点。示例如下：
其次，更改前端程序连接的业务账号admin的权限和密码，并记录当前切换以后的
如果未执行完毕，等1分钟后，不论是否执行完毕，都跳过，并停止同步复制进程。
continue
letcount++
程关闭，并切换。示例如下：
else
then
exit0
fi
if[$count-gt5]
then
break
当发现MySQL连接不上时，会把Keepalived进
第7章
目前流行的4种高可用架构·239
---
## Page 254
240
）●第三部分高可用集群管理篇
#more stop.sh
口 stop.sh表示Keepalived停止后执行的脚本。
#1/bin/bash
#!/bin/bash
口backup.sh表示状态改变为backup后执行的脚本。示例如下：
mysql-e"stop slave;"
if [Smaster_Log_File=$Relay_master_Log_File]&&[SRead_master_Log_Pos-eqSExec_master_Log_Pos]
Exec_master_Log_Pos=S(mysql-e"show slave status\G"|grep-wExec_master_Log_Pos|awk-F":"{print $2))
Read_master_Log_Pos=S（mysql-e"show slave status\G"|grep-wRead_master_Log_Pos|awk-F":"{print $2))
Relay_master_Log_File=S(mysql-e"show slave status\G"|grep-wRelay_master_Log_File|awk-F":"{print $2))
/root/.bash_profile
mysql-e"setglobal inodb_flush_log_at_trx_commit=2;"
mysql-e"setglobal sync_binlog=0;"
#morebackup.sh
nysql-e"setglobal innodb_support_xa=1;"
done
else
then
whiletrue
=1
/root/.bash_profile
ysql-e"GRANTALL PRIVILEGES ON*,*TO'admin'@*%'IDENTIFIED BY'1q2w3e4r';flush privileges;"”
ysql-e"setglobalevent_scheduler=1;"
ysql-e"setglobal event_scheduler=0;"
echo"ok"
保证不丢失数据。最后查看是否还有写操作，不论是否执行完毕，1分钟后都退出。
break
示例如下：
let i++
continue
then
if[ Si-gt 60]
sleep1
break
。首先更改admin密码，其次设置参数，
---
## Page 255
种需求可以归结为以下两点：
越重要。所以，对用硬件和软件方法实现高可伸缩、高可用网络服务的需求不断增长，这
应用在网上运行，任何例外的服务中断都将造成不可估量的损失，服务的高可用性也越来
请求，导致用户需要长时间的等待，大大降低了服务质量。另外，随着电子商务等关键性
7.1.2MMM+MySQLReplication架构的搭建演示
已漂移过去，仍旧会停留在slave上面，这样做的好处是防止数据频繁切换导致不一致。
高的要求。例如，比较热门的Web站点会因为被访问次数急剧增长而不能及时处理用户的
者把MySQL停掉，VIP就会漂移到slave上，在把原来的master修复好后，VIP并不会自
互联网的用户数和网络流量正呈几何增长的态势，这对网络服务的可伸缩性提出了很
口高可用性（availability），尽管部分硬件和软件会发生故障，但整个系统的服务必须
口可伸缩性（scalability），当服务的负载增长时，系统能被扩展来满足需求，且不降低
到这里已经搭建完毕了，
单服务器显然不能处理不断增长的负载。对这类服务器升级时会有下列不足：
M_Position1=S(mysql-e"showmaster status\G"|awk-F':"/Position/(print $2})
M_File1=S(mysql-e"showmaster status\G"|awk-F':/File/[print $2))
mysql-e"set global innodb_flush_log_at_trx_commit=1;"
done
else
whiletrue
M_Position2=S(mysql-e"showmaster status\G"|awk-F':/Position/(print $2)})
一
=1
sleep1
是7×24小时可用的。
服务质量。
_File2=S（mysql-e"showmaster status\G"|awk-F':'/File/{print$2})
O一旦该服务器或应用软件失效，会导致整个服务的中断。
○越高端的服务器，所花费的代价越大。
〇升级过程繁琐，机器切换会使服务暂时中断，并造成原有计算资源浪费。
if[Si-gt 60]
break
echo"ok"
sleep1
break
，可以看到，安装、搭建过程都很简单，只要把master关机或
第7章目前流行的4种高可用架构241
---
## Page 256
242·第三部分高可用集群管理篇
这里为了演示，和MySQL放在了一起。
注意
slave 备机提供读取业务的机制，这样就降低了数据库的负载。而MMM就是为了这种架构
实现服务器的故障转移，从而实现MySQL的高可用。
本。MySQL本身没有提供同步复制方案的故障转移的解决方案，
只有一个节点可以被写人)，除此之外，它还有实现数据备份、节点之间重新同步功能的脚
关于MySQL主主复制配置的监控、故障转移和管理的一套可伸缩的脚本套件（在任何时候
而诞生的。
监控节点最好单独放在一台独立的服务器上，
首先，创建三个账号，如下所示：
2.配置MySQL主从服务器
图7-1是相应的架构图。
VIP_Read1: 192.168.8.52----(VIP)
口mmm_control：通过命令行管理mmm_mond进程。
口mmm_agentd：运行在MySQL服务器上的代理守护进程，通过简单远程服务集提供给
口mmm_mond：监控守护进程，决定节点的移除等。
MMM项目来自Google：http://code.google.com/p/mysql-master-master。
192.168.8.27
192.168.8.26
192.168.8.25
#cat/etc/hosts
三台服务器的配置如下：
1．设置hosts解析
下面介绍安装过程。
MySQL_slavel: 192.168.8.27----(MySQL-S1)
MySQL_masterl:192.168.8.25----(MySQL-M1)
MMM_monitor: 192.168.8.25----(MySQL-MON)
下面是配置环境：
MMM的主要功能由下面三个脚本提供：
官方网站为：http://mysql-mmm.org。
正是因为存在以上问题，
VIP_Write:192.168.8.51-----(VIP)
MySQL_master2:192.168.8.26----(MySQL-M2)
监控节点。
slave1
MM
于是更多企业采用了从架构层出发，读写分离，同时由多台
M2
M1
图7-1MMM环境架构图
不过通过MMM方案就能
S
---
## Page 257
容相同）。
健康检查的。
等的。
第三个账号mmm_monitor（监听账号），是MMM监控服务器用来对MySQL服务器做
注意
首先，在三台服务器上修改mmm_common.conf 配置文件（三台服务器的此配置文件内
如果是rhel5或者centos5，32位版本，
主从服务器的搭建方法在前面已经讲述，这里省略。
第二个账号mmm_agent（代理账号），是MMM代理用来变成只读模式和同步master
mysql-mmm-agent-2.2.1-1.el5
http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
如果是rhel6或者centos6，64位版本，下载地址为：
http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-5.noarch.rpm