title:Cognitive Authentication Schemes Safe Against Spyware (Short Paper)
author:Daphna Weinshall
Cognitive Authentication Schemes Safe Against Spyware (Short Paper)
Daphna Weinshall
School of Computer Science and Engineering
The Hebrew University of Jerusalem, Jerusalem Israel 91904, PI:EMAIL
Abstract
Can we secure user authentication against eaves-
dropping adversaries, relying on human cognitive func-
tions alone, unassisted by any external computational
device? To accomplish this goal, we propose challenge
response protocols that rely on a shared secret set of pic-
tures. Under the considered brute-force attack the pro-
tocols are safe against eavesdropping, in that a modestly
powered adversary who fully records a series of success-
ful interactions cannot compute the user’s secret. More-
over, the protocols can be tuned to any desired level of
security against random guessing, where security can be
traded-off with authentication time. The proposed pro-
tocols have two drawbacks: First, training is required
to familiarize the user with the secret set of pictures.
Second, depending on the level of security required, en-
try time can be signiﬁcantly longer than with alternative
methods. We describe user studies showing that people
can use these protocols successfully, and quantify the
time it takes for training and for successful authentica-
tion. We show evidence that the secret can be maintained
for a long time (up to a year) with relatively low loss.
1. Introduction
We address the problem of user authentication over
insecure networks and from potentially compromised
computers, such as in internet cafes.
In such cases
there is a high risk that an eavesdropping adversary
may record the communication between the user and the
main computer, before it is possible to rely on the protec-
tion of secure encryption. We assume that this adversary
can record all information exchanged during the authen-
tication, including user input (such as keyboard entries
and mouse clicks) and screen content. It is therefore nec-
essary to develop secure authentication protocols, where
overhearing a sequence of unencrypted successful au-
thentication sessions will not let the adversary pose as
the legitimate user at a later time.
Clearly our everyday non-user-friendly password in
not secure in the sense we require - by merely recording
the input of the user to the intermediate computer, the
adversary can discover the user’s password after a single
successful authentication session. Biometric identiﬁca-
tion (based on such physiological traits as ﬁngerprints
and iris shape) is indeed more secure against theft or for-
getting, but it is just as easy for the adversary to obtain
this key as it is to obtain a password. There are a num-
ber of existing secure solutions which require the user to
carry a computational aid, such as an OTP card that gen-
erates one time passwords, one-time password sheets,
or a laptop armed with secure authentication protocols.
But this approach has its drawbacks: users cannot get
authenticated without the device, which can be stolen,
lost, or made unusable (e.g., when its battery runs out).
Can we develop a user authentication scheme that is
secure against eavesdropping adversaries, and yet can be
used reliably by most humans without the need for any
external computational aid? Not much has been said
about this problem. Recent systems have been devel-
oped which use easy to remember passwords, including
abstract art pictures like in the “Deja vu” system [2],
graphical passwords (see survey in [6]), or memorized
motor sequences. Most of these schemes use passwords
that are indeed easier to remember, but otherwise are not
any safer than regular passwords against eavesdropping
adversaries. A few recent cryptography papers tried to
address this issue, but their proposed protocols are either
not secure for any sufﬁcient length of time [5, 4], or im-
practical in that most humans cannot reliably use them
[3]. In our previous work [9], we took advantage of the
vast capacity of human memory to design protocols that
use each memory item only once, and are therefore as
safe against eavesdropping as one time passwords.
Here we propose a challenge response protocol,
where authentication is based on the user answering
correctly a sequence of challenges posed by the com-
puter (cf. [3]). The challenges (or queries) are based
on a shared secret between the computer and the user,
which consists of a random division of a ﬁxed set of
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:51:17 UTC from IEEE Xplore.  Restrictions apply. 
pictures into two sub-groups. Authentication is done
via a challenge-response protocol: the computer poses
a sequence of challenges to the user, which can only be
answered correctly by someone who knows the shared
secret. Once the probability of random guessing goes
below a ﬁxed threshold, the computer authenticates the
user.
The proposed protocols have the following two im-
portant characteristic:
(i) The password is a random
(machine generated) division of a ﬁxed set of pictures.
As a result, the space of used passwords is as big as the
space of all possible passwords, which implies safety
against dictionary attacks. This beneﬁt is obtained at the
cost of relatively long training time, where the user is
familiarized with the secret in a secure location. (ii) The
interactive nature of the protocol is intended to make
it resistant to attacks by adversary eavesdroppers, in-
cluding what is sometimes referred to as spyware and
shoulder-surﬁng. This beneﬁt is obtained at the cost of
relatively long login time of a few minutes.
The main advantage of our method over [3] is its rel-
ative human-friendliness. In Section 3 we report user
studies with 11 naive participants, showing that the pro-
tocols can be effectively used by these participants, with
high reliability and for a long period of time. However,
unlike the protocols described in [3, 4], we are not able
to provide any formal analysis proving that the protocols
are indeed safe. Instead, in Section 2.3 we analyze the
best brute-force attacks, identifying the range of param-
eters which make them impractical.
2. Authentication protocol
We deﬁne the following authentication scheme. The
computer assigns to each user two sets of pictures: (i)
A set B of N common pictures. (ii) A set F ⊂ B of
M < N pictures. Set B is common knowledge and may
be fully or partially shared among different users. Set F
is arbitrarily selected for each user, and its composition
is the essence of the shared secret between the user and
the computer; typically M < N
2 .
the user is
trained to distinguish the pictures in the set F from the
remaining pictures in the super-set B.
During training in a secure location,
During authentication, the computer randomly chal-
lenges the user with the following query:
(1) A set of n pictures is randomly selected from B. In
the example of Fig. 1 n = N = 80, and therefore all the
pictures from B are shown.
(2) The user is asked a simple multiple-choice question
with P possible answers about the random set, which
can be answered correctly only by someone who knows
which pictures in the random set belong to F. In the ex-
ample of Fig. 1 P = 4, and the multiple-choice question
appears at the top of the panel, letting the user choose
one of 4 integers in the range [0..3].
(3) The process is repeated k times; after each itera-
tion, the veriﬁer computes the probability that the se-
quence of answers has been generated by random guess-
ing. Speciﬁcally, we use the following model: if the user
has made e ≤ k errors, compute the probability to ob-
tain e or fewer errors in a sequence of k Bernoulli trials
with 1
(4) The computer stops and authenticates the user when
the probability of correctly guessing (as estimated in the
previous step) goes below a pre-ﬁxed threshold T . If this
is not accomplished within a certain number of trials, the
user is rejected.
P chance of success.
The parameters deﬁned above determine the secu-
rity and convenience of the scheme. Large values for
M, N increase security, but also prolong the training
time. Large values of n and small values of P increase
security by reducing the information exposed in each
observed query, but also prolong the login time. Fi-
nally, small values of T increase security against random
guessing, but prolong the login time.
Note that the (possibly compromised) authentication
machine is given by the server, for each query, the pat-
tern to be displayed on the screen and the required an-
swer. This does not compromise security, even if this
information is stolen, as the protocol is designed to be
safe against adversaries with such knowledge.
Next we discuss how to construct the multiple-choice
queries (Section 2.1), how to conduct effective train-
ing (Section 2.2), and how resistant our protocols are
to brute-force attacks (Section 2.3).
2.1. Query construction
The query should be easy for humans to compute
unassisted, and cannot therefore include complex math-
ematical operations. We deﬁne two types of queries
which trade-off training time and login time, and which
also differ in the characteristic of their security against
various attacks.
2.1.1. High complexity query
In this protocol we use a public set of N = 80 pic-
tures B, and a secret subset of M = 30 pictures F ⊂ B.
In each query all n = N = 80 pictures from B are
shown in random order. The user is asked a relatively
complex question about the set of pictures, with P = 4
possible choices.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:51:17 UTC from IEEE Xplore.  Restrictions apply. 
Figure 1. A high complexity query panel (best seen in color).
Speciﬁcally, the 80 pictures are presented in a panel
composed of an 8 × 10 regular grid (see Fig. 1). Users
are asked to (mentally) compute a path, starting from
the top-left picture in the panel (marked by darkened red
boundary in Fig. 1). The rules of movement along the
path are the following: move down if you stand on a pic-
ture which is in F, move right otherwise. Finish when
you reach the right-most end or bottom end of the panel
(the respective column and row in Fig. 1 composed of
numbers and not pictures), and record the ﬁnal number
you have reached.1
The terminal row and column include the numbers
[0, 1, 2, 3]. The numbers are distributed in such a way
that the probability to reach each of them is roughly
0.25, assuming that queries are built from independent
random permutations of the original set of pictures.
In Section 2.3 we show that this protocol is se-
cure against selected brute-force attacks by adversaries
1Although the verbal explanation of this computation is somewhat
lengthy and appears difﬁcult, it is actually easy and intuitive for people
to perform. The only difﬁculty, which makes it “complex”, is the need
to mentally scan many pictures, which simply takes time.
whose space or time complexity is smaller than 247. If
we reduce the number of choices to P = 2 (a binary
query), we get a better bound of 256 (result not shown).
2.1.2. Low complexity query
In this protocol we use a public set of N = 240
pictures B, and a secret subset of M = 60 pictures
F ⊂ B. In each query n = 20 random pictures from
B are shown, and the user is asked a relatively simple
binary question (P = 2) about a few of these pictures.
Speciﬁcally, the 20 pictures shown in each query are
randomly selected from the set B, and presented in a
4 × 5 panel. Each picture is assigned a random bit (0
or 1), which is shown next to it. (The bits are balanced,
with 10 random pictures assigned 0 and the rest assigned
1.) The user is instructed to scan the panel in order: from
left to right, one row after another, and identify the ﬁrst,
second and last pictures from subset F. She should then
compare the 3 associated bits, and answer whether their
majority is 0 or 1.
This query is not susceptible to brute-force attacks,
(cid:3) ≈ 2190.
since the number of all possible secrets is
This is achieved by increasing the size of the secret
(cid:2)
N
M
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:51:17 UTC from IEEE Xplore.  Restrictions apply. 
as measured by N, M (compare to the high complex-
ity query above), which implies longer training time
and lower reliability in memory retention. On the other
hand, because each answer depends on only 3 pictures
in the query, this protocol is susceptible to probabilis-
tic attacks. In simulations of such attacks (omitted, see
[8]) we see evidence that the security may be sufﬁcient
against most practical adversaries.
2.2. Training procedure
Training is composed of multiple sessions, with two
phases:
Phase 1, in which the user is familiarized with the subset
of pictures F in isolation. In this phase all the pictures
from F are shown once in random order. Each picture
is shown for a few seconds, at which time the user is
instructed to memorize the picture for a second or so.
He then answers a multiple choice question (unrelated
to the queries used in the authentication protocol) which
depends on the details of the memorized picture, see [8]
for details.
Phase 2, in which the user is presented with random
query panels including pictures from the set B as de-
ﬁned in the authentication protocol. First, the user is
asked to identify and mark the pictures from F. Second,
the user is asked to answer the multiple-choice question
associated with the query as in the actual authentication
protocol. During this phase the user receives full feed-
back.
All participants underwent two mandatory training
sessions on two consecutive days: on the ﬁrst day each
participant performed phase 1 only; on the second day
each participant performed both phases consecutively.
Participants were offered a choice of a third training ses-
sion on the third consecutive day, which included phase
2 only; they were instructed to choose this option if feel-
ing low conﬁdence in their ability to perform the task
without feedback. Three participants trained on the high
complexity query, and the two participants trained on the
low complexity query, chose this option.
2.3. Resistance to various attacks
(cid:2)
(cid:3)
N
M
Let ˜H =
denote the complexity of the brute-
force attack against our protocols. Recall that since
passwords in our protocols are randomly generated by
a machine, all passwords are equally likely. Therefore
there is no dictionary attack that can improve over the
brute-force attack. We also deﬁne ˆH to denote the com-
plexity of an enumeration attack - a “clever” brute-force
attack which uses to its advantage the fact that only
n ≤ N bits are shown at any given query, and that not