Content-length: 18572 （十进制225）解码
Content-language: ar
00100101110100100101001001111101
01010010100111101001111110000110
01010101011100000101010001010011
01011111001000010101111101010... 阿拉伯字母FEH
实体主体
以二进制码形式显示的HTTP响应内容 字符
图16-1 charset参数告知客户端如何把内容中的二进制码转换为字符
注1： 与汉语、日语不同的是，阿拉伯语中只有28个字符。8位空间有256个不同的值，足以容纳拉丁字符、
阿拉伯字符以及其他符号。
国际化 ｜ 389
有些字符编码（比如UTF-8和iso-2022-jp）更加复杂，它们是可变长（variable-
length）编码，也就是说每个字符的位数都是可变的。这种类型的编码允许使用额外
的二进制位表示拥有大量字符的字母表（比如汉语和日语），仅用较少的二进制位来
表示标准的拉丁字符。
16.2.2 字符集和编码如何工作
现在我们来看看字符集和编码到底做了什么。
我们想把文档中的二进制码转换为字符以便显示在屏幕上。但由于有很多不同的字
母表，也有很多不同的方法把字符编码成二进制码（这些方法各有优缺点），我们需
要一种标准方法来描述并应用把二进制码转换为字符的解码算法。
把二进制码转换为字符要经过两个步骤，如图16-2所示。
• 在图16-2a中，文档中的二进制码被转换成字符代码，它表示了特定编码字符集
中某个特定编号的字符。在这个例子里，解码后的字符代码是数字编号225。
• 在图16-2b中，字符代码用于从编码的字符集中选择特定的元素。在iso-8859-6
中，值225对应阿拉伯字母“FEH”。在步骤a和b中使用的算法取决于MIME
的charset标记。
按iso-8859-6编
码的字符集
65 大写拉丁字母A
66 大写拉丁字母B
224 阿拉伯语中的占位对齐字符
225 阿拉伯字母FEH
226 阿拉伯字母QAF
227 阿拉伯字母KAF
数据二进制码 字符代码 唯一字符 字形
...11100001 225 "阿拉伯字母FEH"
(在iso-8859-6
字符集中)
编码方案（使用iso- 编码后的字符集 字体和显示逻辑
8859-6中的编码方案）
（a）使用编码方案解码 （b）使用编码后的 （c）使用字体和版式
字符集找到字符 软件找到显示字形
MIME中的charset标记综合描述了字符编码方案和编码后的字符集映射关系
图16-2 HTTP协议中的charset是字符编码方案和编码后字符集的组合
390 ｜ 第16章
国际化字符系统的关键目标是把语义（字母）和表示（图形化的显示形式）隔离
开来。HTTP 只关心字符数据和相关语言及字符集标签的传输。字符形状的显示 372
是由用户的图形显示软件（包括浏览器、操作系统、字体等）完成的，如图16-2c
所示。
16.2.3 字符集不对，字符就不对
如果客户端使用了错误的字符集参数，客户端就会显示一些奇怪的错乱字符。假设
浏览器从主体中获得值225（二进制为11100001）。
• 如果浏览器认为主体是用iso-8859-1西欧字符编码的，它将会显示带有重音符号
的小写拉丁字母“a”：
• 如果浏览器使用iso-8859-6阿拉伯编码，它将会显示阿拉伯字母“FEH”：
• 如果浏览器使用iso-8859-7希腊编码，它将会显示小写的希腊字母“Alpha”： 373
• 如果浏览器使用iso-8859-8希伯来编码，它将会显示希伯来字母“BET”：
16.2.4 标准化的MIME charset值
特定的字符编码方案和特定的已编码字符集组合成一个MIME字符集（MIME
charset）。HTTP 在 Content-Type 和 Accept-Charset 首 部 中 使 用 标 准 化 的
MIME charset标记。MIME charset的值都会在IANA注册。2表16-1列出了文
档和浏览器所使用的一些MIME charset编码方案。更完整的列表参见附录H。
注2：请从http://www.iana.org/numbers.htm 获取注册的charset值的完整列表。
国际化 ｜ 391
表16-1 MIME charset 编码标记
MIME charset 值 描 述
us-ascii 这是个著名的字符编码，在1968年就已标准化，称为ANSI_X3.4-1968。它也称
为ASCII，但最好还是加上“US”前缀，因为ISO 646中有某些国际化的变体，
它们修改了一些字符。US-ASCII把7位数值映射到128个字符上。最高位未使用
iso-8859-1 iso-8859-1是对ASCII的8位扩展，以支持西欧的多种语言。它使用了最高位以
包含更多西欧字符，而保持ASCII的编码部分（0～127）没有变。它也称为iso-
latin-1，或简称为Latin1
iso-8859-2 对ASCII扩展以包括中欧和东欧语言中的字符，包括捷克、波兰、罗马尼亚。它
也称为iso-latin-2
iso-8859-5 对ASCII扩展以包括斯拉夫语字符，使用这些字符的语言包括俄语、塞尔维亚语
和保加利亚语
iso-8859-6 对ASCII扩展以包括阿拉伯语字符。因为阿拉伯语字符的显示形状会随它在单词
中的位置而变化，阿拉伯语的显示引擎需要分析上下文来为每个字符生成正确的
形状
iso-8859-7 对ASCII扩展以包括现代希腊语字符。以前称为ELOT-928或ECMA-118:1986
iso-8859-8 对ASCII 扩展以包括希伯来语和意第绪语（这两种语言都是犹太人所用的）的
字符
iso-8859-15 更新了iso-8859-1，用遗漏的法语和芬兰语字母替换了一些不太常用的标点符号
和分数符号，并用新的欧元符号替换国际货币符号。这种字符集简称为Latin0，
可能将来会替代iso-8859-1，作为欧洲的首选默认字符集
iso-2022-jp iso-2022-jp是在日语的电子邮件和网页内容中广泛使用的编码。它是一种变长编
码方案，支持用单字节表示ASCII字符，但使用3字符的模态转义序列在3种日
语字符集中切换
euc-jp euc-jp是遵循ISO 2022的变长编码，它用显式的二进制码模式来标识每个字符，
不需要模态及转义序列。它使用单字节、2字节以及3字节的序列来标识多个日
语字符集中的字符
Shift_JIS 该编码起初是由微软公司开发的，有时称为SJIS或 MS Kanji。出于保持历史兼
容性方面的原因，它有点儿复杂，并且不能映射所有的字符，不过它还是用的很
374 普遍
koi8-r KOI8-R是为俄语设计的流行的8位因特网字符集编码，在IETF RFC 1489中定
义。 这些大写字母是Code for Information Exchange, 8 bit, Russian（俄语8位信
息交换代码）的首字母缩略形式
utf-8 UTF-8是一种用来表示UCS（Unicode）的常用变长字符编码方案，UCS的意
思是Universal Character Set of the world’s characters（世界字符统一字符集）。
UTF-8使用变长的编码来表示字符代码值，每个字符使用1～6个字节。UTF-8
的主要特点之一就是保持对普通的7位ASCII文本的后向兼容性
windows-1252 微软公司把它编码后的字符集称为code page（代码页）。Windows的代码页1252
（也称为CP1252或WinLatin1）是对iso-8859-1的扩展
392 ｜ 第16章
16.2.5 Content-Type首部和Charset首部以及META标志
Web服务器通过在Content-Type首部中使用charset参数把MIME字符集标记
发送给客户端：
Content-Type: text/html; charset=iso-2022-jp
如果没有显式地列出字符集，接收方可能就要设法从文档内容中推断出字符集。对
于 HTML 内容来说，可以在描述 charset 的 标记中找到字符集。
例16-1中展示了HTML META标记如何把字符集设置为日语编码iso-2022-jp。如
果文档不是HTML类型，或其中没有META Content-Type标记，软件可以设法扫
描实际的文本，看看能否找出语言和编码的常见模式，以此推断字符编码。
例16-1 可以在HTML META标记中规定字符编码
A Japanese Document
...
如果客户端无法推断出字符编码，就假定使用的是iso-8859-1。
16.2.6 Accept-Charset首部
在过去的几十年间，人们开发了成千上万种字符编解码方法。大多数客户端不可能
支持所有这些不同的字符编码和映射系统。
HTTP客户端可以使用Accept-Charset请求首部来明确告知服务器它支持哪些字
符系统。Accept-Charset首部的值列出了客户端支持的字符编码方案。例如，下
面的HTTP请求首部表明，客户端接受西欧字符系统iso-8859-1和UTF-8变长的 375
Unicode兼容系统。服务器可以随便选择这两种字符编码方案之一来返回内容。
Accept-Charset: iso-8859-1, utf-8
注意，没有Content-Charset这样的响应首部和Accept-Charset请求首部匹
配。为了和MIME标准兼容，响应的字符集是由服务器通过Content-Type响应首
部的charset参数带回来的。不对称真是太糟了，不过需要的信息倒是都有了。
国际化 ｜ 393
16.3 多语言字符编码入门
前一节描述了客户端和服务器是如何分别在 HTTP 的Accept-Charset首部和
Content-Type首部的charset参数中携带字符编码信息的。对于工作中要开发大
量国际化应用的HTTP程序员来说，为了能理解技术规范和相应的实现软件，需要
深入地理解多语言字符系统。
由于术语很复杂且不一致，学习多语言字符系统不太容易。常常需要阅读标准文
档，而且我们可能对工作涉及的那些语言还不太熟悉。本节是对字符系统及其标准
的概览。如果读者对字符编码很熟悉，或者对这部分细节不感兴趣，可以直接跳到
16.4节。
16.3.1 字符集术语
以下是应当了解的电子化字符系统的8个术语。
• 字符
字符是指字母、数字、标点、表意文字（比如汉语）、符号，或其他文本形式的
书写“原子”。由统一字符集（Universal Character Set，UCS, 它的非正式的名字
是Unicode3）首创，为多种语言中的很多字符开发了一系列标准化的文本名称，
它们常用来便捷地命名字符，而且不会与其他字符冲突。4
• 字形
描述字符的笔画图案或唯一的图形化形状。如果一个字符有多种不同的写法，就
有多个字形（参见图16-3）。
• 编码后的字符
分配给字符的唯一数字编号，这样我们就可以操作它了。
• 代码空间
376 计划用于字符代码值的整数范围。
• 代码宽度
每个（固定大小的）字符代码所用的位数。
• 字符库
特定的工作字符集（全体字符的一个子集）。
注3：Unicode是一个以UCS为基础而成立的商业化联合组织，致力推广商业产品。
注4：字符的名称看起来类似LATIN CAPITAL LETTER S和 ARABIC LETTER QAF的形式。
394 ｜ 第16章
• 编码后的字符集
组成字符库（从全球的字符中选出若干字符）的已编码字符集，并为每个字符
分配代码空间中的一个代码。换句话说，它把数字化的字符代码映射为实际的
字符。
• 字符编码方案
把数字化的字符代码编码成一系列二进制码（并能相应地反向解码）的算法。字
符编码方案可用来减少识别字符所需要的数据总量（压缩）、解决传输限制、统
一重叠编码字符集。
16.3.2 字符集的命名很糟糕
从技术上说，MIME 中的 charset标记（用在 Content-Type首部的 charset
参数中和 Accept-Charset 首部中）描述的压根就不是字符集。MIME 中的
charset值所命名的是把数据位映射为唯一的字符的一整套算法。它是字符编码方案
（character encoding scheme）和编码后的字符集（coded character set）这两种概念
的组合（参见图16-2）。
因为关于字符编码方案和编码后的字符集方面的标准都已经发布过了，所以，这个
术语的使用是很草率的，很容易引起混淆5。下面是HTTP/1.1的作者们对于他们如
何使用这些术语的介绍（在RFC2616中）。
术语“字符集”在本文档中是指一种方法，它可以把一系列8位字节转换
为一系列字符。注意：术语“字符集”经常被称为“字符编码”。但由于
HTTP和MIME共享同样的注册信息，术语也能共享是很重要的。
IETF在RFC 2277中也采用了非标准的术语。
本文档中使用术语“字符集”来表示一组把一系列8位字节转换为一系列
字符的规则的集合，比如编码后的字符集与字符编码方案的组合。这与
MIME的“charset=”参数中标识符的用法相同，并且已在IANA的字
符集注册表中注册。（注意这不是在其他标准主体，比如在国际标准化组织
ISO中使用的术语）。
注5： 更糟糕的是，MIME中的charset标记经常会从特定的编码后字符集的名称或编码方案的名称里面
选取。例如，iso-8859-1是一个编码后字符集（它为一个包含256个欧洲字符的集合分配了数字化的
代码），但MIME用charset值iso-8859-1来表示一种8位的、对编码后的字符集恒等的编码。这
种不精确的术语并不是致命的问题，但在阅读标准文档的时候，需要对其假设用法保持清醒的头脑。
国际化 ｜ 395
因此，在阅读标准文档的时候，要保持清醒，这样才能确切地知道它所定义的到底
是什么。现在我们已经将相关的术语介绍完了，接下来更仔细地研究一下字符、字
377 形、字符集以及字符编码。
16.3.3 字符
字符是书写的最基本的构建单元。字符可以表示字母、数字、标点、表意符号（比
如在汉语中）、数学符号，或其他书写的基本单元。
字符和字体以及风格无关。图16-3显示了同一个字符（UCS中的命名是LATIN