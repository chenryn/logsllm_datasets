### Keystroke-Based User Identification on Smart Phones

#### 1. System Performance
Our system achieves a 0% False Rejection Rate (FRR) and approximately 2% False Acceptance Rate (FAR) in the verification mode. A 0% FRR indicates that our system is highly user-friendly and never rejects a legitimate user. Additionally, the low FAR suggests that our system outperforms other techniques in terms of accuracy.

#### 2. Impact of Number of Profiles on Accuracy
To understand the impact of the number of profiles on the accuracy of our system, we conducted a scalability analysis. We selected users with the most number of profiles (u10, u14, and u15) for this analysis. Each profile consists of 250 keystrokes. The results, tabulated in Table 5, show a gradual, almost linear decrease in both FAR and FRR as the number of training profiles increases up to 50. This indicates that increasing the number of training profiles enhances the system's accuracy.

#### 3. Relationship Between Profile Size and Accuracy
For the same users (u10, u14, and u15), we analyzed the relationship between the size of a profile and the system's accuracy. We used 50 profiles for each user and studied the FAR and FRR values. The results, also tabulated in Table 5, show that smaller profile sizes degrade the FAR and FRR values. However, a profile size of 250 keys yields an average error rate of 2%. Increasing the profile size from 250 to 350 keys slightly improves detection accuracy, but the improvement is not significant. Therefore, we use a profile size of 250 keys, which balances detection accuracy and the time required to create a profile.

#### 4. User Identification Delay
Table 6 shows the average number of SMS messages a user types in a single profile. Our system classifies a user after every 250 keystrokes. On average, a profile of 250 keystrokes is generated once a user sends just one SMS. Thus, the detection delay is bounded by the time it takes for a user to send an SMS. While this delay may not be a significant issue if an imposter aims to steal the mobile phone, it becomes crucial if the imposter intends to steal information from the phone. To address this, we invoke the verification mode of our system to prevent unauthorized data transmission.

#### 5. Imposter Damage in 250 Keystrokes
We conducted a study where four colleagues acted as imposters on a trained mobile phone to determine how much data they could read in a given document. We downloaded a 20-page paper onto a smartphone and provided the exact directory path. The imposters were asked to find a specific line on page 9. The results, tabulated in Table 7, show that only one imposter was able to locate the information within 250 keystrokes. Another study revealed that the most efficient imposter managed to reach page 14 in 250 keystrokes. Most users took between 8 to 15 minutes to press 250 keystrokes.

#### 6. Training and Testing Times
Table 8 provides the training and testing times for different classifiers. Our classifier has a training time of 28 seconds and a testing time of 520 milliseconds. While the testing time is comparable to other algorithms, the training time is significantly higher. This is due to the back-end dynamic optimizers used in our system. However, retraining is infrequent, typically occurring after every 5 profiles, and can be performed during periods of inactivity on the mobile phone.

#### 7. Limitations and Potential Countermeasures
- **Identification Delay Period:** Our system detects an imposter after observing a minimum of 250 keystrokes. The delay depends on the imposter's keyboard usage. If the imposter aims to access sensitive information, the delay can be reduced to 10-15 minutes. For theft, the system will detect the imposter after 250 keystrokes.
- **Accuracy Sensitivity to Number of Profiles:** The system requires at least 30 profiles to accurately learn user behavior, leading to high initial FAR and FRR. However, after one week of training, the system provides significantly better FAR and FRR.
- **Portability to Full Keyboard Smartphones:** Our prototype has not been tested on BlackBerry-type phones with QWERTY keyboards. We are currently seeking volunteers with full keyboard Nokia phones for further testing.
- **Large Training Time:** The 28-second training time can cause temporary degradation in the phone's response time. However, this cost is justified by the low FAR and FRR values, and retraining can be scheduled during inactivity periods.
- **Resilience to OS Reinstallation:** A savvy imposter might reinstall the OS to circumvent our system. This is a common limitation for host-based intrusion detection systems. One potential solution is OS virtualization, though it is currently infeasible on contemporary mobile phones.

#### 8. Conclusion and Future Work
We have proposed a user identification system that monitors keystroke dynamics to differentiate legitimate users from imposters. Using a custom dataset of 25 diverse mobile phone users, we demonstrated that our system can achieve an error rate of less than 2% after the detection mode and an FRR close to zero after the PIN verification mode. We compared our approach with five state-of-the-art existing techniques, showing significant improvements. In the future, we plan to incorporate our system into a Symbian mobile phone and evaluate its accuracy under real-world conditions. We also encourage researchers to work on modifying the system for portability to QWERTY keyboard smartphones.

#### 9. Acknowledgments
Saira Zahid and Muhammad Shahzad are working on the project "An Intelligent Secure Kernel for Next Generation Mobile Computing Devices," partially funded by the National ICT R&D Fund, Ministry of Information Technology, Government of Pakistan. The views expressed herein do not necessarily reflect the endorsements of the National ICT R&D Fund.

#### 10. References
[References listed here]

---

This revised version is more structured, clear, and professional, with improved flow and coherence.