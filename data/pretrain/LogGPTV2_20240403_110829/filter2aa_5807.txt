```plaintext
.TH SEQ 1 2022年9月 "GNU coreutils 9.1" 用户命令
.SH 名称
seq \- 打印数列
.SH 概述
\fBseq\fP [\fI\,选项\/\fP]... \fI\,尾数\/\fP
.br
\fBseq\fP [\fI\,选项\/\fP]... \fI\,首数 尾数\/\fP
.br
\fBseq\fP [\fI\,选项\/\fP]... \fI\,首数 增量 尾数\/\fP
.SH 描述
以指定的增量为步长，从首数开始打印到尾数为止的数列。如果未指定首数和增量，则默认值均为1。当尾数小于首数时，增量的默认值仍为1。生成序列的终止条件是当前数值加上增量后大于尾数。

必选参数对长短选项均适用。
.TP 
\fB\-f\fP, \fB\-\-format\fP=\fI\,格式\/\fP
使用 printf 样式的浮点格式来输出数列中的每个数字。
.TP 
\fB\-s\fP, \fB\-\-separator\fP=\fI\,字符串\/\fP
使用指定的字符串作为数列中各数字之间的分隔符（默认为换行符）。
.TP 
\fB\-w\fP, \fB\-\-equal\-width\fP
在数字前面填充零，使所有输出的数字宽度相同。
.TP 
\fB\-\-help\fP
显示帮助信息并退出。
.TP 
\fB\-\-version\fP
显示版本信息并退出。
.PP
首数、增量和尾数都被视为浮点数。通常情况下，若首数小于尾数，应使用正值增量；反之则应使用负值增量。增量不能为0，且所有参数都必须是有效的数字。如果提供了格式字符串，则它必须能够处理“double”类型的参数。如果首数、尾数和增量都是精度最高为PREC的定点十进制数，默认格式为%.PRECf，否则默认为%g。
.SH 作者
由 Ulrich Drepper 编写。
.SH 报告错误
关于 GNU coreutils 的在线帮助，请参阅：
.br
请向 <translation-bugs@gnu.org> 报告翻译错误。
.SH 版权
Copyright \(co 2022 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later.
.br
本软件是自由软件：您可以自由修改和重新发布它。在法律允许的范围内，不提供任何保证。
.SH 参见
完整文档请见：
.br
或者在本地使用： info "(coreutils) seq invocation"
```

这段优化后的文本更加清晰、连贯和专业，确保了语法正确性和可读性，并且保持了原有的功能说明。