    michael kerrisk
        add description of macros for dynamically allocated cpu sets
            add descriptions of cpu_alloc(), cpu_alloc_size(), cpu_free(),
            cpu_set_s(), cpu_clr_s(), cpu_isset_s(), cpu_zero_s(),
            cpu_count_s(), cpu_and_s(), cpu_or_s(), cpu_xor_s(), and
            cpu_equal_s().
    michael kerrisk
        add documentation of cpu_count()
    michael kerrisk
        add description of cpu_and(), cpu_or, cpu_xor(), and cpu_equal()
            plus a few other small clean-ups of the text
    michael kerrisk
        various improvements in description
            after review comments by bert wesarg:
            * explain that cpu_set_t is a bitset, but should be considered
              opaque.
            * a cpu set can be duplicated with memset().
            * size of a cpu set is rounded up to size of long.
            * cpu_setsize is in bits, but the setsize argument is in bytes.
    michael kerrisk
        document cpu_alloc()/cpu_alloc_size() bug
            these macros return twice what they should because of thinko
            in glibc 2.8 and earlier.  the bug is fixed for glibc 2.9.
            http://sourceware.org/bugzilla/show_bug.cgi?id=7029
    michael kerrisk
        notes: discuss use of types in "prototypes" for these macros
            the synopsis shows types for arguments and return values, but
            these are really just suggestions: since the interfaces are
            macros, the compiler won't catch all violations of
            the "type rules".  warn the reader of this.
pthread_attr_setinheritsched.3
    michael kerrisk
        new page for pthread_attr_setinheritsched(3) and
        pthread_attr_getinheritsched(3)
pthread_cancel.3
    michael kerrisk
        new page for pthread_cancel(3)
pthread_cleanup_push.3
    michael kerrisk
        new page for pthread_cleanup_push(3) and pthread_cleanup_pop(3)
pthread_setcancelstate.3
    michael kerrisk
        new page for pthread_setcancelstate(3) and pthread_setcanceltype(3)
pthread_testcancel.3
    michael kerrisk
        new page for pthread_testcancel(3)
newly documented interfaces in existing pages
---------------------------------------------
clone.2
    jens axboe
        document clone_io (new in linux 2.6.25)
            some text also by mtk.
    michael kerrisk
        document clone_newnet
    michael kerrisk
        document clone_newuts (new in linux 2.6.19)
    michael kerrisk
        document clone_newipc flag (new in linux 2.6.19)
    michael kerrisk
        document clone_newpid flag (new in linux 2.6.24)
mmap.2
    michael kerrisk
        document map_stack flag (new in linux 2.6.27)
arp.7
    michael kerrisk
        document /proc file retrans_time_ms (new in linux 2.6.12)
    michael kerrisk
        document /proc file base_reachable_time_ms (new in linux 2.6.12)
icmp.7
    michael kerrisk
        document icmp_ignore_bogus_error_responses (new in linux 2.2)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document icmp_ratelimit and icmp_ratemask (new in linux 2.4.10)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document icmp_echo_ignore_broadcasts (new in linux 2.6.12)
            text taken from documentation/networking/ip-sysctl.txt
tcp.7
    michael kerrisk
        document /proc file tcp_slow_start_after_idle (new in linux 2.6.18)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_base_mss (new in linux 2.6.17)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_frto_response (new in linux 2.6.22)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_moderate_rcvbuf (new in linux 2.4.17/2.6.7)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_congestion_control (new in linux 2.4.13)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_no_metrics_save (new in linux 2.6.6)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_mtu_probing (new in linux 2.6.17)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_dma_copybreak (new in linux 2.6.24)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_tso_win_divisor (new in linux 2.6.9)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_allowed_congestion_control (new in linux 2.4.20)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_workaround_signed_windows (new in linux 2.6.26)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_available_congestion_control (new in linux 2.4.20)
            text taken from documentation/networking/ip-sysctl.txt
    michael kerrisk
        document /proc file tcp_abc (new in linux 2.6.15)
            text taken from documentation/networking/ip-sysctl.txt
udp.7
    michael kerrisk
        document /proc files udp_mem, udp_rmem_min, and udp_wmem_min
            all of these are new in linux 2.6.25
new and changed links
---------------------
cpu_alloc.3
cpu_alloc_size.3
cpu_and.3
cpu_and_s.3
cpu_clr_s.3
cpu_count.3
cpu_count_s.3
cpu_equal.3
cpu_equal_s.3
cpu_free.3
cpu_isset_s.3
cpu_or.3
cpu_or_s.3
cpu_set_s.3
cpu_xor.3
cpu_xor_s.3
cpu_zero_s.3
    michael kerrisk
        new link to new cpu_set.3
cpu_clr.3
cpu_isset.3
cpu_zero.3
    michael kerrisk
        update links to point to cpu_set.3
            the documentation of the cpu_* macros migrated to a new
            location: cpu_set.3.
pthread_attr_getinheritsched.3
    michael kerrisk
        new link to new pthread_attr_setinheritsched.3
pthread_cleanup_pop.3
    michael kerrisk
        new link to new pthread_cleanup_push.3
pthread_setcanceltype.3
    michael kerrisk
        new link to new pthread_setcancelstate.3
global changes
--------------
clone.2
mount.2
unshare.2
proc.5
path_resolution.7
    michael kerrisk
        global fix: s/namespace/mount-point namespace/, as appropriate
            in recent times, a number of other namespace flags have been
            added to clone(2).  as such, it is no longer clear to use
            the generic term "namespace" to refer to the particular
            namespace controlled by clone_newns; instead, use the
            term "mount-point namespace".
    michael kerrisk
        global fix: s/mount-point namespace/mount namespace/
            this is more consistent with the term "mounts namespace"
            used in the 2008 acm sigops paper, "virtual servers
            and checkpoint/restart in mainstream linux".
            (i avoided the "s", because using the plural strikes me
            as klunky english, and anyway we don't talk about
            the "pids namespace" or the "networks namespace", etc..)
connect.2
listen.2
send.2
uname.2
cmsg.3
proc.5
arp.7
ddp.7
icmp.7
ip.7
raw.7
socket.7
tcp.7
udp.7
    michael kerrisk
        global fix: eliminate mention of the obsolete sysctl(2) interface
            many pages still mention use of the obsolete sysctl(2) system
            call, or used the term "sysctls"; rewrite these mentions to
            instead be in terms of /proc interfaces.
fcntl.2
signal.2
mbsnrtowcs.3
mbsrtowcs.3
mbtowc.3
wcrtomb.3
wcsnrtombs.3
wcsrtombs.3
wctomb.3
    michael kerrisk
        global fix: s/multi-thread/multithread/
getdents.2
pthread_attr_init.3
pthread_create.3
pthread_getattr_np.3
pthread_setaffinity_np.3
pthread_setschedparam.3
pthread_tryjoin_np.3
    michael kerrisk
        use consistent error-handling function names
            many older pages use a handle_error() macro to do simple
            error handling from system and library function calls.
            switch these pages to do similar.
changes to individual pages
---------------------------
time.1
    michael kerrisk
        note that some shells have a 'time' built-in command
            therefore, to access the functionality described on this page,
            it may be necessary to specify the full pathname.
clone.2
    michael kerrisk
        place list of clone_* flags in alphabetical order
            (no content changes.)
fsync.2
    michael kerrisk
        update feature test macro requirements for fsync()
            since glibc 2.8, the fsync() declaration is also exposed if
            _posix_c_source >= 200112l
sched_setaffinity.2
    michael kerrisk
        add note on system-imposed restrictions on cpus actually used
            after lo√Øc domaigne's suggestion for pthread_setaffinity_np(3), add
            similar text to this page noting that the system silently
            limits the set of cpus on which the process actually runs to
            the set of cpus physically present and the limits imposed by
            cpuset(7).
sched_setaffinity.2
    michael kerrisk
        removed discussion of cpu_* macros()
            these macros are now moving to a separate page.
    michael kerrisk
        refer reader to pthread_setaffinity_np(3)
            pthread_setaffinity_np() is preferable for setting
            thread cpu affinity if using the posix threads api.
sysctl.2
    michael kerrisk
        add prominent warning against using this system call
            this was already stated under notes, but make it even more
            prominent by adding a sentence at the start of the description.
uname.2
    michael kerrisk
        add c comments describing fields in utsname structure
atan2.3
    stefano teso
        fix description of range of function value return
            the range is not [-pi/2, pi/2], but [-pi, pi].
            (mtk: this error was reported by nicolas fran√ßois, and
            should have been fixed in 3.11, but somewhere along the way,
            the fix got lost.)
            http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=506299
bindresvport.3
    michael kerrisk
        since glibc 2.8, epfnosupport error is now eafnosupport
            glibc switched to using a posix-specified error code for
            this error case.
            http://bugs.linuxbase.org/show_bug.cgi?id=2375
clock_getres.3
    michael kerrisk
        clock_process_cputime_id and clock_thread_cputime_id not settable
            according to posix.1-2001, the clock_process_cputime_id and
            clock_thread_cputime_id clocks should be settable, but
            currently they are not.
getgrnam.3
    michael kerrisk
        clarify and add more detail in return value description
            the page was a bit fuzzy in describing the return values for
            various cases.  in particular, it needed to be more explicit
            in describing what happens for the "not found" case.
            this is an analogous change to the change for
            getpwnam.3, made after andreas henriksson's report.
            http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=504787
    michael kerrisk
        rename arguments to getgrnam_r() and getgrgid_r()
            s/gbuf/grp/ and s/gbufp/result/, for consistency
            with posix.1 argument names.
    michael kerrisk
        clarify return value description
            the page was a bit fuzzy in describing the return values for
            various cases.  in particular, it needed to be more explicit
            in describing what happens for the "not found" case.
            http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=504708
getpwnam.3
    michael kerrisk
        rename arguments to getpwnam_r() and getpwuid_r()
            s/pwbuf/pwd/ and s/pwbufp/result/, for consistency
            with posix.1 argument names.
    michael kerrisk
        clarify and add more detail in return value description
            the page was a bit fuzzy in describing the return values for
            various cases.  in particular, it needed to be more explicit
            in describing what happens for the "not found" case.
            http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=504787
    michael kerrisk
        add an example program for getpwnam_r()
inet_ntop.3
    michael kerrisk
        rename 'cnt' argument to 'size'
            this is consistent with posix.1, and also a more sensible name.
    michael kerrisk
        rework text describing 'size' argument
            (after a suggestion by vegard nossum.)
            also made a few other small rewordings to in the initial
            paragraph.
makecontext.3
    michael kerrisk
        add text on use of pointer arguments to makecontext()
            passing pointer arguments to makecontext() is possible,
            but only on some architectures, and with no guarantees
            of portability.
            http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=504699
pthread_attr_setaffinity_np.3
    michael kerrisk
        various fixes after review by lo√Øc domaigne
            reviewed-by: lo√Øc domaigne
pthread_attr_setaffinity_np.3
pthread_setaffinity_np.3
    michael kerrisk
        update to reflect new location of cpu_*() documentation
            the cpu_*() macros are now documented in cpu_set.3;
            update to reflect that fact.
    michael kerrisk
        remove redundant text relating to cpu sets
            information about cpu_setsize can be found in cpu_set.3, so
            remove discussion of it here.
pthread_attr_setschedparam.3
pthread_setschedparam.3
    michael kerrisk
        remove text saying that only sched_priority is required by posix.1
            lo√Øc domaigne points out that if a system implements
            sched_sporadic (which linux does not), then other
            fields are also specified in sched_param.  the simple
            solution is just to remove that phrase from the man
            page.
pthread_cancel.3
pthread_detach.3
pthread_join.3
pthread_setaffinity_np.3
    michael kerrisk
        make text of esrch error consistent
pthread_setaffinity_np.3
    michael kerrisk
        add text to einval error mentioning cpuset(7)
    michael kerrisk
        various improvements after review by lo√Øc domaigne
            various fix-ups after lo√Øc's review.
            reviewed-by: lo√Øc domaigne
pthread_setschedparam.3
    michael kerrisk
        pthread_inherit_sched is default for inherit scheduler attribute
            in example, note that pthread_inherit_sched is the default for
            the inherit scheduler attribute.
syslog.3
    masanari iida
        log_kern messages can't be generated from user processes
            masanari notes that this is an faq for logger(1) and that
            solaris and freebsd document this point in syslog(3).
            the glibc info page also hides this comment in its source:
                internally, there is also log_kern, but log_kern == 0,
                which means if you try to use it here, just selects default.
proc.5
    ivana varekova
        fix reference to kernel source file
            use relative reference to documentation/mtrr.txt.
arp.7
    michael kerrisk
        add kernel version numbers for /proc interfaces
cpuset.7
    michael kerrisk
        see also: add cpu_set(3)
epoll.7
    michael kerrisk
        note glibc version that added epoll support
icmp.7
    michael kerrisk
        add kernel version numbers to /proc file descriptions
inotify.7
    vegard nossum
        fix description of max_user_watches
            it seems that inotify(7) is wrong here:
            "/proc/sys/fs/inotify/max_user_watches
                this specifies a limit on the number of watches that can be
                associated with each inotify instance."
            on my system, the default value for this variable is 8192. but i
            cannot create more than 8192 watches in total for the same uid
            even when they are on different inotify instances. so i suggest
            to rephrase this as: "this specifies an upper limit on the
            number of watches that can be created per real user id."
ip.7
    michael kerrisk
        reorder socket options alphabetically
    michael kerrisk
        added kernel version numbers for ip_* socket options
    michael kerrisk
        relocate kernel version information for ip_pmtudisc_probe
    michael kerrisk
        add kernel version numbers for /proc/sys/net/ipv4/ip_* files
    michael kerrisk
        remove mention of kernel header from description of ip_recverr
            looks like glibc has had this definition since about version 2.1.
    michael kerrisk
        relocate kernel version information for ip_mreqn structure
    michael kerrisk
        relocate info about linux-specific sockopts to notes
            also add some source comments about non-standard linux-specific
            options that are not yet documented.
netlink.7
    vegard nossum
        fix incorrect variable names in example code
            s/snl/sa/ * 2
pthreads.7
    michael kerrisk
        add section on cancellation points
            this section includes a list of the functions that must and
            may be cancellation points.
    michael kerrisk
        rework, and fix small error in, thread-safe function list
            integrate the changes that occurred in posix.1-2008 into the
            main list (to be consistent with the list, elsewhere on this
            page, of functions that are cancellation points).
            also, fix an error that said that strerror() was added to
            the list in posix.1-2008.  it was strsignal() that was
            added.  (strerror() was already in the list in posix.1-2001.)
    michael kerrisk
        tweak text on sigpause() cancellation point
            in posix.1-2008, this function moves from the "must be"
            to the "may be" list.
    michael kerrisk
        add ref to signal(7) for further info on use of real-time signals
            signal(7) provides some further details on the use of real-time
            signals by the two linux threading implementations.
    michael kerrisk
        see also: add pthread_attr_init() and pthread_cancel()
tcp.7
    michael kerrisk
        update description of tcp_rmem defaults for linux 2.6
    michael kerrisk
        add kernel version numbers for tcp_* socket options
            note kernel version were each socket option first appeared.
    michael kerrisk
        the tcp_bic* proc files disappeared in linux 2.6.13
    michael kerrisk
        tcp_vegas_cong_avoid disappeared in linux 2.6.13
    michael kerrisk
        add mention of rfc 4138 for 'tcp_frto' /proc file
    michael kerrisk
        remove mention of /proc in versions
            this information is not indicated for each /proc interface
    michael kerrisk
        clarify that tcp_mem measures in units of the system page size
    michael kerrisk
        update tcp_frto description for 2.6.22 changes
            linux 2.6.22 added a mode value 2 ("enable sack-enhanced
            f-rto if flow uses sack").
    michael kerrisk
        fix alphabetical order in /proc file list
            a few entries were slightly out of order.
    michael kerrisk
        remove obsolete statement about /proc from versions
            much of the text has been updated to 2.6.27 or so,
            so this statement no longer applies.
    michael kerrisk
        add kernel version numbers for each /proc interface
            note kernel version where each /proc interface first appeared
    michael kerrisk