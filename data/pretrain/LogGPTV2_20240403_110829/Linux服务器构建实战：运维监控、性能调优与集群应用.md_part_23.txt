rsync同步时指定即可。
中“authusers”选项指定用户的密码，而这个文件的名称及路径可以随意指定，只要在执行
输入密码，需要在B系统上创建一个secretsfile，此文件的内容为A系统rsyncd.conf文件
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
口在“-vzrtopg”选项中，v是“--verbose”，即详细模式输出：z表示“--compress”，
这条指令中每个参数的含义如下：
其中，B服务器（客户端系统）中/etc/server.pass的内容如下：
接下来执行同步操作，具体指令如下：
在备份机上不用做任何设置，
3.在B系统上配置rsync
[root@web ~]#/usr/local/bin/rsync --daemon
执行如下指令启动rsync守护进程：
2.在A系统上启动rsync守护进程
secrets file，此选项用于指定一个包含“用户名：密码”格式的文件，用户名就是
[root@localhost -]# chmod 600 /etc/server.pass
xdba123
[rootolocalhost ~]#more /etc/server.pass
[root@localhost]# /usr/local/bin/rsync
root
[root@web ]#ps -ef|grep rsync
口vauthusers，此选项用来定义可以连接该模块的用户名，多个用户以空格或逗号分隔
口list，此选项用于设定当客户请求可以使用的模块列表时，该模块是否被列出。默认
值是true，如果需要建立隐藏的模块，可以设置为false。
口hosts deny，设置禁止连接rsync服务器的主机地址。
hosts allow,
属组信息。
件属主信息；p即“--perms"，用来保持文件权限；g即“--group"，用来保持文件的
归模式处理；t即“--times”，用来保持文件时间信息；o即“--owner”，用来保持文
即在传输时对备份的文件进行压缩处理；r表示“--recursive”，也就是对子目录以递
统默认没有这个文件，自己手动创建一个即可。
户端的 secrets file对应起来即可。只有在auth users 被定义时，该文件才起作用。
“auth users”选项定义的用户，密码可以随便指定，这里设定为ixdba123，只要和客
backup.
开。需要注意的是，这里的用户和Linux系统用户没有任何关系。这里指定的用户是
--password-file=/etc/server.pass
20278
www.Linuxidc.com.
，设置可以连接rsync服务器的主机，“*”表示允许连接任何主机。
--exclude"debug*"PI:EMAIL::ixdba /ixdba.net
1016:29？
只需执行rsync同步操作即可。为了在同步过程中不用
-vzrtopg
00:00:00/usr/local/bin/rsync --daemon
-delete
--progress
131
--exclude
系
---
## Page 150
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
时同步呢？很幸运，Linux2.6.13以后的内核提供了inotify文件系统监控机制，通过rsync
复数据的。
就意味着数据会丢失。因此，通过这种方式搭建的容灾系统在网站出现故障时是不能完全恢
（即远程容灾系统）的数据可能出现不一致。如果在这个时间间隔内，网站系统出现问题，
通过crontab守护进程完成的，因此在两次触发同步操作的时间间隔内，服务器端和客户端
在B服务器执行“crontab-e”，然后添加如下信息即可。
方式可以用于对数据安全性要求不高的业务系统中。
进程，设定同步时间，然后让Linux系统触发同步指令，自动完成数据备份。这种数据备份
合进行数据同步，因此，rsync方式的数据备份需要触发同步指令才能完成。
客
的一部分，更详细的信息请执行“manrsyne”命令查看。
那么，对于对数据安全性要求极高的业务系统，如何才能做到服务器端和客户端数据实
一个完美的容灾方案，由于rsync需要通过触发才能将服务器端数据同步，而触发操作是
根据案例的要求，还需要设定客户端rsync在每天的凌晨3点30分执行镜像备份操作，
端目录下有新增数据，客户端不会自动将数据同步，此时，还需要再次执行rsync命令组
户端（即B系统）。rsync指令在客户端执行完数据的同步后，将自动停止，以后如果服务
通过以上4步操作，
触发同步指令的方式有很多种，例如，可以将同步指令放入客户端系统的crontab守护
4.设置定时备份策略
如果配置没有错误，接下来rsync自动将服务器端（即A系统）需要备份的数据同步到
其实，rsync作为客户端工具，还提供了很多其他的选项和参数，这里仅仅介绍了常用
口“--password-file=/etc/server.pass”用来指定客户机上存放密码文件的位置，这样在客
口“/ixdba.net”用于指定备份文件在客户端机器上的存放路径，也就是将备份的文件存
口
口"--progress”选项用于显示数据镜像同步的过程。
服务器端目录与客户端目录的完全一致。在这里以A服务器为基准进行同步。
口“--delete”选项指定以rsync服务器端为基准进行数据镜像同步，
这里指的是backup用户的密码。
意指定，但是在客户端主机上必须存在此文件，文件的内容仅仅为备份用户的密码
户端执行同步命令时就无需输人交互密码。注意，这个密码文件的名称和位置可以随
放在备份机的/ixdba.net目录下。
份，也就是指定备份的模块。backup表示使用“backup”这个用户对该模块进行备份。
“--exclude”选项用于排除不需要传输的文件类型。
etc/server.pass
-excludedebug*=
，一个远程容灾系统已经搭建完成。细心的读者可能发现了，这并不
PI:EMAIL::ixdba/ixdba.net
inuxidc.com
：也就是要保持rsync
--password-file=
---
## Page 151
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
inotify的支持。可以用如下方法判断内核是否支持inotify：
内核是否是2.6.13版本以上，如果Linux内核低于2.6.13版本，就需要重新编译内核加人对
5.3.3
有任何变动时，会触发rsync同步，这样刚好解决了同步数据的实时性问题。
行触发，同步的数据和实际数据会有差异，而inotify可以监控文件系统的各种变化，当文件
况，inotify-tools就是这样的一个第三方软件。
动等各种细微事件，利用这个内核接口，第三方软件可以监控文件系统下文件的各种变化情
版本起，加人了对inotify的支持。通过inotify可以监控文件系统中添加、删除、修改、移
5.3.2初识inotify
用故障时完全恢复数据。基于以上原因，rsync+inotify组合出现了！
两次触发动作一定会有时间差，可能导致服务器端和客户端数据出现不一致，无法在出现应
次，rsync不能实时监测、同步数据，虽然它可以通过Linux守护进程的方式触发同步，但是
非常耗时的，而且发生变化的往往是其中很少的一部分，因此rsync是非常低效的方式。其
进行比对，然后进行差量传输。如果文件数量达到了百万甚至千万量级，扫描所有文件将是
高端业务系统中也逐渐暴露出了很多不足。首先，rsync同步数据时，需要扫描所有文件后
到远端服务器，对本地磁盘定期进行数据镜像等。
通过rsync可以解决对实时性要求不高的数据备份需求，例如，定期地备份文件服务器数据
5.3.1rsync的优点与不足
5.3
与inotify的组合，完全可以实现rsync服务器端和客户端数据的实时同步。
由于inotify的特性需要Linux内核的支持，在安装inotify-tools前要先确认Linux系统
在上一节中讲到，rsync可以实现触发式的文件同步，但是通过crontab守护进程方式进
inotify是一种强大的、细粒度的、异步的文件系统事件监控机制，Linux内核从2.6.13
随着应用系统规模的不断扩大，对数据的安全性和可靠性提出了更高的要求，rsync在
总计0
2.6,18-164.11.1.el5PAB
[rcot@localhost webdata]#uname -r
与传统的cp、tar备份方式相比，rsync具有安全性高、备份迅速、支持增量备份等优点，
[root@localhost webdata]# 1l/proc/sys/fs/inotify
通过rsync+inotify实现数据的实时备份
安装inotify工具inotify-tools
www.Linuxidc.com
133
PDG
---
## Page 152
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
inotifywait参数：
5.3.5
进行简单介绍。
些参数都是内存参数，因此，可以根据应用需求，实时调节其大小。下面对inotify相关参数
5.3.4
发生多少次等信息。
监控整个目录树；inotifywatch用于收集被监控的文件系统统计数据，包括每个inotify事件
用于等待文件或文件集上的一个特定事件，可以监控任何文件和目录设置，并且可以递归地
安装。过程如下：
inotifywait是一个监控等待事件，可以配合shell脚本使用它。下面介绍一下常用的
口“/proc/sys/fs/inotify/max_user_watches”表示每个inotify实例相关联的 watches的上
口“/proc/sys/fs/inotify/max_user_instances”表示每一个real user ID可创建的inotify
口“/proc/sys/fs/inotify/max_queued_events”表示调用inotify_init时分配到inotify instance中可
inotify定义了一些接口参数，可以用来限制inotify消耗kernelmemory的大小。由于这
安装完inotify-tools后，会生成inotifywait和inotifywatch两个指令。其中，inotifywait
rwxr-xr-x1 rootroot 35438 04-14 13:42/usr/1ocal/bin/inotifywatch
rwxr-xr-x 1root root 37264 04-14 13:42 /usr/1ocal/bin/inotifywait
[root@localhost
root@localhost
[root@localhost
rootalocalhost
[rootalocalhost
可以到http:/inotify-tools.sourceforge.net/下载相应版本的inotify-tools，然后开始编译
instatnces数量的上限。
事件。
排队的event数的最大值，超出这个值的事件被丢弃，但会触发IN_Q_OVERFLOW
如果有上面3项输出，就表示系统默认支持inotify，可以开始安装inotify-tools了。
根据情况适当增加此值的大小。例如：
限，也就是每个inotify实例可监控的最大目录数量。如果监控的文件数目巨大，需要
rw-r--r--
--I--X-M
inotifywait相关参数
echo 30000000>/proc/sys/fs/inotify/max_user_watches
inotify相关参数
1rootroot004-13
1root root 004-13 19:56max_queued_events
inotify-tools-3.14]#
inotify-tools-3.14]#
inotify-tools-3.14]# ./configure
~]# tar zxvf inotify-tools-3.14.tar.gz
Linuxidc.com
19:56
make install
make
max_user_instances
---
## Page 153
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
点充当了rsync服务器端的角色，整个数据同步的过程其实就是一个从客户端向服务器端发
安装非常简单，这里不再讲述。
节点上无需安装inotify-tools。另外需要在Web1、Web2、Web3和Server节点上安装rsync，
如果文件有变动，那么就启动rsync，将文件实时同步到3个服务节点上。
时又要保证数据是实时的，这就需要inotify，即利用inotify监视内容发布节点文件的变化，
发布节点上的数据始终是一致的，这就需要通过文件同步工具来实现，这里采用rsync。同
的、一致的。
调度到相应的服务节点上，实现用户访问。用户要求在前端访问到的网页数据始终是最新
面，同时将静态网页传输给3个服务节点，而负载调度节点负责将用户请求根据负载算法
3个服务节点及一个内容发布节点构成。内容发布节点负责将用户发布的数据生成静态页
5.3.6企业应用案例：利用rsync+inotify搭建实时同步系统
在这个案例中，内容发布节点（即Server）充当了rsync客户端的角色，而3个服务节
inotify-tools是用来监控文件系统变化的工具，因此必须安装在内容发布节点上，服务
1.安装rsync与inotify-tools
Server
Web3
Web2
Webl
节点名称
这里所有服务器均采用Linux操作系统，系统内核版本与节点信息如表5-1所示。
系统环境
为了保证用户访问到的数据的一致性和实时性，必须保证3个服务节点上的数据与内容
解决方案
这是一个CMS内容发布系统，后端采用负载均衡集群部署方案，由一个负载调度节点、
案例描述
更详细的介绍请参看maninotifywait。
delete、create和attrib等。
口
口
口-r，即“一recursive”，表示递归查询目录。
-m，即“—monitor”，
-e，即“—event”，通过此参数可以指定要监控的事件，常见的事件有modify、
1-q，即“一quiet”，表示打印出监控事件。
www.Linuxidc .com
2.6.18-164.el5PAE
2.6.18-164.c15PAE
2.6.18-164.e15PAE
2.6.18-164.e15PAE
内核版本
表5-1Linux操作系统的内核版本与节点信息
，表示始终保持事件监听状态。
内容发布节点
服务节点3
服务节点2
服务节点1
用途
192.168.12.134
192.168.12.133
192.168.12.132
192.168.12.131
IP地址
/web/wwwroot
/web3/wwwroot
/web2/wwwroot
/web1/wwwroot
网页数据路径
---
## Page 154
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
送数据的过程。这一点与前面讲述的案例（5.2.2节）刚好相反。
136
pid file = /var/run/rsyncd.pid
gid-nobody
Web1节点的rsyncd.conf配置如下：
这里给出3个服务节点的rsync配置文件以供参考，读者可根据实际情况自行修改。
2.在3个服务节点上配置rsync
hosts a11ow = 192.168.12.134
write only =no
read only=no
gnore
[web2]
lock file = /var/run/rsync.1ock
pid file =/var/run/rsyncd.pid
strict modes = yes
nax
lse
uid = nobody
Web2节点的rsyncd.conf配置如下：
secrets file =/etc/web1.pass
auth users
gid
uid=root
list = false
hosts deny
hosts a11ow = 192.168.12.134
read only=no
ignore errors
comment =web1 file
path=/web1/wwwroot/
[web1]
logfile =/var/1og/rsyncd.1og
ock file =/var/run/rsync.lock
trict modes =yes
8.X
use chroot=no
aid =nobody
ment = web2 file
connections =10
=nobody
ite only=no
chroot
no
=webluser
PDG
---
## Page 155
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
这个过程可以通过一个shell脚本来完成。脚本内容大致如下：
服务加入到自启动文件中。
user2=web2user
userl=webluser
dst3=web3
dst2=web2
src=/web/wwwroot/
host3=192.168.12.133
host2=192.168.12.132
host1=192.168.12.131
#1/bin/bash
配置内容发布节点的主要工作是将生成的静态网页实时同步到集群中3个服务节点上，
3.配置内容发布节点
到此为止，3个Web服务节点已经配置完成。
echo “/usr/local/bin/rsync --daemon">>/etc/rc.1ocal
在配置完3台服务节点的rsyncd.conf文件后，依次启动rsync守护进程。接着将rsync
secrets file = /etc/web3.pass
auth users
gid=root
uid=root
list = false
read only=no
ignore errors
[web3]
og file =/var/1og/rsyncd.1og
ock file =/var/run/rsync.lock
tric
max connections =10
use chroot = no
uid =nobody
Web3节点的rsyncd.conf配置如下：
secrets ffle = /etc/web2.pass
auth users = web2user
100x=p5
Bt8 a11ow = 192.168.12.134
teonly=no
www.Linuxidc.com
/var/run/rsyncd.pid
= web3user
yes
son137
PDG
---
## Page 156
Linux公社（www.LinuxIDC.com）是专业的Linux系统门户网站，实时发布最新Linux资讯。
执行权限，放到后台运行。过程如下：
件，即“-e close_write,delete,create,attrib”。