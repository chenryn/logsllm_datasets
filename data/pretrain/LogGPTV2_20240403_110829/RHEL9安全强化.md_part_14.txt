:::
::: itemizedlist
**其他资源**
-   `tang(8)`{.literal}、`semanage(8)`{.literal}、`firewall-cmd(1)`{.literal}、`jose(1)`{.literal}、`systemd.unit(5)`{.literal}
    和 `systemd.socket(5)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption_security-hardening.html#rotating-tang-keys_configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption}轮转 Tang 服务器密钥并更新客户端上的绑定 {.title}
:::
使用以下步骤轮转 Tang
服务器密钥，并更新客户端上现有的绑定。轮转它们的确切间隔取决于您的应用程序、密钥大小以及机构策略。
或者，您可以使用 `nbde_server`{.literal} RHEL 系统角色来轮转 Tang
密钥。如需更多信息，请参阅 [使用 nbde_server 系统角色来设置多个 Tang
服务器](#configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption_security-hardening.html#using-the-nbde_server-system-role-for-setting-up-multiple-tang-servers_configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption "使用 NBDE 服务器系统角色设置多个 Tang 服务器"){.link}。
::: itemizedlist
**先决条件**
-   Tang 服务器在运行。
-   `clevis`{.literal} 和 `clevis-luks`{.literal}
    软件包已安装在您的客户端上。
:::
::: orderedlist
**步骤**
1.  重命名 `/var/db/tang`{.literal}
    密钥数据库目录中的所有密钥，使其前面有一个
    `.`{.literal}，将它们隐藏起来，以防被看到。请注意，以下示例中的文件名与
    Tang 服务器的密钥数据库目录中的独特文件名不同：
    ``` screen
    # cd /var/db/tang
    # ls -l
    -rw-r--r--. 1 root root 349 Feb  7 14:55 UV6dqXSwe1bRKG3KbJmdiR020hY.jwk
    -rw-r--r--. 1 root root 354 Feb  7 14:55 y9hxLTQSiSB5jSEGWnjhY8fDTJU.jwk
    # mv UV6dqXSwe1bRKG3KbJmdiR020hY.jwk .UV6dqXSwe1bRKG3KbJmdiR020hY.jwk
    # mv y9hxLTQSiSB5jSEGWnjhY8fDTJU.jwk .y9hxLTQSiSB5jSEGWnjhY8fDTJU.jwk
    ```
2.  检查是否重命名了，是否隐藏了 Tang 服务器中的所有密钥：
    ``` screen
    # ls -l
    total 0
    ```
3.  使用 `/usr/libexec/tangd-keygen`{.literal} 命令，在Tang 服务器上的
    `/var/db/tang`{.literal} 中生成新的密钥：
    ``` screen
    # /usr/libexec/tangd-keygen /var/db/tang
    # ls /var/db/tang
    3ZWS6-cDrCG61UPJS2BMmPU4I54.jwk zyLuX6hijUy_PSeUEFDi7hi38.jwk
    ```
4.  检查您的 Tang 服务器是否可以显示新密钥对的签名密钥，例如：
    ``` screen
    # tang-show-keys 7500
    3ZWS6-cDrCG61UPJS2BMmPU4I54
    ```
5.  在 NBDE 客户端上，使用 `clevis luks report`{.literal} 命令检查 Tang
    服务器显示的密钥是否保持不变。您可以使用
    `clevis luks list`{.literal} 命令识别带有相关绑定的插槽，例如：
    ``` screen
    # clevis luks list -d /dev/sda2
    1: tang '{"url":"http://tang.srv"}'
    # clevis luks report -d /dev/sda2 -s 1
    ...
    Report detected that some keys were rotated.
    Do you want to regenerate luks metadata with "clevis luks regen -d /dev/sda2 -s 1"? [ynYN]
    ```
6.  要为新密钥重新生成 LUKS 元数据，在上一个命令提示时按
    `y`{.literal}，或使用 `clevis luks regen`{.literal} 命令：
    ``` screen
    # clevis luks regen -d /dev/sda2 -s 1
    ```
7.  当您确定所有旧客户端都使用新密钥时，您可以从 Tang
    服务器中删除旧密钥，例如：
    ``` screen
    # cd /var/db/tang
    # rm .*.jwk
    ```
:::
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
在客户端仍在使用旧密钥时删除旧密钥可能会导致数据丢失。如果您意外删除了这些密钥，请在客户端上使用
`clevis luks regen`{.literal} 命令，并手动提供您的 LUKS 密码。
:::
::: itemizedlist
**其他资源**
-   `tang-show-keys(1)`{.literal}、`clevis-luks-list(1)`{.literal}、`clevis-luks-report(1)`{.literal}
    和 `clevis-luks-regen(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption_security-hardening.html#configuring-automated-unlocking-using-a-tang-key-in-the-web-console_configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption}在 web 控制台中使用 Tang 键配置自动解锁 {.title}
:::
使用 Tang 服务器提供的密钥，配置 LUKS 加密存储设备的自动解锁。
::: itemizedlist
**先决条件**
-   已安装 RHEL 9 web 控制台。
    详情请参阅[安装 Web
    控制台](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_systems_using_the_rhel_9_web_console/getting-started-with-the-rhel-8-web-console_system-management-using-the-rhel-9-web-console#installing-the-web-console_getting-started-with-the-rhel-9-web-console){.link}。
-   `cockpit-storaged`{.literal} 软件包已安装在您的系统上。
-   `cockpit.socket`{.literal}服务运行在9090端口。
-   `clevis`{.literal}、`tang`{.literal} 和 `clevis-dracut`{.literal}
    软件包已安装。
-   Tang 服务器在运行。
:::
::: orderedlist
**流程**
1.  在 web 浏览器中输入以下地址来打开 RHEL web 控制台：
    ``` screen
    https://localhost:9090
    ```
    当连接远程系统时，将 [*localhost*]{.emphasis}
    部分替换为远程服务器的主机名或 IP 地址。
2.  提供您的凭证并点击 [Storage]{.guibutton}。点 \> 扩展您要使用 Tang
    服务器解锁的加密设备详情，然后点击
    [Encryption]{.guibutton}。[]{.guibutton}
3.  点击 [**Keys**]{.strong} 部分中的 [+]{.guibutton} 来添加 Tang 密钥：
    ::: informalfigure
    ::: mediaobject
    ![RHEL web
    控制台：encryption](images/web-console-disk-encryption.png)
    :::
    :::
4.  提供 Tang 服务器的地址以及用于解锁 LUKS 加密设备的密码。点击
    [Add]{.guibutton} 确认：
    ::: informalfigure
    ::: mediaobject
    ![RHEL web 控制台：添加 Tang
    密钥](images/web-console-add-tang-key.png)
    :::
    :::
    以下对话框窗口提供了一个命令来验证密钥哈希是否匹配。
5.  在 Tang 服务器上的终端中，使用 `tang-show-keys`{.literal}
    命令显示密钥散列以进行比较。在本例中，Tang 服务器在端口
    [*7500*]{.emphasis} 上运行：
    ``` screen
    # tang-show-keys 7500
    fM-EwYeiTxS66X3s1UAywsGKGnxnpll8ig0KOQmr9CM
    ```
6.  当 web
    控制台中的密钥哈希与之前列出的命令的输出中的密钥哈希相同时，请点击
    [Trust key]{.guibutton}：
    ::: informalfigure
    ::: mediaobject
    ![RHEL web 控制台：验证 Tang
    密钥](images/web-console-verify-tang-key.png)
    :::
    :::
7.  要启用早期引导系统来处理磁盘绑定，请点击左侧导航栏底部的
    [Terminal]{.guibutton} ，并输入以下命令：
    ``` screen
    # dnf install clevis-dracut
    # grubby --update-kernel=ALL --args="rd.neednet=1"
    # dracut -fv --regenerate-all
    ```
8.  要启用 Clevis
    解锁引导过程中未挂载的卷，请在重启系统前在客户端中使用以下命令：
    ``` screen
    # systemctl enable clevis-luks-askpass.path
    ```
:::
::: orderedlist
**验证**
1.  检查新添加的 Tang 密钥现在是否在 [**Keys**]{.strong}
    部分中列出，且类型为 `Keyserver`{.literal} ：
    ::: informalfigure
    ::: mediaobject
    ![RHEL web 控制台：一个 keyserver
    键被列出](images/web-console-disk-encryption-with-tang-key.png)
    :::
    :::
2.  验证绑定是否在早期引导时可用，例如：
    ``` screen
    # lsinitrd | grep clevis
    clevis
    clevis-pin-sss
    clevis-pin-tang
    clevis-pin-tpm2
    -rwxr-xr-x   1 root     root         1600 Feb 11 16:30 usr/bin/clevis
    -rwxr-xr-x   1 root     root         1654 Feb 11 16:30 usr/bin/clevis-decrypt
    ...
    -rwxr-xr-x   2 root     root           45 Feb 11 16:30 usr/lib/dracut/hooks/initqueue/settled/60-clevis-hook.sh
    -rwxr-xr-x   1 root     root         2257 Feb 11 16:30 usr/libexec/clevis-luks-askpass
    ```
:::
::: itemizedlist
**其他资源**
-   [使用 RHEL web
    控制台入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_systems_using_the_rhel_8_web_console/getting-started-with-the-rhel-8-web-console_system-management-using-the-rhel-8-web-console){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption_security-hardening.html#basic-nbde-and-tpm2-encryption-client-operations_configuring-automated-unlocking-of-encrypted-volumes-using-policy-based-decryption}基本的 NBDE 和 TPM2 加密客户端操作 {.title}
:::
Clevis 框架可以加密纯文本文件，并解密 JSON Web 加密(JWE)格式的密文和
LUKS 加密的块设备。Clevis 客户端可以使用 Tang
网络服务器或受信任的平台模块 2.0(TPM 2.0)芯片进行加密操作。
以下命令通过包含纯文本文件的示例演示了 Clevis
提供的基本功能。您还可以使用它们来对 NBDE 或 Clevis+TPM
部署进行故障排除。
::: itemizedlist
**绑定到 Tang 服务器的加密客户端**
-   要检查 Clevis 加密客户端是否绑定到 Tang 服务器，请使用
    `clevis encrypt tang`{.literal} 子命令：
    ``` screen
    $ clevis encrypt tang '{"url":"http://tang.srv:port"}'  secret.jwe
    The advertisement contains the following signing keys:
    _OsIk0T-E2l6qjfdDiwVmidoZjA
    Do you wish to trust these keys? [ynYN] y
    ```
    修改上例中的 [*http://tang.srv:port*]{.emphasis} URL，使其与安装了
    `tang`{.literal} 的服务器的 URL 匹配。[*secret.jwe*]{.emphasis}
    输出文件包含您的加密密码文本，格式为 JWE。此密码文本是从
    [*input-plain.txt*]{.emphasis} 输入文件中读取的。
    另外，如果您的配置需要与 Tang 服务器进行非互动通信而无需 SSH
    访问，您可以下载公告并将其保存到文件中：
    ``` screen
    $ curl -sfg http://tang.srv:port/adv -o adv.jws
    ```
    将 [*adv.jws*]{.emphasis}
    文件中的公告用于任何以下任务，如加密文件或信息：
    ``` screen
    $ echo 'hello' | clevis encrypt tang '{"url":"http://tang.srv:port","adv":"adv.jws"}'
    ```
-   要解密数据，请使用 `clevis decrypt`{.literal}
    命令，并提供密码文本(JWE)：
    ``` screen
    $ clevis decrypt  output-plain.txt
    ```
:::
::: itemizedlist
**使用 TPM 2.0 加密客户端**
-   要使用 TPM 2.0 芯片进行加密，请使用 `clevis encrypt tpm2`{.literal}
    子命令，唯一的参数是 JSON 配置对象：
    ``` screen
    $ clevis encrypt tpm2 '{}'  secret.jwe
    ```
    要选择不同的层次结构、哈希和密钥算法，请指定配置属性，例如：
    ``` screen
    $ clevis encrypt tpm2 '{"hash":"sha1","key":"rsa"}'  secret.jwe
    ```
-   要解密数据，请提供 JSON Web 加密(JWE)格式的密码文本：
    ``` screen
    $ clevis decrypt  output-plain.txt
    ```
:::
pin 还支持将数据封装到平台配置寄存器(PCR)状态。这样，只有 PCR
哈希值与密封时使用的策略匹配，数据才能被解封。
例如，使用 SHA-1 库的索引 0 和 7 将数据封装到 PCR：
``` screen
$ clevis encrypt tpm2 '{"pcr_bank":"sha1","pcr_ids":"0,7"}'  secret.jwe
```
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
PCR
中的哈希值可以重写，您无法再解锁加密的卷。因此，添加一个强大的密码短语，以便您手动解锁加密的卷，即使
PCR 中的值发生了变化。