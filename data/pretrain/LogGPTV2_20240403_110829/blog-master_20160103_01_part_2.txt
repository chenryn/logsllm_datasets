```  
发送快照到stdout  
```  
       zfs send [-eL] [-i snapshot|bookmark] filesystem|volume|snapshot  
           Generate  a  send  stream,  which may be of a filesystem, and may be incremental from a bookmark.  If the destination is a filesystem or volume, the pool must be read-only, or the filesystem must not be  
           mounted.  When the stream generated from a filesystem or volume is received, the default snapshot name will be "--head--".  
           -i snapshot|bookmark  
               Generate an incremental send stream.  The incremental source must be an earlier snapshot in the destination’s history. It will commonly be an earlier snapshot in  the  destination’s  filesystem,  in  
               which case it can be specified as the last component of the name (the # or @ character and following).  
               If the incremental target is a clone, the incremental source can be the origin snapshot, or an earlier snapshot in the origin’s filesystem, or the origin’s origin, etc.  
           -L  
               Generate  a  stream which may contain blocks larger than 128KB.  This flag has no effect if the large_blocks pool feature is disabled, or if the recordsize property of this filesystem has never been  
               set above 128KB.  The receiving system must have the large_blocks pool feature enabled as well.  See zpool-features(5) for details on ZFS feature flags and the large_blocks feature.  
           -e  
               Generate a more compact stream by using WRITE_EMBEDDED records for blocks which are stored more compactly on disk by the embedded_data pool feature.  This flag has no  effect  if  the  embedded_data  
               feature is disabled.  The receiving system must have the embedded_data feature enabled.  If the lz4_compress feature is active on the sending system, then the receiving system must have that feature  
               enabled as well. See zpool-features(5) for details on ZFS feature flags and the embedded_data feature.  
```  
从stdin接收数据，并转存到zfs快照中  
```  
       zfs receive [-vnFu] filesystem|volume|snapshot  
       zfs receive [-vnFu] [-d|-e] filesystem  
           Creates a snapshot whose contents are as specified in the stream provided on standard input. If a full stream is received, then a new file system is created as well. Streams are created  using  the  zfs  
           send subcommand, which by default creates a full stream. zfs recv can be used as an alias for zfs receive.  
           If an incremental stream is received, then the destination file system must already exist, and its most recent snapshot must match the incremental stream’s source. For zvols, the destination device link  
           is destroyed and recreated, which means the zvol cannot be accessed during the receive operation.  
           When a snapshot replication package stream that is generated by using the zfs send -R command is  received, any snapshots that do not exist on the sending location are destroyed by using the zfs destroy  
           -d command.  
           The name of the snapshot (and file system, if a full stream is received) that this subcommand creates depends on the argument type and the use of the -d or -e options.  
           If the argument is a snapshot name, the specified snapshot is created. If the argument is a file system or volume name, a snapshot with the same name as the sent snapshot is created within the specified  
           filesystem or volume.  If neither of the -d or -e options are specified, the provided target snapshot name is used exactly as provided.  
           The -d and -e options cause the file system name of the target snapshot to be determined by appending a portion of the sent snapshot’s name to the specified target filesystem. If the -d option is speci-  
           fied, all but the first element of the sent snapshot’s file system path (usually the pool name) is used and any required intermediate file systems within the specified one are created.  If the -e option  
           is specified, then only the last element of the sent snapshot’s file system name (i.e. the name of the source file system itself) is used as the target file system name.  
           -d  
               Discard the first element of the sent snapshot’s file system name, using the remaining elements to determine the name of the target file system for the new snapshot as  described  in  the  paragraph  
               above.  
           -e  
               Discard all but the last element of the sent snapshot’s file system name, using that element to determine the name of the target file system for the new snapshot as described in the paragraph above.  
           -u  
               File system that is associated with the received stream is not mounted.  
           -v  
               Print verbose information about the stream and the time required to perform the receive operation.  
           -n  
               Do not actually receive the stream. This can be useful in conjunction with the -v option to verify the name the receive operation would use.  
           -F  
               Force a rollback of the file system to the most recent snapshot before performing the receive operation. If receiving an incremental replication stream (for example, one generated  by  zfs  send  -R  
               -[iI]), destroy snapshots and file systems that do not exist on the sending side.  
```  
例子  
```  
       Example 12 Remotely Replicating ZFS Data  
       The following commands send a full stream and then an incremental stream to a remote machine, restoring them into poolB/received/fs@aand poolB/received/fs@b, respectively. poolB must contain the file system  
       poolB/received, and must not initially contain poolB/received/fs.  
         # zfs send pool/fs@a | \  
            ssh host zfs receive poolB/received/fs@a  
         # zfs send -i a pool/fs@b | ssh host \  
            zfs receive poolB/received/fs  
       Example 13 Using the zfs receive -d Option  
       The  following  command  sends  a full stream of poolA/fsA/fsB@snap to a remote machine, receiving it into poolB/received/fsA/fsB@snap. The fsA/fsB@snap portion of the received snapshot’s name is determined  
       from the name of the sent snapshot. poolB must contain the file system poolB/received. If poolB/received/fsA does not exist, it is created as an empty file system.  
         # zfs send poolA/fsA/fsB@snap | \  
            ssh host zfs receive -d poolB/received  
       Example 24 Creating a bookmark  
       The following example create a bookmark to a snapshot. This bookmark can then be used instead of snapshot in send streams.  
         # zfs bookmark rpool@snapshot rpool#bookmark  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")