### 问题描述

我需要允许服务器1上的`postgres`用户通过`rsync`命令将数据同步到服务器2。尝试执行以下命令时遇到了权限问题：

```bash
rsync -a /tmp/test postgres@server2:/tmp/test
```

错误信息如下：

```
Permission denied (publickey).
```

我已经在服务器1上以`postgres`用户身份运行了`ssh-keygen`、`eval $(ssh-agent)`和`ssh-add`，生成的密钥文件位于`/var/lib/postgresql/.ssh/id_rsa`和`/var/lib/postgresql/.ssh/id_rsa.pub`。使用`ssh -vvv postgres@server2`可以确认公钥已经发送。

在服务器2上，我在`/var/lib/postgresql/.ssh/authorized_keys`中添加了来自服务器1的公钥内容。该文件及其目录的所有者均为`postgres`用户，并且权限设置为`chmod 600`（对于`authorized_keys`）和`chmod 700`（对于`.ssh`目录）。

然而，从服务器2的`sshd`日志中可以看到“Failed publickey for postgres...”的信息。

### 用户详细信息

在两台服务器上，`postgres`用户的配置如下：

```
postgres:x:106:114:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash
```

### 详细的SSH调试输出

以下是`ssh -vvv postgres@server2`的调试输出：

```
...
debug1: Found key in /var/lib/postgresql/.ssh/known_hosts:1
debug1: ssh_ecdsa_verify: signature correct
debug2: kex_derive_keys
debug2: set_newkeys: mode 1
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug2: set_newkeys: mode 0
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug2: service_accept: ssh-userauth
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug2: key: /var/lib/postgresql/.ssh/id_rsa (0x7f468e434000)
debug2: key: /var/lib/postgresql/.ssh/id_dsa ((nil))
debug2: key: /var/lib/postgresql/.ssh/id_ecdsa ((nil))
debug1: Authentications that can continue: publickey
debug3: start over, passed a different list publickey
debug3: preferred gssapi-keyex,gssapi-with-mic,publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /var/lib/postgresql/.ssh/id_rsa
debug3: send_pubkey_test
debug2: we sent a publickey packet, wait for reply
debug1: Authentications that can continue: publickey
debug1: Trying private key: /var/lib/postgresql/.ssh/id_dsa
debug3: no such identity: /var/lib/postgresql/.ssh/id_dsa
debug1: Trying private key: /var/lib/postgresql/.ssh/id_ecdsa
debug3: no such identity: /var/lib/postgresql/.ssh/id_ecdsa
debug2: we did not send a packet, disable method
debug1: No more authentication methods to try.
Permission denied (publickey).
```

### 服务器2的`sshd_config`配置

```bash
Port 22
Protocol 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
UsePrivilegeSeparation yes
KeyRegenerationInterval 3600
ServerKeyBits 768
SyslogFacility AUTH
LogLevel VERBOSE
LoginGraceTime 120
PermitRootLogin yes
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication no
PasswordAuthentication no
X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
AcceptEnv LANG LC_*
Subsystem sftp /usr/lib/openssh/sftp-server
UsePAM yes
```

### 服务器2的认证日志

```
Jan 16 03:54:21 ip-10-28-26-251 sshd[7972]: Set /proc/self/oom_score_adj to 0
Jan 16 03:54:21 ip-10-28-26-251 sshd[7972]: Connection from 10.28.123.97 port 49377
Jan 16 03:54:21 ip-10-28-26-251 sshd[7972]: Failed publickey for postgres from 10.28.123.97 port 49377 ssh2
Jan 16 03:54:21 ip-10-28-26-251 sshd[7972]: Connection closed by 10.28.123.97 [preauth]
```

### 解决方案

根据你提供的信息，看起来你的配置大部分是正确的。以下是一些可能的检查点和解决方案：

1. **检查`sshd_config`中的`AuthorizedKeysFile`设置**：
   确保`sshd_config`中没有指定非默认的`AuthorizedKeysFile`路径。默认情况下，它应该查找`~/.ssh/authorized_keys`。

2. **确保SELinux或AppArmor未阻止访问**：
   如果启用了SELinux或AppArmor，请确保它们没有阻止对`/var/lib/postgresql/.ssh/authorized_keys`的访问。

3. **重新启动`sshd`服务**：
   修改`sshd_config`后，重新启动`sshd`服务以应用更改。

4. **检查权限和所有权**：
   再次确认`/var/lib/postgresql/.ssh`目录及其内容的所有权和权限是否正确：
   ```bash
   # On both servers
   chown -R postgres:postgres /var/lib/postgresql/.ssh
   chmod 700 /var/lib/postgresql/.ssh
   chmod 600 /var/lib/postgresql/.ssh/authorized_keys
   ```

5. **检查防火墙规则**：
   确保没有防火墙规则阻止SSH连接。

6. **验证公钥格式**：
   确保`authorized_keys`文件中的公钥格式正确，且没有多余的空格或换行符。

如果以上步骤仍然无法解决问题，建议进一步检查系统日志和`sshd`日志，以获取更多详细的错误信息。