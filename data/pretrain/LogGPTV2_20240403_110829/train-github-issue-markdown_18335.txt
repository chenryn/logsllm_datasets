 **TypeScript Version:**
1.8.9
**Code**
    // A self-contained demonstration of the problem follows...
    export interface IHiddenColumns {
        hiddenColumns: string;
    }
    export class HiddenColumnsLoader {
        public loadHiddenColumns(): Promise {
            return new Promise((resolve, reject) => {
                let promises: Promise[] = [];
                // push promises
               // .forEach(structureContent => {
               //      promises.push(this.loadStructureHiddenColumns(structureContent.rowSectionDefinition, structureContent.columnSectionDefinition, provider));
               // });
                Promise
                    .all(promises)
                    .then((results) => {
                        // results should be typeof IHiddenColumns[] and not Promise. See stack below
                        this.resolveResults(results);
                        resolve();
                    })
            });
        }
        private resolveResults(loadPageResults: IHiddenColumns[]) {
            // resolve
        }
    }
**Expected behavior:**  
Compilation succeeded in Typescript 1.8.7.  
Failed in 1.8.9
'results' inside Promise.all().then() should be considered typeof
IHiddenColumns[]. Seems to be instead : Promise. See trace
below.
**Actual behavior:**  
Compilation failed in 1.8.9 whereas it worked in 1.8.7 (and still works if I
backward to 1.8.7).
Here is the stacktrace :  
[11:39:07]  
42 this.resolveResults(gridModel, results);  
~~~~~~~
.../HiddenColumnsLoader.ts(42,37): error TS2345: Argument of type 'Promise[]'
is not assignable to parameter of type 'IHiddenColumns[]'.  
Type 'Promise' is not assignable to type 'IHiddenColumns'.