# 为什么 Chrome 会说你的 SHA-2 证书链是“肯定不安全的”

## 概述
假设你已经完全配置好了 SSL，使用了强加密算法、禁用了废弃的协议，并且提供了 100% SHA-2 的证书链。SSL Labs 给了你一个 A+ 评分，shaaaaaaaaaaaaa.com 也没有检测到你使用了 SHA-1。然而，在某些情况下，当你访问自己的网站时，Chrome 仍然会在 URL 栏显示一个红叉，并提示你的网站提供了 SHA-1 证书，是“肯定不安全的”。这究竟是怎么回事？

## 背景知识：证书链的工作原理

### 什么是证书链？
一个 SSL 证书必须由证书授权中心（CA）签名才能被信任。在最简单的情况下，网站的终端证书是由浏览器所信任的根证书直接签名的。

#### 简单 PKI
![简单 PKI: 终端证书由根证书直接签名](/data/attachment/album/201510/10/114416tcjicunz1vnncfjc.png)

在这种情况下，浏览器校验证书很简单：它会在其根证书库中查找终端证书的签发者，如果找到，则使用该根证书的公钥来校验终端证书的签名。

### 典型 PKI
然而，终端证书很少直接由根证书签名。相反，终端证书通常由一个中间证书（也称为下级 CA）签名，而中间证书再由根证书签名。

#### 典型 PKI
![典型的 PKI 使用一个中间证书](/data/attachment/album/201510/10/123450hrr1wg8h2dizzdcp.png)

在这种情况下，浏览器需要找到签名终端证书的中间证书，并可能需要迭代这个过程（因为中间证书可能由其他中间证书签名），直到找到根证书。实际上，从终端证书到根证书可能存在多条路径。

### 服务器如何提供中间证书
为了让浏览器找到中间证书链，服务器需要在部署 SSL 证书时同时提供中间证书。浏览器通常会缓存这些中间证书，可能会使用缓存的证书而不是服务器提供的证书。这就是为什么即使你全部使用了 SHA-2，Chrome 仍可能显示红叉的原因：它使用的是缓存的 SHA-1 证书链。

## 问题原因

### 问题一：SHA-1 中间证书的重用
当 CA 迁移到 SHA-2 时，它可以对已有的公钥使用 SHA-2 重新签名，或者生成一个新的带有新公钥和主题名的中间证书。

#### 两种新的 SHA-2 签名方式
![两种新的 SHA-2 签名方式](/data/attachment/album/201510/10/125741pnne33nnv663goge.png)

**第一种方式** 是错误的。虽然 CA 可以使用 SHA-2 重新签名现有的中间证书，但浏览器可能缓存了带有旧 SHA-1 签名的中间证书。如前所述，浏览器可以忽略服务器提供的中间证书，继续使用缓存的 SHA-1 证书构建证书链。CryptoAPI 就是这种情况。

#### 服务器发送 SHA-2 证书，浏览器使用缓存的 SHA-1 证书
![服务器发送 SHA-2 证书，浏览器使用缓存的 SHA-1 证书](/data/attachment/album/201510/10/130338ufooj8o1q4jj14ot.png)

**第二种方式** 避免了这个问题。由于 CA 生成了一个新的中间证书，具有新的名称和公钥，浏览器不可能有 SHA-1 签名的旧版本。这就是为什么 CA/Browser Forum 的 Ballot 118 规定：

> SHA-2 下级证书绝不应该链接到 SHA-1 的 CA 下级证书上。

不幸的是，有些 CA 忽视了这一建议。例如，StartCom 仍然使用 SHA-1 中间证书签发 SHA-2 终端证书。尽管他们提供了一个 SHA-2 签名的中间证书，但如果浏览器已经缓存了 SHA-1 版本，就会出现问题。

### 问题二：过期的 NSS 和交叉签名的根证书
有时候，根证书本身也由其他根证书签名，这称为交叉签名。交叉签名提供了一条到达可信根证书的额外路径，使得不在浏览器可信证书库中的新根证书也能工作。当浏览器开始信任一个根证书时，交叉签名证书就不再需要了。然而，交叉签名证书也可以被缓存，而在 NSS 中的一个 bug 导致 Linux 上的 Chrome 使用缓存的交叉签名根证书，即使存在更短和更新的证书链。

#### NSS 使用缓存的交叉签名证书构建证书链
![NSS 使用缓存的交叉签名证书构建证书链](/data/attachment/album/201510/10/132911ly0nc0nsognjv90c.png)

这个 bug 在 NSS 3.17.4 中修复，发布于 2015 年 1 月 28 日。不幸的是，Debian 更新 NSS 包非常缓慢。这个 bug 在 2014 年 12 月 30 日提交到了 Debian 的 bug tracker，但直到 2015 年 5 月 13 日才在 Debian Unstable 中修复。同时，Debian Stable (Jessie) 继续使用 NSS 3.17.2。Debian 安全团队排除了通过安全更新修复的可能性，而且包维护者似乎也不打算快速响应将此修复加入即将发布的 Debian Stable 中。相比之下，Ubuntu 将此视为安全问题，并在 2015 年 2 月 19 日为其所有发行版发布了更新包。

不幸的是，CA 对使用过期 NSS 的用户无能为力。直到 Debian 为其稳定发行版发布更新的 NSS 包之前，Debian 上的 Chrome 用户会一直看到许多这样的红叉。

#### URL 栏显示红叉
![URL 栏显示红叉](/data/attachment/album/201510/10/141438xpfv69d65fxl7cfl.png)

或者，如果证书在 2016 年失效的话，情况如下：
![URL 栏显示橙色警告符号](/data/attachment/album/201510/10/141438xs4sgac4sck9zn99.png)

**更新：** 由 SSLMate 的 Andrew Ayer 提供的 NSS 更新包已于 2015 年 9 月 5 日发布的 Debian Jessie 8.2 中包含。

---

通过上述优化，文章结构更加清晰，内容更加连贯，专业术语和概念解释得更加详细，有助于读者更好地理解问题及其解决方案。