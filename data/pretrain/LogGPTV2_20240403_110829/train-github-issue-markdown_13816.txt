### Issue Summary
I have thoroughly searched the issues and FAQs of this repository and believe that this is not a duplicate.

### Environment
- **Dubbo Version:** 2.7.3
- **Operating System:**
  - Windows 7
  - CentOS Linux 4.14.67-2dev917.el7.x86_64
- **Java Version:** 1.8.0_201

### Steps to Reproduce
1. **Start a Service with Google Protobuf Type:**
   Define a service interface as follows:
   ```java
   public interface GooglePbBasicService {
       CDubboGooglePBResponseType sayHello(CDubboGooglePBRequestType request);
   }
   ```

2. **Create a Generic Reference with `protobuf-json` Serialization:**
   ```java
   ReferenceConfig<GenericService> referenceConfig = new ReferenceConfig<>();
   referenceConfig.setInterface(GenericService.class);
   referenceConfig.setGeneric("protobuf-json");
   GenericService service = referenceConfig.get();
   ```

3. **Use the Reference Configuration to Get a Client and Invoke the Service:**

### Expected Result
The request should be sent and processed by the `GenericFilter` with `protobuf-json` serialization. The service should return a generic result to the client. The relevant code snippet is as follows:
```java
if (StringUtils.isEmpty(generic)) {
    // ...
} else if (ProtocolUtils.isJavaGenericSerialization(generic)) {
    // ...
} else if (ProtocolUtils.isBeanGenericSerialization(generic)) {
    // ...
} else if (ProtocolUtils.isProtobufGenericSerialization(generic)) {
    // This block should be reached
}
```

### Actual Result
- **Windows 7:** The client works as expected.
- **Linux:** The client fails.

**Details:**
- On the service side, the request from Windows 7 contains `generic = protobuf-json`.
- On the service side, the request from Linux contains `generic = true`, which causes the invocation to fail.

**Error Stack Trace:**
```java
org.apache.dubbo.rpc.service.GenericException: java.lang.ClassCastException: java.lang.String cannot be cast to com.ctrip.hotel.productmatch.imagesearchrank.api.proto.ImageSearchRankRequestType
    at org.apache.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)
    at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
    at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
    at com.ctrip.framework.cdubbo.internal.delegate.callback.StreamInvoker.invoke(StreamInvoker.java:29)
    at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
    at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
    at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:141)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at com.ctrip.framework.cdubbo.internal.health.HealthCheckFilter.invoke(HealthCheckFilter.java:74)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at com.ctrip.framework.cdubbo.internal.metadata.MetadataFilter.invoke(MetadataFilter.java:41)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at com.ctrip.framework.cdubbo.internal.delegate.server.CDubboServerInvoker.invoke(CDubboServerInvoker.java:66)
    at com.ctrip.framework.cdubbo.internal.filter.CatProviderFilter.invoke(CatProviderFilter.java:28)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at com.ctrip.framework.cdubbo.internal.ratelimit.RateLimitFilter.invoke(RateLimitFilter.java:52)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
    at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
    at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
    at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
    at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
    at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
    at com.ctrip.framework.cdubbo.internal.delegate.CDubboChannelHandlerDelegate.doReceivedRequest(CDubboChannelHandlerDelegate.java:113)
    at com.ctrip.framework.cdubbo.internal.delegate.CDubboChannelHandlerDelegate.received(CDubboChannelHandlerDelegate.java:68)
    at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    at java.lang.Thread.run(Thread.java:748)
```

This issue is specific to the Linux environment and needs further investigation.