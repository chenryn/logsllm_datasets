### Issue Description

When a `while` loop becomes infinite (for example, by not incrementing the iterator), the error is not surfaced, and the last test does not appear. The current behavior does not indicate that there is a problem with the code; instead, the experience breaks silently.

This may be expected behavior, as the infinite evaluation will prevent the second test from running. However, there may be a more elegant way to handle this issue. Please let me know the best way to follow up on this or if it is a known issue elsewhere.

### Screenshot
![Screenshot 2015-11-26 at 6:13:13 AM](https://cloud.githubusercontent.com/assets/13111622/11424788/cf92a53c-9404-11e5-90f5-e58f2e443b24.png)

### Challenge Details
**Challenge:** Iterate with JavaScript While Loops  
**User Agent:** `Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36`

### Steps to Reproduce
1. Use the following code in the challenge:
    ```javascript
    var myArray = [];
    var i = 0;
    // Only change code below this line.
    while (i < 5) {
      myArray.push(i);
    }
    // Only change code above this line.
    if (typeof(myArray) !== "undefined") {
      (function() { return myArray; })();
    }
    ```
2. Observe that the `while` loop does not increment the `i` variable, causing an infinite loop.
3. Note that the last test does not appear, and no error message is displayed.

### Expected Behavior
- The system should detect the infinite loop and provide a clear error message indicating the issue.
- The user should be informed that the loop is not terminating correctly.

### Actual Behavior
- The infinite loop causes the last test to not appear.
- No error message is displayed, and the experience breaks silently.

### Additional Information
- **Browser:** Google Chrome
- **Version:** 46.0.2490.80
- **Operating System:** Mac OS X 10.10.4

Please let me know if you need any further information or if there are additional steps I can take to help resolve this issue.