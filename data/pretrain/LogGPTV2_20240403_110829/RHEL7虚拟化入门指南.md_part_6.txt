::: section
::: titlepage
## [⁠]{#chap-Virtualization_Getting_Started-Products.html#sec-Virtualization_Getting_Started-Products-Storage-Host-Devices}3.4.4. 主机存储 {.title}
:::
::: para
磁盘镜像可以储存在一系列和主机相连的本地或远程存储中。
:::
::: variablelist
[镜像文件]{.term}
:   ::: para
    镜像文件储存在主机文件系统中。它可以储存在本地文件系统中，如 ext4 或
    xfs；或网络文件系统中，如 NFS 。
    :::
    ::: para
    例如 [**libguestfs**]{.application}
    这样的工具，能管理、备份及监控文件。KVM 上的磁盘镜像格式包括：
    ::: variablelist
    [raw]{.term}
    :   ::: para
        raw 镜像文件指不包含附加元数据的磁盘内容。
        :::
        ::: para
        假如主机文件系统允许，raw
        文件可以是预分配（pre-allocated）或稀疏（sparse）。稀疏文件根据需求分配主机磁盘空间，因此它是一种精简配置形式（thin
        provisioning）。预分配文件的所有空间需要被预先分配，但它比稀疏文件性能好。
        :::
        ::: para
        当对磁盘 I/O
        性能要求非常高，而且通常不需要通过网络传输镜像文件时，可以使用
        raw 文件。
        :::
    [qcow2]{.term}
    :   ::: para
        qcow2
        镜像文件提供许多高级磁盘镜像特征，如快照、压缩及加密。它们可以用来代表通过模板镜像创建的虚拟机。
        :::
        ::: para
        因为只有虚拟机写入的扇区部分才会分配在镜像中，所以 qcow2
        文件的网络传输效率较高。
        :::
        ::: para
        Red Hat Enterprise Linux 7.0 及更新版本支持 qcow2 v3
        镜像文件格式。
        :::
    :::
    :::
[LVM 卷]{.term}
:   ::: para
    逻辑卷可用于磁盘镜像，并使用系统的 LVM 工具进行管理。
    由于它使用更简单的块储存模式，LVM 比文件系统的性能更高。
    :::
    ::: para
    LVM 精简配置为 LVM 卷提供快照和高效的空间使用，它可以作为 qcow2
    的一种替代选择。
    :::
[主机设备]{.term}
:   ::: para
    主机设备如物理 CD-ROM、原始磁盘或 LUN 都可以提供给客机。这使得 SAN
    或 iSCSI LUN 还有本地 CD-ROM 都可以提供给客机所用。
    :::
    ::: para
    在 SAN 而不是主机上进行储存管理时，可以使用主机设备。
    :::
[分布式存储系统]{.term}
:   ::: para
    Gluster 卷可用作磁盘镜像。它提供了高效的、使用网络的集群存储。
    :::
    ::: para
    Red Hat Enterprise Linux 7 包括在 GlusterFS
    上对磁盘镜像的原生支援。这使 KVM 主机可以直接从 GlusterFS
    卷引导虚拟机镜像，并使用 GlusterFS
    卷中的镜像作为虚拟机的数据磁盘。与 GlusterFS FUSE 相比，KVM
    原生支持性能更好。
    :::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
关于存储和虚拟化的更多信息，请参照《*Red Hat Enterprise Linux 7
虚拟化部署与管理指南* 》。
:::
:::
:::
:::
:::
:::
[]{#chap-Virtualization_Getting_Started-Tools.html}
::: chapter
::: titlepage
# [⁠]{#chap-Virtualization_Getting_Started-Tools.html#chap-Virtualization_Getting_Started-Tools}第 4 章 虚拟化工具 {.title}
:::
::: para
本章介绍了可以用来帮助实现虚拟化的多个工具。
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Getting_Started-Tools.html#idm139785381201072}4.1. `virsh`{.command} {.title}
:::
::: para
*virsh*
是一个用于监控系统程序和客户机虚拟机器的命令行接口（CLI）工具。`virsh`{.command}
命令行工具建立在 [**libvirt**]{.application} 管理
API，并作为可选择的一个运行方式来替代 `qemu-kvm`{.command}
命令和图形界面的 [**virt-manager**]{.application}
应用。无特权的用户以只读的方式使用 `virsh`{.command}
命令；有根用户权限的用户可以使用该命令的所有功能。`virsh`{.command}
是一个对虚拟环境的管理任务进行脚本化的理想工具。另外，`virsh`{.command}
工具是 `virsh`{.command}
客机域的一个主要管理接口，可以用于创造、暂停和关闭"域"，或罗列现有域。这一工具作为
[libvirt-client]{.package} 软件包中的一部分被安装。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
请参阅《*Red Hat Enterprise Linux 7 虚拟化部署与管理指南*
》来获取更多关于用 `virsh`{.command} 管理虚拟机器的信息。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Getting_Started-Tools.html#sect-Virtualization_Getting_Started-Tools-virt-manager}4.2. `virt-manager`{.command} {.title}
:::
::: para
*virt-manager*
是一个用于管理虚拟机器的简单的图形工具。它所提供的功能用以控制现有机器寿命周期、储备新机器、管理虚拟网络、访问虚拟机器的图形控制台并查看性能数据。这个工具包括在同名的软件包中，称为
[virt-manager]{.package}。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
请参阅《*红帽企业版Linux 7 虚拟化部署与管理指南* 》 来获取更多关于使用
`virt-manager`{.command} 管理虚拟机的信息。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Getting_Started-Tools.html#sect-Virtualization_Getting_Started-Tools-virt-install}4.3. `virt-install`{.command} {.title}
:::
::: para
*virt-install*
是一个用来配置新的虚拟机器的命令行工具。它通过使用连续的控制台、SPICE 或
VNC
客户/服务器成对图形，支持基于文本和图形的安装。安装介质可以是本地的，或已有的远程
NFS、HTTP 或 FTP
服务器。考虑到便捷的自动化安装，还可以通过配置此工具实现在无需人工参与的情况下运行，并在安装完成时快速启动客机。此工具以
[python-virtinst]{.package} 软件包的一部分进行安装。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
请参阅《*Red Hat Enterprise Linux 7 虚拟化管理和管理指南*
》来获取关于使用 `virt-install`{.command} 的更多信息。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Getting_Started-Tools.html#sect-Virtualization_Getting_Started-Tools-guestfish}4.4. `guestfish`{.command} {.title}
:::
::: para
*guestfish* 是一个命令行工具，用来检验和修改客机的文件系统。此工具使用
[libguestfs]{.package}，并显示所有 `guestfs`{.literal} API
所提供的功能。这个工具包括在同名的软件包中，称为 [guestfish]{.package}。
:::
::: {.warning xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**警告**
:::
::: admonition
::: para
在运行中的虚拟机上使用 `guestfish`{.command}
会引起磁盘镜像损坏。若一个正在运行中的虚拟机正在使用磁盘镜像，则需搭配
`--ro`{.option}（只读）共同使用 `guestfish`{.command} 命令。
:::
:::
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
请参阅《*Red Hat Enterprise Linux 7 虚拟化部署和管理指南*
》来获取更多关于 `guestfish`{.command} 的信息。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Getting_Started-Tools.html#sect-Virtualization_Getting_Started-Tools-Boxes}4.5. [**GNOME Boxes**]{.application} {.title}
:::
::: para
*Boxes*
是一个简单的图形桌面虚拟化工具，用来查看和访问虚拟机和远程系统。Boxes
提供了一种方法，即以最小的配置来测试桌面上的不同操作系统和应用。虚拟系统可以手动也可使用快速安装功能，快速安装功能可以通过优化设置来自动预配置虚拟机。这个工具包括在同名的软件包中，被称作
[gnome-boxes]{.package}。
:::
::: {.note xmlns:d="http://docbook.org/ns/docbook"}
::: admonition_header
**注意**
:::
::: admonition
::: para
请参阅《*Red Hat Enterprise Linux 7 虚拟化部署和管理指南*
》来获取更多关于 [**GNOME Boxes**]{.application} 的相关信息。
:::
:::
:::
:::
::: section
::: titlepage
# [⁠]{#chap-Virtualization_Getting_Started-Tools.html#sect-Virtualization_Getting_Started-Tools-Other}4.6. 其他有用工具 {.title}
:::
::: para
使用下列工具通过主机访问虚拟机的磁盘。通过位于主机的
`disk-image`{.filename} 文件可以直接访问客机磁盘。然而有时通过进入
[**libvirt**]{.application} 域也可以实现访问。后续命令属于
[**libvirt**]{.application} 的一部分"域"，并用以访问客机磁盘镜像。
:::
::: variablelist
[`guestmount`{.command}]{.term}
:   ::: para
    一个用于挂载虚拟机文件系统和主机上磁盘镜像的命令行工具。此工具作为
    [libguestfs-tools]{.package} 软件包的一部分进行安装。
    :::