你还可以使用 Recat 来实现 meterial 风格的设计，使你能够开发具有无与伦比的性能的 web 应用。
#### 5. jQuery
[jQuery](http://jquery.com/) 是一个非常流行的 JavaScript 库，它拥有众多特性例如事件处理、动画等。当你在做一个 web 项目的时候，你不会想要把时间浪费在为一些简单的功能写代码上。jQuery 为减少你的工作量提供了一些易于使用的 API 。这些 API 在所有的常见的浏览器中都能够使用。使用 jQuery, 你可以无缝地控制 DOM 以及 Ajax 这样在近几年来拥有大量需求的任务。使用 jQuery，开发者不必担心一些低级的交互，同时可以使他们的 web 应用的开发更加容易与迅速。
jQuery 同时便于分离 HTML 和 JavaScript 代码，使开发者能够编写简洁而跨浏览器兼容的代码。并且使用 jQuery 创建的 web 应用在将来也易于改善和扩展。
#### 6. Ember.js
[Ember.js](http://emberjs.com/) 是一个 Angular.js 和 React.js 的功能混合体。当你在浏览社区的时候你能明显地感受到 Ember.js 的热门程度。Ember.js 的新特性也不断地在添加。它在数据同步方面与 Angular.js 很像。 双向的数据交换可以确保应用的快速性和可扩展性。同时，它还能够帮助开发者创建一些前端元素。
和 React.js 的相似之处在于，Ember.js 提供了同样的服务器端虚拟 DOM 以确保高性能和高可扩展。同时， Ember.js 提倡简化代码，提供了丰富的 API。Ember.js 还有非常优秀的社区。
#### 7. Polymer.js
如果你曾想过创建你自己的 HTML5 元素，那么你可以使用 [Polymer.js](https://www.polymer-project.org/1.0/) 来做这些事。 Polymer 主要集中于通过给 web 开发者提供创建自己的标签的功能来提供扩展功能。例如，你可以创建一个和 HTML5 中的  类似的具有自己的功能的  元素。
Polymer 在 2013 年被 Google 引入并以 [三句版 BSD](https://en.wikipedia.org/wiki/BSD_licenses#3-clause) 协议发布。
#### 8. Three.js
[Three.js](https://threejs.org/) 又是另一个 JavaScript 库，主要用于 3D 效果开发。如果你在做游戏开发的动画效果，那么你可以利用 Three.js 的优势。Three.js 在底层中使用 WebGL 使 Three.js 可以轻松地被用于在屏幕上渲染 3D 物体。举一个比较知名的使用 Three.js 的例子就是 HexGLA，这是一个未来派赛车游戏。
#### 9. PhantomJS
使用 JavaScript 工作就意味着和不同的浏览器打交道，同时，当提及浏览器的时候，就不得不讨论资源管理。在 [PhantomJS](https://phantomjs.org/) 中，由于有 Headless WebKit 的支持，所以你可以随时监测你的 web 应用。Headless WebKit 是 Chrome 和 Safari 使用的渲染引擎中的一部分。
这整个过程是自动化的，你所需要做的只是使用这个 API 来构建你的 web 应用。
#### 10. BabylonJS
[BabylonJS](http://www.babylonjs.com/) 与 Three.js 不相伯仲， 提供了创建平滑而强大的 3D web 应用的 JavaScript API。它是开源的，且基于 JavaScript 和 WebGL 。创建一个简单的 3D 物体，比如一个球体是非常简单的，你只需要写短短几行代码。通过这个库提供的 [文档](https://doc.babylonjs.com/)，你可以很好地掌握它的内容。 同时 BabylonJS 的主页上也提供了一些优秀的 demo 来当作参考。在其官网上你可以找到这些 Demo。
#### 11. Boba.js
Web 应用总是有一个共通的需求，那就是分析。如果你还在苦于将数据的分析与统计插入到 JavaScript 的 web 应用中，那么你可以试一下 [Boba.js](http://boba.space150.com/)。Boba.js 可以帮助你将分析的数据插入到你的 web 应用中并且支持旧的 ga.js 。你甚至可以把数据指标和 Boba.js 集成在一起，只需要依赖 jQuery 即可。
#### 12. Underscore.js
[Underscore.js](http://underscorejs.org/) 解决了 “当我面对一个空白 HTML 页面并希望即刻开始工作，我需要什么” 这个问题。当你刚开始一个项目，你可能会感到失落或者重复一系列你在之前项目中常做的步骤。 为了简化开启一个项目的过程和给你起个头，Underscore.js 这个 JavaScript 库给你提供了一系列的方法。例如，你可以使用你在之前项目中常用的 Backbone.js 中的 suspender 或者 jQuery 的一些方法。
一些实用的帮助例如 “filter” 和 “invoke the map” 可以给你起个好头，以助于你尽可能快的投入到工作中。 Underscore.js 同时还自带了一个套件来简化你的测试工作。
#### 13. Meteor.js
[Meteor.js](https://www.meteor.com/) 是一个快速构建 JavaScript 应用的框架。它是开源的且它能够用于构建桌面应用、移动应用和 web 应用。Meteor.js 是一个全栈的框架同时允许多平台的端到端开发。 你可以使用 Meteor.js 来实现前端和后端功能，同时它也能密切监视应用的性能。Meteor.js 的社区非常庞大，所以它会有不断的新特性更新或者是 bug 修复。Meteor.js 也是模块化的，同时它能配合一些其它的优秀的 API 使用。
#### 14. Knockout.js
[Knockout.js](http://knockoutjs.com/) 在这些库中可能是最被低估的一个。它是一个基于 MIT 开源协议的开源 JavaScript 框架。作者是 [Steve Sanderson](http://blog.stevensanderson.com/)。它基于 MVVM 模式。
#### 值得注意的是: Node.js
[Node.js](https://nodejs.org/en/) 是一个强有力的 JavaScript 运行时环境。它可以被用于使用真实世界数据来构建快速且可扩展的应用。它既不是一个框架也不是一个库，而是一个基于 Google Chrome 的 V8 引擎的运行时环境。你可以用 Node.js 来创建多元化的 JavaScript 应用，包括单页应用、即时 web 应用等等。从技术层面上来讲，由于它的事件驱动式架构，所以 Node.js 支持异步 I/O 。这种做法使得它成为开发高可扩展应用的一个极好的解决方案的选择。查看 [Node.js](https://www.livecoding.tv/learn/node-js/)在 livecoding.tv 上的视频。
### 总结
JavaScript 是 web 开发中的通用语言。它之所以快速发展不仅仅是因为它所提供的内容，更多的是因为它的庞大的开源社区的支持。以上提到的框架和库对任何一个 JavaScript 开发者来说都是必须知道的。它们都提供了一些途径来探索 JavaScript 和前端开发。上面提及的大部分框架和库频繁地在 Livecoding.tv 上出现，其大部分来自对 JavaScript 及其相关技术感兴趣的软件工程师。
---
via: 
作者：[Dr. Michael J. Garbade](https://opensource.com/users/drmjg) 译者：[chenxinlong](https://github.com/chenxinlong) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出