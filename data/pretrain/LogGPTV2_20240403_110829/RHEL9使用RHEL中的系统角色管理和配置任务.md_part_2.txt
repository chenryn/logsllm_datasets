::: footnotes
\
------------------------------------------------------------------------
::: {#getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#ftn.idm140269784344000 .footnote}
[^\[1\]^](#getting-started-with-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#idm140269784344000){.simpara}
本文档会使用 `rhel-system-roles`{.literal} 软件包自动安装。
:::
:::
:::
[]{#installing-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#installing-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#installing-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 2 章 安装 RHEL 系统角色 {.title}
:::
在开始使用系统角色前，您必须在您的系统中安装它。
::: section
::: titlepage
# []{#installing-rhel-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#installing-rhel-system-roles-in-your-system_installing-rhel-system-roles}在系统中安装 RHEL 系统角色 {.title}
:::
要使用 RHEL 系统角色，请在系统中安装所需的软件包。
::: itemizedlist
**先决条件**
-   您已在系统中安装了 Ansible 软件包，以用作控制节点：
:::
::: orderedlist
**流程**
1.  在您要用作控制节点的系统上安装 `rhel-system-roles`{.literal}
    软件包：
    ``` screen
    # dnf install rhel-system-roles
    ```
2.  安装 Ansible Core 软件包：
    ``` screen
    # dnf install ansible-core
    ```
:::
Ansible Core 软件包提供了 `ansible-playbook`{.literal} CLI、Ansible
Vault 功能以及 RHEL Ansible 内容所需的基本模块和过滤器。
因此，您可以创建一个 Ansible playbook。
::: itemizedlist
**其他资源**
-   [Red Hat Enterprise
    Linux(RHEL)系统角色](https://access.redhat.com/articles/3050101){.link}
-   `ansible-playbook`{.literal} 手册页。
:::
:::
:::
[]{#installing-and-using-collections_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#installing-and-using-collections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#installing-and-using-collections_administration-and-configuration-tasks-using-system-roles-in-rhel}第 3 章 安装和使用 Collections {.title}
:::
::: section
::: titlepage
# []{#installing-and-using-collections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#introduction-to-ansible-collections_installing-and-using-collections}Ansible Collections 简介 {.title}
:::
Ansible Collections
是一种发布、维护和使用自动化的新方法。通过组合多种类型的 Ansible
内容，如
playbook、角色、模块和插件，您可以从灵活性和可扩展性的改进中受益。
Ansible Collections 是传统 RHEL 系统角色格式的选项。使用 Ansible
Collection 格式的 RHEL 系统角色与在传统 RHEL
系统角色格式中使用它几乎相同。区别是 Ansible Collections 使用
`完全限定集合名称`{.literal} (FQCN)的概念，其由 `名字空间`{.literal} 和
`集合名称`{.literal} 组成。我们使用的 `名字空间`{.literal} 是
`redhat`{.literal}，`集合名称`{.literal} 是
`rhel_system_roles`{.literal}。因此，虽然 Kernel Settings 角色的传统
RHEL 系统角色格式显示为
`rhel-system-roles.kernel_settings`{.literal}，而使用 Kernel Settings
角色的 Collection `完全限定集合名称`{.literal} 将显示为
`redhat.rhel_system_roles.kernel_settings`{.literal}。
`名字空间`{.literal} 和 `集合名称`{.literal}
的组合确保对象是唯一的。它也确保对象在 Ansible Collections
和名字空间之间共享，且没有任何冲突。
::: itemizedlist
**其他资源**
-   要通过访问 [Automation
    Hub](https://console.redhat.com/ansible/automation-hub/repo/published/redhat/rhel_system_roles/docs){.link}
    来使用红帽认证的集合，您必须有一个 Ansible Automation Platform（AAP
    订阅）。
:::
:::
::: section
::: titlepage
# []{#installing-and-using-collections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#collections-structure_installing-and-using-collections}Collections 结构 {.title}
:::
Collections 是 Ansible 内容的软件包格式。数据结构如下：
::: itemizedlist
-   docs/：集合的本地文档，以及示例（如果角色提供了文档）
-   galaxy.yml：将成为 Ansible Collection 软件包一部分的 MANIFEST.json
    的源数据
-   playbooks/: playbook 位于此处
    ::: itemizedlist
    -   tasks/：包含用于 include_tasks/import_tasks 的\"任务列表文件\"
    :::
-   plugins/：此处提供所有 Ansible 插件和模块，各自位于其子目录中
    ::: itemizedlist
    -   modules/:Ansible 模块
    -   modules_utils/：用于开发模块的通用代码
    -   lookup/：搜索插件
    -   filter/：Jinja2 过滤器插件
    -   connection/：所需的连接插件（如果不使用默认的）
    :::
-   roles/：Ansible 角色的目录
-   test/：对集合的内容进行测试
:::
:::
::: section
::: titlepage
# []{#installing-and-using-collections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#installing-collections_installing-and-using-collections}使用 CLI 安装 Collections {.title}
:::
集合是 Ansible 内容的分发格式，可包含 playbook、角色、模块和插件。
您可以通过 Ansible Galaxy、浏览器或使用命令行来安装 Collections。
::: itemizedlist
**先决条件**
-   列出受管节点的清单文件已存在。
:::
::: itemizedlist
**流程**
-   通过 RPM 软件包安装集合：
    ``` screen
    # dnf install rhel-system-roles
    ```
:::
安装完成后，角色作为 `redhat.rhel_system_roles.`{.literal}
提供。另外，您可以在
`/usr/share/ansible/collections/ansible_collections/redhat/rhel_system_roles/roles//README.md`{.literal}
找到每个角色的文档。
::: title
**验证步骤**
:::
要验证 Collections 是否已成功安装，您可以在 localhost 上应用
kernel_settings：
::: orderedlist
1.  将一个 `tests_default.yml`{.literal} 复制到您的工作目录中。
    ``` screen
    $ cp /usr/share/ansible/collections/ansible_collections/redhat/rhel_system_roles/tests/kernel_settings/tests_default.yml .
    ```
2.  编辑文件，将\"hosts: all\"替换为\"hosts: localhost\"，使 playbook
    仅在本地系统上运行。
3.  在检查模式下运行 ansible-playbook。这不会更改系统上的任何设置。
    ``` screen
    $ ansible-playbook --check tests_default.yml
    ```
:::
该命令返回值 `failed=0`{.literal}。
::: itemizedlist
**其他资源**
-   `ansible-playbook`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#installing-and-using-collections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#installing-collections-from-automation-hub_installing-and-using-collections}从 Automation Hub 安装 Collections {.title}
:::
如果使用 Automation Hub，您可以安装托管在 Automation Hub 上的 RHEL
系统角色集合。
::: itemizedlist
**先决条件**
-   Red Hat Ansible Automation Platform 订阅.
-   `python3-jmespath`{.literal} 软件包已安装 。
-   列出受管节点的清单文件已存在。
:::
::: orderedlist
**流程**
1.  定义 Red Hat Automation Hub 作为 `ansible.cfg`{.literal}
    配置文件中内容的默认源。请参阅 [将 Red Hat Automation Hub
    配置为内容的主源](https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/1.2/html/getting_started_with_red_hat_ansible_automation_hub/proc-configure-automation-hub-server){.link}。
2.  从 Automation Hub 安装 `redhat.rhel_system_roles`{.literal} 集合：
    ``` screen
    # ansible-galaxy collection install redhat.rhel_system_roles
    ```
    安装完成后，角色作为
    `redhat.rhel_system_roles.`{.literal}
    提供。另外，您可以在
    `/usr/share/ansible/collections/ansible_collections/redhat/rhel_system_roles/roles//README.md`{.literal}
    找到每个角色的文档。
:::
::: title
**验证步骤**
:::
要验证 Collections 是否已成功安装，您可以在 localhost 上应用
`kernel_settings`{.literal} ：
::: orderedlist
1.  将一个 `tests_default.yml`{.literal} 复制到您的工作目录中。
    ``` screen
    $ cp /usr/share/ansible/collections/ansible_collections/redhat/rhel_system_roles/tests/kernel_settings/tests_default.yml .
    ```
2.  编辑文件，将\"hosts: all\"替换为\"hosts: localhost\"，使 playbook
    仅在本地系统上运行。
3.  在检查模式下运行 ansible-playbook。这不会更改系统上的任何设置。
    ``` screen
    $ ansible-playbook --check tests_default.yml
    ```
    您可以看到命令返回值 `failed=0`{.literal}。
:::
::: itemizedlist
**其他资源**
-   `ansible-playbook`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#installing-and-using-collections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#deploying-the-tlog-rhel-system-role-using-collections_installing-and-using-collections}使用集合部署 Terminal Session Recording RHEL 系统角色 {.title}
:::
以下是一个使用 Collections 的示例，准备和应用
playbook，以便在一组单独计算机上部署日志解决方案。
::: itemizedlist
**先决条件**
-   Galaxy 集合已安装。
:::
::: orderedlist
**流程**
1.  使用以下内容创建一个新的 `playbook.yml`{.literal} 文件：
    ``` screen
    ---
    - name: Deploy session recording
      hosts: all
      vars:
        tlog_scope_sssd: some
        tlog_users_sssd:
          - recordeduser
      roles:
        - redhat.rhel-system-roles.tlog
    ```
    其中,
    ::: itemizedlist
    -   `tlog_scope_sssd`{.literal}:
        ::: itemizedlist
        -   `some`{.literal} 指定您只记录某些用户和组，而不是
            `all`{.literal} 或 `none`{.literal}。
        :::
    -   `tlog_users_sssd`{.literal}:
        ::: itemizedlist
        -   `recorduser`{.literal}
            指定您要记录其会话的用户。请注意，这不会为您添加用户。您必须自行设置该用户。
        :::
    :::
2.  另外，还可以验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i IP_Address /path/to/file/playbook.yml -v
    ```
:::