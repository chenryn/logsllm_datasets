**作者：Hcamael & 0x7F@知道创宇404实验室  
时间：2018年12月4日**

### 前言
近日，互联网上爆发了一种名为 Lucky 的勒索病毒。该病毒会加密指定文件并将其后缀名修改为 `.lucky`。知道创宇404实验室的炼妖壶蜜罐系统最早于2018年11月10日捕捉到该勒索病毒的相关流量。截至2018年12月4日，该病毒的CNC服务器仍然活跃。

分析结果显示，Lucky 勒索病毒与 Satan 勒索病毒非常相似，整体结构几乎没有变化，包括CNC服务器也没有更改。Satan 病毒最初通过勒索获利，后来演变为通过挖矿获利。而新的 Lucky 勒索病毒结合了勒索和挖矿功能。

在了解该勒索病毒的相关细节后，知道创宇404实验室迅速跟进并进行了详细分析，重点研究了其加密模块。通过利用伪随机数的特性，我们成功还原了加密密钥，并开发了一个 Python 解密脚本（链接：[解密脚本](#)）。

本文将对 Lucky 勒索病毒进行概要分析，重点介绍其加密流程及密钥还原过程。

### Lucky 病毒简介
Lucky 勒索病毒可在 Windows 和 Linux 平台上运行，主要功能包括“文件加密”、“传播感染”和“挖矿”。

#### 文件加密
Lucky 勒索病毒会遍历文件夹，对以下后缀名的文件进行加密，并将后缀名改为 `.lucky`：
- bak, sql, mdf, ldf, myd, myi, dmp, xls, xlsx, docx, pptx, eps, txt, ppt, csv, rtf, pdf, db, vdi, vmdk, vmx, pem, pfx, cer, psd

为了确保系统的正常运行，病毒在加密时会跳过一些关键目录，如：
- **Windows**: windows, microsoft games, 360rec, windows mail 等
- **Linux**: /bin/, /boot/, /lib/, /usr/bin/ 等

#### 传播感染
Lucky 勒索病毒的传播模块没有引入新的技术，而是继续使用以下漏洞进行传播：
1. JBoss 反序列化漏洞 (CVE-2013-4810)
2. JBoss 默认配置漏洞 (CVE-2010-0738)
3. Tomcat 任意文件上传漏洞 (CVE-2017-12615)
4. Tomcat Web 管理后台弱口令爆破
5. Weblogic WLS 组件漏洞 (CVE-2017-10271)
6. Windows SMB 远程代码执行漏洞 (MS17-010)
7. Apache Struts2 远程代码执行漏洞 (S2-045)
8. Apache Struts2 远程代码执行漏洞 (S2-057)

#### 挖矿
该勒索病毒使用自建矿池地址 `194.88.105.5:443` 来获取额外收益。这个矿池地址也是 Satan 勒索病毒变种使用的矿池地址。

#### 运行截图
![运行截图](https://images.seebug.org/content/images/2018/12/1eb83b2a-f188-4de1-9097-3f37f88e454a.png-w331s)

### 病毒流程图
Lucky 勒索病毒的整体结构延续了 Satan 勒索病毒的结构，包含以下组件：
- **预装载器**：fast.exe/ft32，用于加载加密模块和传播模块
- **加密模块**：cpt.exe/cry32，负责文件加密
- **传播模块**：conn.exe/conn32，利用多个应用程序漏洞进行传播感染
- **挖矿模块**：mn32.exe/mn32，连接自建矿池地址
- **服务模块**：srv.exe，在 Windows 下创建服务以稳定执行

流程图如下：
![病毒流程图](https://images.seebug.org/content/images/2018/12/cf5d2f31-03af-4bee-a587-8c348265d4dc.png-w331s)

Lucky 勒索病毒的每个模块都使用了常见的壳进行保护，例如 UPX 和 MPRESS。使用常见的脱壳工具即可完成脱壳。

### 加密流程
对于勒索病毒来说，最重要的部分是其加密模块。在 Lucky 勒索病毒中，加密模块是一个单独的可执行文件。以下是对加密模块的详细分析（以 Windows 下的 `cpt.exe` 为例）。

#### 1. 脱去 UPX
`cpt.exe` 使用 UPX 进行加壳，使用常见的脱壳工具即可完成脱壳。

#### 2. 加密主函数
使用 IDA 加载脱壳后的 `cpt.exe.unp`，在主函数中有大量初始化操作。忽略这些操作，可以找到加密逻辑的主函数，标注如下：
- `generate_key`: 生成 60 位随机字符串，用于后续加密文件。
- `wait_sleep`: 等待一段时间。
- `generate_session`: 生成 16 位随机字符串，作为用户的标志 (session)。
- `lucky_crypto_entry`: 具体加密文件的函数。
- `send_info_to_server`: 向服务器报告加密完成。

大致的加密流程如上述函数标注所示。最后，会在 `c:\\_How_To_Decrypt_My_File_.Dic` 文件中写入通知信息，告知用户遭到了勒索软件加密，并留下比特币地址。

#### 3. generate_key()
该函数是加密密钥生成函数，利用随机数从预设的字符串序列中随机选出字符，组成一个长度为 60 字节的密钥。
`byte_56F840` 为预设的字符串序列，其值为：
```
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
```

#### 4. generate_session()
该函数为每个用户生成一个标识，用于区分用户。它仍然使用随机数从预设的字符串序列中随机选出字符，最后组成一个长度为 16 字节的 session，并存入 `C:\\Windows\\Temp\\Ssession` 文件下。
`byte_56F800` 字符串为：
```
ABCDEFGHIJKLMNOPQRSTUVWdefghijklmnopqrstuvwx3456789
```

#### 5. lucky_crypto_entry()
##### 文件名格式
该函数为加密文件的函数入口，提前拼接加密文件的文件名格式，如下：
```
[PI:EMAIL]filename.AiVjdtlUjI9m45f6.lucky
```
其中 `filename` 是文件本身的名字，后续的字符串是用户的 session。

##### 通知服务器
在加密前，还会向服务器发送 HTTP 消息，通知服务器该用户开始执行加密。

通过以上分析，我们可以更好地理解 Lucky 勒索病毒的工作机制，并采取相应的防御措施。