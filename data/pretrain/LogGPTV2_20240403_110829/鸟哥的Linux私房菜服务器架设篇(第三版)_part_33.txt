### 使用 `links` 进行网页数据获取

命令如下：
```bash
[root@www ~]# links -dump http://some.site.name/web.php?name=user&password=pw > testfile
```

上述命令中，网址后面使用问号 (`?`) 分隔符来传递参数。这些参数通过 HTTP 的 `GET` 方法发送到服务器。这种方式非常方便，可以直接访问特定的网页内容，并将结果输出到 `testfile` 文件中。

然而，如果网站主要使用 `POST` 方法来处理数据，则此方法可能不适用。`GET` 和 `POST` 是 HTTP 协议中的两种常用方法，用于将数据从客户端传输到服务器。一般来说，讨论区和博客等应用通常采用支持更多数据传输的 `POST` 方法。关于 `GET` 和 `POST` 的更多信息将在第二十章“WWW 服务器”中详细介绍。

### 使用 `wget` 下载网页数据

与 `links` 主要用于浏览网页不同，`wget` 专门用于下载网页数据。例如，Linux 内核可以从 `www.kernel.org` 下载，该网站同时提供 FTP 和 HTTP 方式。我们可以使用 `lftp` 来下载文件，但若想通过浏览器方式下载，则可以使用 `wget`。

#### 命令格式
```bash
[root@www ~]# wget [选项] [网址]
```

#### 选项与参数
- `--http-user=用户名`：指定 HTTP 用户名。
- `--http-password=密码`：指定 HTTP 密码。
- `--quiet`：静默模式，不显示下载过程中的信息。

更多选项请参考 `man wget`。

#### 示例
下载 Linux 内核 2.6.39 版本：
```bash
[root@www ~]# wget http://www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.39.tar.bz2
```
输出示例：
```
--2011-07-18 16:58:26--
http://www.kernel.org/pub/linux/kernel/v2.6/..
Resolving www.kernel.org... 130.239.17.5, 149.20.4.69, 149.20.20.133, ...
Connecting to www.kernel.org|130.239.17.5|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 76096559 (73M) [application/x-bzip2]
Saving to: `linux-2.6.39.tar.bz2'
88% [================================> ] 67,520,536 1.85M/s eta 7s
```

`wget` 不仅快速方便，还可以通过代理服务器下载文件。可以通过编辑 `/etc/wgetrc` 文件来设置代理服务器：
```bash
[root@www ~]# vim /etc/wgetrc
#http_proxy = http://proxy.yoyodyne.com:18023/
```

### 使用 `tcpdump` 捕获网络流量

`tcpdump` 是一个强大的网络抓包工具，可以捕获并分析网络流量。以下是一个简单的例子，捕获端口 21 的流量：

```bash
[root@www ~]# tcpdump -i eth0 -nn port 21
```

输出示例：
```
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on eth0, link-type EN10MB (Ethernet), capture size 96 bytes
01:54:37.96 IP 192.168.1.101.1240 > 192.168.1.100.21: . ack 1 win 65535
01:54:37.96 IP 192.168.1.100.21 > 192.168.1.101.1240: P 1:21(20) ack 1 win 5840
01:54:38.12 IP 192.168.1.101.1240 > 192.168.1.100.21: . ack 21 win 65515
01:54:42.79 IP 192.168.1.101.1240 > 192.168.1.100.21: P 1:17(16) ack 21 win 65515
01:54:42.79 IP 192.168.1.100.21 > 192.168.1.101.1240: . ack 17 win 5840
01:54:42.79 IP 192.168.1.100.21 > 192.168.1.101.1240: P 21:55(34) ack 17 win 5840
```

通过这种方式，可以只捕获特定端口的流量，便于分析。例如，可以在一个终端窗口运行 `tcpdump -i lo -nn`，在另一个终端窗口登录 `ssh localhost`，观察本地回环接口上的流量：

```bash
[root@www ~]# tcpdump -i lo -nn
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on lo, link-type EN10MB (Ethernet), capture size 96 bytes
11:02:54.253777 IP 127.0.0.1.32936 > 127.0.0.1.22: S 933696132:933696132(0) win 32767 
11:02:54.253831 IP 127.0.0.1.22 > 127.0.0.1.32936: S 920046702:920046702(0) ack 933696133 win 32767 
11:02:54.253871 IP 127.0.0.1.32936 > 127.0.0.1.22: . ack 1 win 8192
11:02:54.272124 IP 127.0.0.1.22 > 127.0.0.1.32936: P 1:23(22) ack 1 win 8192
11:02:54.272375 IP 127.0.0.1.32936 > 127.0.0.1.22: . ack 23 win 8192
```

通过分析这些流量，可以更好地理解网络通信的过程。