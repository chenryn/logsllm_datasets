User: I have a long-running process running a simulation using python's multiprocessing. At the end, the process sends the results through a pipe back to the main process.
The problem is that, I had redefined the class for the results object, so I knew it would give me an unpickling error. In an attempt to head this off, I got the file descriptor of the pipe and tried to open it with os.fdopen. Unfortunately, I got a "bad file descriptor" error, and now I get the same if I try to receive from the pipe.
Because this is a very long simulation, I don't want to kill the process and start over. Is there any way to get the object out of the pipe OR just access the namespace of the child process so that I can save it to disk?
Thanks so much.
Assistant: A few suggestions for transferring unpicklable raw data back from multiprocessing workers:
1) have each worker write to a database or file (or print to the console)
2) translate the raw data into a string, to return to the parent. If the parent is just logging things then this is the easiest.
3) translate to JSON, to return to the parent. This solution is best if the parent is aggregating data, not just logging it.