This does not work (note the usage of localhost two times; I am running
Vagrant (ssh port 2222) and within the vagrant box I am running a Docker
container (ssh port 29007); this container has not been started yet ):
    [hostvessels]
    localhost ansible_ssh_user=core ansible_ssh_port=2222 ansible_ssh_private_key_file=/home/thijsterlouw/.vagrant.d/insecure_private_key
    [containers]
    localhost ansible_ssh_user=root ansible_ssh_port=29007 ansible_ssh_pass=password
error:
    TASK: [ensure container path for docker.sh] *********************************** 
    fatal: [localhost] => Authentication failure.
But this does work (note I renamed the first host):
    [hostvessels]
    coreos.vagrant ansible_ssh_user=core ansible_ssh_port=2222 ansible_ssh_private_key_file=/home/thijsterlouw/.vagrant.d/insecure_private_key
    [containers]
    localhost ansible_ssh_user=root ansible_ssh_port=29007 ansible_ssh_pass=password
Where coreos.vagrant is mapped in /etc/hosts to 127.0.0.1
I am running this with
    ansible-playbook -i generated/servers.ini static/site.yml --tags="predeploy,deploy"
The container inside the Vagrant box is not yet running, but this should be
ignored because I am only performing tasks that hit the hostvessels.
Why does Ansible think the host is down, even though the appropriate ssh port
is perfectly available. Looks like a bug to me.
    ansible --version
    ansible 1.4