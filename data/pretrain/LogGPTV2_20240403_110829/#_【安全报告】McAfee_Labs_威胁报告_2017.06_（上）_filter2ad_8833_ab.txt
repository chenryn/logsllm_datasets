### 规避工具销售的黑市

#### 低价规避工具的销售
图 3：规避工具有时以低价出售。一些卖家通过互联网购买或盗取多个 crypters 和 packers，然后打包出售。

#### 自主开发的规避工具
图 4：其他卖家则自行开发规避工具，并保留源代码以防止分析和检测。这些工具由于其独特性（据推测无法被他人分销）而价格较高。

#### 提供 FUD 文件生成服务
图 5：有些卖家提供生成 FUD（Fully Undetectable）文件的服务。这些服务可能因使用高级代码混淆、高度混淆处理或其他自定义加密技术而收费较高。

#### 使用证书绕过安全机制
图 6：另一种方法是购买数字证书来签署恶意软件，从而绕过操作系统的安全机制。

我们发现，在价格和服务方面已经发生了显著变化。与那些只能提供易于被反恶意软件产品检测到的编译工具相比，某些服务要昂贵得多。

### 被有组织的犯罪分子和安全公司利用的规避技术

黑客组织也对规避技术表现出浓厚兴趣。2015年，Hacking Team 泄露了一些用于感染和监视系统的技术。他们开发了强大的 UEFI/BIOS rootkit，能够在不被检测的情况下进行传播。此外，Hacking Team 还开发了自己的 FUD 工具 core-packer。

提供渗透测试服务的安全公司也了解并使用这些技术，以便渗透测试人员能够模拟真实的黑客攻击。Metasploit 套件、Veil-Evasion 和 Shellter 等工具允许渗透测试人员保护他们的“恶意”二进制文件。安全研究人员在攻击者之前发现这些技术，以增强防御能力。例如，最近的威胁 “DoubleAgent” 就触发了反恶意软件解决方案。

### 规避技术的应用

在过去一年中，我们分析了许多具有规避能力的恶意软件样本。在典型的攻击中，攻击者会在多个阶段使用规避技术。下图展示了在典型攻击序列中使用的规避技术。

#### Dridex 银行木马
Dridex（也称为 Cridex）是一种知名的银行木马，首次出现在 2014 年。这种恶意软件通过包含恶意宏的 Word 文件以电子邮件附件的形式传播，窃取银行凭据。自 2014 年以来，已发生多起 Dridex 事件，每次成功后，其规避技术都会得到增强。

Dridex 深度依赖于病毒载体的免杀技术。我们分析了几个样本。
- **图 7**：可以看到函数名称和数据的混淆。这种混淆很微妙，因为它使用 ASCII 数字。（哈希：610663e98210bb83f0558a4c904a2f5e）
- **图 8**：这个样本使用字符串规避和内容混淆技术，通过 PowerShell 绕过策略执行，并在 maxmind.com 上检查 IP 地址是否被列入反病毒软件供应商的黑名单。（哈希：e7a35bd8b5ea4a67ae72decba1f75e83）

另一个样本中，Dridex 的感染载体试图通过检查注册表键值 “HKLM SYSTEMControlSet001ServicesDiskEnum” 来检测虚拟环境或沙箱中的字符串 “VMWARE” 或 “VBOX”。如果检测到虚拟机或沙箱，Dridex 会停止运行，伪装成无害的程序，或尝试导致系统崩溃。

规避技术广泛应用于感染载体，以避免检测和分析师识别。在攻击的多个阶段，Dridex 通过结合多种技术来避免检测和分析。
- **图 9**：在这个例子中，Dridex 使用进程挖空技术，将恶意代码注入挂起的进程中。然后，一个新的进程调用 rundll32.exe，将恶意 DLL 加载到 explorer.exe 中。

最近的 Dridex 样本使用了新的规避技术 “AtomBombing”。这种技术利用操作系统提供的 Atom 表，允许应用程序存储和访问数据。Atom 表也可用于应用程序之间共享数据。攻击者将恶意代码注入 Atom 表，并强制合法应用程序执行该代码。由于传统的注入技术容易被发现，攻击者现在转向了新的技术。

最后，Dridex 的最终载荷通常使用混淆和加密来保护数据，如控制服务器的 URL、僵尸网络信息和恶意二进制代码中包含的 PC 名称。

#### Locky 勒索软件
Locky 是 2016 年新出现的一种勒索软件，使用多种方法感染系统。其一些规避技术与 Dridex 类似。
- **图 10**：Locky 的感染载体使用统一编码和随机字符串函数的基本混淆处理。（哈希：2c01d031623aada362d9cc9c7573b6ab）

在前面的例子中，抗混淆几乎不起作用，因为 Unicode 编码很容易被反解。此代码段中的每个 Unicode 字符都对应一个 ASCII 字符。
- **图 11—12**：在这个抗混淆的感染载体中，代码从外部 URL 下载 EXE 文件到 TEMP 文件夹中。

其他 Locky 样本在多个阶段使用 XOR 加密，以规避检测并绕过邮件过滤和 Web 网关。一些 Locky 变种还使用 Nullsoft Scriptable Install System (NSIS) 压缩文件。NSIS 文件可以直接解压缩以获取其内容。
- **图 13**：在此 Locky 样本中，可以看到许多旨在浪费分析时间的垃圾文件。所有这些文件由 NSIS 程序压缩，其中只有一些用于在目标系统上执行恶意操作。（哈希：5bcbbb492cc2db1628985a5ca6d09613）

除了混淆可执行格式外，Locky 还使用技巧绕过防火墙和控制服务器的网络。一些 Locky 变种使用域生成算法 (DGA)，这是一种允许动态创建域的技术。Locky 作者在每次攻击活动中都会更新其规避技术。
- **图 14**：2016 年 8 月，Locky 开始使用命令行参数来规避自动化的沙盒分析。如果没有正确的命令行参数，样本将不会运行且载荷也不会被解码到内存中。（哈希：0fed77b29961c0207bb4b7b033ca3fd4）

此样本的参数用于解密和解压载荷到内存中。如果参数不正确，样本将在尝试运行加密代码时崩溃。

Locky 和其他恶意软件还使用读取时间戳计数器 (RDTSC) 的 x86 指令来检测虚拟环境。时间戳计数器记录处理器周期的数量。在物理主机上，两个连续的 RDTSC 指令占用少量周期；而在虚拟主机上，周期数量会增加。如果返回值不是预期值，样本会进入休眠状态。
- **图 15**：Windows API 调用 GetProcessHeap 和 CloseHandle 用于增加处理器周期。Locky 比较这些值，如果 CloseHandle 的周期比 GetProcessHeap 多 10 倍，恶意软件则认为自己运行在虚拟机中。（哈希：0bf7315a2378d6b051568b59a7a0195a）

#### Nymain 下载者
Nymain 提供木马或勒索类型的恶意软件，使用多种规避机制以避免分析和检测。它结合了混淆处理、沙箱检测和活动计时器等多种反逆向工程技术。
- **图 16**：Nymain 使用的元数据。（哈希：98bdab0e8f581a3937b538d73c96480d）
- **图 17**：Nymain 使用反调试技巧来规避动态分析。

最常见且最容易绕过的函数是 IsDebuggerPresent。代码调用 Windows API 并在寄存器中设置一个值。如果该值不为零，则表示程序正在被调试。在这种情况下，恶意软件将使用 TerminateProcess API 终止进程。另一种绕过调试器的技巧是 FindWindow。如果检测到与调试器相关的窗口（如 OllyDbg 或 Immunity Debugger），恶意软件会关闭自身。

Nymain 还执行以下额外检查以规避分析：
- 检查日期并在攻击结束后不再执行。
- 检查系统上是否有恶意软件文件名的哈希值。如果有，则分析可能正在进行中。
- 检查与虚拟环境相关的 MAC 地址。
- 检查注册表项 HKLM\HARDWARE\Description\System\BiosVersion 的键值，查找字符串 "VBOX"。