处理器内核，每个内核有自己的寄存器和高速缓存。因此随着多核技术
的普及，越来越多的PC系统将是多CPU的。目前的前端总线设计是每个
总线上最多有4个CPU，如果要支持更多的CPU，那么可以通过Cluster
Bridge将多个前端总线连接在一起。
图2-15 经典PC系统示意图
MCH上除了有内存接口外，通常还有显示卡接口，比如图形加速
端口（Accelerated Graphics Port，AGP）或PCI Express 16ｘ接口。MCH
的下面是输入输出控制器（I/O Controller Hub，ICH）。ICH集成了用于
和外部设备进行通信的各种接口，如连接USB设备的USB接口（USB1.1
和USB2.0）、连接普通硬盘的IDE接口（即PATA接口）、连接SATA硬
盘的SATA（Serial ATA）接口、连接BIOS芯片的SPI（Serial Peripheral
Interface）接口，等等。此外，ICH还提供了对一些通用总线的支持，
比如I2C（Inter-Integrated Circuit）总线、LPC（Low Pin Count）总线和
PCI（Peripheral Component Interconnect）总线等。例如，通过LPC总线
与ICH相连接的Super IO芯片（比如LPC47m172）上集结了很多小数据
量的外部设备，包括串口、并口、PS/2 键盘鼠标和各种LED指示灯等。
ICH内部通常还包含集成的网卡和声卡（AC’97或HD Audio，HD是High
Definition的缩写）。
MCH和ICH就好像两座桥梁，它们将整个系统联系起来。因此人们
通常又把它们分别称为北桥和南桥。北桥和南桥是计算机主板上最重要
的芯片，经常统称为芯片组（chipset）。MCH和ICH之间是通过专用的
称为直接媒体接口（Direct Media Interface，DMI）的高速接口相连接
的。
最近几年，PC系统的芯片架构有所变化，MCH芯片消失，它的内
存管理器和集成显卡部分向上被集成到CPU芯片中，总线控制器和其他
部分向下与ICH合成在一起，称为PCH（Platform Controller Hub）。总
体来看，由原来的“CPU + MCH + ICH”的三芯片架构演变为“CPU +
PCH”的双芯片架构。
2.9 ARM架构基础
与大多数PC系统里都有一颗英特尔架构的处理器类似，大多数智
能手机、平板电脑等移动设备中使用的都是ARM架构的处理器。本节
将简要介绍ARM架构的基本概念和关键特征，本篇后续章节将介绍
ARM架构的调试支持。
2.9.1 ARM的多重含义
可能是因为ARM公司的人太喜欢A、R、M这3个字母了，他们总是
一有机会就使用这3个字母，不断赋予其更多含义。
ARM缩写的最初含义是Acorn RISC Machine，代表英国Acron计算
机公司的RISC芯片项目。该项目于1983年开始，于1985年4月在
VLSI（总部在硅谷的半导体公司）流片并通过测试，于1986年开始应
用于个人电脑、PDA等领域。
1990年，苹果公司、VLSI准备和Acorn一起合作研发ARM CPU，大
家一致认为应该成立一家新的公司，于是在1990年11月成立了名为
Advanced RISC Machines Ltd.的公司。于是，ARM缩写的含义改变为
Advanced RISC Machines。1998年，这家公司改名为ARM Holdings，即
今天使用的名字。
A、R、M这 3 个字母在ARM架构中的另一种重要含义是代表ARM
架构的A、R、M三大系列（Profile）。
A系列的全称是Application profile，面向比较复杂的通用应用，支
持分页模式和复杂的虚拟内存管理，即所谓的基于MMU（Memory
Management Unit）的虚拟内存系统架构（Virtual Memory System
Architecture，VMSA），手机中使用的ARM芯片大多是这一系列的芯
片，本书中讨论的主要是这一系列。R系列的全称是Real-time profile，
主要用于高实时性要求的各种传统嵌入式设备，支持基于MPU的保护内
存系统架构（Protected Memory System Architecture，PMSA）。M系列
的全称是Microcontroller profile，用于功能单一的深度嵌入式设备。
ARM架构的每个版本一般都会包含以上3个系列的设计，文档也是按这
3个系列分类的，比如ARMv8-A代表ARM版本8的A系列。
ARM缩写的另一种重要含义是代表架构参考手册（Architecture
Reference Manual）。ARM的作用类似于英特尔架构的SDM（Software
Developer’s Manual），是学习和使用ARM架构处理器最重要的资料。
值得说明的是，与英特尔公司不同，ARM公司没有芯片工厂，并不直
接生产和销售芯片，它的主要商业模式是把ARM架构授权给高通、三
星、华为等公司，收取授权费。这种授权模式决定了ARM手册（本书
在文档含义的ARM缩写后加“手册”二字以便阅读）只是关于ARM架构
的通用特征和参考，定义了所有ARM架构处理器应该兼容的外部特
征，不是内部实现。这里的外部特征是指对编程者可见的特征。用
ARM手册上的话来说，ARM手册定义了一个“抽象机器”的行为
（defines the behavior of an abstract machine），这个抽象机器称为处理
器单元（Processing Element，PE）。ARM手册还描述了编程者应该遵
循的规则。
以上介绍了“ARM”的几种不同含义，了解这些基本知识对于阅读
ARM文档是很重要的，不然就可能被下面这样ARM连续出现的情况绕
晕。
During work on this issue of the ARMv8 ARM, a software issue led to
several text insertions disapprearing from chapter D1…
这句话来自作者最近下载的ARM手册的封面，句中的两个ARM，
前一个是Advanced RISC Machines的缩写，后一个是Architecture
Reference Manual的缩写。
 老雷评点  
此例甚妙，生动地阐释了正文。取自ARM官方真实文档，
亦为格物思想之体现。
2.9.2 主要版本
下面简要介绍一下ARM架构的几个重要版本，从ARMv3到
ARMv8。事先需要说明的是，我们描述的目标是架构，而不是微架
构，这两个术语在CPU领域有着很大的差异，通常架构指的是CPU的外
部行为和编程特征（Application Binary Interface，ABI），而后者指的
是CPU的内部设计和结构。在ARM社区中，像ARMv8这样的写法代表
的是ARM架构版本8。微架构是实现相关的，有很多种，比如Cortex是
ARM公司自己设计的著名微架构，该微架构又分很多个版本，分别实
现了不同版本的ARM架构，例如Cortex-A35实现了ARMv8架构的A系列
特征（A profile）。再如，XScale是英特尔公司设计后来卖给了Marvell
的微架构，实现的是ARMv5架构。其他著名的微架构还有AMD公司的
K12、高通公司的Kryo（实现ARMv8-A）、苹果公司的Twister（实现
ARMv8-A）等。早期的微架构常常直接用ARM8、ARM9这样的写法，
注意，其中的数字常常与架构版本不一致，比如ARM6和ARM7实现的
都是ARMv3，ARM8实现的是ARMv4。
苹果公司于1993年开始制造的牛顿PDA（个人数字助理）使用的是
ARM610芯片，实现的是ARMv3架构。相对之前的ARMv2和ARMv1，
ARMv3的主要改进如下。
内存地址从26位增大到32位。
引入了长乘法指令。
1994年，ARM迎来了大腾飞的契机。很早就开始购买ARM授权的
TI公司建议当时的著名手机厂商诺基亚使用ARM芯片。但是诺基亚反
对这个提议，原因是担心ARM的4字节定长指令会加大内存开销，增加
成本。来自潜在客户的这个意见不仅没有难倒ARM，还激发了他们的
灵感，很快开发出一套16位的指令集，即Thumb技术。这个技术首先授
权给TI，生产出的ARM7-TDMI芯片最早用在诺基亚的6110手机中，这
是使用ARM芯片的第一款GSM手机，大获成功。6110手机的流行让
ARM7系列成为当时手机芯片的主流选择。很多公司争相购买ARM7授
权，使得卖出的授权数多达165个，生产的芯片超过100亿。ARM7的成
功让ARM公司富了起来，搬出了成立初期办公用的谷仓（barn），并于
1998年成功上市。ARM7-TDMI实现的是ARMv4T（T代表Thumb）架
构。该版本的主要改进如下。
引入Thumb指令集。
新增了系统模式（system mode）。
丢弃了旧的26位寻址模式。
除了众多手机外，著名的苹果iPod第一代到第三代内部使用的也是
ARM7-TDMI芯片。
著名的黑莓智能手机曾经风靡一时，它内部使用的处理器有多种，
于2006年推出的8100系列使用的是XScale PXA900，实现的是
ARMv5TE（T代表Thumb，E代表DSP增强，见下文），ARMv5的主要
改进如下。
提高了ARM指令和Thumb指令交替工作时的效率。
引入饱和算术指令。
引入旨在加快Java程序执行速度的Jazelle扩展。
新增软件断点指令（BKPT）。
引入旨在增强DSP算法的E变种（variant）和J变种（J代表
Jazelle）。
于2006年7月上市的诺基亚N93翻盖手机使用的是ARM11芯片，实
现的是ARMv6架构。ARMv6的新特征主要如下。
将专门支持调试的14号协处理器（简称CP14）正式纳入ARM架
构。
单指令多数据（SIMD）支持。
非对齐数据支持。
将Thumb技术增强为支持混合使用16位指令和32位指令，称为
Thumb-2扩展。
旨在提高安全性的TrustZone扩展。
将ARM调试接口（ARM Debug Interface）纳入架构定义。
苹果公司于2010年4月推出的第一代iPad内部使用的是苹果公司设
计的A4芯片，A4是典型的片上系统SoC（System on Chip），其中包含
的CPU是Cortex-A8核心，实现的是ARMv7架构。ARMv7的新特征主要
如下。
将Thumb-2扩展正式纳入ARM架构中。
引入上文介绍的A、R、M三大系列定义。
名为Neon的改进SIMD技术扩展。
虚拟化技术扩展。
引入更好执行动态语言代码的ThumbEE技术。
将性能监视扩展纳入ARM架构，定义了两个版本的性能监视单元
（Performance Monitor Unit），分别称为PMUv1和PMUv2。
实现ARMv7的著名微架构还有Cortex-A9、Cortex-A15以及TI公司
的OMAP3。
于2011年10月首次宣布技术细节的ARMv8的主要改进如下。
引入64位支持，处理器有两种执行状态——AArch64和AArch32，
前者对应的指令集称为A64，后者可以执行A32（等长的ARM指
令）和T32（变长的Thumb2指令）两种指令集。
将NEON扩展技术纳入ARM架构标准中。
增加用于密码处理的多条指令，这称为密码扩展。
将性能监视单元（Performance Monitor Unit）升级到版本3，称为
PMUv3。
2.9.3 操作模式和状态
操作模式（operating mode）又称为处理器模式（processor
mode），是CPU运行的重要参数，决定着处理器的工作方式，比如如何
裁决特权级别和报告异常等。相对于x86，ARM架构的操作模式更多，
而且不同版本还可能有所不同。我们先以上面提到的经典ARM7-TDMI
为例介绍常见的7种操作模式，然后再介绍最近版本的新增模式。
管理员（Supervisor）模式：供操作系统使用的受保护模式，CPU
上电复位后即进入此模式，或者当应用程序执行SVC指令调用系统
服务时也会进入此模式。操作系统内核的普通代码通常工作在这个
模式下。
用户（User）模式：用来执行普通应用程序代码的低特权模式。
中断（IRQ）模式：用来处理普通中断的模式。
快中断（Fast IRQ）模式：用来处理高优先级中断的模式。
中止（Abort）模式：访问内存失败时进入的模式。
未定义模式（Undef）：当执行未定义指令后进入的模式。
系统模式（System）：供操作系统使用的高特权用户模式。
ARMv6引入的TrustZone技术新增了一个Monitor操作模式，供系统
信任的代码使用，执行SMC（Secure Monitor Call）指令会进入此模
式。
ARMv7引入的虚拟化技术新增了一个Hypervisor操作模式，供虚拟
机监视器（VMM）代码使用。
在ARMv6-M中，还定义了Thread mode和Handler mode供RTOS使用
（本书从略），表 2-6 列出了上面介绍的各种模式。第三列是该模式在
程序状态寄存器（PSR，稍后介绍）中的模式指示位域（Bit 0-4）的二
进制编码。
表2-6 ARM处理器的操作模式
模式
简
称
PSR中的编
码
描  述
特权级
别
是否异常模
式
Supervisor Svc
10011
供操作系统的内核代码使用
PL1