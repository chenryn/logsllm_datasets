interpn returns nan when one of the dimensions of the grid has length 1, even
if the inputs are perfectly valid. I know this is an edge case, but it's
crucial to my program, and working around it requires ugly hacks.
### Reproducing code example:
    values = np.array([0.1,1,10]).reshape((1,3))
    xi = np.array([[1, 2.2], [1, 3.2], [1, 3.8]])
    print(scipy.interpolate.interpn(([1], [2,3,4]), values, xi))
### Error message:
No error message, but returns array([nan, nan, nan])
### Scipy/Numpy/Python version information:
    1.1.0 1.15.1 sys.version_info(major=3, minor=7, micro=0, releaselevel='final', serial=0)