Mojohost
CMich
HMC
Mojohost
CMich
HMC
Mojohost
CMich
HMC
Mojohost
CMich
HMC
Mojohost
CMich
HMC
Mojohost
CMich
HMC
Mojohost
1.29 MB/s
1.25 MB/s
686 KB/s
3.66 MB/s
3.56 MB/s
3.57 MB/s
350 kB/s
385 KB/s
344 KB/s
281 KB/s
277 KB/s
270 KB/s
446 KB/s
413 KB/s
402 KB/s
158 KB/s
183 KB/s
200 KB/s
94.7 KB/s
86.6 KB/s
93.7 KB/s
1.61 MB/s
1.69 MB/s
1.41 MB/s
2.02 MB/s
3.58 MB/s
1.98 MB/s
*
*
*
1.43
1.96
1.44
1.90
1.46
1.26
13.5
13.6
14.0
2.84
3.13
3.12
10.4
10.2
8.76
16.8
19.2
18.0
0.861
0.793
0.903
0.750
0.458
0.678
686 KB/s
646 KB/s
714 KB/s
1.09 MB/s
1.04 MB/s
933 KB/s
311 KB/s
329 KB/s
304 KB/s
274 KB/s
292 KB/s
280 KB/s
407 KB/s
475 KB/s
342 KB/s
168 KB/s
178 KB/s
209 KB/s
117 KB/s
115 KB/s
116 KB/s
681 KB/s
659 KB/s
707 KB/s
1.25 MB/s
1.04 MB/s
1.03 MB/s
*
*
*
*
*
*
1.07
1.05
1.21
4.42
3.94
3.74
1.75
1.48
2.06
8.48
7.95
7.15
11.3
11.2
12.2
0.976
1.01
0.920
0.850
1.02
1.05
Table 1: Results of experiments that test our implementation of the TCP-based attack. Reading left-to-right,
the ﬁrst three columns denote a path, corresponding to the setup in Fig 7. The next pair of columns show,
for the case where the target possesses the ﬁle, the mean throughput of the well-behaved downloader across
ﬁve runs, and the relative mean throughput of the attack (for example, a value of 2.0 indicates the attack
had twice the throughput of wget). The ﬁnal pair of columns show the mean throughputs for the case where
the target is proxying the ﬁle. The attack succeeds when the speedup for a possessed ﬁle is greater than the
speedup of a proxied ﬁle (including timeouts). An asterisk indicates that all measurements timed out.
Results. Our results, shown in Table 1, show that the attack
can diﬀerentiate between ﬁles served directly by the target,
and ﬁles proxied by the target. Among all ﬁles made available
by the target, those served at the highest rate are possessed
by the target; those served at lower rates (or that result in
timeouts) are proxied from a diﬀerent source. The attack
succeeds when the relative speedup of the attack (versus
wget) is higher when the target is the source compared to
when the target is the proxy; this is true in most cases even
though maxExtra is ﬁxed. While preliminary, these results
indicate that the attack can succeed in practice, though we
do not estimate error rates for this attack in general given
these limited tests.
Limitations. We note that the attack depends upon the
attacker being able to force the target to serve ﬁles faster
than they can be retrieved from potential sources when prox-
ied. This assumption does not always hold. The attacker
could have poor connectivity to the target; this is easily de-
tected in advance, and attackers can acquire high-bandwidth
connections. Less avoidably, there could be rate limiting or
traﬃc shaping in place, or the target, acting as a proxy, may
have an extremely high bandwidth connection to the true
source. In the latter case, the machines may be co-located,
which is acceptable for a search warrant, or the owner of the
machine may choose to cooperate with law enforcement in
investigation of a crime. This type of cooperation is typical
in practice, such as when investigations of non-anonymous
systems lead to an innocent owner of an open Wi-Fi base
station whose neighbor is using the connection illicitly.
Defenses. To detect this attack, nodes can purposefully
drop outgoing packets from their TCP stream and determine
if the remote peer requests the missing data or acknowledges
receiving it. There is a patch2 to an old version of the Linux
kernel that addresses this vulnerability, but any such ﬁx
results in a non-standard TCP implementation and is unlikely
to be deployed on a wide scale. To defend against the attack
without detecting it, OneSwarm can force a bandwidth cap
on peers that can’t be turned oﬀ, which isn’t done currently.
Since OneSwarm is an open source project, investigators will
know if and when such defenses are deployed.
7. CONCLUSIONS
OneSwarm is in use by thousands of peers and is of interest
to criminal and civil investigators. We have detailed three
attacks on the system that are available for use by investi-
gators using only plain view data. We have quantiﬁed the
2See https://www.kb.cert.org/vuls/id/102014.
212precision and error rates of two of these attacks so that they
are applicable in legal context. Each attack can be repeated
for increased success when investigators leave and re-join the
network, exposing a diﬀerent set of peers.
Our novel timing attack is successful with only two at-
tackers as we show by proof and experimentation with the
released software on a small network. We have described
a defense and shown that it places delays on OneSwarm
querying that is slower than the use of Onion Routing. We
have re-analyzed the collusion attack, showing the vulner-
ability is much greater than was previously reported, and
is much worse than OR’s. Our revised model accounts for
probabilistic forwarding, content popularity, precision, and
details from OneSwarm’s source code. We show for this
second attack that when investigators comprise just 25% of
peers, over 40% of the network can be investigated with 80%
precision to ﬁnd sources of content that is not popular. For
the implementation in use by thousands of people, attack-
ers that comprise 25% of the network can successfully use
this second attack against 98% of remaining peers with 95%
precision. Finally, we show that OneSwarm is vulnerable
to a novel application of a known TCP-based attack, which
allows a single attacker to identify whether a neighbor is the
source of data or a proxy for it. An implementation of the
attack succeeds given that the attacker’s traﬃc is not shaped
by third-party routers. Only users that turn oﬀ the default
rate limit setting are exposed.
We provided the details of our attacks and results to
the OneSwarm developers in May 2011. In August 2011,
they reported that the following changes to OneSwarm have
been made: the default value of p is set to 0.5, unintended
forwarding latency has been decreased from about 100ms to
less than 10ms, and the discrepancy between text search and
hash search delays have been ﬁxed.
Acknowledgements. This work was supported in part by
NSF award CNS-1018615. We thank Cpl. Robert Erdely of
the Pennsylvania State Police for verifying the presence of
images of child sexual exploitation on OneSwarm. We thank
Elizabeth Belding, Norman Danner, Danny Krizanc, Clay
Shields, and Matthew Wright for providing resources for our
TCP experiments. We thank Robert Walls and Brian Lynn
for their insightful comments on the work.
8. REFERENCES
[1] K. Bauer, D. McCoy, D. Grunwald, T. Kohno, and D. Sicker.
Low-Resource Routing Attacks Against Tor. In Proc. ACM
WPES, pages 11–20, 2007.
[2] S. Brenner, B. Carrier, and J. Henninger. The Trojan Horse
Defense in Cybercrime Cases. Santa Clara Computer and
High Technology Law Journal, 21(1), 2004.
[3] J. Chu, K. Labonte, and B. N. Levine. Availability and
Locality Measurements of Peer-to-Peer File Systems. In Proc.
ITCom: Scalability and Traﬃc Control in IP Networks II
Conference, volume SPIE 4868, pages 310–321, July 2002.
[4] B. Cohen. Incentives Build Robustness in BitTorrent. In
International Workshop on Peer-to-Peer Systems (IPTPS),
Berkeley, CA, February 2003.
[5] L. Denoyer and M. Latapy. Measurement and Analysis of
P2P Activity Against Paedophile. Journ´ee Donn´ees et
Apprentissage Artiﬁciel (DAPA), March 2009.
[6] R. Dingledine, N. Mathewson, and P. Syverson. Tor: The
Second-Generation Onion Router. In Proc. USENIX
Security Symposium, August 2004.
[7] R. Geambasu, T. Kohno, A. Levy, and H. M. Levy. Vanish:
Increasing Data Privacy with Self-Destructing Data. In Proc.
USENIX Security Symposium, 2009.
[8] T. Isdal, M. Piatek, A. Krishnamurthy, and T. Anderson.
Privacy-preserving P2P data sharing with OneSwarm. In
Proc. ACM SIGCOMM, pages 111–122, August 2010.
[9] T. Isdal, M. Piatek, A. Krishnamurthy, and T. Anderson.
Privacy-preserving P2P data sharing with OneSwarm.
Technical report, Dept. CS and Eng., Univ. of Washington,
2010. http://oneswarm.cs.washington.edu/f2f_tr.pdf.
[10] M. Latapy, C. Magnien, and R. Fournier. Quantifying
paedophile activity in a large P2P system. In IEEE Infocom
Mini-Conference. http://antipaedo.lip6.fr, April 2011.
[11] M. Liberatore, R. Erdely, T. Kerle, B. N. Levine, and
C. Shields. Forensic Investigation of Peer-to-Peer File
Sharing Networks. In Proc. DFRWS Annual Digital
Forensics Research Conference, August 2010.
[12] M. Liberatore, B. N. Levine, and C. Shields. Strengthening
Forensic Investigations of Child Pornography on P2P
Networks. In Proc. ACM Conference on Future Networking
Technologies (CoNEXT), November 2010.
[13] L. Peterson, A. Bavier, M. E. Fiuczynski, and S. Muir.
Experiences building PlanetLab. In Proc. USENIX OSDI,
pages 351–366, 2006.
[14] M. Piatek, T. Kohno, and A. Krishnamurthy. Challenges
and directions for monitoring P2P ﬁle sharing networks. In
Proc. USENIX Hot Topics in Security (HotSec), pages
12:1–12:7, July 2008.
[15] M. Ripeanu, I. Foster, and A. Iamnitchi. Mapping the
Gnutella Network. IEEE Internet Computing Journal,
6(1):50–57, 2002.
[16] J. Rorher. MUTE. http://mute-net.sourceforge.net.
[17] RShare. http://www.stealthnet.de/en\_index.php and
http://www.planetpeer.de/wiki/index.php/RShare\
_documentation\_\%28English\%29.
[18] S. Savage, N. Cardwell, D. Wetherall, and T. Anderson.
TCP congestion control with a misbehaving receiver. In
Proc. ACM SIGCOMM, pages 71–78, October 1999.
[19] R. Sherwood, B. Bhattacharjee, and R. Braud. Misbehaving
TCP receivers can cause Internet-wide congestion collapse.
In Proc. ACM CCS, pages 383–392, Oct. 2005.
[20] P. Syverson, G. Tsudik, M. Reed, and C. Landwehr.
Towards an Analysis of Onion Routing Security. In Intl.
Wkshp. on Designing Privacy Enhancing Technologies,
pages 96–114, July 2000.
[21] U.S. Dept. of Justice. National Strategy for Child
Exploitation Prevention and Interdiction: A Report to
Congress. http://www.projectsafechildhood.gov/docs/
natstrategyreport.pdf, August 2010.
[22] U.S. General Accounting Oﬃce. File-Sharing Programs.
Child Pornography Is Readily Accessible over Peer-to-Peer
Networks. GAO-03-537T. Statement Before Congress; Linda
D. Koontz, Information Management Issues, March 2003.
[23] U.S. Government. Federal Rules of Evidence. Rule 401.
http://www.law.cornell.edu/rules/fre/rules.htm.
[24] R. J. Walls, B. N. Levine, M. Liberatore, and C. Shields.
Eﬀective Digital Forensics Research is Investigator-Centric.
In Proc. USENIX Workshop on Hot Topics in Security
(HotSec), August 2011.
[25] S. Wolchok, O. Hofmann, N. Heninger, E. Felten,
J. Halderman, C. Rossbach, B. Waters, and E. Witchel.
Defeating Vanish with Low-Cost Sybil Attacks Against
Large DHTs. In Proc. ISOC Symposium Network and
Distributed System Security (NDSS), February 2010.
[26] M. Wright, M. Adler, B. N. Levine, and C. Shields. An
Analysis of the Degradation of Anonymous Protocols. In
Proc. ISOC Symposium Network and Distributed System
Security (NDSS), pages 38–50, February 2002.
[27] M. Wright, M. Adler, B. N. Levine, and C. Shields.
Defending Anonymous Communication Against Passive
Logging Attacks. In Proc. IEEE Symposium on Security &
Privacy, pages 28–41, May 2003.
213