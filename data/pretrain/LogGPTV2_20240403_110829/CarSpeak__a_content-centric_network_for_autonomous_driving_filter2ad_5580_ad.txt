thread as fast as possible with the help of High-Resolution Timers
available in the 2.6.x version of the Linux kernel. HR Timers are
very accurate, with scheduling errors as low as 10us.
10. EVALUATION ENVIRONMENT
Below we describe the testing environment and the evaluated
schemes.
Testbeds: We evaluate CarSpeak in both indoor and outdoor set-
tings. Our indoor testbed uses a Vicon motion capture system for
robot localization, and contains 10 iRobot Create robots equipped
with Xbox 360 Kinect sensors. Asus EEPC 1015PX netbooks
equipped with Atheros AR9285 wireless network adapters are
mounted on each robot. Our testbed includes several large and small
Figure 9—CarSpeak’s Outdoor Setup. Image of the actual golf
car route demonstrating the lobby area that poses a hazardous blind
spot for the golf car and makes visual conﬁrmation of a pedestrian
difﬁcult before he enters the road.
obstacles as shown in Fig. 8. The testbed is divided to 40 high reso-
lution regions. Low resolution regions are speciﬁed per experiment.
Our outdoor testbed contains an autonomous Yamaha G22E
golf car mounted with various sensors, such as cameras, SICK
and Hokuyo range ﬁnders. The autonomous car, navigating in a
campus-like environment, needs to detect pedestrians and other ve-
hicles. We implement CarSpeak on the golf car and several iRobot
Create robots equipped with Kinect sensors situated in multiple lo-
cations. The setup was deployed over an area of 20 × 40 m. The
robots assist the golf car’s navigation system by providing sensor
information useful in detecting pedestrians in the environment. Fig-
ure 9 shows the actual pedestrian crosswalk and depicts that the
lobby adjacent to the crosswalk is a blind spot for the vehicle.
Compared Schemes: We evaluate three schemes including CarS-
peak and two baseline implementations:
• 802.11: An 802.11 based inter-vehicle communication system,
which allows vehicles to make requests for regions, Responses
are in the form of UDP/broadcast packets and are provided by all
wireless nodes which possess any information about the given
set of regions. The system uses the standard 802.11 MAC proto-
col to transmit information. The protocol keeps track of requests
and causes requests older than one minute to expire. It also dis-
cards sensor data older than 10 seconds. The system however
does not implement Octree-based naming or compression and
instead transmits raw 3D-point cloud information. It also does
not implement the functionalities of the content centric MAC.
• 802.11+Naming: This baseline includes CarSpeak’s Octree
based naming and compression modules. It tracks requests and
transmits packets from each region proportionally to the number
of requests it received for that region, i.e., REQr. It also times out
requests after one minute and discards sensor data older than 10
seconds. However it does not implement region-based contention
or other CarSpeak MAC functions.
• CarSpeak: CarSpeak with all of its components including the
content-centric MAC.
Metric: We compare CarSpeak against these baseline implementa-
tions based on a utility function, computing the rate of useful sensor
information, received per second. A 3D point cloud is considered
useful, if it contains sensor information only from the requested re-
gion(s), at the right resolution. For e.g., if a region is requested at
a coarse resolution, ﬁne grained high resolution information from
that region are aggregated into the requested resolution and then
their contribution to the useful information is computed. If all the
ﬁne grained information covers only 1 point in the requested coarse
resolution, their contribution to the utility metric will be 1 point.
11. RESULTS
We evaluate CarSpeak in both indoor and outdoor environments.
Our indoor testbed contains several obstacles that create blind-spots
Figure 10—Region Contention. CDFs of variance in rate of points
received from two regions. The variance obtained using CarSpeak
is signiﬁcantly smaller, across a variety of topologies and in the
presence of mobile robots.
for the robots. Figure 8 depicts candidate robot locations in the
test-bed. Experiments are repeated with robots assigned to different
randomly chosen locations and moving towards different randomly
chosen destinations. Our experiments allow robots to obtain sensor
information from a diverse set of regions at various points in time.
11.1 Region Contention
CarSpeak’s key goal is to enable regions to share the medium
efﬁciently, regardless of the location or number of nodes. We verify
if CarSpeak delivers on that promise.
Method. We place robots in randomly chosen locations in the
indoor testbed. We issue an equal number of requests for two differ-
ent regions in the environment at regular intervals from two wire-
less nodes in the testbed. We measure the variance of the rate of
3D-points received from the two regions by both robots, by Car-
Speak the standard 802.11 MAC protocol, and a hybrid approach
802.11+Naming. We repeat the experiment for 20 different topolo-
gies, with requests generated from different pairs of robots.
Results. Figure 10 shows the cumulative distribution function
(CDF) of the variance (normalized by the average square) of the
rate of points received from the two regions by the robots. The
mean variance obtained using CarSpeak is 0.0015, while that of
the standard 802.11 protocol and 802.11+Naming are 0.101 and
0.081 respectively. The higher 802.11 variance is due to the fact
that 802.11 allocates bandwidth to senders not regions. Hence, the
region that was observed by more robots received a greater share of
the medium compared to the other region. The exact difference in
the shares of the two regions varied from one experiment to another
depending on the topology and mobility pattern. 802.11+Naming
had a slightly lower variance. This is because the protocol en-
forces the desired region rates locally – i.e., if one robot has in-
formation from both regions the amount of data it transmits is bal-
anced between the two regions – but cannot guarantee the desired
medium allocation across different nodes. In contrast, CarSpeak’s
region based contention mechanism ensures that the medium is
shared equally between the two requested regions, across a variety
of topologies and mobility patterns.
11.2 Region Requests
In this experiment, we test CarSpeak’s region request module and
verify an increased number of requests for a given region leads to
a proportional increase in the number of 3D points received from
that region.
Method. We place robots in randomly chosen locations in the
indoor testbed. We issue queries for two regions in the environment.
We ﬁx the query rate for the ﬁrst region (5 requests/sec) and vary the
query rate for the second region across experiments. We measure
the ratio of the number of points received from the two regions
at the requesting robots, when the experiments are carried using
 0 0.2 0.4 0.6 0.8 1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9Fraction of experimentsNormalized variance of rate of points in each regionCarSpeak802.11+Naming802.11Figure 11—Region Requests. Ratio of the number of points re-
ceived from two requested regions plotted against ratio of the num-
ber of requests made for the two regions. CarSpeak ensures the
wireless bandwidth is allocated to region proportionally to the num-
ber of requests they receive.
CarSpeak, 802.11 and 802.11+Naming. We repeat the experiment
for 20 different topologies, with requests generated from different
pairs of robots.
Results. Figure 11 plots the ratio of the number of 3D points
received from the two requested regions as a function of the ratio of
the number of requests made for the two regions. The ﬁgure shows
that, for CarSpeak, the ratio of received points is roughly equal to
the ratio of requests. This holds across a variety of topologies and
mobility patterns. In contrast, for 802.11, the ratio of points is to-
tally independent of the ratio of requests. 802.11+Naming performs
slightly better showing some correlation between the ratio of points
from the two regions and the ratio of their requests.
11.3 Scaling
In this experiment, we demonstrate that CarSpeak scales to envi-
ronments with a large number of vehicles.
Method. We conduct the experiment with two regions that have
equal request rates. However, we increase the number of transmit-
ters and explore the impact on the protocols. We measure the num-
ber of points received by the requesting receivers for CarSpeak and
the two baselines. We repeat the experiment for different topologies
and pairs of regions.
Results. Figure 12 plots the number of received 3D points, with
CarSpeak, 802.11, and 802.11+Naming as a function of the number
of contending nodes. While CarSpeak’s performance scales grace-
fully, the performance of both the 802.11 baselines deteriorates
when there are over 6 nodes. This is due to the large number of col-
lisions that occur when multiple nodes transmit using the 802.11
broadcast mode, causing a broadcast storm. CarSpeak’s content
centric MAC protocol solves this problem by adapting the nodes’
contention window so that it stays independent of the number of
transmitters.
11.4 Compression
In this experiment, we evaluate the performance of CarSpeak’s
compression module. We verify if our compression scheme is ro-
bust to packet loss while providing signiﬁcant compression over
sending uncompressed point cloud data.
Method. Since the level of possible compression depends on the
scene, we place the robots in a typical outdoor setting containing
several buildings and obstacles, with Kinect sensors receiving depth
information.3 We vary the distance between the robots to achieve
a wide range of loss rates. We evaluate CarSpeak’s compression
module against the following two compression schemes:
Figure 12—Scaling. Number of 3D points received at a receiver by
CarSpeak, 802.11 and 802.11+Naming as a function of the num-
ber of contending nodes. We observe that while CarSpeak scales
gracefully, 802.11’s performance deteriorates when there are over
6 nodes, due to an excessive number of collisions and the lack of a
backoff mechanism in the broadcast mode.
Figure 13—Compression module. Ratio of the number of points
received over the number of transmitted points measured across
packet loss rates when packetizing compressed point cloud data,
using CarSpeak’s compression module and without using compres-
sion. CarSpeak’s compression module provides a consistent gain
of 4.5x over sending uncompressed data, while packetizing com-
pressed point cloud data performs poorer than CarSpeak for packet
loss rates as low as 2%.
• No Compression: 3D-point cloud information is transmitted di-
rectly without any compression but with random sub-sampling.
• Standard Octree Compression: 3D-point cloud data from the en-
vironment obtained from the sensor at regular intervals is com-
pressed using the standard Octree compression algorithm de-
scribed in §6. The resultant data is packetized and broadcast on
the medium.
We repeat the experiment for different locations of the robots in an
outdoor setting.
Results. Figure 13 plots the number of received 3D points di-
vided by the number of transmitted packets, as a function of the
packet loss rate. CarSpeak’s compression module provides a con-
sistent gain of 4× over sending uncompressed data. While packetiz-
ing compressed point cloud data achieves a greater compression at
very low loss rates, the scheme deteriorates to poorer than sending
uncompressed data at a packet loss rate of 10% (which we found
to be typical in our mobile outdoor scenarios). Since point cloud
data is sought by several receivers whose channel to the transmitter
varies with time due to mobility, a practical compression scheme
must be robust to a wide range of packet loss. CarSpeak delivers on
this promise.
11.5 Resolution
3Kinect does not work in sunny outdoor settings. Hence, we pick afternoon
hours and locations a lot of shades.
In this experiment, we evaluate the performance of CarSpeak
when observing regions at different resolutions. We verify if Car-
 0 1 2 3 4 5123Ratio of points in region 1 over 0Ratio of requests sent in region 1 over 0CarSpeak802.11+Naming802.111.02.03.11.01.72.01.01.01.0 0 10000 20000 30000 40000 50000 60000 70000 80000 90000 0 2 4 6 8 10 12 14Recovered points / second (s-1)Number of transmittersCarSpeak802.11+Naming802.11 0 500 1000 1500 2000 2500 3000 0 0.2 0.4 0.6 0.8 1Points received per tx packetPacket loss rateCarSpeakStandard OctreeNo CompressionFigure 14—Resolution. The ﬁgure shows the rate at which infor-
mation is received from a requested low-resolution region, for dif-
ferent schemes. Increasing the number of robots that do not have the
requested resolution can dramatically impact the performance of
802.11 and 802.11+Naming. In contrast, CarSpeak maintains high
rate of information from the desired region.
(a) Planning efﬁciency setup
(b) Safety setup
Figure 15—Experiment setup for (a), The shortest path 1 from
A to destination is blocked, efﬁcient communication from sensor B
should enable A to take path 2; for (b), There is a potential collision
of A with B when A tries to merge into the trafﬁc in another road at
the T intersection. The collision can be avoided if A can hear from
C about the other side of the road.
Speak responds with high quality information at the appropriate
resolution, when a region is requested.
Method. We experiment with a scenario in which a robot re-
quests a region at a low resolution. The environment has one robot
who has the region at the proper resolution and many other robots
that have incomplete and higher resolution information of the re-
gion. We measure the number of the 3D points received from the
large region at the requester, in each of the three compared schemes.
Note that ﬁne grained high resolution information from within the
requested region are aggregated into the requested resolution and
then their contribution to the useful information is computed. For
example, if all the ﬁne grained information ends up covering only
one point in the requested coarse resolution, their contribution to
the utility metric will be one point. We repeat the experiment 20
times under different topologies.
Results. Figure 14 plots the rate at which the requester receives
points from the desired resolution. The ﬁgure shows that adding
robots observing smaller regions does not reduce CarSpeak’s per-
formance, as it recognizes that the robot observing the entire region
has a greater quality of sensor information and deserves greater ac-
cess to the medium. However, 802.11’s performance is reduced as
the medium is increasingly shared by wireless nodes observing only
a small fragment of the requested region. Note that as the 802.11
baseline does not implement Octree-based compression, its rate of
received sensor information is lower, compared to 802.11+Naming
or CarSpeak. Overall, across experiments, CarSpeak delivery rate
of the desired data is 4.5× higher than 802.11+Naming and over
29× higher than 802.11.
11.6 Planning Efﬁciency
In this experiment, we demonstrate CarSpeak’s capability to pro-
vide the path planner with more efﬁcient routes in an environment
with obstacles.
Method. Consider a topology of the robots as shown in ﬁgure
15(a). Robot A seeks to navigate to location X, via the shortest
possible path. However, the road ahead of X is blocked, and this in-
formation is available only with Robot B. Robot A does not have a
line-of-sight view of the road block. The environment also has sev-
eral other robots positioned at various other locations with sensor
information of lower importance, also contending for the medium.
Robot A makes several requests for regions close to X, for which
its own sensors have no information. In the presence of timely sen-
sor information from Robot B, Robot A can make a detour at the
intersection to reach its destination via a marginally longer route.
However, without this information, Robot A reaches the road-block
and must U-turn to take the detour. We repeat the experiment with
Figure 16—Planning Efﬁciency. Time taken by the robot to nav-
igate an obstacle ridden environment across number of contending