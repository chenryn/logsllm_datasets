Why Typescript has not the static classes like in Java, while Javascript has
supported this.
If I wrote in JS:
        var ParentClass = (function () {
            function ParentClass() {
            }
            ParentClass.prototype.someMethod = function () {
            };
            ParentClass.StaticClass = (function () {
                function StaticClass() {
                }
                StaticClass.prototype.someMethodInStaticClass = function () {
                    return "Hello, " + this.greeting;
                };
                return StaticClass;
            })();
            return ParentClass;
        })();
        var entity = new ParentClass.StaticClass();
        console.log(entity instanceof ParentClass.StaticClass); // true
This is correct, but:
        class parentClass {
            someMethod() {}
            {static} class StaticClass {
            someMethodInStaticClass() {}
            }
        }
        var entity = new ParentClass.StaticClass();
        console.log(entity instanceof ParentClass.StaticClass); // true
This is incorrect although it can compile into silimar JS.
P.S. I'm sorry for bad markup