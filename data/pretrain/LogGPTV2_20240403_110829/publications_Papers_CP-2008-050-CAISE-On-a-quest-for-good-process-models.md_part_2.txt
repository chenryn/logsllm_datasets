Let a process model be given by a set of nodes (N) and a set of directed arcs (A).
The Cross-Connectivity metric is then defined as follows:
(cid:80)
V(n ,n )
CC = n1,n2∈N 1 2
|N|·(|N|−1)
Example 1. To illustrate the use of the CC metric an example is elaborated.
Figure 1 contains a process model with five tasks (i.e. T = {A,B,C,D,E}),
three connectors (i.e. C = {XOR,AND,OR}) and seven directed arcs (i.e.
A = {a ,a ,a ,a ,a ,a ,a }). To calculate the value for Cross-Connectivity
1 2 3 4 5 6 7
the weight for each node is calculated first (see Table 1).
Table 1. The degrees and weights for the nodes in the process model of Figure 1
Node (n) Degree (d) Weight (w(n))
A 1 1
B 1 1
C 1 1
D 1 1
E 1 1
XOR 3 1
3
AND 3 1
OR 3 1 + 23−2 · 1 = 3
23−1 23−1 3 7
Then, the weight for each arc is calculated:
1 1
W(a )=w(A)·w(XOR)=1· =
1 3 3
1 1
W(a )=w(B)·w(XOR)=1· =
2 3 3
1 1
W(a )=w(XOR)·w(AND)= ·1=
3 3 3
W(a )=w(C)·w(AND)=1·1=1
4
3 3
W(a )=w(AND)·w(OR)=1· =
5 7 7
3 3
W(a )=w(OR)·w(D)= ·1=
6 7 7
3 3
W(a )=w(OR)·w(E)= ·1=
7 7 7
C A B
a1 a2
XOR
a4
AVND a3
a5
OVR
a6 a7
D E
Fig.1. A simple example with five tasks and three connectors. T = {A,B,C,D,E},
C ={XOR,AND,OR}, A={a ,a ,a ,a ,a ,a ,a }.
1 2 3 4 5 6 7
The paths between each pair of nodes are determined and the value for the con-
nectionbetweenthepairofnodesiscomputed.ForexamplenodeAandnodeD
are connected through the path . In this case, this is the only
1 3 5 6
path from A to D. Thus, the value of this path is the maximum value over all
paths from A to D:
1 1 3 3 1
V(A,D)=v()=W(a )·W(a )·W(a )·W(a )= · · · = .
1 3 5 6 1 3 5 6 3 3 7 7 49
Similarly, the value for the connection from the XOR-node to the OR-node is
computed:
1 3 1
V(XOR,OR)=v()=W(a )·W(a )= · = .
3 5 3 5 3 7 7
For all values, see Table 2.
Table 2. Table showing the values for the connections between all pairs of nodes.
ABC D E XORANDORTotal
A 0 0 0 1 1 1 1 1 235
49 49 3 9 21 441
B 0 0 0 1 1 1 1 1 235
49 49 3 9 21 441
C 0 0 0 9 9 0 1 3 88
49 49 7 49
D 0 0 0 0 0 0 0 0 0
E 0 0 0 0 0 0 0 0 0
XOR 0 0 0 3 3 0 1 1 88
49 49 3 7 147
AND 0 0 0 9 9 0 0 3 39
49 49 7 49
OR 0 0 0 3 3 0 0 0 6
7 7 7
Finally, the CC value is determined as the sum of the values for all connections,
divided by the number of nodes times the number of nodes minus one:
235 + 235 + 88 +0+0+ 88 + 39 + 6 2255
CC = 441 441 49 147 49 7 = 441 ≈0.09131
8·7 56
NowthemechanicsbehindtheCCmetrichavebeendealtwith,itisworthwhile
to explore how it can help to distinguish models that are preferable. This will
clarify that our interest at this point is rather with a model’s CC value relative
to that of another model.
Consider the two models that are shown in Figure 2. Both models express
the same business logic as the initial model in Figure 1, but their CC values are
different. The model at the left-hand side in Figure 2 is block-structured, i.e.,
it differs from the initial model in the sense that the AND-join and XOR-join
at the top of the model are matched by corresponding splits. Intuitively, one
may expect that a block-structure will positively affect model comprehension.
Start
AVND
XOR
C A B C A C B
XOR
AVND AVND
AVND
XOR
OVR OVR
D E D E
Fig.2. Two alternatives to the example of Fig. 1.
Indeed, as the links between the various nodes become tighter, this is expressed
by a higher CC value of 0.12486 versus a value of 0.09131 of the initial model.
The model at the right-hand side in Figure 2 is different from the initial
model of Figure 1 in the sense that it reorders the top connectors: It expresses
(C AND A) XOR (C AND B) instead of C AND (A XOR B), the former being the
more elaborate expression with a duplicate for task C.1 So, the model at the
right-hand side can be expected to be slightly more difficult to understand than
the initial model, which is supported by a lower CC value of 0.08503 versus the
initial model’s CC value of 0.09131.
3 Evaluation
Inthissection,wereportonhowtheCCmetrichasbeensubjectedtoathorough
empirical evaluation. First, we will describe the evaluation with respect to the
metric’scapabilitytopredicterrorprobabilitiesinprocessmodels.Next,wewill
presentonitssuitabilitytoexplainwhichprocessmodelsareeasiertounderstand
than others.
1 Recall that in the computation of the CC metric all model elements are treated as
unique elements.
3.1 Validation for Error Prediction
Anindicationforametric’spredictivepoweristhatitcanaccuratelydistinguish
between models with errors and without errors. Because this evaluation uses a
large set of Event-driven Process Chains (EPCs), we use the EPC soundness
criterionasdefinedin[21]fordeterminingwhetheraninvolvedmodelhaserrors
or not and assume that a decrease in CC is likely to result in more errors.
Therefore, our hypothesis is:
H1: A decrease in CC implies an increase in error probability.
To evaluate this hypothesis, the EPCs of the SAP Reference Model are used.
The development of the SAP reference model started in 1992 and first models
were presented at CEBIT’93 [17, p.VII]. Since then, it was developed further
until version 4.6 of SAP R/3, which was released in 2000. The SAP reference
model includes 604 non-trivial EPCs. The advantage of considering this set of
models is that there is extensive literature available that explains its creation,
e.g.,[17]. Furthermore,it is frequentlyreferenced in researchpapers as a typical
reference model and used in previous quantitative analyses, as e.g. reported in
[20,22,24]. This way, our results can be compared to these related works.
As a first step, we use correlation analysis. In particular, we investigated
to what extent the CC metric is capable to rank non-error and error models.
ThiscapabilitycanbeestimatedusingtherankcorrelationcoefficientbySpear-
man. For CC it is -0.434. For this metric there is a strong and 99% significant
correlation, which matches the expectation of the hypothesis, i.e. H1 holds.
In a second step, we use multivariate logistic regression. This approach esti-
mates the coefficients B of a linear combination of input parameters for predict-
ing event versus non-event based on a logistic function. In our case, we predict
errorversusnon-errorfortheEPCsintheSAPreferencemodelbasedontheCC
metricandaconstant.Theaccuracyoftheestimatedmodelisassessedbasedon
the significance level of the estimated coefficients, the percentage of cases that
areclassifiedcorrectly,andtheshareofthevariationthatisexplainedbythere-
gression.ThisshareistypicallymeasuredusingtheNagelkerkeR2 rangingfrom
0 to 1 (1 being the best possible value). The estimated coefficient should have a
Wald statistic that is below 5% signalling that it is significantly different from
zero. For technical details of logistic regression we refer to [13]. For applications
in predicting errors in process models see [20,22,24].
WecalculatedaunivariatelogisticregressionforCCfirst.Table3showsthat
CC alone already yields a high Nagelkerke R2 of 0.586. The negative coefficient
matchestheexpectationofhypothesisH1.Furthermore,westepwiseintroduced
othermetricstothemodel.Weusedthosemetricsthatwerefoundin[22]asthe
best combination to predict errors in EPCs. In this context, it is interesting to
notethataddingthesemetricsyieldsquitesimilarcoefficientsforthemasinthe
predicting function of [22]. This suggests that the CC metric indeed measures a
processmodelaspectthatisorthogonaltometricsthathavebeendefinedbefore.
Table 3. Multivariate Logistic Regression Models with CC
ParameterCoefficientStd.Error Wald Sig.NagelkerkeClassification
Step 1 CC -13.813 1.229126.3860.000 0.586 0.791
... ... ... ... ... ... ... ...
Step 5 CC -10.478 2.931 12.7830.000 0.847 0.916
Structuredness -9.500 1.028 85.3280.000
Diameter 0.139 0.032 18.8290.000
Cyclicity 6.237 1.857 11.2810.001
CNC 5.541 0.935 35.1450.000
3.2 Validation for Understandability
To evaluate the capability of the CC metric to explain which process models
are easier to understand than others, we used the empirical data described in
[23].Thisdatawasobtainedinaprojectthataimsattheanalysisoftheimpact
of both model and personal characteristics on the understandability of process
models. In particular, a set of 20 model characteristics were investigated, which
have been proposed and formally defined in [20].
In total, 73 students filled out a questionnaire in the fall of 2006. A set of 12
processmodelsfrompractice,eachhavingthesamenumberoftasks(25),formed
the basis of the questionnaire. As part of the models’ evaluation, students were
asked to answer questions like “If task K is executed for a case, can task L be
executedforthesamecase?”Theevaluationofthe12modelsbythe73students
ledtoatotalof847completemodelevaluations.Onthisbasis,ascorevariable
could be calculated per model as the mean sum of correct answers it received.
This score variable served as a way to make understandability operational.
Fromthe earlieranalysisof theseresults[23], thefollowingmainconclusions
were drawn with respect to model characteristics:
1. From the 20 factors considered, five model factors exhibited the hypothe-
sized relation with score, i.e. (1) #or-joins, (2) density, (3) average
connector degree, (4) mismatch, and (5) connector heterogene-
ity.
2. Fromthesefivemodelcharacteristics,onlythecorrelationsbetweendensity
(the ratio between the actual number of arcs and the theoretical maximal
numberofarcs)andscore(-0.618)andbetweenaverage connector de-
gree (the average number of input and output arcs of the routing elements
in a model) and score (-0.674) correlated significantly, with respective P-
values of 0.032 and 0.016.
3. From all linear regression models on the basis of a combination of these five
model factors, the regression model that only used average connector
degree displayed the best explanatory power for the variability in score,