User: How to ensure the security of a web application and prevent common network attacks such as SQL injection and cross-site scripting attacks? Please provide a web application security detection and prevention plan.
Assistant: Web application security detection and defense scheme: 1. Prevent SQL injection attacks: - Strictly filter the data entered by users, such as excluding special characters, limiting length, etc. - Use parameterized query to avoid splicing SQL statements. - Verify whether the data entered by the user is legal, such as verifying whether the email address conforms to the format, whether the mobile phone number conforms to the specification, etc. - For sensitive operations, such as deletion, modification, etc., use strict permission control to avoid misoperation by users with insufficient permissions. 2. Prevent cross-site scripting attacks: - Filter content submitted by users, exclude special characters, limit length, etc. - Encode the content entered by the user, such as HTML tags, JavaScript codes, etc. - Using the CSP mechanism, only resources under a specific domain name are allowed to be loaded. - Set X-XSS-Protection in the HTTP response header to 1 to enable the browser's built-in XSS protection. 3. Prevent brute force cracking: - Use complex password policies, such as length restrictions, combinations of uppercase and lowercase letters, numbers, special characters, etc. - Avoid using the default administrator account and password. - Set a limit on the number of failed logins, and take corresponding measures, such as locking accounts, restricting IPs, etc. - Use secure encryption algorithms such as SHA-256, AES, etc. 4. Prevent file upload vulnerabilities: - Strictly limit the type of uploaded files, such as pictures, documents, etc. - Limit the size of uploaded files to avoid uploading large files. - Detect uploaded files to prevent uploading files with malicious code. - Set the permissions of the uploaded file storage directory to read-only to avoid uploading malicious code and causing the server directory to be controlled by attackers. 5. Prevent phishing and malicious URL links: - When sending malicious URL links to user mailboxes, it is necessary to ensure that the domain name of the website is consistent with the domain name of the link in the email, so as to avoid successful phishing caused by users mistakenly clicking malicious links. - Enable SSL encryption to ensure security during data transmission. - Use the encrypted token mechanism to ensure the legitimacy of the user's access to the page and prevent attackers from obtaining and tampering with the URL accessed by the user.