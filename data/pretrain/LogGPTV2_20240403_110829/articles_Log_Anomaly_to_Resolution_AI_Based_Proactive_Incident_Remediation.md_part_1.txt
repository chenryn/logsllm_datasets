2021 36th IEEE/ACM International Conference on Automated Software Engineering (ASE)
Log Anomaly to Resolution: AI Based Proactive
5188769.1202.42515ESA/9011.01
Incident Remediation
Ruchi Mahindru Harshit Kumar Sahil Bansal
IBM T.J. Watson Research Center IBM Research IBM Research
Yorktown Heights, NY, USA New Delhi, India New Delhi, India
PI:EMAIL PI:EMAIL PI:EMAIL
:IOD
Abstract—Basedon2020SREreport,80%ofSREsworkonpost- to detect but also reduces mean time to resolution. That is,
|
mortemanalysisofincidentsduetolackofprovidedinformation the proposed approach, Log Anomaly to Resolution (LA2R), EEEI
and16%oftoilcomefrominvestigatingfalsepositives/negatives.
is predictive in nature; it predicts anomalies from unlabeled
As a cloud service provider, the desire is to proactively identify 1202©
logs which are available in real-time and maps them to the
signals that can help reduce outages and/or reduce the mean
timetoresolution.ByleveragingAIforOperations(AIOps),this resolution URLs (i.e. documents containing resolution steps
00.13$/12/5-7330-4566-1-879
workproposesanovelmethodologyforproactiveidentificationof for problem diagnosis).
loganomaliesanditsresolutionsbysiftingthroughtheloglines. In a cloud environment, the various sources of signals are
Typically,relevantinformationtoretrieveresolutionscorrespond-
leveraged to triage an outage. As mentioned earlier, logs con-
ing to logs is spread across multiple heterogeneous corpora that
tainthesignalsthatcanbeleveragedbytheSREsforincident
exist in silos, namely historical ticket data, historical log data,
andsymptomresolutionavailableinproductdocumentation,for diagnosis and resolution. One of the challenges with logs is
example. In this paper, we focus on augmented dataset prepa- thattheyarenoisyandvoluminous,findinganomalouslogline
ration from multiple heterogeneous corpora, metadata selection is akin to finding a needle in the haystack. The Log Anomaly
andprediction,andfinally,usingtheseelementsduringrun-time
Detection (LAD) algorithm analyze the underlying logs to
to retrieve contextual resolutions for signals triggered via logs.
predict anomalies. One of the initial steps in detecting log Forearlyevaluation,weusedlogsfromaproductionmiddleware | )ESA(
applicationserver,predictedloganomaliesandtheirresolutions, anomaliesisparsingthelogstogeneratethetemplates[3],and
andconductedqualitativeevaluationwithsubjectmatterexperts; the different methods include PCA [4], Invariant mining [5],
gnireenignE
theaccuracyofmetadatapredictionandresolutionretrievalare [6],LogClustering[7],[8],NeuralGrangerCausality[9]and
78.57% and 65.7%, respectively.
Deep Learning based approaches [10]–[15]. The above cited
IndexTerms—incidenttriage,loganomalydetection,cloud,aiops
approaches require labeled data over a long period of time,
i.e. data corresponding to normal (healthy state), while the erawtfoS
proposed LAD method does not impose such a requirement;
I. INTRODUCTION
it can identify log anomalies from unlabeled log data which
In general, when an outage is reported due to service failure, contains both normal and abnormal data. detamotuA
leading to alerts, anomalies, and/or the like, the role of the Proactive incident triage involves mapping the detected log
Site Reliability Engineer (SRE) is to ensure that the system anomalies to their resolutions. Rafiul et al. [16] provide an
returns to normal state as quickly as possible. The SREs automated method for detecting log anomalies from a class no
would sift through hundreds or thousands of log lines to ofanomaliesthataredefinedbynormalvaluesofkeymetrics ecnerefnoC
identify anomalous log lines, which is a tedious and time andprovidearesolutionframeworkforsuchaclassofmetrics.
consuming process. Based on the anomalous log lines, SREs Ourapproach,ontheotherhand,isgenericanddoesnotlimit
wouldmanuallyformulateaquerytoretrieveresolutionsfrom toapre-definedclassofanomaliesormetrics.Fig1introduces
lanoitanretnI
similar historical incidents [1], [2]. In AIOps, training a log the high level phases of LA2R and its functions:
anomaly pipeline require a huge amount of normal log data
1) Phase1 - Bootstrapping at day 0 constitutes 1) prepare
corresponding to normal/healthy state of the system. It may
augmented dataset from several heterogeneous datasets
be the case that the client has the data, but it is not certain if
MCA/EEEI
(Section II), 2) Log Anomaly Detection (Section III), and
the data is normal or abnormal or both.
3) Metadata Selection and Prediction Model (Section III).
This paper addresses the aforementioned problems that SRE
2) Phase2 - System usage during steady state operations at
faces: a) it proposes a system that detects a handful of log
day 1+ consisting of Act, Explain and Learn i.e. using anomalies from hundreds and thousands of unlabeled log ht63
theLoganomalyandMetadataPredictionmodelforquery
lines(normal or abnormal), (b) use them to automatically 1202
expansion, resolution retrieval, ranking and explainability
formulate a query to return resolutions. Compared to manual
(Section III). Finally, learning from system usage for in-
approach of sifting through log lines to identify anomalous
cremental updates and fine-tuning (Section V).
log lines and then manually formulating a query to search for
resolution, the proposed system not only reduces mean time Othermajorcontributionsincludeauserstudytoevaluatethe
978-1-6654-0337-5/21/$31.00 ©2021 IEEE 1353
DOI 10.1109/ASE51524.2021.00167
Authorized licensed use limited to: University of Guelph. Downloaded on August 10,2023 at 09:01:00 UTC from IEEE Xplore. Restrictions apply.
Fig.1. IncidentTriageusingLogAnomalytoResolution
metadata prediction and resolution retrieval (Section IV).
II. DATASET
Fig.2. ArchitecturalDiagramforAugmentedKnowledgeBaseCreation
Weleverageinformationspreadacrossthreedifferentdatasets
for an application server product: 1) Historical Ticket Data
confidenceontheResolutionUrlforeachincident.Assume
(includingincidents),2)HistoricalLogData,and3)Symptom
thatthefrequencyofResolutionUrlui forMessageCodej
/ Resolutions available in standard Product Documents. There
(MCj) is cij, then RSS is calculated as follows,
are several challenges to use these datasets for LA2R. Firstly,
(cid:2)cij |MC|
each dataset may exist in silos, each containing important RSS= ∗log (1)
jcj |MCj ∈MC :urli∈MCj|
information nuggets. For example, user reported incident De-
scription, ReportedTime, Product, ProductVersion, Category,
where MC is a set of all MessageCodes in the dataset.
Sub-Category, Severity etc. are available in ticket data, while (cid:2)cij
The first term, , captures the importance of the
jcj
Product Documentation contains the description and official
ResolutionUrl ui for MessageCodej (MCj). The second
Resolution, and the symptoms (in form of log lines) from |MC|
term, , captures the importance of the
run-time are available in the log data. Such information |MCj∈MC:urli∈MCj|
MessageCodej (MCj) for the ResolutionUrl ui.
nuggets when combined, provide a more holistic view of
the incident, its context, and cognition process of the SRE
that may have been involved in the resolution derivation. III. METHODOLOGY:LOGANOMALYTORESOLUTION
Secondly, log lines could run into hundreds or millions per
This section describes the end-to-end run-time for LA2R,
system/application/component. Identifying specific log lines
see Fig 3. Given incoming log lines from a log monitoring
associated with the incident in historical ticket data is a
system (LogDNA), the system predicts log anomalies using
challenging task. Algorithm below provides steps to prepare
the LAD model (explained below). For each log anomaly,
an augmented dataset, see Fig 2.
the Query Processing extracts the MessageCode and masks
1) For each incident, extract the ReportedTime, Metadata
the parameter values to remove any environment specific
(e.g., Category, Sub-Category, Product, ProductVersion,
information.TheMetadata Predictionpredictsthemetadata,
Severity), ResolutionUrl, where ResolutionUrl is a SRE
such as Category and Sub-Category. The Query Expansion
identified resolution related to the symptom reported /
formulatesaqueryconsistingofpredictedMetadataandMes-
detected.
sageCode, if MessageCode is not present then it uses masked
2) For each incident, check if the corresponding logs for
anomalous log line. Execute the query on the Augmented
application/system/component in question are available.
Knowledge Basetoretrievethetopk results,re-rankedusing
a) UsetheReportedTimefromstep1abovetoidentifythe
the ResolutionSpecificityScore. To provide Explainability for
time window within the +/- delta of the ReportedTime
each result, we expose predicted Metadata, along with the
to extract logs of interest (Note: This may still be
contextual Metadata, e.g. Product, ProductVersion, Severity
thousands of log lines).
sorted by min entropy and max correlation scores. Finally,
b) Run the extracted log lines through the unsupervised
leveraging the system usage logs, the Feedback Learning
LAD model (Section III) to identify anomalous log
component would learn by collecting explicit feedback or
lines(Outputmaybeacoupleofanomalousloglines).
implicit feedback.
3) ExtractMessageCode,MessageString,andResolutionfrom
the Product Documentation; using a rule-based approach,
classify the Resolution as actionable or not. A new meta-
data attribute, IsActionable is set to Y, if the Resolution
containsstepsthatcanbeacteduponbyanSRE;otherwise,
it is set to N.
4) Combine data extracted in Step 1, Step 2(b) and Step 3
using the common link which is MessageCode.
5) We observed that there could be several ResolutionUrls
for the same MessageCode. Using frequency distribution
of MessageCodes for each ResolutionUrl, we introduce Fig.3. Run-TimeArchitecturalDiagramforLogAnomalytoResolution
a field ResolutionSpecificityScore(RSS) that indicates the
1354
Authorized licensed use limited to: University of Guelph. Downloaded on August 10,2023 at 09:01:00 UTC from IEEE Xplore. Restrictions apply.
Log Anomaly Detection (LAD): LAD model is trained to Metadata Selection and Prediction: We observed that a
detect anomalies from unlabeled data that may include both ResolutionUrl may contain information that may be lever-
normal (healthy state of the system) or abnormal (unhealthy aged to solve heterogeneous problems. There are 464 unique
state of the system) log lines. LAD is based on the intuition ResolutionUrls spanning across approximately 1300 unique
that a log line is anomalous if it occurred very rarely or was tickets, on an average the same ResolutionUrl is used for 5
never seen before in the training data. During the training unique MessageCodes. Therefore, knowing the context e.g.,
phase, the input log data is fed to a dictionary-based binary Category, Sub-Category, Severity etc. that SREs had used
error classifier. At this point, the model pathway splits itself during problem diagnosis is critical, so that at run-time the
into Erroneous Pathway (solid line in Figure 4) and Non- context can be leveraged to automatically retrieve the most
Erroneous Pathway (dotted line in Figure 4) for process- appropriate ResolutionUrl.
ing erroneous and non-erroneous log lines, respectively. The We applied entropy and information gain [18] to identify
templatization allows to normalize a log line into a format Metadata that could be useful for retrieving ResolutionUrl
that is invariant of the parameter values. Both the pathways fromthedataset.Entropycapturestherandomnessinthestate
templatize a log line into a log template [17], followed by of a Metadata attribute; high randomness implies low infor-
a fuzzy clustering algorithm to form homogeneous groups mationgain.TheentropyofSeverity,Category,Sub-Category,
known as log template clusters, Erroneous Log Template ResolutionTitle,andResolutionUrlis1.62,4.05,6.75,8.33and
Clusters (ELTC) and Non-Erroneous Log Template Clusters 7.76, respectively. Although Severity has the lowest entropy
(NELTC). That is, the ELTC contains clusters of erroneous but it has no correlation with ResolutionUrl, hence, it was
log templates, and the NELTC contains clusters of non- not selected. Further, we computed the correlation coefficient
erroneous log templates. Finally, the frequency thresholding amongst various Metadata and ResolutionUrl and, found a
moduleanalysesthefrequencydistributionofthelogtemplate positive correlation between Category, Sub-Category with the
clusters to filter anomalous clusters where cluster frequency ResolutionUrl. Also, Category / Sub-Category are correlated
<=thresholdfrequencyoftheclusterfrequenciesdistribution.
as they form a two-level taxonomy, i.e. Sub-Category value
Thethresholdfrequencyissetto3rdquartilefortheErroneous
depends on the Category value. Hence, Category / Sub-
Pathway and 1st quartile for the Non-Erroneous Pathway. Category are selected for training the prediction model. We
The intuition behind frequency thresholding is to capture experimented with two approaches to build the metadata
the rareness aspect of a log template cluster. Each cluster prediction model: