# 【技术分享】如何利用Office 365的任务功能搭建Cobalt Strike C2通道
##### 译文声明
本文是翻译文章，文章来源：安全客
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
译者：[兴趣使然的小胃](http://bobao.360.cn/member/contribute?uid=2819002922)
预估稿费：200RMB
投稿方式：发送邮件至linwei#360.cn，或登陆网页版在线投稿
**一、前言**
****
在定制化、创新化命令与控制（C2，Command and
Control）通道方面，人们已经做了许多研究工作，然而已公开的研究成果通常只是独立的理论概念，没有集成到现有的攻击工具包中。Cobalt
Strike最近添加了一个新的扩展功能，可以在保持工具兼容性的前提下，创造隐蔽的C2通道。
Cobalt Strike新添加的扩展名为“External C2”，为了最大化挖掘该扩展的潜能，MWR团队开发了一个定制版的C2通道，使用Office
365作为通信媒介。本文介绍的主要内容如下：
1、利用Office 365服务中Outlook的“任务（tasks）”功能，演示如何搭建Cobalt Strike的C2通道。
2、分析定制化Cobalt Strike C2通道时会碰到的一些困难，并介绍了解决这些困难的一种方法。
**二、External C2接口**
****
Cobalt Strike是一个渗透平台，广泛应用于面向目标的操作场景，用来模拟特定威胁来源。Cobalt
Strike包含许多重要功能，比如beacon植入体（implant）以及“可拓展的C2”通道。可扩展的C2功能可以用来定制C2请求以及响应消息的具体结构。比如，我们可以定制HTTP头部、正文中的数据结构，以及C2数据在这些结构中的存储方法。利用这种功能，我们可以设计弹性化C2通道，将C2通信流量隐藏在正常的流量中。虽然可扩展C2提供了丰富的定制化选项，但仍然存在几个限制条件，需要我们注意：
1、该功能仅支持Cobalt Strike支持的某些协议，即：HTTP/HTTPS以及DNS协议。
2、与使用这些协议的“外部”服务通信本身就是比较有难度的一个过程，并且大多数情况下都难以成功。
3、对于HTTP/HTTPS而言，该功能仅限于客户端-服务器应用场景，这种情况下，客户端（即植入体）会向服务器（Cobalt
Strike团队服务器（team server））发布请求，服务器会直接返回响应数据。
作为Cobalt Strike的创始人，Raphael
Mudge最近发布了一个概念验证功能型扩展，可以使用任意C2通道，这个功能也就是我们今天要介绍的“External C2”接口。
我们可以将该接口与传统的Cobalt
Strike用法做对比，来理解这个接口的工作原理。简单起见，这里我们只会分析HTTP/HTTPS场景。在这个场景中，通常情况下，（内存中或磁盘上的）某个植入体会使用HTTP/HTTPS协议作为通信协议，直接与Cobalt
Strike团队服务器通信，更多情况下，植入体会使用重定向器（redirector）与团队服务器通信，重定向器负责将通信流量转发给团队服务器。典型的使用场景如下图的左图所示。其他植入体可以使用与C2相同的通信协议来传播，或者也可以使用SMB协议进行分发。使用SMB协议时，新的植入体与源植入体之间需要使用命名管道（named
pipe）来通信，而源植入体负责中继原始C2通道的通信流量。
“External C2”支持在传统的Cobalt Strike C2模型中使用中间人（man-in-the-middle）技术。在这种情况下，客户端代码包含一个第三方客户端以及一个SMB植入体。第三方客户端不需要负责Cobalt
Strike功能，相反，它负责生成SMB植入体，然后通过命名管道与SMB植入体通信。通过命名管道收到流量后，第三方客户端可以将这些流量再次封装，然后通过任意C2通道传输。服务端要搭建一个第三方控制端，以接收并解封装C2流量，然后使用简单的TCP套接字将经过处理的C2流量转发给团队服务器。Cobalt
Strike通过“aggressor script”启动“External C2”接口，团队服务器通过“External
C2”接口来监听数据（“aggressor script”是Cobalt Strike的脚本引擎）。“External
C2”接口可以在任意端口上监听，与现有的“监听器（listeners）”功能类似（listeners为接收特定协议连接的端点）。通信数据的回连路径与发送路径相同。
Raphael Mudge所实现的External C2接口中包含aggressor
script以及一个简单的第三方客户端。第三方客户端与控制端之间使用基本的TCP套接字进行通信。Raphael
Mudge没有实现任何第三方控制端，然而由于整条C2路径仅用到了TCP套接字，在测试场景中，我们可以使用TCP端口转发来模拟其功能。
**三、与Office 365同步“任务”**
****
只要攻击者的想象力足够丰富，他就可以利用“External
C2”接口来选择使用各种类型的C2通道。本文使用C++语言写了段PoC代码，简单实现了“External
C2”的第三方客户端以及控制端组件，利用这些组件，配合Office
365服务中Outlook的“任务（tasks）”功能来搭建一个C2通道。随着越来越多的组织选择使用Office
365服务，利用这种方式构建的C2通道也显得更加隐蔽，难以与合法的流量区分开来。
**3.1 与Office 365交互**
Office 365中的Outlook由Microsoft Exchange来提供功能支持是非常正常的一件事情，令人惊讶的是，我们也可以通过Office
365来使用Exchange内部实例所支持的许多功能。
Exchange提供了一个非常重要但又不太知名的功能，那就是 **Exchange Web Services（EWS）** 功能。EWS是一个SOAP
Web服务，客户端可以通过该服务与Exchange进行交互。EWS默认处于启用状态，与Outlook Web
App（OWA）地址处于同一级别，具体地址为：“ **https:// /EWS/**”。我们发现Office
365的确提供了EWS服务，具体地址为：“”。
许多客户端应用程序会用到EWS服务，比如桌面版Outlook中的“加载项（add-ins）”功能；Outlook本身会使用MAPI/RPC来与Exchange进行交互，无需依赖EWS服务。然而，EWS支持MAPI/RPC所提供的大部分功能，只有某些情况除外（例如，EWS无法创建“有风险”的某些Outlook规则，如“启动应用程序”规则）。
EWS支持各种功能，比如创建、修改以及删除邮件、日历、联系人、任务等Outlook支持的功能。这些操作都会同步到Exhcange上，因此也可以用作C2媒介加以使用。
出于演示目的，在本文的PoC中，我们选择使用其中的“任务”功能。与电子邮件一样，每个任务项目都可以包含非常大的数据量。之所以选择任务功能作为目标，原因是现有的安全控制机制主要针对的是电子邮件（比如自动扫描邮件中包含的恶意软件），因此，任务功能可以成为更为隐蔽也更为安全的使用媒介。