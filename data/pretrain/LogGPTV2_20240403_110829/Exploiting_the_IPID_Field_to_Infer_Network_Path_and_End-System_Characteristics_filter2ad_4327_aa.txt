title:Exploiting the IPID Field to Infer Network Path and End-System Characteristics
author:Weifeng Chen and
Yong Huang and
Bruno F. Ribeiro and
Kyoungwon Suh and
Honggang Zhang and
Edmundo de Souza e Silva and
James F. Kurose and
Donald F. Towsley
Exploiting the IPID Field to Infer Network Path
and End-System Characteristics
Weifeng Chen1, Yong Huang2, Bruno F. Ribeiro1, Kyoungwon Suh1,
Honggang Zhang1, Edmundo de Souza e Silva3, Jim Kurose1,
and Don Towsley1
1 Department of Computer Science,
University of Massachusetts at Amherst, MA 01002, USA
{chenwf, ribeiro, kwsuh, honggang, kurose, towsley}@cs.umass.edu
2 Department of Electrical and Computer Engineering,
University of Massachusetts at Amherst, MA 01002, USA
PI:EMAIL
3 COPPE and Computer Science Department,
Federal University of Rio de Janeiro (UFRJ),
Cx.P. 68511 Rio de Janeiro, RJ 21945-970 Brazil
PI:EMAIL
Abstract. In both active and passive network Internet measurements,
the IP packet has a number of important header ﬁelds that have played
key roles in past measurement eﬀorts, e.g., IP source/destination ad-
dress, protocol, TTL, port, and sequence number/acknowledgment. The
16-bit identiﬁcation ﬁeld (IPID) has only recently been studied to de-
termine what information it might yield for network measurement and
performance characterization purposes. We explore several new uses of
the IPID ﬁeld, including how it can be used to infer: (a) the amount of
internal (local) traﬃc generated by a server; (b) the number of servers
in a large-scale, load-balanced server complex and; (c) the diﬀerence be-
tween one-way delays of two machines to a target computer. We illustrate
and validate the use of these techniques through empirical measurement
studies.
Keywords: IPID ﬁeld, one-way delay diﬀerence, traﬃc activity, load-
balanced server counting, estimation.
1
Introduction
In both active and passive network Internet measurements, the fundamental unit
of measurement - the IP packet - includes a number of important header ﬁelds
that have played key roles in past measurement eﬀorts: IP source/destination
address, protocol, TTL, port, and sequence number/acknowledgment. The 16-
bit identiﬁcation ﬁeld (referred to here as the IPID ﬁeld) has only recently been
used to determine what information it might yield for network measurement and
performance characterization purposes [3, 6, 9, 11, 7]. In this paper, we explore
several new uses of the IPID ﬁeld, including how it can be used to infer: (a)
C. Dovrolis (Ed.): PAM 2005, LNCS 3431, pp. 108–12 , 2005.
c(cid:1) Springer-Verlag Berlin Heidelberg 2005
0
Exploiting the IPID Field to Infer Network Path
109
the amount of internal (local) traﬃc generated by a server; (b) the number of
servers in a large-scale, load-balanced server complex and; (c) the diﬀerence
between one-way delays of two machines to a target computer. We illustrate and
validate the use of these techniques through empirical measurement studies.
The remainder of this paper is structured as follows. In the following section
we classify and discuss past work that has examined the use of the IPID ﬁeld, and
place our current work in this context. In Section 3, we describe a technique to
infer the amount of a host’s traﬃc that remains internal to its local network, and
the complement amount of traﬃc that passes through a measured gateway link.
In Section 4, we describe a technique to identify the number of load-balancing
servers behind a single IP address. In Section 5, we introduce a technique to
infer the diﬀerence between one-way delays. Section 6 concludes this paper with
a discussion of future work.
2 Uses of the IPID Field
We begin with a brief description of the IPID ﬁeld and the generation of IPID
values, and then classify previous measurement work, as well as our current
eﬀorts, into three categories based on their use of the IPID ﬁeld.
The 16-bit IPID ﬁeld carries a copy of the current value of a counter in a host’s
IP stack. Many commercial operating systems (including various versions of
Windows and Linux versions 2.2 and earlier) implement this counter as a global
counter. That is, the host maintains a single IPID counter that is incremented
(modulo 216) whenever a new IP packet is generated and sent. Other operating
systems implement the IPID counter as a per-ﬂow counter (as is done in the
current version of Linux), as a random number, or as a constant, e.g., with a
value of 0 ([3]).
2.1 Global IPID
In this paper, we only consider hosts that use a single global counter to determine
the IPID value in a packet. To infer whether a host implements a global IPID
counter, we probe the host from two diﬀerent machines by sending http requests.
IPID values in the packets returned from the host can be obtained by running
tcpdump on the two probing machines separately. If the host uses a global IPID
counter, these replying IPID values will belong to a unique sequence. By syn-
chronizing the two probing machines, we are able to compare the replying IPID
values, as presented in Figure 1. This ﬁgure clearly shows that the IPID values of
the packets returned to the two probing machines belong to a unique sequence,
and consequently, we can infer that this host uses a global IPID counter.
Instead, if the host does not implement a global IPID counter we obtain
a diﬀerent result. Figure 2 shows the result of a host implementing the IPID
counter as a per-ﬂow counter. The IPID values of the replying packets to the
two diﬀerent probing machines consist of two independent sequences, each cor-
responding to one probing machine. Note that the slopes of these two sequences
110
W. Chen et al.
 15000
 14500
 14000
 13500
s
D
P
I
I
 13000
 12500
 12000
 11500
 0
machine 1
machine 2
 1000
 2000
 3000
Time (ms)
 4000
 5000
 6000
Fig. 1. IPID values returned from a global-IPID host
s
D
P
I
I
 55000
 50000
 45000
 40000
 35000
 30000
 25000
 20000
 15000
 10000
 5000
 0
machine 1
machine 2
 1000
 2000
 3000
 4000
 5000
 6000
Time (ms)
Fig. 2. IPID values returned from a non-global-IPID host
are diﬀerent because of the diﬀerent speeds of the probing packets sent from the
probing machines.
Using this process, we probed the web-servers of the top 50 companies ranked
by Fortune magazine [1] and found that 18 (36%) of them have a global IPID
counter. Among the top 101 web sites ranked by PC Magazine [2], 40 of these
web sites were found to have a global IPID counter.
2.2 Classiﬁcations of Using IPID Fields
We can broadly classify previous eﬀorts, as well as our current eﬀorts, using
IPID sequences into three categories:
Exploiting the IPID Field to Infer Network Path
111
i=1
(cid:1)n
Application 1: Measuring traﬃc activity. Suppose that we observe a subset
of the packets generated by a server, and consider the (i−1)-st and i-th observed
packets. Let T (i) denote the timestamp of the i-th packet and ∆IPID(i) the
diﬀerence between the IPID values of the (i − 1)-st and i-th packets1. In this
case,
∆IPID(i) represents the number of packets sent by this server in the
interval (T (1), T (n)). The use of IPID values to infer the total amount of outgoing
server traﬃc is noted in [7]. We additionally note that, for stub networks with
a single outbound connection, this also allows us to infer the relative amount
of traﬃc sent to destinations within the network, and to destinations outside of
the network. From this single measurement point, we can thus infer one aspect
(local/remote) of the spatial distribution of traﬃc destinations. We consider this
approach in Section 3.
Application 2: Clustering of sources. These applications make use of the
fact that diﬀerent hosts have independent (and thus generally diﬀerent) IPID
values, and that IPID values are incremented for each outgoing IP packet sent by
a host. We denote the diﬀerence in the values of the IPID ﬁeld of two successively
observed packets as ∆IPID. Thus, if we observe two packets generated by the
same host within a “short” interval of time, we will generally observe a small
∆IPID value. By identifying small ∆IPID values among a set of IP packets that
were generated within a short interval of time from multiple sources, it is then
often possible to identify packets coming from the same source. It is important
to note that IPID-based source-identiﬁcation is thus possible without actually
examining the source IP address, which itself may have been aliased. Router
alias detection [11], host alias detection and load-balanced multiplexed-server
counting [7], and NATed host counting [3] all exploit this observation. Our work
in Section 4 builds on initial suggestions in [7] by considering a speciﬁc algorithm
for identifying the number of servers behind a load-balancer using only observed
IPID values.
Application 3: Identifying packet loss, duplication and arrival order.
Since a packet generated later in time by a host will carry a larger IPID (modulo
216) than a packet generated earlier in time by that host, it is possible (after
solving the wrap-around problem) to determine the order in which packets are
generated by a host. Previous work on detecting packet reordering and loss
between a probing host and a router [9] and duplicate packet-detection and re-
ordering at a passive monitor [8] exploit this observation. In Section 5, we use
the fact that the IPID value of a packet generated in response to a received
packet indicates the order in which received packets arrived to develop a new
approach for inferring the absolute diﬀerences in one-way delays between a set
of machines and a target host.
Several technical challenges must be met when using IPIDs in measurement
studies. The most important regards wrap-around between two consecutively
1 We may obtain a negative value for ∆IPID(i) due to wrap-around. We address this
problem later in this paper.
112
W. Chen et al.
observed packets from the same source. Correction is easy if we know that only
a single wrap-around has occurred. With active probing techniques (where the
measurement point sends active probes to a host and observes the IPID of the
returned packet), multiple wrap-arounds can be avoided by choosing an appro-
priate probing interval. In a passive monitoring framework, a more sophisticated
method is needed to deal with multiple wrap-arounds, as discussed in the fol-
lowing section.
3 Outbound Traﬃc from a Server
In this section, we present a simple technique for measuring the outbound traﬃc
from a server (i.e., the number of packets sent by a server) by passively observing
the IPIDs of packets generated by that server at a gateway. The use of active
probes to infer the total amount of outgoing server traﬃc was suggested in [7].
Passive measurement avoids the overhead of active probing, and the attention
that active probing may bring (indeed, several of our active probing experiments
resulted in our measurement machines being black-listed at a number of sites!).
We will see shortly, however that it is valuable to augment passive probing by
occasionally sending active probes in order to handle IPID wrap-around.
Suppose that, at a gateway, we observe a subset of the packets generated by a
server, and consider the (i− 1)-st and i-th packets observed. Let T (i) denote the
timestamp of i-th packet and ∆IPID(i) denote the diﬀerence between the IPID
values of the (i − 1)-st and i-th packets. In this case,
∆IPID(i) represents
the total number of packets sent by this server during the interval (T (1), T (n)).
Furthermore, if the server accesses the larger Internet only through this gateway,
we know that all other packets generated between the (i−1)-st and i-th observed
packets must have been sent to destinations within the network - providing an
easy means to determine the amount of network-internal traﬃc being generated
by a server.
(cid:1)n
i=1
We performed experiments on several popular web servers in our campus.
One result is plotted in Figure 3. Since we could not instrument the server, we
validated our measurements using periodic active probes. As shown in Figure 3,
this result is consistent with that obtained using active probes. Figure 4 shows
the amount of network-internal traﬃc from the server as determined by our
proposed passive approach.
With a purely passive approach to measuring server activity, it can be diﬃcult
to detect IPID wrap-around if the amount of traﬃc observed at the monitor point
is very small compared to the amount of network-internal traﬃc generated by
the server. Indeed, in our experiments, we observed popular web servers in our
campus that did not serve clients outside of our campus for long periods of time.
To solve this problem, we adopt a hybrid approach in which adaptively-activated
active measurement is used to supplement passive measurement. Speciﬁcally, we
use an Exponential Weighted Moving Average (EWMA) to estimate the rate of
IPID increase. Using this estimate, we can then estimate the next IPID wrap-
around time, T ∗(msec), and start a timer with that value. Whenever we observe
Exploiting the IPID Field to Infer Network Path
113
x 104
# of packets generated by a server in each minute
# of packets observed by passive monitor
# of total packets inferred by passive monitor
# of total packets inferred by active probber
6
5
4
3
2
1
s
t
e
k
c
a
p
f
o
.
m
u
N
0
0
20
40
60
Minutes
80
100
120
Fig. 3. Comparison between passively measured and actively measured outbound traf-
ﬁc from a server
x 104
Amount of network−internal traffic from a server
5
4
3
2
1
s
t
e
k
c
a
p
f
o
.
m
u
N
0
0
20
40
60
Minutes
80
100
120
Fig. 4. Amount of network-internal traﬃc from a server
a new packet before this timer expires, we reset the timer based on the current
estimated IPID rate. If the timer expires, we launch an active probe and reset
the timer. We are currently performing additional work to evaluate this hybrid
approach.
114
W. Chen et al.
4
Inferring Number of Load-Balancing Servers
If each load-balancing server behind a single IP address has an independent
global IPID counter, packets generated by one server have a sequence of IPID
values that diﬀers from those generated by a diﬀerent server. As discussed be-
low, using these observed IPID values, we can classify the packets into distinct
sequences, with the number of distinct sequences being an estimate for the num-
ber of servers. Figure 5 shows the observed IPID values of the packets generated
from a large commercial web server in response to the 5000 probing packets we
sent to the server.
s
D
P
I
I
 70000
 60000
 50000
 40000
 30000
 20000
 10000
 0
 0
 500  1000  1500  2000  2500  3000  3500  4000  4500  5000
Packet
Fig. 5. IPIDs of the packets returned from the web server
We next describe an algorithm to classify the packet IPID sequences. Let
{I1, I2, . . . , I5000} be the set of IPIDs shown in Figure 5 and S the set of distinct
sequences. Initially, S = ∅. The ﬁrst IPID I1 is appended to sequence S1 (namely,
S1 = {I1}) and S = S ∪ {S1}. For each following IPID Ij (2 ≤ j ≤ 5000), Ij is
compared to the tail element of all sequences in S. If the diﬀerence between Ij
and all of the tail elements is larger than a threshold T , a new sequence S|S|+1
is created and S|S|+1 = {Ij}. Additionally, S = S ∪ {S|S|+1}. Otherwise, Ij is
appended to the sequence whose tail element has the smallest diﬀerence with
Ij. Given T , the algorithm returns the number of sequences, i.e., |S|, and the
corresponding sequence sizes, i.e., the number of packets in each sequence.
Our algorithm will return a diﬀerent number of sequences of diﬀerent sizes
for diﬀerent values of T . Ideally, the sequence sizes should be equal, with probing
packets being forwarded at equal rates to the servers. In practice, however, these