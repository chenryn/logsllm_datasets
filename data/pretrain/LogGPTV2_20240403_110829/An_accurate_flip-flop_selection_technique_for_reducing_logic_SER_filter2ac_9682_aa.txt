title:An accurate flip-flop selection technique for reducing logic SER
author:Eric L. Hill and
Mikko H. Lipasti and
Kewal K. Saluja
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
An Accurate Flip-flop Selection Technique for Reducing Logic SER
Eric L. Hill, Mikko H. Lipasti, Kewal K. Saluja
Department of Electrical and Computer Engineering
University of Wisconsin - Madison
{elhill, mikko, saluja}@ece.wisc.edu
Abstract
lent to that of storage structures [11].
The combination ofcontinued technology scaling and in(cid:173)
creased on-chip transistor densities has made vulnerability
to radiation induced so.ft errors a significant design con(cid:173)
cern. In particular, the effects ofthese errors on logic nodes
are predicted to play an increasingly large role in deter(cid:173)
mining the overall failure rate offuture VLSI chips. While
a myriad oftechniques have been proposed to mitigate the
effects ofsoft errors, system designers must ensure that the
application ofthese solutions does not come at the expense
ofother design goals. This work presents a heuristic to se(cid:173)
lectively apply temporal redundancy to .flip-.flops within a
pipelined logic unit, achieving significant reductions in fail(cid:173)
ures associated with soft errors with minimal overhead.
1. Introduction
As computing systems become increasingly ubiquitous,
architects strive to create robust systems capable of operat(cid:173)
ing in a wide variety of environments. In addition to meet(cid:173)
ing performance and power requirements, engineers now
have to spend a significant amount of time ensuring their
designs also meet reliability goals. The combination of
continued technology scaling and increased on-chip transis(cid:173)
tor densities have made vulnerability to radiation-induced
soft errors a significant design concern [8]. The majority
of work on soft errors has focused on understanding and
mitigating their effects on storage structures [3]. In terms
of reducing the overall failure rate, protecting these struc(cid:173)
tures is a sensible starting point, as the majority of transis(cid:173)
tors on a conventional microprocessor die are dedicated to
some form of storage. However, as a consequence of both
the increased use of storage protection schemes and tech(cid:173)
nology scaling, the fraction of the system failure rate due to
soft errors on logic nodes has been increasing dramatically.
A recent study has predicted that for the 50 nm technology
generation the contribution of particle strikes on combina(cid:173)
tionallogic nodes to the overall failure rate will be equiva-
Since architects are concerned with satisfying multiple
design goals simultaneously, low cost reliability solutions
which provide error tolerance at minimal amounts of over(cid:173)
head are increasingly attractive. This is especially true for
many commodity or embedded architectures, where solu(cid:173)
tions relying on full or near-full system redundancy are not
practical. An area overhead of 10% has been suggested as a
reasonable target for academic researchers developing new
mitigation techniques [1].
In order to satisfy these con(cid:173)
straints, the ability to accurately assess which subcompo(cid:173)
nents of a system contribute most significantly to the overall
failure rate is essential.
In this work, a heuristic for placing soft error detectors
(time skewed redundant flip-flops in this work) within a
logic unit is presented and evaluated. The presented algo(cid:173)
rithm is unique in that it enables both qualitative and quanti(cid:173)
tatively accurate conclusions to be drawn about the effect of
each decision made. This accuracy enables logic designers
to devote resources toward reliability solutions in the most
cost-effective manner possible. We evaluate our technique
in the context of hardening pipelined functional units, using
the results of our heuristics to place the detectors. We find
that for the functional units studied in this work, in the best
case a greater than 20X reduction in the soft error rate can
be achieved at a cost of less than 10% additional area.
The rest of this paper is organized as follows. Section 2
provides background on soft errors in logic, as well as the
motivation for this study. A description of the soft error de(cid:173)
tectors used for this work is provided in Section 3. Sections
4 and 5 outline our heuristic for detector placement, and the
infrastructure built for evaluation, respectively. An experi(cid:173)
mental evaluation ofour technique is presented in Section 6.
Related work and conclusions from this study are discussed
in Sections 7 and 8.
1-4244-2398-9/08/$20.00 Â©2008 IEEE
128
DSN 2008: Hill et al.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:17:55 UTC from IEEE Xplore.  Restrictions apply. 
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
2. Background and Motivation
2.1. Background on Logic Soft Errors
Radiation induced transient faults, or soft errors, typi(cid:173)
cally originate from two sources. Soft errors can be caused
by alpha particles present in packaging materials, or by
high-energy neutron particles from cosmic rays. The work
done in this study focuses on soft errors caused by neutron
particles, as recent studies have shown that cosmic radia(cid:173)
tion is now the primary source[II]. Cosmic ray flux is de(cid:173)
pendent on altitude, which means that systems that operate
at higher levels of the atmosphere have significantly higher
SER than those which operate at sea level[ 11 ].
Soft errors occur when radiation particles strike sen(cid:173)
sitive regions of semiconductor devices, injecting charge.
Depending on the sizing of the affected transistor and the
amount of charge injected, a single event effect may be in(cid:173)
duced. Ifthe affected device is part of a memory cell (either
in a storage array or a latch), this injected charge could po(cid:173)
tentially flip the current value stored. This type of event is
typically referred to as a single event upset (SED). If the
device is part of a combinational logic gate, the charge in(cid:173)
jected could trigger the generation ofa single event transient
(SET). An SET is a transient voltage pulse appearing at the
output of the affected combinational gate. SETs only result
in errors if they propagate to and alter the value captured
by a downstream register (a latch or flipflop, depending on
the clocking strategy)[14]. The minimum amount of charge
needed to induce a single event effect is referred to as the
critical charge or Qcrit[ 11]. This work is specifically tar(cid:173)
geted at looking at the effects of SETs, as the primary goal
is reducing the logic component of the soft error rate.
Soft error rates are generally expressed using the metric
of Failures in Time (FIT), which is defined as the number
of failures per 109 hours [8]. In general, the FIT rate can be
calculated in the manner shown in Equation 1.
FIT == (RawStrikeRate) * (Derating)
(1)
The FIT rate of a system is typically computed by multi(cid:173)
plying the Raw Strike Rate (which is a function of the com(cid:173)
ponent area and altitude-dependent neutron flux) by a derat(cid:173)
ing factor. The derating factor is defined as the probability
that a particle strike on a component manifests itself as an
error at an output. There exist three well known masking
phenomena (logical, electrical, and timing window) which
prevent SETs from propagating to and being latched by cir(cid:173)
cuit outputs [11]. Logical masking occurs when a transient
waveform is prevented from propagating from an input to
the output of a gate because of a controlling value at one of
the other inputs. Timing window masking can occur when
a SET propagates successfully from a gate to a downstream
flipflop, but does not arrive during the interval of time when
0.016
0.014 + - - - - - - - - - ; ; : : - - - - - - - - - - '
0.012 +--------+-~~------'
~
'a
-; 0.008 +----------:>_----~------i
J5 0.010 +------------.r----Oc----------;
I
t 0.006 +-------jf---'---------~~
0.004 + - - - - - f - - - - - - - - - - - - - - - - - ;
0.002+--~~--------------i
11
16
21
26
31
output bit podion
Figure 1. 16x16 multiplier derating per bit.
the flipflop is sampling its data. Electrical masking occurs
when the delay of a gate is larger than the duration of the
voltage transient at its input, such that the resulting transient
appearing at the output of the gate is attenuated in terms of
duration and height. Technology scaling has diminished the
significance of each of these masking agents, making soft
errors in logic a much larger concern [11]. This work is
specifically targeted at reducing the derating component of
Equation 1.
2.2 Motivation
As discussed previously, SETs only become errors when
they propagate from a combinational logic gate to an out(cid:173)
put and alter the value that is captured by a downstream
flipflop. As particle strikes occur with equal probability at
any given point in time, individual output bits (flip-flops) in
a circuit timing window mask SETs uniformly. In contrast,
individual output bits can have differing fan-in cones, mean(cid:173)
ing that SETs can potentially propagate to individual output
bits at varying rates. This essentially means that in contrast
to timing window masking, logical masking is not necessar(cid:173)
ily uniform across output bits. A prior study on estimating
SER reports that in multipliers the center bits tend to have
an error rate that is orders of magnitude larger than those
of the bits closer to the most and least significant positions
[12]. The authors of this work refer to this phenomenon as
SER peaking [12]. We have also observed this phenomenon
by modeling a 16x16 integer multiplier and performing sta(cid:173)
tistical fault injection. Figure 1 shows the amount of errors
that occur on each output bit of the multiplier. We believe
that this SER peaking phenomena presents an opportunity
for low cost soft error protection. Ideally, a combinational
multiplier with this behavior could easily be hardened from
logic soft errors by simply protecting the subset of output
flip-flops where SER peaking occurs.
For combinational circuits, the subset of output flip-flops
that need to be protected can be identified by performing
statistical fault injection and observing the number of times
1-4244-2398-9/08/$20.00 Â©2008 IEEE
129
DSN 2008: Hill et al.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:17:55 UTC from IEEE Xplore.  Restrictions apply. 
International Conference on Dependable Systems &Networks: Anchorage, Alaska, June 24-27 2008
particle strike
Data
1 - - - - , - - - - - Q
last5;;
ed FF~~
~B ~""... SOlg.
b_
~) (error
B~ C
intermediate
(
._
0
Figure 2. Fault model for strikes on gates in
pipelined circuit.
each output bit is corrupted.
Identifying a similar subset
of flip-flops in a pipelined circuit is a significantly harder
problem. Figure 2 shows our assumed fault model for a
SET occurring in a pipelined circuit. This is significantly
more complex than the model for a SET in a combinational
circuit, which would only consist of outcomes A, B, and
C. From this model, it is clear that even if a SET propa(cid:173)
gates to and is latched by a flip-flop, that error could still
potentially be masked as it propagates through the ensuing
pipeline stages, never manifesting itself at a circuit output.
In addition to this, it is also possible for an SET to corrupt
multiple intermediate flip-flops in a circuit, and have only a
subset of the corrupted elements be responsible for propa(cid:173)
gating that error to the outputs. Examples of these scenar(cid:173)
ios are provided in Section 4. The methodology presented
in this work accurately identifies the flip-flops which most
significantly impact the failure rate (and thus are the best
location to place SET detectors) in the context of this more
complex fault model.
3. Overview of SET Detection Techniques
This section of the paper provides an overview of SET
detection techniques that could selectively be applied based
on the results of our heuristic. We primarily consider so(cid:173)
lutions which detect SETs by taking multiple flipflop data
samples and comparing the values captured. This is ac(cid:173)
complished by duplicating the capturing flip-flop, and ei(cid:173)
ther time shifting the data input to the duplicate copy, or
time shifting the clock input. Both solutions are conceptu(cid:173)
ally similar, but each have unique advantages and disadvan(cid:173)
tages. This section discusses the trade-offs associated with
each option.
3.1. Time Shifted Clock Inputs
This method of SET detection was inspired by the Ra(cid:173)
zor flip-flop proposed by Ernst et al. [6], although it should
Error
Clock
-.J_~
Figure 3. SeT detection with time shifted
clock.
be noted that the intention of the Razor flip-flop was to al(cid:173)
low for more aggressive dynamic voltage scaling instead of
improving reliability. The principal idea behind this tech(cid:173)
nique is to duplicate the flip-flop of interest, and supply a
delayed clock to one of the flip-flops, as shown in Figure 3.
As flip-flops take their input samples on the rising edge of
the clock, time shifting the clock inputs allows two differ(cid:173)
ent data samples to be taken. A timing diagram of how this
technique detects the presence of errors is shown in Figure
4. Both flip-flops take their data samples during the inter(cid:173)
vals specified by the vertical dotted lines (this work assumes
positive edge triggered flip-flops). Ifthere is a mismatch be(cid:173)
tween the two data samples, the pipeline is flushed, and in(cid:173)
structions can be re-executed. The main trade-off that must
be considered when using a technique like this is related to
how much delay is placed between the main and duplicate
clock signals. A large amount of skew between the main
and shadow clocks detects a large fraction of SETs, but can
potentially create short path issues.
If the skew between
clocks is longer than the shortest path in the circuit, the data
sample taken by the shadow flip-flop could be next unit of
data propagating through the pipeline, potentially resulting
in false positives. The original Razor work dealt with this
problem by manually padding short paths [6].
3.2. Time Shifted Data Inputs
Another equivalent method of SET detection, illustrated
by Figure 5, is to time shift the data rather than the clock
inputs to each flip-flop. This method was inspired by the
work presented in [7]. The timing diagram shown in Figure
6 illustrates how this technique can be used to detect errors.
Like the previously presented solution, there also exists a
trade-off concerning how much skew there should be be(cid:173)
tween the main and shadow data inputs. A large amount
of skew can detect a large fraction of SETs, but if the aug(cid:173)
mented flip-flop is on a critical path, the clock period must
be increased to accommodate the skewing delay.
The best technique for a particular logic unit can vary
1-4244-2398-9/08/$20.00 Â©2008 IEEE
130
DSN 2008: Hill et al.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 13:17:55 UTC from IEEE Xplore.  Restrictions apply. 
International Conference on Dependable Systems & Networks: Anchorage, Alaska, June 24-27 2008
~l