``` calibre21
">
%all;
```
![](3-45.png){.calibre11}
一旦我们重放我们新修改的请求，我们现在就可以看到我们的受害者服务器首先获取并运行了
payload.dtd 文件，然后监听8888端口的 NetCat 处理程序发出二次 Web
请求。当然，GET 请求将采用 base64编码并且我们也将必须对请求进行解码。
更多 XXE payload：
-   [https://gist.github.com/staaldraad/01415b990939494879b4](https://gist.github.com/staaldraad/01415b990939494879b4){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"}
-   [https://github.com/danielmiessler/SecLists/blob/master/Fuzzing/XXE-Fuzzing.txt](https://github.com/danielmiessler/SecLists/blob/master/Fuzzing/XXE-Fuzzing.txt){.pcalibre2
    .calibre9 .pcalibre .pcalibre1 target="_blank"}
## 本章总结 {#3_the_throw_web_application_exploitation.html#本章总结 .calibre12}
虽然这只是你可能遇到的所有不同网络攻击的一小部分，但我希望这些案例能打开你的视野，关于更现代的框架（Node.js）是如何引入旧的和新的攻击。许多常见的应用程序漏洞扫描器往往会错过很多这些更复杂的漏洞，因为它们是基于特定的语言或框架的。我想提出的要点是，为了进行充分的攻击活动，你需要真正理解语言和框架。
:::
:::
[]{#4_the_drive_compromising_the_network.html}
::: page
# 第4章 带球------开始攻击网络 {#4_the_drive_compromising_the_network.html#calibre_toc_7 .book-chapter}
::: section
# 第4章 带球------开始攻击网络 {#4_the_drive_compromising_the_network.html#第4章-带球——开始攻击网络 .calibre6}
> 译者：[\@Snowming](https://github.com/Snowming04){.pcalibre2 .calibre9
> .pcalibre .pcalibre1 target="_blank"}
>
> 校对者：[\@鸫](http://wp.blkstone.me){.pcalibre2 .calibre9 .pcalibre
> .pcalibre1
> target="_blank"}、[\@leitbogioro](https://github.com/leitbogioro/){.pcalibre2
> .calibre9 .pcalibre .pcalibre1 target="_blank"}、@哈姆太郎、@匿名jack
![](4-1.png){.calibre11}
在进行风险评估项目的第二天，你使用 nmap
扫描了目标的全部网段，还启动了漏洞扫描器，但运气不太好，你没有探测出任何
Web
应用程序的初始入口点。这让你感到有些失败，需要反思一下，重新回顾一下之前收集到的所有信息。因为你知道，一旦可以进入目标网络，就可以使用无数的技巧来获得更多的凭证、在域中漫游、利用
AD（活动目录）的特性，最后找到我们要找的东西。当然，这不是一件容易的事。因为你要绕过众多防火墙，还要欺骗管理员，最后还要擦除自己的痕迹。
在上一本书中，本部分着重于使用漏洞扫描器来发现漏洞并利用它们。这是通过使用诸如
Metasploit、打印机漏洞、心脏滴血、Shellshock、SQL
注入等常见漏洞的利用工具来实现的。最近一段时间，爆出了很多严重的远程代码执行漏洞，比如
永恒之蓝（MS017-10）、多个版本的 Jenkins 漏洞、Apache Struts 2、CMS
应用的代码执行漏洞等等。因为本书是以红队的视角来阐述的，因此我们不会过多地关注如何使用这些工具来攻击利用特定的漏洞。相反，我们将关注如何利用公司现有的应用程序，就地取材来发现漏洞，然后攻破公司网络。
在本章中，将集中讨论红队的战术，如何利用公司基础设施、获取身份凭证、探索内部网络以及在主机和网络之间进行漫游。我们将在不运行任何一个漏洞扫描器的前提下完成这项工作。
## 从外网寻找侵入对方系统的登陆凭证 {#4_the_drive_compromising_the_network.html#从外网寻找侵入对方系统的登陆凭证 .calibre12}
作为一个红队成员，找到最初的攻击点可能很麻烦，需要耗费大量的资源。在上本书中，我们尝试过伪造受害者的身份验证页面、购买非常相似的域名来对目标实施钓鱼，以及编写自定义的恶意软件等不同的方法。
有时候，我告诉我的红队队员要保持简单的思想。很多时候，那些令人称赞的高级手段，反而不如一些简单低级的方法管用，最简单的方法往往是最有效的。
最基本的技术之一就是暴力破解密码。但是，作为红队的一员，我们必须考虑如何巧妙地做到这一点。随着公司的发展，公司使用了更多的应用程序和技术工具。对于攻击者来说，这无疑为他们拓宽了进攻的大门。当公司开始暴露在互联网上时，我们看到公司需要对电子邮件（如
Office 365或 OWA）、通信工具（如 Lync、XMPP、WebEx）、协作工具（如
JIRA、Slack、Hipchat、Huddle）和其他外部服务（如 Jenkins、CMS
站点、支持站点）进行身份验证。这些就是我们的目标突破口。
我们试图攻击这些服务器和服务的原因是，我们需要寻找能对受害者的 LDAP 或
AD 这些基础设施进行身份验证的工具。这可以通过 ADFS
方式、单点登录（SSO）方式或者直接使用 AD
域认证等不同的方式来完成。我们需要找到一些可以利用的公共凭证，以便继续进行下一步的攻击。在信息收集阶段，我们发现并识别了大量的电子邮箱地址和用户名帐号，我们将对这些获取到的信息进行一种叫"密码喷洒"（Password
Spraying）的攻击。我们将针对所有不同的应用程序，尝试猜测基本密码，正如我们在现实世界的
APT 活动中看到的那样（ US-CERT
文章：[http://bit.ly/2qyB9rb](http://bit.ly/2qyB9rb){.pcalibre2
.calibre9 .pcalibre .pcalibre1 target="_blank"} ）。
> 译者注："密码喷洒攻击"（Password Spray
> Attack）并不等同于"密码爆破攻击"（Brute Force
> Attack）。事实上，这两种攻击是相反的。\
> 在密码爆破攻击中，黑客选择一个易受攻击的 ID
> 并一个接一个地输入密码，希望有一些密码可以让他们进入。基本上，密码爆破是用多个密码尝试破解同一个
> ID。而密码喷洒攻击，是用一个密码来尝试多个用户 ID，以便至少有一个用户
> ID
> 被泄露。对于密码喷洒攻击，黑客使用社交工程或其他网络钓鱼方法收集多个用户
> ID。通常情况下，至少有一个用户使用简单的密码，如12345678甚至是
> p@ssw0rd。\
> 在密码喷洒攻击中，黑客会为他或她收集的所有用户 ID
> 应用精心构造的密码。因此，密码喷洒攻击可以定义为将相同的密码应用于组织中的多个用户帐户，目的是安全的对其中一个帐户进行未授权访问。\
> 暴力破解的问题在于，在使用不同密码进行一定次数的尝试后，系统可能会被锁定。为了避免这种情况，产生了收集用户
> ID
> 并将可能的密码应用于它们的想法。使用密码喷洒攻击时，黑客也会采取一些预防措施。例如，如果他们尝试将
> password1应用于所有用户帐户，则在完成第一轮后，他们不会立即开始将
> password2应用于这些帐户。他们将在黑客攻击中留出至少30分钟的时间。\
> 参考资料：[Password Spray Attack Definition and Defending
> yourself](https://www.thewindowsclub.com/password-spray-attack){.pcalibre2
> .calibre9 .pcalibre .pcalibre1 target="_blank"}
那么，为什么要针对**不同的**外部服务进行身份验证呢？这是因为：
-   有些身份验证程序不会记录从外部服务尝试验证的次数。
-   虽然我们通常看到电子邮件或 VPN
    系统要求双因素验证（2FA），但面向外部的即时通讯系统可能不需要。
-   密码重用的可能性非常高。
-   有的时候，当使用 AD
    账户多次重复登录失败时，外部系统并不会将此账户锁定。
有很多工具可以实现密码喷洒攻击，但是，我们只关注其中的几个。第一个是来自
[Spiderlabs](http://bit.ly/2EJve6N){.pcalibre2 .calibre9 .pcalibre
.pcalibre1 target="_blank"} 的名为 `Spray`{.calibre14 .pcalibre4
.pcalibre3} 的工具。尽管 Spray
使用起来有点复杂，但我非常喜欢它所支持的一些服务。例如，它支持 SMB、OWA
和 Lync（Microsoft Chat）。
要使用 Spray，你需要指定以下几个参数:
``` calibre21
spray.sh -owa      
```
正如你将在下面的示例中看到的那样，我们使用 Spray 对 cyberspacekittens
上的一个 OWA
邮件服务器（该服务器现在已经下线了）进行密码破解，当它使用密码
Spring2018与用户名 peter 尝试进行配对时，成功的登进了系统。
我经常遇到的一个问题是，应该使用哪个密码进行尝试？因为在锁定帐号之前，只能不停的多次尝试密码。事实上这个问题没有正确答案，使用哪个密码非常依赖于这家公司的密码设置规定。我们过去可以使用一些简单密码进行尝试，比如"Password123"，因为总有一些人会因为图方便而使用简单密码。但随着人们安全意识的提高，现在现在越来越少人使用这种密码了，因而成功率也就变低了。现在的话，我们一般结合使用以下规则的一条到多条来构建我们的尝试密码：
-   月份和年份的数字组合。
-   当地的球队和球员的数字编号组合。
-   查看一些以前泄露出来的数据，找一些有没有目标公司的用户资料泄露，因为相同公司的用户可能会使用类似的密码。
-   公司名称+年份/编号/特殊的字符 (如!,\$,#,@）
编好了密码之后，我们就可以24小时不间断缓慢地运行我们的账号破解程序，慢是为了避免触发任何帐号锁定。请记住，我们仅仅匹配成功一个账号就可以进入大门了！
![](4-2.png){.calibre11}\
*此图是使用 Curl 对 OWA 进行身份认证的快速脚本*
配置 Spray
非常简单，而且其配置文件可以很容易地给其他类似程序参考使用。你需要做的是捕获登录密码时的
POST 请求（可以在 Burp Suite
中完成），复制所有请求数据，并将其保存到文件中。对于任何将要被破解的字段，你需要提供字符串"sprayuser"和"spraypassword"。
例如，在我们的例子中，`post-request.txt`{.calibre14 .pcalibre4
.pcalibre3} 文件如下所示：
``` calibre21
POST /owa/auth.owa HTTP/1.1
Host: mail.cyberspacekittens.com
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0
Accept: text/html，application/xhtml+xml，application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: https://mail.cyberspacekittens.com/owa/auth/logon.aspx?replaceCurrent=1&url=https%3a%2f%2fmail.cyberspacekittens.com%2fowa%2f
Cookie: ClientId=VCSJKT0FKWJDYJZIXQ; PrivateComputer=true; PBack=0
Connection: close
Upgrade-Insecure-Requests: 1
Content-Type: application/x-www-form-urlencoded
Content-Length: 131
destination=https%3A%2F%2Fcyberspacekittens.com%2Fowa%2F&flags=4&forcedownlevel=0
```
> 译者注：最后一个 `destination`{.calibre14 .pcalibre4 .pcalibre3}
> 字段的内容本书的英文版本貌似显示不全，至少是我拿到的英文版本 PDF
> 显示不全。我只是简单的复制自 PDF，读者注意一下。
如前所述，spray.sh 的另一个好处是它还支持 SMB 和
Lync。另一种具备这个特性的工具称为
[Ruler](https://github.com/sensepost/ruler){.pcalibre2 .calibre9
.pcalibre .pcalibre1
target="_blank"}，这个工具还可以对密码喷洒攻击得到的结果进行进一步处理。Ruler
是 Sensepost 安全团队编写的一个工具，它允许你通过 MAPI/HTTP 或 RPC/HTTP
协议与 Exchange 服务器交互。虽然我们主要讨论使用 Ruler
来进行密码破解/信息收集，但是这个工具也支持一些持久性漏洞利用攻击，我们将略微提及这点。
我们可以用的 Ruler 的第一个功能类似于
Spray，它通过对用户名和密码进行匹配来进行账号的破解。Ruler
将载入用户名列表和密码，并尝试查找登陆凭证。它将自动寻找 Exchange
服务器的关键配置并尝试查找登陆凭证。
运行 Ruler：
``` calibre21
ruler --domain cyberspacekittens.com brute --users ./users.txt --passwords ./passwords.txt
```