>     **Source**: \*
>     **Service Tags**: AzureMonitor
>     **Destination Ports**: 443
### Configure the route table
You must configure the [route table](/azure/virtual-network/virtual-networks-udr-overview) of your cluster's subnet with next hop *Internet* to prevent asymmetric routes issues.
#### Configure the route table using subnet delegation
We recommend using subnet delegation to configure the route table for your cluster's deployment, similarly to how it was done for [NSG rules](#configure-network-security-group-rules-using-subnet-delegation). By enabling subnet delegation on the cluster's subnet, you enable the service to configure and update the route table for you.
#### Configure the route table manually
Alternatively, you can manually configure the route table. By default, deploying a cluster into a virtual network enforces subnet delegation for "Microsoft.Kusto/clusters" to be configured. Opting out of this requirement is possible using the [Preview features](https://portal.azure.com/#blade/Microsoft_Azure_Resources/PreviewFeaturesBlade) pane.
 > [!WARNING]
 > Manually configuring the route table for your cluster is not trivial and requires you to constantly monitor this article for changes. We highly recommended using subnet delegation for your cluster or, if you prefer, consider using a [Private Endpoint](security-network-private-endpoint.md) based solution.
To manually configure the [route table](/azure/virtual-network/virtual-networks-udr-overview) you must define it on the subnet. You need to add the [management](vnet-deployment.md#azure-data-explorer-management-ip-addresses) and [health monitoring](vnet-deployment.md#health-monitoring-addresses) addresses with next hop *Internet*.
For example, for **West US** region, the following UDRs must be defined:
| Name | Address Prefix | Next Hop |
| --- | --- | --- |
| ADX_Management | 13.64.38.225/32 | Internet |
| ADX_Monitoring | 23.99.5.162/32 | Internet |
| ADX_Monitoring_1 | 40.80.156.205/32 | Internet |
| ADX_Monitoring_2 | 40.80.152.218/32 | Internet |
| ADX_Monitoring_3 | 104.42.156.123/32 | Internet |
| ADX_Monitoring_4 | 104.42.216.21/32 | Internet |
| ADX_Monitoring_5 | 40.78.63.47/32 | Internet |
| ADX_Monitoring_6 | 40.80.156.103/32 | Internet |
| ADX_Monitoring_7 | 40.78.62.97/32 | Internet |
| ADX_Monitoring_8 | 40.80.153.6/32 | Internet |
## How to discover dependencies automatically
Azure Data Explorer provides an API that allows customers to discover all external outbound dependencies (FQDNs) programmatically.
These outbound dependencies will allow customers to set up a Firewall at their end to allow management traffic through the dependent FQDNs. Customers can have these firewall appliances either in Azure or on-premises. The latter might cause additional latency and might impact the service performance. Service teams will need to test out this scenario to evaluate impact on the service performance.
The [ARMClient](https://chocolatey.org/packages/ARMClient) is used to demonstrate the REST API using PowerShell.
1. Sign in with ARMClient
   ```powerShell
   armclient login
   ```
2. Invoke diagnose operation
    ```powershell
    $subscriptionId = ''
    $clusterName = ''
    $resourceGroupName = ''
    $apiversion = '2021-01-01'
    armclient get /subscriptions/$subscriptionId/resourceGroups/$resourceGroupName/providers/Microsoft.Kusto/clusters/$clusterName/OutboundNetworkDependenciesEndpoints?api-version=$apiversion
    ```
3. Check the response
    ```javascript
    {
       "value":
       [
        ...
          {
            "id": "/subscriptions//resourceGroups//providers/Microsoft.Kusto/Clusters//OutboundNetworkDependenciesEndpoints/AzureActiveDirectory",
            "name": "/AzureActiveDirectory",
            "type": "Microsoft.Kusto/Clusters/OutboundNetworkDependenciesEndpoints",
            "etag": "\"\"",
            "location": "",
            "properties": {
              "category": "Azure Active Directory",
              "endpoints": [
                {
                  "domainName": "login.microsoftonline.com",
                  "endpointDetails": [
                    {
                      "port": 443
                    }
                  ]
                },
                {
                  "domainName": "graph.windows.net",
                  "endpointDetails": [
                    {
                      "port": 443
                    }
                  ]
                }
              ],
              "provisioningState": "Succeeded"
            }
          },
          {
            "id": "/subscriptions//resourceGroups//providers/Microsoft.Kusto/Clusters//OutboundNetworkDependenciesEndpoints/InternalTracing",
            "name": "/InternalTracing",
            "type": "Microsoft.Kusto/Clusters/OutboundNetworkDependenciesEndpoints",
            "location": "Australia Central",
            "properties": {
              "category": "Internal Tracing",
              "endpoints": [
                {
                  "domainName": "ingest-..kusto.windows.net",
                  "endpointDetails": [
                    {
                      "port": 443,
                      "ipAddress": "25.24.23.22"
                    }
                  ]
                }
              ],
              "provisioningState": "Succeeded"
            }
        }
        ...
       ]
   }
    ```
The outbound dependencies cover categories such as *Microsoft Entra ID*, *Azure Monitor*, *Certificate Authority*, *Azure Storage*, and *Internal Tracing*. In each category, there's a list of domain names and ports that are needed to run the service. They can be used to programmatically configure the firewall appliance of choice.
## Deploy Azure Data Explorer cluster into your virtual network using an Azure Resource Manager template
To deploy Azure Data Explorer cluster into your virtual network, use the [Deploy Azure Data Explorer cluster into your virtual network](https://azure.microsoft.com/resources/templates/kusto-vnet/) Azure Resource Manager template.
This template creates the cluster, virtual network, subnet, network security group, and public IP addresses.
## Known limitations
* Virtual network resources with deployed clusters don't support the [move to a new resource group or subscription](/azure/azure-resource-manager/management/move-resource-group-and-subscription) operation.
* Public IP address resources used for the cluster engine or the data management service don't support the move to a new resource group or subscription operation.
* It's not possible to use the "private-" DNS prefix of virtual network injected Azure Data Explorer clusters as part of your query