## ZFS 12\*SATA JBOD vs MSA 2312FC 24\*SAS  
### 作者                                                                                                                                                                             
digoal                                                                                                                                                                               
### 日期                                                                                                                                                                                              
2014-06-19                                                                                                                                                                     
### 标签                                                                                                                                                                           
PostgreSQL , Linux , ZFS                                                                                                                                                                         
----                                                                                                                                                                                     
## 背景            
今天拿了两台主机PK一下zfs和存储的性能.  
ZFS主机  
```  
联想 Reno/Raleigh  
8核 Intel(R) Xeon(R) CPU E5-2407 0 @ 2.20GHz  
24GB内存  
12*SATA 2TB, 其中2块RAID1, 另外10块作为zpool (raidz 9 + spare 1 + raid1的一个分区作为log)  
```  
文件系统特殊项atime=off, compression=lz4 压缩比 约3.16  
存储主机  
```  
DELL R610  
16核 Intel(R) Xeon(R) CPU           E5630  @ 2.53GHz  
32GB内存  
存储2台MSA2312FC, 分别12块300G SAS盘. 10块做的RAID 10. 2块hot spare.  
```  
其中一台存储的配置  
```  
Controllers  
-----------  
Controller ID: A  
Serial Number: 3CL947R707  
Hardware Version: 56  
CPLD Version: 8  
Disks: 12  
Vdisks: 1  
Cache Memory Size (MB): 1024  
Host Ports: 2  
Disk Channels: 2  
Disk Bus Type: SAS  
Status: Running  
Failed Over: No  
Fail Over Reason: Not applicable  
# show disks  
Location Serial Number         Vendor   Rev  How Used   Type   Size      
  Rate(Gb/s)  SP Status       
-----------------------------------------------------------------------  
1.1      3QP2EN7V00009006CJT4  SEAGATE  0004 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.2      3QP232CM00009952PTMA  SEAGATE  0004 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.3      3QP2GKLZ00009008V1VA  SEAGATE  0004 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.4      3QP2G2LL00009008WAYU  SEAGATE  0004 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.5      3QP2EN0700009007DAPA  SEAGATE  0004 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.6      3QP2G6AE00009008V39E  SEAGATE  0004 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.7      6SJ4ZX1S0000N239DF6Q  SEAGATE  0008 GLOBAL SP  SAS    300.0GB   
  3.0            OK           
1.8      6SJ4ZTLT0000N239FM3P  SEAGATE  0008 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.9      6SJ4ZY6H0000N2407XKP  SEAGATE  0008 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.10     3QP2FVR100009008Z16H  SEAGATE  0004 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.11     3QP2DZEX00009008WBN9  SEAGATE  0004 VDISK VRSC SAS    300.0GB   
  3.0            OK           
1.12     3QP2CXWS00009008WBLN  SEAGATE  0004 GLOBAL SP  SAS    300.0GB   
  3.0            OK           
-----------------------------------------------------------------------  
Name Size     Free    Own Pref   RAID   Disks Spr Chk  Status Jobs        
  Serial Number                      
------------------------------------------------------------------------  
vd01 1498.4GB 100.4GB A   A      RAID10 10    0   16k  FTOL   VRSC 66%    
  00c0ffda61090000144de15100000000  
# show cache  
System Cache Parameters  
-----------------------  
Operation Mode: Active-Active ULP  
  Controller A Cache Parameters  
  -----------------------------  
  Write Back Status: Enabled  
  CompactFlash Status: Installed  
  Cache Flush: Enabled  
  Controller B Cache Parameters  
  -----------------------------  
  Write Back Status: Enabled  
  CompactFlash Status: Installed  
  Cache Flush: Enabled  
```  
存储文件系统  
```  
[root@db- ~]# lvs  
  LV   VG       Attr   LSize    Origin Snap%  Move Log Copy%  Convert  
  lv01 vgdata01 -wi-ao  300.00G                                        
  lv02 vgdata01 -wi-ao  100.00G                                        
  lv03 vgdata01 -wi-ao    1.17T                                        
  lv04 vgdata01 -wi-ao 1001.99G                                        
[root@db- ~]# pvs  
  PV                            VG       Fmt  Attr PSize PFree  
  /dev/mpath/d09_msa1_vd01vol01 vgdata01 lvm2 a--  1.27T    0   
  /dev/mpath/d09_msa2_vd01vol01 vgdata01 lvm2 a--  1.27T    0   
```  
使用ext4, noatime, nodiratime加载.  
测试场景是PostgreSQL 9.2.8  
目前只测试了读速度, 因为zfs这台是流复制备机. (数据库配置完全一致)  
zfs下18G表的COUNT查询  
```  
digoal=> select count(*) from tbl;  
  count     
----------  
 48391818  
(1 row)  
Time: 9998.065 ms  
```  
存储下的查询  
```  
digoal=> select count(*) from tbl;  
  count     
----------  
 48391818  
(1 row)  
Time: 64707.770 ms  
```  
这个测试数据在ZFS中LZ4压缩算法后缩小了2.5倍左右.  
```  
pg_relation_filepath                 
-------------------------------------------------  
 pg_tblspc/16384/PG_9.2_201204301/70815/10088356  
> ll -h pg_tblspc/16384/PG_9.2_201204301/70815/10088356*  
-rw------- 1 postgres postgres 1.0G Jun 19 00:59 pg_tblspc/16384/PG_9.2_201204301/70815/10088356  
-rw------- 1 postgres postgres 1.0G Jun 19 04:24 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.1  
-rw------- 1 postgres postgres 1.0G Jun 19 01:21 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.10  
-rw------- 1 postgres postgres 1.0G Jun 19 05:15 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.11  
-rw------- 1 postgres postgres 1.0G Jun 19 04:52 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.12  
-rw------- 1 postgres postgres 1.0G Jun 19 01:50 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.13  
-rw------- 1 postgres postgres 1.0G Jun 19 04:22 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.14  
-rw------- 1 postgres postgres 1.0G Jun 19 03:32 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.15  
-rw------- 1 postgres postgres 1.0G Jun 19 02:05 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.16  
-rw------- 1 postgres postgres 575M Jun 19 04:26 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.17  
-rw------- 1 postgres postgres 1.0G Jun 19 04:30 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.2  
-rw------- 1 postgres postgres 1.0G Jun 19 01:27 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.3  
-rw------- 1 postgres postgres 1.0G Jun 19 03:24 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.4  
-rw------- 1 postgres postgres 1.0G Jun 19 00:52 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.5  
-rw------- 1 postgres postgres 1.0G Jun 19 03:39 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.6  
-rw------- 1 postgres postgres 1.0G Jun 19 04:53 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.7  
-rw------- 1 postgres postgres 1.0G Jun 19 00:49 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.8  
-rw------- 1 postgres postgres 1.0G Jun 19 05:14 pg_tblspc/16384/PG_9.2_201204301/70815/10088356.9  
-rw------- 1 postgres postgres 4.5M Jun 19 03:38 pg_tblspc/16384/PG_9.2_201204301/70815/10088356_fsm  
-rw------- 1 postgres postgres 288K Jun 19 05:12 pg_tblspc/16384/PG_9.2_201204301/70815/10088356_vm  
du -sh pg_tblspc/16384/PG_9.2_201204301/70815/10088356*  
415M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356  
405M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.1  
427M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.10  
428M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.11  
425M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.12  
425M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.13  
427M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.14  
427M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.15  
428M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.16  
237M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.17  
403M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.2  
413M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.3  
427M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.4  
432M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.5  
423M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.6  
425M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.7  
433M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.8  
428M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356.9  
3.5M    pg_tblspc/16384/PG_9.2_201204301/70815/10088356_fsm  
36K     pg_tblspc/16384/PG_9.2_201204301/70815/10088356_vm  
```  
写速度测试补充  
测试模型 :   
```  
postgres=# create table test (id int primary key, info text, crt_time timestamp);  
CREATE TABLE  
postgres=# create or replace function f(v_id int) returns void as   
$$  
declare  
begin  
  update test set info=md5(now()::text),crt_time=now() where id=v_id;  
  if not found then  
    insert into test values (v_id, md5(now()::text), now());           
  end if;  
  return;  