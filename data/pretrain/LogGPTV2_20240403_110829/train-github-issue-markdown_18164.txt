If I wrap the playwright test object with our own custom test class, no tests
run. Importing the playwright test object into the spec file directly works as
expected.
I am attempting to move a large codebase from a Selenium based framework
(theintern.io) to playwright. We already have a strong test API that the
framework implementation sits behind, unfortunately when it comes to
implementing the test runner part of that API using Playwright we are running
into an issue where it doesn't seem to find any thing to run.
The repo below has a very simple repro case.  
Importing `test` from `@playwight/test` works as expected, but as soon as I
try and use it from my wrapper class, nothing runs.
**Test**
    import { MyBdd } from "../bdd";
    // import { test } from "@playwright/test";
    MyBdd.test("run google", async (page) => {
      // test("run google", async ({ page }) => {
      await page.goto("https://www.google.com");
      await page.goto("https://www.google.com/");
      await page.getByRole("button", { name: "Reject all" }).click();
      await page.getByRole("combobox", { name: "Search" }).click();
      await page.getByRole("combobox", { name: "Search" }).fill("bob");
      await page.getByRole("combobox", { name: "Search" }).press("Enter");
    });
**Test wrapper**
    import { test, Page } from "@playwright/test";
    export class MyBdd {
      public static describe(name: string, func: () => void) {
        return test.describe(name, func);
      }
      public static before(func: () => void) {
        return test.beforeAll(func);
      }
      public static test(name: string, func: (args: Page) => Promise) {
        return test(name, (args) => func(args.page));
      }
    }
### System info
  * Playwright Version: [v1.33.0]
  * Operating System: [All]
  * Browser: [All]
  * Other info:
### Source code
  * [ x] I provided exact source code that allows reproducing the issue locally.
**Link to the GitHub repository with the repro**  
https://github.com/David-Hart-i2/playwright-bdd-test
**Steps**
  * [Run the test]
**Expected**  
The test to be found and run
**Actual**
The test doesn't seem to be found. I get the output like a test has been run,
but with zero tests.