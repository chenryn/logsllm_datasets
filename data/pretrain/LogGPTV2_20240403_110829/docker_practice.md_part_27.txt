[root@s26 ~]# service docker stop
[root@s26 ~]# cd /var/lib/
[root@s26 lib]# mv docker /storage/
[root@s26 lib]# ln -s /storage/docker/ docker
[root@s26 lib]# ls -la docker
lrwxrwxrwx. 1 root root 15 11月 17 13:43 docker -> /storage/dock
er
[root@s26 lib]# service docker start
339
附录一：常见问题总结
使用内存和 swap 限制启动容器时候报警
告：“WARNING: Your kernel does not support
cgroup swap limit. WARNING: Your kernel does
not support swap limit capabilities. Limitation
discarded.”？
答：这是因为系统默认没有开启对内存和 swap 使用的统计功能，引入该功能会带
来性能的下降。要开启该功能，可以采取如下操作：
编辑 /etc/default/grub 文件（Ubuntu 系统为例），配置
GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1" ；
更新 grub： $ sudo update-grub ；
重启系统，即可。
Docker 与虚拟化
Docker 与 LXC（Linux Container）有何不同？
答：LXC 利用 Linux 上相关技术实现了容器。Docker 则在如下的几个方面进行了
改进：
移植性：通过抽象容器配置，容器可以实现从一个平台移植到另一个平台；
镜像系统：基于 AUFS 的镜像系统为容器的分发带来了很多的便利，同时共同
的镜像层只需要存储一份，实现高效率的存储；
版本管理：类似于Git的版本管理理念，用户可以更方便的创建、管理镜像文
件；
仓库系统：仓库系统大大降低了镜像的分发和管理的成本；
周边工具：各种现有工具（配置管理、云平台）对 Docker 的支持，以及基于
Docker的 PaaS、CI 等系统，让 Docker 的应用更加方便和多样化。
Docker 与 Vagrant 有何不同？
答：两者的定位完全不同。
340
附录一：常见问题总结
Vagrant 类似 Boot2Docker（一款运行 Docker 的最小内核），是一套虚拟机
的管理环境。Vagrant 可以在多种系统上和虚拟机软件中运行，可以在
Windows，Mac 等非 Linux 平台上为 Docker 提供支持，自身具有较好的包装
性和移植性。
原生的 Docker 自身只能运行在 Linux 平台上，但启动和运行的性能都比虚拟
机要快，往往更适合快速开发和部署应用的场景。
简单说：Vagrant 适合用来管理虚拟机，而 Docker 适合用来管理应用环境。
开发环境中 Docker 和 Vagrant 该如何选择？
答： Docker 不是虚拟机，而是进程隔离，对于资源的消耗很少，但是目前需要
Linux 环境支持。Vagrant 是虚拟机上做的封装，虚拟机本身会消耗资源。
如果本地使用的 Linux 环境，推荐都使用 Docker。
如果本地使用的是 OSX 或者 Windows 环境，那就需要开虚拟机，单一开发环境下
Vagrant 更简单；多环境开发下推荐在 Vagrant 里面再使用 Docker 进行环境隔
离。
其它
Docker 能在非 Linux 平台（比如 Windows 或
MacOS）上运行么？
答：可以。目前需要使用 docker for mac、boot2docker 等软件创建一个轻量级的
Linux 虚拟机层。
如何将一台宿主主机的 docker 环境迁移到另外一台宿
主主机
答：停止 Docker 服务。将整个 Docker 存储文件夹复制到另外一台宿主主机，然
后调整另外一台宿主主机的配置即可。
如何进入 Docker 容器的网络命名空间？
341
附录一：常见问题总结
答：Docker 在创建容器后，删除了宿主主机上 /var/run/netns 目录中的相关
的网络命名空间文件。因此，在宿主主机上是无法看到或访问容器的网络命名空间
的。
用户可以通过如下方法来手动恢复它。
首先，使用下面的命令查看容器进程信息，比如这里的1234。
$ docker inspect --format='{{. State.Pid}} ' $container_id
1234
接下来，在 /proc 目录下，把对应的网络命名空间文件链接到 /var/run/netns 目
录。
$ sudo ln -s /proc/1234/ns/net /var/run/netns/
然后，在宿主主机上就可以看到容器的网络命名空间信息。例如
$ sudo ip netns show
1234
此时，用户可以通过正常的系统命令来查看或操作容器的命名空间了。例如修改容
器的 IP 地址信息为 172.17.0.100/16 。
$ sudo ip netns exec 1234 ifconfig eth0 172.17.0.100/16
如何获取容器绑定到本地那个 veth 接口上？
答：Docker 容器启动后，会通过 veth 接口对连接到本地网桥，veth 接口命名跟容
器命名毫无关系，十分难以找到对应关系。
最简单的一种方式是通过查看接口的索引号，在容器中执行 ip a 命令，查看到
本地接口最前面的接口索引号，如 205 ，将此值加上 1，即 206 ，然后在本地
主机执行 ip a 命令，查找接口索引号为 206 的接口，两者即为连接的 veth
接口对。
342
附录一：常见问题总结
343
附录二：热门镜像介绍
热门镜像介绍
本章将介绍一些热门镜像的功能，使用方法和生成它们的 Dockerfile 等。包括
Ubuntu、CentOS、MySQL、MongoDB、Redis、Nginx、Wordpress、Node.js
等。
344
Ubuntu
Ubuntu
基本信息
Ubuntu 是流行的 Linux 发行版，其自带软件版本往往较新一些。
该仓库位于 https://hub.docker.com/_/ubuntu/ ，提供了 Ubuntu 从 12.04 ~ 16.10
各个版本的镜像。
使用方法
默认会启动一个最小化的 Ubuntu 环境。
$ docker run --name some-ubuntu -i -t ubuntu
root@523c70904d54:/#
Dockerfile
12.04 版本
FROM scratch
ADD precise-core-amd64.tar.gz /
# a few minor docker-specific tweaks
# see https://github.com/dotcloud/docker/blob/master/contrib/mki
mage/debootstrap
RUN echo '#!/bin/sh' > /usr/sbin/policy-rc.d \
&& echo 'exit 101' >> /usr/sbin/policy-rc.d \
&& chmod +x /usr/sbin/policy-rc.d \
\
&& dpkg-divert --local --rename --add /sbin/initctl \
&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \
&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \
\
&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-
speedup \
345
Ubuntu
\
&& echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/
*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin
|| true"; };' > /etc/apt/apt.conf.d/docker-clean \
&& echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/ar
chives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/ap
t/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean \
&& echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache ""
;' >> /etc/apt/apt.conf.d/docker-clean \
\
&& echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/d
ocker-no-languages \
\
&& echo 'Acquire::GzipIndexes "true"; Acquire::CompressionTy
pes::Order:: "gz";' > /etc/apt/apt.conf.d/docker-gzip-indexes
# delete all the apt list files since they're big and get stale
quickly
RUN rm -rf /var/lib/apt/lists/*
# this forces "apt-get update" in dependent images, which is als
o good
# enable the universe
RUN sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.lis
t
# upgrade packages for now, since the tarballs aren't updated fr
equently enough
RUN apt-get update && apt-get dist-upgrade -y && rm -rf /var/lib
/apt/lists/*
# overwrite this with 'CMD []' in a dependent Dockerfile
CMD ["/bin/bash"]
14.04 版本
FROM scratch
ADD trusty-core-amd64.tar.gz /
346
Ubuntu
# a few minor docker-specific tweaks
# see https://github.com/dotcloud/docker/blob/master/contrib/mki
mage/debootstrap
RUN echo '#!/bin/sh' > /usr/sbin/policy-rc.d \
&& echo 'exit 101' >> /usr/sbin/policy-rc.d \
&& chmod +x /usr/sbin/policy-rc.d \
\
&& dpkg-divert --local --rename --add /sbin/initctl \
&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \
&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \
\
&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-
speedup \
\
&& echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/
*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin
|| true"; };' > /etc/apt/apt.conf.d/docker-clean \
&& echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/ar
chives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/ap
t/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean \
&& echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache ""
;' >> /etc/apt/apt.conf.d/docker-clean \
\
&& echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/d
ocker-no-languages \
\
&& echo 'Acquire::GzipIndexes "true"; Acquire::CompressionTy
pes::Order:: "gz";' > /etc/apt/apt.conf.d/docker-gzip-indexes
# delete all the apt list files since they're big and get stale
quickly
RUN rm -rf /var/lib/apt/lists/*
# this forces "apt-get update" in dependent images, which is als
o good
# enable the universe
RUN sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.lis
t
# upgrade packages for now, since the tarballs aren't updated fr
347
Ubuntu
equently enough
RUN apt-get update && apt-get dist-upgrade -y && rm -rf /var/lib
/apt/lists/*
# overwrite this with 'CMD []' in a dependent Dockerfile
CMD ["/bin/bash"]
16.04 版本
FROM scratch
ADD ubuntu-xenial-core-cloudimg-amd64-root.tar.gz /
# a few minor docker-specific tweaks
# see https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8ee
c0740716226fadb3735c/contrib/mkimage/debootstrap
RUN set -xe \
\
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec074
0716226fadb3735c/contrib/mkimage/debootstrap#L40-L48
&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \
&& echo 'exit 101' >> /usr/sbin/policy-rc.d \
&& chmod +x /usr/sbin/policy-rc.d \
\
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec074
0716226fadb3735c/contrib/mkimage/debootstrap#L54-L56
&& dpkg-divert --local --rename --add /sbin/initctl \
&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \
&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \
\
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec074
0716226fadb3735c/contrib/mkimage/debootstrap#L71-L78
&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-
speedup \
\
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec074
0716226fadb3735c/contrib/mkimage/debootstrap#L85-L105
&& echo 'DPkg::Post-Invoke { "rm -f /var/cache/apt/archives/
*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin
|| true"; };' > /etc/apt/apt.conf.d/docker-clean \
348
Ubuntu
&& echo 'APT::Update::Post-Invoke { "rm -f /var/cache/apt/ar
chives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/ap
t/*.bin || true"; };' >> /etc/apt/apt.conf.d/docker-clean \
&& echo 'Dir::Cache::pkgcache ""; Dir::Cache::srcpkgcache ""
;' >> /etc/apt/apt.conf.d/docker-clean \
\
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec074
0716226fadb3735c/contrib/mkimage/debootstrap#L109-L115
&& echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/d
ocker-no-languages \
\
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec074
0716226fadb3735c/contrib/mkimage/debootstrap#L118-L130
&& echo 'Acquire::GzipIndexes "true"; Acquire::CompressionTy
pes::Order:: "gz";' > /etc/apt/apt.conf.d/docker-gzip-indexes \
\
# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec074
0716226fadb3735c/contrib/mkimage/debootstrap#L134-L151
&& echo 'Apt::AutoRemove::SuggestsImportant "false";' > /etc
/apt/apt.conf.d/docker-autoremove-suggests
# delete all the apt list files since they're big and get stale
quickly
RUN rm -rf /var/lib/apt/lists/*
# this forces "apt-get update" in dependent images, which is als
o good
# enable the universe
RUN sed -i 's/^#\s*\(deb.*universe\)$/\1/g' /etc/apt/sources.lis
t
# overwrite this with 'CMD []' in a dependent Dockerfile
CMD ["/bin/bash"]
349
CentOS
CentOS
基本信息
CentOS 是流行的 Linux 发行版，其软件包大多跟 RedHat 系列保持一致。
该仓库位于 https://hub.docker.com/_/centos/ ，提供了 CentOS 从 5 ~ 7 各个版本