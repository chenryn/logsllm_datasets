title:MagAttack: Guessing Application Launching and Operation via Smartphone
author:Yushi Cheng and
Xiaoyu Ji and
Wenyuan Xu and
Hao Pan and
Zhuangdi Zhu and
Chuang-Wen You and
Yi-Chao Chen and
Lili Qiu
MagAttack: Guessing Application Launching and Operation via
Smartphone
Yushi Cheng
1Zhejiang University
2Alibaba-Zhejiang University Joint
Institute of Frontier Technologies
PI:EMAIL
Hao Pan
Shanghai Jiao Tong University
PI:EMAIL
Xiaoyu Ji∗
1Zhejiang University
2Alibaba-Zhejiang University Joint
Institute of Frontier Technologies
PI:EMAIL
Zhuangdi Zhu
Michigan State University
PI:EMAIL
Wenyuan Xu
Zhejiang University
PI:EMAIL
Chuang-Wen You
National Taiwan University
PI:EMAIL
Yi-Chao Chen
University of Texas at Austin
PI:EMAIL
Lili Qiu
University of Texas at Austin
PI:EMAIL
ABSTRACT
Mobile devices have emerged as the most popular platforms to ac-
cess information. However, they have also become a major concern
of privacy violation and previous researches have demonstrated
various approaches to infer user privacy based on mobile devices.
In this paper, we study a new side channel of a laptop that could be
harvested by a commercial-off-the-shelf (COTS) mobile device, e.g.,
a smartphone. We propose MagAttack, which exploits the electro-
magnetic (EM) side channel of a laptop to infer user activities, i.e.,
application launching and application operation. The key insight
of MagAttack is that applications are discrepant in essence due to
the different compositions of instructions, which can be reflected
on the CPU power consumption, and thus the corresponding EM
emissions. MagAttack is challenging since that EM signals are noisy
due to the dynamics of applications and the limited sampling rate of
the built-in magnetometers in COTS mobile devices. We overcome
these challenges and convert noisy coarse-grained EM signals to
robust fine-grained features. We implement MagAttack on both an
iOS and an Android smartphone without any hardware modifica-
tion, and evaluate its performance with 13 popular applications and
50 top websites in China. The results demonstrate that MagAttack
can recognize aforementioned 13 applications with an average ac-
curacy of 98.6%, and figure out the visiting operation among 50
websites with an average accuracy of 84.7%.
∗Corresponding faculty author.
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6752-3/19/07...$15.00
https://doi.org/10.1145/3321705.3329817
CCS CONCEPTS
• Security and privacy → Side-channel analysis and counter-
measures.
KEYWORDS
Side Channel Attack; Electromagnetic Emission; User Privacy; Com-
modity Mobile Device.
ACM Reference Format:
Yushi Cheng, Xiaoyu Ji, Wenyuan Xu, Hao Pan, Zhuangdi Zhu, Chuang-
Wen You, Yi-Chao Chen, and Lili Qiu. 2019. MagAttack: Guessing Ap-
plication Launching and Operation via Smartphone. In ACM Asia Con-
ference on Computer and Communications Security (AsiaCCS ’19), July 9–
12, 2019, Auckland, New Zealand. ACM, New York, NY, USA, 12 pages.
https://doi.org/10.1145/3321705.3329817
1 INTRODUCTION
Mobile devices have emerged as the most popular platforms to
assist daily activities and exchange information over the Internet.
According to Gartner [11], there will be more than 11 billion phones,
tablets and laptops by the end of 2018. Along with the rapid growth
are the privacy concerns. The proliferation of mobile devices has
been a major concern in the security and privacy communities.
Various side channels have been utilized for electrical-appliance
usage analysis [7, 16, 26], decryption of cryptographic computa-
tion [12, 13, 18], and human-device activity recognition [5, 8, 32, 33].
These side-channel attacks, especially the last ones, draw increas-
ing attention due to the widespread use of mobile devices and
the increasingly intensive interaction between human and smart
devices.
Prior researches [5, 8, 17, 32, 33] have shown several side-channel
attacks that can sense human-device activities. Zhuang et al. and
Zhu et al. utilize acoustic emanations to infer user keystrokes [32,
33]. Cai et al. use motion sensors to infer user tapping and gesture
inputs on smartphones [5]. Clark et al. use the AC power consump-
tion to recognize the web page that a user browses on a laptop [8].
However, Clark’s scheme requires modification of the power outlet
to measure the AC power consumptions and can only work when
Session 4A: Mobile SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand283Figure 1: The cause of EM emission from the laptop’s CPU. An application consists of various system calls, which are composed
of different instruction sequences and those instructions generate corresponding currents, and finally EM signals.
the laptop is being charged. Jana et al. sense user applications based
on the footprints of applications on memory usage [17], which is in-
trusive since they need to log into the system and run a background
process in parallel with the target application.
In this paper, we investigate a new EM-based side-channel attack
for user activity inference. We propose MagAttack, which detects
and recognizes user activities by tracking the EM emissions from
the laptop’s CPU. Compared with existing side-channel attacks,
MagAttack is non-intrusive and can be implemented on the COTS
mobile devices without any hardware modification. The underlying
principle of MagAttack is that, for an application, each time when
being launched, a fairly unique and consistent sequence of CPU
instructions are executed, as shown in Fig. 1. When a CPU exe-
cutes different instructions, it emits various EM signals accordingly,
which can be further captured by the built-in magnetometer in
a mobile device for privacy inference. MagAttack recognizes two
levels of user activities: (1) which application is being launched,
i.e., application recognition, and (2) what a user is doing with the
application, i.e., operation recognition. For example, we can figure
out that a user is launching a web browser and recognize which
web page the user is visiting. The significance of MagAttack lies
in that it infers the basic operations of laptops and thus can be
the prerequisite of many other user privacy violation attacks, e.g.,
when inferring user passwords through keystrokes, MagAttack can
be employed first to detect the launching of finical applications
such as PayPal. Besides, with the help of MagAttack, an adversary
can learn a user’s interests and habits by continuously tracking the
application usage of the user.
Inferring laptop user activity via the EM side channel is promis-
ing yet challenging. First, both the location and orientation of a
smartphone affect the captured EM signals. The former decides
the initial EM amplitude as a result of the earth’s magnetic field,
and the latter determines the changing trend of the EM ampli-
tude. Second, the magnetic sensors in COTS mobile devices such
as smartphones usually have low sampling rates. Different from
the sensors used in [12, 13, 25, 26] with working frequency ranging
from MHz to GHz, a magnetometer in mobile devices can only
measure frequency up to 100 Hz. In other words, information from
high frequency signals is lost. Third, EM signals might be incon-
sistent when the application changes, e.g., a website is updated.
Actually, many websites change their contents and components
such as pop-out advertisements on a daily basis, and the captured
EM signals are different as a result.
To address aforementioned challenges, we first propose an earth
impact reduction scheme to eliminate the influence from the earth’s
magnetic field and the ambient noise. Then, for application launch-
ing detection, we design a sliding-window based pre-screening
algorithm for preliminary detection, and a fine-grained Support
Vector Machine (SVM) classifier to further ensure high accuracy.
For application recognition, we employ Short Time Fourier Trans-
form (STFT) and Principal Component Analysis (PCA) for feature
extraction, and design a 1-Nearest Neighbor (1NN) classifier to
achieve accurate recognition. For operation recognition, we use
Wavelet Multi-Resolution Analysis algorithm (MRA) to process the
inconsistent EM signals and build a weighted 1NN classifier to deal
with their dynamics.
Application Scenario: we envision that MagAttack can be used
in public areas where an adversary sits near a victim and attempts
to infer the victim’s laptop activities for habit tracking or further
privacy violation attacks such as password inference. To the best of
our knowledge, this is the first side-channel attack to infer laptop
user activities by the means of CPU EM emissions. In summary,
our contribution includes below.
• We analyze the underlying correlation between the applica-
tions and the corresponding CPU EM emissions. We propose
to use a mobile device to infer user activities on a laptop by
tracking the EM emissions from the laptop’s CPU.
• We investigate the distinctiveness of EM emissions caused
by various user activities, and elaborately design MagAttack
to differentiate them reliably.
• We implement MagAttack on commercial smartphones with-
out any hardware modification, and evaluate it with 13 pop-
ular applications and 50 top websites in China. The results
demonstrate that MagAttack can detect application launch-
ing with a precision of 97.0% and a recall of 92.1%, recognize
the 13 applications with an average classification accuracy of
98.6%, and classify the 50 websites with an average accuracy
of 84.7%.
2 MEASURING EM EMISSION TO INFER
APPLICATION
In this section, we first introduce the built-in magnetometer on
mobile devices, and then show the feasibility of MagAttack.
Session 4A: Mobile SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand284Table 1: Top 10 system calls invoked when different applica-
tions being launched.
Safari
workq_kernreturn (17.6%)
bsdthread_ctl (13.0%)
stat64 (8.4%)
pread (8.2%)
madvise (6.5%)
openat (3.5%)
(3.0%)
kevent_qos (2.9%)
mmap (2.6%)
geteuid (2.5%)
workq_kernreturn (6.6%)
Chrome
kevent (24.0%)
write (12.4%)
read (6.1%)
recvmsg (5.8%)
stat64 (5.0%)
bsdthread_ (4.3%)
psynch_mutexdrop (2.7%)
psynch_ (2.4%)
mmap (2.0%)
iTunes
workq_kernreturn (13.9%)
geteuid (9.5%)
stat64 (8.2%)
bsdthread_ctl (7.9%)
getdirentires64 (4.9%)
getattrlist (4.7%)
madvise (4.6%)
read (3.5%)
open_nocancel (3.2%)
kevent_qos (2.9%)
2.1 Magnetometer on Mobile Device
A magnetometer is an instrument that can measure the direction,
strength, and relative change of a magnetic field at a particular
location. The built-in magnetometer on mobile devices is usually
a Hall Effect sensor, which is small, cheap and low in sensitivity
(<= 5mV/mT ). The sampling rate of the built-in magnetometer is
configurable, which usually varies from 4 Hz to 100 Hz for smart-
phones. Due to its low cost and extensive functions, e.g., employed
with gyroscopes and accelerometers for motion tracking, the mag-
netometer is widely equipped on COTS mobile devices, and thus
can be a good alternative for EM measuring.
2.2 Application Launching
During application launching, the Launch Services framework pro-
vides primary support. It sends a message to WindowServer, which
in turn calls fork() and execve() (both are system calls) to run
the requested application [24]. The requested application then, runs
user functions in the user space and invokes system calls to inter-
act with the kernel and access the hardware. Thus, an application
executes both user functions and system calls when being launched.
Upon user activity inference, we focus on the system calls in-
voked during application launching. As shown in Fig. 1, an applica-
tion consists of a series of system calls. Our hypothesis is that dif-
ferent system calls are invoked at different frequencies for various
applications. To validate it, we use a system trouble-shooting tool
dtrace[10] (available on Linux, Mac OS, and Windows [14]) to cap-
ture the name and time of the executed system calls when various
applications (Safari, Chrome, and iTunes) are being launched on the
same laptop (a MacBook Air). The results in Tab. 1 demonstrate that
the most intensive system call for Safari is workq_kernreturn(),
which accounts for 17.6%. While for Chrome, it is kevent() that
holds the largest portion of 24.0%. For iTunes, workq_kernreturn()
appears as the most intensive system call as well but with a different
proportion of 13.9%. It confirms our hypothesis that the system
calls invoked when launching different applications, are discrepant
in both type and frequency, even for applications of the same type.
2.3 From System Call to EM Emission
A system call is a wrapper function that consists of a sequence of
instructions [15], as revealed in Fig. 1. As a result, various system
calls are composed of different instruction sets and thus generate
distinct CPU power consumptions.
A CPU chip consists of a large number of CMOS (Complemen-
tary Metal Oxide Semiconductor) [27] transistors arranged in a
lattice form, which perform basic arithmetic, logical, control and
(a) Safari
(b) Chrome
(c) iTunes
Figure 2: EM signals are correlated with the system call
traces but distinct among applications. Note that the two
traces are normalized for illustration and the Y-axis repre-
sents the frequency of system calls or the magnitude of EM
signals.
input/output operations specified by the instructions. Energy con-
sumption of the CPU heavily depends on the power dissipation of
the CMOS lattice. Average CPU power consumption [23] Pavд can
be calculated as follows:
Pavд = CV(α)2AF(α)
2
(1)
where C represents the CMOS capacitance and is a function of the
transistor size and the wire length. V is the supply voltage to CPU.
A is the average switching frequency of the CMOS transistors and
F is the clock frequency. V and F are further related to the CPU
load α. When executing various instructions, the CPU involves
different numbers of CMOS transistors and generate different loads,
resulting in distinct power consumptions as well as CPU currents.
Since various system calls are composed of different instruction
sets, the CPU currents for those system calls are likely to be diverse,
which contribute to distinct EM signals.
2.4 Feasibility of MagAttack
As various applications invoke different system calls when being
launched, the emitted EM signals shall correlate with the system
calls executed by the CPU but remain distinct among applications.
To validate our hypothesis, we capture the EM signals with an
iPhone SE smartphone when different user applications (Safari,