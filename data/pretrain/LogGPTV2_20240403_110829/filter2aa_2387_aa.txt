# Keeping Secrets Secret and Sharing Secrets Secretly

## Presentation Details
- **Presenter:** Vic Vandal
- **Email:** PI:EMAIL
- **Event:** DefCon-XVI / 2008

### Vic’s Usual Disclaimer
- Do not engage in illegal activities.
- If you do, avoid getting caught.
- I disclaim any personal responsibility for the misuse of the information provided here.
- I do not support or condone espionage, treason, child pornography, terrorism, or general stupidity. My views on other uses may be more liberal.
- The content of this presentation is my intellectual property, and I reserve the right to challenge any unauthorized use or duplication.
- Any reproduction of this presentation must include this disclaimer.

## Stego Files Link
- [Secret-Page](http://www.well.com/~sthomas/.Secret-Page.html) (Referenced later in the presentation)

## Introduction
- **What is a secret?**
  - Anything that needs to be kept confidential, such as keys, important plans, designs, codes, sensitive information, or items.
- **Why protect secrets?**
  - To ensure that only authorized individuals have access to them.
- **Why share secrets?**
  - For secrecy, fault tolerance, profit, or fun.

## Chaffing and Winnowing
### What Is It?
- **Winnowing:** Separating out or eliminating the chaff.
- **Chaffing:** Adding chaff to a collection.
- By adding chaff to a message, the sender can make it difficult to decipher. The receiver, with the correct key, can then remove the chaff to retrieve the original message.

### How It’s Done
1. **Authenticate each packet** with a shared authentication key.
2. **Append a Message Authentication Code (MAC)** to each packet.
3. **Add chaff packets** with incorrect MACs to the message stream.

### Authentication Key
- The authentication key is shared between the sender and receiver.
- The recipient computes the MAC using the message-packet content and the shared key.
- If the calculated MAC matches the transmitted MAC, the packet is valid; otherwise, it is discarded.

### Packet Sequence Number
- Each packet is assigned a sequence number to:
  - Remove duplicate packets.
  - Identify missing packets.
  - Ensure the correct order of received packets.

### Adding The Chaff
- After authenticating the packets, chaff packets with incorrect MACs are added to the message stream.
- Chaff packets must be correctly formatted, have reasonable sequence numbers, and contain plausible but incorrect message contents.

### Sample Message
- Original packets:
  - (1, Hello David, 465231)
  - (2, The code is, 782290)
  - (3, Joshua, 344287)
  - (4, Sincerely-Falken, 312265)
- Chaff packets:
  - (1, Hello Lizzie, 532105)
  - (2, Your contact is, 793122)
  - (3, Flex, 891231)
  - (4, Peace-Vic, 553419)

### Receiver Separates Chaff
- Valid packets:
  - (1, Hello David, 465231)
  - (2, The code is, 782290)
  - (3, Joshua, 344287)
  - (4, Sincerely-Falken, 312265)

### MAC Algorithm Notes
- The MAC algorithm is a hash function.
- Once hashed, the original message cannot be retrieved.
- The output must appear random to an eavesdropper, with similar inputs generating distinctly different outputs.

### Packet Construction Notes
- Smaller packets increase the difficulty of brute force attacks but can be inefficient in terms of bandwidth.

### Chaff Construction Notes
- Creating chaff is easy and inexpensive. The chance of accidentally creating the correct MAC for a chaff packet is extremely low (1/2^64).

### Chaffing / Winnowing Uses
- Transmitting secret codes, messages, and other sensitive information.
- Bypassing U.S. government regulations on encryption exports.
- Challenging encryption-restricting legislation, as proposed by Ron Rivest.

## Secret-Splitting / Sharing
### What Is It?
- Splitting a secret into parts and sharing those parts to enhance security.

### Why Not Use Crypto Instead?
- Encrypting data requires protecting the encryption key, which can be lost or compromised.
- Secret-sharing schemes break the secret into pieces distributed among different individuals.

### Secret-Splitting / Sharing
- **Components:**
  - **Set of Holders (H):** H = {H1, H2, H3}
  - **Access Structure (AS):** Subsets of holders who can reconstruct the secret.
  - **Monotone Access Structure (AS0):** Minimal sets of AS.
  - **Perfect Secret-Sharing Scheme:** Qualified subsets can reconstruct the secret, while unqualified subsets have no viable information.

### Access Structure Variance
- Different access structures can provide varying levels of fault tolerance and secrecy.
- Example: A+B+C, A+BC, AB+BC, AB+BC+AC, ABC.

### Share Sizes
- Different access structures may require different amounts of information to be remembered.
- Increasing the amount of information to be kept secret can degrade system security.

### Secret-Splitting Risks
- Consequences of authentication errors include inconvenience, distress, damage to reputation, financial loss, and personal safety.

### Secret-Splitting Uses
- Nuclear launch codes, bomb components, chemical weapons ingredients, PKI management, monetary asset protection, intellectual property protection, and more.

## Steganography
### What Is It?
- **Steganography:** Hidden writing, where data is embedded within a cover medium.
- Examples include invisible ink, hidden images, and digital steganography in image, video, and audio files.
- Primary legitimate use is digital watermarking.

### Why Is It Effective?
- Steganography relies on the principle that if something is not expected, it is often overlooked.

### Modern Implementations
- Modern steganography aims to be undetectable unless the secret information is known.
- An information-theoretic model considers the security of steganography systems against passive eavesdroppers.

### The Color of Secrets
- Image file colors are crucial for hiding data.
- 24-bit color (True Color) provides 16,777,216 possible colors, while 8-bit color offers 256 unique colors.

### Use of LSB Overwriting
- Least Significant Bit (LSB) overwriting is a common technique in steganography, where the least significant bits of the cover medium are modified to embed the secret data.