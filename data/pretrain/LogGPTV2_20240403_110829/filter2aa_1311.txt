# Breaking WingOS
## Josep Pi Rodriguez
### Senior Security Consultant
#### PI:EMAIL
#### IOActive, Inc. Copyright ©2018. All Rights Reserved.

## Agenda
- Introduction to WingOS
- Scenarios & Attack Surface
- Vulnerabilities
- Exploitation & Demo
- Conclusions

## Introduction to WingOS
WingOS is an embedded Linux operating system with proprietary modifications in the kernel. Originally created by Motorola, it is now owned by Extreme Networks. The architecture is MIPS N32 and it is primarily used in wireless access points (APs) and controllers. There is no publicly available information or prior research on its internal workings.

### Key Features
- **Web Interface**: Provides a user-friendly interface for configuration and management.
- **CLI (Command Line Interface)**: Offers advanced users and administrators a more powerful and flexible way to interact with the system.

### Devices Using WingOS
- **Extreme Networks Devices**
  - Motorola devices
  - Zebra devices
- **Kontron Devices for Aircrafts**

### Deployment
- **Aircrafts**: Widely used in aircrafts by many airlines around the world.
- **Other Industries**:
  - Smart buildings and smart cities
  - Healthcare
  - Government
  - Small and big enterprise networks
  - Education
  - Retail and stadiums

## Attack Surface & Scenarios
### Aircraft Scenario
- **Remote Pre-Authentication Vulnerabilities**:
  - **Ethernet Cable**: Less likely in an aircraft, but UDP services and Mint services can be accessed.
  - **Wi-Fi**: Both open and password-protected Wi-Fi networks are potential attack vectors.
  - **Pivoting from Sat Modem to AP**: An attacker can pivot from a satellite modem to an access point from the ground.

### Other Scenarios
- **Remote Pre-Authentication Vulnerabilities**:
  - **Direct Ethernet Connection**: More likely with outdoor access points but also possible inside buildings.
  - **Wi-Fi**: Both open and password-protected Wi-Fi networks.
  - **Internal Network**: Access from within the network.

## Vulnerabilities
### Hidden Root Shell Backdoor
- **From Restricted CLI to Hidden Root Shell**: An attacker with CLI access can escalate to a root shell.
- **Impact**: Complete compromise of the system.
- **Default Value**: Present in every WingOS installation.
- **Decryption Process**:
  - The file content is passed through a loop and decrypted using RC4 with the key "Hi Sabeena? How’re you doin’? Bye!!".
  - The MAC address of the device is modified and used as a key for further decryption.
  - The final password is ensured to contain only lowercase letters.
  - A different password is generated each time, making it difficult to predict.

### Remote Pre-Authentication Stack Overflow
- **UDP Service Listening on 0.0.0.0**: The Radio Interface Module (RIM) process is vulnerable.
- **Affected Versions**: Only some older versions are vulnerable.
- **Kontron Devices**: Firmware in aircrafts is likely vulnerable based on their website information.

### Remote Pre-Authentication "Global" Denial of Service
- **Newest Firmware Version**: The stack overflow is fixed, but a denial of service vulnerability still exists.
- **Exploit**: Repeatedly executing the proof-of-concept (POC) can kill the RIM process multiple times, leading to a full OS reboot. The watchdog checks if the RIM process is running and reboots the system if it is not.

### Mint Vulnerabilities
- **Mint Protocol**: A proprietary L2/L3 protocol with limited public information.
- **Attack Scenarios**:
  - **Attacker's Device**: Connects to the network or directly to the target device.
  - **Remote Compromise**: Attacker remotely compromises a device connected to the network.
  - **Mint Services**: Attack services, APs, and controllers over Mint services.
  - **Controllers**: Equivalent to Windows Domain Controllers.

### Creating a Mint Client
- **Library Inspection**: Inspecting the library `usr/lib/python2.7/lib-dynload/_socket.so` allows the creation of Mint sockets.
- **Controller Configuration**: Default configuration and standalone APs can be configured as controllers.

### Remote Pre-Authentication Heap Overflow (Mint)
- **Memcpy Vulnerability**: User-controlled source and length, destination is heap. Controllable in the HSD process, Mint port 14.
- **Exploitation Steps**:
  - Add a fake MAC address to the authenticated list.
  - Allocate a session for the fake MAC address.
  - Trigger the vulnerable memcpy.

### Remote Pre-Authentication Stack Overflow (Mint)
- **Stack Overflow**: User data from the previous memcpy vulnerability can overflow the stack.
- **LIBC Sanity Checks**: Can cause a crash before the stack overflow, but not if triggered quickly.

## Exploitation
- **No ASLR, No NX, No Stack Canaries**: These protections are absent, making exploitation easier.
- **Cache Incoherence Problem**: MIPS CPU I-Cache and D-Cache can cause issues. Filling the D-Cache and calling a blocking function like `Sleep()` can flush the cache.
- **ROP (Return-Oriented Programming)**: Use ROP to control the registers at the crash time.
- **Libc Gadgets and Shellcode**: Develop and use appropriate gadgets and shellcode for the MIPS N32 architecture.

### Demo
- **Steps**:
  1. Use your own device or a compromised one.
  2. Add a fake MAC address to the authentication list.
  3. Overflow the heap with ROP gadgets and shellcode.
  4. Trigger a stack overflow with the heap data.
  5. Execute the exploit.

## AeroScout Vulnerability
- **UDP Port 1144**: No authentication required.
- **Reverse Engineering**: Once the protocol is reverse-engineered, an attacker can manipulate locations.

## Conclusions
- **Patches Provided by Extreme Networks**: [Vulnerability Notice](https://gtacknowledge.extremenetworks.com/articles/Vulnerability_Notice/VN-2018-003)
- **Room for Improvement**: There are more vulnerabilities in WingOS that need to be addressed.
- **Proactive Fixes**: Hopefully, the lessons learned will lead to proactive fixes.

Any questions?

Thank You!
PI:EMAIL