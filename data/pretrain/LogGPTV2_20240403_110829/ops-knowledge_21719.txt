User: I am planning to exchange NDB Entities between two GAE web apps using URL Fetch.  
One Web app can initiate the HTTP POST Request with the entity model name, starting entity index number and number of entities to be fetched. Each entity would have an index number which would be incremented sequentially for new entities.  
To Send an Entity:
Some delimiter could be added to separate different entities as well as to separate properties of an entity. The HTTP Response would have a variable (say "content") containing the entity data.  
Receiving Side Web APP:
The receiver web app would parse the received data and store the entities and their property values by creating new entities and "put"ting them 
Both the web apps are running GAE Python and have the same models.  
My Questions: 
Is there any disadvantage with the above method? 
Is there a better way to achieve this in automated way in code?  
I intend to implement this for some kind of infrequent data backup design implementation
Assistant: You can use the NDB to_dict() method for an entity and use json to exchange te data.
If it is a lot of data you can use a cursor.
To exchange the entity keys, you can add the safe key to the dict.