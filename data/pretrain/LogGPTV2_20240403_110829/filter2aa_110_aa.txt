Iftach Ian Amit
Managing Partner
Security Art
Down the rabbit Hole
Agenda
• Background on research
• The server – first impressions
• Doors, windows, whatever you want to call these…
• Dances with lawyers
• Slip sliding down the hole
– Tools
– Scripts
– Logs, logins, and other “soft” data
• Meanwhile – CERT‐CC and other gentleman
• Closure? 
• The McColo connection(s)
• Final words, predictions
Who Am I ? (iamit)
•
Iftach Ian Amit
– In Hebrew it makes more sense…
•
Managing Partner at Security Art
•
Past:
– Director Security Research @ Aladdin
– Director Security Research @ Finjan
– Various security consulting/integration 
gigs in the past
• R&D
• IT
•
A helping hand when needed… (IAF)
Background – how do you start 
anyway?
• Uberskillz
• And sheer luck…
• Anyone familiar with triquitips.com?
– Come on – it’s a “tips for better programming site”
– Neither was I.
– How about federconsumatori.it (consumer reports for 
Italy)
– A lot of these started looking awfully alike… and 
pointing to the same place…
First encounters
• gwtsdjeni.com
• Really meaningful – and somewhat different 
than the usual Torpig naming convention… an 
extra letter gives it up! 
– (should be xxxxjeni.com and we got 
xxxxdjeni.com)
• So we take a closer look: you speak english?
– en.php
Doors, windows, whatever you want to call 
these…
• Aha! Sherlock, I think we are on to something…
• If there’s a shell, there are at least 57 of them…
Dances with lawyers
• 1st dilemma – have we gotten too far?
– We followed an injected script on a 
legitimate site (i.e. – deobfuscate, view‐
source of result, figure out the server general 
identity, enumerate).
– We ran across a service offered by the server, 
which was not protected by any means of 
user/password, nor had it any disclaimers 
(en.php  r57new.php).
• 2nd dilemma – are we going to go any 
further?
– We can already “see” (i.e. ‘ls’) most of the 
server – by the means granted to us so far
– We are not going to brute‐force ourselves 
into anything, or guess any credentials?
Slip sliding down the hole
• Guess what was the decision… (thank you legal 
department!)
• Skimming the content structure shows:
– Neosploit (in cgi‐bin)
– Automated FTP Iframe injection tool
– PHPMyAdmin
– Truck full ‘o Trojans
– AWStats logs
– Setup instructions (I kid you not!)
– “mail” backend for tracking infections
– /mc366 – filled with OpenVPN certificates
– Huge list of CPanel credentials
– Some more utilities and exploits
– 15 most wanted???
Tools – FTP IFramer
• FTP IFrame auto‐attacker whizbang thingy
– Was managed separately for each “user” of the 
system.
– Each user had run several “campaigns”
– The logs were a treasure trove… more than 200k 
credentials used (i.e. ran through the application)
Tools ‐ Neosploit
•
So you wanted to hear a bit on Neosploit…
•
THE “Rock Star” of crimeware toolkits.
– It even pulled an Elvis on everyone, and claimed to have disappeared…
•
V.1. – solid exploit and simple management, single user system. No 
licensing.
•
V.2. – multiple user support (SaaS), enhanced reporting (country, 
referrer, Browser/OS), multiple loader configurations. License 
locked to IP, server validated. Database moved to flat files.
•
V.3. – Enhanced licensing (locked to IP+user/pass), installation only 
though a SOCKS proxy, Enhanced reporting on exploit ROI, 
Enhanced database management.
Neosploit – digging deeper
• Installation – fully automated using a cgi
script:
– User & password for licensing (checked when 
connecting to the server to fetch the build).
– Downloads the build from 0x0c0c0c0c.com
– Goes through a SOCKS proxy at 
12.219.55.171:7062 (control freaks!)
– Takes care of version checking, unpacking, system 
(permissions, init scripts, etc…)
– Bonus – logging…
Neosploit update statistics (based on 
logs…)
0
2
4
6
8
10
12
15 16 17 18 22 24 25 26 28 29 30
2
3
4
7
10 12 13 18 19 20 21 22 23 25 26 27
6
7
8
16 17 25 28
4
6
7
14 15
9
Apr
May
Jun
Jul
Aug
3.0.0
3.0.1
3.0.2
3.0.3
3.0.4
3.0.5
3.0.6
3.0.7
3.1.0
The rest ain’t that fun
• ndaemon – the backend daemon
– Implements the DB interface
• index.cgi – exploitation frontend
– Mostly basic decision making based on data from 
the backend, data from the prospective victim 
(geoIP, browser string, cookies, referrer, etc…)
• admin.cgi – admin interface
– Basically a frontend for querying the backend for 
statistical data, and basic configuration
Told you so 
License_Verification:
push    edi
push    offset aNeosploit_key 
lea     eax, [ebp+string]
push    eax
lea     eax, [ebp+var_188]
push    eax
call    license_load
add     esp, 10h
test    eax, eax
jz      loc_8049918
License_load:
...
push    ebp
mov     ebp, esp
push    edi
push    esi
push    ebx
sub     esp, 38h
mov     ebx, [ebp+arg_0]
mov     edi, [ebp+arg_8]
push    offset aServer_addr
call    _getenv
add     esp, 0Ch
mov     [ebp+var_1C], eax
push    100h            ; size_t
push    0               ; int
push    ebx             ; void *
call    _memset
mov     ecx, [ebp+var_1C]
add     esp, 10h
xor     edx, edx
test    ecx, ecx
jz      short loc_804CC25
online_test:
mov     [ebp+var_20], 1
push    edx
push    0               ; int
push    ebx             ; void *
push    [ebp+arg_4]     ; int
call    connect_to_homeserver
add     esp, 10h
test    eax, eax
jz      short loc_804CDDE
...
call    form_parse
lea     edi, [ebp+var_38]
xor     eax, eax
cld
mov     ecx, 7
rep stosd
mov     [esp+4E8h+var_4E8], 0
call    _GeoIP_new
add     esp, 10h
test    eax, eax
mov     ebx, eax
...
sub     esp, 8
push    [ebp+timer]
push    eax