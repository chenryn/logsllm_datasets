进一步深入之前，先花点时间运行尝试Mismatch应用，对它是如何工作的有所认识。
从HeadFirstLabs网站（www.headfirstlabs.com/books/hfphp）下载Mismatch应
用的所有代码。除.sql文件以外，将所有其他代码发布到你的Web服务器，，Sql文件
中包含了构建必要的Mismatch数据库表的SQL语句。在一个MySQL工具中运行各个，Sq1
文件中的语句，得到可以作为起点的初始Mismatch数据库表。
所有这些工作完成后，在你的Web浏览器中导航到index.php页面来测试应用。要记住
开始时ViewProfile和EditProfile页面是断开的，因为它们完全依赖于用户登录，而这个
功能我们还正在建设。
Mismatch - Where opposites aftract
Mismatch主页元许你看到最新用户的名字和
yice.P
dPdic
图件，但是如果没有警录将无法看到更多其
他内客。
这两个链接指向应
用的个性化部分。
下载！
Mismatch应用的完整源代码可以从Head
First
Labs网站下载：
www.headfirstlabs.com/books/hfphp
350
第7章
---
## Page 387
构建个性化Web应用
准备数据库完成登录
OK，下面继续完成构建。mismatch_user表已经很好地维护了各个
用户的情况简表信息，不过在用户登录信息方面还有欠缺。更具体地
mismatch_user表需爱用户名
讲，这个表缺少相应的列来存储各个用户的用户名和口令。
和口今列来存储用户警录
数据。
mismatch_user
frst_nom
gende
dry
thereareno
DumbQuestions
用户名和口令数据都由纯文本组成，所以新的username和
pasSword列可以使用我们熟悉的VARCHARMySQL数据类
用户名来唯一标识用户呢？
型。不过，不同于其他一些用户情况简表数据，username和
password不允许为空（NULL）。
际上，user_id的目的就是要提供一种高效
的方式唯一标识用户行。不过，数字ID似乎
usetname和password列包含
很难记住，而且用户非常希望能够用他们自
纯文本数据，但是不元许
jnemles
己的用户名来访问个性化Web应用。所以让
为室。
baldpaul
Johan作为“jnettles”而不是“11”登录更多
dierdre
的是从可用性角度来考虑。没有人希望被当
成一个数字！
完成一个SQL语句，按以下所示的位置在表中增加username和
password列，其中username能够包含32个字符，password能
很少有人想记住一个超过
16个字符的口今！
够包含16个字符，这两列都不允许为NULL。
mismatch_user
你现在的位置
351
---
## Page 388
sharpenyourpencil答案
Solution
完成一个SQL语句，按以下所示的位置在表中增加username和
ALTERTABLE用于向一个现有的表
password列，其中username能够包含32个字符，password能
增加新列。
够包含16个字符，这两列都不允许为NULL。
ALTER TABLE mismatch_uset ADD username VARCHAR(32)NOT NULL AFTER uset_id
先增加了username列.所以可以
ADD password VARCHAR((6) NOT NULL AFTER username
...
在这里引用。
AFTER语句控制新列增加到表中的哪个
个
位置。
mismatch_user
join_dote
dhy
表中列的位置并不重要，不过将最重要的列放在最前面会
更有组织性。
使用ALTER向表中增加username和
password列。
你贵定不能在数据库中原样存储口令
难道在存储口令前不需要对它加密吗？
好主意口令需要加密。
Mismatch中的加密是指，将口令存储在数据库中时，要将口
令转换为一种不可识别的格式。所有提供用户登录支持的应
用都必须对口令加密，这样用户才会相信他们的口令是安全
的。即使只是在数据库中暴露用户的口令也让人无法接受。
所以将口令插人到mismatchuser表之前需要一种方法来
加密口令。问题是，如果没有为用户提供途径具体输人用户
名和口令来完成登录，加密对我们并没有太大帮助.
352
第7章
---
## Page 389
构建个性化Web应用
构建登录用户界面
除了修改数据库来包含用户登录数据，我们还需要为用户提供一个途
登录应用需要一个
径输入数据，并具体登录应用。登录用户界面要包括对应用户名和口
用户界面来输入用
令的文本编辑域，另外还要有一个按钮完成登录。
户名和口令。
口今域受到保护，使口今
不可读。
Usetname:
jnettles
Password:
********
mismatch_user
PISA
sern
pessw
Cog3n
.......
10
baldpaul
++++++
11
jnettles
********
点击log3n（警录）按钮，
应用金根据数据库来检查
用户名和口今。
如果用户名和口今检查通过，
用户则成功登录。
000
Mismatch-ViewProfik
You are iogged in as jneuies.
thereareno
DumbQuestions
既然还没有指定用户名和口
对？
令，用户怎么能登录呢？如果
你有此担心请不要着急。
稍后我们就会为用户创建用户
性，防止别人在你输入口令时从你背后偷看。提交表单时
会提交口令本身，而不是星号。正是因为这个原因，将口
名和口令。现在重要的是为登录打好基础，尽
令插入到数据库之前对口令加密很重要。
管在集成所有部分之前确实还需要完成一些任
务。
你现在的位置
353
---
## Page 390
sha(）函数
用SHAU)加密口令
登录用户界面相当简单，不过我们还没有满足加密登录口令的需
MySQL SHA()
求。MySQL提供了一个名为SHA（）的函数，它会对文本串应用一个加密
函数会把一段文
算法。其结果是一个加密串，长度固定为40个十六进制字符，而不论原
始口令的长度是多少。所以这个函数实际上会生成一个唯一表示口令的
本加密为唯一的
40字符编码。
40字符编码。
由于SHA（）是一个MySQL函数而不是PHP函数，所以调用这个函数
时，要作为在表中插入口令的查询的一部分。例如，以下代码向
mismatch_user表插人一个新用户，在这里应当使用sHA（）加密口令。
INSERT INTO mismatch_user
(username,password,join_date) VALUES （'jnettles'，SHA(*tatlover'),NOw())
SHA（）面数将口今加密为一个40字符的十六进利编码
这是输入到口今表单域中
这个编码将存储在mismatch_uset表的password列中。
的具体口今。
在登录过程的另一端，同样要用到SHA（）函数，它会查看用户输人的
口令是否与数据库中存储的加密口令匹配。
具体口今
Username:
Password:
*******米
SHA('tatlover')
SHA(）函数将一个8字符的口
Cog3n
分转换为一个40字符的加密
文本串。
e511d793f532dbe0e0483538e11977f7b7c33b28'
并非存储具体的口今，我们存能
mismatch_user
了40字符的加密编码。
pessword
9
08447b.
10
baldpaul
230dcb
11
jnetfles
e511d7...
000
Mismatch-ViewProfil
You are logged inas jnenies.
354
第7章
---
## Page 391
构建个性化Web应用
比较
解密口令
一旦对一个信息加密，很自然地会考虑在某个位置上对其解密。不过
SHA()函数提
SHA（）函数是一种单向加密，无法还原。这是为了确保加密数据的安
供单向加密，
全性，即使有人攻击你的数据库，并偷走所有口令，他们也无法对其
解密。那么既然你无法解密用户的口令，用户又怎么能够登录呢？
无法对已经加
要了解用户登录时是否正确地输入了口令，你并不需要知道用户的
密的数据解密。
原始口令。这是因为，只要提供同样的文本串，SHA（）就会生成
相同的40字符编码。所以只需对用户输入的登录口令加密，并与
mismatch_user表中password列中的值比较。这可以利用一个简
单的SQL查询完成，根据一个口令来选择匹配的用户行。
这是用户誉录时输入的口今。
SELECT * FROM mismatch_user
WHERE password = SHA('tatlover')
thereareno
DumbQuestions
出瑰在WHERE子句中。
问：SHA()代表什么意思？
这个SELEcT查询选择mismatch_user表中password列与所输
入口令匹配的所有数据行，这里输入的口令就是'tatlover'。由
HashAlgorithm）。“散列”（hash）是一
于我们比较的是口令的加密版本，所以没有必要知道原始口令。具
个编程术语，表示唯一的固定长度串，可
体完成用户登录的查询会使用SHA（），不过还需要根据用户ID进行
以唯一表示一个文本串。对于SHA（），散
选择，稍后会介绍。
列就是40字符的十六进制加密文本串，它
唯一表示原始口令。
为加密口令留出空间
SHA（）函数对Mismatch提出一个问题，因为加密口令最后为40字符
长，但我们新创建的pasSword列只有16字符长。所以需要执行一个类似的函数，名为MD5（)，它会完成类似
ALTER来扩展password列以便存储加密口令。
的加密。不过一般认为SHA（）算法比MD5（）
ALTER TABLE mismatch_user
更安全一些，所以最好使用SHA（）。PHP也
CHANGE password password VARCHAR(4O) NOT NULL
提供了等价的函数（sha1（）和md5（））
如果需要在PHP代码中（而不是在SQL查询
password列的大小改为40，从而能够放下一
中）完成加密，可以使用这些PHP函数。
加密口今。
你现在的位置，355
---
## Page 392
修改mismatch_use
运行测试
向mismatch_user表增加username和password列，再进行测试。
使用一个MySQL工具，执行ALTER语句向mismatch_user表增加
username和password列。
ALTER TABLE mismatch_user ADD uSername VARCHAR(32) NOT NULL AFTER user_id,
ADD password VARCHAR(16) NOT NULL AFTER username
不过我们的password列实际上需要能够存储一个40字符的加密串，
所以需要再一次利用ALTER命令修改表，留出空间来存储更大的口令
数据。
ALTER TABLE mismatch_user
CHANGE password password VARCHAR(40) NOT NULL
现在，为了测试这两个新列，下面执行一个INSERT查询插人一个新用户。
不要忘记调用SHA函数加
INSERT INTO mismatch_user
密口今。
(username, password, join_date) VALUES ('jimi', SHA('heyjoe'), NOw())
为了确认口令在数据库中已经加密，下面对这个新用户运行一个SELECT
查询进行检查。
SELECT password FROM mismatch_user WHERE username = 'jimi'
要成功登录，这必须是
最后，对username完成一个SELECT查询并在WHERE子句中对口令使用
持入用户行时所使用的
周一个口今
SHA（）函数，以此模拟一次登录检查。
SELECT username FROM mismatch_user WHERE password = SHA('heyjoe')
username
只有一个用户能与加密口
jimi
今匹配。
rowin set（0.0005sec）
356
第7章
---
## Page 393
构建个性化Web应用
口令现在是加密的，不过我们还需要
建立一个登录表单。可不可以直接使用
HTTP认证，因为它就需要一个用户名和
口令来访问受保护的页面？
没错！HTTP认证当然可以作为一个简单的用户登录
系统。
如果还记得上一章的Guitar
Wars高分应用，应该知
道，HTTP认证用于限制对应用中某些部分的访问，
它会提示用户输人一个用户名和口令。这与Mismatch
需要的功能大致相同，只不过现在我们有一个完整的
数据库，包含了所有可能的用户名/口令组合，而不再
是唯一一个应用级用户名和口令。Mismatch用户可以
使用同一个HTTP认证窗口，不过他们只是输人自己
的用户名和口令。
To view this page, you need to log in to area
*Mismatch" on www.mis-match.net
特定于浏慈器的标准HTTP认证窗
rd will be sent in the ciear.
口，可以用作为一个简单的登录
Name:
用户界面。
Password:
 Remember this pass
ord in my keychain
CancelLog ln
PDG
你现在的位置
357
---
## Page 394
mismatch的HTTP认证
利用HTTP对用户授权
如GuitarWars应用所示，必须发送两个首部才能通过一个HTTP认证
窗口限制对页面的访问。发送这些首部就会提示用户输人一个用户名
和口令，从而可以访问GuitarWars的Admin页面。
HTrP/1.1 401 Unauthorized
wiW-Authenticate:Basic realm="Guitar Wars"
必须发送这两个首部从而通过
HTTP认证限制对一个页面的访问。
要发送首部完成HTTP认证，需要两行PHP代码，所发送的各个首部分
别需要一个header（）函数调用。
HTTP认证要求爱送两
header('HTTP/1.1 401 Unauthorized′);
header('wwW-Authenticate: Basic realm-"Mismatch"');
个首部。
个
这是认证的基本域，应用于
整个应用。
需要一个用户名和口今才能
访间Guitar Wars应用中的受限
除非用户输入了正确的用户
名和口今，否则无法看到或
页面。
使用这个页面。
000
“Guitar Wars” on
-guitarwars.ner
7Guitar
Your pas
K
Below is a li
Name
rock
Password:
....
Ashton Slm
Eddie Vani
Belita Chev
Phiz Lairstc
Cancetog
Paco Jastorilus
2008-04-2408:02:11127650R0
Nevil Jobansson 2008 04-24 08:02:11 98430 Rco82:
Kenny Lavitt
2008-04-23 14:09:50 64930 Bcp22
358
第7章
---
## Page 395
构建个性化Web应用
Log-In脚本（1ogin.php）中使用HTTP认证来控制对Mismatch应用中某些部分的访
ExeRciSe
问，请圈出受Log-In脚本影响及HTTP认证控制的各个不同部分。然后标注应用中这些
部分受到怎样的影响。
这是Log-Jn
脚本。