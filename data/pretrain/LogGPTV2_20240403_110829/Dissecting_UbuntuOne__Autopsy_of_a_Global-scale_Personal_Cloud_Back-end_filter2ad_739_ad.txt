### DDoS Attacks on U1: Frequency and Impact

Surprisingly, we found that DDoS attacks on U1 are more frequent than one might reasonably expect. Specifically, our analysis revealed evidence of three such attacks in our traces, occurring on January 15, January 16, and February 6. These DDoS attacks aimed to distribute illegal content through the U1 infrastructure.

As shown in Figure 5, all three attacks resulted in a dramatic increase in the number of session and authentication requests per hour, both of which are related to the management of user sessions. The authentication activity during these attacks was 5 to 15 times higher than usual, directly impacting Canonicalâ€™s authentication subsystem.

The situation for API servers was even more severe. During the second attack (January 16), API servers experienced an activity level 245 times higher than normal. In contrast, the first (January 15) and third (February 6) attacks saw activity levels 4.6 and 6.7 times higher than usual, respectively. Therefore, the most affected components were the API servers, as they handled both session and storage operations.

These attacks involved sharing a single user ID and its credentials to distribute content across thousands of desktop clients. This type of attack is similar to the storage leeching problem reported in [12], where freemium business models of Personal Clouds are exploited to illicitly consume bandwidth and storage resources.

Additionally, the response to these attacks was not automated. U1 engineers manually mitigated the DDoS attacks by deleting fraudulent users and the content being shared. This can be seen in the storage activity for the second and third attacks, which decreased significantly within an hour after the engineers detected and responded to the attacks.

These observations confirm that Personal Clouds, like other Internet systems, are suitable targets for attacks, and such incidents are indeed common. Further research is needed to develop and apply secure storage protocols and new countermeasures to automatically respond to such threats.

### Understanding User Behavior

Understanding user behavior is crucial for optimizing large-scale systems. This section provides insights into the behavior of users in U1.

#### Distinguishing Online from Active Users

**Online and Active Users:**
- **Online Users:** We consider a user as online if their desktop client interacts with the server in any way, including automatic client requests for maintenance or notification tasks.
- **Active Users:** A user is considered active if they perform data management operations on their volumes, such as uploading a file or creating a new directory.

Figure 6 provides a time-series view of the number of online and active users per hour. Clearly, the number of online users exceeds that of active users, with the percentage of active users ranging from 3.49% to 16.25% at any given moment. This observation indicates that the actual storage workload supported by U1 is relatively light compared to the potential usage of its user population, providing insight into the scale and costs of these services relative to their popularity.

**Frequency of User Operations:**
To identify the most frequent protocol operations, we examined the absolute number of each operation type. As shown in Figure 7(a), the most frequent operations are related to data management, particularly those involving the download, upload, and deletion of files.

Given that active users are a minority, it is evident that the U1 protocol does not impose high overhead on the server-side. The operations that users issue to manage their sessions, typically part of the session start-up (e.g., ListVolumes), are not dominant. Consequently, the majority of the processing burden comes from active users, as desired. This is due to the fact that the U1 desktop client does not need to regularly poll the server during idle times, thereby limiting the number of non-data-management-related requests.

**Traffic Distribution Across Users:**
Next, we analyzed the distribution of consumed traffic across users. Figure 7(b) shows that in one month, only 14% of users downloaded data from U1, while 25% uploaded data. This indicates that a minority of users are responsible for the storage workload of U1.

To better understand this, we measured the inequality in traffic distribution using the Lorenz curve and the Gini coefficient (Figure 7(c)). The Gini coefficient, which varies between 0 (complete equality) and 1 (complete inequality), is close to 1, indicating a highly unequal distribution. Specifically, 1% of active users account for 65.6% of the total traffic (147.52TB). Providers can benefit from this information by identifying and treating these high-traffic users more efficiently.

**Types of User Activity:**
We classified users into occasional, download-only, upload-only, and heavy users, following the methodology used by Drago et al. in [2]. An occasional user transfers less than 10KB of data, while users with a significant difference (more than three orders of magnitude) between upload and download traffic are classified as either download-only or upload-only. The rest are in the heavy user group.

Our findings show that 85.82% of all users are occasional (mainly online users), 7.22% are upload-only, 2.34% are download-only, and 4.62% are heavy users. These results differ from those reported in [2], where users are 30% occasional, 7% upload-only, 26% download-only, and 37% heavy. This discrepancy may be due to the more extensive usage of Dropbox and the higher activity levels of users in a university campus setting.

#### Characterizing User Interactions

**User-Centric Request Graph:**
To analyze how users interact with U1, Figure 8 shows the sequence of operations issued by desktop clients to the server in the form of a graph. Nodes represent different protocol operations, and edges describe the transitions between operations. The width of the edges denotes the global frequency of a given transition.

Interestingly, we found that certain operations are frequently repeated across clients. For example, after a client transfers a file, the next operation is likely to be another transfer (either upload or download). This phenomenon can be partially explained by the fact that users often synchronize data at the directory level, which involves repeating several data management operations in cascade. File editing can also lead to recurrent transfer operations. This behavior can be leveraged by predictive data management techniques on the server side, such as download prefetching.

Other sequences of operations, such as the typical initialization flow for desktop clients, involve performing ListVolumes and ListShares operations after authentication. We also observed that Make and Upload operations are closely linked, indicating that for uploading a file, the client first needs to create the metadata entry for the file in U1.

**Burstiness in User Operations:**
To analyze the inter-arrival times between consecutive operations of the same user, we followed the methodology proposed in [21, 22] and obtained a time-series view of Unlink and Upload inter-operation times, along with their approximation to a power-law distribution (Figure 9).

Figure 9(a) shows large spikes for both Unlink and Upload operations, corresponding to very long inter-operation times. This deviates significantly from an exponential distribution, where long inter-operation times are negligible, indicating that user interactions with U1 are not Poisson-distributed [21].

To study if the Unlink and Upload inter-operation times exhibit high variance, which indicates burstiness, we observed that the distributions, while not strictly linear, show a downward trend over almost six orders of magnitude (Figure 9(b)). This confirms the bursty nature of user interactions with U1.

### Conclusion

In summary, our analysis of DDoS attacks and user behavior in U1 highlights the need for robust security measures and efficient resource management. By understanding the patterns and characteristics of user interactions, providers can optimize their systems and develop more effective countermeasures against potential threats.