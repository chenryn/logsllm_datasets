behavior.
Other efforts have investigated the security of SDN sys-
tems, or have leveraged the dynamism offered by SDNs
to implement new defenses. AVANT-GUARD [49] provides
access control mechanisms to disrupt control-plane saturation
attacks. TopoGuard [23] and SPHINX [24] study attacks on
the binding between an endpoint’s MAC address and network
location. SecureBinder [25] provides a solution to other attacks
on identiﬁer bindings by leveraging SDN’s global view of the
network. Programmable BYOD Security [50] uses the SDN
for mobile-device access control. Security-Mode ONOS (SM-
ONOS) [51] builds a permission system for SDN applications
on top of ONOS. ConGuard [52] discovers Time of Check to
Time of Use (TOCTTOU) bugs in SDN controllers. Finally,
DELTA [53], NICE [54], and BEADS [55] provide frame-
works for automated testing of SDN systems.
VII. CONCLUSION
Existing network access-control approaches are highly static
and often coarse-grained. In this work, we have developed
DFI, a system that supports event-driven, ﬁne-grained dynamic
access control policies using software-deﬁned networking. DFI
is implemented for OpenFlow networks, and properly handles
consistency issues caused by frequent policy rule changes. At
the same time, it provides high-level policy speciﬁcation by
resolving hostnames and usernames down to identiﬁers visible
in the network trafﬁc. Additionally, DFI’s access control is
independent of the SDN controller and does not require using
a particular OpenFlow controller or trusting its integrity. We
evaluated DFI’s performance and show that DFI increases the
time-to-ﬁrst-byte latency for data transiting an SDN by 17.8ms
under no load. This additional latency increases to 86.7ms
at 700 ﬂows/sec when saturation begins. This could scale to
higher loads by running some control-plane components in
parallel. Additionally, we experimentally evaluated a threat
scenario using an authentication-triggered access control pol-
icy that is uniquely enabled by DFI, and found a decrease
in both the infection rate and total infected machines from a
NotPetya-like worm. These ﬁndings suggest that using DFI
to enforce event-driven access control policies can provide
improved network security over static approaches.
REFERENCES
–
[2] K.
[1] P. Congdon, B. Aboba, A. Smith, G. Zorn, and J. Roese, “IEEE 802.1 X
remote authentication dial in user service (RADIUS) usage guidelines,”
2003, RFC 3580.
and
a
analysis
encryption,
https://www.crowdstrike.com/blog/petrwrap-ransomware-technical-
analysis-triple-threat-ﬁle-encryption-mft/-encryption-credential-theft/
NotPetya
technical
encryption, MFT
[Online]. Available:
(2017)
File
theft. CrowdStrike.
S.
triple
credential
Hurley.
threat:
Sood
[3] A. Greenberg. (2018) The untold story of NotPetya, the most devastating
cyberattack in history. Wired. [Online]. Available: https://www.wired.
com/story/notpetya-cyberattack-ukraine-russia-code-crashed-the-world/
[4] S. Hurley and K. Sood. (2017) NotPetya technical analysis part ii:
Further ﬁndings and potential for MBR recovery. CrowdStrike. [On-
line]. Available: https://www.crowdstrike.com/blog/petrwrap-technical-
analysis-part-2-further-ﬁndings-and-potential-for-mbr-recovery/
[5] Risk Based Security. (2018) Equifax breach: A wrap-up. [Online].
Available: https://www.riskbasedsecurity.com/2017/10/equifax-breach-
a-wrap-up/
Illusive Networks,
[6] Illusive Networks,
“Attack Brief: Bangladesh Bank
SWIFT
Attack,”
[Online].
Available: http://cdn2.hubspot.net/hubfs/725085/Fact Sheets/2016-09-
ILL-1376--w-Attackerbrief-BangladeshSWIFT.pdf
[7] R. Altamini, N. Arora, and A. Kadi. (2015) Anthem Hack. Anthem.
[Online]. Available: https://www.cs.bu.edu/∼goldbe/teaching/HW55815/
presos/anthem.pdf
2016.
Tech.
Rep.,
[8] A. Jeng, “Minimizing damage from JP Morgan’s data breach,” SANS
Institute, Tech. Rep., 2015.
[9] K. Jarvis and J. Milletary, “Inside a targeted point-of-sale data breach,”
Dell SecureWorks Counter Threat Unit, Tech. Rep., 2014.
[10] Trend Micro, “Countering the advanced persistent threat challenge with
deep discovery,” Trend Micro, Tech. Rep. 10, 2013.
[11] SophosLabs.
(2018) SophosLabs 2018 malware forecast. Sophos.
https://media.scmagazine.com/documents/321/
[Online]. Available:
sophos 2018 malware forecast,
80124.pdf
[12] R. Ward and B. Beyer, “BeyondCorp: A new approach to enterprise
security,” login, vol. 39, pp. 5–11, 2014.
[13] “Cve-2009-1925,” ”Available from MITRE, CVE-ID CVE-2009-
1925.”, 2015. [Online]. Available: http://cve.mitre.org/cgi-bin/cvename.
cgi?name=cve-2009-1925
[14] “Project Floodlight.” [Online]. Available: http://www.projectﬂoodlight.
org/ﬂoodlight/
[15] P. Berde, M. Gerola, J. Hart, Y. Higuchi, M. Kobayashi, T. Koide,
B. Lantz, B. O’Connor, P. Radoslavov, W. Snow et al., “ONOS: towards
an open, distributed SDN OS,” in Proceedings of the third workshop on
Hot topics in software deﬁned networking. ACM, 2014, pp. 1–6.
[16] J. Medved, R. Varga, A. Tkacik, and K. Gray, “OpenDaylight: Towards a
model-driven SDN controller architecture,” in International Symposium
on ”A World of Wireless, Mobile and Multimedia Networks” (WoW-
MoM), June 2014, pp. 1–6.
[17] J. Amann and R. Sommer, “Providing dynamic control
to passive
network security monitoring,” in International Workshop on Recent
Advances in Intrusion Detection (RAID). Springer, 2015, pp. 133–152.
[18] H. Kim, J. Reich, A. Gupta, M. Shahbaz, N. Feamster, and R. J. Clark,
“Kinetic: Veriﬁable dynamic network control.” in NSDI, 2015, pp. 59–
72.
[19] Dell,
Inc.
(2015) Dell openﬂow deployment and user guide 3.0.
[Online]. Available: http://topics-cdn.dell.com/pdf/force10-sw-deﬁned-
ntw Deployment%20Guide3 en-us.pdf
in
its
[20] Shamus McGillicuddy.
capac-
ity
[Online]. Avail-
able: http://searchsdn.techtarget.com/news/2240214709/Pica8-doubles-
ﬂow-rule-capacity-in-its-new-OpenFlow-13-switch
new OpenFlow 1.3
doubles
switch.
Pica8
ﬂow
rule
[21] Centec Networks.
- SDN/OpenFlow
switch - v330. [Online]. Available: http://www.centecnetworks.com/en/
SolutionList.asp?ID=42
(2017) Centec
networks
[22] Hewlett-Packard Development Company, L.P.
(2015) HP switch
software OpenFlow v1.3 administrator guide K/KA/WB 15.17. [Online].
Available: http://h20566.www2.hpe.com/hpsc/doc/public/display?sp4ts.
oid=5354494&docLocale=en US&docId=emr na-c04656675
[23] S. Hong, L. Xu, H. Wang, and G. Gu, “Poisoning network visibility in
software-deﬁned networks: New attacks and countermeasures.” in NDSS,
2015.
[24] M. Dhawan, R. Poddar, K. Mahajan, and V. Mann, “SPHINX: Detecting
security attacks in software-deﬁned networks,” in NDSS, 2015.
[25] S. Jero, W. Koch, R. Skowyra, H. Okhravi, C. Nita-Rotaru, and
D. Bigelow, “Identiﬁer binding attacks and defenses in software-deﬁned
networks,” in 26th USENIX Security Symposium (USENIX Security 17).
USENIX Association, 2017, pp. 415–432.
[26] B. E. Ujcich, S. Jero, A. Edmundson, Q. Wang, R. Skowyra, J. Landry,
A. Bates, W. H. Sanders, C. Nita-Rotaru, and H. Okhravi, “Cross-app
poisoning in software-deﬁned networking,” in Conference on Computer
and Communications Security (CCS18), 2018, pp. 648–663.
[27] B. Yan, Y. Xu, and H. J. Chao, “Adaptive wildcard rule cache man-
agement for software-deﬁned networks,” IEEE/ACM Transactions on
Networking, vol. 26, no. 2, pp. 962–975, April 2018.
[28] A. Khurshid, X. Zou, W. Zhou, M. Caesar, and P. B. Godfrey, “VeriFlow:
Verifying network-wide invariants in real time,” in NSDI. USENIX,
2013.
[29] R. Sherwood, G. Gibb, K.-K. Yap, G. Appenzeller, M. Casado, N. McK-
eown, and G. M. Parulkar, “Can the production network be the testbed?”
in 9th USENIX Symposium on Operating Systems Design and Implemen-
tation(OSDI), 2010, pp. 365–378.
[30] P. Kazemian, M. Chan, H. Zeng, G. Varghese, N. McKeown, and
time network policy checking using header space
S. Whyte, “Real
analysis,” in NSDI, 2013, pp. 1–13.
[31] R. Durairajan, J. Sommers, and P. Barford, “Controller-Agnostic SDN
Debugging,” in CoNEXT, 2014.
[32] X. Jin, J. Gossels, J. Rexford, and D. Walker, “CoVisor: A Compo-
sitional Hypervisor for Software-Deﬁned Networks,” in Proceedings
of the 12th USENIX Symposium on Networked Systems Design and
Implementation (NSDI), 2015, pp. 87–101.
[33] G. Developers. (2018) Protocol buffers version 3 language speciﬁcation.
[Online]. Available: https://developers.google.com/protocol-
Google.
buffers/docs/reference/proto3-spec
[34] Mininet Project, “cbench,” GitHub repository, 2013. [Online]. Available:
https://github.com/mininet/oﬂops/tree/master/cbench
[35] R. Pang, M. Allman, M. Bennett, J. Lee, V. Paxson, and B. Tierney, “A
ﬁrst look at modern enterprise trafﬁc,” in Proceedings of the 5th ACM
SIGCOMM conference on Internet Measurement. USENIX Association,
2005, pp. 2–2.
[36] H. Wang, G. Yang, P. Chinprutthiwong, L. Xu, Y. Zhang, and G. Gu,
“Towards ﬁne-grained network security forensics and diagnosis in the
sdn era,” in Proceedings of the 2018 ACM SIGSAC Conference on
Computer and Communications Security. ACM, 2018, pp. 3–16.
[37] Carbon
Black
research
Petya/NotPetya-ransomware.
able:
research-technical-analysis-petya-notpetya-ransomware/
analysis:
Avail-
https://www.carbonblack.com/2017/06/28/carbon-black-threat-
team.
Carbon
Technical
[Online].
(2017)
Black.
[38] J. Gajek. (2017) A closer look at Petya’s/NotPetya’s network spreading
code. eSentire. [Online]. Available: https://www.esentire.com/blog/a-
closer-look-at-petyasnotpetyas-network-spreading-code/
[39] Symantec. (2010) Patch management best practices. Symantec. [Online].
https://support.symantec.com/en US/article.HOWTO3124.
[40] BigFix Client Compliance, “Cisco NAC,” BigFix, Inc., Apr, vol. 25,
Available:
html
2005.
[41] (2005) Microsoft network access protection (NAP). Microsoft. [Online].
Available: http://www.microsoft.com/windowsserver2003/technologies/
networking/nap/default.mspx
[42] “Software deﬁned perimeter,” Cloud Security Alliance, Tech. Rep.,
December 2013.
[43] W. Labs, “Software deﬁned perimeter (SDP) implementation,” 2017.
[Online]. Available: http://www.waverleylabs.com/services/software-
deﬁned-perimeter/
[44] I. Vidder, “Software deﬁned perimeter,” 2017. [Online]. Available:
https://www.vidder.com/software-deﬁned-perimeter/
[45] M. Casado, M. J. Freedman, J. Pettit, J. Luo, N. McKeown, and
S. Shenker, “Ethane: Taking control of the enterprise,” in Proceedings of
the 2007 Conference on Applications, Technologies, Architectures, and
Protocols for Computer Communications, ser. SIGCOMM ’07. ACM,
2007, pp. 1–12.
[46] H. Hu, W. Han, G.-J. Ahn, and Z. Zhao, “FLOWGUARD: Building
robust ﬁrewalls for software-deﬁned networks,” in Proceedings of the
Third Workshop on Hot Topics in Software Deﬁned Networking, ser.
HotSDN ’14. ACM, 2014, pp. 97–102.
[47] T. Yu, S. K. Fayaz, M. Collins, V. Sekar, and S. Seshan, “PSI: Precise
security instrumentation for enterprise networks,” in Proc. NDSS, 2017.
[48] T. OConnor, W. Enck, W. M. Petullo, and A. Verma, “Pivotwall: SDN-
based information ﬂow control,” in Proceedings of the Symposium on
SDN Research. ACM, 2018, p. 3.
[49] S. Shin, V. Yegneswaran, P. Porras, and G. Gu, “AVANT-GUARD:
Scalable and vigilant switch ﬂow management
in software-deﬁned
networks,” in Proceedings of the ACM CCS, ser. CCS ’13. ACM,
2013, pp. 413–424.
[50] S. Hong, R. Baykov, L. Xu, S. Nadimpalli, and G. Gu, “Towards
SDN-deﬁned programmable BYOD (bring your own device) security,”
NDSS’16, 2016.
[51] C. Yoon, S. Shin, P. Porras, V. Yegneswaran, H. Kang, M. Fong,
B. O’Connor, and T. Vachuska, “A security-mode for carrier-grade
SDN controllers,” in Proceedings of the 33rd Annual Computer Security
Applications Conference. ACM, 2017, pp. 461–473.
[52] L. Xu, J. Huang, S. Hong, J. Zhang, and G. Gu, “Attacking the brain:
Races in the SDN control plane,” in 26th USENIX Security Symposium
(USENIX Security 17). USENIX Association, 2017, pp. 451–468.
[53] S. Lee, C. Yoon, C. Lee, S. Shin, V. Yegneswaran, and P. Porras,
“DELTA: A security assessment framework for software-deﬁned net-
works,” in Proceedings of NDSS, vol. 17, 2017.
[54] M. Canini, D. Venzano, P. Peresini, D. Kostic, J. Rexford et al., “A
NICE way to test openﬂow applications.” in NSDI, vol. 12, no. 2012,
2012, pp. 127–140.
[55] S. Jero, X. Bu, C. Nita-Rotaru, H. Okhravi, R. Skowyra, and S. Fahmy,
“BEADS: Automated attack discovery in OpenFlow-based SDN sys-
tems,” in Proc. of RAID’17, 2017.