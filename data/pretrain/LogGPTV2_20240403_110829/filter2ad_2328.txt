title:SREPT: A Tool for Software Reliability Estimation and Prediction
author:Kishor S. Trivedi
SREPT: A Tool for Software Reliability Estimation and Prediction
Kishor S. Trivedi
Center for Advanced Computing and Communication, Department of Electrical and Computer Engr.
Duke University, Durham, NC 27708-0291, USA
PI:EMAIL
Inputs
Software
Product/Process
Metrics
+ Past experience
Test coverage
Sequence of
Interfailure times
Sequence of
Interfailure Times
& Release Criteria
Failure intensity
Debugging policies
Processing
Fault Density
Regression Tree
ENHPP
model
ENHPP
model
ENHPP
model
Optimization 
& ENHPP
Model
NHCTMC
Discrete-event
simulation
Outputs
Estimate of the
number of faults
Predicted
1. failure intensity
2. # faults remaining
3. reliability after release
Predicted
1. failure intensity
2. # faults remaining
3. reliability after release
4. coverage
Predicted release time 
and 
Predicted coverage
Predicted
1. failure Intensity
2. # faults remaining
3. reliability after release
Architecture
Analytical
modeling
Failure behavior 
of components
Discrete-event
simulation
Predicted Reliability 
and
Performance
Figure 1. Architecture of SREPT
B
L
A
C
K
B
O
X
A
P
P
R
O
A
C
H
A
R
C
H
I
T
E
C
T
U
R
E
A
P
P
R
Although several tools have been developed for the esti-
mation of software reliability, they are highly specialized in
the approaches they implement and the particular phase of
the software life-cycle in which they are applicable. Also
the conventional techniques for software reliability evalu-
ation, which treat the software as a monolithic entity are
inadequate to assess the reliability of heterogeneous sys-
tems. We present here, a tool called Software Reliability
Estimation and Prediction Tool (SREPT) that seeks to ad-
dress these limitations.
Architecture of SREPT: The interested reader is re-
ferred to [1], [2] for a detailed description of the tool. The
SREPT GUI has been implemented using the Java program-
ming language. Figure 1 shows the high level architecture
of SREPT. In the pre-testing phase, SREPT accepts soft-
ware product/process metrics as input, and produces an es-
timate of the number of faults in each module using either
the fault density approach or regression tree modeling tech-
nique.
During the testing phase, SREPT offers the user an op-
tion of doing analysis based on the failure data using the en-
hanced non homogeneous Poisson process (ENHPP) model
to predict the failure intensity, number of faults remaining,
coverage and reliability. When using the failure data to ob-
tain reliability predictions, the ENHPP model in SREPT
currently uses four coverage functions, namely, exponential
(Goel-Okumoto), Weibull (Generalized Goel-Okumoto), S-
shaped, and log-logistic. These belong to the class of ﬁnite
failure non homogeneous Poisson process (NHPP) models.
The ENHPP model in SREPT also offers a mechanism to
combine software metrics, failure data and coverage based
approaches. Various optimization engines to compute re-
lease times of the software are also provided. Unlike most
models that assume instantaneous and perfect debugging,
SREPT allows the user to analyze the effect of non-zero de-
bug times to reﬂect more realistic scenarios.
SREPT is planned to accept the architecture of the ap-
plication modeled as a discrete or continuous time Markov
chain, directed acyclic graph, stochastic Petri net, product
form or non-product form queueing network [3]. The archi-
tecture of an application will be combined with the failure
behavior of its components to provide architecture-based
software reliability and performance predictions.
References
[1] S. Gokhale. “Analysis of Software Reliability and Perfor-
mance”. Ph.D. thesis, Duke University, Durham, NC, June
1998.
[2] S. Ramani, S. Gokhale, and K. S. Trivedi. “SREPT: Soft-
ware Reliability Estimation and Prediction Tool”. Perfor-
mance Evaluation, Vol. 39, pp. 37-60, 2000.
[3] K. S. Trivedi. Probability & Statistics with Reliability, Queu-
ing and Computer Science Applications. Second edition.
John Wiley & Sons, New York, 2001.
Proceedings of the International Conference on Dependable Systems and Networks (DSN’02) 
0-7695-1597-5/02 $17.00 © 2002 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 04:14:15 UTC from IEEE Xplore.  Restrictions apply.