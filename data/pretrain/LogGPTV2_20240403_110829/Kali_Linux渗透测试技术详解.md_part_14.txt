open
nfs
2121/tcp
open
3306/tcp
ccproxy-ftp
open
mysql
5432/tcp
open
postgresql
5900/tcp
6000/tcp
open
vnc
open
X11
6667/tcp
open
irc
8009/tcp
open
8180/tcp
ajp13
open
unknown
MAC Address: 00:0C:29:31:02:17 (VMware)
Nmap done: 1 IP address (1 host up) scanned in 0.28 seconds
输出的信息显示了主机192.168.41.136上开放的所有端口，如22、53、80和111等。
1.指定扫描端口范围
如果目标主机上打开的端口较多时，用户查看起来可能有点困难。这时候用户可以使用
Nmap指定扫描的端口范围，如指定扫描端口号在1～1000之间的端口号，执行命令如下所示：
root@kali:~# nmap -p 1-1000 192.168.41.136
Starting Nmap 6.40(http:/nmap.org)at 2014-04-1916:27CST
Nmap scan report for www.benet.com (192.168.41.136)
Host is up (0.00020s latency).
Not shown: 49 closed ports
PORT
STATE
SERVICE
21/tcp
22/tcp
open
ftp
23/tcp
open
ssh
open
telnet
25/tcp
opne
53/tcp
smtp
open
domain
80/tcp
open
http
111/tcp
open
rpcbind
139/tcp
open
445/tcp
netbios-ssn
open
microsoft-ds
512/tcp
uedo
513/tcp
exec
open
login
514/tcp
open
shell
MAC Address:00:0C:29:31:02:17(VMware)
Nmap done: 1 IP address (1 host up) scanned in 0.35 seconds
输出的信息显示了主机192.168.41.136上端口在1～1000之间所开放的端口号。
2.扫描特定端口
Nmap工具还可以指定一个特定端口号来扫描。
【实例4-2】使用Nmap工具指定扫描在192.168.41.*网段内所有开启TCP端口22的
主机。执行命令如下所示：
root@kali:~# nmap -p 22 192.168.41.*
Nmap scan report for 192.168.41.1
· 87 ·
---
## Page 100
第2篇信息的收集及利用
Host is up (0.00029s latency)
PORTSTATE SERVICE
22/tcp closed ssh
MAC Address: 00:50:56:C0:00:08 (VMware)
Nmap scan report for 192.168.41.2
Host is up (0.00032s latency).
PORTSTATE SERVICE
22/tcp closed ssh
MAC Address: 00:50:56:E9:AF:47 (VMware)
Nmap scan report for www.benet.com (192.168.41.136)
Host is up (0.00056s latency).
PORTSTATESERVICE
22/tcp open ssh
MAC Address:00:0C:29:31:02:17(VMware)
Nmap scan report for 192.168.41.254
Host is up (0.00027s latency).
PORTSTATE
SERVICE
22/tcp filtered ssh
MAC Address: 00:50:56:E1:5E:75 (VMware)
Nmap scan report for 192.168.41.234
Host is up (0.000052s latency).
PORTSTATE SERVICE
22/tcp open ssh
Nmap done: 256 IP addresses (5 hosts up) scanned in 2.81 seconds
输出的结果显示了192.168.41.*网段内所有开启22端口的主机信息。从输出的信息中
可以看到，总共有五台主机上打开了22号端口。
使用Nmap工具还可以指定扫描端口22结果的输出格式。执行命令如下所示：
执行以上命令后输出的信息与第三步中输出的结果类似，这里就不再列举。但是执行
该命令后，Nmap会将输出的信息保存到/tmp/nmap-targethost-tcp445.txt文件中。
4.4.2图形化TCP端口扫描工具Zenmap
Zenmap是Nmap官方推出的一款基于Nmap的安全扫描图形用户界面。它的设计目标是快
速地扫描大型网络，当然也可以使用它扫描单个主机。下面将介绍Zenmap工具的使用。
“DNS分析”Zenmap命令，将打开如图4.2所示的界面。
Zesnag
VS
图4.2Zenmap 起始界面
· 88 ·
---
## Page 101
第4章信息收集
在该界面Target文本框中输入目标主机地址，在Profile文本框中选择扫描类型。设置
完后，单击Scan按钮，扫描结果如图4.3所示。
Zermap
Scan Tools Prefle
Target: 192.168.41.*
hrofle
omap -T4 -A  192.168.41.*
Hests  Senices
Nmap Output Pots/Hsts Tepelogy Hest Detals Sans
05 Hest
vnap -74 -A ~ 192.268.42.*
192.168.41.:
Uiscovered open port
192.168.41.:
Discovered 
open pert 
125/1cp on 192.168.41,1
1i9d uede
192.168.41
apen pert 
open pert 
500/cp on12.16.41,1
192.168.41
Leted SYM Steath Scan against 192.168.41.136
lscovered
Discovered open_port 49152/tcp on 192.168L411
图4.3扫描界面
该界面显示了扫描192.168.41.*网段内所有主机启动的所有端口信息。在左侧栏中可以
切换以主机或服务的形式分别显示详细扫描结果。在右侧栏中，可以分别查看Namp输出
信息、端口/主机、拓扑结构、主机详细信息和扫描信息等。
4.5系统指纹识别
现在一些便携式计算机操作系统使用指纹识别来验证密码进行登录。指纹识别是识别
系统的一个典型模式，包括指纹图像获取、处理、特征提取和对等模块。如果要做渗透测
试，需要了解要渗透测试的操作系统的类型才可以。本节将介绍使用Nmap工具测试正在
运行的主机的操作系统。
4.5.1使用Nmap工具识别系统指纹信息
使用Nmap命令的-O选项启用操作系统测试功能。执行命令如下所示：
root@kali:~# nmap -O 192.168.41.136
Nmap scan report for www.benet.com (192.168.41.136)
Host is up (0.00045s latency).
Not shown: 996 closed ports
PORT
STATE SERVICE
22/tcp open ssh
53/tcpopendomain
80/tcp openhttp
111/tcp openrpcbind
MAC Address: 00:0C:29:31:02:17 (VMware)
/MAC地址
Device type: general purpose
Running: Linux 2.6.Xj3.X
OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3
//操作系统类型
OS details: Linux 2.6.32 - 3.9
• 89 *
---
## Page 102
第2篇信息的收集及利用
Network Distance:1 hop
Nmap done: 1 IP address (1 host up) scanned in 2.18 seconds
输出的信息显示了主机192.168.41.136的指纹信息，包括目标主机打开的端口、MAC
地址、操作系统类型和内核版本等。
4.5.2指纹识别工具p0f
pOf是一款百分之百的被动指纹识别工具。该工具通过分析目标主机发出的数据包，
对主机上的操作系统进行鉴别，即使是在系统上装有性能良好的防火墙也没有问题。pOf
主要识别的信息如下：
口操作系统类型；
口端口；
口是否运行于防火墙之后：
口是否运行于NAT模式；
口是否运行于负载均衡模式：
口远程系统已启动时间；
口远程系统的DSL和ISP信息等。
使用pOf分析Wireshark捕获的一个文件。执行命令如下所示：
root@kali:~# p0f -r /tmp/targethost.pcap -0 p0f-result.log
- p0f 3.06b by Michal Zalewski  -
[+] Closed 1 file descriptor.
[+] Loaded 314 signatures from 'p0f.fp'.
[+] Will read pcap data from file '/tmp/targethost.pcap
[+] Default packet filtering configured [+VLAN].
[+] Log file pof-result.log' opened for writing.
[+] Processing capture data.
[ 192.168.41.234/55653 -> 192.168.41.141/80 (syn) ]-
|client
=192.168.41.234/55653
|os
= Linux 2.2.x-3.x
=0
Iparams
=generic
|raw_sig
= 4:64+0:0:1460:mss*20,10:mss,sok,ts,nop,ws:df,id+:0
-[ 192.168.41.234/55653 -> 192.168.41.141/80 (mtu) ]
| client
= 192.168.41.234/55653
link
= Ethernet or modem
|raw_mtu
= 1500
--[ 192.168.41.234/55653 -> 192.168.41.141/80 (syn+ack) ]
|server
= 192.168.41.141/80
os
= Linux 3.x
· 90 ·
---
## Page 103
第4章信息收集
|dist
=0
|params
= none
|raw_sig
=4:64+0:0:1460:mss+10,6:mss,sok,ts,nop.ws:df:0
--[ 192.168.41.234/55653 -> 192.168.41.141/80 (mtu) ]
|server
= 192.168.41.141/80
[link
= Ethernet or modem
|raw_mtu
= 1500
-[ 192.168.41.234/55653 -> 192.168.41.141/80 (http request) ]
|client
= 192.168.41.234/55653
|app
= Firefox 10.x or newer
|lang
= English
|params
= none
raw_sig
1:Host,User-Agent,Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,+/+;q=0.8],Acce
pt-Language=[en-US,en;q=0.5],Accept-Encoding=[gzip,deflate],Connection=[keep-alive]:Accept-
Charset,Keep-Alive:Mozilla/5.0(X11;Linuxi686;rv:22.0)Gecko/20100101Firefox/22.0
lceweasel/22.0
-[192.168.41.234/55653 -> 192.168.41.141/80 (http response)]
server
= 192.168.41.141/80
|app
= Apache 2.x
lang
=none
|params
= none
raw_sig
1:Date,Server,Accept-Ranges=[bytes],?Content-Length,Connection=[close],Content-Type:Keep-
Alive:Apache/2.2.15 (Red Hat)
All done. Processed 718 packets.
输出的信息是pOf分析targethost.pcap包的一个结果。该信息中显示了客户端与服务器
的详细信息，包括操作系统类型、地址、以太网模式、运行的服务器和端口号等。
注意：pOf命令的v2和v3版中所使用的选项有很大的差别。例如，在pOfv2版本中，
指定文件使用的选项是-s，但是在v3版本中是-r。本书中使用的p0f版本是v3。
4.6
5服务的指纹识别
为了确保有一个成功的渗透测试，必须需要知道目标系统中服务的指纹信息。服务指
纹信息包括服务端口、服务名和版本等。在Kali中，可以使用Nmap和Amap工具识别指
纹信息。本节将介绍使用Nmap和Amap工具的使用。
·16 •
---
## Page 104
第2篇信息的收集及利用
4.6.1使用Nmap工具识别服务指纹信息
使用Nmap工具查看192.168.41.136服务上正在运行的端口。执行命令如下所示：
root@kali:~# nmap -sV 192.168.41.136
Nmap scan report for www.benet.com (192.168.41.136)
Host is up (0.00020s latency).
Not shown: 995 closed ports
PORT
STATE
SERVICE
VERSION
21/tcp
open
ftp
vsftpd 2.2.2
22/tcp
openssh
OpenSSH5.3
(protocol 2.0)
53/tcp
open domain
80/tcp
openhttp
Apache httpd 2.2.15
((Red Hat)
111/tcp
openrpcbind
2-4 (RPC #100000)
MAC Address: 00:0C:29:31:02:17 (VMware)
Service Info:OS:Unix
Nmap done: 1 IP address (1 host up) scanned in 11.50 seconds
从输出的信息中可以查看到目标服务器上运行的端口号有21、22、53、80和111。同
时，还获取各个端口对应的服务及版本信息。
4.6.2服务枚举工具Amap
Amap是一个服务枚举工具。使用该工具能识别正运行在一个指定端口或一个范围端
口上的应用程序。下面使用Amap工具在指定的50～100端口范围内，测试目标主机
192.168.41.136上正在运行的应用程序。执行命令如下所示：
root@kali:~# amap -bq 192.168.41.136 50-100
amap v5.4 (www.thc.org/thc-amap) started at 2014-04-21 11:20:36 - APPLICATION MAPPING
mode
Protocol on 192.168.41.136:80/tcp matches http -banner: \n\n501
Method
Not
o>o<>><>
Protocol on 192.168.41.136:80/tcp matches http-apache-2 - banner: \n\n501
Method
Not
>>eo<>o>>>
supported.Inn\nApache/2.2.15 (Red Hat) Server at www.benet.c
Protocol on 192.168.41.136:53/tcp matches dns - banner: f
amap v5.4 finished at 2014-04-21 11:20:48
输出的信息显示了192.168.41.136主机在50～100端口范围内正在运行的端口。从输
出结果的第二段内容中可以了解到主机192.168.41.136使用的是RedHat操作系统，并且
正在运行着版本为2.2.15的Apache服务器，其开放的端口是80。从倒数第二行信息中可
以看到该主机还运行了DNS服务器，其开放的端口是53。
· 92 ·
---
## Page 105
第4章信息收集
4.7其他信息收集手段
上面介绍了使用不同的工具以操作步骤的形式进行了信息收集。在Kali中还可以使用
一些常规的或非常规方法来收集信息，如使用Recon-NG框架、Netdiscover工具和Shodan
工具等。本节将介绍使用这些方法，实现信息收集。
4.7.1Recon-NG框架
Recon-NG是由Python编写的一个开源的Web侦查（信息收集）框架。Recon-NG框
架是一个强大的工具，使用它可以自动的收集信息和网络侦查。下面将介绍使用Recon-NG
侦查工具。
启动Recon-NG框架。执行命令如下所示：
root@kali:~# recon-ng
!_
!