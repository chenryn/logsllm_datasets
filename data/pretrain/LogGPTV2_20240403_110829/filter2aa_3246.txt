### 安全软件开发生命周期 (S-SDLC)

#### 与业务安全

**自我介绍 & 培训**
- **高级讲师**: 包悦忠
- **CWASP 高级讲师**: 包悦忠
- **专场培训**
  1. 地点: 北京市朝阳区北四环中路8号 五洲皇冠国际酒店 会议室8
  2. 参与条件: 高级会员免费参与

#### 软件安全保障

**定义**
- Software Security Assurance (软件安全保障) 是确保软件在设计和运行过程中达到与其处理的数据和资源相关的潜在危害相一致的安全水平的过程。这包括防止数据丢失、不准确、篡改、不可用或滥用。

#### S-SDLC 关键要素

- **需求分析**
- **设计阶段**
- **开发阶段**
- **测试阶段**
- **部署与运维**

**具体活动**
- **风险评估**
- **威胁建模**
- **设计审核**
- **安全开发**
- **安全测试**
- **安全加固**
- **补丁管理**
- **攻击面分析**
- **代码审核**
- **渗透测试**
- **漏洞管理**
- **安全事件响应**

**工具与资源**
- **风险评估模板**
- **威胁库**
- **设计审核模板**
- **公共安全组件**
- **静态分析工具**
- **动态分析工具**
- **第三方渗透测试**
- **安全基线**
- **扫描、监控与管理工具**

#### S-SDLC 与敏捷开发

- **环境初始化**
- **威胁建模**
- **安全开发**
- **持续集成**
- **代码审核**
- **更新设计**
- **自动化部署**
- **安全运维**
- **持续测试**
- **渗透测试**

#### 业界最佳实践

**流程体系与持续改进**
- 固化 → 实施 → 评估 → 改进 → 再固化

**培训与意识**
- 提升管理层的实际支持与可见度

**成熟度模型**
- **Software Assurance Maturity Model (SAMM)**
- **Microsoft SDL Optimization Model**

#### 设计与业务安全

**威胁分析目的**
- **仿冒 (Spoofing)**
- **篡改 (Tampering)**
- **抵赖 (Repudiation)**
- **信息泄露 (Information Disclosure)**
- **拒绝服务 (Denial of Service)**
- **权限提升 (Elevation of Privilege)**

**数据流图**
- **元素**: 用户标识、邮件、代理服务、移动客户端、第三方邮件服务
- **威胁模型**: S.T.R.I.D.E.

**消减措施**
- **身份验证 (Authentication)**
  - 方法: 用户名/密码、Cookie、数字签名、挑战-应答、自定义
- **完整性 (Integrity)**
  - 方法: 访问控制、数字签名
- **防抵赖 (Non-Repudiation)**
  - 方法: 日志审计、数字签名
- **保密性 (Confidentiality)**
  - 方法: 加密、访问控制
- **可用性 (Availability)**
  - 方法: 访问控制、过滤、配额
- **授权 (Authorization)**
  - 方法: 访问控制、输入验证

**威胁库示例**
- **仿冒外部交互方或处理过程**
  - 缺乏身份验证
  - 绕过身份验证
  - 参数操纵攻击
  - 身份验证漏洞
  - 密码策略问题
  - Cookie值可预料性
  - 数字签名证书验证问题
  - 挑战-应答反射攻击
  - 自定义用户标识可预测性

**风险分析**
- **输出**
  - **设计阶段**
    - 客户端和代理服务间消息加密
    - 生成用户标识的随机性
    - 客户端应用对代理服务的认证
    - 用户帐户信息删除
    - 用户标识客户端存储加密
    - 用户标识客户端存储安全性
    - 防止SQL注入
  - **开发阶段**
    - 代理服务和第三方服务间消息加密
    - 代理服务对第三方服务的认证
  - **部署阶段**
    - 服务器安全加固
    - 数据库安全加固
  - **测试阶段**
    - 客户端和代理服务间消息加密
    - 客户端应用对代理服务的认证
    - 生成用户标识的随机性检查
    - 用户标识存储在应用隔离储存区
    - SQL注入攻击测试
    - 目录遍历和强制浏览攻击测试

#### 总结
1. 软件安全是软件质量的一个重要维度。
2. 安全活动是软件开发活动的一部分，而不是随后添加或“bolted on”。
3. 软件安全漏洞等同于缺陷 (bug)。
4. 尽可能早地执行安全活动，尽早发现安全缺陷，降低修复成本。
5. 软件安全保障的方法既适用于内部软件开发，也适用于第三方软件开发和集成。