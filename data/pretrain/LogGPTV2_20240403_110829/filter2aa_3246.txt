安全软件开发生命周期(S SDLC)
安全软件开发生命周期(S-SDLC)
与业务安全
与业务安全
自我介绍&培训
高级讲师 包悦忠
• CWASP高级讲师：包悦忠
• 专场培训
1） 北京市朝阳区北四环中路8号 五洲皇冠国际酒店 会议室8
1） 北京市朝阳区北四环中路8号 五洲皇冠国际酒店 会议室8
2） 高级会员免费参与
软件安全保障
(软件安全
• Software Security Assurance (软件安全
保障) is the process (流程) of ensuring that 
)
p
(
)
g
software is designed (设计) to operate at a 
level of security that is consistent with the
level of security that is consistent with the 
potential harm that could result from the loss, 
inaccuracy, alteration, unavailability, or misuse of 
y,
,
y,
the data and resources (数据和资源) that 
it uses, controls, and protects.
it uses, controls, and protects.
‐摘自英文Wikipedia网站
软件安全保障
流程
软件安全保障
安全软件开发生命周期 (S‐SDLC)
——关键要素
关键要素
需求
设计
开发
测试
部署和
运维
运维
风险评估
‐
威胁建模
设计审核
‐
安全开发
‐
安全测试
‐
安全加固
‐
补丁管理
‐
风险评估
‐
设计审核
‐
攻击面分析
‐
代码审核
‐
渗透测试
‐
漏洞管理
‐
安全事件响应
‐
风险评估模板
‐
威胁库
‐
设计审核模板
‐
公共安全组件
‐
静态分析工具
‐
动态分析工具
‐
第三方渗透测
试
‐
安全基线
‐
扫描、监控、
管理工具
培训
政策
组织能力
培训、政策、组织能力
安全软件开发生命周期 (S‐SDLC)
——流程与敏捷开发
流程与敏捷开发
• 环境初始
化
• 威胁建模
• 安全开发
• 持续集成
• 代码审核
• 更新设计
设计
开发
自动化部
持续测试
测试
部署
• 自动化部
署
• 安全运维
• 持续测试
• 渗透测试
软件安全保障
——业界最佳实践
业界最佳实践
流程体系 持续改进
• 流程体系、持续改进
– 固化→实施→评估→改进→再固化
固化→实施→评估→改进→再固化
• 设计安全
培训 意识和能力
• 培训、意识和能力
• 管理层实际的、可见的支持
管理层实际的、可见的支持
软件安全保障
——流程成熟度模型
• Software Assurance Maturity Model (SAMM)
软件安全保障
——流程成熟度模型
• Microsoft SDL Optimization Model
软件安全保障
设计暨业务安全
软件安全保障
设计
务
威胁分析目的
威胁
安全
安全
安全
安全
威胁
分析
安全
设计
安全
开发
安全
测试
安全
部署
分析
设计
开发
测试
部署
数据流图
帐号
帐号、
用户标识
帐号
邮件
代理服务
移动
客户端
第三方
邮件服务
用户标识
用户标识
邮件
帐号
邮件
邮件
用户标识
邮件
威胁模型 S.T.R.I.D.E.
仿冒
篡改
抵赖
信息泄露
拒绝服务
权限提升
数据流图
元素
仿冒
(Spoofi
ng)
篡改
(Tampe
ring)
抵赖
(Repudi
ation)
信息泄露
(Informa
tion
Disclosur
拒绝服务
(Denial
of
Service)
权限提升
(Elevatio
nof
Privilege)
Disclosur
e)
Service)
Privilege)
外部交互方
√
√
处理过程
√
√
√
√
√
√
数据存储
√
√
√
√
数据流
数据流
√
√
√
威胁分析
帐号
I
帐号、
用户标识
帐号
I
I
S
S R
邮件
代理服务
移动
客户端
第三方
邮件服务
用户标识
用户标识
邮件
帐号
邮件
I
D E
I
T
S R
邮件
I
用户标识
邮件
I
I
消减措施
——方法、技术手段
S
消减措施
方法
技术手段
S.T.R.I.D.E.
消减措施
方法、技术手段
仿冒(Spoofing)
身份验证
(Authentication)
用户名/密码、Cookie、数字签
名、挑战‐应答、自定义
篡改(Tampering)
完整性(Integrity)
访问控制、数字签名
抵赖(Repudiation)
防抵赖(Non
Repudiation)
日志审计、数字签名
Repudiation)
信息泄露(Information
Disclosure)
保密性
(Confidentiality)
加密、访问控制
拒绝服务(Denialof
Service)
可用性
(Availability)
访问控制、过滤、配额
权限提升(Elevation of
授权
访问控制、输入验证
权限提升(Elevationof
Privilege)
授权
(Authorization)
访问控制、输入验证
威胁库示例
——仿冒外部交互方或处理过程
缺乏身份验证
绕过身份验证
客户端、服务器端
绕过身份验证
客户端、服务器端
参数操纵攻击
身份验证漏洞
用户名/密码
没有实施密码策略
密码重置安全绕过漏洞
密码重置安全绕过漏洞
Cookie
Cookie值具有可预料性
Cookie重放攻击
用户退出登录后C
ki 不失效
用户退出登录后Cookie不失效
PaddingOracle攻击
数字签名、证书
证书验证相关问题
挑战‐应答
反射攻击
自定义
服务生成的用户标识具有可预料性
…
…
…
风险分析
帐号
I
帐号、
用户标识
帐号
I
I
S
S R
邮件
代理服务
移动
客户端
第三方
邮件服务
用户标识
用户标识
邮件
帐号
邮件
I
D E
I
T
S R
邮件
I
用户标识
邮件
I
I
威胁分析输出
设计
(H) 客户端和代理服务间讯息加密
开发
(H) 生成用户标识的随机性
(H) 客户端应用对代理服务的认证
(H) 用户帐户信息删除
(M) 用户标识客户端存储加密
(H) 用户标识客户端存储安全性
(H) 防止SQL注入
…
(
)
户标
客户端存储
(M) 代理服务和第三方服务间讯息加
密
(M) 代理服务对第三方服务的认证
(
) 代
服务对第
方服务的认
…
部署
服务器安全加固
数据库安全加固
测试
客户端和代理服务间讯息加密
客户端应用对代理服务的认证
数据库安全加固
…
客户端应用对代理服务的认证
生成用户标识的随机性检查
用户标识存储在应用隔离储存区
SQL注入攻击测试
目录遍历和强制浏览攻击测试
目录遍历和强制浏览攻击测试
…
总结
1. 软件安全是软件质量的一个重要维度
2 安全活动是软件开发活动的一部分，而不
2. 安全活动是软件开发活动的
部分，而不
是被随后添加或“bolted on”
软件安全漏洞
缺陷(
)
3. 软件安全漏洞==缺陷(bug)
4. 尽可能早的执行安全活动，尽早发现安全
4. 尽可能早的执行安全活动，尽早发现安全
缺陷，降低安全漏洞的修复成本
5 软件安全保障的方法既适用于内部软件开
5. 软件安全保障的方法既适用于内部软件开
发，也同样适用于第三方软件开发、集成