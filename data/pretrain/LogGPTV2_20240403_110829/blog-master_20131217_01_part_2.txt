 idx_iso_test_1 | relation   |    16384 |    93017 |      |       |            |               |         |       |          | 1/1579  
96           | 12186 | AccessShareLock | t       | t  
 iso_test       | relation   |    16384 |    92992 |      |       |            |               |         |       |          | 1/1579  
96           | 12186 | AccessShareLock | t       | t  
                | virtualxid |          |          |      |       | 1/157996   |               |         |       |          | 1/1579  
96           | 12186 | ExclusiveLock   | t       | t  
 iso_test       | tuple      |    16384 |    92992 |    0 |   100 |            |               |         |       |          | 1/1579  
96           | 12186 | SIReadLock      | t       | f  
 idx_iso_test_1 | page       |    16384 |    93017 |    1 |       |            |               |         |       |          | 1/1579  
96           | 12186 | SIReadLock      | t       | f  
(5 rows)  
digoal=# begin ISOLATION LEVEL SERIALIZABLE;  
BEGIN  
digoal=# select sum(id) from iso_test where id=10;  
-[ RECORD 1 ]  
sum | 10  
digoal=# select relation::regclass,* from pg_locks where pid in (12186,12222);  
    relation    |  locktype  | database | relation | page | tuple | virtualxid | transactionid | classid | objid | objsubid | virtua  
ltransaction |  pid  |      mode       | granted | fastpath   
----------------+------------+----------+----------+------+-------+------------+---------------+---------+-------+----------+-------  
-------------+-------+-----------------+---------+----------  
 idx_iso_test_1 | relation   |    16384 |    93017 |      |       |            |               |         |       |          | 1/1579  
96           | 12186 | AccessShareLock | t       | t  
 iso_test       | relation   |    16384 |    92992 |      |       |            |               |         |       |          | 1/1579  
96           | 12186 | AccessShareLock | t       | t  
                | virtualxid |          |          |      |       | 1/157996   |               |         |       |          | 1/1579  
96           | 12186 | ExclusiveLock   | t       | t  
 idx_iso_test_1 | relation   |    16384 |    93017 |      |       |            |               |         |       |          | 2/6433  
314          | 12222 | AccessShareLock | t       | t  
 iso_test       | relation   |    16384 |    92992 |      |       |            |               |         |       |          | 2/6433  
314          | 12222 | AccessShareLock | t       | t  
                | virtualxid |          |          |      |       | 2/6433314  |               |         |       |          | 2/6433  
314          | 12222 | ExclusiveLock   | t       | t  
 iso_test       | tuple      |    16384 |    92992 |    0 |   100 |            |               |         |       |          | 1/1579  
96           | 12186 | SIReadLock      | t       | f  
 iso_test       | tuple      |    16384 |    92992 |    0 |    10 |            |               |         |       |          | 2/6433  
314          | 12222 | SIReadLock      | t       | f  
 idx_iso_test_1 | page       |    16384 |    93017 |    1 |       |            |               |         |       |          | 1/1579  
96           | 12186 | SIReadLock      | t       | f  
 idx_iso_test_1 | page       |    16384 |    93017 |    1 |       |            |               |         |       |          | 2/6433  
314          | 12222 | SIReadLock      | t       | f  
(10 rows)  
digoal=# insert into iso_test values (1,'test');  
INSERT 0 1  
digoal=# select relation::regclass,* from pg_locks where pid in (12186,12222);  
    relation    |   locktype    | database | relation | page | tuple | virtualxid | transactionid | classid | objid | objsubid | vir  
tualtransaction |  pid  |       mode       | granted | fastpath   
----------------+---------------+----------+----------+------+-------+------------+---------------+---------+-------+----------+----  
----------------+-------+------------------+---------+----------  
 idx_iso_test_1 | relation      |    16384 |    93017 |      |       |            |               |         |       |          | 1/1  
57996           | 12186 | AccessShareLock  | t       | t  
 iso_test       | relation      |    16384 |    92992 |      |       |            |               |         |       |          | 1/1  
57996           | 12186 | AccessShareLock  | t       | t  
 iso_test       | relation      |    16384 |    92992 |      |       |            |               |         |       |          | 1/1  
57996           | 12186 | RowExclusiveLock | t       | t  
                | virtualxid    |          |          |      |       | 1/157996   |               |         |       |          | 1/1  
57996           | 12186 | ExclusiveLock    | t       | t  
 idx_iso_test_1 | relation      |    16384 |    93017 |      |       |            |               |         |       |          | 2/6  
433314          | 12222 | AccessShareLock  | t       | t  
 iso_test       | relation      |    16384 |    92992 |      |       |            |               |         |       |          | 2/6  
433314          | 12222 | AccessShareLock  | t       | t  
                | virtualxid    |          |          |      |       | 2/6433314  |               |         |       |          | 2/6  
433314          | 12222 | ExclusiveLock    | t       | t  
                | transactionid |          |          |      |       |            |     316732567 |         |       |          | 1/1  
57996           | 12186 | ExclusiveLock    | t       | f  
 iso_test       | tuple         |    16384 |    92992 |    0 |   100 |            |               |         |       |          | 1/1  
57996           | 12186 | SIReadLock       | t       | f  
 iso_test       | tuple         |    16384 |    92992 |    0 |    10 |            |               |         |       |          | 2/6  
433314          | 12222 | SIReadLock       | t       | f  
 idx_iso_test_1 | page          |    16384 |    93017 |    1 |       |            |               |         |       |          | 1/1  
57996           | 12186 | SIReadLock       | t       | f  
 idx_iso_test_1 | page          |    16384 |    93017 |    1 |       |            |               |         |       |          | 2/6  
433314          | 12222 | SIReadLock       | t       | f  
(12 rows)  
digoal=# insert into iso_test values (2,'test');  
INSERT 0 1  
digoal=# select relation::regclass,* from pg_locks where pid in (12186,12222);  
    relation    |   locktype    | database | relation | page | tuple | virtualxid | transactionid | classid | objid | objsubid | vir  
tualtransaction |  pid  |       mode       | granted | fastpath   
----------------+---------------+----------+----------+------+-------+------------+---------------+---------+-------+----------+----  
----------------+-------+------------------+---------+----------  
 idx_iso_test_1 | relation      |    16384 |    93017 |      |       |            |               |         |       |          | 1/1  
57996           | 12186 | AccessShareLock  | t       | t  
 iso_test       | relation      |    16384 |    92992 |      |       |            |               |         |       |          | 1/1  
57996           | 12186 | AccessShareLock  | t       | t  
 iso_test       | relation      |    16384 |    92992 |      |       |            |               |         |       |          | 1/1  
57996           | 12186 | RowExclusiveLock | t       | t  
                | virtualxid    |          |          |      |       | 1/157996   |               |         |       |          | 1/1  
57996           | 12186 | ExclusiveLock    | t       | t  
 idx_iso_test_1 | relation      |    16384 |    93017 |      |       |            |               |         |       |          | 2/6  
433314          | 12222 | AccessShareLock  | t       | t  
 iso_test       | relation      |    16384 |    92992 |      |       |            |               |         |       |          | 2/6  
433314          | 12222 | AccessShareLock  | t       | t  
 iso_test       | relation      |    16384 |    92992 |      |       |            |               |         |       |          | 2/6  
433314          | 12222 | RowExclusiveLock | t       | t  
                | virtualxid    |          |          |      |       | 2/6433314  |               |         |       |          | 2/6  
433314          | 12222 | ExclusiveLock    | t       | t  
                | transactionid |          |          |      |       |            |     316732567 |         |       |          | 1/1  
57996           | 12186 | ExclusiveLock    | t       | f  
                | transactionid |          |          |      |       |            |     316732568 |         |       |          | 2/6  
433314          | 12222 | ExclusiveLock    | t       | f  
 iso_test       | tuple         |    16384 |    92992 |    0 |   100 |            |               |         |       |          | 1/1  
57996           | 12186 | SIReadLock       | t       | f  
 iso_test       | tuple         |    16384 |    92992 |    0 |    10 |            |               |         |       |          | 2/6  
433314          | 12222 | SIReadLock       | t       | f  
 idx_iso_test_1 | page          |    16384 |    93017 |    1 |       |            |               |         |       |          | 1/1  
57996           | 12186 | SIReadLock       | t       | f  
 idx_iso_test_1 | page          |    16384 |    93017 |    1 |       |            |               |         |       |          | 2/6  
433314          | 12222 | SIReadLock       | t       | f  
(14 rows)  
digoal=# commit;  
COMMIT  
digoal=# commit;  
ERROR:  could not serialize access due to read/write dependencies among transactions  
DETAIL:  Reason code: Canceled on identification as a pivot, during commit attempt.  
HINT:  The transaction might succeed if retried.  
```  
索引页用了同一个, 并且被插入语句更新了. 所以发生了冲突  
例子3  
行数和索引页锁, 但是索引页为不同的页面  
如果其中一个插入的值不在1号索引页则没有问题, 例如  
```  
digoal=# begin ISOLATION LEVEL SERIALIZABLE;  
BEGIN  
digoal=# select sum(id) from iso_test where id=100;  
-[ RECORD 1 ]  
sum | 100  
digoal=# insert into iso_test values (1,'test');  
INSERT 0 1  
digoal=# commit;  
COMMIT  
digoal=# begin ISOLATION LEVEL SERIALIZABLE;  
BEGIN  
digoal=# select sum(id) from iso_test where id=10;  
-[ RECORD 1 ]  
sum | 10  
digoal=# insert into iso_test values (200000,'test');  
INSERT 0 1  
digoal=# commit;  
COMMIT  
(200000,'test') 这个索引页不在1号  
 idx_iso_test_1 | page       |    16384 |    93017 |  275 |       |            |               |         |       |          | 2/6433  
316          | 12222 | SIReadLock      | t       | f  
```  
## 参考  
http://www.postgresql.org/docs/9.3/static/transaction-iso.html  
http://www.postgresql.org/docs/9.3/static/runtime-config-developer.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")