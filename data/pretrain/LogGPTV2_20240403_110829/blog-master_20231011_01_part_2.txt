docker logs nginx
docker logs odoopg
docker logs odoopd
```  
8、将odoo服务的网络加入到bridge网桥, 用于打通odoo服务和数据库服务容器的网络  
```  
docker network connect bridge odoopg  
docker network connect bridge odoopd  
```  
9、配置宿主机(macbook)的hosts, 以便于nginx服务区分两个odoo服务(连接PolarDB-PG和PG-14的2个odoo服务).   
```  
sudo vi /etc/hosts  
## add for odoo test. 对应 PG_ODOO_HOST, PD_ODOO_HOST    
127.0.0.1 pg   
127.0.0.1 pd  
```  
10、实例起来之后，通过WEB配置odoo, 安装销售、采购、库存等应用模块  
10\.1、配置连接PG-14的odoo服务  
http://pg:80  
```  
Master Password: admin  
Database Name: pg  
Email: PI:EMAIL  
Password: 123456  
Phone number: 123456  
Language: 中文  
Country: china  
Demo data: yes  
click: Create Database  
```  
10\.2、配置连接PolarDB-PG的odoo服务  
http://pd:80  
```  
Master Password: admin  
Database Name: pd  
Email: PI:EMAIL  
Password: 123456  
Phone number: 123456  
Language: 中文  
Country: china  
Demo data: yes  
click: Create Database  
```  
后续登陆odoo使用到里面的email和Password.     
PS:  
如果忘记master password, 修改宿主机对应配置文件admin_passwd即可.  
```  
PolarDB-PG-Benchmark/odoopd/config/odoo.conf  
PolarDB-PG-Benchmark/odoopg/config/odoo.conf  
admin_passwd = admin  
```  
11、压测  
压测留给同学们自己完成, 测试脚本在如下目录中:  
PolarDB-PG-Benchmark/tests  
有兴趣的同学可以学习下一个实验, [《沉浸式学习PostgreSQL|PolarDB 20: 学习成为数据库大师级别的优化技能》](../202310/20231012_01.md)  
12、odoo里面有大量的模块可以体验, 例如crm, MRP, 会计, 制造, 费用, 知识库, 项目管理, 邮件营销, 库存, 采购, 开票, 电子商务, 工时表, 休假 ...  
感兴趣的同学可以自行研究.  
## 知识点     
PolarDB PG 共享存储读写分离架构: https://apsaradb.github.io/PolarDB-for-PostgreSQL/zh/  
pgpool-II  
优化器  
遗传JOIN算法 geqo  
aqo  
## 思考   
PolarDB-PG 在这个case中相比单机PG的优势是什么?  
如果想使用PolarDB-PG的透明读写分离功能, 应该是有什么连接池软件? pgpool-ii  
如何部署多机+共享存储的真.PolarDB-PG的透明读写分离功能?  
对于很多表的JOIN数据库有什么优化方法? 如何选择出最佳JOIN方法(hash, merge, nestloop, anti...)和JOIN顺序(abc, bca, cba, cab, ...)? 穷举法? geqo? aqo?   
## 参考    
[《PolarDB 开源版 使用pgpool-II实现透明读写分离》](../202301/20230102_01.md)    
[《PolarDB for PostgreSQL 开源版本 + 阿里云多机挂载共享ESSD云盘》](../202111/20211122_02.md)    
[《network block device(nbd) 共享网络块设备 - 用于测试RAC和PolarDB for PG共享存储版》](../202110/20211015_01.md)    
https://developer.aliyun.com/article/1163005  
[《PostgreSQL SQL动态优化器 aqo 背景论文》](../202101/20210122_02.md)    
[《[未完待续] PostgreSQL PRO 特性 - AQO(机器学习执行计划优化器)》](../201803/20180322_04.md)    
[《数据库优化器原理(含动态规划、机器学习建模优化器aqo) - 如何治疗选择综合症》](../201705/20170507_01.md)    
##### 202202/20220216_01.md   [《一起学PolarDB - 第23期 - 为什么磁盘RT会严重影响vacuum垃圾回收效率?》](../202202/20220216_01.md)    
##### 202202/20220214_01.md   [《一起学PolarDB - 第22期 - 为什么高并发数据写入吞吐无法达到磁盘极限-1》](../202202/20220214_01.md)    
##### 202202/20220208_04.md   [《一起学PolarDB - 第21期 - 从3到2.5》](../202202/20220208_04.md)    
##### 202201/20220120_01.md   [《一起学PolarDB - 第20期 - 为什么GIS时空查询即耗CPU又费IO?》](../202201/20220120_01.md)    
##### 202201/20220119_02.md   [《一起学PolarDB - 第19期 - 为什么做检查点会导致性能抖动?》](../202201/20220119_02.md)    
##### 202201/20220118_05.md   [《一起学PolarDB - 第18期 - 为什么创建索引慢?》](../202201/20220118_05.md)    
##### 202201/20220117_01.md   [《一起学PolarDB - 第17期 - 为什么只读实例延迟高?》](../202201/20220117_01.md)    
##### 202201/20220112_03.md   [《一起学PolarDB - 第16期 - Oracle的RAC神话被打破了!虽然有点晚,但开源》](../202201/20220112_03.md)    
##### 202201/20220111_02.md   [《一起学PolarDB - 第15期 - Coordinator也会有瓶颈?》](../202201/20220111_02.md)    
##### 202201/20220111_01.md   [《一起学PolarDB - 第14期 - 为什么SQL不能动态分组计算?》](../202201/20220111_01.md)    
##### 202201/20220110_03.md   [《一起学PolarDB - 第13期 - 为什么木桶有短板?》](../202201/20220110_03.md)    
##### 202201/20220110_01.md   [《一起学PolarDB - 第12期 - 为什么增加只读实例不能提高单条SQL的执行速度?》](../202201/20220110_01.md)    
##### 202201/20220105_01.md   [《一起学PolarDB - 第11期 - 为什么实例越大备份与恢复越难?》](../202201/20220105_01.md)    
##### 202201/20220104_03.md   [《一起学PolarDB - 第10期 - 为什么数据库重启或崩溃恢复后性能可能瞬间很差?》](../202201/20220104_03.md)    
##### 202201/20220104_02.md   [《一起学PolarDB - 第9期 - 为什么经常使用临时表时建议使用全局临时表?》](../202201/20220104_02.md)    
##### 202201/20220104_01.md   [《一起学PolarDB - 第8期 - 为什么存储RT指标对实例性能影响很大?》](../202201/20220104_01.md)    
##### 202112/20211230_04.md   [《一起学PolarDB - 第7期 - 为什么数据库越大崩溃恢复越慢?》](../202112/20211230_04.md)    
##### 202112/20211230_03.md   [《一起学PolarDB - 第6期 - 为什么failover后逻辑复制会丢数据?》](../202112/20211230_03.md)    
##### 202112/20211230_02.md   [《一起学PolarDB - 第5期 - 为什么PG有Double Cache?》](../202112/20211230_02.md)    
##### 202112/20211230_01.md   [《一起学PolarDB - 第4期 - 为什么增加RO节点动则数小时?》](../202112/20211230_01.md)    
##### 202112/20211229_02.md   [《一起学PolarDB - 第3期 - 为什么不能无限增加只读实例?》](../202112/20211229_02.md)    
##### 202112/20211228_02.md   [《一起学PolarDB - 第2期 - 为什么FPW是以牺牲(性能、存储空间、稳定性)换取的可靠性?》](../202112/20211228_02.md)    
##### 202112/20211228_01.md   [《一起学PolarDB - 第1期 - 为什么通常扩容需要停机?》](../202112/20211228_01.md)    
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")