title:On the Just-In-Time Discovery of Profit-Generating Transactions in
DeFi Protocols
author:Liyi Zhou and
Kaihua Qin and
Antoine Cully and
Benjamin Livshits and
Arthur Gervais
On the Just-In-Time Discovery of
Proﬁt-Generating Transactions in DeFi Protocols
Liyi Zhou, Kaihua Qin, Antoine Cully, Benjamin Livshits and Arthur Gervais
Imperial College London, United Kingdom
1
2
0
2
r
a
M
3
]
R
C
.
s
c
[
1
v
8
2
2
2
0
.
3
0
1
2
:
v
i
X
r
a
Abstract—Decentralized Finance (DeFi) is a blockchain-asset-
enabled ﬁnance ecosystem with millions of daily USD transaction
volume, billions of locked up USD, as well as a plethora of newly
emerging protocols (for lending, staking, and exchanges). Because
all transactions, user balances, and total value locked in DeFi are
publicly readable, a natural question that arises is: how can we
automatically craft proﬁtable transactions across the intertwined
DeFi platforms?
In this paper, we investigate two methods that allow us to
automatically create proﬁtable DeFi trades, one well-suited to ar-
bitrage and the other applicable to more complicated settings. We
ﬁrst adopt the Bellman-Ford-Moore algorithm with DEFIPOSER-
ARB and then create logical DeFi protocol models for a theorem
prover in DEFIPOSER-SMT. While DEFIPOSER-ARB focuses
on DeFi transactions that form a cycle and performs very well
for arbitrage, DEFIPOSER-SMT can detect more complicated
proﬁtable transactions. We estimate that DEFIPOSER-ARB and
DEFIPOSER-SMT can generate an average weekly revenue
of 191.48 ETH (76,592 USD) and 72.44 ETH (28,976 USD) re-
spectively, with the highest transaction revenue being 81.31 ETH
(32,524 USD) and 22.40 ETH (8,960 USD) respectively. We
further show that DEFIPOSER-SMT ﬁnds the known economic
bZx attack from February 2020, which yields 0.48M USD. Our
forensic investigations show that this opportunity existed for 69
days and could have yielded more revenue if exploited one day
earlier. Our evaluation spans 150 days, given 96 DeFi protocol
actions, and 25 assets.
Looking beyond the ﬁnancial gains mentioned above, forks
deteriorate the blockchain consensus security, as they increase
the risks of double-spending and selﬁsh mining. We explore
the implications of DEFIPOSER-ARB and DEFIPOSER-SMT
on blockchain consensus. Speciﬁcally, we show that the trades
identiﬁed by our tools exceed the Ethereum block reward by
up to 874×. Given optimal adversarial strategies provided by a
Markov Decision Process (MDP), we quantify the value threshold
at which a proﬁtable transaction qualiﬁes as Miner Extractable
Value (MEV) and would incentivize MEV-aware miners to fork
the blockchain. For instance, we ﬁnd that on Ethereum, a miner
with a hash rate of 10% would fork the blockchain if an MEV
opportunity exceeds 4× the block reward.
I. INTRODUCTION
Blockchain-based decentralized ﬁnance protocols (com-
monly referred to as DeFi) have attracted a recent surge
in popularity and value stored exceeding 13 billion USD.
The currently most popular DeFi platforms are based on the
Ethereum blockchain and its system of smart contracts, which
regularly gives nascence to new applications, mirrored and
inspired by the traditional centralized ﬁnance system. Exam-
ples are asset exchanges [24], [58], margin trading [3], [24],
lending/borrowing platforms [27], [30], and derivatives [27].
DeFi, moreover, can surprise with novel use-cases such as
Fig. 1: DEFIPOSER-ARB and DEFIPOSER-SMT system
overview. In DEFIPOSER-SMT, we 2(cid:13) Create logical models,
3(cid:13) paths are created and trimmed with heuristics and 4(cid:13)
used within a theorem prover to generate a transaction. In
DEFIPOSER-ARB we 2(cid:13) build a graph of the blockchain
state, 3(cid:13) identify negative cycles, 4(cid:13) perform a local search
and repeat. The transaction with the highest revenue is 4(cid:13)
concretely evaluated before being mined in the next block.
constant product market maker exchanges [26], [58] and ﬂash
loans — instant loans where the lender bears no risk that the
borrower does not repay the loan [4], [24], [53].
A peculiarity of DeFi platforms is their ability to inter-
operate; e.g., one may borrow a cryptocurrency asset on one
platform, exchange the asset on another, and for instance, lend
the resulting asset on a third system. DeFi’s composability
has led to the emergence of chained trading and arbitrage
opportunities throughout the tightly intertwined DeFi space.
Reasoning about what this easy composition entails is not
particularly simple; on one side, atomic composition allows
to perform risk-free arbitrage — that is to equate asset prices
on different DeFi markets. Arbitrage is a benign and important
endeavor to keep markets synchronized.
On the other side, we have seen multi-million-revenue
trades that cleverly use the technique of ﬂash loans to exploit
economic states in DeFi protocols (e.g., the economic attack
on bZx [3], [53] Harvest Finance [28], Value Deﬁ [23] and
others [5], [55]). While exploiting economic states, however, is
not a security attack in the traditional sense, the practitioners’
community often frames these high-revenue trades as “hacks.”
Yet, the executing trader follows the rules set forth by the
deployed smart contracts. Irrespective of the framing, liquidity
providers engaging with DeFi experience millions of USD
in unexpected losses. This highlights the need for automated
tools that help protocol designers and liquidity providers to
understand arbitrage and ﬁnancial
implications in general
when engaging with DeFi protocols.
DEFIPOSER-ARB and DEFIPOSER-SMT: This paper
presents two tools (cf. Figure 1) that automatically create
transactions to compose existing DeFi protocols to generate
revenue that can be extracted from the Ethereum ecosystem.
They are designed to run in real-time: at every block, they
can ﬁnd (and execute) a new proﬁt-generating transaction;
we show how our running time of an unoptimized imple-
mentation requires an average of 6.43 seconds and 5.39 sec-
onds on a recent Ethereum block (for DEFIPOSER-ARB and
DEFIPOSER-SMT respectively), which is below Ethereum’s
average block time of 13.5 seconds [9]. We would like to
point out that DEFIPOSER-ARB and DEFIPOSER-SMT, are
best-effort tools: because the state of the blockchain and DeFi
platforms may change at each block, it is important to operate
in real-time, otherwise found trading opportunities might be
outdated. Therefore, we made the choice of prioritizing exe-
cution speed over completeness, and we do not claim to ﬁnd
optimal strategies.
To the best of our knowledge, we are the ﬁrst to provide
automated transaction search mechanisms for composable
DeFi protocols. The main risks for a trader using the tools
that we consider within this work are currency exposure (i.e.,
price volatility risks) and the blockchain transaction fees. We
discover that signiﬁcant revenue can be generated with less
than 1 ETH of initial capital when using ﬂash loans.
Our contributions are as follows:
• DEFIPOSER-ARB: We build a directed DeFi market
graph and identify negative cycles with the Bellman-
Ford-Moore algorithm. A local search then allows us to
discover parameters for proﬁtable arbitrage transactions
in near-real-time (average of 6.43 seconds per block).
• DEFIPOSER-SMT and Space Reduction: To discover
more demanding trades than arbitrage, we model the DeFi
systems using a state transition model, which we translate
to a logical representation in the Z3 theorem prover.
We introduce heuristics to signiﬁcantly prune the search
space to achieve a near real-time transaction discovery
(average of 5.39 seconds per block).
• Miner Extractable Value (MEV) and Security: We
show how DEFIPOSER-SMT discovers the economic
attack on bZx, which yields over 0.48M USD, and that
this opportunity window was open for over 69 days.
Given optimal adversarial mining strategies provided by
a Markov Decision Process, we show quantitatively that
MEV opportunities can deteriorate the blockchain secu-
rity. For example, a rational MEV-aware miner with a
hash rate of 10% will fork the blockchain if an MEV
opportunity exceeds 4 times the block reward and the
miner failed to claim the source of MEV.
• Trading Strategy Validation: We validate the trad-
ing strategies discovered by DEFIPOSER-ARB and
DEFIPOSER-SMT on a locally-deployed blockchain that
mirrors the real network. We estimate that the found
strategies yield 4,103.22 ETH (1,641,288 USD) and
1,552.32 ETH (620,928 USD) of proﬁt between the
Ethereum block 9, 100, 000 to 10, 050, 000 (150 days
from December 2019 to May 2020). We demonstrate
that our tools’ capital requirements are minimal:
the
majority of the strategies require less than 150.00 ETH
(60,000 USD), and only 0.40 ETH (160 USD) when
using ﬂash loans.
Paper organization: The remainder of the paper is organized
as follows. Section II elaborates on the DeFi background,
discusses stable coins and ﬂash loans. Section III describes
how we encode DeFi protocols into state transition models.
Section IV applies negative cycle detection to ﬁnd DeFi
arbitrage opportunities. Section V presents our heuristics and
techniques to enable the autonomous discovery of adversar-
ial strategies. Section VI presents our empirical evaluation
and quantitative analysis of the found strategies on previous
Ethereum blockchain blocks. Section VII discusses DEFI-
POSER’s blockchain security implication. We discuss related
works in Section VIII and conclude the paper in Section IX.
II. BACKGROUND
In this section, we outline the required background for DeFi.
For extensive background on blockchains and smart contracts,
we refer the interested reader to [6], [11].
A. Decentralized Finance (DeFi)
Decentralized Finance (DeFi) refers to a ﬁnancial ecosystem
that is built on top of (permissionless) blockchains [59]. DeFi
supports a multitude of different ﬁnancial applications [3],
[4], [24], [24], [24], [27], [27], [30], [53], [58]. The current
DeFi landscape is mostly built upon smart contract enabled
blockchains (e.g., Ethereum). We brieﬂy summarize relevant
DeFi platforms.
Automated Market Maker (AMM): In traditional ﬁnance,
asset exchanges are usually operated in the form of order
matching. Asks and bids are matched in a centralized limit
order book, typically following the FIFO principle [17]. In
DeFi, such an order matching mechanism would be inefﬁcient
because the number of transactions per second supported by
the underlying blockchain is usually limited. Therefore, AMM
minimizes the number of transactions required to balance an
on-chain asset exchange. AMM allows liquidity providers, the
traders who are willing to provide liquidity to the market,
to deposit assets into a liquidity pool. Liquidity takers then
directly trade against the AMM liquidity pool according to a
predeﬁned pricing mechanism. The constant product AMM is
currently the most common model (adopted by over 66% of
the AMM DEX), where the core idea is to keep the product
of the asset amounts in the liquidity pool constant. Consider a
constant product AMM that trades the asset pair X/Y . x and
2
y are the amount of X and Y respectively in the liquidity
pool. A liquidity taker attempts to sell ∆x of X and get
∆y of Y in exchange. The constant product rule stipulates
that x × y = (x + ∆x) × (y − ∆y). Uniswap [58] is the
most dominating constant product AMM with a market capi-
talization of 1.4B USD [52]. Variant AMMs utilize different
pricing formulas, e.g., Bancor [40], while other platforms (e.g.,
Kyber [46]) aggregate AMMs. When receiving an order from
a user, these platforms redirect the order to the AMM, which
provides the best asset price.
Stablecoin: Stablecoins are a class of cryptocurrencies de-
signed to alleviate the blockchain price volatility [49]. The
most salient solution for stabilization is to peg the price of
stablecoins to a less-volatile currency (e.g., USD) [50]. There
exist over 200 stablecoin projects announced since 2014 [2].
Among them, SAI and DAI developed by MakerDAO [30]
have received extensive attention. Both SAI and DAI are
collateral-backed stablecoins. SAI is collateralized solely by
ETH, whereas DAI is an SAI upgrade to support multiple
assets as collateral. At the time of writing, the collateral locked
in MakerDAO amounts to 2.73B USD [52].
Flash Loans: The Ethereum blockchain operates similarly to a
replicated state machine. Transactions trigger state transitions
and provide the input data necessary for the Ethereum Virtual
Machine (EVM) state to change according to rules set by smart
contracts. Interestingly, the EVM state is only affected by a
transaction if the transaction executes without failure. In the
case of a failed transaction, the EVM state is reverted to the
previous state, but the transaction fees are still paid to miners
(as in to avoid Denial of Service attacks). A transaction can
fail due to the following three reasons: Either the transaction
sender did not specify a sufﬁcient amount of transaction fees,
or the transaction does not meet a condition set forth by
the interacting smart contract, or the transaction is conﬂicting
(e.g., double-spending) with another transaction.
This concept of a state reversion enables the introduction
of ﬂash loans, short-lived loans that execute atomically within
only one blockchain transaction. Within a single transaction,
(i) the loan is taken from a liquidity pool, (ii) the loan is put
to use, and (iii) the loan (plus interest payment) is paid back
to the ﬂash loan pool. If the third condition is not met, i.e.,
the loan plus interests are not paid back, then the entire ﬂash
loan transaction fails. This is equivalent to the case that the
loan was never issued because the EVM state is not modiﬁed
out of the result of a failed transaction.
Flash loans,
therefore, entail
two interesting properties.
First, the lender is guaranteed that the borrower will repay
the loan. If the repayment is not performed, the loan would
not be given. Second, the borrower can technically request any
amount of capital, up to the amount of funds available in a
ﬂash loan pool, given a constant payment which corresponds
to the blockchain transaction fees (about 10 USD for the most
common ﬂash loan providers). The borrower hence can have
access to millions of USD with just a few initial USD and
hence is not exposed to the currency risk of the lent asset.
Fig. 2: Example strategy across three DeFi markets, identiﬁed
at Ethereum block 10, 001, 087, which would yield a revenue
of 7.81 ETH (3,124 USD).
III. DEFI MODELING
We proceed to introduce our system,
trader, and state
transition model for the interaction between DeFi platforms.
On a high level, our model state consists of the DeFi market
states, as well as the cryptocurrency asset balances of a trader
T. The transitions represent DeFi actions performed by the
trader T on the respective DeFi platforms. The goal of the
trader is to maximize the amount of cryptocurrency assets held.
A. System Model
Our system consists of a blockchain with ﬁnancial cryp-
tocurrency assets (i.e., coins or tokens). Cryptocurrency as-
sets can be used within DeFi platforms (i.e., markets), such
as exchanges, lending, and borrowing platforms. Each DeFi
platform offers a set of actions, which can be triggered
by a transaction. Actions take an asset as input and yield,
for instance, another asset as output. Multiple actions can
be encapsulated in one transaction and executed atomically
in sequence. A path, is a sequence of actions across DeFi