### 问题描述

我们在Debian系统上运行Nginx作为负载均衡器，配置了HTTP/2支持。最近，我们将iOS混合应用从UIWebView切换到WKWebView后，发现请求时间显著增加。以下是详细情况和我们的调查结果。

#### Nginx版本信息
- Nginx版本: `nginx/1.9.10`
- 编译时使用的OpenSSL版本: `OpenSSL 1.0.2e 3 Dec 2015`
- 运行时使用的OpenSSL版本: `OpenSSL 1.0.2g 1 Mar 2016`

#### Nginx配置
我们启用了HTTP/2支持，配置如下：
```nginx
server {
    listen 443 ssl http2;
    ...
}
```
所有请求都代理到应用服务器，并记录了`request_time`和`upstream_time`。

#### 问题现象
在第13周，我们将iOS混合应用从UIWebView切换到WKWebView。随后，我们注意到随着越来越多的用户更新到新版本，请求时间（`request_time`）显著增加，而上游响应时间（`upstream_time`）保持不变。

#### 临时解决方案
为了解决这个问题，我们暂时禁用了HTTP/2支持，修改配置如下：
```nginx
server {
    listen 443 ssl;
    ...
}
```
禁用HTTP/2后，请求时间恢复正常。

### 可能的原因
根据研究，Ubuntu/Debian包中的Nginx可能存在一个导致HTTP/2性能低下的bug。建议使用替代发行版或从源代码编译Nginx。

#### 编译Nginx的步骤
对于Debian系统，可以参考以下步骤进行编译：

1. **安装依赖项**
   ```sh
   sudo apt-get update
   sudo apt-get install build-essential libpcre3-dev libssl-dev zlib1g-dev
   ```

2. **下载并解压Nginx源码**
   ```sh
   wget http://nginx.org/download/nginx-1.9.10.tar.gz
   tar -zxvf nginx-1.9.10.tar.gz
   cd nginx-1.9.10
   ```

3. **下载并解压OpenSSL源码**
   ```sh
   wget https://www.openssl.org/source/openssl-1.0.2h.tar.gz
   tar -zxvf openssl-1.0.2h.tar.gz
   cd ..
   ```

4. **配置编译选项**
   ```sh
   ./configure --with-cc-opt='-march=native -O2 -pipe' \
               --prefix=/usr \
               --conf-path=/etc/nginx/nginx.conf \
               --http-log-path=/var/log/nginx/access.log \
               --error-log-path=/var/log/nginx/error.log \
               --lock-path=/var/lock/nginx.lock \
               --pid-path=/run/nginx.pid \
               --http-client-body-temp-path=/var/lib/nginx/body \
               --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
               --http-proxy-temp-path=/var/lib/nginx/proxy \
               --http-scgi-temp-path=/var/lib/nginx/scgi \
               --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
               --with-pcre-jit \
               --with-ipv6 \
               --with-file-aio \
               --with-http_v2_module \
               --with-http_ssl_module \
               --with-http_stub_status_module \
               --with-http_realip_module \
               --with-http_addition_module \
               --with-http_dav_module \
               --with-http_geoip_module \
               --with-http_gzip_static_module \
               --with-http_image_filter_module \
               --with-http_sub_module \
               --with-http_xslt_module \
               --with-mail \
               --with-mail_ssl_module \
               --user=www-data \
               --group=www-data \
               --with-openssl=../openssl-1.0.2h
   ```

5. **编译并安装**
   ```sh
   make
   sudo make install
   ```

### 参考资料
- [编译Nginx和OpenSSL以支持HTTP/2](https://ethitter.com/2016/06/nginx-openssl-1-0-2-http-2-alpn/)

通过以上步骤，您可以从源代码编译Nginx并启用HTTP/2支持，从而解决可能存在的性能问题。希望这些建议对您有所帮助。