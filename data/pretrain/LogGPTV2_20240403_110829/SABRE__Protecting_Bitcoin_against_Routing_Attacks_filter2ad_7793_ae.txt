WhiteList:
HashMem:
PeerList:
blockMem:
1000000
100
518823
100000
1
0.001
0.0001
0.0001
0.0001
-
1.80MB
239.75B
1.24MB
479.25K
1.0MB
TABLE I: The memory used in the P4 switch is always <5MB
specialized hardware; and (iii) incentivizing a third party to
build and maintain the infrastructure. In the following, we
explain why each of those requirements is practical.
First, we observe that a large number of ASes that can host
SABRE relays are cloud providers, CDNs, IXPs, large ISPs,
or Software-as-a-Service (SaaS) providers. This should come
as no surprise as such ASes are actively trying to establish
as many peering connections as possible to improve their
services. Deploying SABRE nodes in such ASes is practical
as they already sell online services or are research-friendly
(IXPs [33], [32]). Moreover, even if some eligible ASes do
not consent to host SABRE nodes, the effectiveness of SABRE
will not be signiﬁcantly affected as: (i) SABRE only requires
few nodes to be useful (as little as 6 ASes, see Section VI);
and (ii) there are more than 2000 possible locations for hosting
ASes. In short, no candidate AS is irreplaceable.
Second, we argue that cloud providers could start
renting out hardware-accelerated computing instances with
programmable network data planes. Actually, some cloud
providers already allow clients to rent advanced hardware
resources. For instance, Amazon EC2 offers the possibility
to connect computing instances with ﬁeld-programmable gate
arrays [6]. That said, a pure software-based implementation of
SABRE would still protect the Bitcoin network from routing
attacks, leaving DDoS protection to the default mechanism
operated by each AS. As described above, such a software-
based implementation could be readily deployed as it only
requires the possibility to host virtual machines in candidate
ASes.
Third, we argue that the possible monetary losses induced
by routing attacks [17] create business incentives for one or
more entities to deploy and maintain relay nodes. We observe
that such incentives are similar to the ones behind existing
relay networks such as FIBRE [2] and Falcon [3].
Observe also that deploying SABRE does not need to be
approved by the community as a whole. Indeed, a regular
client can connect to a SABRE node via a single lightweight
UDP connections by independently upgrading its code. Thus,
the notoriously slow-moving Bitcoin community cannot be an
obstacle to SABRE’s deployment.
B. Partial deployment
While feasible, fully deploying SABRE is time-consuming
and requires multiple parties to collaborate and possibly share
costs. Luckily, SABRE can also be partially deployed, e.g.
by a mining pool who wishes to protect itself from routing
attacks or by existing relay networks that wish to improve
their poor VI-C protection against routing attacks.
By deploying SABRE at a low-budget, a single mining pool
can secure the propagation of its own blocks and the reception
of new mined ones, even while the Bitcoin peer-peer-network
is under a severe routing attack. As an illustration, such a
deployment of 6 SABRE nodes would only cost 500$/month
(considering the current AWS pricing policy [11]). This cost is:
(i) well within the ﬁnancial capabilities of a single mining pool;
(ii) entirely justiﬁed given the possible losses that a pool could
incur upon a successful routing attack (e.g. an orphan block is
a 150K loss [13]). Note that the above deployment does not
require special hardware to scale as the pool is only interested
in serving its own Bitcoin clients (i.e. its gateways) rather than
any possible Bitcoin client that might wish to beneﬁt from the
system.
Of course, as multiple pools start to build SABRE net-
works, they can collaborate and share costs, henceforth incen-
tivizing the deployment of larger SABRE networks (possibly
using hardware-accelerated instances which are also already
sold by cloud providers [13]) that could protect more clients.
At the same time, existing relay networks such as FIBRE
and Falcon can also have signiﬁcant gains by partially deploy-
ing SABRE as its relay location algorithm is orthogonal to their
approaches. To do so, existing relays need to independently
relocate their servers accordingly to SABRE’s network design.
IX. DISCUSSIONS
In this section we discuss high-level concerns often raised
against SABRE, focusing on its potential impact on the Bitcoin
ecosystem and its applicability to other Blockchain systems.
Isn’t SABRE violating Bitcoin decentralization premises?
No, for three main reasons. First, it acts alongside Bitcoin peer-
to-peer network and does not intend to replace it. Instead,
SABRE enhances the connectivity of the Bitcoin network,
henceforth reducing its attack surface. Second, SABRE does
not need to be centralized: multiple SABRE-like systems can
easily co-exist, each belonging to a different entity. Third,
SABRE has the potential to allow less well-connected miners
to get their fair-share out of the block-rewards making it less
likely for others to engineer block races.
We observe that existing relays such as FIBRE [2] and
Falcon [3] are small and controlled by a single entity. Yet,
these characteristics did not prevent them from having positive
impact on Bitcoin by decreasing the orphan rate.
Why focusing on Bitcoin? We focus on Bitcoin as opposed
to other cryptocurrencies (e.g., Ripple [16], Ethereum [12])
for three main reasons. First,
the Bitcoin network is ex-
tensively studied [43], [23], [45] and the effectiveness of
routing attacks against it is well-understood [17]. In contrast,
more sophisticated Blockchain systems (e.g., Bitcoin-NG [25],
Ouroboros [37], OmniLedger [39], Algorand [28]) are not yet
deployed at large scale. Thus, their exact routing characteristics
are unknown. Second, Bitcoin remains the most widely used
cryptocurrency making its security vital for more users.
Can SABRE protect other blockchains? Yes. Although
SABRE focuses on Bitcoin,
its network and node design
principles are general and apply to other blockchain systems.
12
SABRE network design can help blockchain systems mit-
igating partition attacks [17]. Partition attacks are a threat to
any blockchain systems depending on Internet connectivity,
including permissioned and/or encrypted ones. SABRE allows
nodes to exchange information even if a malicious AS-level
adversary hijacks and drops trafﬁc among them. In fact, the
properties upon which the SABRE network is built can also be
used by miners to interconnect and/or host their mining power,
or by new blockchains to place their nodes. Note that SABRE
network design would also be useful to advanced blockchain
systems such as ByzCoin [38] and OmniLedger [39] which
currently mitigate the effects of partition attacks by freezing
commits. SABRE would allow them to retain liveness instead
of waiting for the attack to be resolved.
In contrast to its network design, SABRE node’s design
is more Bitcoin-speciﬁc. For example, blockchains whose
trafﬁc is encrypted cannot be served from a programmable
network device. Even so, SABRE’s node design exhibits two
key properties that most blockchain systems can leverage.
First, blockchain systems tend to be communication-heavy
(due to the need to reach consensus) meaning that the use
of programmable switches can increase the throughput by
ofﬂoading communication burden to the hardware. Second,
most popular items are predictable, as most requests target the
latest mined content, making SABRE-like caching strategies
very effective.
X. RELATED WORK
[7] as a cache for key-value stores,
Using P4 switches as cache Previous works have used
programmable network devices to cache values including
Netcache [35] and NetChain [34]. Netcache uses Toﬁno
switches
to deal
with skewed requests in memcached applications. Similarly,
NetChain [34] caches key-values stores in switches to boost
Paxos consensus protocols used in data centers to coordinate
servers. In SABRE, we also rely on switches to cache infor-
mation (here, blocks) but also to distinguish maliscious clients
and to ﬁlter incomming information.
BGP security Many proposals have been proposed over the
years to reduce or prevent routing attacks. We distinguish
two approaches: origin validation and path validation. Origin
validation [41] relies on RPKI [20], a X.509-based hierarchy
mapping IP preﬁxes to ASes, to enable the routers to ﬁl-
ter BGP advertisements originated from unauthorized ASes.
Path validation [42] secures BGP by adding cryptographic
signatures to the BGP messages. It allows the recipient of
an announcement to cryptographically validate that: (i) the
origin AS was authorized to announce the IP preﬁx; and
(ii) that the list of ASes through which the announcement
passed were indeed those which each of the intermediate AS
intended. Unfortunately, none of these proposals have been
widely deployed, leaving the Internet still vulnerable to routing
attacks [29]. In contrast, SABRE enables to secure Bitcoin
against routing attacks today, without requiring all ASes to
agree or change their practices .
Routing attacks on ToR Extensive work has been done
on routing attacks on ToR [52] and how these can be cir-
cumvented [50], [46] [51]. There are three key differences
between the ToR relay network and the Bitcoin network that
change the spectrum of possible attacks and countermeasures.
First, in order to protect the Bitcoin system we need to keep
the network connected as opposed to preserving the privacy
of every single connection for ToR. As such, we can use
redundancy to protect Bitcoin clients, by connecting them to
multiple SABRE relays such that there is no AS that can
effectively hijack all connections. Second, counter-measures
against routing attacks on ToR are limited to avoiding routes
that might be affected by BGP hijacks, while SABRE is built
to avoid the chance of an attacker to be able to divert it
in the ﬁrst place. This is possible because Bitcoin clients
have no preference with respect to who to connect to as they
can get the same information from almost any peer. Third,
countermeasures against routing attacks on ToR do not deal
with the case that the client itself is hijacked.
Multicast protocols Mbone [24], was designed to multicast
live videos and music streams in the Internet, where many
routers do not support IP multicast. Using tunnelling, Mbone
trafﬁc can stay under the radar of those routers. Despite
its novelty and usefulness, this network does not take into
consideration whether the used paths can be hijacked and does
not deal with maliciously increased load. Finally, systems such
Splitstream [21] that aim to reduce the load per node, require
a ﬁxed set of participants and a certain structure among them
which would limit the openness of our network (regular clients
cannot easily come and go).
XI. CONCLUSION
We presented SABRE, a relay network aimed at securing
Bitcoin against routing attacks. The key insight behind SABRE
is to position the relay nodes in secured locations, preventing
AS-level attackers from diverting intra-relay communications
and reducing their ability to divert trafﬁc destined to the relay
clients. To protect the nodes themselves, SABRE leverages a
hardware/software co-design (leveraging programmable data
planes) to perform most of the relay operations in hardware.
We fully implemented SABRE and demonstrated its effective-
ness in protecting Bitcoin, with as little as 6 relay nodes.
ACKNOWLEDGMENTS
We thank the members of the Networked Systems Group
at ETH Zurich for their valuable feedback. We also thanks the
anonymous reviewers for their comments and guidance. This
work was supported by a Swiss National Science Foundation
Grant (“Data-Driven Internet Routing”, #200021-175525).
REFERENCES
[1]
[2]
[3]
[4]
[5]
[6]
“CAIDA Macroscopic Internet Topology Data Kit.” https://www.caida.
org/data/internet-topology-data-kit/.
“Fast Internet Bitcoin Relay Engine,” http://bitcoinﬁbre.org/.
“A fast new bitcoin backbone relay network,” https://www.falcon-net.
org.
“RIPE RIS Raw Data,”
ris-raw-data.
“The Bitcoin Relay Network,” http://bitcoinrelaynetwork.org/.
“Amazon EC2 F1 Instances are now available in AWS Gov-
Cloud,” 2017, https://aws.amazon.com/about-aws/whats-new/2017/11/
amazon-ec2-f1-instances-are-now-available-in-aws-govcloud--us/.
https://www.ripe.net/data-tools/stats/ris/
13
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]
[15]
“Barefoot Toﬁno Switches: The Technology,” 2018, https://www.
barefootnetworks.com/technology/.
“Bitnodes api,” 2018, https://bitnodes.earn.com/api/.
“Bitnodes Statistics,” 2018, https://bitnodes.earn.com/.
“CIDR report,” 2018, http://www.cidr-report.org/as2.0/.
“EC2Instances.info Easy Amazon EC2 Instance Comparison.” 2018,
https://www.ec2instances.info/?selected=f1.2xlarge,f1.4xlarge.
“Etherium,” 2018, https://www.ethereum.org/.
“How Bitcoin Mining/Block rewards work.” 2018, https://www.
anythingcrypto.com/guides/bitcoin-mining-block-rewards-2018.
“P4 Behavioral Model,” 2018, .https://github.com/p4lang.
“P416 Language Speciﬁcation,” 2018, https://p4.org/p4-spec/docs/
P4-16-v1.0.0-spec.html.
“Ripple,” 2018, https://ripple.com/.
[16]
[17] M. Apostolaki, A. Zohar, and L. Vanbever, “Hijacking bitcoin: Routing
attacks on cryptocurrencies,” in Security and Privacy (SP), 2017 IEEE