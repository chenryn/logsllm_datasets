Question: An application needs to specify its Cross-Origin Resource Sharing (CORS) policy. Which of the following CORS configurations correctly allows a JavaScript library to be read by any site for subresource integrity purposes and also allows a specific dashboard at 'https://random-dashboard.example.org' to read the results of an API? Identify the advantages and disadvantages of each configuration.
"A": "Set 'Access-Control-Allow-Origin: *' to allow any site to read the JavaScript library and specify 'Access-Control-Allow-Origin: https://random-dashboard.example.org' for the API.",
"B": "Set 'Access-Control-Allow-Origin: https://random-dashboard.example.org' for the JavaScript library and the API to restrict access to a single origin for security reasons.",
"C": "Implement a cross-domain policy for Flash and Silverlight with domain 'random-dashboard.example.org' to control access while allowing 'Access-Control-Allow-Origin: *' for the JavaScript library.",
"D": "Use a strict cross-domain policy that does not specify any 'Access-Control-Allow-Origin', ensuring maximum security and no access to the JavaScript library or API."
Answer: AC