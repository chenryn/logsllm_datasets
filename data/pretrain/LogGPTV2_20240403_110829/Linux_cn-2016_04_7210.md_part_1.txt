---
author: Gabriel Cánepa
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 6
  likes: 0
  sharetimes: 0
  viewnum: 14628
date: '2016-04-11 08:37:00'
editorchoice: false
excerpt: 在这一讲里边，我们会解释如何在 Linux 中挂载/卸载本地和网络文件系统。
fromurl: ''
id: 7210
islctt: true
largepic: /data/attachment/album/201604/11/083733hamn3j9v3a3w94o4.png
permalink: /article-7210-1.html
pic: /data/attachment/album/201604/11/083733hamn3j9v3a3w94o4.png.thumb.jpg
related:
- displayorder: 0
  raid: 7187
- displayorder: 0
  raid: 7229
reviewer: ''
selector: ''
summary: 在这一讲里边，我们会解释如何在 Linux 中挂载/卸载本地和网络文件系统。
tags:
- LFCS
- 文件系统
- 挂载
thumb: false
title: LFCS 系列第五讲：如何在 Linux 中挂载/卸载本地文件系统和网络文件系统（Samba 和 NF
titlepic: false
translator: GHLandy
updated: '2016-04-11 08:37:00'
---
Linux 基金会已经发起了一个全新的 LFCS（ Linux 基金会认证系统管理员   （    Linux Foundation Certified Sysadmin    ） ）认证，旨在让来自世界各地的人有机会参加到 LFCS 测试，获得关于有能力在 Linux 系统中执行中间系统管理任务的认证。该认证包括：维护正在运行的系统和服务的能力、全面监控和分析的能力以及何时向上游团队请求支持的决策能力。
![Linux Foundation Certified Sysadmin – Part 5](/data/attachment/album/201604/11/083733hamn3j9v3a3w94o4.png)
*LFCS 系列第五讲*
请看以下视频，这里边介绍了 Linux 基金会认证程序。
本讲是系列教程中的第五讲，在这一讲里边，我们会解释如何在 Linux 中挂载/卸载本地和网络文件系统。这些都是 LFCS 认证中的必备知识。
### 挂载文件系统
在个硬盘分好区之后，Linux 需要通过某些方式对硬盘分区上的数据进行访问。Linux 并不会像 DOS 或者 Windows 那样给每个硬盘分区分配一个字母来作为盘符，而是将硬盘分区挂载到统一的目录树上的挂载点。
挂载点是一个目录，挂载是一种访问分区上文件系统的方法，挂载文件系统实际上是将一个确切的文件系统（比如一个分区）和目录树中指定的目录联系起来的过程。
换句话说，管理存储设备的第一步就是把设备关联到文件系统树。要完成这一步，通常可以这样：用 mount 命令来进行临时挂载（用完的时候，使用 umount 命令来卸载），或者通过编辑 /etc/fstab 文件之后重启系统来永久性挂载，这样每次开机都会进行挂载。
不带任何选项的 mount 命令，可以显示当前已挂载的文件系统。
```
# mount
```
![Check Mounted Filesystem in Linux](/data/attachment/album/201604/11/083734afzlpfl896fopcqr.png)
*检查已挂载的文件系统*
另外，mount 命令通常用来挂载文件系统。其基本语法如下：
```
# mount -t type device dir -o options
```
该命令会指引内核将在设备上找到的文件系统（如已格式化为指定类型的文件系统）挂载到指定目录。像这样的形式，mount 命令不会再到 /etc/fstab 文件中进行确认。
除非像下面，挂载指定的目录或者设备：
```
# mount /dir -o options
或
# mount device -o options
```
mount 命令会尝试寻找挂载点，如果找不到就会查找设备（上述两种情况下，mount 命令会在 /etc/fstab 查找相应的设备或挂载点），最后尝试完成挂载操作（这个通常可以成功执行，除非你的挂载点或者设备正在使用中，或者你调用 mount 命令的时候没有 root 权限）。
你可以看到，mount 命令的每行输出都是如下格式：
```
device on directory type (options)
```
例如：
```
/dev/mapper/debian-home on /home type ext4 (rw,relatime,user_xattr,barrier=1,data=ordered)
```
读作：
设备 dev/mapper/debian-home 挂载在 /home 下，它被格式化为 ext4，并且有以下挂载选项： rw，relatime，user\_xattr，barrier=1，data=ordered。
**mount 命令选项**
下面列出 mount 命令的常用选项
* async：允许在将要挂载的文件系统上进行异步 I/O 操作
* auto：标示该文件系统通过 mount -a 命令挂载，与 noauto 相反。
* defaults：该选项相当于 `async,auto,dev,exec,nouser,rw,suid` 的组合。注意，多个选项必须由逗号隔开并且中间没有空格。倘若你不小心在两个选项中间输入了一个空格，mount 命令会把后边的字符解释为另一个参数。
* loop：将镜像文件（如 .iso 文件）挂载为 loop 设备。该选项可以用来模拟显示光盘中的文件内容。
* noexec：阻止该文件系统中可执行文件的执行。与 exec 选项相反。
* nouser：阻止任何用户（除 root 用户外） 挂载或卸载文件系统。与 user 选项相反。
* remount：重新挂载文件系统。
* ro：只读模式挂载。
* rw：读写模式挂载。
* relatime：只要访问时间早于修改时间，就更新文件的的访问时间。
* user\_xattr：允许用户设置和移除可扩展文件系统属性。
**以 ro 和 noexec 模式挂载设备**
```
# mount -t ext4 /dev/sdg1 /mnt -o ro,noexec
```
在本例中，我们可以看到，在挂载点 /mnt 中尝试写入文件或者运行可执行文件都会显示相应的错误信息。
```
# touch /mnt/myfile
# /mnt/bin/echo “Hi there”
```
![Mount Device in Read Write Mode](/data/attachment/album/201604/11/083734uzm5q55ewemrsm5q.png)
*可读写模式挂载设备*
**以默认模式挂载设备**
以下场景，我们在重新挂载设备的挂载点中，像上例一样尝试你写入文件和运行可执行文件。
```
# mount -t ext4 /dev/sdg1 /mnt -o defaults
```
![Mount Device in Linux](/data/attachment/album/201604/11/083735vrwasmt1pwrkvr1t.png)
*挂载设备*
在这个例子中，我们发现写入文件和命令都完美执行了。
### 卸载设备
使用 umount 命令卸载设备，意味着将所有的“在使用”数据全部写入到文件系统，然后可以安全移除文件系统。请注意，倘若你移除一个没有事先正确卸载的设备，就会有造成设备损坏和数据丢失的风险。