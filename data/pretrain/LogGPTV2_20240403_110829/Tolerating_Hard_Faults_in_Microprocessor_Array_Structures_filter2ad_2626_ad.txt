lucas mesa mgrid sixtrack swim wupwise
SPEC 2000 FP Benchmarks
FIGURE 4.
ROB Faults: Comparison of SRAS and Unmodiﬁed DIVA
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:51:42 UTC from IEEE Xplore.  Restrictions apply. 
S
A
R
S
t
u
o
h
t
i
w
t
u
b
A
V
D
h
t
i
I
w
m
e
t
s
y
s
o
t
d
e
r
a
p
m
o
c
p
u
d
e
e
p
S
S
A
R
S
t
u
o
h
t
i
w
t
u
b
A
V
D
h
t
i
I
w
m
e
t
s
y
s
o
t
d
e
r
a
p
m
o
c
p
u
d
e
e
p
S
1.5
1.0
0.5
0.0
1.5
1.0
0.5
0.0
bzip2
crafty
eon
gap
gcc
gzip
mcf
parser
perl
twolf
vortex
vpr
SPEC 2000 Integer Benchmarks
no faults
1 fault, all bits stuck-at 1
4 faults, all bits stuck-at 1
8 faults, all bits stuck-at 1
no faults
1 fault, all bits stuck-at 1
4 faults, all bits stuck-at 1
8 faults, all bits stuck-at 1
ammp
applu
apsi
art
equake facerec fma3d galgel
lucas mesa mgrid sixtrack swim wupwise
SPEC 2000 FP Benchmarks
FIGURE 5.
BHT Faults: Comparison of SRAS and Unmodiﬁed DIVA
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:51:42 UTC from IEEE Xplore.  Restrictions apply. 
when hard faults are injected into the simulated system. 
Results also show that SRAS is probably not beneﬁcial 
for  sparsely  used  tables  with  a  low  AVF,  such  as  the 
branch history table. 
Acknowledgments
This work is supported in part by the National Sci-
ence Foundation, under grants CCR-0309164 and EIA-
9972879, IBM, and a Duke Warren Faculty Scholarship. 
We thank the Duke Architecture group for their insight-
ful comments and criticisms on a draft of this paper. 
References
[13] 
[14] 
[15] 
[16]  M.
[1]  M.
(ITRS). 
Roadmap 
Technical 
Technology 
  A.  Breuer,  and  A.  D.  Friedman. 
  Abramovici,  M.
Digital  Systems  Testing  and  Testable  Design.  IEEE 
Press, 1990.
T.  Austin,  E.  Larson,  and  D.  Ernst.  SimpleScalar:  An 
Infrastructure  for  Computer  System  Modeling.  IEEE
Computer, 35(2):59–67, Feb. 2002.
T.  M.  Austin.  DIVA:  A  Reliable  Substrate  for  Deep 
Submicron  Microarchitecture  Design.  In  Proc.  of  the 
32nd Annual IEEE/ACM International Symposium on 
Microarchitecture, pages 196–207, Nov. 1999.
R.  Blish  et  al.  Critical  Reliability  Challenges  for  The 
for 
International 
Semiconductors 
Report 
03024377A-TR,  International  SEMATECH,  Mar. 
2003.
T.  Chen  and  G.  Sunada.  A  Self-Testing  and  Self-
for  Ultra-Large  Capacity 
Repairing  Structure 
Memories. 
International  Test 
Conference, pages 623–631, Oct. 1992.
T.  Chen  and  G.  Sunada.  An  Ultra-Large  Capacity 
Single-Chip  Memory  Architecture  with  Self-Testing 
and  Self-Repairing.  In  Proc.  of  the  International 
Conference on Computer Design (ICCD), pages 576–
581, Oct. 1992.
T. 
J. Dell. A White Paper on the Benefits of Chipkill-
Correct  ECC  for  PC  Server  Main  Memory.  IBM 
Microelectronics Division Whitepaper, Nov. 1997.
L.  Gwennap.  Alpha  21364 
Bottleneck. Microprocessor Report, Oct. 1998.
  Upton, 
D.  Boggs, 
G.  Hinton, 
D.  Carmean,  A.  Kyker, 
and  P.  Roussel.  The 
Microarchitecture  of  the  Pentium  4  Processor.  Intel
Technology Journal, Feb. 2001.
IBM.  Enhancing  IBM  Netfinity  Server  Reliability: 
IBM Chipkill Memory. IBM Whitepaper, Feb. 1999.
to  Ease  Memory 
D.  Sager,  M.
In  Proc.  of 
the 
[2] 
[3] 
[4] 
[5] 
[6] 
[7] 
[8] 
[9] 
[10] 
P.  Mazumder  and  J.  S.  Yih.  A  Novel  Built-In  Self-
Repair  Approach 
to  VLSI  Memory  Yield 
Enhancement.  In  Proc.  of  the  International  Test 
Conference, pages 833–841, 1990.
S.  McFarling.  Combining  Branch 
Predictors. 
Technical  Report  TN-36,  Digital  Western  Research 
Laboratory, June 1993.
S.  S.  Mukherjee  et  al.  A  Systematic  Methodology  to 
Compute the Architectural Vulnerability Factors for a 
High-Performance  Microprocessor.  In  Proc.  of  the 
36th Annual IEEE/ACM International Symposium on 
Microarchitecture, Dec. 2003.
  Nicolaidis, N.  Achouri, and S.  Boutobza. Dynamic 
Data-bit Memory Built-In Self-Repair. In Proc. of the 
International Conference on Computer Aided Design,
pages 588–594, Nov. 2003.
Forshaw. Fault-Tolerant 
Techniques  for  Nanocomputers.  Nanotechnology,
13:357–362, 2002.
[17]  K.  Nikolic, A.  Sadek, and M.
[18]  D.  A. Patterson, G.  Gibson, and R.  H. Katz. A Case for 
Redundant  Arrays  of  Inexpensive  Disks  (RAID).  In 
Proc. of 1988 ACM SIGMOD Conference, pages 109–
116, June 1988.
[20] 
[21] 
[19]  K.  Sawada,  T.  Sakurai,  Y.  Uchino,  and  K.  Yamada. 
Built-in Self Repair Circuit for High Density ASMIC. 
In Proc.  of  the  IEEE  Custom  Integrated  Circuits 
Conference, 1989.
T.  Sherwood, E.  Perelman, G.  Hamerly, and B.  Calder. 
Automatically  Characterizing  Large  Scale  Program 
Behavior.  In  Proc.  of 
the  Tenth  International 
Conference on Architectural Support for Programming 
Languages and Operating Systems, Oct. 2002.
J.  E. Smith. A Study of Branch Prediction Strategies. In 
Proc.  of  the  8th  Annual  Symposium  on  Computer 
Architecture, pages 135–148, May 1981.
L.  Spainhower  and  T.  A.  Gregg.  IBM  S/390  Parallel 
Enterprise  Server  G5  Fault  Tolerance:  A  Historical 
Perspective.
Journal  of  Research  and 
Development, 43(5/6), September/November 1999.
S.  Thompson  et  al.  An  Enhanced  130nm  Generation 
Logic  Technology  Featuring  60nm  Transistors  for 
High  Performance  and  Low  Power  at  0.7-1.4V.  In 
Proc.  of  the  International  Electron  Devices  Meeting,
pages 257–260, Dec. 2001.
IBM 
[22] 
[23] 
[24]  D.  Wilson. The Stratus Computer System. In Resilient
[25] 
[26] 
International 
Computer Systems, pages 208–231, 1985.
T.-Y.  Yeh  and  Y.  Patt.  Two-level  Adaptive  Training 
Branch  Prediction.  In  Proc.  of  the  24th  Annual 
IEEE/ACM 
on 
Microarchitecture, pages 51–61, Nov. 1991.
L.  Youngs  and  S.  Paramanandam.  Mapping  and 
Repairing  Embedded-Memory  Defects.  IEEE  Design 
&  Test  of  Computers,  pages  18–24,  January-March 
1997.
Symposium 
[11]  D. 
[12]  M.
Jewett.  Integrity  S2:  A  Fault-Tolerant  UNIX 
Platform. In Proc. of the 21st International Symposium 
on Fault-Tolerant Computing Systems, pages 512–519, 
June 1991.
  H. Lipasti and J.  P. Shen. Exceeding the Dataflow 
Limit via Value Prediction. In Proc. of the 29th Annual 
IEEE/ACM 
on 
Symposium 
Microarchitecture, pages 226–237, Dec. 1996.
International 
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 11:51:42 UTC from IEEE Xplore.  Restrictions apply.