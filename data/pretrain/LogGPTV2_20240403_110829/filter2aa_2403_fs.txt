.text:005411CC  
call     _tolower 
.text:005411D1  
add     esp, 4 
.text:005411D4  
cmp     al, 'a' 
.text:005411D6  
jl      short next_character_in_password 
.text:005411D8  
cmp     al, 'z' 
.text:005411DA  
jg      short next_character_in_password 
.text:005411DC  
movsx    ecx, al 
.text:005411DF  
sub      ecx, 'a' 
.text:005411E2  
cmp     ecx, 24 
.text:005411E5  
jle      short skip_subtracting 
.text:005411E7  
sub      ecx, 24 
.text:005411EA 
.text:005411EA skip_subtracting: 
; CODE XREF: rotate_all_with_password+35 
.text:005411EA  
mov     eax, 55555556h 
.text:005411EF  
imul     ecx 
.text:005411F1  
mov     eax, edx 
.text:005411F3  
shr     eax, 1Fh 
.text:005411F6  
add     edx, eax 
.text:005411F8  
mov     eax, ecx 
.text:005411FA  
mov     esi, edx 
.text:005411FC  
mov     ecx, 3 
.text:00541201  
cdq 
.text:00541202  
idiv     ecx 
.text:00541204  
sub     edx, 0 
.text:00541207  
jz     short call_rotate1 
.text:00541209  
dec     edx 
.text:0054120A  
jz      short call_rotate2 
.text:0054120C  
dec     edx 
.text:0054120D  
jnz     short next_character_in_password 
.text:0054120F  
test     ebx, ebx 
.text:00541211  
jle     short next_character_in_password 
.text:00541213  
mov     edi, ebx 
.text:00541215 
.text:00541215 call_rotate3: 
; CODE XREF: rotate_all_with_password+6F 
.text:00541215  
push     esi 
.text:00541216  
call     rotate3 
.text:0054121B  
add      esp, 4 
.text:0054121E  
dec      edi 
.text:0054121F  
jnz      short call_rotate3 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
758 
逆向工程权威指南（下册） 
.text:00541221  
jmp      short next_character_in_password 
.text:00541223 
.text:00541223 call_rotate2: 
; CODE XREF: rotate_all_with_password+5A 
.text:00541223  
test     ebx, ebx 
.text:00541225  
jle     short next_character_in_password 
.text:00541227  
mov     edi, ebx 
.text:00541229 
.text:00541229 loc_541229:  
; CODE XREF: rotate_all_with_password+83 
.text:00541229  
push    esi 
.text:0054122A  
call    rotate2 
.text:0054122F  
add    esp, 4 
.text:00541232  
dec     edi 
.text:00541233  
jnz     short loc_541229 
.text:00541235  
jmp     short next_character_in_password 
.text:00541237 
.text:00541237 call_rotate1: 
; CODE XREF: rotate_all_with_password+57 
.text:00541237  
test     ebx, ebx 
.text:00541239  
jle     short next_character_in_password 
.text:0054123B  
mov     edi, ebx 
.text:0054123D 
.text:0054123D loc_54123D:  
; CODE XREF: rotate_all_with_password+97 
.text:0054123D  
push    esi 
.text:0054123E  
call     rotate1 
.text:00541243  
add      esp, 4 
.text:00541246  
dec     edi 
.text:00541247  
jnz     short loc_54123D 
.text:00541249 
.text:00541249 next_character_in_password:  
; CODE XREF: rotate_all_with_password+26 
.text:00541249  
; rotate_all_with_password+2A ... 
.text:00541249  
mov     al, [ebp+1] 
.text:0054124C  
inc     ebp 
.text:0054124D  
test     al, al 
.text:0054124F  
jnz     loop_begin 
.text:00541255  
pop     edi 
.text:00541256  
pop     esi 
.text:00541257  
pop     ebx 
.text:00541258 
.text:00541258 exit:   
; CODE XREF: rotate_all_with_password+A 
.text:00541258  
pop     ebp 
.text:00541259  
retn 
.text:00541259 rotate_all_with_password endp 
.text:00541259 
.text:0054125A  
align 10h 
.text:00541260 
.text:00541260 ; ============= S U B R O U T I N E =============== 
.text:00541260 
.text:00541260 
.text:00541260 crypt    
proc near   
; CODE XREF: crypt_file+8A 
.text:00541260 
.text:00541260 arg_0            
= dword ptr  4 
.text:00541260 arg_4            
= dword ptr  8 
.text:00541260 arg_8            
= dword ptr  0Ch 
.text:00541260 
.text:00541260  
push     ebx 
.text:00541261  
mov     ebx, [esp+4+arg_0] 
.text:00541265  
push     ebp 
.text:00541266  
push     esi 
.text:00541267  
push     edi 
.text:00541268  
xor      ebp, ebp 
.text:0054126A 
.text:0054126A loc_54126A:  
; CODE XREF: crypt+41 
.text:0054126A  
mov    eax, [esp+10h+arg_8] 
.text:0054126E  
mov     ecx, 10h 
.text:00541273  
mov     esi, ebx 
.text:00541275  
mov     edi, offset cube64 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
第 79 章  “QR9”：魔方态加密模型 
759 
.text:0054127A  
push    1 
.text:0054127C  
push     eax 
.text:0054127D  
rep movsd 
.text:0054127F  
call     rotate_all_with_password 
.text:00541284  
mov     eax, [esp+18h+arg_4] 
.text:00541288  
mov     edi, ebx 
.text:0054128A  
add     ebp, 40h 
.text:0054128D  
add     esp, 8 
.text:00541290  
mov     ecx, 10h 
.text:00541295  
mov     esi, offset cube64 
.text:0054129A  
add     ebx, 40h 
.text:0054129D  
cmp     ebp, eax 
.text:0054129F  
rep movsd 
.text:005412A1  
jl      short loc_54126A 
.text:005412A3  
pop     edi 
.text:005412A4  
pop     esi 
.text:005412A5  
pop     ebp 
.text:005412A6  
pop     ebx 
.text:005412A7  
retn 
.text:005412A7 crypt         
endp 
.text:005412A7 
.text:005412A8  
align 10h 
.text:005412B0 
.text:005412B0 ; =========== S U B R O U T I N E ============ 
.text:005412B0 
.text:005412B0 
.text:005412B0 ; int __cdecl decrypt(int, int, void *Src) 
.text:005412B0 decrypt   
proc near   
; CODE XREF: decrypt_file+99 
.text:005412B0 
.text:005412B0 arg_0            
= dword ptr  4 
.text:005412B0 arg_4            
= dword ptr  8 
.text:005412B0 Src              
= dword ptr  0Ch 
.text:005412B0 
.text:005412B0  
mov     eax, [esp+Src] 
.text:005412B4  
push     ebx 
.text:005412B5  
push     ebp 
.text:005412B6  
push    esi 
.text:005412B7  
push    edi 
.text:005412B8  
push    eax       
; Src 
.text:005412B9  
call    __strdup 
.text:005412BE  
push     eax      
; Str 
.text:005412BF  
mov     [esp+18h+Src], eax 
.text:005412C3  
call     __strrev 
.text:005412C8  
mov      ebx, [esp+18h+arg_0] 
.text:005412CC  
add      esp, 8 
.text:005412CF  
xor      ebp, ebp 
.text:005412D1 
.text:005412D1 loc_5412D1:        
; CODE XREF: decrypt+58 
.text:005412D1  
mov     ecx, 10h 
.text:005412D6  
mov     esi, ebx 
.text:005412D8  
mov     edi, offset cube64 
.text:005412DD  
push     3 
.text:005412DF  
rep movsd 
.text:005412E1  
mov     ecx, [esp+14h+Src] 
.text:005412E5  
push     ecx 
.text:005412E6  
call     rotate_all_with_password 
.text:005412EB  
mov     eax, [esp+18h+arg_4] 
.text:005412EF  
mov      edi, ebx 
.text:005412F1  
add     ebp, 40h 
.text:005412F4  
add     esp, 8 
.text:005412F7  
mov      ecx, 10h 
.text:005412FC  
mov     esi, offset cube64 
.text:00541301  
add     ebx, 40h 
.text:00541304  