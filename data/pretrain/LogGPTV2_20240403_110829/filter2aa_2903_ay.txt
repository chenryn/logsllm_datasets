中止类异常主要用来报告严重的错误，比如硬件错误和系统表中包
含非法值或不一致的状态等。这类异常不允许恢复继续执行。原因有
二：首先，当这类异常发生时，CPU并不总能保证报告的导致异常的指
令地址是精确的。其次，出于安全性的考虑，这类异常可能是由于导致
该异常的程序执行非法操作导致的，因此就应该强迫其中止退出。表3-
1列出了3类异常的关键特征。
表3-1 异常分类
分类
报 告 时 间
保存的CS和EIP指针
可 恢 复 性
错误
（fault）
开始执行导致异常的
指令时
导致异常的那条指令
可以恢复执行（参见
下文）
陷阱
（trap）
执行完导致异常的指
令时
导致异常的那条指令的下
一条指令
可以恢复执行
中止
（abort）
不确定
不确定
不可以
需要说明的是，某些情况的错误类异常是不可恢复的。比如，如果
执行POPAD（Pop All General-Purpose Registers Doublewords）指令时栈
指针（ESP）超出了栈所在段的边界，那么CPU会报告栈错误异常。对
于这种情况，尽管异常处理例程所看到的CS和EIP指针仍然被恢复成好
像POPAD指令没有被执行过那样，但是处理器内部的状态已经变化
了，某些通用寄存器的值可能已经被改变了。这种情况大多是由于程序
使用堆栈不当所造成的，比如压栈和弹出操作不匹配，所以操作系统应
该将此类异常当作程序错误来处理，终止导致这类异常的程序。
3.3 异常例析
本节将介绍IA-32 CPU已经定义的所有异常及异常的错误码，并通
过一个小程序来演示除零异常。
3.3.1 列表
在系统中，每个中断或异常都被赋予一个整数ID——称为向量号
（Vector No.）。系统（CPU和操作系统等软件）通过向量号来识别该
中断或异常。IA-32架构规定0～31号向量供CPU设计者（英特尔等设计
x86处理器的公司）使用，32～255号向量（224个）供操作系统和计算
机系统生产厂商（OEM等）或其他软硬件开发商使用（见第11章）。
表3-2归纳了PC系统中常见的中断和异常。
表3-2 中断和异常列表
向
量
号
助记
符
类
型
描  述
来  源
0
#DE
错
误
除零错误
DIV和IDIV指令
1
#DB
错
误/
陷
阱
调试异常，用于软件调试
任何代码或数据
引用
2
中
断
NMI中断
不可屏蔽的外部
中断
3
#BP
陷
阱
断点
INT 3指令
4
#OF
陷
阱
溢出
INTO指令
5
#BR
错
误
数组越界
BOUND指令
6
#UD
错
误
无效指令（没有定义的指令）
UD2指令（奔腾
Pro CPU引入此
指令）或任何保
留的指令
7
#NM 错
误
数学协处理器不存在或不可用
浮点或
WAIT/FWAIT指
令
8
#DF
中
止
双重错误（Double Fault）
任何可能产生异
常的指令、不可
屏蔽中断或可屏
蔽中断
9
#MF
错
误
向协处理器传送操作数时检测到页错误（Page
Faults）或段不存在，自从486把数学协处理器集
成到CPU内部后，本异常便保留不用
浮点指令
10
#TS
错
误
无效TSS
任务切换或访问
TSS
11
#NP
错
误
段不存在
加载段寄存器或
访问系统段
12
#SS
错
误
栈段错误
栈操作或加载SS
寄存器
13
#GP
错
误
通用保护（GP）异常，如果一个操作违反了保护
模式下的规定，而且该情况不属于其他异常，则
CPU便产生通用保护异常，很多时候也被翻译为
一般保护异常
任何内存引用和
保护性检查
14
#PF
错
误
页错误
任何内存引用
15
保留
16
#MF
错
误
浮点错误
浮点或
WAIT/FWAIT指
令
17
#AC
错
误
对齐检查
对内存中数据的
引用（486CPU引
入）
18
#MC 中
止
机器检查 （Machine Check）
错误代码和来源
与型号有关（奔
腾CPU引入）
19
#XF
错
误
SIMD浮点异常
SIMD浮点指令
（奔腾III CPU引