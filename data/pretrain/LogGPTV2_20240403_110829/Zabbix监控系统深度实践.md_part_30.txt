中单击 host进人的，所以是一个更新的操作。
Hosts表
第16章Zabbix数据库表结构解析
·241°
---
## Page 257
·242°
Zabbix监控系统深度实践
mysql> desc hosts;
Field
name
jmx_error
jmx_errors_from
jmx_available
jmx_disable_until
snmp_error
ipmi_error
snmp_errors_from
ipmi_errors_from
maintenance_from
maintenance_type
maintenance_status
maintenanceid
snmp_available
snmp_disable_until
ipmi_available
ipmi_disable_until
ipmi_password
ipmi_username
ipmi_privilege
ipmi_authtype
lastaccess
errors_from
available
error
disable_until
status
host
proxy_hostid
hostid
varchar(64)
Type
varchar(128)
int(11)
int(11)
int (11)
varchar(128)
varchar(128)
int(11)
int(11)
int(11)
int(11)
int(11)
bigint(20) unsigned | YES
int(11)
int(11)
int(11)
int(11)
varchar(20)
varchar(16)
int(11)
int(11)
varchar(128)
int(11)
varchar(64)
bigint(20) unsigned|
bigint(20) unsigned |
int(11)
int(11)
int(11)
int(11)
INO
1NO
NO
IYES丨 MUL
|NO丨PRI丨NULL
I Null| Key |Defaultl Extra
NO
NO
NO
NO
NO
NO
NO
NO
NO
|MUL
-+-
|MUL
MUL
MUL
—-----+------+-
丨NULL
|NULL
0
0
0
0
0
0
2
0
0
---
## Page 258
○ lastaccess:这一列是专门为 Proxy 准备的。lastaccess 表示的是 Proxy 最后一次工作的时间。
O disable_util、error、 available、errors_from ( ipmi_disable_util, ipmi_error..
 status：机器目前的状态。“0”为正常监控，“1”为disable，“2”不清楚，从数据库里
port：监控使用的端口。
useip：是否用ip监控。
 dns ：DNS 名称。
@host：机器的hostname。注意，在1.8.8（即我们使用的）版本的Zabbix中，如果有两台
proxy_hostid：如果使用了“Proxy-Server”架构，这个字段表示的就是监控这台机器的
hostid：唯一标识Host 在Zabbix及数据库的id。不同表之间的关联也是用的id。和这个
下面进行具体说明。
+-----------
hostname一样的机器，那么 Zabbix 会crash 直接退出。
类似，Zabbix 中任意一种资源都有自己的id，比如 itemid、groupid 等。
templateid
这里的“工作”是指 Zabbix Server 收到Proxy数据。
新这个Host取不到值的信息，并且日志里显示“another networkerror”。
并且日志会显示“first networkerror”。如果15秒后依然取不到值，zabbix会在数据库更
默认为“zabbix”类型）的时候，会等15秒（CONFIG_UNREACHABLE_DELAY）来重试，
不到值（根据值的类型不同会更新相应的列，Item类型为SNMP就会更新snmp_XXX,
disable_until.都是此类）：这几个都是ZabbixPoller会去修改的值。当poller在第一次取
表示是个Template。
找不到status为“2”的机器。
记录）：一条是和普通机器一样的，作为被监控机器的记录；另一条记录是作为Proxy
Proxy的hostid。有一点需要注意，每个Proxy在Hosts表里有两条（其他 Host 只有一条
flags
“2”。
有一台机器的 proxy是之前提到的那台机器，那么它在 Hosts 表中的 proxy_hostid 的值为
的记录，hostid为“1";另一个是ip为“0.0.0.0”的记录，hostid为“2”。在这个背景下，
果有一台Proxy的ip为1.2.3.4，那么在Hosts表里有两条记录：一个是ip为“1.2.3.4"
的记录，其ip字段的值为“0.0.0.0"。proxy_hostid 中的值就是Proxy记录中的 hostid。如
丨bigint(2O) unsigned 丨YES 丨MUL 丨 NULL 丨
int(11)
。这好像和Zabix自身的一个host available检查有关。“3”
INO
第16章Zabbix数据库表结构解析
和 snmp_
·243
---
## Page 259
·244°
Item在数据库存储的表一
作就是对于Items 的，如添加监控项、删除监控项、更新监控项配置等。这一节中，一起看下
16.3
hostid:1234
Zabbix监控系统深度实践
Items 表也是Zabix的核心表之一，它记录了Item的所有设置。在Zabbix中，最多的操
update hosts set status='1' where host='Host_To_Disable';
update hosts set proxy_hostid=1234 where host='Host_To_Update_Proxy';
首先看一下表结构：
update hosts set status='o' where host='Host_To_Enable';
更新Host 的状态（enable或disable），如下。
select hostid from hosts where host='ProxyA' and ip='0.0.0.0';
Field
更新机器的proxy。找到proxy的hostid，更新对用host 的proxy_hostid，如下。
前面只讲了Hosts一张表，所以这里只能介绍一些针对Host 的操作。
maintenanceid，maintenance_*：这和Zabbix另一个机制Maintaince有关，用于使Host置
 snmp_*：同上，SNMP参数。
useipmi，ipmi_*：使用IPMI 时后的参数。不展开说。
@ inbytes，outbytes：1.8.8的代码中没有找到使用这两个字段的代码，估计是Zabbix 以后
-------
于维护状态而不会报警。
会使用的。
pto duus
snmp_community
type
itemid
Items表
Items表。
Ivarchar(255)
1varchar(64)
int(11)
1 bigint(20) unsigned | NO
|Type
丨Null丨Key丨Default丨Extra
NO
NO
PRIINULL
+-----—---+--——---
---
## Page 260
mtime
privatekey
publickey
password
username
authtype
int(11)
ipmi_sensor
params
delay_flex
valuemapid
templateid
logtimefmt
lastlogsize
error
formula
snmpv3_privpassphrase I varchar(64)
snmpv3_authpassphrase
snmpv3_securitylevel
snmpv3_securityname
delta
multiplier
units
trapper_hosts
value_type
status
trends
history
delay
key_
name
hostid
1varchar(255)
Iint(11)
int(11)
varchar(64)
varchar(64)
varchar(64)
varchar(64)
int(11)
NO
varchar(128)
text
varchar(255)
bigint(20) unsigned 1 YES
bigint(20) unsigned I YES
varchar(64)
bigint(20) unsigned |
varchar(128)
int(11)
varchar(255)
varchar(255)
int(11)
int(11)
int (11)
int(11)
int(11)
varchar(255)
varchar(255)
bigint(20) unsigned |1
varchar(64)
int(11)
varchar(64)
一
NO
NO
NO
NO
NO
第16章
。
1MUL
IMUL
MUL
MUL
INULL
INULL
0
0
Zabbix数据库表结构解析
NULL
365
90
NULL
data_type
●245°
---
## Page 261
·246°
Zabbix监控系统深度实践
formula：这里即是页面上设置Items时的“Use custom multiplier”配置的数字。
 snmpv3*：snmpv3开头的都是和 SNMP相关的配置内容。
units：Item配置界面中的“Units”。
O trapper_hosts：当 Item为Trapper类型的时候，记录了允许发送数据的 Host。
 status：Item 的状态。
 delay：实际就是在配置 Item 时候配置的“Update Interval"。
name：Item的名字。
hostid：Item所在的 Host 的hostid。如果该Item属于Template，那么这里显示的是
 type：Item的 type，和前端界面配置 Item的 type对应。数据库中，这一列的值是0到
O itemid : Item 的 id。
下面是具体说明。
delta：Item配置界面上的“Store value”配置。
multiplier：针对这个Item是否启用了“CustomMultiplier”
trends：前端配置存储trend 的时间。
history：前端配置存储history 的时间。
templateid。
17的数字，分别代表了不同的类型。
snmpv3_contextname
state
snmpv3_privprotocol | int(11)
snmpv3_authprotocol | int(11)
lifetime
description
port
interfaceid
filter
flags
inventory_link
|int(11)
varchar(64)
Ibigint(20) unsigned 丨 YES
int(11)
text
varchar(64)
varchar(255)
int(11)
|varchar(255)
INO
NO
NO
IMUL丨NULL
NULL
30