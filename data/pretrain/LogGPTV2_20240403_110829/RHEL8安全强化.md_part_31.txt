1.  检查 `USBGuard`{.literal} 规则是否包含您所做的更改。
    ``` screen
    # usbguard list-rules
    ```
:::
::: itemizedlist
**其它资源**
-   `usbguard(1)`{.literal} 手册页。
-   使用 `usbguard --help`{.literal} 命令列出内置的帮助信息。
:::
:::
::: section
::: titlepage
# []{#protecting-systems-against-intrusive-usb-devices_security-hardening.html#creating-a-custom-policy-for-usb-devices_protecting-systems-against-intrusive-usb-devices}为 USB 设备创建自定义策略 {.title}
:::
以下流程包含了为 USB 设备创建反映您场景需求的规则集的步骤。
::: itemizedlist
**先决条件**
-   `usbguard`{.literal} 服务已安装并运行。
-   `/etc/usbguard/rules.conf`{.literal}
    文件包含了由`usbguard generate-policy`{.literal}
    命令生成的初始规则集。
:::
::: orderedlist
**流程**
1.  创建一个策略，其授权当前连接的 USB 设备，并将生成的规则保存到
    `rules.conf`{.literal} 文件中：
    ``` screen
    # usbguard generate-policy --no-hashes > ./rules.conf
    ```
    `--no-hashes`{.literal}
    选项不会为设备生成哈希属性。在配置设置中避免哈希属性，因为它们可能不是永久的。
2.  使用您选择的文本编辑器编辑 `rules.conf`{.literal} 文件，例如：
    ``` screen
    # vi ./rules.conf
    ```
3.  根据需要添加、删除或编辑规则。例如，以下规则只允许带有一个大容量存储接口的设备与系统进行交互：
    ``` screen
    allow with-interface equals { 08:*:* }
    ```
    有关详细的规则语言描述和更多示例，请参阅
    `usbguard-rules.conf(5)`{.literal}手册页。
4.  安装更新的策略：
    ``` screen
    # install -m 0600 -o root -g root rules.conf /etc/usbguard/rules.conf
    ```
5.  重启 `usbguard`{.literal} 守护进程以应用您的更改：
    ``` screen
    # systemctl restart usbguard
    ```
:::
::: orderedlist
**验证**
1.  检查您的自定义规则是否在活动的策略中，例如：
    ``` screen
    # usbguard list-rules
    ...
    4: allow with-interface 08:*:*
    ...
    ```
:::
::: itemizedlist
**其它资源**
-   `usbguard-rules.conf(5)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#protecting-systems-against-intrusive-usb-devices_security-hardening.html#creating-a-structured-custom-policy-for-usb-devices_protecting-systems-against-intrusive-usb-devices}为 USB 设备创建结构化自定义策略 {.title}
:::
您可以在 `/etc/usbguard/rules.d/`{.literal}
目录中的多个`.conf`{.literal} 文件中组织自定义的 [**USBGuard**]{.strong}
策略。然后 `usbguard-daemon`{.literal} 将主 `rules.conf`{.literal}
文件与目录中的 `.conf`{.literal} 文件按字母顺序组合在一起。
::: itemizedlist
**先决条件**
-   `usbguard`{.literal} 服务已安装并运行。
:::
::: orderedlist
**流程**
1.  创建一个授权当前连接的 USB 设备的策略，并将生成的规则保存到一个新的
    `.conf`{.literal} 文件，如 `policy.conf`{.literal}。
    ``` screen
    # usbguard generate-policy --no-hashes > ./policy.conf
    ```
    `--no-hashes`{.literal}
    选项不会为设备生成哈希属性。在配置设置中避免哈希属性，因为它们可能不是永久的。
2.  使用您选择的文本编辑器显示 `policy.conf`{.literal} 文件，例如：
    ``` screen
    # vi ./policy.conf
    ...
    allow id 04f2:0833 serial "" name "USB Keyboard" via-port "7-2" with-interface { 03:01:01 03:00:00 } with-connect-type "unknown"
    ...
    ```
3.  将所选行移到一个单独的 `.conf`{.literal} 文件中。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    文件名开头的两位数字指定守护进程读取配置文件的顺序。
    :::
    例如，将键盘的规则复制到一个新的 `.conf`{.literal} 文件中。
    ``` screen
    # grep "USB Keyboard" ./policy.conf > ./10keyboards.conf
    ```
4.  将新策略安装到 `/etc/usbguard/rules.d/`{.literal} 目录中。
    ``` screen
    # install -m 0600 -o root -g root 10keyboards.conf /etc/usbguard/rules.d/10keyboards.conf
    ```
5.  将其余的行移到主 `rules.conf`{.literal} 文件中。
    ``` screen
    # grep -v "USB Keyboard" ./policy.conf > ./rules.conf
    ```
6.  安装其余的规则。
    ``` screen
    # install -m 0600 -o root -g root rules.conf /etc/usbguard/rules.conf
    ```
7.  重新启动 `usbguard`{.literal} 守护进程，以应用您的更改。
    ``` screen
    # systemctl restart usbguard
    ```
:::
::: orderedlist
**验证**
1.  显示所有活动的 [**USBGuard**]{.strong} 规则。
    ``` screen
    # usbguard list-rules
    ...
    15: allow id 04f2:0833 serial "" name "USB Keyboard" hash "kxM/iddRe/WSCocgiuQlVs6Dn0VEza7KiHoDeTz0fyg=" parent-hash "2i6ZBJfTl5BakXF7Gba84/Cp1gslnNc1DM6vWQpie3s=" via-port "7-2" with-interface { 03:01:01 03:00:00 } with-connect-type "unknown"
    ...
    ```
2.  显示 `/etc/usbguard/rules.d/`{.literal} 目录中的
    `rules.conf`{.literal} 文件以及所有`.conf`{.literal} 文件的内容。
    ``` screen
    # cat /etc/usbguard/rules.conf /etc/usbguard/rules.d/*.conf
    ```
3.  验证活动的规则是否包含文件中的所有规则，并且顺序正确。
:::
::: itemizedlist
**其它资源**
-   `usbguard-rules.conf(5)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#protecting-systems-against-intrusive-usb-devices_security-hardening.html#authorizing-users-and-groups-to-use-the-usbguard-ipc-interface_protecting-systems-against-intrusive-usb-devices}授权用户和组使用 USBGuard IPC 接口 {.title}
:::
使用这个流程授权特定用户或组使用 USBGuard 公共 IPC
接口。默认情况下，只有 root 用户可以使用此接口。
::: itemizedlist
**先决条件**
-   `usbguard`{.literal} 服务已安装并运行。
-   `/etc/usbguard/rules.conf`{.literal}
    文件包含了由`usbguard generate-policy`{.literal}
    命令生成的初始规则集。
:::
::: orderedlist
**流程**
1.  使用您选择的文本编辑器编辑
    `/etc/usbguard/usbguard-daemon.conf`{.literal} 文件：
    ``` screen
    # vi /etc/usbguard/usbguard-daemon.conf
    ```
2.  例如，添加一行规则，允许 `wheel`{.literal} 组中的所有用户使用 IPC
    接口，并保存文件：
    ``` screen
    IPCAllowGroups=wheel
    ```
3.  您还可以使用 `usbguard`{.literal}
    命令添加用户或组。例如，以下命令可让 [*joesec*]{.emphasis}
    用户拥有访问 `Devices`{.literal} 和 `Exceptions`{.literal}
    部分的所有权限。另外，[*joesec*]{.emphasis}
    可以列出并修改当前的策略：
    ``` screen
    # usbguard add-user joesec --devices ALL --policy modify,list --exceptions ALL
    ```
    若要删除对 [*joesec*]{.emphasis} 用户授予的权限，可使用
    `usbguard remove-user joesec`{.literal} 命令。
4.  重启 `usbguard`{.literal} 守护进程以应用您的更改：
    ``` screen
    # systemctl restart usbguard
    ```
:::
::: itemizedlist
**其它资源**
-   `usbguard(1)`{.literal} 和 `usbguard-rules.conf(5)`{.literal}
    手册页。
:::
:::
::: section
::: titlepage
# []{#protecting-systems-against-intrusive-usb-devices_security-hardening.html#logging-usbguard-authorization-events-to-the-linux-audit-log_protecting-systems-against-intrusive-usb-devices}将 USBguard 授权事件记录到 Linux 审计日志中 {.title}
:::
使用以下步骤将 USBguard 授权事件记录集成到标准的 Linux
审计日志中。默认情况下，`usbguard`{.literal} 守护进程将事件记录到
`/var/log/usbguard/usbguard-audit.log`{.literal} 文件中。
::: itemizedlist
**先决条件**
-   `usbguard`{.literal} 服务已安装并运行。
-   `auditd`{.literal} 服务正在运行。
:::
::: orderedlist
**流程**
1.  使用您选择的文本编辑器编辑 `usbguard-daemon.conf`{.literal} 文件：
    ``` screen
    # vi /etc/usbguard/usbguard-daemon.conf
    ```
2.  将 `AuditBackend`{.literal} 选项从 `FileAudit`{.literal} 改为
    `LinuxAudit`{.literal}：
    ``` screen
    AuditBackend=LinuxAudit
    ```
3.  重启 `usbguard`{.literal} 守护进程以应用配置更改：
    ``` screen
    # systemctl restart usbguard
    ```
:::
::: orderedlist
**验证**
1.  查询 USB 授权事件的 `audit`{.literal} 守护进程日志，例如：
    ``` screen
    # ausearch -ts recent -m USER_DEVICE
    ```
:::
::: itemizedlist
**其它资源**
-   `usbguard-daemon.conf(5)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#protecting-systems-against-intrusive-usb-devices_security-hardening.html#_additional_resources_5}其它资源 {.title}
:::
::: itemizedlist
-   `usbguard(1)`{.literal}、`usbguard-rules.conf(5)`{.literal}、`usbguard-daemon(8)`{.literal}
    和 `usbguard-daemon.conf(5)`{.literal} 手册页。
-   [USBGuard 主页](https://usbguard.github.io/){.link} 。
:::
:::
:::