_Please make sure that this is a bug. As per ourGitHub Policy, we only address
code/doc bugs, performance issues, feature requests and build/installation
issues on GitHub. tag:bug_template_
**System information**
  * Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes
  * OS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS, Linux
  * Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A
  * TensorFlow installed from (source or binary): Anaconda binary
  * TensorFlow version (use command below): 1.14
  * Python version: 3.7.3
  * Bazel version (if compiling from source): N/A
  * GCC/Compiler version (if compiling from source): N/A
  * CUDA/cuDNN version: N/A
  * GPU model and memory: N/A
You can collect some of this information using our environment capture  
script  
You can also obtain the TensorFlow version with: 1. TF 1.0: `python -c "import
tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"` 2\. TF 2.0: `python -c
"import tensorflow as tf; print(tf.version.GIT_VERSION, tf.version.VERSION)"`
$ python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"  
unknown 1.14.0
**Describe the current behavior**
cloudpickle cannot unpickle `tf.keras` because the `deprecation_wrapper`
introduced in 1.14.
In one python session:
    import cloudpickle
    import tensorflow.keras as K
    with open("/tmp/K.pkl", "wb") as f:
      cloudpickle.dump(K, f)
Then start another python session:
    import cloudpickle
    with open("/tmp/K.pkl", "rb") as f:
      cloudpickle.load(f)
Error:
    Traceback (most recent call last):
      File "", line 2, in 
      File "/Users/meng/conda/envs/tf-1.14/lib/python3.7/site-packages/tensorflow/python/util/deprecation_wrapper.py", line 148, in __setstate__
        sys.modules[d]._dw_wrapped_module,
    KeyError: 'tensorflow.keras'
**Describe the expected behavior**
The same code worked in TensorFlow 1.13. In TensorFlow 1.13, `K.__module__`
does not exist, while in TensorFlow 1.14, `K.__module__` is
    'tensorflow.python.util.deprecation_wrapper'
It makes the `tensorflow.keras` module not loaded during unpickling.
There are multiple applications use pickle to ship TensorFlow code to a remote
machine to unpickle and execute, e.g., Spark, horovod.spark. So the behavior
change would fail the jobs.
Btw, one workaround is to do `from tensorflow import keras as K` instead of
`import tensorflow.keras as K`. The diff is that `K.__name__` is
`'tensorflow.python.keras.api._v1.keras'` in the first case and
`tensorflow.keras` in the second. And pickle uses `__name__` to get global
names: https://github.com/python/cpython/blob/3.7/Lib/pickle.py#L952
cc: @alsrgv @hanyucui @annarev
**Code to reproduce the issue**  
Provide a reproducible test case that is the bare minimum necessary to
generate the problem.
See above.
**Other info / logs**  
Include any logs or source code that would be helpful to diagnose the problem.
If including tracebacks, please include the full traceback. Large logs and
files should be attached.