for f in "$@"; do
    enc=$(file -bi "$f" | cut -d = -f 2)
    if [[ $enc != "us-ascii" ]]; then
        dirn=$(dirname "$f")
        basen=$(basename "$f")
        new_dir="${out_dir}/${dirn}"
        if [[ ! -e "$new_dir" ]]; then
            mkdir -p "$new_dir"
        fi
        case "$basen" in
            armscii-8.7 | cp1251.7 | iso_8859-*.7 | koi8-?.7)
	        # iconv does not understand some encoding names that
	    	# start "iso_", but does understand the corresponding
	        # forms that start with "iso-"
                from_enc="$(echo $basen | sed 's/\.7$//;s/iso_/iso-/')"
                ;;
            *)
	        echo "null transform: $f"
                from_enc=$enc
                ;;
        esac
        printf "converting %-23s from %s\n" "$f" "$from_enc"
        echo "$enc_line" > "${new_dir}/${basen}"
        iconv -f "$from_enc" -t utf-8 "$f" \
            | sed "/.*-\*- coding:.*/d;/.\\\" t$/d" >> "${new_dir}/${basen}"
    fi
done
exit 0
.\" copyright 2002 walter harms (PI:EMAIL)
.\"
.\" %%%license_start(gpl_noversion_oneline)
.\" distributed under gpl
.\" %%%license_end
.\"
.th ctan 3 2021-03-22 "" "linux programmer's manual"
.sh name
ctan, ctanf, ctanl \- complex tangent function
.sh synopsis
.nf
.b #include 
.pp
.bi "double complex ctan(double complex " z ");"
.bi "float complex ctanf(float complex " z );
.bi "long double complex ctanl(long double complex " z ");"
.pp
link with \fi\-lm\fp.
.fi
.sh description
these functions calculate the complex tangent of
.ir z .
.pp
the complex tangent function is defined as:
.pp
.nf
    ctan(z) = csin(z) / ccos(z)
.fi
.sh versions
these functions first appeared in glibc in version 2.1.
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lbx lb lb
l l l.
interface	attribute	value
t{
.br ctan (),
.br ctanf (),
.br ctanl ()
t}	thread safety	mt-safe
.te
.hy
.ad
.sp 1
.sh conforming to
c99, posix.1-2001, posix.1-2008.
.sh see also
.br cabs (3),
.br catan (3),
.br ccos (3),
.br csin (3),
.br complex (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/getpwnam.3
.\" copyright andries brouwer, 2000
.\" some fragments of text came from the time-1.7 info file.
.\" inspired by kromjx@crosswinds.net.
.\"
.\" %%%license_start(gpl_noversion_oneline)
.\" distributed under gpl
.\" %%%license_end
.\"
.th time 1 2019-03-06 "" "linux user's manual"
.sh name
time \- time a simple command or give resource usage
.sh synopsis
.b time \c
.ri [ options ] " command " [ arguments... ]
.sh description
the
.b time
command runs the specified program
.i command
with the given arguments.
when
.i command
finishes,
.b time
writes a message to standard error giving timing statistics
about this program run.
these statistics consist of (i) the elapsed real time
between invocation and termination, (ii) the user cpu time
(the sum of the
.i tms_utime
and
.i tms_cutime
values in a
.i "struct tms"
as returned by
.br times (2)),
and (iii) the system cpu time (the sum of the
.i  tms_stime
and
.i tms_cstime
values in a
.i "struct tms"
as returned by
.br times (2)).
.pp
note: some shells (e.g.,
.br bash (1))
have a built-in
.b time
command that provides similar information on the usage of time and
possibly other resources.
to access the real command, you may need to specify its pathname
(something like
.ir /usr/bin/time ).
.sh options
.tp
.b \-p
when in the posix locale, use the precise traditional format
.ip
.in +4n
.ex
"real %f\enuser %f\ensys %f\en"
.ee
.in
.ip
(with numbers in seconds)
where the number of decimals in the output for %f is unspecified
but is sufficient to express the clock tick accuracy, and at least one.
.sh exit status
if
.i command
was invoked, the exit status is that of
.ir command .
otherwise, it is 127 if
.i command
could not be found, 126 if it could be found but could not be invoked,
and some other nonzero value (1\(en125) if something else went wrong.
.sh environment
the variables
.br lang ,
.br lc_all ,
.br lc_ctype ,
.br lc_messages ,
.br lc_numeric ,
and
.b nlspath
are used for the text and formatting of the output.
.b path
is used to search for
.ir command .
.sh gnu version
below a description of the gnu 1.7 version of
.br time .
disregarding the name of the utility, gnu makes it output lots of
useful information, not only about time used, but also on other
resources like memory, i/o and ipc calls (where available).
the output is formatted using a format string that can be specified
using the
.i \-f
option or the
.b time
environment variable.
.pp
the default format string is:
.pp
.in +4n
.ex
%uuser %ssystem %eelapsed %pcpu (%xtext+%ddata %mmax)k
%iinputs+%ooutputs (%fmajor+%rminor)pagefaults %wswaps
.ee
.in
.pp
when the
.i \-p
option is given, the (portable) output format is used:
.pp
.in +4n
.ex
real %e
user %u
sys %s
.ee
.in
.\"
.ss the format string
the format is interpreted in the usual printf-like way.
ordinary characters are directly copied, tab, newline,
and backslash are escaped using \et, \en, and \e\e,
a percent sign is represented by %%, and otherwise %
indicates a conversion.
the program
.b time
will always add a trailing newline itself.
the conversions follow.
all of those used by
.br tcsh (1)
are supported.
.pp
.b "time"
.tp
.b %e
elapsed real time (in [hours:]minutes:seconds).
.tp
.b %e
(not in
.br tcsh (1).)
elapsed real time (in seconds).
.tp
.b %s
total number of cpu-seconds that the process spent in kernel mode.
.tp
.b %u
total number of cpu-seconds that the process spent in user mode.
.tp
.b %p
percentage of the cpu that this job got, computed as (%u + %s) / %e.
.pp
.b "memory"
.tp
.b %m
maximum resident set size of the process during its lifetime, in kbytes.
.tp
.b %t
(not in
.br tcsh (1).)
average resident set size of the process, in kbytes.
.tp
.b %k
average total (data+stack+text) memory use of the process,
in kbytes.
.tp
.b %d
average size of the process's unshared data area, in kbytes.
.tp
.b %p
(not in
.br tcsh (1).)
average size of the process's unshared stack space, in kbytes.
.tp
.b %x
average size of the process's shared text space, in kbytes.
.tp
.b %z
(not in
.br tcsh (1).)
system's page size, in bytes.
this is a per-system constant, but varies between systems.
.tp
.b %f
number of major page faults that occurred while the process was running.
these are faults where the page has to be read in from disk.
.tp
.b %r
number of minor, or recoverable, page faults.
these are faults for pages that are not valid but which have
not yet been claimed by other virtual pages.
thus the data
in the page is still valid but the system tables must be updated.
.tp
.b %w
number of times the process was swapped out of main memory.
.tp
.b %c
number of times the process was context-switched involuntarily
(because the time slice expired).
.tp
.b %w
number of waits: times that the program was context-switched voluntarily,
for instance while waiting for an i/o operation to complete.
.pp
.b "i/o"
.tp
.b %i
number of filesystem inputs by the process.
.tp
.b %o
number of filesystem outputs by the process.
.tp
.b %r
number of socket messages received by the process.
.tp
.b %s
number of socket messages sent by the process.
.tp
.b %k
number of signals delivered to the process.
.tp
.b %c
(not in
.br tcsh (1).)
name and command-line arguments of the command being timed.
.tp
.b %x
(not in
.br tcsh (1).)
exit status of the command.
.ss gnu options
.tp
.bi "\-f " format ", \-\-format=" format
specify output format, possibly overriding the format specified
in the environment variable time.
.tp
.b "\-p, \-\-portability"
use the portable output format.
.tp
.bi "\-o " file ", \-\-output=" file
do not send the results to
.ir stderr ,
but overwrite the specified file.
.tp
.b "\-a, \-\-append"
(used together with \-o.) do not overwrite but append.
.tp
.b "\-v, \-\-verbose"
give very verbose output about all the program knows about.
.tp
.b "\-q, \-\-quiet"
don't report abnormal program termination (where
.i command
is terminated by a signal) or nonzero exit status.
.\"
.ss gnu standard options
.tp
.b "\-\-help"
print a usage message on standard output and exit successfully.
.tp
.b "\-v, \-\-version"
print version information on standard output, then exit successfully.
.tp
.b "\-\-"
terminate option list.
.sh bugs
not all resources are measured by all versions of unix,
so some of the values might be reported as zero.
the present selection was mostly inspired by the data
provided by 4.2 or 4.3bsd.
.pp
gnu time version 1.7 is not yet localized.
thus, it does not implement the posix requirements.
.pp
the environment variable
.b time
was badly chosen.
it is not unusual for systems like
.br autoconf (1)
or
.br make (1)
to use environment variables with the name of a utility to override
the utility to be used.
uses like more or time for options to programs
(instead of program pathnames) tend to lead to difficulties.
.pp
it seems unfortunate that
.i \-o
overwrites instead of appends.
(that is, the
.i \-a
option should be the default.)
.pp
mail suggestions and bug reports for gnu
.b time
to
.ir bug\PI:EMAIL .
please include the version of
.br time ,
which you can get by running
.pp
.in +4n
.ex
time \-\-version
.ee
.in
.pp
and the operating system
and c compiler you used.
.\" .sh authors
.\" .tp
.\" .ip "david keppel"
.\" original version
.\" .ip "david mackenzie"
.\" posixization, autoconfiscation, gnu getoptization,
.\" documentation, other bug fixes and improvements.
.\" .ip "arne henrik juul"
.\" helped with portability
.\" .ip "francois pinard"
.\" helped with portability
.sh see also
.br bash (1),
.br tcsh (1),
.br times (2),
.br wait3 (2)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/pthread_attr_setscope.3
.\" copyright 1993 david metcalfe (PI:EMAIL)
.\"
.\" %%%license_start(verbatim)
.\" permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" since the linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  the author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  the author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%license_end
.\"
.\" references consulted:
.\"     linux libc source code
.\"     lewine's _posix programmer's guide_ (o'reilly & associates, 1991)
.\"     386bsd man pages
.\" modified 1993-07-24 by rik faith (PI:EMAIL)
.\" modified 2001-04-01 by aeb
.\" modified 2003-07-23 by aeb
.\"
.th usleep 3  2021-03-22 "" "linux programmer's manual"
.sh name
usleep \- suspend execution for microsecond intervals
.sh synopsis
.nf
.b "#include "
.pp
.bi "int usleep(useconds_t " usec );
.fi
.pp
.rs -4
feature test macro requirements for glibc (see
.br feature_test_macros (7)):
.re
.pp
.br usleep ():
.nf
    since glibc 2.12:
        (_xopen_source >= 500) && ! (_posix_c_source >= 200809l)
            || /* glibc since 2.19: */ _default_source
            || /* glibc = 500
.\"    || _xopen_source && _xopen_source_extended
.fi
.sh description
the
.br usleep ()
function suspends execution of the calling thread for
(at least) \fiusec\fp microseconds.
the sleep may be lengthened slightly
by any system activity or by the time spent processing the call or by the
granularity of system timers.
.sh return value
the
.br usleep ()
function returns 0 on success.
on error, \-1 is returned, with
.i errno
set to indicate the error.
.sh errors
.tp
.b eintr
interrupted by a signal; see
.br signal (7).
.tp
.b einval
\fiusec\fp is greater than or equal to 1000000.
(on systems where that is considered an error.)
.sh attributes
for an explanation of the terms used in this section, see
.br attributes (7).
.ad l
.nh
.ts
allbox;
lbx lb lb
l l l.
interface	attribute	value
t{
.br usleep ()
t}	thread safety	mt-safe
.te
.hy
.ad
.sp 1
.sh conforming to
4.3bsd, posix.1-2001.
posix.1-2001 declares this function obsolete; use
.br nanosleep (2)
instead.
posix.1-2008 removes the specification of
.br usleep ().
.pp
on the original bsd implementation,
and in glibc before version 2.2.2, the return type of this function is
.ir void .
the posix version returns
.ir int ,