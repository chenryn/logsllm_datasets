### Color Matrices and Grayscale Images

We represent the color matrices as grayscale images, as depicted in Figure 7. In Figure 7(a), a grayscale block is used to represent the probability value in the corresponding row and column of the matrix \( U_{\text{succ}} \). The higher the probability value, the darker (blacker) the corresponding block. Similarly, Figure 7(b) shows a grayscale image for the matrix \( R_{\text{succ}} \). These grayscale images provide a vivid representation of the overall network security and the compromising relationships among hosts.

### Example Network Security Measurement

To further measure the security of our example network, we assume that the set of important hosts in the network is \( C = \{F, D\} \). If an attacker gains user privilege on hosts in \( C \), the potential damage is \( d_u = \{200, 2000\} \) (in U.S. dollars). If the attacker gains root privilege, the potential damage is \( d_r = \{2000, 10000\} \). The values in \( d_u \) and \( d_r \) indicate the damage levels in monetary terms. For instance, if a malicious attacker compromises host \( F \), the potential damage could be $2000. Therefore, the total potential damage caused by outside attackers can be calculated as:

\[
TD_{H_0} = \sum_{H_k \in C} \max(d_{uk} \cdot u_{0k}, d_{rk} \cdot r_{0k})
\]

\[
TD_{H_0} = \max(200 \cdot 0.665, 2000 \cdot 0) + \max(2000 \cdot 0.665, 10000 \cdot 0.42) = 4333
\]

This means that an outside attacker could potentially cause $4333 worth of damage to the network.

For inside malicious users in host \( H_i \) (where \( 1 \leq i \leq 3 \)), the total potential damage is calculated as:

\[
TD_{H_i} = \sum_{H_k \in C} \max(d_{uk} \cdot u_{ik}, d_{rk} \cdot r_{ik})
\]

The results are:

\[
(TD_{H_0}, TD_{H_2}, TD_{H_3}) = (6190, 5900, 6000)
\]

Next, we assign importance factors \( w_k \) to each host \( H_k \) in \( C \). For this example, we set \( w = \{0.2, 1\} \) for the set of important hosts \( C = \{F, D\} \). The value \( w_1 = 0.2 \) for host \( F \) indicates that the file server is less important, while \( w_2 = 1 \) for host \( D \) indicates that the database server is very important. If the database server is compromised, the network is considered compromised. The security score \( DS \) is then calculated as:

\[
DS = \sum_{H_k \in C} (w_k \cdot r_{0k}) = 0.2 \cdot 0 + 1 \cdot 0.42 = 0.42
\]

Here, \( DS = 0.42 \) falls within the range [0.4, 0.7], indicating that the target network is relatively secure but still requires attention from network administrators to patch vulnerabilities.

The transition scores for stepping stones are also computed, resulting in:

\[
(TS_1, TS_2, TS_3) = (1, 0.9055, 0.9208)
\]

A \( TS_1 = 1 \) indicates that host \( H_1 \) is a key stepping stone, appearing in all attack paths with the highest probability of success leading to the compromise of important hosts. Network administrators should prioritize patching this host.

### Larger Network Example

To further demonstrate the effectiveness of our approach, we simulate a larger enterprise network consisting of 6 subnets and 100 hosts. A common defense-in-depth strategy is employed, using layers of firewalls to divide the network into three regions: DMZ, office, and back-end. Including one outside attacker's host, there are 101 hosts in total. Theoretically, 101 * 100 = 10100 host-pair attack graphs need to be generated. However, considering network reachability and grouping similar hosts, only 901 host-pair attack graphs are required. The result is a host access graph with 101 nodes and 3102 edges. After calculating the adjacency matrices \( U_{\text{succ}} \) and \( R_{\text{succ}} \), we draw them as grayscale images, as shown in Figure 8.

From the grayscale images in Figure 8, we can draw the following conclusions:
1. An outside attacker can compromise critical resources in the network and gain user or root privileges, even if these resources are in the back-end region protected by several firewalls.
2. Hosts \( H_{57} \) to \( H_{71} \) have good border protection, as few other hosts in the network can successfully attack them.
3. Hosts \( H_{82} \) to \( H_{100} \) cannot penetrate any other host outside their own group. This is because these hosts are servers in the back-end region, which are restricted from accessing the office and DMZ regions.
4. When hosts are labeled by their IP addresses, the presence of stripes and large blocks in the graphs indicates the similarity of hosts within the same subnets.

If some hosts in the back-end region are set as important with a weight factor of 1, the security score \( DS \) for this network is 1.6438, indicating that the network is highly vulnerable. Network administrators should take immediate action to harden the network.

### Conclusions

To address the scalability problem and efficiently evaluate network security in attack graphs, we propose a novel generation approach and a measurement methodology. Our model is based on two assumptions: the widely used assumption of monotonicity and the user-privilege assumption, where attackers only need user access privileges at source hosts to exploit vulnerabilities at target hosts. Our model generates attack graphs in a two-layer framework, including host-pair attack graphs and a host access graph. The generation process takes polynomial time, with an upper bound computation of \( O(N^2) \).

Subsequently, we propose an efficient measurement methodology to evaluate network security using adjacency matrices. By applying the probability of success to our attack graphs, we obtain maximum probabilities that indicate the access probabilities between each pair of hosts, either directly or indirectly. We then draw grayscale images to visually represent the overall network security and the compromising relationships among hosts. Our results not only describe the potential attack probabilities launched by outside attackers but also by inside malicious users. We also provide quantitative evaluations and create prioritized lists of threatening hosts and stepping stones to assist network administrators in hardening the network. Our measurement methodology has a worst-case time computation cost of \( O(N^3) \), which can be completed in real-time. Additionally, our model has advantages in comparing the security levels of similar networks. Future work will consider these requirements and explore faster algorithms.

### Acknowledgments

The authors would like to thank the anonymous referees for their valuable comments.