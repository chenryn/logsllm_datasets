color matrixes, and draw them as gray scale images, which
are shown as Figure 7. In Figure 7(a), we use a gray scale
block to represent the probability value in corresponding row
and column in Usucc. The higher the probability value is,
the blacker the corresponding block is. Similarly, Figure 7(b)
shows a gray scale image for matrix Rsucc. Gray scale images
show the overall security of networks and the compromising
relationships among hosts vividly.
We continue to measure the example network security.
Firstly, we assume the set of important hosts in network is
C = {F, D}. If an attacker obtains user privilege in hosts in
C, the prospective damage is about du = {200, 2000}, where
200 means 200 U.S. dollars, 2000 means 2000 U.S. dollars. If
an attack obtains root privilege in hosts in C, the prospective
damage is dr = {2000, 10000}. The values in du and dr tell
Target Host
H1
H2
H3
H0
Target Host
H1
H2
H0
H3
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
t
s
o
H
e
c
r
u
o
S
H0
H1
H2
H3
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
t
s
o
H
e
c
r
u
o
S
H0
H1
H2
H3
(a) Usucc
(b) Rsucc
Fig. 7.
compromised image for example network
us the damage level in numbers. For example, if a malicious
attacker compromised the host F , the damage he or she may
caused is 2000. So, we can get the total prospective damage
potentially caused by outside attackers as
(cid:2)
Hk∈C
TDH0 =
(max(duk ∗ u0k, drk ∗ r0k))
= max(200 ∗ 0.665, 2000 ∗ 0)
+ max(2000 ∗ 0.665, 10000 ∗ 0.42)
= 4333
by
is
an
user
there
Supposed
him would
TDH0 = 4333 means that an outside attacker may cause this
network a damage with 4333 U.S. dollars at most.
inside malicious
in
Host Hi, where 1 ≤ i ≤ 3. The prospective total
(cid:9)
damage
as
brought
Hk∈C(max(duk ∗ uik, drk ∗ rik)). We get
TDHi =
(TDH0, TDH2, TDH3) = (6190, 5900, 6000).
Then, we set important factors wk for each host Hk in C.
In this example network, we set w = {0.2, 1} for the set of
important hosts is C = {F, D} as described above. The value
of w1 is 0.2 for host F, which means the ﬁle server is less
important. The value of w2 is 1 for host D, which means the
database server is very important, and if it is compromised by
outside attacker, the network is compromised. Then, we get
calculated
be
DS =
(wk ∗ r0k) = 0.2 ∗ 0 + 1 ∗ 0.42 = 0.42
(cid:2)
Hk∈C
Here, DS=0.42 is in section [0.4, 0.7], which indicates the
target network is a less dangerous network, and network
administrators should consider how to patch the network.
The corresponding transition scores for stepping stones
would also be computed as section III-E. The result values
are (TS1, TS2, TS3) = (1, 0.9055, 0.9208). TS1 = 1 means
that host H1 is the key stepping stones, and it appears in all
of attack paths with maximize probability of success leading to
compromising important hosts. Network administrators should
patch this host immediately.
D. Larger network example
To further demonstrate the beneﬁt of our approach further,
we simulate a larger enterprise network, which consists of 6
subnets and 100 hosts. A common strategy, defense in depth,
134
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:06:04 UTC from IEEE Xplore.  Restrictions apply. 
is also used to protect critical resources in this network, which
uses layers of ﬁrewalls to divide network into three regions,
i.e., DMZ region, ofﬁce region, and back-end region. There
are 101 hosts in total as we add one outside attacker’s hosts.
Theoretically, we need to generate 101*100=10100 host-pair
attack graphs. While considering the network reachabilities
and grouping the similar hosts, we need only generate 901
host-pair attack graphs. The result is a hosts access graph
with 101 nodes and 3102 edges. After calculating adjacency
matrixes Usucc and Rsucc, we draw them as the gray scale
images which are shown as Figure 8.
Target Host
H0 H10 H20 H30 H40 H50 H60 H70 H80 H90 H100
H0
t
s
o
H
e
c
r
u
o
S
H10
H20
H30
H40
H50
H60
H70
H80
H90
H100
(a) Usucc
Target Host
H0 H10 H20 H30 H40 H50 H60 H70 H80 H90 H100
H0
t
s
o
H
e
c
r
u
o
S
H10
H20
H30
H40
H50
H60
H70
H80
H90
H100
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
(b) Rsucc
Fig. 8. Compromised image for a larger network
From the gray scale images in Figure 8, we can draw the
following conclusions;
1) An outside attacker could compromise the critical re-
sources hosts in this network and gain user or root
privilege, even if they are in back-end region with
several protecting ﬁrewalls and network gates.
135
2) When checking the hosts H57 ∼ H71 in columns, these
hosts have good border protection, for few other hosts
in network could attack these hosts successfully.
3) When checking the hosts H82 ∼ H100 in rows, they
could penetrate none host outside of themselves. This is
because these hosts are servers in the back-end region,
which are forbidden to access the ofﬁce region and DMZ
region.
4) When we label the hosts according to their IP address,
there are many stripes and large blocks in the graphs,
these show the similarity of hosts in the same subnets.
Interestingly, when we set some hosts in the back-end region
as important hosts, and set their weigh factor as 1. We get
the DS for this network at 1.6438, which means this network
is very dangerous. Network administrators should harden it
immediately.
V. CONCLUSIONS
is based on two assumptions;
To address the scalability problem and evaluate network
security efﬁciently in attack graphs, we propose a novel
generation approach and a measurement methodology. Our
the ﬁrst one is the
model
wildly used assumption of monotonicity,
the other one is
user privilege assumption, i.e., attackers only need user access
privileges at source hosts when exploiting vulnerabilities at
target hosts. In our model, we generate attack graphs in a two-
layer framework, which includes some host-pair attack graphs
and a hosts access graph. A host-pair attack graph describes
the detailed attack scenarios from one source host to one target
host, while the hosts access graphs shows the direct network
access relationships between each pair of hosts in networks.
The generation of our attack graphs takes polynomial time,
whose upper bound computation is O(N 2).
Subsequently, we propose an efﬁcient measurement method-
ology to evaluate network security based on adjacency ma-
trixes. Applying the probability of success to our attack graphs,
we get maximum probabilities which indicates the access
probabilities between each pair of hosts directly or indirectly.
Then, we draw gray scale images to indicate the overall
network security, which also show compromised relationships
among hosts vividly. Interestingly, our results not only describe
the potential attack probabilities of success launched from
an outside attacker, but also describe the potential attack
probabilities launched from inside malicious users. We also
evaluate network security quantitatively, and create prioritized
lists of the threatening hosts and stepping stones for helping
network administrators to harden networks. Moreover, our
measurement methodology has time computation cost O(N 3)
in the worst case, which could also be completed in real time.
Our model also has advantages in comparing two similar
networks security levels. Our future works will consider these
requests, and research some faster algorithms.
ACKNOWLEDGMENT
The authors would like to thank the anonymous referees for
their useful comments.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:06:04 UTC from IEEE Xplore.  Restrictions apply. 
[23] J. Homer, A. Varikuti, X. Ou, and M. A. McQueen, “Improving attack
graph visualization through data reduction and attack grouping,” in
VizSEC, ser. Lecture Notes in Computer Science, J. R. Goodall, G. J.
Conti, and K.-L. Ma, Eds., vol. 5210. Springer, 2008, pp. 68–79.
[24] Y. Zhang and V. Paxson, “Detecting stepping stones,” in SSYM’00:
Proceedings of the 9th conference on USENIX Security Symposium.
Berkeley, CA, USA: USENIX Association, 2000, pp. 13–13.
[25] D. L. Donoho, A. G. Flesia, U. Shankar, V. Paxson, J. Coit, and
S. Staniford, “Multiscale stepping-stone detection: Detecting pairs of
jittered interactive streams by exploiting maximum tolerable delay,” in
RAID, 2002, pp. 17–35.
REFERENCES
[1] C. A. Phillips and L. P. Swiler, “A graph-based system for network-
vulnerability analysis,” in Workshop on New Security Paradigms, 1998,
pp. 71–79.
[2] O. Sheyner, J. W. Haines, S. Jha, R. Lippmann, and J. M. Wing, “Au-
tomated generation and analysis of attack graphs,” in IEEE Symposium
on Security and Privacy, 2002, pp. 273–284.
[3] L. Wang, A. Singhal, and S. Jajodia, “Toward measuring network
security using attack graphs,” in QoP, G. Karjoth and K. Stølen, Eds.
ACM, 2007, pp. 49–54.
[4] S. Noel, S. Jajodia, B. O’Berry, and M. Jacobs, “Efﬁcient minimum-cost
IEEE
network hardening via exploit dependency graphs,” in ACSAC.
Computer Society, 2003, pp. 86–95.
[5] L. Wang, T. Islam, T. Long, A. Singhal, and S. Jajodia, “An attack
graph-based probabilistic security metric,” in DBSec, ser. Lecture Notes
in Computer Science, V. Atluri, Ed., vol. 5094.
Springer, 2008, pp.
283–296.
[6] J. Pamula, S. Jajodia, P. Ammann, and V. Swarup, “A weakest-adversary
security metric for network conﬁguration security analysis,” in QoP,
G. Karjoth and F. Massacci, Eds. ACM, 2006, pp. 31–38.
[7] M. Frigault, L. Wang, A. Singhal, and S. Jajodia, “Measuring network
security using dynamic bayesian network,” in QoP, A. Ozment and
K. Stølen, Eds. ACM, 2008, pp. 23–30.
[8] P. Ammann, D. Wijesekera, and S. Kaushik, “Scalable, graph-based
network vulnerability analysis,” in CCS ’02: Proceedings of the 9th ACM
conference on Computer and communications security. New York, NY,
USA: ACM, 2002, pp. 217–224.
[9] S. Jajodia, S. Noel, and B. OBerry, “Topological analysis of network
attack vulnerability,” in Managing Cyber Threats: Issues, Approaches
and Challenges, V. Kumar, J. Srivastava, and A. Lazarevic, Eds. Kluwer
Academic Publisher, 2003.
[10] R. Hewett and P. Kijsanayothin, “Host-centric model checking for
network vulnerability analysis,” in ACSAC ’08: Proceedings of the 2008
Annual Computer Security Applications Conference. Washington, DC,
USA: IEEE Computer Society, 2008, pp. 225–234.
[11] R. E. Sawilla and X. Ou, “Identifying critical attack assets in dependency
attack graphs,” in ESORICS, ser. Lecture Notes in Computer Science,
S. Jajodia and J. L´opez, Eds., vol. 5283. Springer, 2008, pp. 18–34.
[12] P. Ammann, J. Pamula, J. A. Street, and R. W. Ritchey, “A host-
IEEE
based approach to network attack chaining analysis,” in ACSAC.
Computer Society, 2005, pp. 72–84.
[13] A. Hecker, “On system security metrics and the deﬁnition approaches,”
in SECURWARE.
IEEE, 2008, pp. 412–419.
[14] A. Atzeni and A. Lioy, “Why to adopt a security metric? a brief survey,”
in QoP2005, First Int. Workshop on Quality of Protection, 2005, pp. 1–
12.
[15] P. Mell, K. Scarfone, and S. Romanosky. Cvss. A Complete Guide
to the Common Vulnerability Scoring System Version 2.0. [Online].
Available: http://www.ﬁrst.org/cvs s/cvss-guide.html
[16] Nessus. Open source vulnerability scanner project. [Online]. Available:
http://www.nessus.org/nessus
[17] M. S. Ahmed, E. Al-Shaer, and L. Khan, “A novel quantitative approach
for measuring network security,” in The 27th Conference on Computer
Communicationsm, INFOCOM, 2008, pp. 1957–1065.
[18] R. Ortalo, Y. Deswarte, and M. Kaˆaniche, “Experimenting with quanti-
tative evaluation tools for monitoring operational security,” IEEE Trans.
Software Eng., vol. 25, no. 5, pp. 633–650, 1999.
[19] R. Lippmann, K. Ingols, C. Scott, K. Piwowarski, K. Kratkiewicz,
M. Artz, and R. Cunningham, “Validating and restoring defense in depth
using attack graphs,” in Proceedings of MILCOM2006, Washington, DC,
2006, pp. 1–10.
[20] K. Ingols, R. Lippmann, and K. Piwowarski, “Practical attack graph
IEEE Computer Society,
generation for network defense,” in ACSAC.
2006, pp. 121–130.
[21] S. Noel and S. Jajodia, “Understanding complex network attack graphs
IEEE Computer
through clustered adjacency matrices,” in ACSAC.
Society, 2005, pp. 160–169.
[22] S. O’Hare, S. Noel, and K. Prole, “A graph-theoretic visualization
approach to network risk analysis,” in VizSEC, ser. Lecture Notes in
Computer Science, J. R. Goodall, G. J. Conti, and K.-L. Ma, Eds., vol.
5210. Springer, 2008, pp. 60–67.
136
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:06:04 UTC from IEEE Xplore.  Restrictions apply.