Host:127.0.0.1:5000
GET /message/1 HTTP/1.1
Curl_addHandleToPipeline:length:1
Adding handle:send:0
Adding handle: conn: 0x1d46e90
Trying 127.0.0.1...
第12章RDBMS和ORM
本电子书仅限学习交流使用，请勿用于商业用途
---
## Page 186
熊猫爱中国www.xiongmaoi.com
①能够同其他RDBMS 服务器兼容，如MySQL。
数据库时你应该了解的问题。
他数据库大牛辩论。我们彼此分享了很多开源的体验，并且他非常热心的回答了很多在处理
2ndQuadrant 公司（http:/2ndquadrant.com/en/）工作，并在 pgsql-hackers 的邮件列表上与其
12.2 Dimitri Fontaine 访谈
system），尽管它比持续地轮询数据库要效率高。
次次查询是否有新数据插入表内。不过，没有必要在这里展示这样一个推送系统（push
对用RDBMS作为存储后端的开发人员你有什么建议吗？有什么是他们需要了解的吗？
关于这个应用程序的一个朴素的且可以说更轻便的实现?不是通过一个 SELECT语句一
data: ("id":72,"channel":1,"source";"jd","content":"it works")
data: ("id":71,"channel":1,"source":"jd","content":"hello world")
终端上curl运行的位置就会有数据输出：
INSERT01
mydatabase->VALUES(1,'jd',
mydatabase=> INSERT INTO message(channel, source, content)
INSERTO1
mydatabase-> VALUES (1,
mydatabase=> INSERT INTO message(channel, source, content)
本电子书仅限学习交流使用，请勿用于商业用途
'jd', 'hello world');
'it works');
12.2Dimitri Fontaine 访谈
179
在
---
## Page 187
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
里高里历?)。
日历中的日期（罗马儒略历?到目前还不算特别大，除非处理历史日期，否则你可能需要格
的 RDBMS 知道更多关于如何处理文本、数值和日期格式，并能恰当地处理实际出现在当今
明的可延迟性（deferability）。
会在关键的时候对这些规则进行检查，例如，当事务提交时或者语句的边界，取决于约束声
如何实现数据的存储了。
员都会遇到的常见问题，并且RDBMS 实现的主要服务并不是数据存储，因为人们已经知道
系型数据库系统）。它们是在20世纪70年代发明的，用来解决一些那个时代的每个开发人
得这个问题有意义的话，那么现在你真的有必要看一下我的回答。
180
对于数据的第一个约束是关于其期望的输入输出格式的，即使用合适的数据类型。合适
这是一个很好的问题，因为它让我有更多机会专门澄清一些非常错误的假设。如果你觉
但是数据类型不仅仅与输入输出格式有关，它们还允许实现行为和某种程度的多态性，
RDBMS 承担了对数据的全部责任。所以它允许开发人员描述自己的一致性规则，并且
·并发：可以执行多个并发的线程对数据进行读写，RDBMS 能够正确地进行处理。这
RDBMS 提供的主要服务如下。
让我们从一些无聊的部分开始：RDBMS代表Relational DataBaseManagement System（关
·并发语义：讨论RDBMS 中有关并发行为的细节必然涉及高级规范中的原子性
org/docs/9.2/static/transaction-iso.html）中有所描述。
是你需要 RDBMS 提供的主要功能。
第12章RDBMS和ORM
发行为。SQL 标准中定义了四个级别的隔离，在事务隔离文档（http://www.postgresql
TABLE）的RDBMS时，隔离性是指在系统中你自己的事务内允许你看到的其他并
含数据定义语言（Data Definition Language，即 DDL，如 CREATE TABLE 或 ALTER
他并发行为都无法获知你在干什么，不管是什么的一种性质。当使用一个合适的包
结束之前（不管是执行COMMIT还是ROLLBACK）的这段时间内，任何系统中的其
Isolation，Durability）中最关键的部分。原子性是指在开始（BEGIN）一个事务和其
（Atomicity）和隔离性（Isolation），它们可能是ACID（Atomicity，Consistency，
本电子书仅限学习交流使用，请勿用于商业用途
一译者注
---
## Page 188
熊猫爱中国www.xiongmaoi.com
熊猫爱许多有些细微不同的范式（NormalForm）。但是有时也会需要规范化过程无法提供的灵活性。
主要发布版本都有大量的扩展被加入，以支持极为丰富的 DSL 语言。所有查询规划和优化
成为了事实上的标准并且目前由一个专门的委员会负责管理。对于 PostgreSQL，每年的每个
以对敏感数据提供非常受限的访问，很像在使用 suid程序。
式被控制在关系和列层面，并且 PostgreSQL 还实现了 SECURITY DEFINER 存储过程，
数据。
展，当在使用组合类型、数组或 hstore，甚至最近发布的json 时，支持尽可能多地非规范化
Language），它被设计为处理而非规范化数据。当然，PostgreSQL已经对查询语言进行了扩
得需要的灵活性。你可能会碰巧发现你并不需要额外的灵活性。
常见的办法是先规范化数据模式，然后反过来看如何进行反规范化（denormalization）以获
理数据。
享通用的规则集，即结构和约束。当执行时，即表示我们正在强制使用适当的显式模式来处
主要区别是可以选择DEFER检查这些约束从每条语句结束到当前事务结束。
发器，后者通常被称为外键。所有这些都可以作为数据类型定义和行为在用户层面的扩展，
日历中根本不存在的日期可以的话，那么你需要重新考虑一下。
数据，首当其冲的就是你已经选择的数据类型。如果你觉得处理类似0000-00-00这样在
组和范围，等等。
字，比较日期和IP地址，比较点框和线条，比较布尔和圆形，比较UUID 和XML，比较数
因为我们期望的基本相等测试是针对特定数据类型的。我们不会以同样的方式比较文本和数
RDBMS可以使用结构化查询语言对数据进行访问，结构化语言在20世纪80年代已经
RDBMS 对数据非常了解并能在需要的情况下帮助实现非常细粒度的安全模型。访问模
但反规范化有一个很重要的缺点，就是我们接下来要讨论的查询语言（Query
当你发现确实需要更多的灵活性时，PostgreSQL 为初学者提供了一些反规范化的选择：
令数据工作在适当模式上的过程被称为规范化（normalization），并且可以在设计中实现
RDBMS的关系特性主要体现在对数据的建模，以及保证所有在同一个关系中的元组共
保证一致性的其他有关约束的表现方式还包括CHECK 约束，NOT NULL 约束和约束触
保护数据还意味着合适的RDBMS的唯一选择是要能主动拒绝不满足一致性的规则的
本电子书仅限学习交流使用，请勿用于商业用途
12.2Dimitri Fontaine 访谈
181
---
## Page 189
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
记得我们正在测量的是基于主键的毫秒级的查询。
和应用程序之间使用 SSL的话可能还需要再次压缩。而且，还要考虑到网络带宽的使用并
的已知列，那么它将强制你的RDBMS在发送前提取额外的数据（并解压缩)，如果在RDBMS
必要的列之间的查询性能的区别。现在，如果ORM在它的投影（或输出列表）中包含所有
单个表做非常简单的 SELECT 查询。如果比较较大的输出列表，可以测量出提取额外的列和
创建（Create）、读取（Read）、更新（Update）、删除（Delete）。读取部分会受限制，只能对
系以处理JOIN。
在于这个子查询期间。每一个 JOIN，无论是INNER 或者OUTER，都将动态生成一个新关
的，每一次查询结果都是一个新关系。每一次子查询的结果也是一个新关系，而且可能只存
一的映射，即数据库关系和类，以及数据库元组和对象（或者说类实例)。
证明是图灵完备的。它的实现和优化都相当有分量。
PostgreSQL擅长成为整个实现中最值得信赖的部分。
序的架构中。你需要实现的部分服务在RDBMS层面已经给予了最好的支持，而且
的清单，以及在博客上看一些使用示例。
择是PostgreSQL。去读一下它的文档，看看它提供的数据类型、操作符、函数、特性和扩展
果需要的只是存储后端的话，也许应该考虑避免用RDBMS。
不光是结构化查询语言，还包括你已经掌握并期望包含的很多其他基础的东西。
的数据想要什么样的结果。
的工作都由 RDBMS 来完成，以便你可以专注于声明式的查询，即只需要描述对于你所拥有
182
作为一个直接结果，很容易明白ORM能完成的最好的工作就是所谓的CRUD应用，即
即使对于PostgreSQL 这样种已经实现了强静态类型的 RDBMS,关系定义也是动态建立
由于ORM代表Object Relational Mapper（对象关系映射器），其思想是你能够处理一对
然后考虑一下在你的开发中将 PostgreSQL 作为一个工具来利用，并将其包含在应用程
但是大多数情况下，你真正需要的是一个完全成熟的RDBMS。这种情况下，最好的选
我的建议是开发人员要记住存储后端和RDBMS间的区别。它们是非常不同的服务，如
这也是在这里要对 NoSQL 多加注意的原因，因为大部分这些新兴的产品实际上移除的
用或不用ORM的最好方式各是什么？
第12章RDBMS和ORM
本电子书仅限学习交流使用，请勿用于商业用途
---
## Page 190
熊猫爱中国www.xiongmaoi.com
熊猫爱中
html）方案的Common Lisp 库。当然，Lisp 借助其本身能够很容易地开发可组合的组件。
题提出了几乎类似的抽象，它是一个结合了S-SQL（http://marijnhaverbeke.nl/postmodern/s-sql.
组合SQL查询的方式。
且动态地添加一些连接（join）到查询中，以便可以有选择地获取更细节的数据等。
器的 API让其变得更简单。
使你没有给出足够的信息也能精准地给出你想要的数据集。
com/40.html)。
的更多细节，可以读一下 James Hague的 On Being Suficiently Smart（htp://prog21.dadgum.
射到一个类。因此可能需要为每个运行的查询建立一个新类。
做法是使用ORM构造已定义的表和其他模型类（或其他辅助模块）之间的关系映射。
上自动计算的值。但你的ORM能够意识到这些吗？什么语法可以从中受益呢？通常情况下，
认值（对于代理键通常是序列号）和其他在RDBMS（一般通过BEFORE触发器）
是，比如 PostgreSQL 实现了 RETURNING子句，允许返回给客户端任何刚编辑过的数据，如默
RDBMS（如PostgreSQL）时所有这些命令都接受连接（join）和子查询。而且仍需提及的
要显示的具体列，并避免使用会自动计算字段列表的简单抽象的魔术方法。
扩展性的第一杀手。
一个关系或者是一个表（调用一个返回集合的函数的结果），或者是任意查询的结果。常见的
我现在的想法是，你真正想要的工具可能并不是ORM，而是一种通过编程接口更好地
有时候SQL 确实会变得相当复杂。但是你不太可能通过一个自己无法控制的 SQL 生成
充分智能编译器（Sufficiently Smart Compiler）的传说同样适用于ORM。关于这个传说
如果从总体上考虑 SQL的整个语义的话，那么关系映射实际上应该能够将任意查询映
CRUD 查询的其余部分是简单的 INSERT、UPDATE 和 DELETE。首先，当使用高级的
即使在ORM能够只获取你请求的数据，接下来你也必须以某种方式管理在每种情况下
将 SQL查询构造为字符串会难以扩展。你会想要组合几个限制条件（WHERE子句）并
在讨论了所有典型的ORM之后，也需要说一下其他的选择。
所以，任何从RDBMS 中提取但最终没有使用的列，都是对宝贵资源的严重浪费，是可
本电子书仅限学习交流使用，请勿用于商业用途
12.2DimitriFontaine访谈
183
---
## Page 191
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
ORM使用的代码移出代码库。
184
·上市时机。当真的需要尽可能快地占领市场份额的时候，唯一的办法就是尽快地发
实际上有两种场景可以放心地使用ORM，只要你愿意接受下面的条件：你需要尽快将
下面是我作为开发人员选择PostgreSQL 的主要原因。
对于Python开发，选用PostgreSQL与选用其他数据库相比有什么优缺点吗？
）计划器和优化器：你得尝试推进你所知道的关于它们的限制，以便了解它们到底有
·数据类型、函数、操作符、数组和范围：PostgreSQL 有着非常丰富的数据类型集合，
）数据完整性和持久性：任何发送给PostgreSQL的数据都在其定义中都是安全（存储）
·CRUD 应用。真正要处理的只是一次编辑一个元组，并且不关心性能问题。例如，
事务性的DDL：
多复杂和强大。我已经多次看到只为提升几毫秒而完善成的两三页长的查询。
题以给出最好的可能答案。邮件列表仍然是与社区沟通的最好方式。参考PostgreSQL
基本的管理应用界面。
布应用和想法的第一个版本。如果你的团队比手写 SQL 更擅长 ORM的使用的话，
第12章RDBMS和ORM
你的数据库打开 psql shell 并输入 BEGIN；DROP TABLE foo；ROLLBACK;
regexp_split_to_array 和 regexp_split_to_table?
查询操作它们。例如，你知道正则表达式操作符~吗？还有函数
用数组或JSON数据类型进行反规范化，而且仍然可以通过包含连接（join）的高级
它们非常有用，并且拥有大量用于处理这些数据类型的操作符和函数。甚至可以使
的并能在其后再次获取。
邮件列表（http://www.postgresql.org/list/）以便了解更多细节。
成功到花一些重构的钱去删除那些对ORM的依赖，对吧？
做了一些糟糕的代码设计决定。但如果你到了这个地步的话，那么你应该已经足够
题之一就是你的ORM生成的糟糕的查询，并且ORM的使用已经把你逼到了死角并
那就全力去做。但是你必须意识到，一旦你的应用取得成功，要解决的可扩展性问
（将其中的foo替换成你本地实例中存在的表的名字)。太妙了，对吗？
几乎可以回滚（ROLLBACK）任何命令。现在就试试看，只需要对
本电子书仅限学习交流使用，请勿用于商业用途
---
## Page 192
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
·外部数据封装器：外部数据封装器是实现了SQL/MED 标准（Management ofExternal
●扩展：这些扩展包括 hstore，一个包含灵活索引的完全成熟的键值存储；Itree，用于
·PL/Python（以及其他语言，如C、SQL、Javascript或Lua）：你可以在服务器上运行
·窗口函数CREATEAGGREGATE：如果你不知道窗口函数是什么，那么去读一下Post-
·INSERTINTO..．RETURNING：可以从 INSERT语句中直接返回任何东西，如
WITH (DELETE FROM ... RETURNING *) INSERT INTO ... SELECT: Postgre-
Data）的一组完整扩展。其思想是将一个连接驱动嵌入PostgreSQL服务器中，并将
其他扩展。
引和非锚定LIKE 查询；ip4r，用于在一定范围内快速搜索一个IP地址，以及更多
pgxn.org/)。
多谢PostgreSQL的扩展系统。可以看看扩展支持模块（Additional Supplied Modules,
类型（ranges、geometry 等）和容器数据类型。许多场景已经默认支持了，这要
就会直接匹配索引的内容。PostgreSQL对非排序数据类型实现了索引框架，如二维
含了调用该函数的WHERE子句的查询时，它只从查询中以该数据被调用一次，然后
中创建Python函数去处理你的数据，并索引函数调用的结果？以便当你发出一个包
查询中将其发回去执行下一级的JOIN。不管怎样，你可以完全在服务上执行。
你自己的代码，就在数据所在的位置，以便你无需通过网络获取数据进行处理再在
聚合。
已经存在的聚合（aggregate）作为窗口函数，而且允许你在 SQL 中动态地定义新的
greSQL手册或者我博客中的UnderstandingWindowFunctions(http://tapoueh.org/blog/
而且幸好它支持RETURNING子句，因此它还支持DML命令。那简直太牛了，是吧？
SQL 在查询中支持常用表表达式（Common Table Expression），被称为 WITH 查询，
用同一个协议和工具就得到了结果。
一个递增序列的id值。与执行一次 SELECT语句相比，你省去了一次网络通信并且
本电子书仅限学习交流使用，请勿用于商业用途
12.2Dimitri Fontaine 访谈
185
---
## Page 193
熊猫爱中国www.xiongmaoi.com
熊猫爱中国
186
·COPY 流协议：PostgreSQL实现了一个流协议，并用它实现了全集成的复制方案。现
·LISTEN/NOTIFY：PostgreSQL 实现了一个名为LISTEN/NOTIFY 的异步服务器到
第12章RDBMS和ORM
update、delete）中对这些表进行连接，并且批处理操作通常会更快。
语句连接这张临时表。PostgreSQL 知道如何在所有数据的修改语句（insert、
理十几行的时候，有时会在这之前针对一个临时表使用COPY，然后执行一个单独的
在，可以很容易地在应用程序中使用它，并能带来极大的性能提升。在需要一次处
后通知才会发生。
对象被删除或更新时通知你的缓存应用相应的对象ID。当然，只有在事务成功提交
动推送的消息，例如更新某些数据时。NOTIFY命令接收一个有效载荷以便可以在
客户端的协议。当有些有意思的事情发生时，应用程序可能会收到来自服务器的主
通过其他技术维护的数据。
高效的连接（joining）能力。你甚至可以使用 PostgreSQL 的高级 SQL 功能操作那些
了一个 API，允许他们实现对远程数据的读写，以及 where子句的叠加，以获得更
本电子书仅限学习交流使用，请勿用于商业用途