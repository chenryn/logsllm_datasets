I believe this is a bug, or if it isn't, I couldn't find anything in the
documentation that says it should act this way.
It seems like random.choice is ignoring the masked values. As you can see in
the code below, the output of random.choice gives values that have been
previously masked on the array.
### Reproducing code example:
    import numpy as np
    x = np.linspace(0,100,100)
    xmask = np.ma.masked_where(x>75,x)
    print(np.nanmax(xmask))
    random_choice = np.random.choice(xmask,50)
    print(np.nanmax(random_choice))
Output:
> 74.74747474747475  
>  96.96969696969697
I've tried this several times, and the maximum value of random_choice always
seems to be between 90 and 100.
### Numpy/Python version information:
1.18.1 3.7.6 (default, Jan 8 2020, 19:59:22)  
[GCC 7.3.0]