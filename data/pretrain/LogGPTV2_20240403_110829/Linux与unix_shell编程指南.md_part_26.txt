可以用一个变量保存每行数据，当不再有读取数据时条件为真。 w h i l e循环使用输入重定
向以保证从文件中读取数据。注意整行数据被设置为单变量 $ L I N E .。
18.7.4 使用IFS读文件
输出时要去除冒号域分隔符，可使用变量 I F S。在改变它之前保存I F S的当前设置。然后
在脚本执行完后恢复此设置。使用 I F S可以将域分隔符改为冒号而不是空格或 t a b键。这里有3
个域需要加域分隔，即N A M E、D E P T和I D。
为使输出看起来更清晰，对e c h o命令使用t a b键将域分隔得更开一些，脚本如下：
加入java编程群：524621833
190
第四部分 基础s h e l l编程
下载
脚本运行，输出果然清晰多了。
18.7.5 带有测试条件的文件处理
大部分w h i l e循环里都带有一些测试语句，以决定下一步的动作。
这里从人员文件中读取数据，打印所有细节到一个保留文件中，直至发现 James Lenod，
脚本退出。测试前反馈的信息要确保“James Lenod”加入保留文件中。
注意，所有变量在脚本顶端被设置完毕。这样当不得不对变量进行改动时可以节省时间
和输入。所有编辑都放在脚本顶端，而不是混于整个脚本间。
还可以采取进一步动作，列出多少个雇员属于同一部门。这里保持同样的读方式。假定
每个域都有一个变量名，然后在c a s e语句里用e x p r增加每行匹配脚本。任何发现的未知部门知
加入java编程群：524621833
191
第18章 控制流结构
下载
识反馈到标准错误中，如果一个无效部门出现，没有必要退出。
运行脚本，输出：
18.7.6 扫描文件行来进行数目统计
一个常用的任务是读一个文件，统计包含某些数值列的数值总和。下面的文件包含有部
门S TAT和G I F T所卖的商品数量。
现在的任务是要统计部门 G I F T所卖的各种商品数量。使用 e x p r保存统计和，看下面的
e x p r语句。变量L O O P和TO TA L首先在循环外初始化为0，循环开始后，I T E M S加入TO TA L，
第一次循环只包含第一种商品，但随着过程继续， I T E M S逐渐加入TO TA L。
加入java编程群：524621833
192
第四部分 基础s h e l l编程
下载
下面的e x p r语句不断增加计数。
使用e x p r语句时容易犯的一个错误是开始忘记初始化变量。
如果真的忘了初始化，屏幕上将布满e x p r错误。
如果愿意，可以在循环内初始化循环变量。
上面一行如果变量TO TA L未赋值，将其初始化为0。这是在e x p r里初始化变量的第一个例
子。另外在循环外要打印出最后总数。
运行脚本，得到：
加入java编程群：524621833
193
第18章 控制流结构
下载
18.7.7 每次读一对记录
有时可能希望每次处理两个记录，也许可从记录中进行不同域的比较。每次读两个记录
很容易，就是要在第一个w h i l e语句之后将第二个读语句放在其后。使用这项技术时，不要忘
了不断进行检查，因为它实际上读了大量的记录。
每次读两个记录，下面的例子对记录并不做实际测试。
脚本如下：
首先来检查确实读了很多记录，可以使用w c命令：
共有6个记录，观察其输出：
18.7.8 忽略#字符
读文本文件时，可能要忽略或丢弃遇到的注释行，下面是一个典型的例子。
假定要使用一般的w h i l e循环读一个配置文件，可拣选每一行，大部分都是实际操作语句。
有时必须忽略以一定字符开头的行，这时需要用 c a s e语句，因为#是一个特殊字符，最好首先
加入java编程群：524621833
194
第四部分 基础s h e l l编程
下载
用反斜线屏蔽其特殊意义，在#符号后放一个星号*，指定*后可包含任意字符。
配置文件如下：
忽略#符号的实现脚本如下：
运行得：
18.7.9 处理格式化报表
读报表文件时，一个常用任务是将不想要的行剔除。以下是库存商品水平列表，我们感
兴趣的是那些包含商品记录当前水平的列
我们的任务是读取其中取值，决定哪些商品应重排。如果重排，重排水平应为现在商品
加入java编程群：524621833
195
第18章 控制流结构
下载
的两倍。输出应打印需要重排的每种商品数量及重排总数。
我们已经知道可以忽略以某些字符开始的行，因此这里没有问题。首先读文件，忽略所
有注释行和以‘I T E M’开始的标注行。读取文件至一临时工作文件中，为确保不存在空行，
用s e d删除空行，需要真正做的是过滤文本文件。脚本如下：
输出为：
现在要在另一个w h i l e循环中读取临时工作文件，使用e x p r对数字进行数值运算。
加入java编程群：524621833
196
第四部分 基础s h e l l编程
下载
以下为依据报表文件运行所得输出结果。
将两段脚本结合在一起很容易。实际上这本来是一个脚本，为讲解方便，才将其分成两
个。
18.7.10 while循环和文件描述符
第5章查看文件描述符时，提到有必要用w h i l e循环将数据读入一个文件。使用文件描述符
3和4，下面的脚本进行文件m y f i l e . t x t到m y f i l e . b a k的备份。注意，脚本开始测试文件是否存在，
如果不存在或没有数据，脚本立即终止。还有w h i l e循环用到了空命令（：），这是一个死循环，
因为n u l l永远返回真。尝试读至文件结尾将返回错误，那时脚本也终止执行。
加入java编程群：524621833
197
第18章 控制流结构
下载
18.8 使用break和continue控制循环
有时需要基于某些准则退出循环或跳过循环步。s h e l l提供两个命令实现此功能。
• break。
• continue。
18.8.1 break
b r e a k命令允许跳出循环。b r e a k通常在进行一些处理后退出循环或 c a s e语句。如果是在一
个嵌入循环里，可以指定跳出的循环个数。例如如果在两层循环内，用 break 2刚好跳出整个
循环。
18.8.2 跳出case语句
下面的例子中，脚本进入死循环直至用户输入数字大于 5。要跳出这个循环，返回到s h e l l
提示符下，b r e a k使用脚本如下：
18.8.3 continue
c o n t i n u e命令类似于b r e a k命令，只有一点重要差别，它不会跳出循环，只是跳过这个循
环步。
加入java编程群：524621833
198
第四部分 基础s h e l l编程
下载
18.8.4 浏览文件行
下面是一个前面用过的人人文件列表，但是现在加入了一些头信息。
假定现在需要处理此文件，看过文件之后知道头两行并不包含个人信息，因此需要跳过
这两行。
也不需要处理雇员Peter James，这个人已经离开公司，但没有从人员文件中删除。
对于头信息。只需简单计算所读行数，当行数大于 2时开始处理，如果处理人员名字为
Peter James，也将跳过此记录。脚本如下：
运行上面脚本，得出：
加入java编程群：524621833
199
第18章 控制流结构
下载
18.9 菜单
创建菜单时，在w h i l e循环里n u l l空命令很合适。h i l e加空命令n u l l意即无限循环，这正是
一个菜单所具有的特性。当然除非用户选择退出或是一个有效选项。
创建菜单只需用w h i l e循环和c a s e语句捕获用户输入的所有模式。如果输入无效，则报警，
反馈错误信息，然后继续执行循环直到用户完成处理过程，选择退出选项。
菜单界面应是友好的，不应该让用户去猜做什么，主屏幕也应该带有主机名和日期，并
伴随有运行此菜单的用户名。由于测试原因，所有选项使用的是系统命令。
下面是即将显示的菜单。
首先，使用命令替换设置日期，主机名和用户。日期格式为 / D D / M M / Y Y Y Y，参数格式
为：
$ date +%d/%m/%y
3 2 / 0 5 / 1 9 9 9
对于主机名，使用h o s t n a m e - s选项只抽取主机名部分。主机名有时也包括了完全确认的域
名。当然如果要在屏幕上显示这些，那就更好了。
可以给变量一个更有意义的名字：
对于w h i l e循环，只需将空命令直接放在w h i l e后，即为无限循环，格式为：
while ：
d o
命令
d o n e
要注意实际屏幕显示，不要浪费时间使用大量的 e c h o语句或不断地调整它们。这里使用
本地文档，在分界符后面接受输入，直至分界符被再次定位。格式为：
此技术用于菜单屏幕，也将用于帮助屏幕。帮助屏幕不像这样复杂。
用c a s e语句控制用户选择。菜单选择有：
加入java编程群：524621833
200
第四部分 基础s h e l l编程
下载
c a s e语句应控制所有这些模式，不要忘了将大写与小写模式并列在一起，因为有时用户会
关闭或打开CAPS LOCK键。因为菜单脚本不断循环，所以应该允许用户退出，如果用户选择
Q或q键，脚本应退出，此时脚本带有0值。
如果用户选择无效，应发出警报并带有警告信息。虽然本章开始说过从现在开始一直使
用L I N U X或BSD echo语句版本，这里必须使用系统V版本发出警报：
echo "\007 the bell ring"
用一个简单的e c h o和读语句锁屏直到用户点击回车键，这样任何信息或命令输出将可视。
也需要清屏，为此可使用t p u t命令（后面讨论t p u t），如果不这样做，使用c l e a r命令也可以。
到此所有功能已经具备了，脚本如下：
加入java编程群：524621833
201
第18章 控制流结构
下载
18.10 小结
在任何合理脚本的核心部分都有某种流控制，如果要求脚本具有智能性，必须能够进行
判断和选择。
本章讲述了怎样使用控制流写一段优美的脚本，而不只是完成基本功能。这里也学到了
怎样处理列表和循环直至条件为真或为假。
加入java编程群：524621833
下载
第19章 shell 函 数
本书目前为止所有脚本都是从头到尾执行。这样做很好，但你也许已经注意到有些脚本
段间互相重复。
s h e l l允许将一组命令集或语句形成一个可用块，这些块称为 s h e l l函数。
本章内容有：
• 定义函数。
• 在脚本中使用函数。
• 在函数文件中使用函数。
• 函数举例。
函数由两部分组成：