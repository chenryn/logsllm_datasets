, sr
−1
(cid:48)
(cid:48)
κ = α
βmj
j gr
2
and
(cid:48)
ν = (h
)r
q(cid:89)j=1
Output (Θ = (κ, ν, σ(cid:48), πv), φ(cid:48)), where πv is:
πv = NIZK{(m1, . . . , mq, r) : κ = α
q(cid:89)j=1
)r ∧ φ(m1, . . . , mq) = 1}
O VerifyCred(vk, Θ, φ(cid:48)) → (true/f alse): Parse
Θ = (κ, ν, σ(cid:48), πv) and σ(cid:48) = (h(cid:48), s(cid:48)); verify πv using
vk and φ(cid:48); Output true if the proof veriﬁes, h(cid:48)
(cid:54)= 1 and
e(h(cid:48), κ) = e(s(cid:48)ν, g2); otherwise output f alse.
(cid:48)
∧ ν = (h
βmj
j gr
2
APPENDIX C
ETHEREUM TUMBLER
We extend the example of the tumbler application described
in Section V-A to the Ethereum version of the Coconut library,
with a few modiﬁcations to reduce the gas costs.
Instead of having v (the number of coins) as an attribute,
which would increase the number of elliptic curve multipica-
tions required to verify the credentials, we allow for a ﬁxed
number of instances of Coconut
to be setup for different