traditional
to modern. Another similar work by Lerner et
al. [38] proposes attacks that rewrite pages on the Wayback
Machine, a major web archive. The archive rewrites URLs in
archived content to make them refer to archived versions of
the same domain name. When a URL is dynamically generated
by JavaScript in , the URL rewriting fails, and a
browser makes requests to the live web. If the response of
the request from the live web contains malicious JavaScript,
the whole archival page is compromised by that JavaScript
owning to the ineffectiveness of the SOP. This attack requires
a target website to refer to a third-party URL with the expired
domain name that the attacker can obtain. Our attacks are more
feasible; they are triggered once a victim user visits rehosted
malicious pages.
B. Abusable browser resources
Browser resources provided after HTML5 such as service
worker and AppCache, as well as traditional browser resources
such as cookies, can be abused for various attacks to accom-
plish malicious purposes.
Service Worker. The Progressive Web App (PWA) is designed
to provide native app-like rich browsing experiences even when
a browser is ofﬂine. The service worker is a key technical
component of the PWA. It is an event-driven worker script
implemented in JavaScript [23] and has the ability to intercept
network requests from the corresponding website. There has
been concerns [13], [66] that this feature could be abused
in web hosting services that share a single domain name for
different users. However, the possibility of abusing a service
worker has been overlooked for years in web rehosting, as
evidenced by the fact that our attack works even on major
services provided by the world’s top companies. We have
demonstrated that an attacker is able to deploy malicious
content and scripts on web rehosting services by exploiting
the rehosting rules, just like deploying them on web hosting
services.
Recent studies have suggested other advanced attack sce-
narios. Lee et al. demonstrated cryptocurrency mining in the
background that uses malicious service workers, and mined
Monero coins through veriﬁed 225K transactions in a day [36].
Moreover, Papadopoulos et al. developed a monitoring frame-
work to allow malicious service workers to abuse browser
resources and found the following harmful operations: DDoS
attacks, distributed password cracking, malicious data hosting,
proxies of a hidden network, and cryptocurrency mining [47].
Application Cache. AppCache, one of the features of HTML5,
allows web applications to cache content in the storage of
a web browser to enable ofﬂine access. As in the case
of service workers, AppCache has also been known to be
exploitable on web hosting services that share a single domain
for different users [42]. In addition, Lee et al. demonstrated a
timing side-channel attack using AppCache that allows a third-
party attacker to identify a cross-origin resource status (e.g.,
login status of a victim browser) [37]. Goethem et al. also
demonstrated that an attacker can reveal personally identiﬁable
information of a target (e.g., social accounts) by inspecting the
response time and the size of the cross-origin resource stored
in AppCache [18], [64].
Password Manager. Password managers provide helpful func-
tionalities for users: generating unique and strong passwords,
storing passwords securely, and using passwords easily (e.g.,
autoﬁll). Silver et al. examined autoﬁll policies in browser
built-in password managers and found that several autoﬁll
policies enable an attacker on a malicious website to extract
passwords from the user’s password manager without any user
interaction [54]. Stock and Johns mentioned the risk of XSS-
based credential stealing from autoﬁlled login forms [59].
Our credential theft (Section III-B3) attack also exploits this
vulnerable autoﬁll behavior of password managers.
13
Cookie. It is well known that HTTP cookies can be stolen
by cross-site scripting and eavesdropping. If the target user’s
cookie is stolen, an attacker with the stolen cookie will gain
access to personal information or account functionalities of
the target on the corresponding website. HttpOnly is an
additional attribute of cookies that prevents attackers from
remotely obtaining cookies through malicious scripts (i.e.,
XSS). HTTPS-enabled websites can protect cookies against
eavesdropping. Moreover, the HTTP Strict Transport Secu-
rity mechanism (HSTS) [27] is an HTTP header option
(Strict-Transport-Security) that enables websites
to enforce browsers to only use communication over HTTPS.
Although many studies in recent years revealed partially de-
ployed HttpOnly, HSTS, and HTTPS on websites, which
cannot ensure a cookie’s integrity, were running [34], [57],
[71], both academic and industrial efforts promote and increase
the adoption of above technologies. Unfortunately, regardless
of whether the above technologies are deployed at websites, an
attacker is able to successfully perform our session hijacking
and injection (Section III-B5) attack by leveraging the property
of the web proxy (i.e., cookie relaying).
VIII. CONCLUSION
In this work, we explored the security ﬂaws of web
rehosting services. Their common characteristic is to offer the
service using a single origin to unify many different origins.
This “melting pot of origins” situation could violate the SOP
if not carefully handled. Based on the intrinsic vulnerability
of these services, we derived ﬁve attacks that target users
who use web rehosting services. It is noteworthy that these
ﬁve attacks exploit several browser resources, such as, service
workers, AppCache, browser permissions, password manager,
localStorage, and cookies. We argue that these modern and
traditional resources enable the attacker to track both past and
future activity of the victim. Through the extensive analyses
of 21 web rehosting services, we demonstrated that the ﬁve
attacks are feasible and thus need to be prevented.
Web rehosting, which originally aims to enhance the open-
ness of web access, paradoxically deviates from the end-to-end
integrity and gives the opportunity to compromise the commu-
nication to a third-party attacker. We are now in the process of
helping vulnerability coordinators and web rehosting providers
to deploy countermeasures. Although we revealed the ﬂaws of
web rehosting, further unexpected ﬂaws in the web ecosystem
may also exist and will be expanded by the evolution of web
features like HTML5 and progressive web apps. Identifying
these ﬂaws and developing countermeasures are required to be
studied in the security research community. We hope that our
work fosters future work on more secure solutions to ensure
web security and the openness of web access.
REFERENCES
[1] L. A. Adamic and B. A. Huberman, “Zipf’s law and the internet.”
Glottometrics, vol. 3, no. 1, pp. 143–150, 2002.
[2] Alexa, “Keyword Research, Competitive Analysis, & Website Ranking,”
https://www.alexa.com.
[3] Y. A. AlNoamany, M. C. Weigle, and M. L. Nelson, “Access patterns
for robots and humans in web archives,” in Proceedings of the 13th
ACM/IEEE-CS Joint Conference on Digital Libraries, ser. JCDL ’13,
2013, pp. 339–348.
[4] Baidu, “Baidu Translator,” https://fanyi.baidu.com/.
[5] D. Bamman, B. O’Connor, and N. Smith, “Censorship and deletion
practices in chinese social media,” First Monday, vol. 17, no. 3, 2012.
[6] Brave, “Hecure, Fast & Private Web Browser with Adblocker — Brave
Browser,” https://brave.com.
[7] Bugzilla, “Passwords should be stored for host+path and not just host,”
https://bugzilla.mozilla.org/show bug.cgi?id=263387.
[8] A. Chaabane, T. Chen, M. Cunche, E. De Cristofaro, A. Friedman, and
M. A. Kaafar, “Censorship in the wild: Analyzing internet ﬁltering in
syria,” in Proceedings of the 2014 Conference on Internet Measurement
Conference. ACM, 2014, pp. 285–298.
[9] T. Chung, D. Choffnes, and A. Mislove, “Tunneling for transparency:
A large-scale analysis of end-to-end violations in the internet,” in
Proceedings of the 2016 Internet Measurement Conference. ACM,
2016, pp. 199–213.
[10] A. Clauset, C. R. Shalizi, and M. E. Newman, “Power-law distributions
in empirical data,” SIAM review, vol. 51, no. 4, pp. 661–703, 2009.
[11] DashLane, “Start dashing online,” https://www.dashlane.com/.
[12]
J. el van Bergen, “What
google.com/web/fundamentals/security/prevent-mixed-content/
what-is-mixed-content.
Is Mixed Content?” https://developers.
[13] E.
Ellingsen,
ServiceWorker.
“ServiceWorker
is
dangerous,”
https://alf.nu/
[14] FilterBypass, “FilterBypass - Your Anonymous, Free Online Web &
Youtube Proxy,” https://www.ﬁlterbypass.me.
[15] FreezePage, “FreezePage,” http://www.freezepage.com.
[16] GenMirror, “Unblock YouTube Proxy - GenMirror free SSL Web
Proxy,” https://www.genmirror.com.
[17] W. Gillani, “Pakistan: Court Blocks Facebook,” https://www.nytimes.
com/2010/05/20/world/asia/20briefs-Pakistan.html, 2010.
[18] T. V. Goethem, M. Vanhoef, F. Piessens, and W. Joosen, “Request and
conquer: Exposing cross-origin resource size,” in 25th USENIX Security
Symposium (USENIX Security 16). Austin, TX: USENIX Association,
Aug. 2016, pp. 447–462. [Online]. Available: https://www.usenix.org/
conference/usenixsecurity16/technical-sessions/presentation/goethem
[19] Google, “Google Cache,” http://webcache.googleusercontent.com.
[20] ——, “Google Translate,” https://translate.google.com/.
[21] ——, “Tag Manager,” https://tagmanager.google.com.
[22] ——, “Ten years of Google Translate,” https://www.blog.google/
products/translate/ten-years-of-google-translate/, 2016.
[23] W. Groups,
ServiceWorker/.
“Service Workers Nightly,”
https://w3c.github.io/
[24] HIDE me, “The Fastest Free Proxy,” https://hide.me/en/proxy.
[25] Hide My Ass!, “Free Web Proxy,” https://www.hidemyass.com/en-us/
proxy.
[27]
[26] Hidester, “Hidester Proxy - Fast & Free Anonymous Web Proxy,” https:
//hidester.com/proxy/.
J. Hodges, C. Jackson, and A. Barth, “HTTP Strict Transport
Security (HSTS),” RFC 6797, Nov. 2012.
[Online]. Available:
https://rfc-editor.org/rfc/rfc6797.txt
[28] E. Homakov, “Cookie Bomb or
let’s break the Internet,” https:
//homakov.blogspot.com/2014/01/cookie-bomb-or-lets-break-internet.
html.
[29] M.
[30]
[31]
[32]
IMC ’16.
Ikram, N. Vallina-Rodriguez, S. Seneviratne, M. A. Kaafar,
the privacy and security risks
the
New
[Online]. Available:
and V. Paxson, “An analysis of
of android vpn permission-enabled apps,” in Proceedings of
2016 Internet Measurement Conference,
ser.
York, NY, USA: ACM, 2016, pp. 349–364.
http://doi.acm.org/10.1145/2987443.2987471
Internet Archive, “Internet Archive: Wayback Machine,” https://archive.
org/web/.
ISE,
Management,”
password-manager-hacking/.
JPCERT Coordination Center, “JPCERT Coordination Center,” https:
//www.jpcert.or.jp/.
Secrets
https://www.securityevaluators.com/casestudies/
“Password Managers: Under
the Hood
of
[33] M. T. Khan, J. DeBlasio, G. M. Voelker, A. C. Snoeren, C. Kanich, and
N. Vallina-Rodriguez, “An empirical analysis of the commercial vpn
14
[57] S. Sivakorn, I. Polakis, and A. D. Keromytis, “The Cracked Cookie Jar:
HTTP Cookie Hijacking and the Exposure of Private Information,” in
IEEE Symposium on Security and Privacy (SP), 2016.
[58] M. Steffens, C. Rossow, M. Johns, and B. Stock, “Don’t Trust The
Locals: Investigating the Prevalence of Persistent Client-Side Cross-Site
Scripting in the Wild,” in the Network and Distributed System Security
Symposium (NDSS), 2019.
[59] B. Stock and M. Johns, “Protecting Users Against XSS-based Password
Manager Abuse,” in AsiaCCS 2014, 2014.
[60] A. Swartz and V. Grifﬁth, “Tor2web: Browse the Tor Onion Services,”
https://www.tor2web.orgm.
[61] Toolur, “Free Web Proxy,” https://proxy.toolur.com.
[62] G. Tsirantonakis, P. Ilia, S. Ioannidis, E. Athanasopoulos, and M. Poly-
chronakis, “A Large-scale Analysis of Content Modiﬁcation by Open
HTTP Proxies,” in the Network and Distributed System Security Sym-
posium (NDSS), 2018.
[63] UnblockVideos, “Unblock YouTube Videos - SSL Encrypted Video
Proxy 2018,” https://unblockvideos.com.
[64] T. Van Goethem, W. Joosen, and N. Nikiforakis, “The clock is still
ticking: Timing attacks in the modern web,” in Proceedings of the 22Nd
ACM SIGSAC Conference on Computer and Communications Security,
ser. CCS ’15. New York, NY, USA: ACM, 2015, pp. 1382–1393.
[Online]. Available: http://doi.acm.org/10.1145/2810103.2813632
[65] W3C, “Permissions W3C Working Draft,” https://www.w3.org/TR/
permissions/, 2017.
[66] w3c/ServiceWorker, “Header for dissalowing SW registration (and im-
plicitly removing SWs)?” https://github.com/w3c/ServiceWorker/issues/
224.
[67] Web Hypertext Application Technology Working Group, “HTML Stan-
dard,” https://html.spec.whatwg.org/multipage/ofﬂine.html.
[68] Weblio, “Weblio Translator,” https://translate.weblio.jp.
[69] P. Winter, R. K¨ower, M. Mulazzani, M. Huber, S. Schrittwieser, S. Lind-
skog, and E. Weippl, “Spoiled onions: Exposing malicious tor exit
relays,” in International Symposium on Privacy Enhancing Technologies
Symposium (PETS), 07 2014.
[70] Yandex, “Yandex.Translate,” https://translate.yandex.com/.
[71] X. Zheng, J. Jiang, J. Liang, H. Duan, S. Chen, T. Wan, and N. Weaver,
“Cookies Lack Integrity: Real-World Implications,” in 24th USENIX
Security Symposium (USENIX Security 15), 2015.
[72] Zhone-H, “Zone-H.org - Unrestricted information,” http://www.zone-h.
org/archive/.
ecosystem,” in Proceedings of the Internet Measurement Conference
2018, ser. IMC ’18. New York, NY, USA: ACM, 2018, pp. 443–456.
[Online]. Available: http://doi.acm.org/10.1145/3278532.3278570
[34] M. Kranch and J. Bonneau, “Upgrading HTTPS in Mid-Air: An
Empirical Study of Strict Transport Security and Key Pinning,” in the
Network and Distributed System Security Symposium (NDSS), 2015.
[35] LastPass, “#1 Password Manager & Vault App, Enterprise SSO &
MFA,” https://www.lastpass.com/.
J. Lee, H. Kim, J. Park, I. Shin, and S. Son, “Pride and prejudice
in progressive web apps: Abusing native app-like features in web
applications,” in Proceedings of the 2018 ACM SIGSAC Conference
on Computer and Communications Security, ser. CCS ’18. New
York, NY, USA: ACM, 2018, pp. 1731–1746. [Online]. Available:
http://doi.acm.org/10.1145/3243734.3243867
[36]
[37] S. Lee, H. Kim, and J. Kim, “Identifying Cross-origin Resource Status
Using Application Cache,” in the Network and Distributed System
Security Symposium (NDSS), 2015.
[38] A. Lerner, T. Kohno, and F. Roesner, “Rewriting History: Changing the
Archived Web from the Present,” in CCS, 2017.
[39] A. Mani, T. Vaidya, D. Dworken, and M. Sherr, “An extensive
evaluation of the internet’s open proxies,” in Proceedings of the 34th
Annual Computer Security Applications Conference, ser. ACSAC ’18.
New York, NY, USA: ACM, 2018, pp. 252–265. [Online]. Available:
http://doi.acm.org/10.1145/3274694.3274711
[40] D. Martin and A. Schulman, “Deanonymizing Users of the SafeWeb
Anonymizing Service,” in 11th USENIX Security Symposium (USENIX
Security 02), 2002.
“Bing Microsoft Translator,”
https://www.bing.com/
[41] Microsoft,
translator.
[42] Monorail,
“Security: AppCache
same-origin
shared hosting,” https://bugs.chromium.org/p/chromium/issues/detail?
id=367812.
allows MITM of
[43] Moz, “SEO Software, Tools & Resources for Smarter Marketing,” https:
//moz.com.
[44] Mozilla, “HTTP cookies,” https://developer.mozilla.org/en-US/docs/
Web/HTTP/Cookies.
[45] ——, “Same-origin policy,” https://developer.mozilla.org/en-US/docs/
Web/Security/Same-origin policy.
[46] ——, “Window.localStorage - Web APIs — MDN,” https://developer.
mozilla.org/en-US/docs/Web/API/Window/localStorage/.
[47] P. Papadopoulos, P. Ilia, and M. Polychronakis, “Master of Web Pup-
pets: Abusing Web Browsers for Persistent and Stealthy Computation,”
in the Network and Distributed System Security Symposium (NDSS),
2019.
[48] S. Pearman, J. Thomas, P. E. Naeini, H. Habib, L. Bauer, N. Christin,
L. F. Cranor, S. Egelman, and A. Forget, “Let’s go in for a closer
look: Observing passwords in their natural habitat,” in Proceedings of
the 2017 ACM SIGSAC Conference on Computer and Communications
Security, ser. CCS ’17. New York, NY, USA: ACM, 2017, pp. 295–
310. [Online]. Available: http://doi.acm.org/10.1145/3133956.3133973
[49] PROMT Service LLC, “PROMT - Free Online Translator and dictio-
nary,” https://www.online-translator.com.
[50] ProxFree, “ProxFree: Free Web Proxy — Surf Anonymously & Main-
tain Privacy,” https://www.proxfree.com.
[51] ProxySite, “Free Web Proxy Site,” https://www.proxysite.com.
[52] P. Puchkin, “raw.githack.com,” https://raw.githack.com.
[53]
J. H. Saltzer, D. P. Reed, and D. D. Clark, “End-to-end arguments in
system design,” ACM Trans. Comput. Syst., vol. 2, no. 4, pp. 277–288,
Nov. 1984.
[54] D. Silver, S. Jana, D. Boneh, E. Chen, and C. Jackson, “Password
managers: Attacks and defenses,” in 23rd USENIX Security Symposium
(USENIX Security 14).
San Diego, CA: USENIX Association,
Aug. 2014, pp. 449–464. [Online]. Available: https://www.usenix.org/
conference/usenixsecurity14/technical-sessions/presentation/silver
[55] SimilarWeb, “Website Trafﬁc Statistics & Market Intelligence,” https:
//www.similarweb.com.
[56] Sitenable Web Proxy, “Web Proxy to Bypass school, university and
ofﬁce ﬁrewalls. Facebook, Youtube, gmail unblocker,” https://sitenable.
com.
15