1831
---
## Page 1833
望看到你的测试和项目取得成功。不过，并非所有人都一定有这样
的想法。
一些利益相关者是中立的，例如，监管人和执法人一般更关心的是
确保你、项目组和该组织遵守法规。如果不遵守规则会带来消极的
结果，他们的态度很可能是，如20世纪70年代的电视连续剧中所
说，“如果还没本事，就别急着犯事。”在某些情况下，不遵守规则
很可能要犯事的，所以要明白你的义务，跟监管人或执法人发生冲
突可不是什么美好的经历。
此外，一些利益相关方可能怀有敌意，所幸这种情况很少见。在我
遇到这些罕见的利益相关者时，我称他们为反利益相关者。例如，
一个项目要取代原有的系统，需要涉及继续支持和维护遗留系统的
人。这些人可能认为，遗留系统运行得蛮好的，有劳费心。由于组
织要求他们参与新的项目，他们的确这样做了，但是消极怠工是家
常便饭。这些反利益相关者希望该项目全部失败，就算这失败是由
你的测试工作导致的，他们也毫不介意。导致项目的失败也不是一
件“美好”的经历。
走向测试之美的第一步，确定谁是你的测试利益相关者。如果你不
知道谁是利益相关者，有些人可能认为你实现了测试之美，但其他
人不会这么认为。在我们的咨询工作中，RBCS评审看到不少被忽视
的利益相关者对测试团队的工作不满的例子，已审慎考虑过测试的
利益相关者的客户有更大的几率实现测试之美，而忽视中立利益相
关者和反利益相关者的客户的测试经历则可能很痛苦而“丑陋”。
1832
---
## Page 1834
什么令人满意
每个利益相关者对测试都有一套目标和期望，并希望它们能有效、
高效和优雅地得以实现。这是什么意思呢？
有效，意味着满足这些目标和期望。遗憾的是，目标和期望并不总
是有着明确规定或阐述。因此，要保证有效，测试人员必须与利益
相关者群体合作，以确定其目标和期望。我们经常看到利益相关者
对测试人员有着厂泛的目标和期望，有时，他们的目标和期望是不
切实际的。要实现测试之美，你必须知道什么人从你这里期待什
么，并消除任何不切实际的期望。
高效，意味着以在一定资源投入下产出价值最大化的方式来满足目
标和期望。不同利益相关者眼中有不同的资源投入：这可能不包括
钱。例如，企业主管往往会认为公司专用飞机是一种有效的旅行方
式，因为能最大化他的高效能时间和方便程度；而出去度假的家庭
往往会选择偏僻的机场和迁回的路线，因为能最大限度地把钱花在
休假本身上。要实现测试之美，你必须在一定的资源投入下找到一
种方法，按照利益相关者的定义实现价值最大化。
优雅，意味着用一种优美的、执行有力的形式达到有效和高效。你
和你的工作应该在整个项目中整合紧密，让利益相关者深感惊艳。
对于利益相关方可预见到的形势，你不应该感到意外，或者甚至于
目瞪口呆。优雅的测试人员表现出海明威（ErnestHemingway）所谓
的"重压之下不失风度”，当然测试中少不了会涉及很多的压力。你
和你的工作应该显得专业，透着经验，凸现胜任能力。要实现测试
之美，你不能简单地创建一个肤浅的优雅外表，那是骗子做的把
势。与之相反，你要以长期的成果、行为和品行证明自已的优雅。
如我所说，有效、高效和优雅的角度是随着利益相关者不同而不同
的，它们还可以随着部门和组织的不同而不同。为了说明这一点，
下面的例子中，考虑刚才提到的两个利益相关群体。
对于一些客户，我们发现，测试人员往往以发现缺陷来衡量有效
性。缺陷越严重，测试人员越高兴，即使这些严重的缺陷在现实世
界的使用中是相当不可能出现的，与重要的用户使用场景也不相
关。测试人员找到的缺陷越多，他们觉得自已越高效，这种测试人
员认为下述情形是优雅的：构建一个相当恶毒的（有时甚至是折磨
1833
---
## Page 1835
性的）测试用例，能导致崩溃、应用程序异常终止、计算机死锁、
数据丢失，或类似的惊人严重的系统崩溃。测试主管和经理如果鼓
励这种注重缺陷的文化，往往使这种观点更加盛行。比较极端的
是，一些测试经理甚至根据发现严重缺陷的数量来支付奖金或衡量
测试人员的年度业绩。
开发经理和项目经理一般不欢迎这种单维度的视角。他们一点也不
认为痴迷于缺陷的测试是美丽的，恰恰相反，这是起反作用的，对
项目造成干扰和阻塞。有效意味着测试人员的工作侧重点是重要的
领域和典型的工作流程，并找出其中存在的任何缺陷。高效意味着
测试覆盖关键和典型的用户场景，在项目早期发现重要的缺陷。优
雅意味着要基于功能领域和关键质量风险明确地报告的结果，而不
是基于隐蔽的边边角角的情况。
不同的观点导致一定的冲突，这种冲突一般在执行测试的时候最为
激烈。在执行测试时，测试是产品发布的关键一环。在这个阶段，
发现的每个缺陷和失败的每个测试用例都意味着可能让项目延误发
布，人们变得容易发脾气，越来越缺乏耐心。因此，冲突会减少团
队凝聚力和高效性，该产品往往会延迟发布，或发布时有更多的缺
陷，或两者兼而有之。此外，测试团队和项目组其他人会有一些怨
恨和不满。通常情况下，组织过不了多久就得解散或重组测试团
队。
这种情况可一点也不“美”，是吧？如果在进入这种令人遗憾、不可
弥补的情况之前，我们能与同仁们对什么是有效、高效和优雅的测
试达成一致，会怎么样呢？假设我们能够实现设定在能力范围之内
的目标，那么我们的测试工作就能取得广泛的赞赏。啊，令利益相
关者满意了：这下美丽了！
走向测试之美的第二步，确定你的测试利益相关者有什么样的目标
和期望。如果你不知道他们的目标和期望，你只能凭运气实现“测试
之美”了，通常也只能令一小部分的利益相关者满意。当我和我的同
事评估测试团队时，我们看到很多没有实现目标和期望的例子，导
致人们对测试工作满意度较低。那些能够识别出利益相关者的目标
和期望的客户，往往测试得很漂亮。
什么美是外在美
1834
---
## Page 1836
世界级长跑运动员，如奥运会中的马拉松选手或铁人三项全能运动
员，有着坚实的外在美，有着形式切合功能的外观。他们精干，拥
有锻炼得很好的通常并不太多的肌肉。在比赛时，他们的脸上写着
坚毅，他们在整个赛事中承受着痛苦却表现出优雅。我们可以根据
比赛结果、排名和体育道德行为来衡量他们的有效、高效、优雅
这些表现为赢或输。
一个好的测试团队也表现出一种外在美，类似于长跑运动员。毕
竞，测试更像马拉松，而不是短跑！
假设你通过与测试的利益相关者共事，已经确定一些测试目标，其
中包括一个典型的目标，那就是发现缺陷，特别是重要的缺陷。对
这一目标而言，你如何确定其有效和高效为外界所知晓呢？
思考以下问题：
我们找到了多大比例的缺陷？
我们发现了较高比例的严重缺陷吗？
与在正式产品中出故障的成本相比，在测试中发现和解决一个缺陷
的成本是多少呢？
对每个问题，制定一个指标。首先是对找到缺陷的百分比，你可以
用缺陷发现百分比（defect detection percentage,DDP）来衡量这一
点，如公式2-1所示。如果你的测试是用户验收测试和部署前的质量
保证最后一环，指标可以简化公式2-2。通常，有一段时间能在产品
中发现大多数的缺陷，因此可以计算出，从部署后经过了这段时间
之后的缺陷发现百分比。
公式2-1：缺陷发现百分比（DDP）
发现的缺陷
DDP=
目前具有的缺陷
公式2-2：用户验收测试和部署前的最后测试的缺陷发现百分比
(DDP)
1835
---
## Page 1837
测试的缺陷
DDP=
测试的缺陷+产品的缺陷
根据我们的评估和来自世界各地客户的反馈，一个独立的测试团队
对系统测试或系统集成测试的缺陷发现百分比平均大约是85%。然
而，这个指标在不同情况偏差很大。在为组织内部使用而并发的系
统中，目标应设得较高，接近95%，因为用户通常相对固定，用例
和支持环境的集合比较小。为很大市场开发的系统，用户及其技术
水平、对系统的使用情况和使用系统的环境差异很大，使得实现较
高的缺陷发现百分比要难得多。尽管如此，关键任务或安全关键系
统中，你还是需要实现非常高的缺陷发现百分比。
凭借我们的发现缺陷有效性衡量指标，我们来制定一个确定工作侧
重点的指标。你的测试团队发现了较高比例的严重缺陷吗？你可以
再次使用缺陷发现百分比来度量。首先，计算所有缺陷的发现百分
比；然后，不管你的组织是如何界定“严重缺陷"的，计算出严重缺
陷的发现百分比。公式2-3所示关系应该成立。
公式2-3：发现缺陷的侧重点
DDP（所有缺陷）<DDP（严重缺陷）
一般来说，成功实践基于风险的测试的客户，可以达到令人满意的
严董缺陷发现百分比，他们的缺陷发现百分比符合公式2-3。如果你
需要在你的组织中采用基于风险的测试，可以参看我的书
《PragmaticSoftwareTesting》，（Wiley出版社），或在RBCS图书
馆里我的一些基于风险的测试的文章。在任何情况下，都应该努力
实现严重缺陷的发现百分比始终接近100%。你应该仔细分析任何漏
到正式产品中的严重缺陷，想办法改进你的测试，以便将来找出这
些缺陷。
最后，我们不仅要找到一个相当大比例的缺陷，不仅要找到更多的
严重缺陷，还应该更划算地找到缺陷，让客户和用户在正式产品中
发现缺陷成本可就问题大了。衡量一个故障成本的公认技术被称为
“质量成本”，你可以参看我的书《CriticalTestingProcesses》（关键
测试过程，Addison-Wesley出版社），或在RBCS图书馆里我的文章
《TestingROI:WhatITManagers ShouldKnow》（测试投资回报率：
IT经理们须知）中找到完整的描述。
1836
---
## Page 1838
你可以用质量成本识别出与测试和质量有关的三种主要成本：
发现成本
就算我们没有发现缺陷，也会有测试成本。例如，进行质量风险分
析，建立测试环境，并创建测试数据的这些活动都会产生测试成
本。
内部故障成本
因为发现缺陷而导致的测试和开发成本。例如，提交缺陷报告，解
决缺陷，确认测试缺陷已解决和回归测试改动过的构建这些活动，
都会产生内部故障成本。
外部故障成本
因为无法提供100%无缺陷的完美产品而产生的支持、测试、开发和
其他成本。例如，很多技术支持或客户服务的组织和系统维护的工
程师团队的成本都是外部故障成本。
因此，我们可以找出测试和产品中每个缺陷的平均成本，如公式2-4
和公式2-5所示。通常，测试中缺陷的平均成本远低于正式产品中缺
陷的平均成本，通常相差2倍、5倍、10倍，甚至更多倍。基于这些
数据，公式2-6计算出了测试的投资回报率。公式2-6中蕴含的事实是
每个测试中发现的缺陷都相当于给机会为该公司省钱了，因为测试
中的缺陷成本和正式产品中的缺陷成本相差太大。投资在测试中的
成本，就是发现缺陷的成本（因为内部故障成本不算是投资）。