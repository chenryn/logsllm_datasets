Hello, when I use a flask, I found that the request will execute multiple
responses, I don't know where the problem is
main.py:
    import server
    def print_hi(name):
        print(f'Hi, {name}') 
    if __name__ == '__main__':
        # print_hi('PyCharm')
        server.start_server()
server.py:
    import json
    from flask import Flask, request
    from threading import Thread
    import logger
    import alertManager
    import captureutil
    app = Flask('')
    @app.route('/webhook', methods=['POST', 'GET'])
    def post_message():
      try:
        jsonRequest=request.args.get("jsonRequest")
        data = request.data
        body_unicode = data.decode('utf-8')
        logger.log_handler(f"Trigger response begin ---")
        if request.method == 'POST':
          if jsonRequest == "true":
            if check_json(body_unicode):
              json_data = json.loads(data)
              logger.log_handler(f" post jsonData:{json_data}")
              sendJsonFunc(json_data)
              return 'success', 200
            else:
              logger.log_handler(f" post text :{body_unicode}")
              sendTextFunc(body_unicode)
              return 'success', 200
          else:
            logger.log_handler(f" post text :{body_unicode}")
            sendTextFunc(body_unicode)
            return 'success', 200
        else:
          logger.log_handler(f" get text :{body_unicode}")
          sendTextFunc(body_unicode)
          return 'success', 200
      except Exception as e:
        logger.log_handler("[X] Exception Occured : ", e)
        return 'failure', 500
    @app.route('/')
    def main():
      return 'Your bot is alive!'
    def run():
      logger.log_handler("run 新的一次启动")
      app.run(host='127.0.0.1', port=5000)
    def start_server_async():
      server = Thread(target=run)
      server.start()
    def start_server():
      logger.log_handler("start_server : NewServer Begin")
      app.run(host='127.0.0.1', port=5000)
    def check_json(input_str):
      try:
        json.loads(input_str)
        return True
      except:
        return False
    def sendJsonFunc(json_data):
      return ""
        # alertManager.sendJsonMsg(json_data)
    def sendTextFunc(TextMsg):
      return ""
        # alertManager.sendTextMsg(TextMsg)
![1](https://user-
images.githubusercontent.com/9263032/162741376-6569a261-e9f0-4a70-be16-38e7bc069e65.png)
![2](https://user-
images.githubusercontent.com/9263032/162741380-0afdcf8b-cf91-45c9-8da7-f791a157aa70.png)
![3](https://user-
images.githubusercontent.com/9263032/162741385-cc3ad23f-9c04-4e9b-9630-242a756a8a23.png)
![4](https://user-
images.githubusercontent.com/9263032/162741386-de955c9a-0d8d-4229-a649-8d7397fa0930.png)
![5](https://user-
images.githubusercontent.com/9263032/162742875-80487b03-5479-43d1-b396-2fc584352fa9.png)