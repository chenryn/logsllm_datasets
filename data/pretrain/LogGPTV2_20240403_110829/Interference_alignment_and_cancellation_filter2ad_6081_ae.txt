### MAC Requirements and Limitations of the USRP-GNU-Radio Platform

The MAC layer, as specified in §7, requires access to accurate timing information and the capability to rapidly switch the board from a transmit mode to a receive mode. Unfortunately, these requirements are not supported by the current USRP-GNU-Radio platform.

### IAC and 802.11-MIMO: Commonalities and Differences

Both IAC and 802.11-MIMO utilize the GNU-Radio basic decoding modules, such as packet detection, clock recovery, synchronization, and channel estimation, along with the same system parameters.

### Performance Metrics: Throughput vs. SNR

In the networking community, it is common to compare the throughput of various designs. However, for radios that do not support rate adaptation, throughput comparisons alone can be misleading. For instance, wireless systems like 802.11a/b/g/n cards and WiMax can leverage higher Signal-to-Noise Ratios (SNRs) to use denser modulation and coding schemes, thereby increasing their throughput. GNU-Radios, however, do not yet support rate adaptation. Therefore, two systems might have the same throughput, but one could have a higher SNR, which would allow it to achieve a higher throughput if it supported rate adaptation.

To illustrate, consider a 2-antenna system where IAC can decode four concurrent packets, while 802.11-MIMO decodes only two. In this case, IAC's throughput would be double that of 802.11-MIMO. However, if the 802.11-MIMO system has a higher SNR, it could potentially use denser modulation and coding schemes, doubling or even tripling its throughput. Thus, measuring performance at the physical layer in terms of SNR or a function of it is more informative.

### Measuring Performance: SNR and Achievable Rate

For both 802.11-MIMO and IAC, we measure the signal-to-noise ratio (SNR) for each transmitted packet. The achievable rate, which is the rate that could be achieved with optimal rate adaptation, is computed as:

\[ \text{Rate} = \sum_i \log_2(1 + \text{SNR}_i^{\text{Measured}}) \, \text{[bit/s/Hz]} \]

where the sum is over all concurrent packets. We then average this rate over the entire experiment and compute the gain as the ratio of the average rate of IAC to that of 802.11-MIMO:

\[ \text{Gain} = \frac{\text{Rate}_{\text{IAC}}}{\text{Rate}_{\text{802.11-MIMO}}} \]

### IAC’s Multiplexing Gain

#### 2-by-2 Uplink Experiment

We randomly select two clients from the testbed to upload traffic to two Access Points (APs), and repeat the experiment with different clients and APs. In 802.11-MIMO, each client uses its best AP and transmits two packets simultaneously, with the two clients alternating in using the medium. In IAC, the two clients simultaneously transmit three packets: in one time slot, client 1 uploads a single packet and client 2 uploads two packets, and in the next slot, client 1 uploads two packets and client 2 uploads one packet.

**Results:**
Figure 12 shows a scatter plot of the average rate under IAC and 802.11-MIMO. The figure indicates that, on average, IAC increases the transfer rate by 1.5x over 802.11-MIMO. The variance in the gain is due to channel and noise variations, and the similarity of the channel matrices of the two clients. When the channels are similar, the alignment is affected by noise and imperfections in channel estimates, reducing the gain from IAC. Conversely, when the channels are dissimilar, IAC can exploit spatial diversity to achieve a higher rate, potentially exceeding the 1.5x gain.

#### 3-by-3 Uplink and Downlink Experiment

We further investigate whether IAC can increase the multiplexing gain. Given that our nodes have 2 antennas each, we expect IAC to multiplex 4 packets on the uplink and 3 packets on the downlink. Each experiment involves three clients and three APs, run first with 802.11-MIMO and then with IAC.

**Results:**
Figures 13a and 13b show scatter plots of the rate under IAC and 802.11-MIMO for the 3-client and 3-AP scenario. IAC provides about a 1.4x increase in transfer rate on the downlink and a 1.8x increase on the uplink. These gains are consistent across low and high SNRs.

### IAC’s Diversity Gain

#### 1-client and 2-APs Experiment

Even with a single active client, IAC can provide a diversity gain over 802.11-MIMO. This is because IAC can coordinate multiple APs over Ethernet, allowing the client to choose between downloading two concurrent packets from one AP or using both APs concurrently, downloading one packet from each.

**Results:**
Figure 14 shows the increase in download rate achieved with IAC compared to 802.11-MIMO. IAC is beneficial even with a single active client, providing a diversity gain that is particularly significant at low SNRs, where the rate can double.

### Summary

- **MAC Requirements:** Accurate timing and rapid switching between modes, which are not supported by the USRP-GNU-Radio platform.
- **Performance Metrics:** SNR-based metrics are more informative than throughput for systems without rate adaptation.
- **Multiplexing Gain:** IAC significantly increases the number of concurrent packets, providing a 1.5x to 1.8x gain over 802.11-MIMO.
- **Diversity Gain:** IAC also offers a diversity gain, especially at low SNRs, even with a single active client.

These results highlight the advantages of IAC in both multiplexing and diversity, making it a promising approach for improving wireless network performance.