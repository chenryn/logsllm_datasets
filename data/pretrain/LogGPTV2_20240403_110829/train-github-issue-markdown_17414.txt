I have a function that takes a class constructor as a parameter, and returns
another class constructor of the same type. Internally, the provided
constructor is subclassed and augmented, and the subclass is returned.
I'm having trouble finding a way to express this function in a generic,
strongly-typed manner. Note the `//ERROR` comment in the repro code below:
Repro code:
    // Base type of the family of classes operated on by the augment() function
    class FooClass { /*...*/ }
    // ========== Works, but is not generic ==========
    function augment(SuperClass: typeof FooClass): typeof FooClass {
        class SubClass extends SuperClass {
            /*...*/
        }
        return SubClass;
    }
    var FooClass2 = augment(FooClass);
    // ========== Generic, but does not compile ==========
    function genericAugment(SuperClass: T): T {
        class SubClass extends SuperClass { //ERROR: Type 'T' is not a constructor function type
            /*...*/
        }
        return SubClass;
    }
I've tried a few other variations, but can't seem to find a way to express
this pattern.
Is there any way to do it?