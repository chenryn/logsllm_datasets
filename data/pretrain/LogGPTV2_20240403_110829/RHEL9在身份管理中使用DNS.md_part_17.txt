    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  生成 [**ensure-A-and-AAAA-records-are-present.yml**]{.strong}
    Ansible playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-A-and-AAAA-records-are-present.yml ensure-A-and-AAAA-records-are-present-copy.yml
    ```
4.  打开 [**ensure-A-and-AAAA-records-are-present-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分中设置以下变量来调整该文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `zone_name`{.literal} 变量设置为
        [**idm.example.com**]{.strong}。
    -   在 `records`{.literal} 变量中，将 `name`{.literal} 变量设置为
        [**host1**]{.strong}，并将 `a_ip_address`{.literal} 变量设置为
        [**192.168.122.123。**]{.strong}
    -   在 `records`{.literal} 变量中，将 `name`{.literal} 变量设置为
        [**host1**]{.strong}，并将 `aaaa_ip_address`{.literal}
        变量设置为 [**::1**]{.strong}。
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Ensure A and AAAA records are present
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure A and AAAA records are present
      - name: Ensure that 'host1' has A and AAAA records.
        ipadnsrecord:
          ipaadmin_password: Secret123
          zone_name: idm.example.com
          records:
          - name: host1
            a_ip_address: 192.168.122.123
          - name: host1
            aaaa_ip_address: ::1
    ```
6.  保存这个文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-A-and-AAAA-records-are-present-copy.yml
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅 [IdM 中的 DNS
    记录](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#dns-records-in-idm_managing-dns-records-in-idm){.link}。
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-dnsrecord.md`{.literal} 文件。
-   请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录中的 Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_working-with-dns-in-identity-management.html#ensuring-the-presence-of-a-and-ptr-dns-records-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}使用 Ansible 确保 IdM 中存在 A 和 PTR DNS 记录 {.title}
:::
本节演示了 Identity Management(IdM)管理员如何使用 Ansible playbook
来确保存在特定 IdM 主机的 A 记录，以及相应的 PTR
记录。在以下流程中使用的示例中，IdM 管理员可确保在
[**idm.example.com**]{.strong} 区域中有 IP 地址为
[**192.168.122.45**]{.strong} 的 [**host1**]{.strong} 的 A 和 PTR 记录。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
-   [**idm.example.com**]{.strong} DNS 区域存在，并由 IdM DNS
    管理。有关在 IdM DNS 中添加主 DNS 区域的更多信息，[请参阅使用
    Ansible playbook 管理 IdM DNS
    区域](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/configuring_and_managing_identity_management/index#using-ansible-playbooks-to-manage-idm-dns-zones_configuring-and-managing-idm){.link}。
:::
::: orderedlist
**步骤**
1.  进入 `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  打开清单文件，并确保您要配置的 IdM 服务器列在
    `[ipaserver]`{.literal} 部分。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  复制 [**ensure-dnsrecord-with-reverse-is-present.yml**]{.strong}
    Ansible playbook 文件。例如：
    ``` literallayout
    $ cp ensure-dnsrecord-with-reverse-is-present.yml ensure-dnsrecord-with-reverse-is-present-copy.yml
    ```
4.  打开
    [**ensure-dnsrecord-with-reverse-is-present-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分中设置以下变量来调整该文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   将 `name`{.literal} 变量设置为 [**host1**]{.strong}。
    -   将 `zone_name`{.literal} 变量设置为
        [**idm.example.com**]{.strong}。
    -   将 `ip_address`{.literal} 变量设置为
        [**192.168.122.45**]{.strong}。
    -   将 `create_reverse`{.literal} 变量设置为 [**yes**]{.strong}。
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Ensure DNS Record is present.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure that dns record is present
      - ipadnsrecord:
          ipaadmin_password: Secret123
          name: host1
          zone_name: idm.example.com
          ip_address: 192.168.122.45
          create_reverse: yes
          state: present
    ```
6.  保存这个文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-dnsrecord-with-reverse-is-present-copy.yml
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅 [IdM 中的 DNS
    记录](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#dns-records-in-idm_managing-dns-records-in-idm){.link}。
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-dnsrecord.md`{.literal} 文件。
-   请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录中的 Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_working-with-dns-in-identity-management.html#ensuring-the-presence-of-multiple-dns-records-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}使用 Ansible 确保 IdM 中存在多个 DNS 记录 {.title}
:::
本节演示了 Identity Management(IdM)管理员如何使用 Ansible playbook
来确保与特定 IdM DNS 记录关联多个值。在以下示例中，IdM 管理员确保在
[**idm.example.com**]{.strong} DNS 区域中存在 [**host1**]{.strong}
的多个 A 记录。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
-   [**idm.example.com**]{.strong} 区域存在，并由 IdM DNS 管理。有关在
    IdM DNS 中添加主 DNS 区域的更多信息，[请参阅使用 Ansible playbook
    管理 IdM DNS
    区域](#using-ansible-playbooks-to-manage-idm-dns-zones_working-with-dns-in-identity-management.html "第 3 章 使用 Ansible playbook 管理 IdM DNS 区域"){.link}。
:::
::: orderedlist
**步骤**
1.  进入 `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsrecord
    ```
2.  打开清单文件，并确保您要配置的 IdM 服务器列在
    `[ipaserver]`{.literal} 部分。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  复制 [**ensure-presence-multiple-records.yml**]{.strong} Ansible
    playbook 文件。例如：
    ``` literallayout
    $ cp ensure-presence-multiple-records.yml ensure-presence-multiple-records-copy.yml
    ```
4.  打开 [**ensure-presence-multiple-records-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipadnsrecord`{.literal} 任务部分中设置以下变量来调整该文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM 管理员密码。
    -   在 `records`{.literal} 部分中，将 `name`{.literal} 变量设置为
        [**host1**]{.strong}。
    -   在 `records`{.literal} 部分中，将 `zone_name`{.literal}
        变量设置为 [**idm.example.com**]{.strong}。
    -   在 `records`{.literal} 部分中，将 `a_rec`{.literal} 变量设置为
        [**192.168.122.112**]{.strong}，设置为
        [**192.168.122.122**]{.strong}。
    -   在 `records`{.literal} 部分定义第二个记录：
        ::: itemizedlist
        -   将 `name`{.literal} 变量设置为 [**host1**]{.strong}。
        -   将 `zone_name`{.literal} 变量设置为
            [**idm.example.com**]{.strong}。
        -   将 `aaaa_rec`{.literal} 变量设置为 [**::1**]{.strong}。
        :::
        这是当前示例修改的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Test multiple DNS Records are present.
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      # Ensure that multiple dns records are present
      - ipadnsrecord:
          ipaadmin_password: Secret123
          records:
            - name: host1
              zone_name: idm.example.com
              a_rec: 192.168.122.112
              a_rec: 192.168.122.122
            - name: host1
              zone_name: idm.example.com
              aaaa_rec: ::1
    ```
6.  保存这个文件。
7.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-presence-multiple-records-copy.yml
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅 [IdM 中的 DNS
    记录](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#dns-records-in-idm_managing-dns-records-in-idm){.link}。
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-dnsrecord.md`{.literal} 文件。
-   请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/dnsrecord`{.literal}
    目录中的 Ansible playbook 示例。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-dns-records-in-idm_working-with-dns-in-identity-management.html#ensuring-the-presence-of-multiple-cname-records-in-idm-using-ansible_using-ansible-to-manage-dns-records-in-idm}使用 Ansible 确保 IdM 中存在多个 CNAME 记录 {.title}
:::
Canonical Name 记录（CNAME
记录）是域名系统(DNS)中的一种资源记录，可将一个域名（别名）映射到另一个名称（规范名称）。
在从一个 IP 地址运行多个服务时，您可能会发现 CNAME 记录很有用：例如，FTP
服务和 Web 服务，各自在不同端口上运行。
本节演示了 Identity Management(IdM)管理员如何使用 Ansible playbook
来确保 IdM DNS 中存在多个 CNAME
记录。在以下流程中使用的示例中，[**host03**]{.strong} 既是 HTTP 服务器和
FTP 服务器。IdM 管理员确保 [**idm.example.com**]{.strong} 区域中存在
[**host03**]{.strong} A 记录的 [**www**]{.strong} 和 [**ftp**]{.strong}
CNAME 记录。
::: itemizedlist