,
where I(·) is deﬁned to be an indicator function of the logical
expression with I(true) = 1 and I(f alse) = 0. In addition,
r∈R α(r)
Fig. 7. Graph model for L (ISP trajectory) and S (external trajectory)
global location contexts and user behavior features to further
infer the missing location records.
Our proposed algorithms combine Gaussian mixture model
and Markov model. We refer the algorithm as GM. Fig. 7
shows the relationship of random variables in our model. Based
on this probabilistic model, we deﬁne the similarity score
function as follows,
DGM(S, L) = log p(S|L).
In this section, we will
introduce how to compute this
probability-based similarity score to de-anonymize location
trajectories.
A. Modelling Spatio-Temporal Mismatches: Gaussian Mixture
Model (GMM)
In order to model the strong mismatches in the adversary’s
knowledge in terms of both spatial dimension and temporal
dimension, we adopt the Gaussian mixture model (GMM). By
deﬁnition, GMM is a linear superposition of ﬁnite Gaussian
densities, which can be expressed as:
K(cid:88)
k=1
p(x) =
π(k)N (x|uk, Σk),
where each Gaussian density N (x|uk, Σk) is called a compo-
nent and has its own mean uk and covariance Σk [7].
As shown in Fig. 7, we use component N (x|up, Σp) to
represent the probability density of external records with tem-
poral mismatching of p time units. Then, let LC represent the
complete ISP trajectory, i.e., ∀t ∈ T , LC(t) (cid:54)= ∅. Conditioned
on it, the probability density function (PDF) of an external
record S(t) belonging to the same user can be calculated as,
p(S(t)|L) =
π(p) · N (S(t)|L(t − p), σ2(p)I2),
(1)
Hu(cid:88)
p=−Hl
where π(p) is the probability of the temporal mismatch to
be p time units, and σ(p) is the mean square root of the
spatial mismatch conditioned on the temporal mismatch of p
time units. In addition, since S(t) and L(t) are represented by
geographical longitudes and latitudes, which are 2-dimensional
vectors, I2 is a 2 × 2 identity matrix.
Parameters π(p) and σ(p) can be chosen by the empirical
values shown in Fig. 5. On the other hand, they can also be
estimated by EM algorithm [7]. Speciﬁcally, given M external
records {S1, ..., SM} with their corresponding |Hu + Hl| ISP
records in neighboring time slots, e.g., for Sn, its neighboring
ISP records are (Ln,−Hl, ..., Ln,Hu ). In addition, we deﬁne
10
α(r) is the parameter to eliminate zero probabilities. For
example, in Laplace smoothing [25], α(r) is set to be the
same value for different r. In our work, we use the location
context to implement the smoothing as follow,
α(r) = α0 ·(cid:88)
(cid:88)
where α(r) is in proportion to the number of records at
location r with α0 as the parameter to adjust the inﬂuence
of location context.
Based on these deﬁnitions, the probability of a complete
trajectory LC ∈ C(L) conditioned on L can be calculated as
follows,
(cid:89)
E(LC(t)).
(5)
p(LC|L) =
t∈T ,L(t)=∅
1-Order Markov Model.
In the 1-order Markov model,
location of each time slot is assumed to be dependent on the
location in the last time slot. Denote Tr1r2 as the transition
probability matrix of the user, which can be calculated as
follows,
Tr1r2 :=p(L(t + 1) = r2|L(t) = r1),
(cid:80)
(cid:80)
t∈T I(L(t) (cid:54)= ∅)I(L(t + 1) (cid:54)= ∅) +(cid:80)
r2,r2∈R βr1r2
Similarly, β(r1, r2) is the parameter to eliminate zero transition
probabilities. We also use the aggregate transition statistics of
users to help modelling users with sparse data, which can be
represented as follows,
t∈T I(L(t) = r1)I(L(t + 1) = r2) + βr1r2
=
βr1r2 = β0 ·(cid:88)
(cid:88)
v∈V
t∈T
By this way, the complexity can be reduced from O(T ·RH ) to
O(T · R· H), which is also similar for 1-order Markov model.
The inﬂuence of ignoring dependency of external records will
also be analyzed in Section VIII.
In previously proposed methods, we calculate the probabil-
ity p(S|L) by only considering the observed records in S such
that S(t) (cid:54)= ∅ as shown in (3), and ignoring the unobserved
time slots t with S(t) = ∅. However, (3) holds only when
records in S and L are generated independently, which is not
true in practice. For example, when a person is using cellular
phone, the location will be requested by some applications with
a larger probability. Similarly, when a user shares a check-
in, it is more likely to access Internet in the near time (e.g.,
navigation services, location-based services). The consequence
here is that spatio-temporal records in different datasets are
not generated independently. Thus, in order to calculate the
conditional probability p(S|L) more accurately, we need to
consider the similarity score in terms of correlation of record
generation in different datasets.
.
Speciﬁcally, we focus on whether there exists a record at
time slot t in S and L while ignoring their concrete value.
Thus, we deﬁne the 0-1 variable Ix to indicate whether x
equals to ∅, i.e., if x = ∅ then Ix = 0; otherwise Ix = 1.
Then, the similarity score can be expressed as:
(cid:89)
t∈T
DB(S, L) := log
P (IS(t)|IL(t))
(cid:88)
η,χ∈{0,1}
v∈V
t∈T
I(Lv(T ) = r),
C. Modelling User Behavior
I(Lv(t) = r1) · I(Lv(t + 1) = r2),
=
(1 − |IS(t) − η|)(1 − |IL(t) − χ|) log Pη|χ,
Then, we have:
p(LC|L) =
1
P (L)
(cid:89)
t∈T
T (LC(t), LC(t + 1)),
where the correlation are characterized by four parameters
P1|1, P1|0, P0|1, and P0|0. For example, P0|1 represents the
probability of S(t) to be ∅ under the condition of L(t) (cid:54)= ∅.
Then, the combined similarity score can be calculated as:
where P (L) can be calculated by using n-order transition
matrix.
DGM−B = DGM + DB.
On the other hand, as we can observe from Section IV,
the trajectories in external information are obviously sparser
than those in the anonymized dataset. It indicates that in real
external trajectory, for each pair of adjacent non-empty S(t1)
and S(t2), we generally have |t1 − t2| (cid:29) H. Thus, we can
assume that external records are independent regardless of
whether their dependent ISP records are observed. In this way,
the computational complexity can be signiﬁcantly reduced.
Taking 0-order Markov model for example, we have:
We refer to this upgrade version of GM algorithm as the GM-B
algorithm. However, different with π and σ in GMM, which
can be set to be empirical value, parameters of Px|x highly
depend on the ground truth data. For the same reason, the
GM-B algorithm can only be used when there is a thorough
understanding of the dataset (e.g., sufﬁcient ground truth
data to train the parameters). Thus, GM-B algorithm shows
the best performance that can be achieved in practice, while
GM algorithm shows the performance when we do not have
sufﬁcient ground truth data.
p(S(t)|L) =
G(p, S(t), r)p(LC(t − p) = r|L),
D. Baseline Algorithm
H(cid:88)
(cid:88)
p=0
r∈R
where π and σ in Gπ,σ are omitted for simplicity. In addition,
p(LC(t − p) = r|L) is the probability of a record at location
r in time slot t − p, which can be represented as follows,
E(r), L(t − p) = ∅,
1, L(t − p) = r,
0,
otherwise.
p(LC(t − p) = r|L) =
For baseline comparisons, we also propose two simpliﬁed
versions which only consider spatial mismatches and temporal
mismatches, respectively. We refer to them as spatial matching
(SM) algorithm and temporal matching (TM) algorithm.
Spatial Matching Algorithm (SM).
The SM algorithm
ignores the mismatch in temporal dimension, and only matches
11
(a) # of records in app-level trajectories
(b) # of locations in app-level trajectories
(c) Radius of gyration of app-level trajectories
Fig. 8. Performance of different de-anonymization algorithms using Weibo’s app-level trajectories as the external information.
(d) Impact of spatial resolution
(e) Impact of temporal resolution
records at the same time slot with Gaussian distribution. Then,
its similarity score can be deﬁned as:
DSM(S, L) = log
1
2πσ2 exp(− (S(t) − L(t))2
2σ2
).
different metrics of external trajectories, including number of
records, number of distinct locations, and the radius of gyration
[17] of the external trajectories.
Fig. 8(a) shows that SM algorithm does not perform
better than existing algorithms, especially compared with those
tolerating spatio-temporal mismatches, e.g., NFLX and MSQ.
On the other hand, TM algorithm shows a better performance
than SM algorithm, indicating tolerating temporal mismatches
is more important than tolerating spatial mismatches in de-
anonymization attacks. The intuition is that spatial mismatches
are bounded by the strong locality of human movements, while
temporal mismatches are not physically bounded.
In addition, we ﬁnd that GM algorithm (modelling both
spatial and temporal mismatches) achieves much better re-
sults. The hit-precision of GM is 10% higher compared with
existing algorithms. Finally, by comprehensively modelling
users’ behavior, GM-B algorithm achieves another signiﬁcant
performance gain (7% hit-precision). Overall, a large number
of records help to improve the de-anonymization accuracy. The
best hit-precision of our proposed algorithm achieves 41% for
external trajectories with more than 10 records, improving over
72% compared with the existing algorithms.
We notice that after the number of records get higher than
10, the performance gain stalls. In Fig. 8(b), we directly show
the relationships between the hit-precision with the number
of distinct locations of external trajectories. The results show
a very different trend: the hit-precision is rapidly growing
with the number of distinct locations. For external trajectories
with about 10 distinct locations, we can de-anonymize the
corresponding ISP trajectory with the best hit-precision over
77%.
Radius of gyration reﬂects the range of a user’ activity
area. It is deﬁned as the mean square root of the distance
(cid:89)
S(t)(cid:54)=∅
(cid:88)
S(t)(cid:54)=∅
Similarly with GM algorithm, when L(t) is ∅, the margin
distribution is used to estimate the PDF of S(t).
Temporal Matching Algorithm (TM).
On the contrary,
the temporal matching algorithm only matches locations by
regions, and it sums the weighted minimum time interval to
obtain the similarity score as follows,
DTM(S, L) =
π(arg
min
p∈T ,S(t)=L(p)
|t − p|).
Speciﬁcally, we use empirical temporal mismatch distribution
shown in Fig. 5 as π(t).
VIII. PERFORMANCE EVALUATION
Now, we systematically evaluate the performance of our
algorithms and compare them with existing and baseline
methods. In the following, we apply our algorithms on different
trajectory datasets to perform de-anonymization. In addition,
we vary key parameters and experiment settings to examine
the robustness of the proposed algorithms.
A. De-anonymization Attack
De-anonymization using Weibo’s App-level Trajectories.
As a primary experiment, we evaluate the performance of
different algorithms by using Weibo’s 56,683 app-level tra-
jectories as the external information to de-anonymize the ISP
dataset. In Fig. 8, the hit-precision is calculated as functions of
12
0510152000.10.20.30.40.50.60.70.8Hit−Precision#Records  GM−BGMSMTMNFLXWYCIPOISMEHISTHMMMSQ024681000.10.20.30.40.50.60.70.8Hit−Precision#Loc(cid:68)tions  GM−BGMSMTMNFLXWYCIPOISMEHISTHMMMSQ024681000.10.20.30.40.50.60.70.8Hit−PrecisionRg (km)  GM−BGMSMTMNFLXWYCIPOISMEHISTHMMMSQ2-32-22-1202122Spatial Resolution (km)00.050.10.150.2Hit-PrecisionNFLXWYCIPOISMEHISTGMGM-B2-32-22-1202122Temporal Resolution (hour)00.050.10.150.2Hit-PrecisionMSQPOISMEHMMGMGM-B(a) Check-in (Synchronized)
(b) Check-in (Historical)
(c) App-level (Dianping)
Fig. 9. Performance of different de-anonymization algorithms using Dianping and Weibo Check-in trajectories as the external information.
of each points in the trajectory to its center of mass [17]. It
can be calculated by rg = (cid:112)Σt∈T ,S(t)(cid:54)=∅(S(t) − Scm)2/n,
(cid:80)
t∈T I(S(t) (cid:54)= ∅). In addition, Scm =(cid:80)
where n is the number of non-empty elements in S, i.e., n =
t∈T ,S(t)(cid:54)=∅ S(t)/n
is the center of mass of the trajectory. As we can observe, the
best hit-precision in terms of radius of gyration only achieve
52%. Compared with Fig. 8(b), the result indicates that the
number of distinct locations is a more dominating factor in
the de-anonymization attack.
improve the de-anonymization accuracy. In addition, our pro-
pose GM and GM-B algorithm outperform other algorithms.
The largest performance gap between our proposed algorithms
and existing algorithm achieves about 20% when there are 8
records in the check-in trajectories.
Fig. 9(b) shows the mean hit-precision of de-anonymization
based on synchronized and historical Weibo check-ins. The
mean hit-precision is very low because the synchronized
check-ins are extremely sparse. For example, as shown in
Fig. 1, over 80% users have less than 2 records. The historical
check-ins have more data points but can no longer use the
“encountering event” to match with the ISP data, leading to
a low hit-precision. In addition, the historical check-ins can
help to improve the de-anonymization accuracy for certain
algorithms (e.g., WYCI, HIST, HMM and our proposed GM,
GM-B algorithms). Therefore, we only show their mean hit-