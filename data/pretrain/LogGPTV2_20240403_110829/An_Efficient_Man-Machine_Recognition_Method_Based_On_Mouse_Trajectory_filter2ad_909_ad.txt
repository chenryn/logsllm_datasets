Method
Before removing correlation
After removing correlation
Precision Recall
99.91
99.86
95.41
98.94
6.3.2 Parameter Optimization.
By optimizing parameters of XGBoost, the model can achieve bet-
ter classification results. When the booster is gbtree, the learn-
ing rate (eta) is set to 0.3, and the minimum number of leaves
(min_child_weight) is adjusted to 1.5, the classification precision is
depend on gamma value and maximum depth (max_depth).
Figure 11: Effect of parameters gamma and max_depth on
accuracy.
When gamma is set to 0, the decision tree will split as long
as the loss function is reduced. Max_depth controls the lowest
proportion of the total number of samples in a subtree, and if the
tree is too deep, it will result in over-fitting. As Figure 11 shows,
when the gamma value is 0, when max_depth is 4, the model is with
6.3.4 Evasion Detection Experiment.
Due to data collection problems, deviations may occur in the entire
track. We randomly selected 300 samples from the training dataset
and compared the deviations between unbiased and different pixels,
respectively. In a trajectory, only the horizontal sliding coordinate
372An Efficient Man-Machine Recognition Method Based On Mouse Trajectory Feature De-redundancy
ACSAC ’21, December 6–10, 2021, Virtual Event, USA
points are offset. The result is shown in the figure12. The abscissa
offset rate in the figure12 indicates that the coordinate points of
X% are offset by 1 pixel or 3 pixels. On the premise of having
the same K value, when having the same offset rate, the more
offset pixels, the worse the evasion detection effect. To a complete
replay behavior, i.e. 0% deviation rate, the replay behavior can be
completely detected. Increasing the K value can effectively deal with
the existing deviation, but it will bring greater time consumption.
At the same time, due to the characteristics of the slider verification
code, the deviation generally does not exceed 3 pixels, otherwise it
will not coincide with the end point and is considered not a complete
sliding path. However, it is difficult for machine learning methods
to detect replay behavior, even if the tracks contain deviations.
Therefore, a complete detection system needs to include machine
learning detection model and evasion attack detection method.
Figure 12: Evasion detection at different deviation rates.
We randomly selected 3000 horizontal sliding samples from
Shen[16] data set and performed evasion detection, and 229 sus-
pected evasion attacks were obtained. Our analysis of this phe-
nomenon shows that the data set in Shen[16] is used for identity
authentication, including multiple directional sliding of the same
person and sliding of different people in the same coordinate posi-
tion. When the selected fixed k value is large, it is prone to similar
replay behavior.
6.4 Method Comparison
In addition to the above experimental content, we also compare
other mouse behavior identification methods, table 7 includes other
research methods using this human-machine authentication dataset
and user authentication methods for mouse behavior.Kang[9] did
not classify the machine behavior in detail, did not extract the
specific attack model features from it, and there are interference
features. Zhang’s method[21] does not extract enough features. He
considers the problem of feature correlation, but the classification
results are not good because of too few features. Compared with
other methods, we consider the correlation between features more
and integrate the potential classification features of machine behav-
ior.In the model selection, XGBoost model with faster speed and
higher sensitivity of data set is used, which makes our method has
better performance.
Table 7: Comparison of results
Article
OuYang[13]
Zhang[21]
Xu[19]
Kang[9]
Our Work
Method
GBDT
GBDT
CNN
random forest
XGBoost
Year
2017
2018
2019
2021
2021
91.03
94.27
92.20
97.83
99.06
Precision Recall
91.06
-
-
94.72
99.88
Compared with identity authentication methods, human-machine
identification has a higher classification accuracy. Shen[14, 16] has
done several user authentication experiments using different meth-
ods, the FAR is 8.74, the FRR is 7.69, and the results of the methods
become worse as the number of participants increases.In large-
scale user authentication, mouse gliding behavior becomes less
distinguishable.
From the fuzzy entropy, we can see that the uncertainty of hu-
man behavior is very high, so it is unavoidable to produce bias
when sliding validation is used many times.When used for robot
validation, the server-side privacy data can be better protected and
unfair competition from malicious scripts can be avoided.Robot
programs operate the mouse regularly and contain multiple repeti-
tive tracks. In the main automation software, machine behavior has
defects in imitating human behavior, so machine learning methods
can better distinguish human behavior.
6.5 Time Efficiency Analysis
Under the current feature engineering, the model achieves good
classification results. To test the time efficiency of identification
methods, we fit the data set with model training to get the aver-
age completion time. Table 8 is the time spent in human-machine
identification experiments on three different number of sample sets.
The time efficiency of calculation features and evasion detection is
analyzed separately. The evasion detection uses 274,238 samples
after three data sets are merged. From the calculation efficiency, it
shows that it takes less than 2 milliseconds to compute each feature.
When using nine features for human-machine identification, the
main time consumed in calculating the features is to complete one
human-machine identification within 2ms, and to complete one
evasion attack detection within 200ms, which meets the real-time
requirements of commercial platforms. Compared with user au-
thentication experiments[3, 6, 10, 12, 14–16, 18], human-machine
identification is faster and more accurate, which brings great con-
venience to reduce user perception and improve the security of
private data. About the evasion attack detection, as the number
of sample sets increases, the time consumed for evasion attack
detection increases linearly.
373ACSAC ’21, December 6–10, 2021, Virtual Event, USA
Xiaofeng Lu, Zhenhan Feng, and Jupeng Xia
Table 8: Time efficiency
Sample set
Time spent Time efficiency
Content
Training dataset 9000 samples
Test dataset 100,000 samples
Shen[16] Dataset 165238 Samples
Test dataset 100,000 samples
Consolidated dataset 274238 samples
15.17s
143.50s
222.75s
2894.15s
21382.58s
1.69ms
1.44ms
1.3ms
53ms
147ms
Feature calculation
Feature calculation
Feature calculation
Evasion attack detection
Evasion attack detection
7 DISCUSSION
Machine behavior of mouse sliding contains many attack modes. In
this paper, human-mouse sliding behavior tracks are analyzed on
existing datasets, and machine behavior is classified into five attack
modes and their characteristics are analyzed. However, learning
the characteristics of specific attack modes may have limitations.
In order to improve the robustness of the model, it is necessary to
learn more attack modes and extract strong classification features.
Fitting the model and learning after dimension reduction of high-
dimensional features has better classification results than learning
from the features of specific attack modes.
Human-machine identification validation is time-sensitive, and
using more advanced classification models will result in greater time
consumption. Therefore, the extra time consumed is unacceptable
if the increase in the correct rate is not significant.
evasion attack detection can lead to false positives in datasets
over 100,000 levels, and the time consumed increases linearly. Reg-
ular refreshing of the comparison database can alleviate this situa-
tion.
8 CONCLUSION
This paper compares the behavior of sliding mouse controlled by
machine program with that of real human behavior, finds differ-
ent attack models, and then discusses the characteristics of each
attack model. After extracting the features based on the physical
quantity information of the sliding path, the features with good
classification effect are selected by the model score, and the features
with high Pearson correlation. When collecting the data of mouse
sliding, the problem of missing data may appear. This paper uses
the XGBoost model as a classifier because XGBoost specify the
branch direction for missing values, which can solve the sample
data missing problem well. We evaluate models on real datasets
and validate model generalization capabilities on an open dataset.
Experiments show that XGBoost can achieve 99.09% detection ac-
curacy and 99.88% recall with fewer features in the classifier. Our
study also found human and machine-mimicked human behavior
samples in two similar tracks in the data, which suggests that the
attacker used evasion attacks. In this paper, an evasion detection
method is presented and the optimized method meets the require-
ments of high efficiency of evasion attack verification detection.
Experiments show that the methods proposed in this paper can
detect evasion attacks effectively.
Mouse sliding detection can be used as an additional detection
method for intrusion detection. In practice, it can judge the security
of access behavior together with other user identity authentication
technology
ACKNOWLEDGMENTS
This research work is funded by Ant Financial through the Ant
Financial Science Funds for Security Research.
REFERENCES
[1] 2017. Mouse Track Recognition. http://bdc.saikr.com/vse/bdc/2017/.
[2] Ismail Akrout, Amal Feriani, and Mohamed Akrout. 2019. Hacking google
recaptcha v3 using reinforcement learning. arXiv preprint arXiv:1903.01003
(2019).
[3] Margit Antal and Lehel Denes-Fazakas. 2019. User verification based on mouse
dynamics: a comparison of public data sets. In 2019 IEEE 13th International Sympo-
sium on Applied Computational Intelligence and Informatics (SACI). IEEE, 143–148.
[4] Margit Antal and Elöd Egyed-Zsigmond. 2019. Intrusion detection using mouse
dynamics. IET Biometrics 8, 5 (2019), 285–294.
[5] Weiting Chen, Jun Zhuang, Wangxin Yu, and Zhizhong Wang. 2009. Measuring
complexity using fuzzyen, apen, and sampen. Medical engineering & physics 31,
1 (2009), 61–68.
[6] Shen Fu, Dong Qin, Daji Qiao, and George T Amariucai. 2020. RUMBA-Mouse:
Rapid User Mouse-Behavior Authentication Using a CNN-RNN Approach. In
2020 IEEE Conference on Communications and Network Security (CNS). IEEE, 1–9.
[7] Riccardo Guidotti, Anna Monreale, Salvatore Ruggieri, Franco Turini, Fosca
Giannotti, and Dino Pedreschi. 2018. A survey of methods for explaining black
box models. ACM computing surveys (CSUR) 51, 5 (2018), 1–42.
[8] Zach Jorgensen and Ting Yu. 2011. On mouse dynamics as a behavioral biometric
for authentication. In Proceedings of the 6th ACM Symposium on Information,
Computer and Communications Security. 476–482.
[9] Lulu Kang, Xingrong Fan, Xizhu Wang, Xiaoya Yang, and Rui Ming. 2021. Mouse
Track Recognition Based on Feature Group Hierarchy and Semi-supervised
Learning. Computer Engineering 47, 04 (2021), 277–284.
[10] Masud Karim, Hasnain Heickal, and Md Hasanuzzaman. 2017. User authentica-
tion from mouse movement data using multiple classifiers. In Proceedings of the
9th International Conference on Machine Learning and Computing. 122–127.
[11] Lei Ma, Chungang Yan, Peihai Zhao, and Mimi Wang. 2016. A kind of mouse
behavior authentication method on dynamic soft keyboard. In 2016 IEEE Interna-
tional Conference on Systems, Man, and Cybernetics (SMC). IEEE, 000211–000216.
[12] G Muthumari, R Shenbagaraj, and M Blessa Binolin Pepsi. 2014. Mouse gesture
based authentication using machine learning algorithm. In 2014 IEEE International
Conference on Advanced Communications, Control and Computing Technologies.
IEEE, 492–496.
[13] Zhiyou Ouyang and Xiaokui Sun. 2017. Behavioral Verification Code Human-
Machine Recognition Based on Gradient Lifting Model. NETINFO SECURITY 9
(2017).
[14] Chao Shen, Zhongmin Cai, Xiaohong Guan, Youtian Du, and Roy A Maxion. 2012.
User authentication through mouse dynamics. IEEE Transactions on Information
Forensics and Security 8, 1 (2012), 16–30.
[15] Chao Shen, Zhongmin Cai, Xiaohong Guan, Chao Fang, and Youtian Du. 2010.
User Identity Authentication and Monitoring Based on Mouse Behavior Charac-
teristics [J]. Journal on Communication 31, 7 (2010), 68–75.
[16] Chao Shen, Zhongmin Cai, Xiaohong Guan, and Roy Maxion. 2014. Performance
evaluation of anomaly-detection algorithms for mouse dynamics. computers &
security 45 (2014), 156–171.
[17] Jesús Solano, Christian Lopez, Esteban Rivera, Alejandra Castelblanco, Lizzy
Tengana, and Martin Ochoa. 2020. SCRAP: Synthetically Composed Replay At-
tacks vs. Adversarial Machine Learning Attacks against Mouse-Based Biometric
Authentication. In Proceedings of the 13th ACM Workshop on Artificial Intelli-
gence and Security (Virtual Event, USA) (AISec’20). Association for Computing
Machinery, New York, NY, USA, 37–47. https://doi.org/10.1145/3411508.3421378
[18] Yi Xiang Marcus Tan, Alfonso Iacovazzi, Ivan Homoliak, Yuval Elovici, and
Alexander Binder. 2019. Adversarial attacks on remote user authentication using
behavioural mouse dynamics. In 2019 International Joint Conference on Neural
Networks (IJCNN). IEEE, 1–10.
[19] Hongjun Xu, Hong Zhang, and Wei He. 2019. Cloud User Anomaly Detection
Method Based on Mouse Behavior. Journal of Harbin University of Science and
Technology 24, 04 (2019), 127–132.
[20] Zhen-yi Xu, Yu Kang, Yang Cao, and Yu-xiao Yang. 2019. Man-machine ver-
ification of mouse trajectory based on the random forest model. Frontiers of
Information Technology & Electronic Engineering 20, 7 (2019), 925–929.
[21] Zhiteng Zhang and Linlan Liu. 2018. Mouse Trajectory Identification Method
and Research Based on Gradient Promotion Decision Tree. Information & Com-
munications 09 (2018), 17–19.
374