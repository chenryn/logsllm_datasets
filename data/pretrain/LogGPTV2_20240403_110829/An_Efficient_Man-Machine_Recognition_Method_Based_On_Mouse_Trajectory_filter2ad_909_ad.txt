### Method

#### 6.3.2 Parameter Optimization
By optimizing the parameters of the XGBoost model, better classification results can be achieved. When using the `gbtree` booster, setting the learning rate (`eta`) to 0.3 and adjusting the minimum number of leaves (`min_child_weight`) to 1.5, the classification precision is influenced by the `gamma` value and the maximum depth (`max_depth`).

**Figure 11: Effect of Parameters `gamma` and `max_depth` on Accuracy**
- **Gamma**: When `gamma` is set to 0, the decision tree will split as long as the loss function is reduced.
- **Max Depth**: `max_depth` controls the maximum depth of the tree. If the tree is too deep, it can lead to overfitting.

As shown in Figure 11, when `gamma` is 0 and `max_depth` is 4, the model achieves optimal performance.

#### 6.3.4 Evasion Detection Experiment
Due to data collection issues, deviations may occur in the entire trajectory. We randomly selected 300 samples from the training dataset and compared the deviations between unbiased and different pixel offsets. In a trajectory, only the horizontal sliding coordinates are offset. The results are shown in Figure 12. The abscissa offset rate indicates that X% of the coordinate points are offset by 1 or 3 pixels. With the same K value, a higher number of offset pixels leads to worse evasion detection performance. For a complete replay behavior (0% deviation rate), the replay can be fully detected. Increasing the K value can effectively handle existing deviations but increases time consumption. Due to the characteristics of slider verification codes, deviations generally do not exceed 3 pixels; otherwise, the end point does not coincide, and the path is considered incomplete. Machine learning methods struggle to detect replay behavior, even with deviations. Therefore, a comprehensive detection system should include both a machine learning detection model and an evasion attack detection method.

**Figure 12: Evasion Detection at Different Deviation Rates**

We randomly selected 3000 horizontal sliding samples from the Shen[16] dataset and performed evasion detection, identifying 229 suspected evasion attacks. Analysis shows that the Shen[16] dataset is used for identity authentication, including multiple directional sliding by the same person and sliding by different people at the same coordinate position. A large fixed K value can lead to similar replay behavior.

### 6.4 Method Comparison
In addition to the above experiments, we compared our method with other mouse behavior identification techniques. Table 7 summarizes the results of various methods using the human-machine authentication dataset and user authentication methods for mouse behavior. Kang[9] did not classify machine behavior in detail and did not extract specific attack model features, leading to interference. Zhang's method[21] lacks sufficient feature extraction, resulting in poor classification despite considering feature correlation. Our approach considers feature correlation more comprehensively and integrates potential classification features of machine behavior. We use the XGBoost model, which offers faster speed and higher sensitivity, resulting in superior performance.

**Table 7: Comparison of Results**

| Article      | Method  | Year | Precision | Recall |
|--------------|---------|------|-----------|--------|
| OuYang[13]   | GBDT    | 2017 | 91.03     | 91.06  |
| Zhang[21]    | GBDT    | 2018 | 94.27     | -      |
| Xu[19]       | CNN     | 2019 | 92.20     | -      |
| Kang[9]      | RF      | 2021 | 97.83     | 94.72  |
| Our Work     | XGBoost | 2021 | 99.06     | 99.88  |

Compared to identity authentication methods, human-machine identification has higher classification accuracy. Shen[14, 16] conducted several user authentication experiments, with FAR at 8.74 and FRR at 7.69, and the results worsen as the number of participants increases. In large-scale user authentication, mouse gliding behavior becomes less distinguishable.

From fuzzy entropy, the uncertainty in human behavior is high, making biases unavoidable in repeated sliding validation. Using robot validation can protect server-side privacy data and prevent unfair competition from malicious scripts. Robot programs operate the mouse regularly and contain multiple repetitive tracks. In main automation software, machine behavior has defects in imitating human behavior, allowing machine learning methods to better distinguish human behavior.

### 6.5 Time Efficiency Analysis
Under the current feature engineering, the model achieves good classification results. To test the time efficiency, we fit the dataset with model training and obtained the average completion time. Table 8 shows the time spent on human-machine identification experiments with three different sample sets. The time efficiency for feature calculation and evasion detection is analyzed separately. Evasion detection uses 274,238 samples after merging three datasets. From the calculation efficiency, each feature computation takes less than 2 milliseconds. Using nine features for human-machine identification, the main time consumed is to complete one human-machine identification within 2ms and one evasion attack detection within 200ms, meeting the real-time requirements of commercial platforms. Compared to user authentication experiments, human-machine identification is faster and more accurate, reducing user perception and improving the security of private data. As the number of sample sets increases, the time consumed for evasion attack detection increases linearly.

**Table 8: Time Efficiency**

| Sample Set                    | Time Spent  | Time Efficiency  | Content               |
|-------------------------------|-------------|------------------|-----------------------|
| Training dataset (9000 samples)| 15.17s      | 1.69ms           | Feature calculation   |
| Test dataset (100,000 samples) | 143.50s     | 1.44ms           | Feature calculation   |
| Shen[16] Dataset (165238 samples)| 222.75s | 1.3ms            | Feature calculation   |
| Consolidated dataset (274238 samples)| 2894.15s | 53ms  | Evasion attack detection |
| Consolidated dataset (274238 samples)| 21382.58s | 147ms | Evasion attack detection |

### 7. Discussion
Machine behavior in mouse sliding includes many attack modes. This paper analyzes human-mouse sliding behavior on existing datasets, classifying machine behavior into five attack modes and analyzing their characteristics. However, learning specific attack mode characteristics may have limitations. To improve model robustness, it is necessary to learn more attack modes and extract strong classification features. Dimensionality reduction and fitting the model yield better classification results than learning from specific attack mode features.

Human-machine identification validation is time-sensitive, and using advanced classification models can increase time consumption. Extra time consumption is unacceptable if the increase in accuracy is not significant. Evasion attack detection can lead to false positives in datasets over 100,000 levels, and the time consumed increases linearly. Regularly refreshing the comparison database can alleviate this issue.

### 8. Conclusion
This paper compares the behavior of machine-controlled mouse sliding with real human behavior, identifies different attack models, and discusses their characteristics. After extracting features based on physical quantity information of the sliding path, we select features with good classification effects using model scores and those with high Pearson correlation. When collecting mouse sliding data, missing data can be a problem. We use the XGBoost model as a classifier because it specifies branch directions for missing values, effectively handling sample data missing issues. Evaluating models on real datasets and validating generalization capabilities on an open dataset, experiments show that XGBoost can achieve 99.09% detection accuracy and 99.88% recall with fewer features. Our study also found human and machine-mimicked human behavior samples in two similar tracks, suggesting the use of evasion attacks. We present an evasion detection method that meets the requirements for efficient evasion attack verification. Experiments show that the proposed methods can effectively detect evasion attacks.

Mouse sliding detection can serve as an additional intrusion detection method. In practice, it can be used alongside other user identity authentication technologies to judge the security of access behavior.

### Acknowledgments
This research was funded by Ant Financial through the Ant Financial Science Funds for Security Research.

### References
[References listed as provided]

---

This optimized version aims to enhance clarity, coherence, and professionalism while maintaining the original content and structure.