识别业务应用的部署方式和应用配置信息等，上线前对安全风险问题进行分类、汇聚，智能匹配知识库风险问题处理方案，提供的安全检测风险评估报告，为运维人员提供风险规避意见或建议,
确保业务应用无安全漏洞和其他安全风险，确保业务整体运行环境安全。
##### 2.1.1.3.3运维操作风险检测
人为指令操作可能造成系统风险。通过预定义高风险层级指令集、挖掘出导致故障发生的关键指令和根据依赖关系得到直接或间接被指令影响所关联的应用服务，当再次发现该类操作执行在还未导致严重后果前发出警告，减少或消除因操作不当而延迟出现的严重故障。基于网管数据，通过Naïve
Bayes算法计算出其风险值再结合用户其它特征比例权重，最后输出用户操作命令风险值，通过风险排序找出风险人员并进行技术培训。
#### 2.1.1.4 故障预测
##### 2.1.1.4.1 Timesten故障预测（新）
随着云化推进，系统规模变得更庞大复杂，主机、数据库、进程、业务等数量成倍增加，运行性能指标更是以几何倍数增长，运维人员从单一的指标波动趋势及告警情况难以了解系统运行健康全貌，需要从主机、数据库、应用、业务等多维度进行系统整体健康度的综合评估，timesten作为连接oracle数据库和应用的缓存组件，一旦服务出错，将影响业务访问oracle数据库的能力，造成不好的客户感知。因此，基于Timesten的缓冲区命中率、数据库连接数百分比、实例内存使用率等指标，通过OCDT异常检测算法，构建相关性能指标的预测模型，并且输出未来一段时间的性能指标预测数据，针对现网数据进行特征分析，快速排查问题，缩短故障时间，避免业务故障蔓延。
##### 2.1.1.4.2开源软件故障预测（新）
开源软件作为消息处理、数据计算、数据存储的应用组件，正在被广泛的应用于各业务系统，一旦服务出错，将影响业务服务能力和客户感知，而实时的故障预测成为提升业务服务健壮性的迫切需求。因此，基于开源软件的内存、CPU、线程数等性能指标历史数据，通过Prophet时序预测算法和TextCNN卷积神经网络等算法，构建相关性能指标的预测模型，并且输出未来一段时间的性能指标预测数据，根据预测结果，结合计扩缩规则，生成优化报告，优化建议及推荐值，提升故障预测成功率。
##### 2.1.1.4.3容器故障预测（新）
随着容器云的普及，IT系统的各种应用部署于容器化环境中，应用系统的不断叠加以及业务井喷式的增长，容器平台的稳定运行越来越重要，如何在问题发生前对平台故障有效的预测，是亟需解决的问题。基于容器平台的pod的CPU使用率、内存使用率数据，通过Prophet算法，分析指标序列的周期、趋势等特征，根据特征拟合指标的时序曲线并预测，从而提升容器平台监控的及时性、准确性。
##### 2.1.1.4.4调用链故障预测（新）
随着业务系统逐步向微服务架构演进，生产环境日益复杂，技术栈多，技术组件复杂，服务数量激增以及服务间的灵活调用，使得微服务架构下的监控运维工作面临人工配置不可达、故障定位更复杂的问题。因此需要从全链路角度出发，基于业务调用链的调用关系数据、关键节点性能数据，通过决策树算法，推理、定位引发某一服务故障的可能根因，实现业务调用链的智能故障预测。
##### 2.1.1.4.5主机故障预测（新）
物理机和虚拟机是现网主要的基础设施资源，主机故障数量大，影响范围广。如何在故障发生前、故障发生的初级阶段即可对故障进行发现、干预，是故障发现需要重点解决的问题。依据对主机性能数据，利用Holt-Winters算法，通过时序指标预测结合数据统计分布，提前发现异常点，结合异常事件聚合规则，实现故障提前发现，跑赢租户报障。
##### 2.1.1.4.6 业务量风险预测
随着业务模式的不断发展，公司对外提供了上千个业务，同时又收到月度、年度周期、节假日等因素的影响，导致业务类的监控告警准确率一直很低。因此，基于业务交易量、成功率、平均耗时等指标数据，通过
Prophet 算法，实现周期性拆解和预测，从而提升业务类监控的准确性。
### 2.1.2 事中保障
#### 2.1.2.1 异常检测
**2.1.2.1.1主机负载异常检测**
业务系统规模不断扩大，平台组件架构也越来越庞大，作为基础资源之一的主机数量也达到很高的数量级，上面承载的各业务系统之间存在着完全不同的特点，导致各业务系统对主机等资源。因此，基于主机
Disk_io_util、CPU_util_pct、 CPU· \_iowait_time、 Disk_await
等核心基础指标，通过 LSTM
时间序列拟合算法，实现对海量主机负载的异常检测。
**2.1.2.1.2主机存储异常检测**
业务系统规模不断扩大，平台组件架构也越来越庞大，作为基础资源之一的主机数量也达随着业务数据量的增加，业务对存储空间的需要也逐渐增加，导致存储需要越来越大，即存储异常对业务系统的影响也随之放大，对存储状态的监控越来越重要。因此，基于主机磁盘的
IO 读写、空闲剩余等指标数据，通过 LSTM
时间序列拟合算法，实现对存储主机的异常检测。
**2.1.2.1.3 主机网络异常检测**
分布式系统中，业务对网络的稳定性需要也逐渐增加，网络异常对业务系统的影响也随之放大，对主机网络状态的监控越来越重要。根据业务系统各主机之间的数据流向，建立各主机之间的网络链路资源，通过熵值法计算链路健康对业务系统网络健康影响权重，快速识别网络异常。
##### 2.1.2.1.4主机异常行为检测（新）
几乎所有恶意软件，包括0Day攻击等，攻击进行时都会表现出一些异常行为。基于异常行为的检测需要根据文件、进程等指标信息，基于主机系统的系统日志和审计记录等指标数据，通过Isolation
Forest 算法、3-sigma
离群点判别算法对主机异常数据进行检测，实现主机行为检测功能。
**2.1.2.1.5 应用程序内存异常检测**
通过应用实例日志 OOM 类标签日志聚合监测，并结合实例 JVM各类 GC
指标，通过 Text -CNN
模型对应用日志进行特征提取、分类，判定应用实例溢出情况，最终联动自动化平台进行实例重启，全程无人为干预实现故障自愈。
**2.1.2.1.6应用程序数据库连接异常检测**
第三代支撑系统 was 集群被广泛应用，连接数的增加，极易造成集群中 server
线程池或数据库连接池已满的情况，影响前台业务受理。因此，基于应用 jdbc
连接数指标，通过回归预测算法（AR、 MA、ARMA
等），实现应用连接数据库连接异常的检测。
**2.1.2.1.7应用日志异常检测**
日志分析是应用运维监控的强有效手段，当前的检测手段比较单一，随着应用日志规模增长，格式愈发复杂，当前手段无法快速处理并检测异常。建立语料库，将应用日志经过分析和处理后录入语料库，通过特征码提取，实现日志数据的清洗，筛选错误日志，对每条错误日志预测相应的错误日志码标签，建立错误日志标签库。结合人工经验的训练样本对错误日志做标签标注，对标签库的错误日志标签进行二次确认，提升标签的准确性，利用标签库实现日志的异常检测，预测业务异常问题。
**2.1.2.1.8应用类指标异常检测**
随着 IT
技术的不断发展，各类应用开源组件的使用越来越广泛，而应用类的许多性能指标往往与业务波动呈现正相关性，传统的固定阈值设置已经无法适应海量应用类指标的监控。因此，基于海量应用性能指标（如耗时、线程数、报错量等），通过长短期记忆网络
LSTM算法，实现对海量指标数据异动的自动检测，提升对应用类波动型指标的监控准确性。
**2.1.2.1.9数据库异常连接检测**
随着容器化的大规业务系统规模不断扩大，用进程连接数突增达到数据库连接上线，导致新业务无法连接和数据库因业务连接数突增已无空闲连接将导致集群间联通异常等问题频发。因此，基于数据库连接数分布指标，通过孤立森林算法，实现对数据库中异常的连接来源进行检测，提升运维的干预能力。
**2.1.2.1.10数据库异常 sql 检测**
传统的以预防为中心的数据库安全机制存在不足，容易受到许多劣质 sql
的使用，影响整体数据库的运行安全。因此，基于数据库
sql执行日志、执行计划、性能数据等指标，通过 ARIMA 和 Prophet
预测模型，建立基线对比，实现对异常 sql
的快速检测锁定，为自动查杀提供目标对象。
**2.1.2.1.11数据库 hang 快速分析**
业务高峰期等场景下，数据库性能短时间内负载压力过大，出现hang
住的风险。以数据库资源信息、预警信息以及 Systemstate
Dump日志为基础，引入相关分析算法，提前通过对可能造成系统故障的各种因素（包括服务器、应用软件、网络环境、人为因素等）进行分析，从而确定系统故障原因的各种可能组合方式及其发生概率，并采用决策树的方式，确认故障解决方案，提高故障处理及时率。
**2.1.2.1.12数据库异常操作检测**
现有的数据库安全防护策略或工具难以有效防范内部攻击。通过从海量无标注的历史日志中提取特征，运用无监督学习算法训练得到用户（或用户群体）绝大部分正常行为的概率密度分布，若新操作低于概率密度判定阈值则判定为异常，及时预警。
**2.1.2.1.13数据库类指标异常检测**
数据库作为 IT
系统的核心组件，提供了面向业务的数据操作和管理能力，同时其性能往往跟随业务高低峰期而变化，导致数据库类很多性能指标数据难以监控。因此，基于数据库的性能指标数据，通过AR、MR、ARIMA
等回归拟合算法，实现对指标的基线预测，从而实现差分监控，提升数据库类指标的监控准确性。
**2.1.2.1.14 REDIS 异常检测**
Redis
在项目中的应用场景越来越多，租户的需求量也日益增多从而集群数不断增长，如果集群中的节点出现异常没能及时处理，会直接影响整个
Redis 的性能，从而影响用户的体验。因此，基于 Redis 主机性能指标、 Redis
集群状态信息、命中率、连接数、连通性等指标数据，通过回归预测算法和
DBSCAN 的异常检测算法，有效提升 Redis的异动检测的准确率。
**2.1.2.1.15服务接口异常检测**
SOA
架构和微服务架构之后，系统功能实现转变为一系列的服务接口的编排组合，通常包含数千个服务接口，当接口性能耗时出现逐步恶化对现网系统而言往往变成灰犀牛事件，导致故障的发生。因此，为了实现对大量微服务接口的性能恶化自动监测分析，基于服务接口的耗时和调用量指标数据，通过岭回归算法，实现恶化趋势的预测判断，从而为运维的接口治理提供决策支撑。
**2.1.2.1.16 MQ 异常检测**
微服务架构中，各个中心间基本上都通过 MQ
进行消息传递，如果某一个消息传递的环节出问题，就会影响整个系统的稳定性。因此，基于
MQ 主机的性能指标、 MQ
集群状态数据、队列数据、消费速率、生产速率等指标数据，通过时间序列的异常检测算法
S-H-ESD，实现对 MQ 的异常检测能力。
**2.1.2.1.17 容器日志异常检测**
随着容器化的大规模应用，动态环境内容器中应用运行健康状态难以监测，日志分析成为最为核心的分析抓手。因此，基于容器内应用日志数据，通过
TextCNN 神经网络模型，实现文本日志的数据分类。