strategies differ only in the two terms involving pi and pj, respectively ipi + jpj and ipj + jpi. If
pj = pi + δ, then
ipi + jpj = (i + j)pi + δj > (i + j)pi + δi = ipj + jpi.
It is then clear that by successive swaps such as this one, we can construct a permutation π on {1, 2, . . . , B}
such that pπ(1) ≥ pπ(2) ≥ ··· ≥ pπ(B). Since none of these swaps increase the expectation, the ﬁrst
claim holds.
Next, we show that ∆(cid:48) ≤ ∆. Any deduplication strategy DS can be covered by one of the following
cases:
1. There are indexes 0  0.
Likewise, if pj  0.
It is clear that this operation can be applied repeatedly, eventually resulting in a strategy for which
the ﬁrst case does not apply, and for which the statistical distance is smaller than for DS.
1Note that in the published version of this paper [3] statistical distance was deﬁned to be twice the quantity here. Some
terms in the subsequent theorems are different under this standard notion but all results hold. We thank Hubert Ritzdorf for
pointing this out.
8
We have now shown that there is a sequence of permutations on {1, 2, . . . , B} that can be composed
into a permutation π such that the strategy DS(cid:48) = (pπ(1), . . . , pπ(B), 0, . . . ) is non-increasing and has no
greater statistical distance than DS.
2 pk = pk. The non-increasing strategy DS(cid:48) in the second
case has pπ(1) = pk. Then, we have ∆ = ∆(cid:48) = pk.
In the third case, it is trivial to show that
∆ = ∆(cid:48) = p1. In the fourth case, we have ∆ = ∆(cid:48) = pB. Then for any deduplication strategy, ∆(cid:48) ≤ ∆
holds.
In the second case, we have ∆ = 1
2 pk + 1
We now present our second theorem, which describes a lower bound on the value of ∆E for any
non-increasing deduplication strategy, in terms of the bound B. As may be expected, this shows that
there must be a trade-off between the security level ∆ and the efﬁciency E.
Theorem 2. Let DS(cid:48) = (p(cid:48)
and E(cid:48) be its corresponding values. Then B+1
B, 0, . . . ) be a non-increasing deduplication strategy, and let ∆(cid:48)
2, . . . , p(cid:48)
1, p(cid:48)
2B ≤ ∆(cid:48)E(cid:48).
Proof. First note that for the uniform deduplication strategy, ∆UEU = 1
2B . Our proof
strategy is to show that ‘evening out’ non-increasing strategies in a particular way so that they become
‘more uniform’ minimizes ∆· E. The idea here is to start at p1 and move rightwards: For the ﬁrst j such
that pj > pj+1, we set p∗
and show that invoking this procedure does
not increase the value of ∆ · E. If we apply this procedure incrementally we will eventually have the
uniform deduplication strategy DSU = ( 1
j+1 = (j−1)p1+pj+1
1 = ··· = p∗
2 = B+1
j
B , . . . , 1
B , 1
p(cid:48)
i = p(cid:48)
B , 0, . . . ). We start with a non-increasing strategy
i+1 + δi where δi ∈ [0, 1], ∀i ∈ {1, . . . , B}.
DS(cid:48) = (p(cid:48)
1, . . . , p(cid:48)
B, 0, . . . )
B · B+1
Let j be the ﬁrst index such that δj (cid:54)= 0 and deﬁne a new strategy as follows:
p1 − δj
j
pj+1 + (j−1)δj
pi
j
p∗
i =
if i ∈ {1, . . . , j},
if i = j + 1,
otherwise.
This process gives us a new deduplication strategy
1, . . . , p∗
DS∗ = (p∗
j+1, p(cid:48)
j+2, . . . , p(cid:48)
B, 0, . . . ).
We repeat this process until we have the uniform distribution, and will now show that each step does
not increase ∆ · E. Denote ∆old and ∆new as the statistical distance before and after each iteration
of the process described above respectively. We can calculate ∆new as follows. Observe that for any
non-increasing strategy, ∆ = p1. Then for invoking the above process at position r,
∆new = p∗
1 = ·(p1 − δr
r
) = ∆old − δr
r
.
9
Similarly for the expected threshold,
B(cid:88)
Enew =
i · p∗
i
i=1
= p∗
1 + ··· + r · p∗
r + (r + 1) · p∗
r+1 +
B(cid:88)
i=r+2
i · p∗
i
= (p1 − δr
r
) + ··· + r · (pr − δr
r
(r − 1)δr
)
+ (r + 1) · (pr+1 +
) +
r
B(cid:88)
i=r+2
i · p∗
i
(1 + 2 + ··· + r) +
(r + 1)(r − 1)
δr
r
(cid:21)
+ (r − 1)(r + 1)
B(cid:88)
i=1
=
(cid:20)
i · pi − δr
r
− r(r + 1)
δr
r
(r + 1)(r − 2)δr
2
.
= Eold +
= Eold +
(cid:20)
2r
∆old − δr
r
(cid:21)
·
(cid:20)
= ∆old · Eold +
This means that
∆new · Enew =
(cid:21)
(r + 1)(r − 2)δr
Eold +
(r + 1)(r − 2)δr
2r
· ∆old
2r
− δr
r
· Eold − δ2
r
2r2 (r + 1)(r − 2)
and thus if we want to show that the process minimizes the value of ∆ · E then we need to show that
∆new · Enew − ∆old · Eold ≤ 0, or equivalently
(r + 1)(r − 2)δr
· Eold − (r + 1)(r − 2)δ2
To show this, note that since δr ∈ (0, 1] and r ∈ N+ we can multiply by 2r2
· ∆old − δr
r
2r2
2r
:
r
δr
≤ 0
r(r + 1)(r − 2)∆old − 2rEold − (r + 1)(r − 2)δr ≤ 0.
(1)
Now we use the fact that ∆old = p1 and
B(cid:88)
Eold =
ipi
r(cid:88)
i=1
= p1 +
ip1 + (r + 1)pr+1 +
B(cid:88)
i=r+2
ipi
B(cid:88)
B(cid:88)