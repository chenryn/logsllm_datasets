the transactions wrongly as unsuccessful. Interestingly, these
transactions can be reissued when a new iteration of the routing
protocol is done. At that point, new transaction paths are
calculated and the transaction can be successfully carried out.
Given the efﬁciency of available distributed BFS algorithms
and that we use the same routing technique as Canal [62] and
Privpay [47], SilentWhispers achieves the same recall value.
Moreover, transactions wrongly tagged as unsuccessful can be
reissued so that they are eventually successfully performed.
Handling ofﬂine users. When a user is ofﬂine and goes back
online, she must retrieve from landmarks the updates of her
credit links. Then the user must verify that all changes on her
credit links have been correctly performed by the landmarks
(see Section VI-A).
In order to study the impact of this extension, we have
extracted the number of updates performed over credit links
of Ripple users. We have randomly selected 100 Ripple users
and checked how many transactions involve their credit links
over a period of a month (i.e., June 2014). We observe that a
maximum of 107 updates are performed over the credit links
of a user. In principle, the user must check each update as
many times as the number of landmarks, but this task can be
parallelized. For each update performed by a given landmark,
the user must verify the update and its signature, which can
be performed in less than 5 ms. Therefore, even if a user is
ofﬂine for a period of a month, it will take her about 500 ms
to restore her information and check its authenticity.
Moreover, as described in Section VI-A, landmarks must
check that the share of the transaction value issued by the
sender is indeed smaller than the capacity of the path. For
that purpose, landmarks carry out the less than operation as a
multiparty computation protocol using the two shared values
as input. This modiﬁcation implies an overhead of only 0.330
seconds assuming honest-but-curious landmarks and 21.132
seconds in the presence of malicious landmarks.
Finally, landmarks must sign new link states on behalf
of ofﬂine users using the shares of their signing keys. For
efﬁciency, this task can be performed using distributed Schnorr
signatures [58] so that the time to compute a signature is
similar to the creation of a single signature by each landmark,
and thus can be computed efﬁciently. Therefore, the overall
time for the transaction operation in the presence of ofﬂine
users is still dominated by the computation of the credit
available in the path (i.e., about 1.3 seconds).
Handling malicious landmarks.
For handling malicious
landmarks, we need to incorporate SMPC protocols secure
against malicious adversaries. In the transaction protocol, the
landmarks are conﬁned to the computation of the minimum
value of the path, whose execution time in the malicious case
is shown in Table I. In a setting with 7 landmarks out of
which 3 are corrupted, the computation of the minimum of two
values takes 21.457 seconds. This implies that computation
of the minimum credit
in a path takes approximately 86
13
seconds. Notice that the employed SMPC library does not yet
incorporate the recent signiﬁcant advancements in the SMPC
domain [18], [20], [34], [36]. It employs the older SMPC
paradigm [10], [28], and with an improved library, we expect
at least an order of magnitude improvement in the performance
of our maliciously secure SMPC executions.
We believe that the resulting running time is still practical
in most of the scenarios. For example, it still allows one
to signiﬁcantly speed up intercontinental
transactions that
currently take up to several days. Nevertheless, we believe
that the extension to malicious landmarks is interesting from
a theoretical point of view, but not worth to be implemented
in practice since landmarks have no incentive in misbehaving,
as discussed in Section III-A.
VIII. RELATED WORK
The problem of enforcing privacy-preserving transactions
in a credit network has recently been studied by Moreno-
Sanchez et al. [47]. They leverage the use of trusted hardware
to enforce the privacy of the transacting parties and the
transacted value by accessing the credit network information
by means of an oblivious RAM algorithm. In contrast
to
this work, they target a centralized approach, where a unique
server stores the complete credit network. Such a solution is
hardly applicable to real-life payment systems (e.g., Ripple
and Stellar), since it would require them to change their
hardware infrastructure to incorporate trusted hardware. Also,
the centralized design of [47] is in inherent
tension with
the distributed nature of consensus algorithms used in Ripple
and Stellar, and it is unclear who should play the role of
the central server running the trusted hardware. Moreover,
the centralized architecture of [47] may constitute a severe
problem for scalability, since transactions are handled by a
single secure processor and thus cannot be easily parallelized.
Mezzour et al. [41] propose a path-discovery technique that
computes a hash tree connecting users that share a credit link.
To ﬁnd a path between two users, they compute the private set
intersection of the set of hashed values they hold. A path exists
between two users if the intersection set is non-empty. This
technique does not allow to reconstruct the path connecting
sender and receiver in a private manner, and it omits the
concept of credit by considering unweighted links, two features
that are crucial for credit networks.
Backes et al. [8] present the concept of Anonymous Webs
of Trust, which includes a mechanism to prove the existence of
a path of trust certiﬁcates among the sender and the receiver
in zero-knowledge such that intermediate trust relationships
remain private for third parties. This approach, however, relies
on a server maintaining all the trust certiﬁcates, which must
be publicly available, thus breaking link privacy.
There is an extensive literature on privacy-preserving on-
line social networks [9], [17], [32], [49]. Intuitively, an object
(e.g., tweet) is secured such that only friends of the object’s
owner can access it while remaining private for the rest of
users. In a credit network however, a given credit link is
potentially accessed by any user connected through a credit
path. Therefore, the owner of a link cannot establish in advance
an access policy to a given link other than the most permissive
one, i.e., everybody is allowed to access it.
14
There exist several proposals to construct privacy preserv-
ing payments in Bitcoin based on zero-knowledge proofs [11],
[42], centralized mixing [12], decentralized mixing [54], [61],
SMPC [25], conﬁdential
transactions [40] and smart con-
tracts [35], [64]. These proposals, however, are not applicable
to the inherently different credit network setting: Bitcoin does
not use the concept of credit link and thus there is not a
credit network among Bitcoin users. SilentWhispers enables
credit network operations such as path ﬁnding and payment
path updates in a privacy preserving manner while ensuring
correctness (e.g., no double spending): each intermediate user
veriﬁes that her total balance is preserved after each payment.
Wu et al. [63] present a protocol to compute the shortest
path in a privacy-preserving manner based on private informa-
tion retrieval (PIR) in a centralized setting. Employing their
techniques in a decentralized network does not seem feasible,
if even possible.
IX. CONCLUSIONS
In this work, we presented SilentWhispers, the ﬁrst privacy-
preserving distributed credit network. SilentWhispers achieves
a number of privacy properties (i.e., sender, receiver, link,
and value privacy), preserves the correctness of transactions,
and provides an accountability mechanism to enforce the
correctness of link updates. Use of highly connected and
readily available nodes such as gateways in Ripple is a crucial
ingredient to make our system efﬁcient, robust, and scalable.
We implemented the cryptographic schemes employed in
SilentWhispers and demonstrated through an experimental
evaluation the practicality of our approach for real-life payment
systems. In particular, we showed that our solution allows for
fast transactions and scales to a growing number of users.
Moreover, we discussed how SilentWhispers can be used
to instantiate currently available applications based on credit
networks on a distributed manner. Finally, SilentWhispers
demonstrates that a privacy-invasive public ledger is not nec-
essary for the secure instantiation of a credit network.
Acknowledgments: We would like to thank the anonymous
reviewers for their valuable feedback and our shepherd Erman
Ayday for his comments and suggestions. This work was par-
tially supported by the German Federal Ministry of Education
and Research (BMBF) through the Emmy Noether program
and through funding for the Center for IT-Security, Privacy and
Accountability (CISPA) and by the German Research Founda-
tion (DFG) via the collaborative research center “Methods and
Tools for Understanding and Controlling Privacy” (SFB 1223).
REFERENCES
[1]
[2]
[3]
http://crypsys.mmci.uni-saarland.de/projects/
“Local Exchange Trading System,” http://tinyurl.com/zea59ob.
“Reliable Transaction Submission,” http://tinyurl.com/zdgdlkm.
“SilentWhispers
site,”
DecentralizedPrivPay/.
“Stellar website,” https://www.stellar.org/.
“MPC Shared Library,” http://smpc.ml/, 2015.
[4]
[5]
[6] F. Armknecht, G. Karame, A. Mandal, F. Youssef, and E. Zenner, “Rip-
ple: Overview and outlook,” in Trust and Trustworthy Computing’15.
[7] B. Awerbuch, “Reducing complexities of the distributed max-ﬂow and
breadth-ﬁrst-search algorithms by means of network synchronization.”
Networks, 1985.
[8] M. Backes, S. Lorenz, M. Maffei, and K. Pecina, “Anonymous webs
of trust,” in PETS’10.
[9] F. Beato, M. Conti, B. Preneel, and D. Vettore, “Virtualfriendship:
Hiding interactions on online social networks,” in CNS’14.
[10] M. Ben-Or, S. Goldwasser, and A. Wigderson, “Completeness theorems
for non-cryptographic fault-tolerant distributed computation (extended
abstract),” in STOC’98.
[11] E. Ben-Sasson, A. Chiesa, C. Garman, M. Green, I. Miers, E. Tromer,
and M. Virza, “Zerocash: Decentralized anonymous payments from
bitcoin,” in S&P’14.
J. Bonneau, A. Narayanan, A. Miller, J. Clark, J. A. Kroll, and E. W.
Felten, “Mixcoin: Anonymity for bitcoin with accountable mixes,” in
FC’14.
[12]
[13] R. Canetti, “Universally composable security: A new paradigm for
cryptographic protocols,” in FOCS’01.
[14] ——, “Universally composable signature, certiﬁcation, and authentica-
tion,” in CSFW’04.
[15] R. Canetti, Y. Lindell, R. Ostrovsky, and A. Sahai, “Universally com-
posable two-party and multi-party secure computation,” in STOC ’02.
[16] O. Catrina and S. de Hoogh, “Improved primitives for secure multiparty
integer computation,” in SCN’10.
[18]
[17] L. Cutillo, R. Molva, and T. Strufe, “Safebook: A privacy-preserving
online social network leveraging on real-life trust,” IEEE Communica-
tions Magazine, 2009.
I. Damg˚ard, M. Keller, E. Larraia, V. Pastro, P. Scholl, and N. P. Smart,
“Practical covertly secure MPC for dishonest majority - or: Breaking
the SPDZ limits,” in ESORICS’13.
I. Damg˚ard and C. Orlandi, “Multiparty computation for dishonest
majority: From passive to active security at low cost,” in CRYPTO’10.
I. Damg˚ard, V. Pastro, N. P. Smart, and S. Zakarias, “Multiparty
computation from somewhat homomorphic encryption,” in CRYPTO’12.
[21] P. Dandekar, A. Goel, R. Govindan, and I. Post, “Liquidity in credit
networks: a little trust goes a long way.” in ACM Conference on
Electronic Commerce, 2011.
[19]
[20]
[22] D. DeFigueiredo and E. T. Barr, “TrustDavis: A Non-Exploitable Online
Reputation System,” in E-Commerce Technology’05.
[23] R. Dingledine, N. Mathewson, and P. Syverson, “Tor: The Second-
generation Onion Router,” in USENIX’04.
[24] Y. Dinitz, “Dinitz’s Algorithm: The Original Version and Even’s Ver-
sion,” in Theoretical Computer Science, 2006.
[25] K. El Defrawy and J. Lampkins, “Founding digital currency on secure
computation,” in CCS ’14.
[26] L. R. Ford and D. R. Fulkerson, “Maximal Flow through a Network.”
Canadian Journal of Mathematics, vol. 8, 1954.
[27] R. Fugger, “Money as IOUs in Social Trust Networks & A Proposal
[Online].
for a Decentralized Currency Network Protocol,” 2004.
Available: http://archive.ripple-project.org/decentralizedcurrency.pdf
[28] R. Gennaro, M. O. Rabin, and T. Rabin, “Simpliﬁed VSS and fact-track
multiparty computations with applications to threshold cryptography,”
in PODC’98.
[29] A. Ghosh, M. Mahdian, D. M. Reeves, D. M. Pennock, and R. Fugger,
“Mechanism Design on Trust Networks,” in WINE’07.
[30] A. V. Goldberg and R. E. Tarjan, “A New Approach to the Maximum-
ﬂow Problem,” J. ACM, vol. 35, no. 4, pp. 921–940, 1988.
[31] E. Holley, “Earthport launches distributed ledger hub via Ripple,” 2016,
http://tinyurl.com/hdygnab.
[32] S. Jahid, S. Nilizadeh, P. Mittal, N. Borisov, and A. Kapadia, “Decent:
A decentralized architecture for enforcing privacy in online social
networks,” in (PERCOM Workshops) 2012.
[33] A. M. Kakhki, C. Kliman-Silver, and A. Mislove, “Iolaus: securing
online content rating systems,” in WWW’13.
[34] M. Keller, P. Scholl, and N. P. Smart, “An architecture for practical
actively secure mpc with dishonest majority,” in CCS’13.
[35] A. Kosba, A. Miller, E. Shi, Z. Wen, and C. Papamanthou, “Hawk:
The blockchain model of cryptography and privacy-preserving smart
contracts,” Cryptology ePrint Archive, Report 2015/675, 2015.
15
[36] Y. Lindell, B. Pinkas, N. P. Smart, and A. Yanai, “Efﬁcient con-
stant round multi-party computation combining BMR and SPDZ,” in
CRYPTO’15.
[37] A. Liu, “Implementing the interledger protocol in ripple,” 2015, http:
//tinyurl.com/gtf6dpj.
[38] ——, “Santander: Distributed Ledger Tech Could Save Banks $20
Billion a Year,” 2015, http://tinyurl.com/zwhkoln.
[39] S. Makki, “Efﬁcient distributed breadth-ﬁrst search algorithm,” Com-
puter Communications, vol. 19, no. 8, pp. 628 – 636, 1996.
[40] G. Maxwell, “Conﬁdential Transactions, Content privacy for Bitcoin
transactions,” Post on Bitcoin Forum, http://tinyurl.com/zvdr6q2.
[41] G. Mezzour, A. Perrig, V. Gligor, and P. Papadimitratos, “Privacy-
Preserving Relationship Path Discovery in Social Networks,” in
CANS’09.
I. Miers, C. Garman, M. Green, and A. D. Rubin, “Zerocoin: Anony-
mous distributed e-cash from bitcoin,” in S&P ’13.
[42]
[43] T. Minkus and K. W. Ross, “I Know What You’re Buying: Privacy
Breaches on eBay,” in PETS’14.
[44] A. Mislove, A. Post, P. Druschel, and K. P. Gummadi, “Ostra: Lever-
aging Trust to Thwart Unwanted Communication,” in NSDI’08.
[45] A. Mohaisen, N. Hopper, and Y. Kim, “Keep your friends close:
Incorporating trust into social network-based Sybil defenses,” in IN-
FOCOM’11.
[46] A. Mohaisen, H. Tran, A. Chandra, and Y. Kim, “Trustworthy dis-
tributed computing on social networks,” in ASIACCS’13.
[47] P. Moreno-Sanchez, A. Kate, M. Maffei, and K. Pecina, “Privacy
preserving payments in credit networks: Enabling trust with privacy
in online marketplaces,” in NDSS’15.
[48] P. Moreno-Sanchez, M. B. Zafar, and A. Kate, “Listening to whispers
of ripple: Linking wallets and deanonymizing transactions in the ripple
network,” in PETS’16.
[49] S. Nilizadeh, S. Jahid, P. Mittal, N. Borisov, and A. Kapadia, “Cachet:
A decentralized architecture for privacy preserving social networking
with caching,” in CoNEXT’12.
[50] B. Parno, “Bootstrapping trust in a ”trusted” platform,” in HotSec’08.
[51] A. Post, V. Shah, and A. Mislove, “Bazaar: Strengthening User Repu-
tations in Online Marketplaces,” in NSDI’11.
[52] P. Rizzo, “Japan’s SBI Holdings Teams With Ripple to Launch New
Company,” http://tinyurl.com/jaartry.
[53] ——, “Royal Bank of Canada Reveals Blockchain Trial With Ripple,”
2016, http://tinyurl.com/zw48e3c.
[54] T. Rufﬁng, P. Moreno-Sanchez, and A. Kate, “Coinshufﬂe: Practical
decentralized coin mixing for bitcoin,” in ESORICS’14.
[55] C.-P. Schnorr, “Efﬁcient signature generation by smart cards,” J. Cryp-
tol., 1991.
[56] A. Shamir, “How to share a secret,” Commun. ACM, 1979.
[57]
J. Southurst, “Australia’s Commonwealth Bank Latest to Experiment
With Ripple,” 2015, http://tinyurl.com/pt9gpnv.
[58] D. R. Stinson and R. Strobl, “Provably secure distributed schnorr
signatures and a (t, n) threshold scheme for implicit certiﬁcates.” in
ACISP’01.
[59] C. Tryfonopoulos, P. Raftopoulou, V. Setty, and A. Xiros, “Towards
content-based publish/subscribe for distributed social networks,” in
DEBS’15.
[60] P. F. Tsuchiya, “The Landmark Hierarchy: A New Hierarchy for
Routing in Very Large Networks,” SIGCOMM’88.
[61] L. Valenta and B. Rowan, “Blindcoin: Blinded, accountable mixes for
bitcoin,” in FC 2015.
[62] B. Viswanath, M. Mondal, K. P. Gummadi, A. Mislove, and A. Post,
“Canal: Scaling Social Network-based Sybil Tolerance Schemes,” in
EuroSys ’12.
[63] D. J. Wu, J. Zimmerman, J. Planul, and J. C. Mitchell, “Privacy-
preserving shortest path computation,” in NDSS’16.
[64] G. Zyskind, O. Nathan, and A. Pentland, “Enigma: Decentralized
computation platform with guaranteed privacy,” 2015, http://arxiv.org/
abs/1506.03471.