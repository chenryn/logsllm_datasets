push
e81
ebx
:Str
: Size
.text:00541386
Pesh
ca11
_frite
: write encrypted file
-text:0054138C
push
ca11
_felose
ed1
:F11e
-text:005413F1
.text:0054132
push
ca11
_free
ebx
: Memory
-text:00541387
add
-text:005413FA
text:005413FB
pop
pop
ed1
.text:005413Fc
ebx
031
.text:005413FD
pop
,text:005413FE
pop
ebp
-text:005413rE crypt_file
retn
endp
.text:005413FE
text:005413FP
align 10h
-text:00541400***
,text:00541400
-text:00541400
S U B R O U T I N E
text:00541400  int _cdecl decrypt_file (char *Fi1enane, int, void *Sre)
,text:00541400
.text:00541400 decxypt_fi1e
proc near
1 COOE XREF: _nain+6E
.text:00541400 F11ename
.text:00541400
.text:00541400 axg_4
= dword ptr 4
.text:00541400 Src
= dvord ptr
= dword ptr
0Ch
8
.text:00541400
.text:00541400
.text:00541404
nov
push
ebx
eax,
.text:00541405
push
-text:00541407
-text:00541406
push
push
ed1
---
## Page 286
762
逆向工程权威指南（下册）
text :00541408
push
offset aRb
1 *rb*
text:00541408
text:00541400
push
ca11
eax
_fopen
text:00541413
mov
esi, e4x
text:00541415
add
esp, 8
text:00541418
test
e8i, esi
.text:0054141A
jn2
offset aCannotOpenIn_0 : *Cannot open input file!\n*
short 1oc_541428
-text:0054141C
push
text:00541421
text100541426
Tteo
add
-Printf
.text:00541429
pop
esp,
edi
4
text:0054142A
pop
es1
.text:00541428
text:0054142C
pop
pop
dqa
-text:00541420
retn
ebx
text:00541428
-text: 0054142E 1oc_541428:
 CODE xBEF: decrypt_file+1A
text:0054142E
text :00541430
push
push
2
0
: Origin
text:00541432
push
1Pi1e
; offset
e81
-text :00541433
-text:00541438
ca11
_fseek
push
Tsa
 File
text:00541439
ca11
_fte11
-text:00541440
text:0054143E
push
0
: Origin
push
0
;offset
-text:00541442
push
-text:00541443
es1
: Fi1e
text :00541445
ca11
ebp, esx
text:0054144A
push
ebp
_fseek
_na11oc
1 Size
-text:00541448
ca11
text :00541450
push
e81
: File
.text:00541453
text:00541451
AOU
push
1
ebx,
eax
ebp
:Count
text :00541455
push
; ElenentSize
-text:00541457
text:00541456
push
ca11
_fread
ebx
}DstBuf
text :0054145C
push
esi
; File
.text :00541462
text :00541450
ca11
add
_fclose
esp,
ecx,
34h
text :00541465
text:0054146A
mov
edi,
offset aQr9_0 : *gR9*
3
-text:0054146F
mOv
esi, ebx
text:00541471
xor
edx,
text:00541473
repe
crpsb
edx
-text: 00541475
offset aFileIsNotCxypt : *rile is not encrypted1\n*
short 1oc_541489
text :00541477
text:0054147C
push
ca11
add
-printf
text :00541484
edi
esp, 4
text:00541485
pop
dod
text:00541486
pop
es1
L81P500:3x94*
pop
text:00541488
text:00541489
retn
-text:00541489 1oc_541489:
 CODE xk&F: decrypt_f11e+75
-text:00541489
text:0054148D
mov
mov
eax,
ed1,
[esp+10h+Src]
add
ebp,
[ebx+3]
text:00541493
lea
[ebx+7]
text:00541496
(61P500:4x93*
push
push
eax
:Src
int
text:00541499
push
ca11
decrypt
int
text:00541498
mov
ecx, [esp+1Ch+arg_.4]
-text :005414A2
push
offset aWb_0
/“vb*
-text :005414A7
push
ecx
: FL1enane
---
## Page 287
6
“QR9"：魔方态加密模型
763
-text:005414A8
ca11
,text:005414AD
_fopen
.text:005414AF
ebp,
push
ebp
eax
: Fi1e
-text:00541480
push
1
size
; Count
-text:005414B2
-text:005414B3
push
push
edi
esi
:Str
,text:005414B4
ca11
_fwrite
-text:005414B9
push
ebp
:Fi1e
.text:005414BA
.text:0054138F
ca11
_felose
push
ca11
_free
ebx
J Memory
.text:005414c0
.text:005414c8
.text:005414c5
pop
add
esp,
edi
-text:005414C9
,text:005414CA
pop
es1
.text:005414CB
pop
pop
ebp
.text:005414cc
retn
ebx
-text:005414cc decrypt_file
endp
笔者在分析过程中逐步添加了各标签的名称。
我们从文件头开始分析。第一个函数读取两个文件名和一个密码：
-text:00541320 : int _cdecl crypt_file(int Str, char *Filename, int passvord)
-text:00541320 crypt_fi1e
.text:00541320
proc near
-text:00541320 Str
= dvord ptr 4
-text:00541320 password
-text:00541320 Fi1enane
2qd pzoxp =
= dvord ptr
text:00541320
OCh
如果不能成功打开明文文件，程序就会进行异常处理：
-text:00541320
nov
eax, [esp+Str]
.text:00541324
.text:00541325
push
push
offset Mode
dqa
; “rb*
.text:0054132A
push
eax
; F11ename
.text:00541330
-text:0054132B
ca11
_fopen
: open file
-text:00541332
mov
add
ebp,
esp,8
eax
test
-text:00541337
ebp, ebp
-text:00541339
push
jnz
short 1oc_541348
offset Fornat
}“Cannot open input file!\n*
-text:0054133E
ca11
-printf
-text:00541343
.text:00541346
pop
add
esp,4
ebp
-text:00541347
.text:00541348
pop
ebp
.text:00541348 1oc_541348:
通过fseekO/ftell0函数获取文件大小：
.text:00541348 push
text:00541349 push
ebx
.text:0054134A push
es1
.text:00541348 push
ed1
2
; Origin
.text:0054134D push
,text:0054134F push
0
ebp
/offset
918
: nove current file positios to the end
.text:00541350 ca11
.text:00541355 push
_fseek
.text:00541356 ca11
ebp
 get current file position
 Fi1e
text:00541358 push
0
_ftel1
:Origin
.text:00541350 push
.text:0054135F push
0
ebp
/ offset
.text:00541360 mov