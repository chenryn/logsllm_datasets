域之间的信任关系。虽然地理信任始终需要在 IdM 和 Active Directory
林的根域之间建立一个信任,但外部信任可以从 IdM 到林内的任何域建立。
:::
::: section
::: titlepage
# []{#planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management.html#trust-controllers-and-trust-agents_planning-a-cross-forest-trust-between-idm-and-ad}信任控制器和信任代理 {.title}
:::
身份管理 (IdM) 提供以下类型的 IdM 服务器，它们支持信任 Active Directory
(AD)：
::: variablelist
[信任控制器]{.term}
:   可针对 AD 域控制器执行身份查找的 IdM 服务器。他们还运行 Samba
    套件，以便他们能够与 AD 建立信任关系。AD 域控制器在建立并确认对 AD
    的信任时会联系信任控制器。AD-enrolled 机器为 Kerberos 身份验证请求与
    IdM 信任控制器通信。
    配置信任时会创建第一个信任控制器。如果您在不同地理位置有多个域控制器，请使用
    `ipa-adtrust-install`{.literal} 命令将 RHEL IdM
    服务器指定为这些位置的信任控制器。
    与信任代理相比，信任控制器运行更多的面向网络的服务，因此为潜在的入侵者提供了更大的攻击面。
[信任代理]{.term}
:   可以从 RHEL IdM 客户端针对 AD 域控制器解析身份查找的 IdM
    服务器。与信任控制器不同，信任代理无法处理 Kerberos 身份验证请求。
:::
除了信任代理和控制器外，IdM 域还可以包含标准的 IdM
服务器。但是这些服务器并不和 AD
进行通讯。因此，与这些标准服务器通信的客户端无法解析 AD
用户和组，也无法验证和授权 AD 用户。
::: table
[]{#planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management.html#idm139745626159104}
**表 7.1. 比较信任控制器和信任代理支持的功能**
::: table-contents
  功能                                          信任代理   信任控制器
  --------------------------------------------- ---------- ------------
  解析 AD 用户和组                              是         是
  注册运行来自可信 AD 的用户访问的 IdM 客户端   是         是
  添加、修改或删除信任协议                      否         是
  将信任代理角色分配给 IdM 服务器               否         是
:::
:::
在规划部署信任控制器和信任代理时，请考虑以下指南：
::: itemizedlist
-   每个 IdM 部署至少配置两个信任控制器。
-   在每个数据中心中至少配置两个信任控制器。
:::
如果您希望创建额外的信任控制器，或者现有信任控制器失败，请通过提升信任代理或标准服务器来创建新的信任控制器。要做到这一点，在
IdM 服务器中使用 `ipa-adtrust-install`{.literal} 工具。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
您不能将现有信任控制器降级到信任代理。
:::
:::
::: section
::: titlepage
# []{#planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management.html#one-way-trusts-and-two-way-trusts_planning-a-cross-forest-trust-between-idm-and-ad}单向信任和双向信任 {.title}
:::
在某种程度上，身份管理 (IdM) 信任 Active Directory (AD)，但 AD 不信任
IdM。AD 用户可以访问 IdM 域中的资源，但 IdM 中的用户无法访问 AD
域中的资源。IdM 服务器使用特殊帐户连接到 AD，并读取随后通过 LDAP 传送到
IdM 客户端的身份信息。
对于双向信任，IdM 用户可以向 AD 验证，AD 用户可向 IdM 验证。AD
用户可以对 IdM
域中的资源进行身份验证并访问，就像信任案例的一种方式一样。IdM
用户可以进行身份验证，但无法访问 AD 中的大多数资源。它们只能在 AD
网站访问不需要任何访问控制检查的 Kerberized 服务。
为了授予对 AD 资源的访问权限，IdM
需要实施全局目录服务。这个服务还不存在于当前 IdM 服务器版本中。因此，IdM
和 AD 之间的双向信任几乎相当于 IdM 和 AD 间的单向信任功能。
:::
::: section
::: titlepage
# []{#planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management.html#con_kerberos-fast-for-trusted-domains_planning-a-cross-forest-trust-between-idm-and-ad}可信域的 Kerberos FAST {.title}
:::
Kerberos 灵活身份验证安全隧道(FAST)也称为活动目录(AD)环境中的 Kerberos
armoring。Kerberos FAST 为客户端与密钥分发中心(KDC)之间的 Kerberos
通信提供额外的安全层。在 IdM 中，KDC 运行在 IdM 服务器上，FAST
会被默认启用。IdM 中的双因素身份验证(2FA)也需要启用 FAST。
在 AD 中，AD 域控制器(DC)上默认禁用 Kerberos
armoring。您可以使用以下组策略设置在域控制器上启用它：
::: itemizedlist
-   计算机配置，
-   策略，
-   管理模板，
-   系统，
-   KDC，
-   KDC 支持声明、复合身份验证和 Kerberos armoring。
:::
策略设置允许以下选项：
::: itemizedlist
-   \"Not supported\"，
-   \"Supported\"，
-   \"Always provide claims\"，
-   \"Fail unarmored authentication requests\"。
:::
Kerberos FAST 在 IdM 客户端的 Kerberos 客户端库中实现。您可以将 IdM
客户端配置为对所有发布 FAST 的可信域使用 FAST 或根本不使用 Kerberos FAST
。如果您在可信 AD 林中启用了 Kerberos armoring，则 IdM 客户端默认使用
Kerberos FAST。FAST
通过密钥的帮助建立起一个安全隧道。为了保护到可信域的域控制器的连接，Kerberos
FAST 必须从可信域获得跨领域的票证授予票(TGT)，因为该密钥只在 Kerberos
领域中有效。Kerberos FAST 使用 IdM 客户端的 Kerberos 主机密钥来在 IdM
服务器的帮助下请求跨领域的 TGT。这只在 AD 林信任 IdM
域时才可以正常工作。这意味着需要双向信任。
如果 AD 策略需要强制使用 Kerberos FAST，则需要在 IdM 域和 AD
林间建立双向信任。您必须在连接建立之前规划此项，因为 IdM 和 AD
端必须有方向和信任类型的记录。
如果您已建立单向信任，则下一次运行
`ipa trust-add …​ --two-way=true`{.literal}
命令会删除现有的信任协议并重新创建它。这需要使用管理凭据。由于 IdM
尝试从 AD 中删除现有的信任协议，因此需要具有对 AD
访问的管理员权限。如果您使用共享的机密而不是 AD
管理帐户建立原始信任，那么它会以双向方式重新创建信任，并只在 IdM
一侧更改可信的域对象。Windows 管理员必须通过选择双向信任并使用 Windows
UI 来重复相同的流程，并使用同样的共享机密来重新创建信任。
如果无法使用双向信任，则必须在所有 IdM 客户端上禁用 Kerberos FAST。可信
AD 林中的用户可以通过密码或直接智能卡进行身份验证。要做到这一点，请在
sssd.conf 文件中的 \[domain\] 部分中添加以下设置：
``` literallayout
krb5_use_fast = never
```
请注意，当验证是基于 ssh-keys、GSSAPI 身份验证或 使用远程 Windows
客户端的智能卡进行 ssh 时，您不需要使用此选项。这些方法不使用 Kerberos
FAST，因为 IdM 客户端不必与 DC 进行通信。另外，在 IdM 客户端上禁用 FAST
后，双因素验证 IdM 功能也不可用。
:::
::: section
::: titlepage
# []{#planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management.html#con_posix-and-id-mapping-id-range-types-for-ad-users_planning-a-cross-forest-trust-between-idm-and-ad}AD 用户的 POSIX 和 ID 映射 ID 范围类型 {.title}
:::
身份管理(IdM)根据用户的 POSIX 用户 ID(UID)和组
ID(GID)强制实行访问控制规则。但是，活动目录(AD)用户是由安全标识符(SID)标识的。AD
管理员可以配置 AD 来存储 AD 用户和组的 POSIX 属性，如
`uidNumber`{.literal}、`gidNumber`{.literal}
、`UNIXHomeDirectory`{.literal} 或 `loginShell`{.literal}。
您可以通过使用 `ipa-ad-trust-posix`{.literal} ID range
建立信任，来配置跨林信任引用此信息：
``` literallayout
[server ~]# ipa trust-add --type=ad ad.example.com --admin administrator --password  --range-type=ipa-ad-trust-posix
```
如果您没有在 AD 中存储 POSIX
属性，则系统安全服务守护进程(SSSD)可以根据在称为 [**ID 映射**]{.strong}
的进程中用户的 SID 来一致地映射一个唯一的 UID。您可以通过使用
`ipa-ad-trust`{.literal} ID range 创建信任来明确地选择此行为：
``` literallayout
[server ~]# ipa trust-add --type=ad ad.example.com --admin administrator --password  --range-type=ipa-ad-trust
```
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
如果您在创建信任时没有指定 ID Range 类型，IdM 会尝试通过在林根域中请求
AD 域控制器的详情来自动选择适当的范围类型。如果 IdM 没有检测到任何 POSIX
属性，则信任安装脚本会选择 `活动目录域`{.literal} ID 范围。
如果 IdM 在林根域中检测到任何 POSIX 属性，则信任安装脚本会选择
`带有 POSIX 属性的 ID 范围的 活动目录域`{.literal}，并假定 AD
中正确配置了 UID 和 GID。如果 AD 中没有正确设置 POSIX 属性，您将无法解析
AD 用户。
例如，如果需要访问 IdM
系统的用户和组不是林根域的一部分，而是位于林域的子域中，则安装脚本可能不会检测到子
AD 域中定义的 POSIX 属性。在这种情况下，红帽建议您在创建信任时明确选择
POSIX ID 范围类型。
:::
::: itemizedlist
**其他资源**
-   [为 AD
    用户自动映射私有组的选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/planning_identity_management/planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management#ref_options-for-automatically-mapping-private-groups-for-ad-users_planning-a-cross-forest-trust-between-idm-and-ad){.link}
:::
:::
::: section
::: titlepage
# []{#planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management.html#ref_options-for-automatically-mapping-private-groups-for-ad-users-posix_planning-a-cross-forest-trust-between-idm-and-ad}自动为 AD 用户映射私有组的选项：POSIX 信任 {.title}
:::
Linux 环境中的每个用户都有一个主用户组。Red Hat Enterprise
Linux(RHEL)使用用户私有组(UPG)模式：UPG
与其创建的用户的名称相同，并且该用户是 UPG 的唯一成员。
如果您已为 AD 用户分配了 UID，但没有添加 GID，您可以通过调整该 ID 范围的
auto_private_groups 设置来根据其 UID 将 SSSD
配置成自动为用户映射私有组。
默认情况下，auto_private_groups 选项对于 POSIX 信任中使用的
`ipa-ad-trust-posix`{.literal} ID ranges 被设为 false。使用此配置，SSSD
会从每个 AD 用户条目中检索 `uidNumber`{.literal} 和
`gidNumber`{.literal}。
::: variablelist
[auto_private_groups = false]{.term}
:   SSSD 将 `uidNumber`{.literal} 值分配给用户的 UID，将
    `gidNumber`{.literal} 分配给用户的 GID。AD 中必须存在具有此 GID
    的组，否则无法解析该用户。下表显示了您是否能够根据不同的 AD 配置解析
    AD 用户。
    ::: table
    []{#planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management.html#idm139745617886560}
    **表 7.2. 当 POSIX ID 范围的 `auto_private_groups`{.literal}
    变量设为 `false`{.literal} 时 SSSD 的行为**
    ::: table-contents
    +----------------------------------+----------------------------------+
    | AD 中的用户配置                  | `id username`{.literal} 的输出   |
    +:=================================+:=================================+
    | AD 用户条目有：                  | SSSD 无法解析用户。              |
    |                                  |                                  |
    | ::: itemizedlist                 |                                  |
    | -   `uidNumber`{.literal} = 4000 |                                  |
    | -   `gidNumber`{.literal} 未定义 |                                  |
    | -   在 AD 中没有                 |                                  |
    |     `gidNumber`{.literal} = 4000 |                                  |
    |     的组。                       |                                  |
    | :::                              |                                  |
    +----------------------------------+----------------------------------+
    | AD 用户条目有：                  | SSSD 无法解析用户。              |
    |                                  |                                  |
    | ::: itemizedlist                 |                                  |
    | -   `uidNumber`{.literal} = 4000 |                                  |
    | -   `gidNumber`{.literal} = 4000 |                                  |
    | -   在 AD 中没有                 |                                  |
    |     `gidNumber`{.literal} = 4000 |                                  |
    |     的组。                       |                                  |
    | :::                              |                                  |
    +----------------------------------+----------------------------------+
    | AD 用户条目有：                  | `# id                            |
    |                                  |  PI:EMAIL`{.literal} |
    | ::: itemizedlist                 | `uid=4000(adus                   |
    | -   `uidNumber`{.literal} = 4000 | PI:EMAIL)gid=4000(adgrou |
    | -   `gidNumber`{.literal} = 4000 | PI:EMAIL)groups=4000(adgr |
    | -   AD 有 `gidNumber`{.literal}  | PI:EMAIL), …​`{.literal} |
    |     = 4000 的组。                |                                  |
    | :::                              |                                  |
    +----------------------------------+----------------------------------+
    :::
    :::
:::
如果 AD 用户没有在 AD 中配置的主组，或者其 `gidNumber`{.literal}
不对应于现有的组，则 IdM
服务器将无法正确解析该用户，因为它无法查找用户所属的所有组。要临时解决这个问题，您可以通过将
`auto_private_groups`{.literal} 选项设为 `true`{.literal} 或
`混合`{.literal} 来在 SSSD 中启用自动私有组映射：
::: variablelist
[`auto_private_groups = true`{.literal}]{.term}
:   SSSD 始终映射设置了 `gidNumber`{.literal} 的私有组，以匹配 AD
    用户条目中的 `uidNumber`{.literal}。
    ::: table
    []{#planning-a-cross-forest-trust-between-idm-and-ad_planning-identity-management.html#idm139745514083136}