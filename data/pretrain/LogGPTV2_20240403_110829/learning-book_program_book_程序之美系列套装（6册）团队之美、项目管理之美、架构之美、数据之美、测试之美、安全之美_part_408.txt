仅在正常（善意）操作时会产生大量的活动，而且有许多操作是相
当的复杂。我们的项目网站列出了当前的白名单。
在生成百名单时所花费的大量时间使我们意识到反病毒研究社区很
少把自己的成果与公众共享。因此，当我们设法确认假阳性时，我
们把自己的结果与公众共享，使每个人都可以理解对于一种特定的
操作系统（例如WindowsXP）而言什么是“正常"行为。
不可思议的是，即使是熟练的安全研究人员也觉得确认系统上的一
个状态改变是否为恶意事件是件非常困难的事。如果经验丰富的研
究人员也滩以区别好坏，我们怎么能够期望Internet上的其他用户能
够知道得更多呢？这也是目前客户端的漏洞攻击非常普遍的原因之
一。
8.4.2Honeyclient数据的存储和关联
在早期开发第1代原型的时候，我意识到Honeyclient技术背后的真正
价值之一是漏洞数据库和它可以生成的被动持网站。这个数据库将
存储与每个Honeyclient韧持相关联的信息，包括文件系统的改变、
注册表键的修改以及远程Web服务器被Honeyclient访问时发生的进程
执行。这个数据库记录了当这些系统变化发生时所访问的URL，并
包括一个时间戳，标记这些事件是什么时候发生的。并发队伍的成
员MatBriggs接手了实现漏洞攻击数据库的任务。
2362
---
## Page 2364
在开发漏洞攻击数据库的过程中，我们意识到可能需要存储与漏洞
攻击本身并无关联的其他信息，例如被劫持映像的VMware标识号。
我们还希望能够在这个数据库中存储Honeyclient所驱动的应用程序
的相关信息。例如，用企6和企7访问一个网页时很可能会得到不同
的结果。（我们的原型现在也支持MozillaFirefox浏览器。）使用基
于WindowsXP的Honeyclient和基于WindowsVista的Honeyclient很可
能也会得到不同的结果。我不想进一步展开到其他可能性，例如驱
动不是基于HTTP的应用程序。这个数据库允许我们存储所有与不同
的环境和结果相关的信息，并允许我们对不同OS环境中驱动不同应
用程序所产生的结果进行关联。
简而言之，我们的数据库不断成长。它不仅仅是个漏洞攻击数据
库，还应该被称为Honeyclient数据库。
这向我们提供了另一个理由，为什么采用模块化的Honeyclient体系
结构是个很好的思路。由于我们按照模块进行开发，因此可以允许
用户决定把哪个应用程序发送到Intermet上，
8.5漏洞攻击的分析
现在，让我们讨论在操作Honeyclient时所发现的一些有趣的恶意软
件，并讨论在检测它们时所遇到的困难。
大多数恶意软件都受到经济利益的驱动。因此，我们看到大量新的
计算机内。我们经常看到的另一种类型的恶意软件是银行未马，它
允许攻击者访问受害者的在线银行账户资格证书。此外我们甚至看
到过政治利益驱动的恶意软件，攻击者通过在用户的桌面上安装和
（或）显示HTML文件，以便宣传他们的政治主张。
在我们所看到过的恶意软件中，其中最有趣的也许是那个能够检测
到我们正在使用VMware、然后在几秒内关闭访客操作系统的恶意软
件。大量的恶意软件能够检测像VMware这样的虚拟平台。是否还存
在其他的Honeyclient实现，能够利用不同的虚拟化平台？这个问题
将在8.6节讨论。
当我在过去儿年里从总体上探索客户端漏洞攻击时，我很清楚地意
识到攻击者都是极端的机会主义者。当前客户端漏洞攻击的主要目
2363
---
## Page 2365
标是Microsoft的IE6浏览器，但这个情况可能随市场而变化。许多人
问我，是不是改用MozillaFirefox浏览器更好一点。我的回答差不多
总是类似的：“确实如此。但是要记住，如果世界上的每个人都使用
Firefox，就会出现大量把目标瞄准Firefox浏览器的漏洞攻击。"换句
话说，不要以为使用Firefox就可以免受这类攻击。用户仍然需要保
持一点老练，不要随便点击来路不明的链接。
对反病毒软件有什么看法呢？直到我们开始用Honeyclient捕捉大量
的恶意软件的时候，我们才真正意识到反病毒行业所面临的任务是
多么的艰巨。首先，大多数反病毒产品是以签名为基础的，这意味
着反病毒公司要隔离每个攻击，并找到一个嵌入的字节字符串集
合，能够唯一地标识这个攻击。由于它们的产品是基于签名的，因
此反病毒厂商需要在某个层次上理解攻击的原理，以便检测到攻
击。开发一个签名可能非常简单，就是针对恶意软件运行一个字符
串工具，提取它们之中都出现的特定唯一的一个字符事。开发一个
签名也可能非常复杂，涉及许多复杂的搜索。但是，签名的开发并
不是本章的焦点，如果读者对这个话题感兴趣，可以参阅其他关于
这个话题的书籍口。
要为每个新的攻击都开发签名并跟上所有这些攻击的步伐是极为困
难的。注意，我在这里所说的是新的恶意软件变型，而不仅仅是新
的漏洞攻击。每天都有数以千计的新恶意软件变型诞生，而反病毒
公司所拥有的资源数量却是有限的。因此，我们用Honeyclient所捕
捉的大量恶意软件在主要的反病毒公司那里并没有得到很好的检
测。被积压下来的有待开发的签名数量极为庞大，有时候导致反病
毒公司在发现新的恶意软件之后又过了几周才实际并发它的签名。
这样，它们的用户就没有得到及时的保护。更有甚者，有些恶意软
件一直就没有开发出有用的签名。
我们的项目所缺乏的东西之一就是专业的恶意软件分析队伍。当前
我们并不拥有这些资源。当我们用Honeyclient捕捉恶意软件时，我
们通过文件系统修改、注册表键修改和进程执行的形式得到了实用
的信息。我们甚至提供了一个模块，当攻击发生时它在Honeyclient
和远程Web服务器之间捕捉完整的网络流量包。但是，我们的原型
并不是自动化的恶意软件分析工具。这意味着我们无法自动对被捕
捉的恶意软件进行逆向工程，以确定与这种恶意软件相关的更多信
息。当我们捕捉到新的恶意软件时，我们能够采取的方式是使用诸
如VirusTotal.com（http://www.virustotal.com）这样的工具扫描恶意软
件。VirusTotal使我们能够对Honeyclient所捕捉的恶意软件有个大概
2364
---
## Page 2366
的了解。VirusTotal在后端管理反病毒扫描工具，这些扫描工具都用
最新的检测签名进行了更新。图8-3显示了一种典型的通过VirusTotal
接口对恶意软件所进行的扫描。
我们可以看到，只有极少数的反病毒产品对这个文件产生了怀疑。
显然，这个恶意软件被隐蔽了。隐蔽是恶意软件作者所使用的一种
流行技巧，用于绕过反病毒扫描，避免安全研究人员对恶意软件本
身展开进一步的分析。这就是为什么图中有些反病毒厂商把这个恶
意软件加上了"Pakes"名称的标签。这就意味着这个恶意软件被隐
蔽，反病毒扫描程序无法使它现形或者对这个恶意软件进行解包。
图8-3VirusTotal对恶意软件扫描的输出
[1]我特别喜欢的一本书是Peter Szor的《TheArtofComputerVirus
Research andDefense》（Symantec Press）。
8.6当前Honeyclient实现的限制
2365
---
## Page 2367
Honeyclient的检测并不是完美的。在信息安全领域，没有任何解决
方案能够及时防止100%的攻击。如果你遇到有人在这方面夸下海
口，你就要提高警惕。在操作我们的Honeyclient原型时，我们发现
了它的一些限制。如果一个恶意网站在针对Web浏览器客户发动攻
击之前插入一个延迟，Honeyclient就无法检测到这个攻击。这是由
Honeyclient的操作方式所决定的，在网页内容被渲染并且没有检测
到可疑的修改后，Honeyclient就会转移到下一个URL。
许多网站提供了横幅式广告，我们知道有些攻击者购买了横幅广告
空间并把恶意代码嵌入到活动广告中。活动广告基于JavaScript或
Flash技术，并不需要用户点击广告就能显示动态内容。因此，用户
的计算机可能被这类活动广告利用Web浏览器的漏洞而被劫持。任
何网站都可能包含这类广告，包括我们熟悉并信任的流行网站。我
们的Honeyclient原型能够检测这些恶意厂告，而且我们在操作时已
经检测到了这些广告。但是，如果我们和其他用户同时访问一个网
站，我们所看到的广告可能和其他用户所看到的不同。因此，当恶
意软件嵌入在循环播放的广告中时，Honeyclient就难以检测。当前
我们致力于更精确地检测网页中导致攻击的特定组件。如果能够做
到这一点，就可能会帮助我们确认哪些广告公司更容易把广告租给
恶意方。
当我们测试第2代Honeyclient原型时，我们遇到了大量需要用户交互
和确认才能执行和劫持计算机的恶意软件。这种类型的恶意软件可
能是可执行（.exe）格式，点击这种.exe链接将会导致WindowsIE浏
览器询问用户是否允许安装或下载这个.exe文件。对于这种询问，我
们很难（至少在当前）开发出一种自动的“确定"或“下载”点击机
制。因此，我们意识到Honeyclient的主要目标是检测由下载所驱动
的恶意软件，而不是经过用户的允许才能执行的恶意软件。由下载
所驱动的恶意软件并不是所有客户端攻击的主体，但它们更为微妙
（一般的用户很难阻止），在未来的数年中，它们将会进一步流
行。
8.7相关的工作
尽管Honeyclient相对于honeypot、反病毒和入侵检测系统（IDS）而
言是一项相对较新的技术，但当前至少出现了好几个独立的
Honeyclient项目。各种不同的Honeyclient的开发目的各不相同，但大
多数把注意力集中在检测恶意网站上。
2366
---
## Page 2368
当我开始着手第1代的开源Honeyclient时，Microsoft也在开发
Honeyclient（他们称之为Honeymonkey）。Microsof和我各自平行地
开发Honeyclient，直到我完成了第1个原型时才知道Microsof也在开
发Honeyclient，对方也是如此。遗憾的是，我无法从Microsof那里获
得Honeymonkey的内部信息，Honeymonkey并没有提供太多与实现细
节有关的信息口。作为研究人员，我认为不管怎么强调与研究同一
种技术的其他人交流的重要性也不为过。有些与我有过交谈的人们
对这个问题感到疑惑。一方面，如果他们分享自己的思路，也许可
以会发现其他对这个想法有所考虑的人，这样有助于对自己原先的
思路进行优化。另一方面，他们担心一旦披露了自己的想法，其他
人可能会剽窃他们的思路。但我相信很少会有人抱着这种异想天开
的想法，甚至不认为世界上真正会有这样做的人。到了最后，抱有
保密想法的人最终会发现其他人也抱着同样的想法，甚至比他们走
得更远！即使某个人首先想到了什么，他也可能失去申请有些专利
的机会，因为他不想与任何人交流而导致无法完善自己的思路。
许多反病毒公司操作软件的方式与Honeyclient相似，主要是为了收
集恶意软件以便后面的签名开发。在大多数情况下，这些反病毒公
司更倾向于讨论恶意软件特征而不是Honeyclient技术。我和Websense
的DanHubbard谈论过他们所操作的Honeyclient。RobertDanford也是
一位Honeyclient研究人员，他实现了Pezzonavante Honeyclient[2]。通
过以前与Robert的谈话，我知道他的主要精力放在收集恶意软件，在
更可能短的时间内收集尽可能多的URL。这是一种有效的方法，但
它牺牲了确定导致攻击的特定URL的准确性。
2005年下半年，DublinCity大学的AidanLynch和DaraghMurray在我原
先的开放源代码的Honeyclient的基础上开发了一个新的扩展。Lynch
和Murray的扩展允许用户使用Outlook收取电子邮件URL，并把它们
发送回Honeyclient。这就允许Honeyclient用户使用电子邮件作为URL
的另一来源。他们还添加了一个特性，允许对新衍生的进程进行完
整性检查。他们的源代码当前位于我们的4台服务器之一[3]。
ThorstenHolz通过他在GermanHoneynet项目上的工作接触了
Honeyclient技术。Honeynet项目把Honeyclient称为“客户端的
honeypot"，这主要是因为他们是honeypot技术的先驱者之一。由于传
统的honeypot是服务器端的，因此他们将选择“客户端"这个术语表示
他们的其他honeypot。但是，通过过去几年里与许多人的交谈，我注
意到很多人把Honeyclient和honeypot混为一谈，尽管这两项技术所处
2367
---
## Page 2369