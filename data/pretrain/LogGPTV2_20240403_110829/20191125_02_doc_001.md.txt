# PostgreSQL 12 新特性概览

## 目录
- PG 12 重点新特性
- 风向标

## 重点新特性

### PostgreSQL 12
#### 性能增强
- **AM接口**：增强了访问方法（Access Method, AM）的性能。
- **分区表性能提升**：显著提高了大量分区表的性能，例如1000个分区的表性能提升了469倍。
- **GiST索引包含任意数据组织存储**：支持在GiST索引中包含任意列，以优化查询性能。
- **Btree索引重复键存储优化**：通过按ctid排序存储重复键值，减少了索引页分裂，提高了查询效率，并降低了存储空间。
- **自定义统计信息支持多列MCV**：改进了多列最常见值（Most Common Values, MCV）的统计信息，提高了查询的选择性评估。

### PostgreSQL 11+
#### 高性能
- **自动计算并行度**：几乎线性地提升了复杂查询的性能，覆盖了表扫描、索引扫描、SQL过滤、JOIN、子查询等多个方面。
- **平均提速20倍+**：无需修改SQL语句，即可实现大幅性能提升。包括聚合、自定义函数、分区表、外部表、自定义聚合和函数、排序、建表、物化视图和创建索引等操作。

### 接口
- **AM接口**：提供了更多扩展性和灵活性。

### 存储引擎扩展
- **zedstore（列存）**：引入了列存储引擎。
- **zheap（支持回滚段）**：增强了对事务的支持。

### 索引包含
- **痛点**：
  - 数据离散存储导致查询时IO多、查询慢、内存占用高、memcpy效率低。
  - 聚集存储只有一种形态，二级索引效率低。
- **解决方案**：
  - PostgreSQL 11 支持 Btree 索引包含。
  - PostgreSQL 12 支持 GiST 索引包含。
  - 示例：`CREATE INDEX idx_t1_1 ON t1 (id) INCLUDE (c1, c2, c3, info, crt_time);`

### Btree 索引重复键存储优化
- 按 ctid 排序存储重复键值，减少索引页分裂，提高查询效率，降低存储空间。
- 在 vacuum 时，更高效地回收垃圾元组，减少 WAL 日志量。

### 自定义统计信息支持多列 MCV
- 改进了多列最常见值的统计信息，提高了查询的选择性评估。

### 功能
- **Reindex Concurrently**：并发重建索引，不阻塞写操作。
- **日志采样**：支持 `log_statement_sample_rate` 和 `log_transaction_sample_rate`，灵活控制日志记录。
- **SQL/JSON Path Language**：新增 `jsonpath` 类型，支持更复杂的 JSON 查询。
- **Generated Columns**：支持生成列。
- **Case-insensitive and Accent-insensitive Grouping and Ordering**：支持大小写不敏感和重音不敏感的分组和排序。
- **Checksum Offline 修改**：支持在线开关校验和。

### 风向标
- **PG DNA**：模块化设计，易于扩展。
- **社区化开源数据库**：有组织有纪律的社区运作。
- **Major Sponsors 组成**：确保数据库的健壮性。
- **底盘**：可靠性、安全性、SQL 兼容性、可用性、易用性和生态。

### 大环境
- **拥抱开源**：全球化趋势。
- **自主可控**：适应本土化需求。

### 风向与机会
- **RAC**：分布式架构。
- **NewSQL**：新型关系型数据库。
- **垂直化市场功能**：针对特定行业的需求。
- **SaaS**：企业资源规划（ERP）等应用。
- **工具生态**：同步、迁移等工具。
- **Support 和培训**：提供全面的技术支持和培训服务。

### 数据库秒杀活动
- **阿里云**（12.25~12.27）：[点击参与](https://www.aliyun.com/database/miaosha)

感谢您的阅读！