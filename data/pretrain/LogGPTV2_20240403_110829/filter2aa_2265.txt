数据安全杂谈（⼀）
本⽂发表于赛博回忆录。
前⾔
随着数据安全提上安全的⽇常，⼤家其实可以发现，传统的那种堆叠安全设备的防护⽅式是⼀个低效
的，不太实⽤的⼀种防护⼿段。
所以防护的重⼼发⽣了偏移
⼀个公司的安全建设随着防护的重⼼发⽣偏移，从⽽导致安全建设的中⼼也发⽣了偏移
痛
其实⼀个企业在做企业级的安全建设的时候，都会存在⼀些相应的痛点问题，这些痛点的解决随时随
地，都牵涉着⼀个安全团队的安全建设的进度。
这样单独总结出来⼤家可能觉得，这并不是痛点啊？下⾯我就⼀⼀解释⼀下这些痛点！
1、资源有限
预防性的安全建设资源有限
已经建设的业务投⼊⽅⾯资源有限
已经发布的产品线
资源有限
时间不够
能⼒不⾜
没有⼈负责的业务
2、时间不够
业务都完成不了（为什么要sdl、修漏洞）
3、能⼒不⾜
缺少安全设计能⼒和优秀的开发⼈员
安全解决⽅案五花⼋⻔，没有统⼀的安全架构设计
过多的安全投⼊会影响业务（或者安全⼒度过⼤，会根本上影响业务）
这个或许就是⼀个甲⽅的安全建设过程中⾯临的很多问题，那么在这么多的问题下，现在的⼤多数甲⽅
的安全模式是什么呢？
安全模式
近⼏年，其实攻防的热度⾮常⾼，催⽣了⼀批很多攻防能⼒极致的⼯程师们，当然在⼀个⽅⾯如果有极
致的能⼒，并不是不好的，⽽证明⼀个⼈的在某个领域的专注程度，但是从⼀些⽅⾯，我们也可以了解
到现在的⼤多数的安全其实就在这种攻防的体制下进⾏安全建设的，流量监控、⽇志审计等等设备。
攻防模式
攻防模式其实是⼀种消防员的救⽕模式，哪⾥有出现⽕灾就去把灭⽕，⼀个庞⼤业务体量的安全甲⽅， 
哪⾥出现了⼀个靶标，就去把那个漏洞修掉。这种模式有⼀个有利的地⽅是效果很直接，感官上很明
显，今天发现⼏个⾼危、明天打了⼏个补丁。但是这种⻓期救⽕的模式，会让⼀个安全部⻔陷⼊⻓期的
持久战中，有的⼈乐此不疲，⽽有的⼈已经身⼼疲惫。尤其是红队和蓝队在⻓久的拉锯战中，内卷⼗分
严重。
事后救⽕型模式！
说到底，就是渗透测试等这些安全防护的⼿段永远都是在做⼀个事后救⽕的操作，可能其中挖掘漏洞的
成果还局限在渗透测试⼯程师的经验和能⼒上，所以我们的解决⽅法是什么？