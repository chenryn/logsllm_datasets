in HTTP headers, 48–49 Sun Microsystems, 129
in URLs, 29 SVG (Scalable Vector Graphics), 83,
server address, in URLs, 26–27 121–122
server port, in URLs, 27  tag (HTML5), 122
server response codes, 54–56 synchronous XMLHttpRequest, 146
server-side code, common problems syntax-delimiting characters, in URLs, 31
unique to, 265–266 “syntax error” message, retrieved file
server-side errors (500–599), 56 snippet in, 181
Service Unavailable error (503), 56
sessionStorage object (JavaScript), 148 T
Set-Cookie headers, 61
setters, in JavaScript, 103  tag (HTML), 83
SGML (Standard Generalized Markup tags, in HTML, 70
Langauge), 9 handling those not closed before end
shared workers, for background offile, 75
processes,258 interactions, 74–75
Shockwave Flash, 132 sanitization, 76
SHODAN, 203 target parameter, for  tag
showModalDialog() method, 217 (HTML), 79, 174–175
shttp: scheme, 36 taxonomy, 6–7
Simple Mail Transfer Protocol (SMTP), TCP/IP, HTTP and, 42
27, 44, 190 TCP (Transmission Control Protocol), 42n
sip: scheme, 36 connections via XMLSocket, 156
 parameter, 157 Temporary Redirect status code (307), 55
296 INDEX
testing, for Internet Explorer use, 112 Uniform Messaging Policy, 240
text/css document type, 118 Uniform Resource Locators (URLs), 23–40
text/csv document type, 198 browser processing, 29–31
text/html document type, 124 common schemes, 36–38
text message, sending to window with constructing based on user input, 40
valid JavaScript handle, 144 encoding, 31
text/plain document type, 118, 156, encoding data in fragment
200–201, 204, 212 identifiers,144n
TEXT token, 50 fully qualified absolute, 24
 tag (HTML), 72, 111 hiding with encapsulating protocols, 38
third-party applications, protocols claimed navigation based on tiers of schemes, 188
by, 36–37 resolution of relative, 38–39
third-party cookies, limitations, 192–194 structure, 24–31
threat evolution, 14–18 credentials, 26
cloud, 15 fragment ID, 28–29
nonconvergence of visions, 15–16 hierarchical file path, 27–28
user as security flaw, 14–15 indicator of hierarchical URLs, 25–26
Threats Against and Protection of Microsoft’s query string, 28
Internal Network (Microsoft), 5n scheme name, 24–25
three-step TCP handshake, 56 server address, 26–27
TIFF file format, 83 server port, 27
timer, in JavaScript, 101 UniformRequest API, 240
timing attacks, on user interfaces, 222–223 University of Illinois, 10
TLS (Transport Layer Security), 64 Unix services, listener process, 216n
_top, as link target, 80 unreserved characters, in HTML, 32
top-level domains, 152 unrestricted URL scheme, 188
toSource() method (JavaScript), 101 URLs (Uniform Resource Locators). See
toStaticHTML() API, 250–251, 253 Uniform Resource Locators (URLs)
toString() method (JavaScript), 101 URL-handling APIs, 133
TRACE method (HTTP), 53 URL-level proposals, 256–257
tracking, unscrupulous online, 193 url(...) pseudo-functions (CSS), 89
tragedy of the commons dilemma, 3 user
Transfer-Encoding: chunked scheme, 58 browsing habits, Referer header and, 51
Transmission Control Protocol (TCP). See collecting information about
TCP (Transmission Control Protocol) interaction, 184
Transport Layer Security (TLS), 64 as security flaw, 14–15
Trident parsing engine, 70n URL construction based on input, 40
Trusted sites zone, for Internet User-Agent request header, 43
Explorer,229 user content, markup filter for, 86
Turing, Alan, 3n user-controlled filenames in Content-
type parameter, for plug-in tag, 128 Disposition headers, 67
user data in HTTP cookies, 67
U user interfaces
browser extensions and, 161
UI spoofing attacks, and Flash, 132 notifications, 259
unauthenticated requests, by browser, 62 timing attacks on, 222–223
Unauthorized status error (401), 55, 62 username, in credentials portion
unhandled exception, in JavaScript, 100 ofURLs,26
Unicode, 33 UTF-7 charset, 78
decimal &#number; notation for, 77 UTF-8 charset, 33, 206
escaping method based on, 113 in HTTP headers, 50
JavaScript support, 112 UTF-16 charset, 78, 206
whitespace, 74n UTF-32 charset, 78
INDEX 297
V window.blur() function, 217n, 220
window.confirm() API, 218
valid scheme names, current list, 24
window.createPopup() API, 222
variables, declaration in JavaScript, 99
window.focus() method, 220
VBScript, 96
window handles, 175
vbscript: scheme, 37, 169–170
window.moveTo() method, 220
vertical tab, in HTML tag, 74
window.name property, of frames, 175
 tag (HTML5), 84, 119, 131
window.notifications API, 259
view-cache: scheme, 37
window.open() function, 111, 174–175, 217,
View > Encoding menu, 209
217n, 219, 222
view-source: scheme, 37
window.print() API, 218
Visual Basic, 10, 114, 130
window.prompt() API, 218
VoiceXML, 236
window.resizeTo() method, 220
windows
W anonymous, 175
creating new in browser, 217
W3C (World Wide Web Consortium),
and frame interactions, 174–181
12,70
positioning, 219–222
w3m, 10
window.showModalDialog() API, 217
WAP (Wireless Application Protocol
Windows Media Player, 119, 130, 132
suite), 123
Windows operating system, 10, 13
WBXML, 123n
window splicing, 220–221
WDP file format, 83
Windows Presentation Foundation,
Web, the. See World Wide Web
134,136
web 2.0, 12–13
Wireless Application Protocol
web applications
suite(WAP), 123
design issues, 263–265
Wireless Markup Language (WML), 123
vulnerabilities specific to, 262–263
WMF file format, 83
WebDAV, 54
WML Script (WMLS), and JavaScript, 123
WebGL, 131, 131n
WML (Wireless Markup Language), 123
Web Hypertext Application Technology
Worker API, 258
Working Group (WHATWG), 13
World Wide Web
WebKit parsing engine, 70n, 242
browser wars, 10–11, 233
character set inheritance, 209
history, 8–13
CORS in, 237, 239
threat of hostile takeover, 131
data: URLs in, 168
World Wide Web Consortium (W3C),
history.pushState() API, 256
12,70
Refresh redirection to javascript:, 170
creation of, 11
Strict Transport Security support, 248
Microsoft and, 239
Worker API, 258
worms, 12
XSS-detection logic, 251
WWW-Authenticate header, 62, 63
web page, prerendering, 258–259
wyciwyg: scheme, 37
web storage, same-origin policy mecha-
nism for, 148
WebRTC, 257 X
WebSocket API, 257
XAML (Extensible Application Markup
WebSQL API, 258
Language), 134
Western European code page
Xanadu, 9
(ISO-8859-1), 50
XBAP (XML browser applications), 135–136
WHATWG (Web Hypertext Application
XBL bindings, 89–90
Technology Working Group), 13
X-Content-Type-Options header, 208
whitelists, 226
X-Content-Type-Options: nosniff header, 203
whitespace, 74, 92
XDomainRequest API, 239–240, 253
window.alert() API, 218
X-Frame-Options header, 179–180, 243
298 INDEX
XHTML, 12
and HTML entities, 78
minimal fault-tolerance of parser, 73
named entities, 76
syntax, 70
XML (Extensible Markup Language)
and bandwidth, 123n
binary-only serialization, 123n
case of tags, 72
 blocks, 72, 78, 250
XML Binding Language files, 90
XML browser applications (XBAP),
135–136
XML documents
browser support, 119–124
generic view, 120–121
XMLHttpRequest API, 12, 54, 210, 236,
237–238
httponly cookies and, 150
same-origin policy mechanism for,
146–148
xmlns namespace, 72, 119
 directive, 88
XML User Interface Language (XUL),
122–123
XMLSocket, TCP connections via, 156
 tag (HTML), 72
XSRF (cross-site request forgery), 84,
190,262
exploitation of flaws, 190
login forms and, 145–146
XSS (cross-site scripting), 71, 262
bugs, and password managers, 228
exploitation of flaws, 190
filtering, 251–252, 253
XUL (XML User Interface Language),
122–123
XXE (External XML Entity) attack, 76
Z
ZIP files, extracting content from, 37
Zone.Identifier metadata, Internet Explorer
and, 231
zone model, for Internet Explorer,
229–231
INDEX 299
UPDATES
Visit http://nostarch.com/tangledweb.htm for updates, errata, and other
information.
More no-nonsense books from NO STARCH PRESS
A BUG HUNTER’S DIARY HACKING, 2ND EDITION THE IDA PRO BOOK,
A Guided Tour Through the Wilds The Art of Exploitation 2ND EDITION
ofSoftware Security by JON ERICKSON The Unofficial Guide to the World’s
by TOBIAS KLEIN FEBRUARY 2008, 488 PP. W/CD, $49.95 MostPopular Disassembler
NOVEMBER 2011, 208 PP., $39.95 ISBN 978-1-59327-144-2
ISBN 978-1-59327-385-9 by CHRIS EAGLE
JULY 2011, 672 PP., $69.95
ISBN 978-1-59327-289-0
METASPLOIT PRACTICAL PACKET PRACTICAL MALWARE
The Penetration Tester’s Guide ANALYSIS,2ND EDITION ANALYSIS
by DAVID KENNEDY, JIM O’GORMAN, Using Wireshark to Solve The Hands-On Guide to
DEVONKEARNS, and MATI AHARONI Real-World Network Problems DissectingMalicious Software
JULY 2011, 328 PP., $49.95
ISBN 978-1-59327-288-3 by CHRIS SANDERS by MICHAEL SIKORSKI and ANDREW HONIG
JULY 2011, 280 PP., $49.95 JANUARY 2012, 760 PP., $59.95
ISBN 978-1-59327-266-1 ISBN 978-1-59327-290-6
PHONE: EMAIL:
800.420.7240 OR PI:EMAIL
415.863.9900
WEB:
WWW.NOSTARCH.COM
“T horough and comprehensive coverage from one of the foremost The
experts in browser security.” — TAVIS ORMANDY, GOOGLE INC.
Tangled
Modern web applications are built on a tangle of Build mashups and embed gadgets without getting
Q
technologies that have been developed over time and stung by the tricky frame navigation policy
then haphazardly pieced together. Every piece of the
Embed or host user-supplied content without running
Q
web application stack, from HTTP requests to browser-
into the trap of content sniffing
side scripts, comes with important yet subtle security
Web
For quick reference, “Security Engineering Cheat Sheets”
consequences. To keep users safe, it is essential for
at the end of each chapter offer ready solutions to the
developers to confidently navigate this landscape.
problems you’re most likely to encounter. With coverage
In The Tangled Web, Michal Zalewski, one of the world’s
extending as far as planned HTML5 features, The Tangled
top browser security experts, offers a compelling
Web will help you create secure web applications to stand
A
narrative that explains exactly how browsers work A Guide to Securing Modern
the test of time. Guide
and why they’re fundamentally insecure. Rather than
dispense simplistic advice on vulnerabilities, Zalewski
ABOUT THE AUTHOR Web Applications
examines the entire browser security model, revealing to
weak points and providing crucial information for shoring Michal Zalewski is an internationally recognized Securing
up web application security. You’ll learn how to: information security expert with a long track record of
cutting-edge research. He is credited with discovering
Perform common but surprisingly complex tasks such
Q
hundreds of notable security vulnerabilities and
as URL parsing and HTML sanitization
Modern
frequently appears on lists of the most influential
Use modern security features like Strict Transport
Q security experts. He is the author of Silence on the
Security, Content Security Policy, and Cross-Origin
Wire (No Starch Press), Google’s “Browser Security
Resource Sharing Web
Handbook,” and numerous important research papers.
Leverage many variants of the same-origin policy to
Q
Applications
safely compartmentalize complex web applications
and protect user credentials in case of XSS bugs
THE FINEST IN GEEK ENTERTAINMENT™ “I LIE FLAT.”This book uses RepKover—a durable binding that won’t snap shut.
www.nostarch.com
Zalewski
$49.95 ($52.95 CDN) Shelve In: COMPUTERS/SECURITY
Michal Zalewski