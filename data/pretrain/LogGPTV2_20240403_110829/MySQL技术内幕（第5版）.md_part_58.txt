页面。当某个客户浏览器向Web服务器发送一个PHP页面请求时，PHP将执行在该页面里找到
可执行脚本嵌入Web页面里。这样，Web开发人员便可以很容易地编写出带有动态生成内容的
要成为一种通用语言，而是要成为一种专门编写Web应用程序的语言。PHP的API主要用于把
6.2.3PHP语言API
相关信息请参考附录H。
的功能。这是因为你应该知道这些功能是什么，只有这样，你才能决定是否要使用它们。更多
功能。在第8章你会发现，我基本没怎么避免使用这些MySQLDBD提供的、专属于MySQL
DBI机制，仍然是提高可移植性的有效途径。现在轮到你自己来决定要使用多少个不可移植的
面，有两个因素需要特别注意。
数据库有关的全部细节处理好。
如果要使用PostgreSQL或Oracle，则可以这样连接：
可以这样连接：
时候，因为，这时你必须指明选用哪种驱动程序来建立连接。例如，想要使用MySQL数据库，
改善了程序的可移植性，因为我们可以用一种统一的方式去访问各个数据库服务器。
$dbh=DBI->connect
在脚本编写方面，只有一种情况与特定服务器密切相关，即当你连接某个数据库服务器的
举一个不太重要但比较让人感兴趣的例子，你可以用一个脚本，把数据库内容的最新信息
与Perl语言一样，
口如果两个数据库系统具有不同的SQL实现，那么完全有可能出现这样的情况：为一个
在连接建立之后，就不用再引用任何特定的驱动程序了。
sabh=DBI->connect
$abh=DBI->connect
口1
管上述两个因素会潜在影响到DBI脚本的可移植性，但是以抽象方式提供数据库访问的
据库系统上使用时，整个工作会变得更加困难。
生影响。如果使用了这种功能，那么当想要把为MySQL编写的脚本，移植到其他的数
允许在查询结果里访问数据列的属性（如所有值的最大长度、是否为数字类型列等）
给定数据库系统特有的功能。例如，针对MySQL的DBD模块，便提供了这样的支持：
DBD模块经常会提供一些与数据库服务器特定相关的信息，以便让脚本开发人员使用
服务器上便无法正常工作。
如果所用的SQL依赖于服务器，那么用它编写的脚本也会依赖于这种服务器。例如，
通用性，那么用它们编写的脚本在数据库服务器之间也会有更好的可移植性。但是，
数据库服务器编写的SQL语句，另一个服务器理解不了。如果所用的 SQL具有较强的
他数据库服务器未必会提供这种类型的信息。这种DBD 特有的功能会对可移植性产
果某个脚本使用了MySQL特有的 SHOWVARIABLES 语句，那么此脚本在其他数据月
，PHP 也是一种脚本语言。与Perl语言不一样的是，PHP的设计目标不是
，用以确定当前的联盟成员人数，并且会把它报告给网站的访问者。
（"DBI:Pg：..."）;
（"DBI:mysql:...");
不管怎样，理论上应该如此。
。不过，在DBI脚本的可移植性方
。DBI和驱动程序自己会把与特定
6.2MySQL提供的API
225
多
H
库
---
## Page 246
能，
的各种因素，得出自己的结论。
MySQL程序的重要性，而另一位却认为，我应该不鼓励使用这种语言。请自己权衡本节所讨论
选择何种更合适。
和 PHP中的API功能进行对比，以便让你对它们的优点和缺点都有所了解，并且还会指明何时
6.3
的 PHP 脚本将使用PDO扩展模块来访问数据库。
的。这个扩展模块利用与DBI相类似的两层架构，提供了更加抽象的数据库系统接口。第9章
数的名字，与MySQL中C语言客户端开发库里实现该功能的那个函数的名字非常相似。
的那个C语言库所对应的接口。例如，在PHP脚本里，用来访问MySQL数据库的那个底层函
对不同服务器的接口。实际上，各个服务器的接口，看起来更像是为该服务器实现了底层API
数库都对应一种数据库服务器一
面的动态部分。
写普通HTML页面那样，先编写PHP脚本，搭建起页面的基本框架，然后再添加代码，生成页
226
PHP 实际上有多种类型的数据库接口。这些接口中包含的是一组底层的函数库，每一组正
一个页面可以包含任意多个代码段。这提供了一种极其灵活的脚本开发方法。例如，可以像编
_虽然我有自己偏好的语言，但我不会偏重于这三种语言中的任何一种语言。你可能会像本
本节提供的通用指南，可以帮助你为各种类型的应用选择合适的API。其中，将对C、DBI
在PHP里，比较像DBI的方法是由PHP数据对象（PHPData Object，PDO）扩展模块提供
但是，选用一种能让你快速开发应用程序的编程语言，可能也同样重要，哪怕应用程序的
请注意，这其中的一些因素是相互影响的。例如，你很想让编写的应用程序具有很高的性
PHP脚本一般看上去很像 HTML页面，只是在标签之间嵌入了一些可执行代码。
在评估哪种API最适合某项特定任务时，值得考虑的因素有很多。
catch
#USHL主页
dude>
welcome to the U.s. Historical League Web Site.
U.S.Historical League
口
口
口
cry
选择API
开发的难易程度。如果使用某种API及其相关的语言，编写应用程序，其方便性如何。
sdbh->SetAttribute(PDO::ATTR_ERRMODE,
$dbh = new PDo("mysql:host=localhost ;dbname=sampdb",
第6章MySQL程序设计入门
可移植性。这个应用程序会不会用于除MySQL以外的其他数据库系统。
性能。当用某种API语言编写应用程序时，其执行效率如何。
期望的执行环境。你想让应用程序用在什么样的上下文里。
sth=$dbh->query
（PDOException $e）（）#清空处理器（捕捉并忽略错误)
$sth->fetchColumn
#关闭连接
("SELECT COUNT（*）FROM member"）;
一这与DBI接口的做法有所不同，它并没以费尽心思去统一针
（0）;
PDO::ERRMODE_EXCEPTION);
"secret");
---
## Page 247
方面，至少有两个基本因素值得考虑。
的内存更少，或者是否还有其他可以改进的地方。不过，
都是先写出程序。在它可以工作之后，
何”，那么最好是用这个API实际编写一个程序，然后测试一下。最好的对比测试是，用不同的
许多连接，那么厌烦等待的访问者便会放弃访问，再去寻找其他网站。
收入来源依赖这个网站，那么性能的低劣将直接导致利润的减少。如果你的网站不能同时支持
影响。不管网站提供的内容是什么，
微小变化即可造成巨大的差异。在后一种情况里，性能对提高网站的可用性和吸引力有着显
关紧要。但是，如果某个程序在一个访问量极大的Web 站点上，每秒运行多次，那么其效率的
往往与程序的使用频率有关。对于每月只会在午夜运行一次的cron作业，其性能问题可能
6.3.2
言又都不太熟悉，想稍加学习就能编程，那么Perl语言将是最佳选择。
言则最适合于编写Web应用程序。如果你需要同时编写这两种类型的应用程序，而你对这些语
请表里的参数是什么？客户端是否提供了访问个人信息所需要的正确密码？
其执行环境提取很多非常特定的信息，如客户端使用的是什么浏览器？输入到邮件列表订阅申
求。另一种情况是
启动的命令，还是从cron 作业运行的命令，它们通常都比较独立，对执行环境并无过多的要
成程序，也可能是一个在每个月底以cron作业方式运行的应付账款汇总程序。不管是从 shell
6.3.1执行环境
性能没那么高。
口编译型程序比解释型脚本的执行速度更快。在实现同样功能时，编译型程序比使用脚
性能评估是一个复杂的问题。如果想要知道
在同等条件下，我们当然希望应用程序能够以最快的速度运行。但是，性能的实际重要性
在编写应用程序时，都要考虑其使用环境。例如，它可能是一个可以从 shell启动的报表生
综
口P
口
口
每种API语言所适合编写的应用程序，随环境的不同而不同。
上所述，C语言和Perl语言都是编写独立应用程序的最佳候选语言。Perl语言或PHP语
种用法比较少见。
C语言是一种通用语言，因此在理论上，可以用它来编写任何应用程序。
语
应用程序，PHP语言是个不错的选择。你也可以用PHP语言来编写命令行脚本，但这
仅如此，数据库访问也是PHP的强项之一，因此，对于要完成MySQL相关任务的Web
PHP语言是专门为编写Web应用程序而设计的，因此Web 环境显然是最适合它的。不
MySQL和 Web 结合在一起的应用程序。这种程序可以通过 CGI.pm 模块与Web进行交
开发方面也非常有用，例如，借助CGI.pm 模块。这让Perl 语言很适合于编写需要把
恰
进
语言更适合于编写独立程序，而不太适合于Web 编程。其中一个原因是，在C语言里
言和PHP语言都是解释型语言，因此C语言程序的运行速度一般比Perl或PHP脚本
性能
，通过DBI与MySQL进行交互。
是Web应用程序频繁使用到的。
进行文本处理或内存管理，并不像在Perl 语言或PHP语言里那样容易，而这些功能恰
C语言类似，Perl语言也适合于编写独立程序。
是，你可能正在编写一个供Web服务器调用的应用程序。这类程序往往需要从
一个反应迟钝的网站肯定会让访问者感到厌烦。如果你的
再去考虑优化它，
“某个具体API编写出来的应用程序的性能女
，在以相对一致的方式对性能产生影
看看它是否还可以运行得更快、占用
。不过碰巧的是，Perl语言在Web站点
，这是因为它们是直接
6.3选择API
，但实际上，
227
著
如
无
性
---
## Page 248
6.3.4可移植性
用编译型语言开发程序，获得更快的执行速度，花费更少的编程时间呢？还是想把程序编写成
的约束将会变得更为重要。
编
PHP的另一个优势是，它们可进行模式匹配和文本处理。在这些方面，C语言的处理都很初级。
诸如内存管理之类的底层细节，并且还需要对它们进行调试。这些事情都需要花费时间。Perl
C语言并没有提供任何类似的功能。如果使用C语言来实现，
么”上面，而不是去关注细节性的“如何去做”上面。例如，在处理涉及“键/值”关系（如“学
加高级。这使你能够在更高的抽象层上思考问题，从而可以把注意力集中在方向性的“应该做什
有两个因素可用于说明其中的原因。首先，与编译型语言相比，脚本语言提供的语法结构通常重
你的一个小时比计算机的一个小时更加宝贵！
花
行得那么快，你
或 PHP脚本所花费的时间只有开发C语言程序所用时间的一半，那么即使最终的程序并没有运
目标。你的时间以及编程工作的难易程度都很重要，因此在为MySQL应用程序选择API时，
6.3.3
一
错
另
228
个脚本，在最短时间内让它运行起来，提高执行速度呢？
做，除非你要求它们这么做。当应用程序变得越来越大，并且越来越难以维护时，这种严
误。在C语言里，如果某个变量名拼错了，那么编译器会向你发警告。PHP和Perl 则不会
试。另一方面，C语言编译器会对编写的程序实施更多的约束，即执行更严格的类型检查。
果使用Perl或PHP，那么程序开发周期将简化成“编辑-测试”，脚本修改后，无需编译即可
程序开发周期将是“编辑-编译-测试”。程序每修改一次，都要重新编译一次，然后才能测试。
其次，与使用编译型语言相比，使用脚本语言的程序开发周期更少。如果使用C语言，
ID/学生姓名”）的数据时，PHP中的关联数组和Perl中的散列都可以帮助程序员节约很多时间。
费的时间，这通常是合情合理的。尤其是对于那些执行频率并不高的应用程序，更是如此。
一个需要考虑的因素是，需要多长时间能完成开发工作。如果为完成相同的功能，编写Perl
一般情况下，在编译型语言和解释型语言之间，需要权衡的是开发时间和性能。你是想使
一般来讲，脚本语言可以让你更快地完成程序的开发，尤其是在进行原型设计的时候。至少
刚才讨论的因素会对应用程序的性能产生影响，但是单纯地追求执行效率不应该是唯一的
可移植性指的是，把某个为了使用 MySQL 而编写的程序，修改成可以使用另外一种数据
口对于在Web上下文里使用的解释型语言，如果解释器是作为Web服务器的模块来运名
开发时间
用的模块形式分别是 mod_perl 和 mod_php。
当 Apache 需要运行 Perl或PHP 脚本时，它将启动相应的解释器，
Apache，那么可以安排Apache以单独进程方式调用脚本解释器。
的，而不是以单独的进程来运行的，那么性能会好一点。例如，如果使用的
么编译型程序和解释型程序之间的差距会大大缩小。
行那些经过编译的MySQL客户端开发库里的例程（它们被链接在解释器引擎里），
好好考虑一下程序具体所做的事情。如果脚本型应用程序在大部分时间里，都是在执
更快。由此，对于使用频率特别高的程序，C语言应该是最佳选择。
文
第6章MySQL程序设计入门
件里，并作为Apache进程的一部分来运行。按照Apache规定，Perl和PHP解释器采
是，解释器也可以当作模块来使用，这个模块会被直接链接到Apache 的二进制执行
使用了通用网关接口（CommonGateway Interface，CGI）协议来进行通信。与此相
你仍有可能不会选用C语言API。少关注应用程序的执行时间，多关注编写它所
那么你必须要编写代码，用于处理
，并让它去执行那个
，在这种操作模式下，
、不过，仍然有必要
采
这
什
更
反
---
## Page 249
要把源自多个数据库系统的信息整合在一起生成一份报告。
移植性尤为重要。例如，需要把数据从一个数据库系统导出，并导入另外一个系统里；或者需
或者，还能怎么做呢？如果需要优先考虑可移植性，那么必须弄清这些不同API之间的差异。
并打算继续使用原有的程序，但是你的新老板使用的是另一种数据库系统，这时你要怎么办？
个程序用在除MySQL以外的任何数据库上”这样的话，就有些冒险。假设你刚换了个新工作，
库系统。
当你需要在同一个应用程序里访问多种类型的数据库系统时，以数据库无关的形式实现可
口C语言API根本不可移植。从本质上讲，
口
口
相近。
如果使用前面提到的PDO数据库访问扩展模块，那么PHP脚本的可移植性与DBI很
Perl语言DBIAPI具有很好的可移植性，
，你可能从未关心过这个问题。不过，
，除非你能预知未来，否则说出像“我绝不会把这
，因为与数据库无关便是DBI标明的设计目标。