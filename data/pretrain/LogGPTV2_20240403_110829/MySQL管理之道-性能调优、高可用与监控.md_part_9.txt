VariableName
OptionSetsVariable
Config-FileFormat
Dynamic Variable
Variable Scope
VariableName
OptionSets Variable
，但减少了大量的磁盘I/O操作。这个值默认是0，可动态修改，建议采用
--sync_relay_log_info=#
Default
Range
Range
Type
Bit Size
Platform
Permitted Values
Default
Type"
Bit Size
Platform
Permitted Values
sync_relay_log
Yes,sync_relay_log
--sync_relay_log
Default
Type
Permitted Values
Yes
Global
sync_relay_log
No
Global
relay_log_recovery
Yes,relay_log_recovery
，导致一部分中继日志没有处理，则
#
018446744073709547520
04294967295
0
numeric
num
3
第1章MySQL5.5介绍·49
eric
FALSE
boolean
(续）
---
## Page 64
50·第一部分MySQL5.5新特性篇
用默认值。
虽然安全性降低了，
是最安全的，因为在崩溃的时候，你最多会丢失一个事务，但会造成磁盘的大量I/O。
收到master发送过来的binlog日志都要写入系统缓冲区，然后刷人relay-log.info里，这样
当设置为0时，并不是马上就刷入relay-log.info里，而是由操作系统决定何时来写人
sync_master_info
解释：这个参数和 sync_relay_log参数一样，当设置为1时，slave的I/0线程每次接
Dynamic Variable
VariableScope
VariableName
OptionSetsVariable
Config-FileFormat
DynamicVariable
VariableScope
VariableName
Option SetsVariable
Config-File Format
Command-LineFormat
但减少了大量的磁盘I/O操作。这个值默认是0，可动态修改，建议采
Range
Default
Type
Permitted Values
Range
Default
Type
Bit Size
Platform
Permitted Values
sync_relay_log_info
Bit Size
Bit Size
Platform
Global
Yes,sync_relay_log_info
sync_relay_log_info
Permitted Values
Range
Default
Bit Size
Platform
Permitted Values
sync_master_info
Yes
Platform
Type
Yes
Global
sync_master_info
Yes,sync_master_info
numeric
04294967295
018446744073709547520
numeric
23
04294967295
0
numeric
232
续
---
## Page 65
制模式。默认为10000毫秒，等于10秒，这个参数动态可调。
不再等待 slave 从库。如果主库再次探测到 slave从库恢复了，则会自动再次回到半同步复
虽然安全性降低了，但减少了大量的磁盘I/O操作。这个值默认是0，可动态修改，建议采
用默认值。
样是最安全的，因为在崩溃的时候，你最多会丢失一个事务，但会造成磁盘的大量I/0。
次接收到master发送过来的binlog日志都要写人系统缓冲区，然后刷人master.info里，这
当设置为0时，并不是马上就刷人master.info里，而是由操作系统决定何时来写人
解释：在master上，开启半同步复制模式时的调试级别默认是32，可动态修改，一般
rpl_semi_sync_master_trace_level
解释：表示主库在某次事务中，如果等待时间超过10秒，那么降级为异步复制模式
解释：表示是否开启半同步复制功能，默认是关闭的，采用异步复制，可动态修改。
rpl_semi_sync_master_enabled
解释：这个参数和 sync_relay_log_info参数一样，当设置为1时，slave的I/O线程每
rpl_semi_sync_master_timeout
VariableName
VariableName
DynamicVariable
VariableScope
VariableName
DynamicVariable
VariableScope
Dynamic Variable
VariableScope
Range
Default
Type
Permitted Values
Default
Default
Permitted Values
Global
rpl_semi_sync_master_trace_level
Type
Yes
Global
rpl_semi_sync_master_enabled
Type
Permitted Values
Type
Yes
Default
Yes
Global
rpl_semi_sync_master_enabled
0.18446744073709547520
numeric
第1章MySQL5.5介绍·51
OFF
numeric
boolean
OFF
boolean
(续）
---
## Page 66
52·第一部分MySQL5.5新特性篇
采用默认值即可。
采用默认值即可。
手工开启，可动态修改。
每一个事务都会等待。如果为OFF，则slave追赶上后，也不会开启半同步复制模式，需要
解释：在 slave上，开启半同步复制模式时的调试级别，默认是32，可动态修改，一般
rpl_semi_sync_slave_enabled
解释：表示在slave上是否已经开启半同步复制模式，默认是不开启，可动态修改。
解释：是否允许 master 每个事务提交后都要等待 slave的接收确认信号。默认为ON，
32=netwait level(moreinformation aboutnetworkwaits)
1=generallevel(forexample,time function failures)
rpl_semi_sync_slave_trace_level
rpl_semi_sync_master_wait_no_slave
64=functionlevel(information about function entryand exit)
32= net wait level(more information about network waits)
16=detaillevel(moreverboseinformation)
1=general level(forexample,timefunctionfailures)
16=detaillevel(moreverboseinformation)
Variable Name
Variable Scope
VariableName
Dynamic Variable
Dynamic Variable
VariableScope
VariableName
DynamicVariable
VariableScope
Yes
Global
rpl_semi_sync_slave_trace_level
Type
Permitted Values
Yes
Global
rpl_semi_sync_slave_enabled
Default
Type
Permitted Values
Global
rpl_semi_sync_master_wait_no_slave
Yes
iype
OFF
ON
boolean
num
boolean
---
## Page 67
图1-19 和图1-20所示。
1.6.1delete 表连接语法改变
1.6
写在MySQL5.1里可以正常执行，但在MySQL5.5里就会报错，下面是一个测试，如
在MySQL5.5里，规范了 sql语句表连接的写法。比如，下面的代码：
执行截图如图1-21所示。
deletea,bfromuserajoinuser2bon a.id=b.id;
从图1-20中可以看到，在MySQL5.5中执行时报错了。规范后的写法应该是：
deleteusera,user2bfromusera joinuser2bona.id=b.id;
SQL语句写法的改变
mysql>
row in set (0.03 sec)
5.5.19
version()
mysql> delete user
5.1.59-1og
right syntax to use near
ers1
on()
rowinset (0.03sec)
sql>
sql.
图1-20在MySQL5.5中delete语法报错
OK.
图1-21 MySQL5.5 delete 语法
图1-19 MySQL5.1 delete 语法
a,user2
version():
affe
from
05
error
a join 
b on a. id-b.id
SQL
5ynt
第1章
MySQL5.5介绍·53
---
## Page 68
54·第一部分MySQL5.5新特性篇
就会报错，它不支持这样的语法，如图1-22所示。
建的，而这样做性能肯定没有静态SQL好，比如，下面这个简单的例子：
1.6.2MySQL5.5存储过程支持limit变量
在MySQL5.1中，如果编写存储过程时使用limit做变量，
但在MySQL5.5版本里采用静态SQL来写就会创建成功，如图1-23所示。
这个就是用动态SQL来写的，如果该例直接采用静态SQL来写，在MySQL5.1版本里
DELIMITER;
CREATE PROCEDURE'hcy'test_dynamic_limit'(v_limit INT)
DELIMITERSS
EXECUTEcmd;
PREPAREcmdFROM@sql;
SET @sql=CONCAT('select*from t1 limit',v_limit);
ENDSS
BEGIN
图1-22MySQL5.1存储过程不支持limit静态SQL
图1-23MySQL5.5存储过程支持limit静态SQL
row in set (0. 00 sec)
l> CALL test limit(2)
OK, 0 ruws affected (0.00 sec)
vnla
1
(0.
affected
(0.00
，那是需要用动态SQL来构
---
## Page 69
级过程。
上遇到了瓶颈，或者希望利用MySQL5.5.X的新特性，那么在这种情况下可以考虑升级
建议至少一年后再上GA版本，这时该修复的补丁也都打完了。当然，如果你目前在性能
要用到生产环境上，因为厂家需要很多“小白鼠”来反馈信息，来吸取更多的意见，所以
1.7.1
加以选择。
目前MySQL5.5已经很稳定了。
本，如MySQL5.5.0～MySQL5.5.25a，那么如何选择呢？一般来说，刚发布的版本最好不
1.7MySQL5.1升级为MySQL5.5
这种升级方式比较省事，通过 MySQL_upgrade 命令即可完成。下面来演示一下整个升
下面列举了两种升级方式，每种升级方式都有一定的优缺点，用户可以按照实际需求
1）修改my.cnf配置文件，因为MySQL5.1里的参数在5.5版本里已经不识别了。
MySQL的版本更新很快，如果你经常访问官网，会发现每隔几个月就会发布一个小版
#master-password=repl
#把以前的built-in文件格式改为Barracuda
innodb_write_io_threads=8
#innodb_file_io_threads已经不识别了，改成
#注释掉MylSAM_max_extra_sort_file_size在5.5里已经不识别了
#注释掉default_table_type=MylSAM在5.5里已经不识别了
character-set-server=utf8
#default-character-set=utf8在5.5里已经不识别了，改成
#log_slow_queries在5.5里已经不识别了，改成
skip-external-locking
#skip-locking在5.5里已经不识别了，改成
这样对开发来说就方便多了。
#master-user=repl
#master-host=192.168.110.20
innodb_read_io_threads=8
slow-query-log
og-short-format
#log-long-format在5.5里已经不识别了，改成
注释掉同步的信息，否则启动时报错
nnodbfileformat=Barracuda
采用MySQL_upgrade升级授权表方式升级
第1章MySQL5.5介绍·55
---
## Page 70
56·第一部分MySQL5.5新特性篇
数支持动态修改。
快的。在做升级或降级操作时，应将其设置为0，保证数据的完整性，避免发生错误。该参
刷人磁盘，而是刷人redolog事务日志里，待其下次启动MySQL时再恢复，关闭速度是最
脏页刷人磁盘。设置为0，会做清除脏页和插入缓冲区合并操作，并把脏页刷人磁盘，如此
innodb_plugin.so;innodb_c
设置关闭速度是最慢的。设置为2，不会做清除脏页和插人缓冲区合并操作，也不会把脏页
so;innodb_lock_waits=ha_i
4）跳过MySQL授权表启动MySQL服务，命令如下：
3）关闭MySQL服务，命令如下：
关于innodb_fast_shutdown参数的介绍，请参见MySQL5.5手册：
设置该参数的命令如下：
解释：关闭MySQL时，设置为1，不会做清除脏页和插入缓冲区合并操作，也不会把
2）修改innodb_fast_shutdown等于0。先来看一下这个参数是做什么的。
nnodb_plugin.so;innodb_cmp=ha_innodb_plugin.so;innodb_cmp_reset=ha_innodb_plugin.so;innodb_cmpmem=ha
5）执行更新程序，如下所示：
mpmem_reset=ha_innodb_plugin.so
#plugin-load=innodb=ha_innodb_plugin.so;innodb_trx=ha_innodb_plugin.so;innodb_locks=ha_innodb_plugin.
#另如果你采用了InnoDB-Plugin，还要注销掉
[root@vm02MysQL]#/usr/local/MysQL/bin/MySQL_upgrade
MySQLd--defaults-file=/etc/my.cnf--skip-grant-tables&
/etc/init.d/MySQLstop或MysQLadmin-uroot-p123456shutdown
setglobalinnodb_fast_shutdown=0;
#ignore_builtin_innodb
#master-connect-retry=30
DynamicVariable
Variable Scope