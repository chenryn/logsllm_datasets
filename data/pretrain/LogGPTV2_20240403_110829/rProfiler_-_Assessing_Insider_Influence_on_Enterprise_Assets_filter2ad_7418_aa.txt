title:rProfiler - Assessing Insider Influence on Enterprise Assets
author:Manish Shukla and
Sachin Lodha
Poster: rProfiler – Assessing Insider Influence on Enterprise
Assets
Manish Shukla
TCS Research Lab
Pune, India
PI:EMAIL
Sachin Lodha
TCS Research Lab
Pune, India
PI:EMAIL
ABSTRACT
Insider threat is a well-recognized problem in the cyber-security
domain. There is good amount of research on detecting and pre-
dicting an insider attack. However, none of them addresses the
influence of an insider over other individuals, and the spread of im-
pact due to direct and indirect access to enterprise assets by having
such influence. In this work, we propose a graph-based influence
profiling solution called rProfiler that analyzes the data from mul-
tiple sources to determine the influence spread and calculate the
probability of loss of data from an affected device using pertinent
graph features. We also highlight multiple enterprise scenarios that
may benefit from this work.
CCS CONCEPTS
• Security and privacy → Social engineering attacks; Social
aspects of security and privacy; • Applied computing → Computer
forensics.
KEYWORDS
Influence Discovery; Graph Analysis; Insider Threat
ACM Reference Format:
Manish Shukla and Sachin Lodha. 2020. Poster: rProfiler – Assessing Insider
Influence on Enterprise Assets. In Proceedings of the 2020 ACM SIGSAC
Conference on Computer and Communications Security (CCS ’20), November
9–13, 2020, Virtual Event, USA. ACM, New York, NY, USA, 3 pages. https:
//doi.org/10.1145/3372297.3420026
1 INTRODUCTION
Motivation: Insider threat is defined as the negative effect on an
enterprise due to an individual who has or had access to the enter-
prise assets and internal working. From the enterprise perspective,
it is risk to the confidentiality, integrity and availability of criti-
cal information assets and loss of reputation. A recent survey [5]
shows that 27% of all reported incidents were committed by insi-
ders. Additionally, 89% of the participants acknowledged that their
organization is prone to an insider attack. Based on an individual’s
intention, the existing literature on insider threat identifies two
main classes of threat actors. The major class consists of individuals
with no malicious intention and who performs anomalous action
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS ’20, November 9–13, 2020, Virtual Event, USA
© 2020 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-7089-9/20/11.
https://doi.org/10.1145/3372297.3420026
or divulge information unknowingly. However, the other class con-
sists of individuals with malicious intent to harm the enterprise by
stealing or sabotaging its assets [5].
Despite of the amount of research in this area, insider threat is
still a pain area in cybersecurity. This is mainly due to the presence
of multiple dynamic and interdependent contexts related to data
sharing [5], for example, casual data exchange between employees
due to their reporting hierarchy or interpersonal relationship. In an
enterprise setup, an influential individual may either force or per-
suade peers and subordinates to share privileged information. This
information sharing will appear normal to the existing solutions as
it happens within a team (community), wherein regular exchange
of information is common. Even if the insider is identified and cor-
rective actions are taken, there is still a large and unknown attack
surface open in the form of individuals who might have already
been influenced. Thus, it is important to assess the reachability or
influence of an insider on other benign users, and thereby, insider’s
indirect access to different assets within the enterprise.
Related Work & Contribution: In their work, Eldardiry et al [2]
have presented anomaly detection in multi-dimensional heteroge-
neous data and have used peer-group consistency for validating
the user behavior. Similarly, Gamachchi et al [4] have used isolation
forest algorithm for isolating anomalous users in formatted data
from multidimensional sources. Their system computes multiple
attributes for each individual within the enterprise and then isolates
the most anomalous behavior. Also, they have used deviation from
peer’s as well as from individual’s normal behavior for validating
the individual’s current behavior. Chen et al [1] introduced a spe-
cialized network anomaly detection model for detecting insider
actions and their influence in dynamic collaborative environment.
Naghmouchi et al [7] proposed risk assessment graphs as a model
for risk analysis. Their model captures the topological accessibi-
lity of the target system, vulnerabilities and the causal temporal
relationship between the system and a vulnerability. More recently,
the work of Liu et al [6] uses a heuristic which converts log entries
into a heterogenous graph by using the sequential and the logical
relationships among the events. Each log entry is represented into
a low-dimension vector by applying a graph embedding on the
graph. Next, their algorithm separates malicious and benign log
entries into different clusters for detection. All of the existing work
focuses on the detection of insider threat and does not consider
the influence of an insider on their peers and subordinates. Further,
none of them examines the effect of reporting hierarchy and the
interpersonal relationship among employees on data exfiltration.
In this work our primary focus is on assessing the influence of
an insider on other benign users, and thereby, their indirect reacha-
bility to different assets within the enterprise. Our proposed system
Poster CCS '20, November 9–13, 2020, Virtual Event, USA2129first identifies a set of individuals with suspicious behavior by using
the method suggested in [6]. It then creates an interaction graph
between insider-to-user, user-to-device and user-to-community.
Then for a given community (usually a project team), it calculate
the susceptibility of an individual to get influenced by an identified
insider as a function of their position in reporting hierarchy and the
health of communication (indicating the strength of interpersonal
relationship).
rProfiler uses one of the following four colors for edge coloring: a)
red for representing reporting relationship (Pu,v = 1), b) blue for
healthy communication among individuals, that is, (Pu,v > thu,v)
and (Pv,u > thv,u), c) green for weak communication, that is,
(Pu,v > thu,v) or (Pv,u > thv,u), but not both, and d) black for
the rest. The colors are assigned to give preference to reporting
hierarchy and then communication density. Also, it helps in better
visualization of the communication graph and reporting.
2 METHODOLOGY
Community Detection. rProfiler creates the communication graph
of an individual for identifying their active community. It also
calculates the health of the communication graph by conside-
ring an individual’s interpersonal relationship with others, that
is, how often they communicate. Let G = (V , E, A) be the undi-
rected communication graph of the enterprise, where, V is set of
vertices consisting of individuals associated with an enterprise,
and E is the set of communicating edges between them. Further,
A = {role, color , weiдht, peers, teamsize, timestamp} be the set of
attributes associated with individuals and communication. Also,
let ki be the degree of some node i in subgraph X ⊂ G. The total
(X).
degree ki can be split in two parts, such that, ki = kin
i
(X) is number of edges connecting node i to the other
Where, kin
i
(X) is the number of edges connecting i to
nodes in X and kout
the nodes which are not in X. We describe the subgraph X as a
community, if and only if:
(X) +kout
i
i
(X)
(X) >K,∀i ∈ X
kin
i
kout
i
(1)
In Equation 1, K is the cohesiveness of the community and can
have values > 0. When K = 1, the Equation 1 is same as given
by Radicchi et al [8]. For values greater than 1, it suggests a more
frequent and dense communication between individuals within X.
Probability of Data Leakage. For vertices ν and τ1 (Figure 1),
let s(ν,τ1) = [v0 = ν, v1, . . . , vh = τ1] be one of the possible paths.
Let Cvj−1 be the total communication on the edges incident on vj−1,
and Cvj
be the total communication on the edges incident on vj.
For edge (vj−1, vj) ∈ E, let Cvj−1,vj
be the mutual communication.
Further, let Pj be the probability of data leakage from node vj to
vj−1 due to presence of an edge between them. Here, the probability
Pj is directional in nature and depends on whether the request is
from vj−i to vj or from vj to vj−1. In the case of path sν,τ1, Pj is
equal to 1 if vj reports to vj−1, otherwise it is Cvj−1,vj
. If data
Cvj−1
sharing for each edge is an independent event, then the cumulative
probability of data exfiltration associated with a path ‘s = sν,τ1’ is
j=1 Pj. In Algorithm 1, this equation is applied
to all given paths to arrive at the optimal path with the maximum
probability of data exfiltration.
Identifying Strength of Relationship. For suspect ν and target
τ1 in subgraph X, let S(ν,τ1) = {s1, . . . , st} be the set of all possible
paths. We further qualify the edges in community by color coding
them according to the vertices they are connected with and the qua-
lity of the communication between them. Based on communication,
let thu,v and thv,u, be the thresholds for assessing the interperso-
nal relationship between u and v. For a data request from u to v,
given by, Ps =h
◃ S is the set of all paths between node u and v
◃ Optimal path for data exfiltration
opt = nil
for s ∈ S do
limit = s .lenдth() − 1, p = 1
for idx = 0; idx ≤ limit; idx = idx + 1 do
Algorithm 1 Path Analysis and Probability of Data Leakage
1: procedure PathAnalysis(S)
2:
3:
4:
5:
6:
7:
8:
9:
10:
11:
12: