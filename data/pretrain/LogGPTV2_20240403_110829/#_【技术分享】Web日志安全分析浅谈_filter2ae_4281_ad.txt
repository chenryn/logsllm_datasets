..
当我们用多个类似这样的攻击路径模型对日志进行匹配时，可能在同一个模型中可能会命中多次相同的行为特征，此时我需要做一个排查工作，通过IP、客户端特征、攻击手法、攻击payload相似度等等进行排除掉非同一攻击者的行为，尽可能得到一条准确的攻击路径。
我们通过一整个攻击路径来定义攻击，从而即使攻击者分时段进行攻击，行为也会被列入到攻击路径中
通过这样方式，也许能实现自动化展示出攻击者的攻击路径，但是具体可行率、准确度还有待进一步实践后确认。
7.日志噪声数据
通常，除了攻击者恶意构造的攻击之外，日志中还包含大量的扫描器发出的请求，此类请求同样包含一些攻击特征，但是多半都为无效的攻击，那么我们如何从大量的扫描攻击请求中判断出哪些请求较为可疑，可能攻击已经成功呢？我所认为的方法目前有两种，一种是给每种攻击方法定义成功的特征，如延时注入可通过判断日志中的响应时间，联合注入可通过与正常请求比较响应大小，Bool注入可通过页面响应大小的规律，当然实际情况中，这种做法得到的结果可能是存在误报的。第二种办法就是通过二次请求，通过重放攻击者的请求，定义攻击payload可能会返回的结果，通过重放攻击请求获取响应之后进行判断，其实这里已经类似扫描器，只是攻击请求来自于日志，这种方法可能对服务器造成二次伤害，一般情况下不可取，且已经脱离日志分析的范畴。
**九、日志安全分析之更好的选择**
回到那个最基本的问题，如何从日志中区分正常请求和攻击请求？
可能做过安全的人都会想到：用关键字匹配呀。
对，关键字匹配，因为这的确是简单直接可见的办法，用我们已知的安全知识，把每一种攻击手法定义出对应的攻击规则，然而对日志进行匹配，但Web技术更新速度飞快，可能某一天就出现了规则之外的攻击手法，导致我们无法从日志中分析出这些行为。
其实从接触日志分析这个领域开始，我就想过一个问题？有没有一种算法，可以自动的计算哪些是正常的，哪些是不正常的呢？然而思索很久，也尝试过一些办法，比如尝试过使用统计，按照请求的相似度进行归并，统计出一些“冷门”请求，后来发现其实这样做虽然有点效果，但是还是会漏掉很多请求，且存在大量无用请求。  
后来又思索了一种办法，能不能对用户的网站产生的请求建立一个白名单，然后不在白名单内的请求皆为异常请求。这种做法效果倒是更好了一点，可是如何自动化建立白名单又成为了一个问题？如果我们手动对网站请求建立一个单独的白名单，那么一旦站点较多，建立白名单这个工作量又会巨大，但是如果只有单个站点，手工建立这样一个白名单是有意义的，因为这样就能统计所有的异常请求甚至未知的攻击行为。
后来我发现其实我最初的想法其实是一个正确的思路，用统计的方法来区分正常和异常请求，只不过我在最开始实现的时候认为的是：某个URL被访问的次数越少，那么次请求为可疑。
更好的思路是：正常总是基本相似
异常却各有各的异常（来源：[http://www.91ri.org/16614.html](http://www.91ri.org/16614.html)）
文中关于此理论已经讲得很详细，这里简单描述一下实现方法：
搜集大量正常请求，为每个请求的所有参数的值定义正常模型  
通过Waf或者攻击规则来剔除所有发起过攻击请求的IP，从而得到所有来自用户的正常请求，将每个正常请求构造出对应的正常模型，比如：  
[http://test.com/index.php?id=123](http://test.com/index.php?id=123)  
[http://test.com/index.php?id=124](http://test.com/index.php?id=124)  
[http://test.com/index.php?id=125](http://test.com/index.php?id=125)  
那么关于此请求的正常模型则为 [N,N,N],不匹配此模型的请求则为异常请求。
当对日志中的请求建立完正常的模型，通过正常模型来匹配找出所有不符合模型的请求时，发现效果的确不错，漏报较少，不过实践中发现另一个问题，那便是数据的清洗，我们能否建立对应的模型，取决于对日志数据的理解，如果在数据前期提取时，我们无法准确的提取哪些是请求地址那些为请求参数可能无法对某个请求建立正常模型
关于此理论已经有人写出了Demo实现，地址：[https://github.com/SparkSharly/Sharly](https://github.com/SparkSharly/Sharly)
**十、日志安全分析总结问答**
1.日志分析有哪些用途？
感知可能正在发生的攻击，从而规避存在的安全风险
应急响应，还原攻击者的攻击路径，从而挽回已经造成的损失
分析安全趋势，从较大的角度观察攻击者更“关心”哪些系统
分析安全漏洞，发现已知或位置攻击方法，从日志中发现应用0day、Nday
..
2.有哪些方法可找出日志中的攻击行为？
攻击规则匹配，通过正则匹配日志中的攻击请求
统计方法，统计请求出现次数，次数少于同类请求平均次数则为异常请求
白名单模式，为正常请求建立白名单，不在名单范围内则为异常请求
HMM模型，类似于白名单，不同点在于可对正常请求自动化建立模型，从而通过正常模型找出不匹配者则为异常请求
3.日志分析有哪些商业和非商业工具/平台？
**工具：**
LogForensics 腾讯实验室
北风飘然@金乌网络安全实验室
网络ID为piaox的安全从业人员：
网络ID：SecSky
网络ID：鬼魅羊羔
**平台（商业项目）：**
Splunk >> 机器数据引擎
赛克蓝德 >> SeciLog
优特捷信息技术 >> 日志易
HanSight瀚思 >> 安全易
百泉众合数据科技 >>LogInsight
江南天安 >> 彩虹WEB攻击溯源平台
**开源项目：**
elk
https://www.elastic.co
scribe
https://github.com/facebook/scribe
chukwa
http://incubator.apache.org/chukwa/
kafka
http://sna-projects.com/kafka/
Flume
https://github.com/cloudera/flume/
4.有哪些方法适合分析攻击是否成功？
Kill Chain Model
**十一、扩展阅读**
[](http://netsecurity.51cto.com/art/201506/478622.htm)
[http://netsecurity.51cto.com/art/201506/478622.htm](http://netsecurity.51cto.com/art/201506/478622.htm)
[http://www.freebuf.com/articles/web/86406.html](http://www.freebuf.com/articles/web/86406.html)
[https://wenku.baidu.com/view/f41356138bd63186bdebbca8.html](https://wenku.baidu.com/view/f41356138bd63186bdebbca8.html)
[http://www.freebuf.com/articles/web/96675.html](http://www.freebuf.com/articles/web/96675.html)
[http://dongxicheng.org/search-engine/log-systems/](http://dongxicheng.org/search-engine/log-systems/)
[http://www.361way.com/scribe-chukwa-kafka-flume/4119.html](http://www.361way.com/scribe-chukwa-kafka-flume/4119.html)
[http://www.jianshu.com/p/942d1beb7fdd](http://www.jianshu.com/p/942d1beb7fdd)
[https://xianzhi.aliyun.com/forum/attachment/big_size/WAF%E6%98%AF%E6%97%B6%E5%80%99%E8%B7%9F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%B4%E5%86%8D%E8%A7%81.pdf](https://xianzhi.aliyun.com/forum/attachment/big_size/WAF%E6%98%AF%E6%97%B6%E5%80%99%E8%B7%9F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%B4%E5%86%8D%E8%A7%81.pdf)
[http://techshow.ctrip.com/archives/1042.html](http://techshow.ctrip.com/archives/1042.html)
[http://www.ixueshu.com/document/b33cf4addda2a27e318947a18e7f9386.html](http://www.ixueshu.com/document/b33cf4addda2a27e318947a18e7f9386.html)
[http://www.ixueshu.com/document/602ef355997f4aec.html](http://www.ixueshu.com/document/602ef355997f4aec.html)
[http://xueshu.baidu.com/s?wd=paperuri%3A%288b49643ad2a4ba7ea2d4cf46e366188d%29&filter=sc_long_sign&tn=SE_xueshusource_2kduw22v&sc_vurl=http%3A%2F%2Fwww.doc88.com%2Fp-0157694572004.html&ie=utf-8&sc_us=16365123920770356600
](http://xueshu.baidu.com/s?wd=paperuri%3A%288b49643ad2a4ba7ea2d4cf46e366188d%29&filter=sc_long_sign&tn=SE_xueshusource_2kduw22v&sc_vurl=http%3A%2F%2Fwww.doc88.com%2Fp-0157694572004.html&ie=utf-8&sc_us=16365123920770356600%C2%A0%C2%A0%C2%A0%C2%A0);
**十二、结束语**
在安全领域中，防护为一个体系，感知风险和应急响应仅仅只算安全体系中的两个环节。而想要尽可能更好的实现这两个环节，单凭从日志中分析数据是远远不够的。
至于未来或许我们可以将日志分析和Waf、RASP、等其他安全产品进行联动，还可以将Web日志、系统日志、数据库日志等各种其他日志进行关联从而分析更准确、更具有价值的信息。
日志分析本质为数据分析，而数据驱动安全必定是未来的趋势。
关于日志分析还有很远的路要走，目前国内还并没有发现较为优秀的产品，日志数据中存在的价值还有待进一步挖掘。