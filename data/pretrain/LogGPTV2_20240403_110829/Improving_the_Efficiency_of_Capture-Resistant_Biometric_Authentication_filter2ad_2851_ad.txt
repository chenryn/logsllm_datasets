### 5. Performance Analysis

When \(50 \leq \beta < 60\), our scheme requires more than one attempt but still significantly fewer attempts compared to FESI. In a few extreme cases, such as when \(\beta = t\) or \(\beta = |B|\), our computational improvement requires the same number of attempts as FESI.

It is important to note that our computational improvement over FESI utilizes error-correcting codes, but in a manner different from set difference-based fuzzy extractors. Set difference-based fuzzy extractors focus on the number of errors and use all elements of \(B\) in the authentication step. In contrast, our approach is based on the set intersection metric and uses only a subset of \(B\) in the authentication step. Our first improvement is most effective when the percentage of correct elements, \(\beta|B|\), is sufficiently large, rather than depending on the specific number of errors in \(B\).

### 6. Two Threshold Verifications in FESI

In FESI [7], there are two threshold checks related to \(t\):

1. **First Check**: When all elements of a \(t\)-subset \(B_i\) are correct, the reconstructed value \(s_{B_i}\) will be equal to \(s\), and the check \(h(s_{B_i}) \stackrel{?}{=} y\) will succeed. This check is probabilistic, and if \(B_i\) contains an error element, \(s_{B_i}\) will differ from \(s\) with very high probability, depending on the design of \(f_A(x)\).
   
2. **Second Check**: After \(B_i\) passes the first check, \(H_{B_i}\) and \(\Theta(B_i)\) are calculated, and the condition \(|\Theta(B_i)| \stackrel{?}{\geq} t\) is checked. This is an exact check.

If the design of \(f_A(x)\) can ensure that any \(t\)-subset \(B_i\) with one or more wrong elements results in \(s_{B_i} \neq s\), the second check becomes unnecessary.

### 6.3 Handling Larger Secrets

In our prototype implementation, \(s\) is a 128-bit secret. For applications where \(s\) is a larger number, such as a 1024-bit or 2048-bit RSA private key, directly applying such a large \(s\) to the scheme would slow down computations, including Shamir share generation, secret reconstruction, and the Reed-Solomon decoding algorithm.

To address this, we generate a 128-bit random value \(s'\) and encrypt \(s\) as \(c = E_{s'}(s)\), where \(E\) is AES-128. We then apply the 128-bit \(s'\) to the improved fuzzy extractor. The encrypted value \(c\) is stored as part of the biometric verification data.

When a close biometric sample \(B\) is presented, \(s'\) is first reconstructed using the improved fuzzy extractor and can be used to decrypt \(c\) to recover \(s\).

### 6.4 Other Parameters and Future Work

In this paper, we developed a method to improve the computation of FESI for certain \((t, |B|, \beta)\) combinations. However, there are \((t, |B|, \beta)\) combinations where both the original FESI scheme and our computational improvement are relatively slow. For example, as shown in Figure 1, when \((t, |B|, \beta) = (40, 80, 42)\), FESI requires \(1.247 \times 10^{20}\) tries, and our computational improvement requires \(6.095 \times 10^{19}\) tries, both of which are computationally prohibitive. Improving these situations is a focus of our future research.

### 7. Conclusions

Fuzzy extractor schemes allow a biometric authentication server to store biometric verification data resistant to capture, thus enhancing biometric privacy. In this paper, we improve the performance of FESI, a fuzzy extractor based on the set intersection metric, in two ways:

1. **Verification Speedup**: We speed up the verification step of this fuzzy extractor under certain parameter combinations, which is particularly important for biometric authentications that require fewer false matches. This improvement is achieved through the integration of a Reed-Solomon decoding algorithm. Our prototype implementation has shown that this improvement can speed up biometric verification by up to \(2.29 \times 10^6\) times.
   
2. **Storage Efficiency**: By introducing a new continuous function \(f_A(x)\), we increase the storage efficiency of the fuzzy extractor.

Compared to password authentication, biometric authentications are secure against brute-force attacks and can strengthen web authentication security. The development of fuzzy extractor schemes, including the improvements presented in this paper, enhances biometric privacy and will likely accelerate the adoption of biometric authentication on the web.

### Acknowledgements

The authors wish to thank the anonymous reviewers for their constructive comments, Christopher H. Howe for contributing his C++ implementation of the Reed-Solomon decoding algorithm, and Jennifer Leahy for reviewing the earlier draft of this paper.

### References

[1] S. Bellovin and M. Merritt. Encrypted key exchange: password–based protocols secure against dictionary attacks. In Proceedings of the 1992 IEEE Computer Society Symposium on Research in Security and Privacy, pages 72–84, 1992.

[2] E. R. Berlekamp. Algebraic Coding Theory. McGraw-Hill, New York, 1968.

[3] D. Bleichenbacher and P. Nguyen. Noisy polynomial interpolation and noisy Chinese remaindering. In B. Preneel, editor, Advances in Cryptology - EUROCRYPT 2000, volume 1807 of Lecture Notes in Computer Science, pages 53–69, 2000.

[4] X. Boyen. Reusable cryptographic fuzzy extractors. In R. Cramer, editor, Advances in Cryptology - EUROCRYPT 2005, volume 3494 of Lecture Notes in Computer Science, pages 147–163, 2005.

[5] J. Campbell, Jr. Speaker recognition: A tutorial. Proceedings of the IEEE, 85(9):1437–1462, September 1997.

[6] CoreTex Systems LLC. SFINX: Secure FINgerprint eXtraction. White paper, June 2007.

[7] G. I. Davida, Y. Frankel, and B. J. Matt. On enabling secure applications through off-line biometric identification. In Proceedings of the 1998 IEEE Symposium on Security and Privacy, pages 148–157, 1998.

[8] Y. Dodis, J. Katz, L. Reyzin, and A. Smith. Robust fuzzy extractors and authenticated key agreement from close secrets. In C. Dwork, editor, Advances in Cryptology - CRYPTO 2006, volume 4117 of Lecture Notes in Computer Science, pages 232–250, 2006.

[9] Y. Dodis, R. Ostrovsky, L. Reyzin, and A. Smith. Fuzzy extractors: How to generate strong keys from biometrics and other noisy data. In C. Cachin and J. Camenisch, editors, Advances in Cryptology - EUROCRYPT 2004, volume 3027 of Lecture Notes in Computer Science, pages 523–540, 2004.

[10] S. Gao. A new algorithm for decoding Reed-Solomon codes. In V. Bhargava, H. V. Poor, V. Tarokh, and S. Yoon, editors, Communications, Information and Network Security, pages 55–68. Kluwer Academic Publishers, 2003.

[11] A. K. Jain, A. Ross, and S. Prabhakar. An introduction to biometric recognition. IEEE Trans. on Circuits and Systems for Video Technology, 14(1):4–19, January 2004.

[12] A. Juels and M. Sudan. A fuzzy vault scheme. In Proceedings of the IEEE International Symposium on Information Theory (ISIT 2002), Lausanne, Switzerland, 2002.

[13] A. Juels and M. Wattenberg. A fuzzy commitment scheme. In Proceedings of the Sixth ACM Conference on Computer and Communication Security, pages 28–36, 1999.

[14] D. Klein. Foiling the cracker: A survey of, and improvements to, password security. In Proceedings of the UNIX Security Workshop II, August 1990.

[15] LiDIA-Group. LiDIA – a library for computational number theory, 2001. TU Darmstadt.

[16] D. Maltoni. A tutorial on fingerprint recognition. In Advanced Studies in Biometrics, volume 3161 of Lecture Notes in Computer Science. Springer, 2005.

[17] D. Maltoni, D. Maio, A. K. Jain, and S. Prabhakar. Handbook of Fingerprint Recognition. Springer, 2003.

[18] J. Massey. Shift-register synthesis and BCH decoding. IEEE Transactions on Information Theory, 15(1):122–127, January 1969.

[19] R. J. McEliece. The Theory of Information and Coding. Addison-Wesley, Reading MA, 1977.

[20] R. J. McEliece and D. Sarwate. On sharing secrets and Reed-Solomon codes. Communications of the ACM, 24(9):583–584, September 1981.

[21] F. Monrose, M. K. Reiter, and S. Wetzel. Password hardening based on keystroke dynamics. International Journal of Information Security, 1(2):69–83, February 2002.

[22] R. Morris and K. Thompson. Password security: a case history. Communications of the ACM, 22(11):594–597, November 1979.

[23] S. Pankanti, S. Prabhakar, and A. K. Jain. On the individuality of fingerprints. IEEE Transactions on Pattern Analysis and Machine Intelligence, 24(8):1010–1025, August 2002.

[24] S. Prabhakar, S. Pankanti, and A. K. Jain. Biometric recognition: Security and privacy concerns. IEEE Security & Privacy, pages 33–42, March/April 2003.

[25] N. Ratha, J. Connell, and R. Bolle. Enhancing security and privacy in biometrics-based authentication systems. IBM Systems Journal, 40(3):614–634, 2001.

[26] N. K. Ratha, S. Chikkerur, J. H. Connell, and R. M. Bolle. Generating cancellable fingerprint templates. IEEE Transactions on Pattern Analysis and Machine Intelligence, 29(4):561–572, 2007.

[27] I. S. Reed and G. Solomon. Polynomial codes over certain finite fields. SIAM Journal on Applied Mathematics, 8(2):300–304, June 1960.

[28] A. Shamir. How to share a secret. Commun. ACM, 22(11):612–613, November 1979.

[29] D. Socek, V. Božović, and D. Ćulibrk. Practical secure biometrics using set intersection as a similarity measure. In Proceedings of International Conference on Security and Cryptography (SECRYPT 2007), Barcelona, Spain, July 28-31 2007. INSTICC.

[30] The Time Magazine. Numbers. February 18th Issue, Page 12, February 2008.

[31] W. Zhao, R. Chellappa, P. J. Phillips, and A. Rosenfeld. Face recognition: A literature survey. ACM Computing Surveys (CSUR), 35(4), December 2003.

### Appendix

In FESI, the expected number of tries to find a correct \(B_i\) from \(B\) is given by:
\[ e = \frac{\delta + 1}{\lambda + 1} \]
where \(\beta = |A \cap B|\), \(\delta = \binom{|B|}{t}\), and \(\lambda = \binom{\beta}{t}\).

In our first improvement, the expected number of tries to select a \(B_i\) to recover \(s\) and pass the check is:
\[ e' = \frac{\delta' + 1}{\lambda' + 1} \]
where \(\sigma = \min(\beta - \alpha, \sigma - \alpha)\), \(\lambda' = \sum_{i=0}^{\tau} \binom{\beta}{\alpha + i} \binom{|B| - \beta}{\sigma - \alpha - i}\), and \(\delta' = \binom{|B|}{\sigma}\).

Both formulae can be derived from the following fact: given an urn with \(c\) red balls and \(b\) black balls (the total number of balls is \(c + b\)), if we randomly choose balls from it without replacement, the expected number of tries until we get a red ball is \(\frac{c + b + 1}{b + 1}\). The reasoning is as follows: let \(E(i, j)\) be the expected number of tries to get a red ball when the urn has \(i\) red balls and \(j\) black balls. If we condition on the outcome of the first draw, we have:
\[ E(c, b) = 1 \times \frac{c}{c + b} + (1 + E(c, b - 1)) \times \frac{b}{c + b} \]
Since \(E(c, 0) = 1\), we get:
\[ E(c, b) = \frac{c + b + 1}{b + 1} \]

For FESI, the number of red balls corresponds to the number of ways to pick a correct \(t\)-subset, which is \(\lambda = \binom{\beta}{t}\), and the total number of balls corresponds to the number of ways to pick a \(t\)-subset from \(B\), which is \(\delta = \binom{|B|}{t}\). Thus, we have:
\[ e = \frac{\delta + 1}{\lambda + 1} \]

For our improved scheme, the number of red balls corresponds to the number of ways to pick a \(\sigma\)-subset that contains at least \(\alpha\) correct elements, which is \(\lambda' = \sum_{i=0}^{\tau} \binom{\beta}{\alpha + i} \binom{|B| - \beta}{\sigma - \alpha - i}\). The total number of balls corresponds to the number of ways to pick a \(\sigma\)-subset from \(B\), which is \(\delta' = \binom{|B|}{\sigma}\). Thus, we have:
\[ e' = \frac{\delta' + 1}{\lambda' + 1} \]