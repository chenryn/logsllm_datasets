50 ≤ β < 60, our scheme takes more than 1 try but still
needs far fewer tries than FESI. In a few extreme cases
136146
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:00:38 UTC from IEEE Xplore.  Restrictions apply. 
(such as β = t and β = |B|), our computational improve-
ment needs the same number of tries as FESI.
It is worth noting that our computational improvement
over FESI uses error-correcting codes but in a way differ-
ent from the set difference-based fuzzy extractors. Those
set difference-based fuzzy extractors focus on the number
of errors and use all elements of B in the authentication step.
In contrast, our computational improvement is based on the
set intersection metric and in the authentication step, it uses
just a subset of B. Instead of depending on the speciﬁc num-
ber of errors in B, our ﬁrst improvement works best when
the percentage of correct elements β|B| is sufﬁciently large.
6.2 Two threshold veriﬁcations in FESI
the check of h(sBi
) ?= y and the check of |Θ(Bi)| ?≥ t.
In FESI [7], there are two checks related to threshold t :
First, when all the elements of a t-subset Bi are correct,
the reconstructed value sBi will be equal to s and the check
) ?= y will succeed. This threshold check is prob-
of h(sBi
abilistic and if Bi contains an error element, depending on
the design of fA(x), sBi will be different from s with very
high probability. Second, after Bi passes the ﬁrst check,
HBi and Θ(Bi) are calculated and |Θ(Bi)| ?≥ t is checked.
This is an exact check.
If the design of fA(x) can guarantee that any t-subset Bi
(cid:6)= s, the
with one or more wrong elements will result in sBi
second check will be unnecessary.
6.3 Bigger secrets
In our prototype implementation, s is a 128-bit secret.
For those applications where s is a large number (for exam-
ple, a 1024-bit or 2048-bit RSA private key), it is not desir-
able to directly apply such s to the scheme, as it would slow
down the computations of Shamir share generation, secret
reconstruction, and the Reed-Solomon decoding algorithm.
For those cases, we can ﬁrst generate a 128-bit random
(cid:2)
and encrypt s as c = Es(cid:2)(s), where E is AES-128.
value s
(cid:2)
Next, we apply the 128-bit s
to the improved fuzzy extrac-
tor. c should be stored as part of the biometric veriﬁcation
data.
When a close biometric sample B is presented and
is ﬁrst reconstructed with the improved fuzzy
(cid:2)
checked, s
extractor and can be used to decrypt c to recover s.
6.4 Other parameters and future work
In this paper, we developed a method to improve the
computation of FESI for some (t,|B|, β) combinations.
137147
It is worth noting that there exist (t,|B|, β) combina-
tions, where both the original FESI scheme and our com-
putational improvement are rather slow. For example, as
shown in Figure 1, when (t,|B|, β) = (40, 80, 42), the
FESI requires 1.247× 1020 tries and the computational im-
provement requires 6.095 × 1019 tries with σ = 42, both
of which are computation prohibitive. The improvement of
these situations constitutes our future research.
7 Conclusions
Fuzzy extractor schemes allow a biometric authentica-
tion server to store biometric veriﬁcation data resistant to
capture, thus improving the privacy of biometrics.
In this paper, we improve the performance of FESI, a
fuzzy extractor based on the set intersection metric, in two
ways. First, we speed up the veriﬁcation step of this fuzzy
extractor under some parameter combinations, which is es-
pecially important for those biometric authentications that
tolerate fewer false matches. This improvement is accom-
plished through the integration of a Reed-Solomon decod-
ing algorithm. Our prototype implementation has shown
that this improvement speeds up biometric veriﬁcation as
much as 2.29 × 106 times.
Secondly, by introducing a new continuous function
fA(x), we increase the fuzzy extractor’s storage efﬁciency.
Compared to password authentication, biometric authen-
tications are secure against brute-force attacks and can
strengthen the security of web authentication. The devel-
opment of fuzzy extractor schemes, including the improve-
ments of this paper, enhances the privacy of biometrics and
thus will speed up the adoption of biometric authentication
on the web.
Acknowledgement
The authors wish to thank the anonymous reviewers for
their constructive comments, Christopher H. Howe for con-
tributing his C++ implementation of the Reed-Solomon de-
coding algorithm, and Jennifer Leahy for reviewing the ear-
lier draft of this paper.
References
[1] S. Bellovin and M. Merritt.
Encrypted key exchange:
password–based protocols secure against dictionary attacks.
In Proceedings of the 1992 IEEE Computer Society Sym-
posium on Research in Security and Privacy, pages 72–84,
1992.
[2] E. R. Berlekamp. Algebraic Coding Theory. McGraw-Hill,
New York, 1968.
[3] D. Bleichenbacher and P. Nyuyen. Noisy polynomial in-
terpolation and noisy Chinese remaindering. In B. Preneel,
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:00:38 UTC from IEEE Xplore.  Restrictions apply. 
[4] X. Boyen. Reusable cryptographic fuzzy extractors.
editor, Advance in Cryptology - Eurocrypt ’00, volume 1807
of Lecture Notes in Computer Science, pages 53–69, 2000.
In
Proceedings of the 11th ACM Conference on Computer and
Communications Security (CCS’04), pages 82–91, 2004.
[5] X. Boyen, Y. Dodis, J. Katz, R. Ostrovsky, and A. Smith.
Secure remote authentication using biometric data.
In
R. Cramer, editor, Advances in Cryptology - EUROCRYPT
2005, volume 3494 of Lecture Notes in Computer Science,
pages 147–163, 2005.
[6] J. Campbell, Jr. Speaker recognition: A tutorial. Proceed-
ings of the IEEE, 85(9):1437–1462, September 1997.
[7] CoreTex Systems LLC. SFINX: Secure FINgerprint eXtrac-
tion. White paper, June 2007.
[8] G. I. Davida, Y. Frankel, and B. J. Matt. On enabling se-
cure applications through off-line biometric identiﬁcation.
In Proceedings of the 1998 IEEE Symposium on Security
and Privacy, pages 148–157, 1998.
[9] Y. Dodis, J. Katz, L. Reyzin, and A. Smith. Robust fuzzy ex-
tractors and authenticated key agreement from close secrets.
In C. Dwork, editor, Advances in Cryptology - CRYPTO
2006, volume 4117 of Lecture Notes in Computer Science,
pages 232–250, 2006.
[10] Y. Dodis, R. Ostrovsky, L. Reyzin, and A. Smith. Fuzzy
extractors: How to generate strong keys from biometrics and
other noisy data, September 20 2007.
[11] Y. Dodis, L. Reyzin, and A. Smith. Fuzzy extractors: How to
generate strong keys from biometrics and other noisy data.
In C. Cachin and J. Camenisch, editors, Advance in Cryptol-
ogy — EUROCRYPT 2004, volume 3027 of Lecture Notes
in Computer Science, pages 523–540, 2004.
[12] S. Gao. A new algorithm for decoding Reed-Solomon codes.
In V. Bhargava, H. V. Poor, V. Tarokh, and S. Yoon, editors,
Communications, Information and Network Security, pages
55–68. Kluwer Academic Publishers, 2003.
[13] A. K. Jain, A. Ross, and S. Prabhakar. An introduction to
biometric recognition. IEEE Trans. on Circuits and Systems
for Video Technology, 14(1):4–19, January 2004.
[14] A. Juels and M. Sudan. A fuzzy vault scheme. In Proceed-
ings of the IEEE International Symposium on Information
Theory (ISIT 2002), Lausanne, Switzerland, 2002.
[15] A. Juels and M. Sudan. A fuzzy vault scheme. Designs,
Codes, and Cryptography, 38(2):237–257, 2006.
[16] A. Juels and M. Wattenberg. A fuzzy commitment schele.
In Proceedings of the Sixth ACM Conference on Computer
and Communication Security, pages 28–36, 1999.
[17] D. Klein. Foiling the cracker: A survey of, and improve-
In Proceedings of the UNIX
ments to, password security.
Security Workshop II, August 1990.
[18] LiDIA-Group. LiDIA – a library for computational theory,
2001. TU Darmstadt.
[19] D. Maltoni. A tutorial on ﬁngerprint recognition.
In Ad-
vanced Studies in Biometrics, volume 3161 of Lecture Notes
in Computer Science. Springer, 2005.
[20] D. Maltoni, D. Maio, A. K. Jain, and S. Prabhakar. Hand-
book of Fingerprint Recognition. Springer, 2003.
[21] J. Massey. Shift-register synthesis and BCH decoding. IEEE
Transactions on Information Theory, 15(1):122–127, Jan-
uary 1969.
[22] R. J. McEliece. The Theory of Information and Coding.
Addison-Wesley, Reading MA, 1977.
[23] R. J. McEliece and D. Sarwate. On sharing secrets and Reed-
Solomon codes. Communications of the ACM, 24(9):583–
584, September 1981.
[24] F. Monrose, M. K. Reiter, and S. Wetzel. Password harden-
ing based on keystroke dynamics. International Journal of
Information Security, 1(2):69–83, February 2002.
[25] R. Morris and K. Thompson. Password security: a case
history. Communications of the ACM, 22(11):594–597,
November 1979.
[26] S. Pankanti, S. Prabhakar, and A. K. Jain. On the individu-
ality of ﬁngerprints. IEEE Transactions on Pattern Analysis
and Machine Intelligence, 24(8):1010–1025, August 2002.
[27] S. Prabhakar, S. Pankanti, and A. K. Jain. Biometric recog-
nition: Security and privacy concerns. IEEE Security & Pri-
vacy, pages 33–42, March/April 2003.
[28] N. Ratha, J. Connell, and R. Bolle. Enhancing security and
IBM
privacy in biometrics-based authentication systems.
Systems Journal, 40(3):614–634, 2001.
[29] N. K. Ratha, S. Chikkerur, J. H. Connell, and R. M.
Bolle. Generating cancellable ﬁngerprint templates. IEEE
Transaction on Pattern Analysis and Machine Intelligence,
29(4):561–572, 2007.
[30] I. S. Reed and G. Solomon. Polynomial codes over cer-
tain ﬁnite ﬁelds. SIAM Journal on Applied Mathematics,
8(2):300–304, June 1960.
[31] A. Shamir. How to share a secret. Commun. ACM,
22(11):612–613, November 1979.
[32] D. Socek, V. Boˇzovi´c, and D. ´Culibrk. Practical secure bio-
metrics using set intersection as a similarity measure.
In
Proceedings of International Conference on Security and
Cryptography (SECRYPT 2007), Barcelona, Spain, July 28-
31 2007. INSTICC.
[33] The Time Magazine. Numbers. February 18th Issue, Page
12, February 2008.
[34] W. Zhao, R. Chellappa, P. J. Phillips, and A. Rosenfeld. Face
recognition: A literature survey. ACM Computing Surveys
(CSUR), 35(4), December 2003.
Appendix
(cid:2)
β
t
(cid:5)τ
β
(cid:2)|B|
t
2 (cid:15), δ
(cid:2)
σ =
λ+1 [32], where β = |A∩B|, δ =
σ+1 , where β = |A∩B|, α = t+(cid:14) σ−t
(cid:2)
In FESI, the expected number of tries to ﬁnd a correct Bi
(cid:3)
from B is e = δ+1
, and
(cid:3)
λ =
. In our ﬁrst improvement, the expected number
of tries to select a Bi to recover s and pass the check is
(cid:3)
(cid:2)|B|
σ = δ(cid:2)
(cid:2)
σ+1
,
e
λ(cid:2)
(cid:3)× (cid:2) |B|−β
(cid:3)
σ
τ = min(β − α, σ− α), and λ
σ−α−i
.
Both formulae can be derived from the following fact:
given an urn with c red balls and b black balls (the total
number of balls is (c + b)), if we randomly choose balls
from it without replacement, the expected number of tries
until we get a red ball is c+b+1
b+1 . The reasoning is as fol-
let E(i, j) be the expected number of tries to get
lows:
a red ball when the urn has i red balls and j black balls.
If we condition on the outcome of the ﬁrst draw, we have
(cid:2)
σ =
i=0
α+i
138148
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:00:38 UTC from IEEE Xplore.  Restrictions apply. 
E(c, b) = 1 × c
E(c, 0) = 1, we get E(c, b) = (c+b)+1
c+b + (1 + E(c, b − 1)) × b
.
c+1
c+b . Since
For FESI, the number of red balls corresponds to the
number of ways to pick a correct t-subset, which is λ =
(cid:3)
(cid:2)
β
, and the total number of balls corresponds to the num-
(cid:2)|B|
(cid:3)
t
ber of ways to pick t-subset from B, which is δ =
.
Thus, we have e = δ+1
λ+1 .
t
For our improved scheme,
the number of red balls
corresponds to the number of ways to pick a σ-subset
(cid:2)
σ =
that contains at least α correct elements, which is λ
(cid:3)
(cid:3) × (cid:2) |B|−β
(cid:5)τ
. The total number of balls corre-
σ−α−i
sponds to the number of ways to pick a σ-subset from B,
which is δ
σ = δ(cid:2)
(cid:2)
σ+1
. Thus, we have e
σ+1 .
λ(cid:2)
(cid:3)
(cid:2)|B|
(cid:2)
σ =
i=0
α+i
(cid:2)
β
σ
139149
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 13:00:38 UTC from IEEE Xplore.  Restrictions apply.