as bing.com, kbb.com, tophatter.com, etc.; 24 URLs were related
732
IMC ’20, October 27–29, 2020, Virtual Event, USA
K. Subramani, X. Yuan, O. Setayeshfar, P. Vadrevu, K. Lee and R. Perdisci
Figure 4: Examples of WPN clusters
to unpopular blog/news sites; 3 led to adult websites; and 4 led
to websites hosting non-English content that we could not verify.
Given that these sites may be benign, since we do not have all the
information VT and GSB had to label them as malicious we take
a conservative stance and remove the malicious label from them.
Accordingly, we label 1,344 WPNs as known malicious. Among them,
758 WPNs were part of 572 WPN clusters that we previously classi-
fied as ad campaigns (see Section 6.3.1). The remaining 586 WPN
messages that led to malicious landing pages were not immedi-
ately found to belong to WPN ad clusters, as they formed separate
small clusters. We will determine whether they are related to WPN
campaigns later, in Section 6.3.3) after the meta-clustering step
(explained in Section 5.3).
By using a “guilty by association” label propagation policy, as
explained in Section 5.2, we label WPN ad campaigns as malicious if
they include at least one known malicious WPN (remember that this
policy is justified by the close similarity in content and landing page
URL path between messages in the same cluster). This yielded 152
(out of 572) malicious WPN ad campaigns, which overall included
376 WPN (or more precisely their landing pages) that GSB or VT
missed to detect as malicious. After manually inspecting these 376
WPN ads, we were able to confirm that 367 of them are indeed
malicious ads that lead to survey scams, phishing pages, scareware,
fake alerts, social media scams, etc. We were not able to confirm the
maliciousness of the remaining 9 ads (i.e., 2.4%) that led to different
pages that welcome/thank the user for subscribing to the notifi-
cation all hosted on the same IP address. The take away from the
above discussion is that, using our WPN clustering approach, we
were able to increase the number of confirmed malicious WPN ads
from 758 to 1,125 (i.e., 758 plus 367), which represents an increase
of about 50% as summarized in Table 4, first row.
Referring to the examples provided in Figure 4, in cluster WPN-C1,
35 out of the 40 WPNs were labeled as known malicious WPNs, ac-
cording to VT. However, PushAdMiner labeled this entire cluster as
malicious. After manually inspecting all 40 messages, we confirmed
that the remaining 5 messages in the cluster were indeed related
to the 35 malicious sweepstakes/survey scam ads.
Finding Suspicious Ads. So far, we have leveraged the labels
6.3.3
provided by VT and GSB to identify malicious WPN ads, and label
733
[Sample Landing Pages][Domains]surveysandpromotionusa.comsurveysandpromotionusa.com…signup.ourdailysweepstakes.com[URL Paths]/Flow isPrepopreward subaff1/Flow isPrepopreward subaff1…/Flow isPrepopreward subaff1[Sample Notifications](a) WPN-C1: consists of 40 WPNs[Sample Landing Pages][Domains]awakenfeedback.combenehai.com…nodilax.com[URL Paths]/spin/ caidtrsido tar isplanguage amt cep Iptoken/jackpot/ caidtrsido tar isplanguage amt cep Iptoken…/lucky-number/ caidtrsido tar isplanguage amt cep Iptoken[Sample Notifications](b) WPN-C2: consists of 12 WPNs[Landing Page][Domain]www.hdfc.com[URL Path]/campaign/ web_notificationsutm_sourceutm_medium[Notification](c) WPN-C3: consists of 4 identical WPNs[Landing Page][Domain]hobii.com[URL Path]/exciting-things/ c847frk-olsens-efterarsrengoring utm_mediumutm_source[Notification](d) WPN-C4: consists of 1 WPN…124012…12121212zip-foreclosures.com12zip-hudhomes.com…zip-hudhomes.com4040www.hdfc.comhobii.comawakenfeedback.commueanca.com1212…nodilax.comWhen Push Comes to Ads:
Measuring the Rise of (Malicious) Push Advertising
WPN ad campaigns. Unfortunately, both URL blocklists suffer from
significant false negatives, when it comes to detecting malicious
landing pages reached from WPN ads. As an example, consider clus-
ter WPN-C2, which PushAdMiner identifies as an ad campaign. This
cluster contains 12 WPNs; none of which were labeled as known
malicious according to VT. However, PushAdMiner flags this clus-
ter as suspicious since it contains duplicate ads (see definition in
Section 5.4) and via manual inspection we found that the WPN
messages in this cluster display fake PayPal alerts that lead users to
survey scam pages; therefore, we manually label the entire WPN-C2
cluster as malicious. This example demonstrates the gaps left by
current URL blocklisting services, and how ineffective they could be
if they were used to detect and block malicious ad notifications. Be-
low we discuss how we use the meta-clustering approach explained
in Section 5.4 to automatically identify and label more of such cases.
As described in Section 5.3, we apply a meta-clustering method
to group WPN clusters that may relate to each other, as they share
common landing page domains. To this end, we create a bipartite
graph G =(W ,D,E), here W is the set of all 8,780 WPN clusters we
previously obtained, and D is the set of all 2,177 distinct landing
page domains pointed to by WPN ads that we were able to record.
By identifying and separating the connected components in this
bipartite graph, we identify 2,046 WPN meta clusters. Of these, 224
contain a mix of WPN clusters that we previously labeled as ad
campaign and other non-campaign WPN clusters. We then label all
WPN messages contained in these 224 ad-related meta-cluster as
WPN ads, thus increasing the number of WPN ads identified so far
from 3,213 to 5,143.
Figure 5 provides two examples of meta clusters. Figure 5a con-
tains as a node cluster WPN-C1 from Figure 4, as well as other 6
related WPN ad campaigns that are likely orchestrated by the same
operators. This meta-cluster contains many known malicious WPN
ad campaigns and WPN clusters, and therefore, we label all the
WPN clusters in the meta cluster as suspicious. By manual inspec-
tion, we verified that all domains involved in this meta cluster host
visually similar malicious pages (e.g., online survey scam pages).
Figure 5b shows another example of meta-cluster, which includes
cluster WPN-C2 from Figure 4 as a node, along with 30 other related
WPN ad clusters. In this meta-cluster, none of the WPN clusters
(i.e., the nodes) were initially labeled as malicious by either VT or
GSB. However, we manually inspected all landing pages pointed
to by WPN messages including in the meta cluster, and we were
able to confirm that these are indeed malicious, in that they display
fake PayPal messages and alerts that lead users to survey scams
and likely phishing-related pages.
Next, we consider all yet to be labeled WPN messages in a WPN
meta cluster as suspicious if the meta cluster contains at least one
malicious WPN cluster or if it contains duplicate ad domains, as
defined in Section 5.4. Out of the 572 WPN ad campaigns identified
earlier, we found that 255 of them contained duplicate ad domains.
Accordingly, we were able to label a total of 287 out of 2,046 WPN
meta clusters as suspicious. Further, we identified 166 (out of 572)
additional WPN ad campaigns, which were not previously labeled
malicious in the previous step, as suspicious. Overall, this translates
into 1,479 suspicious WPN ads, as shown in Table 4. Following our
manual verification process, we confirmed 1,280 (86.5%) of these ads
IMC ’20, October 27–29, 2020, Virtual Event, USA
as malicious. The remaining 199 WPN ads were flagged by PushAd-
Miner because they were related to duplicate ad domains. Of these,
166 were alerts related to job postings and led to similar pages on
multiple domains listing the same job; 23 led to multiple sites that
hosted content related to the horoscope; 4 led to adult websites;
and 6 were subscription welcome/thank you notifications. Notice
that while these 199 WPN messages may be benign, PushAdMiner
helped us identify and characterize a large number of additional
WPN ads that are in fact malicious and were not identified by URL
blocklists such as VT or GSB. However, our current system is not
designed to be an automatic malicious WPN ad detection system.
In our future work, we plan to leverage the lessons learned from
the measurement results obtained in this paper to investigate how
malicious WPN messages can be accurately detected and blocked
in real time.
Singleton Clusters: Our tight first-stage clustering yielded 7,731
singleton clusters. Of these, 6,876 were found to share landing do-
mains with WPNs in non-singleton clusters. After meta clustering,
we were then left with 855 singleton clusters. By manually inspect-
ing a sample of 200 singleton clusters, we found them to be a mix
of simple alerts and spurious suspicious ads. Table 5 shows a few
example of the text and domains related to the analyzed singleton
clusters.
Table 5: Examples of Singleton Clusters
Title
TechNewsGadget
Congrats Walmart User!!
Body
189 Fortnite Wants To Add Bot
Players
(1) Reward Waiting!
Domains
(S)-Source (L)-Landing
technewsgadget.net (S)(L)
healthydreamstoday.com (S)
besthealthlife.com (L)
The Mattest Blackest Liner
EVER !!
Coca Cola is looking for
YOU ??
Hire Local Service Profes-
sionals For All Your Needs
FOX NEWS
Our new obsession!
hudabeauty.com (S)(L)
No experience required Training
Provided!
vconnect.com is your one stop
destination for local services.
Lose 45lbs In 4 Weeks! No
Exercise!
eblog.network (S)(L)
m.vconnect.com (S)(L)
nodilax.com (S) women-
lifestyledaily.com (L)
Additional recent measurements: To measure the prevalence of
WPN ads at a later point in time, compared to our initial measure-
ments, we collected an additional and more recent batch of data for
5 days between April 4th, 2020 and April 9th, 2020. We revisited 300
websites randomly chosen from our previous datasets, 35 of which
sent us 305 notifications over 5 days. Of these 305 notifications,
PushAdMiner labeled 198 WPN ads and flagged 48 of them as ma-
licious, which we also verified via manual analysis. After checking
the corresponding landing page URLs on VirusTotal, only 15 of
them were flagged as malicious, confirming again that WPN-based
threats often remain undetected by current defenses.
6.4 Push Ad Networks and Blocking
Figure 6 shows the distribution of WPN ads, including malicious
ones, per ad network. As it can be seen, many of the ad networks we
considered in our measurements are abused to distribute malicious
WPN ads.
We also investigated whether ad blocker extensions used by desk-
top browsers may be effective against WPN ads. For instance, we
734
IMC ’20, October 27–29, 2020, Virtual Event, USA
K. Subramani, X. Yuan, O. Setayeshfar, P. Vadrevu, K. Lee and R. Perdisci
(a) Meta Cluster of WPN-C1 WPNAC
(b) Meta Cluster of WPN-C2 WPNAC
Figure 5: Graphical Representation Examples of Meta Clusters
that all of the websites we visited were still able to request noti-
fication permissions without getting blocked. It is possible that
this new Chrome feature will be able to block abusive WPNs in
the future, after more training data is collected. However, it is un-
clear whether and to what extent it will be effective in blocking
WPN-based malicious ads.
Table 6: Results on Existing Ad Blockers
Figure 6: Distribution of WPNs w.r.t. Ad Networks
Easylist Blocklist
AdBlockPlus
AdGuard
No. of Blocked URLs
Service Worker
Scripts
0 out of 1187
0 out of 884
0 out of 895
Service Worker
Requests
132 out of 8031
0 out of 7276
0 out of 7520
checked the URLs of SW scripts against the Easylist filter rules[6]
used by most popular ad blockers. Furthermore, we installed two
highly popular ad blocker extensions in our Chromium browser
and checked its blocking capability. As shown in Table 6, both ad
blocking mechanisms couldn’t block the requests issued by the
installed SW that were related to WPN ads, even though Easylist
was able to filter a small number (less than 2%) of such network
requests. This shows that existing methods were not sufficient to
mitigate WPN-based ads, including malicious ones.
While working on this study, a new feature was introduced
in Chrome [10] in February, 2020 to prevent the abuse of WPNs.
This feature focuses on blocking notification permission prompts
from websites that have a low notifications opt-in rate. To test the
effect of this feature on our dataset, we used the latest Chrome
version (Chrome 80) to revisit 300 randomly chosen websites that
had previously requested notifications. Since our Chromium code
instrumentations could not be easily ported to this latest version
of the browser, we performed detailed manual analysis. We found
7 RELATED WORK
In this section, we discuss prior studies related to our work.
Service Workers and WPNs: Papadopoulos et al. [48] propose
multiple attack techniques to register malicious SWs that can con-
trol a victim’s web browser (e.g., steal computation power for per-
forming nefarious activities). There exist other studies [47, 51] that
demonstrate similar attacks on Web Workers. Lee et al. [38] study
the risks posed by PWAs. For instance, they collect SW scripts from
top-ranked website homepages and analyze the risks for phishing
due to the use of brand logos in push notifications. They also found a
number of push-based phishing attacks that exploit WhatsApp and
YouTube icons. Furthermore, they also identify security flaws in the
design of browsers and third-party push notification libraries. Other
works related to Progressive Web Apps[25, 42, 43] focus on the per-
formance of PWAs in multiple environment and their energy usage.
Our study is different, because we focus on measuring the use of
WPN messages as an ad-delivery platform in general, and on mea-
susing abuse in WPN ads. To that end, we design and implement an
735
WPN Ad CampaignsUnlabeled ClustersLandingDomainsMaliciousClustersMaliciousWPN Ad CampaignsOneSignalAd-MaveniZootoPushCrewPushEngagePopAdsCriteoHillTopAdsPropellerAdsPubMaticPushMonetizationOther25102510025100025WPNsMalicious WPNsAd NetworksCount ( in log scale)When Push Comes to Ads:
Measuring the Rise of (Malicious) Push Advertising
automated system to subscribe to, collect, interact with, and analyze
in-the-wild WPN messages on both desktop and mobile platforms.
Analyzing Online Ads: A line of studies [22, 24, 49] is dedicated
to investigate the online advertisement ecosystem. They trace the
information passed between ad exchanges and analyze the revenue
collected using ads. Another body of studies [26, 28, 34, 40, 41, 44, 50,
55, 56, 61] focus on identifying traditional malicious web advertise-
ments and ad campaigns in both desktop and mobile environments.
Similarly, a recent study [58] reports observations of social engineer-
ing attack campaigns delivered through traditional web-based ad-
vertisements. Our work is different, because we specifically focus on
ads and malicious ad campaigns delivered through WPN messages.
AdGraph [35] is an advanced machine learning-based system
that focuses on identifying online ads embedded in web pages. Ad-
Graph’s instrumented browser collects fine-grained details about
relationships between DOM nodes. A graph generated from those
details is fed into a Random Forest classifier to detect ADS vs. NON-
ADS elements. Upon testing the effects of AdGraph’s open-source
implementation on ads delivered via WPNs, we observed that their
system collects detailed information from a web page’s context but