As also shown in Figure 316, the -faltivec option to GCC enables AltiVec language extensions.
3.3.10.2. The 970FX AltiVec Implementation
The 970FX AltiVec implementation consists of the following components:
A vector register file (VRF) consisting of 32 128-bit architected vector registers (VR0VR31)
48 128-bit rename registers for allocation in the dispatch phase
A 32-bit Vector Status and Control Register (VSCR)
A 32-bit Vector Save/Restore Register (VRSAVE)
A Vector Permute Unit (VPERM) that benefits the implementation of operations such as
arbitrary byte-wise data organization, table lookups, and packing/unpacking of data
A Vector Arithmetic and Logical Unit (VALU) that contains three parallel subunits: the Vector
Simple-Integer Unit (VX), the Vector Complex-Integer Unit (VC), and the Vector Floating-
Point Unit (VF)
The CR is also modified as a result of certain vector instructions.
The VALU and the VPERM are both dispatchable units that receive predecoded instructions via the
issue queues.
The 32-bit VRSAVE serves a special purpose: Each of its bits indicates whether the corresponding
vector register is in use or not. The processor maintains this register so that it does not have to save
and restore every vector register every time there is an exception or a context switch. Frequently
saving or restoring 32 128-bit registers, which together constitute 512 bytes, would be severely
detrimental to cache performance, as other, perhaps more critical data would need to be evicted from
cache.
Let us extend our example program from Figure 316 to examine the value in the VRSAVE. Figure
317 shows the extended program.
Figure 317. Displaying the contents of the VRSAVE
// vrsave.c
#include 
#include 
#include 
void prbits(u_int32_t);
u_int32_t read_vrsave(void);
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hh687B.htm 20.08.2007
Chapter 3. Inside an Apple Page 49 of 83
// Print the bits of a 32-bit number
void
prbits32(u_int32_t u)
{
u_int32_t i = 32;
for (; i--; putchar(u & 1 << i ? '1' : '0'));
printf("\n");
}
// Retrieve the contents of the VRSAVE
u_int32_t
read_vrsave(void)
{
u_int32_t v;
__asm("mfspr %0,VRsave\n\t"
: "=r"(v)
:
);
return v;
}
int
main()
{
vector float v1, v2, v3;
v1 = (vector float)(1.0, 2.0, 3.0, 4.0);
v2 = (vector float)(2.0, 3.0, 4.0, 5.0);
v3 = vec_add(v1, v2);
prbits32(read_vrsave());
exit(0);
}
$ gcc -Wall -faltivec -o vrsave vrsave.c
$ ./vrsave
11000000000000000000000000000000
We see in Figure 317 that two high-order bits of the VRSAVE are set and the rest are cleared. This
means the program uses two VRs: VR0 and VR1. You can verify this by looking at the assembly
listing for the program.
The VPERM execution unit can do merge, permute, and splat operations on vectors. Having a
separate permute unit allows data-reorganization instructions to proceed in parallel with vector
arithmetic and logical instructions. The VPERM and VALU both maintain their own copies of the
VRF that are synchronized on the half cycle. Thus, each receives its operands from its own VRF.
Note that vector loads, stores, and data stream instructions are handled in the usual LSU pipes.
Although no AltiVec instructions are cracked or microcoded, vector store instructions logically break
down into two components: a vector part and an LSU part. In the group formation stage, a vector
store is a single entity occupying one slot. However, once the instruction is issued, it occupies two
issue queue slots: one in the vector store unit and another in the LSU. Address generation takes place
in the LSU. There is a slot for moving the data out of the VRF in the vector unit. This is not any
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hh687B.htm 20.08.2007
Chapter 3. Inside an Apple Page 50 of 83
different from scalar (integer and floating-point) stores, in whose case address generation still takes
place in the LSU, and the respective execution unitinteger or floating-pointis used for accessing the
GPR file (GPRF) or the FPR file (FPRF).
AltiVec instructions were designed to be pipelined easily. The 970FX can dispatch up to four vector
instructions every cycleregardless of typeto the issue queues. Any vector instruction can be
dispatched from any slot of the dispatch group except the dedicated branch slot 4.
It is usually very inefficient to pass data between the scalar units and the vector unit because data
transfer between register files is not direct but goes through the caches.
3.3.10.3. AltiVec Instructions
AltiVec adds 162 vector instructions to the PowerPC architecture. Like all other PowerPC
instructions, AltiVec instructions have 32-bit-wide encodings. To use AltiVec, no context switching
is required. There is no special AltiVec operating modeAltiVec instructions can be used along with
regular PowerPC instructions in a program. AltiVec also does not interfere with floating-point
registers.
AltiVec instructions should be used at the UISA and VEA levels of the PowerPC architecture but not
at the OEA level (the kernel). The same holds for floating-point arithmetic. Nevertheless, it is
possible to use AltiVec and floating-point in the Mac OS X kernel beginning with a revision of Mac
OS X 10.3. However, doing so would be at the cost of performance overhead in the kernel, since
using AltiVec or floating-point will lead to a larger number of exceptions and register save/restore
operations. Moreover, AltiVec data stream instructions cannot be used in the kernel. High-speed
video scrolling on the system console is an example of the Floating-Point Unit being used by the
kernelthe scrolling routines use floating-point registers for fast copying. The audio subsystem also
uses floating-point in the kernel.
The following points are noteworthy regarding AltiVec vectors.
A vector is 128 bits wide.
A vector can be comprised of one of the following: 16 bytes, 8 half words, 4 words (integers),
or 4 single-precision floating-point numbers.
The largest vector element size is hardware-limited to 32 bits; the largest adder in the VALU is
32 bits wide. Moreover, the largest multiplier array is 24 bits wide, which is good enough for
only a single-precision floating-point mantissa.[44]
[44] The IEEE 754 standard defines the 32 bits of a single-precision floating-point
number to consist of a sign (1 bit), an exponent (8 bits), and a mantissa (23 bits).
A given vector's members can be all unsigned or all signed quantities.
The VALU behaves as multiple ALUs based on the vector element size.
Instructions in the AltiVec instruction set can be broadly classified into the following categories:
Vector load and store instructions
Instructions for reading from or writing to the VSCR
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hh687B.htm 20.08.2007
Chapter 3. Inside an Apple Page 51 of 83
Data stream manipulation instructions, such as data-stream-touch (dst), data-stream-stop (dss),
and data-stream-stop-all (dssall)
Vector fixed-point arithmetic and comparison instructions
Vector logical, rotate, and shift instructions
Vector pack, unpack, merge, splat, and permute instructions
Vector floating-point instructions
Vector single-element loads are implemented as lvx, with undefined fields not zeroed explicitly. Care
should be taken while dealing with such cases as this could lead to denormals[45] in floating-point
calculations.
[45] Denormal numbersalso called subnormal numbersare numbers that are so small they
cannot be represented with full precision.
3.3.11. Power Management
The 970FX supports power management features such as the following.
It can dynamically stop the clocks of some of its constituents when they are idle.
It can be programmatically put into predefined power-saving modes such as doze, nap, and
deep nap.
It includes PowerTune, a processor-level power management technology that supports scaling
of processor and bus clock frequencies and voltage.
3.3.11.1. PowerTune
PowerTune allows clock frequencies to be dynamically controlled and even synchronized across
multiple processors. PowerTune frequency scaling occurs in the processor core, the busses, the
bridge, and the memory controller. Allowed frequencies range from fthe full nominal frequencyto f/2,
f/4, and f/64. The latter corresponds to the deep nap power-saving mode. If an application does not
require the processor's maximum available performance, frequency and voltage can be changed
system-widewithout stopping the core execution units and without disabling interrupts or bus
snooping. All processor logic, except the bus clocks, remains active. Moreover, the frequency change
is very rapid. Since power has a quadratic dependency on voltage, reducing voltage has a desirable
effect on power dissipation. Consequently, the 970FX has much lower typical power consumption
than the 970, which did not have PowerTune.
3.3.11.2. Power Mac G5 Thermal and Power Management
In the Power Mac G5, Apple combines the power management capabilities of the 970FX/970MP with
a network of fans and sensors to contain heat generation, power consumption, and noise levels.
Examples of hardware sensors include those for fan speed, temperature, current, and voltage. The
system is divided into discrete cooling zones with independently controlled fans. Some Power Mac
G5 models additionally contain a liquid cooling system that circulates a thermally conductive fluid to
transfer heat away from the processors into a radiant grille. As air passes over the grille's cooling fins,
the fluid's temperature decreases.[46]
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hh687B.htm 20.08.2007
Chapter 3. Inside an Apple Page 52 of 83
[46] Similar to how an automobile radiator works.
The Liquid in Liquid Cooling
The heat transfer fluid used in the liquid cooling system consists of mostly water mixed
with antifreeze. A deionized form of water called DI water is used. The low
concentration of ions in such water prevents mineral deposits and electric arcing, which
may occur because the circulating coolant can cause static charge to build up.
Operating system support is required to make the Power Mac G5's thermal management work
properly. Mac OS X regularly monitors various temperatures and power consumption. It also
communicates with the fan control unit (FCU). If the FCU does not receive feedback from the
operating system, it will spin the fans at maximum speed.
A liquid-cooled dual-processor 2.5GHz Power Mac has the following fans:
CPU A PUMP
CPU A INTAKE
CPU A EXHAUST
CPU B PUMP
CPU B INTAKE
CPU B EXHAUST
BACKSIDE
DRIVE BAY
SLOT
Additionally, the Power Mac has sensors for current, voltage, and temperature, as listed in Table 311.
Table 311. Power Mac G5 Sensors: An Example
Sensor Type Sensor Location/Name
Ammeter CPU A AD7417[a] AD2
Ammeter CPU A AD7417 AD4
Ammeter CPU B AD7417 AD2
Ammeter CPU B AD7417 AD4
Switch Power Button
Thermometer BACKSIDE
Thermometer U3 HEATSINK
Thermometer DRIVE BAY
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hh687B.htm 20.08.2007
Chapter 3. Inside an Apple Page 53 of 83
Thermometer CPU A AD7417 AMB
Thermometer CPU A AD7417 AD1
Thermometer CPU B AD7417 AMB
Thermometer CPU B AD7417 AD1
Thermometer MLB INLET AMB
Voltmeter CPU A AD7417 AD3
Voltmeter CPU B AD7417 AD3
[a] The AD7417 is a type of analog-to-digital converter with an on-chip temperature
sensor.
We will see in Chapter 10 how to programmatically retrieve the values of various sensors from the
kernel.
3.3.12. 64-bit Architecture
We saw earlier that the PowerPC architecture was designed with explicit support for 64- and 32-bit
computing. PowerPC is, in fact, a 64-bit architecture with a 32-bit subset. A particular PowerPC
implementation may choose to implement only the 32-bit subset, as is the case with the G3 and G4
processor families used by Apple. The 970FX implements both the 64-bit and 32-bit forms[47]
dynamic computation modes[48]of the PowerPC architecture. The modes are dynamic in that you can
switch between the two dynamically by setting or clearing bit 0 of the MSR.
[47] A 64-bit PowerPC implementation must implement the 32-bit subset.
[48] The computation mode encompasses addressing mode.
3.3.12.1. 64-bit Features
The key aspects of the 970FX's 64-bit mode are as follows:
64-bit registers:[49] the GPRs, CTR, LR, and XER
[49] Several registers are defined to be 32-bit in the 64-bit PowerPC architecture,
such as CR, FPSCR, VRSAVE, and VSCR.
64-bit addressing, including 64-bit pointers, which allow one program's address space to be
larger than 4GB
32-bit and 64-bit programs, which can execute side by side
64-bit integer and logical operations, with fewer instructions required to load and store 64-bit
quantities[50]
[50] One way to use 64-bit integers on a 32-bit processor is to have the
programming language maintain 64-bit integers as two 32-bit integers. Doing so
would consume more registers and would require more load/store instructions.
file://C:\Dokumente und Einstellungen\Silvia\Lokale Einstellungen\Temp\~hh687B.htm 20.08.2007
Chapter 3. Inside an Apple Page 54 of 83
Fixed instruction size32 bitsin both 32- and 64-bit modes
64-bit-only instructions such as load-word-algebraic (lwa), load-word-algebraic-indexed
(lwax), and "double-word" versions of several instructions
Although a Mac OS X process must be 64-bit itself to be able to directly access more than 4GB of
virtual memory, having support in the processor for more than 4GB of physical memory benefits both
64-bit and 32-bit applications. After all, physical memory backs virtual memory. Recall that the
970FX can track a large amount of physical memory42 bits worth, or 4TB. Therefore, as long as there
is enough RAM, much greater amounts of it can be kept "alive" than is possible with only 32 bits of
physical addressing. This is beneficial to 32-bit applications because the operating system can now
keep more working sets in RAM, reducing the number of page-outseven though a single 32-bit
application will still "see" only a 4GB address space.
3.3.12.2. The 970FX as a 32-bit Processor
Just as the 64-bit PowerPC is not an extension of the 32-bit PowerPC, the latter is not a performance-
limited version of the formerthere is no penalty for executing in 32-bit-only mode on the 970FX.
There are, however, some differences. Important aspects of running the 970FX in 32-bit mode include
the following.
The sizes of the floating-point and AltiVec registers are the same across 32-bit and 64-bit
implementations. For example, an FPR is 64 bits wide and a VR is 128 bits wide on both the
G4 and the G5.
The 970FX uses the same resourcesregisters, execution units, data paths, caches, and bussesin
64- and 32-bit modes.
Fixed-point logical, rotate, and shift instructions behave the same in both modes.
Fixed-point arithmetic instructions (except the negate instruction) actually produce the same
result in 64- and 32-bit modes. However, the carry (CA) and overflow (OV) fields of the XER
register are set in a 32-bit-compatible way in 32-bit mode.
Load/store instructions ignore the upper 32 bits of an effective address in 32-bit mode.
Similarly, branch instructions deal with only the lower 32 bits of an effective address in 32-bit
mode.
3.3.13. Softpatch Facility
The 970FX provides a facility called softpatch, which is a mechanism that allows software to work
around bugs in the processor core and to otherwise debug the core. This is achieved either by
replacing an instruction with a substitute microcoded instruction sequence or by making an
instruction cause a trap to software through a softpatch exception.
The 970FX's Instruction Fetch Unit contains a seven-entry array with content-addressable memory
(CAM). This array is called the Instruction Match CAM (IMC). Additionally, the 970FX's instruction
decode unit contains a microcode softpatch table. The IMC array has eight rows. The first six IMC