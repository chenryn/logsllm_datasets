Table ‘alien_info' doesn't exist
以下是你可能看到的其他一些错误消息：
Table 'test.no_such_table'doesn't exist
Can't create table
Can't create database 'yourdatabase';database exists
还有数十个其他的错误消息，如果在这里全部列出有些浪费篇幅。可以访问以下网站来得到更多
信息：
http://dev.mysql.com/doc/refman/5.0/en/error-messages-server.html
如果要改造为mysql函数，如#1所述，可以使用mysql_error（），而不是mysqli_error（）。
718
附录
---
## Page 755
其他
#4.PHP错误异常处理
异常处理允许你改变代码的正常流程，出现某个特定异常时执行一个
特殊的代码块。PHP5和6都提供了异常处理。以下做一个简单介绍。
DATAVILLE
SAVINGS & LOAN
假设你想从一个ATM取$200。
不过可能要求最低余额为$1000，而这次取款会让你的余额低
品
于$1000。这是不允许的。
事务失败！
以下说明这种情况下PHP代码如何利用异常处理来来捕获失
败。
dud>
这是余额低于（000时将发
function checkBalance($balance)(
出的反馈。
if($balancegetMessage();
的代码。在这种情况下，会回显
我们的消息。
getMessage();
1
title = $title;
$this->lyrics = $lyrics;
/
这是使用对象实例变量
的一个方法。
function sing() (
echo 'This is called'.$this->title.'.';
echo 'One,two,three...'.$this->lyrics;
新歌的歌名值为“BlueSuede Shoes”
2创建一个新对象。
$shoes_song = new Song('Blue Suede Shoes','Well it\'s one for the money
$shoes_song->sing() ;
在这里调用对象的sins(）方法。
3这首歌现在会自己唱起来！
运行这个代码时可以得到以下结果：
不过，既然不用这些对象也完全
This is called Blue Suede Shoes.
One, two, three...Weli it's one for the
可以直接编写echo代码，为什么
money...
还要使用面向对象PHP呢？
对此有一些很充分的理由
你现在的位置
721
---
## Page 758
面向对象php
#5.面向对象PHP（续）
不再是按顺序逐步执行的一组指令，你的数据结构变成了对象。对象不仅
包含数据的定义，还包含可以在这些数据上完成的所有操作。在我们的
Song示例中，类中设置了歌名和歌词，而且在这个类中创建了sing（)方
法。如果需要向song对象增加更多功能，需要向Song类增加新的方法和
变量。例如，如果希望每首歌的作者与各个song对象关联，可以将它作为
一个变量增加到类中。
随着应用规模的增大，面向对象才更能发挥威力。假设我们决定在一个卡
拉OK应用中使用song类，其中有成百上千甚至成千上万个单个的song对
象，所有对象都有其自己唯一的歌名、歌词和作者。现在假设有人希望只
选择Elvis写的歌，所要做的就是查看各个对象的songwriter实例变量。
那么如何具体将歌词输入卡拉OK应用呢？完成这个操作时只需在各个song
对象上调用sing（)方法。尽管在各个对象上调用完全相同的方法，它只
会访问各个对象所独有的数据。
所以使用面向对象PHP的两大好处是：
对象可以轻松地重用。它们设计为独立于使用对象的代码，可以根据需要
进行重用。
代码更易于理解和维护。如果一个数据类型需要改变，这个改变只出现在
对象中，而不会出现在代码别处。
总的说来，面向对象有一个很大的缺点：面向对象代码可能更允长，而且
编写时需要更长的时间。如果只是需要显示一首歌的歌词，那么编写一个
小的过程式程序可能是你的最佳选择。不过，如果你希望建立一个在线卡
拉OK应用，那么可以考虑更深人地研究面向对象PHP。
PDG
722
附录
---
## Page 759
其他
#6.保护PHP应用的安全
可以遵循一些简单的步骤来保护你的PHP脚本不会受到穷凶极恶的黑客的攻击，
要知道他们可能盘踞在键盘后面虎视耽耽地等待你的失误。
删除phpinfo（）引I用。第一次在新的Web服务器上开始构建PHP应用
时，你可能会创建一个包含phpinfo（）函数的脚本，以便了解你使
用的是哪个版本的PHP，以及它是否支持MySQL，还会得到其他已安
装库的一个列表。用phpinfo（)检查本身没有问题，不过查看之后
一定要删除这个函数。如果没有删除这个函数，其他黑客如果发现了
一个新的PHP漏洞，就能查看你的网站是否存在这个漏洞。
如果你没有使用一个Web托管服务，而且可以访问php.ini文件，可
以做一些修改进一步加强PHP应用的安全。有讽刺意味的是，Php，
ini文件的位置可以使用phpinfo（）找到：
phpinfog
PHPVersion5.2.1
php
System
Bulld Date
Apr3200713:21:53
Conftgre
Jconfgure-enable-versioningwth-leyouGNucisebie-all-enable-ibxm
-7--x-
-grexyenabe-tastcg
这是你的php.ini文
rverAPI
CGIFusICGI
Virtual Directory
disapled
件的路径。写下这
Support
个路径后，要记住
Usniocaietclohpbphpini
删除phpinfo（）函数
PHPAPI
20041225
PHPExtension
20060613
Zend Extension
220060519
png Snqea
no
Thread Safety
disabled
Zend Memory
enabied
IPv6Support
Manager
pyoesip
RegisteredPHP
pho,fie.data.n.tp.comress.ib
这个页面下面
cp.ucp,unix,udg
还有更多敬惑
Socket Transports
Registered Stream
信息：
sing.rot3.stng.touper.sing tolcwer.stng.sip_ags.conver'.conumec.2i.
Filters
你现在的位整
723
---
## Page 760
php安全措施
#6.保护你的PHP应围（续）
需要考虑在php.ini文件中修改以下特定设置。在一个文本编辑器中打开这个文
件，完成修改，保存文件，然后重启你的Web服务器。
safe_mode=On
打开safe_mode时，对于任何PHP脚本，如果一个PHP脚本归某人所有（即该脚
本的所有者），则不能由同一个Web服务器上其他人的另一个脚本所调用。很明
显，如果允许其他所有者的脚本调用你的脚本，则不能使用这个设置。
open_basedir = directory[:.....]
这会限制PHP能够执行或访问的脚本和文件必须在这个目录及其下面的子目录中。
expose_php = off
如果将这个选项设置为On，每个访问网站的Web浏览器都会发送首部信息，其中会
暴露有关你的PHP服务器的信息。把它关闭则会隐藏该信息，使你的服务器暴露更
少。
display_errors = Off
一旦完成应用开发，并在实际Web服务器上运行，就不需要再看到所有这些错误消
息。很可能你已经处理了错误，不过有时还是会漏掉一些问题。要对网站访问者隐
藏这些错误消息，可以将它设置为Off。
log_errors = On
这会把错误发送至一个错误日志。希望检查应用查找错误时，可以从这个错误日志
开始。将display_errors设置为off并把log_errors设置为On，你就能看到
问题，而网站访问者不会看到。
error_log = filename
必须用特定的Web服务器软件来查找这个文件。1og_errors设置为On时错误将
写至这个文件。
724附录
---
## Page 761
其他
#7.保护应用免受跨网站脚本攻击
你可能听说过跨网站脚本攻击（cross-site scripting），有
时称为XSS。跨网站脚本攻击是一种针对Web应用的攻
击，将脚本代码传递到你的表单处理脚本，并算改你
CuaWarsAdd YourghScore
的输出。这在PHPWeb应用中是一个严重的安全问题。
Guitar Wars-AddYourHigh Score
下面来具体看看这是什么，以及如何防范。
Name: ohe hecke
跨网站脚本攻击通常会利用那些显示用户提交数据的
Scote：0000.
Scen sot（CF）
网站。从用户得到并显示的数据有可能被破坏，导致
Asd
网站的访问者很容易受到黑客的攻击。
通过使用XSS攻击，黑客可以做任何事情。其中比较槽
如果Ethel无法做器，她会
糕的就是将你的结果页面重定向到受黑客控制的一个
利用跨网站脚本攻击将
网站中的一个页面，可能要求用户提供更多信息。你
分数页面重定向到她自己
的用户可能没有注意到现在已经不再在你的网站上，
的网站。
而且由于他信任你的网站，很有可能会直接向攻击者
你以为能打败我吗？
的服务器提交敏感信息。
只要我打算攻击你的
网站，你就完了！
以下是GuitarWars网站上可能发生的情况：
Ethel，并不是在表单的Name域提交她的名字，而是键人
了一些JavaScript代码。在这个例子中，她使用window，
location函数将浏览器重定向到她自己的网站。而且
由于她控制着自己的网站，所以可以向访问者显示她希
望的任何内容，包括一个看上去像GuitarWars的网站。
她甚至还可以利用一些网站做更邪恶的事情，要求人
她还可以做另外一些甚至更为阴险的事情，包括窃取
cookie，或者向用户提供一个看上去像是登录界面的屏
幕。一旦用户登录，她就得到了该用户的用户名和口
令，然后可以假扮作这个用户再去访问原来的网站。
她要做的只是在表单的name
那么如何避免你的Web应用受到跨网站脚本攻击呢？
域提支这个代码。有人叠看
分数时，他们的测览器会由
这个avaScript代码重定向到
她的网站。
你现在的位置
725
---
## Page 762
防止跨网站脚本攻击
#7.保护应用免受跨网站脚本攻击（续）
幸运的是，如果在验证你的数据，则表明已经在保护你的应用。你已经了解如何在
GuitarWars中提供保护。以下是保证应用安全的3个原则：
一切都要验证
对于你接收到的任何数据（如表单输入），都需要加以验证，保证在黑客代码危害你
的应用之前能够及早检测出来。如果先假定数据是不正确的，直到通过验证证实它确
实无害，那么你会安全得多。
内置PHP函数可以提供帮助
使用内置PHP函数（如strip_tags（））来帮助保证外部数据的合法性。strip_
tags（）是一个很棒的函数，可以从一个脚本删除所有HTML标记。所以如果对Ethel的
$_POST['name']使用strip_tags（），就会得到：
window.location='http://ethelrulz.com
尽管这仍然不是一个用户名，但它确实不会让浏览器重定向，因为已经去除了重要的
JavaScript标记。
数据在被证明清白之前都有嫌疑
尽你所能从限制性最强的验证开始，只是在必要时才放松限制。例如，如果开始时电
话号码域中只接受数字，然后逐步充许有连字符或括号，这样做会比一开始就允许任
何字母数字字符要安全得多。或者对于GuitarWars的情况，如果在name域中除了字母
外不充许出现其他字符，那么甚至不会得到小于号（<>
比较
=1====1==
比较
逻辑
比较标作符（如
&&
F语句中使用的
逻辑
提作符）也有优
=+=-=*=/=.=$=6=1==
赋值
先级。
>=
and
逻辑
xor