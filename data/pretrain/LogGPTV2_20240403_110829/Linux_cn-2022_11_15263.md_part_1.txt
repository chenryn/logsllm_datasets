---
author: Sk
category: 系统运维
comments_data: []
count:
  commentnum: 0
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 5957
date: '2022-11-17 16:39:12'
editorchoice: false
excerpt: 通过安全的网络连接在远程计算机上调用命令或程序。
fromurl: https://ostechnix.com/execute-commands-on-remote-linux-systems-via-ssh/
id: 15263
islctt: true
largepic: /data/attachment/album/202211/17/163910g9u42ssfcuk9c290.jpg
permalink: /article-15263-1.html
pic: /data/attachment/album/202211/17/163910g9u42ssfcuk9c290.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lkxed
summary: 通过安全的网络连接在远程计算机上调用命令或程序。
tags:
- SSH
thumb: false
title: 通过 SSH 在远程 Linux 系统上执行命令
titlepic: true
translator: MjSeven
updated: '2022-11-17 16:39:12'
---
![](/data/attachment/album/202211/17/163910g9u42ssfcuk9c290.jpg)
> 
> 通过安全的网络连接在远程计算机上调用命令或程序。
> 
> 
> 
有一天，我正在测试如何在 [将文件或目录复制到多个位置和系统时保持完整的文件权限](https://ostechnix.com/how-to-keep-ownership-and-file-permissions-intact-when-copying-files-or-directories/)。当我想检查远程系统上的文件权限时，我必须通过 SSH 登录它并检查属性。从远程系统多次登录和注销的过程让我有点烦，我想，如果我可以**在远程 Linux 系统上通过 SSH 执行命令**就好了。
幸运的是，在浏览了 `ssh` 命令的手册页后，我找到了一个解决办法。
如果你想知道如何本地运行远程系统上运行命令或脚本，而不登录到远程系统，下面的内容会告诉你如何做。
### 1、通过 SSH 在远程 Linux 系统上执行命令
从本地系统通过 SSH 在远程系统上运行命令或脚本的典型方法是：
```
$ ssh  
```
允许我给你们举几个例子：
#### 1.1、通过 SSH 在远程系统上运行单个命令
假设你想要 [查找远程 Linux 系统的内核详细信息](https://ostechnix.com/find-out-the-linux-distribution-name-version-and-kernel-details/)。为此，只需运行：
```
$ ssh PI:EMAIL uname -a
```
这里，
* `sk` 是远程系统的用户名，
* `192.168.225.22` 是远程系统的 IP 地址，
* `uname -a` 是我想在远程系统上运行的命令。
示例输出：
![通过 SSH 在远程 Linux 系统上执行命令](/data/attachment/album/202211/17/163913a9tuxt1uvxvmmkvg.gif)
看到没？我并没有实际登录到远程系统，但通过 SSH 在远程系统上执行了 `uname` 命令，并在本地系统的终端上显示了输出。
你还可以像下面这样用引号指定命令。
```
$ ssh PI:EMAIL "uname -a"
```
或者，
```
$ ssh PI:EMAIL 'uname -a'
```
如果你已经 [更改了 SSH 协议的默认端口](https://ostechnix.com/how-to-change-apache-ftp-and-ssh-default-port-to-a-custom-port-part-3/)，只需使用 `-p` 参数指定它。
```
$ ssh -p 2200 PI:EMAIL uname -a
```
#### 1.2、通过 SSH 在远程主机上执行多个命令
你还可以在远程主机上运行多个命令，方法是将它们放在引号中。
```
$ ssh PI:EMAIL "uname -r && lsb_release -a"
```
或者：
```
$ ssh PI:EMAIL "uname -r ; lsb_release -a"
```
上面的命令将显示我的 Ubuntu 服务器的内核版本和发行版详细信息。
示例输出：
![在 Linux 上通过 SSH 在远程主机上运行多个命令](/data/attachment/album/202211/17/163913kvwqbzpp3ozp2w24.png)
正如一位读者在下面的评论部分提到的那样，你应该用引号指定多个命令。如果不使用引号，第一个命令将在远程系统上执行，第二个命令将仅在本地计算机上执行。整个带引号的命令将按预期在远程计算机上运行。
> 
> **提示：** 了解 `&&` 和 `;` 在命令中的区别：
> 
> 
> `&&` 操作符只有在第一个命令成功时才执行第二个命令。
> 
> 
> 示例：
> 
> 
> 
> ```
> sudo apt-get update && sudo apt-get upgrade
> 
> ```
> 
> 在上述示例中，如果第一个命令成功，才会执行 `sudo apt-get upgrade`。否则，它将不会运行。
> 
> 
> `;` 操作符会执行第二个命令，无论第一个命令是成功还是失败。
> 
> 
> 示例：
> 
> 
> 
> ```
> sudo apt-get update ; sudo apt-get upgrade
> 
> ```
> 
> 在上述示例中，即使第一个命令失败，`sudo apt-get upgrade` 也会执行。
> 
> 
> 
#### 1.3、通过 SSH 在远程机器上调用有 sudo 权限的命令
有些命令需要 `sudo` 权限才能运行。例如，以下命令将在我的远程系统上安装 `apache2`。
```
$ ssh -t PI:EMAIL sudo apt install apache2
```
示例输出：
![通过 SSH 在远程机器上运行有 Sudo 权限的命令](/data/attachment/album/202211/17/163913rgzg1jmqiwhx1lh5.png)
注意到了吗？我在上面的命令中使用了 `-t` 标志，我们需要使用它来强制进行伪终端分配。它用于在远程机器上执行任意基于屏幕的程序，这非常有用。例如，在实现菜单服务时。
另外，我输入了**两次**密码。第一次是远程用户的密码，以便从本地系统通过 SSH 访问远程系统，第二次是为了向远程用户赋予 sudo 权限，以便安装应用程序（在本例中为 apache2）。
让我们用以下命令检查 Apache 服务是否正在运行：
```
$ ssh -t PI:EMAIL sudo systemctl status apache2
PI:EMAIL's password: 
[sudo] password for sk: 
● apache2.service - The Apache HTTP Server
Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)
Drop-In: /lib/systemd/system/apache2.service.d
└─apache2-systemd.conf
Active: active (running) since Thu 2019-12-19 11:08:03 UTC; 52s ago
Main PID: 5251 (apache2)
Tasks: 55 (limit: 2318)
CGroup: /system.slice/apache2.service
├─5251 /usr/sbin/apache2 -k start
├─5253 /usr/sbin/apache2 -k start
└─5254 /usr/sbin/apache2 -k start
Dec 19 11:08:03 ubuntuserver systemd[1]: Starting The Apache HTTP Server...
Dec 19 11:08:03 ubuntuserver apachectl[5227]: AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 2409:4072:51f:a1b6:a00:27ff:f
Dec 19 11:08:03 ubuntuserver systemd[1]: Started The Apache HTTP Server.
```
同样的，我们可以通过 SSH 在本地系统上运行远程系统上的任何命令或脚本。
#### 1.4、通过 SSH 在远程系统上运行本地脚本
让我们在本地系统上创建一个简单的脚本来显示关于远程系统的发行版名称、包管理和基本细节等。
```