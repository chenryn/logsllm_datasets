Classification: Internal
www.nviso.eu
.NET reflection for post exploitation 
tradecraft in an EDR world. 
Classification: Internal
Jean-François Maes
Creator of redteamer.tips
Host of “The voices of infosec” podcast
Contributor to SANS SEC560 and SEC699
Devourer of chicken and other proteins
#RedTeamFit
# Whoami
Classification: Internal
Why give this talk?
Because I like donuts
Classification: Internal
1 Why C#?
2
What is reflection?
3
Creating a loader
4
Improving the loader
5
Future of tradecraft
Classification: Internal
Why C# ?
As defences grow, so does the malware
Since 
V5
AMSI
Constrained Language Mode
Nice read: https://stealthbits.com/blog/ways-to-detect-and-mitigate-powershell-attacks/
Classification: Internal
Why C# ?
As defences grow, so does the malware
Script Block Logging
Nice read: https://stealthbits.com/blog/ways-to-detect-and-mitigate-powershell-attacks/
Since 
V5
Classification: Internal
Why C# ?
As defences grow, so does the malware
Shoutout to
Nice presentation: https://hackinparis.com/data/slides/2019/talks/HIP2019-Marcello_Salvati-Ironpython_Omfg.pdf
Classification: Internal
What is reflection?
www.nviso.be
|  8
Let’s see what the internet says
Wikipedia 
In computer science, reflection 
programming is the ability of a process to 
examine, introspect, and modify its own 
structure and behavior.
A language supporting reflection provides 
a number of features available at runtime 
that would otherwise be difficult to 
accomplish in a lower-level language. 
Microsoft 
Stack Overflow
Reflection provides objects that describe 
assemblies, modules, and types. You can 
use reflection to dynamically create an 
instance of a type, bind the type to an 
existing object, or get the type from an 
existing object and invoke its methods or 
access its fields and properties. If you are 
using attributes in your code, reflection 
enables you to access them.
Reflection allows you to write code that 
can inspect various aspects about the code 
itself.
It enables you to do simple things like 
Loading an assembly at runtime, finding a 
specific class, determining if it matches a 
given Interface, and invoking certain 
members dynamically.
Classification: Internal
Short primer on .NET
www.nviso.eu
|  9
Becoming a .NET master in a minute
Code 
Explanation
Type
Best compared to a “class” in programming terms
MethodInfo
Best compared to a “method/function” in programming terms
AppDomain
A logical “container/sandbox” that performs isolation between 
assemblies. Multiple assemblies can live in an appdomain and 
multiple appdomains can live inside a process. Appdomains 
can be unloaded, assemblies cannot.
BindingFlags
Manipulates  the way methods are being enumerated.
Classification: Internal
Creating the loader
www.nviso.eu |  10
Loader 1- Ragnaros - “The PoC stage”
Reflection
Classification: Internal
Creating the loader
www.nviso.eu |  11
Loader1 - “The PoC stage”
Code 
Explanation
Assembly.load(Byte[] AssemblyBytes)
Loads the .NET assembly from the bytearray, returns an Assembly object
GetTypes(Assembly assembly)
Gets all the accessible classes in an array of the Type object
getMethodsForType(Type type)
Gets all the accessible methods in the provided type (= class), returns an array of 
the MethodInfo object
(Type) type.GetMethod(String methodName)
Gets the specified method for that type object, returns a MethodInfo object
Activator.CreateInstance(Type type)
Instantiate a specific type (=class), returns an objecthandle
(MethodInfo) method.Invoke(Objecthandle initatiatedType,Object[] params)
Invokes the specified method with the specified parameters
Classification: Internal
Flaws in loader1
www.nviso.eu |  12
What can we improve?
No remote fetch
AMSI
Classification: Internal
Flaws in loader1
www.nviso.eu |  13
What can we improve?
ETW
Classification: Internal
Expanding the loader
www.nviso.eu |  14
Loader 2 – Illidan – “The Web angle”
Classification: Internal
Expanding the loader
www.nviso.eu |  15
Loader 2 – “The Web angle”
Classification: Internal
Flaws in loader 2
www.nviso.eu |  16
What can we improve?
What happens if 404?
Classification: Internal
Flaws in loader 2
www.nviso.eu |  17
What can we improve?
AMSI
ETW
Classification: Internal
Expanding the loader
www.nviso.eu |  18
Loader 3 - Lich King – Adding robustness to the Web Angle
Classification: Internal
Expanding the loader
www.nviso.eu |  19
Loader 3 – Adding robustness to the Web Angle
Classification: Internal
Flaws in loader 3
www.nviso.eu |  20
What can we improve?
Classification: Internal
Flaws in loader 3
www.nviso.eu |  21
What can we improve?
ETW
AMSI
Classification: Internal
|  22
Classification: Internal
www.nviso.eu |  23
Classification: Internal
Expanding the loader
www.nviso.eu |  24
Loader 4 – Deathwing  – Adding evasion in the mix
Classification: Internal
Expanding the loader
www.nviso.eu |  25
Loader 4 – DeathWing  – Adding evasion in the mix
Classification: Internal
Expanding the loader
www.nviso.eu |  26
Loader 4 – Adding evasion in the mix
Classification: Internal
Flaws in loader 4 
www.nviso.eu |  27
What can we improve?
Classification: Internal
Flaws in loader 4 
www.nviso.eu |  28
What can we improve?
Obfuscation
Encryption
Classification: Internal
Flaws in loader 4 
www.nviso.eu |  29
What can we improve?
Classification: Internal
Expanding the loader
www.nviso.eu |  30
Loader 5 – Double Reflection? It’s super effective! 
Classification: Internal
Expanding the loader
www.nviso.eu |  31
Loader 5 – Double Reflection? It’s super effective! 
Classification: Internal
Flaws in loader 5
www.nviso.eu |  32
What can we improve?
ETW trace before the AMSI/ETW patch
ETW trace after the AMSI/ETW patch
Classification: Internal
Flaws in loader 5 
www.nviso.eu |  33
What can we improve?
Obfuscation
Encryption
Classification: Internal
Flaws in loader 5 
www.nviso.eu |  34
What can we improve?
Classification: Internal
Bonus: Idea to “bamboozle” analysts
www.nviso.eu |  35
Deception is an art
Can you see what happened here? 
Classification: Internal
Bonus: Different appdomains
www.nviso.eu |  36
Creating modular loaders for the win!
Classification: Internal
Bonus: Different appdomains
www.nviso.eu |  37
Creating modular loaders for the win!
Classification: Internal
Classification: Internal
Future of the tradecraft
What will red teaming look like in the future?
Obfuscation + 
encryption using 
potential encryption 
keys
Classification: Internal
Future of the tradecraft
What will red teaming look like in the future?
Classification: Internal
Future of the tradecraft
What will red teaming look like in the future?
Classification: Internal
www.nviso.eu
Any questions from the audience?
www.nviso.eu
|  42