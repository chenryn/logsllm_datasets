### Challenge-Response Protocol
**Figure 17. Device Authentication via a Challenge-Response Protocol.**

For an adversary to successfully predict the challenge-response pairs (CRPs) used for authentication, they would need to measure and store a significant portion of possible fingerprints from an authentic Flash chip. In our prototype, generating all fingerprints from a single page (16K bits) takes approximately 10 seconds and requires 10 bits of storage for each Flash bit. For a 16Gbit (2 GB) Flash chip, which is considered moderate by today's standards, this implies that fully characterizing the chip would take hundreds of days and require 20 GB of storage. In the context of counterfeiting, such costs are likely prohibitive, making the production of counterfeits economically unattractive.

The security of the authentication scheme based on Flash fingerprints can be further enhanced by adding additional controls to the Flash interface. For example, a USB Flash memory could be used as a two-factor authentication token by updating its firmware to include a challenge-response interface for Flash fingerprints. Given that authentication operations need only occur infrequently, the USB stick can be configured to allow a query every few seconds. If a fingerprint is based on 1024 Flash bits, fully characterizing an 8 GB USB stick could take tens of years.

### Cryptographic Keys
In addition to device identification and authentication, Flash fingerprints can be used to generate many independent secret keys without requiring additional storage. Essentially, the proposed Flash fingerprints provide unpredictable and persistent numbers for each device. Previous studies, such as fuzzy extractors [17] and Physical Unclonable Functions (PUFs) [3], have demonstrated how symmetric keys (uniformly distributed random numbers) can be derived from biometric data or IC signatures using hashing and error correction. The same approach can be applied to Flash fingerprints to generate reliable cryptographic keys. A typical Flash with a few GB can potentially produce tens of millions of 128-bit symmetric keys.

### Related Work

#### Hardware Random Number Generators
Hardware random number generators (HRNGs) derive random numbers from high-entropy sources in the physical world. Theoretically, random physical processes are completely unpredictable, making HRNGs superior to software-based pseudo-random number generators in terms of randomness. Common entropy sources in recent HRNG designs include thermal noise and other system-level noises. For example, [18] uses the phase noise of identical ring oscillators, [19] uses differences in path delays, and [20] and [21] use the metastability of flip-flops or cross-coupled inverters. These HRNGs typically achieve high throughput due to the high frequency of their entropy sources. However, they require carefully designed circuits to minimize process variations, ensuring that the noise from the entropy source is dominant. In contrast, random number generation in Flash memory cells does not require specially designed circuits and is more resilient to process variations. Additionally, our entropy source is based on quantum behavior and should remain effective even at extremely low temperatures where thermal noise and other types of noise are significantly reduced.

#### Hardware Fingerprint – Physical Unclonable Functions (PUFs)
Instead of traditional authentication methods based on secret keys and cryptographic computations, researchers have proposed using the inherent physical variations in hardware devices for identification and authentication. Process variations in semiconductor foundries are a common source of hardware uniqueness, which is beyond the control of the designer [22, 23, 24]. A unique fingerprint can be extracted and used to identify the chip, but it cannot be used for security applications because it can be stored and replayed. Our fingerprinting scheme also leverages process variations.

For security applications, Physical Unclonable Functions (PUFs) have been proposed. PUFs can generate multiple fingerprints per device by using complex physical systems whose analog characteristics cannot be perfectly replicated. Pappu initially proposed PUFs [25] using light scattering patterns. In silicon, researchers have constructed circuits that, due to random process variations, emit unique outputs per device. Some silicon PUFs use ring oscillators [26] or race conditions between two identical delay paths [27]. These PUFs are usually implemented as custom circuits on the chip. Recently, PUFs have been implemented without additional circuitry by exploiting metastable elements such as SRAM cells, which have unique values on start-up for each IC instance [28, 4], or in Flash memories [5].

Our authentication scheme requires no new circuitry and can be implemented with commercially available and ubiquitous Flash chips. Unlike metastable elements, authentication does not require a power cycle. The scheme can generate many fingerprints by using more pages in the Flash chip. Acquiring a fingerprint is also faster and more widely applicable than previous Flash authentication methods.

### Conclusion
In this work, we demonstrate that unmodified Flash chips can provide two important security functions: high-quality true random number generation and the provision of many digital fingerprints. Using thermal noise and random telegraph noise, random numbers can be generated at up to 10Kbit per second for each Flash bit and pass all NIST randomness tests. An authentication scheme with fingerprints derived from partial programming of pages on the Flash chip shows high robustness and uniqueness. The authentication scheme was tested over 24 pages with 24 different instances of a Flash chip and showed clear separation. A Flash chip can provide many unique fingerprints under various temperature and aged conditions. Both random number generation and fingerprint generation require no hardware changes to commercial Flash chips. Because Flash chips are ubiquitous, the proposed techniques have the potential to be widely deployed in many existing electronic devices through a firmware update or software change.

### Acknowledgements
This work was partially supported by the National Science Foundation grant CNS-0932069, the Air Force Office of Scientific Research grant FA9550-09-1-0131, and an equipment donation from Intel Corporation.

### References
[1] S. Yilek and T. Ristenpart, "When Good Randomness Goes Bad: Virtual Machine Reset Vulnerabilities and Hedging Deployed Cryptography," in Proceedings of the 17th Annual Network and Distributed System Security Conference, 2010.
[2] A. Rukhin, J. Soto, and J. Nechvatal, "A Statistical Test Suite for Random and Pseudorandom Number Generators for Cryptographic Applications," April 2010. [Online]. Available: http://csrc.nist.gov/groups/ST/toolkit/rng/documents/SP800-22rev1a.pdf.
[3] G. E. Suh and S. Devadas, "Physical Unclonable Functions for Device Authentication and Secret Key Generation," Proceedings of the 44th Conference on Design Automation, pp. 9-14, 2007.
[4] P. Koeberl, J. Li, A. Rajan, C. Vishik, and W. Wu, "A Practical Device Authentication Scheme Using SRAM PUFs," Proceedings of the 4th International Conference on Trust and Trustworthy Computing, pp. 63-77, 2011.
[5] P. Prabhu, A. Akel, L. M. Grupp, W.-K. S. Yu, G. E. Suh, E. Kan, and S. Swanson, "Extracting Device Fingerprints from Flash Memory by Exploiting Physical Variations," Proceedings of the 4th International Conference on Trust and Trustworthy Computing, pp. 1-17, 2011.
[6] M. J. Kirton and M. J. Uren, "Noise in Solid-State Microstructures: A New Perspective on Individual Defects, Interface States and Low-Frequency Noise," Advances in Physics, vol. 38, pp. 367-468, 1989.
[7] H. Kurata, K. Otsuga, A. Kotabe, S. Kajiyama, T. Osabe, Y. Sasago, S. Narumi, K. Tokami, S. Kamohara, and O. Tsuchiya, "Random Telegraph Signal in Flash Memory: Its Impact on Scaling of Multilevel Flash Memory Beyond the 90-nm Node," IEEE Journal of Solid-State Circuits, vol. 42, no. 6, pp. 1362-1369, 2007.
[8] C. Compagnoni, M. Ghidotti, A. Lacaita, A. Spinelli, and A. Visconti, "Random Telegraph Noise Effect on the Programmed Threshold-Voltage Distribution of Flash Memories," IEEE Electron Device Letters, vol. 30, no. 9, pp. 984-986, 2009.
[9] S.-M. Joe, J.-H. Yi, S.-K. Park, H. Shin, B.-G. Park, Y. J. Park, and J.-H. Lee, "Threshold Voltage Fluctuation by Random Telegraph Noise in Floating Gate NAND Flash Memory String," IEEE Transactions on Electron Devices, vol. 58, no. 1, pp. 67-73, 2011.
[10] D. Knuth, The Art of Computer Programming, Reading: Addison-Wesley, 1968.
[11] T. K. Abe, A. Sugawa, and S. Ohmi, "Understanding of Traps Causing Random Telegraph Noise Based on Experimentally Extracted Time Constants and Amplitude," in Proceedings of the IEEE International Reliability Physics Symposium (IRPS), Monterey, CA, 2011.
[12] J. H. Scofield, N. Borland, and D. M. Fleetwood, "Temperature-independent switching rates for a random telegraph signal in a silicon metal–oxide–semiconductor field-effect transistor at low temperatures," Applied Physics Letters, vol. 76, no. 22, pp. 3248-3250, 2000.
[13] Open NAND Flash Interface, "Open NAND Flash Interface," [Online]. Available: http://onfi.org.
[14] Texas Instruments Incorporated, "OMAP Mobile Processors," [Online]. Available: http://focus.ti.com/general/docs/gencontent.tsp?contentId=46946.
[15] EE Times.com, "U.S.: Fake parts threaten electronic market," 17 February 2010. [Online]. Available: http://www.eetimes.com/electronics-news/4087628/U-S--Fake-parts-threaten-electronic-market.
[16] FrankenFlash Project, "SOSFakeFlash," [Online]. Available: http://sosfakeflash.wordpress.com/.
[17] Y. Dodis, L. Reyzin, and A. Smith, "Fuzzy Extractors: How to Generate Strong Keys from Biometrics and Other Noisy Data," SIAM Journal of Computing, vol. 38, no. 1, pp. 97-139, 2008.
[18] B. Sunar, W. J. Martin, and D. R. Stinson, "A provably secure true random number generator with built-in tolerance to active attacks," in IEEE Transactions on Computers, 2007.
[19] C. W. Odonnell, G. E. Suh, and S. Devadas, "PUF-based random number generation," In MIT CSAIL CSG Technical Memo 481, Cambridge, 2004.
[20] M. Majzoobi, F. Koushanfar, and S. Devadas, "FPGA-based True Random Number Generation using Circuit Metastability with Adaptive Feedback Control," in Workshop on Cryptographic Hardware and Embedded Systems, 2011.
[21] G. Cox, C. Dike, and D. J. Johnston, "Intel’s Digital Random Number Generator," Hot Chips, 2011.
[22] D. S. Boning and J. E. Chung, "Statistical metrology: Understanding spatial variation in semiconductor manufacturing," in Proceedings of SPIE 1996 Symposium on Microelectronic Manufacturing, 1996.
[23] K. A. Bowman, S. G. Duvall, and J. D. Meindl, "Impact of die-to-die and within die parameter fluctuations on maximum clock frequency distribution for gigascale integration," Journal of Solid-State Circuits, vol. 37, no. 2, pp. 183-190, 2002.
[24] S. R. Nassif, "Modeling and forecasting of manufacturing variations," in Proceedings of ASP-DAC 2001, Asia and South Pacific Design Automation Conference 2001, 2001.
[25] R. Pappu, Physical One-Way Functions, PhD Thesis, MIT, 2001.
[26] B. Gassend, D. Clarke, M. van Dijk, and S. Devadas, "Silicon Physical Random Functions," in Proceedings of the Computer and Communication Security Conference, New York, 2002.
[27] J. W. Lee, D. Lim, B. Gassend, G. E. Suh, M. van Dijk, and S. Devadas, "A technique to build a secret key in integrated circuits for identification and authentication application," in Proceedings of the Symposium on VLSI Circuits, 2004.
[28] D. E. Holcomb, W. P. Burleson, and K. Fu, "Initial SRAM state as a fingerprint and source of true random numbers for RFID tags," in Proceedings of the Conference on RFID Security, 2007.