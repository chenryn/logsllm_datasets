Question: Analyze the following code snippets that implement input validation in different applications. Which code snippet does NOT exhibit a too permissive list of allowed inputs, potentially leading to security weaknesses?
"A": "String[] allowedPatterns = {"[a-zA-Z]+", "[0-9]+"}; if (Arrays.asList(allowedPatterns).contains(inputPattern)) { processInput(input); }",
"B": "Regex allowedPattern = new Regex("^[a-zA-Z0-9]{0,10}$"); if (allowedPattern.IsMatch(input)) { processInput(input); }",
"C": "List<String> allowedExtensions = new ArrayList<>(Arrays.asList(".jpg", ".png", ".gif")); if (allowedExtensions.stream().anyMatch(input::endsWith)) { processInput(input); }",
"D": "if (input.length() > 0 && !input.matches(".*[<>\\/].*")) { processInput(input); }"
Answer: B