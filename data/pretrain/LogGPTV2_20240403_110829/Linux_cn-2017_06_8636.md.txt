---
author: John 'Warthog9' Hawley
category: 观点
comments_data:
- date: '2017-06-25 22:19:08'
  message: 一个优秀的开源软件拥护者应该认真对待驱动开源软件的硬件，而不是仅凭工具在面包板上实现一些不成熟的想法。应将硬件设计视为艺术品。
  postip: 183.206.166.48
  username: 来自江苏的 Firefox 54.0|Windows 10 用户
count:
  commentnum: 1
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 6174
date: '2017-06-25 12:29:00'
editorchoice: false
excerpt: 制造自己的硬件比以往任何时候都更容易、更经济。以下是你设计、构建和测试你的第一块电路板所需的步骤。
fromurl: https://opensource.com/article/17/5/8-ways-get-started-open-source-hardware
id: 8636
islctt: true
largepic: /data/attachment/album/201706/25/122938ot2vtlpq6altkexp.jpg
permalink: /article-8636-1.html
pic: /data/attachment/album/201706/25/122938ot2vtlpq6altkexp.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: 制造自己的硬件比以往任何时候都更容易、更经济。以下是你设计、构建和测试你的第一块电路板所需的步骤。
tags:
- 硬件
- 开源硬件
thumb: false
title: 开源硬件入门的 8 个步骤
titlepic: true
translator: geekpi
updated: '2017-06-25 12:29:00'
---

> 制造自己的硬件比以往任何时候都更容易、更经济。以下是你设计、构建和测试你的第一块电路板所需的步骤。

![8 ways to get started with open source hardware](/data/attachment/album/201706/25/122938ot2vtlpq6altkexp.jpg "8 ways to get started with open source hardware")

著名计算机科学家 Alan Kay 曾说过：“认真对待软件的人应该自己制造硬件。” 我认为这句话至今仍然适用。如今与 1982 年相比，硬件变得更快、更小，最重要的是更便宜。现在只需 5 美元就可以买到一台完整的电脑。

随着大公司降低产品价格，能够生产高质量硬件的制造业生态系统不断增长，这些硬件的成本已经足够低廉，普通人都能负担得起。这种可用性和可负担性推动了众筹和创客运动的发展，同时也让更多个人通过开源硬件参与到开源社区中。

### 探索开源硬件

* [什么是开源硬件？](https://opensource.com/resources/what-open-hardware?src=open_hardware_resources_menu)
* [什么是树莓派？](https://opensource.com/resources/what-raspberry-pi?src=open_hardware_resources_menu)
* [什么是 Arduino？](https://opensource.com/resources/what-arduino?src=open_hardware_resources_menu)

开源硬件和非开源硬件有许多区别，但开源硬件联盟（OSHWA）提供了一个被广泛接受的定义：

“开源硬件（OSHW）是指向公众发布设计的有形物品：机器、设备或其他物理物体，任何人都可以制造、修改、分发和使用。”

我们周围已经有许多开源硬件的例子。你可能没有注意到，你使用的主板可能是开源硬件。从功能强大的 [Arduino](https://opensource.com/node/20751) 到像 [BeagleBone](https://opensource.com/node/35211) 和 [C.H.I.P.](https://opensource.com/node/24891) 这样的完整计算机，都有很多开源硬件实例，而且还有更多正在设计中。

硬件可能很复杂，初学者可能难以理解某些设计需求。然而，开源硬件不仅让你看到工作示例，还能修改这些设计，或者在自己的设计中复制或删除所需部分，就像复制粘贴一样简单。

### 如何开始？

首先，需要指出硬件确实“硬”，它非常复杂且深奥，所用的工具并不总是最人性化的。任何一个玩过微处理器的人都可以告诉你：你会烧坏一些东西，甚至看到神奇的烟雾冒出来。没关系，我们都经历过这种情况，有些人还会反复遇到，因为在前 100 次尝试时很难吸取教训。但不要让这些阻碍你：犯错时你会学到教训，并在未来分享有趣的故事。

#### 建模

第一步是使用现有的电路板、跳线、面包板以及你要连接的任何设备来建模你想要做的事情。通常情况下，最简单的方法是在板上添加更多的 LED，并以新颖的方式使它们闪烁。这是一种很好的原型方法，也是常见的做法。虽然外观不美观，但你可以验证硬件是否正常工作。当硬件不工作时，请仔细检查一切，并不要害怕寻求帮助——有时第二双眼睛会发现奇怪的接地短路。

#### 设计

当你确定要构建的硬件后，是时候将想法从跳线和面包板变成实际设计了。这可能会让人感到沮丧，但从小处开始是个好主意。例如，可以从制作一块带有 LED 和电池的印刷电路板开始。这听起来可能很简单，但有很多基础知识需要了解。

1. **选择一个电子设计自动化（EDA）工具**。有许多好的开源软件可供选择，如 [Fritzing](http://fritzing.org/home/)、[gEDA](http://www.geda-project.org/) 和 [KiCad](http://kicad-pcb.org/)。如果你愿意尝试商业软件，Eagle 也有一个受限的免费版本，许多开源硬件项目都是用它设计的。

2. **在 EDA 工具中设计电路板**。根据你选择的工具，这可能会非常快，也可能是学习如何设计的好机会。我建议从小硬件开始的原因之一就是如此。一个带 LED 的电路可以非常简单：一块电池、一个电阻和一个 LED。电路图非常简单，板子也很小、简单。

3. **导出设计用于打样**。这与下一步紧密相关，但如果你之前没有做过，可能会感到困惑。导出时，你需要调整许多细节，并确保以某种方式导出，以便电路板工厂确切知道你的需求。

4. **找到一家电路板工厂**。有许多电路板工厂可以制造你的设计，有些比其他工厂更友好和乐于助人。[OSH Park](https://oshpark.com/) 是一个特别棒的地方，他们支持开源硬件，并有一个可靠的流程来确认你的设计。你还可以查看 [PCB Shopper](http://pcbshopper.com/)，比较不同 PCB 商家的价格、交货时间等。

5. **等待**。这可能是制造自己电路板过程中最难的部分，因为将数字设计变为物理产品需要时间。计划两周左右的时间来拿到电路板。这段时间你可以继续下一个项目，购买或确保所有组件都已准备好，或者随意尝试而不担心结果。你的第一块电路板会很难熬——你迫不及待地想得到它，但请保持耐心。

6. **调试并改进**。一旦拿到电路板，就可以通电测试了。如果从 LED 电路开始，调试会相对容易，并且你会得到一些可以工作的东西。如果你的电路更复杂，则需要有条理和耐心。有时电路不工作，你需要运用调试技能追踪问题。

7. **最后，如果你做的是开源硬件，请发布它**。我们谈论的是开源硬件，因此确保包含许可证，发布它、共享它，放在人们可以看到你工作的地方。你也可以写一篇博客并提交到 Hackaday 等平台。

8. **最重要的是，享受过程**。坦白说，如果你在做一些事情但不开心，你应该停止。开源硬件可以很有趣，尽管有时困难而复杂。不是一切都按计划进行：我已经设计了一半的电路不起作用；或者我在电源和接地之间造成了 12 次短路；这些电路板是双层板：是的。但我在这个过程中学到了很多，并且不会再犯同样的错误。我会制作新的板子，但不是这些。（我会支持并盯着这些板子和它们的错误，但遗憾的是，它们不会因为我盯着它们而感到内疚）。

现在有许多开源硬件，有很多好的例子可以参考、复制和衍生。也有很多信息使制造硬件变得更加简单。这就是开源硬件：一个人们制造、分享的社区，每个人都可以制作自己的东西并构建他们想要的硬件——而不是只能得到的硬件。

（题图：Thomas Hawk on [Flickr](https://www.flickr.com/photos/thomashawk/3048157616/in/photolist-5DmB4E-BzrZ4-5aUXCN-nvBWYa-qbkwAq-fEFeDm-fuZxgC-dufA8D-oi8Npd-b6FiBp-7ChGA3-aSn7xK-7NXMyh-a9bQQr-5NG9W7-agCY7E-4QD9zm-7HLTtj-4uCiHy-bYUUtG). [CC BY-NC 2.0](https://creativecommons.org/licenses/by-nc/2.0/)。由 Opensource.com 修改）

---
作者简介：
John 'Warthog9' Hawley - John 在 VMware 的开源项目办公室为上游开源项目工作。此前，他曾在 MinnowBoard 开源硬件项目上工作，领导了 kernel.org 的系统管理团队，并在桌面集群变得流行之前构建了它们。为了乐趣，他建造了多个明星项目，如英国电视节目 K-9 的复制品，在无人机的飞行计算机视觉处理中完成，设计并制作了一堆自己的硬件。

via: 
作者：[John 'Warthog9' Hawley](https://opensource.com/article/17/5/8-ways-get-started-open-source-hardware)  
译者：[geekpi](https://github.com/geekpi)  
校对：[wxy](https://github.com/wxy)  
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出

---