Workloads profiling and prediction have been extensively stud-
ied for cloud platforms [30, 38, 45]. Directly applying them to NEP
may not suffice considering the distinct workloads running atop
them. As a concrete example, scheduling VMs to different sites
based on the past resource usage prediction will likely lead to the
future usage change of that VM itself, as the usage pattern of edge
VM highly depends on the geo-locations. Such change may lead
the prediction to be invalid shortly.
6 LIMITATIONS AND FUTURE WORK
Dataset representativeness Despite the best efforts we commit-
ted, the cloud-side workload dataset (Azure) still doesn’t perfectly
align with our NEP dataset, i.e., they were collected from different
countries and at different times. Thus, we tend to draw our conclu-
sions conservatively. Even so, we believe that the lessons learned
from the study are valid for two reasons. First, Azure is a global
48
From Cloud to Edge: A First Look at Public Edge Platforms
IMC ’21, November 2–4, 2021, Virtual Event, USA
CSP with sites also deployed in China as NEP does. Second, the
Azure cloud workloads are relatively stable from its 2017 version to
2019 version; we therefore expect the workloads to exhibit similar
characteristics in 2020 when the NEP dataset was collected.
Experimental settings Apart from the workloads traces, our ac-
tively collected dataset was collected by us through crowdsourcing-
based controlled experiments. We identify the following imperfec-
tions in carrying out those experiments.
• In §3.1, we use ICMP-based ping instead of TCP to measure the
network delay mainly because it’s a built-in feature of non-rooted
Android devices. However, TCP-based ping is regarded more rep-
resentative of normal workloads as ICMP is often treated with
different priority by cloud providers than regular TCP/UDP traf-
fic [52].
• In §3.3 we implement two edge applications following their typi-
cal design and using state-of-art supporting libraries. Despite that,
we admit that our (best-effort) implementation and deployment
may not perfectly reflect those of commercial edge apps. In the
future, we will benchmark more applications and their diverse
deployment configurations to comprehensively study how edge
computing boosts the application QoE.
• The number of endpoints (users) participating in our user study
is limited. We plan to further scale it up in future work.
• We did not investigate the network-layer characteristics (e.g.,
routing) of NEP traffic. Understanding them can facilitate network-
edge cooperation through, for example, improved traffic engineer-
ing.
NEP as an early adopter NEP is now at an early stage (3 years
since release) and not all its characteristics match what researchers
commonly envision for “ideal” edge computing, e.g., in regard to the
deployment density, customer diversity, and the VM elasticity fea-
ture. Nonetheless, NEP is a leading edge platform whose number of
sites is about two orders of magnitudes larger than a typical cloud
provider, with large-scale adoption by a wide spectrum of com-
mercial applications. Our measurements already suggest striking
differences between NEP and cloud platforms. Also, as commercial
edge computing has recently made its debut, our results provide
an important “baseline” for studying how it evolves in the future.
Note that this limitation is shared by other studies of emerging
technologies such as 5G [73, 97].
7 RELATED WORK
Commercial edge/cloud platforms While the concept of “push-
ing computations and services closer to users” is generally accepted
by edge researchers and practitioners, it still remains an open prob-
lem on how to bring the edges to reality. In this work, we focus on
a public edge platform NEP, which is regarded as an extension of
traditional clouds but more diversely geo-distributed. Other major
cloud providers are also building their multi-tenant edge platforms,
e.g., AWS Local Zones [11] and Azure Edge Zone [13]. However,
those platforms are at a very early stage compared to NEP (Table 1),
and there are no comprehensive measurements on them yet. Major
data providers like Facebook [33, 84, 85] and Google [98] have built
edge infrastructure (CDN, PoP, etc) to deliver their contents to end
users more efficiently. While content delivering is one killer use
case in edge, NEP is built beyond the need for that but as a more
general-purpose, multi-tenant computing platform like existing
cloud providers.
Measurements of edge/cloud platforms (1) At network perfor-
mance aspect, the wide-area network (WAN) performance has been
extensively studied from the viewpoint of cloud providers, includ-
ing the network latency [47, 89], throughput [40, 59], and resource
demand volatility [57]. A few recent studies [55, 71] specifically
target geo-distributed datacenters but are still at the cloud level.
Partly inspired by those work, we are the first to quantify the net-
work and application performance of a real edge platform that
has much denser DC deployment than traditional cloud platforms
(shown in Table 1). (2) At workloads aspect, we are not aware of
any prior work characterizing the workloads on edge platforms.
Some work [41, 79] analyze the first-party, container-based work-
loads on cloud platforms, which are orthogonal to ours that targets
multi-tenant, VM-based workloads of NEP. The most related work
is performed on Azure [38] cloud, which is directly compared in
this work. As a key observation, we find that the edge workloads
are indeed different from cloud. [37] also performs large-scale mea-
surements on the network performance among end users (8,000
RIPE Atlas probes) and datacenters (189 in total from many cloud
providers). Their study on global cloud platforms is orthogonal to
ours on a much denser, nationwide edge platform.
Edge systems and applications have been built to bridge the gap
between low-end devices and far-away clouds. The key use cases
include smart homes and cities [34, 90, 93], autonomous driving [61,
62, 64], video analytics for smartphones [63, 78], surveillance cam-
eras [31, 99, 100], and drones [94]. Those scattered thoughts can be
regarded as motivations to build NEP that relieves edge developers
from deploying and maintaining the edge hardware, just as the
way cloud computing helps developers in the last twenty years.
Beyond specific use cases, there have been system-level optimiza-
tions towards edge performance and security [68, 69, 76, 80]. Those
techniques are orthogonal to NEP.
8 CONCLUSIONS
We have performed the first comprehensive measurement on a
commercial, multi-tenant edge platform. Our study quantitatively
answers two key questions: what is the edge performance perceived
by end users and what are the edge workloads experienced by the
edge operator. Our findings reveal critical differences between cloud
and edge platforms; they also lead to insightful implications for
designing future edge platforms and edge-based applications.
ACKNOWLEDGMENTS
Mengwei Xu was supported by National Key R&D Program of China
under grant number 2020YFB1805500, the Fundamental Research
Funds for the Central Universities, and National Natural Science
Foundation of China under grant number 61922017. Xuanzhe Liu
was supported in part by Alibaba University Joint Research Pro-
gram. We hereby give special thanks to Alibaba Group for their
contribution to this paper. We also thank our shepherd, Aaron
Schulman, and the anonymous IMC reviewers for their useful sug-
gestions. Shangguang Wang is the corresponding author of this
work.
49
IMC ’21, November 2–4, 2021, Virtual Event, USA
Mengwei Xu et al.
REFERENCES
[1] Game battle tanks. http://btanks.sourceforge.net/blog/, 2010.
[2] Game pingus. https://pingus.seul.org/, 2015.
[3] Alibaba cluster trace program. https://github.com/alibaba/clusterdata, 2018.
[4] Scaling kubernetes to 2,500 nodes. https://openai.com/blog/scaling-kubernetes-
to-2500-nodes/, 2018.
[5] U.s. video 360 report 2018. https://www.nielsen.com/us/en/insights/report/
2018/video-360-2018-report/#, 2018.
[6] 3gpp org. 2019. https://www.3gpp.org/release-15, 2019.
[7] C-v2x use cases methodology, examples and service level requirements.
https://5gaa.org/wp-content/uploads/2019/07/5GAA191906WPCV2XUCsv1-3-
1.pdf, 2019.
[8] Cloud ar/vr whitepaper. https://www.gsma.com/futurenetworks/wiki/cloud-
ar-vr-whitepaper/, 2019.
[9] Game flare. https://flarerpg.org/, 2019.
[10] Alibaba cloud elastic compute service. https://www.alibabacloud.com/product/
ecs, 2020.
[11] Aws local zones. https://aws.amazon.com/about-aws/global-infrastructure/
localzones/, 2020.
[12] Aws wavelength. https://aws.amazon.com/wavelength/, 2020.
[13] Azure edge zone. https://docs.microsoft.com/en-us/azure/networking/edge-
zones-overview, 2020.
[14] Easyrtmp-android. https://github.com/tsingsee/EasyRTMP-Android, 2020.
[15] Extending
cloud with edge
boundaries
computing.
the
of
the
https://www.alibabacloud.com/blog/extending-the-boundaries-of-the-
cloud-with-edge-computing594214, 2020.
[16] Ffmpeg. https://ffmpeg.org/, 2020.
[17] ffplay documentation. https://ffmpeg.org/ffplay.html, 2020.
[18] Kubernetes (k8s). https://kubernetes.io/, 2020.
[19] Mplayer. http://www.mplayerhq.hu/design7/news.html, 2020.
[20] nginx. https://nginx.org/en/, 2020.
[21] Powered by sa: 5g mecbased cloud game innovation practice.
https:
//www.gsma.com/futurenetworks/wp-content/uploads/2020/03/Powered-by-
SA-5G-MEC-Based-Cloud-Game-Innovation-Practice- .pdf, 2020.
[22] Serverless computing and applications. .https://aws.amazon.com/serverless/,
2020.
[23] Ui/application exerciser monkey. https://developer.android.com/studio/test/
[24] User equipment (ue) radio access capabilities. https://www.3gpp.org/ftp/specs/
monkey, 2020.
archive/38series/38.306/, 2020.
[25] Istemi Ekin Akkus, Ruichuan Chen, Ivica Rimac, Manuel Stein, Klaus Satzke,
{SAND}: Towards high-
In 2018 {Usenix} Annual Technical
Andre Beck, Paarijaat Aditya, and Volker Hilt.
performance serverless computing.
Conference ({USENIX} {ATC} 18), pages 923–935, 2018.
[26] Sherif Akoush, Ripduman Sohan, Andrew Rice, Andrew W Moore, and Andy
Hopper. Predicting the performance of virtual machine migration. In 2010 IEEE
international symposium on modeling, analysis and simulation of computer
and telecommunication systems, pages 37–46, 2010.
[27] Ghufran Baig, Jian He, Mubashir Adnan Qureshi, Lili Qiu, Guohai Chen, Peng
Chen, and Yinliang Hu. Jigsaw: Robust live 4k video streaming. In The 25th
Annual International Conference on Mobile Computing and Networking, pages
1–16, 2019.
[28] Jacob Benesty, Jingdong Chen, Yiteng Huang, and Israel Cohen. Pearson corre-
lation coefficient. In Noise reduction in speech processing, pages 1–4. Springer,
2009.
[29] David Breitgand, Gilad Kutiel, and Danny Raz. Cost-aware live migration of
services in the cloud. SYSTOR, 10:1815695–1815709, 2010.
[30] Rodrigo N Calheiros, Enayat Masoumi, Rajiv Ranjan, and Rajkumar Buyya.
Workload prediction using arima model and its impact on cloud applications’
qos. IEEE Transactions on Cloud Computing, 3(4):449–458, 2014.
[31] Christopher Canel, Thomas Kim, Giulio Zhou, Conglong Li, Hyeontaek Lim,
David G. Andersen, Michael Kaminsky, and Subramanya R. Dulloor. Scaling
video analytics on constrained edge nodes. In Proceedings of the 2nd SysML
Conference, 2019.
[32] Chris Chatfield. The holt-winters forecasting procedure. Journal of the Royal
Statistical Society: Series C (Applied Statistics), 27(3):264–279, 1978.
[33] David Chou, Tianyin Xu, Kaushik Veeraraghavan, Andrew Newell, Sonia Mar-
gulis, Lin Xiao, Pol Mauri Ruiz, Justin Meza, Kiryong Ha, Shruti Padmanabha,
et al. Taiji: managing global user traffic for large-scale internet services at
the edge. In Proceedings of the 27th ACM Symposium on Operating Systems
Principles, pages 430–446, 2019.
[34] Franco Cicirelli, Antonio Guerrieri, Giandomenico Spezzano, and Andrea Vinci.
An edge-based platform for dynamic smart city applications. Future Generation
Computer Systems, 76:106–118, 2017.
[35] Christopher Clark, Keir Fraser, Steven Hand, Jacob Gorm Hansen, Eric Jul,
Christian Limpach, Ian Pratt, and Andrew Warfield. Live migration of virtual
machines. In Proceedings of the 2nd conference on Symposium on Networked
50
Systems Design & Implementation-Volume 2, pages 273–286, 2005.
[36] Mark Claypool and Kajal Claypool. Latency and player actions in online games.
Communications of the ACM, 49(11):40–45, 2006.
[37] Lorenzo Corneo, Maximilian Eder, Nitinder Mohan, Aleksandr Zavodovski, and
Suzan BayhanZ. Surrounded by the clouds. In The Web Conference, 2021.
[38] Eli Cortez, Anand Bonde, Alexandre Muzio, Mark Russinovich, Marcus Fon-
toura, and Ricardo Bianchini. Resource central: Understanding and predicting
workloads for improved resource management in large cloud platforms. In
Proceedings of the 26th Symposium on Operating Systems Principles, pages
153–167, 2017.
[39] Christina Delimitrou and Christos Kozyrakis. Quasar: resource-efficient and
qos-aware cluster management.
In Rajeev Balasubramonian, Al Davis, and
Sarita V. Adve, editors, Architectural Support for Programming Languages and
Operating Systems, ASPLOS ’14, Salt Lake City, UT, USA, March 1-5, 2014,
pages 127–144. ACM, 2014.
[40] Haotian Deng, Chunyi Peng, Ans Fida, Jiayi Meng, and Y Charlie Hu. Mobility
support in cellular networks: A measurement study on its configurations and
implications.
In Proceedings of the Internet Measurement Conference 2018,
pages 147–160, 2018.
[41] Sheng Di, Derrick Kondo, and Walfredo Cirne. Characterization and comparison
In 2012 IEEE International Conference on
of cloud versus grid workloads.
Cluster Computing, pages 230–238, 2012.
[42] John Dilley, Bruce Maggs, Jay Parikh, Harald Prokop, Ramesh Sitaraman, and
Bill Weihl. Globally distributed content delivery. IEEE Internet Computing,
6(5):50–58, 2002.
[43] Dong Du, Tianyi Yu, Yubin Xia, Binyu Zang, Guanglu Yan, Chenggang
Catalyzer: Sub-millisecond startup
Qin, Qixuan Wu, and Haibo Chen.
In Proceedings
for serverless computing with initialization-less booting.
of the Twenty-Fifth International Conference on Architectural Support for
Programming Languages and Operating Systems, pages 467–481, 2020.
[44] Rohan Gandhi, Hongqiang Harry Liu, Y Charlie Hu, Guohan Lu, Jitendra Padhye,
Lihua Yuan, and Ming Zhang. Duet: Cloud scale load balancing with hardware
and software. ACM SIGCOMM Computer Communication Review, 44(4):27–38,
2014.
[45] Zhenhuan Gong, Xiaohui Gu, and John Wilkes. Press: Predictive elastic resource
scaling for cloud systems. In 2010 International Conference on Network and
Service Management, pages 9–16, 2010.
[46] Ori Hadary, Luke Marshall, Ishai Menache, Abhisek Pan, Esaias E Greeff, David
Dion, Star Dorminey, Shailesh Joshi, Yang Chen, Mark Russinovich, et al.
Protean:{VM} allocation service at scale. In 14th {USENIX} Symposium on
Operating Systems Design and Implementation ({OSDI} 20), pages 845–861,
2020.
[47] Osama Haq, Mamoon Raja, and Fahad R Dogar. Measuring and improving the
reliability of wide-area cloud paths. In Proceedings of the 26th International
Conference on World Wide Web, pages 253–262, 2017.
[48] Antony S. Higginson, Mihaela Dediu, Octavian Arsene, Norman W. Paton,
and Suzanne M. Embury. Database workload capacity planning using time
series analysis and machine learning. In David Maier, Rachel Pottinger, An-
Hai Doan, Wang-Chiew Tan, Abdussalam Alawini, and Hung Q. Ngo, edi-
tors, Proceedings of the 2020 International Conference on Management of Data,
SIGMOD Conference 2020, online conference [Portland, OR, USA], June 14-19,
2020, pages 769–783.
[49] Michael R Hines, Umesh Deshpande, and Kartik Gopalan. Post-copy live migra-
tion of virtual machines. ACM SIGOPS operating systems review, 43(3):14–26,
2009.
[50] Sepp Hochreiter and Jürgen Schmidhuber. Long short-term memory. Neural
computation, 9(8):1735–1780, 1997.
[51] Yun Chao Hu, Milan Patel, Dario Sabella, Nurit Sprecher, and Valerie Young. Mo-
bile edge computing—a key technology towards 5g. ETSI white paper, 11(11):1–
16, 2015.
[52] Zi Hu, Liang Zhu, Calvin Ardi, Ethan Katz-Bassett, Harsha V Madhyastha,
John Heidemann, and Minlan Yu. The need for end-to-end evaluation of
cloud availability. In International Conference on Passive and Active Network
Measurement, pages 119–130. Springer, 2014.
[53] Chun-Ying Huang, Kuan-Ta Chen, De-Yu Chen, Hwai-Jung Hsu, and Cheng-
Hsin Hsu. Gaminganywhere: The first open source cloud gaming system. ACM
Trans. Multim. Comput. Commun. Appl., 10(1s):10:1–10:25, 2014.
[54] Te-Yuan Huang, Ramesh Johari, Nick McKeown, Matthew Trunnell, and Mark
Watson. A buffer-based approach to rate adaptation: Evidence from a large video