Oy
Oz
+
0
0
(cid:35)(cid:34) ωx
(cid:35)
ωy
ωz
0
Sy
0
0
0
Sz
where again S = [Sx, Sy, Sz] and O = [Ox, Oy, Oz] respec-
tively represents the gain and offset errors along all three
axes. Here, ω = [ωx, ωy, ωz] represents the ideal/actual angular
velocity. Ideally all gain and offset errors should be equal to
1 and 0 respectively. But in the real world when the device
is rotated by a ﬁxed amount of angle, the measured angle
tends to deviate from the actual angular displacement (shown
in ﬁgure 9(a)). This impacts any system that uses gyroscope
for angular-displacement measurements.
To calibrate gyroscope we again need to collect data along
all six different directions (±x,±y,±z) individually, but this
time instead of keeping the device stationary we need to rotate
the device by a ﬁxed amount of angle (θ). In our setting, we
set θ = 180◦ (or π rad). For example, Figure 9(b) shows how
we rotate the smartphone by 180◦ around the positive x-axis.
10However, we found that a gyroscope’s offset was impacted by orientation.
9
(9)
The angular displacement along any direction can be computed
from gyroscopic data in the following manner:
(cid:90) t
0
ωM
i = Oi + Siω,
i ∈ {±x,±y,±z}
(cid:90) t
(cid:90) t
ωM
i dt =
Oi dt + Si
ω dt
0
0
(a)
(b)
Fig. 9: a) Offset and gain error in gyroscope impact systems that
use them for angular-displacement measurements. b) Calibrating the
gyroscope by rotating the device 180◦ in the positive x-axis direction.
θM
i = Oit + Siθ
(10)
where t refers to the time it took to rotate the device by θ
angle with a ﬁxed angular velocity of ω. Now, for any two
measurements along the opposite directions of an axis we can
compute the offset and gain error using the following equation:
i+ − θM
θM
i− − Oi(t1 − t2)
i+ + θM
θM
i−
t1 + t2
Oi =
, Si =
(11)
where i ∈ {x, y, z} and t1 and t2 represents the timespan
of the positive and negative measurement respectively. We
take 10 measurements along all six directions (±x,±y,±z)
and compute the average offset and gain error along all three
axes. However, since it is practically impossible to manually
2π
 0.96 0.97 0.98 0.99 1 1.01 1.02 1.03 1.04-1.2-1-0.8-0.6-0.4-0.2 0 0.2 0.4 0.6 0.8Gain error (S)Offset error (O)Accelerometer dataFor Z-axisNexus SiPhone 5Galaxy S4Galaxy S3iPhone 5sααSmartphoneαActual rotation =αMeasured rotation =Smartphone180orotate the device at a ﬁxed angular velocity, the integration in
equation (10) will introduce noise and therefore, the calculated
errors will at best be approximations of the real errors. We
also approximate the integral using trapezoidal rule which will
introduce more error.
We next visualize the offset and gain error obtained from
the gyroscopes of 30 smartphones (only showing for z − axis
where each color code represents a certain make-and-model).
Figure 10 shows our ﬁndings. We see similar result compared
to accelerometers where devices are scattered around at differ-
ent regions of the plot. This suggests that gyroscopes exhibit
different range of offset and gain error across different units.
TABLE XI: Average F-score for calibrated data under lab setting
Avg. F-score (%)
Gyroscope
Accelerometer+Gyroscope
Device
Placed
On Desk
In Hand
Stimulation
No-audio
Sine
Song
No-audio
Sine
Song
Accelerometer
71
75
77
69
70
69
97
98
99
85
90
89
97
98
99
91
93
93
B. Data Obfuscation
Rather than removing calibration errors, we can instead add
extra noise to hide the miscalibration. This approach has the
advantage of not requiring a calibration step, which requires
user intervention and is particularly difﬁcult for the gyroscope
sensors. As such, the obfuscation technique could be deployed
with an operating system update. Obfuscation, however, adds
extra noise and can therefore negatively impact the utility of
the sensors (in contrast to calibration, which improves their
utility). In this section we will discuss the following techniques
for adding noise –
Differential Privacy.
• Uniform noise: highest entropy while having a bound.
• Laplace noise: highest entropy which is inspired by
• White noise: affecting all aspects of a signal.
1) Uniform Noise:
In this section we randomly choose
offset and gain errors from a uniform range where we deduce
the base range from our lab phones.
Fig. 10: Gyroscope offset and gain error from 30 smartphones.
Fingerprinting Calibrated Data:
In this section we look at
how calibrating sensors impact ﬁngerprinting accuracy. For this
setting, we ﬁrst correct the raw values by removing the offset
and gain errors before extracting features from them. That is,
the calibrated value aC = (aM − o)/g. We then generate
ﬁngerprints on the corrected data and train the classiﬁers on
the new ﬁngerprints. Table XI shows the average F-score for
calibrated data under three scenarios, considering both cases
where the devices were kept on top of a desk and in the hand
of a user. When we compare the results from uncalibrated data
(Table V) to those from calibrated data, we see that the F-score
reduces by approximately 16–25% for accelerometer data but
not as much for the gyroscope data. This suggests that we were
able to calibrate the accelerometer much more precisely than
the gyroscope, as expected given the more complex and error-
prone manual calibration procedure for the gyroscope. Another
interesting observation is that audio stimulation provides small
improvement in classiﬁer accuracy. This suggests that audio
stimulation does not inﬂuence the dominant features removed
by the calibration, but does signiﬁcantly impact secondary
features that come into play once calibration is carried out.
Overall, our results demonstrate that calibration is a promising
technique, especially if more precise measurements can be
made. Manufacturers should be encouraged to perform better
calibration to both improve the accuracy of their sensors and
to help protect users’ privacy.
Basic Obfuscation:
First, we consider small obfuscation
values in the range that is similar to what we observed in the
calibration errors above. Adding noise in this range is roughly
equivalent to switching to a differently (mis)calibrated phone
and therefore should cause minimal impact to the user. To add
obfuscation noise, we compute aO = (aM−oO)/gO, where gO
and oO are the obfuscation gain and offset, respectively. Based
on Figures 8 and 10, we choose a range of [-0.5,0.5] for the
accelerometer offset, [-0.1,0.1] for the gyroscope offset, and
[0.95,1.05] for the gain. For each session, we pick uniformly
random obfuscation gain and offset values from the range;
by varying the obfuscation values we make it difﬁcult
to
ﬁngerprint repeated visits. Table XII summarizes our ﬁndings
when we apply obfuscation to all the sensor data obtained from
our 30 lab smartphones. Compared to unaltered data (Table V),
data obfuscation seems to provide signiﬁcant improvement
in terms of reducing the average F-score. Depending on the
type of audio stimulation, F-score reduces by almost 7–24%
when smartphones are kept stationary on the desk and by 23–
42% when smartphones are kept stationary in the hand of the
user. The impact of audio stimulation in ﬁngerprinting motion
sensors is much more visible in these results. We see that
F-score increases by almost 18–21% when a song is being
played in the background (compared to the no-audio scenario);
again, we expect this to be a consequence of audio-stimulation
signiﬁcantly impacting secondary features that come into play
once primary features are obfuscated.
Next, we apply similar techniques to the public and
combined dataset. We apply the same range of offset and
gain errors to the raw values before generating ﬁngerprints.
Table XIII and Table XIV summarizes our results for both
10
 0.96 0.97 0.98 0.99 1 1.01 1.02 1.03 1.04 1.05 1.06 1.07-0.03-0.02-0.01 0 0.01 0.02 0.03 0.04 0.05Gain error (S)Offset error (O)Gyroscope dataFor Z-axisNexus SiPhone 5Galaxy S4Galaxy S3iPhone 5s52
65
50
69
57
66
55
75
TABLE XII: Average F-score for obfuscated data under lab setting
Avg. F-score (%)
Gyroscope
Accelerometer+Gyroscope
Device
Placed
On Desk
In Hand
Stimulation
No-audio
Sine
Song
No-audio
Sine
Song
Accelerometer
43
49
71
46
42
55
73
76
88
46
49
63
75
76
93
51
57
72
presence and absence of audio stimulation. We see that F-score
reduces by approximately 20–41% (compared to Table VI
and Table VII). We expect one of the reasons for the lower
accuracy is the usage of a larger dataset, suggesting that for
even larger sets the impact of obfuscation is likely to be even
more pronounced.
TABLE XIII: Average F-score for obfuscated data under public
setting where smartphones were kept on top of a desk
Avg. F-score (%)
Gyroscope
Accelerometer+Gyroscope
Stimulation
No-audio
Sine
Accelerometer
27
40
TABLE XIV: Average F-score for obfuscated data under both lab
and public setting where smartphones were kept on top of a desk
Avg. F-score (%)
Gyroscope
Accelerometer+Gyroscope
Stimulation
No-audio
Sine
Accelerometer
26
41
Increasing Obfuscation Range: We now look at how the ﬁn-
gerprinting technique reacts to different ranges of obfuscation.
Starting with our base ranges of [−0.5, 0.5] and [−0.1, 0.1]
for the accelerometer and gyroscope offsets, respectively, and
[0.95, 1.05] for the gain, we linearly scale the ranges and
observe the impact on F-score. We scale all ranges by the same
amount, increasing the ranges symmetrically on both sides of
the interval midpoint.
For this experimental setup we only consider the com-
bined dataset as this contains the most number of devices
(93 in total). We also restrict ourselves to the setting where
we combine both the accelerometer and gyroscope features
because this provides the best result (as evident from all our
past results). Figure 11 highlights our ﬁndings. As we can see
increasing the obfuscation range does reduce F-score but it
has a diminishing return. For 10x increment, the F-score drops
down to approximately 40% and 55% for no-audio and audio
stimulation respectively. Beyond 10x increment (not shown)
the reduction in F-score is minimal (at most 10% reduction at
50x increment). This result suggests that simply obfuscating
the raw values is not sufﬁcient to hide all unique characteristics
of the sensors. So far we have only manipulated the signal
value but did not alter any of the frequency features and as a
result the classiﬁer is still able to utilize the spectral features
to uniquely distinguish individual devices.
Enhanced Obfuscation: Given that we know that the spectral
features are not impacted by our obfuscation techniques, we
now focus on adding noise to the frequency of the sensor sig-
nal. Our data injection procedure is described in Algorithm 1.
Fig. 11: Impact of obfuscation range as the range is linearly scaled
up from 1x to 10x of the base range.
The main idea is to probabilistically insert a modiﬁed version
of the current data point in between the past and current
timestamp where the timestamp itself is randomly selected.
Doing so will inﬂuence cubic interpolation of the data stream
which in turn will impact the spectral features extracted from
the data stream.
Algorithm 1 Obfuscated Data Injection
Input: Time series Data (D, T ), Probability P r, Offset O,
Gain G, Offset Range Orange, Gain Range Grange
Output: Modiﬁed time series Data (M D, M T )
oﬀset ← N ull
gain ← N ull
# Random(range) : randomly selects a value in range
j ← 1
for i = 1 to length(D) do
#New data insertion
if i > 1 and Random([0, 1]) < P r then
oﬀset ← Random(Orange)
gain ← Random(Grange)
M T [j] ← Random([T [i], M T [j − 1])
M D[j] ← (D[i] − oﬀset)/gain
j ← j + 1
end if
#Original Data
M D[j] ← (D[i] − O)/G
M T [j] ← T [i]
j ← j + 1
end for
return (M D, M T )
To evaluate our approach we ﬁrst ﬁx an obfuscation range.
We choose 10x of the base range from the previous section
as our ﬁxed obfuscation range. We then vary the probability
of data injection from [0,1]. Figure 12 shows our ﬁndings.
We can see that even with relatively small amount of data
injection (in the order of 20–40%) we can reduce the average
F-score to approximately 15–20% depending on the type of
input stimulation applied.
Impact of Uniform Noise on Utility:
In this section we
11
 0 10 20 30 40 50 60 70 80 90 100 1 2 3 4 5 6 7 8 9 10Avg. F-score (%)Obfuscaton Range (’×’ times the base range)Using both accelerometer and gyroscope dataNo-audioSinediffering on at most one element, and all S ⊆ Range(K),
Pr[K(D1) ∈ S] ≤ e Pr[K(D2) ∈ S]
(12)
We can remap this setting into our own problem where
we can think of each device as a single data set, and K
as the process of selecting random offset and gain error.
S then becomes the outcome of applying random noise to
raw sensor data. By changing  we can control
to what
extent two device-output distributions are alike. In our setting
we have offset and gain errors along 6 axes (xyz -axes for
both accelerometer and gyroscope), giving us a total of 12
dimensions. We equally distribute our privacy budget  along
all 12 dimensions and select noise along the i− th dimension
using the following Laplace distribution: Lap(0, βi) where
βi = Si/(/12) and Si = max(i-th Dimensional values) −
min(i-th Dimensional values), i ∈ {1, 2, ..., 12}. Figure 13
shows that as we increase  (i.e., as we lower the scale
parameter of the Laplace distribution), F-score also increases.
But even with a relatively high privacy budget of  = 10 we see
that F-score reduces from around 95% to 47–65% depending
on the type of background stimulation.
Fig. 13: Randomly selecting offset/gain errors from a Laplace distri-
bution.
Impact of Laplace Noise on Utility: We rerun our step
counter application on sensor data where we select offset
and gain error from a Laplace distribution while varying
. Figure 14 shows how step count evolves for different
levels of privacy budget (). We see that as we increase ,
step count converges to the expected value with negligible
deviation. For  ≥ 6 the conﬁdence interval is negligible,
i.e., for  ≥ 6 the impact of noise is minimal. Notably, on