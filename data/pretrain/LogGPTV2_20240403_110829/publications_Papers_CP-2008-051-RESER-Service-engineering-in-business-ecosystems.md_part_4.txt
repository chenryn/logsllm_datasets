Concepts and methodologies of the last years have shown that a theoretical founda-
tion without tool support does not usually achieve acceptance. The reason is twofold.
On the one hand, tool support lowers the entry barrier for users by providing them
guidance and assistance. In case of very complex problems tool support may be cru-
17
cial, since a user may not be able to cope with complex information and structures.
On the other hand, tool support is a first validation of concepts and a methodology by
proving its feasibility and revealing potential problems.
Therefore, we decided to implement the ISE-Framework in the ISE-Workbench. Due
to the model-driven approach of ISE, the ISE workbench offers a set of model-based
tools according to the models which are defined for each ISE-layer. All of these tools
are based on a common formalism (for model representation). This allows applying
automatic model transformations by using a model transformation engine. Further-
more, concepts like integrated validation, common persistency, model federation, etc.
can be applied. The frame of our workbench is provided by Eclipse7. The Eclipse
Modeling Framework (EMF) serves as the base for model definition and also pro-
vides a repository implementation supporting collaborative modeling, satisfying the
requirements of service engineering in business ecosystems.
Using these constraints (Eclipse and EMF) we selected a number of existing tools
like a graphical BPEL-Toolset, a graphical BPMN-Editor, graphical UML-Tools, etc.
Furthermore the ISE-Workbench will provide an entry point to the ISE-Framework by
visualizing the model selection and path through the model of the ISE-layers. The
ISE-workbench guides a user through the development process and visualizes model
dependencies. Besides providing user guidance, tool aggregation and model man-
agement, it also implements automatic support for model dependencies by using
model transformation. This work should be based on a standard language for model
transformation rule specification like Query, View and Transformation (QVT) provided
by the OMG.
4.3. Benefits of the ISE Methodology
Since the concept of e-services is still in a ramp up phase, no customized method-
ologies exist for the engineering of e-services. As a result, it is inevitable that front-
runners will carry out e-service development planning in a manual, ad hoc, subjec-
tive, time consuming, and error-prone fashion. This will lead to e-service solutions
which are disorganized, behind schedule, over budget, or cancelled. Therefore, the
development of the ISE framework provides key design practices and artifacts to the
planning of e-services. The nature of ISE brings a set of benefits to the creation of e-
services:
• Active engagement: All stakeholders (e.g. business strategists, business archi-
tects, IT analysts, and IT developers) that can influence the engineering of e-
services participate in the development to guarantee that business objectives are
accomplished. ISE supports those stakeholders by providing specific perspectives
on the e-service development.
• Model-based approach: The ISE framework supports the engineering of e-
services by a set of models that describe or specify e-services structure, function-
ality and behavior. Each model is assigned to specific shareholders and to spe-
cific dimensions. Shareholders can visualize dependencies between models
7 http://www.eclipse.org
18
which are synchronized. Thus, an evolutionary change in one model triggers
changes in adjacent models.
• Compliance with regulations: Since ISE strongly relies on formal models to de-
sign e-services, it provides a paradigm which may guarantee that architected e-
services comply with relevant laws, policies, and regulations. For example, ISE
provides information on billing, payment, security, and confidentiality. Therefore,
financial information and security policies can be easily checked.
• Technology standardization: E-services must be conform to existing standards
in order to be compatible to data, applications, services, communications, integra-
tion, and security. Since the models devised within ISE and the main output of
ISE is a set of technical standards, formal models of e-services are independent
of specific technological choices and thus, platforms.
• Clear semantics: ISE relies on two constructions to provide semantics for e-
services to an architecture: using models and using a business ontology. The set
of models which is made available by ISE provides strong semantics to stake-
holders due to their high level of familiarity and standardization. On the other
hand, the business ontology allows constructing a common vocabulary of con-
cepts (data) consistently throughout the organization which is shared across per-
spectives and dimensions and is accessible for all models to perform their func-
tions.
5. Conclusion and Future Activities
Different types of stakeholders, such as business developers, business analysts, IT
analysts, and IT developers, are involved in the development of e-services. Here, the
business developers tend to work with semi-formal information on strategic issues,
whereas, the IT developers base their work on formal models on implementational
issues of the developing e-service. Therefore, the ISE methodology is characterized
by three main features: (1) According to the different stakeholders, different perspec-
tives on the developing e-service need to be supported by the new methodology. (2)
In order to have a methodical approach for the e-service development over all per-
spectives, formal models are taken and assigned to each perspective. (3) The con-
sistency of the e-service development over all perspectives is achieved by transform-
ing the content of a model in one dimension from one perspective to the next one
and vise versa.
In order to further improve the ISE methodology, the underlying model-driven frame-
work needs to be evaluated in different contexts, e.g. entrepreneurs versus large or-
ganizations, simple versus complex (networked) e-services, and heterarchical versus
hierarchical networked partner organizations. One result of the evaluation may be an
extension of the ISE methodology in the future by including the innovation and run-
time phases to support the full e-service lifecycle.
19
6. Literature
(Arsanjani, 2004) Arsanjani, A. (2004). Service-oriented modeling and architecture -
How to identify, specify, and realize services for your SOA.
http://www.ibm.com/developerworks/webservices/library/ws-soa-design1.
(Baida et al., 2004) Baida, Z., Gordijn, J., & Omelayenko, B. (2004). A shared Ser-
vice Terminology for Online Service Provisioning. In M. Janssen, H. G. Sol, &
R. W. Wagenaar (Eds.), ICEC, volume 60 of ACM International Conference
Proceeding Series (pp. 1–10).: ACM.
(Bhattacharya et al., 2007) Bhattacharya, K., Gerede, C. E., Hull, R., Liu, R., & Su,
J. (2007). Towards formal analysis of artifact-centric business process mod-
els. In G. Alonso, P. Dadam, & M. Rosemann (Eds.), BPM, volume 4714 of
Lecture Notes in Computer Science (pp. 288–304).: Springer.
(Bieger & Rüegg-Stürm, 2002) Bieger, T. & Rüegg-Stürm, J. (2002). Net economy -
die bedeutung der gestaltung von beziehungskonfigurationen. In T. Bieger,
N. Bickhoff, R. Caspers, D. Knyphausen-Aufseß zu, & K. Reding (Eds.), Zu-
künftige Geschäftsmodelle - Konzept und Anwendung in der Netzökonomie.
Springer.
(Buhl et al., 2008) Buhl, H. U., Heinrich, B., Henneberger, M., & Krammer, A.
(2008). Service sience. Wirtschaftsinformatik, 1, 60–65.
(Bullinger et al., 2003) Bullinger, H.-J., Fähnrich, K.-P., & Meiren, T. (2003). Service
engineering—methodical development of new service products. International
Journal of Production Economics, 85, 275–287.
(Chen, 1977) Chen, P. P. (1977). The Entity-Relationship Model - A basis for the
Enterprise View of Data. In AFIPS National Computer Conference (pp. 77–
84).
(Chesbrough & Spohrer, 2006) Chesbrough, H. & Spohrer, J. (2006). A research
manifesto for service science. Communications of ACM, 49, 35–40.
(Constantine, 2003) Constantine, L. L. (2003). Canonical abstract prototypes for
abstract visual and interaction. In Proceedings of DSV-IS 2003, 10th Interna-
tional Conference on Design, Specification and Verification of Interactive
Systems. Lecture Notes in Computer Science, Vol. 2844.
(Corsten, 1997) Corsten, H. (1997). Dienstleistungsmanagement. Oldenburg-
Verlag.
(Daun & Klein, 2004) Daun, C. & Klein, R. (2004). Computer Aided Service Engi-
neering, chapter Vorgehensweisen zur systematischen Entwicklung von Di-
enstleistungen im Überblick, (pp. 43–67). Springer-Verlag.
(Dorn et al., 2007) Dorn, J., Grun, C., Werthner, H., & Zapletal, M. (2007). A survey
of B2B methodologies and technologies: From business models towards de-
ployment artifacts. In HICSS (pp. 143).: IEEE Computer Society.
20
(Gruber, 1992) Gruber, T. R. (1992). Ontolingua: A Mechanism to Support Portable
Ontologies. Technical report.
(Janiesch et al., 2008) Janiesch, C., Ruggaber, R., & Sure, Y. (2008). Eine infra-
struktur für das internet der dienste. HMD, 261, 71–79.
(Kagermann & Österle, 2006) Kagermann, H. & Österle, H. (2006). Geschäftsmo-
delle 2010. F.A.Z.-Institut für Management-, Markt- und Medieninformatio-
nen.
(Lewis et al., 2005) Lewis, G. A., Morris, E. J., Smith, D. B., & O'Brien, L. (2005).
Service-Oriented Migration and Reuse Technique (SMART). In STEP (pp.
222–229).: IEEE Computer Society. 0-7695-2639-X.
(Maglio et al., 2006) Maglio, P. P., Srinivasan, S., Kreulen, J., & Spohrer, J. (2006).
Service systems, service scientists, ssme, and innovation. Communications
of the ACM, 49, 81–85.
(Meiren, 2001) Meiren, T. (2001). Entwicklung von dienstleistungen unter besonde-
rer berücksichtigung von human ressources. In H.-J. Bullinger (Ed.), Entwick-
lung und Gestaltung innovativer Dienstleistungen.
(Muehlen et al., 2007) Muehlen, M. z., Indulska, M., & Kamp, G. (2007). Business
Process and Business Rule Modeling: A Representational Analysis. In K.
Taveter & D. Gasevic (Eds.), The 3rd International Workshop on Vocabular-
ies, Ontologies and Rules for The Enterprise (VORTE 2007), number 3: IEEE
Publishers.
(Oaks et al., 2003) Oaks, P., ter Hofstede, A. H. M., & Edmond, D. (2003). Capabili-
ties: Describing What Services Can Do. In M. E. Orlowska, S. Weerawarana,
M. P. Papazoglou, & J. Yang (Eds.), ICSOC, volume 2910 of Lecture Notes
in Computer Science (pp. 1–16).: Springer.
(Osterwalder, 2004) Osterwalder, A. (2004). The Business Model Ontology - A
Proposition in a Design Science Approach. PhD thesis, Université de
Lausanne.
(O'Sullivan, 2006) O'Sullivan, J. (2006). Towards a Precise Understanding of Ser-
vice Properties. PhD thesis, Queensland University of Technology.
(Papazoglou, 2003) Papazoglou, M. P. (2003). Service-oriented computing: Con-
cepts, characteristics and directions. In Proceedings of the Fourth interna-
tional Conference on Web information Systems Engineering IEEE Computer
Society.
(Papazoglou et al., 2006) Papazoglou, M. P., Travero, P., Dustaar, S., Leymann, F.,
& Krämer, B. J. (2006). Service-oriented computing: A research roadmap.
Dagstuhl Seminar Proceedings 2006 Internationales Begegnungs- und For-
schungszentrum für Informatik (IFBI).
(Rai & Sambamurthy, 2006) Rai, A. & Sambamurthy, V. (2006). Editorial notes - the
growth of interest in service management: Opportunities for information sys-
tems scholars. Information Systems Research 14, 4, 327–331.
21
(Scheer et al., 2003) Scheer, A.-W., Grieble, O., & Klein, R. (2003). Service Engi-
neering, chapter Modellbasiertes Dienstleistungsmanagement, (pp. 19–49).
Springer.
(Scheer & Nuettgens, 2000) Scheer, A.-W. & Nuettgens, M. (2000). Architecture
and Reference Models for Business Process Management. Lecture Notes in
Computer Science, 1806 / 2000, 376–389.
(Sehmi & Schwegler, 2006) Sehmi, A. & Schwegler, B. (2006). Service-Oriented
Modeling for Connected Systems. The Architecture Journal. Last accessed:
2008-07-21.
(Sowa & Zachman, 1992) Sowa, J. F. & Zachman, J. A. (1992). Extending and
Formalizing the Framework for Information Systems Architecture. IBM Sys-
tems Journal, 31(3), 590–616.
(Trætteberg, 2006) Trætteberg, H. (2006). A hybrid tool for user interface modelling
and prototyping. In Computer-Aided Design of User Interfaces: Springer Sci-
ence Business Media.
(Vasconcelos et al., 2003) Vasconcelos, J. B. d., Kimble, C., & Rocha, l. (2003).
Organisational memory information systems an example of a group memory
system for the management of group competencies. Journal of Universal
Computer Science, 9, 1410–1427.
(Zachman, 1987) Zachman, J. A. (1987). A framework for information systems ar-
chitecture. IBM Systems Journal, 26(3), 276–292.
(Zimmermann et al., 2004) Zimmermann, O., Krogdahl, P., & Gee, C. (2004). Ele-
ments of Service-Oriented Analysis and Design - An interdisciplinary model-
ing approach for SOA projects. http://www-
128.ibm.com/developerworks/webservices/library/ws-soad1/. Last accessed:
2008-07-21.
Authors:
Holger Kett, MBA
Fraunhofer-Institut für Arbeitswirtschaft und Organisation IAO
Competence Center Electronic Business
Nobelstraße 12, 70569 Stuttgart, Germany
PI:EMAIL
Konrad Voigt, Dipl.-Inf.
SAP AG
Research CEC Dresden
Chemnitzer Strasse 48, 01187 Dresden, Germany
PI:EMAIL
Gregor Scheithauer, Dipl. Wirtsch.Inf. Univ.
University of Bamberg
Distributed and Mobile Systems Group
Feldkirchenstraße 21, 96045 Bamberg, Germany
PI:EMAIL
22
Dr. Jorge Cardoso
SAP AG
Research CEC Dresden
Chemnitzer Strasse 48, 01187 Dresden, Germany
PI:EMAIL
The information in this document is proprietary to the following THESEUS consortium members funded by means of the Ger-
man Federal Ministry of Economy and Technology: Fraunhofer Gesellschaft, SAP AG and Siemens AG. The information in this
document is provided "as is", and no guarantee or warranty is given that the information is fit for any particular purpose. The
above referenced consortium members shall have no liability for damages of any kind including without limitation direct, special,
indirect, or consequential damages that may result from the use of these materials subject to any liability which is mandatory
due to applicable law. Copyright 2008 by Fraunhofer Gesellschaft, SAP AG and Siemens AG.
23