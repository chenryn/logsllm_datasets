# Adventures in MitM-land: Using MITM to Attack Active Directory Authentication Schemes

## About Us
- **Sagi Sheinfeld (@sagish1233)**
  - Senior Engineer at CrowdStrike (Formerly at Preempt)
  - Extensive background as a security researcher
  - Previously presented at Black Hat
- **Eyal Karni (@eyal_karni)**
  - Senior Engineer at CrowdStrike
  - Presented at Black Hat and DEFCON
- **Yaron Zinar (@YaronZi)**
  - Senior Manager, Engineering at CrowdStrike
  - Presented at Black Hat and DEFCON

## Is MITM an Important Technique?
- Sometimes, it is the only technique that works when others fail.
- Often overlooked, especially in environments with:
  - Active Directory
  - Relatively old protocols
  - Protocols that do not use TLS

## NTLM Basics
- **Authentication is not bound to the target server!**
  1. **NTLM Negotiate**
  2. **NTLM Challenge**
  3. **NTLM Authenticate**
  4. **NETLOGON**
  5. **Approve/Reject**

  - **Flow:**
    - Client Machine → Server → Domain Controller (DC)

## Kerberos Basics
- **Flow:**
  1. **AS-Req**
  2. **AS-Rep**
  3. **TGS-Req**
  4. **TGS-Rep**
  5. **AP-Req**

  - **Client Machine → Server → Domain Controller (DC)**

## Kerberos vs. NTLM
| Feature | NTLM | Kerberos |
|---------|------|----------|
| Protected from Offline Cracking | ✗ | ✓ (except X-roasting) |
| Can Work w/o Storing Hash in RAM | ✗ | ✓ |
| Supports Mutual Authentication | ✗ | ✓ |
| Smart Card Support | ✗ | ✓ |
| Hashes Contain Salt | ✗ | ✓ (except RC4) |

## NTLM Relay 101
- **Flow:**
  1. **NTLM Negotiate**
  2. **NTLM Challenge**
  3. **NTLM Authenticate**
  4. **NETLOGON**
  5. **Approve**

  - **Client Machine → Attacked Target → Domain Controller (DC)**

## NTLM Relay over DCE/RPC
- First suggested by Sylvain Heiniger (@sploutchy)
- Found at least one interface (TSCH) with no server signing
- Used NTLM Relay to create a new scheduled task

## DCE/RPC Relay Mitigation is Broken
- [Documentation](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rpce/425a7c53-c33a-4868-8e5b-2a850d40dc73)

## Printer Spooler LPE (CVE-2020-1048)
- Discovered by Peleg Hadar (@peleghd) and Tomer Bar
- For printing, you need a driver and a port
- Any user can install a printer driver (from a pre-existing list)
- "Generic/Text" can write anything...
- The port can be a file instead, allowing arbitrary file writes
- It is a privileged process, and access checks are done on the client side, leading to Local Privilege Escalation (LPE)

## CVE-2021-1678
- Found using our RPC scanning tool
- Targets MS-PAR (IRemoteWinSpool) Interface
- Requires only RPC_C_AUTHN_LEVEL_CONNECT
- Supports remote printer operations
- Works similarly to CVE-2020-1048 (just remotely)

  - **Flow:**
    1. **RpcAsyncInstallPrinterDriverFromPackage**
    2. **Several Printer RPC Commands**
    3. **RpcWritePrinter (Writing a file remotely)**
    4. **NTLMSSP_NEGOTIATE (Relayed)**
    5. **RPC Bind (IRemoteWinSpool)**
    6. **NTLMSSP_CHALLENGE (Relayed)**
    7. **NTLMSSP_AUTHENTICATE (Relayed)**

  - **Client Machine → Rogue Server → Domain Controller (DC)**

## DEMO

## MS15-011
- Initially discovered by Luke Jennings (@jukelennings)
- Attacks GPO retrieval using MITM
- Many attack scenarios, including Remote Code Execution (RCE) and privilege escalation
- Some scenarios are still exploitable

  - **Flow:**
    1. **LDAP Bind**
    2. **NTLM Negotiate**
    3. **NTLM Challenge**
    4. **NTLM Authenticate**
    5. **NetLogonSamLogon Request**
    6. **NetLogonSamLogon Response (Contains session key)**
    7. **accept-complete**
    8. **LDAP Search (GPO search)**
    9. **LDAP Search Response (Redirects GPO to malicious UNC path)**

  - **Client Machine → Rogue Server → Domain Controller (DC)**

## MS Fixes for MS15-011
- GPO retrieval can no longer operate with NTLM
- Registry Key
- Hardened UNC Paths
- Configuration to block NTLM usage in SMB
- Defaults:
  - `\\*\SYSVOL`
  - `\\*\NETLOGON`

## Azure AD Connect
- [Documentation](https://docs.microsoft.com/en-us/azure/active-directory/hybrid/how-to-connect-password-hash-synchronization)

### Azure AD Connect MITM Attack
- Establish a full MITM between Azure AD Connect and DC
- Make Kerberos fail while allowing LDAP to pass to the DC
- Wait for domain replication in NTLM
- Inject a new MD4 password for an account of your choice
- Log in to Azure AD with the injected password

  - **Flow:**
    1. **Establish full MITM**
    2. **Inject new MD4 password**
    3. **Log in to Azure AD**

  - **Client Machine → Domain Controller (DC)**

## DEMO

## Kerberos Relay
- Similar to NTLM Relay but often easier
- **Flow:**
  1. **Kerberos AP-Req (Client Machine)**
  2. **Kerberos AP-Req (Attacked Target)**

- **SMB Relay:**
  - Works the same as with NTLM
  - Attacker can negotiate no signing if server signing is not required (default)
  
  - **Flow:**
    1. **Kerberos AP-Req (Client Machine)**
    2. **SMB Bind (Signing Negotiate)**
    3. **Kerberos AP-Req (Attacked Target)**

## Kerberos Relay over TLS
- Relay protection in TLS channels
- Extended Protection for Authentication
- Important examples:
  - LDAPS (Channel Bindings)
  - AD FS
  - IIS
- Can this be bypassed?
  - NTLM (check out our DEFCON 2019 talk)
  - Kerberos (AP-Req contained signed certificate thumbprint inside checksum field)
  - What happens when Kerberos client has no checksum field?

## KDC Spoofing
- Old technique using MITM for authentication bypass
- Typically exists in VPNs, firewalls

  - **Flow:**
    1. **Plaintext Credentials (over HTTPS, TLS, etc.)**
    2. **Kerberos AS-Req (Authentication Server)**
    3. **Kerberos AS-Rep (Using fake password)**

  - **Client Machine → Domain Controller (DC) → MITM**

## KDC Spoofing Protection
- Very old technique
- Protection:
  - Create a computer account for the authentication server
  - Create a TGS ticket to self using TGT

  - **Flow:**
    1. **Plaintext Credentials (over HTTPS, TLS, etc.)**
    2. **Kerberos AS-Req (Authentication Server)**
    3. **Kerberos AS-Rep**
    4. **Kerberos TGS-Req**
    5. **Kerberos TGS-Rep (DC proves identity by signing with server’s secret)**

  - **Client Machine → Domain Controller (DC) → Authentication Server (VPN, FW)**

## Kerberos Injection
- Intervene in the DC selection process
- Client chooses a DC using a combination of DNS and LDAP queries
- MITM relays AS-REQ and TGS-REQ (to self) to a real DC
- MITM serves subsequent DCE/RPC and LDAP requests (as long as NETLOGON secure channel is not required)

  - **Flow:**
    1. **DC Selection Process**
    2. **Injected DC (Using rogue server)**
    3. **Kerberos AS-Req**
    4. **Kerberos AS-Rep**
    5. **Kerberos TGS-Req**
    6. **Kerberos TGS-Rep (Signing with client secret)**
    7. **Kerberos TGS-Req (LDAP)**
    8. **Kerberos TGS-Rep (Signing with rogue server’s secret)**
    9. **LDAP Search**
    10. **LDAP Search Response (Malicious injected data)**

  - **Client Machine → Rogue Server → Domain Controller (DC)**

### Attack Scenario
- A service that:
  - Uses Kerberos (usual case)
  - Ingests data from DC without certificate/netlogon validation (usual case)
  - Does not have a fixed DC configured (usual case)
- MITM between the server and the DNS
- Use MITM to redirect to the rogue DC
- Client requests ticket to rogue server (SPN needs to be registered!)
- Modify responses to the ingested data

### How to Mitigate?
- Authenticate DC
- Establish a NETLOGON channel
- Use LDAPS with certificate validation
- Use Kerberos Armoring (not tested yet)
- Windows Group Policy Objects (GPO) are still safe

## DEMO

## Responsible Disclosure
- **IRemoteWinSpool NTLM Relay:**
  - Microsoft fixed the issue under CVE-2021-1678
  - Regarding other vulnerable interfaces: "If you find other exploitable DCE/RPC interfaces, please submit these separately."
- **Azure AD:**
  - Microsoft acknowledged the issue and replied: "MitM requirement requires another vulnerability to be exploited to achieve a successful MitM, or a compromised connection, or some level of privileges. We also strongly recommend treating AD Connect server as a domain controller, following hardened security practices."
- **Channel Bindings:**
  - Microsoft acknowledged the issue and replied: "Microsoft has decided that it will not be fixing this vulnerability in the current version and we are closing this case."
- **Kerberos Injection:**
  - A few vendors are working on fixing their Kerberos clients – expect updates soon

## Closing Remarks
- MITM is not a security boundary (at least for Microsoft)
- Securing protocols from MITM is hard
- Kerberos does not validate DC identity properly
- GSS-API does not guarantee protection from MITM

## Tips for Defenders
- Network Hardening
- Enable server/client signing
- Regularly patch software
- Treat critical servers (e.g., AAD Connect) the same as DC
- Monitor suspiciously registered SPNs
- Microsoft Recommendation: Avoid being MITM’d… :P