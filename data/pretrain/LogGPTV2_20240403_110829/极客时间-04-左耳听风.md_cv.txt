# 65 \| 区块链技术细节：加密和挖矿前面一篇文章中提到的技术解决了交易信息不能被篡改的问题。但还有一个比较重要的问题，那就是，我们每个人只能发起和自己有关的交易，也就是能发起自己对别人付钱的交易，我们不能发起别人对我付钱，或是别人向别人付钱的交易。那么，在比特币中是怎么解决这个问题的？让我们先看一些基础的加密技术。
# 比特币的加密方法
## 密钥对 / 签名 / 证书所谓密钥对，也就是一种非对称加密技术。这种技术，在对信息进行加密和解密时，使用两个不同的密钥。这样一来，我们就可以把其中一个密钥公布出去，称之为公钥，另一个密钥私密地保管好，称之为私钥。现实社会中，有人使用公钥加密，私钥解密，也有反过来用私钥加密，公钥解密，这得看具体的场景。（比特币使用了非对称加密的技术，其使用了[ECDSA](https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm)密钥对比技术。）比如，我把我加密的密钥发布给所有人，然后大家都用这个公钥加密信息，但其他人没有私钥，所以他们解不了密文，只有我能解密文，也只有我能看得懂别人用我的公钥加密后发给我的密文。如下图所示。![](Images/1c58e40951cb28f84e1cedeae183a8d8.png){savepage-src="https://static001.geekbang.org/resource/image/ee/71/ee63472f10b0c179a5c3c58d47d9f271.png"}但是，这会有个问题，那就是每个人都有我的公钥，别人可以截获 Mike发给我的信息，然后自己用我的公钥加密一个别的信息，伪装成 Mike 发给我，这样我就被黑了。于是，我们需要对 Mike的身份进行验证，此时就需要用到"数字签名"的概念了。``{=html}Mike 也有一对密钥对，一个公钥给了我，私钥自己保留。-   Mike 发自己想要的信息，做个 SHA 或 MD5 的 hash，得到一个 hash    串，又叫 Digest。-   Mike 用自己的私钥，把 Digest 加密，得到一段 Digest    的密文。我们把这个事叫数字签名，Signature。-   然后，Mike    把他想发给我的信息用我的公钥加密后，连同他的数字签名一同发给我。-   我用我的私钥解密 Mike 发给我的密文，然后用 Mike    的公钥解密其数字签名得到 Digest。然后，我用 SHA 或 MD5    对解开的密文做 Hash。如果结果和 Digest 一致，就说明，这个信息是 Mike    发给我的，没有人更改过。这个过程如下图所示。![](Images/fab8ff66403fa56d36eb53f32392c77f.png){savepage-src="https://static001.geekbang.org/resource/image/5a/28/5a44ceb1af5a27cc0873cbe4e2571028.png"}但是问题还没完。假设有个黑客偷偷地把 Jack 电脑上的 Mike的公钥给换了，换成自己的，然后截获 Mike发出来的信息，用自己的密钥加密一段自己的信息，以及自己的数字签名。于是，对于 Jack 来看，因为他用了黑客的公钥，而不是 Mike的，那么对他来说，他就以为信息来自 Mike，于是黑客可以用自己的私钥伪装成Mike 给 Jack 通信。反之亦然，于是黑客就可以在中间伪装成 Jack 或 Mike来通信，这就是中间人攻击。如下图所示。![](Images/79adaff2ef47d8ee504b4b3e0c9ab055.png){savepage-src="https://static001.geekbang.org/resource/image/87/00/876f36ed6a0a617f6356603798f7d700.png"}这个时候就比较麻烦了。Mike 看到有人在伪造他的公钥，想了想，他只能和 Jack找了个大家都相信的永不作恶的权威的可信机构来认证他的公钥。这个权威机构，用自己的私钥把Mike 的公钥和其相关信息一起加密，生成一个证书。此时，Jack 就可以放心地使用这个权威机构的证书了。Mike只需要在发布其信息的时候放上这个权威机构发的数字证书，然后 Jack用这个权威机构的公钥解密这个证书，得到 Mike 的公钥，再用 Mike的公钥来验证 Mike 的数字签名。![](Images/28b4188a851f19ae35515eb7dd43103e.png){savepage-src="https://static001.geekbang.org/resource/image/bb/57/bb3a47bf0b8c84a6c85d864c88739357.png"}上面就是整个密钥对、签名和证书的全部基础细节。比特币也用了这样的基础技术来认证用户的身份的。下面，我们来看看比特币的一些细节。
## 比特币的加密在比特币的世界里，每一笔交易的 From 和 To 都是每个用户的公钥（PublicKey）。也就是说，使用用户的公钥来做交易的账户。于是，这个过程很简单。-   交易的发起方只能是支付方，支付方需要用自己的私钥来加密交易信息并制作相关的交易签名。-   网络上其他人会用你的公钥（也就是交易的支出方）来做解密来验证。为什么不需要那个证书机构呢？不怕中间人攻击吗？这是因为，如果黑客想要伪造一笔别人的交易，那么他需要换掉半数以上结点上的被攻击者的公钥，这不太现实。与其这样做，还不如去偷被攻击者的私钥，可能还简单一些。下面是一个交易链的图示。这个交易链的钱从 A -\> B -\> C -\> D，一共 3笔交易。![](Images/655d555cfdc0c6676fd0405870cb06d2.png){savepage-src="https://static001.geekbang.org/resource/image/fe/a8/feaaa557eab454dd1678415da7f554a8.png"}图片来源：[Ken ShirriffBlog](http://www.righto.com/2014/02/bitcoins-hard-way-using-raw-bitcoin.html)-   **发起交易**。我们从第一笔交易可以看到，A    用自己的私钥为交易信息和自己的地址生成了交易的签名，然后把交易信息、自己的地址、交易签名和自己的公钥放出去，这样方便别人来验证的确是    A 发起的。-   **验证交易**。在验证时，使用 A 的公钥解密交易签名，得到交易的 hash    值。把交易信息和自己的地址做 hash，看看是不是和签名解密后的 hash    值一致。这里需要注意一个细节，比特币的地址是由我们的公钥生成的，生成规则比较复杂，可以参看Bitcoin 的 Wiki 页 - [Technical background of version 1 Bitcoinaddresses](https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses)。
# 比特币的挖矿前面说到，在比特币的区块 hash 算法中，要确保下面这个公式成立：    SHA-256(SHA-256 (Block Header)) `{=html}[[[[[2]{#066.html#MathJax-Span-4.mnstyle="font-family: MathJax_Main;"}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; clip: rect(3.202em, 1000.47em, 4.144em, -999.998em); top: -3.998em; left: 0em;"}[256]{#066.html#MathJax-Span-7.mnstyle="font-size: 70.7%; font-family: MathJax_Main;"}]{#066.html#MathJax-Span-6.mrow}]{#066.html#MathJax-Span-5.texatom}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; top: -4.374em; left: 0.52em;"}]{style="display: inline-block; position: relative; width: 1.649em; height: 0px;"}]{#066.html#MathJax-Span-3.msubsup}]{#066.html#MathJax-Span-2.mrow}[]{style="display: inline-block; width: 0px; height: 2.308em;"}]{style="position: absolute; clip: rect(1.32em, 1001.65em, 2.449em, -999.998em); top: -2.304em; left: 0em;"}]{style="display: inline-block; position: relative; width: 1.649em; height: 0px; font-size: 125%;"}[]{style="display: inline-block; overflow: hidden; vertical-align: -0.056em; border-left: 0px solid; width: 0px; height: 1.179em;"}]{#066.html#MathJax-Span-1.mathstyle="width: 2.073em; display: inline-block;"}``{=html}[$2^{256}$]{.MJX_Assistive_MathMLrole="presentation"}]{#066.html#MathJax-Element-1-Frame .MathJaxtabindex="0" style="position: relative;"mathml="2256"role="presentation"}$$ 种可能性，而前面有 18 个零意味着前面有 72 个 bits是零。于是，满足条件的哈希值是有 []{.MathJax_Previewstyle="color: inherit; display: none;"}[``{=html}[[[[[2]{#066.html#MathJax-Span-11.mnstyle="font-family: MathJax_Main;"}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; clip: rect(3.202em, 1000.47em, 4.144em, -999.998em); top: -3.998em; left: 0em;"}[184]{#066.html#MathJax-Span-14.mnstyle="font-size: 70.7%; font-family: MathJax_Main;"}]{#066.html#MathJax-Span-13.mrow}]{#066.html#MathJax-Span-12.texatom}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; top: -4.374em; left: 0.52em;"}]{style="display: inline-block; position: relative; width: 1.649em; height: 0px;"}]{#066.html#MathJax-Span-10.msubsup}]{#066.html#MathJax-Span-9.mrow}[]{style="display: inline-block; width: 0px; height: 2.308em;"}]{style="position: absolute; clip: rect(1.273em, 1001.65em, 2.449em, -999.998em); top: -2.304em; left: 0em;"}]{style="display: inline-block; position: relative; width: 1.649em; height: 0px; font-size: 125%;"}[]{style="display: inline-block; overflow: hidden; vertical-align: -0.056em; border-left: 0px solid; width: 0px; height: 1.238em;"}]{#066.html#MathJax-Span-8.mathstyle="width: 2.073em; display: inline-block;"}``{=html}[$2^{184}$]{.MJX_Assistive_MathMLrole="presentation"}]{#066.html#MathJax-Element-2-Frame .MathJaxtabindex="0" style="position: relative;"mathml="2184"role="presentation"}$$ 种可能性，概率是 []{.MathJax_Previewstyle="color: inherit; display: none;"}[``{=html}[[[[[1]{#066.html#MathJax-Span-18.mnstyle="font-size: 70.7%; font-family: MathJax_Main;"}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; clip: rect(3.391em, 1000.28em, 4.144em, -999.998em); top: -4.374em; left: 50%; margin-left: -0.186em;"}[[2]{#066.html#MathJax-Span-20.mnstyle="font-size: 70.7%; font-family: MathJax_Main;"}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; clip: rect(3.391em, 1000.33em, 4.144em, -999.998em); top: -3.998em; left: 0em;"}[72]{#066.html#MathJax-Span-23.mnstyle="font-size: 50%; font-family: MathJax_Main;"}]{#066.html#MathJax-Span-22.mrow}]{#066.html#MathJax-Span-21.texatom}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; top: -4.28em; left: 0.379em;"}]{style="display: inline-block; position: relative; width: 0.896em; height: 0px;"}]{#066.html#MathJax-Span-19.msubsup}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; clip: rect(3.249em, 1000.9em, 4.144em, -999.998em); top: -3.48em; left: 50%; margin-left: -0.468em;"}[[]{style="display: inline-block; overflow: hidden; vertical-align: 0em; border-top: 1.3px solid; width: 1.038em; height: 0px;"}[]{style="display: inline-block; width: 0px; height: 1.085em;"}]{style="position: absolute; clip: rect(0.896em, 1001.04em, 1.226em, -999.998em); top: -1.315em; left: 0em;"}]{style="display: inline-block; position: relative; width: 1.038em; height: 0px; margin-right: 0.144em; margin-left: 0.144em;"}]{#066.html#MathJax-Span-17.mfrac}]{#066.html#MathJax-Span-16.mrow}[]{style="display: inline-block; width: 0px; height: 2.308em;"}]{style="position: absolute; clip: rect(1.32em, 1001.32em, 2.967em, -999.998em); top: -2.304em; left: 0em;"}]{style="display: inline-block; position: relative; width: 1.32em; height: 0px; font-size: 125%;"}[]{style="display: inline-block; overflow: hidden; vertical-align: -0.703em; border-left: 0px solid; width: 0px; height: 1.826em;"}]{#066.html#MathJax-Span-15.mathstyle="width: 1.649em; display: inline-block;"}``{=html}[$\frac{1}{2^{72}}$]{.MJX_Assistive_MathMLrole="presentation"}]{#066.html#MathJax-Element-3-Frame .MathJaxtabindex="0" style="position: relative;"mathml="1272"role="presentation"}$$ \*\*。是的，很有可能你穷举完 Nonce 后还找不到，那就只能调整 Timestamp 和Merkle Root（调整不同的记账交易）了。所以，一般的挖矿流程如下。-   从网络上取得之前的区块信息。-   从 \" 待记账区 \"    中获取一组交易数据（有优先级，比如成长时间、矿工小费等）。-   形成区块头（计算 Merkle Root 并设计记账时间 Timestamp 等）。-   开始穷举 Nonce，来计算区块头的 hash 值。如果前面有 18 个零（小于    Target），那么记账成功。如果没有，则从第一步重新开始。-   一旦某矿工成功打包一个区块，他就会告诉其他矿工。收到消息的矿工会停下手上的工作，开始验证，验证通过后，广播给其他矿工。所以，满足条件的这个难度系数成为了挖矿的关键。设置这个难度系数就是为了让全网产生的区域名平均在10分钟一块。而根据比特币无中心服务器的架构，也就是其挖矿的机器数量是想来就来想走就走的，计算力可能会不一样。因此，为了保证每10分钟产生一个区块，当算力不足的时候，难度下降，当算力充足的时候，难度提高。今天的这 18个零，基本上来说，一般的电脑和服务器就不用想了，必须要算力非常非常高的机器才能搞定。所以，在今天，挖矿这个事，已经不是一般老百姓能玩的了。下图展示了整个比特币的难度历史。![](Images/e7ecc767c4632aa0bd76d27677dbc6ec.png){savepage-src="https://static001.geekbang.org/resource/image/4d/14/4d7e09ee0c03a807c1c5326d0d5c2e14.png"}\（图片来源： ）上面这个图只是算力的表现，可能并不直观。我们还是用其耗电量来说可能会更好一些。根据\"Bitcoin Energy Consumption Index\" 统计，截至 2017 年 11 月 20日，比特币过去一年挖矿的电力总消耗已累计达 29.51 TWh（1TWh =]{.MathJax_Previewstyle="color: inherit; display: none;"}[``{=html}[[[[[10]{#066.html#MathJax-Span-27.mnstyle="font-family: MathJax_Main;"}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; clip: rect(3.202em, 1000.94em, 4.144em, -999.998em); top: -3.998em; left: 0em;"}[12]{#066.html#MathJax-Span-30.mnstyle="font-size: 70.7%; font-family: MathJax_Main;"}]{#066.html#MathJax-Span-29.mrow}]{#066.html#MathJax-Span-28.texatom}[]{style="display: inline-block; width: 0px; height: 4.002em;"}]{style="position: absolute; top: -4.374em; left: 0.991em;"}]{style="display: inline-block; position: relative; width: 1.791em; height: 0px;"}]{#066.html#MathJax-Span-26.msubsup}]{#066.html#MathJax-Span-25.mrow}[]{style="display: inline-block; width: 0px; height: 2.308em;"}]{style="position: absolute; clip: rect(1.32em, 1001.79em, 2.449em, -999.998em); top: -2.304em; left: 0em;"}]{style="display: inline-block; position: relative; width: 1.791em; height: 0px; font-size: 125%;"}[]{style="display: inline-block; overflow: hidden; vertical-align: -0.056em; border-left: 0px solid; width: 0px; height: 1.238em;"}]{#066.html#MathJax-Span-24.mathstyle="width: 2.261em; display: inline-block;"}``{=html}[$10^{12}$]{.MJX_Assistive_MathMLrole="presentation"}]{#066.html#MathJax-Element-4-Frame .MathJaxtabindex="0" style="position: relative;"mathml="1012"role="presentation"}$$ Wh），约占全球总电力消耗的0.13%。该数字甚至已经超过近 160个国家或地区一年的电力消耗，包含冰岛和尼日利亚。若全球的比特币矿工自成一国，该国的电力消耗排名可排到全球第61 名。看到这里，你一定要问，为什么要挖矿呢，不就是记个账呗。为了系统地说明这个问题，我们下面来看看去中心化的共识机制。文末给出了《区块链技术》系列文章的目录，希望这一系列内容对你有启发，有帮助。-   [区块链的革命性及技术概要](https://time.geekbang.org/column/article/5197)-   [区块链技术细节：哈希算法](https://time.geekbang.org/column/article/5363)-   [区块链技术细节：加密和挖矿](https://time.geekbang.org/column/article/5438)-   [去中心化的共识机制](https://time.geekbang.org/column/article/5612)-   [智能合约](https://time.geekbang.org/column/article/5623)-   [传统金融和虚拟货币](https://time.geekbang.org/column/article/5636)![](Images/1c1e992cf41f5294df097aabed82f9e4.png){savepage-src="https://static001.geekbang.org/resource/image/fc/e9/fcc761001867c60f526665e237f831e9.jpg"}