AT&T BackboneIMC ’21, November 2–4, 2021, Virtual Event, USA
Zesen Zhang, Alexander Marder, Ricky Mok, Bradley Huffaker, Matthew Luckie, KC Claffy, and Aaron Schulman
we could find in the San Diego region. We used Measurement
Lab data [39] to extract AT&T customer IP addresses from NDT
measurements, and retained the subset of addresses located in San
Diego or Imperial County according to NetAcuity [1], a commercial
geolocation service. Using only traceroutes that passed through
the BackboneCO in San Diego and reached the customer addresses,
we inferred that the penultimate traceroute hop corresponds to a
device in an EdgeCO.
We could not directly ping these devices, but we could elicit re-
sponses by sending an ICMP Echo packet to a customer IP address
with the TTL field set to the penultimate probe TTL in the tracer-
oute to that address. To measure latency from Google Cloud in Los
Angeles to the EdgeCOs, we conducted 100 probes to each EdgeCO
address observed in the traceroutes and used the minimum ob-
served RTT (Table 2). These results show that some EdgeCOs have
significantly less latency to the BackboneCO than other EdgeCOs
in the region. Two distant EdgeCOs—with connected customers ge-
olocated to Calexico and El Centro, CA—had over twice the average
latency of 4.3ms to Google (9–10 msecs). This disparity suggests
that some AT&T customers will suffer considerably higher latency
to cloud services than other users in the region.
Redundancy. AT&T’s network in San Diego has a similar lack of re-
dundancy that we observed in some cable provider regions; namely,
the use of only one BackboneCO. In AT&T’s network, these Back-
boneCOs are fortified for natural disasters, such as Category 5 hur-
ricanes. However, the Christmas 2020 attack on AT&T’s Nashville
office, which we assume is the lone BackboneCO in Nashville, took
down the entire region, consistent with our inferred topology. Rela-
tive to the cable providers, AT&T appears to have more redundancy
in their BackboneCO to AggCO paths, with all backbone routers
connecting to all Agg routers. Our measurements cannot detect
whether these paths take diverse fiber paths.
Validation. Aspects of our inferences match historical documents
describing AT&T’s telephone network in San Diego. AT&T’s access
network was likely built using these same COs. The first docu-
ment [5] states that AT&T operates one tandem building in San
Diego (CLLI SNDGCA02), consistent with the single BackboneCO
that we inferred. The documents also describe 42 subtending COs in
San Diego, we believe these match the ∼40 EdgeCOs we inferred. A
second document [60] shows four “Inter-office” COs in San Diego’s
network, we believe this term is AT&T’s term for AggCOs.
7 CASE STUDY: MOBILE CARRIERS
For mapping the regional access networks of all three major mobile
carriers, we focused on the portion of the network that bridges the
mobile packet core with the rest of the Internet (and edge services).
Some mapping challenges are similar those of AT&T’s wireline
network: they have no rDNS on routers, and probing requires in-
ternal vantage points. However, mobile networks face a significant
additional challenge: they have no distributed VPs to provide inter-
nal views of the providers’ regional networks. Although, they also
present a unique opportunity to observe nationwide network topol-
ogy: unlike the wireline transparent networks, we can physically
move mobile VPs to probe inside different regions. Building on this
insight, we introduce a new parcel-based measurement technique,
Figure 14: Improving scamper’s traceroute efficiency
Figure 15: Shipping to 12 destinations covered 40 states
ShipTraceroute, to obtain national coverage of mobile access net-
work regions. Then, we use the large geographically-tagged dataset
of traceroutes we collected to infer the topology of the networks.
7.1 Phase 1: Collect router-level topology
We developed ShipTraceroute, a smartphone-based network mea-
surement technique that can send traceroutes from a battery-powered
Android device for a prolonged period of time while being shipped
inside a truck or railcar. Appendix A.1 describes how shipment of
a smartphone running this software complies with U.S. regulations
for items shipped in a parcel inside of a truck or train.
7.1.1 Topology collection. We shipped three Samsung Galaxy A71
smartphones (one for Verizon, AT&T, and T-Mobile) to 12 locations
in the U.S. The shipment paths traversed 40 states (Fig. 15). During
the shipments, the devices attempted to perform a round of tracer-
outes once per hour. However, signal conditions varied significantly
along the routes. Some areas had too weak of a signal inside of
the vehicle to perform the traceroutes, particularly in areas where
there are no inhabitants. We observed the following success rates
for rounds of traceroutes during the journey: 1592/1948 (82%) on
AT&T, 1720/2054 (84%) on Verizon, and 872/1153 (75%) on T-Mobile.
The destinations for each round of traceroutes were IPv6 and IPv4
addresses in ASes neighboring the mobile carriers’ networks.1 The
1We used Zayo’s AS for T-Mobile because T-Mobile does not have its own IPv4 AS
and T-Mobile’s primary backbone provider is Zayo.
729
81012056789Time (minutes)462Cumulative Energy (mAh)13402New codeOld codeNew code:8.6 mAhAirplanemode:0.5 mAhWakeup1.4 mAh2.6 mAh5.3 mAhOld code:Inferring Regional Access Network Topologies: Methods and Applications
IMC ’21, November 2–4, 2021, Virtual Event, USA
reason why we used external destinations (in neighboring ASes) to
map mobile access networks, rather than internal addresses like we
used in wireline networks, is because mobile networks block tracer-
outes to internal infrastructure. We used destinations in all neigh-
boring ASes to try and traverse all of the carriers’ BackboneCOs
in each region (details are in Appendix D). However, quickly we
discovered that traceroutes to all of the destinations took the same
path inside each of the mobile access networks, allowing us to
reduce to a single destination per provider.
We also observed that the path through the mobile network did
not change as the phone moved within a region. We found we
needed to force the phone to re-register with the core network by
putting it into airplane mode before each round of traceroutes to
route through all region’s EdgeCOs and packet gateways.
Since GPS signals are rarely available inside of shipping vehicles,
we logged the device’s cellid each time we started a round of
traceroutes. We then converted the cellid to a geolocation using
the OpenCellID public cellular tower geolocation database [4].
7.1.2 Making mobile tracerouting energy efficient. We designed the
measurement software on our smartphone to prolong battery life.
The goal was to ship the phone by ground transport across the U.S.—
a journey that takes about one week—while running measurements
each hour, without the battery emptying.
We achieved this without sacrificing measurement fidelity by
making two modifications to scamper [37]—ShipTraceroute’s net-
work probing tool. First, we modified scamper so that it could con-
duct measurements without without rooting the phone (rooting can
disable thermal safeguards). Second, we reduced scamper’s energy
consumption by modifying its traceroute implementation to send
probes to multiple consecutive hops in parallel. This significantly
reduces the time that scamper spent waiting for unresponsive hops,
and thus reduced the time the phone’s radio is fully powered.
We evaluated the energy efficiency of our modified scamper im-
plementation by measuring the energy consumption of a Samsung
Galaxy A71 5G performing traceroutes to the 266 IPv4 and IPv6
destinations in AT&T. To measure the device’s energy consumption,
we fully charged it, and instrumented with a USB-C power monitor
on its charging port. This allowed us to measure the energy needed
to operate the device. Fig. 14 shows how much we improved energy
efficiency: we achieved a 38% reduction in energy from 8.6 mAh
with off-the-shelf scamper to 5.3 mAh with ShipTraceroute’s scam-
per. As a result of these improvements, we calculated that our phone
can perform hourly traceroutes for ∼12 days on one charge, a gain
of ∼4 days over the off-the-shelf implementation. The other main
contributors to power consumption are the energy consumption
required to exit airplane mode when we start a measurement (1.4–
2.6 mAh), and the trickle of energy consumed when the phone is
asleep and in airplane mode between measurements. Although we
put the device in airplane mode between traceroute rounds to force
it to re-register in the packet core, it also has the additional benefit
of reducing energy consumption (14.5 mAh vs. 9 mAh in airplane
mode for every 55 minutes asleep).
7.2 Phase 2: Inferring CO-level topology
Each traceroute collected in phase one revealed a path from the
mobile packet gateway (the first hop) until the packet reaches the
730
BackboneCO. However, it is difficult to infer CO-level topology
from these traceroutes because mobile networks have extremely
limited rDNS (only Verizon has rDNS).
Fortunately, IPv6 is now widely deployed in cellular networks,
and IPv6 addresses’ are long enough that providers can encode
information in them about where those addresses reside in the
topology of their access network. Indeed, we found an early dis-
cussion about how to set IPv6 prefixes for LTE infrastructure that
described how bits in addresses can be used to indicate what those
addresses are used for—infrastructure or users—and what their lo-
cation is in the network topology [15]. With the large number of
geo-tagged samples of IPv6 router addresses in the traceroutes we
collected, we looked for patterns in how the bits in the addresses
change as the mobile device moves.
7.2.1 AT&T. Fig. 16(a) shows the patterns we observed in AT&T’s
addresses in their traceroutes. The user address and first hop (packet
gateway) /32 prefix are consistent throughout the country, indicat-
ing it is the general AT&T mobile user prefix. User addresses also
have a more specific /40 prefix that only changes 11 times as we
move around the country. This prefix also changes simultaneously
with bits 32-47 of the router addresses. We believe this prefix indi-
cates the EdgeCO (and region) that is in use by the device, indeed
this prefix can be used to route to the correct BackboneCO router
to reach the user. For validation of this result, we discovered an
AT&T document from 2014 that also lists 11 mobile datacenters
in the U.S. [6]. However, we suspect that as they roll out their 5G
network, they will add more EdgeCOs and thus reduce the size of
their regions.
The /32 prefix of the rest of hops before leaving AT&T’s mobile
network are always the same, and different from the user address,
so we infer they are the general prefix for AT&T infrastructure (i.e.,
routers). We observed bits 48–52 of these addresses cycling through
several values inside each inferred EdgeCO, and they changed at the
same time as bits 32–40 of the user address. Also, these bits changed
each time we woke up from airplane mode and re-attached to the
cellular network. Therefore, we infer these bits indicate the current
packet gateway in the EdgeCO that user is attached to. Table 7
(Appendix D) shows the inferred infrastructure in each region.
7.2.2 Verizon. Fig. 16(b) shows the patterns we observed in Veri-
zon’s addresses. All of the first 10 hops are within Verizon’s network,
but only the first (packet gateway) and the last four hops appear
in the traceroutes. The /24 prefix of the user address and first hop
stays the same throughout the country, indicating this is Verizon’s
user address prefix. As the device moves, more specific bits change.
The /32 prefix changes 18 times, and the /40 prefix changed 32
times—both were stable within contiguous geographic regions. The
/32 prefix changed less frequency in a geographic area than the /40
prefix. One plausible explanation for this behavior is that the /32
prefix identifies the BackboneCO and the /40 identifies the EdgeCO
using that BackboneCO. We also observed bits 40–43 in in the user
address can change when we cycle airplane mode, while other hops
stay the same, indicating multiple packet gateways in each EdgeCO.
This explanation is supported by information from the rest of
the hops (i.e., infrastructure). The /32 prefix in the user address is
likely to represent the BackboneCO because it corresponds with
changes in the rDNS of the Verizon backbone hop (i.e., alter.net).
IMC ’21, November 2–4, 2021, Virtual Event, USA
Zesen Zhang, Alexander Marder, Ricky Mok, Bradley Huffaker, Matthew Luckie, KC Claffy, and Aaron Schulman
Figure 16: Topological hints for mobile networks encoded in IPv6 addresses.
The /40 prefix is likely to be the EdgeCO because when it changes,
so do the bits of the addresses in the other hops—the hops to reach
the EdgeCO from the BackboneCO—namely, bits 64–75 in all of the
infrastructure hops, and bits 32–39 in some of the hops. Table 8
(Appendix D) shows the inferred infrastructure in each region.
Although we were unable to find documentation that validates
our inferred topology, we performed several controlled experiments
to test our inferences. First, we found Verizon Wireless deploys
speedtest servers in their EdgeCOs which contain the names of the
EdgeCOs in their rDNS. For example, cavt.ost.myvzw.com is the
speedtest server in the Vista, California EdgeCO). We performed a
controlled drive north from San Diego to Irvine while tracerouting
to all of the speedtest servers, and we observed that when the short-
est traceroute path switched from the Vista, CA to the Azusa, CA
speedtest server, the expected bits in the traceroute hops changed
at the same time. Additionally, we performed a long-running sta-
tionary experiment verify if the EdgeCO and BackboneCO address
bits were stable in a location in San Diego. Indeed, they were gen-
erally stable across multiple days, however we did observe a small
number of switches to the neighboring EdgeCO connected to the
same BackboneCO. This implies the packet core connects to both
EdgeCOs and it can switch between them if necessary for load
balancing or redundancy.
7.2.3 T-Mobile. Fig. 16(c) shows the patterns we observed in T-
Mobile’s addresses. Similar to the other two providers, the user IP
prefix /32 stays the same across the entire country. The /40 prefix
of the user IP can change each time it leaves airplane mode within
a geographic area roughly the size of a city. These /40s are cycled
through in a somewhat round-robin fashion, indicating that bits
32-39 likely represent the packet gateway. However, we observed
that T-Mobile also cycles through different BackboneCO providers,
suggesting that T-Mobile has a different mobile access network
topology than the other providers. We infer that T-Mobile has a set
of packet gateways in each region, possibly in different EdgeCOs,
and with different backbone providers. These packet gateways are
likely interconnected by the packet core.
We confirmed with T-Mobile that they have several backbone
providers serving each region at different interconnection points
within the region. Also a device in one location connects to different
packet gateways at different sites (i.e., EdgeCOs), but that they
Figure 17: Inferred Internet topologies of U.S. mobile carriers
prefer the closest site. Their network is designed in this distributed
fashion for lower latency and resiliency. Therefore a device can
wake up connecting to a different packet gateway than it connected
to before it went to sleep.
Summary. We infer topologies among the three providers’
7.2.4
access networks (Fig. 17). AT&T appears to have a single EdgeCO
with multiple packet gateways connected to their nearest back-
bones. Verizon has multiple EdgeCOs sharing the same backbone
CO, but the EdgeCOs cover non-overlapping regions. T-Mobile has
multiple EdgeCOs in one region, but does not aggregate traffic to
a single backbone, rather they aggregate to a variety of backbone
providers directly connected to the EdgeCOs. These designs have
different tradeoffs. AT&T’s design may be more cost-efficient be-
cause equipment and links are centralized to a single EdgeCO per
region. However, the lack of diverse CO locations may increase
latency. Verizon and T-Mobile appear to have lower latency in part
because they have multiple EdgeCOs per region.
7.3 Comparison of US Mobile Access Networks
The topology of mobile access networks has implications for net-
work latency, because user traffic has to traverse to the backbone
PoP of the region to reach other Internet hosts. Fig. 18 shows the
minimum latency we measured from our ShipTraceroute smart-
phone in different locations to a server located at CAIDA in San
Diego. The hexagons indicate where we captured latency: the darker
the color, the higher the minimum latency to the server from that
731
traceroute from 2600:380:6c00:e145::/64 1  2600:380:6c00:e145:0:45:926e:f340 2  * 3  2600:300:2090:b0e::1 4  2600:300:2090:b20::1Addr. Bit Fields0-31 (2600:380)0-31 (2600:300)32-39 (6c)32-47 (2090)48-51 (b)Inferred MeaningAT&T preﬁx (user)AT&T preﬁx (router)Region (user)Region (router)Packet Gateway (router)traceroute from 2600:1012:b12e:74d5::/64 1     2600:1012:b12e:74d5:0:32:adb6:4940 2-5  * 6     2001:4888:65:200e:62e:25:0:1 7     * 8     2001:4888:6f:3091:62e:1:: 9     2001:4888:6f:3091:62e:1::10    2001:4888:65:1020:62e:1::Addr. Bit Fields0-23 (2600:10xx)0-31 (2001:4888)24-31 (12)32-39 (b1)32-39 (65), 64-75 (62e)40-43 (2)Inferred MeaningVerizon preﬁx (user)Verizon preﬁx (router)Backbone Region (user)EdgeCO (user)EdgeCO (router)Packet Gateway (user) traceroute from 2607:fb90:4a20:d73::/64   1  2607:fb90:4a20:d73:0:c:3fbe:bf40  2  fc00:420:81:2013::1  3  fc00:420:81:113::1  4  fd00:976a:14fe:9001::1Addr. Bit Fields0-31 (2607:fb90)0-31 (fd00:976a)32-39 (4a)32-47 (14fe)Inferred MeaningT-Mobile preﬁx (user)T-Mobile preﬁx (router)Packet Gateway (user)Packet Gateway (router)(a) AT&T(b) Verizon(c) T-MobileAT&T BackbonePacket CorePacket CoreZayo BackboneLumen Backbone VZ BackbonePacket CoreAT&TPGW (x5-6)PGWPGWVerizonPGW (x2-3)PGW (x2-3)T-MobileInferring Regional Access Network Topologies: Methods and Applications
IMC ’21, November 2–4, 2021, Virtual Event, USA
(a) AT&T
(b) Verizon
(c) T-mobile
Figure 18: Minimum latency from each location to a single server in San Diego. Colored regions indicate the measurements
were handled by the same EdgeCO (inferred from IPv6 addresses). T-Mobile does not aggregate traffic to a single EdgeCO.
location. The colored regions containing multiple hexagons indi-
cate those latency samples were taken from the same mobile access
network region according to the IPv6 bit fields for that provider.
AT&T’s regions are much larger than Verizon and T-Mobile,
therefore some geographic areas (e.g., Montana and North Dakota)
incur high latency to San Diego, due to circuitous paths to the Back-
boneCO. Verizon’s network generally had lower latency (Fig. 18b),
because the larger number of EdgeCOs likely provided shorter av-
erage distance to BackboneCOs. As T-Mobile’s distributed topology
relies on several backbone providers (Fig. 18c), they had latency
similar to Verizon. However, we observed unusually high latency
near the border of Florida and Louisiana (Fig. 18c), because during
the experiment the device in these regions attached to a distant
EdgeCO in South Carolina.