I've got a numpy.ndarray of shape (24569,) (also tried with (24569,1)) with
samples of random variables (not the distribution)
`fit_alpha, fit_loc, fit_beta=stats.gamma.fit(data)`
results in fit_alpha and fit_loc being nans, while fit_beta = 1
`I've tried to suggest starting parameters by using
stats.gamma.fit(data,a=k,loc=0,scale=theta)`  
where k = 4/skew^2, theta=variance/mean are the shape and scale parameters
respectively.
But I got the following error:
    /usr/local/lib/python2.7/dist-packages/scipy/stats/_continuous_distns.pyc in fit(self, data, *args, **kwds)
       1916         if floc is None:
       1917             # loc is not fixed.  Use the default fit method.
    -> 1918             return super(gamma_gen, self).fit(data, *args, **kwds)
       1919 
       1920         # Special case: loc is fixed.
    /usr/local/lib/python2.7/dist-packages/scipy/stats/_distn_infrastructure.pyc in fit(self, data, *args, **kwds)
       2126         # by now kwds must be empty, since everybody took what they needed
       2127         if kwds:
    -> 2128             raise TypeError("Unknown arguments: %s." % kwds)
       2129 
       2130         vals = optimizer(func, x0, args=(ravel(data),), disp=0)
    TypeError: Unknown arguments: {'a': 0.14115690248522836}.
after using floc=0 as a parameter (which is not documented anywhere as far as
I can tell) I got an exception pointing out that negative values are not
allowed in data (I got one negative "error" value in the data) - after fixing
this, I got results which made sense...
The documentation on that fit function is lacking - it also does not mention
that the parameters returned are shape, loc, scale, as well as that fa, floc
and fscale are not suggestions of initial fit, but are constraints on the fit
to keep these values fixed. There appears to be no way to suggest initial
parameters.