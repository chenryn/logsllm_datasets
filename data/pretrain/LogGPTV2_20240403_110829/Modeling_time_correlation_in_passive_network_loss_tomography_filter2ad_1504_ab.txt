RelativeBias(1 − ˆp)
.
=
Bias(1 − ˆp)
1 − p
−→ −
p(1 − ρ)
p + (1 − p)ρ
.
(11)
Thus, when p is close to 1, RelativeBias(1 − ˆp) ≈ ρ − 1.
The above theorem states that for a two-leaf tree,
the
estimate under the perfect correlation model results in an
underestimate of the true loss rate, with an approximate
relative bias of ρ − 1 for small loss rates. We immediately
have the following corollary.
Corollary 1: Let f (t) be the density function of the time
difference ∆u between packet pairs. As p is close to 1, the
asymptotic relative bias of the perfect correlation estimate is:
RelativeBias(1 − ˆp) −→ −Zt
(1 − ρa(t))f (t)dt.
(12)
IV. PROFILE LIKELIHOOD BASED INFERENCE
In this section, we propose our loss rate inference approach
that utilizes both single packet and packet pair measure-
ments. Our approach is based on the proﬁle likelihood (PL)
method [18]. We ﬁrst present our methodology for a two-level
tree (see Figure 2), and we later our solution for more complex
networks (see Section V).
A. Single Packet and Packet Pair Measurements
As mentioned before, our criteria for a valid packet pair
are neighboring packets that are (i) destined for different leaf
branches, and (ii) separated by a relatively small time. In
addition, we also consider all observed packets as valid single
packet measurements. Clearly, a packet pair is considered both
a packet pair and two single packet measurements. Both single
packet and packet pair measurements will be used as inputs
to our loss rate inference approach.
B. The Proﬁle Likelihood Method
We consider a two-level
tree with K leaves shown in
Figure 2. Let P1 and P2 represent the sets of single packet
measurements and packet pair measurements, respectively.
Note that measurements in P1 and P2 may be correlated.
However, we shall
ignore these correlations and adopt a
pseudo-likelihood approach [11], [14] by assuming that these
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:45:26 UTC from IEEE Xplore.  Restrictions apply. 
553measurements are independent. The implication of this as-
sumption is that we may have an estimate that has a larger
variance (i.e., not as statistically efﬁcient as if we model
the complete dependency). However, we observe that
this
approach still gives an accurate estimate in general (according
to our evaluations in Sections VI and VII).
We adopt the similar notation as in Section III. Recall that
.
rkl(U , V)
= P (Yu = k, Yv = l) represents the success/failure
probabilities of the packet pair (U , V) (1 implies a success and
0 implies a failure). Based on our correlation function at the
common link (see (2)), we can show that the log-likelihood
of pair measurements in P2 is
L = X(U ,V)∈P2
1Xk,l=0
I(Yu = k, Yv = l) log rkl(U , V),
(13)
where log rkl(U , V) can be expressed in a similar manner as
in (4) by replacing p1 with pu, and p2 with pv. The unknown
parameters in the above are {p, p1, p2, · · · , pK , a}, where a
is the parameter that speciﬁes the decay in time correlation.
In the following, we describe the steps of estimating p, the
packet success rate at the common link.
Step 1: apply end-to-end success rates into the model. For
i = 1, . . . , K, let Pi be the end-to-end success rate to the K
leaf links. We have
Pi = ppi,
(14)
For statistical inference, we ﬁrst re-parameterize the likelihood
in (13) using the new parameter set {p, P1, P2, · · · , PK , a}.
Therefore, we can rewrite rk,l(U , V) for k, l = 0, 1 as
r11(U , V) = PuPvp−1(p + (1 − p)ρa(∆u)),
r10(U , V) = Pu − r11(U , V),
r01(U , V) = Pv − r11(U , V),
r00(U , V) = 1 + r11(U , V) − Pu − Pv.
(15)
Step 2: remove nuisance parameters via the proﬁle likeli-
hood approach. We now propose an approach based on proﬁle
likelihood (PL) [18] for parameter estimation. The core idea of
the PL approach is to replace some of the unknown parameters
by their appropriate estimates (or based on other unknown
parameters), in order to reduce the number of dimensions of
the optimizing problem substantially. It has been shown that
the PL approach works very well in the presence of many
nuisance parameters. Here, we treat the common link success
rate p as the main parameter of interest, and Pi (i = 1, . . . , K)
as the nuisance parameters.
Let Ni be the number of single packet measurements to
leaf link i, and Mi be the number of total successes among
these packets. We now replace Pi in (13) by the maximum
likelihood estimate (MLE) based on end-to-end single packet
measurements, i.e.,
ˆPi = Mi/Ni.
(16)
Thus, we now optimize the following likelihood with respect
to p and a:
1Xk,l=0
(17)
Lprof (p, a) = X(U ,V)∈P2
I(Yu = k, Yv = l) logerkl(U , V),
where erkl(·, ·), k, l = 0, 1 are obtained from (15) with Pi
replaced by its estimate ˆPi. Given the constraints that 0 ≤
rkl(·, ·) ≤ 1, we can derive that the search space for p in
optimizing Lprof (p, a) in (17) is
K
max
i=1
ˆPi ≤ p ≤ 1.
(18)
To derive the conﬁdence intervals for the unknown parameter
p, we can adopt one of the following two methods. The ﬁrst is
to apply the PL method by treating a as the nuisance parameter
[18]. The second is based on a bootstrap method [13]. We do
not address the details here in the interest of space.
We remark here that in passive monitoring the volume of
single packet measurements is much larger than the packet pair
measurements. Hence, for a small two-level tree, we expect to
have a very accurate estimate of P1. However, this no longer
holds when the number of leaves K increases. In Section V,
we shall discuss how we adapt our approach to large K.
Step 3: estimate p when ρa(·) is unknown. In reality, we do
not know the exact form of ρa(·). The approach we take in
this paper is to choose a small value of δ and use statistical
model selection to choose ρa(·) from a set of simple functional
forms. For example, when we consider the linear or quadratic
forms of ρa(·) as in (6), we ﬁrst ﬁnd the optimum value of
(p, a) for each model, and use the estimate from the model
that returns the largest likelihood value.
Since the validity of the correlation function may depend
on the choice of δ, it is important to choose δ appropriately in
estimation. A larger δ allows us to use more packet pairs for
inference, but may introduce a bias given the simple models of
ρa(·). In our network simulation (Section VII), we note that if
δ is in the range of 10 to 100 milliseconds, then our inference
can return quite accurate and consistent results, even though
we use the approximation of the time correlation function in
Equation 6 (Section III).
When we estimate under the linear and quadratic forms of
ρa(·), there is no close-form solution for the optimization of
the PL function Lprof in (17). Fortunately, since it is a two-
dimensional constrained optimization problem, the optimum
value of (p, a) is not difﬁcult to obtain. We conduct con-
strained optimization using the BFGS quasi-Newton method
[8], in which the estimates obtained from the perfect correla-
tion model (i.e., ρ(∆u) = 1) are used as starting values.
C. Comparison with the Earlier Approach
We remark here the difference of our inference approach
from that in [11], both of which use packet pair and single
packet measurements for statistical inference. First, as stated
earlier, [11] uses all packet pairs, while we restrict the packet
pairs to those that are destined for different leaf branches.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:45:26 UTC from IEEE Xplore.  Restrictions apply. 
554As a result, for the simple two-level tree with K leaves, the
model in [11] introduces K additional parameters to represent
the conditional success probabilities of the leaf links. Also,
as addressed in [22], these conditional success probabilities
satisfy the natural constraints that they are larger than the
unconditional success probabilities pi. This and the increased
size of parameter space will signiﬁcantly complicate the loss
rate estimation.
Another difference is that we explicitly model the decay
of success correlation of packet pairs as a function of the
time difference, while in [11], it is treated as a ﬁxed unknown
constant. As shown in Theorem 1, the model in [11] is not
statistically identiﬁable without any additional constraints. In
addition, by modeling the correlation decay, we can obtain bet-
ter parameter accuracies by choosing an appropriate minimum
time difference δ allowable for the analysis.
V. EXTENSIONS OF BASIC METHODOLOGY
In this section, we extend our basic PL-based inference
two-leaf trees for more
approach developed for two-level,
general topologies.
A. Two-level Tree with Many Leaves
Let K be the number of leaves of a two-level tree, and
N be the total number of pair measurements. When K is
large while N is ﬁxed, it is likely that the trafﬁc loads on the
leaf links are uneven, and some leaf links have an insufﬁcient
amount of trafﬁc to accurately estimate the end-to-end success
rate Pi for i = 1, . . . , K (see (16)). As these Pi values are
treated as nuisance parameters in our PL-based inference, the
resulting estimate of p (i.e., the common link success rate) may
have poor accuracy, as will be shown via model simulation in
Section VI. In the following, we propose a statistically efﬁcient
approach to address this issue.
Our goal is to remove the deviations among the nuisance
parameters. We consider a simple heuristic as follows. Instead
of treating the end-to-end success (loss) rates of individual
leaf branches as separate parameters, we shall treat them as
having the same value of P , i.e., Pi = P for i = 1, . . . , K.
Let M be the total number of successful single packets and
N be the total number of single packets. Then the MLE for
P from single packet measurements is ˆP = M/N . Thus, (15)
reduces to
r11(U , V) = P 2p−1(p + (1 − p)ρa(∆u)),
and we can carry out the same optimization procedure to
obtain the estimate p as before. In fact, we can readily show
that if we use the same ˆP as estimates of Pi to optimize
(17) with respect to (p, a), then it is actually equivalent to
optimizing the function on a two-leaf tree in which packet U
and packet V always go to the ﬁrst leaf and the second leaf,
respectively, and both leaf links have the same success rate.
We shall demonstrate in Section VI that when N is reasonably
large, such a procedure for estimating p performs almost as
well as knowing the true values of the end-to-end success rate
Pi when K is large.
Tap traffic and 
infer loss rates
f1
f0
.
.
.
...
...
Fig. 3.
topology.
Inferring the loss rate of the link of interest (bold link) in a general
B. General Topologies
For simplicity and scalability, we adopt
the following
approach to generalize our method for general topologies.
Speciﬁcally, we decompose the problem into many two-level
tree estimation problems to which we can apply our developed
procedure.
topology where we want
Figure 3 depicts a general
to
infer the loss rate of the link of interest. Denote the link of
interest by l and its loss rate by f . Let P ath0(l), P ath1(l),
P ath0(l) ⊂ P ath1(l), denote the parent path and the self path
from the root to the two end nodes of link l. Let f0, f1 be
the loss rates for paths P ath0(l) and P ath1(l), respectively,
and let ˆf0, ˆf1 denote their respective estimates. Note that
(1 − f1) = (1 − f )(1 − f0), therefore f can be estimated
by
ˆf = max(0, ( ˆf1 − ˆf0)/(1 − ˆf0)).
(19)
By treating a path as a composite link and its children as
leaf links, estimates ˆf0, ˆf1 can be derived from the PL-based
inference approach developed for two-level trees.
VI. MODEL SIMULATION
We start with using model simulation to evaluate the effec-
tiveness of our PL-based inference approach under different
forms of time correlation functions that we explicitly specify,
so as to motivate the use of PL-based inference when there are
imperfect time correlations of packet losses. Our evaluation is
built on the statistical tool R [2].
Here, we focus our simulation on two-level
trees. We
generate a set of packet pair samples whose loss behavior
follow the time correlation functions that we specify. We
assume that all packets pairs that we generate are statistically
independent of each other. Making this assumption enables us
to ignore other side impacts and focus only on the imperfect
time correlations that are shown in each individual packet pair.
In Section VII we use network simulation to evaluate more
realistic scenarios where packet pairs are generally dependent,
and the tree topologies that have more than two levels.
In each simulation run, we generate 5000 samples of packet
pairs. For each leaf branch i, we assign a weight 0 < wi < 1
such that the frequency of packet pairs to the two distinct
leaves (i, j) is proportional to wiwj . The leaf loss probabilities
are generated uniformly at random between 1% and 15%, and
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:45:26 UTC from IEEE Xplore.  Restrictions apply. 
555n
o
i
t
l
a
e
r
r
o
C
0
1
.
9
0
.
8
0
.
7
0
.
6
0
.
5
0
.
0.0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
Time Difference
Fig. 4. Loss time correlation functions in model simulation: linear (solid)
and quadratic (dotted).
we vary the common link loss probabilities from 2% to 10%
in increment of 0.5%. To model time correlation, we consider
both the linear and quadratic forms that are deﬁned as follows
(see Figure 4 for illustration):
ρ(∆) = exp(−∆), and ρ(∆) = exp(−1.45∆2).
(20)
We then generate the time difference of each packet pair
uniformly between 0 and 0.7. The range of parameters is
chosen in such a way so that both functions in (20) decay
from 1 to 0.5 when ∆ increases from 0 to 0.7. For each set of
simulation, we carry out 100 simulation runs and obtain the
average results.
Experiment A.1 (PL-based Loss Estimates for Small
Trees). We ﬁrst evaluate the PL-based estimates on small
trees. In this experiment, we aim to show that there is a
signiﬁcant bias in loss estimates when we wrongly assume
a perfect loss correlation model. In addition, we compare the
empirical bias obtained from simulation and the theoretical
bias in Theorem 2 that is developed for two-leaf trees, so as
to demonstrate that the derived theoretical bias formula also
works well empirically for a general two-level tree with more
than two leaves.
Here, we consider a two-leaf tree and a ﬁve-leaf tree. For
the two-leaf tree, we set the weights w1 = w2 = 1, and for
the ﬁve-leaf tree, we use wi = i, i = 1, . . . , 5 such that the
packet pair distribution among leaf pairs are quite skewed.
We use the relative bias and standard deviation to assess the
performance accuracy of our loss estimates on the common
link. Let f be the actual common link loss rate, ˆfr be the
inferred estimate obtained in the rth run, and ˆµ( ˆf ) be the
empirical mean of 100 runs. Then we compute the relative
bias and standard deviation as follows:
(21)
.(22)
RelBias( ˆf ) = f −1(cid:16)ˆµ( ˆf ) − f(cid:17) ,
RelSD( ˆf ) = f −1  1
100
100Xr=1(cid:16) ˆfr − ˆµ( ˆf )(cid:17)2!− 1
2
Figure 5 depicts the average relative bias of the link loss es-
timate versus the actual link loss rate f under two loss models
in (20). We see from the ﬁgure that our PL-based inference
(solid curves) does not have a visible bias. However, if we
ignore the correlation decay and assuming a perfect correlation
model, then we see from the ﬁgure that there is signiﬁcant bias
in loss estimation (dashed curves). Furthermore, the theoretical
2−leaf tree: linear
2−leaf tree: quadratic
2
4
6
8
10
)
%
i
(
s
a
B
e
v
i
t
l
a
e
R
e
g
a
r
e
v
A
5−leaf tree: linear
5−leaf tree: quadratic
0
−10
−20
−30
0
−10
−20
−30
2
4
6
8
10
Common Link Loss Percentage (%)
Fig. 5.
Experiment A.1: Average relative bias of loss estimates for the
common link using PL-based inference for two-leaf and ﬁve-leaf trees:
Estimates under the correct loss correlation model (solid), estimates under
the perfect correlation model (dashed) and their approximate theoretical bias
(dotted).
2−leaf tree: linear
2−leaf tree: quadratic
2
4
6
8
10
)
%
(
n
o
i
t
i
a
v