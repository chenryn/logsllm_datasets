### Experimental Setup and Results

In our initial test, we recorded the command "OK Google, transfer money" ten times, ensuring that each recording matched the tone and pace of the output from our text-to-speech (TTS) module. Our results indicated that 39 out of 40 (97.5%) commands passed our audio similarity filter as valid. Upon further investigation, we found that the one command that did not pass had experienced audio clipping, where the initial part of the "O" in "OK" was not captured by the microphone.

Given the reliability demonstrated in our control test, we expanded the experiment to a real-world office setting with background white noise. We recorded the same commands, this time spoken at a conversational tone and pace. Two microphones were placed three meters apart, each simulating either the user's mobile device or the voice-activated home assistant. We tested two configurations: one where the audio source was equidistant from both microphones, and another where the audio source was closer to one microphone than the other. This setup yielded 80 different samples.

All 80 samples passed the first speech digest comparison and were accurately transcribed by the speech-to-text (STT) module. After converting these transcriptions back into audio using our TTS module and applying the silence removal and resampling techniques described in Section 6.2, 62 out of 80 (77.5%) samples passed the final speech digest comparison. Figure 9 illustrates the bit error rate (BER) for each second of the 80 audio samples.

### Improving Accuracy

Enhancing the precision of the uncertainty cone would reduce false negatives. Better hardware in the home assistant could facilitate this. For instance, our Respeaker 4 Microphone Array is representative of less provisioned home assistants, while the Google Home, which has only two microphones, is more similar to our device. However, higher-end devices like the Amazon Alexa and Apple Homepod, with 7 and 6 microphones respectively, are also available. Additional microphones would allow us to further refine the uncertainty cone, though our results represent the average hardware on the market.

### Application Considerations

#### Sensitive Commands
2MA systems authenticate any command heard by the home assistant before execution. However, not all commands require authentication. Simple queries like "How's the weather today?" or "What time is it?" should be accessible without authentication. More sensitive commands, such as banking transactions, would benefit from the extra security. By implementing an access control scheme or user-defined blacklists and whitelists, 2MA systems can maintain the convenience of voice-operated devices while enhancing security.

#### Smart TV Authentication
Voice commands can remotely control smart TVs, but these commands can also originate from potentially malicious sources. Although our 2MA system focused on home assistants, it can be extended to smart TVs. By replacing the home assistant’s microphones with those in the smart TV, a 2MA system could collocate the user's mobile device with the origin of the voice command, ensuring authenticity.

#### Purchase Authorization
The use of voice interfaces for online shopping is growing, from Amazon and Apple to Google Home’s integration with Walmart. While convenient, the lack of command authorization allows adversaries to make unauthorized purchases. A 2MA system can address this by requiring the user's mobile device to be in the vicinity of the voice interface. If the device is not near the home assistant, the command is treated as malicious and rejected.

### Change of Ownership

IoT devices are increasingly common, such as in hotel rooms, where guests can connect to their personal cloud profiles. One issue is the potential exposure of personal information when ownership changes. For example, if a new guest checks into a room and the previous guest's credentials are not removed, the new guest could have access to the previous user's data. Similarly, in real estate transactions, built-in IoT devices may change ownership, and if the original owner does not remove their credentials, the new tenant could use them. A possible solution is to implement a 2MA system that generates mobile tokens for temporary authentication, preventing sensitive commands after the token expires.

### 2MA Systems with Additional Hardware

Our 2MA system was designed for easy deployment, avoiding additional hardware beyond the user's mobile device and the home assistant. However, many IoT devices (e.g., smart security cameras, baby monitors, and Bluetooth speakers) have microphones that could be used as additional inputs. A 2MA system could leverage these microphones to pinpoint the exact location of a voice command, increasing security by providing a tighter bound on the command's origin.

### Conclusion

Voice commands simplify user interfaces but are vulnerable to unauthorized use. 2MA systems use multiple microphones to localize and authenticate the source of a command, significantly increasing the effort required for successful attacks. The increased deployment of microphones in various settings can enhance authentication, making 2MA a valuable framework for future applications.

### Acknowledgments

This work was supported in part by the National Science Foundation under grant number CNS-1702879. The opinions, findings, and conclusions expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.

### References

[References listed here, formatted as per the original document]

---

This revised version aims to provide a clearer, more professional, and coherent presentation of the experimental setup, results, and considerations for the 2MA system.