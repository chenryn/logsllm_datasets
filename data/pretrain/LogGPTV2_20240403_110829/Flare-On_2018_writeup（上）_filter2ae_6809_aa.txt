# Flare-On 2018 writeup（上）
##### 译文声明
本文是翻译文章
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## Ultimate Minesweeper
donet写的扫雷程序，找到正确的安全位置点击，雷区map的布置藏在下面的代码中
重构输出得到(28, 7)，(7, 20)，(24, 28)三个坐标点，依次点击显示flag
    mine = []
    vtypes = [-896,-639,-270]
    for i in range(30):
        mine.append([])
        for j in range(30):
            flag = True
            r = i + 1
            c = j + 1
            if ~((r * 30) + c) in vtypes:
                flag = False
                print 'x',j,'y',i
## FLEGGO
解压得到48个程序，模式一模一样，可以通过脚本批量取出各个程序的key，输入正确的key后，echo几个字符并得到一张乐高图片
    import os
    from subprocess import *
    output = ''
    pngtxt = ''
    for dirpath,dirnames,filenames in os.walk('FLEGGO'):
        for file in filenames:
            pathname = os.path.join(dirpath,file)
            if pathname[-4:] == '.exe':
                txt = open(pathname,'rb').read()
                head = txt.find('\x42\x00\x52\x00', 6500) + 14
                tail = txt.find('\x00\x00', head)
                pw = txt[head:tail:2]
                output = output + pathname + '\t' + pw + '\n'
                p = Popen(pathname,stdin=PIPE,stdout=PIPE)
                p.stdin.write(pw + '\n')
                p.stdin.flush()
                p.stdout.readline()
                p.stdout.readline() 
                pngtxt = pngtxt + p.stdout.readline() + '\n'
    open('res.txt','w+').write(output)
对图片根据内容进行标号，然后将得到的字符按图片标号顺序连接即flag
    pngdat = []
    for i in range(48):
        pngdat.append(open('png\\%02d.png'%(i+1),'rb').read())
    pngarr = pngtxt.split('\n')
    for p in pngarr:
        pinfo = p.split(' ')
        pngd = open('FLEGGO\\%s'%(pinfo[0]),'rb').read()
        print str(pngdat.index(pngd)) + '\t' + str(pinfo[1])
PI:EMAIL
## binstall
donet程序，会删除浏览器缓存，修改注册表，然后释放browserassist.dll文件
这个dll文件会下载了一段加密的数据，解密后得到一个js文件
通过cp()函数中的判断式推出密码为k9btBW7k2y，根据密码调用js中的de()函数得到flag
    function cp(p) { //get password
        if (model.passwordEntered = !1, 10 === p.length && 123 == (16 ^ p.charCodeAt(0)) && p.charCodeAt(1) > 3 == 14 && p.charCodeAt(4) === parseInt(function() {
            var h = Array.prototype.slice.call(arguments),
            k = h.shift();
            return h.reverse().map(function(m, W) {
                return String.fromCharCode(m - k - 24 - W)
            }).join("")
        } (50, 124) + 4..toString(36).toLowerCase(), 31) && p.charCodeAt(5) - 109 == -22 && 64 == (p.charCodeAt(3) << 4 & 255) && 5 * p.charCodeAt(6) === parseInt(function() {
            var n = Array.prototype.slice.call(arguments),
            M = n.shift();
            return n.reverse().map(function(r, U) {
                return String.fromCharCode(r - M - 16 - U)
            }).join("")
        } (22, 107) + 9..toString(36).toLowerCase(), 19) && p.charCodeAt(7) + 14 === "xyz".charCodeAt(1) && 3 * (6 * (p.charCodeAt(8) - 50) + 14) == 17 + parseInt(function() {
            var l = Array.prototype.slice.call(arguments),
            f = l.shift();
            return l.reverse().map(function(O, o) {
                return String.fromCharCode(O - f - 30 - o)
            }).join("")
        } (14, 93) + 6..toString(36).toLowerCase(), 8) - 1 + 12 && 3 + (p.charCodeAt(9) + 88 - 1) / 2 === p.charCodeAt(0)) model.root = 1,
        model.password = p, console.log(p) ;
        else {
            ……省略一万字
    }
    function de(instr) { //de code flag
        for (var zzzzz, z = model.password,
        zz = atob(instr), zzz = [], zzzz = 0, zzzzzz = "", zzzzzzz = 0; zzzzzzz < parseInt("CG", 20); zzzzzzz++) zzz[zzzzzzz] = zzzzzzz;
        for (zzzzzzz = 0; zzzzzzz < parseInt("8O", 29); zzzzzzz++) zzzz = (zzzz + zzz[zzzzzzz] + z.charCodeAt(zzzzzzz % z.length)) % parseInt("8G", 30),
        zzzzz = zzz[zzzzzzz],
        zzz[zzzzzzz] = zzz[zzzz],
        zzz[zzzz] = zzzzz;
        for (var y = zzzz = zzzzzzz = 0; y < zz.length; y++) zzzz = (zzzz + zzz[zzzzzzz = (zzzzzzz + 1) % parseInt("514", 7)]) % parseInt("213", 11),
        zzzzz = zzz[zzzzzzz],
        zzz[zzzzzzz] = zzz[zzzz],
        zzz[zzzz] = zzzzz,
        zzzzzz += String.fromCharCode(zz.charCodeAt(y) ^ zzz[(zzz[zzzzzzz] + zzz[zzzz]) % parseInt("D9", 19)]);