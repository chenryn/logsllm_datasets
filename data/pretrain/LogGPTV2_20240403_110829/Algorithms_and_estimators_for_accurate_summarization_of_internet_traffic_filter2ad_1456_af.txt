n
u
o
c
0
0.5
0.55
0.6
0.65
0.75
0.8
0.85
0.9
0.7
mu
0
0.5
0.55
0.6
0.65
0.75
0.8
0.85
0.9
0.7
mu
Rate adaptations
number of counts pareto 1.1, top-64
Figure 8: Sweeping μ to evaluate effectiveness decrease. Num-
ber of rate adaptations and number of counts pstart = pbase =
1, k = 400.
sampling performed on all “other” ﬂows (F \ {f}). Therefore,
within the probability subspace where the sampling on all other
ﬂows is ﬁxed, the sampling rate is ﬁxed. The adjusted weight of
each ﬂow is unbiased within each such subspace.
We deploy three different techniques to derive adjusted weights.
These techniques are general tools applicable to other quantities
such as adjusted counts, unbiased FSD estimators, and adjusted se-
lectivities.
• System of equations: The unbiasedness constraints correspond
to linear equations over the variables AL
p(n). For a ﬂow
P
f, the expected adjusted weight over all possible observ-
able counts n (cid:12) f of f must be equal to w(f ): w(f ) =
n(cid:5)f q[n|f ]AL
p(n), where q[n|f ] is the conditional proba-
bility that L obtains a count of n for a ﬂow f. The system
of equations can be used to derive expressions for the ad-
justed weights, be solved numerically to compute adjusted
weights for each instance, or establish properties of the so-
lution such as uniqueness (A unique solution to this system
implies that there is a unique deterministic assignment of ad-
justed weights that is a function of the observed counts of the
ﬂow and the sampling rate).
• Dominance: Algorithm A1 dominates A2 [2] if A1 counts
are “more informative”, that is, each possible set of A1 counts
corresponds to a probability distribution over sets of A2 counts
such that applying A1 and drawing an A2 count from the
corresponding distribution is equivalent to applying A2. For
example, SSH dominates ASH and ASH dominates ANF.
We can derive adjusted weights for A1 from those of A2 by
taking the expectation of A2 adjusted weights over the dis-
tribution that corresponds to the A1 counts.
If there is no
closed form for A1 adjusted weights, we can draw multiple
times from the corresponding distribution and take an aver-
age of the A2 adjusted weights. The resulting per-item ad-
justed weights of A1 are unbiased and have equal or lower
variance than A2 adjusted weights (same arguments as for
mimicked sketches [5]). Dominance implies that if an algo-
rithm has unique deterministic adjusted weights, the per-item
variance of these adjusted weights is at most that of any al-
gorithm that it dominates.
• Per-packet Horvitz-Thompson (HT) analysis. The HT esti-
mator is applicable when both the weight and the sampling
probability of each item are provided. The weight is avail-
able for packets, but in our unaggregated setting, not for
ﬂows, and therefore we compute an adjusted weight for each
packet. The adjusted weight of the ﬂow is then the sum of the
adjusted weights of packets of the ﬂow. The second ingre-
dient needed for HT estimators is the sampling probability,
which can not be determined from the sketch. We apply HT
with sample space partitioning [4] to “bypass” knowledge of
the sampling probability. Per-packet analysis allows us to
derive unbiased estimators for other packet-level properties.
8.1 Adjusted weights for SSH
P
We prove Theorem 5.5 using a per-packet application of the HT
P
Let h be a per-packet weight function and let h(f ) =
estimator.
c∈f h(c)
be the h()-value of f. (h(c) ≡ w(c) = 1 for packet counts but we
can also use other packet-level properties such as the number of
bytes in c.) We compute unbiased adjusted h() values H SSH(c)
for each packet from which we can obtain unbiased adjusted h()
values for each ﬂow using H SSH(f ) =
c∈f H SSH(c). By def-
inition, packets that are not counted have adjusted h()-values zero.
The HT estimator of h(c) is the ratio of h(c) and the probability
that the packet c is counted in the sketch. It is clearly unbiased. This
probability, however, can not be computed from the sketch. We use
a partition of the sample space such that within each subspace in the
partition there is a positive probability that the packet is sampled
and this conditional probability can be determined from the sketch.
The adjusted h() value for each packet is an application of the HT
estimator within this subspace.
We consider the adjusted h() value H SSH(c) of a counted packet
c of a ﬂow f. We partition the sample space such that all rank as-
signment in the same subspace of the partition share the following.
1. The rank values of packets in F \ {f}.
2. The number of packets of f that are counted continuously up
to and not including c (Note that this could be 0).
Note that the subspace that our rank assignment is mapped to also
includes rank assignments where f does not appear in the sketch
at all or that f appears but c is not counted. This happens if the
current sampling rate drops below the current rank of the ﬂow right
before or after c is processed.
We compute the conditional probability that c is counted assum-
ing that the rank assignment belongs to the particular subspace that
it maps to. Since the ranks of packets of ﬂows in F \ {f} are ﬁxed
in this subspace then so are the steps, p, of the kth smallest rank of
a ﬂow in F \{f}. Furthermore, in any rank assignment in the given
partition where packet c is counted, we count the same number of
packets in each step. Let n be the vectors of counts we obtain for
f in any rank assignment where c is counted. (In rank assignments
in the same subspace where c is not counted this vector could be
different.)
H SSH(c) is computed according to one of the following cases.
1. Packet c is one of the ni packets counted in step i for some
In this case the conditional probability that c is
i > 1.
counted is
1 −Pi
q[n|n]
h=1 ch,h
.
(6)
Pi
To see this, ﬁx the ranks of packets of F \ {f}. Then (1 −
h=1 ch,h) is the probability that we count all n1 +··· + ni
up to and including the packets of step i. q[n|n] is the prob-
ability that we count all n packets. Therefore, Eq. (6) is
the conditional probability that we count n given that we
It follows that H SSH(c) =
counted all packets up to c.
h(c)
1−Pi
.
h=1 ch,h
q[n|n]
2. Suppose c is the ﬁrst packet among the n1 packets of step 1.
In this case, the conditional probability that c is counted is
q[n|n], and H SSH(c) = h(c)/q[n|n].
3. Suppose that c is a packet of step 1 other than the ﬁrst. Fix-
ing the ranks of packets of ﬂows in F \ {f} we count the
packets of step 1 with probability p1: That is the probability
that the ﬁrst packet in step 1 is counted. So the conditional
probability that c is counted is q[n|n]/p1 and H SSH(c) =
h(c)p1/q[n|n].
Let Ni be the set of packets counted in step i, and let c0 be the
ﬁrst counted packet.
HSSH (f ) =
HSSH (f ) =
X
c∈f
HSSH (c) =
X
X
c∈Ni
j≥1
i=2 h(Ni)(1 − Pi
Pr
h=1 ch,h)
h(c0) + (h(N1) − h(c0))(1 − c1,1) +
q[n|n)
Pr
i=1 h(Ni)(1 − Pi
h(c0)c1,1 +
q[n|n)
h=1 ch,h)
.
=
(7)
To facilitate this estimator, the algorithm needs to collect per-
step sums h(Ni) over counted packets in the step and to separately
record h(c0).
8.2 Variance relation
We denote by AL(f ), where L ∈ {ASH,ANF,SSH,NF,SH,SNF},
the random variable that is the adjusted weight assigned to the ﬂow
f by the algorithm L.
An important property of L ∈ {ASH,ANF,SSH,NF,SH} (estab-
lished in [2]) is zero covariances: For two ﬂows f1 (cid:13)= f2, we have
COV(AL(f1), AL(f2)) = 0. The proof is based on conditioning
on the rank values of packets belonging to ﬂows in F \ {f1, f2},
and the methodology carries over to establish this property for SNF
and for the discretized versions. This property implies that for any
J ⊂ F VAR(AL(J)) =
P
f∈J VAR(AL(f )).
Therefore, to show that an adjusted weight assignment has lower
variance than another on all subpopulations, it sufﬁces to show
lower variance on each individual ﬂow.
VAR(AWS (f )) ≤ VAR(ASSH (f )) ≤ VAR(AASH (f )) ≤ VAR(AANF (f ))
Consider a ﬂow f with |f| packets and the probability subspace
where ranks of packets belonging to all other ﬂows (F \ {f}) are
ﬁxed. It is sufﬁcient to establish the relation between the methods
in this subspace. Consider such a subspace. Let p be the steps of
the effective sampling rate and pr be the ﬁnal effective sampling
rate. The adjusted weight assignment for all methods has expec-
tation |f| within each such subspace. We consider the variance
of the different methods within such subspace. and use the nota-
tion VAR(AL(f )|p) for L ∈ {SSH,SNF}, and VAR(AL(f )|pr)
for L ∈ {WS,ANF,ASH}. This conditioning is equivalent to es-
tablishing the variance relation when the sampling rate pr is ﬁxed
or when the steps p are ﬁxed (and the last step is pr).
It is the
key for extending the proofs to the discretized version, since we
simply condition on a different step function p determined by the
discretized (k + 1)th largest rank. It also shows that the variance
relation holds for the ﬁxed-rate and ﬁxed-steps variants of WS NF
and SH.
For SNF, similarly to SSH, the variance VAR(ASNF(f )|p) de-
pends on the way the packets of the ﬂow f are distributed across
these steps. The variance is lowest when all packets occur when
the sampling probability is highest, and the variance is highest, and
equal to that of ANF, when all packets occur on the step with the
lowest sampling probability. The variance relation is established
using the following Lemma.
LEMMA 8.1.
[2] Let A1 be an estimator and consider a par-
tition of the sample space. Consider the estimator A(cid:2)
1 that has a
value that is equal to the expectation of A1 on the respective part of
the partition. Then E(A1) = E(A(cid:2)
1) and VAR(A1) ≥ VAR(A(cid:2)
1).
LEMMA 8.2. VAR(ASSH(f )|p) ≤ VAR(ASNF(f )|p)
PROOF. Consider a ﬂow f and a probability space Ω(p) con-
taining all rank assignments such that the steps (as deﬁned by the
kth smallest rank in F \ f) are p. Consider a partition of Ω to
(p)
n according to the SSH count vector n obtained for
subspaces Ω
f.
Consider one such subspace Ω
(p)
n . By deﬁnition, the adjusted
weight assigned to the ﬂow f in this subspace is ﬁxed and is equal
to ASSH
p
We deﬁne another SSH adjusted weight assignment, A(cid:2)SSH
(n).
p
as the expectation of the estimator ASNF
(p)
n .
Ω
For any rank assignment, a packet is counted by SNF only if it
is counted by SSH. The ﬁrst counted packet by SSH, must also be
(p)
counted by SNF. Therefore, s is a possible SNF count of f in Ω
n
if and only if it has the form s ≤ n (component wise) and s1 > 0
(we assume WLOG that n1 > 0). For notation convenience, we
= (1, s1 −
= (1, n1 − 1, n2, . . . , nr), s
(cid:2)
(cid:2)
deﬁne the vectors n
(cid:2)
1, s2, . . . , sr) and p
= (p1, p1, p2, . . . , pr). (That is, we create a
“dummy” step with probability p1, that precedes the ﬁrst step and
contains the ﬁrst packet of n.) This notation allows us to specify
that the ﬁrst “packet” of n is counted.
(n)
over rank assignments in
p
The probability over Ω
(p)
n of a rank assignment with correspond-
ing SNF count s is equal to
qSNF
p(cid:2)
(cid:2)
]/qSSH
p
[n|n] .
Therefore,
A(cid:2)SSH
p
(n) =
(cid:2)|n
[s
X
s≤n|s1>0
(cid:2)|n
(cid:2)
qSNF
[s
p(cid:2)
]
qSSHp[n|n]
ASNF
p
(s) .
(8)
p
p
p
It follows from Equation (8) that A(cid:2)SSH
tion of p and n.5 Using corollary 8.1, the estimator A(cid:2)SSH
is un-
biased and has variance that is at most that of ASNF
over Ωp (and
therefore, over any probability space that consists of subspaces of
the form of Ωp.)
(n) is a deterministic func-
In Sections 5.1 and 8.1 we show that ASSH
(n) is the unique so-
lution of a system of equations. Therefore, it is the only possible
assignment of adjusted weights that are a deterministic function of
p and n and are unbiased (has expectation |f|) for any possible f
and a corresponding probability space Ω(p). Since the estimator
A(cid:2)SSH
(n) is also a deterministic function of n and p and is unbi-
ased on Ω(p) it follows that ASSH
≡ A(cid:2)SSH
p
p
.
p
p
8.3 Adjusted weights for SNF
We provide the proof of Theorem 5.7 (derivation of adjusted
weights for SNF). This proof also establishes the variance relation
VAR(ASNF(f|p)) ≤ VAR(ANF(f|pr)).
PROOF. We ﬁx the ranks of the packets of ﬂows in F \ f. The
the steps p of the kth smallest rank of a ﬂow in F \ f are then
ﬁxed. Let n be the number of packets of f in each of these steps.
(We assume without loss of generality that n1 > 0.) We consider
the subspace V of rank assignments where f is fully counted. Let
ASNF(n) be the adjusted weight that f obtains at any point of this
subspace. We show that ASNF(n) is the average of the adjusted
weight of NF in V . Note that the fraction of V is qSNF[n|n].
Consider ﬁrst points in V where the ﬁrst packet that has rank at
1
Qr
h=2 pnh
most pr is a packet t of step 1.
The probability that SNF counted all packets and packet t +
1 was the ﬁrst packet to obtain rank value at most pr is (p1 −
pr)tprpn1−t−1
h . Conditioned on this, the adjusted weight
assigned by NF is the number of counted packets divided by pr.