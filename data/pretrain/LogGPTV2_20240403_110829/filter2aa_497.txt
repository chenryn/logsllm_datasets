@Y4tacker
两个好玩的问题
1.为什么往
/WEB-INF/tomcat-web.xml/
/WEB-INF/tomcat-web.xml/
⽂件夹下写东西可以触发重加载
问题来源
问题的⼀切来源于⼀句话：
Trigger a reload of the web app by writing any file to /WEB-INF/tomcat-web.xml/  ，⽂件夹
什么⿁！
当然多提⼀嘴不是每个版本这个tomcat-web.xml都⽣效的具体看配置，详细的往下看
解决
⾸先既然能够在tomcat运⾏后继续加载新的jar到jvm，如果是你会怎么实现呢，答案很显然，
多线程，定时让⼀个⼦进程去监控⽂件的变化，tomcat也是如此，具体的就不多说了，也不是
本篇的重点，这⾥只是简单提⼀嘴
关于本篇要探索的问题，我本来也确实不清楚，但是昨天看到⼀句话
嗯？看到这个我愣了⼀下，因为在我第⼀认知⾥⾯都是⽹上说的web.xml，这个加了个前缀
tomcat又是什么，并且为什么创建⽬录也能被识别到内容变化呢(今天⼀位师傅与我讨论)
⾸先谈谈我的第⼀想法，我⼀开始猜测是扫描到这个 /WEB-INF/tomcat-web.xml/ ,发现是
⽬录，是不是就去通过遍历⽬录下的⽂件内容看是否有变化呢
但是答案是No，我跟了下源码，这⾥我们节约时间从关键的说
起 org.apache.catalina.startup.HostConfig#checkResources ,
我们来看看checkResources是⼲嘛的，会去检查哪些资源这⾥也很清楚了
我们这⾥研究的是 /WEB-INF/tomcat-web.xml/ ，继续往下看
往下看，关注下
光看lastModified我就⼤概猜到了是靠什么机制了，没错时间戳！当前⽂件夹下的⽂件变动了
⾃然也会影响⽂件夹的时间戳变化，不过都来了当然还是进去看看嘛
Trigger a reload of the web app by writing any file to `/WEB-INF/tomcat-
web.xml/` 
long lastModified = app.reloadResources.get(s).longValue();
确实如此，后⾯通过reload也就重新将 /WEB-INF/lib 下的jar加载进去了，昨天提过这⾥不再
多讲
好了到了这⾥又是⼀个问题，刚才我们的资源路径是怎么取得的？
app.reloadResources 这值是怎么来的呢，其实是在tomca⾸次运⾏时就设置了，
在 org.apache.catalina.core.StandardContext#addWatchedResource 中便引⼊了，
那值是哪来的，在 项⽬路径/conf/context.xml
哦⼀切也就解决了，通过配置WatchedResource来监视，这也是默认名称
2.Tomcat下/META-INF/lib中被加载的jar，如果在其/META-
INF/resources/下直接写jsp可以直接访问执⾏
WEB-INF/web.xml
WEB-INF/tomcat-web.xml
${catalina.base}/conf/web.xml
问题来源
很骚的东西，第⼀次看到，马上吃饭了，简单看了下
⾸先⼤概说⼀下浏览器敲下 htttp://xxx/xx.jsp时候 ，它会检查jsp⽂件是否存在来避免创
建垃圾⽂件夹和⽂件，也就是在
org.apache.jasper.servlet.JspServlet#serviceJspFile 下的
往⾥⼀直跟，最终⼀个关键的点
在 org.apache.catalina.webresources.CachedResource#validateResource 下
这个JarResource⾥⾯有映射关系，我们简简单单看看webResource咋来的
if (null == context.getResource(jspUri)) {
这⾥只是初始化其他地⽅也没有
后⾯找了下
在 org.apache.jasper.servlet.JspCServletContext#scanForResourceJARs 找到了
答案
拿下！！！