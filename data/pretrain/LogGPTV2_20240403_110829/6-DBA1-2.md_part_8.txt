mysql\> select \* from gzt;
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| gzt_id \| pay \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| 1 \| 20000.00 \|
\| 2 \| 30000.00 \|
\| 3 \| 40000.00 \|
\| 4 \| 50000.00 \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
4 rows in set (0.00 sec)
同步更新:修改了ygt表中ygt_id=2的ygt_id值为8,gzt中的gzt_id=2的也变成了8
mysql\> select \* from gzt;
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| gzt_id \| pay \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| 1 \| 20000.00 \|
\| 2 \| 30000.00 \|
\| 3 \| 40000.00 \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
3 rows in set (0.00 sec)
mysql\> update ygt set ygt_id=8 where ygt_id=3;
Query OK, 1 row affected (0.04 sec)
Rows matched: 1 Changed: 1 Warnings: 0
mysql\> select \* from gzt;
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| gzt_id \| pay \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| 1 \| 20000.00 \|
\| 2 \| 30000.00 \|
\| 8 \| 40000.00 \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
3 rows in set (0.00 sec)
同步删除:删除了ygt表中的ygt_id=4的数据,gzt中的gzt_id数据也没有了
mysql\> delete from ygt where ygt_id=4;
Query OK, 1 row affected (0.04 sec)
mysql\> select \* from gzt;
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| gzt_id \| pay \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
\| 1 \| 20000.00 \|
\| 2 \| 30000.00 \|
\| 3 \| 40000.00 \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\--+
3 rows in set (0.00 sec)
#### 删除外键
Alter table 表名 drop foreign key 约束名(外键名)
先查询出表创建过程
mysql\> show create table gzt;
\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Table \| Create Table
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
\| gzt \| CREATE TABLE \`gzt\` (
\`gzt_id\` int(11) NOT NULL,
\`pay\` float(7,2) DEFAULT NULL,
PRIMARY KEY (\`gzt_id\`),
CONSTRAINT \`gzt_ibfk_1\` FOREIGN KEY (\`gzt_id\`) REFERENCES \`ygt\`
(\`ygt_id\`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
1 row in set (0.00 sec)
再执行删除
mysql\> alter table gzt drop foreign key gzt_ibfk_1; #查询出来粘贴删除
Query OK, 0 rows affected (0.08 sec)
Records: 0 Duplicates: 0 Warnings: 0
再查看
mysql\> show create table gzt;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
\| Table \| Create Table
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
\| gzt \| CREATE TABLE \`gzt\` (
\`gzt_id\` int(11) NOT NULL,
\`pay\` float(7,2) DEFAULT NULL,
PRIMARY KEY (\`gzt_id\`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--
1 row in set (0.00 sec)
#### 已有表中添加外键
要保证外键字段的数据值与参考表中参考字段的值相匹配
mysql\> alter table gzt add foreign key(gzt_id) references ygt(ygt_id)
on update cascade on delete cascade;
#### 注意事项
当表中有外键时:被参考的表和被参考的字段都不能删除
被参考的表的所有记录被删除,外键表的所有记录也将被删除
## 案例
1.  修改表结构
2.  MySQL索引创建与删除
## 1 修改表结构
1.1 问题
本案例要求熟悉MySQL库中表的字段修改，主要练习以下操作：
添加字段
修改字段名
修改字段类型
删除字段
1.2 步骤
实现此案例需要按照如下步骤进行。
## 步骤一：添加字段
在studb中创建tea6表
mysql\> CREATE TABLE studb.tea6(id int(4) PRIMARY KEY,
-\> name varchar(4) NOT NULL,
-\> age int(2) NOT NULL
-\> );
Query OK, 0 rows affected (0.34 sec)
为tea6表添加一个address字段
添加前：
mysql\> DESC tea6;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| id \| int(4) \| NO \| PRI \| NULL \| \|
\| name \| varchar(4) \| NO \| \| NULL \| \|
\| age \| int(2) \| NO \| \| NULL \| \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
3 rows in set (0.00 sec)
添加address字段：
mysql\> ALTER TABLE tea6 ADD address varchar(48);
Query OK, 0 rows affected (0.84 sec)
Records: 0 Duplicates: 0 Warnings: 0
添加后（默认作为最后一个字段）：
mysql\> DESC tea6;
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| id \| int(4) \| NO \| PRI \| NULL \| \|
\| name \| varchar(4) \| NO \| \| NULL \| \|
\| age \| int(2) \| NO \| \| NULL \| \|
\| address \| varchar(48) \| YES \| \| NULL \| \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
4 rows in set (0.00 sec)
3）在tea6表的age列之后添加一个gender字段
添加操作：
mysql\> ALTER TABLE tea6 ADD gender enum(\'boy\',\'girl\') AFTER age;
Query OK, 0 rows affected (0.59 sec)
Records: 0 Duplicates: 0 Warnings: 0
确认添加结果：
mysql\> DESC tea6;
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| id \| int(4) \| NO \| PRI \| NULL \| \|
\| name \| varchar(4) \| NO \| \| NULL \| \|
\| age \| int(2) \| NO \| \| NULL \| \|
\| gender \| enum(\'boy\',\'girl\') \| YES \| \| NULL \| \|
\| address \| varchar(48) \| YES \| \| NULL \| \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
5 rows in set (0.00 sec)
## 步骤二：修改字段名和字段类型
将tea6表的gender字段改名为sex，并添加非空约束
修改操作：
mysql\> ALTER TABLE tea6 CHANGE gender
-\> sex enum(\'boy\',\'girl\') NOT NULL;
Query OK, 0 rows affected (0.08 sec)
Records: 0 Duplicates: 0 Warnings: 0
确认修改结果：
mysql\> DESC tea6;
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| id \| int(4) \| NO \| PRI \| NULL \| \|
\| name \| varchar(4) \| NO \| \| NULL \| \|
\| age \| int(2) \| NO \| \| NULL \| \|
\| sex \| enum(\'boy\',\'girl\') \| NO \| \| NULL \| \|
\| address \| varchar(48) \| YES \| \| NULL \| \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
5 rows in set (0.00 sec)
## 步骤三：删除字段
删除tea6表中名为sex的字段：
mysql\> ALTER TABLE tea6 DROP sex; //删除操作
Query OK, 0 rows affected (0.52 sec)
Records: 0 Duplicates: 0 Warnings: 0
mysql\> DESC tea6; //确认删除结果
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| id \| int(4) \| NO \| PRI \| NULL \| \|
\| name \| varchar(4) \| NO \| \| NULL \| \|
\| age \| int(2) \| NO \| \| NULL \| \|
\| address \| varchar(48) \| YES \| \| NULL \| \|
+\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
4 rows in set (0.00 sec)
## 2 MySQL索引创建与删除
2.1 问题
本案例要求熟悉MySQL索引的类型及操作方法，主要练习以下任务：
普通索引、唯一索引、主键索引的创建/删除
自增主键索引的创建/删除
建立员工表yg、工资表gz，数据内容如表-1、表-2所示，设置外键实现同步更新与同步删除
表-1 员工表yg的数据
表-2 工资表gz的数据
2.2 步骤
实现此案例需要按照如下步骤进行。
### 步骤一：索引的创建与删除
创建表的时候指定INDEX索引字段
创建库home：
mysql\> create database home;
Query OK, 1 row affected (0.00 sec)
允许有多个INDEX索引字段。比如，以下操作在home库中创建了tea4表，将其中的id、name作为索引字段：
mysql\> USE home;
Database changed
mysql\> CREATE TABLE tea4(
-\> id char(6) NOT NULL,
-\> name varchar(6) NOT NULL,
-\> age int(3) NOT NULL,
-\> gender ENUM(\'boy\',\'girl\') DEFAULT \'boy\',
-\> INDEX(id),INDEX(name)
-\> );
Query OK, 0 rows affected (0.59 sec)
查看新建tea4表的字段结构，可以发现两个非空索引字段的KEY标志为MUL：
mysql\> DESC tea4;
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| id \| char(6) \| NO \| MUL \| NULL \| \|
\| name \| varchar(6) \| NO \| MUL \| NULL \| \|
\| age \| int(3) \| NO \| \| NULL \| \|
\| gender \| enum(\'boy\',\'girl\') \| YES \| \| boy \| \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
4 rows in set (0.00 sec)
2）删除现有表的某个INDEX索引字段
比如，删除tea4表中名称为named的INDEX索引字段：
mysql\> drop INDEX name ON tea4; //删除name字段的索引
Query OK, 0 rows affected (0.18 sec)
Records: 0 Duplicates: 0 Warnings: 0
mysql\> DESC tea4; //确认删除结果
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| id \| char(6) \| NO \| MUL \| NULL \| \|
\| name \| varchar(6) \| NO \| \| NULL \| \|
\| age \| int(3) \| NO \| \| NULL \| \|
\| gender \| enum(\'boy\',\'girl\') \| YES \| \| boy \| \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
4 rows in set (0.00 sec)
3）在已有的某个表中设置INDEX索引字段
比如，针对tea4表的age字段建立索引，名称为 nianling：
mysql\> CREATE INDEX nianling ON tea4(age); //针对指定字段创建索引
Query OK, 0 rows affected (0.62 sec)
Records: 0 Duplicates: 0 Warnings: 0
mysql\> DESC tea4; //确认创建结果
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Field \| Type \| Null \| Key \| Default \| Extra \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| id \| char(6) \| NO \| MUL \| NULL \| \|
\| name \| varchar(6) \| NO \| \| NULL \| \|
\| age \| int(3) \| NO \| MUL \| NULL \| \|
\| gender \| enum(\'boy\',\'girl\') \| YES \| \| boy \| \|
+\-\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\--+\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
4 rows in set (0.00 sec)
4）查看指定表的索引信息
使用SHOW INDEX 指令：