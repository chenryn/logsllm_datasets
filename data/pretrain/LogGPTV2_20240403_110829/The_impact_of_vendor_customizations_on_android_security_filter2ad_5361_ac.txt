### Permission Usage and Overprivilege Analysis

By gaining many, possibly unnecessary, permissions, apps can pose a significant security risk. When we examine the origin of each app, a different picture emerges. As shown in Table 3, the modest improvements over time are primarily due to a reduction in overprivileged apps among AOSP (Android Open Source Project) apps. Vendors, on the other hand, appear to be responsible for a similar proportion of overprivileged apps across both pre-2012 and post-2012 images (51.29% vs. 52.71%, respectively). This suggests that vendors do not significantly prioritize the principle of least privilege more than third-party developers, despite being larger corporate entities.

In Figure 2, we summarize the distribution of overprivileged apps in pre-2012 and post-2012 devices. The majority of these apps have no more than 10 overdeclared permissions. It is important to note that pre-loaded apps often have access to certain permissions that are not available to third-party apps. If exploited, these overdeclared permissions can lead to significant damage. For example, our results show that permissions such as REBOOT and MASTER_CLEAR, which allow for changing device status or destroying user data without notification, are among the overdeclared permissions.

### Vulnerability Analysis

Our vulnerability analysis revealed several interesting findings, especially when combined with our efforts to determine the provenance of each app. As shown in Table 4, the percentage of vulnerable apps across different phone images varies from 1.79% to 14.97%. Applying a horizontal analysis to each generation of devices, it appears that the HTC Wildfire S and LG Optimus P880 have the most vulnerable apps. Conversely, the Sony Xperia Arc S and, surprisingly, the HTC One X have the fewest vulnerable apps. Google’s reference phones, particularly the Nexus 4, perform well compared to their contemporaries, as their images are designed to be a reference baseline.

Our vertical analysis shows an even more impressive result: the percentage of vulnerable apps dropped from an average of 8.99% in the previous generation to 4.56% in the current generation. This improvement is consistent across all three categories of apps (AOSP, vendor, and third-party).

However, the percentage of vulnerable apps is not necessarily a reliable metric for measuring the security of these devices. Our complexity metrics (Table 1) indicate that newer devices contain increasingly more code. While the percentage of vulnerabilities may be lower, the sheer scale of the codebase can counteract any gains. Additionally, some vulnerable apps may contain more critical vulnerabilities than others. Therefore, it is valuable to count the absolute number of critical vulnerabilities as well as the proportion of vulnerable apps.

To this end, we summarize our results in Table 5. When we use this table for vertical differential analysis, a different story emerges. While the number of vulnerabilities generally decreased in each generation, the reduction is not as dramatic as the percentage figures suggest. In a horizontal differential analysis, different devices emerge as the most and least secure in each generation. The HTC Wildfire S remains the least secure pre-2012 device, but only slightly, with the Samsung Galaxy S2 having just one fewer vulnerability. The Sony Xperia Arc S and Google Nexus S are tied for the most secure pre-2012 devices. Among post-2012 devices, there is a complete reshuffling: the Samsung Galaxy S3 has 40 vulnerabilities compared to the LG Optimus P880’s 26, while the HTC One X (with 15 vulnerabilities) falls to mid-pack, behind the Nexus 4 (with 3) and the Sony Xperia SL (with 8).

Table 5 does not tell the whole story. According to the provenance analysis, most vulnerabilities stem from the AOSP. However, our provenance analysis focuses on the original source of each app, not each vulnerability. To gather information about the provenance of each vulnerability, we manually examined each reported vulnerable path. As shown in Figure 3 (excluding Google's phones due to the AOSP's leadership by Google), for Samsung, HTC, and LG phones, the majority of vulnerabilities (between 64.71% and 85.00%) did not originate from the AOSP. For Sony’s products, the situation is different.