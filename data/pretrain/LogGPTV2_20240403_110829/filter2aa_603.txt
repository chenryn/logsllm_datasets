# OpenJDK 8 编译与 CLion 调试指南

## 环境
- 操作系统: macOS Catalina 10.15.7
- 基础 Java 版本: 1.8.91

## 准备工作
在开始之前，请确保你已经安装了以下工具和依赖项：

1. 安装 Mercurial：
   ```bash
   brew install mercurial
   ```

2. 安装 Autoconf：
   ```bash
   brew install autoconf
   ```

3. 安装 FreeType：
   ```bash
   brew install freetype
   ```

4. 安装 ccache（可选，但推荐）：
   ```bash
   brew install ccache
   ```

5. 安装 Xcode Command Line Tools：
   ```bash
   xcode-select --install
   ```

6. 验证 GCC 和 Clang 的版本：
   ```bash
   gcc -v
   clang++ -v
   clang -v
   ```

   输出示例：
   ```plaintext
   Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
   Apple clang version 12.0.0 (clang-1200.0.32.29)
   Target: x86_64-apple-darwin19.6.0
   Thread model: posix
   InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
   ```

## 下载并配置 OpenJDK 8 源代码
1. 克隆 OpenJDK 8 源代码仓库：
   ```bash
   hg clone http://hg.openjdk.java.net/jdk8u/jdk8u jdk8u
   ```

2. 进入源代码目录并运行脚本以获取所有必需的文件：
   ```bash
   cd jdk8u
   chmod 777 get_source.sh
   ./get_source.sh
   ```

3. 配置编译环境：
   ```bash
   chmod 777 configure
   ./configure --with-debug-level=slowdebug
   ```

4. 编译 OpenJDK 8：
   ```bash
   sudo make LOG=trace all
   ```
   根据你的硬件配置，编译时间可能会有所不同。例如，如果你的笔记本电脑有 8 核 16 线程，可能需要大约 10 分钟。

   如果遇到问题，请检查错误日志并尝试解决。

## 在 CLion 中调试 HotSpot
1. 创建一个新的 CMake 项目，并在 `CMakeLists.txt` 文件中添加以下内容：
   ```cmake
   cmake_minimum_required(VERSION 3.14)

   project(hotspot)

   file(GLOB_RECURSE SOURCE_FILES "*.cpp" "*.hpp" "*.c" "*.h")

   include_directories(hotspot/src/share/vm)
   include_directories(hotspot/src/cpu/x86/vm)
   include_directories(hotspot/src/share/vm/precompiled)
   include_directories(hotspot/src/share/vm/utilities)

   add_executable(hotspot ${SOURCE_FILES})
   ```

2. 使用 LLDB 进行调试。确保在 `/etc/hosts` 文件中添加以下条目：
   ```plaintext
   127.0.0.1 localhost
   ```

3. 在 CLion 中配置调试器并启动调试会话。

祝你调试愉快！