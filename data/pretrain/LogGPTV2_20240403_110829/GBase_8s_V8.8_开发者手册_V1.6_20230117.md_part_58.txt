分类器
Kmeans max_iterations=10 [1,10000] 最 大 迭
代次数
num_centroids=10 [1,1000000] 簇 的 数
目
tolerance=0.00001 (0,1] 中 心 点
误差
batch_size=10 [1,1048575] 一 次 训
练 所 选
取 的 样
本数
num_features=2 [1,INT_MAX_VALUE] 输 入 样
本 特 征
数
distance_function = L1\L2\L2_Squared\Linf 正 则 化
“L2_Squared” 方法
seeding_function = “Random++”\“KMeans||” 初 始 化
“Random++” 种 子 点
方法
verbose=0U {0,1,2} 冗 长 模
式
seed=0U [0,INT_MAX_VALUE] 种子
xgboost: n_iter=10 (0,10000] 迭 代 次
数
xgboost_regression_logist
ic、
batch_size=10000 (0,1048575] 一 次 训
xgboost_binary_logistic、 练 所 选
取 的 样
南大通用数据技术股份有限公司
400
GBase 8s V8.8开发者手册
xgboost_regression_gam 本数
ma 、
booster=“gbtree” gbtree\gblinear\dart booster
xgboost_regression_squar
种类
ederror
tree_method=“auto” auto\exact\approx\hist\gpu_hi 树 构 建
st 算法
注意：gpu_hist参数需要相应
的库GPU版本，否则DB4AI
平台不支持该值。
eval_metric=“rmse” rmse\rmsle\map\mae\auc\auc 验 证 数
pr 据 的 评
估指标
seed=0 [0,100] 种子
nthread=1 (0, 并发量
MAX_MEMORY_LIMIT]
max_depth=5 (0, 树 的 最
MAX_MEMORY_LIMIT] 大深度，
该 超 参
仅 对 树
型
booster
生效。
gamma=0.0 [0,1] 叶 节 点
上 进 行
进 一 步
分 区 所
需 的 最
小 损 失
减少
eta=0.3 [0,1] 更 新 中
使 用 的
步 长 收
缩，以防
止 过 拟
合
南大通用数据技术股份有限公司
401
GBase 8s V8.8开发者手册
min_child_weight=1 [0,INT_MAX_VALUE] 孩 子 节
点 中 所
需 的 实
例 权 重
的 最 小
总和
verbosity=1 0 (silent)\1 (warning)\2 打 印 信
(info)\3(debug) 息 的 详
细程度
MAX_MEMORY_LIMIT= 最大内存加载的元组数量
GS_MAX_COLS= 数据库单表最大属性数量
 模型保存成功，则返回创建成功信息：
MODELCREATED.PROCESSEDx
(3) 查看模型信息。
当 训 练 完 成 后 模 型 会 被 存 储 到 系 统 表 gs_model_warehouse 中 。 系 统 表
gs_model_warehouse可以查看到关于模型本身和训练过程的相关信息。
关于模型的详细描述信息以二进制的形式存储在系统表中，用户可用过使用函数
gs_explain_model完成对模型的查看，语句如下：
gsql=#select*fromgs_explain_model("iris_classification_model");
DB4AIMODEL
-------------------------------------------------------------
Name:iris_classification_model
Algorithm:xgboost_regression_logistic
Query:CREATEMODELiris_classification_model
USINGxgboost_regression_logistic
FEATURESsepal_length,sepal_width,petal_length,petal_width
TARGETtarget_type50FROMpatientsWITH
batch_size=10,learning_rate=0.05;
QUERYPLAN
-------------------------------------------------------------------------
TrainModel-logistic_regression (cost=0.00..0.00rows=0width=0)
-> Materialize (cost=0.00..41.08rows=1776width=12)
-> SeqScanonpatients (cost=0.00..32.20rows=1776width=12)
(3rows)
(6) 异常场景。
 训练阶段。
 场景一：当超参数的设置超出取值范围，模型训练失败，返回ERROR，
并提示错误，例如：
gsql=#CREATEMODELpatient_linear_regressionUSINGlinear_regressionFEATURES
second_attack,treatmentTARGETtrait_anxiety FROMpatientsWITHoptimizer='aa';
ERROR: Invalidhyperparametervalueforoptimizer.Validvaluesare:gd,ngd.
 场景二：当模型名称已存在，模型保存失败，返回ERROR，并提示错误
南大通用数据技术股份有限公司
404
GBase 8s V8.8开发者手册
原因，例如：
gsql=#CREATEMODELpatient_linear_regressionUSINGlinear_regressionFEATURES
second_attack,treatmentTARGETtrait_anxiety FROMpatients;
ERROR: Themodelname"patient_linear_regression"alreadyexistsings_model_warehouse.
 场景三：FEATURE或者TARGETS列是*，返回ERROR，并提示错误原
因，例如：
gsql=#CREATEMODELpatient_linear_regressionUSINGlinear_regressionFEATURES*
TARGETtrait_anxiety FROMpatients;
ERROR: FEATURESclausecannotbe*
-------------------------------------------------------------------------------------------------------------------
----
gsql=#CREATEMODELpatient_linear_regressionUSINGlinear_regressionFEATURES
second_attack,treatmentTARGET* FROMpatients;
ERROR: TARGETclausecannotbe*
 场景四：对于无监督学习方法使用TARGET关键字，或者在监督学习方
法中不适用TARGET关键字，均会返回ERROR，并提示错误原因，例如：
gsql=#CREATEMODELpatient_linear_regressionUSINGlinear_regressionFEATURES
second_attack,treatmentFROMpatients;
ERROR: SupervisedMLalgorithmsrequireTARGETclause
-------------------------------------------------------------------------------------------------------------------
----------
CREATEMODELpatient_linear_regressionUSINGlinear_regressionTARGETtrait_anxiety
FROMpatients;
ERROR: SupervisedMLalgorithmsrequireFEATURESclause
 场景五：当进行分类任务时 TARGET 列的分类只有 1 种情况，会返回
ERROR，并提示错误原因，例如：
gsql=#CREATEMODELecoli_svmcUSINGmulticlassFEATURESf1,f2,f3,f4,f5,f6,f7
TARGETcatFROM(SELECT*FROMdb4ai_ecoliWHEREcat='cp');
ERROR: Atleasttwocategoriesareneeded
 场景六：DB4AI在训练过程中会过滤掉含有空值的数据，当参与训练的
模型数据为空的时候，会返回ERROR，并提示错误原因，例如：
gsql=#createmodeliris_classification_modelusingxgboost_regression_logisticfeatures
message_regulartargeterror_levelfromerror_code;
ERROR: Trainingdataisempty,pleasechecktheinputdata.
 场景七：DB4AI的算法对于支持的数据类型是有限制的。当数据类型不
南大通用数据技术股份有限公司
405
GBase 8s V8.8开发者手册
在支持白名单中，会返回ERROR，并提示非法的oid，可通过pg_type 查看OID
确定非法的数据类型，例如：
gsql=#CREATEMODELecoli_svmcUSINGmulticlassFEATURESf1,f2,f3,f4,f5,f6,f7,
catTARGETcatFROMdb4ai_ecoli;
ERROR: Oidtype1043notyetsupported
 场景八：当GUC参数statement_timeout设置了时长，训练超时执行的语
句将被终止：执行CREATEMODEL语句。训练集的大小、训练轮数(iteration)、
提前终止条件(tolerance、max_seconds)、并行线程数(nthread)等参数都会影响训练
时长。当时长超过数据库限制，语句被终止模型训练失败。
 模型解析。
 场景九：当模型名在系统表中查找不到，数据库会报ERROR，例如：
gsql=#selectgs_explain_model("ecoli_svmc");
ERROR: column"ecoli_svmc"doesnotexist
 推断阶段。
 场景十：当模型名在系统表中查找不到，数据库会报ERROR，例如：
gsql=#selectid,PREDICTBYpatient_logistic_regression(FEATURES
second_attack,treatment)FROMpatients;
ERROR: Thereisnomodelcalled"patient_logistic_regression".
 场景十一：当做推断任务FEATURES的数据维度和数据类型与训练集存
在不一致，将报ERROR，并提示错误原因，例如：
gsql=#selectid,PREDICTBYpatient_linear_regression(FEATURESsecond_attack)FROM
patients;
ERROR: Invalidnumberoffeaturesforprediction,provided1,expected2
CONTEXT: referencedcolumn:patient_linear_regression_pred
-------------------------------------------------------------------------------------------------------------------
------------------
gsql=#selectid,PREDICTBYpatient_linear_regression(FEATURES
1,second_attack,treatment)FROMpatients;
ERROR: Invalidnumberoffeaturesforprediction,provided3,expected2
CONTEXT: referencedcolumn:patient_linear_regression_pre
DB4AI特性需要读取数据参与计算，不适用于密态数据库等情况。
南大通用数据技术股份有限公司
406
GBase 8s V8.8开发者手册
11.2.2 全流程 AI
传统的AI任务往往具有多个流程，如数据的收集过程包括数据的采集、数据清洗、数
据存储等，在算法的训练过程中又包括数据的预处理、训练、模型的保存与管理等。其中，
对于模型的训练过程，又包括超参数的调优过程。诸如此类机器学习模型生命周期的全过程，
可大量集成于数据库内部。在距离数据存储侧最近处进行模型的训练、管理、优化等流程，
在数据库端提供SQL语句式的开箱即用的AI全声明周期管理的功能，称之为全流程AI.
GBase8s实现了部分全流程AI的功能，将在本章节中详细展开。
11.2.2.1 PLPython Fenced 模式
在fenced模式中添加plpython非安全语言。在数据库编译时需要将python集成进数据
库中，在configure阶段加入--with-python选项。同时也可指定安装plpython的python路径，
添加选项--with-includes='/python-dir=path'。
在启动数据库之前配置GUC参数unix_socket_directory ，指定unix_socket进程间通讯
的文件地址。用户需要提前在user-set-dir-path下创建文件夹，并将文件夹权限修改为可读
可写可执行状态。
unix_socket_directory='/user-set-dir-path'
配置完成，启动数据库。
将plpython加入数据库编译，并设置好GUC参数unix_socket_directory后，在启动数
据库的过程中，自动创建fenced-Master进程。在数据库不进行python编译的情况下，fenced
模式需要手动拉起master进程，在GUC参数设置完成后，输入创建master进程命令。
启动fenced-Master进程，命令为：
gaussdb--fenced-k/user-set-dir-path-D/user-set-dir-path&
完成fence模式配置，针对plpython-fencedUDF数据库将在fenced-worker进程中执行