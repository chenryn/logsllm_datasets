# Exploring EDNS-Client-Subnet Adopters in Your Free Time

## Authors
- Florian Streibelt, TU Berlin
- Jan Böttger, TU Berlin
- Nikolaos Chatzis, TU Berlin
- Georgios Smaragdakis, T-Labs/TU Berlin
- Anja Feldmann, TU Berlin

## Abstract
The recently proposed DNS extension, EDNS-Client-Subnet (ECS), has been rapidly adopted by major Internet companies such as Google to better allocate user requests to their servers and enhance end-user experience. In this paper, we demonstrate that the adoption of ECS also provides unique, albeit unintended, opportunities to uncover operational details about these companies with minimal effort. A key observation is that ECS allows the resolution of domain names of ECS adopters on behalf of any arbitrary IP/prefix in the Internet. Using only a single residential vantage point and publicly available information, we can:
1. Uncover the global footprint of ECS adopters with little effort.
2. Infer the DNS response cacheability and end-user clustering strategies of ECS adopters for any network.
3. Capture snapshots of user-to-server mappings as practiced by major ECS adopters.

While highlighting these new measurement opportunities, our work aims to make current and future ECS adopters aware of the operational information exposed through this recent DNS extension.

## General Terms
- Measurement

## Keywords
- Content Delivery, DNS, CDN

## 1. Introduction
In the current Internet, hostnames are typically resolved using local resolvers provided by Internet Service Providers (ISPs). Unless the answer is cached, the ISP's domain name server performs a recursive lookup to receive an authoritative answer, which it can then cache. Large Content Delivery Networks (CDNs) and Content Providers (CPs) use the DNS to map users to appropriate server locations [27, 38].

However, the DNS query is not issued directly by the end-user but by the local resolver. The assumption is that the end-user is close to the local resolver or that a resolver serves clients in close proximity. Studies have shown that these assumptions do not always hold, leading to degraded end-user performance, especially with the introduction of third-party resolvers like Google Public DNS [4] and OpenDNS [7], which may not be located near the end-user [11, 26, 28, 32].

The solution, proposed by Google and others to the IETF [17], is the EDNS-Client-Subnet (ECS) DNS extension. ECS includes the IP address information of the original query issuer in the query to the authoritative name server, allowing CDNs and CPs to improve the mapping of end-users to servers. Major Internet companies, including Google, Edgecast, and OpenDNS, have adopted ECS and formed the "a faster Internet" consortium [1]. Extensive active measurement studies have confirmed that ECS can indeed enhance end-user performance [28, 32].

For the Internet measurement community, the adoption of ECS by major players offers unique, unintended opportunities. We show how ECS can be used to uncover details of the operational practices of ECS adopters with minimal effort. Our key observation is that ECS allows anyone to issue queries on behalf of any "end-user" IP address for domains with ECS support. This currently hard-to-extract information can now be collected using only a single vantage point and publicly available information. In the past, researchers had to use open or misconfigured resolvers, access multiple vantage points, rely on volunteers, analyze proprietary data, or search the web [10, 11, 12, 22, 24, 25, 26, 30, 34, 35].

In summary, the three main contributions of this paper are:
- Demonstrating that a single vantage point combined with publicly available information is sufficient to uncover the global footprint of ECS adopters and track their expansions.
- Showing how to infer the DNS cacheability and end-user clustering strategies of ECS adopters.
- Illustrating how to capture snapshots of the assignment of users to server locations by major ECS adopters.

This work also aims to increase awareness among current and future ECS adopters about the operational information exposed when enabling this DNS extension. Despite some experts being aware of the shortcomings, a systematic study is still lacking. Our software and measurements are publicly available [1].

## 2. ECS Background
The EDNS-Client-Subnet (ECS) DNS extension [17] was introduced to address the problem of mis-locating the end-system that originates the DNS request. With ECS, client IP information is forwarded by all ECS-enabled resolvers to the authoritative name server in the form of network prefixes.

### 2.1 Protocol Specification
ECS is an EDNS0 DNS extension [36] proposed by the IETF DNS Extensions Working Group. EDNS0, which is also needed for DNSSEC, uses an ADDITIONAL section in DNS messages to transfer optional data between name servers. Since all sections from a DNS query are present in the DNS response, bidirectional data transfer is enabled. Name servers that do not support EDNS0 either strip the EDNS0 OPT RR in the ADDITIONAL section or forward it unmodified.

An example of an ECS-enabled query and response is shown in Figure 1. The ADDITIONAL section includes an OPT RR resource record containing the ECS header and data. The ECS payload consists of the address family (IPv4 or IPv6), prefix length, scope, and client prefix. To protect a client’s privacy, [17] recommends using prefixes less specific than /32. The scope field must be zero in each query and is a placeholder for the returned scope.

The response from an ECS-enabled DNS server differs in one byte, the scope, which is needed for DNS caching. The answer can be cached and used for any query with a client prefix that is more specific or equal to the prefix specified by the scope. The scope is the essential element that allows us to infer operational practices of ECS adopters.

### 2.2 Challenges in Enabling ECS
While ECS is transparent to the end-user, it requires significant efforts by DNS server operators. All involved DNS servers must at least forward the ECS information. Major obstacles include:
- Limited ECS support in server software.
- The need to upgrade all involved DNS servers.
- Third-party resolvers not necessarily sending ECS queries by default.

To change the latter, an engineer at Google Public DNS or OpenDNS must manually check authoritative name servers and whitelist them as ECS-compliant. Additionally, appropriate cache support must be added to DNS resolvers. Handling ECS is complicated, as the draft requires DNS forwarders to forward ECS information, modify the prefix mask to a less specific one, and add an OPT RR record based on socket information if no ECS information is present.

## 3. Datasets
We use two types of datasets in this paper: (i) prefixes to be used as pretended "client locations" for ECS queries, and (ii) popular ECS adopters.

### 3.1 Network Prefixes
We explore different prefix sets of varying scopes and magnitudes to uncover the operational practices of certain CDNs and CPs regarding client localization and clustering. We use both private and public sets of network prefixes.

- **Academic Network (UNI)**: This network includes a diverse set of clients, ranging from office working spaces to student dorms and research facilities. It uses two /16 blocks, does not have an AS, and is localized to a single city in Europe.
- **Large ISP (ISP)**: This dataset includes more than 400 prefixes, ranging from /10 to /24, announced by a European tier-1 ISP. This ISP offers services to residential users, enterprise networks, and hosts CDN servers.
- **De-aggregated ISP Prefixes (ISP24)**: We use de-aggregated announced prefixes of the large ISP at the granularity of /24 blocks to investigate if finer granularity reveals additional operational details.
- **Popular Resolvers (PRES)**: This proprietary dataset consists of the 280K most popular resolver IPs that contacted a large commercial CDN. These resolvers are distributed across 21K ASes, 74K prefixes, and 230 countries.
- **RIPE**: RIPE RIS [8] makes full BGP routing tables from multiple BGP peering sessions publicly available. This data includes 500K prefixes from 43K ASes.
- **Routeviews (RV)**: Another public BGP routing table source offered by the University of Oregon [9].

### 3.2 Content Provider Datasets
To identify ECS adopters and corresponding hostnames, we use Alexa [2] (April 20, 2013), a publicly available database of the top 1 million second-level domains. We re-send the same ECS query with three different prefix lengths. If the scope is non-zero for one of the replies, we annotate the server and hostname as ECS-enabled.

We obtain two disjoint groups of (domain names, name-servers) pairs. The first group fully supports ECS and accounts for 3% of the second-level domain names. The second group, about 10%, is ECS-enabled according to the IETF draft [17] but does not appear to use the additional section information for the tested domains. Thus, roughly 13% of the top 1 million domains may be ECS-enabled. Some big players, including Google, Edgecast, CacheFly, HiCloud, and applications hosted in the cloud such as MySqueezebox, are among the ECS adopters.

To estimate the potential traffic affected by ECS, we use a 24-hour anonymized packet-level trace from a large European ISP. The trace contains 20.3 million DNS requests for more than 450K unique hostnames and 83 million connections. We find that roughly 30% of the traffic involves ECS adopters, highlighting that while the number of ECS adopters is relatively small, they are responsible for a significant fraction of traffic.

From the identified ECS adopters, we select a large CDN, two smaller CDNs, and an application deployed in the cloud to explore their operational practices. In the rest of the paper, we focus on:
- **Google**: A founding member of the "a faster Internet" consortium and a main supporter of ECS. It has adopted ECS in all its resolvers and name servers, using a sophisticated backend with many data centers, edge-servers, and Google Global Cache (GGC) servers.
- **Edgecast**: A large CDN that also offers streaming solutions and is a participant in the "a faster Internet" consortium.
- **CacheFly**: Another CDN that has adopted ECS.
- **MySqueezebox**: A Logitech product running on Amazon’s Web cloud Service EC2.

## 4. Method
For our experiments, we use the ECS extension of the python DNS libraries provided by OpenDNS [7]. Based on this library, we developed a framework to send ECS DNS queries with arbitrary ECS client subnet information to authoritative name servers. By embedding this library into our test framework, we can handle failures and retries efficiently.

We emphasize that a single vantage point is sufficient for performing our experiments, as ECS answers depend exclusively on the client prefix sent. This is confirmed by synchronized measurements from two research networks (US, Germany) and a residential network.

[1] http://projects.inet.tu-berlin.de/projects/ecs-adopters