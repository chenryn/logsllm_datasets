13
for Automatic Software Repair.
Software Engineering, 2012.
IEEE Transactions on
[18] Daniel Lowd and Christopher Meek. Adversarial learn-
ing. In 11th ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining (KDD), 2005.
[19] Davide Maiorca, Giorgio Giacinto, and Igino Corona.
A Pattern Recognition System for Malicious PDF Files
Detection. In 8th International Conference on Machine
Learning and Data Mining in Pattern Recognition. 2012.
[20] Davide Maiorca, Igino Corona, and Giorgio Giacinto.
Looking at the Bag Is Not Enough to Find the Bomb: An
Evasion of Structural Methods for Malicious PDF Files
Detection. In 8th ACM Symposium on Information, Com-
puter and Communications Security (ASIACCS), 2013.
[21] Patrick Maupin. PDFRW: A Pure Python Library That
https://github.com/pmaupin/
Reads and Writes PDFs.
pdfrw.
[22] Anh Nguyen, Jason Yosinski, and Jeff Clune. Deep
Neural Networks are Easily Fooled: High Conﬁdence
In 28th IEEE
Predictions for Unrecognizable Images.
Conference on Computer Vision and Pattern Recognition
(CVPR), 2015.
[23] Conor Ryan. Automatic Re-Engineering of Software
Using Genetic Programming, volume 2. Springer Science
& Business Media, 2012.
[24] Karthik Selvaraj and Nino Fred Gutierrez. The Rise of
https://www.symantec.com/content/en/
PDF Malware.
us/enterprise/media/security response/whitepapers/the
rise of pdf malware.pdf, March 2010.
[25] Charles Smutz and Angelos Stavrou. Malicious PDF
Detection Using Metadata and Structural Features. Tech-
nical report, 2012.
[26] Charles Smutz and Angelos Stavrou. Malicious PDF
Detection Using Metadata and Structural Features. In 28th
ACM Annual Computer Security Applications Conference
(ACSAC), 2012.
[27] Nedim ˇSrndic and Pavel Laskov. Mimicus: A Library for
Adversarial Classiﬁer Evasion. https://github.com/srndic/
mimicus.
[28] Nedim ˇSrndic and Pavel Laskov. Detection of Malicious
Pdf Files Based on Hierarchical Document Structure. In
20th Network and Distributed System Security Symposium
(NDSS), 2013.
[29] Nedim ˇSrndic and Pavel Laskov. Practical Evasion of a
Learning-Based Classiﬁer: A Case Study. In 35th IEEE
Symposium on Security and Privacy (Oakland), 2014.
[30] Symantec Corporation.
Symantec Internet Security
Threat Report, 2015.
[31] VirusTotal. Free Online Virus, Malware and URL Scan-
ner. https://www.virustotal.com/.
REFERENCES
[1] Adobe, Inc. PDF Reference and Adobe Extensions to
the PDF Speciﬁcation. http://www.adobe.com/devnet/pdf/
pdf reference.html.
[2] Marco Barreno, Blaine Nelson, Russell Sears, Anthony D
Joseph, and J Doug Tygar. Can Machine Learning Be
Secure? In First ACM Symposium on Information, Com-
puter and Communications Security (ASIACCS), 2006.
[3] Battista Biggio, Giorgio Fumera, and Fabio Roli. Mul-
tiple Classiﬁer Systems for Adversarial Classiﬁcation
Tasks. In Multiple Classiﬁer Systems. Springer, 2009.
[4] Battista Biggio, Igino Corona, Davide Maiorca, Blaine
Nelson, Nedim ˇSrndi´c, Pavel Laskov, Giorgio Giacinto,
and Fabio Roli. Evasion Attacks against Machine Learn-
ing at Test Time. In 6th European Machine Learning and
Data Mining Conference (ECML/PKDD). 2013.
[5] Stephan Chenette.
Malicious Documents Archive
for Signature Testing and Research - Contagio Mal-
ware Dump.
http://contagiodump.blogspot.de/2010/08/
malicious-documents-archive-for.html.
[6] Deepak Chinavle, Pranam Kolari, Tim Oates, and Tim
Finin. Ensembles in Adversarial Classiﬁcation for Spam.
In 18th ACM Conference on Information and Knowledge
Management (CIKM), 2009.
[7] Marco Cova, Christopher Kruegel, and Giovanni Vigna.
Detection and Analysis of Drive-By-Download Attacks
In 19th International
and Malicious JavaScript Code.
World Wide Web Conference (WWW), 2010.
[8] CVE Details. Adobe Acrobat Reader — CVE Security
http:
Vulnerabilities, Versions and Detailed Reports.
//www.cvedetails.com/product/497.
[9] George E Dahl, Jack W Stokes, Li Deng, and Dong Yu.
Large-Scale Malware Classiﬁcation Using Random Pro-
jections and Neural Networks. In 38th IEEE International
Conference on Acoustics, Speech and Signal Processing
(ICASSP), 2013.
[10] Nilesh Dalvi, Pedro Domingos, Sumit Sanghai, and
In 10th
Deepak Verma. Adversarial Classiﬁcation.
ACM SIGKDD International Conference on Knowledge
Discovery and Data Mining (KDD), 2004.
[11] Stephanie Forrest. Genetic Algorithms: Principles of
Natural Selection Applied to Computation. Science, 261
(5123), 1993.
[12] Claudio Guarnieri, Alessandro Tanasi, Jurriaan Bremer,
and Mark Schloesser. Cuckoo Sandbox: A Malware
Analysis System. http://www.cuckoosandbox.org/.
[13] Mark Harman, William B Langdon, and Westley Weimer.
Genetic Programming for Reverse Engineering.
In
20th IEEE Working Conference on Reverse Engineering
(WCRE), 2013.
[14] Thomas Hungenberg and Matthias Eckert. INetSim: In-
ternet Services Simulation Suite. http://www.inetsim.org/.
[15] John R Koza. Genetic Programming: On the Pro-
gramming of Computers by Means of Natural Selection,
volume 1. MIT press, 1992.
[16] Pavel Laskov and Nedim ˇSrndi´c. Static Detection of
In 27th
Malicious JavaScript-Bearing PDF Documents.
ACM Annual Computer Security Applications Conference
(ACSAC), 2011.
[17] Claire Le Goues, ThanhVu Nguyen, Stephanie Forrest,
and Westley Weimer. GenProg: A Generic Method
14
APPENDIX
B. Mutated Features in Hidost
A. Mutated Features in PDFrate
The 68 features mutated in our experiments evading
PDFrate are listed in Table VI. It is important to note, however,
that just because a feature does not appear here does not mean
it is robust to evasion. The features listed are those that were
sufﬁcient for achieving 100% evasion rate in our experiment.
Similarly, the unidirectional mutations are how observed in
the evasion attack experiment. It doesn’t necessarily mean that
these features cannot also be mutated in the reverse direction
without corrupting malware samples in practice.
TABLE VI.
68 FEATURES MODIFIED EVADING PDFRATE
The 24 inserted features and the 19 deleted features in
ﬁnding the 2,859 evasive variants against Hidost are listed in
Table VII. As with PDFrate, the features that are not listed are
not necessarily robust features.
The “counts” are the number of evasive variants mutated
that feature. Note that some features are hierarchically depen-
dent in the PDF object structure, so one insertion or deletion
may impact many features. For example, inserting a complete
Metadata object (as is done in 2,507 of the variants) also
introduces several child objects: Metadata/Length, Metadata/-
Subtype and Metadata/Type.
Feature Name
box nonother types
box other only
count acroform
count action
count box letter
count box other
count endobj
count endstream
count font
count image med
count image small
count image total
count image xsmall
count javascript
count js
count obj
count objstm
count page
count page obs
count stream
createdate mismatch
createdate ts
createdate tz
createdate version ratio
creator mismatch
creator dot
creator lc
creator len
creator num
creator oth
creator uc
delta ts
delta tz
image mismatch
Mutability
↓
↑
↑↓
↑↓
↓
↑↓
↑↓
↑↓
↑↓
↑
↑
↑
↑
↓
↓
↑↓
↓
↑↓
↓
↑↓
↑
↑
↓
↑
↑↓
↑↓
↑↓
↑
↑↓
↑↓
↑↓
↑
↓
↑
Feature Name Mutability
image totalpx
len obj avg
len obj max
len obj min
↑
↑↓
↑↓
↑↓
↑↓
↑
↑↓
↑↓
↑↓
↑↓
↑↓
↑↓
↑↓
↑
↑
↑
↑
↑
↑
↑↓
↑↓
↑↓
↑↓
↑↓
↑↓
↑
↑↓
↑↓
↑↓
↑↓
↑↓
↑↓
↑↓
↑
len stream avg
len stream max
len stream min
pos acroform avg
pos acroform max
pos acroform min
pos box avg
pos box max
pos box min
pos eof avg
pos eof max
pos eof min
pos image avg
pos image max
pos image min
pos page avg
pos page max
pos page min
producer dot
producer lc
producer len
producer mismatch
producer num
producer oth
producer uc
ratio imagepx size
ratio size obj
ratio size page
ratio size stream
size
TABLE VII.
FEATURES ALTERED EVADING HIDOST
Counts
Inserted Feature
2,507 Metadata
2,507 Metadata/Length
2,507 Metadata/Subtype
2,507 Metadata/Type
2,454
2,363
1,991
1,968
1,702
1,382
825
718
385
385
369
319
319
158
158
51
51
41
41
40
Counts
1,345
865
615
615
615
502
500
330
54
14
12
12
12
11
9
8
4
3
2
PageLabels
ViewerPreferences/Direction
Pages/Resources/ProcSet
Pages/Resources
Pages/Rotate
Pages/MediaBox
Threads
OpenAction/MediaBox
OpenAction/Contents/Filter
OpenAction/Contents/Length
OpenAction/Contents
OpenAction/Resources
OpenAction/Resources/ProcSet
OpenAction/Rotate
OpenAction/CropBox
OpenAction/Type
OpenAction
PageLabels/Nums
PageLabels/Nums/S
PageLayout
Deleted Feature
Names/JavaScript/Names/S
PageLayout
Outlines/Type
Outlines
Outlines/Count
AcroForm/Fields
AcroForm
OpenAction/JS/Length
Pages/Rotate
Pages/Resources/ProcSet
AcroForm/DR/Encoding/PDFDocEncoding
AcroForm/DR/Encoding/PDFDocEncoding/Differences
AcroForm/DR/Encoding/PDFDocEncoding/Type
Pages/Resources
AcroForm/DA
Pages/MediaBox
OpenAction/S
Names/EmbeddedFiles
Names
15