### 5.1 Analysis of Trace Characteristics

#### Delay and Capacity
We observed a delay greater than 200ms in one direction of the link (Direction 1), which aligns with our expectations for a cross-continental connection. Figure 6 compares the link capacities for the path connecting the hosts to the target-link. In one direction, the capacities range from 1 to 100 Mbps, while in the other direction, the hosts are bottlenecked upstream at approximately 3.5 Mbps. These values match our understanding of typical host characteristics on either side of the Auck link. We obtained similar results for Mawi and CAIDA.

#### Loss Rate
Figure 7 presents the loss rate for the trace. For validation, we also plot the extracted values for delay, capacity, and loss rate for our Swing-generated traces. The results show good matches in all cases. The discrepancy in loss rate behavior is due to the difficulty in disambiguating between losses, retransmissions, and multi-path routing in a noisy packet trace.

#### Aggregate Per-Application Characteristics
Table 2 presents the aggregate per-application characteristics of Swing-generated traces compared to the original Auck, Mawi, and CAIDA traces. We are satisfied with our ability to reproduce these characteristics, especially considering that no manual tuning was performed on a per-trace or per-application basis. Our results are typically better when reproducing aggregate trace characteristics due to the availability of more information and less discretization error.

### 5.2 Wavelet-Based Analysis

#### HTTP/Auck Energy Plot
Figure 8 compares the wavelet scaling plots for byte arrivals for HTTP/Auck and corresponding Swing traces. The top pair of curves corresponds to the scaling plots for one traffic direction (labeled 0), and the bottom curves are for the opposite direction (labeled 1). A common dip in the top curve at scale 9 (200ms) corresponds to the dominant RTT, as shown in Figure 5. Similarly, the common dip seen for the bottom pair at a scale of 3 (8ms) corresponds to the bottleneck upstream capacity of 3.5 Mbps (see Figure 6).

#### SQUID/Auck Energy Plot
Figure 9 compares the scaling plots for byte arrivals for SQUID for the same trace. The relatively flat structure in Direction 1, compared to the HTTP plot, is due to most of the data flowing in Direction 0. The significant difference in SQUID's behavior relative to HTTP highlights the importance of capturing individual application characteristics, especially if using Swing to extrapolate to other network settings.

#### SQUID/Auck Packet Arrivals
Figure 10 shows the corresponding plot for packet arrivals. The close match confirms our ability to reproduce burstiness at the granularity of both bytes and packets.

#### Mawi Trace
Figure 11 shows the scaling plot for HTTP byte arrivals in the Mawi trace. The plot differs significantly from the corresponding Auck plot (see Figure 8), but Swing can accurately reproduce it without manual tuning. Another trace from the Mawi repository taken six months earlier, shown in Figure 12, demonstrates changes in application burstiness over time, which Swing accurately captures.

#### CAIDA Trace
Figure 13 shows the energy plot for both directions of HTTP traffic in the CAIDA trace, validating our ability to generalize to higher-bandwidth traces and traces from fundamentally different network locations.

To the best of our knowledge, we are the first to reproduce observed burstiness in generated traces across a range of time scales. While our model cannot capture all relevant trace conditions, such as the number of intermediate hops to the target link, an important contribution of this work is demonstrating that capturing and reproducing a relatively simple set of trace conditions is sufficient to capture burstiness, at least for the traces we considered.

### 5.3 Sensitivity Analysis

#### Network Conditions
One question is whether our model parameters are necessary and sufficient to reproduce trace characteristics. We have investigated the sensitivity of our parameters and found that all aspects of our model influence resulting accuracy to varying extents.

#### Importance of Wide-Area Network Conditions
Capturing and reproducing wide-area network conditions appears to be the biggest contributor to burstiness in the original trace. Figure 14 shows that omitting wide-area network conditions and simply playing back modeled user and application characteristics across an unconstrained network (switched Gigabit Ethernet) results in the loss of rich structure present at sub-RTT scales and overall burstiness characteristics. This result emphasizes the importance of considering network conditions to reproduce the structure in an original trace.

#### InterRRE and Interconn Parameters
Accurate network modeling alone is insufficient to reproduce burstiness. Figure 15 shows the degradation when we omit interRRE from our model for HTTP/Auck and the increase in burstiness at large time scales when we omit interconn for SQUID/Auck.

#### Variability Across Runs
To explore the variability introduced by independent model and parameters, we performed an experiment where we varied the initial random seed to our traffic generator and generated 10 Swing traces. Figure 16 shows the variability across the different runs. While the average curves closely follow Auck, at large time scales, we see a few examples where the energy plot does not completely overlap with the baseline. Overall, we prefer the ability to explore the range of possible behavior starting with an original trace.

### 5.4 Responsiveness

#### Projecting Traffic into Alternate Scenarios
Figure 17 shows the effect of doubling the link latencies (all other model parameters remain unchanged) for HTTP/Mawi. While aggregate trace characteristics are roughly maintained (8.17 Mbps vs. 9 Mbps), burstiness can vary significantly. We find that relatively accurate estimates of network conditions (at least within a factor of two) are required to capture burstiness. Doubling the RTT moves the significant dip to the right by one unit, as the X-axis is on a log2 scale.