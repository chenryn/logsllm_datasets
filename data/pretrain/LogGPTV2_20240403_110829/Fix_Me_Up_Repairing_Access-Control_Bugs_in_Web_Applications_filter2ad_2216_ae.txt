### PHP Benchmarks Analysis and Repair Characterization

**Table 2: PHP Benchmarks, Analysis Time in Seconds, ACT Characterization, and Repair Characterization**

| Application | Version | LoC | Roles | Tag Instances | Missing Checks | Alternative Policies | Inserted Policies | Partial Repairs | Full Repairs | Warnings | Side Effects |
|-------------|---------|-----|-------|---------------|----------------|---------------------|------------------|-----------------|--------------|----------|--------------|
| phpCommunityCal | 4.0.3 | 12,298 | 6 | 4 | 1 | 3 | 1 | 2 | 1 | 0 | 0 |
| AWCM | 2.2 | 11,877 | 4 | 4 | 1 | 0 | 0 | 0 | 0 | 0 | 0 |
| GRBoard | 1.8.6.5 | 50,491 | 4 | 4 | 1 | 0 | 0 | 0 | 0 | 0 | 0 |
| myBB | 1.6.7 | 107,515 | 8 | 4 | 1 | 0 | 0 | 0 | 0 | 0 | 0 |

**Role Distribution:**
- **Admin:** 6
- **Normal:** 8

**Analysis and Repair Details:**

- **Tag Instances:** The total number of template instances in the code, indicating that developers often implement the same access-control logic in multiple places.
- **LoC (Lines of Code):** The size of each template, ranging from 2 to 11 statements.

**Missing Checks and Alternative Policies:**
- **Missing Checks:** FIXMEUP identified a total of 38 missing checks.
- **Alternative Policies:** In seven cases, FIXMEUP inserted an access-control policy, but the target code already had a different check. For example, in DNscript, `process.php` was repaired using the policy from `AddDn.php`, but it already contained a CAPTCHA-based check.

**Inserted Policies:**
- **Validated Repairs:** FIXMEUP made 37 validated repairs with one warning, 30 of which fixed actual vulnerabilities.
- **Example of Warning:** In `minibloggie`, the statements `session_start()` and `dbConnect()` were both in the template and in `Del.php`, so they were not reinserted. However, the statement `if (!verifyuser()) { header('Location: ./login.php'); }` was added, creating a new dependency that did not exist in the original ACT.

**Partial and Full Repairs:**
- **Partial Repairs:** In 28 out of 38 attempted repairs, FIXMEUP reused some existing statements in the target.
- **Full Repairs:** In 9 cases, the entire template was inserted.
- **Example of Partial Repair:**
  - **DNscript: Different Access-Control Checks within the Same User Role:**
    ```php
    // AddDn.php
    session_start();
    if (!$SESSION['member']) {
        header('Location: exit; login.php');
    }

    // Process.php
    if (isset($POST["id"]) || isset($POST["filename"])) {
        $POST["id"] = str_replace(array('../', '.php'), '', $POST["id"]);
        $POST["filename"] = str_replace(array('../', '.php'), '', $POST["filename"]);
        @unlink('data/' . $POST["id"] . '/' . $POST["filename"]);
    }
    ```

- **Example of Full Repair:**
  - **GRBoard: Same ACT in Different Contexts:**
    ```php
    if (isset($POST["PHPSESSID"])) {
        session_id($POST["PHPSESSID"]);
        include 'class/common.php';
        $GR = new COMMON();
        if (!$SESSION['no']) {
            $GR->error('Require login procedure');
        }
    }
    ```

**Side Effects:**
- **Example of Side Effect:**
  - **slideshow.php:**
    ```php
    if (time() > 600 + @filemtime($tmp)) {
        $tmpFS = @fopen($tmp, 'w');
    } else {
        $tmpFS = @fopen($tmp, 'a');
    }
    @fwrite($tmpFS, $saveResult);
    @fclose($tmpFS);
    ```
  - **Line 13:** An access-control check already present in `slideshow.php`. Because the policy implemented by the existing check does not match the ACT, FIXMEUP inserts lines 3-11. However, the function call on line 8 has a side effect on `$SESSION` and `$COOKIE`, which are used in the function call at line 13. This side effect is easy to detect with standard dependence analysis, but the reason it occurred is a faulty annotation.

This structured approach provides a clear and detailed overview of the analysis and repair process, highlighting the key findings and examples.