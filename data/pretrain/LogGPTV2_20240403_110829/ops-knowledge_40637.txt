User: EDIT
One option I contemplated but don't know enough about is to e.g. for windows write a batch script to:

Search for a Python installation, download one and install if not present
Then install the bundled package using distutils to also handle dependencies. 

It seems like this could be a relatively elegant and simple solution, but I'm not sure how to proceed - any ideas?
Original Question
In brief
What approach would you recommend for the following scenario?

Linux development environment for creation of technical applications
Deployment now also to be on Windows and Mac
Existing code-base in Python
wine won't install windows version of Python
No windows install CDs available to create virtual windows/mac machines
Porting to java incurs large overhead because of existing code-base
Clients are not technical users, i.e. providing standard Python packages not sufficient - really requires installable self-contained products

Background
I am writing technical and scientific apps under Linux but will need some of them to be deployable on Windows/MacOs machines too. 
In the past I have used Python a lot, but I am finding that for non-technical users who aren't happy installing python packages, creating a simple executable (by using e.g. py2exe) is difficult as I can't get the windows version of Python to install using wine. 
While java would seem a good choice, if possible I wanted to avoid having to port my existing code from Python, especially as Python also allows writing portable code. 
I realize I'm trying to cover a lot of bases here, so any suggestions regarding the most appropriate solutions (even if not perfect) will be appreciated.
Assistant: py2exe works pretty well, I guess you just have to setup a Windows box (or VM) to be able to build packages with it.