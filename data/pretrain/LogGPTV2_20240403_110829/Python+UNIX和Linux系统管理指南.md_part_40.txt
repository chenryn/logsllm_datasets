这个示例由vitralenv文档改编而来，并且最后两行需要格外注意：7
import virtualenv, textwrap
例9-7：创建启动脚本
使用该脚本可以安装liten。
建一个新的虚拟环境并且使用liten。例9-7准确演示了如何创建一个自定义的启动脚本，
自定义的egg到一个新的环境中。作为一个示例，我们回到liten包，使用virtualenv来创
让我们看一下创建一个自定义的启动脚本有多么容易，该脚本会安装virtualenv以及一组
parsing、adjust_options、以及使用after_install 钩子。
它的作用是创建一个启动脚本，类似于virtualenv，但是具有额外的特征可以扩展选项
脚本的支持。实现该目标的一个方法是调用virtualenv.create_bootstrap_script(text)。
创建一个自定义的自启动虚拟环境
com/projects/virtualenvwrapper。该工具使用活动的Bash封闭器菜单来选择每次使用的
造了一个非常智能的黑客工具，可以在这里找到相关信息：http://www.doughellmann.
是可以直接键入到virtualenv的全路径。Doug Hellmann，是这本书的评审者之一，他创
发布的virtualenv1.0版本（撰写本书时的当前版本），包括对创建virtualenv环境的启动
sandbox.
f = open('liten-bootstrap.py', 'w').write(output)
subprocess.call([join(home_dir, 'bin', 'easy_install'),
subprocess.call([join(home_dir, 'bin', 'easy_install'),
liten'])
os.makedirs(etc)
subprocess
liten'])
'etc')
www.TopSage.com
包管理丨283
聚
---
## Page 298
常简单的。virtualenv遵循经典的KISS规则，单是这一个原因就足以考虑使用它来帮助管
我们希望，通过这一节对virtualenv的介绍有一点非常明确，即使用和理解virtualenv是非
这是一个需要掌握的非常不错的技巧，允许创建一个完全独立的可启动的虚拟环境。
智能启动脚本自动地创建一个模块环境。这样，如果在liten工具中运行到virtualenv全路
实际上，当我们带有一个目标目录来运行这个工具时，我们会得到这样的输出结果：
284
径，我们会得到下面的结果：
A command-line tool for detecting duplicates using md5 checksums.
Path to store duplication report. Default CWD
Usage:liten[starting directory][options]
$/tmp/liten-ENv/bin/liten
plain number defaults
Finished processing dependencies for liten
Using /Library/Python/2.5/site-packages/liten-0.1.3-py2.5.egg
Best match: liten 0.1.3
--no-site-packages
-q,_--quiet
V,--verbose
-h,--help
-version
Options:
Usage:liten-bootstrap.py[OPTIONS] DEST_DIR
You must provide a DEST_DIR
-t,--test
-version
Options:
python liten-bootstrap.py
.--quiet
第9章
--config
--size=SIZE
--report=REPORT
Clear out the non-root install and start from scratch
virtual environment
Decrease verbosity
Increase verbosity
Runs doctest.
File Size Example: 10bytes, 10KB, 10MB,10GB,10TB, or
show program's version number and exit
Path
show
www.TopSage.com
PDG
---
## Page 299
#1/usr/bin/envpython
def main():
import optparse
例9-8：HelloEPM命令行工具
意义上，我们将要创建一个简单的、称为“hello_epm.py”的命令行工具。参见例9-8。
为了创建适合于每一个*nix操作系统的包，我们首先需要一些实际发布的内容。在传统
创建一个HelloWorld命令行发布工具
后，需要执行下面的命令：
序没有安装到系统中，在几乎所有的*nix系统上也是很容易获得的。在下载EPM源码之
EPM仅需要一个Bourne类型的shell，一个C编译器，make程序和gzip。即使这些应用程
EPM包管理器的需求及安装
布文件适合于所有的操作系统以及所有的发布格式。
开始就被设计成使用通用的软件规格的二进制软件。正是缘于这一设计目标，同样的发
在我们开始这一教程之前，有一些EPM的背景需要介绍。根据EPM的官方文档，EPM一
Hat、Solaris和FreeBSD。这些步骤也可以很容易地应用到其他EPM支持的系统上，例如
中，我们将进一步介绍创建适用于在多平台安装的软件包，包括Ubuntu、OSX、Red
epmhome.org/epm-book.html）之后，我惊喜地看到实现过程可以如此简单。在这一节
发的工具创建基于操作系统的软件包，他提到了EPM。在阅读完在线文档（http://www.
者）首先向我介绍了EPM可以做什么。当时我正在寻找一个工具，希望能够允许为我开
当于RedHat的运行等级3，并且占用尽可能少的内存。一名同事（也是EPM开发的参与
常简便了。为了检验本书的代码示例，我们创建了一些虚拟机，虚拟机的运行模式相
在过去的几年中，在虚拟化方面取得了巨大进步，
EPM包管理
google.com/group/python-virtualenv/.
理独立的开发环境。如果你有更多的疑问，可以访问virtualenv邮件列表：http:/lgroups.
AIX或是HP-UX。
make install
make
./configure
www.TopSage.com
，创建一些适合使用的虚拟机已经非
Y
包管理|285
---
## Page 300
#Product Information Section
#aix - AIX software packages.
例9-9：EPM的“List”模板
创建包。对其略加修改完全可以创建你自己的工具。
声明或列表描述我们的包。例9-9是一个模板，我们使用该模板为hello_epm命令行工具
介绍将集中在创建提供商的包文件。在创建了面向平台的包之后，接下来需要创建一个
创建一个通用的跨平台的安装脚本，同时也是基于平台的软件包是可以实现的。我们的
号开始，变量以符号“$”开始，最后，文件、目录、初始化脚本以及符号链接行均以
软件。EPM读取一系列描述你的软件包的文件。注释以“#”符号开始，命令以“%”符
基本内容非常简单，以致你或许会惊奇为什么之前从没有使用EPM来打包一个跨平台的
使用EPM创建面向平台的包
如果我们运行这个工具，我们会得到下面的输出：
286
#setld
epm
字母开始。
f
rpm-Red Hat software packages.
oortable-Portablesoftware packages(default).
depot or swinstall
main()
hef
options, arguments = p.parse_args()
p = optparse.OptionParser()
sd
Hello EPM, I like to make packages on RedHat
$ python hello_epm.py --os RedHat
Hello EPM, I like to make packages on *NIX
_name_-
format option can be one of the following keywords:
第9章
- Hp-ux software packages.
'-o'，default="*NIX"）
www.TopSage.com
---
## Page 301
查看一下目录内部，我们会看到这样的层次：
即可，我们可以这样来做：
如果我们希望“欺骗一下”hello_epm.py工具，
容：一个README文件，一个COPYING文件，一个doc/hello_epm.html文件和一个doc/
工作目录。为了能够在所有平台上都能成功创建包，现在需要在当前目录下创建下列内
如果检查这个称为hello_epm.list的文件，你会注意到定义的变量$srcdir保存了当前的
f 0444 root sys $[mandir}/man1/hello_epm.1 $srcdir/doc/hello_epm.man
%subpackage man
# Man pages
f 0444 root sys ${docdir}/COPYING $srcdir/COPYING
%subpackage documentation
#Documentation
f 0555 root sys $[bindir)/hello_epm hello_epm.py
f 0444 root
%system all
#Executables
$srcdir=.
$libdir=/usr/lib
$bindir=$[exec_prefix}/bin
# Autoconfiguration Variables
$mandir=/usr/share/man
$exec_prefix=/usr
$prefix=/usr
%version 0.1
%description Command Line Hello World Tool
$docdir=${datadir}/doc/
%readmeREADME
%copyright 2008 Py4SA
$ touch COPYING
$ touch README
/tmp/release/hello_epm
$pwd
touch
doc/hello_epm.html
Sys ${docdir}/README$srcdir/README
www.TopSage.com
，只需要在我们的打包目录内放人空文件
包管理丨287
PDC
---
## Page 302
288
可证文件。最后，我们的工具正确地安装，并创建自定义的名字，如下所示：
如果运行安装程序，会发现，OS X将会安装空白的帮助页面和文档，并显示空白的许
installer.
这十分方便，因为它使得.DMG图片文件是本地OS X的，还包含installer和本地OS X的
次运行。则会创建一个名为macosx－10.5-intel的目录，包含以下内容。
我们注意到，当包名包含下划线时会出现警告。因此，将没有下划线的包重命名，并再
total 16
例9-10：创建一个本地安装的OSX中的EPM
OS X中的情况。
平台上。只需要运行的EPM-f命令指定具体的平台以及list文件的名称即可。例9-10显示
现在，我们有一个目录，包含“list”文件，其中包含了能够工作在任何支持EPM指令的
drwxrwxrwx
A
创建包
rw-r--r--@
rW-I--I-.
drwxr-xr-x
-I--I-MI
Tw-I--r--
total 56
$ ls -la macosx-10.5-intel
-rw-r--I-- 1 ngift wheel 0 Mar 10 04:45 hello_epm.html
total 16
$ ls -1R
drwxr-xr-x
-rw-r--I--@1r
drwxr-xr-x
totalo
./doc:
-rw-r--I--@
-I--I-MI-
drwxr-xr-x
-I--I-MI-
-rw-r--r--
第9章
6 ngift staff
1 ngift wheel
ngift
1 ngift
1 ngift wheel.
8
ngift
ngift
ngift
wheel
wheel
wheel
staff
wheel
staff
wheel
wheel
1495
278
136
23329M
0M
278M
102 Mar 10 04:54 helloEPM.mpkg
Mar 1004:45 COPYING
136M
Mar
0
0Mar 1004:45 C0PYING
10
Mar
Mar 10 04:45 README
Mar 10 04:54 helloEPM-0.1-macosx-10.5-intel.dmg
10
10
10
10（
www.TopSage.com
Mar
Mar 10 04:54
04:52 macosx-10.5-intel
04:10 hello_epm.py
一
04:44
一
04:45
04:45 README
10-04:54
1004:10
04:44
op
hello_epm.py
hello_epm.list
PDG
---
## Page 303
读EPM的官方文档，该文档涉及了所有这些案例以及更多内容。
可以处理依赖关系的包、运行pre-install和post-install脚本等内容感兴趣，那么你应该阅
还有一些其他的EPM高级特征，但是对其进一步介绍将超出本书的范围。如果你对创建
都可以下载。你应该能够很快地对其略加修改来创建适合自己的跨平台包。
以通过运行脚本来瞬间创建跨平台包。值得注意的是，所有这些源码连同创建的示例包
而且它会立即执行。在第8章，我们检验了如何使用这一技术创建build farm，这样就可
或是Solaris主机，除了使用面向本平台的名称之外，我们可以准确地运行相同的命令，
如果我们使用“scp-r”将“/tmp/release/hello-epm”复制到--个Red Hat、Ubuntu
EPM总结：
-0 OS，--os=OS
Options:
/usr/bin/hello_epm
$ which hello_epm
n，
--help
真的非常简单
show this help message and exit
www.TopSage.com
包管理丨289
---