      echo "${TIME_STAMP}: Could not open password file \"${PASSFILE}\" for reading." >> ${LOG_FILE}
      exit 1
    fi
    CORRECT_PASSWORD=`awk '!/^;/&&!/^#/&&$1=="'${username}'"{print $2;exit}' ${PASSFILE}`
    if [ "${CORRECT_PASSWORD}" = "" ]; then
      echo "${TIME_STAMP}: User does not exist: username=\"${username}\", password=\"${password}\"." >> ${LOG_FILE}
      exit 1
    fi
    if [ "${password}" = "${CORRECT_PASSWORD}" ]; then
      echo "${TIME_STAMP}: Successful authentication: username=\"${username}\"." >> ${LOG_FILE}
      exit 0
    fi
    echo "${TIME_STAMP}: Incorrect password: username=\"${username}\", password=\"${password}\"." >> ${LOG_FILE}
    exit 1
**客户端：**
    client
    proto tcp
    dev tun
    # 连接OpenVPNServer
    remote 0.0.0.0 1194
    remote-random
    resolv-retry infinite
    nobind
    persist-key 
    persist-tun
    ca ca.crt
    # cert gttx-client-vpn.crt
    # key gttx-client-vpn.key
    auth-user-pass
    auth-nocache
    remote-cert-tls server
    tls-auth ta.key 1
    route-method exe
    #保持服务端和客户端一致
    cipher AES-256-CBC 
    comp-lzo
    status openvpn-status.log
**部署过程中，开启日志很重要，遇到了毛病就看日志那些报错，找对问题去解决很关键.....不看日志就去百度，很耗费时间**  
**部署成功后，如果客户端用Client，你应该会弹出连接窗口，输入pwd-file账户与密码，如下所示：**  
**Ping试一试咋样：**  
**发现没问题，起码OpenVPN这条线是没问题，这时候你要考虑如何转发呢？Server端如何做，iptables足够了，所以说利用Iptables做ip转发，简单如下：**
    /etc/sysctl.conf  注释去掉 net.ipv4.ip_forward=1
    sysctl -p  
    Iptables做路由Ip工作相关配置：
    # Completed on Fri Aug  9 00:34:00 2019
    # Generated by iptables-save v1.6.1 on Fri Aug  9 00:50:54 2019
    *nat
    :PREROUTING ACCEPT [121:8996]
    :INPUT ACCEPT [95:7251]
    :OUTPUT ACCEPT [30:2365]
    :POSTROUTING ACCEPT [30:2365]
    -A POSTROUTING -s 10.10.1.0/24 -j SNAT --to-source 10.66.0.1
    -A POSTROUTING -s 10.10.1.0/24 -j SNAT --to-source 192.168.131.0
    COMMIT
    # Completed on Fri Aug  9 00:50:54 2019
    # Generated by iptables-save v1.6.1 on Fri Aug  9 00:50:54 2019
    *filter
    :INPUT ACCEPT [605:70173]
    :FORWARD DROP [24:1456]
    :OUTPUT ACCEPT [371:31256]
    -A INPUT -p tcp -m tcp --dport 12345 -j ACCEPT
    -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
    -A FORWARD -p tcp -m tcp --dport 12345 -j ACCEPT
    -A FORWARD -s 10.10.1.0/24 -d 192.168.131.0/24 -i tun0 -j ACCEPT
    -A OUTPUT -p tcp -m tcp --sport 12345 -j ACCEPT
    COMMIT
    # Completed on Fri Aug  9 00:50:54 2019
**上述很快就布置完成，那就在客户端开ping，192.168.131.xx，发现不通.......，因为一开始Server是Windows，排查错误没有想着客户端排查，折腾许就在服务器端抓包发现OpenVPN根本没有接入.**  
**所以调整思路，客户端抓包，果真路由的问题，因为客户端的网段也在192.168.XX.XX，下一跳的过程无法识别到底走那个网卡，按照本机网卡去跑的，客户端主机网卡去转发路由，并没有走OpenVPN这条路线，其实使用tracert追踪ip路由就可以判定如下：**  
**这明显就有问题，那么发现了问题，看一下OpenVPNCllinet网卡：**  
**客户端局域网Ip如下，所以ping
192.168.131.1的时候，走的是本机这跳网络，没有走OpenVPN，我们需要添加一条路由很明确的告诉他，如何在二层、三层走：**  
    route add 192.168.131.0 mask 255.255.255.0 10.10.1.2
**Windows下Vagrant安装：**
    Vagrant下载：https://www.vagrantup.com/downloads.html
    基础功能：
    box系列
    指令：vagrant box
    Usage: vagrant box  []
    Available subcommands:
         Add        vagrant box add [options] 
         list
         outdated
         prune
         remove
         Repackage
    Update
    pull下载各种镜像：https://app.vagrantup.com/boxes/search
    在线pull镜像：Vagrant box add https://app.vagrantup.com/generic/boxes/ubuntu1604
    vagrant up
    增加一个新的BOX之后，需要初始化init
    Vagrant init name
    查看状态
    vagrant status
    停止虚拟机
    vagrant halt
    销毁虚拟机
    Vagrant destory [name|id]
    Vagrant提供了api，可以远程调用端口，支持curl与Ruby两种格式，可以用Python封装curl实现调用.
    ★ 插件部署：
        vagrant plugin install vagrant-scp
        Vagrant global-status
    # 拷贝虚拟机
        vagrant scp /home/vincent/backend/go-dev/proxy-v default:~
    ★ 快照管理：
    创建快照：
        vagrant snapshot save your_snapshot_name
    查看快照：
        vagrant snapshot list
    恢复快照：
        vagrant snapshot restore your_snapshot_name
    删除快照：
        vagrant snapshot delete your_snapshot_name
**Vgrant只支持BOX镜像，也就是说Vgrant镜像，封装好的，如何去打包自己的镜像的？**
    1.管理查看已有的虚拟机：
    命令：VboxManage list vms
    2.进入到虚拟机目录，然后执行如下操作：
    命令：vagrant package --base ”虚拟机名称” --output 输出的os名称
    3.打包成功后提示Compressing paCkage ro : //路径
    4.vagrant box add zus2019 D:\virtualbox-1\boxtest\zus2019.box 添加打包后.box
**收集了一些常用的Vagrant指令，在这也分享一下：**
    1、vagrant box list  #box列表
    2、添加box
       vagrant box add (box_name)  (file_path)
       #添加box box_name 为box取的名称  file_path 系统镜像地址
       vagrant box add (vagrant_box)
       #添加box vagrant box网为vagrant box封装好的box镜像名称。
       #vagrant box add laravel/homestead
       #vagrant box add laravel/homestead --box-version=0.4.3
       #下载指定版本的系统镜像
    3、vagrant init (box_name)  
       #初始化 box_name 本地已安装的box名称
    4、vagrant up  #启动虚拟机
    5、vagrant ssh  #ssh登录虚拟机
    6、vagrant halt  #关掉虚拟机
    7、vagrant reload  #重启虚拟机
    8、vagrant destroy  #销毁虚拟机
    9、vagrant suspend  #虚拟机挂起
    10、vagrant status   #查看虚拟机运行状态
    11、vagrant box remove (boxname)  #删除指定的box环境
    12、vagrant package   #对开发环境进行打包  
    13、vagrant resume   #重新恢复启动
上述内容虽然看起来部署挺快的，对于没有部署过的人来说还是非常耗时间与精力.....，环境搭建不容易，且搭且珍惜。