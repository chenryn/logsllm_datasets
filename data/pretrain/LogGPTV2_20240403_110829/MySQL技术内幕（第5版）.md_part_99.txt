它。更多相关信息请参考F.7节。
来进行安装的，那么 mysql_install_db 脚本将会自动运行。否则，你需要自己运
Linux系统上通过RPM软件包来安装MySQL，或者是在MacOSX系统上使用DMG软件包
第12章MySQL的基本管理
名用户没有超级用户权限。
localhost
：:1
127.0.0.1
localhost
cobra.example.com
cobra.example.com
主机
主机
root
root
可以执行任何操作。
它允许使用主机名localhost连接本地MySQL服务器，
root
用户
root
root
root
用
户
。下表列出了那些与主机特定相关
超级用户权限
无
全部
超级用户权限
全部
全部
全部
无
行
在
---
## Page 435
且可以同时修改多个账户。
这种方法为拥有某个给定User 值的所有账户（不管它们的 Host 值是什么）设置一个密码，并
想为刚才显示的root用户或匿名用户设置密码，可以使用下面的语句来实现：
表行里的 User 列值和 Host 列值。
发现以下账户不安全：
们指定身份认证信息），然后对每一个账户使用一次SETPASSWORD语句。假设，你连接到服务器，
服务器有可能察觉不到你所做的修改，因此你必须显式地告诉它去重新读取权限表。
效。
有代表性的账户，但是有些特定的SQL语句实际依赖于你的系统上存在哪些账户。
据库。
以让所有的用户（甚至包括匿名用户）使用test数据库或者任何以test_作为名字开头的数
权限。
这个账户的 Host 和User值分别为。（与任何主机相匹配）和root，并且拥有所有的超级用户
定主机名，以root用户或者匿名用户身份连接本地服务器：
化操作里，并且发行打包程序并不知道你的主机名。
根据你所使用的密码设置方法的不同，可能还需要让服务器重新加载授权表，以使修改生
本节的其余部分将讲述如何设置root用户和匿名用户的密码。这些示例主要使用了一组具
在所有平台里，另外还有一个权限表（即 dab 表，这里未显示出来)，它包含的权限信息可
如果你登录到主机cobra.example.com上,那么特定于主机名的那些账户会允许你通过指
一种密码分配方法是：以root身份连接服务器，确定出哪些账户不安全（因为没有为它
，服务器通过使用权限表的内存副本来实现访问控制。对于某些修改user表密码的方法，
mySql>FLUSH PRIVILEGES;
mysql>
mysql> UPDATE mysql.user SET Password=PASSWoRD('roOtpass') WHERE User='root';
可以替代 SET PASSWORD 语句的另一种方法是使用 UPDATE 语句直接修改user 表。
mysql>
mysql> SET
可以使用 SET PASSWORD 语句分配这些账户的密码。在语句中指定账户名字时，应该采用
mysql> SELECT Host,User FROM mysql.user
%mysql-u root
在 Windows里，安装程序可能会让你选择创建一个可以从任何地方进行连接的root 账户。
%mysql -h cobra.example.com -u root
在Windows 系统里，你看不到这些账户，因为那些权限表都包括在 MySQL发行包的预初始
mysql>
ySql> SET PASSWORD FOR
sql>
sql>
cobra.example.com
::1
127.0.0.1
cobra.example.com
localhost
Host
localhost
->WHERE Password =!
UPDATE mysql.user
SET
SET
SET
SET
PASSWORD
PAS
PASSWORD
PASSWORD
SSWORD
SSWORD
，下面这几条语句可以设置所有root账户和匿名用户账户的密码：
FOR
FOR
FOR
FOR
IUser
root
root
root
root
'@'localhost'
root'@'localhost'= PAsswoRD('rootpass'）;
'root'
'root'@'cobra.example.com'= PASswoRD('rootpass');
（如果User 值为空白，那么user_name值为空字符串：。）要
AND plugin = ';
'@'127.0.0.1*
=PASSWoRD(anonpass');
12.1保护新安装的MySQL
，可以用
415
---
## Page 436
了不让服务器在你操作的同时更新表，就需要关闭服务器。既想要保持服务器运行，又想要偶
能够访问它。不过，有时候也会需要把服务器停止一下。例如，当你在重定位数据目录时，为
12.2
这个选项文件，并自动使用列在其中的密码。要想改写它，并显式指定“没有密码”，可以使用
地方设置了一个选项文件，其中包含有用于访问以前安装的那个服务器的密码。mysql会找到
并给出下面的出错信息：
你可能会发现，当你在不提供密码的情况下试图去连接这个新服务器时，它会拒绝你的连接，
12.1.2为附加服务器设置密码
你在连接服务器时，要根据需要加上它们。
接服务器时都需要指定密码。为简明起见，本章后面各节里的很多例子都省略了-u和-p 选项。
出正确的密码。特别是，在不知道密码的情况下，任何人都无法以 root 身份连接服务器：
怪现象。关于现象背后的更多细节，请仔细阅读那节的内容。
非匿名账户的工作。如果想保留匿名账户，那么你可能必须要处理在13.4.4节里描述的那个奇
位置安
语句。
否则强烈建议删除它们。可以使用DROPUSER语句来删除匿名账户：
--skip-password选项来实现：
语句紧跟在UPDATE语句之后的目的。
则必须显式地通知服务器重新加载这些权限表。这就是在上面的示例里，FLUSH PRIVILEGES
会自动重新读取它们,以更新这些表在内存里的副本。如果使用 UPDATE 语句直接修改uSer 表，
416
MySQL 管理员的一项基本职责就是，保证 mysqld服务器尽可能长时间地运行，以便用户
在为账户设置好密码（并根据情况重新加载了权限表）之后，每次连接服务器时将必须给
删除匿名用户账户的一个好处是，可以提高安全性。另一个好处是，它可以大大简化设置
另一种处理匿名用户账户的方法是把它们彻底删除掉。除非你有特定的原因需要保留它们，
这一策略也适用于其他的 MySQL客户端程序，如mysqladmin。
奇怪！你并没有指定密码，可是服务器为什么会说它收到了密码呢？这通常表明你在某个
%mysql -u root
安装了MySQL，并打算为安装在同一台计算机的另一个位置里的新服务器设置密码，那么
% mysql -u root
对于 DROP USER 语句，服务器会自动重新读取权限表，因此不需要 FLUSH PRIVILEGES
当使用 SET PASSWORD 语句更改密码时，服务器会觉察到你已对权限表进行了修改，并且
更
8mysql -u root --skip-password
(using password:YEs)
ERROR
前面的指导是假设你在以前未安装过MySQL的系统上建立密码。不过，如果你已在某个
从此刻起，无论是mysql 程序，
mysql>
Enter password:rootpass
mysql> DROP USER '@'localhost';
多关于使用多个服务器的讨论请参考12.9节。
mysql -p-u root
安排MySQL服务器的启动和关闭
第12章MySQL的基本管理
1045 (28000):Access denied for userroot'@'localhost'
，还是像mysqladmin 和 mysqldump 那样的其他程序，在连
---
## Page 437
12.2.1.1用无特权的登录账户运行服务器
服务器，才能从根本上避免这个问题。
致服务器在以某个用户身份运行时无法访问某些数据库和表。只有固定以同一个用户身份运行
出现权限不一致的问题。这时，在数据目录里创建的文件和目录会拥有不同的所属模式，会导
需要更改自己的用户ID，以一个无特权用户的身份运行。
操作再需要root 权限。这意味着，如果以root身份启动服务器，则应该告知它在启动过程中
要）。服务器需要root 权限来访问和管理MySQL数据目录的内容，除此以外，几乎没有什么
从而放弃root的权限，
运行的进程，因
它具有该用户对文件的读、
时，其意思是，服务器进程与该用户Unix登录账户的用户ID是相关联的，并且在文件系统里，
令将用户转换至root，
登录账户来运行服务器进行选择。如果手动启动服务器，那么服务器会以登录时的Unix用户身
一下应该使用哪一个登录账户来启动它。在像Unix这样的多用户操作系统里，需要对使用哪
设置好之后
部分在操作系统启动时自动运行。（事实上，在正常的操作环境里，当你根据需要把所有内容都
12.2.1
很多不同，
服务器进行讨论，以便让你有能力根据需要执行它们。这些操作过程在Unix和 Windows 里有
份
尔能停止它一
一般情况下，应该对所有进程的权限进行限制，除非它真的需要root访问权限（mysqla不需
放弃一些特定的权限。
运行。例如，以paul身份登录并启动服务器，那么它会以 paul身份运行。如果使用 su命
每一次都应该以同一个用户身份来运行服务器。当服务器不定时以不同用户权限运行时，
要想将 mysqld设置为以无特权的非 root 用户运行，可以遵循以下步骤。
口
口服务器创建的文件都属于 root以外的另一个无特权账户。例如，拥有 FILE 权限的
口不会有人将服务器作为一个安全漏洞来利用，以获得root访问权限。
使用root以外某个单独的无特权账户来从事与MySQL有关的活动具有以下几个好处。
请记住，在
在Unix里，MySQL服务器可以通过命令行手动启动。也可以将其作为标准启动过程的-
口
业将会被列在root 的crontab 文件里，而其他所有事件都会以 root 身份定期执行。
录里，便单独有一个针对MySQL用户的文件。如果没有这个文件，MySQL的cron
时也更容易弄清系统里哪些内容是与MySQL有关的。例如，在存放crontab文件的目
另外创建一个专门用于MySQL有关活动的账户，在概念上和管理上都会更加清晰，
你不小心以root用户身份执行了某个文件系统操作，那么后果可能会不堪设想。
当用root以外的无特权用户身份登录时，
文件越少越好。
MySQL用户便无法让服务器往root所拥有的文件里写入内容。在系统里，像这样的
后，便可以按这种方式来启动服务器。）但是在讨论如何启动服务器之前，需要先考店
在Unix里运行MySQL服务器
，下面将分别对它们进行讨论。
在Unix里，MySQL服务器的启动过程要实现以下两个目标。
—对于这样的两难问题，本书也无能为力。但是，我们还是要对如何启动和关闭
，然后再启动服务器，那么它就会以root身份运行。
变为一个无特权的普通用户。这样，该进程的危险程度会大大降低。
可以做任何事情，所以非常危险。避免这些危险的一种方法是让服多
、写权限。这里隐含着某些安全问题，特别是对于以root用户身
人root身份启动的进程，能够将它们的用户ID更改为另外的账户，
12.2安排MySQL服务器的启动和关闭
，执行MySQL的管理任务会更加安全。如果
417
作
同
面
务
份
个
虑
---
## Page 438
以从命令行手动启动它，也可以在系统启动过程中自动启动它。相关的启动方法包括以下几种。
12.2.1.2在Unix里启动服务器
ID，只会以 mysql 身份运行。那正是你所希望的事情，因此不用理会这个警告。
会产生一个警告—只有root 用户才能使用该选项。这
可以将下列内容放置在/etc/my.cnf 中：
的root 用户来执行启动操作，因此初始化为该过程一部分的所有进程默认都具有root权限。
以及将服务器设置为在操作系统启动期间被调用的情况，都应该这样做。Unix系统会以Unix
身份来调用时，才能将自己的用户ID切换至mysql。对于以root身份手动运行服务器的情况，
以非标准布局安装的时候。
节内容，可以获得更多关于设置所有权和进行模式分配的指导信息，尤其是在你的MySQL 是
可以访问：
就
四
这
mysql用户所
带
系
此时，需要以root身份来完成此项工作。
名和组名来替换 mysql。
来