::: variablelist
[`krb5_child.log`{.literal}]{.term}
:   Kerberos 身份验证中涉及的短期帮助程序进程的日志文件。
[`ldap_child.log`{.literal}]{.term}
:   与 LDAP 服务器通信的简短帮助程序进程的日志文件，涉及获取 Kerberos
    票据。
[`sssd_.log`{.literal}]{.term}
:   对于 sssd.conf 文件中的每个域部分，SSSD 服务将有关与 LDAP
    服务器通信的信息记录到单独的日志文件。例如，在名为 example.com 的
    IdM 域的环境中，SSSD 服务将其信息记录在名为 sssd_example.com.log
    的文件中。如果主机直接与名为 ad.example.com 的 AD
    域集成，信息将记录到名为 sssd_ad.example.com.log 的文件。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您有一个 IdM 环境以及与 AD 域的跨林信任，则有关 AD
    域的信息仍会记录到 IdM 域的日志文件中。
    类似地，如果主机直接集成到 AD
    域，则任何子域的信息都会写入到主域的日志文件中。
    :::
[`selinux_child.log`{.literal}]{.term}
:   用于检索和设置 SELinux 信息的短生命帮助器进程的日志文件。
[`sssd.log`{.literal}]{.term}
:   SSSD 监控并与其响应器和后端进程通信的日志文件。
[`sssd_ifp.log`{.literal}]{.term}
:   InfoPipe 响应器的日志文件，它提供了一个可通过系统总线访问的公共
    D-Bus 接口。
[`sssd_nss.log`{.literal}]{.term}
:   用于检索用户和组信息的 Name Services Switch (NSS) 响应器的日志文件。
[`sssd_pac.log`{.literal}]{.term}
:   Microsoft Privilege Attribute 证书 (PAC) 响应器的日志文件，从 AD
    Kerberos 票据收集 PAC，并从 PAC 中生成 AD 用户的信息，从而避免直接从
    AD 请求它。
[`sssd_pam.log`{.literal}]{.term}
:   可插拔验证模块 (PAM) 响应器的日志文件。
[`sssd_ssh.log`{.literal}]{.term}
:   SSH 响应器进程的日志文件。
:::
:::
::: section
::: titlepage
## []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#_sssd_logging_levels}SSSD 日志记录级别 {.title}
:::
设置一个 debug 级别后，也会启用它以下的所有 debug 级别。例如，把 debug
级别设置为 6 后，也会启用 debug 级别 0 到 5。
::: table
[]{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#idm140587525403440}
**表 8.1. SSSD 日志记录级别**
::: table-contents
  级别   Description
  ------ -------------------------------------------------------------------------------------------------------------
  0      [**致命故障**]{.strong}。阻止 SSSD 服务启动或导致它终止的错误。这是 RHEL 8.3 及更早版本的默认调试日志级别。
  1      [**关键故障**]{.strong}。错误没有导致 SSSD 服务被终止，但至少有一个主要功能无法正常工作。
  2      [**严重故障**]{.strong}。这个错误声明特定请求或操作失败。这是 RHEL 8.4 及之后的版本的默认调试日志级别。
  3      [**小故障**]{.strong}。在级别 2 中捕获的操作失败的错误。
  4      [**配置设置**]{.strong}。
  5      [**功能**]{.strong}数据。
  6      跟踪[**操作**]{.strong}功能的消息。
  7      跟踪[**内部控制**]{.strong}功能的消息。
  8      [**功能内部**]{.strong}变量的内容。
  9      极[**低级别跟踪**]{.strong}信息。
:::
:::
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_enabling-detailed-logging-for-sssd-in-the-sssdconf-file_assembly_troubleshooting-authentication-with-sssd-in-idm}在 sssd.conf 文件中为 SSSD 启用详细日志记录 {.title}
:::
默认情况下，RHEL 8.4 及更新版本中的 SSSD 服务仅记录严重故障（调试级别
2），但不记录在对身份验证问题进行故障排除所需的详细级别。
要在 SSSD 服务重启过程中永久启用详细的日志记录，请在
`/etc/sssd/sssd.conf`{.literal} 配置文件的每个部分添加
`debug_level=`{.literal} 选项，其中 ``{.literal}
值是一个 0 到 9 之间的数字。debug 级别 0 到 3 会记录大错误的日志，级别 8
和更高级别会提供大量详细的日志消息。[**级别 6**]{.strong}
是调试身份验证问题的一个良好起点。
::: itemizedlist
**先决条件**
-   您需要 root 密码来编辑 `sssd.conf`{.literal} 配置文件并重新启动 SSSD
    服务。
:::
::: orderedlist
**流程**
1.  在文本编辑器中打开 `/etc/sssd/sssd.conf`{.literal} 文件。
2.  将 `debug_level`{.literal} 选项添加到文件的每个部分，并将 debug
    级别设置为您选择的详细程度。
    ``` literallayout
    [domain/example.com]
    debug_level = 6
    id_provider = ipa
    ...
    [sssd]
    debug_level = 6
    services = nss, pam, ifp, ssh, sudo
    domains = example.com
    [nss]
    debug_level = 6
    [pam]
    debug_level = 6
    [sudo]
    debug_level = 6
    [ssh]
    debug_level = 6
    [pac]
    debug_level = 6
    [ifp]
    debug_level = 6
    ```
3.  保存并关闭 `sssd.conf`{.literal} 文件。
4.  重启 SSSD 服务以加载新的配置设置。
    ``` literallayout
    [root@server ~]# systemctl restart sssd
    ```
:::
::: itemizedlist
**其它资源**
-   [SSSD
    日志文件和日志记录级别](#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#ref_sssd-log-files-and-logging-levels_assembly_troubleshooting-authentication-with-sssd-in-idm "SSSD 日志文件和日志记录级别"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_enabling-detailed-logging-for-sssd-with-the-sssctl-command_assembly_troubleshooting-authentication-with-sssd-in-idm}使用 sssctl 命令为 SSSD 启用详细的日志记录 {.title}
:::
默认情况下，RHEL 8.4 及更新版本中的 SSSD 服务仅记录严重故障（调试级别
2），但不记录在对身份验证问题进行故障排除所需的详细级别。
您可以在命令行中使用 `sssctl debug-level `{.literal} 命令更改
SSSD 服务的 debug 级别，其中 ``{.literal} 是 0 到 9
之间的一个数字。debug 级别 0 到 3 会记录大错误的日志，级别 8
和更高级别会提供大量详细的日志消息。级别 6
是调试身份验证问题的一个良好起点。
::: itemizedlist
**先决条件**
-   您需要 root 密码来运行 `sssctl`{.literal} 命令。
:::
::: itemizedlist
**流程**
-   使用 sssctl debug-level 命令将所选的调试级别设置为您所需的详细程度。
    ``` literallayout
    [root@server ~]# sssctl debug-level 6
    ```
:::
::: itemizedlist
**其它资源**
-   [SSSD
    日志文件和日志记录级别](#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#ref_sssd-log-files-and-logging-levels_assembly_troubleshooting-authentication-with-sssd-in-idm "SSSD 日志文件和日志记录级别"){.link}
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_gathering-debugging-logs-from-the-sssd-service-to-troubleshoot-authentication-issues-with-an-idm-server_assembly_troubleshooting-authentication-with-sssd-in-idm}从 SSSD 服务收集调试日志，对 IdM 服务器的身份验证问题进行故障排除 {.title}
:::
如果您在尝试以 IdM 用户身份对 IdM
服务器进行身份验证时遇到问题，请在服务器上的 SSSD
服务中启用详细的调试日志，并收集尝试检索用户信息的日志。
::: itemizedlist
**先决条件**
-   您需要 root 密码来运行 `sssctl`{.literal} 命令并重新启动 SSSD 服务。
:::
::: orderedlist
**流程**
1.  在 IdM 服务器上启用详细的 SSSD 调试日志。
    ``` literallayout
    [root@server ~]# sssctl debug-level 6
    ```
2.  对于遇到身份验证问题的用户，在 SSSD
    缓存中使相关的对象无效，这样使您不会绕过 LDAP 服务器来从缓存的 SSSD
    中获取信息。
    ``` literallayout
    [root@server ~]# sssctl cache-expire -u idmuser
    ```
3.  通过删除旧的 SSSD 日志来最大程度减少数据集的故障排除。
    ``` literallayout
    [root@server ~]# sssctl logs-remove
    ```
4.  尝试切换至遇到身份验证问题的用户，同时在尝试前后收集时间戳。这些时间戳进一步缩小了数据集的范围。
    ``` literallayout
    [root@server sssd]# date; su idmuser; date
    Mon Mar 29 15:33:48 EDT 2021
    su: user idmuser does not exist
    Mon Mar 29 15:33:49 EDT 2021
    ```
5.  [*（可选）如果您不想继续收集详细的*]{.emphasis} SSSD 日志，请降低
    debug 级别。
    ``` literallayout
    [root@server ~]# sssctl debug-level 2
    ```
6.  查看 SSSD 日志，了解失败请求的信息。例如，检查
    `/var/log/sssd/sssd_example.com.log`{.literal} 文件表明 SSSD
    服务没有在 `cn=accounts,dc=example,dc=com`{.literal} LDAP
    子树中找到用户。这可能表示用户不存在，或者存在于其他位置。
    ``` literallayout
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [dp_get_account_info_send] (0x0200): Got request for [0x1][BE_REQ_USER][name=PI:EMAIL]
    ...
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sdap_get_generic_ext_step] (0x0400): calling ldap_search_ext with [(&(uid=idmuser)(objectclass=posixAccount)(uid=)(&(uidNumber=)(!(uidNumber=0))))][cn=accounts,dc=example,dc=com].
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sdap_get_generic_op_finished] (0x0400): Search result: Success(0), no errmsg set
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sdap_search_user_process] (0x0400): Search for users, returned 0 results.
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sysdb_search_by_name] (0x0400): No such entry
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sysdb_delete_user] (0x0400): Error: 2 (No such file or directory)
    (Mon Mar 29 15:33:48 2021) [sssd[be[example.com]]] [sysdb_search_by_name] (0x0400): No such entry
    (Mon Mar 29 15:33:49 2021) [sssd[be[example.com]]] [ipa_id_get_account_info_orig_done] (0x0080): Object not found, ending request
    ```
7.  如果您无法确定导致身份验证问题的原因：
    ::: orderedlist
    1.  收集您最近生成的 SSSD 日志。
        ``` literallayout
        [root@server ~]# sssctl logs-fetch sssd-logs-Mar29.tar
        ```
    2.  创建一个红帽技术支持问题单并提供：
        ::: orderedlist
        1.  SSSD 日志：`sssd-logs-Mar29.tar`{.literal}
        2.  与日志对应的请求的控制台输出，包括时间戳和用户名：
            ``` literallayout
            [root@server sssd]# date; id idmuser; date
            Mon Mar 29 15:33:48 EDT 2021
            id: ‘idmuser’: no such user
            Mon Mar 29 15:33:49 EDT 2021
            ```
        :::
    :::
:::
:::
::: section
::: titlepage
# []{#assembly_troubleshooting-authentication-with-sssd-in-idm_configuring-and-managing-idm.html#proc_gathering-debugging-logs-from-the-sssd-service-to-troubleshoot-authentication-issues-with-an-idm-client_assembly_troubleshooting-authentication-with-sssd-in-idm}从 SSSD 服务收集调试日志，以对 IdM 客户端的身份验证问题进行故障排除 {.title}
:::
如果您在尝试以 IdM 用户身份向 IdM
客户端进行身份验证时遇到问题，请验证您可以检索 IdM
服务器上的用户信息。如果您无法在 IdM 服务器上检索用户信息，您将无法在
IdM 客户端（从 IdM 服务器检索信息）中检索它。
确认身份验证问题不源自 IdM 服务器后，从 IdM 服务器和 IdM 客户端收集 SSSD
调试日志。
::: itemizedlist
**先决条件**
-   用户仅在 IdM 客户端而不是 IdM 服务器中存在身份验证问题。
-   您需要 root 密码来运行 `sssctl`{.literal} 命令并重新启动 SSSD 服务。
:::
::: orderedlist
**流程**
1.  [**在客户端上：**]{.strong}在文本编辑器中打开 /etc/sssd/sssd.conf
    文件。
2.  [**在客户端：**]{.strong} 将 `ipa_server`{.literal} 选项添加到文件的
    `[domain]`{.literal} 部分，并将其设置为 IdM 服务器。这可避免 IdM
    客户端自动发现其他 IdM
    服务器，从而将此测试限制为一个客户端和一个服务器。
    ``` literallayout
    [domain/example.com]
    ipa_server = server.example.com
    ...
    ```