P
的值
图中还显示了与栈中状态对应的文法符号白
容的序列显示
在处理输人idid+id时，栈和输)
在 ACTION表项中给出,这个值和在输人
请注意，对于终结符号α，GOTO［s，α］
160
4）空白表示报错。
3）
acc 表示接受。
在第1行中,LR 语法分析
示在图4-38中。为清晰起！
目
是如何得到的，但很
：我们还没有解释图
在第2
图
14-38
while(1)
α为uS的第-
0
００００００００
00000
行，状态符号5
else调用错误情
一个 LR
1111
栈
else
else
９9９9
539
图4-37中的
从令将输
(AC
出产生式A
GOro[t, A]
EEEE
一个符
语法分析器处理输人 id*id+id；
++++
号
图
符
快就
关恢复例程；
CTION(s,a]
崇
A的
4-36
复
1 4-37
GO-
号
见
?
被
Y
会
LR 语法分析程序
移人i）{
压人到
动作部分第
***
接受）break;/*语法分析完成
输
状态
++
++
+
+
十
+
Ⅱ06
栈
PPPPP
PPPPP
的的明
中
$
的
图4-37
0行
而
认人据据据授
据
认据据
次据据认
、id
FT
+
←←
←←
从输
表达式文法的语法分析表
←←←
↑
725
9
1的各个步骤
列中的
ACTION
L
归约
人中被
动
作
建
是
9
除
69
1
表示应该
GOTO
2
2
F
第
9
4
30
3
---
## Page 177
所示。首先考虑项集 Io：
例4.47’让我们为增广表达式文法构造 SLR 分析表。这个文法的规范LR(0)项集族如图 4-31
不会在这里处理向前看多个符号的语法分析器。
SLR(1)语法分析表的文法被称为是 SLR(1)的。我们常常省略“SLR”后面的“(1)”
析表。使用 G的 SLR(1)分析表的 LR 语法分析器称为G 的 SLR(1)语法分析器。一个具有
=1,，那么 GOTO[i,A]=j。
下，
约A→α”。这里A不等于 S"。
这里α必须是一个终结符号。
算法4.46构造一个 SLR语法分析表。
们知道输人文法的每个非终结符号A的 FOLLOW（A）（见4.4节）。
函数。
们通过添加新的开始符号S'得到增广文法G'。我们根据C构造出G'的规范项集族C以及COTO
为 SLR 语法分析器。另外两种 SLR 方法通过向前看信息来增强分析能力。
方法构造得到的语法分析表称为 SLR 语法分析表，并把使用 SLR 语法分析表的 LR 语法分析器称
4.6.4 构造 SLR 语法分析表
态
② 如果[A-→α·］在1;中，那么对于FOLLOW（A)中的所有α，将 ACTION[i，α］设置为“归
3 被压到栈中。现在我们得到第3行中的格局。下面的各个动作的执行方式与此类似。
语法分析
然后,使用下面的算法就可以构造出这个语法分析表中的 ACTION和 GOTO 条目。它要求我
SLR方法以 4.5 节介绍的 LR(0)项和 LR(0)自动机为基础。也就是说，给定--个文法G，我
构造语法分析表的 SLR 构造方法是研究 LR 语法分析技术的很好的起点。我们把使用这种
3）状态i对于各个非终结符号A的 GOTO 转换使用下面的规则构造得到：如果GOTO(I，A)
由算法4.46得到的由ACTION函数和GOTO 函数组成的语法分析表被称为文法G的SLR(1)分
这个算法无法生成--个语法分析器。
5）语法分析器的初始状态就是根据[S'→·S]所在项集构造得到的状态。
4）规则（2)和（3）没有定义的所有条目都设置为“报错”。
如果根据上面的规则生成了任何冲突动作，我们就说这个文法不是SLR(1)的。在这种情况
③ 如果[S'一→S·］在I;中，那么将 ACTION[i，$］设置为“接受”
① 如果[A→α·αβ]在I;中并且 GOTO(1，α）=1,那么将 ACTION[i,a］设置为“移人j"
2）根据I;构造得到状态i。状态i的语法分析动作按照下面的方法决定：
1）构造G'的规范LR(0)项集族C=lo，I，…，I。
输出：G的 SLR 语法分析表函数 ACTION 和 GOTO
输入：一个增广文法G'。
然后，*变成了当前的输人符号，而状态5在输人为*时的动作是根据产生式F一→id进行归
方法：
·←
E—·T
+·
E'→·E
，因为我们
161
0
口
---
## Page 178
算符。文法 4.49 对应的规范 LR(0)项集族显示在图 4-39 中。
虑包含下列产生式的文法：
例4.48
相同。也就是说，E→E+T的编号为1，E→T的编号为2，依此类推。
ACTION 和GOTO表。在该图中，归约动作中的产生式编号和它们在原文法(4.1）中的出现顺序
第二个项使得 ACTION[2，＊”=移人7。按照这个方式继续推导，我们就得到了图4-37所示的
因为FOLLOW（E）=丨$，+，），第一个项使得
考
第
id］=移人5。I中的其他项没有生成动作。
虑l2：
第一个项使得 ACTION[1，$］”=接受，第二个项使得ACTION[1，+］=移人6。下一步
162
将L和R分别看作代表左值和右值的文法符号，将＊看作是代表“左值所指向的内容”的运
其中的项F→·（E）使得条目ACTION[O，（］=移人4，项F→·id使得条目 ACTION[0,
2.8.3节介绍过，--个左值表示了--个内存位置,而右值是一个可以存放在某个位置上的值。
每个 SLR(1)文法都是无二义性的，但是存在很多不是 SLR(1）的无二义性文法。
5
I:
Io:
图4-39
1
S→R.
S↑S
T
↑
↑.
←←
-id
T
文法(4.49)对应的规范 LR(0)项集族
=R
R--→L
S-→L = RI R
E→→E· + T
，现在考虑I：
7-→T.
E-→T
·