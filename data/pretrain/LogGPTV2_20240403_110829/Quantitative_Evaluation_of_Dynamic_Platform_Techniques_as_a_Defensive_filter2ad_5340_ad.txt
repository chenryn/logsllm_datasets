### 420
H. Okhravi, J. Riordan, and K. Carter

#### Metrics for Attack Success
The probability of an attacker achieving a specific goal, such as flipping a coin to get ten or ninety-two heads in a row, can be modeled using metrics based on the mean time until the attacker's success. These metrics can be analyzed similarly to a steady-state model. The expected time \( L(n) \) for the attacker to compromise the system can be calculated as:

\[
L(n) = n + \frac{1 - P_{rv}}{P_{rv} (1 - P_{rn-1})} \left( \frac{P_{rn-1}}{1 - P_{rn-1}} \right) + \frac{1}{1 - P_{rn-1}}
\]

where \( P_{rv} \) is the probability of a successful attack on a single platform, and \( P_{rn-1} \) is the probability of the attacker failing to compromise \( n-1 \) platforms. This formula allows us to evaluate the expected time before the adversary can take down the service.

### 7 Simulation Results
To validate our analysis and the generalized model of dynamic platforms, we simulated the Markov chain corresponding to our testbed experiments. Our testbed assumed migration with no immediate repeat, continuous control, and fractional payoff, which were modeled using the Markov chain described in Section 6.3. We ran a Monte Carlo simulation with the same parameters as our testbed: each platform was active for 40-60 seconds, three out of five platforms were vulnerable, exploits were launched at random times during each trial, and each trial lasted 15 minutes. The results are shown in Figure 8, with testbed measurements overlaid for comparison.

As observed, the simulation results closely match the testbed measurements, validating that our model captures the major effects contributing to the effectiveness of dynamic platform techniques. The smoothing effects (e.g., random duration on a platform and random exploit launch times) are captured in the simulation, but small discrepancies may arise due to factors like networking delays and OS scheduling, which are not included in the model.

### 8 Lessons Learned
Our work in analyzing dynamic platform techniques has provided several key insights:
1. **Complexity of Effects**: Many counterintuitive effects contribute to the behavior of dynamic platform systems. Understanding these effects allows for accurate first-order models.
2. **Real-World Experiments**: Testbed experiments using real-world technologies can reveal complex dynamics and help quantify major contributing effects.
3. **Threat Models**: Threat models are crucial for understanding the protection provided by defensive techniques and for quantitatively measuring their effectiveness. Different threat models can show how a technique may protect against one type of attack while degrading security for another.
4. **Complementary Approaches**: Testbed experiments, abstract analysis, and modeling and simulation can be used together to perform comprehensive quantitative evaluations.
5. **Cleanup Features**: Features like cleanup can significantly reduce the likelihood of successful attacks. Quantitative evaluations can help in deciding which features to support for maximum protection with minimal performance overhead.

### 9 Related Work
Several dynamic platform techniques have been proposed in the literature. For example, the Self-Cleansing Intrusion Tolerance (SCIT) project rotates virtual machines to reduce exposure time. Other projects, such as the Resilient Web Service (RWS), use virtualization-based systems to detect and restore from intrusions. High-level forms of temporal platform changes have also been proposed to build intrusion-tolerant systems, although the diversification strategies vary. Compiler-based multivariant and N-variant systems propose alternative ways to achieve platform diversity. On the evaluation side, various models have been developed to measure the effectiveness of diversity-based moving target techniques and to compare different platforms' attack surfaces.

### 10 Conclusion
In this paper, we quantitatively studied cyber defenses based on dynamic platform techniques. We used testbed experiments to collect data and performed an abstract analysis to explain the contributing effects. We then developed a generalized model and validated it through simulations. Our results suggest that while dynamic platforms are effective against long-duration attacks, they can be detrimental for short-duration attacks. Future work will focus on further experiments, extending the analysis to other techniques, and studying adaptive adversaries.

### Acknowledgement
We thank Charles Wright, Mark Rabe, Paula Donovan, and William Streilein for their insights and contributions to this work.

### References
[1] Networking, F., Research, I.T., (NITRD), D.: Federal Cybersecurity Game-change R&D Themes (2012),
http://cybersecurity.nitrd.gov/page/federal-cybersecurity-1
...
[34] Arlat, J., Kanoun, K., Laprie, J.C.: Dependability modeling and evaluation of software fault-tolerant systems. IEEE Trans. Comput. 39(4), 504â€“513 (1990)