(192))(21))(59))))(((lambda s_190 lambda s_94 ((190)(94))(190))((lambda s_247 lambda 
s_26 lambda s_120 ((247)(120))(26))(68)))(59)))(lambda s_1 lambda s_0 0))(lambda s_176 
lambda s_75 176))))(((lambda s_145 lambda s_241 ((lambda s_190 lambda s_116 ((190)
(190))(116))(((lambda s_101 lambda s_190 ((101)(190))(101))(241))((lambda s_46 lambda 
s_99 lambda s_143 ((46)(143))(99))(145))))(((lambda s_60 lambda s_6 ((60)(6))(60))
((lambda s_124 lambda s_226 lambda s_148 ((124)(148))(226))(241)))(145)))(lambda s_0 
lambda s_1 1))(lambda s_125 lambda s_39 125))))(((lambda s_218 lambda s_143 ((lambda 
s_59 lambda s_224 ((59)(59))(224))(((lambda s_120 lambda s_118 ((120)(118))(120))(143))
((lambda s_234 lambda s_14 lambda s_192 ((234)(192))(14))(218))))(((lambda s_74 lambda 
s_222 ((74)(222))(74))((lambda s_252 lambda s_170 lambda s_5 ((252)(5))(170))(143)))
(218)))(lambda s_0 lambda s_1 1))(lambda s_149 lambda s_230 149))))(((lambda s_107 
lambda s_16 ((lambda s_148 lambda s_218 ((148)(148))(218))(((lambda s_217 lambda s_40 
((217)(40))(217))(16))((lambda s_144 lambda s_58 lambda s_148 ((144)(148))(58))(107))))
(((lambda s_2 lambda s_80 ((2)(80))(2))((lambda s_104 lambda s_100 lambda s_92 ((104)
(92))(100))(16)))(107)))(lambda s_1 lambda s_0 1))(lambda s_34 lambda s_98 98))))
(((lambda s_247 lambda s_107 ((lambda s_134 lambda s_130 ((134)(134))(130))(((lambda 
s_68 lambda s_110 ((68)(110))(68))(107))((lambda s_16 lambda s_247 lambda s_204 ((16)
(204))(247))(247))))(((lambda s_66 lambda s_56 ((66)(56))(66))((lambda s_195 lambda 
s_149 lambda s_64 ((195)(64))(149))(107)))(247)))(lambda s_0 lambda s_1 1))(lambda s_43 
lambda s_61 43))))(((lambda s_140 lambda s_222 ((lambda s_118 lambda s_43 ((118)(118))
(43))(((lambda s_135 lambda s_178 ((135)(178))(135))(222))((lambda s_239 lambda s_131 
lambda s_137 ((239)(137))(131))(140))))(((lambda s_65 lambda s_12 ((65)(12))(65))
((lambda s_39 lambda s_251 lambda s_108 ((39)(108))(251))(222)))(140)))(lambda s_0 
lambda s_1 0))(lambda s_124 lambda s_2 2))))(((lambda s_69 lambda s_248 ((lambda s_184 
lambda s_64 ((184)(184))(64))(((lambda s_161 lambda s_24 ((161)(24))(161))(248))
((lambda s_10 lambda s_92 lambda s_98 ((10)(98))(92))(69))))(((lambda s_1 lambda s_56 
((1)(56))(1))((lambda s_146 lambda s_10 lambda s_9 ((146)(9))(10))(248)))(69)))(lambda 
s_1 lambda s_0 1))(lambda s_67 lambda s_51 51))))(((lambda s_22 lambda s_50 ((lambda 
s_135 lambda s_210 ((135)(135))(210))(((lambda s_48 lambda s_164 ((48)(164))(48))(50))
((lambda s_154 lambda s_118 lambda s_49 ((154)(49))(118))(22))))(((lambda s_122 lambda 
s_136 ((122)(136))(122))((lambda s_107 lambda s_8 lambda s_165 ((107)(165))(8))(50)))
(22)))(lambda s_1 lambda s_0 1))(lambda s_107 lambda s_116 116))))(((lambda s_220 
lambda s_199 ((lambda s_123 lambda s_204 ((123)(123))(204))(((lambda s_248 lambda s_110 
((248)(110))(248))(199))((lambda s_4 lambda s_90 lambda s_133 ((4)(133))(90))(220))))
(((lambda s_250 lambda s_111 ((250)(111))(250))((lambda s_161 lambda s_179 lambda s_214 
((161)(214))(179))(199)))(220)))(lambda s_0 lambda s_1 0))(lambda s_154 lambda s_175 
175))))(((lambda s_6 lambda s_83 ((lambda s_2 lambda s_213 ((2)(2))(213))(((lambda 
s_207 lambda s_220 ((207)(220))(207))(83))((lambda s_29 lambda s_99 lambda s_238 ((29)
(238))(99))(6))))(((lambda s_214 lambda s_186 ((214)(186))(214))((lambda s_203 lambda 
s_247 lambda s_161 ((203)(161))(247))(83)))(6)))(lambda s_1 lambda s_0 1))(lambda s_235 
lambda s_113 113))))(((lambda s_68 lambda s_118 ((lambda s_63 lambda s_186 ((63)(63))
(186))(((lambda s_11 lambda s_75 ((11)(75))(11))(118))((lambda s_79 lambda s_46 lambda 
s_15 ((79)(15))(46))(68))))(((lambda s_251 lambda s_211 ((251)(211))(251))((lambda s_26 
lambda s_41 lambda s_35 ((26)(35))(41))(118)))(68)))(lambda s_1 lambda s_0 1))(lambda 
s_163 lambda s_185 185))))(((lambda s_9 lambda s_239 ((lambda s_246 lambda s_163 ((246)
(246))(163))(((lambda s_175 lambda s_221 ((175)(221))(175))(239))((lambda s_199 lambda 
s_54 lambda s_98 ((199)(98))(54))(9))))(((lambda s_178 lambda s_109 ((178)(109))(178))
((lambda s_48 lambda s_61 lambda s_226 ((48)(226))(61))(239)))(9)))(lambda s_1 lambda 
s_0 1))(lambda s_14 lambda s_44 44))))(((lambda s_192 lambda s_123 ((lambda s_250 
lambda s_66 ((250)(250))(66))(((lambda s_13 lambda s_180 ((13)(180))(13))(123))((lambda 
s_58 lambda s_206 lambda s_239 ((58)(239))(206))(192))))(((lambda s_40 lambda s_14 
((40)(14))(40))((lambda s_187 lambda s_63 lambda s_61 ((187)(61))(63))(123)))(192)))
(lambda s_1 lambda s_0 1))(lambda s_99 lambda s_194 194))))(((lambda s_218 lambda s_38 
((lambda s_180 lambda s_77 ((180)(180))(77))(((lambda s_176 lambda s_1 ((176)(1))(176))
(38))((lambda s_63 lambda s_131 lambda s_99 ((63)(99))(131))(218))))(((lambda s_51 
lambda s_148 ((51)(148))(51))((lambda s_40 lambda s_37 lambda s_22 ((40)(22))(37))
(38)))(218)))(lambda s_1 lambda s_0 0))(lambda s_231 lambda s_137 231))))(((lambda 
s_162 lambda s_43 ((lambda s_199 lambda s_9 ((199)(199))(9))(((lambda s_51 lambda s_26 
((51)(26))(51))(43))((lambda s_84 lambda s_225 lambda s_83 ((84)(83))(225))(162))))
(((lambda s_252 lambda s_112 ((252)(112))(252))((lambda s_80 lambda s_170 lambda s_187 
((80)(187))(170))(43)))(162)))(lambda s_0 lambda s_1 0))(lambda s_137 lambda s_115 
115))))(((lambda s_79 lambda s_161 ((lambda s_102 lambda s_9 ((102)(102))(9))(((lambda 
s_95 lambda s_103 ((95)(103))(95))(161))((lambda s_48 lambda s_37 lambda s_218 ((48)
(218))(37))(79))))(((lambda s_60 lambda s_253 ((60)(253))(60))((lambda s_105 lambda 
s_204 lambda s_113 ((105)(113))(204))(161)))(79)))(lambda s_0 lambda s_1 1))(lambda 
s_114 lambda s_158 114))))(((lambda s_157 lambda s_210 ((lambda s_112 lambda s_39 
((112)(112))(39))(((lambda s_238 lambda s_131 ((238)(131))(238))(210))((lambda s_60 
lambda s_32 lambda s_192 ((60)(192))(32))(157))))(((lambda s_41 lambda s_65 ((41)(65))
(41))((lambda s_89 lambda s_31 lambda s_86 ((89)(86))(31))(210)))(157)))(lambda s_0 
lambda s_1 0))(lambda s_12 lambda s_70 70))))(((lambda s_216 lambda s_109 ((lambda 
s_164 lambda s_252 ((164)(164))(252))(((lambda s_175 lambda s_210 ((175)(210))(175))
(109))((lambda s_77 lambda s_253 lambda s_182 ((77)(182))(253))(216))))(((lambda s_186 
lambda s_18 ((186)(18))(186))((lambda s_213 lambda s_206 lambda s_93 ((213)(93))(206))
(109)))(216)))(lambda s_0 lambda s_1 0))(lambda s_59 lambda s_147 147))))(((lambda s_22 
lambda s_128 ((lambda s_45 lambda s_226 ((45)(45))(226))(((lambda s_64 lambda s_225 
((64)(225))(64))(128))((lambda s_249 lambda s_240 lambda s_148 ((249)(148))(240))
(22))))(((lambda s_233 lambda s_101 ((233)(101))(233))((lambda s_230 lambda s_31 lambda 
s_227 ((230)(227))(31))(128)))(22)))(lambda s_0 lambda s_1 1))(lambda s_90 lambda s_142 
90))))(((lambda s_69 lambda s_32 ((lambda s_211 lambda s_94 ((211)(211))(94))(((lambda 
s_160 lambda s_146 ((160)(146))(160))(32))((lambda s_217 lambda s_190 lambda s_52 
((217)(52))(190))(69))))(((lambda s_135 lambda s_75 ((135)(75))(135))((lambda s_222 
lambda s_154 lambda s_11 ((222)(11))(154))(32)))(69)))(lambda s_1 lambda s_0 0))(lambda 
s_21 lambda s_25 21))))(((lambda s_24 lambda s_192 ((lambda s_234 lambda s_235 ((234)
(234))(235))(((lambda s_115 lambda s_54 ((115)(54))(115))(192))((lambda s_21 lambda 
s_20 lambda s_73 ((21)(73))(20))(24))))(((lambda s_156 lambda s_112 ((156)(112))(156))
((lambda s_134 lambda s_214 lambda s_151 ((134)(151))(214))(192)))(24)))(lambda s_0 
lambda s_1 0))(lambda s_100 lambda s_37 37))))(((lambda s_254 lambda s_77 ((lambda s_26 
lambda s_74 ((26)(26))(74))(((lambda s_9 lambda s_47 ((9)(47))(9))(77))((lambda s_241 
lambda s_84 lambda s_12 ((241)(12))(84))(254))))(((lambda s_220 lambda s_147 ((220)
(147))(220))((lambda s_87 lambda s_107 lambda s_142 ((87)(142))(107))(77)))(254)))
(lambda s_1 lambda s_0 1))(lambda s_45 lambda s_1 1))))(((lambda s_218 lambda s_233 
((lambda s_12 lambda s_141 ((12)(12))(141))(((lambda s_214 lambda s_4 ((214)(4))(214))
(233))((lambda s_68 lambda s_201 lambda s_170 ((68)(170))(201))(218))))(((lambda s_124 
lambda s_37 ((124)(37))(124))((lambda s_107 lambda s_48 lambda s_149 ((107)(149))(48))
(233)))(218)))(lambda s_0 lambda s_1 0))(lambda s_147 lambda s_78 78))))(((lambda s_200 
lambda s_97 ((lambda s_176 lambda s_169 ((176)(176))(169))(((lambda s_96 lambda s_179 
((96)(179))(96))(97))((lambda s_87 lambda s_101 lambda s_159 ((87)(159))(101))(200))))
(((lambda s_7 lambda s_45 ((7)(45))(7))((lambda s_219 lambda s_118 lambda s_250 ((219)
(250))(118))(97)))(200)))(lambda s_1 lambda s_0 1))(lambda s_62 lambda s_130 130))))
(((lambda s_253 lambda s_104 ((lambda s_65 lambda s_203 ((65)(65))(203))(((lambda s_175 
lambda s_238 ((175)(238))(175))(104))((lambda s_36 lambda s_37 lambda s_238 ((36)(238))
(37))(253))))(((lambda s_203 lambda s_113 ((203)(113))(203))((lambda s_222 lambda s_241 
lambda s_25 ((222)(25))(241))(104)))(253)))(lambda s_0 lambda s_1 0))(lambda s_138 
lambda s_210 210))))(((lambda s_189 lambda s_55 ((lambda s_162 lambda s_242 ((162)
(162))(242))(((lambda s_242 lambda s_201 ((242)(201))(242))(55))((lambda s_80 lambda 
s_70 lambda s_117 ((80)(117))(70))(189))))(((lambda s_55 lambda s_183 ((55)(183))(55))
((lambda s_196 lambda s_120 lambda s_224 ((196)(224))(120))(55)))(189)))(lambda s_1 
lambda s_0 1))(lambda s_125 lambda s_10 10))))(((lambda s_4 lambda s_14 ((lambda s_244 
lambda s_254 ((244)(244))(254))(((lambda s_54 lambda s_220 ((54)(220))(54))(14))
((lambda s_88 lambda s_84 lambda s_82 ((88)(82))(84))(4))))(((lambda s_88 lambda s_183 
((88)(183))(88))((lambda s_5 lambda s_66 lambda s_32 ((5)(32))(66))(14)))(4)))(lambda 
s_1 lambda s_0 0))(lambda s_222 lambda s_105 222))))(((lambda s_125 lambda s_201 
((lambda s_74 lambda s_36 ((74)(74))(36))(((lambda s_98 lambda s_122 ((98)(122))(98))
(201))((lambda s_20 lambda s_42 lambda s_122 ((20)(122))(42))(125))))(((lambda s_219 
lambda s_117 ((219)(117))(219))((lambda s_51 lambda s_60 lambda s_249 ((51)(249))(60))
(201)))(125)))(lambda s_1 lambda s_0 1))(lambda s_5 lambda s_102 102))))(((lambda s_173 
lambda s_217 ((lambda s_178 lambda s_126 ((178)(178))(126))(((lambda s_144 lambda s_219 
((144)(219))(144))(217))((lambda s_159 lambda s_179 lambda s_222 ((159)(222))(179))
(173))))(((lambda s_247 lambda s_164 ((247)(164))(247))((lambda s_122 lambda s_123 
lambda s_8 ((122)(8))(123))(217)))(173)))(lambda s_0 lambda s_1 1))(lambda s_20 lambda 
s_165 20))))(((lambda s_132 lambda s_128 ((lambda s_215 lambda s_99 ((215)(215))(99))
(((lambda s_67 lambda s_122 ((67)(122))(67))(128))((lambda s_14 lambda s_197 lambda 
s_255 ((14)(255))(197))(132))))(((lambda s_126 lambda s_199 ((126)(199))(126))((lambda 
s_62 lambda s_58 lambda s_26 ((62)(26))(58))(128)))(132)))(lambda s_0 lambda s_1 1))
(lambda s_197 lambda s_119 197))))(((lambda s_39 lambda s_215 ((lambda s_181 lambda s_0 
((181)(181))(0))(((lambda s_148 lambda s_237 ((148)(237))(148))(215))((lambda s_98 
lambda s_6 lambda s_43 ((98)(43))(6))(39))))(((lambda s_231 lambda s_103 ((231)(103))
(231))((lambda s_170 lambda s_20 lambda s_154 ((170)(154))(20))(215)))(39)))(lambda s_1 
lambda s_0 1))(lambda s_18 lambda s_51 51))))(((lambda s_53 lambda s_3 ((lambda s_132 
lambda s_53 ((132)(132))(53))(((lambda s_148 lambda s_11 ((148)(11))(148))(3))((lambda 
s_213 lambda s_61 lambda s_25 ((213)(25))(61))(53))))(((lambda s_202 lambda s_113 
((202)(113))(202))((lambda s_155 lambda s_75 lambda s_103 ((155)(103))(75))(3)))(53)))
(lambda s_0 lambda s_1 1))(lambda s_183 lambda s_252 183))))(((lambda s_211 lambda s_87 
((lambda s_115 lambda s_88 ((115)(115))(88))(((lambda s_162 lambda s_127 ((162)(127))
(162))(87))((lambda s_32 lambda s_184 lambda s_87 ((32)(87))(184))(211))))(((lambda 
s_171 lambda s_37 ((171)(37))(171))((lambda s_10 lambda s_134 lambda s_234 ((10)(234))
church bool 
and (lambda x lambda y x y x)
not (lambda p lambda a lambda b p b a)
truefalse
true
137flagbit
andtrue
flag_xxor x y
x&~y| (~x&y)
trueflag
(lambda s_108 lambda s_226 108) trueflag(lambda s_1 lambda s_0 137)137
0false
flagbits8flag
3*3
(134))(87)))(211)))(lambda s_1 lambda s_0 0))(lambda s_108 lambda s_226 108))
((lambda s_91 lambda s_70 ((91)(70))(91))
((lambda s_10 lambda s_134 lambda s_234 ((10)(234))(134))
(lambda s_108 lambda s_226 108)
((lambda x lambda y ( (or ((and y) (not x))) ((and (not y)) x) ) lambda s_1 lambda s_0 
137) true)
from pwn import *
import random
from pwnlib.util.proc import status
context.proxy = (socks.SOCKS5, '146.56.247.105', 8010)
def move(board, x, y, val):
    global boards
    p.sendlineafter('>', f'{board} {x} {y} {val}')
    boards[board][x][y] = val
    check_solved1()
def get_move():
    global boards, opp_choice
    p.recvuntil('< ')
    board, x, y, val = map(int, p.recvline().split())
    opp_choice = board
    print('opp:', board, x, y, val)
    boards[board][x][y] = val
def check_solved():
    # global boards
    global solved
    for board in range(len(boards)):
        p.recvuntil(f'board {board}: ')
        res = p.recvline().decode()
        if 'uncomplete' in res:
            solved[board] = False
        else: