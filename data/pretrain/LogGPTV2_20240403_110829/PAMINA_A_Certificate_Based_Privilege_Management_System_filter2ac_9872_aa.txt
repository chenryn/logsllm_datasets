title:PAMINA: A Certificate Based Privilege Management System
author:Zolt&apos;an Nochta and
Peter Ebinger and
Sebastian Abeck
PAMINA: A Certificate Based Privilege Management System 
Zoltán Nochta, Peter Ebinger and Sebastian Abeck 
University of Karlsruhe, Institute for Telematics, 
Cooperation and Management IT-Research Group 
Zirkel 2, 76128 Karlsruhe, Germany 
Email:[nochta|ebinger|abeck]@tm.uka.de 
Abstract 
In  this  paper  we  present  PAMINA  (Privilege  Admini-
stration  and  Management  INfrAstructure),  a  privilege 
management  system  using  authorization  certificates.  Our 
system  supports  distributed  environments  where  autono-
mous  authorities  can  manage  and  delegate  privileges  in 
accordance  with  their  own  policies.  We  introduce  Im-
proved  Certification  Verification  Trees  (I-CVTs)  that 
guarantee  very  efficient  and  trustworthy  certificate  man-
agement.  I-CVTs  can  provide  undeniable  proofs  for  the 
non-existence of a given certificate in contrast to CVTs as 
proposed in [1]. As a result, each authority can store its 
own I-CVT in a central, non-trusted, and replicable data-
base.  This  database  provides  authenticated  verifiers  with 
basically  only  those  certificates  that  are  required  to  de-
termine  whether  a  user  should  be  granted  access  to  a 
resource  or  not.  Since  the  system  implements  the  pull 
model, clients need not to be involved in the access control 
decision  process.  PAMINA  handles  delegation  trees  in-
stead of simple delegation chains because authorities can 
delegate privileges in one certificate that were assigned to 
them  by  several  certificates. In the prototype that we de-
scribe  here,  PAMINA  manages  certificates  based  on 
X.509.  
1 Introduction 
The  increasing  use  of  the  Internet  for  business  critical 
transactions since the early 90’s implied the development 
of different security systems and services, which are often 
based  on  public-key  cryptographic  techniques.  Basically, 
there  are  two  mechanisms  that  can  be  used  by  security 
systems,  namely encryption and digital signatures. Nowa-
days,  the  most  important  applications  for  both  are  secure 
key  exchange  and  integrity  and  authenticity  protection  of 
different  kinds  of  data.  In  general,  a  certificate  is  a  data 
structure that defines an association between an entity and 
a  set  of  information.  A  certification  authority  states  its 
belief  in  the  validity  of  these  associations  by  digitally 
signing  the  certificate.  For  example,  a  public-key  certifi-
cate binds a public-key to a set of information that identi-
fies the entity associated with the use of the corresponding 
private key. The aim of a certificate management system is 
to  offer  services  that  guarantee  the  authenticity,  validity 
and  integrity  of  security  information  (keys,  user  rights, 
etc.)  stored  in  certificates  and  used  by  applications  for 
authentication and authorization purposes.  
A  widely  accepted  definition  of  authorization  is  the 
granting of access rights to a subject. However, there is a 
difference between the administrative act of asserting that 
a subject should be granted access rights (privileges), and 
the operational act of allowing an authenticated subject to 
access  a  resource  after  determining  that  it  holds  the  re-
quired set of privileges. The latter process is also referred 
to as access control decision. 
An authorization certificate (AC) contains information 
that  is generated during the authorization and used in the 
access  control  decision  process.  ACs  have  many  benefits 
in privilege management due to the fact that they can sup-
port different access control models and privilege delega-
tion  schemes,  because  they  are  individually  protected  by 
digital  signatures  against  fraud.  Linn  et  al.  give  a  good 
overview of application scenarios of several types of ACs 
that  contain  different  kinds  of  authorization  information, 
such as privileges or role definitions [2]. 
Surprisingly, only few access control systems exist that 
use  authorization  certificates.  One  reason  for  this  fact  is 
that both certificate management and verification generate 
additional  computational  and  communicational  costs  that 
customers and providers have to bear. Widely used certifi-
cate  management  techniques,  like  Certificate  Revocation 
Lists [3] that have originally been designed for public-key 
infrastructures, are not very attractive for an efficient sys-
tem design, because authorization related information has 
other  characteristics  than  public-keys.  Access  rights  can 
change  very  frequently,  the  amount  of  authorization  in-
formation  is  usually  higher,  and  authorization  certificates 
often must be handled confidentially.  
Fortunately, there are several novel approaches with en-
hanced  properties  that  can  make  certificate  management 
and  verification  less  expensive  and,  in  many  cases,  more 
secure as well. 
In  this  paper  we  introduce  PAMINA1  (Privilege  Ad-
ministration  and  Management  INfrAstructure),  a  cer-
tificate  based  system  that  provides  authorization  and  ac-
cess  control  in  distributed  environments.  PAMINA  is  the 
first  system  that  uses  Improved  Certification  Verifica-
tion  Trees  (I-CVTs)  which  guarantee  very  efficient  and 
trustworthy  certificate  management.  I-CVTs  also  provide 
undeniable proofs for the non-existence of a given certifi-
cate statement in contrast to CVTs as proposed in [1]. The 
system  supports  distributed  environments  where  autono-
mous  authorities,  so  called  Privilege  Management  Au-
thorities  (PMAs),  can manage and delegate privileges in 
accordance  with  their  own  policies.  Each  PMA  can  store 
its  own  I-CVT  in  the  central,  non-trusted,  and  replicable 
Privilege  Database  (P-DB).  This  database  provides  au-
thenticated  verifiers  with  basically  only  those  certificates 
that  are  required  to  determine  whether  a  user  should  be 
granted access to a resource or not.  
The rest of the paper is organized as follows: In the next 
section  we  summarize  the  most  important  requirements 
that PAMINA as a certificate based privilege management 
system  has  to  fulfill.  In  section  3,  we  describe  and  com-
pare  different  approaches  and  choose  a  combination  of 
best-fit solutions. We show that CVTs as proposed in [1] 
are  qualified  for  efficient  privilege  management  if  the 
underlying data structure is chosen properly. In the follow-
ing section, we describe the concept and the implementa-
tion  details  of  Improved  CVTs  and  certification  paths, 
which reduce the required level of trust placed on the da-
tabase storing the certificates. Finally, section 5 deals with 
the design aspects of PAMINA, the components and their 
interactions.  The  supported  delegation  model  as  well  as 
some technical details are described. 
2 Requirements for PAMINA 
The aim of a privilege management system is to support 
security  critical  applications  with  valid  information  about 
the  current  status  of  the  users’  access  rights  (privileges). 
Digitally  signed  authorization  certificates  protecting  the 
integrity  and  authenticity  of  privileges  enable  the realiza-
tion  of  different  authorization  models  in  a  more  secure 
way than conventional systems do. For example, privilege 
delegation  chains  becomes  more  secure  when  using  cer-
tificates. The components of a distributed certificate based 
privilege management system must provide proper mecha-
nisms,  data  structures,  and  tools  for  the  management  and 
verification of certificates. In the following we summarize 
the  most  important  security  and  performance  related  re-
quirements  that  PAMINA  has  to  fulfill,  in  order  to  be 
competitive with existing privilege management systems. 
1  Pamina  is  also  a  beautiful  princess  in  W.  A.  Mozart’s  The 
Magic Flute 
•  Efficient  certificate  lifecycle  management:  The 
system must handle at least certificate generation, up-
date  and  revocation.  The  underlying  certificate  man-
agement  scheme  should  optimize  communication, 
data maintaining and computational costs. High com-
munication  costs  between  a  database  storing  certifi-
cates  and  the  issuing  authority  can  be  critical  for or-
ganizations that manage a huge number of frequently 
updated/revoked ACs. In order to make PAMINA at-
tractive for access control applications (verifiers) that 
want  to  verify  user  rights,  communication  costs  be-
tween  the  directory  and  the  verifier  should  also  be 
minimized. Optimized computational costs, for exam-
ple by the reduction of the number of required signa-
ture verifications, speed up the access control process.  
•  Revocation:  The  system  must  handle  situations,  like 
the  unexpected  change  of  user  privileges  before  the 
certificate  expiration  date  or  the  key  compromise  of 
an issuing authority. 
In the first case, the certificate of the affected user has 
to  be  revoked  and  reissued.  Short-lived  certificates 
can reduce the probability of revocation before expira-
tion or even make revocation unnecessary. This leads 
to  increased  costs  of  the  issuing  authority,  since  it 
must sign and distribute certificates very often. There-
fore, the costs caused by certificate signing should be 
reduced, in order to use short-lived certificates. 
In  the  second  case,  the  fast  and  efficient  revocation 
and re-issuing of all certificates signed by the author-
ity whose key was compromised is required. The sys-
tem has to enable the easy exchange of an authority’s 
key pair.  
•  Freshness of certificates: The system should provide 
recent authorization information. Certificate status in-
formation should be published on a regular basis, even 
if  the  situation  does  not  change,  so  verifiers  can  be 
sure that their data is up to date. 
•  Reduced trust on database: From the verifiers’ point 
of view there are two main types of components in a 
distributed  certificate  management 
infrastructure. 
Firstly, there are trusted authorities that issue and sign 
certificates. Secondly, there are also components (e.g., 
directories, online responders) that store and distribute 
certificates or information related to certificates (e.g., 
revocation status). The latter type of components can-
not manipulate a certificate, but they can accidentally 
or intentionally provide verifiers with incorrect infor-
mation,  e.g.  about  its  revocation  status,  or  they  can 
hold back relevant information, e.g. the certificate it-
self or a revocation list. Due to these facts in many ex-
isting systems a verifier must also trust in these com-
ponents,  because  he  is  not  able  to  check the correct-
ness of this kind of information. This trust should be 
reduced, and therefore the database should be able to 
prove  the  non-existence  of  a  certificate  if  he  does 
• 
not deliver it. Naturally, the database always can just 
refuse to respond to a request. 
•  Privacy:  Public-key  certificates  used  for  signature 
verification or for encryption have to be available for 
everyone.  On  the  other  hand,  ACs  storing  authoriza-
tion  information  should  be  kept  private.  This  means 
that  only  a  fixed  set  of  entities  (administrators  and 
verifiers)  should  have  controlled  access to this infor-
mation. 
•  Cryptographic  security:  In  order  to  protect  certifi-
cates  against  forgery,  the  system  must  use  secure 
(long) signing keys. Signing keys should be kept in a 
secure environment, which makes it impossible to re-
trieve them. 
Interoperability: In order to provide interoperability 
and  usability,  PAMINA  should  support  the  manage-
ment  of  different  (standardized)  certificate  formats. 
For  the  encoding  and  representation  of  certificates 
platform-independent  and  standardized  storage  for-
mats should be used. 
•  Flexibility:  The  system  must  be  able  to  provide  dif-
ferent access control models and policy schemes with-
out technical impact. Therefore, the model has to deal 
with various certificate types that allow, for example, 
the  construction  of  abstract  groups  or  delegation  of 
permission rights. 
•  Availability  and  robustness:  Naturally,  the  system 
has to make sure that the availability of the certificates 
and their status information is as high as possible. The 
system must be based on a robust model, which does 
not allow any manipulation of authorization informa-
tion,  even  if  the  underlying  computer  systems  crash. 
For example, in case of a successful attack against the 
directory  that  stores  the  certificates  it  should  not  be 
possible for the intruder to make a revoked certificate 
pass as valid. 
•  Auditing  and  non-repudiation:  The  system  has  to 
support easy verification of the validity status of a cer-
tificate at any point of time. In order to provide time-
liness of the authorization information, the system has 
to implement (or utilize) time stamp services. Another 
important aspect is the accountability for both author-
ity’s  and  user’s  actions.  The  system  must  not  allow 
the  creation  of  rogue  certificates  or  the  unauthorized 
revocation of certificates without being detected. 
3 Evaluation of certificate management 
approaches for access control purposes 
In  this  section  different  competing  management  tech-
niques  are  evaluated  and  compared  in  order  to  choose 
from and combine best-fit methods for our purposes.  
3.1 Extended public-key certificates vs. separate 
identity and access control management 
One possible way to manage access control information 
of certified users is the use of extended public-key certifi-
cates (PKC). In this case, one authority is responsible for 
both key (identity) and privilege management. Since there 
is  only  one  authority,  the  verification  process  becomes 
simpler, because a single trust path reflects both authenti-
cation  and  authorization  of  a  user.  As  a  result,  fewer 
transactions  are  needed  when  verifying  requests.  This 
approach  has  benefits  in  systems  where  the  validity 
periods  of  certified  keys  and  privilege  assignments  are 
similar. On the other hand, in most cases user rights should 
not be open to the public. Through obtaining an extended 
PKC, one can learn a lot about the internal structure of an 
organization, since it is, for example, reflected by the roles 
defined  in  the  certificates.  In  addition,  authorization 
certificates (ACs) must be often issued with short validity 
periods (e.g. hours), contrasting with PKCs whose validity 
period is often measured in years.  
Due to these facts, separate access control management 
is  required  in  most  environments.  Using  this  concept, 
authorization certificate updates have no impact on longer-
lived identity certificates. This is especially profitable for 
clients storing PKCs for authentication purposes. In addi-
tion, independent authorities issuing their own certificates 
make  the  system  more  flexible  and  this  approach  is  also 
helpful  to  eliminate  many  problems  caused  by  a  central 
bottleneck.  The  most  important  disadvantage  of  such  an 
architecture  is  the  increasing  complexity  of  verification 
and path processing. In the worst case each AC that must 
be  verified  for  an  access  control  decision  can  be  issued 
from a different authority that belongs to a different verifi-
cation path. 
implement 
We  decided 
the  first  prototype  of 
PAMINA  for  separated  management  of  ACs.  Therefore, 