的方式，一定会在某处遇到活生生的人，因此，你作出的决策将影
响他们的体验。
[Z]我曾和其他经理人为这点争论过，他们无法想象不让工程师全
力编写程序代码。有一个伪善的说法：如果程序员的时间非常有价
值，就应该对时间的利用进行规划。他们可能会问我“程序员将要
做什么？”，我将会说“他们要等待值得他们花费时间的规划，或者
帮助我们找出这个规划。”
588
---
## Page 590
第二部分技巧
第7章撰写优秀的规格说明书
我曾经与一位程序员争论，他认为不需要写规格说明书。当我带着
一大本老板要我使用的规格说明书模板，走进他的办公室时，他只
是对着它笑了笑（遗憾的是，他也在笑我）。他的观点是，如果项
目这么复杂，需要用50页纸向程序员进行解释说明，那么这个项目
就不值得做。他把对流程和日常文书的需要，看作是团队在沟通和
协调上失败的信号，还认为不相信我们自已作决定。他说，我们不
需要这么多的额外费用和官僚作风，并且暗示精细的计划完全没有
必要做。
因为之前有过这样的争论，我一笑置之。我问他，对于他所居住的
公寓楼，或每天并车上班经过的3层立体高架桥，他是否也认为不
需要工程规划？显然，他之前就听过这个问题，立即回以微笑。他
说，尽管他愿意这些事情被仔细地规划好，但是开发软件与研究物
理定律和用建筑材料来盖楼是不一样的（他说喜欢利用那些最小限
度使用规格说明书的方法，例如极限编程）。我们很快地达成两点
共识。首先，相较于传统工程，软件工程更加灵活，更容易改变，
很少使人们的生活陷入危险的境地。但是，我们也承认，因为我们
面对复杂的工程挑战，有一组人依赖于我们的决策，还要满足预算
和时限的要求，我们需要的远远超过对门厅里对话的记忆。只有这
样，才能确保发生的事情是正确的。
我们还同意，我们项目所需要的一切都要符合我们正在做的那种工
作，以及我们属于的那种人。如果某种书面记录可以为团队解决真
实的问题，还可以有加快事情进展的速度和提高质量结果的可能
（而且，在不得罪任何人的情况下需要随时能够更新），那么，这
样的文件是十分有用的。他说，如果我们做些事情能够实现这些目
标，无论我们把它叫做什么，或者它以什么形式呈现，他都愿意使
用。之后，我们修改规格说明书的流程，使之成为我们都同意的、
能让我们的小团队使用的东西。我回到老板那里，把我们的对话略
加修饰地汇报了一遍，并且找出了一个折中方案。那份庞大得如同
税法般的规格说明书模板就废除了。
从这个故事中得来的关键教训就是，如同人们所做的其他任何事
情，没有正确的方法去撰写规格说明书或把工作文件化。规格说明
书就像大多数团队要去做的事情一样，应该满足当前项目的需求，
589
---
## Page 591
还要满足说明书的撰写者和阅读者的需求。就像网站或软件产品必
须经过设计流程来找到最佳方法一样，规格说明书也需要一些思考
和反复修改，才能正确完成。
但是，我知道很多有经验的人都会掉入这样一种信念的陷阱中，相
信"只有一种做法来完成规格说明书（或者不管他们称其为什
么）”，并且倾向于使用他们上次用过的做法。有时，这种一系列
的重复可以追溯到他们最初完成的项目。他们假设，因为那些项目
并非造成彻底的灾滩，因此，他们写规格说明书的方法对结果都有
正面的贡献一一这种主张没有经过调查研究，可能正确，也可能不
正确（也就是说，尽管规格说明书撰写流程有问题，但项目还是可
能成功）。更糟糕的是，如果有关规格说明书如何以及为什么撰写
的好问题从未被提及过，团队中就没有人能够真正了解规格说明书
撰写的流程到底有多好或多坏，或者对团队的职能究竟能起到多少
贡献（这与“没有对撰写质量高的程序代码提出好问题，就无法了
解程序到底有多好或多坏"完全相似）。
本章的目标就是说明以下想法。第一，规格说明书应该为项目做到
3件事：确保构建正确的事情、提供总结项目计划阶段的进度里程
碑，以及在项目采取的方法上能够让不同的个体作深度评审和反
馈。这3件事情非常重要，除了撰写规格说明书的流程外，不太可
能有其他流程可以同时提供这些事项。只出于这个原因，所以我是
规格说明书的狂热爱好者。第二，只要撰写者了解规格说明书撰写
时常有的错误，并且认识到规格说明书应该用来提供的特定好处，
大多数人对规格说明书的抱怨都很容易被改正。
规格说明书能做和不能做的事情
就像远景文件一样，规格说明书也是一种沟通的形式。当有效使用
时，规格说明书可以以一种简单而易于使用的方式传达重要的信
息。在使用不当时，规格说明书就很难读懂，撰写起来也单调乏
味，而且每个接触规格说明书的人都会沮丧。通常，写出糟糕规格
说明书的团队，似乎更需要规格说明书（有句话说：“如果狼是成
群而来的，规格说明书就是像瘟疫一样降临的”）。多数时候，没
有说服力或失败的规格说明书，都是来自于对规格说明书能做到和
不能达成的事情有所误解。
以下是规格说明书能为项目做到的重要事情的列表：
590
---
## Page 592
有效描述即将创建的事物的功能。
通过道使它们明确来帮助设计者理清决策。
在开始全面实现之前，允许评审、提问以及讨论详细的计划。
从一个人向多个人的方式传达信息。
为计划建立一个团队范围内的参考点（如果在设计阶段已草拟，可
以用来当作设计过程中的说明文件）。
提供自然的进度里程碑，来让团队能集中精力。
提供保险，来应对撰写者被公交车撞到的状况2L。
加快、提高和加速健全的讨论的赖率。
让领导者有机会反馈意见，并设定质量基准。
增加团队（以及撰写者）的稳健和信心。
规格说明书做不到或不应该做的事：
消除团队成员间的所有讨论。
向团队证明撰写者有多聪明。
证明某项功能有多重要（或者为何不应该取消该功能）。
把众人转变成具有理性观点的人。
变成撰写者表现Visio或者UML技能的游戏场。
团队的领导者应该为团队收集这样一份列表。每个必须阅读或撰写
规格说明书的人，都应该被要求评审这份列表，并且在撰写规格说
明书之前提出反馈意见。也许有些列在里面的事项是团队不需要规
范说明的，或者有些没有列出的事项应该被加进来。这种讨论很快
一最多半小时。即使简短的交谈也能定出规格说明书应有贡献的
期望，同时给团队成员机会提出建议，让规格说明书编写得更好。
如果有适用于全团队的规格说明书模板，则在撰写时铭记那些准
则。
591
---
## Page 593
决定需要撰写什么
软件开发或项目管理的每种方法论都对规格说明书有不同的定义，
这很好。规格说明书里有4种基本信息，最简单的讨论方法，就是
假定把它们分别写成4份不同的文件。但是，这些事情该怎么区分
并不十分重要（虽然有些人对此很重视）。重要的是，正确的信息
要由正确的人来说明，而且产生方式必须对阅读该项信息的人有所
帮助。所以，在较小的团队中，这些不同种类的规格说明书通常会
合并。在较大的团队中，它们也许必须分并（但是彼此相连），甚
至由不同的人来撰写。
需求。要用文件来说明项目所期待的很多事物，就需要需求规格
说明书来概述工作必须实现的所有要求和义务。它合并了所有其他
的需求工作，并且为项目提供了一个参考点。最好的情况是，有一
份成功条件的列表，描述最终的结果，但不解释如何达成目标。在
所有的案例中，需求都应该在设计流程开始之前就定义好（虽然之
后可以改善和更新），而且应该从远景（vision）文件中衍生出
来。需求应该配合功能规格说明书，以便于理清并帮助评审。（这
样的规划可以满足需求吗？）
·功能（feature）。功能规格说明书从客户的角度来描述某个特定
场景的行为。功能规格说明书是设计流程的主要产物。它通过用户
界面（如果有的话）来描述软件的功能，并且从非技术的角度来详
细说明事情应该如何运作。它应该描述当工作完成时，客户的经验
会如何改变，还应该包含一份简单的列表，列出为实现这一目标工
程师所定义的工作项目。这和需求列表不同，因为它定义的是满足
需求的特殊设计，包括用户界面或其他重要的设计要素。如果做得
好，一份优秀的功能规格说明书可以和一系列说明清晰的屏幕截图
一样简单。
·技术规范。技术规格说明书详细说明实现功能规格说明书所需的
工程方法。只有为了描述最复杂的组件，或者其他程序员可能复用
的组件，以及对功能规格说明书所需的工作项目，必须提供支持性
的证据时，才需要足够详细的说明。有时，功能规格说明书的深度
或技术本质，会消除对独立的技术规范的需求。
·工作项目列表。这些大致相当于工作分解结构（workbreakdowr
structure，WBS）。工作项目列表是对实现功能规格说明书所需的
每项程序设计分配任务的描述。应该分解到一种详细的水平，就是
592
---
## Page 594
把不同重要等级的项目分并，同时以关数来估计时间（对工作项目
的大小应该定义一些界限，也许是一天或半天，但是这应该是程序
员来定义的事）。工作项目列表的建立，完全是程序员的工作，而
评审和整理这些列表，则是首席程序员或者项目经理的工作。（在
技术上，工作项目列表并不是规格说明书：它们只是工程如何实现
规格说明书的计划。然而，它们又如此重要，并且和规格说明书相
关，以致我找不到其他更好的地方来介绍它们。）
测试标准以及里程碑退出标准。当功能规格说明书写好时，就应
建立测试标准。这必须包括针对新功能的具有优先级的测试案例，
同时列出目标，说明在这些案例上，程序代码应当如何良好的表现
才能满足里程碑的质量目标（也就是退出标准，请参阅每15章）。
让我举个例子，说明这几种不同的规格说明书的信息如何合并。每
当我在大型团队中工作时，同时撰写功能和技术规格说明书是很常
见的事情。我们会从远景中推衍出需求列表，与团队和客户评审该
列表，然后把它们放在功能规格说明书的开端。工作项目列表会由
程序员作出（通常以整个团队都可看的简单的电子表格来表现），
然后复制或链接到功能规格说明书内。这样，我们就有了基本的规
格说明书，其中包括许多刚才描述过的多种规格说明书信息。
考虑这4种规格说明书的最简单方法，就是大致按时间顺序排序：
需求、功能、技术和工作项目。如同很多任务一样，每种信息都是
下一个的基础。团队越大、项目越复杂，可能就越需要正式区分这
几种规格说明书。
谁负责规格说明书
在大型团队中，PM或设计师应该负责功能规格说明书，而程序员
应该负责技术规格说明书。他们写的这些文件，应该让人在阅读时
能够相信撰写者实际上彼此了解，而且时常交流。通常，技术规格
说明书比较短（对读者而言比较难读），因为其读者很少，而且程
序员倾向于对撰写不用构建的东西不感兴趣。即使如此，在功能说
明书中用于支持设计的技术规范应该符合功能规格说明书的需求。
商业分析师、客户或者项目经理通常会撰写需求文件。这取决于谁
拥有需求权力，以及项目团队的本质是什么（小型合约团队，还是
大型员工团队）。工作项目列表是程序设计团队管理者的责任。在
大型组织中，这一般都是首席程序员的责任。
593
---
## Page 595
通常，在小型团队中，这是没有结构化的事。谁做什么，甚至哪些