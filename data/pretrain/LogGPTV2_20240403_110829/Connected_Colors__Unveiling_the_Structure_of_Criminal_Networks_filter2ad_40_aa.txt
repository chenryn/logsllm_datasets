title:Connected Colors: Unveiling the Structure of Criminal Networks
author:Yacin Nadji and
Manos Antonakakis and
Roberto Perdisci and
Wenke Lee
Connected Colors:
Unveiling the Structure of Criminal Networks
Yacin Nadji1, Manos Antonakakis2, Roberto Perdisci3, and Wenke Lee1
1 College of Computing, Georgia Institute of Technology
{yacin.nadji, wenke}@cc.gatech.edu
2 Damballa, Inc.
PI:EMAIL
3 Department of Computer Science, University of Georgia
PI:EMAIL
Abstract. In this paper we study the structure of criminal networks,
groups of related malicious infrastructures that work in concert to pro-
vide hosting for criminal activities. We develop a method to construct a
graph of relationships between malicious hosts and identify the under-
lying criminal networks, using historic assignments in the DNS. We also
develop methods to analyze these networks to identify general structural
trends and devise strategies for eﬀective remediation through takedowns.
We then apply these graph construction and analysis algorithms to study
the general threat landscape, as well as four cases of sophisticated crimi-
nal networks. Our results indicate that in many cases, criminal networks
can be taken down by de-registering as few as ﬁve domain names, re-
moving critical communication links. In cases of sophisticated criminal
networks, we show that our analysis techniques can identify hosts that
are critical to the network’s functionality and estimate the impact of
performing network takedowns in remediating the threats. In one case,
disabling 20% of a criminal network’s hosts would reduce the overall
volume of successful DNS lookups to the criminal network by as much
as 70%. This measure can be interpreted as an estimate of the decrease
in the number of potential victims reaching the criminal network that
would be caused by such a takedown strategy.
1
Introduction
Many of today’s cyber-security threats make use of globally reachable network
hosts that support cyber-criminal activities. For example, drive-by downloads
need reliable hosting to infect the visitors of compromised sites. Pay-per install
providers [6] need available hosting to distribute malicious binaries. Botmasters
need a mechanism to command their bots, often relying on networks of command
and control servers to provide redundancy for their critical communication chan-
nel to the compromised machines.
To avoid single points of failure, the miscreants make heavy use of DNS to
provide agility to their network operations, thus preventing trivial blacklisting
and comprehensive remediation eﬀorts from easily disabling their malicious net-
work resources. For example, to provide redundancy to their critical malicious
infrastructure, attackers often use numerous domain names that map to multiple
hosts. As the network infrastructure relocates to survive blacklists and other re-
mediation tools, old domains drift to new hosts and new domains are registered.
This agility leaves a trail of breadcrumbs in historic DNS assignments, allowing
us to build networks of related malicious hosting infrastructures and measure
the threat landscape more holistically.
In this paper, we study criminal networks, their infrastructure, and their
relationships that provide hosting for one or more types of threats. A criminal
network infrastructure is often comprised of bulletproof hosting providers (or
rogue networks [32]), auxiliary hosting providers and/or large swarms of com-
promised machines. In order to perform eﬀective takedowns, we must understand
how criminal networks are structured.
In this study we aim to (1) unveil the key components of criminal network in-
frastructures used to carry out a variety of malicious activities (hosting phishing
sites, botnet command-and-control servers, sending spam emails, etc.), and (2)
analyze the discovered malicious network infrastructures to better understand
what actions could be taken to dismantle them completely or to inﬂict signiﬁcant
damage to the adversaries’ criminal operations.
To this end, we adopt the following high-level process. First, we construct
a graph of known malicious infrastructure and use passive DNS data to link
related hosting providers. Then, we use community ﬁnding algorithms over this
graph to identify diﬀerent criminal networks likely operated by separate groups
of adversaries. Finally, we study the characteristics of the criminal networks to
identify techniques that may be employed to enact eﬀective takedowns.
Our study is separated into two parts: the ﬁrst part describes criminal net-
work infrastructure at a high-level (Section 4), whereas the second part presents
four case studies of interesting criminal networks (Section 5). We identify a class
of criminal networks that, based on their graph structure, could be easily taken
down in general. In addition, we analyze a number of large criminal networks
that present interesting complex structures. In instances where comprehensive
takedowns are diﬃcult due to the complexity of the network, we pinpoint the
critical infrastructure that should be the focal point of a takedown eﬀort to
maximize the damage done to the criminal network.
Our paper makes the following contributions:
Criminal network construction We provide a lightweight methodology to orga-
nize and ﬁnd relationships between malicious infrastructure by leveraging his-
toric information related to their use of DNS. Using community ﬁnding algo-
rithms, we identify distinct criminal networks in the form of graphs in a scalable
way.
Network structure analysis We analyze the structure of the criminal networks
using two simple graph measures: the graph density and the eigenvector central-
ity of its vertices. The graph density characterizes graphs to identify common
structures seen in real-world criminal infrastructure. The eigenvector centrality
is used to identify the critical vertices in a criminal network. Both the graph
density and eigenvector centrality assist us in making an informed decision on
the most eﬀective takedown strategies that ﬁt the properties and structure of
each criminal network.
Takedown analysis We perform an in-depth analysis of four case studies using the
graph measures to determine the eﬀectiveness of diﬀerent takedown strategies
on sophisticated criminal networks. We quantify the amount of damage that
would be caused by these takedowns by estimating the potential loss in victims.
This loss is estimated by measuring the decrease in the volume of successful
client lookups to domains related to the target criminal network caused by de-
registering domain names or blocking IP addresses. This provides a quantitative
basis to determine the most eﬀective takedown strategy for a given criminal
network.
2 Related Work
Prior work has focused on identifying autonomous systems (AS) known to host
a disproportionate amount of malicious activity [32, 28, 33]. The idea of network
cleanliness [9] has been explored as a potential indicator for future sources of ma-
liciousness based on the assumption that malicious infrastructures tend to group
together. We show that, in general, most criminal networks span across multiple
autonomous systems, which makes knowing the worst ASs a moot point with
respect to performing a comprehensive takedown. Disconnecting an AS from the
Internet is not an easy task, and it often does not prevent malicious hosting in the
long-term [24]. Focusing on high-level network structures, such as autonomous
systems, does not provide suﬃcient knowledge to perform comprehensive take-
downs. In contrast, we focus on identifying the web of smaller-sized networks
that work together to provide reliable malicious hosting. Criminal networks that
span multiple ASs can be disabled or heavily damaged since we identify not only
the malicious networks, but their relationships with others.
On the other end of the spectrum, analysis can be done on individual do-
mains and IP addresses. For example, prior work has studied the infrastructure
used to support Rogue AV campaigns [11], fast-ﬂux service networks [17], online
scam infrastructure [18], command and control (C&C) networks [7], C&C migra-
tion [1], drop-zone infrastructure [15], and pay-per install infrastructure [6]. We
consider a campaign to be a collection of domain names and IP addresses that
serve a single malicious purpose and are associated with the same threat type,
e.g., botnet C&C, drop-zones, etc. These studies provide invaluable insight into
the low-level structure of campaigns, but this information also does not suggest
how to perform takedowns eﬀectively. The complex structure of criminal net-
works makes understanding the relationships of the hosting networks essential
with regards to takedowns.
Graph-based infrastructure work either represents ﬂows between networks
or simply uses the graph abstraction as a way of linking related information.
Nagaraja et. al. [25] used game theory and network analysis to suggest eﬀective
attacks and defenses against networks and network connectivity. BotGrep [26]
identiﬁes botnet communities using random walks to detect dense community
structures. Intuitively, peers in a botnet would communicate with patterns dis-
tinct from the less structured global Internet. Leontiadis et. al. [19] examined
ﬂows from redirections to study the infrastructure used to support illegitimate
online prescription drug stores. These approaches all make a simplifying assump-
tion, and treat network structure as simple messaging networks: i.e., two vertices
communicating through a connected path in the graph. Christin et. al. [8] built a
graph where vertices are domains, bank accounts, and phone numbers and edges
are drawn when they appear together in a fraud campaign. This link analysis
does not follow the typical communication network example, but still yields fruit-
ful results by providing a concrete structure to group related data. Our graph
building methodology follows the latter approach in spirit, but also makes use of
community ﬁnding and network analysis to identify interesting features in the
discovered criminal networks.
3 Goals and Methodology
Our main objective is to identify the components of network infrastructures
used to carry out a variety of criminal activities – such as hosting spam- and
phishing-related sites, deploying botnet command-and-control servers, sending
spam emails, etc. – and to analyze these malicious network infrastructures to
better understand how they are organized and what level of eﬀort would be
necessary to take them down. Towards this end, we perform these steps:
1. Enumerate hosts that participate in malicious activities, and ﬁnd network
relationships between them.
2. Analyze the structure of these network relationships to identify indepen-
dent communities of hosts that constitute distinct criminal networks likely
controlled by separate groups of adversaries.
3. Investigate the criminal network landscape to identify broad commonalities
between classes of criminal networks with respect to remediation strategies.
4. Pinpoint the critical infrastructure within a given criminal network that
should be targeted during coordinated takedown eﬀorts to increase the like-
lihood of success, or to maximize the damage to the adversary.
To bootstrap the process of enumerating hosts involved in malicious activi-
ties and ﬁnd their relationships, we leverage a large passive DNS database [35],
which stores historic records of domain name to IP mappings as observed from
live network traﬃc, and a variety of private and public sources of known mali-
cious domains and IPs (Section 3.1). We build an undirected graph where vertices
correspond to malicious infrastructure and edges denote a historic relationship
between two vertices based on passive DNS evidence. Finally, we apply an analy-
sis based on community ﬁnding algorithms to identify distinct criminal networks,
and we compute the eigenvector-centrality of nodes within a criminal network to
assess their importance and qualitatively estimate how much potential damage
their takedown may cause to the entire criminal network (Section 3.3).
3.1 Data Sources
To enumerate hosts involved in malicious network activities, we leverage a va-
riety of private and public feeds of domain names and IPs known to have been
used for malicious purposes. Since we aim to provide a general picture of criminal
networks that may involve diﬀerent types of criminal activities, we use several
sources of information, such as URLs embedded in spam emails, network traces
from malware dynamic analysis, lists of known C&C servers, IP blacklists, etc.
For example, given a spam URL, we extract the related domain name and use a
large passive DNS database to enumerate the set of IP addresses that were re-
cently resolved from this spam-related domain name. Our passive DNS database
is constructed from 16 months worth of DNS resolutions collected at a major
North American ISP spanning seven diﬀerent geographical locations and serving
several million users.
Our spam feed [16] includes URLs extracted from spam emails captured by a
large spam trap. The malware-related data sources are from eleven public black-
lists [10, 20, 13, 14, 21, 31, 22, 34, 30, 3, 29] and one commercial malware dynamic
analysis feed. The source of information related to C&C servers is an internal
company feed comprising domain names and IPs related to known C&C network
infrastructures.
To ﬁnd the network relationships between the enumerated hosts, we leverage
two functions that can be deﬁned over passive DNS data:
– Related historic IPs (RHIP): given a domain name or set of domain names
d, RHIP(d) returns the set of routable IP addresses that d has resolved to
at some point in the past.
– Related historic domains (RHDN): given an IP address or a set of IP ad-
dresses ip, RHDN(ip) returns the set of domain names that have resolved to
ip at some point in their history.
Essentially, we consider two hosts to be related if they can be linked via the
RHIP and RHDN functions.
After constructing the criminal network graphs, we leverage a commercial
threat categorization and attribution process to identify speciﬁc criminal oper-
ators and malware families that are known to be aﬃliated with the identiﬁed
malicious network infrastructures.
3.2 Constructing Criminal Network Graphs
In this section, we describe the procedure we use to build our criminal network
graphs, which we represent using undirected weighted graphs.
An undirected graph G is deﬁned by its sets of vertices V and edges E.
Edges are bi-directional and are assigned a weight between [0, 1] that expresses
the “strength” of the relationship between its endpoints. A graph is complete
if all pairs of vertices are adjacent, and is connected if for all pairs of vertices
vi, vj ∈ V there exists a sequence of adjacent vertices connecting vi and vj. A
disconnected graph is made up of multiple components, or subgraphs of G. If a
component contains only one vertex, it is called an isolated component [36]. A
vertex represents a collection of 256 IP-addresses (a Class C network or /24)
and an edge connecting two vertices denotes a historic relationship, according
to passive DNS data, between two IPs in the respective Class C networks.
Fig. 1: Overview of process to generate criminal network graphs. Data sources
are polled (1), domains are converted to IPs (2) and edges are drawn based on
overlaps found in the passive DNS database (3). Diﬀerent source type graphs are
composed (4). Graphs are built and composed every day and community ﬁnding
is performed to identify criminal networks (5).
A high level overview of the criminal network graph generation procedure is
shown in Figure 1. Every day, the data sources are polled for new blacklisted
network data (1). This network data comes in the form of known malicious IP
addresses and domain names. Attackers are known to quickly migrate to new
networks after takedowns [24], so in a deployed implementation we keep up with
this drift by constantly adding newly discovered malicious network data. All
malicious domain names are converted into IP addresses by looking up their
related historic IP addresses (RHIP), and all of the IP addresses are binned into
the Class C networks (2) that they belond to. Next, we look up each IP addresses’
related historic domain names (RHDN) and edges are drawn between vertices
when the intersection of their RHDN’s is non-empty (3). If network hosts are
found to be related to whitelisted domains, these IPs are removed to reduce the
occurrences of non-malicious infrastructure in our graphs. Graphs from diﬀerent
sources are composed and edges are redrawn (4). Edges are weighted using the
Jaccard index J, a ratio of the cardinalities of the intersection and union of two
sets. Given two vertices vi and vj that are adjacent, their edge weight is deﬁned
by Equation 1,
J(vi, vj) =
|D(vi) ∩ D(vj)|
|D(vi) ∪ D(vj)|
(1)
where D(v) is the set of domains that historically point to IP addresses in
vertex v. Graphs from multiple days are composed and community ﬁnding is
used to identify criminal networks (5).
Whitelisting Our whitelist contains the top 10,000 Alexa domain names and
domains of several popular content delivery and advertisement networks. The
C&CSpamRHIPRHDNComposeMalwareCommunity12345whitelisting process works by examining the domain name sets generated by
RHDN for every IP. Consider an IP ip, if its RHDN(ip) contains a domain that
is whitelisted, or is a sub-domain of a whitelisted domain, we remove ip from our
graph. For example, consider the domain name doubleclick.net which is used
by Google’s doubleclick advertising service. The top 10,000 Alexa does not con-
tain doubleclick.net (only doubleclick.com), however, the IP that doubleclick.net
resolves to, 216.73.93.8, has an RHDN set that contains doubleclick.com, which
is whitelisted and the IP address 216.73.93.8 would be removed from our graph.
If an attacker is aware of our whitelisting strategy there is little room for abuse.
For an attacker to abuse our whitelisting strategy to evade our analysis, they
would have to commandeer and point a whitelisted domain to their malicious
infrastructure.
It is important to stress that we are seeking relationships between IPs as
seen from the DNS, not from malware samples. For example, a given malware
sample may intersperse its connection to its C&C server with spurious lookups to
benign domains, these networks will not be connected unless there is an explicit
relationship according to our passive DNS database.
Community Finding False positives can still be introduced, despite our whitelist-