1
1
1
1.2 ms
1
2
2
a) Neither packet queued ! initial spacing maintained
1.2 ms
1
2
2
random
random
b) Cross traffic, but queue empties between packets ! random spacing
1
2
2
6
1500B +
c) Queue does not empty between packets ! spacing has modes at multiples of 1500B
Figure 3—Various cases of packet spacing on CCICOM’s access link.
Arrivals are shown above the line, departures below the line. Light pack-
ets are from the traced ﬂow and dark packets are cross trafﬁc. Cross
trafﬁc arrivals are not shown.
(c) Either packet is queued and the queue does not empty between
the departure times of the two packets (Figure 3c). The resulting
interarrival is the transmission time of the intervening cross-trafﬁc
burst plus the second packet in the pair. Since cross-trafﬁc bursts
have modes at multiples of 1500 bytes, interarrival samples of this
type will show modes spaced by 0.12 ms (the transmission time of
1500 bytes on 100 Mb/s). The input interarrival of 1.2 ms is a factor
of 10 higher than this mode spacing, so these modes will be centered
around 1.2 ms unless the queuing is extremely bursty.
Figure 2b also shows some symmetry around 1.2 ms. Our traced
packets arrive at the CCICOM queue equally spaced by 1.2 ms. If
cross-trafﬁc effects stretch a pair of packets in the traced ﬂow, the
resulting interarrival sample will lie to the right of the 1.2 ms mode;
if they squeeze the pair, the interarrival sample lies to the left of the
1.2 ms mode. On this link, it seems that the probability of stretching
and squeezing were close.
This simple experiment teaches us two lessons: (1) Equally-spaced
mode gaps (EMGs) in a ﬂow’s interarrival PDF correspond to the
transmission times of 1500-byte packets on some bottleneck along
the path. (2) The envelope of the PDF describes the minimum-capacity
congested link along the path, whose output gets modulated by down-
stream congested links.
3.2 Interarrival PDF Variations
Inspection of interarrival PDFs for over 400 different Internet paths
from the RON testbed (described in x5) shows that most exhibit
equally-spaced mode gaps separated by the transmission time of a
1500-byte packet on a well-known link capacity. For lack of space
we show only a few PDFs, chosen to exemplify the possible shapes.
Figure 4a shows a ﬂow going from a lower-capacity bottleneck
to a higher-capacity one. This time the upstream bottleneck (a T1)
is highly congested, so the 8 ms primary EMGs are modulated by
smaller EMGs of 0.12 ms corresponding to the 100 Mb/s link.
Figure 4b demonstrates a rare case where the PDF contains evi-
dence of a congested link upstream of the minimum-capacity link.
The ﬂow traverses an upstream highly congested 100 Mb/s bottle-
neck and then a downstream 10 Mb/s bottleneck. The downstream
bottleneck erases the ﬁrst few spikes, piling up their probability at
1.2 ms, but the tail of 0.12 ms EMGs from the highly-congested
100 Mb/s link is long enough that a second spike remains.
Figure 4c shows an interesting three-bottleneck structure. The min-
imum-capacity bottleneck is a 380 Kb/s link, which is apparent from
the envelope’s peak. The envelope is modulated by EMGs of around
1.2 ms, revealing a 10 Mb/s link. If we then look closely around one
of these modes, we see smaller modes equally spaced at intervals of
0.08 ms, revealing a downstream 155 Mb/s link.
As more bottlenecks leave their ﬁngerprints on the ﬂow’s inter-
arrivals, it becomes harder to disentangle their marks. 2 bottlenecks
are relatively easy to identify, but we’ve never seen more than 3. We
y
t
i
s
n
e
D
.
b
o
r
P
y
t
i
s
n
e
D
.
b
o
r
P
y
t
i
s
n
e
D
.
b
o
r
P
Mazu->MIT
8ms
 0.08
 0.07
 0.06
 0.05
 0.04
 0.03
 0.02
 0.01
 0
 0
 8
 16
 24
Interarrival times in milliseconds
(a) Upstream congested T1 and downstream 100 Mb/s.
1.2ms
Lulea->Cornell
Modes
0.12ms
 0.6
 0.5
 0.4
 0.3
 0.2
 0.1
 0
 0
 0.2
 0.4
 0.8
 0.6
 1.4
Interarrival times in milliseconds
 1.2
 1
 1.6
 1.8
 2
(b) Upstream highly congested 100 Mb/s and downstream 10 Mb/s.
 0.018
NC-Aros
0.08ms gaps
 33.6  33.8
 34
 34.2  34.4  34.6  34.8
Interarrival times in mlliseconds
Main Mode:32ms
1.2ms
y
t
i
s
n
e
D
.
b
o
r
P
 0.014
 0.012
 0.01
 0.008
 0.006
 0.004
 0.002
 0
 0.016
 0.014
 0.012
 0.01
 0.008
 0.006
 0.004
 0.002
 0
 25.5  27  28.5  30  31.5  33  34.5  36  37.5  39  40.5  42  43.5  45  46.5  48  49.5  51
Interarrival times in mlliseconds
(c) Three bottlenecks. The envelope peaks at 32 ms, indicating an upstream
380 Kb/s link; 1.2 ms EMGs correspond to the 10 Mb/s downstream link;
and 0.08 ms EMGs in the zoomed ﬁgure show a 155 Mb/s bottleneck.
Figure 4—Some interarrival PDFs with equally-spaced mode gaps.
cannot conﬁdently tell the maximum number of detectable bottle-
necks in a single PDF, but without additional information, it will be
difﬁcult to identify more than 3 bottlenecks.
3.3 Ack Interarrivals
Thus far, we’ve created PDFs from data packet interarrivals, using
traces collected downstream of any bottlenecks. This is useful when
we have control of the receiver or some observation point close to
the receiver. However, when the trace is taken at the sender side, the
ack stream holds whatever information can be recovered; and when
the observation point is in the middle of the network, both data and
ack interarrivals should be studied to discover bottlenecks upstream
and downstream of the observation point.
Ack interarrival PDFs contain more information than data inter-
arrival PDFs, but they also have a higher level of noise. The major
differences between the two PDFs are:
(a) Forward- and reverse-path bottlenecks. If every data packet
generated an ack, and ack spacing was undisturbed by the network,
then sender-side ack interarrivals would exactly equal the receiver-
side data packet interarrivals. Of course, the world is more compli-
cated than this. Acks also traverse the network, where their interar-
y
t
i
s
n
e
D
.
b
o
r
P
y
t
i
s
n
e
D
.
b
o
r
P
CMU->CCICOM
Mode
 0.24
 0.2
 0.16
 0.12
 0.08
 0.04
 0
 0  0.2  0.4  0.6  0.8  1  1.2  1.4  1.6  1.8  2  2.2  2.4  2.6  2.8  3
Interarrival times in milliseconds
(a) Main mode at around 1.2ms shows the 10Mb/s CMU link
0.12ms
CMU->CCICOM
Modes
 0.09
 0.08
 0.07
 0.06
 0.05
 0.04
 0.03
 0.02
 0.01
 0
 0  0.2  0.4  0.6  0.8  1  1.2  1.4  1.6  1.8  2  2.2  2.4  2.6  2.8  3
Inter-arrival times in milliseconds
(b) Gaps of 0.12ms show the 100Mb/s CCICOM link
Figure 5—The data from Figure 4b at two different resolutions.
rival times pick up a record of any bottlenecks on the reverse path.
This record is superimposed on the record of forward-path bottle-
necks generated by the data packets. We cannot tell whether a spe-
ciﬁc bottleneck is on the forward or reverse path unless we examine
the data interarrivals as well.
(b) Noise. Ack PDFs are much noisier than data-packet PDFs.
Data packets are mostly 1500 bytes long; thus, they reinforce the
EMG structure created by cross-trafﬁc bursts (modes spaced by 1500-
byte packets’ transmission time) even if they arrive at the bottleneck
queue back-to-back. 40-byte acks, on the other hand, do not rein-
force the mode structure when they arrive back-to-back.
(c) Delayed acks. In many ack PDFs, the biggest spike is at twice
the transmission time of the 1500 bytes packet on the minimum ca-
pacity link. This is caused by delayed acks, where the receiver gen-
erates one ack for roughly every second data packet.
Examination of many ack PDFs shows that EMG can be applied
to ack interarrivals, but with lower accuracy than data packet inter-
arrivals. In x5.3, we quantify the difference.
4 MULTIQ: AUTOMATING EMG
The multiQ passive bottleneck detection tool automates the EMG
capacity detection technique. It takes as input a tcpdump trace,
or a set of interarrivals obtained some other way, and automatically
discovers and estimates the capacity of the bottlenecks traversed by
certain ﬂows speciﬁed by the user.
Automating multiple bottleneck discovery is tricky: it requires in-
terpreting the interarrival PDF to extract the relevant information
and ignore the noise. To do this, multiQ analyzes the interarrival
PDF at a progression of resolutions corresponding to a known set of
common link speeds. To demonstrate this, Figure 5 plots the CMU-
to-CCICOM data from Figure 2b at two different resolutions. At the
lower resolution, we see one large mode in the distribution, which
corresponds to the upstream lower-capacity bottleneck. As we in-
crease the resolution, the large mode becomes fractured into smaller
spikes corresponding to the higher-capacity bottleneck.
Figure 6 shows the multiQ procedure in pseudocode. At each
resolution, starting with the highest resolution, multiQ constructs
a kernel density estimate of the PDF1 and scans it for modes, which
1Kernel density estimation is a standard method for constructing an
Compute kernel PDF estimate with width = scale
Find the modes
If there’s only one mode, at M:
Output a capacity of (1500  8=M) Mb/s
Exit
1. Compute ﬂow interarrivals from trace ﬁle
2. Set scale := 10 (cid:22)s
3. While scale < 10,000 (cid:22)s:
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.