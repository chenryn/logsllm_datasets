Furthermore, it is impossible to generate a consolidated
credential from fewer than t partial credentials.
• Blind issuance & Unlinkability: The authorities issue
the credential without learning any additional information
about the private attributes embedded in the credential.
Furthermore, it is impossible to link multiple showings of
the credentials with each other, or the issuing transcript,
even if all the authorities collude (see Section III-B).
• Non-interactivity: The authorities may operate indepen-
dently of each other, following a simple key distribution
and setup phase to agree on public security and crypto-
graphic parameters—they do not need to synchronize or
further coordinate their activities.
• Liveness: Coconut guarantees liveness as long as a
threshold number of authorities remains honest and weak
synchrony assumptions holds for the key distribution [33].
• Efﬁciency: The credentials and all zero-knowledge proofs
involved in the protocols are short and computationally
efﬁcient. After aggregation and re-randomization,
the
attribute showing and veriﬁcation involve only a single
consolidated credential, and are therefore O(1) in terms
of both cryptographic computations and communication
of cryptographic material—no matter the number of au-
thorities.
• Short credentials: Each partial credential—as well as
the consolidated credential—is composed of exactly two
group elements, no matter the number of authorities or
the number of attributes embedded in the credentials.
As a result, a large number of authorities may be used to
issue credentials, without signiﬁcantly affecting efﬁciency.
III. THE COCONUT CONSTRUCTION
We introduce the cryptographic primitives supporting
the Coconut architecture, step by step from the design of
Pointcheval and Sanders [43] and Boneh et al. [10], [9] to
the full Coconut scheme.
• Step 1: We ﬁrst recall (Section III-C) the scheme of