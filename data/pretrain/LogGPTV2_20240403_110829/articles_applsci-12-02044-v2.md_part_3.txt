characters since the parameters are in a plain text format. Due to the large number of
possiblecharacters,someofthemwillhavelengthyrepresentations,whichresultsinworse
compressioncapability. Thecodecsizealsodependsonthenumberofuniquecharacters.
Table2containsinformationaboutthesizeofthetemplatedictionary,parameterdictionary,
Huffmancodec,andtheoverallcompresseddatasize. WPEstandsfor“WithoutParameter
Encoding”. Thisisusedinoursecondapproach,wheretheparametersarenotencoded,
onlytheHuffmancodingisused.
Appl.Sci.2022,12,2044 12of32
Figure9.CompressionrateofthedifferentenhancementapproachesoftheLargedataset.
Figure10.CompressionrateofthedifferentenhancementapproachesoftheBigdataset.
Table2.Sizeofthedifferentassets.
IPLoM SmallDataset MidDataset LargeDataset BigDataset
Huff
Templatedictionary 2.981KB 4.266KB 4.24KB 4.293KB
Huffmancodec(WPE) 1.158KB 1.179KB 1.203KB 1.197KB
Compressedfile 409.426KB 1068.173KB 2674.835KB 5776.537KB
Overall 413.565KB 1073.618KB 2680.278KB 5782.027KB
Enh
Templatedictionary 2.981KB 4.266KB 4.24KB 4.293KB
Parameterdictionary 6.877KB 22.151KB 24.906KB 25.626KB
Compressedfile 358.361KB 855.013KB 2004.595KB 4506.784KB
Overall 368.219KB 881.43KB 2033.741KB 4536.703KB
EnhHuff
Templatedictionary 2.981KB 4.266KB 4.24KB 4.293KB
Parameterdictionary 6.877KB 22.151KB 24.906KB 25.626KB
Huffmancodec 0.362KB 0.362KB 0.362KB 0.362KB
Compressedfile 132.147KB 306.09KB 725.813KB 1608.534KB
Overall 142.367KB 332.869KB 755.321KB 1638.815KB
Appl.Sci.2022,12,2044 13of32
Table2.Cont.
MoLFI SmallDataset MidDataset LargeDataset BigDataset
Huff
Templatedictionary 3.832KB 4.45KB 4.606KB 4.461KB
Huffmancodec(WPE) 1.068KB 1.125KB 1.118KB 1.134KB
Compressedfile 313.133KB 986.065KB 2455.239KB 5550.092KB
Overall 318.033KB 991.64KB 2460.963KB 5555.687KB
Enh
Templatedictionary 3.832KB 4.45KB 4.606KB 4.461KB
Parameterdictionary 6.348KB 21.743KB 24.448KB 25.206KB
Compressedfile 288.102KB 854.308KB 1996.157KB 4522.154KB
Overall 298.282KB 880.501KB 2025.211KB 4551.821KB
EnhHuff
Templatedictionary 3.832KB 4.45KB 4.606KB 4.461KB
Parameterdictionary 6.348KB 21.743KB 24.448KB 25.206KB
Huffmancodec 0.362KB 0.362KB 0.362KB 0.362KB
Compressedfile 105.48KB 303.202KB 699.61KB 1606.879KB
Overall 116.022KB 329.757KB 729.026KB 1636.908KB
Itcanbeseenthatthesizeofthetemplatedictionaryissmallandconstant. Inthe
caseofthesecondenhancement,wewerealsorequiredtostoretheparameterdictionary.
It is larger than the template dictionary but still negligible compared to the size of the
uncompresseddata. Theuseoftheparameterdictionaryresultedina≈80%compression
rate, whichis ≈20%morethantheoriginalalgorithm’s. Thejointuseoftheparameter
dictionaryapproachandtheHuffmancodingprovidedthebestcompressionrates,around
≈92%. This can be explained by the fact that the file to be compressed only contains
numbersandspaces,whichresultsinaconstantandsmallcodec. Itisalsoimportantto
mentionthatthisapproachscaleswellforlargedatasets.Inthecaseofalltheenhancements,
theMoLFIversionhasslightlybetterratesthantheonethatusesIPLoM.
5.2.2. Experiment2: ComparingtheSpeedsoftheDifferentEnhancements
Thetimeittakesforacompressortocompressafileisalsoanimportantfactor. Asa
resultofthis,wefounditimportanttocomparetheruntimesofthedifferentenhancements.
Wealsoanalyzedthetimeouralgorithmtooktodecompressthedata. Weassumethatthe
templatesarepresent,sotheevaluationofthespeedneededtogeneratethetemplatesis
notpartofthispaper. TheresultscanbeseeninFigures11–14.
The compression and decompression speeds of the
enhanced method on the Small dataset
Compression speed Decompression speed
IPLoM + Huffman
MoLFI + Huffman
IPLoM +
Enhancement dohteM
MoLFI +
Enhancement
IPLoM +
Enhancement +
MoLFI +
Enhancement +
0 0.5 1 1.5 2
Elapsed time (s)
Figure11.SpeedsofthedifferentenhancementsusedontheSmalldataset.
Appl.Sci.2022,12,2044 14of32
The compression and decompression speeds of the
enhanced method on the Mid dataset
Compression speed Decompression speed
IPLoM + Huffman
MoLFI + Huffman
IPLoM +
Enhancement dohteM
MoLFI +
Enhancement
IPLoM +
Enhancement +
MoLFI +
Enhancement +
0 1 2 3 4 5
Elapsed time (s)
Figure12.SpeedsofthedifferentenhancementsusedontheMiddataset.
The compression and decompression speeds of the
enhanced method on the Large dataset
Compression speed Decompression speed
IPLoM + Huffman
MoLFI + Huffman
IPLoM +
Enhancement dohteM
MoLFI +
Enhancement
IPLoM +
Enhancement +
MoLFI +
Enhancement +
0 2 4 6 8 10 12
Elapsed time (s)
Figure13.SpeedsofthedifferentenhancementsusedontheLargedataset.
The compression and decompression speeds of the
enhanced method on the Big dataset
Compression speed Decompression speed
IPLoM + Huffman
MoLFI + Huffman
IPLoM +
Enhancement dohteM
MoLFI +
Enhancement
IPLoM +
Enhancement +
MoLFI +
Enhancement +
0 5 10 15 20 25
Elapsed time (s)
Figure14.SpeedsofthedifferentenhancementsusedontheBigdataset.
Appl.Sci.2022,12,2044 15of32
Itcanbeseenthatthecreationofaparameterdictionarydoesnottakemuchtime,
while the Huffman coding proves to be slower, especially when any kind of character
couldoccurinthefiletobecompressed,soittakesmoretimetofindtherepresentation
inthecodec. Inthecaseoftheparameterdictionaryapproach,thedecompressiontime
isjustslightlymorethanthetimeittakestocompressthefile. Thesamecannotbesaid
fortheapproachesthatuseHuffmancoding,sinceittakesatleasttwiceasmuchtimeto
decompressthefilewhenthismethodisinvolved. TheMoLFIversionissomewhatfaster
thantheIPLoMone.
5.2.3. Experiment3: ComparingtheCompressionRatesoftheNewEnhancedAlgorithm
andGeneralCompressors
In this experiment, we wanted to compare the compression rate achieved by our
parameterdictionaryandHuffmancodingtechniquewiththecompressionratesofgeneral
compressors. TheresultscanbeseeninFigures15–18.
Compression rates on the Small dataset
100.000
75.000
)%(
50.000
etaR
25.000
0.000
IPLoM MoLFI LZMA Bzip2 PPMd
Figure15.Thecomparisonofcompressionratesoftheenhancedalgorithmandgeneralcompressors
ontheSmalldataset.
Compression rates on the Mid dataset
100.000
75.000
)%(
50.000
etaR
25.000
0.000
IPLoM MoLFI LZMA Bzip2 PPMd
Figure16.Thecomparisonofcompressionoftheenhancedalgorithmandgeneralcompressorson
theMiddataset.
Appl.Sci.2022,12,2044 16of32
Compression rates on the Large dataset
100.000
75.000
)%(
50.000
etaR
25.000
0.000
IPLoM MoLFI LZMA Bzip2 PPMd
Figure17.Thecomparisonofcompressionratesoftheenhancedalgorithmandgeneralcompressors
ontheLargedataset.
Compression rates on the Big dataset
100.000
75.000
)%(
50.000
etaR
25.000
0.000
IPLoM MoLFI LZMA Bzip2 PPMd
Figure18.Thecomparisonofcompressionratesoftheenhancedalgorithmandgeneralcompressors
ontheBigdataset.
Outofthethreeinvestigatedgeneralcompressors,LZMAhasthehighestcompression
rate, with an average of 98.97%, while PPMd has the least, with 97% on average. Our
enhancedalgorithmachieved91.49%onaveragewhenusedwithIPLoMand92.11%inthe
caseofMoLFI.Wealsowantedtomeasurethecompressionratesonlargerdata,withthe
sizebeingmeasuredingigabytes. WeonlyinvestigatedthecompressionratesofMoLFI,
sinceithadthehighestcompressionrateonthepreviousdatasets. Forthispurpose,we
introducedfournewdatasets,A,B,C,andD,withthesizesof2GB,5GB,10GB,and50GB,
respectively. ThecompressionratesachievedareshowninTable3andFigures19–22.
Table3.CompressionratesontheA,B,CandDdatasets.
Dataset Proposed LZMA Bzip2 PPMd
A 94.652% 92.931% 95.823% 95.542%
B 94.782% 92.931% 95.823% 95.543%
C 94.650% 92.932% 95.823% 95.543%
D 94.682% 92.931% 95.823% 95.543%
Appl.Sci.2022,12,2044 17of32
Compression rates on the "A" dataset
100.000
75.000
)%(
50.000
etaR
25.000
0.000
Proposed LZMA Bzip2 PPMd
Figure19.Thecomparisonofcompressionratesoftheenhancedalgorithmandgeneralcompressors
ontheAdataset.
Compression rates on the "B" dataset
100.000
75.000
)%(
50.000
etaR
25.000
0.000
Proposed LZMA Bzip2 PPMd
Figure20.Thecomparisonofcompressionoftheenhancedalgorithmandgeneralcompressorson
theBdataset.
Compression rates on the "C" dataset
100.000
75.000
)%(
50.000
etaR
25.000
0.000
Proposed LZMA Bzip2 PPMd
Figure21.Thecomparisonofcompressionratesoftheenhancedalgorithmandgeneralcompressors
ontheCdataset.
Appl.Sci.2022,12,2044 18of32
Compression rates on the "D" dataset
100.000