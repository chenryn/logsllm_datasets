### Tim's Inputs on Soft Keyboards

An intuitive defense strategy against soft keyboard attacks is to adopt shuffled keyboards. This concept, previously proposed in [44], involves generating a new, random keyboard layout each time a user intends to enter a credential. Although attackers can still trace finger movements, they cannot accurately map these movements to specific keystrokes without knowledge of the keyboard layout. As pointed out in [60], this approach makes key inference nearly impossible but sacrifices authentication usability, as users must exert extra effort to locate keys on the shuffled keyboard and may introduce more input errors.

In a more practical approach, users can intentionally disrupt their typing behaviors by adding random pauses between keystrokes or varying their typing speeds for different key pairs. In both scenarios, attackers will struggle to convert time-dependent finger-screen distances into 3D finger movement traces. For the former, the trace length will appear much longer than the actual distance. For the latter, with dynamic typing speeds, it is impossible for an attacker to generate a meaningful finger movement trace using a constant speed (𝑣𝑝) estimated before the attack. Consequently, the derived 𝐿𝑥 and 𝐿𝑦 values become error-prone, making it difficult for the attacker to accurately recover individual key pairs, let alone the entire PIN.

### Electromagnetic Interference (EMI) Shielding

Another potential defense is the application of EMI shielding on touchscreens. This technique, widely used in many electronic devices, involves shielding radio waves to prevent radiation penetration. In our context, it can serve as a barrier to prevent EM emanation leakage or at least reduce the radiation strength. However, this approach may be expensive and require hardware modifications, including the introduction of new EMI materials and touchscreen circuit redesign. An alternative is to intentionally obfuscate the EM emanations emitted by the touchscreen, making the trajectories of EM readings unrecognizable. A straightforward method is to add well-calibrated noise to the touchscreen driving signal (𝑉𝑇𝑋(𝑡)). The attacker’s EM measurements (𝑉𝑚(𝑡)) will then be polluted, and since the attacker is unaware of the injected noise pattern, it will be challenging to distinguish between observed EM variations caused by finger movements and those caused by the injected noise.

### Conclusion

In this paper, we present Periscope, a novel eavesdropping attack that leverages human-coupled EM emanations from touchscreens to infer victims' typing inputs at a remote distance. We implemented the proposed attack with a prototype costing less than $10 and evaluated its effectiveness from various perspectives. Periscope demonstrates promising recovery accuracy up to 90 cm and can adapt to diverse device models and setting contexts. Unlike prior works, our approach is built on an analytic model that characterizes the relationship between EM measurements and finger movement traces, avoiding the need for large amounts of labeled data samples. In summary, we believe Periscope outperforms state-of-the-art keystroke inference attacks, especially in terms of practicality. Future work includes extending the attack distance and inferring letter inputs.

### Acknowledgments

We sincerely thank the anonymous reviewers for their insightful comments and valuable suggestions. This work is partially supported by NSF CNS-1943509.

### References

[1] Kamran Ali, Alex X Liu, Wei Wang, and Muhammad Shahzad. 2015. Keystroke recognition using WiFi signals. In Proceedings of the Annual International Conference on Mobile computing and networking.
...
[64] Anya Zhukova. 2020. How To See Who Is Connected To My WiFi. (2020). https://helpdeskgeek.com/how-to/determine-computers-connected-to-wireless-network/

### Appendix

**Table 4: Comparison with State-of-the-Art Inference Attacks**

| Signal System | Pre-install Malware | Environment Adaptability |
|---------------|---------------------|--------------------------|
| TouchLogger [9] | No | Limited |
| Taplogger [57] | No | Limited |
| Mait et al. [33] | No | Limited |
| Liu et al. [30] | No | Limited |
| Accessory [39] | No | Limited |
| Tapprints [36] | No | Limited |
| Berger et al. [7] | No | Limited |
| Kune et al. [18] | No | Limited |
| Zhu et al. [62] | No | Limited |
| KeyListener [32] | No | Limited |
| Liu et al. [29] | No | Limited |
| Ubik [52] | No | Limited |
| Agrawal et al. [4] | No | Limited |
| Zhuang et al. [63] | No | Limited |
| Shumailov et al. [46] | No | Limited |
| Shukla et al. [45] | No | Limited |
| Seeing Double [56] | No | Limited |
| GazeRevealer [55] | No | Limited |
| EyeTell [11] | No | Limited |
| Wang et al. [54] | No | Limited |
| VISIBLE [47] | No | Limited |
| Backes et al. [5] | No | Limited |
| iSpy [42] | No | Limited |
| Backes et al. [6] | No | Limited |
| Li et al. [27] | No | Limited |
| Ali et al. [1] | No | Limited |
| Zhang et al. [61] | No | Limited |
| Fang et al. [16] | No | Limited |
| SpiderMon [28] | No | Limited |
| Li et al. [51] | No | Limited |

This optimized version aims to make the text more coherent, clear, and professional, while maintaining the original content and structure.