intermediate router or the destination, and sends that back to the
tool. For example, on a topology with the simplest possible diamond
(a divergence point, two nodes, and a convergence point), we were
able to test that the real failure probability of the topology, which
is 0.03125, given the set of nk values used by the MDA for a failure
probability of 0.05, was respected. We ran the MDA 1000 times on
this topology to obtain a sample mean rate of failure, and obtained
50 such samples to obtain an overall mean and a confidence in-
terval. This took 10 minutes on a contemporary laptop machine,
giving a 0.03206 mean of failure, with a 95% confidence interval
of size 0.00156. We were able to run the same test on much larger
topologies as well, as indicated in the previous section. Fakeroute
is available as free open-source software at the URL mentioned at
the end of Sec. 1.
4 MULTILEVEL ROUTE TRACING
The third principal contribution of this paper, after the MDA-Lite
and Fakeroute of the previous sections, is IPv4 multilevel route trac-
ing, embodied in a version of Paris Traceroute that we refer to here
as Multilevel MDA-Lite Paris Traceroute (MMLPT). By “multilevel”,
we mean that the tool provides router-level information in addition
to the standard interface-level information. Some router-level in-
formation is already commonly provided by standard Traceroute
command line tools, as they perform DNS look-ups on the IP ad-
dresses that they discover, and the name of an interface is often
a variant on the name that has been assigned to the router as a
whole. In addition, some of the prior work [20, 46] that we describe
in Sec. 6 can reveal router or middlebox level information in the
context of a Traceroute. Within the network measurement com-
munity, there are survey workflows, such as the one employed by
bdrmap [35], that perform route traces and then alias resolution,
and there are survey tools, such as scamper [34], that are capable
0.0010.010.1110100Vertex ratio alternative:MDA0.00.20.40.60.81.0Portion of topologiesSingle flow IDSecond MDAMDA-Lite 2MDA-Lite 40.0010.010.1110100Edge ratio alternative:MDA0.00.20.40.60.81.0Portion of topologiesSingle flow IDSecond MDAMDA-Lite 2MDA-Lite 40.0010.010.1110100Packet ratio alternative:MDA0.00.20.40.60.81.0Portion of topologiesSingle flow IDSecond MDAMDA-Lite 2MDA-Lite 4of performing both functions independently. To take another re-
cent example, Marchetta et al. [37], employed a specialized tool,
Paris Traceroute with the MDA, to conduct multipath tracing, and
then another specialized tool, Midar, to conduct alias resolution
on the IP addresses that the first tool reveals. But there has not
previously been a command-line Traceroute tool, in the line of Van
Jacobson’s Traceroute [31], Modern Traceroute for Linux [12], and
the like, with an option to obtain a router level view of multipath
routes. With the advent of multipath route tracing ten years ago, it
would seem to be a natural next step to incorporate alias resolution
directly into Traceroute itself. Such a tool could readily be slotted
in to workflows that currently invoke a Traceroute, and it would
bring new capabilities to those, such as network operators, who
use Traceroute for network troubleshooting purposes.
Alias resolution from a Traceroute perspective, coming as it
does from a single route trace from a single vantage point, will
never be as complete as alias resolution performed from multiple
vantage points on IP addresses gleaned from traces from multiple
vantage points. Nevertheless, we argue, alias resolution integrated
into Traceroute, provides valuable information. When one observes
multiple parallel paths in a route trace, the question immediately
arises as to whether they are independent or not. Between two
adjacent hops, one could be observing links to different interfaces
on a single router or links to separate routers. MMLPT provides
the capacity to distinguish between these cases at the moment of
the route trace, without having to apply an additional tool for post
hoc analysis, such Marchetta et al in [37]. Anyone who conducts
route traces outside of the context of a dedicated survey, such as a
network operator performing troubleshooting, can benefit.
The remainder of this section describes the alias resolution tech-
niques that MMLPT employs (Sec. 4.1) and shows how we evaluate
them (Sec. 4.2). Survey results using the tool are reported in Sec. 5.2.
4.1 Alias resolution
As mentioned in the Related Work section, MMLPT performs alias
resolution using Midar’s Monotonic Bounds Test (MBT) [33] and
two techniques described by Vanaubel et al.: Network Fingerprint-
ing [46], and MPLS Labeling [45]. In its overall approach, it follows
the MBT’s set-based schema for alias identification. An initial set is
established of all of the candidate addresses, and then broken down
into smaller and smaller sets as probing evidence indicates that
certain pairs of addresses are not related. The sets are composed
in such a way that each address in a set has failed alias tests with
every address in every other set. At any point, each set that contains
two or more addresses is considered to consist of the aliases of a
common router. Further probing further refines these sets.
Midar faces a particular challenge in establishing its initial sets
of candidate aliases, as it is designed to seek aliases from on the
order of a million candidate addresses. It breaks this large number
down into manageable sized initial sets by sorting aliases on the
basis of how fast their IP IDs are evolving over time. MMLPT skips
this step, as its task is narrower: to seek aliases among the addresses
found in a single multipath route trace. It assumes that the aliases
of a given router are to be found among the addresses found at a
given hop, and so there will be at most on the order of one hundred
candidate aliases. As a result, we only borrow the MBT from Midar,
and not its full complement of probing stages and heuristics.
Evidence that two addresses are not related comes in different
forms, depending upon the test:
• The MBT looks at sequences of IP IDs from addresses that
have been probed alternately. A monotonic increase in iden-
tifiers, taking wraparound into account, is consistent with
the addresses being aliases, whereas a single out-of-sequence
identifier is used to place the addresses into separate alias
sets. We recall that MMLPT has used UDP indirect probing
and that we have used Midar with UDP, TCP, and ICMP
direct probing to collect IP ID time series.
• Network Fingerprinting looks at the TTLs of reply packets
to a ping style probe and a Traceroute style probe, and in-
fers their likely initial TTLs. Replies to probes of different
addresses having different initial TTLs are almost certainly
from different routers, and so the addresses are placed into
separate alias sets.
• MPLS Labeling looks at the MPLS labels that appear in reply
packets from different addresses. Vanaubel et al. [45] have
characterized the different cases of MPLS tunnels with load
balancing and developed methods to infer aliases from MPLS
labels. To be usable, labels of interfaces in an MPLS tunnel
have to be constant over time for each interface. Otherwise,
MPLS labels are not helpful to infer aliases. Then, if, for
two interfaces in an MPLS tunnel found at the same hop,
their labels differ, it is highly likely that these two interfaces
belong to two different routers. So the addresses are placed
into separate alias sets. Conversely, if the labels are the same
for the two interfaces, then it is highly likely that these two
interfaces belong to the same router.
False positives, in which two addresses that are not aliases remain
in the same set, can arise through their routers having identical
fingerprints and MPLS signatures (when available), alongside a lack
of sufficient MBT probing. False negatives, in which two addresses
that are in fact aliases get placed in separate sets can arise when,
instead of a single router-wide IP ID counter, a router employs
separate IP ID counters for each flow identifier, and so the addresses
fail the MBT [24].
Some of the basic data required by these techniques is collected
as part of basic MDA-Lite Paris Traceroute probing: IP IDs that
are used by the MBT; the TTLs of “indirect probing” reply packets
that are used by Network Fingerprinting; and the MPLS labels that
appear in reply packets. A light version of the MBT, along with
MPLS Labeling, can therefore be performed “for free”, based on
these data. The results are then refined by MMLPT over additional
rounds of probing, with the direct probes required for Network
Fingerprinting and indirect probes to solicit more and longer se-
quences of IP IDs for the MBT. The signature-based methods are
applied just once, whereas successive rounds of the MBT refine
the results. After 10 rounds, MMLPT declares sets that remain as
aliases.
Our tool, like Midar, produces three possible outcomes for a pair
of IP addresses. Either it accepts that they are aliases of the same
router, or they are rejected as being aliases of the same router, or it is
not possible for the tool to determine one way or the other. Failure
Accept Direct Reject Direct Unable Direct
0.283
Accept Indirect
N/A
Reject Indirect
Unable Indirect
N/A
Table 2: Findings for 4798 address sets identified as routers
either by indirect probing (MMLPT) or direct probing
(Midar), expressed as portions adding up to 1.0
0.005
N/A
N/A
0.365
0.144
0.203
via indirect probing. We compare these results with what direct
probing IP ID techniques would have found, using Midar for this.
We ran Midar on all the addresses of the diamond, and Midar
too identifies zero or more address sets as routers in the diamond.
We take the union of the address sets identified by both tools, and
compare: which ones did both accept as being a router, and which
ones were accepted by one of the tools but not by the other? If a tool
does not accept an address set, it is either because it has rejected
it (for instance by finding a pair of addresses that has failed the
MBT) or because it is unable to determine if one or more of the
addresses belongs in the set (for instance because of an insufficient
time series from an address).
Table 2 shows the results for 4798 address sets, of which 3414
were identified as routers by Midar and 3140 by MMLPT. The
values are the portion of address sets that fall within each category.
36.5% were accepted as routers by both Midar and MMLPT. Just
0.5% of sets accepted by MMLPT are rejected by Midar, whereas
14.4% of sets accepted by Midar are rejected by MMLPT. The latter
can be explained by routers that implement per-interface counters
for the IP ID for the ICMP Time Exceeded messages associated with
indirect probing and router-wide counters for the ICMP Echo Reply
messages associated with direct probing.
Significant portions of sets accepted by one tool encounter a
failure to determine a result by the other tool: 20.3% of sets ac-
cepted by Midar led to no conclusion by MMLPT and 28.3% of sets
accepted by MMLPT led to no conclusion by Midar. Upon further
investigation, we found that 98.6% of the non conclusive cases for
MMLPT are due to either constant (mostly zero) IP IDs and 1.4%
to non monotonic IP ID series. Looking at Midar logs, we found
that the 28.3% inconclusive cases had different causes: for each in-
conclusive set, at least one IP in the set was either unresponsive to
direct probing (60.5%), or its IP ID series was a copy of the probe IP
ID (22.8%), or its IP ID series was non monotonic (13.6%), or Midar
got unexpected responses, meaning that the reply did not match
that which would be expected based upon the probe protocol used
(3.1%).
Our overall conclusion is that direct probing provides a poten-
tially valuable complement to indirect probing, and that we should
include it in future versions of MMLPT, while also evaluating the
tradeoff in what is gained against the additional probing cost that
it will entail.
5 SURVEYS
This section presents the two surveys that we have conducted, one
at the IP level, the other at the router level. The aim in both is to
characterize the topologies that are encountered by multipath route
Figure 5: Alias resolution over ten rounds
to determine is not an unusual case, as there are addresses from
which responses to probes do not have monotonically increasing
IP ID values. Such an address might, for instance, systematically
respond with the same value in response to every probe. Or it
might not provide a sufficient number of responses from which to
construct a time series.
4.2 Evaluation
We looked at how MMLPT’s alias resolution results evolve round
by round. Round 0 is based on just the data obtained through MDA-
Lite Paris Traceroute, with no additional probing. The MBT and
signature-based tests are applied to the extent possible. Round 1
adds one direct probe to each of the IP addresses at a given hop, in
order to provide more complete Network Fingerprinting signatures.
It also is the first round of MBT probing, attempting to elicit 30
replies per address. Each subsequent round through to Round 10
consists of an additional 30 indirect probes per address, in order to
further refine the alias sets using the MBT.
Fig. 5 presents overall values for precision, recall, and numbers
of probes sent over the 10,000 measurements conducted for the
MDA-Lite evaluation of Sec. 2.4. We do not have ground truth, so
precision and recall are relative to our best available determination
of the alias sets, which is the result of Round 10 in each case. The
number of probes is relative to the number sent in Round 0.
Round 0, with no probing beyond that which is performed for
MDA-Lite Paris Traceroute, yielded 68% precision and 81% recall
with respect to the Round 10 results. A significant jump to 92%
in both cases came with a first round of probing, and then there