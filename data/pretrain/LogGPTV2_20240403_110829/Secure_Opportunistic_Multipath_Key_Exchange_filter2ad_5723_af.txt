denition [6], i.e. the server session is uncorrupted, or the adversary
7To keep the message format compatible with standard TLS, the random elds can be
replaced by independent values and ignored in the computation.
behaves as an A/A adversary, in which case it can even corrupt the
(long term key of the) server session.
T 3 (MTLS; ). For the described type of adver-
sary, MTLS is secure under the condition that the DDH assumption
holds in the selected group and that the signature scheme used in TLS
is existentially unforgeable. The statement holds in the random-oracle
model.
The proof is essentially a combination of the proof of Theorem 2
and a standard analysis of the TLS 1.3 core protocol.
11 RELATED WORK
There have been many schemes proposed for trust establishment.
We refer the reader to the survey of Unger et al. [49, Section III]
for a comprehensive treatment. Here, we shall focus mostly on
opportunistic approaches, popular protocols such as TLS, QUIC
and Signal, as well as some previous proposals for using multiple
channels to establish trust.
One of the best-known protocols for basic opportunistic encryp-
tion is Tcpcrypt [4]. It performs an ecient key exchange8 over a
TCP connection to derive keys and then can output an authentica-
tion tag over the session transcript, which could be veried using a
trusted certicate or using a dierent communication channel. As
in SMKEX, we could send the authentication tag over a secondary
public channel (secondary subow in MPTCP) rather than relying
on a certicate or dierent form of communication channel. Hence,
our design can also be seen as a model for increasing the security
of previous opportunistic encryption methods such as Tcpcrypt.
An enhanced version of basic opportunistic encryption is done
through trust-on-rst-use (TOFU), as is the case for SSH or using
self-signed certicates, where the client remembers the rst long-
term key sent by the server. However, as Wendlandt et al. [50] men-
tion, such approaches are completely vulnerable to active MITM
attackers during the initial key setup or during key update. SMKEX
can protect against many active attackers at all all times. Hence,
by combining SMKEX with TOFU, we obtain the best protection
possible to date for opportunistic encryption.
The most popular protocols for securing client-server commu-
nications, TLS [13] and QUIC [22], as well as the most popular
protocol for secure messaging, Signal [46], all rely on trusted third
parties to issue correct certicates (TLS, QUIC) or long-term public
keys (Signal). However, such trust is problematic, as third parties
can become corrupted [17, 20, 33], verication is dicult [35] and
keys may be shared among many untrusted parties [7]. Hence,
several schemes have been proposed to cope with these issues
(mainly focusing on certicates), including: a) monitoring issued
certicates [19, 50]; b) creating and managing public logs of all
issued certs [32]; c) proposing modications to the existing archi-
tecture [26, 27]. Unfortunately, all of these schemes still require
trust in one or more entities. Furthermore, solutions in the rst cat-
egory add overhead to TLS connections, the solutions in the second
category cannot quickly cope with compromised private domain
keys, while those in the third category remain largely impractical
due to the many actors and work required.
8Shifts the expensive part of public-key encryption to the client in the case of key
exchange based on RSA encryption of a fresh symmetric key, reducing burden from
the server and encouraging wide adoption of encryption.
Finally, there have also been some proposals for using multiple
communication channels. Some of these require using a secure
channel [52], while others propose to use secret sharing for dis-
tributing the key [47], which we have shown not to be secure in our
setting (see §4). In contrast, SMKEX provides a secure key exchange,
proven against A-P and A/A adversaries, which works across public
channels.
12 CONCLUSION
SMKEX allows the most secure opportunistic encryption method
to date, by relying on several public communication channels. We
have proven that it provides secure key exchanges with forward and
backward secrecy across a wide range of adversaries and we have
shown that the current path diversity across the Internet allows
SMKEX to protect against local and nation-wide active man-in-
the-middle attackers. Its simplicity also means that we can easily
integrate SMKEX with TOFU and TLS-like protocols, increasing
their security.
We have a fully-working implementation of SMKEX, based on
a modied Linux MPTCP kernel implementation and a user-level
library, which allow unmodied applications to use SMKEX. There-
fore, SMKEX is ready to be used. Servers only need to support
MPTCP across their edge servers, which can be easily done with
the methods we have shown. With the ongoing deployment of
MPTCP, we expect this to happen soon, but perhaps the advan-
tages of SMKEX can motivate some of the large web sites to deploy
MPTCP even sooner.
SOURCE CODE
The source code for SMKEX is available here:
https://github.com/nets-cs-pub-ro/smkex
and the modied MPTCP kernel, required for SMKEX, is here:
https://github.com/nets-cs-pub-ro/mptcp-smkex
Acknowledgement:
We thank all the people that have helped us in this work, through
ideas, experiments, comments in previous drafts and several other
ways. Among them, we thank Ross Anderson, Virgil Gligor, Markus
Kuhn, Mike Bond and Hugo Krawczyk.
This work was sponsored in part by the European Commission,
through the SSICLOPS H2020 project.
REFERENCES
[1] A. Ford and C. Raiciu and M. Handley and O. Bonaventure. RFC6824:TCP
Extensions for Multipath Operation ... https://tools.ietf.org/html/rfc6824.
[2] D. Aggarwal, S. Agrawal, D. Gupta, H. K. Maji, O. Pandey, and M. Prabhakaran.
Optimal computational split-state non-malleable codes. In Theory of Cryptogra-
phy, volume 9563 of LNCS, pages 393–217, 2016.
[3] M. Bellare and P. Rogaway. Entity authentication and key distribution. In D. R.
Stinson, editor, Advances in Cryptology — CRYPTO 1993, volume 773 of Lecture
Notes in Computer Science, pages 232–249. Springer, 1993.
[4] A. Bittau, M. Hamburg, M. Handley, D. Mazieres, and D. Boneh. The case for
ubiquitous transport-level encryption. In USENIX Security Symposium, pages
403–418, 2010.
[5] S. Blake-Wilson, D. Johnson, and A. Menezes. Key agreement protocols and their
security analysis. Crytography and Coding, pages 30–45, 1997.
[6] R. Canetti and H. Krawczyk. Analysis of key-exchange protocols and their use
In International Conference on the Theory and
for building secure channels.
Applications of Cryptographic Techniques, pages 453–474. Springer, 2001.
[7] F. Cangialosi, T. Chung, D. Chones, D. Levin, B. M. Maggs, A. Mislove, and C. Wil-
son. Measurement and analysis of private key sharing in the https ecosystem. In
Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications
Security, pages 628–640, New York, NY, USA, 2016. ACM.
[8] L. Carter and M. Wegman. Universal classes of hash functions. Journal of
Computer and System Sciences, 18(2):143–154, 1979.
[9] K.-K. R. Choo, C. Boyd, and Y. Hitckcock. Examining indistinguishability-based
In Advances in Cryptology —
proof models for key establishment protocols.
ASIACRYPT 2005, volume 3788 of LNCS, pages 585–604. IACR, Springer, 2005.
[10] Cisco.
Global Mobile Data Trac Forecast.
http://www.cisco.com/c/
en/us/solutions/collateral/service-provider/visual-networking-index-vni/
mobile-white-paper-c11-520862.html.
[11] K. Cohn-Gordon, C. Cremers, B. Dowling, L. Garratt, and D. Stebila. A formal
In Security and Privacy
security analysis of the signal messaging protocol.
(EuroS&P), 2017 IEEE European Symposium on, pages 451–466. IEEE, 2017.
[12] A. Croitoru, D. Niculescu, and C. Raiciu. Towards wi mobility without fast
handover. In 12th USENIX Symposium on Networked Systems Design and Imple-
mentation (NSDI 15), pages 219–234, Oakland, CA, 2015. USENIX Association.
[13] T. Dierks and E. Rescorla. The transport layer security (TLS) protocol version
1.2. RFC 5246. 2008.
[14] W. Die and M. Hellman. New directions in cryptography. IEEE transactions on
Information Theory, 22(6):644–654, 1976.
[15] V. Dukhovni. Opportunistic Security: Some Protection Most of the Time. 2014.
[16] S. Dziembowski, K. Pietrzak, and D. Wichs. Non-malleable codes. In ITCS, 2010.
[17] Eckersley, P. Iranian hackers obtain fraudulent HTTPS certicates: How close to
a Web security meltdown did we get? https://www.e.org/deeplinks/2011/03/
iranian-hackers-obtain-fraudulent-https. Last accessed: November 2017.
[18] D. E. Eisenbud, C. Yi, C. Contavalli, C. Smith, R. Kononov, E. Mann-Hielscher,
A. das Cilingiroglu, B. Cheyney, W. Shang, and J. D. Hosein. Maglev: A fast
and reliable software network load balancer.
In 13th USENIX Symposium on
Networked Systems Design and Implementation (NSDI 16), pages 523–535, Santa
Clara, CA, Mar. 2016. USENIX Association.
[19] Electronic Frontier Foundation. Ssl observatory. https://www.e.org/observatory.
[20] Fisher, D.
to-
https://threatpost.com/
tal
nal-report-diginotar-hack-shows-total-compromise-ca-servers-103112/
77170/. Last accessed: November 2017.
[21] A. Flavel, P. Mani, D. Maltz, N. Holt, J. Liu, Y. Chen, and O. Surmachev. Fastroute:
A scalable load-aware anycast routing architecture for modern cdns. In 12th
USENIX Symposium on Networked Systems Design and Implementation (NSDI 15),
pages 381–394, Oakland, CA, 2015. USENIX Association.
[22] R. Hamilton, J. Iyengar, I. Swett, and A. Wilk. QUIC: A UDP-Based Secure and
on
servers.
compromise
diginotar
Final
of
shows
report
hack
ca
Reliable Transport for HTTP/2. 2016.
[23] B. Hesmans, O. Bonaventure, and F. Duchene. A socket api to control multipath
tcp (draft-hesmans-mptcp-socket-03). 2008.
[24] R. Impagliazzo, L. Levin, and M. Luby. Pseudo-random generation from one-way
functions. In STOC, 1989.
Association.
[25] R. Joyce. Disrupting nation state hackers. San Francisco, CA, 2016. USENIX
[26] T. H.-J. Kim, L. Huang, A. Perrig, C. Jackson, and V. Gligor. Transparent key
integrity (tki): A proposal for a public-key validation infrastructure. Technical
Report CMU-CyLab-12-016, Carnegie Mellon University, 2012.
[27] T. H.-J. Kim, L.-S. Huang, A. Perrig, C. Jackson, and V. Gligor. Accountable
key infrastructure (aki): A proposal for a public-key validation infrastructure.
In Proceedings of the 22nd international conference on World Wide Web, pages
679–690. ACM, 2013.
[28] H. Krawcyzk, K. G. Paterson, and H. Wee. On the security of the TLS protocol:
A systematic analysis. In Advances in Cryptology — CRYPTO 2013, Heidelberg,
2013. Springer.
[29] H. Krawczyk and P. Eronen. Hmac-based extract-and-expand key derivation
function (hkdf). 2010.
[30] H. Krawczyk and H. Wee. The optls protocol and tls 1.3. In 2016 IEEE European
Symposium on Security and Privacy (EuroS&P), pages 81–96. IEEE, 2016.
[31] C. Labovitz, S. Iekel-Johnson, D. McPherson, J. Oberheide, and F. Jahanian. Inter-
net inter-domain trac. In Proceedings of the ACM SIGCOMM 2010 Conference,
SIGCOMM ’10, pages 75–86, New York, NY, USA, 2010. ACM.
[32] B. Laurie, A. Langley, and E. Kasper. Certicate Transparency. 2013.
[33] Lemos, R. Microsoft warns of hijacked certicates. https://www.cnet.com/news/
microsoft-warns-of-hijacked-certicates/. Last accessed: November 2017.
[34] D. Levin, Y. Lee, L. Valenta, Z. Li, V. Lai, C. Lumezanu, N. Spring, and B. Bhat-
tacharjee. Alibi routing. In Proceedings of the 2015 ACM Conference on Special
Interest Group on Data Communication, SIGCOMM ’15, pages 611–624, New York,
NY, USA, 2015. ACM.
[35] Y. Liu, W. Tome, L. Zhang, D. Chones, D. Levin, B. Maggs, A. Mislove, A. Schul-
man, and C. Wilson. An end-to-end measurement of certicate revocation in
the web’s pki. In Proceedings of the 2015 Internet Measurement Conference, pages
183–196, New York, NY, USA, 2015. ACM.
[36] R. Miao, H. Zeng, C. Kim, J. Lee, and M. Yu. Silkroad: Making stateful layer-4 load
balancing fast and cheap using switching asics. In Proceedings of the Conference
of the ACM Special Interest Group on Data Communication, SIGCOMM ’17, pages
15–28, New York, NY, USA, 2017. ACM.
[37] MPTCP Blog. Commercial usage of multipath tcp. http://blog.multipath-tcp.org/
blog/html/2015/12/25/commercial_usage_of_multipath_tcp.html. Last accessed:
November 2017.
[38] D. Nguyen, D. C. Phung, S. Secci, B. Felix, and M. Nogueira. Can MPTCP Secure
Internet Communications from Man-in-the-Middle Attacks? In In proceedings of
CNSM:International Conference on Network and Service Management, 2017.
[39] H.-D.-D. Nguyen, C.-D. Phung, S. Secci, B. Felix, and M. Nogueira. Can MPTCP
Secure Internet Communications from Man-in-the-Middle Attacks? 2017.
[40] V. Olteanu, A. Agache, A. Voinescu, and C. Raiciu. Stateless datacenter load-
balancing with beamer. In 15th USENIX Symposium on Networked Systems Design
and Implementation (NSDI 18), pages 125–139, Renton, WA, 2018. USENIX Asso-
ciation.
[41] P. Patel, D. Bansal, L. Yuan, A. Murthy, A. Greenberg, D. A. Maltz, R. ˜Kern,
H. Kumar, M. Zikos, H. Wu, C. Kim, and N. Karri. Ananta: Cloud scale load
balancing. In SIGCOMM, 2013.
[42] Perrin T. Axolotl ratchet. https://github.com/trevp/axolotl/wiki.
[43] C. Raiciu, D. Niculescu, M. Bagnulo, and M. J. Handley. Opportunistic mobility
with multipath tcp. In Proceedings of the Sixth International Workshop on MobiArch,
MobiArch ’11, pages 7–12, New York, NY, USA, 2011. ACM.
[44] E. Rescorla. The transport layer security (TLS) protocol version 1.3. internet
draft. 2018.
Plain
Sight.
The NSA’s
[45] A. Shamir. How to share a secret. Commun. ACM, 22(11):612–613, Nov. 1979.
[46] Signal. Signal documentation. https://signal.org/docs/.
[47] Y. Takano, N. Isozaki, and Y. Shinoda. Multipath key exchange on p2p networks.
In First International Conference on Availability, Reliability and Security (ARES’06),
April 2006.
[48] The
den
the-nsas-spy-hub-in-new-york-hidden-in-plain-sight/.
November 2017.
Spy Hub
in New York, Hid-
https://theintercept.com/2016/11/16/
Last accessed:
Intercept.
in
[49] N. Unger, S. Dechand, J. Bonneau, S. Fahl, H. Perl, I. Goldberg, and M. Smith. Sok:
secure messaging. In Security and Privacy (SP), 2015 IEEE Symposium on, pages
232–249. IEEE, 2015.
[50] D. Wendlandt, D. G. Andersen, and A. Perrig. Perspectives: Improving ssh-
style host authentication with multi-path probing. In USENIX Annual Technical
Conference, volume 8, pages 321–334, 2008.
[51] Wired. WHAT WE KNOW ABOUT THE NSA AND AT&T’S SPYING PACT.
https://www.wired.com/2015/08/know-nsa-atts-spying-pact/. Last accessed:
November 2017.
[52] F. L. Wong and F. Stajano. Multichannel security protocols. Pervasive Computing,
IEEE, 6(4):31–39, 2007.
A DETAILED SECURITY MODEL
To analyze SMKEX, we extend the model of Canetti and Krawczyk [6] in
several aspects and describe how the protocol is analyzed in that framework.
We rst shortly recall the Canetti-Krawczyk model in §A.1, and then describe
the necessary modications in §A.2.
A.1 Canetti-Krawczyk in a nutshell
Message-driven protocols. The model of Canetti and Krawczyk [6] models
the execution of a protocol, modeled through a Turing machine, between
a set of parties P1, . . . , Pn. A message-driven protocol is either triggered
at a party through an external “call” or through an arriving messages. At
each of these events, the protocol processes the incoming information and
may produce local output and/or transmit a message over the network.