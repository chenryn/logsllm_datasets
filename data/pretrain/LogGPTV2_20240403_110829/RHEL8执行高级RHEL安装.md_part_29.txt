::: itemizedlist
**其它资源**
-   有关 LVM
    的详情，请参考[配置和管理逻辑卷文档](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_logical_volumes/index){.link}。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#mount_kickstart-commands-for-handling-storage}mount {.title}
:::
`mount`{.literal} Kickstart
命令是可选的。它为现有块设备分配挂载点，并选择性地将其重新格式化为给定格式。
::: title
**语法**
:::
``` screen
mount [OPTIONS] device mountpoint
```
::: itemizedlist
**必须的选项**
-   `device`{.literal} - 要挂载的块设备。
-   `mountpoint`{.literal} - 在哪里挂载
    `device`{.literal}。它必须是有效的挂载点，如 `/`{.literal} 或
    `/usr`{.literal} 或 `none`{.literal} 如果该设备是不可卸载的（例如
    `swap`{.literal}）。
:::
::: itemizedlist
**可选选项：**
-   `--reformat=`{.literal} - 指定重新格式化该设备的新格式（比如
    `ext4`{.literal}）。
-   `--mkfsoptions=`{.literal} -
    指定要传递给命令的附加选项，以便生成在其中指定的新文件系统
    `--reformat=`{.literal}。这里提供的选项列表没有被处理，因此必须使用可直接传递给该程序的格式
    `mkfs`{.literal}。根据具体文件系统，选项列表应该用逗号分开，或使用双引号分开。有关具体详情，请查看
    `mkfs`{.literal} man page（例如 `mkfs.ext4(8)`{.literal} 或
    `mkfs.xfs(8)`{.literal}）。
-   `--mountoptions=`{.literal} -
    指定包含挂载文件系统时要使用的选项的自由格式字符串。将字符串复制到安装的系统上的
    `/etc/fstab`{.literal}
    文件，并使用双引号括起来。挂载选项的完整列表及 `fstab(5)`{.literal}
    基本信息，请查看 `mount(8)`{.literal} man page。
:::
::: itemizedlist
**备注**
-   与 Kickstart 中的大多数其它存储配置命令不同，`mount`{.literal}
    不需要在 Kickstart
    文件中描述整个存储配置。您只需要确定系统中存在描述的块设备。但是，如果要使用挂载的所有设备[*创建*]{.emphasis}存储堆栈，则必须使用其他命令，比如
    `part`{.literal} 要这样做。
-   在同一个 Kickstart 文件中，您不能将 `mount`{.literal}
    与其他存储相关的命令，如 `part`{.literal}、`logvol`{.literal} 或
    `autopart`{.literal} 一起使用。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#nvdimm_kickstart-commands-for-handling-storage}nvdimm {.title}
:::
`nvdimm`{.literal} Kickstart
命令是可选的。它对非线性内存模块(NVDIMM)设备执行操作。
::: title
**语法**
:::
``` screen
nvdimm action [OPTIONS]
```
::: itemizedlist
**操作**
-   `reconfigure`{.literal} - 将特定的 NVDIMM
    设备重新配置为给定模式。另外，指定的设备被隐式标记为要使用的，因此后续的同一设备
    `nvdimm use`{.literal} 命令就冗余了。这个操作使用以下格式：
    ``` screen
    nvdimm reconfigure [--namespace=NAMESPACE] [--mode=MODE] [--sectorsize=SECTORSIZE]
    ```
    ::: informalexample
    ::: itemizedlist
    -   `--namespace=`{.literal} - 按命名空间的设备规格。例如：
        ``` screen
        nvdimm reconfigure --namespace=namespace0.0 --mode=sector --sectorsize=512
        ```
    -   `--mode=`{.literal} - 模式规格。目前，只有 `sector`{.literal}
        值可用。
    -   `--sectorsize=`{.literal} - 扇区模式的扇区大小。例如：
        ``` screen
        nvdimm reconfigure --namespace=namespace0.0 --mode=sector --sectorsize=512
        ```
        支持的扇区大小为 512 和 4096 字节。
    :::
    :::
-   `use`{.literal} - 将 NVDIMM
    设备指定为安装目标。该设备必须已经被配置为扇区模式
    `nvdimm reconfigure`{.literal}。这个操作使用以下格式：
    ``` screen
    nvdimm use [--namespace=NAMESPACE|--blockdevs=DEVICES]
    ```
    ::: informalexample
    ::: itemizedlist
    -   `--namespace=`{.literal} - 按命名空间指定设备。例如：
        ``` screen
        nvdimm use --namespace=namespace0.0
        ```
    -   `--blockdevs=`{.literal} - 指定以逗号分隔的与要使用的 NVDIMM
        设备对应的块设备列表。支持星号 `*`{.literal} 通配符。例如：
        ``` screen
        nvdimm use --blockdevs=pmem0s,pmem1s
        nvdimm use --blockdevs=pmem*
        ```
    :::
    :::
:::
::: itemizedlist
**备注**
-   默认情况下，安装程序忽略所有 NVDIMM 设备。您必须使用
    `nvdimm`{.literal} 命令在这些设备中启用安装。
:::
:::
::: section
::: titlepage
## []{#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user.html#part-or-partition_kickstart-commands-for-handling-storage}part 或 partition {.title}
:::
`part`{.literal} 或 `partition`{.literal} Kickstart
命令是必需的。它在系统上创建一个分区。
::: title
**语法**
:::
``` screen
part|partition mntpoint --name=name --device=device --rule=rule [OPTIONS]
```
::: itemizedlist
**选项**
-   [*mntpoint*]{.emphasis} - 挂载分区的位置。该值必须是以下格式之一：
    ::: informalexample
    ::: itemizedlist
    -   `/path`{.literal}
        例如，`/`{.literal}、`/usr`{.literal}、`/home`{.literal}
    -   `swap`{.literal}
        该分区被用作交换空间。
        要自动决定 swap 分区的大小，使用 `--recommended`{.literal}：
        ``` screen
        swap --recommended
        ```
        分配的大小将生效，但不会根据您的系统进行精确校准。
        使用 `--hibernation`{.literal} 选项：
        ``` screen
        swap --hibernation
        ```
        分配的分区大小为由 `--recommended`{.literal}
        分配的交换分区再加上所在系统上的内存总量。
        有关这些命令分配的 swap 大小，请参阅 AMD64、Intel 64 和 64 位
        ARM 系统的
        ["推荐的分区方案"一节](#partitioning-reference_installing-rhel-as-an-experienced-user.html#recommended-partitioning-scheme_partitioning-reference "推荐的分区方案"){.xref}。
    -   `raid.id`{.literal}
        该分区用于软件 RAID（请查看 `raid`{.literal}）。
    -   `pv.id`{.literal}
        该分区用于 LVM（请查看 `logvol`{.literal}）。
    -   `biosboot`{.literal}
        该分区将用在 BIOS 引导分区中。在使用 BIOS 的 AMD64 和 Intel 64
        系统中使用 GUID 分区表(GPT)中需要 1 MiB BIOS 引导分区 ;
        引导装载程序将被安装到其中。UEFI 系统中不需要此功能。另请参阅
        `bootloader`{.literal} 命令。
    -   `/boot/efi`{.literal}
        一个 EFI 系统分区。基于 UEFI 的 AMD64、Intel 64 和 64 位 ARM
        上需要 50 MiB EFI 分区。推荐的大小为 200 MiB。它在 BIOS
        系统上并不需要。另请参阅 `bootloader`{.literal} 命令。
    :::
    :::
-   `--size=`{.literal} - MiB 中分区最小值。在这里指定一个整数值，如
    `500`{.literal} （不要在数字后面加单位）。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    如果 `--size`{.literal} 值太小，则安装会失败。设置
    `--size`{.literal} 值作为要求的最小空间量。有关大小建议，请参阅
    ["推荐的分区方案"一节](#partitioning-reference_installing-rhel-as-an-experienced-user.html#recommended-partitioning-scheme_partitioning-reference "推荐的分区方案"){.xref}。
    :::
-   `--grow`{.literal} -
    告诉分区使用所有可用空间（若有），或使用设置的最大值（如果指定了最大值）。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果在一个 swap 分区中使用 `--grow=`{.literal} 时没有设置
    `--maxsize=`{.literal}，Anaconda 会限制 swap
    分区的最大值。对于物理内存小于 2GB
    的系统，强制的限制为物理内存的两倍。对于内存大于 2GB
    的系统，这个强制限制为物理内存值再加 2GB。
    :::
-   `--maxsize=`{.literal} - 当分区被设置为可扩充时，MiB
    中的最大分区大小。在这里指定一个整数值，如 `500`{.literal}
    （不要在数字后面加单位）。
-   `--noformat`{.literal} - 指定安装程序不要格式化分区，与
    `--onpart`{.literal} 命令一起使用。
-   `--onpart=`{.literal} 或 `--usepart=`{.literal} -
    指定放置分区的设备。使用现有的空白设备并将其格式化到新指定类型。例如：
    ``` screen
    partition /home --onpart=hda1
    ```
    在 `/dev/hda1`{.literal} 中创建 `/home`{.literal}。
    这些选项还可以在逻辑卷中添加分区。例如：
    ``` screen
    partition pv.1 --onpart=hda2
    ```
    该设备必须已存在于系统中，`--onpart`{.literal} 选项不会创建该设备。
    在这种情况下， Anaconda
    会在不创建分区表的情况下格式化并使用驱动器。但请注意，使用这种方式格式化的设备中不支持
    GRUB2 安装，且必须将其放在有分区表的驱动器中。
    ``` screen
    partition pv.1 --onpart=hdb
    ```
-   `--ondisk=`{.literal} 或 `--ondrive=`{.literal} -
    在现有磁盘中创建分区（由 `part`{.literal}
    命令指定）。这个命令总是创建一个分区。强制在特定磁盘中创建分区。例如：将分区
    `--ondisk=sdb`{.literal} 置于系统的第二个 SCSI 磁盘中。
    要指定不使用逻辑卷管理（LVM）的多路径设备，使用格式
    `disk/by-id/dm-uuid-mpath-WWID`{.literal}，其中 [*WWID*]{.emphasis}
    是该设备的通用识别符。例如：要指定 WWID 为
    `2416CD96995134CA5D787F00A5AA11017`{.literal} 的磁盘，使用：
    ``` screen
    part / --fstype=xfs --grow --asprimary --size=8192 --ondisk=disk/by-id/dm-uuid-mpath-2416CD96995134CA5D787F00A5AA11017
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    不要使用类似设备名称指定多路径设备，如
    `mpatha`{.literal}。这样的设备名称并不是特定磁盘特有的。`/dev/mpatha`{.literal}
    在安装过程中命名的磁盘可能不是您期望的磁盘。因此，`clearpart`{.literal}
    命令可能会对错误的磁盘进行操作。
    :::
-   `--asprimary`{.literal} -
    强制将该分区分配为[*主*]{.emphasis}分区。如果无法将该分区作为主分区分配（通常是因为已经分配了太多的主分区），则该分区进程会失败。只有使用主引导记录（MBR）时这个选项才有意义。
-   `--fsprofile=`{.literal} -
    指定传递给在这个分区上创建文件系统的程序的使用类型。使用类型定义了创建文件系统时使用的各种微调参数。要使用这个选项，文件系统必须支持使用类型，且必须有一个配置文件来列出有效类型。对于
    `ext2`{.literal}、`ext3`{.literal}、`ext4`{.literal}，这个配置文件是
    `/etc/mke2fs.conf`{.literal}。
-   `--mkfsoptions=`{.literal} -
    指定要传递给在这个分区上创建文件系统的程序的其他参数。`--fsprofile`{.literal}
    与所有文件系统类似，不仅可用于支持该配置集概念的文件系统。没有对参数列表进行任何操作，因此必须以可直接传递给
    mkfs
    程序的格式提供。这意味着，根据具体文件系统，多个选项应该用逗号分开，或使用双引号分开。
-   `--fstype=`{.literal} - 为分区设置文件系统类型。有效值为
    `xfs`{.literal}、、`ext2`{.literal}、`ext3`{.literal}
    `ext4`{.literal}、`swap`{.literal} `vfat`{.literal}、`efi`{.literal}
    和 `biosboot`{.literal}。
-   `--fsoptions`{.literal} -
    指定在挂载文件系统时所用选项的自由格式字符串。这个字符串将被复制到安装的系统的
    `/etc/fstab`{.literal} 文件中，并使用引号括起来。
-   `--label=`{.literal} - 为独立分区分配标签。
-   `--recommended`{.literal} -
    自动决定分区大小。有关推荐方案的详情，请参阅 AMD64、Intel 64 和 64
    位 ARM 的
    ["推荐的分区方案"一节](#partitioning-reference_installing-rhel-as-an-experienced-user.html#recommended-partitioning-scheme_partitioning-reference "推荐的分区方案"){.xref}。
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    这个选项只能用于创建文件系统的分区，比如 `/boot`{.literal} 分区和