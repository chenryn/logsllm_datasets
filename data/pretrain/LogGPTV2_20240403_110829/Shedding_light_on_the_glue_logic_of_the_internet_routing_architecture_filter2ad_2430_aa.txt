title:Shedding light on the glue logic of the internet routing architecture
author:Franck Le and
Geoffrey G. Xie and
Dan Pei and
Jia Wang and
Hui Zhang
Shedding Light on the Glue Logic of the Internet Routing
Architecture
Franck Le†, Geoffrey G. Xie‡, Dan Pei∗, Jia Wang∗ and Hui Zhang†
†Carnegie Mellon University, ‡Naval Postgraduate School, ∗AT&T Labs - Research
ABSTRACT
Recent studies reveal that the routing structures of operational net-
works are much more complex than a simple BGP/IGP hierarchy,
highlighted by the presence of many distinct instances of routing
protocols. However, the glue (how routing protocol instances inter-
act and exchange routes among themselves) is still little understood
or studied. For example, although Route Redistribution (RR), the
implementation of the glue in router software, has been used in
the Internet for more than a decade, it was only recently shown
that RR is extremely vulnerable to anomalies similar to the perma-
nent route oscillations in BGP. This paper takes an important step
toward understanding how RR is used and how fundamental the
role RR plays in practice. We developed a complete model and
associated tools for characterizing interconnections between rout-
ing instances based on analysis of router conﬁguration data. We
analyzed and characterized the RR usage in more than 1600 opera-
tional networks. The ﬁndings are: (i) RR is indeed widely used; (ii)
operators use RR to achieve important design objectives not realiz-
able with existing routing protocols alone; (iii) RR conﬁgurations
can be very diverse and complex. These empirical discoveries not
only conﬁrm that the RR glue constitutes a critical component of
the current Internet routing architecture, but also emphasize the ur-
gent need for more research to improve its safety and ﬂexibility to
support important design objectives.
Categories and Subject Descriptors: C.2.3 [Computer-
Communication Networks]: Network Operations—network man-
agement
General Terms: Design, Management, Measurement
Keywords: Routing glue logic, route redistribution, route selection
1.
INTRODUCTION
Recent studies reveal that the IP routing design of operational
networks, particularly that of large enterprise networks, is far more
complex than previously understood by the networking community
[17], [15]. Not only many distinct instances of IGP and BGP pro-
tocols are frequently conﬁgured in the same network at the same
time, but these routing protocol instances or routing domains also
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’08, August 17–22, 2008, Seattle, Washington, USA.
Copyright 2008 ACM 978-1-60558-175-0/08/08 ...$5.00.
A
B
D
Routing domain 1
(OSPF)
C
E
Routing domain 2
(EIGRP 20)
Routing domain 3
(RIP)
F
G
H
Figure 1: An example enterprise network.
are often linked together not by BGP. Instead, routes are exchanged
between different routing domains via route redistribution options
conﬁgured on individual border routers connecting these domains.
Figure 1 illustrates such a design. The network consists of three
routing domains, each of which runs a different routing protocol:
OSPF, EIGRP or RIP. This topology may result from a merger of
companies or may derive from administrative reasons. The routing
domains are physically connected by border routers B, C, and E.
For example, B instantiates both an OSPF routing process and an
EIGRP routing process to exchange routing information with other
routers of the respective domains. By default, processes of dif-
ferent routing protocols do not exchange routing information and
consequently the internal routers in the OSPF domain (e.g., router
A) have no visibility of the destinations inside the EIGRP domain
(e.g., router D). Route redistribution provides a simple solution to
this reachability problem by allowing routes to be imported from
one routing process (e.g., EIGRP process on router B) into another
process on the same router (e.g., OSPF process on router B). For
this simple network, full reachability can be achieved by just setting
up mutual route redistribution on both B and E. In such a setting,
route selection, the procedure that a router uses to rank routes from
different routing protocols and select one of them to put into the
forwarding table, plays an equally important role in the integration
of routing protocols. For example because of the route redistri-
bution conﬁgurations on routers B and E, router C receives two
routes to router D: one from OSPF and the other from RIP. Route
selection provides the operator of this network a mean to customize
the preference order between the paths C-B-D and C-F -E-D.
Clearly for the example network above, the per router route se-
lection and redistribution procedures provide the required “glue”
logic between the three routing domains and as such constitute a
building block of the IP routing design that is separate from the
routing protocols used.
In the rest of the paper, we will refer to the combination of route
selection and route redistribution procedures simply as the glue
logic. In some scenarios, BGP can be used as an alternative so-
lution to the glue logic. For example, in the network shown in
Figure 1, one can use BGP as the route selection and redistribu-
tion mechanisms between the three routing domains. However, the
functionalities of the glue logic can not be solely supported by BGP.
For example, the route selection and redistribution mechanisms are
still needed when exchanging routing information between OSPF
and BGP. Thus, the glue logic was introduced as a software en-
hancement by router vendors (rather than a standard protocol).
Furthermore, the glue logic is independently conﬁgured per router
and its safety properties have not been under much scrutiny by
the research community. Vendors try to mitigate this problem by
publishing templates for conﬁguring the glue logic and pointing
out common pitfalls of route redistribution conﬁgurations through
simple examples [10], [9]. Misconﬁgurations of route redistribu-
tion (e.g., injecting routes from BGP into OSPF and then back into
BGP) can easily result in persistent forwarding loops between mul-
tiple domains. Such misconﬁgurations have long been suspected
by the operational community as one of the more likely root causes
of the long-lived loops observed in [19] and IP preﬁx hijacks [18].
In fact, one recent study [15] has established that the glue logic
introduces a wider range of safety challenges than BGP.
Given the documented safety concerns, one would expect opera-
tors to increasingly choose BGP1 or a similar protocol over the glue
logic for joining routing domains. However, according to our inter-
actions with the operators as well as messages posted on relevant
bulletin boards, the use of the glue logic seems still very preva-
lent. A simple explanation for this phenomenon might be that the
glue logic is relatively easier to conﬁgure and to deploy than BGP
since this latter requires the conﬁguration of iBGP/eBGP sessions
and the running of BGP processes at every router. Instead, the glue
logic only necessitates conﬁgurations at the border routers. There
is, however, another much more interesting hypothesis to consider:
the glue logic may offer important features to the operators which
are not possible with current routing protocols alone. Put it more
directly: the glue logic could be a fundamental building block of
the Internet routing architecture. We believe it is essential to evalu-
ate this hypothesis and get it right. If the glue logic is fundamental,
then the research community should conﬁrm it as soon as possible
and begin to address its safety problems with the same intensity as
we did for BGP.
A recent paper has presented simple scenarios to show that the
glue logic indeed can be used to meet critical operational require-
ments such as domain backup [14]. In this paper, we take a ﬁrst
step toward a deﬁnite answer regarding whether the glue logic is a
fundamental building block of IP routing design, based on empir-
ical data. Speciﬁcally, we study the use of route redistribution in
about 1600 operational networks to test the following hypotheses:
1. Route redistribution is used widely in operational networks.
2. Route redistribution is not used simply to interconnect routing
protocols, but also as a powerful tool for achieving important
design objectives which cannot be achieved with routing proto-
cols (including BGP) alone.
3. Because of the high vulnerability of route redistribution to rout-
ing instabilities and the lack of standard solution to ensure its
safety, the route redistribution conﬁgurations in the wild are ad-
hoc and complex.
1BGP is known to have its own safety issues. However, BGP is
better understood and has less concerns than the glue logic.
We extended the method proposed in [17] so that we were able
to precisely identify routing instances and their interconnections
from a network’s router conﬁguration ﬁles. In particular, we made
the following major contributions in this paper: (1) We developed
a complete model and associated tools for characterizing intercon-
nections between routing instances based on analysis of router con-
ﬁguration data. (2) We analyzed and characterized router conﬁgu-
rations of over 1600 operational networks ranging from large tier-1
ISP networks, enterprise networks, to campus networks.
(3) We
demonstrated that the route redistribution is indeed a critical build-
ing block of the current Internet routing architecture by conﬁrm-
ing the above three hypotheses through empirical analysis. (4) We
found that route redistribution is often used by operators to achieve
efﬁcient routing and partition healing. (5) We argued that the lim-
itation of existing vendors’ support leads to increased complexity
in network conﬁgurations and potential instability concerns. Thus,
there is an urgent need for a standard solution to ensure safety of
route redistribution. (6) We discussed the potential role of the glue
logic as the Internet architecture evolves to its next generation.
The rest of the paper is organized as follows. Section 2 provides
an overview of the route selection and redistribution processes in
the current Internet routing architecture. We present our character-
ization methodologies of route selection and redistribution in Sec-
tion 3. Section 4 describes the operational networks’ conﬁgurations
we analyzed in this paper. Section 5 presents our ﬁndings regard-
ing the prevalence of route redistribution. Section 6 describes the
patterns our method unearthed and the rationales behind them. Sec-
tion 7 looks at the complexity of the route redistribution conﬁgura-
tions. Section 8 interprets the results and discusses the limitations
of the study. Section 9 summarizes related works. Finally, Sec-
tion 10 concludes our study.
2. BACKGROUND ON ROUTE SELECTION
AND REDISTRIBUTION
This section presents important properties of route selection and
route redistribution. First, we introduce some terminologies. A
router may be running multiple routing protocols. For example,
router B from Figure 1 is running both OSPF and EIGRP. In fact,
some vendors even allow routers to run multiple processes of the
same routing protocol (e.g., OSPF routing process 100, OSPF rout-
ing process 200, etc.) We refer to each of these processes as a
routing process.
The routing processes at a router are by default independent:
they do not exchange routing information among themselves. For
example, the OSPF routing process at router B in Figure 1 has its
own set of routes, and so does the EIGRP routing process.
Two routing processes, belonging to different routers but run-
ning the same routing protocol and exchanging routing information
through it, are said to pertain to the same routing instance. In the
rest of the paper, we assign a unique identiﬁer to each routing in-
stance (e.g., 1, 2, ...). Each of the domains 1, 2 and 3 in Figure 1 is a
routing instance. We use . to denote
the routing process belonging to  at .
For example, in Figure 1, B.1 represents the OSPF process at router
B. As such, B.1, A.1 and C.1 belong to the same routing instance
(1: OSPF), and B.2, D.2 and E.2 belong to a different routing
instance (2: EIGRP 20).
As explained in the previous section, route selection allows oper-
ators to rank the routes received from multiple routing processes at
a router, and to select the most preferred one: in fact, each routing
protocol is assigned a default administrative distance (AD) value.
This parameter is an integer number. A route received from a rout-
ing process inherits the AD value of that routing process and the
route with the lowest AD value is preferred. The AD value can be
overridden per routing process and per preﬁx. The route with the
lowest AD value is installed in the router’s forwarding table and
used to forward the trafﬁc. It is often called the active route.
Then, route redistribution allows operators to redistribute a route
from a source routing process to a target routing process on the
same router. It is important to note that a route is advertised in the
target routing process only if the route is active (i.e., the route is the
one used to forward the trafﬁc) [15].
3. METHODOLOGY
We have followed the general white-box reverse engineering ap-
proach ﬁrst used in [17] to analyze the conﬁguration data and eval-
uate the three hypotheses. We collect RR usage statistics by simply
tallying the RR commands in the conﬁguration ﬁles. The iden-
tiﬁcation of design patterns and the examination of conﬁguration
complexity are much more involved, requiring the construction of
a graph model of the routing instances for each network, and the
extraction of the route redistributions between the routing instances
as well as the associated policies. Because the recognition of de-
sign patterns is achieved through a manual inspection of the de-
rived graphs, we focus on a few large networks for this speciﬁc
task. Finally, we verify the identiﬁed design patterns and our un-
derstanding of the rationales behind the patterns with the operators
whenever possible.
[17] also presented three graph models of routing processes and
routing instances and a methodology for distilling them from a net-
work’s conﬁguration ﬁles. However, those models do not have suf-
ﬁcient details for our purpose. They do not model the critical AD
parameter. They do not model how routing instances are intercon-
nected (e.g., through one or multiple interconnection points). They
do not model the directions of the route propagations. We address
these limitations by extending the routing instance graph model to
include the details of all the border routers, their routing processes,
and the route redistribution options deﬁned between the routing
processes. The algorithm used by [17] for determining the rout-
ing instances’ boundaries also has some limitations as discussed in
details in the sub-section below.
In the following, we ﬁrst describe the way we identify and extract
the routing instances of a network from its routers’ conﬁgurations.
Then, Section 3.2 focuses on how we determine and represent the
interconnections between the routing instances. Finally, Section
3.3 discusses the impact of incomplete network conﬁgurations.
3.1 Determination of routing instances
Our goal is to identify the routing instances present in a network
from its routers’ conﬁguration ﬁles. We formerly deﬁned a routing
instance as a collection of routing processes, each residing on a
distinct router, that run the same routing protocol and exchange
routing information through the protocol.
While verifying whether two routing processes run the same rout-
ing protocol is easy, determining whether they exchange routing
information can be intricate. Subtle parameters can have profound
impacts on whether two routing processes are able to exchange
routing information. The methods used by [17] for determining
the boundaries of routing instances do not consider them. The fol-
lowing describes such parameters and scenarios illustrating the dif-
ﬁculties:
• For each routing process (e.g., RIP, OSPF process 20, EIGRP
30, etc.), a router interface can be either active or passive. This
status modiﬁes the behavior of the router. A RIP routing pro-
cess on an interface that is passive still receives and processes
the advertisements from RIP processes on other routers but does
not send any announcement out. The difﬁculty to determine
whether two routers exchange routing information is exacer-
bated by the fact that these commands can actually have dif-
ferent consequences for each routing protocol.
In OSPF, the
passive status prevents the formation of an adjacency and there-
fore stops any communication – both incoming and outgoing –
between two routing processes running OSPF.
• Two routers connected to the same subnet and running OSPF
with area-id 0 may surprisingly not establish any adjacency. This,
for example, occurs when the OSPF Hello Time Interval, Dead
Time Interval, Stub Area Flags, or authentication parameters
differ on the two interfaces [8].
To accommodate special requirements, operators may intention-
ally take advantage of these parameters. For example, we found
that operators sometimes ran multiple instances of OSPF on a same
subnet, by applying different authentication methods. Therefore,
identifying and taking into consideration these parameters are nec-
essary to accurately determine the routing instances present in the
network.
The networks we analyzed rely on four routing protocols: BGP,
EIGRP, OSPF and RIP. For EIGRP, OSPF and RIP, the procedure
to identify the boundaries of the routing instances consists of three
steps.
1. First, we parse the conﬁguration ﬁles to identify the interfaces.
For each interface, relevant attributes including the interface
name, IP address, subnet, OSPF Hello Time interval, OSPF
Dead Time interval and OSPF authentication method are ex-
tracted. The interfaces are stored in a database.
2. Then, the routing process(es) running on each interface, the as-
sociated status (passive or active), and relevant parameters (e.g.,
process id, OSPF stub area ﬂags, OSPF area id) are identiﬁed.
An interface running n routing processes has n unique (inter-
face, protocol, routing process id) tuples.
3. Finally, for each (interface, protocol, routing process id) tuple
that is not yet assigned to a routing instance, we use a breadth-
ﬁrst search (BFS) algorithm to explore all the neighboring in-
terfaces. For each neighboring interface, we determine whether
routing information is exchanged. As explained previously, this
decision relies on multiple criteria and depends on the routing
protocol. If the routing process is OSPF, considered parame-
ters include the router name, IP address, subnet, OSPF process
id, OSPF status, OSPF Hello Time interval, OSPF Dead Time
interval, OSPF Stub Area Flags, OSPF authentication method,
and OSPF area id. If the two interfaces are determined to ex-
change routing information, the neighboring interface is assigned
to the same routing instance and its neighbors are in turn ex-
plored. We proceed until we have analyzed all neighboring in-
terfaces and we repeat the procedure until each (interface, pro-
tocol, routing process id) tuple is assigned to a routing instance.
We process BGP in a separate step because this protocol differs
from the other protocols. This is because a BGP routing process
is not associated with any speciﬁc interface. Instead, BGP signal-
ing messages to different neighbors can be sent out via different
interfaces depending on the BGP session conﬁguration and the sta-
tus of the network. To determine the BGP routing instances, we
parse each router conﬁguration ﬁle to identify whether it is running
a process of BGP. As such, if a router R is running a routing pro-
cess of BGP, it is represented by an interface with the values (R,
A
BGP
B
Q
BGP
S
C
R
OSPF 2
OSPF 1
D
OSPF 1
OSPF 2
T
OSPF 2
E
OSPF 1
OSPF 1
F
U
OSPF 2
OSPF 2
V
OSPF 1
OSPF 1
OSPF 2
OSPF 2
M
O
OSPF 3
OSPF 3
OSPF 3
OSPF 3
N
L
EIGRP
EIGRP
OSPF 3
OSPF 3
OSPF 3
J
Y
EIGRP
Z
RIP
W