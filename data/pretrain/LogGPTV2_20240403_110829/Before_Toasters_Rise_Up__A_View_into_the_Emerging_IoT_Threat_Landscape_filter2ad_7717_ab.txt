the intrusion mechanism of a large number of IoT botnets rely heavily on the
exploitation of the telnet-based remote management interface often provided
562
P.-A. Vervier and Y. Shen
Table 1. Breakdown of the number of connections to and average daily hit rate of the
diﬀerent decoy services oﬀered by the honeypots.
Rank Service No. of
connections
Avg. hit rate
per day ↓
8, 469, 122 5712.97
http
telnet 25, 334, 377 4733.02
1, 061, 343 1019.26
ssh
761.44
356.37
131.57
15.54
12.38
208, 635
1, 824, 945
384, 863
14, 408
37, 401
upnp
smb
1
2
3
4
5
6
7
8
https
modbus
ftp
Rank Service No. of
connections
8, 623
4, 620
698
10, 011
512
1, 193
16
s7comm
snmp
mqtt
cwmp
pptp
bacnet
ipmi
9
10
11
12
13
14
15
Avg. hit rate
per day ↓
7.10
4.98
4.78
4.51
3.51
1.04
0.01
by IoT devices. Given the usual lack of proper security management and poor
manufacturing of devices, default or hardcoded [6] telnet login credentials can
provide an easy, dictionary-based brute-force attack vector that usually leads
attackers to take full control over the devices.
We have seen a total of 11,791,128 telnet connections (46.5% of the total 25M)
where attackers successfully logged into the box. Furthermore, attackers needed
on average three attempts to guess the correct username and password associated
with the diﬀerent honeypots. Note that our honeypots are all conﬁgured with
default or easy to guess passwords as our goal is to capture as many attacks as
possible. Finally, we have seen that attackers have tried to log in with a total of
4,095 unique usernames and passwords.
Vulnerability Exploitation. Lately, anecdotal evidence suggested that IoT
botnets started leveraging not only telnet credentials brute-forcing but also
exploiting very speciﬁc software vulnerabilities in IoT device ﬁrmware [8,9]. To
investigate this phenomenon, we leveraged our three high-interaction honeypots
to determine how attackers have attempted to exploit them. Table 2 summarises
the various vulnerabilities aﬀecting these devices and the number of times these
vulnerabilities were seen exploited by attackers2.
We can see that both the DLink router and the Brickcom IP camera are
aﬀected by a lot of vulnerabilities, and than many of them - seven for the router
and ﬁve for the camera - are being exploited in the wild. We can also see that
the most exploited vulnerability for both the DLink router and the Brickcom IP
camera leads to credentials disclosure, which appears to be what attackers are
looking for the most. The other exploited vulnerabilities on the DLink router lead
to remote command execution or full system takeover. As far as the Brickcom IP
camera is concerned, apart from the XSS vulnerability, all other vulnerabilities
2 We retained only vulnerabilities that can be exploited from by a remote attacker
and that were related to services exposed by our honeypots.
A View into the Emerging IoT Threat Landscape
563
Table 2. Software vulnerabilities aﬀecting the high-interaction honeypot devices.
Device
Vulnerability
Discl. date No. of
exploitations
DLink 850L
(home router)
Stealing login and password [17]
Remote Buﬀer Overﬂow in Cookie Header [25]
Sep. 2017
Jun. 2014
Full Superuser access (RCE to Root) to the device [17]
Sep. 2017
Remote Command Execution via WAN and LAN [29]
Aug. 2017
Buﬀer overﬂows in authentication and HNAP
functionalities [26]
Remote code execution (CVE-2016-5681) [5]
UPnP SOAP TelnetD Command Execution [24]
Updating ﬁrmware in Recovery mode [17]
XSS (CVE-2017-{14413,14414,14415,14416}) [19]
Retrieving admin password (CVE-2017-{14417,14418})
[19]
Nonce brute-forcing for DNS conﬁguration -
CVE-2017-14423 [19]
Nov. 2015
Jun. 2016
Sep. 2013
Sep. 2017
Sep. 2017
Sep. 2017
Sep. 2017
Pre-Auth RCEs as root (L2) - CVE-2017-14429 [19]
Sep. 2017
Arbitrary command execution (CVE-2016-1555) [4]
Jan. 2016
Remote Credentials and Settings Disclosure [28]
Cross-site Request Forgery [27]
Hard-coded Credentials [27]
Cross-site Scripting [27]
Insecure Direct Object Reference/Authentication
Bypass [27]
Jul. 2017
Jun. 2016
Jun. 2016
Jun. 2016
Jun. 2016
Netgear
WNAP320
(home router)
Brickcom
CB-100AP-3456
(IP camera)
258
49
13
6
3
2
1
0
0
0
0
0
0
50
11
6
6
6
are related to credentials/device information disclosure and all of them are being
exploited. Surprisingly, the only vulnerability aﬀecting our Netgear router hon-
eypot, which enables remote code execution and eventually a full device takeover,
was never found to be exploited. In total 411 vulnerability exploitations have
been observed across the three high-interaction honeypots over a period of four
and a half month. While this number is still low compared to the number of
telnet credentials cracking attempts, the fact that cybercriminals use so many
and diverse vulnerability exploits (sometimes very recent) shows that they are
putting a lot more care and sophistication into the building of their botnets. It
also shows a real evolution from the ﬁrst IoT botnets that were relying solely
on telnet credentials brute-forcing. To the best of our knowledge this is the ﬁrst
time such a behaviour is reported with an assessment of actual vulnerability
exploitations against IoT devices in the wild. It is also noteworthy that the dis-
closure date of the various exploited vulnerabilities vary a lot, from 2013 to the
end of 2017. Moreover, the most exploited vulnerability for the DLink router
and the Brickcom IP camera were both disclosed in the second half of 2017, only
a few weeks before we started seeing them used against out honeypots.
To sum up, most of the time the goal of attackers is to get some privileged
access to the device in order to proceed with the infection and later the moneti-
sation. On the one hand, exploiting a software vulnerability on a speciﬁc device
can facilitate the intrusion when devices are not properly patched and reduce
564
P.-A. Vervier and Y. Shen
Aggressive
growth phase
Quieter, steady phase
s
n
o
i
t
c
e
n
n
o
c
f
o
r
e
b
m
u
N
200
150
100
50
0
e
h
t
f
o
h
t
r
i
B
t
e
n
t
o
b
9
0
-
7
1
0
2
7
1
0
2
0
1
-
1
1
-
7
1
0
2
2
1
-
7
1
0
2
1
0
-
8
1
0
2
2
0
-
8
1
0
2
1
0
2
3
0
-
8
Fig. 2. Intrusion attempts from the IoT Reaper botnet.
the noise produced by the brute-forcing. However, it also requires more work
and research from the botnet creator to ﬁnd IoT device exploits.
A Sneak Peek at IoT Reaper. One particular botnet appears to be heavily
relying on software vulnerability exploitation to spread: IoT Reaper [10]. The
botnet emerged in late 2017. Figure 2 depicts the number of intrusion attempts
attributable to the IoT Reaper botnet against our honeypots. The ﬁgure shows
that the botnet exhibited an aggressive peak of intrusions at the beginning of
October 2017, when the botnet was born. After one month, it initiated a quieter
phase, which could be due to (i) the botmaster(s) purposely slowing down the
growth of the botnet after it reached a steady size or (ii) an attempt to remain
under the radar after raising a lot of attention in its ﬁrst, very active month.
Interestingly, the motivations behind IoT Reaper’s operators is still unknown.
Browsing Attackers. Telnet credentials brute-forcing and vulnerability
exploitation are not the only behaviours we observe from our honeypots. In
fact, given that our high-interaction honeypots mimics almost all functionalities
of the real devices they emulate, we have witnessed some attackers “browsing”
through the web interfaces of the two routers and the IP camera. Table 3 shows
a snippet of some URLs requested from the diﬀerent devices and the action
triggered or information disclosed. Furthermore, we next attempt to determine
if such “browsing” behaviour is generated by individuals actually visiting the
pages or if it is generated by automated scanning tools. First, we look at the
time elapsed between http requests from each client IP address and notice that
30% of clients issue requests with an average time gap of less than one second,
which means these queries are thus likely generated by automated scanning tools.
On the other hand, about 10% of clients issue requests with an average time gap
of several 10’s of seconds, which is more compatible with a real human “brows-
ing” behaviour. Finally, one could argue that such a behaviour, when performed
in an automated way, is likely to be part of some reconnaissance or device iden-
tiﬁcation phase. However, in most cases, access to speciﬁc admin pages of the