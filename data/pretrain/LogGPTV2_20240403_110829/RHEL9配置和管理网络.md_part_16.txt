:::
这部分论述了如何使用 `nmcli`{.literal} 工具配置网络团队。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
网络 teaming 在 Red Hat Enterprise Linux 9
中已弃用。考虑使用网络绑定驱动程序作为替代方案。详情请参阅
[配置网络绑定](#configuring-network-bonding_configuring-and-managing-networking.html "第 12 章 配置网络绑定"){.link}。
:::
::: itemizedlist
**先决条件**
-   在服务器中安装两个或者两个以上物理或者虚拟网络设备。
-   要将以太网设备用作组的端口，必须在服务器中安装物理或者虚拟以太网设备并连接到交换机。
-   要使用 bond、bridge 或 VLAN
    设备作为团队的端口，您可以在创建团队时创建这些设备，或者预先创建它们，如下所述：
    ::: itemizedlist
    -   [使用 nmcli
        命令配置网络绑定](#configuring-network-bonding_configuring-and-managing-networking.html#configuring-a-network-bond-using-nmcli-commands_configuring-network-bonding "使用 nmcli 命令配置网络绑定"){.link}
    -   [使用 nmcli
        命令配置网络桥接](#configuring-a-network-bridge_configuring-and-managing-networking.html#configuring-a-network-bridge-using-nmcli-commands_configuring-a-network-bridge "使用 nmcli 命令配置网络桥接"){.link}
    -   [使用 nmcli 命令配置 VLAN
        标记](#configuring-vlan-tagging_configuring-and-managing-networking.html#configuring-vlan-tagging-using-nmcli-commands_configuring-vlan-tagging "使用 nmcli 命令配置 VLAN 标记"){.link}
    :::
:::
::: orderedlist
**流程**
1.  创建团队接口：
    ``` literallayout
    # nmcli connection add type team con-name team0 ifname team0 team.runner activebackup
    ```
    此命令创建名为 `team0`{.literal} 的网络组，它使用
    `activebackup`{.literal} 运行程序。
2.  另外，还可设置链接监视器。例如，要在 `team0`{.literal}
    连接配置集中设置 `ethtool`{.literal} 链接监视器：
    ``` literallayout
    # nmcli connection modify team0 team.link-watchers "name=ethtool"
    ```
    链路监视器支持不同的参数。要为链路监视器设置参数，请在
    `name`{.literal} 属性中指定它们以空格分隔。请注意，name
    属性必须用引号包围起来。例如，要使用 `ethtool`{.literal}
    链接监视器，并将其 `delay-up`{.literal} 参数设置为 `2500`{.literal}
    毫秒（2.5 秒）：
    ``` literallayout
    # nmcli connection modify team0 team.link-watchers "name=ethtool delay-up=2500"
    ```
    要设置多个链路监视器，每个都使用特定的参数，不同的连接监视器以逗号分隔。以下示例使用
    `delay-up`{.literal} 参数设置 `ethtool`{.literal} 链接监视器，使用
    `source-host`{.literal} 和 `target-host`{.literal} 参数设置
    `arp_ping`{.literal} 链路监视器：
    ``` literallayout
    # nmcli connection modify team0 team.link-watchers "name=ethtool delay-up=2, name=arp_ping source-host=192.0.2.1 target-host=192.0.2.2"
    ```
3.  显示网络接口，并记录您要添加到团队中的接口名称：
    ``` literallayout
    # nmcli device status
    DEVICE  TYPE      STATE         CONNECTION
    enp7s0  ethernet  disconnected  --
    enp8s0  ethernet  disconnected  --
    bond0   bond      connected  bond0
    bond1   bond      connected  bond1
    ...
    ```
    在本例中：
    ::: itemizedlist
    -   `enp7s0`{.literal} 和 `enp8s0`{.literal}
        未配置。要将这些设备用作端口，请在下一步中添加连接配置集。请注意，您只能在没有分配给任何连接的团队中使用以太网接口。
    -   `bond0`{.literal} 和 `bond1`{.literal}
        已有连接配置集。要将这些设备用作端口，请在下一步中修改其配置集。
    :::
4.  为团队分配端口接口：
    ::: orderedlist
    1.  如果没有配置您要分配给团队的接口，为其创建新的连接配置集：
        ``` literallayout
        # nmcli connection add type ethernet slave-type team con-name team0-port1 ifname enp7s0 master team0
        # nmcli connection add type ethernet slave-type team con-name team0-port2 ifname enp8s0 master team0
        ```
        .这些命令为 `enp7s0`{.literal} 和 `enp8s0`{.literal}
        创建配置文件，并将它们添加到 `team0`{.literal} 连接。
    2.  要为团队分配现有连接配置集，将这些连接的 `master`{.literal}
        参数设置为 `team0`{.literal} ：
        ``` literallayout
        # nmcli connection modify bond0 master team0
        # nmcli connection modify bond1 master team0
        ```
        这些命令将名为 `bond0`{.literal} 和 `bond1`{.literal}
        的现有连接配置集分配给 `team0`{.literal} 连接。
    :::
5.  配置团队的 IP
    设置。如果要使用这个团队作为其它设备的端口，请跳过这一步。
    ::: orderedlist
    1.  配置 IPv4 设置。例如：要设置 `team0`{.literal} 连接的静态 IPv4
        地址、网络掩码、默认网关、DNS 服务器和 DNS 搜索域，请输入：
        ``` literallayout
        # nmcli connection modify team0 ipv4.addresses '192.0.2.1/24'
        # nmcli connection modify team0 ipv4.gateway '192.0.2.254'
        # nmcli connection modify team0 ipv4.dns '192.0.2.253'
        # nmcli connection modify team0 ipv4.dns-search 'example.com'
        # nmcli connection modify team0 ipv4.method manual
        ```
    2.  配置 IPv6 设置。例如：要设置 `team0`{.literal} 连接的静态 IPv6
        地址、网络掩码、默认网关、DNS 服务器和 DNS 搜索域，请输入：
        ``` literallayout
        # nmcli connection modify team0 ipv6.addresses '2001:db8:1::1/64'
        # nmcli connection modify team0 ipv6.gateway '2001:db8:1::fffe'
        # nmcli connection modify team0 ipv6.dns '2001:db8:1::fffd'
        # nmcli connection modify team0 ipv6.dns-search 'example.com'
        # nmcli connection modify team0 ipv6.method manual
        ```
    :::
6.  激活连接：
    ``` literallayout
    # nmcli connection up team0
    ```
:::
::: itemizedlist
**验证步骤**
-   显示团队状态：
    ``` literallayout
    # teamdctl team0 state
    setup:
      runner: activebackup
    ports:
      enp7s0
        link watches:
          link summary: up
          instance[link_watch_0]:
            name: ethtool
            link: up
            down count: 0
      enp8s0
        link watches:
          link summary: up
          instance[link_watch_0]:
            name: ethtool
            link: up
            down count: 0
    runner:
      active port: enp7s0
    ```
    在这个示例中，两个端口都是上线的。
:::
::: itemizedlist
**其他资源**
-   [测试基本网络设置](#testing-basic-network-settings_configuring-and-managing-networking.html "第 44 章 测试基本网络设置"){.link}
-   [配置 NetworkManager
    以避免使用特定配置集提供默认网关](#managing-the-default-gateway-setting_configuring-and-managing-networking.html#proc_configuring-networkmanager-to-avoid-using-a-specific-profile-to-provide-a-default-gateway_managing-the-default-gateway-setting "配置 NetworkManager 以避免使用特定配置集提供默认网关"){.link}
-   [了解 teamd 服务、运行程序和
    link-watchers](#configuring-network-teaming_configuring-and-managing-networking.html#understanding-the-teamd-service-runners-and-link-watchers_configuring-network-teaming "了解 teamd 服务、运行程序和 link-watchers"){.link}
-   `nmcli-examples(7)`{.literal} man page
-   `nm-settings(5)`{.literal} man page 中的 `team`{.literal} 部分
-   `teamd.conf(5)`{.literal} man page
:::
:::
::: section
::: titlepage
# []{#configuring-network-teaming_configuring-and-managing-networking.html#configuring-a-network-team-using-nm-connection-editor_configuring-network-teaming}使用 nm-connection-editor 配置网络团队 {.title}
:::
本节论述了如何使用 `nm-connection-editor`{.literal}
应用程序配置网络团队。
请注意： `nm-connection-editor`{.literal}
只能向团队添加新端口。要使用现有连接配置集作为端口，请使用
`nmcli`{.literal} 实用程序创建团队，[如使用 nmcli
命令配置网络团队](#configuring-network-teaming_configuring-and-managing-networking.html#configuring-a-network-team-using-nmcli-commands_configuring-network-teaming "使用 nmcli 命令配置网络团队"){.link}
所述。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
网络 teaming 在 Red Hat Enterprise Linux 9
中已弃用。考虑使用网络绑定驱动程序作为替代方案。详情请参阅
[配置网络绑定](#configuring-network-bonding_configuring-and-managing-networking.html "第 12 章 配置网络绑定"){.link}。
:::
::: itemizedlist
**先决条件**
-   在服务器中安装两个或者两个以上物理或者虚拟网络设备。
-   要将以太网设备用作组的端口，必须在服务器中安装物理或者虚拟以太网设备。
-   要使用 team、bond 或 VLAN
    设备作为团队的端口，请确保这些设备还没有配置。
:::
::: orderedlist
**步骤**
1.  打开终端窗口，并输入 `nm-connection-editor`{.literal} ：
    ``` literallayout
    $ nm-connection-editor
    ```
2.  点 [+]{.guibutton} 按钮添加新连接。
3.  选择 `Team`{.literal} 连接类型，然后单击 [Create]{.guibutton}。
4.  在 `团队`{.literal} 选项卡中：
    ::: orderedlist
    1.  可选：在 `接口名称`{.literal} 字段中设置组接口的名称。
    2.  点 [Add]{.guibutton}
        按钮为网络接口添加新连接配置集，并将配置集作为端口添加到团队。
        ::: orderedlist
        1.  选择接口的连接类型。例如，为有线连接选择
            `Ethernet`{.literal}。
        2.  可选：为端口设置连接名称。
        3.  如果您是为以太网设备创建连接配置集，打开
            `Ethernet`{.literal} 选项卡，然后在 `Device`{.literal}
            字段中选择您要添加为团队的端口。如果您选择了不同的设备类型，请相应地进行配置。请注意，您只能在没有分配给任何连接的团队中使用以太网接口。
        4.  点 [Save]{.guibutton}。
        :::
    3.  对您要添加到团队的每个接口重复前面的步骤。
        [![add nic to team in nm connection
        editor](images/add-nic-to-team-in-nm-connection-editor.png)]{.inlinemediaobject}
    4.  点 [Advanced]{.guibutton} 按钮将高级选项设置为团队连接。
        ::: orderedlist
        1.  在 `Runner`{.literal} 选项卡中，选择 runner。
        2.  在 `Link Watcher`{.literal} 选项卡中，设置 link watcher
            及其可选设置。
        3.  点[确定]{.guibutton}。
        :::
    :::
5.  配置团队的 IP
    设置。如果要使用这个团队作为其它设备的端口，请跳过这一步。
    ::: orderedlist
    1.  在 `IPv4 Settings`{.literal} 选项卡中，配置 IPv4
        设置。例如，设置静态 IPv4 地址、网络掩码、默认网关、DNS 服务器和
        DNS 搜索域： [![team IPv4 settings nm connection
        editor](images/team-IPv4-settings-nm-connection-editor.png)]{.inlinemediaobject}
    2.  在 `IPv6 Settings`{.literal} 选项卡中，配置 IPv6
        设置。例如，设置静态 IPv6 地址、网络掩码、默认网关、DNS 服务器和
        DNS 搜索域： [![team IPv6 settings nm connection
        editor](images/team-IPv6-settings-nm-connection-editor.png)]{.inlinemediaobject}
    :::
6.  保存团队连接。
7.  关闭 `nm-connection-editor`{.literal}。
:::
::: itemizedlist
**验证步骤**
-   显示团队状态：
    ``` literallayout
    # teamdctl team0 state
    setup:
      runner: activebackup
    ports:
      enp7s0
        link watches:
          link summary: up
          instance[link_watch_0]:
            name: ethtool
            link: up
            down count: 0
      enp8s0
        link watches:
          link summary: up
          instance[link_watch_0]:
            name: ethtool
            link: up
            down count: 0
    runner:
      active port: enp7s0
    ```
:::
::: itemizedlist
**其它资源**
-   [使用 nm-connection-editor
    配置网络绑定](#configuring-network-bonding_configuring-and-managing-networking.html#configuring-a-network-bond-using-nm-connection-editor_configuring-network-bonding "使用 nm-connection-editor 配置网络绑定"){.link}
-   [使用 nm-connection-editor
    配置网络团队](#configuring-a-network-bridge_configuring-and-managing-networking.html#configuring-a-network-bridge-using-nm-connection-editor_configuring-a-network-bridge "使用 nm-connection-editor 配置网络桥接"){.link}
-   [使用 nm-connection-editor 配置 VLAN
    标记](#configuring-vlan-tagging_configuring-and-managing-networking.html#configuring-vlan-tagging-using-nm-connection-editor_configuring-vlan-tagging "使用 nm-connection-editor 配置 VLAN 标记"){.link}
-   [测试基本网络设置](#testing-basic-network-settings_configuring-and-managing-networking.html "第 44 章 测试基本网络设置"){.link}
-   [配置 NetworkManager
    以避免使用特定配置集提供默认网关](#managing-the-default-gateway-setting_configuring-and-managing-networking.html#proc_configuring-networkmanager-to-avoid-using-a-specific-profile-to-provide-a-default-gateway_managing-the-default-gateway-setting "配置 NetworkManager 以避免使用特定配置集提供默认网关"){.link}
-   [了解 teamd 服务、运行程序和
    link-watchers](#configuring-network-teaming_configuring-and-managing-networking.html#understanding-the-teamd-service-runners-and-link-watchers_configuring-network-teaming "了解 teamd 服务、运行程序和 link-watchers"){.link}
-   [NetworkManager 在 NetworkManager
    服务重启后复制连接](https://access.redhat.com/solutions/3068421){.link}
:::
:::
:::
[]{#configuring-network-bonding_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-network-bonding_configuring-and-managing-networking.html#configuring-network-bonding_configuring-and-managing-networking}第 12 章 配置网络绑定 {.title}
:::
这部分论述了网络绑定的基础知识、绑定和团队之间的不同，以及如何在 Red Hat
Enterprise Linux 中配置网络绑定。
您可以在不同类型的设备中创建绑定，例如：
::: itemizedlist
-   物理和虚拟以太网设备
-   网络桥接
-   网络团队（team）
-   VLAN 设备
:::
::: section
::: titlepage
# []{#configuring-network-bonding_configuring-and-managing-networking.html#understanding-network-bonding_configuring-network-bonding}了解网络绑定 {.title}
:::
网络绑定（network
bonding）是组合或者整合网络接口的方法，以便提供一个高吞吐量或冗余的逻辑接口。
`active-backup`{.literal}、`balance-tlb`{.literal} 和
`balance-alb`{.literal}
模式不需要任何网络交换机的具体配置。然而，其他绑定模式需要配置交换机来聚合链接。例如，Cisco
交换机需要 `EtherChannel`{.literal} 来实现模式 0、2 和 3，但对于模式
4，需要链接聚合控制协议(LACP)和 `EtherChannel`{.literal}。
详情请查看您的交换机和 [Linux 以太网捆绑驱动程序 HOWTO
文档](https://www.kernel.org/doc/Documentation/networking/bonding.txt){.link}。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}