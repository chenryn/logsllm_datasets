title:Towards Measuring and Mitigating Social Engineering Software Download
Attacks
author:Terry Nelms and
Roberto Perdisci and
Manos Antonakakis and
Mustaque Ahamad
Towards Measuring and Mitigating Social 
Engineering Software Download Attacks
Terry Nelms, Georgia Institute of Technology and Damballa; Roberto Perdisci,  
University of Georgia and Georgia Institute of Technology; Manos Antonakakis,  
Georgia Institute of Technology; Mustaque Ahamad, Georgia Institute of Technology  
and New York University Abu Dhabi
 https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/nelms
This paper is included in the Proceedings of the 25th USENIX Security SymposiumAugust 10–12, 2016 • Austin, TXISBN 978-1-931971-32-4Open access to the Proceedings of the 25th USENIX Security Symposium is sponsored by USENIX Towards Measuring and Mitigating
Social Engineering Software Download Attacks
Terry Nelms1,2, Roberto Perdisci3,1, Manos Antonakakis1, and Mustaque Ahamad1,4
1Georgia Institute of Technology
4New York University Abu Dhabi
2Damballa, Inc.
3University of Georgia
PI:EMAIL, PI:EMAIL, PI:EMAIL, PI:EMAIL
Abstract
Most modern malware infections happen through the
browser, typically as the result of a drive-by or social en-
gineering attack. While there have been numerous stud-
ies on measuring and defending against drive-by down-
loads, little attention has been dedicated to studying so-
cial engineering attacks.
In this paper, we present the first systematic study
of web-based social engineering (SE) attacks that suc-
cessfully lure users into downloading malicious and un-
wanted software. To conduct this study, we collect and
reconstruct more than two thousand examples of in-the-
wild SE download attacks from live network traffic. Via a
detailed analysis of these attacks, we attain the following
results: (i) we develop a categorization system to identify
and organize the tactics typically employed by attackers
to gain the user’s attention and deceive or persuade them
into downloading malicious and unwanted applications;
(ii) we reconstruct the web path followed by the victims
and observe that a large fraction of SE download attacks
are delivered via online advertisement, typically served
from “low tier” ad networks; (iii) we measure the char-
acteristics of the network infrastructure used to deliver
such attacks and uncover a number of features that can
be leveraged to distinguish between SE and benign (or
non-SE) software downloads.
1
Introduction
Most modern malware infections happen via the
browser, typically triggered by social engineering [9] or
drive-by download attacks [33]. While numerous studies
have focused on measuring and defending against drive-
by downloads [14,17,28,38], malware infections enabled
by social engineering attacks remain notably understud-
ied [31].
Moreover, as recent defenses against drive-by down-
loads and other browser-based attacks are becoming
harder to circumvent [18, 24, 32, 36, 40], cyber-criminals
increasingly aim their attacks against the weakest link,
namely the user, by leveraging sophisticated social en-
gineering tactics [27]. Because social engineering (SE)
attacks target users, rather than systems, current defense
solutions are often unable to accurately detect them.
Thus, there is a pressing need for a comprehensive study
of social engineering downloads that can shed light on
the tactics used in modern attacks. This is important not
only to inform better technical defenses, but may also al-
low us to gather precious information that may be used
to better train users against future SE attacks.
In this paper, we present a study of real-world SE
download attacks. Specifically, we focus on studying
web-based SE attacks that unfold exclusively via the web
and that do not require “external” triggers such as email
spam/phishing, etc. An example of such attacks is de-
scribed in [9]: a user is simply browsing the web, vis-
iting an apparently innocuous blog, when his attention
is drawn to an online ad that is subtly crafted to mimic
a warning about a missing browser plugin. Clicking on
the ad takes him to a page that reports a missing codec,
which is required to watch a video. The user clicks on
the related codec link, which results in the download of
malicious software.
To conduct our study, we collect and analyze hundreds
of successful in-the-wild SE download attacks, namely
SE attacks that actually result in a victim downloading
malicious or unwanted software. We harvest these at-
tacks by monitoring live web traffic on a large academic
network. Via a detailed analysis of our SE attack dataset,
we attain the following main results: (i) we develop a
categorization system to identify and organize the tactics
typically employed by attackers to gain a user’s atten-
tion and deceive or persuade them into downloading ma-
licious and unwanted applications; (ii) we reconstruct the
web path (i.e., sequence of pages/URLs) followed by SE
victims and observe that a large fraction of SE attacks are
delivered via online advertisement (e.g., served via “low
tier” ad networks); (iii) we measure the characteristics of
the network infrastructure (e.g., domain names) used to
USENIX Association  
25th USENIX Security Symposium  773
deliver such attacks, and uncover a number of features
that can be leveraged to distinguish between SE and be-
nign (i.e., “non-SE”) software downloads.
Our findings show that a large fraction of SE attacks
(almost 50%) are accomplished by repackaging existing
benign applications. For instance, users often download
free software that comes as a bundle including the soft-
ware actually desired by the user plus some Adware or
other Potentially Unwanted Programs (PUPs). This con-
firms that websites serving free software are often in-
volved (willingly or not) in distributing malicious or un-
wanted software [4, 7].
The second most popular category of attacks is related
to alerting or urging the user to install an application that
is supposedly needed to complete a task. For instance,
the user may be warned that they are running an outdated
or insecure version of Adobe Flash or Java, and are of-
fered to download a software update. Unfortunately, by
downloading these supposed updates, users are infected.
Similarly, users may stumble upon a page that suppos-
edly hosts a video of interest. This page may then inform
the user that a specific video codec is needed to play the
desired video. The user complies by downloading the
suggested software, thus causing an infection (see Sec-
tion 3 for details).
Another example of an SE download attack is rep-
resented by fake anti-viruses (FakeAVs) [35].
In this
case, a web page alerts the user that their machine is in-
fected and that AV software is needed to clean up the
machine.
In a way similar to the SE attack examples
reported above, the user may be persuaded to down-
load (in some cases after a payment) the promoted soft-
ware, which will infect the user’s machine. However,
while FakeAVs have been highly popular among attack-
ers in the recent past, our study of in-the-wild SE mal-
ware downloads finds that they represent less than 1%
of modern SE attacks. This sharp decline in the num-
ber of FakeAV attacks within the last few years is con-
sistent with the recent development of technical counter-
measures against this class of attacks [5] and increased
user awareness [6].
As mentioned earlier, a large fraction of SE download
attacks (more than 80%) are initiated via advertisements,
and that the “entry point” to these attacks is represented
by only a few low-tier advertisement networks. For in-
stance, we found that a large fraction of the web-based
SE attacks described above are served primarily via two
ad networks: onclickads.net and adcash.com.
By studying the details of SE download attacks, we
also discover a number of features that aid in the detec-
tion of SE download attacks on live web traffic. We train
a classifier using these features and measure its effective-
ness at detecting SE downloads.
Summary of Contributions:
• We present the first systematic study of modern
web-based SE download attacks. For instance, our
analysis of hundreds of SE download attack in-
stances reveals that most such attacks are enabled
by online advertisements served through a handful
of “low tier” ad networks.
• To assist the process of understanding the origin
of SE download attacks, we develop a categoriza-
tion system that expresses how attackers typically
gain a user’s attention, and what are the most com-
mon types of deception and persuasion tactics used
to trick victims into downloading malicious or un-
wanted applications. This makes it easier to track
what type of attacks are most prevalent and may
help to focus user training programs on specific user
weaknesses and particularly successful deception
and persuasion tactics currently used in the wild.
• Via extensive measurements, we find that the most
common types of SE download attacks include fake
updates for Adobe Flash and Java, and that fake
anti-viruses (FakeAVs), which have been a popu-
lar and effective infection vector in the recent past,
represent less than 1% of all SE downloads we ob-
served in the wild. Furthermore, we find that ex-
isting defenses, such as traditional anti-virus (AV)
scanners, are largely ineffective against SE down-
loads.
• Based on our measurements, we then identify a set
of features that allow for building a statistical clas-
sifier that is able to accurately detect ad-driven SE
download attacks with 91% true positives and only
0.5% false positives.
2 Study Overview
Our study of SE download attacks is divided in mul-
tiple parts. To better follow the results discussed in the
following sections, we now present a brief summary of
their content.
In Section 3, we analyze the range of deception and
persuasion tactics employed by the attackers to victimize
users, and propose a categorization system to systematize
the in-the-wild SE tactics we observed.
In Section 4, we discuss how we collect software
downloads (including malicious ones) from live network
traffic and reconstruct their download path. Namely, we
trace back the sequence of pages/URLs visited by a user
before arriving to a URL that triggers the download of
an executable file (we focus on Windows portable exe-
cutable files). We then analyze the collected software
download events, and label those downloads that result
774  25th USENIX Security Symposium 
USENIX Association
2
from SE attacks. This labeled dataset is used in the fol-
lowing sections to enable a detailed analysis of the char-
acteristics of the SE download attacks.
We analyze our dataset of in-the-wild SE download
attacks in Section 5. Specifically, we measure how the
SE attack tactics are distributed, according to the catego-
rization system proposed in Section 3, and highlight the
most popular successful SE malware attacks. According
to our dataset, the majority of SE attacks are promoted
via online advertisement. Therefore, in Section 5 we
also present an analysis of the network-level properties
of ad-based SE malware attacks, and contrast them with
properties of ad-driven benign software downloads.
In Section 6, we focus on detecting ad-based SE down-
load attacks. We first show that anti-virus products de-
tect only a small fraction of all SE attacks, leaving most
“fresh” SE download events undetected. We then devise
a number of statistical features that can be extracted from
the network properties of ad-driven software download
events, and show that they allow us to build an accurate
SE attack classifier, which could be used to detect and
stop SE download attacks before they infect their vic-
tims.
Finally, we discuss possible limitations of our SE at-
tacks study and detection approach in Sections 7, and
contrast our work to previously published research in
Section 8.
3 SE Download Attacks
In this section, we analyze the range of deception and
persuasion tactics employed by the attackers to victim-
ize users (Section 3.1). We also provide some concrete
examples of SE download attacks, to highlight how real
users may fall victim to such attacks (Section 3.2).
SE Attacks Dataset. Our analysis is based on a dataset
consisting of 2,004 real-world SE download attacks. We
collected these attacks by monitoring the network traf-
fic of a large academic network (authorized by our orga-
nization’s IRB), passively reconstructing the download
of executable binary files and tracing back the brows-
ing path followed by the users to reach the file down-
load event. We then analyzed the observed file down-
load events to identify possible malware, adware or PUP
downloads. Finally, we performed an extensive manual
analysis of the suspicious downloads to identify and la-
bel those downloads that were triggered by SE attacks,
and to precisely reconstruct the attack scenarios. A de-
tailed description of our dataset collection and labeling
approach is provided in Section 4. Furthermore, in Sec-
tion 5 we measure properties of the collected attacks,
such as what types of SE attacks are the most prevalent,
and provide information on the network-level character-
istics of SE download distribution operations.
In the following, we will focus on analyzing our SE
download attack dataset with the goal of categorizing the
different types of deception and persuasion tactics used
by attackers to lure victims into downloading malicious
and unwanted software.
3.1 Categorizing SE Download Tactics
The dataset of 2,004 SE download attacks that we re-
constructed and labeled via extensive manual analysis ef-
forts (detailed in Section 4) gives us an excellent oppor-
tunity to study the wide range of depiction and persua-
sion tactics employed by the attackers. To better under-
stand how SE attacks work, we develop a categorization
system that aims to provide a systematization of the tech-
niques used by successful SE download attacks. Specifi-
cally, we categorize different SE attacks according to; (1)
the ways the adversaries get the user’s attention and (2)
the type of deception and persuasion tactics employed.
Our categorization of SE attacks is summarized in Fig-
ure 1.
Gaining the user’s attention. The first step in a SE at-
tack is to get the user’s attention. This is accomplished
for example by leveraging online advertisement (ad),
search engine optimization (SEO) techniques or by post-
ing messages (and clickable links) on social networks,
forums, and other sites that publish user-generated con-
tent.
As we will show in Section 5, the most popular of
these methods is ads. On-line advertisement allows the
attacker to easily “publish” their deception/persuasion
ad on a site that is likely already popular among the
targeted victims. In addition, ads help hide the decep-
tion/persuasion campaign and attack infrastructure (i.e.,
hide it from users as well as security researchers), sim-
ply because SE ads are exposed only to targeted users via
search keywords, the user’s cookies, etc.
Another method employed to attract the user’s atten-
tion is search. For instance, search engines can be abused
via black hat SEO attacks to pollute the search results
with harmful links. In addition, in our categorization of
SE attacks we use a generic definition of “search” that
does not only include search engines; anytime a user
perform a query to locate specific content on a website,
we classify it as a search event. For instance, we have
observed users that become victims of SE attacks while
simply searching for content within a website that hosts
video streaming (e.g., movies, video clips, etc.).
Attackers also use web posts to attract the user’s atten-
tion. We define a web post as content that has been added
to a website by a visitor and is now available for display
to others. For instance, many of the web posts used in the
SE download attacks we observed were located within
groups of legitimate posts about a topic of interest. The
majority of such web posts were related to content (e.g.,
USENIX Association  
25th USENIX Security Symposium  775
3
User Attention
Ad
Search
Web Post
Deception
Persuasion
Decoy