# Towards Measuring and Mitigating Social Engineering Software Download Attacks

## Authors
- Terry Nelms, Georgia Institute of Technology and Damballa, Inc.
- Roberto Perdisci, University of Georgia and Georgia Institute of Technology
- Manos Antonakakis, Georgia Institute of Technology
- Mustaque Ahamad, Georgia Institute of Technology and New York University Abu Dhabi

## Abstract
Most modern malware infections occur through the browser, typically via drive-by or social engineering (SE) attacks. While numerous studies have focused on measuring and defending against drive-by downloads, little attention has been given to SE attacks. In this paper, we present the first systematic study of web-based SE attacks that successfully lure users into downloading malicious and unwanted software.

We collected and reconstructed over 2,000 examples of in-the-wild SE download attacks from live network traffic. Our detailed analysis yielded the following results:
1. We developed a categorization system to identify and organize the tactics used by attackers to gain user attention and deceive or persuade them into downloading malicious and unwanted applications.
2. We reconstructed the web path followed by victims and observed that a large fraction of SE download attacks are delivered via online advertisements, typically served from "low tier" ad networks.
3. We measured the characteristics of the network infrastructure used to deliver these attacks and uncovered features that can distinguish between SE and benign (or non-SE) software downloads.

## 1. Introduction
Modern malware infections often occur through the browser, triggered by social engineering [9] or drive-by download attacks [33]. While many studies have focused on drive-by downloads [14, 17, 28, 38], SE attacks remain understudied [31].

As recent defenses against drive-by downloads and other browser-based attacks become harder to circumvent [18, 24, 32, 36, 40], cyber-criminals increasingly target the weakest link: the user, using sophisticated SE tactics [27]. Because SE attacks target users rather than systems, current defense solutions often fail to detect them. Thus, there is a pressing need for a comprehensive study of SE downloads to inform better technical defenses and train users against future attacks.

In this paper, we present a study of real-world SE download attacks. Specifically, we focus on web-based SE attacks that unfold exclusively via the web and do not require external triggers such as email spam or phishing. An example of such an attack is described in [9]: a user browsing an innocuous blog is drawn to an online ad mimicking a warning about a missing browser plugin. Clicking the ad leads to a page reporting a missing codec required to watch a video. The user clicks the codec link, resulting in the download of malicious software.

To conduct our study, we collected and analyzed hundreds of successful in-the-wild SE download attacks, harvested by monitoring live web traffic on a large academic network. Our detailed analysis of the SE attack dataset yielded the following main results:
1. We developed a categorization system to identify and organize the tactics used by attackers to gain user attention and deceive or persuade them into downloading malicious and unwanted applications.
2. We reconstructed the web path (sequence of pages/URLs) followed by SE victims and observed that a large fraction of SE attacks are delivered via online advertisements, typically served from "low tier" ad networks.
3. We measured the characteristics of the network infrastructure (e.g., domain names) used to deliver these attacks and uncovered features that can be leveraged to distinguish between SE and benign (non-SE) software downloads.

Our findings show that nearly 50% of SE attacks involve repackaging existing benign applications. For instance, users often download free software bundled with Adware or Potentially Unwanted Programs (PUPs). This confirms that websites serving free software are often involved (willingly or not) in distributing malicious or unwanted software [4, 7].

The second most popular category of attacks involves alerting or urging the user to install an application supposedly needed to complete a task. For example, users may be warned about an outdated or insecure version of Adobe Flash or Java and offered a software update. Unfortunately, downloading these supposed updates infects the user's machine. Similarly, users may encounter a page claiming to host a video of interest, which then informs the user that a specific video codec is needed to play the video. The user complies by downloading the suggested software, causing an infection (see Section 3 for details).

Another example of an SE download attack is fake anti-viruses (FakeAVs) [35]. In this case, a web page alerts the user that their machine is infected and needs AV software to clean it. The user may be persuaded to download (and sometimes pay for) the promoted software, which will infect the user's machine. However, while FakeAVs were highly popular in the past, our study finds they represent less than 1% of modern SE attacks, consistent with recent developments in technical countermeasures [5] and increased user awareness [6].

A large fraction of SE download attacks (over 80%) are initiated via advertisements, with the entry point represented by a few low-tier ad networks. For example, we found that a significant number of web-based SE attacks are served primarily via two ad networks: onclickads.net and adcash.com.

By studying the details of SE download attacks, we also discovered features that aid in detecting SE download attacks on live web traffic. We trained a classifier using these features and measured its effectiveness at detecting SE downloads.

### Summary of Contributions:
- We present the first systematic study of modern web-based SE download attacks, revealing that most such attacks are enabled by online advertisements served through a handful of "low tier" ad networks.
- We develop a categorization system to understand how attackers gain user attention and the common types of deception and persuasion tactics used to trick victims into downloading malicious or unwanted applications.
- We find that the most common types of SE download attacks include fake updates for Adobe Flash and Java, and that FakeAVs, once popular, now represent less than 1% of all SE downloads. Existing defenses, such as traditional AV scanners, are largely ineffective against SE downloads.
- Based on our measurements, we identify features that allow for building a statistical classifier capable of accurately detecting ad-driven SE download attacks with 91% true positives and only 0.5% false positives.

## 2. Study Overview
Our study of SE download attacks is divided into multiple parts. To better follow the results discussed in the following sections, we provide a brief summary of their content.

- **Section 3**: We analyze the range of deception and persuasion tactics employed by attackers to victimize users and propose a categorization system to systematize the in-the-wild SE tactics we observed.
- **Section 4**: We discuss how we collect software downloads (including malicious ones) from live network traffic and reconstruct their download path. We trace back the sequence of pages/URLs visited by a user before arriving at a URL that triggers the download of an executable file. We then analyze the collected software download events and label those resulting from SE attacks. This labeled dataset is used in the following sections for a detailed analysis of SE download attack characteristics.
- **Section 5**: We analyze our dataset of in-the-wild SE download attacks, measuring the distribution of SE attack tactics according to the categorization system proposed in Section 3. We highlight the most popular successful SE malware attacks and present an analysis of the network-level properties of ad-based SE malware attacks, contrasting them with properties of ad-driven benign software downloads.
- **Section 6**: We focus on detecting ad-based SE download attacks. We show that AV products detect only a small fraction of all SE attacks, leaving most "fresh" SE download events undetected. We devise statistical features that can be extracted from the network properties of ad-driven software download events and show that they allow us to build an accurate SE attack classifier, which could be used to detect and stop SE download attacks before they infect their victims.
- **Sections 7 and 8**: We discuss possible limitations of our SE attacks study and detection approach and contrast our work with previously published research.

## 3. SE Download Attacks
In this section, we analyze the range of deception and persuasion tactics employed by attackers to victimize users (Section 3.1) and provide concrete examples of SE download attacks to highlight how real users may fall victim to such attacks (Section 3.2).

### 3.1 Categorizing SE Download Tactics
Our analysis is based on a dataset of 2,004 real-world SE download attacks. We collected these attacks by monitoring the network traffic of a large academic network (authorized by our organizationâ€™s IRB), passively reconstructing the download of executable binary files, and tracing back the browsing path followed by the users to reach the file download event. We then analyzed the observed file download events to identify possible malware, adware, or PUP downloads. Finally, we performed an extensive manual analysis of the suspicious downloads to identify and label those triggered by SE attacks and to precisely reconstruct the attack scenarios. A detailed description of our dataset collection and labeling approach is provided in Section 4. In Section 5, we measure properties of the collected attacks, such as the most prevalent types of SE attacks and the network-level characteristics of SE download distribution operations.

In the following, we focus on analyzing our SE download attack dataset to categorize the different types of deception and persuasion tactics used by attackers to lure victims into downloading malicious and unwanted software.

**Categorization System:**
- **Gaining the Userâ€™s Attention**: The first step in an SE attack is to get the userâ€™s attention. This is accomplished by leveraging online advertisements (ads), search engine optimization (SEO) techniques, or by posting messages (and clickable links) on social networks, forums, and other sites that publish user-generated content.
  - **Ads**: Online advertisements allow attackers to easily "publish" their deception/persuasion ads on popular sites. Ads also help hide the deception/persuasion campaign and attack infrastructure, as SE ads are exposed only to targeted users via search keywords and cookies.
  - **Search**: Search engines can be abused via black hat SEO attacks to pollute search results with harmful links. We use a generic definition of "search" that includes any query to locate specific content on a website.
  - **Web Posts**: Web posts are content added to a website by a visitor and available for display to others. Many SE download attacks use web posts located within groups of legitimate posts about a topic of interest.

- **Deception and Persuasion Tactics**:
  - **Decoy**: Attackers use decoys to trick users into downloading malicious software. For example, a user might be led to believe they need a specific codec to watch a video, or that they need to update a critical piece of software.

By systematically categorizing these tactics, we aim to provide a clearer understanding of how SE attacks work and to inform the development of more effective defenses and user training programs.