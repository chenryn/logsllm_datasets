### 4 整体变慢的性能优化通用方法  
- [《PostgreSQL (慢SQL|数据库整体变慢|性能抖动) 数据库性能分析与优化方法 - 珍藏级,建议收藏》](../202208/20220823_02.md)    
- [《2019-PostgreSQL 2天体系化培训 - 适合DBA》](../201901/20190105_01.md)    
### 5 找出代码缺陷   
最后这个实验, 是要找出数据库|OS内核的性能瓶颈.    
1、使用固定的数据量、压测时长、并发、压测请求数 开启压测   
在压测过程收集数据, 观测问题  
2、观测工具参考    
- perf   
- dtrace  
- systemtap  
工具使用方法参考:  
- [《PostgreSQL 源码性能诊断(perf profiling)指南(含火焰图生成分析FlameGraph) - 珍藏级》](../201611/20161129_01.md)    
- [《[转载] systemtap 跟踪分析 PostgreSQL》](../201810/20181025_01.md)    
- [《PostgreSQL 代码性能诊断之 - OProfile & Systemtap》](../201505/20150509_01.md)    
- [《stap trace blockdev's iops》](../201311/20131127_01.md)    
- [《USE blockdev --setra 0 and systemtap test real BLOCKDEV iops》](../201311/20131126_02.md)    
- [《设置进程亲和 - numactl 或 taskset - retrieve or set a process's CPU affinity (affect SYSTEMTAP TIME)》](../201311/20131126_01.md)    
- [《Systemtap examples, Identifying Contended User-Space Locks》](../201311/20131121_02.md)    
- [《Systemtap examples, Profiling - 6 Tracking System Call Volume Per Process》](../201311/20131121_01.md)    
- [《Systemtap examples, Profiling - 5 Tracking Most Frequently Used System Calls》](../201311/20131120_03.md)    
- [《Systemtap examples, Profiling - 4 Monitoring Polling Applications》](../201311/20131120_02.md)    
- [《Systemtap examples, Profiling - 3 Determining Time Spent in Kernel and User Space》](../201311/20131120_01.md)    
- [《Systemtap examples, Profiling - 2 Call Graph Tracing》](../201311/20131119_06.md)    
- [《Systemtap examples, Profiling - 1 Counting Function Calls Made》](../201311/20131119_05.md)    
- [《Systemtap examples, DISK IO - 7 Periodically Print I/O Block Time》](../201311/20131119_04.md)    
- [《Systemtap examples, DISK IO - 6 Monitoring Changes to File Attributes》](../201311/20131119_03.md)    
- [《Systemtap examples, DISK IO - 5 Monitoring Reads and Writes to a File》](../201311/20131119_02.md)    
- [《Systemtap examples, DISK IO - 4 I/O Monitoring (By Device)》](../201311/20131119_01.md)    
- [《Systemtap examples, DISK IO - 3 Track Cumulative IO》](../201311/20131118_02.md)    
- [《Systemtap examples, DISK IO - 2 Tracking I/O Time For Each File Read or Write》](../201311/20131118_01.md)    
- [《Systemtap examples, DISK IO - 1 Summarizing Disk Read/Write Traffic》](../201311/20131115_01.md)    
- [《Systemtap kernel.trace("\*") events source code》](../201311/20131114_06.md)    
- [《Systemtap examples, Network - 5 Monitoring Network Packets Drops in Kernel》](../201311/20131114_05.md)    
- [《Systemtap examples, Network - 4 Monitoring TCP Packets》](../201311/20131114_04.md)    
- [《Systemtap examples, Network - 3 Monitoring Incoming TCP Connections》](../201311/20131114_03.md)    
- [《Systemtap examples, Network - 2 Tracing Functions Called in Network Socket Code》](../201311/20131114_02.md)    
- [《Systemtap examples, Network - 1 Network Profiling》](../201311/20131114_01.md)    
- [《SystemTap Errors Introduce》](../201311/20131112_01.md)    
- [《SystemTap User-Space Stack Backtraces for x86 processors arch only》](../201311/20131111_01.md)    
- [《Systemtap Function thread_indent:string(delta:long)》](../201311/20131107_01.md)    
- [《SystemTap Flight Recorder Mode》](../201311/20131106_01.md)    
- [《PostgreSQL Dynamic Tracing using systemtap env prepare》](../201310/20131018_03.md)    
- [《Systemtap: PostgreSQL probe, USE @var("varname") or $varname get all local and global variables》](../201310/20131018_02.md)    
- [《Systemtap EXP: fix process probe global variables output BUG?(PostgreSQL checkpoint__done)》](../201310/20131018_01.md)    
- [《SystemTap Tapset: common used functions - 2》](../201310/20131017_04.md)    
- [《SystemTap Tapset: common used functions - 1》](../201310/20131017_03.md)    
- [《Systemtap EXP: PostgreSQL IN-BUILD mark Class 7 - others(statement,xlog,sort)》](../201310/20131017_02.md)    
- [《Systemtap EXP: PostgreSQL IN-BUILD mark Class 6 - lock》](../201310/20131017_01.md)    
- [《Systemtap EXP: PostgreSQL IN-BUILD mark Class 5 - read|write relation》](../201310/20131016_05.md)    
- [《Systemtap EXP: PostgreSQL IN-BUILD mark Class 4 - buffer》](../201310/20131016_04.md)    
- [《Systemtap EXP: PostgreSQL IN-BUILD mark Class 3 - checkpoint》](../201310/20131016_03.md)    
- [《Systemtap EXP: PostgreSQL IN-BUILD mark Class 2 - query》](../201310/20131016_02.md)    
- [《Systemtap EXP: PostgreSQL IN-BUILD mark Class 1 - transaction》](../201310/20131016_01.md)    
- [《Systemtap EXP: trace PostgreSQL netflow per session or per sql》](../201310/20131015_05.md)    
- [《Systemtap EXP: trace PostgreSQL instruction or block of instructions per sql or per session》](../201310/20131015_04.md)    
- [《Systemtap EXP: Trace PostgreSQL iostat per SQL statement 2》](../201310/20131015_03.md)    
- [《Systemtap EXP: Trace PostgreSQL iostat per SQL statement 1》](../201310/20131015_02.md)    
- [《Systemtap: Generating Instrumentation module(.ko) for Other Computers》](../201310/20131015_01.md)    
- [《Systemtap : stap PROCESSING 5 steps introduce》](../201310/20131014_04.md)    
- [《Systemtap BUG? : stap "-R no effect"》](../201310/20131014_03.md)    
- [《Systemtap Example : OUTPUT hist_linear for processes io size and io time "use @entry"》](../201310/20131014_02.md)    
- [《Systemtap(2.4) Example : array aggregate elements sorted by statistic operator (EXP. output TOPn IO processes)》](../201310/20131014_01.md)    
- [《PostgreSQL Systemtap example : Customize probe "SEE salted md5 value transfered on network"》](../201310/20131013_02.md)    
- [《Systemtap(2.4) fixed BUG(1.8) : delete from statistics(aggregates) type stored in array elements》](../201310/20131013_01.md)    
- [《Systemtap(1.8) BUG? : delete from statistics(aggregates) type stored in array elements》](../201310/20131012_02.md)    
- [《PostgreSQL Systemtap example : connection|close and session duration static》](../201310/20131012_01.md)    
- [《PostgreSQL Systemtap example : Customize probe "connect and disconnect"》](../201310/20131011_01.md)    
- [《PostgreSQL Systemtap example : autovacuum_naptime & databases in cluster》](../201310/20131010_02.md)    
- [《Systemtap Formatted output》](../201310/20131010_01.md)    
- [《Systemtap Statistics (aggregates) Data Type》](../201310/20131009_03.md)    
- [《Systemtap Associative array Data Type》](../201310/20131009_02.md)    
- [《Systemtap Statement types》](../201310/20131009_01.md)    
- [《Systemtap Preprocessor macros》](../201310/20131008_03.md)    
- [《Systemtap parse preprocessing stage - Conditional compilation》](../201310/20131008_02.md)    
- [《Systemtap Language elements - 1》](../201310/20131008_01.md)    
- [《Systemtap Special probe points (begin, end, error, never)》](../201310/20131007_05.md)    
- [《Systemtap Timer probes》](../201310/20131007_04.md)    
- [《Systemtap Syscall probes》](../201310/20131007_03.md)    
- [《Systemtap kernel Trace probes》](../201310/20131007_02.md)    
- [《Systemtap kernel Marker probes》](../201310/20131007_01.md)    
- [《Systemtap PROCFS probes》](../201310/20131006_01.md)    
- [《Systemtap Userspace probing - 4》](../201309/20130930_03.md)    
- [《Systemtap Userspace probing - 3》](../201309/20130930_02.md)    
- [《Systemtap Userspace probing - 2》](../201309/20130930_01.md)    
- [《Systemtap Userspace probing - 1》](../201309/20130929_03.md)    
- [《Systemtap DWARF-less probing (kprobe)》](../201309/20130929_02.md)    
- [《systemtap Built-in probe point types (DWARF-based kernel or module probes)》](../201309/20130929_01.md)    
- [《systemtap Auxiliary functions and Embedded C》](../201309/20130913_01.md)    
- [《systemtap local & global variables》](../201309/20130912_03.md)    
- [《systemtap probe aliases (Prologue-style = & Epilogue-style +=) and suffixes》](../201309/20130912_02.md)    
- [《systemtap probe point's "context variables" or "target variables"》](../201309/20130912_01.md)    
- [《systemtap probe point followed by ! or ? or "if (expr)"》](../201309/20130911_01.md)    
- [《find systemtap pre-built probe points & probe points reference manual》](../201309/20130910_03.md)    
- [《systemtap SAFETY AND SECURITY》](../201309/20130910_02.md)    
- [《systemtap optimized for variables》](../201309/20130910_01.md)    
- [《systemtap receive strings from address》](../201309/20130903_05.md)    
- [《use systemtap statistics vs pgbench progress output》](../201309/20130903_04.md)    
- [《Systemtap statistics type example》](../201309/20130903_03.md)    
- [《Systemtap supported data type (long,string,array,statistic), note don't support numeric except long》](../201309/20130903_02.md)    
- [《Eclipse Systemtap IDE》](../201309/20130903_01.md)    
- [《PostgreSQL SystemTap on Linux - 1》](../201308/20130814_02.md)    
### 附赠一些常用的学习资料  
- [《[未完待续] 数据库相关岗位面试准备建议 - 珍藏级》](../201806/20180623_01.md)    
- [《阿里巴巴 PostgreSQL、社区生态；PG开发者指南、原理、案例、管理优化实践《学习资料、视频》；《PG天天象上》沙龙纪录 - 珍藏级》](../201801/20180121_01.md)    
- [《PostgreSQL、Greenplum 《如来神掌》 - 目录 - 珍藏级》](../201706/20170601_02.md)    
- [《Oracle DBA 增值 PostgreSQL,Greenplum 学习计划 - 珍藏级》](../201804/20180425_01.md)    
## 知识点      
要求的知识点比较综合, 需掌握os,存储,网络,数据库等原理和常用的工具, 方法论等.   
## 思考      
1 除了以上优化, 通常还需要结合数据库的原理进行优化, 例如  
- [《PostgreSQL 空间st_contains，st_within空间包含搜索优化 - 降IO和降CPU(bound box) (多边形GiST优化)》](../201710/20171004_01.md)    
2 数据库中有大量的优化器因子配置项, 参数优化和硬件配置有什么关系?    
- [《DB吐槽大会,第12期 - 没有自动成本校准器》](../202108/20210830_03.md)    
- [《优化器成本因子校对(disk,ssd,memory IO开销精算) - PostgreSQL real seq_page_cost & random_page_cost in disks,ssd,memory》](../201404/20140423_01.md)    
- [《优化器成本因子校对 - PostgreSQL explain cost constants alignment to timestamp》](../201311/20131126_03.md)    
3 数据库的cbo, geqo优化器优化规则说的是什么? 和统计信息如何配合? 如何选择JOIN方法JOIN顺序?   
## 参考    
- [《PostgreSQL (慢SQL|数据库整体变慢|性能抖动) 数据库性能分析与优化方法 - 珍藏级,建议收藏》](../202208/20220823_02.md)    
- [《2019-PostgreSQL 2天体系化培训 - 适合DBA》](../201901/20190105_01.md)    
- [《PostgreSQL性能优化综合案例讲解 - 2》](../201203/20120313_02.md)    
- [《PostgreSQL性能优化综合案例讲解 - 1》](../201203/20120313_01.md)    
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")