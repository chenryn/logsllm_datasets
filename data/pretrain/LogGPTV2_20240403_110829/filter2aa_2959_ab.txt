22
23
24
25
26
27
28
29
30
31
32
33
Bash
复制代码
6
在aggressor/browsers/Sessions.java中的getContent函数最后，添加以下代码即可。 
增加beacon数量统计，⽅便统计战果 
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firef
ox/24.0
Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/23.0
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20130406 Firefox/23.0
Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:23.0) Gecko/20131011 Firefox/2
3.0
Mozilla/5.0 (Windows NT 6.2; rv:22.0) Gecko/20130405 Firefox/22.0
Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:22.0) Gecko/20130328 Firefox/2
2.0
Mozilla/5.0 (Windows NT 6.1; rv:22.0) Gecko/20130405 Firefox/22.0
Mozilla/5.0 (Microsoft Windows NT 6.2.9200.0); rv:22.0) Gecko/20130405 Fir
efox/22.0
Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefo
x/21.0.1
Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:16.0.1) Gecko/20121011 Firefo
x/21.0.1
Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:21.0.0) Gecko/20121011 Firefo
x/21.0.0
Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20130514 Firefox/21.0
Mozilla/5.0 (Windows NT 6.2; rv:21.0) Gecko/20130326 Firefox/21.0
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130401 Firefox/21.0
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130331 Firefox/21.0
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20130330 Firefox/21.0
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0
Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130401 Firefox/21.0
Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130328 Firefox/21.0
Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20100101 Firefox/21.0
Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130401 Firefox/21.0
Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130331 Firefox/21.0
Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20100101 Firefox/21.0
Mozilla/5.0 (Windows NT 5.0; rv:21.0) Gecko/20100101 Firefox/21.0
Mozilla/5.0 (Windows NT 6.2; Win64; x64;) Gecko/20100101 Firefox/20.0
Mozilla/5.0 (Windows x86; rv:19.0) Gecko/20100101 Firefox/19.0
Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/19.0
Mozilla/5.0 (Windows NT 6.1; rv:14.0) Gecko/20100101 Firefox/18.0.1
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:18.0) Gecko/20100101 Firefox/18.0
python-requests/2.25
Java/1.8.0_232
curl/7.54
Go-http-client/1.1
Wget/3.4.1
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
7
由于需要保证java 类的hash id计算保持⼀致，所以不能像4.4那样在BeaconEntry类当中新增属性字段，
这⾥采⽤添加类变量的⽅式，以hashmap的形势存储每个beaconEntry的配置信息，这样的好处是，不
self inject模式 
JPanel mainPanel = new JPanel();
mainPanel.setLayout(new BorderLayout());
Box verticalBox = Box.createVerticalBox();
Box horizontalBox = Box.createHorizontalBox();
JPanel totalBeacon = new JPanel();
totalBeacon.setLayout(new BorderLayout());
horizontalBox.add(new JLabel("Total Beacons: "));
JLabel totalBeaconView = new JLabel(String.valueOf(this.model.getRowCount(
)));
this.table.getModel().addTableModelListener((tableModelEvent) -> {
    totalBeaconView.setText(String.valueOf(this.model.getRowCount()));
});
horizontalBox.add(totalBeaconView);
totalBeacon.setMaximumSize(new Dimension(220, 100));
totalBeacon.add(horizontalBox, "North");
verticalBox.add(totalBeacon);
verticalBox.add(DialogUtils.FilterAndScroll(this.table));
mainPanel.add(verticalBox);
return mainPanel;
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
Java
复制代码
8
会影响团队内其他⽤户的操作，代码具体如下：
在aggressor/browsers/Sessions.java的cols中添加inject，这⾥⽤来在⻚⾯上展示inject字段。 
在common/BeaconEntry.java中添加类变量injectMode和函数getInject、setLessInject、
setFullInject、setDefaultInject，⽤来保存当前beacon的配置以及切换配置。 
其他修改与4.4版本原理⼀致，不再详述。启⽤SelfInject模式后，提示信息将会更换为“IceRiver By 
Attack2Defense  Self Inject”开头的信息。 
9
对第三⽅⾃定义插件的SelfInject⽀持，还在实现当中。 
这⾥CS 4.7的设计存在缺陷，在执⾏Desktop任务时，会先发送aggressor.resource指令到
teamserver，由teamserver读取服务器上的third-party⽬录下的winvnc.arch.dll⽂件内容，再返回给客
户端做RDI处理，然后再由客户端构造inject还是spawn指令发送到teamserver端。 
改造后就⽐较直接了，直接从客户端的resources⽬录读取dll，构造命令，再发送到teamserver。 
客户端内置winvnc,避免在TeamServer端上传winvnc dll,⽅便使⽤ 
10
修改aggressor/Prefs.java中的原.aggressor.prop⽂件名以及resources/aggressor.prop名称。 
修改默认保存的客户端配置⽂件名，加密保存登录密码，避免被明⽂读取
11
保存密码和读取密码时，使⽤随机⽣成的aes密钥加密和解密。在aggressor/Prefs.java的getString和
set⽅法中添加过滤，如果是保存和修改密码，则在保存前和读取后执⾏加密和解密。 
加密解密使⽤的是对称加密算法AES CTR，因此获取客户端⾃带的key和iv，就可以对密⽂解密。 
12
Change Log