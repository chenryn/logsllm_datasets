should have no impact on security if clients are vigilant in
downloading revocation information, but otherwise, could
make impersonation attacks possible. Moreover, our results
suggest that website administrators rarely enable OCSP Sta-
pling, the most eﬃcient and client-friendly protocol for dis-
tributing revocations. Next, we investigate the behavior of
the distributors of revocation information: the CAs.
5. CA BEHAVIOR
Upon receiving a request to revoke a certiﬁcate, CAs are
responsible for maintaining a highly available service for dis-
seminating revocation information. In this section, we turn
our study towards the CAs by investigating the characteris-
tics of the distribution mechanisms they make available.
5.1 Availability of Revocation Information
We brieﬂy explore how the inclusion of revocation infor-
mation in certiﬁcates has evolved in Figure 4, where we
plot the fraction of new certiﬁcates that contain potentially
reachable CRL distribution points or OCSP responders each
month. We observe that CRLs have been included in almost
all certiﬁcates issued over the past four years, but that OCSP
was slower to be adopted (unsurprisingly, as it was standard-
ized much later than CRLs). Moreover, we observe a “spike”
in the prevalence of OCSP information in July 2012, corre-
sponding to the adoption of OCSP by RapidSSL (a low-cost
CA owned by GeoTrust).
These encouraging results show that, today, both forms of
revocation are included in nearly all certiﬁcates. Unfortu-
nately, both of these schemes have their shortcomings: CRLs
impose bandwidth burdens (which we investigate later in
this section), and having to query an OCSP responder im-
poses slower page-load times for browsers. As a result, there
has been push-back from both the CA and browser commu-
nities. Unfortunately, as we demonstrated in the previous
section, OCSP Stapling is still only deployed on a small frac-
tion of web servers.
5.2 Size of Revocation Information
One of the common criticisms of CRLs is the network
traﬃc required to download them. We now examine the
sizes of CRLs, and how this has evolved over time.
Recall that CRLs contain one entry for each certiﬁcate
that is revoked. Thus, the size of the CRL (in bytes) is
expected to correlate with the number of entries. We plot
this correlation as a scatterplot in Figure 5, and observe a
strong linear relationship (except for CRLs with just a few
entries, which have some ﬁxed overhead).11 On average,
each entry is 38 bytes.
Figure 5 suggests that most CRLs are small. We explore
this trend further in Figure 6, which presents the CDF of
CRL sizes as the Raw line. We immediately observe that
half of all CRLs are under 900 B. However, this statistic is
deceiving: if you select a certiﬁcate at random from the Leaf
11The variance between CRL sizes at the same number of entries
is largely due to diﬀerences in serial number assignment policies for
diﬀerent CAs; some CAs use serial numbers of up to 49 decimal digits,
which results in larger CRL ﬁle sizes.
 0.8 0.82 0.84 0.86 0.88 0.9 0.92 0.94 0.96 0.98 1 1 2 3 4 5 6 7 8 9 10Fraction of Servers Observedto Support OCSP StaplingNumber of Requests 0.65 0.7 0.75 0.8 0.85 0.9 0.95 101/1107/1101/1207/1201/1307/1301/1407/1401/15Fraction of New Certificateswith Revocation InformationDate Certificate IssuedRapidSSL beginssupporting OCSPCRLOCSPFigure 5: Scatterplot of the number of entries in CRLs versus
CRL ﬁle size, for all 2,800 CRLs we crawled. As expected, a
linear correlation is observed.
Set, it is unlikely to point to a tiny CRL, since the tiny CRLs
cover very few certiﬁcates. To adjust for this issue, we plot
the CRL size per certiﬁcate as the Weighted distribution in
Figure 6.12 The Weighted distribution tells a diﬀerent story:
the CRL size for the median certiﬁcate is 51 KB, and we ob-
serve CRLs ranging up to 76 MB.13 Although one can argue
that weighing CRLs is unfair (as clients can cache them),
95% of CRLs expire in less than 24 hours [52], reducing a
client’s ability to save bandwidth through caching.
One mechanism that CAs can use to reduce the size of
CRLs is to maintain multiple CRLs [20], assigning only a
subset of all issued certiﬁcates to each CRL. We explore the
extent to which diﬀerent CAs do this in Table 1, and observe
that, in general, CAs use only a small number of CRLs.
The CA that uses this technique to the largest extent is
GoDaddy with 322 unique CRLs, but given the large number
of GoDaddy revocations, their average certiﬁcate’s CRL is
still over 1MB in size. Moreover, the trend is not entirely
consistent, as various CA policies will aﬀect the resulting
CRL size.14
Our ﬁndings conﬁrm that fetching CRLs can be an ex-
pensive operation for clients, especially ones on bandwidth-
constrained networks (e.g., mobile devices). Moreover, prop-
erly verifying a certiﬁcate requires the client to download the
CRL before fully establishing the SSL connection; thus, for
interactive applications like web browsers, downloading the
CRL also comes with a latency penalty. The large size of
CRLs is especially glaring when compared to the size of an
OCSP query and response (which is typically less than 1 KB
and often comes with a latency penalty under 250 ms [33]).
5.3 Summary
Overall, our results show that, while there are potentially
high costs involved in disseminating revocation information,
many CAs have not widely adopted smaller CRLs. Com-
bined with the lack of wide OCSP Stapling adoption, we see
that there are multiple opportunities to signiﬁcantly lower
the costs incurred by CAs and browsers when obtaining cer-
tiﬁcate revocation information.
12For certiﬁcates that have multiple CRLs, we pick the smallest.
13The 76 MB CRL is hosted by Apple at http://crl.apple.com/
wwdrca.crl and contains over 2.6 million revoked certiﬁcates.
14One notable example in the table is StartCom, which has an out-
sized average CRL size relative to the number of revocations. This is
due to a single CRL (http://www.startssl.com/crt1-crl.crl) that is
over 22 MB and has over 290 K revocations. This CRL is for StartSSL
“Free” certiﬁcates that, after a year of validity, require customers to
revoke an expiring certiﬁcate (at a fee of $24.90) before a new certiﬁ-
cate for the same domain will be reissued [45].
Figure 6: Cumulative distribution of the sizes of CRLs (shown
under the raw line). Most CRLs are small (median size is less
than 1 KB), but most CRLs cover few certiﬁcates. The weighted
distribution shows the CRL size distribution across certiﬁcates;
in this case, the mean certiﬁcate has a CRL size of 51 KB.
6. CLIENT BEHAVIOR
Recall that the burden of certiﬁcate validation is placed
entirely on the client: it is up to the client to check the va-
lidity of the presented certiﬁcate chain and to obtain revo-
cation information from CAs to make sure that none of the
certiﬁcates have been revoked. We now explore the extent
to which the most popular SSL clients—web browsers—do
so. Because web browser developers care deeply about min-
imizing latency, and (as we observed above) checking certiﬁ-
cate revocation information can take signiﬁcant eﬀort, web
browser developers have a strong tension between minimiz-
ing latency and ensuring security.
6.1 Methodology
Our goal is to build a test harness that is able to de-
termine whether a web browser chooses to check certiﬁcate
revocation information for a variety of diﬀerent kinds of cer-
tiﬁcates and chains. Ideally, we would like to use real certiﬁ-
cates, but doing so would require obtaining access to a real
intermediate certiﬁcate (an unlikely prospect). Instead, we
generate our own root certiﬁcate and install it so that the
web browser trusts it. This allows us to then generate and
sign intermediate and leaf certiﬁcates as we wish.
We build a test suite that covers many combinations of
chain length, protocols, etc. For each test, we generate a
unique set of certiﬁcates (i.e., the intermediates and leaf cer-
tiﬁcates are not re-used across tests, in order to eliminate
caching eﬀects). Each intermediate contains a unique sub-
ject name, and each leaf contains a unique common name.
Each test is served by a dedicated Nginx web server. When
generating test cases, we consider four diﬀerent dimensions:
CA
GoDaddy
RapidSSL
Comodo
PositiveSSL
GeoTrust
Verisign
Thawte
GlobalSign
StartCom
Unique
CRLs
322
5
30
3
27
37
32
26
17
Certiﬁcates
Total Revoked
277,500
2,153
7,169
8,177
3,081
15,438
4,446
24,242
1,752
1,050,014
626,774
447,506
415,075
335,380
311,788
278,563
247,819
236,776
Avg. CRL
size (KB)
1,184.0
34.5
517.6
441.3
12.9
205.2
25.4
2,050.0
240.5
Table 1: Number of CRLs, certiﬁcates (total and revoked), and
the average CRL size per certiﬁcate for the largest CAs.
 0.1 1 10 100 1000 10000 100000 1 10 100 1000 10000 100000 1e+06 1e+07CRL Size (KB)Number of Revocations in CRL 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.1 1 10 100 1000 10000CDFCRL Size (KB)RawWeightedChrome 44
Firefox
Opera
OS X Win.
Lin.
40
12.17
31.0
Safari
6–8
IE
10
7–9
11
iOS Andr. 4.1–5.1
6–8
Stock Chrome
IE
8.0
Desktop Browsers
Mobile Browsers
Int. 1
Int. 2+
Leaf
Int. 1
Int. 2+
Leaf
CRL
Revoked
Unavailable
Revoked
Unavailable
Revoked
Unavailable
OCSP
Revoked
Unavailable
Revoked
Unavailable
Revoked
Unavailable
Reject unknown status
Try CRL on failure
OCSP Stapling
Request OCSP staple
Respect revoked staple
ev
ev
ev

ev

ev

ev

ev


ev




ev

ev

ev

ev

ev


ev


ev
–
ev
–
ev
–
ev
–
ev
–
ev
–
–
–

–






ev

ev









