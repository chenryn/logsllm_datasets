rious, daddy, eaten, tease, entertain, athletic
rate, selﬁe, selﬁes, send, inbox, sends, pic
f, dm, pm, chat, ladys, message, m
Top 50 Keywords Least Related to Deleted Whispers
panic, emotions, argument, meds, hardest, fear, tears,
sober,
failure, unfortunately, under-
stands, anxiety, understood, aware, strength
beliefs, path, faith, christians, atheist, bible, create, re-
ligion, praying, helped
episode, series, season, anime, books, knowledge,
restaurant, character
frozen, argue,
Life story (6) memories, moments, escape, raised, thank, thanks
Work (5)
Politics (1)
Others (3)
interview, ability, genius, research, process
government
exactly, beginning, example
Table 4: Topics of top and bottom 50 keywords related to whis-
per deletion.
In this section, we take a closer look at content deletions in Whis-
per. First, we analyze the content of deleted whispers to infer
the reasons behind deletions. Second, we analyze the lifetime of
deleted whispers to understand how fast do whispers get deleted.
Third, we focus on authors of deleted whispers and compare their
behavior to the norm.
Before we begin, we note that while users can delete their own
whispers, we believe server-side content moderation is responsi-
ble for the large majority of missing whispers in our data. Intu-
itively, users who reconsider and later delete their own whispers
are likely to do so within a relatively short time frame. In contrast,
our “deleted” dataset comes from our followup crawl for replies,
which runs once a week. In fact, since our main crawler on the
latest stream runs every 30 minutes, we expect most self-deleted
whispers will not even show up in our core dataset.
Content Analysis of Deleted Whispers.
To explore the rea-
sons behind deletion, we analyze the content of deleted whispers.
Since whispers are usually very short, Natural Language Process-
ing (NLP) tools do not work well (we conﬁrmed via experiments).
Thus we take a keyword-based approach: we extract keywords
from all whispers and examine which keywords correlate with
deleted whispers. First, before processing, we exclude common
stopwords4 from our keyword list. Also to avoid statistical outliers,
we exclude low frequency words that appear in less than 0.05% of
whispers. Then for each keyword, we compute a deletion ratio as
the number of deleted whispers with this keyword over all whis-
pers with this keyword. We rank keywords by deletion ratio, and
examine the top and bottom keywords.
We run this analysis on all 9 million original (not including replies)
whispers in our dataset, 1.7M of which are later deleted. This pro-
duces 2324 keywords ranked by deletion ratio. We list the top and
bottom 50 keywords in Table 4 and classify them manually into
topic categories. Not surprisingly, many deleted whispers violate
Whisper’s stated user policies on sexually explicit messages and
nudity. In contrast, topics related to personal expression, religion,
and politics are least likely to be deleted.
4http://norm.al/2009/04/14/list-of-english-
stop-words
145)
%
(
F
D
P
 100
 80
 60
 40
 20
 0
0
1
2
3
4
5
Delay before whisper deleted (weeks)
 20
 15
 10
 5
)
%
(
F
D
P
 0
0
24 48 72 96 120 144 168
Delay before whisper deleted (hours)
)
%
(
s
r
e
s
u
f
o
F
D
C
 100
 80
 60
 40
 20
 0
i
s
r
e
p
s
h
W
d
e
t
e
e
D
l
 1
 10
 100
 1000
Deleted whispers per user
f
o
#
 100
 80
 60
 40
 20
 0
 20  40  60  80  100
 0
# of Duplicated Whispers
 100
 10
 1
Figure 19: Deletion speed
(coarse-grained).
Figure 20: Deletion speed
(ﬁne-grained).
Figure 21: # of Deleted whis-
pers per user.
Figure 22:
deleted whispers.
Duplicated vs.
Deletion Delay.
Next we analyze the deletion delay of whis-
pers, i.e. how long do whispers stay in the system before they are
deleted? Recall that our reply crawler works once a week, and thus
detects deleted whispers on the granularity of once a week. As
shown in Figure 19, the majority (70%) of deleted whispers are
“deleted” within one week after posting. A small portion (2%) of
whispers have stayed for more than a month before deletion. Since
most whispers lose user attention after one week (Figure 5), we be-
lieve these deletions are not the results of crowdsourcing ﬂagging,
but deleted by Whisper moderators.
To get a more ﬁne grain view of whisper deletions, we perform
a period of frequent crawls on a small set of whispers. On April
14, 2014, we select 200K new whispers from our crawl of the lat-
est whisper stream, and check on (recrawl) these whispers every 3
hours over a period of 7 days. Of the 200K whispers, 32,153 whis-
pers are deleted during our monitoring period (a week). The more
ﬁne-grained distribution of the lifetime (hourly) of these whispers
is shown in Figure 20. We ﬁnd the peak of whisper deletion to
be between 3 and 9 hours after posting, and the vast majority of
deletions happen within 24 hours of posting. This suggests that the
moderation system in Whisper works quickly to ﬂag and remove
offensive whispers. However, it is unclear whether this level of re-
sponsiveness is sufﬁcient, since user page views focus on the most
recent whispers, and moderation after 3 hours is possibly too late
to impact the content most users see.
Characterizing Authors of Deleted Whispers.
Finally, we
take a closer look at the authors of deleted whispers to check for
signs of suspicious behavior. In total, 263K users (25.4%) out of
all users in our dataset have at least one deleted whisper. The dis-
tribution of deleted whispers is highly skewed across these users:
24% of users are responsible for 80% of all deleted whispers. The
worst offender is a user who had 1230 whisper deleted during the
time period of our study, while roughly half of the users only have
a single deletion (Figure 21).
We observed anecdotal evidence of duplicate whispers in the set
of deleted whispers. We ﬁnd that frequently reposted duplicate
whispers are highly likely to be deleted. Among our 263K users
with at least 1 deleted whisper, we ﬁnd 25K users have posted du-
plicate whispers. In Figure 22, we plot each user’s number of dupli-
cated whispers versus the number of deleted whispers. We observe
a clear clustering of users around the straight line of y = x. This
indicates that when users post many duplicated whispers, there’s a
higher chance that most or all duplicated whispers are deleted.
We also observe that authors of deleted whispers change their
nicknames more often than the average user. Figure 23 shows the
distribution of total number of nicknames used by each user. We
categorize users based on how many deletions they have, and also
include a baseline of users with 0 deletions. We ﬁnd users with
no deletion rarely change their nicknames, if ever, but nickname
changes occur far more frequently for users with many deleted
whispers. We speculate that perhaps users change their nickname
to avoid being ﬂagged or blacklisted. Since users cannot see their
own GUID when using the app, they may assume the system iden-
tiﬁes them using only their nickname.
7. TRACKING WHISPER USERS
In the ﬁnal component of our Whisper study, we take a close
look at a vulnerability that exposes detailed location of Whisper
authors to the system. In practical terms, this attack allows a Whis-
per user to accurately track (or potential stalk) another Whisper
user through whispers they’ve written, by writing simple scripts
that query Whisper servers. This attack demonstrates the inherent
risks to user privacy in mobile applications, even for apps that tar-
get user anonymity as a core goal. Note that we met the Whisper
team in person and informed them of this attack. They are sup-
portive of this work, and have already taken steps to remove this
vulnerability.
In this section, we describe details of this location tracking at-
tack. The attack makes use of Whisper’s “nearby” function, which
returns a list of whispers posted nearby, attaching a “distance” ﬁeld
to each whisper. The attack generates numerous “nearby” queries
from different vantage points, and uses statistical analysis to reverse
engineer the whisper author’s location. We validate the efﬁcacy of
this attack through real-world experiments.
7.1 Pinpointing User Locations
We start by describing the high-levels of the attack: when a user
(i.e. the victim) posts a new whisper, he exposes his location to the
Whisper server. An attacker in an nearby area can query the nearby
list to get their “distance” to the whisper author. The methodology
is simple: the attacker can move to different (nearby) locations and
query the nearby list for the distance to the victim. Using multi-
ple distance measurements, the attacker can triangulate the whis-
per author’s location. The fact that Whisper does not authenticate
location in its queries makes this easier, an attacker can issue nu-
merous distance queries from different locations all while sitting in
the comfort of her living room.
With a bit more effort, an attacker can even track the victim’s
movement over time, by triangulating his location every time he
posts a whisper. In practice, this means the attacker can physically
go and stalk the victim. While the effective error is roughly 0.2
miles (details below), it is more than sufﬁcient to infer the victim’s
movement to speciﬁc points of interest. Considering most Whisper
users are young adults or teenagers [4], this attack can lead to severe
consequences.
Distance Granularity and Errors.
Implementing this attack
is nontrivial. Whisper’s design team has always been aware of lo-
cation tracking risks to its users, and built in basic defense mech-
anisms into the current system. First, they apply a distance offset
to every whisper, so the location stored on their servers is always
146>10 Name
6-10 Name
2-5 Name
1 Name
)
%
(
s
r
e
s
U
f
o
n
o
i
t
c
a
r
F
 100
 80
 60
 40
 20
 0
0
1
(1,10]
>10
Number of Deletions of User
N
A4
A5
A3
)
e
l
i
m
(
A6
W
Attacker A
A2
E
X
A1
Victim B 
A7
A8
S
i
e
c
n
a
t
s
D
d
e
r
u
s
a
e
M
100 Requests
50 Requests
25 Requests
 25
 20
 15
 10
 5
1
5
10
15
20
25
Ground-Truth Distance to Target (mile)
Figure 23: User’s number of deletions vs.
number of nicknames.
Figure 24: Estimating the distance and di-
rection to the victim.
Figure 25: True distance vs. measured av-
erage distance (>1 mile).
)
e
l
i
m
(
i
e
c
n
a
t
s
D
d
e
r
u
s
a
e
M
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
100 Requests
50 Requests
25 Requests
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
Ground-Truth Distance to Target (mile)
)
e
l
i
m
(