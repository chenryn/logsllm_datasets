### 13.3 拦截、监听和劫持数据

#### 13.3.1 USB接口

USB是最常见的接口之一，几乎所有的移动设备和嵌入式设备都配备了USB接口。所有Android设备都有一个对外暴露的USB接口。尽管USB接口无处不在，但其协议却相当复杂。为了简化讨论，本节仅介绍高层部分协议。

对于希望深入了解USB协议的读者，Jan Axelson的《USB Complete》是一本非常有价值的参考书。即使不打算深入研究整个协议，该书的前几章也提供了关于USB传输模式、版本和速度等方面的简明概述。需要注意的是，虽然我们通常将USB视为点对点通信方式，但它实际上具有网络功能，允许多个设备通过同一条总线与主机进行通信。

在实际操作中，可以使用多种工具来观察和分析USB流量。例如，Total Phase公司生产的各种USB调试和协议分析设备在市场上享有盛誉。Total Phase不仅制造了针对SPI、CAN、I²C等协议的线缆协议分析仪，还提供了一系列不同价位的USB协议分析仪。这些设备均支持名为Total Phase Data Center的软件套件，主要区别在于价格及支持的USB总线速度。高端型号能够完整监控USB 3.0设备，中端型号适用于USB 2.0，而最便宜的型号则只能监控USB 1.0。

从抽象角度看，USB规范将设备分为两类：USB主机（如台式机或笔记本电脑）和USB设备（如U盘、外接硬盘或手机）。Total Phase的分析仪位于这两者之间，被动地监听它们之间的通信。Total Phase Data Center软件通过USB线控制分析仪，并提供了类似于Wireshark的功能，用于记录、查看和分析协议会话。此外，它还提供了一组API接口，允许用户直接与设备或软件交互，执行捕包、接收回调或触发操作，并解析和操作捕获的数据。

除了基本功能外，Data Center套件还包括许多其他实用特性，如在数据流上添加注释、在线参考帮助以及可视化分析工具BlockView。然而，如果需要主动与USB设备交互，比如重放流量或注入数据包，则需要其他工具。

##### 作为USB主机与USB设备交互

在这种情况下，可以通过编写基于libusb库的代码来实现。libusb是一个开源库，允许开发者从USB主机的角度进行USB通信。Python和Ruby等语言为libusb提供了封装，使得开发过程更加简便。互联网上有许多使用PyUSB或其他高级语言与USB设备通信的例子，包括Xbox Kinect、键盘和鼠标等HID设备。

##### 作为USB设备与USB主机交互

相反，如果希望作为USB设备与主机交互，情况会复杂得多。这是因为USB控制器通常被设计为固定角色（主机或设备），无法轻易更改。因此，需要一些中间层硬件的帮助。Facedancer是这样一个开源硬件项目，它使MSP430处理器能够以USB设备的身份接受来自一个USB主机的数据，然后将其转发给另一个USB主机。Facedancer包含了许多可以直接使用的示例代码，如模拟HID键盘或外接存储器。目前，INT3.CC网站已经开始销售完全组装好的Facedancer 2.1版。

除此之外，还有其他一些设备可用于低层次USB开发，如SuperMUTT，这是一种由VIA Labs和微软合作开发的工具，能够模拟总线上的任何设备流量，受到USB开发者的青睐。

### 13.3.2 I²C、SPI和UART串行端口

I²C和SPI主要用于电路内部不同集成电路和组件之间的通信，而UART则常用于向用户提供交互式接口或调试接口，或者连接较大的外设（如调制解调器）。

#### I²C、SPI和UART探针

要窃听这些总线上的流量或注入数据，可以使用逻辑分析仪或专用监测工具。例如，Saleae逻辑分析仪具有智能猜测协议类型的软件滤波器，而Total Phase的Beagle I²C是一种专门用于监测和分析I²C和SPI数据的低成本USB设备。与Saleae相比，Total Phase Data Center更适合进行详细的协议分析。

#### 与I²C、SPI和UART设备交互

Bus Pirate是一种成本低廉且易于使用的工具，适用于与I²C、SPI和UART设备进行交互。它是一个起源于Hack-A-Day网站的业余爱好项目，现已广泛流行。Bus Pirate通过USB线连接到计算机，并提供了一个命令行界面，可通过终端模拟程序访问。以下是使用Bus Pirate时的部分命令帮助信息：

```
HiZ>?
General
Protocol interaction
This help
(0)
Converts X/reverse X
List current :
x|/x=
(×)
Macro
1
Start
X
Reset
stop
Jump to bootloader
Delay 1 us/ms
Start
vith read
a/A/9
AUXPIN (1oW/HI/READ)
*abc'
Stop
123
Send string
AUX assignment (aux/Cs)
Set baudrate
c/C
0x123
d/D
Measure ADC (once/CoNr.)
0b110
Send value
Measure frequency
Read
S/B
```

这些工具和方法可以帮助研究人员在嵌入式设备的通信链路中观察和操控数据，从而发现并利用潜在的安全漏洞。