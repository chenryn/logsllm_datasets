fundamentally limits the data rate of OOK-based system [28].
3 SYSTEM DESIGN
The design of PassiveVLC overlaps with RetroVLC in its system
architecture (§3.1) and circuit implementation (§3.2), but optimizes
the software (de)modulation part of the retroreflecting link in terms
of improving data rate (§4). In this section, we stay in the high level
to recap the key components of RetroVLC/PassiveVLC.
3.1 Overview
The basic design of PassiveVLC is to backscatter the incoming light
using a retroreflective fabric and to modulate it with an LCD shut-
ter, as shown in Fig. 3. The overall system consists of a reader
(ViReader) residing in the lighting infrastructure and tags (ViTags)
integrated in mobile/IoT devices. A ViTag contains a light sensor,
a retroreflective fabric, a transparent LCD shutter, solar panels
and the control circuits, while a ViReader is a typical VLC device
similar to [25, 29, 30, 43]. At a high level as shown in Fig. 4, Pas-
siveVLC works as follows. For the downlink, the LED in ViReader
switches on and off at a high frequency (e.g. 1 MHz, to avoid a
human perceptible flickering), turning the illuminating light into a
communication carrier. Information bits are carried using a certain
modulation method and the light signals are picked up by the light
sensor on ViTag and decoded therein. For the uplink, the same
carrier is leveraged via reflection. The ViTag uses retroreflector to
retrospectively reflect the light from lighting source and further
carry information bits by remodulating this retroreflecting link – a
solar-powered MCU electronically controls the state (pass/block)
of the LCD shutter atop to realize OOK-trend based retrocommuni-
cation. The modulated reflected light carrier is then picked up by a
photodiode on the ViReader and further demodulated and decoded.
Figure 4: PassiveVLC system block diagram.
RetroreflectorReflected light rayEmitted light raySolarpanelLCDShutterRetroreflectorPhotodiodeLEDPowerAmplifierCode-assisted demodulationSignal ConditionCircuitTransmit LogicCortex M4 MCUPower Amplifier and Demodulating CircuitTrend-based ModulationLCD Driver CircuitReceive LogicMSP430 MCUDownlinkUplinkViReaderViTagRetro-reflectorLCDPaper Session IV: Aurora BorealisMobiCom’17, October 16-20, 2017, Snowbird, UT, USA182Figure 5: PassiveVLC circuit diagram: For ViReader-Tx, the information bits are first encoded by MCU(cid:32)1 into (clock period)
coded signal while the carrier is generated by the oscillator(cid:32)2 . The signal is then modulated by an amplifier(cid:32)3 and handed
over to the power amplifier(cid:32)4 to drive the LED(cid:32)5 for transmitting the signal using visible light as the medium. For ViTag-Rx,
the incoming light is first captured by the photodiode(cid:32)6 and turned in to electrical signal, which is then amplified and filtered
by the tuned amplifier (for bandpass filtering)(cid:32)7 . The demodulator(cid:32)8 extracts the baseband signal from the carrier. Then the
signal is digitalized by a comparator(cid:32)9 before it is fed into the MCU(cid:32)10 . For ViTag-Tx, the MCU(cid:32)10 performs (Miller) encoding
and controls the LCD driver(cid:32)11 to toggle the LCD(cid:32)12 for modulating the reflected light. On the ViReader-Rx, the photodiode
(cid:32)13 captures the signal from the retroreflecting link, and the photocurrent is then amplified by preamplifier(cid:32)14 to prepare for
later transmission on wires (cid:32)15 . After that the signal is fed to the internal differential amplifier (cid:32)16 through a pair of wires,
such design suppresses the noises incurred by the long wires. The resulting signal is further demodulated(cid:32)17 from the carrier
and amplified before being into the ADC of MCU for code-assisted demodulation and decoding(cid:32)1 .
3.2 Circuit Design
The circuit design of PassiveVLC is similar to RetroVLC [28] except
for a minor change: we replaced the RC oscillator with a crystal
oscillator. This change incurs a small energy consumption over-
head on MCU from 23 µW to 26 µW , but significantly reduces
system’s clock drift, and thus improves link reliability, especially
under temperature changes. Fig. 5 provides a detailed description
of the overall operational flow of PassiveVLC and the functionality
of each module in circuit level.
4 RETROREFLECTING LINK DESIGN
The key to PassiveVLC’s design is the retroreflecting link. While the
current circuit design addresses the challenges rooted from detect-
ing the extremely weak and noisy reflected signal as well as the low
power (sub- mW ) requirement [28], one of the key contribution in
this paper is the trend-based modulation and code-assisted demod-
ulation design for optimizing the link speed of the retroreflecting
link. In the rest of this section, we will elaborate the design of our
modulation and coding schemes as well as their interaction.
4.1 Trend-based Modulation
The nonlinearity nature of the LCD shutter makes OOK the most
feasible solution when it is used as the modulator [41]. In other
words, LCD is turned on/off completely when in use [28, 41]. The
potential inefficiency of this solution is that we will have to wait
until the LCD completely change its on/off state before modulating
the next symbol. Therefore the minimum interval for modulation
or modulation bandwidth is highly limited by the response time of
the LCD Tr – time needed for the LCD to switch between on and off
To boost bandwidth, we observe that as soon as the LCD is
charged or discharged, even if incompletely, the level of its trans-
parency will change over short time. The resulting trend of the
voltage change on the receiver side already conveys the informa-
tion. As shown in Fig. 6, a Ts = 1 ms period after voltage change is
long enough to produce a distinguishable decreasing trend on the
receiver side, which means that 1 ms can be used as a minimum
modulation interval to deliver 1 kbps data rate theoretically and 4x
larger bandwidth in our case.
Specifically, while modulating a symbol ‘0’, we discharge the LCD
to increase its transparency level, resulting in an increase trend in
the received waveform at ViReader-Rx. Similarly while modulating
Figure 6: LCD signal in response to applied voltage.
states when we change the voltage applied to it. According to the
measurements in our ViTag, it takes about Tr = 4 ms to completely
change the state in response to the voltage change.
ViReaderViTagCortex M4 based MCUPower AmplifierPreamplifier Tuned Amplifier1MHzCode-assisted DemodulatorEncode and Transmit LogicGain ControlADCProgrammable-GainDifferential AmplifierBaseband AmplifierPrecision RectifierDemodulatorDemodulatorComparatorVoltage Boost  CircuitLCD-+MCU (MSP430)LCD DriverTuned AmplifierPower ManagerDecoder Transmit and Encode LogicDownlinkUplink7171423516141211109813615Differential Signal Wires 0 0.2 0.4 0.6 0.8 1-1 0 1 2 3 4 5 0 2 4 6 8 10Ts = 1 msTr = 4 msSignal WaveformApplied voltage (V)Time (ms)Received signalApplied voltagePaper Session IV: Aurora BorealisMobiCom’17, October 16-20, 2017, Snowbird, UT, USA183a symbol ‘1’, we charge the LCD to decrease its transparency level,
which leads to a decrease trend in the received waveform.
However, such trend-based modulation scheme has its weakness
– it does not allow long consecutive ‘0’ or ‘1’ sequence since such
sequence will generate a DC component in the received signal after
the LCD is turned on or off completely, which is hard to catch
by conventional amplifiers and vulnerable to ambient light shifts.
Therefore, the design or choice of the coding scheme is critical in
solving this issue.
4.2 Coding
As discussed earlier (§4.1), the coding design needs to accommodate
the situation when a long stream of ones or zeros are to be sent.
In RetroVLC [28], the use of Manchester coding solve this issue
because it ensures that no more than 2 consecutive symbols of same
type appear in the encoded symbol sequence. However, it consume
up to approximately twice the bandwidth of the original signal
under the same minimum modulation interval. Therefore, we utilize
Miller encoding, which maintains the property of accommodating
long stream of ones or zeros, but without compromising the data
rate. As shown in Fig. 7: A bit ‘0’ is modulated to two identical
symbols. These symbols are of the same type to the previous symbol
if the previous bit is ‘1’, otherwise a different type is used for these
two symbols. A bit ‘1’ is modulated to two different symbols. The
first one is of the same type to the previous symbol.
of a symbol is affected by the previous ones.
4.3 Code-assisted Demodulation
Demodulation is the process to recover the symbol sequence from
the received and sampled waveform. In most cases, demodulation
is straightforward as each symbol can be demodulated indepen-
dently. However, in our case, we use a specially designed modula-
tion scheme, which makes demodulation more complicated:
• Symbols are not independent with each other. The waveform
• The waveform of a symbol is also related to the state of the
LCD. For example, modulating an symbol ‘1’ to an LCD in the
fully off state will not cause the voltage on the receiver side to
drop any more.
• Due to the coding scheme, not all possible symbol sequence is
valid. We should take advantage of this property, producing only
valid symbol sequence as output of the demodulation algorithm.
Conventional demodulation methods demodulate each symbol
independently and thus fail to cooperate with trend-based mod-
ulation we use here, especially at high data rate when the trend
is short and it is relatively challenging for symbol recognition. In
contrast, by embracing these properties above, we aim to develop a
novel demodulation design for our system to boost the link speed.
4.3.1 Demodulation at Sequence-Level. The straightforward way
to independently demodulate each symbol has weaknesses:
• It can’t take advantage of the dependency between symbols. As
an example, the 5th symbol in Fig. 8 is more likely to be ‘0’
when treated independently. But it’s actually an ’1’ which can
be easily identified when we take the previous and the next
symbol into consideration.
• It can’t guarantee a valid output sequence. As an example, the fact
that at most 4 consecutive symbol ‘0’ can occur in a valid symbol
sequence could have saved us from regarding the 5th symbol in
Fig. 8 as ‘0’. By demodulating each symbol independently, we
lost the last chance to do so.
Figure 7: Example of Manchester coding and Miller coding.
Miller encoding has a property that only 2, 3 or 4 consecutive
symbols of same type will appear in the encoded symbol sequence,
which, on the one hand solves the problem of consecutive same-type
symbols, and on the other hand, requires no smaller modulation
interval compared to directly sending the information bits (though
double the symbol rate).
To make the property mentioned above still holds for the very
first symbol, a meaningless symbol ‘0’ is padded before the symbol
sequence, and the first symbol of the first bit is set to ‘0’. Besides,
a special waveform is transmitted before the symbol sequence as
preamble, helping to determine the precise timing of the symbol
sequence as well as the signal strength.
The decoder for Miller encoding is simple as follows. We first
drop the very first padding symbol. In the rest, every 2 symbols
represent a bit – two identical symbols produce a ‘0’ in the bit
sequence, while two different symbols produce an ‘1’.
Figure 8: Waveform that fails conventional methods.
In order to overcome these weaknesses, we need to demodulate at
sequence level instead of individual symbols. Inspired by Dynamic
Time Warping (DTW) [10], we can formulate the demodulation
problem as an optimization problem for multistage decision pro-
cesses rather than several independent decision problems, to take
 0 1 Baseband signal 0 1 Manchester code 0 1 0 1 2 3 4 5 6Line codeTime (ms)Miller code 0 1 2 3 4 0 1 2 3’0’’0’’0’’0’’1’’1’Signal waveformTime (ms)Paper Session IV: Aurora BorealisMobiCom’17, October 16-20, 2017, Snowbird, UT, USA184symbol dependencies into consideration as well as the restrictions
exerted by sequence validity.
Here, we demodulate by “optimally” (§4.3.2) decomposing the
received waveform into segments where each segment represents
consecutive symbols of same type. According to the properties
mentioned in §4.2, some restrictions apply: Each segment should
consists of 2, 3 or 4 symbols; Segment of 4 symbols can only occur
after even number of symbols in the symbol sequence. In addition,
minor error in timing should be to tolerated in case of possible
clock skew and clock drift. That is, we should allow segments to
overlap or separate a little bit in our decomposition.
Fig. 9 gives an example of how it works, where X denotes a possi-
ble waveform of consecutive symbol ‘1’, Y denotes the correspond-
ing reference waveform, aX + b denotes the normalized waveform
of X. In this case, a = 3.4240, b = −4.2567, Sim (X, Y) = 1.0786.
4.3.2 Optimality of Decomposition. In §4.3.1 we formulate the
demodulation problem as an optimization problem. But the defi-
nition of optimality remains unclear. To define optimality, a quan-
titative index for how likely that a decomposition is correct for a
certain waveform is critical. Therefore we proposed Match Score.
The Match Score for a certain decomposition is defined as the
sum of all its segments’ Match Score. The Match Score of a segment
is defined as the similarity of its waveform to the corresponding
reference waveform.
But how to quantify the similarity of two given waveforms X
and Y, both of the length n? In some existing systems like CDMA,
correlation coefficient corr(X, Y) is used. But this is not suitable
for us since we need to sum up the Match Score of segments, while
the sum of correlation coefficients is meaningless, especially when
segments are of different length. Therefore, we decide to develop a
new ‘addable’ index.
An intuitive idea is to use the following formula:
N aiveSim (X, Y) =
(X[i] − Y[i])2
i =1
However, this formula is not practical because: It does not take
into account the fact that the amplitude and mean of the waveform
may vary from symbol to symbol. Therefore, the following formula,
in which a scale factor a and an offset b are applied to adaptively
adjust the amplitude and mean of the waveform, is used to address
this problem. In other words, we normalize the two waveforms in
a way that minimize the Match Score.
n(cid:88)
Sim (X, Y) = min
a≥amin,b
= min
a≥amin,b
n(cid:88)
i =1
N aiveSim(aX + b, Y)
(aX[i] + b − Y[i])2
min
pi,si,m
s. t.
where amin denotes the minimum scale allowed to prevent the
waveform from degrading or flipping, which is a positive number
usually set proportionally to the scale we obtained from preamble.
As we calculate, the minimum value of the formula can be obtained
when
a = max
(cid:32)
n(cid:80) X[i]Y[i] −(cid:80) X[i](cid:80) Y[i]
n(cid:80) X[i]2 − ((cid:80) X[i])2
Y[i] −(cid:88)
(cid:16)(cid:88)
(cid:17)
aX[i]
b = 1
n
(cid:33)
Figure 9: An example illustrating the effect of a and b.
Now we can formally define the Match Score of a segment as
the Sim value of its waveform and the corresponding reference
waveform. More specifically, let lsym be the waveform length of a
single symbol, nseg be the number of symbols in the segment, W be
the waveform of the segment, R(t, nseg) be the reference waveform
of nseg consecutive symbol of type t (t = 0, 1) , then the Match Score
of the segment being nseg consecutive symbols of type t is defined
as:
MatchScore (W, t, nseg) = Sim(W, R(t, nseg))
Note that the LCD may reach a fully on/off state, producing a
level part (approximately) in the end of the waveform. These level
parts should not be taken account in the calculation of Match Score.
4.3.3 Problem Formalization. Now let’s formally define the opti-
mization problem for demodulation. Let S be the received waveform,
n be the number of symbols to demodulate, lsym be the waveform