Takeaway. The Fetch Standard’s credentials flag is the reason for
redundant connections of cause CRED. Disabling it reduces redun-
dancy by 25 %. As only a few parties have to adapt here, a reduction is
possible. However, a thorough privacy analysis of Fetch should be con-
ducted, especially given that its added value is already discussed [22].
6 CONCLUSION
In this paper, we study when HTTP/2 Connection Reuse is ineffec-
tive and under which circumstances Chromium opens redundant
connections, potentially harming performance.
We find that 36 % - 72 % of the 6.24M HTTP Archive and 78 % of
the Alexa Top 100k websites open redundant connections. These
can be traced back to tracking and advertisements embedding fur-
ther domains with unsynchronized load-balancing, the Fetch Stan-
dard refusing reuse due to (questionable) privacy concerns, and
domain sharding with disjunct certificates.
Redundant connections are thus no history and HTTP/3 using
the same mechanism will also encounter them. However, we see
easy steps for mitigation due to the centricity of the leading causes:
Adaption of the Fetch Standard and load-balancing by advertisers
need small changes by few parties but can meet a large audience.
On the other hand, the merging of certificates for domain sharding
includes many parties with relatively small footprints each and
will probably take much longer as many operators need to be edu-
cated. For future work, we see it as interesting to study the exact
performance impact of our findings.
Sharding and HTTP/2 Connection Reuse Revisited:
Why Are There Still Redundant Connections?
IMC ’21, November 2–4, 2021, Virtual Event, USA
ACKNOWLEDGMENTS
This work has been funded by the German Research Foundation
DFG under Grant No. WE 2935/20-1 (LEGATO). We thank the
anonymous reviewers and our shepherd Mattijs Jonker for their
valuable comments. We further thank the network operators at
RWTH Aachen University, especially Jens Hektor and Bernd Kohler.
REFERENCES
[1] Waqar Aqeel, Balakrishnan Chandrasekaran, Anja Feldmann, and Bruce M.
Maggs. 2020. On Landing and Internal Web Pages: The Strange Case of Jekyll
and Hyde in Web Performance Measurement. In ACM Internet Measurement
Conference (IMC ’20). https://doi.org/10.1145/3419394.3423626
[2] Mike Belshe, Roberto Peon, and Martin Thomson. 2015. Hypertext Transfer
Protocol Version 2 (HTTP/2). RFC 7540. RFC Editor. http://www.rfc-editor.org/r
fc/rfc7540.txt
[3] Mike Bishop. 2021. Hypertext Transfer Protocol Version 3 (HTTP/3). Internet-Draft
draft-ietf-quic-http-34. IETF Secretariat. https://www.ietf.org/archive/id/draft-
ietf-quic-http-34.txt
[4] Enrico Bocchi, Luca De Cicco, Marco Mellia, and Dario Rossi. 2017. The Web,
the Users, and the MOS: Influence of HTTP/2 on User Experience. In Passive and
Active Measurement (PAM ’17). https://doi.org/10.1007/978-3-319-54328-4_4
[5] Matt Calder, Ashley Flavel, Ethan Katz-Bassett, Ratul Mahajan, and Jitendra
Padhye. 2015. Analyzing the Performance of an Anycast CDN. In Proceedings of
the 2015 Internet Measurement Conference (Tokyo, Japan) (IMC ’15). Association
for Computing Machinery, New York, NY, USA, 531–537. https://doi.org/10.114
5/2815675.2815717
[6] C. Contavalli, W. van der Gaast, D. Lawrence, and W. Kumari. 2016. Client Subnet
in DNS Queries. RFC 7871. RFC Editor.
[7] Electronic Frontier Foundation. 2021. Certbot. https://certbot.eff.org/. (Accessed
on 29/09/2021).
[8] Roy T. Fielding and Julian Reschke. 2014. Hypertext Transfer Protocol (HTTP/1.1):
Message Syntax and Routing. RFC 7230. RFC Editor. http://www.rfc-editor.org/r
fc/rfc7230.txt
[9] Utkarsh Goel, Moritz Steiner, Mike P. Wittie, Stephen Ludin, and Martin Flack.
2017. Domain-Sharding for Faster HTTP/2 in Lossy Cellular Networks. Technical
Report. https://arxiv.org/abs/1707.05836.
[10] Ilya Grigorik. 2013. High Performance Browser Networking: What every web
developer should know about networking and web performance. O’Reilly Media,
Inc. https://hpbn.co/.
[11] HTTP Archive. 2020.
State of
https://httparchive.org/reports/state-of-the-web#reqTotal.
17/05/2021).
the Web - Total Requests per page.
(Archived on
[12] Paul Jensen. 2017. Google Groups Discussion PI:EMAIL: Intent to
implement: Socket Tagging. https://groups.google.com/a/chromium.org/g/net-
dev/c/KL1TC-O51fM/m/0b26cspCAwAJ. (Archived on 22/05/2021).
[13] Jawad Manzoor, Idilio Drago, and Ramin Sadre. 2016. The curious case of parallel
connections in HTTP/2. In Conference on Network and Service Management (CNSM
’16). https://doi.org/10.1109/CNSM.2016.7818414
[14] Jawad Manzoor, Ramin Sadre, Idilio Drago, and Llorenç Cerdà-Alabern. 2018.
Is There a Case for Parallel Connections with Modern Web Protocols?. In IFIP
Networking Conference and Workshops (NETWORKING ’18). https://doi.org/10.2
3919/IFIPNetworking.2018.8696647
[15] Robin Marx, Peter Quax, Axel Faes, and Wim Lamotte. 2017. Concatenation,
Embedding and Sharding: Do HTTP/1 Performance Best Practices Make Sense in
HTTP/2?. In Conference on Web Information Systems and Technologies (WEBIST
’17). https://doi.org/10.5220/0006364101600173
[16] Pat Meenan, Rick Viscomi, Paul Calvano, and Barry Pollard. 2021. HTTP Archive.
https://httparchive.org/. (Archived on 26/05/2021).
[17] Mark Nottingham. 2017.
Issue 697333: Support ORIGIN frame.
https://bugs.chromium.org/p/chromium/issues/detail?id=697333. (Accessed on
25/05/2021).
[18] Mark Nottingham and Erik Nygren. 2018. The ORIGIN HTTP/2 Frame. RFC 8336.
RFC Editor. https://www.rfc-editor.org/rfc/rfc8336.txt
[19] Eric Roman and Matt Menke. 2018. NetLog: Chrome’s network logging
system. https://www.chromium.org/developers/design-documents/network-
stack/netlog. (Archived on 22/05/2021).
[20] Sitespeed.io. 2021. Browsertime - Your browser, your page, your scripts!
https://github.com/sitespeedio/browsertime. (Archived on 26/05/2021).
[21] StatCounter.
2021.
Browser Market
Share Worldwide.
https://gs.statcounter.com/browser-market-share. (Archived on 22/05/2021).
[22] Anne van Kesteren. 2016. Allow connection reuse for request without credentials
when TLS client auth is not in use. https://github.com/whatwg/fetch/issues/341.
(Archived on 22/05/2021).
[23] Anne van Kesteren. 2017. Allow some sharing of connections with different
anonymous attributes. https://bugzilla.mozilla.org/show_bug.cgi?id=1363284.
(Archived on 22/05/2021).
[24] Anne van Kesteren. 2021. Fetch Standard. https://fetch.spec.whatwg.org/.
(Archived on 22/05/2021).
[25] Matteo Varvello, Kyle Schomp, David Naylor, Jeremy Blackburn, Alessandro
Finamore, and Konstantina Papagiannaki. 2016. Is the Web HTTP/2 Yet?. In
Passive and Active Measurement (PAM ’16). https://doi.org/10.1007/978-3-319-
30505-9_17
[26] Xiao Sophia Wang, Aruna Balasubramanian, Arvind Krishnamurthy, and David
Wetherall. 2014. How Speedy is SPDY?. In USENIX Symposium on Networked
Systems Design and Implementation (NSDI ’14). https://www.usenix.org/confere
nce/nsdi14/technical-sessions/wang
[27] Maarten Wijnants, Robin Marx, Peter Quax, and Wim Lamotte. 2018. HTTP/2
Prioritization and Its Impact on Web Performance. In World Wide Web Conference
(WWW ’18). https://doi.org/10.1145/3178876.3186181
[28] Torsten Zimmermann, Jan Rüth, Benedikt Wolters, and Oliver Hohlfeld. 2017.
How HTTP/2 Pushes the Web: An Empirical Study of HTTP/2 Server Push. In
IFIP Networking Conference and Workshops (NETWORKING ’17). https://doi.org/
10.23919/IFIPNetworking.2017.8264830
298
IMC ’21, November 2–4, 2021, Virtual Event, USA
Alexa 100k
Certificate Issuer
HTTP Archive
↑ Conns. Domains
1 28.14 M 259.50 k
2 12.12 M 326.24 k
6.44 M 698.13 k
3
4.74 M 256.03 k
4
4.38 M 1.89 M
5
3.59 M 434.18 k
6
7
1.52 M 115.13 k
8 814.81 k 134.92 k
178
9 468.86 k
9.92 k
10 250.47 k
11 239.44 k
3.03 k
Google Trust Services
DigiCert Inc
Cloudflare, Inc.
Amazon
Let’s Encrypt
Sectigo Limited
GlobalSign nv-sa
GoDaddy.com, Inc.
Yandex LLC
COMODO CA Limited
Microsoft Corporation
Table 5: Top 10 certificate issuers by Issuer Org. for all con-
nections and their original / SNI domain.
↑ Conns. Domains
11.45 k
1 844.42 k
2 291.77 k
21.98 k
31.57 k
3 136.58 k
18.20 k
4 135.71 k
28.33 k
5 70.64 k
10.62 k
6 64.63 k
7 47.08 k
6.01 k
4.07 k
8 20.30 k
49
9.97 k
9
352
4.22 k
11
10
8.64 k
230
A FURTHER RESULTS
In the following, we describe further details about our datasets
complementing our results. Here, we look at the total share of
issuers for all connections, which ASNs have been observed being
affected, the overlap between both datasets and how load-balancing
influences the DNS resolving process in greater depth.
A.1 Certificate Issuer Share
We showed that in the ecosystem of certificate issuers, mainly
Google Trust Services and Let’s Encrypt are involved for redun-
dant connections of cause CERT. These connections have to be
opened due to non-overlapping certificate subject names. In the
following, we present the shares of the top 10 certificate issuers
over all opened connections in Table 5 to allow these results to
be set into perspective. We see that Google Trust Services is the
Issuer which occurs for the most connections, while Let’s Encrypt
is less often seen over all connections, although it is also in the
top-2 for the redundant connections of class CERT. Domain-wise,
we can see that Let’s Encrypt leads, followed by Cloudflare in the
HTTP Archive and vice versa for our measurements. All in all, we
can see that both leaders, Let’s Encrypt w.r.t. domains and Google
w.r.t. connections, reflect in our measurements w.r.t. to their market
share of overall connections and domains.
A.2 ASs Affected by Cause IP
Similarly, we showed which domains have been involved in cause
IP (cf. 5.3.1), but not which content providers were responsible for
providing these resources. Hence, Table 6 shows the top 10 ASs
which were involved in redundant connections of type IP. Unsur-
prisingly, the Google and the Facebook AS show up, which we
identified as being mainly responsible for redundant connections
of type IP. However, these parties operate their own CDNs, which
mostly also provide their content. Contrasting, Amazon shows
up in the AS list, but not as an involved party w.r.t. the domains,
hinting at its cloud instances or Cloudfront CDN being responsi-
ble. Indeed, Hotjar.com (occurs as place 12 for the HTTP Archive
measurements / as place 16 for our measurements of the involved
domains for the IP case, cf. Table 12) uses the Cloudfront CDN,
AS
GOOGLE
AMAZON-02
FACEBOOK
AUTOMATTIC
CLOUDFLARENET
FASTLY
AMAZON-AES
EDGECAST
AKAMAI-ASN1
AKAMAI-AS
HTTP Archive
↑ Conns. Domains
8.04 M 143.49 k
1
2
1.74 M 46.71 k
360
3
1.63 M
4 402.71 k
3.36 k
14.22 k
5 307.64 k
6 228.12 k
1.62 k
10.71 k
7 220.43 k
997
8 182.22 k
2.30 k
9 144.52 k
10 130.77 k
2.75 k
Sander et al.
Alexa 100k
↑ Conns. Domains
7.14 k
1 315.57 k
2 50.67 k
7.51 k
81
3 32.04 k
58
3.38 k
10
3.40 k
9.18 k
4
1.00 k
3.50 k
9
5
7.22 k
886
201
4.33 k
6
773
3.53 k
8
7
3.61 k
736
Table 6: Top 10 ASNs for connections of cause IP.
e
s
u
a
C
I
t
r
e
P C
CERT = ≠
IP ≠ =
=
Redund.
Total
Conns.
HAR Overlap Endless
Sites
4.03 k
23.85 k
16.84 k
25.34 k
29.53 k
CRED =
8.86 k
175.05 k
51.72 k
218.97 k
608.76 k
Table 7: Occurring causes for the overlap / intersection of the
HTTP Archive and our measurements.
6.63 k
110.64 k
29.61 k
135.33 k
451.71 k
Conns.
Alexa Overlap Endless
Sites
5.06 k
27.06 k
24.00 k
28.63 k
29.53 k
which distributes static.hotjar.com and script.hotjar.com to differ-
ent IPs. Amazon adapting its DNS load-balancing could help here
to support connection reuse.
The other CDNs and providers occur in much lower quantities.
AUTOMATTIC can be related to the Wordpress tools from wp.com,
hence its reduced domain count in contrast to Cloudflare. Never-
theless, both account for around and more than 20 times fewer
connections than Google, respectively.
A.3 Overlap of Results Between Both Datasets
Throughout our paper, we compare the results between the HTTP
Archive and our Alexa list, which diverge in visited domains. Hence,
we here present the overlap of both datasets, i.e., we intersect the
datasets w.r.t. the visited URLs to show how both measurements
map to each other. The general results are shown in Table 7 for our
overlapping 29.53 k sites. As can be seen, all numbers for the Alexa
Overlap dataset are larger than for the HAR dataset as we had to
filter 490.32 k requests of the total 2.71 M HTTP/2 requests. Our
own dataset consists of 2.98 M HTTP/2 requests, of which none
had to be filtered. Table 8 shows the top 5 origins for the IP cause
for the overlap. It matches the top origins in Table 2 surprisingly
well. However, we can still see a difference in the top origins be-
tween our and the HTTP Archive measurements which cannot be
explained by the filtered requests. Instead, our geolocation seems to
affect Google to redirect us to its German domain. Nevertheless, the
remaining origins differ only slightly in their connection counts. Ta-
ble 9 shows the top certificate issuers between both measurements.
299
Sharding and HTTP/2 Connection Reuse Revisited:
Why Are There Still Redundant Connections?
IMC ’21, November 2–4, 2021, Virtual Event, USA
3
2
Origin
Conns.
HTTP Archive
↑
1
15.34 k
14.74 k
9.44 k
9.44 k
6.52 k
4.12 k
5.91 k
4.20 k
5.15 k
3.49 k
www.google-analytics.com
prev: www.googletagmanager.com
www.facebook.com
prev: connect.facebook.net
pagead2.googlesyndication.com
prev: www.googletagservices.com
googleads.g.doubleclick.net
prev: pagead2.googlesyndication.com
tpc.googlesyndication.com
prev: pagead2.googlesyndication.com
www.google.de