### Which version of ShardingSphere did you use?
we find java version: java8, full_version=1.8.0_342,
full_path=/home/peilq_sharding/bisheng-jdk1.8.0_342//bin/java  
ShardingSphere-5.2.2-SNAPSHOT  
Commit ID: dirty-753c0cee8ee6fd3db00536da55b64bc5198a3758  
Commit Message: Optimize sqlFederationExecutor init logic when
sqlFederationType modify dynamically (#22209)  
Branch: `753c0ce`  
Build time: 2022-11-19T10:18:41+0800
### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?
ShardingSphere-Proxy
### Expected behavior
In the federation scenario, the view information in zookeeper exists duplicate
name even the view has already dropped.
### Actual behavior
In the federation scenario, the view information in zookeeper exists duplicate
name even the view has already dropped.
### Reason analyze (If you can)
### Steps to reproduce the behavior, such as: SQL to execute, sharding rule
configuration, when exception occur etc.
**`gsql -d test_db -p 11000 -r -h 7.212.123.28 -U sharding -W sharding -r
-a17.ss 2>&1 `**
    -- step1.1：相同表 union 测试；expect：查询结果正确
    create view select_view as select * from t_order where order_id > 2900 union select * from t_order where order_id > 2500 order by order_id ;
    -- 查询视图
    select * from select_view limit 3, 5;
    -- 删除视图
    drop view select_view;
    -- step1.2：相同表 union all测试；expect：查询结果正确
    create view select_view as select * from t_order where order_id > 2900 union all select * from t_order where order_id > 2500 order by order_id ;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step1.3：相同表 union distinct 测试；expect：查询结果正确
    create view select_view as select * from t_order where order_id > 2900 union distinct select * from t_order where order_id > 2500 order by order_id ;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step1.4：相同表 （）union 测试；expect：查询结果正确
    create view select_view as (select * from t_order where order_id > 2900 ) union (select * from t_order where order_id > 2500 order by order_id ) order by 1,2;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step1.5：多个分片表 union 测试；expect：查询结果正确
    create view select_view as select o.order_id, o.user_id from t_order o where o.order_id > 2500 union select i.order_id, i.user_id from t_order_item i where i.order_id > 2500 order by order_id limit 5, 5;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step1.6：分片表、单表 union all 测试；expect：查询结果正确
    create view select_view as select o.user_id from t_order o where o.order_id > 2500 union all select u.user_id from t_user u order by user_id limit 5, 5;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step2.1：相同表 intersect all 测试；expect：查询结果正确
    create view select_view as select * from t_order intersect all select * from t_order order by order_id limit 5, 5;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step2.2：相同表 intersect 测试；expect：查询结果正确
    create view select_view as select * from t_order where order_id > 2000 intersect select * from t_order where order_id > 1500 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step2.3：多个分片表 intersect all 测试；expect：查询结果正确
    create view select_view as select o.order_id, o.user_id from t_order o where o.order_id > 2500 intersect all select i.order_id, i.user_id from t_order_item i where i.order_id > 2400 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step2.4：多个分片表 intersect 测试；expect：查询结果正确
    create view select_view as select o.order_id, o.user_id from t_order o where o.order_id > 2500 intersect select i.order_id, i.user_id from t_order_item i where i.order_id > 2400 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step2.5：多个分片表 多个intersect 测试；expect：查询结果正确
    create view select_view as select o.order_id, o.user_id from t_order o where o.order_id > 2500 intersect select i.order_id, i.user_id from t_order_item i where i.order_id > 2400 intersect select i.order_id, i.user_id from t_order_item i where i.order_id  2500 intersect select u.user_id from t_user u order by user_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step3.1：相同表 except all 测试；expect：查询结果正确
    create view select_view as select * from t_order except all select * from t_order where order_id > 1500  order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step3.2：相同表 except 测试；expect：查询结果正确
    create view select_view as select * from t_order where order_id > 1500 except select * from t_order where order_id > 2000 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step3.3：多个分片表 except all 测试；expect：查询结果正确
    create view select_view as select o.order_id, o.user_id from t_order o where o.order_id > 2500 except all select i.order_id, i.user_id from t_order_item i where i.order_id > 2000 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step3.4：多个分片表 except 测试；expect：查询结果正确
    create view select_view as select o.order_id, o.user_id from t_order o where o.order_id > 2600 except select i.order_id, i.user_id from t_order_item i where i.order_id > 2500 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step3.5：分片表、单表 except all 测试；expect：查询结果正确
    create view select_view as select o.user_id from t_order o where o.order_id > 2500 except all select u.user_id from t_user u order by user_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step3.5：分片表、单表 except 测试；expect：查询结果正确
    create view select_view as select o.user_id from t_order o where o.order_id > 1500 except select u.user_id from t_user u where user_id >5 order by user_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step4.1：相同表 minus all 测试；expect：查询结果正确
    create view select_view as select * from t_order where order_id > 1500 minus all select * from t_order  where order_id > 1600 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step4.2：相同表 minus 测试；expect：查询结果正确
    create view select_view as select * from t_order where order_id > 2000 minus select * from t_order where order_id > 1500 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step4.3：多个分片表 minus all 测试；expect：查询结果正确
    create view select_view as select o.order_id, o.user_id from t_order o where o.order_id > 1500 minus all select i.order_id, i.user_id from t_order_item i where i.order_id > 1500 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step4.4：多个分片表 minus 测试；expect：查询结果正确
    create view select_view as select o.order_id, o.user_id from t_order o where o.order_id > 1500 minus select i.order_id, i.user_id from t_order_item i where i.order_id > 1500 order by order_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;
    -- step4.5：分片表、单表 minus all 测试；expect：查询结果正确
    create view select_view as select o.user_id from t_order o where o.order_id > 2500 minus all select u.user_id from t_user u where u.user_id  2500 minus select u.user_id from t_user u where u.user_id <29  order by user_id;
    -- 查询视图
    select * from select_view;
    -- 删除视图
    drop view select_view;