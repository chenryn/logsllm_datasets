Using `Flask 2.2.2`, it seems that serving static resources leads to a
duplicate `Date` HTTP Header field.
Here is a simple snippet easy to understand and to show how to reproduce:
    from flask import Flask
    app = Flask(__name__, static_url_path='/static')
    @app.route('/', methods=['GET'])
    def index():
        return "Hello World"
    app.run(port=30887)
Let's create a simple file inside `static` directory:
    mkdir static
    echo Hello > style.css
Now let's check HTTP headers:
    maxux@workx0 ~ $ curl -I http://127.0.0.1:30887
    HTTP/1.1 200 OK
    Server: Werkzeug/2.2.2 Python/3.10.8
    Date: Thu, 05 Jan 2023 21:53:31 GMT
    Content-Type: text/html; charset=utf-8
    Content-Length: 11
    Connection: close
All good here.
    maxux@workx0 ~ $ curl -I http://127.0.0.1:30887/static/style.css
    HTTP/1.1 200 OK
    Server: Werkzeug/2.2.2 Python/3.10.8
    Date: Thu, 05 Jan 2023 21:53:53 GMT                <<<<
    Content-Disposition: inline; filename=style.css
    Content-Type: text/css; charset=utf-8
    Content-Length: 6
    Last-Modified: Thu, 05 Jan 2023 21:50:59 GMT
    Cache-Control: no-cache
    ETag: "1672955459.103843-6-1459357711"
    Date: Thu, 05 Jan 2023 21:53:53 GMT                <<<<
    Connection: close
You can see `Date` header twice, for a static content response.
In addition, you can see python and Flask running version in the response as
well to confirm running version.
This was spotted using nginx on front which complains (by a warning) that the
header is duplicated.