## Systemtap Statistics (aggregates) Data Type    
### 作者                             
digoal                               
### 日期                                              
2013-10-09                           
### 标签                           
PostgreSQL , Linux , systemtap , stap , dtrace , probe                            
----                                     
## 背景         
统计类型在以前写的几篇BLOG进行过述过.   
可参考 :   
http://blog.163.com/digoal@126/blog/static/16387704020138310438924/  
http://blog.163.com/digoal@126/blog/static/16387704020138333731979/  
http://blog.163.com/digoal@126/blog/static/16387704020138392759478/  
本文可作为一个补充.  
```  
统计|聚合类型存储数字类型的统计流信息, 聚合类型只有1个操作符, =0 && =100 && =120 &&  , where  specifies how many empty buckets at the top and bottom of the range to print.   
The default is 2. A  of 0 removes all empty buckets.   
A negative  disables removal.  -- 负的HIST_ELISION表示不移除任何空的bucket(仅限于出现在中间部分的空bucket).  
例如 :   
中间部分的空bucket以~代替 :   
[root@db-172-16-3-39 ~]# stap -D HIST_ELISION=2 -e 'global s; probe begin {for(i=-100;i<100;i++) s<<<i; for(i=300;i<400;i++) s<<<i; print(@hist_linear(s, 0, 1000, 20)); exit()}'  
value |-------------------------------------------------- count  
   <0 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 100  
    0 |@@@@@@@@@@                                          20  
   20 |@@@@@@@@@@                                          20  
   40 |@@@@@@@@@@                                          20  
   60 |@@@@@@@@@@                                          20  
   80 |@@@@@@@@@@                                          20  
  100 |                                                     0  
  120 |                                                     0  
      ~  
  260 |                                                     0  
  280 |                                                     0  
  300 |@@@@@@@@@@                                          20  
  320 |@@@@@@@@@@                                          20  
  340 |@@@@@@@@@@                                          20  
  360 |@@@@@@@@@@                                          20  
  380 |@@@@@@@@@@                                          20  
  400 |                                                     0  
  420 |                                                     0  
HIST_ELISION不管多少末尾部分的空bucket还是一样会去掉 :   
[root@db-172-16-3-39 ~]# stap -D HIST_ELISION=-1 -e 'global s; probe begin {for(i=-100;i<100;i++) s<<<i; for(i=300;i<400;i++) s<<<i; print(@hist_linear(s, 0, 1000, 20)); exit()}'  
value |-------------------------------------------------- count  
   <0 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 100  
    0 |@@@@@@@@@@                                          20  
   20 |@@@@@@@@@@                                          20  
   40 |@@@@@@@@@@                                          20  
   60 |@@@@@@@@@@                                          20  
   80 |@@@@@@@@@@                                          20  
  100 |                                                     0  
  120 |                                                     0  
  140 |                                                     0  
  160 |                                                     0  
  180 |                                                     0  
  200 |                                                     0  
  220 |                                                     0  
  240 |                                                     0  
  260 |                                                     0  
  280 |                                                     0  
  300 |@@@@@@@@@@                                          20  
  320 |@@@@@@@@@@                                          20  
  340 |@@@@@@@@@@                                          20  
  360 |@@@@@@@@@@                                          20  
  380 |@@@@@@@@@@                                          20  
  400 |                                                     0  
  420 |                                                     0  
以下为书上的例子 :   
For example, if you specify -D HIST_ELISION=3 and the histogram has 10 consecutive empty buckets, the first 3 and last 3 empty buckets will be printed and the middle 4 empty buckets will be represented by a tilde (~).  
The following is an example.  
global reads  
probe netdev.receive {  
    reads <<< length  
}  
probe end {  
    print(@hist_linear(reads, 0, 10240, 200))  
}  
This generates the following output.  
value |-------------------------------------------------- count  
    0 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 1650  
  200 |                                                      8  
  400 |                                                      0  