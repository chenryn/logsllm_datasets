title:Vanity, cracks and malware: insights into the anti-copy protection
ecosystem
author:Markus Kammerstetter and
Christian Platzer and
Gilbert Wondracek
Vanity, Cracks and Malware
Insights into the Anti-Copy Protection Ecosystem
Markus Kammerstetter, Christian Platzer and Gilbert Wondracek
Vienna University of Technology
Vienna, Austria
{mk,cplatzer,gilbert}@iseclab.org
ABSTRACT
Today, a large amount of software products include mecha-
nisms to counter software piracy. However, most protection
mechanisms can be easily circumvented by applying soft-
ware patches (cracks) or license key generators (keygens)
with seemingly no (cid:12)nancial incentives. Our research shows
that the distribution of cracks and keygens not only al-
lows miscreants to generate revenue (e.g.
through adver-
tising or malware infections), but it also leads to high risks
for the end-users of pirated software. We collected more
than 43; 900 download links and analyzed more than 23; 100
(3; 551 unique) real-world cracks, showing that these tools
are heavily used by criminals to spread malware. Our re-
sults indicate that even state of the art virus scanners can
not fully protect users from these threats. Moreover, we
conducted a manual analysis, showing how many cracks and
keygens actually work and how much e(cid:11)ort is necessary to
acquire them. In addition, we made our data-set publicly
available to the research community.
Categories and Subject Descriptors
K.6.5 [Management of computing and information
systems]: Security and Protection|Invasive software; C.2.0
[Computer-Communication Networks]: GeneralSecu-
rity and Protection; D4.6 [Operating Systems]: Security
and Protection; Invasive software
General Terms
Economics, Measurement, Security
Keywords
Piracy, Malware, Internet measurements, Underground econ-
omy
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
CCS’12, October 16–18, 2012, Raleigh, North Carolina, USA.
Copyright 2012 ACM 978-1-4503-1651-4/12/10 ...$15.00.
1.
INTRODUCTION
Software copyright infringement or software piracy is a
serious threat to commercial software developers worldwide.
While deriving exact numbers is hard, it is commonly as-
sumed that the accumulated economic damage from soft-
ware copyright infringement ranges in the order of several
tens of billions of dollars [15, 22].
As a consequence, software manufacturers regularly inte-
grate technical protection mechanisms in their products that
aim at preventing unauthorized copying and redistribution.
Examples of such protection mechanisms include serial num-
ber or license key checks that are performed when installing
the protected software products. Some manufacturers even
go as far as requiring special hardware called \dongles" to be
present in the user’s system to successfully run the software.
While these and similar countermeasures have been estab-
lished in the industry since more than three decades [28], a
recent study covering 116 countries [15] claims that about
42% of the globally installed software products are \pirated".
Even considered conservatively, this indicates the rela-
tive ine(cid:11)ectiveness of these measures and concurrently sup-
ports the claim that software piracy is a very common phe-
nomenon. On a technical level, hackers and criminals typ-
ically try to circumvent anti-piracy measures by creating
and distributing speci(cid:12)c software patches or even custom
reverse-engineered serial number generators for commercial
products, called cracks and keygens in the scene jargon.
Users who look for \cracked" software products can typi-
cally access either the unmodi(cid:12)ed original software through
established (cid:12)lesharing systems like Bittorrent, One-Click-
Hosters (OCH), or via Usenet downloads, or download bun-
dles of the original software and cracks or keygens. Addi-
tionally, some types of cracks target legitimate evaluation
copies of software products that are published by the actual
manufacturer to attract potential customers. In these cases,
the attacker’s aim is to emulate or unlock restricted features,
thus upgrading the evaluation version to the full-priced soft-
ware product.
Interestingly, relatively little academic research has been
published in recent years on this topic. In particular, anec-
dotal evidence strongly hints at criminals using cracks and
keygens as an attack vector to distribute malicious software
such as trojans or viruses.
In this work, we (cid:12)rst elaborate on how we collect a large
test-set of real-world cracks and keygens, and then perform
a number of experiments to evaluate the maliciousness of
this software. We demonstrate that, in addition to the di-
rect economic damage caused by software copyright infringe-
809ment, there are signi(cid:12)cant risks for many end-users who use
pirated software. Finally, we conclude that there is a re-
warding opportunity for malware researchers and anti-virus
companies to collect novel malware samples from sources
related to software piracy. Furthermore, we show that the
circumvention of copy protections is embedded in an active
ecosystem, describing its actors and interdependencies. In
particular, the main contributions of this work are:
(cid:15) We collected more than 43; 900 download links and
performed automated and manual analysis on more
than 23; 100 (3; 551 unique) resulting real-world crack
downloads, providing deep insights into how cracks
and keygens are used to spread malware.
(cid:15) To gain a systematical understanding of the ecosys-
tem surrounding cracks and keygens, we describe the
motivations and possible sources of revenue of its par-
ticipants.
(cid:15) We performed a dynamic behavior analysis of infected
binary samples to determine how malicious these sam-
ples really are and present results.
(cid:15) We made our data-set publicly available to the research
community for download to drive future research in
that direction.
1.1 Motivation
Recent publications [24, 27, 26, 25] have shown that web-
sites and binaries related to software piracy are more likely
to be infected with malware. This is supported by (cid:12)nd-
ings on the thriving underground economy and its links to
software piracy, which has grown into a pro(cid:12)table, global
business [17, 18, 19]. Gullible users who download anti copy-
protection tools such as cracks and key generators are among
the typical targets of shady business practices and cyber-
crime. Criminals covertly infect their systems with malware
and transform them into malicious bots that are controlled
by criminals to commit or support attacks or sending spam.
Given the large scale of software piracy, we decided to fur-
ther investigate on the risks that users are facing through
the use of these tools, the possible monetary gains for the
criminals, and the supporting roles and actors in the piracy
ecosystem.
2. RELATED WORK
In 2008, Iklinci, Holz and Freiling introduced the honey-
client system Monkey-Spider [24] to detect malicious web-
sites. Their results show that web content speci(cid:12)c to piracy
or games is more likely to be malicious than benign content
and domains related to anti-copy protection tools are among
the most malicious domains. However, they do not specif-
ically target anti-copy protection tools such as cracks and
key generators.
Moshchuk, Bragin et al. did a Crawler-based Study of
Spyware on the Web [27]. Similar to our approach, they
employ a virtual machine-based analysis platform to scru-
tinize collected executables. Their study proves that there
is a strong correlation between software piracy and Spyware
infections, but unlike our work, does not focus on cracks and
keygens.
In a sociological study [26], Limayem et al.
show that
there are many factors motivating software piracy and that
the usual software pirate is in fact no computer expert.
Their work indicates that software piracy is not only a very
common problem, but also suggests that due to the lim-
ited amount of computer literacy, systems of software pi-
rates might not be protected well enough to combat malware
found in cracks and keygens.
In [25], Gantz et al. investigate the security risks involved
with using cracks and key generators, showing that the vast
amount of these tools is infected with malware. Although
they use an approach similar to our manual analysis ap-
proach, their analysis concentrates on a relatively small set
of samples. In contrast, our work covers the underground
economy aspects and employs both manual and automated
collection and analysis approaches on a large set of samples.
3. THE SOFTWARE PIRACY ECOSYSTEM
While cracks and key generators are speci(cid:12)c tools to cir-
cumvent copy protections, they only represent a small frac-
tion of the software piracy ecosystem. In the following, we
give an overview of the involved actors and groups as well
as their incentives and interdependencies.
3.1 Warez Groups
Underground Warez groups focus on the distribution of
protected or copyrighted media, such as movies, music, or
software (\warez") in the scene.
Usually, individual members of these groups are also the
authors of cracks and keygens [23]. Unlike typical cybercrim-
inals, for example, botnet operators, the primary motivation
of these groups is not monetary gain. Rather, it seems to be
some type of \vanity contest", based on competition among
di(cid:11)erent warez groups, with the aim of being the (cid:12)rst - and
thus, most respected - group to release a crack or keygen for
a speci(cid:12)c software product [23, 21, 29].
To be able to actually write cracks and keygens, access
to the original software products is necessary. To this end,
warez groups share original media that they acquired among
each other, usually via private sites and servers. This is sig-
ni(cid:12)cantly di(cid:11)erent to public end-users, who have to resort to
public (cid:12)le-sharing networks like One Click Hosters (OCHs),
peer-to-peer networks or binary Usenet groups [23, 20]. As
we will see later, the intermediate distribution steps between
warez groups and the end-users of pirated media allow other
miscreants to spread malware and gain monetary pro(cid:12)ts.
3.2 Hosting Providers
To distribute cracks and keygens to end-users, third-party
hosting providers are used by warez groups. There are sev-
eral types of such hosting providers, typically they all allow
revenue to be made through the subsequent downloads of
cracks and keygens. Pay-Per-Download (PPD) hosters such
as Sharecash [12] or Honeycontent [7] allow publishers to
earn money by sharing (cid:12)les or links to content.
If users
want to access the content on a PPD hoster, they usually
need to complete manual tasks, like (cid:12)lling out surveys, to un-
lock the download. The advertisement fees for these surveys
are then distributed among the PPD hoster and the con-
tent publisher. One-Click Hosters (OCHs) follow a similar
scheme: Content publishers can upload (cid:12)les, but download-
ing users either have to pay for premium accounts or they are
punished with slow download speeds, long waiting times or
other limitations supported by advertising. Dedicated Crack
Hosters like Crackstorage.net are websites that specialize in
810hosting cracks and keygens. Typically, they do not allow vis-
itors to search for the stored (cid:12)les, which can be considered
a counter-measure against crawling or enumeration of their
content. Instead, downloads are available via direct, deep
links, for example obtained through a third party search en-
gine like Astalavista.box.sk [2] or forums. Through advertis-
ing and by partnering with indexing sites, they can generate
revenue from crack and keygen downloads. Malware hosters
typically set up sites for hosting malware, often disguised as
cracks or keygens. Unsuspecting users then download and
execute the malware and thus generate revenue for the mal-
ware hoster. Other hosting types like Usenet newsgroups or
P2P networking do not directly generate revenue through
cracks and keygens. However, through combinations with
other hosting types like PPD hosting, the uploader can still
make money. Recent studies show that contributions to P2P
networks can be pro(cid:12)t-driven as well, for instance by seeding
content that includes advertisements for web sites or private
BitTorrent portals [18].
3.3 Malware Distributors
The distribution of malware has grown into a booming
underground economy. A recent study [17] states that due
to market forces in the underground economy, a signi(cid:12)cant
amount of malware no longer incorporates spreading mech-
anisms on its own.
Instead, a whole service culture has
evolved, leading to providers that o(cid:11)er a wide range of spe-
cialized services ranging from malware or packaging toolk-
its for Anti-Virus evasion to infection services (Pay-Per-
Install ). In fact, out of the world’s top 20 most prevalent
families of malware, 12 employ PPI services to buy infec-
tions [17]. In general, a PPI provider receives malware ex-
ecutables from clients and charges money for a requested
number of malware installs. The actual installs are mostly
done through (cid:12)nancially compensated a(cid:14)liates that focus
on di(cid:11)erent infection vectors. Our results indicate that up-
loading infected cracks and keygens is at least one of them.
Since the malware comes from clients, it can be virtually
anything, ranging from botnet bots to ad- and spyware dis-
tribution or click fraud. However, in general the income
generated through the malware will outweigh the costs for
the PPI service.
4. ANALYSIS
Here we describe how we retrieved and analyzed pirated
programs and key generators. To provide a realistic set
of samples, we utilized several di(cid:11)erent facilities to gather
them. At the same time we aimed to follow roughly the
same procedures a real user would perform to download the
desired crack.
4.1 Manual Data Acquisition
We followed two approaches to acquire software cracks and
key generators. First, we placed ourselves in the role of a
user manually searching for a speci(cid:12)c crack and key genera-
tor. This allowed us to conduct experiments that are related
to the user experience (e.g. how much e(cid:11)ort is necessary to
successfully circumvent a copy protection mechanism) and
the risks involved with the execution of anti-copy protection
tools.
As there are thousands of di(cid:11)erent software products and
anti-protection tools available, we restricted our search to
the most prominent products in the categories games and
Application
Game
Adobe Photoshop CS5.1 Brink
Ahead Nero 10
Microsoft O(cid:14)ce 2010
Norton 360
WinRAR 3.93
Crysis 2
Fable III
Portal 2
The Sims 3
Table 1: Top 5 Applications and Games
applications. To this end, we combined commercial rank-
ings (i.e. Amazon.com [1] and Download.cnet.com [6]) with
download numbers from Thepiratebay.org [3], one of the top
providers for pirated software. A listing of the top (cid:12)ve ap-
plications and games can be found in Table. 1.
Just as any user would, we (cid:12)rst utilized the Google search
engine to issue a query. We also used Astalavista.box.sk [2],
a well known search engine for anti-copy protection tools.
From the search results, we followed links that were most
likely to directly lead to a crack or key generator for a speci(cid:12)c
product. We assumed that this was especially the case, when
the links included the precise version information for the
product we were looking for (e.g. \Adobe CS5.1 All products
Crack By tEAM RED HOT"). Accompanying our manual
analysis (see Section 4.3.1), we manually collected 363 direct
download links over a period of 3 months.
In total, this
led to 242 executable cracks or key generators, from which
141 were unique and 101 were duplicates. We considered
an executable a duplicate, if there was another executable
with the same MD5 sum within our downloads. The overall
download results are visible in Table 8 in the Appendix.
Our approach led to a wide range of di(cid:11)erent sites with
downloads from regular web hosters, dedicated crack hosters
like Crackstorage.net, One Click Hosters (OCHs) and the
BitTorrent P2P Network. At this point, we observed how
many links we had to follow (i.e. the link depth) from the
search engine result to the actual download. The result is
visible in Figure 1. Our observations indicate, that in order
to reach 80% of the downloads, a user needs to follow at
least 4 links from the actual search result. If up to 3 links are
followed, only about 43% of the downloads can be reached.
Figure 1:
Crack/Keygen Download (CDF)
Average Link Depth to reach a
12345678LinkDepth020406080100Percentage811Throughout our observations, we had to follow up to 8
links to (cid:12)nally reach the real download site. The web sites
between the search result and the actual download site are
frequently either advertising or link collection sites, allowing
the site operators to generate additional revenue, presum-
ably with the generated tra(cid:14)c. In general, search engine-
powered downloading of cracks and keygens is a cumbersome
task.
4.2 Automated Data Acquisition
Following up to the manual approach, we automatically
retrieved a high number of cracks and key generators for a
wide range of di(cid:11)erent products. The goal was to gain in-
sight into a wider area of the anti copy protection landscape
by analyzing how many of our downloads contained mali-
cious code and whether there is a di(cid:11)erence in the infection
ratio between games and applications based on their initial
source.
To this end, we constructed an automated acquisition
system that is shown in Figure 2. The system uses three
data sources: The Usenet, One Click Hosters (OCHs) and
the BitTorrent network. We chose these data sources due
to the potentially high amount of cracks and key gener-
ators available on these networks, the accessibility of in-
dexing services, the possibility to automate the collection
process and their general pervasiveness. For each of these
data sources, we wrote custom crawlers that leverage exist-
ing indexing services. Speci(cid:12)cally, we wrote crawlers for the
Usenet indexing service Nzbindex.nl [11], the OCH search
engine Filestube.com [5] and the BitTorrent search engine
Isohunt.com [8].
4.2.1 Applications vs. Games
To distinguish between anti-copy protection tools for games
and for software applications, we again created a list with
the most popular products. Since an automated approach
is not subject to the same restrictions as a manual one, we
compiled a new list of ranked products which is similar to
Table 1 but more comprehensive. The (cid:12)nal list comprises a
total of 292 non-free software products (151 computer games
and 141 applications).
For every product, our crawlers collected download links
for the search terms \[PRODUCT] crack" and \[PRODUCT]
keygen", where [PRODUCT] refers to the name of the cur-
rent software product from our list. Since cracks and key
generators are small programs, we limited our search to
downloads with 10MB or less. In addition, due to the dis-
tributed nature of P2P networks, we only collected BitTor-
rent download links that had at least 5 seeders. Table 2
shows the crawl results with and without the manually col-
lected download links. In total we collected 43,972 download
links (43,609 crawled links and 363 manually collected links).
In comparison to the Usenet and OCH download links, the
number of crawled BitTorrent links was lower, because many
downloads had no seeders and thus were not collected by our
crawler in the (cid:12)rst place.
For each network, we forwarded the collected download
links to a corresponding download client.
4.2.2 Usenet Downloads
For Usenet downloads, we chose to use the NZBGet [10]
client.
In addition to its easy integrability into our sys-
tem architecture, it automatically processes the downloads
Crawler: