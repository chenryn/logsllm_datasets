scp
#业务主机目标路径
业务服务器集群
---
## Page 115
nginx_access.tar.gz
#python/home/test/paramiko/simple4.py
运行结果如下，
ssh.close()
channel.close()
print buff
while not buff.endswith('#'):
buff=
channel.send(password+'\n')
#scp中转目录文件到目标主机
buff=
channel=ssh.invoke_shell()
ssh.connect(hostname=blip,username=bluser,password=blpasswd)
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ssh=paramiko.SSHClient()
sftp.close()
sftp.put(localpath,tmppath)
sftp =paramiko.SFTPclient.from_transport(t)
t.connect(username=bluser,password=blpasswd)
t= paramiko.Transport((blip,port))
resp
sa=+ n
if not resp.find(passinfo)==-1:
resp =channel.recv(9999)
buff +=resp
except Exception,e:
try:
resp = channel.recv(9999)
sys.exit()
print'Error info:Authentication failed.'
channel.send('yes\n')
sys.exit()
ssh.close()
channel.close()
printError info:%s connection time.'(str（e))
ssh.close()
channel.close()
Linux公社
，如目标主机/data/nginx_access_hd.tar.gz存在，则说明文件已成功上传。
www.linuxidc.com
#上传本地源文件到堡垒机临时路径
第6章
系统批量运维管理器paramiko详解
100%1590KB
1.6MB/S
00:00
8
---
## Page 116
的功能，大家可以自己动手，在实践中学习，打造适合自身业务环境的自动化运营平台。
90第二部分高级篇
当然，整合以上两个示例，再引入主机清单及功能配置文件，可以实现更加灵活、强大
6.2节和6.3节常用类说明与应用案例参考http://docs.paramiko.org/en/1.13/官网文档。
Linux公社 www.linuxidc.com
---
## Page 117
令如下（根据用户环境，自行选择pip或easy_install)：
7.1
版本为1.8。
高一层的封装，操作起来会更加简单。Fabric 官网地址为：http://www.fabfile.org，目前最高
括命令执行、文件上传、下载及完整执行日志输出等功能。Fabric在paramiko的基础上做了更
序部署及系统管理任务，它提供了系统基础的操作组件，可以实现本地或远程shell命令，包
Fabric支持pip、easy_install或源码安装方式，很方便解决包依赖的问题，具体安装命
校验安装结果，
#python setup.py install
#yum -y install python-setuptools
Fabric 依赖第三方的 setuptools、Crypto、paramiko包的支持，源码安装步骤如下：
easy_install fabric
pip install fabric
Fabric是基于Python（2.5及以上版本）实现的SSH命令行工具，简化了SSH的应用程
Fabric的安装
cd Fabric-1.8.2
tar-zxvf Fabric-1.8.2.tar.gz
wget
https://pypi.python.org/packages/source/F/Fabric/Fabric-1.8.2.tar.gz
Linux公社 www.linuxidc.com
系统批量运维管理器Fabric详解
如果导入模块没有提示异常，
，则说明安装成功：
第7章
Chopte)
---
## Page 118
7.2fab 的常用参数
目标主机未配置密钥认证信任，将会提示输入目标主机对应账号登录密码。
来指定，如：fab-H SN2013-08-021,SN2013-08-022-f host_type.py host_type。如果管理机与
92第二部分高级篇
口-1，显示定义好的任务函数名；
fab 作为Fabric程序的命令行入口，提供了丰富的参数调用，命令格式如下：
其中，fab命令引用默认文件名为fabfile.py，如果使用非默认文件名称，则需通过“-f"
下面列举了常用的几个参数，更多参数可使用fab-help查看。
运行结果如图7-1所示。
def host_type():
from fabric.apiimport run
#!/usr/bin/envpython
【/home/test/fabric/fabfile.py 】
官网提供了一个简单的入门示例：
>>>importfabric
[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)] on 1inux2
Python 2.6.6（r266:84292,Jul 10 2013,22:48:45)
#python
Linux公社 www.linuxidc.com
"copyright",
SCO
#定义一个任务函数，通过run方法实现远程执行*uname-s’命令
.22
un:
run:
"credits"or "license" for more information.
图7-1程序执行结果
gtask'host.type'
---
## Page 119
角色等，各属性说明如下：
7.3.1
作逻辑，
21";192.168.1.22]”。fabfle的主体由多个自定义的任务函数组成，不同任务函数实现不同的操
192.168.1.21,192.168.1.22"，我们可以通过定义env.hosts 来实现，如“env.hosts =[192.168.1.
配使用的，部分命令行参数可以通过相应的方法来代替，使之更加灵活，例如“-H
7.3fabfile 的编写
式，例如：
evn 对象的作用是定义fabfile的全局设定，支持多个属性，包括目标主机、用户、密码、
fab命令是结合我们编写的fabfile.py（其他文件名须添加-ffilename引用）来搭
口env.passwords，与 password功能一样，区别在于不同主机不同密码的应用场景，需要
env.user，定义用户名，如env.user="root"。
env.exclude_hosts，排除指定主机，如env.exclude_hosts=[192.168.1.22]。
env.host，定义目标主机，可以用IP或主机名表示，以Python 的列表形式定义，如
命令运行结果见图7-1。
#fab -pKsdh3458d(密码）-H 192.168.1.21,192.168.1.22--uname -s
有时候我们甚至不需要写一行Python代码也可以完成远程操作，直接使用命令行的形
-w，当命令执行失败，发出告警，而非默认中止任务。
口-T，设置远程主机命令执行超时时间（秒）；
口
口-R，指定role（角色），以角色名区分不同业务组设备；
口
口
口
口
env.password，定义密码，如 env.password=KSJ3548t7d。
Ienv.port，定义目标主机端口，默认为22，如env.port="22"。
env.hosts=[192.168.1.21','192.168.1.22'] 。
全局属性设定
注意的是，配置 passwords时需配置用户、主机、端口等信息，如：
，下面详细介绍。
-t，设置设备连接超时时间（秒）；
-g，指定网关（中转）设备，比如堡垒机环境，填写堡垒机IP即可；
1-f，指定fab人口文件，默认人口文件名为fabfile.py；
-P.
-H,
，以异步并行方式运行多主机任务，默认为串行运行；
，指定目标主机，多台主机用“”号分隔；
Linux公社www.linuxidc.com
第7章
系统批量运维管理器Fabric详解
6
---
## Page 120
部分应用场景需求。Fabric支持常用的方法及说明如下：
7.3.2
来看一个示例：
94第二部分高级篇
run，执行远程命令，如：run(free-m);
口cd，切换远程目录，如：cd(/data/logs);
lcd，切换本地目录，如：lcd(/home)；
local，执行本地命令，如：local(uname-s);
在命令行执行#fab deploy就可以实现不同角色执行不同的任务函数了。
引用时使用Python 修饰符的形式进行，角色修饰符下面的任务函数为其作用域，下面
def dbtask():
@roles('webservers')
env.roledefs=
口env.roledefs，定义角色分组，比如 web 组与db组主机区分开来，定义如下：
defdeploy():
def
@roles ('webservers.',
@roles(!dbservers')
口env.deploy_release_dir，自定义全局变量，格式：env.+“变量名称”，如env.deploy_
env.gateway，定义网关（中转、堡垒机）IP，如 env.gateway=192.168.1.23"。
env.passwords
release_dir、env.age、env.sex 等。
常用API
execute(pubclitask)
run('uptime')
run(/etc/init.d/mysqlstart')
run('/etc/init.d/nginx start')
dbservers':['192.168.1.25',*192.168.1.26']
'PI:EMAIL:22':'KSdu43598'
'PI:EMAIL:22':'KSh458j4f'
'PI:EMAIL:22':'SJk348ygd'
Linux公社www.linuxidc.com
['192.168.1.21',
'dbservers')
'192.168.1.22',
'192.168.1.23',192.168.1.241
---
## Page 121
192.168.1.21上执行任务，而是返回Fabric主机本地“uname-a”的执行结果。
务函数只执行一次。调用runO方法执行远程命令。详细源码如下：
7.3.3
：本示例调用localO方法执行本地（主控端）命令，添加“@runs_once”修饰符保证该任
调用remote_task任务函数的执行结果如图 7-3所示。
结果中显示了“[192.168.1.21] Executing task“local_task”，但事实上并非在主机
通过fab命令分别调用local_task任务函数运行结果如图 7-2所示。
【/home/test/fabric/simple1.py】
@runs_once
env.password='LKs934jh3'
env.hosts=['192.168.1.21','192.168.1.22']
env.user='root'
from fabric.api import
#!/usr/bin/env python
下面结合一些示例来帮助大家理解以上常用的API。
口@runs_once，函数修饰符，标识的函数只会执行一次，不受多台主机影响。
口@task，函数修饰符，标识的函数为fab可调用的，非标记对fab不可见，纯业务逻辑；
reboot,
confirm，获得提示信息确认，如：confrm("Tests failed.Continue[Y/N]?");
get，从远程主机下载文件到本地，如：getC/data/user.info,"/home/root.info);
def
put，上传本地文件到远程主机，如：put(/home/user.info，,/data/user.info);
 sudo，sudo方式执行远程命令，如：sudo(/etc/init.d/httpd start)；
示例1：查看本地与远程主机信息
with cd("/data/logs"):
remote_task():
run("1s -1")
task():
重启远程主机，如：rebootO；
Linux公社www.linuxidc.com
#查看本地系统信息，
6.37-358.18.1.e16.x86_64#1
图7-2调用local_task任务函数运行结果
#本地任务函数
#“with”的作用是让后面的表达式的语句继承当前状态，实现
当有多台主机时只运行一次
SMP
fed
第7章
28
系统批量运维管理器Fabric详解
4x86.64x86.64GNU/Lin
的效果
5
---
## Page 122
runs_once 修饰符来达到此目的。
人一次，再显示所有主机上该目录的列表信息，调用了一个子函数input_rawO同时配置@
符接收用户输人，最后调用worktaskO任务函数实现远程命令执行，详细源码如下：
7.3.4
96第二部分高级篇
执行结果如图7-4所示。
该示例实现了一个动态输人远程目录名称，再获取目录列表的功能，由于我们只要求输
def go(）:
def worktask(dirname):
def input_raw():
env.password='LKs934jh3+
env.hosts=['192.168.1.21','192.168.1.22']
【/home/test/fabric/simple2.py 】
@task
@runs_once
env.user='root'
from fabric.api import
#!/usr/bin/env python
示例2：动态获取远程目录列表
worktask(getdirname)
getdirname=input_raw()
run("ls-1"+dirname)
#限定只有go函数对fab命令可见
Linux公社 www.linuxidc.com
#主机遍历过程中，只有第一台触发此函数
192.
necting fm12181d
图7-3调用remote_task任务函数运行结果
1.21]
out
x
8076
root
roo
合
---
## Page 123
标主机文件上传与执行的操作，详细源码如下：
" env.gateway='192.168.1.23'"，
7.3.5
#假如所有主机密码都不一样，可以通过env.passwords 字典变量一一指定
【 /home/test/fabric/simple3.py 】
本示例通过Fabric的env对象定义网关模式，
def put_task():
@task
rpackpath="/tmp/instal1"
lpackpath="/home/install/lnmp0.9.tar.gz"
env.passwords ={
env.gateway=192.168.1.23
env.user='root'
rom
rom
from fabric.api import*
#!/usr/bin/env python
示例3：网关模式文件上传与执行
run("mkdir-p/tmp/install")
'PI:EMAIL:22':'U17384hg6
PI:EMAIL:22':'LKs934jh3,
PI:EMAIL:22':'LKs934jh3'
fabric.contrib.console import confirm
fabric.context_managers import*
Linux公社 www.linuxidc.com
26
nectn fm1218:12
88
”，其中IP“192.168.1.23”为堡垒机IP，再结合任务函数实现目
192.168.1.22']
图7-4程序运行结果
#远程安装包路径
#定义堡垒机IP，作为文件上传、执行的中转设备
88
8
第7章
，即俗称的中转、堡垒机环境。定义格式为
#堡垒机账号信息
888
#本地安装包路径
系统批量运维管理器Fabric详解
23 23
152323230
21:23]
7
---
## Page 124
机文件的 md5，最终实现文件一致性校验。详细源码如下：
务器，最后做一致性校验。本案例通过put)方法实现文件的上传，通过对比本地与远程主
7.4.1示例1：文件打包、上传与校验
布的功能，读者可以在此基础进行功能扩展，写出更加贴近业务场景的工具平台。
7.4
配置env.gateway 即可。
及执行，相比paramiko的实现方法简洁了很多，编写的任务函数完全不用考虑堡垒机环境，
98第二部分高级篇
我们时常做一些文件包分发的工作，实施步骤一般是先压缩打包，再批量上传至目标服
下面介绍三个比较典型的应用Fabric 的示例，涉及文件上传与校验、环境部署、代码发
#!/usr/bin/env python
示例通过简单的配置env.gateway=192.168.1.23'就可以轻松实现堡垒机环境的文件上传
@task
env.password='LKs934jh3'
env.hosts=['192.168.1.21','192.168.1.22']
env.user='root'
from fabric.contrib.console import confirm
from
【/home/test/fabric/simple4.py】
：()obp
@task
def run_task():
Fabric应用示例