applications and their popular versions, and use the data from the
library to train a comprehensive classifier. In addition, we assume
that the adversary can obtain the laptop model of the victim through
observation and build a corresponding classifier with a laptop of
Session 4A: Mobile SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand291(a) Estimation error of detecting the opening time of web pages.
(b) Web page recognition performance on fresh and old data.
Figure 11: Performance of user operation recognition.
the same model. We believe that this kind of overhead might be
affordable for adversaries who attempt to track the behaviors of
others.
Impact of Device Distance. Due to the limited sensitivity of
5.4.5
the built-in magnetometer, the captured EM signals become weak
when moving the attack device away from the laptop. To investigate
the influence of the attack device placement, we vary the distance
between the laptop and the phone. We train the classifier with traces
collected at a distance of 2.5 cm, and test it with traces collected
from various distances. Starting from 1 cm, we gradually enlarge
the distance between the laptop and the phone with a step of 0.5 cm.
The performance of MagAttack at each distance is shown in Fig. 10,
from which we can see that within a distance of 1−3 cm, MagAttack
can achieve a high accuracy (> 92%). If the attack distance is beyond
this range, we consider to employ specialized hardware to enhance
the signal reception capability.
5.5 User Operation Recognition Results
5.5.1 Webpage Browsing Detection. For user operation recognition,
we first detect the event of web page browsing. We use a script to
open 50 web pages in a random order in the Chrome web browser,
and record the exact opening instant of each web page. In the mean-
time, we capture the corresponding EM emissions and estimate
the browsing time. The results shown in Fig. 11(a) demonstrate
that MagAttack can detect all of the 50 web pages with an average
estimation error (in absolute values) of less than 0.12 seconds.
5.5.2 Operation Recognition Performance. To evaluate the user op-
eration recognition performance of MagAttack, we collect 2500
samples for 50 web pages across 3 days. The “Fresh Data” in
Fig. 11(b) shows the accuracy when MagAttack classifies among
different numbers of web pages. Specifically, MagAttack achieves
Figure 12: Performance of application recognition on the
Windows laptop.
an average accuracy of 100% when differentiating 5 web pages,
and 96.7% for both 10 and 15 web pages. With the increasing of
web pages, the recognition accuracy slightly decreases. Neverthe-
less, MagAttack can still achieve an average accuracy of 84.7% in
differentiating all the 50 web pages.
Similarly, we investigate the impact of data freshness on op-
eration recognition as well. We collect another 500 testing sam-
ples 20 days after collecting the training samples. Based on which,
MagAttack shows an average accuracy of 73.7% as revealed in “Old
Data” in Fig. 11(b). The reason accounts for the performance de-
crease is that most web pages, unlike applications, update their page
components on a daily basis. These modified web page components
impact the EM signals captured on different days, and thus cause
performance decrease.
5.6 Scalability of MagAttack
In addition to the performance of application and operation recog-
nition, we investigate the scalability of MagAttack on various op-
erating systems and attack devices. Specifically, we utilize a target
device with operating systems other than Mac OS, and an attack
device other than iPhone to perform user application recognition.
Impact of Different Operating Systems. To evaluate it, we
5.6.1
conduct experiments on a Lenovo T440p laptop with a Windows
OS. Similarly, we collect 50 samples for each of the following 10
popular applications available on Windows OS: PowerPoint (P),
Word (W), Excel (E), Chrome (C), Internet Explorer (X), Skype (K),
KuGou (G), Windows Media Player (R), Adobe Reader (A) and MAT-
LAB (B), and employ the 10-fold cross validation to evaluate the
recognition performance. The results shown in Fig. 12 demonstrate
that MagAttack works well on the Windows OS, with an average
recognition accuracy of 97.8%. Thus, we have reason to believe that
MagAttack is OS-independent and can attack laptops with different
operating systems.
Impact of Different Attack Devices. To evaluate it, we use
5.6.2
two different mobile phones, i.e., an iPhone SE and a Nexus 5 in
Tab. 3, to track the same laptop at the same time. We collect 50
samples for each of the 10 applications and draw the EM signals of
two applications (Microsoft Word and VLC player) recorded by two
smartphones in Fig. 13 for illustration. From the results we can ob-
serve that EM signals of the same application recorded by different
smartphones are quite similar. To quantitatively evaluate the im-
pact of different attack devices, we train the system using samples
Session 4A: Mobile SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand292Due to the limited sensitivity of the built-in magnetometer in the
mobile devices on today’s market, the captured EM signals from
the COTS mobile device become too weak after moving the mobile
device further away from the laptop. We envision that COTS mobile
devices can be equipped with better sensors in the future.
Second, our algorithms may need to be re-trained in case of
different CPU architectures or operating systems. We envision
that robust features across laptops of different CPUs and various
operating systems may be discovered in the future.
Third, currently our method works when one application or
operation is performed at a time. We envision that new techniques
for recognizing concurrent multiple activities may be developed
in the future. We hope this work can attract more effort from the
community to explore this field which has not been well studied
yet.
7 RELATED WORK
Side-channel Attacks Based on EM Emissions. Pioneer work
using EM leakage as the side-channel usually requires customized
hardware to capture EM emissions [7, 12, 13, 25, 26]. Genkin et al.
extract the key of RSA software implementation on a Lenovo laptop
using a near-field magnetic probe with a frequency of around 100
kHz [12, 13]. Vaucelle et al. detect the existence of ambient electro-
magnetic fields using a magnetometer bracelet with a frequency of
up to 50 kHz [25]. Chen et al. detect the usage of electrical appliances
by monitoring the device electromagnetic interference (EMI) radia-
tions with an expensive EMI measurement equipment [7]. Chen’s
scheme works only when the laptop is electrically connected to a
power line interface, which is plugged in the wall outlet. Wang et
al. recognize the electrical appliance usage using a wrist-worn mag-
netic sensor and a set of data acquisition device, with a sampling
rate of 16-bit resolution at 44.1 kHz [26]. In comparison, MagAttack
uses magnetometers in the COTS smartphones with a sampling
rate of around 100 Hz to detect and recognize user activities on a
vicinal laptop. Biedermann et al. present a class of EM side-channel
attacks on computer hard drives using smartphone magnetic field
sensors [4], which is the most related work of MagAttack. Bieder-
mann’s scheme detects what type of the operating system is booting
up or what application is being started based on the ongoing opera-
tions of hard drives, and thus cannot work for applications without
disk operations. Furthermore, they haven’t presented the underly-
ing principle that enables those attacks. In comparison, MagAttack
works for any user applications or operations, and investigates the
feasibility of such attacks from a view of CPU instructions.
Side-channel Attacks Using Mobile Devices. Prior work has
demonstrated a number of side-channel attacks using the sensors
in COTS mobile devices [3, 5, 22, 30, 31]. Xu et al. and Schlegel
et al. show side-channel attacks using cameras [30] and micro-
phones [22], respectively. Cai et al. and Aviv et al. show that motion
sensors in mobile phones, such as accelerometers and gyroscopes,
can be used to learn the user tapping and gesture input [3, 5]. Jana et
al. recognize web pages that a user browses by tracking the mem-
ory footprint variations of the browser on Android [17], which
is intrusive since the attackers need to login to the system as a
process running in parallel with the browser. These attacks are
(a) Microsoft Word
(b) VLC Player
Figure 13: EM signals collected using different phones.
collected by one smartphone, and test it with samples collected by
the other device. Since the iPhone SE has a sampling rate of 100 Hz
while the Nexus 5 only has 50 Hz, we down-sample the EM signals
collected by the iPhone SE to achieve the same sampling rate. The
classification results demonstrate that MagAttack can achieve an
accuracy of 98% in the aforementioned case. Thus, we believe that
MagAttack is independent on the model of attack devices as well
as the sampling rate of magnetometers.
6 DISCUSSION
In this section, we discuss the defense countermeasure of
MagAttack, and the limitations of our system.
6.1 Defense
We propose two defense strategies against MagAttack from both
the hardware and software perspectives.
Hardware-based Defense. One condition that enables
MagAttack is that the laptop CPU leaks EM emissions which
can be captured by a vicinal magnetic sensor. To address it, the
electromagnetic shielding on laptops can be enhanced. For instance,
the CPU and other vital components can be shielded with metal
films, which may reduce a majority of the EM leakage.
Software-based Defense. The root cause of MagAttack is that
various instructions generate different EM signals that in turn can
be utilized to differentiate user activities. To defend MagAttack, a
group of stochastic instructions can be executed by the CPU in the
background, which may add random noise to the EM signals gener-
ated by user activities, thus interfere the recognition of MagAttack.
6.2 Limitations
Our implementation of MagAttack based on existing hardware
has three main limitations. First, the attack distance between the
laptop and the mobile device is close, in terms of 3 centimeters.
Session 4A: Mobile SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand293(2016).
[9] Ronald R Coifman and M Victor Wickerhauser. 1992. Entropy-based algorithms
for best basis selection. IEEE Transactions on information theory 38, 2 (1992),
713–718.
[10] dtrace.org. 2017. About Dtrace. http://dtrace.org/blogs/about. (2017).
[11] Gartner. 2018. Gartner Says Worldwide Device Shipments Will Increase 2.1
Percent in 2018. https://www.gartner.com/newsroom/id/3849063. (2018).
[12] Daniel Genkin, Lev Pachmanov, Itamar Pipman, and Eran Tromer. 2015. Stealing
keys from PCs using a radio: Cheap electromagnetic attacks on windowed expo-
nentiation. In Proceedings of the 17th International Workshop on Cryptographic
Hardware and Embedded Systems (CHES’15). Springer, 207–228.
[13] Daniel Genkin, Itamar Pipman, and Eran Tromer. 2015. Get your hands off
my laptop: Physical side-channel key-extraction attacks on PCs. Journal of
Cryptographic Engineering 5, 2 (2015), 95–112.
[14] Github. 2016. DTrace-win32. https://github.com/prash-wghats/DTrace-win32.
[15] Gregose. 2016. Syscall-table. http://syscalls.kernelgrok.com/. (2016).
[16] Sidhant Gupta, Matthew S Reynolds, and Shwetak N Patel. 2010. ElectriSense:
single-point sensing using EMI for electrical event detection and classification in
the home. In Proceedings of the 12th ACM international conference on Ubiquitous
computing (Ubicomp’10). ACM, 139–148.
[17] Suman Jana and Vitaly Shmatikov. 2012. Memento: Learning secrets from process
footprints. In Proceedings of the 2012 IEEE Symposium on Security and Privacy
(S&P’12). IEEE, 143–157.
[18] Paul Kocher, Joshua Jaffe, and Benjamin Jun. 1999. Differential power analysis. In
Proceedings of the 19th Annual International Cryptology Conference (CRYPTO’99).
Springer, 388–397.
[19] Liming Lu, Ee-Chien Chang, and Mun Choon Chan. 2010. Website fingerprinting
and identification using ordered feature sequences. In Proceedings of the 15th
European Symposium on Research in Computer Security (ESORICS’10). Springer,
199–214.
[20] S Lawrence Marple. 1987. Digital spectral analysis: with applications. Vol. 5.
Prentice-Hall Englewood Cliffs, NJ.
[21] François Petitjean, Germain Forestier, Geoffrey I Webb, Ann E Nicholson, Yanping
Chen, and Eamonn Keogh. 2014. Dynamic time warping averaging of time series
allows faster and more accurate classification. In Proceedings of the 2014 IEEE
International Conference on Data Mining (ICDM’14). IEEE, 470–479.
[22] Roman Schlegel, Kehuan Zhang, Xiao-yong Zhou, Mehool Intwala, Apu Kapadia,
and XiaoFeng Wang. 2011. Soundcomber: A Stealthy and Context-Aware Sound
Trojan for Smartphones. In Proceedings of the 18th Annual Network and Distributed
System Security Symposium (NDSS’11), Vol. 11. 17–33.
[23] Amelia Shen, Abhijit Ghosh, Srinivas Devadas, and Kurt Keutzer. 1992. On
average power dissipation and random pattern testability of CMOS combinational
logic networks. In Proceedings of the 1992 IEEE/ACM international conference on
Computer-aided design (ICCAD’92). IEEE, 402–407.
[24] Amit Singh. 2006. Mac OS X internals: a systems approach. Addison-Wesley
[25] Cati Vaucelle, Hiroshi Ishii, and Joseph A Paradiso. 2009. Cost-effective wearable
sensor to detect EMF. In Proceedings of the SIGCHI Conference on Human Factors
in Computing Systems (CHI’09). ACM, 4309–4314.
[26] Edward J Wang, Tien-Jui Lee, Alex Mariakakis, Mayank Goel, Sidhant Gupta,
and Shwetak N Patel. 2015. Magnifisense: Inferring device interaction using
wrist-worn passive magneto-inductive sensors. In Proceedings of the 17th ACM
international conference on Ubiquitous computing (Ubicomp’15). ACM, 15–26.
[27] Wikipedia. 2017. CMOS. https://en.wikipedia.org/wiki/CMOS. (2017).
[28] Wikipedia. 2017. k-nearest neighbors algorithm. https://en.wikipedia.org/wiki/
Professional.
[29] Svante Wold, Kim Esbensen, and Paul Geladi. 1987. Principal component analysis.
Chemometrics and intelligent laboratory systems 2, 1-3 (1987), 37–52.
[30] Nan Xu, Fan Zhang, Yisha Luo, Weijia Jia, Dong Xuan, and Jin Teng. 2009. Stealthy
video capturer: a new video-based spyware in 3g smartphones. In Proceedings of
the 2rd ACM Conference on Security and Privacy in Wireless and Mobile Networks
(WiSec’09). ACM, 69–78.
[31] Mi Zhang and Alexander A Sawchuk. 2012. A preliminary study of sensing
appliance usage for human activity recognition using mobile magnetometer. In
Proceedings of the 14th ACM international conference on Ubiquitous computing
(Ubicomp’12). ACM, 745–748.
[32] Tong Zhu, Qiang Ma, Shanfeng Zhang, and Yunhao Liu. 2014. Context-free
attacks using keyboard acoustic emanations. In Proceedings of the 2014 ACM
SIGSAC Conference on Computer and Communications Security (CCS’14). ACM,
453–464.
[33] Li Zhuang, Feng Zhou, and J Doug Tygar. 2009. Keyboard acoustic emanations
revisited. ACM Transactions on Information and System Security 13, 1 (2009), 3.
[2] Alexa. 2017. Top Sites in China. http://www.alexa.com/topsites/countries/CN.
K-nearest_neighbors_algorithm. (2017).
used to breach the privacy of the mobile device user. In compari-
son, MagAttack breaches the privacy of a laptop user. Zhang et al.
exploit smartphone magnetometers to recognize nearby household
appliances [31]. In comparison, MagAttack aims to infer informa-
tion regarding nearby laptop user’s activities.
Side-channel Attacks on Recognizing Laptop User Activi-
ties. Prior work has exploited other forms of side-channels than
EM emissions for laptop user activity recognition. Zhuang et al.
and Zhu et al. use acoustic signals as the side-channel informa-
tion to infer user keystrokes [32, 33]. Clark et al. utilize the AC
power consumption of a laptop to recognize the web page that
a user browses [8]. Clark’s scheme requires the modification of
the power outlet for measuring AC power consumption. Lu et al.
tap the encrypted web traffic to recognize the web page that a
user browses [19]. In comparison, MagAttack uses EM emissions
as the side-channel information, which is non-intrusive and can
be implemented on the COTS mobile devices without hardware
modification.
8 CONCLUSION
In this paper, we propose MagAttack, which demonstrates the fea-
sibility of using a COTS mobile device to infer user activities on
a nearby laptop based on the EM side-channel leakage from the
laptop’s CPU. We implement MagAttack on the COTS smartphones
without hardware modification and evaluate it with 13 commonly
used applications and 50 top popular web pages in China. The ex-
perimental results show that MagAttack can conduct launching
detection, application recognition, and operation recognition with
high accuracy.
Future directions include designing specialized hardware to en-
large the detection distance and exploiting robust features across
various application versions.
ACKNOWLEDGMENTS
This work has been funded in part by China NSFC Grant 61702451,
ZJNSF Grant LGG19F020020.
REFERENCES
[1] Ali N Akansu and Richard A Haddad. 2001. Multiresolution signal decomposition:
transforms, subbands, and wavelets. Academic Press.
(2017).
[3] Adam J Aviv, Benjamin Sapp, Matt Blaze, and Jonathan M Smith. 2012. Practicality
of accelerometer side channels on smartphones. In Proceedings of the 28th Annual
Computer Security Applications Conference (ACSAC’12). ACM, 41–50.
[4] Sebastian Biedermann, Stefan Katzenbeisser, and Jakub Szefer. 2015. Hard drive
side-channel attacks using smartphone magnetic field sensors. In Proceedings of
the 19th International Conference on Financial Cryptography and Data Security
(FC’15). Springer, 489–496.
[5] Liang Cai and Hao Chen. 2011. TouchLogger: Inferring Keystrokes on Touch
Screen from Smartphone Motion.. In Proceedings of the 6th USENIX conference on
Hot Topics in Security (HotSec’11), Vol. 11. 9–9.
[6] Chih-Chung Chang and Chih-Jen Lin. 2011. LIBSVM: a library for support vector
machines. ACM Transactions on Intelligent Systems and Technology 2, 3 (2011),
27.
[7] Ke-Yu Chen, Sidhant Gupta, Eric C Larson, and Shwetak Patel. 2015. DOSE:
Detecting user-driven operating states of electronic devices from a single sens-
ing point. In Proceedings of the 2015 IEEE International Conference on Pervasive
Computing and Communications (PerCom’15). IEEE, 46–54.
[8] Shane S Clark, Hossen Mustafa, Benjamin Ransford, Jacob Sorber, Kevin Fu,
and Wenyuan Xu. 2013. Current events: Identifying webpages by tapping the
electrical outlet. In Proceedings of the 18th European Symposium on Research in
Computer Security (ESORICS’13). Springer, 700–717.
Session 4A: Mobile SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand294