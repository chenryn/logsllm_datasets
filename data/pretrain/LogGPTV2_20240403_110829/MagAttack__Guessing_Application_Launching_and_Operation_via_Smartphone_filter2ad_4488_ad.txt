### Applications and Their Popular Versions

We aim to train a comprehensive classifier using data from the library, which includes various applications and their popular versions. Additionally, we assume that an adversary can determine the victim's laptop model through observation and develop a corresponding classifier using a laptop of the same model. We believe this level of effort is feasible for adversaries attempting to track the behaviors of others.

### Impact of Device Distance

Due to the limited sensitivity of the built-in magnetometer, the captured electromagnetic (EM) signals weaken as the attack device moves away from the laptop. To investigate the effect of device placement, we varied the distance between the laptop and the phone. The classifier was trained with traces collected at a distance of 2.5 cm, and then tested with traces collected at various distances, starting from 1 cm and increasing in 0.5 cm increments. The performance of MagAttack at each distance is shown in Figure 10. Within a range of 1-3 cm, MagAttack achieves high accuracy (> 92%). If the attack distance exceeds this range, specialized hardware may be necessary to enhance signal reception.

### User Operation Recognition Results

#### Webpage Browsing Detection

For user operation recognition, we first detect web page browsing events. We used a script to open 50 web pages in a random order in the Chrome browser and recorded the exact opening times. Simultaneously, we captured the corresponding EM emissions and estimated the browsing times. The results in Figure 11(a) show that MagAttack can detect all 50 web pages with an average estimation error of less than 0.12 seconds.

#### Operation Recognition Performance

To evaluate the user operation recognition performance, we collected 2,500 samples for 50 web pages over three days. Figure 11(b) shows the accuracy of MagAttack in classifying different numbers of web pages. Specifically, MagAttack achieved 100% accuracy for 5 web pages, 96.7% for both 10 and 15 web pages, and 84.7% for all 50 web pages. We also investigated the impact of data freshness by collecting another 500 testing samples 20 days after the training samples. Based on these, MagAttack showed an average accuracy of 73.7% on "Old Data" (Figure 11(b)). The decrease in performance is attributed to the frequent updates of web page components, which affect the EM signals captured on different days.

### Scalability of MagAttack

We also examined the scalability of MagAttack across various operating systems and attack devices.

#### Impact of Different Operating Systems

To evaluate this, we conducted experiments on a Lenovo T440p laptop with Windows OS. We collected 50 samples for each of the following 10 popular applications: PowerPoint, Word, Excel, Chrome, Internet Explorer, Skype, KuGou, Windows Media Player, Adobe Reader, and MATLAB. Using 10-fold cross-validation, the results in Figure 12 show that MagAttack performs well on Windows OS, with an average recognition accuracy of 97.8%. This suggests that MagAttack is OS-independent and can target laptops with different operating systems.

#### Impact of Different Attack Devices

To evaluate the impact of different attack devices, we used two smartphones, an iPhone SE and a Nexus 5, to track the same laptop simultaneously. We collected 50 samples for each of the 10 applications and illustrated the EM signals of two applications (Microsoft Word and VLC Player) recorded by both smartphones in Figure 13. The results show that the EM signals of the same application recorded by different smartphones are quite similar. To quantitatively evaluate the impact, we trained the system using samples collected by one smartphone and tested it with samples from the other. Despite the different sampling rates (100 Hz for the iPhone SE and 50 Hz for the Nexus 5), MagAttack achieved an accuracy of 98%. This indicates that MagAttack is independent of the attack device model and magnetometer sampling rate.

### Discussion

In this section, we discuss the defense countermeasures against MagAttack and the limitations of our system.

#### Defense

We propose two defense strategies against MagAttack from both hardware and software perspectives.

**Hardware-based Defense:** One condition enabling MagAttack is the leakage of EM emissions from the laptop CPU, which can be captured by a nearby magnetic sensor. Enhancing electromagnetic shielding on laptops, such as using metal films to shield the CPU and other vital components, can reduce EM leakage.

**Software-based Defense:** The root cause of MagAttack is the generation of different EM signals by various instructions. To defend against this, executing a group of stochastic instructions in the background can add random noise to the EM signals generated by user activities, thereby interfering with MagAttack's recognition.

#### Limitations

Our implementation of MagAttack based on existing hardware has three main limitations:
1. **Close Attack Distance:** The attack distance between the laptop and the mobile device must be within 3 centimeters.
2. **Sensitivity of Built-in Magnetometers:** Current COTS mobile devices have limited sensitivity, making it challenging to capture weak EM signals at greater distances.
3. **CPU and OS Dependence:** Our algorithms may need retraining for different CPU architectures or operating systems. Future work could focus on discovering robust features across different CPUs and OSs.

### Related Work

#### Side-channel Attacks Based on EM Emissions

Pioneering work using EM leakage as a side-channel typically requires customized hardware [7, 12, 13, 25, 26]. For example, Genkin et al. extracted RSA keys from a Lenovo laptop using a near-field magnetic probe [12, 13], while Vaucelle et al. detected ambient electromagnetic fields using a magnetometer bracelet [25]. In contrast, MagAttack uses magnetometers in COTS smartphones with a sampling rate of around 100 Hz to detect and recognize user activities on a nearby laptop. Biedermann et al. presented EM side-channel attacks on hard drives using smartphone magnetic field sensors [4], but their approach is limited to disk operations and lacks underlying principles.

#### Side-channel Attacks Using Mobile Devices

Prior work has demonstrated several side-channel attacks using COTS mobile device sensors [3, 5, 22, 30, 31]. Xu et al. and Schlegel et al. showed side-channel attacks using cameras and microphones, respectively [30, 22]. Cai et al. and Aviv et al. used motion sensors to learn user tapping and gesture input [3, 5]. Jana et al. recognized web pages by tracking memory footprint variations on Android, which is intrusive as it requires running a parallel process with the browser [17]. These attacks breach the privacy of mobile device users, whereas MagAttack targets the privacy of laptop users.

### Conclusion

In this paper, we propose MagAttack, which demonstrates the feasibility of using a COTS mobile device to infer user activities on a nearby laptop based on EM side-channel leakage from the laptop's CPU. We implemented MagAttack on COTS smartphones without hardware modification and evaluated it with 13 commonly used applications and 50 top popular web pages in China. The experimental results show that MagAttack can perform launching detection, application recognition, and operation recognition with high accuracy.

Future directions include designing specialized hardware to increase the detection distance and exploring robust features across various application versions.

### Acknowledgments

This work was funded in part by China NSFC Grant 61702451 and ZJNSF Grant LGG19F020020.

### References

[References listed here]

---

This version of the text is more structured, coherent, and professional, with clear headings and subheadings to guide the reader through the content.