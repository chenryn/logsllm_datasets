before. For each address block, bdrmap ﬁrst probes the
ﬁrst (.1) IP address.
If bdrmap does not observe any
IP addresses in the traceroute path that map to an ex-
ternal network, or if the only address observed outside
the VP’s network was the address probed, then bdrmap
tries the next address in the block, up to ﬁve addresses
per block, to avoid interpreting potential third-party
addresses as neighbors (see §4).
Resolve IP address aliases to routers: We use
alias resolution techniques to reduce the interface-level
graph to a router-level graph reﬂecting the underlying
physical topology. This reduction allows us to include
constraints collected for all paths traversing a given
router. As bdrmap proceeds, it assembles sets of IP
addresses that might belong to the same router (can-
didate alias sets) and probes candidate pairs of IP ad-
dresses using alias resolution methods Ally and Merca-
tor. Ally [40] infers two IP addresses are aliases if the
386IP-ID values in responses from the two IP addresses sug-
gest they were derived from the same central counter;
we use UDP, TCP, ICMP-echo, and TTL-limited probes
to maximize our ability to infer aliases when routers are
unresponsive to speciﬁc types of probes. Mercator [15]
infers two IP addresses are aliases if the source address
of ICMP port unreachable responses is the same.
Infer point-to-point links: We use the preﬁxs-
can algorithm [26] to try to conﬁrm that we observe
the inbound interface of a router in traceroute, rather
than a third-party address. The preﬁxscan algorithm
assumes common peering practice: routers connected
with point-to-point links often use /30 or /31 subnets
between them. Preﬁxscan thus infers if an address in a
traceroute path corresponds to the interface on a router
that received the packet (the inbound interface), by at-
tempting to infer if its /30 or /31 subnet mate is an
alias of the previous hop. We also used the Ally and
Mercator techniques to infer the same alias pair.
Limit false aliases: Because Ally infers false aliases
if two IPID time series from diﬀerent central counters
temporarily overlap, we repeat Ally measurements ﬁve
times at ﬁve minute intervals. We only include alias
inferences if further Ally measurements do not reject a
shared counter hypothesis. We use MIDAR’s test [21]
that requires non-overlapping IPID samples to strictly
increase, rather than be within a fudge factor.
Build router-level graph: We use the alias reso-
lution data collected with Ally, Mercator, and Preﬁxs-
can to collapse the interface graph to a router graph.
When building a router using Ally and Preﬁxscan infer-
ences through transitive closure (i.e., if x1,x2 and x2,x3
are pairs of inferred aliases, then x1 and x3 are also
aliases) we only used pairs of IP addresses where none
of the measurements suggested a pair of IP addresses
were not aliases. For each router, we then identiﬁed
which interfaces we observed in ICMP time exceeded
messages in traceroute probes, as we focus on these in-
terfaces when making ownership inferences: ICMP time
exceeded messages are less likely than other ICMP mes-
sages (such as echo reply and destination unreachable)
to have third-party source IP addresses. For example, a
router will use the destination IP address from an echo
request as the source address of an echo reply, providing
no indication whose router the address is on.
Parts of our data collection process are similar to
Rocketfuel’s process [40]. However, Rocketfuel’s goal
was to map topologies of networks from outside. To
gain eﬃciency, Rocketfuel collected paths to customer
preﬁxes of each network, as these are more likely than
other preﬁxes to cross the network. bdrmap infers in-
terdomain connectivity for the network hosting the VP,
and uses doubletree’s stop set concept to gain eﬃciency.
bdrmap’s run-time depends on the diameter and com-
plexity of the hosting network: at 100pps, the shortest
run-time we observed was for a research and education
network at ≈12 hours. bdrmap’s run-time on large U.S.
broadband provider networks takes ≈48 hours.
Figure 3: Conceptual mapping of heuristics we
use to infer interdomain routers (§5.4.) Heuris-
tics are numbered in the order that bdrmap eval-
uates them for a given router.
5.4 Algorithm to infer interdomain links
We traverse each router in the graph structure, in the
order of observed hop distance from the VP, and apply
a set of heuristics (conceptually mapped in ﬁgure 3) to
infer the owner of each router. The overall approach of
bdrmap is to ﬁrst infer the routers operated by the net-
work hosting the VP, and then use as much information
as possible to make inferences for routers operated by
neighbor networks. bdrmap evaluates the heuristics in
the order we present them; the heuristics for inferring
neighbor routers are ordered by available constraints.
First, (§5.4.1) we try to infer if the router is oper-
ated by the AS hosting the VP, as this may allow us
to infer an adjacent router with interfaces numbered
from address space originated by the network hosting
the VP is actually operated by a neighbor AS. Because
we traverse the graph in order of observed hop distance,
we identify routers operated by the AS hosting the VP
(the near side of an interdomain link) before we infer
routers operated by neighbor ASes (the far side of an
interdomain link). We infer the near side of an interdo-
main link using only this ﬁrst step, and all subsequent
heuristics infer owners for the far side.
In this step,
Infer routersoperated bythe networkhosting the VPVPInfer operator ofneighbor routerswith ﬁrewallsInfer operator ofneighbor routersusing unroutedIP addressesx?xxx?Use IP-ASmappings to inferoperator ofneighbor routersaxbbaUse AS relationshipsto infer operator ofneighbor routersaxxcxInfer additionalaliases for routersin the networkhosting the VPCAABCCBInfer operator ofneighbor routersthat did not send TTLexpired messagesAcC§5.4.2§5.4.3§5.4.4§5.4.6§5.4.5§5.4.7§5.4.8§5.4.1xccabcbb387bdrmap also estimates ownership of address space not
originated in BGP by the network hosting the VP. We
have used VPs in several networks who do not announce
some of their own address space; fortunately these net-
works usually announce other infrastructure addresses
that bdrmap observes nearby in a traceroute. When
bdrmap observes an address in traceroute originated in
BGP by a VP AS, it assumes all previous addresses in
the traceroute path back to the VP were delegated to
the network hosting the VP, and identiﬁes the missing
address blocks by ﬁnding the match for each IP address
in the RIR-published delegation ﬁles.
Second, (§5.4.2) if we observed no other interfaces
adjacent to a router, and we only observed interfaces
numbered from address space originated by the net-
work hosting the VP, then we reason about ownership
based on the destination networks probed, as we have
no other constraints. Third, (§5.4.3) if we visit a router
where the address space it uses is unrouted, then we rea-
son about the router based on adjacent networks and
destination networks probed, as we have no other con-
straints. Fourth, (§5.4.4) if we visit a router where two
consecutive hops are routed by the same external AS,
we reason that the addresses do not represent a third-
party AS and infer the router is operated by the external
AS. Fifth, (§5.4.5) if we know of an existing relationship
from BGP, then we infer that router is likely operated
by that network, with exceptions made for third-party
addresses also inferred using BGP-derived relationships.
Sixth, (§5.4.6) we reason about ownership using IP-AS
mappings as we have exhausted better methods (§5.4.1-
§5.4.5). Seventh, (§5.4.7) we use our interdomain link
inferences to infer additional aliases for near-side routers
of interdomain links where we infer a point-to-point link
was used to establish connectivity to their neighbor.
Eighth, (§5.4.8) we reason about border routers that
did not send TTL-expired messages, as we can now
place these routers into a topological context using our
inferred router-level graph. Until §5.4.8, we only con-
sider router addresses from ICMP TTL-expired mes-
sages when we infer router ownership. As discussed in
§4, the source address of an ICMP echo reply is the
destination address probed, which can be any of the
interfaces on the router, whereas ICMP time exceeded
messages usually identify ingress interfaces [26].
Finally, for each router, bdrmap deﬁnes nextas as the
most common provider AS of all destination ASes it
probed through that router from that VP, if the router
appears in paths to multiple destination ASes. In the
ﬁrst three steps, we use nextas as a candidate owner AS
for these routers, reasoning that the AS may be provid-
ing transit to the ASes reached through these routers.
5.4.1 Infer routers operated by the network
hosting the VP (ﬁgure 4): Interfaces subsequent to a
router R1 that are also routed by the network hosting
the VP (AS X) usually imply R1 belongs to X. There-
fore, in step 1.2, if the IP addresses bdrmap observes are
originated by X (as for R1), and bdrmap observes other
Figure 4: (§5.4.1) Interfaces subsequent to R1
that are also routed by the network hosting the
VP usually imply R1 belongs to the VP.
Figure 5: (§5.4.2): It is not common for an ad-
dress from A to appear in a traceroute toward
A, because a ﬁrewall usually discards packets at
the edge of A.
IP addresses originated by X subsequent in the path
(e.g., x2 and x3 on routers R2 and R3), then bdrmap in-
fers R1 is operated by X. An exception is when neighbor
A is multihomed to X via routers adjacent to each other
– step 1.1 in ﬁgure 4, routers R1 and R2. If bdrmap ob-
served those routers as x1 and x2 in a traceroute path,
and bdrmap observed addresses originated by A also ad-
jacent to R1, we infer A operates both R1 and R2. To
limit false inferences, we consider owner AS inferences
we would have made for routers subsequent to R1:
if
any is a customer of X, but not a known neighbor of A,
then we infer X operates R1.
As a result of these heuristics, we also infer that any
other router bdrmap observes with addresses originated
by the network hosting the VP is operated by a neigh-
bor network. That is, the hosting network provided the
address space for the interconnection link to the neigh-
bor. In §5.6 we show this logic is nearly always correct.
5.4.2 Infer operator of neighbor routers with
ﬁrewalls (ﬁgure 5): It is not common for an address
from AS A to be recorded in a traceroute path toward A,
because a ﬁrewall usually discards probe packets at the
edge of A. Therefore, the last router observed by bdrmap
1.1 R1 has interface in x, subsequent interface in x, but majority in A and nextas A Assign A1.2 subsequent interface in X? yesx1multihomedstep 1VPR1x1R2R3R4nextas AR1x2a1a2Assign XﬁrstR1x1VPx1R1R2R3x2x3yesno2.1 no subsequent routers observed?x1Assign Ax1yesR1nextas AR1ﬁrewallstep 2VP388(§5.4.4) IP-AS mappings can lead
Figure 7:
to incorrect
in the presence of
third-party addresses, but subsequent interfaces
routed by the same network suggest a1 is not a
third-party address.
inferences
5.4.4 Use IP-AS mappings to infer operator
of neighbor routers (ﬁgure 7): Using IP-AS map-
pings to infer ownership can be error-prone because a
router may respond with an IP address that represents
a third-party (see §4). However, we hypothesize that
we are unlikely to observe two third-party addresses in
a row, so if we observe addresses originated by the same
AS at two consecutive hops, we infer that AS is the in-
terconnecting party.
Therefore, if all interface addresses bdrmap observes
on router R1 map to the same origin AS A in BGP, and
at least one adjacent router R2 subsequent in a tracer-
oute path also has an address in A, then we infer A
operates R1 (step 4.1). Similarly, if bdrmap observes
a border router R1 operated by neighbor A using ad-
dresses that the network hosting our VP (X) originates
in BGP, and bdrmap observes two consecutive routers
R2 and R3 with interface addresses originated in BGP
by external network A, then we also infer A operates
R1 (step 4.2).
5.4.5 Use AS relationship inferences to infer
operator of neighbor routers: (ﬁgure 8): If we do
not observe two hops with addresses from the same AS
(§5.4.4), we have less router-level information to reason
about router ownership. Therefore, we use AS relation-
ships (§5.2) to guide router operator inference.
We ﬁrst infer if the IP-AS mapping of a router inter-
face is a third-party AS mapping, as follows. If bdrmap
observed an address on R2 that A originates in BGP,
but bdrmap only observed R2 on paths toward B, it is
possible the address bdrmap observed on R2 is a third-
party address.
If A is a provider of B (per our BGP
inference), then we infer R2 used a route from their
provider to respond to traceroute (a third-party ad-
dress) and that AS B operates R2. If (step 5.1) bdrmap
only observed addresses that the network hosting our
VP (X) originated in BGP on a router R1 preceding
R2, then we also infer that AS B operates R1. Similarly,
Figure 6: (§5.4.3): Some operators do not route
infrastructure IP addresses in BGP, so we in-
fer their routers based on subsequent routed ad-
dresses in traceroute paths.
in a traceroute path to A (and A’s siblings) is usually
A’s edge router, as is the case for router R1 operated
by A. If bdrmap observes R1 with interfaces originated
by the network hosting the VP (X), and no adjacent
interfaces in A, it assumes X provided the address for
interconnection to A and infers R1 is operated by A.
5.4.3 Infer operator of neighbor routers that
use unrouted IP addresses (ﬁgure 6): Some opera-
tors do not advertise routes to the IP addresses on some
of their routers. This practice can hamper inference of
border routers because the origin AS can provide con-
straints to narrow down the owner of the router. There
are two related scenarios that bdrmap addresses.
A neighbor router R1 might have addresses that our
VP-hosting network (X) originates in BGP, but the ad-
dresses observed on subsequent routers (e.g., R2) might
be unrouted. Or, not illustrated in ﬁgure 6, R1 might
have unrouted addresses but be connected to a router
we have previously inferred to belong to X. In both
cases, bdrmap assembles the set of ASes that originate
the ﬁrst routed interfaces in traceroute paths after R1,
and uses these interfaces to infer R1’s operator. If there
is only one AS (step 3.1), bdrmap infers that AS op-
erates R1.
If there are multiple (step 3.2), for each
AS in the set bdrmap identiﬁes the providers of the AS
using BGP-derived relationships, and infers that R1 is
operated by the most frequent provider AS among the
provider AS set, reasoning that this AS provides tran-
sit to networks observed by bdrmap. If bdrmap does not
observe any routed addresses in traceroute paths after
the border router, it infers that nextas operates R1.
3.1 unannounced address space followed addresses only in A?step 3Assign AyesunroutedR1x1Assign CyesunroutedR1x1Assign DyesunroutedR1x1R1R2Rnx1a1?13.2 subsequent majority common provider C?R1R2Rnx1a1?1RmCAB3.3 no subsequent topology observed?R1R2x1?1nextas Dnonob14.1 All interfaces in A and least one subsequent interface in A?Assign Ayesa1a2onenet4.2 two subsequent interfaces in A?yesstep 4R1R2x1VPR1a1R2a2R3x1R1VPAssign AR1a1a2oneneta3no389Figure 9: (§5.4.6) If there are multiple possible
IP-AS mappings, we infer the neighbor router is
operated by the AS with the most subsequent
interfaces.
Figure 8: (§5.4.5) AS relationship inferences de-
rived from public BGP data assist in identifying
the operator of a router responding with a third-
party addresses, as well as known peers and cus-
tomers of the network hosting the VP.
if (step 5.2) bdrmap instead observed R1 with address
space originated by A only on paths to B, then we infer
B operates R1.
For steps 5.3, 5.4, and 5.5, we start with R1 which we
observed using an address from the network hosting our
VP (X). If (step 5.3) adjacent interfaces only have ad-
dresses originated in BGP by a known peer or customer
A, then we infer that AS A operates R1. We make these
inferences after detecting third-party addresses because
a neighbor might use a third-party address that hap-
pens to be a known peer or customer of X. If (step
5.4) adjacent interfaces only have addresses originated
in BGP by a network A which is not an inferred peer
or customer of X, but B is a provider of A and X is a
provider of B, then bdrmap infers AS B operates R1; sib-
ling AS relationships (§4) can cause this scenario, where
the same organization operates ASes A and B. If none
of the above hold, and (step 5.5) subsequent interfaces
are originated in BGP by a single AS A, then we infer
that A operates R1.
Figure 10: (§5.4.7) Interdomain links are usu-
ally point-to-point links between two routers, so
multiple apparent IP links to the same neighbor
router are likely to be caused by IP aliases.
5.4.6 Use IP-AS mappings to infer operator
of neighbor routers in ambiguous scenarios (ﬁg-
ure 9): Some neighbor routers are also border routers