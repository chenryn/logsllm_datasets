When using Elasticsearch Java API version 1.4.3, I have encountered an issue that seems similar to the one I previously reported in yakaz/elasticsearch-action-updatebyquery#27. However, this time, the problem appears to be with the official API.

Here is a summary of the issue:

```java
// Construct a constant score query with a term filter for "user" = "kimchy"
val qb = QueryBuilders.constantScoreQuery(FilterBuilders.termFilter("user", "kimchy"));

// Check if a document matching the query exists in the index (expected: false, as there is no such document)
boolean exists1 = client.prepareExists("myIndex")
    .setTypes("myType")
    .setQuery(qb)
    .execute().actionGet().exists(); // returns false, which is expected

// Check if a document matching the query exists in the index using ExistsRequest (unexpected: true)
boolean exists2 = client.exists(client.prepareExists("myIndex")
    .setTypes("myType")
    .setQuery(qb)
    .request()).actionGet().exists(); // returns true, which is incorrect for an empty (but existing) index/type
```

The `exists2` check incorrectly returns `true` for any query on an empty (but existing) index and type, which is clearly incorrect.

I believe the issue lies with the `ExistsRequestBuilder.request()` method, as it does not correctly handle the query. My Elasticsearch wrapper expects an `ExistsRequest`, so I need to ensure that the request is properly constructed and returned.

If you have any insights or suggestions on how to resolve this, please let me know.