  * Forms.HTML:Image.1 / {5512D112-5CC6-11CF-8D67-00AA00BDCE1D}
  * Forms.HTML:Submitbutton.1 / {5512D110-5CC6-11CF-8D67-00AA00BDCE1D}
对于Shell.Explorer.1对象来说，可以从该对象中提取LNK文件并检索ID列表，从而找出单击对象时所打开的内容。我们的GitHub页面上的.NET类库[ShellLink](https://github.com/securifybv/ShellLink
"ShellLink")可用于从LNK文件中读取ID列表。通常来说，LNK文件是从持久化的Shell.Explorer.1对象的偏移量76处开始的。
HTML
Forms对象更容易解析，因为它们是带有16字节GUID的UTF-16编码的HTML片段。防御者应该知道，在Office文档中存储对象的方法有许多种。例如，ActiveX控件也可以嵌入为PersistPropertyBag对象，其中对象的属性设置在XML文件中（例如，activeX1.xml）。
**小结**
* * *
当前，诱骗受害者运行恶意可执行文件仍然是一种非常流行的攻击方法。由于微软不断提高Office和Windows的安全标准，因此，攻击者应该寻找其他方法来攻击受害者。在本文中介绍的两个备选方案中，Shell.Explorer.1技术似乎对攻击者来说最为有用，因为打开从Internet上下载的文档时，会显示针对HTML
Forms对象的附加警告对话框。
众所周知，人们可能会被欺骗而点击Office文档中的“Enable Editing/Enabled
Content”按钮。不难想象，用户也会点击其他警告对话框，这在过去的[DDE](https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/ "DDE")攻击和最近利用setting content-ms文件的攻击中也有所体现。
红队（和攻击者）总是在寻找入侵组织的新方法，同时，他们从不不关心这些方法是否符合安全修复的标准。如果他们看到机会，他们就会趁虚而入。作为一名防守者，需要做到知己知彼，因为只有了解的对手的攻击手法，才能制定更好的防御措施。当然，防御者的工作不应止步于此，还要进一步通过部署应用程序白名单和[攻击面减少规则](https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-exploit-guard/attack-surface-reduction-exploit-guard
"攻击面减少规则")（或类似替代方案）之类的措施来提高攻击者的门槛。但更重要的是，确保能够了解网络上发生的事情，并假设组织已经遭到入侵并寻找入侵者。