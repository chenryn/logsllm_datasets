### 优化后的文本

#### MySQL客户端安装
`mysqladmin`工具应该作为MySQL客户端的一部分被安装在你的系统中。

#### 数据库度量值的访问
获取数据库度量值的方法因数据库而异。虽然服务器度量值也很有用，但更重要的是数据库本身的度量值。MySQL和PostgreSQL都提供了相应的功能来获取这些度量值。

#### PostgreSQL配置
如果你发现PostgreSQL仅监听了127.0.0.1:5432地址，那么你需要重新配置它，以使其监听你所需的网络地址或所有网卡。你可以通过运行以下命令来检查当前的监听状态：
```bash
$ sudo netstat -lntp | grep :5432
```
如果结果显示PostgreSQL只监听了本机IP（127.0.0.1:5432），则只有在同一台服务器上的进程才能访问该数据库。这种设置通常是一种安全模式。如果需要其他服务器也能访问数据库，你需要修改配置文件并重启服务。

#### 获取MySQL度量值
为了从MySQL中获取度量值，可以使用`mysqladmin`工具。例如：
```bash
$ mysqladmin -u root -p status
Enter password:
Uptime: 2680987  Threads: 1  Questions: 17494181  Slow queries: 0  Opens: 2096  Flush tables: 1
```
对于更详细的信息，可以使用`extended-status`命令：
```bash
$ mysqladmin -u root -p extended-status
```

#### PostgreSQL性能统计数据
PostgreSQL使用不同的方法收集和列出性能统计数据。首先，确保在`postgresql.conf`文件中启用了`track_activities`和`track_counts`选项。这些选项默认通常是开启的，但有时可能需要手动启用。

一旦开启了统计数据收集功能，相关数据将存储在数据库内的特定表中。以下是一些有用的表：

- **pg_stat_activity**：显示当前运行的服务器进程信息。
  ```sql
  SELECT * FROM pg_stat_activity;
  ```
- **pg_stat_database**：存储数据库的统计信息，如连接数、事务提交和回滚的数量等。
  ```sql
  SELECT * FROM pg_stat_database;
  ```
- **pg_stat_all_tables**：为每个表存储一些统计信息，包括顺序扫描、索引扫描等。
  ```sql
  SELECT * FROM pg_stat_all_tables;
  ```

#### 识别慢查询
当调试数据库问题时，最常见的问题之一是“为什么数据库这么慢？”这通常与慢查询有关。MySQL和PostgreSQL都有机制记录慢查询，以便后续分析。

#### 启用MySQL慢查询日志
要启用MySQL的慢查询日志功能，需要设置两个变量：
```ini
log_slow_queries = /var/log/mysql/mysql-slow.log
long_query_time = 2
```
然后重启MySQL服务。这样，所有执行时间超过2秒的查询将被记录到指定的日志文件中。

#### 终止慢查询
如果你确定某个查询导致了系统缓慢，可以通过`SHOW PROCESSLIST`命令找到该查询的进程ID，然后使用`KILL`命令终止该进程。例如：
```sql
KILL <process_id>;
```

通过以上步骤，你可以更好地管理和优化数据库性能。