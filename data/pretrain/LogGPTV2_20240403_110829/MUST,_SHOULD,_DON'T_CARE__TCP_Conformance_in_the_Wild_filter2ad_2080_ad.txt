following test case execution on a per target basis, and skip subsequent tests if
a target’s connectivity is impaired.
Surprisingly, the UrgentPointer test shows the highest failure rate among all
tests. That is, segments ﬂagged as urgent are not correctly processed. In other
words, ﬂagging data as urgent limits connectivity. We ﬁnd over ∼7% of hosts
failing in the Censys dataset, where ISPs again dominate the ranking. Only
about 1.2% of these failures actively terminated the connection with a RST,
while the vast majority silently discarded the data without acknowledging it.
Looking at Alexa and CDNs, we again ﬁnd an Amazon AS at the top. Here,
we randomly sampled the failed hosts to investigate the kind of services oﬀered
by them. At the top of the list, we discovered services that were proxied by a
Vegur [14], respective Cowboy [4], proxy server that seem to be used in tandem
with the Heroku [6] cloud platform. Even though we were unable to ﬁnd how
Heroku precisely operates, we suspect a high-performance implementation that
might simply not implement the urgent mechanism at all.
Takeaway: While unknown ﬂags are often correctly handled, they can reduce
reachability, especially when set on SYNs. The use of the urgent pointer resulted
in the highest observed failure rate by hosts that do not process data segments
ﬂagged as urgent. Thus, using the reserved ﬂags or setting the urgent pointer
limits connectivity in the Internet.
We therefore posit to remove the mandatory implementation requirement of
the urgent pointer from the RFC to reﬂect its deprecation status, and thus explic-
itly state that its usage can break connectivity. Future protocol standards should
therefore be accompanied by detailed socket interface speciﬁcations, e.g., as has
been done for IPv6 [31,54], to avoid RFC misconceptions. Moreover, we started
a discussion within the IETF, addressing the issue encountered with the missing
formal MUST requirement of unknown ﬂags, which potentially led and/or will
lead to diverging implementations [11]. Additionally, we proposed a new MUST
requirement, removing ambiguities in the context of future recommended, but
not required, TCP extensions which allocate reserved bits [12].
Alexa: Does www. matter? It is known that www.domain.tld and
domain.tld can map to diﬀerent hosts [16], e.g., the CDN host vs. the ori-
gin server, where it is often implicitly assumed that both addresses exhibit the
same behavior. However, 4.89% (11.4k) of the Alexa domains with and without
MUST, SHOULD, DON’T CARE: TCP Conformance in the Wild
135
www. preﬁx show diﬀerent conformance levels to at least one test. That is, while
the host with the www. preﬁx can be conformant, the non-preﬁxed host could
not, and vice versa. Most of these non-conformance issues are caused by TCP
ﬂags, for which we have seen that they can impact the reachability of the host.
That is, 53.3% of these domains failed the reserved ﬂags test, and 58% the urgent
pointer test (domains can be in both sets). Thus, a website can be unreachable
using one version and reachable by the other.
Takeaway: While the majority of Alexa domains are conformant, the ability to
reach a website can diﬀer whether or not the www. preﬁx is used.
5 Conclusion
This paper presents a broad assessment of TCP conformance to mandatory
MUST requirements. We uncover a non-negligible set of Internet hosts and paths
that do not adhere to even basic requirements. Non-conformance already exists at
the OS-level, which we uncover in controlled testbed evaluations: only two tested
stacks (Linux and lwIP) pass all tests. Surprisingly, others (including macOS and
Windows) fail in at least one category each. A certain level of non-conformance is
therefore expected in the Internet and highlighted by our active scans. First, we
observe hosts that do not correctly handle checksums. Second, while TCP options
show the highest level of conformance, we still ﬁnd cases of middlebox inference,
mostly MSS injectors and option padding removers—primarily in ISP networks
hinting at home gateways. Moreover, and most worrisome, using reserved ﬂags
or setting the urgent pointer can render the target host unreachable. Last, we
observe that 4.8% of Alexa-listed domains show diﬀerent conformance levels
when the www. preﬁx is used, or not, of which more than 50% can be attributed
to TCP ﬂag issues—which can prevent connectivity. Our results highlight that
conformance to even fundamental protocol requirements should not be taken for
granted but instead checked regularly.
Acknowledgments. This work has been funded by the DFG as part of the CRC 1053
MAKI within subproject B1. We would like to thank Akamai Technologies for feedback
on our measurements, Censys for contributing active scan data, and our shepherd
Robert Beverly and the anonymous reviewers.
References
1. Contiki-NG TCP URG Pull Request. https://github.com/contiki-ng/contiki-ng/
pull/1173
2. Contiki-NG: The OS for Next Generation IoT Devices. https://github.com/
contiki-ng
3. Contiki OS. https://github.com/contiki-os
4. Cowboyku. https://github.com/heroku/cowboyku
5. Dataset to “MUST, SHOULD, DON’T CARE: TCP Conformance in the Wild”.
https://doi.org/10.18154/RWTH-2020-00809
136
M. Kosek et al.
6. Heroku platform. https://www.heroku.com/
7. lwIP - A Lightweight TCP/IP stack. http://savannah.nongnu.org/projects/lwip/
8. Seastar. https://github.com/scylladb/seastar
9. Seastar: Virtio device reports features not supported by the OS. https://github.
com/scylladb/seastar/issues/719
10. tcp(7) - Linux man page. https://linux.die.net/man/7/tcp
11. TCPM Mailinglist: RFC793bis draft 14 reserved bits: problem statement. https://
mailarchive.ietf.org/arch/msg/tcpm/s0LtY3Ce3QBBAkJ DuSH5VDNFMY
12. TCPM Mailinglist: RFC793bis draft 14 reserved bits: proposal. https://
mailarchive.ietf.org/arch/msg/tcpm/ jpUQx0AjByR3UOgyX88RWoTxL0
13. uIP. https://github.com/adamdunkels/uip
14. Vegur: Http proxy library. https://github.com/heroku/vegur
15. Virtio: Paravirtualized drivers for KVM/Linux. https://www.linux-kvm.org/page/
Virtio
16. Alashwali, E.S., Szalachowski, P., Martin, A.: Does “www.” mean better transport
layer security? In: ACM International Conference on Availability, Reliability and
Security (ARES) (2019). https://doi.org/10.1145/3339252.3339277
17. Alexa Internet: About us. https://www.alexa.com/about
18. Bauer, S., Beverly, R., Berger, A.: Measuring the state of ECN readiness in servers,
clients, and routers. In: ACM Internet Measurement Conference (IMC) (2011).
https://doi.org/10.1145/2068816.2068833
19. Beverly, R.: A robust classiﬁer for passive TCP/IP ﬁngerprinting. In: Barakat, C.,
Pratt, I. (eds.) PAM 2004. LNCS, vol. 3015, pp. 158–167. Springer, Heidelberg
(2004). https://doi.org/10.1007/978-3-540-24668-8 16
20. Bradner, S.O.: Key words for use in RFCs to indicate requirement levels. RFC
2119, March 1997. https://doi.org/10.17487/RFC2119
21. Cardwell, N., et al.: packetdrill: Scriptable network stack testing, from sockets to
packets. In: USENIX Annual Technical Conference (ATC) (2013). https://www.
usenix.org/conference/atc13/technical-sessions/presentation/cardwell
22. Carpenter, B., Brim, S.: Middleboxes: taxonomy and issues (2002). https://doi.
org/10.17487/RFC3234
23. Craven, R., Beverly, R., Allman, M.: A middlebox-cooperative TCP for a non end-
to-end internet. In: ACM SIGCOMM (2014). https://doi.org/10.1145/2619239.
2626321
24. Detal, G., Hesmans, B., Bonaventure, O., Vanaubel, Y., Donnet, B.: Revealing
middlebox interference with tracebox. In: ACM Internet Measurement Conference
(IMC) (2013). https://doi.org/10.1145/2504730.2504757
25. Durumeric, Z., Adrian, D., Mirian, A., Bailey, M., Halderman, J.A.: A search
engine backed by internet-wide scanning. In: ACM Conference on Computer and
Communications Security (CCS) (2015). https://doi.org/10.1145/2810103.2813703
26. Durumeric, Z., Wustrow, E., Halderman, J.A.: ZMap: Fast Internet-wide scanning
and its security applications. In: USENIX Security Symposium (2013). https://
www.usenix.org/conference/usenixsecurity13/technical-sessions/paper/durumeric
Internet-draft draft-
ietf-tcpm-rfc793bis-14. Internet Engineering Task Force, July 2019. https://
datatracker.ietf.org/doc/html/draft-ietf-tcpm-rfc793bis-14. Work in Progress
27. Eddy, W.: Transmission control protocol speciﬁcation.
28. Edeline, K., Donnet, B.: A bottom-up investigation of the transport-layer ossiﬁ-
cation. In: Network Traﬃc Measurement and Analysis Conference (TMA) (2019).
https://doi.org/10.23919/TMA.2019.8784690
MUST, SHOULD, DON’T CARE: TCP Conformance in the Wild
137
29. Floyd, S., Ramakrishnan, D.K.K., Black, D.L.: The addition of explicit congestion
notiﬁcation (ECN) to IP. RFC 3168, September 2001. https://doi.org/10.17487/
RFC3168
30. Fyodor: Remote OS detection via TCP/IP stack ﬁngerprinting (1998). https://
nmap.org/nmap-ﬁngerprinting-article.txt
31. Gilligan, R.E., McCann, J., Bound, J., Thomson, S.: Basic socket interface exten-
sions for IPv6. RFC 3493, March 2003. https://doi.org/10.17487/RFC3493
32. Honda, M., Nishida, Y., Raiciu, C., Greenhalgh, A., Handley, M., Tokuda, H.: Is it
still possible to extend TCP? In: ACM Internet Measurement Conference (IMC)
(2011). https://doi.org/10.1145/2068816.2068834
33. HTTP Archive: About HTTP Archive. https://httparchive.org/about
34. Knutsen, A., Ramaiah, A., Ramasamy, A.: TCP option for transparent middlebox
negotiation (2013). https://tools.ietf.org/html/draft-ananth-middisc-tcpopt-02
35. K¨uhlewind, M., Walter, M., Learmonth, I.R., Trammell, B.: Tracing internet path
transparency. In: Network Traﬃc Measurement and Analysis Conference (TMA)
(2018). https://doi.org/10.23919/TMA.2018.8506532
36. K¨uhlewind, M., Neuner, S., Trammell, B.: On the state of ECN and TCP options on
the internet. In: Roughan, M., Chang, R. (eds.) PAM 2013. LNCS, vol. 7799, pp.
135–144. Springer, Heidelberg (2013). https://doi.org/10.1007/978-3-642-36516-
4 14
37. Langley, A.: Probing the viability of TCP extensions (2008). http://www.
imperialviolet.org/binary/ecntest.pdf
38. Mandalari, A.M., Lutu, A., Briscoe, B., Bagnulo, M., Alay, O.: Measuring ECN++:
good news for ++, bad news for ECN over mobile. IEEE Commun. Mag. 56(3),
180–186 (2018). https://doi.org/10.1109/MCOM.2018.1700739
39. Mandalari, A.M., Bagnulo, M., Lutu, A.: TCP Fast Open: initial measurements.
In: ACM CoNEXT Student Workshop (2015)
40. Marinos, I., Watson, R.N., Handley, M.: Network stack specialization for perfor-
mance. In: ACM SIGCOMM (2014). https://doi.org/10.1145/2619239.2626311
41. Marinos, I., Watson, R.N., Handley, M., Stewart, R.R.: Disk, Crypt, Net: rethink-
ing the stack for high-performance video streaming. In: ACM SIGCOMM (2017).
https://doi.org/10.1145/3098822.3098844
42. Medina, A., Allman, M., Floyd, S.: Measuring interactions between transport pro-
tocols and middleboxes. In: ACM Internet Measurement Conference (IMC) (2004).
https://doi.org/10.1145/1028788.1028835
43. Medina, A., Allman, M., Floyd, S.: Measuring the evolution of transport protocols
in the internet. SIGCOMM Comput. Commun. Rev. 35(2), 37–52 (2005)
44. Paasch, C.: Network support for TCP fast open. Presentation at NANOG 67 (2016)
45. Padhye, J., Floyd, S.: On inferring TCP behavior. In: ACM SIGCOMM (2001).
https://doi.org/10.1145/383059.383083
46. Piraux, M., De Coninck, Q., Bonaventure, O.: Observing the evolution of QUIC
implementations. In: ACM CoNEXT Workshop on the Evolution, Performance,
and Interoperability of QUIC (EPIQ) (2018). https://doi.org/10.1145/3284850.
3284852
47. Postel, J.: Transmission control protocol. RFC 793, September 1981. https://doi.
org/10.17487/RFC0793
48. R¨uth, J., Hohlfeld, O.: Demystifying TCP initial window conﬁgurations of content
distribution networks. In: Network Traﬃc Measurement and Analysis Conference
(TMA) (2018). https://doi.org/10.23919/TMA.2018.8506549
138
M. Kosek et al.
49. R¨uth, J., Bormann, C., Hohlfeld, O.: Large-scale scanning of TCP’s initial win-
dow. In: ACM Internet Measurement Conference (IMC) (2017). https://doi.org/
10.1145/3131365.3131370
50. R¨uth, J., Kunze, I., Hohlfeld, O.: TCP’s initial window—deployment in the wild
and its impact on performance. IEEE Trans. Netw. Serv. Manag. (TNSM) (2019).
https://doi.org/10.1109/TNSM.2019.2896335
51. R¨uth, J., Zimmermann, T., Hohlfeld, O.: Hidden treasures – recycling large-scale
internet measurements to study the internet’s control plane. In: Choﬀnes, D., Bar-
cellos, M. (eds.) PAM 2019. LNCS, vol. 11419, pp. 51–67. Springer, Cham (2019).
https://doi.org/10.1007/978-3-030-15986-3 4
52. Scheitle, Q., et al.: A long way to the top: signiﬁcance, structure, and stability
of internet top lists. In: ACM Internet Measurement Conference (IMC) (2018).
https://doi.org/10.1145/3278532.3278574
53. Smart, M., Malan, G.R., Jahanian, F.: Defeating TCP/IP stack ﬁngerprinting. In:
USENIX Security Symposium (2000)
54. Stevens, W.R., Thomas, M., Nordmark, E., Jinmei, T.: Advanced sockets applica-
tion program interface (API) for IPv6. RFC 3542, June 2003. https://doi.org/10.
17487/RFC3542
55. Stone, J., Partridge, C.: When the CRC and TCP checksum disagree. In: ACM
SIGCOMM (2000). https://doi.org/10.1145/347059.347561