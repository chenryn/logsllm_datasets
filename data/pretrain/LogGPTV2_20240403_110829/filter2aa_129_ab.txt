### 技巧提升效率

#### 漏洞利用工具 – sqlmap
- **获取数据库列表**:
  ```bash
  sqlmap -r package --dbs
  ```
- **获取指定数据库的表名**:
  ```bash
  sqlmap -r package -D xxx --tables
  ```
- **获取指定表的列名**:
  ```bash
  sqlmap -r package -D xxx -T yyy --columns
  ```
- **导出指定表的数据**:
  ```bash
  sqlmap -r package -D xxx -T yyy -C zzz --dump
  ```
- **导出所有数据库的数据**:
  ```bash
  sqlmap -r package --dump-all
  ```
- **获取操作系统 Shell**:
  ```bash
  sqlmap -r package --os-shell
  ```

#### 漏洞利用 – SQL 注入 (SQLi)
- **如何防御 SQLi?**
  - **参数化查询**:
    使用参数化查询可以有效防止 SQL 注入攻击。例如在 PHP 中：
    ```php
    $stmt = $dbh->prepare("INSERT INTO REGISTRY (name, value) VALUES (:name, :value)");
    $stmt->bindParam(':name', $name);
    $stmt->bindParam(':value', $value);
    $name = 'one';
    $value = 1;
    $stmt->execute();
    ```

#### 常见安全问题 – 第三轮：跨站脚本攻击 (XSS)
- **XSS (Cross-Site Scripting)**:
  XSS 是一种注入攻击，通过注入恶意 HTML 或 JavaScript 代码，攻击者可以在受害者的浏览器中执行任意代码。
  - **存储型 XSS**:
    攻击者的恶意脚本被服务器存储在数据库中，当受害者访问该页面时，恶意脚本会在其浏览器中执行。
  - **反射型 XSS**:
    攻击者的恶意脚本通过 URL 参数传递，必须让受害者点击特定的链接才能触发。

- **低成本的小技巧**:
  在服务器响应中添加 `X-XSS-Protection` 头，可以帮助过滤大部分可疑字符串，降低 XSS 攻击的风险。
  - **相关资料**:
    [MDN Web Docs: X-XSS-Protection](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection)

- **高强度防御**:
  使用 `htmlentities` 函数对用户输入进行转义，确保显示的内容不会被执行为 HTML 或 JavaScript 代码。
  - **相关资料**:
    [W3C: Character Entity References in HTML 4.0](https://dev.w3.org/html5/html-author/charref)

#### 常见安全问题 – 第六轮：文件上传漏洞 (FU)
- **文件上传权限问题**:
  如果网站没有正确限制上传文件的类型，攻击者可以通过上传恶意文件（如 PHP 脚本）来获得一个 Web Shell。
  - **案例分享**:
    - **请假系统的文件上传漏洞**:
      - **第一次修补**: 检查文件扩展名是否为 `.php`。
        ```php
        if(substr($filename, -3) == "php"){}
        ```
      - **绕过方法**: 上传 `webshell.PHP` 或 `XSS.html`。
      - **第二次修补**: 使用正则表达式严格检查文件名。
        ```php
        // 示例代码
        if (preg_match('/\.php$/i', $filename)) {
            // 处理逻辑
        }
        ```

#### Common Vulnerabilities and Exposures (CVE)
- **CVE 数据库**:
  CVE 是由美国非营利组织 MITRE 维护的一个资安漏洞数据库，每个漏洞都有一个唯一的编号，例如 `CVE-2017-5638`。
  - **相关资料**:
    [MITRE CVE Database](https://cve.mitre.org/)

#### 漏洞利用步骤
1. **架设环境**:
   根据需要使用 Docker 或虚拟机搭建测试环境。
2. **寻找 POC (Proof of Concept)**:
   - 网络搜索 POC。
   - 使用漏洞扫描框架（如 Nmap NSE 或 Metasploit）进行检测或入侵。
   - 了解原理后手写 Python 脚本。
3. **目标选择**:
   使用 Google Hacking 技术或其他情报收集技巧找到目标。
   - **关键字**: OSINT (Open Source Intelligence)
   - **示例**:
     ```plaintext
     intitle:"Struts Problem Report" intext:"development mode is enabled."
     ```

#### Bug Bounty 与漏洞通报
- **Bug Bounty**:
  企业悬赏奖金请黑客们帮忙进行渗透测试。
  - **平台**:
    - [Bugcrowd](https://bugcrowd.com)
    - [HackerOne](https://hackerone.com)
    - [Vulbox](https://www.vulbox.com)

- **漏洞通报平台**:
  - [HITCON ZeroDay](https://zeroday.hitcon.org)

#### 更多练习网站
- **线上解题网站**:
  - [BambooFox](https://bamboofox.cs.nctu.edu.tw/)
  - [Game of Hacks](http://www.gameofhacks.com/)
  - [Hack This Site](https://www.hackthis.co.uk/)
  - [Pwnable.kr](http://pwnable.kr/)
  - [Pwnable.tw](http://pwnable.tw/)

- **漏洞平台 (自己架起来打)**:
  - [WebGoat](https://github.com/WebGoat/WebGoat)
  - [DVWA](https://github.com/digininja/DVWA)
  - [Mutillidae](https://github.com/webpwnized/mutillidae)

#### 社团资源
- **社团部落格**: [BambooFox Blog](https://bamboofox.github.io/)
- **社团解题系统**: [BambooFox CTF Platform](https://bamboofox.cs.nctu.edu.tw/)
- **摊位位置**: MOPCON 和 UCCU (好多锁) 之间

#### Q&A
如有任何问题，请随时提问。