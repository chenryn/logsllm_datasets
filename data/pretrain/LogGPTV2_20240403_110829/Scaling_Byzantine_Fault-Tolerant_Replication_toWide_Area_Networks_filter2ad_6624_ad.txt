 50
 40
 30
 20
 10
 0
Steward
BFT
 0
 5
 10
 15
 20
 25
 30
)
s
m
(
y
c
n
e
t
a
L
e
t
a
d
p
U
 2500
 2000
 1500
 1000
 500
 0
 0
Steward
BFT
 5
 10
 15
 20
 25
 30
Figure 7: CAIRN Emulation - Write Update Throughput
Clients
Figure 8: CAIRN Emulation - Write Update Latency
Clients
6 Related Work
Agreement and Consensus: At the core of many repli-
cation protocols is a more general problem, known as the
agreement or consensus problem. A good overview of
signi(cid:2)cant results is presented in [19]. The strongest fault
model that researchers consider is the Byzantine model,
where some participants behave in an arbitrary manner.
If communication is not authenticated and nodes are di-
rectly connected, 3f +1 participants and f +1 communi-
cation rounds are required to tolerate f Byzantine faults.
If authentication is available, the number of participants
can be reduced to f + 2 [20].
Fail Stop Processors: Previous work [21] discusses
the implementation and use of k-fail-stop processors,
which are composed of several potentially Byzantine pro-
cessors. Benign fault-tolerant protocols safely run on
top of these fail-stop processors even in the presence of
Byzantine faults. Steward uses a similar strategy to mask
Byzantine faults. However, each trusted entity in Stew-
ard continues to function correctly unless f + 1 or more
computers in a site are faulty, at which point safety is no
longer guaranteed.
Byzantine Group Communication: Related with our
work are group communication systems resilient
to
Byzantine failures. Two such systems are Rampart [22]
and SecureRing [23]. Although these systems are ex-
tremely robust, they have a severe performance cost and
require a large number of uncompromised nodes to main-
tain their guarantees. Both systems rely on failure detec-
tors to determine which replicas are faulty. An attacker
can exploit this to slow correct replicas or the communi-
cation between them until enough are excluded from the
group.
Another intrusion-tolerant group communication sys-
tem is ITUA [24, 25]. The ITUA system, developed by
BBN and UIUC, focuses on providing intrusion-tolerant
group services. The approach taken considers all partici-
pants as equal and is able to tolerate up to less than a third
of malicious participants.
Replication with Benign Faults: The two-phase com-
mit (2PC) protocol [17] provides serializability in a dis-
tributed database system when transactions may span
several sites. It is commonly used to synchronize trans-
actions in a replicated database. Three-phase commit
[Ske82] overcomes some of the availability problems of
2PC, paying the price of an additional communication
round, and therefore, additional latency. Paxos [4] is a
very robust algorithm for benign fault-tolerant replication
and is described in Section 2.
Quorum Systems with Byzantine Fault-Tolerance:
Quorum systems obtain Byzantine fault tolerance by ap-
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:11:28 UTC from IEEE Xplore.  Restrictions apply. 
plying quorum replication methods. Examples of such
systems include Phalanx [26, 27] and its successor Fleet
[28, 29]. Fleet provides a distributed repository for Java
objects. It relies on an object replication mechanism that
tolerates Byzantine failures of servers, while supporting
benign clients. Although the approach is relatively scal-
able with the number of servers, it suffers from the draw-
backs of (cid:3)at Byzantine replication solutions.
Replication with Byzantine Fault-Tolerance: The (cid:2)rst
practical work to solve replication while withstanding
Byzantine failures is the work of Castro and Liskov [6],
which is described in Section 2. Yin et al. [30] propose
separating the agreement component that orders requests
from the execution component that processes requests,
which allows utilization of the same agreement compo-
nent for many different replication tasks and reduces the
number of processing storage replicas to 2f + 1. Martin
and Alvisi [31] recently introduced a two-round Byzan-
tine consensus algorithm, which uses 5f + 1 servers in
order to overcome f faults. This approach trades lower
availability for increased performance. The solution is
appealing for local area networks with high connectiv-
ity. While we considered using it within the sites in our
architecture, the overhead of combining larger threshold
signatures of 4f + 1 shares would greatly overcome the
bene(cid:2)ts of using one less intra-site communication round.
Alternate architectures: An alternate hierarchical ap-
proach to scale Byzantine replication to WANs can be
based on having a few trusted nodes that are assumed to
be working under a weaker adversary model. For exam-
ple, these trusted nodes may exhibit crashes and recov-
eries but not penetrations. A Byzantine replication algo-
rithm in such an environment can use this knowledge in
order to optimize performance.
Verissimo et al propose such a hybrid approach [32,
33], where synchronous, trusted nodes provide strong
global timing guarantees. This inspired the Survivable
Spread [34] work, where a few trusted nodes (at least
one per site) are assumed impenetrable, but are not syn-
chronous, may crash and recover, and may experience
network partitions and merges. These trusted nodes were
implemented by Boeing Secure Network Server (SNS)
boxes, limited computers designed to be impenetrable.
Both the hybrid approach and the approach proposed
in this paper can scale Byzantine replication to WANs.
The hybrid approach makes stronger assumptions, while
our approach pays more hardware and computational
costs.
7 Conclusions
This paper presented a hierarchical architecture that
enables ef(cid:2)cient scaling of Byzantine replication to sys-
tems that span multiple wide area sites, each consisting
of several potentially malicious replicas. The architecture
reduces the message complexity on wide area updates, in-
creasing the system’s scalability. By con(cid:2)ning the effect
of any malicious replica to its local site, the architecture
enables the use of a benign fault-tolerant algorithm over
the WAN, increasing system availability. Further increase
in availability and performance is achieved by the ability
to process read-only queries within a site.
We implemented Steward, a fully functional proto-
type that realizes our architecture, and evaluated its per-
formance over several network topologies. The experi-
mental results show considerable improvement over (cid:3)at
Byzantine replication algorithms, bringing the perfor-
mance of Byzantine replication closer to existing benign
fault-tolerant replication techniques over WANs.
Acknowledgments: Yair Amir thanks his friend Dan
Schnackenberg for introducing him to this problem area
and for conversations on this type of solution. He will be
greatly missed.
This work was partially funded by DARPA grant
FA8750-04-2-0232, and by NSF grants 0430271 and
0430276.
References
[1] A. Avizeinis, (cid:147)The n-version approach to fault-
tolerant software,(cid:148) IEEE Transactions of Software
Engineering, vol. SE-11, pp. 1491(cid:150)1501, Decem-
ber 1985.
[2] (cid:147)Genesis: A framework for achieving component
diversity, http://www.cs.virginia.edu/genesis/.(cid:148)
[3] Y. Amir, C. Danilov, D. Dolev, J. Kirsch, J. Lane,
C. Nita-Rotaru, J. Olsen, and D. Zage, (cid:147)Steward:
Scaling byzantine fault-tolerant systems to wide
area networks,(cid:148) Tech. Rep. CNDS-2005-3, Johns
Hopkins University and CSD TR 05-029, Purdue
University, www.dsn.jhu.edu, December 2005.
[4] L. Lamport, (cid:147)The part-time parliament,(cid:148) ACM
Transactions on Computer Systems, vol. 16,
pp. 133(cid:150)169, May 1998.
[5] Lamport,
(cid:147)Paxos made
SIGACTN:
SIGACT News (ACM Special Interest Group on
Automata and Computability Theory), vol. 32,
2001.
simple,(cid:148)
[6] M. Castro and B. Liskov, (cid:147)Practical byzantine
fault tolerance and proactive recovery,(cid:148) ACM Trans.
Comput. Syst., vol. 20, no. 4, pp. 398(cid:150)461, 2002.
[7] Y. G. Desmedt and Y. Frankel, (cid:147)Threshold cryp-
tosystems,(cid:148) in CRYPTO ’89: Proceedings on Ad-
vances in cryptology,
(New York, NY, USA),
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:11:28 UTC from IEEE Xplore.  Restrictions apply. 
pp. 307(cid:150)315, Springer-Verlag New York,
1989.
Inc.,
[8] A. Shamir, (cid:147)How to share a secret,(cid:148) Commun. ACM,
vol. 22, no. 11, pp. 612(cid:150)613, 1979.
[9] V. Shoup, (cid:147)Practical threshold signatures,(cid:148) Lecture
Notes in Computer Science, vol. 1807, pp. 207(cid:150)223,
2000.
[10] R. L. Rivest, A. Shamir, and L. M. Adleman, (cid:147)A
method for obtaining digital signatures and public-
key cryptosystems,(cid:148) Communications of the ACM,
vol. 21, pp. 120(cid:150)126, Feb. 1978.
[11] P. Feldman,
(cid:147)A Practical Scheme for Non-
Interactive Veri(cid:2)able Secret Sharing,(cid:148) in Proceed-
ings of the 28th Annual Symposium on Foundations
of Computer Science, (Los Angeles, CA, USA),
pp. 427(cid:150)437, IEEE Computer Society, IEEE, Oc-
tober 1987.
[12] R. Gennaro, S. Jarecki, H. Krawczyk, and T. Ra-
bin, (cid:147)Robust threshold dss signatures,(cid:148) Inf. Com-
put., vol. 164, no. 1, pp. 54(cid:150)84, 2001.
[13] F. B. Schneider, (cid:147)Implementing fault-tolerant ser-
vices using the state machine approach: A tutorial,(cid:148)
ACM Computing Surveys, vol. 22, no. 4, pp. 299(cid:150)
319, 1990.
[14] (cid:147)The spines project, http://www.spines.org/.(cid:148)
[15] (cid:147)Planetlab.(cid:148) http://www.planet-lab.org/.
[16] Y. Amir, C. Danilov, M. Miskin-Amir, J. Stanton,
and C. Tutu, (cid:147)On the performance of consistent
wide-area database replication,(cid:148) Tech. Rep. CNDS-
2003-3, December 2003.
[17] K. Eswaran, J. Gray, R. Lorie, and I. Taiger,
(cid:147)The notions of consistency and predicate locks in
a database system,(cid:148) Communication of the ACM,
vol. 19, no. 11, pp. 624(cid:150)633, 1976.
[19] M. J. Fischer, (cid:147)The consensus problem in unreliable
distributed systems (a brief survey),(cid:148) in Fundamen-
tals of Computation Theory, pp. 127(cid:150)140, 1983.
[20] D. Dolev and H. R. Strong, (cid:147)Authenticated algo-
rithms for byzantine agreement,(cid:148) SIAM Journal of
Computing, vol. 12, no. 4, pp. 656(cid:150)666, 1983.
[21] R. D. Schlichting and F. B. Schneider, (cid:147)Fail-stop
processors: An approach to designing fault-tolerant
computing systems,(cid:148) Computer Systems, vol. 1,
no. 3, pp. 222(cid:150)238, 1983.
[22] M. K. Reiter, (cid:147)The Rampart Toolkit for building
high-integrity services,(cid:148) in Selected Papers from the
International Workshop on Theory and Practice in
Distributed Systems, (London, UK), pp. 99(cid:150)110,
Springer-Verlag, 1995.
[23] K. P. Kihlstrom, L. E. Moser, and P. M. Melliar-
Smith, (cid:147)The SecureRing protocols for securing
[18] (cid:147)The
CAIRN
http://www.isi.edu/div7/CAIRN/.
Network.(cid:148)
group communication,(cid:148) in Proceedings of the IEEE
31st Hawaii International Conference on System
Sciences, vol. 3, (Kona, Hawaii), pp. 317(cid:150)326, Jan-
uary 1998.
[24] M. Cukier, T. Courtney, J. Lyons, H. V. Ramasamy,
W. H. Sanders, M. Seri, M. Atighetchi, P. Rubel,
C. Jones, F. Webber, P. Pal, R. Watro, and J. Gossett,
(cid:147)Providing intrusion tolerance with itua,(cid:148) in Supple-
ment of the 2002 International Conference on De-
pendable Systems and Networks, June 2002.
[25] H. V. Ramasamy, P. Pandey, J. Lyons, M. Cukier,
and W. H. Sanders, (cid:147)Quantifying the cost of provid-
ing intrusion tolerance in group communication sys-
tems,(cid:148) in The 2002 International Conference on De-
pendable Systems and Networks (DSN-2002), June
2002.
[26] D. Malkhi and M. K. Reiter, (cid:147)Secure and scalable
replication in phalanx,(cid:148) in SRDS ’98: Proceedings
of the The 17th IEEE Symposium on Reliable Dis-
tributed Systems, (Washington, DC, USA), p. 51,
IEEE Computer Society, 1998.
[27] D. Malkhi and M. Reiter, (cid:147)Byzantine quorum sys-
tems,(cid:148) Journal of Distributed Computing, vol. 11,
no. 4, pp. 203(cid:150)213, 1998.
[28] D. Malkhi and M. Reiter, (cid:147)An architecture for sur-
vivable coordination in large distributed systems,(cid:148)
IEEE Transactions on Knowledge and Data Engi-
neering, vol. 12, no. 2, pp. 187(cid:150)202, 2000.
[29] D. Malkhi, M. Reiter, D. Tulone, and E. Ziskind,
(cid:147)Persistent objects in the (cid:3)eet system,(cid:148) in The 2nd
DARPA Information Survivability Conference and
Exposition (DISCEX II). (2001), June 2001.
[30] J. Yin, J.-P. Martin, A. Venkataramani, L. Alvisi,
and M. Dahlin, (cid:147)Separating agreement from execu-
tion for byzantine fault-tolerant services,(cid:148) in SOSP,
2003.
[31] J.-P. Martin and L. Alvisi, (cid:147)Fast byzantine consen-
sus.,(cid:148) in DSN, pp. 402(cid:150)411, 2005.
[32] M. Correia, L. C. Lung, N. F. Neves, and
P. Ver·(cid:17)ssimo, (cid:147)Ef(cid:2)cient byzantine-resilient reliable
multicast on a hybrid failure model,(cid:148) in Proc. of the
21st Symposium on Reliable Distributed Systems,
(Suita, Japan), Oct. 2002.
[33] P. Verissimo, (cid:147)Uncertainty and predictability: Can
they be reconciled,(cid:148) in Future Directions in Dis-
tributed Computing, no. 2584 in LNCS, Springer-
Verlag, 2003.
[34] (cid:147)Survivable spread: Algorithms and assurance ar-
gument,(cid:148) Tech. Rep. Technical Information Report
Number D950-10757-1, The Boeing Company, July
2003.
Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 
0-7695-2607-1/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 12:11:28 UTC from IEEE Xplore.  Restrictions apply.