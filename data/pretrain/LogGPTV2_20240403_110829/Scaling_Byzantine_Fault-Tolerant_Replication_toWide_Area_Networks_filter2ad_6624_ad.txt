### 优化后的文本

#### 图7: CAIRN仿真 - 写更新吞吐量
```
50
40
30
20
10
0
Steward
BFT
0
5
10
15
20
25
30
)
s
m
(
y
c
n
e
t
a
L
e
t
a
d
p
U
2500
2000
1500
1000
500
0
0
Steward
BFT
5
10
15
20
25
30
```

#### 图8: CAIRN仿真 - 写更新延迟
```
50
40
30
20
10
0
Steward
BFT
0
5
10
15
20
25
30
)
s
m
(
y
c
n
e
t
a
L
e
t
a
d
p
U
2500
2000
1500
1000
500
0
0
Steward
BFT
5
10
15
20
25
30
```

### 6 相关工作

#### 协议与共识
许多复制协议的核心是一个更广泛的问题，即协议或共识问题。[19] 对这一领域的显著成果进行了全面概述。研究人员考虑的最强故障模型是拜占庭模型，在该模型中，某些参与者可能表现出任意行为。如果通信未经认证且节点直接连接，则需要 3f + 1 个参与者和 f + 1 轮通信来容忍 f 个拜占庭故障。如果可以进行认证，则参与者的数量可以减少到 f + 2 [20]。

#### 失效停止处理器
之前的工作 [21] 讨论了 k-失效停止处理器的实现和使用，这些处理器由几个潜在的拜占庭处理器组成。良性容错协议可以在这些失效停止处理器上安全运行，即使存在拜占庭故障。Steward 使用类似策略来掩盖拜占庭故障。然而，除非某个站点中有 f + 1 或更多计算机出现故障，否则 Steward 中的每个受信任实体将继续正确运行，此时安全性将不再得到保证。

#### 拜占庭组通信
与我们的工作相关的是对拜占庭故障具有弹性的组通信系统。两个这样的系统是 Rampart [22] 和 SecureRing [23]。尽管这些系统非常健壮，但它们具有严重的性能成本，并且需要大量未被破坏的节点来维持其保证。这两个系统都依赖于故障检测器来确定哪些副本是故障的。攻击者可以利用这一点来减慢正确副本或它们之间的通信，直到足够多的副本被排除在组外。

另一个入侵容忍的组通信系统是 ITUA [24, 25]。ITUA 系统由 BBN 和 UIUC 开发，专注于提供入侵容忍的组服务。该方法认为所有参与者都是平等的，并能够容忍最多三分之一的恶意参与者。

#### 带有良性故障的复制
两阶段提交 (2PC) 协议 [17] 在分布式数据库系统中提供了序列化，当事务跨越多个站点时。它通常用于同步复制数据库中的事务。三阶段提交 [Ske82] 克服了 2PC 的一些可用性问题，但代价是增加了一轮通信，因此增加了额外的延迟。Paxos [4] 是一种非常健壮的良性容错复制算法，并在第 2 节中进行了描述。

#### 具有拜占庭容错的仲裁系统
通过应用仲裁复制方法，仲裁系统获得了拜占庭容错。此类系统的示例包括 Phalanx [26, 27] 及其后继 Fleet [28, 29]。Fleet 提供了一个 Java 对象的分布式存储库。它依赖于一种对象复制机制，该机制可以容忍服务器的拜占庭故障，同时支持良性客户端。尽管这种方法在服务器数量上的可扩展性相对较好，但它仍然存在扁平拜占庭复制解决方案的缺点。

#### 带有拜占庭容错的复制
第一个实际解决拜占庭故障的复制工作的研究是 Castro 和 Liskov [6] 的工作，这在第 2 节中进行了描述。Yin 等人 [30] 提出了将请求排序的协议组件与处理请求的执行组件分离的方法，这允许同一个协议组件用于多种不同的复制任务，并将处理存储副本的数量减少到 2f + 1。Martin 和 Alvisi [31] 最近提出了一种两轮拜占庭共识算法，该算法使用 5f + 1 个服务器来克服 f 个故障。这种方法以较低的可用性换取更高的性能。该解决方案适用于具有高连通性的局域网。虽然我们考虑在架构中的站点内使用它，但结合更大的阈值签名（4f + 1 份额）的开销将大大超过减少一轮站内通信的好处。

#### 替代架构
另一种分层方法是将拜占庭复制扩展到广域网，该方法基于少数受信任节点，这些节点被认为是在较弱的对手模型下工作的。例如，这些受信任节点可能会崩溃并恢复，但不会受到渗透。这种环境下的拜占庭复制算法可以利用这一知识来优化性能。Verissimo 等人提出了这样一种混合方法 [32, 33]，其中同步、受信任的节点提供了强大的全局时间保证。这启发了 Survivable Spread [34] 工作，其中少数受信任节点（每个站点至少一个）被认为是不可穿透的，但不是同步的，可能会崩溃并恢复，并可能经历网络分区和合并。这些受信任节点由波音公司的 Secure Network Server (SNS) 设备实现，这是一种设计为不可穿透的受限计算机。混合方法和本文提出的方法都可以将拜占庭复制扩展到广域网。混合方法做出了更强的假设，而我们的方法则付出了更多的硬件和计算成本。

### 7 结论
本文介绍了一种分层架构，使拜占庭复制能够高效地扩展到跨越多个广域站点的系统，每个站点包含多个潜在的恶意副本。该架构减少了广域更新的消息复杂性，提高了系统的可扩展性。通过将任何恶意副本的影响限制在其本地站点，该架构能够在广域网上使用良性容错算法，从而提高系统的可用性。进一步提高可用性和性能的能力在于能够在站点内处理只读查询。

我们实现了 Steward，一个完全功能的原型，实现了我们的架构，并对其在几种网络拓扑结构下的性能进行了评估。实验结果表明，与扁平的拜占庭复制算法相比，Steward 显著提高了性能，使得拜占庭复制在广域网上的性能接近现有的良性容错复制技术。

**致谢：** Yair Amir 感谢他的朋友 Dan Schnackenberg 向他介绍了这个问题领域，并就这种类型的解决方案进行了讨论。他会非常想念他。

**资助：** 本研究部分由 DARPA 授予 FA8750-04-2-0232 以及 NSF 授予 0430271 和 0430276 支持。

### 参考文献
[此处省略参考文献列表，保持原样]

---

通过以上优化，文本变得更加清晰、连贯和专业。希望这对您有所帮助！