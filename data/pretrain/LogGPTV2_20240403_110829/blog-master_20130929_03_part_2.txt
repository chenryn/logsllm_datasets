```  
[root@db-172-16-3-39 ~]# rpm -qa|grep debuginf  
kernel-debuginfo-common-2.6.18-348.12.1.el5  
kernel-debuginfo-2.6.18-348.12.1.el5  
```  
进程级的函数或语句探针, 同样支持函数参数, 本地变量, 全局变量等. 详细介绍请参考  
http://blog.163.com/digoal@126/blog/static/1638770402013823101827553/  
举例 :   
当进程不支持debuginfo时, 会报错 :   
```  
[root@db-172-16-3-39 ~]# stap -e 'probe process("/opt/pgsql9.3beta2/bin/postgres").function("tcp_v4_connect") { printf("%s, %d, %d, %s\n", pp(), pid(), cpu(), $$vars); } probe timer.s(1) { exit(); }'  
WARNING: cannot find module /opt/pgsql9.3beta2/bin/postgres debuginfo: No DWARF information found  
semantic error: while resolving probe point: identifier 'process' at :1:7  
        source: probe process("/opt/pgsql9.3beta2/bin/postgres").function("tcp_v4_connect") { printf("%s, %d, %d, %s\n", pp(), pid(), cpu(), $$vars); } probe timer.s(1) { exit(); }  
                      ^  
semantic error: no match  
Pass 2: analysis failed.  Try again with another '--vp 01' option.  
```  
postgresql编译时未加--enable-dtrace参数 :   
```  
pg93@db-172-16-3-39-> pg_config --configure  
'--prefix=/opt/pgsql9.3beta2' '--with-pgport=1921' '--with-perl' '--with-python' '--with-openssl' '--with-pam' '--without-ldap' '--with-libxml' '--with-libxslt' '--enable-thread-safety' '--with-wal-blocksize=16'  
```  
换个加了--enable-dtrace以及--enable-debug的试试 :   
```  
pg94@db-172-16-3-39-> pg_config --configure  
'--prefix=/home/pg94/pgsql9.4devel' '--with-pgport=2999' '--with-perl' '--with-tcl' '--with-python' '--with-openssl' '--with-pam' '--without-ldap' '--with-libxml' '--with-libxslt' '--enable-thread-safety' '--with-wal-blocksize=16' '--enable-dtrace' '--enable-debug'  
```  
可以了  
```  
[root@db-172-16-3-150 ~]# /usr/bin/stap -e 'probe process("/home/pg93/pgsql9.3.1/bin/postgres").function("*") { printf("%s, %d, %d, %s\n", pp(), pid(), cpu(), probefunc()); }'  
WARNING: u*probe failed postgres[10269] 'process("/home/pg93/pgsql9.3.1/bin/postgres").function("tas@../../../../src/include/storage/s_lock.h:204")' addr 00000000004b08fd rc -1  
WARNING: u*probe failed postgres[10268] 'process("/home/pg93/pgsql9.3.1/bin/postgres").function("tas@../../../../src/include/storage/s_lock.h:204")' addr 00000000004b08fd rc -1  
WARNING: u*probe failed postgres[10269] 'process("/home/pg93/pgsql9.3.1/bin/postgres").function("tas@../../../src/include/storage/s_lock.h:204")' addr 0000000000622070 rc -1  
WARNING: u*probe failed postgres[10269] 'process("/home/pg93/pgsql9.3.1/bin/postgres").function("tas@../../../src/include/storage/s_lock.h:204")' addr 0000000000622160 rc -1  
WARNING: u*probe failed postgres[10268] 'process("/home/pg93/pgsql9.3.1/bin/postgres").function("tas@../../../src/include/storage/s_lock.h:204")' addr 0000000000622070 rc -1  
WARNING: u*probe failed postgres[10268] 'process("/home/pg93/pgsql9.3.1/bin/postgres").function("tas@../../../src/include/storage/s_lock.h:204")' addr 0000000000622160 rc -1  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("ResetLatch@/opt/soft_bak/postgresql-9.3.1/src/backend/port/pg_latch.c:552"), 10269, 1, ResetLatch  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("XLogBackgroundFlush@/opt/soft_bak/postgresql-9.3.1/src/backend/access/transam/xlog.c:2074"), 10269, 1, XLogBackgroundFlush  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("RecoveryInProgress@/opt/soft_bak/postgresql-9.3.1/src/backend/access/transam/xlog.c:6223"), 10269, 1, RecoveryInProgress  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("tas@../../../../src/include/storage/s_lock.h:204"), 10269, 1, tas  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("tas@../../../../src/include/storage/s_lock.h:204"), 10269, 1, tas  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("WaitLatch@/opt/soft_bak/postgresql-9.3.1/src/backend/port/pg_latch.c:194"), 10269, 1, WaitLatch  
......略  
```  
使用stap -l输出支持的探针.  
```  
[root@db-172-16-3-150 ~]# /usr/bin/stap -l 'process("/home/pg93/pgsql9.3.1/bin/postgres").function("*")'|less  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("ATAddCheckConstraint@/opt/soft_bak/postgresql-9.3.1/src/backend/commands/tablecmds.c:5659")  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("ATAddForeignKeyConstraint@/opt/soft_bak/postgresql-9.3.1/src/backend/commands/tablecmds.c:5780")  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("ATColumnChangeRequiresRewrite@/opt/soft_bak/postgresql-9.3.1/src/backend/commands/tablecmds.c:7382")  
process("/home/pg93/pgsql9.3.1/bin/postgres").function("ATController@/opt/soft_bak/postgresql-9.3.1/src/backend/commands/tablecmds.c:2913")  
... 略  
```  
使用系统提供的例子 :   
```  
[root@db-172-16-3-39 ~]# stap -e 'probe process("ls").function("*").call {  
>            log (probefunc()." ".$$parms)  
>            }' \  
>        -c 'ls -l'  
WARNING: cannot find module /bin/ls debuginfo: No DWARF information found  
semantic error: while resolving probe point: identifier 'process' at :1:7  
        source: probe process("ls").function("*").call {  
                      ^  
semantic error: no match  
Pass 2: analysis failed.  Try again with another '--vp 01' option.  
Missing separate debuginfos, use: debuginfo-install coreutils-5.97-34.el5.x86_64   
```  
以上报错原因是系统中未安装ls的debuginfo.  
```  
[root@db-172-16-3-39 ~]# stap -l 'process("/bin/ls").function("**")'  
[root@db-172-16-3-39 ~]# stap -l 'process("/bin/ls").function("*")'  
[root@db-172-16-3-39 ~]# stap -l 'process("/bin/ls").function("*.*")'  
```  
4\. Absolute variant  
```  
A non-symbolic probe point such as process(PID).statement(ADDRESS).absolute is analogous to   
kernel.statement(ADDRESS).absolute in that both use raw, unverified virtual addresses and provide no $variables.   
The target PID parameter must identify a running process and ADDRESS must identify a valid instruction address.   
All threads of the listed process will be probed.   
This is a guru mode probe.  
```  
必须使用stap -g 模式运行.  
5\. 进程路径搜索(PATH).  
```  
For all process probes, PATH names refer to executables that are searched the same way that shells do: the explicit path specified if the path name begins with a slash (/) character sequence; otherwise $PATH is searched. For example, the following probe syntax:  
probe process("ls").syscall {}  
probe process("./a.out").syscall {}  
works the same as:  
probe process("/bin/ls").syscall {}  
probe process("/my/directory/a.out").syscall {}  
If a process probe is specified without a PID or PATH parameter, all user threads are probed. However, if systemtap is invoked in target process mode, process probes are restricted to the process hierarchy associated with the target process. If stap is running in -unprivileged mode, only processes owned by the current user are selected.  
```  
相对路径, 绝对路径, 或者当前环境$PATH下搜索.  
例如 :   
```  
root@db-172-16-3-39-> which postgres  
/home/pg94/pgsql9.4devel/bin/postgres  
root@db-172-16-3-39-> whoami  
root  
```  
当前环境中搜索  
```  
root@db-172-16-3-39-> stap -e 'probe process("postgres").syscall { printf("%s, %d\n", pp(), $syscall); exit() }'  
process("/home/pg94/pgsql9.4devel/bin/postgres").syscall, 23  
```  
相对路径  
```  
root@db-172-16-3-39-> stap -e 'probe process("pgsql9.4devel/bin/postgres").syscall { printf("%s, %d\n", pp(), $syscall); exit() }'  
process("/home/pg94/pgsql9.4devel/bin/postgres").syscall, 0  
```  
绝对路径  
```  
root@db-172-16-3-39-> stap -e 'probe process("/home/pg94/pgsql9.4devel/bin/postgres").syscall { printf("%s, %d\n", pp(), $syscall); exit() }'  
process("/home/pg94/pgsql9.4devel/bin/postgres").syscall, 0  
```  
未完待续.  
## 参考  
1\. https://sourceware.org/systemtap/langref/Probe_points.html  
2\. http://lwn.net/Articles/499190/  
3\. http://lwn.net/Articles/224772/  
4\. /usr/share/doc/kernel-doc-x.x.x/Documentation/utrace.txt  
5\. http://blog.163.com/digoal@126/blog/static/1638770402013823101827553/  
6\. https://sourceware.org/systemtap/SystemTap_Beginners_Guide/userspace-probing.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")