ity between X and Y, in which the dissimilarity between
the two processes represents the level of privacy protection
provided by a privacy-preserving strategy. As discussed in
Sec. 1, an information-theoretic approach avoids the need
to assume speci(cid:12)c attack strategies or computational power
of the adversary. As temporal correlations naturally occur
in time-series data, which can be exploited by an adversary
to infer the private information, it is crucial for a privacy
measure to expose the impact of such correlations.
Notice that we consider the information content between
X and Y, i.e., the clear time-series data and its correspond-
ing perturbed version generated by a privacy-preserving strat-
egy.
In applications where a number of anonymous users
participated in the data collection process, the comparison
between clear data and its corresponding perturbed version
may be seen as a worst case scenario where the adversary
has already de-anonymized the traces, and the perturbation
of data by the strategy is a last line of defense. This worst
case scenario is realistic, however, because in certain appli-
cations, a few pieces of side information (such as a few time-
location pairs of victims in trajectory tracing) can already
de-anonymize the traces [13, 25].
3. RELATED WORK
Diﬀerent privacy notions [24, 26, 41, 45] have been used
to guide the publication of databases of private data. These
results demonstrate resilience (i.e., small leaks of informa-
tion) against speci(cid:12)c known attacks. They are inconclusive,
however, since we cannot rule out the existence of stronger
attacks.
Furthermore, the kind of information used by a measure to
quantify privacy greatly aﬀects the eﬀectiveness of the mea-
Figure 1: Auto-correlation coeﬃcient as a func-
tion of shifting in time (minutes), which measures
the correlation of data in the temporal dimension.
Smart meter readings collected from a household in
the U.K. [36] in one minute intervals for one year.
Second, we test the proposed privacy measures using data
from the application domain of BLH protected smart me-
ter readings against NILM. We focus on MI vs. OCE. In
particular, MI has been widely used in the existing liter-
ature for privacy quanti(cid:12)cation [33, 42, 44, 46]. We study
foremost BLH protection methods including best-eﬀort (BE)
[21], non-intrusive load leveling (NILL) [27], and lazy step-
ping (LS) [46]. We show that, for our focus domain of
temporally correlated time-series data, it is crucial for the
measures to expose the scope of information used in the at-
tack. Speci(cid:12)cally, a good privacy measure must be able to
quantify how the privacy protection weakens as the adver-
sary exploits progressively larger scopes of data correlation
present in real-world smart meter data. This requires a mea-
sure whose meaning remains constant as k changes, which is
not satis(cid:12)ed by conventional MI but by the proposed OCE
measure. Our quantitative results show that although LS
becomes weaker as k increases, it remains better than BE
and NILL over the range of k that is relevant for smart meter
data in the real world.
We also study a novel and realistic attack on BLH, in
which the adversary compromises the control software run-
ning on a smoothing battery system, in order to expose pri-
vate usage of household appliances through a covert channel
of normal smart meter readings. Our attack mimics the con-
trol steps in the LS algorithm with a slight modi(cid:12)cation to
leak important physical state information of the household
electrical system at strategic moments. The success of the
attack hinges on exploiting temporal correlations naturally
occurring in real-world smart meter data, which again sub-
stantiates the importance of accounting for the correlation
comprehensively by privacy measures, beyond prior state-
of-the-art measures used to evaluate BLH. Speci(cid:12)cally, our
result shows that the attack appears ineﬀective at small k,
and its damage only becomes evident when measured by our
proposed OCE measure for a big enough k.
The remainder of the paper is organized as follows. We
de(cid:12)ne the privacy protection problem in Sec. 2. We present
related work in Sec. 3. In Sec. 4 we discuss the importance of
collecting smart meter data readings, its privacy concerns,
and state-of-the-art mitigation strategies for the concerns.
In Sec. 5 we give details of the four privacy measures used in
our study. We test these measures in Sec. 6 against various
protection strategies for data traces generated by synthetic
models designed to ensure speci(cid:12)c information content of the
data. In Sec. 7 we test the privacy measures against BLH-
00.20.40.60.8105101520Autocorrelation coefficientShiftsure. It has been shown that k-anonymization [41], which is
an information-theoretic measure of protecting the identity
of a participant by ensuring the size of an anonymity set,
does not capture the diversity of the anonymity set [26]. To
address the issue, l-diversity [26] has been proposed. The
attempt is not fully successful, however. Li and Li [24] show
that l-diversity fails to ensure that the diversity in a general-
ized class is similar to that of the original data. This may al-
low the adversary to gain knowledge of a victim’s attribute,
though perhaps not its exact value. They then propose a
t-closeness notion [24], which ensures that the distance of a
sensitive attribute’s distribution in one class is no more than
a threshold t from that of the whole table. Xiao and Tao [45]
further propose m-invariance to limit the risk of privacy dis-
closure in data re-publications, since potential correlations
among snapshots of data in diﬀerent publication instances
may be used to derive sensitive information. The long se-
quence of attempts to improve the series of measures re(cid:13)ects
the diﬃculties of getting these measures right.
The trajectory of mobile nodes in location-based services
constitutes an important kind of private time-series data,
and its protection has been widely studied [5, 14, 17, 18,
19, 20, 30]. One approach is to mix requests from diﬀer-
ent anonymized users together by a trusted anonymizing
proxy [5]. Another approach is to reduce the spatial/temporal
granularity of the location information made available to the
service provider while achieving satisfactory service perfor-
mance [14, 17, 18]. Henrici and Muller [19] propose the
use of one-time identi(cid:12)ers for privacy protection. Hoh et
al. [20] devise a protection strategy to release user data only
when certain privacy constraints are met. Meyerowitz and
Choudhury [30] propose to send fake requests alongside real
requests, to reduce the service provider’s ability to trace
a mobile node over time. The authors of [17, 18] quan-
tify the performance of their privacy protection by showing
that k-anonymity is satis(cid:12)ed, while the authors of [5, 20, 30]
quantify the performance by measuring the uncertainty of
the adversary in tracking a victim.
Diﬀerential privacy [15] is considered a strong notion of
privacy and is of much current interest in privacy research [16,
28]. It guides the design of a query mechanism for a dataset,
so that the impact of any speci(cid:12)c data point to an aggregate
query result will be almost unnoticeable to a curious adver-
sary. It also ensures that one cannot infer reliably whether
speci(cid:12)c individuals participate in the dataset. Since diﬀer-
ential privacy is about hiding an individual in aggregates, it
is mainly useful for statistical results. For example, it allows
aggregators [29] in smart grid demand-response [7] to obtain
the total electricity consumption of users in real time, to en-
able control decisions such as load curtailment [29], without
revealing the individual consumption [1, 9, 34, 39]. How-
ever, diﬀerential privacy is not applicable to the protection
of individual traces that is a required solution against NILM
attacks.
Against NILM, a popular approach to protecting a con-
sumption trace is battery-based load hiding (BLH) [21, 23,
27, 46]. In the approach, a household makes use of the charg-
ing/discharging of a local battery to smooth the demand
seen by a smart meter, which reports its measurements to an
independent system operator (ISO). The smoothing, whose
extent is constrained by the battery capacity, hides discrete
jumps in the data which might reveal when a household
turns on/oﬀ individual appliances, for example. Existing
measures that quantify the goodness of the protection by
diﬀerent similarity notions between the clear and protected
traces include relative feature mass [27], entropy [21, 27],
and mutual information [23, 46]. All these measures, how-
ever, do not consider temporal correlations of data in the
traces. This omission could easily lead to wrong conclusions.
Rebollo-Monedero et al. [35] propose a general framework
for measuring privacy as an adversary’s estimation error.
For estimating single data points, this framework encom-
passes notions such as k-anonymity, diﬀerential privacy, and
mutual information. For estimating sequences of data points
that are i.i.d., they show that the estimation error is re-
lated to the asymptotic equipartition property (AEP) [12]
that there exists a typical subset of sequences almost certain
to occur. AEP generalizes to entropy rates [3] for station-
ary ergodic sequences. They do not provide an explicit and
systematic account of how temporal correlation in applica-
tion data sequences may impact the privacy protection. Our
work provides understanding of how correlated data in these
sequences can be used to infer any speci(cid:12)c single data points.
4. PROTECTING PRIVACY OF SMART ME-
TER READINGS
We now discuss the speci(cid:12)c problem of protecting smart
meter readings as temporally correlated time-series data.
We (cid:12)rst review major existing BLH algorithms. We then
present a novel covert-channel attack on the BLH algorithm,
which will expose the importance of privacy quanti(cid:12)cation
under long temporal correlation.
4.1 Battery-based Load Hiding Algorithms
We brie(cid:13)y review three foremost BLH algorithms in the
literature.
In the discussion, we let d(t) be the real load
(measured in power) from a household at time t, e(t) be the
corresponding regulated load after being smoothed out by
the battery (i.e., the load measured by the smart meter),
(cid:12)c > 0 be the maximum battery charging rate (in power),
and (cid:12)d > 0 be the maximum battery discharging rate.
Best Eﬀort (BE) [21]
This algorithm tries to maintain e(t) by charging the battery
if the real load drops below the previously measured value,
i.e., d(t)  e(t (cid:0) 1),
and the discharging rate of the battery is d(t) (cid:0) e(t (cid:0) 1).
However, there are four cases when the battery fails to
meet the target. These four cases are as follows: (i) d(t) <
e(t (cid:0) 1) and the excess power is greater than the charging
rate, (cid:12)c, of the battery. In this case, the battery regulates
the load by maximally charging itself, i.e., e(t) = d(t) + (cid:12)c;
(ii) The battery will be overcharged if we have e(t) = e(t(cid:0)1).
In this case, the battery does not regulate the load, and we
have e(t) = d(t); (iii) e(t (cid:0) 1) < d(t) and the power needed
from the battery is greater than the discharging rate, (cid:12)d,
of the battery. In this case, the battery regulates the load
by maximally discharging itself, i.e., e(t) = d(t) (cid:0) (cid:12)d; and
(iv) The battery will be over-discharged (below empty) if
we have e(t) = e(t (cid:0) 1). In this case, the battery does not
regulate the load, and we have e(t) = d(t).
Non-Intrusive Load Leveling (NILL) [27]
This algorithm also tries to maintain e(t). However, instead
of using the previous measured load e(t (cid:0) 1) as the tar-
get to maintain, the algorithm computes a target load to be
preserved, which is related to the average amount of load
computed from history. The authors claim that this helps
reduce the changes in power acquired from the power grid.
This is indeed the case when the battery capacity is large,
so that the deviation from the target load can be mostly
complemented by the battery [27].
The target load is also constantly adjusted when the bat-
tery fails to meet the target, which re(cid:13)ects persistent devia-
tions in the demand of the household. The failure scenarios
for NILL to maintain the target load are similar to the BE
case: (i) d(t) < e(t (cid:0) 1) and the excess power is greater
than the charging rate, (cid:12)c, of the battery. In this case, the
battery regulates the load by maximally charging itself, i.e.,
e(t) = d(t) + (cid:12)c; (ii) The battery will be overcharged if we
have e(t) = e(t (cid:0) 1). In this case, the target load is recom-
puted as a weighted average of the previous target and the
average load d since the last recovery. However, the target
load is not used immediately, since the system will be in a
\high recovery state," in which e(t) is set so that the battery
is gradually discharged. The system only leaves the recov-
ery state when the battery is half-emptied or the current
demand d(t) is higher than a certain value above e(t (cid:0) 1);
(iii) e(t(cid:0)1) < d(t) and the power needed from the battery is
greater than the discharging rate, (cid:12)d, of the battery. In this
case, the battery regulates the load by maximally discharg-
ing itself, i.e., e(t) = d(t) (cid:0) (cid:12)d; and (iv) The battery will
be over-discharged if we have e(t) = e(t (cid:0) 1). In this case,
the target load is recomputed as a weighted average of the
previous target and the average load d since the last recov-
ery. However, the target load is not used immediately, since
the system will be in a \low recovery state," in which e(t)
is set so that the battery is gradually charged. The system
only exits the recovery state when the battery is half-(cid:12)lled
or the current demand d(t) is lower than a certain fraction
of e(t (cid:0) 1).
Lazy Stepping (LS) [46]
Similar to the previous two algorithms, this algorithm tries
to maintain e(t). This algorithm protects privacy by re-
stricting the measured load to some discrete levels. In par-
ticular, the measured load is quantized into levels. The sep-
aration between diﬀerent levels, (cid:12), is related to the charg-
ing and discharging rates of the battery by the equation
(cid:12) = min((cid:12)c; (cid:12)d), such that the measured load can always
be regulated to one of those levels by charging or discharg-
ing the battery to make up for the diﬀerence from the real
demand. As a result, the measured load is limited to these
levels without revealing the real demand or its changes.
In Sec. 7, we implement the LS1 approach proposed in [46],
which regulates the measured load as follows: (i) When keep-
ing e(t) = e(t (cid:0) 1) will result in overcharging the battery,
then set the output to the level that is just below d(t) to
discharge the battery; (ii) When keeping e(t) = e(t (cid:0) 1) will