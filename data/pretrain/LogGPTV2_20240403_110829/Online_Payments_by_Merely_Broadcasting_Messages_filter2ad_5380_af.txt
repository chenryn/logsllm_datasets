(DAG) in various novel payment systems [23], [44], [47],
[69]. The distinctive feature of Astro, however, is that con-
sensus is entirely sidestepped—whereas all prior solutions
we are aware of, even those building on a DAG, employ a
consensus algorithm to order payments.
Broadcast Protocols. BRB protocols have a long tradition
starting with the algorithms of Bracha and Toueg [15], [16].
Later work reﬁned and improved performance and properties
of these algorithms [19], [55], [57], [65]. Asynchronous
veriﬁable information dispersal algorithms [20] are closely
related to BRB protocols, and both of these classes of protocol
represent an essential building block in modern asynchronous
consensus protocols [32], [60].
There are several ways to improve the scalability of
broadcast protocols. Sharding—the technique we recalled
out above and we adopt in Astro II—is a clean approach
to scalability, as it allows each shard to maintain the same
(deterministic) properties as a non-sharded system. Other ap-
proaches, such as clustering [39], [66], probabilistic quorum-
based [58], or sample-based [41], typically yield a design
providing probabilistic guarantees.
VIII. CONCLUSIONS
Astro is a decentralized payment system that can sustain
20K payments/sec in a deployment of 200 replicas, while
exhibiting sub-second latency. It can do so by not relying on
any consensus layer and thus remaining mostly unaffected
by network asynchrony and compromised replicas. We do
not claim Astro to be a silver bullet: we only focused on
payments and did not consider the general abstraction of
state machine replication, e.g., as might be required by smart
contracts. Yet, determining the exact set of problems (besides
payments) that can be addressed by Astro’s broadcast layer
is an open problem. We also identiﬁed several avenues for
improving Astro, namely: (1) a more ﬂexible representation
scheme, instead of the ﬁxed dependency between a client
and its representative replica, (2) use more advanced cryp-
tographic primitives (e.g., threshold signatures, key revoca-
tion schemes), (3) a ﬁne-grained state transfer protocol for
reconﬁguration, and (4) a hybrid system that incorporates
asynchronous payments and consensus-based smart contracts.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:24:09 UTC from IEEE Xplore.  Restrictions apply. 
36
[23] CHURYUMOV, A. Byteball: A decentralized system for storage and
transfer of value. https://byteball.org/Byteball.pdf (2016).
[24] CLACK, C. D., BAKSHI, V. A., AND BRAINE, L. Smart Contract
Templates: foundations, design landscape and research directions.
CoRR abs/1608.00771 (2016).
[25] CLARK, D. D.
The Design Philosophy of the DARPA Internet
Protocols. ACM SIGCOMM Computer Communication Review 18,
4 (1988), 106–114.
[26] CLEMENT, A., WONG, E. L., ALVISI, L., DAHLIN, M., AND
MARCHETTI, M. Making Byzantine Fault Tolerant Systems Tolerate
Byzantine Faults. In NSDI (2009).
[27] COLLINS, D., GUERRAOUI, R., KOMATOVIC, J., MONTI, M.,
XYGKIS, A., PAVLOVIC, M., KUZNETSOV, P., PIGNOLET, Y.-A.,
SEREDINSCHI, D.-A., AND TONKIKH, A. Online payments by merely
broadcasting messages (extended version). arXiv 2004.13184 (2020).
[28] CORREIA, M., NEVES, N. F., LUNG, L. C., AND VER´ISSIMO, P. Low
complexity byzantine-resilient consensus. Distributed Computing 17,
3 (2005), 237–249.
[29] CRAIN, T., GRAMOLI, V., LARREA, M., AND RAYNAL, M. Dbft:
Efﬁcient
leaderless byzantine consensus and its application to
blockchains. In 2018 IEEE 17th International Symposium on Network
Computing and Applications (NCA) (2018), IEEE, pp. 1–8.
[30] DANEZIS, G., AND MEIKLEJOHN, S. Centrally banked cryptocurren-
cies. In NDSS (2016).
[31] DINH, T. T. A., WANG, J., CHEN, G., LIU, R., OOI, B. C., AND
TAN, K.-L. BLOCKBENCH: A Framework for Analyzing Private
Blockchains.
In SIGMOD (New York, NY, USA, 2017), ACM,
pp. 1085–1100.
[32] DUAN, S., REITER, M. K., AND ZHANG, H. BEAT: Asynchronous
BFT Made Practical. In CCS (2018).
[33] EXPERT PANEL (FORBES TECHNOLOGY COUNCIL). 10 Tech Industry
Experts Predict The Next ’Blockchain Wave’, Feb 13 2019.
[34] FISCHER, M. J., LYNCH, N. A., AND PATERSON, M. S. Impossibility
of distributed consensus with one faulty process. J. ACM 32, 2 (Apr.
1985), 374–382.
[35] GILAD, Y., HEMO, R., MICALI, S., VLACHOS, G., AND ZELDOVICH,
N. Algorand: Scaling byzantine agreements for cryptocurrencies. In
SOSP (2017).
[36] GLENDENNING, L., BESCHASTNIKH, I., KRISHNAMURTHY, A., AND
ANDERSON, T. Scalable Consistency in Scatter. In SOSP (2011).
[37] GOLAN-GUETA, G., ABRAHAM, I., GROSSMAN, S., MALKHI, D.,
PINKAS, B., REITER, M. K., SEREDINSCHI, D., TAMIR, O., AND
TOMESCU, A. SBFT: a scalable decentralized trust infrastructure for
blockchains. In DSN (2019).
[38] GUERRAOUI, R., HAMZA, J., SEREDINSCHI, D.-A., AND VUKOLIC,
M. Can 100 Machines Agree? arXiv:1911.07966 (2019). https://arxiv.
org/abs/1911.07966.
[39] GUERRAOUI, R., KERMARREC, A.-M., PAVLOVIC, M., AND
SEREDINSCHI, D.-A. Atum: Scalable group communication using
volatile groups. In Proceedings of the 17th International Middleware
Conference (New York, NY, USA, 2016), Middleware ’16, ACM,
pp. 19:1–19:14.
[40] GUERRAOUI, R., KUZNETSOV, P., MONTI, M., PAVLOVIC, M., AND
SEREDINSCHI, D.-A. AT2: Asynchronous Trustworthy Transfers.
arXiv/cs.DC 1812.10844 (2018). http://arxiv.org/abs/1812.10844.
[41] GUERRAOUI, R., KUZNETSOV, P., MONTI, M., PAVLOVIC, M., AND
SEREDINSCHI, D.-A. Scalable Byzantine Reliable Broadcast. In DISC
(2019).
[42] GUERRAOUI, R., KUZNETSOV, P., MONTI, M., PAVLOVIC, M., AND
SEREDINSCHI, D.-A. The Consensus Number of a Cryptocurrency.
In PODC (2019).
[43] GUPTA, S. A Non-Consensus Based Decentralized Financial Transac-
tion Processing Model with Support for Efﬁcient Auditing. Master’s
thesis, Arizona State University, USA, 2016.
[44] HEARN, M. Corda: A distributed ledger. Corda Technical White Paper
(2016).
REFERENCES
[1] ABRAHAM, I., GUETA, G., MALKHI, D., ALVISI, L., KOTLA, R.,
AND MARTIN, J.-P. Revisiting fast practical byzantine fault tolerance.
arXiv:1712.01367 (2017).
[2] ABRAHAM, I., MALKHI, D., NAYAK, K., REN, L., AND SPIEGEL-
Solida: A blockchain protocol based on reconﬁgurable
MAN, A.
byzantine consensus. CoRR abs/1612.02916 (2016).
[3] ADYA, A., MYERS, D., HOWELL, J., ELSON, J., MEEK, C., KHE-
MANI, V., FULGER, S., GU, P., BHUVANAGIRI, L., HUNTER, J.,
ET AL. Slicer: Auto-Sharding for Datacenter Applications. In OSDI
(2016).
[4] AL-BASSAM, M., SONNINO, A., BANO, S., HRYCYSZYN, D., AND
DANEZIS, G. Chainspace: A sharded smart contracts platform. arXiv
preprint arXiv:1708.03778 (2017).
[5] ALOMARI, M., CAHILL, M., FEKETE, A., AND ROHM, U. The cost
of serializability on platforms that use snapshot isolation. In 2008 IEEE
24th International Conference on Data Engineering (2008), IEEE,
pp. 576–585.
[6] AMAZON. Amazon EC2 instance types. https://aws.amazon.com/ec2/
instance-types/. [Online; accessed 19-Sept-2018].
[7] AMIR, Y., COAN, B., KIRSCH, J., AND LANE, J. Prime: Byzantine
replication under attack. IEEE Transactions on Dependable and Secure
Computing 8, 4 (2010), 564–577.
[8] ANDROULAKI, E., BARGER, A., BORTNIKOV, V., CACHIN, C.,
CHRISTIDIS, K., CARO, A. D., ENYEART, D., FERRIS, C., LAVENT-
MAN, G., MANEVICH, Y., MURALIDHARAN, S., MURTHY, C.,
NGUYEN, B., SETHI, M., SINGH, G., SMITH, K., SORNIOTTI, A.,
STATHAKOPOULOU, C., VUKOLIC, M., COCCO, S. W., AND YEL-
LICK, J. Hyperledger fabric: a distributed operating system for
permissioned blockchains. In Proceedings of the Thirteenth EuroSys
Conference, EuroSys 2018, Porto, Portugal, April 23-26, 2018 (2018),
pp. 30:1–30:15.
[9] ANTONIADIS, K., GUERRAOUI, R., MALKHI, D., AND SEREDIN-
SCHI, D.-A. State Machine Replication is More Expensive Than
Consensus. In DISC (2018).
[10] BAKER, J., BOND, C., CORBETT, J. C., FURMAN, J., KHORLIN, A.,
LARSON, J., LEON, J.-M., LI, Y., LLOYD, A., AND YUSHPRAKH, V.
Megastore: Providing scalable, highly available storage for interactive
services. In CIDR (2011).
[11] BEN-OR, M., KELMER, B., AND RABIN, T. Asynchronous secure
computations with optimal resilience. In Proceedings of the thirteenth
annual ACM symposium on Principles of distributed computing (1994),
ACM, pp. 183–192.
[12] BESSANI, A., SOUSA, J., AND ALCHIERI, E. E.
State Machine
Replication for the Masses with BFT-SMaRt. In DSN (2014).
[13] BEZERRA, C. E., PEDONE, F., AND VAN RENESSE, R. Scalable state-
machine replication.
In 2014 44th Annual IEEE/IFIP International
Conference on Dependable Systems and Networks (2014), IEEE,
pp. 331–342.
[14] BORRAN, F., AND SCHIPER, A. A leader-free byzantine consensus
algorithm. In Distributed Computing and Networking (Berlin, Heidel-
berg, 2010), K. Kant, S. V. Pemmaraju, K. M. Sivalingam, and J. Wu,
Eds., Springer Berlin Heidelberg, pp. 67–78.
[15] BRACHA, G. Asynchronous Byzantine agreement protocols. Informa-
tion and Computation 75, 2 (1987), 130–143.
[16] BRACHA, G., AND TOUEG, S. Asynchronous Consensus and Broad-
cast Protocols. JACM 32, 4 (1985).
[17] BUCHMAN, E., KWON, J., AND MILOSEVIC, Z. The latest gossip on
BFT consensus. arXiv preprint arXiv:1807.04938 (2018).
[18] CACHIN, C., GUERRAOUI, R., AND RODRIGUES, L.
Introduction
to reliable and secure distributed programming. Springer Science &
Business Media, 2011.
[19] CACHIN, C., AND PORITZ, J. A. Secure intrusion-tolerant replication
on the internet. In DSN (2002).
[20] CACHIN, C., AND TESSARO, S. Asynchronous veriﬁable information
dispersal. In 24th IEEE Symposium on Reliable Distributed Systems
(SRDS’05) (2005), IEEE, pp. 191–201.
[21] CACHIN, C., AND VUKOLI ´C, M. Blockchains consensus protocols in
the wild. arXiv preprint arXiv:1707.01873 (2017).
[22] CAHILL, M. J., R ¨OHM, U., AND FEKETE, A. D. Serializable isolation
for snapshot databases. ACM TODS 34, 4 (2009), 20:1–20:42.
[45] HERLIHY, M. Wait-free synchronization. ACM Trans. Program. Lang.
Syst. 13, 1 (1991), 123–149.
[46] HUNT, P., KONAR, M., JUNQUEIRA, F. P., AND REED, B. Zookeeper:
In USENIX ATC
Wait-free coordination for internet-scale systems.
(2010).
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:24:09 UTC from IEEE Xplore.  Restrictions apply. 
37
[74] VOGELSTELLER, F., AND BUTERIN, V. EIP 20: ERC-20 Token
Standard, 2015. https://eips.ethereum.org/EIPS/eip-20.
[75] VUKOLI ´C, M. The Quest for Scalable Blockchain Fabric: Proof-
In International Workshop on Open
of-work vs. BFT Replication.
Problems in Network Security (2015), Springer, pp. 112–125.
[76] WANG, J., AND WANG, H. Monoxide: Scale out blockchains with
asynchronous consensus zones. In NSDI (2019).
[77] WOOD, G. Ethereum: A secure decentralized generalized transaction
ledger. White paper, 2015.
[78] YIN, M., MALKHI, D., REITER, M. K., GUETA, G. G., AND ABRA-
HAM, I. Hotstuff: Bft consensus with linearity and responsiveness. In
Proceedings of the 2019 ACM Symposium on Principles of Distributed
Computing (New York, NY, USA, 2019), PODC ’19, ACM, pp. 347–
356.
[79] YU,
J., KOZHAYA, D., DECOUCHANT,
J., AND ESTEVES-
RepuCoin: Your Reputation Is Your Power.
VERISSIMO, P.
IEEE Transactions on Computers 68 (2018), 1225–1237.
[80] ZAMANI, M., MOVAHEDI, M., AND RAYKOVA, M. Rapidchain:
Scaling blockchain via full sharding. In Proceedings of the 2018 ACM
SIGSAC Conference on Computer and Communications Security (New
York, NY, USA, 2018), CCS ’18, ACM, pp. 931–948.
[47] KARLSSON, K., JIANG, W., WICKER, S., ADAMS, D., MA, E., VAN
RENESSE, R., AND WEATHERSPOON, H. Vegvisir: A Partition-
Tolerant Blockchain for the Internet-of-Things. In ICDCS (2018).
[48] KOKORIS-KOGIAS, E., JOVANOVIC, P., GASSER, L., GAILLY, N.,
SYTA, E., AND FORD, B. Omniledger: A secure, scale-out, decen-
tralized ledger via sharding. In IEEE S&P (2018).
[49] LAMPORT, L. Brief announcement: Leaderless byzantine paxos.
In
Distributed Computing (Berlin, Heidelberg, 2011), D. Peleg, Ed.,
Springer Berlin Heidelberg, pp. 141–142.
[50] LAMPORT, L., SHOSTAK, R., AND PEASE, M. The byzantine generals
problem. TOPLAS 4, 3 (1982).
[51] LIND, J., NAOR, O., EYAL, I., KELBERT, F., PIETZUCH, P., AND
SIRER, E. G. Teechain: A secure payment network with asynchronous
blockchain access, 2017.
[52] LLOYD, W., FREEDMAN, M. J., KAMINSKY, M., AND ANDERSEN,
D. G. Don’t settle for eventual. In SOSP (2011).
[53] LUU, L., NARAYANAN, V., ZHENG, C., BAWEJA, K., GILBERT, S.,
AND SAXENA, P. A secure sharding protocol for open blockchains. In
Proceedings of the 2016 ACM SIGSAC Conference on Computer and
Communications Security (2016), ACM, pp. 17–30.
[54] MALANOV, A. Cryptocurrency Threat Predictions for 2019. Kasper-
skyLab, November, 2018.
[55] MALKHI, D., MERRITT, M., AND RODEH, O.
Multicast Protocols in a WAN. In ICDCS (1997).
Secure Reliable
[56] MALKHI, D., AND REITER, M. K. Byzantine quorum systems.
In
STOC (1997), vol. 97, pp. 569–578.
[57] MALKHI, D., AND REITER, M. K. A high-throughput secure reliable
multicast protocol. Journal of Computer Security 5, 2 (1997), 113–128.
[58] MALKHI, D., REITER, M. K., WOOL, A., AND WRIGHT, R. N.
Probabilistic quorum systems. Inf. Comput. 170, 2 (Nov. 2001), 184–
206.
[59] MCCORRY, P., M ¨OSER, M., SHAHANDASTI, S. F., AND HAO, F.
In Australasian Conference on
Towards bitcoin payment networks.
Information Security and Privacy (2016), Springer, pp. 57–76.
[60] MILLER, A., XIA, Y., CROMAN, K., SHI, E., AND SONG, D. The
Honey Badger of BFT Protocols. In CCS (2016).
[61] MORARU, I., ANDERSEN, D. G., AND KAMINSKY, M. There is more
consensus in egalitarian parliaments.
In Proceedings of the Twenty-
Fourth ACM Symposium on Operating Systems Principles (2013),
ACM, pp. 358–372.
[62] NAKAMOTO, S. Bitcoin: A peer-to-peer electronic cash system.
Whitepaper (2008).
[63] NETWORK, T. R. The raiden network. https://raiden.network/, 2017.
[Online; accessed 9-September-2019].
[64] POON, J., AND DRYJA, T. The bitcoin lightning network: Scalable
off-chain instant payments, 2016.
[65] REITER, M., AND BIRMAN, K. How to securely replicate ser-
vices. ACM Transactions on Programming Languages and Systems
(TOPLAS) 16, 3 (1994).
[66] SCHEIDELER, C. How to Spread Adversarial Nodes? Rotate! In STOC
(2005), ACM, pp. 704–713.
LibPaxos3.
[67] SCIASCIA, D.
[Online; accessed 19-Sept-2018].
https://bitbucket.org/sciascid/libpaxos.
[68] SHAPIRO, M., PREGUIC¸ A, N., BAQUERO, C., AND ZAWIRSKI, M.
Conﬂict-free replicated data types. In Stabilization, Safety, and Security
of Distributed Systems. Springer, 2011.
[69] SOMPOLINSKY, Y., AND ZOHAR, A. Accelerating Bitcoin’s trans-
IACR
action processing: fast money grows on trees, not chains.
Cryptology ePrint Archive, 2013:881 (2013).
[70] SOUSA, J., BESSANI, A., AND VUKOLIC, M. A byzantine fault-
tolerant ordering service for the hyperledger fabric blockchain plat-
form. In DSN (2018).
[71] SUTRA, P.
On the correctness of egalitarian paxos.
CoRR
abs/1906.10917 (2019).
[72] VAN RENESSE, R., AND SCHNEIDER, F. B. Chain replication for
supporting high throughput and availability. In OSDI (2004).
[73] VISA INC. Visa fact sheet and quarter numbers. https://usa.visa.com/
dam/VCOM/global/about-visa/documents/visa-fact-sheet-april-2019.
pdf and https://s1.q4cdn.com/050606653/ﬁles/doc ﬁnancials/2019/Q3/
Visa-Inc-Q3-2019-Operational-Performance-Data.pdf, 2019. [Online;
accessed 9-September-2019].
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:24:09 UTC from IEEE Xplore.  Restrictions apply. 
38