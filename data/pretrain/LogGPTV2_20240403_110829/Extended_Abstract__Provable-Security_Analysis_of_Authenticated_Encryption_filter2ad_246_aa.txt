title:Extended Abstract: Provable-Security Analysis of Authenticated Encryption
in Kerberos
author:Alexandra Boldyreva and
Virendra Kumar
Extended Abstract: Provable-Security Analysis
of Authenticated Encryption in Kerberos
Alexandra Boldyreva
Virendra Kumar
Georgia Institute of Technology, School of Computer Science
266 Ferst Drive Atlanta, GA 30332-0765 USA
{aboldyre,virendra}@cc.gatech.edu
Abstract
Kerberos is a widely-deployed network authentication
protocol that is being considered for standardization. Many
works have analyzed its security, identifying ﬂaws and of-
ten suggesting ﬁxes, thus helping the protocol’s evolution.
Several recent results present successful formal-methods-
based veriﬁcation of a signiﬁcant portion of the current
version 5, and some even imply security in the computa-
tional setting. For these results to hold, encryption in Ker-
beros should satisfy strong cryptographic security notions.
However, neither currently deployed as part of Kerberos en-
cryption schemes nor their proposed revisions are known to
provably satisfy such notions. We take a close look at Ker-
beros’ encryption and conﬁrm that most of the options in
the current version provably provide privacy and authen-
ticity, some with slight modiﬁcation that we suggest. Our
results complement the formal-methods-based analysis of
Kerberos that justiﬁes its current design.
1
Introduction
MOTIVATION. Kerberos is a trusted-third-party network
authentication protocol.
It allows a client to authenticate
herself to multiple services, e.g. ﬁle servers and printers,
with a single login. Kerberos has become widely deployed
since its origination as MIT’s project Athena in 1988.
It
has been adopted by many big universities and corporations,
is part of all major computing platforms such as Windows
(starting from Windows 2000), Linux and Mac OS, and is a
draft standard at IETF [26].
Security of Kerberos has been analyzed in many works,
e.g. [14, 25, 6, 5, 23, 18, 27]. Most commonly analyses
identify certain limitations or ﬂaws in the deployed versions
of Kerberos and sometimes propose ﬁxes. This leads to the
evolution of the protocol, when a new version patches the
known vulnerabilities of the previous versions. The current
version Kerberos v.5 is already being revised and extended
[20, 22, 21].
What is certainly desirable for the upcoming standard
is to provide some guarantees that the protocol does not
only resist some speciﬁc known attacks, but withstands a
very large class of possible attacks, under some accepted
assumptions. Modern techniques in cryptography (compu-
tational approach) and formal methods (symbolic approach)
make it possible, however formally analyzing such a com-
plex protocol is not an easy task.
Several recent works contributed in this direction. Butler
et al. [16, 17] have analyzed the signiﬁcant portions of the
current version of Kerberos and its extensions in the sym-
bolic approach (i.e. Dolev-Yao model) and have formally
veriﬁed that the design of Kerberos’ current version meets
the desired goals for the most parts. However, a known lim-
itation of such analyses is high level of abstraction. A sig-
niﬁcant advance has been made by a recent work by Backes
et al. [1] in that it is the only work providing symbolic anal-
ysis that also guarantees security in the computational set-
ting, which is the well-accepted strongest model of secu-
rity. Their results use the computational-soundness model
due to Backes et al. [4, 3, 2]. However, for their results to
hold the cryptographic primitives used in the protocol need
to satisfy strong notions of security (in the computational
setting). Namely, the encryption scheme utilized by the pro-
tocol needs to provide privacy against chosen-ciphertext at-
tacks (be IND-CCA secure) and integrity of ciphertexts (be
INT-CTXT secure) [2, 1].
However, it is not known whether encryption1 in Ker-
beros is IND-CCA and INT-CTXT. Certain known vulner-
abilities indicate that encryption in version 4 did not satisfy
1We will also refer to encryption schemes whose goal is to provide
privacy and authenticity as authenticated encryption.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:53:14 UTC from IEEE Xplore.  Restrictions apply. 
2007 IEEE Symposium on Security and Privacy(SP'07)0-7695-2848-1/07 $20.00  © 2007these notions [27]. While encryption in the current version
5 is designed to resist known attacks it is not clear whether
it provable resists all attacks of the class, and if yes – un-
der which assumptions. Provable security has become a de-
facto standard in modern cryptographic research. Cryptog-
raphers design plenty of cryptographic schemes for almost
all imaginable future applications, and usually provide rig-
orous proofs of security for their constructions. It is some-
what surprising that the schemes that are actually used in
deployed protocols remain unanalyzed from the provable-
security perspective. Our work aims at closing this gap.
CONTRIBUTIONS. We take a close look at the encryption
schemes used in Kerberos v.5 (according to its speciﬁca-
tions) in order to prove them secure, in the IND-CCA and
INT-CTXT sense, assuming the underlying building blocks
(e.g. a block cipher) are secure.
We ﬁrst look at the encryption description in the current
version 5 speciﬁcation (cf Section 6 in [22].) We will refer
to it as “general proﬁle”. Fix a block cipher with input-
output length n and a key for it. A message M is ﬁrst
padded so that its length is multiple of n. Next a random
n-bit string conf is chosen. Then a checksum, i.e. a hash
function is applied to the string conf k 0n k M. Let us call
the checksum’s output σ. Finally, the block cipher in the
CBC mode with ﬁxed initial vector IV = 0n is applied
to the string conf k σ k M. Decryption is deﬁned accord-
ingly. The recommended options are DES as the block ci-
pher and MD4 or MD5 as hash functions, which is not a
very good choice for known reasons. DES is an outdated
standard since its key size is too small given modern com-
puting power, and collisions have been found in MD4 and
MD5 [24]. What we show is that even if one assumes a
secure block cipher in a secure encryption mode and a se-
cure hash function, the construction is not secure in general.
That is, there is an attack on the scheme composed of secure
components that shows that it does not provide integrity of
ciphertexts. We propose a simple change that is sufﬁcient
for security of the design of the general proﬁle. Namely, we
show that if a secure message authentication code (MAC) is
used in place of the hash function, then the scheme given by
the general proﬁle is IND-CCA and INT-CTXT, also assum-
ing that underlying the block cipher is secure. We note that
the proposed modiﬁcation does not require heavy changes
in the implementations.
Suggested revisions to the Kerberos’ design [21] that
however did not yet catch up with the implementations,
do recommend to use AES or Triple-DES as a block ci-
pher and HMAC [8] as a MAC, but in a different manner.
Under the so-called “simpliﬁed proﬁle” (cf. Section 5 in
[22] and [21]) the message is ﬁrst encoded such that the
necessary padding is appended and a random confounder
is pre-pended. The block cipher in CBC mode or a vari-
ant of CBC mode with ciphertext-stealing both with ﬁxed
all-zero-bit IV and HMAC are applied to the encoded mes-
sage independently to yield two parts of the resulting ci-
phertext. Decryption is deﬁned accordingly. We prove that
this method yields an encryption scheme that is IND-CCA
and INT-CTXT secure. This conﬁrms soundness of the de-
sign of the simpliﬁed proﬁle, that, unlike general proﬁle, is
secure in general.
While our results are not as unexpected or “catchy” as
some results discovering a ﬂaw or implementing an attack
on a practical protocol, they are far from being less impor-
tant. Having provable security guarantees is an invaluable
beneﬁt for any cryptographic design, especially a widely
deployed protocol. Our results together with the formal-
methods-based results in the symbolic setting constitute
strong provable-security support for the design of Kerberos.
RELATED WORK. Bellare and Namprempre [12] study
various ways to securely compose secure (IND-CPA) en-
cryption and secure (unforgeable against chosen-message
attacks or UF-CMA) message authentication code (MAC)
schemes. They show that the only one out of three most
straight-forward composition methods, Encrypt-then-MAC,
is secure in general, i.e. always yields an IND-CCA and
INT-CTXT encryption scheme. At the same time cer-
tain secure components can yield a scheme constructed
via Encrypt-and-MAC or MAC-then-Encrypt paradigm that
is not IND-CCA or not INT-CTXT. If Kerberos’ design
had utilized the Encrypt-then-MAC composition method
with secure encryption and MAC schemes, we would have
nothing to prove here. But for some reasons Kerberos
uses some variations of Encrypt-and-MAC or MAC-then-
Encrypt methods that also rely on the properties of the en-
codings of the message, i.e. of pre-processing of the mes-
sage before encryption and MAC are applied.
Bellare et al. [11] analyze security of encryption in an-
other widely deployed protocol, Secure Shell aka. SSH.
They suggest several modiﬁcations to the SSH encryption
to ﬁx certain ﬂaws and prove that the resulting scheme prov-
ably provides privacy against chosen-ciphertext attacks and
integrity of ciphertexts. They also provide general results
about security of stateful encryption schemes composed
according to Encode-then-Encrypt-and-MAC paradigm as-
suming certain security properties of the base encoding, en-
cryption and MAC schemes. The encryption scheme pro-
posed for the revision of Kerberos v.5 (cf. simpliﬁed proﬁle
in [22]) conforms to the Encode-then-Encrypt-and-MAC
method. However, the security results from [11] do not di-
rectly imply strong security notions of the simpliﬁed proﬁle
in Kerberos. First, the general results from [11] do not guar-
antee a strong notion of integrity of ciphertexts (they only
consider a weaker notion of integrity of plaintexts). Second,
the result of [11] require IND-CPA secure base encryption
scheme but as we mentioned above the base encryption in
Kerberos is CBC with ﬁxed IV and is not IND-CPA secure.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:53:14 UTC from IEEE Xplore.  Restrictions apply. 
2007 IEEE Symposium on Security and Privacy(SP'07)0-7695-2848-1/07 $20.00  © 20072 Preliminaries
is small3.
NOTATION. If X, Y are strings then X k Y denotes their
concatenation.
If A is a randomized algorithm, then the
notation X $← A denotes that X is assigned the outcome of
the experiment of running A, possibly on some inputs. If A
is deterministic, we drop the dollar sign above the arrow.
CRYPTOGRAPHIC PRIMITIVES ANF THEIR SECURITY.
Deﬁnition 2.1 [Symmetric encryption scheme] A sym-
metric encryption scheme SE = (K,E, D) with associated