### 监控项配置与接口类型

在创建或配置监控项时，您需要选择一个检测类型。以下是关于监控项类型和接口的一些关键点：

#### 1. 监控项类型
从Zabbix 2.0开始，一台主机可以定义多个接口。这些接口包括Agent、JMX、IPMI和SNMP等。

- **Agent**: 用于获取客户端服务器的数据。
- **JMX**: 用于Java应用程序的监控。
- **IPMI**: 用于硬件级别的监控（如主板温度）。
- **SNMP**: 用于网络设备的监控。

每个监控项都需要配置相应的接口。如果配置了多个接口，Zabbix会依次尝试调用这些接口（顺序为：Agent → SNMP → JMX → IPMI），直到找到合适的接口为止。

有些监控项完全由服务器端完成，不需要Agent。接下来我们将详细介绍Zabbix的各种监控类型。

#### 2. Zabbix Agent 类型及Keys
Zabbix通过与Zabbix Agent通信来获取客户端服务器的数据。Agent分为被动模式和主动模式两种。

- **被动模式 (Passive)**: Zabbix Server向Zabbix Agent请求数据。
- **主动模式 (Active)**: Zabbix Agent主动提交数据给Zabbix Server。

以下是一些常见的Zabbix Agent Keys及其功能：

| Key | 功能 | 返回值 | 参数 | 描述 |
|-----|------|--------|------|------|
| `agent.hostname` | 获取主机名 | 字符串 | - | - |
| `agent.ping` | 检查Agent是否在线 | 字符串 | - | - |
| `agent.version` | 获取Agent版本 | 字符串 | - | 例如返回：1.8.2 |
| `kernel.maxfiles` | 系统支持的最大打开文件数 | 整数 | - | - |
| `kernel.maxproc` | 系统支持的最大进程数量 | 整数 | - | - |
| `log[file,,,,,]` | 监控日志文件 | Log file | 文件详细路径, 正则表达式, 编码, 最大行数, mode, output | 示例: `log[/var/log/syslog,error]` |
| `logrt[file_pattern,,,,,]` | 监控支持轮转的日志 | Log file_pattern | 文件绝对路径, 正则表达式, 编码, 最大行数, mode, output | 示例: `logrt["/home/zabbix/logs/^logfile[0-9]{1,3}$",,,,100]` |
| `net.dns[,zone,,,]` | 检测DNS服务是否开启 | 0 或 1 | ip, zone, type, timeout, count | 示例: `net.dns[8.8.8.8,zabbix.com,MX,2,1]` |
| `net.dns.record[,zone,,,]` | 执行DNS查询 | DNS查询数据 | ip, zone, type, timeout, count | 示例: `net.dns.record[8.8.8.8,ttlsa.com,MX,2,1]` |
| `net.if.collisions[if]` | 网卡冲突次数 | 数字 | if | 网卡名称 |
| `net.if.discovery` | 列出网卡 | JSON对象 | - | 支持FreeBSD, OpenBSD, NetBSD |
| `net.if.in[if,]` | 网卡入口流量 | 整数 | if, mode | 示例: `net.if.in[eth0,errors]` |
| `net.if.out[if,]` | 网卡出口流量 | 整数 | if, mode | 示例: `net.if.out[eth0,errors]` |
| `net.if.total[if,]` | 网卡进出流量总和 | 整数 | if, mode | 示例: `net.if.total[eth0,errors]` |
| `net.tcp.listen[port]` | 检测端口是否监听 | 0 或 1 | port | 示例: `net.tcp.listen[80]` |
| `net.tcp.port[,port]` | 检测TCP端口是否可用 | 0 或 1 | ip, port | 示例: `net.tcp.port[,80]` |
| `net.tcp.service[service,,]` | 检测服务是否开启且端口可用 | 0 或 1 | service, ip, port | 示例: `net.tcp.service[ftp,,45]` |
| `net.tcp.service.perf[service,,]` | 检测服务器性能 | 秒 | service, ip, port | 示例: `net.tcp.service.perf[ssh]` |
| `net.udp.listen[port]` | 检测UDP端口是否监听 | 0 或 1 | port | 示例: `net.udp.listen[68]` |
| `proc.mem[,,,]` | 用户进程消耗的内存 | 字节 | name, user, mode, cmdline | 示例: `proc.mem[zabbix_server,zabbix]` |
| `proc.num[,,,]` | 某用户某些状态的进程数量 | 数量 | name, user, state, cmdline | 示例: `proc.num[apache2,www-data]` |
| `sensor[device,sensor,]` | 读取硬件传感器 | 设备传感器数据 | device, sensor, mode | 示例: `sensor[cpu0,temp0]` |
| `system.boottime` | 系统启动时间 | Unix时间戳 | - | - |
| `system.cpu.intr` | 设备中断次数 | 整数 | - | - |
| `system.cpu.load[,mode]` | CPU负载 | 浮点数 | cpu, mode | 示例: `system.cpu.load[,avg5]` |
| `system.cpu.num[]` | CPU数量 | 处理器个数 | type | 示例: `system.cpu.num` |
| `system.cpu.switches` | 上下文交换次数 | 整数 | - | 老命名方式: `system[switches]` |
| `system.cpu.util[,,]` | CPU利用率 | 百分比 | cpu, type | 示例: `system.cpu.util[0,user,avg5]` |

请仔细阅读并熟悉这些Key，以便更好地配置和管理您的监控项。