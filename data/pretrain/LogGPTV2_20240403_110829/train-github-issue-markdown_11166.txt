Importing from `three/examples/jsm/.../` causes bundlers (tested with
rollup) to include the library twice (or multiple times).
For example, when doing `import { OrbitControls } from
'three/examples/jsm/controls/OrbitControls'`, the bundler will follow the
import and in the OrbitControls.js the imports come from
`../../../build/three.module.js`. However, there is no way for the (external)
bundler to know that `../../../build/three.module.js` is the same module as
`three`.
A solution for this would be to treat the examples modules as external
packages and import from `three` instead of `../../../build/three.module.js`.
This might break the rollup config of three.js, but it should be possible to
tell rollup that `three` is an alias for the main entry point of three
(`src/Three.js`).