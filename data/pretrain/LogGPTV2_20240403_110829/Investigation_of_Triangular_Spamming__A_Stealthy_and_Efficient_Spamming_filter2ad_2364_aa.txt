title:Investigation of Triangular Spamming: A Stealthy and Efficient Spamming
Technique
author:Zhiyun Qian and
Zhuoqing Morley Mao and
Yinglian Xie and
Fang Yu
Investigation of Triangular Spamming:
a Stealthy and Efﬁcient Spamming Technique
Zhiyun Qian1, Z. Morley Mao1, Yinglian Xie2, Fang Yu2
1University of Michigan and 2Microsoft Research Silicon Valley
Abstract—Spam is increasingly accepted as a problem
associated with compromised hosts or email accounts. This
problem not only makes the tracking of spam sources difﬁcult
but also enables a massive amount of illegitimate or unwanted
emails to be disseminated quickly. Various attempts have been
made to analyze, backtrack, detect, and prevent spam using
both network as well as content characteristics. However,
relatively less attention has been given to understanding
how spammers actually carry out their spamming activities
from a network angle. Spammers’ network behavior has
signiﬁcant impact on spammers’ common goal, sending spam
in a stealthy and efﬁcient manner. Our work thoroughly
investigates a fairly unknown spamming technique we name
as triangular spamming that exploits routing irregularities of
spoofed IP packets. It is highly stealthy and efﬁcient in that
triangular spamming enables 1) exploiting bandwidth diversity
of botnet hosts to carry out spam campaigns effectively without
divulging precious high-bandwidth hosts and 2) bypassing the
current SMTP trafﬁc blocking policies. Despite its relative
obscurity, its use has been conﬁrmed by the network operator
community. Through carefully devised probing techniques and
actual deployment of triangular spamming on Planetlab (a
wide-area distributed testbed), we investigate the feasibility,
impact of triangular spamming and propose practical detec-
tion and prevention methods. From our probing experiments,
we found that 97% of the networks which block outbound
SMTP trafﬁc are vulnerable to triangular spamming and only
44% of them are listed on Spamhaus Policy Blocking List
(PBL).
ingly more stealthy by restricting each IP or compromised
host to only send very few spam messages to each target in
order to stay under the radar [39]. In the meanwhile, ISPs
are enforcing the outbound SMTP (port 25) blocking policy
for their end-hosts in an effort to reduce spam originated
from their networks [13], [14].
In this paper, we systematically study triangular spam-
ming, a clever spamming technique that has been known for
several years, but never systematically studied. Triangular
spamming, as its name suggests, involves three main parties,
target mail server, original spam sender (or high-bandwidth
bot) and relay bot (or low-bandwidth bot). The key idea is
that with relay bots’ cooperation, the original sender (high-
bandwidth bot) can send spam in high throughput while
hiding its own IP address by spooﬁng the relay bots’ IP
addresses. In a recent NANOG survey [9], although the
network operator community is already aware of such prob-
lems, our study shows that most ISPs still do not enforce
the correct SMTP blocking policy to prevent triangular
spamming.
We focus on three key questions:
1. What are the requirements of triangular spamming, and
is today’s network vulnerable to such spamming behavior?
2. What are the beneﬁts of triangular spamming, and is
it used in the wild today?
I. INTRODUCTION
3. What are the possible solutions to prevent or mitigate
Spam constitutes an enormous waste of network re-
sources. As reported, over 90% to 97% of all emails are
spam [8]. Despite all
the past efforts in spam mitiga-
tion, the problem still remains unsolved. There are two
main categories of spam ﬁltering techniques: content-based
and blacklist-based. While content-based ﬁltering is the
canonical way, blacklist-based approach (e.g., Spamhaus,
Spamcop [19], [18]) is receiving much attention recently
because it does not rely on email content and may be
more efﬁcient and less susceptible to evasion. While IP-
based blacklist is simple and lightweight, compiling and
maintaining such a list is challenging due to the changing
landscape of compromised hosts: more hosts can become
compromised; they could change IP addresses over time;
and they may also be patched. As a result, it is not surprising
that most IP blacklists provide a very limited coverage of
malicious IPs involved in sending spam [36].
Further, as spam detection and prevention techniques
evolve, so do spamming techniques. Spammers are increas-
such a spamming approach?
As triangular spamming essentially exploits network-
level vulnerability, it requires a detailed understanding of
network operational practices that are usually overlooked
in security research domain. In this paper, we surveyed the
network policy practices in addition to conducting large-
scale experiments to verify and explore current network
policies of various ISPs. More speciﬁcally, we are focusing
on the port blocking policy employed by ISPs.
Our study makes the following contributions:
1. We designed an accurate and effective probing tech-
nique to discover the networks that attempt to block out-
going port 25 trafﬁc but fail to enforce the correct port
blocking policy, thus are vulnerable to triangular spamming.
2. We found that 97% of the blocking networks fall into
the above category. Only 44% of such preﬁxes are listed on
Spamhaus PBL [37].
3. We conducted experiments to ascertain the existence
of triangular spamming at the mail server side.
Trafﬁc from mail server to relay bots are not blocked.
As we can observe from Figure 1, even though the relay
bot does not have to contact the mail server directly, it
must receive packets from the mail server in order to relay
them back to the original sender. However, if such trafﬁc
is blocked, then triangular spamming will fail to operate.
In §III, by conducting intelligent probing to infer port
blocking policies, we show that most ISPs do not block such
trafﬁc today. On the other hand, trafﬁc from the relay bot
to the original sender can be easily tunneled and encrypted
so that it can be hard to detect and ﬁlter.
Also, it is generally more difﬁcult for NATed hosts to
participate as relay bots given that they will have to be
able to receive packets on a speciﬁc source port. However,
with the development of NAT traversal techniques such
as uPnP [22] (many home routers by default enable this
feature), it is rather easy for compromised hosts to initiate
requests to add or modify port mappings on their routers.
In fact, previous attacks have demonstrated that a malicious
Web site can use Flash to control the client’s uPnP-enabled
router [6]. Note also that the port value only needs to be
larger than 1024 (which will unlikely be in conﬂict with
other applications).
B. Implications of triangular spamming
Port blocking policy bypassing. Many ISPs nowa-
days enforce outbound SMTP trafﬁc (port 25) blocking
in an effort to prevent compromised hosts or bots inside
their networks from sending spam targeting destinations
outside their networks. In the following we denote from
the perspective of a given network outgoing packets with
destination port 25 as OUT trafﬁc and incoming trafﬁc
with source port 25 as IN packets (which is usually the
response packets sent from the mail server) for ease of
exposition. The phrase “outbound SMTP trafﬁc blocking”
refers to an abstract policy that tries to prevent outbound
spam by either blocking IN trafﬁc or OUT trafﬁc or both.
The problem is that only blocking OUT trafﬁc but not
IN trafﬁc (which is the second requirement of triangular
spamming) by ISPs is insufﬁcient to fully prevent their
internal hosts from participating in spamming activities.
Using triangular spamming, those IP addresses can still be
“hijacked” to send spam. Note that for ISPs that do not try
to prevent outbound spam, they will not block IN trafﬁc
either as it is necessary for outgoing SMTP connection to
be established.
Higher spamming throughput compared to sending
directly from botnets. Spammers can rent high bandwidth
pipes to send spam with higher throughput due to the
nature of triangular spamming — most of the trafﬁc is
uplink trafﬁc directly ﬂowing from the spammer to the mail
server without going through bots (See Figure 1). Although
response packets from the mail server have to inevitably
traverse bot hosts, they may not be the bottleneck as the
spammer can parallelize connections by leveraging many
different bots they may already have access to today.
Figure 1. Triangular spam delivery example
4. We systematically evaluated the feasibility and ben-
eﬁts of triangular spamming via experiments of actually
deployed setups on Planetlab. Based on the operational
experience, we discuss promising prevention and detection
approaches to triangular spamming.
The remainder of the paper is structured as follows:
§ II describes the basic requirements and implication of
triangular spamming. § III studies the port blocking policy
extensively for thousands of networks. § IV describes our
experience and lessons learned from building triangular
spamming and deploying it on Planetlab on our own. § V
describes possible detection and prevention techniques and
ascertain the existence of triangular spamming. § VI surveys
the related work and § VII concludes our work.
II. TRIANGULAR SPAMMING MECHANISM AND
IMPLICATION
As shown in Figure 1, triangular spamming exploits IP
spooﬁng to route packets indirectly for the purpose of
hiding the identity of actual sending hosts and increasing
spam throughput. The spammer picks one or more high-
bandwidth bots (or original sender) to send spam directly
to target mail server while spooﬁng the source IP addresses
of relay bots. These bots listen for any relevant packets,
e.g., those from port 25 from the mail server and forward
them back to the original spammer.
A. Triangular spamming requirement
IP spooﬁng is allowed at the origin sender network.
IP spooﬁng has long been studied for implications such as
DoS attacks [28]. Although the problem has been studied
extensively for two decades or so, it is still largely unsolved
due to various deployment challenges, e.g., the network pol-
icy for enforcing anti-spooﬁng such as unicast reverse path
forwarding (uRPF) [26], [21] is limited by multi-homing,
route asymmetry, complexity of managing and updating the
ﬁltering rules. Indeed, based on the Spoofer study [27], 31%
of the IP addresses studied allow successful spooﬁng of
an arbitrary, routable source address. We perform our own
study to determine the degree IP spooﬁng is possible in
order to ascertain the feasibility of triangular spamming on
today’s Internet.
III. ISP PORT BLOCKING POLICY INFERENCE AND
POLICY IMPACT ANALYSIS
How ISPs conﬁgure outbound SMTP trafﬁc blocking
determines whether triangular spamming can work. As we
discussed, many ISPs now enforce the outbound SMTP
trafﬁc blocking policy, but it is unclear what the exact
policy is. In this section, we present a systematic empirical
analysis on the port blocking policy of various ISPs. More
speciﬁcally, we intend to study 1) which ISPs currently
enforce outbound SMTP trafﬁc blocking, covering as many
ISPs as possible, 2) under their current policies, how many
are vulnerable to triangular spamming either as sending
hosts or as relay hosts as described previously.
A. Port blocking model
We make several reasonable assumptions about the ﬁre-
wall blocking model in order to design tests to infer ﬁrewall
policies. First, we assume that ISPs are not blocking port
25 trafﬁc based on packet content (also known as Deep
Packet Inspection or DPI) given DPI is more expensive
and difﬁcult to operate at line speed. Indeed, direct port
25 blocking is the most commonly enforced policy [13],
[14]. We also assume that blocking is directional and can be
conﬁgured based on TCP/IP header, e.g., source/destination
IP address, source/destination port, protocol types (e.g.,
TCP or UDP) and TCP ﬂags (e.g., SYN, ACK). This model
is commonly adopted in most modern ﬁrewalls ranging
from heavy-weight devices (e.g., Cisco PIX ﬁrewall [4])
to host ﬁrewall software on PCs (e.g., iptables [10]). For
example, a sample ﬁrewall rule that blocks outbound SMTP
trafﬁc would appear as:
SrcIP DstIP SrcPort DstPort Protocol TCP-flags Action
Any
Any
Any
25
TCP
ALL
Drop
There are two important observations to make here. First,
suppose this rule is applied to outgoing trafﬁc, i.e., trafﬁc
from ISPs’ internal hosts to external networks, it effectively
blocks only unidirectional outgoing trafﬁc, implying that
packets from an external mail server destined to internal
hosts with source port 25 will not be blocked. This moti-
vates our study on inferring current port blocking policies of
different ISPs to discover if they are vulnerable to triangular
spamming. This problem is illustrated in Figure 2 — the
ISP can either block OUT trafﬁc, IN trafﬁc, or both. It is
known that many ISPs only block OUT trafﬁc due to the
simplicity of such policies and the additional complexity of
conﬁguring incoming port 25 trafﬁc ﬁltering as mentioned
in previous work [27]. For instance, depending on where
the ﬁrewall is located, there has to be many exceptions
in the ﬁrewall rules speciﬁcally (sometimes separately) for
outgoing mail servers and incoming mail servers. As the
recent NANOG survey [9] shows, some real-world ISP
operators do consider that blocking OUT is simpler and
has less impact on the trafﬁc (there is less outgoing trafﬁc
than incoming trafﬁc).
Figure 2. Possible outbound SMTP trafﬁc blocking policy
Second, we note that a stateful ﬁrewall that tracks in-
dividual TCP connection states could block IN packets
associated with triangular spamming simply because they
are “out-of-state”. For example, SYN-ACK packets without
any prior associated SYN packets will be dropped by such
a stateful ﬁrewall. However, it is difﬁcult for ISPs to adopt
this due to two reasons: 1) it is expensive to keep track
of the state associated with a large number of ﬂows, and
2) some out-of-state trafﬁc, e.g., probing, can be legitimate.
Note that host ﬁrewalls can easily support stateful checking,
but if the host is already compromised, such ﬁrewalls are
easily disabled or bypassed. On the other hand, network
ﬁrewalls are unlikely modiﬁed by spammers. Given this key
difference, we attempt to distinguish host-based blocking
from ISP-level port blocking as discussed later in §III-B2.
B. ISPs that block OUT trafﬁc
To study whether most ISPs block OUT trafﬁc instead of
IN trafﬁc, we ﬁrst ﬁnd a set of candidate ISPs or IP ranges
that block outbound SMTP trafﬁc and then use the probing
methodology discussed in §III-C1 to distinguish OUT trafﬁc
blocking from IN trafﬁc blocking.
1) Experiment design: There are several approaches to
discover the outbound SMTP trafﬁc blocking behavior.
it
Surveying ISPs would be the simplest approach. How-
ever, many ISPs treat such information as conﬁdential and
only reveal
to new or existing customers. Very few
ISPs openly disclose such information (e.g., Sonic.net [14]).
ISPs’ knowledge of their policies may lack sufﬁcient de-
tail and may also be inaccurate due to misconﬁgurations.
Further, port blocking policy may change over time and
may vary depending on location. For example, Comcast was
known to enforce such policies [5]. However, our controlled
experiment (via testing using Comcast service at home)
indicates that Comcast is not blocking outbound SMTP
trafﬁc at the time we conducted the experiment.
The second approach is to obtain control at both end-
points by installing a probing program on end-hosts in-
side various ISPs, which communicate with a server man-
aged by us. For instance, the ICSI Netalyzr [7] requires
users to download a Java applet and likewise the Spoofer
project [27] requests users to explicitly download a program
to run. However, such an approach is more challenging to
accomplish wide-scale adoption.
Figure 3. HTML code snippet
The third approach is to probe with single end control
only. We can mimic a mail server sending TCP packets with
source port 25 to the other end (on some well-known ports)
with SYN-ACK or ACK ﬂags. Depending on the OS and
host ﬁrewall settings, probed end-hosts may respond with
a RST packet (we veriﬁed this behavior for Windows XP
SP2 and Linux Ubuntu 9.04). If all live end-hosts respond
to the our source port 80 probing but never to our source
port 25 probing, it is highly likely that this ISP is blocking
outbound SMTP trafﬁc instead of individual hosts doing so.
This approach has the beneﬁt of being easily carried out so
that we can probe any host or network of interest. However,
the choice of which IP address ranges to start with limit its
use.
Considering tradeoffs of these various approaches, we
adopt a hybrid one combining the second and third ap-
proach. In order to obtain control from ISP’s side, we chose
to develop a simple, invisible Flash [1] program that can be
easily embedded in Web sites and transparently executed
at the client side. Figure 3 shows the HTML code to be
inserted into Web pages (Note that IP address of the server
is used to avoid an additional lookup overhead). We inserted
it at various university department and educational Web
sites in the U.S. and China to obtain a variety of client
IP addresses.
Note
that
code
simpler HTML
like  can achieve the same goal. However,
direct port 25 access in HTML is blocked by browsers like
Firefox due to security reasons, i.e., one can craft forged
HTML Form Post formatted to send out spam emails.
However, Flash is in a completely different domain from
the browser and is allowed to initiate outgoing port 25
connection by default. If our Flash program indeed fails
to establish the connection, then it is most likely blocked
by ﬁrewalls at the host or at the network. To distinguish
between these two, more data points from that network are
needed.
The choice of Flash is supported by the observation that
99% of modern browsers deployed [23] have the Flash
plugin installed. Thus almost every client can execute the
program which simply tries to initiate an outgoing port
25 connection and terminates immediately upon success.
Logging by our server will record this along with the initial
download of the Flash script via HTTP. This allows us to
distinguish IP addresses that succeeded in the test from
those that failed to connect to the port 25 on our server.
2) Probing results: As shown in Table I, based on our
two months of data collected, we gathered about 21,131
unique IP addresses (excluding 2,749 local IP addresses) in
our Web log spanning across 7,016 BGP preﬁxes. Based
on a simple DNS name heuristic, we classify the preﬁxes
into educational institutions and ISPs, since our clients are
mostly students who likely access through home or school
networks. 341 of them are educational institutions, 2987
are ISPs, and 3691 are unknown (We randomly probed IP
addresses within the preﬁx with some threshold, if none of
them has a DNS name, then it is classiﬁed as unknown).
Although 3,563 (51%) preﬁxes contain at
least one IP
address blocked for outbound SMTP trafﬁc, only 2,600
preﬁxes (37%) have all IP addresses blocked. Interestingly,
there are 622 IP addresses that connected to port 25 without
connecting to our Web server. We suspect that these are
spammers probing for open relays.
For many preﬁxes, we only have limited samples (IP
addresses) and the blocking behavior may not represent
the preﬁx-level policy, i.e., it is possible the host ﬁrewall
blocks the outbound port 25 trafﬁc which is not easily
determined by the Flash script. As a result, we conducted
further probing to verify that the ISPs are indeed block-
ing outbound SMTP trafﬁc in those IP ranges. Extensive
probing (piggybacked in our IN/OUT blocking described
in Section III-C) for every IP address in the preﬁx range is
carried out to avoid incorrect conclusions caused by outliers,
i.e., host ﬁrewall rather than ISP ﬁrewall blocking trafﬁc.
Although we could also develop some randomized probing
algorithm, the problem is that we do not know when is
sufﬁcient to stop and even if we stop at some threshold
number of responses, we may still miss the remaining IP
addresses with different behaviors.
The results show that about 688 preﬁxes have at least
some /24 sub-ranges blocking outbound SMTP trafﬁc, as-
suming the policy is conﬁgured at most at the granularity of
/24, matching the ﬁnest routing granularity on the Internet.
Out of these 688 preﬁxes, 25 are educational institutions,
483 are ISPs, and the remaining 180 are unknown.
To illustrate the diversity of our dataset, we look up the