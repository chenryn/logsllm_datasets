each element T –>I ndex(i)–>I ndex(j)–>M ark() of T :
-1: for a connection from the the arc i to the node j (the
current ﬂow enters into the node);
+1:
current ﬂow exits from the node);
-2, +2: if the connection has been opened and can be closed
by reconﬁguration;
-3, +3: if the connection has been opened due to a disrup-
tion and can be only closed after a repair.
for a connection from the node i to the arc j (the
Figure 7. SAN of the component NS
For the sake of simplicity, we only consider two differ-
ent types of electric parameters, the current ﬂow and the
voltage. The extended places I and V are arrays of nEP S
struct type, with nEP S = nG + nS + nL + nA, and rep-
resent the electric parameters and the current values asso-
ciated to each component for the current ﬂow and for the
voltage, respectively (A2♦, B4♦). For example, for each
generation plant i, I–>I ndex(i) represents the produced
current ﬂow and the maximum current ﬂow which can be
produced; for each station i, I–>I ndex(i) represents the
current ﬂow associated to it, the threshold current ﬂow for
an overload, and the threshold current ﬂow for a breakdown
of the component. The extended place disruptionRates
is an array of nEP S struct type and represents the rate
of occurrence of different types of disruptions associated
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007to each component. These rates depend on the compo-
nent (e.g., the length of the line, the position of the sta-
tion, etc.) and on the type of disruption (lightning, tree
fall, etc.). The extended place disrupted is an array of
nEP S short type and represents the state of disruption of
each component. The extended places f aultyP rotection1
and f aultyP rotection2 are arrays of nA short type and
represent the state of failure of the protections associated to
each line.
The activity setupAll is enabled when the marking of
N Sindex is equal to 0, i.e., for each replica of the SAN
for which the N Sindex has not yet been set. The func-
tion of the input gate if Z ero removes one token from
N Scount and sets the marking of N Sindex to nG + (nS −
N Scount–>M ark()) − 1. This part of the model enables
to distinguish each replica when the NS model is replicated
nS times to build the complete EI infrastructure (B2♦). The
gate setupAll is executed only by the ﬁrst replica, and it
sets all the parameters and the initial state of EI represented
by the extended places by the following C++ like code:
if( NSindex->Mark()==nG) {
setupT(configTfile, T, nA, nN);
setupI(configIfile, I, nEPS);
setupV(configVfile, V, nEPS);
setupDisruptionRates(configDisRatefile,
disruptionRates, nEPS); }
setupV ()
setupI(),
functions setupT (),
and
The
the initial values of the
setupDisruptionRates() set
extended places by reading the conﬁguration values from
the input ﬁles. For example, the input ﬁle conf igT f ile can
have a row for each electric line with the following format:
“nodeIndex arcIndex nodeIndex”.
The activity T propagate represents the occurrence
of an event of current ﬂow overload (e.g.,
lightnings)
which can propagate instantaneously to neighbour compo-
nents. This activity has exponential distribution with rate
disruptionRates–>I ndex(N Sindex–>M ark())
–>overloadP ropagation–>M ark(). Upon T propagate
completion, the code of the gate propagateOverload is ex-
ecuted:
propagateOverload(T, disrupted, faultyProtection1,
faultyProtection2, T, NSindex->Mark());
autoevolution(T, I, V);
if( disrupted->Index(NSindex->Mark())->Mark()==0 )
canPropagate->Mark()=1;
The function propagateOverload() receives in input the
topology state T , the disruption state of the components
disrupted,
the state of the failure of the protections
f aultyP rotection1 and f aultyP rotection2, the current
ﬂow on the grid and the index of the component affected
by the overload (A4♦). The result of the execution of
propagateOverload() is that the values of T , disrupted,
f aultyP rotection1 and f aultyP rotection2 are modiﬁed,
due to the propagation of the overload. The function
autoevolution() updates I and V in accordance with the
new topology T . This function represents the automatic
evolution of the values of I and V when the topology
changes. It must be executed after each change of T.
Figure 8. Part of the composed model for EPS
The activities T externalD and T overloadD, which
represent the time to the occurrence of an external (e.g., a
tree fall) or internal (e.g., a disruption due to the current
ﬂow) disruption, are exponential. The rate of T externalD
is disruptionRates–>I ndex(N Sindex− > M ark())
The rate of
–>externalDisconnection–>M ark().
T overloadD depends on the current ﬂow of the component
(A3♦), and is deﬁned by the following code:
if(I->Index(NSindex->Mark())->curr->Mark() Index(NSindex->Mark())->overload->Mark())
return(disruptionRates-> Index(NSindex->Mark())
->agingRate->Mark() ); else
return( overloadedDisruptionRate(I, disruptionRates
->Index(NSindex->Mark())->agingRate-> Mark(),
NSindex->Mark())
when
rate
is
than
a
disruption
function
the
ﬂow
The
overloadedDisruptionRate()
the
of
returns
greater
threshold
current
I–>I ndex(N Sindex–>M ark())–>overload–>M ark().
topol-
The
disrupted.
ogy
For
for which
T –>I ndex(i)–>I ndex(N Sindex–>M ark())–>M ark()
is equal to 1 or -1 then this value is changed to 3 or -3,
respectively, and the following code is executed:
disconnect
a
row i
state T when
each
of
changes
component
the
is
gate
index
of T
disconnected->Mark()=1; canPropagate->Mark()=0;
disrupted->Index(NSindex->Mark())->Mark()=1;
autoevolution(T, I, V);
After the repair of the component, represented by the
activity T Repair,
the values of T and disrupted are
updated by the output gate rapaired and the function
autoevolution() is executed.
The
abled when,
immediate
due
activity
to
a
tDisruped
disruption
is
en-
propagation,
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007is
component
affected by a disruption,
the
disrupted–>I ndex(N Sindex–>M ark())–>M ark()
== 1 and the local places canP ropagate, connected and
disconnected must be updated.
i.e.,
In Figure 8 it is shown how the atomic models for NS,
AL, LCT and RT S can be replicated (using the “Rep” op-
erator [13]) and composed (using the “Join” operator [13])
to obtain a part of the EPS model. The number of replicas
of the models of NS, AL, LCT and RT S are nS, nA, nS
and nR, with nR the number of regions (B1♦). We remind
that these anonymous replications become non anonymous
thanks to the modeling mechanisms described in the ﬁrst
part of this Section (B2♦).
8 Conclusions and future work
This paper has addressed the deﬁnition of a modeling
framework to analyze the interdependencies between the
electric infrastructure EI and the control information sys-
tem ITCS involved in electric power systems EPS. Ana-
lyzing and mastering the reciprocal impact of the failures
experienced by EI and ITCS are crucial for a proper assess-
ment of the operational risk and foresee adequate counter-
measures to possibly prevent catastrophic blackouts. The
current study is still at an exploratory stage, and further
research needs to be devoted to fully realize the modeling
environment. Notwithstanding such preliminary character
of this work, a relevant contribution is being provided in
terms of:
i) analysis of the structure and behavior of the
EI and ITCS subsystems, including their failure models and
states deﬁnitions; ii) identiﬁcation of the major challenges
the modeling framework has to deal with, and discussion
of possible approaches to cope with them; iii) implementa-
tion of a few basic modeling mechanisms inside the M¨obius
modeling and evaluation environment, to support the feasi-
bility of the proposed approach through an existing tool.
Extension and reﬁnements of the presented modeling
mechanisms are currently under investigation. Of course,
future work also includes the detailed study of the solution
aspects then need to addressed, to come out with a complete
modeling and evaluation framework suitable to quantitative
assessment of interdependencies impact in electric power
systems, possibly extendible to interdependencies analysis
in other critical infrastructure systems.
Acknowledgment
This work has been partially supported by the EC IST
Project CRUTIAL [1] (Contract n. 027513).
References
[1] European Project CRUTIAL, contract n. 027513. http:
//crutial.cesiricerca.it.
[2] B. A. Carreras, V. E. Lynch, I. Dobson, and D. E. New-
man. Critical points and transitions in an electric power
transmission model for cascading failure blackouts. Chaos,
12(4):985–994, 2002.
[3] S. Chiaradonna, P. Lollini, and F. Di Giandomenico. On the
modeling of an instance of the electric power system. Tech-
nical Report rcl061201, University of Florence, Dip. Sistemi
Informatica, RCL group, http://dcl.isti.cnr.it/
Documentation/Papers/Techreports.html,
December 2006.
[4] D. Daly, D. D. Deavours, J. M. Doyle, P. G. Webster, and
W. H. Sanders. M¨obius: An extensible tool for perfor-
mance and dependability modeling.
In B. R. Haverkort,
H. C. Bohnenkamp, and C. U. Smith, editors, 11th Inter-
national Conference, TOOLS 2000, volume 1786 of LNCS,
pages 332–336. Springer Verlag, 2000.
[5] I. Dobson and B. A. Carreras. Risk analysis of critical load-
ing and blackouts with cascading events. Consortium for
Electric Reliability Technology Solutions (CERTS), 2005.
[6] I. Dobson, B. A. Carreras, and D. E. Newman.
A
loading-dependent model of probabilistic cascading failure.
Probability in the Engineering and Informational Sciences,
19(1):15–32, 2005.
[7] I. Dobson, K. R. Wierzbicki, B. A. Carreras, V. E. Lynch,
and D. E. Newman. An estimator of propagation of cascad-
ing failure. In 39th IEEE Hawaii International Conference
on System Sciences (CD-ROM), Kauai, Hawaii, 2006.
[8] L. H. Fink and K. Carlsen. Operating under stress and strain.
IEEE Spectrum, 15:48–53, March 1978.
[9] J.-C. Laprie, K. Kanoun, and M. Kaˆaniche. Modeling cas-
cading and escalating outages in interdependent critical in-
frastructures. In IEEE Int. Conference on Dependable Sys-
tems and Networks (DSN-2006), pages 226–227, Philadel-
phie (USA), June 2006. Fast abstract.
[10] W. G. on Critical Information Infrastructure Protection. Crit-
ical information infrastructures protection: The case of Italy.
Ministry for Innovation and Technologies, October 2003.
[11] P. Pourbeik, P. S. Kundur, and C. W. Taylor. The anatomy of
a power grid blackout. IEEE Power and Energy Magazine,
pages 22–29, September/october 2006.
[12] S. M. Rinaldi, J. P. Peerenboom, and T. K. Kelly. Identify-
ing, understanding, and analyzing critical infrastructure in-
terdependencies.
IEEE Control Systems Magazine, pages
11–25, December 2001.
[13] W. H. Sanders and J. F. Meyer. Reduced base model con-
struction methods for stochastic activity networks.
IEEE
Journal on Selected Areas in Communications, 9(1):25–36,
January 1991.
[14] W. H. Sanders and J. F. Meyer. Stochastic activity networks:
Formal deﬁnitions and concepts.
In Lectures on Formal
Methods and Performance Analysis, volume 2090 of LNCS,
pages 315–343. Springer Verlag, 2001.
[15] A. Wenger, J. Metzger, M. Dunn, and I. Wigert. Critical in-
formation infrastructure protection. ETH the Swiss Federal
Institute of Technology Zurich, 2004.
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007