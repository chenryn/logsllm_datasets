lrwxrwxrwx 1 root root 10 Apr 23 08:59 wwn-0x60026b902fe2ce001261fa4506592f80-part2 -> ../../sdc2  
lrwxrwxrwx 1 root root 10 Apr 23 08:59 wwn-0x60026b902fe2ce001261fa4506592f80-part3 -> ../../sdc3  
lrwxrwxrwx 1 root root  9 Apr 23 08:59 wwn-0x60026b902fe2ce0018993f2f0c5734b3 -> ../../sdd  
lrwxrwxrwx 1 root root 10 Apr 23 08:59 wwn-0x60026b902fe2ce0018993f2f0c5734b3-part1 -> ../../sdd1  
[root@db-172-16-3-150 ssd4]# /opt/zfs0.6.2/sbin/zpool create zptest /opt/zfs.disk1 /opt/zfs.disk2 /opt/zfs.disk3 /opt/zfs.disk4 log mirror /ssd4/zfs.log1 /ssd4/zfs.log2 cache /dev/disk/by-id/scsi-SATA_OCZ-REVODRIVE3_OCZ-Z2134R0TLQBNE659-part1  
[root@db-172-16-3-150 ssd4]# /opt/zfs0.6.2/sbin/zpool status zptest  
  pool: zptest  
 state: ONLINE  
  scan: none requested  
config:  
        NAME                STATE     READ WRITE CKSUM  
        zptest              ONLINE       0     0     0  
          /opt/zfs.disk1    ONLINE       0     0     0  
          /opt/zfs.disk2    ONLINE       0     0     0  
          /opt/zfs.disk3    ONLINE       0     0     0  
          /opt/zfs.disk4    ONLINE       0     0     0  
        logs  
          mirror-4          ONLINE       0     0     0  
            /ssd4/zfs.log1  ONLINE       0     0     0  
            /ssd4/zfs.log2  ONLINE       0     0     0  
        cache  
          sda1              ONLINE       0     0     0  
errors: No known data errors  
[root@db-172-16-3-150 ssd4]# df -h  
Filesystem            Size  Used Avail Use% Mounted on  
/dev/sdc1              29G  9.3G   19G  34% /  
tmpfs                  48G     0   48G   0% /dev/shm  
/dev/sdc3              98G   34G   59G  37% /opt  
/dev/sdd1             183G   33G  142G  19% /ssd1  
/dev/sdb1             221G   42G  168G  20% /ssd4  
zptest                3.9G     0  3.9G   0% /zptest  
重启后需要使用zfs来mount.  
# /opt/zfs0.6.2/sbin/zfs mount zptest  
使用pg_test_fsync测试fsync接口的性能 :   
[root@db-172-16-3-150 ssd4]# cd /zptest  
[root@db-172-16-3-150 zptest]# mkdir pg93  
[root@db-172-16-3-150 zptest]# chown pg93:pg93 pg93  
[root@db-172-16-3-150 zptest]# su - pg93  
cpg93@db-172-16-3-150-> cd /zptest/pg93/  
pg93@db-172-16-3-150-> pg_test_fsync   
5 seconds per test  
O_DIRECT supported on this platform for open_datasync and open_sync.  
Compare file sync methods using one 64kB write:  
(in wal_sync_method preference order, except fdatasync  
is Linux's default)  
        open_datasync                                n/a*  
        fdatasync                         778.117 ops/sec    1285 usecs/op  
        fsync                             756.724 ops/sec    1321 usecs/op  
        fsync_writethrough                            n/a  
        open_sync                                    n/a*  
* This file system and its mount options do not support direct  
I/O, e.g. ext4 in journaled mode.  
Compare file sync methods using two 64kB writes:  
(in wal_sync_method preference order, except fdatasync  
is Linux's default)  
        open_datasync                                n/a*  
        fdatasync                          96.185 ops/sec   10397 usecs/op  
        fsync                             369.918 ops/sec    2703 usecs/op  
        fsync_writethrough                            n/a  
        open_sync                                    n/a*  
* This file system and its mount options do not support direct  
I/O, e.g. ext4 in journaled mode.  
Compare open_sync with different write sizes:  
(This is designed to compare the cost of writing 16kB  
in different write open_sync sizes.)  
         1 * 16kB open_sync write                    n/a*  
         2 *  8kB open_sync writes                   n/a*  
         4 *  4kB open_sync writes                   n/a*  
         8 *  2kB open_sync writes                   n/a*  
        16 *  1kB open_sync writes                   n/a*  
Test if fsync on non-write file descriptor is honored:  
(If the times are similar, fsync() can sync data written  
on a different descriptor.)  
        write, fsync, close               746.761 ops/sec    1339 usecs/op  
        write, close, fsync               217.356 ops/sec    4601 usecs/op  
Non-Sync'ed 64kB writes:  
        write                           37511.610 ops/sec      27 usecs/op  
测试过程中, 使用iostat发现, 大量的写实际上集中在zptest的LOG设备上. 符合zfs的log的原理.  
avg-cpu:  %user   %nice %system %iowait  %steal   %idle  
           0.00    0.00    4.05    7.59    0.00   88.35  
Device:         rrqm/s   wrqm/s     r/s     w/s   rsec/s   wsec/s avgrq-sz avgqu-sz   await  svctm  %util  
sdc               0.00     0.00    0.00    0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sdd               0.00     0.00    0.00    0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
sdb               0.00 26688.00    0.00 2502.00     0.00 226848.00    90.67     1.29    0.52   0.31  78.10  
sda               0.00     0.00    0.00    0.00     0.00     0.00     0.00     0.00    0.00   0.00   0.00  
使用postgresql测试读写, 并使用同步提交, 减少shared buffer更能体现ZFS的性能.  
pg93@db-172-16-3-150-> initdb -E UTF8 --locale=C -D /zptest/pg93/pg_root -U postgres -W  
pg93@db-172-16-3-150-> cd /zptest/pg93/pg_root  
vi postgresql.conf  
listen_addresses = '0.0.0.0'            # what IP address(es) to listen on;  
port = 1922                             # (change requires restart)  
max_connections = 100                   # (change requires restart)  
unix_socket_directories = '.'   # comma-separated list of directories  
tcp_keepalives_idle = 60                # TCP_KEEPIDLE, in seconds;  
tcp_keepalives_interval = 10            # TCP_KEEPINTVL, in seconds;  
tcp_keepalives_count = 10               # TCP_KEEPCNT;  
shared_buffers = 32MB                   # min 128kB  
maintenance_work_mem = 512MB            # min 1MB  
vacuum_cost_delay = 10                  # 0-100 milliseconds  
vacuum_cost_limit = 10000               # 1-10000 credits  
bgwriter_delay = 10ms                   # 10-10000ms between rounds  
checkpoint_segments = 3         # in logfile segments, min 1, 16MB each  
effective_cache_size = 96000MB  
log_destination = 'csvlog'              # Valid values are combinations of  
logging_collector = on          # Enable capturing of stderr and csvlog  
log_truncate_on_rotation = off          # If on, an existing log file with the  
log_checkpoints = on  
log_connections = on  
log_disconnections = on  
log_error_verbosity = verbose           # terse, default, or verbose messages  
log_timezone = 'PRC'  
autovacuum = on                 # Enable autovacuum subprocess?  'on'  
log_autovacuum_min_duration = 0 # -1 disables, 0 logs all actions and  
datestyle = 'iso, mdy'  
timezone = 'PRC'  
lc_messages = 'C'                       # locale for system error message  
lc_monetary = 'C'                       # locale for monetary formatting  
lc_numeric = 'C'                        # locale for number formatting  
lc_time = 'C'                           # locale for time formatting  
default_text_search_config = 'pg_catalog.english'  
pg93@db-172-16-3-150-> pg_ctl start -D /zptest/pg93/pg_root  
pg93@db-172-16-3-150-> psql -h /zptest/pg93/pg_root -p 1922 -U postgres postgres  
psql (9.3.3)  
Type "help" for help.  
postgres=# create table test(id int primary key, info text, crt_time timestamp);  
CREATE TABLE  
postgres=# create or replace function f_test(v_id int) returns void as $$  
declare  
begin  
  update test set info=md5(random()::text),crt_time=now() where id=v_id;  
  if not found then   
    insert into test values (v_id, md5(random()::text), now());  
  end if;  
  exception when SQLSTATE '23505' then  
    return;  
end;  
$$ language plpgsql strict;  
CREATE FUNCTION  
postgres=# select f_test(1);  
 f_test   
--------  
(1 row)  
postgres=# select * from test;  
 id |               info               |          crt_time            
----+----------------------------------+----------------------------  
  1 | 80fe8163f44df605621a557624740681 | 2014-05-16 22:01:38.677335  
(1 row)  
postgres=# select f_test(1);  
 f_test   
--------  
(1 row)  
postgres=# select * from test;  
 id |               info               |          crt_time            
----+----------------------------------+----------------------------  
  1 | 5b17eb0ba878e15f40f213716c05a3c5 | 2014-05-16 22:01:42.130284  
(1 row)  
pg93@db-172-16-3-150-> vi test.sql  
\setrandom id 1 500000  
select f_test(:id);  
pg93@db-172-16-3-150-> pgbench -M prepared -n -r -f ./test.sql -h /zptest/pg93/pg_root -p 1922 -U postgres -c 16 -j 8 -T 30 postgres   
transaction type: Custom query  
scaling factor: 1  
query mode: prepared  
number of clients: 16  
number of threads: 8  
duration: 30 s  
number of transactions actually processed: 121879  
tps = 4060.366837 (including connections establishing)  
tps = 4062.166607 (excluding connections establishing)  
statement latencies in milliseconds:  
        0.004635        \setrandom id 1 500000  
        3.930118        select f_test(:id);  
接下来是直接对ZFS4个文件所在机械硬盘做测试, 测试EXT4的性能.  
/dev/sdc3 on /opt type ext4 (rw,noatime,nodiratime)  
pg93@db-172-16-3-150-> pg_ctl stop -m fast -D /zptest/pg93/pg_root  
waiting for server to shut down.... done  
server stopped  
pg93@db-172-16-3-150-> exit  
logout  
[root@db-172-16-3-150 ~]# cp -r /zptest/pg93/pg_root /opt/pg_root  
[root@db-172-16-3-150 ~]# chown -R pg93:pg93 /opt/pg_root  
[root@db-172-16-3-150 ~]# su - pg93  
pg93@db-172-16-3-150-> pg_ctl start -D /opt/pg_root  
server starting  
pg93@db-172-16-3-150-> LOG:  00000: redirecting log output to logging collector process  
HINT:  Future log output will appear in directory "pg_log".  
LOCATION:  SysLogger_Start, syslogger.c:649  
pg93@db-172-16-3-150-> psql -h 127.0.0.1 -p 1922 -U postgres postgres  
psql (9.3.3)  
Type "help" for help.  
postgres=# truncate test;  
TRUNCATE TABLE  