### IBM MQ Display Route Application (dspmqrte)

#### Overview
This document provides an overview of the parameters used by the IBM MQ `dspmqrte` application to configure and trace a message as it is routed through a queue manager network. The `dspmqrte` tool is useful for diagnosing and understanding the behavior of messages in an IBM MQ environment.

#### Parameters for Trace-Route Messages

##### Queue Manager Connection
- **-c**: Specifies that the `dspmqrte` application connects as a client application. If not specified, the application does not connect as a client.
- **-m QMgrName**: Specifies the name of the queue manager to which the `dspmqrte` application connects. The name can be up to 48 characters long. If not specified, the default queue manager is used.

##### Target Destination
- **-q TargetQName**: Specifies the name of the target queue if the `dspmqrte` application is used to send a trace-route message into a queue manager network.
- **-ts TargetTopicString**: Specifies the topic string for publish/subscribe applications.
- **-qm TargetQMgr**: Qualifies the target destination; normal queue manager name resolution will then apply. The target destination is specified with `-q TargetQName` or `-ts TargetTopicString`. If not specified, the queue manager to which the `dspmqrte` application is connected is used as the target queue manager.
- **-o**: Specifies that the target destination is not bound to a specific destination. This is typically used when the trace-route message is to be put across a cluster. The target destination is opened with the option `MQOO_BIND_NOT_FIXED`. If not specified, the target destination is bound to a specific destination.

##### Publication Topic
- **-ts TopicName**: Specifies a topic string to which the `dspmqrte` application is to publish a trace-route message. In this mode, the application traces all messages resulting from the publish request.

##### Message Mimicking
- **-l Persistence**: Specifies the persistence of the generated trace-route message. Possible values are:
  - `yes`: The message is persistent (MQPER_PERSISTENT).
  - `no`: The message is not persistent (MQPER_NOT_PERSISTENT).
  - `q`: The message inherits its persistence value from the destination specified by `-q TargetQName` or `-ts TargetTopicString` (MQPER_PERSISTENCE_AS_Q_DEF).
- **-p Priority**: Specifies the priority of the trace-route message. The value can be greater than or equal to 0, or `MQPRI_PRIORITY_AS_Q_DEF`, which takes the priority value from the destination.
- **-xs Expiry**: Specifies the expiry time for the trace-route message in seconds. If not specified, the expiry time is 60 seconds.
- **-ro ReportOption**: Specifies report options for the trace-route message. Multiple options can be specified using a comma as a separator. Possible values include:
  - `activity`: Sets the report option `MQRO_ACTIVITY`.
  - `coa`: Sets the report option `MQRO_COA_WITH_FULL_DATA`.
  - `cod`: Sets the report option `MQRO_COD_WITH_FULL_DATA`.
  - `exception`: Sets the report option `MQRO_EXCEPTION_WITH_FULL_DATA`.
  - `expiration`: Sets the report option `MQRO_EXPIRATION_WITH_FULL_DATA`.
  - `discard`: Sets the report option `MQRO_DISCARD_MSG`.
  - `none`: Specifies no report options are set.
- **-rq ReplyToQ**: Specifies the name of the reply-to queue where all responses to the trace-route message are sent. If the trace-route message is persistent, or if the `-n` parameter is specified, a non-temporary dynamic queue must be used.
- **-rqm ReplyToQMgr**: Specifies the name of the queue manager where the reply-to queue resides. If not specified, the queue manager to which the `dspmqrte` application is connected is used.

##### Recorded Activity Information
- **-ro activity**: Specifies that activity information is returned using activity reports. By default, activity recording is enabled.
- **-ac -ar**: Specifies that activity information is accumulated in the trace-route message, and a trace-route reply message is generated.
- **-ac**: Specifies that activity information is accumulated within the trace-route message.
- **-ar**: Requests that a trace-route reply message containing all accumulated activity information is generated under certain circumstances.
- **-d yes**: On arrival, the trace-route message is put on the target queue, even if the queue manager does not support trace-route messaging.
- **-t Detail**: Specifies the detail level of recorded activity information. Possible values are:
  - `low`: Records activities performed by user-defined applications only.
  - `medium`: Records activities specified in `low` and additional publish activities and activities performed by MCAs.
  - `high`: Records activities specified in `low` and `medium`. User-defined applications can expose further activity information at this level.

##### How the Trace-Route Message is Handled
- **-d Deliver**: Specifies whether the trace-route message is delivered to the target queue on arrival. Possible values are:
  - `yes`: The message is put on the target queue, even if the queue manager does not support trace-route messaging.
  - `no`: The message is not put on the target queue.
- **-f Forward**: Specifies the type of queue manager to which the trace-route message can be forwarded. Possible values are:
  - `all`: The message is forwarded to any queue manager.
  - `supported`: The message is only forwarded to a queue manager that will honor the `Deliver` parameter.
- **-s Activities**: Specifies the maximum number of recorded activities that can be performed on behalf of the trace-route message before it is discarded. Possible values are:
  - A number greater than or equal to 1.
  - `MQROUTE_UNLIMITED_ACTIVITIES`: An unlimited number of activities can be performed.
- **-xp PassExpiry**: Specifies whether the expiry time from the trace-route message is passed on to a trace-route reply message. Possible values are:
  - `yes`: The report option `MQRO_PASS_DISCARD_AND_EXPIRY` is specified.
  - `no`: The report option `MQRO_PASS_DISCARD_AND_EXPIRY` is not specified.

##### Display of Activity Information
- **-n**: Specifies that activity information returned for the trace-route message is not displayed.
- **-w WaitTime**: Specifies the time, in seconds, that the `dspmqrte` application will wait for activity reports or a trace-route reply message to return to the specified reply-to queue.
- **-q TargetQName**: Specifies the name of the queue where previously gathered activity information is stored.
- **-i CorrelId**: Used to identify the activity reports or trace-route reply messages related to a trace-route message. The format is a 48-character hexadecimal string.
- **-b**: Specifies that the `dspmqrte` application will only browse activity reports or a trace-route reply message related to a message.
- **-v summary | all | none | outline DisplayOption**: Specifies the display options for the trace-route message. Possible values are:
  - `summary`: Displays the queues that the trace-route message was routed through.
  - `all`: Displays all available information.
  - `none`: Displays no information.
  - `outline DisplayOption`: Specifies display options for the trace-route message. Multiple options can be specified using a comma as a separator.

##### Display of Additional Information
User-written applications can record additional information by writing one or more additional PCF parameters to the message data of the trace-route message or to the message data of an activity report. For the `dspmqrte` application to display this information in a readable form, it must be recorded in a specific format.

#### Examples
The following examples demonstrate how to use the `dspmqrte` application. In each example, two queue managers (QM1 and QM2) are interconnected by two channels (QM2.TO.QM1 and QM1.TO.QM2).

**Example 1: Requesting Activity Reports**
- **Command**: `dspmqrte -m QM1 -q TARG.AT.QM2 -rq ACTIV.REPLY.Q`
- **Description**: The `dspmqrte` application connects to queue manager QM1 and generates a trace-route message to the target queue TARG.AT.QM2 on remote queue manager QM2. Activity reports are requested, and the trace-route message is discarded on arrival at the target queue. Activity information is returned and displayed.

For more detailed information and additional examples, refer to the IBM MQ documentation.