introduced in Internet Explorer 8 as XSS Filter. 
This filter attempts to block reflected XSS attacks by 
applying regular expressions to response data.
1.2.3.2 Native Browser Filters
|  p.136
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
History
After Microsoft, Google Chrome introduced their own cross-
site scripting filters, XSS Auditor. 
This filter is slightly different from IE's XSS Filter and 
NoScript. Instead of being layered on top of the browser, it 
is integrated into WebKit/Blink, which are the rendering 
engines that support XSS Auditor.
1.2.3.2 Native Browser Filters
|  p.137
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
http://blogs.technet.com/b/srd/archive/2008/08/18/ie-8-xss-filter-architecture-
implementation.aspx
XSS Filter (Internet Explorer)
The architecture and 
implementation of XSS Filter 
in Internet Explorer is 
explained in this blog post.
1.2.3.2 Native Browser Filters
|  p.138
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSS Filter (Internet Explorer)
The XSS Filter rules are hardcoded in the 
c:\windows\system32\mshtml.dll library. We have 
multiple ways to inspect them using the following:
•
Hex editors like WinHex, or Notepad++ with TextFX 
plugin
•
IDAPro 
•
MS-DOS commands! 
1.2.3.2 Native Browser Filters
|  p.139
Faster solution!
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSS Filter (Internet Explorer)
The command is:
findstr /C:"sc{r}" \WINDOWS\SYSTEM32\mshtml.dll | find "{"
If you want a more "human-readable" version, then export the result to a 
file and use a text editor to read the content.
findstr /C:"sc{r}" \WINDOWS\SYSTEM32\mshtml.dll | find "{" > savepath
1.2.3.2 Native Browser Filters
|  p.140
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSS Filter (Internet Explorer)
Here are few extracted rules in Internet Explorer 11:
{}
{
is transformed to:
{[ /+\t\"\'`]{o}n\c\c\c+?[ +\t]*?=.}
1.2.3.2 Native Browser Filters
|  p.146
Filter rule
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSS Filter (Internet Explorer): Neutering in Action
The XSS attack:
is transformed to:
{]}
{[ /+\t\"\'`]{o}n\c\c\c+?[ +\t]*?=.}
1.2.3.2 Native Browser Filters
|  p.147
Filter rules
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSS Filter (Internet Explorer):
The XSS Filter has a few rules, just 25, but are well 
constructed and difficult to attack. 
Over the years, several bypasses have been discovered; 
however, the latest versions 'seem’ stronger than past 
versions (unless you have a 0-day ☺).
1.2.3.2 Native Browser Filters
|  p.148
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
http://msdn.microsoft.com/en-us/library/dd565647(v=vs.85).aspx#remediation
XSS Filter (Internet Explorer):
XSS Filter is enabled by default in the Internet, Trusted, and 
Restricted security zones, but an interesting feature was 
introduced to disable the filter. 
The main reason was because some sites may depend on 
the reflected values that the filter searches for. 
1.2.3.2 Native Browser Filters
|  p.149
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSS Filter (Internet Explorer):
Web sites that chose to opt-out of this protection can use 
the HTTP response header:
X-XSS-Protection: 0
1.2.3.2 Native Browser Filters
|  p.150
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
http://www.enhanceie.com/test/xss/BlockMode.asp
XSS Filter (Internet Explorer):
Later, the IE team added support to a new token in the 
X-XSS-Protection header:
X-XSS-Protection: 1; mode=block
With this token, if a potential reflected XSS attack is 
detected, the browser, rather than attempting to sanitize the 
page, will render a simple #. Here is a simple test.
1.2.3.2 Native Browser Filters
|  p.151
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSS Filter (Internet Explorer):
Even if the X-XSS-Protection header was initially introduced by 
Internet Explorer, today other browsers based on WebKit 
and Blink support it.
1.2.3.2 Native Browser Filters
|  p.152
Safari
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
http://www.adambarth.com/papers/2010/bates-barth-jackson.pdf
XSSAuditor (WebKit/Blink)
In the footsteps of Internet Explorer, some researchers 
developed their own set of client-side XSS filters, also 
known as XSSAuditor. 
The implementation is only for the Blink/WebKit rendering 
engines. This is enabled by default in browsers such as 
Google Chrome, Opera and Safari.
1.2.3.2 Native Browser Filters
|  p.153
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSSAuditor (WebKit/Blink)
Despite the IE XSS Filter, XSSAuditor adopts a different 
approach to the problem. As the authors claims, the new 
filter design is both effective and highly precise. To do this, 
they placed XSSAuditor in between the HTML Parser and 
JS engine. 
The image on the following slide will clarify the differences.
1.2.3.2 Native Browser Filters
|  p.154
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
Images taken from http://www.adambarth.com/papers/2010/bates-
barth-jackson.pdf
XSSAuditor (WebKit/Blink): XSS Filter vs XSSAuditor
1.2.3.2 Native Browser Filters
|  p.155
XSS Filter
XSSAuditor
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSSAuditor (WebKit/Blink)
The filter analyzes both the inbound requests and the 
outbound. If, in the parsed HTML data, it finds executable 
code within the response, then it stops the script and 
generates a console alert similar to the following:
1.2.3.2 Native Browser Filters
|  p.156
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
XSSAuditor (WebKit/Blink)
Over the years, even with XSS Auditor, security researchers 
found multiple bypasses…Oh yes, they did!
A simple search on google about XSS Auditor returns more 
information on bypasses than on the filter itself.
1.2.3.2 Native Browser Filters
|  p.157
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
|  p.158
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
RFC 3986
(Please) Stop Using Unsafe Characters in URLs: Character Encoding Chart
RFC 2616
ISO/IEC 8859-1
http://tools.ietf.org/html/rfc3986#section-2.1
http://perishablepress.com/stop-using-unsafe-characters-in-urls/
https://tools.ietf.org/html/rfc2616
http://en.wikipedia.org/wiki/ISO/IEC_8859-1
|  p.159
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
PHP header()
HTML Document Representation: 5.3 Character References
HTML Standard: 12.1.4 Character References
http://www.php.net/header
http://msdn.microsoft.com/en-us/library/system.web.httpresponse
http://www.w3.org/TR/1998/REC-html40-19980424/charset.html#h-5.3 
http://www.w3.org/TR/html5/single-page.html#character-references
|  p.160
HttpResponse Class
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
Character entity references in HTML
Reddit
TinyURL
base_convert
http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_
entity_references_in_HTML
http://www.reddit.com/
http://tinyurl.com/ 
http://www.php.net/manual/en/function.base-convert.php
|  p.161
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
Base64: Implementations and History
base64_encode
base64_decode
WindowOrWorkerGlobalScope.btoa()
http://en.wikipedia.org/wiki/Base64#Implementations_and_history
https://www.php.net/base64_encode
https://www.php.net/base64_decode
https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa
|  p.162
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
The Absolute Minimum Every Software Developer Absolutely, Positively 
Must Know About Unicode and Character Sets (No Excuses!)
Homoglyph
Unicode® Technical Standard #39 - UNICODE SECURITY MECHANISMS
Unicode Utilities: Confusables
http://www.joelonsoftware.com/articles/Unicode.html
http://en.wikipedia.org/wiki/Homoglyph
http://www.unicode.org/reports/tr39/
http://unicode.org/cldr/utility/confusables.jsp
|  p.163
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
Homoglyph Attack Generator
Out of Character: Use of Punycode and Homoglyph Attacks to 
Obfuscate URLs for Phishing
Creative usernames and Spotify account hijacking
Unicode Utilities: Description and Index
http://www.irongeek.com/homoglyph-attack-generator.php
http://www.irongeek.com/i.php?page=security/out-of-character-use-of-punycode-and-
homoglyph-attacks-to-obfuscate-urls-for-phishing
http://labs.spotify.com/2013/06/18/creative-usernames/
http://unicode.org/cldr/utility/
|  p.164
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
Codepoints
Transformation tools for Unicode text
Unicode Text Converter
OWASP Enterprise Security API
http://codepoints.net/
http://txtn.us/
http://www.panix.com/~eli/unicode/convert.cgi
https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API
|  p.165
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
ModSecurity
Deterministic finite automaton
Nondeterministic finite automaton
Control character
http://www.modsecurity.org/
http://en.wikipedia.org/wiki/Deterministic_finite_automaton
http://en.wikipedia.org/wiki/Nondeterministic_finite_automaton
http://en.wikipedia.org/wiki/Control_character
|  p.166
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
GitHub: SpiderLabs / ModSecurity Documentation
GitHub: EnableSecurity / wafw00f
File http-waf-fingerprint
imperva-detect
https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#drop
https://code.google.com/p/waffit/
http://nmap.org/nsedoc/scripts/http-waf-fingerprint.html
https://code.google.com/p/imperva-detect/
|  p.167
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
NoScript Security Suite
NoScript: Anti-XSS protection
IE8 Security Part IV: The XSS Filter
IE 8 XSS Filter Architecture / Implementation
https://addons.mozilla.org/en-US/firefox/addon/noscript/
http://noscript.net/features#xss
http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-iv-the-xss-filter.aspx
http://blogs.technet.com/b/srd/archive/2008/08/18/ie-8-xss-filter-architecture-
implementation.aspx
|  p.168
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
Event 1046 - Cross-Site Scripting Filter: Remediation
Regular Expressions Considered Harmful in Client-Side XSS Filters
Unicode Security Guide
http://msdn.microsoft.com/en-us/library/dd565647(v=vs.85).aspx#remediation
http://www.adambarth.com/papers/2010/bates-barth-jackson.pdf
https://www.w3.org/TR/html401/struct/global.html#h-7.4.4.2
http://websec.github.io/unicode-security-guide/
|  p.169
The META element
WAPTXv2: Section 1, Module 1 - Caendra Inc. © 2020
References
Comparison of regular expression engines
Regular Expressions Reference Table of Contents
Base 36 as senary compression
https://en.wikipedia.org/wiki/Comparison_of_regular_expression_engines
https://www.regular-expressions.info/refflavors.html
http://tinyurl.com/jfvqr
|  p.170