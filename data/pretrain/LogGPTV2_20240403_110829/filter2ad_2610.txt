# POSTER: When and How to Implicitly Authenticate Smartphone Users

**Authors:** Aaron Atwater, Hassan Khan, and Urs Hengartner  
**Affiliation:** Cheriton School of Computer Science, University of Waterloo, Waterloo, ON, Canada  
**Emails:** {aatwater, h37khan, urs.hengartner}@uwaterloo.ca

## Abstract
The widespread use of modern smartphones has led to an increase in the amount of sensitive data stored on these devices. However, the frequent and brief nature of smartphone interactions makes traditional password or PIN-based authentication less practical compared to desktop environments. To address this, implicit authentication (IA) schemes can be developed and deployed on smartphones. These schemes continuously authenticate users by profiling their behavior using various sensors, such as touchscreens and accelerometers. If a non-owner attempts to access the device, the IA scheme recognizes the behavioral difference and automatically ejects the attacker. In highly sensitive contexts, IA can also serve as a secondary defense mechanism, providing layered security against shoulder-surfing attacks or operating system vulnerabilities.

In this work, we evaluate existing proposals for IA schemes using different behavioral feature sets and test them against real-world data to determine their effectiveness. We have implemented these schemes in an open-source framework for the Android operating system called Itus, which allows researchers to iteratively improve upon existing mechanisms. Itus performs IA at the app level, enabling developers to selectively protect sensitive data while minimizing battery and performance impact, and improving detection accuracy.

## Categories and Subject Descriptors
D.4.6 [Security and Protection]: Authentication

## Permission
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage, and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s). Copyright is held by the author/owner(s).

**CCS’14, November 3–7, 2014, Scottsdale, Arizona, USA.**  
**ACM 978-1-4503-2957-6/14/11.**  
**http://dx.doi.org/10.1145/2660267.2662373.**

## Keywords
Security, Implicit Authentication, Behavioural Biometrics

## 1. Introduction
The increasing ubiquity of modern smartphones and other ultra-portable computing devices has resulted in more sensitive data being carried on these devices than ever before. This data can range from personal photos and text messages to confidential company records. Consequently, the need to protect these devices from unauthorized access has grown. However, research into lock screens has consistently found that simple password protection schemes impose significant usability issues, leading more than half of users to forego any sort of PIN or passcode [1, 10, 13].

One solution to these usability issues is to authenticate users continuously without explicit prompts. Known as implicit authentication (IA), these schemes measure users' normal interactions with the smartphone, such as touchscreen swipes and accelerometer readings, and compare them with a learned model of the user's behavior. If an unauthorized user attempts to interact with the device, their behavioral profile will not match that of the owner, and the IA scheme will eject the potential attacker.

Despite promising approaches, IA schemes have not been widely adopted. We argue this is due to:
1. Uncertainty about which behavioral features and classification algorithms provide the best accuracy.
2. Difficulty in obtaining real-world usage data to measure usability and performance.
3. Lack of an extensible IA framework for iterative development.

We aim to address these issues by comparing proposed behavioral feature sets using real-world data, evaluating existing metrics, and proposing new ones. We then deploy these schemes in an open-source IA framework for Android, called Itus, which can be extended iteratively.

## 2. Previous Work
Existing literature proposes several methods for performing IA on smartphones [3, 4, 5, 6, 7, 9, 12, 14, 15, 16]. These schemes use various sensors to profile behavioral features, including touchscreen input, typing, accelerometer readings, GPS positioning, call and text logs, and application contexts. While these schemes show reasonable detection accuracies and acceptable performance overhead, they are difficult to compare due to the lack of common datasets. Results can vary significantly when evaluated across different datasets [6].

In previous work, we argued that platform-level IA schemes have inherent limitations in performance and usability [11]. App-level IA allows the app to decide when and how to authenticate users, avoiding an "all-or-nothing" access model. The app can also make decisions about which sensors to monitor, improving accuracy and reducing CPU and battery usage. For example, a banking app might allow a friend to use a "locate nearby ATM" feature without locking the device, and it might use GPS monitoring for online banking in specific locations.

## 3. Contributions & Results
### 3.1 Comparison of IA Schemes
We selected and implemented six IA schemes [2, 6, 7, 8, 9, 15] and evaluated them using a common pool of data. These schemes use various combinations of behavioral features, including call/text/URL history, location, gait patterns, touch input, keystroke behavior, micro-movements, and user context. We used four datasets collected from end-user Android smartphones.

We evaluated the schemes using eight metrics: accuracy, data availability, training delay, detection delay, processing complexity, uniqueness, vulnerability to mimicry, and ease of deployment. Figure 1 shows preliminary results for data availability.

![Data Availability on Real-World Datasets](figure1.png)

### 3.2 Implementation of IA Schemes
We are developing an open-source IA framework for Android called Itus. Itus is a library that developers can add to their apps to obtain IA protection in a simple and configurable manner. It is designed to be easily extensible, allowing researchers to quickly deploy and test new IA schemes. We are also creating the Itus Oracle, a standalone application that helps app developers measure usage characteristics and receive recommendations for the best IA scheme for their app. The Itus Oracle packages these configurations into a small library that developers can import into their Android app. Figure 2 shows the proposed architecture for our IA framework.

![Proposed Architecture for Itus](figure2.png)

We aim to have several smartphones running Itus available for demonstration during the poster presentation.

## 4. Conclusions & Future Work
In this work, we outline a comprehensive set of metrics for evaluating IA mechanisms and evaluate six distinct IA schemes using real-world datasets. We are also implementing Itus, an open-source framework for Android, and various IA schemes on top of it. Itus is designed to be easily extensible, allowing contributors to add new IA schemes to the core distribution or to extend existing ones. 

**Itus, named after the Greek god of protection, aims to provide robust and flexible IA solutions for Android apps.**

---

This revised version improves the clarity, coherence, and professionalism of the original text.