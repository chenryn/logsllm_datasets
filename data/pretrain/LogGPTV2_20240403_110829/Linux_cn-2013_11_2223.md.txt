---
author: ''
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 3
  likes: 2
  sharetimes: 0
  viewnum: 11208
date: '2013-11-06 22:33:00'
editorchoice: false
excerpt: "我们将继续配置内核，探讨更多待设置的功能。\r\n\r\n下一个配置选项是启用ELF核心转储文件(Enable ELF core dumps (ELF_CORE))。这会增加内核大小4KB。我选择了'否'。\r\n注意：核心转储文件记录了程序崩溃前的状态，用于调试问题，其格式为ELF（可执行和链接格式）。\r\n..."
fromurl: ''
id: 2223
islctt: true
largepic: /data/attachment/album/201311/06/223032bhbqwxqnb5hhazn4.jpg
permalink: /article-2223-1.html
pic: /data/attachment/album/201311/06/223032bhbqwxqnb5hhazn4.jpg.thumb.jpg
related: []
reviewer: ''
selector: ''
summary: "我们将继续配置内核，探讨更多待设置的功能。\r\n\r\n下一个配置选项是启用ELF核心转储文件(Enable ELF core dumps (ELF_CORE))。这会增加内核大小4KB。我选择了'否'。\r\n注意：核心转储文件记录了程序崩溃前的状态，用于调试问题，其格式为ELF（可执行和链接格式）。\r\n..."
tags:
- Linux
- 内核
- 配置
- ELF_CORE
- EPOLL
- 技巧
- 教程
thumb: false
title: 戴文的Linux内核专题：07 配置内核 (3)
titlepic: false
translator: geekpi
updated: '2013-11-06 22:33:00'
---

我们继续进行内核配置，探索更多的功能设置。

![](/data/attachment/album/201311/06/223032bhbqwxqnb5hhazn4.jpg)

接下来的问题是是否启用ELF核心转储文件(Enable ELF core dumps (ELF_CORE))。这一选项会使内核增大4KB。由于该特性并非必需，我选择"否"。
> **注释**：核心转储文件记录了程序崩溃前的状态，主要用于调试问题。这类文件采用ELF（Executable and Linkable Format, 可执行和链接格式）。

接下来可以启用PC扬声器支持(Enable PC-Speaker support (PCSPKR_PLATFORM))。鉴于大多数计算机用户拥有并使用扬声器，我启用了这项功能。

尽管启用完全大小的数据结构(Enable full-sized data structures for core (BASE_FULL))会增加内核大小，但它能提高性能。因此，我选择了"是"。

为了使基于glibc的程序能够运行，必须启用FUTEX(Enable futex support (FUTEX))。此特性提供了快速用户空间互斥锁(Fast Userspace muTEXes)的支持。
> **注释**：glibc(GNU C Library)是由GNU项目实现的标准C库。
>
> **注释**：FUTEX (fast userspace mutex)用于防止多个线程同时访问一个不能被共享使用的资源。

对于epoll系统调用(Enable eventpoll support (EPOLL))，通过回答"是"来启用它。epoll是一种高效的I/O事件通知机制。

为了让程序能够接收来自文件描述符的信号，我们启用了signalfd系统调用(Enable signalfd() system call (SIGNALFD))。

如果启用timerfd系统调用(Enable timerfd() system call (TIMERFD))，程序将能够利用定时器事件获取文件描述符。

当前配置要求启用eventfd系统调用(Enable eventfd() system call (EVENTFD))，以便于访问共享内存文件系统(Use full shmem filesystem (SHMEM))。共享内存文件系统是一种虚拟内存文件系统。

关于异步I/O支持(Enable AIO support (AIO))的问题，该特性启用了POSIX标准下的异步I/O，适用于多线程程序。
> **注释**：异步I/O允许在数据传输过程中提前完成处理。

如果你正在为嵌入式系统配置内核，则可以选择"是"以启用嵌入式系统支持(Embedded system (EMBEDDED))。否则，像我一样选择"否"。
> **注释**：嵌入式系统是指运行在一个更大电子系统中的实时计算机。

现在，我们可以开始配置内核性能事件和计时器(Kernel performance events and counters (PERF_EVENTS))。这是一个重要的特性，配置工具默认启用。

另一个调试特性(ebug: use vmalloc to back perf mmap() buffers (DEBUG_PERF_USE_VMALLOC))则被禁用。

启用VM事件计数器后(Enable VM event counters for /proc/vmstat (VM_EVENT_COUNTERS))，事件计数会在/proc/vmstat中显示；若禁用，则只会显示内存页计数。

为了更好地支持PCI芯片，建议启用PCI quirk工作区(Enable PCI quirk workarounds (PCI_QUIRKS))，以解决PCI芯片的一些异常行为和bug。

SLUB调试支持(Enable SLUB debugging support (SLUB_DEBUG))是一项占用大量空间且可能影响内核性能的调试特性。我选择禁用它。

堆随机化(Disable heap randomization (COMPAT_BRK))是一个让攻击者更难以利用堆漏洞的安全特性。然而，由于启用它会导致基于libc5的软件无法正常工作，所以我选择了"否"。

接下来需要选择一个SLAB分配器(SLAB allocator)。SLAB分配器是一种高效的、无碎片的内存管理系统，默认选择是SLUB (Unqueued Allocator) (SLUB)。
```
Choose SLAB allocator
1. SLAB (SLAB)
2. SLUB (Unqueued Allocator) (SLUB)
3. SLOB (Simple Allocator) (SLOB)
choice[1-3?]: 2
```

为了支持扩展性能分析(Profiling support (PROFILING))，我选择了"是"。

关于OProfile系统的选择，它可以禁用、启用或作为模块加载。我选择禁用。

Kprobes (Kprobes) 是一种调试工具，允许用户捕获几乎任意的内核地址，并启动回调函数。我选择禁用这个特性。

优化非常不可能/很可能分支(Optimize very unlikely/likely branches (JUMP_LABEL))有助于简化分支预测，减少开销。我启用了这个特性。

配置工具还提供了一个实验性特性“透明用户空间探针”(Transparent user-space probes (EXPERIMENTAL) (UPROBES))。虽然它是实验性的，但并不一定不稳定或有缺陷。

基于gcov的内核分析(Enable gcov-based kernel profiling (GCOV_KERNEL))可以被禁用。

为了允许内核加载模块，必须启用可加载模块支持(Enable loadable module support (MODULES))。

通常情况下，内核只能加载带有版本号的模块。如果想允许加载没有版本号的模块，可以启用强制模块加载(Forced module loading (MODULE_FORCE_LOAD))。但是这样做并不推荐，所以我选择了"否"。

如果启用模块卸载(Module unloading (MODULE_UNLOAD))，Linux内核就能卸载模块。为了确保安全，我还禁用了强制卸载(Forced module unloading (MODULE_FORCE_UNLOAD))。

为了使用非本内核开发或不匹配版本号的模块，可以启用模块版本支持(Module versioning support (MODVERSIONS))。不过，混用不同版本的模块可能会导致问题，所以我选择了"否"。

模块的modinfo信息中有一个名为"srcversion"的字段，用于记录编译模块时使用的源代码版本。启用源校验和(Source checksum for all modules (MODULE_SRCVERSION_ALL))可以在编译模块时添加这一字段。我认为这不是必要的，所以选择了"否"。

为了启用模块签名验证(Module signature verification (MODULE_SIG))，可以回答"是"。但我认为这不是必需的，因此选择了"否"。

为了启用块层支持(Enable the block layer (BLOCK))，我选择了"是"。禁用此选项将导致块设备无法使用，并且某些文件系统也无法启用。

SG支持(Block layer SG support v4 (BLK_DEV_BSG))和辅助库(Block layer SG support v4 helper lib (BLK_DEV_BSGLIB))已经默认启用。

关于块设备的数据完整性支持(Block layer data integrity support (BLK_DEV_INTEGRITY))，许多设备并不支持这一特性，所以我选择了"否"。

启用块级bio带宽限制(Block layer bio throttling support (BLK_DEV_THROTTLING))可以限制设备的I/O速率。

为了支持高级分区方案(Advanced partition selection (PARTITION_ADVANCED))，可以选择"是"。但我选择了"否"。

启用最后期限I/O调度器(Deadline I/O scheduler (IOSCHED_DEADLINE))可以支持CSCAN（循环扫描）和FIFO过期请求。

CFQ I/O调度器(CFQ I/O scheduler (IOSCHED_CFQ))能够在处理器之间平均分配带宽，因此我启用了这个特性。

接下来可以选择是否启用CFQ组调度支持(CFQ Group Scheduling support (CFQ_GROUP_IOSCHED))。默认I/O调度器最好选择DEFAULT_DEADLINE。

对于小于32位寻址的设备，DMA内存分配支持(DMA memory allocation support (ZONE_DMA))会分配16MB的寻址空间。如果不使用这些设备，可以选择禁用。我选择了"否"。

对于多处理器系统，建议启用对称多处理支持(Symmetric multi-processing support (SMP))。单处理器系统在禁用此特性后可能会运行得更快。我选择了"是"。

对于支持x2apic的CPU，可以启用x2apic支持(Support x2apic (X86_X2APIC))。我的系统不支持这一特性，因此我选择了"否"。

对于缺乏适当ACPI支持的老式SMP系统，可以启用MPS表(Enable MPS table (X86_MPPARSE))。现代系统通常不需要这一特性，我选择了"否"。

如果需要支持扩展的x86平台(Support for extended (non-PC) x86 platforms (X86_EXTENDED_PLATFORM))，可以选择"是"。我选择了"否"。

为了支持Intel低功耗子系统(Intel Low Power Subsystem Support (X86_INTEL_LPSS))，可以选择"是"。

单一深度WCHAN输出(Single-depth WCHAN output (SCHED_OMIT_FRAME_POINTER))用于计算进程的等待状态(/proc/<pid>/wchan)，但这会增加功耗。我选择了"否"。

虚拟客户系统支持(Paravirtualized guest support (PARAVIRT_GUEST))允许Guest操作系统与主机操作系统一起运行。我不需要这一特性，因此选择了"否"。

Memtest是在系统启动时检测内存的工具。可以将其配置为每次或有时开机运行。我认为这不是必需的，所以选择了"否"。

在这里可以选择内核应支持的处理器家族。我选择了5 - Generic-x86-64，这是一个64位系统。

接下来可以选择也支持x86（32位）处理器(Supported processor vendors (PROCESSOR_SELECT))。

为了发现机器异常，可以启用DMI扫描(Enable DMI scanning (DMI))。

为了启用DMA访问系统上32位内存的3GB以上内存，可以启用GART IOMMU支持(GART IOMMU support (GART_IOMMU))。我选择了"是"。

---
via: 
译者：[geekpi](https://github.com/geekpi) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](http://linux.cn/) 荣誉推出