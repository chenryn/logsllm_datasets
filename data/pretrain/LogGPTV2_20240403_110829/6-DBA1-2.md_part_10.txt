+\-\-\-\-\-\--+\-\-\-\-\--+
1 row in set (0.00 sec)
查看gz表中的变化（Jerry的记录也没了）：
mysql\> SELECT \* FROM gz;
+\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+
\| gz_id \| name \| gz \|
+\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+
\| 2 \| Tom \| 8000.00 \|
+\-\-\-\-\-\--+\-\-\-\-\--+\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
7）删除指定表的外键约束
先通过SHOW指令获取表格的外键约束名称：
mysql\> SHOW CREATE TABLE gz\\G
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 1. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Table: gz
Create Table: CREATE TABLE \`gz\` (
\`gz_id\` int(4) NOT NULL,
\`name\` char(16) NOT NULL,
\`gz\` float(7,2) NOT NULL DEFAULT \'0.00\',
KEY \`name\` (\`name\`),
KEY \`gz_id\` (\`gz_id\`),
CONSTRAINT \`gz_ibfk_1\` FOREIGN KEY (\`gz_id\`) REFERENCES \`yg\`
(\`yg_id\`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8
1 row in set (0.00 sec)
其中gz_ibfk_1即删除外键约束时要用到的名称。
删除操作：
mysql\> ALTER TABLE gz DROP FOREIGN KEY gz_ibfk_1;
Query OK, 0 rows affected (0.01 sec)
Records: 0 Duplicates: 0 Warnings: 0
确认删除结果：
mysql\> SHOW CREATE TABLE gz\\G
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 1. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Table: gz
Create Table: CREATE TABLE \`gz\` (
\`gz_id\` int(4) NOT NULL,
\`name\` char(16) NOT NULL,
\`gz\` float(7,2) NOT NULL DEFAULT \'0.00\',
KEY \`name\` (\`name\`),
KEY \`gz_id\` (\`gz_id\`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
1 row in set (0.00 sec)
# NSD DBA1 DAY03
![](media/image22.png){width="5.761111111111111in"
height="3.2152777777777777in"}
## 一Mysql存储引擎:
## 1.1 Mysql体系结构(服务功能模块)
![LINUXNSD_V01DBA1DAY03_005](media/image23.png){width="5.495138888888889in"
height="3.9319444444444445in"}
Management\....(管理工具):提供各种mysql 命令
\[root@sql51 \~\]# mysql #连续TAB
mysql mysqlimport
mysqladmin mysql_install_db
mysqlbinlog mysql_plugin
mysqlcheck mysqlpump
mysql_client_test mysql_secure_installation
mysql_client_test_embedded mysqlshow
mysql_config mysqlslap
mysql_config-64 mysql_ssl_rsa_setup
mysql_config_editor mysqltest
mysqld mysqltest_embedded
mysqld-debug mysql_tzinfo_to_sql
mysqld_pre_systemd mysql_upgrade
mysqldump mysqlxtest
mysqldumpslow
\[root@sql51 \~\]# which mysql
/usr/bin/mysql
\[root@sql51 \~\]# rpm -qf /usr/bin/mysql
mysql-community-client-5.7.17-1.el7.x86_64
**Management\....(管理工具):**提供各种mysql 命令
**Connection
pool(连接池):**检查有无空闲线程,检查有无硬件支持线程,检查登录用户名和密码是否正确.三者满足,建立链接
**Sql interface (sql 接口):**接受执行命令
**Parser解析器(分析器):**分析命令格式是否正确.给错误的命令报错
**Optimizer(优化器):**当执行命令没有错误.调用优化器,进行命令优化,以最高效率处理命令
**Caches &
buffers(查询缓存):**提供存储空间,存储着曾经查找过的数据,从数据库服务器物理内存划分出来的存储空间给MY.提高查询速度:先检索查询缓存,然后在查询硬盘上的数据
**File system(文件系统):**存储数据,服务器磁盘硬件
**Pluggable storage
englnes(存储引擎):**当调用数据库文件系统中的数据,就会调用表使用的存储引擎处理数据.
## 1.2存储引擎
Mysql
体系结构中的一个功能程序.当访问这个一个表数据时.会自动调用这个表指定的存储引擎处理数据.
只有InnoDB引擎支持外键
可拔插
默认存储引擎:版本不一样,默认不一样
![](media/image24.png){width="5.311805555555556in"
height="2.8430555555555554in"}
mysql\> system ls /var/lib/mysql/mysql
## 查看数据库服务支持的存储引擎
mysql\> show engines;
mysql\>show engines\\G; #\\G 每个内容竖向显示
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 1. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Engine: InnoDB
Support: DEFAULT
Comment: Supports transactions, row-level locking, and foreign keys
Transactions: YES
XA: YES
Savepoints: YES
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 2. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Engine: MRG_MYISAM
Support: YES
Comment: Collection of identical MyISAM tables
Transactions: NO
XA: NO
Savepoints: NO
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 3. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Engine: MEMORY
\...\.....
字段说明:
No query specified:
Engine:存储引擎名
Support:是否可用和默认的(default)
Comment:
Transactions:是否支持事物
XA:事务旨在允许分布式事务，其中事务管理器（应用程序）控制涉及多个资源的事务。这些资源通常是DBMS，但可以是任何类型的资源。
Savepoints:支持执行
## 查看已有表使用的存储引擎
用查看表的实际创建指令
Show create table 表名;
mysql\> show create table t1;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Table \| Create Table
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--\|
t1 \| CREATE TABLE \`t1\` (
\`id\` int(4) DEFAULT NULL,
\`name\` varchar(8) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
t1表使用的存储引擎为MYISAM引擎
## 设置数据库服务默认使用的存储引擎
修改/etc/my.cnf 主配置文件如下:
\[mysqld\]
default-storage-engine=存储引擎名 #新加
\[root@sql51 \~\]# vim /etc/my.cnf
\[mysqld\]
default-storage-engine=myisam #设置myisam引擎为默认
\[root@sql51 \~\]# systemctl restart mysqld
\[root@sql51 \~\]# mysql -uroot -p123456
mysql\> show engines\\G;
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 4. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Engine: BLACKHOLE
Support: YES
Comment: /dev/null storage engine (anything you write to it disappears)
Transactions: NO
XA: NO
Savepoints: NO
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\* 5. row
\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*
Engine: MyISAM
Support: DEFAULT
Comment: MyISAM storage engine
Transactions: NO
XA: NO
Savepoints: NO
后面新建的表的默认存储引擎都将是: MyISAM
## 建表时指定使用的存储引擎
mysql\> create table t2(id int(4),name varchar(8))engine=innodb;
Query OK, 0 rows affected (0.31 sec)
mysql\> show create table t2;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Table \| Create Table
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| t2 \| CREATE TABLE \`t2\` (
\`id\` int(4) DEFAULT NULL,
\`name\` varchar(8) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
## 修改已有表使用的存储引擎
alter table 表名 engine=存储引擎名
mysql\> alter table t2 engine=myisam;
Query OK, 0 rows affected (0.22 sec)
Records: 0 Duplicates: 0 Warnings: 0
mysql\> show create table t2;
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| Table \| Create Table
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
\| t2 \| CREATE TABLE \`t2\` (
\`id\` int(4) DEFAULT NULL,
\`name\` varchar(8) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1 \|
+\-\-\-\-\-\--+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+
1 row in set (0.00 sec)
## 常用存储引擎的特点
### Mysiam:
支持表级锁以及独享表空间.不支持事务.事务回滚,节省资源
对应有三个表文件
> 表名.frm:存的是表结构 desc 表名
>
> 表名.MYI:存的是索引 index(name)
>
> 表名.MYD:存的是表数据 select \* from 表名
### Innodb :
支持行级锁定,支持事务/事务回滚/外键
对应二个表文件
> 表名.frm:存表结构desc 表名
>
> 表名.ibd:存既存索引,又存数据
### 查看数据库默认使用哪个引擎:
mysql\> show variables like \'%storage_engine%\';
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
\| default_storage_engine \| MyISAM \|
\| default_tmp_storage_engine \| InnoDB \|
\| disabled_storage_engines \| \|
\| internal_tmp_disk_storage_engine \| InnoDB \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\-\--+
4 rows in set (0.00 sec)
## 锁介绍(锁粒度):
**为什么要加锁:**解决并发访问冲突问题,如多个客户端访问A表,有查询,插入,修改updete等
操作,同时修改同一内容,造成写入冲突,第一个人访问之后,就将锁定内容.
**表级锁:**只要对表做访问,整张表被锁上
**行级锁:**只给访问的每一行记录分别加锁,
**页级锁:**对整个页面进行加锁,页面(MYSQL管理数据的基本存储单位)
**锁类型:** 读锁(共享锁):支持并发读
写锁(排他锁/互斥锁):独占锁,上锁期间,其他线程不能读表或写表
### 查看当前表锁状态信息:
mysql\> show status like \'%table_lock%\';
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Performance_schema_table_lock_stat_lost \| 0 \|
\| Table_locks_immediate \| 100 \|
\| Table_locks_waited \| 0 \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
3 rows in set (0.01 sec)
## 事务介绍
**事务:**对数据的一次访问,就是一次事务,只有innodb存储支持
**事务回滚介绍:**在事务执行过程中,任意一步执行失败,将回复之前所有操作,还原操作前
**如何回滚:**有事务日志文件.启动mysql服务,自动创建.记录对innodb存储引擎的表执行过的操作,事务日志文件所在:/var/lib/mysql/
目录下以下文件:
ib_logfile0 ib_logfile1 idbdata1
### 事务的特点:简称ACAD
![](media/image25.png){width="4.280555555555556in"
height="3.247916666666667in"}
#### 查看自动提交开关状态
开启了自动提交:命令输入插入/修改等命令,一回车,就将数据修改永久生效
Show Variables 显示所有变量 autocommit 自动提交
mysql\> show variables like \'%autocommit%\';
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| Variable_name \| Value \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
\| autocommit \| ON \|
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+
1 row in set (0.00 sec)
#### 关闭自动提交
mysql\> set autocommit=off;
Query OK, 0 rows affected (0.00 sec)
mysql\> show variables like \'%autocommit%\';
+\-\-\-\-\-\-\-\-\-\-\-\-\-\--+\-\-\-\-\-\--+