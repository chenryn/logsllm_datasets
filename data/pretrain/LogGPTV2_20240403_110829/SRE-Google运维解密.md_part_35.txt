对事不对人
可以在文档中给其他用户发消息，或者引入其他人来共同填写文档。
使大家都可以参与进来提供解决方案，以及提高对事故处理细节的覆盖程度。
使得写作过程可以很快地收集数据和想法。
对整个组织酿成更大的灾难（参见文献[Boy13]）。
生怀疑。
候更有自信。同时我们也不应该因为某个团队和个人经常写事后总结而对他们产
发事故的原因。从事后总结中排除指责的因素可以使人们在向上级汇报问题的时
对事不对人的事后总结有的时候比较难写，因为事后总结的格式清晰地表明了触
call工程师会感谢我们的。”
护手册非常长，学习成本很高。相信通过重写，可以减少报警信息，未来的on-
“通过重写整个后端系统可能可以避免这些烦人的报警信息继续发生，目前版本的维
写了。”
一点一点修复它的问题已经烦透了！真的，如果我再收到一个报警，那我就自己重
）关键的灾难数据是否已经被收集并保存起来了？
造成事故的根源问题是否足够深人？
：本次事故的影响评估是否完整？
文档中记录的任务优先级是否合理，
第15章事后总结：从失败中学习
一个充满相互指责风气的环境很容易让人将事故和问题掩盖起来，从而
最佳实践：避免指责，提供建设性意见
，能否及时解决了根源问题？
。这在事后总结早期很有帮助。
。在实践中，团队首先内部发布，同
---
## Page 191
事后总结阅读俱乐部
Google+事后总结小组
本月最佳事后总结
总结文化，SRE经常搞一些集体学习活动，示例如下：
立“对事不对人”的氛围，但是由工程师自主驱动，效果会更好。为了更好地建立事后
理层的主动参与协作和评审环节来不断加强内部事后总结文化。虽然管理层可以鼓励建
说起来容易做起来难，建立起事后总结文化需要不断地培育和加强。Google通过高级管
建立事后总结文化
地找到和学习以前的事故。
到该团队或者整个组织的文档汇总中。注2透明化的共享机制保证了每个人都可以很容易
一旦所有的事故参与者都对文档和其中的代办事项表示了肯定，这篇事后总结会被添加
管控规则，
传递给所有能够以此获益的团队和部门。Google针对任何可以定位个人注1的信息有严格
内部传阅，或者是以内部邮件列表形式传播。我们的目标是将事后总结传播得越广越好，
初期评审结束之后，该篇事后总结会在更大范围内公布。通常是在更大范围的研发部门
2
通过每周一次的新闻邮件，与整个组织共享一篇有趣并且质量很高的事后总结。
和评论，收集相关的想法，将文档完成。
至是新来的工程师）共同开发式地讨论一篇有趣或者很有影响力的事后总结，包括
某团队经常性地组织阅读俱乐部。在这项活动过程中，所有参与者和未参与者（甚
本小组共享和讨论内部与外部的事后总结，同时包括一些最佳实践和事后总结的评
励定期举行评审会议。在这些会议上，我们应该注意着重解决目前文档中的疑问
未经评审的事后总结还不如不写。为了保障每个写完的草稿都得到评审，我们鼓
如果你想收集事后总结，Etsy发布了Morgue（http://github.com/etsy/morgue）用来管理事后总结。
甚者几年前的事后总结。
事件的发生过程，学习到的经验教训，以及善后处理。通常，我们讨论的是几月前
论文章。
·这次事故处理的过程是否共享给了所有相关部门？
，事后总结这种内部文档也不允许包括这样的信息。
最佳实践：所有的事后总结都需要评审
建立事后总结文化
149
173
---
## Page 192
帮助面对这些挑战：
在引人事后总结机制的时候，最大的阻力来源于对投入产出比的质疑。下面的策略可以
命运之轮（wheelofmisfortune）
150
3
调查问卷，以了解事后总结流程是否在合理地支持他们的工作，以及如何改进。我
在Google，我们倾向于解决新问题并将创新在内部共享。
良好的事后总结和事故处理可以赢得从CEO到工程师的一致好评。4
后报告和灾难处理提出奖励。上面这个例子只是很多例子中的一个，在Google内部，
人。除此之外，Google内部还有一系列内部社交网络，鼓励用户对质量优秀的事
处理赢得了TGIF观众的热烈掌声，其中包括几千名在场观众和两名Google创始
程师不仅立即收到了两个同事发来的奖金（Peer Bonus注3），同时他的快速和沉
从而避免了时间更长和影响更大的事故，导致这次事故仅仅持续了4分钟。这名
预知的关联系统问题导致某关键服务停止运行4分钟。因为SRE立刻执行了回滚
了他经历的一次更新事故。在某次更新中，虽然经过了详细测试，还是由于不可
后总结的艺术”为主题，邀请了SRE一起讨论重大的事故处理过程。某SRE讨论
司的TGIF大会,所有Google全球办公室都可以收看直播。2014年一次TGIF以“事
Google创始人Larry Page和 Sergey Brain，每周会在美国加州山景城总部举办全公
参与其中，确保这次演习越真实越好。
刚加入的SRE工程师经常需要参加命运之轮这个活动（具体参见第28章的“故障
对这次事件的更详细讨论可参见第13章。
GooglePeerBonus计划充许工程师给同事发一笔奖金，以奖励他们的杰出贡献。
·鼓励公司高级管理层认可和参与其中。Larry Page（Google 创始人之一）经常称
·确保对有效的书面总结提供奖励和庆祝。不光通过前面提到的公开渠道，也应该
·逐渐引入事后总结流程。首先进行几次完整的和成功的事后总结，证明它们的价
一批工程师负责扮演这篇文档中提到的各种角色。经常，当时的事故总控负责人也
处理分角色演习”一小节）。在这个活动中，我们将之前的某篇事后总结的场景再现，
赞事后总结的价值之高！
在团队或个人的绩效考核中体现。
值，同时帮助确定具体书写事后总结的条件。
第15章事后总结：从失败中学习
最佳实践：收集关于事后总结有效性的反馈
最佳实践：公开奖励做正确事的人
。我们经常在团队内部搞
L
---
## Page 193
生，和更好地进行实时事故调查。
来我们还会采取机器学习等手段在这个领域内尝试预测系统的弱点，降低重复事故的发
行数据收集和汇总分析工作，我们最近在模板中增加了一些元数据（参见附录D）。接下
工具帮助我们在事后总结中寻找共同的模式和主题，以便形成改进意见。为了更好地进
每月有大量的事后总结在Google内部形成，汇总这些总结的工具也越来越有用。这些
Google Maps等。这些截然不同的产品部门都是为了共同的学习目标进行事后总结的工
给不同的产品部门，包括YouTube、GoogleFiber、Gmail、GoogleCloud、AdWords及
自动化数据收集，以及自动化元数据收集以便进行趋势分析。我们能够将最佳实践共享
这个小组协调公司内部各种部门的事后总结流程：建立事故总结模板，用流程管理工具
用户体验也越来越好。我们的“事后总结”小组是建立“对事不对人”文化努力的一个代表。
我们可以很自信地说，由于我们不断地培育公司事后总结文化，Google的事故越来越少，
小结以及不断优化
都会产生一
在事故流程管理之外，事后总结已经成为Google文化的一部分：在任何严重问题发生时，
SRE一个机会去提供有效性的改进和反馈意见。
第5章）？你们的团队有什么最佳实践可以分享？这些调查结果可以给平时很忙的
们问的问题有：团队文化是否支持你的工作？书写事后总结是否引入了太多杂事（见
一篇事后总结（比如某项产品上线之后反响很差，也会有类似的事后总结）。
小结以及不断优化
151
175
---
## Page 194
四>第16章
178
在Google中，SRE接收到的所有报警信息都由一个中央性的、高可用的服务管理。该
Escalator
152
个消耗的人工最多”。
个季度中的可操作的报警和不可执行的报警的比例是多少”，“本团队管理的服务中，哪
常有用，但是对单独故障不那么划算的改进讨论。
系统发出的所有报警信息，同时提供标记、分组和数据分析功能。
Google使用Outalator
提高可靠性的唯一可靠的方法论是建立一个基线（baseline），同时不断跟踪改变。
编辑：LisaCarey
作者：GabeKrabbe
跟踪故障
对小型服务的改进意见的讨论。同时单独故障的事后总结有可能错过一些从全局看来非
的，故障总结常常用于讨论对整个服务或者整套服务体系的改进意见，有可能错失一些
大的故障才会进行事后总结，所以小型但是频繁发生的故障经常不会被包含在内。同样
为单个故障提供了详细的信息，但是它们只是整个解决方案中的一部分。只有影响非常
系统性地从过去发生过的问题中学习是服务运维的必要手段。事后总结（参见第15章）
举例来说，给Bigtable做某个改动可能需要大量的工程力量，
报率可能就很高了。
但是，
如果这项改动可以为其他很多不同的生产故障提供同样的缓解性帮助，那这项改动的回
一个故障跟踪工具来做这件事。Outalator系统被动收集监控
注1
，但是只对某个具体故障提供一些缓解性
“上
---
## Page 195
析“每天的报警”和“每天的故障”两种场景分开。
警。这项分组功能，如图16-2所示，可以进一步减少显示界面中的无关信息，同时将分
也可以由非相关的事件组成，或者没有价值的记录性信息，或者只是暂时的监控失效报
在Outalator中，多个报警可以被合并成一个。这些报警通知可能是由同一个故障造成的，
散的邮件信息中获取有价值的信息。
会被折叠起来，以保持页面简洁。所有这些功能加起来，可以帮助我们更好地从一堆分
为了将某个人加入CC列表）。默认Outalator只显示“重要的”回复，其他回复记录都
记为“重要的”，因为有时候，某条回复对其他人意义不大（比如某条E-mail回复只是
Outalator同时也接收和保存处理故障过程中的邮件记录。Outalator还允许将某条回复标
Outalator将每条原始通知都保存在数据库中，同时允许给故障增加标记。为了方便起见，
图16-1:Outalator队列视图
能十分有用，因为某个SRE团队经常需要同时处理多个服务的报警信息。
需要切换队列视图。图16-1显示了Outalator队列视图中的多个队列同时显示。这项功
Outalator允许用户将多个“队列”（queue）收到的报警信息按时间顺序交叉列出，而不
高级抽象概念“故障”的系统一
在创建Escalator之后，为了更好地在现有基础设施上增加新功能，我们创建了一个处理
Outalator
作流整合起来，不需要改变用户习惯（在当时，不需要改变监控系统的行为。）
是透明接受on-call邮件列表的CC副本。这使得Escalator可以非常容易地和现有的工
on-call工程师升级给副on-call工程师。这套系统名为TheEscalator，一开始的设计目标
按照升级规则（escalation path）将报警升级给另外一个预先配置的目的地。比如从主
服务管理某项报警是否得到了回应。如果在配置时间周期内没有收到回应，这个系统将
OUTALATOR!
ges
Hit?to see
Re
shortcuts.Seehelp,and whatcouldbebetter
-Outalator.
rtModeStatisti
-tuningbug:89109
Create
Outalator
?