constructs the proﬁles of the rate history of origin-destination
pairs in a single ISP network. ACC (or Pushback) [40]
utilizes the rate/history of ﬂow aggregates at the intermedi-
ate routers. Moreover, anomaly detection [37] monitors the
unusual changes in the entropy of packet header bits to detect
attack trafﬁc. All attack-proﬁling approaches, however, can be
circumvented by an adversary who can freely choose attack
sources, destinations, and protocols, and completely conform
to network protocols (e.g., TCP congestion control) while
successfully ﬂooding a target.
Proof-of-work defense approaches. Proof-of-work mech-
anisms enable target routers (or servers) to force both bots and
legitimate senders to submit proofs (e.g., computation resource
for solving puzzles [42], [55] or network bandwidth resource
[54]) that were performed before allowing access to the target.
These systems are fundamentally different from SPIFFY for
multiple reasons: (1) proof-of-work systems limit the trafﬁc
generation of legitimate senders while SPIFFY limits that of
bots only; (2) proof-of-work systems create signiﬁcant waste
of computation/bandwidth at
trafﬁc sources, which might
be prohibitive in energy/bandwidth-starved devices, whereas
SPIFFY does not waste any unnecessary resources; and (3)
proof-of-work systems require signiﬁcant modiﬁcations to the
current Internet, including senders, routers, end-servers, and
protocols between them, while SPIFFY does not require such
modiﬁcations.
Capacity-provisioning defense approaches. Instead of
attempting to distinguish attack trafﬁc or prioritize legitimate
trafﬁc, the target network could simply provide more band-
width either via physical bandwidth addition or trafﬁc engi-
neering for both legitimate and attack trafﬁc [27]. However,
capacity provisioning alone cannot be effective because (1) it
does not reduce the attack-defense cost asymmetry (i.e., N-
times-provision of bandwidth at the target network requires
the same factor (N) of increase of attack bandwidth for
successful attacks), and (2), if bandwidth is provisioned via
trafﬁc engineering, the additional bandwidth available for the
provisioning in typical ISP networks is very small (e.g., 2 – 4
times) as shown in our evaluation in Section VII.
Collaboration-based defense approaches. These mech-
anisms require global collaboration among networks under
different ownership. CoDef [38] requires coordination between
the attack-target ISP and the ISPs hosting trafﬁc sources to
mitigate attack trafﬁc. SENSS [10] assumes the collaboration
between the target ISP and the intermediate ISPs in the
Internet to control the incoming ﬂooding trafﬁc. Although
ISP collaboration in general is not readily available in the
current Internet whose relationship between ISPs (e.g., [57])
are competitive rather than collaborative, increasing interest in
ISP collaboration for DDoS defense (viz., IETF DDoS Open
Threat Signaling (DOTS) Working Group [41]) may make
these mechanisms feasible in the near future.
SDN-based DDoS defense approaches. Orthogonal
to
the above defense approaches, recent proposals utilized SDN-
based network architectures to handle DDoS attacks; e.g.,
Bohatei [23]. However, their focus (in particular Bohatei) is
on elastic scaling of defense for legacy DDoS attacks and they
do not tackle the link-ﬂooding attacks we consider here.
Other attacks. Although our main focus in this paper is
on the link-ﬂooding attacks that target the Internet core, here
we list some other DDoS attacks and discuss why SPIFFY
is not appropriate for defending against these attacks. First,
opt-ack attacks [49] send TCP Ack packets with the sequence
numbers that the receiver (attacker) has not yet received (i.e.,
13
optimistic Acks) to servers to cause servers to send at a high
rate without noticing the congestion in the network. Such high-
rate ﬂows would be considered as protocol non-conforming
at the bottlenecked link and thus could be detected by ex-
[34]. Second, TCP
isting “elephant” detection mechanisms
ampliﬁcation attacks [35] exploit protocol and implementation
vulnerabilities in the TCP connection setup and amplify the
attack trafﬁc volume. Since this attacks also generate high-
rate attack ﬂows,
they can be detected in a similar way
the opt-ack attacks are detected. Third, shrew attacks [36]
and its variants (e.g., CXPST [46]) create low-rate ﬂows
with bursts of packets that can cause the synchronized TCP
timeouts at a targeted link. These attacks are very different
from other volumetric DDoS attacks (including our persistent
the link-ﬂooding attacks) and therefore could be handled by
other existing dedicated countermeasures [56]. Lastly, denial-
of-service attacks targeting SDN data-control channels have
different goals from the link-ﬂooding attacks we consider here
and thus need to be addressed independently [50].
X. CONCLUSION
Handling Internet
link-ﬂooding attacks is an extremely
challenging problem because adversaries (1) can generate
attacks ﬂows that are indistinguishable from legitimate ﬂows;
and (2) incur a much lower cost for attacks than the defense
for countermeasures. We propose a system called SPIFFY
that forces an adversary to choose between two unpleasant
alternatives, namely either allow bot detection or accept an
increase in attack cost. SPIFFY removes the key enabler of
link-ﬂooding attacks, namely undetectable attacks at low cost,
and provides an effective ﬁrst-line of defense for the common
case; i.e., for attacks by the cost-sensitive adversaries who wish
to remain undetected. Hence, more complex and expensive
collaborative defenses among ISPs are required only for the
far fewer, cost-insensitive or irrational adversaries.
REFERENCES
[1] Denial of Service Protection: Business protection for business
http://www.business.att.com/enterprise/Service/network-
as usual.
security/threat-vulnerability-management/ddos-protection/.
IBM ILOG CPLEX Optimization Studio.
software/commerce/optimization/cplex-optimizer/index.html.
Internet Transit Pricing: Historical and Projected. http://drpeering.net/
white-papers/Internet-Transit-Pricing-Historical-And-Projected.php.
ns2: The Network Simulator. http://www.isi.edu/nsnam/ns/.
[4]
[5] Open Flow. https://www.opennetworking.org.
[6] Open vSwitch. http://openvswitch.org.
[7] POX, Python-based OpenFlow Controller. http://www.noxrepo.org/pox/
http://www-01.ibm.com/
[2]
[3]
about-pox/.
[8] AFANASYEV, A., TILLEY, N., REIHER, P., AND KLEINROCK, L. Host-
to-host congestion control for TCP. IEEE Communications Surveys &
Tutorials (2010).
[9] AKHSHABI, S., BEGEN, A. C., AND DOVROLIS, C. An experimental
evaluation of rate-adaptation algorithms in adaptive streaming over
HTTP. In Proc. ACM MMSys (2011).
[10] ALWABEL, A., YU, M., ZHANG, Y., AND MIRKOVIC, J. SENSS:
In Proc. ACM
observe and control your own trafﬁc in the Internet.
SIGCOMM (2014).
[11] APPENZELLER, G., KESLASSY, I., AND MCKEOWN, N. Sizing router
buffers. Proc. ACM SIGCOMM, 2004.
[12] AWDUCHE, D., CHIU, A., ELWALID, A., WIDJAJA, I., AND XIAO, X.
Overview and principles of Internet trafﬁc engineering. Tech. rep., RFC
3272, may, 2002.
14
[13] AWERBUCH, B., AND KHANDEKAR, R. Greedy distributed optimiza-
tion of multi-commodity ﬂows. In Proc. ACM PODC (2007).
[14] BACCELLI, F., AND HONG, D. Flow level simulation of large IP
networks. In Proc. IEEE INFOCOM (2003).
[15] BELLOVIN, S. M. A technique for counting NATted hosts. In Proc.
ACM SIGCOMM Workshop on Internet Measurement (2002).
[16] BRAKMO, L. S., AND PETERSON, L. L. TCP Vegas: End to end
congestion avoidance on a global Internet. IEEE Journal on Selected
Areas in Communications (1995).
[17] BRIGHT, P. Can a DDoS break the Internet? Sure... just not all of it.
In Ars Technica (April 2, 2013). http://arstechnica.com/security/2013/
04/can-a-ddos-break-the-internet-sure-just-not-all-of-it/.
[18] CABALLERO, J., GRIER, C., KREIBICH, C., AND PAXSON, V. Mea-
suring Pay-per-Install: The Commoditization of Malware Distribution.
In Proc. USENIX Security (2011).
[19] CAO, J., CLEVELAND, W. S., GAO, Y., JEFFAY, K., SMITH, F. D.,
AND WEIGLE, M. Stochastic models for generating synthetic HTTP
source trafﬁc. In Proc. IEEE INFOCOM (2004).
[20] CHOU, J. C.-Y., LIN, B., SEN, S., AND SPATSCHECK, O. Proactive
Surge Protection: a Defense Mechanism for Bandwidth-based Attacks.
IEEE/ACM Transactions on Networking (2009).
[21] CISCO. How To Calculate Bandwidth Utilization Using SNMP.
http://www.cisco.com/c/en/us/support/docs/ip/simple-network-
management-protocol-snmp/8141-calculate-bandwidth-snmp.html.
[22] DONNET, B., LUCKIE, M., M ´ERINDOL, P., AND PANSIOT, J.-J. Re-
vealing MPLS tunnels obscured from traceroute. ACM SIGCOMM CCR
42, 2 (2012), 87–93.
[23] FAYAZ, S. K., TOBIOKA, Y., SEKAR, V., AND BAILEY, M. Bohatei:
Flexible and Elastic DDoS Defense. In Proc. USENIX Security (2015).
[24] FAYAZBAKHSH, S. K., CHIANG, L., SEKAR, V., YU, M., AND
MOGUL, J. C. Enforcing network-wide policies in the presence of
dynamic middlebox actions using FlowTags. In Proc. USENIX NSDI
(2014).
[25] FORTZ, B., REXFORD, J., AND THORUP, M.
Trafﬁc engineering
with traditional IP routing protocols. IEEE Communications Magazine
(2002).
[26] FREEMAN, L. C. A set of measures of centrality based on betweenness.
Sociometry (1977).
[28] GOODIN, D.
[27] GKOUNIS, D., KOTRONIS, V., AND DIMITROPOULOS, X. Towards
Defeating the Crossﬁre Attack using SDN. In arXiv:1412.2013 (2014).
How extorted e-mail provider got back online
In Ars Technica (November 10,
http://arstechnica.com/security/2015/11/how-extorted-e-mail-
after crippling DDoS attack.
2015).
provider-got-back-online-after-crippling-ddos-attack/.
[29] GUPTA, A., VANBEVER, L., SHAHBAZ, M., DONOVAN, S. P.,
SCHLINKER, B., FEAMSTER, N., REXFORD, J., SHENKER, S.,
CLARK, R., AND KATZ-BASSETT, E. SDX: A software deﬁned Internet
exchange. In Proc. ACM SIGCOMM (2014).
INDYK, P. Stable distributions, pseudorandom generators, embeddings
and data stream computation. In Proc. IEEE FOCS (2000).
[30]
[31] KANG, M. S., LEE, S. B., AND GLIGOR, V. D. The Crossﬁre Attack.
In Proc. IEEE S&P (2013).
[32] KNIGHT, S., NGUYEN, H. X., FALKNER, N., BOWDEN, R., AND
ROUGHAN, M. The Internet Topology Zoo. IEEE JSAC (2011).
[33] KRISHNAMURTHY, B., SEN, S., ZHANG, Y., AND CHEN, Y. Sketch-
based change detection: methods, evaluation, and applications. In Proc.
ACM IMC (2003).
[34] KRISHNAN, R., DURRANI, M., AND PHAAL, P. Real-time SDN
Analytics for DDoS mitigation. Open Networking Summit (2014).
[35] K ¨UHRER, M., HUPPERICH, T., ROSSOW, C., AND HOLZ, T. Hell of a
handshake: Abusing TCP for reﬂective ampliﬁcation DDoS attacks. In
Proc. USENIX WOOT (2014).
[36] KUZMANOVIC, A., AND KNIGHTLY, E. W. Low-rate TCP-targeted
In
denial of service attacks: the shrew vs. the mice and elephants.
Proc. ACM SIGCOMM (2003).
[37] LAKHINA, A., CROVELLA, M., AND DIOT, C. Mining anomalies using
trafﬁc feature distributions. In ACM SIGCOMM CCR (2005).
[38] LEE, S. B., KANG, M. S., AND GLIGOR, V. D. CoDef: collabora-
In Proc. ACM
tive defense against large-scale link-ﬂooding attacks.
CoNEXT (2013).
[39] LUDWIG, R., AND KATZ, R. H. The Eifel algorithm: making TCP
robust against spurious retransmissions. ACM SIGCOMM Computer
Communication Review (2000).
[40] MAHAJAN, R., BELLOVIN, S. M., FLOYD, S., IOANNIDIS, J., PAX-
SON, V., AND SHENKER, S. Controlling high bandwidth aggregates in
the network. ACM SIGCOMM CCR (2002).
[41] MORTENSEN, A. DDoS Open Threat Signaling Requirements. IETF
draft-mortensen-threat-signaling-requirements-00 (2015).
[42] PARNO, B., WENDLANDT, D., SHI, E., PERRIG, A., MAGGS, B.,
AND HU, Y.-C. Portcullis: protecting connection setup from denial-
of-capability attacks. In Proc. ACM SIGCOMM (2007).
[43] PATEL, P., BANSAL, D., YUAN, L., MURTHY, A., GREENBERG, A.,
MALTZ, D. A., KERN, R., KUMAR, H., ZIKOS, M., WU, H., KIM,
In Proc.
C., AND KARRI, N. Ananta: Cloud Scale Load Balancing.
ACM SIGCOMM (2013).
[44] QAZI, Z. A., TU, C.-C., CHIANG, L., MIAO, R., SEKAR, V., AND YU,
M. SIMPLE-fying middlebox policy enforcement using SDN. In Proc.
ACM SIGCOMM (2013).
[45] ROSSOW, C. Ampliﬁcation Hell: Revisiting Network Protocols for
DDoS Abuse. In Proc. NDSS (2014).
[46] SCHUCHARD, M., MOHAISEN, A., FOO KUNE, D., HOPPER, N., KIM,
Y., AND VASSERMAN, E. Y. Losing control of the Internet: using the
data plane to attack the control plane. In Proc. NDSS (2010).
[47] SEN, S., SHUE, D., IHM, S., AND FREEDMAN, M. J. Scalable, optimal
In Proc. ACM
ﬂow routing in datacenters via local link balancing.
CoNEXT (2013).
[48] SHARAFAT, A. R., DAS, S., PARULKAR, G., AND MCKEOWN, N.
[48] SHARAFAT, A. R., DAS, S., PARULKAR, G., AND MCKEOWN, N.
MPLS-TE and MPLS VPNs with OpenFlow. In ACM SIGCOMM CCR
(2011).
[49] SHERWOOD, R., BHATTACHARJEE, B., AND BRAUD, R. Misbehaving
In Proc.
TCP receivers can cause Internet-wide congestion collapse.
ACM CCS (2005).
[50] SHIN, S., AND GU, G. Attacking software-deﬁned networks: A ﬁrst
feasibility study. In Proc. ACM HotSDN (2013).
[51] STUDER, A., AND PERRIG, A. The Coremelt attack. In Proc. ESORICS
(2009).
[52] TAN, K., SONG, J., ZHANG, Q., AND SRIDHARAN, M. A compound
In Proc.
TCP approach for high-speed and long distance networks.
IEEE INFOCOM (2006).
[53] VALANCIUS, V., LUMEZANU, C., FEAMSTER, N., JOHARI, R., AND
VAZIRANI, V. V. How many tiers?: pricing in the Internet transit
market. In ACM SIGCOMM CCR (2011).
[54] WALFISH, M., VUTUKURU, M., BALAKRISHNAN, H., KARGER, D.,
AND SHENKER, S. DDoS defense by offense. In Proc. ACM SIGCOMM
(2006).
[55] WANG, X., AND REITER, M. K. Defending against denial-of-service
attacks with puzzle auctions. In Proc. IEEE S&P (2003).
[56] YANG, G., GERLA, M., AND SANADIDI, M. Defense against low-rate
TCP-targeted denial-of-service attacks. In Proc. IEEE ISCC (2004).
[57] YEGULALP, S. Level 3 accuses Comcast, other ISPs of ‘deliberately
harming’ broadband service. In InfoWorld (May 6, 2014).
[58] YU, M., JOSE, L., AND MIAO, R. Software Deﬁned Trafﬁc Measure-
ment with OpenSketch. In Proc. USENIX NSDI (2013).
[59] ZHANG, M., DUSI, M., JOHN, W., AND CHEN, C. Analysis of UDP
trafﬁc usage on Internet backbone links. In Proc. IEEE SAINT (2009).
15