x
x
a
a
m
m
0
0
1
=
>
R
h
t
i
w
s
t
n
e
m
e
e
l
f
o
n
o
i
t
c
a
r
F
 30000
 30000
 28000
 28000
 26000
 26000
 24000
 24000
 22000
 22000
 20000
 20000
 18000
 18000
 16000
 16000
 14000
 14000
 1
 1
 10
 100
 10
 100
Redundancy factor
Redundancy factor
 1000
 1000
Figure 13: How to select redundancy factor.
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
 5
 10  15  20  25  30  35  40  45
max probing threshold (K)
Figure 14: How to select maximum probing threshold.
NetPolice imposes a maximum probing threshold m to prevent
a prober from being assigned too many probing destinations. This
may cause the actual redundancy of certain elements to be smaller
than R. Figure 14 shows the fraction of elements whose actual re-
dundancy reaches R ≥ 100 under different m. The fraction num-
ber grows slowly when m exceeds 10K. We choose m = 10K
to attain a reasonable balance between element redundancy and
maximum prober overhead. Note that the redundancy of certain
elements can never reach R because the number of distinct paths
i
i
)
)
n
n
m
m
(
(
e
e
m
m
i
i
t
t
.
.
c
c
e
e
x
x
E
E
 24
 24
 21
 21
 18
 18
 15
 15
 0
 0
 2
 2
 4
 4
 3.1
 3.1
 2.6
 2.6
 2.1
 2.1
 1.6
 1.6
 1.1
 1.1
)
)
B
B
G
G
(
(
m
m
e
e
M
M
 0.6
 0.6
Exec. time
Memory
 8  10  12  14  16  18
 8  10  12  14  16  18
 6
 6
Number of ISPs
Number of ISPs
Figure 15: Execution time and memory usage of path selector.
single-ISP
multi-ISP
)
)
K
K
(
(
d
d
e
e
b
b
o
o
r
r
p
p
s
s
h
h
t
t
a
a
p
p
f
f
o
o
r
r
e
e
b
b
m
m
u
u
N
N
 1300
 1300
 1200
 1200
 1100
 1100
 1000
 1000
 900
 900
 800
 800
 700
 700
 600
 600
 500
 500
 400
 400
 300
 300
 0
 0
 2
 2
 4
 4
 10  12  14  16  18
 10  12  14  16  18
 8
 8
 6
 6
Number of ISPs
Number of ISPs
Figure 16: Probing overhead under single-ISP vs. multi-ISP
path selection.
traversing an element is inherently limited by the set of source-
destination pairs covered by NetPolice.
Performance evaluation
In NetPolice, the number of destina-
tions probed by each prober ranges from 6K to 10K. This corre-
sponds to a bandwidth usage from 17Kbps to 443Kbps per prober.
The multi-ISP path selection consumes most of the execution time
and memory compared to other components in NetPolice. Since a
path can only traverse a limited number of elements, the time and
space complexity of the path selection is O(p2) and O(ep). Here,
p is the number of source-destination pairs and e is the number of
elements.
We evaluate NetPolice on a commodity server with eight 3.0
GHz Xeon processors and 8 GB memory running Linux 2.6.18
SMP. Figure 15 illustrates the execution time and memory us-
age of NetPolice as the number of ISPs increases. At 18 ISPs,
NetPolice measures 13K unique ingress-egress pairs from 186
sources to 57K destinations.
It takes 3.5GB memory for Net-
Police to store 182M three-tuples of (src, ingress, egress) and
(ingress, egress, dst). The execution time of each run of path
selection is around 25 minutes, which is only 20% of one round of
probing. This means the path selection process can keep up with
measurement speed. To demonstrate the beneﬁt of multi-ISP path
selection, Figure 16 compares the total number of paths probed un-
der single-ISP vs. multi-ISP path selection. The latter reduces the
probing overhead by almost a third when 18 ISPs are being mea-
sured.
8. RELATED WORK
Trafﬁc differentiation detection has drawn signiﬁcant attention
among the research community in the last few years. One re-
cent study leverages active measurement launched from end-host
113to identify trafﬁc differentiation using port blocking [8]. Evidence
of differentiation against P2P trafﬁc has been found in many broad-
band ISPs by BTTest [13]. Unlike the existing works that study
broadband ISPs, NetPolice focuses on differentiation detection in
backbone ISPs. This requires us to devise an intelligent path selec-
tion algorithm to scalably measure a large number of ISP internal
paths.
Our previous work has demonstrated some initial evidence of
trafﬁc differentiation in backbone ISPs [35]. In this paper, we sig-
niﬁcantly extend our prior work by comprehensively presenting,
validating, and analyzing the differentiation detection results col-
lected over 10 weeks. NANO [32] targets a similar goal but takes
a passive monitoring approach. Without coordinating active mea-
surement from multiple end hosts as NetPolice does, its main difﬁ-
culty lies in collecting sufﬁcient samples across different hosts and
ISPs that enables adjustment for each of the many confounding fac-
tors, e.g., congestion and time-of-day effect.
Our work draws heavily on a broad class of measurement studies
to reverse engineer the Internet using end-host based probing [30,
21]. Rocketfuel [29] infers ISP topologies by launching traceroute
from a set of end-hosts. We extends its DNS naming rules to map IP
addresses to geographic locations. There have been a few network-
wide systems that measure and predict the performance of various
Internet paths [20, 15, 25]. The closest work on monitoring ISP per-
formance is Netdiff [23], which enables cross ISP latency compar-
ison. Similar to NetPolice, the systems above must carefully man-
age measurement overhead for scalable probing. However, none of
them has been used for systematically detecting trafﬁc differentia-
tion.
9. CONCLUSION & FUTURE WORK
In this paper, we presented the NetPolice system to detect
content- and routing-based trafﬁc differentiation in backbone ISPs
by taking loss measurement from end hosts. NetPolice employs
an intelligent probing scheme to attain rich coverage of ISP inter-
nal paths while maintaining reasonable measurement overhead. It
identiﬁes signiﬁcant performance gap between different types of
trafﬁc using statistical hypothesis tests.
We deployed NetPolice on PlanetLab to study 18 large ISPs
across 3 continents over 10 weeks in 2008. We ﬁnd 4 ISPs that
perform differentiation on 4 distinct applications and 10 ISPs that
perform previous-hop AS based differentiation, evidenced by up to
5% actual loss rate differences. The degree of differentiation in-
creases with network load. Some ISPs appear to carry out content-
based differentiation simply based on port numbers irrespective of
packet content. These ISPs may deploy differentiation policies only
to a subset of routers in their networks. The loss rate differences are
often associated with different TOS values in the trafﬁc marked by
the ISPs.
Our work serves as an important step towards increasing the
transparency of the Internet.
If an ISP blacklists the source IP
addresses of NetPolice or disables ICMP response completely,
we could get NetPolice deployed on hosts spanning educational,
commercial and residential networks to counteract blacklisting of
source IP addresses. We could also leverage end-to-end in-band
probing techniques [7] to detect performance degradation due to
differentiation without requiring router responses. We plan to ex-
plore ways to improve the robustness of differentiation detection in
NetPolice in the future.
10. REFERENCES
[1] Arbor Ellacoya e100 .
http://www.arbornetworks.com.
[2] AT&T Continues to Adjust TOS to Limit 3G Video.
http://newteevee.com/2009/04/29/
att-continues-to-adjust-tos-to-limit-3g-video.
[3] Schooner User-Conﬁgurable Lab Environment.
http://www.schooner.wail.wisc.edu/index.
php3?stayhome=1.
[4] A. Akella, S. Seshan, and A. Shaikh. An empirical evaluation
of wide-area internet bottlenecks. In IMC, 2003.
[5] B. Augustin, M. Curie, T. Friedman, and R. Teixeira.
Measuring Load-balanced Paths in the Internet. In Proc.
ACM SIGCOMM IMC, 2007.
[6] B. Augustin, X. Cuvellier, B. Orgogozo, F. Viger,
T. Friedman, M. Latapy, C. Magnien, and R. Teixeira.
Avoiding Traceroute Anomalies with Paris Traceroute. In
Proc. of ACM IMC, 2006.
[7] I. Avramopoulos and J. Rexford. Stealth probing: Efﬁcient
data-plane security for IP routing. In Proceedings of USENIX
Annual Technical Conference, 2006.
[8] R. Beverly, S. Bauer, and A. Berger. The Internet’s Not a Big
Truck: Toward Quantifying Network Neutrality. In
Proceedings of the 8th Passive and Active Measurement
(PAM) Conference, 2007.
[9] Cisco Systems. Conﬁguring Port to Application Mapping.
http://www.cisco.com/en/US/products/sw/
iosswrel/ps1835/products_configuration_
guide_chapter09186a00800ca7c8.html.
[10] Cisco Systems. Conﬁguring Priority Queueing.
http://www.cisco.com/en/US/docs/ios/12_
0/qos/configuration/guide/qcpq.html.
[11] Cisco Systems. Simple network management protocol.
[12] cPacket Networks Inc. Complete Packet Inspection on a
Chip. http://www.cpacket.com/.
[13] M. Dischinger, A. Mislove, A. Haeberlen, and K. P.
Gummadi. Detecting BitTorrent Blocking. In Proc. ACM
SIGCOMM IMC, 2008.
[14] Deep packet inspection.
www.networkworld.com/details/6299.html.
[15] P. Francis, S. Jamin, V. Paxson, L. Zhang, D. Gryniewicz,
and Y. Jin. An Architecture for a Global Internet Host
Distance Estimation Service. In Proceedings of IEEE
INFOCOM, 1999.
[16] L. Gao. On Inferring Autonomous System Relationships in
the Internet. In Proc. IEEE Global Internet Symposium,
2000.
[17] V. S. Kaulgud. IP Quality of Service: Theory and best
practices. www.sanog.org/resources/
sanog4-kaulgud-qos-tutorial.pdf, 2004.
[18] S. G. Kolliopoulos and N. E. Young. Approximation
algorithms for covering/packing integer programs. Journal of
Computer and System Sciences, 71(4), 2005.
[19] G. Lu, Y. Chen, S. Birrer, F. E. Bustamante, C. Y. Cheung,
and X. Li. End-to-end inference of router packet forwarding
priority. In Proc. IEEE INFOCOM, 2007.
[20] H. V. Madhyastha, T. Isdal, M. Piatek, C. Dixon,
T. Anderson, A. Krishnamurthy, and A. Venkataramani.
iPlane: An Information Plane for Distributed Services. In
Proc. Operating Systems Design and Implementation, 2006.
[21] R. Mahajan, N. Spring, D. Wetherall, and T. Anderson.
Inferring Link Weights Using End-to-End Measurements. In
Proc. ACM SIGCOMM IMW, 2002.
[22] R. Mahajan, N. Spring, D. Wetherall, and T. Anderson.
114User-level Internet Path Diagnosis. In Proceedings of ACM
SOSP, 2003.
[23] R. Mahajan, M. Zhang, L. Poole, and V. Pai. Uncovering
Performance Differences in Backbone ISPs with Netdiff. In
Proceeding of NSDI, 2008.
[30] N. Spring, D. Wetherall, and T. Anderson.
Reverse-Engineering the Internet. In Proc. ACM HotNets,
2002.
[31] A. Stuart, K. Ord, and S. Arnold. Kendall’s Advanced Theory
of Statistics. Wiley, 1999.
[24] A. W. Moore and D. Zuev. Internet trafﬁc classiﬁcation using
[32] M. B. Tariq, M. Motiwala, and N. Feamster. NANO:
bayesian analysis techniques. SIGMETRICS Perform. Eval.
Rev., 33(1), 2005.
Network Access Neutrality Observatory . In Proceedings of
ACM HotNets, 2008.
[25] V. Paxson, J. Mahdavi, A. Adams, and M. Mathis. An
[33] J. Tukey. Bias and conﬁdence in not quite large samples.
architecture for large-scale Internet measurement. In IEEE
Communications, 1998.
[26] L. Peterson, T. Anderson, D. Culler, and T. Roscoe. A
Blueprint for Introducing Disruptive Technology Into the
Internet. In Proc. of ACM HotNets, 2002.
Ann. Math. Statist, 1958.
[34] C. Wright, F. Monrose, and G. Masson. On inferring
application protocol behaviors in encrypted network trafﬁc.
In Journal of Machine Learning Research (JMLR): Special
issue on Machine Learning for Computer Security, 2006.
[27] J. Saltzer, D. Reed, and D. Clark. End-to-end arguments in
[35] Y. Zhang, M. Mao, and M. Zhang. Ascertaining the Reality
system design. ACM Transactions on Computer Systems,
2(4), 1984.
[28] J. Sommers and P. Barford. An Active Measurement System
for Shared Environments. In Proc. ACM SIGCOMM IMC,
2007.
[29] N. Spring, R. Mahajan, D. Wetherall, and T. Anderson.
Measuring isp topologies with rocketfuel. IEEE/ACM Trans.
Netw., 12(1), 2004.
of Network Neutrality Violation in Backbone ISPs. In
Proceedings of ACM HotNets, 2008.
115