**Sam Brannen** opened **SPR-6523** and provided the following comments:

In section _C.2.2.4 util:list_ of the reference manual, it is stated:
> "Finally, you can also control the merging behavior using the 'merge' attribute of the <util:list> element; collection merging is described in more detail in the section called 'Collection merging'."

However, this statement is inaccurate. Unlike the standard support for collections (i.e., arrays, lists, sets, and maps) in the _beans_ namespace, the _util_ namespace does not support the `merge` attribute for collections.

Is this an oversight in the documentation, or is it a missing feature in the _util_ namespace?

Additionally, consider the following application context configuration and JUnit test class:

```xml
<bean id="listHolderParent" abstract="true">
    <property name="list">
        <list>
            <value>red</value>
            <value>green</value>
            <value>blue</value>
        </list>
    </property>
</bean>

<bean id="listHolderChild" parent="listHolderParent">
    <property name="list">
        <list merge="true">
            <value>cyan</value>
            <value>magenta</value>
            <value>yellow</value>
            <value>black</value>
        </list>
    </property>
</bean>
```

```java
package com.example;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.util.List;
import org.junit.Test;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class MergedListTests {
    @Test
    public void mergedList() {
        ApplicationContext appCtx = new ClassPathXmlApplicationContext(
                "/com/example/MergedListTests-context.xml");
        ListHolder listHolder = appCtx.getBean("listHolder", ListHolder.class);
        assertNotNull(listHolder);
        assertEquals(7, listHolder.getList().size());
    }

    public static class ListHolder {
        private List<String> list;

        public List<String> getList() {
            return this.list;
        }

        public void setList(List<String> list) {
            this.list = list;
        }
    }
}
```

When the definition in `listHolderParent` is changed to use `<util:list>`, the following exception is thrown:

```
java.lang.IllegalArgumentException: Cannot merge with object of type [class org.springframework.beans.factory.config.BeanDefinitionHolder]
    at org.springframework.beans.factory.support.ManagedList.merge(ManagedList.java:98)
    at org.springframework.beans.factory.support.ManagedList.merge(ManagedList.java:1)
    at org.springframework.beans.MutablePropertyValues.mergeIfRequired(MutablePropertyValues.java:221)
    at org.springframework.beans.MutablePropertyValues.addPropertyValue(MutablePropertyValues.java:169)
    at org.springframework.beans.MutablePropertyValues.addPropertyValues(MutablePropertyValues.java:138)
    at org.springframework.beans.factory.support.AbstractBeanDefinition.overrideFrom(AbstractBeanDefinition.java:300)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedBeanDefinition(AbstractBeanFactory.java:1114)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedBeanDefinition(AbstractBeanFactory.java:1054)
    at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1040)
    at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:294)
    at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:578)
    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:398)
    at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
    at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
    at com.example.MergedListTests.mergedList(MergedListTests.java:17)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    ...
```

**Issue Links:**
- #10561: Merge multiple lists/maps/sets that share the same ID into a single map/list (Cloned from)
- #9658: Support cascading merge operation (Duplicated by)
- #13477: Add MapCombiningFactoryBean (Duplicated by)
- #7575: Support easier merge/concatenation of lists (Duplicated by)
- #14186: Respect 'merge' attribute of <util:list> and <util:map> elements in conjunction with nested property paths
- #9437: Merge of util:map does not work
- #6201: Support for Collection Merging in Parent/Child Bean Definitions
- #9872: Re-allow merge of util:map, list, set, ... based on the same bean ID

**Referenced from:** Commits `a827ab8`
- 16 votes, 18 watchers