selective communication channels. Our OFDM radio allows the
choice of various sub-carrier modulation schemes such as BPSK,
QPSK, 16QAM, etc., and includes basic error correction coding
mechanisms. Rather than describing the well-known aspects of
OFDM, we focus in this section only on the aspects that are unique
to our implementation.
5.1 Ingress Filter
In order to be immune to typical ambient noise, the Dhwani re-
ceiver ﬁrst applies a digital ﬁlter. As seen in Figure 3, and de-
scribed in Section 4, ambient noise can be as high as 25-30dB
above the noise ﬂoor at frequencies below 1.5KHz and up to 10dB
at 5KHz. The ambient noise above 6KHz is typically negligible.
Consequently, at the receiver, we use a High-Pass Finite Impulse
Response ﬁlter, which allows only frequencies greater than 6kHz.
Figure 9 shows the frequency response of the ﬁlter we used. As
seen in the ﬁgure, the ﬁlter attenuates all frequencies below 4KHz
by 30dB, thus practically annulling the effects of all ambient noise.
The ﬁlter provides close to 0dB gain for frequencies greater than
6KHz, and consequently allows higher frequencies to pass.
5.2 OFDM Design
A key difference between the radio-frequency OFDM radios and
Dhwani is the absence of a carrier wave in the latter (unlike WiFi,
for instance, which uses a 2.4GHz carrier). This is because, un-
like WiFi, the ADC (at the microphone) and DAC (at the speaker)
can sample at a rate commensurate with the entire available band-
width of 22KHz. The OFDM subcarriers are thus spread over the
entire 22KHz in our implementation. While increasing the num-
ber of subcarriers helps combat high frequency selectivity, it also
adversely effects the Peak to Average Power Ratio (PAPR). In our
implementation we choose a sub-carrier width of 171 Hz (128 sub-
carriers in the range 0-22KHz). At a sampling rate of 44KHz, this
leads to an OFDM symbol length of about 5.8ms.
Choosing an operating bandwidth. The ingress ﬁlter ﬁlters fre-
quencies below 6KHz, while the speaker/microphone do not trans-
mit/receive well at high frequencies. Consequently, a suitable op-
erating bandwidth needs to be chosen. In our implementation we
chose 1KHz of bandwidth in the range 6-7KHz as our operating
bandwidth, which is a conservative choice that works well across
all the platforms we tested. 2 Choosing an operating bandwidth of
6-7KHz in our system corresponds to transmitting zero energy in
the remaining sub-carriers.
Real to Complex Signal Representation. The key advantage of
the complex representation of a signal (Eqn 2) is that the phase
of each sample can be readily extracted from the ratio of its real
(in-phase) and imaginary (quadrature-phase) parts. In contrast, the
2Note that use of more advanced error correcting codes than used in
our current implementation of Dhwani may allow the use of wider
bandwidths.
real representation (Eqn 1) is not amenable to such a computa-
tion. Ready access to phase is crucial for many operations such
as preamble correlation, demodulation etc.In a typical radio, the
mixer (responsible for mixing i.e., up/down conversion from the
carrier frequency) generates both real and complex samples from
the received real signal at the carrier frequency, as a part of mixing
process. In Dhwani, however, since the sound-card provides only
16-bit real samples, the receiver does not have the luxury of being
provided complex samples.
The Dhwani receiver uses negative sideband suppression to con-
vert real signal to its complex representation. This scheme relies on
the property that the complex representation can be obtained from
its real counterpart by setting all its negative frequency components
to zero. Suppose that the received digital signal is sreal(k) and has
a total of N samples. The ﬁrst step in this scheme is to compute
the N-point Fourier transform Sk. Then, all the negative sideband
Fourier coefﬁcients S(k), k > N/2 are set to zero to obtain S+(k).
Thereafter, the corresponding complex representation scplx is ob-
tained by taking an N point inverse Fourier transform of S+(k).
Cyclic Preﬁx. As depicted in Figure 6, reverberations in the acous-
tic channel last over 25ms (time taken to decay to noise ﬂoor or
0dB SNR). To combat Inter Symbol Interference (ISI) due to ring-
ing in the channel (Section 4), we experimentally found that a 4ms
long cyclic preﬁx worked well in practice in all environments we
tested for modulations such as BPSK and QPSK. This is because
the energy of the reverberations decay by more than 10dB after
about 4ms, which is sufﬁcient to allow reliable detection of QPSK
symbols despite inter-symbol interference.
Preamble. For synchronizing the OFDM transmitter and receiver,
a preamble precedes each transmitted packet. For our preamble, we
used a chirp whose frequency increased from fmin to fmax in the
ﬁrst half and then decreased back to fmin as follows,
P (t) =
eiπat2
ei[φ0+fmax(t−T )−πa(t−T )2]
a = fmax−fmin
T
φ0 = πaT 2
t < T
f or
f or T < t < 2T
(3)
The reason for the choice of this chirp was twofold. First, the
chirp has a very low Peak-to-Average Power Ratio (PAPR), which
makes it easier to detect compared to a standard OFDM-based pream-
bles that have a higher PAPR. Second, experiments suggested that
having the chirp frequency to ﬁrst increase and then decrease led
to a more accurate synchronization than using a chirp where fre-
quency simply increases (or decreases).
In our implementation,
we chose fmax = 16KHz and fmin = 6KHz and T = 5.81ms
(i.e., 256 samples long, given the sampling rate of 44KHz). One
problem we found was that since the amplitude of the preamble
is much larger than that of the OFDM transmission (due to low
PAPR), a 3ms cyclic preﬁx proved insufﬁcient for shielding from
ISI the training symbols that immediately followed the preamble.
Consequently, we padded each preamble with a silence period of
050100150051015202530Distance [cm]SNR [dB]  Vol 25%Vol 50%Vol 75%Vol 100%012345678910111213141516171819202122−40−30−20−100Attenuation (dB)Freq [KHz]68roughly 4ms that allowed ringing of the preamble to subside sig-
niﬁcantly and reduced channel estimation errors.
Achieved Data Rates. The data rate achieved by Dhwani depends
on the operating acoustic bandwidth (1 KHz in our current imple-
mentation), the modulation and error correction codes being used.
In our current implementation, Dhwani achieves 2.4 Kbps corre-
sponding to 8-PSK with about 80% PSR, around 95% PSR for
QPSK (1.6Kbps) and 100% for BPSK (800bps) without any error
correction. So for a short transfer of say 100 bytes, as would be typ-
ical of NFC transactions, Dhwani would take under a second. We
believe that these rates could be further improved through the use
of better error correcting codes with higher modulation schemes
such as 16-QAM or 64QAM and wider bandwidths than 1KHz.
6. JAMSECURE
As described in Section 3, in Dhwani, a receiver defeats an eaves-
dropper by jamming the transmissions from the sender. It then uses
Self-Interference Cancellation (SIC) to decode the transmission de-
spite jamming. Consequently, there are two key goals in the design
of jamming and SIC in Dhwani:
• Security: The jamming should be random and powerful enough
that an eavesdropper is unable to cancel out the jamming and
retrieve the message.
• Effective SIC Cancellation: At the same time, SIC must be
good enough for the receiver to decode the message.
In this section we start by explaining the basic techniques used for
SIC and what makes SIC in Dhwani especially difﬁcult. We then
describe JamSecure, a novel jamming technique that allows efﬁ-
cient SIC at the receiver while making cancellation practically im-
possible for an adversarial eavesdropper.
6.1 SIC Primer
The fundamental difﬁculty in performing SIC in Dhwani is that
the transmitted signal s(k), is affected by the speaker, microphone,
and multipath, altering the received signal r(k) (as discussed in
Section 4). There has been a signiﬁcant amount of research in terms
of Self Interference Cancellation (SIC) in the context of full-duplex
communication for radio frequency wireless communication. We
present a quick overview of these methods and explain why these
are not suitable for Dhwani.
Analogue SIC : In [14], the transmitted signal is fed back over
a delayed path, attenuated, and then subtracted from the received
signal. A key advantage of using this approach is that it allows for
the detection of weak signals from a distant transmitter, by avoid-
ing ADC saturation [14]. However, ADC saturation is not an is-
sue in Dhwani since both the transmitter and the receiver are lo-
cated within close proximity. Further, one of the design goals of
Dhwani is that it should work on off-the-shelf components without
any hardware additions.
Channel Estimation based SIC : If the communication channel is
linear, then it can be modeled by a digital ﬁlter H(t) whose Fourier
transform corresponds to the complex channel gains a(f )e∆φ(f )
of the acoustic channel (Section 4). The key challenge then, is
to accurately estimate the channel gains of the acoustic channel.
Typically, the channel estimation is performed by the transmitter
sending a well-known training signal, pxmit(t), prior to s(t). The
receiver then computes the channel gains, and hence H(t), using
the received version, Prec(t).
In multipath environments, the length of this ﬁlter (or, equiv-
alently, the frequency resolution at which channel gains must be
estimated) corresponds to the duration for which the channel rever-
berations (ringing) lasts. As described in Section 4, reverberations
last for several tens of milliseconds (Figure 6). At a sampling rate
of 44KHz, this corresponds to a ﬁlter with a response that lasts over
a few thousand samples. The need for estimating such a large ﬁlter
accurately limits the performance of this method in Dhwani.
6.2 Design of JamSecure
As discussed in Section 4, the frequency selectivity of the acous-
tic channel in Dhwani arises from two sources — the electro-mechanical
components in the speaker/microphone, and multipath in the ambi-
ent environment. Also, as noted there, the effect of electro-mechanical
components is a signiﬁcant cause for frequency selectivity. Note
that this is unlike RF, where antennas are speciﬁcally chosen not
to be frequency selective in the operating bandwidth and most of
the frequency selectivity is due to multipath. For SIC in Dhwani,
the self interference channel primarily comprises that between the
device’s own speaker and microphone, which is constant for any
given device. Consequently, if the (static) effect of the electro-
mechanical components were estimated ahead of time, say during
the initial conﬁguration, then the task of channel estimation at run-
time becomes much easier.
Training Phase. During initial conﬁguration as part of the train-
ing phase in JamSecure, the device transmits a library of PN se-
xmit, i = 1, . . . , M of length N samples each, with
quences P N i
each sequence being preceded by a preamble (a chirp, as discussed
in Section 5). The device also simultaneously records the received
versions of the corresponding PN sequences P N i
recv at the micro-
phone, using the preamble to determine the start of each received
PN sequence in the library. In the rest of the paper we shall refer to
M as the library size.
Generating the Jamming Signal.
In order to generate a jam-
ming signal, JamP N J
xmit for the J th transaction, the receiver
ﬁrst chooses a random subset of K PN sequences from the library,
P N nJ
i being the index of the ith randomly
chosen PN sequence among K. The mth sample of the jamming
sequence is generated as,
xmit,i = 1,··· ,K, nJ
i
JamP N J
xmit(m) =
1
K
P N nJ
i
xmit(m)
(4)
In the rest of the paper we shall refer to K as the mixing factor.
If the acoustic channel remained exactly the same for every trans-
action and there were no sampling offset errors (discussed in Sec-
tion 4), then based on the linearity of the channel, the received ver-
sion of this PN sequence can be written as,
i=K(cid:88)
i=1
i=K(cid:88)
i=1
JamP N J
recv(m) =
P N nJ
i
recv(m)
1
K
(5)
In practice, however, the received signal will be different from
Eqn 5, as the sampling offsets and preamble synchronization er-
rors are non-zero, and the multipath environment changes. Con-
sequently, as we discuss later in this section, JamSecure estimates
and compensates for these effects at runtime.
Choosing Library Size (M) and Mixing Factor (K). The key
objective of M and K is to thwart the eavesdropper from learn-
ing/predicting the PN sequence generated by the receiver. For ex-
ample, upon hearing the jamming sequence several times, an eaves-
dropper may learn the sequence accurately, and perform jamming
cancellation at its end. Given a large number of possible combina-
tions — M choose K — the eavesdropper receives a new sequence
each time and it becomes hard for it to learn this library of PN se-
quences. For example, if M = 1000 and K = 5, the number of
possible sequences increases to 1015. Thus, even for small values
69of K = 5, it becomes computationally intractable for the eaves-
dropper to learn the library of sequences and perform interference
cancellation. Further, the library could be refreshed periodically to
ensure that it cannot be learned even over a long period.
Dealing with sampling offset. As described in Section 4, a sam-
pling offset of ∆t introduces a phase error of 2πf ∆t at frequency
f. Consequently, compensating for sampling offset is equivalent
to shifting the phase of the frequency component corresponding to
f in the signal’s Fourier representation by 2πf ∆t. To achieve this
we ﬁrst compute the Fourier transform of the received sequence and
then shift each frequency component’s phase by multiplying with
the complex cosine ej2πf ∆t, f being the frequency. Finally, we
obtain the delayed version P N i
recv,∆t by taking an inverse Fourier
transform. This entire procedure can be written as,
1. Compute the N point Fourier Transform of P N i
recv, denoted
as Φi
recv.
2. Compute sampling offset version Φi
recv,∆t(f ) = Φi
ej2πf ∆t, here f is the frequency and spans from − Fs
Fs being the sampling rate.
recv(f )
2 to Fs
2 ,
3. Compute the N point Inverse Fourier Transform of Φi
recv,∆t
to obtain P N i
recv,∆t.
One challenge that remains is that the receiver does not know ∆t.
To address this problem, during pre-conﬁguration time, we also
pre-compute and store several phase-shifted versions P N i
recv,∆t
corresponding to 0 < ∆t < 1
. The best delayed version is then