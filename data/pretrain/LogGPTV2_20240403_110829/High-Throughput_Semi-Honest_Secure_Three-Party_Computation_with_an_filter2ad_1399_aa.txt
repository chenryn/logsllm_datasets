# High-Throughput Semi-Honest Secure Three-Party Computation with an Honest Majority

**Authors:**
- Toshinori Araki, NEC Corporation, Japan (PI:EMAIL)
- Jun Furukawa, NEC Corporation, Japan (PI:EMAIL)
- Yehuda Lindell, Bar-Ilan University, Israel (PI:EMAIL) (Supported by the European Research Council under the ERC Consolidators Grant Agreement n. 615172 (HIPS) and by the BIU Center for Research in Applied Cryptography and Cyber Security in conjunction with the Israel National Cyber Bureau in the Prime Ministerâ€™s Office)
- Ariel Nof, Bar-Ilan University, Israel (PI:EMAIL)
- Kazuma Ohara, NEC Corporation, Japan (PI:EMAIL)

## Abstract
This paper introduces a new information-theoretic protocol (and a computationally-secure variant) for secure three-party computation with an honest majority. The protocol is characterized by minimal computation and communication: each party sends only a single bit for every AND gate (and no bits for XOR gates). It is (simulation-based) secure against semi-honest adversaries and achieves privacy in the client/server model even in the presence of malicious adversaries.

Our implementation on a cluster of three 20-core servers with a 10Gbps connection achieves over 1.3 million AES computations per second, processing over 7 billion gates per second. Additionally, we developed a Kerberos extension that replaces the ticket-granting-ticket encryption on the Key Distribution Center (KDC) in MIT-Kerberos with our protocol, using shared keys/passwords between the servers. This extension supports over 35,000 logins per second, suitable for large organizations. Our work demonstrates the feasibility of high-throughput secure computation on standard hardware.

## Introduction

### 1.1 Background
In secure computation, multiple parties with private inputs aim to compute a joint function without revealing anything beyond the output. Protocols for secure computation ensure privacy (the protocol reveals nothing but the output), correctness (the correct function is computed), and other security guarantees, even in the presence of adversarial behavior. Two primary adversary models are considered: semi-honest (where the adversary follows the protocol but tries to learn more from the transcript) and malicious (where the adversary can execute any polynomial-time attack strategy).

Security in the information-theoretic model is unconditional, even against computationally unbounded adversaries, while in the computational model, security relies on cryptographic hardness assumptions. Despite stringent requirements, it has been shown that any polynomial-time functionality can be securely computed with both computational and information-theoretic security. However, an honest majority is necessary for information-theoretic security even against semi-honest adversaries.

There are two main approaches to secure computation: the secret-sharing approach, which involves interaction for each circuit gate, and the garbled-circuit approach, which constructs an encrypted version of the circuit. While the garbled-circuit approach offers constant-round protocols, making it suitable for high-latency networks, it incurs high bandwidth costs. Secret-sharing protocols, on the other hand, typically have low bandwidth and small messages per gate, but they require a number of rounds linear in the circuit depth.

### 1.2 Our Results
This paper focuses on achieving high-throughput secure computation on fast networks without special-purpose hardware. Our new three-party protocol is both extremely simple and has seemingly optimal bandwidth. For arithmetic circuits over any field or ring modulo \(2^n\), addition gates require local additions, and multiplication gates require each party to send just a single field/ring element to one other party. In the Boolean case, this translates to sending a single bit per AND gate.

We prove that our protocol is secure in the presence of semi-honest adversaries with at most one corrupted party, under standard simulation-based definitions. The protocol is information-theoretically secure, but we use computational methods to generate correlated randomness, making the overall protocol computationally secure. In a client/server model, our protocol achieves privacy even in the presence of malicious adversaries, ensuring that a single malicious server cannot learn about the input or output.

### 1.3 Experimental Results
We implemented our protocol in C++ and used Intel intrinsics for parallel execution. Experiments were conducted on a cluster of three nodes, each with two 10-core Intel Xeon (E5-2650 v3) processors and 128GB RAM, connected via a 10Gbps Ethernet. We achieved over 1.3 million AES operations per second using all cores, 100,000 AES operations per second using a single core, and almost 1 million AES operations per second using 10 cores.

We also integrated our protocol into a Kerberos KDC to perform Ticket-Granting-Ticket encryption, protecting against password theft. The latency was 110ms on the server and 232ms on the client, supporting over 35,000 user authentications per second, suitable for large organizations.

### 1.4 Related Work
We compare our results with previous work on secure AES computation for three parties with an honest majority and semi-honest adversaries. Our setup is similar to the latest Sharemind results, and we achieve a throughput 14 times faster than [22], with a latency of 70% of [23]. Even on a basic setup with a single core and a 1Gbps connection, we outperform the best Sharemind results.

| Year | Reference | Throughput (AES ops/sec) | Latency (ms) |
|------|-----------|--------------------------|--------------|
| 2010 | [Reference] | [Value] | [Value] |
| 2012 | [Reference] | [Value] | [Value] |
| 2013 | [Reference] | [Value] | [Value] |

Our results demonstrate the practicality of high-throughput secure computation for large-scale problems, at least for scenarios where semi-honest security or privacy for a malicious adversary is sufficient.