Type-A2 Attacker
PCFG Markov TarList TarPCFG TarMarkov
ϵ-FLATNESS INFO UNDER TYPE-A1 AND A2 ATTACKERS.y
Type-A1 Attacker
Increase
Method
List
0.356 0.490 0.395
127.2%
Tweak-tail
154.4%
Model-syntax 0.326 0.439 0.309
133.0%
0.346 0.478 0.364
Hybrid
Simple model 0.342 0.171 0.273
165.9%
yA value in bold means that the corresponding password model perform
the best among its attacker category. The “Increase” column is computed
by dividing the best-case value under a type-A2 attacker with that of a
type-A1 attacker, e.g., 127.2%=0.623/0.490.
0.502
0.495
0.506
0.505
0.623
0.679
0.636
0.384
0.580
0.597
0.596
0.568
attackers against Juels-Rivest’s methods. Within each subﬁg-
ure, it is evident that type-A2 attackers are substantially more
effective than type-A1 ones. More speciﬁcally, A can guess
57.6%∼96.2% more real passwords when T2=104, and achieve
27.2%∼65.9% more success rates (see Table X) in terms of
the ϵ-ﬂatness metric. Alarmingly, against every method in [21]
and based on some targeted-guessing password model, PII-
enriched A now can reach 56.8%∼67.9% of success rates
in telling apart the real password from 19 honeywords by
making just one online guess (see the point (x=1, y=0.5) in
Fig. 7(f)), while the claimed (desired) security is about 5%. In
all, honeyword methods that do not consider user PII cannot
withstand type-A2 attackers that exploit the victim’s PII.
Summary. We have evaluated Juels-Rivest’s four methods
under a type-A2 attacker, a powerful yet realistic attacker,
by employing three targeted password-cracking models. Our
results show that,
these four methods all perform poorly:
the real passwords can be distinguished with a success rate
of 56.8%∼67.9% with just one online guess when each
user account is associated with 19 honeywords, under the
assumption that A knows some of the victim’s common PII.
VI. POTENTIAL COUNTERMEASURES
Only when we know how to attack, can we know how
to protect. Our above attacking results highlight three key
contributions to harden the process of generating honeywords.
An impossibility result. As said in Sec. III-A, all Juels-
Rivest’s four methods essentially belong to the random re-
13
(a) Performance in approximating the top 1000 passwords.
(a) Success-number graph of the hybrid password- model based method.
(b) Performance in approximating the last 1000 passwords.
Fig. 8. An investigation of the pros and cons of different password models,
trained on 8.129M Dodonew-tr and tested on 8.129M Dodonew-ts.
placement based honeyword-generation approach: each hon-
eyword is generated by randomly replacing parts (or whole)
of the real password PWi. Let T (PWi) denote the sweetword
space resulted from PWi, and D denote the password space.
We have T (PWi)⊆ D. For instance, the tweak-tail method
implies T (123456) = {123t1t2t3|t1, t2, t3 ∈ {0, 1, . . . , 9}}.
Under the random-replacement approach, each of the k − 1
honeywords in the sweetword list SWi can be seen as randomly
drawn from T (PWi), and thus they each have the same
probability (i.e.,
|T (PWi)|) to be chosen as a honeyword. If
the real password PWi is also randomly drawn from T (PWi),
then the random-replacement approach will be perfect.
1
Fig. 9. Fitting Dodonew passwords by using the CDF-Zipf model [28]. The
probability of popular passwords decrease monotonically.
However, users generally do not randomly choose their real
passwords from T (PWi), but follow the highly skewed Zipf’s
law (see [28]) in D: pr = C · rs − C · (r − 1)s ≈ C · s · rs−1,
where pr denotes the probability of the rth popular password
in D, and s∈[0.15, 0.30] and C∈[0.001, 0.1] are constants
depending on D. It is easy to see that ∀x1, x2 ∈ T (PWi), if
x1, x2 ∈ SWi and Pr(x1) > Pr(x2), then x1 is more likely to
be the real password than x2. Both our “Top-PW” and “Norm
14
(b) Flatness graph of the hybrid password- model based method.
Fig. 10.
trained on 8.129M Dodonew-tr and tested on 8.129M Dodonew-ts.
Investigating the hybrid password model 1
3 List+ 1
3 Markov+ 1
3 PCFG,
Top-PW” attacking strategies tend to rank x1 higher than x2,
and thus will successfully pick x1 out earlier.
To resist such attacks, a honeyword method should ensure
that the elements in T (PWi) satisfy: ∀x1, x2 ∈ T (PWi),
Pr(x1) = Pr(x2). Unfortunately, the Zipf’s law reveals that
pr is a monotonically decreasing function with r, which is
particularly true for popular passwords (see Fig. 9 for a
concrete example). Thus, when given the real password PWi,
it is inherently difﬁcult to produce |T (PWi)| sweetwords with
the same probability of Pr(PWi). This indicates that random-
replacement methods (including Juels-Rivest’s) are impossible
to achieve expected security and cannot be easily remedied.
A counter-intuitive insight. The above impossibility result
suggests us to adopt the password model based approach.
However, in Sec. III-E we have demonstrated that, as opposed
to common belief (as hold in [21]), existing probabilistic pass-
word models cannot be readily used as honeyword generation
methods. Now we further investigate the underlying reason.
The goodness of a password model depends on how it
approximates user password behaviors. Fig. 8 shows that each
password model has its own weaknesses: (1) the List model is
good at approximating the probability of popular passwords,
yet worst at least popular passwords; (2) the PCFG model is
pretty good at approximating the probability of least-popular
passwords, yet worst at top popular passwords; and (3) The
Markov model lies between them.
A possible solution. The above ﬁndings naturally lead us to
propose a hybrid approach: combine varied password mod-
els to avoid individual defect. The key issue lies in how
to effectively combine them. We conduct a preliminary ex-
periment by using the simplest (i.e.,
linear) combination:
3PCFG. Though simple in its nature, the
3List+ 1
1
hybrid password model greatly improves security: only 1 time
more real passwords can be identiﬁed than the perfect method
3Markov+ 1
when T2=104 (i.e., 1113 vs 526, see Fig. 10(a)) and being
0.11-ﬂat (see Fig. 10(b)). This suggests a promising direction
for the research community. Also note that, if there exist more
effective attacking strategies, the hybrid password model might
be less secure than it currently appears, and thus developing
honeyword attacking theories is important future research.
VII. CONCLUSION
We have for the ﬁrst time empirically evaluated the four
primary honeyword-generation methods proposed by Juels and
Rivest at CCS’13, by using both trawling guessing attackers
with no user PII and targeted guessing attackers with some
common user PII. We showed that their methods all fail to
meet the expected security level by a large margin. We also
provided a negative answer to the open question of “can the
password models underlying cracking algorithms (e.g., [32])
be easily adapted for use?” left by Juels and Rivest.
We consider the value of our work mainly two-folds.
First, our work is the ﬁrst to give comprehensive, convincing
quantitative evidence of how vulnerable the state-of-the-art
honeyword-generation approaches are, highlighting the decep-
tively simple nature of honeyword research—it is not easy, but
a great challenge to automatically generate honeywords that
are hard to differentiate from real passwords. Second, as the
limitations of the four honeyword methods examined cannot be
readily addressed, our work calls for novel and creative efforts
to contribute to principled honeyword-generation approaches
that are signiﬁcantly better than the current heuristic approach-
es. Considering the prevalence and catastrophic impacts of
password-ﬁle leakage, we believe that achieving active and
timely compromise detection is of broad interest, and our work
constitutes an important step forward in this direction and will
trigger interest for new honeyword research.
ACKNOWLEDGMENT
The authors are grateful to the shepherd, Prof. Adam Aviv,
of our paper. We also thank the reviewers for their construc-
tive comments. Ping Wang is the corresponding author. This
research was supported by the National Natural Science Foun-
dation of China under Grants Nos. 61472016 and 61472083,
by the National Key Research and Development Plan under
Grants Nos. 2016YFB0800603 and 2017YFB1200700, and by
the Wallenberg Autonomous Systems and Software Program
(WASP) funded by the Knut and Alice Wallenberg Foundation.
REFERENCES
[1] S. Achappell, Turkey: personal data of 50 million citizens leaked
http://www.euronews.com/2016/04/06/turkey-
online, April
personal-data-of-50-million-citizens-leaked-online-hackers-claim.
2016,
[2] M. H. Almeshekah, C. N. Gutierrez, M. J. Atallah, and E. H. Spafford,
“Ersatzpasswords: Ending password cracking and detecting password
leakage,” in Proc. ACSAC 2015, pp. 311–320.
J. Blocki, S. Komanduri, L. Cranor, and A. Datta, “Spaced repetition
and mnemonics enable recall of multiple strong passwords,” in Proc.
NDSS 2015, pp. 1–15.
[3]
[5]
[4] H. Bojinov, E. Bursztein, X. Boyen, and D. Boneh, “Kamouﬂage: Loss-
resistant password management,” in Proc. ESORICS 2010, pp. 286–302.
J. Bonneau, “The science of guessing: Analyzing an anonymized corpus
of 70 million passwords,” in Proc. IEEE S&P 2012, pp. 538–552.
J. Bonneau, C. Herley, P. Oorschot, and F. Stajano, “The quest to
replace passwords: A framework for comparative evaluation of web
authentication schemes,” in Proc. IEEE S&P 2012, pp. 553–567.
[6]
[7]
J. Camenisch, A. Lehmann, and G. Neven, “Optimal distributed
password veriﬁcation,” in Proc. ACM CCS 2015, pp. 182–194.
[8] X. Carnavalet and M. Mannan, “From very weak to very strong:
Analyzing password-strength meters,” in Proc. NDSS 2014, pp. 1–16.
[9] C. Castelluccia, M. D¨urmuth, and D. Perito, “Adaptive password-
strength meters from markov models,” in Proc. NDSS 2012, pp. 1–15.
[10] N. Chakraborty and S. Mondal, “On designing a modiﬁed-UI
based honeyword generation approach for overcoming the existing
limitations,” Comput. Secur., vol. 66, pp. 155–168, 2017.
[11] M. D¨urmuth, D. Freeman, and B. Biggio, “Who are you? A statistical
approach to measuring user authenticity,” in NDSS 2016, pp. 1–15.
[12] M. D¨urmuth and T. Kranz, “On password guessing with GPUs and
FPGAs,” in Proc. Password 2014, pp. 19–38.
[13] V. Enterprise, 2016 Data Breach Investigations Report, May
http://www.verizonenterprise.com/resources/reports/rp
2017,
dbir-2016-executive-summary xg en.pdf.
I. Erguler, “Achieving ﬂatness: Selecting the honeywords from existing
user passwords,” IEEE Trans. Depend. Secur. Comput., vol. 13, no. 2,
pp. 284–295, 2016.
J. Goldberg, “Bcrypt is great, but is password cracking infeasible?” Mar.
2015, http://t.cn/RGYUtJO.
J. Goldman, Chinese Hackers Publish 20 Million Hotel Reservations,
Dec. 2013, http://bit.ly/2aVKyBw.
[14]
[15]
[16]
[17] M. Golla, B. Beuscher, and M. D¨urmuth, “On the security of cracking-
resistant password vaults,” in Proc. ACM CCS 2016, pp. 1230–1241.
[18] R. Hackett, Yahoo Raises Breach Estimate to Full 3 Billion Accounts,
By Far Biggest Known, Oct. 2017, http://fortune.com/2017/10/03/
yahoo-breach-mail/.
[19] V. Haran, Qatar National Bank Suffers Massive Breach, April 2016,
http://www.bankinfosecurity.com/qatar-national-bank-suffers-massive-
breach-a-9068.
[20] P. Heim, Resetting passwords
safe, Aug.
2016, https://blogs.dropbox.com/dropbox/2016/08/resetting-passwords-
to-keep-your-ﬁles-safe/.
to keep your ﬁles
[21] A. Juels and R. L. Rivest, “Honeywords: Making password-cracking
detectable,” in Proc. ACM CCS 2013, pp. 145–160.
[22] How Many Times Has Your Personal Information Been Exposed to
Hackers?, Sep. 2016, http://nyti.ms/1SdFv0s.
[23] R. W. Lai, C. Egger, D. Schr¨oder, and S. S. Chow, “Pheonix: Rebirth
of a cryptographic password-hardening service,” in Proc. Usenix SEC
2017, pp. 899–916.
J. Ma, W. Yang, M. Luo, and N. Li, “A study of probabilistic password
models,” in Proc. IEEE S&P 2014, pp. 689–704.
[24]
[25] Equifax Data Breach
2017,
equifax-data-breach-impacts-143-million-americans.
143 Million Americans, Sep.
https://www.forbes.com/sites/leemathews/2017/09/07/
Impacts
[26] T. Pham, Four Years Later, Anthem Breached Again: Hackers Stole
Credentials, Feb. 2015, http://duo.sc/2ene0Pr.
[27] S. Ragan, Weebly data breach affects 43 million customers, Oct. 2016,
http://bit.ly/2kP4EA2.
[28] D. Wang, H. Cheng, P. Wang, X. Huang, and G. Jian, “Zipf’s law in
passwords,” IEEE Trans. Inform. Foren. Secur., vol. 12, no. 11, pp.
2776–2791, 2017.
[29] D. Wang and P. Wang, “Two birds with one stone: Two-factor
authentication with security beyond conventional bound,” IEEE Trans.
Depend. Secur. Comput, 2016, Doi:10.1109/TDSC.2016.2605087.
[30] D. Wang, Z. Zhang, P. Wang, J. Yan, and X. Huang, “Targeted online
password guessing: An underestimated threat,” in Proc. ACM CCS 2016,
pp. 1242–1254.
[31] C. Weir, Cracking the MySpace List–First Impressions, July 2016,
http://reusablesec.blogspot.com/2016/07/cracking-myspace-list-ﬁrst-
impressions.html.
[32] M. Weir, S. Aggarwal, B. de Medeiros, and B. Glodek, “Password
cracking using probabilistic context-free grammars,” in Proc. IEEE S&P
2009, pp. 391–405.
[33] B. B. Zhu, J. Yan, D. Wei, and M. Yang, “Security analyses of click-
based graphical passwords via image point memorability,” in Proc. ACM
CCS 2014, pp. 1217–1231.
15