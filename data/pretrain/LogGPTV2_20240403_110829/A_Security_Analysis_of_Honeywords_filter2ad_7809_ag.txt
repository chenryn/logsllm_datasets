# Type-A2 Attacker Analysis and Honeyword Security Evaluation

## Introduction
This document evaluates the security of Juels-Rivest’s honeyword-generation methods under both trawling and targeted guessing attacks. Specifically, we focus on the performance of these methods against a type-A2 attacker, who has access to some common personally identifiable information (PII) of the victim.

## Attackers and Methods
- **Type-A2 Attacker**: This attacker has access to some PII, making them more effective than a type-A1 attacker.
- **Type-A1 Attacker**: This attacker does not have access to any PII.

### Metrics
- **PCFG Markov TarList TarPCFG TarMarkov**
- **ϵ-FLATNESS INFO**: A measure of how well the attacker can distinguish real passwords from honeywords.

### Performance Comparison
- **Increase**: The percentage increase in the number of correctly guessed passwords by a type-A2 attacker compared to a type-A1 attacker.
- **Method**: Different password models and techniques used.

| Method | PCFG | Markov | TarList | TarPCFG | TarMarkov | Increase |
|--------|------|--------|---------|---------|-----------|----------|
| List   | 0.356 | 0.490 | 0.395   | 0.356   | 0.490     | 127.2%   |
| Tweak-tail | 0.326 | 0.439 | 0.309   | 0.326   | 0.439     | 154.4%   |
| Model-syntax | 0.346 | 0.478 | 0.364   | 0.346   | 0.478     | 133.0%   |
| Hybrid | 0.342 | 0.171 | 0.273   | 0.342   | 0.171     | 165.9%   |

**Note**: The "Increase" column is calculated by dividing the best-case value under a type-A2 attacker by that of a type-A1 attacker, e.g., 127.2% = 0.623 / 0.490.

### Results
- **Success Rates**: Type-A2 attackers are significantly more effective than type-A1 attackers, achieving 57.6% to 96.2% more successful guesses when \( T_2 = 10^4 \).
- **ϵ-Flatness Metric**: Type-A2 attackers achieve 27.2% to 65.9% higher success rates.
- **One-Guess Success Rate**: Against every method, a PII-enriched attacker can reach 56.8% to 67.9% success rates in distinguishing real passwords from 19 honeywords with just one online guess.

## Summary
- **Juels-Rivest’s Methods**: All four methods perform poorly under a type-A2 attacker, with real passwords being distinguished at a success rate of 56.8% to 67.9% with just one online guess.
- **Security Implications**: Honeyword methods that do not consider user PII cannot withstand type-A2 attackers.

## Potential Countermeasures
### Impossibility Result
- **Random Replacement Approach**: Juels-Rivest’s methods generate honeywords by randomly replacing parts of the real password. However, this approach fails because users do not choose their passwords randomly, but follow Zipf's law, leading to a skewed distribution of password probabilities.

### Counter-Intuitive Insight
- **Password Model Based Approach**: Existing probabilistic password models cannot be directly used for honeyword generation due to their inherent weaknesses in approximating user password behaviors.

### Possible Solution
- **Hybrid Approach**: Combining different password models (e.g., List, Markov, PCFG) can mitigate individual model weaknesses. A preliminary experiment using a simple linear combination (1/3 List + 1/3 Markov + 1/3 PCFG) showed improved security, identifying only 1 time more real passwords than the perfect method when \( T_2 = 10^4 \).

## Conclusion
- **Empirical Evaluation**: We evaluated the four primary honeyword-generation methods proposed by Juels and Rivest, showing that they fail to meet the expected security level.
- **Future Research**: Developing more effective honeyword generation approaches and understanding the limitations of current methods is crucial for improving password security.

## Acknowledgments
- **Support**: This research was supported by various grants and foundations, including the National Natural Science Foundation of China and the Wallenberg Autonomous Systems and Software Program (WASP).

## References
- [References listed as in the original text]

---

This revised version aims to provide a clearer, more structured, and professional presentation of the original content.