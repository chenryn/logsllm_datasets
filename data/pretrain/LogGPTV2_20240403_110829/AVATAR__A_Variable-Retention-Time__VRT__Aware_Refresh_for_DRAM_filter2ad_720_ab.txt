d
e
80
60
40
20
0
RowID
(a)
Fig. 3. Multirate Refresh (a) Implementation with an RRT (b) Effectiveness
at reducing refresh.
2) Effectiveness: The effectiveness of multirate refresh at
saving refresh operations depends on the rate of Fast and
Slow Refresh. For a slow refresh rate that is 4x-8x lower
than a fast refresh rate, only a small fraction of DRAM
rows end up using fast refresh rates. For example, for our
studies with 8GB DIMMs and a slow refresh rate that is ﬁve
times slower than a fast refresh rate, 10% of the rows get
classiﬁed to use Fast Refresh. Figure 3(b) shows the reduction
in refresh operations compared to always using Fast Refresh,
when a given percentage of memory rows use Fast Refresh. We
analyze two different rates of Slow Refresh, 4X and 8X lower
than that of Fast Refresh. Even with 10% of the rows using Fast
Refresh, the total refresh savings with multirate refresh range
from 67% to 78%. Thus, multirate refresh is highly effective
at reducing refresh operations.
D. The Problem: Retention Time Varies Dynamically
The key assumption in multirate refresh is that the retention
time proﬁle of DRAM cells does not change at runtime.
Therefore, a row classiﬁed to use Slow Refresh continue to
have all the cells at higher retention time than the period of
the Fast Refresh. Unfortunately, the retention time of DRAM
cells can change randomly at runtime due to a phenomenon
called Variable Retention Time (VRT) [45]. VRT can cause
a cell to randomly ﬂip from a high retention state to a low
retention state, thus causing data errors with multirate refresh.
The existence of VRT makes it challenging to use multirate
refresh schemes reliably. The next section provides insights
into how VRT impacts multirate refresh.
3The storage for tracking the refresh rate can be reduced if the number of
rows that need Fast Refresh is very small. For example, RAIDR [28] employs
Bloom ﬁlters for tracking 1000 weak rows for a memory with one million
rows (i.e., 0.1% of total rows). It can be shown that Bloom ﬁlters become
ineffective at reducing storage when the number of weak rows become a
few percent of total rows. For our target refresh rate, 10% or more rows get
classiﬁed for using Fast Refresh, therefore we use an RRT with one bit per
row. The SRAM overhead of RRT can be avoided by storing the RRT in
a reserved area of DRAM (128KB for 8GB is 0.0015% of memory space).
While refresh decisions for the current RRT line (512 rows) get used, the next
RRT line can be prefetched from DRAM to hide latency of RRT lookup. The
RRT in DRAM can be replicated three times (while incurring a total storage
overhead of only 0.005%) for tolerating VRT related errors in the RRT.
III. VARIABLE RETENTION TIME
VRT causes a DRAM cell to change its retention charac-
teristics. A cell with VRT exhibits multiple retention states
and transitions to these states at different points of time in an
unpredictable fashion [29, 45]. As a result, the same cell can
fail or pass at a given refresh rate, depending on its current
retention time. Although VRT only affects a very small fraction
of cells at any given time, the retention time change of even a
single cell can be sufﬁcient to cause data errors in a memory
system that employs multirate refresh. We explain the reasons
behind VRT and then characterize the behavior of VRT cells.
VRT phenomenon in DRAM was reported in 1987 [45].
The physical phenomenon behind the VRT cells is attributed
to the ﬂuctuations in the gate induced drain leakage (GIDL)
current in the DRAM cells. Prior works suggest that presence
of traps near the gate region causes these ﬂuctuations. A trap
can get occupied randomly, causing an increase in the leakage
current. As a result, the cell leaks faster and exhibits lower
retention time. However, when the trap becomes empty again,
the leakage current reduces, resulting in a higher retention
time [7, 20]. Depending on the amount of the leakage current,
VRT cells exhibit different retention times. VRT can also occur
due to external inﬂuences such as high temperature during
the packaging process or mechanical or electrical stress. It
is hard for manufacturers to proﬁle or screen such bits since
VRT can occur beyond post-packaging testing process [7, 33].
Recent experimental studies [19, 29] showed that the VRT
phenomenon is ubiquitous in modern DRAM cells. Future
memory systems are expected to suffer even more severe VRT
problems [18]. They are likely to apply higher electrical ﬁeld
intensity between the gate and the drain, which increases the
possibility of charge traps that may cause VRT bits. A recent
paper [18] from Samsung and Intel identiﬁes VRT as one of
the biggest challenge in scaling DRAM to smaller technology
nodes.
B. Not All VRT is Harmful
Not all changes in retention time due to VRT cause a
data error under multirate refresh. For example, VRT can also
cause the retention time of a cell to increase, which makes the
cell more robust against retention failures. Figure 4 shows the
relationship between the refresh interval and variable retention
times.
a
c
b
d
Region B
Region C
Region A
0
64
Retention time (ms)
320
Fig. 4. VRT can cause a data error only when a cell moves from a high-
retention region to a low-retention region.
We assume that the system performs refresh at two rates:
64ms (Fast Refresh) and 320ms (Slow Refresh). The vertical
lines at 64ms and 320ms divide the ﬁgure into three regions.
Transitions within a region (exempliﬁed by cells a and b),
429429
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:50 UTC from IEEE Xplore.  Restrictions apply. 
and transitions from region B to region C (exempliﬁed by cell
c) cause no data failure. A multirate refresh mechanism is
vulnerable to random VRT failures only when a cell moves
from region C to region B (exempliﬁed by cell d). In our
studies, we identify only such cells as exhibiting VRT.
C. Experimental Setup
To understand the impact of VRT, we test the effect of
the extended refresh interval on cells in commercial DRAM
chips. We use an FPGA-based infrastructure [19, 24, 25, 29],
consisting of an ML605 FPGA development board and modify
the RTL to increase the refresh interval at a temperature
controlled environment. Our experiments are done at a refresh
interval of 4 seconds at 45 ◦C, which corresponds to 328ms
at 85 ◦C (similar assumptions on temperature based scaling of
retention time were made in prior DRAM studies [19,29]). Our
experimental temperature closely matches to typical operating
temperature as prior works show that even with 100% utiliza-
tion, temperature in server and desktop systems remain in the
range of 40−60 ◦C [9,25]. We study a multirate refresh scheme
that employs a Slow Refresh at a refresh period of 320ms
which is very close to our tested retention time of 328ms.
We conduct our experiments with three 2GB DIMMs (A,
B, and C), each from a different DRAM vendor. Each module
consists of 8 DRAM chips. To locate the VRT failures, we
write speciﬁc test patterns in the entire module, increase the
refresh interval, and read the contents after all rows have been
refreshed at the extended interval. Any mismatch in the content
implies a retention error at that location during the given time
period. We log the statistics of retention failures once every one
minute and perform the experiment for a period of 7 days. To
keep the analysis tractable, we present statistics for an interval
of every 15 minutes (a total of 4 x 24 hours x 7 days = 672
periods, of 15 minutes each).
D. Observation 1: Population of Weak Cells Increases
We ﬁrst study the impact of VRT on multirate refresh.
In our studies, a cell
that has never caused failure with
the Slow Refresh rate is deemed as a strong cell, whereas
a cell that encountered at least one failure due to VRT is
deemed as a weak cell. Figure 5 shows the number of unique
weak cells and weak rows. A row is classiﬁed as a weak
row if it contains at least one weak cell. There are three
important implications derived from Figure 5, consistent with
prior studies [19,39]. The ﬁrst is that the number of weak cells
in the ﬁrst time period is quite large (27841 for A, 24503 for
B, and 22414 for C) [19]. Thus, fortunately the initial testing
that multirate refresh deploys identiﬁes a majority of the weak
cells. Multirate refresh enforces the rows containing these
weak cells to always use Fast Refresh. The 2GB DIMMs in
our experiments have 256K rows (each 8KB). Thus, multirate
refresh assigns approximately 9%-10% of the total memory
rows to Fast Refresh. For the remainder of our studies, we
assume that the weak rows identiﬁed during the initial testing
are always refreshed with Fast Refresh. So, we exclude these
rows from the rest of our analysis. The second implication
of Figure 5 is that the number of weak rows is very close
to the number of weak cells, which implies that the weak
cells are randomly scattered throughout the memory4 [39].
This observation can help us assume a random distribution for
VRT cells and develop models for analyzing their behavior
on longer time scales than possible with experiments. The
third implication is that initial testing (or testing alone) is not
sufﬁcient to identify all weak cells [19]. Even after several
days, VRT causes new bits to have retention failures. For
example, for module A, the number of weak cells increases
from 27841 in the ﬁrst time period to 31798 in the last time
period. The consistency of our results with prior works [19,39]
attests to the soundness of our infrastructure, validating the
new observations we make in our studies.
s
w
o
R
r
o
s
t
i
B
k
a
e
W
e
u
q
n
U
i
.
m
u
N
32000
31000
30000
29000
28000
27000
26000
25000
24000
23000
22000
21000
A-WeakBits 
A-WeakRows 
B-WeakBits 
B-WeakRows 
C-WeakBits 
C-WeakRows 
Initial Testing
0
100
200
300
Num Time Periods (15 min each, 7 days total)
400
500
600
700
Fig. 5. The cumulative number of unique weak cells and weak rows for the
three modules (A, B, and C). Even after several hours of testing, VRT causes
new (previously unidentiﬁed) bits to cause retention failures.
E. Observation 2: VRT Cells Can Switch Randomly
The fact that a cell enters a low retention state due to
VRT does not mean that the cell continues to be in the low
retention state indeﬁnitely. Figure 6 shows the behavior of two
typical VRT cells for every tested time period. We deem the
cell to pass if it has a retention time greater than 328ms and
to fail otherwise. Cell X transitions randomly and frequently
between high and low retention states. However, some other
cell affected by VRT (say cell Y) may continue to stay in the
same retention state for several hours or days, before moving
to another retention state.
In general, any cell in the DRAM
Fig. 6. A VRT cell can randomly and frequently transition between high and
low retention states.
array can experience VRT. However, in practice, only a very
small fraction of DRAM cells change their retention time at
4Multiple weak cells may still map to the same row, albeit with a small
probability. The number of weak rows obtained experimentally closely follows
that of a statistical random mapping of weak bits to rows, indicating VRT cells
are randomly scattered in memory.
430430
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:13:50 UTC from IEEE Xplore.  Restrictions apply. 
Module A
 2400
 1800
 1200
 600
l
o
o
P
T
R
V
-
e
v
i
t
c
A
f
o
e
z
i
S
Module B
 2400
 1800
 1200
 600
l
o
o
P
T
R
V
-
e
v
i
t
c
A
f
o
e
z
i
S
 2400
 1800
 1200
 600
l
o
o
P
T
R
V
-
e
v
i
t
c
A
f
o
e
z
i
S
Module C
 0
 0
 100  200  300  400  500  600  700
Num Time Periods (15 min each, 7 days total)
 0
 0
 100  200  300  400  500  600  700
Num Time Periods (15 min each, 7 days total)
 0
 0
 100  200  300  400  500  600  700
Num Time Periods (15 min each, 7 days total)
Fig. 7. The size of the Active-VRT Pool for each time period for each of the three modules.
any given time period. We deﬁne the cell that causes an error in
a given time period as an Active-VRT cell. If a cell has caused
a VRT-related error in any of the previous time periods but not
the current time period, it is deemed to be a Dormant-VRT cell.
F. Observation 3: Size of the Active-VRT Pool Varies
Given that a cell affected by VRT can switch between being
an Active-VRT cell and being a Dormant-VRT cell, we would
expect that the total number of Active-VRT cells within a given
time period to be smaller than the number of unique weak
cells encountered since initial testing. We call the group of all
cells that are Active-VRT cells within a given time period as
forming an Active-VRT Pool (AVP). Figure 7 shows the size
of the AVP for each of the 15-minute time periods in our
experiments.
The size of the AVP varies dynamically for all modules
across the time periods. The average size of the AVP for
module A is 347 (standard deviation, or σ, of 288), for module
B is 492 (σ of 433), and for module C is 388 (σ of 287).
Since predicting the exact size of the AVP is difﬁcult, our
experimental data can help us develop models for capturing
the size of the AVP as a means of analyzing the behavior of
VRT cells.
G. Modeling the Dynamic Size of Active-VRT Pool
We observe that the size of the AVP tends to follow a
lognormal distribution. Figure 8, obtained experimentally from