ne and ˆknw = ¯k
(cid:17)
(cid:17)
(cid:16)
view(r)S
c≈ ¯S2
1λ, view(0:r−1)
S
, ¯κdir, aﬃne, Cunblind, Cunblind(¯x)
By deﬁnition, vr is the node in direction dir with respect to vr−1, so
¯κdir = Enc(¯kdir, ¯k(r+1)
src,vdir
) = Enc(¯kdir, ¯k(r+1)
src,vr ).
.
(8)
(9)
Since for all v ∈ [n], the simulator chooses ¯k(r+1)
src,v uniformly and independently (of all other quantities),
we conclude from the characterization in Eq. (8) and (9) that for all nodes v (cid:54)= vr, the conditional
distribution of ¯k(r+1)
is computationally indistinguishable from uniform. The ﬁrst
condition follows.
src,v given view(0:r)S
• Suppose Cunblind(¯x) = ⊥. Using an argument similar to that made for the previous case, the condi-
tional distribution of the direction keys ¯kn, ¯ke, ¯ks, ¯kw given view(0:r)S
is computationally indistinguish-
able from uniform. By semantic security of (Enc, Dec), we conclude that the adversary’s view can be
entirely simulated independently of ¯k(r+1)
src,v
for all v ∈ [n]. Once again, the ﬁrst condition holds.
To conclude the proof, we note that in the characterization from Eq. (7), all quantities in view(r)S are inde-
pendent of ¯kdst,v for v (cid:54)= t. Thus, if the conditional distribution of ¯kdst,v given view(0:r−1)
is computationally
indistinguishable from the uniform distribution, then the corresponding condition continues to hold at the
end of round r.
S
With this preparation, we now argue inductively that view(0:R)
real
c≈ view(0:R)
S
. We begin with the base case.
35
Claim A.10. Let s, t ∈ [n] be the indices of the source and destination nodes, respectively, that the client
submits to the OT oracle in the setup phase of the protocol. The following conditions hold at the end of
the setup phase of the protocol:
• The simulator perfectly simulates the view of the A: view(0)
• For all nodes v (cid:54)= s, the conditional distributions k(1)
real ≡ view(0)S .
src,v given view(0)
real, and ¯k(1)
src,v given view(0)S are both
uniform.
• For all nodes v (cid:54)= t, the conditional distributions kdst,v given view(0)
real and ¯kdst,v given view(0)S are both
uniform.
Proof. We consider each claim separately:
• In the real scheme, k(1)
src,s, kdst,t are chosen uniformly and independently from {0, 1}(cid:96). The same is true
src,s, ¯kdst,t),
src,s, ¯kdst,t in the simulation. Since view(0)
src,s, kdst,t) and view(0)S = (¯k(1)
real = (k(1)
of the keys ¯k(1)
we conclude that view(0)
real ≡ view(0)S .
• In the real protocol (resp., the simulation), for all v ∈ [n], the encryption key k(1)
src,v)
is chosen uniformly and independently of all other quantities in the protocol. Thus, for v (cid:54)= s, the
distribution of k(1)
src,v is
independent of view(0)S . The claim follows.
src,s, kdst,t). Similarly, the distribution of ¯k(1)
src,v is independent of view(0)
src,v (resp., ¯k(1)
real = (k(1)
• Similar to the previous statement, for all v ∈ [n], the encryption keys kdst,v and ¯kdst,v are chosen
uniformly and independently of all other quantities in the protocol, which proves the claim.
Claim A.11. Fix 0 < r < R. Suppose the following conditions hold in round r:
• The view view(0:r−1)
able from the view view(0:r−1)
real
S
of the adversary interacting in the real protocol is computationally indistinguish-
of the adversary interacting with the simulator.
• For all nodes v ∈ [n], the conditional distribution of k(r)
is computationally indis-
tinguishable from the uniform distribution over {0, 1}(cid:96) if and only if the conditional distribution of
src,v given view(0:r−1)
is computationally indistinguishable from the uniform distribution over {0, 1}(cid:96).
¯k(r)
src,v given view(0:r−1)
real
S
• For all nodes v ∈ [n], the conditional distribution of kdst,v given view(0:r−1)
is computationally indis-
tinguishable from the uniform distribution over {0, 1}(cid:96) if and only if the conditional distribution of
¯kdst,v given view(0:r−1)
is computationally indistinguishable from the uniform distribution over {0, 1}(cid:96).
real
S
Then, the conditions also hold in round r + 1.
Proof. Let s, t ∈ [n] be the source and destination nodes the client submits to the OT oracle in the setup
phase of the protocol, and let (s = v0, . . . , vR) be the path the simulator receives from the trusted party.
Consider the view of A in the simulation. By Claim A.10, for all v (cid:54)= s, the conditional distribution
is uniform. Similarly, for all v (cid:54)= t, the conditional distribution of the
of the keys ¯k(1)
keys ¯kdst,v given view(0)S
is uniform. By iteratively applying Lemma A.9, we conclude that for all nodes
v (cid:54)= vr−1, the conditional distribution of ¯k(r)
is computationally indistinguishable from
uniform. Similarly, for all v (cid:54)= t, the conditional distribution of ¯kdst,t given view(0:r−1)
is computationally
indistinguishable from uniform.
src,v given view(0:r−1)
src,v given view(0)S
S
S
36
real
Invoking the inductive hypothesis, we have that for all nodes v (cid:54)= vr−1, the conditional distribution of
src,v given view(0:r−1)
is computationally indistinguishable from uniform. Similarly, for all nodes v (cid:54)= t,
k(r)
the conditional distribution of kdst,v given view(0:r−1)
is computationally indistinguishable from uniform.
c≈ (PIRsrc, PIRdst). The client’s view in the PIR protocol
We now show that on round r, (PIRsrc, PIRdst)
can be regarded as a (possibly randomized) function of the client’s view in the ﬁrst r − 1 rounds of
the protocol and the server’s input database D. Since view(0:r−1)
, it suﬃces to argue that
real
the conditional distribution of (Dsrc,Ddst) given view(0:r−1)
is computationally indistinguishable from the
conditional distribution of (Dsrc,Ddst) given view(0:r−1)
c≈ view(0:r−1)
real
.
real
S
For notational convenience, let u = vr−1. We use a hybrid argument. We deﬁne the following hybrid
S
experiments:
• Hybrid H0 is the real game where the server prepares Dsrc and Ddst as described in Figure 3.
• Hybrid H1 is identical to H0, except the server substitutes an encryption of the all-zeroes string under
src,v for all records v (cid:54)= u in Dsrc.
k(r)
• Hybrid H2 is identical to H1, except the server substitutes an encryption of the all-zeroes string under
kdst,v for all records v (cid:54)= t in Ddst.
real
real
src,v given view(0:r−1)
Since for all v (cid:54)= u, the conditional distribution of k(r)
is computationally indistinguish-
able from uniform, we can appeal to the semantic security of (Enc, Dec) to conclude that hybrid experiments
H0 and H1 are computationally indistinguishable. Similarly, since for all v (cid:54)= t, the conditional distribution
of kdst,v given view(0:r−1)
is computationally indistinguishable from uniform, we have that H1 and H2 are
computationally indistinguishable.
We now show that the joint distribution of (Dsrc,Ddst) in H2 is computationally indistinguishable from
the joint distribution of (Dsrc,Ddst) in the simulation. In H2, every record v (cid:54)= u in Dsrc is an encryption
of the all-zeroes string under a key k(r)
src,v that is computationally indistinguishable from uniform given the
adversary’s view of the protocol thus far; the same is true in the simulation. Similarly, every record v (cid:54)= t in
Ddst is an encryption of the all-zeroes string under a key kdst,v that looks computationally indistinguishable
from uniform to the adversary. This is the case in the simulation. Let rsrc,u be the uth record in Dsrc and
let rdst,t be the tth record in Ddst. Similarly, let ¯rsrc,u be the uth record in Dsrc and let ¯rdst,t be the tth record
in Ddst. It suﬃces now to show that (rsrc,u, rdst,t) is computationally indistinguishable from (¯rsrc,u, ¯rdst,t).
In the real scheme, the record rsrc,u contains the following components:
• Arithmetic circuit encodings ˜Laﬃne
• Garbled circuit encodings ˜Lunblind
• Encryptions κn, κe, κs, κw of the source keys for the neighbors of u in the next round of the protocol
(u) for the source u.
) for the source u.
ne,x (A(ne)
), ˜Laﬃne
nw,x (A(nw)
u
u
s
under the direction keys kn, ke, ks, kw:
κn = Enc(kn, k(r+1)
src,vn ),
κe = Enc(ke, k(r+1)
src,ve ),
κs = Enc(ks, k(r+1)
src,vs ),
κw = Enc(kw, k(r+1)
src,vw),
where vn, ve, vs, vw is the neighbor of u in G to the north, east, south, or west, respectively. If u does
not have a neighbor in a given direction dir ∈ {n, e, s, w}, then k(r+1)
src,vdir = {0, 1}(cid:96).
The record rdst,t contains the following components:
• Arithmetic circuit encodings ˜Laﬃne
ne,y (B(ne)
t
), ˜Laﬃne
nw,y (B(nw)
t
) for the destination t.
37
• Garbled circuit encodings ˜Lunblind
t
(t) for the destination t.
In the real protocol, the arithmetic circuit encodings are constructed independently of the garbled circuit
for the neighbor-computation function. The neighbor keys kdir for dir ∈ {n, e, s, w} and source keys k(r+1)
src,vdir
for the subsequent round of the protocol are also generated independently of both the arithmetic circuit
encodings and the garbled circuit. Thus, the joint distribution decomposes into three product distributions
over the arithmetic circuit encodings, the garbled circuit encodings, and the encryptions of the source keys
for the next round. We reason about each distribution separately:
• The simulator constructs the garbled circuit for the neighbor-computation function exactly as in
the real scheme. Thus, the garbled circuit encodings in rsrc,u, ¯rsrc,u and rdst,t, ¯rdst,t are identically
distributed.
• The neighbor keys ¯kdir for dir ∈ {n, e, s, w} in the simulation are generated exactly as the keys kdir
in the real scheme.
• In the real scheme, the aﬃne encodings ˜Laﬃne
) evaluate to
ne,x (A(ne)
zne = αne(cid:104)A(ne)
) and ˜Laﬃne
(cid:105) + βne,
, B(ne)
u
ne,y (B(ne)
t
u
t
where αne is uniform in F∗
p and βne is uniform in Fp. In particular, this means that zne is distributed
uniformly over Fp. This is precisely the same distribution from which the simulator samples ¯zne.
Together with Lemma A.6, we conclude that
Sac(¯zne) ≡ Sac(zne) ≡ ( ˜Laﬃne
ne,x (A(ne)
u
), ˜Laﬃne
ne,y (B(ne)
t
)).
An analogous argument shows that
Sac(¯znw) ≡ Sac(znw) ≡ ( ˜Laﬃne
nw,x (A(nw)
u
), ˜Laﬃne
nw,y (B(nw)
t
)),
where znw = αnw(cid:104)A(nw)
tically distributed in both the real scheme and the simulation.
, B(nw)
(cid:105) + βnw. We conclude that the arithmetic circuit encodings are iden-
u
t
We conclude that (rsrc,u, rdst,t) ≡ (¯rsrc,u, ¯rdst,t), and correspondingly, (Dsrc,Ddst)
c≈ (Dsrc,Ddst). In the real
protocol, the client’s view PIRsrc, PIRdst in the PIR protocols can be expressed as an eﬃciently-computable
and possibly randomized function f of its view view(0:r−1)
in the ﬁrst r − 1 rounds of the protocol and the
server’s databases Dsrc,Ddst:
real
(PIRsrc, PIRdst) ≡ f (view(0:r−1)
real
, rsrc,u, rdst,t).
In the simulation, the simulator synthesizes databases Dsrc,Ddst, and then plays the role of the server in
the PIR protocol. Thus, we have that
(PIRsrc, PIRdst) ≡ f (view(0:r−1)
S