# Title: PrivDPI: Privacy-Preserving Encrypted Traffic Inspection with Reusable Obfuscated Rules

## Authors:
- Jianting Ning
- Geong Sen Poh
- Jia-Ch'n Loh
- Jason Chia
- Ee-Chien Chang

### Abstract
Traffic inspection is a fundamental component of many security solutions, such as preventing the exfiltration of confidential information and blocking malicious traffic. However, current inspection systems often fail to balance the interests of different stakeholders, including the need for confidentiality and privacy. For instance, employees or third-party network managers may require that their traffic remains confidential, even from system administrators. Additionally, the rules used by intrusion detection systems (IDS) and other anomaly detection engines can be critical business assets that should remain confidential.

In this paper, we introduce Privacy-Preserving Inspection (PRI), a novel approach that addresses these challenges. PRI ensures the privacy of inspected traffic and the confidentiality of inspection rules and configurations. It also supports the flexible installation of additional Data Leak Prevention (DLP) rules specific to the organization.

## 1. Introduction
The Internet has become an indispensable infrastructure for many organizations, but it also poses significant security threats. Web-based services, such as email, are essential for communication but can introduce risks like data exfiltration. Intrusion Detection Systems (IDS) and Intrusion Prevention Systems (IPS) are commonly used to defend networks against cyber attacks. These systems can prevent the exfiltration of confidential information and detect inbound malicious traffic.

To provide this functionality, IDS/IPS systems rely on traffic inspection, using configuration rules to match known attack patterns, indicators, or traffic anomalies. If a rule is matched, alerts are generated, and packets may be dropped. These rules can be provided by local support teams, third parties, or a combination of both.

While current IDS/IPS systems perform well for unencrypted traffic, they struggle with encrypted traffic, leading to false negatives or poor performance. A common workaround is to terminate the secure channel at a proxy, which can be seen as a "man-in-the-middle" attack and undermines user privacy. This approach has been criticized, especially in contexts where users' private data could be exposed to marketers.

Privacy-preserving intrusion detection is not only desirable in enterprise networks but is also becoming increasingly important as more organizations outsource network management to third parties. In such cases, it is crucial to preserve the privacy of the traffic, particularly for security-critical businesses like banks.

We also identify another confidentiality issue: the protection of the inspection logic itself. Third-party companies that specialize in security research may not want to share their rules and configurations, as these are valuable intellectual property. This introduces a new requirement: the need to keep these rules confidential while still allowing effective traffic inspection.

At first glance, these requirements seem contradictory. An efficient and effective inspection system might need to inspect traffic in an unencrypted form, potentially leaking information. Additionally, a system administrator operating a system based on third-party rules might see those rules.

### 1.1 Contribution
We identify the different roles involved in a traffic inspection system, including IDS/IPS and more sophisticated online or offline anomaly detection systems. We then explore the feasibility of providing a system that meets the requirements of these stakeholders without introducing new threats.

We present Privacy-Preserving Intrusion Detection/Prevention System (PRI), which decouples the different roles and significantly reduces the required trust assumptions. PRI leverages hardware protection mechanisms like Intel SGX to defend against insiders or system administrators. A key feature of PRI is its simple and cost-effective deployment, requiring only a single trusted hardware component and a simple software update on the user side.

### 1.2 Paper Organization
The remainder of this paper is organized as follows:
- **Section II**: Identifies the different roles and their requirements.
- **Section III**: Provides the necessary background on traffic inspection systems and Intel SGX.
- **Section IV**: Describes the proposed architecture of PRI.
- **Section V**: Discusses use cases.
- **Section VI**: Reviews related work.
- **Section VII**: Concludes our contribution.
- A small demo of our system is available online at [https://www.youtube.com/watch?v=b54unY8iGs0](https://www.youtube.com/watch?v=b54unY8iGs0).

## 2. Roles and Requirements
We distinguish between the following roles:
- **Administrators**: Responsible for ensuring the availability and security of the network, preventing the leakage of sensitive insider information, and blocking malicious traffic. They may also add their own DLP rules.
- **Users**: Communication endpoints who benefit from a secure environment but also desire high communication performance and confidentiality of their traffic.
- **Rules (Configuration) Provider**: An external security company that provides high-quality rules and desires to keep them confidential.

Based on these roles, we identify the following requirements:
- **R1**: Efficient and effective inspection.
- **R2**: Privacy-preserving traffic inspection.
- **R3**: Confidentiality of rules.

Current proxy solutions do not meet R2 and R3, as a proxy server can be exploited by administrators to learn about unencrypted traffic. Cryptographic schemes based on fully homomorphic or functional encryption are slow and decrease network rates, violating R1.

At first glance, these requirements seem contradictory. However, as we will show, there are solutions that can satisfy these seemingly conflicting properties.

## 3. Background
Before presenting our solution, we provide some background on traffic inspection systems and Intel SGX.

### 3.1 Traffic Inspection Systems
Almost all cyber security breaches involve transmissions over a network. Organizations deploy packet inspection systems to check for known attack indicators. These systems search for configured indicators inside the traffic, including exact match strings, regular expressions, and statistical properties. Inspection typically includes the packet payload, accessing application layer data.

Firewalls, which monitor and control incoming and outgoing network traffic, can also include IDS/IPS capabilities. They act as a barrier between a trusted internal network and an outside network, mitigating attacks in the early stages. Firewalls can be host-based, operating on a single machine.

Inspection systems are also used to detect insider threats, such as analyzing confidential documents in private communications, possibly enhanced with watermarking techniques.

Web security today is usually realized with HTTPS, which relies on the Transport Layer Security (TLS) protocol. TLS provides confidentiality, integrity, and authentication of data in transit. Encrypted traffic presents a challenge to packet inspection systems as it hides the payload content.

### 3.2 Intel SGX
Intel Software Guard Extensions (SGX) is a set of instructions that increase the security of applications by enabling them to run in a protected environment. SGX creates enclaves, which are isolated regions of memory that are protected from unauthorized access, even from the operating system and other processes. This makes SGX a suitable technology for protecting sensitive data and code, such as the inspection rules and traffic in our proposed system.