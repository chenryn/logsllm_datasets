This work was supported by European Research Council
Project CODAMODA. The ﬁrst author was also partially
supported by Marie Curie project RECUP.
7. REFERENCES
[1] M. Bellare and O. Goldreich. On deﬁning proofs of
knowledge. In CRYPTO, pages 390–420, 1992.
[2] M. Bellare and G. Neven. Multi-signatures in the
plain public-key model and a general forking lemma.
In ACM CCS, pages 390–399, 2006.
[3] M. Bellare and P. Rogaway. Random oracles are
practical: A paradigm for designing eﬃcient protocols.
In ACM CCS, pages 62–73, 1993.
[4] J. Camenisch and A. Lysyanskaya. An eﬃcient system
for non-transferable anonymous credentials with
optional anonymity revocation. In EUROCRYPT,
pages 93–118, 2001.
[5] R. Canetti, M. Charikar, S. R. Sridhar Rajagopalan,
A. Sahai, and A. Tomkins. Non-transferrable
anonymous credentials. US Patent 7,222,362., 2008.
[6] B. Chor, A. Fiat, and M. Naor. Tracing traitors. In
CRYPTO, pages 257–270, 1994.
[7] R. Cramer and V. Shoup. Design and analysis of
practical public-key encryption schemes secure against
adaptive chosen ciphertext attack. SIAM J. Comput.,
33(1):167–226, 2004.
[8] I. Damgard. On σ- protocols. In
http://www.daimi.au.dk/ ivan/Sigma.pdf, 2010.
[9] C. Dwork, J. B. Lotspiech, and M. Naor. Digital
signets: Self-enforcing protection of digital information
(preliminary version). In STOC, pages 489–498, 1996.
[10] S. Dziembowski and K. Pietrzak. Leakage-resilient
cryptography. In FOCS, pages 293–302, 2008.
[11] A. Fiat and A. Shamir. How to prove yourself:
Practical solutions to identiﬁcation and signature
problems. In CRYPTO, pages 186–194, 1986.
[12] O. Goldreich and L. A. Levin. A hard-core predicate
for all one-way functions. In STOC, pages 25–32, 1989.
952[13] O. Goldreich, B. Pﬁtzmann, and R. L. Rivest.
Self-delegation with controlled propagation-or-what if
you lose your laptop. In CRYPTO, pages 153–168,
1998.
[14] P. Golle, F. McSherry, and I. Mironov. Data collection
with self-enforcing privacy. In ACM CCS, pages
69–78, 2006.
[15] V. Goyal. Reducing trust in the pkg in identity based
cryptosystems. In CRYPTO, pages 430–447, 2007.
[16] V. Goyal, S. Lu, A. Sahai, and B. Waters. Black-box
accountable authority identity-based encryption. In
ACM CCS, pages 427–436, 2008.
identity-based signatures from standard signatures. In
Public Key Cryptography, pages 121–140, 2008.
APPENDIX
Due to the page limit, we only put some preliminaries and
the most involved security analysis for scheme-III here, while
all other related contents (omitted deﬁnitions, security proofs,
and identity based constructions) are in the full version.
A. PRELIMINARIES
We recall some known primitives and results which we
[17] V. Guruswami and P. Indyk. Expander-based
utilized in our constructions or security analysis.
constructions of eﬃciently decodable codes. In FOCS,
pages 658–667, 2001.
[18] S. Haber and B. Pinkas. Securely combining public-key
cryptosystems. In ACM CCS, pages 215–224, 2001.
[19] C.-Y. Hsiao, C.-J. Lu, and L. Reyzin. Conditional
computational entropy, or toward separating
pseudoentropy from compressibility. In EUROCRYPT,
pages 169–186, 2007.
[20] Y. Ishai, A. Sahai, and D. Wagner. Private circuits:
Securing hardware against probing attacks. In
CRYPTO, pages 463–481, 2003.
[21] M. Jakobsson, A. Juels, and P. Q. Nguyen. Proprietary
certiﬁcates. In CT-RSA, pages 164–181, 2002.
[22] A. Kiayias and M. Yung. Breaking and repairing
asymmetric public-key traitor tracing. In Digital
Rights Management Workshop, pages 32–50, 2002.
[23] A. Kiayias and M. Yung. Traitor tracing with constant
transmission rate. In EUROCRYPT, pages 450–465,
2002.
[24] H. Komaki, Y. Watanabe, G. Hanaoka, and H. Imai.
Eﬃcient asymmetric self-enforcement scheme with
public traceability. In Public Key Cryptography, pages
225–239, 2001.
[25] B. Libert and D. Vergnaud. Towards black-box
accountable authority ibe with short ciphertexts and
private keys. In Public Key Cryptography, pages
235–255, 2009.
[26] H. Lipmaa, G. Wang, and F. Bao. Designated veriﬁer
signature schemes: Attacks, new security notions and
a new construction. In ICALP, pages 459–471, 2005.
[27] A. Lysyanskaya, R. L. Rivest, A. Sahai, and S. Wolf.
Pseudonym systems. In International Workshop on
Selected Areas in Cryptography, SAC ’99, pages
184–199, 2000.
[28] D. Naccache, A. Shamir, and J. P. Stern. How to
copyright a function? In Public Key Cryptography,
pages 188–196, 1999.
[29] D. Pointcheval and J. Stern. Security arguments for
digital signatures and blind signatures. J. Cryptology,
13(3):361–396, 2000.
[30] A. Sahai and H. Seyalioglu. Fully secure
accountable-authority identity-based encryption. In
Public Key Cryptography, pages 296–316, 2011.
[31] T. Sander and A. Ta-Shma. Auditable, anonymous
electronic cash extended abstract. In CRYPTO, pages
555–572, 1999.
[32] S. F. Shahandashti and R. Safavi-Naini. Construction
of universal designated-veriﬁer signatures and
Proof of Knowledge: [1] A proof of knowledge protocol
is one that a prover convinces the veriﬁer he knows a wit-
ness to a publicly known polynomial-time predicate. This is
a protocol between two parties P, V where P proves a state-
ment x ∈ L for a language L’s instance x with its witness w
from a witness set denoted by W (x). The protocol has two
properties:
• Completeness: Honest prover always convinces the ver-
iﬁer: Pr[V (P (x, w)) = 1 ∧ w ∈ W (x)] = 1.
• Soundness: There exist an eﬃcient “knowledge extrac-
tor” who interacts with prover, and outputs the wit-
ness with probability close to the success probability
that P convinces V . Formally, Pr[ExtP (x) ∈ W (x)] ≥
Pr[V (P (x)) = 1] − , where  is negligible.
Σ-Protocol: [8] One frequently used type of proof of
knowledge protocol is the class of Σ-protocol, which have
a three move structure (a, e, z), starting with the prover
sending a ‘commit’ message a, then the veriﬁer sending a
‘challenge’ message e, and ﬁnally the prover answering with
a ‘response’ message z. Using the Fiat-Shamir transforma-
tion [11], one can construct a signature scheme based on such
protocol in the random oracle model [3]. Security of such
signature schemes is comprehensively studied in [29], and it
mainly relies on the existence of a knowledge extractor algo-
rithm (which is implied by the soundness of the protocol).
General Forking Lemma: [2] The general forking lemma
states that that if an adversary, on inputs drawn from some
distribution, produces an output, then the adversary will
produce another correlated output with diﬀerent inputs from
same distribution and same random tape. Rigorously, let
A be a probabilistic algorithm, with inputs (x, r1, . . . , rq; ρ)
that outputs a pair (J, σ), where ρ refers to the random tape
of A (that is, the random coins A will make). Suppose fur-
ther that x is sampled from some distribution X, and R is a
set of size |R| and ri is sampled uniformly from R. Let acc
be the probability for J ≥ 1. We can then deﬁne a “forking
algorithm” as follows,
• on input x: pick a random tape ρ for A.
• r1, . . . , rq
r← R, (J, σ) ← A(x, r1, . . . , rq; ρ)
• If J = 0, return (0, , ).
• r(cid:48)
• (J(cid:48), σ(cid:48)) ← A(x, r1, . . . , rJ−1, r(cid:48)
• If J(cid:48) = J and rJ (cid:54)= r(cid:48)
J , . . . , r(cid:48)
J , . . . , r(cid:48)
r← R
q; ρ)
q
J then return (1, σ, σ(cid:48)), otherwise,
return (0, ε, ε).
Let frk be the probability that A outputs (b, σ, σ(cid:48)), and b =
1, then frk ≥ acc( acc
q − 1|R| ).
953B. ANALYSIS FOR SCHEME-III
Theorem 1. Scheme-III parameterized by any δ > 0,
achieves IND-CPA (with honest authority), privacy (with-
out secret-key oracle), and black-box recoverability w.r.t. the
δ −c},
class of distributions Dδ = {D | H∞(D) ≥ log |s|+log 1
where c is a constant (depending on the ECC) and |s| the
length of the private information.
Proof. The most involved part of the proof is related
to recoverability, so we mainly analyze this property. It is
not diﬃcult to see that the way we sample m0, m1 in the
Rec algorithm, every query is an encryption of a message
independently sampled from D (the only exception is that
D almost always outputs only one message but in this case,
any box becomes “trivial”). Thus, the recovering query is
identically distributed as normal decryption queries and B
would have δ-correctness for a random recovering query!
The main challenge in the proof of the theorem is the fact
that the box B might behave diﬀerently depending on i and
thus force us to err in a number of locations i. We will
prove that we can bound this number and hence our error-
correction layer will be suﬃcient for recovering the hidden
information in the epk. Let δi = Pr[B decrypts correctly |
i ∈ S]. We divide the indices i ∈ {1, . . . , m} in two sets, Bad
and Good, we deﬁne i ∈ Good if and only if δi ≥ κ + α0 =
δ0, where κ = p(D) = 2−H∞(D) denoting the predicting
probability and α0 = (δ − κ)/m2 . We will later estimate
the number of repetition for each i, denoted by N , such that,
if i ∈ Good the recoverability will return the proper bit in
the i-th coordinate with overwhelming probability. In order
to upper bound the size of Bad consider the following. Let
D be the event of correct decryption. We have that,
Pr[D] = Pr[D | S ∩ Bad = ∅] · Pr[S ∩ Bad = ∅]
+ Pr[D | S ∩ Bad (cid:54)= ∅] · Pr[S ∩ Bad (cid:54)= ∅],
k
Regarding Pr[S ∩ Bad = ∅] observe that if k = |Bad|, this
i=0(1 −
probability is bounded by p(k, t) = C t
m−i ) ≤ (1 − k
m )t. From inequality ex ≥ 1 + x, we can get
p(k, t) ≤ e−kt/m. Regarding Pr[D | S ∩ Bad (cid:54)= ∅] note that
i∈Bad δi ≤ m(κ + α0) (This bound follows
i=1 Pr[F|Ai],
directly from the fact that Pr[F| ∪n
for any event F, Ai). We now derive the following,
it is bounded by(cid:80)
i=1 Ai] ≤(cid:80)n
m−k/C t
m =(cid:81)t−1
δ ≤ Pr[D] ≤ e
−tk/m + m(κ + α0),
from which we obtain the upper bound k ≤ m
t · ln(δ− m(κ +
α0))−1. Now observe that due to the condition for the min-
entropy, we derive a bound on κ ≤ 2cδ/|s| = c(cid:48)δ/|s|, for
some constant c(cid:48). From the choice of α0, we can prove
that δ − m(κ + α0) ≥ δ/4 as long as c is selected ap-
propriately (taking into account the error-correcting rate
which is constant). We plug this condition and the fact
that t = 5 ln(4δ−1) into the above bound for k, we conclude
that k ≤ m ln(4δ−1)/5 ln(4δ−1) = m/5.
Now we analyze the number of repetitions needed for an
i ∈ Good(in terms of an asymptotic function of the security
parameter λ) to guarantee we are almost certain that s will
be returned in the Rec algorithm.
First, an experiment is useful only if m0 (cid:54)= m1, otherwise,
we will always record a ⊥ for this query. The probability
of having one useful experiment after sampling N0 pairs of
(m0, m1) will be 1−Col(D)N0 , where Col(D) is the collusion
probability of distribution D which denotes the probability
of sampling a same element from two independent trials.
Observe that Col(D)  (1 + β)µ)] ≤
−β2µ
, we can verify that this probability is bounded by
e
exp(−N3α2
0/(24p(D)2 + 6p(D)α0)). So if we collect more
log2 λ) non-⊥ symbols, the majority will
−2
than N3 = O(α
0
be occupied by the correct answers with probability almost
1, and hence we can recover the bit.
Combining these procedures, in total, if the recovering
procedure repeats N0 × N1 × N2 × N3 = O(α
−2
0 m log6 λ) =
O(α−2λ5 log6 λ) times (given that the length of the code-
word m = O(λ), and α = δ − p(D)), one can recover ri cor-
rectly with overwhelming probability as long as i ∈ Good.
Since the number of errors in recovering r is bounded by k,
5 ≥ k,
and the ECC is able to correct up to m
thus ˜r will be recovered correctly with overwhelming prob-
ability and hence also s. (note that if we can reset the box
across experiments the ciphertexts for which i (cid:54)∈ S can be
just omitted, saving a factor of N1).
5 errors, and m
3
Remark: In this construction, the ciphertext size is parame-
terized by the correctness δ which is inﬂuenced by the min-
entropy of the distribution the box works on. Essentially,
if the min-entropy is getting smaller, then ciphertext size
increases.
954