# 2020第二届网鼎杯半决赛Web题目writeup
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
有幸参加了第二届网鼎杯的决赛和半决赛，被各路神仙锤爆。赛后对几道web题目进行了整理和复现，下面分享一下思路和方法，本人才疏学浅，如有错误，还请师傅们批评指正。
## Day 1
###  0x01 AliceWebsite
应该是最简单的题了，一上来就被秒了，代码很简单。在index.php中有一个毫无过滤的本地文件包含，
    //index.php
        Wecome to Alice's Website!
                        Alice's Website
                    Alice's Website
                        Home
                        About
直接http://ip/action=../../../../../../flag 就可以。
###  0x02 faka
题目给了源码，看了是一个什么自动发卡平台，首页是下面这样
基于thinkphp写的，记得之前在先知上看过一篇分析的文章，漏洞点在`application/admin/controller/Plugs.php`
首先通过`$this->request->file()`来获取上传的文件信息，`$this->request->file()`是thinkphp实现的用来获取上传文件信息的函数，详细代码如下：
    /**
         * 获取上传的文件信息
         * @access public
         * @param string|array $name 名称
         * @return null|array|\think\File
         */
        public function file($name = '')
        {
            if (empty($this->file)) {
                $this->file = isset($_FILES) ? $_FILES : [];
            }
            if (is_array($name)) {
                return $this->file = array_merge($this->file, $name);
            }
            $files = $this->file;
            if (!empty($files)) {
                // 处理上传文件
                $array = [];
                foreach ($files as $key => $file) {
                    if (is_array($file['name'])) {
                        $item  = [];
                        $keys  = array_keys($file);
                        $count = count($file['name']);
                        for ($i = 0; $i setUploadInfo($temp);
                        }
                        $array[$key] = $item;
                    } else {
                        if ($file instanceof File) {
                            $array[$key] = $file;
                        } else {
                            if (empty($file['tmp_name']) || !is_file($file['tmp_name'])) {
                                continue;
                            }
                            $array[$key] = (new File($file['tmp_name']))->setUploadInfo($file);
                        }
                    }
                }
                if (strpos($name, '.')) {
                    list($name, $sub) = explode('.', $name);
                }
                if ('' === $name) {
                    // 获取全部文件
                    return $array;
                } elseif (isset($sub) && isset($array[$name][$sub])) {
                    return $array[$name][$sub];
                } elseif (isset($array[$name])) {
                    return $array[$name];
                }
            }
            return;
        }
然后通过`pathinfo()`获取上传文件的扩展名，如果扩展名为`php`或者不在允许上传的类型中的话，会返回文件上传类型受限；然后将`POST`传的`md5`值以十六位一组，进行切片，之后分别将这两组字符串作为路径和文件名，最后在加上之前得到的文件扩展名赋值给`$filename`；在上传文件之前还有一个Token验证，会判断`POST`传的`token`值是否为`$filename`拼接上`session_id()`的`md5`值，经过测试这里的`session_id()`返回的是空字符串，而且我们知道`$filename`，所以可以很容易的绕过这里的检测；然后看关键的部分，跟进`move()`函数，
    /**
         * 移动文件
         * @access public
         * @param  string      $path     保存路径
         * @param  string|bool $savename 保存的文件名 默认自动生成
         * @param  boolean     $replace  同名文件是否覆盖
         * @return false|File
         */
        public function move($path, $savename = true, $replace = true)
        {
            // 文件上传失败，捕获错误代码
            if (!empty($this->info['error'])) {
                $this->error($this->info['error']);
                return false;
            }
            // 检测合法性
            if (!$this->isValid()) {
                $this->error = 'upload illegal files';
                return false;
            }
            // 验证上传
            if (!$this->check()) {
                return false;
            }
            $path = rtrim($path, DS) . DS;
            // 文件保存命名规则
            $saveName = $this->buildSaveName($savename);
            $filename = $path . $saveName;
            // 检测目录
            if (false === $this->checkPath(dirname($filename))) {
                return false;
            }
            // 不覆盖同名文件
            if (!$replace && is_file($filename)) {
                $this->error = ['has the same filename: {:filename}', ['filename' => $filename]];
                return false;
            }
            /* 移动文件 */
            if ($this->isTest) {
                rename($this->filename, $filename);
            } elseif (!move_uploaded_file($this->filename, $filename)) {
                $this->error = 'upload write error';
                return false;
            }
            // 返回 File 对象实例
            $file = new self($filename);
            $file->setSaveName($saveName)->setUploadInfo($this->info);
            return $file;
        }
前面是对文件的一些检测，在`$this->check()`函数中会调用`checkImg()`函数来检查上传的文件是否真的为图片，
通过检测后会进入`buildSaveName($savename)`，跟进
    /**
         * 获取保存文件名
         * @access protected
         * @param  string|bool $savename 保存的文件名 默认自动生成
         * @return string
         */
        protected function buildSaveName($savename)
        {
            // 自动生成文件名
            if (true === $savename) {
                if ($this->rule instanceof \Closure) {
                    $savename = call_user_func_array($this->rule, [$this]);
                } else {
                    switch ($this->rule) {
                        case 'date':
                            $savename = date('Ymd') . DS . md5(microtime(true));
                            break;
                        default:
                            if (in_array($this->rule, hash_algos())) {
                                $hash     = $this->hash($this->rule);
                                $savename = substr($hash, 0, 2) . DS . substr($hash, 2);
                            } elseif (is_callable($this->rule)) {
                                $savename = call_user_func($this->rule);
                            } else {
                                $savename = date('Ymd') . DS . md5(microtime(true));
                            }
                    }
                }
            } elseif ('' === $savename || false === $savename) {
                $savename = $this->getInfo('name');
            }
            if (!strpos($savename, '.')) {
                $savename .= '.' . pathinfo($this->getInfo('name'), PATHINFO_EXTENSION);
            }
            return $savename;
        }
这里的`$savename`是我们`move()`函数的第二个参数，就是前面的`$md5[1]`，经过`buildSaveName($savename)`后会直接返回`$md5[1]`，然后拼接在`$path`的后面做为文件名，后面直接调用`move_uploaded_file()`将文件移动到`$path`，在这个过程中`$ma5[1]`是可控的，所以我们可以直接上传php文件。首先生成带木马的图片，然后生成token值，
    php > echo md5("aa");
    4124bc0a9335c27f086f24ba207a4912
    echo md5("4124bc0a9335c27f/086f24ba207a.php.png");
    bf9b89e7c8f5f1159d8bd7aaaa9c795d
虽然显示文件上传失败，但实际是成功的
###  0x03 web_babyJS
题目关键的代码如下
    //routes/index.js
    var express = require('express');
    var config = require('../config');
    var url=require('url');
    var child_process=require('child_process');