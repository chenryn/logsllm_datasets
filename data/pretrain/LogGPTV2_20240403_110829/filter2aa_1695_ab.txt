  space	
  of	
  the	
  process.	
•  May	
  be	
  I	
  can	
  match	
  this	
  generic	
  point. 
Key	
  Point 
•  Simpliﬁed	
  Exploit	
  Flow	
VectorAllocate(); 
ﬁndCorruptVector(); 
execRopAndShellCode(); 
buildRopAndShellCode(); 
triggerVulnerability(); 
VectorSpray(); 
Key	
  Point 
•  Ideally	
vectorAllocate(); 
ﬁndCorruptVector(); 
execRopAndShellCode(); 
buildRopAndShellCode	
(); 
triggerVulnerability(); 
CheckVectorLen(); 
LogAndStopExploit(); 
How	
  to	
  implement? 
•  Because	
  before	
  AS3	
  methods	
  been	
  called,	
  it	
will	
  be	
  JITed,	
  So	
  I	
  hook	
  the	
  JIT	
  ﬂow	
  of	
  AVM2	
•  When	
  hit	
  the	
  hook	
  point,	
  I	
  can	
  check	
  the	
  AS3	
Vector	
  status	
  change	
  between	
  previous	
  hit	
and	
  this	
  hit.	
•  So,	
  this	
  is	
  likely	
  check	
  whether	
  previous	
  AS3	
method	
  has	
  corrupt	
  an	
  AS3	
  Vector 
How	
  to	
  implement	
  it? 
•  Background	
  knowledge	
  >	
  AVM2	
  will	
  JIT	
  AS3	
  methods	
  for	
  performance.	
  >	
  AVM2’s	
  veriﬁer	
  will	
  check	
  security	
  when	
  doing	
  JIT	
  >	
  Aoer	
  JIT,	
  the	
  emi4ed	
  machine	
  code	
  address	
  will	
  be	
  saved	
  in	
a	
  struct	
  named	
  MethodInfo.	
  >	
  MethodInfo	
  also	
  saves	
  a	
  method	
  id,	
  uses	
  method	
  id	
  we	
  can	
get	
  AS3	
  method	
  name. 
How	
  to	
  implement	
  it? 
•  Key	
  funcGon	
  >	
  In	
  AVM2(h4ps://github.com/adobe-­‐ﬂash/avmplus),	
BaseExecMgr::verifyJit	
  is	
  the	
  funcGon	
  to	
  verify	
  and	
  emit	
  code.	
How	
  to	
  implement	
  it? 
•  Aoer	
  hooked	
  the	
  JIT	
  ﬂow,	
  we	
  have	
  chance	
  to	
check	
  the	
  vector	
  status	
  in	
  our	
  JIT_HOOK	
funcGon	
•  This	
  means	
  we	
  can	
  check	
  vector	
  has	
  been	
corrupted	
  or	
  not	
  aoer	
  previous	
  AS3	
  methods	
has	
  been	
  executed.	
How	
  to	
  implement? 
•  So,	
  PracGcally	
JIT_HOOK(); 
CheckVectorLen(); 
vectorAllocate(); 
ﬁndCorruptVector(); 
execRopAndShellCode(); 
buildRopAndShellCode	
(); 
triggerVulnerability(); 
How	
  to	
  check	
  vector	
  length? 
•  Hook	
  Vector	
  CreaGng	
  1.	
  Flash	
  Player	
  has	
  4	
  types	
  AS3	
  Vector	
  object.	
  2.	
  Vector.,	
  Vector.,	
  Vector.	
  and	
Vector..	
  3.	
  I	
  hook	
  Vector.	
  and	
  Vector.	
  object	
  create	
funcGon.	
  4.	
  In	
  AVMplus	
  source	
  code,	
  we	
  can	
  see	
  the	
  create	
  funcGon	
  is	
a	
  template	
  funcGon.	
  Means	
  that	
  there	
  are	
  4	
  instances	
  in	
  ﬂash	
binary.	
How	
  to	
  check	
  vector	
  length? 
•  Check	
  Vector	
  length	
  >	
  When	
  there	
  is	
  a	
  vector	
  object	
  created,	
  I	
  will	
  save	
  the	
  vector	
object	
  address.	
  >	
  vector_obj_addr	
  +	
  0x18	
  is	
  the	
  data	
  list	
  which	
  save	
  vector	
data.	
  >	
  First	
  4	
  bytes	
  of	
  data	
  list	
  is	
  the	
  vector	
  length.	
  >	
  So,	
  poi(poi(vector_obj_addr	
  +	
  0x18)	
  )	
  is	
  vector	
  length 
How	
  to	
  implement? 
•  So,	
  PracGcally	
JIT_HOOK(); 
CheckVectorLen(); 
vectorAllocate(); 
ﬁndCorruptVector(); 
execRopAndShellCode(); 
buildRopAndShellCode	
(); 
triggerVulnerability(); 
SaveVectorObj(); 
Hook	
  Version 
•  Hook	
  Version	
  >	
  Some	
  sample	
  check	
  Flash	
  Player	
  version,	
  if	
  version	
is	
  too	
  high	
  or	
  too	
  low,	
  it	
  will	
  terminate	
  execuGon.	
  >	
  So	
  I	
  change	
  Flash	
  Player	
  version	
  string	
  in	
  memory	
  >	
  For	
  example,	
  change	
  WIN	
  18,0,0,160	
  to	
  WIN	
16,0,0,160	
  >	
  Just	
  search	
  WIN	
  x,0,0,x	
  in	
  OCX	
  image	
  memory 
How	
  to	
  Hook	
  Flash	
  OCX	
  load? 
•  Need	
  to	
  hook	
  Flash	
  OCX	
  when	
  it	
  being	
  loaded	
ﬁrst	
  Gme.	
•  Like	
  Windbg’s	
  module	
  load	
  event	
•  Flash	
  OCX	
  in	
  IE	
  is	
  a	
  COM	
  component.	
•  Hook	
  COM	
  component	
  create	
  in	
  IE,	
  check	
CLSID	
  of	
  Flash	
  OCX 
How	
  to	
  Hook	
  Flash	
  OCX	
  load? 
•  Hook	
  CoGetClassObject	
  funcGon	
  in	
  urlmon.dll	
•  IAT	
  hook	
•  In	
  Hook_CoGetClassObject	
  funcGon,	
  use	
IsEqualCLSID(rclsid,	
  CLSID_Flash)	
  to	
  idenGfy	
Flash	
  component	
  is	
  being	
  loaded.	
•  Find	
  Flash	
  OCX	
  module	
  base	
  address	
  and	
module	
  size,	
  search	
  binary	
  sequence	
  to	
  hook	
JIT,	
  hook	
  vector	
  create,	
  hook	
  version 
OK,	
  Just	
  Run	
  it 
• DEMO	
• CVE-­‐2015-­‐5119 
Manual	
  Check 
•  FED	
  ﬁnally	
  gives	
  me	
  li4le	
  samples	
  for	
  manual	
checking.	
•  I	
  need	
  to	
  debug	
  this	
  samples	
  to	
  conﬁrm	
  it	
  is	
  an	
0-­‐day	
  or	
  for	
  geung	
  root	
  cause	
  of	
  the	
  0-­‐day.	
Debugging	
  Hard	
  Point 
•  No	
  symbol	
  of	
  Flash	
  Player.	
•  All	
  AS3	
  methods	
  are	
  JITed.	
  Address	
  is	
dynamic.	
•  Flash	
  player	
  has	
  script	
  execuGon	
  Gme	
  out.	
DbgFlashVul 
•  So	
  I	
  wrote	
  a	
  tool	
  to	
  help	
  debug.	
•  A	
  windbg	
  extension	
  named	
  DbgFlashVul	
wri4en	
  in	
  C++.	
•  It	
  can	
  trace	
  AS3	
  method.	
•  It	
  can	
  set	
  break	
  point	
  based	
  on	
  AS3	
  method	
name. 
DbgFlashVul 
•  !help	
DbgFlashVul 
•  !	
  EnableTraceJit	
  1 
DbgFlashVul 
•  !SetBpForJitCode 
A	
  real	
  example	
  :	
  CVE-­‐2015-­‐3090 
•  Used	
  by	
  most	
  exploit	
  kits.	
•  Vulnerability	
  can	
  be	
  simpliﬁed	
  like	
  this:	
  private	
  var	
  myShaderjob:ShaderJob	
  =	
  null;	
  this.myShaderjob	
  =	
  new	
  ShaderJob(this.myShader);	
  ….	
  this.myShaderjob.width	
  =	
  0;	
  this.myShaderjob.start();	
  this.myShaderjob.width	
  =	
  606;	
•  When	
  changing	
  ShaderJob	
  width	
  asynchronously,	
it	
  will	
  cause	
  memory	
  overwrite.	
A	
  real	
  example	
  :	
  CVE-­‐2015-­‐3090 
•  The	
  exploit	
  ﬂow	
  can	
  be	
  simpliﬁed	
  like	
  this:	
prepareshaderjob();	
prepareVector();	
  //	
  vector	