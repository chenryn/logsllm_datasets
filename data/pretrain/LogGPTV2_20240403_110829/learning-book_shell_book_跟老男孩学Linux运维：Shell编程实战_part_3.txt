部（数百课时）.观看地址为：http://edu.51cto.com/pack/view/id-546.html，读者也可以扫
描下面的二维码，注册付费后开始学习。
---
## Page 24
inux
2章
Shell脚本初步入门
在解释“Shell脚本”这个名词之前，我们先来看看什么是Shell。
2.1什么是Shell
Shell是一个命令解释器，它的作用是解释执行用户输人的命令及程序等，用户每
输人一条命令，Shell就解释执行一条。这种从键盘一输人命令，就可以立即得到回应的
对话方式，称为交互的方式。
Shell存在于操作系统的最外层，负责与用户直接对话，把用户的输人解释给操作
系统，并处理各种各样的操作系统的输出结果，然后输出到屏幕返回给用户。输人系统
用户名和密码并登录到Linux后的所有操作都是由Shell解释与执行的。
图2-1针对命令解释器Shell在操作系统中所处的位置给出了基本图解。
外围应用程序
命令解科器（She）
图2-1Shell在操作系统中所处位置的基本图解
---
## Page 25
第2章Sheli脚本初步入门7
提示：Shell的英文是贝壳的意思，从图2-1中可以看出，命令解释器（Shell）就
像贝壳一样包住了系统核心。
2.2什么是Shell脚本
理解了Shell之后，再理解Shell脚本就简单了。当命令或程序语句不在命令行下执
行，面是通过一个程序文件来执行时，该程序就被称为Shell脚本。如果在Shell脚本里
内置了很多条命令、语句及循环控制，然后将这些命令一次性执行完毕，这种通过文件
执行脚本的方式称为非交互的方式。Shell脚本类似于DOS系统下的批处理程序（早期扩
些命令、变量和流程控制语句等有机地结合起来，就形成了一个功能强大的Shell脚本。
下面是在Windows下利用bat批处理程序开发的备份企业网站及数据库数据的脚本
范例。
范例2-1：在Windows下利用bat批处理程序备份网站及数据库数据的脚本。
eecho off
set datc=tdate:-0,4-adate:~5,2-date:-8.28
bop.xeq\messages
cd/var/1og
echo *Logs cleaned up.
提示：Var/log/messages是Linux系统的日志文件，很重要。
范例2-2所示的脚本其实是有一些问题的，具体如下：
1）如果不是root用户，则无法执行脚本清理日志，并且会提示系统的权限报错
信息。
---
## Page 26
8跟老男孩学Linux运维：Shell编程实战
2）没有任何流程控制语句，简单地说就是只进行顺序操作，没有成功判断和逻辑
严密性。
范例2-3：写一个包含命令、变量和流程控制的语句来清除/var/log下messages日
志文件的Shell脚本。
!/bin/bash
清除日志脚本，本2
LOG_DIR=/var/1og
ROOT_UID=0
messages&(
exit0·退出之前返图0表示成功，返因1表示失败。
echo*Logs cleaned up fail.*
exit1
初学者如果想要快速掌握Shell脚本的编写方法，最有效的思路就是采用电子游戏
中过关的方式，比如，对于范例2-3的脚本可以设计成如下几关：
第一关，必须是root才能执行脚本，否则给出友好提示并终止脚本运行。
第二关，成功切换目录（cd/var/log），否则给出友好提示并终止脚本运行。
第三关，清理日志（cat/dev/null>messages），若清理成功，则给出正确提示。
第四关，通关或失败，分别给出相应的提示（echo输出）。
2.3Shell脚本在Linux运维工作中的地位
Shell脚本语言很适合用于处理纯文本类型的数据，而Linux系统中几乎所有的配
置文件、日志文件（如NFS、Rsync、Httpd、Nginx、LVS、MySQL等），以及绝大多数
的启动文件都是纯文本类型的文件。因此，学好Shell脚本语言，就可以利用它在Linux
系统中发挥巨大的作用。
图2-2形象地展示了Shell脚本在运维工作中的地位。
---
## Page 27
第2章Shell脚本初步入门9
定时任务
基础命令Nginx Web
SSH服务
PHP服务
NFS 存错
运维“类错”组成：
Tomcat服务
Zabbix监控
LVS 集群
KVM虚拟化
2穿确我的线即shell
Keepalived集群
更多服务
Iptables 防火墙
OpenStack/Docker
图2-2Shel1脚本在运维工作中的地位形象图
2.4脚本语言的种类
2.4.1Shell脚本语言的种类
Shell脚本语言是弱类型语言（无须定义变量的类型即可使用），在Unix/Linux中主
要有两大类Shell：一类是Bourne shell，另一类是Cshell。
1. Bourne shell
Bourne shell 又包括 Bourne shell (sh)、 Korn shell (ksh)、 Bourne Again Shell (bash)
三种类型。
 Bourne shell（sh）由 AT&T的 Steve Bourne开发，是标准的 UNIX Shell，很多
UNIX系统都配有sh。
口Korn shell（ksh）由DavidKorn开发，是Bourne shell（sh）的超集合，并且添加
了csh引I人的新功能，是目前很多UNIX系统标准配置的Shell，这些系统上的/
bin/sh往往是指向/bin/ksh的符号链接。
口 Bourne Again Shell（bash）由 GNU项目组开发，主要目标是与POSIX标准保持
一致，同时兼顾对sh的兼容，bash从csh和ksh借鉴了很多功能，是各种Linux
发行版默认配置的Shell，Linux系统上的/bin/sh往往是指向/bin/bash的符号链
接。尽管如此，bash和sh还是有很多的不同之处：一方面，bash扩展了一些命
令和参数；另一方面，bash并不完全和sh兼容，它们有些行为并不一致，但在
大多数企业运维的情况下区别不大，特殊场景可以使用bash替代sh。
2.Cshell
Cshell又包括csh、tcsh两种类型。
csh由Berkeley大学开发，随BSDUNIX发布，它的流程控制语句很像C语言，支
持很多Bourne shell所不支持的功能，例如：作业控制、别名、系统算术、命令历史、
---
## Page 28
跟老男孩学Linux运维：Shel 编程实战
命令行编辑等。
tcsh是csh的增强版，加入了命令补全等功能，在FreeBSD、MacOSX等系统上
替代了csh。
以上介绍的这些Shell中，较为通用的是标准的 Bourne shell（sh）和 C shell（csh）。
其中 Bourne shell（sh）已经被Bourne Again shell（bash）所取代。
可通过以下命令查看CentOS6系统的Shell支持情况。
[root@oldboy -]#cat/etc/shel1s
/bin/sh
bash
[root8oldboy-]+11/bin/bash
-rwxr-xr-x1rootroot94041610月1621:56/bin/bash
提示：sh为bash的软链接，大多数情况下，脚本的开头使用“#/bin/bash”和
bash"。
下面的Shell脚本是系统自带的软件启动脚本的开头部分。
s///-au]
#1/bin/bash
[rooteoldboy -]#head -1/etc/init.d/ntpd
e1/bin/bash
#!/bin/sh
提示：如果使用/bin/sh执行脚本出现异常，那么可以再使用/bin/bash试一试，
但是一般不会发生此类情况。
一般情况下，在安装Linux系统时会自动安装好bash软件，查看系统的bash版本
的命令如下。
[rooteoldboy~]cat/etc/redhat-release
CentOS release 6.8 (Final)
This ia free software;you are free to change and redistribute it.
---
## Page 32
跟老男孩学Linux远维：Shol编程实战
There is NO wARRANTY, to the extent permitted by law.
如果读者使用的是较老版本的Shell，那么建议将其升级到最新版本的Shell，特别
是企业使用，因为近两年老版本的bash被暴露出存在较严重的安全漏洞。
例如：bash软件曾经爆出了严重漏洞（破壳漏洞），凭借此漏洞，攻击者可能会接
管计算机的整个操作系统，得以访问各种系统内的机密信息，并对系统进行更改等。任
何人的计算机系统，如果使用了bash软件，都需要立即打上补丁。检测系统是否存在漏
洞的方法为：
[root@oldboy -] env x=*()(); echo be carefulbash -c *echo this is a test*
this is a test
如果返回如下两行，则表示需要尽快升级bash了，不过，仅仅是用于学习和测试
就无所谓了。
be careful
this i8 a test
升级方法为：
-[o]
[root@oldboy ~]#rpm -qa bash
bash-4.1.2-40.e16.x86_64
提示：如果没有输出becareful，则不需要升级。