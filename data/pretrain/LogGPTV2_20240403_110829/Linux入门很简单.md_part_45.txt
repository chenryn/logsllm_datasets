懒蜗牛说："要动起来，要鲜活的世界。"于是，就动起来了，这是第5日。
第6日，懒蜗牛说，我累了，要休息。于是，就没有于是了，这小子没开机。
众人：合着懒蜗牛就是传说中的上帝？
我说：不是，上帝第7日才休息。
众人：废话，那是上帝没赶上实行双休日。
我估计这么说您还是听不懂，那我慢慢给您讲解。
6.5.2 命令行下的中文支持
这周一，懒蜗牛开始打造自己的命令行世界。各种命令对懒蜗牛来说都已经很熟悉了，就算有些不大熟练的命令，也可以很轻松地找到纯爷们儿（man）来讲解。但是一来到黑漆漆的终端里面遇到的第一个问题就是，没有中文的支持。
运行ls，主目录下的图片、文档这些中文目录显示的都是一些菱形的方块。这也难怪，在伪终端下，中文环境由图形部门负责，可到了终端界面中，这事情就没人管了。毕竟多数人还是要使用图形界面的嘛，像我们这位懒蜗牛同学这么神经质的人不多，所以我们没有更多地考虑纯字符界面的使用感受。不过懒蜗牛现在需要字符下的中文环境，那也有人能够胜任，只是默认没有安装而已。而且，这样的软件还不只一个。
【通过zhcon显示和输入中文】
首先就是老牌的zhcon，这个家伙有些岁数了，很久以前他就担当起让命令行下显示和输入中文的重任。
他是一个外挂的中文环境，就像很久以前的DOS系统里的那个UC-DOS一样。要安装他很简单，找超级牛力就行。
装上之后，在终端里（不是图形界面下的伪终端哦）输入zhcon，就运行起来了。不过懒蜗牛这么运行了之后发现，这目录下的中文还是有问题啊。原来中文的地方都是菱形方块，现在倒好，改成一堆问号了。难道zhcon的能力就是把方块改成问号？想想也不是啊，于是懒蜗牛运行了zhcon
\--help，问问zhcon这到底是怎么回事。
zhcon解释说，你要设置一下编码，我默认是使用GB2312的，你系统里的文件都是UTF-8的，那你运行的时候就要这样：zhcon
\--utf8才行。懒蜗牛这才恍然大悟，心想你倒是早说啊。赶紧照着他说的运行，然后ls一下，果然，终于看见中文了。按下Ctrl+空格组合键，哈哈，出现了输入法，虽然全拼不是那么好用，不过，命令行下，也凑和了。最终的效果如图6.10所示。
![alt](images/00335.jpeg){.calibre3}
图6.10 zhcon中文环境
【通过fbterm显示中文】
zhcon也是有不少后遗症的，启动了zhcon后，凡是一些需要有排版有格式的显示，比如w3m显示的网页，moc显示的mp3播放介面，都会或多或少地乱掉。所以懒蜗牛又找了更好的解决方案------fbterm。
fbterm是一个基于framebuffer的终端。framebuffer是字符界面下程序访问显卡的一种接口。他是能让命令行更加丰富多彩的关键的一环。通过framebuffer，程序们可以直接向显卡的显存里面更新数据，也就是直接影响屏幕上显示的点和颜色，这就使得在终端下显示图片成为了可能。
![alt](images/00011.jpeg){.tpzz}**提示：**[zhcon启动时也可以加入参数"\--drv=fb"来指定通过framebuffer显示。如果不输入此参数，则zhcon自动检测可用的设备。]{.kai1}
不过由于程序直接控制显卡的显存，并不经过显卡运算，因此显卡的运算能力是不能发挥的，所有的图形都是靠CPU运算好之后直接送到显卡显存里的，所以framebuffer比较消耗CPU。以后我们还会经常看到framebuffer，现在先说fbterm。
fbterm其实也可以算是个虚拟终端，就跟图形界面下的那个Gnome终端一样，说不定还是一个学校毕业的呢。只不过fbterm是在终端下，用framebuffer来"画"出一个虚拟终端来，而Gnome终端是靠图形界面组的那些人来画虚拟终端。fbterm的好处就是不像zhcon那样会搞乱屏幕的排版，所以懒蜗牛自从用了fbterm之后，就再也没运行过zhcon。
fbterm也是源里的软件，直接让超级牛力装就可以。运行简单，就直接运行命令：fbterm就可以进入能够显示中文的fbterm终端了。
![alt](images/00011.jpeg){.tpzz}**提示：**[如果fbterm需要使用/dev/fb0设备（framebuffer设备），当前用户对该设备没有访问权限，需要把用户加入video组。运行命令：]{.kai1}
![alt](images/00336.jpeg){.calibre3}
[即可，或者使用图形界面操作也可以。]{.kai1}
不过fbterm只是一个能够显示中文的终端而已，不是一个中文环境。所以，只能看到中文，输入是不行的。不过没关系，专门在命令行下的输入法也有，和fbterm配合起来就天衣无缝了。
【yong输入法】
关于中文输入法，推荐来自中国的yong，学名叫做"小小输入法"，这个我们的源里可没有，得去他的网站上下载并安装，就是这个地址：http://yong.uueasy.com/read.php?tid=1。
装好之后，只要在运行fbterm的时候加上参数，指定输入法，就可以在fbterm中使用了，指定输入法用-i参数：
![alt](images/00337.jpeg){.calibre3}
就可以了。
除了yong，还有fbterm_ucimf可以使用，不过相对简陋些。另外还可以使用ibus-fbterm，看名字就知道了，是基于ibus的，相对好用些。
最终懒蜗牛选择了fbterm，这不单是因为看上去顺眼点，更关键的是后来的境遇。
【开启framebuffer】
咱说了半天framebuffer，可能有同学要问了，这个东西怎么开启呢？别忙，我给您讲讲。
我们Ubuntu的终端下默认并没有开启framebuffer（还是那句话，毕竟用终端的人少），如果需要开启，跟着我执行以下操作：
（1）打开/etc/initramfs-tools/modules文件，加入以下两行：
![alt](images/00338.jpeg){.calibre3}
这是开启framebuffer所需要加载的驱动。
（2）打开/etc/modprobe.d/blacklist-framebuffer.conf文件，删除或注释掉带有"vesafb"字样的行。
（3）执行命令：
![alt](images/00339.jpeg){.calibre3}
此命令将更新initramwfs文件。
（4）打开/etc/default/grub文件，找到如下一行：
![alt](images/00340.jpeg){.calibre3}
将其改为：
![alt](images/00341.jpeg){.calibre3}
这一行是设置内核启动时的参数，那个vga=786是告诉内核（也就是告诉我啦）启动的时候要使用什么样的分辨率和色深。具体这个数字应该写多少，可以参见表6.6。这里的789，就是800×600的分辨率，24位色深。
**表6.6 framebuffer显示模式**
![alt](images/00342.jpeg){.calibre3}
（5）更新grub，运行命令：
![alt](images/00343.jpeg){.calibre3}
（6）重新启动系统就可以了。
6.5.3 在Shell下播放音乐
周二，懒蜗牛得到了比较顺手的有中文环境的命令行之后，又开始踏上了新的寻觅旅程------寻觅音乐。
在图形界面下的时候，有很多播放软件可以让懒蜗牛浸泡在音乐的海洋里。那在字符界面下呢？想想也不应该有问题呀，放音乐又不需要图形界面是不是？字符界面下播放音乐还是不成问题的，Mplayer就可以播放各种音频，还有个Mpg123也可以放出声来。不过他们俩虽然能放出声音来，毕竟不专业，怎么也得有个播放列表、歌曲管理的功能吧。于是，懒蜗牛选择了moc。
![alt](images/00011.jpeg){.tpzz}**提示：**[Gnome界面下，鼠标悬停在音乐文件上就可以预览其内容，这个功能就是通过调用Mpg123实现的。]{.kai1}
【终端里的窗口】
moc是一个字符界面的音乐播放软件。有好奇而OUT的同学可能会猜想：字符界面播放音乐，那是不是要输入命令才播放音乐呢？比如输入play，就播放；输入stop就暂停；输入load
xxxx.list就导入播放列表这样？要是30年前没准能有这种软件，不过在现在这么简洁高效的年代，怎么可能用这么难用的东西呢？虽说是字符界面，但是不代表就不能有窗口！是的，你没听错，在字符界面下也能画出窗口来！怎么画？用字符拼！
我们知道，ASCII码中有一些特殊的字符，什么横杠、竖杠、拐弯杠什么的。用这些特殊的符号，加上可控制的字符底色，可以拼接出有窗口效果的终端显示的界面。
当然，如果每个程序都自己写代码去拼肯定是很费事的，所以崇尚共享的我们Linux系统提供了一套专门在字符界面下画窗口的函数库，叫做ncurses。调用这个库画窗口就跟用gtk+提供的接口在图形界面下画窗口类似，所以编程人员不必在意怎么用各种字符拼出好看的窗口，只要调用ncurses就行了。ncurses的前身是curses，大名鼎鼎的Vi就是用它实现的界面。
【moc的操作】
moc就是一个基于ncurses的、字符界面的音乐播放软件。直接找超级牛力就可以安装。懒蜗牛装了之后赶紧运行一下试试。虽然包名叫moc，不过运行的命令是mocp。运行起来之后如图6.11所示。
![alt](images/00344.jpeg){.calibre3}
图6.11 mocp运行界面
运行起来之后，左边是文件列表窗口，可以通过上下箭头选择相应目录，按回车键进入，最上面的那个".."表示上一级目录，这个都知道吧，不知道的面壁去。