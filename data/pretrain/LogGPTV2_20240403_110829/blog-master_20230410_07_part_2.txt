But, with logical decoding on standby, in the following cases:  
- hot_standby_feedback is off  
- hot_standby_feedback is on but there is no a physical slot between  
  the primary and the standby. Then, hot_standby_feedback will work,  
  but only while the connection is alive (for example a node restart  
  would break it)  
Then, the primary may delete system catalog rows that could be needed  
by the logical decoding on the standby (as it does not know about the  
catalog_xmin on the standby).  
So, it’s mandatory to identify those rows and invalidate the slots  
that may need them if any. Identifying those rows is the purpose of  
this commit.  
Implementation:  
When a WAL replay on standby indicates that a catalog table tuple is  
to be deleted by an xid that is greater than a logical slot's  
catalog_xmin, then that means the slot's catalog_xmin conflicts with  
the xid, and we need to handle the conflict. While subsequent commits  
will do the actual conflict handling, this commit adds a new field  
isCatalogRel in such WAL records (and a new bit set in the  
xl_heap_visible flags field), that is true for catalog tables, so as to  
arrange for conflict handling.  
The affected WAL records are the ones that already contain the  
snapshotConflictHorizon field, namely:  
- gistxlogDelete  
- gistxlogPageReuse  
- xl_hash_vacuum_one_page  
- xl_heap_prune  
- xl_heap_freeze_page  
- xl_heap_visible  
- xl_btree_reuse_page  
- xl_btree_delete  
- spgxlogVacuumRedirect  
Due to this new field being added, xl_hash_vacuum_one_page and  
gistxlogDelete do now contain the offsets to be deleted as a  
FLEXIBLE_ARRAY_MEMBER. This is needed to ensure correct alignment.  
It's not needed on the others struct where isCatalogRel has  
been added.  
This commit just introduces the WAL format changes mentioned above. Handling  
the actual conflicts will follow in future commits.  
Bumps XLOG_PAGE_MAGIC as the several WAL records are changed.  
Author: "Drouvot, Bertrand"   
Author: Andres Freund  (in an older version)  
Author: Amit Khandekar   (in an older version)  
Reviewed-by: "Drouvot, Bertrand"   
Reviewed-by: Andres Freund   
Reviewed-by: Robert Haas   
Reviewed-by: Fabrízio de Royes Mello   
Reviewed-by: Melanie Plageman   
```  
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=26669757b6a7665c1069e77e6472bd8550193ca6  
```  
Handle logical slot conflicts on standby  
author	Andres Freund 	  
Sat, 8 Apr 2023 06:11:28 +0000 (23:11 -0700)  
committer	Andres Freund 	  
Sat, 8 Apr 2023 07:05:44 +0000 (00:05 -0700)  
commit	26669757b6a7665c1069e77e6472bd8550193ca6  
tree	b60b91e8fa8276744b171a7a5714ffb5b8918f66	tree  
parent	be87200efd9308ccfe217ce8828f316e93e370da	commit | diff  
Handle logical slot conflicts on standby  
During WAL replay on the standby, when a conflict with a logical slot is  
identified, invalidate such slots. There are two sources of conflicts:  
1) Using the information added in 6af1793954e, logical slots are invalidated if  
   required rows are removed  
2) wal_level on the primary server is reduced to below logical  
Uses the infrastructure introduced in the prior commit. FIXME: add commit  
reference.  
Change InvalidatePossiblyObsoleteSlot() to use a recovery conflict to  
interrupt use of a slot, if called in the startup process. The new recovery  
conflict is added to pg_stat_database_conflicts, as confl_active_logicalslot.  
See 6af1793954e for an overall design of logical decoding on a standby.  
Bumps catversion for the addition of the pg_stat_database_conflicts column.  
Bumps PGSTAT_FILE_FORMAT_ID for the same reason.  
Author: "Drouvot, Bertrand"   
Author: Andres Freund   
Author: Amit Khandekar  (in an older version)  
Reviewed-by: "Drouvot, Bertrand"   
Reviewed-by: Andres Freund   
Reviewed-by: Robert Haas   
Reviewed-by: Fabrízio de Royes Mello   
Reviewed-by: Bharath Rupireddy   
Reviewed-by: Amit Kapila   
Reviewed-by: Alvaro Herrera   
Discussion: https://postgr.es/m/PI:EMAIL  
```  
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=be87200efd9308ccfe217ce8828f316e93e370da  
```  
Support invalidating replication slots due to horizon and wal_level  
author	Andres Freund 	  
Sat, 8 Apr 2023 05:40:27 +0000 (22:40 -0700)  
committer	Andres Freund 	  
Sat, 8 Apr 2023 05:40:27 +0000 (22:40 -0700)  
commit	be87200efd9308ccfe217ce8828f316e93e370da  
tree	f269cd86fdfebf3a15ef3559904f5863caede055	tree  
parent	2ed16aacf1af1e1a26bffb121a19d1ad5f5177f0	commit | diff  
Support invalidating replication slots due to horizon and wal_level  
Needed for logical decoding on a standby. Slots need to be invalidated because  
of the horizon if rows required for logical decoding are removed. If the  
primary's wal_level is lowered from 'logical', logical slots on the standby  
need to be invalidated.  
The new invalidation methods will be used in a subsequent commit.  
Logical slots that have been invalidated can be identified via the new  
pg_replication_slots.conflicting column.  
See 6af1793954e for an overall design of logical decoding on a standby.  
Bumps catversion for the addition of the new pg_replication_slots column.  
Author: "Drouvot, Bertrand"   
Author: Andres Freund   
Author: Amit Khandekar  (in an older version)  
Reviewed-by: "Drouvot, Bertrand"   
Reviewed-by: Andres Freund   
Reviewed-by: Robert Haas   
Reviewed-by: Fabrízio de Royes Mello   
Reviewed-by: Bharath Rupireddy   
Reviewed-by: Amit Kapila   
Reviewed-by: Melanie Plageman   
Reviewed-by: Alvaro Herrera   
Discussion: https://postgr.es/m/PI:EMAIL  
```  
#### [期望 PostgreSQL|开源PolarDB 增加什么功能?](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
#### [PolarDB 云原生分布式开源数据库](https://github.com/ApsaraDB "57258f76c37864c6e6d23383d05714ea")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、内核开发公开课、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [PostgreSQL 解决方案集合](../201706/20170601_02.md "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")