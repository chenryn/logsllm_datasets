    -   集成的 IdM 根 CA `ipa`{.literal}
        要选择子 CA，请使用 `--ca`{.literal} 选项。
    :::
:::
::: itemizedlist
**其它资源**
-   有关 `ipa cert-request`{.literal} 命令的详情，请查看
    `ipa cert-request --help`{.literal} 命令的输出。
-   有关创建自定义证书配置文件的更多信息，请参阅
    [在身份管理中创建和管理证书配置文件](#creating-and-managing-certificate-profiles-in-identity-management_configuring-and-managing-idm.html "第 49 章 在身份管理中创建和管理证书配置文件"){.link}。
:::
:::
::: section
::: titlepage
# []{#managing-certificates-for-users-hosts-and-services-using-the-integrated-idm-ca_configuring-and-managing-idm.html#requesting-new-certificates-for-a-user-host-or-service-from-idm-ca-using-openssl_managing-certificates-for-users-hosts-and-services-using-the-integrated-idm-ca}使用 openssl 为用户、主机或服务从 IdM CA 请求新证书 {.title}
:::
如果要确保主机或服务的 Kerberos 别名可以使用证书，您可以使用
`openssl`{.literal}
工具为身份管理(IdM)主机或服务请求证书。在标准情况下，请考虑 [使用
certutil
工具来请求一个新证书](#managing-certificates-for-users-hosts-and-services-using-the-integrated-idm-ca_configuring-and-managing-idm.html#requesting-new-certificates-for-a-user-host-or-service-from-idm-ca-using-certutil_managing-certificates-for-users-hosts-and-services-using-the-integrated-idm-ca "使用 certutil 为用户、主机或服务从 IdM CA 请求新证书"){.link}。
本节描述了如何使用 `openssl`{.literal} 为 IdM 主机或来自
`ipa`{.literal}（IdM 证书颁发机构）的服务请求证书。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
通常运行在存储私钥的专用服务节点上的服务。将服务的私钥复制到 IdM
服务器被视为不安全。因此，在为服务请求证书时，请在服务节点上创建证书签名请求(CSR)。
:::
::: itemizedlist
**先决条件**
-   您的 IdM 部署包含一个集成的 CA。
-   以 IdM 管理员身份登录到 IdM 命令行界面(CLI)。
:::
::: orderedlist
**流程**
1.  为您的 Kerberos 主体 [*test/server.example.com*]{.emphasis}
    创建一个或多个别名。例如，[*test1/server.example.com*]{.emphasis} 和
    [*test2/server.example.com*]{.emphasis}。
2.  在 CSR 中，为
    dnsName([*server.example.com*]{.emphasis})和otherName([*test2/server.example.com*]{.emphasis})添加
    subjectAltName。要做到这一点，将 `openssl.conf`{.literal}
    文件配置为包含以下指定 UPN otherName 和 subjectAltName 的行:
    ``` literallayout
    otherName=1.3.6.1.4.1.311.20.2.3;UTF8:test2/PI:EMAIL
    DNS.1 = server.example.com
    ```
3.  使用 `openssl`{.literal} 创建证书请求：
    ``` literallayout
    openssl req -new -newkey rsa:2048 -keyout test2service.key -sha256 -nodes -out certificate_request.csr -config openssl.conf
    ```
4.  将证书请求文件提交到在 IdM 服务器上运行的 CA。指定 Kerberos
    主体来与新发布的证书关联：
    ``` literallayout
    # ipa cert-request certificate_request.csr --principal=host/server.example.com
    ```
    IdM 中的 `ipa cert-request`{.literal} 命令使用以下默认值：
    ::: itemizedlist
    -   `caIPAserviceCert`{.literal} 证书配置文件
        要选择自定义配置文件，请使用 `--profile-id`{.literal} 选项。
    -   集成的 IdM 根 CA `ipa`{.literal}
        要选择子 CA，请使用 `--ca`{.literal} 选项。
    :::
:::
::: itemizedlist
**其它资源**
-   有关 `ipa cert-request`{.literal} 命令的详情，请查看
    `ipa cert-request --help`{.literal} 命令的输出。
-   有关创建自定义证书配置文件的更多信息，请参阅
    [在身份管理中创建和管理证书配置文件](#creating-and-managing-certificate-profiles-in-identity-management_configuring-and-managing-idm.html "第 49 章 在身份管理中创建和管理证书配置文件"){.link}。
:::
:::
::: section
::: titlepage
# []{#managing-certificates-for-users-hosts-and-services-using-the-integrated-idm-ca_configuring-and-managing-idm.html#_additional_resources_3}其它资源 {.title}
:::
::: itemizedlist
-   有关如何使用 IdM CA 吊销证书的详情，请参考 [使用集成的 IdM CA
    吊销证书](#managing-the-validity-of-certificates-in-idm_configuring-and-managing-idm.html#revoking-certificates-with-the-integrated-IdM-CAs_validity-certificates "吊销带有集成 IdM CA 的证书"){.link}。
-   有关如何使用 IdM CA 恢复证书的详情，请参考 [使用集成的 IdM CA
    恢复证书](#managing-the-validity-of-certificates-in-idm_configuring-and-managing-idm.html#restoring-certificates-with-the-integrated-IdM-CAs_validity-certificates "恢复带有集成 IdM CA 的证书"){.link}。
-   有关如何限制应用程序只信任由 IdM 子 CA 发布的证书的信息，请参阅
    [限制应用程序只信任证书子集](#restricting-an-application-to-trust-only-a-subset-of-certificates_configuring-and-managing-idm.html "第 60 章 将应用程序限制为只信任证书子集"){.link}。
:::
:::
:::
[]{#convert-cert-formats-idm_configuring-and-managing-idm.html}
::: chapter
::: titlepage
# []{#convert-cert-formats-idm_configuring-and-managing-idm.html#convert-cert-formats-idm_configuring-and-managing-idm}第 48 章 转换证书格式以和 IdM 一起工作 {.title}
:::
这个用户故事描述了如何确保您作为 IdM 系统管理员使用正确的带有特定 IdM
命令的证书的格式。例如，这在以下情况下非常有用：
::: itemizedlist
-   您将外部证书加载到用户配置文件中。详情请查看
    ["将外部证书转换来加载到 IdM
    用户帐户中"一节](#convert-cert-formats-idm_configuring-and-managing-idm.html#convert-cert-to-load-to-user-profile-idm_convert-cert-formats-idm "将外部证书转换来加载到 IdM 用户帐户中"){.xref}。
-   [在为智能卡验证配置 IdM
    服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth){.link}
    或 [为智能卡验证配置 IdM
    客户端时](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#conf-idm-client-for-smart-card-auth_configuring-idm-for-smart-card-auth){.link}
    ，您在使用外部 CA
    证书，以便用户可以使用其上带有由外部证书颁发机构签发的证书的智能卡向
    IdM 进行身份验证。
-   您从 NSS 数据库将证书导出为 pkcs #12
    格式，其中包括证书和私钥。详情请查看 ["将证书和私钥从 NSS
    数据库导出到 PKCS #12
    文件中"一节](#convert-cert-formats-idm_configuring-and-managing-idm.html#export-cert-from-nss-to-pkcs12_convert-cert-formats-idm "将证书和私钥从 NSS 数据库导出到 PKCS #12 文件中"){.xref}。
:::
::: section
::: titlepage
# []{#convert-cert-formats-idm_configuring-and-managing-idm.html#cert-types-idm_convert-cert-formats-idm}IdM 中的证书格式和编码 {.title}
:::
包括 IdM
中的智能卡身份验证的证书验证通过比较用户提供的证书或证书数据（保存在用户的
IdM 配置文件中）来进行。
### []{#convert-cert-formats-idm_configuring-and-managing-idm.html#_system_configuration}系统配置
IdM
配置文件中存储的内容只是证书，而不是相应的私钥。在身份验证期间，用户还必须显示其拥有相应的私钥。用户通过显示包含证书和私钥的
PKCS #12
文件，或提供两个文件：一个包含证书，另一个包含私钥，来执行此操作。
因此，将证书加载到用户配置文件的进程等只接受不包含私钥的证书文件。
同样，当系统管理员为您提供外部 CA
证书时，他将仅提供公共数据：不带私钥的证书。为 IdM
客户端的智能卡验证配置 IdM 服务器的 `ipa-advise`{.literal}
工具需要输入文件包含外部 CA 的证书，而不是私钥。
### []{#convert-cert-formats-idm_configuring-and-managing-idm.html#_certificate_encodings}证书编码
有两种常见的证书编码：隐私增强的电子邮件(`PEM`{.literal})和区分的编码规则(`DER`{.literal})。`base64`{.literal}
格式与 `PEM`{.literal} 格式几乎一样，但它不包含
`-----BEGIN CERTIFICATE-----/-----END CERTIFICATE-----`{.literal}
标头和页脚。
已使用 `DER`{.literal} 编码的证书是二进制 X509
数字证书文件。作为二进制文件，证书不可读。`DER`{.literal} 文件有时使用
`.der`{.literal} 文件扩展名，但带有 `.crt`{.literal} 和 `.cer`{.literal}
文件扩展名的文件有时也会包含 `DER`{.literal} 证书。包含密钥的
`DER`{.literal} 文件可以命名为 `.key`{.literal}。
使用 `PEM`{.literal} Base64
编码的证书是一个人类可读的文件。该文件包含前缀为\"\-\-\-\--BEGIN ...\"的
ASCII(Base64)保护的数据行。`PEM`{.literal} 文件有时使用 `.pem`{.literal}
文件扩展名，但带有 `.crt`{.literal} 和 `.cer`{.literal}
文件扩展名的文件有时也包含 `PEM`{.literal} 证书。包含密钥的
`PEM`{.literal} 文件可以命名为 `.key`{.literal}。
不同的 `ipa`{.literal}
命令对其接受的证书类型有不同的限制。例如，`ipa user-add-cert`{.literal}
命令只接受以 `base64`{.literal} 格式编码的证书，但
`ipa-server-certinstall`{.literal} 接受
`PEM、DER、PKCS #7、PKCS #8`{.literal} 和 `PKCS #12`{.literal} 证书。
::: table
[]{#convert-cert-formats-idm_configuring-and-managing-idm.html#tab.cert-encodings_convert-cert-formats-idm}
**表 48.1. 证书编码**
::: table-contents
  编码格式     人类可读   常用的文件扩展名   接受编码格式的 IdM 命令示例
  ------------ ---------- ------------------ ------------------------------------------------
  PEM/base64   是         .pem, .crt, .cer   ipa user-add-cert, ipa-server-certinstall, ...​
  DER          否         .der, .crt, .cer   ipa-server-certinstall, ...​
:::
:::
["IdM
中与证书相关的命令和格式"一节](#convert-cert-formats-idm_configuring-and-managing-idm.html#other-cert-commands_convert-cert-formats-idm "IdM 中与证书相关的命令和格式"){.xref}列出更多的
`ipa`{.literal} 命令以及命令接受的证书格式。
### []{#convert-cert-formats-idm_configuring-and-managing-idm.html#_user_authentication}用户身份验证
在使用 Web UI 访问 IdM
时，用户证明自己通过将两者都存储在浏览器的数据库中，证明自己拥有与证书对应的私钥。
当使用 CLI 访问 IdM
时，用户通过以下方法之一证明自己拥有与证书对应的私钥：
::: itemizedlist
-   用户添加连接到包含证书和密钥的智能卡模块的路径，作为
    `kinit -X`{.literal} 命令的 `X509_user_identity`{.literal}
    参数的值：
    ``` literallayout
    $ kinit -X X509_user_identity='PKCS11:opensc-pkcs11.so' idm_user
    ```
-   用户添加两个文件作为 `kinit -X`{.literal} 命令的
    `X509_user_identity`{.literal}
    参数的值，一个包含证书，另一个包含私钥：
    ``` literallayout
    $ kinit -X X509_user_identity='FILE:`/path/to/cert.pem,/path/to/cert.key`' idm_user
    ```
:::
### []{#convert-cert-formats-idm_configuring-and-managing-idm.html#_useful_certificate_commands}有用的证书命令
查看证书数据，如主题和签发者：
``` literallayout
$ openssl x509 -noout -text -in ca.pem
```
要比较两个证书在哪些行不同：
``` literallayout
$ diff cert1.crt cert2.crt
```
要通过两列中显示的输出来比较两个证书在哪些行不同：
``` literallayout
$ diff cert1.crt cert2.crt -y
```
:::
::: section
::: titlepage
# []{#convert-cert-formats-idm_configuring-and-managing-idm.html#convert-cert-to-load-to-user-profile-idm_convert-cert-formats-idm}将外部证书转换来加载到 IdM 用户帐户中 {.title}
:::
本节描述了如何确保在将外部证书添加到用户条目之前正确对其进行编码和格式化。
::: itemizedlist
**先决条件**
-   如果您的证书是由活动目录证书认证机构签发，并使用 `PEM`{.literal}
    编码的，请确保 `PEM`{.literal} 文件已转换为 `UNIX`{.literal}
    格式。要转换文件，请使用 eponymous 软件包提供的 `dos2unix`{.literal}
    工具。
:::
::: section
::: titlepage
## []{#convert-cert-formats-idm_configuring-and-managing-idm.html#convert-cert-to-load-to-user-profile-idm-cli}在 IdM CLI 中转换外部证书，并将其加载到 IdM 用户帐户中 {.title}
:::
`IdM CLI`{.literal} 只接受 `PEM`{.literal}
证书，从中删除了第一行和最后一行（\-\-\-\--BEGIN CERTIFICATE\-\-\-\-- 和
\-\-\-\--END CERTIFICATE\-\-\-\--）。
::: orderedlist
**流程**
1.  将证书转换为 `PEM`{.literal} 格式：
    ::: itemizedlist
    -   如果您的证书为 `DER`{.literal} 格式：
        ``` literallayout
        $ openssl x509 -in cert.crt -inform der -outform pem -out cert.pem
        ```
    -   如果您的文件为 `PKCS #12`{.literal} 格式，其常用文件扩展名为
        `.pfx`{.literal} 和
        `.p12`{.literal}，并且包含证书、私钥和其他数据，请使用
        `openssl pkcs12`{.literal}
        工具提取证书。提示时，输入保护存储在文件中的私钥的密码：
        ``` literallayout
        $ openssl pkcs12 -in cert_and_key.p12 -clcerts -nokeys -out cert.pem
        Enter Import Password:
        ```
    :::
2.  获取管理员凭证：
    ``` literallayout
    $ kinit admin
    ```
3.  使用 `IdM CLI`{.literal} 将证书添加到用户帐户中，按照以下方法之一：
    ::: itemizedlist
    -   在将字符串添加到 `ipa user-add-cert`{.literal}前，使用
        `sed`{.literal} 工具删除 `PEM`{.literal}
        文件的第一行和最后一行（\-\-\-\--BEGIN CERTIFICATE\-\-\-\-- 和
        \-\-\-\--END CERTIFICATE\-\-\-\--）：
        ``` literallayout
        $ ipa user-add-cert some_user --certificate="$(sed -e '/BEGIN CERTIFICATE/d;/END CERTIFICATE/d' cert.pem)"
        ```
    -   将没有第一行和最后一行（\-\-\-\--BEGIN CERTIFICATE\-\-\-\-- 和
        \-\-\-\--END CERTIFICATE\-\-\-\--）的证书文件的内容复制并粘贴到
        `ipa user-add-cert`{.literal} 命令中：
        ``` literallayout