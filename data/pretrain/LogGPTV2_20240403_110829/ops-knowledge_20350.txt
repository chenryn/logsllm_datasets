User: 请回答以下安全问题基于命名约定的漏洞利用《暴露的网络黑客》一书中有许多实例，攻击者基本上会使用命名约定中的模式来设计攻击。
有人能向我指出任何基于“命名约定”的安全/隐私利用研究吗。。。例如文件名、标识符名称（可能是javascript）、url参数等。？你会说，一般来说，此类漏洞（读取漏洞）仅限于网络应用吗？

Assistant: 主机名揭示了有趣的信息，例如潜在的代码汇（例如ldap1.internal.companname.com将是LDAPi，而db1.internal.com.panname.com则是SQLi）。这些可以使用host-extract.rb工具提取。
参数显示相同类型的信息，甚至可能说出有关查询类型的词语。例如，我经常看到ASC或DESC作为参数名称列出（尤其是在web应用中的排序按钮上），这将指示ORDER BY或GROUP BY注入类型。有时参数名称是sortby、groupby，或者可能是sortoorder，或者只是“order”或“group”。这些很能说明问题。
此外，有些被称为“limit”或“offset”，表示SQL查询的limit或offset部分。web应用评估员通常认为他或她正在向WHERE子句注入，但实际上可能在其他地方。
一些参数名称提供了其他提示，例如它们是整数还是字符串。
通常，SQLi利用工具，如sqlmap、Marathon和bsqlbf-v2，将允许您更具体地配置攻击查询，是的，了解当前参数键和值在测试它们时肯定会有所帮助，尤其是在盲SQLi测试期间！
文件名（通过路径公开）更为明显。它们可以用来辨别一个流行的开源（或者如果你读了很多代码，可能是封闭的源代码！）软件包或组件是否安装在网络服务器上。你通常可以进入具体的版本。InspathX和WhatWeb利用这些技术——InspathX来识别路径泄露漏洞和WhatWeb，好吧，让我们只说WhatWeb可以做很多事情！
由于我在这个答案中提到的大约一半的工具引用了YGN道德黑客小组现任成员制作的工具，你应该查看他们的研究区域和实验室（可从他们的主页访问）。
“Hacking Exposed Web Applications，2nd Edition”（注意，第三版已经出版，其中提供了额外的最新信息）的作者主要指的是自定义目录/文件暴力列表，以及直接对象引用（即OWASP T10强制浏览、OWASP T100限制URL访问失败、OWASP不安全直接对象引用或WASC TC可预测资源位置）。
换句话说，如果你看到这样的东西http://owaspbwa/external/你也可以检查是否存在http://owaspbwa/internal/或类似物。