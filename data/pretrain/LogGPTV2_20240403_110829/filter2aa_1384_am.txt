### 10.0.10.206:5900 - Login Failures

The following login attempts to `10.0.10.206:5900` have failed due to no available authentication types:

- **Password1** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Password2** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Password3** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Password1!** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Password2!** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Password3!** (Incorrect: No authentication types available: Your connection has been rejected.)
- **capsulecorp** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Capsulecorp1** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Capsulecorp2** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Capsulecorp3** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Capsulecorp1!** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Capsulecorp2!** (Incorrect: No authentication types available: Your connection has been rejected.)
- **Capsulecorp3!** (Incorrect: No authentication types available: Your connection has been rejected.)

**Summary of Scanning:**
- Scanned 2 of 2 hosts (100% complete)
- Auxiliary module execution completed

### Exercise 4.3: Discovering Weak Passwords

Use your preferred password-guessing tool (e.g., CrackMapExec, Medusa, or Metasploit) to identify weak passwords within your engagement scope. Organize your testing using protocol-specific lists to check web servers, database servers, Windows servers, and other network services that require authentication. Record any discovered credentials in your engagement notes as an authentication vulnerability, along with the IP address and network service.

### 4.4 Discovering Configuration Vulnerabilities

A network service is considered to have a configuration vulnerability when one of its settings enables an attack vector. For example, Apache Tomcat can be configured to allow the deployment of arbitrary web application archive (WAR) files via the web GUI. This allows an attacker who gains access to the web console to deploy a malicious WAR file and gain remote access to the host operating system, often with administrator-level privileges.

#### Web Servers and Code Execution

Web servers are often a prime target for code execution on internal networks. Large engagements may involve hundreds or even thousands of HTTP servers running various web applications. Many times, these web services come with default passwords that administrators may forget to change, presenting a golden opportunity for attackers to gain remote entry into restricted systems.

#### Using Webshot for Web Server Discovery

To efficiently discover and analyze web servers, you can use Webshot, a Ruby tool that takes nmap XML output and produces screenshots of every HTTP server it finds. Hereâ€™s how to set up and use Webshot:

1. **Clone the Webshot Repository:**
   ```sh
   ~$ git clone https://github.com/R3dy/webshot.git
   ```

2. **Change to the Webshot Directory:**
   ```sh
   ~$ cd webshot
   ```

3. **Install Required Ruby Gems:**
   ```sh
   ~$ bundle install
   ~$ gem install thread
   ```

4. **Download and Install libpng12:**
   ```sh
   ~$ wget http://security.ubuntu.com/ubuntu/pool/main/libp/libpng/libpng12-0_1.2.54-1ubuntu1.1_amd64.deb
   ~$ sudo dpkg -i libpng12-0_1.2.54-1ubuntu1.1_amd64.deb
   ```

5. **Run Webshot:**
   ```sh
   ~$ ./webshot.rb -t [nmap XML File] -o [Output Directory]
   ```

**Example Command:**
```sh
~$ ~/git/webshot/webshot.rb -t discovery/services/web.xml -o documentation/screenshots
```

#### Analyzing Webshot Output

After running Webshot, open a file browser and navigate to the output directory to view the thumbnail images of the web servers. This provides a quick overview of the web applications in use and helps identify potential targets, such as default Microsoft IIS 10, Apache Tomcat, XAMPP, and Jenkins servers.

#### Manually Guessing Web Server Passwords

Test commonly used default passwords on web applications, such as `admin/admin` and `admin/password`. For example, the default credentials for Apache Tomcat are `admin/tomcat`, and for Jenkins, they are `admin/password`.

**Tips:**
- Always try default credentials on any authentication prompt.
- Use Google and online forums to find default credentials and possible attack vectors.

#### Preparing for Focused Penetration

After identifying vulnerabilities, plan your penetration strategy. Focus on the path of least resistance and target identified vulnerabilities with controlled attack vectors. Ensure not to break anything during the process.

### Summary

- **Follow the Path of Least Resistance:** Check for LHF (Low Hanging Fruit) vulnerabilities and attack vectors.
- **Create a Custom Password List:** Tailor the list to the company you are engaging with.
- **Be Cautious of Account Lockouts:** Test credentials carefully, especially on Windows networks.
- **Use Webshot for Bulk Screenshots:** Quickly identify interesting web server targets.
- **Research New Services:** Learn about new services and their potential vulnerabilities.

### Phase 2: Focused Penetration

In this phase, you will compromise vulnerable hosts by deploying backdoor web shells, using techniques like Sticky Keys, and executing commands with Groovy scripts. The goal is to gain an initial foothold in the target environment and access restricted areas of the network.

**Key Activities:**
- Deploy backdoor web shells.
- Use Sticky Keys as a backdoor.
- Differentiate between interactive and non-interactive shells.
- Execute OS commands with Groovy scripts.

By the end of this phase, you will have a strong foothold in the target network, having compromised multiple level-one systems and prepared for the next phase: privilege escalation.