title:Losing control of the internet: using the data plane to attack the
control plane
author:Max Schuchard and
Abedelaziz Mohaisen and
Denis Foo Kune and
Nicholas Hopper and
Yongdae Kim and
Eugene Y. Vasserman
Losing Control of the Internet:
Using the Data Plane to Attack the Control Plane
Max Schuchard, Abedelaziz Mohaisen,
Denis Foo Kune, Nicholas Hopper,
Yongdae Kim
{schuch, mohaisen, foo, hopper, kyd} @
University of Minnesota
Minneapolis, MN
cs.umn.edu
Eugene Y. Vasserman
Kansas State University
Manhattan, KS
PI:EMAIL
Categories and Subject Descriptors: C.2.0 [COMPUTER COM-
MUNICATION NETWORKS]: Security and protection
General Terms: Security
Keywords: DDoS, BGP, botnet, Internet
ABSTRACT
In this work, we introduce the Coordinated Cross Plane Session
Termination, or CXPST, attack, a distributed denial of service at-
tack that attacks the control plane of the Internet. CXPST extends
previous work that demonstrates a vulnerability in routers that al-
lows an adversary to disconnect a pair of routers using only data
plane trafﬁc. By carefully choosing BGP sessions to terminate,
CXPST generates a surge of BGP updates that are seen by nearly
all core routers on the Internet. This surge of updates surpasses the
computational capacity of affected routers, crippling their ability to
make routing decisions.
1.
INTRODUCTION
The Internet can be divided into two distinct parts; the data
plane, which forwards packets to their destination, and the con-
trol plane, which determines the path to any given destination. The
control plane is designed to route around connectivity outages, re-
sulting in the Internet’s robustness to localized failure. This dura-
bility comes with a cost however: “local” events can have nearly
global impact on the control plane. An excess of such control plane
events can disrupt even core Internet routers. This disruption can
lead to network instability, resulting in a loss of connectivity and
data. There are several historical examples of such incidents stem-
ming from rare events, such as router mis-conﬁguration, hardware
failure, and as side-effects of a fast-propagating worm.
In this work, we introduce the Coordinated Cross Plane Session
Termination, or CXPST, attack, a new form of distributed denial
of service (DDoS) attack that attempts to exploit the global scope
of BGP updates to induce control plane instability on the Internet
as a whole. In order to artiﬁcially create control plane instability,
CXPST applies Zhang et al.’s [6] work on disrupting BGP sessions
between routers. Zhang et al. described how an unprivileged ad-
versary in control of a botnet can exploit the fact that the control
plane and data plane use the same physical medium; from here on
we will refer to this as the ZMW attack. This fate-sharing allows an
adversary to convince a BGP speaker that one of its BGP sessions
has failed. CXPST computes centrality measures of the network
Copyright is held by the author/owner(s).
CCS’10, October 4–8, 2010, Chicago, Illinois, USA.
ACM 978-1-4503-0244-9/10/10.
topology and uses this information to intelligently select a collec-
tion of BGP sessions to disrupt using the ZMW attack. This results
in waves of control plane instability which, because of the choice
of links, are broadcast globally. By exerting inﬂuence over the lo-
cation and times of failures, CXPST generates enough updates to
overwhelm the computational capacity of routers, crippling the In-
ternet’s control plane.
2. BACKGROUND
2.1
Inter-domain Routing and BGP
The Internet is composed of multiple networks called autonomous
systems (ASes), which relay trafﬁc to each other on behalf of their
customers. ASes are diverse, with a wide range of sizes and num-
bers of connections to other ASes. Some ASes have very high de-
grees of connectivity; these ASes are considered core ASes. Other
ASes have very low degrees of connectivity, sitting at the outskirts
of the Internet; these are fringe ASes. Fringe ASes require the as-
sistance of core ASes in order to route trafﬁc. The core ASes which
agree to forward trafﬁc on behalf of customers are termed transit
ASes. Routers must determine what series of ASes packets have to
traverse to reach their destinations. To this end, routers exchange
routing protocol messages advertising other ASes which are reach-
able through them. The Border Gateway Protocol (BGP) [1] is the
de facto standard routing protocol spoken by inter-AS routers.
2.2 BGP Stability and Network Performance
BGP is essentially a path vector routing algorithm with support
for custom policies. If the network changes, routes that no longer
exist will need to be withdrawn, new routes found, and routing
changes advertised to other parties. These other parties must do
the same, withdrawing routes, determining new routes, and adver-
tising changes. This behavior demonstrates a key fact: small local
changes are often seen globally by BGP speakers.
Instability in the control plane arising from network changes has
been shown to directly result in vast reductions in the performance
of the data plane [3, 5]. For example, when a router fails, paths
that pass through it will no longer function, and new routes need
to be found. Functioning routers will continue forwarding trafﬁc
towards the now non-existent router until they complete the process
of ﬁnding a new route. All trafﬁc directed toward the failed router
will be dropped. Data plane functionality is only restored after the
affected routers complete the processing of BGP messages. In the
case of large amounts of instability, the load on a router’s CPU is
increased dramatically, possibly exceeding the capacity of already
taxed route processors. This increased load translates into a longer
726turnaround time for processing decisions, which in turn extends the
duration of the data plane disruption.
2.3 Attacks on BGP Routers
Given the importance of routers and routing protocols, it is un-
surprising that there exists a large body of literature exploring their
weaknesses. Of particular interest to this work is a paper by Zhang,
Mao, and Wang [6] that looks at using brief targeted data plane
congestion to trick a pair of routers into disconnecting from each
other. In their attack, an unprivileged adversary indirectly interacts
with the control plane via the data plane. This is possible because
the data plane and the control plane are co-located. Because of this
co-location, congestion from data plane trafﬁc can cause the loss of
control plane trafﬁc. When resources are scarce, control trafﬁc and
data trafﬁc must share these limited resources. If enough consecu-
tive control plane packets are lost, the halt timer of a BGP session
will expire and the session will fail. When the BGP session fails,
all routes discovered via that session will have to be withdrawn and
new routes recalculated on both sides of the “failed” link. Zhang et
al. demonstrated in both hardware and software routers the ability
to successfully implement this attack.
3. CXPST
In order to create control plane instability, our attacker will apply
the ZMW attack [6]. As discussed in Section 2.3, ZMW uses data
trafﬁc to trick a pair of routers into disconnecting from each other.
This results in a set of route withdrawals, recalculations, and adver-
tisements. Interestingly, the control plane disruption generated is
not limited to the one set of withdrawals and advertisements. Since
the targeted link is no longer used by routes after the BGP session
fails, no trafﬁc will utilize the link. This allows the two attacked
routers to communicate with each other once more, as the link will
no longer be congested with attack trafﬁc. The targeted routers
will, after a small amount of time, re-establish their BGP session.
This will result in further BGP updates as the routes that were just
withdrawn are re-advertised. Bot trafﬁc will once again shift to the
targeted link as the previous routes become utilized once more, and
the attack resumes without any intervention from the attacker. The
targeted BGP session will again be destroyed and the cycle repeats
itself. In essence, CXPST induces targeted route ﬂapping.
While the two routers attacked will be most impacted, routers
not directly attacked will be affected as well. As mentioned in Sec-
tion 2.2, BGP updates that result from local changes tend to be
broadcast on a global scale. By creating a series of localized fail-
ures that have near global impact, CXPST overwhelms the compu-
tational capacity of a large set of routers on the Internet.
3.1 Selecting Targets
P
Maximizing control plane disruption is equivalent to maximiz-
ing the number of BGP update messages that are generated as a
result of link failures. Centrality measures from graph theory pro-
vide a good starting point for building a heuristic to govern target
selection. Our method of selection uses a slightly modiﬁed ver-
sion of edge betweenness as a metric. Normally edge betweenness
σst(e)
is deﬁned as: CB(e) =
σst where σst is the num-
ber of shortest paths between nodes s and t, and σst(e) is the
number of those paths that contain the edge e. BGP does not al-
ways use the shortest path between two ASes however. Because of
this we use a modiﬁed deﬁnition of edge betweenness: CB(e) =
P
s(cid:2)=t∈V pathst(e) where pathst(e) is the number of BGP paths
between IP blocks in s and t that use link e. Since each of these
routes must be individually withdrawn, recomputed, and re-advertised
this will provide an approximation of the number of BGP messages
s(cid:2)=t∈V
generated if the link were to fail. Consequently, target links are
ranked in order of their “BGP Betweenness”.
Another reason to use BGP betweenness is that our attacker pos-
sesses the resources to measure it. Our attacker controls a botnet
distributed across the Internet, this provides him with a large num-
ber of distinct vantage points. Bots can perform traceroutes from
themselves to a large set of nodes in separate networks and report
the results. By aggregating the results an attacker can generate a
rough measure of the BGP betweenness of links. Each time we
see an edge in our aggregated traceroute data set, it represents an
individual route that crosses a given link.
3.2 Dealing With Changing Topology
CXPST actively changes network topology. The attacker must
select which bots will attempt to attack a given link with this in
mind. Instead of simply checking that a given path contains the
target link, the attacker must ensure that the path does not contain
other links that are being targeted as well. By doing this, when
links targeted by CXPST fail, attack trafﬁc will not be re-routed.
Attack trafﬁc can still be re-routed because of the unintended
disruption of a non-targeted link. In order to counter this, an at-
tacker should send more attack trafﬁc toward a targeted link then is
needed to congest it. This “safety net” will allow some amount of
attack trafﬁc to be diverted because of network dynamics without
relaxing pressure on targeted links.
3.3 Fixing the Flow Issue
Our attacker will typically have more bots able to attack a given
link than needed. Care must be taken when selecting a subset of
these bots to attack the link. In order to minimize the amount of
congestion prior to reaching the targeted link, the attacker should
keep the attack trafﬁc dispersed until it reaches the target. When