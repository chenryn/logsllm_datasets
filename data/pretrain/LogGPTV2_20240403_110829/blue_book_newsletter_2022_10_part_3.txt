    | Combination             | Total Price        |
    | ---                     | ---                |
    | IronWolf + IronWolf Pro | 958$               |
    | IronWolf + Exos 7E8     | 1004$ (+46$ +4.5%) |
    | IronWolf Pro + Exos 7E8 | 1062$ (+54$ +5.4%) |
    In terms of:
    * Consumption: both IronWolfs are equal, the Exos uses 2.7W more on
        normal use and uses 0.2W less on rest.
    * Warranty: IronWolf has only 3 years, the others 5.
    * Speed: Ironwolf has 210MB/s, much less than the Pro (255MB/s) and Exos
        (249MB/s), which are more similar.
    * Sostenibility: The Exos disks are much more robust (more workload, MTBF and
        Warranty).
    I'd say that for 104$ it makes sense to go with the IronWolf Pro + Exos 7E8
    combination.
* New: [Choosing the disks for the cache.](zfs.md#choosing-the-disks-for-the-cache)
    Using a ZLOG greatly improves the [writing speed](https://www.servethehome.com/exploring-best-zfs-zil-slog-ssd-intel-optane-nand/), equally using an SSD disk for the L2ARC cache improves the read speeds and improves the health of the rotational disks.
    The best M.2 NVMe SSD for NAS caching are the ones that have enough capacity to
    actually make a difference to overall system performance. It also requires
    a good endurance rating for better reliability and longer lifespan, and you
    should look for a drive with a specific NAND technology if possible.
    I've made an analysis based on:
    * [Cache disk NAND technology](zfs.md#cache-disk-nand-technology)
    * [DWPD](zfs.md#dwpd)
    As conclusion, I’d recommend the Western Digital Red SN700, which has a good 1 DWPD
    endurance rating, is available in sizes up to 4TB, and is using SLC NAND
    technology, which is great for enhancing reliability through heavy caching
    workloads. A close second place goes to the Seagate IronWolf 525, which has
    similar specifications to the SN700 but utilizes TLC.
    | Disk            | Size   | Speed    | Endurance | Warranty | Tech | Price |
    | ---             | ---    | ---      | ---       | ---      | ---  | ---   |
    | WD Red SN700    | 500 GB | 3430MB/s | 1 DWPD    | 5 years  | SLC  | 73$   |
    | SG IronWolf 525 | 500 GB | 5000MB/s | 0.8 DWPD  | 5 years  | TLC  | ?     |
    | WD Red SN700    | 1 TB   | 3430MB/s | 1 DWPD    | 5 years  | SLC  | 127$  |
    | SG IronWolf 525 | 1 TB   | 5000MB/s | 0.8 DWPD  | 5 years  | TLC  | ?     |
* New: [Choosing the cold spare disks.](zfs.md#choosing-the-cold-spare-disks)
    It's good to think how much time you want to have your raids to be inconsistent
    once a drive has failed.
    In my case, for the data I want to restore the raid as soon as I can, therefore
    I'll buy another rotational disk. For the SSDs I have more confidence that they
    won't break so I don't feel like having a spare one.
## Hardware
### [CPU](cpu.md)
* New: Introduce CPU, attributes and how to buy it.
    [A central processing unit or CPU](https://en.wikipedia.org/wiki/Central_processing_unit), also known as the brain of the server, is the electronic circuitry that executes instructions comprising a computer program. The CPU performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program.
* New: [Add the market analysis.](cpu.md#market-analysis)
* New: [Analyze the cpu coolers.](cpu.md#cpu-coolers)
* New: [Analyze the use of cpu thermal paste.](cpu.md#cpu-thermal-paste)
    Thermal paste is designed to minimize microscopic air gaps and irregularities
    between the surface of the cooler and the CPU's IHS (integrated heat spreader),
    the piece of metal which is built into the top of the processor.
    Good thermal paste can have a profound impact on your performance, because it
    will allow your processor to transfer more of its waste heat to your cooler,
    keeping your processor running cool.
    Most pastes are comprised of ceramic or metallic materials suspended within
    a proprietary binder which allows for easy application and spread as well as
    simple cleanup.
    These thermal pastes can be electrically conductive or non-conductive, depending
    on their specific formula. Electrically conductive thermal pastes can carry
    current between two points, meaning that if the paste squeezes out onto other
    components, it can cause damage to motherboards and CPUs when you switch on the
    power. A single drop out of place can lead to a dead PC, so extra care is
    imperative.
    Liquid metal compounds are almost always electrically conductive, so while these
    compounds provide better performance than their paste counterparts, they require
    more focus and attention during application. They are very hard to remove if you
    get some in the wrong place, which would fry your system.
    In contrast, traditional thermal paste compounds are relatively simple for every
    experience level. Most, but not all, traditional pastes are electrically
    non-conductive.
    Most cpu coolers come with their own thermal paste, so check yours before buying
    another one.
### [RAM](ram.md)
* New: Introduce RAM, it's properties and how to buy it.
    [RAM](https://en.wikipedia.org/wiki/Random-access_memory) is a form of computer
    memory that can be read and changed in any order, typically used to store
    working data and machine code.
### [Power Supply Unit](psu.md)
* New: Introduce Power Supply Unit.
    [Power supply unit](https://linuxhint.com/pc-power-supply-unit/) is the component
    of the computer that sources power from the primary source (the power coming
    from your wall outlet) and delivers it to its motherboard and all its
    components. Contrary to the common understanding, the PSU does not supply power
    to the computer; it instead converts the AC (Alternating Current) power from the
    source to the DC (Direct Current) power that the computer needs.
    There are two types of PSU: Linear and Switch-mode. Linear power supplies have
    a built-in transformer that steps down the voltage from the main to a usable one
    for the individual parts of the computer. The transformer makes the Linear PSU
    bulky, heavy, and expensive. Modern computers have switched to the switch-mode
    power supply, using switches instead of a transformer for voltage regulation.
    They’re also more practical and economical to use because they’re smaller,
    lighter, and cheaper than linear power supplies.
    PSU need to deliver at least the amount of power that each component requires,
    if it needs to deliver more, it simply won't work.
    Another puzzling question for most consumers is, “Does a PSU supply constant
    wattage to the computer?” The answer is a flat No. The wattage you see on the
    PSUs casing or labels only indicates the maximum power it can supply to the
    system, theoretically. For example, by theory, a 500W PSU can supply a maximum
    of 500W to the computer. In reality, the PSU will draw a small portion of the
    power for itself and distributes power to each of the PC components according to
    its need. The amount of power the components need varies from 3.3V to 12V. If
    the total power of the components needs to add up to 250W, it would only use
    250W of the 500W, giving you an overhead for additional components or future
    upgrades.
    Additionally, the amount of power the PSU supplies varies during peak periods
    and idle times. When the components are pushed to their limits, say when a video
    editor maximizes the GPU for graphics-intensive tasks, it would require more
    power than when the computer is used for simple tasks like web-browsing. The
    amount of power drawn from the PSU would depend on two things; the amount of
    power each component requires and the tasks that each component performs.
    I've also added the next sections:
    * [Power supply efficiency](psu.md#power-supply-efficiency)
    * [Power supply shopping tips](psu.md#power-supply-shopping-tips)
    * [Market analysis](psu.md#market-analysis)
# Operating Systems
## Linux
### [i3wm](i3wm.md)
* New: Introduce i3wm.
    [i3](https://i3wm.org/) is a tiling window manager.
* New: [Layout saving.](i3wm.md#layout-saving)
    Layout saving/restoring allows you to load a JSON layout file so that you can
    have a base layout to start working with after powering on your computer.
    First of all arrange the windows in the workspace, then you can save the layout
    of either a single workspace or an entire output:
    ```bash
    i3-save-tree --workspace "1: terminal" > ~/.i3/workspace-1.json
    ```
    You need to open the created file and remove the comments that match the desired
    windows under the `swallows` keys, so transform the next snippet:
    ```json
        ...
        "swallows": [
            {
            //  "class": "^URxvt$",
            //  "instance": "^irssi$"
            }
        ]
        ...
    ```
    Into:
    ```json
        ...
        "swallows": [
            {
                "class": "^URxvt$",
                "instance": "^irssi$"
            }
        ]
        ...
    ```
    Once is ready close all the windows of the workspace you want to restore (moving
    them away is not enough!).
    Then on a terminal you can restore the layout with:
    ```bash
    i3-msg 'workspace "1: terminal"; append_layout ~/.i3/workspace-1.json'
    ```
    !!! warning "It's important that you don't use a relative path"
        Even if you're in `~/.i3/` you have to use `i3-msg append_layout
        ~/.i3/workspace-1.json`.
    This command will create some fake windows (called placeholders) with the layout you had before, `i3`
    will then wait for you to create the windows that match the selection criteria.
    Once they are, it will put them in their respective placeholders.
    If you wish to create the layouts at startup you can add the next snippet to
    your i3 config.
    ```
    exec --no-startup-id "i3-msg 'workspace \"1: terminal\"; append_layout ~/.i3/workspace-1.json'"
    ```
### [Khal](khal.md)
* New: Introduce khal.
    [`khal`](https://khal.readthedocs.io/en/latest/index.html) is a standards based
    Python CLI (console) calendar program, able to synchronize with [CalDAV](http://en.wikipedia.org/wiki/CalDAV) servers through
    [`vdirsyncer`](vdirsyncer.md).
    Features:
    * Can read and write events/icalendars to vdir, so [`vdirsyncer`](vdirsyncer.md)
        can be used to synchronize calendars with a variety of other programs, for
        example CalDAV servers.
    * Fast and easy way to add new events
    * `ikhal` (interactive `khal`) lets you browse and edit calendars and events.
    Limitations:
    * Only rudimentary support for creating and editing recursion rules
    * You cannot edit the timezones of events
* New: [Edit the events in a more pleasant way.](khal.md#edit-the-events-in-a-more-pleasant-way)
    The `ikhal` event editor is not comfortable for me. I usually only change the
    title or the start date and in the default interface you need to press many
    keystrokes to make it happen.
    A patch solution is to pass a custom script on the `EDITOR` environmental
    variable. Assuming you have [`questionary`](questionary.md) and [`ics`](ics.md)
    installed you can save the next snippet into an `edit_event` file in your
    `PATH`:
    ```python
    """Edit an ics calendar event."""
    import sys
    import questionary
    from ics import Calendar
    file = sys.argv[1]
    with open(file, "r") as fd:
        calendar = Calendar(fd.read())
    event = list(calendar.timeline)[0]
    event.name = questionary.text("Title: ", default=event.name).ask()
    start = questionary.text(
        "Start: ",
        default=f"{str(event.begin.hour).zfill(2)}:{str(event.begin.minute).zfill(2)}",
    ).ask()
    event.begin = event.begin.replace(
        hour=int(start.split(":")[0]), minute=int(start.split(":")[1])
    )
    with open(file, "w") as fd:
        fd.writelines(calendar.serialize_iter())
    ```
    Now if you open `ikhal` as `EDITOR=edit_event ikhal`, whenever you edit one
    event you'll get a better interface. Add to your `.zshrc` or `.bashrc`:
    ```bash
    alias ikhal='EDITOR=edit_event ikhal'
    ```
    The default keybinding for the edition is not very comfortable either, add the
    next snippet on your config:
    ```ini
    [keybindings]
    external_edit = e
    export = meta e
    ```
### [LUKS](luks.md)
* New: [Break a luks password.](luks.md#break-a-luks-password)
    You can use [`bruteforce-luks`](https://github.com/glv2/bruteforce-luks)
### [vdirsyncer](vdirsyncer.md)
* New: Introduce vdirsyncer.
    [vdirsyncer](https://vdirsyncer.pimutils.org/en/stable/) is a Python
    command-line tool for synchronizing calendars and addressbooks between a variety
    of servers and the local filesystem. The most popular usecase is to synchronize
    a server with a local folder and use a set of other programs such as
    [`khal`](khal.md) to change the local events and contacts. Vdirsyncer can then
    synchronize those changes back to the server.
    However, `vdirsyncer` is not limited to synchronizing between clients and
    servers. It can also be used to synchronize calendars and/or addressbooks
    between two servers directly.
    It aims to be for calendars and contacts what OfflineIMAP is for emails.
# Arts
## Video Gaming
### [King Arthur Gold](kag.md)
* New: [Builder guides.](kag.md#builder-guides)
    [Turtlebutt and Bunnie](https://deynarde.github.io/kag-builder-guide)
    guide is awesome.