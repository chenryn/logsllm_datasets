table definitions. These issues need to be resolved on a case by case basis as discussed
earlier in this section.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 478
EDB Postgres Replication Server User’s Guide
Figure 7-89 - List of publications with modified tables
7.6.6 Removing a Publication
In a single-master replication system, a publication can be removed before its associated
subscriptions are removed. See Section 5.5.5 for directions to remove a subscription.
In a multi-master replication system, the publication is removed from under the
Publication Database node representing the master definition node. Before a publication
can be removed, all non-MDN nodes must be removed. See Section 7.6.7 for directions
to remove a publication database definition of a master node.
Removing a publication does not delete the publication tables in the publication database.
It removes the identity and association of these tables to xDB Replication Server so the
tables remain in the database until the DBA deletes them with the DROP TABLE SQL
statement.
The publication database user name is also left intact along with some of the xDB
Replication Server metadata database objects. Shadow tables and triggers associated with
the publication tables that were created by the publication server are deleted when the
publication is removed. The remaining metadata database objects are deleted when the
publication database definition is removed.
Step 1: Make sure the publication server whose node is the parent of the publication you
wish to remove is running and has been registered in the xDB Replication Console you
are using. See Section 5.2.1 for directions on starting and registering a publication server.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 479
EDB Postgres Replication Server User’s Guide
Step 2 (For SMR only): Select the Publication node of the publication that you wish to
remove.
Step 2 (For MMR only): Select the Publication node under the Publication Database
node representing the master definition node.
Figure 7-90 - Selecting a publication to remove
Step 3: Remove the publication in any of the following ways:
 Choose Remove Publication from the Publication menu.
 Click the secondary mouse button on the Publication node and choose Remove
Publication.
 Click the primary mouse button on the Remove Publication icon.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 480
EDB Postgres Replication Server User’s Guide
Figure 7-91 - Removing the publication using the menu bar
Step 4: In the Remove Publication confirmation box, click the Yes button.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 481
EDB Postgres Replication Server User’s Guide
Figure 7-92 - Remove Publication confirmation
The Publication node no longer appears under the Publication Database node.
Figure 7-93 - Replication tree after removing a publication
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 482
EDB Postgres Replication Server User’s Guide
7.6.7 Removing a Publication Database
Deleting a publication database definition from xDB Replication Server is equivalent to
removing its Publication Database node.
If the Publication Database node to be removed is currently designated as the controller
database, and there are additional publication databases in other single-master or multi-
master replication systems, then you must first switch the controller database role to
another publication database. See Section 7.7 for information on switching the controller
database.
If the Publication Database node to be removed is the only remaining publication
database (that is, there are no other single-master or multi-master replication systems),
then this database can remain as the controller database since there is no other publication
database available to be designated as the controller database. However, any existing
subscription database definition must be removed before removing the last Publication
Database node.
In a single-master replication system, before a Publication Database node can be
removed, all publications under that Publication Database node must be removed. See
Section 7.6.6 for directions on removing a publication.
In a multi-master replication system, removing a Publication Database node representing
a master node (other than the master definition node), eliminates that node’s future
participation in the replication system. Synchronization replications no longer involve
tables in the removed master node.
In a multi-master replication system, removing the Publication Database node
representing the master definition node removes the remaining metadata database objects
of that particular multi-master replication system, effectively removing the multi-master
replication system (except for the database objects comprising the publication tables).
Removing the Publication Database node representing the master definition node entails
the following steps:
 If the multi-master replication system is the only xDB replication system (that is,
there are no single-master replication systems), then switch the controller
database to the master definition node if the designated controller database is not
currently the same database as the master definition node.
 If there are one or more single-master replication systems in addition to the multi-
master replication system, switch the controller database to a Postgres publication
database of a single-master replication system. If none of the single-master
publication databases is of type Postgres, and there are more than one Oracle or
SQL Server publication databases, then you must create a Postgres publication
database for a single-master replication system just for the purpose of designating
it as the controller database.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 483
EDB Postgres Replication Server User’s Guide
 All Publication Database nodes representing non-MDN nodes must be removed.
Repeat the process described in this section for each such master node.
 The publication under the Publication Database node representing the master
definition node must be removed. See Section 7.6.6 for directions on removing a
publication.
 Remove the Publication Database node representing the master definition node
using the process described in this section.
Removing a Publication Database node does not delete the physical database from the
database server. It removes the identity and association of the database to xDB
Replication Server so no further replications can originate from tables in the database
unless there are other publication database definitions in xDB Replication Server with the
same host and database identifier. The physical database can only be removed using the
database management system’s database removal procedures.
The publication database user name is also left intact.
All xDB Replication Server metadata database objects created for that publication
database definition are deleted.
For Oracle and SQL Server: All metadata database objects under the publication
database user’s schema are deleted.
For Postgres only: The schema _edb_replicator_pub and all of its database objects
are deleted from the publication database.
The following are the steps to remove the Publication Database node and equivalently,
the publication database definition:
Step 1: Make sure the publication server whose node is the parent of the publication
database definition you wish to remove is running and has been registered in the xDB
Replication Console you are using. See Section 5.2.1 for directions on starting and
registering a publication server.
Step 2: Select the Publication Database node that you wish to remove.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 484
EDB Postgres Replication Server User’s Guide
Figure 7-94 - Selecting a publication database definition for removal
Step 3: From the Publication menu, choose Publication Database, then Remove
Database. Alternatively, click the secondary mouse button on the Publication Database
node and choose Remove Database. The Remove Publication Database confirmation box
appears.
Step 4: In the Remove Publication Database confirmation box, click the Yes button.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 485
EDB Postgres Replication Server User’s Guide
Figure 7-95 - Remove Publication Database confirmation
The Publication Database node no longer appears under the Publication Server node.
Figure 7-96 - Replication tree after removing a publication database
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 486
EDB Postgres Replication Server User’s Guide
7.7 Switching the Controller Database
The controller database is designated in the xDB Replication Configuration file and
determines the publication database to which the publication server and subscription
server initially connect upon startup. See Section 2.3.1.12 for information on the
controller database. See Section 2.3.1.3 for information on the xDB Replication
Configuration file.
The current controller database cannot be removed from a replication system unless it is
the last publication database remaining subordinate to the publication server. (That is,
there are no other publication databases managed by the publication server.)
If there are more than one publication databases, and you wish to remove the publication
database currently designated as the controller database, you must first set another
publication database as the controller, and then you can remove the publication database
previously designated as the controller.
The publication database used as the controller can be the master database of any single-
master replication system or any master node of a multi-master replication system. Any
database type (Oracle, SQL Server, or Postgres) is acceptable as the controller database.
Note: If the controller database is an Oracle or a SQL Server publication database, then a
second Oracle or SQL Server publication database cannot be added to create a second
single-master replication system. In order for xDB Replication Server to run more than
one single-master replication systems consisting of Oracle or SQL Server publication
databases, a Postgres publication database must be designated as the controller database.
Once you have multiple Oracle or SQL Server publication databases set up in single-
master replication systems with a Postgres controller database, do not switch the
controller database to an Oracle or SQL Server publication database.
Upon switching the controller database, the publication server updates the xDB
Replication Configuration file so the parameters user, password, host, port,
database, and type are set to the connection and authentication settings for the
selected publication database.
The following are the steps to set another publication database as the controller database.
Step 1: Make sure the publication server whose node is the parent of the publication
databases is running and has been registered in the xDB Replication Console you are
using. See Section 5.2.1 for directions on starting and registering a publication server.
Step 2: Select the Publication Database node corresponding to the publication database
that you wish to set as the controller database.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 487
EDB Postgres Replication Server User’s Guide
Figure 7-97 - Selecting the publication database to set as the controller database
Step 3: Click the secondary mouse button on the Publication Database node and choose
Set as Controller database.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 488
EDB Postgres Replication Server User’s Guide
Figure 7-98 - Setting the controller database
Step 4: In the Set as Controller database confirmation box, click the Yes button.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 489
EDB Postgres Replication Server User’s Guide
Figure 7-99 - Set as Controller database confirmation
Step 5: The selected publication database has now been set as the controller database.
Figure 7-100 - Publication database promoted to controller database
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 490
EDB Postgres Replication Server User’s Guide
Step 6: The value Yes in the Controller database field of the Property window indicates
this database is the controller database.
Figure 7-101 - Controller database indicated by ‘Yes’ in the Property window
The following shows the xDB Replication Configuration file after the controller database
has been switched to the master node database mmrnode_b.
#xDB Replication Server Configuration Properties
#Thu Oct 15 14:42:35 GMT-05:00 2015
port=5444
admin_password=ygJ9AxoJEX854elcVIJPTw\=\=
user=mmruser
admin_user=admin
type=enterprisedb
database=mmrnode_b
password=ygJ9AxoJEX854elcVIJPTw\=\=
host=192.168.2.22
7.8 Replicating DDL Changes
Once a replication system has been created and is in operation, there may be occasions
where it is necessary to make changes to the publication table definitions. These data
definition language (DDL) changes may include the following:
 Adding new columns to a table
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 491
EDB Postgres Replication Server User’s Guide
 Renaming existing columns
 Modifying a column data type
 Modifying a column constraint
 Removing columns
Note: See Section 7.6.5 for information on dealing with other types of table definition
changes.
Table definition changes are generally implemented using the SQL ALTER TABLE
statement, which is issued in an SQL command line utility program such as PSQL.
The DDL change replication feature accepts one or more ALTER TABLE statements. The
statements may be provided by means of a text file or by entering them directly into the
Alter Publication Table dialog box. The latter can be done by copying and pasting the
statements into the dialog box, or by directly typing in the statements. The DDL change
replication feature then performs the following actions:
 Applies the ALTER TABLE statements to the appropriate target table in the
publication and subscription databases of a single-master replication system, or in
all master nodes (including the master definition node) of a multi-master
replication system.
 For the trigger-based method of synchronization replication, modifies the
insert/update/delete triggers that add data into the shadow table whenever a
transaction occurs on the target table.
 For the trigger-based method of synchronization replication, modifies the shadow
table to properly accommodate the target table changes.
The DDL change replication feature is supported for Oracle and SQL Server subscription
databases as well as Postgres subscription databases. However, the publication database
must always be a Postgres database.
The syntax of the ALTER TABLE statement accepted by the DDL change replication
features is as follows:
ALTER TABLE schema.table_name action
where action can be any of the following:
Rename an existing column:
RENAME [ COLUMN ] column_name TO new_column_name
Add a column to the table:
ADD [ COLUMN ] column_name data_type
[ DEFAULT dflt_expr ]
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 492
EDB Postgres Replication Server User’s Guide
[ column_constraint_1 [ column_constraint_2 ] ...]
Drop a column from the table:
DROP [ COLUMN ] column_name [ RESTRICT ]
Change the data type of a column:
ALTER [ COLUMN ] column_name [ SET DATA ] TYPE data_type
[ COLLATE "collation" ]
[ USING data_type_expr ]
Set the DEFAULT value of a column:
ALTER [ COLUMN ] column_name SET DEFAULT dflt_expr
Note: The SET DEFAULT clause is not supported when Oracle or SQL Server is the
subscription database.
Drop the DEFAULT value of a column:
ALTER [ COLUMN ] column_name DROP DEFAULT
Note: The DROP DEFAULT clause is not supported when Oracle or SQL Server is the
subscription database.
Set the column to reject null values:
ALTER [ COLUMN ] column_name SET NOT NULL
Note: The SET NOT NULL clause is not supported when SQL Server is the subscription
database.
Allow the column to accept null values:
ALTER [ COLUMN ] column_name DROP NOT NULL
Note: The DROP NOT NULL clause is not supported when SQL Server is the subscription
database.
The following restrictions apply to the manner in which the ALTER TABLE statements
are specified whether it is in a text file or entered directly into the dialog box:
 Each ALTER TABLE statement must be terminated by a semicolon and begin on a
separate line.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 493
EDB Postgres Replication Server User’s Guide
 Although the Postgres ALTER TABLE statement allows multiple actions per
statement, the xDB DDL change replication feature permits only one action per
ALTER TABLE statement.
 The target table of all ALTER TABLE statements must be the same.
 The DROP COLUMN action cannot be specified for a column that comprises part of
the table’s primary key.
Parameters
schema
The name of the schema containing table_name. This value is case-sensitive.
table_name
The name of the table containing the column to be added, modified, or dropped.
This value is case-sensitive.
column_name
The name of the column to be added, modified, or dropped.
new_column_name
The new name of the column specified in the RENAME COLUMN clause.
data_type
The data type of the column.
dflt_expr
An expression for the default value of the column.
column_constraint_n
A column constraint such as a UNIQUE or CHECK constraint. For additional
information on column constraints see the CREATE TABLE SQL command in the
PostgreSQL Core Documentation located at:
https://www.postgresql.org/docs/current/static/sql-createtable.html
RESTRICT
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 494
EDB Postgres Replication Server User’s Guide
In the DROP COLUMN clause, do not drop the column if there are objects
dependent upon it. This is the default. Note: You cannot specify the CASCADE
option as it is not supported by the DDL change replication feature.
collation
Collation assigned to the column. If omitted, the column data type’s default
collation is used. Examples of collation are default, C, POSIX, en_US, en_GB,
or de_DE.
data_type_expr
An expression specifying how the column value with the new data type is to be
converted from the column value with the old data type. This expression may
reference other columns in the same table. If omitted, the default conversion is an
assignment cast from the old data type to the new data type.
Examples
The following are examples of ALTER TABLE statements that can be used by the DDL
change replication feature.
The following set of ALTER TABLE statements, either specified by a text file or entered