peaks around typical capacities for broadband access in USA (e.g. 192Kbps, 1.5Mbps),
within some marginal error due to the packet pair estimation technique.
5 NPQ Prediction
The NPQ probing technique that Halo 3 uses consists of 16 packets per console being
probed (4 packet pairs in each direction). However, there can be many candidate hosts
for a game. For scalability and to minimize user wait time, we want to reduce the total
number of probes and hence propose the use of NPQ predictors. Our goal is to estimate
apriori if a console has good NPQ to a remote candidate host console, without doing a
probe. If bad NPQ is predicted, then this candidate should not be probed. If good NPQ
is predicted, then limited probing can be done (e.g. only 1 packet pair). If no prediction
can be made, standard probing should ensue. Based on our analysis of the NPQ data,
we now propose and evaluate three NPQ predictors.
5.1 IP History Predictor
We hypothesize that a probe between a pair of consoles at time t1 produces an NPQ
estimate that is still valid at a later time t2. This may be true if the median RTT and
average upstream and downstream bottleneck capacities do not vary signiﬁcantly over
a period of δ = t2 − t1. To test this hypothesis, and estimate how large δ can be, we
examine NPQ data for pairs of IP addresses over different periods of time.
Figure 8 shows the CDF of the coefﬁcient of variation (CV) in RTT for pairs of IP
addresses over different time windows. For instance, the “Within 5 min” line shows the
CV of RTTs from probes between the same pair of IP addresses within any 5 minute
window. To draw meaningful conclusions, we consider only those IP pairs that probed
each other at least 5 times during that period. We have plotted similar lines for 30 min-
utes, 6 hours, 1 day and the entire 50 day trace (the line labeled ”no constraints”). The
lines for all 5 time windows overlap with each other. For over 90% of IP address pairs
that probed each other at least 5 times, the variation in RTT estimates was minuscule
(CV under 0.2), even up to a δ of 50 days. For comparison we plot the “baseline” -
instead of considering CV for each pair of IPs, we consider the CV for each single IP.
46
Y. Lee et al.
)
s
P
I
t
s
d
-
c
r
s
(
.
q
e
r
f
e
v
i
t
a
u
m
u
c
l
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Within 5 min
Within 30 min
Within 6 hr
Within 1 day
No Constraints
Baseline
)
s
P
I
t
s
d
-
c
r
s
(
.
q
e
r
f
e
v
i
t
a
u
m
u
c
l
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Within 5 min
Within 30 min
Within 6 hr
Within 1 day
No Constraints
Baseline
1
0
.
2
0
.
3
0
.
.
4
0
.
5
0
.
6
0
.
7
0
.
8
0
.
91
0
1
1
.
2
1
.
.
3
1
.
4
1
.
5
1
.
6
1
.
7
1
8
1
.
92
1
.
1
0
.
2
0
.
3
0
.
4
0
.
5
0
.
6
0
.
7
0
.
8
0
.
e
r
o
M
coefficient of variation
coefficient of variation
91
0
.
1
1
.
2
1
.
3
1
.
4
1
.
5
1
.
6
1
.
7
1
.
8
1
.
92
1
.
e
r
o
M
Fig. 8. RTT variation for IP pairs
Fig. 9. Capacity variation for IP pairs
That is, for each IP address, the CV across all RTT estimates where this IP address was
involved, across the entire trace. This line is well below the others, indicating that the
RTTs are spread across a wide range. We conclude that the IP History Predictor can
perform quite well for predicting RTT, and the δ can be as large as 50 days.
Figure 9 has the same graph for downstream capacity. The upstream capacity graph is
very similar and is omitted for conciseness. Again, δ does not affect the NPQ prediction.
While the CV is larger, it is under 0.65 for 90% of the IP pairs, and is still much higher
than the “baseline”. Thus we believe the IP History Predictor adequately predicts the
NPQ between a pair of consoles based on an NPQ estimate from a prior probe.
5.2 Preﬁx History Predictor
We have shown the IP History Predictor to work only when pairs of consoles have
probed each other in the past. This may reduce the number of probes in only a limited
set of cases. Thus we now propose the Preﬁx History Predictor - this is similar to the IP
History predictor, except it uses IP preﬁx pairs. We hypothesize that a probe between a
pair of consoles A1 and B1 at time t1 produces an NPQ estimate that is still valid at a
later time t2 for a different pair of consoles A2 and B2, as long as A1 and A2 belong to
one BGP preﬁx, and B1 and B2 belong to one BGP preﬁx.
This predictor may be accurate if consoles in the same preﬁx share similar last mile
access. However, broadband ISPs offer several access packages (e.g., 192Kbps DSL or
1.5Mbps DSL), and the preﬁx may indicate geographic location more than link speed.
Thus, predictions for capacity may be less accurate than for RTT. We now analyze NPQ
data for pairs of IP preﬁxes that probed each other at least 5 times. We ﬁnd a console’s
preﬁx by a longest preﬁx match against the 12/27/2007 RouteViews BGP table [8].
Figure 10 shows the performance of this predictor for delay, and can be compared to
Figure 8. When considering preﬁx pairs, δ has a bigger impact - the older the original
probe, the worse the prediction. Since CV is a relative metric, small variations in small
RTTs (e.g. 5ms versus 10ms) can produce a large CV. Thus in Figure 11 we look at the
semi-interquartile range (SIQR) of RTT estimates for preﬁx pairs for no limit on δ (i.e.,
the “no constraints” case). For 90% of preﬁx pairs, the SIQR is under 40ms. Thus it is
the outliers beyond the 25%-75% SIQR that contribute to this additional variability.
Figure 12 shows the performance of this predictor for downstream capacity estima-
tion. For δ beyond 5 minutes, it is a very poor predictor. We suspect this is due to
different subscription levels of last mile capacity within the same preﬁx.
Measurement and Estimation of Network QoS Among Peer Xbox 360 Game Players
47
)
s
e
x
i
f
e
r
p
t
s
d
-
c
r
s
(
.
q
e
r
f
e
v
i
t
a
u
m
u
c
l
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Within 5 min
Within 30 min
Within 6 hr
Within 1 day
No Constraints
Baseline
)
s
e
x
i
f
e
r
p
t
s
d
-
c
r
s
(
.
q
e
r
f
e
v
i
t
a
u
m
u
c
l
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
SIQR(25%-75%)
10%-90%
1
0
.
2
0
.
3
0
.
4
0
.
5
0
.
6
0
.
7
0
.
8
0
.
91
0
.
1
1
.
2
1
.
3
1
.
4
1
.
5
1
.