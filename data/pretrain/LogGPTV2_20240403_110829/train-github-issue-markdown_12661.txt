### Problem Description

Initially, I intended to display radio buttons that could not be modified by the user. I attempted to use the `read_only` attribute on my field type:

```php
$builder->add('onCall', 'choice', array(
    'choices' => array(0 => 'no', 1 => 'yes'),
    'expanded' => true,
    'read_only' => true
));
```

As expected, the `readonly` attribute was added to the `input` elements. However, this approach is ineffective because, as per the W3C specification, the `readonly` attribute is not supported for radio buttons: [W3C Forms Specification](http://www.w3.org/TR/WD-forms-970402#readonly).

The `readonly` attribute is only applicable to `INPUT` elements of type `TEXT` or `PASSWORD` and to the `TEXTAREA` element.

### Analysis

Allowing the `read_only` option on an `expanded` `choice` field does not make sense, as it has no effect on radio buttons. The desired behavior is to disable the radio buttons. However, setting the `disabled` attribute on the field type will cause the form to ignore validation if the radio buttons are re-enabled via JavaScript on the client side.

To achieve the desired effect, the `disabled` attribute should be set directly on the `input` elements. This way, the radio buttons can be re-enabled by the client, and the submitted value will not be ignored.

### Attempted Solution

I tried setting the `disabled` attribute using the `attr` option:

```php
$builder->add('onCall', 'choice', array(
    'choices' => array(0 => 'no', 1 => 'yes'),
    'expanded' => true,
    'attr' => array('disabled' => 'disabled')
));
```

Unfortunately, this approach resulted in the `disabled` attribute being applied to the `div` container around the radio buttons, rather than the `input` elements themselves:

```html
<div disabled="disabled">
    <input type="radio" name="onCall" value="0"> no
    <input type="radio" name="onCall" value="1"> yes
</div>
```

### Investigation

The issue seems to be related to how the `attr` options are handled in the Symfony form rendering templates. The `div` container uses the `widget_container_attributes` block, while the `input` elements use the `widget_attributes` block. This suggests that the `attr` options are being passed to the wrong block.

### Relevant Issues

- **sonata-project/SonataAdminBundle#2842**: Original issue I started.
- **#12946**: Possibly related issue.
- **#8269 by @sargath** and **#8051 by @AdamQuadmon**: Related discussions.

### Conclusion

To properly disable the radio buttons, the `disabled` attribute needs to be applied to the `input` elements. The current implementation in Symfony may require a modification to ensure that the `attr` options are correctly passed to the `widget_attributes` block.

For now, a workaround might involve customizing the form theme or using JavaScript to apply the `disabled` attribute directly to the `input` elements.