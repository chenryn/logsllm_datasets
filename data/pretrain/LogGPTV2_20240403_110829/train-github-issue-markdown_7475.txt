For my time propagation of PDEs, I need to find the eigenvectors/-values of a
Krylov subspace matrix, every step (see e.g. my fork of Krylov.jl). As it is
now, e.g. stegr! allocates the work and output arrays, every time. I wonder if
there are any plans to provide for those functions who need it, a split
version? I mean something in the spirit of
    work = stegr_work(...)
    for i = 1:steps
        ...
        stegr!(other, args, work...)
    end
thereby reducing the amount of (de)allocations.
I could of course implement the functions I need in a library for my own use,
but I would prefer to reduce the amount of code duplication, and maybe other
people than myself would find this useful?