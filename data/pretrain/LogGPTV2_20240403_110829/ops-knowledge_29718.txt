User: 请回答以下安全问题如果强力搜索密码返回的是冲突而不是密码，这有关系吗？假设以下是非常基本的哈希算法。
h（k）=k模17
假设我们为一个使用这种非常基本的哈希算法的网站创建了一个密码12345。这将产生3的散列。
假设一个暴力攻击者经过并开始猜测从1开始的数字，他们只需要达到3就可以得到哈希冲突，而3显然不是原始密码。
是密码哈希空间（0-16）比允许的密码空间小得多的问题，还是我忽略了其他问题？

Assistant: Steffen的回答完美地涵盖了这一点，但我只想补充一些细节。
任何能匹配的东西通常都没问题
正如他所说，你通常不在乎找到实际的密码，因为许多应用会很乐意用任何碰巧与数据库中存储的哈希值进行哈希的字符串对你进行身份验证。这通常适用于web应用，但在其他情况下可能不太常见。这意味着，如果你进行强力搜索并找到具有相同哈希的东西，即使它实际上不是相同的密码，你也可以登录到该帐户。正如问题中所暗示的那样，这就是散列的本质，也是鸽子洞原理的直接结果。
直到您需要实际密码
但是，在某些情况下，您可能确实希望找到原始密码。例如，如果黑客从一个没有价值的服务中窃取了用户名/密码，并想以用户身份登录更有价值的服务（Facebook、银行等），就会出现这种情况。由于人们经常在任何地方使用相同的密码，那么在这种情况下，你真的想要原始密码，而不仅仅是为给定的哈希算法哈希到相同值的东西（毕竟，不同的服务可能使用不同的哈希方法，大多数还使用加密盐-h/t@Taemyr）。
但区别并不重要
幸运的是（对我们的攻击者来说），这其实并不重要。原因是穷举的暴力实际上是不可能的。相反，黑客会尝试可能是密码的东西（单词列表、常用密码等）。作为一个反例，想象一下，尽管不可能，但你有一个来自网络服务的哈希，并设法对所有可能的256位ASCII字符串执行暴力搜索。您可以找到三个散列为与用户密码散列相同值的输入：
日期：1933年3月13日
第7页第8页第84443872页第38页第37页第1页
暗语
你猜哪个才是真正的密码？答案显然是#3。我的意思是，从技术上讲，用户有可能只是碰巧选择了一个非常强的密码（即BD3EDF42F6D3AF2DAAE93313EB534），该密码恰好散列到与密码相同的值，但这种可能性实际上为零。
从这个意义上说，攻击者有很好的优势。他们更喜欢找到实际的密码，事实证明，因为人们不善于选择随机密码，所以最好的方法不是检查所有的东西，而是检查看起来像密码的东西。这使得暴力搜索更加有效，也给攻击者提供了更有用的结果（实际密码，而不是碰巧具有相同哈希的随机字符串）。