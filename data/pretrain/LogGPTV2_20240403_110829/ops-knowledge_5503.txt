User: I need a simple interpreter which will do execution (evaluation) of simple expressions/statements and also call functions from main C++ applications. At the moment I do not need scripting of the application, but it may be useful later.
It should also be strait-forward for other team members to pull my application from Source Repository and to build it, without having to install additional application, libraries, etc.
Searching reveled options like: Python (via Boost and / or Python API), Lua, Guile, TinyScheme.
I am the closest to Python, but using Boost, building Python library, complicated task of interfacing main application with Python makes this choice an overkill, maybe I am wrong.
There should be a simple solution for this request, what are your experiences and suggestions?
Assistant: Two great options you've already listed are Python and Lua. Here are some of the tradeoffs for your consideration:
Python

A much more complete and powerful language (IMHO!) with libraries for anything and tons of support and communities everywhere you look.
Syntax is not entirely C-like
Although Python wasn't designed specifically for embedding (it's much more often used as a standalone language extended by code in C/C++), it's tot really hard to embed. The official docs contain some examples, and following Boost's examples shouldn't be much harder.

Lua

Designed from bottom up for embedding, so it should be the simplest one to embed. 
Syntax more C-like than Python's

If you foresee a definite future need for scripting, building in a scripting engine early is a good idea as it may open some interesting possibilities for you as you go on developing the program. Both options listed above are good ones, you should have no problems embedding any of them without much effort.