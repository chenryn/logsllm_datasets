### 版权声明
版权所有 (c) 1983, 1991 加利福尼亚大学董事会。
保留所有权利。

### 分发和使用条款
- 无论是以源代码还是二进制形式，无论是否进行修改，只要满足以下条件，均允许重新分发和使用：
  1. 源代码的再分发必须保留上述版权声明、此条件列表以及以下免责声明。
  2. 二进制形式的再分发必须在文档和其他材料中重现上述版权声明、此条件列表以及以下免责声明。
  3. 所有提及该软件功能或使用的广告材料必须显示以下声明：
     "本产品包含由加利福尼亚大学伯克利分校及其贡献者开发的软件。"
  4. 未经事先书面许可，不得使用大学名称或其贡献者的名字来支持或推广从该软件派生的产品。

### 免责声明
该软件按“原样”提供，不附带任何明示或暗示的保证，包括但不限于对适销性和特定用途适用性的默示保证。在任何情况下，董事会或贡献者均不对因使用该软件而引起的直接、间接、偶然、特殊、惩戒性或后果性损害（包括但不限于替代商品或服务的采购费用、数据丢失或利润损失）负责，无论基于合同、严格责任或其他理论（包括疏忽或其他原因）引起。

### 修改记录
- 1993年7月23日由Rik Faith修改
- 1995年7月27日由aeb根据Urs Thuermann的建议修改
- 1996年10月22日由Eric S. Raymond修改
- 1998年由Andi Kleen修改
- 中文版版权所有 (c) 2002 byeyear 和 www.linuxforum.net

### 手册页
**LISTEN(2)** - 1993年7月23日 - BSD手册页 - Linux程序员手册

### 名称
listen - 在套接字上监听连接

### 概述
```c
#include <sys/socket.h>

int listen(int s, int backlog);
```

### 描述
在接收连接之前，首先需要使用 `socket(2)` 创建一个套接字，然后调用 `listen` 使其能够自动接收到来的连接，并为连接队列指定一个长度限制。之后可以使用 `accept(2)` 接收连接。

`listen` 调用仅适用于 `SOCK_STREAM` 或 `SOCK_SEQPACKET` 类型的套接字。

参数 `backlog` 指定未完成连接队列的最大长度。如果连接请求到达时未完成连接队列已满，则客户端将收到 `ECONNREFUSED` 错误。如果底层协议支持重试，连接请求将被忽略，以便客户端在重试时有机会成功。

### 注意事项
在TCP套接字中，`backlog` 的含义在Linux 2.2中发生了变化。它指定了已经完成连接并等待应用程序接收的套接字队列的长度，而不是未完成连接的数量。未完成连接套接字队列的最大长度可以通过 `tcp_max_syn_backlog` 系统控制设置。当启用syncookies时，不存在逻辑上的最大长度，此设置将被忽略。有关更多信息，请参见 `tcp(7)`。

### 返回值
函数执行成功时返回0，失败时返回-1，并设置相应的错误代码。

### 错误
- **EBADF**：参数 `s` 不是合法的描述符。
- **ENOTSOCK**：参数 `s` 不是一个套接字。
- **EOPNOTSUPP**：套接字类型不支持 `listen` 操作。

### 兼容性
符合Single Unix、4.4BSD和POSIX 1003.1g标准。`listen` 函数调用最初出现在4.2BSD中。

### 勘误
如果套接字类型是 `AF_INET`，并且参数 `backlog` 大于常量 `SOMAXCONN`（在Linux 2.0和2.2中为128），则会被自动截断为 `SOMAXCONN` 的值。某些BSD系统（以及一些BSD扩展）将 `backlog` 值限制为5。

### 参见
- `accept(2)`
- `connect(2)`
- `socket(2)`

### 中文版维护人
byeyear

### 中文版最新更新
2002年1月27日

### 中国Linux论坛man手册页翻译计划
http://cmpp.linuxforum.net