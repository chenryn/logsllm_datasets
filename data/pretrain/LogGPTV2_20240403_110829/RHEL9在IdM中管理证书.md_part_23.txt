-   请参阅
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   请参阅 `ansible-playbook(1)`{.literal} 手册页。
:::
:::
::: section
::: titlepage
# []{#requesting-certificates-using-rhel-system-roles_managing-certificates-in-idm.html#specifying-commands-to-run-before-or-after-certificate-issuance-using-the-certificate-system-role_requesting-certificates-using-rhel-system-roles}指定在使用证书发行和续订系统角色前或之后要运行的命令 {.title}
:::
使用证书系统发行情况和续订角色，您可以使用 Ansible Core
在签发或更新证书前和之后执行命令。
在以下示例中，管理员确保在为 `www.example.com`{.literal}
发布或更新自签名证书前停止 `httpd`{.literal} 服务，然后再重启该服务。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
默认情况下，`certmonger`{.literal}
会在证书过期前自动尝试续订证书。您可以通过将 Ansible playbook 中的
`auto_renew`{.literal} 参数设为 `no`{.literal} 来禁用此功能。
:::
::: itemizedlist
**先决条件**
-   Ansible Core 软件包安装在控制机器上。
-   您已在要运行 playbook 的系统上安装了 `rhel-system-roles`{.literal}
    软件包。
    有关 RHEL 系统角色以及如何应用它们的详情，请参阅 [RHEL
    系统角色入门](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/configuring_basic_system_settings/getting-started-with-rhel-system-roles_configuring-basic-system-settings){.link}。
:::
::: orderedlist
**流程**
1.  [*可选：*]{.emphasis} 创建一个清单文件，如
    `inventory.file`{.literal} ：
    ``` literallayout
    $ touch inventory.file
    ```
2.  打开清单文件并定义要请求证书的主机，例如：
    ``` literallayout
    [webserver]
    server.idm.example.com
    ```
3.  创建 playbook 文件，如 `request-certificate.yml`{.literal}:
    ::: itemizedlist
    -   将 `hosts`{.literal} 设置为包含您要对其请求证书的主机，如
        `webserver`{.literal}。
    -   将 `certificate_requests`{.literal} 变量设置为包含以下内容：
        ::: itemizedlist
        -   将 `name`{.literal} 参数设为所需证书的名称，如
            `mycert`{.literal}。
        -   将 `dns`{.literal} 参数设要在证书中包含的域，如
            `www.example.com`{.literal}。
        -   将 `ca`{.literal} 参数设为您要用来发布证书的 CA，如
            `self-sign`{.literal} 。
        -   将 `run_before`{.literal}
            参数设为在签发或续订证书之前要执行的命令，如
            `systemctl stop httpd.service`{.literal}。
        -   将 `run_after`{.literal}
            参数设为在签发或续订此证书后要执行的命令，如
            `systemctl start httpd.service`{.literal}。
        :::
    -   在 `roles`{.literal} 下设置
        `rhel-system-roles.certificate`{.literal} 角色。
        这是本例的 playbook 文件：
        ``` literallayout
        ---
        - hosts: webserver
          vars:
            certificate_requests:
              - name: mycert
                dns: www.example.com
                ca: self-sign
                run_before: systemctl stop httpd.service
                run_after: systemctl start httpd.service
          roles:
            - rhel-system-roles.certificate
        ```
    :::
4.  保存该文件。
5.  运行 playbook:
    ``` literallayout
    $ ansible-playbook -i inventory.file request-certificate.yml
    ```
:::
::: itemizedlist
**其他资源**
-   请参阅
    `/usr/share/ansible/roles/rhel-system-roles.certificate/README.md`{.literal}
    文件。
-   请参阅 `ansible-playbook(1)`{.literal} 手册页。
:::
:::
:::
[]{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html}
::: chapter
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm}第 17 章 将应用程序限制为只信任证书子集 {.title}
:::
如果您的身份管理(IdM)安装被配置为带有集成的证书系统(CS)证书颁发机构(CA)，您可以创建轻量级的子
CA。您创建的所有子 CA 都从属到证书系统的主 CA( [**ipa**]{.strong} CA)。
这个上下文中的 [*轻量级子 CA*]{.emphasis} 意味着 [*，子 CA 为特定目的
发布证书*]{.emphasis}。例如，可以使用轻量级子 CA 配置一个服务（如 VPN
网关， Web 浏览器），仅接受由[*子 CA A*]{.emphasis}
签发的证书。通过将其他服务配置为仅接受 [*子 CA B*]{.emphasis}
签发的证书，您可以防止他们接受 [*子 CA A*]{.emphasis}，主
CA（`ipa`{.literal} CA）以及两者之间的任何中间子 CA 签发的证书。
如果您撤销子 CA 的中间证书，[则此子 CA
发布的所有证书都会被正确配置的客户端自动被视为无效](#invalidating-a-specific-group-of-related-certificates-quickly_managing-certificates-in-idm.html "第 18 章 快速地无效相关证书组"){.link}。root
CA、[**ipa**]{.strong} 或其他子 CA 发布的其他证书仍然有效。
本节使用 Apache web
服务器的示例来说明如何限制应用程序仅信任某个证书的子集。完成这个部分，将在
IdM 客户端中运行的 web 服务器限制为使用由 [**webserver-ca**]{.strong}
IdM 子 CA 发布的证书，并要求用户使用 [**webclient-ca**]{.strong} IdM 子
CA 发布的用户证书向 Web 服务器进行身份验证。
您需要执行的步骤包括：
::: orderedlist
1.  [创建 IdM 子
    CA](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#creating-a-lightweight-sub-ca_restricting-an-application-to-trust-a-subset-of-certs "管理轻量级子 CA"){.link}
2.  [从 IdM WebUI 下载子 CA
    证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#downloading-the-sub-CA-certificate-from-IdM-WebUI_restricting-an-application-to-trust-a-subset-of-certs "从 IdM WebUI 下载子 CA 证书"){.link}
3.  [创建 CA ACL，指定用户、服务和 CA
    的正确组合以及所使用的证书配置集](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#creating-a-ca-acl-specifying-the-profile-users-services-and-CAs_restricting-an-application-to-trust-a-subset-of-certs "为 Web 服务器和客户端验证创建 CA ACL"){.link}
4.  [从 IdM 子 CA 为在 IdM 客户端上运行的 web
    服务请求证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#obtain-service-cert-with-certmonger_restricting-an-application-to-trust-a-subset-of-certs "使用 certmonger 为服务获取 IdM 证书"){.link}
5.  [设置单实例 Apache HTTP
    服务器](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#setting-up-a-single-instance-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs "设置单实例 Apache HTTP 服务器"){.link}
6.  [在 Apache HTTP 服务器中添加 TLS
    加密](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#proc_adding-tls-encryption-to-an-apache-http-server-configuration_restricting-an-application-to-trust-a-subset-of-certs "在 Apache HTTP 服务器中添加 TLS 加密"){.link}
7.  [在 Apache HTTP 服务器中设置支持的 TLS
    协议版本](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#setting-the-supported-tls-protocol-versions-on-an-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs "在 Apache HTTP 服务器中设置支持的 TLS 协议版本"){.link}
8.  [在 Apache HTTP
    服务器中设置支持的密码](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#setting-the-supported-ciphers-on-an-apache-http-server_restricting-an-application-to-trust-a-subset-of-certs "在 Apache HTTP 服务器中设置支持的密码"){.link}
9.  [在 web 服务器中配置 TLS
    客户端证书身份验证](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#configuring-tls-client-certificate-authentication_restricting-an-application-to-trust-a-subset-of-certs "配置 TLS 客户端证书身份验证"){.link}
10. [从 IdM 子 CA
    请求用户证书，并将其导出到客户端](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#requesting-and-exporting-a-user-certificate_restricting-an-application-to-trust-a-subset-of-certs "请求新用户证书并将其导出到客户端"){.link}
11. [将用户证书导入到浏览器中，并将浏览器配置为信任 sub-CA
    证书](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#configuring-browser-for-cert-auth_restricting-an-application-to-trust-a-subset-of-certs "配置浏览器以启用证书身份验证"){.link}
:::
::: section
::: titlepage
# []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#creating-a-lightweight-sub-ca_restricting-an-application-to-trust-a-subset-of-certs}管理轻量级子 CA {.title}
:::
这部分论述了如何管理轻量级从属证书颁发机构(sub-CA)。您创建的所有子 CA
都从属到证书系统的主 CA( `ipa`{.literal} CA)。您还可以禁用和删除子 CA。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
::: itemizedlist
-   如果您删除子 CA，对这个子 CA 的撤销检查将不再起作用。只有在不存在其
    `notAfter`{.literal} 过期时间是未来的子 CA 签发的证书时，才删除子
    CA。
-   您应该只在仍有由该子 CA 发布的证书时禁用子 CA。如果子 CA
    发布的所有证书已过期，您可以删除该子 CA。
-   您无法禁用或删除 IdM CA。
:::
:::
有关管理子 CA 的详情，请参考：
::: itemizedlist
-   [从 IdM WebUI 创建子
    CA](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#creating-a-sub-CA-from-IdM-WebUI_restricting-an-application-to-trust-a-subset-of-certs "从 IdM WebUI 创建子 CA"){.link}
-   [从 IdM WebUI 中删除子
    CA](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#proc_deleting-a-sub-ca-from-the-idm-webui_restricting-an-application-to-trust-a-subset-of-certs "从 IdM WebUI 中删除子 CA"){.link}
-   [从 IdM CLI 创建子
    CA](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#creating-a-sub-CA-from-IdM-CLI_restricting-an-application-to-trust-a-subset-of-certs "从 IdM CLI 创建子 CA"){.link}
-   [从 IdM CLI 禁用子
    CA](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#proc_disabling-a-sub-ca-from-the-idm-cli_restricting-an-application-to-trust-a-subset-of-certs "从 IdM CLI 禁用子 CA"){.link}
-   [从 IdM CLI 删除子
    CA](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#proc_deleting-a-sub-ca-from-the-idm-cli_restricting-an-application-to-trust-a-subset-of-certs "从 IdM CLI 删除子 CA"){.link}
:::
::: section
::: titlepage
## []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#creating-a-sub-CA-from-IdM-WebUI_restricting-an-application-to-trust-a-subset-of-certs}从 IdM WebUI 创建子 CA {.title}
:::
这个步骤描述了如何使用 IdM WebUI 创建名为 [**webserver-ca**]{.strong} 和
[**webclient-ca**]{.strong} 的新子 CA。
::: itemizedlist
**先决条件**
-   确保已获得管理员的凭据。
:::
::: orderedlist
**步骤**
1.  在\" [**身份验证**]{.strong} \"菜单中，单击 [**证书**]{.strong}。
2.  选择 [**证书授权**]{.strong}，点 [**添加**]{.strong}。
3.  输入 [**webserver-ca**]{.strong} 子 CA 的名称。在 Subject DN
    字段中输入 Subject DN，如
    [**CN=WEBSERVER,O=IDM.EXAMPLE.COM**]{.strong}。请注意，对象 DN 在
    IdM CA 基础架构中必须是唯一的。
4.  输入 [**webclient-ca**]{.strong} 子 CA 的名称。在 Subject DN
    字段中输入 Subject DN
    [**CN=WEBCLIENT,O=IDM.EXAMPLE.COM**]{.strong}。
5.  在命令行界面中运行 `ipa-certupdate`{.literal} 命令，为
    [**webserver-ca**]{.strong} 和 [**webclient-ca**]{.strong} 子 CA
    证书创建 [**certmonger**]{.strong} 跟踪请求：
    ``` literallayout
    [root@ipaserver ~]# ipa-certupdate
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    在创建子 CA 后如果忘记运行 `ipa-certupdate`{.literal}
    命令，则意味着在子 CA 证书过期时，即使最终的证书没有过期，子 CA
    签发的最终证书也会被视为无效，。
    :::
:::
::: itemizedlist
**验证**
-   验证新子 CA 的签名证书是否已添加到 IdM 数据库中：
    ``` literallayout
    [root@ipaserver ~]# certutil -d /etc/pki/pki-tomcat/alias/ -L
    Certificate Nickname                      Trust Attributes
                                              SSL,S/MIME,JAR/XPI
    caSigningCert cert-pki-ca                 CTu,Cu,Cu
    Server-Cert cert-pki-ca                   u,u,u
    auditSigningCert cert-pki-ca              u,u,Pu
    caSigningCert cert-pki-ca ba83f324-5e50-4114-b109-acca05d6f1dc u,u,u
    ocspSigningCert cert-pki-ca               u,u,u
    subsystemCert cert-pki-ca                 u,u,u
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    新的子 CA 证书会自动转移到安装了证书系统实例的所有副本。
    :::
:::
:::
::: section
::: titlepage
## []{#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#proc_deleting-a-sub-ca-from-the-idm-webui_restricting-an-application-to-trust-a-subset-of-certs}从 IdM WebUI 中删除子 CA {.title}
:::
这个步骤描述了如何删除 IdM Web UI 中的轻量级子 CA。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
::: itemizedlist
-   如果您删除子 CA，对这个子 CA 的撤销检查将不再起作用。只有在不存在其
    `notAfter`{.literal} 过期时间是未来的子 CA 签发的证书时，才删除子
    CA。
-   您应该只在仍有由该子 CA 发布的证书时禁用子 CA。如果子 CA
    发布的所有证书已过期，您可以删除该子 CA。
-   您无法禁用或删除 IdM CA。
:::
:::
::: itemizedlist
**先决条件**
-   确保已获得管理员的凭据。
-   您已在 IdM CLI 中禁用了 sub-CA。请参阅从 [IdM CLI 禁用子
    CA](#restricting-an-application-to-trust-only-a-subset-of-certificates_managing-certificates-in-idm.html#proc_disabling-a-sub-ca-from-the-idm-cli_restricting-an-application-to-trust-a-subset-of-certs "从 IdM CLI 禁用子 CA"){.link}
:::
::: orderedlist
**步骤**
1.  在 IdM Web UI 中，打开 `Authentication`{.literal} 选项卡，然后选择
    `证书`{.literal} 子选项卡。
2.  选择 `证书颁发机构`{.literal}。