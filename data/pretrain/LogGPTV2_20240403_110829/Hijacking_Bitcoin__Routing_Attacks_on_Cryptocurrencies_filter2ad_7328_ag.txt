[17] A. Boldyreva and R. Lychev, “Provable Security of S-BGP and Other
Path Vector Protocols: Model, Analysis and Extensions,” ser. CCS ’12.
New York, NY, USA: ACM, 2012, pp. 541–552.
[18] J. Bonneau, A. Miller, J. Clark, A. Narayanan, J. A. Kroll, and E. W.
Felten, “Sok: Research perspectives and challenges for bitcoin and
cryptocurrencies,” in Security and Privacy (SP), 2015 IEEE Symposium
on.
IEEE, 2015, pp. 104–121.
[19] P. Bosshart, D. Daly, G. Gibb, M. Izzard, N. McKeown, J. Rexford,
C. Schlesinger, D. Talayco, A. Vahdat, G. Varghese et al., “P4: Pro-
gramming protocol-independent packet processors,” ACM SIGCOMM
Computer Communication Review, vol. 44, no. 3, pp. 87–95, 2014.
[20] C. Decker and R. Wattenhofer, “Information propagation in the bitcoin
network,” in Peer-to-Peer Computing (P2P), 2013 IEEE Thirteenth
International Conference on.
IEEE, 2013, pp. 1–10.
[21] ——, Bitcoin Transaction Malleability and MtGox. Cham: Springer
[Online]. Available:
International Publishing, 2014, pp. 313–326.
http://dx.doi.org/10.1007/978-3-319-11212-1_18
[22] M. Edman and P. Syverson, “As-awareness in tor path selection,” in
Proceedings of the 16th ACM Conference on Computer and Communi-
cations Security, ser. CCS ’09, 2009.
[23] I. Eyal, “The miner’s dilemma,” in 2015 IEEE Symposium on Security
and Privacy.
IEEE, 2015, pp. 89–103.
[24] I. Eyal and E. G. Sirer, “Majority is not enough: Bitcoin mining is
Springer,
vulnerable,” in Financial Cryptography and Data Security.
2014, pp. 436–454.
[25] N. Feamster and R. Dingledine, “Location diversity in anonymity
networks,” in WPES, Washington, DC, USA, October 2004.
[26] J. Garay, A. Kiayias, and N. Leonardos, “The bitcoin backbone protocol:
Analysis and applications,” in Advances in Cryptology-EUROCRYPT
2015. Springer, 2015, pp. 281–310.
[27] A. Gervais, G. O. Karama, V. Capkun, and S. Capkun, “Is bitcoin a
decentralized currency?” IEEE security & privacy, vol. 12, no. 3, pp.
54–60, 2014.
[28] A. Gervais, H. Ritzdorf, G. O. Karame, and S. Capkun, “Tampering with
the delivery of blocks and transactions in bitcoin,” in Proceedings of
the 22Nd ACM SIGSAC Conference on Computer and Communications
Security, ser. CCS ’15. New York, NY, USA: ACM, 2015, pp. 692–705.
[29] P. Gill, M. Schapira, and S. Goldberg, “Let the Market Drive Deploy-
ment: A Strategy for Transitioning to BGP Security,” ser. SIGCOMM
’11. New York, NY, USA: ACM, 2011, pp. 14–25.
[30] S. Goldberg, M. Schapira, P. Hummon, and J. Rexford, “How Secure
Are Secure Interdomain Routing Protocols,” in SIGCOMM, 2010.
[31] E. Heilman, A. Kendler, A. Zohar, and S. Goldberg, “Eclipse attacks on
bitcoin’s peer-to-peer network,” in 24th USENIX Security Symposium
(USENIX Security 15), 2015, pp. 129–144.
[32] Y.-C. Hu, A. Perrig, and M. Sirbu, “SPV: Secure Path Vector Routing
for Securing BGP,” ser. SIGCOMM ’04. New York, NY, USA: ACM,
2004, pp. 179–192.
[33] J. Karlin, S. Forrest, and J. Rexford, “Pretty Good BGP: Improving BGP
by Cautiously Adopting Routes,” in Proceedings of the Proceedings
of the 2006 IEEE International Conference on Network Protocols, ser.
ICNP ’06. Washington, DC, USA: IEEE Computer Society, 2006, pp.
290–299.
[34] E. K. Kogias, P. Jovanovic, N. Gailly, I. Khofﬁ, L. Gasser, and B. Ford,
“Enhancing bitcoin security and performance with strong consistency
via collective signing,” in 25th USENIX Security Symposium (USENIX
Security 16). Austin, TX: USENIX Association, 2016, pp. 279–296.
[35] J. A. Kroll, I. C. Davey, and E. W. Felten, “The economics of bitcoin
mining, or bitcoin in the presence of adversaries.” Citeseer.
[36] A. Miller, J. Litton, A. Pachulski, N. Gupta, D. Levin, N. Spring, and
B. Bhattacharjee, “Discovering bitcoin’s public topology and inﬂuential
nodes.”
[37] S. J. Murdoch and P. Zieli´nski, “Sampled trafﬁc analysis by Internet-
exchange-level adversaries,” in Privacy Enhancing Technologies: 7th
International Symposium, PET 2007, N. Borisov and P. Golle, Eds.
Springer-Verlag, LNCS 4776, 2007, pp. 167–183.
[38] K. Nayak, S. Kumar, A. Miller, and E. Shi, “Stubborn mining: Gen-
eralizing selﬁsh mining and combining with an eclipse attack,” IACR
Cryptology ePrint Archive, vol. 2015, p. 796, 2015.
[39] T. Neudecker, P. Andelﬁnger, and H. Hartenstein, “A simulation model
for analysis of attacks on the bitcoin peer-to-peer network,” in IFIP/IEEE
International Symposium on Internet Management.
IEEE, 2015, pp.
1327–1332.
[40] P. v. Oorschot, T. Wan, and E. Kranakis, “On interdomain routing
security and pretty secure bgp (psbgp),” ACM Trans. Inf. Syst. Secur.,
vol. 10, no. 3, Jul. 2007.
[41] A. Pilosov and T. Kapela, “Stealing The Internet. An Internet-Scale Man
In The Middle Attack.” DEFCON 16.
[42] Y. Rekhter and T. Li, A Border Gateway Protocol 4 (BGP-4), IETF,
Mar. 1995, rFC 1771.
preprint arXiv:1402.2009, 2014.
[43] M. Rosenfeld, “Analysis of hashrate-based double spending,” arXiv
[44] A. Sapirshtein, Y. Sompolinsky, and A. Zohar, “Optimal selﬁsh mining
strategies in bitcoin,” CoRR, vol. abs/1507.06183, 2015.
[45] E. B. Sasson, A. Chiesa, C. Garman, M. Green, I. Miers, E. Tromer, and
M. Virza, “Zerocash: Decentralized anonymous payments from bitcoin,”
in 2014 IEEE Symposium on Security and Privacy.
IEEE, 2014, pp.
459–474.
[46] B. Schlinker, K. Zariﬁs, I. Cunha, N. Feamster, and E. Katz-Bassett,
“Peering: An as for us,” in Proceedings of the 13th ACM Workshop
on Hot Topics in Networks, ser. HotNets-XIII. New York, NY, USA:
ACM, 2014, pp. 18:1–18:7.
[47] J. Schnelli, “BIP 151: Peer-to-Peer Communication Encryption,” Mar.
2016, https://github.com/bitcoin/bips/blob/master/bip-0151.mediawiki.
[48] X. Shi, Y. Xiang, Z. Wang, X. Yin, and J. Wu, “Detecting preﬁx
hijackings in the Internet with Argus,” ser. IMC ’12. New York, NY,
USA: ACM, 2012, pp. 15–28.
[49] Y. Sompolinsky and A. Zohar, “Secure high-rate transaction processing
Springer,
in bitcoin,” in Financial Cryptography and Data Security.
2015, pp. 507–527.
[50] Y. Sun, A. Edmundson, L. Vanbever, O. Li, J. Rexford, M. Chiang, and
P. Mittal, “RAPTOR: Routing attacks on privacy in TOR.” in USENIX
Security, 2015.
[51] A. Tonk, “Large scale BGP hijack out of India,” 2015, http://www.
bgpmon.net/large-scale-bgp-hijack-out-of-india/.
[52] ——, “Massive route leak causes Internet slowdown,” 2015, http://www.
bgpmon.net/massive-route-leak-cause-internet-slowdown/.
[53] L. Vanbever, O. Li, J. Rexford, and P. Mittal, “Anonymity on quicksand:
Using BGP to compromise TOR,” in ACM HotNets, 2014.
[54] Z. Zhang, Y. Zhang, Y. C. Hu, and Z. M. Mao, “Practical defenses
New York, NY,
against BGP preﬁx hijacking,” ser. CoNEXT ’07.
USA: ACM, 2007.
[55] Z. Zhang, Y. Zhang, Y. C. Hu, Z. M. Mao, and R. Bush, “iSPY:
Detecting IP preﬁx hijacking on my own,” IEEE/ACM Trans. Netw.,
vol. 18, no. 6, pp. 1815–1828, Dec. 2010.
390
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:19:24 UTC from IEEE Xplore.  Restrictions apply. 
APPENDIX
A. Bitcoin event-driven simulation
In this section, we provide more details on the simulator we
used in Section VIII-B.
Inputs The simulator takes as input a realistic topology and
some synthetic topologies with higher or lower degree of
multi-homing. Each of the topologies includes the list of IP
addresses running Bitcoin nodes, the IPs of the gateways and
the hash rate associated with each mining pool, along with the
forwarding paths among all pairs of IPs. The realistic topology
was inferred as described in Section VI. The synthetic ones
were created by adding more gateways to the pools in the
realistic topology until they all reached the predeﬁned degree
of multi-homing.
Model The simulator models each Bitcoin node as an inde-
pendent thread which reacts to events according to the Bitcoin
protocol. Whenever a node communicates with another, the
simulator adds a delay which is proportional to the number of
ASes present on the forwarding path between the two nodes.
Each nodes initializes 8 connections following the default
client implementation. Blocks are generated at intervals drawn
from an exponential distribution, with an expected rate of one
block every 10 minutes. The probability that a speciﬁc pool
succeeds in mining a block directly depends on its mining
power. We consider that the gateways of a pool form a clique
and communicate with each other with links of zero delay
which an attacker cannot intercept. Concretely, this means that
whenever a block is produced by a pool, it is simultaneously
propagated from all the gateways of this pool. Although this
choice makes the attacker less effective, we assume that this
is the default behavior of a benign pool.
Attack In the simulation, an AS can effectively delay the
delivery of a block between two nodes if and only if she
intercepts the trafﬁc from the potential recipient to the sender,
essentially if she is able to perform the attack depicted in
Fig. 4a. An adversary that intercepts the opposite direction
is considered unable to delay blocks, during the simulation.
Although this choice makes the attacker less effective, it avoids
a dependency between the orphan rate and time. Indeed, these
attackers lose their power through time, as the connections
they intercept are dropped after the ﬁrst effective block delay,
and possibly replaced with connections that are not intercepted
by the attacker.
Validation We veriﬁed our simulator by comparing the orphan
rate as well as the median propagation delay computed with
those of the real network. We found that both of them are
within the limits of the actual Bitcoin network [20].
Methodology We evaluated the impact of delay attacks con-
sidering the three most powerful country-based coalition (US,
China and Germany) as measured by the percentage of trafﬁc
all their ASes3 see.
3We map an AS to a country based on the country it is registered in.
Isolated
mining power
Minimum
# preﬁxes
Median
# preﬁxes
# Feasible
Partitions
6%
7%
8%
30%
39%
40%
41%
45%
46%
47%
2
7
32
83
32
37
44
34
78
39
86
72
69
83
51
80
55
41
78
39
20
23
14
1
11
8
3
5
1
1
TABLE IV: This table lists all partitions that can be created
based on our inferred topology. The leftmost column indicates
the portion of mining power contained within the isolated set
and the rightmost the number of different combinations of
pools that could form it.
We run the simulation 20 times for each set of parameters
and consider a new random Bitcoin topology during each
run. In each run, 144 blocks are created, which is equivalent
to a day’s worth of block production (assuming an average
creation rate of one block per 10 minutes). We evaluated the
impact of delay attacks by measuring the orphan rate, different
adversaries can cause.
B. Possible Partitions
Table IV shows a complete list of all the possible sets
of nodes P with the mining power that can be isolated. A
summary of it was included and discussed in Section VII.
C. Inferring pool gateways
We summarize here two ways hijacking can be used to
reveal the gateways of pools.
1) The attacker may hijack the pool’s stratum servers to
discover connections that they establish and thus reveal
the gateways they connect to. Connections between the
pool’s stratum server and its gateways are done via
bitcoind’s RPC access, and can be easily distinguished.
2) The attacker may hijack the relay network to discover
the connections used by large mining pools. The relay
network has indeed a public set of six IPs that pools
connect to. By hijacking these, one may learn the IPs
of various gateways. Speciﬁcally, it will not be hard to
identify a pool by observing the blocks each publishes to
the relay network.
D. Increase partition persistence
Our observations in Section VII-D reveal concrete ways for
the attacker to make her partition lasts longer. Intuitively, the
attacker needs to suppress the effect of churn in order to keep
the victim nodes isolated. The following three observations
help in this regard:
391
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:19:24 UTC from IEEE Xplore.  Restrictions apply. 
Observation 1: A smaller set of nodes will be easier to
isolate for extended periods. The smaller the set of nodes is,
the more time will pass before any isolated node restarts.
Similarly, if the set of nodes is small, external nodes will
connect to the isolated set with lower probability.
Observation 2: All incoming connection slots can be oc-
cupied by connections from attacker nodes. Bitcoin nodes
typically limit
the number of incoming connections they
accept. The attacker may use several nodes to aggressively
connect to the isolated nodes, and maintain these connections
even after BGP routing is restored. Connections initiated by
external nodes would then be rejected by the isolated nodes
(as all slots of connections remain occupied).
Observation 3: Outgoing connections can be biased via a
traditional eclipse attack [31]. Once an isolated node reboots,
it will try to establish connections to nodes in its peer lists.
These can be biased to contain attacker nodes, other isolated
nodes, and IP addresses that do not actually lead to Bitcoin
nodes. This is done by aggressively advertising these IPs to
the victim nodes. The connections they form upon rebooting
will then be biased towards those that maintain the partition.
F. Ethical considerations
Although we performed both of the attacks we describe
against nodes that were connected to the Bitcoin network
we did not disturb their normal operations. Regarding the
hijack experiment, we advertised and hijacked a preﬁx that was
assigned to us by the Transit Portal (TP) project [46]. No other
trafﬁc was inﬂuenced by our announcements. Also, the isolated
nodes were experimental nodes we ran ourselves. Actual
Bitcoin nodes that happened to be connected to these were
not affected, they just had one of their connections occupied
(as if they were connected to a supernode). Regarding the
delay experiment, the victims were again our own Bitcoin
clients. While they were indeed connected to nodes in the real
network, those were not affected as we only modiﬁed packets
towards our victim nodes.
E. Frequently Asked Questions
Can bitcoin relays bridge the partition? While Bitcoin
relays [13] improve Bitcoin performance, they do not improve
Bitcoin security against routing attacks. Indeed, as the IPs of
the relays are publicly available, relays are also vulnerable to
both hijacking and passive attacks. As such, they can neither
bridge the partition, nor act as a protected relay when an
actual network attack takes place. Note that routing attacks
are completely different from DDoS attacks, which relays are
most likely protected against. Routing attacks are much more
complicated to deal with as they constitute a human-driven
process depending highly on the provider of the victim rather
than the victim itself. As an illustration, the mitigation of a
hijack could include the provider of the attacker disconnecting
her or her announcements being ﬁltered globally, after the
hijack has been detected by the provider of the victim.
Can NATed nodes bridge a partition? All nodes behind a
NAT act as a simple node that doesn’t accept connections.
Indeed, by hijacking the corresponding public IP, the attacker
receives trafﬁc destined to all of them. In Section IV, we
explained why simple nodes cannot bridge the partition, the
same applies for NATed nodes.
Can Bitcoin routing alternatives solve the attacks presented
in this paper? Similar to the Bitcoin relays, existing proposals
could indeed speed up the transmission of blocks by tackling
with natural limitation of the current Internet such as delay
and packet loss. For instance, FIBRE [8] uses Forward Error
Correction (FEC) and compression to speed up the block
transmission. In parallel, Falcon [7], uses a technique called
cut-through routing to achieve fast block transmission in the
presence of increased network delays. However, neither of the
aforementioned approaches address routing attacks in the form
of BGP hijacks or trafﬁc eavesdropping.
392
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:19:24 UTC from IEEE Xplore.  Restrictions apply.