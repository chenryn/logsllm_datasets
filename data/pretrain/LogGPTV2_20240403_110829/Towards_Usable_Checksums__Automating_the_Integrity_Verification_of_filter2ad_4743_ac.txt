name
Android Studio
Audacity
Blender
FileZilla
GIMP
GnuPG
Handbrake
Inkscape
IntelliJ
KeePass
Notepad++
OpenOffice
Plex
RealVNC
SpyBot
Tor
Transmission
Ubuntu
VLC
VMware Fusion
Table 1: Raw results of the website survey on the use of checksum on the download pages of popular programs. “ext.” stands
for “extension”, “instr.” for “instructions”, and “#dl/day” for “average number of downloads per day”. In the host column, the
“*” denotes that, although the program and the checksum files are hosted on the same server, they are also mirrored on a
different server (typically under a different domain).
checksum program MD5
https
http
https
https
https
https
https
https
https
https
https
https
https
https
https
https
https
http
https
https
host
diff. domain
diff. domain
diff. domain
diff. domain
diff. domain*
same server
diff. domain*
same server
same server
diff. domain
same server
diff. domain
same server
same server
same server
same server
diff. domain
same server
diff. domain
diff. server
https
https
https
https
https
https
https
https
https
https
https
https
https
https
https
https
https
http
https
https
ext.
✓
✗
✗
✗
✓
✗
✓
✗
✗
✗
✗
✗
✓
✓
✗
✗
✓
✗
✓
✗
-
6k
16k
11k
-
-
-
-
-
15k
-
85k
-
-
-
90k
-
-
✗
✗
✗
✗
✗
✓
✓
✗
✗
✗
✓
✗
✗
✗
✓
✗
✗
✓
✗
✓
✓
✓
✗
✗
✗
✗
✓
✗
✓
✗
✗
✓
✓
✓
✓
✗
✓
✓
✓
✓
✗
✗
✗
✗
✗
✓
✓
✗
✗
✗
✗
✓
✗
✗
✗
✓
✗
✓
✗
✗
✗
✗
✓
✗
✓
✗
✗
✓
✗
✗
✓
✓
✗
✗
✓
✗
✗
✓
✗
✓
✗
✗
✗
✗
✗
✓
✓
✗
✗
✗
✗
✓
✗
✗
✗
✓
✗
✓
✗
✓
527k
-
on a much larger scale, which would also enable us to assess the
prevalence of checksums on the web.
From the results, we observe the following. First, 2 out of 20
(2/20) websites did not serve the checksum in a secure way (i.e.,
over HTTPS). This is problematic, as the webpage and the checksum
it contains could be tampered with by an adversary through a man-
in-the-middle attack. It should be noted, however, that, for Audacity,
even though the website was by default served over HTTP, it was
also possible to retrieve it over HTTPS. Second, 9/20 websites host
the checksum and the program on the same server (according to
our heuristic). This could be problematic, as an adversary who is
able to break into the server could tamper with both the program
file and its checksum, hence cover up the tampering.
We also observed that 7/20 websites include multiple checksums
(e.g., Handbrake with SHA1 and SHA2), possibly in combination
with PGP signatures (e.g., OpenOffice). A non-negligible fraction
(5/20) of the websites analyzed (e.g., Blender and GIMP) include
only checksums generated from weak hash functions, namely MD5
and SHA1. Furthermore, only 6/20 websites (e.g., OpenOffice and
GnuPG) include instructions on how to verify checksums or a
description of their utility. Finally, the fact that our extension does
not work on 13/20 analyzed websites is due to the fact that it is
currently instrumented to work in the cases were the checksum
is available in the HTML code of the same website that contains
the link to the program file. If the checksum is stored in a separate
file, our extension would currently not detect it. As for Tor, the
download page includes a detached signature (hosted on the same
server, but this is not a problem for signatures) together with the
instructions to check it.
In summary, due to frequent flaws in the way checksums are
currently used (e.g., insecure communication, single server, weak
hash function) and the lack of details on their utility and how-to
guides, checksums do not achieve their full potential in securing
web downloads.
5 LARGE-SCALE USER SURVEY
To date, little research has focused on the problem of checksum
verification. In particular, we know little about the proportion of
Internet users who know about checksums and those who regularly
apply checksum verification to their downloads. Therefore, we
pose the following research questions: (RQ1) Which proportion
of Internet users install programs that are manually downloaded
directly from websites, therefore exposing themselves to potentially
corrupted programs? (RQ2) What proportion of Internet users know
about checksum verification methods? Among those who know, how
many actually do it when they download programs from developer
websites?
5.1 Methodology
In order to study the current security behaviors of Internet users,
and the associated risks, with respect to programs downloaded from
the Internet and to answer the above research questions, we con-
ducted a large-scale online user survey. The survey was approved
by our institution’s ethics committee. We contracted a vendor to
deploy and conduct the survey; the vendor was in charge of select-
ing a representative sample, in terms of demographics, of Internet
users based in the US [23]. The panelists were recruited via partner-
ships and invited via banners and messaging, and then go through
quality controls. Panelists receive virtual points in exchange for
Session 6D: Usable 1 CCS’18, October 15-19, 2018, Toronto, ON, Canada1261Automating the Integrity Verification of Web Downloads for the Masses
CCS ’18, October 15–19, 2018, Toronto, ON, Canada
their participation in active research campaigns, which can be later
redeemed for donations to charity or for vouchers to buy goods and
services. The total cost of the survey was ∼USD 5600 with an av-
erage incentive of ∼USD 1.9/participant (excluding administrative
costs).
We deployed the questionnaire twice in order to collect both
qualitative and quantitative information from participants while