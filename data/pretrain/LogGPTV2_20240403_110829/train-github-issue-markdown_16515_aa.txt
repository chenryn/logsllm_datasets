This happens with TensorFlow 1.12 and CUDA 9.0:
    $ python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
    v1.12.0-0-ga6d8ffae09 1.12.0
Here's a minimal code snippet for reproducing the problem:
    #!/usr/bin/env python3
    # -*- coding: utf-8 -*-
    import tensorflow as tf
    import tensorflow.contrib.eager as tfe
    tf.enable_eager_execution()
    var = tfe.Variable([0.0, 0.0, 0.0], name='tensor')
    optimizer = tf.train.AdagradOptimizer(learning_rate=0.1)
    with tf.GradientTape() as tape:
        fn = tf.nn.embedding_lookup(var, [0])[0]
    g = tape.gradient(fn, [var])[0]
    optimizer.apply_gradients(grads_and_vars=[(g, var)])
Here's the output, both on CPU and GPU:
    $ CUDA_VISIBLE_DEVICES="" ./ada.py 
    2019-04-23 22:38:06.058069: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
    2019-04-23 22:38:06.064824: E tensorflow/stream_executor/cuda/cuda_driver.cc:300] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
    2019-04-23 22:38:06.064853: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:163] retrieving CUDA diagnostic information for host: hamburg
    2019-04-23 22:38:06.064858: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:170] hostname: hamburg
    2019-04-23 22:38:06.064879: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:194] libcuda reported version is: 390.116.0
    2019-04-23 22:38:06.064897: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:198] kernel reported version is: 390.116.0
    2019-04-23 22:38:06.064902: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:305] kernel version seems to match DSO: 390.116.0
    $ ./ada.py 
    2019-04-23 22:38:12.777841: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
    2019-04-23 22:38:12.868632: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
    2019-04-23 22:38:12.868990: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: 
    name: TITAN X (Pascal) major: 6 minor: 1 memoryClockRate(GHz): 1.531
    pciBusID: 0000:02:00.0
    totalMemory: 11.91GiB freeMemory: 9.38GiB
    2019-04-23 22:38:12.869004: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0
    2019-04-23 22:38:13.675859: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:
    2019-04-23 22:38:13.675884: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 
    2019-04-23 22:38:13.675889: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N 
    2019-04-23 22:38:13.676041: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9063 MB memory) -> physical GPU (device: 0, name: TITAN X (Pascal), pci bus id: 0000:02:00.0, compute capability: 6.1)
    Traceback (most recent call last):
      File "./ada.py", line 17, in 
        optimizer.apply_gradients(grads_and_vars=[(g, var)])
      File "/home/anaconda/anaconda3/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 610, in apply_gradients
        update_ops.append(processor.update_op(self, grad))
      File "/home/anaconda/anaconda3/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 166, in update_op
        g.values, self._v, g.indices)
      File "/home/anaconda/anaconda3/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 963, in _resource_apply_sparse_duplicate_indices
        return self._resource_apply_sparse(summed_grad, handle, unique_indices)
      File "/home/anaconda/anaconda3/lib/python3.6/site-packages/tensorflow/python/training/adagrad.py", line 132, in _resource_apply_sparse
        use_locking=self._use_locking)
      File "/home/anaconda/anaconda3/lib/python3.6/site-packages/tensorflow/python/training/gen_training_ops.py", line 2258, in resource_sparse_apply_adagrad
        _six.raise_from(_core._status_to_exception(e.code, message), None)
      File "", line 3, in raise_from
    tensorflow.python.framework.errors_impl.NotFoundError: No registered 'ResourceSparseApplyAdagrad' OpKernel for GPU devices compatible with node {{node ResourceSparseApplyAdagrad}} = ResourceSparseApplyAdagrad[T=DT_FLOAT, Tindices=DT_INT32, update_slots=true, use_locking=false](dummy_input, dummy_input, dummy_input, dummy_input, dummy_input)
    	.  Registered:  device='CPU'; T in [DT_DOUBLE]; Tindices in [DT_INT64]
      device='CPU'; T in [DT_DOUBLE]; Tindices in [DT_INT32]
      device='CPU'; T in [DT_FLOAT]; Tindices in [DT_INT64]
      device='CPU'; T in [DT_FLOAT]; Tindices in [DT_INT32]
      device='CPU'; T in [DT_BFLOAT16]; Tindices in [DT_INT64]
      device='CPU'; T in [DT_BFLOAT16]; Tindices in [DT_INT32]
      device='CPU'; T in [DT_HALF]; Tindices in [DT_INT64]
      device='CPU'; T in [DT_HALF]; Tindices in [DT_INT32]
     [Op:ResourceSparseApplyAdagrad]
Environment information:
    == cat /etc/issue ===============================================
    Linux hamburg 4.15.0-47-generic #50-Ubuntu SMP Wed Mar 13 10:44:52 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
    VERSION="18.04.2 LTS (Bionic Beaver)"
    VERSION_ID="18.04"
    VERSION_CODENAME=bionic
    == are we in docker =============================================
    No
    == compiler =====================================================
    c++ (Ubuntu 6.5.0-2ubuntu1~18.04) 6.5.0 20181026
    Copyright (C) 2017 Free Software Foundation, Inc.
    This is free software; see the source for copying conditions.  There is NO
    warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    == uname -a =====================================================
    Linux hamburg 4.15.0-47-generic #50-Ubuntu SMP Wed Mar 13 10:44:52 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
    == check pips ===================================================
    msgpack-numpy                      0.4.3.2    
    numpy                              1.16.1     
    numpydoc                           0.8.0      
    protobuf                           3.6.1      
    tensorflow-estimator               1.13.0     
         13084:       trying file=tls/x86_64/libpthread.so.0
         13084:       trying file=tls/libpthread.so.0
         13084:       trying file=haswell/x86_64/libpthread.so.0
         13084:       trying file=haswell/libpthread.so.0
         13084:       trying file=x86_64/libpthread.so.0
         13084:       trying file=libpthread.so.0
         13084:      search cache=/etc/ld.so.cache
         13084:       trying file=/lib/x86_64-linux-gnu/libpthread.so.0
         13084:
         13084:     find library=libc.so.6 [0]; searching
         13084:      search path=/home/anaconda/anaconda3/bin/../lib                (RPATH from file /home/anaconda/anaconda3/bin/python)