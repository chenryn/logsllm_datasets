## 用PolarDB生成“上帝的指纹”        
### 作者                        
digoal                        
### 日期                        
2022-09-08                       
### 标签                        
PostgreSQL , PolarDB , 分形 , 曼德勃罗集 , plpgsql , 递归 , Julia , Mandelbrot                 
----                        
## 背景            
分形法则被誉为神性法则, 因为它的公式极其简单, 但是能产生无穷无尽的自相似性. 例如通过分形公式产生的曼德勃罗集, 被成为上帝的指纹.      
PS: 如何部署PolarDB开源版, 请参考: [《如何用 PolarDB 证明巴菲特的投资理念》](../202209/20220908_02.md)    
1、分形公式:      
```      
z=z^2+c      
z可以是单数、也可以是复数、甚至可以是多维数.       
```     
2、复数运算:       
```      
(a+bi)(c+di) = (ac-bd)+(ad+bc)i      
(a+bi) + (c+di) = (a+c)+(b+d)i      
(a+bi) - (c+di) = (a-c)+(b-d)i      
```     
先来个简单的, 观察一下c和z0固定时, 如何产生z的迭代值:      
```      
WITH RECURSIVE t(n, zr, zi, cr, ci) AS (        
    VALUES (1, 0::float8, 0::float8, 0.1::float8, 0.1::float8)        
  UNION ALL        
    SELECT n+1, zr*zr - zi*zi + cr, zr*zi + zi*zr + ci, cr, ci FROM t WHERE n >       
  for x in -300..300 loop  -- cr, 表示白布的x轴像素点范围是-300到300      
  >       
  for y in -200..200 loop  -- ci, 表示白布的y轴像素点范围是-200到200      
  >       
  for k in 1..200 loop  -- z的发散速度, i 表示颜色深度; 最多迭代200次, 200次就是黑色, 1次可能就接近白色.        
    tmpr := zr*zr - zi*zi + x::numeric/300.0::numeric;      
    tmpi := zr*zi + zi*zr + y::numeric/200.0::numeric;      
    zr := tmpr;      
    zi := tmpi;       
    i := k;      
    exit label_i when sqrt(zr*zr + zi*zi) > 2;    -- z的迭代次数截止于|z|>2, 因为此时z会无限发散.          
  end loop label_i ;      
  raise notice 'cr:%, ci:%, i:%', x, y, i;      
  zr := 0.0;  -- z0r      
  zi := 0.0;  -- z0i      
  end loop label_y ;      
  end loop label_x ;      
end;      
$$;      
```      
cr为x坐标,ci为y坐标,i为颜色深度:        
```      
NOTICE:  cr:-300, ci:-200, i:3      
NOTICE:  cr:-300, ci:-199, i:3      
NOTICE:  cr:-300, ci:-198, i:3      
NOTICE:  cr:-300, ci:-197, i:3      
NOTICE:  cr:-300, ci:-196, i:3      
NOTICE:  cr:-300, ci:-195, i:3      
NOTICE:  cr:-300, ci:-194, i:3      
NOTICE:  cr:-300, ci:-193, i:3      
NOTICE:  cr:-300, ci:-192, i:3      
NOTICE:  cr:-300, ci:-191, i:3      
NOTICE:  cr:-300, ci:-190, i:3      
NOTICE:  cr:-300, ci:-189, i:3      
NOTICE:  cr:-300, ci:-188, i:3      
NOTICE:  cr:-300, ci:-187, i:3      
NOTICE:  cr:-300, ci:-186, i:3      
NOTICE:  cr:-300, ci:-185, i:3      
NOTICE:  cr:-300, ci:-184, i:3      
NOTICE:  cr:-300, ci:-183, i:3      
NOTICE:  cr:-300, ci:-182, i:3      
NOTICE:  cr:-300, ci:-181, i:3      
NOTICE:  cr:-300, ci:-180, i:3      
NOTICE:  cr:-300, ci:-179, i:3      
NOTICE:  cr:-300, ci:-178, i:3      
NOTICE:  cr:-300, ci:-177, i:3      
NOTICE:  cr:-300, ci:-176, i:3      
NOTICE:  cr:-300, ci:-175, i:3      
NOTICE:  cr:-300, ci:-174, i:3      
NOTICE:  cr:-300, ci:-173, i:3      
NOTICE:  cr:-300, ci:-172, i:3      
NOTICE:  cr:-300, ci:-171, i:3      
NOTICE:  cr:-300, ci:-170, i:3      
NOTICE:  cr:-300, ci:-169, i:3      
NOTICE:  cr:-300, ci:-168, i:3      
NOTICE:  cr:-300, ci:-167, i:3      
NOTICE:  cr:-300, ci:-166, i:3      