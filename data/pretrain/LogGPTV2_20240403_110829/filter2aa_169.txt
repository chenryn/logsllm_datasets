openbms代码审计
项目地址：链接
系统认证逻辑
系统采用thinkphp框架开发，主要是后台 admin 的功能
所有控制器全都继承 AdminBase.php ，认证程序也是在 AdminBase.php 中进行的，在进行父类
的初始化后有两个函数用于登录校验和权限校验-- checklogin() 和 checkAuth() 。
其中这个 checkAuth() 方法设置了白名单， $noLogin , $noAuth 两个数组中的是白名单接口，可
以不进行权限校验，也就是任意用户登录后都可以调用。
后台任意文件上传
看后台的 index 控制器，定义了 $noLogin , $noAuth 两个数组，且其中存在不需要权限认证的接
口，包括三个上传接口。漏洞存在 uploadFile 接口。
    文件上传：
重点关注这个 uploadFile 方法。通过 $file->move() 方法进行文件上传，这个类是 thinkphp 为
我们提供的。
重点关注两个方法， $this->check() 方法和 $this->buildSaveName() 方法。其中 check() 方
法是用来校验上传文件是否合法的，包括校验扩展名，但是此处没有传入校验规则，所以校验全部
通过。
之后是 buildSaveName() 方法，这个是上传后文件保存的名字，这个地方需要仔细看看。
默认的保存规则是 date ，进入第一个分支，然后文件名是 date('Ymd') . DS . 
md5(microtime(true)) ，其中这个 microtime 返回的是系统时间戳， float 类型。因为这里文
件保存名称很特别，前面的代码显示上传成功后会返回上传的文件名，但是此处正式上传会报错，
所以需要计算这个 microtime 的值。
此处的计算技巧就是根据报错信息返回的 microtime 来缩小计算范围。我们打印的值
1644852705.0246 比 THINK_START_TIME 稍大，所以以此来计算这个值，相对来说爆破数量就会
小很多。