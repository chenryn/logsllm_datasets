---
author: Magesh Maruthamuthu
category: 分享
comments_data:
- date: '2020-03-17 14:12:17'
  message: 如果有账户怎么办，不用asciinema auth吧？wsl里安装后没有~/.config/asciinema/config文件
  postip: 223.90.121.107
  username: 来自河南的 Chrome 80.0|Windows 10 用户
- date: '2020-03-17 14:34:28'
  message: 已解决，token位于~/.config/asciinema/install-id
  postip: 223.90.121.37
  username: 来自河南的 Chrome 80.0|Windows 10 用户
count:
  commentnum: 2
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 5203
date: '2019-02-08 23:30:50'
editorchoice: false
excerpt: asciinema 是一个自由开源的用于录制终端会话并将它们分享到网络上的解决方案。
fromurl: https://www.2daygeek.com/linux-asciinema-record-your-terminal-sessions-share-them-on-web/
id: 10520
islctt: true
largepic: /data/attachment/album/201902/08/233016gh6peg96l0lp2js5.jpg
permalink: /article-10520-1.html
pic: /data/attachment/album/201902/08/233016gh6peg96l0lp2js5.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: asciinema 是一个自由开源的用于录制终端会话并将它们分享到网络上的解决方案。
tags:
- asciinema
- 终端
- 会话
thumb: false
title: Asciinema：在云端记录并分享你的终端会话
titlepic: true
translator: bestony
updated: '2019-02-08 23:30:50'
---
![](/data/attachment/album/201902/08/233016gh6peg96l0lp2js5.jpg)
这个众所周知的话题我们早已经写过了足够多的文章。即使这样，我们今天也要去讨论相同的话题。
其他的工具都是在本地运行的，但是 Asciinema 可以以相同的方式在本地和 Web 端运行。我的意思是我们可以在 Web 上分享这个录像。
默认情况下，每个人都更愿意使用 `history` 命令来回看、调用之前在终端内输入的命令。不过，不行的是，这个命令只展示了我们运行的命令却没有展示这些命令上次运行时的输出。
在 Linux 下有很多的组件来记录终端会话活动。在过去，我们也写了一些组件，不过今天我们依然要讨论这同一类心的工具。
如果你想要使用其他工具来记录你的 Linux 终端会话活动，你可以试试 [Script 命令](https://www.2daygeek.com/script-command-record-save-your-terminal-session-activity-linux/)、[Terminalizer 工具](https://www.2daygeek.com/terminalizer-a-tool-to-record-your-terminal-and-generate-animated-gif-images/) 和 [Asciinema 工具](https://www.2daygeek.com/Asciinema-record-your-terminal-sessions-as-svg-animations-in-linux/)。
不过如果你想要找一个 [GIF 录制工具](https://www.2daygeek.com/category/gif-recorder/)，可以试试 [Gifine](https://www.2daygeek.com/gifine-create-animated-gif-vedio-recorder-linux-mint-debian-ubuntu/)、[Kgif](https://www.2daygeek.com/kgif-create-animated-gif-file-active-window-screen-recorder-capture-arch-linux-mint-fedora-ubuntu-debian-opensuse-centos/) 和 [Peek](https://www.2daygeek.com/peek-create-animated-gif-screen-recorder-capture-arch-linux-mint-fedora-ubuntu/)。
### 什么是 Asciinema
`asciinema` 是一个自由开源的用于录制终端会话并将它们分享到网络上的解决方案。
当你在你的终端内运行 `asciinema rec` 来启动录像时，你输入命令的时候，终端内的所有输出都会被抓取。
当抓取停止时（通过按下 `Ctrl-D` 或输出 `exit`)，抓取的输出将会被上传到 asciinema.org 的网站，并为后续的回放做准备。
Asciinema 项目由多个不同的完整的部分组成，比如 `asciinema` 命令行工具、asciinema.org API 和 JavaScript 播放器。
Asciinema 的灵感来自于 `script` 和 `scriptreplay` 命令。
### 如何在 Linux 上安装 Asciinema
Asciinema 由 Python 写就，在 Linux 上，推荐使用 `pip` 安装的方法来安装。
确保你已经在你的系统里安装了 python-pip 包。如果没有，使用下述命令来安装它。
对于 Debian/Ubuntu 用户，使用 [Apt 命令](https://www.2daygeek.com/apt-command-examples-manage-packages-debian-ubuntu-systems/) 或 [Apt-Get 命令](https://www.2daygeek.com/apt-get-apt-cache-command-examples-manage-packages-debian-ubuntu-systems/) 来安装 pip 包。
```
$ sudo apt install python-pip
```
对于 Archlinux 用户，使用 [Pacman 命令](https://www.2daygeek.com/pacman-command-examples-manage-packages-arch-linux-system/) 来安装 pip 包。
```
$ sudo pacman -S python-pip
```
对于 Fedora 用户，使用 [DNF 命令](https://www.2daygeek.com/dnf-command-examples-manage-packages-fedora-system/) 来安装 pip 包。
```
$ sudo dnf install python-pip
```
对于 CentOS/RHEL 用户，使用 [YUM 命令](https://www.2daygeek.com/yum-command-examples-manage-packages-rhel-centos-systems/) 来安装 pip 包。
```
$ sudo yum install python-pip
```
对于 openSUSE 用户，使用 [Zypper 命令](https://www.2daygeek.com/zypper-command-examples-manage-packages-opensuse-system/) 来安装 pip 包。
```
$ sudo zypper install python-pip
```
最后，运行如下的 [pip 命令](https://www.2daygeek.com/install-pip-manage-python-packages-linux/) 来在 Linux 上安装 Asciinema 工具。
```
$ sudo pip3 install asciinema
```
### 如何使用 Asciinema 工具来记录你的终端会话
一旦你成功的安装了 Asciinema，只需要运行如下命令来开始录制：
```
$ asciinema rec 2g-test
asciinema: recording asciicast to 2g-test
asciinema: press "ctrl-d" or type "exit" when you're done
```
出于测试的目的，运行一些简单的命令，并看一看它是否运行良好。
```
$ free
              total        used        free      shared  buff/cache   available
Mem:          15867        2783       10537        1264        2546       11510
Swap:         17454           0       17454
$ hostnamectl
   Static hostname: daygeek-Y700
         Icon name: computer-laptop
           Chassis: laptop
        Machine ID: 31bdeb7b833547368d230a2025d475bc
           Boot ID: c84f7e6f39394d1f8fdc4bcaa251aee2
  Operating System: Manjaro Linux
            Kernel: Linux 4.19.8-2-MANJARO
      Architecture: x86-64
$ uname -a
Linux daygeek-Y700 4.19.8-2-MANJARO #1 SMP PREEMPT Sat Dec 8 14:45:36 UTC 2018 x86_64 GNU/Linux
$ lscpu
Architecture:        x86_64
CPU op-mode(s):      32-bit, 64-bit
Byte Order:          Little Endian
Address sizes:       39 bits physical, 48 bits virtual
CPU(s):              8
On-line CPU(s) list: 0-7
Thread(s) per core:  2
Core(s) per socket:  4
Socket(s):           1
NUMA node(s):        1
Vendor ID:           GenuineIntel