  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
The `import()` promise returns the entire module, including `default`.
## Current Behavior
The `import()` promise returns the `default` export if it exists; otherwise,
it returns the entire module. This breaks the spec-compliant method of loading
default exports:
`import('/some-module').then(module => module.default);`
## Steps to Reproduce (for bugs)
https://repro-ilvgtolutc.now.sh  
https://github.com/tptee/nextjs-import-spec-repro
## Context
I'm trying to create examples for my library that uses `import()`, and
`next`'s behavior is surprising compared to CRA and custom setups. Ensuring
spec compliance would allow examples to apply everywhere and be shareable
across environments.
These lines in the `handle-import` Babel plugin seem to be the offenders:
  * https://github.com/zeit/next.js/blob/v3-beta/server/build/babel/plugins/handle-import.js#L16
  * https://github.com/zeit/next.js/blob/v3-beta/server/build/babel/plugins/handle-import.js#L26
  * https://github.com/zeit/next.js/blob/v3-beta/server/build/babel/plugins/handle-import.js#L32
Happy to PR a fix, although it'll likely be a breaking change and (maybe) a
usability loss.
## Your Environment
Tech | Version  
---|---  
next | v3.0.1-beta.17  
node | v7.9.0  
OS | macOS 10.12.5  
browser | Chrome 60.0.3112.50 (Official Build) beta (64-bit)