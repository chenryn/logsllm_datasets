### PostgreSQL 14 新特性概览

#### 1. 角色和权限
- **新增角色**：PostgreSQL 14 引入了 `pg_read_all_data` 和 `pg_write_all_data` 预定义角色，分别用于授予全局只读和写权限。
  - 示例：
    ```sql
    postgres=# CREATE ROLE ro LOGIN;
    CREATE ROLE
    postgres=# GRANT pg_read_all_data TO ro;
    GRANT ROLE
    postgres=# \c postgres ro
    You are now connected to database "postgres" as user "ro".
    ```

- **错误示例**：尝试插入数据时会遇到权限问题。
  ```sql
  postgres=> INSERT INTO tbl VALUES (1, 'test', NOW());
  INSERT 0 1
  postgres=> SELECT * FROM tbl LIMIT 1;
  ERROR:  permission denied for table tbl
  ```

#### 2. 认证方法
- **默认认证方法**：新实例默认使用 SCRAM-SHA-256 认证方法，提高安全性，避免 MD5 密钥泄露和协议攻击。
  - 场景：通用
  - 价值：提升密码认证的安全性
  - 示例：
    ```sql
    postgres=# SELECT rolname, rolpassword FROM pg_authid WHERE rolname = 'postgres';
     rolname |                                                                 rolpassword                                                                 
    ---------+---------------------------------------------------------------------------------------------------------------------------------------------
     postgres | SCRAM-SHA-256$4096:HQ/MO4C1qFcdRonv2hiG0Q==$Cgif0D/DtZQwwQNtOtvDs3LQtTZs6C2mPoKT9bcjbdw=:2YD87hpH+x/FudOeFtLQAqVHlwYBo/iCR8nZdhhsP4c=
    (1 row)
    ```

- **配置检查**：
  ```sql
  postgres=# SELECT * FROM pg_settings WHERE name = 'password_encryption';
   -[ RECORD 1 ]----+------------------------------------------------
  name             | password_encryption
  setting          | scram-sha-256
  unit             | 
  category         | Connections and Authentication / Authentication
  short_desc       | Chooses the algorithm for encrypting passwords.
  extra_desc       | 
  context          | user
  vartype          | enum
  source           | default
  min_val          | 
  max_val          | 
  enumvals         | {md5,scram-sha-256}
  boot_val         | scram-sha-256
  reset_val        | scram-sha-256
  sourcefile       | 
  sourceline       | 
  pending_restart  | f
  ```

#### 3. SSL 客户端证书校验
- **客户端证书校验**：`pg_hba.conf` 中的 `clientcert` 参数支持 `verify-ca` 或 `verify-full` 校验客户端证书的真实性，并验证证书的 DN 内容是否与连接的数据库用户匹配。
  - 场景：通用
  - 价值：提高客户端 SSL 证书检测的安全性
  - 示例：
    ```ini
    hostssl all all 0.0.0.0/0 cert clientcert=verify-full
    ```

- **DN 提取选项**：支持从客户端证书中提取 CN 和 DN 内容，遵循 RFC2253。
  - 场景：通用
  - 价值：增加 SSL 证书 CN 和 DN 内容的可用范围
  - 示例：
    ```ini
    hostssl all all 0.0.0.0/0 cert clientcert=verify-full clientname=CN
    ```

#### 4. libpq 协议层优化
- **数据库状态判断**：libpq 协议层支持在不发起 SQL 的情况下判断数据库的角色（主库或备库）。
  - 场景：读写分离、多数据源场景
  - 价值：提高判断数据库角色的效率
  - 示例：
    ```sql
    postgresql://host1:123,host2:456/somedb?target_session_attrs=any&application_name=myapp
    ```

- **目标会话属性配置**：支持 `target_session_attrs` 属性配置，包括 `any`, `read-only`, `read-write`, `primary`, `standby`, 和 `prefer-standby`。
  - 场景：读写分离、多数据源场景
  - 价值：根据数据库状态选择是否连接该目标，实现负载均衡
  - 示例：
    ```sql
    postgresql://host1:123,host2:456/somedb?target_session_attrs=read-only&application_name=myapp
    ```

### 详细信息
更多关于 PostgreSQL 14 的新特性和改进，请参阅以下链接：

- [《PostgreSQL 14 preview - 新增角色 pg_read_all_data (MySQL 兼容性之 - 读写用户的只读影子用户 - 默认读权限), pg_write_all_data (写权限)》](../202104/20210406_03.md)
- [《PostgreSQL 14 preview - TDE cluster_key_command 配置例子》](../202012/20201229_01.md)
- [《PostgreSQL 14 preview - 支持TDE功能, 支持加密数据文件, 支持加密WAL日志文件》](../202012/20201228_01.md)
- [《PostgreSQL 14 preview - 分区表attach, detach分区支持无锁(短暂锁) - 基于2阶段routines管理》](../202103/20210326_04.md)
- [《PostgreSQL 14 preview - 分区表性能增强, Avoid creating duplicate cached plans for inherited FK constraints. 节约cache》](../202103/20210311_01.md)
- [《PostgreSQL 14 preview - 分区表性能再次增强 - ExecInitModifyTable 分区裁剪精细化》](../202104/20210407_01.md)

更多内容请参考相关文档。