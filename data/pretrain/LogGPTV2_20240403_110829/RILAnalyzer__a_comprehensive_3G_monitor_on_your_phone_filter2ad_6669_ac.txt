t
f
o
s
o
r
c
M
i
i
a
m
a
k
A
t
e
u
t
s
A
e
v
o
c
t
h
g
i
r
B
t
s
k
r
o
w
e
N
D
C
C
D
I
t
f
o
s
o
r
c
M
i
l
i
t
a
m
o
H
S
M
e
p
y
k
S
r
e
y
a
l
t
f
o
S
t
l
e
n
a
P
e
h
T
r
e
t
t
i
w
T
t
s
a
C
e
g
d
E
r
e
h
O
t
Hosting/Cloud/CDN service
Figure 6: Percentage of observed RNC promotions per ap-
plication to diﬀerent backends
teraction patterns, but taking into account RNC behavior
of each device as recorded by RILAnalyzer. We count pro-
motions to both FACH and DCH states. As we can see,
applications have diﬀerent frequencies in terms of RNC pro-
motion frequency and the steps on the lines (especially clear
in the cases of WhatsApp and Facebook) represent periodic
messages, such as TCP or HTTP/1.1 keepalives.
Apps have to rely heavily on backend infrastructure, such
as CDNs, advertising networks [3], push mechanisms [24],
and authentication APIs (e.g. OAuth), often managed by
diﬀerent organizations. An often overlooked fact is that a lot
of overheads are exactly due to distributed backends’ lack of
coordination even in a single app, as indicated by Figure 6.
Every long lived TCP connection is kept alive individually.
Using reverse DNS to map network traﬃc to applications
would incorrectly attribute it to the apps developed by the
same company that owns the backend infrastructure.
Something that is only accurately feasible from within a
device (e.g. using RILAnalyzer) is demonstrated in Figure 6:
the proportion of RNC promotions in which there is traﬃc
to a particular backend (a few more apps are included for
comparison). Each network packet is assigned promotion ID
during which it is transmitted and the percentage is obtained
by combining organization name obtained from reverse DNS
with the promotion ID. Naturally, there are promotions dur-
ing which traﬃc goes to multiple backends. This happens
when the sum of percentages for an app is more than 100%.
Skype here demonstrates a pathological case due to its
P2P nature: RNC promotions are triggered every 30 sec-
onds on average to maintain connections with other con-
nected users.
In addition, it relies on distributed services
to monitor QoS, billing, and to guarantee reachability and
resilience (managed by Microsoft or Skype). As much as
74% of connections are directly to other peers although sur-
prisingly they only account for 57% of packets. Google’s
GCM, on the other hand, aggregates notiﬁcations for mul-
tiple applications (Google’s own and ones that use it for
push notiﬁcations) reducing the amortized cost for each ap-
plication - only one open TCP connection is needed to a
single entity serving multiple applications. We can not iso-
late per-application information from Google GCM protocol
and have to analyze the entity as a whole.
Another problem with distributed backends is due to the
fact that cellular networks are controlled by middleboxes for
security and performance [25]. Such middleboxes impose re-
strictions on the way applications maintain their connections
at the transport [26] and application layer [27]. We found us-
7. REFERENCES
[1] F. Qian, Z. Wang, A. Gerber, Z. M. Mao, S. Sen, and
O. Spatscheck. Characterizing radio resource
allocation for 3G networks. In Proceedings of ACM
IMC, 2010.
[2] Nokia Siemens Networks Smart Labs. Understanding
smartphone behavior in the network.
http://www.nokiasiemensnetworks.com/sites/
default/files/document/Smart_Lab_WhitePaper_
27012011_low-res.pdf, 2011.
[3] N. Vallina-Rodriguez, J. Shah, A. Finamore,
Y. Grunenberger, K. Papagiannaki, H. Haddadi, and
J. Crowcroft. Breaking for commercials: characterizing
mobile advertising. In Proceedings of ACM IMC, 2012.
[4] J. Huang, F. Qian, Z. M. Mao, S. Sen, and
O. Spatscheck. Screen-oﬀ traﬃc characterization and
optimization in 3G/4G networks. In Proceedings of
ACM IMC, 2012.
[13] M. Z. Shaﬁq, L. Ji, A. X. Liu, J. Pang, and J. Wang.
A ﬁrst look at cellular machine-to-machine traﬃc:
large scale measurement and characterization. In
Proceedings of ACM SIGMETRICS, 2012.
[14] H. Falaki, R. Mahajan, S. Kandula,
D. Lymberopoulos, R. Govindan, and D. Estrin.
Diversity in smartphone usage. In Proceedings of ACM
MobiSys, 2010.
[15] L. Zhang, B. Tiwana, Z. Qian, Z. Wang, R. P. Dick,
Z. M. Mao, and L. Yang. Accurate online power
estimation and automatic battery behavior based
power model generation for smartphones. In
Proceedings of IEEE/ACM CODESS, 2010.
[16] P. Abhinav, Y. C. Hu, and M. Zhang. Where is the
energy spent inside my app?: ﬁne grained energy
accounting on smartphones with Eprof. In Proceedings
of ACM EuroSys, 2012.
[17] Github. XGoldMon project.
[5] F. Qian, Z. Wang, Y. Gao, J. Huang, A. Gerber, Z. M.
https://github.com/2b-as/xgoldmon.
Mao, S. Sen, and O. Spatscheck. Periodic transfers in
mobile applications: network-wide origin, impact, and
optimization. In Proceedings of WWW Conference,
2012.
[6] Qualcomm Extensible Diagnostic Monitor.
http://www.qualcomm.com/media/documents/qxdm-
professional-qualcomm-extensible-diagnostic-
monitor.
[7] F. Qian, Z. Wang, A. Gerber, Z. M. Mao, S. Sen, and
O. Spatscheck. Proﬁling resource usage for mobile
applications: a cross-layer approach. In Proceedings of
ACM MobiSys, 2011.
[8] J. Huang, F. Qian, A. Gerber, Z. M. Mao, S. Sen, and
O. Spatscheck. A close examination of performance
and power characteristics of 4G LTE networks. In
Proceedings of ACM MobiSys, 2012.
[9] N. Balasubramanian, A. Balasubramanian, and
A. Venkataramani. Energy consumption in mobile
phones: a measurement study and implications for
network applications. In Proceedings of ACM IMC,
2009.
[10] N. Vallina-Rodriguez and J. Crowcroft. Energy
management techniques in modern mobile handsets.
Communications Surveys Tutorials, IEEE, 2013.
[11] Z. Shaﬁq, L. Ji, A. Liu, J. Pang, S. Venkataraman,
and J. Wang. A ﬁrst look at cellular network
performance during crowded events. In Proceedings of
ACM SIGMETRICS, 2013.
[12] J. Erman, A. Gerber, K. K. Ramadrishnan, S. Sen,
and O. Spatscheck. Over the top video: the gorilla in
cellular networks. In Proceedings of ACM IMC, 2011.
[18] RILAnalyzer. http://rilanalyzer.smart-e.org/.
[19] X. Wei, L. Gomez, I. Neamtiu, and M. Faloutsos.
ProﬁleDroid: multi-layer proﬁling of android
applications. In Proceedings of ACM Mobicom, 2012.
[20] Github. Network Log.
https://github.com/pragma-/networklog.
[21] Speedtest android application.
https://play.google.com/store/apps/details?id=
org.zwanoo.android.speedtest&hl=en.
[22] A. Jindal, A. Pathak, Y. C. Hu, and S. Midkiﬀ.
Hypnos: understanding and treating sleep conﬂicts in
smartphones. In Proceedings of ACM EuroSys, 2013.
[23] Nokia. 3G radio optimisation parameter testing guide.
http://www.scribd.com/doc/103289214/Parameter-
Testing-Reference-Quide.
[24] Google Cloud Messaging. http:
//developer.android.com/google/gcm/index.html.
[25] Z. Wang, Z. Qian, Q. Xu, Z. M. Mao, and Ming
Zhang. An untold story of middleboxes in cellular
networks. In Proceedings of the ACM SIGCOMM
Conference, 2011.
[26] F. Busatto. TCP Keepalive HOWTO.
http://tldp.org/HOWTO/TCP-Keepalive-HOWTO.
[27] R. Fielding, J. Gettys, J. Mogul, H. Frystyk,
L. Masinter, P. Leach, and T. Berners-Lee. Hypertext
Transfer Protocol – HTTP/1.1, 1999.
[28] F. Qian, Z. Wang, A. Gerber, Z. M. Mao, S. Sen, and
O. Spatscheck. TOP: Tail Optimization Protocol For
Cellular Radio Resource Allocation. In Proceedings of
IEEE ICNP, 2010.