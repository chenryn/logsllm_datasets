7
0
Table 9: Trusted Leaf Certiﬁcate Public Key Distribution
Type
SHA-1 with RSA Encryption
MD5 with RSA Encryption
SHA-256 with RSA Encryption
SHA-512 with RSA Encryption
MD2 with RSA Encryption
Other
Trusted Certiﬁcates
5,972,001
(98.7%)
(0.54%)
32,905
(0.25%)
15,297
(0.00%)
7
(0.00%)
21
29,705
(0.49%)
Table 10: Trusted Leaf Certiﬁcate Signature Algorithms
Signature Algorithms
In line with the results presented by Holz
et al. [17], we ﬁnd that 98.7% of browser-trusted certiﬁcates are
signed using SHA-1 and RSA encryption. We ﬁnd 22 trusted certiﬁ-
cates with MD2-based signatures and 31,325 with MD5 signatures.
Due to known weaknesses in these hash functions, no organiza-
tions should currently be using them to sign certiﬁcates. The last
certiﬁcate signed with MD5 was issued on April 17, 2013 by Finmec-
canica S.p.A., an Italian defense contractor, more than 4 years after
Sotirov et al. published “MD5 considered harmful today” [32]. We
provide a breakdown of leaf certiﬁcate signature types in Table 10.
Certiﬁcate Depth
Similarly to the EFF and Holz et al., we ﬁnd
that the vast majority (98%) of leaf certiﬁcates are signed by in-
termediate authorities one intermediate away from a root authority.
However we ﬁnd that 61 root authorities directly signed 41,000
leaf certiﬁcates and that there exist leaf certiﬁcates as many as 5
intermediates away from a root authority. All but a handful of the
authorities 4 or more intermediates away from a browser-trusted
root belonged to agencies within the U.S. Federal Government.
We are not aware of any vulnerabilities created by having a long
certiﬁcate chain. However, it is worrisome to see leaf certiﬁcates
directly signed by root authorities, because this indicates that the
root signing key is being actively used and may be stored in a
network-attached system, raising the risk of compromise. If the
signing key were to be compromised, the root certiﬁcate could not
be replaced without updating all deployed browser installations.
If an intermediate authority were used instead to sign these leaf
certiﬁcates, then it could be replaced by the root authority without
requiring browser updates, and the root could be kept ofﬂine during
day-to-day operation.
6.2
Incorrectly Hosted Trusted Certiﬁcates
We ﬁnd that 1.32 million hosts (12.7%) serving once-valid browser-
trusted leaf certiﬁcates are misconﬁgured in a manner such that they
are inaccessible to some clients or are being hosted beyond their
validity period. We show a breakdown of reasons that certiﬁcates
are invalid in Table 11. We note that Mozilla Network Security
Services (NSS) [27], the certiﬁcate validation library utilized by
many browsers, caches previously seen intermediates. Because of
this, many certiﬁcates with invalid trust chains will appear valid in
users’ browsers if the intermediate authorities have previously been
encountered.
Approximately 5.8% of hosts are serving now-expired certiﬁcates,
which will be considered invalid by all browsers. We ﬁnd that 22%
of certiﬁcates are removed retroactively after their expiration and
that 19.5% of revoked certiﬁcates are removed after they appear in a
certiﬁcate revocation list (CRL). We show the distribution of when
certiﬁcates are removed from servers in Figure 6. Another 42.2%
of hosts are providing unnecessary certiﬁcates in the presented trust
chain. Although this practice has no security implications, these
additional certiﬁcates provide no beneﬁt to the client and ultimately
result in a slight performance degradation.
Holz et al. report that 18% of all certiﬁcates are expired. However,
this statistic reﬂected all certiﬁcates, over 25% of which are self-
signed and would already raise a browser error. We instead consider
only certiﬁcates signed by browser-trusted authorities, which would
otherwise be considered valid.
Status
Expired
Not Yet Valid
Revoked
No Trust Chain
Misordered Chain
Incorrect Chain
Unnecessary Root
Optimally Conﬁgured
Hosts
595,168
1,966
28,033
654,667
25,667
11,761
4,365,321
4,657,133
(5.80%)
(0.02%)
(0.27%)
(6.30%)
(0.24%)
(0.14%)
(42.2%)
(45.0%)
Table 11: Common Server Certiﬁcate Problems — We evaluate
hosts serving browser-trusted certiﬁcates and classify common cer-
tiﬁcate and server conﬁguration errors. The number of misconﬁg-
ured hosts indicates that procuring certiﬁcates and correctly conﬁg-
uring them on servers remains a challenge for many users.
6.3
Invalid Authority Types
We ﬁnd that 47 (2.6%) of the 1,832 browser-trusted signing cer-
tiﬁcates are not denoted for signing TLS certiﬁcates for use on the
web. Of these 47 signing certiﬁcates, 28 (60%) are designated for
signing Microsoft or Netscape Server Gated Crypto certiﬁcates, a
now obsolete cryptographic standard that was used in the 1990s in
response to U.S. regulation on the export of strong cryptographic
standards [29].
The remaining 19 signing certiﬁcates are designated for combina-
tions of Code Signing, E-mail Protection, TLS Web Client Authenti-
cation, Time Stamping, and Microsoft Encrypted File System. These
intermediate certiﬁcates were not found in any browser or operat-
ing system root stores but were found being served on public web
servers. It does not appear that any of these authorities were signing
certiﬁcates inappropriately; nobody was attempting to sign a TLS
Web Server Authentication certiﬁcate using an authority marked for
another use. Instead, we found that individuals and organizations
were mistakenly using valid code signing and e-mail certiﬁcates as
the TLS leaf certiﬁcate on their websites.
6.4 Certiﬁcate Revocation
Certiﬁcate authorities can denote that previously issued certiﬁ-
cates should no longer be trusted by publishing their revocation in
a public certiﬁcate revocation list (CRL). The location of author-
ity CRLs are listed in each signed certiﬁcate. In order to under-
stand why certiﬁcates are being revoked, we fetched and parsed the
CRLs listed in all browser-trusted certiﬁcates. We ﬁnd that 2.5% of
browser-trusted certiﬁcates are eventually revoked by their authority.
We present a breakdown of revocation reasons in Table 9. While
RFC 5280 [11] strongly encourages issuers to provide “meaning-
ful” reason codes for CRL entries, we ﬁnd that 71.7% of issuers
who revoked certiﬁcates do not provide reasons for any of their
revocations.
While 2.5% of certiﬁcates are eventually revoked, we ﬁnd that
only 0.3% of hosts presenting certiﬁcates in our scan were revoked.
We expect that this is because the site operators will request a
certiﬁcate be revoked and simultaneously remove the certiﬁcate
from the web server. As can be seen in Figure 6, more than 80% of
certiﬁcates are removed proactively and were not seen again after
the time of their revocation.
WebTrust for Certiﬁcate Authorities [3], an audit mandated by the
three major root stores, requires that authorities maintain an online
repository that allows clients to check for certiﬁcate revocation
information. However, we ﬁnd that 14 trusted signing certiﬁcates
from 9 organizations fail to include revocation data in at least some
of their certiﬁcates, and in 5 cases do not supply revocation data in
any of their signed certiﬁcates.
7. UNEXPECTED OBSERVATIONS
We observed a variety of unexpected phenomenon during our
scans over the past year. We describe these observations here.
7.1 CA Certs with Multiple Parents
Of the 1,832 browser-trusted signing certiﬁcates we found, 380
shared their subject, public key, and subject key identiﬁer with
another browser-trusted certiﬁcate forming 136 groups of “sibling”
CA certiﬁcates. Because of this, leaf certiﬁcates can have more
than one parent from the browsers’ point of view. We ﬁnd that
only 37.4% of browser trusted leaf certiﬁcates have a single parent;
38.7% have two parents; 12.3% have three; 11.3% have four; and a
small number have 5–9 valid parents. Depending on which parent is
presented in a trust chain, the perceived validity of the leaf certiﬁcate
can change. For example, if the presented intermediate certiﬁcate
has expired, then the leaf certiﬁcate will be considered invalid. We
note that subject key identiﬁed sometimes also speciﬁes additional
constraints such as a constraint on issuer serial number. However, we
ﬁnd that only a handful of certiﬁcates contain additional constraints.
In 86 of the 136 groups of sibling certiﬁcates, the signing cer-
tiﬁcates had differing validity periods.
In four sets, one of the
certiﬁcates was revoked, in a separate four sets, each authority was
in a different browser or OS root store, and in 49 cases the author-
ities were signed by different parent authorities. While previous
studies found evidence of this phenomenon, we were not aware of
the prevalence of this behavior. We are not aware of any security
vulnerabilities that are introduced by this practice, but we do ﬁnd
that 43,674 (1.35%) of the browser-trusted certiﬁcates are presented
with the incorrect parent, which limits their perceived validity (e.g.
the presented CA certiﬁcate expires earlier the leaf certiﬁcate, but
another parent exists with a later expiration date).
7.2 CA Certs with Negative Path Lengths
We ﬁnd that 1,395 browser-trusted CA certiﬁcates have a nega-
tive path length constraint, which renders them unable to sign any
certiﬁcates due to a path length restriction earlier in the trust chain.
These malformed intermediate certiﬁcates were signed by the Gov-
ernment of Korea and provided to educational institutions ranging
Figure 7: Growth in HTTPS Usage — Over the past 14 months,
we observe between 10-25% growth of all aspects of HTTPS usage.
Figure 8: Change in Authority Market Share — In this ﬁgure,
we should the individual growth of the top 10 most proliﬁc certiﬁcate
authorities.
Revocation Reason
Cessation Of Operation
Not Provided
Afﬁliation Changed
Privilege Withdrawn
Unspeciﬁed
Superseded
Key Compromise
Certiﬁcate Hold
CA Compromise
Total
Revoked Certiﬁcates
(64.9%)
101,370
(20.2%)
31514
(4.7%)
7,384
(3.5%)
5,525
4,523
(2.9%)
(2.5%)
3,887
(1.2%)
1,945
(0.0%)
45
2
(0.0%)
156,195
Figure 9: Reasons for Revocation — We ﬁnd that 10,220 (2.5%)
of the browser trusted certiﬁcates seen in our study were eventually
revoked. Both of the “CA Compromised” revocations were due to
the DigiNotar compromise [8].
 0.95 1 1.05 1.1 1.15 1.2 1.2506/1207/1208/1209/1210/1211/1212/1201/1302/1303/1304/1305/13Trusted CertificatesScan DateHTTPS HostsUnique CertificatesTrusted CertificatesAlexa Top 1 Mil. DomainsE.V. CertificatesNetcraft HTTP Hosts 1 1.05 1.1 1.15 1.2 1.25 1.3 1.3506/1207/1208/1209/1210/1211/1212/1201/1302/1303/1304/1305/13Trusted CertificatesScan DateSymantecGoDaddyComodoDigiCertStartComGlobalSignfrom elementary schools to universities, libraries, and museums.
However, because they are still technically CA certiﬁcates, web
browsers including Mozilla Firefox and Google Chrome will not
recognize them as valid leaf certiﬁcates.
We do not include these certiﬁcates when referring to the set of
browser-trusted authorities because they are unable to sign any cer-
tiﬁcates and therefore do not have the same inﬂuence as other valid
authorities. However, we note that some less common client imple-
mentations may fail to properly check the path length constraint and
incorrectly treat these as valid. One of these CA certiﬁcates, issued
to a Korean elementary school, was compromised by Heninger [15],
who factored the 512-bit key a few hours after the certiﬁcate expired.
7.3 Mis-issued CA Certiﬁcates
We found one mis-issued signing certiﬁcate during the course of
our study, which was issued for *.EGO.GOV.TR, by Turktrust, a
small Turkish certiﬁcate authority. We found the certiﬁcate served as
a leaf certiﬁcate on what appeared to be an unconﬁgured IIS server
on a Turkish IP address. We saw 487 certiﬁcates that were signed
by Turktrust over the course of our study. All were for Turkish
organizations or the Turkish Government; we saw no evidence of
other mis-issued certiﬁcates.
The certiﬁcate was later found by Google after being used to sign
a Google wildcard certiﬁcate [21] and was revoked by Turktrust on
December 26, 2012. It was last seen in our scans on December 27,
2012.
7.4 Site Certiﬁcates with Invalid Domains
We ﬁnd that 4.6% (149,902) of browser-trusted certiﬁcates con-
tain a common name (CN) or subject alternate name for a locally
scoped domain or private IP address. Because these names are not
fully qualiﬁed, the intended resource is ambiguous and there is no
identiﬁable owner. As such, these local domain names frequently
appear on more than one certiﬁcate. In one example, there are 1,218
browser-trusted certiﬁcates for the domain mail owned by organiza-
tions ranging from the U.S. Department of Defense to the Lagunitas
Brewing Company.
The vast majority of certiﬁcates appear to be related to mail ser-
vices. Of the 157,861 certiﬁcates with locally scoped names, 25,964
contain the name exchange (Microsoft Exchange Mail Server) and
99,773 contain a variation on the name mail. More than 100,000 of
the certiﬁcates contain a domain ending in .local.
We suspect that certiﬁcates include these locally scoped names in
order to facilitate users that are part of an Active Directory domain
in connecting to their local Exchange mail server. In this scenario,
the integrated DNS service in Active Directory will automatically
resolve locally scoped names to the correct server on the domain.
However, these clients will receive a name mismatch error if the
TLS certiﬁcate presented by the Exchange Server does not match
the locally scoped name that was originally resolved. Instead of