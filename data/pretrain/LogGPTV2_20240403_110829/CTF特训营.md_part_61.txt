x,lastX=lastX-q*x,x
y,lastY=lastY-q*y，y
return (lastX,lastY)
s=egcd（e1,e2)
s1 =s[0]
s2=s[1]
if s1<0:
s1=-s1
c1=primefac.modinv（c1,n)
ifc1<0:
c1+=n
elif s2<0:
s2=-s2
c2=primefac.modinv（c2,n)
if c2<0:
c2+=n
m=(pow(c1,s1,n)*pow（c2,s2,n))%n
return m
n1=
2166019093101327055948798314196634727966604446857200032562828257859
5119101840917794617733535995976710097702806131277006786522442555607
8424859756166892975595833524131600871636568510197694656378569675118
1980347394015471251638058014662001892140635466860452372334089584300
9899397618067679200188650754096242296166060735958270930743173912010
8524671140473015299834966692506713427308041494287002804014814217351
8489996546819180284428569998537023852816350567435038052860014388061
9512293622576854525700785474101747293316814980311297382429844950643
9778257712687573040882595312582220936678474688988233672518243168885
63269155865061
e1=65537
c1=
1162324252006356472150969903903421032931423823406883613075645733514
2671659158578379060500554276831657322012285562047706736377103534543
5651796608637964960711875338608961481538568456389893844296589631349
1523089857217372045427136954343570899445728081936331878341303377401
4447450648051500214508699056865320506104733203716242071136228269326
4514121597608186768141294282525232488223166333393938210526140338846
6164937660424574465114295949891723513807736681810989273829825116176
7344501687113868331134288984466294415889635863660753717476594011236
5421598000993718723961814486554488421489986675681047108074113581179
39831241620315
---
## Page 748
CTF特训营：技术详解、解题方法与
21.2.10共模攻击
748/1144
n2=
2166019093101327055948798314196634727966604446857200032562828257859
5119101840917794617733535995976710097702806131277006786522442555607
8424859756166892975595833524131600871636568510197694656378569675118
1980347394015471251638058014662001892140635466860452372334089584300
9899397618067679200188650754096242296166060735958270930743173912010
8524671140473015299834966692506713427308041494287002804014814217351
8489996546819180284428569998537023852816350567435038052860014388061
9512293622576854525700785474101747293316814980311297382429844950643
9778257712687573040882595312582220936678474688988233672518243168885
63269155865061
e2=70001
c2=
8180690717251057689732022736872836938270075717486355807317876695012
3182831594409358662976445614072388070045655102634135445304210723537
3578128416668591942030580812306390727292559490985221224970492388977
6430284878600408776341129645414000647100303326242514023325498519509
0773119071618494079906493963301461467284473127540916701391593463162
6409179862376443493275327655478169223842805795159310482182302966520
3821775755835076337570281155689527215367647821372680421305939449511
6212442881042292901614846490565057846414863767414094434503319915572
2154005057402489442713933141623626378397706831529419818416915435253
6388685040531
printlong_to_bytes(same_n_sttack(n1,e1,e2,c1,c2))
结果输出如下：
flag{gongmogongjiy
---
## Page 749
CTF特训营：技术详解、解题方法与
21.2.11广播攻击
749/1144
21.2.11广播攻击
Bob不仅仅多次选择的加密指数较低（这里可以取3也可以取其
他较小的素数），而且这几次加密过程，加密的信息都是相同的，那
么有如下算式：
C=mmodn1
C3=m°modn3
那么通过中国剩余定理，可以计算出一个数c为：
Cx=m²modnn2n3
然后通过对c开三次方即可得到m。如果是其他素数作为加密指
数，比如19，就需要19次通信过程然后开19次方。
下面通过一个例子来进行讲述，示例数据如下
n1=
3184273000603708051896374137923057198211094334842809424557962637794
7822948018647924208939817553352341751422089346072154508394996316324
---
## Page 750
CTF特训营：技术详解、解题方法与
21.2.11广描攻击
750/1144
5812283897564937977251885268346311324707880393087251697372873844147
9873134562252371365225692291997677140291131869461287211926390268037
2447828106190537583980179056188763444960983125695272433492970186776
2108269704279672633736501207795045621445495684841694147281740978497
3963496815909387950537128431575589114487416728872653294089055222889
4527124730606216416908379908058157684402654419650706178094757668032
1314108392647
e1=3
c1=
1865207266799996243228817304785105186128313762026459662106438140987
8101196385760354558109181926101629746448043257007270333976312375655
6830925044799769295704711794841460526270721050369407621775367119953
6395804376735980939475943306552210578935155360834667472016665676094
5319371753751891195768347265599143684465997473355834844884002187260
8155937787223148468283232348789126016987184213797163422067891361419
9693895028277295936272132967943949212045133910468330075523225546555
2844622671751926477253558248971126453235950823250148482139499961062
1912346652815164555282745683152172771431287581760538784291077600328
1468632177134
n2=
5947242496412590165886022830117979031270849438565414718945540769656
8016590601454140124390406754363555547309857587323780383887306431834
9070533354398243369777016103428434001943669825258120794789933172487
0247713348112513551744856203618474445966867979101613482134937251288
0253262390405463121575632265978082067289740632668476236633761976207
9571247637961420618486660089181426644142009695085863226604146843272
8039098235219202429667813023866281876260313319408789799168671371967
9319110676932339430583516301369561319770195458806123933315008623635
6170568629175180812130765936995009183145774355930493552117761697017
0121899847499
e2=3
C2=
5329839376003386424531390530291755253783136537372306970258380778841
4119389682778207307369140444699244570379486188958170811839678477478
4986461241834523597459532470448901563306198101997952932516015630478
8684511539016419138205029103288532049627836528718735354249479611169
4231848188352250609648207580608794005386681196241333336101600750283
1907391220279780757270664354871692245617691164648727369361608292446
9901327385014547016959814916531765625265956350393314015819147117668
2928179981667012128425935656684812375623341604091112802457211338217
2969883195688487985204807646382513944836761754934493616028959253959
9562603182308
n3=
---
## Page 751
CTF特训营：技术详解、解题方法与.
21.2.11广播攻击
751/1144
8085416088657947156742492992519822235544632452679133190114395403726
9071931861662543251564994541507287985739993596224309303302021272639
2446482688722523597117616715421450234027457487384685541370636909037
9346730433389404969593984592461837717542818208306165947986299556153
4893358459425241809160308555104350834921888371703396141707886926364
3645685118707286020183941222225360818016046232571863378240874638750
6345941109278794112207507388881229604532960596694888717483930385005
4066549742331
e3=3
c3=
5653726197145346162837879404112929223470893424150062359949223605480
9993089458119558859048280887450688383162997431051833341166123967621
0655676458211427145785986349260865052656315194684376276107329815294
1960847049956977347414986161630989375344461525276107029911060838865
3964994342395869950839385196794419980540285703423073352381718752590
8136407136249899598181733209020287246718299122679096002811046792027
0973579848474333977760753182061177450854107097465324974655913136180
4224877198967927897074633208445500712006065089400145934143164857831
9748099272655626765880110081203297534044415129006003902414264934248
54902736641
三次都使用3作为加密指数，我们假设三次加密的明文是相同的
下面利用广播攻击进行攻击，代码如下：
import gmpy2
fromCrypto.Util.number import long_to_bytes,bytes_to_long.getPrime,isPrime
importprimefac
defbroadcast_attack(data):
def extended_gcd(a,b):
x,y=0,1
lastx,lasty=1,0
while b:
a,(q,b)= b, divmod(a,b)
x,lastx=lastx-q*x,x
y,lasty=lasty-qy，y
return(lastx,lasty,a)
defchinese_remainder_theorem(items)
---
## Page 752
CTF特训营：技术详解、解题方法与
21.2.11广播攻击
752/1144
N=1
for a, n in items:
N*=n
result =0
for a,n in items:
m = N/n
r,s,d=extended_gcd（n,m）
if d=1:
N=N/n
continue
return result%N,N
x,n= chinese_remainder_theorem(data)
m=gmpy2.iroot（x,3)[0]
return m
n1=
3184273000603708051896374137923057198211094334842809424557962637794
7822948018647924208939817553352341751422089346072154508394996316324
5812283897564937977251885268346311324707880393087251697372873844147
7403263782150655688059864351001382601317415565787754938842833471427
9873134562252371365225692291997677140291131869461287211926390268037
2447828106190537583980179056188763444960983125695272433492970186776
2108269704279672633736501207795045621445495684841694147281740978497
3963496815909387950537128431575589114487416728872653294089055222889
1314108392647
e1=3
c1=
1865207266799996243228817304785105186128313762026459662106438140987
8101196385760354558109181926101629746448043257007270333976312375655
6830925044799769295704711794841460526270721050369407621775367119953
5319371753751891195768347265599143684465997473355834844884002187260
8155937787223148468283232348789126016987184213797163422067891361419
9693895028277295936272132967943949212045133910468330075523225546555
2844622671751926477253558248971126453235950823250148482139499961062
1912346652815164555282745683152172771431287581760538784291077600328
1468632177134
n2=
5947242496412590165886022830117979031270849438565414718945540769656
8016590601454140124390406754363555547309857587323780383887306431834
9070533354398243369777016103428434001943669825258120794789933172487
0247713348112513551744856203618474445966867979101613482134937251288
0253262390405463121575632265978082067289740632668476236633761976207
---
## Page 753
CTF特训营：技术详解、解题方法与
21.2.11广描攻击
753/1144
9571247637961420618486660089181426644142009695085863226604146843272
8039098235219202429667813023866281876260313319408789799168671371967
9319110676932339430583516301369561319770195458806123933315008623635
6170568629175180812130765936995009183145774355930493552117761697017
0121899847499
e2=3
c2=
5329839376003386424531390530291755253783136537372306970258380778841
4119389682778207307369140444699244570379486188958170811839678477478
4986461241834523597459532470448901563306198101997952932516015630478
8684511539016419138205029103288532049627836528718735354249479611169
4231848188352250609648207580608794005386681196241333336101600750283
1907391220279780757270664354871692245617691164648727369361608292446
9901327385014547016959814916531765625265956350393314015819147117668
2928179981667012128425935656684812375623341604091112802457211338217
2969883195688487985204807646382513944836761754934493616028959253959
9562603182308
n3=
1619477568975952701259057615681948469998598727467548920567987371583
8085416088657947156742492992519822235544632452679133190114395403726
9071931861662543251564994541507287985739993596224309303302021272639
2446482688722523597117616715421450234027457487384685541370636909037
5320244947642357153591657767486137222442374546185346257770192227934
9346730433389404969593984592461837717542818208306165947986299556153
4893358459425241809160308555104350834921888371703396141707886926364
3645685118707286020183941222225360818016046232571863378240874638750
6345941109278794112207507388881229604532960596694888717483930385005
4066549742331
e3=3
c3=
5653726197145346162837879404112929223470893424150062359949223605480
9993089458119558859048280887450688383162997431051833341166123967621
0655676458211427145785986349260865052656315194684376276107329815294
1960847049956977347414986161630989375344461525276107029911060838865
3964994342395869950839385196794419980540285703423073352381718752590
8136407136249899598181733209020287246718299122679096002811046792027
0973579848474333977760753182061177450854107097465324974655913136180
4224877198967927897074633208445500712006065089400145934143164857831
9748099272655626765880110081203297534044415129006003902414264934248
54902736641
data=[（c1,n1),（c2,n2）,（c3,n3）]
print long_to_bytes(broadcast_attack(data))
---
## Page 754
CTF特训营：技术详解、解题方法与
21.2.11广播攻击
754/1144
结果如下：
because it's too short,i need to pad sth...or you can brute it by 6.5.6..
ahahahahahahahahahahahahahahahahahahhahahaha...flag(broadcast_attack)
至此攻击完毕。
---
## Page 755
CTF特训营：技术详解、解题方法与
21.2.12相关消息攻击
755/1144
21.2.12相关消息攻击
当Alice使用同一公钥对两个具有某种线性关系的消息M和M2进
行加密，并将加密后的消息C、C2发送给Bob时，我们就可以获得对
应的消息M与M2。这里，我们假设模数为N，两者之间的线性关系
为M=a*M2+b，那么当e=3时，可以得到：
2a²bC²-b+Cb_bC+2a²C-b²
M2=
aC-aC2+2ab3aC-a²C2+2b²
Python代码如下：
def relate_message_attack(a,b,c1,c2,n):
b3 = gmpy2.powmod(b, 3, n)
part1=b*(c1+2*c2-b3)%n
part2=a*(c1-c2+2*b3)%n
part2=gmpy2.invert(part2,n)
returnpart1*part2%n
---
## Page 756
CTF特训营：技术详解、解题方法与
21.2.13 DSA
756/1144
21.2.13
DSA
除了RSA以外，CTF还会考察椭圆曲线、离散对数等问题，这里
介绍一个经常出现的针对离散对数的问题。
使用相同的k，即r也相同，如果知道两个不同的消息利用相同的
r，就可以进行攻击了。
已知：
s=k-1(H(m)+xr)modq
那么：
S3k=m+xrmodq
S4k=m4+xrmod q
JarvisOJ上的一道原题DSA代码如下：
fromCrypto.HashimportSHA
import gmpy2
y=int(
8ac26ca452e170dc79be15cc6159e037bccf564ef361c18c99e8aeb0bc1acf9c0c35d6
20d60bb7311f1cf08cfbc34ccaa79ef1dad8a7a6facce86659006d4faf057716857ec7ca
---
## Page 757
CTF特训营：技术详解、解题方法与..
21.2.13 DSA
757/1144
604ade2c3d731d6d02f933198d390c3efc3f3ff046f",16)
p=int（
cc88bfec56aad66918b9b30ad281388f0bbc6b8026b7c8026e91184bee0c8ad10ccf2
96becfe50505383cb4a954b37cb588672f7c0957b6fdf2fa0538fdad83934a45e4f99d3
8de57c08a24d00d1cc5d5fbdb73291cd10ce7576890b6ba089b"，16)
q=int("00868f78b8c8500bebf67a58e33c1f539d3570d1bd"，16)
g=int（
4cd5e6b66a6eb7e92794e3611f4153cb11af5a08d9d4f8a3f250037291ba5fff3c29a8c
37bc4ee5f98ec17f418bc7161016c94c84902e4003a7987f0d8cf6a61c13afd5673caa
5fb411508cdb3501bdff73e747925f76586f4079fea12098b3450844a2a9e5d0a99bd8
65e0570d5197df4a1c9b8018fb99cdce9157b98500179",16)
f3= open(r”packet3/message3",r)
f4 =open（rpacket4/message4",r)
data3=f3.read()
data4=f4.read()
sha=SHA.new()
sha.update(data3)
m3 =int(sha.hexdigest(),16)
sha = SHA.new()
sha.update(data4)
m4 =int(sha.hexdigest(),16)
print m3, m4
s3=0x30EB88E6A4BFB1B16728A974210AE4E41B42677D
S4=0x5E10DED084203CCBCEC3356A2CA02FF318FD4123
r=0x5090DA81FEDE048D706D80E0AC47701E5A9EF1CC
ds=s4-s3
dm = m4 - m3
k = gmpy2.mul(dm, gmpy2.invert(ds, q))
k=gmpy2.f_mod(k,q)
tmp= gmpy2.mul(k,s3)-m3
x= tmp*gmpy2.invert（r,q)