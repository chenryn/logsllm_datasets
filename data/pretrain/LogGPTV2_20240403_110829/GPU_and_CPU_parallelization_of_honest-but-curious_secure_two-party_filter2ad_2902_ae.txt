# 优化后的文本

## 评估电路门数
### 评估电路门数
**(a) 比较我们的GPU每核每秒评估次数**  
**(b) 比较我们的GPU总体评估次数**  
**图3：GPU评估时间与Kreuter等人[14]、Frederiksen和Nielsen[5]以及我们的GPU实现的比较。**

当评估保证执行多个相同的电路副本时，更容易设置内核以避免线程发散（因为线程永远不会处理不同类型的门），并且通过将每个电路的数据存储在内存中相邻的位置来合并GPU全局内存中的电路数据。请注意，这两种解决方案都依赖于GPU利用多个相同电路的并行执行。

我们发现，我们的GPU略优于Kreuter等人，这表明他们在单机上使用MPI付出了较高的代价（当然，他们的设计是为了在大型计算集群和巨大电路上运行，在这种情况下性能损失应该会被摊销）。

## 8.4 CPU评估
由于SIMD GPU评估的结构性问题，我们在OpenMP中实现了一个多线程CPU评估方案。结果如图4所示。显然，MIMD架构（如多核CPU）不会受到线程发散或内存合并问题的影响，因为它们具有先进的内存控制器和内部逻辑。缺乏线程发散消除了大量核心在完成一层时闲置的问题。此外，我们不需要为不同类型的门创建多个不同的“内核”，也不必担心不同核心评估不同类型的门。同样，等待一层完成而未使用的核的比例作为总计算能力的一部分会更小。

尽管我们仍然不如Frederiksen和Nielsen的表现，但我们比Kreuter等人有所改进，并表明他们的系统可能会从在其计算节点中引入线程中受益，而不是仅仅在节点级别进行并行化。

## 结论、经验教训和未来工作
鉴于GPU能够高效生成大规模电路（或大量电路），而CPU在评估方面表现更好，似乎旨在实现切分-选择协议的实现应在GPU上进行验证和生成，并在CPU上并行进行评估。类似地，1BM实现应在GPU上进行生成，并在CPU上进行评估。通过适当的流水线技术，这些操作可以并行进行。引入的技术允许XOR门并行生成，大大提高了电路门生成速率。

虽然我们没有在这里报告结果，但初步研究表明，使用多个GPU在一个系统中进一步加速生成和评估结果是可行的，但需要仔细实现，合理分配GPU之间的任务，并考虑单总线瓶颈或卡间内存传输问题。我们计划在未来的工作中继续研究这些方向。

为了在未来进行更好的性能比较，需要建立一个标准电路测试库。它们必须以所有未来实现都可以解析的标准文件格式进行划分（尽管它们可能在此格式基础上进一步处理）。目前，该领域的每个实现都在使用自己的文件格式。最近开发的MPCLounge旨在跟踪这些电路。类似地，Ejgenberg等人开发的SCAPI项目将有助于提供长期支持的测试环境[4]。

## 致谢
作者感谢NSF和DARPA的资金支持，Jonathan Katz对初步工作的讨论和帮助，以及Tore Frederiksen和Ben Kreuter对他们系统的帮助。这项工作得到了AWS教育资助的支持。

## 参考文献
[此处省略参考文献部分]

---

以上是对原文本的优化，使其更加清晰、连贯和专业。希望这对你有所帮助！