a beacon node is calculated as ci = Undi in Eq. (8). As
shown in Section 4.2, this coordinate preserves topological
information.
As the distance between two beacon nodes calculated in
the coordinate system may not be the same as the actual
measured distances. For instance, L2(c1, c3) = 5 (cid:4)= 3 when
n = 2 in Example 1. To use the coordinates for distance es-
timation, we apply a simple linear operation, ¯ci = αci + β so
as to minimize the discrepancy between the distance repre-
sented in the coordinate system and the measured distance.
As a translation operation does not aﬀect the distance be-
tween two coordinates, we only consider the scaling opera-
tion with a scaling factor α, i.e., β = 0. The optimal scaling
factor α∗
(n) that minimizes the discrepancy between the
Euclidean distance in the new coordinate system of dimen-
sion n and the measured delay, i.e., L2(¯ci, ¯cj) ≈ dij for all
i and j ∈ {1, . . . , m}, can be determined by minimizing the
following objective function J(α):
mX
mX
J(α) =
(L2(αci, αcj ) − dij )
Pm
Pm
whose positive solution, α∗
Pm
Pm
, is simply
(n) =
α∗
i
j
j dijL2(ci, cj)
j L2(ci, cj )2
.
i
i
2
(10)
(11)
The transformation matrix ¯Un from a distance vector in
the distance data space to the coordinate in ICS is then
deﬁned as
¯Un = α∗
(n)Un =
Un,
(12)
Pm
Pm
Pm
Pm
i
i
j dijlij
j l2
ij
host 2
b-node 5
b-node 1
host 3
b-node 4
b-node 2
host 1
b-node 3
Figure 5: An example architecture for the proposed Internet coordinate system (ﬁve beacon nodes and three
ordinary hosts).
n di, U T
where lij = L2(U T
n dj) and Un = [u1, . . . , un]. The
transformation matrix is obtained from the distance matrix
D between beacon nodes and its singular value decomposi-
tion. The coordinates of beacon nodes are then calculated
as ¯ci = ¯U T
n di for all i ∈ {1, . . . , m}.
3. When n=4, α = 0.5927, L2(¯c1, ¯c2) = L2(¯c3, ¯c4) = 0.8383,
and L2(¯c1, ¯c3) = L2(¯c1, ¯c4) = L2(¯c2, ¯c3) = L2(¯c2, ¯c4) = 3.0224.
5.3 Determining The Coordinate of A Host
The procedure that a host takes to determine its coordi-
In summary, the procedure taken to calculate the coordi-
nate in ICS is as follows: A host
nates of beacon nodes is as follows:
(S1) Every beacon node measures the round trip times to
the other beacon nodes periodically.
(S2) An administrative node aggregates the delay informa-
tion and obtains the distance matrix in Eq. (2).
(S3) The administrative node applies PCA in Eq. (7) to
the distance matrix.
(S4) The administrative node determines the dimension of
the coordinate system using the cumulative percentage
of variation deﬁned in Eq. (9) (with a pre-determined
threshold value).
(S5) The administrative node calculates the transformation
matrix in Eq. (12) from Eq. (8) and Eq. (11).
Note that the administrative node may be replicated (per-
haps in a hierarchical manner) to enhance fault tolerance
and availability. This subject is outside the scope of this
paper, but is warrant of further investigation.
Example 4. Assume that the four hosts in Example 1
are beacon nodes. When n = 2, c1 = c2 = [−3.5, 2.5] and
c3 = c4 = [−3.5, −2.5]T . By Eq. (11), the scaling factor α
is 0.6, and the transformation matrix ¯U2 is
» −0.3 −0.3 −0.3 −0.3
–T
.
¯U2 =
−0.3 −0.3
0.3
0.3
Therefore, ¯c1 = ¯c2 = [−2.1, 1.5] and ¯c3 = ¯c4 = [−2.1, −1.5].
The distances between two hosts in diﬀerent ASs is exactly
(H1) Obtains the list of beacon nodes and the transforma-
tion matrix (Eq. (12)) from the administrative node.
(H2) Measures the round trip times to all the beacon nodes
using ping or traceroute. (We will discuss how to re-
duce the number of measurements in Section 5.4.)
(H3) Calculates the coordinate by multiplying the mea-
sured distance vector with the transformation matrix.
In (H2), a host A obtains an m-dimensional distance vec-
tor
T ,
la = [la1, . . . , lam]
(13)
where lai denotes the delay measured between host A and
the ith beacon node. Then in (H3) the coordinate, xa, of
host A is calculated with the transformation matrix ¯Un in
Eq. (12) as
xa = ¯U T
n · la.
(14)
Example 5. A host A measures its round trip times to
the four beacon nodes in Example 4. Assume that host A is
closer to the AS where the ﬁrst two beacon nodes reside, and
obtains a distance vector of la = [1, 1, 4, 4]T . By Eq. (14),
xa = [−3, 1.8]T . In the case of n = 2, the estimated dis-
tances between host A and beacon nodes are L2(¯c1, xa) =
L2(¯c2, xa) = 0.94 and L2(¯c3, xa) = L2(¯c4, xa) = 3.42. On
the other hand, assume that host B is far from all four beacon
nodes, and obtains a distance vector of lb = [10, 10, 10, 10]T .
In this case, xb = [−12, 0]T , and L2(¯ci, xb) = 10.01 for
i = 1, . . . , 4.
5.4 Reducing The Number of Measurements
To discover accurately the topology of the Internet, a suf-
ﬁcient number of beacon nodes should be judiciously placed
on the Internet. (Note that PCA is able to extract essential
topological information from a set of (perhaps correlated)
delay measurements. However, it does not preclude the im-
portant task of placing beacon nodes properly on the Inter-
net so as to represent the network topology accurately.) On
the other hand, for scalability reason, it is not desirable that
a client has to measure its round trip times to all the beacon
nodes. To reduce the measurement overhead incurred by a
host, it would be desirable that a host measures the distance
from itself to a subset of beacon nodes. This also allows ICS
to operate even in the case that some of the beacon nodes
are not available (due to transient network partition and/or
node failure).
By Eq. (14), the transformation matrix (Eq. (12)) and the
original distance vector (Eq. (13)) are needed to calculate
the coordinate of a host. The transformation matrix is ﬁxed
in ICS once it is calculated by the administrative node. If
host A makes delay measurements only to a subset, N , of
beacon nodes, the missing elements in la, i.e., lai, i (cid:4)∈ N ,
have to be inferred. We present the following two methods:
(M1) Host A randomly chooses k beacon nodes (k  2), but the improvement levels oﬀ when n ≥ 6.
The estimation error of GNP is the smallest when n = 4,
and is even slightly better than that of ICS in the range of
5 ≤ m ≤ 16. Note also that the estimation error of GNP
when n = 6 is much larger than that when n = 4. This
is again due to the reason that the number of variables in-
creases as n increases, and shows that the accuracy of GNP
depends on the selection of the dimension of the coordinate
system (i.e., the number of beacon nodes).
Figure 8 gives the results of ICS with the use of partial
measurement method. The number of measurements made
by a host is now proportional to the coordinate dimension,
i.e. k = min(n, m) in (a) and k = min(2n, m) in (b). As
shown in Fig. 8 (a), when n = 6, a client measures its
distances to six beacon nodes regardless of m, and the av-
erage of the estimation errors is increased by 30.2 % (from
0.34489 in Fig. 7 (a) to 0.46692). When the number of
measurements is increased twice in Fig. 8 (b), the average
of the estimation errors is increased by 19.7 % in the case
of n = 6. An interesting result is that the estimation error
does not become larger even when m is large (e.g, m > 15).
This is because the coordinate system obtained with the use
of more beacon nodes is more accurate.
6.2 Results for the GT-ITM data
We now investigate the eﬀect of the level of topology com-
plexity on the distance estimation. As mentioned in [17],
the GT-ITM topology generator can be used to create three
types of graphs: ﬂat random graphs, hierarchical graphs,
and transit-stub graphs. We generate two-level and three-
level hierarchical graphs with 400 nodes. Note that each
graph has the same number of nodes, but three-level hierar-
chical graphs represent more complex network topologies.
Figure 9 (a) and (b) depict the performance of IDMaps,
Hotz’s triangulation, GNP, and ICS under the two-level hi-
erarchical topology. As shown in Fig. 9 (a), methods that
represent network topology in a distance data space give
large estimation errors when the number of beacon nodes
m is small, and their performance gradually improves as m
increases. Among IDMaps and the three versions of Hotz’s
triangulation, the lower bound of Hotz’s triangulation gives
the best performance. As shown in Figure 9 (b), between
the two coordinate-system-based approaches, GNP renders
large estimation errors, and the errors increase as m in-
creases. The estimation error of ICS, on the other hand,
is 0.30 at m = 5, decreases as m increases, and becomes
0.17 at m = 30.
As shown in Fig. 9 (c) and (d), all the approaches, except
ICS, give larger estimation errors under three-level hierar-
chical topologies.
In particular, the performance of GNP
becomes worse. ICS gives almost the same performance as
in two-level hierarchical topologies. This result shows that
PCA which ICS is built upon can eﬀectively extract topolog-
ical information than the minimization optimization of cost
functions J1 and J2 in Eq. (5) and Eq. (6) used in GNP.
Figure 10 depicts the eﬀect of the coordinate dimension
on the performance of ICS with the full and partial measure-
ment methods. The number of measurements made in the
partial measurement method is set to k = 2n. Under all the
cases, as the coordinate dimension n increases, the estima-
tion errors decrease. As shown in Fig. 10 (a), there is virtu-
ally no performance improvement when n ≥ 3, which implies
that a three-dimensional coordinate space is suﬃcient to rep-
resent the two-level hierarchical topology. However, when
the partial measurement method is applied, the estimation
error increases from 0.209 to 0.407 in the case of n = 3
(94.7%). This means that even though a three-dimensional
space is suﬃcient to represent the network topology, the
number of measurements required should be larger than six
in order to determine the coordinates of hosts accurately.
When the number of measurements is twelve (k = 12) in
the six-dimensional space, the estimation errors increase by
32.9% (from 0.188 to 0.250). As shown in Fig. 10 (c), the
estimate made by ICS is quite accurate under the three-level
hierarchical topology, and the errors decrease as n increases.
As expected as shown in Fig. 10 (d), the estimation errors
are larger when partial measurement is used.
In summary, IDMaps and the upper bound of Hotz’s tri-
angulation are inaccurate for small values of m, but yield
better performance as m increases. In contrast, the lower
bound of Hotz’s triangulation is accurate for small values of
m for the NLANR and GT-ITM data sets, and the errors
r
o
r
r
e
n
o
i
t
a
m
i
t
s
e
 1.4
 1.2
 1
 0.8
 0.6
 0.4
 0.2
 0
 0
idmaps
hotz (lb)
hotz (avg)
hotz (ub)
 0.8
 0.6
 0.4
r
o
r
r
e
n
o
i
t
a
m
i
t
s
e
hotz (avg)
GNP (n=5)
proposed (n=5)
 0.2
 0
 5
 10
 15
 20
 25
 30
number of beacon nodes
(b) GNP and ICS
 5
 10
 15
 20
 25
 30
number of beacon nodes
(a) IDMaps and Hotz’s triangulation
Figure 6: Comparison of IDMaps, Hotz’s triangulation, GNP, and ICS for the NLANR data set.
 0.8
 0.6
 0.4
r
o
r
r
e
n
o
i
t
a
m
i
t
s
e
n = 2