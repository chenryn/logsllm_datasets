2
4
P=0.00
P=0.01
P=0.03
P=0.05
L=0.00
L=0.01
L=0.03
L=0.05
1000
800
600
400
200
k
n
i
l
/
s
e
g
a
s
s
e
M
8
6
16
Network connectivity (links / process)
10
12
14
18
20
22
0
0
2
4
8
6
16
Network connectivity (links / process)
10
12
14
18
20
22
(a)
(b)
Figure 3. Convergence with (a) reliable links and (b) reliable processes
To evaluate the scalability of our adaptive algo-
rithm, we executed simulations using two types of net-
work topologies: a ring (i.e., each process connected
to two others) and a random tree. In both cases about
100 graphs were generated for each experiment (see
Figure 4). The ring is a worst-case topology in which
messages should traverse in the average half the pro-
cesses in the network. In such a case, the convergence
time increases linearly with the size of the system. For
random trees, however, the convergence time is almost
constant . In practical scenarios, the topology is ex-
pected to be closer to a tree than to a ring.
k
n
i
l
/
s
e
g
a
s
s
e
M
250
200
150
100
50
0
ring
tree
100
120
140
160
180
200
220
240
Number of processes
Figure 4. Algorithm scalability
6. Related Work
Epidemic protocols, also known as gossip pro-
tocols, were introduced in the context of replicated
database consistency management [3]. They were ﬁrst
used to implement reliable broadcast in large net-
works in [2]. This latter protocol proceeds in two
phases. In the ﬁrst phase, processes use an unreli-
able gossip-based dissemination of information to
transmit messages;
in the second phase, message
losses are detected and repaired via re-transmissions.
Many variations of this protocol have been pro-
posed, mostly orthogonal to the ideas described in
our paper. Improved buffering techniques, for ex-
ample, have been considered in [7] and [10]. In
both cases, the goal is to limit the amount of buffer-
ing required for a message. While the former work
requires a full knowledge about the system mem-
bership, the latter does not. The approach in [10] is
mainly concerned with process recovery. Alterna-
tive approaches have considered recovering messages
from the sender’s log [13]. In [7], heuristics are pre-
sented to garbage collect messages. It aims to identify
”aging” buffered messages.
The only adaptive gossip-based reliable broadcast
protocol we are aware of is [12]. In this protocol, pro-
cesses adjust the message rate emission to the amount
of resources available (i.e., buffer size) and to the
global level of congestion in the system. Processes pe-
riodically evaluate the available resources in the sys-
tem and from time to time exchange the minimum
buffer size. Senders then reduce their gossip rate ac-
cording to their estimates about the mean number of
messages in a process’ buffer. We are not concerned
with adjusting sending rates in this work, and the ideas
described in this work could be easily integrated in our
algorithm. Control information, for example, used in
both algorithms could be combined into a single mes-
sage.
In [4] and [6] the authors show how to implement a
gossip-based reliable broadcast protocol in an environ-
ment in which processes have a partial view of the sys-
tem membership. Our approach does not require pro-
cesses to know all the system members or the topol-
ogy connecting them. This information, however, al-
lows processes to improve their gossiping.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE 
Reducing the number of gossip messages ex-
changed between processes by taking the network
topology into account is discussed in [8] and [9]. Pro-
cesses communicate according to a pre-determined
graph with minimal connectivity to attain a de-
sired level of reliability. Similarly to our approach, the
idea is to deﬁne a directed spanning tree on the pro-
cesses. Differently from ours, no process and link reli-
ability guarantees are taken into account to build such
trees.
7. Concluding Remarks
This paper was motivated by a simple observation:
typical gossip algorithms need to retransmit more mes-
sages than adaptive algorithms to reach the same reli-
ability probability. Based on this observation, we pro-
posed a new approach for broadcasting messages with
a given reliability probability. For this purpose, we de-
ﬁned the notions of optimal and adaptive probabilistic
reliable broadcast algorithms. We then proposed an al-
gorithm that converges toward optimality, by adapting
its behavior to the distributed environment in which it
executes. When provided with exact knowledge about
failure probabilities, we proved that our adaptive al-
gorithm is indeed optimal. We also evaluated the per-
formance of our algorithm through simulation and
showed that it quickly converges toward exact knowl-
edge of failure probabilities.
We plan to pursue this work in several directions.
First, we intend to apply our approach to distributed
problems other than reliable broadcast and to consider
optimality criteria different than the number of mes-
sages. Another idea is to improve our statistical infer-
ence mechanism, for example by dynamically increas-
ing the number of probabilistic intervals when better
precision is required. Along the simulation axis, we
also plan to gather further results based on more com-
plex topologies. For example, our current simulations
rely on the conservative assumption that all failure
probabilities are identical. By revisiting this assump-
tion, we expect our adaptive algorithm to further in-
crease its performance gain with respect to typical gos-
sip algorithms.
References
[1] A. V. Aho, J. E. Hopcroft, and J. Ullman. Data struc-
tures and algorithms. Addison Wesley, 1987.
[2] K. P. Birman, M. Hayden, O. Ozkasap, Z. Xiao,
M. Budiu, and Y. Minsky. Bimodal multicast. ACM
Transactions on Computer Systems, 17(2):41–88, May
1999.
[3] A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson,
S. Shenker, H. Sturgis, D. Swinehart, and D. Terry.
Epidemic algorithms for replicated database mainte-
nance.
In Proceedings of the 6th Annual ACM Sym-
posium on Principles of Distributed Computing, pages
1–12, Vancouver, BC, Canada, Aug. 1987.
[4] P. Eugster, R. Guerraoui, S. Handurukande, A.-M. Ker-
marrec, and P. Kouznetsov. Lightweight probabilis-
tic broadcast.
In Proceedings of the 2001 Interna-
tional Conference on Dependable Systems and Net-
works (DSN ’01), pages 443–452, July 2001.
[5] B. Garbinato, F. Pedone, and R. Schmidt. An adap-
tive algorithm for efﬁcient message diffusion in un-
reliable environments. Technical Report IC/2004/30,
´Ecole Polytechnique F´ed´erale de Lausanne, Mar. 2004.
[6] A.-M. Kermarrec, L. Massoulie, and A. Ganesh. Prob-
abilistic reliable dissemination in large-scale systems.
Technical report, Microsoft Research, June 2001.
[7] P. Kouznetsov, R. Guerraoui, S. Handurukande, and
A.-M. Kermarrec. Reducing noise in gossip-based re-
liable broadcast.
In Proceedings of the 20th Inter-
national Symposium on Reliable Distributed Systems,
pages 186–189, New Orleans, LA, USA, Oct. 2001.
[8] M.-J. Lin and K. Marzullo. Directional gossip: Gos-
sip in a wide area network. Technical Report CS1999-
0622, University of California, San Diego, June 1999.
[9] M.-J. Lin, K. Marzullo, and S. Masini. Gossip ver-
sus deterministic ﬂooding: Low message overhead and
high reliability for broadcasting on small networks.
Technical Report CS1999-0637, University of Califor-
nia, San Diego, Nov. 1999.
[10] O. Ozkasap, R. van Renesse, K. Birman, and Z. Xiao.
Efﬁcient buffering in reliable multicast protocols.
In
Nov., editor, Proceedings of International Networked
Group Communication, Pisa, Italy, 1999.
[11] J. Pereira, L. Rodrigues, M. J. Monteiro, R. Oliveira,
and A.-M. Kermarrec. Neem: Network-friendly epi-
demic multicast. In Proceedings of the 22th IEEE Sym-
posium on Reliable Distributed Systems (SRDS’02),
Florence,Italy, Oct. 2003.
[12] L. Rodrigues, S. Handurukande, J. Pereira, R. Guer-
raoui, and A.-M. Kermarrec. Adaptive gossip-based
broadcast.
In Proceedings of the International Con-
ference on Dependable Systems and Networks (DSN),
pages 47–56, San Francisco (CA), USA, June 2003.
[13] Q. Sun and D. Sturman. A gossip-based reliable multi-
cast for large-scale high-throughput applications.
In
Proceedings of the International Conference on De-
pendable Systems and Networks (DSN 2000), New
York (USA), June 2000.
Proceedings of the 2004 International Conference on Dependable Systems and Networks (DSN’04) 
0-7695-2052-9/04 $ 20.00 © 2004 IEEE