# Classification and Nature of Exploits Inferred from Real-World Attacks

## Notation and Definitions
- **Setup**: Vulnerability exposed during channel setup (and possibly usage as well).
- **Use**: Vulnerability exposed only during channel use.
- **IDM**: Vulnerability exposed during identifier distribution.
- **OB (Overblocking)**: Blocking more than intended.
- **UB (Underblocking)**: Blocking less than intended.
- **ub**: Underblocking that a censor can easily recover from by retransmitting its own probe.
- **n**: Neither under- nor overblocking.

## Table V: Classification of Exploits
We lack empirical evidence on the long-term effectiveness of mimicry approaches, which is crucial for their deployment. Additionally, we do not understand the speed at which censors block new approaches, making it difficult to gauge the value of deploying low-overhead methods with known weaknesses.

### Examples
- **Iran (March 8, 2013)**: Iran blocked most VPNs, forcing users to switch to more sophisticated tools. The Iranian government adapted to these new tools within two months, rendering them ineffective by May 5, 2013.
- **Tor Incidents (2011/09 and 2013/03)**: Iran learned to fingerprint an abnormal TLS certificate lifetime used by Tor. It took about 1.5 years to identify and block the next, less obvious but still static and identifiable lifetime.

### Research Papers
The research papers examined did not include IDM exploits, reflecting a split in research focus between IDM and channel-specific studies.

## Nature of Exploit Detection Activity
Houmansadr et al. [1] distinguish between passive, reactive, and proactive exploits:
- **Passive**: Monitors traffic without interaction.
- **Reactive**: Modifies traffic in response to specific events.
- **Proactive**: Generates traffic to detect vulnerabilities.

### Examples
- **Circumvention Approach**: A method that mimics a normal web server may react differently to a request for a non-existent webpage. A censor could passively wait for such a request or reactively modify a request to trigger the vulnerability.

## Description and Where Seen
| Description | Example | Phase | Nature | Network Loss | Measurement Loss |
|-------------|---------|-------|--------|--------------|------------------|
| Detect a feature of a packet different from the cover protocol | Different packet sizes for packets with fixed length from Skype [1] | Setup | Passive | UB | n / UB |
| Absence of start-of-message fields in Skype UDP packets [1] | Use | Passive | n | n |
| Different ciphersuite for TLS handshake than Chrome on Linux [35] | Use | Passive | OB&UB | n / OB&UB |

## Table VI: Classification of Exploits Inferred from Vulnerabilities
Proactive exploits can scan the internet for circumvention servers, but they are often triggered by other events. For example, a passive exploit might identify suspicious traffic, leading to a proactive probe to confirm the presence of a circumvention tool. This confirmation may result in the blacklisting of the server’s IP address, as seen in China [70].

### Recommendations
- **Recommendation 4**: Circumventors should focus on low-cost passive and proactive exploits rather than reactive ones, given the current landscape.
- **Recommendation 5**: Censors use exploits where packet loss results in underblocking. Circumventors should protect against such exploits.

## Packet Loss
Packet loss can affect the robustness of vulnerabilities. If allowed traffic includes a packet absent from circumventing traffic, simple exploits will overblock. Conversely, if circumventing traffic has a packet not found in allowed traffic, simple exploits will underblock. Complex vulnerabilities involving the distribution of features over time may cause both over- and under-blocking.

### Real-World Observations
- **Table V**: Real censors tend to use vulnerabilities that produce underblocking but not overblocking for lost packets.
- **Table VI**: Papers focus on vulnerabilities that may produce overblocking for lost packets.

## Research Agenda
### Guiding Abstractions
Researchers benefit from abstractions to guide their work. Key abstractions include steganography vs. polymorphism, setup vs. usage of channels, and the nature of the exploit’s detection activity. Evaluating success involves considering goodput (productive evading traffic) and costs.

### Understanding Censors and Their Technical Measures
To effectively evaluate circumvention tools, we need to understand how censors operate. Tools that systematically experiment on censors can help determine blocking mechanisms and improve the design of evasion approaches.

### Understanding the Arms Race
Automated systems for detecting new censorship actions would enable early detection and comprehensive analysis of the arms race. Understanding the internal dynamics of censoring organizations could lead to strategies that delay their responses.

### Evaluation Engines
Developing evaluation engines that identify subtle but simple vulnerabilities, such as using telltale cipher suites, would be beneficial. Machine learning can be employed to illuminate feature selection.

## Conclusion
This work highlights significant gaps in the research literature and suggests focusing on addressing realistic attacks of today. Future research should consider the cost and effectiveness of circumvention approaches.

## Acknowledgements
We thank the numerous tool authors, anonymous reviewers, and funding sponsors, including the Freedom 2 Connect Foundation, Intel, the National Science Foundation, the Open Technology Fund, and the US Department of State Bureau of Democracy, Human Rights, and Labor.

## References
[1] A. Houmansadr, C. Brubaker, and V. Shmatikov, “The parrot is dead: Observing unobservable network communications,” in 2013 IEEE Symp. on Security and Privacy, ser. SP ’13. IEEE Computer Society, 2013, pp. 65–79.
... (additional references follow)