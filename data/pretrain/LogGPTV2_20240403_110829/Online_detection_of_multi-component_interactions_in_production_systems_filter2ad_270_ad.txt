0
100
200
300
400
6000
8000
10000
12000
Fig. 20: Reconstruction of a portion of Liberty’s R_EXT_CCISS
indicator signal with decay.
Ticks into Window
No Decay
Decay
r
o
r
r
E
n
o
i
t
c
u
r
t
s
n
o
c
e
R
8
.
0
4
.
0
0
.
0
0
2000
4000
6000
8000
10000
12000
Fig. 21: Relative reconstruction error for the SQL cluster, with and
without decay. Reconstruction is more accurate when old values
decay, especially during a new phase near the end of this log.
Tick
This includes the supercomputer logs, whose anomaly signals
have 1-hour granularity. We give a couple of examples here.
We ﬁrst describe a cascade in Stanley: the critical swerving
bug mentioned in Section V-C1, which has previously been
analyzed only ofﬂine. Recall that the ﬁrst stage of our analysis
identiﬁes one transient subsystem whose top four components
are the four laser sensors and another subsystem whose
top three components are the two planner components and
the heartbeat component. The second stage discovers a lag
correlation between these two subsystems with magnitude 0.47
and lag of 111 ticks (4.44 seconds). This agrees with the lag
correlation between individual signals within the correspond-
ing subsystems; e.g., LASER4 and PLANNER_TRAJ have a
maximum correlation magnitude of 0.65 at a lag of 101 ticks.
In Section I, we described a cascade using three real signals
called disk, forks, and swap. These three signals (renamed
for conciseness) are from the SQL cluster and are the top
two components of the third subsystem and the representative
of the fourth subsystem, respectively. Our method reports
a lag correlation between the third and fourth subsystems
of 30 minutes (see Figure 22). The administrator had been
trying to understand this cascading behavior for weeks; our
analysis conﬁrmed one of his theories and suggested several
interactions of which he had been unaware.
The administrator of the SQL cluster ultimately concluded
that there was not enough information in the logs to deﬁni-
tively diagnose the underlying mechanism at fault for the
crashes. This is a limitation of the data, not the analysis.
In fact,
in this example, our method both identiﬁed the
shortcoming in the logs (a future logging change is planned as
a result) and, despite the missing data, pointed at a diagnosis.
2) Online Alarms: Knowledge of a cascade may be action-
able even as the cascade is underway and even when we do
not understand the underlying cause. For instance, we can set
alarms to trigger when the ﬁrst sign of a cascade is detected. In
the case of Stanley’s swerving bug cascade, the Racing Team
tells us Stanley could have prevented the swerving behavior
Tick
Fig. 22: In the SQL cluster, the strongest lag correlation was found
between the third and fourth subsystems, with a magnitude of 0.46
and delay of 30 minutes. These eigensignals and their representatives’
signals (disk and swap, respectively), are shown above.
l
e
u
a
V
6
4
2
0
6000
7000
interrupts
swap   
9000
10000
8000
Tick
Fig. 23: Our method reports that the signal swap tends to spike 210
minutes before interrupts, with a correlation of 0.271; we can
detect this online.
by simply stopping whenever the lasers started to misbehave.
Some cascades operate on timescales that would allow
more elaborate reactions or even human intervention. We tried
the following experiment based on two of the lag-correlated
signals reported by our method (plotted in Figure 23 and
discussed brieﬂy in Section I): when swap rises above a
threshold, we raise an alarm and see how long it takes before
we see interrupts rise above the same threshold. We use
the ﬁrst half of the log to determine and set the threshold to one
standard deviation from the mean; we use the second half for
our experiments, which yield no false positives and raise three
alarms with an average warning time of 190 minutes. Setting
the threshold at two standard deviations gives identical results.
Depending on the situation, advanced warning about these
spikes could allow remedial action like migrating computation,
adjusting resource provisions, and so on.
3) Clock Skews: A cascade discovered between signals or
subsystems that are known to act in unison may be attributable
to clock skew. Without this external knowledge of what should
happen simultaneously, there is no way to distinguish a clock
skew from a cascade based on the data; our analysis can
determine that there is some lag correlation, not the cause
of the lag. If the user sees a lag that is likely to be a clock
skew, our analysis provides the amount and direction of that
skew, as well as the affected signals.
Although there were no known instances of clock skew
in our data sets, we experimented with artiﬁcially skewing
the timestamps of signals known to be correlated. We tested