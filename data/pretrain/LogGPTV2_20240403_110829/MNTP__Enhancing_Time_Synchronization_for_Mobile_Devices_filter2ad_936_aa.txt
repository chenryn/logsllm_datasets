# Title: MNTP: Enhancing Time Synchronization for Mobile Devices

# Authors:
- Sathiya Kumaran Mani
- Ramakrishnan Durairajan
- Paul Barford
- Joel Sommers

## Abstract
Clock synchronization between Internet hosts is critical for various applications, including gaming, finance, and measurement. While clock synchronization in wireline networks has been extensively studied, mobile devices present unique challenges that have not received as much attention. In this paper, we analyze the behavior of clock synchronization in mobile hosts, which often use a simplified version of the Network Time Protocol (NTP), known as SNTP, due to resource constraints. We begin by examining logs from NTP servers, which highlight significant differences in synchronization behavior between wireline and wireless hosts. This analysis motivates a detailed laboratory-based study of clock synchronization on mobile hosts, revealing the causes and extent of misalignment. We then introduce a new protocol, Mobile NTP (MNTP), designed to be simple, efficient, and easy to deploy. Our implementation of MNTP on a wireless laptop demonstrates its effectiveness under various operating conditions, maintaining clock synchronization within 25ms of a reference clock, which is over 12 times better than standard SNTP.

## Keywords
- SNTP
- Wireless
- Mobile
- Time
- Measurement

## 1. Introduction
The concept of time and the mechanisms to track it have a long history. One inevitable aspect of time is the need to synchronize clocks in different geographic locations. This capability first emerged in the 19th century to manage complex railway schedules [48]. Modern computing and communication systems rely heavily on time synchronization for basic operation and a wide range of distributed applications.

In a distributed environment, time synchronization assumes the presence of a high-precision reference clock, which serves as the source of accurate time for other systems. Remote systems periodically interact with the reference clock to synchronize (discipline) their local clock. The primary challenges in such an environment include variations in crystal oscillator quality and environmental conditions (which determine clock drift), network path characteristics (which can limit synchronization accuracy [21]), and the protocol used to discipline the clock.

Mills' efforts led to the standardization of the Network Time Protocol (NTP) in 1985 [37]. NTP is widely used today, with high-precision reference clocks (typically atomic or GPS-based) forming the foundation of a distributed hierarchy of public time servers. However, the specific behavior of any particular client and its level of synchronization with a server can vary widely [52]. For devices that do not require the full performance and accuracy of NTP, a subset called Simple NTP (SNTP) [39] is used.

While the use of mobile computing devices, including smartphones, has surged over the past decade, little attention has been paid to their specific challenges for time synchronization. We argue that tight time synchronization will become increasingly important for applications such as gaming, finance, and measurement as mobile device usage continues to grow. Key challenges, particularly the possibility of dramatic changes in environmental conditions and highly variable path conditions, require detailed consideration to understand the efficacy of standard approaches.

In this paper, we address the issue of time synchronization in mobile systems. Our first objective is to understand the current time synchronization behavior of mobile hosts on the Internet. Specifically, we assess the time synchronization protocols and configurations used by mobile clients, focusing on one-way delay latencies. This serves as a baseline for the second part of our investigation, which aims to understand the range of behaviors of mobile time synchronization under various wireless conditions. This leads to the final component of our study, the specification and examination of Mobile NTP (MNTP), a new protocol for time synchronization in mobile clients.

## 2. Background
Various applications and services hosted on telecommunication networks require accurate time synchronization for correct and consistent operation. Clock drift, caused by differences in environmental conditions or crystal oscillator quality, complicates this requirement, leading to clocks advancing at different rates. To maintain clock synchronization among independently running networked hosts, the Network Time Protocol (NTP) was created in 1985 (RFC 958 [37]). Due to the heterogeneity of computing and network devices and their varying requirements, several variants of NTP, including the Simple Network Time Protocol (SNTP) (RFC 1769 [39]) and Precision Time Protocol (PTP) [27], have been developed.

Precise time estimates from a hierarchy of time sources (stratum servers) can be obtained using NTP, SNTP, or PTP. At the top of the hierarchy are stratum 0 servers, which use GPS receivers and/or atomic crystals to provide highly precise time estimates. These estimates are passed down to stratum 1 servers, which in turn pass them to stratum 2 servers, and so on, down to stratum 15. Stratum servers respond with time estimates for synchronization requests from a wide variety of hosts supporting any of the three protocol variants. Hosts in the Internet typically synchronize time with multiple stratum servers, usually at level 2 or higher.

Wired Internet hosts traditionally run the `ntpd` daemon to synchronize their clock using NTP. This software implements several NTP-standard filtering heuristics to select the best time samples from stratum servers. `ntpd` operates by exchanging timestamps with reference servers (a process called polling). The polling behavior is governed by the clock discipline algorithm [7], and `ntpd` determines the optimal polling interval based on measured round-trip delay, jitter, and oscillator frequency [9].

Unlike wired Internet hosts, wireless hosts such as mobile devices typically use SNTP to acquire time estimates from stratum servers. SNTP sets all fields in an NTP packet to zero except the first octet and does not employ the sophisticated clock correction and filtering algorithms of NTP, resulting in lower accuracy [39]. Additionally, wireless devices support a mechanism called Network Identity and Time Zone (NITZ) to update clocks in a one-off fashion [5, 6]. NITZ is a weaker mechanism as the estimates are not obtained periodically and depend on the device crossing a network boundary.

Commodity operating systems (OS) shipped with wireless hosts further inhibit accurate clock synchronization due to vendor-specific implementations. For example, Android's SNTP implementation polls once a day if NITZ data are unavailable and performs only three retries upon error, updating the system time only if the estimate differs by more than 5000ms. Similarly, Windows Mobile OS updates the system clock once every 7 days, with no further retries if the synchronization request fails.

## 3. Clock Synchronization Over Wireless Links
In this section, we analyze the problem of accurate clock synchronization in mobile hosts. We begin by examining NTP server logs and classifying clients as wired or wireless. We then discuss the basic characteristics of latencies for the various hosts identified in the logs. Next, we describe a series of laboratory-based experiments conducted with wired and wireless hosts to quantify the extent of time skew, defined as the measured frequency difference between the local clock and the 'true' time clock, in these devices. We conclude by discussing the results from the logs and experiments, which motivate the need for a new scheme for mobile host clock synchronization.

### 3.1 NTP Server Logs
**Dataset.** In this study, we rely on a new source of network latency measurements—passively collected traffic from NTP servers. We contacted several NTP server administrators, explaining our research objectives. Eight administrators responded positively with tcpdump traces from 19 NTP servers across 9 states in the US. We developed a lightweight tool based on `netdissect.h` and `print-ntp.c` to process the logs and extract relevant information such as the total number of unique clients, one-way delays (OWD) to and from NTP servers, and the time synchronization protocol used, using the filtering heuristic described in [23]. This heuristic is necessary to infer the state of synchronization of the client’s clock with respect to the NTP server, eliminating invalid latency measurements.

**Basic Characteristics.** Table 1 summarizes the basic statistics and key attributes of the 19 NTP servers, including the server's stratum number, IP version, total number of measurements collected, and number of distinct clients. The NTP servers used in our study include 5 stratum 1s and 14 stratum 2s, with a combination of IPv4 and IPv6 support. This dataset, collected over a period of one day, includes a total of 209,447,922 OWD measurements to 17,823,505 unique clients, as indicated by the unique number of IP addresses seen in the server logs.

**Wired vs. Wireless.** To classify the hosts seen in the NTP logs into wired or wireless, we use Team Cymru’s IP-to-ASN mapping service [16] and group hosts based on AS number and provider name in hostnames. We follow a simple process that leverages keywords and provider names (e.g., mobile, cloud, Amazon, Sprint, etc.) present in hostnames to classify clients into various service provider categories. Even though the keyword-based classification is rudimentary, it is sufficient to highlight the differences between wired and wireless service providers.

Figure 1-(left) shows a comparison of the minimum OWDs of clients belonging to various service providers, listed based on the average of minimum OWDs as seen in logs of three NTP servers. Four categories of latency characteristics are evident: (1) cloud and hosting providers (SP 1–3) exhibit very low minimum OWDs with a median of 40ms, (2) Internet service providers (SP 4–9) show a medium trend with a median of 50ms, (3) broadband providers (SP 10–21) exhibit high latency characteristics with median delays of about 250ms, and (4) mobile providers (SP 22–25) exhibit very high latencies with high interquartile ranges and median latencies as high as 550ms. Figure 1-(right) complements this by showing the distribution of minimum OWDs of clients belonging to the top 25 service providers, ranked based on the number of unique IP addresses. A striking characteristic of the extracted latencies is the linear trend of the mobile providers (note SP 22–25). We hypothesize that this characteristic is related to the broader geographic distribution of mobile wireless clients compared to fixed-location wireline clients. For all servers, 50% of the hosts from the three mobile providers exhibit a latency of more than 400ms, and this observation is consistent across all 19 NTP servers.

| **Server ID** | **Unique Clients** | **Server Stratum** | **IP Version** | **Total Measurements** |
|--------------|--------------------|--------------------|----------------|------------------------|
| AG1          | 639,704            | 2                  | v4             | -                      |
| CI1          | 606                | 2                  | -              | -                      |

[Continued in the next section...]