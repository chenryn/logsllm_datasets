InducedChurnasShelterfromRouting-TablePoisoningTysonCondie,VarunKacholia,SriramSankararaman,JosephM.Hellerstein,PetrosManiatisUCBerkeleyandIntelResearchBerkeleyAbstractStructuredoverlaysareanimportantandpowerfulclassofoverlaynetworksthathasemergedinrecentyears.Theyaretypicallytargetedatpeer-to-peerdeploymentsinvolvingmillionsofuser-managedmachinesontheInternet.Inthispaperweaddressrouting-tablepoisoningattacksagainststructuredoverlays,inwhichadversariesattempttointer-cepttrafﬁcandcontrolthesystembyconvincingothernodestousecompromisednodesastheiroverlaynetworkneigh-bors.Inkeepingwiththefully-decentralizedgoalsofstruc-turedoverlaydesign,weproposeadefensemechanismthatmakesminimaluseofcentralizedinfrastructure.Ourap-proach,inducedchurn,utilizesperiodicrouting-tablere-sets,unpredictableidentiﬁerchanges,andaratelimitonrouting-tableupdates.Inducedchurnleavesadversariesatthemercyofchance:theyhavelittleopportunitytostrate-gizetheirpositionsintheoverlay,andcannotentrenchthemselvesinanypositionthattheydoacquire.Weim-plementinducedchurninMaelstrom,anextensiontothebroadlyusedBamboodistributedhashtable.OurMael-stromexperimentsoverasimulatednetworkdemonstraterobustroutingwithverymodestcostsinbandwidthandla-tency,atlevelsofadversarialactivitywhereunprotectedoverlaysarerenderedalmostcompletelyuseless.1.IntroductionInrecentyears,thesystemsandnetworkingcommuni-tieshavedevotedsigniﬁcantattentiontotechniquesforco-ordinatinglargenumbers–millions–ofcomputersinade-centralizedfashion.Originallymotivatedbypeer-to-peerﬁlesharingapplications,thisresearchdemonstratedmas-sivelydistributedsystemswhosefunding,provisioning,andmanagementaredecentralizedacrossnumerouspartieswithlittlesharedtrust.Morerecently,thisdesignphilosophyhasbeenappliedtoahostofapplicationsincludingcon-tentdistributionnetworks[13],geographiclocationser-vices[17],ﬁlesystems[10],monitoringsystems[4],docu-mentarchives[31],anddistributedqueryprocessing[19].Centraltoanyofthesesystemsisthenotionofanover-laynetwork:acoordinationmechanismfornodesrunningadistributedapplicationtotrackeachother,andtoroutemessagesamongthemselves.Suchlarge,opensystemsfaceconstantchurn,thearrivalanddepartureofnodes,assomefail,hardwareisreplaced,connectivitychanges,orsoftwareisupgraded.Muchdesignandengineeringaredevotedtomaintainingperformancewhiletoleratingchurn.Aparticularclassofoverlays,structuredoverlayssuchasChord[30]andPastry[25],presentsahashtableabstrac-tionontopofapopulationofnetworkedcomputers.EachparticipatingnodeintheoverlayhasanIDfromalargeidentiﬁerspace,andisresponsibleforhandlingmessagesaddressedtoanextentoftheidentiﬁerspacearounditsownID.Inordertoroutemessagesintheoverlay,everynodemaintainsaroutingtableof“links.”Thesetofnodesandlinksinthesystemformsastructurednetworkgraph,overwhichIDlookupscanberoutedtotheresponsiblenodeef-ﬁciently,evenasthenetworkchurns.Whenusedtostoredata,structuredoverlaysareoftencalleddistributedhashtables(DHTs),thoughmanystructuredoverlayapplicationsdonotrequirestorage.Anadversarywhocansubvertoverlayroutingcanmod-ifytheoverlay’sbehaviorandhurtapplications:forexam-ple,shecanconvinceacorrect(i.e.,“good”)nodetoredi-rectanoutgoinglinktoher,therebypoisoningitsroutingtable.Alllookupsroutedviathatlinkwillendupinthead-versary’scontrol;shecanforwardthemorrespondtothemasshewishes.Thishasbeencalledrouting-tablepoison-ingoraneclipseattackintheliterature.Onceanadver-sarypoisonsagoodnode’sroutingtable,shecanamplifythatpoisoningbyinterceptingthegoodnode’smaintenancetrafﬁc,andconvincingthenodetoupdateitsroutingtabletoincludeadditionalcompromisedneighbors(Section2.2).PreviousProposals:PreviousdefensesagainsteclipseattackshavetypicallyinvolvedtheuseofatrustedthirdpartythatregulatesindirectlyhownodespartitiontheIDspace,forexample,byauthoritativelyassigningIDstonodes[7].Theintuitionisthatiftheadversary’snodeIDsarechosenuniformlyatrandombyanuncompromisedau-thority,theneventheadversaryreceivesresponsibilityofanIDspacesharethatisproportionaltothenumberofhernodes.Shecanthereforeaffectthesystemonlyinpropor-tiontoherpresence.Centralized,globallytrustedcertiﬁca-tionauthoritiescanbeburdensomeanddifﬁculttoadminis-ter[11],especiallywhenmultiple,mutuallydistrustingad-ministrativedomainsareinvolved.However,theycanofferrelieffromrampantadversarialactivitysuchastheuseofforged,throwawayidentities(alsoknownasSybilidenti-ties[12]).NotethatdefensesagainstSybilattacksdonotmiti-gatethethreatofampliﬁcationonceacompromisednodeischosenasaneighbor.Thisriskhasbecomemoreimpor-tantinrecent,highlyoptimizedstructuredoverlays,whichmakeaggressiveuseofrouting-tableupdatesnotonlytoaddresschurninthenetwork,butalsoforperformanceop-timizationssuchaslatencyminimizationoverlookuppathsthroughthegraph[14,23].OurContribution:Inthispaper1weasktwoquestions.First,cantherebeaneffectivedefenseagainstroutepoison-ingattackswithasimpler,lesstrusted,centralizedcompo-nentthatiseasytoauditandreplicate?Second,cantherebeapractical,implementabledefenseagainsteclipseat-tacksthataddressestheperformanceoptimizationsusedinrecentstructuredoverlays?Wepresenttechniquesthatan-swerbothquestionsintheafﬁrmative.Speciﬁcally,weproposetheuseofinducedchurnasadefenseagainsteclipseattacks,unconventionallycastingchurnasatoolratherthanascourge.Inducedchurncon-sistsofthreetechniques:periodicresetofroutingtablestolessefﬁcientbutmoreattack-resistantones,forcedunpre-dictableidentiﬁerchanges,andratelimitationonrouting-tableupdates.Wearguethatbyneverallowingtheoverlaytoquiesce,werobtheadversaryoftheopportunitytoplanaheadonnodepositioningpriortoanattack,andofherabil-itytoentrenchherself,amplifyingherpositionovertime.Weshowthatforatypical,well-tunedstructuredoverlaywereducerouting-tablepoisoningbyanorderofmagni-tudeandincreasetheprobabilityofsuccessfullookupsbyasmuchasafactorof5,whileincurringamaintenanceover-headofunder1KBpsateachnode,lowenoughevenforhomeusersoverdial-upconnections.Inducedchurnisap-plicabletoanyoverlayapplicationthatrequiresnodeorga-nizationwithoutpersistentstorage(e.g.,forqueryprocess-ing,multicast,ornetworkmonitoring);howeverforstorageapplicationswherechurnimposesdatamigration,inducedchurnmightbelessappropriate(seeSection5).InSection2wepresentrelevantbackgroundonstruc-turedoverlays,routingthreatsagainstthem,andsomepre-viouslyproposedsolutionsthatformthebasisforourde-fenses.Section3presentsthedesignofourinducedchurndefenseagainsteclipseattacks.Weevaluateourdesignin1Anextendedversionofthispapercanbefoundasatechnicalre-port[9].Inthatversion,weundertakeapreliminaryanalysisofinducedchurn,modelingasimpleadversarystrategy.Furtheranalysisisthesubjectofourfuturework.Section4,withexperimentalresultsonMaelstrom,aproto-typeimplementationofinducedchurnasanextensionoftheBamboostructuredoverlay[23].Ourevaluationmeasurestheimprovedsecurityofthesystemaswellastheperfor-mancehitcausedbyrouting-tablereset,unpredictableiden-tiﬁerchanges,andrate-limitedrouting-tableupdates.Fur-therweexploreextensions,possiblelimitations,andbig-pictureimplicationsofthisworkinSection5.Finally,weconcludewithrelatedworkandourfutureresearchagenda.2.BackgroundAsbackground,wepresentabriefprimeronstructuredoverlaynetworks.Wethendiscusstheclassofattacksthatconcernus,andpreviously-proposeddefenses,beforeintro-ducinginducedchurninSection3.2.1.StructuredOverlayNetworksAnoverlaynetworkisavirtualnetworkimplementedontopofanestablishedunderlyingnetworkofrouters;inourdiscussionwewillfocusonInternetoverlays.Appli-cationsrunningatparticipantmachinescommunicatealongtheedgesoftheoverlaynetworkusingunicasttransportser-vicesprovidedbytheunderlyingnetwork–inourcase,byIP.Therefore,amessageoveranedgeoftheoverlaymaytraversemanyedges(IProuterlinks)intheunderlyingnet-work.Thealgorithmsforchoosingoverlayedgesdifferamongoverlaydesigns.Astructuredoverlaybuildsitstopologyaccordingtoaparticularmodelgraphstructuresuchasahypercube,atorus,adeBruijngraph,etc.Tofacilitatethisconstruc-tion,overlaynodestakeidentiﬁersfromalargeIDspaceI,whichistypicallytherangeofacryptographichashfunc-tion(e.g.,SHA-1),andischosentobesufﬁcientlylarge(e.g.,160bitsormore)tominimizenamecollisions.Over-laynodestakerandomIDsfromI.ThenthecanonicalmodelgraphstructurechosenfortheoverlayisembeddedintheIDspaceandmappedtotheexistingoverlaynodes.Toeffectthismapping,responsibilityforIDspacerangesispartitionedamongthenodesintheoverlayatalltimes.InourdiscussionwewillassumethateachnodeisresponsiblefortheIDsthatarenearesttoitinI(Figure1);otherpar-titioningschemesareusedintheliterature,butthechoicehasnoimpactonourtechniquesbelow.API:Theinterfacetothestructuredoverlayconsistsofasinglelookup(id)call.Inresponse,theoverlaymustlocatetheIPaddressofthenodecurrentlyresponsibleforIDid,typicallybyroutingamessagetothatdestination.TopologyandRouting:Theoverlay’snetworktopol-ogy–themappingofthemodelgraphstructuretooverlaynodesandlinks–iscapturedviatheroutingtablemain-tainedateachparticipantnode.Forconcreteness,weuseFigure1.AnexampleIDspaceforastructuredoverlay,representedasaring.Thenodesmaintainingtheoverlayarerepresentedaswhitecirclesonthering;forexample,com-puterAisrepresentedasthecirclewithIDh(A)=F893A.Dashedovalsrepresentthe“re-sponsibility”ofeverynode,intermsoftheIDrangeitmanages.Inthisexample,everynodemanagestherangeofIDsthatarenu-mericallyclosesttoitsownidentiﬁer.Pastry[25]asanexamplehere.Pastryisrelativelyeasytodescribe,andourimplementationinSection4wasdoneintheBamboooverlay,whichusesaPastry-basedtopology.Manystructuredoverlaydesigns,includingthoseofPas-tryandBamboo,beginwithareinforcedringtopology,inwhicheverynodemaintainslinkstotheparticipantnodeswhoseIDsareclosestinI–usuallyaﬁxednumberofsuc-cessorsandpredecessors.Thesearesometimescalledthenode’sleafset.Toprovideroutingefﬁciency,theringisthenaugmentedwithasetofneighborsthatprovidelong“jumps”inI.Thechoiceofwhichfarawaynodestolinktoisimplementation-dependent.InPastry(andBamboo)far-awaylinksarechosenaccordingtoapreﬁx-hypercubetopologyandnodeIDsarerepresentedintermsofdigitsinbase2b,whereusuallyb=4.Hypercubelinksarestoredinaroutingtablethatisdividedinto160/browsand2bcolumns.ForanodewithIDγ,therouting-tableentry(i,j)“pointsto”anIDthatsharesitsleadingidigitswithγ,hasjasits(i+1)-stdigit,andendsinanysufﬁx.Topopulatethatentry,γpickssuchanIDrandomly,looksuptheresponsi-blenode,andstoresitsaddressandIDinthetableentry.Theremaybemanycandidatenodesforatableentry(i,j),particularlyforsmallvaluesofi.Forexample,inFigure1,nodeF893Acouldhaveinentry(0,9)anynoderesponsibleforIDsstartingwith9(e.g.,91188or9D0E6).Typically,anoderouteslookup(α)greedily.Ifamongallneighbors,itsownIDistheclosesttoα,thenoderespondsdirectly;otherwiseitforwardsthelookuptotheneighbororleaf-setmemberwhoseIDistheclosesttoα.Dynamics:Sincestructuredoverlaysareintendedfordynamicenvironmentswherenodescomeandgofrequentlyandunpredictably,everynodemonitorsthestateofthenodestowhichitlinks,replacinganythatdisappear.Con-sidertheexampleinwhichPastrynodeF893AdetectsthatnodeF8389,containedinitsrouting-tableentry(2,3),nolongerrespondstopings.Then,nodeF893Alooksforan-othercandidatetoﬁllentry(2,3),bychoosingsomeran-domsufﬁxXandissuinglookup(F83X).AnyreturnednoderesponsibleforIDF83Xcanﬁlltheemptyentry.Inadditiontoensuringthelivenessofneighbors,somestructuredoverlaysperformrouting-tableupdatestoopti-mizeperformanceoverlookuppaths;Bambooisoneexam-ple.Insuchdesigns[14,23],anodemaintainsforeveryentryintheroutingtableanumberofcandidateneighbors.Thenodekeepstrackofanyperformancemetricwithre-gardstothosecandidatesandchoosesthebestnodeamongthemtolinkto(e.g.,theonewiththesmallestnetworkla-tency,orhighestuptime,etc.)Forexample,theBamboonodewithIDF893ArepeatedlylooksupIDswithpreﬁxF83andincludesthediscoverednodestoasetofcandidatesforrouting-tableentry(2,3).Itpickstheclosestcandidateintermsofnetworklatencyforthatentry,butkeepstherestasbackupincasethechosencandidatefails.2.2.EclipseAttacksWeshiftourattentiontoattacksonoverlayrouting.Tobeginthediscussion,weconsiderthecaseinwhichsomenodesbecomeinstantaneouslycompromisedbyasinglead-versary.ClearlytheadversaryalsocontrolsthefateofallIDsmappedtohernodes.Alessobviousbutimportantim-plicationisthat“good”(i.e.,uncompromised)nodes’rout-ingtablesnowpointtosomecompromisednodes.Wede-ﬁneasthelevelofpoisoningofagoodnodethefractionofitsroutingtableoccupiedbycompromisednodes.Singhetal.[28]formalizedapatternofmisbehaviorcalledaneclipseattack,whichconsistsofthegradualpoi-soningofgoodnodes’routingtableswithlinkstoacon-spiracyofadversarialnodes.Notethatmulti-hoproutingintheoverlayallowsadversariestointerceptlookupswhosesourceanddestinationarebothuncompromised.Leftunchecked,theadversarycaneventuallycontrolmostcom-municationbetweengoodpeers,therebyplacingastrangle-holdonthequalityandfateofapplicationsusingtheover-lay.Thepaceatwhichanadversaryisabletoincreasehercontroldependsonthenumberofattackvectorsavailable.Ampliﬁcation:Inadditiontointerceptingapplicationlookups,theadversarycaninterceptlookupsusedbytheoverlaytochooseneighbors;shecanthusinﬂuencegoodnodes’neighborselection,amplifyingherabilitytointer-ceptsubsequenttrafﬁc.InthePastryexample,whennodeFigure2.Thevictimsendsa“Ping”mes-sagetoadversarynode“Bad2,”whichrelaysthemessageoveralow-latencylinkto“Bad1,”whichﬁnallyreturnsaspoofed-source“Pong”messagetothevictim,pretendingtobe“Bad2.”Whereasthecorrectround-tripIPlatencyfromthevictimto“Bad2”wouldhavebeen200ms,itispresentedas130ms.Suchlatency“savings”–whichcanbeob-tainedthroughunpublishedroutes(e.g.,withRON[1])–givetheadversaryasigniﬁcantadvantageinoptimizedrouting.F893Aupdatestherouting-tableentry(2,3),itlooksupF83X.Ifthepathofthealookuppassesthroughacom-promisednode,theadversarycanintercepttherequestandrespondtoitasifshecontrolledF83X,returningoneofhernodeswiththenearestID.Thisbehaviorpatterncausesafeedbackcycle,whoseresultisanincreaseingoodnodes’levelofpoisoningwithmostupdaterequeststheymake.Tomakemattersworse,optimizedstructuredoverlaysofferfurtherattackvectorstotheadversary,sincetheybe-stowuponroutingtablesmore“degreesoffreedom.”There,anodeselectstheoptimalnodeforeachrouting-tableentryaccordingtomeasurementsitperformsbetweenitselfandthecandidatenodes.Ifsuchmeasurementscanbebiasedbytheadversary,thenshecancauseavictimnodetogivepreferentialtreatmenttohernodes.Forexample,anadver-sarywithgoodnetworkconnectivitycanuseherresourcestoexhibitunnaturallylownetworklatency,asshowninFig-ure2.SimpleDefenses:Thepresenceofadversarialnodesisinevitableinanypracticalopensystem.Inastructuredover-lay,thesenodescontrolthefateoftheIDsforwhichtheyareresponsible.Tomitigatetheabilityoftheadversarytoin-tercepttrafﬁcdestinedforotherIDs,Castroetal.proposedredundantrouting[7]:thesendersendsitslookuptoallofitsleaf-setneighbors,whoforwardeachduplicatelookuptothedestinationindependently,inlargelydistinctpaths.Thisapproachtradesbandwidthforahigherlikelihoodofmessagedelivery,andcanbeworthwhileforasmallsub-setofcriticaltrafﬁc.Wewilluseitlaterforrouting-tablemaintenancelookups,forexample.Withrespecttooptimizedoverlays,thesameworksug-geststheuseoffailuredetectorsforrouting.Onesuchfail-uredetectordependsontheuniformdistributionofidenti-ﬁersoverthenodepopulation,implementedviaacentralidentiﬁercertiﬁcationauthority.Whenthefailuredetectorpointsoutthatalookupresponseissuspicious,thenacon-strained,unoptimizedroutingtableisusedasfallbacktoresendthesamelookuprequest[7].Constrainedroutingta-bleslimitthechoiceofnodesforeachrouting-tableentrytoonecandidate.InthePastryexample,entry(0,9)inthecon-strainedroutingtableofnodeF893ApointstoasingleID:theonenumericallyclosestto9XforaﬁxedsufﬁxXthatthenodechooses.ContrastthistoregularPastryroutingta-bles,whereanysufﬁxX,afull16-thoftheIDspace,wouldbeadmissibleinstead.Aslongasanodecanlocatethecor-rectcandidateforanentry–perhapsviaredundantlookups–itcanensurethatitsconstrainedrouting-tablepoisoningissimilartotheadversary-controlledfractionofthenodepopulation.Bymaintainingbothroutingtables–oneopti-mizedbuteasilycorruptible,andoneslowbutmorerobust–wecangetgoodperformanceandsecurerouting.Intheinducedchurndesign,describednext,weutilizethisideaofdualroutingtables,thoughinaslightlydifferentmannerthatdoesnotrequirefailuredetectors.3.DesignOurcontributioninthisworkarisesoutoftheobserva-tionthat,regardlessoffallbackrouting,poisoninginop-timizedroutingtablesincreasesovertime.Ourgoalistoensurethattheaveragepoisoningofgoodnodes’routingtablesremainslowovertime.Toaccomplishthis,ourpro-posalretainstheideaofmaintainingbothconstrainedandoptimizedroutingtables[7],butwithatwist.Insteadofusingafailuredetectortodecidewhentouseeachtableforregularlookups,weimposeaperiodicresetoftheopti-mizedroutingtabletothecontentsoftheconstrainedone,alwaysusingtheoptimizedroutingtableforlookups.Op-timizationstartsanewafterreset,buttheadversarymustpoisongoodroutingtablesagaintomaintainherfoothold.Intuitively,weseektoinducethepoisoningbehaviorillus-tratedinFigure3.Assumingresetsbringtheoptimizedroutingtablebacktoitsbaselinelevelofpoisoning,themorefrequenttheresets,thelowerthepoisoningaveragedovertime.Periodicresetcanbehelpfulonlyifpoisoningintheopti-mizedroutingtablesslowlyincreasesovertime;inFigure3,theslopeofthe“sawtooth”mustbelow.Inpracticethatisnotalwaysthecase,since“eager”updatealgorithmsmayoptimizeroutingtablesfast,andpreferencetonearbynodes(inthenetwork)canbeadversariallybiasedtoconvergeal-waystowardsgreaterpoisoning.Tokeeptheslopelow,weproposetheratelimitationofrouting-tableupdates,sinceupdatesconstitutetheprimaryvectoroverwhichpoisoning 0 0.2 0.4 0.6 0.8 1PoisoningTimeNo resetTimeReset onceInstantaneousAverageTimeReset twiceFigure3.Agraphicalrepresentationofrouting-tablereset,withincreasingfrequencyfromlefttorightgraphs.increaseiseffected.Insteadofgettingupdatesasfastaspossible,wegetthemataﬁxedratethatdoesnotchangeasnetworkconditionsorthesizeoftheoverlaychange.Con-vergencetooptimalconnectivitymaybedelayedasaresultofthisupdateratelimitation.Withit,however,evenapow-erfuladversaryispreventedfrombringingherresourcestobeartotheirfullestextent,reducedinsteadtotheextentad-missiblebyourratelimits.Thelastcomponentofourcontributionconcernspre-dictability.Iftheadversaryknowshowoptimizedrout-ingtablesresetovertime,thenshecanconductherattacksagainstcontentrightbeforearesetoccurs.Furthermore,shecanimprovethedeploymentofhernodes(whichidentiﬁerstheyhaveandwhichroutingtabletheypoison)usingknowl-edgeofhowgoodnodes’routingtablesevolvewitheveryreset.WedeprivetheadversaryofthissourceofknowledgewithanunpredictableIDassignment.Ateveryreset,ev-erynodepicksanewrandomIDandpositionsitselftoadifferentpartofthetopology,enforcingthesamebehavioronnodesinitsownroutingtables.Ifgoodnodes“move”continuously,theadversarycannotattacktheminthesamewayaftereveryrouting-tablereset;ifallnodes,includingadversarialones,mustchangetheiridentiﬁersperiodically(orfacedisconnectionfromgoodnodes),thentheadversarycannotholdontoorimproveuponadvantageouspositionsintheoverlay.Wenextdescribeadesignthatimplementsthisbasicin-tuitioninstructuredoverlays.Ourdesignisgenericandcanbeappliedtoanyspeciﬁcstructuredoverlay.InSection4wedescribeaparticularimplementationofinducedchurnforBamboo[23].Atahighlevel,ourdesignconsistsofacommonsourceofrandomnesstoreducethepredictabil-ityoftheunderlyingoverlay(Section3.1),functionalityforcomputingandvalidatingfreshidentiﬁersusingthissourceofrandomness(Section3.2),machineryforeffectingandenforcingchurn(Section3.3),andamechanismforlimit-ingtherateofrouting-tableupdates(Section3.4).InSec-tion3.5,wepresentsomeextensionsandoptimizationstothisbasicdesign.3.1.TimedRandomnessServiceOurdesignreliesonatimedrandomnessservice.Peri-odically–ontheorderofseconds–thisservicegeneratesafreshrandomnumber,whichitplacesintoasignedrandom-nesscertiﬁcateoftheform[Timestep,Random].Theser-vicereturnsthecurrentoranyrecentrandomnesscertiﬁcatetoanyonewhoasks,viasomesimpletransportmechanism,e.g.,overHTTP.Thisisarelativelysimpleserviceandcanbeimple-mentedinavarietyofways.Astraightforwardimplementa-tionwouldbecentralized,requiringlittlemorethanawell-managedbutlightweightwebserver,withminimalstorageandaprocessoronlystrongenoughtoproduceasignedran-domnumbereveryfewsecondsorso.Itrequiresthatallnodeshavetheserver’spublickey;thiskeymaybedis-tributedwiththeoverlaysoftwarebundle,orviaanetworkdiscoveryprotocollikeDHCPorDNS.Hereweassumethattherandomnessserverisavailable,uncompromised,andreachablewithlowlatencyfromallnodes.Thesegoalsmaybedifﬁculttorealize.However,thereadershouldnotethatthetimedrandomnessserviceislightweight,easytoaudit,andamenabletoreplication.TheeaseofreplicationinparticularalleviatestheriskofDDoSattacksontheran-domnessservice.Inthispaperwedonotdiscussthedetailsofimplementingafullydecentralizedrandomnessserveral-thoughwedoexplorealternativedesignsinSection5,anddiscussthecomplexity-accountabilitytrade-offforsuchaservice.3.2.RandomUnpredictableIdentiﬁersInthissectionwediscussthedetailsofnodeidentiﬁergeneration,andhowitisdoneinanunpredictablefash-ion.ItistypicalforanoverlaynodetosetitsidentiﬁerbyhashingitsIPaddress(e.g.,Chord[30]).Weaugmentthisconstructionwithafresh,randomnonce.Tojointheover-lay,orwheneveritmustresetitsidentiﬁer,anodeobtainstheappropriaterandomnumberfromtherandomnessser-vice.Itthencomputesitsnewidentiﬁerbyhashingitsad-dressandthatnumber:newID=hash(Random!IPAddress).Giventhesamerandomnumber,othernodeswillbesub-sequentlyabletovalidatethecomputationofthisIDfromthenode’sIPaddress.Thesevalidationsreplacethevali-dationofcentrallyissuedIDcertiﬁcates,inacertiﬁcationauthority-baseddesign.Thechoiceoftheappropriaterandomnumber–thatis,thetimesteptoberequestedfromtherandomnessserver–isdependentonthefrequencywithwhichidentiﬁersmustbereset.Wecallthetimebetweenidentiﬁerchangesinourinducedchurnschemeanepoch,andexpressthelengthoftheepochintermsoftimestepsoftherandomnessservice;wewillexplorethetuningoftheepochlengthinSection4.Byconvention,the“beginning”ofanepochisthetimestepoftherandomnessservicethatisanintegermultipleoftheepochlength.Inotherwords,attimestept,currentoverlayIDsmustbecomputedusingtherandomnumberissuedbytherandomnessserverattimestept−(tmodk),wherekisthenumberoftimestepsinanepoch.InSection3.5.1wereﬁnethisconventionfurther.3.3.InducedChurnEverynodeinourdesignmaintainstwokindsofrout-ingstate:anOptimizedRoutingTable(OptRT)andaCon-strainedRoutingTable(ConsRT).ThenodeusesitsOp-tRTforallapplicationlookuprequestsandmaintenancere-questsfortheOptRTitself.ThenodeusestheConsRTforalllookuprequeststhatassistotherstojointheoverlay,ei-therinitiallyoraftertheendofanepoch,andtomaintaintheConsRTitself.LookupsovertheConsRTareperformedredundantlytoincreasethechancesthattheyreachtheirin-tendeddestinations.Attheendofitsepoch(i.e.,everyktimestepsoftheran-domnessservice),anodeobtainstherandomnumberforitsnextepochfromtheserviceandusesittocomputeitsnextidentiﬁer(Section3.2).Itthenjoinstheoverlaywiththatnewidentiﬁer;itsjoin–alookupforthenewidenti-ﬁer–isroutedredundantlyovertheConsRTofthenodesintheoverlay.Whenthe(re)joiningnodehasacquiredanewConsRT,itresetsitsOptRTtothenewConsRTandaban-donsitsoldidentiﬁer.ItthenbeginsoptimizingitsOptRTanew,untiltheendoftheepoch.Nodesevictfrombothroutingtablesthoseentriescon-tainingstaleidentiﬁers.Anidentiﬁerisstaleiftherandomnumberusedtocomputeitistooold,thatis,kormoretimestepsearlierthanthecurrentrandomnessserver’stime.Inthissense,nodesenforceamaximumlifetimeofoneepochlengthonthenodescontainedintheirroutingtables.3.4.UpdateRateLimitationWeimposealimitontherateatwhichupdatesareap-pliedtoanode’sroutingtablesinordertoslowdowntheproliferationofmaliciousentries.Whenﬁrstjoiningtheoverlayorafterchurning,anodestartsaperiodicupdatetimer.Wheneverthattimerexpires,thenodeissuesanup-daterequestforeachofitsroutingtablestoobtainup-to-datecandidatesforsomerandomlychosentableentries.AsdescribedinSection2.2,fortheConsRTthenewcandidatenodeisfoundviaaredundantlookup,andisacceptedintotheentryifitsidentiﬁerisnumericallyclosertotheentry’stargetthantheexistinglink.FortheOptRT,thecandidatenodeisfoundviaasingle-pathlookup,andisacceptediftheentrywasemptybefore,orifthecandidate’smeasure-mentsontheoptimizednetworkmetricarebetterthanallotherknowncandidatesforthesameentry.Updatestobothroutingtablesmustberatelimited,butupdateratesneednotbethesameforbothtables,thoughourprototypedoesusethesamerate.Nodessetthepe-riodoftheupdatetimeraccordingtoatrade-offbetweensystemadaptabilityanddesiredroutingsecurity;morefre-quentupdatesimproveresponsivenesstohighlydynamicenvironmentsattheexpenseofsecurityandpossiblecon-gestion[23],whereaslessfrequentupdatesarecheaper,fa-cilitatedefenseagainsteclipseattacks,buthinderrespon-sivenesstotopologychange.Updateratelimitationshouldapplytosingle-entryup-dates;forsomestructuredoverlayupdatemechanismsthatupdateentiregroupsofentriesinonego,furtherreﬁnementisrequired.Forsuch“bundled”updates,werandomlydropsomeoftheupdatecontents.Wethusshieldtherecipientgroupofentriesinthetargetroutingtablefrombeingcom-pletelypoisonedinonefellswoopduetoanunfortunatechoiceoflookuppath.Instead,topoisonmanyrouting-tableentries,anodemustmakemanyunfortunateupdatechoices.3.5.OptimizationsUptothispoint,wehavepresentedasimpledesign.Inthissectionwecomplicateitslightlytointroducetwoimportantoptimizationsthatallowinducedchurninprac-tice,withoutunduesacriﬁcesinperformance.TheresultingpseudocodeappearsinFigure4.3.5.1.StaggeredChurnIfallnodesinthesystemchurneveryk-thtimestep,thenthesystemwilllikelybeveryunstableandheavilyloadedrightaroundtheglobalchurntime.Itwillalsomovefromlesspoisonedtomorepoisonedstatesuniformly,makingiteasyfortheadversarytopickwhentoattack.WenowdescribefunctionstaggeredChurn()1:LeafSet←LeafSetnext2:OptRT←ConsRTnext3:ConsRT←ConsRTnext4:ConsRTnext←LeafSetnext←null5:ifLeafSet=nullthen6:Rejoinnetworkanew7:CallstaggeredChurn()intimeepochLength8:CallprecomputeNeighbors()intimeepochLength−δfunctionprecomputeNeighbors()1:peer←lookup(myNextID)2:LeafSetnext←null3:tmpLeafSet←peer.getLeafSet()4:forallp∈tmpLeafSetdo5:ifnextChurnTime<expireTime(p)then6:LeafSetnext.add(p)7:PopulateConsRTnextforidentiﬁermyNextID8:forallp∈ConsRTnextdo9:ifnextChurnTime<expireTime(p)then10:RemovepfromConsRTnextFigure4.Pseudocodeforthestaggeredchurnandrouting-tableprecomputationalgorithms.howtostaggerinducedchurnbypartitioningthepopulationintoGchurngroups,eachchurningatadifferenttimestep.Wedeﬁnechurngroupsaccordingtonodes’IPad-dresses,forexample,bysettinganode’sgroupnumberto(hash(IPPreﬁx)modG).IPPreﬁxisanappropriatelysizedpreﬁxofthenode’sIPaddress,e.g.,24bits,longenoughtoensureareasonablyuniformgroupsizedistribution,butshortenoughtopreventtheadversaryfromchanginghernodes’churngroupsbyﬁddlingwiththehighlyspoofablelow-orderbitsofIPaddresses.Inordertostaggerchurn,wemustmakeminormod-iﬁcationstotheidentiﬁermechanismsdescribedinSec-tion3.2.Therandomnessservertimestepwhenanodemustswitchidentiﬁersisnolongerthesameforallnodes,butisoffsetbythegroupnumber.Anodeingroupg∈[0,G),mustswitchidentiﬁersatalltimestepstwheretmodk=gk/G.Attimestept,current,non-staleidenti-ﬁersofgroupgmustusetherandomnumberoftimestep(t−((t−gk/G)modk)).Arelatedimplicationofstaggeredchurnisthatdiffer-ententriesinroutingtablesbecomestaleatdifferenttimes,andareveriﬁablewithdifferentrandomcertiﬁcatesfromtheserver.Tosimplifymanagementofidentiﬁerexpirationwithoutoverloadingtherandomnessserver,nodespiggy-backtherelatedrandomnesscertiﬁcatewithanytransferofnodeidentiﬁersduringmaintenanceorotheridentiﬁerex-changes.Forthesamereasons,nodescacherandomnesscertiﬁcatesforaslongastheyhaverelatednodeidentiﬁersintheirroutingstate.Withthesesmalloptimizations,anodeneedcontacttherandomnessserverdirectlyonlyonceeveryepochtoobtaintherandomnumberitneedsbeforechurn-ing;itcanalsousethatopportunitytosynchronizeitsclocktothatoftheserverattimestepgranularity.Sinceweexpecttimestepstolastafewseconds,evenhighInternetround-triptimeswouldallowfairlygoodtimesynchronizationofnodeswiththerandomnessserviceforthedurationofanepoch.3.5.2.RoutingStatePrecomputationInthebasicdesignofSection3.3,anodejoinstheoverlaywithitsnewidentiﬁeratthebeginningofeachepoch.Whileanodeisjoining,itisunavailableforhandlinglookups.Toreducetheimpactofthisregularoccurrence,weallownodestoprecomputetheirnextroutingstate.Whentheepochboundaryarrives,thenodecanimmediatelyswitchitsleafset,ConsRT,andOptRTtotheprecomputedrout-ingstate,makingforasmoothtransition.Ifthenodehasbeenunabletoprecomputeitsnewroutingstateontime,itjoinswiththenewidentiﬁerasbefore.Thisoptimiza-tionrequiresthatanodeknowitsnextidentiﬁeraheadoftime.Toallowthis,weshiftthemappingfromran-domnessservicetimestepstoepochs:therandomnonceforgroupg’scurrentepochattimesteptisthatissuedatTg=(t−k−((t−gk/G)modk));therandomnonceforgroupg’snextepochisTg+k.Withroutingstateprecomputation,atanygiventimeanodemaintainsatotalofthreeroutingtables:aConstrainedRoutingTable(ConsRT),anOptimizedRoutingTable(Op-tRT),andaspeculativeConstrainedRoutingTableforthenextepoch(ConsRTnext).AnodepopulatesConsRTnextusingitscurrentConsRT,bygoingthroughthemotionsofajoinoperationwithitsnextidentiﬁer,withoutactuallychanginganyothernode’sroutingtables:itlooksupitsnextidentiﬁerintheoverlaytodiscoverwhatitsleafsetandConsRTwouldbeforthatnextidentiﬁer.Thisdiscov-eryisdifferentforeverystructuredoverlaydesign.InBam-boo,forexample,thenodeforwardingthenewcomer’sjoinlookupateveryhopsendsthenewcomeritsrouting-tablerowusedtoforwardthelookup[23].Duringprecompu-tation,routing-tableentriesthatwillbestalebythetimethenodeactuallychurnsareexcluded.TheprecomputedConsRTnextismaintainedusingperiodicupdates,justasthecurrentConsRTis(seeSection3.3).ThecarefulreaderwillnoticethatpruningnodeswithIDsthatexpirepriortoaninducedchurnpointprefersnodesingroupsimme-diatelyfollowingthechurningnode’sgroup.Toreducethisbias,nodesprecomputetheConsRTnextlateinthecurrentepoch.IntheFigure4pseudocode,thistranslatestomakingδ(lastlineofstaggeredChurn())assmallaspossible.Precomputationgivestheadversaryadvanceknowledgeofwheregoodnodeswillbeoneepochintothefuture.Thisisanimportantconcern,makingitundesirabletoprovidegreaterlevelsofprecomputation.However,recallfromSec-tion3.4thattheadversarycanonlytakeadvantageofalim-itednumberofupdatesperepochduetoratelimitation.Foroursingle-epochprecomputation,theadversarymustde-cidewhethertouseherupdatebudgettoattackthecurrentepoch’sOptRT,ortoplacehernodessoastoattacknextepoch’sOptRTmoreeffectively.Fortunately,eventhoughsheknowswherehernodeswillbeinthenextepoch,justasgoodnodesdo,sheisstilllimitedtousinganidentiﬁerforthedurationofasingleepochonly,makingsuchprede-ploymentofassetslimitedinitsutility.3.6.DesignAlternativesInthissectionwetalkaboutthealternativedesignsforourdefenses,namelyForcedUnpredictableIdentiﬁerChangeandPeriodicResets.3.6.1.AlternativesforForcedUnpredictableIdentiﬁerChangeOurdesignchoiceforforcedunpredictableidentiﬁerchangeplacestheresponsibilityofkeepingtimeandproducingun-predictabilitytoacentralizedrandomnessserver.Thisisareductionincentralresponsibility,comparedtothealterna-tiveofhavingacertiﬁcationauthorityregisteringentities,controllingtherateatwhichidentiﬁersareissued,dealingwithrevocation,etc.Anintermediatedesignpointbetweenthetwowouldbetocontrolidentiﬁerunpredictabilityoverentiregroupsofpeers(accordingtosomegrouping),reduc-ingthestatemaintainedattheserverfromthegranularityofindividualaddressestothatofgroups.IncontrasttoMael-strom,thisapproachischeaperintermsofresources,butgivesmoreresponsibilitytotheserver,whocannowbiasgroupassignments.Goingintheoppositedirectionfromourdesignchoicetowardslesscentralizedresponsibility,wecoulddistributethetaskofcontrollingunpredictability,forinstancebyus-ingvariantsofsharedcoinﬂippingschemes,suchasthatdescribedbyCachinetal.[5].Therandomnessservercouldthusbedistributedoverallpeersorasetofserversenjoyingpartialtrustamongthepeerpopulation.This,forinstance,couldbeataskforthesetofbootstrappingserversthatmostoverlaysrelyon.Finally,anattractivefullydistributeddesignwearecon-sideringforfutureworkwouldhelpanindividualpeertoensurethatidentiﬁersofpeersitcommunicateswitharede-terminedinamannerunpredictabletothemandfreshwithinatimeframethatthepeeritselfcantrackalone.Thebasicideaistorunanunpredictablelogicalclockperpeer.Atev-erytimestep,eachpeerbroadcaststherandomvalueofitsclocktoitsneighbors.Apeerreceivingclockvaluesfromitsneighborshashesthemtogether(e.g.,inaMerklehashtree)andcombinestheresultwithitsownpreviousclockvaluetoproduceavalueforthenexttimestep.Apeer’sidentityiscryptographicallydependentonthevalueofitslocallogicalclock.Toprovetoaneighborthatitsidentiﬁerisrelativelyfreshanduntilrecentlyunpredictable,apeertracesabackwardpathfromtheclockvaluethatinﬂuenceditsnewidentiﬁertoaclockvalueissuedbythisnewneighborsometimeinthepast;thispathfollowsbackwardsasequenceofhashesandlogicalclockvaluebroadcasts,e.g.,tracingapathfromthenewneighbortothepeer’soldpositionintheoverlay.Sincetheneighborrememberswhenitissueditsownclockvalues(forashortperiodinthepast),itcanestimateforhowlongthepeerhasknownitsnewidentiﬁer.Thisisasimpliﬁedinstanceofthecoordinationrequiredforadis-tributedsecuretimestampingservice[20].Weareplanningtoexploretheoverheadsandpotentialbeneﬁtsofsuchanaggressivelydecentralizedapproachunderheavychurn.3.6.2.AlternativesforPeriodicResetWeconsideredseveralalternativesforperformingtheperi-odicresetsthattriggerinducedchurn,includingproximity-metricrandomization,gangevictions,andselﬁshrouting-tablechurn.Proximity-metricrandomizationintroduceser-rorinthemeasurementoftheproximitymetricusedforroutingoptimization.Fortheexampleofpoint-to-pointla-tencyasthemetric,wecouldrandomizeseverallow-orderbitsofthemeasuredlatencyperdiscoveredpeer.Thoughcoarse-graineddifferentiationamongpotentiallinksisstillavailable,ﬁner-grainedcomparisonsoflinkschangeunpre-dictably,causingproximityneighborselectionnottocon-vergealwaystothestrictlyclosestneighborbut,instead,topickatrandomfromalargersetofotherwisenearbyneigh-bors.ThisapproachseemedawkwardasitineffecttriestomodifytheproximitymachineryspeciﬁctoBamboo,whileoursolutioniscleanerandapplicabletoanystructuredover-lay.Gangevictionswouldallowthepeerscurrentlyoccupy-inganeighborhoodofthelogicaloverlayspacecollectivelytodecidetheorderofpeerevictionsandtomonitorjoins.However,achievingconsensusonevictionsinahighlyde-centralized,untrustedenvironmentcanbetrickyandcom-putationallyexpensive,makingthisapproachundesirable.Selﬁshrouting-tablechurningfollowsthesimilarphilos-ophyofevictingentriesfromapeer’sroutingtablewhenthoseentrieshaveexceededamaximumlifetime.However,anidentiﬁerisnotevictedfromallroutingtablesofcorrectpeersatthesametime.Asaresult,thoughsimilartooureventualdesign,thistechniquemightleadtoacontinuousstateofroutinginconsistencies[18].4.EvaluationWeevaluateinducedchurnagainstthegoalsofoursys-tem:defenseagainsteclipseattackswithacceptableperfor-mance.FirstwedescribeMaelstrom,ourprototypeimple-mentationofinducedchurnbuiltontopofBamboo.ThenwemeasureandcomparetheresistanceofMaelstromtopoisoning,aswellasitsoverhead.Implementation:WehavebuiltMaelstromasasecureextensiontoBamboo,aﬁne-tuned,realstructuredoverlay.Maelstromisasecurerouterpackage,consistingofabout5,000linesofJavasourcecode.TheprimarycomponentintheBamboosystemistheRouter,whichmaintainsaleafsetandOptRT.Duringnor-maloperation,aBamboonodeperformsperiodicprobesformaintainingtheroutingtable.Bamboouses2algorithmsformaintainingtheOptRT:globaltuningandlocaltuning.TheglobaltuningalgorithmlooksuparandomidentiﬁerintheIDspace.ThereturnedresponsiblenodeBisaddedtotheroutingtableifitﬁtsinanemptyslotoriscloserintermsofIPlatencythantheexistingslotoccupant.LocaltuningatnodeAperiodicallyrequestsarandomrouting-tablerowRfromanodeBchosenatrandominA’sroutingtable.Ain-sertsintoitsroutingtabletheentriesofRiftheyﬁllemptyslotsorimprovelatenciestothoseslots.Maelstromrate-limitstheseperiodicupdates(Section3.4).MaelstrommaintainstworoutingtablesinadditiontoBamboo’sOptRT:ConsRTandConsRTnextalongwiththenextleafset,whoseupdatesitalsorate-limits.Furthermore,Maelstromshieldsentirerowupdatesduringlocaltuning.Becausehigherrowsofaroutingtableadmitgreatervaria-tioninnodecandidates(Section2.1)sincetheyacceptnodeidentiﬁerswithlonger“free”sufﬁxes,rowshieldingdropshigher-rowentriesmoreaggressively.MaelstromacceptsamaximumofRowNumber/2+1randomentriesperupdate(i.e.,1entryforrow0,2forrow1,etc.).ExperimentalSetup:ToevaluateMaelstrom,wean-swertwoquestions.First,whatdoesMaelstrombuyusinpracticeinthefaceofattacks?Second,whatisitsover-head?Wefocuson5metrics:routing-tablepoisoning,thefractionofmaliciousentriesinaroutingtable;routingsuc-cess,theprobabilitythatalookupwillevadeadversarialin-terceptionandreachitsdestination;themaintenanceband-widthoverheadintermsofbytessent;averagenetworkla-tencyforoverlaylookups;and,theaveragehopcountofoverlaylookups.Routing-tablepoisoningandroutingsuc-cessmeasurethepoisoningresistanceofMaelstrom,whilebandwidthoverhead,latency,andhopcountmeasurethecostsofitsresistance.Ideally,wewishtoshowthatourde- 0 0.1 0.2 0.3 0.4 0.5 0 10 20 30 40 50 60CRT Poisoning (%)Time (min) 0 5 10 15 20 25 30Malicious Presence (%)No RedundancyRedundancy=16BaselineFigure5.ConsRTpoisoningwithoutredun-dantroutingandwith16-pathredundancy.(a)TimegraphofConsRTpoisoningfor15%maliciouspresence.(b)Steady-stateCon-sRTpoisoningfordifferentmaliciouspres-encelevels.fenseskeepthepoisoningofoptimizedroutingtablestothefractionofadversarialnodesinthepopulation.Sincewecannotdistinguishbetweengoodandbadnodes,thisbase-linepoisoningisunavoidable.OurperformancemeasurementscompareMaelstromtoBamboointheabsenceofmaliciousnodes.Sinceourrouting-tablemaintenanceisperiodic,ratherthanreactive,theassociatedoverheadsdonotchangewhenmaliciousnodesareintroducedinthesystem.PoisoningresistancemeasurementsevaluateMaelstromunderattack.Weevaluateourdesignusinganalgorithmicsimulator,andafullimplementationonanemulatednetwork.Theal-gorithmicsimulatorisround-based(aroundisatimestepoftherandomnessserver),modelsallthefeaturesofBam-boowithinducedchurn,butelidescommunicationasyn-chronyandnetworkcongestion.Ineachround,everynodeperformsmaintenanceoperationssuchasevictionofitsstalerouting-tableentries,periodicupdatelookupswhenitstimersexpire,andinducedchurnwhenitsepochends.Atthislevelofabstraction,wecanexperimentwithlargernodepopulations(upto50,000nodes).OurfullMaelstromimplementationontopofBamboorunsonanemulatednet-workthatmodelsnetworkconditionsfaithfully,butelidesnetworkcongestion.Weusethismoredetailedexperimen-talplatformtovalidatetheresultsfromthealgorithmicsim-ulator(albeitforsmallerpopulationsof500nodes)andtoevaluatetheperformanceofMaelstrom.Forbothsystems,weuseanetworktopologybasedontheextendedKingdataset[15],acommonlyusedrealistictopologyofawidevarietyofInternethosts.Weusethedefaultvalues[23]forBamboosystemparameters:theleaf-setsizeis32withaleaf-setupdateintervalof10sec;theOptRTisupdatedevery30secandkeep-alivepingsaresenttoallneighborsevery30sec.IntermsofMaelstrom,nodesformG=256churngroups.Forallexperiments,wesetthe 0 0.2 0.4 0.6 0.8 1 0 10 20 30 40 50 60Routing Table PoisoningTime (min)(a) 8 min epoch 0 10 20 30 40 50 60Time (min)(b) 16 min epoch 0 10 20 30 40 50 60Time (min)(c) 16 min epochno shielding 0 10 20 30 40 50 60Time (min)(d) 32 min epoch 0 10 20 30 40 50 60Time (min)(e) BambooFigure6.Routing-tablepoisoningvs.Timefor15%maliciousfraction.randomnessservicetimestepdurationtobeT/G,whereTistheepochlength.Thethreatmodelimplementedinourattacksimulationsisstructuredaroundasetofcolludingmaliciousnodescon-spiringtomaximizetherouting-tablepoisoningintheentirepopulation.Maliciousnodeshijackallroutingstateupdatemessagesthatarriveatthemorpassthroughthem,respond-ingwithreferencestonodesfromtheirmaliciouscollective.Wegivetheadversaryfullknowledgeofeverygoodnode’sroutingstate,toapproximateanadversarythathasusedtraf-ﬁcanalysistoinfersuchstate.Asaresult,theadversarycangiveresponsestolookupsthatwillhavethegreatestimpactonagivenvictim’sroutingtable.Furthermore,whenfacedwithmultiplenodecandidatesforanentry,goodnodesal-wayschoosetheadversary’scandidate,toapproximateanadversarywhocansuccessfullyfoolvictimsaboutitsnet-workmeasurements(Section2.2).Wediscussourchoiceofthreatmodel,aswellasalternativeweakermodelsinSec-tion5.4.1.RoutingstatepoisoningToevaluateMaelstrom’sresistancetopoisoning,weﬁrststudytheresistancetopoisoningoftheConsRTunderin-ducedchurn,sincetheConsRTformsthebaselineofthe“sawtooth”behaviorwehopetoinstillinthesystem(Fig-ure3).ThenweevaluatetheabilityoftheOptRTtoresistpoisoningandtoperformsuccessfullookups.Weusethealgorithmicsimulatorwith50,000nodesun-derattack.Figure5(a)showsConsRTpoisoningvs.timewith15%maliciousnodesinthepopulation.Figure5(b)showsthesteady-stateConsRTpoisoningforvaryingfrac-tionsofmaliciouspresenceinthepopulation.Bothgraphsshowexperimentswithandwithout16-wayredundantrout-ing.Weseethatpoisoningremainsclosertothefractionofmaliciouspopulationwithredundancy;e.g.,with15%mali-ciouspopulation,steady-statepoisoninghoversaround16%with16-wayredundancy,andaround20%without.Thisisnotsurprising,sincegreaterredundancyensuresahigherprobabilityofsuccessfullookuprouting,whichmeansagreaterlikelihoodthatanodeupdatingitsConsRTwillre-ceivearesponsefromthecorrectnodeitisprobing.WenowturntotheOptRTitself,measuringitspoison-inglevelsasafunctionofmaliciouspresenceandepochlength.Weusethesameexperimentalsetupasabove,with50,000nodesoutofwhich15%aremalicious.Figures6(a),(b),and(d)showtheaverageOptRTpoisoningwithtimefornodesbelongingtoasinglechurngroupinMaelstrom,forepochlengthsof8,16,and32minutes.Weisolateasinglechurngrouptoshowhowpoisoninglevelsareaf-fectedbynon-staggeredinducedchurn.Dipsinthegraphindicatethegroup’sepochboundaries,wherenodesinthechurngroupresettheirOptRTtotheirConsRTnext(Sec-tion3).LongerepochlengthsallowtheOptRTpoisoningtoincrease.ThismatcheswelltheintuitionillustratedinFig-ure3.Incontrast,Bamboo(Figure6(e))poisoningcontin-uouslyincreasesuntilahighsaturationpointaround80%,morethan5timesthebaselinemaliciouspresenceof15%.Toseparateoutthebeneﬁtsobtainedthroughrowshield-ingalone,weplotinFigure6(c)oneinstanceofthetimegraphs(for16-minepochs)withoutrowshielding.Theslopeofthe“sawtooth”patterninthisﬁgurematchesBam-boomoreclosely,andiscertainlysteeperthantheequiva-lentscenariowithrowshielding,inFigure6(b).Figure7(a)suppliesabroaderviewofthesystem’sbehavior,overvaryingmaliciouspresenceinthepopula-tion,lookingattheaverageOptRTpoisoningoverallgoodnodes(notjustasinglechurngroupasabove).Bambooyieldsgreatpoisoningampliﬁcationtotheadversary,espe-ciallyatlowmaliciousfractions,whileMaelstrommain-tainspoisoningclosetothebaseline.Speciﬁcally,forupto5%maliciousnodes,Bamboosuffersfrombetween6and46timesgreaterpoisoningthanMaelstrom,dependingonepochlength.Asabove,thelevelofpoisoninginMaelstromgrowsastheepochlengthincreases,sincetheadversarycanthenincreaseherfootholdinthegoodnodes’routingtablesforlongertimeperiods.Figure7(b)showstheactualprobabilitythatalookupovertheOptRTwillreachitsdestination–asopposedtobe- 0 0.2 0.4 0.6 0.8 1252015105PRT PoisoningMalicious presence (%)(a)8 min16 min32 minBamboo 0 0.2 0.4 0.6 0.8 1252015105Prob. of Successful RoutingMalicious presence (%)(b)Bamboo: No redun.Bamboo: Redun. 16Maelstrom: No redun.Maelstrom: Redun. 16Figure7.OptRTsecuritycharacteristicsvs.maliciouspresenceinthepopulation.(a)Routing-tablepoisoningfordifferentMael-stromepochlengthsandforBamboo.(b)ProbabilityofsuccessfullookupdeliveryfordifferentredundancylevelsforBambooandMaelstrom.inginterceptedandabusedbytheadversary–foranepochlengthof16mins.MaelstromdoesbetterthanBambooinallcases.Thedifferenceismorepronouncedforlowma-liciouspresence;asmaliciouspresenceincreases,evenifpoisoningdoesnotincreasefromitsbaseline,itcanhinderlookupsduetotheirmulti-hopnature.Toseparateoutthecontributionsofinducedchurnfromredundantrouting,Figure7(b)alsoplotssuccessfullookupswhentheyareperformedredundantlyovertheOptRTaswell.At16-wayredundancy,Bamboosuccessdropsrapidlyasmaliciouspresencetops5%,whereasMaelstromman-agesnicely,stayingbarelybelow100%successforlowma-liciouspresenceandachievingover80%successevenwhenmaliciouspresencereaches25%.Thisreinforcesourearlierpoint:withoutperiodicresetsoftheoptimizedroutingta-ble,evenredundancycannotsavelookupsfromadversarialtampering.4.2.PerformanceInthissectionwemeasuretheperformanceoverheadofinducedchurnonMaelstrom.Weconducttheexperimentsintheabsenceofattacks,sinceMaelstromisaproactivesystemthatdoesnotchangemodeofoperationinreactiontoattackevidence.Figure8collectsperformancemeasurementsfor3-hour(simulatedtime)runsofMaelstromandBambooinalgo-rithmicsimulationandonanemulatednetwork.Figure8(a)showstheaveragenetworklatencyforsuccessfullookupsinasimulatedpopulationof50,000nodes.Latencyin-creasesasepochlengthdecreases,sinceroutingstateop-timizationshavelesstimetocompletebeforeatablereset.Bamboocompletesthoseoptimizationsandconsequentlyexhibitsthebest(lowest)latency.Figures8(b),(c),and(d)compareper-nodeaver-agemaintenancebandwidthundersimulationwith50,000nodes,500nodes,andonanemulatednetworkof500nodesrespectively.Measurementsincludebandwidthin-curredbymaintaining,pingingforliveness,andupdatingthreeroutingtablesinMaelstrom,ratherthanthesingleroutingtableinBamboo.Largerpopulationsﬁllupnodes’routingtablesmore,sotheper-nodebandwidthoverheadduetoperiodicnodepingsandrouting-tableupdatesin-creases.Furthermore,shorterepochlengthsincurmorefre-quentrepopulationsofConsRTnextfromscratch,increas-ingbandwidthconsumption.Thetrendsinsimulationandonemulationaresimilar.However,thealgorithmicsimula-tortendstooverestimatemaintenancecostsslightly,sinceitdoesnotmodeloptimizationssuchassuppressinglive-nesspingswhenothertrafﬁcisobserved,whicharepresentintheactualimplementation.Nevertheless,evenforshortepochsandlargepopulations,Maelstrom’sbandwidthre-quirementsarewellbelowthetoleranceofevenhomeusersbehinddial-upmodems.Figure8(e)showstheaveragenumberofneighborsfordifferentepochlengthsonthefullimplementationattheendofthe3-hourexperiment.Thisgraphalsodemonstrateshowinducedchurncancutneighbordiscoveryshort,aswellaspoisoning,whichcanpotentiallyincreaselatenciesbutmoderatesbandwidthincreases.Weconcludebyexaminingtherandomnessserver.Ifeverynodeinachurngroupcontactstheserverindivid-ually,theserver’saccesslinkmustsustainastreamof(Population/EpochLength)certiﬁcates.50,000nodeswitha2-minuteepochwouldincuratotalofabout0.5Mbpsfor1-KByterandomnesscertiﬁcates,whichistrivialforevenmoderateservices.Allrequestsconcernthesamefewcer-tiﬁcatesatanytime,servedfrommainmemory,sotheloadofabout400requestspersecondiswellbelowtypicallimitsofoff-the-shelfwebservers.Furthermore,inpracticenodesinachurngroupcandisseminatearandomnesscertiﬁcateamongstthemselves,reducingbothoverheadsontheserverevenmore.Finally,with256churngroups,theservermustcomputetwonewcertiﬁcatespersecond;evenwith2048-bitsigningkeys,thisiswellwithinthecapabilitiesofcom-modityprocessors.5.DiscussionWenowturntothechallengesfacingMaelstromonitspathfromresearchprototypetoreal-worlddeployment. 0 100 200 300 400 500Bamb.643216842Latency (msec)Epoch Length (mins)(a) 0 500 1000 1500 2000 2500 3000 3500 4000 4500Bamb.643216842Bandwidth (bytes/sec)Epoch Length (mins)(b) 0 100 200 300 400 500 600 700 800 900Bamb.643216842Bandwidth (bytes/sec)Epoch Length (mins)(c) 0 100 200 300 400 500 600 700 800 900Bamb.643216842Bandwidth (bytes/sec)Epoch Length (mins)(d) 0 5 10 15 20 25 30 35 40Bamb.643216842Average NeighborsEpoch Length (mins)(e)Figure8.Performancemeasurementsasafunctionofepochlength,comparedtoBamboo.(a)Lookuplatencyfromalgorithmicsimulator(50,000nodes);(b)&(c)Maintenancebandwidthfromthealgorithmicsimulator,50,000and500nodesrespectively;(d)Maintenancebandwidthfromtheimplementation(500nodes);and(e)Averagenumberofneighborspernodefromtheimplementation(500nodes).5.1.TheRandomnessServiceOurdesignincludesasourceoftrusted,timedrandom-nesstoensuretheunpredictabilityofnodeidentiﬁers.Thissourceofrandomnesscouldalsohelpwithloadbalancing,topologyformation,leaderelection,auctions,etc.Mael-stromimplementsthisfunctionalityasacentral,globallytrustedservice.Comparedtootherapproachestotheprob-lemofsecureroutingthatrelyoncertiﬁcationauthorities,acentralrandomnessserverissimplertoimplement,toprovecorrect,andtoaudit;however,therandomnessser-vicemakestheoverlaymorereliantonserviceavailability,sinceiteffectively“clocks”overlayprogress.Furthermore,centralizedcomponentsofeithertypecanraisetrustandreliabilityconcerns.InthecontextoftheMaelstromran-domnessservice,wecanalleviatesomeoftheseconcernsviaaccountability,replication,andredundancy.First,tomaketheservicemoreaccountable,wecanpro-videitsuserswithassurancesthatissuedrandomnumbersareunpredictabletoallpartieswithingivenbounds.Userscouldperiodicallyperturbtheservicepseudo-randomnum-bergeneratorbysubmittingtoitnewseedsthatareincorpo-ratedinsubsequentnumbergeneration.Similartechniqueshavebeenusedinveriﬁablesecretsharing[21],toensurethatnoparticipantintheprotocolcanbiascollectivelycom-putedrandomnumbers.Second,replicationcanimproveavailability,e.g.,fortimeswhenarandomnessserverisunreachablebycertainclients.Replicasoftherandomnessserverneedonlyshareasecretseedfortheirpseudo-randomfunctions,andbelooselytime-synchronized.Bothrequirementsareeasytomeet,especiallycomparedtotheburdenofreplicatingthemorecomplexcentralliveidentitycertiﬁcationauthorities,whosestatechangesandmustbepropagatedtoreplicasasidentitiesareissuedorrevoked.Third,redundancycannarrowtheneedforglobaltrust.Withredundancy,therearemultiple,independentrandom-nessservers,eachdistributingitsownseparaterandomnesssource.OverlaynodescomputetheirIDsbyhashingto-getherrandomnumbersfromallormanyservers.VeriﬁerscanvalidateIDscomputedfromthosesourcesofrandom-nessthattheytrust,ignoringothers;aslongasatleastonerandomnessserverittrustshasbeenusedinanIDcom-putation,avalidatorcanacceptthatoverlayID.Suchap-proacheshavebeenusedbeforeforhighlyavailabletimestampingservices[2].Infuturework,wehopetocombineallthreetechniqueswithtimelineentanglement[20]todistributethefunctional-ityoftherandomnessservicecompletely,whenabsolutelynosharedserverscanbetolerated.5.2.AdversaryBestiaryOuradversarymodeliscomprisedofaconspiracyofma-liciousnodesthatcolludetopoisontheroutingtablesofallthegoodnodesintheoverlay.Althoughan“attackevery-one”threatmodelisanimportantone,thereareothermoredirectedthreatmodelsthatmayalsobeinteresting,whichweonlybrieﬂymentionduetospacelimitations.Insteadofeveryone,theadversarycouldattackaparticularkey(tocripplearesource)oraparticularnode(tocrippleaserviceoperator),asadestination(tointerceptincomingrequests)orasasourceoftrafﬁc(toproducespamortohijacknor-malresponses).Thoughmorelimitedinscope,suchattackscouldallowaweakeradversarytoconcentrateherresourcesonaspeciﬁctarget.Oneaspectoftheadversarythatwehavenotincludedinouranalysisanddesignishercapacityforincreasingherpresenceinthesystem,forexampleviaSybilidentities,whichareforgedorotherwisespoofedidentities.Byimpos-inga3-wayhandshakeoneveryIP-levelsession,weensurethatanode’sIPaddressisalegitimateone,oronethatthenodecanspoofeasily(e.g.,withina/24network).Theuseofa3-wayhandshake,however,onlyrestrictsanodetoas-suminganIPaddressthatitcanspoofeasily.InMaelstrom,wehaveexploredtheenforcementofIPaddressdiversity,bywhichnodeslimitthenumberofrepresentativesfromeachsucheasy-to-spoofaddresssetintheirroutingtables.Diversityenforcementsuccessfullythwartsspooﬁngadver-sariesfromamplifyingtheirpoisoningpotential.Howeveritalsopenalizesoverlayparticipantsfromlargeorganiza-tions(e.g.,studentcomputersatalargeuniversity);whileanoverlaycanaccommodatenodesfromsuchnon-diverseaddressspaces,itcannotreachitsfullyoptimizedconnec-tivity,whichwouldbepossiblewithauniformaddressdis-tribution.5.3.UtilityMaelstromoffersatrade-offbetweentheperformancecostsandthesecuritybeneﬁtsoftheoverlay(refertoFig-ure8).Theperformancecostdependsonlookuplatencyduetosub-optimalrouting,andmaintenancebandwidthduetoperiodic,unpredictablechurn.Therecanalsobeassoci-atedapplicationcostsif,forexample,theoverlayisusedasadistributedhashtabletostoredata;theninducedchurnincursabandwidthcostduetodatamigration.Theepochlengthallowsthesystemtobetunedaccordingtotherela-tiveutilityassignedtoperformanceandsecuritybytheap-plicationusingtheoverlay.Ononehand,fordistributedﬁlesystemsanddatabasesthecostofmigratingdataacrossnodescouldbehigh,andinducedchurnmaybeinappropri-ate.Ontheotherhand,formonitoring,queryprocessing,orcontentdistribution,thecostisconsiderablylowersincesmaller,fewer,orexpendabledataitemsareinvolved,andhighperiodicchurncanbesustainedtoprovidegreaterre-sistancetopoisoning.Alongadifferentaxis,forsomeapplicationsthequalityoftheaverage-casestateofgoodnodes’routingtablesislessimportantthanavoidingtheworstcase.Forinstance,inapreservationapplicationsuchasPAST[26],contentisnotrefreshedbyitspublisherintotherepository.Instead,itisinsertedonceandthenmigratedamongreplicasasthesystemchurns.Insuchanapplication,arrivingeveratasystemstateinwhichallreplicasofagivendocumentarecontrolledbytheadversaryisdetrimental,sinceitgivestheadversarytheopportunitytotamperwiththedocumentper-manently.Reducingchurnthenisanabsolutegoal,sinceitreducesthelikelihoodofeverachievingsuchaworst-casestate.Inducedchurnisinappropriateforsuchapplications.Contrastthistothecommoncaseofmonitoring,reposi-tories,andcommunicationoverlayapplications,whichre-quireclientstorefreshstoredcontentperiodically.Insuchapplications,itismoreimportanttoreducetheaverage-caserouting-tablepoisoning,sincethismeasuredetermineswhetherclientscanreachthedesiredcontentornot,andhasnobearingonthecontent’seventualsurvival.Inducedchurnisappropriateinsuchsettingsand,inadversarialen-vironments,itisindispensable.5.4.MigratingdataTocontinuetobeuseful,Maelstrommustensurethatthedatainsertedremainavailabletoclients.Anobvioussolu-tiontotheproblemistoreplicatedataamongstsomesetofnodes(usuallyasubsetoftheleafsetcalledthereplicaset)asdiscussedbyRheaetal[22].Inthiscase,everyputunderakeykwouldcontactthenodesinthereplicasetandreturnsuccessonlyiftheputsucceedsonaquorumofthereplicaset.Anygetwouldthencontactthereplicasetandreadvaluesfromaquorum.Bychoosingthesequoraappropri-ately,wecanensurethatapplicationscanretrievethemostup-to-datedata.However,thepresenceofinducedchurnimpliesthatnodesfailperiodically.Itisquitepossiblethatallthenodesinthereplicasetmaychurnbeforehandingdataovertoanyofthe“nearby”nodes.Tohandlethiscase,wecanhaveeachnodemaintainpointerstoits“ancestors”–thesetofnodesthatpreviouslyownedthekeysthatthenodecurrentlyowns.Anylookuponkeysthathaveavalid“ancestor”isreroutedtotheancestor.Nodesperiodicallysynchronizewiththeirancestorsandremovetheassociationbetweenancestorsandakeyforeachsynchronizedkey.5.5.RelianceonIPaddressesAquestionmayariseabouttherelianceofMaelstromforitsbeneﬁtsoncurrentIPaddressing.Forinstance,howeasilywouldourdesigncarryovertoIPv6,givenitslargeraddressspace?Maelstromreliesforitsprotectionagainsteclipseat-tacksontherebeingahierarchicalstructureinIPaddresses,wherebyhigher-orderbitsareﬁxedperorganization,andassignedcentrally(currentlybytheIANA),whereaslower-orderbitsareassignedtoendhostsbytheorganizationit-self.Suchhigher-orderbitsareusedtochoosechurngroupsinamannerthatcannotbebiasedbytheadversary.Inthatsense,wehavetermedhigher-orderbits“unspoofable”(Section3.5.1):amaliciousendhostcannotchangethoseaddressbitsintrafﬁcitoriginatesandstillparticipateinar-bitrarytwo-wayIPexchangeswithoutcollusionfromtheInternet’sgoverningagencies.Totheextentthatthisre-quirementholdswithIPv6addresses,Maelstromiscom-patiblewiththenewerIPprotocol.Note,however,thatthedeﬁnitionofhowmanyhigh-orderaddressbitsmakeupthe“unspoofable”partofanaddresswouldhavetoadapttocurrentaddressingpolicies.Similarly,MaelstrommayrelyonIPaddressstructuretocombatSybilattackers,thatis,adversarieswhocreatemanyIPaddresseswiththelow-orderaddressbitswithintheiror-ganizations,hopingtoswaythebalanceofadversarialpres-enceintheoverlay.AsdescribedinSection5.2,diversityenforcementmayhelp.Again,thenumberofhigh-orderbitsthatdeﬁneequivalenceclassesamongnodesforthepur-posesofdiversityenforcementmustmatchthedeploymentpoliciesofthecurrentIPprotocol.ForIPv4,enforcingdi-versitywithinaroutingtableamongthe24high-orderbitsappearssufﬁcient.6.RelatedWorkSecurityanalysisofstructuredoverlaysandotherpeer-to-peersystemshaverecentlyappearedintheliterature[12,29,32],recognizingrouting-tablepoisoningasaseriousthreat.Castroetal.[7]proposedtheﬁrstcomprehensivesolutiontotheprobleminthecontextofPastry[25].Theirproposalreliedonacentralcertiﬁcationauthorityissuingrate-limitedIDcertiﬁcates,ondualroutingtables(oneforoptimizedandoneforsecurerouting),andonroutingfail-uredetectors.Singhetal.[28]extendedthisworktohandleeclipseattacksingeneraloverlays(structuredandunstruc-tured)byenforcinglowin-andout-degreeofverticesintheoverlaygraphviaanonymousauditing.Lowin-andout-degreesmeanthatmaliciousnodescannotinsertthem-selvestoarbitrarilymanygoodnodes’routingtables.ThesetwoapproachesmakeheavyuseofanIDcertiﬁcationau-thority.Thoughperfectlyreasonableforinstanceinenter-priseenvironmentsenjoyingwidetrust,suchpowerfulandcomplexgloballytrustedcomponentsarehardertojustifyinmoreopensettings.Maelstromisinspiredbythistrail-blazingwork,butseekstorelaxtherelianceonapowerfulandcomplexcentralentity.ComparedtoanIDcertiﬁcationauthoritythatveriﬁes“real-world”credentials,issuesrate-limitedIDcertiﬁcates,andmonitorsanddistributesrevoca-tions,ourtimedrandomnessserviceisasimplercomponentthatcanbemoreeasilyprovedcorrect,debugged,audited,anddistributed.RecentworkbyAwerbuchandScheideler[3,27]sharesmanyoftheintuitionsbehindMaelstromandevenprovessomeofthemundercertainassumptions.Theauthors’de-signsuseveriﬁablesecretsharingtoallowgroupsofnodestogeneraterandomidentiﬁersfornewcomers,andtoen-forcelimitedidentiﬁerlifetimes.Theapproachthoughverycomplexandasyetunimplementedtoourknowledge,isprovedrobustwhenadversarialnodesandgoodnodesarelimitedintheirjoinanddepartureratesfromtheoverlay.Incontrast,Maelstromenforcesthisratelimitationinthepro-tocolitselfandoff-loadsthetaskofrandomnumbergener-ationtoasharedservice.Furthermore,itconcentratesonextendingimplementedstructuredoverlays,givingprioritytoretainingtheoptimizationsthatmaketheseoverlaysprac-tical.Wehaveyettoformallyprovetherobustnessofourtechniques,butoursimplerdesignhasallowedustoim-plementthemandevaluatethemexperimentallyforsomeadversaries.Ourbasictechniqueshavebeenusedbeforeindiffer-entcontexts:rate-limitedrouting-tableupdatestoeaseloadspikesunderchurn[23],increasedunpredictabilitytothwartadversarialbehaviorthatreliesonpredictability[16],andperiodicresetstorejuvenateadegradingsystem[6,8].7.ConclusionInthiswork,wehavemotivated,designed,andex-perimentallyevaluatedinducedchurn,adefenseagainstrouting-tablepoisoninginstructuredoverlays.Inducedchurncombinesperiodicrouting-tablereset,unpredictableidentiﬁers,andrate-limitedupdatestoprotectsuchoverlaysfromadversarieswhowishtoinﬂatetheirpresenceingoodnodes’routingtablesbeyondwhattheirpresenceinthepop-ulationasawholewouldjustify.Wehavedemonstratedin-ducedchurnbyimplementingMaelstrom,anextensiontoarealdistributedhashtableinwideusetoday[23].Weshowthatinducedchurncanthwartadversarieswhocouldother-wiseinterceptalmostalllookups,evenwithaverylimitedpresence.Yet,itretainsmanyofthebeneﬁtsofoptimizedstructuredoverlays,makingtunablethetrade-offbetweenresistancetopoisoningandefﬁcientrouting.Infuturework,wehopetounderstandbetterthestrengthsandlimitationsofinducedchurninrealisticadver-sarialenvironmentsthroughexperimentationinrealdeploy-ments,andthroughfurtheranalysis.Today,Bambooformsthebasisforanumberofresearchandproductionprojectsdeployedinthewild,includingOpenDHT[24],asharedinfrastructureforDHT-basedapplications.Wehopetoas-sistthemaintainersofOpenDHTwiththedeploymentoftheMaelstromextensions,soastoinvestigatehowinducedchurnbehaves,evenwhendatamigrationisnecessary.Finally,webelievethattheneedforcommonsourcesofunpredictabilityisbecomingincreasinglyimportantinlooselycoupleddistributedsystems.Wehopetostudyfur-therdesignsproposedintheliterature,orthoseproposedhere,foramassivelyreplicatedorfully-distributedtimedrandomnessservice,hopingtoprovidearandomnessdialtonethatcanhelpsafeguarddistributedsystemsintheevermoredangerousinternetworkstheyoccupy.8.AcknowledgmentsWewouldliketothankSeanRheaforhisinvaluablehelpinextendingBamboowiththeMaelstromextensions,DavidWagnerforhisthoughtfulcommentsonearlierversionsofthispaper,ourshepherdDanWallach,andtheanonymousreviewersfortheirfeedback.TysonCondieandJoeHeller-steinarepartiallysupportedbyNSFgrants(contractnum-bers0209108and0225660),andbyagiftfromMicrosoftCorporation.References[1]D.Andersen,H.Balakrishnan,F.Kaashoek,andR.Morris.ResilientOverlayNetworks.InProceedingsoftheEigh-teenthACMSymposiumonOperatingSystemsPrinciples(SOSP),pages131–145,ChateauLakeLouise,Banff,AB,Canada,Oct.2001.[2]A.Ansper,A.Buldas,M.Saarepera,andJ.Willemson.ImprovingtheAvailabilityofTime-StampingServices.InProccedingsofthe6thAustralasianConferenceonInfor-mationandPrivacy(ACISP),pages360–375,Sydney,Aus-tralia,July2001.[3]B.AwerbuchandC.Scheideler.GroupSpreading:Apro-tocolforprovablysecuredistributednameservice.InPro-ceedingsofthe31stInternationalColloquiumonAutomata,Languages,andProgramming(ICALP),pages183–195,Turku,Finland,July2004.[4]A.R.Bharambe,M.Agrawal,andS.Seshan.Mercury:SupportingScalableMulti-AttributeRangeQueries.InPro-ceedingsoftheConferenceonApplications,Technologies,Architectures,andProtocolsforComputerCommunications(SIGCOMM),pages353–366,Portland,OR,USA,Sept.2004.[5]C.Cachin,K.Kursawe,andV.Shoup.RandomOra-clesinConstantinople:PracticalAsynchronousByzantineAgreementusingCryptography.InProceedingsofthe19thACMSymposiumonPrinciplesofDistributedComputing(PODC),pages123–132,Portland,OR,USA,July2000.[6]G.Candea,S.Kawamoto,Y.Fujiki,G.Friedman,andA.Fox.Microreboot–ATechniqueforCheapRecovery.InProceedingsofthe6thSymposiumonOperatingSystemsDesignandImplementation(OSDI),pages31–44,SanFran-cisco,CA,USA,Dec.2004.[7]M.Castro,P.Druschel,A.Ganesh,A.Rowstron,andD.S.Wallach.SecureRoutingforStructuredPeer-to-PeerOver-layNetworks.InProceedingsofthe5thUsenixSymposiumonOperatingSystemsDesignandImplementation(OSDI),pages299–314,Boston,MA,USA,Dec.2002.[8]M.CastroandB.Liskov.ProactiveRecoveryinaByzantine-Fault-TolerantSystem.InProceedingsofthe4thSymposiumonOperatingSystemsDesignandImplementa-tion(OSDI),pages273–288,SanDiego,CA,USA,Oct.2000.[9]T.Condie,V.Kacholia,S.Sankararaman,P.Maniatis,andJ.M.Hellerstein.Maelstrom:Churnasshelter.TechnicalReportUCB/EECS-2005-11,EECSDepartment,UniversityofCalifornia,Berkeley,CA,USA,Nov.2005.[10]F.Dabek,M.F.Kaashoek,D.Karger,R.Morris,andI.Sto-ica.Wide-areacooperativestoragewithCFS.InPro-ceedingsoftheEighteenthACMSymposiumonOperatingSystemsPrinciples(SOSP),pages202–215,ChateauLakeLouise,Banff,AB,Canada,Oct.2001.[11]D.Davis.ComplianceDefectsinPublic-KeyCryptogra-phy.InProceedingsofthe6thUSENIXSecuritySymposium,pages171–178,SanJose,CA,USA,July1996.[12]J.Douceur.TheSybilAttack.InProceedingsofthe1stInternationalWorkshoponPeer-to-PeerSystems(IPTPS),pages251–260,Boston,MA,USA,Mar.2002.[13]M.J.Freedman,E.Freudenthal,andD.Mazi`eres.Democ-ratizingcontentpublicationwithcoral.InProceedingsofthe1stSymposiumonNetworkedSystemsDesignandIm-plementation(NSDI),pages239–252,SanFrancisco,CA,USA,Mar.2004.[14]K.Gummadi,R.Gummadi,S.Gribble,S.Ratnasamy,S.Shenker,andI.Stoica.TheImpactofDHTRoutingGeometryonResilienceandProximity.InProceedingsoftheconferenceonApplications,technologies,architectures,andprotocolsforcomputercommunications(SIGCOMM),pages381–394,Karlsruhe,Germany,Aug.2003.[15]K.P.Gummadi,S.Saroiu,andS.D.Gribble.King:es-timatinglatencybetweenarbitraryinternetendhosts.InProceedingsofthe2ndACMSIGCOMMWorkshoponIn-ternetmeasurment(IMW),pages5–18,Marseille,France,Nov.2002.[16]G.S.Kc,A.D.Keromytis,andV.Prevelakis.Counteringcode-injectionattackswithinstruction-setrandomization.InProceedingsofthe10thACMconferenceonComputerandcommunicationssecurity(CCS),pages272–280,Washing-tonD.C.,USA,Oct.2003.[17]A.LaMarca,Y.Chawathe,S.Consolvo,J.Hightower,I.Smith,J.Scott,T.Sohn,J.Howard,J.Hughes,F.Potter,J.Tabert,P.Powledge,G.Borriello,andB.Schilit.Placelab:Devicepositioningusingradiobeaconsinthewild.InProceedingsoftheInternationalConferenceonPervasiveComputing,pages116–133,Munich,Germany,May2005.[18]D.Liben-Nowell,H.Balakrishnan,andD.Karger.Ob-servationsontheDynamicEvolutionofPeer-to-peerNet-works.In1stInternationalWorkshoponPeer-to-PeerSys-tems(IPTPS),pages22–33,Cambridge,MA,USA,Mar.2002.[19]B.T.Loo,R.Huebsch,J.M.Hellerstein,S.Shenker,andI.Stoica.EnhancingP2PFile-SharingwithanInternet-ScaleQueryProcessor.InProceedingsofthe30thInternationalConferenceonVeryLargeDataBases(VLDB),pages432–443,Toronto,ON,Canada,Aug.2004.[20]P.ManiatisandM.Baker.SecureHistoryPreservationThroughTimelineEntanglement.InProceedingsofthe11thUSENIXSecuritySymposium,pages297–312,SanFran-cisco,CA,USA,Aug.2002.[21]T.P.Pedersen.Non-InteractiveandInformation-TheoreticSecureVeriﬁableSecretSharing.InJ.Feigenbaum,editor,AdvancesonCryptology(CRYPTO),volume576ofLectureNotesinComputerScience,pages129–140,Aug.1991.[22]S.Rhea,Byung-GonChun,J.Kubiatowicz,andS.Shenker.FixingtheEmbarrassingSlownessofOpenDHTonPlanet-Lab.InProceedingsofthe2ndWorkshoponReal,LargeDistributedSystems(WORLDS),SanFrancisco,CA,USA,Dec.2005.[23]S.Rhea,D.Geels,T.Roscoe,andJ.Kubiatowicz.HandlingChurninaDHT.InProceedingsoftheUsenixAnnualTech-nicalConference,pages127–140,Boston,MA,USA,June2004.[24]S.Rhea,B.Godfrey,B.Karp,J.Kubiatowicz,S.Ratnasamy,S.Shenker,I.Stoica,andH.Yu.OpenDHT:APublicDHTServiceandItsUses.InProceedingsoftheconferenceonApplications,technologies,architectures,andprotocolsforcomputercommunications(SIGCOMM),pages73–84,Philadelphia,PA,USA,Aug.2005.[25]A.RowstronandP.Druschel.Pastry:Scalable,distributedobjectlocationandroutingforlarge-scalepeer-to-peersys-tems.InIFIP/ACMInternationalConferenceonDistributedSystemsPlatforms(Middleware),pages329–350,Heidel-berg,Germany,Nov.2001.[26]A.RowstronandP.Druschel.StoragemanagementandcachinginPAST,alarge-scale,persistentpeer-to-peerstor-ageutility.InProceedingsoftheEighteenthACMSympo-siumonOperatingSystemsPrinciples(SOSP),pages188–201,ChateauLakeLouise,Banff,AB,Canada,Oct.2001.[27]C.Scheideler.Howtospreadadversarialnodes?Rotate!InProceedingsofthethirty-seventhannualACMsymposiumonTheoryofcomputing(STOC),pages704–713,Baltimore,MD,USA,May2005.[28]A.Singh,M.Castro,P.Druschel,andA.Rowstron.Defend-ingagainstEclipseattacksonoverlaynetworks.InProceed-ingsofthe11thACMSIGOPSEuropeanWorkshop,pages115–120,Leuven,Belgium,Sept.2004.[29]E.SitandR.Morris.SecurityConsiderationsforPeer-to-PeerDistributedHashTables.InProceedingsoftheFirstIn-ternationalPeerToPeerSystemsWorkshop(IPTPS),pages261–269,Cambridge,MA,USA,Mar.2002.[30]I.Stoica,R.Morris,D.Liben-Nowell,D.R.Karger,M.F.Kaashoek,F.Dabek,andH.Balakrishnan.Chord:ascal-ablepeer-to-peerlookupprotocolforinternetapplications.IEEE/ACMTransactionsonNetworks,11(1):17–32,2003.[31]J.Stribling,I.G.Councill,J.Li,M.F.Kaashoek,D.R.Karger,R.Morris,andS.Shenker.OverCite:ACooper-ativeDigitalResearchLibrary.InProceedingsofthe4thInternationalWorkshoponPeer-to-PeerSystems(IPTPS),pages69–79,Ithaca,NY,USA,Feb.2005.[32]D.Wallach.ASurveyofPeer-to-PeerSecurityIssues.InIn-ternationalSymposiumonSoftwareSecurity,Tokyo,Japan,Nov.2002.