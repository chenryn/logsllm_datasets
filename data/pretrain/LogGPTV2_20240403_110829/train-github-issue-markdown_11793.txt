It seems that provided code example leaks memory on numpy 1.16.0. This can be
observed via top or htop while the program executes. The same code with numpy
1.15.4 has stable memory footprint. I couldn't isolate the problem without
multiprocessing.
I've reproduced the same behavior on Ubuntu and MAC OSX on python versions
3.6.5_1, 3.6.8, 3.7.2.
    import numpy as np
    from multiprocessing import Pool, get_context
    def f(x):
        return x + 2
    a = map(lambda x: np.array([]), range(int(10e6)))
    if __name__ == '__main__':
        print("Numpy version: ", np.version.version)
        with Pool(4) as pool:
            k = pool.imap_unordered(f, iter(a))
            for i in k:
                pass