 0.2
Training Traces: 5
Training Traces: 10
Training Traces: 15
 0
 0.6
 0.65
 0.7
 0.75
 0.9
 0.8
 0.95
 0.85
Precision
Fig. 18: Precision and recall of smartphones without any stimulation
 0.65
 0.75
 0.6
 0.7
 1
 0.85
 0.8
Recall
 0
 0.9
 0.95
 1
has been extensively studied to identify wireless transmitters
and can be divided into two categories: channel-based and
device-based. Channel-based methods estimate the channel
impulse response that characterizes multipath effect [51] and
attenuation [29], [70] between a transmitter and a receiver
for RF ﬁngerprinting. Device-based methods rely on the
distinct radiometrics of transmitters at the waveform [33]–
[35], [41], [57], [63] or modulation [64] levels. Wired
Ethernet NICs can also be identiﬁed by analyzing their
analog signals [55].
Our work is inspired by the aforementioned device
ﬁngerprinting work. Instead of wireless or wired transmit-
ters, we focus on ﬁngerprinting smartphones utilizing the
imperfections of on-board sensors.
B. Privacy and Side Channel
Sensor-rich smartphones and tablets are increasingly
becoming the target of attacks for harvesting sensitive
data [24]. Enck et al. [27], [28] showed the potential
misuse of users’ private information through third-party
applications, and Schlegel et al. [59] demonstrated that a
smartphone’s microphone can be used maliciously to retrieve
sensitive data.
Since Cai et al. pointed out that smartphones built-in
sensors (e.g., GPS, microphone and camera) can be used as
a side channel to record user actions by stealthily snifﬁng
on them [17], several systems (e.g., TouchLogger [15],
ACCessory [49], Taplogger [67]) have been built. They
have shown that collecting data from an accelerometer or a
gyroscope alone is enough to infer the sequences of touches
on a soft keyboard. Cai et al. [16] compared gyroscopes and
accelerometers as a side channel for inferring numeric and
soft-keyboard inputs. They found that inference based on the
gyroscope is more accurate than the accelerometer. Milluzo
et al. went one step ahead to develop TapPrint [45] that
uses gyroscopic and accelerometer reading in combination
to infer the location of tapping on tablet and smartphone
keyboards. In addition,
it was shown that accelerometer
readings can be used to infer not only PINs but also
13
Android’s graphical password patterns [11].
VIII. CONCLUSION
Inferring keystrokes on a regular keyboard has attracted
much attention. Electromagnetic waves [65], acoustic sig-
nals [71], timing events [38], and specialized software [36]
were exploited to intercept the keystrokes with high ac-
curacy. It
is also possible to infer keystrokes using the
accelerometer readings from an iPhone placed two inches
away from the keyboard.
Instead of treating sensors as a side channel, we focus
on the built-in ﬁngerprint of a smartphone for device iden-
tiﬁcation.
VII. LIMITATIONS AND DISCUSSION
(1) Scalability. Accelerometer ﬁngerprints may not need
to be globally unique to pose a threat. For instance, if a
smartphone accelerometer in the US proves to be identical
to another in Taiwan, the backend adversary may still be able
to disambiguate using the device’s cell tower location. Put
differently, broad location, device type, and other contextual
factors can relax the stringency on uniqueness. Moreover,
combining additional sensors within the ﬁngerprint, such as
the gyroscope and the microphone, can further increase the
ability to discriminate. From crude measurements, we have
observed that the gyroscope also responds to stimuli from
the phone’s vibration motor. For the microphone, it may be
feasible to play a ﬁxed audio ﬁle through the speakers, and
the recording processed for the ﬁngerprint.
(2) Scrubbing the Fingerprint. In an attempt to scrub
the ﬁngerprint, we ﬁrst attempted to compute the resting
acceleration of each device, i.e., the acceleration value when
the phone is completely at rest on a pre-deﬁned location.
Given that the resting values are different across phones, we
equalized the RSS values by suitably adding or subtracting
from the signal. Still, the ﬁngerprinting accuracy did not
degrade since the uniqueness probably arose from a wide
range of features. Equalizing across all these features is cer-
tainly difﬁcult. Alternatively, we added 0dB white Gaussian
noise to the signal, but observed only a marginal drop in
precision and recall (to 93%). Upon adding 5dB of noise,
the performance dropped sharply, but other higher level
operations were also affected severely. Finally, we used a
low pass ﬁlter to eliminate the high-frequency components
of the signal, but again was not able to remove the ﬁngerprint
without affecting the application. We opine that ﬁngerprint
scrubbing requires closer investigation, and will be a critical
next step to AccelPrint.
(3) Inﬂuence of the version of Operating Systems.
We have used the Android operating system (ice cream
sandwich and gingerbread) for all the smartphones. Between
all phones using the identical OS version, the ﬁngerprints are
still discernible, implying that AccelPrint is not affected
by the OS versions.
This paper shows that accelerometers possess unique
ﬁngerprints. As standard components inside smartphones
and tablets, accelerometers’ ﬁngerprints create new threats
in mobile apps — tracking users without cookies or device
IDs. The ﬁngerprints stem from the core of accelerometers:
an electro mechanical moving part holds the key to sensing.
The manufacturing of such moving parts are susceptible to
imperfections, bringing about diversity in the behavior of
accelerometers. This diversity is not conspicuous from a
higher level since various operations such as step-counts and
display rotations are tolerant to noise. However, when the
properties of these imperfections are deliberately extracted,
they lead to a sensor ﬁngerprint, adequate to identify a
device, and even an user. Our results on 80 standalone
accelerometer chips, 25 Android phones, and 2 tablets offer
conﬁdence that such ﬁngerprints exist, and are visible even
in real, uncontrolled environments. While commercial-grade
measurements are necessary towards a conclusive result,
we believe that our lab ﬁndings are still an early and
important step for understanding sensor ﬁngerprints and their
consequences at large.
ACKNOWLEDGMENT
This work has been funded in part by NSF CNS-0845671
and NSF GEO-1124657.
REFERENCES
[1]
[2]
[3]
[4]
[5]
[6]
[7]
unosetup,”
http://www.arduino.cc/en/Main/
“Adxl-345 3-axis digital accelerometer,” http://www.analog.com/
static/imported-ﬁles/data_sheets/ADXL345.pdf.
“Arduino
ArduinoBoardUno/.
“LibXtract: Feature Extraction Library Documentation,” http://
libxtract.sourceforge.net//.
“Mma-8452q 3-axis digital acelerometer,” http://www.freescale.com/
ﬁles/sensors/doc/data_sheet/MMA8452Q.pdf.
“MPU6050: Triple Axis Accelerometer and Gyroscope,” http://www.
invensense.com/mems/gyro/documents/PS-MPU-6000A.pdf.
“Apple updates ios to 6.1,” http://www.apple.com/pr/library/2013/01/
28Apple-Updates-iOS-to-6-1.html, 2013.
adam pocock and gavin brown, “Feast,” 2012, http://www.mloss.org/
software/view/386/.
[8] M. Andrejasic, “Mems accelerometers,” Seminar, March 2008.
[9] Atmel, “Atmega328 microcontroller,” http://www.atmel.com/devices/
atmega328.aspx.
[10] A. J. Aviv, B. Sapp, M. Blaze, and J. M. Smith, “Practicality of
accelerometer side channels on smartphones,” in Proceedings of
the 28th Annual Computer Security Applications Conference, ser.
ACSAC ’12, 2012, pp. 41–50.
[11] ——, “Practicality of accelerometer side channels on smartphones,”
in Proceedings of the 28th Annual Computer Security Applications
Conference. ACM, 2012, pp. 41–50.
[12] L. Breiman, “Random forests,” Machine Learning, vol. 45, no. 1, pp.
1049–1060, 2001.
[13] ——, “Bagging predictors,” in Machine Learning, 1996, pp. 123–
140.
14
[14] G. Brown, A. Pocock, M.-J. Zhao, and M. Lujan, “Conditional
likelihood maximisation: A unifying framework for information the-
oretic feature selection,” The Journal of Machine Learning Research,
vol. 13, pp. 27–66, 2012.
[15] L. Cai and H. Chen, “Touchlogger: inferring keystrokes on touch
screen from smartphone motion,” in Proceedings of the 6th USENIX
conference on Hot topics in security, 2011.
[16] ——, “On the practicality of motion based keystroke inference
Springer, 2012, pp.
attack,” in Trust and Trustworthy Computing.
273–290.
[17] L. Cai, S. Machiraju, and H. Chen, “Defending against sensor-
snifﬁng attacks on mobile phones,” in Proceedings of the 1st ACM
workshop on Networking, systems, and applications for mobile
handhelds. ACM, 2009, pp. 31–36.
[18] E. P. . Council, “Directive 2002/58 on privacy and electronic commu-
nications,” http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=
OJ:L:2002:201:0037:0047:EN:PDF, 2011.
[19] L. C. C. Desmond, C. C. Yuan, T. C. Pheng, and R. S. Lee, “Identify-
ing unique devices through wireless ﬁngerprinting,” in Proceedings
of ACM WiSec, 2008.
[20] T. Dietterich, “Bagging predictors,” Machine Learning, vol. 24, no. 2,
pp. 123–140, 1996.
[21] ——, “Ensemble methods in machine learning,” Multiple Classiﬁer
Systems, vol. 45, no. 1, pp. 1–15, January 2000.
[22] C. T. Dr. Craig Hillman, “Manufacturing and reliability challenges
with qfn,” SMTA DC Chapter, vol. 45, no. 1, pp. 1049–1060,
February 2009.
[23] P. Eckersley, “How unique is your web browser?” in Privacy En-
hancing Technologies. Springer, 2010, pp. 1–18.
[24] M. Egele, C. Kruegel, E. Kirda, and G. Vigna, “PiOS: Detecting
privacy leaks in iOS applications,” in Proceedings of the Network
and Distributed System Security Symposium, 2011.
[25] S. Electronics, “Mpu6050 breakout board,” https://www.sparkfun.
com/products/11028.
[26] M. Electronix, “TxID Transmitter FingerPrinter,” http://www.motron.
com/TransmitterID.html/.
[27] W. Enck, P. Gilbert, B.-G. Chun, L. P. Cox, J. Jung, P. McDaniel,
and A. N. Sheth, “Taintdroid: an information-ﬂow tracking system
for realtime privacy monitoring on smartphones,” in Proceedings of
USENIX OSDI, 2010, pp. 1–6.
[28] W. Enck, D. Octeau, P. McDaniel, and S. Chaudhuri, “A study of
android application security,” in Proceedings of the USENIX security
symposium, 2011.
[30]
[29] D. Faria and D. Cheriton, “Detecting identity-based attacks in
wireless networks using signalprints,” in Proceedings of ACM WiSec,
2006, p. 43â ˘A¸S52.
J. Franklin, D. McCoy, P. Tabriz, and V. Neagoe, “Passive data
link layer 802.11 wireless device driver ﬁngerprinting,” in USENIX
Security, Vancouver, BC, Canada, August 2006.
J.-L. Gassee
“Measuring
a
measuring-time-spent-on-a-web-page/.
on
http://www.mondaynote.com/2009/05/24/
and F. Filloux,
page,”
spent
time
web
[31]
[32] F. Guo and T. Chiueh, “Sequence number-based mac address spoof
detection. recent advances in intrusion detection: 8th international
symposium,” in 8th International Symposium, Raid, 2005,2006.
J. Hall, “Detection of rogue devices in wireless networks,” PhD
thesis, 2006.
[33]
[34] A. Y. H.C. Choe, C.E. Poole and H. Szu, “Novel identiﬁcation of
intercepted signals from unknown radio transmitters,” SPIE, vol.
2491, no. 504, 2003.
[36] K. S. Killourhy and R. A. Maxion, “Comparing anomaly-detection
algorithms for keystroke dynamics,” in Proceedings of IEEE DSN.
IEEE, 2009, pp. 125–134.
[37] T. Kohno, A. Broido, and K. Claffy, “Remote physical device ﬁnger-
printing,” in IEEE Symposium on Security and Privacy, Washington,
DC, USA, September 2005.
[38] D. Kune and Y. Kim, “Timing attacks on pin input devices,” in
Proceedings of the 17th ACM conference on Computer and com-
munications security. ACM, 2010, pp. 678–680.
[39] L. Langley, “Speciﬁc emitter identiﬁcation (sei) and classical param-
eter fusion technology,” in Proceedings of WESCON, 1993.
[40] G. Lyon, “Nmap network mapper,” http://www.nmap.org./.
[41]
J. H. M. Barbeau and E. Kranakis, “Detecting impersonation attacks
in future wireless and mobile networks,” in Proceedings of MADNES,
2006.
[42] A. T. M. Jahrer and R. Legenstein, “Combining a predictions for
accurate recommender systems,” in Proceedings of ACM SIGKDD,
2010, pp. 693–702.
[43] P. Marquardt, A. Verma, H. Carter, and P. Traynor, “(sp) iPhone:
decoding vibrations from nearby keyboards using mobile phone
accelerometers,” in Proceedings of ACM CCS, 2011, pp. 551–562.
[44] S. McKinley and M. Levine, “Cubic spline interpolation,” College of
the Redwoods, vol. 45, no. 1, pp. 1049–1060, January 1998.
[45] E. Miluzzo, A. Varshavsky, S. Balakrishnan, and R. R. Choudhury,
“Tapprints: your ﬁnger taps have ﬁngerprints,” in Proceedings of
ACM Mobisys, 2012, pp. 323–336.
[46] K. Mowery, D. Bogenreif, S. Yilek, and H. Shacham, “Fingerprinting
information in javascript implementations,” in Proceedings of Web,
vol. 2, 2011.
[47] N. Nikiforakis, A. Kapravelos, W. Joosen, C. Kruegel, F. Piessens,
and G. Vigna, “Cookieless monster: Exploring the ecosystem of web-
based device ﬁngerprinting,” 2013 IEEE Symposium on Security and
Privacy, vol. 0, pp. 541–555, 2013.
[48] L. Olejnik, C. Castelluccia, A. Janc et al., “Why johnny can’t browse
in peace: On the uniqueness of web browsing history patterns,” in
5th Workshop on Hot Topics in Privacy Enhancing Technologies
(HotPETs 2012), 2012.
[49] E. Owusu, J. Han, S. Das, A. Perrig, and J. Zhang, “Accessory:
password inference using accelerometers on smartphones,” in Pro-
ceedings of the Twelfth Workshop on Mobile Computing Systems &
Applications. ACM, 2012, p. 9.
J. Pang, B. Greenstein, R. Gummadi, S. Seshan, and D. Wetherall,
“802.11 user ﬁngerprinting,” in Proceedings of MobiCom, 2007, pp.
99–110.
[50]
[51] N. Patwari and S. K. Kasera, “Robust location distinction using
[52]
Paul,
temporal link signatures,” in Proceedings of MobiCon, 2007.
I.
apps
overtake
google-play-store-800000-apps-and-overtake-apple-appstore/,
2012.
play
appstore!”
“Google
apple
800,000
and
http://www.rssphone.com/
store:
[53] V. Paxson, “On calibrating measurements of packet transit times,” in
SIGMETRICS, 1998.
[54] G. R. Caruana, A. Niculescu-Mizil and A. Ksikes, “Ensemble
international
selection from libraries of models,” in Twenty-ﬁrst
conference on Machine Learning.
ICML, March 2004, p. 18.
[55] M. M. R. Gerdes, T. Daniels and S. Russell, “Device identiﬁcation
via analog signal ﬁngerprinting: A matched ﬁlter approach,” in
Proceedings of NDSS, 2006.
[56] M. Reizenman, “Cellular security: better, but foes still lurk,” in
Spectrum, IEEE, 2000.
[35] M. B. J. Hall and E. Kranakis, “Radio frequency ﬁngerprinting for
intrusion detection in wirless networks,” in Defendable and Secure
Computing, 2005.
[57] K. Remley, C. Grosvenor, R. Johnk, D. Novotny, P. Hale, M. McKin-
ley, A. Karygiannis, and E. Antonakakis, “Electromagnetic signatures
of wlan cards and network security,” in ISSPIT, 2005.
15
[58] A. Ross and A. Jain, “Information fusion in biometrics,” Pattern
Recognition Letters, vol. 24, no. 13, pp. 2115–2125, June 2003.
[59] R. Schlegel, K. Zhang, X. Zhou, M. Intwala, A. Kapadia, and
X. Wang, “Soundcomber: A stealthy and context-aware sound trojan
for smartphones,” in Proceedings of the 18th Annual Network and
Distributed System Security Symposium (NDSS), 2011, pp. 17–33.
[60] D. T. Sue B. Moont, Paul Skelly, “Estimation and removal of clock
skew from network delay measurements,” in Proceedings of InfoCom,
1999.
[61] K. Talbot, P. Duley, and M. Hyatt, “Specic emitter identiﬁcation and
veriﬁcation,” in Technology Review, 2003.
[62] P. Tuyls and J. Goseling, “Capacity and examples of template-
protecting biometric authentication systems,” in ECCV, 2004.
[63] O. Ureten and N. Serinken, “Rf ﬁngerprinting,” Electrical and
Computer Engineering Canadian Journal, vol. 32, no. 1, pp. 27–
33, 2007.
[64] M. G. S. O. Vladimir Brik, Suman Banerjee, “Wireless device iden-
tiﬁcation with radiometric signatures,” in Proceedings of Mobicom,
2008.
[65] M. Vuagnoux and S. Pasini, “Compromising electromagnetic emana-
tions of wired and wireless keyboards,” in Proceedings of USENIX
security, 2009, pp. 1–16.
J. Wright, “Detecting wireless lan mac address spooﬁng,” White
Paper, 2003.
[66]
[67] Z. Xu, K. Bai, and S. Zhu, “Taplogger: Inferring user inputs on smart-
phone touchscreens using on-board motion sensors,” in Proceedings
of ACM conference on Security and Privacy in Wireless and Mobile
Networks, 2012, pp. 113–124.
[68] T.-F. Yen, Y. Xie, F. Yu, R. P. Yu, and M. Abadi, “Host ﬁngerprinting
and tracking on the web: Privacy and security implications,” in
Proceedings of NDSS, 2012.
[69] H. Yin, D. Song, M. Egele, C. Kruegel, and E. Kirda, “Panorama:
capturing system-wide information ﬂow for malware detection and
analysis,” in Proceedings of the 14th ACM conference on Computer
and communications security. ACM, 2007, pp. 116–127.
[70] R. M. Z. Li, W. Xu and W. Trappe, “Securing wireless systems via
lower layer enforcements,” in Proceedings of ACM Wise, 2006, pp.
33–42.
[71] L. Zhuang, F. Zhou, and J. D. Tygar, “Keyboard acoustic emanations
revisited,” in Proceedings of ACM CCS. ACM, 2005, pp. 373–382.
16