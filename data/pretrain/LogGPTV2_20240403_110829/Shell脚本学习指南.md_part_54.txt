/dev/sda2
29M
/Gev/8da3
9 ,7G
502M
6.2G
3.0G
1zodxe/$89
/dev/sda8
none
0%/6ev/shm
99ot′4.4M
90M
www.TopSage.com
---
## Page 321
文件处理
309
/dev/sda9
3.9G1.7G 2.1G44$ /ww
13G264M
12G
3$/var
/dev/sda6
输出行任意排列，不过因为有一行标头，又得保留它，所以要应用sort排序就变得较
难。幸好，绝大多数系统上这样的输出都只有几行而已。
你还可以提供一个或多个文件系统名称或加载点的一份列表，来限制输出项目：
S df -1k /dev/ada6 /var
Fileaysten
1K-b1ocks
Used Avai1able Uset Mounted on
/dev/sda6
4032092
1684660
2142608
45#/ww
/Gev/8da9
13432904
26970412480844
3#/var
df
语法
Gf[options ][ files-or-directories ]
用途
显示一个或多个文件系统内的inode或空间使用情孔。
主要选项
-i
显示inode计数，而非空间，
-k
显示空间时，以kilobyte（KB）为单位，而非块。
1
小写L，仅显示本地文件系统。
行为
Cf会针对每个文件或日录参数，扣果无提供参数，则为所有的文件系统，产
生单行标头以识别输出栏，再接上也含该文件或目最的文件系统之使用量报
告。
登告
每个系统上的df输出各异，因此如果使用在必频具可移植性的Shell脚本上
会很不可靠。
dE的输出是未排序的。
针对远端文件系统所微的空润报告可能不尽然完全正确。
报告仅为当时（快照）的系统状态，对于运行中的多用户系统而言，在极短的时间内就
可能会有完全不同的结果。
www.TopSage.com
---
## Page 322
310
第10章
对于加载网络的文件系统，在Fi1esystem栏里的实例记录会前置主机名称）Im
（hostname：），这么一来，某些df实例，便会为了适应栏宽而切分为两行，对其他软
件来说，要解析这样的输出信息相当棘手。下面就是SunSolaris系统下的例子：
$ df
Filesystem
1k-blocks
Used Available Uset Mounted on
/dev/sdd1
17496684152204721387420.92t/export/1oca1
fs:/export/home/0075
3519758633528481131713097t /a/fs/export/home/0075
df中关于远端文件系统的可用空间报告不尽完全正确，这是由于软件实例在计算供紧急
情况使用所保留的空间不同所致，
在附录B中，我们会讨论文件系统中有关inode表格的议题，inode表格为固定不变大
小，且在文件系统创建时即已设置。-i（inodeunit，inode单位）选项提供访间inode
使用量的一种方式。下面为同一台网页服务器下的范例：
$ df -1
Filesystem
Inodes
IUsed
/dev/sda5
640000
106991
533009
17# /
/dev/sda2
1281696 229304 1052392
10040
SO00TSC
18/export
1/boot
none
/dev/sda3
128491
1128490
1# /dev/shm
/dev/sda8
26104
14425960
18/tmp
/dev/sda9
1706880
513024218937294087
996 1705884
1$ /var
/dev/sda6
43% /ww
/ww文件系统是最完美的状态：因为它的inode使用与文件系统空间，两者都保留40%
以上的容量可用，对一个健康的计算机系统而言，系统管理者应该例行地监控所有本地
文件系统上inode的使用量。
df命令在选项与输出外表中有很大的差异，这对于想分析其输出结来的可移植程序来
说，是相当麻烦的。Hewlett-Packard在HP-UX上的实现更是完全不同，不过幸好HP
提供了与Berkeley风格相当的bdf，它会产生类似于我们范例的那种输出。要处理这种
差异，我们建议在你的站点上的每一处都安装GNU版本：该命令为coreurils包的一部
分，可参考4.1.5节的说明。
10.6.2du命令
df会摘要文件系统的可用空间，但它并不会告诉你某个特定的目录树需要多少空间，这
是du（diskusage：磁盘用量）的工作。du就像df一样：各系统间所使用的选项都不
尽相同；且其空间单位可能也不一样，有两个常见的重要选项实现：-k（kilobyte单位）
与-s（摘要），这里是我们的网页服务器系统的例子：
www.TopSage.com
---
## Page 323
文件处理
311
$ du/tmp
12
/tmp/1ost+found
1
24
/tmp/ -fontUNIX
/tmp
S s -8 /tnp
24
/tnp
$ du -8 /var/1og /var/apoo1 /var/tmp
204480
236
/var/1og
/var/spool
var/tnp
GNU的版本提供-h（human-readable，人类易于理解的）选项：
S du -h
-8/var/1og /var/apool /var/tmp
200K
/var/1og
236k
/var/spoo1
8,0k
/var/tsp
du不会对同一个文件计算额外的直接连接，且通常会忽略软性连接。然而，有些实例提
供选项可强制跟随软性连接，不过选项名称各异：请参考你系统里的手册页。
du
语法
du[options ][files-or-directories]
用建
显示一个或多个日录树内的空间使用率。
主要选项
-k
空间的显示，以kilobyte（KB）为单位，而非（与系统相依的）块（block）。
-S
为每个参数，仅显示单行摘要。
行为
u会针对每个文件或目录参数
如果无提供这类参数则为当前目录，产
生一个输出行，其会包含以整数表示的使用率，并接着文件或目录的名称，除
非给定一S选项，否则每个日录参数会以通归方式被查找，为每个嵌粪目录产
生一个报告行。
du的输出未被排序。
www.TopSage.com
---
## Page 324
312
第10章
录全放在/home/users下，root可以这么微：
这么微可以产生使用空间前几名的列表，由最多到最少。在一些大型目录树下的find
dirs-size+10000命令，可以迅速地找出可能是要压缩或删除的候选文件，且du
的输出可以识别出最好搬到更大空间的用户目录树。
注章：有些管理人员会将定期处理du报告并寄送客告部件给使用过多目录树空间的用户这些工作
加以自动化，像我们在第7章例7-1所编写的脚本那样。在我们的经验里，这么微会比使
用文件系统配额（quota）功能还好（见qmora（1）使用手册）：因为它避免了指定特定数字
（文件系统一空间的限剩）给用户，那些限额的数字永远不会正确，且它们迟早会阻碍用户
完成正常工作，
du的运行没有什么魔法，它就像其他程序那样，深入查找文件系统，再将每个文件的使
用空间求和。因此在大型系统下执行，可能会有点慢，且通过严格的权限可锁住对目录
树的查找：如果它的输出包含Permissiondenied的信息，它的报告则无法充分计算
空间使用率。通常，只有root有足够的权限，可以在本地系统的任何地方使用du。
10.7比较文件
本节，我们将会讨论比较文件领域里的四个相关主题：
·检查两个文件是否相同，如果不同，找出哪里不同
·应用两个文件的不同之处，使从其中一个回复另外一个
·使用校验和（checksum）找出相同一致的文件
使用数字签名以验证文件
10.7.1好用工具cmp与diff
在文字处理上，最常出现的问题应该就是比较两个或两个以上的文件，看看它们的内容
是否相同一即便它们的名称不同。
如果你手上已经有两个要拿来比较的文件，那么文件比较的工具cmp马上能为你解答：
$ cp /bln/1s /tnp
制作/bin/1s的私用期本
www.TopSage.com
---
## Page 325
文件处理
$ cnp /bin/1e /tmp/1e
拿原始文件与副本比较
没有任何输出，表示这两个文件一致
ge.com
$cnp/bin/cp/bin/1s
输出结果指出第一个不同处的位置
比较两个不同的文件
/bin/cp /bin/ls differ: char 27, 1ine 1
cmp发现两个参数文件一致时，会采用默认的方式。如果你只对它的离开状态有兴趣，
可以使用-s选项，抑制警告信息：
$ cnp =8 /bin/cp /bin/18
默认地比较两文件的不同
$ echo $?
显示离开码
非零，表示两个文件不同
如果你想知道两个相似的文件有何不同，可使用diff：
S echo Test 1 > test.1
建立第一个test文件
S echo Test 2> test.2
建立第二个test文件
1c1
S diff test.[12]
比较这两个文件
 Test 2
使用diff的惯例是：将旧文件作为第一个参数。
不同的行会以前置左角括号的方式，对应到左边的（第一个）文件，而前置右角括号则
指的是右边的（第二个）文件。最前面的1c1为输人文件行编号的简洁表示方式，指出
不同之处以及需要编辑的操作：在这里，c表示改变（change）。在大一点的例子下，你
还可能发现a是增加（add），与a是删除（delete）之意。
diff的输出是仔细设计过的，因此其他程序可使用它的输出数据。例如版本修订控制
系统（revisioncontrolsystem）就使用diff管理文件连续版本之间的差异。
有时，与diff系出同门的diff3也是相当好用的工具，它的任务与diff稍有不同：
diff3比较的是三个文件，例如基本版与由两个不同的人所做出来的两个修改文件，它
还会产生一个ed命令的脚本，让用户将两组修改文件合并到基本版里。我们在这不多
解释，有兴趣的读者可参考dif3（1）手册页，以找到更多的范例。
10.7.2patch工具程序
patch工具程序可利用diff的输出，结合原始文件，以重建另一个文件。因为相异的
部分，通常比原始文件小很多，软件开发人员常会通过email交换相异处的列表，再使
用patch应用它。下面的例子便是要告诉你，patch如何将test.1的内容转换为那
些匹配于test.2的内容：
www.TopSage.com