安全认证相关漏洞挖掘
拿到⼀个系统⼤多很多情况下只有⼀个登录⼊⼝，如果想进⼀步得到较为⾼危的漏洞，只能去寻
找权限校验相关的漏洞，再结合后台洞，最终得到⼀个较为满意的漏洞。
这⾥列出⼀些较为常⻅的安全认证配置：
 Spring Security
 Apache Shiro
 服务器本身(Tomcat、Nginx、Apache）401 认证
 Tomcat 安全认证(结合web.xml) ⽆需代码实现
 JSON Web Token
以上只是简单列出了⼀些笔者⻅过常⻅的安全认证配置组件。不同的鉴权组件存在异同的审计思
路。
⼀、寻找未授权
这是笔者第⾸先会⼊⼿去看的点，毕竟如果能直接从未授权的点进⼊，就没必要硬刚鉴权逻辑
了。
1.⼀些第三⽅组件⼤概率为未授权应⽤
druid、webservice、swagger等内置于程序中的应⽤⼤多被开发者设计为⽆需权限校验接⼝。
第三⽅组件本身⼜存在历史漏洞，且以jar包的形式内置于应⽤中，低版本的情况很常⻅。
利⽤druid的未授权获取了管理员session
2.安全认证框架配置中存在的未授权接⼝
出于某种功能需求，开发者会讲⼀些功能接⼝配置⽆需权限
web.xml
细⼼查看配置⽂件中各个Filter、Servlet、Listener ，可能有意想不到的收获
spring-mvc.xml
这⾥是以拦截器的⽅式对外开放了未授权请求处理
tomcat 安全配置 
配置类
Apache Shiro、Spring Security等⽀持以@Conﬁguare注解⽅式配置权限认证，只要按照配置
去寻找，当然以上框架也⽀持配置⽂件⽅式配置，寻找思路⼀样
3.未授权访问接⼝配合ssrf获取localhost本身需鉴权服务
⼀些多服务组件中，存在服务之间的相互调⽤，服务之间的相互调⽤或许不需要身份校验，或者
已经配置了静态的身份凭证，⼜或者通过访问者IP是否为127.0.0.1来进⾏鉴权。这时我们需要
⼀个SSRF漏洞即可绕过权限验证。
很经典的为Apache Module mod_proxy 场景绕过：SSRF CVE-2021-4043.
⼆、安全认证框架本身存在鉴权漏洞
1.Apache Shiro
Shiro相关的权限绕过漏洞，我觉得可以归类到下⾯的路径归⼀化的问题上
2.Spring Security 
某些配置下，存在权限绕过，当配置⽂件放⾏了/**/.js 时
3.JWT 存在的安全⻛险
 敏感信息泄露
 未校验签名
 签名算法可被修改为none
 签名密钥爆破
 修改⾮对称密码算法为对称密码算法
 伪造密钥(CVE-2018-0114)
jwt测试⼯具：https://github.com/ticarpi/jwt_tool
三、静态资源访问
静态资源css、js等⽂件访问往往不需要权限，开发者可能讲鉴权逻辑放在Filter⾥，当我们在原
有路由基础上添加.js 后缀时，即可绕过验证
这⾥可能会有⼀个问题，添加了js后缀后是否还能正常匹配到处理类呢？在spring应⽤⾥是可以
的，默认配置下的spirng conﬁgurePathMatch⽀持添加后缀匹配路由，如果想开启后缀匹配模
式，需要⼿动重写conﬁgurePathMatch⽅法
四、路径归⼀化问题
1.简单定义
两套组件或应⽤对同⼀个 URI 解析，或者说处理的不⼀致，导致路径归⼀化问题的产⽣。
orange 的 breaking parser logic 在 2018 ⿊帽⼤会上的演讲议题，后续许多路径归⼀化的安
全问题，都是延伸⾃他的 PPT
2.Shiro 权限绕过漏洞
⼀个很经典的路径归⼀化问题，导致 权限的绕过，⽐如Shiro CVE-2020-1957
针对⽤户访问的资源地址，也就是 URI 地址，shiro 的解析和 spring 的解析不⼀致，shiro 的 
Ant 中的*通配符匹配是不能匹配这个 URI 的/test/admin/page/。shiro 认为它是⼀个路径，
所以绕过了/test/admin/*这个 ACL。⽽ spring 认为/test/admin/page 和/test/admin/page/
是⼀样的，它们能在 spring中获取到同样的资源。
3.CVE-2021-21982 VMware CarbonBlack Workstation 
算是⼀个⽼1day了，组件本身身份验证通过Spring Security + JWT来实现。且存在两套url的处
理组件：Envoy 以及 Springboot。
PS：Envoy 是专为⼤型现代 SOA（⾯向服务架构）架构设计的 L7 代理和通信总线。
通过diﬀ可以定位到漏洞点，⼀个本地获取token的接⼝
但是我们通过外⽹直接访问⽆法获取到token
简单了解⼀下组建的基本架构
抓⼀下envoy 与本机服务的通信 rr yyds
./tcpdump -i lo -nn -s0 -w lo1.cap -v
envoy 本身起到⼀个请求转发作⽤，可以精确匹配到协议 ip 端⼝ url路径等，指定很详
细的路由转发规则，且可以对请求进⾏转发和修改
url编码即可绕过envoy的转发规则，POC如下：
总结：由于envoy转发规则不能匹配URL编码，但Springboot可以理解，两个组件对url的理解不
同，最终导致漏洞产⽣。
3.Other
扩展⼀下思路，当存在⼀个或者多个代码逻辑处理url时，由于对编码，通配符，"/"，";" 等处
理的不同，极有可能造成安全问题。
五、Apache、Nginx、Jetty、HAProxy 等
Chybeta在其知识星球分享了很多：
Nginx 场景绕过之⼀: URL white spaces + Gunicorn
https://articles.zsxq.com/id_whpewmqqocrw.html
Nginx 场景绕过之⼆：斜杠(trailing slash) 与 #
https://articles.zsxq.com/id_jb6bwow4zf5p.html
Nginx 场景绕过之三：斜杠(trailing slash) 与 ;
https://articles.zsxq.com/id_whg6hb68xkbd.html
HAProxy 场景绕过之⼀: CVE-2021-40346
https://articles.zsxq.com/id_ftx67ig4w57u.html
利⽤hop-by-hop绕过：结合CVE-2021-33197
https://articles.zsxq.com/id_rfsu4pm43qno.html
Squid 场景绕过之⼀: URN bypass ACL
https://articles.zsxq.com/id_ihsdxmrapasa.html
Apache Module mod_proxy 场景绕过：SSRF CVE-2021-4043.
六、简单的fuzz测试
造成权限绕过的根本原因可能有多种，但是不妨碍我们总结出⼀些常⻅的绕过⽅式，编码、插⼊
某些特定字符、添加后缀等⽅式。远海曾公布⼀个权限绕过的fuzz字典：
七、参考链接
https://wx.zsxq.com/dweb2/index/group/555848225184
https://www.vmware.com/security/advisories/VMSA-2021-0005.html
https://cloud.tencent.com/developer/article/1552824