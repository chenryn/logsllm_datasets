## Bug Report
**Current Behavior**  
const aren't being transpiled in the following situation:
  * they are defined on a dependency file, in node_modules
  * they have a function assigned `const a = param => 'whatever'`
  * that function is used by another function that is consumed by the entry point
**Input Code**
  * Filename: `entry.js`
    import { foo } from 'package_in_node_modules';
    export default class Whatever {
    	constructor(param) {
    		console.log(foo(param));
    	}
    }
  * Filename: `package_in_node_modules/index.js`
    const helper = param => param.length;
    export function foo(param) {
    	return helper(param)
    }
_**build ouptut**_
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    const helper = param => param.length;
    function foo(param) {
      return helper(param);
    }
    var Whatever = function Whatever(param) {
      _classCallCheck(this, Whatever);
      console.log(foo(param));
    };
    export default Whatever;
**Expected behavior/code**  
`const helper` being replaced by `var helper`
_**expected ouptut**_
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var helper = param => param.length;
    function foo(param) {
      return helper(param);
    }
    var Whatever = function Whatever(param) {
      _classCallCheck(this, Whatever);
      console.log(foo(param));
    };
    export default Whatever;
**Babel Configuration (babel.config.js, .babelrc, package.json#babel, cli
command, .eslintrc)**
  * Filename: `.babelrc`
    {
    	"env": {
    		"es5": {
    			"presets": [
    				["@babel/preset-env", {
    					"useBuiltIns": "usage",
    					"corejs": 3,
    					"modules": false,
    					"targets":  ">= 0.01%"
    				}]
    			]
    		}
    	}
    }
  * Filename: `rollup.config.js`
    import babel from 'rollup-plugin-babel';
    import resolve from 'rollup-plugin-node-resolve';
    import commonjs from 'rollup-plugin-commonjs';
    export default {
    	input: ['./entry.js'],
    	output: [
    		{
    			file: `./dist/index.es5.js`,
    			format: 'esm'
    		}
    	],
    	plugins: [
    		resolve(),
    		commonjs(),
    		babel({
    			envName: 'es5'
    		})
    	]
    };
**Environment**
  * Babel version(s): 7.7.4
  * Node/npm version: node 8.16.2 / npm: 6.4.1
  * OS: macOS 10.15.1
  * Monorepo: Lerna
  * How you are using Babel: loader