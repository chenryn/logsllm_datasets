x86_64
2.2.15-54.e16.cento8
updates
833k
Installing for dependencies:
省略若千...
Installing
1 httpd-2.2.15-54.e16.cento8.x86_64
3/3
Verifying
1httpd-tools-2.2.15-54.e16.cento8.x86_64
1/3
Verifying
：httpd-2.2.15-54.e16.cento8.x86_64
2/3
Verifying
1apr-uti1-1dap-1.3.9-3.e16_0.1.x86_64
3/3
Installed:
httpd.x86_64 0:2.2.15-54.e16.centos
Dependency Installed:
apr-uti1-1dap.x86_64 0:1.3.9-3.e16_0.1
httpd-too1s.x86_64 0:2.2.15-54.e16.centos
Conplete!
spawn ssh root9192.168.33.129 source /tnp/yum.sh
root9192.168.33.128's password:
Loaded plugins: fastestmirror,security
Setting up Install Process
Loading mirror speeds from cached hostfile
base:mirrors.tuna.tsinghua.edu.cn
*extras:mirrors.yun-idc.com
...省略若干.·
--->Package httpd-too1s.x86_640:2.2.15-54.el6.cento8 wi11 be installed
--> Pinished Dependency Resolution
Dependencies Resolved
Package
Arch
Version
Repository
Size
Installing:
---
## Page 354
338跟老男孩学Linux运维：Shell编程实战
httpd
x86_64
2.2.15-54.e16.centos
updates
833k
Installing for dependencies1
...省略若干...
Installing
: httpd-2.2.15-54.e16.centos.x86_64
3/3
Verifying
:httpd-too1s-2.2.15-54.e16.centos.x86_64
1/3
Verifying
:httpd-2.2.15-54.e16.centos.x86_64
2/3
Veritying
:apr-ut11-1dap-1.3.9-3.e16_0.1.x86_64
3/3
Installed:
httpd.x86_64 0:2.2.15-54.e16.centos
Dependency Installed:
apr-ut11-1dap.x86_64 0:1.3.9-3.e16_0.1
httpd-too1s.x86_64 0:2.2.15-54.e16.centos
Complete!
spawm ssh root9192.168.33.130 source /tmp/yum.sh
root0192.168.33.128'spassvord:
Loaded plugins: fastestmirror, security
Setting up Install Process
Loading mirror speeds from cached hostfile
base:mirrors.tuna.tsinghua.edu.cn
*extras: nirrors.yun-idc.com
...省鸣若干...
---> Package httpd-tools.x86_64 0:2.2.15-54.e16.centos wi11 be installed
-->Finished Dependency Resolution
Dependencies Resolved
Package
Arch
Version
Repository
Size
Installing:
pdanu
x86_64
2.2.15-54.e16.centos
updates
833 k
Installing for dependencies:
省略弟干...
Insta11ing:httpd-2.2.15-54.el6.centos.x86_64
3/3
Verifying
Verifying
:httpd-too1s-2.2.15-54.e16.centos.x86_64
1/3
:httpd-2.2.15-54.e16.centos.x86_64
2/3
Verifying
:apr-uti1-1dap-1.3.9-3.e16_0.1.x86_64
3/3
Installed:
httpd.x86_64 0:2.2.15-54.e16.centos
Dependency Installed:
apr-uti1-1dap.x86_64 0:1.3.9-3.e16_0.1
httpd-too1s.x86_64 0:2.2.15-54.e16.cento8
Conplete!
---
## Page 355
第 18章Expect自动化交互式程序应用实践337
18.8.4自动化部署SSH密钥认证+ansible的项目实战
范例18-15：批量分发SSH密钥并建立ansible批量管理环境。
1）本地生成密钥对，代码如下：
ssh-keygen -t dsa -P-f~/.ssh/id_dsa >/dev/nul1 2>&1
2）开发Expect脚本自动化交互分发公钥到所有的服务器：
[root9oldboy~]cat 18_15_1.exp
1/usr/bin/expect
create by oldboy
if（Sargc1=2）（
exit
#define var
e x]  
set host [1index Sargv 1]
spaun ssh-copy-id-1 sfile*-p 22 root9shost*
fstart exec command
expect（
*yes/no*
**passvord* [send *spassword\r*)
expect eof
3）开发Shell脚本循环执行Expect脚本：
[rooteoldboy-]cat 18_15_2.sh
#1/bin/sh
for n in 128 129 130
do
expect 18_15_1.exp -/.ssh/id_dsa.pub 192.168.33.Sn
done
操作过程如下：
[rootθoldboy-]rn-fr-/.ssh/
[rootθoldboy ~]#ssh-keygen-t dsa -P-f~/.ssh/id_dsa >/dev/nul1 2>61
[xoot@o1dboy~]sh 18_15_2.sh
spawn ssh-copy-id -1/root/.ssh/id_dsa.pub-p 22 root9192.168.33.128
RSA key fingerprint is fd:2c+0b:81:b0:95:c3:33:c1:45:6a:1c:16:2f:b3:9a.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added·192.168.33.128′（RSA） to the 1ist of knowm ho8ts.
root9192.168.33.128*spa8sword:
Now try 1ogging into the machine,with *ssh '-p 22 root9192.168.33.128*
and check in:
---
## Page 356
眼老男技学Linux运维：Shell编程实战
ssh/authorized_keys
to make sure ve haven't added extra keys that you weren't expecting.
8pawn ssh-copy-id -1/root/.ssh/id_dsa.pub -p 22 PI:EMAIL
The authenticity of hot *192.168.33.129 (192.168.33.129)*can*t be estab1ished
RSA key fingerprint is fd:2c:0b:81:b0:951c3:331e1:45:6a:1c:16:2f:b3:9a.
o）    
Warming: Permanently added *192.168.33.129* (RSA) to the 1ist of knowm ho8t8.
root9192.168.33.129*8pa88word:
and check in:
.ssh/authorized_keys
x n e x x e e e o
apawn ssh-copy-id -i/root/.ssh/id_dsa.pub -p 22 root9192.168.33.130
The
authenticity of host *192.168.33.130 (192.168.33.130)* can't be establiahed
Are you sure you want to continue connecting (yes/no)? ye8
Warning: Permanently added *192.168.33.130′ (RSA) to the 1ist of knowm host8.
root8192.168.33.130*s pas8word:
. 
and check in:
ssh/authorized_keys
to make sure we haven't added extra keys that you weren't expecting.
4）实现无密码且不需要Expect就可以批量管理：
[root@oldboy ~] cat exec.sh
ssh 192.168.33.128 uptime
8sh 192.168.33.129 uptime
8sh 192.168.33.130 uptime
执行结果如下：
[root@oldboy -]#nh exec.sh
15:22:33up 17:28,2users,
1oadaverage:0.00,0.00,0.00
12:48:30 up1:17,
2users,
1oadaverage:0.45,0.11,0.04
12:48:38 up 1day.16:38,2user8,1oad average:0.00,0.00,0.00
5）配合ansible（Python开发的基于SSH的批量管理工具）实现自动化运维管理。
首先安装ansible，命令如下：
---
## Page 357
第18章Expect自动化交互式程序应用实践339
yum install ansible -Y
然后编辑ansible的主机配置文件hosts，添加主机组oldboy：
[oldboy]
192 .168 .33.128
192.168.33.129
192.168.33.130
接着使用ansible并借助Expect建立好的SSH密钥认证执行命令，过程和结果如
图18-1所示。
602
E:831001902-031 : 0.00.0.00. 0.0
图18-1命令执行过程和结果
ansible自动化管理超出了本书的内容范围，因此不再过多讲解，更多内容可以了解
老男孩的Linux教学课程或博客上的内容。
18.9本章小节
老男孩如是说：Expect程序的功能远不止本文介绍的这些，本文主要从运维工作
实战的角度，给大家讲解自动化运维中用Shell脚本难以实现的交互式问题的解决方案，
更多关于Expect的内容，请参考相关资料。对于一般的企业运维人员，掌握本章所讲的
这些，就已经够用了，类似的交互工具还有sshpass、ansible等。
---
## Page 358
inux
企业Shell面试题及企业运维实战案例
首先要恭喜看到此章的所有读者，如果前18章你都能够掌握，那么搞定本章的试
题和案例，将不再是难事。
本章所讲的内容是IT运维中常见的企业面试题及企业实战案例，在老男孩以往的
教学中，对这些案例都是不给答案的，而是由学生自己来完成，并让他们在班级里上百
名学生面前进行讲解，以使他们真正掌握Shell编程。现在作为压轴戏，将这些面试题
和读者分享，强烈建议读者在看本章的内容时，尽量思考并自行完成试题，之后再参考
答案，就当是做一套综合考试题吧，看看经过前18章的学习，自己对Shell脚本知识到
底掌握得如何。
本章的考试题（无答案）可从此网址获取：htp:/oldboy.blog.51cto.com/2561410/1632876
19.1企业Shell面试题案例
19.1.1面试题1：批量生成随机字符文件名
使用for循环在/oldboy目录下批量创建10个html文件，其中每个文件需要包含
10个随机小写字母加固定字符串oldboy，名称示例如下：
[root@oldboy scripts]# 1s/oldboy
apquvdpqbk_o1dboy .html
mpyogpsmwj_o1dboy.htm1
txynzwofgg_o1dboy.htm1
bnqiwhfpgv_o1dboy .htm1
mtrzobsprf_oldboy.html
vjxmlf1awa_o1dboy.htm1
jhjdejnjxe_oldboy.htmlqeztkkmewn_oldboy.htm1
---
## Page 359
第 19章企业 Shell面试题及企业运维实战案例34
jpvixsnj1d_o1dboy.htnlruscyxwxai_oldboy.htn1
（1）问题分析
本题考察的第一个知识点就是生成10个随机小写字母，产生随机数的方法在第
11.5节已经详细讲解过了，这里采取openssl命令的方法来实现，操作结果如下：
[rooteoldboy 8cripts]opensslrand -base64 40
<=生成40位随机数。
js0k6Mex+c1XicknYocxNTxJZXwfn25xgXeJMQwXLZvGoye80SmcXA==
<利用sed普换掉非小写字符。
xgyecpgovfdanqhdvzrivw
[root@oldboy Bcripts]openssl rand -base64 401seds#[~a-z]##g*1cut -c 2-11
<==利用cut取10位
ssdbtAing
其次，本题考察for循环的使用，最终脚本答案见如下参考解答。
（2）参考解答
[xooteo1dboy scripts]#cat 19_1.sh
#1/bin/sh
Path=/o1dboy
<==定义生成文件的路径。
<==如果定又的路径不存在则创建。
for n inseq 10
<==for循环10次，即创建10个文件。
do
（--.[z-].109eq-puxdo）=x
touch $Path/$(random)_oldboy.htm1
<==根据题意生成所需要的文件。
<==将10位随机字符赋值给变量
done
（3）执行结果
[root8oldboy scripts]+1s/oldboy
apquvdpqbk_o1dboy.htn1
mpyogpsmwj_oldboy.htmltxynzwofgg_oldboy.html
bnqiwhfpgv_o1dboy-htn1
ntrzobsprf_oldboy.htmlvjxmlflawa_o1dboy.html
jhjdcjnjxc_oldboy.htn1
qeztkkmewm_o1dboy-htn1
jpvirsnj1d_oldboy-htm1
ruscyxwxai_oldboy.htnl
19.1.2面试题2：批量改名
将19.1.1节所得文件名中的oldboy字符申全部改成oldgirl（最好用for循环实现），
并且将扩展名html全部改成大写。
（1）问题分析
本题考察的知识点是对文件进行批量改名，在前面11.2节已讲解过类似案例。
（2）参考解答
方法1：
[root9oldboy scripts]# cat 19_2_1.sh
---
## Page 360
342跟老男孩学 Linux运推： Shell 编程实战
1/bin/sh
Filename=_oldgirl.HTML<定义普换后的目标字特串。
Dirname-*/oldboy*
<定义操作目录
cd $Dirnamellexit 1
<切换到指定目录下，如果不成功则退出。
for n in1s
<遍历当前目录获取文件名列表，并播环处理。
op
name=S（echo S（n}lawk -F_（print $1)·)
<==定义替换后的目标。
mv $n S(nane)$(Filename)
<==实际mv改名操作命令。
done
方法2：非循环实现方法，4.3.3节也讲过类似的知识
[root@oldboy scripts]cat 19_2_2.ah
/u/1