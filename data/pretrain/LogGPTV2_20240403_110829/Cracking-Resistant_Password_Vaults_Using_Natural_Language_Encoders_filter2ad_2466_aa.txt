# Cracking-Resistant Password Vaults Using Natural Language Encoders

## Authors
Rahul Chatterjee, Joseph Bonneau, Ari Juels, and Thomas Ristenpart

### 2015 IEEE Symposium on Security and Privacy

#### Abstract
Password vaults are increasingly popular applications that store multiple passwords encrypted under a single master password. While these vaults reduce the burden of remembering multiple passwords, they introduce a single point of failure. An attacker who obtains an encrypted vault can mount offline brute-force attacks, potentially compromising all stored passwords if successful. In this paper, we explore the construction of encrypted vaults that resist such offline cracking attempts, forcing attackers to resort to online attacks.

Our contributions include:
1. **Vulnerability Analysis**: We present an attack and supporting analysis showing that a previous design for cracking-resistant vaults, Kamouﬂage, actually degrades security compared to conventional password-based approaches.
2. **Natural Language Encoders (NLEs)**: We introduce NLEs, a new type of secure encoding scheme that generates plausible-looking decoy passwords when decrypted with the wrong master password. We demonstrate how to build NLEs using existing natural language processing tools, such as n-gram models and probabilistic context-free grammars (PCFGs), and evaluate their ability to generate realistic decoys.
3. **NoCrack System**: We present, implement, and evaluate NoCrack, a full NLE-based cracking-resistant vault system. NoCrack addresses several practical deployment challenges, including concealing website names, incorporating computer-generated passwords, and ensuring user authentication while preventing offline brute-force attacks.

### I. Introduction
To alleviate the burden of memorizing multiple passwords, security experts recommend using password vaults, also known as "wallets" or "managers." These applications store a user's website passwords in an encrypted database, accessible via a single master password. Vault services enable users to choose stronger, more complex passwords for each site without the need to remember them. Many modern vaults also offer backup through online storage, ensuring that users can recover their credentials as long as they remember their master password.

However, these vaults provide a rich target for attackers. For example, the popular service LastPass reported a suspected breach in 2011, and security analyses have revealed critical vulnerabilities in several web-based password managers. An attacker who captures an encrypted vault can mount offline brute-force attacks, attempting decryption with likely master passwords. Standard password-based encryption (PBE) algorithms (e.g., PKCS#5) only produce valid decryptions with the correct master password, allowing the attacker to know when the vault has been cracked. Such attacks are limited only by the attacker's computational resources, and evidence suggests that most master passwords are weak enough to be cracked within minutes or hours.

This situation raises a key question: Can password vaults be encrypted under low-entropy passwords yet resist offline attacks? We define such vaults as cracking-resistant. A cracking-resistant vault would force attackers, even after significant offline efforts, to perform many online login attempts, which would impede the attack and allow service providers to detect and respond to compromised vaults.

### Breaking Kamouﬂage
Kamouﬂage, a previous design for cracking-resistant vaults, aimed to include decoy or honey vaults to force offline attacks to become online. The system stores the true vault and a large number of decoy vaults, each encrypted under different master passwords. The goal is to make an offline attack reveal a set of equally plausible vaults, forcing the attacker to attempt logins with each decrypted password to find the true one. However, our analysis reveals a subtle vulnerability in Kamouﬂage: learning the structure of the true master password from any successfully cracked vault significantly reduces the search space, making the attack more efficient. This flaw means that Kamouﬂage actually degrades security compared to traditional PBE, requiring less total computational effort from the attacker.

### Natural-Language Encoders (NLEs)
To address the challenge of generating realistic decoy vaults, we introduce NLEs. An NLE encodes natural language texts (in this case, lists of human-selected passwords) such that decoding a uniformly selected bit string results in a fresh sample of natural language text. We show how to convert existing natural language processing models, such as n-gram Markov models and PCFGs, into NLEs. These models have been used effectively in password cracking, and our approach allows us to repurpose them to build cracking-resistant vaults. We construct NLEs based on existing models trained from password leaks and evaluate their security by determining whether generated decoys are distinguishable from real passwords. Our experiments show that basic machine-learning attacks do not break our schemes, and even human attackers would face significant manual effort to distinguish real from decoy passwords.

### Full Vault System: NoCrack
We incorporate NLEs into a full encrypted vault service called NoCrack. NoCrack addresses several practical deployment challenges, including concealing website names, incorporating both user-selected and computer-generated passwords, and ensuring user authentication while preventing offline brute-force attacks. We report on a prototype implementation of NoCrack, which will be made public and open-source.

### Summary of Contributions
1. **Breaking Kamouﬂage**: We demonstrate that Kamouﬂage provides less security than traditional PBE schemes.
2. **Natural-Language Encoders (NLEs)**: We introduce NLEs and show how to build them from typical password models, enabling the generation of realistic decoys during brute-force attacks.
3. **Cracking-Resistant Password Vaults**: We use NLEs to develop NoCrack, a password vault system that addresses several previously unexplored challenges in practical deployment.

Due to space constraints, some results and analysis are detailed in the full version of this paper [12].

### II. Background and Existing Approaches
In practice, password vaults are encrypted under a user’s master password using a PBE scheme. The set of passwords is encrypted using authenticated encryption and a KDF, which applies a hash chain to a random salt and the master password. Decryption with an incorrect master password fails, allowing an adversary to mount an offline brute-force attack until the correct password is discovered. Current KDFs prevent precomputation attacks and slow down brute-force attempts, but do not eliminate them. The protection provided by PBE ultimately depends on the resistance of the master password to guessing attacks. Numerous studies have shown that most master passwords are weak, making them vulnerable to offline attacks.

| # of accounts | # unique PWs | Min-entropy (bits) | Avg. PW length | Avg. letters/PW | Avg. digits/PW | Avg. symbols/PW | Letter-only PWs | PWs w/ digits | PWs w/ symbols |
|---------------|--------------|--------------------|----------------|-----------------|----------------|-----------------|-----------------|---------------|-----------------|
| 29.6M         | 2.98M        | 1.3M               | 13.0M          | 5.3             | 6.7            | 7.9             | 7.9             | 5.7           | 5.6             |
| 2.3           | 2.1          | 0.05               | 0.05           | 44.1%           | 43.8%          | 54.0%           | 54.3%           | 3.7%          | 3.7%            |
| 41,537        | 37,136       | 9.1                | 8.5            | 6.4             | 1.8            | 0.3             | 7.0%            | 84.8%         | 10.7%           |
| 442,846       | 342,517      | 8.1                | 8.3            | 6.2             | -              | -               | -               | -             | -               |

This table summarizes the characteristics of password datasets, highlighting the average length, entropy, and composition of passwords, which are crucial for understanding the security of password vaults.