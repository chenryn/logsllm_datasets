::: label
问：
:::
::: data
::: para
优化是否会将系统性能降低到无法接受的程度？
:::
:::
:::
::: answer
::: label
答：
:::
::: data
::: para
本文件描述的技术，大多数都会对系统性能产生明显的影响。如果您选择使用 Red
Hat Enterprise Linux 7
默认值以外的电源管理方式，您应该在电源优化之后对系统性能进行监控，来决定性能损失是否在可接受的范围内。
:::
:::
:::
:::
::: qandaentry
::: question
[⁠]{#overview.html#idm139882408842368}
::: label
问：
:::
::: data
::: para
与消耗的时间和资源相比，优化的结果是否值得？
:::
:::
:::
::: answer
::: label
答：
:::
::: data
::: para
就消耗的时间和费用来说，按照完整的流程手动优化一个系统通常并不值得，因为这些成本远远高于您在单一系统的生命周期中所能获得的好处。另一方面，如果您在办公室使用
10,000
个配置以设置相同的电脑系统，那么，生成一个优化的设置并应用到所有机器上就是事半功倍了。
:::
:::
:::
:::
:::
:::
::: para
下面的章节将解释优化后的硬件性能如何使系统减少电量消耗。
:::
:::
::: section
::: titlepage
# [⁠]{#overview.html#basics}1.2. 电源管理基础 {.title}
:::
[]{#overview.html#idm139882398345600
.indexterm}[]{#overview.html#idm139882353244800 .indexterm}
::: para
有效电源管理是建立在以下原则上的：
:::
[]{#overview.html#idm139882416773296
.indexterm}[]{#overview.html#idm139882400249440 .indexterm}
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
只在需要时唤醒闲置的 CPU
:::
在 Red Hat Enterprise Linux 6 及其之后的版本中，kernel 会运行
"*无计时（tickless）*
"，这意味着之前的定期计时中断被替换为按需求中断。因此，在新任务加入队列之前，闲置
CPU 可以一直保持闲置状态，同时 CPU
也可以在省电模式下保持更长时间。然而，如果系统有应用程序会产生不必要的计时事件，这一功能的好处就会被抵消。查询事件，例如检查磁盘卷册的变动或者鼠标活动，是很好的例子。
:::
::: para
Red Hat Enterprise Linux 7 提供了一些工具，使用这些工具将能根据 CPU
的使用量对应用程序进行识别和编辑。详情请查看〈 [第 2 章
*电源管理审核和分析*](#Audit_and_Analysis.html){.xref} 〉。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
完全禁用不使用的硬件和设备
:::
此原则对于带有移动组件的设备（比如硬盘）尤为重要。另外，有些应用程序可能会使未使用但被激活的设备处于开启（open）状态
；出现这种情况时，kernel
会假定该设备处于使用状态，这样就会阻止设备进入节电状态。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
低活性等于低瓦数
:::
大多数情况下，此原则的实现需要依靠较新的硬件和正确的 BIOS
配置。旧的系统组件经常不支持 Red Hat Enterprise Linux 7
中支持的新功能。请确定您系统使用的是最新的官方固件，且在 BIOS
中的电源管理或者设备配置部分启用了电源管理功能。您需要关注的功能包括：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    SpeedStep
    :::
-   ::: para
    PowerNow!
    :::
-   ::: para
    Cool\'n\'Quiet
    :::
-   ::: para
    ACPI （C 状态）
    :::
-   ::: para
    Smart
    :::
:::
::: para
如果您的硬件支持这些功能，且在 BIOS 中启用，Red Hat Enterprise Linux 7
将默认使用这些功能。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
CPU 状态的不同形式及其效果
:::
现代 CPU 与"*高级配置和电源接口*"（Advanced Configuration and Power
Interface，ACPI）共同提供不同的电源状态。三种不同的状态是：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    睡眠（C 状态）
    :::
-   ::: para
    频率（P 状态）
    :::
-   ::: para
    热输出（T 状态或者 \"热状态\"）
    :::
:::
::: para
以最低休眠状态运行的 CPU
可能会消耗最少的电力，但是若要将其从该状态唤醒，也需要相对较长的时间。在极少数情况下，这会导致
CPU 需要在刚刚进入休眠状态后就马上就要被唤醒。这种情况导致 CPU
一直处于忙碌状态，并在已经使用另一种状态时可能无法节电。
:::
::: para
::: {.title xmlns:d="http://docbook.org/ns/docbook"}
关机后，电量使用量最低
:::
很明显，最佳的节电方法就是关闭系统。例如：您的公司可以发展出注重 "绿色
IT"
的企业文化，让员工有意识地在午休时间或者回家前关闭电脑。您还可以将几台实体服务器合并成一个较大的服务器，并使用我们在
Red Hat Enterprise Linux 7 中附带的虚拟化技术将其虚拟化。
:::
:::
:::
[]{#Audit_and_Analysis.html}
::: chapter
::: titlepage
# [⁠]{#Audit_and_Analysis.html#Audit_and_Analysis}第 2 章 电源管理审核和分析 {.title}
:::
::: section
::: titlepage
# [⁠]{#Audit_and_Analysis.html#Audit_and_analysis_overview}2.1. 审核与分析概述 {.title}
:::
[]{#Audit_and_Analysis.html#idm139882404851072 .indexterm}
::: para
我们通常不会对单一系统进行详细的手动审核、分析以及微调，因为其花费的时间和成本一般都会超过系统微调所带来的好处。但是，在大量基本一致的系统上，可以为所有系统重复使用相同的设置，这种情况下执行这些任务就是非常有用的。例如：一次部署成千上万个桌面系统，或者机器几乎完全一样的
HPC
群集。另一个执行审核和分析的理由是提供进行比较的基准，在将来用它来识别系统行为退化或者改变。在进行硬件、BIOS
或者软件常规更新，同时还要避免电力消耗异常时，这些分析结果非常有用。通常来说，完整的审核和分析可让您对系统的情况有更好的了解。
:::
::: para
审核和分析系统的电力消耗是相当困难的，即使在最先进的系统上也是这样。大多数系统没有提供用于测量电力消耗的软件。不过还是有例外：
Hewlett Packard 服务器系统的 ILO
管理控制台有提供电源管理模块，使用者可以通过网页存取。IBM 在 BladeCenter
电源管理模块中提供了类似的解决方案。在一些 Dell 系统上，"IT
助手"提供了电源监控的功能。其他厂商可能也会为他们的服务器平台提供类似的功能。由此可以看出，没有一种解决方案适用于所有的产品。
:::
::: para
通常只在尽最大可能节约能耗时，才需要直接测量电源消耗。幸运的是，还有其他方法可度量改变是否有效，以及了解系统的行为方式。本章介绍了一些必需的工具。
:::
:::
::: section
::: titlepage
# [⁠]{#Audit_and_Analysis.html#PowerTOP}2.2. PowerTOP {.title}
:::
::: para
无计时 kernel 使得 CPU
能够更常进入闲置状态，以此减少电量消耗、改善电源管理。新
[**PowerTOP**]{.application} 工具会识别经常唤醒 CPU 的特定 kernel
组件和使用者空间应用程序。
:::
::: para
Red Hat Enterprise Linux 7 提供了 2.x 版本的
[**PowerTOP**]{.application}。此版本完全重写了 1.x
版本的基本代码。此版本的使用者界面以标签页为基础并且更加清晰，还广泛使用了
kernel
的"perf"框架来提供更准确的数据。系统装置的电源操作将会被追踪并且被明显地显示出来，这样一来就能快速找出问题。更具有实验性的是，2.x
版本的基本代码包括了一个电源估算引擎，能够显示各个装置和进程消耗的电量。请参阅[图 2.1
"PowerTOP 操作画面"](#Audit_and_Analysis.html#figu-PowerTOP){.xref}。
:::
::: para
若要安装 [**PowerTOP**]{.application} ， 请以 `root`{.systemitem}
身份执行下列命令:
:::
``` screen
yum install powertop
```
::: para
若要运行 [**PowerTOP**]{.application}，请以 `root`{.systemitem}
身份执行下列命令：
:::
``` screen
powertop
```
::: para
[**PowerTOP**]{.application}
能够对系统的电源使用总量进行估算，并显示每个进程、装置、 kernel
工作、计时器以及中断处理程序的耗电量。笔记本电脑在执行这项任务时应该使用电池电源。如果要校准电源估算引擎，请以
`root`{.systemitem} 身份执行下列指令：
:::
``` screen
powertop --calibrate
```
::: para
校准需要时间。这项程序会执行很多测试，还将进行屏幕亮度的循环测试，并将装置开启和关闭。校准期间请勿操作机器。
校准程序完成后， [**PowerTOP**]{.application}
将正常启动。请让它运行约一小时以搜集数据。搜集到足够的数据时，电量估算数据将会显示在第一列。
:::
::: para
如果在笔记本电脑上执行这项命令，请使用电池电源，以便得到所有的数据。
:::
::: para
当它运行时，[**PowerTOP**]{.application}
会从系统搜集数据。在"[**概览**]{.guilabel}"标签页，您可以查看最常唤醒
CPU 或者耗电最多的元件列表 （请参阅[图 2.1 "PowerTOP
操作画面"](#Audit_and_Analysis.html#figu-PowerTOP){.xref}）。相邻的信息栏显示了电源估算、资源使用情况、每秒唤醒次数、元件类别（比如进程、设备或者计时器）以及元件的描述。每秒唤醒次数表明
kernel
的服务或者装置和驱动的效率有多高。唤醒次数越少意味着消耗的电量越低。元件会根据电源使用量能够被优化的程度进行排列。
:::
::: para
调试驱动元件通常需要对 kernel
进行改变，这不在本指南的讨论范畴之内。然而，管理传送唤醒信号的使用者空间进程较为容易。首先，请判断服务或应用是否需要在系统上完全运行。如果不需要，请将它关闭。若要永久停用旧的
System V 服务，请运行：
:::
``` screen
systemctl disable servicename.service
```
::: para
若要了解关于此程序的详细信息，请以 `root`{.systemitem}
身份运行以下指令：
:::
``` screen
ps -awux | grep processname
strace -p processid
```
::: para
如果追踪记录显示它正在重复执行，它可能是一个忙碌的循环。修正这种错误通常需要修改元件中的代码。
:::
::: para
正如[图 2.1 "PowerTOP
操作画面"](#Audit_and_Analysis.html#figu-PowerTOP){.xref}
所述，电源消耗总量和电池剩余电量（若存在）将会被显示。下面是一个简短的概要，包含了每秒唤醒次数总量、每秒
GPU
操作量，以及每秒虚拟文件系统操作量。屏幕剩下的部分是一个包含进程、中断、设备和其它资源的列表，它们是根据使用量排列的。若经过正确校准，每一个列出的项目的电量消耗估算值也会显示在第一栏。
:::
::: para
使用 [**Tab**]{.keycap} 和 [**Shift**]{.keycap}+[**Tab**]{.keycap}
按键来循环浏览标签页。在 [**Idle stats**]{.guilabel}
页面，会显示所有处理器和核心的 C 状态的使用情况。在 [**Frequency