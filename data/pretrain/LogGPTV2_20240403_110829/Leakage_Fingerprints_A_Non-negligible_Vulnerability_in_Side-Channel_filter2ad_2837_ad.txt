with high probability. Otherwise it would cause a signiﬁcant
degradation in attacking performance, mainly the number of
traces needed to extract the ﬁnal secret key.
5. EXPERIMENTS AND DISCUSSION
In this section, we mainly present some details and
experimental results of our attacking schemes by using the
power traces publicly provided by the DPA contest v4.2
committee. Besides, we also compare our schemes with other
ones available in the oﬃcial website from the aspects of both
attacking process and performance overhead.
5.1 Experiments and Ofﬁcial Evaluation
The measurement of all the oﬃcial power traces is com-
pleted on a 8-bit AVR microcontroller Atmega163 embedded
in a smartcard. It contains 16Kb of in-system programmable
ﬂash, 512 bytes of EEPROM, and 32 general purpose
working registers. The acquisition of traces is performed
through a LeCroy WaveRunner 6100A oscilloscope by the
use of an EM probe. The sampling rate FS equals to 500
MS/s and the acquisition bandwidth is 200 MHz.
The oﬃcial committee holds totally two sets of data, one
for participants which is publicly available and the other
for performance evaluation which keeps secret. The public
set provides 16 groups of power traces corresponding to 16
diﬀerent master key of AES-128. Every single group contain-
s 5000 traces and each of them comprises 1704402 voltage
sample values representing the power consumption during
815Figure 5: Bypassing ﬂaws in the last round
10 rounds of RSM2.0 encryption. Besides, some information
which corresponds to each single trace is also oﬀered at the
same time, containing the plaintext, ciphertext, master key,
shuﬄe0 array, shuﬄe10 array, oﬀset array etc. The whole set
is provided for attackers to perform data preprocessing, such
as SNR evaluation,
interesting points selection, template
building and so on, thus making preparation for the online
attack against private data set later on.
On the contrary, the private data set is transparent to
all the attackers and employs the Success Rate (SR) and
Guessing Entropy (GE) proposed in [20] as primary metrics
to compare diﬀerent schemes under the same framework.
According to the evaluation parameters in the oﬃcial web-
site, at most 1000 private traces are utilized to estimate the
eﬃciency of each attack and the mean time of processing
each power trace is also taken into consideration to assess the
computational overhead of the scheme. As for the evaluation
platform, all the evaluations are performed equally on an
Intel Xeon CPU E7-8837 at 2.67 GHz with 256 GB of RAM.
Based on the vulnerabilities described in section 3 and
section 4, a dozen of attacks can be launched and we
implement two of them as examples and submit both ones
to the v4.2 committee for oﬃcial evaluation.
We ﬁrst divide 16 public groups of traces into two
sets, one for template learning and the other for accuracy
validation. Then both mask and oﬀset ﬁngerprints are
utilized to recover the oﬀset array respectively with the
help of the classic template attack [6]. We perform the
identiﬁcation experiment of oﬀset array with 1200 real
traces randomly selected from the validation data set (200
traces in each group) and present the identiﬁcation accuracy
in Table 8 and Table 9. As the leakage level for each
oﬀset byte varies markedly, the simple accuracy average
of diﬀerent bytes doesn’t make much sense. Thus only
the accuracy for the smallest leakage byte is presented.
Two tables clearly demonstrate that even in the worst
case, with either the mask or oﬀset leakage ﬁngerprint, the
identiﬁcation of full length ﬁngerprint holds one hundred
percent accuracy, turning RSM2.0 into a unprotected AES-
128 implementation almost equivalently.
After the whole oﬀset array used in each trace is revealed
without deviation, we bypass the shuﬄe countermeasure by
launching either CPA [4] or TA aiming at the intermediate
values of the last round shown in 4.2, where it’s now an
equivalent attacking scenario against unprotected imple-
mentation. Thus the last round key can be easily recovered
and used to derive the master key due to the reversible key
Length
Accur.
Length
Accur.
1
17.5%
7
2
55%
8
3
4
5
6
66.8% 80% 84.8% 92.5%
9
10
11
99.8% 99.8% 100% 100% 100%
Table 8: Average identiﬁcation accuracy for single
mask byte by using mask ﬁngerprint.
Length
Accur.
Length
Accur.
1
27%
7
2
3
4
5
6
63.7% 83.2% 87.3% 97% 97.8%
8
9
10
11
98.3% 98.8% 98.8% 100% 100%
Table 9: Average identiﬁcation accuracy for single
oﬀset byte by using oﬀset ﬁngerprint.
schedule process of AES-128. Figure 6 shows the oﬃcial
evaluation results of our TA-CPA and TA schemes with
regard to the most critical metric, the Global Success Rate
(GSR). It demonstrates that two schemes proposed by us are
both able to extract the master key. Besides, the eﬃciency
of our two schemes also stands out among others. For TA-
CPA attack, 11 traces are needed to crack RSM2.0 with 80%
GSR and 8 traces are enough to reduce the maximum PGE
under 10. As for TA scheme, only 4 traces are required to
reach a GSR of 80% and 2 traces are suﬃcient to meet the
target of max PGE below 10.
From the perspective of running time, less than 200 and
100 microseconds are required by two schemes respectively
to perform the crack of masking defense and complete
the follow-up key recovery process in each trace, thus
further verifying the feasibility and lightweight feature of
our schemes.
5.2 Comparison with Other Schemes
Up to the submission of this article, ﬁve other attacks
have been uploaded for v4.2 competition and successfully
evaluated by the oﬃcial committee. However, to the best
of our knowledge, no articles are written to explain their
schemes in detail and we are only able to have a glimpse of
them through the brief description uploaded by each team.
According to the description available in the website [2],
all ﬁve schemes follow the process of recovering oﬀset array
ﬁrstly and performing the master key extraction secondly.
Among them, three schemes from two anonymous attackers
and Yang Li et al.
explicitly state the need of extra
shuﬄe0 recovery for the sake of utilizing the attacking
816(a) Global Success Rate for TA-CPA attack.
(b) Global Success Rate for TA attack
Figure 6: Oﬃcial evaluation results of GSR.
point of masked S-box output. Another scheme from Hideo
Shimizu et al. makes no description of whether shuﬄe
countermeasure is attacked and thus we skip the discussion
of it. The only scheme which clearly states the process of
shuﬄe bypass comes from Zdenek Martinasek. However,
Figure 4 clearly illustrates the shuﬄed ShiftRows operation
implemented in the source code which means it is impossible
to attack the ShiftRows as expected. The reason why they
launch a success attack on RSM2.0 by using 104 power
traces may lie in the actual exploitation of the leakage from
MixColumns operation as explained in subsection 4.1.
By comparison, our scheme is unique and unusual, which
reveals the oﬀset array with three ﬁngerprints, and bypasses
the shuﬄe countermeasure both in the ﬁrst and last round
by exploiting several potential attacking points discovered.
From the perspective of performance evaluation, the best
scheme of ours requires only 4 traces to reveal the secret key
with 80% Global Success Rate (GSR) which surpasses all the
other schemes mentioned above and 2 traces are enough to
reduce the Maximum Partial Guessing Entropy (Max PGE)
under 10 candidates which means a remaining key guessing
space less than 1016 for the AES-128 master key.
6. CONCLUSIONS
Leakage ﬁngerprint presented in this article is a signiﬁcant
security risk and should be taken seriously. Although we
discuss it under RSM2.0 background, the general framework
proposed in section 3 will make it a wide spread threat
against most of the mask schemes especially LEMS where
the masks in the limited subset are reused regularly resulting
in the exploitable ﬁngerprints stealthily.
Besides, as a nonlinear transformation, S-box operation
has long been considered as a preferred attacking point for
key recovery and is usually taken seriously and implemented
under strict protection. However, we show that focusing
only on the protection of S-box execution doesn’t make
any sense due to the feasible bypassing attacks by utilizing
additional attacking points.
Finally, we should explain that, though RSM2.0 mainly
focuses on counteracting non-proﬁled attacks, the limitation
has little inﬂuence on our attack framework. By applying
CPA to directly measure the similarity between Tf p and Gf p
, our ﬁngerprint identiﬁcation framework still works though
it may cause some loss of identiﬁcation accuracy.
7. ACKNOWLEDGEMENT
This work is partially supported by National 863 Program
under award No.2013AA01A214 and National 973 Program
of China under award No.2013CB338001. Besides, the work
is also supported by a grant from the National Natural
Science Foundation of China (No.61402470).
8. REFERENCES
[1] Implementation of the dpa contest v4.2 on the atmel
atmega-163 smart card. http:
//www.dpacontest.org/v4/data/v4 2/smart v42 2.zip.
[2] Other attacks submitted in the oﬃcail website.
http://www.dpacontest.org/v4/42 hall of fame.php.
[3] S. Bhasin, N. Bruneau, J.-L. Danger, S. Guilley, and
Z. Najm. Analysis and improvements of the dpa
contest v4 implementation. In Security, Privacy, and
Applied Cryptography Engineering, pages 201–218.
Springer, 2014.
[4] E. Brier, C. Clavier, and F. Olivier. Correlation power
analysis with a leakage model. In Cryptographic
Hardware and Embedded Systems-CHES 2004, pages
16–29. Springer, 2004.
[5] C. Carlet and S. Guilley. Side-channel
indistinguishability. In Proceedings of the 2nd
International Workshop on Hardware and
Architectural Support for Security and Privacy,
page 9. ACM, 2013.
[6] S. Chari, J. R. Rao, and P. Rohatgi. Template attacks.
In Cryptographic Hardware and Embedded
Systems-CHES 2002, pages 13–28. Springer, 2003.
[7] J.-S. Coron and L. Goubin. On boolean and
arithmetic masking against diﬀerential power analysis.
In Cryptographic Hardware and Embedded
Systems (cid:44)a(cid:32)lCHES 2000, pages 231–237. Springer, 2000.
[8] G. Fumaroli, A. Martinelli, E. Prouﬀ, and M. Rivain.
Aﬃne masking against higher-order side channel
analysis. In Selected Areas in Cryptography, pages
262–280. Springer, 2011.
[9] C. Herbst, E. Oswald, and S. Mangard. An aes smart
card implementation resistant to power analysis
attacks. In Applied cryptography and Network security,
pages 239–252. Springer, 2006.
817APPENDIX
A.
16 GUESSING FINGERPRINTS FOR MASK
IDENTIFICATION
r = 0
2
2
2
2
4
4
4
4
4
4
4
4
6
6
6
6
Gf p(M [0])
Gf p(M [1])
Gf p(M [4])
Gf p(M [10])
Gf p(M [3])
Gf p(M [9])
Gf p(M [2])
Gf p(M [8])
Gf p(M [7])
Gf p(M [6])
Gf p(M [12])
Gf p(M [13])
Gf p(M [15])
Gf p(M [5])
Gf p(M [11])
Gf p(M [14])
1
2
4
6
6
2
2
4
4
4
4
4
6
2
4
4
6
2
4
4
4
4
6
6
2
2
4
4
6
6
2
4
4
2
3
4
2
4
4
4
4
6
6
2
4
6
2
4
4
6
2
4
2
6
4
6
4
4
4
4
6
2
2
2
4
4
6
4
5
6
4
4
6
4
6
4
4
4
6
2
4
2
2
2
4