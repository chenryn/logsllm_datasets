# Title: PERM: Practical Reputation-Based Blacklisting without Trusted Third Parties (TTPs)

## Authors:
- Man Ho Au, School of Computer Science and Software Engineering, University of Wollongong, Wollongong, NSW, Australia
- Apu Kapadia, School of Informatics and Computing, Indiana University, Bloomington, IN, USA

## Abstract
Anonymity can enable users to engage in malicious activities, such as defacing webpages on Wikipedia or posting offensive comments on YouTube. To mitigate such abuse, several anonymous credential schemes have been proposed that revoke access for misbehaving users while preserving their anonymity, without the need for a trusted third party (TTP). Recently, we introduced BLACR, a TTP-free scheme that supports reputation-based blacklisting, allowing service providers to score users' anonymous sessions and deny access to those with insufficient reputation.

However, BLACR's computational overhead is linearly dependent on the size of the reputation list, limiting its practicality to a few thousand user sessions. We propose PERM, a revocation-window-based scheme that makes computation independent of the reputation list size, thereby supporting millions of user sessions and making reputation-based blacklisting feasible for large-scale deployments.

## Categories and Subject Descriptors
K.6.5 [Operating Systems]: Security and Protectionâ€”Authentication; E.3 [Data Encryption]: Public key cryptosystems

## Keywords
accountable anonymity, anonymous blacklisting, revocation

## 1. Introduction
Anonymous access to services can be valuable in many contexts, such as allowing journalists and activists to avoid censorship and persecution. However, this anonymity can also be abused, leading to issues like webpage defacement and the posting of inappropriate content. In response, service providers (SPs) may ban access through anonymizing networks like Tor.

### Anonymous Blacklisting and Subjective Judging
To address these issues, several credential schemes for accountable anonymity have been proposed. These schemes support subjective judging, allowing SPs to flag behaviors as inappropriate. This is useful in applications where defining misbehavior mathematically is challenging. Anonymous blacklisting ensures that users can be blocked while maintaining their anonymity, thus holding them accountable without the risk of arbitrary deanonymization.

### TTP vs. TTP-Free Schemes
Several approaches to anonymous blacklisting involve a trusted third party (TTP), such as group signature-based schemes with a group manager who can revoke access. Nymble schemes also feature a TTP, which undermines the users' trust in their anonymity. To eliminate this point of trust, TTP-free schemes have been developed, including BLAC and PEREA. BLAC requires users to prove in zero knowledge that they are not on the blacklist, resulting in linear authentication times. PEREA improved this by using a revocation window, but still has limitations in scalability and performance.

### TTP-Free Reputation-Based Blacklisting
BLACR, an extension of BLAC, introduced reputation-based blacklisting, allowing SPs to score user sessions and set policies based on these scores. However, BLACR's performance is limited due to its linear dependence on the reputation list size. PERM addresses these limitations by introducing a memory mechanism, enabling persistent reputation scores and more efficient authentication.

## Our Contributions
- **Persistence of Reputation Scores**: PERM adds memory to the revocation window model, allowing scores to persist over time.
- **Free Reputation Upgrades**: Users can voluntarily update their reputation scores, even outside the revocation window.
- **Multiple Scores per Session**: A single session can be scored under multiple categories, providing more flexibility.
- **Efficient Authentication**: PERM requires constant computation at the user end, making it much more efficient than BLACR and PEREA.
- **Efficient Server Computation**: The SP's computational overhead is independent of the reputation list size, remaining efficient even for large lists.

## Paper Outline
- **Section 2**: Overview of the system goals and our approach with PERM.
- **Section 3**: Full cryptographic construction of PERM.
- **Section 4**: Quantitative analysis of PERM.
- **Section 5**: Discussion of various issues.
- **Section 6**: Conclusion.
- **Appendix**: Security model and proof of security for PERM.

## 2. Overview
### System Goals and Approach
Service Providers (SPs) issue credentials to users, who can then authenticate anonymously. SPs record transaction identifiers with each authenticated session and use these to assign reputation scores. These scores are recorded in a reputation list, and SPs can specify authentication policies based on boolean combinations of reputation thresholds across categories. Users authenticate by proving they satisfy the policy with respect to the reputation list.

### Authentication Policies
Policies are of the form \(\bigvee_{l=1}^L \left( \bigwedge_{j=1}^J P_{lj} \right)\), where each conjunctive clause includes sub-policies \(P_{lj}\) for different categories. Each sub-policy \(P_{lj}\) specifies a range \([\zeta_{lj}, \eta_{lj}]\) for the user's reputation in category \(j\). Not all categories need to be covered in each clause, and \(P_{lj}\) is set to \(\bot\) if a sub-policy for that category is skipped.

### Security Goals
- **Authenticity**: SPs accept authentications only from users who satisfy the authentication policy, ensuring collusion resistance.
- **Anonymity**: SPs can only infer whether the user satisfies the authentication policy, regardless of future actions.
- **Non-frameability**: Users satisfying the authentication policy can always successfully authenticate to honest SPs.

### PERM: Conceptual Approach
PERM maintains a queue of the user's K most recent transaction identifiers. The user uses this queue to prove in zero knowledge that their reputation scores, with respect to these transaction identifiers and the reputation list, satisfy the authentication policy. The authentication time at the server is linear in the size of the revocation window, making it efficient and scalable.

---

This revised version aims to provide a clearer, more professional, and coherent presentation of the paper's content.