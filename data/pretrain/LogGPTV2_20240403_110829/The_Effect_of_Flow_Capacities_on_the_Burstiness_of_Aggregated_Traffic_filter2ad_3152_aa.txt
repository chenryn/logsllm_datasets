title:The Effect of Flow Capacities on the Burstiness of Aggregated Traffic
author:Hao Jiang and
Constantinos Dovrolis
The Eﬀect of Flow Capacities on the Burstiness
of Aggregated Traﬃc(cid:1)
Hao Jiang and Constantinos Dovrolis
College of Computing, Georgia Tech
{hjiang,dovrolis}@cc.gatech.edu
Abstract. Several research eﬀorts have recently focused on the burstin-
ess of Internet traﬃc in short, typically sub-second, time scales. Some
traces reveal a rich correlation structure in those scales, while others in-
dicate uncorrelated and almost exponential interarrivals [1]. What makes
the Internet traﬃc bursty in some links and much smoother in others?
The answer is probably long and complicated, as burstiness in short sca-
les can be caused by a number of diﬀerent application, transport, and
network mechanisms. In this note, we contribute to the answer of the
previous question by identifying one generating factor for traﬃc burstin-
ess in short scales: high-capacity ﬂows. Such ﬂows are able to inject large
amounts of data to the network at a high rate. To identify high-capacity
ﬂows in a network trace, we have designed a passive capacity estimation
methodology based on packet pairs sent by TCP ﬂows. The methodo-
logy has been validated with active capacity measurements, and it can
estimate the pre-trace capacity of a ﬂow for about 80% of the TCP bytes
in the traces we analyzed. Applying this methodology to Internet traces
reveals that, if a trace includes a signiﬁcant amount of traﬃc from high-
capacity ﬂows, then the trace exhibits strong correlations and burstiness
in short time scales.
1 Introduction
The (layer-3) capacity of a network link is deﬁned as the maximum IP-layer
throughput that that link can deliver [2]. The capacity of a network path, C, is
deﬁned as the minimum capacity of the links that constitute that path. Consider
a packet trace T collected at a network link LT (“vantage point”). Suppose that
f is a TCP ﬂow in T , and that S f is the ﬂow’s source. The capacity of the path
between S f and LT is referred to as the pre-trace capacity Cp of ﬂow f. Notice
that Cp≥C, and so the pre-trace capacity can be viewed as an upper-bound,
(cid:1) This work was supported by the “Scientiﬁc Discovery through Advanced Computing”
program of the US Department of Energy (award number: DE-FG02-02ER25517),
by the “Strategic Technologies for the Internet” program of the US National Science
Foundation (award number: 0230841), and by an equipment donation from Intel. Any
opinions, ﬁndings, and conclusions or recommendations expressed in this material
are those of the authors and do not necessarily reﬂect the views of the previous
funding sources.
C. Barakat and I. Pratt (Eds.): PAM 2004, LNCS 3015, pp. 93–102, 2004.
c(cid:1) Springer-Verlag Berlin Heidelberg 2004
94
H. Jiang and C. Dovrolis
potentially tight, of the path capacity. This is important, especially when the
latter cannot be estimated accurately from passive measurements at the vantage
point.
Our primary objective in this paper is to examine the eﬀect of ﬂow capacities
on the burstiness of aggregated Internet traﬃc. To do so, however, we ﬁrst need to
estimate C, or at least Cp, for the ﬂows that constitute T . There are several path
capacity estimation techniques and tools, such as [3,4,5], but they are based on
active measurements. With passive measurements, on the other hand, we are only
given a packet trace from a network link. Two passive approaches to estimate
the capacity of TCP ﬂows from end-host traces are Paxson’s PBM methodology
[6] and Lai’s nettimer [7]. The problem that we consider is diﬀerent, however,
because we estimate the capacity of a TCP ﬂow from a uni-directional trace
collected at a vantage point in the network, rather than at the sender or receiver
of the ﬂow.
The dispersion of two successive packets of the same ﬂow at a network link is
the time spacing (interarrival) between the last bit of those packets. Our passive
capacity estimation technique is based on packet pair dispersion analysis [4].
However, it diﬀers signiﬁcantly from the technique presented in [4] in two major
ways. First, active capacity probing always sends back-to-back packet pairs, with
the two packets of each pair having equal size. In passive capacity estimation, we
do not know whether two successive packets were sent back-to-back, and they
may not have the same size. Second, in passive capacity estimation we need to
diﬀerentiate between the end-to-end capacity and the pre-trace capacity. As will
be explained in the next section, both capacities may be visible in the distribution
of packet pair dispersions of a TCP ﬂow.
The paper structure is as follows. The pre-trace capacity estimation metho-
dology is given in Section II. That methodology has been validated with active
measurements, as summarized in Section III. Section IV presents measurements
of pre-trace capacity distributions from various traces. The connection between
ﬂow capacities and traﬃc burstiness is shown in Section V.
2 Pre-trace Capacity Estimation
Our pre-trace capacity estimation methodology is applicable only to TCP data
ﬂows. We expect that a TCP data ﬂow will include several packet pairs, meaning
two successive packets sent back-to-back, due to the delayed-ACK algorithm.
Based on that algorithm, a TCP receiver should typically acknowledge every
second packet, and so the sender responds to every ACK with at least two back-
to-back packets (as long as it has data to send).
Consider a TCP ﬂow with pre-trace capacity Cp and path capacity C. In
the following, we illustrate that both capacities would be measurable from the
dispersion of successive TCP packets, when there is no cross traﬃc. In the pre-
sence of cross traﬃc, however, it may not be possible to estimate C. To simplify
the following example, we assume that the dispersion of ACKs is not aﬀected by
The Eﬀect of Flow Capacities on the Burstiness of Aggregated Traﬃc
95
queueing in the reverse path, and that the sender and receiver do not introduce
delays in the transmission of data packets and ACKs.
(cid:2)
k, Dk+1, D
In Figure 1(a) and 1(b), we show the sequence of successive data packets (. . .,
(cid:2)
k+1, . . .), as well as the corresponding ACKs (. . ., Ak, Ak+1, . . .),
Dk, D
assuming that the dispersion of the TCP ﬂow’s packets is not aﬀected by cross
traﬃc. In round i, the sender S sends a window of Wi packets of size L back-to-
back. These packets arrive at the receiver R with a dispersion L/C. The receiver
responds to every second packet, and so the ACK dispersion is 2L/C. Upon
receiving the ﬁrst ACK of round i, the sender starts the next round i + 1. For
each new ACK received, the sender replies with two more back-to-back packets,
plus any additional packets due to window increases. If Cp=C, the dispersion
of successive packets at the vantage point is L/C, as shown in Figure 1(a). If
(cid:2)
k is L/Cp, while the dispersion
Cp>C, the dispersion between packets Dk and D
between packets D
Cp >L/Cp. So, within a single round, and
if there is no queueing due to cross traﬃc, the dispersion of successive packets at
the vantage point is directly determined by either Cp, or by C and Cp. In that
case, it would be relatively simple to estimate both capacities from the location
of the two major modes in the distribution of dispersion measurements.
(cid:2)
k and Dk+1 is 2L
C − L
In practice, however, the dispersion of TCP data packets is often aﬀected
by cross traﬃc queueing. Furthermore, increased dispersions in round i can also
aﬀect the dispersions in round i + 1. Figure 1(c) illustrates this scenario. Cross
traﬃc is introduced at the narrow link in round i, increasing the dispersion
between two successive packets to a value X that is unrelated to C and Cp. The
dispersion X can be propagated to round i + 1, even if there is no cross traﬃc
queueing in that round. On the other hand, even with cross traﬃc queueing,
every new ACK at the sender still triggers the transmission of a back-to-back
packet pair. So, we expect that about 50% of the data packets are sent back-
to-back, and so their dispersion at the vantage point is independent of previous
rounds. The dispersion of packets triggered by diﬀerent ACKs, however, is more
susceptible to cross traﬃc queueing, because those dispersions are correlated
from round to round. Consequently, we expect that the analysis of a TCP trace
will provide a strong mode at the dispersion L/Cp, even in the presence of cross
C − L
traﬃc queueing, but it may not create a strong mode at the dispersion 2L
Cp .
This explains why we focus on the estimation of the pre-trace capacity Cp, rather
than on the end-to-end capacity C. In the following, when we refer to “capacity
estimation” we mean pre-trace capacity estimation.
Figure 2 shows the distribution of packet interarrivals for two bulk TCP
ﬂows. The interarrivals are normalized by L/100Mbps, where L is the size of the
second packet, and then rounded to the nearest integer. Figure 2(a) represents
the case Cp=C, with C≈100Mbps. Note that about 90% of the interarrivals are
concentrated in a single mode around the dispersion that corresponds to the ca-
pacity. In Figure 2(b), on the other hand, there are two distinct modes. The ﬁrst
represents about 50% of the interarrivals and it corresponds to Cp≈100Mbps.
The second mode represents about 40% of the interarrivals, and it probably cor-
responds to the capacity C≈1.3Mbps. In practice, it is often the case that even
96
H. Jiang and C. Dovrolis
Vantage point
Round i:
D2’
D2
D1’
D1
D2’
D2
D1’
D1
S
C p
L
C
L
C
A1
A2
2L
C
Round i+1:
D4’’
D4’
D4
D3’
D3
S
C p
R
R
L
C
L
C
D4’’
D4’
D4
D3’
D3
L
C
L
C
packet seen at vantage point
ACK generated by receiver
C
C
C
C
R
R
R
R
Round i:
S
Round i+1:
S
Round i:
S
Round i+1:
S
L
C
L
C
A3
A4
(a) Cp = C (w/o cross traffic)
2L
C
Vantage point
D2’
D2
D1’
D1
L
C p
L
C p
A1
A2
D4’’ D4’ D4
D3’
D3
2L
C
C p
C p
D2’
D2
D1’
D1
L
C
L
C
D4’’
D4’
D4
D3’
D3
L
C p
L
C p
2L
C
A3
A4
L
C
L
C
(b) Cp > C (w/o cross traffic)
2L
C
Vantage point
C p
C p
D2’
D2
D1’ D1
Cross traffic
D2’
D2
D1’
D1
L
C p
L
C p
A1
X + 
L
C
C
A2
L
C
X
L
C
D4’’ D4’ D4
D3’
D3
D4’’
D4’
D4
D3’
D3
L
C p
L
C p
X + 
L
C
C
A3
A4
L
C
X
L
C
X + 
(c) Cp > C (with cross traffic)
L
C
Fig. 1. TCP data and ACK dispersion sequences in three typical scenarios.
though a single mode with about 50% of the interarrivals is clearly visible, a
second strong mode cannot be detected.
The capacity estimation technique is as follows. For a TCP ﬂow f, let Pf (i)
be the size of the i’th data packet, and ∆f (i) be the dispersion between packets i
and i+1. If packets i and i+1 have the same size, we compute a capacity sample
bi = Pf (i)/∆f (i). Note that packets with diﬀerent sizes traverse the network with
diﬀerent per-hop transmission latencies, and so they should not be used by the
packet pair technique [4]. As explained in the previous paragraph, we can assume
The Eﬀect of Flow Capacities on the Burstiness of Aggregated Traﬃc
97
)
%
(
F
D
C
100
80
60
40
20
0
0
4
16
Interarrival time (normalized by L/Cp)
12
8
100
80
60
40
20
)
%
(
F
D
C
20
0
0
20
40
60
80
Interarrival time (normalized by L/Cp)
100
120
140
160
(a) Cp=C=100Mbps
(b) Cp=100Mbps, C=1.3Mbps
Fig. 2. Cumulative distribution of normalized packet interarrivals
that about 50% of the data packets are sent back-to-back due to the delayed-
ACK algorithm, and so they can be used in capacity estimation. The rest of the
packets may have been sent with a larger dispersion than L/Cp, and so they can
underestimate Cp. Based on this insight, we sort the capacity samples of ﬂow f
and drop the lower 50% of them. To estimate Cp, we employ a histogram-based
technique to identify the strongest mode among the remaining capacity samples.
The center of the strongest mode gives the ﬁnal capacity estimate ˜Cf . The bin
width that we use is ω = 2(IRQ)
(known as “Freedman-Diaconis rule”), where
K1/3
IRQ and K is the interquartile range and number, respectively, of the capacity
samples.
The algorithm does not produce estimates for interactive ﬂows, ACK ﬂows,
and ﬂows with just a few data packets. For such ﬂows, the number of packet pairs
can be small and the detection of a capacity mode is quite prone to statistical
errors.
3 Validation
We have validated the previous passive estimation technique with active mea-
surements. Speciﬁcally, we send a ﬁle of size Y with scp from various sources
around the Internet to a destination at Georgia Tech. At the same time, we
collect a trace of TCP data packets using tcpdump at the destination host. The
trace is then used to estimate passively the capacity of the corresponding path.
We also measure the capacity of the same path using pathrate [4]. Since the trace
is collected at the end host, the pre-trace capacity is equal to the end-to-end ca-
pacity in these experiments. To show the eﬀect of the ﬂow size on the accuracy
of the estimation technique, we repeat each experiment for three values of Y :
40KB, 110KB, and 750KB.
Table 1 shows the results of some validation experiments. The passive and
capacity estimates are reasonably close, and they correspond to common capacity
values such as 256Kbps (upstream DSL), 1.5Mbps (T1), 10Mbps (Ethernet), and
98
H. Jiang and C. Dovrolis
100Mbps (Fast Ethernet). Passive estimation with larger ﬂows obviously helps,
even though the results with the 40KB ﬂows are not too inaccurate either.
Table 1.
Name
Location
Sweden
lulea.ron.lcs.mit.edu
MIT
mazu1.ron.lcs.mit.edu
UCSD
magrathea.caida.org
U-Delaware
diple.acad.ece.udel.edu
U-Utah
aros.ron.lcs.mit.edu
thalis.cs.unipi.gr
Greece
dsl-64-192-141-41.telocty.com Atlanta
Passive estimate (Mbps) Pathrate
750KB 110KB 40KB (Mbps)
99-101
96-97
94-96
1.4-1.5 1.5-1.7
93-95