    软件包。
-   IdM 中已存在您想要引用的用户。如需有关确保用户使用 Ansible
    [存在用户的详细信息，请参阅使用 Ansible playbook
    管理用户帐户](#managing-user-accounts-using-Ansible-playbooks_using-ansible-to-install-and-manage-idm.html "第 7 章 使用 Ansible playbook 管理用户帐户"){.link}。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  使用必要的用户和组信息创建一个 Ansible playbook 文件：
    ``` programlisting
    ---
    - name: Playbook to handle groups
      hosts: ipaserver
      become: true
      tasks:
      - name: Create group ops with gid 1234
        ipagroup:
          ipaadmin_password: MySecret123
          name: ops
          gidnumber: 1234
      - name: Create group sysops
        ipagroup:
          ipaadmin_password: MySecret123
          name: sysops
          user:
          - idm_user
      - name: Create group appops
        ipagroup:
          ipaadmin_password: MySecret123
          name: appops
      - name: Add group members sysops and appops to group ops
        ipagroup:
          ipaadmin_password: MySecret123
          name: ops
          group:
          - sysops
          - appops
    ```
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/add-group-members.yml
    ```
:::
::: title
**验证步骤**
:::
您可以使用 `ipa group-show`{.literal} 命令验证 [**ops**]{.strong}
组是否包含 [**sysops**]{.strong} [**和 appops**]{.strong}
作为直接成员，[**idm_user**]{.strong} 作为间接成员：
::: orderedlist
1.  以管理员身份登录到 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  显示关于 [*ops*]{.emphasis} 的信息：
    ``` literallayout
    ipaserver]$ ipa group-show ops
      Group name: ops
      GID: 1234
      Member groups: sysops, appops
      Indirect Member users: idm_user
    ```
    IdM 中已存在 [**appops**]{.strong} [**和 sysops**]{.strong}
    [**组，后者包括 idm_user**]{.strong} 用户。
:::
::: itemizedlist
**其它资源**
-   有关确保存在使用 Ansible 的用户组的更多信息，请参阅
    `/usr/share/doc/ansible-freeipa/README-group.md`{.literal} Markdown
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-user-groups-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-presence-of-member-managers-in-idm-user-groups-using-ansible-playbooks_managing-user-groups-using-ansible-playbooks}使用 Ansible playbook 确保 IdM 用户组中存在成员管理器 {.title}
:::
以下流程描述了使用 Ansible playbook 确保存在 IdM
成员管理器（用户和用户组）。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您必须具有要添加为成员管理器的用户名以及您要管理的组的名称。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  使用必要的用户和组成员管理信息创建一个 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Playbook to handle membership management
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure user test is present for group_a
        ipagroup:
          ipaadmin_password: MySecret123
          name: group_a
          membermanager_user: test
      - name: Ensure group_admins is present for group_a
        ipagroup:
          ipaadmin_password: MySecret123
          name: group_a
          membermanager_group: group_admins
    ```
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/add-member-managers-user-groups.yml
    ```
:::
::: title
**验证步骤**
:::
您可以使用
`ipa group-show 命令验证 group_a 组是否包含 test 作为成员管理器，而  group_admins 是否是 group _a`{.literal}
的成员管理器：
::: orderedlist
1.  以管理员身份登录到 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  显示 [*managergroup1*]{.emphasis} 的信息：
    ``` literallayout
    ipaserver]$ ipa group-show group_a
      Group name: group_a
      GID: 1133400009
      Membership managed by groups: group_admins
      Membership managed by users: test
    ```
:::
::: itemizedlist
**其它资源**
-   请参阅 `ipa host-add-member-manager --help`{.literal}。
-   请参阅 `ipa`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#managing-user-groups-using-ansible-playbooks_using-ansible-to-install-and-manage-idm.html#ensuring-the-absence-of-member-managers-in-idm-user-groups-using-ansible-playbooks_managing-user-groups-using-ansible-playbooks}使用 Ansible playbook 确保 IdM 用户组中没有成员管理器 {.title}
:::
以下流程描述了在使用 Ansible playbook 时确保 IdM
成员管理器（用户和用户组）不存在。
::: itemizedlist
**先决条件**
-   您知道 IdM 管理员密码。
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。
-   您必须具有要删除的现有成员管理器用户或组的名称，以及它们要管理的组的名称。
:::
::: orderedlist
**流程**
1.  创建一个清单文件，如 `inventory.file`{.literal}，并在该文件中定义
    `ipaserver`{.literal} ：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
2.  使用必要的用户和组成员管理信息创建一个 Ansible playbook 文件：
    ``` programlisting
    ---
    - name: Playbook to handle membership management
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure member manager user and group members are absent for group_a
        ipagroup:
          ipaadmin_password: MySecret123
          name: group_a
          membermanager_user: test
          membermanager_group: group_admins
          action: member
          state: absent
    ```
3.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i path_to_inventory_directory/inventory.file path_to_playbooks_directory/ensure-member-managers-are-absent.yml
    ```
:::
::: title
**验证步骤**
:::
您可以使用
`ipa group-show 命令验证 group_a 组是否不包含作为成员管理器和 group_admins 作为 group_a 的成员`{.literal}
管理器 [**的测试**]{.strong} ：
::: orderedlist
1.  以管理员身份登录到 `ipaserver`{.literal} ：
    ``` literallayout
    $ ssh PI:EMAIL
    Password:
    [admin@server /]$
    ```
2.  显示 group_a 的信息：
    ``` literallayout
    ipaserver]$ ipa group-show group_a
      Group name: group_a
      GID: 1133400009
    ```
:::
::: itemizedlist
**其它资源**
-   请参阅 `ipa host-remove-member-manager --help`{.literal}。
-   请参阅 `ipa`{.literal} man page。
:::
:::
:::
[]{#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm.html}
::: chapter
::: titlepage
# []{#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm}第 9 章 使用 Ansible playbook 管理 IdM 中的自助服务规则 {.title}
:::
本节介绍 Identity Management(IdM)中的自助服务规则，并介绍如何使用
Ansible playbook 创建和编辑自助服务访问规则。自助服务访问控制规则允许
IdM 实体在其 IdM 目录服务器条目上执行指定操作。
本节涵盖了以下主题：
::: itemizedlist
-   [IdM
    中的自助服务访问控制](#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm.html#self-service-access-control-in-idm_using-ansible-playbooks-to-manage-self-service-rules-in-idm "IdM 中的自助服务访问控制"){.link}
-   [使用 Ansible
    确保存在自助服务规则](#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-that-a-self-service-rule-is-present_using-ansible-playbooks-to-manage-self-service-rules-in-idm "使用 Ansible 确保存在自助服务规则"){.link}
-   [使用 Ansible
    确保缺少自助服务规则](#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-that-a-self-service-rule-is-absent_using-ansible-playbooks-to-manage-self-service-rules-in-idm "使用 Ansible 确保缺少自助服务规则"){.link}
-   [使用 Ansible
    确保自助服务规则具有特定属性](#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-that-a-self-service-rule-has-specific-attributes_using-ansible-playbooks-to-manage-self-service-rules-in-idm "使用 Ansible 确保自助服务规则具有特定属性"){.link}
-   [使用 Ansible
    确保自助服务规则没有特定属性](#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm.html#using-ansible-to-ensure-that-a-self-service-rule-does-not-have-specific-attributes_using-ansible-playbooks-to-manage-self-service-rules-in-idm "使用 Ansible 确保自助服务规则没有特定属性"){.link}
:::
::: section
::: titlepage
# []{#using-ansible-playbooks-to-manage-self-service-rules-in-idm_using-ansible-to-install-and-manage-idm.html#self-service-access-control-in-idm_using-ansible-playbooks-to-manage-self-service-rules-in-idm}IdM 中的自助服务访问控制 {.title}
:::
自助服务访问控制规则定义 Identity Management(IdM)实体可以在其 IdM
目录服务器条目上执行的操作：例如，IdM 用户能够更新自己的密码。\
这种控制方法允许经过身份验证的 IdM 实体编辑其 LDAP
条目中的特定属性，但不允许对整个条目 `添加`{.literal} `或删除`{.literal}
操作。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
使用自助服务访问控制规则时要小心：
不当配置访问控制规则可能会意外地提升实体的特权。
:::
:::
::: section
::: titlepage