ptr(uint32 t). To infer c, TIE uses the merged infor-
mation from multiple paths. In the two branches of the ﬁrst
if of foo, only the true branch gives a hint for inferring c,
where the type of *out is revealed as uint32 t. Since c
is the result of a subtraction with *out, TIE generates the
constraint (5). Through the transitivity of the subtype rela-
tion, τeax6  | ⊥ | T ∩ T | T ∪ T | T → T
τ base | τ mem
τ reg | τ reﬁned
reg1 t | reg8 t | reg16 t | reg32 t
numn t | uintn t | intn t (n = 8,16, 32) |
ptr(T ) | code t
{∀ addresses i|li : Ti}
{var1 : T1,··· , varn : Tn}
τ mem → τ R → T
T = T | T , which corresponds to a variable being “any” type,
and ⊥, which corresponds to a variable being used in
a type-inconsistent manner.
• Numbers (numn t), signed integers (intn t), and
• Pointers of type ptr(T ) where T is some other type
• Records of a ﬁxed number of variables, which map the
variable name vari to its type Ti. We also distinguish
the memory type τmem, which maps each memory cell
address to the type stored at that address.
• General function types T1 → T2. In addition, we de-
note by τf un the type for high-level C functions we in-
fer, which takes the current memory state and a list of
registers as arguments, and returns something of type
T .
• Intersection types (T ∩ T ) and union types (T ∪ T ),
The base integer types in TIE form a subtyping lattice,
shown in Figure 6. We omit additional edges between
base types to keep the diagram simple, e.g., reg16 t <:
reg32 t, though they do exist in our type system. The
subtyping relationships are extracted from the lattice as fol-
lows: if S ← T is an edge in the lattice, then S <: T (i.e.,
think of “<:” as an arrow in the lattice). Following multiple
edges in the lattice corresponds to the transitive nature of
subtyping. Since a type hierarchy is a lattice, the u and t
operations are also applied in the context of subtyping, e.g.,
T1 u T2 = M where M is the greatest lower bound of types
T1 and T2 in the subtyping hierarchy.
Intersection and Union Types. TIE’s type system has in-
tersection (∩) and union (∪) types. Mathematically, some-