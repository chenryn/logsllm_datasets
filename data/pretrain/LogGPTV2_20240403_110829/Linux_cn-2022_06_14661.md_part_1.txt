---
author: James Kiarie
category: 系统运维
comments_data:
- date: '2022-06-01 21:27:37'
  message: 我记得有一个web工具可以用来管理虚拟机的
  postip: 117.136.39.211
  username: 来自广东广州的 Mobile Safari 15.5|iOS 15.5 用户
- date: '2022-06-29 15:39:17'
  message: 01-netcfg.yaml中的routes也需要换成实际环境中的网关
  postip: 223.91.30.101
  username: 来自河南商丘的 Chrome 103.0|GNU/Linux 用户
- date: '2022-12-14 21:02:34'
  message: "还是别翻译成“手札”吧。\r\n百度搜下“手札”到底啥意思，非要这样翻译，合适吗？"
  postip: 116.20.53.141
  username: 来自广东佛山的 Chrome 105.0|Windows 8.1 用户
- date: '2023-01-09 13:32:00'
  message: 还有启用libvirtd的话只要一个systemctl enable libvirtd --now即可。设置为开机自启动并且启动该服务。不用再start了
  postip: 223.93.162.58
  username: 来自浙江杭州的 Firefox 103.0|GNU/Linux 用户
- date: '2023-07-07 10:14:08'
  message: 这应该是台湾那边的词语，可以了解下
  postip: 183.6.50.107
  username: 来自广东广州的 Chrome 114.0|Windows 10 用户
count:
  commentnum: 5
  favtimes: 0
  likes: 0
  sharetimes: 0
  viewnum: 18542
date: '2022-06-01 17:16:38'
editorchoice: false
excerpt: 在 KVM 之上可以运行 Windows 和 Liunx 虚拟机。每个虚拟机都独立于其它虚拟机和底层操作系统（宿主机系统），并拥有自己的 CPU、内存、网络接口、存储设备等计算资源。
fromurl: https://www.linuxtechi.com/how-to-install-kvm-on-ubuntu-22-04/
id: 14661
islctt: true
largepic: /data/attachment/album/202206/01/171619m6dd7bjb8292bbb9.jpg
permalink: /article-14661-1.html
pic: /data/attachment/album/202206/01/171619m6dd7bjb8292bbb9.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lkxed
summary: 在 KVM 之上可以运行 Windows 和 Liunx 虚拟机。每个虚拟机都独立于其它虚拟机和底层操作系统（宿主机系统），并拥有自己的 CPU、内存、网络接口、存储设备等计算资源。
tags:
- KVM
thumb: false
title: Ubuntu 22.04 之 KVM 安装手札
titlepic: true
translator: turbokernel
updated: '2022-06-01 17:16:38'
---
![](/data/attachment/album/202206/01/171619m6dd7bjb8292bbb9.jpg)
**KVM** 是  基于内核的虚拟机   Kernel-based Virtual Machine  的首字母缩写，这是一项集成在内核中的开源虚拟化技术。它是一种类型一（裸机）的 管理程序   hypervisor ，可以使内核能够作为一个 裸机管理程序   bare-metal hypervisor 。
在 KVM 之上可以运行 Windows 和 Liunx 虚拟机。每个虚拟机都独立于其它虚拟机和底层操作系统（宿主机系统），并拥有自己的 CPU、内存、网络接口、存储设备等计算资源。
本文将介绍在 Ubuntu 22.04 LTS（Jammy Jellyfish）中如何安装 KVM 。在文末，我们也将演示如何在安装 KVM 完成之后创建一台虚拟机。
### 1、更新 Ubuntu 22.04
在一切开始前，打开终端并通过如下命令更新本地的软件包索引：
```
$ sudo apt update
```
### 2、检查虚拟化是否开启
在进一步行动之前，首先需要检查你的 CPU 是否支持 KVM 虚拟化，确保你系统中有 VT-x（ vmx）英特尔处理器或 AMD-V（svm）处理器。
你可以通过运行如下命令，如果输出值大于 0，那么虚拟化被启用。否则，虚拟化被禁用，你需要启用它：
```
$ egrep -c '(vmx|svm)' /proc/cpuinfo
```
![SVM-VMX-Flags-Cpuinfo-linux](/data/attachment/album/202206/01/171638lo083lxspwwooykb.png)
根据上方命令输出，你可以推断出虚拟化功能已经启用，因为输出结果大于 0。如果虚拟化功能没有启用，请确保在系统的 BIOS 设置中启用虚拟化功能。
另外，你可以通过如下命令判断 KVM 虚拟化是否已经在运行：
```
$ kvm-ok
```
运行该命令之前，请确保你已经安装了 `cpu-checker` 软件包，否则将提示未找到该命令的报错。
直接就在下面，你会得到如何解决这个问题的指示，那就是安装 `cpu-checker` 包。
![KVM-OK-Command-Not-Found-Ubuntu](/data/attachment/album/202206/01/171639y55r74brr3r3r2w7.png)
随后，通过如下命令安装 `cpu-checker` 软件包：
```
$ sudo apt install -y cpu-checker
```
接着再运行 `kvm-ok` 命令，如果 KVM 已经启动，你将看到如下输出：
```
$ kvm-ok
```
![KVM-OK-Command-Output](/data/attachment/album/202206/01/171639ebbsees9efo6ebpb.png)
### 3、在 Ubuntu 22.04 上安装 KVM
随后，通过如下命令在 Ubuntu 22.04 中安装 KVM 以及其他相关虚拟化软件包：
```
$ sudo apt install -y qemu-kvm virt-manager libvirt-daemon-system virtinst libvirt-clients bridge-utils
```
以下为你解释刚刚安装了哪些软件包：
* `qemu-kvm` – 一个提供硬件仿真的开源仿真器和虚拟化包
* `virt-manager` – 一款通过 libvirt 守护进程，基于 QT 的图形界面的虚拟机管理工具
* `libvirt-daemon-system` – 为运行 libvirt 进程提供必要配置文件的工具
* `virtinst` – 一套为置备和修改虚拟机提供的命令行工具
* `libvirt-clients` – 一组客户端的库和API，用于从命令行管理和控制虚拟机和管理程序
* `bridge-utils` – 一套用于创建和管理桥接设备的工具
### 4、启用虚拟化守护进程（libvirtd）
在所有软件包安装完毕之后，通过如下命令启用并启动 libvirt 守护进程：
```
$ sudo systemctl enable --now libvirtd
$ sudo systemctl start libvirtd
```
你可以通过如下命令验证该虚拟化守护进程是否已经运行：
```
$ sudo systemctl status libvirtd
```
![Libvirtd-Status-Ubuntu-Linux](/data/attachment/album/202206/01/171639dikm3adgamqamjwq.png)
另外，请将当前登录用户加入 `kvm` 和 `libvirt` 用户组，以便能够创建和管理虚拟机。
```