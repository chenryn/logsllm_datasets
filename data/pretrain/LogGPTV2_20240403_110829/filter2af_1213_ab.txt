  * 避免Pinning缺陷  
浏览器和插件共享同一个pin数据库，防止出现缓存老化时间差异；且Cache中必须同时存储URL和IP地址以防篡改；类似document.domain=document.domain这种javascript语句也可能造成DNS重绑定攻击（因为当前domain对象已被篡改）。
如果插件默认允许socket连接
  * 主机名授权
服务器可以公布主机白名单，允许主机映射这个白名单内所有IP地址。例如授权www.example.com使用171.64.78.146。那么就会使用如下的DNS
records。
具体使用过程如下：
  1. 解析域名auth.ip.in-addr.arpa。
  2. 如果域名存在，且IP地址是符合白名单策略的。那么就允许授权，反之不行。
  3. 最后，如果IP是符合白名单策略的话，那么根据www.example.com.auth.[ip].in-addr.arpa是否可以解析成功来确定域名（www.example.com）是否是被授权的。
  4. 可信任的策略提供商
使用可信任的策略提供商提供的接口进行主机名授权，便捷安全。
**对抗升级**
上文中所提到的安全防护技术中最为推崇的应该就是DNS Pinning技术了，其实针对这类Pinning技术也有一定的绕过方式。
  1. Http DoS。
浏览器在第二次请求目标域名时去请求缓存中的IP地址，但此时只要攻击者使目标主机拒绝服务，即拒绝新的连接，那么浏览器就会放弃使用缓存中的数据而且建立新的DNS请求从而得到DNS
Rebind后的新的IP地址（也就是内网IP地址）；
  2. 泛洪攻击DNS缓存表同时实现交互式DNS Rebinding
第二点中提到的方式主要可以用下图来表示。
攻击者控制一台Web服务器和DNS服务器，当用户访问attack.com时，DNS服务器意识到该主机是第一次请求解析这个域名，则它会返回攻击者控制的Web服务器的IP地址，那么用户就会访问到钓鱼网站，该网站前端包含有一段恶意javascript脚本。脚本加载后会再一次请求attack.com，这时候DNS服务器感知到这是该主机第二次请求解析该域名，会解析成内网IP地址。而这种绕过方式的关键就在于这段javascript脚本。假设浏览器的DNS缓存条目为100条（chrome26后因性能优化目的条目增至1000条，但该攻击仍有效，耗时仅10秒内），那么这段脚本会遍历请求n1.takenoteswith.us到n120.takenoteswith.us以清除已在缓存表中的条目数据。
且这个javascript脚本可以与攻击者的web服务器维持一个长期的WebSocket连接，并且从web服务器接收json格式的指令，指令包含三个字段：method（例如，POST方法），URL，arg参数。例如，{method:’post’,
url:/form/login’,
args:name=’alice’}指的就是向/form/login地址post发送数据，数据内容为name=alice，而javascript脚本会通过xhr来执行这个命令。如果请求需要下载一个二进制文件，那么加入content-type字段以为了方便解析，如果是压缩文件那么需要在javascript脚本上进行解压缩然后更改content-length字段。且在返回数据给web服务器时要使用base64进行编码方便放入json对象进行传输。
由于目的是交互式攻击，那么还有一个难题就是使用户驻留，在这个攻击下其实就是让攻击者不关闭加载了javascript脚本的页面。那么攻击者可以构造一个诱惑页面使用户驻留，例如一个下载站点，提示下载需在100秒后执行，那么用户只能在这个页面等待而不关闭。
针对这种交互式DNS重绑定攻击，有三种防护方式
  * 头字段检测
浏览器应检测Host字段是否匹配（默认未开启或不阻断）。
  * 增加缓存大小
不能完全阻止该攻击，且可能会影响性能。
  * 智能化缓存清洗
在DNS缓存进行清洗时应该首先清洗只能识别出的无效无意义DNS条目。
## **带外数据攻击**
这个是当前一些渗透测试技术中比较常见的攻击形式，常用语SQL注入，XSS攻击，XXE等。也经常在利用一些新漏洞发现初期使用这种方式获得攻击回显，例如Weblogic的CVE-2017-10271漏洞。在有些漏洞利用当中多少可能也会遇到安全设备等，我们也可以通过带外信道的方式将隐私数据通过DNS协议带出来。比较常见的利用方式就是用反引号包裹命令行，然后请求带有这类格式的域名，例如`whoami`.example.com。
**DNS Tunnel**
这是最近几年常被拿出来提的用于高级类攻击的一种技巧，一般用于后门连接C&C服务器时使用，近几年的wannacry，xshellghost等后门都使用了这种隧道攻击技术。这种通道既隐蔽，又可以实现交互式命令发布和数据读取。像是A记录，AAAA记录，TXT记录和PTR记录等都可以用作在DNS
Tunnel当中。如果只是A记录或者AAAA记录，那么我们只可以从部署的后门获取到敏感数据，而部署在沦陷机上的后门或病毒并不能得到不断更新的指定命令，也就是说所有的过程只是单向的。而PTR完善这种交互攻击。攻击者可以在多个IP地址的PTR记录里部署分段payload，然后后门通过按顺序读取PTR记录最后拼接起来即可得到完成的命令。
和PTR记录一样，TXT记录也可以用于交互攻击。攻击者可以使后门读取指定的域名的TXT记录，这些记录完整地写好了命令，执行即可，形式上和PTR没什么差别。所以交互式恶意软件的意义就在于，攻击者可以发送命令也可以接收反馈。
这种隧道技术常见于恶意软件，例xshellghost就是用了DNS Tunnel技术。
如果把这种复杂的隧道技术运用到日常的渗透测试攻击当中。以XSS为例，在我们插入的XSS Payload当中，我们可以使用xhr去请求一个可控的web
api，这个api可以读取对应域名的TXT记录从而读取最新的javascript脚本，然后也是通过xhr或者preload机制访问可控域名，将敏感数据放入二级域名，例如“[sesitiveData].evil.com”。DNS
Tunnel技术帮助我们实现了增强型交互式XSS攻击。
【题外话】
除了DNS协议可以建立Tunnel来传输数据，ICMP协议同样也可以，如下提供了两例已开源的ICMP Tunnel工具：
  1. MIT Ptunnel。
  2. inquish icmpsh。
## **致谢**
ourren@Secwiki
sshruoshui(warethink#gmail.com)@NUTD
本文首发于安全学术圈（SecQuan）公众号。本公众号分享安全方面的论文写作、会议发表、基金申请方面的资料。
## **参考文献**
[1] Khalil, I., Yu, T., & Guan, B. (2016, May). Discovering malicious domains
through passive DNS data graph analysis. In Proceedings of the 11th ACM on
Asia Conference on Computer and Communications Security (pp. 663-674). ACM.
[2] Jackson, C., Barth, A., Bortz, A., Shao, W., & Boneh, D. (2009).
Protecting browsers from DNS rebinding attacks. ACM Transactions on the Web
(TWEB), 3(1), 2.
[3] Dai, Y., & Resig, R. (2013). FireDrill: Interactive {DNS} Rebinding. In
Presented as part of the 7th {USENIX} Workshop on Offensive Technologies.
[4] Stødle, D. (2005, May 26). Ping Tunnel - Send TCP traffic over ICMP [Web
log post]. Retrieved June 20, 2019, from
[5] inquish. (2013, May 17). icmpsh - Simple reverse ICMP shell. Retrieved
August 1, 2019, from 