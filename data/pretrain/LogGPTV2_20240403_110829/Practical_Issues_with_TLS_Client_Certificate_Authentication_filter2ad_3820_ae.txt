### Misconfigurations in TLS CCA Deployments

Some of these misconfigurations can be attributed to poor and undocumented practices with `mod_ssl`. Specifically, placing CA certificates in the `SSLCACertificateFile` instead of the `SSLCertificateChainFile` can lead to issues. This practice is often seen in various `mod_ssl` tutorials online, where users are instructed to place CA certificates for the server's certificate in the `SSLCACertificateFile`. Our observations confirm this, as most of the extra CAs found were also issuers of the server's certificate.

#### Table II: TLS CCA Deployed by Service Providers

| **Service Provider** | **Category** | **Server Software** | **Spare CAs** | **Request** | **Timeout** | **Privacy** | **Resume** | **Bind** | **Validity** | **OCSP/CRL** |
|----------------------|--------------|---------------------|---------------|-------------|-------------|-------------|------------|----------|--------------|---------------|
| danskebank.ee        | Banking      | BigIP               | 0             | require     | 1 min       | +           | -          | 24       | 6            | OCSP          |
| lhv.ee               | Banking      | IIS/6.0             | 24            | optional any| 6 min       | -           | -          | 6        | 14           | OCSP          |
| nordea.ee            | Banking      | ?                   | 0             | optional any*| 1 min       | -           | -          | 0        | 13           | OCSP          |
| swedbank.ee          | Banking      | BigIP               | 0             | optional    | 1 hour      | +           | -          | 10       | 6            | OCSP          |
| ehis.ee              | Education    | Oracle-AS           | 27            | optional any*| 5 min       | -           | -          | 21       | 5            | CRL 2007      |
| etis.ee              | Education    | IIS/7.5             | 1             | optional any*| 2 min       | -           | -          | 9        | 1            | ?             |
| ttu.ee               | Education    | Oracle-AS           | 0             | optional    | 5 min       | -           | -          | 0        | 1            | OCSP          |
| ut.ee                | Education    | IIS/7.5             | 0             | optional    | 2 min       | -           | -          | 0        | 1            | OCSP          |
| eas.ee               | Government   | Oracle-AS           | 25            | optional any*| 5 min       | -           | -          | 20       | 7            | CRL           |
| digilugu.ee          | Health       | Nginx               | 0             | optional any*| 1 min       | -           | -          | 0        | 0            | OCSP          |
| digiregistratuur.ee  | Health       | Jetty?              | 0             | optional any*| 10 sec      | -           | -          | 0        | 0            | OCSP          |
| compensalife.eu      | Insurance    | Tomcat?             | 0             | optional any*| 5 min       | -           | -          | 0        | 0            | CRL           |
| kindlustus.ee        | Insurance    | BigIP               | 0             | optional any*| 5 min       | -           | -          | 0        | 0            | OCSP          |
| arved.ee             | Utility      | IIS/6.0             | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | OCSP          |
| dormitorium.ee       | Utility      | IIS/6.0             | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | CRL           |
| elektrum.ee          | Utility      | IIS/7.0             | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | OCSP          |
| elering.ee           | Utility      | IIS/7.x             | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | OCSP          |
| elion.ee             | Utility      | Nginx               | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | OCSP          |
| emt.ee               | Utility      | IIS/6.0             | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | OCSP          |
| imatraelekter.ee     | Utility      | IIS/6.0             | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | CRL           |
| kyla.ee              | Utility      | IIS/7.5             | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | OCSP          |
| tallinnavesi.ee      | Utility      | IIS/6.0             | 0             | optional any*| 2 min       | -           | -          | 0        | 0            | CRL           |

### Issues Identified

1. **Misconfigured SSLCACertificateFile**: Placing CA certificates in the `SSLCACertificateFile` instead of the `SSLCertificateChainFile` can cause issues. This practice is common in `mod_ssl` tutorials, leading to the inclusion of unnecessary CAs that also issued the server's certificate.

2. **Missing CAs**: The absence of SK root CA DNs or an empty list of DNs in the `CertificateRequest` message does not create a problem. However, the presence of root CA DNs without intermediate DNs can cause TLS CCA to fail if the user's browser lacks these intermediate certificates. Service providers such as `e-ope.ee`, `justask.ee`, `ox.ee`, and those using Microsoft Internet Information Services (IIS) were missing one or both intermediate CA DNs. Additionally, `g4s.ee`, `justask.ee`, `ox.ee`, and `ut.ee` were missing the new root CA certificate of SK, preventing the use of TLS CCA with client certificates issued after July 2011.

3. **Verification Depth**: The `SSLVerifyDepth` directive in `mod_ssl` was used to limit the length of the valid client certificate chain. The correct value for the Estonian ID card certificate chain is 2, but almost half of the service providers have extended their verification depth constraint. While this does not create an immediate threat, it can prevent certain attacks, such as those involving mistakenly enabled CA trust bits in end-entity certificates.

4. **CCA Bound Sessions**: The "Bind" column indicates whether the service provider requires a CCA TLS connection only at the login phase or also after authentication. Only a few service providers, mostly banks, require a CCA connection post-authentication. The lack of CCA bound sessions can be attributed to the complexity of web design, especially when supporting password authentication. Instead, service providers redirect users to a CCA URL during login and then back to a common server path where CCA is not required. This approach increases security risks, as the authenticated session is protected only by an HTTP cookie, which can be stolen or leaked.

5. **Privacy of Client Certificates**: The "Privacy" column shows whether the service provider protects the privacy of client certificates by requesting CCA on renegotiation or performing CCA on initial TLS negotiation. One-third of service providers do not protect the privacy of client certificates, possibly due to `mod_ssl` documentation not warning about the consequences of configuring the `SSLVerifyClient` directive in a server-wide context. Another reason could be the disabling of renegotiation as a temporary fix for the TLS renegotiation vulnerability (CVE-2009-3555), which was left disabled even after the TLS renegotiation indication extension was standardized.

6. **CCA Session Resumption**: The "Resume" column indicates whether the server supports resumption of client certificate authenticated sessions. In `mod_ssl` deployments, CCA sessions established on initial negotiation support resumption, while those requiring CCA on renegotiation do not. This can be due to a `mod_ssl` bug described in Section III-D.

7. **CCA Request**: The "Request" column shows the value configured by the `SSLVerifyClient` directive. A value of `require` will result in a failed TLS handshake if the client certificate verification fails. Some service providers use `optional` to provide a personalized HTTP response if the client has no client certificate. For non-`mod_ssl` deployments, most tolerate the absence of a client certificate and the presence of any client certificate as long as the client can prove possession of the corresponding private key (marked as `optional_any`). If the client provides an invalid certificate, an HTTP error message is returned by the web server or application.

8. **CCA Handshake Timeout Enforcement**: The "Timeout" column shows how long the handshake can be kept open after the `ServerHello` message but before the `CertificateVerify` message. For service providers marked with "â€“", the connection could be kept open for more than 12 hours. Those marked with "*" had `mod_reqtimeout` enabled, but since CCA was requested on renegotiation, the connection could still be kept open using the method described in Section III-F.