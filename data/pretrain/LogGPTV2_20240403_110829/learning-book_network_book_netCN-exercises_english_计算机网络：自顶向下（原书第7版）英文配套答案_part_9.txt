10. Switching via memory; switching via a bus; switching via an interconnection
network. An interconnection network can forward packets in parallel as long as all the
packets are being forwarded to different output ports.
11. If the rate at which packets arrive to the fabric exceeds switching fabric rate, then
packets will need to queue at the input ports. If this rate mismatch persists, the queues
will get larger and larger and eventually overflow the input port buffers, causing
packet loss. Packet loss can be eliminated if the switching fabric speed is at least n
times as fast as the input line speed, where n is the number of input ports.
12. Assuming input and output line speeds are the same, packet loss can still occur if the
rate at which packets arrive to a single output port exceeds the line speed. If this rate
mismatch persists, the queues will get larger and larger and eventually overflow the
output port buffers, causing packet loss. Note that increasing switch fabric speed
cannot prevent this problem from occurring.
13. HOL blocking: Sometimes a packet that is first in line at an input port queue must
wait because there is no available buffer space at the output port to which it wants to
be forwarded. When this occurs, all the packets behind the first packet are blocked,
even if their output queues have room to accommodate them. HOL blocking occurs
at the input port.
14. (A typo in this question: the first question mark should be replaced by a period)
Only FIFO can ensure that all packets depart in the order in which they arrived.
---
## Page 74
15. For example, a packet carrying network management information should receive
priority over regular user traffic. Another example, a real-time voice-over-IP packet
might need to receive priority over non-real-time traffic such as e-email.
With RR, all service classes are treated equally, i.e., no service class has priority over
any other service class. With WFQ, service classes are treated differently, i.e., each
class may receive a differential amount of service in any interval of time. When a
WFQ’s all classes have the same amount of service weight, the WFQ is identical to
RR.
17. The 8-bit protocol field in the IP datagram contains information about which transport
layer protocol the destination host should pass the segment to.
18. Time-to-live.
19. No. IP header checksum only computes the checksum of an IP packet’s IP header
fields, which share no common bytes with the IP datagram’s transport-layer segment
part.
20. The reassembly of the fragments of an IP datagram is done in the datagram’s
destination host.
21. Yes. They have one address for each interface.
22. 11011111 00000001 00000011 00011100.
23. Students will get different correct answers for this question.
24. 8 interfaces; 3 forwarding tables.
25. 50% overhead.
26. Typically the wireless router includes a DHCP server. DHCP is used to assign IP
addresses to the 5 PCs and to the router interface. Yes, the wireless router also uses
NAT as it obtains only one IP address from the ISP
27. Route aggregation means that an ISP uses a single prefix to advertise multiple
networks. Route aggregation is useful because an ISP can use this technique to
advertise to the rest of the Internet a single prefix address for the multiple networks
that the ISP has.
28. A plug-and-play or zeroconf protocol means that the protocol is able to automatically
configure a host'’s network-related aspects in order to connect the host into a network.
---
## Page 75
29. A private network address of a device in a network refers to a network address that is
only meaningful to those devices within that network. A datagram with a private
network address should never be present in the larger public Internet, because the
private network address is potentially used by many network devices within their own
private networks.
30. IPv6 has a fixed length header, which does not include most of the options an IPv4
header can include. Even though the IPv6 header contains two 128 bit addresses
(source and destination IP address) the whole header has a fixed length of 40 bytes
only. Several of the fields are similar in spirit. Traffic class, payload length, next
length, upper-layer protocol and time to live in IPv4.
31. Yes, because the entire IPv6 datagram (including header fields) is encapsulated in an
IPv4 datagram.
32. Forwarding has two main operations: match and action. With destination-based
forwarding, the match operation of a router looks up only the destination IP address
of the to-be-forwarded datagram, and the action operation of the router involves
sending the packet into the switching fabric to a specified output port.With
generalized forwarding, the match can be made over multiple header fields associated
with different protocols at different layers in the protocol stack, and the action can
include forwarding the packet to one or more output ports, load-balancing packets
across multiple outgoing interfaces, rewriting header values (as in NAT),
ss)d 
special server for further processing and action, and more.
33. Each entry in the forwarding table of a destination-based forwarding contains only an
IP header field value and the outgoing link interface to which a packet (that matches
the IP header field value) is to be forwarded. Each entry of the flow table in
OpenFlow includes a set of header field values to which an incoming packet will be
matched, a set of counters that are updated as packets are matched to flow table
entries, and a set of actions to be taken when a packet matches a flow table entry.
34.“Match plus action" means that a router or a switch tries to find a match between
some of the header values of a packet with some entry in a flow table, and then based
on that match, the router decides to which interface(s) the packet will be forwarded
and even some more operations on the packet. In the case of destination-based
forwarding packet switch, a router only tries to find a match between a flow table
entry with the destination IP address of an arriving packet, and the action is to decide
to which interface(s) the packet will be forwarded. In the case of an SDN, there are
many fields can be matched, for example, IP source address, TCP source port, and
source MAC address; there are also many actions can be taken, for example,
forwarding, dropping, and modifying a field value.
---
## Page 76
35. Three example header fields in an IP datagram that can be matched in OpenFlow 1.0
generalized forwarding are IP source address, TCP source port, and source MAC
address. Three fields that cannot be matched are: TTL field, datagram length field,
header checksum (which depends on TTL field).
---
## Page 77
Chapter4Problems
Problem 1
a) Data destined to host H3 is forwarded through interface 3
Destination Address
Link Interface
H3
3
b) No, because forwarding rule is only based on destination address.
Problem2
a)No, you can only transmit one packet at a time over a shared bus.
b) No, as discussed in the text, only one memory read/write can be done at a time over
the shared system bus.
c)  No, in this case the two packets would have to be sent over the same output bus at the
same time, which is not possible.
Problem3
a)(n-1)D
b) (n-1)D
0(o
Problem 4
The minimal number of time slots needed is 3. The scheduling is as follows.
Slot 1: send X in top input queue, send Y in middle input queue.
Slot 2: send X in middle input queue, send Y in bottom input queue
Slot 3: send Z in bottom input queue.
Largest number of slots is still 3. Actually, based on the assumption that a non-empty
input queue is never idle, we see that the first time slot always consists of sending X in
the top input queue and Y in either middle or bottom input queue, and in the second time
slot, we can always send two more datagram, and the last datagram can be sent in third
time slot.
NOTE: Actually, if the first datagram in the bottom input queue is X, then the worst case
would require 4 time slots.
---
## Page 78
Problem5
a)
Prefix Match
Link Interface
11100000 00
0
11100000 01000000
1
1110000
2
11100001 1
3
otherwise
3
b)
Prefix match for first address is 5"h entry: link interface 3
Prefix match for second address is 3nd entry: link interface 2
Prefix match for third address is 4 entry: link interface 3
Problem6
Destination Address Range
Link Interface
00000000
through
0
11111100
00000010
through
11111010
00000110
through
2
11111110
10000000
through
11000000
through
3
II11111I
number of addresses for interface 0 = 2° = 64
number of addresses for interface 1 = 2 = 32
number of addresses for interface 2 = 2° + 2′ = 64 + 32 = 96
number of addresses for interface 3  2° = 64
---
## Page 79
Problem7
Destination Address Range
Link Interface
11000000
through (32 addresses)
0
11111011
10000000
through(64 addresses)
I1111I01
00000111
through (32 addresses)
2
II11111I
00000000
through (128 addresses)
3
Problem8
223.1.17.0/26
223.1.17.128/25
223.1.17.192/28
Problem9
Destination Address
Link Interface
200.23.16/21
0
200.23.24/24
200.23.24/21
2
otherwise
3
Problem10
Destination Address
Link Interface
11100000 00 (224.0/10)
0
11100000 01000000 (224.64/16)
1110000
(224/8)
2
11000011
(225.128/9)
3
otherwise
---
## Page 80
Problem 11
Any IP address in range 128.119.40.128 to 128.119.40.191
Four equal size
128.119.40.112/28
Problem 12
From
214.97.254/23,
possible
assignments
are
a)
Subnet A: 214.97.255/24 (256 addresses)
Subnet B: 214.97.254.0/25 - 214.97.254.0/29 (128-8 = 120 addresses)
Subnet C: 214.97.254.128/25 (128 addresses)
Subnet D: 214.97.254.0/31 (2 addresses)
Subnet E: 214.97.254.2/31 (2 addresses)
Subnet F: 214.97.254.4/30 (4 addresses)
：
To simplify the solution, assume that no datagrams have router interfaces as
ultimate destinations. Also, label D, E, F for the upper-right, bottom, and upper-
left interior subnets, respectively.
Router 1
Longest Prefix Match
Outgoing Interface
11010110 01100001 11111111
Subnet A
11010110 01100001 11111110 0000000
Subnet D
11010110 01100001 11111110 000001
Subnet F
Router 2
Longest Prefix Match
Outgoing Interface
11010110 01100001 11111111 0000000
Subnet D
1101011001100001 11111110 0
Subnet B
11010110 01100001 11111110 0000001
Subnet E
Router 3
Longest Prefix Match
Outgoing Interface
---
## Page 81
11010110 01100001 11111111 000001
Subnet F
11010110 01100001 11111110 0000001
Subnet E
11010110 01100001 11111110 1
Subnet C
Problem 13
The IP address blocks of Polytechnic Institute of New York University are:
NetRange: 128.238.0.0 - 128.238.255.255
CIDR: 128.238.0.0/16
The IP address blocks Stanford University are:
NetRange: 171.64.0.0 - 171.67.255.255
CIDR: 171.64.0.0/14
The IP address blocks University of Washington are:
NetRange: 140.142.0.0 - 140.142.255.255
CIDR: 140.142.0.0/16
No, the whois services cannot be used to determine with certainty the geographical
location of a specific IP address.
www.maxmind.com is used to determine the locations of the Web servers at Polytechnic
Institute of New York University, Stanford University and University of Washington.
Locations of the Web server at Polytechnic Institute of New York University is
Hostname
Region
city
Postal
Latitude Longitude
ISP
Organization
Metro Area
Code
Name
Name
Code
Code Code
128.238.24.30 US
United
States
NY
New
Brooklyn 11201 40.6944 -73.9906
Polytechnic Polytechnic
York
University University
501718
Locations of the Web server Stanford University is
Hostname
Region
city
Postal
Latitude Longitude
ISP
Orqanization
Metro Area
Code
Name
Name
Code
Code Code
171.64.13.26 US
United
CA
Califomia Stanford 94305 37.4178 -122.1720
Stanford Stanford
States
University University
807650
Locations of the Web server at University of Massachusetts is
Hostname
Code Name
City
Posta
atitude Longitude
ISP
Organization
Metro Area
Code
University of University of
Code Code
128.119.103.148 US
United
States
MA
Massachusetts Amherst 01003 42.3896 -72.4534
---
## Page 82
Problem 14
The maximum size of data field in each fragment  680 (because there are 20 bytes IP
header). Thus the number of required fragments 
[240020]
680
4
Each fragment will have Identification number 422. Each fragment except the last one
will be of size 700 bytes (including IP header). The last datagram will be of size 360
bytes (including IP header). The offsets of the 4 fragments will be 0, 85, 170, 255. Each
of the first 3 fragments will have flag=1; the last fragment will have flag=0.
Problem 15
MP3 file size = 5 million bytes. Assume the data is carried in TCP segments, with each
TCP segment also having 20 bytes of header. Then each datagram can carry 1500-
40=1460 bytes of the MP3 file
Number of datagrams required =
5×10°]
1460
= 3425 . All but the last datagram will be 1,500
bytes; the last datagram will be 960+40 = 1000 bytes. Note that here there is no
fragmentation  the source host does not create datagrams larger than 1500 bytes, and
these datagrams are smaller than the MTUs of the links.
Problem 16
a)Home addresses: 192.168.1.1, 192.168.1.2, 192.168.1.3 with the router interface
being 192.168.1.4
b)
NAT Translation Table