:::
::: section
::: titlepage
# []{#managing-wi-fi-connections_configuring-and-managing-networking.html#connecting_to_a_wifi_network_managing-wi-fi-connections}使用 GNOME GUI 连接至 Wi-Fi 网络 {.title}
:::
这个步骤描述了如何连接到无线网络以访问互联网。
::: orderedlist
**流程**
1.  在屏幕右上角打开 GNOME Shell 网络连接图标菜单。
2.  选择 `Wi-Fi Not Connected`{.literal}。
3.  点 `Select Network`{.literal} 选项。
4.  单击您要连接的网络名称，然后单击 `连接`{.literal}。
    请注意，如果没有看到网络，则网络可能是隐藏的。
5.  如果网络需要密码或加密密钥保护，请输入密码并单击 `连接`{.literal}。
    请注意：如果您不知道密码，请联络 Wi-Fi 网络的管理员。
6.  如果连接成功，则会在连接图标菜单中看到网络连接，无线指示符位于屏幕右上角。
:::
::: itemizedlist
**其它资源**
-   [使用控制中心配置 Wi-Fi
    连接](#managing-wi-fi-connections_configuring-and-managing-networking.html#Configuring-a-Wi-Fi-connection-using-control_-center_managing-wi-fi-connections "使用 control-center 配置 Wi-Fi 连接"){.link}。
:::
:::
::: section
::: titlepage
# []{#managing-wi-fi-connections_configuring-and-managing-networking.html#configuring-802-1x-network-authentication-on-an-existing-wi-fi-connection-using-nmcli_managing-wi-fi-connections}使用 nmcli 在现有 Wi-Fi 连接中配置 802.1X 网络身份验证 {.title}
:::
使用 `nmcli`{.literal}
实用程序，您可以将客户端配置为向网络进行身份验证。此流程描述了如何在现有名为
`wlp1s0`{.literal} 的 NetworkManager Wi-Fi 连接配置集中使用 Microsoft
Challenge-Handshake Authentication Protocol 版本
2(MSCHAPv2)配置保护扩展验证协议(PEAP)验证。
::: orderedlist
**先决条件**
1.  网络必须具有 802.1X 网络身份验证。
2.  Wi-Fi 连接配置集存在于 NetworkManager 中，且具有有效的 IP 配置。
3.  如果需要客户端验证验证程序证书，则必须将证书颁发机构(CA)证书存储在
    `/etc/pki/ca-trust/source/anchors/`{.literal} 目录中。
4.  已安装 `wpa_supplicant`{.literal} 软件包。
:::
::: orderedlist
**步骤**
1.  将 Wi-Fi 安全模式设置为 `wpa-eap`{.literal}、可扩展验证协议(EAP)为
    `peap`{.literal}，即内部验证协议为
    `mschapv2`{.literal}，以及用户名：
    ``` literallayout
    # nmcli connection modify wpl1s0 wireless-security.key-mgmt wpa-eap 802-1x.eap peap 802-1x.phase2-auth mschapv2 802-1x.identity user_name
    ```
    请注意，您必须在单个命令中设置
    `wireless-security.key-mgmt`{.literal}、`802-1x.eap`{.literal}、`802-1x.phase2-auth`{.literal}
    和 `802-1x.identity`{.literal} 参数。
2.  另外，还可将该密码存储在配置中：
    ``` literallayout
    # nmcli connection modify wpl1s0 802-1x.password password
    ```
    ::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 重要 {.title}
    默认情况下，NetworkManager 在
    `/etc/sysconfig/network-scripts/keys-connection_name`{.literal}
    文件中以明文形式保存密码，该文件只可由 `root`{.literal}
    用户读取。但是，在配置文件中清除文本密码会有安全隐患。
    要提高安全性，请将 `802-1x.password-flags`{.literal} 参数设置为
    `0x1`{.literal}。使用这个设置时，在运行 GNOME 桌面环境或
    `nm-applet`{.literal} 的服务器上，NetworkManager
    从这些服务中检索密码。在其他情况下，NetworkManager 会提示输入密码。
    :::
3.  如果需要客户端验证验证器的证书，请将连接配置集中的
    `802-1x.ca-cert`{.literal} 参数设置为 CA 证书的路径：
    ``` literallayout
    # nmcli connection modify wpl1s0 802-1x.ca-cert /etc/pki/ca-trust/source/anchors/ca.crt
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    为了安全起见，红帽建议使用验证程序证书来使客户端能够验证验证器的身份。
    :::
4.  激活连接配置集：
    ``` literallayout
    # nmcli connection up wpl1s0
    ```
:::
::: itemizedlist
**验证步骤**
-   访问需要网络身份验证的网络上的资源。
:::
::: itemizedlist
**其他资源**
-   [管理 Wi-Fi
    连接](#managing-wi-fi-connections_configuring-and-managing-networking.html "第 7 章 管理 Wi-Fi 连接"){.link}
-   `nm- settings(5)`{.literal} man page 中的 802-1x``{=html}
    设置部分
-   `nmcli(1)`{.literal} man page
:::
:::
:::
[]{#configuring-vlan-tagging_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-vlan-tagging_configuring-and-managing-networking.html#configuring-vlan-tagging_configuring-and-managing-networking}第 8 章 配置 VLAN 标记 {.title}
:::
这部分论述了如何配置虚拟本地区域网络（VLAN）。VLAN
是物理网络中的一个逻辑网络。当 VLAN 接口通过接口时，VLAN 接口标签带有
VLAN ID 的数据包，并删除返回的数据包的标签。
您可以在另一个接口（如以太网、绑定、team 或桥接设备）上创建 VLAN
接口。这个界面被称为 `父接口`{.literal}。
::: section
::: titlepage
# []{#configuring-vlan-tagging_configuring-and-managing-networking.html#configuring-vlan-tagging-using-nmcli-commands_configuring-vlan-tagging}使用 nmcli 命令配置 VLAN 标记 {.title}
:::
这部分论述了如何使用 `nmcli`{.literal} 工具配置 Virtual Local Area
Network(VLAN)标记。
::: itemizedlist
**先决条件**
-   您计划用作虚拟 VLAN 接口的父接口支持 VLAN 标签。
-   如果您在绑定接口之上配置 VLAN：
    ::: itemizedlist
    -   绑定的端口是上线的。
    -   这个绑定没有使用 `fail_over_mac=follow`{.literal} 选项配置。VLAN
        虚拟设备无法更改其 MAC 地址以匹配父设备的新 MAC
        地址。在这种情况下，流量仍会与不正确的源 MAC 地址一同发送。
    -   这个绑定通常不会预期通过 DHCP 或 IPv6 自动配置获得 IP
        地址。在创建绑定时通过设置 `ipv4.method=disable`{.literal} 和
        `ipv6.method=ignore`{.literal} 选项来确保它；否则，如果
        DHCP/IPv6-autoconf 在一段时间后失败，接口可能会关闭。
    :::
-   主机连接到的交换机被配置为支持 VLAN 标签。详情请查看您的交换机文档。
:::
::: orderedlist
**流程**
1.  显示网络接口：
    ``` literallayout
    # nmcli device status
    DEVICE   TYPE      STATE         CONNECTION
    enp1s0   ethernet  disconnected  enp1s0
    bridge0  bridge    connected     bridge0
    bond0    bond      connected     bond0
    ...
    ```
2.  创建 VLAN 接口。例如，要创建一个名为 `vlan10`{.literal} 的 VLAN
    接口，它使用 `enp1s0`{.literal} 作为其父接口，以及带有 VLAN ID
    `10`{.literal} 的标记数据包，请输入：
    ``` literallayout
    # nmcli connection add type vlan con-name vlan10 ifname vlan10 vlan.parent enp1s0 vlan.id 10
    ```
    请注意，VLAN 必须在范围 `0`{.literal} 到 `4094`{.literal} 之间。
3.  默认情况下，VLAN
    连接会继承上级接口的最大传输单元（MTU）。另外，还可设置不同的 MTU
    值：
    ``` literallayout
    # nmcli connection modify vlan10 ethernet.mtu 2000
    ```
4.  配置 VLAN 设备的 IP 设置。如果要使用这个 VLAN
    设备作为其它设备的端口，请跳过这一步。
    ::: orderedlist
    1.  配置 IPv4 设置。例如，要为 `vlan10`{.literal} 连接设置静态 IPv4
        地址、网络掩码、默认网关和 DNS 服务器设置，请输入：
        ``` literallayout
        # nmcli connection modify vlan10 ipv4.addresses '192.0.2.1/24'
        # nmcli connection modify vlan10 ipv4.gateway '192.0.2.254'
        # nmcli connection modify vlan10 ipv4.dns '192.0.2.253'
        # nmcli connection modify vlan10 ipv4.method manual
        ```
    2.  配置 IPv6 设置。例如，要为 `vlan10`{.literal} 连接设置静态 IPv6
        地址、网络掩码、默认网关和 DNS 服务器设置，请输入：
        ``` literallayout
        # nmcli connection modify vlan10 ipv6.addresses '2001:db8:1::1/32'
        # nmcli connection modify vlan10 ipv6.gateway '2001:db8:1::fffe'
        # nmcli connection modify vlan10 ipv6.dns '2001:db8:1::fffd'
        # nmcli connection modify vlan10 ipv6.method manual
        ```
    :::
5.  激活连接：
    ``` literallayout
    # nmcli connection up vlan10
    ```
:::
::: orderedlist
**验证步骤**
1.  验证设置：
    ``` literallayout
    # ip -d addr show vlan10
    4: vlan10@enp1s0:  mtu 1500 qdisc noqueue state UP group default qlen 1000
        link/ether 52:54:00:72:2f:6e brd ff:ff:ff:ff:ff:ff promiscuity 0
        vlan protocol 802.1Q id 10  numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535
        inet 192.0.2.1/24 brd 192.0.2.255 scope global noprefixroute vlan10
           valid_lft forever preferred_lft forever
        inet6 2001:db8:1::1/32 scope global noprefixroute
           valid_lft forever preferred_lft forever
        inet6 fe80::8dd7:9030:6f8e:89e6/64 scope link noprefixroute
           valid_lft forever preferred_lft forever
    ```
:::
::: itemizedlist
**其他资源**
-   [测试基本网络设置](#testing-basic-network-settings_configuring-and-managing-networking.html "第 44 章 测试基本网络设置"){.link}.
-   [配置 NetworkManager
    以避免使用特定配置集提供默认网关](#managing-the-default-gateway-setting_configuring-and-managing-networking.html#proc_configuring-networkmanager-to-avoid-using-a-specific-profile-to-provide-a-default-gateway_managing-the-default-gateway-setting "配置 NetworkManager 以避免使用特定配置集提供默认网关"){.link}。
-   `nmcli-examples(7)`{.literal} man page
-   `nm-settings(5)`{.literal} man page 中的 `vlan 设置`{.literal} 部分
:::
:::
::: section
::: titlepage
# []{#configuring-vlan-tagging_configuring-and-managing-networking.html#configuring-vlan-tagging-using-nm-connection-editor_configuring-vlan-tagging}使用 nm-connection-editor 配置 VLAN 标记 {.title}
:::
这部分论述了如何使用 `nm-connection-editor`{.literal} 应用程序配置
Virtual Local Area Network(VLAN)标记。
::: itemizedlist
**先决条件**
-   您计划用作虚拟 VLAN 接口的父接口支持 VLAN 标签。
-   如果您在绑定接口之上配置 VLAN：
    ::: itemizedlist
    -   绑定的端口是上线的。
    -   这个绑定没有使用 `fail_over_mac=follow`{.literal} 选项配置。VLAN
        虚拟设备无法更改其 MAC 地址以匹配父设备的新 MAC
        地址。在这种情况下，流量仍会与不正确的源 MAC 地址一同发送。
    :::
-   主机连接到的交换机被配置为支持 VLAN 标签。详情请查看您的交换机文档。
:::
::: orderedlist
**步骤**
1.  打开终端窗口，并输入 `nm-connection-editor`{.literal} ：
    ``` literallayout
    $ nm-connection-editor
    ```
2.  点 [+]{.guibutton} 按钮添加新连接。
3.  选择 `VLAN`{.literal} 连接类型，然后单击 [Create]{.guibutton}。
4.  在 `VLAN`{.literal} 标签页中：
    ::: orderedlist
    1.  选择上级接口。
    2.  选择 VLAN ID。请注意，VLAN 必须在范围 `0`{.literal} 到
        `4094`{.literal} 之间。
    3.  默认情况下，VLAN
        连接会继承上级接口的最大传输单元（MTU）。另外，还可设置不同的
        MTU 值。
    4.  另外，还可设置 VLAN 接口的名称以及其它特定 VLAN 选项。
        [![vlan settings nm connection
        editor](images/vlan-settings-nm-connection-editor.png)]{.inlinemediaobject}
    :::
5.  配置 VLAN 设备的 IP 设置。如果要使用这个 VLAN
    设备作为其它设备的端口，请跳过这一步。
    ::: orderedlist
    1.  在 `IPv4 Settings`{.literal} 选项卡中，配置 IPv4
        设置。例如，设置静态 IPv4 地址、网络掩码、默认网关和 DNS
        服务器： [![vlan IPv4 settings nm connection
        editor](images/vlan-IPv4-settings-nm-connection-editor.png)]{.inlinemediaobject}
    2.  在 `IPv6 设置`{.literal} 选项卡上，配置 IPv6
        设置。例如，设置静态 IPv6 地址、网络掩码、默认网关和 DNS
        服务器： [![vlan IPv6 settings nm connection
        editor](images/vlan-IPv6-settings-nm-connection-editor.png)]{.inlinemediaobject}
    :::
6.  点击 [Save]{.guibutton} 保存 VLAN 连接。
7.  关闭 `nm-connection-editor`{.literal}。
:::
::: orderedlist
**验证步骤**
1.  验证设置：
    ``` literallayout
    # ip -d addr show vlan10
    4: vlan10@enp1s0:  mtu 1500 qdisc noqueue state UP group default qlen 1000
        link/ether 52:54:00:d5:e0:fb brd ff:ff:ff:ff:ff:ff promiscuity 0
        vlan protocol 802.1Q id 10  numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535
        inet 192.0.2.1/24 brd 192.0.2.255 scope global noprefixroute vlan10
           valid_lft forever preferred_lft forever
        inet6 2001:db8:1::1/32 scope global noprefixroute
           valid_lft forever preferred_lft forever
        inet6 fe80::8dd7:9030:6f8e:89e6/64 scope link noprefixroute
           valid_lft forever preferred_lft forever
    ```
:::
::: itemizedlist