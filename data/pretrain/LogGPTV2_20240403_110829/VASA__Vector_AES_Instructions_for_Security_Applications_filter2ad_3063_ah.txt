以下是优化后的文本，使其更加清晰、连贯和专业：

---

### 代码部分

```cpp
// 增加计数器的值
counter = _mm512_add_epi64(counter, FULL_OFFSET);

// 匹配左侧*操作与右侧*操作
// 使用组合器，例如左移 + XOR
leftData[w] = mix_keys(leftKeys[w], leftData[w]);
leftKeys[w] = leftData[w];
leftData[w] = _mm512_xor_si512(leftData[w], keys[0]);

// 循环处理
for (size_t r = 1; r < gates[4 * i]; ++r) {
    int mask_indices[ONLINE_BATCH_SIZE];
    block lefts[ONLINE_BATCH_SIZE], rights[ONLINE_BATCH_SIZE];
    block H[ONLINE_BATCH_SIZE][2];

    // 预处理
    for (size_t ii = 0; ii < ONLINE_BATCH_SIZE; ++ii) {
        int i = indices[ii];
        int index = 2 * mask_input[cf->gates[4 * i]];
        mask_indices[ii] = index;
        lefts[ii] = labels[exec_times][cf->gates[4 * i]];
        rights[ii] = labels[exec_times][cf->gates[4 * i + 1]];
    }

    // AES 处理
    Hash(H, lefts, rights, indices, mask_indices, num_gates);

    // 后处理
    for (size_t ii = 0; ii < ONLINE_BATCH_SIZE; ++ii) {
        int i = indices[ii];
        int index = 2 * mask_input[cf->gates[4 * i]];

        GT[exec_times][ands][index][0] = GT[exec_times][ands][indices[i]] ^ H[ii][0];
        GT[exec_times][ands][index][1] = GT[exec_times][ands][indices[i + 1]] ^ H[ii][1];

        block ttt = GTK[exec_times][ands][index] ^ fpre->Delta;
        ttt = ttt & MASK;

        GTK[exec_times][ands][index] = GTK[exec_times][ands][index] & MASK;
        GT[exec_times][ands][index][0] = GT[exec_times][ands][index][0] & MASK;

        if (cmpBlock(&GT[exec_times][ands][index][0], &GTK[exec_times][ands][index], 1)) {
            mask_input[cf->gates[4 * i + 2]] = false;
        } else if (cmpBlock(&GT[exec_times][ands][index][0], &ttt, 1)) {
            mask_input[cf->gates[4 * i + 2]] = true;
        }
    }
}
```

### 详细性能测量

#### ABY 的详细性能测量

我们展示了 ABY 的详细性能测量结果（参见 § 5.2），这些结果汇总在表 8 中，并用于计算表 4 中的摘要。此外，我们还展示了 CrypTFlow2 的详细性能测量结果（参见 § 5.5），这些结果汇总在表 9 中，并用于计算表 7 中的摘要。

#### 表 8: ABY [25] 的运行时间（毫秒）

| 操作 | 电路 | PRP | MIC | RC | PRF |
|------|------|-----|-----|----|-----|
| AES  | Ref [25] | 47.3 | — | — | — |
| AES-NI | 20.5 | 27.6 | 31.3 | 98.5 | — |
| VAES | 16.6 | 19.0 | 20.8 | 66.2 | — |
| 改进% | 23.4% | 45.4% | 50.4% | 48.6% | — |

| SHA-1 | Ref [25] | 236.7 | — | — | — |
|-------|----------|-------|---|---|---|
| AES-NI | 95.4 | 118.6 | 145.7 | 576.2 | — |
| VAES | 69.8 | 79.3 | 87.9 | 378.3 | — |
| 改进% | 36.6% | 49.6% | 65.8% | 52.3% | — |

| SCS-PSI | Ref [25] | 153.0 | — | — | — |
|---------|----------|-------|---|---|---|
| AES-NI | 75.3 | 98.9 | 112.3 | 288.1 | — |
| VAES | 63.9 | 74.2 | 79.7 | 192.7 | — |
| 改进% | 17.8% | 33.3% | 40.9% | 49.5% | — |

| PSI-Phasing | Ref [25] | 87.3 | — | — | — |
|-------------|----------|-------|---|---|---|
| AES-NI | 33.4 | 42.6 | 52.7 | 92.9 | — |
| VAES | 25.3 | 26.1 | 30.7 | 59.6 | — |
| 改进% | 31.8% | 63.2% | 71.6% | 55.8% | — |

#### 表 9: CrypTFlow2 [82] 的运行时间（秒）

| 子操作类型 | 网络 | 实现 | 卷积 | 截断 | ReLU | 矩阵乘法 | 批归一化 | 最大池化 | 总计 |
|------------|------|------|------|------|------|----------|----------|----------|------|
| SqzImg | Ref [82] | 28.1 | — | 4.0 | 27.2 | — | 4.7 | 39.0 |
| VAES | 28.0 | — | 2.9 | 26.9 | — | 3.1 | 35.6 |
| 改进% | 0.6% | — | 36.7% | 0.9% | — | 53.0% | 9.6% |

| SqzCIFAR | Ref [82] | 28.0 | — | 4.0 | 27.0 | — | 4.4 | 38.5 |
|-----------|----------|------|---|------|------|---|------|------|
| VAES | 28.2 | — | 2.9 | 27.2 | — | 3.2 | 35.8 |
| 改进% | −0.8% | — | 38.9% | −0.9% | — | 37.1% | 7.5% |

| ResNet | Ref [82] | 439.7 | 30.8 | 18.7 | 436.1 | 12.7 | 3.2 | 513.3 |
|--------|----------|-------|------|------|-------|------|-----|-------|
| VAES | 448.2 | 20.9 | 12.7 | 444.5 | 11.2 | 2.1 | 503.1 |
| 改进% | −1.9% | 47.5% | 46.5% | −1.9% | 13.2% | 52.1% | 2.0% |

| DenseNet | Ref [82] | 250.1 | 30.6 | 28.6 | 244.3 | 19.2 | 2.7 | 335.6 |
|----------|----------|-------|------|------|-------|------|-----|-------|
| VAES | 250.0 | 21.1 | 20.5 | 243.9 | 16.2 | 1.9 | 313.8 |
| 改进% | 0.1% | 45.5% | 39.5% | 0.2% | 18.6% | 46.6% | 6.9% |

---

希望这能帮助你更好地理解并使用这些信息。如果有任何进一步的问题或需要更多的优化，请告诉我！