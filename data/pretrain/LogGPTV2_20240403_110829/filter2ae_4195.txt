# CSP:trusted-types 初体验
之前被问到这样一个问题，为什么新版Chrome取消了XSS Audit机制？
以前[看到过文章](https://zhuanlan.zhihu.com/p/74288648)说新版Chrome取消这个的原因是因为被绕过的姿势过多(我也不知道几个)或者说是误报影响到正常功能了。并说用`trusted-types`的API替换`XSS Audit`能彻底杜绝`DOM XSS`。
仔细跟了一下[谷歌的开发文档介绍](https://developers.google.com/web/updates/2019/02/trusted-types)，通过给CSP配置一个`trusted-types`属性：
    Content-Security-Policy: trusted-types *
本地测试79.0版本：
    EOF;
    echo $a;
但是并没有抛出错误，继续翻了下文档，找到问题所在:  
需要用Chrome73-78的版本，其次默认配置是不开的，访问`chrome://flags/#enable-experimental-web-platform-features`将其配置打开。
这里用Chrome78测试：  
抛出一个错误，强制要求我们使用`TrustedHTML`，修改代码：
    const templatePolicy = TrustedTypes.createPolicy('template', {
        createHTML: (templateId) => {
          const tpl = templateId;
          if (/^[0-9a-z-]$/.test(tpl)) {
            return ``;
          }
          throw new TypeError();
        }
      });
    const html = templatePolicy.createHTML(location.hash.match(/tplid=([^;&]*)/)[1]);
    // html instanceof TrustedHTML
    document.head.innerHTML = html;
    EOF;
    echo $a;
通过`TrustedTypes.createPolicy`自定义过滤后，return一个`TrustedHTML`来满足CSP的可信要求：
## 最后
在Chrome79下,即使我们开启了`Experimental Web Platform features`这个配置，仍然会遇到`TrustedTypes
is not defined`的问题，emm可能功能正在试验中，然后新版又给移除了？  
其次因为这个问题测试的时候，Chrome会默认更新到79版本有点烦，去[这里](https://www.chromedownloads.net/chrome64win/)，找了个78版本的下载，接着输`msconfig`把谷歌服务的更新关了即可  
最后打开Chrome效果是这样的：  
最后简单总结一下，Chrome取消了XSS Auditor，取而代之的是`trusted-types`可信API，声称可以彻底杜绝DOM
XSS，经过一番体验后，其实本质上为强制开发写一段更为严格的过滤规则。