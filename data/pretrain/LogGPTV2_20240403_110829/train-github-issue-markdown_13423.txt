 _Please make sure that this is a bug. As per ourGitHub Policy, we only
address code/doc bugs, performance issues, feature requests and
build/installation issues on GitHub. tag:bug_template_
**System information**
  * Have I written custom code (as opposed to using a stock example script provided in TensorFlow):  
Yes I have written code which takes an image from a OpenFX framework and
passes it as input to a Tensorflow session in C++, runs the feed forward and
returns the result to a pixel buffer
  * OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  
Linux CentOS 6.10, using gcc/4.8.5 and bazel 0.11.0 with CUDA 9.1 and cuDNN
7.1.2
  * Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:
  * TensorFlow installed from (source or binary):  
from source v1.6.0 zip here:  
https://github.com/tensorflow/tensorflow/archive/v1.6.0.zip
  * TensorFlow version (use command below):  
NA
  * Python version:  
2.7.13 NA
  * Bazel version (if compiling from source):  
0.11.0
  * GCC/Compiler version (if compiling from source):  
gcc 4.8.5
  * CUDA/cuDNN version:  
CUDA 9.1 with 3 updates, cuDNN 7.1.3
  * GPU model and memory:  
GTX 1060 6Gb
You can collect some of this information using our environment capture script  
You can also obtain the TensorFlow version with  
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
**Describe the current behavior**  
the code will no longer compile when I moved to a machine with a GPU
      CXX      Linux-64-debug/rotobot.o
    rotobot.cpp: In function ‘void drawMasks(OpenImageIO::v1_6::ImageBuf&, std::unique_ptr&, OpenImageIO::v1_6::ImageBuf&, std::string&, bool, const bool*, const bool*, const bool*, double, double, double, double, double, double, bool)’:
    rotobot.cpp:435:68: error: ‘inputTensor2’ was not declared in this scope
      tensorflow::Status run_status = tfSession->Run({ { "input_image", inputTensor2 },{ "input_image_meta", inputMetadataTensor } },
                                                                        ^
    rotobot.cpp:439:11: error: no matching function for call to ‘tensorflow::Session::Run(, , , std::vector*)’
       &outputs);
               ^
    rotobot.cpp:439:11: note: candidates are:
    In file included from rotobot.cpp:32:0:
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/public/session.h:121:18: note: virtual tensorflow::Status tensorflow::Session::Run(const std::vector, tensorflow::Tensor> >&, const std::vector >&, const std::vector >&, std::vector*)
       virtual Status Run(const std::vector >& inputs,
                      ^
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/public/session.h:121:18: note:   no known conversion for argument 1 from ‘’ to ‘const std::vector, tensorflow::Tensor> >&’
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/public/session.h:150:18: note: virtual tensorflow::Status tensorflow::Session::Run(const tensorflow::RunOptions&, const std::vector, tensorflow::Tensor> >&, const std::vector >&, const std::vector >&, std::vector*, tensorflow::RunMetadata*)
       virtual Status Run(const RunOptions& run_options,
                      ^
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/public/session.h:150:18: note:   candidate expects 6 arguments, 4 provided
    In file included from /home/sam/dev/tensorflow-1.6.0/tensorflow/core/framework/tensor.h:23:0,
                     from /home/sam/dev/tensorflow-1.6.0/tensorflow/core/public/session.h:24,
                     from rotobot.cpp:32:
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/framework/types.h: In instantiation of ‘struct tensorflow::DataTypeToEnum’:
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/framework/tensor.h:566:46:   required from ‘typename tensorflow::TTypes::Tensor tensorflow::Tensor::tensor() [with T = long int; long unsigned int NDIMS = 3ul; typename tensorflow::TTypes::Tensor = Eigen::TensorMap, 16, Eigen::MakePointer>]’
    rotobot.cpp:1743:53:   required from here
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/framework/types.h:356:3: error: static assertion failed: Specified Data Type not supported
       static_assert(IsValidDataType::value, "Specified Data Type not supported");
       ^
    In file included from /home/sam/dev/tensorflow-1.6.0/tensorflow/core/public/session.h:24:0,
                     from rotobot.cpp:32:
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/framework/tensor.h: In instantiation of ‘typename tensorflow::TTypes::Tensor tensorflow::Tensor::tensor() [with T = long int; long unsigned int NDIMS = 3ul; typename tensorflow::TTypes::Tensor = Eigen::TensorMap, 16, Eigen::MakePointer>]’:
    rotobot.cpp:1743:53:   required from here
    /home/sam/dev/tensorflow-1.6.0/tensorflow/core/framework/tensor.h:566:46: error: ‘v’ is not a member of ‘tensorflow::DataTypeToEnum’
**Describe the expected behavior**  
The code was compiling previously
The previous build environment was v1.6.0.2-gcbc6580
But was built without CUDA options.
I am linking against  
` -ltensorflow -ltensorflow_cc and -ltensorflow_framework -lnsync`
and a few more
but I am not compiling yet.
lines 31,32,33 respectively are:
#include   
#include   
#include 
**Code to reproduce the issue**  
Provide a reproducible test case that is the bare minimum necessary to
generate the problem.
lines 31,32,33 respectively are:
#include   
#include   
#include 
**Other info / logs**  
Include any logs or source code that would be helpful to diagnose the problem.
If including tracebacks, please include the full traceback. Large logs and
files should be attached.
see:  
https://stackoverflow.com/questions/54033100/tensorflow-1-6-0-with-cuda-
support-on-centos-6-10-c-linking-against-libtensorf