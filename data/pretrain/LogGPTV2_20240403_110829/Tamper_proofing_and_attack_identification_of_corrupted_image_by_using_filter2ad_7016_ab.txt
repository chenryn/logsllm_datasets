1
i
j
),(
0
(cid:32)
j
i
1),(
(cid:32)
i
j
),(
0
(cid:32)
i
j
1),(
(cid:32)
and
and
and
and
W
i
j
),(
0
(cid:32)
2
W
i
j
1),(
(cid:32)
2
W
j
i
1),(
(cid:32)
2
W
j
i
),(
0
(cid:32)
2
,           (2) 
where 1(cid:100) i (cid:100) M and 1(cid:100) j (cid:100) N.
During bi-watermark embedding procedure of Figure 2, we 
utilize  a  3(cid:117)3  median  filter  to  blur  the  host  image,  and  calculate 
the  absolute  difference  image  between  host  and  blurred  images. 
The  difference  image  is  divided  into  several  M(cid:117)N  blocks,  and 
calculates  the  variance  of  each  block.  We  rearrange  that  the 
unstable WS(i,j)’s are embedded to the blocks with larger variance, 
and  the  stable  WS(i,j)’s  are  embedded  to  the  rest  ones.  The 
watermark rearrangement provides the perceptual invisibility and 
achieves  the  watermark  permutation.  The  similar  approach  has 
been proposed in [1]. The permutation is termed as the secret key, 
whose space is (M(cid:117)N)!, and it records the original position of the 
permuted  state  watermark  bits.  Subsequently,  modifying  the 
pixels value of block ensures the quantized value t locates at the 
appropriate interval, and t alters to the suitable quantized value in 
Eq.(1). For example, let t1=53 (S0), t2=55 (U1), t3=57 (S0), t4=123
(S1), t5=125  (U0), t6=127  (S1),  and  the  quantized  value  t  of  one 
block is 100. If the block will embed U0, hence, we modify the 
pixels value of block to make t=t5.
In  order  to  increase  the  watermark  capacity,  the  bi-
watermarking  algorithm  integrates  with  visual  cryptography,  is 
termed 
the  embedding 
tri-watermarking  algorithm.  Before 

(b) 
Figure  3:  (a)  Three  binary  images  of  size  64(cid:117)64,  and  (b) 
three  crypto-watermarks  of  size  128(cid:117)128  are  encrypted 
from  Figure 3a. 
procedure,  three  meaningful  binary  images  (I1, I2  and  I3)  are 
encrypted  and  transformed  into  crypto-watermarks  ((cid:465)1, (cid:465)2 and
(cid:465)3)  shown  in  Figure  3.  The  relation  of  crypto-watermarks  is 
defined by, 
(cid:465)1+ (cid:465)2= (cid:465)3,                                   (3) 
where  the  symbol  ‘+’  denotes  the  or-logical  operation.  (cid:465)1  and 
(cid:465)2 are the shared watermarks, and (cid:465)3 is the desired watermark. 
The encryption algorithm is referred to Naor’ method [19], which 
encodes a pixel by two 2(cid:117)2 arrays of subpixel. The watermarks 
W1 and W2 replace by (cid:465)1 and (cid:465)2 in the bi-watermark embedding, 
and  the  host  image  embeds  the  third  desired  watermark  (cid:465)3
simultaneously. 
3.3  Watermark Extracting Algorithm 
While receiving a watermarked image, we divided it into several 
M(cid:117)N  blocks  with  size  a(cid:117)b.  The  quantized  values  of  blocks  are 
measured to extract the watermark Bp. After depermuting Bp to B
by secret key, the recovered watermark B is also named the first 
watermark, W*
1. We interchange the binary values (0(cid:111)1, 1(cid:111)0)
of  unstable  bits  in  W*
1,  and  the  result  is  named  the  second 
watermark, W*
2.  The  block  diagram  of  bi-watermark  extracting 
Figure 4: The block diagram of bi-watermarking and attack discrimination procedures 
algorithm is shown in Figure 4. The similarity (SIM) between two 
watermarks is defined by, 
Figure 5: The decision tree 
modification  (RM)  with  33%  of  image  size.  The  image  cutting, 
image  cropping,  pattern  inserting,  and  some  distortions  perform 
on  the  regional  areas,  are  included  in  the  region  modification. 
There are 11 classes classified into 7 categories. JK is regarded as 
JP attack, GB is regarded as LP attack, and RT, SC and FM are 
involved  to  the  same  category  (Stirmark  [27]).  Meanwhile,  we 
add the non-watermarked (NW) and non-attacked (NA) categories, 
hence,  there  are  totally  9  categories  in  our  algorithm.  The 
identified equation at each node of decision tree is formulated as, 
jiv
),(
(cid:90)
(cid:152)
1
1
jiv
),(
(cid:152)
3
(cid:14)
(cid:90)
3
jiv
),(
(cid:90)
(cid:152)
2
2
jiv
),(
(cid:14)
(cid:152)
4
(cid:14)
(cid:90)
4
(cid:14)
iv
5
j
),(
(cid:152)
(cid:90)
5
(cid:32)
ia
j
),(
,      (6) 
where  vk(i,j)  denotes  the  similarity  vk  under  j-th  attack  at  i-th
training  image,  1(cid:100)i(cid:100)M,  1(cid:100)j(cid:100)27  and  k={1,2,…,5}. (cid:90)k  and  a(i,j)
represent  the  weighting  value  and  the  attack  state  respectively. 
We employ M training images to estimate the weight values. All 
of  the  identified  equations  in  Eq.(6)  are  rewritten  to  the  matrix 
form, 
2
v
v
1
)1,
)2,
)1,1(
)1,1(
(cid:170)
(cid:171)
(cid:23)
(cid:23)
(cid:171)
(cid:171)
Mv
Mv
(
2
1
(cid:171)
Mv
Mv
(
(cid:171)
2
1
(cid:171)
(cid:23)
(cid:23)
(cid:171)
Mv
Mv
)27,
(cid:171)
(cid:172)
2
1
V (cid:32)(cid:156)
A
(cid:58)
(
(
(
(
)1,
)2,
)27,
3
v
)1,1(
(cid:23)
Mv
3
Mv
3
(cid:23)
Mv
3
(
(
(
)1,
)2,
)27,
4
v
)1,1(
(cid:23)
Mv
4
Mv
4
(cid:23)
Mv
4
(
(
(
)1,
)2,
)27,
5
v
)1,1(
(cid:23)
Mv
5
Mv
5
(cid:23)
Mv
5
(
(
(
)1,
)2,
)27,
(cid:186)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:188)
(cid:90)
(cid:170)
1
(cid:171)
(cid:90)
(cid:171)
2
(cid:171)
(cid:90)
3
(cid:171)
(cid:90)
(cid:171)
4
(cid:171)
(cid:90)
(cid:172)
5
(cid:186)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:188)
(cid:32)
(cid:170)
(cid:171)
(cid:171)
(cid:171)
(cid:171)
(cid:171)
(cid:171)
(cid:171)
(cid:171)
(cid:172)
a
)1,1(
(cid:23)
Ma
(
Ma
(
(cid:23)
Ma
(
)27,
)1,
)2,
,      (7) 
(cid:186)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:187)
(cid:188)
where  matrices  V, (cid:58)  and  A  are  the  matrices  of  size  5(cid:117)(27(cid:117)M), 
1(cid:117)5 and 1(cid:117)(27(cid:117)M), respectively. An example of global/regional 
attack  classification  (at  node  C),  we  set  the  initial  a(i,j)=(cid:68)  for 
SIM
lk
,
(cid:32)
b
j
),(,
lk
i
(cid:32)
1
NM
(cid:117)
(cid:173)
1
(cid:174)
0
(cid:175)
M
N
b
lk
,
(cid:166)(cid:166)
i
j
1
1
(cid:32)
(cid:32)
*
j
i
W
if,
),(
k
elsewise
, 
              (4) 
j
i
),(
(cid:32)
W
l
j
i
),(
.              (5) 
1 and W*
W*
k  and  Wl  represent  the  k-th  extracted  watermark  and  l-th
original watermark, respectively. bk,l is a binary image, it locates 
the  same  watermark  bits  between  extracted  watermark  W*
k  and 
original one Wl.
2, and then derives the third watermark W*
If  the  watermarked  image  hides  tri-watermark,  the  bi-
watermark  extracting  algorithm  firstly  extracts  two  watermarks, 