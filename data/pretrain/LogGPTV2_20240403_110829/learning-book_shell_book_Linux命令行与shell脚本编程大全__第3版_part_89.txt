### 天气脚本

天气脚本会连接到指定城市的Yahoo!天气页面，下载并保存该网页的内容到一个临时文件中。随后，它会从这个文件中提取相关的天气信息，并在完成后删除临时文件，最终显示提取到的天气数据。这种方法的优势在于，一旦你成功地从网站上抓取了所需的数据，就可以对其进行各种处理，例如生成温度图表。你可以设置一个每天运行的cron任务（详见第16章）来持续追踪当天的气温变化。

**重要提示**：互联网环境不断变化。如果你花费时间确定了网页上特定数据的位置，几周后发现这些数据已经移动或消失，导致脚本失效，请不要感到惊讶。实际上，上述示例在你阅读本书时可能已经不再适用。关键是要理解如何从网页中提取数据的方法，以便将这一原理应用到不同的场景中。

### 25.3 使用电子邮件

随着电子邮件的普及，几乎每个人都拥有至少一个电子邮箱地址。因此，在很多情况下，人们更倾向于通过邮件接收信息而不是查看文件或打印资料。同样地，在shell脚本编程中，当需要将报告发送给他人时，通常也是以电子邮件的形式进行。

#### 主要工具 - Mailx程序

Mailx是一个强大的工具，不仅可以用于交互式地读取和发送消息，还可以通过命令行参数直接控制消息的发送方式。但在使用之前，请确保已安装包含Mailx的mailutils包。某些Linux发行版还要求额外安装邮件服务器软件（如sendmail或Postfix）。

##### Mailx命令行格式
```
mail [-eLinv] [-a header [b addr][c addr][s subj]] to-addr...
```

表25-2列出了Mailx可用的命令行参数：
| 参数 | 描述 |
| --- | --- |
| -a | 指定额外的SMTP头部行 |
| -b | 添加BCC收件人 |
| -c | 添加CC收件人 |
| -E | 如果消息为空，则不发送 |
| -i | 忽略TTY中断信号 |
| -I | 强制Mailx以交互模式运行 |
| -n | 不读取/etc/mail.rc启动文件 |
| -s | 指定邮件主题 |
| -v | 在终端上显示投递细节 |

通过命令行参数，可以轻松构建整个电子邮件。唯一需要添加的是邮件正文，这可以通过将文本重定向到Mailx命令来实现。下面是一个简单的例子，演示了如何直接在命令行上创建并发送一封电子邮件：

```bash
echo "This is the body of the email" | mail -s "Subject Line" recipient@example.com
```

#### 示例脚本 - 发送阶乘结果

此脚本计算用户输入数字的阶乘，并通过电子邮件将结果发送给用户。

```bash
#!/bin/bash
# 计算阶乘并将结果通过邮件发送
MAIL=$(which mailx)
factorial=1
counter=1
read -p "Enter a number: " value
while [ $counter -le $value ]; do
    factorial=$((factorial * counter))
    counter=$((counter + 1))
done
echo "The factorial of $value is $factorial" | $MAIL -s "Factorial Result" $SUSER
echo "The result has been mailed to you."
```

运行此脚本时，用户会被提示输入一个数字，然后脚本会计算其阶乘并通过邮件发送结果。请确保`$SUSER`环境变量已被正确设置为接收者的邮箱地址。

### 25.4 小结

本章介绍了如何在脚本中使用一些高级功能，包括利用MySQL存储持久性数据、通过Lynx浏览器从网页中提取数据以及使用Mailx程序发送电子邮件报告。下一章将继续展示更多有趣的shell脚本示例，进一步展现shell脚本编程的强大能力。