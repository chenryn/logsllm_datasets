circuit breaker and result in a power outage.
D. Pulsation Thermal Attack
Based on our measurement results, the heat cannot be
emitted immediately, and the temperature dynamics is non-
linear. Thus, attackers can heat the targeted server within a
certain amount of time and then pause for a while, and repeat
this on/off heat pattern for many times. We call such an on/off
heat strategy a pulsation thermal attack. Using the same HPL
benchmark with the block size of 50 and the problem size
of 40,000, we mount both a pulsation thermal attack and a
continuous thermal attack. The results are shown in Figure 9.
In comparison with the continuous attack, on one hand,
the pulsation attack can reach almost
the same maximum
temperature, with about 0.56◦C lost; but over the entire attack
duration, the difference of average temperature between these
two attacks is about 1.8◦C, which means that less heat is
generated by the pulsation attack.
On the other hand, in the pulsation attack, the temperature
variation can be as large as 6◦C in 15 minutes, which is much
higher than that of the continuous attack. A recent work [19]
reports that a high variability in temperature has a stronger
effect on hardware reliability. Based on their observations,
the probability of hardware failure is almost double when the
CoV (coefﬁcient of variation) in temperature is bigger than
0.0074. We list the CoV in temperature of these two attacks in
Table I. It clearly shows that the CoV of the pulsation attack
is much larger than both 0.0074 and that of the continuous
attack. Thus, a pulsation attack will have a less chance to
cause local hotspots and cooling failures but degrade its end-
host’s hardware reliability more seriously than its continuous
counterpart.
Moreover, the attack cost of a pulsation attack is lower
than that of a continuous attack, especially for those attacks on
SaaS platforms such as web servers. Besides the periodic style,
Fig. 9: Margin temperature of pulsation and continuous attacks.
attack on a non-virtualized environment in Figure 7(b), which
clearly demonstrates the signiﬁcant temperature increase of the
core under the thermal attack.
C. Virtualized Environments
Most computing services provided by clouds run in vir-
tualized environments, except for dedicated hosting services.
A simple approach to mounting a thermal attack is to rent a
cloud instance and run thermal-intensive workloads in a VM,
regardless of cloud service models (e.g., SaaS (Software as a
Service), PaaS, and IaaS). However, only in IaaS can attackers
achieve tenant co-residence and fully control
the running
workloads. Thus, the effective attack vector in a virtualized
environment is to subscribe one or multiple VM(s) in one
physical host and then run thermal-intensive workloads at the
same time.
We emulate the IaaS services by running four VMs on our
testbed, each VM allocated with 4GB memory and 4 vCPUs,
under Xen hypervisor, which is the same hypervisor running
in Amazon EC2. We run all VMs with 25% utilization as our
baseline for representing a normal case. Then we select one or
more VM(s) with designed workloads running to exhaust the
host resources. In our controlled VM(s), we run the following
thermal-intensive workloads: (1) SPECCPU 456.hmmer, (2)
HPL with the block size set to 200 and N set to 10,000,
and (3) a combination of 456.hmmer, HPL and TPCC-UVa.
Figure 8(a) shows the attack results.
While the outlet temperature is about 33◦C under the base-
line condition, some attacks can raise the temperature to almost
37◦C. The attacks running HPL, 456.hmmer and TPCC-UVa,
which ensure both CPU and I/O intensive workloads, can lead
to about a 16◦C margin temperature. With just one malicious
VM controlled, an attacker can raise the temperature by almost
4◦C higher than that of the baseline within 10 minutes.
Recent research shows that it is still relatively easy to
achieve tenant co-residence in public clouds. When an at-
tacker can run multiple VMs on the same physical machine,
it can mount a more powerful thermal attack. We measure
the temperature of the host when different numbers of VMs
run thermal-intensive workloads. The results in Figure 8(b)
clearly demonstrate that with more VMs controlled, a thermal
attack can heat the server to a higher temperature. Also, a
7
050010001500200025003000350005101520Time (s)Temperature (C)  HPL−pulsationHPL−continuous(a) CPU damage.
(b) Disk damage.
Fig. 10: Attack on a Non-Virtualized Environment.
Fig. 11: Attack on a Virtual-
ized Environment.
Fig. 12: Attack with various
numbers of VMs.
a pulsation attack can also be launched with random intervals
to avoid speciﬁc trafﬁc patterns, making the pulsation attack
harder to detect.
While our current attack vector is to simply run thermal-
intensive workloads on IaaS platforms, there are many other
potential attack vectors on different platforms (e.g, PaaS and
SaaS). For instance, as shown in the previous work [51],
random webpage requests can cause signiﬁcant cache misses
and then consume much more energy. Such a feature could
also be exploited in thermal attacks. We will explore more
effective attack vectors in our future work.
E. Damage Analysis
We use several most common temperature induced in-
trinsic hard failure mechanisms, including electromigration,
time dependent dielectric breakdown, thermal cycling and disk
failure [48], [18], [45], to analyze the reliability degradation
caused by a thermal attack. We use λ to represent the failure
rate of each failure mechanism.
Electromigration (EM). EM is induced by the gradual
movement of the ions in a conductor as a result of the
momentum transfer between electrons and the diffusing metal
atoms [6]. Hardware failures including the opening of metal
lines/contacts, shorts between adjacent metal lines, or metal
levels or junctions could be caused by EM. Equation 2 gives
the EM failure rate (λEM ), which is commonly based on
Black’s model.
λEM = A0(J − Jcrit)−ne(−Ea/kT )
(2)
where A0 is a constant
is empirically determined, J
represents the current density, Jcrit is the threshold current
density, Ea is a material dependent constant representing the
activation energy, and k is Boltzmann’s constant.
that
Time dependent dielectric breakdown (TDDB). TDDB
occurs when the gate oxide breaks down due to low electric
ﬁelds. It causes the formation of conductive paths through
dielectrics. The model is deﬁned in Equation 3. The parameters
are similar to those of EM.
λT DDB = A0eγEox e(−Ea/kT )
(3)
Thermal cycling (TC). The large difference in thermal
expansion coefﬁcients of silicon substrate and other materials,
which causes thermal cycling (TC), eventually leads to per-
manent failures, such as the creation of cracks, fractures, short
8
circuits, die interface, and more. The effects of low frequency
cycling can be modeled via the Cofﬁn-Mason equation [29].
λT C = C0(∆T − ∆To)−q,
(4)
where ∆T is the temperature difference, q is a material
dependent Cofﬁn Manson exponent with a common value
ranging from 1 to 9. ∆To is the portion of the temperature
cycle range in the elastic region and could be dropped since
it is usually much less than the temperature cycling range.
Disk failure. For damage analysis on a disk due to elevated
temperatures, we use the model build in [45], which is derived
from the Arrhenius equation. Since our testbed does not
contain an embedded sensor for monitoring disk temperature,
we analyze the thermal impact on the lifetime of a disk based
on the outlet temperature, which should be lower than the
actual disk temperature.
λdisk = Ae(−Ea/kT )
(5)
We use the reliability model in RAMP (Reliability-Aware
MicroProcessors) [48], which assumes that all individual fail-
ures are independent. We add up all the individual failure rates
and compute the MTTF (Mean-Time-To-Failure) as 1/λ.
Our model is calibrated so that the default MTTF is set
to 10 years under normal conditions as previous hardware
reliability research such as [30]. While different hardware
with different technology could possess different lifetimes, the
trend remains similar. Therefore, we normalize all results to
minimize the calibration error.
We use the temperature of all CPU cores to estimate
the CPU reliability. The normalized results of impacts upon
reliability are illustrated in Figure 10, where Figure 10(a)
indicates the core damages while Figure 10(b) shows the disk
failure. The average bar represents the ﬁrst phase where the
testbed is running moderate workloads with average utilization.
The second phase is represented as “cap”, which means the
utilization has reached the cap utilization. The “attack” bar
represents the last phase where thermal-intensive workloads
are running. We can see that when the system utilization
reaches a certain cap, the increased temperature affects the
hardware reliabilities. However, under thermal attacks,
the
hardware reliabilities are seriously degraded.
Figure 11 shows the impact of thermal attacks on a
virtualized environment. Even with just one VM controlled,
the reliability of the host suffers much degradation, with
almost a half reduction of the baseline case. Figure 12 shows
the dynamics of MTTF under thermal attacks with different
numbers of VMs, indicating that the reliability would suffer
more degradation with more VMs under malicious control.
Soft errors. High temperature could also negatively affect
the soft errors, which will happen if the collected charge at
a junction is equal to the critical charge. The critical charge
represents the minimum charge to ﬂip the bit in the cell. It was
observed that the increase of temperature decreases the value
of the critical charge [17], [31], making the occurrence of soft
errors more probable.
V. ATTACKS ON DATA CENTERS
The damage of thermal attacks is not limited to victim
servers. Thermal attacks also change the surrounding environ-
mental temperature of these victim servers, and thus impacting
the thermal conditions of the entire computer room, as well as
the thermal performance of other servers and the cooling costs
of the data center. To evaluate the impact of thermal attack
at the data center level, we conduct a trace-driven simulation
based on computational ﬂuid dynamics (CFD), a powerful
mechanical ﬂuid dynamic analysis approach that can be used
to simulate the air recirculation conditions in the data center.
We assume that the simulated data center is equipped with
air-cooling CRACs. Also, the data center has adopted a smart
workload scheduling policy (e.g., [34]), so that the supply air
temperature set point can be set higher for minimizing cooling
costs, as suggested in [19].
For the data center layout, we use a standard layout with
alternating hot and cold aisles, as illustrated in Figure 1. The
cold air goes under the raised ﬂoor and enters the cold aisle
through perforated tiles to cool down the servers. Note that the
standard data center layout has been designed to minimize the
air recirculation effect. Other data center structures could result
in worse damages under a thermal attack. We assume that the
targeted data center has one computer room, which contains
four rows of servers, with eight racks in each row. Each rack
contains 40 servers, totaling 1,280 servers. The volumetric ﬂow
rate of the intake air is set to 0.0068m3/s for each server.
The rate for a CRAC unit to push chilled air into a raised
ﬂoor plenum is 9,000f t3/min. We use a widely adopted CFD
package, Fluent [3], to simulate the thermal environment under
different workload distributions, and then get the percentage
of heat ﬂow recirculated among the servers.
Based on the CFD analysis [49], the air recirculation effect
among different servers can be modeled as follows:
KiT i
out =
hjiKjT j
hjiKj)Tsup + Pi, (6)
j=1
T i
in =
N(cid:88)
j=1
j=1
hji ∗ (T j
out − Tsup) + Tsup,
(7)
where T i
out represents the outlet temperature of server i. Ki
is a multiplicative factor representing the air density and the
air ﬂow rate. The air recirculation is described with h. T i
in
and Tsup represent the inlet temperature of server i and the
supply air temperature of CRAC cooling units, respectively. Pi
9
N(cid:88)
out + (Ki − N(cid:88)
Fig. 13: Thermal attacks on a rack signiﬁcantly reduces the
server MTTF. A hotspot attack is shown to be more effective
because of its consideration of air recirculation.
is the power consumption of server i. The outlet temperature
of a server is impacted by the air recirculation from server j
to server i, the cooling effect of the supplied cooling air, and
the power consumption of server i. Equation 7 indicates that
the supply air temperature and the recirculation heat, together,
determine the inlet temperature. The power consumption also
contributes to the thermal condition in the data center.
We use a server trace ﬁle from one of the largest cloud
service vendors in our simulation, which contains the average
CPU utilization of 5,415 servers in every 15 minutes for one
week. We conduct the thermal attack based on the results from
our server-level experiments. We assume the server consumes
100W of idle power and 300W when fully utilized with
moderate workloads. As illustrated in Figure 5, by running
some thermal-extensive workloads, the power consumption can
become higher than that of running moderate workloads, even
when the utilization is the same. The difference could be
as large as 70W. In our attacks, we conservatively assume
that thermal-intensive workload consumes 60W more than the
normal cases.
A. Rack-level Attack
We have shown that a thermal attack can signiﬁcantly
raise the temperature of the targeted server. Here we ﬁrst
evaluate the impact of a thermal attack on a server rack. In
the rack environment, air recirculation causes servers to affect
the temperatures of one another. As a result of heat ﬂows,
different rack locations lead to different temperature impacts.
For example, servers at the bottom of the rack might have
smaller impacts because cold air is supplied from the raised
ﬂoor and ﬂows upward to the ceiling vents. As result, the
bottom servers normally have lower temperatures. To consider
the thermal effects of air recirculation, we compare three attack
strategies for a rack: (1) hotspot attack; (2) non-hotspot attack;
and (3) random attack. In a hotspot attack, we mainly attack
servers that have larger impacts on the rack (e.g., at the top of
the rack) and so it is easier to create hotspots. In a non-hotspot
attack, we focus on servers located in the position with small
thermal effects (e.g., at the rack bottom). In a random attack,
we randomly choose servers to attack. We attack different
(a) 20 servers under attack.
(b) 30 servers under attack.
(c) 40 servers under attack.
(d) 50 servers under attack.
Fig. 14: Cooling costs in the data center under different types of thermal attacks.
numbers of servers in one rack and leave other servers in the
idle state. As introduced in Section IV-E, the temperature rise
affects the hardware failure rate. We thus conduct a hardware
failure analysis using EM, TDDB, and disk failure to assess
the thermal attack on a rack. We use the same parameters and
reliability model as Section IV-E.
Figure 13 illustrates the results (normalized to those of
conducting no attacks). We can see that the average server
MTTF is reduced when more servers are under attack. For
example, with about 10 servers under attack, thermal attacks
can enlarge the failure rate by ∼10% for all servers in a rack,
resulting in a normalized MTTF of ∼90%. When 30 servers
are attacked, the normalized MTTF drops to 75%. Among
the three types of attack, the hotspot attack causes the most
damage as those positions can maximize the thermal effects. It
indicates that air recirculation indeed affects the server thermal
conditions even in a single rack.
B. Datacenter-level Attack
1) Attack scenarios: Since the knowledge of air recircu-
lation can make a difference, we now consider three types