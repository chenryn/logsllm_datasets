205,800,000
92,460,000
115,400,000
205,800,000
Sum
184,891,612
1,483,161,357
301,856,918
158,933,466
2,128,843,353
Mean
4,740,811
5,682,611
2,794,971
5,676,195
4,882,668
# domain names
with valid data
68
344
144
51
607
Min
0.01
0.01
0.01
0.01
0.01
Max
41.70
631.50
264.00
8.62
631.50
Sum Mean
2.11
4.90
3.31
0.67
3.85
143.49
1684.62
476.95
34.32
2339.38
# domain names
with valid data
83
425
181
93
782
DNSDB (DNS queries)
Min
1
2
1
2
1
Max
30,896,251
19,727,061
61,561,400
11,357,814
61,561,400
Sum
58,835,762
52,593,168
302,969,603
63,461,471
477,860,004
Mean
708,865
123,749
1,673,865
682,381
611,074
Table 9: Advertising provider domain names redirected to SE
domain names.
Advertising provider
newstarads.com
traktrafficflow.com
mybestmv.com
revimedia.com
naganoadigei.com
doubleclick.net
googleadservices.com
adk2x.com
clksite.com
cobalten.com
bodelen.com
googlesyndication.com
cpmstar.com
go2affise.com
inclk.com
digitaldsp.com
dtiserv2.com
tradeadexchange.com
adf.ly
adreactor.com
friendlyduck.com
revcontent.com
servedbytrackingdesk.com
reimageplus.com
adnetworkperformance.com
All advertising provider
# Unique SE domains redirected from ad provider
155
134
123
122
99
90
80
75
52
41
41
36
29
28
23
21
19
19
19
19
16
16
16
14
14
427
domain names of SE pages redirected from each ad domain. We
found 25 ad domains that led to SE attacks. Categories of SE attacks
frequently distributed by ad domains were multimedia scam, un-
wanted browser extension, fake anti-virus software (PUP/malware
category), and fake Java update (PUP/malware category). The ad
domain that redirected to the most SE page’s domain names was
newstarads.com, which led to 155 unique domain names. Two
domain names (doubleclick.net and googleadservices.com)
redirected to 89 and 79 unique domain names of unwanted browser
extension and they also redirected to the same phishing domain
names. We found that 30.4% (427/1,404) of the total SE domain
names were reached from these advertising domain names.
Prevalence of SE attacks To measure how many users encoun-
tered multi-step SE attacks, we analyzed the statistics of user ac-
cesses. We used SimilarWeb1, Alexa Web Information Service
(AWIS)2, and DNSDB3 to investigate website traffic volumes of
1,404 domain names that StraySheep collected, as mentioned in
Section 4. SimilarWeb and AWIS provide website traffic statistics of
domain names. DNSDB is a passive DNS database that provides
the total number of DNS queries of domain names. Table 8 lists the
numbers of unique domain names newly observed at each depth in
ascending order and statistics (minimum, maximum, sum, mean)
of website traffic and DNS queries. Note that # domain names with
valid data means the number of domain names excluding the data
that are zero or not available in the data sources. Since most SE
pages’ domain names were observed at depth two, there were still
44.9% (630) of domain names observed at deeper depths. In other
1https://www.similarweb.com/
2https://awis.alexa.com/
3https://www.dnsdb.info/
words, there are many domain names at deeper depths that can
only be reached by following multiple web pages with StraySheep.
The statistics of user accesses and DNS queries show that these
websites have the same level of population with domain names
observed at shallow depths, some of which are covered by previous
systems. For example, the mean of SimilarWeb’s total visits at depth
four (5,676,195) is almost the same as that at depth two (5,682,611)
and is larger than that at depth one (4,740,811). Also, the sum of
AWIS’s pageviews per million at depths three and four is 511.27,
which is 21.9% of the total. In the data of DNSDB, the number of
valid domain names at depth three (181) is less than depth two
(425); however, the sum of DNS queries (302,969,603) is larger than
that at depth three (52,593,168). Therefore, we showed that there
are many malicious domain names that StraySheep reaches by fol-
lowing multiple web pages from landing pages. Also, these domain
names, which previous systems cannot reach, have a large number
of user accesses. One reason for this is that these domain names
are distributed by large-scale advertising providers, as shown in
Table 9. We also investigated network infrastructures. The details
of this investigation are given in Appendix B.
6 DISCUSSION
In this section, we discuss the limitations of StraySheep and ethical
considerations during our study.
6.1 Limitations
There are limitations with StraySheep in terms of system environ-
ment, system implementation, and evasion of our system.
System Environment In the evaluation discussed in this paper,
StraySheep was run in a single environment. Some SE pages may
not serve the same web page every time due to an ad network or
cloaking technology. Specifically, a website changes the web page
to be delivered according to the source IP address, web-browser
environment, and browsing history. In this case, there are SE attacks
that cannot be reached in the current StraySheep environment.
However, as described in Section 3.2, StraySheep does not depend
on the selected browser environment and connection network.
Thus, preparing multiple browser environments and connection
networks enables us to collect environment-dependent SE attacks.
System Implementation StraySheep implements web-search
based URL collection methods; thus, attacks originating from other
types of sources (e.g., email) are out of its scope. Since SE attacks
attempt to lure more users to their web pages, attackers should
prepare landing pages that can be easily visited from popular web
platforms, i.e., search engines and social media. StraySheep cov-
ered these platforms and retrieve landing pages using easily cus-
tomizable search queries. Since interacting HTML forms are not
implemented in StraySheep’s current web-crawling module, it
cannot crawl web pages that require login, account creation, and
Session 8: Web Security ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan405survey. However, StraySheep’s SE-detection module can identify
these web pages because it uses not only features of the reached
web page but also features extracted from the entire sequence.
Evasion There may be an evasion technique against StraySheep’s
web-crawling module to create a web page that redirects users to SE
attacks without preparing any lure elements. This technique leads to
a lowering of the collection efficiency of SE attacks of StraySheep.
There may be another evasion technique that introduces CAPTCHA
authentication in the middle of an SE attack. An SE attack with
CAPTCHA authentication cannot be collected with the current
implementation of StraySheep. However, these evasion techniques
greatly reduce the number of potential victims, which leads to a
reduction in the success rate of attacks. Therefore, we believe that
it is unlikely that an attacker actually carries them out, as it goes
against the current trend of SE attacks.
There may also be an evasion technique against StraySheep’s
SE-detection module designed as a classification approach. Attack-
ers modify an SE page’s appearance to evade the future design and
structure of web pages. However, this module also extracts features
from the entire sequence of web page, such as occurrence of popup
windows displaying fake infection alerts and redirections caused
by a user’s unintended clicks. Thus, we believe it is still difficult
for attackers to evade because these features represent attacker’s
effective technique to lure users to their web pages.
6.2 Ethical Consideration
Our study followed research ethics principles and best practices [11,
20, 29, 38]. While we conducted parallel crawling for various web-
sites, each of our crawling sessions sequentially traversed web
content on the same website, so only a restricted amount of traf-
fic to the website was generated, which did not increase website
workload. Our crawling carefully created web requests according
to the manner of a real web browser and did not create any harmful
web requests breaking or exploiting websites. Due to using a real
web browser, our crawling faithfully performs according to the
natural behavior of web browsers. Furthermore, the intention of
our automated crawling is not to thwart the monetization model
of benign web ads. There is no alternative and realistic way to di-
rectly observe SE attacks except for active crawling; however, there
is a risk of unexpectedly contributing to malicious pay-per-click
(PPC) or pay-per-install (PPI) monetization. Our crawling did not
intentionally concentrate on specific PPC or PPI services.
7 RELATED WORK
Web-based SE attacks and their defenses have been gaining the
attention of researchers. We review related work in terms of collect-
ing these attacks and analyzing the attack mechanisms. Duman et al.
focused on the visual properties of trick banners, which lure users
into clicking on fake links [13]. They built a Firefox browser exten-
sion called TrueClick to detect such trick banners based on image
processing and machine learning. StraySheep finds lure elements
including trick banners and interacts with them to confirm whether
they actually lead users to SE attacks. Rafique et al. analyzed free
live streaming services and their ecosystems [27]. They found that
users of these services are exposed to ads, malware, and unwanted
browser extensions. Our analysis found that not only live stream-
ing services but also web pages showing illegal content, such as
music and games, uses lure elements to lead users to malware and
unwanted browser extensions. Nelms et al. studied the sequences
of visited web pages preceding malware downloads in drive-by
download and SE attacks [24]. They proposed a system called Web-
Witness to passively trace back the visited web pages to analyze
how users reach the attacks. They also presented a systematic study
on successful SE attacks leading to malicious and unwanted soft-
ware [25]. They categorized and identified the tactics used in such
SE attacks to gain users’ attention. While these studies [24, 25] pas-
sively traced back real victim’s traffic, StraySheep actively collects
SE attacks and does not rely on real victims. Vadrevu et al. devel-
oped a specific web-browser system called ChromePic to enable the
reconstruction of SE attacks [35]. ChromePic introduces a detailed
snapshot of logging into Chromium to enable the investigation of
SE attacks. Whereas ChromePic focuses on forensics after users
reached SE attacks, proactive and large-scale crawling of the latest
SE attacks. Miramirkhani et al. conducted the first systematic anal-
ysis of technical-support-scam web pages [23]. Specifically, they
developed a system that can identify such web pages and collect
them to show their prevalence, the abused infrastructure, and il-
licit profits. Srinivasan et al. analyzed technical support scams by
focusing on search-engine results and corresponding sponsored ad-
vertisements [29]. They generated technical-support-related special
search-engine queries to discover previously unknown technical
support scams. StraySheep also finds identified technical support
scams based on search engine results, as well as scams that require
multiple interactions to reach. Kharraz et al. proposed a system
called Surveylance [17] to identify survey scams using search en-
gines and a web-crawling approach. While this system identifies
only landing pages having survey content (e.g., advertisement in
iframe), StraySheep also identifies survey scams by clicking lure
elements, which do not display survey content.
8 CONCLUSION
We proposed a system called StraySheep to crawl web pages and
detect multi-step SE attacks. Our key idea is based on (1) simu-
lating multi-step browsing behavior of users to efficiently crawl
web pages leading to SE attacks and (2) extracting features from
reached web pages as well as the entire sequence of web pages to
accurately detect such attacks. Our experimental results indicate
that StraySheep can lead to 20% more SE attacks than Alexa top
sites and search results of trend words, crawl five times more effi-
ciently than a simple crawling module, and detect SE attacks with
95.5% accuracy. StraySheep will be useful for security vendors,
search engine providers, and social-media companies in terms of
analyzing trends in SE attacks.
ACKNOWLEDGMENTS
We would like to thank the anonymous reviewers and our shepherd
Xiaojing Liao for their helpful feedback.
REFERENCES
[1] 2019. Doc2vec paragraph embeddings. https://radimrehurek.com/gensim/
models/doc2vec.html.
[2] 2019. Heritrix. https://github.com/internetarchive/heritrix3.
Session 8: Web Security ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan406[3] 2019.
hosts-blocklists.
blocklists.
https://github.com/notracking/hosts-
[4] 2019. hpHosts. http://www.hosts-file.net/.
[5] 2019. Microsoft Cognitive Services Bing Search Engine APIs. https://azure.
microsoft.com/en-us/services/cognitive-services/search/.
[6] 2019. Selenium. https://www.seleniumhq.org/.
[7] 2019. Tesseract Open Source OCR Engine. https://github.com/tesseract-
ocr/tesseract.
[8] 2019. Web of Trust. https://www.mywot.com/en/scorecard/etnamedia.net.
[9] Pablo Fernández Alcantarilla, Jesús Nuevo, and Adrien Bartoli. 2013. Fast Explicit
[10] Pieter Arntz. 2018.
Diffusion for Accelerated Features in Nonlinear Scale Spaces. In Proc. BMVC.