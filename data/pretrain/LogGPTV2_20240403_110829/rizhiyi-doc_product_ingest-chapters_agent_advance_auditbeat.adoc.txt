==== Audit 审计采集
Audit 审计日志采集是 Linux 日志采集很常见的场景。但是 Linux 默认的 auditd 日志比较分散，一次用户交互事件，会拆分成多条日志记录，并主要依靠 uid/pid/gid 等不利于肉眼阅读的方式进行事件关联。
日志易内嵌 开源版本的 auditbeat 模块，根据配置自动生成 auditbeat 配置， 然后以子进程方式启动，采集其输出的，经过整合的 audit 审计事件和文件完整性监控事件。
详细的 auditbeat 配置说明，参见：https://www.elastic.co/guide/en/beats/auditbeat/current/index.html
注意：auditbeat 非开源版本包含的 system module 不在日志易内嵌范围内。
版本::
linux heka 3.4.0.5以上(包含)
准备工作::
. 需要重新安装heka，否则bin目录下没有auditbeat可执行文件(如无法重装，可考虑拷贝auditbeat可执行文件到目录下,给可执行权限)
. 如果需要使用auditd数据采集功能，需要检查linux内核版本(uname -r)，如内核版本小于3.16(不包含)，需要执行下面的步骤
.. 查看auditd服务是否在运行:service auditd status
.. 停止auditd服务:service auditd stop
.. 二进制auditd服务的开机启动:chkconfig auditd off
.. 为了节省cpu和磁盘使用率，可以停止journald审计audit消息:systemctl mask systemd-journald-audit.socket
===== 配置方法
在### Other下增加以下内容
  [1_auditbeat_input]
  type="AuditBeatInput"
  splitter = "heka_auditbeat_splitter"
  appname="appname"
  tag="tag"
  [1_auditbeat_input.auditd]
  # 规则，一条规则为一个元素
  audit_rules=[""]
  # 是否禁用auditd数据采集,默认为false
  disable=false
  # 同id的事件只可能和此时间范围内的发生合并(不配置即为默认值2s)
  #reassembler.timeout="2s"
  [1_auditbeat_input.fileintegrity]
  # 是否禁用文件完整性监控,默认为true
  disable=true
  # 需要监控的目录
  paths=["/tmp/test"]
  # 需要排除的文件和需要包含的文件的正则表达式(可不配置)
  #exclude_files=[""]
  #include_files=[""]
  # 如果文件大小超过这个值，则不会对其进行hash运算
  max_file_size_mb=100
  # 是否递归的检测目录下的文件
  recursive=false
  [heka_auditbeat_splitter]
    type = "TokenSplitter"
===== 样例数据
**auditd 审计数据样例**
[source,javascript]
----
{
  "agent": {
    "ephemeral_id": "21520359-0b4f-4a93-aaad-57f20e6447c5",
    "hostname": "centos",
    "id": "26070aa6-8fb8-4c8f-904c-573334c96e73",
    "type": "auditbeat",
    "version": "7.3.0"
  },
  "auditd": {
    "data": {
      "acct": "root",
      "grantors": "pam_env,pam_fprintd",
      "op": "PAM:setcred"
    },
    "message_type": "cred_disp",
    "result": "success",
    "sequence": 1855844,
    "summary": {
      "actor": {
        "primary": "unset",
        "secondary": "root"
      },
      "how": "/usr/bin/sudo",
      "object": {
        "type": "user-session"
      }
    }
  },
  "ecs": {
    "version": "1.0.1"
  },
  "event": {
    "action": "disposed-credentials",
    "category": "user-login",
    "module": "auditd",
    "outcome": "success"
  },
  "host": {
    "name": "centos"
  },
  "metadata": {
    "beat": "auditbeat",
    "type": "_doc",
    "version": "7.3.0"
  },
  "process": {
    "executable": "/usr/bin/sudo",
    "pid": 18262
  },
  "service": {
    "type": "auditd"
  },
  "timestamp": "2020-10-29T01:22:04.632Z",
  "user": {
    "id": "0",
    "name": "root"
  }
}
----
**file_integrity 文件完整性数据样例**
[source,javascript]
----
{
  "agent": {
    "ephemeral_id": "21520359-0b4f-4a93-aaad-57f20e6447c5",
    "hostname": "centos",
    "id": "26070aa6-8fb8-4c8f-904c-573334c96e73",
    "type": "auditbeat",
    "version": "7.3.0"
  },
  "ecs": {
    "version": "1.0.1"
  },
  "event": {
    "action": [
      "created"
    ],
    "dataset": "file",
    "module": "file_integrity"
  },
  "file": {
    "ctime": "2020-10-28T10:34:01.035Z",
    "gid": "0",
    "group": "root",
    "inode": "1133134",
    "mode": "0644",
    "mtime": "2020-10-28T10:34:01.035Z",
    "owner": "root",
    "path": "/tmp/test/1.txt",
    "size": 0,
    "type": "file",
    "uid": "0"
  },
  "hash": {
    "sha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
  },
  "host": {
    "name": "centos"
  },
  "metadata": {
    "beat": "auditbeat",
    "type": "_doc",
    "version": "7.3.0"
  },
  "service": {
    "type": "file_integrity"
  },
  "timestamp": "2020-10-28T10:34:01.036Z"
}
----
**unknown 其他数据样例**
[source,javascript]
----
{
  "agent": {
    "ephemeral_id": "d3f3e875-44b7-47d1-878b-23e66a1a7d89",
    "hostname": "centos",
    "id": "26070aa6-8fb8-4c8f-904c-573334c96e73",
    "type": "auditbeat",
    "version": "7.3.0"
  },
  "ecs": {
    "version": "1.0.1"
  },
  "error": {
    "message": "failed to set audit PID. An audit process is already running (PID 612)"
  },
  "event": {
    "module": "auditd"
  },
  "host": {
    "name": "centos"
  },
  "metadata": {
    "beat": "auditbeat",
    "type": "_doc",
    "version": "7.3.0"
  },
  "service": {
    "type": "auditd"
  },
  "timestamp": "2020-10-28T10:14:12.354Z"
}
----
===== 注意事项
. 采集到的数据的appname和tag不等配置中的appname和tag
** 如果采集到的数据是auditd数据，则appname(数据)=appname(配置)_auditd tag(数据)=tag(配置)_auditd
** 如果采集到的数据是文件完整性数据，则appname(数据)=appname(配置)_file_integrity tag(数据)=tag(配置)_file_integrity
** 如果采集到的数据不是上述两种，则appname(数据)=appname(配置)_unknown tag(数据)=tag(配置)_unknown
. 如果出现问题，可以到conf目录下查看auditbeat.yml(auditbeat的配置文件)，以及根据配置查看日志
. 如果对于auditbeat.yml文件中其他配置项有修改需求，请联系研发
. 一定需要重装heka确保bin目录下有auditbeat可执行文件
. 一般来说如果出现了appname_unknown的日志，而没有auditd的日志，可能是准备工作中没有关掉系统的auditd(或者其他类似)服务