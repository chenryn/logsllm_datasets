### rotate num
**Description:**
Specifies the number of backups to allow for each log file. When a log file becomes full, the logs are saved to a backup file, and the log file is cleared for new logs. You can specify between 0 and 100 backups. If the maximum number of backups is reached, the oldest backups are purged to make room for new ones.

**Default:**
The default number of backups is 0.

**Usage:**
- **Range:** 0-100
- **Example:** `rotate 5` will allow 5 backup files per log file.

### size Mbytes
**Description:**
Specifies the size of each log file in megabytes. You can specify a size between 0 and 1,000,000 MB. If you specify 0, the file size is unlimited.

**Default:**
The default size is 0 (unlimited).

**Usage:**
- **Range:** 0-1,000,000
- **Example:** `size 100` will set the log file size to 100 MB.

### Default
**Description:**
See the descriptions provided for each parameter.

**Mode:**
Configuration mode

### Usage
When logging is enabled, the default minimum severity level that is logged is "debugging." The per-protocol option is recommended because it writes messages from different routing protocols to separate files, which can simplify troubleshooting. Without this option, messages from all routing protocols are written to the same file.

**Command:**
```plaintext
router log log-buffer
```

**Description:**
Sends router logs to the logging buffer.

**Syntax:**
```plaintext
[no] router log log-buffer
```

**Default:**
Disabled by default.

**Mode:**
Configuration mode

### rule-set
**Description:**
Configure a Data Center Firewall rule set.

**For more information:**
Refer to the Data Center Firewall Guide.

### run-hw-diag
**Description:**
Access the hardware diagnostics menu on the next reboot.

**CAUTION:**
The system will be unavailable for normal operations while a test is running.

**NOTE:**
- A reboot is required before the hardware diagnostics menu appears.
- If you reboot to a software release that does not support the hardware diagnostics menu, the menu will not be available.
- Currently, the hardware diagnostics menu is supported in AX Release 2.4.3-P3 and later 2.4.x releases, and in AX Release 2.6.1.

**Syntax:**
```plaintext
run-hw-diag
```

**Mode:**
Configuration mode

**Usage:**
- The hardware diagnostic menu is available only on serial console sessions.
- To run a test, you must use a serial console connection.
- The `run-hw-diag` command requires a reboot. After the reboot, a menu with the following options appears:
  - **1 - Memory Test**
  - **2 - HDD/CF Scan Test (1-2 hours)**
  - **3 - MBR (Master Boot Record) check**
  - **4 - Complete Test (all above)**
  - **x - Reboot**

**Example:**
```plaintext
ACOS(config)#run-hw-diag
Please confirm: You want to run HW diagnostics (N/Y)?:y
Please reboot the system when you are ready.
HW diagnostic will run when the system comes back up.
ACOS(config)#end
ACOS#reboot
Proceed with reboot? [yes/no]:yes
Rebooting......
```

**Post-Reboot Menu:**
```plaintext
INIT: version 2.86 booting
Booting.........mdadm: stopped /dev/md1
mdadm: stopped /dev/md0
00000000000
------------------------------------------------------
| Hardware Diagnostic Menu |
------------------------------------------------------
| 1 - Memory Test |
| 2 - HDD/CF Scan Test (1-2 hours) |
| 3 - MBR (Master Boot Record) check |
| 4 - Complete Test (all above) |
| x - Reboot |
------------------------------------------------------
Please select an option [1-4, x]:
```

### running-config display
**Description:**
Configure whether or not aFleX and class-list file information should be included in the running configuration.

**Syntax:**
```plaintext
[no] running-config display {aflex | class-list}
```

**Parameters:**
- **aflex:** Show aFleX scripts in the running configuration.
- **class-list:** Show class-list files in the running configuration.

**Default:**
By default, aFlex and class-list file information is not displayed.

**Mode:**
Configuration mode

**Usage:**
One or both options may be specified.

### scaleout
**Description:**
Configure Scaleout.

**For more information:**
Refer to the Configuring Scaleout guide.

### session-filter
**Description:**
Configure a session filter.

**Syntax:**
```plaintext
[no] session-filter filter-name set
{
dest-addr ipv4addr [dest-mask {/length | mask}] |
dest-port portnum |
ipv6 |
sip |
source-addr ipv4addr |
source-port portnum
}
```

**Parameters:**
- **dest-addr ipv4addr [dest-mask {/length | mask}]:** Matches on sessions that have a destination IPv4 address.
- **dest-port portnum:** Matches on sessions that have a destination protocol port number (1-65535).
- **ipv6:** Matches on all sessions that have a source or destination IPv6 address.
- **sip:** Matches on all SIP sessions.
- **source-addr ipv4addr:** Matches on sessions that have a source IPv4 address.
- **source-port portnum:** Matches on sessions that have a source protocol port number (1-65535).

**Default:**
No session filters are configured by default.

**Mode:**
Configuration mode

**Usage:**
Session filters allow you to save session display options for use with the `clear session` and `show session` commands. Configuring a session filter allows you to specify a given set of options one time rather than re-entering the options each time you use the `clear session` or `show session` command.

**Example:**
```plaintext
ACOS(config)#session-filter f1 source-addr 1.0.4.147
ACOS(config)#show session filter f1
Prot Forward Source Forward Dest Reverse Source Reverse Dest
Age Hash
------------------------------------------------------------------------------------------
-----------------
Tcp 1.0.4.147:51613 1.0.100.1:21 1.0.3.148:21 1.0.4.147:51613
120 1
```

### sflow
**Description:**
Enables the ACOS device to collect information about Ethernet data interfaces and send the data to an external sFlow collector (v5).

**Syntax:**
```plaintext
[no] sflow
{
agent address {ipaddr | ipv6addr} |
collector {ip ipaddr | ipv6 ipv6addr} portnum |
polling type |
sampling {ethernet portnum [to portnum] | ve ve-num [to ve-num]} |
setting sub-options |
source-address {ip ipaddr | ipv6 ipv6addr}
}
```

**Parameters:**
- **agent address {ipaddr | ipv6addr}:** Configure an sFlow agent. By default, sFlow datagrams use the management IP of the ACOS device as the source address, but you can specify a different IP address if desired.
- **collector {ip ipaddr | ipv6 ipv6addr} portnum:** Configure up to four sFlow collectors. The default port number is 6343.
- **polling type:** Enables sFlow export of DDoS Mitigation statistics for the source IP address(es) matched by this rule. You can enable polling for the following types of data:
  - **cpu-usage:** Polls for CPU utilization statistics.
  - **ethernet:** Polls for Ethernet data interface statistics.
  - **http-counter:** Polls for HTTP statistics.
  - **ve:** Polls for statistics for Virtual Ethernet (VE) interfaces.
- **sampling {ethernet portnum [to portnum] | ve ve-num [to ve-num]}:** Enable sFlow sampling on a specified interface.
- **setting sub-options:**
  - **counter-polling-interval seconds:** Configure the sFlow counter polling interval. The range is 1-200 seconds. The default is 20 seconds.
  - **max-header bytes:** Maximum number of bytes to sample from any given packet, 14-512 bytes. The default is 128 bytes.
  - **packet-sampling-rate num:** Configure sFlow default packet sampling rate. The range is 10-1,000,000. The default is 1000.
  - **source-ip-use-mgmt:** Enable use of the management interface’s IP as the source address for outbound sFlow packets.
- **source-address {ip ipaddr | ipv6 ipv6addr}:** Specify the source IP address for sFlow packets sent from ACOS to sFlow collectors.

**Default:**
- Described above, where applicable.

**Mode:**
Configuration mode

**Usage:**
Enable either or both of the following types of data collection for individual Ethernet data ports:
- **Packet flow sampling:** ACOS randomly selects incoming packets on the monitored interfaces and extracts their headers. Each packet flow sample contains the first 128 bytes of the packet, starting from the MAC header.
- **Counter sampling:** ACOS periodically retrieves the send and receive statistics for the monitored interfaces.

**Notes:**
- Sampling of a packet includes information about the incoming interface but not the outgoing interface.
- None of the following are supported:
  - Host resource sampling
  - Application behavior sampling
  - Duplication of traffic to multiple sFlow collectors
  - Configuration of sFlow Agent behavior using SNMP

**Example:**
```plaintext
ACOS(config)#sflow collector ip 192.168.100.3 5
ACOS(config)#sflow setting source-ip-use-mgmt
```

### slb
**Description:**
Configure Server Load Balancing (SLB) parameters. For information about the SLB commands, see “Config Commands: Server Load Balancing” in the Command Line Interface Reference for ADC.

### smtp
**Description:**
Configure a Simple Mail Transfer Protocol (SMTP) server to use for sending emails from the ACOS device.

**Syntax:**
```plaintext
[no] smtp
{
{hostname | ipaddr} |
[mailfrom email-src-addr] |
[needauthentication] |
[port protocol-port] |
[username string password string]
}
```

**Parameters:**
- **hostname | ipaddr:** Specifies an SMTP server.
- **mailfrom email-src-addr:** Specifies the email address to use as the sender (From) address.
- **needauthentication:** Specifies that authentication is required. This is disabled by default.
- **port protocol-port:** Specifies the protocol port on which the server listens for SMTP traffic. The default port is 25.
- **username string password string:** Specifies the username and password required for access. The password can be 1-31 characters long.

**Default:**
No SMTP servers are configured by default. When you configure one, it has the default settings described in the table above.

**Mode:**
Configuration mode

**Example:**
```plaintext
ACOS(config)#smtp ourmailsrvr
```

### snmp
**Description:**
For information about SNMP commands, see “Config Commands: SNMP” on page 225.

### so-counters
**Description:**
Show scale out statistics.

**Syntax:**
```plaintext
so-counters [sampling-enable options]
```

**Options:**
- **all:** All packets.
- **so_pkts_conn_in:** Total packets processed for an established connection.
- **so_pkts_conn_redirect:** Total packets redirected for an established connection.
- **so_pkts_dropped:** Total packets dropped.
- **so_pkts_errors:** Total packet errors.
- **so_pkts_in:** Total number of incoming packets.
- **so_pkts_new_conn_in:** Total packets processed for a new connection.
- **so_pkts_new_conn_redirect:** Total packets redirected for a new connection.
- **so_pkts_out:** Total number of packets sent out.
- **so_pkts_redirect:** Total number of packets redirected.

**Mode:**
Configuration mode

### sshd
**Description:**
Perform an SSHD operation on the system.

**Syntax:**
```plaintext
sshd
{
key generate [size {2048 | 4096}] |
key load [use-mgmt-port] url |
key regenerate [size {2048 | 4096}] |
key wipe |
restart
}
```

**Parameters:**
- **key generate [size {2048 | 4096}]:** Generate an SSH key. You can choose to specify a key size; use size 2048 to generate a 2048-bit key, or size 4096 to generate a 4096-bit key.
- **key load [use-mgmt-port] url:** Load an SSH key. Specify `use-mgmt-port` to use the management interface as the source interface for the connection to the remote device. The management route table is used to reach the device. By default, the ACOS device attempts to use the data route table to reach the remote device through a data interface. Specify the URL to the SSH key. You can enter the entire URL on the command line or press Enter to display a prompt for each part of the URL. If you enter the entire URL and a password is required, you will still be prompted for the password. The password can be up to 255 characters long.
- **key regenerate [size {2048 | 4096}]:** Regenerate an SSH key. You can choose to specify a key size; use size 2048 to generate a 2048-bit key, or size 4096 to generate a 4096-bit key.
- **key wipe:** Wipe an SSH key.
- **restart:** Restart the SSH service.

**Mode:**
Configuration mode

**Introduced in:**
Release 4.0.1

**Example:**
```plaintext
ACOS(config)#sshd key generate size 4096
```

### syn-cookie
**Description:**
Enable hardware-based SYN cookies, which protect against TCP SYN flood attacks.

**Syntax:**
```plaintext
[no] syn-cookie enable [on-threshold num off-threshold num]
```

**Parameters:**
- **on-threshold num:** Maximum number of concurrent half-open TCP connections allowed on the ACOS device before SYN cookies are enabled. You can specify 0-2,147,483,647 half-open connections.
- **off-threshold num:** Minimum number of concurrent half-open TCP connections for which to keep SYN cookies enabled. If the number of half-open TCP connections falls below this level, SYN cookies are disabled. You can specify 0-2,147,483,647 half-open connections.

**NOTE:**
It may take up to 10 milliseconds for the ACOS device to detect and respond to crossover of either threshold.

**Default:**
Hardware-based SYN cookies are disabled by default. When the feature is enabled, there are no default settings for the on and off thresholds.

**Mode:**
Configuration mode

**Usage:**
- Hardware-based SYN cookies are available only on some models.
- If both hardware-based and software-based SYN cookies are enabled, only hardware-based SYN cookies are used. You can leave software-based SYN cookies enabled, but they are not used. (Software-based SYN cookies are enabled at the virtual port level using the `syn-cookie enable` command.)
- If you omit the `on-threshold` and `off-threshold` options, SYN cookies are enabled and are always on regardless of the number of half-open TCP connections present on the ACOS device.
- This command globally enables SYN cookie support for SLB and also enables SYN cookie support for Layer 2/3 traffic. No additional configuration is required for SLB SYN cookie support. However, to use Layer 2/3 SYN cookie support, you also must enable it at the configuration level for individual interfaces. See the `ip tcp syn-cookie threshold` command in the Network Configuration Guide.
- If L3V partitions are configured, hardware-based SYN cookies must be enabled per individual partition. Hardware-based SYN cookies are NOT partition-aware.
- On FTA models only, it is recommended not to use hardware-based SYN cookies if DSR is also enabled. If both features are enabled, a client who sends TCP requests to a VIP that is configured for DSR will receive two SYN-ACKs, one from the ACOS hardware-based SYN-ACK and one from the DSR server.