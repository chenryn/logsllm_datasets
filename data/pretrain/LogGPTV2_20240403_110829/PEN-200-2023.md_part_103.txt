[-SkipRegistryLoggedOn] [-OverrideUsername ] [-RealDNSName ] [-
CollectAllProperties] [-Loop] [-LoopDuration ]
[-LoopInterval ] [-StatusInterval ] [-Verbosity ] [-Help] [-
Version] []
DESCRIPTION
Using reflection and assembly.load, load the compiled BloodHound C# ingestor into
memory
and run it without touching disk. Parameters are converted to the equivalent CLI
arguments
for the SharpHound executable and passed in via reflection. The appropriate
function
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 730
Made in Morocco
Penetration Testing with Kali Linux
calls are made in order to ensure that assembly dependencies are loaded properly.
RELATED LINKS
REMARKS
To see the examples, type: "get-help Invoke-BloodHound -examples".
For more information, type: "get-help Invoke-BloodHound -detailed".
For technical information, type: "get-help Invoke-BloodHound -full".
Listing 786 - Checking the SharpHound options
We’ll begin with the -CollectionMethod, which describes the various collection methods.1064 In our
case, we’ll attempt to gather All data, which will perform all collection methods except for local
group policies.
By default, SharpHound will gather the data in JSON files and automyatically zip them for us. This
makes it easy for us to transfer the file to Kali Linux later. We’ll save this output file on our
desktop, with a “corp audit” prefix as shown below:
k
PS C:\Tools> Invoke-BloodHound -CollectionMethod All -OutputDirectory
C:\Users\stephanie\Desktop\ -OutputPrefix "corp ausdit"
Listing 787 - Running SharpHound to collect domain data
Note that the data collection may take a few mooments to finish, depending on the size of the
environment we are enumerating. Let’s examine SharpHound’s output:
n
2022-10-12T09:20:22.3688459-07:00|INFORMATION|This version of SharpHound is compatible
with the 4.2 Release of BloodHound
2022-10-12T09:20:22.5909898-07:00|INFORMATION|Resolved Collection Methods: Group,
i
LocalAdmin, GPOLocalGroup, Session, LoggedOn, Trusts, ACL, Container, RDP,
z
ObjectProps, DCOM, SPNTargets, PSRemote
2022-10-12T09:20:22.6383624-07:00|INFORMATION|Initializing SharpHound at 9:20 AM on
10/12/2022 D
2022-10-12T09:20:22.9661022-07:00|INFORMATION|Flags: Group, LocalAdmin, GPOLocalGroup,
Session, LoggedOn, Trusts, ACL, Container, RDP, ObjectProps, DCOM, SPNTargets,
PSRemote
2022-10-12T09:20:23.3881009-07:00|INFORMATION|Beginning LDAP search for corp.com
2022-10-12T09:20:23.4975127-07:00|INFORMATION|Producer has finished, closing LDAP
channel
2022-10-12T09:20:23.4975127-07:00|INFORMATION|LDAP channel closed, waiting for
consumers
2022-10-12T09:20:53.6398934-07:00|INFORMATION|Status: 0 objects finished (+0 0)/s --
Using 96 MB RAM
2022-10-12T09:21:13.6762695-07:00|INFORMATION|Consumers finished, closing output
channel
2022-10-12T09:21:13.7396906-07:00|INFORMATION|Output channel closed, waiting for
output task to complete
Closing writers
2022-10-12T09:21:13.8983935-07:00|INFORMATION|Status: 106 objects finished (+106
2.12)/s -- Using 104 MB RAM
2022-10-12T09:21:13.8983935-07:00|INFORMATION|Enumeration finished in 00:00:50.5065909
2022-10-12T09:21:14.0094454-07:00|INFORMATION|Saving cache with stats: 66 ID to type
mappings.
1064 (Specter Ops, 2022), https://bloodhound.readthedocs.io/en/latest/data-collection/sharphound-all-flags.html
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 731
Made in Morocco
Penetration Testing with Kali Linux
68 name to SID mappings.
2 machine sid mappings.
2 sid to domain mappings.
0 global catalog mappings.
2022-10-12T09:21:14.0255279-07:00|INFORMATION|SharpHound Enumeration Completed at 9:21
AM on 10/12/2022! Happy Graphing!
Listing 788 - SharpHound output
Based on the output in Listing 788, we scanned a total of 106 objects. This will obviously vary
based on how many objects and sessions exist in the domain.
In this case, SharpHound essentially took a snapshot of the domain from the stephanie user, and
we should be able to analyze everything the user account has access to. The collected data is
stored in the zip file located on our Desktop:
PS C:\Tools> ls C:\Users\stephanie\Desktop\ y
Directory: C:\Users\stephanie\Desktop
k
Mode LastWriteTime Length Name
---- ------------- ------ s----
-a---- 9/27/2022 11:00 PM 12680 corp
audit_20220927230019_BloodHound.zip
-a---- 9/27/2022 11:00 PM o9734
MTk2MmZkNjItY2IyNC00MWMzLTk5YzMtM2E1ZDcwYThkMzRl.bin
Listing 789 - SharpHound generated files
n
We’ll use this file in the next section as we analyze the data with BloodHound. Sharphound
created the bin cache file to speed up data collection. This is not needed for our analysis and we
i
can safely delete it.
z
One thing to note is that SharpHound also supports looping, which means that the collector will
run cyclical queries of our Dchoosing over a period of time. While the collection method we used
above created a snapshot over the domain, running it in a loop may gather additional data as the
environment changes. The cache file speeds up the process. For example, if a user logged on
after we collected a snapshot, we would have missed it in our analysis. We will not use the
looping functionality, but we recommend experimenting with it in the training labs and inspecting
the results in BloodHound.
21.4.2 Analysing Data using BloodHound
In this section, we will analyze the domain data using BloodHound in Kali Linux, but it should be
noted that we could install the application and required dependencies on Windows-based
systems as well.
In order to use BloodHound, we need to start the Neo4j1065 service, which is installed by default.
Note that when Bloodhound is installed with APT,1066 the Neo4j service is automatically installed
as well.
1065 (Neo4j, 2022), https://neo4j.com/
1066 (Kali), https://www.kali.org/tools/bloodhound/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 732
Made in Morocco
Penetration Testing with Kali Linux
Neo4j is essentially an open source graph database (NoSQL)1067 that creates nodes, edges, and
properties instead of simple rows and columns. This facilitates the visual representation of our
collected data. Let’s go ahead and start the Neo4j service:
kali@kali:~$ sudo neo4j start
Directories in use:
home: /usr/share/neo4j
config: /usr/share/neo4j/conf
logs: /usr/share/neo4j/logs
plugins: /usr/share/neo4j/plugins
import: /usr/share/neo4j/import
data: /usr/share/neo4j/data
certificates: /usr/share/neo4j/certificates
licenses: /usr/share/neo4j/licenses
run: /usr/share/neo4j/run
Starting Neo4j. y
Started neo4j (pid:334819). It is available at http://localhost:7474
There may be a short delay until the server is ready.
k
Listing 790 - Starting the Neo4j service in Kali Linux
As indicated in the output, the Neo4j service is now running and it should be available via the web
s
interface at http://localhost:7474. Let’s browse this location and authenticate using the default
credentials (neo4j as both username and password):
o
n
i
z
D
Figure 268: Neo4j First Login
After authenticating with the default credentials, we are prompted for a password change.
1067 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Graph_database
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 733
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
Figure 269: Neo4j Password Change
In this case, we can choose any passwordn we’d like; however, we must remember it since we’ll
also use it to authenticate to the database later.
Once we have changed the passwiord, we can authenticate to the database and run our own
queries against it. However, sincez we haven’t imported any data yet there isn’t much we can do
and we’d rather allow BloodHound to run the queries for us.
D
With Neo4j running, it’s time to start BloodHound as well. We can do this directly from the
terminal:
kali@kali:~$ bloodhound
Listing 791 - Starting BloodHound in Kali Linux
Once we start BloodHound, we are met with an authentication window, asking us to log in to the
Neo4j Database:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 734
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
Figure 270: BloodHound Login
As indicated by the green check mark in the first column, BloodHound has automatically detected
o
that we have the Neo4j database running. In order to log in, we use the neo4j username and the
password we created earlier.
n
Since we haven’t imported data yet, we don’t have any visual representation of the domain at this
point. In order to import the data, we must first transfer the zip file from our Windows machine to
our Kali Linux machine. We can theni use the Upload Data function on the right side of the GUI to
upload the zip file, or drag-and-drzop it into BloodHound’s main window. Either way, the progress
bar indicates the upload progress.
D
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 735
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
n
Figiure 271: Uploading Collected Data
z
Once the upload is finished, we can close the Upload Progress window.
Now it’s time to start analyzDing the data. Let’s first get an idea about how much data the database
really contains. To do this, let’s click the More Info tab at the top-left. This presents the Database
Info as shown below:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 736
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
n
i
z
D
Figure 272: BloodHound DB Info
Our small environment doesn’t contain much. But in some cases, especially in a larger
environment, the database may take some time to update. In these cases, we can use the Refresh
Database Stats button to present an updated view.
Looking at the information, we have discovered four total sessions in the domain, which have
been enumerated (using NetSessionEnum and PsLoggedOn techniques we used earlier).
Additionally, we have discovered a wealth of ACLs, a total of 10 users, 57 groups, and more.
We’ll explain the Node Info later, as there isn’t much here at this point. For now, we are mostly
interested in the Analysis button. When we click it, we are presented with various pre-built analysis
options:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 737
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
n
i
z
D
Figure 273: BloodHound Analysis Overview
There are many pre-built analytics queries to experiment with here, and we will not be able to
cover all of them in this Module. However, to get started, let’s use Find all Domain Admins under
Domain Information. This presents the graph shown below:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 738
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
Figure 274: BloodHound Domain Admins
n
Each of the circle icons are known as nodes, and we can drag them to move them in the interface.
In this case the three nodes are connected and BloodHound placed them far apart from each
i
other, so we can simply moved them closer to each other to keep everything nice and clean.
z
In order to see what the two nodes on the left represent, we can hover over them with the mouse
pointer, or we can toggle thDe information by pressing the control button. While toggling on and off
the information for each node may be preferred for some analysis, we can also tell BloodHound
to show this information by default by clicking Settings on the right side of the interface and
setting Node Label Display to Always Display:
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 739
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
n
Figure 275: BloodHound Node Display
Based on this view, the Domain Admins for the domain are indeed jeffadmin and the administrator
i
account itself. As shown in Figure below, BloodHound shows an edge in the form of a line
z
between the user objects and the Domain Admins group, indicating the relationship, which in this
case tells us that the particular users are a member of the given group:
D
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 740
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
o
Figure 276: BnloodHound Node Display2
Although BloodHound is capable of deep analysis, much of its functionality is out of scope for
this Module. For now, we’ll focus on ithe Shortest Paths shown in the Analysis tab.
z
One of the strengths of BloodHound is its ability to automatically attempt to find the shortest path
possible to reach our goal, whether that goal is to take over a particular computer, user, or group.
D
Let’s start with the Find Shortest Paths to Domain Admins as it provides a nice overview and
doesn’t require any parameters. The query is listed towards the bottom of the Analysis tab.
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 741
Made in Morocco
Penetration Testing with Kali Linux
y
k
s
Figure 277: BloodHound Shortest Path DA
o
This reveals the true power of BloodHound. We can analyze this graph to determine our best
attack approach. In this case, the graph will reveal a few things we didn’t catch in our earlier