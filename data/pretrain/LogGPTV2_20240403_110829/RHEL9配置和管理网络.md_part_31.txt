                  ca_cert: "/etc/pki/ca-trust/source/anchors/ca.crt"
                  domain_suffix_match: example.com
                state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/enable-802.1x.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-static-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#authenticating-a-rhel-client-to-the-network-using-the-802-1x-standard-with-a-certificate-stored-on-the-file-system_configuring-and-managing-networking.html#proc_configuring-a-wi-fi-connection-with-802-1x-network-authentication-using-the-rhel-system-roles_authenticating-a-rhel-client-to-the-network-using-the-802-1x-standard-with-a-certificate-stored-on-the-file-system}使用 RHEL 系统角色使用 802.1X 网络身份验证配置 Wi-Fi 连接 {.title}
:::
使用 RHEL 系统角色，您可以自动创建 Wi-Fi 连接。此流程描述了如何使用
Ansible playbook 为 `wlp0s29u1u2`{.literal}
接口远程添加无线连接配置集。创建的配置集使用 802.1X 标准将客户端验证到
Wi-Fi 网络。该 playbook 将连接配置集配置为使用 DHCP。要配置静态 IP
设置，相应地调整 `ip`{.literal} 字典中的参数。
::: itemizedlist
**先决条件**
-   您已在控制节点上安装了 ansible 和 rhel-system-roles 软件包。
-   网络支持 802.1X 网络身份验证。
-   如果您在运行 playbook 时使用了与 `root`{.literal}
    不同的远程用户，则您必须在受管节点上具有合适的 `sudo`{.literal}
    权限。
-   您已在受管节点上安装了 `wpa_supplicant`{.literal} 软件包。
-   DHCP 位于受管节点的网络中。
-   control 节点上存在 TLS 身份验证所需的以下文件：
    ::: itemizedlist
    -   客户端密钥存储在 `/srv/data/client.key`{.literal} 文件中。
    -   客户端证书存储在 `/srv/data/client.crt`{.literal} 文件中。
    -   CA 证书存储在 `/srv/data/ca.crt`{.literal} 文件中。
    :::
:::
在 [*Ansible 控制节点 上执行以下步骤*]{.emphasis}。
::: orderedlist
**流程**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建 `~/enable-802.1x.yml`{.literal} playbook：
    ``` literallayout
    ---
    - name: Configure a Wi-Fi connection with 802.1X authentication
      hosts: "node.example.com"
      become: true
      tasks:
        - name: Copy client key for 802.1X authentication
          copy:
            src: "/srv/data/client.key"
            dest: "/etc/pki/tls/private/client.key"
            mode: 0400
        - name: Copy client certificate for 802.1X authentication
          copy:
            src: "/srv/data/client.crt"
            dest: "/etc/pki/tls/certs/client.crt"
        - name: Copy CA certificate for 802.1X authentication
          copy:
            src: "/srv/data/ca.crt"
            dest: "/etc/pki/ca-trust/source/anchors/ca.crt"
        - block:
            - import_role:
                name: linux-system-roles.network
              vars:
                network_connections:
                  - name: Configure the Example-Wi-Fi profile
                    interface_name: wlp0s29u1u2
                    state: up
                    type: wireless
                    autoconnect: yes
                    ip:
                      dhcp4: true
                      auto6: true
                    wireless:
                      ssid: "Example-Wi-Fi"
                      key_mgmt: "wpa-eap"
                    ieee802_1x:
                      identity: "user_name"
                      eap: tls
                      private_key: "/etc/pki/tls/client.key"
                      private_key_password: "password"
                      private_key_password_flags: none
                      client_cert: "/etc/pki/tls/client.pem"
                      ca_cert: "/etc/pki/tls/cacert.pem"
                      domain_suffix_match: "example.com"
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/enable-802.1x.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/ethernet-static-IP.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
:::
[]{#managing-the-default-gateway-setting_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#managing-the-default-gateway-setting_configuring-and-managing-networking.html#managing-the-default-gateway-setting_configuring-and-managing-networking}第 20 章 管理默认网关设置 {.title}
:::
默认网关是路由器，在任何其他路由都不匹配数据包的目的地时转发网络数据包。在本地网络中，默认网关通常是一个最接近互联网的主机。
::: section
::: titlepage
# []{#managing-the-default-gateway-setting_configuring-and-managing-networking.html#setting-the-default-gateway-on-an-existing-connection-using-nmcli_managing-the-default-gateway-setting}使用 nmcli 在现有连接上设置默认网关 {.title}
:::
在大多数情况下，管理员在创建连接时设置默认网关，例如，[使用 nmcli
配置静态以太网连接](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-nmcli_configuring-an-ethernet-connection "使用 nmcli 配置静态以太网连接"){.link}。
这部分论述了如何使用 `nmcli`{.literal}
实用程序在之前创建的连接中设置或更新默认网关。
::: itemizedlist
**先决条件**
-   至少需要在设置默认网关的连接上配置一个静态 IP 地址。
-   如果用户在物理控制台中登录，用户权限就足够了。否则，用户必须具有
    `root`{.literal} 权限。
:::
::: orderedlist
**步骤**
1.  设置默认网关的 IP 地址。
    例如，要将示例连接上默认网关的 IPv4 地址设置为 `192.0.2.1`{.literal}
    ：[]{.emphasis} ``{.literal}
    ``` literallayout
    $ sudo nmcli connection modify example ipv4.gateway "192.0.2.1"
    ```
    例如，要将示例连接上默认网关的 IPv6 地址设置为
    `2001:db8:1::1`{.literal} ：[]{.emphasis} ``{.literal}
    ``` literallayout
    $ sudo nmcli connection modify example ipv6.gateway "2001:db8:1::1"
    ```
2.  重启网络连接以使更改生效。例如，要使用命令行重启 `示例`{.literal}
    连接：
    ``` literallayout
    $ sudo nmcli connection up example
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    所有目前使用这个网络连接的连接在重启过程中暂时中断。
    :::
3.  （可选）验证路由是否活跃。
    显示 IPv4 默认网关：
    ``` literallayout
    $ ip -4 route
    default via 192.0.2.1 dev example proto static metric 100
    ```
    显示 IPv6 默认网关：
    ``` literallayout
    $ ip -6 route
    default via 2001:db8:1::1 dev example proto static metric 100 pref medium
    ```
:::
::: itemizedlist
**其它资源**
-   [使用 nmcli
    配置静态以太网连接](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-nmcli_configuring-an-ethernet-connection "使用 nmcli 配置静态以太网连接"){.link}
:::
:::
::: section
::: titlepage
# []{#managing-the-default-gateway-setting_configuring-and-managing-networking.html#setting-the-default-gateway-on-an-existing-connection-using-the-nmcli-interactive-mode_managing-the-default-gateway-setting}使用 nmcli 互动模式在现有连接上设置默认网关 {.title}
:::
在大多数情况下，管理员在创建连接时设置默认网关，例如，[使用 nmcli
互动编辑器配置动态以太网连接](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-dynamic-ethernet-connection-using-the-nmcli-interactive-editor_configuring-an-ethernet-connection "使用 nmcli 互动编辑器配置动态以太网连接"){.link}。
这部分论述了如何使用 `nmcli`{.literal}
实用程序的互动模式在之前创建的连接中设置或更新默认网关。
::: itemizedlist
**先决条件**
-   至少需要在设置默认网关的连接上配置一个静态 IP 地址。
-   如果用户在物理控制台中登录，用户权限就足够了。否则，该用户必须具有
    `root`{.literal} 权限。
:::
::: orderedlist
**步骤**
1.  为所需连接打开 `nmcli`{.literal} 互动模式。例如，要为
    [*example*]{.emphasis} 连接打开 `nmcli`{.literal} 互动模式：
    ``` literallayout
    $ sudo nmcli connection edit example
    ```
2.  设置默认网关。
    例如，要将示例连接上默认网关的 IPv4 地址设置为 `192.0.2.1`{.literal}
    ：[]{.emphasis} ``{.literal}
    ``` literallayout
    nmcli> set ipv4.gateway 192.0.2.1
    ```
    例如，要将示例连接上默认网关的 IPv6 地址设置为
    `2001:db8:1::1`{.literal} ：[]{.emphasis} ``{.literal}
    ``` literallayout
    nmcli> set ipv6.gateway 2001:db8:1::1
    ```
3.  另外，还可验证默认网关是否正确设置：
    ``` literallayout
    nmcli> print
    ...
    ipv4.gateway:                           192.0.2.1
    ...
    ipv6.gateway:                           2001:db8:1::1
    ...
    ```
4.  保存配置：
    ``` literallayout
    nmcli> save persistent
    ```
5.  重启网络连接以使更改生效：
    ``` literallayout
    nmcli> activate example
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    所有目前使用这个网络连接的连接在重启过程中暂时中断。
    :::
6.  保留 `nmcli`{.literal} 互动模式：
    ``` literallayout
    nmcli> quit
    ```
7.  （可选）验证路由是否活跃。
    显示 IPv4 默认网关：
    ``` literallayout
    $ ip -4 route
    default via 192.0.2.1 dev example proto static metric 100
    ```
    显示 IPv6 默认网关：
    ``` literallayout
    $ ip -6 route
    default via 2001:db8:1::1 dev example proto static metric 100 pref medium
    ```
:::
::: itemizedlist
**其它资源**
-   [使用 nmcli
    互动编辑器配置静态以太网连接](#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-the-nmcli-interactive-editor_configuring-an-ethernet-connection "使用 nmcli 互动编辑器配置静态以太网连接"){.link}
:::
:::
::: section
::: titlepage