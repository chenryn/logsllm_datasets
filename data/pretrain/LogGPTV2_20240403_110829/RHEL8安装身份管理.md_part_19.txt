有关安装 IdM 服务器和可用选项的详情，请参考
[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-idm](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-idm){.link}。
:::
::: section
::: titlepage
## []{#installing-an-Identity-Management-server-using-an-Ansible-playbook_installing-identity-management.html#deploying-an-idm-server-with-an-integrated-ca-using-an-ansible-playbook_server-ansible-2}使用 Ansible playbook 将集成 CA 的 IdM 服务器部署为 root CA {.title}
:::
完成此流程，来使用 Ansible playbook 部署带有集成证书颁发机构(CA)作为根
CA 的 IdM 服务器。
::: itemizedlist
**流程**
-   运行带有 playbook 文件名（例如 `install-server.yml`{.literal}）的
    `ansible-playbook`{.literal} 命令。使用 `-i`{.literal}
    选项指定清单文件：
    ``` literallayout
    $ ansible-playbook -v -i /hosts /install-server.yml
    ```
    使用 `-v`{.literal} 、`-vv`{.literal} 或 `-vvv`{.literal}
    选项来指定详细程度。
    您可以查看在命令行界面(CLI)上的 Ansible playbook
    脚本的输出。以下输出显示该脚本运行成功，有 0 个任务失败：
    ``` literallayout
    PLAY RECAP
    server.idm.example.com : ok=18   changed=10   unreachable=0    failed=0    skipped=21   rescued=0    ignored=0
    ```
:::
已使用 Ansible playbook 在主机上安装了 IdM 服务器。
:::
:::
::: section
::: titlepage
# []{#installing-an-Identity-Management-server-using-an-Ansible-playbook_installing-identity-management.html#deploying-an-idm-server-with-an-external-ca-using-an-ansible-playbook_server-ansible-1}使用 Ansible playbook 将外部 CA 部署 IdM 服务器作为 root CA {.title}
:::
::: section
::: titlepage
## []{#installing-an-Identity-Management-server-using-an-Ansible-playbook_installing-identity-management.html#setting-the-parameters-for-a-deployment-with-an-external-CA_server-ansible}使用外部 CA 作为 root CA 设置部署的参数 {.title}
:::
完成此流程，来为安装具有外部 CA 作为根 CA 的 IdM 服务器配置清单文件。
::: orderedlist
**流程**
1.  打开清单文件进行编辑。指定您要用作 IdM
    服务器的主机的完全限定域名(`FQDN`{.literal})。确保 `FQDN`{.literal}
    满足以下条件：
    ::: itemizedlist
    -   只允许字母数字字符和连字符(-)。例如，不允许使用下划线，这可能导致
        DNS 失败。
    -   主机名必须都是小写。
    :::
2.  指定 IdM 域和域信息。
3.  指定您是否希望 IdM 服务器具有集成 DNS ，是否希望它使用
    `/etc/resolv.conf`{.literal} 文件中的正向解析器。
4.  指定 `admin`{.literal} 和 `Directory Manager`{.literal} 的密码。使用
    Ansible Vault 来存储密码，并从 playbook 文件中引用 Vault
    文件。另外，也可以更安全地指定清单文件中直接的密码。
    ::: title
    **包含所需服务器信息的清单文件示例（密码除外）**
    :::
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    [ipaserver:vars]
    ipaserver_domain=idm.example.com
    ipaserver_realm=IDM.EXAMPLE.COM
    ipaserver_setup_dns=yes
    ipaserver_auto_forwarders=yes
    [...]
    ```
    ::: title
    **包含所需服务器信息（包括密码）的清单文件示例**
    :::
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    [ipaserver:vars]
    ipaserver_domain=idm.example.com
    ipaserver_realm=IDM.EXAMPLE.COM
    ipaserver_setup_dns=yes
    ipaserver_auto_forwarders=yes
    ipaadmin_password=MySecretPassword123
    ipadm_password=MySecretPassword234
    [...]
    ```
5.  为安装的第一个步骤创建一个
    playbook。输入有关生成证书签名请求(CSR)，并将其从控制器复制到受管节点的说明。
    ``` literallayout
    ---
    - name: Playbook to configure IPA server Step 1
      hosts: ipaserver
      become: true
      vars_files:
      - playbook_sensitive_data.yml
      vars:
        ipaserver_external_ca: yes
      roles:
      - role: ipaserver
        state: present
      post_tasks:
      - name: Copy CSR /root/ipa.csr from node to "{{ groups.ipaserver[0] + '-ipa.csr' }}"
        fetch:
          src: /root/ipa.csr
          dest: "{{ groups.ipaserver[0] + '-ipa.csr' }}"
          flat: yes
    ```
6.  为安装的最后步骤创建另一个 playbook。
    ``` literallayout
    ---
    - name: Playbook to configure IPA server Step -1
      hosts: ipaserver
      become: true
      vars_files:
      - playbook_sensitive_data.yml
      vars:
        ipaserver_external_cert_files: "/root/chain.crt"
      pre_tasks:
      - name: Copy "{{ groups.ipaserver[0] + '-chain.crt' }}" to /root/chain.crt on node
        copy:
          src: "{{ groups.ipaserver[0] + '-chain.crt' }}"
          dest: "/root/chain.crt"
          force: yes
      roles:
      - role: ipaserver
        state: present
    ```
:::
有关安装具有外部签名的 CA 的 IdM 服务器的可用选项的详情，请参考
[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-an-ipa-server-with-external-ca_installing-identity-management](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/installing_identity_management/index#installing-an-ipa-server-with-external-ca_installing-identity-management){.link}。
:::
::: section
::: titlepage
## []{#installing-an-Identity-Management-server-using-an-Ansible-playbook_installing-identity-management.html#deploying-an-idm-server-with-an-external-ca-using-an-ansible-playbook_server-ansible-2}使用 Ansible playbook 将外部 CA 部署 IdM 服务器作为 root CA {.title}
:::
完成此流程，来使用 Ansible playbook 部署具有外部证书颁发机构(CA)作为根
CA 的 IdM 服务器。
::: orderedlist
**流程**
1.  运行`ansible-playbook`{.literal} 命令，并带有 playbook
    文件名，该文件包含安装的第一步的说明，如
    `install-server-step1.yml`{.literal}。使用 `-i`{.literal}
    选项指定清单文件：
    ``` literallayout
    $ ansible-playbook -v -i /host.server /install-server-step1.yml
    ```
    使用 `-v`{.literal}、`-vv`{.literal} 或 `-vvv`{.literal}
    选项来指定详细程度。
    您可以查看在命令行界面(CLI)上的 Ansible playbook
    脚本的输出。以下输出显示该脚本运行成功，有 0 个任务失败：
    ``` literallayout
    PLAY RECAP
    server.idm.example.com : ok=18   changed=10   unreachable=0    failed=0    skipped=21   rescued=0    ignored=0
    ```
2.  在控制器上找到 `ipa.csr`{.literal} 证书签名请求文件，并提交给外部的
    CA。
3.  将外部 CA 签名的 IdM CA 证书放在控制器文件系统中，以便下一步中的
    playbook 可以找到它。
4.  运行 `ansible-playbook`{.literal} 命令，并带有 playbook
    文件名，该文件包含安装的最后一步的说明，如
    `install-server-step2.yml`{.literal}。使用 `-i`{.literal}
    选项指定清单文件：
    ``` literallayout
    $ ansible-playbook -v -i /host.server /install-server-step2.yml
    ```
:::
已使用 Ansible playbook 在主机上安装了带有外部签名 CA 的 IdM 服务器。
:::
:::
:::
[]{#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html}
::: chapter
::: titlepage
# []{#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management}第 23 章 使用 Ansible playbook 安装身份管理副本 {.title}
:::
::: section
::: titlepage
# []{#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#ansible-and-its-advantages-for-installing-IdM_replica-ansible}Ansible 及其安装 IdM 的优点 {.title}
:::
Ansible 是一个自动化工具，用于配置系统、部署软件和执行滚动更新。Ansible
包含对身份验证(IdM)的支持，您可以使用 Ansible 模块来自动执行安装任务，如
IdM 服务器、副本、客户端或整个 IdM 拓扑的设置。
### []{#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#_advantages_of_using_ansible_to_install_idm_2}使用 Ansible 安装 IdM 的优点
以下列表提供了使用 Ansible 安装身份管理与手动安装的优点。
::: itemizedlist
-   您不需要登录受管节点。
-   您不需要配置每个主机上的设置来单独部署。反之，您可以有一个清单文件来部署完整的集群。
-   您可以稍后重复将清单文件用于管理任务，例如添加用户和主机。即使与 IdM
    相关的任务，也可以重复使用清单文件。
:::
:::
::: section
::: titlepage
# []{#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#IdM-replica-installation-using-an-Ansible-playbook-intro_replica-ansible}使用 Ansible playbook 安装 IdM 副本 {.title}
:::
以下小节论述了如何使用 [Ansible](https://www.ansible.com/){.link}
将系统配置为 IdM 副本。将系统配置为 IdM 副本将它注册到 IdM
域中，并让系统在域中的 IdM 服务器中使用 IdM 服务。
部署是由 `ipareplica`{.literal} Ansible
角色来管理的。该角色可以使用自动发现模式来识别 IdM
服务器、域和其他设置。但是，如果您以类似于层的模式部署多个副本，在不同时间部署不同的副本组，您必须为每个组定义特定的服务器或副本。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
在使用 Ansible 安装 IdM 副本前，请确保您理解
[Ansible](https://docs.ansible.com/ansible/latest/index.html){.link} 和
IdM 概念。请确定您理解本章中使用的以下术语：
::: itemizedlist
-   Ansible 角色
-   Ansible 节点
-   Ansible 清单
-   Ansible 任务
-   Ansible 模块
-   Ansible play 和 playbook
:::
:::
## []{#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#_overview_2}概述
安装由以下部分组成：
::: orderedlist
1.  [安装 ansible-freeipa
    软件包](#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#installing-the-ansible-freeipa-package_replica-ansible "安装 ansible-freeipa 软件包"){.link};
2.  [设置 IdM
    副本部署的参数](#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#setting-the-parameters-of-the-IdM-replica-deployment_replica-ansible "设置 IdM 副本部署的参数"){.link}，包括：
    ::: itemizedlist
    -   [指定用于安装 IdM 副本的base、server 和
        client变量](#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#specifying-the-base-server-and-client-variables-for-installing-the-IdM-replica_replica-ansible "指定用于安装 IdM 副本的基础、服务器和客户端变量"){.link}
        ；
    -   [指定使用 Ansible playbook 安装 IdM
        副本的凭证](#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#specifying-the-credentials-for-installing-the-replica-using-an-ansible-playbook_replica-ansible "使用 Ansible playbook 指定用于安装 IdM 副本的凭证"){.link}
        ；
    :::
3.  [使用 Ansible playbook 部署 IdM
    副本](#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#deploying-an-IdM-replica-using-an-Ansible-playbook_replica-ansible "使用 Ansible playbook 部署 IdM 副本"){.link}.
:::
:::
::: section
::: titlepage
# []{#installing-an-Identity-Management-replica-using-an-ansible-playbook_installing-identity-management.html#installing-the-ansible-freeipa-package_replica-ansible}安装 ansible-freeipa 软件包 {.title}
:::
::: title
**先决条件**
:::
在 [**受管节点**]{.strong} 上：
::: itemizedlist
-   确保受管节点是一个具有静态 IP 地址和可正常工作的软件包管理器的 Red
    Hat Enterprise Linux 8 系统。
:::
在 [**控制器**]{.strong} 上：