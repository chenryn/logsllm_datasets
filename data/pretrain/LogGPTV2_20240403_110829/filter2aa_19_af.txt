2.1.5 人工解析SSL证书
我们发现大多数公司几乎不会意识到自己在互联网上暴露了什么内容。特别是随着云服务应用的增加，许多公司并没有正确采取访问权限控制措施。这些公司认为自己的服务器已经受到保护，但是我们发现很多服务是对外开放的。这些服务包括Redis数据库、Jenkin服务器、Tomcat管理和NoSQL数据库等。其中许多服务导致远程代码执行或个人身份信息失窃。
查找这些云服务器时，一种方法是在互联网上以自动方式人工获取SSL证书。我们根据云服务商提供的IP地址范围列表，定期扫描所有这些地址范围并下载SSL证书。通过查看SSL证书，我们可以了解关于一个组织的大量信息。针对网络安全猫公司IP地址的范围开展扫描，我们可以看到证书中的主机名，.int是内部服务器，.dev是研发主机，vpn是VPN服务器等，如图2.5所示。很多时候，您可以获得内部主机名，这些主机可能没有公共IP或内网允许访问的白名单IP地址。
图2.5
为了实现通过扫描获取证书中的主机名，为本书开发了sslScrape工具。该工具利用Masscan快速扫描大型网络。它能够识别端口443上的服务，并提取证书中的主机名，如图2.6所示。
图2.6
开始运行sslScrape。
cd /opt/sslScrape。
python ./sslScrape.py [IP地址掩码范围]。
本书提供了示例和工具框架。但是，这些代码是否需要进一步开发取决于您。我强烈建议您将此代码作为基础，将所有主机名保存到数据库，开发网站前端交互界面，连接可能具有证书的其他端口，例如8443等，甚至可能会挖掘一些漏洞，例如.git/.svn类型漏洞。
2.1.6 子域名发现
在识别IP范围方面，我们通常可以从公共资源中查找公司的信息，例如美洲互联网号码注册管理机构（ARIN）。我们可以查询IP地址空间的注册人员，搜索公司拥有的网络，按组织查找自治系统编号等。如果我们在北美以外的地区寻找，那么可以通过AFRINIC（非洲）、APNIC（亚洲）、LACNIC（拉丁美洲）和RIPE NCC（欧洲）查询。这些机构都是可供公开查询的，在它们的服务器上可以进行检索。
您可以通过许多可用的公共资源，查询任何主机名或正式域名，获取该域的所有者。您在这些地方查询不到子域名的信息。子域名信息存储在目标的DNS服务器上，而不是在某些集中的公共注册系统上。您必须知道如何搜索才能找到有效的子域名。
为什么找到目标服务器子域名如此重要？有以下几个原因。
某些子域可以指示服务器的类型（如dev、vpn、mail、internal和test），如mail.cyberspacekittens.com。
某些服务器不响应IP查询。它们共享基础架构，仅对正规的域名进行响应。这在云基础架构上很常见。因此，即使一整天都在扫描，但是如果找不到子域名，您都不会真正了解那个IP地址上运行的应用程序。
子域可以提供有关目标托管其服务器的位置信息。这是通过查找公司的所有子域，执行反向查找以及查找IP托管位置来完成的。一家公司可能同时使用多个云服务商和数据中心。
在本书上一版中我们已经做了一些介绍，下面让我们回顾一下当前使用和新出现的工具，从而能够更好地开展子域名发现。欢迎加入并扫描cyberspacekittens.com域名。
1．发现脚本
发现脚本工具是我很喜欢的一个侦察/发现工具，在本书上一版中已经讨论过。我喜欢使用它的原因是它集成了Kali Linux中的多个侦察工具，并且定期维护。被动域名侦察将使用以下工具：ARIN、dnsrecon、goofile、goog-mail、goohost、theHarvester、Metasploit、URLCrazy、Whois、多个网站和recon-ng等。
git clone https://github.com/leebaird/discover/opt/discover/。
cd /opt/discover/。
./update.sh。
./discover.sh。
Domain。
Passive。
[Company Name]。
[Domain Name]。
firefox/root/data/[Domain]/index.htm。
Discover脚本的最大优点是它能够搜集所需的信息，并根据这些信息继续搜索。例如，脚本搜索公共PGP存储库，在识别出电子邮件后，通过邮件地址在“Have I Been Pwned”网站继续搜索（使用Recon-NG脚本）。这样我们就可以第一时间知道这些邮件口令是否已经被公开泄露（您也要查询一下自己的邮件口令是否已经泄露）。
2．Knock
接下来，我们希望了解公司使用的所有服务器和域名。虽然子域名不是集中存储，但是我们可以使用工具（如Knock）暴力破解不同类型的子域名，从而可以识别哪些服务器或主机可能遭受攻击。
Knockpy是一个Python工具，通过字典枚举目标域名的子域名。
Knock 是一个很棒的子域名扫描工具，通过字典枚举子域名，并判断是否可以解析。因此，如果您想了解cyberspacekittens.com子域名，那么利用Knock工具获取下面网址的字典，并查看是否存在[subdomain] .cyberspacekittens.com子域名。这里需要注意的是，Knock 的扫描效果取决于您的字典。因此，拥有更好的字典将大大增加发现子域名的可能性。
我最喜欢的子域名字典是由jhaddix生成的。您需要持续搜集子域名来生成字典。您可以在本书虚拟机镜像中找到其他字典，位置是/opt/SecLists。
实验
找到cyberspacekittens.com的所有子域名。
cd /opt/knock/knockpy。
python ./knockpy.py cyberspacekittens.com。
使用了Knock的基本字典。尝试下载并使用更大的字典。尝试使用http://bit.ly/ 2qwxrxB列表，添加-u选项（python ./knockpy.py cyberspacekittens.com -u all.txt）。
您是否从Discover脚本中发现了各种类型域名的差异？哪些类型的域名将是您“攻击”的首选目标或者可用于鱼叉式网络钓鱼攻击？到实际的网络环境中进行尝试吧。您可以参加一个漏洞悬赏项目，开始搜索有趣的子域名。
3．Sublist3r
前面已经说过，Knock存在的问题是子域名搜索效果与字典直接相关。有些公司设置了非常独特的子域名，这些子域名无法在常用的字典中找到。我们还可以利用搜索引擎。随着网站的信息被抓取，通过分析带有链接的文件，我们就可以获取很多网站的公共资源，这意味着我们可以使用搜索引擎完成这些烦琐的工作。
这就是我们使用Sublist3r之类的工具的原因。请注意，使用Sublist3r这样的工具对应不同的“google dork”搜索查询，这种操作方式看起来像机器人操作。这可能会使您暂时被列入黑名单，并需要在每次请求时填写验证码，从而影响扫描结果。下面运行Sublister。
cd /opt/Sublist3r。
python sublist3r.py -d cyberspacekittens.com -o cyberspacekittens.com。
您是否注意到暴力破解子域名可能不会有任何结果？在漏洞悬赏项目中进行实验，查看暴力破解和使用搜索引擎之间的巨大差异。
4．SubBrute
最后介绍的一个子域名搜索工具是SubBrute。SubBrute是一个社区项目，其目标是创建最快、最准确的子域名枚举工具。SubBrute工具的神奇之处在于它使用开放式解析器作为代理，从而规避DNS查询速率限制。
工具设计采用了一个匿名层，因为 SubBrute 不会将流量直接发送到目标名称服务器。
SubBrute不仅速度极快，而且还具有DNS爬虫特性，能够抓取DNS记录。下面运行SubBrute。
cd /opt/subbrute。
./subbrute.py cyberspacekittens.com。
我们还可以拓展SubBrute功能，将其与MassDNS结合使用，从而实现非常高效的DNS解析。
2.1.7 GitHub
GitHub是一个不可思议的数据宝库。我们进行了大量的渗透测试和红队评估，从而获得了密码、API密钥、旧的源代码和内部主机名/IP地址等。这些信息可用于直接控制目标或者为下一次攻击提供帮助。我们看到的是，许多开发人员要么将代码推送到错误的仓库（将其发送到公共存储库而不是公司的私有存储库），要么不小心推送了敏感材料（如密码），然后尝试将其删除。GitHub 的一个特点是它可以在每次修改或删除代码时进行跟踪。这意味着即使仅一次将敏感代码推送到存储库并且删除了敏感文件，仍可以在代码更改记录中找到敏感代码。只要存储库是公共的，您就可以查看所有这些更改。
我们可以使用GitHub搜索，甚至只使用简单的Google Dork搜索识别特定的主机名/组织名称。
site：github.com +“cyberspacekittens”。
与其搜索以下示例中的cyberspacekittens，不如尝试使用不同的搜索引擎搜索漏洞悬赏项目。
如前所述，当您在GitHub中编辑或删除文件时，所有的操作都被记录下来。幸运的是，在红队中，很多人都忘记了这个功能。因此，我们经常看到有人将敏感信息放入GitHub，删除它，并没有意识到它仍然存在！让我们看看是否能找到一些这样的信息。
Truffle Hog
Truffle Hog工具能够扫描不同的提交历史记录，查找高熵值的密钥，并打印这些内容。它非常适合用来查找密码、口令和密钥等。我们来看一看能否在cyberspacekittens的GitHub 存储库中找到一些“秘密”。
实验
cd /opt/trufflehog/truffleHog。
python truffleHog.py https://github.com/cyberspacekittens/dnscat2。
正如我们在图2.7所示的提交历史记录中看到的那样，AWS密钥和SSH密钥已从server/controller/ csk.config中删除。
图2.7
更好的工具是git-all-secrets（但设置起来有点复杂）。git-all-secrets适合用于查找大型组织。您可以指定一个组织，在本地复制代码，然后使用Truffle-hog和repo-supervisor工具进行扫描。您首先需要创建一个GitHub访问令牌，操作过程是创建GitHub并在设置中选择Generate New Token。
运行git-all-secrets。
cd /opt/git-all-secrets。
docker run -it abhartiya/tools_gitallsecrets：v3 - repoURL = https://github.com/ cyberspacekittens/dnscat2 -token = [API Key] -output = results.txt。
复制代码库并开始扫描。你甚至可以设置-org，获取GitHub中的所有组织的代码。
在容器运行完毕后，输入以下命令检索容器ID。 
docker ps -a
在获得容器ID后，从容器中将结果文件复制到主机，输入以下命令。 
docker cp ：/data/results.txt
2.1.8 云
前面提到过，许多公司云服务的配置不正确，导致出现安全漏洞。常见问题如下。
Amazon S3容器丢失。
Amazon S3容器权限。
能够列出文件并将文件写入公共AWS容器。 
aws s3 ls s3://[bucketname]
aws s3 mv test.txt s3://[bucketname]
缺少日志。
在开始测试不同AWS容器上的错误配置之前，我们需要先识别它们。下面我们尝试使用几种不同的工具，发现目标AWS基础架构的内容。
1．S3容器枚举
有许多工具可以枚举AWS的S3容器。这些工具通常采用关键字或列表，应用多个排列，然后尝试识别不同的容器。例如，我们可以使用一个名为Slurp的工具来查找有关目标CyberSpaceKittens的信息，如图2.8所示。
cd /opt/slurp。
./slurp domain -t cyberspacekittens.com。
./slurp keyword -t cyberspacekittens。
图2.8
2．Bucket Finder
另一个工具Bucket Finder不仅会尝试查找不同的容器，而且会从这些容器中下载所有内容进行分析，如图2.9所示。
wget https://digi.ninja/files/bucket_finder_1.1.tar.bz2 -O bucket_finder_1.1.tar.bz2。
cd /opt/bucket_finder。
./bucket_finder.rb --region us my_words -download。
图2.9
现在我们查明了Cyber Space Kittens的基础架构，并确定了其中一个S3容器。在获取S3容器内容（有的能看到，有的看不到）时，您的第一步是做什么？您可以先在浏览器中输入网址，查看一些信息，如图2.10所示。
图2.10