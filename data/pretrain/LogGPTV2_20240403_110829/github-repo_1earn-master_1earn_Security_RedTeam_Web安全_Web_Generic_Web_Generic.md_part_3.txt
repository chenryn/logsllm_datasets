---
### Swagger_REST_API信息泄露
**相关文章**
- [关于Swagger-UI下的渗透实战](https://blog.m1kh.com/index.php/archives/403/)
- [接口文档下的渗透测试](https://mp.weixin.qq.com/s/xQUnTXo38x_jLWv5beOQ0Q)
**相关工具**
- [lijiejie/swagger-exp](https://github.com/lijiejie/swagger-exp)
- [jayus0821/swagger-hack](https://github.com/jayus0821/swagger-hack) - 自动化爬取并自动测试所有 swagger 接口
---
### 各类APIkey泄露
- [APIkey/密钥信息](../../信息收集/信息收集.md#apikey密钥信息)
---
### SOAP泄露
**相关文章**
- [【技术分享】针对SOAP的渗透测试与防护](https://www.anquanke.com/post/id/85410)
- [Web Service渗透测试](https://www.mi1k7ea.com/2021/01/16/Web-Service%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/)
- [WSDL测试webservice接口指南](https://mp.weixin.qq.com/s/UTClGLSvQ3rdUoGeRlvp4w)
**相关案例**
- [BountyHunterInChina/重生之我是赏金猎人(四)—记一次有趣的客户端RCE+服务端XXE挖掘.pdf](https://github.com/J0o1ey/BountyHunterInChina/blob/main/%E9%87%8D%E7%94%9F%E4%B9%8B%E6%88%91%E6%98%AF%E8%B5%8F%E9%87%91%E7%8C%8E%E4%BA%BA(%E5%9B%9B)%E2%80%94%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9C%89%E8%B6%A3%E7%9A%84%E5%AE%A2%E6%88%B7%E7%AB%AFRCE%2B%E6%9C%8D%E5%8A%A1%E7%AB%AFXXE%E6%8C%96%E6%8E%98.pdf)
**相关工具**
- [SmartBear/soapui](https://github.com/SmartBear/soapui#build-and-run)
- [NetSPI/Wsdler](https://github.com/NetSPI/Wsdler) - 用于帮助测试 wsdl 接口的 burp 插件
- [ReadyAPI](https://smartbear.com/product/ready-api/api-functional-testing/free-trial/)
---
## 不安全的输入
### RCE
- [RCE 笔记](./RCE.md)
### HTTP参数污染
**相关文章**
- [Web 应用里的 HTTP 参数污染 (HPP) 漏洞](https://blog.csdn.net/eatmilkboy/article/details/6761407)
- [浅谈绕过 waf 的数种方法](https://blog.51cto.com/fcinbj/734197)
- [通过 HTTP 参数污染绕过 WAF 拦截](https://www.cnblogs.com/ssooking/articles/6337366.html)
**相关案例**
- [通过 HTTP 参数污染绕过 reCAPTCHA 认证](https://www.anquanke.com/post/id/146570)
---
### CRLF_Injection
**相关案例**
- [新浪某站CRLF Injection导致的安全问题](https://www.leavesongs.com/PENETRATION/Sina-CRLF-Injection.html)
**相关工具**
- [dwisiswant0/crlfuzz](https://github.com/dwisiswant0/crlfuzz)
### HOST_Injection
**相关文章**
- [检测到目标url存在框架注入漏洞_HOST注入攻击剖析](https://blog.csdn.net/weixin_39609500/article/details/111349436)
- [超详细http host注入攻击原理详解及漏洞利用](https://blog.csdn.net/madao1o_o/article/details/107507344)
- [安服仔小工具-Host注入](https://mp.weixin.qq.com/s/l8deOajHO2-yoSMcAScktA)
---
### SQL_inje
- [SQLi 笔记](./SQLi.md)
---
### XSS
- [XSS 笔记](./XSS.md)
---
### XXE
- [XXE 笔记](./XXE.md)
---
### SSI
`Server Side Includes 服务器端包含`
**简介**
SSI 就是在 HTML 文件中，可以通过注释行调用的命令或指针，即允许通过在 HTML 页面注入脚本或远程执行任意代码。
**相关文章**
- [服务器端包含注入SSI分析总结](https://www.secpulse.com/archives/66934.html)
- [Apache SSI 远程命令执行漏洞（SSI注入漏洞）](https://blog.csdn.net/qq_45521281/article/details/107576959)
**payload**
xxx.shtml
```shtml
```
---
### SSRF
- [SSRF 笔记](./SSRF.md)
---
### SSTI
`服务器端模板注入`
- [SSTI 笔记](./SSTI.md)
---
### 表达式注入
**相关文章**
- [表达式注入](https://misakikata.github.io/2018/09/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/)
**SpEL注入**
- [SpEL注入](../../语言安全/JAVA安全/SpEL注入.md)
---
### WebSocket安全
**相关文章**
- [利用WebSocket接口中转注入渗透实战](https://www.freebuf.com/articles/web/281451.html) - 通过脚本中转 websocket 让 sqlmap 可以注入
---
### 业务模板注入
`pdf 生成、html 模板生成的功能点`
`通常是配合 lfi、ssrf 进行利用`
**相关案例**
- [IKEA官网本地文件包含(LFI)漏洞分析](https://blog.51cto.com/u_15127538/2714257)
- pdf 模板注入 + aws metadata API
    ```
    ```
    > form : https://twitter.com/intigriti/status/1487405174763278338
---
## 配置不当
### 代理配置不当
**相关文章**
- [Abusing Reverse Proxies, Part 1: Metadata](https://blog.projectdiscovery.io/abusing-reverse-proxies-metadata/)
- [Abusing Reverse Proxies, Part 2: Internal Access](https://blog.projectdiscovery.io/abusing-reverse-proxies-internal-access/)
**相关案例**
- [新浪HTTP代理配置不当漫游内网](http://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2015-0131169)
- [陌陌一处代理配置不当，已验证可绕过IP过滤探测敏感资源](http://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2014-083202)
- [陌陌web服务器Path处理不当可以正向代理(idc机器/打不到办公网)](http://wy.zone.ci/bug_detail.php?wybug_id=wooyun-2016-0191121)
- [挖洞经验之代理不当日进内网](https://mp.weixin.qq.com/s/EtUmfMxxJjYNl7nIOKkRmA)
- [价值1万美金的谷歌内部主机信息泄露漏洞](https://mp.weixin.qq.com/s/hYZr6EjwE99uTQpzoJRp0g)
- [Cloud Penetration Testing the Capital One Breach](https://cloudsecurityalliance.org/blog/2019/10/10/cloud-penetration-testing-the-capital-one-breach/)
---
### CORS
**简介**
CORS 跨域漏洞的本质是服务器配置不当，即 Access-Control-Allow-Origin 设置为 * 或是直接取自请求头 Origin 字段，Access-Control-Allow-Credentials 设置为 true。
**CORS 与 CSRF 的区别**
CORS 机制的目的是为了解决脚本的跨域资源请求问题，不是为了防止 CSRF。
CSRF 一般使用 form 表单提交请求，而浏览器是不会对 form 表单进行同源拦截的，因为这是无响应的请求，浏览器认为无响应请求是安全的。
脚本的跨域请求在同源策略的限制下，响应会被拦截，即阻止获取响应，但是请求还是发送到了后端服务器。
- 相同点：都需要第三方网站；都需要借助 Ajax 的异步加载过程；一般都需要用户登录目标站点。
- 不同点：一般 CORS 漏洞用于读取受害者的敏感信息，获取请求响应的内容；而 CSRF 则是诱使受害者点击提交表单来进行某些敏感操作，不用获取请求响应内容。
**相关文章**
- [JSONP与CORS漏洞挖掘](https://www.anquanke.com/post/id/97671)
- [认识CORS漏洞](https://mp.weixin.qq.com/s/GZRsg6pEaUlIq_eyMd3fBA)
- [浅析CORS攻击及其挖洞思路](https://xz.aliyun.com/t/7242)
- [CORS跨域漏洞学习](https://www.cnblogs.com/Xy--1/p/13069099.html)
**相关案例**
- [CORS Misconfiguration, could lead to disclosure of sensitive information](https://hackerone.com/reports/426165)
- [看我如何绕过Yahoo！View的CORS限制策略](https://www.freebuf.com/articles/web/158529.html)
**相关工具**
- [chenjj/CORScanner](https://github.com/chenjj/CORScanner) - 一个旨在发现网站的 CORS 错误配置漏洞的 python 工具
- [Santandersecurityresearch/corsair_scan](https://github.com/Santandersecurityresearch/corsair_scan) - Corsair_scan is a security tool to test Cross-Origin Resource Sharing (CORS).
- [s0md3v/Corsy](https://github.com/s0md3v/Corsy) - CORS Misconfiguration Scanner
**相关靶场**
- [incredibleindishell/CORS_vulnerable_Lab-Without_Database](https://github.com/incredibleindishell/CORS_vulnerable_Lab-Without_Database)
---
### CSRF
**描述**
跨站请求伪造（Cross-Site Request Forgery，CSRF）是一种使已登录用户在不知情的情况下执行某种动作的攻击。因为攻击者看不到伪造请求的响应结果，所以 CSRF 攻击主要用来执行动作，而非窃取用户数据。当受害者是一个普通用户时，CSRF 可以实现在其不知情的情况下转移用户资金、发送邮件等操作；但是如果受害者是一个具有管理员权限的用户时 CSRF 则可能威胁到整个 Web 系统的安全。
**相关文章**
- [CSRF 漏洞的末日？关于 Cookie SameSite 那些你不得不知道的事](https://mp.weixin.qq.com/s/YqSxIvbgq1DkAlUL5rBtqA)
**相关工具**
- [merttasci/csrf-poc-generator](https://github.com/merttasci/csrf-poc-generator) - This HTML file creates a CSRF PoC form to any HTTP request.
**验证方法**
- GET
    ```html
    Click Me
    ```
- POST
    ```html
    ```