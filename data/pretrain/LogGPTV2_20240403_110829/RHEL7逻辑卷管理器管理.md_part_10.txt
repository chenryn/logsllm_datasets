    :::
-   ::: para
    `--minrecoveryrate Rate[bBsSkKmMgG]`{.literal}
    :::
    ::: para
    为 RAID 逻辑卷设定最小恢复比例，这样可以保证即使有很多正常 I/O
    操作，`sync`{.literal} 操作的 I/O 也可达到最小的吞吐量。将 *Rate*
    指定为阵列中的每台设备的每秒恢复量。如果没有给出后缀，则假设为
    kiB/sec/device。
    :::
:::
::: para
下面的命令使用大小为 10GB 的三个条带创建一个双向 RAID10
阵列，其最大恢复比例为 128 kiB/sec/device。这个阵列名为
`my_lv`{.literal}，位于卷组 `my_vg`{.literal} 。
:::
``` screen
lvcreate --type raid10 -i 2 -m 1 -L 10G --maxrecoveryrate 128 -n my_lv my_vg
```
::: para
还可为 RAID 擦除操作指定最小和最大恢复比例。有关 RAID 擦除的详情，请查看
[第 4.4.3.7.4 节 "擦除 RAID 逻辑卷"](#LVM_CLI.html#raid-scrub){.xref}。
:::
::: para
下面各小节论述了可在 LVM RAID 设备中执行的管理任务：
:::
::: {.itemizedlist xmlns:d="http://docbook.org/ns/docbook"}
-   ::: para
    [第 4.4.3.1 节 "将线性设备转换为 RAID
    设备"](#LVM_CLI.html#linear-to-raid){.xref}
    :::
-   ::: para
    [第 4.4.3.2 节 "将 LVM RAID1 逻辑卷转换为 LVM
    线性逻辑卷"](#LVM_CLI.html#convert-RAID1-to-linear){.xref}
    :::
-   ::: para
    [第 4.4.3.3 节 "将镜像 LVM 卷转换为 RAID1
    设备"](#LVM_CLI.html#convert-mirror-to-RAID1){.xref}
    :::
-   ::: para
    [第 4.4.3.4 节 "更改现有 RAID1
    设备中的映像数"](#LVM_CLI.html#RAID-upconvert){.xref}
    :::
-   ::: para
    [第 4.4.3.5 节 "将 RAID
    映像拆分为独立的逻辑卷"](#LVM_CLI.html#RAID-imagesplit){.xref}
    :::
-   ::: para
    [第 4.4.3.6 节 "拆分及合并 RAID
    映象"](#LVM_CLI.html#raid-splitmerge){.xref}
    :::
-   ::: para
    [第 4.4.3.7 节 "设定 RAID
    错误策略"](#LVM_CLI.html#raid-faultpolicy){.xref}
    :::
-   ::: para
    [第 4.4.3.7.3 节 "替换 RAID
    设备"](#LVM_CLI.html#raid-replace){.xref}
    :::
-   ::: para
    [第 4.4.3.7.4 节 "擦除 RAID
    逻辑卷"](#LVM_CLI.html#raid-scrub){.xref}
    :::
-   ::: para
    [第 4.4.3.7.5 节 "控制 RAID 逻辑卷中的 I/O
    操作"](#LVM_CLI.html#raid1-writebehind){.xref}
    :::
:::
::: section
::: titlepage
### [⁠]{#LVM_CLI.html#linear-to-raid}4.4.3.1. 将线性设备转换为 RAID 设备 {.title}
:::
::: para
可使用 `lvconvert`{.command} 命令的 `--type`{.option}
参数将现有线性逻辑卷转换为 RAID 设备。
:::
::: para
使用下面的命令可将卷组 `my_vg`{.literal} 中的线性逻辑卷
`my_lv`{.literal} 转换为双向 RAID1 阵列。
:::
``` screen
# lvconvert --type raid1 -m 1 my_vg/my_lv
```
::: para
因为 RAID 逻辑卷由元数据及数据子卷对组成，当将线性设备转换为 RAID1
阵列时，会创建新的元数据子卷，并与该线性卷所在物理卷相同的原始逻辑卷（之一）关联。会将该附加映像添加到元数据/数组子卷对中。例如：如果原始设备如下：
:::
``` screen
# lvs -a -o name,copy_percent,devices my_vg
  LV     Copy%  Devices     
  my_lv         /dev/sde1(0)
```
::: para
转换为双向 RAID1 阵列后，该设备包含以下数据和元数据子卷对：
:::
``` screen
# lvconvert --type raid1 -m 1 my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices                      
  my_lv            6.25   my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sde1(0)                 
  [my_lv_rimage_1]        /dev/sdf1(1)                 
  [my_lv_rmeta_0]         /dev/sde1(256)               
  [my_lv_rmeta_1]         /dev/sdf1(0)
```
::: para
如果与原始逻辑卷配对的元数据映像无法放到同一物理卷中，则
`lvconvert`{.command} 会失败。
:::
:::
::: section
::: titlepage
### [⁠]{#LVM_CLI.html#convert-RAID1-to-linear}4.4.3.2. 将 LVM RAID1 逻辑卷转换为 LVM 线性逻辑卷 {.title}
:::
::: para
使用 `lvconvert`{.command} 命令的 `-m0`{.option} 参数可将现有 RAID2 LVM
逻辑卷转换为 LVM 现有逻辑卷。这样会删除所有 RAID 数据子卷，及组成 RAID
阵列的所有 RAID 元数据子卷，让顶层 RAID2 映像保留为线性逻辑卷。
:::
::: para
下面的示例显示现有 LVM RAID1 逻辑卷。
:::
``` screen
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices                      
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sde1(1)                 
  [my_lv_rimage_1]        /dev/sdf1(1)                 
  [my_lv_rmeta_0]         /dev/sde1(0)                 
  [my_lv_rmeta_1]         /dev/sdf1(0)
```
::: para
下面的命令将 LVM RAID1 逻辑卷 `my_vg/my_lv`{.literal} 转换为 LVM
线性设备。
:::
``` screen
# lvconvert -m0 my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV      Copy%  Devices     
  my_lv          /dev/sde1(1)
```
::: para
将 LVM RAID1 逻辑卷转换为 LVM
线性卷时，可指定要删除的物理卷。下面的示例显示组成两个映像的 LVM RAID1
逻辑卷布局：`/dev/sda1`{.literal} 和
`/dev/sda2`{.literal}。在这个示例中，`lvconvert`{.command}
命令指定要删除 `/dev/sda1`{.literal}，保留 `/dev/sdb1`{.literal}
作为组成线性设备的物理卷。
:::
``` screen
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sda1(1)
  [my_lv_rimage_1]        /dev/sdb1(1)
  [my_lv_rmeta_0]         /dev/sda1(0)
  [my_lv_rmeta_1]         /dev/sdb1(0)
# lvconvert -m0 my_vg/my_lv /dev/sda1
# lvs -a -o name,copy_percent,devices my_vg
  LV    Copy%  Devices
  my_lv        /dev/sdb1(1)
```
:::
::: section
::: titlepage
### [⁠]{#LVM_CLI.html#convert-mirror-to-RAID1}4.4.3.3. 将镜像 LVM 卷转换为 RAID1 设备 {.title}
:::
::: para
可使用 `lvconvert`{.command} 命令的 `--type raid1`{.option}
参数将现有使用 `mirror`{.literal} 片段类型的镜像 LVM 设备转换为 RAID1
LVM 设备。这样会将该镜像子卷（`*_mimage_*`{.literal}）重命名为 RAID
子卷（`*_rimage_*`{.literal}）。此外，会删除该镜像日志，并在同一物理卷中为数据子卷创建元数据子卷（`*_rmeta_*`{.literal}）作为对应的数据子卷。
:::
::: para
下面的示例显示镜像逻辑卷 `my_vg/my_lv`{.literal} 的布局。
:::
``` screen
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices                      
  my_lv             15.20 my_lv_mimage_0(0),my_lv_mimage_1(0)
  [my_lv_mimage_0]        /dev/sde1(0)                 
  [my_lv_mimage_1]        /dev/sdf1(0)                 
  [my_lv_mlog]            /dev/sdd1(0)
```
::: para
下面的命令将镜像逻辑卷 `my_vg/my_lv`{.literal} 转换为 RAID1 逻辑卷。
:::
``` screen
# lvconvert --type raid1 my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices                      
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sde1(0)                 
  [my_lv_rimage_1]        /dev/sdf1(0)                 
  [my_lv_rmeta_0]         /dev/sde1(125)               
  [my_lv_rmeta_1]         /dev/sdf1(125)
```
:::
::: section
::: titlepage
### [⁠]{#LVM_CLI.html#RAID-upconvert}4.4.3.4. 更改现有 RAID1 设备中的映像数 {.title}
:::
::: para
可与更改之前的 LVM 镜像部署中的映像数一样更改现有 RAID1
阵列的映像数，方法是使用 `lvconvert`{.command}
命令指定要添加或删除的额外元数据/数据子卷对。有关在之前的 LVM
镜像实施中更改卷配置的详情，请查看 [第 4.4.4.4 节
"更改镜像卷配置"](#LVM_CLI.html#mirror_reconfigure){.xref}。
:::
::: para
使用 `lvconvert`{.command} 命令在 RAID1
设备中添加映像时，可为得到的设备指定映像总数，或指定要在该设备中添加多少映像。还可自选指定新元数据/数据映像对所在物理卷。
:::
::: para
元数据子卷（名为
`*_rmeta_*`{.literal}）总是位于其数据子卷副本（`*_rimage_*`{.literal}）所在的同一物理设备中。不会在该
RAID
阵列中的另一个元数据/数据子卷对所在的同一物理卷中创建该元数据/数据子卷对（除非指定
`--alloc anywhere`{.option} 选项）。
:::
::: para
在 RAID1 卷中添加映像命令的格式如下：
:::
``` screen
lvconvert -m new_absolute_count vg/lv [removable_PVs]
lvconvert -m +num_additional_images vg/lv [removable_PVs]
```
::: para
例如：下面内容中的 LVM 设备 `my_vg/my_lv`{.literal} 是一个双向 RAID1
阵列：
:::
``` screen
# lvs -a -o name,copy_percent,devices my_vg
  LV            Copy%  Devices                      
  my_lv                 6.25 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sde1(0)                 
  [my_lv_rimage_1]        /dev/sdf1(1)                 
  [my_lv_rmeta_0]         /dev/sde1(256)               
  [my_lv_rmeta_1]         /dev/sdf1(0)
```
::: para
下面的命令将双向 RAID 1 设备 `my_vg/my_lv`{.literal} 转换为三向 RAID1
设备：
:::
``` screen
# lvconvert -m 2 my_vg/my_lv
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices                                     
  my_lv              6.25 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sde1(0)                                
  [my_lv_rimage_1]        /dev/sdf1(1)                                
  [my_lv_rimage_2]        /dev/sdg1(1)                                
  [my_lv_rmeta_0]         /dev/sde1(256)                              
  [my_lv_rmeta_1]         /dev/sdf1(0)                                
  [my_lv_rmeta_2]         /dev/sdg1(0)
```
::: para
在 RAID1 阵列添加映像时，可指定使用该映像的物理卷。下面的命令将双向
RAID1 设备 `my_vg/my_lv`{.literal} 转换为三向 RAID1
设备，指定该阵列使用物理卷 `/dev/sdd1`{.literal}：
:::
``` screen
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv             56.00 my_lv_rimage_0(0),my_lv_rimage_1(0)
  [my_lv_rimage_0]        /dev/sda1(1)
  [my_lv_rimage_1]        /dev/sdb1(1)
  [my_lv_rmeta_0]         /dev/sda1(0)
  [my_lv_rmeta_1]         /dev/sdb1(0)
# lvconvert -m 2 my_vg/my_lv /dev/sdd1
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices
  my_lv             28.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sda1(1)
  [my_lv_rimage_1]        /dev/sdb1(1)
  [my_lv_rimage_2]        /dev/sdd1(1)
  [my_lv_rmeta_0]         /dev/sda1(0)
  [my_lv_rmeta_1]         /dev/sdb1(0)
  [my_lv_rmeta_2]         /dev/sdd1(0)
```
::: para
可使用下面的命令从 RAID1 阵列删除映像。使用 `lvconvert`{.command} 命令从
RAID1
设备中删除映像时，可为得到的设备指定映像总数，或者可指定要从该设备中删除多少映像。还可以自选指定要从中删除该设备的物理卷。
:::
``` screen
lvconvert -m new_absolute_count vg/lv [removable_PVs]
lvconvert -m -num_fewer_images vg/lv [removable_PVs]
```
::: para
另外，删除某个映像机器关联的元数据子卷后，数字较高的映像会降低以填入该插槽。如果要从一个由
`lv_rimage_0`{.literal}、`lv_rimage_1`{.literal} 和
`lv_rimage_2`{.literal} 组成的三向 RAID1 阵列中删除
`lv_rimage_1`{.literal}，得到的 RAID1 阵列由 `lv_rimage_0`{.literal} 和
`lv_rimage_1`{.literal} 组成。该子卷 `lv_rimage_2`{.literal}
会重新命名，并接管空白的插槽，使其成为 `lv_rimage_1`{.literal}。
:::
::: para
下面的示例演示三向 RAID1 逻辑卷 `my_vg/my_lv`{.literal} 的布局。
:::
``` screen
# lvs -a -o name,copy_percent,devices my_vg
  LV               Copy%  Devices                                     
  my_lv            100.00 my_lv_rimage_0(0),my_lv_rimage_1(0),my_lv_rimage_2(0)
  [my_lv_rimage_0]        /dev/sde1(1)                                
  [my_lv_rimage_1]        /dev/sdf1(1)                                
  [my_lv_rimage_2]        /dev/sdg1(1)                                
  [my_lv_rmeta_0]         /dev/sde1(0)                                
  [my_lv_rmeta_1]         /dev/sdf1(0)                                
  [my_lv_rmeta_2]         /dev/sdg1(0)
```
::: para
下面的命令将三向 RAID1 逻辑卷转换为双向 RAID1 逻辑卷。
:::
``` screen