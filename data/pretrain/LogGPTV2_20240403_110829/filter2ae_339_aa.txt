翻译自：  
翻译：聂心明
# xml解析导致xxe漏洞
漏洞特征：XXE_XMLSTREAMREADER  
当xml解析程序收到不信任的输入且如果xml解析程序支持外部实体解析的时候，那么造成xml实体解析攻击（xxe）  
危害1：探测本地文件内容（xxe：xml 外部实体）
     ]>
    &xxe;
危害2：拒绝服务攻击 （xee：xml 外部实体膨胀）
    [...]
    ]>
    &lol9;
解决方法：  
为了避免解析xml带来的攻击，你应该按照下面的示例代码修改你的代码  
有漏洞的代码：
    public void parseXML(InputStream input) throws XMLStreamException {
        XMLInputFactory factory = XMLInputFactory.newFactory();
        XMLStreamReader reader = factory.createXMLStreamReader(input);
        [...]
    }
禁用外部实体的解决方案：
    public void parseXML(InputStream input) throws XMLStreamException {
        XMLInputFactory factory = XMLInputFactory.newFactory();
        factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
        XMLStreamReader reader = factory.createXMLStreamReader(input);
        [...]
    }
禁用DTD的方案：
    public void parseXML(InputStream input) throws XMLStreamException {
        XMLInputFactory factory = XMLInputFactory.newFactory();
        factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
        XMLStreamReader reader = factory.createXMLStreamReader(input);
        [...]
    }
引用：  
[CWE-611: Improper Restriction of XML External Entity Reference
('XXE')](http://cwe.mitre.org/data/definitions/611.html)  
[CERT: IDS10-J. Prevent XML external entity
attacks](https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260)  
[OWASP.org: XML External Entity (XXE)
Processing](https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing)  
[WS-Attacks.org: XML Entity Expansion](http://www.ws-attacks.org/index.php/XML_Entity_Expansion)  
[WS-Attacks.org: XML External Entity DOS](http://www.ws-attacks.org/index.php/XML_External_Entity_DOS)  
[WS-Attacks.org: XML Entity Reference Attack](http://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack)  
[Identifying Xml eXternal Entity vulnerability
(XXE)](http://blog.h3xstream.com/2014/06/identifying-xml-external-entity.html)  
[JEP 185: Restrict Fetching of External XML
Resources](http://openjdk.java.net/jeps/185)
# xml解析导致xxe漏洞(XPathExpression)
漏洞特征：XXE_XPATH  
当xml解析程序收到不信任的输入且如果xml解析程序支持外部实体解析的时候，那么造成xml实体解析攻击（xxe）  
危害1：探测本地文件内容（xxe：xml 外部实体）
     ]>
    &xxe;
危害2：拒绝服务攻击 （xee：xml 外部实体膨胀）
    [...]
    ]>
    &lol9;
解决方法：  
为了避免解析xml带来的攻击，你应该按照下面的示例代码修改你的代码  
有漏洞的代码：
    DocumentBuilder builder = df.newDocumentBuilder();
    XPathFactory xPathFactory = XPathFactory.newInstance();
    XPath xpath = xPathFactory.newXPath();
    XPathExpression xPathExpr = xpath.compile("/somepath/text()");
    xPathExpr.evaluate(new InputSource(inputStream));
下面的两个片段展示了可能的解决方案。你可以设置其中一个，或者两个都设置
使用"Secure processing" 模式的解决方案
    DocumentBuilderFactory df = DocumentBuilderFactory.newInstance();
    df.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
    DocumentBuilder builder = df.newDocumentBuilder();
    [...]
    xPathExpr.evaluate( builder.parse(inputStream) );
禁用DTD的解决方案：  
通过禁用DTD，大多数的xxe攻击都可以被避免
    DocumentBuilderFactory df = DocumentBuilderFactory.newInstance();
    spf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
    DocumentBuilder builder = df.newDocumentBuilder();
    [...]
    xPathExpr.evaluate( builder.parse(inputStream) );
引用：  
[CWE-611: Improper Restriction of XML External Entity Reference
('XXE')](http://cwe.mitre.org/data/definitions/611.html)  
[CERT: IDS10-J. Prevent XML external entity
attacks](https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260)  
[OWASP.org: XML External Entity (XXE)
Processing](https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing)  
[WS-Attacks.org: XML Entity Expansion](http://www.ws-attacks.org/index.php/XML_Entity_Expansion)  
[WS-Attacks.org: XML External Entity DOS](http://www.ws-attacks.org/index.php/XML_External_Entity_DOS)  
[WS-Attacks.org: XML Entity Reference Attack](http://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack)  
[Identifying Xml eXternal Entity vulnerability
(XXE)](http://blog.h3xstream.com/2014/06/identifying-xml-external-entity.html)  
[XML External Entity (XXE) Prevention Cheat
Sheet](https://www.owasp.org/index.php/XML_External_Entity_\(XXE)_Prevention_Cheat_Sheet#XPathExpression)
# xml解析导致xxe漏洞(SAXParser)
漏洞特征：XXE_SAXPARSER  
当xml解析程序收到不信任的输入且如果xml解析程序支持外部实体解析的时候，那么造成xml实体解析攻击（xxe）  
危害1：探测本地文件内容（xxe：xml 外部实体）
     ]>
    &xxe;
危害2：拒绝服务攻击 （xee：xml 外部实体膨胀）
    [...]
    ]>
    &lol9;
解决方法：  
为了避免解析xml带来的攻击，你应该按照下面的示例代码修改你的代码  
有漏洞的代码：
    SAXParser parser = SAXParserFactory.newInstance().newSAXParser();
    parser.parse(inputStream, customHandler);
下面的两个片段展示了可能的解决方案。你可以使用其中一个，或者两个都使用
**使用"Secure processing" 模式的解决方案:**  
这个设置能保护你能避免拒绝服务攻击和ssrf漏洞
    SAXParserFactory spf = SAXParserFactory.newInstance();
    spf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
    SAXParser parser = spf.newSAXParser();
    parser.parse(inputStream, customHandler);
**禁用DTD的解决方案:**  
通过禁用DTD，大多数的xxe攻击都可以被避免
    SAXParserFactory spf = SAXParserFactory.newInstance();
    spf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
    SAXParser parser = spf.newSAXParser();
    parser.parse(inputStream, customHandler);
引用：  
[CWE-611: Improper Restriction of XML External Entity Reference
('XXE')](http://cwe.mitre.org/data/definitions/611.html)  
[CERT: IDS10-J. Prevent XML external entity
attacks](https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260)  
[OWASP.org: XML External Entity (XXE)
Processing](https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing)  
[WS-Attacks.org: XML Entity Expansion](http://www.ws-attacks.org/index.php/XML_Entity_Expansion)  
[WS-Attacks.org: XML External Entity DOS](http://www.ws-attacks.org/index.php/XML_External_Entity_DOS)  
[WS-Attacks.org: XML Entity Reference Attack](http://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack)  
[Identifying Xml eXternal Entity vulnerability
(XXE)](http://blog.h3xstream.com/2014/06/identifying-xml-external-entity.html)  
[Xerces complete features
list](http://xerces.apache.org/xerces-j/features.html)
# xml解析导致xxe漏洞(XMLReader)
漏洞特征：XXE_XMLREADER  
当xml解析程序收到不信任的输入且如果xml解析程序支持外部实体解析的时候，那么造成xml实体解析攻击（xxe）  
危害1：探测本地文件内容（xxe：xml 外部实体）
     ]>
    &xxe;
危害2：拒绝服务攻击 （xee：xml 外部实体膨胀）
    [...]
    ]>
    &lol9;
解决方法：  
为了避免解析xml带来的攻击，你应该按照下面的示例代码修改你的代码  
有漏洞的代码：
    XMLReader reader = XMLReaderFactory.createXMLReader();
    reader.setContentHandler(customHandler);
    reader.parse(new InputSource(inputStream));
下面的两个片段展示了可能的解决方案。你可以使用其中一个，或者两个都使用
**使用"Secure processing" 模式的解决方案:**  
这个设置能保护你能避免拒绝服务攻击和ssrf漏洞