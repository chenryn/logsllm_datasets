图 8-6 突变模型 
	第二步指标预处理。指标预处理的作用是将业务指标变化成符合我们异常检测的模型，进而通过模型检 测后达到预期额异常检测效果。 
	比如一个真实的指标检测场景，检测指标抖动的场景，需要发现业务抖动的异常。对于这个指标的异常 检测，整体的流程如下： 
第 52 页共 74 页
《企业级 AIOps 实施建议白皮书》V1.0 
原始数据（从应用系统里采集过来，未做任何加工的数据） 
图 8-7 原始数据 
预处理&特征抽取（补全缺失值&去噪后，抽取前后时间点的差值作为特征，输入给下一步做异常检测）图 8-8 预处理&特征抽取 
异常检测的结果（使用上一步获取的特征值，应用突变检测的算法模型，检测出异常） 
	图 8-9 异常检测结果 
	最后异常抑制的存在是为了解决业务认为的的异常与异常算法认为的异常的差异。举个例子，一个指标 一直在 0 到 1 之间波动，有一天突然到 2 了，这时候异常检测一般会认为指标异常了。而对于业务来说可能 到 2 是可以容忍的。因此需要有一个业务层的异常结果抑制。
方法 2. 使用聚类的方法做异常检测
聚类算法可以寻找到特征空间比较相近的点，进而将相近的点标记到同一个类别。一组相同的机器理论 上运行出来的指标应该是类似的。通过聚类的方法，可以识别出同一组机器里不同指标的差异，进而识别出 第 53 页共 74 页
《企业级 AIOps 实施建议白皮书》V1.0《企业级 AIOps 实施建议白皮书》V1.0 
工作不正常的机器。一般事前比较难确定有几个聚类的组，可以使用无需指定聚类组个数的算法，比如基于 密度的聚类算法。DBScan 算法将簇定义为密度相连的点的最大集合，能够把具有足够高密度的区域划分为簇，而在簇之外的点即为异常点，如下图所示（图 8-10）。 
图 8-10 示意图 
举个例子，对于一个大规模的集群，如何快速发现工作模式异常的机器？ 
单纯的指标异常检测比较难发现工作模式看似正常，实际却有差异的机器。 
这时，使用聚类的方法，对若干个指标进行聚类，可以快速发现工作模式有差异的机器组。在聚类后，我们对每个组做相应的雷达图，展示出每个组的差，进而判断出有异常的机器列表。帮助业务诊断出异常问 题。一个实际的聚类雷达图效果如下（图 8-11）。
	图 8-11 聚类雷达图 
	通过聚类后的组，进行雷达图的指标展示，可以清晰地发现离群组的系统负载异常，进而指导我们做进 一步的问题排查。8.2.2 【成本优化】聚类算法帮助系统调优 
	Kmeans 算法是很典型的基于距离的聚类算法，采用距离作为相似性的评价指标，即认为两个对象的距离 越近，其相似度就越大。该算法认为簇是由距离靠近的对象组成的，因此把得到紧凑且独立的簇作为最终目 标。KMeans 算法需要预先设定 k 值（也就是聚类的数量）,K 值需要预先知道数值。 
第 54 页共 74 页
《企业级 AIOps 实施建议白皮书》V1.0 
图 8-12 Kmeans 算法 
线上有大量的同步任务，每个任务有不同的属性；这些任务由用户配置，有些用户配置的比较好达到了 较快的速度，有的用户对同步任务的参数配置不够了解，导致同步的速度比较快。那么如何快速地帮助用户 推荐更合理的同步任务参数？根据业务的特定，一个同步任务中，源类型、宿类型、记录大小、字段数量 都是任务自身特性，属于固 定变量（也可叫做基础属性），而并发、jvm 参数、batchsize、出错限制属于可配置变量，因此可以理解成 参数，而想要得到的结果即输出是速度，这样，我们就能抽象出一个通用的问题，通过调整并发、jvm 参数、batchsize、出错限制，使得输出达到最优。 
这时候聚类可以帮助这个参数优化的过程。思路是将大量历史数据（通过对历史同步任务加工后得到）按照固定变量（源类型、宿类型、记录大小、字段数量）进行聚类，这样，同一个簇中的任务有着几乎相同 的基础属性，近似于看作一个任务，因而我们认为同一个簇中的任务存在类似的"最优配置”（并发、jvm 参 数、batchsize、出错限制）。 
第一次聚类，将指标可视化后，大概看到可以非为 3 个区间，这时候用 kmeans 做聚类，k 值为 3：图 8-13 第一次聚类 
	由于红色部分的作业量很大，我们希望对红色部分进行更精细的区分，因此对它做了第二次聚类，这一 次我们将 K 设置成了 20，并选取其中样本量最大的五个簇，作为有代表性的簇中心，如下图所示： 
第 55 页共 74 页
《企业级 AIOps 实施建议白皮书》V1.0 
图 8-14 第二次聚类 
在完成任务聚类后，我们进一步分析每一个簇中的历史任务配置以及对应的同步速度，为每一个簇挑选 最优的配置组合。同时，为保障资源的高效利用，我们对每一类任务提供了多个推荐配置规则，可以根据任 务的优先级别灵活配置，如下图所示（图 8-15）。
图 8-15 根据任务的优先级别灵活配置 
在这个结果表中，每一簇中，分别表示高、低优先级任务对应的推荐配置。最终达到的优化效果。 
图 8-16 最终优化效果 
第 56 页共 74 页
《企业级 AIOps 实施建议白皮书》V1.0第 56 页共 74 页
《企业级 AIOps 实施建议白皮书》V1.0 
8.2.3 【效率提升】智能问答机器人 
	大数据实时计算服务部署了若干个集群，为上千个用户提供实时计算服务。在庞大的作业体量、极大的 机器规模下，业务运维经常遇到用户的各种咨询。构建一个机器人自助答疑的服务，可以帮助业务运维减少 大部分答疑日常工作。
	通过对答疑的业务场景抽象，总结出如下几个答疑的场景：
	1. 信息快速查询 
	2. 业务的状态查询（集群、作业等），问题诊断结论 
	3. 用户手册&FAQ 检索 
	构建这样一个机器人服务，其实是构建一套数据+智能结合的服务，整合数据仓库、异常检测、搜索服务（ElasticSearch）的能力，并且结合即使消息软件为用户提供问答式服务。整体的实现架构（图 8-17）
	图 8-17 整体实现架构 
数据层：图 8-17 整体实现架构 
数据层： 
l 	数据仓库：如前面章节所述，主要针对实时计算的业务场景（机器、集群、队列、作业等）构建出 	了 DWD（明细）层和 DWS（汇总）层的数据，向上提供给查询 API 和诊断 API 服务。
l 	文档系统： 记录的用户手册与 FAQ，这部分数据主要用于灌入 ElasticSearch 做检索 
服务层：
l 	查询 API： 响应指定对象的信息查询 
l 	诊断 API： 指定对象的监控状态响应，这部分会使用前面章节提到的异常检测服务 
l 
	ElasticSearch：主要响应用户文档类搜索 接入层：
	机器人 Robot API：主要响应用户的问题，结合正则、语意处理的方式，将用户的问题最终转化为 l 