### Generating and Viewing the CSR File

The `csr.pem` file is generated using the information you provided. To view the contents of this file, follow these steps:

1. Open a terminal.
2. At the prompt, type the following command and press Return:
   ```sh
   cat csr.pem
   ```
3. The `cat` command will display the contents of the `csr.pem` file. You should see the phrase "BEGIN CERTIFICATE REQUEST" followed by a cryptic message, which ends with the phrase "END CERTIFICATE REQUEST." This is your Certificate Signing Request (CSR).

### Obtaining a Website Certificate

To secure your website, you must purchase a certificate from a trusted Certificate Authority (CA) for each domain. Here are some important points to consider when purchasing your certificate:

- **Domain Name**: Ensure that you provide an InterNIC-registered domain name that is registered to your organization.
- **Software Vendor**: If prompted to choose a software vendor, select "Apache Freeware with SSLeay."
- **Certificate Signing Request (CSR)**: You have already generated a CSR. When prompted, open the `csr.pem` file using a text editor, copy its contents, and paste them into the appropriate field on the CA's website.
- **SSL Certificates per IP Address**: You can obtain an SSL certificate for each IP address on your server. However, since certificates are expensive and require annual renewal, you may want to purchase a single certificate for a specific hostname and use a URL like `https://buy.mywidgets.com` to avoid multiple purchases. For example, if your domain is `mywidgets.com`, you could purchase a certificate for the hostname `buy`.
- **Default Certificate Format**: The default format for SSLeay/OpenSSL is PEM, which is Base64-encoded DER with header and footer lines. For more information about the certificate format, visit [www.modssl.org](http://www.modssl.org).

After completing the process, you will receive an email containing a Secure Server ID, which is your server certificate. Save this certificate to your web server's hard disk as `server.crt`.

**Important**: Make a backup copy of the certificate message or file.

### Installing the Certificate on Your Server

You can install the SSL certificate using either the Server Admin tool or the command-line interface. Here are the steps for both methods:

#### Using Server Admin

1. Log in to your server as the administrator or superuser (root).
2. Open Server Admin.
3. Click on "Web" in the list for the server you want.
4. Click "Settings" in the button bar.
5. In the "Sites" pane, double-click the site where you plan to use the certificate.
6. In the "Security" pane, select "Enable Secure Socket Layer."
7. Enter the password from your CSR in the "Pass Phrase" field.
8. Set the location of the log file that will record SSL transactions.
9. Click the "Edit" button and paste the text from your certificate file (the certificate you obtained from the issuing authority) into the "Certificate File" field.
10. Click the "Edit" button and paste the text from your key file (`key.pem`) into the "Key File" field.
11. Optionally, click the "Edit" button and paste the text from the `ca.crt` file (if provided by the CA) into the "CA File" field.
12. Click "Save."
13. Stop and then start the web service.

#### Using Command-Line Tool

1. Log in to your server as the administrator or superuser (root).
2. Create a directory named `/etc/httpd/ssl.crt` if it does not already exist:
   ```sh
   sudo mkdir -p /etc/httpd/ssl.crt
   ```
3. Copy the `server.crt` file (which contains your Secure Server ID) to the `ssl.crt` directory:
   ```sh
   sudo cp server.crt /etc/httpd/ssl.crt/
   ```

### Enabling SSL for the Site

1. In Server Admin, click on "Web" in the list for the server you want.
2. Click "Settings" in the button bar.
3. In the "Sites" pane, double-click the site where you plan to use the certificate.
4. In the "Security" pane, select "Enable Secure Socket Layer."
5. Enter the password from your CSR in the "Pass Phrase" field.
6. Set the location of the log file that will record SSL transactions.
7. Click the "Edit" button and paste the text from your certificate file (the certificate you obtained from the issuing authority) into the "Certificate File" field.
8. Click the "Edit" button and paste the text from your key file (`key.pem`) into the "Key File" field.
9. Optionally, click the "Edit" button and paste the text from the `ca.crt` file (if provided by the CA) into the "CA File" field.
10. Click "Save."
11. Stop and then start the web service.

### Troubleshooting

If you encounter issues with manually entering the SSL password, ensure that you save the passphrase with the SSL certificate data in the Security pane for the site in Server Admin.

### Working with Open-Source Applications

Mac OS X Server uses several open-source applications to administer and deliver web services. These include:

- **Apache Web Server**
- **JBoss Application Server**
- **Tomcat Servlet Container**
- **MySQL Database**

#### Apache Configuration

##### Location of Essential Apache Files

- **Apache Configuration File**: `/etc/httpd/`
- **Site Configuration Files**: `/etc/httpd/sites/`
- **Error Log**: `/var/log/httpd/` (with a symlink to `/Library/Logs/WebServer/`)
- **Disabled Virtual Hosts**: `/etc/httpd/sites_disabled/`

**Note**: All files in `/etc/httpd/sites/` are read and processed by Apache during a restart. Ensure that no temporary or backup files are present in this folder to avoid restart failures.

##### Editing Apache Configuration Files

To edit Apache configuration files, you should be an experienced Apache administrator and familiar with text-editing tools. Always make a backup of the original configuration file before editing.

- **Main Configuration File**: `httpd.conf`
- **Virtual Hosts Directory**: `/etc/httpd/sites/`
- **Disabling Sites**: Move the site configuration file to the `sites_disabled` directory and restart the web service.

##### Starting and Stopping Web Service Using `apachectl`

- **Default Method**: Use the web module in Server Admin.
- **Using `apachectl`**:
  - The web performance cache is enabled by default. If you use `apachectl`, you also need to manage the `webperfcache` process.
  - `apachectl` does not increase the soft process limit beyond the default of 100. Use `ulimit -u 2048` before starting Apache if you expect high traffic.
  - `apachectl` does not start Apache automatically on server restart.

##### Enabling Apache Rendezvous Registration

Starting with version 10.2.4 of Mac OS X and Mac OS X Server, the preinstalled Apache 1.3 web service can register sites with Rendezvous. This feature is implemented using the `mod_rendezvous_apple` module, which is different from the third-party `mod_rendezvous`.

- **Enabling the Module**: Use the Modules pane in Server Admin.
- **Setting Up the Module**:
  - Enable additional logging by changing the `LogLevel` directive in `httpd.conf` to a more verbose setting, such as `info`.
  - Restart the web service after adding new users to register their sites.

##### Using Apache Axis

Apache Axis is included in Mac OS X Server version 10.3 and operates in conjunction with Tomcat 4.1.24-LE. Axis is an implementation of Simple Object Access Protocol (SOAP).

- **Axis Libraries**: `/System/Library/Axis`
- **Sample Axis Web Application**: `/Library/Tomcat/webapps/axis`
- **Validation URL**: `http://example.com:9006/axis/` (replace `example.com` with your hostname)

When you first browse to the validation URL, you may see warnings about missing classes. Follow the instructions provided to resolve these issues.

##### Experimenting with Apache 2

Version 10.3 of Mac OS X Server includes Apache 2 for evaluation purposes, in addition to the operational version of Apache 1.3.

- **Installation Location**: `/opt/apache2`
- **Not Connected to Server Admin**
- **Document Root**: `/opt/apache2/htdocs`

By default, Apache 2 is disabled, and all Server Admin operations work correctly with Apache 1.