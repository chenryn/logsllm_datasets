The file csr.pem is generated from the information you provided.
7 At the prompt, type the following, then press Return:
cat csr.pem
The cat command lists the contents of the file you created in step 5 (csr.pem). You 
should see the phrase “Begin Certificate Request” followed by a cryptic message. The 
message ends with the phrase “End Certificate Request.” This is your certificate signing 
request (CSR).
Obtaining a Website Certificate
You must purchase a certificate for each website from an issuing authority.
Keep these important points in mind when purchasing your certificate:
• You must provide an InterNIC-registered domain name that’s registered to your 
organization.
• If you are prompted to choose a software vendor, choose Apache Freeware with 
SSLeay.
• You have already generated a CSR, so when prompted, open your CSR file using a 
text editor. Then copy and paste the contents of the CSR file into the appropriate text 
field on the issuing authority’s website.
• You can have an SSL certificate for each IP address on your server. Because 
certificates are expensive and must be renewed each year, you may want to purchase 
a certificate for one host name and use the URL with host name followed by domain 
name to avoid having to purchase multiple certificates. For example, if your domain 
name is mywidgets.com, you could purchase a certificate for the host name “buy” 
and your customers would connect to the URL https://buy.mywidgets.com.
 LL2350.book  Page 46  Friday, August 22, 2003  2:32 PM
Chapter 5    Secure Sockets Layer (SSL)
47
• The default certificate format for SSLeay/OpenSSL is PEM, which actually is Base64 
encoded DER with header and footer line. For more about the certificate format, see 
www.modssl.org.
After you’ve completed the process, you’ll receive an email message that contains a 
Secure Server ID. This is your server certificate. When you receive the certificate, save it 
to your web server’s hard disk as a file named server.crt.
Important:  Be sure to make a copy of the certificate message or file.
Installing the Certificate on Your Server 
You can use Server Admin or the command-line tool to specify the certificates for a site. 
For instructions on using Server Admin for this purpose, see “Enabling SSL” on page 35.
To install an SSL certificate using the command-line tool in the Terminal 
application:
1 Log in to your server as the administrator or super user (also known as root).
2 If it doesn’t already exist on your server, create a directory with this name:
/etc/httpd/ssl.crt
3 Copy server.crt (the file that contains your Secure Server ID) to the ssl.crt directory.
Enabling SSL for the Site
1 In Server Admin, click Web in the list for the server you want.
2 Click Settings in the button bar.
3 In the Sites pane, double-click the site where you plan to use the certificate.
4 In the Security pane, select Enable Secure Socket Layer.
5 Type the password from your CSR in the Pass Phrase field.
6 Set the location of the log file that will record SSL transactions.
7 Click the Edit button and paste the text from your certificate file (the certificate you 
obtained from the issuing authority) in the Certificate File field.
8 Click the Edit button and paste the text from your key file (the file key.pem, which you 
set up earlier) in the Key File field.
9 Click the Edit button and paste the text from the ca.crt file in the CA File field. (This is 
an optional file that you may have received from the certificate authority.) 
10 Click Save.
11 Stop and then start web service.
 LL2350.book  Page 47  Friday, August 22, 2003  2:32 PM
48
Chapter 5    Secure Sockets Layer (SSL)
Web Server SSL Password Not Accepted When Manually Entered
Server Admin allows you to enable SSL with or without saving the SSL password. If you 
did not save the passphrase with the SSL certificate data, the server prompts you for 
the passphrase upon restart, but won't accept manually entered passphrases. Use the 
Security pane for the site in Server Admin to save the passphrase with the SSL 
certificate data.
 LL2350.book  Page 48  Friday, August 22, 2003  2:32 PM
6
49
6 Working With Open-Source 
Applications
Become familiar with the open-source applications 
Mac OS X Server uses to administer and deliver web 
services.
Several open-source applications provide essential features of web service. These 
applications include:
• Apache web server
• JBoss application server
• Tomcat servlet container
• MySQL database
Apache 
Apache is the http web server provided with Mac OS X Server. You can use the Server 
Admin application to manage most server operations, but in some instances you may 
want to add or change parts of the open-source Apache server. In such situations, you 
need to modify Apache configuration files and change or add modules.
 LL2350.book  Page 49  Friday, August 22, 2003  2:32 PM
50
Chapter 6    Working With Open-Source Applications
Location of Essential Apache Files
Apache configuration files and locations have been simplified in Mac OS X Server 10.3. 
Locations of key files are as follows:
• The Apache configuration file for web service is located in the directory /etc/httpd/.
• The site configuration files are located in the directory /etc/httpd/sites. 
• The Apache error log, which is very useful for diagnosing problems with the 
configuration file, is located in the directory /var/log/httpd/ (with a symlink that 
allows the directory to be viewed as /Library/Logs/WebServer/).
• Temporarily disabled virtual hosts are in the directory /etc/httpd/’sites_disabled/.
Note:  All files in /etc/httpd/sites/ are read and processed by Apache when it does a 
hard or soft (graceful) restart. Each time you save changes, the server does a graceful 
restart. If you edit a file using a text editor that creates a temporary or backup copy, 
the server restart may fail because two files with almost identical names are present. 
To avoid this problem, delete temporary or backup files created by editing files in this 
folder.
Editing Apache Configuration Files
You can edit Apache configuration files if you need to work with features of the Apache 
web server that aren't included in Server Admin. To edit configuration files, you should 
be an experienced Apache administrator and familiar with text-editing tools. Be sure to 
make a copy of the original configuration file before editing it.
The configuration file httpd.conf handles all directives controlled by the Server Admin 
application. You can edit this file, as long as you follow the conventions already in place 
there (as well as the comments in that file). This file also has a directive to include the 
sites/ directory. In that directory are all of the virtual hosts for that server. The files are 
named with the unique identifier of the virtual host (for example, 
10.201.42.7410_80_17.221.43.127_www.example.com.conf). You disable specific sites by 
moving them to the sites_disabled directory and then restarting web service. You can 
also edit site files as long as the conventions in the file are followed.
One hidden file in the sites_disabled folder is named “default_default.conf.” This file is 
used as the template for all new virtual hosts created in Server Admin. An administrator 
can edit the template file to customize it, taking care to follow the conventions already 
established in the file.
For more information about Apache and its modules, see “Apache Modules” on 
page 61.
 LL2350.book  Page 50  Friday, August 22, 2003  2:32 PM
Chapter 6    Working With Open-Source Applications
51
Starting and Stopping Web Service Using the apachectl 
Script
The default way to start and stop Apache on Mac OS X Server is to use the web module 
of Server Admin. 
If you want to use the apachectl script to start and stop web service instead of using 
Server Admin, be aware of the following behaviors:
• The web performance cache is enabled by default. When web service starts, both the 
main web service process (httpd) and a webperfcache process start. (The 
webperfcache process serves static content from a memory cache and relays 
requests to httpd when necessary.) The apachectl script that comes with Mac OS X 
Server is unaware of webperfcache. So if you have not disabled the performance 
cache, you also need to use the webperfcachectl script to start and stop 
webperfcache.
• The apachectl script does not increase the soft process limit beyond the default of 
100. Server Admin raises this limit when it starts Apache. If your web server receives a 
lot of traffic and relies on CGI scripts, web service may fail to run when it reaches the 
soft process limit.
• The apachectl script does not start Apache automatically when the server restarts.
Understanding apachectl and the Web Service Soft Process Limit 
When Apache is started using the apachectl script, the soft process limit is 100, the 
default limit.
When you use CGI scripts, this limit may not be high enough. In this case, you can start 
web service using Server Admin, which sets the soft process limit to 2048. Alternatively, 
you can type “ulimit -u 2048” before using apachectl.
Enabling Apache Rendezvous Registration
Starting with version 10.2.4 of Mac OS X and Mac OS X Server, the preinstalled Apache 
1.3 web service has the capability to register sites with Rendezvous. This feature, which 
allows Rendezvous-enabled browsers such as Safari to find sites by name, is 
implemented using a new Apache module, mod_rendezvous_apple. This module is 
different from the mod_rendezvous available from a third party. (Apache Rendezvous is 
not supported on the preinstalled Apache 2 web service.)
The module mod-rendezvous_apple allows administrators to control how websites are 
registered with Rendezvous. Mod_rendezvous_apple is disabled by default on 
Mac OS X Server.
 LL2350.book  Page 51  Friday, August 22, 2003  2:32 PM
52
Chapter 6    Working With Open-Source Applications
To enable mod_rendezvous_apple on Mac OS X Server:
m To enable the module, use the Modules pane in Server Admin.
To set up mod_rendezvous_apple on Mac OS X Server: 
m To cause additional logging, which may be helpful if you discover a problem, find the 
LogLevel directive in httpd.conf and change it to a more verbose setting, such as “info.”
Note:  Whenever new users are added, restart web service so that their sites are 
registered.
As always, follow the guidelines Apple has added as comments in configuration files. 
They explain safe procedures for modifying those files.
Note that a user's home directory, which would include a Sites folder, might not be 
present if the administrator added the user without creating a home directory for that 
person. There are several ways to create a home directory, such as adding the home 
directory in the Workgroup Manager application or using the command-line 
createhomedir too to create the directory.
Here is a full description of the Apache configuration directives supported by 
mod_rendezvous_apple.
RegisterDefaultSite directive
• Syntax:  RegisterMachine [port | main]
• Default:  No registration if directive is absent. Port defaults to 80.
• Context:  server config
• Compatibility:  Apache 1.3.x; Mac OS X and Mac OS X Server only
• Module:  mod_rendezvous_apple
This directive controls how the computer name is registered on the default site with 
Rendezvous.
The RegisterDefaultSite directive causes the registration of the default website under 
the computer name, as specified in the Sharing pane of System Preferences. A port 
number can be specified, or the keyword “main”; in the latter case, the port number of 
the “main server” (outside any virtual hosts) is used. On Mac OS X Server, do not specify 
“main,” because all externally visible sites are virtual hosts, and the main server is used 
only for status. If the argument is omitted, port 80 is used.
If the directive is absent, the computer name is not registered.
Rendezvous details:  This directive results in a call to the registration function, with an 
empty string as the name (causing Rendezvous to use the computer name), with 
“_http._tcp” as the service type (indicating a web server), and with an empty string as 
the TXT parameter (indicating the default website).
 LL2350.book  Page 52  Friday, August 22, 2003  2:32 PM
Chapter 6    Working With Open-Source Applications
53
RegisterUserSite directive
• Syntax:  RegisterUserSite username | all-users | customized users [ 
registrationNameFormat [port | main]
• Default:  No registration if directive is absent; registration name defaults to 
longname. Port defaults to 80, host defaults to local.
• Context:  server config
• Compatibility:  Apache 1.3.x; Mac OS X and Mac OS X Server only
• Module:  mod_rendezvous_apple
This RegisterUserSite directive causes the registration of the specified users’ default 
website.
The required first argument is either an individual user's name or the keyword “all-
users” or “customized-users.” The “all-users” keyword causes all users in the hosts’ 
directory to be considered for registration. Registration takes place if the user is a non-
system user (user ID > 100), with an enabled website directory as specified in the 
UserDir directive, and only if that directory is accessible by the local host. Note that this 
may require a mount if the user's home directory is remote; if the home directory is not 
available, the user site is not registered. The “customized-users” keyword limits 
registration to those users who have an index.html file in their website directory that 
differs from the index.html file in the standard user template. In other words, it makes a 
reasonable attempt to limit registration to users who have customized their websites.
The optional second argument determines the form of the name under which the user 
site is registered. This takes the form of a format string, similar to the LogFormat 
directive. Certain directives in the format string are replaced with values:
%l - user’s longname, such as Joe User
%n - user’s short name, such as juser
%u - user’s userid, such as 1234
%t - HTML title of user’s index file (as determined by DirectoryIndex directive; by 
default it is index.html) from the user’s default site folder (as determined by the 
UserDir directive; by default it is Sites). For Mac OS X Personal Web Sharing, the 
default title in a non-customized webpage is “Mac OS X Personal Web Sharing.”
%c - computer name, as set in Sharing Preference panel
The default is %l, the longname. The second argument must be specified if the optional 
third argument is desired.
 LL2350.book  Page 53  Friday, August 22, 2003  2:32 PM
54
Chapter 6    Working With Open-Source Applications
The optional third argument can be can be used to specify a port number under which 
the HTTP service is to be registered, or the keyword “main”; in the latter case, the port 
number of the “main server” (outside any virtual hosts) is used. In the case of Mac OS X 
Server, do not specify “main” for the port, because all externally visible sites are virtual 
hosts, and the main server is used only for status. If the port argument is omitted, port 
80 is used.
If the directive is absent, no user site registration takes place. This directive is not 
processed if mod_userdir is not loaded. The UserDir and DirectoryIndex directives must 
precede the RegisterUserSite directive in the Apache config file.
Rendezvous details:  This directive results in a call to the registration function, with a 
string like “Joe User” as the name, with “_http_tcp” as the service type (indicating a web 
server), and with a value like “path=/~juser/” as the TXT parameter (which, after 
expansion by mod_userdir, indicates the user’s default website), and with the 
appropriate port.
RegisterResource directive
• Syntax:  RegisterResource name path [port | main]
• Default:  No registration if directive is absent. Port defaults to 80.
• Context:  server config
• Compatibility:  Apache 1.3.x; Mac OS X and Mac OS X Server only
• Module:  mod_rendezvous_apple
The RegisterResource directive causes the registration of the specified resource path 
under the specified name.
The optional third argument can be used to specify a port number, or the keyword 
“main”; in the latter case, the port number of the “main server” (outside any virtual 
hosts) is used. On Mac OS X Server, do not specify “main,” because all externally visible 
sites are virtual hosts, and the main server is used only for status. If the third argument 
is omitted, port 80 is used.
Rendezvous details:  This directive results in a call to the registration function, with the 
specified name, with “_http._tcp” as the service type (indicating a web server), with 
“path=/specifiedpath” as the TXT parameter, and with the appropriate port.
 LL2350.book  Page 54  Friday, August 22, 2003  2:32 PM
Chapter 6    Working With Open-Source Applications
55
Using Apache Axis
You can use Apache Axis by writing web applications that use the Axis libraries and 
then deploy the applications in Tomcat or JBoss. Unlike JBoss and Tomcat, Axis is not 
usually used as an application server.
Mac OS X Server version 10.3 includes a preinstalled version of Apache Axis (1.1), which 
operates in conjunction with the preinstalled Tomcat 4.1.24-LE. Apache Axis is an 
implementation of Simple Object Access Protocol (SOAP). More about SOAP can be 
found at http://www.w3.org/TR/SOAP/. More about Axis can be found at 
http://ws.apache.org/axis/.
The Axis libraries can be found in /System/Library/Axis. By default, Apple installs a 
sample Axis web application into Tomcat. The web application known as axis can be 
found in /Library/Tomcat/webapps/axis.
After you enable Tomcat using the Application Server section of Server Admin, you can 
validate the preinstalled Apache Axis by browsing the following:
http://example.com:9006/axis/ 
Replace “example.com” in the URL above with your host name. Note the nonstandard 
Tomcat port.
The first time you exercise the preinstalled Axis by browsing http://example.com:9006/
axis/ and selecting the link entitled “Validate the local installation's configuration,” you 
should expect to see the following error messages:
• Warning: could not find class javax.mail.internet.MimeMessage from file mail.jar
Attachments will not work.
See http://java.sun.com/products/javamail/
• Warning: could not find class org.apache.xml.security.Init from file xmlsec.jar
XML Security is not supported
See http://xml.apache.org/security/
Follow the instructions that accompany the warning messages if you require those 
optional components.
Consult the Axis User's Guide on the Apache Axis website to learn more about using 
Axis in your own web applications.
Experimenting With Apache 2
Version 10.3 of Mac OS X Server includes Apache 2 for evaluation purposes in addition 
to the operational version of Apache 1.3. By default, Apache 2 is disabled, and all Server 
Admin operations work correctly with Apache 1.
 LL2350.book  Page 55  Friday, August 22, 2003  2:32 PM
56
Chapter 6    Working With Open-Source Applications
If you want to experiment with Apache 2, note the following:
• It is installed in a separate location in the file system:   /opt/apache2.
• It is not connected to Server Admin.
• It serves webpages from /opt/apache2/htdocs.