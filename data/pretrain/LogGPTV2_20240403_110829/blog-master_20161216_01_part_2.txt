```  
wget https://cmake.org/files/v3.4/cmake-3.4.1.tar.gz  
tar -zxvf cmake-3.4.1.tar.gz  
cd cmake-3.4.1  
./configure --prefix=/u02/digoal/cmake  
make  
make install  
export PATH=/u02/digoal/cmake/bin:$PATH  
```  
2\. python  
```  
wget  
https://www.python.org/ftp/python/2.7.11/Python-2.7.11.tar.xz  
tar -xvf Python-2.7.11.tar.xz  
cd Python-2.7.11  
./configure --prefix=/u02/digoal/python2.7.11 --enable-shared  
make -j 32  
make install -j 32  
export PATH=/u02/digoal/python2.7.11/bin:$PATH  
export LD_LIBRARY_PATH=/u02/digoal/python2.7.11/lib:$LD_LIBRARY_PATH  
vi /etc/ld.so.conf  
/u02/digoal/python2.7.11/lib  
```  
3\. llvm, clang  
```  
wget http://llvm.org/releases/3.7.1/llvm-3.7.1.src.tar.xz  
wget http://llvm.org/releases/3.7.1/cfe-3.7.1.src.tar.xz  
wget http://llvm.org/releases/3.7.1/compiler-rt-3.7.1.src.tar.xz  
wget http://llvm.org/releases/3.7.1/clang-tools-extra-3.7.1.src.tar.xz  
wget http://llvm.org/releases/3.7.1/libcxx-3.7.1.src.tar.xz  
tar -xvf llvm-3.7.1.src.tar.xz  
tar -xvf cfe-3.7.1.src.tar.xz  
tar -xvf compiler-rt-3.7.1.src.tar.xz  
tar -xvf clang-tools-extra-3.7.1.src.tar.xz  
tar -xvf libcxx-3.7.1.src.tar.xz  
mv cfe-3.7.1.src clang  
mv clang/ llvm-3.7.1.src/tools/  
mv clang-tools-extra-3.7.1.src extra  
mv extra/ llvm-3.7.1.src/tools/clang/  
mv compiler-rt-3.7.1.src compiler-rt  
mv compiler-rt llvm-3.7.1.src/projects/  
mkdir mybuild  
cd mybuild  
cmake -DCMAKE_BUILD_TYPE=Release /u02/digoal/soft_bak/llvm-3.7.1.src  
```  
安装  
```  
cmake -G"Unix Makefiles" ../llvm-3.7.1.src
make -j 128
cmake -DCMAKE_INSTALL_PREFIX=/u02/digoal/llvm -P cmake_install.cmake  
或  
/u02/digoal/soft_bak/llvm-3.7.1.src/configure --prefix=/u02/digoal/llvm --enable-optimized --enable-targets=host-only CC=gcc CXX=g++  
make -j 32  
make install -j 32  
```  
配置环境  
```  
export PATH=/u02/digoal/llvm/bin:$PATH  
export LD_LIBRARY_PATH=/u02/digoal/llvm/lib:$LD_LIBRARY_PATH  
# vi /etc/ld.so.conf  
/u02/digoal/llvm/lib  
# ldconfig  
```  
参考  
http://btorpey.github.io/blog/2015/01/02/building-clang/    
### 2\. 下载llvm postgresql        
```      
mkdir ispras      
cd ispras      
wget https://github.com/ispras/postgres/archive/llvm-expressions.zip      
unzip llvm-expressions.zip      
cd postgres-llvm-expressions      
```      
### 3\. 安装 llvm postgresql      
https://github.com/ispras/postgres      
```      
./configure --prefix=/home/digoal/pgsql9.6.1_llvm      
make world -j 32      
make install-world      
```      
### 4\. 初始化数据库      
```      
initdb -D $PGDATA -E SQL_ASCII --locale=C -U postgres      
```      
### 加载列存储cstore引擎插件      
1\. 安装依赖包protobuf, protobuf-c        
```      
yum install -y libtool automake gcc-c++      
wget https://github.com/google/protobuf/archive/v3.0.2.tar.gz      
tar -zxvf v3.0.2.tar.gz      
cd protobuf-3.0.2      
./autogen.sh      
./configure --prefix=/home/digoal/protobuf      
make && make install      
export LD_LIBRARY_PATH=/home/digoal/protobuf/lib:$PGHOME/lib:$LD_LIBRARY_PATH      
export PATH=/home/digoal/protobuf/bin::$PATH:.      
export PKG_CONFIG_PATH=/home/digoal/protobuf/lib/pkgconfig:$PKG_CONFIG_PATH      
wget https://github.com/protobuf-c/protobuf-c/releases/download/v1.2.1/protobuf-c-1.2.1.tar.gz      
./configure --prefix=/home/digoal/protobuf-c      
make -j 32      
make install      
export LD_LIBRARY_PATH=/home/digoal/protobuf-c/lib:/home/digoal/protobuf/lib:$PGHOME/lib:$LD_LIBRARY_PATH      
export PATH=/home/digoal/protobuf-c/bin:/home/digoal/protobuf/bin::$PATH:.      
export PKG_CONFIG_PATH=/home/digoal/protobuf-c/lib/pkgconfig:/home/digoal/protobuf/lib/pkgconfig:$PKG_CONFIG_PATH      
```      
2\. 安装cstore引擎      
```      
git clone https://github.com/citusdata/cstore_fdw        
cd cstore_fdw        
export PATH=/home/digoal/pgsqlllvm/bin:$PATH      
export C_INCLUDE_PATH=/home/digoal/protobuf-c/include      
export LIBRARY_PATH=$LD_LIBRARY_PATH      
make clean      
make      
make install      
```      
3\. 加载cstore引擎      
```      
vi $PGDATA/postgresql.conf      
shared_preload_libraries = 'cstore_fdw'      
pg_ctl restart -m fast      
```      
4\. 使用cstore引擎      
```      
psql       
psql (9.6.1)      
Type "help" for help.      
postgres=# create extension cstore_fdw;      
CREATE EXTENSION      
postgres=# CREATE SERVER cstore_server FOREIGN DATA WRAPPER cstore_fdw;      
CREATE SERVER      
```      
5\. cstore引擎用法      