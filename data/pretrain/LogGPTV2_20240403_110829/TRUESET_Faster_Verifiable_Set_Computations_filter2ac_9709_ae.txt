### Figure 6: The Multiple-Gate Circuit Used for Evaluation

We now compare the performance of TRUESET and Pinocchio for a complex set circuit consisting of multiple set operations, as illustrated in Figure 6. This circuit takes eight input sets of equal cardinality and outputs one set. We evaluate both the prover's overhead and the key sizes with respect to different input set cardinalities. For this comparison, we only consider Pinocchio circuits based on pairwise comparisons, as the sorting network approach has significantly higher overhead in terms of computation times and key sizes, as demonstrated in the previous subsection.

### Figure 7: Comparison Between TRUESET and Pinocchio

Figure 7 provides a detailed comparison between TRUESET and Pinocchio for the multiple-gate circuit shown in Figure 6, using the pairwise comparison circuit for Pinocchio. The horizontal axis represents the cardinality of each input set in logarithmic scale.

- **Subfigure (a): Key Generation**  
  This subfigure compares the key generation times for TRUESET, NTL-ZM Pinocchio, and MS Pinocchio. The results show that TRUESET outperforms Pinocchio in key generation time, especially as the input set cardinality increases.

- **Subfigure (b): Proof Computation**  
  This subfigure compares the proof computation times for TRUESET and Pinocchio. TRUESET demonstrates a significant speedup, particularly for larger input set cardinalities. For example, at an input set cardinality of \(2^6\), TRUESET’s prover achieves a speedup of more than 50x compared to Pinocchio.

- **Subfigure (c): Detailed Proof Computation**  
  This subfigure provides a more detailed breakdown of the proof computation times, showing the number of polynomial operations and exponentiations for both TRUESET and Pinocchio.

- **Subfigure (d): Verification**  
  This subfigure compares the verification times for TRUESET and Pinocchio. The results indicate that both systems have similar verification times, with TRUESET maintaining a slight edge.

- **Subfigure (e): Evaluation Key Size**  
  This subfigure compares the sizes of the evaluation keys used by TRUESET and Pinocchio. TRUESET uses much smaller evaluation keys, which are up to 97% smaller than those used by Pinocchio when the input set cardinality is \(2^6\).

- **Subfigure (f): Verification Key Size**  
  This subfigure compares the sizes of the verification keys. TRUESET also maintains a significant advantage in terms of verification key size.

### 5.5 Cardinality and Sum of Set Elements

In this section, we evaluate TRUESET when a split gate is used to calculate the cardinality and sum for the output set of the circuit shown in Figure 6. We compare this with Pinocchio’s performance for the same functions. An important parameter for the split gate is the maximum cardinality of the set it can support, which is necessary for translating the split gate into the appropriate number of multiplication gates needed for verification. For instance, a split gate added to the output of the circuit in Figure 6 would need to account for \(4n\) set elements in the worst case, where \(n\) is the upper bound on the input set cardinalities.

Table 1 presents a comparison between TRUESET and Pinocchio in terms of elapsed times in the three stages (key generation, proof computation, and verification) and the evaluation/verification key sizes when the input set cardinality is 64. As the table shows, TRUESET provides better performance in key generation and proof computation times (with a 4x improvement in proof computation time) and uses a much smaller public evaluation key. While TRUESET offers a significant improvement over Pinocchio, it is not as large as the improvement observed in the previous section.

### Figure 8: Additional Comparisons

- **Subfigure (a): Key Generation**  
  This subfigure compares the key generation times for single-gate, multi-gate, and multi-gate with split configurations. TRUESET consistently outperforms Pinocchio across all configurations.

- **Subfigure (b): Proof Computation**  
  This subfigure further details the proof computation times for the different configurations, highlighting the efficiency of TRUESET in various scenarios.

These results confirm that TRUESET significantly outperforms Pinocchio in terms of key generation and proof computation times while maintaining comparable verification times and much smaller key sizes.