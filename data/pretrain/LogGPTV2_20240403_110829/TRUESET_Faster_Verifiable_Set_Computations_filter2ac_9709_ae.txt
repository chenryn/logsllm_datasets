Figure 6: The multiple-gate circuit used for evaluation.
We now compare TRUESET and Pinocchio’s performance
for a complex set circuit consisting of multiple set op-
erations, illustrated in Figure 6. The circuit takes eight
input sets of equal cardinalities, and outputs one set. We
compare both the prover’s overhead and the key sizes with
respect to different input set cardinalities, but this time
we consider only Pinocchio circuits based on pairwise
comparisons, as the sorting network approach has much
larger overhead for computation times and key sizes as
shown in the previous subsection.
Figure 7 shows a comparison between TRUESET’s
approach and Pinocchio’s approach. The results again
776  23rd USENIX Security Symposium 
USENIX Association
i
)
c
e
s
(
e
m
T
n
o
i
t
a
r
e
n
e
G
y
e
K
50
40
30
20
10
0
TrueSet
NTL-ZM Pinocchio
MS Pinocchio
10
5
0
2²
2³
2⁴
2⁵
2⁶
2⁷
2⁸
2⁹
2¹⁰
2²
2³
2⁴
Input Set Cardinality
(a) Key Generation
)
c
e
s
(
e
m
T
f
o
o
r
P
i
)
c
e
s
(
e
m
T
f
o
o
r
P
i
200
150
100
50
0
2²
2³
TrueSet
NTL-ZM Pinocchio
MS Pinocchio
15
10
5
0
2⁹ 2¹⁰
2²
2³
2⁴
2⁴
2⁵
2⁶
2⁸
Input Set Cardinality 
2⁷
(b) Proof Computation
Poly. Operations - Trueset
Exponentiation - Trueset
Poly. Operations - Pinocchio
Exponentiation - Pinocchio
6
4
2
0
i
)
c
e
s
(
e
m
T
n
o
i
t
a
c
i
f
i
r
e
V
1.2
1
0.8
0.6
0.4
0.2
0
2⁵
2⁶
2⁴
2⁸
Input Set Cardinality
2⁷
2⁹ 2¹⁰
2²
2³
2⁴
2²
2³
2⁵
2⁶
2⁸
2⁴
Input Set Cardinality
2⁷
TrueSet
NTL-ZM Pinocchio
MS Pinocchio
0.1
0.05
0
2⁹ 2¹⁰
2²
2³
2⁴
2⁵
2⁶
(c) Proof Computation (Detailed)
(d) Veriﬁcation
)
c
e
s
(
e
m
T
i
100
75
50
25
0
2²
2³
100
)
B
M
(
e
z
i
S
y
e
K
n
o
i
t
a
u
a
v
E
l
50
0
2²
2³
2⁴
2⁵
2⁶
2⁷
2⁸
2⁹ 2¹⁰
6
4
2
0
2²
Input Set Cardinality
(e) Evaluation Key Size
TrueSet
Pinocchio
)
B
M
(
e
z
i
S
y
e
K
n
o
i
t
a
c
i
f
i
r
e
V
2
1
0
2³
2⁴
2²
2³
2⁴
2⁵
2⁶
2⁷
2⁸
2⁹ 2¹⁰
Input Set Cardinality
TrueSet
Pinocchio
0.04
0.02
0
2²
2³
2⁴
2⁵
(f) Veriﬁcation Key Size
Figure 7: Comparison between TRUESET and Pinocchio in the case of the multiple-gate circuit shown in Fig. 6, assuming the
pair-wise comparison circuit for Pinocchio. In the horizontal axis, we show the cardinality of each input set in logarithmic scale.
Subﬁgures (a), (b) and (d) show the comparison in terms of the key generation, proof computation and veriﬁcation time, while (c)
shows TRUESET’s prover’s time in more detail compared to Pinocchio’s prover time. Subﬁgures (e) and (f) show the compressed
evaluation and veriﬁcation key sizes (The cryptographic proof for all instances is 288 bytes).
conﬁrm that TRUESET greatly outperforms Pinocchio’s
elapsed time for key generation and proof computation,
while maintaining the same veriﬁcation time. In partic-
ular, for input set cardinality of 26, TRUESET’s prover
has a speedup of more than 50x. In terms of key sizes,
the ﬁgure conﬁrms the observation that the evaluation key
used by TRUESET is tiny compared to that of Pinocchio,
e.g., 97% smaller when the input cardinality is 26.
5.5 Cardinality and Sum of Set Elements
Here, we evaluate TRUESET when a split gate is used
to calculate the cardinality and sum for the output set of
Figure 6. We compare that with Pinocchio’s performance
for the same functions. One important parameter that
has to be deﬁned for the split gate ﬁrst is the maximum
cardinality of the set it can support. This is needed for
translating the split gate to the appropriate number of
multiplication gates needed for veriﬁcation. For example,
a split gate added to the output of the circuit in Figure 6,
will have to account for 4n set elements in the worst case,
if n is the upper bound on the input set cardinalities.
Table 1 presents a comparison between TRUESET and
Pinocchio in terms of the elapsed times in the three stages
and the evaluation/veriﬁcation key sizes, when the input
set cardinality is 64. As the table shows, TRUESET can
provide better performance in terms of the key generation
and proof computation times (4x better proof computation
time), in addition to a much smaller public evaluation key.
It can be noted that, while there deﬁnitely exists a large
improvement over Pinocchio, it is not as large as the one
USENIX Association  
23rd USENIX Security Symposium  777
i
)
c
e
s
(
e
m
T
n
o
i
t
a
r
e
n
e
G
y
e
K
45
40
35
30
25
20
15
10
5
0
Single-gate
Multi-gate
Multi-gate with Split
0
100
200
Input Set Cardinality
i
)
c
e
s
(
e
m
T