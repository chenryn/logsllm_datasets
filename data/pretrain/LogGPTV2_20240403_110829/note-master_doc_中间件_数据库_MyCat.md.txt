# MyCat
MyCAT是一款由阿里Cobar演变而来的用于支持数据库，读写分离、分表分库的分布式中间件
MyCAT原理MyCAT主要是通过对SQL的拦截，然后经过一定规则的分片解析、路由分析、读写分离分析、缓存分析等，然后将SQL发给后端真实的数据块，并将返回的结果做适当处理返回给客户端
## 使用
- server.xml
```xml
    123
    mycat_testdb
     -->
    123
    mycat_testdb
    true
```
- schema.xml
```xml
    S1，M2->S2，并且M1与 M2互为主备)，正常情况下，M2,S1,S2都参与select语句的负载均衡；
            2，所有的readHost与writeHost都参与select语句的负载均衡，也就是说，当系统的写操作压力不大的情况下，所有主机都可以承担负载均衡；
-->
        select user()
```
## 分片枚举
分片枚举算法就是根据不同的枚举(常量)，分类存储。
- schema.xml
```xml
```
- rule.xml
```xml
              name
            hash-int
	partition-hash-int.txt
	1
	1
```
- partition-hash-int.txt
```text
wuhan=0
shanghai=1
suzhou=2
```
## 取模
使用根据ID对节点数量取余，得到存放节点
这种方式数据库节点一开始就是固定的，如果节点数量发生变更，需要迁移数据rehash
## 查询原理
如果含有分片字段，则根据字段计算出数据所在DB，向DB发送查询请求并返回给客户端
否则向所有DB节点发送查询请求，汇总结果后拼接返回给客户端
所以如果没有排序，会发现同样的条件查询，会有不同的顺序