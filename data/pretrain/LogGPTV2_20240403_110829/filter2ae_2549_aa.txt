原文：[blog.quarkslab.com](http://blog.quarkslab.com/reverse-engineering-samsung-s6-sboot-part-i.html)
原作者：Quarkslab
译： **Holic (知道创宇404安全实验室)**
现在有许多搭载三星 Exynos 智能手机使用了 SBOOT 专属 bootLoader。目前三星 Galaxy S7，Galaxy S6 和 Galaxy
A3 即是如此，当然在三星 Exynos Showcase [1] 上可能还会有更多的智能手机采用，我也有一次在审计各种 TEE 实现的时候逆向了一部分
BootLoader 。本文是 SBoot 系列的第一篇，它回顾了 ARMv8
的一些概念，阐述了我的方法论，正确或错误的假设，同时在没有文档的情况下分析了一堆三星 S6 的一堆东西。
### 来龙去脉
最近，作为日常工作，我有幸在几次可信执行环境（TEE）的应用中审计出了几个 bug。在项目之余，我开始挖掘更多的 TEE
应用，特别是在我的智能手机上，个人用或在工作中，巧合的是，他们来自同一个软件编辑器，即由 ARM，G&D 和 Gemalto 共同创立的Trustonic
[2]。目前我手上的智能手机的共同点就是他们都基于 Exynos 。
Trustonic 的 TEE，名为 " % sys.argv[0])
        sys.exit(1)
    sboot_file = open(sys.argv[1], "rb")
    sboot_data = sboot_file.read()
    rt_svc_desc = []
    for idx in range(RT_SVC_DESC_ENTRIES):
        start = RT_SVC_DESC_OFFSET + (idx << 5)
        desc = struct.unpack(RT_SVC_DESC_FORMAT,
                             sboot_data[start:start+RT_SVC_DESC_SIZE])