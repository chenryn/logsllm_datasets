# 【技术分享】沙盒逃逸技术详解（二）

## 译文声明
本文为翻译文章，原文来源：vmray.com。译文仅供参考，具体内容和含义以原文为准。

翻译：[WisFree](http://bobao.360.cn/member/contribute?uid=2606963099)  
稿费：200RMB  
投稿方式：发送邮件至linwei#360.cn 或登录网页版在线投稿

## 温故知新
在《沙盒逃逸技术详解-第一部分》中，我们介绍了三种主要的沙盒逃逸技术：
1. **沙盒检测**：通过检测沙盒的存在来决定是否执行恶意行为。
2. **利用沙盒漏洞**：利用沙盒技术或目标环境中的安全缺陷。
3. **基于环境感知的恶意软件**：根据时间、事件或环境判断，在沙盒分析过程中不暴露恶意行为。

在本部分中，我们将重点介绍第一类沙盒逃逸技术：恶意软件如何检测沙盒并表现出友好行为。

### 检测沙盒的存在
恶意软件通常通过对比沙盒环境与真实系统环境之间的细微差别来检测沙盒。一旦检测到沙盒，恶意软件可能会采取以下两种反应之一：
- 立即终止运行（这可能会引起系统的注意）。
- 显示伪造的错误信息，如“系统模块丢失”或“可执行文件崩溃”，以隐藏其真实意图。

接下来，我们将深入探讨当前流行的恶意软件在沙盒环境中使用的逃逸技术。

#### 1. 检测虚拟化/虚拟机管理程序
这是历史最悠久的一种逃逸技术，但随着许多产品环境的虚拟化，这种方法逐渐失效。

- **早期方法**：通过搜索特定的技术组件，例如VMware或VirtualBox中的某些功能组件，或者通用的虚拟机管理组件（如redpill）。
- **现代方法**：通过当前进程、文件、驱动程序、注册表键、MAC地址、设备ID、CPU ID或内存中的字符串数据来获取厂商信息。

**示例**：
- 恶意软件在VirtualPC环境中尝试检测虚拟机组件。
- 通过扫描注册表键值来检测虚拟机的存在，例如查询`HKEY_LOCAL_MACHINE\HARDWARE\Description\System`的值，并与主流虚拟机的注册表键值进行匹配。

#### 2. 检测沙盒组件
在这种方法中，恶意软件直接检测沙盒本身，而不是虚拟机管理程序。

- **利用厂商相关的信息**：例如特殊文件、进程、驱动程序、文件系统结构、窗口ID和用户名等。
- **使用特殊的沙盒技术**：大多数沙盒使用函数钩子来捕获进程、驱动器和操作系统间的通信数据。恶意软件可以通过特殊指令或指针来检测函数钩子的存在，或者验证系统完整性来判断当前环境是否为虚拟机。

**示例**：
- 恶意软件搜索Sandboxie沙盒环境的专有组件`SbieDll.dll`。

#### 3. 检测人造环境
沙盒是一种专门用于分析恶意软件的环境，与真实的计算机系统存在差异。恶意软件可以检测这些差异：

- **硬件属性**：低分辨率屏幕、缺少USB 3.0驱动、没有3D显示能力、单个CPU、小容量硬盘和内存。
- **软件属性**：非典型的软件栈，例如系统中没有IM和邮件客户端。
- **系统属性**：系统正常运行时间、网络通信数据、仅安装默认打印机。
- **用户属性**：干净的桌面和文件系统、没有cookie、最近文档或用户文件。

**示例**：
- 恶意软件通过查询`GET_PROC_ADDRESS`来检测Wine环境。

#### 4. 基于时间的检测
由于监控软件行为时会有延时，恶意软件可以通过这种延时来判断是否存在沙盒。虽然沙盒可以通过伪造时间来避免被检测，但恶意软件仍可以通过外部时间源（如NTP）绕过它。

**示例**：
- 恶意软件通过`rdtsc`命令来检测时间戳。

## 沙盒如何避免被检测
为了防御恶意软件的沙盒探测技术，一个健壮的分析环境应具备以下要素：

1. **不要仅依赖修改目标环境**：函数钩子是沙盒分析中最常用的技术，但它们很容易被检测到，几乎不可能完全隐藏。
2. **要么完美实现全系统虚拟化，要么不模拟任何系统组件**：完美的模拟环境难以实现，且任何模拟环境都可能存在缺陷。
3. **使用“真实”的目标分析环境**：如果沙盒分析器能够运行实际产品节点的镜像，被检测的可能性将大大降低。

## 总结
本文是《沙盒逃逸技术详解》的第二部分，介绍了第一类沙盒逃逸技术。在系列的第三部分中，我们将介绍沙盒技术中的漏洞及利用方法。敬请关注安全客的最新资讯。

## 参考资料
- [VMWare port](https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&cmd=displayKC&externalId=1009458)
- [Comprehensive Virtual Appliance Detection](https://www.blackhat.com/docs/asia-14/materials/Li/Asia-14-Li-Comprehensive-Virtual-Appliance-Detection.pdf)
- [Breaking the Sandbox](https://www.exploit-db.com/docs/34591.pdf)
- [Detecting Apps Mimetype Malware](https://www.brokenbrowser.com/detecting-apps-mimetype-malware/)
- [Virtual Machine Threats](https://www.symantec.com/avcenter/reference/Virtual_Machine_Threats.pdf)
- [Analysis report showing VirtualPC detection](http://www.vmray.com/analyses/678148/report/vti_by_score.html)
- [Analysis report showing malware detecting VMs via registry](http://www.vmray.com/analyses/678032/report/overview.html)
- [Analysis report showing detection of sandbox artifacts](http://www.vmray.com/analyses/663313/report/overview.html)
- [Wine software emulator](https://blogs.forcepoint.com/security-labs/locky-returned-new-anti-vm-trick)