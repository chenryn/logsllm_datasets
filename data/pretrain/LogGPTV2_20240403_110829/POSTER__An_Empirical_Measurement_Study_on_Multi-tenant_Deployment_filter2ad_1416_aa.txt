# Title: An Empirical Measurement Study on Multi-tenant Deployment Issues of CDNs

## Authors
- Zixi Cai, Institute of Information Engineering, Chinese Academy of Sciences
- Zigang Cao (corresponding author), Institute of Information Engineering, Chinese Academy of Sciences; School of Cyber Security, University of Chinese Academy of Sciences
- Gang Xiong, Institute of Information Engineering, Chinese Academy of Sciences; School of Cyber Security, University of Chinese Academy of Sciences
- Zhen Li, Institute of Information Engineering, Chinese Academy of Sciences
- Wei Xia, Institute of Information Engineering, Chinese Academy of Sciences; School of Cyber Security, University of Chinese Academy of Sciences

## Abstract
Content Delivery Networks (CDNs) play a crucial role in enhancing the speed and user experience of popular websites worldwide. Offering HTTPS support has become a standard security feature for CDN providers. When multiple tenants share the same IP address for resource efficiency and cost savings, CDN providers must ensure that all tenant sites function correctly. Misconfigurations can lead to issues such as Denial of Service (DoS) and privacy leaks, especially in hybrid HTTP/HTTPS deployments. This study examines the multi-tenant deployments of leading CDN providers through active measurements. We found that providers like Akamai and ChinaNetCenter have configuration issues that can result in DoS due to certificate name mismatches. We provide recommendations to mitigate these issues, aiming to improve the security and robustness of CDNs.

## Keywords
CDN, HTTPS, certificate

## 1. Introduction
HTTPS is a widely used network protocol for secure web communications over public networks. As of July 2017, according to Let's Encrypt, more than half of web pages are loaded using HTTPS, with over 40 million digital certificates issued [1].

A Content Delivery Network (CDN) is a geographically distributed network of proxy servers and data centers designed to optimize security, performance, and reliability. Websites using HTTPS can be deployed on CDNs in two main modes: dedicated IP and shared IP. Many small and medium-sized sites opt for shared IPs due to economic reasons. It is essential for tenants to understand how CDNs manage these shared IP deployments, as the CDN acts as a proxy and is responsible for providing secure access. For site owners, understanding the deployment of multi-tenant CDNs is crucial for selecting a robust and secure service provider and avoiding misconfigured services.

While there is extensive research on HTTPS and CDNs, there is a lack of systematic measurement and analysis focusing on the shared IP deployment mode and its impact on security, privacy, and service robustness. This paper aims to fill this gap by measuring and analyzing the deployment of sites on CDNs, summarizing the typical characteristics of different CDN providers, and identifying misconfiguration issues that can cause severe problems, particularly in hybrid HTTP/HTTPS deployments. We offer recommendations to help CDN providers mitigate these issues.

## 2. How Multi-tenant CDNs Process HTTPS
It is common for multiple websites to be hosted on a single server in a CDN for economic reasons. When a HTTPS ClientHello request reaches the CDN server, the server must return the corresponding server certificate. A mismatched certificate can cause a DoS or severe security warning. CDN providers typically use three solutions to handle this:

1. **Dedicated IP**: Assign a unique IP to each site, ensuring no conflicts. Wildcard SSL and Dedicated SSL use this approach.
2. **Server Name Indication (SNI)**: Add SNI support, allowing the server to return the correct certificate based on the host name in the SNI extension. SNI is supported by all major browsers, making it an easy and cost-effective solution.
3. **Shared SSL Certificate**: Use a shared SSL certificate that includes all site domains in the Subject Alternative Name (SAN) field. However, improper deployment can lead to security and privacy issues.

The general process for handling HTTPS requests in a CDN is illustrated in Figure 1.

**Figure 1: How CDN Returns Certificates**

## 3. Our Measurement
We identified deployment issues in CDNs using active probing techniques. Based on preliminary investigations, we selected the top 25,000 Alexa sites as our test subjects, as they are most likely to use CDNs to enhance user experience.

To simulate different access scenarios, we used various SSL/TLS protocol versions and SNIs to establish handshakes with the hosts of the top 25,000 Alexa sites. The CDN node should select and return the appropriate certificate after receiving the ServerHello message during the handshake. In shared IP deployments, different certificates should be returned based on the SNI. Previous research has shown that configuration issues, such as domain mismatches between certificates and websites, can occur [3-5].

**Figure 2: User Accessing Websites via HTTPS**

Figure 2 illustrates a common method for users to access the internet securely by entering "https" before a URL in their browser. This is known as forcing HTTPS. CDNs must provide the appropriate response in such cases, but different CDN providers may respond differently. We analyzed the certificates and server responses to identify typical issues in current CDN services.

## 4. Results and Discussions

### 4.1 Multi-tenant CDN Deployment Situation
Table 1 summarizes the differences in behavior among CDN providers. We checked the box if we could obtain a certificate in that case; otherwise, we did not. The results show that SNI is widely deployed by multi-tenant CDNs. Most CDN providers only support higher TLS versions, including Distilnetworks, Gannett, Fastly, etc.

**Table 1: Inconsistent Behavior of Returning Certificates by CDN Providers**

| CDN Provider | TLS1.0 | TLS1.2 | SNI | NULL |
|--------------|--------|--------|-----|------|
| CloudflareSSL |        |        |     |      |
| Akamai       |        |        |     |      |
| ChinaNetCenter |        |        |     |      |
| EdgecastCDN  |        |        |     |      |
| MyQCloud     |        |        |     |      |
| Incapsula    |        |        |     |      |
| AzureWebsites |        |        |     |      |
| WP Engine    |        |        |     |      |
| AliCDN       |        |        |     |      |
| BaishanCloud |        |        |     |      |
| Jiasule      |        |        |     |      |
| DistilNetworks |        |        |     |      |
| Fastly       |        |        |     |      |
| YunjiaSuSSL  |        |        |     |      |

## Conclusion
This study provides a comprehensive analysis of multi-tenant CDN deployments, highlighting the importance of proper configuration to avoid security and privacy issues. Our findings and recommendations aim to improve the security and robustness of CDN services, ensuring a better user experience and reducing potential economic losses for tenants.