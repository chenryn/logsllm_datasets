### 为什么打车和宇宙大爆炸有关？

#### 庆祝 PostgreSQL 13 发布
热烈庆祝 PostgreSQL 13 于2020年9月24日正式发布！以下是 PostgreSQL 13 的一些亮点：
- **技术优势**：PostgreSQL 13 在性能、可靠性和稳定性方面进行了显著改进。
- **用户体验**：新版本提供了更多贴心的功能，优化了用户的操作体验。
- **创新特性**：引入了一些烧脑的新功能，如多模索引等。
- **社区贡献**：全球社区的协作与奉献是 PostgreSQL 不断进步的重要原因。

引用 PostgreSQL 核心团队成员 Peter Eisentraut 的话：“每个发行版都带来了创新，PostgreSQL 13 展示了我们对可靠性和稳定性的承诺。越来越多的企业选择使用 PostgreSQL，正是因为这些方面的声誉。”

#### 关于作者
- **江湖名号**：德哥
- **所属帮会**：PostgreSQL 社区
- **职务**：阿里云数据库产品经理
- **擅长领域**：全文检索、模糊搜索、化学分析、人脸识别等
- **愿景**：没有MyBase解决不了的问题，如果有，就多买几台
- **格言**：公益是一辈子的事
- **业余爱好**：写博客、申请专利、分享知识、乐于助人

#### 最近作品
- 《亿级用户量的实时推荐数据库到底要几毛钱？》
- 《在数据库中跑全文检索、模糊SQL会不会被开除？》
- 《刷脸支付会不会刷到别人的钱包？》

### 打车与宇宙大爆炸的关系探讨

#### 讨论背景
- **问题提出**：打车和宇宙大爆炸看似毫无关联，但通过类比可以找到一些有趣的共同点。
- **秒杀与打车**：同样地，秒杀活动与高峰时段打车也有相似之处。

#### 共同点
- **打车与宇宙大爆炸**：从某种角度看，两者都涉及资源的分配与竞争。
- **秒杀与打车**：两者都需要处理高并发请求，并且都存在资源有限的情况。

#### 难点分析
- **秒杀难点**
  - 用户视角：网速慢、手速慢、库存少、关键时刻卡顿。
  - 商家视角：避免超卖、确保每一笔交易无误。
  - 工程师视角：保证系统不卡顿、不出错。
  - 产品视角：需求简单，实现复杂。

- **打车难点**
  - 乘客视角：提前叫车却需排队等待。
  - 出租车视角：提前蹲点等待乘客。
  - 平台视角：提高车辆利用率，减少空闲时间。

#### 诡异现象
- 来得早不如来得巧。
- 秒得早不如秒得巧。
- 司机漂洋过海来接你。
- 定位不准。
- 拼车上总是同性或“同路人”。

#### 解决方案
- **秒杀**：使用既锁又不锁的机制，如 advisory lock。
- **高峰打车**：利用 PostGIS 和阿里云 Ganos，结合 GiST 时空索引和 skip lock 技术，消除扫描浪费，就近找车，减少等待。

#### 总结
- **歌曲描述**：如果要用一首歌来描述秒杀和高峰打车的难点，那就是“没有MyBase PG解决不了的问题，如果有，就多买几台”。
- **关键技术**：advisory lock、GiST 时空索引、skip lock、随机位置漂移等。

#### 联系方式
- **GitHub**：[https://github.com/digoal](https://github.com/digoal)
- **钉钉群**：免费活动进行中，每周有直播和红包雨！

希望以上内容能帮助大家更好地理解打车与宇宙大爆炸之间的有趣联系，以及如何通过技术手段解决实际问题。