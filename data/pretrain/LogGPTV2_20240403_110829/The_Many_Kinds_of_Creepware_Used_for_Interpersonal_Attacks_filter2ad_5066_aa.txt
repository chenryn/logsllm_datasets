title:The Many Kinds of Creepware Used for Interpersonal Attacks
author:Kevin A. Roundy and
Paula Barmaimon Mendelberg and
Nicola Dell and
Damon McCoy and
Daniel Nissani and
Thomas Ristenpart and
Acar Tamersoy
2020 IEEE Symposium on Security and Privacy
The Many Kinds of Creepware Used for
Interpersonal Attacks
Kevin A. Roundy∗, Paula Barmaimon Mendelberg†, Nicola Dell†, Damon McCoy‡, Daniel Nissani†,
Thomas Ristenpart†, Acar Tamersoy∗
∗NortonLifeLock Research Group
†Cornell Tech
‡New York University
Abstract—Technology increasingly facilitates interpersonal at-
tacks such as stalking, abuse, and other forms of harassment.
While prior studies have examined the ecosystem of software
designed for stalking, there exists an unstudied, larger landscape
of apps—what we call creepware—used for interpersonal attacks.
In this paper, we initiate a study of creepware using access to
a dataset detailing the mobile apps installed on over 50 million
Android devices. We develop a new algorithm, CreepRank, that
uses the principle of guilt by association to help surface previously
unknown examples of creepware, which we then characterize
through a combination of quantitative and qualitative methods.
We discovered apps used for harassment, impersonation, fraud,
information theft, concealment, and even apps that purport to
defend victims against such threats. As a result of our work,
the Google Play Store has already removed hundreds of apps
for policy violations. More broadly, our ﬁndings and techniques
improve understanding of the creepware ecosystem, and will
inform future efforts that aim to mitigate interpersonal attacks.
I. INTRODUCTION
Technology is increasingly used as a vector for interper-
sonal attacks. One prominent example is in intimate partner
violence (IPV), where victims report abusers utilizing apps for
a range of harms, including text message “bombing” (sending
hundreds or thousands of messages), spooﬁng phone numbers
to hide the source of harassment, creating fake suggestive
images to hurt a victim’s reputation, and installing spyware
apps on victim devices [1]–[4]. Only the last category has
been studied: Chatterjee et al. [5] performed measurements
on ofﬁcial app stores and the web more broadly to discover
a large number of surveillance apps advertised to, and easily
used by, abusers. However, there has been no exploration of
the broader landscape of software enabling the many other
forms of harassment reported by victims.
This paper describes the ﬁrst measurement study aimed at
illuminating the broader ecosystem of what we call creepware:
apps whose primary use case is enabling non-expert users to
mount interpersonal attacks. Apps only sometimes used for
harassment (e.g., email or messaging apps) fall outside our
purview. We ﬁnd that the ecosystem surrounding creepware
also includes apps advertising the ability to defend against
interpersonal attacks, which we study in order to provide a
more holistic understanding of this problem space.
Unfortunately, the prior techniques [5] used to study spy-
ware are not helpful here. They rely on knowledge of spyware-
speciﬁc search terms, whereas a priori we do not know what
types of creepware apps people seek out. Instead, we turn to
the principle of guilt by association, which has previously been
used to discover new strains of conventional malware [6]–[8].
The key idea is that software that disproportionately appears
on the same device as known malware is, itself, likely to
be malicious. However, adapting such an approach to the
creepware context requires large amounts of data about app
installations and new algorithms.
We partnered with Norton, a major computer security ﬁrm,
to obtain anonymized data about billions of app installations
on 50 million Android devices over several years protected
by Norton Mobile Security.1 We couple this data with a
new algorithm, CreepRank, that, given a set of seed apps
known to be creepware, assigns scores to other apps. At its
core, CreepRank is a graph mining algorithm that computes
scores using maximum a posteriori estimation, which helps
suppress false positives among rare apps (a problem that
similar algorithms face in this context when not using a
skeptical prior, as we shall see). Intuitively, the higher the
CreepRank, the more the app is associated, via co-installation
data, with known creepware.
We applied CreepRank to the Norton dataset using as
seed set the overt spyware surveillance apps identiﬁed by
Chatterjee et al. [5]. The resulting ranking helped us discover
a wide variety of potential creepware apps. To make sense
of these results, we manually coded the 1,000 apps with
highest CreepRank. This involved iteratively developing a new
taxonomy of interpersonal attack and defense apps. Coders
used the app title, package name (app ID), description (when
available), and additional metadata, such as installation counts,
to label each app with a code from our taxonomy.
The ﬁndings from our manual coding analysis showed that
857 of CreepRank’s top 1,000 apps qualify as creepware,
fulﬁlling a clear purpose pertaining to interpersonal attack
or defense. Unsurprisingly, given the seed set, surveillance
apps were best represented in the rankings—372 of the top
1,000 apps—many of which were not
identiﬁed by prior
work. Among these are 107 multifaceted surveillance apps
that affected 172 K Norton customers in 2017 alone. Overall,
CreepRank identiﬁed more than a million installs of diverse
creepware apps, including apps that enable spooﬁng (114 apps,
see an example in Figure 1), harassment (80, including SMS
bombers), hacking tutorials (63), and many more. We also
1We received IRB approval for our study.
© 2020, Kevin A. Roundy. Under license to IEEE.
DOI 10.1109/SP40000.2020.00069
626
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:59 UTC from IEEE Xplore.  Restrictions apply. 
Their research discovered spyware apps by crawling forums
and app marketplaces for candidate apps, via search terms
typically used to ﬁnd spyware. They highlight the tricky issue
of dual-use apps, or apps that may have a legitimate purpose
but are often easily re-purposed for abuse.
While we also investigate (previously unknown) spyware
apps used in IPV, our focus is broader. We do not restrict
attention to IPV use cases, but instead consider interpersonal
attacks in general. We also want to understand apps beyond
spyware that enable harassment, SMS-bombing, spooﬁng (e.g.,
Figure 1), and more. Although prior qualitative work inter-
viewing victims of technology-enabled abuse [1]–[3] indicated
that abusers use some of these categories of apps, no research
has been done to measure or characterize them. We refer to this
broader class of apps as creepware, deﬁned for our purposes
as apps for which a predominant use case is enabling non-
technology-expert users to mount interpersonal attacks.
This explicitly leaves out of scope some classes of apps. We
do not consider apps which are not intended or predominantly
used for interpersonal attacks, such as popular email, text
messaging, and social media apps. While these are often
vectors for abuse, the vast majority of use is benign and
mitigation requires different approaches than for creepware.
We also do not consider some malicious apps that require
more expertise to obtain and use, such as remote access trojans
(RATs) and other malware used by governments or voyeurs,
which have been investigated in prior work [16]–[18].
Potentially unwanted programs (PUPs) [19], [20] are usually
commercially-motivated malware that exploit pay-per-install
services to add “bloatware” to a device for purposes of
ﬁnancial proﬁt. We did encounter examples of pay-per-install
apps [21] in our study, as discussed in Section VI. Prior
studies have also investigated more malicious types of malware
that directly steal user secrets (e.g., bank details) [22]–[27].
However, PUPs and such malware differ from creepware-type
interpersonal attack apps in that the formers’ authors seek to
have them distributed broadly and indiscriminately, rather than
being deliberately installed by one person to attack another.
Using app installation information. Our approach for dis-
covering creepware apps is based on the principle of guilt
by association (GBA): interpersonal attack and defense apps
are disproportionately installed on the same devices. By
disproportionately, we mean in relation to the likelihood that
these apps are co-installed with other kinds of apps. We were
inspired by Polonium [28] and other systems [6], [7] that use
the GBA principle to identify PC malware. By representing
software installation data as a graph of software ﬁles and
computers, Polonium initializes node weights, using domain
knowledge and an extensive set of ground-truth benign and
malicious software, and then applies the belief propagation
(BP) [29] algorithm. BP treats nodes as random variables
with at least two states (e.g., good and bad) and produces the
marginal probability distribution for each node in the graph
over these states. Unfortunately, BP requires labeled data,
making it ill-suited to our single state/class setting in which
Fig. 1: The Spoof Text Message app advertises with a video
whose opening lines are: “Don’t like your buddy’s girlfriend?
Well, break them up!” [13].
found apps that aim to defend against interpersonal attacks,
such as anti-surveillance apps and apps that deal with SMS
bombing. Moreover, even the 143 apps surfaced by CreepRank
that did not have a clear attack or defense purpose ﬁt into
interesting trends that yield insights into the inclinations of
creepware users. We further explore CreepRank’s utility by
seeding it with different sets of attack apps,
investigating
creepware trends over time, and more.
Our ﬁndings suggest that CreepRank is a valuable tool for
understanding the ecosystem of apps used for interpersonal
attack and defense. It is also practically useful. CreepRank-
identiﬁed apps now trigger warnings in Norton’s products
and are ﬂagged as potentially dangerous apps when scanning
phones of IPV survivors in the context of Cornell Tech’s
computer security clinic [9], [10]. We also reported 1,095
apps to Google via a responsible disclosure process, and they
removed 813 apps for violating the Google Play store’s terms
and conditions.
In summary, our contributions include the following:
• We introduce CreepRank, an algorithm that leverages the
principle of guilt by association to discover creepware.
We show that it measures creepware effectively: it iden-
tiﬁes 2.8x more creepware among its top 1,000 apps than
random walk with restart [11], [12], another well-known
graph-based algorithm. We use CreepRank to drive the
ﬁrst measurement study of the creepware ecosystem.
• Using manual coding of 1,000 CreepRank-identiﬁed
apps, we discover new classes of creepware and develop
a creepware taxonomy that should be broadly useful.
• We explore use of CreepRank with distinct seed sets,
study trends in creepware over time, and analyze types
of creepware commonly found together on devices.
II. BACKGROUND AND RELATED WORK
Apps used for interpersonal attacks. Our paper contributes
to a small but growing body of work that seeks to understand
the role of technology in interpersonal attacks, such as those
that arise in IPV [1]–[3], technology-facilitated bullying [14],
[15], and other forms of targeted harassment. In particular,
our work builds on research by Chatterjee et al. [5] that ﬁrst
highlighted the types of apps being used as spyware in IPV.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:59 UTC from IEEE Xplore.  Restrictions apply. 
627
only a few apps are known to be used for inter-personal attacks
(e.g., because they advertise as such), and for which there is
no obvious way to construct a representative set of benign
apps known to be unusable for such attacks.
Other algorithms may be more suitable for our task, such
as random walk with restart (RWR) [11], [12], which only
requires a small set of ground-truth labels for one class.
Although RWR is an exploratory method, we found it ill-
suited to our task because it assigns high scores to rare apps
that are installed alongside interpersonal attack apps due to
random chance. RWR lacks a way to add a skeptical prior
belief, i.e., to assume that apps are likely innocent until proven
guilty by numerous associations with “guilty” apps. Our need
to incorporate prior beliefs into an exploratory GBA algorithm
led us to design CreepRank, and proves to be its most
important characteristic, as discussed in Section VI. While the
techniques we develop for CreepRank may prove useful for
exploring other classes of apps, we have only investigated its
utility for discovering interpersonal attack and defense apps.
Finally, prior work has also explored what can be learned
from the apps installed on a device [30] or the set of apps
used at least once a month [31], including predicting a device
owner’s demographic information (e.g., gender). We explore
how the combination of creepware (and/or creepware defense)
apps installed on a device might point to user behaviors, such
as credit card fraud or interpersonal abuse (see Section VII-C).
III. DATASET DESCRIPTION AND PROPERTIES
We develop new data-driven approaches for discovering
apps used in interpersonal attack and defense that leverage
datasets consisting of anonymized Android app installations
recorded by NortonLifeLock’s Norton Mobile Security app.
For each device in our datasets, we have a list of  tuples reﬂecting the apps that were
installed on the device. The package name (Android app ID)
used to register apps in the Google Play store (if it has ever
been distributed there) is extracted from each APK ﬁle. For
apps exclusively distributed off-store, the app ID need not be
registered, and is therefore not necessarily a unique identiﬁer
for an app. As a result, it is likely that our methods are most
effective for discovering abusive on-store apps, though we
have found that ﬁxed package names are common for off-
store apps and that polymorphic package names are rare in
practice.
The relative time of each app installation is derived from
the time at which it was ﬁrst scanned by the Norton app. Thus,
the relative time generally has a value close to 0 for all apps
installed prior to Norton’s app and, for subsequently installed
apps, indicates time relative to the installation of the Norton
app. The dataset does not include information on if and when
apps were removed from a device.
We use two different datasets: (1) data gathered from
devices active in calendar year 2017 and (2) data gathered
over a year-long period from May 1, 2018 to May 1, 2019. We
refer to these as the 2017 and 2018/2019 datasets, respectively.
The 2017 dataset includes 27.7 million devices with 10.9
million unique package names that were installed around 4
billion times across the devices (not counting duplicate app
installations and app updates). The 2018/2019 dataset has 22.6
million devices with 7.5 million unique package names that
were installed 1.9 billion times. The datasets are not disjoint,
4.5 million devices appear in both datasets.
We also use a dataset of marketplace data provided by
Norton that was periodically scraped from the Google Play
store over a period of several years. While this dataset is
missing data from some apps, it provides good coverage of
apps that have been retired or forcibly removed from the app
store and its website. For each app, it includes its genre, title,
description, and permissions.
Our data also has limitations. The devices in the dataset
are not necessarily representative of typical users, as by
deﬁnition they have Norton’s security app installed and are
therefore security conscious. For example, many IPV victims
face ﬁnancial challenges [32] (Norton’s security app is not
free) and have limited awareness of digital security [1]. We do
investigate, within the limits of the data, when and (seemingly)
why the Norton app is used in relation to the types of
interpersonal attack apps found on a device (Section VII-D).
In addition, any dataset of this nature includes devices
that do not represent normal use. An example is devices
used by anti-virus (AV) testers and researchers, on which
many malicious apps will appear. To limit the impact of such
abnormalities, we removed from the dataset all devices on
which more than 1,000 apps were installed during the course
of one year, as these seem unlikely to represent real users’
devices. This removed about 18 thousand devices from the
2017 dataset and 9 thousand from the 2018/2019 dataset.
Finally, to make the dataset more manageable, we excluded
the top 1.1% most prevalent apps and then dropped devices
with only one app installation. These apps are likely benign
and are not interesting for our purposes, and would interfere
with the efﬁcacy of our algorithms. This reduced the number
of app installations in the 2017 data from 4 billion to 546
million, for 10.8 million apps on 25 million devices. App
installations in the 2018/2019 dataset dropped from 1.9 billion
to 205 million, for 7.4 million apps on 17 million devices.
IV. USING GUILT BY ASSOCIATION
FOR APP DISCOVERY
We are interested in apps useful for interpersonal attack
and defense. These include apps that are used by one person
to monitor, harass, or otherwise harm another person (attack),
apps used to prevent such attacks (defense), and apps that are
useful for both attack and defense. The ﬁrst category is what
we refer to as creepware. This paper will surface classes of
interpersonal attack and defense apps that were completely
new to the authors (and, we suspect, many others). We will
see many examples in subsequent sections.
Our hypothesis for discovering such apps is based on the
principle of guilt by association (GBA), which infers that apps
that tend to be installed on devices infected by malicious apps
tend to be malicious themselves. For an initial assessment of
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:03:59 UTC from IEEE Xplore.  Restrictions apply. 
628
Device 1
Device 2
Track a Phone by Number
Find My Friends
Live Mobile Location Tracker
SMS from PC / Tablet... Sync
HelloSpy
GirlFriend Cell Tracker
System Services (aka mSpy)
Hidden Auto Call Recorder
Family Locator - GPS Tracking
SMS Forwarder
Table I: Surveillance apps co-installed with a known covert
surveillance app (shown in italics), ordered by install time.
the viability of the GBA hypothesis, we searched for apps that
use the keywords “spy” or “track” in their title or package
name on the 35,811 devices infected by one or more of
18 off-store intimate partner surveillance apps identiﬁed by
Chatterjee et al. [5]. We found many devices with multiple
surveillance-style apps installed. The titles of surveillance apps
installed on two representative devices are shown in Table I.
This gave us hope that GBA would be useful more broadly.
The GBA hypothesis has two main beneﬁts for identifying
and measuring creepware. First, guilt spreads naturally from
one class of abusive app to another even when they are very
different, spreading even to defensive apps that counter abuse.
Second, GBA necessarily identiﬁes apps that are actually
installed by abusers and/or victims in practice, as it is based