### A Separate Group

In some instances, we are unable to identify the actual publisher behind a lockstep, particularly when the downloader is an archive extractor like WinZip. These cases are categorized under the "unknown group." Table II details the distribution of these locksteps.

While we can label some locksteps in this manner, most involve downloaders that are challenging to categorize due to mixed rep-pubs.

### Second Labeling Step Based on Payloads

To address this, we perform a second labeling step based on the payloads distributed by the locksteps. We differentiate between malware and potentially unwanted programs (PUPs) using the method described in Section III-B. This labeling process consists of two steps:

1. **Downloader Labeling:**
   - **Malware Downloader (MD):** A downloader is labeled as an MD if it distributes at least one malware.
   - **PUP Downloader (PD):** A downloader is labeled as a PD if it distributes PUP payloads but no malware.
   - **Benign Downloader (BD):** A downloader is labeled as a BD if it downloads only benign payloads.
   - **Unknown Downloader (UD):** All other downloaders are labeled as UDs.

2. **Lockstep Labeling:**
   - **Malware Downloader Lockstep (MDL):** A lockstep is labeled as an MDL if it includes at least one MD.
   - **PUP Downloader Lockstep (PDL):** A lockstep is labeled as a PDL if it contains PDs but no MDs.
   - **Benign Downloader Lockstep (BDL):** A lockstep is labeled as a BDL if it contains at least one BD and no suspicious (MD, PD) downloaders.
   - **Unknown Downloader Lockstep (UDL):** All other locksteps are labeled as UDLs.

### Results of Labeling

Table III presents the results of the labeling process. For both lockstep types (typedlr:dom and typedom:dlr), MDLs account for more than 80% of the total number of locksteps, while BDLs represent 4.82% and 2.48%, respectively. The higher success rate in labeling with payloads, compared to labeling with downloaders alone, reflects the community's focus on detecting and labeling malware rather than understanding the client-side distribution infrastructure.

### Identifying Campaigns

As discussed in Section II, we separate campaigns within the lockstep by \( n\delta t \). By setting \( n = 3 \), we identify 1,292,141/71,424/27,145/6,233 campaigns corresponding to MDL/PDL/BDL/UDL. On average, there are 12.2/4.9/5.7/3.6 campaigns per lockstep for MDL/PDL/BDL, respectively.

### Relationships Among Representative Publishers

The locksteps help us determine business relationships between rep-pubs and payloads and among groups of rep-pubs. We focus on pay-per-install (PPI) and PUP providers, which distribute other executables intentionally. We collect PUPs and PPIs from the top 10 rep-pubs with a high percentage of MDLs within their locksteps. Each of these rep-pubs conducted at least 40 campaigns. Known PPI providers such as Amonetize Ltd., Conduit Ltd., and OutBrowse LTD are also included.

We investigate which publishers frequently appear together in locksteps with these 13 rep-pubs. Since the downloaders signed by these publishers simultaneously utilize the same server-side infrastructure, this likely reflects a relationship among the corresponding distribution networks. If one downloader was downloaded by another in the lockstep, it suggests a closer business connection, termed a "partner" relationship. For example, Outbrowse Ltd. frequently delivers downloaders from Somoto Ltd., indicating a stable business relationship. Other frequent partners of Somoto Ltd. include Mindad media Ltd., IronInstall, betwlkx, and Multiply ROI.

Cases where we cannot establish a "downloaded-by" relationship may indicate an organization using multiple code signing certificates to evade attribution or relationships with a common third party, termed a "neighbor" relationship. Figure 5 illustrates some of these business relationships, with nodes representing publishers and edges indicating the type and frequency of the relationship.

### Community Detection

To further analyze this ecosystem, we apply a community detection algorithm [7] to the graph in Figure 5(a), identifying 7 communities. Within each community, we determine the rep-pub with the highest betweenness centrality, which measures the number of shortest paths passing through the rep-pub. This helps identify key nodes that act as bridges between other nodes in the community.

- **Community #1: OutBrowse:** Represents advertisers or affiliates of the Outbrowse PPI. PUPs Multiply ROI and Mindad media Ltd. frequently appear in lockstep with the rep-pub.
- **Community #2: Somoto:** Belongs to Somoto, a PPI provider. This community includes 12 other publishers, with International News Network Limited, a known PUP distributor, showing a close relationship.
- **Community #3: raonmedia:** Includes 22 publishers, with three PUP publishers (raonmedia, Pacifics Co., and CIDA) showing high centrality.
- **Community #4: Sendori:** The largest community with 77 publishers, centered around the PUP Sendori.
- **Community #5: Amonetize:** Represents Amonetize Ltd. and several PUPs, including Shetef Solutions & Consulting (1998) Ltd.
- **Communities #6 & #7:** Small communities including the InstallX PPI and the Wajam PUP.

### Malware and PUP Delivery Ecosystems

Downloaders appearing in locksteps with different labels provide insights into the overlap of different software distribution ecosystems. 36.7% of the downloaders (3,345 out of 9,103) are present in both MDLs and PDLs. These downloaders are associated with 7,635 and 6,886 of typedlr:dom and typedom:dlr PDLs, accounting for 97.8% and 99.8% of all PDLs. 100 of these downloaders dropped payloads known to be malicious, while others downloaded files in lockstep with malware droppers. The PUP publishers distributed 13 trojan families, including vundo, pasta, symmi, crone, pahador, pecompact, scar, dapato, renum, jorik, fareit, llac, and kazy, as well as generic trojans, viruses, botnets, and fake antivirus software.

### Comparison with Malsign Blacklist

Comparing our lockstep publishers to the Malsign blacklist of certificates used to sign PUP and malware payloads [23], we identify 1,926 downloaders signed by 212 publishers, involved in 70,984 and 5,468 of MDLs and PDLs, respectively. This suggests that many publishers thought to belong to the PUP category are also involved in malware delivery. Given that 83% of our payloads were never submitted to VirusTotal, the number of MDLs is likely higher.

These findings contradict recent studies [22], [38], which did not find substantial overlap between malware and PUP delivery ecosystems. The key distinction is that these studies analyzed direct download relationships, while lockstep detection allows us to identify indirect relationships through neighbor links, overcoming evasive strategies such as certificate polymorphism or using unsigned downloaders for malicious payloads.

### Properties of MDLs

We identify a total of 54,497 and 51,831 locksteps of typedlr:dom and typedom:dlr, respectively, that download at least one malware. These MDLs come from 246 and 169 rep-pubs. In addition to PPI and PUP delivery vectors, malware is sometimes distributed through compromised software updates. For example, a campaign involving KMP Media Co., a legitimate media player, distributed the trojan dofoil. The version of the media player involved in the MDL is 3.6.0.87, known to have a stack overflow vulnerability exploited in the wild. Additionally, a Hewlett-Packard software updater delivered the hexzone ransomware.

Several features distinguish MDLs from other locksteps:
- **FP Tree Level:** The median FP tree level where locksteps reside is 5, indicating the region of the FP tree where we are most likely to find evidence of malware distribution.
- **Number of Nodes:** MDLs tend to have a large number of nodes, with around 90% of PDLs having fewer than 25 nodes and over 90% of BDLs having fewer than 75 nodes.
- **Domain Churn:** MDLs show aggressive domain churn, with more than 7 domains per day.
- **Downloader Repacking:** On average, a new downloader appears every 5.8/16.7/11.8 days for MDLs/PDLs/BDLs, respectively, with MDLs showing aggressive downloader repacking.