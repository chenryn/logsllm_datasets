    # nmstatectl show enp1s0 > ~/network-config.yml
    ```
    这个命令以 YAML 格式存储 `enp1s0`{.literal} 的配置。要将输出以 JSON
    格式存储，请将 `--json`{.literal} 选项传递给该命令。
    如果您没有指定接口名称，`nmstatectl`{.literal}
    会导出所有接口的配置。
2.  使用文本编辑器修改 `~/network-config.yml`{.literal} 文件以更新配置。
3.  应用 `~/network-config.yml`{.literal} 文件中的设置：
    ``` literallayout
    # nmstatectl set ~/network-config.yml
    ```
    如果您以 JSON 格式导出设置，请将 `--json`{.literal}
    选项传递给该命令。
:::
:::
::: section
::: titlepage
# []{#assembly_introduction-to-nmstate_configuring-and-managing-networking.html#additional_resources}其它资源 {.title}
:::
::: itemizedlist
-   有关库和上游文档的链接（如 API 文档）的详情，请查看
    `/usr/share/doc/nmstate/README.md`{.literal} 文件。
-   有关 YAML 格式的不同配置示例，请查看
    `/usr/share/doc/nmstate/examples/`{.literal} 目录。
:::
:::
:::
[]{#configuring-an-ethernet-connection_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-an-ethernet-connection_configuring-and-managing-networking}第 8 章 配置以太网连接 {.title}
:::
这部分论述了如何使用静态和动态 IP 地址配置以太网连接的不同方法。
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-nmcli_configuring-an-ethernet-connection}使用 nmcli 配置静态以太网连接 {.title}
:::
这个步骤描述了使用 `nmcli`{.literal}
实用程序在以下设置中添加以太网连接：
::: itemizedlist
-   静态 IPv4 地址 - `192.0.2.1`{.literal}，子网掩码为 `/24`{.literal}
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal}，子网掩码为
    `/64`{.literal}
-   IPv4 默认网关 - `192.0.2.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `192.0.2.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
:::
::: orderedlist
**流程**
1.  为以太网连接添加新的 NetworkManager 连接配置集：
    ``` literallayout
    # nmcli connection add con-name Example-Connection ifname enp7s0 type ethernet
    ```
    额外步骤修改您创建的 `Example-Connection`{.literal} 连接配置集。
2.  设置 IPv4 地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.addresses 192.0.2.1/24
    ```
3.  设置 IPv6 地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv6.addresses 2001:db8:1::1/64
    ```
4.  将 IPv4 和 IPv6 连接方法设置为 `manual`{.literal}:
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.method manual
    # nmcli connection modify Example-Connection ipv6.method manual
    ```
5.  设置 IPv4 和 IPv6 默认网关：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.gateway 192.0.2.254
    # nmcli connection modify Example-Connection ipv6.gateway 2001:db8:1::fffe
    ```
6.  设置 IPv4 和 IPv6 DNS 服务器地址：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.dns "192.0.2.200"
    # nmcli connection modify Example-Connection ipv6.dns "2001:db8:1::ffbb"
    ```
    要设置多个 DNS 服务器，以空格分隔并用引号括起来。
7.  为 IPv4 和 IPv6 连接设置 DNS 搜索域：
    ``` literallayout
    # nmcli connection modify Example-Connection ipv4.dns-search example.com
    # nmcli connection modify Example-Connection ipv6.dns-search example.com
    ```
8.  激活连接配置集：
    ``` literallayout
    # nmcli connection up Example-Connection
    Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/13)
    ```
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp7s0      ethernet  connected  Example-Connection
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show Example-Connection
    connection.id:              Example-Connection
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp7s0
    ...
    ```
3.  使用 `ping`{.literal}
    实用程序验证这个主机是否可以向其他主机发送数据包。
    ::: itemizedlist
    -   查找同一子网中的 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 192.0.2.3
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:2::1
        ```
        如果命令失败，请验证 IP 和子网的设置。
    -   在远程子网中查找 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 198.162.3.1
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:2::1
        ```
        ::: itemizedlist
        -   如果命令失败，则使用 ping 默认网关来验证设置。
            对于 IPv4：
            ``` literallayout
            # ping 192.0.2.254
            ```
            对于 IPv6：
            ``` literallayout
            # ping 2001:db8:1::fffe
            ```
        :::
    :::
4.  使用 `host`{.literal} 实用程序验证名称解析是否正常工作。例如：
    ``` literallayout
    # host client.example.com
    ```
    如果命令返回任何错误，如 `connection timed out`{.literal} 或
    `no servers could be reached`{.literal}，请验证您的 DNS 设置。
:::
::: orderedlist
**故障排除步骤**
1.  如果连接失败，或者网络接口在上线和关闭状态间切换：
    ::: itemizedlist
    -   确保网络电缆插入到主机和交换机。
    -   检查连接失败是否只存在于这个主机上，或者其他连接到该服务器连接的同一交换机的主机中。
    -   验证网络电缆和网络接口是否如预期工作。执行硬件诊断步骤并替换有缺陷的电缆和网络接口卡。
    -   如果磁盘中的配置与设备中的配置不匹配，则启动或重启
        NetworkManager
        会创建一个代表该设备的配置的内存连接。有关详情以及如何避免这个问题，请参阅
        [NetworkManager
        服务重启后复制连接](https://access.redhat.com/solutions/3068421){.link}
    :::
:::
::: itemizedlist
**其它资源**
-   `nm-settings(5)`{.literal}、`nmcli`{.literal} 和
    `nmcli(1)`{.literal} man page
-   [配置 NetworkManager
    以避免使用特定配置集提供默认网关](#managing-the-default-gateway-setting_configuring-and-managing-networking.html#proc_configuring-networkmanager-to-avoid-using-a-specific-profile-to-provide-a-default-gateway_managing-the-default-gateway-setting "配置 NetworkManager 以避免使用特定配置集提供默认网关"){.link}
:::
:::
::: section
::: titlepage
# []{#configuring-an-ethernet-connection_configuring-and-managing-networking.html#configuring-a-static-ethernet-connection-using-the-nmcli-interactive-editor_configuring-an-ethernet-connection}使用 nmcli 互动编辑器配置静态以太网连接 {.title}
:::
这个步骤描述了使用 `nmcli`{.literal}
互动模式在以下设置中添加以太网连接：
::: itemizedlist
-   静态 IPv4 地址 - `192.0.2.1`{.literal}，子网掩码为 `/24`{.literal}
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal}，子网掩码为
    `/64`{.literal}
-   IPv4 默认网关 - `192.0.2.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `192.0.2.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
:::
::: orderedlist
**流程**
1.  要为以太网连接添加新的 NetworkManager
    连接配置集并启动互动模式，请输入：
    ``` literallayout
    # nmcli connection edit type ethernet con-name Example-Connection
    ```
2.  设置网络接口：
    ``` literallayout
    nmcli> set connection.interface-name enp7s0
    ```
3.  设置 IPv4 地址：
    ``` literallayout
    nmcli> set ipv4.addresses 192.0.2.1/24
    ```
4.  设置 IPv6 地址：
    ``` literallayout
    nmcli> set ipv6.addresses 2001:db8:1::1/64
    ```
5.  将 IPv4 和 IPv6 连接方法设置为 `manual`{.literal}:
    ``` literallayout
    nmcli> set ipv4.method manual
    nmcli> set ipv6.method manual
    ```
6.  设置 IPv4 和 IPv6 默认网关：
    ``` literallayout
    nmcli> set ipv4.gateway 192.0.2.254
    nmcli> set ipv6.gateway 2001:db8:1::fffe
    ```
7.  设置 IPv4 和 IPv6 DNS 服务器地址：
    ``` literallayout
    nmcli> set ipv4.dns 192.0.2.200
    nmcli> set ipv6.dns 2001:db8:1::ffbb
    ```
    要设置多个 DNS 服务器，以空格分隔并用引号括起来。
8.  为 IPv4 和 IPv6 连接设置 DNS 搜索域：
    ``` literallayout
    nmcli> set ipv4.dns-search example.com
    nmcli> set ipv6.dns-search example.com
    ```
9.  保存并激活连接：
    ``` literallayout
    nmcli> save persistent
    Saving the connection with 'autoconnect=yes'. That might result in an immediate activation of the connection.
    Do you still want to save? (yes/no) [yes] yes
    ```
10. 保留为互动模式：
    ``` literallayout
    nmcli> quit
    ```
:::
::: orderedlist
**验证步骤**
1.  显示设备和连接的状态：
    ``` literallayout
    # nmcli device status
    DEVICE      TYPE      STATE      CONNECTION
    enp7s0      ethernet  connected  Example-Connection
    ```
2.  显示连接配置集的所有设置：
    ``` literallayout
    # nmcli connection show Example-Connection
    connection.id:              Example-Connection
    connection.uuid:            b6cdfa1c-e4ad-46e5-af8b-a75f06b79f76
    connection.stable-id:       --
    connection.type:            802-3-ethernet
    connection.interface-name:  enp7s0
    ...
    ```
3.  使用 `ping`{.literal}
    实用程序验证这个主机是否可以向其他主机发送数据包。
    ::: itemizedlist
    -   查找同一子网中的 IP 地址。
        对于 IPv4：
        ``` literallayout
        # ping 192.0.2.3
        ```
        对于 IPv6：
        ``` literallayout
        # ping 2001:db8:2::1
        ```
        如果命令失败，请验证 IP 和子网的设置。