# Code and Patch Analysis

## Transaction Handling
### Original Code
```c
if (all_data_received)
{
    ExecuteTransaction(transaction);
}
else
{
    // send interim response
}
```

### EternalChampion Patch
#### `SrvSmbTransaction` / `SrvSmbNtTransaction`
```c
if (all_data_received)
{
    transaction->Executing = TRUE;
    ExecuteTransaction(transaction);
}
else
{
    // send interim response
}
```

### `SrvFindTransaction` Function
```c
PTRANSACTION SrvFindTransaction(
    IN PCONNECTION Connection,
    IN PSMB_HEADER SmbHeader,
    IN USHORT Fid OPTIONAL
) {
    if (SmbHeader->Command == SMB_COM_WRITE_ANDX)
        OtherInfo = Fid;
    else
        OtherInfo = SmbHeader->Mid;

    // Search TransactionList by UID/TID/PID/OtherInfo
}
```

### `SrvSmbWriteAndX` Function
```c
SrvSmbWriteAndX(PWORK_CONTEXT WorkContext) {
    transaction = SrvFindTransaction(connection, header, fid);
    if (writeMode & SMB_WMODE_WRITE_RAW_NAMED_PIPE) {
        RtlCopyMemory(transaction->InData, ...);
        transaction->InData += writeLength;
        transaction->DataCount += writeLength;
    }
}
```

## Vulnerability Analysis
### Type Confusion Sequence
- **Type Confusion Sequence**
- **Pointer Shift Sequence**

### Information Leak
- **Bug #1 - TRANS_PEEK_NMPIPE**
  - Expects `MaxParameterCount=16`
  - But takes client value
  - `MaxParameterCount` to fill minimum space
  - `MaxDataCount=1`

- **Bug #2 - DataCount > MaxDataCount**
  - Put more than one data in the pipe
  - Peek

### Paged Pool Grooming Methods
1. **Fish-in-a-Barrel**
   - "Remote API" (MS-RAP)
   - Fish/Dynamite
   - Removed in Windows 7+
     - SMAP?
     - Privilege escalation?

2. **Matched Pairs**
   - "Lattice"
   - Brides/Grooms â†’ Romance?

3. **Classic**
   - "Sandwich"
   - Frag/Padding

- Each method: 3 exploit attempts

### Write-What-Where Primitive
1. **Exploit Transaction (PID=X)**
   - Set `VictimTrans->InData` to `&WHERE`
   - Set `VictimTrans->Executing` to `FALSE`
   - Increase reference count
   - etc...

2. **VictimTrans Secondary (MID=0)**
   - Trans Data Block = `WHAT[]`

### Read-Where Primitive
1. **Exploit Transaction (PID=X)**
   - Modify `VictimTrans` to point at `LeakTrans`
   - Address inferred by its contents
   - `VictimTrans` now modifies `LeakTrans`

2. **VictimTrans Trans_Secondary (MID=0)**
   - `LeakTrans->OutData = &WHERE`
   - `LeakTrans->Setup = TRANS_PEEK_NMPIPE`
   - `LeakTrans->MaxDataCount = size_t`

3. **LeakTrans Trans_Secondary**
   - Echos back `LeakTrans->OutData`

### Quest for RWX NonPagedPool
1. **Exploit Transaction**
   - Set `VictimTrans->OutParameters = NULL`

2. **Send Secondary Victim Transaction**
   - If `VictimTrans->OutParameters == NULL`, set `VictimTrans->OutParameters = WorkContext->ResponseBuffer`

3. **Read Primitive**
   - Read address just set

4. **Write Primitive**
   - Send shellcode

### Quest to Execute the Shellcode
1. **Locate Transaction2DispatchTable**
   - Find in `srv.sys` .data section (read primitive)

2. **Hook a Trans2 subcommand**
   - Replace a pointer in the table (write primitive)

3. **Fake Trans2 executes the hook**
   - Subcommand = hooked index
   - Similar methodology as DOUBLEPULSAR

### Locate Transaction2DispatchTable
1. **Read in `LeakTrans->CONNECTION`**
2. **`CONNECTION->EndpointSpinLock`**
   - Inside PE .data section
3. **Read backwards, `SrvSmbWordCount`**
   - Illegal commands = -2 (0xfe)
   - If we see a bunch of `fefe`, we're close
4. **`Transaction2DispatchTable`**
   - Function pointers #0x14 == #0x15
   - `SrvTransactionNotImplemented`

### EternalRomance Info Leak Patch #1
#### Before
```c
if (subCommand == TRANS_PEEK_NMPIPE) {
    maxParameterCount = MAX(16, maxParameterCount);
}
SrvAllocateTransaction(&Transaction, ...);
Transaction->MaxParameterCount = maxParameterCount;
```

#### After
```c
if (subCommand == TRANS_PEEK_NMPIPE) {
    maxParameterCount = 16;
}
SrvAllocateTransaction(&Transaction, ...);
Transaction->MaxParameterCount = maxParameterCount;
```

### MS17-010 Scanners
- **Max TRANSACTION allocation size=0x10400**
  - `0xC0000205 - STATUS_INSUFF_SERVER_RESOURCES`
- **Send `MaxParameterCount + MaxDataCount > 0x10400`**
  - Patch fixes `MaxParameterCount` to 16
  - Passes allocation routine
  - Different NT error (e.g., invalid FID)

### EternalRomance Info Leak Patch #2
#### New Code
```c
if (transaction->DataCount > transaction->MaxDataCount)
    transaction->DataCount = transaction->MaxDataCount;
if (transaction->ParameterCount > transaction->MaxParameterCount)
    transaction->ParameterCount = transaction->MaxParameterCount;
```

### EternalRomance RCE Patch #1
#### Before
```c
RtlCopyMemory(transaction->InData, ...);
transaction->InData += writeLength;
transaction->DataCount += writeLength;
```

#### After
```c
RtlCopyMemory(transaction->InData + transaction->DataCount, ...);
transaction->InData += writeLength;
transaction->DataCount += writeLength;
```

### EternalRomance RCE Patch #2
1. **New Code in `SrvSmbNtTransaction/SrvSmbTransaction`**
   ```c
   SrvAllocateTransaction(&Transaction, ...)
   Transaction->SecondaryCommand = SMB_COM_NT_TRANS_SECONDARY; 
   SrvInsertTransaction(&Transaction);
   ```

2. **New Code in `SrvFindTransaction`**
   ```c
   if (FoundTrans->SecondaryCommand != NewSmb->Command)
       return NULL;
   ```

### EternalSynergy
- **Same buffer overflow, read/writes as EternalRomance**
  - Matched pairs
  - "Classic"
- **Same info leak as EternalChampion**
  - NT_Rename Race Condition
  - `TRANS_PEEK_NAMED_PIPE` is fixed
- **`srv.sys` uses NonPagedPoolNx for Work Items**
  - Needs DEP bypass

### Quest for RWX Memory (via remote read)
- **Given: Connection**
- **Obtain: ProcessListEntry.Blink**
  - `nt!KiProcessListHead*`
- **Search backwards by page size for 'MZ'**
  - `ntoskrnl.exe` PE header

### Additional Research
- @sleepya_
  - [GitHub](https://github.com/worawit/MS17-010)
- @n_joly
  - [Slide Files](https://hitcon.org/2017/CMT/slide-files/d2_s2_r0.pdf)
- @jennamagius and @zerosum0x0
  - [EternalBlue Exploit Analysis](https://keybase.pub/jennamagius/EternalBlue_RiskSense-Exploit-Analysis-and-Port-to-Microsoft-Windows-10.pdf)
- @msftsecresponse
  - [Eternal Champion Exploit Analysis](https://blogs.technet.microsoft.com/srd/2017/06/29/eternal-champion-exploit-analysis/)
  - [Eternal Synergy Exploit Analysis](https://blogs.technet.microsoft.com/srd/2017/07/13/eternal-synergy-exploit-analysis/)
- @swithak
  - [SH20TAATSB18](https://swithak.github.io/SH20TAATSB18/Home/)
- @francisckrs
  - [Danderspritz Exploit Analysis](https://speakerdeck.com/francisck/danderspritz-how-the-equation-groups-2013-tools-still-pwn-in-2017)
- @msuiche
  - [The Shadow Brokers Cyber Fear Game Changers](https://www.comae.io/reports/us-17-Suiche-TheShadowBrokers-Cyber-Fear-Game-Changers.pdf)

Thanks!
- zerosum0x0