                break;
              }
              v13 = 0;
              v23 = -1;
              while ( 1 )
              {
                v18 = stok(0, " \t\r\n", v27);
                if ( !v18 )
                  break;
                v21 = stok(v18, "=", &v28);
                if ( smatch(v21, "name") )
                {
                  v13 = v28;
                }
                else if ( smatch(v21, "abilities") )
                {
                  sub_42609C(&v23, v28, 0);
                }
              }
              if ( !websAddRole(v13, v23) )
              {
                v9 = -1;
                break;
              }
            }
          }
        }
    ...
    }
webslisten()函数负责开启80和443端口，利用socket通信，接受客户端发来的请求
    int __cdecl main(int argc, const char **argv, const char **envp)
    {
    ...
      if ( websOpen((int)webroot, route) >= 0 )
      {
        if ( websLoad(auth) >= 0 )
        {
          sub_413898();
          if ( i >= argc )
          {
            printf("%s %d: g_lan_ip = %s\n", "main", 128, &g_lan_ip);
            if ( g_lan_ip )
            {
              memset(v18, 0, sizeof(v18));
              sprintf(v18, "http://%s:80,http://127.0.0.1:80", &g_lan_ip);
              v8 = sclone(v18);
              v6 = stok(v8, ", \t", v16);
            }
            else
            {
              v8 = sclone("http://*:80,https://*:443");
              v6 = stok(v8, ", \t", v16);
            }
            for ( haystack = (char *)v6; haystack; haystack = (char *)stok(0, ", \t,", v16) )
            {
              if ( !strstr(haystack, "https") && websListen(haystack) script command选项，
代码如下
    from idaapi import *
    from idc import *
    f=open("kallsyms")
    lines = f.readlines()
    for line in lines:
        l = line.split(" ")
        offset = l[0]
        name = l[2]
        name = name.split("\t") 
        name = name[0][:-1]
        print(name)
        offset = int(offset,16)
        if get_func_name(offset):
            set_name(offset,name)
符号表恢复如图所示，现在可以正常地进行代码阅读
12.通过搜索squashfs寻找squashfs文件系统相关函数，发现squash_xz_uncompress函数，并在其中找到关键函数xz_dec_run，即Linux内核内解压缩文件的函数，
xz_dec_run函数为linux内核函数，通过之前得到内核版本架构为MIPS
Linux-3.3.8，通过搜索找到linux源码，通过与源码对比，发现用对比的文件头magic的值由'\xfd7zXZ'修改为了品牌字符串
    static enum xz_ret dec_stream_header(struct xz_dec *s)
    {
        if (!memeq(s->temp.buf, HEADER_MAGIC, HEADER_MAGIC_SIZE))  //HEADER_MAGIC = '\xfd7zXZ'
            return XZ_FORMAT_ERROR;
        if (xz_crc32(s->temp.buf + HEADER_MAGIC_SIZE, 2, 0)
                != get_le32(s->temp.buf + HEADER_MAGIC_SIZE + 2))
            return XZ_DATA_ERROR;
    ...
    }
同时固件中存在大量品牌字样，