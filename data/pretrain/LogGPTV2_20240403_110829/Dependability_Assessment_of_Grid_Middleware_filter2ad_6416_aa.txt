# Dependability Assessment of Grid Middleware

**Authors:**  
Nik Looker and Jie Xu  
School of Computing  
University of Leeds, UK  
{nlooker, jxu}@comp.leeds.ac.uk

## Abstract
This paper introduces Grid-Fault Injection Technology (Grid-FIT), a dependability assessment method and tool for evaluating the reliability of Grid services through fault injection. Grid-FIT is an evolution of our earlier fault injector, WS-FIT, which was designed for Java Web Services using Apache Axis transport. Grid-FIT employs a novel fault injection mechanism that provides control similar to Code Insertion fault injection but with less invasiveness. We use Grid-FIT to systematically assess the dependability of Apache Axis 1.2 as used in the Globus Toolkit 4. Our findings from case studies on data integrity and vulnerability to integrity attacks are presented.

## 1. Introduction
The Globus Toolkit [1] is a leading Grid technology used in large-scale scientific applications. Its dependability is crucial for fostering trust and expanding its application domains. The Apache Axis SOAP stack, a key component of the Globus Toolkit 4, plays a significant role in message transport. Therefore, assessing the dependability of this component is essential for the overall reliability of the toolkit.

Fault Injection [3] is a well-established method for evaluating system dependability, particularly in distributed systems. Recent research has shown promising results in applying network-level fault injection to service-based systems. Our previous work with WS-FIT [5] demonstrated the value of Network Level Fault Injection for traditional Web Services. In this paper, we apply our FIT framework to Globus Grid middleware using a new implementation, Grid-FIT, to obtain dependability assessment data. We conclude by showing that Grid-FIT can be effectively used to assess and enhance the dependability of Globus Grid systems.

**Keywords:** Fault Injection, Dependability Assessment, Globus, Grid

## 2. Grid Middleware
Globus Toolkit [1] is an open-source software toolkit for building Grid systems. A significant part of the Globus Toolkit is based on Web Services, utilizing Apache Axis for the transport layer.

A Web Service is a service defined by several standards, enabling interoperable data exchange and processing between heterogeneous machines and architectures. For the purposes of this paper, Web Services are described using Web Service Definition Language (WSDL) [7] and implemented with SOAP and the Remote Procedure Call (RPC) model. Web Services are commonly used as the "building blocks" of systems, making their dependability assessment widely applicable, not only to Web Services but also to Globus Grid services, which use the same technology.

Both WSDL and SOAP use eXtensible Markup Language (XML) [8] to define and implement Web Service message exchanges. XML is a standard for document markup, providing a self-describing and portable document layout. Although XML is flexible and can represent various data types, most programs constrain this flexibility using Document Type Definitions (DTDs) and XML schemas. These definitions allow the structure and syntax of XML documents to be validated, ensuring that they follow the rules defined in DTDs and schemas.

Web Services present a defined interface to utilizing applications, constructed using WSDL, an XML-based Interface Definition Language. This defines the Web Service interfaces and how to access them [7]. Our research focuses on RPC message exchanges, where WSDL provides explicit information on the structure of message exchanges between Web Services and their clients.

Communication between a utilizing application and a Web Service is typically achieved using SOAP, an XML-based messaging protocol designed for exchanging messages over a network. While our work primarily concerns the RPC mechanism over SOAP, many concepts also apply to document-oriented communication patterns using SOAP.

## 3. Grid-FIT
Fault Injection Technology (FIT) is our network-level fault injector framework designed for middleware systems [5]. FIT includes a Fault Injection Engine (FIE) that can handle different middleware message formats, including both text and binary. Grid-FIT is a specific adaptation of the FIT framework for use with Globus Toolkit 4. A similar adaptation was used to create the WS-FIT tool. Grid-FIT is implemented as a plug-in for Eclipse, a platform-independent framework for developing applications (see Figure 1).

The major innovation of Grid-FIT is its novel fault injection mechanism, which allows network-level fault injection to simulate Code Insertion fault injection without the need for modifications to the service source code [6]. This is achieved by intercepting middleware messages within the protocol stack, decoding the messages in real-time, and injecting appropriate faults. By decoding the middleware messages and allowing targeted fault injection, it is possible to perform parameter perturbation similar to that achieved by Code Insertion at the API level. This can also be used to perturb SOAP element attributes to assess middleware protocols.

### Standard Network-Level Fault Injection
Standard network-level fault injection operates by performing operations on network packets at the physical network interface. Since the fault injection occurs at the network interface, modifications to these packets often result in random data corruption at the middleware level. Even reordering or dropping packets may only lead to data stream corruption, as a middleware-level message can span multiple network packets. Additionally, reordered or dropped packets may be subject to error correction, such as retransmission, so injected faults may not reach the middleware layer. Packets corrupted at this level may also be rejected by the network protocol stack via mechanisms like checksums. Thus, it is challenging to target specific elements of a middleware message with certainty. Consequently, network-level fault injection has traditionally been used for assessing network protocol stacks rather than service-based systems.

### FIT Method of Network-Level Fault Injection
The FIT method of network-level fault injection shifts the fault injection point from the network interface to the actual middleware transport layer (see Figure 2). By intercepting complete middleware messages, it is possible to corrupt, reorder, and drop entire messages, rather than just parts of network packets that may be discarded before reaching the middleware layer. Messages can be modified and then passed on to the rest of the protocol stack, ensuring that faults are not filtered out by the protocol stack.

If messages are intercepted before signing or encryption (or after decryption and signature verification for incoming messages), individual elements can be corrupted within a message without it being rejected by the middleware as tampered. By combining data corruption with the rules and metadata used to construct messages for the specific middleware, it is possible to produce meaningful perturbations, such as RPC input parameters. This allows our network-level fault injection method to simulate API-level fault injection.

### System Model
The rules and metadata used to define the interface of a service are contained within the WSDL definition for that service. This information can be interpreted to decompose the service interface into method calls with their associated messages and, within the messages, identify specific parameters. The FIT method leverages this information to inject faults in a controlled and meaningful manner.

![Figure 1: The Eclipse-Based Grid-FIT Tool](figure1.png)
![Figure 2: Grid-FIT Injection Points](figure2.png)
![Figure 3: System Model](figure3.png)

---

This optimized version of the text aims to improve clarity, coherence, and professionalism. It organizes the content more logically and ensures that each section flows smoothly into the next.