title:Dependability Assessment of Grid Middleware
author:Nik Looker and
Jie Xu
Dependability Assessment of Grid Middleware 
Nik Looker and Jie Xu 
School of Computing 
University of Leeds,UK 
{nlooker, jxu}@comp.leeds.ac.uk 
Abstract 
assessing  the  dependability  of  service  based  systems 
and  middleware  [5]  and  forms  the  basis  of  our  FIT 
method. 
tool 
 Grid – Fault Injection Technology (Grid-FIT) is a 
dependability  assessment  method  and 
for 
assessing Grid  services by fault injection. Grid-FIT is 
derived  from  our  earlier  fault  injector  WS-FIT  [5] 
which  was  targeted  towards  Java  Web  Services 
implemented  using  Apache  Axis  transport.  Grid-FIT 
utilises  a  novel  fault  injection  mechanism  that  allows 
network level fault injection to be used to give a level 
of  control  similar  to  Code  Insertion  fault  injection 
whilst being less invasive [6]. 
This paper uses the Grid-FIT tool to systematically 
carry  out  a  dependability  assessment  of  Apache  Axis 
1.2  as  used  in  the  Globus  Toolkit  4.  We  present  our 
findings  on  case  studies  conducted  to  determine  the 
integrity  of  data  exchanged  during  service  calls  and 
their vulnerability to integrity attacks. 
2. Grid Middleware 
Globus  Toolkit  [1]  is  an  open  source  software 
toolkit used for building Grid systems. A large part of 
Globus  Toolkit  is  constructed  around  Web  Services 
utilizing Apache Axis as the transport. 
A Web Service is a service defined by a number of 
standards that can be used to provide interoperable data 
exchange  and  processing  between  heterogeneous 
machines  and  architectures.  For  the  purposes  of  this 
paper, Web Services will be defined as being described 
by Web Service Definition Language (WSDL) [7] and 
implemented  using  SOAP  and  the  Remote  Procedure 
Call  (RPC)  model.  Web  Services  are  commonly  used 
to  provide  the  ‘building  blocks’  of  systems  so  any 
dependability  assessment  that  targets  them  will  be  of 
wide use, not only to Web Services but also to Globus 
Grid services, which utilize the same technology. 
Both WSDL and SOAP utilize eXtensible Markup 
Language  (XML)  [8]  to  define  and  implement  Web 
Service  message  exchanges.  XML  is  a  standard  for 
document markup. It provides a document layout that 
allows  a  document  to  be  self-describing  and  portable, 
(FIT) 
framework  and 
Dependability is a key factor in any software system 
due  to  the  potential  costs  in  both  time  and  money  a 
failure  may  cause.  Given  the  complexity  of  Grid 
applications that rely on dependable Grid middleware, 
tools for the assessment of Grid middleware are highly 
desirable. Our past research, based around our  Fault 
its 
Injection  Technology 
implementation,  WS-FIT,  has  demonstrated 
that 
Network Level Fault Injection can be a valuable tool in 
assessing 
traditional  Web 
Services. Here we apply our FIT framework to Globus 
Grid  middleware 
new 
implementation  of  the  FIT  framework,  to  obtain 
middleware  dependability  assessment  data.  We 
conclude  by  demonstrating  that  Grid-FIT  can  be 
applied to Globus Grid systems to assess dependability 
as  part  of  a  fault  removal  mechanism  and  thus  allow 
middleware dependability to be increased. 
Keywords: Fault Injection, Dependability Assessment, 
the  dependability  of 
using  Grid-FIT, 
our 
Globus, Grid. 
1. Introduction 
The  Globus  Toolkit  [1]  is  the  front  running  Grid 
technology  currently  in  use  for  large-scale  scientific 
Grid applications. As such it requires close scrutiny in 
terms of its dependability [2] to foster trust and speed 
its introduction into other application domains. Globus 
Toolkit  4  is  constructed  from  a  number  of  base 
components and key to these is the Apache Axis SOAP 
stack  which  forms  one  of  the  message  transports 
available,  so  dependability  assessment  of  this  would 
contribute  greatly  to  the  overall  dependability  of  the 
toolkit. 
Fault  Injection  [3]  is  a  well-proven  method  for 
assessing  the  dependability  of  a  system  and  has  been 
used extensively in the domain of distributed systems, 
for example Marsden et al [4]. Recently there has been 
interest in applying fault injection to services. Network 
level  fault  injection  has  provided  promising  results  in 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:38:26 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007allowing  data  transfer  between  dissimilar  systems.  Its 
portability  is  largely  due  to  it  being  an  ASCII  format 
document,  with  numeric  values  encoded  as  strings. 
Since  it  is  portable  it  largely  eliminates  the  need  for 
marshalling  and  unmarshaling  of  data,  but  any 
reduction in overhead is more that offset by the need to 
construct  XML  documents  and  parse  them  at  the 
receiving  machine,  which 
introduces  a  greater 
overhead. 
XML  is  flexible  and  can  be  used  to  represent  a 
large variety of data but most programs constrain this 
flexability.  A  Document  Type  Definition  (DTD) 
defines  which  elements  are  permissible  and 
the 
circumstances  in  which  these  elements  can  be  used 
under. This allows the basic structure and syntax of an 
XML document to be defined and validated. An XML 
schema can be used to describe complex restrictions on 
a  document,  such  as  type  information,  and  complex 
data types. It is possible to validate an XML document 
to  see  if  it  follows  the  rules  defined  in  DTDs  and 
schemas.  SOAP uses a collection of schemas to define 
a  standard  set  of  types  that  can  be  used  as  well  as 
defining the message structure, etc. 
interface 
(IDL)  used 
Web  Services  present  a  defined 
to 
utilizing applications and this is constructed by the use 
of WSDL. This is an XML-based Interface Definition 
Language 
to  define  Web  Services 
interfaces and how to access them [7]. Our research is 
mainly  concerned  with  RPC  message  exchanges  and 
WSDL 
to  providing  explicit 
information  on  the  structure  of  message  exchanges 
between Web Services and their clients. 
lends 
itself  well 
Communication between a utilizing application and 
a Web Service is usually achieved using SOAP, which 
is a messaging protocol designed to allow the exchange 
of messages over a network. It is XML-based to allow 
the  exchange  of  messages  between  heterogeneous 
machines. 
Although this work is primarily concerned with the 
RPC  mechanism  over  SOAP,  most  of  the  concepts 
apply to document oriented patterns of communication 
using SOAP as well. 
3. Grid-FIT 
Fault  Injection  Technology  (FIT)  is  our  network 
level  fault  injector  framework  designed  to  work  with 
middleware systems [5]. FIT contains a Fault Injection 
Engine  (FIE)  that  is  implemented  so  that  different 
middleware message formats can be handled, including 
both text and binary. Grid-FIT is a specific tailoring of 
the  FIT  framework  to  work  with  Globus  Toolkit  4. 
A similar  tailoring  was  used  to  produce  the  WS-FIT 
tool. Grid-FIT is implemented as a plug-in for Eclipse, 
which  is  a  platform  independent  framework  for 
developing applications (see Figure 1). 
the  need 
circumventing 
The major innovation of Grid-FIT is the novel fault 
injection  mechanism  that  allows  network  level  fault 
injection  to  be  used  to  simulate  Code  Insertion  fault 
injection  whilst 
for 
modifications  to  the  service  source  code  [6].  This  is 
accomplished  by  intercepting  middleware  messages 
within  the  protocol  stack,  decoding  the  middleware 
message  in  real-time  and  injecting  appropriate  faults. 
By  decoding  the  middleware  message  and  allowing 
this  level  of  targeted  fault  injection,  it  is  possible  to 
perform parameter perturbation similar to that achieved 
by Code Insertion at the API level, and this can also be 
used  to  perturb  SOAP  element  attributes  in  order  to 
assess middleware protocols. 
Figure 1: The Eclipse Based Grid-FIT Tool 
Standard  network  level  fault  injection  works  by 
performing  operations  on  network  packets  at  the 
physical network interface. Since the fault injection is 
done  at  the  network  interface,  modifications  to  these 
packets  tend  to  only  be  reflected  at  the  middleware 
level  as  random  corruption  of  data;  even  reordering 
and dropping of packets may only result in corruption 
of  a  data  stream,  since  a  middleware  level  message 
may  span  more  than  one  physical  network  packet. 
Further  more,  reordered  or  dropped  packets  may  be 
subject  to  error  correction  such  as  retransmission  so 
faults  injected  may  not  reach  the  middleware  layer. 
Finally, packets corrupted at this level may be rejected 
by  the  network  protocol  stack,  for  instance  via 
mechanisms  such  as  checksums.  It  is  thus  hard  to 
target  a  particular  element  of  a  middleware  message 
with any great certainty. Therefore network level fault 
injection has traditionally been used only for assessing 
network protocol stacks, not service based systems. 
The  FIT  method  of  network  level  fault  injection 
takes the basic concept given above but moves the fault 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 20,2021 at 05:38:26 UTC from IEEE Xplore.  Restrictions apply. 
37th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN'07)0-7695-2855-4/07 $20.00  © 2007injection  point  away  from  the  network  interface  and 
positions  it  in  the  actual  middleware  transport  layer 
(see  Figure  2).  Since  middleware  messages  are  then 
intercepted  as  complete  entities,  it  is  possible  to 
corrupt,  reorder  and  drop  complete  messages,  rather 
than  just  part  of  a  network  packet  that  may  be 
discarded  before  it  reaches  the  middleware  layer. 
Messages can thus be modified and then passed on to 
the rest of the protocol stack. In this way faults can be 
injected but not filtered out by the protocol stack. 
Figure 2: Grid-FIT Injection Points 
in 
the  case  of 
Further, if the messages are intercepted before they 
are signed or encrypted (or after they are decrypted and 
the  signature  checked 
incoming 
messages), individual elements can be corrupted within 
a message without that message being rejected by the 
middleware  as  having  been  tampered  with.  Since  we 
can assume we are familiar with the rules and metadata 
used to construct messages for the specific middleware 
we are using, by combining the corruption of data in a 
message with these rules and metadata, it is possible to 
produce  meaningful  perturbations  of  such  things  as 
RPC input parameters, so we can use our network level 
fault  injection  method  to  simulate  API  level  fault 
injection. 
Figure 3: System Model 
The rules and metadata used to define the interface 
of a service are contained within the WSDL definition 
for  that  service.  This  information  can  be  interpret  to 
decompose the service interface into method calls with 
their  associated  messages  and,  within  the  messages, 
identify 
specific  parameters.  The  FIT  method 