Kaby Lake
2017
—
在表11-2中，LP代表低功耗设计（Low Power），这些GPU是针对
平板电脑和手机等超移动（ultra mobile）设备而定制的，集成在英特尔
的SoC产品中。早期SoC产品基于Imagination公司的PowerVR GPU设
计，后来的产品大多数基于自己的Gen GPU进行裁剪定制。
11.1.6 第三轮努力
2017年，曾在AMD负责GPU业务的高管加入英特尔，领军高端图
形部门——Core and Visual Computing Group（CVCG）。CVCG的目标
是研发计算能力超过500 TFLOPS的独立GPU。时隔Larabee项目大约十
年后，英特尔开始新一轮向高端GPU领域的冲击。
11.1.7 公开文档
很长一段时间里，英特尔GPU的技术文档是很敏感的保密信息，不
对外公开，其中一些底层文档，即使是公司内部员工也要申请才能访
问。但从2008年开始，英特尔开始公开GPU的底层文档，而且公开的力
度越来越大，不但文档内容的覆盖面越来越广，而且针对的GPU产品也
越来越新。公开的主要窗口是英特尔的开源技术中心网站，公开的文档
统称为《程序员参考手册》（Programmer’s Reference Manuals，
PRM）[4]。
PRM涵盖了从G965（Gen4）开始到Kaby Lake（Gen9.5）的大多数
GEN架构GPU，既有普通的桌面版本，也有低功耗版本。
虽然这些手册是内部文档的裁剪版本，但是其篇幅仍然很大。刚开
始接触，可能不知从何读起。为了帮助读者阅读，下面简要介绍PRM文
档的组织结构。
首先，从Gen4到Gen7的文档都分为4卷。卷1为全局介绍，名为图
形基础（Graphics Core），主要内容为GEN GPU的基本结构、寄存器、
编程环境等；卷2名为3D和媒体（3D/Media），介绍3D流水线以及与视
频编解码有关的功能；卷3名为显示寄存器（Display Registers），介绍
传统的显示功能；卷4名为通用计算子系统和核心（Subsystem and
Cores），篇幅很大，包含了通用执行单元的诸多细节。
从HASWELL（Gen7.5）开始的PRM卷数大大增加，以Sky Lake为
例，它一共分为16卷。卷1为序言；卷2为命令参考（Command
Reference），分5个部分介绍GPU命令、寄存器和数据结构；卷3为GPU
概览；卷4为不同产品的资源配备情况；卷5为内存视图（Memory
Views）；卷6介绍命令流处理器（Command Streamer）的编程接口；卷
7的篇幅非常大（900多页），涵盖3D、视频编解码和GPGPU三大主
题，侧重介绍通用执行单元，与老的卷4内容相似；卷8介绍视频解码流
水线的用法；卷9介绍编码流水线的用法；卷10介绍HEVC编码器的用
法；卷11介绍图块传输（Bit Block Image Transfer）引擎和2D图像处
理；卷12显示（Display）方面的内容；卷13为MMIO；卷14为可观察
性，介绍性能监视机制；卷15介绍标量和格式转换器（Scalar and
Format Converter，SFC）；卷16介绍绕过已知设计缺陷的方法。
11.2 GEN微架构
从1999年发布的i810开始，GEN架构的GPU已经发展了近20年。因
为与英特尔芯片组和CPU集成，所以GEN GPU的累计发布数量极其巨
大，是PC市场中发布数量最多的GPU。
 老雷评点 
移动市场中，有ARM之Mali抢得此位，下一章探讨相关内
容。
在这么长的发展过程中，GEN架构经历了十余代的演进，从与芯片
组集成发展到与CPU集成，所支持的功能也在不断增加。但是它一直保
持着很多特色，本节以Sky Lake所包含的Gen9为例简要介绍GEN架构的
基本特征。
首先声明，本节使用的插图都来自英特尔公开的文档，除了上一节
提到的PRM外，主要还有2015年8月公布的技术白皮书《英特尔第9代处
理器图形单元的计算架构》（The Compute Architecture of Intel Processor
Graphics Gen9）[3]。该白皮书的部分内容曾在2015年3月的Windows硬
件工程大会（WinHEC）上以专题演讲的形式公开过[5]，由英特尔VPG
部门的一位首席工程师主讲。
 老雷评点 
台下听者寥寥，与Nvidia会场的座无虚席形成鲜明对比，令
当时在台下听讲的老雷心中五味杂陈。
11.2.1 总体架构
与AMD的APU架构类似，Gen9 GPU和CPU内核处在同一块芯片
中，如图11-3所示。
图11-3 Sky Lake处理器（酷睿i7 6700K）的内部结构[3]
图11-3与图11-2描述的是同一款芯片，前者是内部的逻辑结构，后
者是实际的芯片照片。在图11-3中，GPU、CPU两类执行引擎以环形互
联（ring interconnect）的方式与内存控制器和外部总线（PCIe）连接在
一起。图中画了两个内存控制器，一个是普通的内存控制器，用于访问
普通内存（DDR），也就是系统的主内存，另一个用于访问高速的
EDRAM，是专门给GPU用的，相当于独立显卡的显存。EDRAM与CPU
和GPU芯片是封装在一个芯片（外壳）中的，但不是一个晶片（die）
中。EDRAM是可选的（optional）功能，只在以Iris为商标的高端产品
中才有。对于Sky Lake，EDRAM的容量有64MB和128MB两种。
为了使设计模块化，灵活满足不同的用户需求，Gen GPU内以片区
（slice）和子片（subslice）为单位来组织计算资源，与Nvidia GPU的
SM和块区（block）类似。简单来说，在Gen9中，每8个EU组成一个子
片，每3个子片组成一个片区，如图11-4所示。
图11-4中，最左侧的部分是不分片的，包含全局的命令流处理器
（command streamer）、全局线程分发器（thread dispatcher）和多个固
定功能（Fixed Function，FF）单元。固定功能单元分别用于媒体
（media）处理和2D/3D应用（几何流水线）。相对于可以灵活配置的分
片部分，该部分是相对固定的，称为“不可分片区”（unslice）。这个名
字与CPU中的Uncore类似，Uncore是相对于“核”（Core）而言的，用于
支持Core。为了沟通方便，通常把包含一个片区的GEN GPU简称为
GT2。把因生产瑕疵或者为低功耗设计而裁剪，资源数小于一个片区的
产品叫GT1。把有两个的产品叫GT3或者GT3e，把3个片区的产品叫
GT4e，其中带有e的型号表示配有eDRAM，是更高端的配置。Gen9最
多支持包含3个片区，有72个EU。
举例来说，作者写作本书时使用的DELL笔记本电脑，配备的是
Kaby Lake的CPU（i5 7200U），其中包含的GPU是GT2，商标为HD
620，内部配备了一个片区，共有24个EU。
在专门用于服务器市场的可视计算加速器（Visual Compute
Accelerator，VCA）产品中，配备的都是高端的GEN GPU。比如，在
VCA 1585LMV（MV为Monte Vista的缩写，是产品代号）中，在一块以
PCIe形式设计的卡上，部署了3块至强E3 1585L CPU。其中，每块CPU
内包含一个Iris Pro P580型号的GPU，每个GPU都是高端的GT4e配置，
有72个EU和128MB专用显存（eDRAM）。这意味着，整块卡的EU总数
多达216个。[6]
图11-4 分片设计
11.2.2 片区布局
图11-5画出了Gen9 GPU中每个片区的布局。中间主体部分是三个
子片，余下部分为三个子片共享的资源，即图11-4中所称的片区公共部
分（Slice Common）。
图11-5 Gen9 GPU中每个片区的布局
图11-5下方特别画出了第3级数据缓存（L3 data cache）。其容量为
768KB，可以缓存普通的数据，也可以用作共享内存，也就是在算核函
数中定义的具有共享属性（shared）的变量。
11.2.3 子片布局
在GEN GPU中，比片区更小的下一级组织单位叫子片
（subslice）。一个片区可以包含一个或多个子片。对于大多数的Gen9
GPU，每个片区包含3个子片，也就是图11-5所示的情况。
图11-6展示了Gen9 GPU中每个子片的结构，中间的主体部分是8个
EU，稍后会详细介绍。8个EU上面是本地线程分发器和指令缓存。每个
EU可以同时执行7个线程，一个子片中有8个EU，因此一个子片最多可
以同时执行56个线程。本地线程分发器负责把需要执行的线程分发到合
适的EU和流水线。
图11-6 Gen9 GPU中每个子片的布局
图11-6下方，画出了子片中的另外两个共享设施，左边是采样器
（sampler），右边是数据端口（Data Port）。二者都是用来访问内存
的，但是采样器专门用来访问只读的数据，因此它不需要考虑数据变化
带来的数据同步问题。为了提高访问速度，其内部配备了专用的高速缓
存，分L1和L2两级组织。此外，采样器还支持数据解压缩和格式转
换，可以从不同格式的纹理（texture）和平面（surface）结构中获取数
据。数据端口用于读写各种类型的通用数据缓冲区，以及所属片区上的
共享内存。
每个子片包含的EU数量是个很重要的设计决定。在Gen7.5中，每
个子片包含10个EU，Gen8和Gen9中降为8个。不过需要说明的是，这里
说的是设计数量，因为生产过程中的某些问题，有些EU可能因为存在
瑕疵而被禁用，所以实际产品中，每个子片中的EU数量可能是小于设
计数量的。比如，在称为GT1.5F的Gen9 GPU中，每个子片的8个EU中
有两个被禁用，也就是使用熔断（fuse）技术排除掉，余下的EU还有
3×6 = 18个。
11.2.4 EU
下面介绍Gen9 GPU中最重要的基础构件——EU。EU是现代GPU的
灵魂和主角，是产生算力并为用户创造价值的核心部分。与其相比，很
多公共设施都是为这个主角提供支持的。夸张一点说，上面费了不少笔
墨，却全是铺垫，现在终于到了主角出场的时候。
那么，EU到底是什么样的呢？与Nvidia的CUDA核和AMD的CU相
比，它有哪些根本不同呢？要理解这些问题，需要先了解EU的基本结
构，如图11-7所示。
图11-7 Gen9 GPU的EU
如何理解图 11-7 呢？首先，中间主体部分是寄存器文件，分为7行
2列。7行代表7个线程，每个线程有自己的寄存器。两列代表寄存器的
两种类型，第一列代表128个256位的通用寄存器，第二列代表架构寄存
器。
解释一下图11-7中的标签，其中，SIMD8代表以8通道方式执行
SIMD（单指令的数据）指令，每一通道的数据宽度为32位。8个通道刚
好是32×8 = 256位。每个线程有128个寄存器，再乘以7个线程，那么每
个EU中的所有通用寄存器大小加起来就是28KB。在芯片设计时，寄存
器空间是统一组织的，好像是一个文件。所以第1列称为通用寄存器文
件（GRF）。第二列寄存器是ARF，意思是架构寄存器文件，其中，寄
存器代表GEN架构的特征，是架构基因的一部分。架构寄存器是专门用
于某一用途的，比如cr0为控制寄存器，sr0为状态寄存器，ip为程序指
针寄存器等，这将在11.8节专门介绍。
继续解说图11-7，寄存器的左边是取指单元，用于读取指令。寄存
器右侧先是线程仲裁器，然后是4个功能单元（function unit）。
简单来说，4个功能单元就是4个执行指令的“车间”。其中两个用于
执行各种算术指令，名叫SIMD FPU。这里的SIMD代表支持以单指令多
数据方式执行各种计算操作，名副其实。但名字中的FPU是不准确的，
因为这一对功能单元既支持浮点数，也支持整数。
下面介绍另外两个功能单元。其中一个叫发送（Send）单元，用于
执行内存访问指令、采样操作以及延迟较大的并且与其他部件通信的指
令。另一个叫分支（Branch）单元，用于执行各种分支（divergence）
和聚合（convergence）操作。
因为寄存器部分支持7个线程，而功能单元只有4个，所以线程仲裁
器负责从7个线程中选取处于就绪（ready）状态的线程，然后把它的指
令发射到4个功能单元之一。理想情况下，有4个线程在并行执行各自的
指令。在图11-7中，寄存器和线程仲裁器之间的4个箭头代表从7个线程
中选取4个并执行。
讲到这里，熟悉英特尔CPU微架构的读者可能觉得EU的线程结构
和英特尔CPU的超线程技术类似。在超线程技术中，每个线程的执行状
态（寄存器）是独立的，但是执行资源是共享的，每个核心中有两个超
线程，共享一套执行资源。在EU中，7个线程共享4个执行功能单元。
了解了EU的基本结构后，再做些补充和思考。首先，每个EU中的
线程数量在不同版本的设计中可能不同，在G965（Gen4）中，每个EU
包含4个线程。
其次，EU与CUDA核心如何比较呢？这是个敏感而且容易引起争议
的问题。从寄存器资源角度比较，每个EU有28KB的通用寄存器文件，
每个线程4KB，这刚好与V100 GPU的每个CUDA核心（FP32）的寄存
器文件大小相同。参见本书表9-2，在特斯拉V100中，每个SM有32个
CUDA核心，共用256KB寄存器文件，平均每个CUDA核心的寄存器文
件也是4KB。从支持的逻辑线程上来看，每个EU支持7个独立的线程。
每个CUDA核心支持一个独立的线程（一套执行状态和寄存器）。因
此，从上面两个角度来看，EU的每个线程和CUDA核心大体相当。
说到这里，读者可能觉得，Nvidia很会商业宣传，对外高调宣传
GPU中的CUDA核心的数量，常常数百上千。相对而言，英特尔对外宣
传的是EU数量，通常都是两位数。对普通用户来说，根本不知道1个EU
中有多少个线程，只是简单用数字比较。对于这个问题，不知道英特尔
的产品经理们是如何想的。
 老雷评点 
曲笔，故意取不相干人背锅，指桑骂槐。
11.2.5 经典架构图
按从大到小的顺序，上文简要介绍了GEN GPU的微架构，从总体
结构深入到EU的内部。作为总结，这里再返回总体结构。图11-8是来自
G965 PRM卷1的插图。虽然十几年过去了，GEN架构已经有了很大的发
展，但是这幅架构图的绝大部分对于目前的GEN GPU还是适用的，所