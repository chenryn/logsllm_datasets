As per Goodword's question, the `keras.utils.Sequence` class seems to iterate
forever instead of stopping after a full epoch. To duplicate, run the
following snippet.
    class InfiniteGenerator(object):
        def __init__(self, alist):
            self.alist = alist
        def __getitem__(self, idx):
            return self.alist[idx]
        def __len__(self):
            return len(self.alist)
        def __iter__(self):
            for item in (self[i] for i in range(len(self))):
                yield item
    from keras.utils import Sequence
    class KGen(Sequence):
        def __init__(self, alist):
            self.alist = alist
        def __getitem__(self, idx):
            return self.alist[idx]
        def __len__(self):
            return len(self.alist)
    if __name__ ==  '__main__':
        ig = InfiniteGenerator(list(range(4)))
        for item in ig:
            print(item)
        print('now trying second iterator')
        import time
        time.sleep(1)
        kg = KGen(list(range(4)))
        for item in kg:
            print(item)
The output will be as follows:
    0
    1
    2
    3
    now trying second iterator
    0
    1
    2
    3
    0
    1
    2
    3
    0
    1
    2
    3
    and so on ...
Tested on
  * Ubuntu 18.04
  * Keras 2.2.4
  * Tensorflow 1.11.0