back_log=500
ax_heap_table_size=64M
ad_buffer_size=512K
ort_buffer_size=512K
ey_buffer_size=64M
ad_rnd_buffer_size=512k
ole_definition_cache=4096
ole_cache=3096
le_open_cache=6144
x_allowed_packet=128M
=row
=1
1000
L
第5章性能调优·209
---
## Page 224
210·第二部分故障诊断与性能优化篇
open-files-limit=28192
[mysqld_safe]
interactive-timeout
[mysqlhotcopy]
write_buffer=2M
read_buffer=2M
key_buffer_size=64M
[myisamchk]
no-auto-rehash
[mysql]
myisam_max_sort_file_size=10G
max_allowed_packet=128M
quick
[mysqldump]
transaction_isolation=READ-COMMITTED
nno
nno
nno
innodb_data_file_path=ibdata1:2G:autoextend
innodb_log_group_home_dir=/mysqlLog/logs
nnodb_data_home_dir=/mysqlData/data
#########IN+DB#############
二
品
nnd
nn
nno
nodb_purge_batch_size=32
no
db_purge_threads=1
db_file_format=Barracuda
db_io_capacity=2000
db_read_io_threads=16
odb_flush_method=O_DIRECT
bin_trust_function_creators=1
odb_concurrency_tickets=1000
db_file_io_threads =4
db_thread_concurrency=0
db_support_xa=1
db_sync_spin_loops=40
odb_lock_wait_timeout=10
odb_flush_log_at_trx_commit=2
odb_log_files_in_group=3
db_log_buffer_size=64M
db_log_file_size=1024M
db_additional_mem_pool_size=16M
odb_buffer_pool_size=50G
---
## Page 225
有使用好，会适得其反，下面我们看一个例子。
5.6.6
考虑到数据量的增长，很多开发人员在设计表阶段会试图使用分区表功能，但如果没
重新建立主键以后，
失败的原因是这个字段必须是主键。
想一想，如果对‘date’字段进行分区，
图5-108给出的是一个表结构。
其中具体参数含义请参考第1章。
谨慎使用分区表功能
ar
ITION
tion
Juery
PARTITION
UAL
values
LUES
sq1 showcreatetablep10:
OK
，顺利创建成功（如图5-110和图5-111所示）。
B
PRI
LESS
Less
ess
TII
ins
HARY
Duplicates:
rows
THAN
than
than
mysql> show create table p1G;
KEY
lateti
a1u
row
`date
('2011-
0.01
ected
LESS
in
图5-111
UES
LUES
sec)
int(11)
Table:
Table:
图5-110重建主键
图5-109报错信息
2-8-813:
date`
图5-108表结构
ESS
THAN
(0.
05
NOT
RSE
HAN
分区后表结构
sec)
，则不会成功，如图5-109所示。
rou
-latin1
sec)
NULI
1-
01
date)
-01'
第5章性能调优·211
---
## Page 226
212·第二部分故障诊断与性能优化篇
直接写name=zhaoqi'，能行吗？来看看图5-114。
图5-113中，2009年使用的分区是p0，2010年使用的分区是p1，那么如果去掉'date'字段，
所示。
:. bouz,aueu aou d og a 3atasotaed uredxa tbs
1 row in set (0.01 sec)
1 row in set (0.00 sec)
id|select_type|table|partitions|type|possible_keys|key
row inset (0.08 sec)
id|select_type|table|partitions|type |possible_keys|key
musql>explain partitions select *fron p1 where (date′betueei *2009-1-1’and *2889-12-31')and nane =zhangsan';
1|SIMPLE
SIHPLE
注意，在使用分区时，where后面的字段必须是分区字段，这样才能使用到分区，在
1SIHPLE
现在要增加一个字段name并建立索引，然后插入几条记录测试，如图5-112和图5-113
1p1
1p1
table
1p0,p1,p2,p3|ref1Ix_name
partitions
5rowsinset（o.01sec)
mysql> select * fron p1;
msernt2-5-1s);
id|date
N
图5-114未使用到分区
图5-113已使用到分区
1Ix_nane
图5-112插人数据
88
1Ix_nane|12
name
Ix_nane
1key_len|ref|rows|Extra
12
key_lenIref
keylen
1const1
1const
|rous|Extra
2|Using where;Using index
1Using where;using index
---
## Page 227
方较为重要：
5.7
继MySQL5.5实现半同步复制后，MySQL5.6又对其进行了优化与改进，其中有两个地
对于事物ID，查看binlog，会看到如图5-115～图5-118所示的内容。
口GTID：全局事务标识符。使用这个功能时，
server_uuid：服务器身份ID。在第一次启动MySQL时，会自动生成一个server
口第一点对运维人员来说应该是一件大喜事，主从切换后，在传统的方式里，需要找
所以说SQL语句一定要带着分区的字段，否则会在所有的分区里全部扫描一遍。
这里扫描了全部的分区，分区在这里没有一点意义，反而拖累了性能。
下面是auto.cnf文件内容：
在MySQL5.6里，会涉及一些新名词，下面针对这些新名词进行解释：
口
server-uuid=b0869d03-d4a9-11e1-a2ee-000c290a6b8f
[root@mysql5_6data]#catauto.cnf
usr/local/mysql/data
[root@mysql5_6data]#pwd
MySQL5.6同步复制新特性详解
第三次为3，依次类推。
唯一的标示符，它由UUID 和事务ID组成。首次提交的事务ID为1，第二次为2,
GTID有密切联系。
uuid并写人到数据目录下auto.cnf文件里，官方不建议修改。并且 server_uuid跟
里，这时就可以做到多线程复制，但一个库里的表，多线程复制是无效的。
执行，在MySQL5.6里，可以做到多个库之间的多线程复制，例如，在yourDB库
说，往往会找错，造成主从同步复制报错，在MySQL5.6里，无须再找binlog和
到binlog和POS点，然后change master to指向，对于不是很有经验的运维人员来
多线程复制基于库。在之前的版本里，同步复制是单线程的、队列的，只能一个个
的，MySQL会通过内部机制GTID自动找点同步。
POS点，你只需要知道master的IP、端口，账号密码即可，因为同步复制是自动
里
，存放着用户表、商品表、价格表、订单表，那么将每个业务表单独放在一个库
a50276
图5-115GTID:1
图5-116GTID:2
：每次事务提交都会在binlog里生成一个
5-10
GTID
0AF
第5章性能调优213
---
## Page 228
214
：·第二部分故障诊断与性能优化篇
同步来获取GTID。
并写人到它自己的binlog里。
个GTID，并设置 gtid_next 的值。例如：
master to master_auto_position=1即可，它会自动找点同步。
4）由于 gtid_next 的值不是空的，slave 不会尝试去生成一个新的 gtid，而是通过主从
那么，如何设置GTID方式的主从同步呢？
3）slave检查并确认这个GTID 没有被使用，如果没有被使用，那么开始执行这个事务
2）binlog日志发送到 slave，slave接收完并写人relay log 中继日志里，slave读取到这
GTID的工作流程是这样的：
开启 GTID 时，slave做同步复制的时候，无须找到binlog 日志和 POS点，直接change
mysql>CHANGE masterTO
之后做指向即可，如下所示：
在 slave上导人：
然后，在master上导出：
答：在master 和 slave上，需要同时在my.cnf文件中加入如下内容：
然后告诉 slave接下来的事务必须使用GTID，并写人到它自己的binlog里。
mysqldump-uroot-p123456-q--single-transaction-R-E--triggers
SET@@SESSION.GTID_NEXT='B0869D03-D4A9-11E1-A2EE-000C290A6B8F:3';
1）在master上一个事务提交，
>master_HOST=master-host,
-default-character-set=utf8-ByourDB>./yourDB.sql
注：MySQL5.6.10以后，disable-gtid-unsafe-statements参数
disable-gtid-unsafe-statements=ON
gtid-mode=ON
log_slave_updates
binlog_format=row
log-bin=mysql-bin
10
IONG1
，并写人binlog里。
图5-118 GTID:4
图5-117GTID:3
，
---
## Page 229
注意
mysq1>
口不支持CREATETEMPORARYTABLE、DROPTEMPORARYTABLE临时表操作（如
口如果把disable_gtid_unsafe_statements 参数关闭，启动mysql时会报错，也就是说开
如果使用了GTID，那么就不能再使用传统binlog和POS方式。
口对CREATETABLE..SELECT语句不支持。因为该语句会被拆分成create table和
口GTID同步复制是基于事务的。所以 MyISAM表不支持，这可能导致多个GTID 分
GTID的局限性：
否则会报错，如图5-119所示。
传统change master to模式如下：
>master_AUTO_POSITION=1;
>master_USER=repl-user,
>master_PORT=master-port,
配给同一个事务。
CHANGEMASTERTO
启 GTID时，disable_gtid_unsafe_statements 参数必须开启（如图5-121所示）。
MASTER_CONNECT_RETRY=10;
MASTER_LOG_POS=4,
MASTER_LOG_FILE='master2-bin.001',
MASTER_PASSWORD='bigs3cret'
MASTER_USER='replication',
MASTER_HOST='master2.mycompany.com',
MASTER_PORT=3306,
master_PASsSWORD=repl-password,
库忽略掉（如图5-120所示）。
insert两个事务，并且如果这两个事务被分配了同一个GTID，将会导致insert被备
table
15：
图5-121未开启 disable_gtid_unsafe_statements 参数报错信息
CREATE TABLE
t2
ters MASTER LOG FILE, MASTER LOG POS, RELAY_LOC FILE and RELAY LOG_ POS cannot
图5-120不支持CREATETABLE...SELECT语句
select
图5-119不支持传统changemasterto模式
*fromt1
SELECT is forbidden when DISABLE_GTID_UNSAFE_STATEMENTS=
第5章
性能调优215
---
## Page 230
216·，第二部分故障诊断与性能优化篇
--mysql-socket=/tmp/mysql.sockrun
show processlist，你会发现有4个Waiting for an event from Cordinator线程（如图5-123
--mysql-socket=/tmp/mysql.sockrun
所示）。
并发数为1024个线程。
对于命令“set global slave_parallel_workers = 4;"，当设置为4个线程时，执行命令
--max-requests=1000--num-threads=16--mysql-host=localhost --mysql-port=3306--mysql-user=root --mysql-db=test
--max-requests=1000--num-threads=16--mysql-host=localhost--mysql-port=3306--mysql-user=root--mysql-db=test1
下面将用 Sysbench分别对两个库进行压力测试，如下所示：
设置 slave_parallel_workers 参数，开启基于库的多线程复制。默认是0，不开启，最大
sysbench--test=oltp--mysql-table-engine=innodb-oltp-table-size=100000
下面介绍一下多线程复制基于库的情况。
svstem
图5-122所示）。
tem
sten
lem
113
usel
localhost
loralhast
Host
Worker_id:0
master_id:165
NULL
MLL
ConandTicState
Query
Sleep
Cotneet
Conneet
Conneet
Connect
Ccnnect
Conmeet
图5-122不支持创建临时表
211Waiting for an event from Coordinator
图5-123状态信息
[otnecting to master