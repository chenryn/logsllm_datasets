3、开始克隆,将kvm_client00虚拟机克隆成新的虚拟机kvm_client01，新的虚拟机的磁盘文件为/var/lib/libvirt/images/kvm_client01.img   
```
[root@5201351_kvm ~]# virt-clone -o kvm_client00 -n kvm_client01 -f /var/lib/libvirt/images/kvm_client01.img
```
4、这时克隆就完了、我们可以通过virsh list --all进行查看，如果需要删除克隆的虚拟机，我们只需要执行如下命令即可。  
```
[root@5201351_kvm ~]# virsh undefine kvm_client01         //该命令只是删除wintest01的配置文件，并不删除虚拟磁盘文件
```
### 方法二:复制配置文件与磁盘文件进行克隆（可以不用关闭源虚拟机）
1、这里我们还是克隆kvm_client00，我们通过如下命令创建新虚拟机的配置文件  
```
[root@5201351_kvm ~]# virsh dumpxml kvm_client00 > /etc/libvirt/qemu/kvm_client02.xml    //创建新虚拟机的配置文件
```
2、复制原虚拟机的磁盘文件，通过方法一、我们知道，磁盘默认位置为/var/lib/libvirt/images，我们执行如下命令进行复制  
```
[root@5201351_kvm ~]# cd /var/lib/libvirt/images
[root@5201351_kvm images]# cp kvm_client00.img kvm_client02.img
```
3、直接编辑修改配置文件kvm_client02.xml，修改name,uuid,disk文件位置,mac地址，vnc端口  
4、通过新虚拟机的配置文件，定义新的虚拟机，只需要执行如下一条命令即可。  
```
[root@5201351_kvm ~]# virsh define /etc/libvirt/qemu/kvm_client02.xml   //通过配置文件定义新的kvm虚拟机
```
需要特别说明的是、以上两种方法克隆的虚拟机、我们都需要进入克隆的新虚拟机里  
修改网卡设备文件/etc/udev/rules.d/70-persistent-net.rules，或者直接将其删除，再重启克隆的目的虚拟机   
同时还需要修改虚拟机内对应网卡的ip, mac，与重启后新生成的/etc/udev/rules.d/70-persistent-net.rules中的MAC和设备号内容一致。  
然后才能重启新建的虚拟机的网卡。  
```
cat /etc/udev/rules.d/70-persistent-net.rules 
# PCI device 0x1af4:0x1000 (virtio-pci)
SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="52:54:00:3e:78:0d", ATTR{type}=="1", KERNEL=="eth*", NAME="eth0"
vi /etc/sysconfig/network-scripts/ifcfg-eth0
修改ip
mac
重启network服务
```
## 其他管理例子
### (1) 删除kvm虚拟机  
```
# virsh undefine wintest01
```
说明：该命令只是删除wintest01的配置文件，并不删除虚拟磁盘文件。   
### (2) 重新定义虚拟机配置文件
通过导出备份的配置文件恢复原KVM虚拟机的定义，并重新定义虚拟机。  
```
# mv /etc/libvirt/qemu/wintest02.xml /etc/libvirt/qemu/wintest01.xml
# virsh define /etc/libvirt/qemu/wintest01.xml
```
### (3) 编辑KVM虚拟机配置文件
```
# virsh edit wintest01
```
virsh edit将调用vi命令编辑/etc/libvirt/qemu/wintest01.xml配置文件。也可以直接通过vi命令进行编辑，修改，保存。  
可以但不建议直接通过vi编辑。  
### (1) 挂起服务器
```
# virsh suspend oeltest01
```
### (2) 恢复服务器
```
# virsh resume oeltest01
```
### 导出KVM虚拟机配置文件
```
# virsh dumpxml wintest01 > /etc/libvirt/qemu/wintest02.xml
```
### 配置开机自启动虚拟机
```
# virsh autostart oeltest01
```
### 通过配置文件启动虚拟机
```
# virsh create /etc/libvirt/qemu/wintest01.xml
```
### KVM虚拟机开机
```
# virsh start oeltest01
```
### KVM虚拟机关机或断电
(1) 关机  
默认情况下virsh工具不能对linux虚拟机进行关机操作，linux操作系统需要开启与启动acpid服务。在安装KVM linux虚拟机时必须在虚拟机内配置此服务。  
```
# chkconfig acpid on
# service acpid restart
```
virsh关机  
```
# virsh shutdown oeltest01
```
(2) 强制关闭电源  
```
# virsh destroy wintest01
```
### 给每个虚拟机CPU，指定具体的物理机CPU pinning绑定亲和策略
```
or 
```
也可以使用emulatorpin的方式  
emulatorpin 标签可以指定一个特定的物理CPU，使虚拟机使用的CPU和存储器都在一个物理机CPU内部  
```
```
### vcpu的设置
```
8
8
```
 和 需要保持一致，配置的是物理CPU，配置的CPU的核，包括超线程产生的核；  
使用static模式，也必须是；  
也可以设置一个虚拟机给32个虚拟CPU，但是一开始只能使用8个，然后可以根据系统压力，热添加CPU给虚拟机。  
```
32
```
### 使用cgoup cpuset限制KVM虚拟机对CPU的访问
使用vcpupin的效果可能不好，所以可以考虑cgroup的cpuset子系统。  
``` 
/cgroup/cpuset/libvirt/qemu  
```
在这个目录中，每个启动的虚拟机都有一个子目录，设置子目录中的cpuset.cpus即可。  
例如, 设置kvm101虚拟机只能使用宿主机的1-10号核。    
```
cd /cgroup/cpuset/libvirt/qemu/kvm101
echo "1-10" > cpuset.cpus
```
## 参考
http://www.tuicool.com/articles/7FVR32Y  
http://libvirt.org/formatdomain.html  
http://www.cnblogs.com/5201351/p/4461000.html  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")