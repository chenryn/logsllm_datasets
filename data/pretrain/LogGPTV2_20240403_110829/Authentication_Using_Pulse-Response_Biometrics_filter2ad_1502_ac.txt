to have multiple consecutive adversary detection events if the
original user is still at the terminal. Although the false positive
rates we achieve are quite low, they cold certainly be improved
with a more advanced biometrics capture system. In conjunction
with a sensible policy, our continuous authentication system
might be appropriate for any organization with high security
requirements.
VI. BIOMETRIC ACQUISITION SYSTEM DESIGN
In this section, we describe decisions and parameters that
went into the design of our ﬁnal classiﬁer. We conducted several
experiments during to test different signal types, voltage levels,
and frequencies. To support choices made in Section VII, we
present some of those results below.
A. Signal Type
We start out with the hypothesis that the biometric signature
will vary, depending on the frequency of the signal transmitted
through the body. If this is in fact true it makes sense to test
the performance of various frequency sweeps. Our initial test
signals are three different linear 0.6-second sine-wave sweeps
from 1 Hz to 250, 500 and 980 Hz. We also test the performance
of square-wave sweeps from 1 Hz to 250, 500 and 980 Hz,
respectively. For a few speciﬁc values of voltage and frequency
we get decent results using Linear Discriminant Analysis (LDA),
but at this point our results are not very robust. We continue
to experiment with different signal types and it turns out that,
contrary to our initial assumption, single pulse signals have
signiﬁcantly higher distinguishing power. We experiment with
different pulse widths between 100 ns and 1 ms, and voltage
levels of 1, 5 and 10 volts.
The box plots in Figure 5 summarize our results. We
present the results from the four classiﬁers that performed
the best in our application: Support vector machines (SVM),
Euclidean distance, linear discriminate analysis (LDA) and 3-
nearest neighbors (3nn). On the x-axis are the most promising
of the signals we tested. The signal name is composed of a
signal type, a voltage and a maximum frequency (or width for
pulses). The signal types are: single pulses (Pulse), a linear sine
sweep (SineLin) and a linear square wave sweep (SquareLin).
The voltage is either 1, 5 or 10 volts, and the frequency is
250, 500 and 980 Hz. The frequency information for the
pulse signals indicate the width of the pulse (in hundreds
of nanoseconds) rather than maximum frequency. The y-axis
is the binary detection error rate, i.e., the amount of times the
classiﬁer failed to classify a sample correctly, normalized by
the number of samples and converted to value in percent. The
distribution denoted by the box plots themselves are the results
of the classiﬁers achieved by ﬁve times 5-fold cross-validation.
We show the box plots rather than just the mean to clearly
show the variance in performance for each classiﬁer.
We see that the narrow pulse signal outperforms every other
signal type by a remarkable margin. We get consistent error
rates close to zero for a pulse signal of 1 volt and a width of
100 nanoseconds. Wider pulse signals also give decent results
but the quality of the result seems to decrease with the width of
the pulse. For the sine and square wave sweeps the results vary
signiﬁcantly with the choice of classiﬁer. Using LDA, some
sine sweeps look interesting but nowhere near as good as the
narrow pulse signal.
B. Signal Voltage
There are several factors besides the distinguishing power
of the resulting biometric, to consider when choosing voltage
levels. It is very important that the users of our system do not
experience any discomfort when their biometric information is
captured. That requires the voltages to be reasonably low. We
test three different voltage levels for all signal types: 1, 5 and
10 volts peek-to-peek (Vpp).
For sine and square signal sweeps the 10 Vpp and 5 Vpp
provides better separation between the subjects but also higher
noise levels. For example, in Figure 5, using the LDA classiﬁer,
we see that the SineLin-5-500 signal has a lower detection error
rate (i.e., better performance) than the SineLin-1-500 signal,
but the latter has less variance. For pulse signals there is no
signiﬁcant correlation with voltage level. Since the pulse signal
is clearly the best choice for our ﬁnal classiﬁer we chose 1
volt pulses to minimize any potential discomfort that users of
our biometric system might feel.
C. Signal Frequency
We initially thought that (almost) all frequencies would
contribute to the distinguishing power of our classiﬁer but our
experiments show that the classiﬁer mainly uses the lower
frequencies to distinguish between users. In fact, we see an
increase in the true positive rate when we only use the ﬁrst
100 frequency bins of the FFT. This suggests that most of the
high frequency content is noise when operating at such low
power levels.
D. Choice of Classiﬁer
Although we apply an FFT to the data before the classiﬁca-
tion step we can think of our task as time series classiﬁcation.
This is because an FFT is a reversible linear transformation
so the euclidean distance metric is preserved. Thinking of the
problem as a time series clustering problem, there are many
known approaches that work well. One common method is to
compare the ﬁrst n frequency components by using appropriate
distance- or similarity metric. We compare several different
classiﬁcation techniques to see which ones provide the best
results for our application.
Euclidean Distance (Euclidean) A new measurement is
treated as an n dimentional point and classiﬁed according
to the euclidean distance to the centroid of each class. This
8
e
t
a
r
r
o
r
r
e
n
o
i
t
c
e
t
e
d
y
r
a
n
B
i
100%
75%
50%
25%
0%
●●
SVM
●●●●●●
●
Euclidean
LDA
● ●
●●
●
●
●
●
●
●
●
●
●
●●●●
●
●
●
●
●
●●●
●●
Knn
●●●●●●
●
●
●
●
Pulse−1−1
Pulse−1−1
Pulse−1−1
Pulse−1−1
Pulse−1−100
Pulse−1−100
Pulse−1−100
Pulse−1−100
Pulse−1−10000
Pulse−1−10000
Pulse−1−10000
Pulse−1−10000
SquareLin−10−250
SquareLin−10−250
SquareLin−10−250
SquareLin−10−250
SineLin−10−980
SineLin−10−500
SineLin−10−980
SineLin−10−500
SineLin−10−980
SineLin−10−500
SineLin−10−980
SineLin−10−500
SineLin−10−250
SineLin−10−250
SineLin−10−250
SineLin−10−250
SquareLin−1−250
SquareLin−1−250
SquareLin−1−250
SquareLin−1−250
SineLin−1−500
SineLin−1−250
SineLin−1−500
SineLin−1−250
SineLin−1−500
SineLin−1−250
SineLin−1−500
SineLin−1−250
SineLin−1−980
SineLin−5−250
SineLin−5−500
SineLin−5−980
SineLin−1−980
SineLin−5−250
SineLin−5−500
SineLin−5−980
SineLin−1−980
SineLin−5−250
SineLin−5−500
SineLin−5−980
SineLin−1−980
SineLin−5−250
SineLin−5−500
SineLin−5−980
Fig. 5: Box plots of the binary detection error rate for four different classiﬁers. The distribution shown by each box plot is
the result of applying stratiﬁed 5-fold cross-validation to the data set ﬁve times in a row. We test several different signal types,
voltage levels and frequencies for each classiﬁer. We see that narrow pulse signals are consistently performing well.
classiﬁer is conceptually very simple but still offers reasonably
good results.
Mahalanobis Distance (MH) Rather than assuming uniform
and orthogonal dispersion among the frequency components
(as in the Euclidean classiﬁer) the covariance matrix for each
class is taken into account in the distance calculation. This
allows for a distance metric that is proportional to the shape
of the class (in n dimensional feature space). The performance
of this classiﬁer did not differ signiﬁcantly from the Euclidean,
suggesting that the shape of each class is not signiﬁcantly
skewed.
Support Vector Machine (SVM) For each pair of groups we
train one binary classiﬁer (one-against-one). The ﬁnal prediction
is found by voting. The inverse kernel width for the Radial Basis
kernel is determined by the 0.1 and 0.9 quantile of the pairwise
Euclidean distance between the samples. This classiﬁer gives
consistently good results and is our ﬁnal choice of classiﬁer.
Linear Discriminant Analysis (LDA) LDA seeks to reduce
the dimensionality of the input data while preserving as much of
the class distinguishing power as possible. Our LDA classiﬁer
performs the linear analysis on all the classes in our database,
then compares the position of new samples in the resulting
lower dimension feature space. The overall performance of
this classiﬁer degrades more gracefully than many of the other
methods but ultimately it did not prove as powerful as the
SVM method.
K Nearest Neighbor (Knn) We tested the k nearest neigh-
bors classiﬁer for k = 1 and k = 3, using euclidean distance.
It is a simple classiﬁer that often works very well in practice.
In our case though the performance of Knn was still not as
good as SVMs.
VII. EXPERIMENTS
In this section we will describe our experimental setup and
present the results of our experiments with our ﬁnal classiﬁer.
Fig. 6: Our proof-of-concept measurement setup. The test
subject is holding the two brass hand electrodes [20] and the
pulse signal is generated by an Agilent 33220A (20 MHz)
arbitrary waveform generator. The receiver is an Agilent
DSO3062A (60 MHz), 1 GSa/s digital storage oscilloscope.
The design decisions and motivations behind our ﬁnal classiﬁer
are described in detail in Section VI.
Any names from test persons appearing in this section’s
ﬁgures have been anonymized through pseudonyms.
A. Proof-Of-Concept Measurement Setup
In order to be able to gather stable and accurate pulse-
response data we build a data acquisition platform consisting
of an arbitrary waveform generator, an oscilloscope, a pair of
brass hand electrodes and a desktop computer to control the
apparatus. Figure 6 is a photo of our setup. We use an Agilent
arbitrary waveform generator as the source of the pulse signal.
The ﬂexibility of the waveform generator is useful during the
9
initial design phase and allows us to generate the required
pulse waveforms in our ﬁnal classiﬁer. To measure the pulse
waveform after the signal passes through a test subject we
used an Agilent digital storage oscilloscope which enabled
us to store the waveform data for later analysis. The output
of the waveform generator is connected to a brass handle
that the user holds in the left hand. The other brass handle
is connected to the oscilloscope’s signal input. When a test
subject holds one electrode in each hand the signal travels from
the generator through the test subject and into the oscilloscope.
To ensure exact triggering, the oscilloscope is connected to the
synchronization output of the waveform generator.
We use polished brass hand electrodes to ensure optimal
electrical contact between the measurement setup and the user.
This reduces contact resistance and increases the stability of
the measurements.
The function generator and oscilloscope are controlled by
a desktop computer that is connected via USB. We wrote a
custom software library to set measurement parameters and
retrieve the desired waveform data. This software is available
upon request.
B. Biometric Capture Procedure
We had each subject follow a speciﬁc procedure during the
biometric capturing process. This ensures that only minimal
noise is introduced by the process itself. The test subjects
are given a brief explanation of the setup and purpose of the
experiment and then told to grab a hold of the brass hand
electrodes. The red lead in the left hand and the black in the
right hand.
The test subjects could choose to either stand or sit in a
chair during the experiment as long as they did not touch the
sides of their body with their elbows or upper arms. We did this
to ensure that the current of the pulse signal had to go through
more or less the same path, for all samples and all users. Before
each new test subject was measured, the brass handles where
wiped down with a disinfectant, both for hygienic reasons and
to ensure good electrical contact between the electrode and the
user’s palms.
The capture process itself lasts about eleven minutes and
each subject was given the opportunity to take a break three
times during that period. In the initial design phase each test
subject was sampled ten times for each of the three signal
types, for each voltage level and for various frequencies. Once
a decision had been made that the pulse signal gave us the
best results, we acquired samples for two different data sets.
The ﬁrst one consists of 22 samples from each test person,
taken in one measuring session, i.e. at one point in time. The
second one encompasses a total of 25 samples per test person,
obtained in ﬁve different sessions over time.
Our subject population consists of both men and woman
between the ages of 24 and 38. We sampled all our test subjects
at different times during the day, over the course of several
weeks. We tried to sample subjects in such a way that we
would end up with sampling conditions as diverse as possible,
for each user. The interval between measurements sessions
with the same user varied between a few hours up to several
weeks. This was done in order to try to eliminate any effect that
Input pulse
Measured pulse
]
t
l
o
V
[
e
d
u
t
i
n
g
a
m
l
a
n
g
S
i
1.0
0.5
0.0
0
200
400
Time [ns]
600
800
Fig. 7: The input and output waveform. One measurement
consists of 4000 samples with a sample rate of 500 MSa/s. It
is clear that the measured pulse has been modiﬁed by passing
through the user.
y
t
i
s
n
e
d
l
a
r
t
c
e
p
S
500
400
300
200
100
0
0
25
50
75
100
Frequency bins
Fig. 8: The raw FFT data of the measured pulse, extracted
from our measurement setup. The data consists of the ﬁrst 100
frequency bins of the measured waveform.
sampling at a speciﬁc time of day might have on our results,
i.e., that our biometric would remain more or less permanent
over time, and across different periods of the day.
C. Feature Extraction
The data we extract from our measurement setup is in
the form of a 4000 sample time-series describing the voltage
variation as seen by the oscilloscope. Figure 7 shows the input
pulse sent by the waveform generator and the pulse measured
by the oscilloscope.
The time series measurements are converted to the frequency
domain using FFT and the ﬁrst 100 frequency bins of the
FFT data is used for classiﬁcation. Operating in the frequency
domain has several advantages. First we do not have to
worry about the alignment of the measured data pulses when
computing metrics like euclidean distance between pulses.
Second,
that only the lower
frequency bins carry any distinguishing power. The higher
frequency bins were mainly noise. This means that we can use
the FFT to do a dimensionality reduction of the original 4000
sample time-series to vector of 100 FFT bins. Figure 8 shows
an example of the raw data we end up with after the FFT. This
data is then fed into the classiﬁer.
it quickly became apparent
10
)
R
P