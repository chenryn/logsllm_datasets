the service provider originally administering that domain. Regard-
less, this approach signiﬁcantly narrows down the search space of
potential targets.
3.2.3 Web Interface Interaction
All of the major providers of wireless service in the United States
offer a website interface through which anyone can, at no charge
to the sender, submit SMS messages. If a message created through
this interface is addressed to a subscriber of this particular provider,
the message is sent to the targeted mobile device and a positive ac-
knowledgment is delivered to the sender. A message is rejected
from the system and the user, depending on the provider, is re-
turned an error message if the targeted device is a subscriber of a
different provider or is addressed to a user that has opted to turn off
text messaging services. An example of the both the positive and
negative acknowledgments is available in Figure 3. Of the service
providers tested (AT&T Wireless, Cingular, Nextel, Sprint PCS, T-
Mobile and Verizon Wireless), only AT&T did not respond with a
positive or negative acknowledgment; however, it should be noted
that subscribers of AT&T Wireless are slowly being transitioned
over to Cingular due to its recent acquisition.
The positive and negative acknowledgments can be used to cre-
Figure 3: The negative (top) and positive (bottom) response messages created by message submission to a) Verizon, b) Cingular and
c) Sprint PCS. Black rectangles have been added to preserve sensitive data.
ate an extremely accurate hit-list for a given NPA/NXX domain.
Every positive response generated by the system identiﬁes a poten-
tial future target. Negative responses can be interpreted in multiple
ways. For example, if the number corresponding to a negative re-
sponse was found through web scraping, it may instead be tried
again at another provider’s website. If further searching demon-
strates a number as being unassigned, it can be removed from the
list of potential future targets.
While an automated, high speed version of this method of hit-list
creation may be noticed for repeated access to dark address space,
an infrequent querying of these interfaces over a long period of time
(i.e. a “low and slow” attack) would be virtually undetectable.
A parallel result could instead be accomplished by means of an
automated dialing system; however, the simplicity of code writing
and the ability to match a phone to a speciﬁc provider makes a web-
interface the optimal candidate for building hit-lists in this fashion.
3.2.4 Additional Collection Methods
A number of speciﬁc techniques can also be applied to hit-list
development. For example, a worm could be designed to collect
stored phone numbers from victim devices by address book scrap-
ing. In order to increase the likelihood that a list contained only
valid numbers, the worm could instead be programmed to take only
the numbers from the “Recently Called” list. The effectiveness of
his method would be limited to mobile devices running speciﬁc op-
erating systems. The interaction between many mobile devices and
desktop computers could also be exploited. An Internet worm de-
signed to scrape the contents of a synchronized address book and
then post that data to a public location such as a chat room would
yield similar data. Lastly, Bluetooth enabled devices have become
notorious for leaking information. Hidden in a busy area such as
a bus, subway or train terminal, a device designed to collect this
sort of information [56] through continuous polling of Bluetooth-
enabled mobile phones in the vicinity would quickly be able to cre-
ate a large hit-list. If this system was left to run for a number of
days, a correlation could be drawn between a phone number and a
location given a time and day of the week.
4. MODELING DOS ATTACKS
Given the existing bottlenecks and the ability to create hit-lists,
we now discuss attacks against cellular networks. An adversary
can mount an attack by simultaneously sending messages through
the numerous available portals into the SMS network. The result-
ing aggregate load saturates the control channels thereby blocking
legitimate voice and SMS communication. Depending on the size
of the attack, the use of these services can be denied for targets
ranging in size from major metropolitan areas to entire continents.
4.1 Metropolitan Area Service
As discussed in Section 2, the wireless portion of SMS deliv-
ery begins when the targeted device hears its Temporary Mobile
Subscriber ID (TMSI) over the Paging Channel (PCH). The phone
acknowledges the request via the Random Access Channel (RACH)
and then proceeds with authentication and content delivery over a
Standalone Dedicated Control Channel (SDCCH).
Voice call establishment is very similar to SMS delivery, except
a Trafﬁc Channel (TCH) is allocated for voice trafﬁc at the com-
pletion of control signaling. The advantage of this approach is that
SMS and voice trafﬁc do not compete for TCHs, which are held for
signiﬁcantly longer periods of time. Therefore, TCH use can be op-
timized such that the maximum number of concurrent calls is pro-
vided. Because both voice and SMS trafﬁc use the same channels
for session establishment, contention for these limited resources
still occurs. Given enough SMS messages, the channels needed
for session establishment will become saturated, thereby prevent-
ing voice trafﬁc to a given area. Such a scenario is not merely theo-
retical; instances of this contention have been well documented [30,
2, 18, 38, 46, 3].
In order to determine the required number of messages to induce
saturation, the details of the air interface must be examined. While
the following analysis of this vulnerability focuses on GSM net-
works, other systems (e.g. CDMA [55]) are equally vulnerable to
attacks.
The GSM air interface is a timesharing system. This technique
is commonly employed in a variety of systems to provide an equal
distribution of resources between multiple parties. Each channel
Figure 4: An example air interface with four carriers (each
showing a single frame). The ﬁrst time slot of the ﬁrst carrier
is the Common CCH. The second time slot of the ﬁrst chan-
nel is reserved for SDCCH connections. Over the course of a
multiframe, capacity for eight users is allotted. The remaining
time slots across all carriers are designated for voice data. This
setup is common in many urban areas.
is divided into eight timeslots and, when viewed as a whole, form
a frame. During a given timeslot, the assigned user receives full
control of the channel. From the telephony perspective, a user as-
signed to a given TCH is able to transmit voice data once per frame.
In order to provide the illusion of continuous voice sampling, the
frame length is limited to 4.615 ms. An illustration of this system
is shown in Figure 4.
Because the bandwidth within a given frame is limited, data (es-
pecially relating to the CCH) must often span a number of frames,
as depicted in Figure 5. This aggregation is known as a multiframe
and is typically comprised of 51 frames6. For example, over the
course of a single multiframe, the base station is able to dedicate
up to 34 of the 51 Common CCH slots to paging operations.
Each channel has distinct characteristics. While the PCH is used
to signal each incoming call and text message, its commitment to
each session is limited to the transmission of a TMSI. TCHs, on
the other hand, remain occupied for the duration of a call, which on
average is a number of minutes [44]. The SDDCH, which has ap-
proximately the same bandwidth as the PCH across a multiframe,
is occupied for a number of seconds per session establishment. Ac-
cordingly, in many scenarios, this channel can become a bottleneck.
In order to determine the characteristics of the wireless bottle-
neck, it is necessary to understand the available bandwidth. As
shown in Figure 5, each SDCCH spans four logically consecutive
timeslots in a multiframe. With 184 bits per control channel unit
and a multiframe cycle time of 235.36 ms, the effective bandwidth
is 782 bps [4]. Given that authentication, TMSI renewal, the en-
abling of encryption, and the 160 byte text message must be trans-
ferred, a single SDCCH is commonly held by an individual session
for between four and ﬁve seconds [44]. The gray-box testing in
Section 3.1 reinforces the plausibility of this value by observing no
messages delivered in under six seconds.
This service time translates into the ability to handle up to 900
SMS sessions per hour on each SDCCH. In real systems, the total
number of SDCCHs available in a sector is typically equal to twice
the number of carriers7, or one per three to four voice channels.
For example, in an urban location such as the one demonstrated
in Figure 4 where a total of four carriers are used, a total of eight
SDCCHs are allocated. A less populated suburban or rural sector
may only have two carriers per area and therefore have four allo-
6Multiframes can actually contain 26, 51 or 52 frames. A justiﬁca-
tion for each case is available in the standards [4].
7Actual allocation of SDCCH channels may vary across implemen-
tations; however, these are the generally accepted values through-
out the community.
Figure 5: Timeslot 1 from each frame in a multiframe creates
the logical SDCCH channel. In a single multiframe, up to eight
users can receive SDCCH access.
cated SDCCHs. Densely populated metropolitan sectors may have
as many as six carriers and therefore support up to 12 SDCCHs per
area.
We now calculate the maximum capacity of the system for an
area. As indicated in a study conducted by the National Communi-
cations System (NCS) [44], the city of Washington D.C. has 40 cel-
lular towers and a total of 120 sectors. This number reﬂects sectors
of approximately 0.5 to 0.75 mi2 through the 68.2 mi2 city. Assum-
ing that each of the sectors has eight SDCCHs, the total number of
messages per second needed to saturate the SDCCH capacity C is:
„ 8 SDCCH
«„ 900 msgs/hr
«
1 sector
1 SDCCH
C ’ (120 sectors)
’ 864, 000 msgs/hr
’ 240 msgs/sec
Manhattan is smaller in area at 31.1 mi2. Assuming the same
sector distribution as Washington D.C., there are 55 sectors. Due
to the greater population density, we assume 12 SDCCHs are used
per sector.
„ 12 SDCCH
«„ 900 msg/hr
«
1 sector
1 SDCCH
C ’ (55 sectors)
’ 594, 000 msg/hr
’ 165 msg/sec
Given that SMSCs in use by service providers in 2000 were capa-
ble of processing 2500 msgs/sec [59], such volumes are achievable
even in the hypothetical case of a sector having twice this number
of SDCCHs.
Using a source transmission size of 1500 bytes as described in
Section 3.1 to submit an SMS from the Internet, Table 3 shows the
bandwidth required at the source to saturate the control channels,
thereby incapacitating legitimate voice and text messaging services
for Washington D.C. and Manhattan. The adversary’s bandwidth
requirements can be reduced by an order of magnitude when at-
tacking providers including Verizon and Cingular Wireless due to
the ability to have a single message repeated to up to ten recipients.
Due to the data gathered in Section 3.1, sending this magnitude
of messages to a small number of recipients would degrade the ef-
fectiveness of such an attack. As shown in the previous section, tar-
geted phones would quickly see their buffers reach capacity. Unde-
liverable messages would then be buffered in the network until the
space alloted per user was also exhausted. These accounts would
likely be ﬂagged and potentially temporarily shut down for receiv-
ing a high number of messages in a short period of time, thereby
CCH*SDCCH/8TCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTCHTRX 1TRX 2TRX 3TRX 401234567SDCCH 0012345670123456701234567Time Slot #SDCCH 1MultiframeFrame #012345678904501234567Radio Carrier# Sectors
120
Area
Washington D.C.
(68.2 mi2)
# SDCCHs/sector
8
12
24
8
12
24
* assuming 1500 bytes per message
Manhattan
(31.1 mi2)
55
SMS Capacity Upload Bandwidth* Multi-Recipient Bandwidth*
240 msgs/sec
360 msgs/sec
720 msgs/sec
110 msgs/sec
165 msgs/sec
330 msgs/sec
2812.5 kbps
4218.8 kbps
8437.5 kbps
1289.1 kbps
1933.6 kbps
3867.2 kbps
281.25 kbps
421.88 kbps
843.75 kbps
128.91 kbps
193.66 kbps
386.72 kbps
Table 3: Required upload bandwidth to saturate an empty network
fully extinguishing the attack. Clever usage of well constructed hit-
lists keeps the number of messages seen by individual phones far
below realistic thresholds for rate limitation on individual targets.
Using the conservative population and demographic numbers cited
from the NCS technical bulletin [44]8 and assuming 50% of the
wireless subscribers in Washington are serviced by the same net-
work, an even distribution of messages would require the delivery
of approximately 5.04 messages to each phone per hour (1 message
every 11.92 minutes) to saturate Washington D.C. If the percentage
of subscribers receiving service from a provider is closer to 25%,
the number is only 10.07 messages per hour (1 message every 5.96
minutes).
In a more densely populated city such as Manhattan,
with a population estimated at 1,318,000 with 60% wireless pen-
etration and 12 SDCCHs, only 1.502 messages would have to be
received per user per hour if half of the wireless clientele use the
same provider. That number increases slightly to 3.01 if the number
is closer to 25%.
Depending on the intended duration of an attack, the creation
of very large hit-lists may not be necessary. An adversary may
only require a ﬁve minute service outage to accomplish their mis-
sion. Assuming that the attacker created a hit-list with only 2500
phone numbers, with each target having a buffer of 50 messages
and launched their attack in a city with 8 SDCCHs (e.g. Washing-
ton D.C.), uniform random use of the hit-list would deliver a single
message to each phone every 10.4 seconds, allowing the attack to
last 8.68 minutes before buffer exhaustion. Similar to the most dan-
gerous worms in the Internet, this attack could be completed before
anyone capable of thwarting it could respond.
When compared to the requisite bandwidth to launch these at-
tacks listed in Table 3, many of these scenarios can be executed
from a single high-end cable modem. A more distributed, less