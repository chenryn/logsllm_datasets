(cid:17)
(cid:17)
(cid:17)s ≥ 1 − s
1 − 1
2n−1
=
1 − 1
2n−1
2n−1 ≥ 1 − q
2n−1 ,
(3)
where the second last inequality is due to the fact that (1 − x)t ≥ 1 − tx for any t ≥ 1 and any
0  d] ≤ 2−r/2 .
17
Proof: Let s = d + 1 = (cid:100)1.5/(cid:101). Since we throw q balls, there are
(cid:18)q
(cid:19)
s
≤ qs
s!
sets of s balls. For each set, if it contains two balls of the same user then the balls in this set cannot
be in the same bin. Otherwise, the balls in this set are thrown uniformly and independently, and
thus the chance that they are in the same bin is 2−r(s−1). By the union bound, the chance that
there is a bin of s or more balls is at most
qs
2r(s−1)
≤ 2(1−)rs
2r(s−1)
=
1
2r(s−1)
≤ 1
2r/2
.
This concludes the proof.
Back to the security gain via the XN transform, the analysis above however only holds if the
adversary non-adaptively chooses its nonces. If the adversary is somehow able to adaptively learn
the nonce randomizers via its queries, it can then repeat the eﬀective nonces as often as it wishes.
Theorem 4.2 below reﬁnes the prior naive argument to handle adaptivity.
Theorem 4.2 Let E be a blockcipher that we will model as an ideal cipher. Let Π[E] = (K,E,D)
be an AE scheme of nonce length r, and let Π∗[E] = XN(Π[E]). Fix 0 <  < 1. Let A be an
adversary attacking Π∗ using at most q ≤ 2(1−)r Enc queries. Then we can construct a strongly
d-repeating adversary B of the same concrete query complexity as A, where d = (cid:100)1.5/(cid:101) − 1, such
that
Advmu-ae
Π∗[E](A) ≤ Advmu-ae
Π[E] (B) +
1
2r/2
.
Proof: Adversary B initializes a ﬂag bad ← false and runs A with direct access to its ideal cipher.
For each encryption query (i, N, A, M ) (respectively, veriﬁcation query (i, N, A, C)) of the latter,
B initializes Ji ←$ {0, 1}r if the string Ji is not deﬁned, otherwise it uses the existing Ji, and then
creates an eﬀective nonce N∗ ← N⊕Ji.
If B did use N∗ for d other users previously, it’ll set
bad ← true, terminate A, and output 1. Otherwise, B queries C ← Enc(i, N∗, A, M ) (respectively,
Vf(i, N∗, A, C)), and returns the answer to A. When A ﬁnishes (without being terminated pre-
maturely) and outputs a bit b(cid:48), adversary B will output the same bit. Note that B is strongly
d-repeating, and for each individual user, if A does not repeat a nonce among encryption queries
then B also does not repeat an eﬀective nonce among encryption queries. Moreover,
because B either outputs 1, or agrees with A. Since game RandA
in its ideal world are identical until bad is set,
Pr[RealB
Π[E] ⇒ 1] ≥ Pr[RealA
Π∗[E] ⇒ 1] ,
(4)
Π∗[E] and the game that B simulates
Pr[RandB
Π[E] ⇒ 1] ≤ Pr[RandB
Π[E] sets bad] + Pr[RandA
Π∗[E] ⇒ 1] .
(5)
Subtracting Eq. (5) from Eq. (4) side by side, we obtain
Advmu-ae
Π[E] (B) ≥ Advmu-ae
Π∗[E](A) − Pr[RandB
Π[E] sets bad] .
18
procedure K∗()
K ←$ K(); J ←$ {0, 1}t
return K (cid:107) J
Figure 4: The CN transform to turn an AE scheme Π = (K,E,D) to another AE scheme Π∗ =
(K∗,E∗,D∗).
procedure E∗(K (cid:107) J, N, A, M )
N∗ ← J (cid:107) N ; C ←$ E(K, N∗, A, M )
return C
procedure D∗(K (cid:107) J, N, A, C)
N∗ ← J (cid:107) N ; M ← D(K, N∗, A, C)
return M
Π[E] sets bad] ≤ 2−r/2. Recall that B sets bad to true only
It now suﬃces to show that Pr[RandB
if adversary A can force B to use some eﬀective nonce across more than d users. However, in
game RandB
Π[E], the oracle answers are completely independent of the nonce randomizers Ji that
Π[E] as A’s throwing q balls into 2r bins where the throwing
B chooses. Hence one can view RandB
distribution is speciﬁed in Lemma 4.1, and bad is set only if some bin contains d or more balls.
From Lemma 4.1, RandB
Π[E] sets bad with probability at most 2−r/2 as claimed.
Security of RGCM. Combining Theorem 4.2 above with Theorem 3.1, we immediately obtain
a strong security bound for RCAU = XN(CAU), which includes RGCM as a special case for c = 1.5,
r = 96, n = 128 and k ∈ {128, 256}.
Theorem 4.3 (Mu-security of RCAU/RGCM) Let E : {0, 1}k × {0, 1}n → {0, 1}n be a blockci-
pher that we will model as an ideal cipher, with k ≥ n ≥ 128. Let H be a c-AXU hash function,
and let r be the nonce length. Fix a number 0 <  < 1, and let d = (cid:100)1.5/(cid:101) − 1. Let A be an
adversary attacking RCAU[H, E] using at most p ≤ 2n−2 ideal-cipher queries, q ≤ 2(1−)r encryp-
tion/veriﬁcation queries of total block length at most σ, and the encryption queries are of at most
B blocks per user. Then
Advmu-ae
RCAU[H,E](A)
≤ d(p + q) + n(q + σ + p)
2k
+
σ(2B + cn + 2)
2n
+
2q + 1
22n +
σ(σ + ncd) + 2pq
2k+n
+ 2−r/2 .
5 The Concatenation transform
In this section, we introduce the CN transform that turns an AE scheme Π into another AE scheme
Π∗ by randomizing the eﬀective nonces by concatenating a random string. We then reduce the mu
security of Π∗ under a generic adversary to that of Π under a strongly d-repeating adversary. This
transformation is used, for example, in the GCM scheme in TLS 1.2 and IPSec.
The CN transform. Let Π = (K,E,D) be an AE scheme of nonce length r and key length k. For
a parameter t < r, deﬁne the AE scheme Π∗ = (K∗,E∗,D∗) of nonce length r − t and key length
k + t as in Fig. 4. For a key K (cid:107) J of Π∗, we refer to the subkey K the encryption key, and the
subkey J as the nonce randomizer.
Security gain via CN. We now reduce security of Π∗ = CN(Π) under a generic adversary to that
of Π under a strongly d-repeating adversary. To prove this theorem, we need the following lemma
whose proof is along the same lines as that of Lemma 3.4 [7] except with the assumption that t ≥ 32
instead of t ≥ 128. We brieﬂy recall the proof for completeness.
Lemma 5.1 Fix integers t ≥ 32, and a, (cid:96) ≥ 2. Suppose that we throw q ≤ a · 2t balls into 2t bins.
The throws may be inter-dependent, but for each i-th throw, conditioning on the result of the prior
throws, the conditional probability that the i-th ball falls into any particular bin is at most 21−t.
Then the chance that the heaviest bin contains (cid:100)a(cid:96)t/2(cid:101) or more balls is at most 2−t(2(cid:96)−1).
19
Proof: Let s = t − 1 and r = (cid:100)a(cid:96)t/2(cid:101) ≥ 32a. There are
(cid:18)q
(cid:19)
≤ qr
r!
r
sets of r balls out of the thrown q balls. For each set, the chance that all the balls are in the same
bin is 2−s(r−1). By the union bound, the chance that there is a bin of r or more balls is at most
qr
r! · 2s(r−1)
≤ (2a)r2rs