without invaliding the digital signature. In his master thesis, Stefan
et al. provided an in-depth analysis of PDF signatures [44]. The au-
thor also implemented a library verifying PDF signatures. However,
the security considerations addressed only known attacks related
to PDFs and none of our discovered attack classes.
Signature Bypasses in different Data Structures. In 2002 Kain
et al. addressed possible threats related to digitally signed docu-
ments like MS Word, MS Excel, or PDFs resulting from PKI issues,
dynamic content loaded from a website, and code execution by
supported programming languages within documents [25]. In the
paper, the authors briefly describe the possibility to create an un-
signed PDF document which is visually identical to the signed one,
but they do not deliver any proof-of-concept exploit and do not
evaluate if and how this can be achieved. In 2005, Buccafurri et al.
describe a file format attack where the attacker forces two different
views of the same signed document which contains an image as BMP
and HTML code [5]. Depending on the file extension, the content of
the image or the HTML code is processed. PDF files are mentioned
as a possible target for such an attacker, but no concrete ideas are
described.
The general concept of SWA – the relocation of the hashed part
of a document – has been applied to XML-based messages before.
In 2005, McIntosh and Austel described an XML rewriting attack
on SOAP web services [32] and was adapted to SAML-based Single
Sign-On in 2012 [42]. However, the adaption to PDF is much more
complicated because the hashed part of the file is located using a
byte range instead of an object identification number and has not
been found in any previous work.
PDF Signatures. While studying the related work, we discovered
a gap in existing security analysis. We were able to find only a few
articles directly related to the security of PDF signatures.
In 2008 and 2012, Grigg et al. described the risks associated to
electronic signatures [18, 19] based on the missing cryptographic
signature allowing an attacker to forge any signature.
Attacks that exclude a document’s signature have been applied
to SAML [42] and JSON [33]. In contrast to our USF attack, these
vulnerabilities simply remove the signature of the document in
order to bypass the validation logic. This would work identically
for PDFs, but a victim expects to open a signed file, and he will
become suspicious if no signature information is shown once he
opens the document. Thus, USF is a more advanced variant of
signature exclusion adapted to PDF.
Session 1A: Attack ICCS ’19, November 11–15, 2019, London, United Kingdom128 NEW RESEARCH DIRECTIONS
In this paper, we provide the first step into the security analysis of
PDF signatures. We discovered further potential targets for attacks
opening new research directions and challenges.
PKCS-based Attacks. The signature value is either a DER-encoded
PKCS#1 binary data object or a DER-encoded PKCS#7 binary data
object. Considering the complexity of both formats, the question
arises if the verification of the PKCS object is correctly implemented.
The goal of PKCS-based attacks is the creation of an always valid
object. The impact of such an attack would be equal to the impact of
USF, whereby any modification of the signed document is possible.
Additionally, the PKCS object contains the certificates used dur-
ing the verification. If untrusted certificates are used, security warn-
ings are displayed to the user. Thus, an attacker is not able to create
a validly signed and trusted document. Future research should con-
centrate on the certificate validation by targeting this step and
forcing the validation to accept an untrusted certificate.
Transformation Method Attacks. The PDF specification defines
three different transformation methods applied on the document
before signing it: DocMDP, UR, and FieldMDP. The transformation
methods define which objects are included and excluded in the com-
putation of the digital signatures. In this paper, we focused on the
DocMDP transformation which is the short term for modification,
detection, and prevention and permits changes by filling in forms,
instantiating page templates and signing. Any other modification
invalidates the signature.
DocMDP allows further adjustments regarding permitted and
forbidden changes depending on different parameters. Future re-
search should investigate if such restrictions are correctly applied
and if they can be bypassed. Additionally, the transformation meth-
ods UR, protecting the defined usage rights, and FieldMDP detects
changes in contained form fields should be also analyzed. Since
these transformation methods process the data which should be
signed differently than DocMDP, an in-depth security analysis could
discover further vulnerabilities.
PDF Advanced Electronic Signatures. Motivated by the idea of
eGovernment, the European Union published the PDF Advanced
Electronic Signatures (PAdES) specification, which extends the PDF
signature specification. For the significance of sensitive documents
exchanged within governmental services, it is essential to analyze
the current specification and the existing implementations.
In our evaluation, we discovered vulnerabilities in online valida-
tion services by adapting our attack vectors on PAdES documents.
Since our attacks abuse features in the PDF specification, it is not
surprising that PAdES signatures are also affected. It is essential
that future research analyzes the PAdES specification carefully and
evaluates the security of the specification itself. In this paper, we
did not provide such an analysis.
Content Masking. Markwood et al. introduced techniques to by-
pass topic matching algorithms, plagiarism detection, and document
indexing [31] by creating malicious fonts and constructing new
word and character maps to mask the malicious content. In the con-
text of signed PDFs, content masking attacks abuse dissimilarities
between the signed and displayed content. For example, by defining
new fonts and thus changing the presentation of some characters,
the IBAN in an invoice document can be changed.
Another attack idea is to abuse the error tolerance of the viewer.
During our tests, we detected presentation differences of the same
document by using different viewers. The error-tolerance can be
abused by an attacker validly signing one document, for example, a
contract and distributing it to multiple parties. If these use different
viewers, they may accept different contracts.
Verification UI Forgery. Similar to content masking attacks, an
attacker can try to create a UI forging the view of a signed docu-
ment. The PDF specification supports multiple interactive forms
like button fields, rich text string, and form actions. Such features
facilitate the creation of a UI imitating a signature panel where the
results of the signature validation are usually displayed. As a re-
sult, an attacker could create a malicious document which appears
trustworthy after opening. These kinds of attacks have already
been described in the web context by Zalewski [54]. Researchers
should concentrate on features defined in Section 12 in the PDF
specification [21].
9 CONCLUSION
The PDF specification is a very complex standard. Unfortunately,
when it comes to cryptography and, as in our case to digital signa-
tures, it lacks concrete implementation guidelines and documents
describing the best current practices. Our investigation reveals
that almost all desktop applications fail to validate PDF signatures
correctly. We identified three main reasons for this: (1) The specifi-
cation itself does not enforce a strict policy, e.g., it does not enforce
a signature to cover the whole document. This could be abused
by SWA and relocating the signed content to a different position.
(2) PDF applications are error tolerant and process the content of
a PDF file even if it is not standard compliant. We heavily abused
this behavior with ISA and created non-standard compliant doc-
uments that force a viewer application to believe that it has not
been updated; however, an attacker could manipulate the document.
(3) Even if the above aspects are correctly handled, as in the case
of Adobe, there can be mere programming mistakes that break the
whole cryptography. In the case of USF, an unexpected missing of
mandatory information leads to a valid signature.
Our evaluation of PDF viewer applications and online valida-
tion services has alarming results. In 95% of all analyzed viewer
applications, at least one of the problems, which were identified
above, occurs and allows an attacker to stealthy manipulate con-
tents of a signed PDF file. Analogous results could be found for
online validation services in 75% of the tested cases. We responsibly
disclosed our findings via the BSI-CERT to all vendors and proposed
a validation algorithm to prevent our attacks.
Concerning the digitalization of offices and eGovernment, we
see a strong need for the improvement of the given specification
and best practices. PDF security related to cryptographic features
have been overlooked for too long. We, therefore, pointed out new
research directions in the field of PDF security in order to address
this issue.
Session 1A: Attack ICCS ’19, November 11–15, 2019, London, United Kingdom1310 ACKNOWLEDGEMENTS
We would like to thanks the CERT-Bund team for their great sup-
port during the responsible disclosure process. The research was
supported by the European Commission through the FutureTrust
project (grant 700542-Future-Trust-H2020-DS-2015-1) and by the
German Research Foundation(DFG) within the Excellence Strategy
of the Federal and State Governments – EXC 2092 CASA.
REFERENCES
[1] Adobe. 2018. Adobe Fast Facts. https://www.adobe.com/about-adobe/fast-facts.
html
[2] Ange Albertini. 2014. This PDF is a JPEG; or, This Proof of Concept is a Picture
of Cats. PoC 11 GTFO 0x03 (2014). https://www.alchemistowl.org/pocorgtfo/
pocorgtfo03.pdf
[3] PDF association. 2018. PDF in 2016: Broader, deeper, richer. https://www.pdfa.
org/pdf-in-2016-broader-deeper-richer/
[4] USENIX Association. 2018. Board of Directors Out of Band Motion. https://www.
usenix.org/sites/default/files/2017-01_out-of-band_motion_signed.pdf
[5] Francesco Buccafurri. 2005. Digital Signature Trust vulnerability: A new attack
on digital signatures. Information Management & Computer Security 4 (2005),
28–6. http://www.unirc.it/firma/en/Buccafurri_ISSA_1008.pdf
[6] Curtis Carmony, Xunchao Hu, Heng Yin, Abhishek Vasisht Bhaskar, and Mu
Zhang. 2016. Extract Me If You Can: Abusing PDF Parsers in Malware Detectors..
In NDSS.
[7] European Commission. 2018. DSS Demonstration WebApp v5.3.1. https://ec.
europa.eu/cefdigital/wiki/display/CEFDIGITAL/DSS
[8] Igino Corona, Davide Maiorca, Davide Ariu, and Giorgio Giacinto. 2014. Lux0r:
Detection of malicious pdf-embedded javascript code through discriminant anal-
ysis of api references. In Proceedings of the 2014 Workshop on Artificial Intelligent
and Security Workshop. ACM, 47–57.
[9] Inc. DocuSign. 2018. DocuSign Validation Service. https://validator.docusign.com/
[10] EIUS doo. 2018. VEP E-obrazci. https://www.vep.si/validator/forms/document-
[11] eesti. 2018. SiVa Demo application. https://siva-arendus.eesti.ee/
[12] Evrotrust. 2018. Validate a signature. https://www.evrotrust.com/landing/en/a/
verify
validation
[13] FeaturedCustomers. 2018. DocuSign Customer. https://www.featuredcustomers.
com/vendor/docusign/customers
[14] Agency for Digital Italy. 2018. DSS Demonstration WebApp v5.2. https://dss.agid.
gov.it/validation
[15] Forbes. 2018. Forbes Releases 2017 Cloud 100 List of the Best Private Cloud Compa-
nies in the World. http://bit.ly/dokusign-forbesrank
[16] Gertjan Franken, Tom Van Goethem, and Wouter Joosen. 2018. Who Left Open
the Cookie Jar? A Comprehensive Evaluation of Third-Party Cookie Policies.
In 27th USENIX Security Symposium (USENIX Security 18). USENIX Association,
Baltimore, MD, 151–168. https://www.usenix.org/conference/usenixsecurity18/
presentation/franken
[17] Bundesministerium für Digitalisierung und Wirtschaftsstandort. 2019.
Government-Gesetz (E-GovG).
Bundesnormen/20003230/E-GovG%2c%20Fassung%20vom%2004.02.2019.pdf
E-
https://www.ris.bka.gv.at/GeltendeFassung/
[18] Ian Grigg. 2008. Technologists on signatures: looking in the wrong place. http:
//financialcryptography.com/mt/archives/001056.html
[19] Ian Grigg. 2012. Signatures on fax & email - if you did not intend to be bound,
why did you bother to write it? http://financialcryptography.com/mt/archives/
001364.html
[20] Arhs Group. 2018. Ellis Digital Signature. https://ellis.arhs-spikeseed.com/
[21] Adobe Systems Incorporated. 2006. PDF Reference, version 1.7 (sixth edition ed.).
[22] Alexander1 Inführ. 2014. Multiple PDF Vulnerabilities – Text and Pictures on
Steroids. https://insert-script.blogspot.de/2014/12/multiple-pdf-vulnerabilites-
text-and.html
[23] Alexander Inführ. 2015. PDF – Mess with the Web. https://2015.appsec.eu/wp-
content/uploads/2015/09/owasp-appseceu2015-infuhr.pdf
[24] Alexander2 Inführ. 2018. Adobe Reader PDF - Client Side Request Injection. https:
//insert-script.blogspot.de/2018/05/adobe-reader-pdf-client-side-request.html
[25] K Kain, Sean W Smith, and R Asokan. 2002. Digital signatures and electronic
In Advanced communications and multimedia
documents: A cautionary tale.
security. Springer, 293–307. http://www.ists.dartmouth.edu/library/74.pdf
[26] Pavel Laskov and Nedim Šrndić. 2011. Static detection of malicious JavaScript-
bearing PDF documents. In Proceedings of the 27th annual computer security
applications conference. ACM, 373–382.
[27] Gianluca Lax, Francesco Buccafurri, and Gianluca Caminiti. 2015. Digital doc-
ument signing: Vulnerabilities and solutions. Information Security Journal: A
Global Perspective 24, 1-3 (2015), 1–14.
[28] Davide Maiorca, Davide Ariu, Igino Corona, and Giorgio Giacinto. 2015. A struc-
tural and content-based approach for a precise and robust detection of malicious
pdf files. In 2015 International Conference on Information Systems Security and
Privacy (ICISSP). IEEE, 27–36.
[29] Davide Maiorca and Battista Biggio. In Press. Digital Investigation of PDF Files:
Unveiling Traces of Embedded Malware. IEEE Security and Privacy: Special Issue
on Digital Forensics (In Press). https://pralab.diee.unica.it/sites/default/files/
maiorca17-sp.pdf
[30] Davide Maiorca, Giorgio Giacinto, and Igino Corona. 2012. A pattern recognition
system for malicious pdf files detection. In International Workshop on Machine
Learning and Data Mining in Pattern Recognition. Springer, 510–524.
[31] Ian Markwood, Dakun Shen, Yao Liu, and Zhuo Lu. 2017. PDF Mirage: Content
Masking Attack Against Information-Based Online Services. In 26th USENIX
Security Symposium (USENIX Security 17), (Vancouver, BC). 833–847.
[32] Michael McIntosh and Paula Austel. 2005. XML signature element wrapping
attacks and countermeasures. In SWS ’05: Proceedings of the 2005 Workshop on
Secure Web Services. ACM Press, New York, NY, USA, 20–27.
[33] Tim McLean. 2015. Blog post: Critical vulnerabilities in JSON Web Token libraries.
https://www.chosenplaintext.ca/2015/03/31/jwt-algorithm-confusion.html
[34] Vladislav Mladenov, Christian Mainka, Meyer zu Selhausen, Martin Grothe,
and Jörg Schwenk. 2018. Vulnerability Report: Attacks bypassing the signature
validation in PDF. Technical Report. Ruhr Univeristy Bochum, Chair for Network
and Data Security. https://www.nds.ruhr-uni-bochum.de/research/publications/
vulnerability-report-attacks-bypassing-signature-v/
[35] United States Government Printing Office. 2000. ELECTRONIC SIGNATURES
IN GLOBAL AND NATIONAL COMMERCE ACT. https://www.govinfo.gov/
content/pkg/PLAW-106publ229/pdf/PLAW-106publ229.pdf
[36] Dan-Sabin Popescu. 2012. Hiding Malicious Content in PDF Documents. CoRR
abs/1201.0397 (2012). arXiv:1201.0397 http://arxiv.org/abs/1201.0397
[37] F. Raynal, G. Delugré, and D. Aumaitre. 2010. Malicious Origami in PDF. Journal
in Computer Virology 6, 4 (2010), 289–315. http://esec-lab.sogeti.com/static/
publications/08-pacsec-maliciouspdf.pdf
[38] RUNDFUNK UND TELEKOM REGULIERUNGS-GMBH. 2018. RTR - Signatur-
Prüfung. https://www.signatur.rtr.at/de/vd/Pruefung.html
[39] Check Point Research. 2018. NTLM Credentials Theft via PDF Files.
//research.checkpoint.com/ntlm-credentials-theft-via-pdf-files/
[40] Billy Rios, Federico Lanusse, and Mauro Gentile. 2013. Adobe Reader Same-
http://www.sneaked.net/adobe-reader-same-origin-
https:
Origin Policy Bypass.
policy-bypass
https:
[41] Charles Smutz and Angelos Stavrou. 2012. Malicious PDF detection using meta-
data and structural features. In Proceedings of the 28th annual computer security
applications conference. ACM, 239–248.
[42] Juraj Somorovsky, Andreas Mayer, Jörg Schwenk, Marco Kampmann, and Meiko
Jensen. 2012. On Breaking SAML: Be Whoever You Want to Be. In 21st USENIX
Security Symposium. Bellevue, WA.
[43] Nedim Šrndić and Pavel Laskov. 2016. Hidost: a static machine-learning-based
detector of malicious files. EURASIP Journal on Information Security 2016, 1
(2016), 22.
[44] Tomáš Stefan. 2017.
Digital Signature Verification in PDF.
//dspace.cvut.cz/bitstream/handle/10467/76810/F8-BP-2018-Stefan-Tomas-
thesis.pdf?sequence=-1
[45] Marc Stevens, Elie Bursztein, Pierre Karpman, Ange Albertini, and Yarik Markov.
2017. The first collision for full SHA-1. In Annual International Cryptology
Conference. Springer, 570–596.
[46] Liang Tong, Bo Li, Chen Hajaj, and Yevgeniy Vorobeychik. 2017.
Fea-
ture Conservation in Adversarial Classifier Evasion: A Case Study.
CoRR abs/1708.08327 (2017).
https://pdfs.semanticscholar.org/f1f8/
6dbd8b39c9601e6315214783343ca18377b4.pdf
[47] Liang Tong, Bo Li, Chen Hajaj, Chaowei Xiao, and Yevgeniy Vorobeychik. 2017.
A Framework for Validating Models of Evasion Attacks on Machine Learning,
with Application to PDF Malware Detection. arXiv preprint arXiv:1708.08327
(2017). https://arxiv.org/pdf/1708.08327.pdf
[48] European Union. 2014. REGULATION (EU) No 910/2014 OF THE EUROPEAN
PARLIAMENT AND OF THE COUNCIL on electronic identification and trust
services for electronic transactions in the internal market and repealing Directive
1999/93/EC. https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:
32014R0910
[49] H. Valentin. 2012. Malicious URI resolving in PDF Documents. Blackhat Abu
Dhabi (2012).
[50] Vladislav Mladenov, Christian Mainka, Karsten Meyer zu Selhausen, Martin
Grothe and Jörg Schwenk",. 2018. CVE-2018-16042 (Universal Signature Forgery).
[51] Vladislav Mladenov, Christian Mainka, Karsten Meyer zu Selhausen, Martin
Grothe and Jörg Schwenk",. 2018. CVE-2018-18688 (Incremental Saving Attack).
[52] Vladislav Mladenov, Christian Mainka, Karsten Meyer zu Selhausen, Martin
Grothe and Jörg Schwenk",. 2018. CVE-2018-18689 (Signature Wrapping Attack).
[53] Wikipedia. 2019. Electronic signatures and law. https://en.wikipedia.org/wiki/
[54] Michal Zalewski. 2012. The tangled Web: A guide to securing modern web applica-
Electronic_signatures_and_law
tions. No Starch Press.
Session 1A: Attack ICCS ’19, November 11–15, 2019, London, United Kingdom14