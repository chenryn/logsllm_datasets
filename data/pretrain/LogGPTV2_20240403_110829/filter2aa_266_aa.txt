# SSRF Bible: Cheatsheet

If you have any questions, please post them in the comments!

**Revision 1.02**  
**Date: August 6, 2014**  
**Authors:**  
- @ONsec_Lab  
  [ENG] http://lab.onsec.ru
- Wallarm Research Team  
  blog.wallarm.com

---

## Table of Contents
1. **Basics**
   - Typical Attack Steps
   - File Descriptors Exploitation
   - URL Schema Support
   - Protocols for SSRF Smuggling
     - Examples
     - Apache Web Server HTTP Parser
     - Nginx Web Server HTTP Parser
2. **Vulnerabilities**
   - Basics
   - Examples
     - Google Docs
     - ZeroNights Hackquest Challenge
3. **Exploitation Tricks**
   - Bypassing Restrictions
   - Input Validation
   - Unsafe Redirects
   - DNS Pinning
   - PHP `fsockopen()` URL Parsing Tricks
   - Network Restrictions
   - Protocol Fingerprinting
4. **Retrieving Data**
   - Examples
     - HTTP Response Encapsulation into XML
     - Console cURL Wildcards URL Responses Concatenation
     - SMBRelay Exploitation
     - Original Request Data Sniffing
5. **Exploits**
   - Memcached
   - PHP-FPM
   - Syslog
   - Zabbix Agentd
   - Postgres
   - MongoDB
   - CouchDB
   - FFmpeg
6. **References**
   - Tools
   - Research Papers

---

## Basics

### Introduction to SSRF (Server-Side Request Forgery)
SSRF attacks allow an attacker to create requests from a vulnerable server to internal or external networks. By leveraging supported URI schemas, attackers can communicate with services running on various protocols. This document collects various options and examples (exploits) of such interactions. For more information, see related research papers.

### Typical Attack Steps
1. **Scan the Internal Network**: Identify the internal infrastructure that can be accessed.
2. **Collect Open Ports**: Determine open ports on the localhost and other internal hosts, typically using time-based methods.
3. **Identify Services/Daemons**: Use resources like wikis or daemon banners to identify services running on the identified ports.
4. **Determine SSRF Combination Type**:
   - Direct Socket Access (e.g., [example](link))
   - Sockets Client (e.g., Java URI, cURL, LWP, etc.)
5. **Direct Socket Access**: Identify CRLF and other injections for smuggling.
6. **Sockets Client**: Determine available URI schemas.
7. **Compare Schemas and Protocols**: Find potential smuggling opportunities by comparing available schemas with service/daemon protocols.
8. **Host-Based Auth Daemons**: Attempt to exploit host-based authentication daemons.

### File Descriptors Exploitation
This method is useful in cloud environments, shared hostings, and large infrastructures. Refer to slides 20-21 about FDs and 22-23 about ProcFS from [this paper](link).

#### Ways to Access File Descriptors
1. **Interpreters API** (e.g., `fd://` wrapper for PHP):
   - If the API or required functions are disabled, try loading a native extension (e.g., [PHP fdopen extension](https://github.com/dhotson/fdopen-php)).
2. **exec() Call from API** (e.g., `exec('echo 123 > &​​’);`):
   - Only access FDs without the `O_CLOEXEC` flag.
   - C program to scan available FDs: [list-open-fd.c](https://github.com/ONsec-Lab/scripts/blob/master/list-open-fd.c).
3. **ProcFS Files** (`/proc/​​/fd/​​`):
   - Note: You cannot access sockets through `/proc//fd/` files.

### URL Schema Support
| Language/Framework | gopher | Notes |
|--------------------|--------|-------|
| PHP                | Enabled |       |
| Java               | Enabled | Before last patches, w/o `\0` char |
| cURL               | Enabled |       |
| LWP                | Enabled |       |
| ASP.NET            | Enabled |       |

### Protocols for SSRF Smuggling
- **Examples**:
  - Apache Web Server HTTP Parser
  - Nginx Web Server HTTP Parser

## Vulnerabilities

### Basics
- **Examples**:
  - **Google Docs**
  - **ZeroNights Hackquest Challenge**

### Exploitation Tricks
- **Bypassing Restrictions**
- **Input Validation**
- **Unsafe Redirects**
- **DNS Pinning**
- **PHP `fsockopen()` URL Parsing Tricks**
- **Network Restrictions**
- **Protocol Fingerprinting**

### Retrieving Data
- **Examples**:
  - **HTTP Response Encapsulation into XML Formatted Response**
  - **Console cURL Wildcards URL Responses Concatenation**
  - **SMBRelay Exploitation**
  - **Original Request Data Sniffing**

### Exploits
- **Memcached**
- **PHP-FPM**
- **Syslog**
- **Zabbix Agentd**
- **Postgres**
- **MongoDB**
- **CouchDB**
- **FFmpeg**

## References
- **Tools**
- **Research Papers**

---

This revised version aims to provide a clearer, more organized, and professional presentation of the SSRF cheatsheet.