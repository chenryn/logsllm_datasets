从服务器成为主服务器的客户端之后，做的第
因为复制工作接下来的几个步骤都会以从服务器向主服务器发送命令请求的形式来进
而主服务器在接受（accept）从服
口如果主服务器向从服务器返回一个错误，那么表示主服务器暂时没办法处理从服务
口如果主服务器向从服务器返回了一个命令回复，但从服务器却不能在规定的时限
从服务器在发送PING命令之后将遇到以下三种情况的其中一种：
口因为复制工作接下来的几个步骤都必须在主服务器可以正常处理命令请求的状态下
口虽然主从服务器成功建立起了套接字连接，
这个PING命令有两个作用：
才能进行，通过发送 PING 命令可以检查主服务器能否正常处理命令请求。
器的命令请求，不能继续执行复制工作的后续步骤。当出现这种情况时，从服务器
创建连向主服务器的套接字。
佳，不能继续执行复制工作的后续步骤。当出现这种情况时，从服务器断开并重新
（timeout）内读取出命令回复的内容，那么表示主从服务器之间的网络连接状态不
读写状态是否正常。
但双方并未使用该套接字进行过任何通信，
步骤 3：发送 PING 命令
127.0.0.1:6379
主服务器
图15-14从服务器创建连向主服务器的套接字
127.0.0.1:6379
主服务器
通过发送 PING命令可以检查套接字的
图15-15主从服务器之间的关系
图15-16从服务器向主服务器发送 PING
127.0.0.1:6379
主服务器
返回命令回复
发送命令请求
套接字连接
PING
（主服务器的客户端）
127.0.0.1: 12345
127.0.0.1:12345
127.0.0.1:12345
从服务器
从服务器
从服务器
---
## Page 217
况有以下几种：
器发送命令 AUTH 10086，如图15-18所示。
选项的值为10086，那么从服务器将向主服务
参数为从服务器masterauth选项的值。
身份验证：
15.6.4步骤4：身份验证
以及各个情况的处理方式。
发送 PING命令时可能遇到的情况，
从服务器在身份验证阶段可能遇到的情
举个例子，如果从服务器masterauth
如果主服务器没有设置requirepass 选项，并且从服务器也没有设置 masterauth
从服务器在收到主服务器返回的“PONG”回复之后，下一步要做的就是决定是否进行
口 如果主服务器设置了requirepass 选项，但从服务器却没有设置 masterauth
口 如果从服务器通过 AUTH 命令发送的密码和主服务器requirepass 选项所设置的
在需要进行身份验证的情况下，从服务器将向主服务器发送一条AUTH命令，命令的
口 如果从服务器没有设置 masterauth 选项，那么不进行身份验证。
口如果从服务器设置了 masterauth 选项，那么进行身份验证。
流程图15-17 总结了从服务器在
口女
选项，那么主服务器将继续执行从服务器发送的命令，复制工作可以继续进行。
选项，那么主服务器将返回一个NOAUTH 错误。另一方面，如果主服务器没有设置
password 错误。
与此相反，如果主从服务器设置的密码不相同，那么主服务器将返回一个invalid
密码相同，那么主服务器将继续执行从服务器发送的命令，复制工作可以继续进行。
工作的下个步骤。
从服务器可以继续执行复制
命令请求，在这种情况下，
从服务器（客户端）发送的
并且主服务器可以正常处理
之间的网络连接状态正常
回复，那么表示主从服务器
如果从服务器读取到"PONG"
SCRIPT KILL Or SHUTDOWN NOSAVE.错误。
器返回的 BUsY Redisis busy running a script. You can only call
运行的脚本，那么当从服务器向主服务器发送PING命令时，从服务器将收到主服务
断开并重新创建连向主服务器的套接字。比如说，如果主服务器正在处理一个超时
图15-17
继续执行下一个步骤
从服务器向主服务器发送 PING 命令
从服务器在发送PING 命令时可能遇上的情况
主服务器返回“PONG"？
图15-18从服务器向主服务器验证身份
127.0.0.1:6379
主服务器
AUTH 10086
或者主服务器返回一个错误
读取 PING 命令的回复超时
断开并重连主服务器
香
第15章 复
127.0.0.1:12345
从服务器
制+213
---
## Page 218
214·第三部分多机数据库的实现
slave_listening_port 属性中:
送命令 REPLcONF listening-port 12345，如图 15-20 所示。
number>，向主服务器发送从服务器的监听端口号。
15.6.5
制，直到身份验证通过，或者从服务器放弃执行复制为止。
例如在我们的例子中，从服务器的监听端口为12345，那么从服务器将向主服务器发
在身份验证步骤之后，从服务器将执行命令 REPLCONF
主服务器在接收到这个命令之后，会将端口号记录在从服务器所对应的客户端状态的
流程图15-19总结了从服务器在身份验证阶段可能遇到的情况，以及各个情况的处理方式。
所有错误情况都会令从服务器中止目前的复制工作，并从创建套接字开始重新执行复
requirepass 选项，但从服务器却设置了masterauth 选项，那么主服务器将返
步骤5：发送端口信息
执行复制工作的下一个步骤
127.0.0.1:6379
主服务器
主从服务器都没有设置密码
图15-19从服务器在身份验证阶段可能遇上的情况
无须进行身份验证
图 15-20从服务器向主服务器发送监听端口
进人身份验证阶段
REPLCONF listening-port 12345
主从服务器设置了不同的密码
主从服务器设置的密码相同
进行身份验证
但从服务器没有设置密码
但从服务器设置了密码
主服务器没有设置密码
主服务器设置了密码
验证成功
否，
是
或者
或者
否
 listening-port  INFO replication
repl_backlog_first_byte_offset:2
repl_backlog_active:1
 slave _listening _
”redisClient;
typedef struct redisclient ↑
户端，才能向从服务器发送保存在复制积压缓冲区里面的写命令。
role:master
户端，才能将保存在缓冲区里面的写命令发送给从服务器执行。
11从服务器的监听端口号
!.··
_port属性目前唯一的作用就是在主服务器执行INFOreplication
图15-21
用客户端状态记录从服务器的监听端口
slave_listening_port
redisClient
12345
·
第 15章 复 
·215
---
## Page 220
216·第三部分多机数据库的实现
们可以看到相应从服务器最后一次向主服务器发送REPLCONFACK命令距离现在过了多少秒：
务器就知道主从服务器之间的连接出现问题了。
正常：如果主服务器超过一秒钟没有收到从服务器发来的REPLCONFACK命令，那么主服
15.7.1
15.7
可以保证主从服务器一直保持一致了。
执行的写命令发送给从服务器，而从服务器只要一直接收并执行主服务器发来的写命令，就
15.6.7
令传播操作的基础。
通过向主服务器发送 INFO replication 命令，在列出的从服务器列表的lag一栏中，我
当完成了同步之后，主从服务器就会进人命令传播阶段，这时主服务器只要一直将自己
slavel:ip=127.0.0.1,port=56789,state=online,offset=197,lag=15 # 15 秒之前发送过 REPLcONF
slave0 :ip=127.0.0.1,port=12345,state=online,offset=211,lag=0 # 别刚发送过 REPLcoNF ACK
127.0.0.1:6379> INFO replication
以下三个小节将分别介绍这三个作用。
 辅助实现 min-slaves 选项。
发送REPLCONFACK命令对于主从服务器有三个作用：
其中replication_offset是从服务器当前的复制偏移量。
在命令传播阶段，从服务器默认会以每秒一次的频率，向主服务器发送命令：
以上就是Redis 2.8或以上版本的复制功能的实现步骤。
role:master
# Replication
口检测命令丢失。
口检测主从服务器的网络连接状态。
REPLcoNF ACK 
心跳检测
检测主从服务器的网络连接状态
步骤7：命令传播
ACK 命令
命令
（从服务器的客户端）
127.0.0.1;6379
主服务器
图15-22主从服务器之间互为客户端
返回命令回复
发送命令请求/
返回命令回复
发送命令请求/
(主服务器的客户端)
127.0.0.1:12345
从服务器
---
## Page 221
量会被更新为 233，而从服务器的复制偏移量仍然为 200，如图 15-24 所示。
会出现不一致，主服务器的复制偏移
那么主从服务器之间的复制偏移量就
却因为网络故障而在传播的途中丢失
新到了233，并尝试向从服务器传播
为 33字节），将自己的复制偏移量更
量都是 200，如图15-23 所示。
状态的主从服务器，它们的复制偏移
面找到从服务器缺少的数据，并将这些数据重新发送给从服务器。
己的复制偏移量，然后主服务器就会根据从服务器提交的复制偏移量，在复制积压缓冲区里
主服务器发送REPLCONF ACK命令时，主服务器将发觉从服务器当前的复制偏移量少于
lag值。
秒时，主服务器将拒绝执行写命令，这里的延迟值就是上面提到的 INFO replication 命令的
SETkeyvalue（协议格式的长度
15.7.3检测命令丢失
务器在不安全的情况下执行写命令。
15.7.2
明主从服务器之间的连接出现了故障。
在这之后，当从服务器向主服务器发送 REPLCONF ACK命令的时候，主服务器会察觉
如果这时主服务器执行了命令
举个例子，假设有两个处于一致
Redis 的 min-slaves-to-write 和 min-slaves-max-lag 两个选项可以防止主服
如果因为网络故障，主服务器传播给从服务器的写命令在半路丢失，那么当从服务器向
那么在从服务器的数量少于3个，或者三个从服务器的延迟（lag）值都大于或等于10
min-slaves-to-write 3
举个例子，如果我们向主服务器提供以下设置：
在一般情况下，lag 的值应该在0 秒或者1秒之间跳动，如果超过1秒的话，那么说
repl_backlog_histlen:210
repl_backlog_active:1
master_repl_offset:211
epl
辅助实现 min-slaves 配置选项
first
byte_offset:2
复制偏移量为233
主服务器
图15-24
复制偏移量为200
图15-23主从服务器处于一致状态
主服务器
：主从服务器处于不一致状态
复制偏移量为200
从服务器
第 15章 复 
复制偏移量为200
从服务器
自
·217
---
## Page 222
218·第三部分多机数据库的实现
15.8重点回顾
部分重同步操作则在主从服务器断线并重连之后执行。
相似，这两个操作的区别在于，补发缺失数据操作在主从服务器没有断线的情况下执行，而
行这个命令可以将自己更新至主服务器当前所处的状态，如图15-25 所示。
了，于是主服务器会再次向从服务器传播命令 SETkeyvalue，从服务器通过接收并执
里面复制偏移量为 201至 233的数据（也即是命令 SETkeyvalue）在传播过程中丢失
使用 2.8 或以上版本的 Redis。
不会向从服务器补发丢失的数据，所以为了保证复制时主从服务器的数据一致性，最好
本以前，即使命令在传播过程中丢失，主服务器和从服务器都不会注意到，主服务器更
口主服务器通过向从服务器传播命令来更新从服务器的状态，保持主从服务器一致，
Redis 2.8 以前的复制功能不能高效地处理断线后重复制情况，但 Redis 2.8 新添加的
注意，主服务器向从服务器补发缺失数据这一操作的原理和部分重同步操作的原理非常
口在复制操作刚开始的时候，从服务器会成为主服务器的客户端，并通过向主服务器
口 部分重同步通过复制偏移量、复制积压缓冲区、服务器运行 ID 三个部分来实现。
部分重同步功能可以解决这个问题。
REPLCONF ACK 命令和复制积压缓冲区都是 Redis 2.8 版本新增的，在 Redis 2.8 版
而从服务器则通过向主服务器发送命令来进行心跳检测，以及命令丢失检测。
的客户端。
发送命令请求来执行复制步骤，而在复制操作的后期，主从服务器会互相成为对方
复制偏移量为233
主服务器
图15-25主服务器向从服务器补发缺失的数据
Redis 2.8 版本以前的命令丢失
 REPLCONF ACK 200
SET key value
复制偏移量为233
从服务器
---
## Page 223
线的服务器用虚线表示）。
到 server1已下线，如图 16-2所示（下
操作将被中止，并且 Sentinel系统会察觉
server3、server4 对主服务器的复制
人下线状态，那么从服务器 server2、