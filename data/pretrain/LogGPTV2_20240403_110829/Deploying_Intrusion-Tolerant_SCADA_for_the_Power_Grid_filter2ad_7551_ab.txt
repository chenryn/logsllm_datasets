rebuild the state by contacting the ﬁeld devices. In contrast,
a traditional BFT system cannot recover from this situation.
Note that this property only applies to the SCADA master’s
view of the active system state; SCADA historians are more
similar to traditional database applications and cannot recover
historical state automatically after an assumption breach.
B. Low-level Protection
While BFT replication overcomes SCADA master compro-
mises, it relies on several assumptions that must be supported
to provide the promised resilience; if an attacker can subvert
these assumptions,
the intrusion-tolerant protocols are not
useful. First, the assumption that no more than the tolerated
threshold of replicas (f) will be compromised must be sup-
ported by securing the operating system. While we employ
application-level diversity,
if all replicas run an operating
system with known vulnerabilities, those can be exploited by
an attacker to gain control of the entire system. Because of this,
we deploy all system components (SCADA master replicas,
HMI, RTU/PLC proxy) on the latest minimal CentOS server
installations. This required considerable work to port system
components designed to run on Ubuntu desktop installations,
namely the HMI graphics packages and the PLC communi-
cation libraries. The CentOS server is essentially closed by
default, with only external communication that is speciﬁcally
allowed being permitted, while the Ubuntu desktop runs many
preinstalled services and has an open philosophy by default.
Second, there is an assumption that system components can
communicate. Speciﬁcally, the replication protocol assumes
that 2f + k + 1 correct replicas can communicate with one
another, and the SCADA system assumes that at least one
correct SCADA master can communicate with the HMI and
RTU/PLC proxies and that the proxies can communicate with
their RTUs and PLCs. We support this assumption through
a secure network setup. As the ﬁrst step, we conﬁgured the
ﬁrewall of each machine to block all incoming and outgoing
trafﬁc other than the speciﬁc IP address and port combinations
used by our protocols and turned off IPv6 (since we were not
using it). Next, we took steps to prevent man-in-the-middle
attacks: on each machine, we set up a static mapping of MAC
addresses to IP addresses and turned off the default ability for
a NIC to answer ARP requests for an IP address assigned
to another NIC on the same machine. On the switch, we
conﬁgured a static mapping of MAC addresses to switch ports.
To provide further defense-in-depth, we physically isolate
the network used for the SCADA masters’ replication protocol
from the external network used to communicate with the other
system endpoints. This prevents an external attacker from
disrupting the replication protocol; they must ﬁrst compromise
one of the replicas to gain network access. For the connection
between the PLC proxy and its PLC, we use a physical cable,
as opposed to a logical connection through a network switch
to ensure that it is not subject to any outside interference.
In Section IV, we show how these design choices were
crucial in preventing an experienced red team from interfering
with our SCADA system’s operation.
C. Operations-Based Intrusion Detection
Due to the operational nature of SCADA environments,
network intrusion detection must be applied differently than in
traditional enterprise networks. First, the monitoring systems
must be completely non-invasive to avoid affecting SCADA
availability; power plant engineers approved the use of the
330
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:51:42 UTC from IEEE Xplore.  Restrictions apply. 
MANA IDS only because it operated out-of-band, receiving a
passive network trafﬁc packet capture. Second, the IDS must
handle the myriad of custom and proprietary protocols used
by equipment vendors. Traditional signature-based and deep-
packet trafﬁc inspectors are not equipped to effectively inspect
unknown, proprietary protocols. Also, as SCADA systems
start to add encryption (as our intrusion-tolerant protocols
do), traditional network IDS will have even less utility. To
overcome this obstacle, MANA uses machine learning and
anomaly-based intrusion detection methods, which do not rely
on proprietary protocol knowledge or unencrypted trafﬁc. Our
preparation for each deployment involved training the machine
learning models on the relevant networks.
IV. RED-TEAM EXPERIMENT
In April 2017, our system went through a red team experi-
ment at Paciﬁc Northwest National Laboratory (PNNL), where
an experienced hacker team from Sandia National Laboratories
with nation-state-level expertise attacked both a commercial
SCADA system set up according to NIST-recommended best
practices and our intrusion-tolerant SCADA system.
A. Setup and Preparation
Figure 3 shows the network architecture that was set up by
PNNL to model a typical power company network with input
from the Hawaiian Electric Company, which hosted the test
deployment in Section V. This architecture includes an enter-
prise network that hosts the SCADA historian (PI Server) as
well as other machines used in day-to-day business operation.
The enterprise network is separated by a ﬁrewall from the
operations network where the SCADA system operates and
communicates with ﬁeld devices.
This experiment used two parallel operations networks: the
ﬁrst (on the right in Figure 3) hosted a commercial SCADA
system, while the second (on the left in Figure 3) hosted Spire.
Spire was conﬁgured with four SCADA master replicas to
withstand one intrusion (note that the system was not yet set
up to support automatic proactive recovery). As described in
Section III-B, replicas communicated with one another on the
isolated Spines Internal network and with the other system
components on the Spines External network. A PLC using
the Modbus communication protocol was connected to the
network through a direct cable connection to the PLC proxy.
The MANA IDS was run separately on an out-of-band
network that received the network packet capture from the
enterprise and two parallel operations networks. Due to the
distinct network characteristics of the three networks, we chose
to run three independent MANA instances, labeled MANA 1-
3 in Figure 3, and to develop three speciﬁc network models
instead of a single generic one.
Prior to the deployment, we received a speciﬁcation of the
PLC from the PNNL engineers. To integrate the PLC with
our system, we developed a new HMI shown in Figure 4.
This HMI displayed an (emulated) power topology controlled
by the PLC, which consisted of seven breakers managing the
ﬂow of power to four buildings. We integrated this scenario
Fig. 3. Experimental setup for red team exercise.
Fig. 4. HMI visualization of power topology for red team experiment.
into our SCADA master so that it could maintain and transfer
the state correctly. In addition to this physical PLC, Spire
controlled ten emulated PLCs modeling power distribution to
several substations and remote sites.
The deployment began with one week of on-site setup and
integration. During this time, we installed our machines on the
operations network, performed the low-level network security
steps described in Section III-B, and trained the MANA IDS
on the baseline trafﬁc of both the commercial SCADA system
and Spire. MANA’s training was based on a 24-hour network
packet capture that occurred toward the end of the setup week,
once the three networks had been set up and ﬁnalized. Ideally,
331
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:51:42 UTC from IEEE Xplore.  Restrictions apply. 
network trafﬁc collection should occur for a longer period
to ensure all trafﬁc characteristics are accounted for, but the
experiment timeline only allowed for one day. On-site, we
were also required to develop an automatic update generation
tool for Spire that would cycle through the breakers, ﬂipping
each periodically in a predetermined cycle that the red team
would attempt to disrupt.
The rules of engagement for the experiment were that once
the systems were set up and the experiment began, we were
able to passively monitor the system’s activity but were not
allowed to take any action. The attacks on the system were
carried out over the course of one week by the off-site Sandia
red team, which included about four members.
B. Red Team Experience
Commercial System Attacks. The Sandia red team was
ﬁrst given access to the enterprise network and began their
attacks on the commercial SCADA system. While the red
team was not expected to be able to cause any damage
from that position (due to the ﬁrewall separating it from the
operations network), surprisingly, within only a few hours,
they were able to access the operations network through a
man-in-the-middle attack. Due to the lack of internal security
in the standard commercial architecture, once they accessed
the operations network, the red team was able to directly send
commands to the PLC. They performed a memory dump of
the PLC to obtain its conﬁguration and then uploaded modiﬁed
conﬁguration ﬁles, enabling them to control the PLC.
In the next stage, the red team was given direct access to
the operations network of the commercial system. From there,
they were additionally able to disrupt communication between
the HMI and the SCADA server, sending modiﬁed updates to
the HMI and preventing correct updates from being received.
These successful attacks clearly demonstrated that the nation’s
power grid is vulnerable; current best practices provide only
weak protection against a nation-state-level attacker.
Spire System Attacks. The red team next attempted to
attack the Spire system, starting from the same position in
the enterprise network from which they had taken control
of the commercial system’s PLC. However, after a couple
hours, they reported that they had no visibility into the system
and asked to be placed directly on the operations network.
Over two full work days (9am-4pm), we observed the red
team launching network attacks including port scanning, ARP
poisoning, IP address spooﬁng, and denial of service attempts
involving bursts of trafﬁc. Other attacks that were not directly
observable may have been attempted as well. However, due
largely to the secure network setup described in Section III-B
and Spines authentication and encryption of all trafﬁc, none
of these attacks were successful. The static mappings of MAC
addresses to IP addresses and switch ports were especially
important in preventing the man-in-the-middle attacks that
the red team used in the commercial system, as was the
architectural choice of placing the PLC behind a secure proxy,
rather than directly on the network.
Finally, on the third day of the experiment, we conducted
an excursion in which the red team was given gradually
increasing control of one of the SCADA master replicas (a
situation Spire is designed to withstand) as well as access to
Spire’s source code. This excursion took place over one day
(9am-3pm) and began with user-level access to one replica.
The red team ﬁrst stopped the Spines daemons running on
this replica, preventing it from communicating with the rest
of the system, but this had no effect; the replicated system
can tolerate the loss of any one replica. When the red team
restarted the Spines daemon, they ran a custom version they
had modiﬁed to exploit a vulnerability found in the latest
(at the time) open-source version of the Spines codebase;
however this had no effect due to newly added encryption that
prevented the modiﬁed daemon from communicating with the
other replicas.
The red team then tried to gain root-level access through
known exploits of a shared memory vulnerability in the
Linux kernel (dirtycow) and the SSH daemon, but neither was
successful due to the use of the latest version of CentOS that
had removed those vulnerabilities.
In their ﬁnal user-level attack, the red team patched the
Spines binary on their replica to add in the exploit they had
discovered. While this patched version was accepted as a valid
member of the network, the attack did not have an effect on
the other Spines daemons, as it was in a portion of the code
that is disabled when Spines is run in intrusion-tolerant mode.
At that point (about halfway through the day), the red team
was given root access to the machine as well as the latest
system source code. They primarily focused on Spines, testing
the code in their own lab and attempting attacks there to try to
break the fairness properties of the intrusion-tolerant network
as a trusted member of the network. Despite this level of
access, the red team was still unable to disrupt Spire’s oper-
ation, demonstrating the effectiveness of its intrusion-tolerant
approach. While this result does not mean that given more
time, the red team would not have been able to cause damage,
it shows that there is a signiﬁcant difference between current
industry best practices and a research-based solution designed
to withstand sophisticated system and network attacks.
MANA Experience. During the red team experiment,
MANA’s machine-learning-based intrusion detection success-
fully detected about 79% of the attacks carried out by the
red team, which was signiﬁcantly better than the signature
and anomaly-based IDSs (about 2% and 28%, respectively).
However, MANA’s false positive rate (about 50%) was too
high for it to be an effective tool for system operators in this
domain; improving the IDS to reduce false positives was a
major objective for the second event. Additional details on
the IDS performance can be found in the DoD ESTCP reports
for the project [17], [18].
V. POWER PLANT TEST DEPLOYMENT
In January 2018, we worked with the Hawaiian Electric
Company (HECO) to deploy our system in a “mothballed”
steam-turbine power plant in Honolulu. While this plant was
332
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 10:51:42 UTC from IEEE Xplore.  Restrictions apply. 
of the red team experiment. The six SCADA master replicas
were easily installed in an existing rack in the Distributed
Control System (DCS) room at the power plant, showing that
the physical deployment of intrusion-tolerant replication is no
longer a large practical barrier. The physical footprint of the
system can be seen in Figures 5 and 6.
In addition to the physical part of the system, there was
again an emulated portion, including the same ten emulated
PLCs as in the red team experiment (for the larger distribution
scenario), as well as six new emulated PLCs modeling a power
generation scenario that we created and adapted based on input
from the HECO engineers.
MANA was set up similarly to the red team experiment but
only received network trafﬁc from the operations network (and
not from an enterprise network). The plant networked systems
employed proprietary SCADA communication protocols that
utilized short constant system updates that proved to be ideal
for machine learning and anomaly modeling; training required
only a single 12-hour packet capture.
After setup and integration with the power plant, Spire
and MANA were continuously deployed without interruption
or adverse effects on the plant systems for six days. Spire
successfully managed the small power topology (along with
the two emulated scenarios), displaying the system status
and allowing it to be controlled via HMIs in three locations
throughout the plant. MANA provided power plant engineers
with complete network visibility and situational awareness.
During the HECO test deployment, MANA’s machine-
learning-based intrusion detection results greatly improved
compared to the red team experiment. MANA detected all
cyber-attacks against the HECO power plant Distributed Con-
trol System (DCS) without any false positives. However, the
penetration testing was limited due to the operational test
constraints within the HECO facility. The cyber-attacks were
carried out by a Certiﬁed Ethical Hacker team using open
source penetration testing tools, and these attacks were limited
compared with the open-ended red team experiment. Despite
these limitations, the improved performance in MANA was
obvious and most likely attributable to a newly implemented
internal correlation system that considered the output of sev-
eral different machine-learning algorithms.
On the last day, plant engineers deployed a measurement de-
vice to evaluate the end-to-end reaction time of the commercial
SCADA system in the power plant and of Spire. The device
periodically ﬂipped a breaker and used two sensors to detect
when the HMI screens of the two systems updated to reﬂect the
change. For this test, we adapted the HMI to include a large
box that changed from black to white based on the breaker
state so that the sensor could easily detect the HMI update.
The measurements showed that Spire successfully met the