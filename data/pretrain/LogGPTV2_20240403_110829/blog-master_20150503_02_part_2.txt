digoal=# CREATE TEXT SEARCH DICTIONARY my_synonym (  
    TEMPLATE = synonym,  
    SYNONYMS = digoal  
);  
```  
我们先不修改配置，看看分词结果：  
```  
digoal=# select * from to_tsvector('english','刘德华 张学友 黎明 郭富城 德哥 周正中');  
                          to_tsvector                            
---------------------------------------------------------------  
 '刘德华':1 '周正中':6 '张学友':2 '德哥':5 '郭富城':4 '黎明':3  
(1 row)  
```  
修改english的word类型的字典关系，将匿名字典放最前面。  
```  
digoal=# ALTER TEXT SEARCH CONFIGURATION english                                        
    ALTER MAPPING FOR word  
    WITH my_synonym, english_stem;  
ALTER TEXT SEARCH CONFIGURATION  
```  
现在分词结果变了，都替换成了我想要的结果：  
```  
digoal=# select * from to_tsvector('english','刘德华 张学友 黎明 郭富城 德哥 周正中');  
           to_tsvector             
---------------------------------  
 'digoal':5,6 '四大天王':1,2,3,4  
(1 row)  
```  
注意匿名字典一定要放前面，否则english_stem先匹配了，就不会有替换效果了。  
Thesaurus是synonym字典的扩展，支持的是多词和缩写的对应关系，并不是多对一的关系。  
例如  
```  
$ vi digoal.ths  
刘德华 郭富城 黎明 张学友 : 四大天王  
德哥 周正中 : digoal  
as soon as possible : ASAP  
```  
这仅仅代表"刘德华 郭富城 黎明 张学友"按照顺序出现时，匹配为四大天王。  
这样不好理解，但是换个词可能更好理解，例如as soon as possible替换为首字母缩写ASAP。  
```  
digoal=# CREATE TEXT SEARCH DICTIONARY thesaurus_simple (  
    TEMPLATE = thesaurus,  
    DictFile = digoal,   
    Dictionary = pg_catalog.english_stem);  
CREATE TEXT SEARCH DICTIONARY  
digoal=# ALTER TEXT SEARCH CONFIGURATION english  
    ALTER MAPPING FOR asciiword, word                                    
    WITH thesaurus_simple,english_stem;  
ALTER TEXT SEARCH CONFIGURATION  
```  
测试：  
```  
digoal=# select * from ts_debug('english','as soon as possible');  
ERROR:  thesaurus sample word "as" is a stop word (rule 3)  
HINT:  Use "?" to represent a stop word within a sample phrase.  
CONTEXT:  SQL function "ts_debug" statement 1  
digoal=# \q  
postgres@db-192-168-173-33-> exit  
logout  
[root@db-192-168-173-33 tsearch_data]# vi digoal.ths   
刘德华 郭富城 黎明 张学友 : 四大天王  
德哥 周正中 : digoal  
? soon ? possible : ASAP  
```  
```  
digoal=> select * from to_tsvector('english','as soon as possible');  
 to_tsvector   
-------------  
 'asap':1  
(1 row)  
digoal=> select * from ts_debug('english','as soon as possible');  
   alias   |   description   |  token   |          dictionaries           |  dictionary  |  lexemes    
-----------+-----------------+----------+---------------------------------+--------------+-----------  
 asciiword | Word, all ASCII | as       | {thesaurus_simple,english_stem} | english_stem | {}  
 blank     | Space symbols   |          | {}                              |              |   
 asciiword | Word, all ASCII | soon     | {thesaurus_simple,english_stem} | english_stem | {soon}  
 blank     | Space symbols   |          | {}                              |              |   
 asciiword | Word, all ASCII | as       | {thesaurus_simple,english_stem} | english_stem | {}  
 blank     | Space symbols   |          | {}                              |              |   
 asciiword | Word, all ASCII | possible | {thesaurus_simple,english_stem} | english_stem | {possibl}  
(7 rows)  
```  
一定要完全匹配才能替换  
```  
digoal=# select * from to_tsvector('english','德哥 周正中');  
 to_tsvector   
-------------  
 'digoal':1  
(1 row)  
digoal=# select * from to_tsvector('english','郭富城 刘德华 张学友 黎明');  
                to_tsvector                  
-------------------------------------------  
 '刘德华':2 '张学友':3 '郭富城':1 '黎明':4  
(1 row)  
digoal=# select * from to_tsvector('english','刘德华 郭富城 黎明 张学友');  
 to_tsvector    
--------------  
 '四大天王':1  
(1 row)  
?替换的是stop word, 所以会这样, the,as都是stop word  
digoal=> select * from to_tsvector('english','as soon the possible');  
 to_tsvector   
-------------  
 'asap':1  
(1 row)  
但是1是uint  
digoal=> select * from to_tsvector('english','as soon 1 possible');  
        to_tsvector           
----------------------------  
 '1':3 'possibl':4 'soon':2  
(1 row)  
digoal=> select * from ts_debug('english','as soon 1 possible');  
...  
 uint      | Unsigned integer | 1        | {simple}                        | simple       | {1}  
```  
4\. 如何添加或修改解析过程用的中文词组  
例如我们要扩充中文词组，这个和中文的parser有关，例如用到zhparser的话，它这里用的是xdb，所以加词组要修改的实际就是xdb。  
中文分词的安装过程参考  
[《PostgreSQL chinese full text search 中文全文检索》](../201403/20140324_01.md)    
假设环境已经安装好了，加词组的例子：  
```  
$PG_HOME/share/tsearch_data目录中有中文词典如下：  
-rw-r--r-- 1 root root  14M May  3 14:32 dict.utf8.xdb  
```  
创建中文parser：  
```  
digoal=# create extension zhparser;  
CREATE EXTENSION  
digoal=# select * from pg_ts_parser ;  
 prsname  | prsnamespace |  prsstart   |    prstoken     |  prsend   |  prsheadline  |  prslextype     
----------+--------------+-------------+-----------------+-----------+---------------+---------------  
 default  |           11 | prsd_start  | prsd_nexttoken  | prsd_end  | prsd_headline | prsd_lextype  
 zhparser |        25956 | zhprs_start | zhprs_getlexeme | zhprs_end | prsd_headline | zhprs_lextype  
(2 rows)  
digoal=> CREATE TEXT SEARCH CONFIGURATION zhcfg (PARSER = zhparser);  
CREATE TEXT SEARCH CONFIGURATION  
```  
目前没有配置lexeme类型和字典的对应关系。  
```  
digoal=> \dF+ zhcfg  
Text search configuration "digoal.zhcfg"  
Parser: "public.zhparser"  
 Token | Dictionaries   
-------+--------------  
```  
调试中文parser, 可以看到匹配的类型为e  
```  
digoal=> select * from ts_debug('zhcfg','as soon the possible');  
 alias | description |  token   | dictionaries | dictionary | lexemes   
-------+-------------+----------+--------------+------------+---------  
 e     | exclamation | as       | {}           |            |   
 e     | exclamation | soon     | {}           |            |   
 e     | exclamation | the      | {}           |            |   
 e     | exclamation | possible | {}           |            |   
(4 rows)  
```  
但是因为没有配置类型和字典的对应关系, 所以看不到输出.  
```  
digoal=> select * from to_tsvector('zhcfg','as soon the possible');  
 to_tsvector   
-------------  
(1 row)  
```  
zhparser支持哪些类型呢? 如下:  
```  
digoal=> select * from pg_catalog.ts_token_type('zhparser');  
 tokid | alias |          description            
-------+-------+-------------------------------  
    97 | a     | adjective  
    98 | b     | differentiation (qu bie)  
    99 | c     | conjunction  
   100 | d     | adverb  
   101 | e     | exclamation  
   102 | f     | position (fang wei)  
   103 | g     | root (ci gen)  
   104 | h     | head  
   105 | i     | idiom  
   106 | j     | abbreviation (jian lue)  
   107 | k     | head  
   108 | l     | tmp (lin shi)  
   109 | m     | numeral  
   110 | n     | noun  
   111 | o     | onomatopoeia  
   112 | p     | prepositional  
   113 | q     | quantity  
   114 | r     | pronoun  
   115 | s     | space  
   116 | t     | time  
   117 | u     | auxiliary  
   118 | v     | verb  
   119 | w     | punctuation (qi ta biao dian)  
   120 | x     | unknown  
   121 | y     | modal (yu qi)  
   122 | z     | status (zhuang tai)  
(26 rows)  
```  
创建对应关系, 所有类型使用英语和simple字典, 使用英语词典可以帮助我们去除一些无意义的词如as the this a等.  
```  
digoal=>  ALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z WITH english_stem, simple;  
ALTER TEXT SEARCH CONFIGURATION  
```  
现在可以正常的匹配字典了.  
```  
digoal=> select * from ts_debug('zhcfg','as soon the possible 周正中 德哥 刘德华');  
 alias | description |  token   |     dictionaries      |  dictionary  |  lexemes    
-------+-------------+----------+-----------------------+--------------+-----------  
 e     | exclamation | as       | {english_stem,simple} | english_stem | {}  
 e     | exclamation | soon     | {english_stem,simple} | english_stem | {soon}  
 e     | exclamation | the      | {english_stem,simple} | english_stem | {}  
 e     | exclamation | possible | {english_stem,simple} | english_stem | {possibl}  
 q     | quantity    | 周       | {english_stem,simple} | english_stem | {周}  
 v     | verb        | 正中     | {english_stem,simple} | english_stem | {正中}  
 n     | noun        | 德哥     | {english_stem,simple} | english_stem | {德哥}  
 n     | noun        | 刘德华   | {english_stem,simple} | english_stem | {刘德华}  
(8 rows)  
digoal=> select * from to_tsvector('zhcfg','as soon the possible 周正中 德哥 刘德华');  
                       to_tsvector                          
----------------------------------------------------------  
 'possibl':4 'soon':2 '刘德华':8 '周':5 '德哥':7 '正中':6  
(1 row)  
```  
很明显，我的名字不在中文parser词典中，我现在要加进去。  
修改它：dict.utf8.xdb  
```  
# wget http://www.xunsearch.com/scws/down/phptool_for_scws_xdb.zip  
# unzip phptool_for_scws_xdb.zip  
  inflating: make_xdb_file.php         
  inflating: readme.txt                
  inflating: xdb.class.php             