197
1.7.2 Dalvik 指令集
Dalvik opcodes
android逆向分析之smali语法
198
1.7.3 ARM 汇编基础
1.7.3 ARM 汇编基础
199
1.7.4 Android 常用工具
1.7.4 Android 常用工具
这里先介绍一些好用的小工具，后面会介绍大杀器 JEB、IDA Pro 和 Radare2。
常用工具
smali/baksmali
地址：https://github.com/JesusFreke/smali
smali/baksmali 分别用于汇编和反汇编 dex 格式文件。
使用方法：
$ smali assemble app -o classes.dex
$ baksmali disassemble app.apk -o app
当然你也可以汇编和反汇编单个的文件，如汇编单个 smali 文件，反汇编单个
classes.dex 等，使用命令 baksmali help input 查看更多信息。
baksmali 还支持查看 dex/apk/oat 文件里的信息：
$ baksmali list classes app.apk
$ baksmali list methods app.apk | wc -l
Apktool
地址：https://github.com/iBotPeaches/Apktool
Apktool 可以将资源文件解码为几乎原始的形式，并在进行一些修改后重新构建它
们，甚至可以一步一步地对局部代码进行调试。
解码：
200
1.7.4 Android 常用工具
$ apktool d app.apk -o app
重打包：
$ apktool b app -o app.apk
dex2jar
地址：https://github.com/pxb1988/dex2jar
dex2jar 可以实现 dex 和 jar 文件的互相转换，同时兼有 smali/baksmali 的功能。
使用方法：
$ ./d2j-jar2dex.sh classes.dex -o app.jar
$ ./d2j-jar2dex.sh app.jar -o classes.dex
enjarify
地址：https://github.com/Storyyeller/enjarify
enjarify 与 dex2jar 差不多，它可以将 Dalvik 字节码转换成相对应的 Java 字节码。
使用方法：
$ python3 -O -m enjarify.main app.apk
JD-GUI
地址：https://github.com/java-decompiler/jd-gui
JD-GUI 是一个图形界面工具，可以直接导入 .class 文件，然后查看反编译后的
Java 代码。
CTF
201
1.7.4 Android 常用工具
地址：http://www.benf.org/other/cfr/
一个 Java 反编译器。
Krakatau
地址：https://github.com/Storyyeller/Krakatau
用于 Java 反编译、汇编和反汇编。
反编译
$ python2 Krakatau\decompile.py [-nauto] [-path PATH] [-out
OUT] [-r] [-skip] target
汇编
$ python2 Krakatau\assemble.py [-out OUT] [-r] [-q] target
反汇编
$ python2 Krakatau\disassemble.py [-out OUT] [-r] [-roundtri
p] target
Simplify
地址：https://github.com/CalebFenton/simplify
通过执行一个 app 来解读其行为，然后尝试优化代码，使人更容易理解。
Androguard
地址：https://github.com/androguard/androguard
Androguard 是使用 Python 编写的一系列工具，常用于逆向工程、病毒分析等。
输入 androlyze.py -s 可以打开一个 IPython shell，然后就可以在该 shell 里进
行所有操作了。
202
1.7.4 Android 常用工具
a, d, dx = AnalyzeAPK("app.apk")
a 表示一个 APK 对象
关于 APK 的所有信息，如包名、权限、AndroidManifest.xml和资源文件
等。
d 表示一个 DalvikVMFormat 对象
dex 文件的所有信息，如类、方法、字符串等。
dx 表示一个 Analysis 对象。
包含一些特殊的类，classes.dex 的所有信息。
Androguard 还有一些命令行工具：
androarsc：解析资源文件
androauto：自动分析
androaxml：解析xml文件
androdd：反编译工具
androdis：反汇编工具
androgui：图形界面
203
二、工具篇
第二章 工具篇
虚拟化分析环境
2.1.1 VirtualBox
2.1.2 QEMU
2.1.3 Docker
2.1.4 Unicorn
静态分析工具
2.2.1 radare2
2.2.2 IDA Pro
2.2.3 JEB
2.2.4 Capstone
2.2.5 Keystone
动态分析工具
2.3.1 GDB
2.3.2 OllyDbg
2.3.3 x64dbg
2.3.4 WinDbg
2.3.5 LLDB
其他工具
2.4.1 pwntools
2.4.2 zio
2.4.3 metasploit
2.4.4 binwalk
2.4.5 Burp Suite
2.4.6 Wireshark
2.4.7 Cuckoo Sandbox
204
2.1.1 VirtualBox
2.1.1 VirtualBox
虚拟化环境
硬件虚拟化环境
物理机 Manjaro 17.02
Windows 虚拟机
Linux 虚拟机
工具安装脚本
虚拟化环境
虚拟化是资源的抽象化，是单一物理资源的多个逻辑表示，具有兼容性、隔离的优
良特性。
在恶意代码和漏洞分析过程中常常需要使用虚拟化技术来进行辅助，这不仅可以保
护真实的物理设备环境不被恶意代码攻击，还能够固化保存分析环境以提高工作效
率，同时还能够在不影响程序执行流的情况下动态捕获程序内存、CPU 等关键数
据。
虚拟化技术根据实现技术的不同可以分为：
软件虚拟化：用纯软件的方法在现有平台上实现对物理资源访问的截获和模
拟。如 QEMU。
硬件虚拟化：由硬件平台对特殊指令进行截获和重定向，交由虚拟机监控器
（VMM）进行处理，这需要 CPU、主板、BIOS 和软件的支持。如
VMWare、VirtualBox。
虚拟化技术根据是否改动操作系统又可以分为：
半虚拟化：通过修改开源操作系统，将虚拟机特殊指令的被动截获请求转化成
客户机操作系统的主动通知以提高性能。如 Xen。
全虚拟化：不需要对操作系统进行改动，提供了完整的包括处理器、内存和外
设的虚拟化平台。如 VMWare、VirtualBox、
硬件虚拟化环境
205
2.1.1 VirtualBox
用硬件虚拟机的话比较简单，可以自己下载安装。下面是我个人的一些环境配置。
VirtualBox(https://www.virtualbox.org/)
VMware Workstation/Player(https://www.vmware.com/)
物理机 Manjaro 17.02
Manjaro 17.02 x86-64(https://manjaro.org/) with BlackArch tools.
$ uname -a
Linux firmy-pc 4.9.43-1-MANJARO #1 SMP PREEMPT Sun Aug 13 20:28:
47 UTC 2017 x86_64 GNU/Linux
yaourt -Rscn:
skanlite cantata kdenlive konversation libreoffice-still thunder
bird-kde k3b cups
yaourt -S:
virtualbox tree git ipython ipython2 gdb google-chrome tcpdump v
im wireshark-qt edb ssdeep wps-office strace ltrace metasploit p
ython2-pwntools peda oh-my-zsh-git radare2 binwalk burpsuite che
cksec netcat wxhexeditor
pip3/pip2 install:
r2pipe
Windows 虚拟机
32-bit
Windows XP
Windows 7
64-bit
Windows 7
206
2.1.1 VirtualBox
7-Zip/WinRAR
IDA_Pro_v6.8
吾爱破解工具包2.0
Windows 10
下载地址：http://www.itellyou.cn/
Linux 虚拟机
32-bit/64-bit Ubuntu LTS - https://www.ubuntu.com/download
14.04
16.04
$ uname -a
Linux firmyy-VirtualBox 4.10.0-28-generic #32~16.04.2-Ubu
ntu SMP Thu Jul 20 10:19:13 UTC 2017 i686 i686 i686 GNU/L
inux
207
2.1.1 VirtualBox
apt-get purge:
libreoffice-common unity-webapps-common thunderbird totem
rhythmbox simple-scan gnome-mahjongg aisleriot gnome-min
es cheese transmission-common gnome-orca webbrowser-app g
nome-sudoku onboard deja-dup usb-creator-common
apt-get install:
git vim tree ipython ipython3 python-pip python3-pip fore
most ssdeep zsh
pip2 install:
termcolor
zio
other install:
oh my zsh
peda
Kali Linux - https://www.kali.org/
BlackArch - https://blackarch.org/
REMnux - https://remnux.org
工具安装脚本
ctf-tools - https://github.com/zardus/ctf-tools
pwn_env
208
2.1.2 QEMU
2.1.2 QEMU
简介
安装
参考资料
简介
QEMU 是一个广泛使用的开源计算机仿真器和虚拟机。当作为仿真器时，可以在一
种架构(如PC机)下运行另一种架构(如ARM)下的操作系统和程序，当作为虚拟机
时，可以使用 Xen 或 KVM 访问 CPU 的扩展功能(HVM)，在主机 CPU 上直接执行
虚拟客户端的代码。
安装
Arch: $ pacman -S qemu
Debian/Ubuntu: $ apt-get install qemu
当然如果你偏爱源码编译安装的话：
$ git clone git://git.qemu.org/qemu.git
$ cd qemu
$ git submodule init
$ git submodule update --recursive
$ ./configure
$ make
参考资料
QEMU
209
2.1.2 QEMU
210
2.1.3 Docker
2.1.3 Docker
211
2.1.4 Unicorn
2.1.4 Unicorn 模拟器
参考资料
参考资料
http://www.unicorn-engine.org/
Unicorn: Next Generation CPU Emulator Framework
212
2.2.1 radare2
2.2.1 Radare2
简介
安装
命令行使用方法
radare2/r2
rabin2
rasm2
rahash2
radiff2
rafind2
ragg2
rarun2
rax2
交互式使用方法
分析（analyze）
Flags
定位（seeking）
信息（information）
打印（print） & 反汇编（disassembling）
写入（write）
调试（debugging）
视图模式
Web 界面使用
cutter GUI
在 CTF 中的运用
更多资源
简介
IDA Pro 昂贵的价格令很多二进制爱好者望而却步，于是在开源世界中催生出了一
个新的逆向工程框架——Radare2，它拥有非常强大的功能，包括反汇编、调试、
打补丁、虚拟化等等，而且可以运行在几乎所有的主流平台上（GNU/Linux、
Windows、BSD、iOS、OSX……）。Radare2 开发之初仅提供了基于命令行的操
213
2.2.1 radare2
作，尽管现在也有非官方的GUI，但我更喜欢直接在终端上运行它，当然这也就意
味着更高陡峭的学习曲线。Radare2 是由一系列的组件构成的，这些组件赋予了
Radare2 强大的分析能力，可以在 Radare2 中或者单独被使用。
这里是 Radare2 与其他二进制分析工具的对比。（Comparison Table）
安装
$ git clone https://github.com/radare/radare2.git