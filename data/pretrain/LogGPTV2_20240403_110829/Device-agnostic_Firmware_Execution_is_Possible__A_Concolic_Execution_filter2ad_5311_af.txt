### Real-Time Operating Systems (RTOS) and Development Boards

- **NXP FRDM-K66F**: Supports both Bare-metal and FreeRTOS.
- **NXP FRDM-KW41Z**: Supports Bare-metal, FreeRTOS, and ChibiOS.
- **STM32100E_EVAL**: Supports Mbed OS and FreeRTOS.
- **STM32 Nucleo-L152RE**: Supports a variety of RTOS options.

### Peripherals and Modules

1. **Real Time Clock (RTC)**
2. **Analog-to-Digital Converter (ADC)**
3. **Digital-to-Analog Converter (DAC)**
4. **System Mode Controller (SMC)**
5. **Periodic Interrupt Timer (PIT)**
6. **Low Power Universal Asynchronous Receiver/Transmitter (LPUART)**
7. **Watchdog Timer (WDOG)**
8. **Timer/PWM Module (TPM)**
9. **Comparator (CMP)**
10. **External Watchdog Monitor (EWM)**
11. **Carrier Modulator Transmitter (CMT)**
12. **FlexTimer Module (FTM)**
13. **Low-Power Timer (LPTMR)**
14. **Flexible Controller Area Network (FLEXCAN)**
15. **Random Number Generator Accelerator (RNGA)**
16. **Enhanced Direct Memory Access (EDMA)**
17. **Synchronous Audio Interface (SAI)**
18. **Cyclic Redundancy Check (CRC)**
19. **Memory Protection Unit (MPU)**
20. **10/100-Mbps Ethernet MAC (ENET)**
21. **Universal Asynchronous Receiver/Transmitter (UART)**
22. **Universal Synchronous/Asynchronous Receiver/Transmitter (USART)**
23. **Inter-Integrated Circuit (I2C)**

### Peripheral Mapping

- **LPUART 7**
- **RTC 1**
- **ADC 2**
- **GPIO 3**
- **SMC 4**
- **DAC 5**
- **PIT 6**
- **TPM 8**
- **CMP 9**
- **EWM 10**
- **WDOG 11**
- **CMT 12**
- **FTM 13**
- **LPTMR 14**
- **FLEXCAN 15**
- **RNGA 16**
- **EDMA 17**
- **SAI 18**
- **CRC 19**
- **MPU 20**
- **ENET 21**
- **UART 22**
- **I2C 23**
- **USART 24**

### Success and Human Intervention Requirements

| Context_Depth | Forward_Depth | Size (KB) | Minimal | Image | Intervention |
|---------------|---------------|-----------|---------|-------|--------------|
| 2             | 1             | 2         | Minimal | -     | -            |
| 2             | 4             | 3         | Minimal | -     | -            |
| 1             | 2             | 4         | Minimal | -     | -            |
| 1             | 1             | 1         | Minimal | -     | -            |
| 2             | 2             | 3         | Minimal | -     | -            |
| 3             | 2             | 2         | Minimal | -     | -            |
| 2             | 2             | 2         | Minimal | -     | -            |
| 2             | 1             | 1         | Minimal | -     | -            |
| 1             | 1             | 1         | Minimal | -     | -            |
| 4             | 5             | N         | N       | N     | Y            |
| 1             | 1             | 1         | N       | N     | N            |
| 1             | 1             | 1         | N       | N     | N            |
| 4             | 5             | N         | N       | N     | Y            |
| 1             | 1             | 1         | N       | N     | N            |
| 1             | 1             | 1         | N       | N     | N            |
| 4             | 5             | N         | N       | N     | Y            |

### References

1. **[30] Chi-Keung Luk, Robert Cohn, Robert Muth, Harish Patil, Artur Klauser, Geoff Lowney, Steven Wallace, Vijay Janapa Reddi, and Kim Hazelwood. 2005. Pin: Building Customized Program Analysis Tools with Dynamic Instrumentation. In Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI’05).**
2. **[31] Leonardo De Moura and Nikolaj Bjørner. 2008. Z3: An Efficient SMT Solver. In Proceedings of the 14th International Conference on Tools and Algorithms for the Construction and Analysis of Systems (TACAS’08).**
3. **[32] Marius Muench, Aurélien Francillon, and Davide Balzarotti. 2018. Avatar2: A Multi-target Orchestration Platform. In Workshop on Binary Analysis Research.**
4. **[33] Marius Muench, Jan Stijohann, Frank Kargl, Aurélien Francillon, and Davide Balzarotti. 2018. What You Corrupt Is Not What You Crash: Challenges in Fuzzing Embedded Devices. In Proceedings of the 2018 Network and Distributed System Security Symposium (NDSS’18).**
5. **[34] Nicholas Nethercote and Julian Seward. 2007. Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation. In Proceedings of the 28th ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI’07).**
6. **[35] Joshua Pereyda. 2016. boofuzz: Network Protocol Fuzzing for Humans. https://github.com/jtpereyda/boofuzz.**
7. **[36] NGUYEN Anh Quynh and DANG Hoang Vu. 2015. Unicorn: Next Generation CPU Emulator Framework. Black Hat USA.**
8. **[42] Seyed Mohammadjavad Seyed Talebi, Hamid Tavakoli, Hang Zhang, Zheng Zhang, Ardalan Amiri Sani, and Zhiyun Qian. 2018. Charm: Facilitating Dynamic Analysis of Device Drivers of Mobile Systems. In Proceedings of the 27th USENIX Security Symposium (USENIX Secu- rity’18).**
9. **[43] Qiuping Yi, Zijiang Yang, Shengjian Guo, Chao Wang, Jian Liu, and Chen Zhao. 2018. Eliminating Path Redundancy via Postconditioned Symbolic Execution. IEEE Transactions on Software Engineering 44, 1 (January 2018).**
10. **[44] Jonas Zaddach, Luca Bruno, Aurelien Francillon, and Davide Balzarotti. 2014. Avatar: A Framework to Support Dynamic Security Analysis of Embedded Systems’ Firmwares. In Proceedings of the 2014 Network and Distributed System Security Symposium (NDSS’14).**
11. **[45] Yufeng Zhang, Zhenbang Chen, and Ji Wang. 2012. S2PF: Speculative Symbolic PathFinder. ACM SIGSOFT Software Engineering Notes 37, 6 (Nov. 2012).**
12. **[46] Yaowen Zheng, Ali Davanian, Heng Yin, Chengyu Song, Hongsong Zhu, and Limin Sun. 2019. FIRM-AFL: High-Throughput Greybox Fuzzing of IoT Firmware via Augmented Process Emulation. In Proceedings of the 28th USENIX Security Symposium (USENIX Security’19).**
13. **Device-agnostic Firmware Execution. Anonymous Submission to MobiCom, 2020. CA, USA.**
14. **[37] Matthew J. Renzelmann, Asim Kadav, and Michael M. Swift. 2012. SymDrive: Testing Drivers Without Devices. In Proceedings of the 10th USENIX Conference on Operating Systems Design and Implementation (OSDI’12).**
15. **[38] Koushik Sen, Darko Marinov, and Gul Agha. 2005. CUTE: A Concolic Unit Testing Engine for C. In Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering (ESEC/FSE-13) (ESEC/FSE-13).**
16. **[39] Hyunmin Seo and Sunghun Kim. 2014. How We Get There: A Context-guided Search Strategy in Concolic Testing. In Proceedings of the 22nd ACM SIGSOFT International Symposium on Foundations of Software Engineering (FSE’14).**
17. **[40] Yan Shoshitaishvili, Ruoyu Wang, Christopher Salls, Nick Stephens, Mario Polino, Andrew Dutcher, John Grosen, Siji Feng, Christophe Hauser, Christopher Kruegel, and Giovanni Vigna. 2016. SoK: (State of) The Art of War: Offensive Techniques in Binary Analysis. In Proceedings of the 37th IEEE Symposium on Security and Privacy (S&P’16).**
18. **[41] Jim Smith and Ravi Nair. 2005. Virtual Machines: Versatile Platforms for Systems and Processes (The Morgan Kaufmann Series in Computer Architecture and Design). Morgan Kaufmann Publishers Inc., San Francisco, 17.**