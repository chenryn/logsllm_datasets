P
(
R
f≥
3
)
S5
P(
Rf
0&
Rd≥2)
P
(
Rf
≥
2)

S6
1
S4
1
)
f≥1
(R
P
Fig. 6: The Markov models for (a) WAE used with ECC1, (b) WAP used with ECC1,(c) WAT used with ECC2. The red and blue dashed links indicate
the second read (system read) and write back (system write) operations, respectively.
absorption. This allows us to compute the number of system
write operations (S2 → S1 transitions) relative to the number
of user read operations (the other transitions). Speciﬁcally,
the number of time an edge (Si → Sj) is traversed can
be computed as the product of the number of times state
Si
is visited before absorption and the probability of the
transition Si → Sj. From a probabilistic point of view, there
are two points to note in Fig. 6a: (1) the number of write
backs depends on two very low probability events (S1 → S2)
and (S1 → S3 → S2), and (2) the probability of no false
read and no read disturbance, P(Rf
0), is higher than other
events. Therefore, the Markov process mostly remains in S1
and avoids unnecessary writes.
0 &Rd
B. Write back After Persistent error detection (WAP)
Similar to what was explained for WAE, we model WAP for
ECC1 using the Markov model shown in Fig. 6b. Speciﬁcally,
starting from the initial state S1, a user read operation can
cause the following state transitions:
• If no error or disturbance occur, the process stays in S1.
• If the number of false reads exceeds the ECC capability
(larger than 1), the process transition to S7 (the failure state).
• If the number of read disturbances exceeds the ECC capa-
bility (larger than 1) as long as no false read occurs, the
process moves to S6 (at least two disturbed cells). The next
user read (S6 → S7) will cause a transition to the failure
state, S7.
• If only one cell is disturbed but no false read occurs, the
disturbance is not detected and the process moves to S4.
The next read operation will
the error and
then detect
transition the process to the failure state if a false read occurs
(S4 → S7) since the capability of ECC will be exceeded.
If, however, no false read occurs in the next read operation
(S4 → S5), the latent read disturbance will be detected and
the read data block is corrected and kept. Then, the system
initiates a second read (system read) and compares two data
blocks. This second read will conﬁrm that the detected error
is due to the disturbed cell (S5 → S3) and will write back
(S3 → S1) the corrected data.
•If at least one cell is disturbed and exactly one false read
occurs, the process moves to S5 where ECC detects the error
and corrects the data and the system triggers a second read
and a comparison between previous and current read data
(S5 → S3). The comparison reveals the occurrence of at
least one persistent error; therefore the process writes back
the corrected data block.
•If exactly one false read occurs, ECC detects the error and
corrects the data and the process moves to S2. In this case,
a second (system) read is initiated which may lead to four
different transitions depending on what happens during this
second read:
(1) No cell is disturbed and no false read occurs. In this
case, the process moves to the initial state (S2 → S1).
(2) No cell is disturbed but at least one false read occurs (the
comparison between previous and current read data reveals
the occurrence of the error(s)). In this case, the system read
takes the process to S3 (S2 → S3) and the corrected data
will be written back (S3 → S1).
(3) One cell is disturbed during the system read and no
false read occurs. In this case, the process moves to S4
221
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:18:18 UTC from IEEE Xplore.  Restrictions apply. 
(S2 → S4).
(4) If the number of read disturbances exceeds the ECC
capability (larger than 1) as long as no false read occurs,
the process moves to S6 (at least two disturbed cells). The
next user read (S6 → S7) will cause a transition to the
failure state.
C. Write back After error Threshold (WAT)
Since leaving at least one cell with incorrect data or one
false read needs an ECC that detects two errors, ECC2 is the
smallest ECC code which can be considered for WAT. Fig. 6c
shows the Markov model for WAT based on ECC2. It can be
described as follows:
• As long as the number of errors detected during a read
operation is less than two,
the Markov process ignores
false reads and leaves cells with incorrect data behind.
Considering only the number of read disturbances occurring
during the read operation, the process transitions to a state
that keeps track of the number of disturbances. Speciﬁcally,
S1, S3, S4 and S5 reﬂect zero, one, two and more than two
disturbed cells, respectively.
• If two false reads are detected but no read disturbance
occurs, the process is transitioned to S2 and a write back of
the corrected data returns the system to S1.
• From a state that reﬂects x disturbed cells, a read operation
with more than 2 − x false reads causes a transition to the
failure state, S6.
• From S3 (one cell is already disturbed), a read operation
with one false read will detect two errors, correct the errors
and write back the block (S3 → S2 → S1), clearing the
disturbance.
• From S4 (two cells are already disturbed), a read operation
with no false read will detect two errors, correct the errors
and write back the block (S4 → S2 → S1). However, any
false read in the read operation cannot be corrected (ECC2
cannot correct more than 2 errors) and will take the system
to failure (S6).
As mentioned earlier, user write operations as well as the
effect of write errors can be incorporated in the above three
Markov models, and the UBER as well as the overhead (in
terms of system write back and second read operations) of the
policies can be computed. In the evaluation section, we report
the results of our analysis of the models that incorporates user
write operations and user read operations for write faults, false
reads, and read disturbances.
D. Accounting for miscorrections and undetected errors
Usually, ECC code that can correct k errors can detect k +1
errors but can produce the wrong data if more than k + 1
error occurs. For example, if errors change one codeword to
another codeword, the errors are not detected. Moreover, if the
errors change a code word, x, to a non-code word, y, and the
Hamming distance between x and y is larger than the Ham-
ming distance between y and another code word, z, then the
errors will be miscorrected to z. Our failing states combines
detected failures and miscorrections/non-detections. To more
precisely differentiate the two cases, we can decompose the
failing state, Sf , into two absorbing states, miscorrection/non-
detection, Smc and detected-failure, Sdf . This only nominally
increases the complexity of the model (one additional state)
and will allow differentiation between Smc and Sdf . The
expected number of transitions before absorption is the same in
both cases. Moreover, our observation based on experimental
results shows that the probability of absorption to Smc is
much smaller than to Sdf (e.g., Sms is 106 times smaller than
absorption to Sdf for the model shown in Fig. 4).
E. Markov models for other memory technologies
According to the type of errors in other technologies,
Markov chains can be designed to model the combined effect
of persistent and transient errors including read disturbance
and estimate the reliability of the systems. In STT-RAM, since
the disturbance does not affect neighboring cells, the Markov
models are simpler than other technologies, such as PCM,
where disturbance errors (write disturbance) can affect, not
only the accessed cell, but also neighboring cells.
VII. EVALUATION
A. Baseline
We evaluated the reliability and energy consumption of the
error mitigation policies assuming 64-bit data blocks for a
range of read disturbance, write error and false read error
rates. Since ranges of these three types of error rates in STT-
RAM depend on various circuit and system parameters such
as circuit conﬁguration, read and write currents, pulse-widths,
etc., we evaluate both single MTJ [31, 32] and dual-MTJ [33]
STT-RAM conﬁgurations with a range of corresponding read
and write currents and pulse widths. Note that we do a sweep
of parameters but can not report the large volume of results.
Instead, we report results that are representative of the sweep
and reﬂect cases that arise from speciﬁc practical technologies.
We include cases that span all the possible relative orders of
the values of pf , pd, and pw.
For a single MTJ STT-RAM conﬁguration, when the read-
ing current varies from 24.5μA to 41.5μA, pf varies from
10−4 to 4 × 10−5 while pd varies from 10−10 to 10−4. Also,
the write current was set to Iw = 56.1μA [31] and with a
write pulse of 10ns and thermal stability Δ = 45 the write
error is approximately pw = 10−10. We also varied the write
pulse time from 10ns to 4ns with a corresponding pulse width
τ0 of 100% to 40%, leading to pw that varies from 10−10 to
τ
10−4. For the dual-MTJ STT-RAM conﬁguration, when the
reading current varies from 50μA to 70μA, the false read bit
error rate improves by more than two orders of magnitude
while degrading the read disturbance error rate by an order
of magnitude. Also, with a write current Iw = 98.5μA, the
write bit error rate is reported as pw = 1.2 × 10−7 [33].
TABLE III: Bit error rates of different
corresponding currents for single MTJ STT-RAM.
types of errors in terms of
IR (μA)
pd
pf
log(pf /pd) 6
27.5
30.8
33.2
36.6
24.5
1 · 10−10 1 · 10−9 1 · 10−8 1 · 10−7 1 · 10−6 1 · 10−5
9 · 10−5 8 · 10−5 7 · 10−5 6 · 10−5 5 · 10−5
1 · 10−4
4.954
3.903
0.698
2.845
1.778
41.5
222
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 09:18:18 UTC from IEEE Xplore.  Restrictions apply. 
TABLE IV: Bit error rates of different
corresponding currents for dual-MTJ STT-RAM.
types of errors in terms of
TABLE VI: The comparison of different policies across different RBERs
for STT-RAM. All Parameters are from dual-MTJ STT-RAM.
IR (μA)
pd
pf
log(pf /pd) 3
60.8
64.4
70.0
53.6
57.2
50.0
1 · 10−9 1 · 10−8 5 · 10−8 1 · 10−7 5 · 10−7 5 · 10−6
1 · 10−6 7 · 10−7 2 · 10−7 7 · 10−8 3 · 10−8 1 · 10−8
−0.154 −1.221 −2.698
1.845
0.602
TABLE V: Write bit error rate by changing the write pulse width.
τ (ns) 10
τ
τ0
pw
9
90%
8
80%
7
70%
6
60%
5
50%
4
40%
100%
1 · 10−10 1 · 10−9 1 · 10−8 1 · 10−7 1 · 10−6 1 · 10−5 1 · 10−4
log(pf /pd)
3
1.845
0.602
-0.154
-1.221
-2.698
ECCk 4.45 10−11 2.80 10−11 1.15 10−11 1.22 10−11 1.65 10−10 1.51 10−08
4.44 10−11 2.39 10−11 3.72 10−12 1.34 10−12 8.43 10−13 6.38 10−13
WAR
3.59 10−11 1.82 10−11 2.35 10−12 1.05 10−12 8.93 10−12 7.89 10−10
WAE
3.59 10−11 1.82 10−11 2.35 10−12 1.05 10−12 8.93 10−12 7.89 10−10
WAP
ECCk 1.31 10−14 5.22 10−13 4.52 10−12 1.22 10−11 8.72 10−10 3.53 10−07
1.70 10−15 6.72 10−16 3.83 10−17 6.18 10−18 2.07 10−18 5.57 10−19
WAR
1.19 10−15 4.25 10−16 2.03 10−17 6.18 10−18 1.77 10−16 1.49 10−13
WAE
1.19 10−15 4.25 10−16 2.03 10−17 4.44 10−18 1.77 10−16 1.49 10−13
WAP
1.22 10−14 4.88 10−13 3.57 10−12 5.05 10−12 5.16 10−11 1.19 10−09
WAT
k=1
k=2
We conducted experimental results data points in these ranges
shown in Tables III, IV, and V.
B. Uncorrectable Bit Error Rate
Fig. 7 shows UBER for the proposed error mitigation
policies against different values for the ratio of false read to
read disturbance for standard, single MTJ STT-RAM when
using single bit error correction and a pw ≈ 10−10. The x-axis
data points correspond to the different values for IR reported
in Table III for different read currents. When the access pattern
is equal (50%) user reads and writes all approaches achieve
similar UBER level as the user write requests compensate for
the effect of cumulative read errors from read disturbance. For
a 1000 to 1 read to write ratio, the reliability of approaches
does not change signiﬁcantly, as IR increases to improve pf ,
the resulting higher pd increases the probability of read disturb
errors. Thus, ECC1 alone cannot correct the read disturbances
effectively and it becomes less reliable than other approaches
that include some policy for writing back. When using two bit
error correction, we can also now consider WAT. Fig. 8 shows
similar UBER for different policies based on ECC2 with all
policies performing similarly for equal (50%) user reads and
writes and with a similar trend where ECC2 scales poorly
when user reads dominate and read disturbance becomes high.
	
	
	
	




















	

	
	
	
	






    
 

	

Fig. 7: Uncorrectable bit error rate vs. row bit error rates under two ratios of
read to write operations for single MTJ STT-RAM. All approaches leverage
ECC1.
	

	

	

	


	








  
 






	
		
		
	

	

	
