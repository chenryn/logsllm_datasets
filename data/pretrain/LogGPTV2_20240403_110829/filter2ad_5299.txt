title:M2cloud: software defined multi-site data center network control framework
for multi-tenant
author:Zhongjin Liu and
Yong Li and
Li Su and
Depeng Jin and
Lieguang Zeng
M2cloud: Software Deﬁned Multi-site Data Center Network
Control Framework for Multi-tenant
Zhongjin Liu, Yong Li, Li Su, Depeng Jin, Lieguang Zeng
Department of Electronic Engineering, Tsinghua University, Beijing 100084, China
PI:EMAIL
ABSTRACT
A signiﬁcant concern for cloud operators is to provide glob-
al network performance isolation for concurrent tenants. To
address this, we propose M2cloud, a software deﬁned frame-
work providing scalable network control for multi-site data
centers (DCs). M2cloud employs two-level controllers with
decoupled functions, providing each tenant with ﬂexible vir-
tualization support in both intra- and inter-DC networks.
Categories and Subject Descriptors
C.2.1 [Network Architecture and Design]
General Terms
Design
Keywords
SDN; multi-tenant; multi-site; data center networks
1.
INTRODUCTION
Cloud service providers possess multiple data centers in
distributed places, over which they provide diverse applica-
tions and resilient infrastructures. In order to provide high
available services to global users, especially deliver the fast-
growing mobile content to mobile users[2, 3], large volumes
of data need to be moved from one site to another, making
the inter-DC traﬃc to be a major portion of backbone links.
Data center tenants deploy their applications in collec-
tions of virtual machines (VMs) placed in one or more sites.
Cloud operators have a strong requirement to enforce inter-
DC traﬃc optimization and cross-site performance isolation
for tenants, but current solution cannot provide joint intra-
and inter-DC network control ability [1].
In this paper,
we present a software deﬁned multi-site data center con-
trol framework supporting virtualization across multiple da-
ta centers, which allows tenant speciﬁc performance opti-
mization. Two-level controllers are introduced with layered
functions including device conﬁguration, network virtualiza-
tion and decoupled APIs, which balance between scalability
and performance. Simulation results show that the inter-
DC bandwidth utilization can be improved, and the global
workload can be balanced through M2cloud.
Permission  to  make  digital  or  hard  copies  of  part  or  all  of  this  work  for 
personal or classroom use is granted without fee provided that copies are not
made or distributed for profit or commercial advantage and that copies bear
this  notice  and  the  full  citation  on  the  first  page.  Copyrights  for  third-party 
components  of  this  work  must  be  honored.  For  all  other  uses,  contact  the 
owner/author(s). Copyright is held by the author/owner(s). 
SIGCOMM’13, August 12–16, 2013, Hong Kong, China. 
ACM 978-1-4503-2056-6/13/08. 
http://dx.doi.org/10.1145/2486001.2491725
Tenant(cid:3)1
Tenant(cid:3)2
Internet
Global(cid:3)Controller
Site(cid:3)D
Site(cid:3)C
Site(cid:3)A
Site(cid:3)B
GateWay
GateWay
Local(cid:3)Controller
Local(cid:3)Controller
Physical(cid:3)Switch
VM
VM
VM
VM
VSwitch
…
…
VM
VM
VM
VM
VM
VM
…
…
VM
VM
Figure 1: M2cloud Architecture
2. DESIGN PRINCIPLE
2.1 Design Goals
M2cloud is designed with the purpose of enabling ﬂexi-
ble network control in both intra- and inter-DC networks,
which provides exclusive isolated network environment for
each tenant. Besides ﬂexibility brought by the software de-
ﬁned approach, M2cloud also intends to strike a balance
between scalability and performance.
2.2 Network Control Architecture
The key idea of M2cloud lies in two-level controllers. We
note that the network functions required by data center ap-
plications can be decomposed into two categories: functions
such as forwarding table conﬁguration, which require low-
latency and high-performance processing, should be handled
locally; while functions such as inter-DC traﬃc engineering
and global workload balancing, which beneﬁt from the glob-
al view of data centers, should be processed on top of inter-
DC network. Based on this observation, M2cloud adopts
function-decoupled controllers in intra- and inter-DC net-
works, whose architecture is shown in Fig. 1.
The geographically distributed data centers are intercon-
nected via programmable border gateways that are con-
trolled by a logically centralized global controller. The traﬃc
of diﬀerent tenants can be easily distinguished and directed
through ﬂow level control to support dedicated tenant per-
formance optimization. The global controller has the full
view of interconnection network, which enables global traf-
ﬁc engineering as well as workload balancing among DCs.
Network devices in one data center are controlled by a
local controller, which installs ﬂow rules to both physical
and software programmable switches. Since VMs are di-
rectly connected to software switches, local controller has
517Global(cid:3)Controller
Event(cid:3)
exchange
Event(cid:3)
exchange
Event(cid:3)
exchange
Local(cid:3)
Controller
Tunnel
Global(cid:3)
App(cid:3)
Tenant1
Global(cid:3)
App(cid:3)
Tenant(cid:3)2
Global(cid:3)User(cid:3)API
Global
Adm(cid:3)
App
Global(cid:3)
Adm(cid:3)API
Virtualization(cid:3)View
Inter(cid:3)Data(cid:3)Center(cid:3)View
Tunnel
Control
Local(cid:3)(cid:3)App(cid:3)
tenant(cid:3)1
Local(cid:3) App(cid:3)
tenant(cid:3)2
Local(cid:3)Adm(cid:3)
App
Local(cid:3)User(cid:3)API
Local(cid:3)Adm(cid:3)API
Computing(cid:3)and(cid:3)Network(cid:3)integration(cid:3)Manager
VN
state
VN
VN
VN
topology
configuration
provision
Virtual
Network(cid:3)1
Virtual
Network(cid:3)2
Device
configuration
Topology
discovery
VN
creation
Forwarding(cid:3)
table(cid:3)access
Physical(cid:3)&(cid:3)Software
Switches
Figure 2: Building Block of M2cloud
the insight of both switches and VMs. Resources such as
ﬂow table, traﬃc, bandwidth and topology can be sliced as
what FlowVisor [4] does. Therefore, the controller can slice
VMs, traﬃc and even physical links into a tenant’s virtual
network.
2.3 Building Blocks
It does not make much sense if controllers work indepen-
dently of each other, which is impossible to support cross-
site virtualization for tenants. Therefore, M2cloud enables
interconnection among controllers to support joint intra- and
inter-DC resources slicing. The local controllers are connect-
ed to global controller, via which they exchange local events
and share network view with local controllers in other sites.
The global controller and the local controller have the same
layered structure but diﬀerent in functions. The building
block of controllers are shown in Fig. 2.
Global controller. The lowest layer of the global controller
monitors topology of interconnection network and realtime
traﬃc. Virtualization layer provides each tenant with sepa-
rate DC-DC pathes. Application program interfaces (APIs)
are opened to administrators and tenants for diﬀerent pur-
poses. Administrator APIs are able to manage substrate de-
vices and build virtual network for tenants. Tenant APIs on-
ly manage his virtualized network resource, including topol-
ogy control and traﬃc engineering, etc. An important ex-
tension to the global controller is the tunneling mechanism,
which builds tunnels among several local controllers in dif-
ferent sites. Thus local controllers are able to exchange local
information with each other.
Local controller. Network operator is able to exploit func-
tions in lowest network “driver” layer to conﬁgure switches,
monitor topology, build virtual networks and access ﬂow ta-
bles inside a data center. Virtual network control function-
s are provided in virtual layer. The abstraction layer are
integrated with VM management tools such as OpenStack
in order to uniformly manage both computing and network
resources. APIs are also authorized to administrators and
tenants with diﬀerent scopes of control abilities.
3. PRELIMINARY RESULTS
To illustrate the ability of M2cloud to support cross-site
management, we present a use case that migrates VMs across
data centers, whose procedure is shown in Fig. 3.
To show the ﬂexibility and eﬃciency of proposed frame-
work, we evaluate the VM migration performance with nu-
merical simulation. Concurrent 10GB VM migration re-
Tenant(cid:3)1
Local(cid:3)App
Local
Controller
Global
App
Local
Controller
Tenant(cid:3)1
Local(cid:3)App
(1)(cid:3)There(cid:3)are
VMs(cid:3)need(cid:3)to(cid:3)
be(cid:3)migrated
(2)(cid:3)Request
which(cid:3)site(cid:3)to
migrate
(3)(cid:3)Query
other(cid:3)sites’
information
(4)(cid:3)Query(cid:3)resource(cid:3)
utilization(cid:3)in(cid:3)virtual(cid:3)
network(cid:3)view
(8)(cid:3)Inform(cid:3)app
about(cid:3)the(cid:3)
destination(cid:3)and
(7)(cid:3)Choose(cid:3)the(cid:3)best(cid:3)
site(cid:3)and(cid:3)install(cid:3)flow(cid:3)
to(cid:3)prepared(cid:3)best(cid:3)path
(6)(cid:3)Return
Resource(cid:3)availability
(5)(cid:3)Return
Resource(cid:3)availability
App
tunnel
(7)(cid:3)Establish(cid:3)a(cid:3)tunnel(cid:3)
for(cid:3)local(cid:3)controllers
(9)(cid:3)(cid:3)Migration(cid:3)and(cid:3)(cid:3)configure(cid:3)network(cid:3)profile
Site(cid:3)B
App
Site(cid:3)A
Figure 3: Cross sites VM migration in M2cloud
quests are generated among 30 data centers shared by two
tenants. Topology is randomly generated and bandwidth of
per link is set to be 100Mbps. Randomly generated back-
ground traﬃc is used to simulate client traﬃc. In the con-
trast setting, the migration destinations are set to a random
site, and the shortest path routing is used. In M2cloud, VM-
s are able to migrate to the site with lowest workload, and
traﬃc of diﬀerent tenants is able to go through the optimal
pathes with highest bandwidth individually. The perfor-
mance comparison is listed in Table 1 with contrast setting
compared to M2cloud. The bandwidth utilization can be
improved by more than 24%, and the workload tends to be
more balanced.
Table 1: Performance Comparison
Tenant
Migration
time
No.
1
2
Bandwidth
utilization
Workload
std. deviation
34.6/17.5min
34.6/21.3min
38.5%/76.2%
38.5%/62.6% 23.76%/10.65%
23.76%/8.2%
4. ACKNOWLEDGEMENT
This work is supported by National Basic Research Pro-
gram of China (973 Program) (No. 2013CB329105), Nation-
al Nature Science Foundation of China (No. 61171065, No.
61021001, No. 61133015), National High Technology Re-
search and Development Program (No. 2013AA010601 and
No. 2013AA010605), and Program for Changjiang Scholars
and Innovative Research Team in University (PCSIRT).
5. REFERENCES
[1] M. Banikazemi, D. Olshefski, A. Shaikh, et al.
Meridian: an sdn platform for cloud network services.
Communications Magazine, IEEE, 51(2):120–127, 2013.
[2] Y. Li, P. Hui, D. Jin, et al. Evaluating the impact of
social selﬁshness on the epidemic routing in delay
tolerant networks. IEEE Communications Letters,
14(11):1026–1028, November 2010.
[3] Y. Li, Z. Wang, D. Jin, et al. Collaborative vehicular
content dissemination with directional antennas. IEEE
Transaction on Wireless Communications,
11(4):1301–1306, April 2012.
[4] R. Sherwood, M. Chan, A. Covington, et al. Carving
research slices out of your production networks with
openﬂow. ACM SIGCOMM Computer Communication
Review, 40(1):129–130, 2010.
518