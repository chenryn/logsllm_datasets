title:Random Key Predistribution Schemes for Sensor Networks
author:Haowen Chan and
Adrian Perrig and
Dawn Xiaodong Song
Random Key Predistribution Schemes for Sensor Networks∗
Haowen Chan
Adrian Perrig
Dawn Song
Carnegie Mellon University
{haowenchan, perrig, dawnsong}@cmu.edu
Abstract
Key establishment in sensor networks is a challenging
problem because asymmetric key cryptosystems are unsuit-
able for use in resource constrained sensor nodes, and also
because the nodes could be physically compromised by an
adversary. We present three new mechanisms for key es-
tablishment using the framework of pre-distributing a ran-
dom set of keys to each node. First, in the q-composite
keys scheme, we trade off the unlikeliness of a large-scale
network attack in order to signiﬁcantly strengthen random
key predistribution’s strength against smaller-scale attacks.
Second, in the multipath-reinforcement scheme, we show
how to strengthen the security between any two nodes by
leveraging the security of other links. Finally, we present
the random-pairwise keys scheme, which perfectly pre-
serves the secrecy of the rest of the network when any node
is captured, and also enables node-to-node authentication
and quorum-based revocation.
1 Introduction
Wide-spread deployment of sensor networks is on the
horizon. Networks of thousands of sensors may present
an economical solution to some of our challenging prob-
lems: real-time trafﬁc monitoring, building safety monitor-
ing (structural, ﬁre, and physical security monitoring), mil-
itary sensing and tracking, distributed measurement of seis-
mic activity, real-time pollution monitoring, wildlife moni-
toring, wildﬁre tracking, etc. Many applications are depen-
dent on the secure operation of a sensor network, and have
serious consequences if the network is compromised or dis-
rupted.
In sensor network security, an important challenge is
the design of protocols to bootstrap the establishment of
a secure communications infrastructure from a collection
∗
We gratefully acknowledge funding support for this research. This
work was made possible in part by a gift from Bosch Research. This paper
represents the opinions of the authors and does not necessarily represent
the opinions or policies, either expressed or implied, of Bosch Research.
of sensor nodes which may have been pre-initialized with
some secret information but have had no prior direct con-
tact with each other. We refer to this problem as the boot-
strapping problem. A bootstrapping protocol must not only
enable a newly deployed sensor network to initiate a secure
infrastructure, but it must also allow nodes deployed at a
later time to join the network securely. The difﬁculty of
the bootstrapping problem stems from the numerous limi-
tations of sensor networks. We discuss these limitations in
detail in Section 2.2; some of the more important ones in-
clude the inability to utilize existing public key cryptosys-
tems (since the expensive computations involved could ex-
pose the power-constrained nodes to a denial-of-service at-
tack), the inability to pre-determine which nodes will be
neighbors after deployment, and the inability of any node
to put absolute trust in its neighbor (since the nodes are not
tamper resistant and are vulnerable to physical capture).
Eschenauer and Gligor recently proposed a random key
predistribution scheme to address the bootstrapping prob-
lem. Its operation is brieﬂy described as follows. A random
pool of keys is selected from the key space. Each sensor
node receives a random subset of keys from the key pool
before deployment. Any two nodes able to ﬁnd one com-
mon key within their respective subsets can use that key as
their shared secret to initiate communication [10]. We re-
view their approach (which we call the basic random key
scheme) in Section 4.
In this paper, we propose three new mechanisms in the
framework of random key predistribution to address the
bootstrapping problem. First, we propose the q-composite
random key predistribution scheme, which achieves greatly
strengthened security under small scale attack while trad-
ing off increased vulnerability in the face of a large scale
physical attack on network nodes. We will explain why
this trade-off is a desirable one. Second, we present the
multi-path key reinforcement scheme, which substantially
increases the security of key setup such that an attacker has
to compromise many more nodes to achieve a high probabil-
ity of compromising any given communication. Finally, we
propose the random-pairwise keys scheme, which assures
that, even when some number of nodes have been compro-
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
mised, the remainder of the network remains fully secure.
Furthermore, this scheme enables node-to-node mutual au-
thentication between neighbors and quorum-based node re-
vocation without involving a base station. Node-to-node
mutual authentication here refers to the property that any
node can ascertain the identity of the nodes that it is com-
municating with.
To the best of our knowledge, no previous security
scheme for sensor networks supports efﬁcient node-to-node
authentication without involving a base station. We give a
detailed analysis of each proposed scheme and show under
which situations our schemes can be used to achieve maxi-
mum security.
The remainder of the paper is organized as follows. We
describe the problem area and present evaluation criteria for
successful bootstrapping protocols in Section 2. We sum-
marize our notation in Section 3. We then give an overview
of the basic random key scheme by Eschenauer and Gligor
in Section 4. We describe our q-composite random key pre-
distribution scheme in Section 5, and our multi-path key
reinforcement scheme in Section 6. We present our third
scheme, the random-pairwise keys scheme in Section 7. Fi-
nally, we discuss related work in Section 8, and summarize
our results in Section 9.
2 Problem statement and evaluation metrics
In this section, we ﬁrst discuss the topology and architec-
ture of a typical sensor network. We then list the technical
properties of typical sensor networks that makes the boot-
strapping problem a challenge. Finally, we present the goals
and evaluation metrics for a successful sensor network se-
curity bootstrapping scheme.
2.1 Sensor network architecture
A typical sensor network has hundreds to several thou-
sand sensor nodes. Each sensor node is typically low-cost,
limited in computation and information storage capacity,
highly power constrained, and communicates over a short-
range wireless network interface. Most sensor networks
have a base station that acts as a gateway to associated in-
frastructure such as data processing computers. Individual
sensor nodes communicate locally with neighboring sen-
sors, and send their sensor readings over the peer-to-peer
sensor network to the base station. Sensors can be deployed
in various ways, such as physical installation of each sensor
node, or random aerial scattering from an airplane. In this
paper we assume that any sensor network is only deployed
by a single party, i.e. sensor nodes deployed by multiple
independent untrusted parties are not part of the same net-
work.
Generally, sensor nodes communicate over a wireless
network. A typical sensor network forms around one or
more base stations, which connect the sensor network to
the outside network.
The communication patterns within a sensor network fall
into three categories: node to node communication (e.g., ag-
gregation of sensor readings), node to base station commu-
nication (e.g., sensor readings), base station to node com-
munication (e.g., speciﬁc requests).
An example of a sensor node’s hardware conﬁguration
is the Berkeley Mica Motes. They feature a 8-bit 4 MHz
Atmel ATmega 128L processor with 128K bytes program
store, and 4K bytes SRAM. The processor only supports
a minimal RISC-like instruction set, without support for
multiplication or variable-length shifts or rotates. The ISM
band radio receiver communicates at a peak rate of 40Kbps
at a range of up to 100 feet.
The deployment density and the overall size of the net-
work can vary depending on the application.
In this pa-
per, we are examining very large sensor networks (> 1000
nodes) with a sizable communication range (> 20 neighbor-
ing nodes within communication range) and possibly mul-
tiple base stations. We focus on large networks because
they cannot rely on existing non-scalable solutions for small
networks such as base-station authentication. Due to their
smaller overall statistical variance, they are uniquely suited
to the random key approaches that we propose in this paper.
2.2 Sensor network limitations
The following characteristics of sensor networks compli-
cate the design of secure protocols for sensor networks, and
make the bootstrapping problem highly challenging. We
discuss the origins and implications of each factor in turn.
• Impracticality of public key cryptosystems. The limited
computation and power resources of sensor nodes of-
ten makes it undesirable to use public-key algorithms,
such as Difﬁe-Hellman key agreement [9] or RSA sig-
natures [20]. Currently, a sensor node may require on
the order of tens of seconds up to minutes to perform
these operations [7, 8]. This exposes a vulnerability to
denial of service (DoS) attacks.
• Vulnerability of nodes to physical capture. Sensor
nodes may be deployed in public or hostile locations
(such as public buildings or forward battle areas) in
many applications. Furthermore, the large number of
nodes that are deployed implies that each sensor node
must be low-cost, which makes it difﬁcult for manu-
facturers to make them tamper-resistant. This exposes
sensor nodes to physical attacks by an adversary. In the
worst case, an adversary may be able to undetectably
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
take control of a sensor node and compromise the cryp-
tographic keys.
• Lack of a-priori knowledge of post-deployment conﬁg-
uration. If a sensor network is deployed via random
scattering (e.g. from an airplane), the sensor network
protocols cannot know beforehand which nodes will
be within communication range of each other after de-
ployment. Even if the nodes are deployed by hand,
the large number of nodes involved makes it costly to
pre-determine the location of every individual node.
Hence, a security protocol should not assume prior
knowledge of which nodes will be neighbors in a net-
work.
• Limited memory resources. The amount of key-storage
memory in a given node is highly constrained; it does
not possess the resources to establish unique keys with
every one of the other nodes in the network.
• Limited bandwidth and transmission power. Typical
sensor network platforms have very low bandwidth.
For example, the UC Berkeley Mica platform’s trans-
mitter has a bandwidth of 10 Kbps, and a packet size
of about 30 bytes. Transmission reliability is often low,
making the communication of large blocks of data par-
ticularly expensive.
• Over-reliance on base stations exposes vulnerabilities.
In a sensor network, base stations are few and expen-
sive. Hence it may be tempting to rely on them as a
source of trust. However, this invites attack on the base
station and limits the application of the security proto-
col.
2.3 The problem of bootstrapping security in sen-
sor networks
Based on the limitations described in Section 2.2, a boot-
strapping scheme for sensor networks needs to satisfy the
following requirements:
• Deployed nodes must be able to establish secure node-
to-node communication.
• The scheme should be functional without involving the
base station as an arbiter or veriﬁer.
• Additional legitimate nodes deployed at a later time
can form secure connections with already-deployed
nodes. This implies that bootstrapping information
must always be present and cannot simply be erased
after deployment to prevent compromise in the event
of capture.
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
• Unauthorized nodes should not be able to establish
communications with network nodes and thus gain en-
try into the network.
• The scheme must work without prior knowledge of
which nodes will come into communication range of
each other after deployment.
• The computational and storage requirement of the
scheme must be low, and the scheme should be robust
to DoS attacks from out-of-network sources.
2.4 Evaluation metrics
Sensor networks have many characteristics that make
them more vulnerable to attack than conventional comput-
ing equipment. Simply assessing a scheme based on its abil-
ity to provide secrecy is insufﬁcient. We present several cri-
teria that represent desirable characteristics in a key-setup
scheme for sensor networks.
• Resilience against node capture. We assume the ad-
versary can mount a physical attack on a sensor node
after it is deployed and read secret information from
its memory. We evaluate a scheme’s resilience toward
node capture by estimating the fraction of total net-
work communications that are compromised by a cap-
ture of x nodes not including the communications in
which the compromised nodes are directly involved.
• Resistance against node replication. Whether the ad-
versary can insert additional hostile nodes into the
network after obtaining some secret information (e.g.
through node capture or inﬁltration). This is a seri-
ous attack since the compromise of even a single node
might allow an adversary to populate the network with
clones of the captured node to such an extent that legit-
imate nodes could be outnumbered and the adversary
can thus gain full control of the network.
• Revocation. Whether a detected misbehaving node can
be dynamically removed from the system.
• Scale. As the number of nodes in the network grows,
the security characteristics mentioned above may be
weakened. We give a detailed deﬁnition of maximum
supportable network size in Section 4.2.
Each solution we propose in this paper involves several
steps. An initialization procedure is performed to initial-
ize sensor nodes before they are deployed. After the sensor
nodes are deployed, a key setup procedure is performed by
the nodes to set up shared secret keys between some of the
neighboring nodes to establish a secure link. This should
form a connected graph of secure node-to-node links. Sub-
sequently, neighbor-to-neighbor key establishment can be
performed using the secure links in the initial graph created
during key-setup.
3 Notation
For clarity, we list the symbols used in the paper below:
c
d
desired conﬁdence level (probability) that the sen-
sor network is connected after completing the con-
nection protocol.
the expected degree of a node – i.e., the expected
number of secure links a node can establish during
key-setup.
m number of keys in a node’s key ring
n
n(cid:1)
network size, in nodes
the expected number of neighbor nodes within
communication radius of a given node
probability that two neighbor nodes can set up a
secure link during the key-setup phase.
for the q-composite scheme, required amount of
key overlap
key pool (set of keys randomly chosen from the
total key space)
size of the key pool.
threshold number of votes after which a node will
be revoked.
p
q
S
|S|
t
4 Background: overview of the basic random
key predistribution scheme
Eschenauer and Gligor ﬁrst proposed a random key-
predistribution scheme [10]. In the remainder of this paper,
we refer to their approach as the basic scheme. Let m de-
note the number of distinct cryptographic keys that can be
stored on a sensor node. The basic scheme works as fol-
lows. Before sensor nodes are deployed, an initialization
phase is performed. In the initialization phase, the basic
scheme picks a random pool (set) of keys S out of the total
possible key space. For each node, m keys are randomly se-
lected from the key pool S and stored into the node’s mem-
ory. This set of m keys is called the node’s key ring. The
number of keys in the key pool, |S|, is chosen such that two
random subsets of size m in S will share at least one key
with some probability p.
After the sensor nodes are deployed, a key-setup phase
is performed. The nodes ﬁrst perform key-discovery to ﬁnd
out with which of their neighbors they share a key. Such key
discovery can be performed by assigning a short identiﬁer to
each key prior to deployment, and having each node broad-
cast its set of identiﬁers. Nodes which discover that they
contain a shared key in their key rings can then verify that
their neighbor actually holds the key through a challenge-
response protocol. The shared key then becomes the key
for that link.
After key-setup is complete, a connected graph of secure
links is formed. Nodes can then set up path keys with nodes
Proceedings of the 2003 IEEE Symposium on Security and Privacy (SP(cid:146)03) 
1081-6011/03 $17.00 ' 2003 IEEE 
in their vicinity whom they did not happen to share keys
with in their key rings. If the graph is connected, a path can
be found from a source node to its neighbor. The source
node can then generate a path key and send it securely via
the path to the target node.
One needs to pick the right parameters such that the
graph generated during the key-setup phase is connected.
Consider a random graph G(n, pl), a graph of n nodes for
which the probability that a link exists between any two
nodes is pl. Erd¨os and R´enyi showed that for monotone
properties of a graph G(n, pl), there exists a value of pl
over which the property exhibits a “phase transition”, i.e. it
abruptly transitions from “likely false” to “likely true” [21].
Hence, it is possible to calculate some expected degree d for
the vertices in the graph such that the graph is connected
with some high probability c, where c = 0.999, for ex-
ample. Eschenauer and Gligor calculate the necessary ex-
pected node degree d in terms of the size of the network n
as:
(cid:2)
(ln(n) − ln(− ln(c)))
n − 1
n
d =
(cid:1)
(1)
From the formula, d = O(log n). In our examples we ex-
pect d to be in the range of 20 to 50.
For a given density of sensor network deployment, let n(cid:1)
be the expected number of neighbors within communication
range of a node. Since the expected node degree must be at
least d as calculated, the required probability p of success-
fully performing key-setup with some neighbor is:
p =
d
n(cid:1)
(2)
Since the models of connectivity are probabilistic, there
is always the chance that the graph may not be fully con-
nected. This chance is increased if the deployment pattern is
irregular or the deployment area has unpredictable physical
obstacles to communication. It is difﬁcult to anticipate such
scenarios prior to knowing the speciﬁcs of the deployment
area. To address this, if the network detects that it is discon-
nected, sensor nodes should perform range extension. This
may involve increasing their transmission power, or sending
a request to their neighbors to forward their communica-
tions for a certain number of hops. Range extension may be
gradually increased until a connected graph is formed after
key-setup. A useful way for a node to detect if a network is
connected is by checking if it can perform multi-hop com-
munication with all base stations. If not, range extension
should be performed.
5 q-composite random key predistribution
scheme
In the basic scheme, any two neighboring nodes need to
ﬁnd a single common key from their key rings to establish a
s
m
m
o
c