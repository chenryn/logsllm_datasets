>   
>  Figure 12 Extraction of Hashes with Mimikatz
#### 4.3. NT Hashes in Credential Guard
Windows Defender Credential Guard (WDCG) 是Windows
10的一个安全特性，它使用基于虚拟化的安全技术来保护秘密。最初，它在企业版(Enterprise)、教育版(Education)和服务器版(Server)都有，现在它也被包括在Windows
10 Pro中。  
WDCG引入了一个通过虚拟化隔离的LSASS进程(LSAISO)，该进程只允许"受信任的"(trusted)、"特权级的"(privileged)应用程序访问数据。系统的其余情况都无法访问此进程。恶意应用程序即使是`admin/SYSTEM`权限运行，也无法从LSASS/LSAISO进程获得凭据。  
WDCG保护了域的NTLM和"Kerberos派生凭证"(Kerberos derived credentials)，以及作为"域凭证"(domain
credentials)存储的应用程序的数据。
通过这种方式，微软试图阻止PtH攻击 (Microsoft, 2017)。它的引入激发了人们对未来的PtH攻击可行性的讨论(Green, 2017)。  
WDCG的一个重要限制是：WDCG不能保护SAM。  
此外WDCG会对功能产生负面影响：当启用WDCG时，它会blocks"特定的身份验证功能"(specific authentication
capabilities)，如"无约束的委托"(unconstrained delegation)、DES encryption、NTLMv1
(Joyce, 2019a)。因此，WDCG会对功能产生负面影响。
作者通过尝试在主机`GIAC-DOM-CG-E`上执行`sekurlsa::logonpassword`来测试WDCG。和预期相符，无法获得当前登录的用户`indomain_used1`的NT
hash (见Figure 13)。  
然而，作者能够获得当前已登录的"本地帐户"(local accounts)的hashes。对`GIAC-MSFT-CG-E`的重复测试表明，WDCG会阻止Mimikatz提取已登录的Microsoft账户的hash值。但你仍然可以通过命令`lsadump::sam`获得hash。
>
>   
>  Figure 13 Extraction of Hashes with Mimikatz – WDCG
`GIAC-DOM-CG-P`和`GIAC-MSFT-CG-P`经过了相同的测试。WDCG在这些主机上的激活过程与Windows 10
Education的激活过程相同。尽管WDCG正在运行，如 msinfo32、Device Guard、Credential
Guard硬件就绪工具(hardware readiness tool) 的报告，它似乎没有任何功能上的影响。 后来对"内心独白"(Internal
Monologue)的测试(见Section 4.4)得出了相同的结论。 因此，在PtH攻击的情况下，在Windows 10
Pro上激活WDCG不会产生任何积极影响(无法防御PtH)。
#### 4.4. Internal Monologue Attack
"内心独白"(Internal Monologue)是一种攻击技术，intruder提取所有已登录用户的NTLMv1
hashes。该工具的作者宣称它是Mimikatz的替代品，它越来越多地被防病毒解决方案检测到，而且它不能在WDCG环境下工作(Shamir, 2018)。
  * "内心独白"(Internal Monologue)攻击分为4个步骤:
    * 1.Windows 10默认不支持NTLMv1。 “内心独白”(Internal Monologue)更改注册表设置以强制主机使用NTLMv1而不用NTLMv2。 此步骤需要特权访问。
    * 2.该工具检索当前正在运行的进程的"非网络登录"(non-network login) tokens的列表。
    * 3.对于每个token，它使用"模拟"(impersonation)来强制主机为所选的challenge提供NTLMv1响应。
    * 4."内心独白"(Internal Monologue)将还原第1步中所做的更改。
如果攻击者没有管理员(admin)权限，则该攻击允许提取NTLMv2 hashes, 拿到这些hashes用处不大(见Section 2.2)
"内心独白"(Internal Monologue)的作者承认，该攻击在WDCG的环境中不起作用(Shamir, 2018)。WDCG阻止NTLMv1(见在
Section 4.3)。在这种情况下，"内心独白"只能提取NTLMv2 hashes。
尽管有此限制，在Mimikatz被阻止或容易检测到的环境中，"内心独白"(Internal Monologue)仍然是一种有用的技术。
测试证实，在没有WDCG的环境中，"内心独白"(Internal Monologue)工具成功提取了当前登录的本地和域用户的NTLMv1哈希(见Figure
14)。但是，不可能获得Microsoft帐户的 hashes。 在有WDCG的环境中，只能在Windows 10
Education主机上获取本地帐户和域帐户的NTLMv2 hashes 。
>
>   
>  Figure 14 Extraction of NTLMv1 Hashes with InternalMonologue
#### 4.5. Summary of Findings
Figure 15总结了Sections4.1, 4.2, 4.3, 和 4.4的结果。  
`+/-` 表示，在具有指定配置的主机上针对给定帐户类型，提取给定类型的hashes的可行性。
>
>   
>  Figure 15 Dumping Hashes in Various Configurations
测试表明，与本地帐户和Microsoft帐户相比，域帐户的保护级别更高。 在Windows 10的所有配置中，都可以从SAM中提取非域帐户(non-domain account)的hashes。域帐户的hashes仅容易从LSASS内存中提取出来。 启用了WDCG的配置中的Windows 10
Education在所有被分析的情况下都防止了hash提取，进一步提高了域帐户的安全性。
值得一提的是，即使在这种情况下，也可以应用其他攻击手段(例如:键盘记录程序，还有Section 5中讨论的攻击)
### 5\. Hash Extraction from Network
Section 4讨论了如何从一个"已控制的"(compromised)主机中提取hashes，而本Section 5分析了通过网络进行hash提取的方法。
#### 5.1. DCSync
在DCSync攻击中，攻击者模拟"域控制器"(DC,Domain Controller)的行为，以通过"域复制"(domain
replication)来取出密码hashes。它利用了无法被禁用的必要的功能(Berg, 2019)。一直以来，Administrators,
Domain Admins, 和 Enterprise Admins 以及DC(不包括
只读DC)的"帐户"(accounts)都具有的所需的权限(Metcalf,
2015a)。Mimikatz、Impacket、DSInternals等工具都实现了DCSync。
>
>   
>  Figure 16 Hash Retrieval with DCSync
使用`domain_used1`帐户和Mimikatz的`lsadump::dcsync`命令
对该技术进行了测试，该命令之前用于从注册表和LSASS中提取NT hashes。 如Figure
16所示，该技术使得获得`domain_used2`用户的NT hash成为可能。
此外，该命令返回了用户过去曾使用过的hashes的一个list，这对于破解(模式分析，pattern analysis)，以及"hash喷射"(hash
spraying)非常有用。
#### 5.2. Man-in-the-Middle Attacks
可以使用NTLMv2 hashes来设计中间人攻击(见 Section 2.2). Figure 17 展示了攻击步骤。
>
>   
>  Figure 17 NTLMv2 Relay Attack
  * 这种攻击可以分为2个部分:
    * (1)欺骗用户尝试认证到攻击者的机器(Tricking the user into trying to authenticate to the attacker’s machine)
    * (2)转发消息，使攻击者能够代表用户访问主机(Relaying the messages so that the attacker gets access to a host on behalf of the user)
可以使用各种协议执行攻击，例如SMB、HTTP、LDAP或MSSQL (Abraham, 2016)。为了使攻击生效，"受害者的计算机"(victim’s
machine)和"被攻击的主机"(attacked host)必须是2个不同的主机(Byt3bl33d3r,
2017)。为了避免这种限制，我们需要在攻击的每个部分(共2个部分)中使用不同的协议(Abraham, 2016)。
欺骗用户进行"身份验证"(authentication)的方法有很多种。  
在一些企业中，存在"主动防御系统"(active defense systems)或"漏洞扫描器"(vulnerability
scanners)，试图登录到网络上的任何新主机(Baggett, 2013)。  
社会工程学(Social engineering)是有用的，例如诱导用户点击位于攻击者的主机上的SMB共享的链接(Strand,
2018a)。Chrome支持自动下载SCF文件，这可以触发"身份验证"(Stankovic, 2017)。  
Metasploit提供了Word UNC
Injector模块，该模块可以生成一个word文档，这个word文档中有一个"指向到SMB资源"的"嵌入式链接"(embedded
link)。在编辑模式下打开文档后，该文档就开始一个与“攻击者选定的主机”进行NTLMv2身份验证的会话(Chandel, 2017)。
"ARP投毒"(ARP poisoning)或"DNS欺骗"(DNS
spoofing)，提供了充当中间人的通用方式，也可能导致NTLMv2中继攻击(Strand, 2018a)。
另一种方法是使用广播名称解析中毒(BNRP, Broadcast Name Resolution Poisoning)攻击，该攻击使用NBT-NS，LLMNR或mDNS。攻击者可以响应对"不存在的资源"的请求，例如，由于"拼写错误"或"配置错误"而执行的请求。尤其是在Windows
10电脑上使用默认配置的现代浏览器，会使用Web Proxy Auto-Discovery
(WPAD)协议。如果"内网"(Intranet)上没有WPAD服务器，则WPAD很容易受到BNRP攻击。如果攻击者能找到一种注册
"与该企业内部命名方案冲突的"(the internal naming scheme of the organization)
"通用顶级域"(generic Top-Level Domain ,gTLD)的方法，这种攻击甚至可以在Internet上使用(Abraham,
2016)。此外，攻击者甚至可以通过结合“对DNS服务器的DoS攻击”来响应对现有资源的请求(Abraham, 2016)。
可以使用impacket的库中包含了的ntlmrelayx工具来设置relay。  
另一种选择是用Responder的Multi Relay。
为了测试此技术的有效性，通过设置一个"可拦截、响应"(intercepted and responded) WPAD请求的SMB relay
(Byt3bl33d3r, 2017)。作为一个用户，打开了Chrome。在具有默认配置的Windows
10中，这是迫使计算机发出一个WPAD请求所需要做的全部工作。他使用Responder 2.3.4.0处理NBT-NS、LLMNR、mDNS
poisoning。如Figure 18演示了攻击。
>
>   
>  Figure 18 Responder Sending Poisoned Answers for WPAD
作者使用Imacket
0.9.15的`ntlmrelayx`命令来响应这些请求，发起NTLMv2身份验证，并将其"转发"(relay)给另一台服务器。最终，使作者有机会能够在"被控的"(compromised)服务器上执行`ipconfig`命令(见Figure
19)。
>
>   
>  Figure 19 Successful Authentication and Command Execution with ntlmrelayx
借助此技术，作者可以在具有和不具有WDCG的计算机上"冒充"(impersonate)本地帐户和域帐户。当被冒充的域用户具有管理员(admin)权限时，作者可以代表他/她执行命令。
当该攻击用于冒充Microsoft帐户时，攻击不会成功。有可能是与所使用的中继工具有关，而与Microsoft帐户的"基本安全等级"(fundamental
security level)无关。因为Microsoft帐户使用别名作为用户名(Microsoft accounts use aliases for
usernames)。如果中继工具没能正确解决这个问题，那么这个问题可能就是攻击失败的原因。
甚至可以进一步自动执行SMB relay攻击。ntlmrelayx命令的`-socks`选项的作用是：保持"身份验证会话"(authentication
sessions)处于active状态，并且通过SOCKS代理"链接"(chain)了命令(Solino, 2018)。联合国的Nicholas
Kosovich先生与作者分享了这种方法。
### 6\. Applying Extracted Hashes
Sections 4 和 5 介绍了各种hash提取的方法。Sections 6 解释如何利用获得到的hashes。  
我们已经在Section 5.2中看到了如何中继NTLMv2
hashes以获得对主机的访问权限，这个步骤与上一步骤（在中间人攻击中获取hashes）是密不可分的。然而，还有许多其他"可被利用的"(vulnerable)协议、技术接受该NT
hash进行身份验证。本Sections 6 将测试SMB、WMI、Kerberos和RDP来说明这种攻击。然而，据报道，SQSH (Duckwall &
Campbell, 2012)、HTTP Negotiate Authentication/WIA (Panayi, 2018)和WinRM
(Renard, 2017)也很容易受到攻击。
必须明白，"网络层面的PtH攻击"( the PtH attack over the network)可能会获取到什么"访问级别"(the level of
access)的权限，是至关重要的。  
当攻击者使用"域帐户"(domain
accounts)时，通过PtH获得的"访问级别"对应于所攻击者使用的那个域帐户的特权级别。不过，在本地Windows帐户、微软帐户方面，还有一个明显的区别，这个注册表项`HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\LocalAccountTokenFilterPolicy`在Windows
10中默认不存在(Schroeder,
2017)，当它存在并被启用时，可以使用“具有管理员权限的”本地管理员账户、Microsoft帐户来获得对主机的"特权访问"(privileged
access)。但是使用默认设置的话，在连接时本地管理员帐户和Microsoft账户将被剥夺"管理员权限"。用那些帐户仍然可能进行PtH，例如，他们可以用来连接到一个"文件共享"(file
share)，但他们不授予"特权访问"(privileged access)。这个问题适用于本文讨论的所有网络攻击方法，包括NTLMv2中继攻击。
仍然可以使用这些帐户进行PtH，例如，可以将这些帐户用于连接到一个文件共享，但是这些帐户不提供"特权访问"权限。此问题适用于本文讨论了的所有的"网络层面的PtH攻击方法"(the
PtH over the network attack methods)，包括NTLMv2 relay攻击。
#### 6.1. PtH over SMB
对网络层面的PtH攻击，主要使用SMB。  
可以使用metasploit的PsExec模块，或者Pass-the-Hash toolkit中的 pth-winexe 和 pth-rpcclient等工具。  
值得一提的是，与许多博客文章的内容相反，Sysinternals套件中的PsExec工具并不适合执行PtHattack (Renard, 2017)。
作者使用Metasploit的PsExec模块测试了PtH攻击。该工具首先使用已提供的"共享"(share)和"凭据"(credentials)
将"服务镜像"(service
image)部署到目标机器上，然后调用DCE/RPC来启动已部署的服务。为了生效，SMB必须是可用且可达的，必须启用"文件和打印机共享"(File and
Printer Sharing)，并且必须禁用"简单文件共享"(Simple File Sharing)。Figure
20展示了使用`domain_used1`的hash的成功连接。