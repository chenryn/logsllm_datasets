Figure 1: Hybrid experiments for the proof of Theorem 4.2. Their programs are based on
(Enc, Dec), the encoding scheme, (KGen, E, D) the encryption scheme, and E, the extractor that
is speciﬁed in the proof. The gray part signiﬁes the portion of the code that diﬀers from the
previous experiment.
2
introduced in Expf,Σ,s
, is exactly the same as the condition “If (r, sk, e) = (˜r, ˜sk, ˜e)”, of
3
experiment Expf,Σ,s
. This modiﬁcation does not induce any statistical diﬀerence. In the
next modiﬁcation, we check equality between (ˆr, ˆsk), (˜r, ˜sk), by checking if ¯h(ˆr, ˆsk) =
¯h(f1(r, sk)). Clearly, this part induces a statistical diﬀerence only if there is a collision
against ¯h, which happens with negligible probability, since ¯h is a universal hash function,
chosen by the current experiment, independently.
• Finally, we are going to show that Expf,Σ,s
, for any
→
0 denotes the zero-message. This follows by the semantic security of the
is indistinguishable from Expf,Σ,
3
3
message s, where
leakage resilient encryption scheme (Deﬁnition 2.9).
→
0
A concrete presentation of the hybrids, is given in Figure 1.
In the following claims we prove indistinguishability between the hybrids.
Claim 4.3. Assuming Hk is collision resistant and (KGen, E, D) is an authenticated leakage
resilient scheme for β(k) bits of leakage, for any f = (f1, f2) ∈ Fss and any message s,
Expf,Σ,s
, where Σ follows Init(1k).
≈c Expf,Σ,s
0
1
Proof. We observe, that the only diﬀerence between those two experiments, is that Expf,Σ,s
introduces the following branches of conditions: (1) (v = ˜v) ∧ (r, sk, e) = (˜r, ˜sk, ˜e); (2) (v =
˜v) ∧ (r, sk, e) (cid:54)= (˜r, ˜sk, ˜e); and (3) v (cid:54)= ˜v. It follows directly that for the conditions (1) and (3),
the two experiments are identical. Denote as B the event in which (2) happens and the output
conditioned on ¬B. By a
of Expf,Σ,s
standard analysis, we know that the statistical distance between the two experiments is bounded
by Pr[B].
is not ⊥. From the above we have that Expf,Σ,s
= Expf,Σ,s
0
1
0
1
14
1
Let E be the event in which (r, sk) = (˜r, ˜sk). Then we have Pr[B] = Pr[B ∧ E] + Pr[B ∧¬E].
We will prove that Pr[B ∧ E], Pr[B ∧ ¬E] ≤ negl(k). Towards contradiction, suppose there
exist function f ∈ Fss and message s, such that Pr[B ∧ ¬E] > , for some non-negligible .
Then, there exists a PPT adversary, A, that breaks the collision resistance property of Hk: the
adversary A just simulates the experiment Expf,Σ,s
and outputs (r, sk), (˜r, ˜sk). The function
f is computable in polynomial time, so the adversary is also polynomial-time. The adversary
wins if the event B ∧ ¬E happens, where by assumption we have Pr[B ∧ ¬E] > . Hence, the
attacker breaks collision resistance with non-negligible probability. Similarly, assuming there
exist function f ∈ Fss and message s, such that Pr[B ∧ E] > , for some non-negligible , we
have an attacker against the authenticity, under leakage, property of the encryption scheme:
the attacker samples hz ← Hk, r $← {0, 1}poly(k), and issues a leakage query ghz (x) := hz(r, x),
against the secret key of the encryption scheme. Then, it receives v = hz(r, sk) and e ← Esk(s),
executes (˜e, ˜v) ← f2(e, v), and outputs ˜e. Assuming Pr[B ∧ E] > , we have that ˜e (cid:54)= e is a valid
ciphertext with respect to the secret key sk, and the authenticity under leakage property of the
(cid:4)
encryption scheme breaks with non-negligible probability .
Claim 4.4. Assuming Hk is 1-more extractable, for any f = (f1, f2) ∈ Fss and any message s,
Expf,Σ,s
, where Σ follows Init(1k).
≈c Expf,Σ,s
1
2
2
1
, in the following way:
diﬀers from Expf,Σ,s
Proof. Expf,Σ,s
instead of using the real decoding
procedure, it simulates its output using the extractor of the 1-more extractable hash function
family, Hk. Below we show that those two experiments are computationally indistinguishable.
We ﬁrst notice that if (ˆr, ˆsk) = (˜r, ˜sk), i.e., if the extracted value matches the corresponding
value output by f , then, the two experiments are identical. So, our remaining task is to analyze
the case where the values are not the same, i.e., the case in which (ˆr, ˆsk) (cid:54)= (˜r, ˜sk). We denote
such an event with E. Then, we partition E into three cases: (1) E ∧(cid:0)hz(˜r, ˜sk) (cid:54)= ˜v(cid:1); (2)
E ∧(cid:0)hz(˜r, ˜sk) = hz(ˆr, ˆsk) = ˜v(cid:1); and (3) E ∧(cid:0)hz(˜r, ˜sk) = ˜v ∧ hz(ˆr, ˆsk) (cid:54)= ˜v(cid:1). We denote those
events by E1, E2, E3, respectively, and we analyze them as follows:
• First, we observe that, whenever E1 takes place, the two experiments are identical, as
both output ⊥. Thus, the statistical distance between those two experiments can be
upper bounded by Pr[E2] + Pr[E3].
• Next, we observe, that E2 happens exactly when there is a collision against Hk, i.e.,
(ˆr, ˆsk, ˆe) (cid:54)= (˜r, ˜sk, ˜e), and their hash values collide. By Lemma 3.2, we have Pr[E2]  , for  = 1/poly(k). We are
D such that | Pr[D(Σ, Expf,Σ,s
going to deﬁne an attacker A that breaks the semantic security against one-time leakage.
, where Σ ← Init(1k), and
) = 1] − Pr[D(Σ, Expf,Σ,
≈c Expf,Σ,
A has hardwired the leakage function as g(cid:48)
(sk) := g¯h,hz (r, sk) where r $← {0, 1}poly(k), ¯h $←
r,¯h,hz
→
$← Hk, and two messages, s0 = s, s1 =
0 . Then, on input
¯Hλ−1, hz
→
0
→
0
4
4
4
4
(cid:16)
e ← Esk(sb), (lmod, lhash, v) = g(cid:48)
r,¯h,hz
(sk)
(cid:17)
it sets q = Program(hz, ¯h, e, v, lmod, lhash), Σ = z, and outputs D(Σ, q), where Program is deﬁned
as follows
Program(hz, ¯h, e, v, lmod, lhash) :
(˜e, ˜v) ← f2(e, v)
b ← (lmod = 0 ∧ ˜e = e)
If v = ˜v :
If v (cid:54)= ˜v :
If (b = 1) : set ˜s = same∗
Else : set ˜s = ⊥
(ˆr, ˆsk) ← E(hz, v)
set ˜s = ⊥
If ¯h(ˆr, ˆsk) = lhash :
If hz(ˆr, ˆsk) = ˜v, set ˜s = D ˆsk(˜e)
Output ˜s.
It is straightforward to see that A simulates Expf,Σ,sb
, so the advantage of A in breaking the
semantic security of the leakage resilient encryption is the same with the advantage of D, in
distinguishing between Expf,Σ,s0
, which by assumption is non-negligible. This leads
(cid:4)
to a contradiction and the proof of the claim is complete.