Where OPTIONS include:  
-help   Prints out Replication CLI command-line usage  
-version        Prints out Replication CLI version  
-encrypt -input  -output    Encrypts input file to output file  
-repversion -repsvrfile   Prints Replication Server version  
-uptime -repsvrfile       Prints the time since the Replication Server has been in running state.  
Publication:  
-addpubdb -repsvrfile  -dbtype {oracle | enterprisedb | postgresql | sqlserver} -dbhost  -dbport  -dbuser  {-dbpassword  | dbpassfile } -database { | } [-oraconnectiontype {sid | servicename}] [-urloptions ]  [-filterrule {publication table filter id}] [-repgrouptype {m | s}] [-initialsnapshot [-verboseSnapshotOutput {true|false}]] [-nodepriority {1 to 10}] [-replicatepubschema {true|false}] [-changesetlogmode {T|W}]  Adds publication database  
-updatepubdb -repsvrfile  -pubdbid  -dbhost  -dbport  -dbuser  {-dbpassword  | dbpassfile } -database { | } [-oraconnectiontype {sid | servicename}]  [-urloptions ] [-nodepriority {1 to 10}]       Update publication database  
-printpubdbids -repsvrfile   
-printpubdbidsdetails -repsvrfile   
-removepubdb -repsvrfile  -pubdbid   
-gettablesfornewpub -repsvrfile  -pubdbid   
-createpub  -repsvrfile  -pubdbid  -reptype {T|S} -tables . [....] [-views . [....]] [-tablesfilterclause :: [::...]] [-viewsfilterclause :: [::...]][-conflictresolution :}> [:}>...]] [-standbyconflictresolution :}> [:}>...]] [-repgrouptype {M|S}]  
-validatepubs -repsvrfile  -pubdbid  -repgrouptype {m|s}  
-printpubfilterslist  -repsvrfile        Prints publication filters list  
-printpublist -repsvrfile  [-pubdbid ] [-printpubid]  Prints publications list  
-printpublishedtables  -repsvrfile       Print published tables  
-removepub  [...] -repsvrfile  -repgrouptype {m | s}  
-addtablesintopub  -repsvrfile  -tables . [....] [-views . [....]] [-tablesfilterclause :: [::...]] [-viewsfilterclause :: [::...]] [-conflictresolution :}> [:}>...]] [-standbyconflictresolution :}> [:}>...]] [-repgrouptype {M|S}]  
-removetablesfrompub  -repsvrfile  -tables . [....] [-views . [....]]   
-cleanrephistory -repsvrfile   
-cleanrephistoryforpub  -repsvrfile   
-cleanshadowhistforpub  -repsvrfile  [-mmrdbid [,...]]  
-confcleanupjob  -repsvrfile  {-enable {-hourly  | -daily  | -minutely  | -cronexpr  | -weekly  } | -disable}  
-confschedule  -repsvrfile  {-remove | {-jobtype {t | s} {-realtime  | -daily   | -weekly    | -monthly     | -cronexpr }}}  
-confschedulemmr  -pubname  -repsvrfile  {-remove | {{-realtime  | -daily   | -weekly    | -monthly     | -cronexpr }}}  
-printschedule { | } -repsvrfile { | } -repgrouptype {m | s}  
-validatepub  -repsvrfile  -repgrouptype {m | s}  
-dommrsnapshot  -pubhostdbid  -repsvrfile  [-verboseSnapshotOutput {true|false}]  
-replicateddl  -table  -repsvrfile  -ddlscriptfile   
-printconfresolutionstrategy  -repsvrfile  -table    
-updateconfresolutionstrategy  -repsvrfile  -table  -conflictresolution  -standbyconflictresolution  [-customhandlername ]  
-setasmdn  -repsvrfile    
-setascontroller  -repsvrfile    
-printcontrollerdbid -repsvrfile          Prints out Controller database id  
Subscription:  
-addsubdb -repsvrfile  -dbtype {oracle | enterprisedb | postgresql | sqlserver} -dbhost  -dbport  -dbuser  {-dbpassword  | -dbpassfile } -database { | }  [-urloptions ]  [-oraconnectiontype {sid | servicename}]       Adds subscription database  
-updatesubdb -repsvrfile  -subdbid  -dbhost  -dbport  -dbuser  {-dbpassword  | -dbpassfile } -database { | }  [-urloptions ]  [-oraconnectiontype {sid | servicename}]       Update subscription database  
-updatesub  -subsvrfile  -pubsvrfile  -host  -port     Update host/port of source publication server for a subscription  
-printsubdbids -repsvrfile   
-printsubdbidsdetails -repsvrfile   
-printmdndbid -repsvrfile   
-printsublist -repsvrfile  -subdbid   Prints subscriptions list  
-removesubdb -repsvrfile  -subdbid   
-createsub  -subdbid  -subsvrfile  -pubsvrfile  -pubname  -filterrule   
-dosnapshot  -repsvrfile  [-verboseSnapshotOutput {true|false}]  
-dosynchronize { | } -repsvrfile { | } [-repgrouptype {s|m}]  
-removesub  -repsvrfile   
-addfilter  -repsvrfile  -tables . [....] [-views . [....]] [-tablesfilterclause :: [::...]] [-viewsfilterclause :: [::...]]  
-updatefilter  -repsvrfile  -tablesfilterclause : [:...]  
-removefilter  -repsvrfile  -filterid   
-enablefilter -repsvrfile  {-dbid  | -subname } -filterids  [...]  
-disablefilter -repsvrfile  {-dbid  | -subname } -filterids  [...]  
```  
### 重启xDB sub,pub server  
```  
digoal@pg11-test-> ps -ewf|grep xdb  
digoal   16942     1  0 Feb03 ?        00:00:00 /bin/bash -c cd /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin; ./runPubServer.sh  >> /var/log/edb/xdbpubserver/edb-xdbpubserver.log 2>&1 &  
digoal   17024 16942  0 Feb03 ?        00:03:30 /usr/bin/java -XX:-UsePerfData -Xms256m -Xmx1536m -XX:ErrorFile=/var/log/xdb-6.2/pubserver_pid_%p.log -Djava.library.path=/opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin -Djava.awt.headless=true -jar /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin/edb-repserver.jar pubserver 9051  
digoal   17120     1  0 Feb03 ?        00:00:00 /bin/bash -c cd /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin; ./runSubServer.sh  >> /var/log/edb/xdbsubserver/edb-xdbsubserver.log 2>&1 &  
digoal   17202 17120  0 Feb03 ?        00:00:58 /usr/bin/java -XX:-UsePerfData -XX:ErrorFile=/var/log/xdb-6.2/subserver_pid_%p.log -Djava.awt.headless=true -jar /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin/edb-repserver.jar subserver 9052  
digoal@pg11-test-> kill 17024  
digoal@pg11-test-> ps -ewf|grep xdb  
digoal   17120     1  0 Feb03 ?        00:00:00 /bin/bash -c cd /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin; ./runSubServer.sh  >> /var/log/edb/xdbsubserver/edb-xdbsubserver.log 2>&1 &  
digoal   17202 17120  0 Feb03 ?        00:00:58 /usr/bin/java -XX:-UsePerfData -XX:ErrorFile=/var/log/xdb-6.2/subserver_pid_%p.log -Djava.awt.headless=true -jar /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin/edb-repserver.jar subserver 9052  
digoal@pg11-test-> kill 17202  
digoal@pg11-test-> ps -ewf|grep xdb  
su - digoal  
cat /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/etc/sysconfig/xdbReplicationServer-62.config  
#!/bin/sh  
JAVA_EXECUTABLE_PATH="/usr/bin/java"  
JAVA_MINIMUM_VERSION=1.7  
JAVA_BITNESS_REQUIRED=64  
JAVA_HEAP_SIZE="-Xms4096m -Xmx16384m"  
PUBPORT=9051  
SUBPORT=9052  
cd /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin  
nohup ./runPubServer.sh >> /var/log/edb/xdbpubserver/edb-xdbpubserver.log 2>&1 &   
nohup ./runSubServer.sh  >> /var/log/edb/xdbsubserver/edb-xdbsubserver.log 2>&1 &  
digoal@pg11-test-> ps -ewf|grep xdb  
digoal    7767  7687  1 10:46 pts/8    00:00:01 /usr/bin/java -XX:-UsePerfData -Xms4096m -Xmx16384m -XX:ErrorFile=/var/log/xdb-6.2/pubserver_pid_%p.log -Djava.library.path=/opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin -Djava.awt.headless=true -jar /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin/edb-repserver.jar pubserver 9051  
digoal    7981  7901  2 10:47 pts/8    00:00:01 /usr/bin/java -XX:-UsePerfData -XX:ErrorFile=/var/log/xdb-6.2/subserver_pid_%p.log -Djava.awt.headless=true -jar /opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/bin/edb-repserver.jar subserver 9052  
```  
## 参考  
1、[xDB PDF手册](20190203_01_pdf_001.pdf)  
2、[《MTK使用 - PG,PPAS,oracle,mysql,ms sql,sybase 迁移到 PG, PPAS (支持跨版本升级)》](../201812/20181226_01.md)    
3、[《Linux vnc server, vnc viewer(远程图形桌面)使用》](../201902/20190203_02.md)    
4、xDB 配置文件  
/opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/etc/xdb_pubserver.conf  
```  
性能相关配置  
#This option represents the MTK option "-cpBatchSize" that has a default value of 8MB.  
#The user can customize the default value to optimize the data speed for Snapshot  
#that involves large datasets and enough memory on the system.  
# size in MB  
#cpBatchSize=8            
#This option represents the MTK option "-batchSize" that has a default value of 100 rows.  
# size in rows  
#batchSize=100  
#The option to import Oracle Partitioned table as a normal table in PPAS/PPSS.  
#importPartitionAsTable=false  
#It controls how many rows are fetched from the publication database in one round (network) trip. For example,  
#if there are 1000 row changes available in shadow table(s), the default fetch size will require 5 database round trips.  
#Hence using a fetch size of 500 will bring all the changes in 2 round trips. Fine tune the performance by using a fetch size  
#that conforms to the average data volume consumed by rows fetched in one round trip.   
#syncFetchSize=200  
#Synchronize Replication batch size. Default to 100 statements per batch.  
#syncBatchSize=100  
#This defines the maximum number of transactional rows that can be grouped in a single transaction set.  
#The xDB loads and processes the delta changes by fetching as many rows in memory as grouped in a single  
#transaction set. A higher value is expected to boost the performance. However increasing it to a very large  
#value might result in out of memory error, hence increase/decrease the default value in accordance with  
#the average row size (low/high).  
#txSetMaxSize=10000  
#This option controls the number of maximum threads used to load data from source publication tables  
#in parallel mode. The default count is 4, however depending on the target system  
#architecture specifically multi CPUs/cores one can choose to specify a custom count (normally  
#equals CPU/core count) to fully utilize the system resources.  
#syncLoadThreadLimit=4  
#It defines the upper limit for number of (WAL) entries that can be hold in the queue  
#A value of zero indicates there will be no upper limit. The default is set to 10000.  
#walStreamQueueLimit=10000  
```  
/opt/PostgreSQL/EnterpriseDB-xDBReplicationServer/etc/xdb_subserver.conf  
```  
性能相关配置  
#The option to import Oracle Partitioned table as a normal table in PPAS/PPSS.  
#importPartitionAsTable=false  
#This option controls the number of threads used to perform snapshot data migration in parallel mode.  
#The default behavior is to use a single data loader thread. However depending on the target system  
#architecture specifically multi CPUs/cores one can choose to specify a custom count (normally  
#equals CPU/core count) to fully utilize the system resources.  
#snapshotParallelLoadCount=1  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")