70-73, 98
dynamicregex 327-331
Java 98
sanitizing 337
.NET 99
dynamic scope
295-299
embedded code
vs. lexical scope 299
loca1 336
my338-339
regex construct
327,331-335
\E290
sanitizing 337
(see also literal-text mode)
embedded string check optimization 247,
Java 368, 395, 403
257
\e79,115-116
EmbodimentsofMind85
/e319-321
Bmpty433
carliestmatch wins
148-149
empty-elementtag
481
EBCDIC29
cncapsulation
(see regex objects)
ECMAScript（.NET)
406, 408, 412-413,421,
\p(Enclosing_Mark) 123
427
encoding(see also Unicode)
ed85
ASCHI 29,106-107,115,123
efficiency
(see also optimization)
introduced 29
and backtracking 179-180
issues overview 105
correctness 223-224
Latin-1 29,87, 106, 108, 123
Perl 347-363
UCS-2 107
Perl-specific issues 347-363
UCS-4107
PHP 478-480
UTF-16 107
regex objects 353-354
UTF-8 107, 442, 447
unlimited lookbehind 134
END block 358
egrep
endmethod377
after-match data 138
end of line （see anchor,dollar)
backreference support
150
endofpreviousmatch （see\G)
case-insensitive match 15
end ofword
(see wordboundaries)
doubled-word solution 22
end-of-stringanchoroptimization246
example use 14
engine
flavor overview 92
analogy 143-147
flavor summary 32
hybrid 182,239,243
history 86-87
implementation ease 183
introduced 6-8
introduced27
metacharacter discussion 8-22
testing type 146-147
regex implementation 183
withneverendingmatch 227
version covered 91
type comparison 156-157,180-183
---
## Page 521
索引
495
Rnglish module 357
cxample (cont'd)
English vs.regex 275
gr[ea]y9
enhanced line-anchormode112-113
hostname 22,73,76,98-99,137-138,
introduced 69
203,260,267-268,304,306,
ERE87-88
450-451
ereg sulte439
egrep25
errata xxii
Java 209
Eacape
432
plucking from text 71-73,206-208
cscape
in URL74-77
introduced 22
validating 203-205
term defined 27
VB.NET 204
essence
HREF 452
atomic grouping 170-171
HTML 443-444, 459, 461, 464, 481, 484
greediness,laziness,and backtrack-
conversion from text 67-77
ing 168-169
cooking 68,414
NFA (see backtracking)
encoding414
eval 319
194
example
link 201-203
atomic grouping 198,201,213,271,
optional 140
330,340-341,346
paired tags 165
commafying a number 64-65
parsing 132,315,321,399
introduced 59
tag9,18-19,26,200-201,326,357
without lookbehind 67
URL 74-77, 203, 206-208, 303,
CSV parsing
450-451
Java 217,401
URL-encoding 320
.NET 435
HTTP response 467
Perl 213-219
image tags 397
PHP 480
IP5,187-189,267-268,311,314,
unrolling 271
348-349
VB.NET 219
Jeffs61-64
dollar value 24-25,51-52,167-170,175,
lookahead 61-64
194-195
mail processing 53-59
double-quoted string
makudonarudo 165,169,228-232,264
allowing escaped quotes 196
pathname 190-192
egrep24
population 59
finai regex264
possessive quantifers 198,201
makudonarudo 165,169,228-232,
postal code 209-212
264
regex overloading 341-345
sobering example 222-228
stock pricing 51-52,167-168
unrolled 262,268
with alternation 175
double-word finder 81
with atomic grouping170
description 1
withpossessive quantifier169
egrep22
temperature conversion
Emacs 101
Java382
Java 81
.NET 425
Perl 35, 77-80
Perl 37,283
email address 70-73,98
PHP444
Java98
text-tO-HTML67-77
.NET 99
this|that 133,139,243,245-247,252,
filename 190-192,444
255,260-261
five modifiers 316
unrolling the loop 270-271,477
floating-point number 194
form letter 50-51
---
## Page 522
496
索引
example (cont'd)
findmethod375
URL 74-77,201-204, 208, 260, 303-304,
region 384
306, 320, 450-451
FindAmpersand
358
egrep25
Fite,Liz 33
Java 209
five modifiers example
316
plucking 206-208
flags method 394
username 73,76,98
flavor
plucking from text 71-73
Perl 286-293
in URL 74-77
superficial chart
variable names 24
general92
XML 481-484
Java367
ZIP code 209-212
.NET 407
exception
PCRE 441
I1legalArgumentException 373,380
Perl 285, 287
I1legalStateException 376-377
PHP 441
Index0utofBoundsException 375-376,
POSIX 88
380
term defined 27
IOException 81
flexversion covered91
PatternSyntaxException 371,373
floatingregex cache
(seeregex objects)
Explicit(Option)
415
floating`string'
362
ExplicitCapture(.NET)
408, 420, 427
floatingpointnumberexample
：194
exponentialmatch222-228,330,340
forcing failure 241,333,335,340-341
avoiding 264-266
foreach vs.while vs.if 320