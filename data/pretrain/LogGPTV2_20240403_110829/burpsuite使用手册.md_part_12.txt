第十四章 BurpSuite全局参数设置和使用
点击【Add】按钮来新建一个宏，则Burp将弹出宏信息录入界面。
宏信息的录入界面为图中的Macros Editor，而图中的Macros Recorder界面为请求的记录。当
我们新建宏操作时，可以选择一条或一组的请求记录，做为宏的基础。
如上图所示，选择序列18~22的记录作为宏的序列，点击【OK】保存序列后，配置参数信
息。
169
第十四章 BurpSuite全局参数设置和使用
当我们点击【configure Item】按钮时，即弹出参数配置界面（如上图）。其配置界面分上下
两个部分，上部为图中1所示，主要是对已有参数值的设置，下部为图中2所示，我们可以根
据实际场景的需要，添加自定义参数和参数值。 完成了如上的设置之后，我们点击【OK】按
钮，则一个宏已经被正确的创建。 3. 宏的使用 完成宏的设置之后，下面我们就看看宏在渗透
测试中通常是被如何使用的。在会话处理规则（Session Handling Rules）章节中我们知道，
配置【Rule Actions】时有Run a Macro、Run a Post-Request Macro两个选项，当我们设
置了其中的选项，针对于当前会话，在作用域的范围内，宏就会生效。无论你设置了哪种类
型的宏，其使用的数据处理逻辑大体如下图所示：
170
第十四章 BurpSuite全局参数设置和使用
其中图中1所示为通过宏应答的响应更新参数的值，我们可以全量更新参数值也可以部分更新
参数值；图中2所示为更新cookie的值，同样，我们也可以全量更新参数值也可以部分更新参
数值；图中3所示为执行宏之后，还可以执行Burp的插件，需要执行的插件即在此处配置。
显示设置（Display）
和其他的软件一样，Burp也存在显示设置，作为软件与用户习惯交互的接口。 Burp的显示设
置主要包含：用户界面（User Interface）、Http消息显示（HTTP Message Display）、字符
集设置（Character Sets）以及页面渲染（HTML Rendering）
用户界面主要用来设置字体和界面风格
171
第十四章 BurpSuite全局参数设置和使用
常用的有
Windows风格、Windows经典风格、Nimbus等，修改配置后，需要重启Burp才会生效。
Http消息显示主要用来设置其他Burp工具组件中http消息的显示字体、高亮等形式。
字符集设置主要用来设置http消息显示时使用的字符集编码，正确的使用字符集是防止消
息显示乱码的基础，默认情况下会自动获取系统字符集。
页面渲染是指http消息进行渲染时，是否也显示图片等信息，如果显示图片，可能会增加
新的http请求消息。
杂项设置（Misc）
Burp的杂项主要包含以下七个部分内容：
快捷键设置（Hotkeys）
172
第十四章 BurpSuite全局参数设置和使用
Burp的快捷键设置遵循了系统软件的设置习惯，比如Ctrl+V、Ctrl+C、Ctrl+Z都是和操作
系统一样，同时，在各个工具组件之间的切换和消息传递时，Burp的快捷键基本遵循了
Ctrl+组件的首字母，例如： send to Repeater是Ctrl+R send to Intruder是Ctrl+I 详细的快
捷键读者自己在使用过程中，会慢慢熟悉，而且，Burp也提供了自定义快捷键的功能，
只有点击下方的【Edit hotkeys】按钮，进行修改即可。
日志设置（Logging）
用来控
制Burp中的哪些工具组件需要记录日志，记录时，也可以单独记录请求或者应答消息。
临时文件位置（Temporary Files Location）
默认情况下，burp会在用户的系统目录作为临时文件的目录，同样，我们也可以修改这
个目录，指定其他的盘符目录作为临时文件目录，burp在工作过程中，产生的临时数据
会存放在此目录中。如果修改了此设置，需重启Burp后方可生效。
自动备份设置（Automatic Backup）
173
第十四章 BurpSuite全局参数设置和使用
此设置用于保存Burp的状态和配置，设置完成后，会在后台定时地保存Burp的当前配置
参数和运行状态。
任务队列（Scheduled Tasks）
我们可以通过任务队列的管理，来控制任务的开始和结束以及周期性运行。目前Burp的
任务控制主要为以下几类（如下图），点击【Add】按钮，按照操作向导一步步的执行即
174
第十四章 BurpSuite全局参数设置和使用
可。
性能反馈（Performance Feedback） 主要用于Burp的使用问题或bug反馈。
175
第十五章 BurpSuite应用商店插件的使用
Burp Suite应用商店插件的使用
Burp在软件中提供了支持第三方拓展插件的功能，方便使用者编写自己的自定义插件或从插
件商店中安装拓展插件。Burp扩展程序可以以多种方式支持自定义Burp的行为，例如：修改
HTTP请求和响应，自定义UI，添加自定义扫描程序检查以及访问关键运行时信息，包括代理
历史记录，目标站点地图和扫描程序问题等。 本章讲述的主要内容有：
应用商店插件的安装使用（BApp Store）
管理和加载Burp 插件（Extension）
其他选项设置（Options）
应用商店插件的安装使用
在Burp Extender 面板中，有一个BApp Store的Tab页，这就是Burp的应用商店，内容是提供
各种Burp的插件。 默认情况下，当你点击【BApp Store】的Tab页时，界面列表会显示插件
明细，若你的环境是通过代理访问外网的，则需要在【Options】->【Connections】-
>【Upstream Proxy Servers】进行设置，具体如下图所示：
其中代理服务器的host和port为你本地的网络环境访问外网的代理主机和端口，更详细的设置
请参加Connections章节相关内容。
176
第十五章 BurpSuite应用商店插件的使用
如果你的网络设置没有问题，则应用商店的界面显示大体如下：
从图中我们可以看出，左边为各个插件的应用列表，当选中某个插件后，右侧显示的为该插
件的描述信息和安装信息。 如果我们需要使用某个插件，则点击右侧下方的【install】按钮，
进行安装。
177
第十五章 BurpSuite应用商店插件的使用
此时，安装按钮置为灰色，同时显示为【installing】，右下角也显示安装中，如上图。安装完
成后，界面会显示重新安装【Reinstall】和插件评分按钮【Submit rating】，作为插件商店的
用户推荐。 安装完毕后，在
Burp Extender 的Extension的Tab页面中，会自动显示已加载的插件列表。通过插件列表的管
理，我们可以对插件进行后期的维护。
178
第十五章 BurpSuite应用商店插件的使用
当然，除了从应用商店自动安装插件外，我们也可以下载插件，进行手工安装。如下图：
179
第十五章 BurpSuite应用商店插件的使用
当我们点击图中1处的手工安装按钮，则弹出插件安装文件存储的盘符，选择指定的插件文
件，点击打开即可进行安装。
管理和加载Burp 插件（Extension）
从上一章节我们已经了解到，安装完成的插件，都会显示在插件列表中。
如果我们想对某个插件的配置信息进行编辑，则如上图中所示，选中插件，其下方的
【Details】标签页会显示插件的拓展信息，如：拓展的插件类型（java/Python/Ruby）、插件
的文件名、存储的位置。 除了【Details】标签页外，【Output】和【Errors】两个页面分别
可以设置此插件的标准输出和错误信息输出信息。
从上图中我们可以看出，日志信息的输出有三种方式： a)系统控制台输出 b)存储到指定的文
件中 c)Burp的界面输出 默认情况下，会选择Burp的界面输出。在实际应用中，我们可以根据
自己的需要，对日志的存储方式进行调整。
180
第十五章 BurpSuite应用商店插件的使用
其他选项设置
Burp插件的其他选项设置主要是指Options 的Tab页中的相关设置。
从图中我们可以看出，【Setting】的设置是指：是否启动时自动重新加载burp插件，当我们
选择此项时，Burp在重启时，会自动加载Burp在上次关闭时加载的插件内容；而剩下的三项
设置是根据插件类型的不同时所需要的运行环境的配置。我们先来看第一个运行环境【Java
Environment】。
Burp Suite是基于Java语言开发的软件，通常情况下，当你运行此软件时，系统中的
JAVA_HOME、CLASS_PATH、LIB_PATH变量均已正确地配置完成，否则你是难以运行
Burp Suite的，所以，通常情况下你是无须再配置此参数；如果实在需要配置，你的插件需要
特殊的jdk版本要求或者其他ja，则选择将jar添加即可。
181
第十五章 BurpSuite应用商店插件的使用
而【Python Environment】和【Ruby Environment】是Burp插件的Python运行环境和Ruby运
行环境的配置。前文我们已经知道，Burp是java语言编写的软件，所以运行Python和Ruby需
要配置兼容Java与Python、Java与Ruby的jar,默认情况下，Burp支持的为JPython和JRuby，
这两个软件的地址分别是 ：http://www.jython.org/、http://jruby.org.其安装方式非常简单，此
处以JPython为例： 1.下载JPython的安装包，Jpython的安装分jython-installer-2.7.0.jar和
jython-standalone-2.7.0.jar两个。如果使用jython-installer，则下载完毕后，双击此jar，按照
安装向导，一路【Next】到如下图的界面，记录安装路径。然后一直默认，直至安装结束。
如果使用jython-standalone-2.7.0.jar，则直接进行第2步。 2.在Burp的Python Environment环
境中配置Jpython，如果使用的jython-standalone-2.7.0.jar，则如下图指定jar存放的位置即
可；如果是使用jython-installer方式，则指定安装的文件夹，由软件自己加载（此处为了说明
使用的方式，两个输入域均输入了，实际使用时，Jpython之输入其中之一即可）。
182
第十五章 BurpSuite应用商店插件的使用
至于JRuby的配置与JPython类似，此处就不再赘述。配置完插件运行的可依赖环境之后，当
我们使用插件时就能正常使用，否则，在插件的【Errors】标签页中会有错误的提示信息，我
们可以根据错误提示来修改自己的配置。
++值得注意的是，当我们使用Burp插件功能，对于Burp运行时所需要的JVM内存占用比较
大，一般建议设置为1G，具体设置请参考第一章节。++
183
第十六章 如何编写自己的BurpSuite插件
如何编写自己的Burp Suite插件
Burp Suite的强大除了自身提供了丰富的可供测试人员使用的功能外，其提供的支持第三方拓
展插件的功能也极大地方便使用者编写自己的自定义插件。从上一章节我们已经了解到，
Burp Suite支持的插件类型有Java、Python、Ruby三种。无论哪种语言的实现，开发者只要
选择自己熟悉的语言，按照接口规范去实现想要的功能即可。下面我们就来看看如何开发一
个Burp Extender的插件。 本章讲述的主要内容有：
API简述
Burp插件的编写前准备
Burp插件的编写（Java语言版）
API简述
184
第十六章 如何编写自己的BurpSuite插件
打开Burp Extender的APIs的Tab页，看到的界面如下图所示：
界面由左边的接口类和右边的接口定义和描述构成，其中左边的最下端有两个按钮，图中1按
钮为保存接口类，当我们点击保存后，在指定的存储目录下，会生成一系列的java文件，如下
图：
185
第十六章 如何编写自己的BurpSuite插件
这些文件的内容即为前一张图中右边所示的内容，按照java语言的源文件格式存放的，在编写
插件时，可直接将burp包引入Project中使用。而前一张图中2按钮为保存Javadocs,点击保存
后，会在存储目录中存放与API相对应的JavaDocs文件。用浏览器打开则如下图所示：
186
第十六章 如何编写自己的BurpSuite插件
除了上文说的，我们能导出JavaDocs到本地外，Burp官方也提供了一份在线文档，地址
为：https://portswigger.net/burp/extender/api/index.html 下面我们根据接口功能的不同对API
进行分类。