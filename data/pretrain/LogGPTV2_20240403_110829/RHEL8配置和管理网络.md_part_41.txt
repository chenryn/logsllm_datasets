1.  确保备份原始配置文件。
    ``` screen
    # cp /etc/named.conf /etc/named.conf.orig
    ```
2.  使用以下更改编辑 `named.conf`{.literal} 文件：
    ::: itemizedlist
    -   在 options 部分，取消注释
        `listen-on`{.literal}、`listen-on-v6`{.literal} 和
        `directory`{.literal} 参数：
        ``` screen
        acl clients {192.0.2.0/24;};
        options {
                listen-on port 53 { any; };
                listen-on-v6 port 53 { any; };
                directory       /var/named;
        ```
    -   将 `allow-query`{.literal}
        参数设置为您的网络地址。只有本地网络上的主机可以查询 DNS
        服务器。
        ``` screen
            allow-query     { localhost; clients; };
            allow-recursion { localhost; clients; };
            recursion yes;
            allow-update { none; };
            allow-transfer { localhost; };
        };
        logging {
                channel default_debug {
                        file data/named.run;
                        severity dynamic;
                };
        };
        ```
    -   使用软件包提供的文件：
        ``` screen
        include /etc/named.rfc1912.zones;
        ```
    -   为任何自定义区域配置创建额外的 include。
        ``` screen
        include /etc/named/example.zones;
        ```
    :::
3.  创建 `/etc/named/example.zones`{.literal} 文件并添加以下区配置。
    ``` screen
    //forward zone
    zone example.com IN {
            type master;
            file example.com.zone;
    };
    //backward zone
    zone "2.0.192.in-addr.arpa" IN {
            type master;
            file example.com.rzone;
    };
    ```
    ::: itemizedlist
    -   Type：它定义服务器的区域角色。
    -   主服务器：它是权威服务器，维护区域数据的主副本。
    -   file：指定区域的数据库文件。
    :::
4.  进入 DNS 数据目录 `/var/named/`{.literal}。
    ``` screen
    # cd /var/named/
    # ls
    data    dynamic  named.ca  named.empty    named.localhost    named.loopback  slaves
    ```
5.  创建 DNS 记录文件并添加 DNS 记录数据。
    ``` screen
    # cp -p named.localhost example.com.zone
    ```
6.  使用您的转发区域参数编辑 [*example.com.zone*]{.emphasis}。
    ``` screen
    $TTL    86400
    @               IN SOA  example.com. root (
    42              ; serial
    3H              ; refresh
    15M             ; retry
    1W              ; expiry
    1D )            ; minimum
                    IN NS           ns
    ;use IP address of named machine for ns
    ns       IN A          192.0.2.1
    station0        IN A            192.168.x.xxx
    station1        IN A            192.168.x.xxx
    station2        IN A            192.168.x.xxx
    station3        IN A            192.168.x.xxx
    ```
7.  创建 [*example.com.rzone*]{.emphasis} 文件。
    ``` screen
    # cp -p named.localhost example.com.rzone
    ```
8.  使用您的反向区域参数编辑 [*example.com.rzone*]{.emphasis} 文件。
    ``` screen
    $TTL    86400
        @       IN      SOA     example.com. root.example.com.  (
        1997022700 ; serial
        28800      ; refresh
        14400      ; retry
        3600000    ; expire
        86400 )    ; minimum
                IN      NS      ns.example.com.
        101     IN      PTR     station1.example.com.
        102     IN      PTR     station2.example.com.
        103     IN      PTR     station3.example.com.
        104     IN      PTR     station4.example.com.
    ```
    ::: itemizedlist
    **验证步骤**
    -   验证区域文件
        ``` screen
        # named-checkzone example.com example.com.zone
        zone example.com/IN: loaded serial xxxxxxx
        OK
        ```
    -   验证配置。
        ``` screen
        # named-checkconf /etc/named.conf
        ```
        如果配置正确，命令不会返回任何输出。
    :::
:::
:::
:::
[]{#using-and-configuring-firewalld_configuring-and-managing-networking.html}
::: chapter
::: titlepage
# []{#using-and-configuring-firewalld_configuring-and-managing-networking.html#using-and-configuring-firewalld_configuring-and-managing-networking}第 46 章 使用和配置 firewalld {.title}
:::
[*防火墙*]{.emphasis}是保护机器不受来自外部的、不需要的网络数据的一种方式。它允许用户通过定义一组[*防火墙规则*]{.emphasis}
来控制主机上的入站网络流量。这些规则用于对进入的流量进行排序，并可以阻断或允许流量。
`firewalld`{.literal} 是一个防火墙服务守护进程，通过 D-Bus
接口提供动态可定制的主机防火墙。如果是动态的，它可在每次修改规则时启用、修改和删除规则，而不需要在每次修改规则时重启防火墙守护进程。
`firewalld`{.literal} 使用区域和服务（简化流量管理）的概念。zones
是预定义的规则集。网络接口和源可以分配给区。允许的流量取决于您计算机连接到的网络，并分配了这个网络的安全级别。防火墙服务是预定义的规则，覆盖了允许特定服务进入流量的所有必要设置，并在区中应用。
服务使用一个或多个端口或地址进行网络通信。防火墙会根据端口过滤通讯。要允许服务的网络流量，必须打开其端口。`firewalld`{.literal}
阻断未明确设置为打开的端口上的所有流量。一些区（如可信区）默认允许所有流量。
请注意，带有 `nftables`{.literal} 后端的 `firewalld`{.literal}
不支持使用 `--direct`{.literal} 选项将自定义 `nftables`{.literal}
规则传递给 `firewalld`{.literal}。
::: section
::: titlepage
# []{#using-and-configuring-firewalld_configuring-and-managing-networking.html#getting-started-with-firewalld_using-and-configuring-firewalld}开始使用 `firewalld`{.literal} {.title}
:::
本节提供有关 `firewalld`{.literal} 的信息。
::: section
::: titlepage
## []{#using-and-configuring-firewalld_configuring-and-managing-networking.html#when-to-use-firewalld-nftables-or-iptables_getting-started-with-firewalld}使用 firewalld、nftables 或者 iptables 时 {.title}
:::
以下是您应该使用以下工具之一的概述：
::: itemizedlist
-   `firewalld`{.literal}: 将 `firewalld`{.literal}
    工具用于简单的防火墙用例。实用程序易于使用，并涵盖这些情况下的典型用例。
-   `nftables`{.literal}: 使用 `nftables`{.literal}
    实用程序设置复杂和性能关键的防火墙，例如为整个网络设置。
-   `iptables`{.literal}: Red Hat Enterprise Linux 中的
    `iptables`{.literal} 工具使用 `nf_tables`{.literal} 内核 API 而不是
    `legacy`{.literal} 后端。`nf_tables`{.literal} API
    提供向后兼容，使用 `iptables`{.literal} 命令的脚本仍可在 Red Hat
    Enterprise Linux 中使用。对于新的防火墙脚本，红帽建议使用
    `nftables`{.literal}。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
要避免不同的防火墙服务相互影响，在 RHEL
主机中只有一个服务，并禁用其他服务。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_configuring-and-managing-networking.html#firewalld-zones_getting-started-with-firewalld}Zones {.title}
:::
`firewalld`{.literal}
可以用来根据用户决定放置在那个网络中的接口和流量级别的信任级别将网络划分为不同的区。一个连接只能是一个区的一部分，但一个区可以被用来进行很多网络连接。
`NetworkManager`{.literal} 通知接口区的
`firewalld`{.literal}。您可以为接口分配区：
::: itemizedlist
-   `NetworkManager`{.literal}
-   `firewall-config`{.literal} 工具
-   `firewall-cmd`{.literal} 命令行工具
-   RHEL web 控制台
:::
后三个只能编辑正确的 `NetworkManager`{.literal} 配置文件。如果您使用 web
控制台 `firewall-cmd`{.literal} 或 `firewall-config`{.literal}
更改接口区域，则请求会转发到 `NetworkManager`{.literal} 且不由
⁠`firewalld`{.literal} 处理。
预定义区域存储在 `/usr/lib/firewalld/zones/`{.literal}
目录中，并可立即应用于任意可用的网络接口。只有在修改后，这些文件才会复制到
`/etc/firewalld/zones/`{.literal} 目录中。预定义区的默认设置如下：
::: variablelist
[`block`{.literal}]{.term}
:   任何传入的网络连接都会通过 `IPv4`{.literal} 的 icmp-host-prohibited
    消息和 icmp6-adm-prohibited( `IPv6`{.literal}
    )拒绝。只有从系统启动的网络连接才能进行。
[`dmz`{.literal}]{.term}
:   对于您的非企业化区里的计算机来说，这些计算机可以被公开访问，且有限访问您的内部网络。只接受所选的入站连接。
[`drop`{.literal}]{.term}
:   所有传入的网络数据包都会丢失，没有任何通知。只有外发网络连接也是可行的。
[`external`{.literal}]{.term}
:   适用于启用了伪装的外部网络，特别是路由器。您不信任网络中的其他计算机不会损害您的计算机。只接受所选的入站连接。
[`home`{.literal}]{.term}
:   用于家用，因为您可以信任其他计算机。只接受所选的入站连接。
[`internal`{.literal}]{.term}
:   当您主要信任网络中的其他计算机时，供内部网络使用。只接受所选的入站连接。
[`public`{.literal}]{.term}
:   可用于您不信任网络中其他计算机的公共区域。只接受所选的入站连接。
[`trusted`{.literal}]{.term}
:   所有网络连接都被接受。
[`work`{.literal}]{.term}
:   可用于您主要信任网络中其他计算机的工作。只接受所选的入站连接。
:::
这些区中的一个被设置为 [*default*]{.emphasis} 区。当接口连接添加到
`NetworkManager`{.literal}
时，它们会被分配给默认区。安装时，`firewalld`{.literal} 的默认区设置为
`public`{.literal} 区。默认区可以被修改。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
网络区名称应该自我解释，并允许用户迅速做出合理的决定。要避免安全问题，请查看默认区配置并根据您的需要和风险禁用任何不必要的服务。
:::
::: itemizedlist
**其它资源**
-   `firewalld.zone(5)`{.literal} man page。
:::
:::
::: section
::: titlepage
## []{#using-and-configuring-firewalld_configuring-and-managing-networking.html#predefined-services_getting-started-with-firewalld}预定义的服务 {.title}
:::
服务可以是本地端口、协议、源端口和目的地列表，并在启用了服务时自动载入防火墙帮助程序模块列表。使用服务可节省用户时间，因为它们可以完成一些任务，如打开端口、定义协议、启用数据包转发等等，而不必在另外的步骤中设置所有任务。
服务配置选项和通用文件信息请参考 `firewalld.service(5)`{.literal} man
page。服务通过单独的 XML 配置文件指定，这些文件使用以下格式命名：
`service-name.xml`{.literal}协议名称优先于 `firewalld`{.literal}
中的服务或者应用程序名称。
可使用图形 `firewall-config`{.literal} 工具、`firewall-cmd`{.literal} 和
`firewall-offline-cmd`{.literal}添加和删除服务。
另外，您也可以编辑 `/etc/firewalld/services/`{.literal} 目录中的 XML
文件。如果用户没有添加或更改服务，则在
`/etc/firewalld/services/`{.literal} 中没有找到对应的 XML
文件。如果要添加或更改服务，`/usr/lib/firewalld/services/`{.literal}
目录中的文件可作为模板使用。
::: itemizedlist
**其它资源**
-   `firewalld.service(5)`{.literal} man page
:::
:::
:::
::: section
::: titlepage
# []{#using-and-configuring-firewalld_configuring-and-managing-networking.html#viewing-the-current-status-and-settings-of-firewalld_using-and-configuring-firewalld}查看当前状态和设置 `firewalld`{.literal} {.title}
:::
本节论述了有关查看当前状态、允许的服务以及 `firewalld`{.literal}
的当前设置的信息。
::: section
::: titlepage
## []{#using-and-configuring-firewalld_configuring-and-managing-networking.html#viewing-the-current-status-of-firewalld_viewing-the-current-status-and-settings-of-firewalld}查看当前状态 `firewalld`{.literal} {.title}
:::
防火墙服务 `firewalld`{.literal} 被默认安装在系统中。使用
`firewalld`{.literal} CLI 界面检查该服务是否正在运行。
::: orderedlist
**流程**
1.  查看服务的状态：