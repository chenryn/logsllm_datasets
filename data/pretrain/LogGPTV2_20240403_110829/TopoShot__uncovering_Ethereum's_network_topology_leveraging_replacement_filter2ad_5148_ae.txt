### Table 5: Detected Communities in Ropsten Testnet

| Community Index | Intra-comm. Edges (Density) | Inter-comm. Edges |
|-----------------|------------------------------|--------------------|
| 1               | 423 (10%)                    | 1547               |
| 2               | 603 (6%)                     | 1612               |
| 3               | 548 (9.7%)                   | 1827               |
| 4               | 391 (11%)                    | 1505               |
| 5               | 379 (14%)                    | 1704               |
| 6               | 127 (10%)                    | 773                |
| 7               | 121 (18%)                    | 840                |

### Measurement Study on Ropsten Testnet

We conducted a measurement study on the Ropsten testnet using a parallel measurement method with parameter \( K = 60 \). The testnet was underloaded, and there were insufficient "background" transactions in the mempools. We attempted to apply TopoShot directly but found that regardless of the low gas price set for transaction \( \text{txC} \), it was always included in the next block, leaving no time for accurate measurement.

To address this issue, we launched an additional node to send a number of "background" transactions from a different account than \( \text{txC} \). This effectively populated the mempool and allowed \( \text{txC} \) to remain in the mempool long enough for accurate measurement. We encountered the same situation when measuring the Goerli testnet and used the same approach. Notably, more than 95% of peer nodes our supernodes initially connected to remained connected throughout the measurement period.

In the testnet, some target nodes may run non-default settings that forward future transactions, invalidating the assumptions made in TopoShot. To avoid such custom nodes, we launched an additional monitor node during the pre-processing stage to connect to the measurement node and ensure that only nodes following the default settings were included in the study.

### Community Detection in Ropsten Testnet

We detected communities in the Ropsten testnet using the NetworkX tool, which implements the Louvain method. The results are summarized in Table 5. Seven communities were detected, with the largest community (Community 2) containing 22% of the network's nodes. The average degree in this community is 19, and 9% of the nodes (13 out of 142) have a degree of 1. In contrast, Community 5 contains 12.7% of the nodes with the highest average degree of 32.8.

### Summary of Rinkeby and Goerli Results

Similar measurements were conducted on the Rinkeby and Goerli testnets. Rinkeby has smaller node degrees compared to Ropsten, with many Geth nodes having degrees less than 15 and nodes between degrees 15 and 180 evenly distributed. Rinkeby's modularity (0.0106) is much lower than Goerli's (0.048) and Ropsten's (0.0605), indicating that Rinkeby is the most resilient against network partitioning.

### Explanation of Results

The measured modularity in testnets is consistently lower than in random graphs. We suspect this discrepancy is due to the way Ethereum nodes select and promote active links and the scale of the networks. In the Ethereum protocol, each node maintains a buffer of inactive neighbors from which 50 active neighbors are selected if existing active neighbors go offline. The buffer size is large (e.g., 272 * 272 = 73,984), which means the effect of localization is not reflected in the testnet results. Deduplication of active neighbors may also contribute to the lower modularity. Future work will focus on quantitative modeling and analysis of the Ethereum network-connection protocols.

### Mainnet Measurement Results

Measuring the mainnet topology presents new challenges:
1. **Ethical Concerns**: The measurement should not interfere with the normal operation of live mainnet nodes.
2. **High Cost**: The large scale of the mainnet (about 8,000 nodes) and the high price of Ether make measuring the entire network impractical, with an estimated cost exceeding 60 million USD.

To address these challenges, we extended TopoShot to ensure non-interference and focused on measuring a small but critical subnetwork. The extended TopoShot verifies two conditions before proceeding with the measurement:
1. All blocks produced during the measurement period are full.
2. Transactions in the blocks have gas prices higher than the set price for \( \text{txC} \).

### Discovering Critical Nodes

We discovered mainnet nodes behind critical services, such as popular transaction relay services and mining pools, using the approach described in [35]. We identified the following nodes:
- Mining pool nodes: 59 SrvM1, 8 SrvM2, 6 SrvM3, 2 SrvM4, 2 SrvM5, and 1 SrvM6.
- Transaction-relay nodes: 48 SrvR1 and 1 SrvR2.

### Measuring Topology Among Critical Nodes

We used the extended TopoShot to measure the connections among the discovered critical nodes. The results are summarized in Table 6, showing that:
- A node behind relay service SrvR1 connects to all tested mining pools and other SrvR1 nodes but not to other relay services like SrvR2.
- The single node behind SrvR2 does not connect to any mining pools or other relay services.
- Nodes behind all mining pools connect to nodes of the same pool and other pools, except SrvM1 nodes, which do not connect to other SrvM1 nodes.

### Summary of Measurement Costs/Time

Table 7 summarizes the measurement costs and times for the testnets and mainnet.

| Network  | Cost (Ether) | Date          | Size (# of nodes) | Duration (hours) |
|----------|--------------|---------------|-------------------|------------------|
| Ropsten  | 0.067        | Oct. 30, 2020 | 588               | 12               |
| Rinkeby  | 2.10         | Nov. 15, 2020 | 446               | 10               |
| Goerli   | 0.62         | Oct. 20, 2020 | 1025              | 20               |
| Mainnet  | 0.05858      | May. 15, 2021 | 9                 | 0.5              |

### Ethical Discussion

Our use of TopoShot for testnet measurements, while active, has limited impact as testnets do not run business operations. For the mainnet, the extended TopoShot ensures that the presence of measurement does not affect the set of transactions included in the blockchain, as formally stated in Theorem C.2 in Appendix C.2. We believe TopoShot's impact on normal transactions when measuring the mainnet is minimal.

### Conclusion

This work presents TopoShot, a measurement study that uncovers Ethereum's network topology by exploiting transaction replacement and eviction policies. TopoShot achieves perfect precision and high recall. We applied TopoShot to three major Ethereum testnets, revealing their differences from random graphs and high resilience to network partitioning. We also used TopoShot to measure critical service interconnections in the mainnet, uncovering biased neighbor selection strategies by top mining pools and relay service nodes.

### Acknowledgments

The authors thank the anonymous reviewers in ACM IMC’21, SIGCOMM’21, and SIGMETRICS’21. This work is partially supported by the National Science Foundation under Grants CNS1815814 and DGE2104532.