## Page 397
元格：
输入参数的一部分。下面是 script_name（）函数的代码：
不过，它使用的是不一样的数组，因为脚本名称是Web服务器所提供的信息中的一部分，而非
文件里可以找到这个函数。
码里，而你之后又重新命名了这个文件，那么这个脚本将无法正常工作。）在 sampdb_pdo.php
因为它可以让你不用将脚本的文件名硬编码在代码里。（如果你把脚本的文件名明确地写在代
名为 script_name（)的函数，它会确定出脚本自身的路径名。script_name（）函数非常有用，
display_events（）函数所使用的 display_cell(（）函数，会生成考试事件表格里的各个单
script_name（）函数有点像 script_param（）函数，因为它也可以访问PHP的超全局数组。
这些超链接可用于再次调用score_entry·php，我们在构造它们的URL时，使用了一个
function script_name ()
return($_SERVER["SCRIPT_NAME"]);
print("\n");
print("\n");
$url=
print("\n");
while ($row = $sth->fetch（))
$sth=$dbh->query（$stmt);
Sstmt ="SELECT event_id,
print("\n");
display_cell ("th",
多添加一个链接，用于创建新的考试事件
用于显示考试事件的分数。
呈现考试事件列表。
print("\n");
display_cell ("td",
display_cell
display_cell(
surl
print
sprintf
=
("\n"）;
sprintf
FROM grade_event
FALSE);
"Create New Event"
("%s?action=%d"
("td"
"th"
script_name (),
"td"
FALSE);
""
。将每一个事件ID与一个链接相关联
("%s?action=%d&event_id=%d"
$row["event_id"]);
DISPLAY_SCORES,
script_name(),
""，
$row["event_id"]
"Category");
"Event ID");
$row["category"]);
$row["date"]);
ORDER BY event_id";
date,
9.2PHP脚本实战
377
---
## Page 398
输人一个新行：
我们将开发一组辅助函数，用于生成各个表单元素。）
考试)。（在这里，这个脚本构建表单的方式是输出字面形式的 HTML。对于本章后面的脚本，
于指定新事件类别是考试还是测验的单选按钮，以及一个提交按钮。默认的事件类别为'T！（即
类别。下面是 solicit_event_info（）函数的代码：
那么 score_entry·php 脚本会被再次调用，同时会带有 sOLICIT_EVENT 动作。如此一来，它
当你填写完此表单并提交它时，score_entry·php脚本会被再次调用，只是这次的
触发对solicit_event_info（）函数的调用，显示一个表单，供你输入新考试事件的日期和
solicit_event_info（）函数生成的表单里包含：
function add_new_event ($dbh)
function solicit_event_info()
function display_cell ($tag, $value, $encode = TRUE)
$stmt= "INSERT INTO grade_event (date,category)VALUES(?,?)";
if（empty（$date））#确保输入了日期，并且符合ISO8601格式的要求
$category = script_param ("category");
$date=script_param ("date");
print
print
print
print
print
print
print
print
printf
else if（$encode）#如果需要，则执行HTML 编码
if（strlen（$value）==0）#值为空？还是未设置？
要对该值进行HTML编码。Sencode是可选的，
显示HTML表格的一个单元格。其中，Stag为标记名（即表头
f
pri
die ("Bad event category\n");
第9章用PHP语言编写MySQL程序
die
svalue
$value
int
int
("\n"）;
("\n");
("\n");
("Date:
("Enter information for new grade event:\n");
("\n",
script_name (),
htmlspecialcha
（/\d(4}\D\d{1,2}\D\d{1,2）$/,
/>\n"）;
表明在显示值之前是否
&&$category!=
Svalue为显示值；
/>Test\n");
name=\"category\"value=\"T\""）;
($value);
“Q"）
#获得日期和事件类别
一个用于输入日期的输入框、
sdate))
输入
一对儿用
---
## Page 399
display_scores（）函数的代码：
并将它用在一个查询里，检索出每个学生的行和在此次考试中各个学生所拥有的分数。下面是
语句处），再次显示那个事件列表，以便可以选择新的事件，并开始向它输入分数。
会出现引号问题。在执行这条语句之后，add_new_event（）会返回到脚本的主体部分（即 switch
新行。这里的语句执行代码使用到了占位符，其目的在于确保插到查询字符串里的各个数据不
和type 字段相对应的参数值。然后，它会执行几项简单的安全性检查。
当你从 display_events（）函数显示的事件列表里选择某个条目时，score_entry·php 脚
function display_scores ($dbh)
如果这些参数值看起来没问题，那么add_new_event（）会往 grade_event 表里输人一个
口日期不应该为空，并且必须按 ISO 8601格式输入。preg_match（）函数会执行一个针对
add_new_event（）函数会调用 script_param（）库例程来访问与新事件录入表单里的 date
口
#获取各个行，并放入一个数组，从而可以知道总的行数
$sth
$stmt=m
#获得事件ID编号，它必须像一个整数
当中的某一个。
事件类别必须是 grade_event 表的category 列里允许使用的那些值（即·T'或'Q"）
如果日期由3组以非数字字符分隔的数字序列构成，那么测试的结果为真。虽然它不能
这里使用了单引号，目的在于防止把美元字符（$）和反斜线字符（\）解释为特殊字符。
preg_match (′/^\d(4)\D\d(1,2)\D\d(1,2)$/, $date)
ISO8601格式的模式匹配：
$sth->execute (array
$sth = $dbh->prepare ($stmt);
查询给定考试事件的分数
为了更加安全，还可以在插入数据前，通过设置SQL模式来启用输入数据限制功能
保证万无一失，但是它很容易添加到脚本里，并且也确实能捕获到许多常见的错误。
die ("No information was found for the selected event\n"）;
ORDER BY student.name";
SELECT
LEFT JOIN score ON student.student_id = score.student_id
INNER JOIN grade_event
score.score As score, grade_event.category
=$sth->fetchAll
script_name （),
($event_id）);
($date,$category));
($stmt);
Q：
event_id");
9.2PHP脚本实战
379
是
---
## Page 400
PDO错误的异常捕获机制)：
部成功，要么不会更改任何内容。PDO里的事务处理有这样一个通用结构（假设已启用了针对
来处理之后，我们可以确保这个操作会以原子单元方式执行。如此一来，这个数据更改要么
便能获得InnoDB的事务处理功能所带来的好处。尤其是，把整个数据录入操作作为一个事
只有部分更新操作能成功。在第1章里，我们把 score 表创建为一个InnoDB表。这样，我们
试分数关联起来。对这个表单的处理可能需要执行多条语句（每个学生一条)，并且我们不希享
素
数据库里。当浏览器把这个表单发送回Web服务器时，PHP会把这些输入字段转换为数组的元
score[n]，其中，n为 student_ia值。你可以输人或编辑这个分数，然后把这个表单提交到
display_scores（）函数用于从 My SQL检索分数行的这个查询很相似。）
对于某次事件没有分数，那么查询检索到的值将为NULL。（在2.8.3节有一个查询，它
表之间的连接，因为那样会漏掉那些没有参加该次考试的学生。尤其是，对于新的考试，这个
连
这个脚本会把查询检索到的分数以输人字段的形式放入表单，输入字段的名字类似于
位学生的行都检索出来。不管这个学生在 score表里是否有分数，都没问题。如果某个学生
接不会查询到任何行，并且那个输入表单也会是空的！实际上，使用LEFTJOIN可以强制把
880
这个数组的元素是以学生ID号为键的，因此很容易把每个学生与通过表单提交来的相应
$score=script_param ("score");
这个数组与名字score 相关联，可以按下面这种方式来检索：
display_scores（）函数用于检索选中那次考试的分数信息的那个查询，并不是简单的两
print
print
for ($row_num = 0; $row_num \n");
display_cell ("td",
$col_val .= sprintf （
第9章用PHP语言编写MySQL程序
int
print("\n");
#输出考试事件信息和处于第一行的表头
$row=$rows[$row_num];
print"\n";
display_cell
print
"\n";
("\n");
"\n");
("th",
("th"
"date"]
$row["student_id"]);
Srow["name"]);
("value=\"%d\"size=\"5\"/>\n"，
"Score")
"Name");
\"text\" name=\"score[%d]\"",
全
务
望
考
出
个
个
---
## Page 401
滚操作执行失败时终止脚本，将回滚操作被在了它自己的try/catch 块里。
enter_scores（）函数负责处理表单内容，
score_entry.php 脚本使用了上述结构来保证数据录人操作的整体性。此外，为了防止回
function enter_scores ($dbh)
catch (PDOException $e)
try
$sth_repl = $dbh->prepare ("REPLACE INTO score
#获得事件ID编号以及该次事件的分数数组
$dbh->rollback();
$dbh->commit（）;
$dbh->beginTransaction ();
$sth_del = $dbh->prepare ("DELETE FROM score
#预处理那些要反复执行的语句
if（!ctype_digit（$event_id））#必须像整数