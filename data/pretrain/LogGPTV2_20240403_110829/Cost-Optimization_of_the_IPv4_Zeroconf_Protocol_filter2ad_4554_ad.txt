d + 1/λ = 1.1, i.e., λ = 10. For these parameters we can
derive Er=2 = 5 · 1020 and cr=2 = 3.5 (by simple numeri-
cal approximation).
For r = 0.2 we must ﬁrst realize that assuming a round-
trip delay of 1 second is not reasonable, since with n = 4,
the overall listening time has a duration of only 0.8 sec-
onds. Therefore, shorter round-trip delays must be consid-
ered. We therefore assume now d = 0.1, which is still very
pessimistic for a local net. We then also adapt the mean
time until a reply is received to d + 0.01 = d + 1/λ, i.e.,
λ = 100. Moreover, in [2] it is stated that choosing r = 0.2
is only permitted “when the link [. . . ] can be reasonably
trusted to deliver packets reliably”. We interpret this as a
hint to lower the loss probability. We assume therefore, that
1 − l = 10−10, which still is pessimistic. For the chosen
values we can derive that Er=0.2 = 1035 and cr=0.2 = 0.5.
5 Reliability
In this section, we will consider the reliability of the ze-
roconf protocol. We consider the reliability as the probabil-
ity that an previously unused IP number has been selected
once the initialization phase has terminated. In terms of our
model this is given by the probability to end up in state ok
while the probability to end up in state error corresponds
to the complementary outcome, where the chosen number
is already in use.
Computing these probabilities is a standard problem for
discrete-time Markov chains, and the solution is described
in detail in, for example, [3]. Therefore, in the following,
we describe only brieﬂy how to compute them.
Let the matrix Pn be as in Section 4.1, We partition
this matrix as follows. Let P(cid:1)
ij )i,j=1,...,n+1,
i.e., P(cid:1)
n is obtained from Pn by deleting the right-
two columns and the bottom-most
two rows.
most
Let en = (p(n)
and on =
(p(n)
n+1,n+3)T be the two vectors describing the
one-step absorption probabilities into the state error (en),
respectively ok (on). The matrix Pn can be reassembled
from these fragments as follows:
1,n+3, . . . , p(n)
n = (p(n)
1,n+2, . . . , p(n)
n+1,n+2)T ,
Pn =
 P(cid:1)
n
0
0
 .
en
1
0
on
0
1
Since Pn describes the one-step transition probabilities in
the Markov chain, it’s k-th power describes the k-step prob-
abilities, i.e., the probabilities to jump from state i to state
j in exactly k steps. We are now interested in the proba-
bilities to end up in one of the absorbing states error or
ok, given that we start in state start, in any number of
steps. Let sn = (1, 0, . . . , 0) ∈ IRn+1. We can express
the probability to jump to, say, state error in exactly k
steps, for k = 1, 2, 3, . . ., when starting in state start, as
n)k−1en. We are looking for the probability E(n, r)
sn(P(cid:1)
to jump to state error in any number of steps, which is
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
0
-10
-20
-30
-40
-50
-60
1
2
3
4
n = 1
n = 2
n = 3
n = 4
n = 8
n = 7
n = 6
n = 5
Figure 6. Error probability under optimal cost
E(N(r), r)
(cid:7)∞
k=1(P(cid:1)
n)−1en. The com-
then sn
plementary probability to reach state ok can be computed
in the same fashion by replacing en by on, or directly by
taking the complement 1−E(n, r).
n)k−1en = sn(I − P(cid:1)
As in Section 4.1, the simple matrix structure of P(cid:1)
n al-
lows us to derive an analytic expression for the probability
E(n, r) given by
E(n, r) =
qπn(r)
1 − q(1 − πn(r))
,
(4)
where πn(r) are the quantities appearing in equation (3).
To give some insight into the above equation, we ﬁrst inter-
pret the denominator. If starting in state 1st, the probabil-
ity to go directly (i.e., in n steps) to state error is equal
to πn(r). Thus, the complement probability 1 − πn(r) is
the probability to take any path, except the one directly to
state error. q(1 − πn(r)) is then the probability to start
in state start, go in one step to state 1st, and to take
any path then, except the direct one to state error. So the
denominator 1− q(1− πn(r)) in equation (4) describes ap-
parently the probability to start in state start, and to go
directly either to state ok or to state error. We denote this
event as B. The enumerator of (4) is the probability to go
directly to state error, starting from state start. We de-
note this event as A. Then E(n, r) is the conditional prob-
ability Pr{A|B} to reach state error from state start
under the condition that one of them is reached on a di-
rect way. One might wonder if not also the detours should
be taken into account, i.e., all paths which touch the state
start more than once. However, the probabilities to reach
state start a second, third, fourth, . . . time again sum up
to one and, therefore, do not contribute to the outcome.
We have again derived an analytic expression, this time
to express the probability to reach an error state, which is
the complement of the protocol reliability. In Figure 5, we
see examples for the probability E(n, r) for n = 1, . . . , 8,
where the probability to reach state error is plotted
against the value of r. Note that the probability axis has
a logarithmic scale.
One may study the behavior of E in multiple ways. Here,
we combine it with our cost analysis of the protocol, and fo-
cus on the fragment of the parameter range of n and r that
gives optimal total costs. To do so, we consider the func-
tion E(N(r), r), i.e., we consider the case that the number
of ARP probes is always chosen with optimal total costs,
depending on r (cf. Section 4.4).
In Figure 6, we see a
sample plot for E, embedded in the original graph of Fig-
ure 5. We see that the plot of E(N(r), r) has a peculiar
shape. The most important feature is that E(N(r), r) has
several maxima, which correspond to the steps of the piece-
wise constant function N(r), and is piecewise continuously
decreasing between these steps. To explain this shape, let
(a, b) be an interval of maximal size where N(r) = k for
all r ∈ [a, b]. It is not surprising that E(N(r), r) is con-
tinuously decreasing in (a, b), since the waiting time r is
increasing and inﬂuences the probability that a reply is re-
ceived in the listening period to the better. The number of
ARP probes, however, remains constant, since it is a dis-
crete quantity. Only at the jump at b, N(b+) = k − 1,
i.e., the optimal number of ARP probes to be sent is decre-
mented by 1. This has a negative effect on the error prob-
ability again, since now there is one chance less to send an
ARP probe, and in particular only a shorter overall time to
wait for replies on earlier ARP probes sent. This results
results in a sharp increase at b. In fact, since k − 1 is the
cost-optimal number of ARP probes to be sent and b is the
smallest value for which this optimum holds, this induces a
local maximum for the error function at b.
We observe that the minima of the cost function (Fig-
ure 4) do not correspond to the minima of the error func-
tion E(N(r), r)). Moreover, the lower the probability, the
higher the cost, as can be seen by comparing Figure 4 and 6.
This indicates that optimal reliability and optimal cost can
not be achieved at the same time. However, we can observe
that the error is bounded and stays roughly within the limits
of [10−35, 10−54]. So, one may draw the conclusion that,
at least for this application scenario and similar ones, the
trade-off between reliability and cost does exist, but is not
particularly substantial. Even though optimal cost implies
sub-optimal reliability, the latter is still very low in all cases
we considered.
6 Assessing the IPv4 protocol
Now that we have derived the apparatus to describe the
mean cost of a protocol run and the error probabilities, we
can come back to assess the chosen parameters proposed
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
in [2]. In Section 4.5, we have derived values for E and
c, such that the proposed parameters n = 4 and r = 2
(r = 0.2) yield minimal cost, assuming a worst-case sce-
nario. It is now interesting to observe how n and r change,
if we assume a bit more optimistic scenarios. The only pa-
rameters we want to keep constant are E, c, and q. All other
parameters are subject to change.
We ﬁrst assume that we have a very reliable network with
a loss probability of 1 − l = 10−12 (which is met by most
modern ethernets). We also assume that the round-trip delay
is small: a realistic value is d = 1ms. For these values we
ﬁnd out that the optimal parameters are n = 2, and r ≈
1.75. For these values, the probability that an address has
been erroneously accepted is E(2, 1.75) ≈ 4 · 10−22.
We see that in case of more realistic parameters the dura-
tion of a listening period and especially the number of ARP
probes sent can be chosen much smaller. So for the current
case, the waiting time will be generally only about 3.5 sec-
onds, rather than 8. Assuming less than m = 1000 hosts
will also allow one to drop the waiting time and thus the
total costs further.
7 Conclusion
This paper has presented a study of the IPv4 zeroconf
protocol, an upcoming protocol targeting at the autonomous
conﬁguration of network interfaces with unique IP numbers
at startup time.
We have presented a quantitative cost model of the IPv4
zeroconf protocol, deﬁned as a family of simple DRMs.
We decided to use an abstract notion of costs represented
as dimension-less entities. This notion provides a com-
mon quantitative scale for very different aspects of user
(dis)satisfaction. In the current consumer electronic mar-
ket, efforts to decrease the mean dissatisfaction (or com-
plementary, and in jargon, to increase the “fun-factor” ) of
an electronic device is a prime design goal, but difﬁcult to
manage or optimize during the design cycle. Our study of
the mean total cost of the protocol is precisely targeting in
this direction.
The model enabled us to study analytically both the
mean total cost of running the protocol, as well as its re-
liability. By varying the various parameters of the model
we were able to put both reliability and cost in relation to
each other. The main emphasis has been to isolate optimal
values for those parameters that are under the control of the
protocol designer, namely the number n of ARP probes to
be sent, and the length r of the listening time needed to ex-
pire after sending each ARP probe. We have seen that mini-
mal cost and minimal error propability is something that can
not be achieved at the same time. In a nutshell, the lower
r is set, the lower the cost become, but also the reliability
decreases then.
The cost model we introduced is small and abstract.
Nonetheless it provides already genuine insight
in the
mechanisms of the protocol. The numerical computations
to derive the results from the model are very simple (com-
puting the minima of functions), therefore, it should be
possible to concretize the model, and keep the numerical
derivations still feasible.
Another aspect to mention is that the application area of
this protocol is potentially very broad, and the whole area of
ad-hoc networks is very young and developing further with
enormous speed. This is problematic, because the quality of
the optimized protocol parameters depends to some extent
on the quality of application speciﬁc parameters (such as the
message loss probability) fed into the model. These param-
eters must be based on measurement in real world scenarios.
This however is a delicate task for the designers, since they
are developping their products for a future application pro-
ﬁles which are difﬁcult to predict in the required degree of
detail today. A certain ﬂair is thus indispensable, but the
analytical functions we provide are effective means to show
the inﬂuence of such design decisions in any case.
Acknowledgments. We thank Miaomiao Zhang and
Joost-Pieter Katoen for valuable comments on this pa-
per. This work is supported by STW/PROGRESS project
TES4999: Veriﬁcation of Hard and Softly Timed Systems
(HaaST), and the DFG/NWO bilateral cooperation project
600.050.011.01: Validation of Stochastic Systems (VOSS).
References
[1] G. Behrmann, A. David, K. G. Larsen, O. M¨oller, P. Petters-
son, and W. Yi. UPPAAL - present and future. In Proc. of 40th
IEEE Conference on Decision and Control. IEEE Computer
Society Press, 2001.
[2] S. Cheshire, B. Adoba,
of
conﬁguration
namic
http://www.ietf.org/internet-drafts/-
draft-ietf-zeroconf-ipv4-linklocal-
07.txt, August 2002. DRAFT.
and E. Guttman.
IPv4
link-local
Dy-
addresses.
[3] V. G. Kulkarni. Modeling and Analysis of Stochastic Systems.
Chapman & Hall, London, Glasgow, Weinheim, 1995.
[4] P. Pettersson and K. G. Larsen. UPPAAL2k. Bulletin of the Eu-
ropean Association for Theoretical Computer Science, 70:40–
44, Feb. 2000.
[5] D. C. Plummer. An ethernet address resolution protocol,
November 1982. Internet Standard 37, RFC 826.
[6] W. J. Stewart.
Introduction to the Numerical Solution of
Markov Chains. Princeton University Press, 1994.
[7] M. Zhang and F. Vaandrager. Analysis of a protocol for dy-
namic conﬁguration of IPv4 link local addresses using Up-
paal. Report NIII-R03XX, Nijmeegs Instituut voor Informat-
ica en Informatiekunde, University of Nijmegen, 2003. To
appear.
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE