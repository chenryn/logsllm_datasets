title:Engineering of Role/Permission Assignments
author:Pete Epstein and
Ravi S. Sandhu
 ENGINEERING OF ROLE/PERMISSION ASSIGNMENTS 
Abstract 
Pete Epstein 
George Mason University Student 
Manassas, VA  20111 
are 
roles 
decomposed 
this  paper,  we  develop  a  model 
 In 
for 
engineering  role-permission  assignment.    Our 
model  builds  upon  the  well-known  RBAC96 
model  [SCFY96].    Assigning  permissions  to 
roles  is  considered  too  complex  an  activity  to 
accomplish  directly. 
  Instead  we  advocate 
breaking  down  this  process  into  a  number  of 
steps.  We specifically introduce the concept of 
Jobs, Work-patterns, and Tasks to facilitate role-
permission  assignment  into  a  series  of  smaller 
steps.  We describe methodologies for using this 
model  in  two  different  ways.    In  a  top-down 
approach, 
into 
permissions,  whereas  in  a  bottom-up approach, 
permissions are aggregated into roles.     
1. Introduction  
With  industry’s  increased  awareness  to  protect 
the  confidentiality  and  integrity  of  applications 
and 
are 
continuing 
control 
mechanisms.  Historically, user access has been 
granted  by  adding  the necessary permissions to 
each 
  Administering 
accesses  to  many  users  for  several  different 
applications  quickly  becomes  tedious  and  error 
prone;  this  is  particularly  true  when  the  user 
changes positions and requires a different set of 
accesses.    
individual  application. 
system 
implement 
its  data, 
to 
administrators’ 
access 
role 
An  alternative  is  not  to  directly  assign 
users 
to  permissions  for  each  application; 
instead, users are assigned to roles and the roles 
are mapped to permissions for each application.  
If  the  user’s  needs  change,  the  administrator 
simply 
containing 
appropriate permissions, rather than updating the 
authorization on each user application.  
another 
assigns 
The  well-known  RBAC96  model’s 
[SCFY96]  Permission  Assignment  provides  the 
efficiency of allowing the administrator to assign 
users to roles rather than directly to permissions. 
The  RBAC96  model  directly  assigns  a  role  to 
permissions.  Without knowing the details of the 
roles, we cannot simply say that an arbitrary role, 
George Mason University, Fairfax, VA  22030 
Ravi Sandhu 
Department of ISE 
such as a doctor, requires access to the patient’s 
medical 
the 
research database.  Assignment of permissions to 
roles can itself be a complex undertaking. 
records,  patient’s  x-rays,  and 
We  need  an  approach  to  assist  us  in 
determining a role’s permission.  One solution is 
to further define the details of a role by studying 
the work that is being conducted by that role.  If 
we consider that an individual agent performing 
a role is required to perform more than one job 
(i.e.,  multiple  responsibilities  required  by  one 
role), we can define the tasks that the role must 
follow to complete the desired job.  If an access 
to an object is required, then we must assign the 
necessary  permissions  to  the  task  so  we  can 
complete  the  job.    After  identifying  all  of  the 
tasks  and  the  required  permissions,  we  can 
collect  all  the  permissions  and assign them to a 
role.  This is a collection of all the permissions 
that  are  required  for  the  individual  agent  to 
perform the responsibilities of the role. 
the 
has 
been 
There 
approach 
top-down 
role/permission 
assignment  by 
Using  this  approach,  we  can  perform 
either 
the 
considering 
of 
decomposing roles to permissions or the bottom-
up approach of aggregating permissions to roles.   
related  work. 
Chandramouli  [C99]  discusses  an  approach  for 
identifying  roles  in  a  healthcare  information 
system.    Thomsen  [TOP99]  presents  a  layered 
methodology 
  Roeckle 
[RSW00]  describes  their  experience  in  role-
permission  engineering  in  a  large  corporate 
environment.   
called  Napolean. 
components 
to  decompose 
The  motivation  for  this  paper  is  to 
the 
define  a  methodology 
functionality of the  roles and to logically assign 
their 
to  permissions  without 
ignoring  any  required  accesses.  We  define  a 
model that contains the layers that will assist us 
in  designing  decomposition  of 
to 
permissions  or  aggregation  of  permissions  to 
roles.    In  addition,  we  define  properties  to 
optimize the assignment of roles to permissions.  
As  presented  in  this  paper  a  single  model  to 
to  permission,  aggregate 
decompose 
roles 
roles 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:10:54 UTC from IEEE Xplore.  Restrictions apply. 
permissions to roles and optimization properties 
enhances the previous role engineering work. 
This 
discuss 
paper  will 
the 
decomposition  and  aggregation  of  roles  and 
permissions  by  discussing  the  extension  of  the 
RBAC96  model, 
and 
aggregation approaches, the tools that are needed 
to  perform  the  approaches,  and  an  example 
showing the use of the decomposition approach. 
decomposition 
the 
2.   RBAC96 Model Review 
The model developed in this paper is constructed 
by  extending  the  RBAC96  model  [SCFY96].  
The  RBAC96  model  is  a  comprised  of  four 
.  
UA 
User 
Assignment 
RH 
Role 
Hierarchy 
S 
Session
U 
User
user 
.
.
roles 
AUA 
User 
Administrative 
Assignment 
Administrative 
ARH 
Role 
Hierarchy 
and 
role 
hierarchies 
models:  RBAC0,  RBAC1,  RBAC2,  and  RBAC3.  
RBAC0  is  the  base  model.    RBAC1  and  RBAC2 
added 
constraints, 
respectively.  RBAC3 is the consolidated model.  
RBAC96 also makes a distinction between User 
and Administrative roles. 
There are three components of RBAC96 
that we are interested in  using for the extension 
of 
(R),  and 
permissions (P).  
the  model:  users 
roles 
(U), 
The  model  defines  the  components  of 
role/permission  assignment  by  PA. 
  It  also 
defines  the  role  hierarchy  RH.  It  does  not, 
engineer 
however, 
the 
role/permission assignments (See Figure 1).  
state 
how 
to 
PA 
Permission 
Assignment 
Constraints 
Perm. 
P 
AP 
Admin. 
Perm. 
APA 
Administrative 
Permission 
Assignment 
R 
Roles 
AR 
Admin. 
Roles 
Figure 1: RBAC96 Model 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:10:54 UTC from IEEE Xplore.  Restrictions apply. 
Specifically, we will be studying PA, P, 
and R.   This subset of the model is displayed in 
Figure 2.  
RH 
R 
Roles
Permission 
Assignment
PA 
Perm. 
P 
Figure 2: RBAC96 Model’s Permission/Role 
Assignment 
3.  RBAC Extension  
We  extended 
the  RBAC96  model  by 
including  three  additional  layers  between  the 
roles and permissions. 
Roles 
Jobs 
Workpatterns 
Tasks 
Permissions 
Figure 3: Role/Permission Assignment Model 
As  shown 
in  Figure  3,  we  add 
three 
additional sets: Jobs, Workpatterns, and Tasks.  
J is a set of Jobs; 
• 
•  T is a set of Tasks; and 
•  W is a set of Workpatterns, W ˝
 2T. 
We consider that a role may perform more than 
one  type  of  work.    A  role  is  responsible  for  all 
the  activities  that  are  required  to  perform  the 
work. We define each type of work as a job.  The 
jobs  need  not  be  in  any  sequence;  but  for 
organizational purpose, we group activities into a 
set  we  call  a  workpattern.    Each  workpattern  is 
composed of a set of steps that are required by a 
single  agent  to  complete  the  work  of  the  job.   
These  workpatterns  can  be  part  of  a  workflow 
that is being completed by more than one distinct 
agent.  Each step of the workpattern is assigned 
to a task.  Later, we show that the tasks requiring 
access  to  applications  will  be  mapped  to  the 
permissions granted the desired access.   
a 
the 
theory, 
An  example  of  the  decomposition  of  roles 
can be a professor role that will perform the jobs 
of teaching and researching.   For simplicity, the 
teaching role has a workpattern that requires the 
steps to creating a presentation, creating exams, 
recording results, and e-mailing results; whereas 
the  researching  job  has  the  workpattern  of 
creating 
theory, 
documenting  the  results,  and  e-mailing results.  
These steps are assigned to a task.  The tasks are 
“presentation,  exam,  record,  e-mail,  theorize, 
test, and document.”  We do not need to list the 
second  e-mail task for research because we can 
the 
“re-use” 
teaching 
to 
permissions  that  grant  access  to  perform  the 
work required by each task. 
task 
identified  by 
tasks  are  mapped 
the  e-mail 
job. 
  The 
testing 
In  Figure  4,  we  show  the  relationships 
between each set.  The double-headed line means 
“many.”  A single headed line represents “one.”  
If  we  have  a  double-headed  arrow  pointing  to 
two separate sets, we will have a many-to-many 
relation.  In the case of jobs-to-workpatterns, we 
have a double-headed arrow pointing to Jobs and 
a  single-headed arrow pointing to workpatterns, 
so  we  have  a  many-to-one relation.  Many Jobs 
can  map  to  the  same  workpattern,  but  we  can 
only have one workpattern map to a Job.  
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:10:54 UTC from IEEE Xplore.  Restrictions apply. 
Users
UA 
User 
Assignment 
JW 
R 
Roles 
RJ
J 
Jobs  
PA 
Permission 
Assignment 
P 
Permissions 
PT 
W 
Work 
Patterns 
Tasks 
T 
TW 
Figure 4: RBAC 96 Extended 
P1
  The 
relationships. 
4.  The approaches 
We have defined the layers and the relationship 
between the layers.  The next step is to define the 
process  of  using  these  layers  to  engineer  role-
permission 
complete 
description of this process is beyond the scope of 
this  paper.      Instead  we  will  identify  the  major 
challenges  for  the  approaches,  decomposition 
and  aggregation,  and  state  how  they  can  be 
overcome. 
R1 
J2 
J3 
J1 
WA 
WB 
4.1  Decomposition Challenges 
.   
As seen from the layer mapping in Figure 5, 
to  permissions  can  be 
this  challenge  we 
decomposing 
complex.  To  aid  us 
addressed the following issues: 
roles 
in 
1.  Focus the decision based on a criteria; 
2.  Define the work required by the role;  
3.  Define the logical order of the work; and 
4.  Define properties to optimize this approach. 
P5
T1 
T2 
T8
P5
P1
P5
T4
P3
T8 
P12 
T7 
P2
Figure 5: Role-Permission Mapping 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 07:10:54 UTC from IEEE Xplore.  Restrictions apply. 
the 
4.2 Additional Aggregation Challenges 
Aggregation  requires  the  use  of  the  four  issues 
identified under the decomposition approach.  In 
addition,  the  aggregation  approach  requires  the 
grouping  of  a  discrete set of permissions based 
on some type of organization into larger sets that 
will  be  eventually  be  assigned  to  roles.    This 