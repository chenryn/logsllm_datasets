User: Please describe the relationship between Docker images and containers, and give examples
Assistant: Docker images and containers are two closely related concepts. An image is a copy of the files, libraries, tools, and dependencies an application needs to run, similar to an image file in a virtual machine. They are read-only and can be used by multiple containers. A container is a running image and a dynamic instantiation process. Simply put, an image is a static and immutable template, and a container is a dynamic instance created using this template. Containers can be started, stopped, deleted, and moved between different hosts or cloud environments. Containers can create multiple image instances and support concurrency and service-oriented functions. For example, a Docker image can be thought of as a pile of building materials, and a container is a house built from this pile of materials. Multiple houses can be built using the same material, and these houses are all independent of each other, but they all share the same material. Thus, a Docker image provides instructions and files on how to build an application, while a container provides the environment and resources to run the application.