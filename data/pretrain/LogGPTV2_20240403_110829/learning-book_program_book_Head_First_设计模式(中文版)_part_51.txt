为自已和我一样是个大模式，但事实上，我可是
在第1章就登场了；而你却是在第10章才有机会
出现。我的意思是，有多少人能够真的把这本书
看到第10章？
开什么玩笑？这可是“HeadFirst”系列书籍，而
这一系列的书都超棒。当然读者们会读到第
01
这就是你，老兄，一直都在做梦。
你现在的位置
419
---
## Page 456
重填练习
我们差点儿忘了！
我们忘了在原始的规格中放进一个转摘··…当糖果机空了
我们需要找个方式重新读入糖果。看悉下面这张新图一你能
够实现它吗：过去你的表现实在是太好了，我们和道这对你
万能糖果公司
来说只是一件小事情！
——万能糖果公司工程师
有糖果机的地方，
永远充满活力
重博
糖果售馨
有
动曲柄
投入25分钱
25分钱
退图25分钱
没有
25分钱
发放糖果
售出糖果
糖果数=0
PDG
420
第10章
---
## Page 457
状态模式
Sharpen your pencil
我们需要你为糖果机写一个重填糖果的refill(方法。这个方法需要一个变
量一所要填入机器中的糖果数目。它应该能更新糖果机内的糖果数目，并
重设机器的状态。
你过去的表现非常好！我还有一些
想法可以颜覆糖果工业，而我需要
你的协助来实现它们。嘘！下一章再告
诉你这些想法。
PDG
你现在的位置
421
---
## Page 458
谁做什么？
请将下列模式和描述配对：
模式
描述
将可以互换的行为封装起
状态
来，然后使用委托的方法，
决定使用哪一个行为
由子类决定如何实现算法
策略
中的某些步骤
封装基于状态的行为，并
模板方法
将行为委托到当前状态
PDG
422
第10章
---
## Page 459
状态模式
设计箱内的工具
又到了另一个章节的结尾。你所懂的模式已经足够帮
你轻松通过任何工作面试了！
要点
状态模式允许一个对象基
00基础
于内部状态而拥有不同的行
象
为。
00原则
装
■和程序状态机（PSM）不
封装变化
态
同，状态模式用类代表状
多用组合，少用继承
承
态。
针对摇口编程，不针对实现编
程
Context会将行为委托给当前
为交互对象之间的松耦合设计
状态对象。
而努力
类应该对扩展开放，对修改关
本章没有新的原则，让
通过将每个状态封装进一个
用。
你有时间回顾一下曾经
类，我们把以后需要做的任
依赖抽象，不要依赖具体类。
学过的原则。
何改变局部化了。
只和朋应交谈
状态模式和策略模式有相同
别找我，我金我你
的类图，但是它们的意图不
类应该只有一个改变的理由
这是我们的新模式。
同。
如果你需要在一个
策略模式通常会用行为或算
类中管理状态，状
法来配置Context类。
00模式
态模式提供了封装
状态模式允许Context随着状
状态的技巧。
态的改变而改变行为。
状态转换可以由State类或
Context类控制。
状态模式——元许对象在内部
使用状态模式通常会导致设
状态改变时改变它的行为，对象
计中类的数目大量增加。
看起来好像修改了它的类。
状态类可以被多个Context实
例共享。
你现在的位置，4
423
---
## Page 460
习题解答
习题解答
放两额糖
复家
万能糖果公司
糖果数0二0
转
有糖果机的地方，
永远充满活力
糖果售馨
有
投入25分钱
25分钱
退图25分钱
没有
25分钱
泰
发放糖果
424
第10章
---
## Page 461
状态模式
习题解答
下列哪一项描述了我们实现的状态？（多选）
A
这份代码确实没有遵守开放-关闭
D.状态转换被埋藏在条件语句中，所以
原则。
并不明显。
这份代码会让Fortran程序员感到
E.我们还没有把会改变的那部分包装来。
骄傲。
F.未来加入的代码很有可能会导致bug。
C.
，这个设计其实不符合面向对象。
我们还剩下-个没有实现的类：SoldOutState（糖果售馨状态）。你
何不来实现它呢？小心地弄清楚糖果机在每种情况下应该有怎样的
行为。在继续下一页之前，请先检查一下你的答案
在赠售基状为下，除非有人
public class SoldoutState implements State (
重新填充能要机，否则我不结
Gumbal1Machine gumba11Machine;
做任何事情，
public SoldOutState (Gumbal1Machine gumballMachine)(
this.gunba11Machine = gumba11Machine;
public void insertQuarter() (
Systen.out.println(*You can't insert a quarter, the machine is sold out");
1
public void ejectQuarter(){
Systes.out.println("You can't eject, you haven't inserted
yet")
public void turnCrank() (
Syster.out.printin("You turned, but there are no gumballs");
1
public void dispense () {
Systen,out.print1n("No gumba11 dispensed*);
你现在的位置
425
---
## Page 462
习题解答
想要实现状态，我们首先需要指定当每一个动作被调用时，类的行为是哪一
个。请在下面这张图上，为每个类的每个动作的行为加上注释。我们已经先
帮你填写了其中的几个。
到HasQuarterState
告诉顾客“你还没有投入25分钱”
NoQuarterState
insentQuarter()
告诉顾客“你转动了曲杨，但是没有25分线”
2
ejectQuarter()
tumCrank)
告诉顾客“你需要先付25分钱”。
dispense()
告诉顾客你已经投入25分钱，不能再投入另外
的25分钱”。
HasQuarterState
退还25分钱，回到没有25分钱的状态。
nsertQuarter)
到SoldState。
ejectQuarte[]
umCrank(
告诉顾客“没有糖果可以发放”
告诉顾客“请稍候，我们易上给你一颗糖果”
告诉顾客“抛款，你已经转过曲辆”。
SoldState
告诉顾客“不金因为转两次就拿到两次糖果”。
ejectQuarfter)
tumCrank()
发放一颗糖果。检奎机器中剃下的糖果数日，如
se)
果还有糖累，就进入NoQaazterState，否则进入
SoldOutState.
告诉腰客“糖集售馨”。
告诉顾客“你还没有投入25分钱”
告诉顾客，“糖果全部售究”
rQuarter()
mCrank()
告诉顾客“没有糖果可以发效”。
告诉顾客“请稍候，我们马上给你一额糖果”
告诉腰客“挑数，你已经转过曲标”。
Win
insertQuarler)
告诉顾客“不全因为转两次就拿到两次糖果”。
ejectQuarter()
bumCrank0
发放两额糖果。检量刺余糖果数目、如果>0，进入
Qesuadsip
NoQttetState，否则进入SoldOutState。
426
第10章
---
## Page 463
状态模式
幕后花絮
番托到当前状态
自我导览
①
②
insertQuarter()
糖泉机状态
番托
糖果机状态
tumCrank()
当前状态
insertQuarter()
tumCrank()
当前状态
糖果机
糖果机
机器的动作
机器的动作
转换到HasQuarter状
转换到Sold状
③
④
糖果机状态
糖果机状态
Qesuadsip
当前状态
糖果机
糖果机
机器金调用内部的
dispense(）动作，给出
然后转换到
一颗糖果。
NoQuartet状态。
你现在的位置
427
---
## Page 464
习题解答
请将下列模式和描述配对
模式
描述
将可以互换的行为封装起
状态
采，然后使围委托的方法，
决定使用哪一个行为
由子类决定如何实现算法
策哈
中的某些步骤
模板方法
封装基于状态的行为，并
将行为委托到当前状态
我们需要你为糖果机写一个refill(0方法。这个方法需要一个变量一所要填入
机器中的糖果数目。它应该能更新糖果机内的糖果数目，并重置机器的状态。
void refill(int count){
this.count = count;
state = noQuarterState;
428
第10章
---
## Page 465
11代理模式
控制对象访问
有你当我的代理，我就可以从朋
友手中抽到三倍的午餐钱了。
玩过扮白脸、扮黑脸的游戏吗？你是一个白脸，提供很好且很友善的
服务，但是你不希望每个人都叫你做事，所以找了黑脸控制对你的访问。这就是代
理要做的：控制和管理访问。就像你将看到的，代理的方式有许多种。代理以通过
Internet为它们的代理对象搬运的整个方法调用而出名，它也可以代替某些懒情的对
象做一些事情。
PDG
这是新的一章
429
---
## Page 466
目标是什么？
各位组员，我真的最望我
的糖累机能够获得更好的监
S
控，你能找到方法给我一份摩存以
及机器状态的报告吗？
听起来很容易，如果你还记得我们已经得到了可以
取得糖果数量的getCount()方法和取得糖果机状态的
getStateO方法。
我们所需要做的事，就是创建一份能打印出来的报告，
然后把它递送给CEO。这个嘛！我们可能需要为每个糖
果机加上一个位置的字段，这样CEO就可以一目了然。
还记得我吧！我就是万能糖
让我们现在就开始编码。这一定会让CEO印象深刻，让
集公司的CEO。
他对我们彻底改观。
新
PDG
430
第11章
---
## Page 467