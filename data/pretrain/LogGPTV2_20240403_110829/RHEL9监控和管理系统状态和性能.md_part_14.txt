# []{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html#resetting-xfs-performance-metrics-with-pmstore_performance-analysis-of-xfs-with-pcp}使用 pmstore 重置 XFS 性能指标 {.title}
:::
使用 PCP，您可以修改特定指标的值，特别是当指标充当控制变量时，如
`xfs.control.reset`{.literal} 指标。要修改指标值，请使用
`pmstore`{.literal} 工具。
这个步骤描述了如何使用 `pmstore`{.literal} 工具重置 XFS 指标。
::: itemizedlist
**先决条件**
-   已安装 PCP。如需更多信息，请参阅[安装并启用
    PCP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#installing-and-enabling-pcp_setting-up-pcp){.link}。
:::
::: orderedlist
**步骤**
1.  显示指标的值：
    ``` screen
    $ pminfo -f xfs.write
    xfs.write
        value 325262
    ```
2.  重置所有 XFS 指标：
    ``` screen
    # pmstore xfs.control.reset 1
    xfs.control.reset old value=0 new value=1
    ```
:::
::: itemizedlist
**验证步骤**
-   在重置指标后查看信息：
    ``` screen
    $ pminfo --fetch xfs.write
    xfs.write
        value 0
    ```
:::
::: itemizedlist
**其他资源**
-   `pmstore(1)`{.literal} 和 `pminfo(1)`{.literal} man page
-   [PCP
    分发的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-pcp_monitoring-and-managing-system-status-and-performance#tools-distributed-with-pcp_setting-up-pcp){.link}
-   [XFS 的 PCP
    指标组](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance#pcp-metric-groups-for-xfs_performance-analysis-of-xfs-with-pcp){.link}
:::
:::
::: section
::: titlepage
# []{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html#pcp-metric-groups-for-xfs_performance-analysis-of-xfs-with-pcp}XFS 的 PCP 指标组 {.title}
:::
下表描述了 XFS 可用的 PCP 指标组。
::: table
[]{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html#idm140048837443744}
**表 7.1. XFS 的指标组**
::: table-contents
+:-------------------------------+:-----------------------------------+
| 指标组                         | 提供的指标                         |
+--------------------------------+------------------------------------+
| `xfs.*`{.literal}              | 常规 XFS                           |
|                                | 指标，包                           |
|                                | 括读取和写入操作计数、读取和写入字 |
|                                | 节计数。另外，索引节点的次数也会刷 |
|                                | 新、集群集群和集群失败数的计数器。 |
+--------------------------------+------------------------------------+
| `xfs.allocs.*`{.literal}       | 有关文件系统中对象分配的指标       |
|                                | 范围，其中包括扩展的数量和块创建/  |
| `xfs.alloc_btree.*`{.literal}  | 自由。分配树查找和比较，以及扩展从 |
|                                | btree 创建和删除记录。             |
+--------------------------------+------------------------------------+
| `xfs.block_map.*`{.literal}    | 指标包括块映射的读                 |
|                                | /写入和块删除次数，用于插入、删除  |
| `xfs.bmap_btree.*`{.literal}   | 和查找的扩展列表操作。另外，还可从 |
|                                | blockmap                           |
|                                | 进行比较、                         |
|                                | 查找、插入和删除操作的操作计数器。 |
+--------------------------------+------------------------------------+
| `xfs.dir_ops.*`{.literal}      | XFS                                |
|                                | 文                                 |
|                                | 件系统的目录操作计数器，用于创建、 |
|                                | 删除条目，计数为\"getdent\"操作。  |
+--------------------------------+------------------------------------+
| `xfs.transactions.*`{.literal} | meta-data                          |
|                                | 事务的数量的计数器包括同步         |
|                                | 和异步事务的数量以及空事务的数量。 |
+--------------------------------+------------------------------------+
| `xfs.inode_ops.*`{.literal}    | 操作系统                           |
|                                | 在索引节点缓存中查找带有不同结果的 |
|                                | XFS                                |
|                                | 索引节点的次数计数器。             |
|                                | 这些计数的缓存命中，缓存未命中等。 |
+--------------------------------+------------------------------------+
| `xfs.log.*`{.literal}          | 通过 XFS 文件 sytems               |
|                                | 写入的日志缓                       |
| `xfs.log_tail.*`{.literal}     | 冲区数的计数器包括写入磁盘的块数量 |
|                                | 。还提供日志清除和固定数量的指标。 |
+--------------------------------+------------------------------------+
| `XFS.xstrat.*`{.literal}       | XFS flush deamon                   |
|                                | 清空的文件数据的                   |
|                                | 字节数以及缓冲区数量计数器（清空到 |
|                                | 磁盘上连续和非相邻空间）的计数器。 |
+--------------------------------+------------------------------------+
| `xfs.attr.*`{.literal}         | 所有 XFS                           |
|                                | 文件系统的属性                     |
|                                | 数量、设置、删除和列出操作的数量。 |
+--------------------------------+------------------------------------+
| `xfs.quota.*`{.literal}        | 在 XFS                             |
|                                | 文件系统上，配额                   |
|                                | 操作的指标包括数字配额回收、配额缓 |
|                                | 存未命中、缓存命中和配额数据回收。 |
+--------------------------------+------------------------------------+
| `xfs.buffer.*`{.literal}       | 有关 XFS                           |
|                                | 缓冲区对                           |
|                                | 象的指标范围。计数器包括请求的缓冲 |
|                                | 区调用数、成功缓冲区锁定、等待的缓 |
|                                | 冲区锁定、miss_locks、miss_retries |
|                                | 和 buffer hit（在查找页面时）。    |
+--------------------------------+------------------------------------+
| `xfs.btree.*`{.literal}        | 有关 XFS btree 操作的指标。        |
+--------------------------------+------------------------------------+
| `xfs.control.reset`{.literal}  | 配置用于重置 XFS                   |
|                                | 统                                 |
|                                | 计数据的指标计数器的配置指标。使用 |
|                                | pmstore 工具切换控制指标。         |
+--------------------------------+------------------------------------+
:::
:::
:::
::: section
::: titlepage
# []{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html#per-device-pcp-metric-groups-for-xfs_performance-analysis-of-xfs-with-pcp}每个设备 PCP 指标组用于 XFS {.title}
:::
下表描述了适用于 XFS 的每设备 PCP 指标组。
::: table
[]{#performance-analysis-of-xfs-with-pcp_monitoring-and-managing-system-status-and-performance.html#idm140048834343392}
**表 7.2. 每个设备 PCP 指标组用于 XFS**
::: table-contents
+:---------------------------------+:---------------------------------+
| 指标组                           | 提供的指标                       |
+----------------------------------+----------------------------------+
| `xfs.perdev.*`{.literal}         | 常规 XFS                         |
|                                  | 指标，包括读取                   |
|                                  | 和写入操作计数、读取和写入字节计 |
|                                  | 数。另外，索引节点的次数也会刷新 |
|                                  | 、集群集群和集群失败数的计数器。 |
+----------------------------------+----------------------------------+
| `xfs.perdev.allocs.*`{.literal}  | 有关文件系统中对象分配的指标范围 |
|                                  | ，其中包括扩展的数量和块创建/自  |
| `xfs                             | 由。分配树查找和比较，以及扩展从 |
| .perdev.alloc_btree.*`{.literal} | btree 创建和删除记录。           |
+----------------------------------+----------------------------------+
| `x                               | 指标包括块映射的读/写            |
| fs.perdev.block_map.*`{.literal} | 入和块删除次数，用于插入、删除和 |
|                                  | 查找的扩展列表操作。另外，还可从 |
| `xf                              | blockmap                         |
| s.perdev.bmap_btree.*`{.literal} | 进行比较、查                     |
|                                  | 找、插入和删除操作的操作计数器。 |
+----------------------------------+----------------------------------+
| `xfs.perdev.dir_ops.*`{.literal} | XFS                              |
|                                  | 文件系                           |
|                                  | 统的目录操作计数器，用于创建、删 |
|                                  | 除条目，计数为\"getdent\"操作。  |
+----------------------------------+----------------------------------+
| `xfs.                            | meta-data                        |
| perdev.transactions.*`{.literal} | 事务的数量的计数器包括同步和     |
|                                  | 异步事务的数量以及空事务的数量。 |
+----------------------------------+----------------------------------+
| `x                               | 操作系统在                       |
| fs.perdev.inode_ops.*`{.literal} | 索引节点缓存中查找带有不同结果的 |
|                                  | XFS                              |
|                                  | 索引节点的次数计数器。这         |
|                                  | 些计数的缓存命中，缓存未命中等。 |
+----------------------------------+----------------------------------+
| `xfs.perdev.log.*`{.literal}     | 通过 XFS filesytems              |
|                                  | 写入的日志缓冲区                 |
| `                                | 数的计数器包括写入磁盘的块数量。 |
| xfs.perdev.log_tail.*`{.literal} | 还提供日志清除和固定数量的指标。 |
+----------------------------------+----------------------------------+
| `xfs.perdev.xstrat.*`{.literal}  | XFS flush deamon                 |
|                                  | 清空的文件数据的字节             |
|                                  | 数以及缓冲区数量计数器（清空到磁 |
|                                  | 盘上连续和非相邻空间）的计数器。 |
+----------------------------------+----------------------------------+
| `xfs.perdev.attr.*`{.literal}    | 所有 XFS                         |
|                                  | 文件系统的属性数                 |
|                                  | 量、设置、删除和列出操作的数量。 |
+----------------------------------+----------------------------------+
| `xfs.perdev.quota.*`{.literal}   | 在 XFS                           |
|                                  | 文件系统上，配额操作             |
|                                  | 的指标包括数字配额回收、配额缓存 |
|                                  | 未命中、缓存命中和配额数据回收。 |
+----------------------------------+----------------------------------+
| `xfs.perdev.buffer.*`{.literal}  | 有关 XFS                         |
|                                  | 缓冲区对象的指                   |
|                                  | 标范围。计数器包括请求的缓冲区调 |
|                                  | 用数、成功缓冲区锁定、等待的缓冲 |
|                                  | 区锁定、miss_locks、miss_retries |
|                                  | 和 buffer hit（在查找页面时）。  |
+----------------------------------+----------------------------------+
| `xfs.perdev.btree.*`{.literal}   | 有关 XFS btree 操作的指标。      |
+----------------------------------+----------------------------------+
:::
:::
:::
:::
[]{#setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance.html}
::: chapter
::: titlepage
# []{#setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance.html#setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance}第 8 章 设置 PCP 指标的图形表示 {.title}
:::
使用
`pcp`{.literal}、`grafana`{.literal}、`pcp redis`{.literal}、`pcp bpftrace`{.literal}
和 `pcp vector`{.literal} 的组合根据 Performance
Co-Pilot(PCP)收集的实时数据或数据提供图形。
这部分论述了如何设置并访问 PCP 指标的图形表示。
::: section
::: titlepage
# []{#setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance.html#setting-up-pcp-with-pcp-zeroconf_setting-up-graphical-representation-of-pcp-metrics}使用 pcp-zeroconf 设置 PCP {.title}
:::
这个步骤描述了如何在使用 `pcp-zeroconf`{.literal} 软件包的系统中设置
PCP。安装 `pcp-zeroconf`{.literal}
软件包后，系统会将默认指标集合记录到存档文件中。
::: itemizedlist
**步骤**
-   安装 `pcp-zeroconf`{.literal} 软件包：
    ``` screen
    # dnf install pcp-zeroconf
    ```
:::
::: itemizedlist
**验证步骤**
-   确保 `pmlogger`{.literal} 服务处于活跃状态，并开始归档指标：
    ``` literallayout
    # pcp | grep pmlogger
     pmlogger: primary logger: /var/log/pcp/pmlogger/localhost.localdomain/20200401.00.12
    ```
:::
::: itemizedlist
**其他资源**
-   `pmlogger`{.literal} man page
-   [使用 Performance Co-Pilot
    监控性能](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/index#monitoring-performance-with-performance-co-pilot_monitoring-and-managing-system-status-and-performance){.link}
:::
:::
::: section
::: titlepage
# []{#setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance.html#setting-up-a-grafana-server_setting-up-graphical-representation-of-pcp-metrics}设置 grafana-server {.title}
:::
Grafana 生成可从浏览器访问的图形。`grafana-server`{.literal} 是 Grafana
仪表板的后端服务器。默认情况下，它监听所有接口，并提供通过 Web
浏览器访问的 Web 服务。`grafana-pcp`{.literal} 插件与后端中的
`pmproxy`{.literal} 协议交互。
这个步骤描述了如何设置 `grafana-server`{.literal}。
::: itemizedlist
**先决条件**
-   配置了 PCP。如需更多信息，请参阅[使用 pcp-zeroconf 设置
    PCP](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9-beta/html-single/monitoring_and_managing_system_status_and_performance/setting-up-graphical-representation-of-pcp-metrics_monitoring-and-managing-system-status-and-performance#setting-up-pcp-with-pcp-zeroconf_setting-up-graphical-representation-of-pcp-metrics){.link}。
:::
::: orderedlist
**步骤**
1.  安装以下软件包：
    ``` screen
    # dnf install grafana grafana-pcp
    ```
2.  重启并启用以下服务：
    ``` screen
    # systemctl restart grafana-server
    # systemctl enable grafana-server
    ```
3.  为到 Grafana 服务的网络流量打开服务器防火墙。
    ``` screen
    # firewall-cmd --permanent --add-service=grafana
    success
    # firewall-cmd --reload
    success
    ```
:::
::: itemizedlist
**验证步骤**
-   确定 `grafana-server`{.literal} 正在侦听并响应请求：
    ``` screen
    # ss -ntlp | grep 3000
    LISTEN  0  128  *:3000  *:*  users:(("grafana-server",pid=19522,fd=7))
    ```
-   确保安装了 `grafana-pcp`{.literal} 插件：
    ``` screen
    # grafana-cli plugins ls | grep performancecopilot-pcp-app