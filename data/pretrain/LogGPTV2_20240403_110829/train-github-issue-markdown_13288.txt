I encountered an unusual issue with Fused Multiply-Add (FMA) instructions in Julia 1.4. Here is a detailed description of the problem:

1. **Initial Setup:**
   - I launched Julia from the command line without any additional flags, using the version downloaded from julialang.org.
   
2. **Initial Observation:**
   - I checked the `muladd` function using `code_native` and found that it was not utilizing native FMA CPU instructions.
   - Additionally, the constant `Base.Math.FMA_NATIVE` evaluated to `false`.

3. **Unexpected Behavior:**
   - This was surprising because, in my previous experience with Julia, `Base.Math.FMA_NATIVE` has always been `true`, and FMA instructions were consistently used natively.

4. **Testing with Optimization Flag:**
   - I then started Julia with the `-O3` optimization flag.
   - Upon rechecking, `muladd` was now correctly using native FMA instructions.
   - However, `Base.Math.FMA_NATIVE` still evaluated to `false`. This makes sense because `Base.Math.FMA_NATIVE` is a precompile-time constant, but it should be updated to reflect the correct state.

5. **Further Anomalies:**
   - After restarting Julia without the `-O3` flag, I observed that `muladd` was now correctly using native FMA instructions, even though `Base.Math.FMA_NATIVE` remained `false`.

This inconsistent behavior with FMA instructions and the `Base.Math.FMA_NATIVE` constant is unexpected and needs further investigation.