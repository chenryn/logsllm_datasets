| NGINX （开源） | NGINX Plus |
| --- | --- |
| accepts | accepted |
| dropped 通过计算得来 | dropped 直接得到 |
| reading + writing | current |
| waiting | idle |
| active （包括 “waiting”状态） | active （排除 “idle” 状态） |
| requests | total |
**提醒指标: 丢弃连接**
被丢弃的连接数目等于 Accepts 和 Handled 之差（NGINX 中），或是可直接得到的标准指标（NGINX Plus 中）。在正常情况下，丢弃连接数应该是零。如果在每个单位时间内丢弃连接的速度开始上升，那么应该看看是否资源饱和了。
![Dropped connections](/data/attachment/album/201508/07/000453a6646l6a881rk8cc.png)
**提醒指标: 每秒请求数**
按固定时间间隔采样你的请求数据（开源 NGINX 的**requests**或者 NGINX Plus 中**total**） 会提供给你单位时间内（通常是分钟或秒）所接受的请求数量。监测这个指标可以查看进入的 Web 流量尖峰，无论是合法的还是恶意的，或者突然的下降，这通常都代表着出现了问题。每秒请求数若发生急剧变化可以提醒你的环境出现问题了，即使它不能告诉你确切问题的位置所在。请注意，所有的请求都同样计数，无论 URL 是什么。
![Requests per second](/data/attachment/album/201508/07/000455lrd5dkdhhsyhkszh.png)
**收集活跃指标**
开源的 NGINX 提供了一个简单状态页面来显示基本的服务器指标。该状态信息以标准格式显示，实际上任何图形或监控工具可以被配置去解析这些相关数据，以用于分析、可视化、或提醒。NGINX Plus 提供一个 JSON 接口来供给更多的数据。阅读相关文章“[NGINX 指标收集](/article-5985-1.html)”来启用指标收集的功能。
#### 错误指标
| 名称 | 描述 | [指标类型](https://www.datadoghq.com/blog/monitoring-101-collecting-data/) | 可用于 |
| --- | --- | --- | --- |
| 4xx 代码 | 客户端错误计数 | 工作：错误 | NGINX 日志, NGINX Plus |
| 5xx 代码 | 服务器端错误计数 | 工作：错误 | NGINX 日志, NGINX Plus |
NGINX 错误指标告诉你服务器是否经常返回错误而不是正常工作。客户端错误返回4XX状态码，服务器端错误返回5XX状态码。
**提醒指标: 服务器错误率**
服务器错误率等于在单位时间（通常为一到五分钟）内5xx错误状态代码的总数除以[状态码](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)（1XX，2XX，3XX，4XX，5XX）的总数。如果你的错误率随着时间的推移开始攀升，调查可能的原因。如果突然增加，可能需要采取紧急行动，因为客户端可能收到错误信息。
![Server error rate](/data/attachment/album/201508/07/000457u3kky9ek6ffof3oa.png)
关于客户端错误的注意事项：虽然监控4XX是很有用的，但从该指标中你仅可以捕捉有限的信息，因为它只是衡量客户的行为而不捕捉任何特殊的 URL。换句话说，4xx出现的变化可能是一个信号，例如网络扫描器正在寻找你的网站漏洞时。
**收集错误度量**
虽然开源 NGINX 不能马上得到用于监测的错误率，但至少有两种方法可以得到：
* 使用商业支持的 NGINX Plus 提供的扩展状态模块
* 配置 NGINX 的日志模块将响应码写入访问日志
关于这两种方法，请阅读相关文章“[NGINX 指标收集](/article-5985-1.html)”。
#### 性能指标
| 名称 | 描述 | [指标类型](https://www.datadoghq.com/blog/monitoring-101-collecting-data/) | 可用于 |
| --- | --- | --- | --- |
| request time （请求处理时间） | 处理每个请求的时间，单位为秒 | 工作：性能 | NGINX 日志 |
**提醒指标: 请求处理时间**
请求处理时间指标记录了 NGINX 处理每个请求的时间，从读到客户端的第一个请求字节到完成请求。较长的响应时间说明问题在上游。
**收集处理时间指标**
NGINX 和 NGINX Plus 用户可以通过添加 $request\_time 变量到访问日志格式中来捕​​捉处理时间数据。关于配置日志监控的更多细节在[NGINX指标收集](/article-5985-1.html)。
#### 反向代理指标
| 名称 | 描述 | [指标类型](https://www.datadoghq.com/blog/monitoring-101-collecting-data/) | 可用于 |
| --- | --- | --- | --- |
| 上游服务器的活跃链接 | 当前活跃的客户端连接 | 资源：功能 | NGINX Plus |
| 上游服务器的 5xx 错误代码 | 服务器错误 | 工作：错误 | NGINX Plus |
| 每个上游组的可用服务器 | 服务器传递健康检查 | 资源：可用性 | NGINX Plus |
[反向代理](https://en.wikipedia.org/wiki/Reverse_proxy)是 NGINX 最常见的使用方法之一。商业支持的 NGINX Plus 显示了大量有关后端（或“上游 upstream”）的服务器指标，这些与反向代理设置相关的。本节重点介绍了几个 NGINX Plus 用户可用的关键上游指标。
NGINX Plus 首先将它的上游指标按组分开，然后是针对单个服务器的。因此，例如，你的反向代理将请求分配到五个上游的 Web 服务器上，你可以一眼看出是否有单个服务器压力过大，也可以看出上游组中服务器的健康状况，以确保良好的响应时间。
**活跃指标**
**每上游服务器的活跃连接**的数量可以帮助你确认反向代理是否正确的分配工作到你的整个服务器组上。如果你正在使用 NGINX 作为负载均衡器，任何一台服务器处理的连接数的明显偏差都可能表明服务器正在努力消化请求，或者是你配置使用的负载均衡的方法（例如[round-robin 或 IP hashing](http://nginx.com/blog/load-balancing-with-nginx-plus/)）不是最适合你流量模式的。
**错误指标**
错误指标，上面所说的高于5XX（服务器错误）状态码，是监控指标中有价值的一个，尤其是响应码部分。 NGINX Plus 允许你轻松地提取**每个上游服务器的 5xx 错误代码**的数量，以及响应的总数量，以此来确定某个特定服务器的错误率。
**可用性指标**
对于 web 服务器的运行状况，还有另一种角度，NGINX 可以通过**每个组中当前可用服务器的总量**很方便监控你的上游组的健康。在一个大的反向代理上，你可能不会非常关心其中一个服务器的当前状态，就像你只要有可用的服务器组能够处理当前的负载就行了。但监视上游组内的所有工作的服务器总量可为判断 Web 服务器的健康状况提供一个更高层面的视角。
**收集上游指标**
NGINX Plus 上游指标显示在内部 NGINX Plus 的监控仪表盘上，并且也可通过一个JSON 接口来服务于各种外部监控平台。在我们的相关文章“[NGINX指标收集](/article-5985-1.html)”中有个例子。
### 结论
在这篇文章中，我们已经谈到了一些有用的指标，你可以使用表格来监控 NGINX 服务器。如果你是刚开始使用 NGINX，监控下面提供的大部分或全部指标，可以让你很好的了解你的网络基础设施的健康和活跃程度：
* [已丢弃的连接](https://www.datadoghq.com/blog/how-to-monitor-nginx/#dropped-connections)
* [每秒请求数](https://www.datadoghq.com/blog/how-to-monitor-nginx/#requests-per-second)
* [服务器错误率](https://www.datadoghq.com/blog/how-to-monitor-nginx/#server-error-rate)
* [请求处理数据](https://www.datadoghq.com/blog/how-to-monitor-nginx/#request-processing-time)
最终，你会学到更多，更专业的衡量指标，尤其是关于你自己基础设施和使用情况的。当然，监控哪一项指标将取决于你可用的工具。参见相关的文章来[逐步指导你的指标收集](/article-5985-1.html)，不管你使用 NGINX 还是 NGINX Plus。
在 Datadog 中，我们已经集成了 NGINX 和 NGINX Plus，这样你就可以以最少的设置来收集和监控所有 Web 服务器的指标。 [在本文中](https://www.datadoghq.com/blog/how-to-monitor-nginx-with-datadog/)了解如何用 NGINX Datadog来监控，并开始[免费试用 Datadog](https://www.datadoghq.com/blog/how-to-monitor-nginx/#sign-up)吧。
### 诚谢
在文章发表之前非常感谢 NGINX 团队审阅这篇，并提供重要的反馈和说明。
---
via: 
作者：K Young 译者：[strugglingyouth](https://github.com/strugglingyouth) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创翻译，[Linux中国](https://linux.cn/) 荣誉推出