User: Using Windows / ipython v6.0.0
I am running ipcontroller and a couple of ipengines on a remote host and all appears to work fine for simple cases.
I try to adjust the pythonpath on the remote host (where the ipengines run) such that it can locate python user packages installed on the remote host. For some reason the ipengine does not accept this. 
I can't figure out where each ipengine gets its pythonpath from. Starting a command prompt, changing the pythonpath and then starting an ipengine in that environment does not help.
In fact, this does not seem to apply to the pythonpath, but also to all other environment variables. All come from somewhere and apparently can't changed such that the ipengine uses these values. 
The only option seems to be is to add all packages, required binaries etc, in the directory where the ipengine is started from (since that directory is added to the pythonpath).
This seems rather crude and not very elegant at all. Am I missing something here?
Assistant: Eventually, I managed to solve this using a startup script for the ipengines (see ipengine_config.py). The startup script defines the path, pythonpath etc prior to starting each ipengine. 
However, it is still unclear to me why the same result cannot be achieved by setting these variables prior to starting an ipengine (in the same environment).