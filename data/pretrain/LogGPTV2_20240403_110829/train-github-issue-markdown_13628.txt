## Guidelines
Please note that GitHub issues are only meant for bug reports/feature
requests. If you have questions on how to use Neo4j, please ask on
StackOverflow instead of creating an issue here.
If you want to make a feature request then there is no guideline, so feel free
to stop reading and open an issue. If you have a bug report however, please
continue reading.  
To help us understand your issue, please specify important details, primarily:
  * Neo4j version: 3.5.3 Enterprise
  * Operating system: Linux
  * API/Driver: OpenJDK 1.8.0_201
  * `~/../../../usr/bin/neo4j-admin` import --nodes "import/uids-header.csv,import/uid_no. _" --nodes "import/ga-header.csv,import/ggl_no._ " --nodes "import/citystate-header.csv,import/city_no. _" --relationships:OBSERVED_WITH "import/rels-header.csv,import/ggl_li._ \--relationships:VISITED_FROM "import/rels-header.csv,import/city_li. _" --ignore-missing-nodes --delimiter="~" --high-io=true`--id-type=actual`  
vs  
`~/../../../usr/bin/neo4j-admin` import --nodes "import/uids-
header.csv,import/uid_no._" --nodes "import/ga-header.csv,import/ggl_no. _"
--nodes "import/citystate-header.csv,import/city_no._ "
--relationships:OBSERVED_WITH "import/rels-header.csv,import/ggl_li.*
--relationships:VISITED_FROM "import/rels-header.csv,import/city_li.*"
--ignore-missing-nodes --delimiter="~" --high-io=true `--id-type=integer`
  * Expected behavior : actual id should be faster on load. Each csv contains node data from Redshift with a node_id field based on Row_number() and ASC sorted. The first file goes from 1 to 2.4 Billion the second file ggl_no starts at where the last one left off plus 1, and continues to 5.4 Billion. These row_number tables were used to write the pairwise links from uid_no to ggl_no which are defined in ggl_li, same for city_li.
  * Actual behavior: The first run is with id-type actual  
(1/4) Node import 2019-04-06 00:33:07.510+0000  
Estimated number of nodes: 5.16 G  
Estimated disk space usage: 372.56 GB  
Estimated required memory usage: 1020.01 MB  
.......... .......... .......... .......... .......... 5% ∆9m 14s 169ms  
.......... .......... .......... .......... .......... 10% ∆9m 19s 910ms  
.......... .......... .......... .......... .......... 15% ∆9m 16s 647ms  
.......... .......... .......... .......... .......... 20% ∆9m 19s 566ms  
.......... .......... .......... .......... .......... 25% ∆7m 52s 829ms  
.......... .......... .......... .......... .......... 30% ∆7m 48s 373ms  
.......... .......... .......... .......... .......... 35% ∆6m 19s 909ms  
.......... .......... .......... .......... .......... 40% ∆7m 39s 613ms  
.......... .......... .......... .......... .......... 45% ∆7m 29s 365ms  
.......... .......... .......... .......... .......... 50% ∆7m 52s 382ms  
.......... .......... .......... .......... .......... 55% ∆9m 31s 845ms  
.......... .......... .......... .......... .......... 60% ∆16m 14s 117ms  
.......... .......... .......... .......... .......... 65% ∆16m 13s 717ms  
.......... .......... .......... .......... .......... 70% ∆16m 18s 966ms  
.......... .......... .......... .......... .......... 75% ∆16m 7s 677ms  
.......... .......... .......... .......... .......... 80% ∆15m 48s 866ms  
.......... .......... .......... .......... .......... 85% ∆15m 28s 920ms  
.......... .......... .......... .......... .......... 90% ∆15m 3s 62ms  
.......... .......... .......... .......... .......... 95% ∆12m 55s 803ms  
.......... .......... .......... .......... .......... 100% ∆1ms  
IMPORT FAILED in 3h 37m 21s 862ms.  
Data statistics is not available.  
Peak memory usage: 0.00 B  
Error in input data  
Caused by:ERROR in input  
data source:
BufferedCharSeeker[source:/var/lib/neo4j/import/seg_no0035_part_00.csv,
position:1896888, line:33873]  
in field: :LABEL:3  
for header: [node_id:ID, segment_id:string, :LABEL]  
raw field value: Segment  
original error: Id 4294967295 is reserved and can't be used as a regular
record id
Second run is with id-type= integer  
.......... .......... .......... .-........ .......... 35% ∆1m 47s 769ms  
.......... .......... .......... .......... .......... 40% ∆1ms  
.......... .......... .......... .......... .......... 45% ∆200ms  
.......... .......... .......... .......... .......... 50% ∆3m 42s 23ms  
.......... .......... .......... .......... .......... 55% ∆3m 930ms  
.......... .......... .......... .......... .......... 60% ∆2m 54s 750ms  
.......... .......... .......... .......... .......... 65% ∆2m 51s 136ms  
.......... .......... .......... .......... .......... 70% ∆2m 48s 332ms  
.......... .......... .......... .......... .......... 75% ∆1m 4s 256ms  
.......... .......... .......... .......... .......... 80% ∆10s 809ms  
.......... .......... .......... .......... .......... 85% ∆11s 612ms  
.......... .......... .......... .......... .......... 90% ∆59s 988ms  
.......... .......... .......... .......... .......... 95% ∆4m 23s 188ms  
.......... .......... .......... .......... .......... 100% ∆3m 56s 173ms
Exception in thread "Thread-18" java.lang.RuntimeException:
org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.DuplicateInputIdException:
Id '1154243009' is defined more than once in group 'global id space'  
at
org.neo4j.unsafe.impl.batchimport.staging.AbstractStep.issuePanic(AbstractStep.java:155)  
at
org.neo4j.unsafe.impl.batchimport.staging.AbstractStep.issuePanic(AbstractStep.java:147)  
at
org.neo4j.unsafe.impl.batchimport.staging.LonelyProcessingStep.lambda$receive$0(LonelyProcessingStep.java:59)  
at java.lang.Thread.run(Thread.java:748)  
Caused by:
org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.DuplicateInputIdException:
Id '1154243009' is defined more than once in group 'global id space'  
at
org.neo4j.unsafe.impl.batchimport.input.BadCollector$NodesProblemReporter.exception(BadCollector.java:278)  
at
org.neo4j.unsafe.impl.batchimport.input.BadCollector.collect(BadCollector.java:168)  
at
org.neo4j.unsafe.impl.batchimport.input.BadCollector.collectDuplicateNode(BadCollector.java:135)  
at
org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.detectDuplicateInputIds(EncodingIdMapper.java:606)  
at
org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.buildCollisionInfo(EncodingIdMapper.java:522)  
at
org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.prepare(EncodingIdMapper.java:239)  
at
org.neo4j.unsafe.impl.batchimport.IdMapperPreparationStep.process(IdMapperPreparationStep.java:56)  
at
org.neo4j.unsafe.impl.batchimport.staging.LonelyProcessingStep.lambda$receive$0(LonelyProcessingStep.java:53)  
... 1 more
IMPORT FAILED in 1h 31m 19s 634ms.  
Data statistics is not available.  
Peak memory usage: 39.25 GB  
Duplicate input ids that would otherwise clash can be put into separate id
space, read more about how to use id spaces in the manual:
https://neo4j.com/docs/operations-manual/3.5/tools/import/file-header-
format/#import-tool-id-spaces  
Caused by:Id '1154243009' is defined more than once in group 'global id space'
Additionally, include (as appropriate) log-files, stacktraces, and other debug
output.