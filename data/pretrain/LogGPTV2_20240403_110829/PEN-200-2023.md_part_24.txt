Listing 89 - Using snmpwalk to eonumerate installed software
When combined with the running process list we obtained earlier, this information can become
extremely valuable for cross-checking then exact software version a process is running on the
target host.
Another SNMP enumeration techniqiue is to list all the current TCP listening ports:
z
kali@kali:~$ snmpwalk -c public -v1 192.168.50.151 1.3.6.1.2.1.6.13.1.3
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.88.0.0.0.0.0 = INTEGER: 88
D
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.135.0.0.0.0.0 = INTEGER: 135
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.389.0.0.0.0.0 = INTEGER: 389
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.445.0.0.0.0.0 = INTEGER: 445
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.464.0.0.0.0.0 = INTEGER: 464
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.593.0.0.0.0.0 = INTEGER: 593
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.636.0.0.0.0.0 = INTEGER: 636
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.3268.0.0.0.0.0 = INTEGER: 3268
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.3269.0.0.0.0.0 = INTEGER: 3269
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.5357.0.0.0.0.0 = INTEGER: 5357
iso.3.6.1.2.1.6.13.1.3.0.0.0.0.5985.0.0.0.0.0 = INTEGER: 5985
...
Listing 90 - Using snmpwalk to enumerate open TCP ports
The integer value from the output above represents the current listening TCP ports on the target.
This information can be extremely useful as it can disclose ports that are listening only locally and
thus reveal a new service that had been previously unknown.
6.4 Wrapping Up
In this Module, we explored the foundational aspects of the iterative process of both passive and
active information gathering. We first covered a variety of techniques and tools to locate
information about companies and their employees. This information can often prove to be
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 161
Made in Morocco
Penetration Testing with Kali Linux
invaluable in later stages of the engagement. We then focused on how to actively scan and
enumerate services that are commonly exposed. We learned how to perform these enumeration
steps from both Kali Linux and a Windows client.
There is never one “best” tool for any given situation, especially since many tools in Kali Linux
overlap in function. It’s always best to familiarize ourselves with as many tools as possible, learn
their nuances, and whenever possible, measure the results to understand what’s happening
behind the scenes. In some cases, the “best” tool is the one held by the pentester who is most
familiar with.
y
k
s
o
n
i
z
D
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 162
Made in Morocco
Penetration Testing with Kali Linux
7 Vulnerability Scanning
In this Learning Module, we will cover the following Learning Units:
• Vulnerability Scanning Theory
• Vulnerability Scanning with Nessus
• Vulnerability Scanning with Nmap
The discovery of vulnerabilities is an integral part of any security assessment. The process of
identifying the attack surface of a piece of software, system, or network is called Vulnerability
Scanning.277
Vulnerability scanners come in many different forms, from individuayl scripts that identify a single
vulnerability to complex commercial solutions that scan for a broad variety. Automated
vulnerability scanners can be invaluable for penetration testers as they help quickly establish a
k
baseline on the target network before performing a more thorough manual testing analysis to get
adequate coverage. Common types of vulnerability scanners are web application and network
s
vulnerability scanners.
In this Module, we will analyze automated netwoork vulnerability scanning. We’ll begin with the
theory behind vulnerability scanning and then use Nessus278 and Nmap279 to perform different
kinds of vulnerability scans.
n
7.1 Vulnerability Scanning Theory
i
This Learning Unit covers the following Learning Objectives:
z
• Gain a basic understanding of the Vulnerability Scanning process
D
• Learn about the different types of Vulnerability Scans
• Understand the considerations of a Vulnerability Scan
In this Learning Unit, we’ll discuss the theory behind vulnerability scanning. Before inspecting our
tools, we need to outline the basic workflow of a vulnerability scanner and understand how it
finds vulnerabilities. We will also review the different types and considerations of a vulnerability
scan.
7.1.1 How Vulnerability Scanners Work
Every vulnerability scanner has its own customized workflow but the basic process behind
vulnerability scanning is implementation independent. The basic process of an automated
vulnerability scanner can be described as:
1. Host discovery
277 (Wikipedia, 2021), https://en.wikipedia.org/wiki/Vulnerability_scanner
278 (Tenable, 2022), https://www.tenable.com/products/nessus
279 (Nmap, 2022), https://nmap.org
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 163
Made in Morocco
Penetration Testing with Kali Linux
2. Port scanning
3. Operating system, service, and version detection
4. Matching the results to a vulnerability database
The Host Discovery280 tells the scanner if the target is up and responding. The scanner then uses
various techniques to identify all open ports on the system and detect all remotely accessible
services with corresponding versions. In addition, operating system detection will be done in this
step. Based on all gathered information, the vulnerability scanner will then query a vulnerability
database to match the found data to vulnerabilities. Examples for vulnerability databases are the
National Vulnerability Database281 and the Common Vulnerabilities and Exposures (CVE)
program.282
y
Most commercial vulnerability scanners also have the functionality to verify
found vulnerabilities by attempting to partially or fully exploit them. This can
significantly reduce missed vulnerabilities but can impkact the stability of the
service or system.
s
Vulnerabilities are identified by the CVE system.283 o While this allows us to identify and find verified
vulnerabilities, the CVE identifier provides no information about the severity of a vulnerability.
The Common Vulnerability Scoring Synstem (CVSS)284 is a framework for addressing
characteristics and severity of vulnerabilities. Each CVE has a CVSS score assigned. The two
major versions are CVSS v2285 and CVSS v3.286 Both versions use a range from 0 to 10 to rate
i
vulnerabilities with different severity labels. The following figure from the National Institute of
z
Standards and Technology (NIST)287 lists the range of the base score and associated severity for
CVSS v2.0 and CVSS v3.0.
D
Figure 33: CVSS Ratings
280 (CAPED Mitre, 2021), https://capec.mitre.org/data/definitions/292.html
281 (NIST, 2022), https://nvd.nist.gov
282 (CVE MITRE, 2022), https://cve.mitre.org/cve/search_cve_list.html
283 (CVE MITRE, 2022), https://cve.mitre.org
284 (NIST, 2022), https://nvd.nist.gov/vuln-metrics/cvss
285 (First, 2007), https://www.first.org/cvss/v2/guide
286 (First, 2019), https://www.first.org/cvss/user-guide
287 (NIST, 2022), https://www.nist.gov/
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 164
Made in Morocco
Penetration Testing with Kali Linux
To obtain a CVSS score, we can review the CVE in a vulnerability database, or if there is no CVE
assigned, we can use a CVSS calculator.288 In 2019, CVSS v3.1 was released, which clarified and
improved the existing version.
We need to be aware that the results of a vulnerability scan can be incomplete or contain
wrongfully detected vulnerabilities.
A false positive289 occurs when a vulnerability is detected but the target is not actually vulnerable.
This can happen through a wrong service and version detection or a configuration that makes the
target unexploitable. False positives can also occur when patches or updates are backported,290
meaning that security fixes are applied to an older version of software.
False negative291 is another important term. It occurs when a vulnerability is missed by the
vulnerability scanner.
y
In a penetration test, we often need to find the right balance between manual and automated
vulnerability scanning. Let’s explore both options briefly.
k
A manual vulnerability scan will inevitably be very resource intensive and time consuming. When
there is a huge amount of data to analyze, we often reach our cognitive limit quickly and overlook
s
vital details. On the other hand, manual vulnerability scanning allows for the discovery of complex
and logical vulnerabilities that are rather difficult to discover using any type of automated
scanner. o
Automated vulnerability scans are invaluable when working on engagements for a multitude of
n
reasons. First, in nearly all types of assessments, we have time constraints. Therefore, when we
have a big enterprise network to scan, we cannot manually review every system. This is especially
true when thinking about new or coimplex vulnerabilities. Second, by using automated scanners,
we can quickly identify easily-detezcted vulnerabilities and other low-hanging fruit.
We should take the time to explore the inner-workings of every automated tool we plan to use in a
security assessment. This Dwill not only assist us in configuring the tool and digesting the results
properly, but will help us understand the limitations that must be overcome with manually applied
expertise.
7.1.2 Types of Vulnerability Scans
In this section, we will examine internal and external as well as unauthenticated and authenticated
vulnerability scans.
The location we perform the vulnerability scan from determines the target visibility. If a client
tasks us with an external vulnerability scan, they mean to analyze one or more systems that are
accessible from the internet. Targets in an external vulnerability scan are often web applications,
systems in the demilitarized zone (DMZ),292 and public-facing services.
288 (NIST, 2022), https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator
289 (CGISecurity.com, 2008), https://www.cgisecurity.com/questions/falsepositive.shtml
290 (Red Hat, 2020), https://access.redhat.com/security/updates/backporting
291 (CGISecurity.com, 2008), https://www.cgisecurity.com/questions/falsenegative.shtml
292 (Wikipedia, 2021), https://en.wikipedia.org/wiki/DMZ_(computing)
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 165
Made in Morocco
Penetration Testing with Kali Linux
The client’s intention is to get an overview of the security status of all systems that are accessible
by an external attacker. In most cases, we get a list of IP addresses the client wants us to scan
but occasionally, they want us to map all external accessible systems and services by ourselves.
While a company should always know which of their systems are publicly accessible, it’s not
always the case. As a result, we will often find externally exposed sensitive systems and services
that the company is not aware of.
On the other hand, there is the internal vulnerability scan where we have direct access to either a
part of or the complete internal network of a client. When a client tasks us with this kind of
vulnerability scan, we either get VPN293 access or we perform the scan on-site. The intention is to
get an overview of the security status of the internal network. It is important to analyze which
vectors an attacker can use after breaching the perimeter.
The next two scan types we will examine are authenticated and unauthenticated vulnerability
scans. When we perform a vulnerability scan on a system withouyt providing credentials, it is
called an unauthenticated vulnerability scan. Unauthenticated scans are made to find
vulnerabilities in remotely accessible services on a target. Therefore, they map the system with all
k
open ports and provide us with an attack surface by matching the information to vulnerability
databases as mentioned before.
s
However, we get no information about local security flaws, such as missing patches, outdated
software, or configuration vulnerabilities on the syostem itself. For example, in an unauthenticated
vulnerability scan on a Windows target, we cannot determine if the system is patched against the
HiveNightmare294 vulnerability, which allows a unprivileged user to read sensitive system files.
n
This is where authenticated scans come into play.
Most scanners can be configured to run authenticated scans, in which the scanner logs in to the
i
target with a set of valid credentials. In most instances, authenticated scans use a privileged user
z
account to have the best visibility into the target system. The goal of authenticated vulnerability
scans is to check for vulnerable packages, missing patches, or configuration vulnerabilities.
D
We will perform both authenticated and unauthenticated scans in the next Learning Unit, but first,
let’s discuss how to obtain accurate and conclusive results.
7.1.3 Things to consider in a Vulnerability Scan
In this section, we will cover a few things we need to consider when planning and performing a
vulnerability scan. In large engagements, we need to configure the vulnerability scanner carefully
to get meaningful and relevant results.
The first consideration we’ll discuss is the scanning duration. Depending on the scanning type
and number of targets, the duration of an automated scan can vary greatly. Because external
scans over the internet can be time consuming due to the number of hops and intermediate
systems on the network route, it’s important that we plan accordingly if we have a large list of IP
addresses.
We also need to discuss target visibility. While it is easy to input an IP address and start the
vulnerability scan, we often have to properly consider our targets. It’s important to determine if
293 (Wikipedia, 2022), https://en.wikipedia.org/wiki/Virtual_private_network
294 (MSRC, 2021), https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 166
Made in Morocco
Penetration Testing with Kali Linux
our targets are accessible without the need of any VPNs or permissions in a firewall. In most
cases, a client providing a list of IP addresses for an external scan isn’t a cause for concern. But if
we are single-handedly determining the attack surface of a client’s publicly accessible
infrastructure, we need to understand that firewalls and other access restriction mechanisms,
which could make systems and services inaccessible, might be in place.
For example, an international client has several systems in multiple countries. They restrict
access from all IP addresses outside of the country where each system is located. From our
location, we are only able to access the systems located in our country while all others are
inaccessible to us.
Let’s also consider target visibility in an internal engagement. We need to think about our
positioning in the network to get meaningful results, especially when we want to scan systems
from other subnets. Keep in mind that firewalls, intrusion prevention systems (IPS),295 and
intermediate network devices (such as routers), can filter or alter ouyr traffic. One example of this
is when a vulnerability scanner sends ICMP packets in the Host Discovery step and the
intermediate device does not forward them. Hence, the scanner marks the target as offline.
k
In addition, our scan can be affected by rate limiting,296 which is used to limit the amount of traffic
on a network. When our scan exceeds thresholds like sthroughput, packet count, or connection
count, the source system of our vulnerability scan can be drastically restricted in the context of
networking capabilities. When the host discoveryo and service detection probes are rate limited
and therefore slowed down, the vulnerability scanner may miss live hosts or services. Most
vulnerability scanners can address this by specifying delays, timeouts, and limiting parallel
n
connections.
Finally, let’s review the network and system impact of vulnerability scans. A vulnerability scanner
i
produces a lot of network traffic in most configurations, especially if we want to scan multiple
z
targets in a parallel way. This can easily render a network unusable. To address this, we could
reduce the number of parallel scans or the scanning speed. An even bigger problem is the
potential impact of our vulnDerability scan on the stability of a system. We need to consider that
every vulnerability scan can bring instability to any system or service we scan.
7.2 Vulnerability Scanning with Nessus
This Learning Unit covers the following Learning Objectives:
• Install Nessus
• Understand the different Nessus components
• Configure and perform a vulnerability scan
• Understand and work with the results of a vulnerability scan with Nessus
• Provide credentials to perform an authenticated vulnerability scan
• Gain a basic understanding of Nessus plugins
295 (VMWare, 2022), https://www.vmware.com/topics/glossary/content/intrusion-prevention-system.html
296 (Wikipedia, 2021), https://en.wikipedia.org/wiki/Rate_limiting
PWK - Copyright © 2023 OffSec Services Limited. All rights reserved. 167
Made in Morocco
Penetration Testing with Kali Linux
In this Learning Unit, we’ll focus on Nessus, which is one of the most popular vulnerability
scanners, containing over 67000 CVEs297 and 168000 plugins.298
Nessus is available as Nessus Essentials and Nessus Professional.299 We will use the free version,
Nessus Essentials, which comes with some restrictions and constraints. For example, we can
only scan 16 different IP addresses, and some templates and functions are not available.
However, Nessus Essentials will give us insight into how to use the full commercial version and
the general concepts discussed in this section will also apply to most commercial scanners.
7.2.1 Installing Nessus
For this Learning Unit, we’ll need to install Nessus on the Kali Linux VM, which is used to connect
to the PEN-200 lab environment. An internet connection and email address will be necessary to
download and activate Nessus. The minimum hardware requirements Tenable recommends300
are 4 CPU cores and 8GB of RAM. However, we don’t need to meeyt those requirements for our
exercises. 2 CPU cores and 4GB of RAM are sufficient for our needs.
k
Nessus is not available in the Kali repositories and needs to be installed manually. We can
download the current version of Nessus as a 64bit .deb301 file for Kali from the Tenable
website.302 There, we also get the SHA256303 and MD5304s checksums for the installer.
Let’s select Linux - Debian - amd64 as platform and download the installer.
o
n
i
z
D
Figure 34: Download Nessus for Kali
After downloading the installer, we’ll check the SHA256 checksum to validate it. To do this, we
click the Checksum button and copy the SHA256 checksum to the clipboard via the copy icon.