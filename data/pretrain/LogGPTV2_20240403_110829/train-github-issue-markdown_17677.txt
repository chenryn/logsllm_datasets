  * I tried using the `@types/leaflet` package and had problems.
  * I tried using the latest stable version of tsc. https://www.npmjs.com/package/typescript
  * I have a question that is inappropriate for StackOverflow. (Please ask any appropriate questions there).
  * Mention the authors (see `Definitions by:` in `index.d.ts`) so they can respond. 
    * Authors: @alejo90
Currently, only function style is supported by typings for GeoJSON style.
Typings should be updated to support a simple object as styles as well.
See documentation: http://leafletjs.com/examples/geojson/
> The style option can be used to style features two different ways. First, we
> can pass a simple object that styles all paths (polylines and polygons) the
> same way:
    var myLines = [{
        "type": "LineString",
        "coordinates": [[-100, 40], [-105, 45], [-110, 55]]
    }, {
        "type": "LineString",
        "coordinates": [[-105, 40], [-110, 45], [-115, 55]]
    }];
    var myStyle = {
        "color": "#ff7800",
        "weight": 5,
        "opacity": 0.65
    };
    L.geoJSON(myLines, {
        style: myStyle
    }).addTo(map);
> Alternatively, we can pass a function that styles individual features based
> on their properties. In the example below we check the "party" property and
> style our polygons accordingly:
    var states = [{
        "type": "Feature",
        "properties": {"party": "Republican"},
        "geometry": {
            "type": "Polygon",
            "coordinates": [[
                [-104.05, 48.99],
                [-97.22,  48.98],
                [-96.58,  45.94],
                [-104.03, 45.94],
                [-104.05, 48.99]
            ]]
        }
    }, {
        "type": "Feature",
        "properties": {"party": "Democrat"},
        "geometry": {
            "type": "Polygon",
            "coordinates": [[
                [-109.05, 41.00],
                [-102.06, 40.99],
                [-102.03, 36.99],
                [-109.04, 36.99],
                [-109.05, 41.00]
            ]]
        }
    }];
    L.geoJSON(states, {
        style: function(feature) {
            switch (feature.properties.party) {
                case 'Republican': return {color: "#ff0000"};
                case 'Democrat':   return {color: "#0000ff"};
            }
        }
    }).addTo(map);