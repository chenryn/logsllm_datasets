= 日志易检索参考
北京优特捷信息技术有限公司
v4.1, 2021-11-09
:encoding: utf-8
:lang: zh
:toc: left
:toclevels: 3
:numbered:
:compat-mode!:
:autofit:
:numbered:
:chapter-label:
:specialnumbered !:
:experimental:
:listing-caption: Listing
:back-cover-image: image:resources/bckcover.jpg[]
:icons: font
ifdef::backend-pdf[]
:pagenums:
:tabsize: 8
:pygments-style: bw
:source-highlighter: pygments
endif::[]
include::search-chapters/command-ref.adoc[]
include::search-chapters/command-types.adoc[]
include::search-chapters/eval-functions.adoc[]
include::search-chapters/stats-functions.adoc[]
include::search-chapters/timeformat.adoc[]
include::search-chapters/command-chapters/query.adoc[]
include::search-chapters/command-chapters/multisearch.adoc[]
include::search-chapters/command-chapters/addinfo.adoc[]
include::search-chapters/command-chapters/append.adoc[]
include::search-chapters/command-chapters/union.adoc[]
include::search-chapters/command-chapters/appendcols.adoc[]
include::search-chapters/command-chapters/autoregress.adoc[]
include::search-chapters/command-chapters/bucket.adoc[]
include::search-chapters/command-chapters/composite.adoc[]
include::search-chapters/command-chapters/chart.adoc[]
include::search-chapters/command-chapters/collect.adoc[]
include::search-chapters/command-chapters/correlation.adoc[]
include::search-chapters/command-chapters/dbxexec.adoc[]
include::search-chapters/command-chapters/dbxlookup.adoc[]
include::search-chapters/command-chapters/dbxoutput.adoc[]
include::search-chapters/command-chapters/dbxquery.adoc[]
include::search-chapters/command-chapters/dedup.adoc[]
include::search-chapters/command-chapters/delete.adoc[]
include::search-chapters/command-chapters/download.adoc[]
include::search-chapters/command-chapters/esma.adoc[]
include::search-chapters/command-chapters/eval.adoc[]
include::search-chapters/command-chapters/eventstats.adoc[]
include::search-chapters/command-chapters/fields.adoc[]
include::search-chapters/command-chapters/filldown.adoc[]
include::search-chapters/command-chapters/fillnull.adoc[]
include::search-chapters/command-chapters/foreach.adoc[]
include::search-chapters/command-chapters/fromes.adoc[]
include::search-chapters/command-chapters/fromkafkapy.adoc[]
include::search-chapters/command-chapters/gentimes.adoc[]
include::search-chapters/command-chapters/geostats.adoc[]
include::search-chapters/command-chapters/inputlookup.adoc[]
include::search-chapters/command-chapters/iplocation.adoc[]
include::search-chapters/command-chapters/join.adoc[]
include::search-chapters/command-chapters/jpath.adoc[]
include::search-chapters/command-chapters/kvextract.adoc[]
include::search-chapters/command-chapters/ldapfetch.adoc[]
include::search-chapters/command-chapters/ldapfilter.adoc[]
include::search-chapters/command-chapters/ldapgroup.adoc[]
include::search-chapters/command-chapters/ldapsearch.adoc[]
include::search-chapters/command-chapters/ldaptestconnection.adoc[]
include::search-chapters/command-chapters/limit.adoc[]
include::search-chapters/command-chapters/head.adoc[]
include::search-chapters/command-chapters/lookup.adoc[]
include::search-chapters/command-chapters/lookup2.adoc[]
include::search-chapters/command-chapters/makecontinuous.adoc[]
include::search-chapters/command-chapters/makeresults.adoc[]
include::search-chapters/command-chapters/map.adoc[]
include::search-chapters/command-chapters/movingavg.adoc[]
include::search-chapters/command-chapters/mvcombine.adoc[]
include::search-chapters/command-chapters/mvexpand.adoc[]
include::search-chapters/command-chapters/outputlookup.adoc[]
include::search-chapters/command-chapters/parse.adoc[]
include::search-chapters/command-chapters/partition.adoc[]
include::search-chapters/command-chapters/rare.adoc[]
include::search-chapters/command-chapters/rename.adoc[]
include::search-chapters/command-chapters/rollingstd.adoc[]
include::search-chapters/command-chapters/save.adoc[]
include::search-chapters/command-chapters/sort.adoc[]
include::search-chapters/command-chapters/stats.adoc[]
include::search-chapters/command-chapters/streamstats.adoc[]
include::search-chapters/command-chapters/table.adoc[]
include::search-chapters/command-chapters/timechart.adoc[]
include::search-chapters/command-chapters/timewrap.adoc[]
include::search-chapters/command-chapters/top.adoc[]
include::search-chapters/command-chapters/transaction.adoc[]
include::search-chapters/command-chapters/transpose.adoc[]
include::search-chapters/command-chapters/unpivot.adoc[]
include::search-chapters/command-chapters/where.adoc[]
include::search-chapters/command-chapters/xpath.adoc[]
include::search-chapters/command-chapters/replace.adoc[]
include::search-chapters/command-chapters/makemv.adoc[]
include::search-chapters/command-chapters/localop.adoc[]
include::search-chapters/command-chapters/strcat.adoc[]
include::search-chapters/command-chapters/loadjob.adoc[]
include::search-chapters/command-chapters/accum.adoc[]
include::search-chapters/command-chapters/untable.adoc[]
include::search-chapters/command-chapters/rest.adoc[]
include::search-chapters/command-chapters/typeahead.adoc[]
include::search-chapters/command-chapters/history.adoc[]
include::search-chapters/command-chapters/addcoltotals.adoc[]
include::search-chapters/command-chapters/addtotals.adoc[]
== SPL中使用注释
SPL支持两种形式的注释，可以用来:
* 描述SPL的用途，某个参数的目的，增强维护性
* 调试SPL，比如注释掉从某个命令之后的所有命令
SPL支持两种注释:
* 行注释 // 从开始到行结尾的部分都是注释
* 块注释 /* */ 两个注释块中间的都是注释
注释可以放在搜索或者其他命令的任意位置，但是放在引号内(成对的单引号和双引号)注释不能生效
== Logtail功能
摘要：
* 通过在界面选择一个实时的窗口, 窗口范围限制为5s-1h
* 运行logtail后，界面会持续的刷新该窗口内的结果，包括时间轴和事件列表
* 时间轴的显示规则：如果窗口在1s-10s，时间轴会以100ms为一个单位，如果窗口在10s-5min, 时间轴会以1s为一个单位，如果窗口在5min-1h，时间轴会以1m为一个单位
* 界面大概会每2s-3s刷新变化一次
语法支持：
* 是否使用优化：
** 未使用优化：支持所有命令
** 使用优化：仅支持stats，top命令
[NOTE]
====
* 由于logtail支持优化，所以我们在配置项中的logtail.optimization将会指定是否尝试使用优化，默认为使用优化，打开优化可以减少性能消耗，但是在小间隔时会有精度损失，和logtail.optimization_boundary配合使用
* 在打开优化的情况下，我们需要指定在实时窗口大于多少间隔再使用优化，默认为300000ms，对应配置项logtail.optimization_boundary，如需修改优化时间间隔，则修改该配置项即可
* 由于是指定时间段实时返回数据的，所以为了性能的考虑我们将对query查询的最大结果数限制为1000条，对应配置项为logtail.query.max_result_count，如果需要返回更多的query查询结果则修改该配置项即可
* 由于是指定时间段实时返回数据的，所以为了性能的考虑我们将对stats统计的最大结果数默认为20000条，对应的配置项为logtail.stats.max_result_count，如果需要返回更多的stats查询结果则修改该配置项即可
====
== Download功能
摘要：
* 本功能意在对查询的结果进行导出和下载
* 功能的入口有两个，分别在搜索和仪表盘。在搜索中，提交搜索后会出现下载按钮，点击下载并填写下载参数后即可将当前查询的结果导出到文件并存储在配置路径中。进入设置-下载管理，可以看到正在执行的下载任务和已经结束的历史下载任务，再次点击右侧下载按钮可将文件通过浏览器下载至本地。
必要参数：
* 
** 描述：
    填写文件名以标识此次任务并作为导出文件的名称，如在同一用户下出现重名，那么本次下载任务将不被会执行
* 
** 描述：
    对于下载文件格式的限制，总体上提供txt、csv和json三种格式支持，具体限制见下面详细描述
可选参数：
* 
** 描述：
    可限制下载文件的大小或者下载结果的条数。同时系统配置了最大大小和最多条数，如果用户输入的参数超过配置，将会报错
* 
** 描述：
    对于下载文件编码格式的限制，默认为UTF-8，可选为GBK。GBK编码主要是为了解决在windows系统下用excel打开csv格式时内容乱码问题
语法和格式支持：
    目前对于Stats类的查询支持csv和json格式，对于Query类的查询支持txt和json格式，对于Transaction类查询仅支持json格式。另外在仪表盘中对于语法的限制遵循仪表盘的说明。
[NOTE]
====
* 下载功能的每个用户可同时保存的文件数目最大限制为20，对应配置项download.files_per_user_limit，如果需要支持单用户下载保存更多的文件数，则修改该配置即可
* 下载功能的最大条数限制，默认为10000000，对应配置项为download.max_events
* csv文件下载时暂不支持append语句
====
== 搜索宏功能
摘要：
* SPL宏是一些SPL命令组织在一起，作为一个单独SPL命令完成一个特定的任务，它能使日常工作变得更容易，并且支持多个参数传入
* 定义SPL宏功能入口为：`设置→资源→搜索宏`，然后可以看到当前配置的所有宏，再次点击右上角的新建按钮即可创建一个SPL宏
必要参数：
* 名称：
** 描述：
    该名称为调用搜索宏的名称及参数个数
[NOTE]
====
* 如果搜索宏使用参数，则需在名称后附加参数的数目来进行表示
====
** 示例：
    testMacro(2)
* 标签：
** 描述：
    该搜索宏的标签
* 定义：
** 描述：
    即此次新增的宏代表的spl语句，这里的spl语句可以是完整的带query部分的语句，也可以是不带query的只由管道符分割的一组命令。当宏带参数时，需要在定义spl语句中将参数用双 "$" 符号包裹。
** 示例：
    新增一个名称为mymacro(1)的宏，其定义为 * | stats count() by $X$，X为调用宏时需要传入的字段名，在调用宏的时候使用的语句为：`mymacro(appname)`。
可选参数：
* 是否使用基于eval的宏的定义：
** 描述：
    要以 eval 命令表达式创建宏定义，请选择使用基于 eval 的表达式?。此设置指定了搜索宏定义是一个返回字符串的 eval 表达式
** 示例：
*** 示例1：
    搜索宏名：mm(2)，宏定义为：if(isstr(a),$x$-$y$,$x$+$y$)，勾选‘使用基于eval的定义’，搜索页搜索 * | eval x=`mm(1,2)`,搜索错误
*** 示例2：
    搜索宏名：mm(2)，宏定义为："if(isstr(a),$x$-$y$,$x$+$y$)"，勾选‘使用基于eval的定义’，搜索页搜索 * | eval x=`mm(1,2)`,搜索正确，x="3"
*** 示例3：
    搜索宏名：mm(2)，宏定义为：if(isstr(a),$x$-$y$,$x$+$y$)，不勾选‘使用基于eval的定义’，搜索页搜索 * | eval x=`mm(1,2)`,搜索正确，x=3
*** 示例4：
    搜索宏名：mm(2)，宏定义为："if(isstr(a),$x$-$y$,$x$+$y$)"，不勾选‘使用基于eval的定义’，搜索页搜索 * | eval x=`mm(1,2)`,搜索正常，x="if(isstr(a),1-2,1+2)"
** NOTE：
    上述四种示例中的示例2，即定义中带双引号且勾选eval定义情况下，isstr(a)这里的函数无法传字段名，因为这种情况下宏定义是在语法解析之前也就是拿到数据之前提前执行的，所以无法获取传入字段名和字段值。如若想实现传入字段值进行判断且最终宏替换结果为计算结果的话，请使用第三种示例进行定义。
* 参数：
** 描述：
    即在上述的必要参数中填写的定义中定义的参数名称，其间使用","分隔
** 示例：
    x,y
** NOTE：
    参数之间以逗号分割，参数名称只能包含字母数字，“_”和“-”字符
* 验证表达式：
** 描述：
    输入通过宏参数运行的eval或布尔表达式
** 示例：
    isstr(x) && isstr(y)
* 验证错误信息：
** 描述：
    输入在验证表达式返回“false”时要显示的信息
** 示例：
    参数错误，请输入正确的参数
.示例1
====
新增一个名称为mymacro(1)的宏，其定义为 * | stats count() by $X$，X为调用宏时需要传入的字段名，在调用宏的时候使用的语句为：mymacro(appname)。
[source,bash]
`mymacro("appname")`
新建宏的页面：
image::images/Image-140318-045116.648.png[]
使用宏的界面：
image::images/Image-140318-045117.668.png[]
====
== 高基功能(Flink)
摘要：
* spl on Flink旨在解决超大分组下的统计，如 `stats count() by srcip` 这种，来解决我们在普通模式下通过group.size配置项限制分组数量而出现的统计数据不全的问题
* 不建议使用功能为非统计类型的命令
[NOTE]
====
* 目前不支持的命令：addinfo, append, appendcols, autoregress, chart, collect, dbxquery, esma, eventstats, gentimes, geostats, inputlookup, join, jpath, kvextract, lookup2, map, movingavg, outputlookup, rollingstd, save, streamstats, timechart, timewrap, transaction, transpose, xpath
* 不支持下载，logtail和定时任务等功能，仅支持普通搜索、告警以及报表功能。
* fields命令只支持保留字段，不支持排除字段，不支持通配符。
====
include::search-chapters/command-chapters/custom_command.adoc[]