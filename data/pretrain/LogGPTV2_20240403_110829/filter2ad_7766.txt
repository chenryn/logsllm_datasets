title:FEAST 2017: The Second Workshop on Forming an Ecosystem Around Software
Transformation
author:Taesoo Kim and
Dinghao Wu
FEAST 2017: The Second Workshop on Forming an Ecosystem
Around Software Transformation
Taesoo Kim
Georgia Institute of Technology
Atlanta, GA 30332, USA
PI:EMAIL
Dinghao Wu
The Pennsylvania State University
University Park, PA 16802, USA
PI:EMAIL
ABSTRACT
The Second Workshop on Forming an Ecosystem Around Software
Transformation (FEAST 2017) is held in conjunction with the 24th
ACM Conference on Computer and Communications Security (CCS
2017) on November 3, 2017 in Dallas, Texas. The workshop is geared
toward discussion and understanding of several critical topics sur-
rounding software executable transformation for improving the
security and efficiency of all software used in security-critical appli-
cations. The scope of discussion for this workshop includes topics
that may be necessary to fully exploit the power and impact of
late-stage software customization effort.
CCS CONCEPTS
• Security and privacy → Software reverse engineering; Soft-
ware security engineering; • Software and its engineering →
Software maintenance tools; Software verification and validation;
KEYWORDS
Software transformation, binary code, security, debloating
1 INTRODUCTION
Typical software engineering methodologies are largely focused on
programmer productivity and their methods have been known to
introduce significant execution inefficiency as a side effect. Recent
work investigating efficient and timely software has attempted to
enhance software execution efficiency while preserving the source
code-level abstractions and object-orientation that enhance a pro-
grammer’s productivity.
Such efforts seek to undo the side effects on security and per-
formance overhead by reclaiming software execution efficiency
and reducing indirection, as well as performing automatic pro-
gram de-layering and program specialization (de-bloating). Several
promising results from these efforts have demonstrated their viabil-
ity in improving program execution efficiency as well as reduction
of the cyber security attack surface. As a result, the community
may benefit by investing in the development of tool ecosystems to
take advantage of this recent progress, to mature the technologies,
and determine how best to transparently deploy them.
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
CCS ’17, October 30-November 3, 2017, Dallas, TX, USA
© 2017 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-4946-8/17/10.
https://doi.org/10.1145/3133956.3137052
Despite some early progress within the research community,
software executable transformation is not a solved science. Some
critical problems reverse engineering and binary understanding
are, in the general case, undecidable. Various automated tools and
ecosystems will need to be investigated and developed to guarantee
the effectiveness and correctness of transformation efforts and to
enhance and ensure the security of transformed software. The
FEAST workshop aims at forming an ecosystem Around Software
Transformation.
2 TOPICS
The FEAST workshop will provide a forum for researchers to share
ideas and development on software transformation. It includes
topics geared toward:
• Understanding issues of software executable transformation
for various programming languages and environment, and
the potential methods for alleviating those issues.
• Identification of tools to be investigated and developed for
guaranteeing correctness, enhancing security, and enabling
non-critical/undesired feature removal.
• Identification of layers and areas of computing systems that
are suitable for and can benefit from software customiza-
tion/transformation, along with identification of associated
challenges and constraints, and the particular adaptation to
the methodology needed to operate within the identified
areas.
• Automated extraction of models from software executables
that are amenable to formal methods analysis and verifica-
tion.
3 FORMAT
Submissions should be in two-column, 10-point format, and can be
up to 6 pages in length with as many additional pages as necessary
for references.
4 REVIEW PROCESS
All accepted papers received two to three double-blind reviews. We
would like to thank all PC members and external reviewers for their
contributions.
5 INVITED SPEAKERS
The workshop has an invited talk. The keynote speaker is Vikram
S. Adve from University of Illinois at Urbana-Champaign.
Workshop SummaryCCS’17, October 30-November 3, 2017, Dallas, TX, USA26336 WORKSHOP ORGANIZATION
Program Committee Chairs
• Taesoo Kim, Georgia Tech
• Dinghao Wu, Penn State University
Program Committee Members
• Kevin Hamlen, UT Dallas
• Wenkee Lee, Georgia Tech
• Zhiqiang Lin, UT Dallas
• Mayur Naik, UPenn
• Mathias Payer, Purdue University
• Aravind Prakash, Binghamton University
• Binoy Ravindran, Virginia Tech
• Yan Shoshitaishvili, Arizona State University
• Gang Tan, Penn State University
• Jan Vitek, Northeastern University
• XiaoFeng Wang, Indiana University
• Dongyan Xu, Purdue University
• Harry Xu, UC Irvine
• Daphne Yao, Virginia Tech
ACKNOWLEDGMENTS
The FEAST Workshop is sponsored by Association for Computing
Machinery (ACM), ACM SIGSAC, and Office of Naval Research
(ONR).
Workshop SummaryCCS’17, October 30-November 3, 2017, Dallas, TX, USA2634