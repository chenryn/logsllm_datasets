title:A Practical, Targeted, and Stealthy Attack Against WPA Enterprise
Authentication
author:Aldo Cassola and
William K. Robertson and
Engin Kirda and
Guevara Noubir
A Practical, Targeted, and Stealthy Attack
Against WPA Enterprise Authentication
Aldo Cassola
William Robertson
Engin Kirda
Guevara Noubir
Northeastern University
College of Computer and Information Science
{acassola,wkr,ek,noubir}@ccs.neu.edu
Abstract
Wireless networking technologies have fundamentally
changed the way we compute, allowing ubiquitous, any-
time, any-where access to information. At the same time,
wireless technologies come with the security cost that ad-
versaries may receive signals and engage in unauthorized
communication even when not physically close to a net-
work. Because of the utmost importance of wireless secu-
rity, many standards have been developed that are in wide
use to secure sensitive wireless networks; one such popular
standard is WPA Enterprise.
In this paper, we present a novel, highly practical, and
targeted variant of a wireless evil twin attack against WPA
Enterprise networks. We show signiﬁcant design deﬁcien-
cies in wireless management user interfaces for commodity
operating systems, and also highlight the practical impor-
tance of the weak binding between wireless network SSIDs
and authentication server certiﬁcates. We describe a proto-
type implementation of the attack, and discuss countermea-
sures that should be adopted. Our user experiments with
17 technically-sophisticated users show that the attack is
stealthy and effective in practice. None of the victims were
able to detect the attack.
1
Introduction
Only a decade ago, gaining unauthorized access to a lo-
cal network in an organization typically required physical
access to the wired network. Today, the situation has dra-
matically changed. Wireless networks are ubiquitous, and
allow users to have any-time, any-where access to informa-
tion. At the same time, this convenience comes at a cost
with respect to security: Wireless signals are not physically
conﬁned to the perimeter of an organization, but may be re-
ceived by adversaries from very long distances. Therefore,
although wireless networks have become an indispensable
technology, they serve to increase the attack surface of an
organization, and can potentially allow attackers to gain ac-
cess to sensitive information over the æther.
Since their popularization and wide deployment, wire-
less networks have had a long history of security vulner-
abilities. The initial effort to provide data conﬁdentiality
and client authentication – namely, Wired Equivalent Pri-
vacy (WEP) – suffered a widely publicized series of pro-
gressively more efﬁcient attacks that necessitated WEP’s
replacement by the WPA family of security protocols [6].
Today, WPA Enterprise is widely used to protect large
enterprise wireless networks against unauthorized access.
Trust in the security of WPA Enterprise stems from the
use of proven security protocols for authentication (e.g.,
SSL/TLS), and the centralization of client authentication
and authorization on well-protected authentication servers
(e.g., RADIUS). However, while the individual protocols
that comprise the WPA Enterprise security suite are well-
tested and widely regarded as being secure, the composi-
tion of different features, components, and protocols has re-
ceived less scrutiny.
In this paper, we present a novel, stealthy, and effective
variant of the evil twin attack [4, 22, 15] against WPA En-
terprise networks. The key insight behind our attack is that
the combination of cross-layer capabilities such as stealthy
jamming using software radios, the inadequacy of wireless
user interface mechanisms in popular commodity operat-
ing systems, and the insecure trust model used in wireless
authentication makes real-world end-to-end attacks against
wireless network authentication feasible. Our experiments
with 17 technically-sophisticated users show that the attack
is highly effective in practice and very difﬁcult – if not im-
possible – for victims to detect.
Our targeted attack consists of four main phases. In the
ﬁrst phase, the attacker uses a software-deﬁned radio to tar-
get the victim’s speciﬁc device, without impacting other
users of the network. To accomplish this, the attacker uses
targeted, stealthy reactive jamming techniques to deny ac-
cess to the legitimate wireless network the victim would like
to connect to. While recent work in the wireless community
has made signiﬁcant progress in developing mitigation tech-
niques against jamming [44, 52, 8, 45, 49, 39, 12, 29], most
of these techniques are still not part of wireless standards
or deployed systems. Through reactive jamming, the victim
is ﬁrst disassociated from the legitimate network, and her
probe requests are partially jammed to prevent legitimate
access points from receiving them. We then send spoofed
probe responses from a rogue wireless network. The com-
bination of high-gain antennas and software radios makes
such attacks possible from locations hundreds of meters dis-
tant from the targeted network.
In the second phase, the attacker takes advantage of pre-
dominantly unstudied and inadequate security mechanisms
in popular commodity operating systems for disambiguat-
ing similar wireless network SSIDs. For example, the at-
tacker can use character substitutions or invisible characters
to create visually similar SSIDs – e.g., “Enterprise”
vs. “Enterprise ” – to trick users into connecting to a
rogue network that is under the control of the attacker. This
phase is an extension of the evil twin attack, where an at-
tacker deploys a rogue access point that spoofs a legitimate
wireless network.
In the third phase, the attacker presents a legitimate-
appearing public key certiﬁcate, which can often be ob-
tained for a cost of less than 200 USD. Since the certiﬁcates
used in WPA Enterprise are not strongly bound to the net-
work SSID, the victim’s device that connects to the rogue
network setup by the attacker has no basis for enforcing
strict veriﬁcation of certiﬁcates in popular commodity op-
erating systems.
The fourth phase of the attack leverages the fact that
WPA Enterprise deployments rely on the MSCHAPv2 [53]
protocol for authentication, which has vulnerabilities that
have been well documented [41]. MSCHAPv2 was initially
designed for wired networks, and despite its use of outdated
DES encryption, design ﬂaws, and the availability of multi-
ple automated cracking tools [50, 11, 37], MSCHAPv2 con-
tinues to enjoy wide usage, with nearly every major operat-
ing system and wireless infrastructure device supporting it.
This can be partially explained by the fact that MSCHAPv2
is believed to be sufﬁciently secure when tunneled within an
SSL/TLS session. However, the lack of a veriﬁable chain
of trust from a CA to the network SSID allows an attacker
to impersonate a trusted wireless network to capture victim
authentication credential hashes.
In the ﬁnal part of the attack, the attacker recovers plain-
text authentication credentials by leveraging parallel pass-
word cracking techniques.
In summary, this paper makes the following contribu-
tions:
• We present a practical, end-to-end, stealthy, and tar-
geted evil twin attack against WPA Enterprise net-
2
works. The attack leverages novel, speciﬁc weak-
nesses in the human-computer interfaces of commod-
ity operating systems for managing wireless connec-
tions that have not heretofore been discussed in litera-
ture.
• We are the ﬁrst to demonstrate a signiﬁcant weakness
that exists in modern wireless authentication systems
today – namely, that authentication server certiﬁcates
are not strongly bound to network SSIDs. Using this
fact, an attacker can use selective jamming techniques
to trick unsuspecting users into connecting to a rogue
access point without receiving an invalid certiﬁcate
warning. Note that certiﬁcates are widely believed to
be the most effective form of protection against evil
twin attacks by practitioners [47].
• We describe a prototype implementation of the attack,
present experiments with real users that demonstrate
that the attack is feasible and effective in practice, an-
alyze its cost, and discuss countermeasures that should
be adopted.
The paper is structured as follows. First, we present rel-
evant background on WPA Enterprise in Section 2. The de-
scriptions of the basic attack and further optimizations are
given in Section 3. The prototype implementation of our
attack is described in Section 4. Section 5 evaluates the ef-
fectiveness and cost of the attack. Section 6 discusses possi-
ble countermeasures against our attack. Finally, we present
related work in Section 7 and brieﬂy conclude in Section 8.
2 WPA Enterprise Background
In this section, we discuss relevant background informa-
tion on WPA Enterprise. In particular, we focus on the WPA
Enterprise authentication procedure, as well as implemen-
tation behavior when no known networks are available or
when a new wireless network proﬁle is created at the client.
The reader is referred to the WPA Enterprise standard for
further details [26].
2.1 Devices and Authentication
The WPA Enterprise authentication procedure involves
several distinct devices: a client, an access point, and an
authentication server. The client is a device with a 802.11-
compliant network interface that requests access to the net-
work. To connect to a network, the client communicates
with an access point, which serves as a point of entry to
one or more wireless networks. The authentication server is
used to authenticate users of the wireless network, and typ-
ically runs a network authentication protocol such as RA-
DIUS.
Figure 2. Wireless network list for Mac OS
X. Again, there are two seemingly identical
entries for the SSID free-wiﬁ.
Windows (XP and above) Figure 1 shows the wireless
network selection list for Windows-based operating sys-
tems. Note that Windows displays network names with no
visual aid to distinguish similar SSIDs.
Instead, the sys-
tem shows seemingly identical networks as separate entries
in the list of available networks. For instance, in Figure 1,
neutrino is displayed twice.
When a Windows client receives an authentication server
certiﬁcate during the authentication phase, a summary of
the certiﬁcate’s ﬁelds appears for veriﬁcation. If the user
accepts the certiﬁcate, the corresponding CA certiﬁcate can
be used to verify the identity of the server for this network
under “Trusted Root Certiﬁcation Authorities.” The user
may also specify that the network should be authenticated
only when the certiﬁcate’s common name ﬁeld matches a
particular name. By default in Windows 7, the server name
ﬁeld is set to the value seen in the certiﬁcate, if accepted.
Apple Figure 2 shows the wireless network list for Mac
OS X. Like Windows-based systems, Mac OS X also shows
available SSIDs without visual aids. When creating a new
network proﬁle, the system selects most of the network pa-
rameters automatically – e.g., the use of PEAP. Once the
authentication server presents its certiﬁcate, the client will
present the user a summary of the certiﬁcate’s ﬁelds for in-
spection. Mac OS X provides a visual aid in the form of
quotation marks to delimit the SSID of the chosen network.
In contrast to Windows clients, however, it is unclear how
to restrict connections to a speciﬁc server name for a new
network proﬁle from the OS X GUI. Like Mac OS X, iOS
uses quotation marks to visually delimit network SSIDs in
the username and password dialog.
GNU/Linux Family GNU/Linux systems offer a variety
of WPA client conﬁguration interfaces, NetworkManager
and wpa gui being the most common. In both cases, the
new network conﬁguration dialogs are similar, and none
offers visual aids to distinguish similarly-named networks.
Figure 1. Wireless network list for Microsoft
Windows-based operating systems. Here,
there are two seemingly identical entries for
the SSID neutrino.
WPA Enterprise authentication proceeds in three distinct
phases: Discovery, Key Exchange, and Authentication.
We note that PEAP [33] and MSCHAPv2 [53] are the most
popular methods used to perform the Key Exchange and
Authentication phases. With PEAP, the client initiates a
TLS tunnel with the authentication server. During tunnel
establishment, the authentication server presents its certiﬁ-
cate, which ideally has been signed by a trusted certiﬁca-
tion authority (CA) that the client can verify and serves as
the means of authenticating the network to the client. Once
the TLS session has been established, MSCHAPv2 is then
used to authenticate the client. Even though MSCHAPv2
has known ﬂaws, the authentication procedure is commonly
thought to be secure since it is encapsulated by the TLS ses-
sion.
2.2 GUI Implementations
Network SSID lists on modern operating systems show
only printable characters, with no way for the user to distin-
guish between identiﬁers that merely look similar. In addi-
tion, WPA Enterprise support differs considerably between
platforms. Every client presents the user a different set of
options when creating a new wireless network proﬁle, some
ﬁelds may be set automatically depending on user choice,
and certiﬁcate management ranges from restrictive to per-
missive. We describe relevant behavior of common WPA
clients below.
3
We note that text-based conﬁguration tools allow checking
for the correct authentication server name, and to distin-
guish similar SSIDs by displaying them within quotation
marks. However, text-based conﬁguration remains an ad-
vanced task out of reach for the common user.
3 Targeted, Stealthy Evil Twin Attacks
In this section, we sketch an overview of our advanced,
stealthy evil twin attack. The goal is to subvert the WPA
Enterprise authentication described in Section 2, such that
an attacker tricks a victim client into unwittingly authenti-
cating to a rogue network with their credentials for a real,
trusted network. The capture of these credentials allows
the attacker to then authenticate to the trusted network with
the privileges of the victim client. We note that this attack,
when correctly performed, is completely transparent to the
victim – that is, the victim will be entirely unaware that their
network authentication credentials have been leaked.
In the following, we ﬁrst detail the threat model we as-
sume for the attack. Then, we present an exposition of the
details of the attack, including several variations that in-
crease both its effectiveness and stealthiness.
3.1 Threat Model
The attack we present in this work makes a number of re-
alistic assumptions regarding the conﬁguration of the wire-
less network and victim clients, as well as the capabilities
of the attacker. We enumerate these assumptions here.
1. The wireless network uses WPA Enterprise for authen-
tication, and uses MSCHAPv2 to authenticate clients
over RADIUS. This is a common conﬁguration; for in-
stance, it is the default on recent versions of Windows.
2. The attacker can successfully communicate with a
target wireless network, and transmit with sufﬁcient
power to successfully jam legitimate clients of the net-
work. Section 5 shows the distances satisfying these
requirements.
3. The attacker has sufﬁcient resources to mount the at-
tack. We demonstrate in Section 5 that the attack is
feasible on common, high-end servers.
4. The victim clients run one of several commodity op-
erating systems, including: Windows XP or later; Ap-
ple’s Mac OS X or iOS; or, GNU/Linux with common
GUI-based conﬁguration tools.
3.2 Attack Description
In the following description of the targeted evil twin at-
tack, let C be a legitimate client of the victim network N
Figure 3. In the attack, an attacker leverages
reactive jamming techniques to coerce a vic-
tim client to authenticate to a rogue network
that appears identical to a target wireless net-
work. A hash of the victim’s authentication
credentials is then captured. The hash is
cracked using a high-performance password
cracker (not shown). Once the plaintext pass-
word has been recovered, the attacker uses it
to authenticate to the target network with the
privileges of the victim client.
that uses an access point APN advertising SSID SN . Let
RN be the victim network’s authentication server that has
been set up to perform PEAP with MSCHAPv2 for authen-
tication with a certiﬁcate signed by certiﬁcation authority
CAN , and can access the user database for N. In this sce-
nario, C has a stored proﬁle for N that includes its SSID,
authentication credentials, authentication method, certiﬁca-
tion authority, and certiﬁcate ﬁelds to verify. The attacker
A sets up an access point APA in range of the client C, us-
ing the same channel as APN . APA uses an authentication
server RA with a certiﬁcate similar to RN .
The attack is illustrated in Figure 3, and proceeds as fol-
lows.
1. APA sends Disassociation frames to C, forcing C
to reassociate. These frames can be spoofed easily to