# Title: A Practical, Targeted, and Stealthy Attack Against WPA Enterprise Authentication

## Authors:
- Aldo Cassola
- William K. Robertson
- Engin Kirda
- Guevara Noubir

### Abstract
Wireless networking technologies have revolutionized the way we access information, providing ubiquitous, anytime, anywhere connectivity. However, this convenience comes with significant security challenges, as adversaries can intercept signals and engage in unauthorized communication even from a distance. To address these concerns, various security standards, such as WPA Enterprise, have been developed to secure sensitive wireless networks.

In this paper, we present a novel, highly practical, and targeted variant of a wireless evil twin attack against WPA Enterprise networks. We highlight significant design deficiencies in the wireless management user interfaces of popular operating systems and the weak binding between wireless network SSIDs and authentication server certificates. We describe a prototype implementation of the attack and discuss potential countermeasures. Our experiments with 17 technically-sophisticated users demonstrate that the attack is both stealthy and effective, with none of the victims able to detect it.

## 1. Introduction
Just a decade ago, gaining unauthorized access to a local network typically required physical access to the wired infrastructure. Today, the situation has dramatically changed. Wireless networks are ubiquitous, offering users anytime, anywhere access to information. This convenience, however, comes at a cost: wireless signals can be intercepted by adversaries from long distances, increasing the attack surface of an organization.

Since their widespread adoption, wireless networks have faced numerous security vulnerabilities. The initial effort to provide data confidentiality and client authentication, known as Wired Equivalent Privacy (WEP), was plagued by a series of increasingly efficient attacks, leading to its replacement by the WPA family of security protocols. WPA Enterprise is now widely used to protect large enterprise wireless networks, with trust in its security stemming from the use of proven authentication protocols (e.g., SSL/TLS) and the centralization of client authentication on well-protected servers (e.g., RADIUS). However, while individual components of WPA Enterprise are well-tested, the overall composition of features and protocols has received less scrutiny.

In this paper, we present a novel, stealthy, and effective variant of the evil twin attack against WPA Enterprise networks. The key insight behind our attack is that the combination of cross-layer capabilities, such as stealthy jamming using software radios, inadequate wireless user interface mechanisms in popular operating systems, and the insecure trust model in wireless authentication, makes real-world end-to-end attacks feasible. Our experiments with 17 technically-sophisticated users show that the attack is highly effective and very difficult for victims to detect.

Our targeted attack consists of four main phases. In the first phase, the attacker uses a software-defined radio to target the victim's specific device without impacting other network users. The attacker employs targeted, stealthy reactive jamming techniques to deny access to the legitimate wireless network. While recent work has made significant progress in developing mitigation techniques against jamming, most of these techniques are not yet part of wireless standards or deployed systems. Through reactive jamming, the victim is disassociated from the legitimate network, and their probe requests are partially jammed to prevent legitimate access points from receiving them. We then send spoofed probe responses from a rogue wireless network. The combination of high-gain antennas and software radios makes such attacks possible from locations hundreds of meters distant from the targeted network.

In the second phase, the attacker exploits inadequately studied and poorly designed security mechanisms in popular operating systems for disambiguating similar wireless network SSIDs. For example, the attacker can use character substitutions or invisible characters to create visually similar SSIDs (e.g., "Enterprise" vs. "Enterprise ") to trick users into connecting to a rogue network under the attacker's control. This phase extends the traditional evil twin attack, where an attacker deploys a rogue access point that spoofs a legitimate wireless network.

In the third phase, the attacker presents a seemingly legitimate public key certificate, which can often be obtained for less than $200. Since the certificates used in WPA Enterprise are not strongly bound to the network SSID, the victim's device, when connecting to the rogue network, has no basis for enforcing strict verification of certificates in popular operating systems.

The fourth phase of the attack leverages the fact that WPA Enterprise deployments rely on the MSCHAPv2 protocol for authentication, which has well-documented vulnerabilities. Despite its use of outdated DES encryption and the availability of multiple automated cracking tools, MSCHAPv2 continues to be widely used. This can be partially explained by the belief that MSCHAPv2 is sufficiently secure when tunneled within an SSL/TLS session. However, the lack of a verifiable chain of trust from a CA to the network SSID allows an attacker to impersonate a trusted wireless network and capture victim authentication credential hashes.

In the final part of the attack, the attacker recovers plaintext authentication credentials by leveraging parallel password cracking techniques.

In summary, this paper makes the following contributions:
- We present a practical, end-to-end, stealthy, and targeted evil twin attack against WPA Enterprise networks, leveraging specific weaknesses in the human-computer interfaces of commodity operating systems.
- We are the first to demonstrate a significant weakness in modern wireless authentication systems: authentication server certificates are not strongly bound to network SSIDs. Using this fact, an attacker can use selective jamming techniques to trick unsuspecting users into connecting to a rogue access point without receiving an invalid certificate warning.
- We describe a prototype implementation of the attack, present experiments with real users demonstrating its feasibility and effectiveness, analyze its cost, and discuss countermeasures that should be adopted.

## 2. WPA Enterprise Background
In this section, we discuss relevant background information on WPA Enterprise, focusing on the authentication procedure and implementation behavior when no known networks are available or when a new wireless network profile is created at the client. For further details, the reader is referred to the WPA Enterprise standard [26].

### 2.1 Devices and Authentication
The WPA Enterprise authentication procedure involves several distinct devices: a client, an access point, and an authentication server. The client is a device with an 802.11-compliant network interface that requests access to the network. To connect, the client communicates with an access point, which serves as the entry point to one or more wireless networks. The authentication server, typically running a network authentication protocol like RADIUS, authenticates users of the wireless network.

### 2.2 GUI Implementations
Network SSID lists on modern operating systems show only printable characters, with no way for the user to distinguish between identifiers that look similar. Additionally, WPA Enterprise support varies significantly between platforms. Each client presents different options when creating a new wireless network profile, and certificate management ranges from restrictive to permissive. We describe the relevant behavior of common WPA clients below.

- **Windows (XP and above)**: Figure 1 shows the wireless network selection list for Windows-based operating systems. Windows displays network names without visual aids to distinguish similar SSIDs, showing seemingly identical networks as separate entries. When a Windows client receives an authentication server certificate, a summary of the certificate’s fields appears for verification. If the user accepts the certificate, the corresponding CA certificate can be used to verify the server's identity. The user may also specify that the network should be authenticated only when the certificate’s common name field matches a particular name. By default in Windows 7, the server name field is set to the value seen in the certificate if accepted.

- **Apple (Mac OS X and iOS)**: Figure 2 shows the wireless network list for Mac OS X. Like Windows, Mac OS X also shows available SSIDs without visual aids. When creating a new network profile, the system selects most network parameters automatically, such as the use of PEAP. Once the authentication server presents its certificate, the client will present the user with a summary of the certificate’s fields for inspection. Mac OS X provides a visual aid in the form of quotation marks to delimit the SSID of the chosen network. However, it is unclear how to restrict connections to a specific server name for a new network profile from the OS X GUI. iOS also uses quotation marks to visually delimit network SSIDs in the username and password dialog.

- **GNU/Linux Family**: GNU/Linux systems offer a variety of WPA client configuration interfaces, with NetworkManager and wpa_gui being the most common. Both cases present similar new network configuration dialogs, and none offers visual aids to distinguish similarly-named networks.

WPA Enterprise authentication proceeds in three distinct phases: Discovery, Key Exchange, and Authentication. PEAP and MSCHAPv2 are the most popular methods used to perform the Key Exchange and Authentication phases. With PEAP, the client initiates a TLS tunnel with the authentication server. During tunnel establishment, the authentication server presents its certificate, which ideally has been signed by a trusted certification authority (CA) that the client can verify. Once the TLS session is established, MSCHAPv2 is used to authenticate the client. Even though MSCHAPv2 has known flaws, the authentication procedure is commonly thought to be secure since it is encapsulated by the TLS session.

## 3. Targeted, Stealthy Evil Twin Attacks
In this section, we provide an overview of our advanced, stealthy evil twin attack. The goal is to subvert the WPA Enterprise authentication described in Section 2, tricking a victim client into unwittingly authenticating to a rogue network with their credentials for a real, trusted network. The capture of these credentials allows the attacker to then authenticate to the trusted network with the privileges of the victim client. This attack, when correctly performed, is completely transparent to the victim, who will be unaware that their network authentication credentials have been leaked.

### 3.1 Threat Model
The attack we present makes several realistic assumptions regarding the configuration of the wireless network and victim clients, as well as the capabilities of the attacker:

1. The wireless network uses WPA Enterprise for authentication and MSCHAPv2 to authenticate clients over RADIUS. This is a common configuration, especially in recent versions of Windows.
2. The attacker can successfully communicate with a target wireless network and transmit with sufficient power to jam legitimate clients. Section 5 shows the distances satisfying these requirements.
3. The attacker has sufficient resources to mount the attack. Section 5 demonstrates that the attack is feasible on common, high-end servers.
4. The victim clients run one of several commodity operating systems, including Windows XP or later, Apple’s Mac OS X or iOS, or GNU/Linux with common GUI-based configuration tools.

### 3.2 Attack Description
In the following description of the targeted evil twin attack, let C be a legitimate client of the victim network N, which uses an access point APN advertising SSID SN. Let RN be the victim network’s authentication server, set up to perform PEAP with MSCHAPv2 for authentication with a certificate signed by certification authority CAN, and can access the user database for N. In this scenario, C has a stored profile for N that includes its SSID, authentication credentials, authentication method, certification authority, and certificate fields to verify. The attacker A sets up an access point APA in range of the client C, using the same channel as APN. APA uses an authentication server RA with a certificate similar to RN.

The attack is illustrated in Figure 3 and proceeds as follows:

1. **Disassociation**: APA sends Disassociation frames to C, forcing C to reassociate. These frames can be easily spoofed to appear as if they are coming from APN.
2. **Jamming and Spoofing**: The attacker uses targeted, stealthy reactive jamming techniques to deny access to the legitimate wireless network. The victim's probe requests are partially jammed to prevent legitimate access points from receiving them. We then send spoofed probe responses from a rogue wireless network.
3. **SSID Deception**: The attacker exploits inadequately studied and poorly designed security mechanisms in popular operating systems to create visually similar SSIDs (e.g., "Enterprise" vs. "Enterprise "). This tricks users into connecting to a rogue network under the attacker's control.
4. **Certificate Presentation**: The attacker presents a seemingly legitimate public key certificate, which can often be obtained for less than $200. Since the certificates used in WPA Enterprise are not strongly bound to the network SSID, the victim's device, when connecting to the rogue network, has no basis for enforcing strict verification of certificates in popular operating systems.
5. **Credential Capture and Cracking**: The attacker leverages the vulnerabilities in MSCHAPv2 to capture the victim's authentication credential hashes. The final step involves recovering plaintext authentication credentials by leveraging parallel password cracking techniques.

## 4. Prototype Implementation
We describe a prototype implementation of the attack, including the technical details and the tools used. The implementation demonstrates the feasibility of the attack and provides a foundation for further research and development.

## 5. Evaluation
This section evaluates the effectiveness and cost of the attack. We present experimental results with real users, demonstrating that the attack is feasible and effective in practice. We also analyze the cost of the attack and discuss the implications for organizations and individuals.

## 6. Countermeasures
We discuss possible countermeasures against our attack, including improvements in wireless management user interfaces, stronger binding between network SSIDs and authentication server certificates, and enhanced detection and mitigation techniques for jamming and rogue access points.

## 7. Related Work
We review related work in the area of wireless security, focusing on previous studies of evil twin attacks and other wireless security vulnerabilities. We highlight the unique aspects of our attack and its contributions to the field.

## 8. Conclusion
In conclusion, we have presented a practical, targeted, and stealthy attack against WPA Enterprise authentication. Our attack leverages specific weaknesses in the human-computer interfaces of commodity operating systems and the insecure trust model in wireless authentication. We have demonstrated the feasibility and effectiveness of the attack through experiments with real users and discussed potential countermeasures. Future work should focus on addressing these vulnerabilities and improving the overall security of wireless networks.