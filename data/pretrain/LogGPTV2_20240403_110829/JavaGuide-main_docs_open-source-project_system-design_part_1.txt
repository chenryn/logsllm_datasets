---
title: 优质 Java 开源系统设计项目
category: 开源项目
icon: "xitongsheji"
---

## 基础框架

### Web 框架
- **[Spring Boot](https://github.com/spring-projects/spring-boot)**：Spring Boot 简化了基于 Spring 的应用程序的创建，内置 web 服务器使项目可以像普通 Java 程序一样运行。它减少了配置需求，使得开发更加高效。
- **[SOFABoot](https://github.com/sofastack/sofa-boot)**：基于 Spring Boot，增加了 Readiness Check、类隔离和日志空间隔离等功能。配套提供 SOFARPC（RPC 框架）、SOFABolt（基于 Netty 的远程通信框架）和 SOFARegistry（注册中心）。详情请参考 [SOFAStack](https://github.com/sofastack)。
- **[Javalin](https://github.com/tipsy/javalin)**：轻量级 Web 框架，支持 Java 和 Kotlin，被微软、红帽、Uber 等公司使用。
- **[Play Framework](https://github.com/playframework/playframework)**：面向 Java 和 Scala 的高性能 Web 框架。
- **[Blade](https://github.com/lets-blade/blade)**：追求简约高效的 Web 框架，基于 Java8 + Netty4。

### 微服务/云原生
- **[Armeria](https://github.com/line/armeria)**：灵活的微服务框架，支持 gRPC、Thrift、Kotlin、Retrofit、Reactive Streams、Spring Boot 和 Dropwizard。
- **[Quarkus](https://github.com/quarkusio/quarkus)**：专为编写云原生和容器优先的 Java 应用程序而设计的框架。

### API 文档
- **[Swagger](https://swagger.io/)**：主流 RESTful 风格的 API 文档工具，提供了一套工具和规范，便于创建和维护可读性强、易于使用的 API 文档。
- **[Knife4j](https://doc.xiaominfo.com/)**：集成了 Swagger2 和 OpenAPI3 的增强解决方案。

### Bean 映射
- **[MapStruct](https://github.com/mapstruct/mapstruct)**（推荐）：符合 JSR269 规范的 Java 注解处理器，用于生成类型安全且高性能的 Bean 映射代码。它在编译阶段生成 get/set 代码，避免了反射带来的性能损失。
- **[JMapper](https://github.com/jmapper-framework/jmapper-core)**：高性能且易于使用的 Bean 映射框架。

### 其他
- **[Guice](https://github.com/google/guice)**：Google 开源的轻量级依赖注入框架，适用于仅需依赖注入而不需 AOP 等功能的场景。
- **[Spring Batch](https://github.com/spring-projects/spring-batch)**：轻量但功能全面的批处理框架，主要用于从数据库、文件或队列中读取大量记录。注意，Spring Batch 不是调度框架，建议与 Quartz、XXL-JOB 或 Elastic-Job 等调度框架结合使用。

## 认证授权

### 权限认证
- **[Sa-Token](https://github.com/dromara/sa-token)**：轻量级 Java 权限认证框架，支持认证授权、单点登录、踢人下线、自动续签等功能。相比 Spring Security 和 Shiro，Sa-Token 提供更多开箱即用的功能，使用更简单。
- **[Spring Security](https://github.com/spring-projects/spring-security)**：Spring 官方安全框架，广泛应用于身份验证、授权、加密和会话管理。
- **[Shiro](https://github.com/apache/shiro)**：Java 安全框架，功能类似于 Spring Security，但使用更为简单。

### 第三方登录
- **[WxJava](https://github.com/Wechat-Group/WxJava)**：微信开发 Java SDK，支持微信支付、开放平台、小程序、企业微信/企业号和公众号等后端开发。
- **[JustAuth](https://github.com/justauth/JustAuth)**：小巧且功能齐全的第三方登录开源组件，集成了 GitHub、Gitee、支付宝、新浪微博、微信、Google、Facebook、Twitter、StackOverflow 等数十家第三方平台。

### 单点登录（SSO）
- **[CAS](https://github.com/apereo/cas)**：企业多语言网络单点登录解决方案。
- **[MaxKey](https://gitee.com/dromara/MaxKey)**：提供安全、标准和开放的用户身份管理 (IDM)、身份认证 (AM)、单点登录 (SSO)、RBAC 权限管理和资源管理等功能。
- **[Keycloak](https://github.com/keycloak/keycloak)**：免费开源的身份认证和访问管理系统，支持高度可配置的单点登录功能。

## 网络通讯
- **[Netty](https://github.com/netty/netty)**：基于 NIO 的客户端-服务器框架，简化了网络应用程序的开发。
- **[Retrofit](https://github.com/square/retrofit)**：适用于 Android 和 Java 的类型安全 HTTP 客户端，使用 OkHttp 库进行 HTTP 请求。
- **[Forest](https://gitee.com/dromara/forest)**：轻量级 HTTP 客户端 API 框架，简化了 HTTP/HTTPS 请求的发送。它是 Retrofit 和 Feign 之外的另一个选择。
- **[netty-websocket-spring-boot-starter](https://github.com/YeautyYE/netty-websocket-spring-boot-starter)**：帮助你在 Spring Boot 中使用 Netty 开发 WebSocket 服务器，并提供简单的注解开发方式。
- **[SMS4J](https://github.com/dromara/SMS4J)**：短信聚合框架，简化多个短信 SDK 的接入流程。

## 数据库

### 数据库连接池
- **[Druid](https://github.com/alibaba/druid)**：阿里巴巴出品，专注于监控的数据库连接池。
- **[HikariCP](https://github.com/brettwooldridge/HikariCP)**：高性能 JDBC 连接池，Spring Boot 2.0 默认使用 HikariCP。

### 数据库框架
- **[MyBatis-Plus](https://github.com/baomidou/mybatis-plus)**：MyBatis 增强工具，在 MyBatis 基础上提供增强功能，简化开发。
- **[MyBatis-Flex](https://gitee.com/mybatis-flex/mybatis-flex)**：优雅的 MyBatis 增强框架，无第三方依赖，支持 CRUD、分页查询、多表查询、批量操作。
- **[Redisson](https://github.com/redisson/redisson)**：基于 Redis 的 Java 内存数据网格，支持多种对象和服务，如 Set、SortedSet、Map、List、Queue、Deque 等，并提供了多种分布式锁的实现。更多信息请参阅 [《Redisson 项目介绍》](https://github.com/redisson/redisson/wiki/Redisson%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D)。

### 数据同步
- **[Canal](https://github.com/alibaba/canal)**：基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费。
- **[DataX](https://github.com/alibaba/DataX)**：阿里巴巴集团广泛使用的离线数据同步工具/平台，支持各种异构数据源之间的高效数据同步。相关项目包括 [DataX-Web](https://github.com/WeiYe-Jing/datax-web)，提供可视化界面以一键生成数据同步任务。
- **[Flinkx](https://github.com/DTStack/flinkx)**：基于 Flink 的分布式数据同步工具。

### 时序数据库
- **[IoTDB](https://github.com/apache/iotdb)**：国产时序数据库，支持数据收集、存储和分析，与 Hadoop、Spark 和 Grafana 等无缝集成，适用于工业 IoT 领域。
- **[KairosDB](https://github.com/kairosdb/kairosdb)**：基于 Cassandra 的快速分布式可扩展时间序列数据库。

## 搜索引擎
- **[Elasticsearch](https://github.com/elastic/elasticsearch)**（推荐）：开源、分布式、RESTful 搜索引擎。
- **[Meilisearch](https://github.com/meilisearch/meilisearch)**：强大、快速、开源、易用且支持中文搜索的搜索引擎。
- **[Solr](https://lucene.apache.org/solr/)**：Apache Lucene 项目的开源企业搜索平台。
- **[Easy-ES](https://gitee.com/dromara/easy-es)**：傻瓜级 Elasticsearch 搜索引擎 ORM 框架。

## 测试

### 测试框架
- **[JUnit](http://junit.org/)**：Java 测试框架。
- **[Mockito](https://github.com/mockito/mockito)**：模拟测试框架，用于编写简洁优雅的单元测试。
- **[PowerMock](https://github.com/powermock/powermock)**：扩展 Mockito 和 EasyMock 功能，支持 mock 私有方法、final 方法及静态方法等。
- **[WireMock](https://github.com/tomakehurst/wiremock)**：模拟 HTTP 服务的工具。
- **[Testcontainers](https://github.com/testcontainers/testcontainers-java)**：支持 JUnit 的测试工具库，提供轻量级的一次性常见数据库测试支持和其他 Docker 容器实例的支持。

### 测试平台
- **[MeterSphere](https://github.com/metersphere/metersphere)**：一站式开源持续测试平台，涵盖测试跟踪、接口测试、性能测试、团队协作等功能，兼容 JMeter、Postman、Swagger 等。
- **[Apifox](https://www.apifox.cn/)**：API 文档、调试、Mock 和自动化测试工具。

### 相关阅读
- [The Practical Test Pyramid - Martin Fowler](https://martinfowler.com/articles/practical-test-pyramid.html)
- [浅谈测试之 PowerMock](https://juejin.im/post/6844903982058618894)

希望这些信息对你有所帮助！