### Specification and Functionality of PML

PML, or Printer Management Language, is defined as "an object-oriented request-reply printer management protocol" [47]. This protocol is embedded within PJL (Printer Job Language) and can be utilized to read and set SNMP (Simple Network Management Protocol) values on a printer. This capability is particularly useful in scenarios where a firewall blocks access to standard SNMP services (UDP port 161), but the attacker still has the ability to print. The use of PML within a print job is illustrated in Listing 3.

**Listing 3: PML Request to Read Device Description**

```plaintext
@PJL DMINFO ASCIIHEX="6870204c617365724a65742034323530"
get
OID 0302010301
```

This example demonstrates how PML can be used to invoke SNMP commands embedded in PJL. In this work, PML is employed to reset the printer to its factory defaults.

### Page Description Languages (PDLs)

A Page Description Language (PDL) specifies the appearance of a document. However, some PDLs offer limited job control, making a clear distinction between page description and printer/job control language challenging. The primary function of a printer driver is to translate the file to be printed into a PDL that the printer model understands.

There are various proprietary PDLs, including:
- Kyocera’s PRESCRIBE
- Samsung Printer Language (SPL)
- Xerox Escape Sequence (XES)
- Canon Printing System Language (CaPSL)
- Ricoh Refined Printing Command Stream (RPCS)
- Epson Standard Code for Printers (ESC/P), commonly used in dot matrix printers
- Hewlett-Packard Graphics Language (HP-GL) and HP-GL/2, designed for plotters

Newer printers often support direct printing in Portable Document Format (PDF) and XML Paper Specification (XPS). The most common standard PDLs are:
- **Printer Command Language (PCL)**: Difficult to exploit from a security perspective due to its limited capabilities.
- **PostScript**: A stack-based, Turing-complete programming language with about 400 operators for arithmetic, stack, and graphic manipulation, and various data types such as arrays and dictionaries. Access to a PostScript interpreter can be classified as code execution because any algorithmic function can theoretically be implemented in PostScript.

**Listing 4: Example PostScript Document**

```plaintext
%! (Hello world) print
```

In this work, PostScript is used to carry out various attacks, including Denial-of-Service (DoS) caused by infinite loops, print job manipulation and retention, and access to the printer’s file system.

### Methodology

#### Acquiring the Printers

Test printer devices were collected through donations from various university chairs and facilities. The goal was to assemble a pool of printers containing at least one model from each of the top ten manufacturers. Where available, the latest firmware was installed before testing to ensure that known vulnerabilities had been patched. The assembled devices were not brand new, nor did they include models from all top vendors, but they represented a good mix of printers and multifunction printers (MFPs) typically found in a university or office environment.

#### Analyzing Approach

We surveyed the security-sensitive features in the PostScript and PJL standards, along with their proprietary extensions. We created a list of potential attacks and classified them accordingly. Our focus was on DoS attacks, bypassing protection mechanisms, and print job manipulation, with a particular interest in job retention and access to the file system, which are legitimate features of both languages.

To facilitate the analysis, we developed a Python 2 application called PRET, which provides semi-automated tests. Each attack was evaluated to examine its impact, such as whether stored print jobs could be read by an attacker.

#### Deployment Channels

For detected weaknesses, we evaluated the attacker models sufficient to carry out the attacks. We researched the channels available to deploy malicious print jobs, including direct or network access to the device, and extended known cross-site printing techniques.

### Attacker Model

Based on the existing deployment channels, we provide an attacker model reflecting the threat models extracted during our research.

- **Physical Access (AMphy)**: The strongest attacker with physical access to the printer for a limited time. Capabilities include:
  - Plugging in external storage media like memory cards or USB sticks.
  - Temporarily connecting to the printer via USB or parallel cable.
  - Changing control panel settings and pressing key combinations.

- **Network Access (AMnet)**: An active network participant who can connect to the printer via a TCP/IP network. Capabilities include:
  - Accessing all network services offered by the device (e.g., web, SMB, SNMP, LPD, IPP, or raw port 9100 printing).
  - Establishing various connections over a longer period.

- **Web Attacker (AMweb)**: The weakest attacker model requiring fewer resources. This model uses cross-site printing techniques to execute attacks even outside the network where the printer is located. The only requirement is that the web attacker controls the content of a website and can lure a victim to visit it.

### Attacks

#### Denial-of-Service (DoS)

The goal of a DoS attack is to keep the printer busy by processing malicious files, disable printing functionality, or cause long-term storage damage. It is applicable in all attacker models.

- **Document Processing**: Page description languages allowing infinite loops or complex calculations can be abused to keep the printer’s Raster Image Processor (RIP) busy. Examples include PostScript programs or complex HP-GL calculations.
- **Physical Damage**: Long-term settings for printers are stored in NVRAM, which has a limited lifetime. Repeatedly changing these settings can lead to physical destruction of the NVRAM.

**Table 1: Applicability and Examples of DoS Attacks**

| Attacker Model | Application |
|----------------|-------------|
| AMphy          | The attacker can sneak into the copy room and disable printing functionality via USB. |
| AMnet          | The attacker can send malicious print jobs via port 9100 and physically destroy the device’s NVRAM. |
| AMweb          | The attacker can cause an endless loop by cross-site printing a malicious PostScript document, making intranet printers unavailable. |

#### Protection Bypass

The idea of this attack is to circumvent protection mechanisms. Access to printers can be restricted based on different policies, but these can be bypassed if the device is reset to factory defaults or if backdoors are deployed.

- **Factory Defaults**: Resetting a device to factory defaults overwrites protection mechanisms like user-set passwords. This can be done via special key combinations, SNMP, PML, and PostScript commands.
- **Backdoors**: Several CVEs describe backdoors in printers, such as the Kyocera 3830 printer and Samsung (and some DELL) printers, which allowed remote attackers to execute actions with administrator privileges using hardcoded SNMP commands.

**Table 2: Applicability and Examples of Protection Bypass Attacks**

| Attacker Model | Application |
|----------------|-------------|
| AMphy          | An attacker without a valid PIN can press certain control panel keys to restore factory defaults. |
| AMnet          | The attacker can restore factory defaults via SNMP and bypass the embedded web server's password. |
| AMweb          | The attacker can send PML commands to disable protection mechanisms using cross-site printing. |

This structured approach ensures clarity, coherence, and professionalism in the presentation of the information.