title:Beauty and the Beast: Diverting Modern Web Browsers to Build Unique
Browser Fingerprints
author:Pierre Laperdrix and
Walter Rudametkin and
Benoit Baudry
2016 IEEE Symposium on Security and Privacy
2016 IEEE Symposium on Security and Privacy
Beauty and the Beast: Diverting modern web
browsers to build unique browser ﬁngerprints
Pierre Laperdrix
INSA-Rennes & INRIA
Rennes, France
Walter Rudametkin
University of Lille & INRIA
Lille, France
PI:EMAIL
PI:EMAIL
Benoit Baudry
INRIA
Rennes, France
PI:EMAIL
Abstract—Worldwide, the number of people and the time spent
browsing the web keeps increasing. Accordingly, the technologies
to enrich the user experience are evolving at an amazing pace.
Many of these evolutions provide for a more interactive web (e.g.,
boom of JavaScript libraries, weekly innovations in HTML5), a
more available web (e.g., explosion of mobile devices), a more
secure web (e.g., Flash is disappearing, NPAPI plugins are being
deprecated), and a more private web (e.g., increased legislation
against cookies, huge success of extensions such as Ghostery and
AdBlock).
Nevertheless, modern browser technologies, which provide the
beauty and power of the web, also provide a darker side, a rich
ecosystem of exploitable data that can be used to build unique
browser ﬁngerprints.
Our work explores the validity of browser ﬁngerprinting in
today’s environment. Over the past year, we have collected
118,934 ﬁngerprints composed of 17 attributes gathered thanks
to the most recent web technologies. We show that innovations
in HTML5 provide access to highly discriminating attributes,
notably with the use of the Canvas API which relies on multiple
layers of the user’s system. In addition, we show that browser
ﬁngerprinting is as effective on mobile devices as it is on desktops
and laptops, albeit for radically different reasons due to their
more constrained hardware and software environments. We also
evaluate how browser ﬁngerprinting could stop being a threat
to user privacy if some technological evolutions continue (e.g.,
disappearance of plugins) or are embraced by browser vendors
(e.g., standard HTTP headers).
Index Terms—browser ﬁngerprinting; privacy; software diver-
sity
I. INTRODUCTION
The world wide web has revolutionized communication in
just a few decades. The number of users and the time spent on
the web is constantly growing. Accordingly, the technologies
to enrich the user experience are evolving at an amazing
pace. Each technology has its purpose. Modern Javascript
libraries allow creating ever more dynamic and interactive web
applications. Users are bringing the web with them, wherever
they go, by means of mobile devices such as cellphones and
tablets. Browser and protocol speciﬁcations, such as HTML5,
are redeﬁning the limits of what web applications can do. The
browsers themselves are rapidly changing and have become
competitive testing grounds for numerous new technologies.
Surprisingly, what were once ubiquitous technologies, such
as the Flash, Silverlight, QuickTime, and Java plugins, are
quickly becoming relics of the past. At
the same time,
2375-1207/16 $31.00 © 2016 IEEE
© 2016, Pierre Laperdrix. Under license to IEEE.
DOI 10.1109/SP.2016.57
DOI 10.1109/SP.2016.57
878
878
concerned web user’s are becoming more aware of certain
practices that jeopardize their privacy and comfort, as can be
seen by the immense popularity of browser extensions like
AdBlock, Ghostery, Disconnect and many others.
Browsers are our gateway to the web. And to provide rich,
satisfying and beautiful services, websites require knowledge
about the browser and its environment. Through the differ-
ent APIs and technologies that have been created, modern
browsers freely provide websites with detailed information
regarding the hardware and software conﬁguration, allowing
websites to better exploit the user’s resources. Well behaving
websites only ask for what is needed to provide their beautiful
services, but the beast is hiding in the bushes, small differences
between users’ systems can be exploited by attackers by asking
for as much information as possible.
Browser ﬁngerprinting consists in collecting data regarding
the conﬁguration of a user’s browser and system when this user
visits a website. This process can reveal a surprising amount of
information about a user’s software and hardware environment,
and can ultimately be used to construct a unique identiﬁer,
called a browser ﬁngerprint. The privacy implications are
important because these ﬁngerprints can then be used to
track users. This threat to privacy is extremely serious as
assessed by the recent studies of Nikiforakis et al. [1] or
of Acar et al. [2] that show the wide adoption of browser
ﬁngerprinting. Meanwhile, large companies such as Google
implicitly announce its adoption (e.g., Google’s privacy policy
update of June 2015 indicates that they use “technologies to
identify your browser or device” [3], which can be interpreted
as the inclusion of browser ﬁngerprinting in their identiﬁcation
technologies).
Our work provides an in-depth analysis of the extent to
which today’s web provides an effective means to uniquely
identify users through browser ﬁngerprinting. This analysis
relies on more than 118,000 ﬁngerprints, which we collected
through the AmIUnique.org website. The ﬁngerprints are rich
and include the values of 17 attributes. We access some of
these attributes thanks to the most recent web technologies,
such as, the HTML5 canvas element (as initially suggested
by Mowery and colleagues [4]), as well as through the
WebGL API. These ﬁngerprints reveal detailed information
about a browser and its software and hardware environment.
We show that innovations in HTML5 provide access to highly
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:14:16 UTC from IEEE Xplore.  Restrictions apply. 
discriminating data. In addition, we provide the ﬁrst extensive
study about browser ﬁngerprinting on mobile devices, which
are quickly becoming the main platform for browsing the
web [5]. Through empirical evidence, we show that browser
ﬁngerprinting is effective on mobile devices despite having
software environments that are much more constrained than
on desktops and laptops. In fact, the discriminating attributes
for mobile devices differ greatly from their desktop and laptop
counterparts.
that
is most
Our empirical observations indicate that, while recent web
technologies enrich the user experience, they also provide
access to a wide range of information that are easily combined
into a ﬁngerprint
likely unique. The tension
between the comfort of web browsing and the will to remain
anonymous is currently clearly in favor of comfort, to the detri-
ment of privacy. Yet, the disappearance of severely discrim-
inating attributes on desktops (e.g. obtained through Flash),
and the absence of such attributes on mobile devices, allows
us to believe it is possible to improve privacy and anonymity
on the web while still retaining a modern and comfortable web
experience. We speculate on possible technological evolutions
in web browsers and we calculate their impact on browser
ﬁngerprinting. Our scenarios range from the deﬁnitive death
of Flash (49% of the visitors on AmIUnique.org had Flash
disabled),
.
We show that minor changes in web technologies would
have a major effect on the identiﬁcation capacity of browser
ﬁngerprinting.
to the premature disappearance of JavaScript
Our key contributions are:
• We provide a 17-attribute ﬁngerprinting script that uses
modern web technologies.
• We perform the ﬁrst large-scale study of Canvas ﬁnger-
printing by following a test reported by Acar et al. [6]
along with other JavaScript attributes. We show that
canvas ﬁngerprinting is one of the most discriminating
attributes.
• We demonstrate the effectiveness of mobile device ﬁnger-
printing with 81% of unique mobile ﬁngerprints in our
dataset despite the lack of plugins and fonts. We show
that the wealth of mobile models (different vendors with
different ﬁrmware versions) result in very rich user-agents
and very revealing canvas usage.
• We explore scenarios of possible technological evolutions
to improve privacy, and we simulate their impact on
browser ﬁngerprinting using our dataset. Notably, we
ﬁnd out that removing plugins and having generic HTTP
headers could reduce desktop ﬁngerprint’s uniqueness by
a very strong 36%.
The paper is organized as follows. Section II describes our
script and provides descriptive statistics about our dataset.
Section III investigates the impact of the most recent tech-
nology on ﬁngerprint diversity and section IV details the
analysis of mobile ﬁngerprint diversity. Section V evaluates
the impact of possible future scenarios on ﬁngerprint-based
identiﬁcation, section VI discusses the related work while
879879
section VII concludes this paper.
II. DATASET
We launched the AmIUnique.org website in November 2014
to collect browser ﬁngerprints with the aim of performing an
in-depth analysis of their diversity. The ﬁrst part of this section
presents the set of attributes that we collect in our browser
ﬁngerprinting script and the technique we use to collect them.
Then, we give a few general descriptive statistics about the
118,934 ﬁngerprints that serve as our dataset. We ﬁnish this
section with a series of tests to compare our dataset with the
only other available set of ﬁngerprint statistics, provided by
Eckersley in 2010 [7].
A. AmIUnique.org
1) Fingerprinting script: We implemented a browser ﬁn-
gerprinting script that exploits state-of-the-art techniques [4],
[6] as well as some new browser APIs. The complete list of
attributes is given in the ‘Attribute’ column of Table I. The
‘Source’ column indicates the origin of each attribute (HTTP,
JavaScript or Flash). The ‘Distinct values’ and ‘Unique values’
columns give a global overview of the most discriminating
attributes in a ﬁngerprint. Finally, the last column displays
a complete example of a browser ﬁngerprint. The top 10
attributes have been presented by Eckersley. Most of the 7
attributes at the bottom of the table have been discussed in
other works. Yet, we are the ﬁrst to collect them on a large
scale basis and to combine them as part of a ﬁngerprint. We
detail these 7 attributes below
• List of HTTP headers: When connecting to a server,
browsers send the user-agent, the desired language for a
webpage, the type of encoding supported by the browser,
among other headers. Some software and browser exten-
sions modify or add headers, giving extra details about
the device’s conﬁguration. Being deﬁned in the HTTP
protocol, these headers can always be acquired by the
server and do not depend on JavaScript.
• Platform: The value in the “navigator.platform" property
provides information about the user’s operating system.
While this information is already in the user-agent, we
collect the ‘platform’ value to detect modiﬁed or incon-
sistent ﬁngerprints, e.g., in case the returned value is
different from the one in the user-agent.
• Do Not Track/Use of an ad blocker: These two attributes
are directly related to privacy and the values can help us
differentiate privacy-conscious users from others.
• WebGL Vendor and Renderer: Described by Mowery et
al. [4], these two attributes were added with the HTML
WebGL API to give information on the underlying GPU
of the device. We provide extensive details about the
contents of these attributes in section III.
• Canvas: Introduced by Acar et al. [6] and fully explained
in section III-A, the HTML5 Canvas element gives us
the ability to perform tests on both the hardware and
the operating system by asking the browser to render a
picture following a ﬁxed set of instructions.
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:14:16 UTC from IEEE Xplore.  Restrictions apply. 
BROWSER MEASUREMENTS OF AMIUNIQUE FINGERPRINTS WITH AN EXAMPLE
TABLE I
Source
Distinct
values
Unique
values
Example
Attribute
User agent
Accept
Content encoding
Content language
HTTP header
11,237
6,559
HTTP header
HTTP header
HTTP header
131
42
4,694
62
11
2,887
List of plugins
JavaScript
47,057
39,797
Cookies enabled
Use of local/session stor-
age
Timezone
Screen
color depth
resolution
and
JavaScript
JavaScript
JavaScript
JavaScript
2
2
55
0
0
6
2,689
1,666
List of fonts
Flash plugin
36,202
31,007
List of HTTP headers
HTTP headers
1,182
Platform
Do Not Track
Canvas
WebGL Vendor
WebGL Renderer
Use of an ad blocker
JavaScript
JavaScript
JavaScript
JavaScript
JavaScript
JavaScript
187
7
8,375
26
1,732
2
525
99
0
5,533
2
649
0
(X11; Linux
(KHTML,
x86_64) AppleWe-
like Gecko) Chrome/
Mozilla/5.0
bKit/537.36
41.0.2272.118 Safari/537.36
text/html,application/xhtml+xml,application/xml;q=
0.9,image/webp,*/*;q=0.8
gzip, deﬂate, sdch
en-us,en;q=0.5
Plugin 1: Chrome PDF Viewer. Plugin 2: Chrome
Remote Desktop Viewer. Plugin 3: Native Client.
Plugin 4: Shockwave Flash...
yes
yes
-60 (UTC+1)
1920x1200x24
Abyssinica SIL,Aharoni CLM,AR PL UMing
CN,AR PL UMing HK,AR PL UMing TW...
Referer X-Forwarded-For Connection Accept Cookie
Accept-Language Accept-Encoding User-Agent Host
Linux x86_64
yes
NVIDIA Corporation
GeForce GTX 650 Ti/PCIe/SSE2
no
It should be noted that the WebGL Vendor and WebGL
Renderer attributes were added after our site was launched. We
isolated the results obtained from these two attributes (values
collected after ﬁngerprint number 45,474).
We tested other attributes for inclusion in the ﬁngerprints,
but the results were inconclusive and we decided to discard
them. We designed a test that renders 3D volumes through the
WebGL API, as ﬁrst tested by Mowery et al. [4]. However,
after an early analysis of more than 40,000 ﬁngerprints, the
test proved to be too brittle and unreliable since a simple
page reload with a different window size on a single device
could change the value of this test. Appendix B goes into
more details on this WebGL test. We also tested the collection
of information based on the device’s hardware performance,
like the Octane JavaScript benchmark, but they proved to be
too long and too intensive to execute. Finally, we included
other Flash attributes that proved to be useful
to detect
inconsistencies, but did not increase ﬁngerprint uniqueness.
More details can be found in Appendix C.
2) Data collection: AmIUnique.org is a website dedicated
to browser ﬁngerprinting, aimed both at collecting data about
device diversity and at
the privacy
implications of ﬁngerprinting. All visitors are informed of our
goal with links to both our privacy policy and FAQ sections,
informing users about
and they have to explicitly click on a button to trigger the
collection of their device’s ﬁngerprint.
When the user initiates the connection to the page that
contains our ﬁngerprinting script, the server immediately col-
lects the HTTP headers. Then, if the user has not blocked
JavaScript, the browser runs the script that collects the bulk
of the ﬁngerprint data. If Flash is present, we go one step
further and collect additional data. Our script takes a few
hundred milliseconds to create a ﬁngerprint. The contents of
each ﬁngerprint is dependent on the browser, its conﬁguration,
and the hardware and software environment it is running in.
We distinguish three main categories of ﬁngerprints in our
dataset: those with JavaScript and Flash activated (43% of
the ﬁngerprints), those with JavaScript activated but not Flash
(41%), and those with no JavaScript, and hence, no Flash
(16%). Given that our work focuses on ﬁngerprinting modern
browsers and at analyzing the importance of the attributes in
Table I, we do not consider ﬁngerprints with no JavaScript.
Fingerprints without JavaScript only include values for the
HTTP headers (i.e., 5 attributes), which drastically removes
most of the functionality we are studying.
To prevent collecting multiple copies of the same ﬁngerprint
from the same user, we store a cookie on the user’s device with
a unique ID, and we also keep a hashed version of the IP
880880
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:14:16 UTC from IEEE Xplore.  Restrictions apply. 
address. These two pieces of information allow us to identify
returning devices, which represent a negligible part of our
dataset.
We communicated our website on Slashdot, Framasoft,
Clubic, social media channels like Facebook and Twitter, and
newspapers like Le Monde. As of February 15th, 2015, we
collected 142,023 ﬁngerprints, which were then reduced to
118,934 once we removed the ﬁngerprints without JavaScript
for this study. However, because our website focuses on a very
speciﬁc subject, our visitors are likely saavy Internet users who
are aware of potential online privacy issues. Hence, our data is
biased towards users who care about privacy and their digital
footprint, and their devices might have ﬁngerprints different
than those we could collect from a more general audience.
B. Descriptive statistics
Tables I and II summarize the essential descriptive statistics
of the AmIUnique dataset. Table II presents the distribution
of plugins, fonts and headers in our dataset. To obtain these
numbers, we decomposed each list of values into single
elements and we studied how common they are by looking at
the number of ﬁngerprints in which each element is present.
We divided the results from the plugins, fonts and headers
into three categories: the ones that belong to less than 1%
of collected ﬁngerprints, the ones present in less than 0,1%
of ﬁngerprints, and the ones that appear in only one or two
ﬁngerprints.
Unique and distinct values: The ‘Distinct values’ column
in Table I provides the number of different values that we
observed for each attribute, while the ‘Unique values’ column
provides the number of values that occurred a single time in
our dataset. For example, attributes like the use of cookies or
session storage have no unique values since they are limited to
“yes” and “no”. Other attributes can virtually take an inﬁnite
number of values. For example, we observed 6,559 unique
values for the user-agent attribute. This is due to the many
possible combinations between the browser, its version and
the operating system of the device. It is extremely likely that
visitors who use an exotic OS with a custom browser, such as
Pale Moon on Arch Linux, will present a very rare user-agent,
thus increasing the likelihood of being identiﬁed with just the
user-agent.
These numbers show that some attributes are more discrim-
inating than others, but they all contribute to building a unique
and coherent ﬁngerprint.
Plugins: We observed 2,458 distinct plugins, assembled in
47,057 different lists of plugins. They cover an extremely wide
range of activities, as for example, reading an uncommon ﬁle
format in the browser (e.g. FLAC ﬁles with the VLC Browser
plugin), communicating with an antivirus or a download client,
launching a video game directly in the browser, site-speciﬁc
plugins for added functionality, etc. Some plugins are so
speciﬁc that they leak information beyond the computer, like
the company the user works for or the brand of smartphone,
camera or printer he or she uses. 97% of plugins appear in
less than 1% of collected ﬁngerprints and 89% in less then
TABLE II
SUMMARY OF STATISTICS
Attr.
Plugin
Font
Header
Total
2,458
223,498
222
<1% FP
2,383 (97%)
221,804 (99%)
205 (92%)
<0,1% FP
2,195 (89%)
217,568 (97%)
182 (82%)
< 3 FP
950 (39%)
135,468 (61%)
92 (41%)
0,1%. A lot of plugins are created for precise and narrow uses
allowing their users to be easily identiﬁed.
Fonts: We observed 221,804 different fonts, assembled
in 36,202 different lists of fonts. This really high number
shows the incredible wealth that exists: fonts for support
of an additional alphabet, fonts for web designers, fonts for
drawing shapes and forms, fonts for different languages, etc.
On average, a Windows or Mac user has two to three times the
amount of fonts of a Linux user. Also, 97% of fonts appear
in less than 0,1% of ﬁngerprints and a little less than 2/3 of
them are only in one or two ﬁngerprints. These percentages
show how efﬁcient a list of fonts can be for ﬁngerprinting and
transitively how critical it can be for users who want to protect
their privacy. However, this list is provided through the Flash
plugin, which is progressively disappearing from the web. We
will see in section V that removing access to the list of fonts
has a small impact on identiﬁcation.
HTTP headers: We observed 222 different HTTP headers,
assembled in 1,182 different lists of headers. New headers are
added to the standardized ones for different reasons and from
different sources. Some examples include the following:
• The browser. For example, the Opera browser on smart-
phones adds a X-OperaMin-Phone-UA header, and the
Pufﬁn browser adds a X-Pufﬁn-UA header.
• A browser extension. For example, the FirePHP extension
for Firefox adds the x-FirePHP and the x-FirePHP-
Version headers to each HTTP request.
• The network on which you are connected. Some headers
show the use of proxies or protection systems.
As indicated in Table II, 182 headers out of 222 appear in
less than 0,1% of the collected ﬁngerprints, and 92 of them
come from only one or two ﬁngerprints. These statistics mean
that some HTTP headers are highly discriminating and their
presence greatly affects the uniqueness of one’s ﬁngerprint.
C. Statistical validity of the dataset
This section presents a series of tests to compare our dataset
with the ﬁngerprinting statistics provided by Eckersley in
2010.
1) Mathematical treatment:
Entropy: We use entropy to quantify the level of identifying