skew evaluation results in favor of signature-based tools. This bias
is further demonstrated with respect to the less popular samples
in the benchmark, as well as evaluations on real-world websites
deployed in the wild (Section 4.2). We also developed 5 benign and
5 malicious PHP programs in an adversarial manner. A collabo-
rator who was unaware of the detection technique developed the
code. The benign scripts were deliberately created to fool detection
methods into causing false positives. They employ encoding and
obfuscation to do benign operations. The malicious scripts were
not deceitful, spanning simple malicious scripts to obfuscated ones.
Table 1 provides an overview of our benchmark suite. The malware
range from one-liners to malware larger than 500KB.
which can decode obfuscated PHP code and recognize malicious
behavior. Third, PHP Malware Finder [48] (referred to as phpmaldet
in our dataset) that focuses on deobfuscation and then recogniz-
ing malware via Yara [70]. Fourth, ClamAV is an open-source an-
tivirus [20]. Fifth, we also use VirusTotal [1], an online aggregate
service that scans files with more than 50 antivirus systems.
There are also online PHP malware detection and deobfuscation
services, such as unPHP [69] and shellray [49]. However, we did not
include them in our comparison because we observed inconsistent
(i.e., non-deterministic) results during testing the benchmark with
them, and they often caused many false positives.
4.2 Scanning Real-world Websites (Dataset A)
We used a large corpus of 87 real-world infected websites con-
sisting of 3,225,403 files (approximately 1 TB) to demonstrate the
effectiveness of MalMax. The dataset includes various malware
in the wild which show how MalMax can perform against real-
istic advanced malware. The websites were collected for analysis
because at least one of the files in each website is marked as mali-
cious by Linux Malware Detector (maldet). Details on file extension
distribution in the dataset can be found in Appendix A.1.
Figure 6: Malware flagged by PhpMalScan and maldet.
Category
Webshell
Backdoor
Flooder
Spammer
Bruteforcer
Bypasser
Defacer
39
7
6
7
9
3
2
Total (Unique)
73 (53)
Real Life
Synthetic
Total
3
1
0
1
1
0
0
6 (5)
42
8
6
8
10
3
2
79 (58)
Table 1: Malware benchmark categorization. Some malware
fall into multiple categories.
Real-world Benign PHP Applications (Dataset C). We selected
four diverse yet popular and representative PHP web applications
to evaluate MalMax’s false positive and negative rates: Wordpress,
Joomla, phpMyAdmin, and CakePHP. Wordpress, a content man-
agement system, is the most popular web application in existence
that powers more than half the World Wide Web [10]. Joomla is
the second most popular web application that powers more than
10 million websites [43] and is one of the largest and most com-
plex PHP applications (500K lines of code, 55 dynamic scripting
features). phpMyAdmin is a MySQL database management web
application in PHP [46]. It exhibits various security-sensitive behav-
iors such as changing database server and system configurations
via system-level functions. CakePHP is a popular PHP web applica-
tion development framework [39] that involves various third-party
tools and scripts that make the analysis of the program challenging.
Malware Detection Tools for Comparison. We collected five
widely used malware detection tools, including open and propri-
etary tools, to act as the baseline for comparison. First, Linux Mal-
ware Detector [57] (or maldet) uses MD5 and hexadecimal signa-
tures for malware detection. Second, backdoorMan is an open-
source Python toolkit for detecting malicious PHP scripts [21]
We preprocessed all the files to identify program relevant files
by inspecting the files that contain any PHP source code. We find
712,367 files that contain PHP code (as shown in Fig. 6- 1 ). Inter-
estingly, we discover 35,555 files among them disguised as non-PHP
files (e.g., icons, images, text files). Note that PHP can include any
file and attempt to execute it as code, thus hiding malicious PHP
code in non-PHP files is a common tactic used by attackers. To
confirm the accuracy of the discovered disguised PHP files, we
ran MalMax to obtain complete control flow and behaviors. The
result shows that they are all valid PHP files disguised as other data
files. We ran MalMax and maldet on all the program relevant files
(712,367 files), and 3,986 files were flagged as malware (Fig. 6- 2 ).
Fig. 6- 3 shows the breakdown of samples flagged as malicious
by PhpMalScan and maldet. There are 95 files (Blue) only detected
by maldet, 3,748 files (Red) only identified by PhpMalScan, and
143 files (Black) that are detected by both tools. To investigate
further, we leveraged VirusTotal (VT). Specifically, among the 238
files detected by maldet, we used VT to scan them. It turns out 33
953748maldetdetectsPHPMALSCANdetects14320533VT	detects24061485VT	detectsAB3,986708,381	(99.44%)Flagged23484.06	%15.9	%97.87	%2.13%5MalwareSampled	Inspection	Result	with	95%	Confidence	(10%	Margin	of	Error).Total	ScannedScan	ResultsVT	Scan712,3672,513,036	(77.9%)Data	Files	(e.g.,	images,	icons,	text	files)Program	Relevant	FilesNot	Flagged1Total	Data-set✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
5 / 54 ✓
2 / 54 ✓
0 / 53
0 / 54
Id maldet backdoorman phpmaldet ClamAV VirusTotal PhpMalScan
m1
m2
m3
m4
m5
m6
m7
m8
m9
m10
m11
m12
m13
m14
m15
m16
m17
m18
m19
m20
m21
m22
m23
m24
m25
m26
m27
m28
m29
m30
m31
m32
40 / 54 ✓
3 / 54 ✓
25 / 54 ✓
20 / 54 ✓
24 / 54 ✓
21 / 54 ✓
24 / 54 ✓
28 / 54 ✓
31 / 54 ✓
9 / 53 ✓
25 / 53 ✓
16 / 54 ✓
21 / 54 ✓
28 / 54 ✓
30 / 54 ✓
2 / 54 ✓
16 / 54 ✓
12/ 53 ✓
19 / 51 ✓
2 / 53 ✓
7 / 53 ✓
14 / 54 ✓
6 / 53 ✓
17 / 53 ✓
24 / 54 ✓
30 / 54 ✓
13 / 54 ✓
34 / 52 ✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
✓
Id maldet backdoorman phpmaldet ClamAV VirusTotal PhpMalScan
m33
m34
m35
m36
m37
m38
m39
m40
m41
m42
m43
m44
m45
m46
m47
m48
m49
m50
m51
m52
m53
sm1
sm2
sm3
sm4
sm5
sb1
sb2
sb3
sb4
sb5
Total
✓
✓
✓
✓
✓
✓
✓
✓
✓