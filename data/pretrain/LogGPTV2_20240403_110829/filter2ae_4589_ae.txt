    MOV             R3, #0x58
    MOV             R0, R2
    MOV             R1, #0
    MOV             R2, R3
    BL              memset_0
    MOV             R3, #0
    STR             R3, [R11,#var_8]
    B               loc_B391874C
    ; ---------------------------------------------------------------------------    loc_B3918724
    SUB             R2, R11, #-var_F8
    LDR             R3, =0xFFFFDD28
    LDR             R0, [R11,#var_28]
    MOV             R1, R2
    MOV             R2, #0x58
    SUB             R12, R11, #-var_4
    LDR             R3, [R12,R3]
    BL              sub_B39176FC
    MOV             R3, R0
    STR             R3, [R11,#var_8]
    loc_B391874C
    LDR             R3, [R11,#var_8]
    CMP             R3, #0x57
    BLS             loc_B3918724
### 函数调用约定，参数传递
参数小于4个，用寄存器R1-R3存储并传入函数
参数大于4个，多余的参数传到栈顶
    LDR             R2, [R11,#var_8]
    LDR             R3, =0xFFFFDD2C
    LDR             R1, =0xFFFFDD28
    SUB             R0, R11, #-var_4
    LDR             R1, [R0,R1]
    STR             R1, [SP,#0x22EC+var_22EC]
    STR             R2, [SP,#0x22EC+var_22E8]
    MOV             R0, #6
    LDR             R2, =(aTxtag - 0xB3918784)
    ADD             R2, PC, R2 ; "txtag"
    MOV             R1, R2
    LDR             R2, =(aLoadLibrarySAt - 0xB3918790)
    ADD             R2, PC, R2 ; "load library %s at offset %x read count"...
    SUB             R12, R11, #-var_4
    LDR             R3, [R12,R3]
    BL              printf_log
    SUB             R3, R11, #-var_29C
    MOV             R0, R3
    MOV             R1, #0
    MOV             R2, #0x1A0
    BL              memset_0
    LDR             R3, [R11,#var_F8]
    LDR             R2, [R11,#var_F4]
    STR             R2, [SP,#0x22EC+var_22EC]
    MOV             R0, #6
    LDR             R2, =(aTxtag - 0xB39187C8)
    ADD             R2, PC, R2 ; "txtag"
    MOV             R1, R2
    LDR             R2, =(aMin_vaddrXSize - 0xB39187D4)
    ADD             R2, PC, R2 ; "min_vaddr:%x size:%x\n"
    BL              printf_log
### do-while+if
    LDR             R3, [R11,#var_F8]
    STR             R3, [R11,#var_2C]
    loc_B39187DC
    LDR             R3, [R11,#var_F4]
    MOV             R2, #0xFFFFFFFF
    STR             R2, [SP,#0x22EC+var_22EC]
    MOV             R2, #0
    STR             R2, [SP,#0x22EC+var_22E8]
    LDR             R0, [R11,#var_2C]
    MOV             R1, R3
    MOV             R2, #0
    MOV             R3, #0x22
    BL              sub_B3917708
    STR             R0, [R11,#var_C]
    LDR             R2, [R11,#var_C]
    LDR             R3, =0x457FFFFF
    CMP             R2, R3
    BHI             loc_B391886C
    LDR             R2, [R11,#var_C]
    LDR             R3, [R11,#var_F4]
    RSB             R3, R3, #0x40000000
    CMP             R2, R3
    BLS             loc_B391886C
    LDR             R3, =(dword_B391B004 - 0xB3918838)
    ADD             R3, PC, R3 ; dword_B391B004
    LDR             R3, [R3]
    CMP             R3, #0xA
    BHI             loc_B391886C
    MOV             R0, #6
    LDR             R3, =(aTxtag - 0xB3918850)
    ADD             R3, PC, R3 ; "txtag"
    MOV             R1, R3
    LDR             R3, =(aAddrP - 0xB391885C)
    ADD             R3, PC, R3 ; "addr:%p"
    MOV             R2, R3
    LDR             R3, [R11,#var_C]
    BL              printf_log
    MOV             R3, #0xFFFFFFFF
    STR             R3, [R11,#var_C]
    loc_B391886C
    LDR             R3, [R11,#var_C]
    CMN             R3, #1
    BEQ             loc_B39187DC
### malloc出0x30空间
    LDR             R2, [R11,#var_C]
    LDR             R3, [R11,#int_0]
    RSB             R3, R3, R2
    STR             R3, [R11,#var_30]
    LDR             R3, [R11,#var_C]
    STR             R3, [R11,#pMap]
    LDR             R3, [R11,#var_30]
    STR             R3, [R11,#var_180]
    LDR             R2, [R11,#var_E8]
    LDR             R3, [R11,#var_30]
    ADD             R3, R2, R3
    STR             R3, [R11,#var_1F0]
    LDR             R2, [R11,#var_E4]
    LDR             R3, [R11,#var_30]
    ADD             R3, R2, R3
    STR             R3, [R11,#var_1EC]
    LDR             R3, [R11,#var_E0]
    CMP             R3, #0
    BEQ             loc_B39188D4
    LDR             R2, [R11,#var_E0]
    LDR             R3, [R11,#var_30]
    ADD             R3, R2, R3
    B               loc_B39188D8
     ; ---------------------------------------------------------------------------    loc_B39188D4
    MOV             R3, #0
    loc_B39188FC
    STR             R3, [R11,#var_1BC]
    LDRH            R3, [R11,#var_CE]
    STR             R3, [R11,#var_1B8]
    LDR             R3, [R11,#var_C4]
    STR             R3, [R11,#var_1E8]
    LDR             R2, [R11,#var_BC]
    LDR             R3, [R11,#var_30]
    ADD             R3, R2, R3
    STR             R3, [R11,#var_1E0]
    LDR             R3, [R11,#var_C0]
    STR             R3, [R11,#var_1E4]
    LDR             R2, [R11,#var_BC]
    LDR             R3, [R11,#var_30]
    ADD             R2, R2, R3
    LDR             R3, [R11,#var_C4]
    MOV             R3, R3,LSL#2
    ADD             R3, R2, R3
    STR             R3, [R11,#var_1DC]
    LDR             R3, [R11,#var_A8]
    STR             R3, [R11,#var_1A4]
    LDRH            R3, [R11,#var_A4]
    STR             R3, [R11,#var_1A0]
    LDR             R2, [R11,#var_B8]
    LDR             R3, [R11,#var_30]
    ADD             R3, R2, R3
    STR             R3, [R11,#var_1D4]
    LDR             R3, [R11,#var_B4]
    STR             R3, [R11,#var_1D0]
    LDR             R2, [R11,#var_AC]
    LDR             R3, [R11,#var_30]
    ADD             R3, R2, R3
    STR             R3, [R11,#var_1CC]
    LDR             R3, [R11,#var_B0]
    STR             R3, [R11,#var_1C8]
    LDR             R3, [R11,#var_30]
    LDR             R2, [R11,#var_C]
    STR             R2, [SP,#0x22EC+var_22EC]
    MOV             R0, #6
    LDR             R2, =(aTxtag - 0xB39189A0)
    ADD             R2, PC, R2 ; "txtag"
    MOV             R1, R2
    LDR             R2, =(aLoad_biasPBase - 0xB39189AC)