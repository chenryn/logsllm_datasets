title:Poster: inference attacks against searchable encryption protocols
author:Mohammad Saiful Islam and
Mehmet Kuzu and
Murat Kantarcioglu
POSTER: Inference Attacks against Searchable Encryption
Protocols
Mohammad Saiful Islam
Jonsson School of
Engineering
and Computer Science
The University of Texas at
Dallas
Mehmet Kuzu
Jonsson School of
Engineering
and Computer Science
The University of Texas at
Dallas
Murat Kantarcioglu
Jonsson School of
Engineering
and Computer Science
The University of Texas at
Dallas
PI:EMAIL
PI:EMAIL
PI:EMAIL
ABSTRACT
The advent of cloud computing has ushered in an era of mass
data storage in remote servers. Remote data storage oﬀers
reduced data management overhead for data owners in a cost
eﬀective manner. Sensitive documents, however, need to be
stored in encrypted format due to security concerns. But,
encrypted storage makes it diﬃcult to search on the stored
documents. Therefore, this poses a major barrier towards
selective retrieval of encrypted documents from the remote
servers. Various protocols have been proposed for keyword
search over encrypted data (commonly referred to as search-
able encryption) to address this issue. Oblivious RAM type
protocols oﬀer secure search over encrypted data, but are
too expensive to be used in practical applications. Unfortu-
nately, all of the symmetric key based encryption protocols
leak data access patterns due to eﬃciency reasons. In this
poster, we are the ﬁrst to analyze the eﬀects of access pat-
tern disclosure. To that end, we introduce a novel attack
model that exploits access pattern leakage to disclose sig-
niﬁcant amount of sensitive information using a modicum
of prior knowledge. We also present a preliminary set of
empirical results on a real dataset to justify our claim.
Categories and Subject Descriptors
K.6.5 [Management of Computing and Information
Systems]: Security and Protection—Unauthorized access;
H.3.3 [Information Storage and Retrieval]: Information
Search and Retrieval—Search process
General Terms
Security, Theory, Algorithms
Keywords
Searchable encryption, Inference attacks, Keyword search.
1.
INTRODUCTION
Due to increased popularity of cloud based services, more
and more sensitive encrypted data ranging from health care
records to personal e-mails are stored in the cloud. But, the
advantage of cloud data storage is lost if the user can not
Copyright is held by the author/owner(s).
CCS’11, October 17– 21, 2011, Chicago, Illinois, USA.
ACM 978-1-4503-0948-6/11/10.
selectively retrieve data segments. Therefore, we need secure
and eﬃcient search schemes to selectively retrieve sensitive
data from the cloud. The need for such protocols are also
recognized by major IT companies such as Microsoft [6].
To facilitate search on encrypted data, an encrypted in-
dex structure is stored in the server along with the encrypted
data. Authorized users in this setting have access to a trap-
door generation function. Therefore, they can generate valid
trapdoors for any arbitrary keyword. This trapdoor is used
in the server to search for the intended keyword. It is as-
sumed that the server do not have access to the trapdoor
generation function, and therefore, can not ascertain the
keyword searched for. However, it is imperative to hide the
identity of a given query1 from an adversary. Otherwise,
the adversary learns the set of documents that contains the
given keyword and the ones that do not.
There are quite a few solutions in the literature that ad-
dresses search over encrypted data. Unfortunately, almost
all of the eﬃcient solutions (e.g., [2–4, 9]) leak data access
pattern to an adversary. That is, in these search schemes,
given a query x for a keyword w, an attacker does not learn
w, but she learns the set of documents that contains w. On
the contrary, Goldreich et. al. presented their oblivious
RAM model in [5] where a user can securely perform search
over encrypted data. Again, Boneh et. al. proposed a pub-
lic key encryption based search protocol in [1]. Although,
both of these protocols prevent access pattern leakage, they
are computationally expensive.
More eﬃcient searchable encryption schemes, on the other
hand, use symmetric key encryption techniques (e.g., [2–4,
9]). All these protocols oﬀer practical solution to the prob-
lem at hand, but reveals data access patterns to an adver-
sary. Quite naturally, this limitation has been acknowledged
in [3, 4] by their respective authors. But, to our knowl-
edge, none of the previous works systematically analyzed
the potential security risks due to access pattern disclosure
on searchable encryption schemes. In this abstract,
1. We investigate the implications of access pattern dis-
closure.
2. We formalize a query identity inference model based
on access pattern disclosure.
3. We provide an empirical analysis on a real world dataset
to verify the eﬀectiveness of our proposed model.
1We use the term ‘query’ to refer to a trapdoor sent by a
user to the remote server as a search request.
845Notation Meaning
Table 1: Notations
D
n
K
m
Di
Ki
An ordered sequence of all the documents
the number of documents in D.
an ordered sequence of all the keywords.
The number of keywords in K.
The ith document in D
The ith keyword in K
argument w ∈ K
Keyword x appears in document Di
The result sent by the server in response to
a query q.
T rapdoorw The output of the trapdoor function with
x ∈ Di
Rq
2. MOTIVATION
Let us assume Alice stores a set of sensitive documents
regarding Major League Baseball to a remote server (e.g.,
Bob) using a searchable encryption technique that leaks data
access pattern. Furthermore, an attacker Mallory can in-
tercept data access pattern of Alice for an arbitrarily un-
bounded amount of time. Let us also assume that the un-
derlying searchable encryption protocol is safe in the sense
that it does not reveal any information about the document
contents other than the user access patterns. We argue
that Mallory can infer some valuable knowledge about query
identities using these access patterns with the help of some
background knowledge on the keyword distribution of the
underlying document set.
Considering the type of the documents stored, let us as-
sume an highly likely scenario, where the words ‘New’, ‘York’
and ‘Yankees’ appear in any given document with a higher
probability than any other words in the document set. Now,
let us assume Alice sends search request for these three
words interspersed among a set of other keywords in a par-
ticular period of time. After all the communication rounds
are ﬁnished, Mallory sees a list of trapdoors and the set of
documents they appear in. Quite naturally, Mallory can
calculate the probability of any two of these queried words
appearing together in a document by noticing the num-
ber of documents the corresponding trapdoors appear to-
gether. Now, by observing these probabilities, Mallory can
easily isolate the three trapdoors representing the keyword
set {‘New’, ‘York’, ‘Yankees’} because of their high prob-
abilities. Furthermore, it is likely that the pair of words
‘New’ and ‘York’ appears together in some documents to
refer to the state or the city, not the baseball team. There-
fore, the probability of both ‘New’ and ‘York’ appearing in
a document will be higher than that of ‘New’ and ‘Yan-
kees’ or ‘York’ and ‘Yankees’. This important observation
enables Mallory to uniquely identify the trapdoor for the
word ‘Yankees’. Furthermore, if Mallory learns the identity
of the trapdoor for ‘New’, she will also be able to infer the
trapdoor for ‘York’. Therefore, it is quite evident that a
modicum of prior knowledge can lead to the revelation of
many encrypted queries and thus lead to signiﬁcant docu-
ment contents disclosure.
3. NOTATIONS
Table 1 summarizes a short list of notations we use in
this poster. We mathematically denote the ith keyword Ki
as an m bit row vector [K1
i = 1
i ], such that Ki
i , ..., Km
i ,K2
i = 0 for ∀j (cid:4)= i. Again, we denote Q = (cid:5)Q1,···Ql(cid:6)
and Kj
be the ordered sequence of queries submitted by Alice for
a given period of time. Here, ∀i ∃j,Qi = T rapdoorKj . We
denote the result sent by the server in response to a query
q = T rapdoorKj by an n-bit row vector Rq = (cid:5)d1,··· , dn(cid:6)
s.t. di = 1 iﬀ the ith document contains the keyword Kj
and di = 0 otherwise.
4. THREAT MODEL
In our model, the attacker, Mallory observes a sequence
of l queries Q = (cid:5)Q1,···Ql(cid:6) submitted by the client to the
server. Naturally, Mallory has also access to the sequence
of query responses RQi , ∀i ∈ [1, l], since she has full ac-
cess to the communication channel. The goal of Mallory
is to successfully ascertain the sequence of keywords KB =
(cid:5)Ka1 ,···Kal(cid:6), where KB ⊂ K and ∀i ∈ [1, l], T rapdoorKai =
Qi. That is, Mallory wishes to uniquely identify the under-
lying keywords of each of the queries Qi. In this paper, we
show that Mallory has a very high probability of succeeding
if she has access to the following background knowledge on
the document set.
• Mallory knows the underlying keywords for k of the
queries in the sequence Q. That is, Mallory has ac-
cess to the set KQ ⊂ KB × Q, where KQ is deﬁned as
{(cid:5)x, y(cid:6)|(x ∈ KB) ∧ (y ∈ Q) ∧ (y = T rapdoorx)}, where
k = |KQ|. We later show that Mallory can be success-
ful with very high probability even when k << l. It
turns out that Mallory has high probability of being
successful even when she does not know the identity of
any of the queries in Q.
• Mallory has an m × m matrix M . Each (i, j)th cell
in matrix M contains the expected probability of both
ith and jth keywords appearing in any random docu-
ment d ∈ D. That is, Mi,j = P r [(Ki ∈ d) ∧ (Kj ∈ d)],
where d is sampled randomly from the set D.
An attacker can build the matrix M by carrying out a proba-
bilistic analysis over large publicly available online datasets.
We later show in this abstract, our model works reasonably
well for a noisy background knowledge matrix, M . There-
fore, we argue that any close approximation of M is suﬃcient
for a successful attack.
5. PROPOSED MODEL
In this section, we describe how Mallory can formulate an
attack to identify query identities as an optimization prob-