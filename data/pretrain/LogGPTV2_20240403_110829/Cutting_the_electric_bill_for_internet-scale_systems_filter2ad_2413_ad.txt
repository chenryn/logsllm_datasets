rive a distribution of client activity, cluster sizes, and cluster
locations. We then use an energy model to map prices and
cluster-traﬃc allocations to electricity expenses. The model
is admittedly simplistic. Our goal is not to provide accurate
ﬁgures, but rather to estimate bounds on savings.
5.1 Cluster Energy Consumption
We model the energy consumption of a cluster as be-
ing proportional, roughly linear, to its utilization. Multiple
studies have shown that CPU utilization is a good estimator
for power usage [5, 8]. Our model is adapted from Google’s
empirical study of a data center [5] in which their model
was found to accurately (less than 1% error) predict the dy-
namic power drawn by a group of machines (20-60 racks).
129We augment this model to ﬁll in some missing pieces and
parametrize it using other published studies and measure-
ments of servers at Akamai.
Let Pcluster be the power usage of a cluster, and let ut be
its average CPU utilization (between 0 and 1) at time t:
Pcluster(ut) = F (n) + V (ut, n) + ǫ
Where n is the number of servers in the cluster, F is the
ﬁxed power, V is the variable power, and ǫ is an empirically
derived correction constant (see [5]).
F (n) = n · `Pidle + (P U E − 1) · Ppeak´
V (ut, n) = n · (Ppeak − Pidle) · (2ut − ur
t )
Where Pidle is the average idle power draw of a single server,
Ppeak is the average peak power, and the exponent r is an
empirically derived constant equal to 1.4 (see [5]). The equa-
tion for V is taken directly from the original paper. A linear
model (r = 1) was also found to be reasonably accurate [5].
We added the PUE component, since the Google study did
not account for cooling etc.
With power-management, the idle power consumption of a
server can be as low as 50-65% of the peak power consump-
tion, which can range from 100-250W [5, 7, 8]. Without
power-management an oﬀ-the-shelf server purchased in the
last several years averages around 250W and draws ∼95%
of its peak power when idle (based on measured values).
Ultimately, we want to use this model in simulation to
estimate the maximum percentage reduction in the energy
costs of some server deployment pattern. Consequently, the
absolute values chosen for Ppeak and Pidle are unimportant:
their ratio is what matters. In fact, it turns out that the
value Pcluster (0)
Pcluster (1) is critical in determining the savings that
can be achieved using price-diﬀerential aware routing.
Ideally, Pcluster(0) would be zero: an idle cluster would
consume no energy. At present, achieving this without im-
pacting performance is still an open challenge. However,
there is an increasing interest in energy-proportional com-
puting [6] and dynamic server provisioning techniques are
being explored by both academics and industry [7, 8, 9, 10,
11]. We are conﬁdent that Pcluster(0) will continue to fall.
5.2 Increase in Routing Energy
In our scheme, clients may be routed to distant servers
in search of cheap energy. From an energy perspective,
this network path expansion represents additional work that
must be performed by something. If this increase in energy
were signiﬁcant, network providers might attempt to pass
the additional cost on to the server operators. Given what
we know about bandwidth pricing (§4), a small increase in
routing energy should not impact bandwidth prices. Alter-
natively, server operators may bear all the increased energy
costs (suppose they run the intermediate routers).
A simple analysis suggests that the increased path lengths
will not signiﬁcantly alter energy consumption. Routers are
not designed to be energy proportional and the energy used
by a packet to transit a router is many orders of magnitude
below the energy expended at the endpoints (e.g., Google’s 1
kJ/query [24]). We estimate that the average energy needed
for a packet to pass through a core router is on the order of
2 mJ [25]10. Further we estimate that the incremental en-
10Reported for a Cisco GSR 12008 router: 540k mid-sized pack-
ets/sec and 770 Watts measured.
ergy dissipated by each packet passing through a core router
would be as low as a 50 µJ per medium-sized packet [25]11.
We must also consider what happens if the new routes
overload existing routers. If we use enough additional band-
width through a router it may have to be upgraded to higher
capacity hardware, increasing the energy signiﬁcantly. How-
ever, we could prevent this by incorporating constraints, like
the 95/5 bandwidth constraints we use.
6. SIMULATION: PROJECTING SAVINGS
In order to test the central thesis of this paper, we con-
ducted a number of simulations, quantifying and analysing
the impact of diﬀerent routing policies on energy costs and
client-server distance.
Our results show that electricity costs can plausibly be re-
duced by up to 40% and that the degree of savings primarily
depends on the energy elasticity of the system, in addition
to bandwidth and performance constraints. We simulate
Akamai’s 95/5 bandwidth constraints and show that overall
system costs can be reduced. We also sketch the relation-
ship between client-server distance and savings. Finally we
investigate how delaying the system’s reaction to price dif-
ferentials aﬀects savings.
6.1 Simulation Strategy
We constructed a simple discrete time simulator that step-
ped through the Akamai usage statistics, letting a routing
module (with a global view of the network) allocate traﬃc to
clusters at each time step. Using these allocations, we mod-
eled each cluster’s energy consumption, and used observed
hourly market prices to calculate energy expenditures. Be-
fore presenting the results, we provide some details about
our simulation setup.
Electricity Prices. We used hourly real-time market
prices for twenty-nine diﬀerent locations (hubs). However,
we only have traﬃc data for Akamai public clusters in nine of
these locations. Therefore, most of the simulations focused
on these nine locations. Our data set contained 39 months
of price data, spanning January 2006 through March 2009.
Unless noted otherwise, we assumed the system reacted to
the previous hour’s prices.
Traﬃc and Server Data. The Akamai workload data
set contains 5-minute samples for the hits-per-second ob-
served at public clusters in twenty ﬁve cities, for a period of
24 days and some hours. Each sample also provides a map,
specifying where hits originated, grouping clients by state,
and which city they were routed to.
We had to discard seven of these cities because of a lack
of electricity market data for them. The remaining eighteen
cities were grouped by electricity market hub, as nine ‘clus-
ters’. In our 24-day simulation, we used the traﬃc incident
on these nine clusters.
In order to simulate longer periods we derived a syn-
thetic workload from the 24-day Akamai workload (US traf-
ﬁc only). We calculated an average hit rate For every hub
and client state pair. We produced a diﬀerent average for
each hour of the day and each day of the week.
Additionally, the Akamai data allowed us to derive capac-
11Reported: power consumption of idle router is 97% the peak
power.
In the future, power-aware hardware may reduce this
disparity between the marginal and average energy.
130)
%
i
(
s
g
n
v
a
s
m
u
m
x
a
M
i
Relax 95/5 constraints
Follow original 95/5 constraints
50
40
30
20
15
10
5
0
(0%, 1.0)
(0%, 1.1)
(25%, 1.3) (33%, 1.3) (33%, 1.7) (65%, 1.3) (65%, 2.0)
Energy model parameters (idle power, PUE)
Figure 15: The system’s energy elasticity is key in de-
termining the degree of savings price-conscious routing
can achieve. Further, obeying existing 95/5 bandwidth
constraints reduces, but does not eliminate savings. The
graph shows 24-day savings for a number of diﬀerent
PUE and Pidle values with a 1500km distance threshold.
The savings for each energy model are given as a per-
centage of the total electricity cost of running Akamai’s
actual routing scheme under that energy model.
ity constraints and the 95th percentile hits and bandwidth
for each cluster. Capacity estimates were derived using ob-
served hit rates and corresponding region load level data
provided by Akamai. Our simulations use hits rather than
the bandwidth numbers from the data.
Most of our simulations used Akamai’s geographic server
distribution. Although the details of the distribution may
introduce artifacts into our results, this is a real-world distri-
bution. As such, we feel relying on it rather than relying on
synthetic distributions makes our results more compelling.
Routing Schemes. In our simulations we look at two
routing schemes: Akamai’s original allocation; and a dis-
tance constrained electricity price optimizer.
Given a client, the price-conscious optimizer maps it to a
cluster with the lowest price, only considering clusters within
some maximum radial geographic distance. For clients that
do not have any clusters within that maximum distance,
the routing scheme ﬁnds the closest cluster and considers
any other nearby clusters (< 50km). If the selected cluster
is nearing its capacity (or the 95/5 boundary), the optimizer
iteratively ﬁnds another good cluster.
The price optimizer has two parameters that modulate
its behaviour: a distance threshold and a price threshold.
Any price diﬀerentials smaller than the price threshold are
ignored (we use $5/MWh). Setting the distance threshold
to zero, gives an optimal distance scheme (select the cluster
geographically closest to client); setting it to a value larger
than the East-West coast distance gives an optimal price
scheme (always select the cluster with the lowest price).
We are not proposing this as a candidate for implemen-
tation, but it allows us to benchmark how well a price-
conscious scheme could do and to investigate trade-oﬀs be-
tween distance constraints and achievable savings.
Energy Model. We use the cluster energy model from
section 5.1. We simulated the running cost of the system
using a number of diﬀerent values for the peak server power
(Ppeak), idle server power (Pidle) and the PUE. This section
discusses normalized costs and Pidle is always expressed as a
percentage of Ppeak. Some energy parameters that we used:
optimistic future (0% idle, 1.1 PUE); cutting-edge/google
(60% idle, 1.3 PUE); state-of-the-art (65% idle, 1.7 PUE);
disabled power management (95% idle, 2.0 PUE).
Client-Server Distance. Given a client’s origin state
and the server’s location (hub), our distance metric calcu-
lates a population-density weighted geographic distance. We
used census data to derive basic population density functions
for each US state. When the traﬃc contains clients from
outside the US, we ignore them in the distance calculations.
We use this function as a coarse measure for network dis-
tance. The granularity of the Akamai data set does not pro-
vide enough information for us to estimate network latency
between clients and servers, or even to accurately calculate
geographic distances between clients and servers.
6.2 At the Turn of the Year: 24 Days of Trafﬁc
We begin by asking the question: what would have hap-
pened if an Akamai-like system had used price conscious
routing at the end of 2008? How would this have com-
pared in cost and client-server distance to the current rout-
ing methods employed by Akamai?
Energy Elasticity. We ﬁnd that the answer hinges on
the energy elasticity characteristics of the system. Figure
15 illustrates this. When consumption is completely propor-
tional to load, using price-conscious routing could eliminate
40% of the electricity expenditure of Akamai’s traﬃc alloca-
tion, without appreciably increasing client-server distances.
As idle server power and PUE rise, we see a dramatic drop in
possible savings: at Google’s published elasticity level (65%
idle, 1.3 PUE), the maximum savings have dropped to 5%.
Inelasticity constrains our ability to route power demand
away from high prices.
Bandwidth Costs. A reduced electric bill may be over-
shadowed by increased bandwidth costs. Figure 15 therefore
also shows the savings when we prevent clusters from hav-
ing higher 95th percentile hit rates than were observed in
the Akamai data. We see that constraining bandwidth in
this way may cause energy savings to drop down to about a
third of their earlier values. However, the good news is that
these savings are reductions in the total operating cost.
By jointly optimizing bandwidth and electricity, it should
be possible to acquire part of the economic value represented
by the diﬀerence between savings with and without band-
width constraints.
Distance and Savings. The savings in ﬁgure 15 do not
represent a free lunch: the mean client-server distance may
need to increase to leverage market diversity.
The price conscious routing scheme we use has a dis-
tance threshold parameter, allowing us to explore how higher
client-server distances lead to lower electric bills. Figure 16
shows how increasing the distance threshold can be used to
reduce electricity costs. Figure 17 shows how client-server
distances change in response to changes in the threshold.
At a distance threshold of 1100km, the 99th percentile
estimated client-server distances is at most 800km. This
should provide an acceptable level of performance (the dis-
tance between Boston and Alexandria in Virginia is about
650km and network RTTs are around 20ms).
At this threshold, using the future energy model, the sav-
ings is signiﬁcant, between 10% (obey 95/5 constraints) and
20%. There is an elbow at a threshold of 1500km, causing
both savings and distances to jump (the distance between
Boston and Chicago is about 1400km). After this, increas-
ing the threshold provides diminishing returns.
131t
s
o
c
y
a
d
-
4
2
d
e
z
i
l
a
m
r
o
N
1.00
0.95
0.90
0.85
0.80
0.75
0.70
0.65
Akamai allocation
Follow original 95/5 constraints
Relax 95/5 constraints
 0
 500
 1000
 1500
 2000
 2500
Distance threshold (km)
1.00
0.90
0.80
0.70
0.60
t
s
o
c
d
e
z
i
l
a
m
r
o
N
0.50
 0
Akamai-like routing
Only use cheapest hub
Follow original 95/5 constraints
Relax 95/5 constraints
 500
 1000
 1500
 2000
 2500
Distance threshold (km)
Figure 16: 24-day electricity costs fall as the distance
threshold is increased. The costs shown here are for a
(0% idle, 1.1 PUE) model, normalized to the cost of the
Akamai allocation.
Figure 18: 39-month electricity costs fall as the distance
threshold is increased. The costs shown here are for a
(0% idle, 1.1 PUE) model, normalized to the cost of the
synthetic Akamai-like allocation.
Boston-DC
Boston-Chicago
mean distance (ignore 95/5)
99th percent (ignore 95/5)
mean distance
99th percent
)
m
k
(
e
c
n
a
t
s
d
i
r
e
v
r
e
S
-
t
n
e
i
l
C
 1600
 1400