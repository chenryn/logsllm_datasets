# global result  
wresult=0  
cresult=0  
# set env  
. /usr/local/nagios/etc/check_pg_env.sh  
# monitor  
# 错误阈值.  
BOND="'1 hour'"  
WARN_CNT=100  
CRIT_CNT=200  
# 本脚本不支持8.x的版本  
for i in "HZXY_CHECK_PG_LOCK_1" "HZXY_CHECK_PG_LOCK_5"  
do  
  eval CONN_INFO="$"$i  
  create_csvlogtable  
  load_csvlog  
  analyze_csvlog  
done  
# exit global proc  
if [ $cresult -eq 1 ]; then  
exit 2  
fi  
if [ $wresult -eq 1 ]; then  
exit 1  
fi  
exit 0  
```  
5\. 由于nagios check有超时机制, 建议做成异步（如crontab）. 也就是说本地定时CHECK. 将数据写入LOG中.  
nagios的check脚本检查LOG的输出.  
修改后的两个脚本如下 :   
```  
-- 放在crontab 中定期执行的脚本  :   
#!/bin/bash  
# 环境变量  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib  
export DATE=`date +"%Y%m%d%H%M"`  
export PATH=$PGHOME/bin:$PATH:.  
export MANPATH=$PGHOME/share/man:$MANPATH  
export PGPASSFILE=/etc/.pgpass  
if [ $# -ne 0 ]; then  
  echo "USE $0"  
  exit 0  
fi  
create_csvlogtable() {  
# debug  
# echo $CONN_INFO  
VER=`psql -q -t $CONN_INFO -c "select '9' from (select substr(version(),12,1) as ver) t where ver::int>=9"|grep -c 9`  
if [ $VER -ge 1 ]; then  
# PostgreSQL 9+  
IS_STDBY=`psql -q -t $CONN_INFO -c "select 'this_is_standby' as a where pg_is_in_recovery();"|grep -c this_is_standby`  
if [ $IS_STDBY -ge 1 ]; then  
  return 0  
fi  
psql -q -t $CONN_INFO =9"|grep -c 9`  
if [ $VER -ge 1 ]; then  
  IS_STDBY=`psql -q -t $CONN_INFO -c "select 'this_is_standby' as a where pg_is_in_recovery();"|grep -c this_is_standby`  
  if [ $IS_STDBY -ge 1 ]; then  
    return 0  
  fi  
fi  
if [ $VER -ge 1 ]; then  
psql -q -t $CONN_INFO = now() loop  
v_sql := \$_\$COPY postgres_log FROM '\$_\$||v_dir||'/'||v_filename||\$_\$' WITH csv\$_\$;  
raise notice '%', v_sql;  
execute v_sql;  
end loop;  
end;  
\$\$;  
EOF  
else  
# PostgreSQL 8.x 不支持do language, 所以使用函数.  
echo "PostgreSQL 8.x : $CONN_INFO"  
psql -q -t $CONN_INFO = now() loop  
v_sql := \$_\$COPY postgres_log FROM '\$_\$||v_dir||'/'||v_filename||\$_\$' WITH csv\$_\$;  
raise notice '%', v_sql;  
execute v_sql;  
end loop;  
return;  
end;  
\$\$ language plpgsql;  
select * from load_csvlog();  
EOF  
fi  
}  
analyze_csvlog() {  
VER=`psql -q -t $CONN_INFO -c "select '9' from (select substr(version(),12,1) as ver) t where ver::int>=9"|grep -c 9`  
if [ $VER -ge 1 ]; then  
  IS_STDBY=`psql -q -t $CONN_INFO -c "select 'this_is_standby' as a where pg_is_in_recovery();"|grep -c this_is_standby`  
  if [ $IS_STDBY -ge 1 ]; then  
    return 0  
  fi  
fi  
# 严重警告  
CNT=`psql -q -t $CONN_INFO -c "select 'GET_IT' from postgres_log where error_severity<>'LOG' having count(*) >= $CRIT_CNT;"|grep -c "GET_IT"`  
if [ $CNT -ge 1 ]; then  
  cresult=1  
  echo -e "CHECK ERRORs>$CRIT_CNT. return 2\n"  
# nagios 将|视为status和performance info的分隔符, 所以需要调整一下psql的输出格式  
    psql -F ',' -A -q -t $CONN_INFO 'LOG'   
      group by inet_server_addr(),inet_server_port(),error_severity,sql_state_code   
      having count(1)>100  
      order by count(1) desc;  
EOF  
return 0  
fi  
# 警告  
CNT=`psql -q -t $CONN_INFO -c "select 'GET_IT' from postgres_log where error_severity<>'LOG' having count(*) >= $WARN_CNT;"|grep -c "GET_IT"`  
if [ $CNT -ge 1 ]; then  
  wresult=1  
  echo -e "CHECK ERRORs>$WARN_CNT. return 1\n"  
    psql -F ',' -A -q -t $CONN_INFO 'LOG'   
      group by inet_server_addr(),inet_server_port(),error_severity,sql_state_code   
      having count(1)>100  
      order by count(1) desc;  
EOF  
return 0  
fi  
}  
# global result  
wresult=0  
cresult=0  
# set env  
. /usr/local/nagios/etc/check_pg_env.sh  
# monitor  
# 错误阈值.  
BOND="'1 hour'"  
WARN_CNT=500  
CRIT_CNT=1000  
LOGFILE=/tmp/check_pg_csvlog.log  
TMPLOGFILE=/tmp/check_pg_csvlog.log.tmp  
# 清除tmp数据  
echo "" >$TMPLOGFILE  
for i in "HZ_CHECK_PG_LOCK_1" "HZ_CHECK_PG_LOCK_2"  
do  
  eval CONN_INFO="$"$i  
  create_csvlogtable  
  load_csvlog  
  analyze_csvlog >>$TMPLOGFILE 2>&1  
done  
# 替换数据  
cat $TMPLOGFILE >$LOGFILE  
# exit global proc  
if [ $cresult -eq 1 ]; then  
exit 2  
fi  
if [ $wresult -eq 1 ]; then  
exit 1  
fi  
exit 0  
```  
nagios的check脚本 :   
```  
#!/bin/bash  
# 环境变量  
export LANG=en_US.utf8  
export PGHOME=/opt/pgsql  
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib  
export DATE=`date +"%Y%m%d%H%M"`  
export PATH=$PGHOME/bin:$PATH:.  
export MANPATH=$PGHOME/share/man:$MANPATH  
LOGFILE=/tmp/check_pg_csvlog.log  
CNT=`cat $LOGFILE|grep -c -E "ERROR|FATAL"`  
if [ $CNT -ge 1 ]; then  
  RETVAL2=`cat $LOGFILE|grep -c "return 2"`  
  if [ $RETVAL2 -ge 1 ]; then  
    # summary  
    echo -e "CHECK ERRORs DB IP:"  
    cat $LOGFILE|grep -v "^\$"|grep -v "CHECK ERRORs"|awk -F ',' '{print $1}'|sort|uniq  
    # detail  
    echo -e "\n DETAIL:"  
    cat $LOGFILE|grep -v "^\$"|grep -v "CHECK ERRORs"  
    exit 2  
  fi  
  RETVAL1=`cat $LOGFILE|grep -c "return 1"`  
  if [ $RETVAL1 -ge 1 ]; then  
    # summary  
    echo -e "CHECK ERRORs DB IP:"  
    cat $LOGFILE|grep -v "^\$"|grep -v "CHECK ERRORs"|awk -F ',' '{print $1}'|sort|uniq  
    # detail  
    echo -e "\n DETAIL:"  
    cat $LOGFILE|grep -v "^\$"|grep -v "CHECK ERRORs"  
    exit 1  
  fi  
  cat $LOGFILE  
  exit 4  
fi  
```  
## 参考  
1\. http://blog.163.com/digoal@126/blog/static/1638770402013121102459107/  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")