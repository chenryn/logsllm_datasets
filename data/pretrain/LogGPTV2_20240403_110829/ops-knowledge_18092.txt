User: 如何编写Shell脚本自动化处理日志文件分析和传输？请提供样例代码和详细步骤。
Assistant: 在Linux系统中，我们可以使用Shell脚本自动化处理日志文件分析和传输。以下是一个样例代码，该脚本会从指定目录中读取日志文件，分析日志内容并按指定的格式传输到指定的目标主机。

```
#!/bin/bash

# 日志目录
log_dir="/var/log/apache2/"

# 目标主机IP地址
target_host="192.168.1.100"

# 目标主机端口号
target_port="22"

# 目标主机的用户名
target_user="root"

# 目标主机的密钥文件路径
key_file="/root/.ssh/id_rsa"

# 处理日志文件
for logfile in $(ls $log_dir)
do
    # 统计日志中访问次数最多的前10个IP地址
    top_ips=$(grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b" $log_dir/$logfile | sort | uniq -c | sort -rn | head -n 10)
    
    # 格式化输出，并传输到目标主机
    formatted_log="日志文件：$logfile\n\n访问次数最多的IP地址：\n$top_ips\n\n"
    ssh -i $key_file -p $target_port $target_user@$target_host "echo \"$formatted_log\" >> /root/logs/top_ips.log"
done
```

上述脚本包括以下步骤：

1. 设置日志目录，目标主机IP地址、端口号、用户名和密钥文件路径。

2. 循环遍历日志目录中的所有日志文件，并从其中获取访问次数最多的前10个IP地址。

3. 格式化输出日志内容，并以追加模式将其传输到目标主机上的指定文件中。

需要注意的是，传输过程中需要在目标主机上配置好SSH免密登录，并将公钥添加到目标主机的authorized_keys文件中。

同时，我们也可以根据具体需求灵活修改脚本内容和实现逻辑，以实现对日志文件的自动化处理和传输。