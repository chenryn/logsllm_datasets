，就不需要再考虑其他规
awk 脚本慢一些。在
第九章函数
实际上，
是
所
第
---
## Page 224
函数的返回值为5，即字符串中第一个大写字母“U”的位置。
match("the UNIX operating system", /[A-Z]+/)
UNIXoperating system”中的所有大写字母序列匹配。
match（）函数返回与正则表达式匹配的子串的开始位置，你可能会认为它和函
达式在第二个位置，
参数，
match（）函数用于确定一个正则表达式是否和指定的字符串匹配。它需要两个
match（）函数
POSIX awk 提供了两个函数，
建一个 shelI实现，使用一些标志来决定调用哪个程序。
如果你希望可以选择使用字母或数字作为标题编号，则需要维护两个程序并创
数index（）有紧密的联系。
注意：
test 
的
大小写转换
为一个备份，其中所有的字符串都发生了转换（分别为大写变小写和小写变大
, , 
$  awk
, 
Good-bye CRUEL world!
Hel lo, World!
$ cat test
字符串和正则表达式（这个函数容易产生混淆，因为这个函数中正则表
非字母表中的字符没有发生转换。
 2.5 Using Sed and Awk Together
2.4 Using Awk 
2.3 Using Sed 
7
2.1 Awk, by Sed and Grep, out of Ed 
{ printf(",
 and away we GO!
. 2 Command-line Syntax 
QQ群：
，而在替换函数中正则表达式在第一个位置）。
2.3.2 Script Files 
2.3.1 Specifying Simple Instructions
2.2.2
2.2.1 Scr ipting 
50192241
2 Sample Mailing List
。在下面的例子中，
用于完成字符串中字符的大小写转换。函数为
。每个函数需要一个字符串参数，并返回该字符串
\n", tolower($O)， toupper($O)） }′
- 224 -
，3， AND AWAY WE GO!>
正则表达式和字符串“the
第九章函数
---
## Page 225
match脚本对于我们进一步理解正则表达式是一个很有用的工具。
下面是一个验证运行，给出一个正则表达式来匹配“emp”和一个空格之前的所
配。
回值作为一个条件来使用。如果当前记录与模式匹配，那么字符串将从$O中提
第一个命令行参数被作为 pattern 的值传递。注意，$1 是用引号括起来的、这
起来）以及要查找的文件名。
shell脚本包含两个命令行参数：正则表达式（这个正则表达式必须用引号括
于说明在第三章“了解正则表达式语法”中讨论的“匹配的范围”。
让我们来参见一个简单的例子，打印出与指定的正则表达式匹配的字符串，
RLENGTH设置为-1。在前面的例子中，RSTART 的值是5，而RLENGTH 的值是4
字符数（而不是子串的结束位置）
这个函数的返回值，即匹配子串的开始位置。RLENGTH 中包含匹配的字符串的
match（）函数也设置了两个系统变量：RSTART和RLENGTH.RSTART中包含
有
开
取
么match（）函数返回O，如果存在，
中
用于保护出现在正则表达式中的任何空格。match（）函数出现在条件表达式
（将它们相加后可以得到匹配之后的第一个字符的位置）。
字符.
千始位置和长度。
又，在 substr（）函数中使用 RSTART 和 RLENGTH 的值来指定被提取的子串的
，用于控制 awk 脚本中惟一的一个过程的执行。如果匹配的模式不存在，那
employee
emp loyee'
emp loyment,
$ match "emp[ ］*" personnel.txt
emp loyer
employee
match($0, pattern)
#对于模式的行
empl oyment
emp I oyee.
employees
pattern="$1" $2
print substr ($O, RSTART, RLENGTH)
#
#提取匹配中的模式的字符串
#
打印字符串
用字符串在$O中的开始位置和长度
QQ群：
S
，同时打印该子串。这个过程只恶化$O中第一次出现的子串匹
：打印匹配行的字符串
50192241
-225 -
当模式不匹配时，RSTART设置为O，
则返回非零值（RSTART）
第九章函数
可以将这个返
下面的
而
用
---
## Page 226
如果在一行中出现多次相同的字母，gsub（）能够进行多个替换。
的小写字母来替换（注2），
什么循环用“ ARRAY[j]; --j)
of before_tmp:
ARRAY[j] = ARRAY[j-1]
temp = ARRAY[j] 
（i = 2;
50192241
ELEMENTS, temp,
，因为它的名字放在函数定义的参数列表中。变量
<= ELEMENTS; ++i） {
并且函数对这个备份执行操作，
用来从y个数据中挑选×个随机