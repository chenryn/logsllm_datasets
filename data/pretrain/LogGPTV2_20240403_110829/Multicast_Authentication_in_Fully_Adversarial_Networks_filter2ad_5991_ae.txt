ﬁed, its (authenticated) hashes are stored and subsequent packets need
only be veriﬁed with respect to the hashes they carry. Because of that,
injected packets do not necessarily cause signature veriﬁcations.
Graph-Based Schemes. These schemes [12, 22, 19, 27] as-
sume the reliable receipt of a signature packet. However, a
fully adversarial network will capture the signature packet
and invalidate the scheme. Even if the signature packet is
assumed to arrive intact, any efﬁcient scheme in terms of
communication overhead (i.e., with constant overhead for
packet) will have the undesirable property that O(1) critical
packets can be adversarially chosen to disconnect from the
authentication chain the signature node (packet). In the pig-
gybacking scheme in [19], this number of critical packets
can be O(n) at the expense of a communication overhead
of O(n) per packet. Our scheme does not have these draw-
backs since the signature is dispersed among all the pack-
ets. As opposed to graph-based authentication where the au-
thentication of a packet crucially depends on other packets
(with packets closer to the signature packet being more im-
portant), our scheme is symmetric in this context: all pack-
ets share the authentication information.
Erasure-Code Schemes. These schemes [21, 20] make use
of erasure codes to tolerate packet losses, up to a constant
fraction. However, no packet injections are tolerated: a sin-
gle injected packet sufﬁces to fail the decoding procedure.
For networks where packets get only lost, they perform
slightly better than our scheme in terms of communication
cost and time complexity. This is due to the fact that era-
sure codes are more efﬁcient than error-correcting codes in
terms of time complexity and space requirement. Moreover,
erasure codes can tolerate more erasures than the theoreti-
cal limit d=2 for error correcting codes (d is the diameter
of the code). In [15], the authors address the vulnerabil-
ity to packet injections that any scheme based on erasure-
codes has, but their proposed scheme has high communi-
cation overhead and is not scalable, because a Merkle hash
tree is used to “ﬁlter out” the injected packets (and thus the
communication cost is O(log n)).
Other Schemes. TESLA [22] and the scheme by Xu and
Sandhu [29] have very different assumptions from our
model. They are both based on MACs and on strong time-
synchronization requirements about the nodes of the net-
works that do not ﬁt our model. For instance, in [29],
the routers of the networks are considered trusted enti-
ties.
Table 2 summarizes the above discussion, were se-
lected schemes are compared with our scheme. In particu-
lar, we consider two graph-based authentication schemes,
one of constant degree (expander construction [27]) and
one of O(n) degree (piggybacking scheme with parameter-
ized performance [19], where we assume a constant num-
ber of classes), and one erasure scheme (optimized in terms
of communication scheme [20]).
6. Conclusion
In this paper, we propose a new general framework for
the multicast authentication problem, where the network is
controlled by an adversary that has great, yet not unlimited,
power in modifying the transmitted stream. Our model is re-
alistic in terms the of adversarial model and the security as-
sumptions. The limitations on the adversary’s power, char-
acterized by the survival and ﬂood rates, exclude from con-
sideration only degenerate cases, where the authentication
problem actually disappears.
Our work establishes a new direction in multicast au-
thentication by going beyond erroneous networks and ad-
dressing fully adversarial networks. Our authentication
scheme is efﬁcient, lightweight and practical. It is as se-
cure as the “sign-all” solution, but more efﬁcient in both
computational effort and communication overhead. Its con-
stant communication overhead makes it scalable and prefer-
able to the approach by Wong and Lam [28]. When com-
pared with this Merkle-tree based scheme,
the O(n2)
time complexity of our scheme is a shortcoming. How-
ever, it is possible that in practice this may not be a serious
concern. Additionally, our scheme can be tuned by the net-
work parameters ﬁ and ﬂ and distinguishes between
the less expensive detection of an attack by the adver-
sary and the more expensive task of veriﬁcation.
Open problems to address in future work are as follows.
First, we would like to investigate the practical performance
of our multicast authentication approach by implementing it
and conducting an experimental study. Also, a natural ques-
tion to explore is whether other classes of error correcting
codes can be employed in our framework.
Moreover, in this paper we showed a connection be-
tween coding theory and cryptography. In particular, we
employed cryptographic primitives to unambiguously list-
decode an error correcting code. It would be interesting to
study whether there are other connections between the two
areas. Finally, we would like to explore the use of our tech-
nique in other authentication problems.
Acknowledgments
We would like to thank Philip Klein for useful discus-
sions and also Christoph Schuba and the anonymous refer-
ees for their detailed comments.
This work was supported in part by the National Science
Foundation under grants CCR–0311510 and IIS–0324846
(Information Technology Research program).
References
[1] D. Boneh, G. Durfee, and M. Franklin. Lower bounds for
multicast message authentication.
In B. Pﬁtzmann, edi-
tor, Advances in Cryptology — EUROCRYPT 2001, volume
2045 of Lecture Notes in Computer Science, pages 437–452.
Springer Verlag, 2001.
[2] D. Boneh and M. Franklin. Identity-based encryption from
the Weil pairing. In J. Kilian, editor, Advances in Cryptology
— CRYPTO 2001, volume 2139 of Lecture Notes in Com-
puter Science, pages 213–229. Springer Verlag, 2001.
[3] D. Boneh, B. Lynn, and H. Shacham. Short signatures from
the Weil pairing.
In Advances in Cryptology, ASIACRYPT
2001, volume 2248 of Lecture Notes in Computer Science,
pages 514–532. Springer-Verlag, 2001.
[4] R. Canetti, J. Garay, G. Itkis, D. Micciancio, M. Naor, and
B. Pinkas. Multicast security: A taxonomy and some efﬁ-
cient constructions.
In IEEE INFOCOM, pages 708–716,
1999.
[5] A. C.-F. Chan. A graph-theoretical analysis of multicast au-
thentication. In Proc. 23rd International Conference on Dis-
tributed Computing Systems – ICDCS, pages 155–162, 2003.
[6] R. Cramer and V. Shoup. Signature schemes based on the
strong RSA assumption.
In Proc. 6th ACM Conference
on Computer and Communications Security, pages 46–52.
ACM press, Nov. 1999.
[7] T. Cucinotta, G. Cecchetti, and G. Ferraro. Adopting re-
dundancy techniques for multicast stream authentication. In
Proc. 9th IEEE International Workshop on Future Trends of
Distributed Computing Systems (FTDCS 2003), pages 189–
201, 2003.
[8] Y. Desmedt, Y. Frankel, and M. Yung. Multi-receiver/multi-
authenticated multi-
sender network security: Efﬁcient
cast/feedback.
In IEEE Conference on Computer Commu-
nications — INFOCOM ’92, pages 2045–2054. IEEE-Press,
1992.
[9] M. Fischlin.
The Cramer-Shoup strong-RSA signature
scheme revisited. In Y. Desmedt, editor, Public Key Cryptog-
raphy - PKC 2003, volume 2567 of Lecture Notes in Com-
puter Science. Springer-Verlag, 2002.
[10] R. Gennaro and P. Rohatgi. How to sign digital streams. In
B. Kaliski, editor, Advances in Cryptology — CRYPTO ’97,
volume 1294 of Lecture Notes in Computer Science, pages
180–197. Springer Verlag, 1997.
Sign-all Merkle [28]
GB [27] GB [19] Erasure [20]
Delay S
Computation S
Sign
hash
ﬁeld op
Communication
Delay R
Computation R
Verify
hash
ﬁeld op
Secret key protection
Resiliency
Chosen packet loss
Chosen packet injection
Signature dispersal
1
n
—
—
ns
1
n
—
—
—
†
†
†
n
1
2n
—
n
1
O(n)
—
n(s + h log n) O(nh)
n
1
O(n2)
—
O(n2h)
n
1
n
1
O(n)
O(n2)
—
†
—
†
—
—
†
†
†
—
1
1
2n
—
†
†
†
†
Our
n
1
n
n
1
n
n
O(n log n) O(n log n)
ﬁ2 n
ﬂn
hﬂ(1+†)
ﬁhn
1
n
O(n2)
†
†
—
†
O(1)
ﬂn
~O(n2)
†
†
†
†
Table 2. Comparison of selected multicast authentication approaches with respect to various as-
pects of efﬁciency, security and resiliency. By S (resp. R) we denote the sender (resp. receiver), Sign
denotes a signature operation, Verify denotes a signature veriﬁcation, hash denotes the total hash-
ing cost, where we consider that the complexity of hashing a string is a linear function of the string
size. Also, we use the following notation: n is the number of packets in the data stream, s is the sig-
nature size and h is the hash size. Both the communication overhead and the computational costs
refer to n packets.
[11] S. Goldwasser, S. Micali, and R. Rivest. A digital signa-
ture scheme secure against adaptive chosen-message attacks.
SIAM Journal on Computing, 17(2):281–308, Apr. 1988.
[12] P. Golle and N. Modadugu. Authenticating streamed data in
In Network and Dis-
the presence of random packet loss.
tributed System Security Symposium —NDSS ’01, pages 13–
22, 2001.
[13] V. Guruswami. List Decoding of Error-correcting Codes.
PhD thesis, Massachusetts Institute of Technology, Boston,
MA, 2001.
[14] V. Guruswami and M. Sudan. Improved decoding of Reed-
Solomon and algebraic-geometric codes. In IEEE Transac-
tions on Information Theory, pages 45:1757–1767, 1999.
[15] C. Karlof, Y. Li, and N. Sastry. Authenticated block streams
using error detecting erasure codes. Manuscript. Avail-
able from http://www.cs.berkeley.edu/˜nks/
edec/bcast-class.pdf, 2003.
[16] M. Luby. LT codes. In 43rd Annual IEEE Symposium on
Foundations of Computer Science (FOCS ’02), 2002.
[17] M. G. Luby, M. Mitzenmacher, M. A. Shokrollahi, D. A.
Spielman, and V. Stemann. Practical loss-resilient codes.
In 29th Annual ACM Symposium on Theory of Computing
(STOC ’97), pages 150–159, 1997.
[18] S. Micali. 6.875: Introduction to cryptography. MIT course
taught in Fall 1997.
[19] S. Miner and J. Staddon. Graph-based authentication of dig-
ital streams. In IEEE Symposium on Security and Privacy,
pages 232–246, 2001.
[20] A. Pannetrat and R. Molva. Efﬁcient multicast packet au-
thentication. In Proc. Network and Distributed System Secu-
rity Symposium — NDSS ’03, 2003.
[21] J. M. Park, E. K. P. Chong, and H. J. Siegel. Efﬁcient mul-
ticast packet authentication using signature amortization. In
IEEE Symposium on Security and Privacy, pages 227–240,
2002.
[22] A. Perrig, R. Canetti, J. Tygar, and D. Song. Efﬁcient au-
thentication and signing of multicast stream over lossy chan-
nels.
In IEEE Symposium on Security and Privacy, pages
56–73, 2000.
[23] M. O. Rabin. Efﬁcient dispersal of information for secu-
rity, load balancing, and fault tolerance. Journal of ACM,
36(2):335–348, 1989.
[24] I. S. Reed and G. Solomon. Polynomial codes over certain ﬁ-
nite ﬁelds. SIAM Journal of Applied Mathematics, 8(2):300–
304, 1960.
[25] P. Rohatgi. A compact and fast hybrid signature scheme for
multicast packet authentication. In Proc. 6th ACM Confer-
ence on Computer and Communications Security, pages 93–
100. ACM, 1999.
[26] G. J. Simmons. Authentication theory/coding theory.
In
Proceedings of the Conference on Advances in Cryptol-
ogy (CRYPTO’84, Santa Barbara,CA), LNCS 196, Springer-
Verlag, pages 411–431, 1984.
[27] D. Song, D. Zuckerman, and J. D. Tygar. Expander graphs
for digital stream authentication and robust overlay net-
works. In IEEE Symposium on Security and Privacy, pages
258–27, 2002.
[28] C. K. Wong and S. S. Lam. Digital signatures for ﬂows and
multicasts.
In Proceedings of the 1998 International Con-
ference on Network Protocols (ICNP ’98), pages 198–209,
Austin, Texas, Oct. 1998.
[29] S. Xu and R. Sandhu. Authenticated multicast immune to
denial-of-service attack. In Proc. ACM Symposium on Ap-
plied Computing, pages 196–200, Madrid, Spain, Mar. 2002.