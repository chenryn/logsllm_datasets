By forcing 
codes and modifying 
certain 
exercise 
DET and WdgM. Furthermore, 
ulation 
This feature 
framework because 
framework itself 
was particularly 
was functioning 
API calls to return error 
it is possible 
data structures, 
mechanisms 
to 
such as the 
of the sim­
manual control 
it gave us rapid insight 
useful while developing 
the 
into whether the 
correctly. 
allows faults to be visualized 
as they are injected. 
to Inject many protocol­
errors) 
access to the in­
of hardware 
frame decoding 
It is not possible 
simply have limited 
using 
directly 
fault-injection 
hooks imple­
Flexibility. 
level faults (e.g., 
this framework. In general, 
mented in software 
ternal functions 
hardware 
However, 
faults 
been successfully 
[ 10, 12] and FlexRay [9] controllers. 
We had hoped that the 
simulated 
parency. 
Noe is more high-level, 
only be accessed 
the level of abstraction 
and the simulated 
its external 
in CANoe would allow similar 
methods using simulated 
communication 
interfaces. 
controller 
directly 
in CAN 
provided 
by CA­
employed 
However, 
models have 
to inject 
trans­
controller 
can 
through 
Another limitation 
is that the SWIFI DLL cannot dif­
controllers. 
between calls to hooks made from multiple 
ferentiate 
AUTOSAR DLLs. Therefore, 
port a single fault-injection 
would allow the framework 
cascading 
and correlated 
faults 
the framework can only sup­
node. Removing this limitation 
to support 
involving 
scenarios 
among multiple 
ECUs 
mod­
the required 
in a separate 
No auto-generated 
files need to be modified, 
codebase 
changes to AUTOSAR codebase 
code or system-specific 
Using hooks in the AUTOSAR code allows 
logic to be implemented 
Portability. 
fault injection 
ule,  keeping 
minimal. 
uration 
strumented AUTOSAR 
However, 
some of the hooks target arguments 
spond to implementation-specific 
ture, it might be desirable 
ters that are defined in the AUTOSAR specification. 
would allow greater 
portability 
AUTOSAR implementations 
to target only the API parame­
This 
which allows the same in­
to be used across projects. 
data-structures. 
of the SWIFI DLL across 
from different 
vendors. 
drawback 
to certain 
arguments 
types of faults. 
(such as the length of a data 
to this approach 
probe effects 
be expected 
on the faulty node. However, 
Probe effects. The principal 
is that it is difficult to avoid simulation-wide 
when injecting 
For example, 
modi­
fications 
buffer) would normally 
ruption 
memory space with and within the CANoe simulator, 
jecting 
attempting 
artificial 
simulation. 
directly 
delays into tasks can potentially 
in­
simulation. 
to cause timing violations 
such a fault crashes 
because nodes share 
to cause memory cor­
block the entire 
the entire 
that corre­
certain 
config­
In the fu­
Similarly, 
by inserting 
7. Related Work 
memory address 
associated with 
in [7]. Here, we focus on fault injection 
techniques 
changes (e.g., 
due to recompilation), 
the 
the automotive 
domain. 
A useful overview 
available 
that specifically 
target 
of general 
fault injection 
techniques 
is 
meaning of the fault location 
does not. Temporal 
Faults can be injected 
Manipulating 
data structures, 
allows specific 
as opposed 
components 
memory locations, 
within the AUTOSAR stack to be tar­
Controllability. 
to arbitrary 
and functionality 
geted. Even if the physical 
a data structure 
semantic 
repeatability 
ual triggering. 
as accurate 
is an implementation 
As noted in Section 
able to provide 
Such context 
conditions, 
is currently 
extended 
limited 
by our initial 
focus on man­
The activation 
as the user "flipping 
and duration 
the switch". 
of faults 
is only 
However, 
this 
design issue. 
issue and not an inherent 
4, non-modifiable 
arguments 
context 
to fault-injection 
are avail­
hooks. 
can be used to define more specific trigger 
using scripts. 
which could then be automated 
Observability 
Observability. 
level failure 
mecha­
nisms. If a fault is masked by an error-handling 
modes and existing 
is restricted 
error-handling 
mechanism, 
to application­
directly 
into hardware 
by expos­
or Electromagnetic 
Interference 
was used to investigate 
ing it to heavy-ion radiation 
(EMI). Heavy ion fault injection 
the fail-silence 
Time-Triggered 
Another study compared error propagation 
and star network  topologies 
of the 
(TTP/C) protocol 
[ 13]. 
in TTP/C bus 
ProtocoVClass-C 
and membership 
assumption 
service 
[ 1]. 
can also work at the bus-level 
Fault-injection 
hardware 
can be used to inject 
in order to target the communication 
These devices 
(e.g, by shorting 
tations 
One such device, 
the bus lines) or to inject fault manifes­
(e.g., 
the TTPDisturbance 
Node, was used along 
by employing 
indirectly 
physical 
protocol 
faults 
directly 
specifically. 
CRC recalculation). 
978-1-4244-7501-8/10/$26.00 
©201O IEEE 
573 
DSN 2010: Lanigan et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:03:03 UTC from IEEE Xplore.  Restrictions apply. 
20lO IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
with EMI injection 
connector 
faults 
in TTP/C [ 1 1]. 
to evaluate 
a strategy 
for diagnosing 
Acknowledgements 
Software-implemented 
fault injection 
specifically 
(SWIFI) tech­
for use in automo­
niques have been proposed 
tive time-triggered 
vironment 
target-specific 
use of hooks in our framework was inspired 
networks. 
a modularized 
approach 
follows 
code from system-independent 
The FITS fault injection 
en­
that separates 
code [6]. The 
by FITS. 
Sandeep Menon and 
Motors R&D. Sandeep is the orig­
The authors wish to acknowledge 
Larry Peru ski at General 
inal developer 
study. Larry Peru ski provided 
helping 
us become familiar 
demo that we adapted 
for this 
a great deal of support 
in 
with the lab equipment. 
of the by-wire 
Software-based 
and hardware-based techniques 
are com­
References 
using heavy 
fault-injection 
locations 
in the com­
(e.g., 
Hardware-based 
controller) 
plementary. 
ions or EMI can access physical 
munication 
However, 
get specific 
the process.  Bus-level 
ing a variety 
faults 
hardware-based 
into the internal 
software 
are very effective 
of protocol-level 
faults, 
at inject­
but they cannot inject 
devices 
memory of individual 
ECUs. 
that software hooks simply cannot. 
cannot accurately 
tar­
modules due to the random nature of 
techniques 
[1] A. Ademaj et al. Evaluation 
of fault handling of the time­
Conference 
triggered  architecture 
national 
(DSN), pages 123-132. 
[2] J. Arlat et al. Fault injection 
with bus and star topology. In Inter­
on Dependable 
Systems and Networks 
IEEE Computer Society, June 2003. 
validation: 
IEEE Transactions 
16(2):166-182, 
Feb 1990. 
for dependability 
methodology and some applications. 
Software Engineering, 
A 
on 
[3] AUTOSAR GbR. Layered Software Architecture, 
2008. 
8. Summary 
Document ID 053. http://www.autosar.org. 
and exploitation 
[4] H. Fennel et al. Achievements 
TOSAR development 
ries 2006-21-0019, 
partnership. 
[5] H.-G. Frischkorn. 
SAE International, 
Automotive software -the silent revolu­
of the AU­
SAE Technical Paper Se­
October 2006. 
developed 
code insertion) 
in a simulated 
environment 
here uses software-implemented 
tion. Automotive Software Workshop, Jan 2004. 
The framework 
techniques 
(e.g., 
(e.g., 
by injecting 
data structures. 
forcing 
CANoe). Manipulation 
hooks cause errors indirectly, 
faults into the memory occupied 
by specific 
hooks cause errors directly, 
Suppression 
by 
AUTOSAR API calls to return error codes. 
[6] R. Hexel. Fits: A fault injection 
systems. In Australasian 
triggered 
ference (ACSC), volume 16, pages 333-338. 
for time­
Computer Science Con­
architecture 
ACS, Feb 2003. 
[7] M.-C. Hsueh, T. K. Tsai, and R. K. Iyer. Fault injection 
techniques 
[8] ISO/DIS 26262: Road vehicles 
and tools. Computer, 30(4):75-82, 
Apr 1997. 
vol­
safety, 
- Functional 
The errors 
quickly 
caused by injected 
in CANoe. Visible 
were observed 
faults 
differences 
when similar 
were able to be visu­
in application­
ume 4-6. International 
2009. 
Geneva, Switzerland, 
components. 
However, 
faults 
were 
CANoe did 
[9] V. Lari et al. Assessment of message missing failures 
in 
Sympo­
networks. In Pacific Rim Internation 
Organization 
for Standardization, 
an ideal environment 
for injecting 
certain 
probe effects. Value faults can 
AUTOSAR BSW components 
faults 
us­
fiexray-based 
sium on Dependable 
IEEE Computer Society, Dec 2007. 
Computing (PRDC), pages 191-194. 
[10] J. Perez, M. S. Reorda, and M. Violante. 
Accurate depend­
but specialized 
bus-level 
would be better suited to injecting 
can be successfully 
faults 
fault injection 
protocol-level 
injected 
and vi­
ability analysis of CAN-based networked systems. In Sym­
posium on Integrated 
pages 337-342. 
IEEE Computer Society, Sept 2003. 
con­
and H. Paulitsch. 
[11] P. Peti, R. Obermaisser, 
Circuits and Systems Design (SBCCI), 
Investigating 
when they fit within the level of abstraction 
that 
Considering 
that we were dancing 
on the 
to do, CANoe 
of what the tool was designed 
quite satisfactorily. 
nector faults in the time-triggered 
Technologies 
896. IEEE, Sept 2006. 
In Emerging 
pages 887-
and Factory Automation  (ETFA), 
architecture. 
[12] H. Salmani and S. G. Miremadi. Contribution 
of controller 
into specific 
into different 
alized 
level manifestation 
injected 
not provide 
due to simulation-wide 
be injected 
ing this framework, 
hardware 
faults. 
sualized 
CANoe provides. 
boundaries 
performed 
Overall, 
While this study cannot, 
as 
study of AUTOSAR, the described 
frame­
and should not, be construed 
how faults 
to provide 
developed 
a dependability 
the basis for 
work could be further 
such a study. Given that this was a feasibility 
study, the 
focus was on determining 
ing the tools available 
could be, or should be, injected. 
is required 
locations 
hooks, and how the injected 
fault models. 
A more in-depth 
AUTOSAR 
to us, but not necessarily 
the most appropriate 
and data structures 
to determine 
could be injected 
us­
which faults 
study 
to target with fault-injection 
faults 
correspond 
to common 
area networks controllers 
cific Rim International 
Comput­
ing (PRDC), page 5. IEEE Computer Society, Dec 2005. 
Symposium on Dependable 
to masquerade failures. In Pa­
[13] H. Sivencrona, 
P. Johannessen, 
and J. Torin. Protocol mem­
bership in dependable distributed 
a question of brittleness. 
01-0108, 
SAE International, 
Mar 2003. 
communication 
systems -
SAE Technical Paper Series 2993-
[14] D. Wilson. Ray of hope for auto industry. Electronic 
Busi­
ness, Nov 2006. 
978-1-4244-7501-8/10/$26.00 
©2010 IEEE 
574 
DSN 20lO: Lanigan et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:03:03 UTC from IEEE Xplore.  Restrictions apply.