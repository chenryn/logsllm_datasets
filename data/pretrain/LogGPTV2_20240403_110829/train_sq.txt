pread.2
read.2
readv.2
sendfile.2
write.2
    michael kerrisk
        clarify that linux limits transfers to a maximum of 0x7ffff000 bytes
            see https://bugs.debian.org/629994 and
            https://bugs.debian.org/630029.
pread.2
    michael kerrisk
        rewrite return value section
            (also drop the text on pwrite() returning zero; that seems bogus.)
ptrace.2
    michael kerrisk  [vegard nossum]
        ptrace_o_traceexit clarification
readv.2
    michael kerrisk
        remove bugs heading
            the text on mixing i/o syscalls and stdio is a general point
            of behavior. it's not a bug as such.
recv.2
send.2
    michael kerrisk
        explain some subtleties of msg_dontwait versus o_nonblock
rename.2
    michael kerrisk
    michael kerrisk
        note that rename_noreplace can't be employed with rename_exchange
sched_setaffinity.2
    michael kerrisk
        add an example program
    michael kerrisk  [florian weimer]
        explain how to deal with 1024-cpu limitation of glibc's cpu_set_t type
    michael kerrisk
        mention the use of the 'isolcpus' kernel boot option
sched_setattr.2
    julian orth
        remove a const attribute
            the attr argument of sched_setattr was documented as const but the
            kernel will modify the size field of this struct if it contains an
            invalid value. see the documentation of the size field for details.
seccomp.2
    michael kerrisk
        see also: add bpf(2)
send.2
    michael kerrisk
        expand on subtleties of msg_nosignal versus ignoring sigpipe
sigaltstack.2
    zeng linggang
        attributes: note function that is thread-safe
socket.2
    stephan mueller
        update documentation reference for af_alg
truncate.2
    michael kerrisk
        errors: ftruncate() can fail if the file descriptor is not writable
utimensat.2
    zeng linggang
        attributes: note functions that are thread-safe
            after research, we think utimensat() and futimens() are thread-safe.
            but, there are not markings of utimensat() and futimens() in glibc
            document.
clearenv.3
    zeng linggang
        attributes: note function that is not thread-safe
dl_iterate_phdr.3
    zeng linggang
        attributes: note function that is thread-safe
error.3
    zeng linggang
        attributes: note functions that are/aren't thread-safe
fexecve.3
    zeng linggang
        attributes: note function that is thread-safe
fpurge.3
    zeng linggang
        attributes: note function that is thread-safe
fread.3
    andries e. brouwer
        clarify terminology
            in the "return value" section the word item is in italics
            as if it were one of the function parameters. but the word
            "item" occurs here for the first time, earlier the text
            uses "element". [patch improves this.]
fts.3
    zeng linggang
        attributes: note functions that are/aren't thread-safe
getaddrinfo.3
    zeng linggang
        attributes: note functions that are thread-safe
getaddrinfo_a.3
    zeng linggang
        attributes: note functions that are thread-safe
getauxval.3
    michael kerrisk
        file capabilities also trigger at_secure
    michael kerrisk
        (briefly) document at_hwcap2
getgrent_r.3
    zeng linggang
        attributes: note functions that are/aren't thread-safe
gethostbyname.3
    michael kerrisk  [laszlo ersek]
        remove mention of ipv6 addresses, which are not supported
            as reported by laszlo ersek:
                gethostbyname(3) fails to resolve the ipv6 address "::1",
                but the manual page says: "if name is an ipv4 or ipv6 address,
                no lookup is performed and gethostbyname() simply copies name
                into the h_name field [...]".
                debian bug report:
                http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=455762
                glibc bug report:
                http://sourceware.org/bugzilla/show_bug.cgi?id=5479
                susv3 link for gethostbyname(3):
                http://www.opengroup.org/onlinepubs/000095399/functions/gethostbyname.html
                it seems that the glibc behavior is conformant, and the manual
                page is in error.
getifaddrs.3
    zeng linggang
        attributes: note functions that are thread-safe
getnameinfo.3
    zeng linggang
        attributes: note function that is thread-safe
getnetent_r.3
    zeng linggang
        attributes: note functions that are thread-safe
getprotoent.3
    zeng linggang
        attributes: note functions that aren't thread-safe
getprotoent_r.3
    zeng linggang
        attributes: note functions that are thread-safe
getpw.3
    zeng linggang
        attributes: note function that is thread-safe
getpwent_r.3
    zeng linggang
        attributes: note functions that are/aren't thread-safe
getrpcent.3
    zeng linggang
        attributes: note functions that are/aren't thread-safe
getrpcent_r.3
    zeng linggang
        attributes: note functions that are thread-safe
getrpcport.3
    zeng linggang
        attributes: note function that is thread-safe
getservent.3
    zeng linggang
        attributes: note functions that aren't thread-safe
getservent_r.3
    zeng linggang
        attributes: note functions that are thread-safe
gsignal.3
    zeng linggang
        attributes: note functions that are thread-safe
key_setsecret.3
    zeng linggang
        attributes: note functions that are thread-safe
malloc_get_state.3
    zeng linggang
        attributes: note functions that are thread-safe
malloc_info.3
    zeng linggang
        attributes: note function that is thread-safe
malloc_stats.3
    zeng linggang
        attributes: note function that is thread-safe
malloc_trim.3
    zeng linggang
        attributes: note function that is thread-safe
mb_len_max.3
    michael kerrisk
        clarify meaning of mb_len_max
    michael kerrisk  [p√°draig brady]
        mb_len_max is 16 in modern glibc versions
memcpy.3
    michael kerrisk
        notes: describe the glibc 2.13 changes that revealed buggy applications
            adding a note on this point seems worthwhile as a way of
            emphasizing the point that the buffers must not overlap.
mq_notify.3
    zeng linggang
        attributes: note function that is thread-safe
perror.3
    michael kerrisk
        some wording improvements and clarifications
profil.3
    zeng linggang
        attributes: note function that is not thread-safe
psignal.3
    zeng linggang
        attributes: note functions that are thread-safe
pthread_attr_init.3
    zeng linggang
        attributes: note functions that are thread-safe
    michael kerrisk
        use "%zd" for printing size_t in example code
pthread_attr_setaffinity_np.3
    zeng linggang
        attributes: note functions that are thread-safe
pthread_cancel.3
    zeng linggang
        attributes: note function that is thread-safe
pthread_cleanup_push.3
    zeng linggang
        attributes: note functions that are thread-safe
pthread_create.3
    zeng linggang
        attributes: note function that is thread-safe
pthread_detach.3
    zeng linggang
        attributes: note function that is thread-safe
pthread_getattr_np.3
    zeng linggang
        attributes: note function that is thread-safe
pthread_join.3
    zeng linggang
        attributes: note function that is thread-safe
pthread_setname_np.3
    zeng linggang
        attributes: note functions that are thread-safe
pthread_tryjoin_np.3
    zeng linggang
        attributes: note functions that are thread-safe
putgrent.3
    zeng linggang
        attributes: note function that is thread-safe
rcmd.3
    zeng linggang
        attributes: note functions that are/aren't thread-safe
resolver.3
    zeng linggang
        attributes: note functions that are thread-safe
rpc.3
    zeng linggang
        attributes: note functions that are thread-safe
rpmatch.3
    zeng linggang
        attributes: note function that is thread-safe
sem_close.3
    zeng linggang
        attributes: note function that is thread-safe
sem_open.3
    zeng linggang
        attributes: note function that is thread-safe
setaliasent.3
    zeng linggang
        attributes: note functions that are/aren't thread-safe
setlocale.3
    marko myllynen
        update conforming to
            http://pubs.opengroup.org/onlinepubs/9699919799/functions/setlocale.html
setlocale.3
    marko myllynen
        tweak c/posix locale portability description
            as discussed earlier, the current description might be a little
            bit too stringent, let's avoid the issue by describing the
            portability aspect on a slightly higher level.
            references:
            http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/v1_chap06.html
            http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/v1_chap07.html
            http://pubs.opengroup.org/onlinepubs/9699919799/functions/setlocale.html
shm_open.3
    zeng linggang
        attributes: note functions that are thread-safe
strfmon.3
    marko myllynen
        document strfmon_l(3)
            describe strfmon_l(3).
            http://pubs.opengroup.org/onlinepubs/9699919799/functions/strfmon.html
    marko myllynen
        fix conforming to
            afaics strfmon(3) is now defined in posix and the glibc
            implementation is as specified there.
            http://pubs.opengroup.org/onlinepubs/9699919799/functions/strfmon.html
    marko myllynen
        rewrite the example
            i think the example is more accurate when we use the exact
            locale names and also the euro sign where appropriate.
xcrypt.3
    zeng linggang
        attributes: note functions that are thread-safe
xdr.3
    zeng linggang
        attributes: note functions that are thread-safe
console_codes.4
    scot doyle  [pavel machek, michael kerrisk]
        add csi sequence for cursor blink interval
            add a console private csi sequence to specify the current
            console's cursor blink interval. the interval is specified
            as a number of milliseconds until the next cursor display
            state toggle, from 50 to 65535.
null.4
    michael kerrisk
        note that reads from /dev/zero are interruptible since linux 2.6.31
core.5
    michael kerrisk
        mention 'coredump_filter' boot option
host.conf.5
    michael kerrisk
        wording fix: s/resolv+/the resolver library/
            the term "resolv+" seems to be historical cruft.
hosts.equiv.5
    carlos o'donell
        fix format, clarify idm needs, and provide examples.
            in some recent work with a red hat customer i had the opportunity
            to discuss the fine nuances of the ruserok() function and related
            api which are used to implement rlogin and rsh.
            it came to my attention after working with qe on some automated
            internal testing that there were no good examples in the hosts.equiv
            manual page showing how the format was supposed to work for this
            file and for ~/.rhosts, worse the "format" line showed that there
            should be spaces between arguments when that would clearly lead
            to incorrect behaviour. in addition some things that the format
            allows you to write are just wrong like "-host -user" which makes
            no sense since the host is already rejected, and should be written
            as "host -user" instead. i added notes in the example to make it
            clear that "-host -user" is invalid.
            i fixed three things:
            (a) the format line.
            - either +, or [-]hostname, or +@netgrp or -@netgrp.
            - either +, or [-]username, or +@netgrp or -@netgrp.
            - you must specify something in the hostname portion so remove
              optional brackets.
            (b) clarify language around credentials
            - if the host is not trusted you must provide credentials to
              the login system and that could be anything really and it
              depends on your configuration e.g. pam or whatever idm you have.
            (c) provide real-world examples
            - provide several real world examples and some corner case
              examples for how you would write something. hopefully others
              can add examples as they see fit.
    michael kerrisk  [carlos o'donell, arjun shankar]
        improve explanation in example
locale.5
    marko myllynen
        document map to_inpunct, map to_outpunct
            see e.g. fa_ir for reference.
    marko myllynen
        document class in lc_ctype
            see e.g. the locale zh_cn and
            http://en.cppreference.com/w/cpp/string/wide/towctrans
            http://en.cppreference.com/w/cpp/string/wide/wctrans
    marko myllynen
        add iconv(1) reference
    marko myllynen
        document character transliteration
            see e.g. da_dk for reference.
            (not sure should we actually provide an example here?)
    marko myllynen
        document era keywords
            this patch completes the lc_time section - since these era
            keywords are so tightly coupled, i'm providing them as a
            single patch.
            based on
            http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap07.html
            http://www.open-std.org/jtc1/sc22/wg20/docs/n972-14652ft.pdf
    marko myllynen
        document default_missing
    marko myllynen
        document outdigit and alt_digits
            see e.g. fa_ir for reference.
    marko myllynen
        refer to locale(7) more prominently
            it's probably a good idea to refer to locale(7) so that a reader
            can check what a category is about before describing them in
            detail.
    marko myllynen
        document charclass and charconv
            see e.g. the locales ja_jp and ko_kr and
            http://en.cppreference.com/w/cpp/string/wide/towctrans
            http://en.cppreference.com/w/cpp/string/wide/wctrans
    marko myllynen
        copy is not exclusive in lc_ctype and lc_collate
            see e.g. da_dk for reference.
    marko myllynen
        remove the fixme for timezone
            the timezone of lc_time is not in posix, only 6 (out of ~300)
            glibc locales define it, the glibc code comment below from
            glibc.git/programs/ld-time.c seems to suggest it's not a good
            idea, and there's been a proposal in upstream [1] to remove the
            existing timezone definitions from glibc locales so i think
            it's actually better to leave this one undocumented:
            /* xxx we don't perform any tests on the timezone value since this is
               simply useless, stupid $&$!@...  */
            1) https://sourceware.org/ml/libc-alpha/2015-06/msg00098.html
            move the remaining lc_collate fixmes together while at it.
    marko myllynen
        fix country_isbn format
            both plain numbers and unicode code points are used in
            glibc locales but checking the code reveals that country_isbn
            is handled like the rest of its category expect for country_num
            which was clarified earlier.
    marko myllynen
        sort according to the standard
            sort the options so that those defined in posix are listed first,
            then followed by those defined in iso/iec tr 14652 in the order
            of common convention in many widely used glibc locales.
            actual descriptions are unchanged.
            http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/v1_chap07.html
    marko myllynen
        refer to strftime(3) where appropriate
            the relationship between the locale time format syntax
            and strftime() cannot be considered as obvious.
    marko myllynen
        document map "totitle"
            see e.g. locales/i18n for reference.
    michael kerrisk  [marko myllynen]
        remove bugs section saying man page is not complete
            to some degree, this is true of many pages. and anyway, this
            page is much better after recent work by marko.
proc.5
    michael kerrisk
        list /proc/vmstat fields
    michael kerrisk
        tweak /proc/vmstat text
    michael kerrisk
        add /proc/crypto entry with a pointer to further information
    michael kerrisk  [kees cook]
        document /proc/sys/kernel/sysctl_writes_strict
            based on text in documentation/sysctl/kernel.txt.
    michael kerrisk
        move misordered /proc/[pid]/timers entry
    michael kerrisk
        refer to bpf(2) for explanation of /proc/sys/net/core/bpf_jit_enable
repertoiremap.5
    marko myllynen
        symbolic names aka mnemonics
            a long time ago in glibc, repertoire maps were used (but they
            were removed already in 2000), those mapping files were named
            as mnemonics, so "mnemonic" is a term that would almost
            certainly come up if somebody studies glibc side (perhaps even
            the related standards like iso 9945 [which i don't have access
            to]) so i thought it's worth to mention to term in the man page
            to make sure we're talking about the same thing, otherwise
            someone might wonder is that something different or not.
            iow, symbolic names and mnemonics are often used interchangeably,
            let's mention the other often used term in the page, too.
capabilities.7
    michael kerrisk
        cap_sys_admin allows calling bpf(2)
locale.7
    marko myllynen
        lc_ctype determines transliteration rules on glibc systems
packet.7