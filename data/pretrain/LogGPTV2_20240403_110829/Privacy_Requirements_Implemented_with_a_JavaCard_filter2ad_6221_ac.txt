# Anonymization and Data Processing in Medical Research

## 1. Introduction
This document outlines the anonymization and data processing procedures for medical research projects, such as cancer research protocols. The suggested anonymization procedure is designed to protect patient data while allowing for statistical, epidemiological, and medico-economical studies.

## 2. Anonymization Procedure
### 2.1. Overview
The anonymization process involves several steps, including hashing, encryption, and decryption, to ensure that patient data remains confidential and secure.

#### 2.1.1. Transformations
- **T1 (Hashing):** Generates an anonymous identifier per person and per project.
- **T2 (Encryption):** Encrypts the anonymous identifier with a hospital-specific key.
- **T2-1 (Decryption):** Decrypts the encrypted data at the processing center.
- **T3 (Filtering):** Applies targeted filtering to the anonymized data before distribution.

### 2.2. Detailed Steps
- **T1: Anonymous Identifier Generation**
  - **IDApat|Proj = H (IDproj | IDpat)**
  - **IDproj:** Project identifier
  - **IDpat:** Patient anonymous identifier (a random number)
  - **H:** One-way hash function (e.g., SHA-2)

- **T2: Encryption**
  - **IDAproj(pat|Proj) = {IDApat|Proj}Kshosp**
  - **Kshosp:** Hospital-specific key
  - **{M}K:** Indicates M is encrypted with key K

- **T2-1: Decryption**
  - **[IDAproj(pat|Proj)]Kphosp = [{IDApat|Proj}Kshosp]Kphosp = IDApat|Proj**
  - **Kphosp:** Decryption key known only by the processing centers and the hospital's security officer

- **T3: Targeted Filtering**
  - **IDApat|util = H (IDApat|Proj | Kutil|proj)**
  - **Kutil|proj:** Secret key generated randomly
  - **Storage of Kutil|proj:**
    - **Full-time linking:** Key stored by the processing center
    - **Forbid linking:** Key generated just before each distribution

## 3. Architecture and Components
### 3.1. System Architecture
The system architecture includes the following components:
- **Medical DB:** Contains patient medical data.
- **Patient Card:** Stores the patient's anonymous identifier (IDpat).
- **Project DB:** Database specific to each project.
- **Hospital:** Manages administrative, medical, and anonymized databases.
- **Health Care Professional (HCP) Card:** Stores HCP certificates.
- **Anonymous DB per Project:** Contains anonymized data for a specific project.
- **Administrative DB:** Contains administrative data.
- **Project Creation Server:** Manages project creation and key generation.
- **Processing Center:** Processes and filters the anonymized data.
- **End User DB:** Final user database containing filtered and anonymized data.

### 3.2. Implementation
#### 3.2.1. Platforms
- **Unix:** HP 9000/L2000, HPUX 11.00
- **Linux:** Athlon 1.4 GHz, Mandrake Linux 10, kernel v2.6.3.4
- **Macintosh:** Power G3 600MHz, MacOS X 10.x
- **Windows**

#### 3.2.2. Requirements
- **Disk Space:** 50 MB
- **Database:** MySQL or Oracle 10g
- **Java JRE:** 1.4.2 or later
- **Smartcard Configuration:**
  - **RAM:** 1 KB
  - **EEPROM:** 16 KB
  - **ROM:** 24 KB
  - **JavaCard 2.1**

#### 3.2.3. Software Components
- **Patient Cards:** Store patient anonymous identifiers.
- **HCP Cards:** Store HCP certificates.
- **Hospital Keys:** Public and private keys.
- **Certification Authority Public Key:** For authentication.

### 3.3. Key Generation
- **Asymmetric Keys (RSA):**
  - **Key Length:** 2048 bits
  - **KeyPairGenerator:** Generates RSA key pairs
  - **Exception Handling:** Manages exceptions during key generation

```java
public static KeyPair generateRSAKey() throws RSAException {
    KeyPairGenerator kpg;
    KeyPair kp;
    try {
        kpg = KeyPairGenerator.getInstance("RSA");
    } catch (NoSuchAlgorithmException nsae) {
        throw new RSAException("Algorithm does not exist");
    }
    kpg.initialize(2048);
    kp = kpg.generateKeyPair();
    if (kp == null) {
        throw new RSAException("Error generating key pair");
    }
    return kp;
}
```

## 4. Conclusion
The proposed anonymization and data processing procedures ensure the confidentiality and security of patient data while enabling comprehensive medical research. The use of smartcards and cryptographic techniques provides a robust solution for managing and protecting sensitive medical information.

---

**Figure 2: The suggested anonymization procedure.**

**Figure 3: Architecture scheme.**

**Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005)**  
**1063-9527/05 $20.00 Â© 2005 IEEE**  
**Authorized licensed use limited to: Tsinghua University. Downloaded on March 25, 2021, at 12:13:01 UTC from IEEE Xplore. Restrictions apply.**