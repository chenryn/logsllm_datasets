Please:
  * Check for duplicate issues.
  * Provide a complete example of how to reproduce the bug, wrapped in triple backticks like this:
`psum` will fail when using `value_and_grads` but it will succeed if call it
directly
    import jax
    def fn(arg_0):
        return jax.lax.psum(arg_0, [-1]).sum()
    mykey = jax.random.PRNGKey(21847582)
    array = jax.random.uniform(mykey, [2], jax.numpy.float32, minval=-8, maxval=64)
    arg_0 = array.clone()
    print(fn(arg_0))
    # 25.462376
    arg_0 = array.clone()
    jax.value_and_grad(fn, (0))(arg_0)
    # ValueError: reduction axes (-1,) contains out-of-bounds indices for ShapedArray(float32[2]).
  * If applicable, include full error messages/tracebacks.
    ---------------------------------------------------------------------------
    ValueError                                Traceback (most recent call last)
     in 
         11 
         12 arg_0 = array.clone()
    ---> 13 jax.value_and_grad(fn, (0))(arg_0)
        [... skipping hidden 8 frame]
     in fn(arg_0)
          2 results = dict()
          3 def fn(arg_0):
    ----> 4     return jax.lax.psum(arg_0, [-1]).sum()
          5 
          6 mykey = jax.random.PRNGKey(21847582)
        [... skipping hidden 14 frame]
    /usr/local/lib/python3.9/site-packages/jax/_src/lax/lax.py in _reduce_op_shape_rule(***failed resolving arguments***)
       3488     raise ValueError(f"duplicate value in 'axes' of reduction: {axes}")
       3489   if not all(0  3490     raise ValueError(f"reduction axes {axes} contains out-of-bounds indices for {operand}.")
       3491   axes = frozenset(axes)
       3492   return tuple(d for i, d in enumerate(operand.shape) if i not in axes)
    ValueError: reduction axes (-1,) contains out-of-bounds indices for ShapedArray(float32[2]).