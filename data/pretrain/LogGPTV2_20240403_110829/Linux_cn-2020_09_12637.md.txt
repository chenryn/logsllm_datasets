---
author: Sandra Henry-Stocker
category: 技术
comments_data: []
count:
  commentnum: 0
  favtimes: 1
  likes: 0
  sharetimes: 0
  viewnum: 3718
date: '2020-09-21 22:32:11'
editorchoice: false
excerpt: stat 命令还可以用来创建文件列表。这些列表非常灵活，你可以选择包含上述任何或全部信息。
fromurl: https://www.networkworld.com/article/3573802/using-the-linux-stat-command-to-create-flexible-file-listings.html
id: 12637
islctt: true
largepic: /data/attachment/album/202009/21/223030wi3xfx2eprij13z2.jpg
permalink: /article-12637-1.html
pic: /data/attachment/album/202009/21/223030wi3xfx2eprij13z2.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: stat 命令不仅可以提供详细的文件信息，还可以用于创建灵活的文件列表。
tags:
- stat
thumb: false
title: 使用 Linux stat 命令创建灵活的文件列表
titlepic: true
translator: geekpi
updated: '2020-09-21 22:32:11'
---

![](/data/attachment/album/202009/21/223030wi3xfx2eprij13z2.jpg)

`stat` 命令提供了关于文件的详细信息，包括最近更改、访问和权限变更的时间，文件大小和块数，inode 和文件类型，以及文件所有者和组的信息。它以“rwx”（人类可读格式）和数字形式显示文件权限。在某些系统中，它甚至可以显示文件的创建日期和时间（称为“出生时间”）。

除了提供这些信息外，`stat` 命令还可以创建灵活的文件列表。用户可以选择包含上述任何或全部信息。

要生成一个自定义列表，只需使用 `stat` 命令的 `-c`（或 `--format`）选项，并指定所需的字段。例如，要创建一个以两种格式显示文件权限的列表，可以使用以下命令：

```bash
$ stat -c '%n %a %A' my*
my.banner 664 -rw-rw-r--
mydir 775 drwxrwxr-x
myfile 664 -rw-rw-r--
myjunk 777 lrwxrwxrwx
mykey 664 -rw-rw-r--
mylog 664 -rw-rw-r--
myscript 755 -rwxr-xr-x
mytext 664 -rw-rw-r--
mytext.bak 664 -rw-rw-r--
mytwin 50 -rw-r-----
mywords 664 -rw-rw-r--
```

在这个例子中，`%n` 代表文件名，`%a` 代表八进制权限，`%A` 代表 `rwx` 格式的权限。完整的字段列表见下文。

为该命令创建别名，可以输入如下命令或在 `.bashrc` 文件中添加这个定义：

```bash
$ alias ls_perms="stat -c '%n %a %A'"
```

要创建一个类似于 `ls -l` 的长列表，可以执行以下命令：

```bash
$ stat -c '%A %h %U %G %s %y %n' my*
-rw-rw-r-- 1 shs shs 255 2020-04-01 16:20:00.899374215 -0400 my.banner
drwxrwxr-x 2 shs shs 4096 2020-09-07 12:50:20.224470760 -0400 mydir
-rw-rw-r-- 1 shs shs 6 2020-05-16 11:12:00.460355387 -0400 myfile
lrwxrwxrwx 1 shs shs 11 2020-05-28 18:49:21.666792608 -0400 myjunk
-rw-rw-r-- 1 shs shs 655 2020-01-14 15:56:08.540540488 -0500 mykey
-rw-rw-r-- 1 shs shs 8 2020-03-04 17:13:21.406874246 -0500 mylog
-rwxr-xr-x 1 shs shs 201 2020-09-07 12:50:41.316745867 -0400 myscript
-rw-rw-r-- 1 shs shs 40 2019-06-06 08:54:09.538663323 -0400 mytext
-rw-rw-r-- 1 shs shs 24 2019-06-06 08:48:59.652712578 -0400 mytext.bak
-rw-r----- 2 shs shs 228 2019-04-12 19:37:12.790284604 -0400 mytwin
-rw-rw-r-- 1 shs shs 1983 2020-08-10 14:39:57.164842370 -0400 mywords
```

与 `ls -l` 相比，主要区别在于：
1. 不会尝试将字段对齐成整齐的一列；
2. 日期格式为 `yy-mm-dd`；
3. 时间字段更精确；
4. 显示时区（例如 `-0400` 表示 EDT）。

若想根据最后一次访问日期列出文件，可以使用以下命令：

```bash
$ stat -c '%n %x' my* | sort -k2
mytwin 2019-04-22 11:25:20.656828964 -0400
mykey 2020-08-20 16:10:34.479324431 -0400
mylog 2020-08-20 16:10:34.527325066 -0400
myfile 2020-08-20 16:10:57.815632794 -0400
mytext.bak 2020-08-20 16:10:57.935634379 -0400
mytext 2020-08-20 16:15:42.323391985 -0400
mywords 2020-08-20 16:15:43.479407259 -0400
myjunk 2020-09-07 10:04:26.543980300 -0400
myscript 2020-09-07 12:50:41.312745815 -0400
my.banner 2020-09-07 13:22:38.105826116 -0400
mydir 2020-09-07 14:53:10.171867194 -0400
```

在使用 `stat` 列出文件细节时，可用的选项包括：

- `%a`：八进制的访问权限
- `%A`：人类可读的访问权限
- `%b`：分配的块数
- `%B`：每个块的字节数
- `%C`：SELinux 安全上下文字符串
- `%d`：十进制的设备编号
- `%D`：十六进制的设备编号
- `%f`：十六进制的原始模式
- `%F`：文件类型
- `%g`：所有者的组 ID
- `%G`：所有者的组名
- `%h`：硬链接的数量
- `%i`：inode 编号
- `%m`：挂载点
- `%n`：文件名
- `%N`：如果是符号链接，解引用为指向的文件名
- `%o`：最佳 I/O 传输大小提示
- `%s`：以字节为单位的总大小
- `%t`：十六进制的主要设备类型
- `%T`：十六进制的次要设备类型
- `%u`：所有者的用户 ID
- `%U`：所有者的用户名
- `%w`：文件创建时间（人类可读形式）
- `%W`：文件创建时间（UNIX 纪元以来的秒数）
- `%x`：上次访问时间（人类可读形式）
- `%X`：上次访问时间（UNIX 纪元以来的秒数）
- `%y`：上次数据修改时间（人类可读形式）
- `%Y`：上次数据修改时间（UNIX 纪元以来的秒数）
- `%z`：上次状态改变时间（人类可读形式）
- `%Z`：上次状态改变时间（UNIX 纪元以来的秒数）

这些字段的选择都列在手册页中，可以根据需要选择。通过创建一些常用的别名，可以省去很多麻烦。有些选项，如 SELinux 安全上下文字符串，只有在系统中使用时才可用。文件创建时间只有在系统保留该信息的情况下才可用。

via: 
作者：[Sandra Henry-Stocker](https://www.networkworld.com/author/Sandra-Henry_Stocker/) 选题：[lujun9972](https://github.com/lujun9972) 译者：[geekpi](https://github.com/geekpi) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出