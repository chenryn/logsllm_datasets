Hi! I'm using Glide in my project.
Like some people, I had a problem，`How can I fetch a loaded image file from
cache?`
I read the Glide api carefully ,and found `downloadOnly` ,but it can not solve
my problem,  
Only need to get the picture cache, if not loaded do not need to download.
And then I read the Glide api again,found the `EngineKey` is key。  
finally，I replace the `EngineKey.java`,  
![image](https://cloud.githubusercontent.com/assets/7588760/23538285/3d100f58-000d-11e7-8595-a71495799c68.png)
    public class EngineKey implements Key {
        private static final String EMPTY_LOG_STRING = "";
        private  String id;
        private  Key signature;
        private String stringKey;
        private int hashCode;
        private Key originalKey;
        public EngineKey(String id, Key signature, int width, int height, ResourceDecoder cacheDecoder,
                         ResourceDecoder sourceDecoder, Transformation transformation, ResourceEncoder encoder,
                         ResourceTranscoder transcoder, Encoder sourceEncoder){
            this(id,signature);
        }
        public EngineKey(String id, Key signature) {
            this.id = id;
            this.signature = signature;
        }
        public EngineKey(String id) {
            this(id, EmptySignature.obtain());
        }
        public Key getOriginalKey() {
            if (originalKey == null) {
                originalKey = new OriginalKey(id, signature);
            }
            return originalKey;
        }
        @Override
        public boolean equals(Object o) {
            if (this == o) {
                return true;
            }
            if (o == null || getClass() != o.getClass()) {
                return false;
            }
            EngineKey engineKey = (EngineKey) o;
            if (!id.equals(engineKey.id)) {
                return false;
            } else if (!signature.equals(engineKey.signature)) {
                return false;
            }
            return true;
        }
        @Override
        public int hashCode() {
            if (hashCode == 0) {
                hashCode = id.hashCode();
                hashCode = 31 * hashCode + signature.hashCode();
            }
            return hashCode;
        }
        @Override
        public String toString() {
            if (stringKey == null) {
                stringKey = new StringBuilder()
                        .append("EngineKey{")
                        .append(id)
                        .append('+')
                        .append(signature)
                        .append('}')
                        .toString();
            }
            return stringKey;
        }
        @Override
        public void updateDiskCacheKey(MessageDigest messageDigest) throws UnsupportedEncodingException {
            signature.updateDiskCacheKey(messageDigest);
            messageDigest.update(id.getBytes(STRING_CHARSET_NAME));
        }
    }
use like that:
    String url = "http://xxxxxx";
    ExternalCacheDiskCacheFactory factory = new ExternalCacheDiskCacheFactory(activity);
    File file = factory.build().get(new EngineKey(url));