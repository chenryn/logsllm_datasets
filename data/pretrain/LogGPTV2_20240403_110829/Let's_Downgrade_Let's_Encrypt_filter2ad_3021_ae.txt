✓
✗
✓
✓
#Time
outs
1
2
10
4
2
16
2
2
Block MultiVA
(min)
5
10+
10+
10+
10+
10+
15
10+
✗
✗
✗
✗
✗
✗
✓
✗
Table 4: Infrastructure of popular CAs and our evaluations.
All our blocking methodologies apply to other CAs as well. We
only needed to apply slight modifications according to the be-
haviour of the DNS software at each CA. For instance, the number
of the required timeout differs (column ‘#Timeouts’), as well as
the length of the blocking interval (column ‘Block’), during which
the DNS software avoids querying the blocked nameserver. We
conclude that all the CAs are vulnerable to nameserver-elimination,
which exposes them to extremely effective off-path attacks.
Similarly to the analysis in Section 4.3.4, we obtain that 11.75%
of the 857K-Alexa domains, for which the CAs (in Table 4) can
be forced to query a specific nameserver, that is on a network
vulnerable to sub-prefix hijack.
4.5 How Fast is Short-Lived Hijack?
The goal of our attacker is to do a short-lived hijack to avoid detec-
tion. It is believed that short-lived traffic shifts are caused by the
configuration errors (that are quickly caught and fixed) and since
they do not have impact on network load or connectivity, they are
largely ignored [17, 37, 38].
There are a number of factors which contribute to the overall
latency of the attack, nevertheless, how fast the attacker can carry
out such attack depends predominantly on the speed at which
the malicious BGP announcements propagate to the forwarding
plane at the target victim AS. The main role in this latency play the
updates of the received BGP announcements at the Autonomous
System Boundary Router (ASBR), which is used to exchange routing
information with the ASes. There is a rule that a BGP announce-
ment should be delayed until the local route is installed in BGP
Forwarding Table (FIB), so the announcement is not causing tem-
porary blackholing. For instance, if the receiving router is much
faster to pick up on the new announcement and starts sending the
traffic before the FIB is fully converged. That is the main factor
of the propagation delay and it is a delay introduced by a BGP
12131415161718192021222324Prefix Length0.0%10.0%20.0%30.0%40.0%PercentageLE VAsOther CAsLE DomainsAlexa DomainsSession 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1431timer, which limits the rate at which routing announcements are
transmitted.
In this experiment we evaluate the ability to process route changes
on popular routing platforms, in response to a new BGP announce-
ment, measuring the time it takes for the new route to be installed
and used in the FIB on the line card. During the experiment we
populate the routing and forwarding tables with data, generate and
send BGP announcements and initiate the measurements. We mea-
sure convergence delay, i.e., the latency between the time that the
BGP announcement is sent by the originator until the propagation
of the information into the forwarding plane at ASBR with each
box. In our evaluations we send BGP announcements with 300,000
IPv4 prefixes, hence measuring convergence between control and
data plane at high load. The resulting latency is in the order of tens
of seconds, and is device dependent. The slowest was CISCO 7600
platform with above 30 seconds and was representative among old
platforms we tested. Newer platforms, such as Cisco ASR 9901 and
Juniper MX204, are much faster with overall time being between 5
and 10 seconds, even when routers have multiple full BGP feeds.
The fastest results were obtained with Arista 7280R3, which had an
almost instant propagation time of a second. Our findings show that
the convergence delay depends on CPU power and efficiency of the
implementation and our evaluations results demonstrate high vari-
ance (between one second and tens of seconds). For instance, the
Cisco 7600 platform tested by us was released in 2000s with control-
plane module Sup720 with just 2x 600MHz MIPS CPUs. Modern
platforms, like Junipers MX204, have 8-core Xeon-D @2.2GHz and
they run soft-real time Linux kernel and on top of that are two vir-
tualised instances of JunOS control-plane in QEMU/KVM, resulting
in much faster processing times, not only because the box has more
CPU power but also because of the more efficient software stack.
The evaluation results are summarised in Table 5.
Year BGP router
2001 CISCO 7600
2005 CISCO IOS XR 9000
2006
2008 CISCO ASR 9001
2009 Alcatel Lucent 7750SR
2010 Arista 7280R3
Juniper MX204
FIB Convergence
>30sec
500ms
5-10sec
5-10sec
3sec
1sec
Table 5: BGP convergence on popular routing platforms.
5 COUNTERMEASURES
Unpredictable VAs selection. Our attacks used the fact that the
adversary knows in advance the set of VAs that perform the val-
idation: the network blocks of the VAs are publicly known. The
network blocks and the set of the VAs is small. This allowed our
downgrade attack to be carried out against each VA, forcing the
VAs to query attacker-selected nameserver for the next 15 minutes.
This provides the adversary sufficient time to obtain fraudulent cer-
tificates. If the VAs are selected from a large set of network blocks
at random, such that the adversary cannot efficiently attack them
in advance, the downgrade attack would be much more challenging
to launch in practice. This would enhance the security of DV with
multiVA even against MitM adversaries.
Resilient nameserver-selection. The nameserver selection
algorithms of the CAs should be made robust by selecting the
nameservers uniformly at random, even those with poor perfor-
mance. If a nameserver does not respond, the query is resent to
another nameserver after a timeout. This would prevent our off-
path server-elimination methodologies. The additional latency to
the certification would not be significant.
Turning off caches. Turning off caches does not prevent the
cache poisoning attack [35] but makes it more difficult to launch.
Caches allow to inject a malicious mapping between the victim
domain and the IP address of the attacker, which is subsequently
used for running domain validation against the target domain. Al-
though Let’s Encrypt limits the caching duration to 60 seconds, it
still suffices for attacking the lookup phase to redirect to attacker’s
hosts. The validation is then run against the hosts of the attacker.
The entire attack concludes within two minutes. If there are no
caches the attacker has to keep the hijacked prefixes over longer
time periods, which may make the attack more visible.
DNSSEC against domain hijacks. DNSSEC [RFC4033-4035]
could prevent the attacks, however, recent works showed that more
than 35% of signed domains are vulnerable to key recovery attacks
[21, 56].
Preventing BGP hijacks with RPKI. If fully deployed RPKI
[RFC6480] would prevent prefix hijack attacks. Our measurements
show that most networks do not filter hijacking BGP announce-
ments with Route Origin Validation (ROV). The ASes of Let’s En-
crypt do not apply ROV, hence even if the domains have a valid
ROA, it does not prevent the hijacks. In addition, only 86 out of
17,864 ASes on our dataset of domains (2M Alexa and Let’s Encrypt
domains, Table 2) apply ROV. Worse, 57% ASes have ROAs, out
of which 32.4% ROAs are invalid, and hence can be hijacked. A
full adoption of RPKI (both the prefix certificates with ROAs and
validation with ROV) although would not prevent all the possible
attacks against DV, it would prevent the prefix hijack attacks.
Detecting Fraudulent Certificates with CT. A Certificate Trans-
parency (CT) log [42] could expose a fraudulent certificate and
allow a CA to quickly revoke it. We measured the rate at which our
fraudulent certificates with Let’s Encrypt appear in the logs of CT
monitors. We registered with the notification third party services
which continuously monitor CT logs and notify via email when a
certificate for required domain is issued. We also registered with
search services which provide API for retrieving logged certificates
by domain name.
We observed that it took some monitors a few hours to fetch our
fraudulent certificates. Furthermore, some of the monitors exhibited
failures and did not detect the fraudulent certificates. Our results
are aligned with the recent study which found that the monitors
provide unreliable service [45]. The damage of our attack would
have been done by the time the attack is detected. Indeed, the
damage of such attacks is the highest in the first hour, e.g., [54].
6 RELATED WORK
Domain validation. Domain validation plays a central role in
the PKI ecosystem and in Internet security. Flaws in DV can be
exploited to obtain fraudulent certificates. Some CAs were shown
to use buggy domain validation, e.g., to establish control over a
domain WoSign12 tested control of any TCP port at the target
12
_Apr_2015.29
https://wiki.mozilla.org/CA:WoSign_Issues#Issue_L:_Any_Port_.28Jan_-
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1432domain, in contrast to requiring control over services, such as
Email, HTTP, or TLS. In other cases, CAs were validating control
over domains by sending email verification to addresses belonging
to ordinary users instead of domain administrators13. There are
also design specific flaws, which were exploited to bypass DV and
issue fraudulent certificates [14, 18]. Following these attacks Let’s
Encrypt standardised domain validation [RFC8555] and deployed
a production grade validation with multiVA. Followup works [9,
15, 36] on Let’s Encrypt evaluated performance and demonstrated
security of validation from multiple locations with multiVA.
Distributed domain validation. Distributed validation is a
known concept. In 2004 [50] proposed CoDNS to improve the avail-
ability and performance of DNS lookups. ConfiDNS [52] extends
CoDNS with peer agreements and majority vote. Perspectives’ [60]
verifies a server’s identity by using a new infrastructure of notary
servers. DoubleCheck [10] aims to prevent attacks against clients
that retrieve a certificate of the target service for the first time.
However, in contrast to multiVA of Let’s Encrypt these proposals
are not deployed due to the modifications required to the existing
infrastructure and the lack of specific use cases motivating adoption.
We explore the security of multiVA since it is deployed by one of
the largest and rapidly growing CAs.
BGP prefix hijacks. [23, 24, 57] evaluated applicability of BGP
prefix hijacks against different applications in the Internet. There is
numerous evidence of DNS cache poisoning attempts in the wild [1–
7, 22, 54], which are predominantly launched via short-lived BGP
prefix hijacks or by compromising a registrar or a nameserver of the
domain. In this work we apply BGP prefix hijacks for intercepting
the DNS communication between the VA and the nameserver, in
order to create a spoofed DNS response with records that map the
nameservers in the victim domain to attacker’s IP addresses. Once
cached, these records poison the caches of the DNS resolvers at the
VAs. Notice that are also other attacks on BGP, such as poisoning
AS paths [16], defences against these are path security with BGPsec
proposals, [12, 44], none of which are deployed. In our work we
show that even merely applying origin hijacking already leads to
devastating attacks against a large fraction of Internet domains
and their clients, and our evaluations show that the attacks are a
practical threat.
Countermeasures against BGP hijacks. To mitigate prefix
hijacks, the IETF designed and standardised Resource Public Key
Infrastructure (RPKI) [RFC6810] [19]. RPKI uses Route Origin Au-
thorizations (ROAs) to bind Autonomous Systems (ASes) to the
network prefixes that they own via cryptographic signatures. In
order for this binding to deliver on its security promise, the own-
ership over prefixes has to be correctly validated and configured
in the resource certificates (RCs) and Route Origin Authorizations
(ROAs), which are then placed in global RPKI repositories man-
aged by five Regional Internet Registries (RIRs). These ROAs are
fetched and validated, e.g., using the implementation of RIPE NCC
validator [51]. The RPKI validator fetches the ROAs from the global
RPKI repositories and applies Route Origin Validation (ROV) to
create a local validated cache. This cache is then provided to a BGP-
speaking routers via the RPKI to Router (RTR) protocol. Recent
research [33, 40] showed that about 600 networks apply ROV. In
13
https://bugzilla.mozilla.org/show\_bug.cgi?id=556468
our measurements of the ASes with domains in our dataset, we find
that very few ASes apply ROV, only 86 out of 17,864!
There are also proposals for detection of hijacks based on changes
in the origin, [41], which is not yet in use in the Internet. SCION
[62] proposes to replace BGP with a new routing architecture and is
already deployed in production of a number of ISPs, but is not used
by the vast majority of the Internet and none of the ASes which
host the domains in our datasets or the CAs.
7 CONCLUSION
Domain validation is essential for bootstrapping cryptography on
the Internet. After validating control over a domain, a CA generates
a certificate which can be used to establish cryptographic material
and protect communication between the clients and the correspond-
ing server. In contrast to other means for verifying control over
a domain, domain validation is automated, and hence is fast and
cheap (or even free, e.g., as in the case of Let’s Encrypt). These
benefits are the reason why the CAs that offer domain validation
collectively control more than 99% of the certificates market.
Unfortunately, the benefits of domain validation are coupled
with insecurity. The attacks in 2018 [14, 18] showed that the do-
main validation used by many CAs was vulnerable. Let’s Encrypt
was the first CA to deploy in production mode validation from
multiple vantage points, to provide security even against strong
MitM adversaries [36]. Followup security analysis and simulations
showed that MitM adversaries cannot attack multiple VAs of Let’s
Encrypt concurrently [15].
In this work we developed off-path downgrade attacks to reduce
the domain validation to be performed against a single, attacker-
selected nameserver. The experimental evaluation that we carried
out found Let’s Encrypt vulnerable to our downgrade attack. After
forcing the VAs of Let’s Encrypt to query a single nameserver that
resides on a network vulnerable to sub-prefix hijacks we carried
out ethical attacks and successfully issued fraudulent certificates
for 10.60% of the domains in our dataset. They demonstrate that
Let’s Encrypt is not only insecure against MitM adversaries but
also against off-path adversaries.
We showed that other CAs were also vulnerable to downgrade
attacks, and off-path attackers can launch efficient and effective