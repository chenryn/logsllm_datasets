3.75 (3.75)
1.85 (1.85)
2.20 (2.20)
2.70 (2.70)
3.52 (3.52)
5.13 (5.13)
2.70 (2.70)
3.1 (3.13)
3.75 (3.75)
4.69 (4.70)
6.37 (6.36)
Figure 3: Five cases of FAW attack results against multiple
pools. A An attacker (cid:128)nds an FPoW through innocent min-
ing, B another miner in the target pool (cid:128)nds an FPoW, C the
attacker (cid:128)nds an FPoW in one target pool and generates a
fork, D the attacker (cid:128)nds an FPoW in multiple target pools
and generates a fork, and E someone else (cid:128)nds an FPoW.
(cid:135)e attacker can earn rewards in cases A , B , C , and D .
given round, so she can generate a fork that has a maximum of n +1
branches. In this section, we analyze this scenario theoretically
and quantitatively. Unless otherwise stated, we describe the n-pool
a(cid:138)ack using an example where n = 2 for ease of exposition.
6.1 (cid:135)eoretical Analysis
Let the computational power of an a(cid:138)acker be α and the power of
Pool1 and Pool2 be β1 and β2, respectively. (cid:140)e a(cid:138)acker distributes
her computational power into τ1 and τ2 fractions for in(cid:128)ltration
mining in Pool1 and Pool2, respectively. When an a(cid:138)acker with-
holds an FPoW in Pooli only, and an external honest miner releases
a valid block (Case C in Fig. 3), the variable c
represents the
probability that the FPoW of the in(cid:128)ltration miner in Pooli will be
selected as the main chain. Variable c
is the probability that the
FPoW found by her in(cid:128)ltration mining in Pooli will be selected as
the main chain among three branches if she withholds FPoWs from
both pools when an external honest miner propagates a valid block
(2)
i
(1)
i
(2)
(Case D in Fig. 3). (cid:140)erefore, the sum of c
2 must be less
than or equal to 1. (cid:140)en we can derive her reward Ra as follows.
Theorem 6.1. When the FAW a(cid:136)acker executes the FAW a(cid:136)ack
(2)
1 and c
against Pool1 and Pool2, she can earn reward Ra as
(1 − τ1 − τ2)α
1 − (τ1 + τ2)α
τi α
βi
i =1,2
βi + τi α
1 − α − β1 − β2
1 − τi α
+ c

1 − (τ1 + τ2)α
(2)
i
{τj α
j
(1)
i τi α
+ c
τ¬j α
1 − τi α
} 1 − α − β1 − β2
1 − (τ1 + τ2)α
(cid:33)(cid:41) (4)
(cid:40)
+ 
(cid:32)
Proof Sketch. (cid:140)e total reward for the a(cid:138)acker is composed
of rewards from innocent mining and in(cid:128)ltration mining in Pool1
and Pool2. (cid:140)e reward from innocent mining (case A in Fig. 3) is
(1 − τ1 − τ2)α
1 − (τ1 + τ2)α
.
Prior to deriving the in(cid:128)ltration mining part of the a(cid:138)acker’s reward
from Pool1 and Pool2, we derive the total reward for each target
pool. When an FPoW is found by an honest miner in the target
pools, (case B in Fig. 3), target Pooli can earn
βi
1 − (τ1 + τ2)α
.
Next, if the a(cid:138)acker generates an intentional fork with two branches
(case C in Fig. 3), and the a(cid:138)acker’s FPoW is selected as the main
chain, Pooli can earn
(1)
i τi α
c
1 − α − β1 − β2
1 − τi α
.
Finally, we consider case D when the a(cid:138)acker generates an inten-
tional fork with three branches and the a(cid:138)acker’s FPoW is selected
as the main chain. (cid:140)is case means that she (cid:128)nds two FPoWs in
both Pool1 and Pool2 within one round, respectively. If the a(cid:138)acker
(cid:128)rst (cid:128)nds an FPoW in Pool1 and the FPoW is selected as the main
chain, Pool1 can earn the reward
(2)
1 τ1α
c
τ2α
1 − τ1α
1 − α − β1 − β2
1 − (τ1 + τ2)α
.
Otherwise if the a(cid:138)acker (cid:128)nds another FPoW in Pool1 a(cid:137)er she
(cid:128)nds an FPoW in Pool2 and the a(cid:138)acker’s FPoW in Pool1 is selected
as the main chain, then Pool1 can earn the reward
(2)
1 τ2α
As a result, Pooli can earn
c
τ1α
1 − τ2α

1 − α − β1 − β2
1 − (τ1 + τ2)α
c
βi
τj α
+ c
(2)
i
j=1,2

(1)
i τi α
1−α−β1−β2
τ¬j α
1 − τj α
1 − α − β1 − β2
1 − (τ1 + τ2)α
through case D , and the total reward of Pooli is
1−τi α } 1−α−β1−β2
j{τj α
1−(τ1+τ2)α
1−(τ1+τ2)α
(cid:140)en the reward for the a(cid:138)acker from Pooli is a fraction τi α
βi +τi α
of the total reward for Pooli. (cid:140)erefore, considering all cases, the
total reward for the a(cid:138)acker, Ra, can be derived by Eq. (4).
(cid:3)
Below, we expand to the FAW a(cid:138)ack targeting n pools, computing
the a(cid:138)acker’s reward Ra. (cid:140)e theorem can be proven in a similar
way as (cid:140)eorem 6.1.
1−τi α
(2)
i
τ¬j α
+ c
.
+
βi
i =1
τi α
Ra =
βi + τi α
1 − τ α
n
(1 − τ)α
1 − τ α
(cid:32)
cIm(Pk,i )(i) k
(cid:40)
n
n
i =1 τi , β =n
Theorem 6.2. Generalization for n pools, where the computational
power of target Pooli is βi and the fraction of the a(cid:136)acker’s power
devoted to the pool is τi . (cid:138)e total reward for the a(cid:136)acker, Ra, is
(cid:34)
(1 − α − β) 
when a(cid:136)acking n pools with the following conditions hold: τ =
i =1 βi , Pk,i is a one-to-one function from {1, 2, ..., k}
to {1, 2, ..., n}, where an image of Pk,i (i.e., Im(Pk,i)) must include
i, and cIm(Pk,i)(i) is the probability that the a(cid:136)acker’s FPoW in Pooli
will be selected as the main chain when she (cid:128)nds one FPoW in each
of k pools.
τPk,i (t)α
d =1 τPk,i (d)α
1 −t
(cid:41)(cid:33)(cid:35)
Pk,i ∈P
k =1
t =1
(5)
+
,
Proof Sketch. First, the a(cid:138)acker can earn the reward (1−τ)α
1−τ α
from innocent mining. When an honest miner in Pooli (cid:128)nds an
FPoW, the a(cid:138)acker can earn the reward
βi
1 − τ α
·
τi α
.
βi + τi α
τPk,i(t)α
d =1 τPk,i(d)α
.
Next, we consider the case when she generates forks with k branches.
If she (cid:128)nds and withholds an FPoW in each of k pools including
Pooli, and the FPoW from Pooli is selected as the main chain, Pooli
as well as the a(cid:138)acker can earn rewards. From this case, Pooli can
earn the reward
(1 − α − β) 
cIm(Pk,i)(i) k
1 −t
Pk,i ∈P
τi α
βi +τi α
t =1
(cid:140)en the a(cid:138)acker earns a
portion of the above reward.
Finally, when considering all values of k and i, the total reward for
the a(cid:138)acker is Eq. (5).
(cid:3)
Eq. (5) is a function of τi (i = 1, . . . , n); therefore, an a(cid:138)acker
(cid:48)
can maximize her RER R
a depending on the value of τi (i = 1, . . . , n).
Moreover, the total reward for each target Pooli increases as cIm(Pk,i)(i)
increases. (cid:140)erefore, to reduce loss, target pool managers should
try to increase cIm(Pk,i)(i), which in turn increases the a(cid:138)acker’s
extra reward.
(j)
i
6.2 (cid:134)antitative Analysis
Seven parameters are used to represent a two-pool a(cid:138)ack, which
determine the a(cid:138)acker’s RER: α, βi , c
for i = 1, 2 and j = 1, 2. For
simplicity, we make the following assumptions: (cid:128)rst, the a(cid:138)acker’s
computation power, α, is assumed to be 0.2. (cid:140)ree cases for the two
pools’ power: cases 1, 2, and 3 have (β1, β2) equal to (0.1, 0.1), (0.2,
0.1), and (0.3, 0.1), respectively. We also assume cIm(Pk,i)(i) = c
k
where c ranges from 0 to 1. Fig. 4 shows the a(cid:138)acker’s RERs (%) for
various values of c. As expected, as c increases, RER also increases.
Furthermore, when the total computational power of the two target
pools increases, RER also increases.
As an additional case (case 4), we also analyzed the FAW at-
tacker’s RER, taking an approximate computational power distribu-
tion from the current Bitcoin network as shown in Table 2, obtained
from [4]. Assume that F2Pool executes the FAW a(cid:138)ack against four
other open pools. In this case, AntPool, BTCC Pool, BW.com, and
BitFury correspond to Pool1, Pool2, Pool3, and Pool4, respectively.
Figure 4: Rewards for an FAW attacker against two pools
when her computational power is α = 0.2. Cases 1, 2, and 3
represent two target pools with computational power(β1, β2)
equal to (0.1, 0.1), (0.2, 0.1), and (0.3, 0.1), respectively. Case 4
represents when F2Pool executes the FAW attack against all
open pools in Table 2. (cid:135)eoretical analysis result matches
with simulation results approximately.
Because of the symmetry between three pools, optimal values for in-
(cid:128)ltration mining power as a portion of the a(cid:138)acker’s computational
power for each target pool (i.e., τ2, τ3, and τ4) are the same.
(cid:140)e RER for an a(cid:138)acker in case 4 is also shown in Fig. 4. Con-
sidering the current pool distribution shown in Table 2, the BWH
a(cid:138)ack gives the a(cid:138)acker an RER of 2.96%, but she can earn a maxi-
mum RER of 4.63% with the FAW a(cid:138)ack. (cid:140)erefore, the FAW a(cid:138)ack
gives her an extra reward of 56.24% more than that the BWH a(cid:138)ack.
Table 2: Approximate Bitcoin power distribution [4], includ-
ing closed pools and solo miners marked as Unknown.
Owner
Unknown