 **I'm submitting a ...** (check one with "x")
    [X] bug report => search github for a similar issue or PR before submitting
    [ ] feature request
    [ ] support request => Please do not submit support request here, instead see https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
**Current behavior**  
After upgrading from 2.2.1 to 2.4.1 `loadChildren: () => Module` in routes
does not work anymore. Before upgrade I was able to use this construction to
delegate certain route to external module. I did not use lazy loading. I used
`loadChildren` to separate application parts.
Error in console:  
`Uncaught TypeError: Cannot convert undefined or null to object`
thrown in:
    	        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {
    	            var /** @type {?} */ parentCtor = Object.getPrototypeOf(typeOrFunc.prototype).constructor;
    	            var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];
    	            var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];
    	            return parentAnnotations.concat(ownAnnotations);
    	        };
On the second line. `typeOrFunc` is my `() => Module`. It does not have
`prototype` property.
**Expected behavior**  
No idea how it worked before, but it did. I was able to navigate between
modules, no errors were thrown.
**Minimal reproduction of the problem with instructions**  
I used this scheme in my previous submission about DI. The repo is the same:  
https://github.com/peku33/angular2-dependency-injection-failure
**What is the motivation / use case for changing the behavior?**  
I want to use `loadChildren()` to logically separate parts of my app. I'm not
using "lazy loading".
**Please tell us about your environment:**  
Node v7.2.0  
Npm 3.10.9  
@angular/ [everything] @2.4.1  
webpack@1.14.0
  * **Angular version:** 2.0.X
  * **Browser:** [all | Chrome XX | Firefox XX | IE XX | Safari XX | Mobile Chrome XX | Android X.X Web Browser | iOS XX Safari | iOS XX UIWebView | iOS XX WKWebView ]  
Same on Chrome and Firefox
  * **Language:** [all | TypeScript X.X | ES6/7 | ES5] Version 2.1.4, ES6
  * **Node (for AoT issues):** `node --version` =