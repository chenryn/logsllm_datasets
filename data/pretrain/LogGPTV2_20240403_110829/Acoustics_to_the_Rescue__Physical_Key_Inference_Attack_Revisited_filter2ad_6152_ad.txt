to 0.83 ms) in the reﬁnement stage is to thwart detection of
noisy peaks in the vicinity of real clicks.
6.3.2 Pattern Comparison Performance
Recall from Section 5.4 that Keynergy aggregates two error
functions – epattern and eclick – for each cluster (i.e., Clusters
3, 4 and 5), to perform pattern comparison to achieve Rankkey.
We evaluate individual contributions of the six cluster – error
pairs towards computing Rankkey. We utilize the data col-
lected for Section 6.3.1, and assign a contributing rank to
each of the six pairs (Contrpair, ranging from 1 to 6) by com-
paring their resulting individual Rankkey. For example, for a
given victim key, if {Cluster 4 – eclick} pair yields the highest
individual Rankkey, then it is most contributing towards the
ﬁnal rank, hence assigned Contrpair = 1.
Figure 14 depicts the average Contrpair of each cluster –
error pair averaged over 74 input victim keys. {Cluster 5 –
eclick} pair yields the highest average Contrpair of 3.01, which
can be attributed to higher chances of missing clicks in Clus-
ter 5, thereby helping to ﬁlter out many candidate keys in the
keyspace to yield the highest Rankkey. Similarly, to identify
the contribution of different clusters, we compute per-cluster
contributing rank (Contrcluster) by taking an average across
the Contrpair for its epattern and eclick. We observe that Clus-
ter 4 yields the highest average Contrcluster of 3.26 mainly
because it achieves a good trade-off amongst the three clus-
ters, by having sufﬁciently unique click patterns for achieving
low epattern, as well as having a fair chance of missing clicks,
which can aid in ﬁltering out keys based on eclick.
USENIX Association
30th USENIX Security Symposium    3263
Source
Target Image
Modified Target Image 
with Bitting Predictions
3.99 6.78 3.92 5.93 6.87
8.60 7.98 4.14 9.99 6.93
Ideal
Condition
Realistic
Condition
Figure 15: Source key image and its key-bit depth on trans-
formed image in ideal and realistic conditions.
Scenario
Ideal
Realistic
Prediction Error
Average Key
Mean
(µ)
0.123
-0.64
Standard
Deviation
(σ)
0.087
1.28
Space
Reduction
(Poolsearch)
1
166.16
Table 1: Comparison of ideal vs. realistic visual domain
6.3.3 Video Analysis Performance
Recall from Section 5.5 that we re-implement the prior work
on image-based key inference (Sneakey [35]), by extending
it as a video-based inference. We evaluate our implementa-
tion to demonstrate that our (1) image-based inference imple-
mentation is comparable to that of Sneakey for an idealistic
scenario; and (2) video-based inference implementation for a
realistic scenario yields signiﬁcantly lower accuracy.
Speciﬁcally, we demonstrate that image-based inference
performs well with images capturing an immobile key at a
certain angle (e.g., lying ﬂat on surface) which do not contain
any blurriness (ideal scenario). We capture ten birds-eye view
images (two images for ﬁve distinct Schlage SC1 keys) lying
ﬂat on a table with a resolution of 1000 × 500. Figure 15
depicts such an image as well as its perspective transforma-
tion via a reference image with predicted bitting values. The
prediction of bittings for all ten images correctly matches the
target key bittings (after rounding up/down). Table 1 depicts
the mean bitting prediction error, µ = 0.123 and σ = 0.087.
On the contrary, we demonstrate that the video-based in-
ference does not perform well with video frames capturing a
moving key with uncontrolled angle (e.g., a person holding
the key) inherently causing blurriness from motion (realistic
scenario). We use ﬁve YouTube videos [65–69] that depict
the key insertion of Schlage SC1 keys with varying camera
angles and backgrounds (we post the key insertion segments
used for our analysis here: https://bit.ly/3pr5aFS). We
utilize these videos because they contain the ground-truth
bitting information. We compute and choose the top three
frames with least blurriness across the ﬁve videos resulting
in 15 images with resolutions of 1080p for three videos and
720p for the rest. Hence, we obtain a mean bitting prediction
error of µ = −0.64 and σ = 1.28 (depicted in Table 1).
Moreover, we model Gaussian distributions based on the
e
c
a
p
S
y
e
K
e
c
a
p
S
y
e
K
1
0.5
0
1
0.5
0
o
i
t
a
R
n
o
i
t
c
u
d
e
R
o
i
t
a
R
n
o
i
t
c
u
d
e
R
0ft
5ft
10ft
(a) Smartphone Mic
5ft
10ft
15ft
20ft
25ft
(b) Parabolic Mic
Figure 16: Attack success rates for Micphone and Micparab at
different distances from the door.
µ and σ values to simulate the average keyspace reduction
(Poolsearch) for ideal and realistic conditions, by sampling an
error value from the distribution and adding it to true bittings
across the 74 keys, across ten trials. While the idealistic condi-
tion results in a Poolsearch of just one on average (i.e., correctly
identifying the victim key), the realistic condition yields a
Poolsearch of around 166 keys, highlighting the impracticality
of the Video-only approach (also depicted in Table 1).
6.4 Differing Experimental Conditions
We now evaluate Keynergy over several factors including
attack distance, noise level, microphone type and varying par-
ticipants. In order to evaluate different conditions, we choose
keys with different key types, i.e., with different cluster dis-
tinctness, in order to understand their effect on the attack
accuracy. Recall from Section 4 that presence of distinct clus-
ters is integral to Keynergy’s attack. Hence, we select six keys
{key1, . . . , key6}, sorted from low to high cluster distinctness
scores, where a high score indicates the presence of more
distinct clusters (deﬁned in Appendix F). Although there are
several other factors including human insertion and errors in
click detection that may additionally affect the results, they
do not inﬂuence the vulnerabilities of key types.
6.4.1 Attack Scenario 1: Proximity Attack
We evaluate Micphone for varying distances from 0ft up to
10ft (or 3m) as depicted in Figure 16(a). We achieve an aver-
age RatioReduction of 90% (σ = 10%) across all distances and
keys (excluding key1), which demonstrates attack feasibility
up to 10ft. However, key1 achieves a low RatioReduction of
46% (σ = 18%) due to incorrect cluster detection, which can
be attributed to its low cluster distinctness. Furthermore, we
observe cluster misdetection for key3 at 0ft, and click misses
for key4 at 5ft, both of which are likely to be due to human
factors, and not the attack distance. However, for distances be-
yond 10ft, click amplitudes approach the noise ﬂoor resulting
in detection of fewer clicks, leading to less reliable results.
3264    30th USENIX Security Symposium
USENIX Association
1
1
e
c
a
p
S
y
e
K
e
c
a
p
S
y
e
K
o
i
t
a
R
n
o
i
t
c
u
d
e
R
o
i
t
a
R
n
o
i
t
c
u
d
e
R
0.5
0.5
0
0
No Noise
55dB
60dB
65dB
70dB
75dB
5ft
5ft
10ft
10ft
15ft
15ft
20ft
20ft
25ft
25ft
(a) Parabolic Mic - Mean (Human Conversation Noise)
o
i
t
1
1
0.5
0.5
e
c
a
p
S
y
e
K
e
c
a
p
S
y
e
K
o
i
t
a
R
n
o
i
t
c
u
d
e
R
a
R
n
o
i
t
c
u
d
e
R
0
0
10ft
10ft
5ft
5ft
(c) Parabolic Mic - Mean (Dog Bark Noise)
20ft
20ft
25ft
25ft
15ft
15ft
No Noise
55dB
60dB
65dB
70dB
75dB
e
c
a
p
S
y
e
K
e
c
a
p
S
y
e
K
o
i
t
a
R
n
o
i
t
c
u
d
e
R
o
i
t
a
R
n
o
i
t
c
u
d
e
R
1
0.5
0
55dB
60dB
65dB
70dB
75dB
(b) Parabolic Mic at 25ft (Human Conversation Noise)
1
0.5
0
55dB
60dB
65dB
70dB
75dB
(d) Parabolic Mic at 25ft (Dog Bark Noise)
Figure 17: Figure depicts the attack success rates for Micparab with two different noise sources, namely human conversation
(noisetalk) and dog barking (noisebark) at varying distances from the door and noise amplitudes.
e
c
a
p
S
y
e
K
o
i
t
a
R
n
o
i
t
c
u
d
e
R
1
0.5
0
5ft
10ft
15ft
20ft
25ft
Figure 18: Attack success rates for Micparab with key bunch
(noisebunch) at different distances from the door.
6.4.2 Attack Scenario 2: Distant Attack
We utilize the Micparab to conduct the following three experi-
ments, namely differing (1) Door–Microphone Distance, (2)
Noise Types, and (3) Ambient Noise Levels.
Varying Door-Microphone Distances. We vary the dis-
tance from 5ft to 25ft, in increments of 5ft. As depicted
in Figure 16(b), we obtain an average RatioReduction of 93%
(σ < 5%) for keys (except key1) across all distances. Similar
to the evaluation on phone, we observe poor cluster detec-
tion performance for key1 due to its low cluster distinctness.
Furthermore, in keys, key2 to key5, we observe occasionally
low RatioReduction scattered across all distances, e.g., for key3
at 10ft and key2 at 25ft due to misses in click detection. In
general, with increasing distance, click sounds may become
fainter due to lower signal-to-noise ratio, hence increasing
click detection errors. However, as Micparab achieves a high
average reduction of 94% (σ = 7%) even at 25ft distance (for
all keys except key1), this conveys the feasibility of utilizing
such microphones for long-distance attacks.
Varying Noise Types and Ambient Noise Levels. We evalu-
ate our approach by introducing three common noise sources:
human conversation (noisetalk), barking dog (noisebark) and
sound due to a bunch of keys (noisebunch), that may interfere
with the key insertion sound.
• noisetalk and noisebark: To simulate the noise due to hu-
man and dog, we utilize 20 seconds of publicly available
high-quality recording (Fs = 96kHz) [25,26], and play them at
different noise levels (i.e., 55dB− 75dB in increments of 5dB)
through an Adam Audio A3X studio monitor speaker [11] for
accurate sound reproduction. As human chatter and dog bark-
ing sounds are independent of key insertion, we record them
separately using the Micparab, and combine the key insertion
audio with randomly selected equal-duration noise. Hence,
across different noise levels, the key insertion recording re-
mains the same, while only the noise varies, hence removing
the variability due to key insertion for the analysis.
From Figures 17(a) and 17(c), we observe that noisetalk
and noisebark at all noise levels have little impact on the
RatioReduction. Although these noise sources have energies
up to 25kHz which can negatively affect our onset detection,
the inﬂuence is to a lower degree as their energies are mostly
concentrated below 5kHz for both noisetalk and noisebark. Fur-
thermore, from Figures 17(b) and 17(d), we observe that the
impact of noise sources, noisetalk and noisebark, respectively,
is minimal even at an attack distance of 25ft. We present
all the results across different distances and noise levels in
Appendix H (see Figure 25).
• noisebunch: Unlike the sounds due to human and dogs, the
sound of key bunch is dependent on the key insertion action,
and is difﬁcult to be recorded separately. Consequently, we
capture audio recordings by inserting each of the six keys into
the lock, while having two additional keys in the key bunch.
noisebunch consists of signiﬁcant energies up to 48kHz, which
is similar to that of the “click” sound. Hence as depicted in
Figure 18, presence of this noise degrades the RatioReduction
from 93% (in the noise-free scenario) to 68% (σ = 41%) on
average for all keys (except key1), demonstrating a signiﬁcant
degradation in attack’s success. noisebunch increases the noise
level of the key insertion sound, resulting in many false posi-
tives in click detection, and even leading to incorrect cluster
detection among keys with relatively high cluster distinct-
ness (e.g., key5). Despite the above challenges, if the effect of
noisebunch is less intense in some key insertions, it may still
succeed as our attack combines information across multiple
key insertions (e.g., key3, across all distances).
USENIX Association
30th USENIX Security Symposium    3265
e
c
a
p
S
y
e
K
e
c
a
p
S