pay more a(cid:138)ention to app ads as they typically occupy (cid:128)xed places
in the screen, with no opportunity to scroll them out of sight as in
web ads. In addition, (ii) studies [64] have shown that apps leak
more personal data to advertisers, enabling them to deliver more
targeted ads.
Ad-slot sizes. Some ad-entities carry in their nURLs a parameter
with the size of the auctioned ad-slot. In Figure 12 we plot the
popularity of each of the ad-slot sizes through time. It’s interesting
to see that 300x250 ad-slots (known as “MPUs” or “Medium Rect-
angles”) dominate the dataset from May’15 on, taking the place of
320x50 ad-slots (known as “large mobile banners”). In fact, 300x250
ad-slots have more ad content available from advertisers, so they
can increase earnings when both text and image ads are enabled. In
addition, we see that the 728x90 ad-slot (“leaderboard” or “banner”)
Figure 12: Ad-slot size popularity through time (sorted by area size).
Figure 14: Accumulated revenue
per ad-slot size (sorted by area
size).
Figure 13: Distribution of the
charge prices per ad-slot size
(sorted by area size).
database [54], we map each IP to its city level. In Figure 5, which
presents the 5th, 10th, 50th, 90th and 95th percentile of the charge
prices, we see that although the median values are relatively lower
in large cities, the (cid:131)uctuation of their price values is higher.
Another important feature is time, and speci(cid:128)cally the time of
day and day of week. (cid:140)is is important due to the di(cid:130)erent level
of a(cid:138)ention a user may give to an ad impression and the amount
of time she has to purchase an advertised product (e.g., working
hours vs. a(cid:137)ernoon’s free time, or weekdays vs. weekends). In
Figure 6, although the median charge prices are of similar range,
we see that the early morning hours until noon tend to have more
charge prices with increased values. In Figure 7, we see a periodic
phenomenon, where although in median values the charge prices
are quite close, during weekdays the max prices are relatively higher
than on weekends.5
4.3 User-related features
Device type. By parsing the user-agent (UA) header information,
our analyzer classi(cid:128)es tra(cid:129)c and inspects the di(cid:130)erent (cid:128)ngerprints
the UA leaks (speci(cid:128)cations of process virtual machine (e.g., Dalvik
or ART) or kernel (e.g., Darwin), operating system, browser vendor
etc.) (cid:140)us, we are able to identify the type of device (PC or mo-
bile), the di(cid:130)erent types of mobile operating systems (Android, iOS,
Windows) and if the tra(cid:129)c was generated from a mobile app or a
mobile web browser.
In Figure 8, we see the percentage of RTB tra(cid:129)c for the di(cid:130)erent
OSes over time. As expected, Android and iOS dominate, owning
5For time-of-day and day-of-week distributions, which visually appear to be similar, we
con(cid:128)rmed that they are, in fact, statistically di(cid:130)erent with non-parametric, two-sample
Kolmorogov-Smirno(cid:130) tests at p-value levels of ptod . For example, an exper-
imental setup could be this:  (144 setups, Table 5). Clearly,
using more features would increase coverage of di(cid:130)erent types of
ads, but also the campaigns’ cost. Instead, by running controlled
ad-campaigns with a small feature set, we can receive ground truth
data about encrypted prices, thereby allowing us to train a model
for such prices, in a reasonable ad-campaign cost.
Campaigns with ADXs that deliver cleartext prices also allow us