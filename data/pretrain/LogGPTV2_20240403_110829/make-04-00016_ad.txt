	We demonstrate the feasibility of the VloGraph framework by means of three applica-tion scenarios i.e., (i) Web access log analysis; (ii) Network monitoring that demonstratesMach. Learn. Knowl. Extr. 2022, 4 384
the use of internal background knowledge; and (iii) Threat detection based on existing community rules and integration with the ATT&CK knowledge graph.
Scenario I—Web Access Log AnalysisIn this scenario, we simulated two hosts (Windows10 and Ubuntu) with different web servers (Apache and IIS) and analyze their access logs together. In order to identify access from a specific IP address (e.g., 192.168.2.1), we formulate the SPARQL query depicted in Listing 1. We specify the client’s IP address with access:hasClient res:ip-192.168.2.1 and filter for “GET” requests via accs:hasRequestVerb res:GET. In the query options, we selected the timeframe (from 11 November 2021 10:00:04 to 11 November 2021 10:10:04) as well as the two target hosts.PREFIX cl:  PREFIX accs:  PREFIX res: 
SELECT ?logType ?hostOS ?hostIp 	?verb ?request 
	WHERE { 
	?logEntry cl:originatesFrom ?host.
?host cl:hostOS ?hostOS.
?logEntry cl:hasLogType ?logType.
?host cl:ipAddress ?hostIp.
?logEntry accs:hasRequestVerb res:GET.?logEntry accs:hasRequestVerb res:GET.
?logEntry accs:hasRequest ?request.
?logEntry accs:hasClient res:ip-192.168.2.1.
} LIMIT 4
Listing 1. Web access query.
The query results in Table 1 show the access information with their log sources and types (cl:IIS and cl:apache), the host OS (Win10 and ubuntu) with their IPs, the request method, and request paths. Figure 8 depicts the graph visualization of the result.Table 1. Web access query result (excerpt).
| logType | hostOS | hostIp | Verb | Request |
|---|---|---|---|---|
| IIS |Win10 |192.168.0.113 |GET |/employee.asp&id=12345 . . . |
| apache |Ubuntu |192.168.0.111 |GET |/admin.php?userid=bob. . . |
| apache |Ubuntu |192.168.0.111 |GET |/salary.php |
| IIS |Win10 |192.168.0.113 |GET |/global/lwb.min.js . . . |
Figure 8. Web access query result visualization (excerpt).Mach. Learn. Knowl. Extr. 2022, 4 385
Scenario II—Network Monitoring
In this scenario, we illustrate how our prototype provides semantic integration, gener-alization, and entity resolution. We simulated SSH login activities across different servers (e.g., DatabaseServer, WebServer, FileServer) with multiple demo users (e.g., Bob and Alice) and then queried the authlog files with our federated approach.Typically, atomic information on the log entry level is not explicitly linked to se-mantic concepts. Hence, we added extractors to, e.g., detect specific log events from log messages and map them to event types from our  (e.g., event:Login, event:Logout). Furthermore, we agram names, IP addresses etc. (cf. Section 5).Now, an analyst can formulate a SPARQL query as shown in Listing 2 to extract successful login events from SSH connections. The query results in Table 2 and Figure 9 show successful logins via SSH over multiple hosts in the specified time range (from 11 Decmeber 2021 13:30:23 to 11 Decmeber 2021 14:53:06). The host type and target IP address come from internal background knowledge, as the host name is connected to a specific host type.This information can be a starting point for security analysts to explore the rich context of the events in the virtual knowledge graph.
Table 2. SSH connections query result (excerpt).
| Timestamp | User | sourceIp | targetHostType | targetIp |
|---|---|---|---|---|
| Dec 10 13:30:23 |Bob |172.24.66.19 |DatabaseServer |192.168.2.1 |
| Dec 10 13:33:31 |Alice |172.24.2.1 |WebServer |192.168.2.2 || Dec 10 13:38:16 |Alice |172.24.2.1 |DatabaseServer |192.168.1.3 |
| Dec 10 14:53:06 |Bob |172.24.66.19 |FileServer |192.168.2.4 |
PREFIX cl:  PREFIX auth:  PREFIX sys:  PREFIX ev: 
SELECT ?timestamp ?user ?sourceIp ?targetHostType ?targetIp 	WHERE {?logEntry cl:timestamp ?timestamp. 
	?logEntry auth:hasUser ?user.
?logEntry auth:hasSourceIp ?sourceIp. 
?logEntry auth:hasTargetHost ?th.
?logEntry auth:hasAuthEvent ?ae.
?ae sys:partOfEvent ev:Login.
?th sys:hostType ?targetHostType.
?th cl:IpAddress ?targetIp.
} LIMIT 4
Listing 2. SSH connections query.
Mach. Learn. Knowl. Extr. 2022, 4 386
Figure 9. SSH connections query result visualization (excerpt).Scenario III—Threat Detection and ATT&CK LinkingIn this scenario, we demonstrate how the VloGraph framework leverages existing threat detection rules to identify Indicators of Compromise (IoCs) from log sources and link them to the respective attack techniques and tactics. For this scenario, we used an existing log dataset [6] as described in the motivation example in Section 1. To define our rule-based threat detection queries, we relied on existing community-based threat detection rules such as Sigma [55] and transformed them into RDF/SPARQL. Furthermore, we used the ATT&CK-KG [56], a continuously updated cybersecurity knowledge graph generated from the MITRE ATT&CK Matrix [10] in order to link cyber attacks to adversary techniques and tactics.Listing 3 shows an example query for this scenario. Using the transformed Sigma rule as internal knowledge, we can list suspicious keywords defined in the rules (i.e., via ?sigma sigma:keywords ?keywords) and use them to filter messages from the targeted log sources. In this case, we target request messages in Apache log (see ?logEntry apache:hasRequest ?req) and filter them against the keywords (FILTER regex(str(?req), ?keywords)). Next, we link the detected log entries to the respective attack techniques (note that Sigma typically provides tags that associate its rules with ATT&CK techniques). This can be performed via ?sigma rule:hasAttackTechnique ?techn. The query leverages linked data princi-ples to include external background knowledge from the ATT&CK-KG, which makes it possible to further link the identified attack technique detailed knowledge such as tech-nique description (via ?techn dcterm:description ?desc), attack tactic (via ?techn at-tack:accomplishesTactic ?tactic), CAPEC [57] attack patterns (?techn attack:hasCAPEC ?capec), and so forth.Table 3 and Figure 10 show the query results and visualization from this scenario. Sev-eral log entries from a particular host (mail.cup) are associated with suspicious keywords. For example, according to a Sigma rule (), included as background knowledge, the “whoami” keyword is consa Web Shell attack technique (). This technique in turn is an instance of the tactic  and of attack  .Mach. Learn. Knowl. Extr. 2022, 4 387
PREFIX cl:  
PREFIX apache:  PREFIX sigma:  PREFIX rule:  