## 未来数据库方向 - PostgreSQL 有价值的插件、可改进功能、开放接口 (202005)      
### 作者    
digoal    
### 日期    
2020-05-27    
### 标签    
PostgreSQL , 插件 , 功能 , 开放接口      
----    
## 背景    
过去几年中人类制造的数据占整个人类历史数据量的95%，换言之，大数据时代已经真正降临. 赫拉利的《未来简史》观点, 信数据得永生. 如何抓住数据, 挖掘数据本身的价值? 数据库这么多, 未来怎么选择?  
数据的本质:   
- 存储  
- 计算  
围绕这两点展开, 未来的数据库是什么样的?    
- 存储要求: 写入快, 更新快, 擦除快, 省成本, 存储格式灵活度高适合不同侧重点(写入、读取、更新、压缩效率等方面, 不同场景、阶段的需求都不一样), 空间可扩展性, 存储格式可塑性    
    - 未来的存储能力核心是“可塑性”. 因为万物互联, 你要处理的数据是什么样的, 要处理成什么样, 根本是不可想像, 固定的存储模型无法满足未来的需求.   
- 计算要求: 计算快, 搜索快, 计算算法灵活, 搜索算法灵活, 算力可扩展性, 算法可塑性   
    - 未来的计算能力核心也是“可塑性”. 因为万物互联, 你要处理的数据是什么样的, 要处理成什么样, 根本是不可想像, 固定的计算模型无法满足未来的需求.   
- 传统要求的衍存: 根据不同业务, 要求也不尽相同, 例如: 并发性, 容错性, 安全性, 稳定性, 可用性等    
王东岳的《物演通论》核心思想, 递弱代偿表明: 衍存时空递减率，从时间上来说，越往后出现的物种，灭绝速度越快。同时越原始的东西越稳定，越具备决定性，例如尽管互联网如此发达，充满无数信息， 但是所有流量基本都与人类的感性情绪有关，此外情色内容一直牢牢保持着互联网的流量高地，这是因为感性的稳定度远远高于理性。越早期的感应属性，对越后来的感应属性决定性越大。[参考](https://www.sohu.com/a/381523737_328948)   
为什么PG是未来?  
- PG拥有强大的基盘、扩展接口、存储计算全方位可塑性, 以及代表未来的基因.   
    - 拥有类似bsd的开源许可基因, 代表开放|自由,   
    - 核心committer由大量超大型用户、服务商、厂商组成的力量均衡的社区化基因, 代表工业界,   
    - 起源于伯克利大学的学院派基因, 代表前沿研究学术界,   
以 PG 作为基础, 通过PG的扩展接口衍生出来的插件或数据库产品会越来越多, 应对特定(垂直化)的场景, 而PG将长存.   
- 衍生数据库  
    - https://wiki.postgresql.org/wiki/PostgreSQL_derived_databases  
- 内置插件    
    - https://www.postgresql.org/docs/current/contrib.html    
- 外围插件    
    - https://download.postgresql.org/pub/projects/pgFoundry/    
    - https://api.pgxn.org/src/    
    - https://www.postgresql.org/download/product-categories/    
    - https://www.postgresql.org/docs/current/external-extensions.html    
    - https://github.com/topics/postgresql-extension    
    - https://github.com/search?l=C&o=desc&q=postgresql&s=stars&type=Repositories    
    - https://osdn.net/softwaremap/trove_list.php?form_cat=66    
    - https://github.com/topics/postgresql?l=C&o=desc&s=stars    
了解本文, 从数据库应用、管理到内核你都会有所得.   
## 一、已有插件    
### 1 存储引擎    
一般围绕这几个点: 写入快, 更新快, 查询快, 更新垃圾少, 并发能力强, 压缩率高, 锁等待少, 支持行宽度宽, 支持列数多, 支持索引方法多     
zedstore, 行列混合存储, 更好的支持分析场景(cpu vector 批量计算, 列存储, 压缩效率)    
https://github.com/greenplum-db/postgres/tree/zedstore/src/backend/access/zedstore    
undam, UNDO存储引擎, 更好的支持update, 减轻膨胀    
https://github.com/postgrespro/undam    
zheap, UNDO存储引擎, 更好的支持update, 减轻膨胀    
https://github.com/EnterpriseDB/zheap    
PostgreSQL appendonly 压缩 存储引擎 - pg\_cryogen, 更好的支持分析场景(cpu vector 批量计算, 列存储, 压缩效率)    
https://github.com/digoal/blog/blob/master/202003/20200324_10.md    
PostgreSQL LSM-tree 引擎 - VidarDB (baseon rocksdb) , 更高的插入效率, 牺牲查询效率    
https://github.com/digoal/blog/blob/master/202003/20200324_03.md    
https://en.wikipedia.org/wiki/Log-structured_merge-tree    
### 2 存储插件    
类似存储引擎, 但是可能不是使用am接口扩展的, 使用的可能是fdw接口扩展的      
cstore\_fdw, ORC存储格式, 更好的压缩效率, 列级别查询效率    
https://github.com/citusdata/cstore_fdw    
PostgreSQL parquet fdw, 更好的压缩效率, 列级别查询效率    
https://github.com/digoal/blog/blob/master/202005/20200527_04.md    
vops, 向量+瓦片存储, 大数据分析效率非常高, 提高1个数量级    
https://github.com/postgrespro/vops    
imcs, 内存列存    
https://github.com/knizhnik/imcs    
zstd 压缩接口, 提高压缩效率    
https://github.com/digoal/blog/blob/master/202003/20200324_38.md    
### 3 扩展索引    
rum, 加强版倒排索引, 多值类型(数组、文本向量等)检索加速, 任意字段组合搜索索引过滤    
https://github.com/postgrespro/rum    
https://github.com/digoal/blog/blob/master/201907/20190706_01.md    
zombodb: 创建基于es的索引, 加速搜索, 一种全新解决方案, 降低用户开发成本, 简化应用架构, 解决搜索数据同步问题、延迟等痛点.    
https://github.com/zombodb/zombodb    
https://github.com/digoal/blog/blob/master/201710/20171001_06.md    
pase, 图像识别, 向量检索, 相似特征圈选. 千万级别毫秒响应    
https://github.com/digoal/blog/blob/master/202004/20200424_01.md    
unknown, 支持自定义距离算法函数的插件, 阿里云, 暂时未发布    
### 4 sharding    
plproxy    
https://plproxy.github.io/    
citus    
https://github.com/citusdata/citus    
pg\_shardman    
https://github.com/postgrespro/pg_shardman    
#### sharding 产品级    
antdb    
https://github.com/ADBSQL/AntDB    
pg-xl    
https://www.postgres-xl.org/download/    
greenplum    
https://github.com/greenplum-db/gpdb    
hawq    
http://hawq.incubator.apache.org/    
sharding sphere    
https://shardingsphere.apache.org/    
### 5 读写分离    
pgpool    
http://www.pgpool.org/    
[《阿里云RDS PostgreSQL 12 + pgpool 的读写分离配置》](../202002/20200229_01.md)      
《PostgreSQL druid 多个读节点的jdbc loadbalance负载均衡连接串配置》    
https://github.com/digoal/blog/blob/master/202002/20200214_03.md    
《PostgreSQL libpq|jdbc 驱动层 load balance 与 failover》    
https://github.com/digoal/blog/blob/master/201910/20191027_01.md    
《PostgreSQL jdbc multi-host 配置与简单HA、Load Balance实现》    
https://github.com/digoal/blog/blob/master/201806/20180614_02.md    
### 6 应用扩展功能    
pase, 图像识别, 向量检索, 相似特征圈选    
https://github.com/digoal/blog/blob/master/202004/20200424_01.md    
imgsmlr, 图像识别    
https://github.com/digoal/blog/blob/master/201811/20181129_01.md    
https://github.com/postgrespro/imgsmlr    
pg\_roaringbitmap, 用户圈选、实时画像、相似用户扩选功能 . 分析场景功能插件，应用于实时精准营销系统    
https://github.com/digoal/blog/blob/master/201911/20191118_01.md    
图计算, 图式搜索, 兼容neo4j, 兼容SQL, 降低用户开发成本, 简化应用架构. 支持插件形式, 也支持独立包的形式.     
https://github.com/bitnine-oss/agensgraph-ext    
https://github.com/bitnine-oss/agensgraph    
https://github.com/digoal/blog/blob/master/202003/20200324_01.md    
https://github.com/digoal/blog/blob/master/201711/20171103_03.md    
流计算, IoT行业常用功能. 利用PG的全栈功能, 既有DBMS能力同时具备流计算能力, 简化IoT应用架构, 建议在被集成场景输出.    
https://github.com/pipelinedb/pipelinedb    
https://github.com/digoal/blog/blob/master/201811/20181120_02.md    
timescaledb     时序数据库引擎     
https://github.com/digoal/blog/blob/master/201804/20180420_01.md    
https://github.com/timescale/timescaledb    
pg\_prometheus, IoT常用, 监控产品集成到timescaledb和prometheus    
https://github.com/timescale/pg_prometheus    
GIS相关    
VagueGeometry vague spatial data - VASA (Vague Spatial Algebra) for PG    
https://github.com/digoal/blog/blob/master/202003/20200326_02.md    
pgsphere    
https://pgsphere.github.io/    
q3c    
https://github.com/segasai/q3c    
postgis , 全球最流行的GIS扩展功能模块    
http://postgis.org/    
h3模块    
https://github.com/dlr-eoc/pgh3    
pgrouting, 图路由功能    
https://pgrouting.org/    
《PostgreSQL MOD数据库 MobilityDB - GIS 移动对象处理数据库》    
https://github.com/digoal/blog/blob/master/202003/20200324_24.md    
《PostgreSQL z-order , morton 排序插件 - GIS常用》    
https://github.com/digoal/blog/blob/master/202003/20200324_11.md    
《GIS 完整开源解决方案 - Crunchy Spatial - API, Web, GIS, database, 动态矢量瓦片》    
https://github.com/digoal/blog/blob/master/202003/20200320_04.md    
机器学习 madlib    
http://madlib.apache.org/    
机器学习 GSL  GNU Scientific Library (GSL)     
https://github.com/digoal/blog/blob/master/202003/20200326_01.md    
文本处理插件 pg\_bigm, PGroonga. 任意内容模糊搜索(包括单字和双字的模糊查询)    
https://github.com/digoal/blog/blob/master/202003/20200330_01.md    
pg\_trgm, 实时模糊查询、相似文本查询    
https://github.com/digoal/blog/blob/master/201809/20180904_01.md    
pg\_jieba 中文分词    
https://github.com/digoal/blog/blob/master/201607/20160725_02.md    
pg\_scws 中文分词    
https://github.com/jaiminpan/pg_scws    
zhparser 中文分词    
https://github.com/digoal/blog/blob/master/201603/20160310_01.md    
《PostgreSQL 一种高性能中文分词器 - friso》    
https://github.com/digoal/blog/blob/master/202003/20200324_17.md    
按海明距离高速搜索, 海明距离排序索引    
https://github.com/digoal/blog/blob/master/202003/20200326_08.md    
https://github.com/digoal/blog/blob/master/202003/20200324_29.md    
smlar, 多值类型相似查询, 支持cosine, overlap等相似算法, 例如 标签交叉率相似度, 用户画像相似圈选     
http://sigaev.ru/git/gitweb.cgi?p=smlar.git;a=summary    
hll, 近似HASH值, 高效UNIQUE近似比对、计算, 滑窗分析. 思想上类似bloom算法, 每个value映射到hash值的某些bit上, 用若干bit位的占位是否为1表示这个value是否存在.     
https://github.com/citusdata/postgresql-hll     
近似算法库    