J. Hestness, D. R. Hower, T. Krishna, S. Sardashti et al., “The gem5
simulator,” ACM SIGARCH computer architecture news, 2011.
[10] D. D. Boggs, R. Segelken, M. Cornaby, N. Fortino, S. Chaudhry,
D. Khartikov, A. Mooley, N. Tuck, and G. Vreugdenhil, “Memory
type which is cacheable yet inaccessible by speculative instructions,”
2019, uS Patent App. 16/022,274.
[11] A. Brahmakshatriya, P. Kedia, D. P. McKee, D. Garg, A. Lal, A. Ras-
togi, H. Nemati, A. Panda, and P. Bhatu, “Conﬂlvm: A compiler for
enforcing data conﬁdentiality in low-level code,” in EuroSys, 2019.
[12] R. Branco, K. Hu, K. Sun, and H. Kawakami, “Efﬁcient mitigation
of side-channel based attacks against speculative execution processing
architectures,” 2019, uS Patent App. 16/023,564.
[13] C. Canella, D. Genkin, L. Giner, D. Gruss, M. Lipp, M. Minkin,
D. Moghimi, F. Piessens, M. Schwarz, B. Sunar, J. Van Bulck, and
Y. Yarom, “Fallout: Leaking Data on Meltdown-resistant CPUs,” in
CCS, 2019.
[14] C. Canella, J. Van Bulck, M. Schwarz, M. Lipp, B. von Berg, P. Ortner,
F. Piessens, D. Evtyushkin, and D. Gruss, “A Systematic Evaluation
of Transient Execution Attacks and Defenses,” in USENIX Security
Symposium, 2019.
[15] S. A. Carr and M. Payer, “Datashield: Conﬁgurable data conﬁdentiality
and integrity,” in AsiaCCS, 2017.
[16] C. Carruth, “RFC: Speculative Load Hardening (a Spectre variant #1
mitigation),” Mar. 2018.
[17] G. Chen, S. Chen, Y. Xiao, Y. Zhang, Z. Lin, and T. H. Lai, “SgxPectre
Attacks: Stealing Intel Secrets from SGX Enclaves via Speculative
Execution,” in EuroS&P, 2019.
[18] W. Cheng, Q. Zhao, B. Yu, and S. Hiroshige, “Tainttrace: Efﬁcient
ﬂow tracing with dynamic binary rewriting,” in ISCC, 2006.
J. Chow, B. Pfaff, T. Garﬁnkel, K. Christopher, and M. Rosenblum,
“Understanding data lifetime via whole system simulation,” in USENIX
Security, 2004.
[19]
[20] T. Downs, “Where do interrupts happen?” Aug. 2019. [Online]. Avail-
able: https://travisdowns.github.io/blog/2019/08/20/interrupts.html
[21] ECLYPSIUM, “System Management Mode Speculative Execution
Attacks,” May 2018. [Online]. Available: https://blog.eclypsium.com/
2018/05/17/system-management-mode-speculative-execution-attacks/
[22] D. Evtyushkin and D. Ponomarev, “Covert channels through random
number generator: Mechanisms, capacity estimation and mitigations,”
in CCS, 2016.
[23] D. Evtyushkin, D. Ponomarev, and N. Abu-Ghazaleh, “Jump over aslr:
Attacking branch predictors to bypass aslr,” in MICRO, 2016.
[24] D. Evtyushkin, R. Riley, N. C. Abu-Ghazaleh, ECE, and D. Pono-
marev, “BranchScope: A New Side-Channel Attack on Directional
Branch Predictor,” in ASPLOS, 2018.
[25] A. Fog, “The microarchitecture of Intel, AMD and VIA CPUs: An
optimization guide for assembly programmers and compiler makers,”
2016.
[26] Q. Ge, Y. Yarom, D. Cock, and G. Heiser, “A Survey of Microar-
chitectural Timing Attacks and Countermeasures on Contemporary
Hardware,” Journal of Cryptographic Engineering, 2016.
[27] A. F. Glew and G. J. Hinton, “Method and apparatus for processing
memory-type information within a microprocessor,” 1995, european
Patent Ofﬁce EP0783735A4.
17
[28] B. Gregg, “KPTI/KAISER Meltdown Initial Performance Regres-
sions,” 2018.
[29] D. Gruss, D. Hansen, and B. Gregg, “Kernel Isolation: From an
Academic Idea to an Efﬁcient Patch for Every Computer,” USENIX
;login, 2018.
[30] D. Gruss, M. Lipp, M. Schwarz, R. Fellner, C. Maurice, and S. Man-
gard, “KASLR is Dead: Long Live KASLR,” in ESSoS, 2017.
[31] D. Gruss, C. Maurice, and S. Mangard, “Rowhammer.js: A Remote
Software-Induced Fault Attack in JavaScript,” in DIMVA, 2016.
[32] D. Gruss, C. Maurice, K. Wagner, and S. Mangard, “Flush+Flush: A
Fast and Stealthy Cache Attack,” in DIMVA, 2016.
[33] D. Gruss, M. Schwarz, and M. Lipp, “Meltdown: Basics, Details,
Consequences,” BlackHat USA, 2018.
[35]
[34] M. Guri, M. Monitz, Y. Mirski, and Y. Elovici, “Bitwhisper: Covert
signaling channel between air-gapped computers using thermal manip-
ulations,” in IEEE CSF, 2015.
J. Horn, “speculative execution, variant 4: speculative store bypass,”
2018.
Intel, “Intel Analysis of Speculative Execution Side Channels,”
Jul. 2018.
[Online]. Available: https://software.intel.com/security-
software-guidance/api-app/sites/default/ﬁles/336983-Intel-Analysis-
of-Speculative-Execution-Side-Channels-White-Paper.pdf
[36]
[37] ——, “Retpoline: A Branch Target Injection Mitigation,” Jun. 2018,
revision 003.
[38] ——, “Speculative Execution Side Channel Mitigations,” 2018, revi-
sion 3.0.
[39] ——,
“Deep
Dive:
Ar-
Avail-
https://software.intel.com/security-software-guidance/insights/
chitectural
able:
deep-dive-cpuid-enumeration-and-architectural-msrs#MDS-CPUID
CPUID
May
Enumeration
[Online].
MSRs,”
2019.
and
[40] ——, “Deep Dive: Intel Analysis of Microarchitectural Data Sam-
[41]
[42]
pling,” 2019.
Intel, “Intel 64 and IA-32 Architectures Optimization Reference Man-
ual,” 2019.
Intel, “Intel 64 and IA-32 Architectures Software Developer’s Manual,
Volume 3 (3A, 3B & 3C): System Programming Guide,” 2019.
[43] A.
Ionescu,
“Windows 17035 Kernel ASLR/VA Isolation In
Practice (like Linux KAISER).” 2017. [Online]. Available: https:
//twitter.com/aionescu/status/930412525111296000
[44] G. Irazoqui, T. Eisenbarth, and B. Sunar, “Cross processor cache
[45]
[46]
attacks,” in AsiaCCS, 2016.
J. Jaeyeon and Y. Zhu, “Sensitive data tracking using dynamic
taint analysis,” 2014. [Online]. Available: https://patents.google.com/
patent/US9548986B2
kernel.org, “Documentation: Document array index nospec - kernel
version v4.16-rc1,” 2018. [Online]. Available: https://www.kernel.org/
doc/Documentation/speculation.txt
[47] K. N. Khasawneh, E. M. Koruyeh, C. Song, D. Evtyushkin, D. Pono-
marev, and N. Abu-Ghazaleh, “SafeSpec: Banishing the Spectre of a
Meltdown with Leakage-Free Speculation,” in DAC, 2019.
[48] V. Kiriansky, I. Lebedev, S. Amarasinghe, S. Devadas, and J. Emer,
“DAWG: A Defense Against Cache Timing Attacks in Speculative
Execution Processors,” ePrint 2018/418, May 2018.
[49] V. Kiriansky and C. Waldspurger, “Speculative Buffer Overﬂows:
Attacks and Defenses,” arXiv:1807.03757, 2018.
[50] P. Kocher, J. Horn, A. Fogh, D. Genkin, D. Gruss, W. Haas, M. Ham-
burg, M. Lipp, S. Mangard, T. Prescher, M. Schwarz, and Y. Yarom,
“Spectre Attacks: Exploiting Speculative Execution,” in S&P, 2019.
[51] E. M. Koruyeh, K. Khasawneh, C. Song, and N. Abu-Ghazaleh,
“Spectre Returns! Speculation Attacks using the Return Stack Buffer,”
in WOOT, 2018.
[52] V. Kuznetsov, L. Szekeres, M. Payer, G. Candea, R. Sekar, and
D. Song, “Code-Pointer Integrity,” in OSDI, 2014.
[53] M. Larabel, “Bisected: The Unfortunate Reason Linux 4.20 Is Running
Slower,” Nov. 2018.
[54] C. Lattner and V. S. Adve, “LLVM: A compilation framework for
lifelong program analysis & transformation,” in IEEE / ACM Inter-
national Symposium on Code Generation and Optimization – CGO
2004, 2004, pp. 75–88.
[80] M. Schwarz, M. Schwarzl, M. Lipp, and D. Gruss, “NetSpectre: Read
Arbitrary Memory over Network,” in ESORICS, 2019.
[55] K. P. Lawton, “Bochs: A portable PC emulator for UNIX/X,” Linux
Journal, 1996.
[56] E. N. Leake and G. Pike, “Taint tracking mechanism for computer
security,” 2013. [Online]. Available: https://patents.google.com/patent/
US8875288B2
[57] S. Lee, M. Shih, P. Gera, T. Kim, H. Kim, and M. Peinado, “Inferring
Fine-grained Control Flow Inside SGX Enclaves with Branch Shad-
owing,” in USENIX Security Symposium, 2017.
J. Levin, Mac OS X and IOS Internals: To the Apple’s Core.
Wiley & Sons, 2012.
John
[58]
[59] M. Lipp, M. Schwarz, D. Gruss, T. Prescher, W. Haas, A. Fogh,
J. Horn, S. Mangard, P. Kocher, D. Genkin, Y. Yarom, and M. Ham-
burg, “Meltdown: Reading Kernel Memory from User Space,” in
USENIX Security Symposium, 2018.
[60] F. Liu, Y. Yarom, Q. Ge, G. Heiser, and R. B. Lee, “Last-Level Cache
Side-Channel Attacks are Practical,” in S&P, 2015.
[61] C.-K. Luk, R. Cohn, R. Muth, H. Patil, A. Klauser, G. Lowney,
S. Wallace, V. J. Reddi, and K. Hazelwood, “Pin: building customized
program analysis tools with dynamic instrumentation,” in ACM SIG-
PLAN notices, 2005.
[62] LWN, “The current state of kernel page-table isolation,” Dec.
[Online]. Available: https://lwn.net/SubscriberLink/741878/
2017.
eb6c9d3913d7cb2b/
[63] G. Maisuradze and C. Rossow, “ret2spec: Speculative Execution Using
Return Stack Buffers,” in CCS, 2018.
[64] C. Maurice, M. Weber, M. Schwarz, L. Giner, D. Gruss, C. Al-
berto Boano, S. Mangard, and K. R¨omer, “Hello from the Other Side:
SSH over Robust Cache Covert Channels in the Cloud,” in NDSS,
2017.
[65] R. Mcilroy, J. Sevcik, T. Tebbi, B. L. Titzer, and T. Verwaest, “Spectre
is here to stay: An analysis of side-channels and speculative execution,”
arXiv:1902.05178, 2019.
[66] Microsoft, “Mitigating speculative execution side-channel attacks in
Microsoft Edge and Internet Explorer,” Jan. 2018.
[67] M. Miller, “Mitigating speculative execution side channel hardware
vulnerabilities,” Mar. 2018.
J. Newsome and D. X. Song, “Dynamic Taint Analysis for Automatic
Detection, Analysis, and SignatureGeneration of Exploits on Com-
modity Software.” in NDSS, 2005.
[68]
[69] O. Oleksenko, B. Trach, T. Reiher, M. Silberstein, and C. Fetzer, “You
Shall Not Bypass: Employing data dependencies to prevent Bounds
Check Bypass,” arXiv:1805.08506, 2018.
[70] D. A. Osvik, A. Shamir, and E. Tromer, “Cache Attacks and Coun-
termeasures: the Case of AES,” in CT-RSA, 2006.
[71] A. Pardoe, “Spectre mitigations in MSVC,” 2018.
[72] P. Pessl, D. Gruss, C. Maurice, M. Schwarz, and S. Mangard,
“DRAMA: Exploiting DRAM Addressing for Cross-CPU Attacks,”
in USENIX Security Symposium, 2016.
[73] F. Pizlo, “What Spectre and Meltdown mean for WebKit,” Jan. 2018.
[74] F. Qin, C. Wang, Z. Li, H.-s. Kim, Y. Zhou, and Y. Wu, “LIFT: A
low-overhead practical information ﬂow tracking system for detecting
security attacks,” in MICRO, 2006.
[75] C. Reis, A. Moshchuk, and N. Oskov, “Site Isolation: Process Sep-
aration for Web Sites within the Browser,” in USENIX Security
Symposium, 2019.
[76] E. J. Schwartz, T. Avgerinos, and D. Brumley, “All you ever wanted
to know about dynamic taint analysis and forward symbolic execution
(but might have been afraid to ask),” in S&P, 2010.
[77] M. Schwarz, C. Canella, L. Giner, and D. Gruss, “Store-to-
Leak Forwarding: Leaking Data on Meltdown-resistant CPUs,”
arXiv:1905.05725, 2019.
[78] M. Schwarz, M. Lipp, D. Moghimi, J. Van Bulck, J. Stecklina,
T. Prescher, and D. Gruss, “ZombieLoad: Cross-Privilege-Boundary
Data Sampling,” in CCS, 2019.
[79] M. Schwarz, C. Maurice, D. Gruss, and S. Mangard, “Fantastic Timers
and Where to Find Them: High-Resolution Microarchitectural Attacks
in JavaScript,” in FC, 2017.
18
[81] U. Shankar, K. Talwar, J. S. Foster, and D. Wagner, “Detecting
format string vulnerabilities with type qualiﬁers.” in USENIX Security
Symposium, 2001.
[82] A. Slowinska and H. Bos, “Pointless tainting?: evaluating the practi-
cality of pointer tainting,” in EuroSys, 2009.
[83] D. Song, D. Brumley, H. Yin, J. Caballero, I. Jager, M. G. Kang,
Z. Liang, J. Newsome, P. Poosankam, and P. Saxena, “BitBlaze: A new
approach to computer security via binary analysis,” in International
Conference on Information Systems Security, 2008.
[84] K. Sun, R. Branco, and K. Hu, “A New Memory Type Against
Speculative Side Channel Attacks,” 2019.
[85] M. Taram, A. Venkat, and D. Tullsen, “Context-sensitive fencing:
Securing speculative execution via microcode customization,” in AS-
PLOS, 2019.
[86] The Chromium Projects, “Actions required to mitigate Speculative
Side-Channel Attack techniques,” 2018.
[87] V. Tkachenko, “20-30% Performance Hit from the Spectre Bug Fix
on Ubuntu,” Jan. 2018.
[88] C. Trippel, D. Lustig, and M. Martonosi, “MeltdownPrime and Spec-
trePrime: Automatically-Synthesized Attacks Exploiting Invalidation-
Based Coherence Protocols,” arXiv:1802.03802, 2018.
[90]
[89] P. Turner, “Retpoline: a software construct for preventing branch-
[Online]. Available: https://support.google.
target-injection,” 2018.
com/faqs/answer/7625886
J. Van Bulck, M. Minkin, O. Weisse, D. Genkin, B. Kasikci,
F. Piessens, M. Silberstein, T. F. Wenisch, Y. Yarom, and R. Strackx,
“Foreshadow: Extracting the Keys to the Intel SGX Kingdom with
Transient Out-of-Order Execution,” in USENIX Security Symposium,
2018.
[91] S. van Schaik, A. Milburn, S.
¨Osterlund, P. Frigo, G. Maisuradze,
K. Razavi, H. Bos, and C. Giuffrida, “RIDL: Rogue In-ﬂight Data
Load,” in S&P, May 2019.
[92] G. Venkataramani, I. Doudalis, Y. Solihin, and M. Prvulovic, “Flexi-
taint: A programmable accelerator for dynamic taint propagation,” in
IEEE HPCA, 2008.
[93] L. Wagner, “Mitigations landing for new class of timing attack,” Jan.
2018.
[94] X. Wang, Y.-C. Jhi, S. Zhu, and P. Liu, “Still: Exploit code detec-
tion via static taint and initialization analyses,” in Annual Computer
Security Applications Conference, 2008.
[95] R. N. Watson, J. Woodruff, P. G. Neumann, S. W. Moore, J. Anderson,
D. Chisnall, N. Dave, B. Davis, K. Gudka, B. Laurie et al., “CHERI:
A hybrid capability-system architecture for scalable software compart-
mentalization,” in S&P, 2015.
[96] O. Weisse, J. Van Bulck, M. Minkin, D. Genkin, B. Kasikci,
F. Piessens, M. Silberstein, R. Strackx, T. F. Wenisch, and Y. Yarom,
“Foreshadow-NG: Breaking the Virtual Memory Abstraction with
Transient Out-of-Order Execution,” 2018.
[97] Z. Wu, Z. Xu, and H. Wang, “Whispers in the Hyper-space: High-
bandwidth and Reliable Covert Channel Attacks inside the Cloud,”
IEEE/ACM Transactions on Networking, 2014.
[98] Y. Xu, M. Bailey, F. Jahanian, K. Joshi, M. Hiltunen, and R. Schlicht-
ing, “An exploration of L2 cache covert channels in virtualized
environments,” in CCSW’11, 2011.
[99] M. Yan, J. Choi, D. Skarlatos, A. Morrison, C. W. Fletcher, and
J. Torrellas, “InvisiSpec: Making Speculative Execution Invisible in
the Cache Hierarchy,” in MICRO, 2018.
[100] Y. Yarom and K. Falkner, “Flush+Reload: a High Resolution, Low
Noise, L3 Cache Side-Channel Attack,” in USENIX Security Sympo-
sium, 2014.
J. Yu, L. Hsiung, M. El Hajj, and C. W. Fletcher, “Data Oblivious
ISA Extensions for Side Channel-Resistant and High Performance
[101]
Computing,” in NDSS, 2019.