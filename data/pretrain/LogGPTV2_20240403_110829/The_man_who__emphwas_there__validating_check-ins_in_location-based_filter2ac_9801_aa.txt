title:The man who \emphwas there: validating check-ins in location-based
services
author:Iasonas Polakis and
Stamatis Volanis and
Elias Athanasopoulos and
Evangelos P. Markatos
The Man Who Was There:
Validating Check-ins in Location-Based Services
∗
Iasonas Polakis
FORTH-ICS, Greece
PI:EMAIL
Stamatis Volanis
FORTH-ICS, Greece
PI:EMAIL
Evangelos P. Markatos
FORTH-ICS, Greece
PI:EMAIL
Elias Athanasopoulos
Columbia University, USA
PI:EMAIL
ABSTRACT
The growing popularity of location-based services (LBS) has
led to the emergence of an economy where users announce
their location to their peers, indirectly advertising certain
businesses. Venues attract customers through oﬀers and dis-
counts for users of such services. Unfortunately, this econ-
omy can become a target of attackers with the intent of
disrupting the system for fun and, possibly, proﬁt. This
threat has raised the attention of LBS, which have invested
eﬀorts in preventing fake check-ins. In this paper, we cre-
ate a platform for testing the feasibility of fake-location at-
tacks, and present our case study of two popular services,
namely Foursquare and Facebook Places. We discover their
detection mechanisms and demonstrate that both services
are still vulnerable. We implement an adaptive attack algo-
rithm that takes our ﬁndings into account and uses informa-
tion from the LBS at run-time, to maximize its impact.This
strategy can eﬀectively sustain mayorship in all Foursquare
venues and, thus, deter legitimate users from participat-
ing. Furthermore, our experimental results validate that
detection-based mechanisms are not eﬀective against fake
check-ins, and new directions should be taken for design-
ing countermeasures. Hence, we implement a system that
employs near ﬁeld communication (NFC) hardware and a
check-in protocol that is based on delegation and asymmet-
ric cryptography, to eliminate fake-location attacks.
1.
INTRODUCTION
Several location-based services have emerged during the
last couple of years, Foursquare and Facebook Places being
the most famous examples. The core operation of these
social utilities is based on a large number of users that are
willing to share their true geographic location. Users of these
∗
are also with the University of Crete.
Iasonas Polakis, Stamatis Volanis and Evangelos Markatos
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’13 Dec. 9-13, 2013, New Orleans, Louisiana USA’
Copyright 2013 ACM 978-1-4503-2015-3/13/12 ...$15.00.
http://dx.doi.org/10.1145/2523649.2523653.
systems announce their location to the rest of the community
or their on-line contacts, and can win awards depending on
how often they share their location. For example, American
Express oﬀers discounts as an incentive for their customers
to connect their account with the Foursquare application [2].
Foursquare is currently the most successful LBS. A very
important aspect of its business model is the rewarding sys-
tem for users that frequently check into speciﬁc venues. The
user with the most check-ins for a venue in the last sixty
days is crowned the venue’s mayor. Venues attract cus-
tomers by providing special oﬀers for their mayors. This
entails an incentive for users and, therefore, it is crucial to
prevent fake check-ins that will have a negative impact on
the system and deter users from participating [26]. As arti-
cles describing simple methods to post fake check-ins were
published (e.g., [9]), Foursquare implemented a cheating-
detection mechanism for prohibiting cheating users from be-
coming mayors. The deployment of such a feature [10, 5]
was mandatory for reassuring users that cheating was de-
terred, and preventing a major decrease of the user base.
Another important aspect of Foursquare is its recommender
system [29], built upon the suggestions and tips left by users
after checking into a venue. According to their CEO [7],
“check-ins drive the data, which drive the recommendation
engine”. Since these services base their operation on the
honest disclosure of location, it is vital for clients to trans-
mit their position accurately so as to prevent the loss of the
user base and the degradation of the recommender system.
Various methods have been used to post fake locations to
mobile social networks. The most trivial is to hijack the GPS
driver and provide applications with arbitrary coordinates.
There are research eﬀorts for the development of Trusted
Sensors [33], including geolocation sensors. If smartphones
are equipped with a trusted computing base, tampering with
the data returned from the GPS antenna, or modifying the
system to receive the coordinates from an application, can
be harder although, arguably, still possible [35]. In this pa-
per, we do not tamper with GPS readings, but conduct a
systematic study of how the application layer of LBS can be
leveraged to transmit fake information. Thus, our method-
ology is not aﬀected by the presence of trusted sensors.
We create a testing platform that leverages public APIs
available to application developers, and follow a black-box
approach where we perform arbitrary check-ins in various
places of the world, without changing our actual physical lo-
cation. We then systematically analyze all server-side heuris-
19
tics that aim to detect misbehaving clients. To ensure the
completeness of our study, we also conduct experiments where
we masquerade our actions to appear as if originating from
the oﬃcial applications, to reveal potential diﬀerences of the
detection heuristics for public API calls. This is achieved us-
ing authentication tokens extracted from the oﬃcial mobile
applications through low-level reverse engineering.
We reveal a series of thresholds, which, if taken into con-
sideration, allow a user to check into Foursquare, while trav-
eling around the globe with a speed of over 900 mph. We
also discover that users can check into a venue from as far as
200 meters away, and the maximum number of check-ins a
user is allowed to commit is enforced using a 24 hour sliding
window. Our technique revealed a bug in Facebook Places
which allows anyone to perform check-ins all over the world
with unlimited speed. No ﬁx has yet been released.
Based on our ﬁndings we create an attack algorithm that
takes into account heuristic thresholds and can maintain
continuous mayorship in a set of venues across the globe. By
employing 10,000 accounts, sold in the underground market
for $150-$450, our adaptive algorithm can acquire the may-
orship of all venues, and severely impact Foursquare’s busi-
ness model. Our experiments demonstrate that anomaly de-
tection heuristics cannot secure a LBS against fake-location
attacks. Detecting malicious clients and distinguishing fake
check-ins from legitimate ones is not trivial. Even if heuris-
tics become stricter, the attacker can simply follow a stealth-
ier approach, as multiple accounts are used to carry out the
attack. Stricter heuristics will also result in the system be-
coming too restrictive for legitimate users as well, which can
have a negative impact on user participation. We argue that
new directions need to be followed for securing LBS.
We present our proof-of-concept implementation of Vali-
dated Check-in, an NFC server solution, along with a secu-
rity analysis of how it holds up against a series of attacks,
as well as an evaluation of its performance. With a total
cost of about $75 at retail price, we consider our system to
be ideal for deployment by venues that oﬀer awards to LBS
customers. The contributions of this paper are the following:
• We create a platform for evaluating the eﬃciency of
server-side components employed by LBS for identify-
ing clients providing fake locations. Our ﬁndings indi-
cate that anomaly detection based heuristics are not
suﬃcient for capturing clients that misbehave.
• To stress our experimental ﬁndings, we develop an
adaptive attack algorithm that maximizes the impact
of fake-location attacks, while remaining undetected.
We show how an attacker can deploy a system-wide at-
tack, that will have a signiﬁcant impact on Foursquare’s
business model, with less than $1,000.
• We implement Validated Check-in, a system designed
to be deployed at LBS venues and ensure user presence
during the check-in process. Based on commodity NFC
hardware, it can protect against fake-location attacks.
We design a check-in protocol for eliminating a range
of attacks, and evaluate our system’s performance.
2. LOCATION-BASED SERVICES
With smartphones, users can use networking services on
the go. This introduces the aspect of location, which has
led to the blooming of LBS, that allow users to inform their
contacts of their current location.
Foursquare has over 30 million users and 1 million regis-
tered businesses, with users conducting millions of check-ins
per day. The concept of achievements for users based on
their check-in behavior was integral to its success. Achieve-
ments belong to three diﬀerent categories: points, badges,
and mayorships. Users earn points for every activity such
as adding a new venue, while badges require combinations
of activities. The mayorship is awarded to the user with
the most check-ins for that venue in the last 60 days, and
only one check-in per venue is allowed each day. As a result
Foursquare is perceived as a game and, thus, cheating users
discourage honest users from further participation.
Facebook Places follows a similar approach, where users
can check into places and share that information with their
friends.
It does not present an award system to create a
“gaming” experience. Nonetheless, it also provides venue
owners with the ability to create oﬀers for users that check
into their place. Recently, Facebook merged this service into
its system and discontinued it as a separate service. For
the remainder of the paper, we will refer to this component
as Places. Furthermore, venues are referred to as pages,
however we will retain Foursquare’s naming convention.
Check-in economy. The opportunity for venues to use
LBS for advertising and attracting customers has led to the
creation of a new business model that relies on users’ activi-
ties combined with their geographical location. When users
check into venues and post that information on their proﬁles,
they are actually advertising the venues. As a result, an in-
creasing number of venues are attracting Foursquare users
by oﬀering awards, ranging from discount prices to free prod-
ucts. This is similar to the Like economy [15], associated
with users liking particular resources in Facebook, evolving
with check-ins stemming from Foursquare’s activity. Ensur-
ing the produced economy is stable, requires that check-ins
reﬂect clients announcing their true geographical location.
However, this stability seems very fragile. A logical con-
sequence of venues using Foursquare’s achievement system
for oﬀering awards is the appearance of users cheating the
system for fun or proﬁt. This is done through fake-location
attacks, where users check into venues without being there.
Fake-location attacks have a major impact on the credi-
bility of LBS. They pose a great threat as competitive users
will leave the system if fairness is not ensured and, thus,
break all economics associated with these services. To make
matters worse, as smartphones become widely used and the
popularity of such services greatly increases, these attacks
are bound to transit from sporadic incidents to organized
fraud. We argue that LBS share certain properties that ren-
der them vulnerable. Thus, it is important to explore such
attacks in detail and design eﬀective countermeasures. We
identify the following fundamental properties:
1. User location is sent from the client (user’s device).
2. LBS has no deﬁnitive way of verifying the location.
3. Heuristics are used to detect behavior that exceeds ac-
ceptable limits, using the following information: (a)
venue location, (b) user location, (c) timestamp of
check-in, (d) history of previous user check-ins.
4. With such limited information, heuristics can only be
applied on the following: (a) user’s distance from venue,
(b) user’s speed between successive check-ins, (c) dis-
tance traveled in certain time windows, (d) number of
check-ins in certain time windows.
20
As long as (2) stands true, LBS will remain vulnerable
to fake-location attacks. The limited nature of information
available (3), dictates the types of heuristics that can be
deployed (4). We have designed our system to be fully con-
ﬁgurable in regards to such heuristics. Thus, it can be used
to identify the heuristic thresholds of any LBS that follows
(1, 2) and demonstrate the extent of potential attacks. Our
testing infrastructure can also assist LBS providers in detect-
ing implementation bugs (as we demonstrate with Places).
User location. We expect user location to play a piv-
otal role in future services with functionality that will de-
viate from a simple check-in approach. Foursquare is also
expanding by utilizing user data to build a reliable recom-
mender system.By implementing an eﬀective mechanism for
validating the location reported by users, we can create a
stable foundation for other novel services to be built upon.
3. METHODOLOGY
Our initial goal is to create an infrastructure that is able to
perform arbitrary check-ins in LBS. Even though our current
implementation supports Foursquare and Places, our testing
approach is applicable to any LBS.
Use of Public APIs. Both Foursquare and Places pro-
vide public APIs that allow the development of custom ap-
plications. They include a set of HTTP requests, which
cover the complete functionality of the service. The Places
API is provided as part of the Facebook Graph API. For de-
veloping applications one only needs to register and obtain
API credentials. Application code is not reviewed and, thus,
anybody can create applications that post fake check-ins.
Mimic Oﬃcial Applications. For one experiment we
want to masquerade all calls made by our custom applica-
tion to seem as if originating from the oﬃcial one. Our goal
is to explore whether the oﬃcial app includes further infor-
mation (i.e., custom headers) that makes it receive diﬀerent
“treatment” from the service. To do this, we must format
all API calls like the oﬃcial ones, and use the corresponding
authorization token for each user1. Revealing the original
protocol is challenging, since communication is sent over an
encrypted channel using HTTPS. We extract the required
information by modifying the application to provide us with
the actual communication. If the requests are sent in cleart-
ext, decompiling the application is not necessary. However,
sending requests over SSL/TLS is considered safe practice
and we expect that most LBS will do so.
Black-box testing. To reveal the detection mechanisms
deployed by LBS, we follow a black-box testing approach and
use test proﬁles that post arbitrary check-ins. We design our
system to allow the conﬁguration of several parameters of
user behavior. By modifying the behavior, we are able to
trigger the heuristics and identify their thresholds.
Ethical considerations. To minimize the impact of our
experiments, and analyze the detection mechanisms with-
out aﬀecting other users, we took two precautionary mea-
sures. First, when exploring the heuristic thresholds, we
modiﬁed our accounts so as not to acquire mayorships in
venues which already had mayors. Speciﬁcally, mayorships
are not awarded to accounts without a proﬁle photo. Second,
when experimenting with our adaptive attack algorithm, we
targeted small venues with no mayors and used multiple ac-
counts to serve as other customers. We were able to explore
1Each (user, application) pair has a unique access token.
the heuristics in depth and demonstrate our automated at-
tack, without having a negative impact on legitimate users.
4. SYSTEM IMPLEMENTATION
Our system has been implemented in Python as a collec-
tion of components, and can run on any computer.
Venue Crawler. Foursquare and Places have API func-
tions that search for venues based on certain parameters.
Given a set of coordinates, and a category description (e.g.,
bar), both services return a list of relevant venues nearby.
The Venue Crawler takes as input a set of coordinates and
searches for diﬀerent categories of venues. For every venue
we collect the name, venue ID, and location coordinates.
We submit the venue’s coordinates as our user’s coordinates
(unless we want our user to appear as being at a distance).
User Authentication. This part of our central compo-
nent is responsible for authenticating the user to the LBS.
It takes as input the user’s access token used for authenti-
cating with the service. We can select to authenticate with
the access token that was created for use by our custom ap-
plication, or the one extracted from the oﬃcial application.
Based on which one we select, we can appear to be sending
the check-ins from the custom application or the oﬃcial one.
Check-in Manager. This implements the core func-
tionality of our system as it simulates a user checking into
venues. It takes as input a list of venues that will be used
for the arbitrary check-ins, and a set of values that conﬁgure
the user’s behavior. Several aspects of user behavior can be
conﬁgured to explore the heuristics deployed by a LBS.
5. MEASUREMENTS - FOURSQUARE
Foursquare has implemented a system, which they refer to
as “cheater code”, for detecting users that post fake check-
ins. While the mechanism has not been disclosed, according
to Foursquare [8] detection is based on information from:
(i) the user’s phone, (ii) the oﬃcial application, and (iii) an