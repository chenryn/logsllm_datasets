# Exploring Fault-Tolerant Network-on-Chip Architectures

**Authors:**
- Dongkook Park
- Chrysostomos Nicopoulos
- Jongman Kim
- N. Vijaykrishnan
- Chita R. Das

**Affiliation:**
Department of Computer Science and Engineering, Pennsylvania State University, USA, 16802

**Contact:**
{dpark, nicopoul, jmkim, vijay, das}@cse.psu.edu

## Abstract
The advent of deep sub-micron technology has exacerbated reliability issues in on-chip interconnects. Specifically, single-event upsets, such as soft errors, and hard faults are becoming increasingly significant. This trend underscores the importance of detailed analysis of these reliability hazards and the incorporation of comprehensive protection measures into all Network-on-Chip (NoC) designs. In this paper, we examine the impact of transient failures on the reliability of on-chip interconnects and develop comprehensive counter-measures to prevent or recover from them. We propose several novel schemes to address various kinds of soft error symptoms while minimizing area and power overhead. Our solutions are designed to fully leverage the available infrastructures in an NoC and enable versatile reuse of valuable resources. The effectiveness of the proposed techniques has been validated using a cycle-accurate simulator.

## 1. Introduction
Packet-based interconnection networks, known as Network-on-Chip (NoC) architectures, are increasingly adopted in System-on-Chip (SoC) designs, which support numerous homogeneous and heterogeneous functional modules. Reduced feature sizes into the nanoscale regime, along with increasing transistor densities, have transformed on-chip interconnects into a critical factor for meeting performance and power consumption budgets. Various interconnection schemes are currently in use, including crossbars, rings, buses, and NoCs [2]. Among these, NoCs and crossbars have been dominant in the research community [3, 4]. However, buses suffer from poor scalability; as the number of processing elements increases, performance degrades dramatically, making them unsuitable for systems with more than about 10 nodes [3, 5]. To overcome this limitation, attention has shifted toward NoCs. On-chip networks are scalable, much like traditional macro networks, and are seen as the prime candidate to form the network infrastructure of future SoCs. NoCs, however, pose several design challenges due to their inherent resource constraints, specifically area and power limitations. These constraints dictate the choice of routing algorithms, protocols, and architectural implementation.

Aggressive technology scaling has accentuated the issue of reliability due to the rapid increase in the prominence of permanent faults, primarily caused by accelerated aging effects such as electromigration, and manufacturing and testing challenges. Additionally, soft upsets caused by crosstalk, coupling noise, and transient faults are also a concern for overall reliability. The growing concern about reliability has prompted extensive research in this area. Many researchers [6-13] have proposed solutions for various individual aspects of on-chip reliability, such as soft faults and handling of hard failures within a network. However, a comprehensive approach encompassing all issues pertaining to NoC reliability has yet to evolve. In this paper, we propose a comprehensive set of techniques to protect against the most common sources of failures in on-chip interconnects, including link errors and single-event upsets within routers. The proposed mechanisms incur minimal overhead while providing robust protection. Moreover, our schemes cleverly employ resource sharing to minimize the overhead imposed by additional hardware.

## 2. Preliminaries

### 2.1. NoC Router Architecture
A generic virtual-channel-based wormhole router is shown in Figure 1. The router consists of six major components: a Routing Unit (RT), a Virtual Channel Allocator (VA), a Switch Allocator (SA), a crossbar, a retransmission buffer (necessary for fault-tolerance), and handshaking signals (used between neighboring routers; not shown in Figure 1). Pipelining the router architecture can significantly improve performance by increasing throughput, similar to the pipeline of a microprocessor, thereby reducing the average latency. As described in [15], there are certain critical components that are best kept intact within a pipeline stage. These atomic modules represent the finest granularity at which efficient pipelining can occur. The RT, VA, SA, and crossbar represent the fundamental modules within an NoC router. The interdependencies of these modules in a pipelined architecture are illustrated in Figure 2. A simple architecture consists of a 4-stage pipeline router, one stage for each module. However, by employing techniques such as Speculative Switch Allocation [15] and Look-ahead Routing [16], researchers have been able to break some of these interdependencies by parallelizing operations, thus shortening the router's critical path. This has led to 3-stage and 2-stage router implementations [17]. Recently, [18] proposed a single-stage router that fully parallelizes the router operation to minimize average latency.

### 2.2. Simulation Platform
A cycle-accurate network simulator was developed to conduct detailed evaluation of the proposed schemes. The simulator operates at the granularity of individual architectural components, accurately emulating their functionalities. The simulation test-bench models the pipelined routers and their interconnection links. All simulations were performed in a 64-node (8x8) MESH network with 3-stage pipelined routers. Each router has 5 physical channels (PCs) including the PE-to-router channel, and each PC has a set of 3 associated virtual channels (VCs). One message (or packet) consists of four flits. The simulator keeps injecting messages into the network until 300,000 messages (including 100,000 warm-up messages) are ejected. A uniform message injection traffic pattern was used, where a node injects messages into the network at regular intervals specified by the injection rate. For destination node selection, three distributions were used: normal random (NR), bit-complement (BC), and tornado (TN) [19]. Single link traversal is assumed to complete within one clock cycle, thus eliminating the need for pipelined links (which would incur further power and area penalties).

To evaluate fault-tolerance in the network, various soft faults were randomly generated both within the routers and on the inter-router links. The simulator was also used to calculate the area and power overhead of the proposed architectures. A generic 5-port router architecture along with all proposed modifications was implemented in structural Register-Transfer Level (RTL) Verilog and then synthesized in Synopsys Design Compiler using a TSMC 90 nm standard cell library. The resulting design operates at a supply voltage of 1 V and a clock speed of 500 MHz. Both dynamic and leakage power estimates were extracted from the synthesized router implementation. These power numbers were then imported into the cycle-accurate network simulator and used to trace the power profile of the entire on-chip network. We measured average message latency and energy per packet as the performance and energy parameters.

## 3. Handling Link Soft Faults
Primarily two types of soft faults could upset the on-chip network infrastructure: link errors occurring during flit transmission and transient faults within the router. To ensure protection from link errors due to crosstalk and capacitive loading, we present a flit-based hop-by-hop (HBH) retransmission scheme and the corresponding retransmission architecture. With a minimal latency overhead of three clock cycles in the event of an error, this scheme successfully addresses the problems afflicting one of the most vulnerable components of an on-chip network, the inter-router link. In addition to providing link protection, the same architectural framework is also employed in a newly proposed deadlock-recovery scheme. While prior work in deadlock recovery has assumed additional dedicated resources, our technique uses existing retransmission buffers instead. This helps in maximizing resource utilization without incurring additional overhead.

## 4. Handling Logic Soft Errors
While combinational logic circuits have traditionally been considered less prone to soft errors than memory elements, rapidly diminishing feature sizes and increasing clock frequencies are exacerbating their prominence. Recent studies predict that the soft error rate (SER) per chip of logic circuits will become comparable to the SER per chip of unprotected memory elements by 2011 [14]. This observation has a profound impact on the reliability of on-chip routers. The lack of protection from logic errors implies that soft errors afflicting a router's logic would escape the error detecting/correcting measures because they do not actually corrupt the data but cause erroneous behavior in the functionality of the routing process. Therefore, it is imperative to provide robust protection against such upsets. A recent study [1] has addressed the issues of single-event upsets in the logic of individual hardware components. However, the proposed techniques were applicable to a specific type of router architecture. In this work, we analyze the intricacies of intra-router logic errors and provide comprehensive solutions relevant to all router architectures. We analyze the possible symptoms of logic errors in each module in the router pipeline and provide detailed recovery mechanisms for each case. In the sequel, we propose a novel Allocation Comparator (AC) unit, which provides full error protection to the virtual channels and switch allocation units at minimal cost.

All the mechanisms proposed in this paper are architected in such a way as to avoid negative impacts on the router's critical path. The mechanisms work in parallel with other vital stages in the router pipeline, without increasing the pipe depth.

## 5. Conclusion
This paper is organized as follows. First, a preliminary description of a generic NoC router architecture is given in Section 2. Link error handling techniques and a novel deadlock recovery scheme utilizing retransmission buffers are presented in Section 3. Then, logic soft-error handling techniques are described in Section 4, followed by the concluding remarks in Section 5.

---

*This research was supported in part by NSF grants CCR-0208734, EIA-0202007, CCF-0429631, CNS-0509251, CRI-0454123, CAREER 0093085, SRC grant 00541, and a grant from DARPA/MARCO GSRC.*

*Proceedings of the 2006 International Conference on Dependable Systems and Networks (DSN’06) 0-7695-2607-1/06 $20.00 © 2006 IEEE Authorized licensed use limited to: Tsinghua University. Downloaded on March 20, 2021, at 12:28:17 UTC from IEEE Xplore. Restrictions apply.*