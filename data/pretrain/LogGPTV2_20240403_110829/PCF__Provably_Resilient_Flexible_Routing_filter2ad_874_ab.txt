case performance under failures is intractable [10]. Thus, a central
challenge that PCF tackles is one of carefully crafting response
strategies that are (i) amenable to formal worst-case guarantees;
and yet (ii) perform closer to the network’s intrinsic capability.
PCF achieves the above by (i) developing tractable optimization
formulations that are inspired by practical response mechanisms
PCF: Provably Resilient Flexible Routing
SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
Figure 1: Example to illustrate FFC’s coarse
modeling of network structure.
Figure 2: Throughput guarantee
with FFC for different
tunnel
choices compared to the optimal.
Figure 3: Example to illustrate how
tunnel-based reservations can be ineffi-
cient
in networking and conservatively estimate network capability; and
(ii) providing explicit response mechanisms that achieve the esti-
mated capability. Moreover, PCF allows the network architect to
incrementally dial-in additional flexibility in response as desired.
Roadmap. We introduce notation (§3.1), and present PCF-TF
(§3.2), which uses FFC’s response mechanism but better models
network structure. We show that PCF-TF out-performs FFC, and
achieves better performance with more tunnels. Despite these ben-
efits, we show that PCF-TF (like FFC) can perform arbitrarily worse
than optimal. We introduce a more flexible approach based on the
logical sequence abstraction, and formally show the performance
benefits over PCF-TF (§3.3). We present further generalizations in
§3.4, and show how to practically realize the schemes (§4).
3.1 Notation and preliminaries
Consider a network topology, represented as a graph 𝐺 = ⟨𝑉 , 𝐸⟩.
Each link 𝑒 ∈ 𝐸 is associated with a link capacity 𝑐𝑒. For each node
pair (𝑠, 𝑡) on the graph, we are given a traffic demand 𝑑𝑠𝑡, and a
set of tunnels 𝑇 (𝑠, 𝑡) to route the traffic. Each tunnel 𝑙 consists of a
set of links 𝜏𝑙 ⊆ 𝐸. Below, we present a formulation for bandwidth
allocation with tunnels,
Θ(𝑧)
𝑎𝑙 (1 − 𝑦𝑙) ≥ 𝑧𝑠𝑡𝑑𝑠𝑡 ∀𝑠, 𝑡 ∈ 𝑉 ,∀𝑦 ∈ 𝑌
s.t. 
(𝑃1) max
𝑧,𝑎
(1)
𝑙∈𝑇 (𝑠,𝑡)
𝑎𝑙 ≥ 0 ∀𝑠, 𝑡 ∈ 𝑉 , 𝑙 ∈ 𝑇 (𝑠, 𝑡)

∀𝑠,𝑡 ∈𝑉 ,𝑙∈𝑇 (𝑠,𝑡)
𝑎𝑙𝛿(𝑒 ∈ 𝜏𝑙) ≤ 𝑐𝑒 ∀𝑒 ∈ 𝐸.
(2)
(3)
Here, 𝛿(𝑒 ∈ 𝜏𝑙) = 1 if 𝑒 ∈ 𝜏𝑙 and 0 otherwise. The formulation deter-
mines 𝑎𝑙 and 𝑧𝑠𝑡 , where 𝑎𝑙 represents the amount of reservation on
tunnel 𝑙, and variable 𝑧𝑠𝑡 represents the fraction of traffic from 𝑠 to
𝑡 that can be satisfied. Note that we use slightly different notation
than FFC (see Table 2 in appendix). 𝑌 stands for the set of tunnel
failure scenarios of interest, and 𝑦𝑙 indicates whether tunnel 𝑙 fails
or not in a failure scenario (𝑦𝑙 = 1 indicates tunnel 𝑙 fails and 𝑦𝑙 = 0
otherwise.) We later discuss how 𝑌 is modeled). Θ(𝑧) is the metric
function we want to optimize. For tractability, we assume Θ(𝑧)
is a concave function, and note that this model covers common
metrics such as overall throughput and maximum link utilization.
For example, Θ(𝑧) =𝑠,𝑡 min{1, 𝑧𝑠𝑡}𝑑𝑠𝑡 models overall throughput.
𝑠,𝑡
{𝑧𝑠𝑡}, and the optimal value is Θ∗,
Alternately, when Θ(𝑧) = min
the model guarantees that Θ∗ fraction of each flow can be sent in
every failure scenario. This also means that using 1/Θ∗ of each
link’s capacity is sufficient to send all the flows. Hence, the inverse
of this Θ∗ is the utilization of the most congested link, also known
as the Maximum Link Utilization (MLU). Thus, Θ(𝑧) = min
{𝑧𝑠𝑡}
minimizes the MLU.
𝑠,𝑡
3.2 Modeling network structure
We now discuss how to model the set of failure scenarios 𝑌. If at
most 𝑝𝑠𝑡 tunnels between 𝑠 and 𝑡 share a common link, FFC assumes
that upto 𝑓 𝑝𝑠𝑡 tunnels can fail under 𝑓 link failures, and plans for
all possible combinations of 𝑓 𝑝𝑠𝑡 tunnel failures. As discussed in
§2, this is conservative – e.g., for the network shown in Fig. 1, FFC
considers the simultaneous failure of 𝑙1 and 𝑙2 even though this
is impossible under single link failure. To address this, PCF more
accurately models 𝑌 by better relating link and tunnel failures. Let
𝑥𝑒 indicate if link 𝑒 fails (𝑥𝑒 = 1 indicates link 𝑒 fails and 𝑥𝑒 = 0
otherwise). Then, PCF models 𝑌 as:
The first constraint bounds the maximum number of simultaneous
link failures. The second ensures that the failure of an underlying
link will cause the tunnel to fail. The third ensures that a tunnel
only fails when at least one underlying link fails. We denote (P1)
with 𝑌 modeled by (4) as PCF-TF. Observe that we do not explicitly
impose that 𝑥𝑒 ∈ {0, 1} because, just as for FFC, the failure set 𝑌
may contain too many scenarios to enumerate. Instead, we con-
servatively relax this requirement to 𝑥𝑒 ∈ [0, 1]. Then, the model
PCF-TF (and all other models presented in this paper) can be solved
using dualization to ensure the number of constraints is polynomial
in the size of the network, a technique that has been widely used
in prior networking papers [9, 26, 37]. Details are presented in the
Appendix. Yet, we prove that (i) PCF-TF performs at least as well
𝑥𝑒 ≤ 𝑓

𝑦𝑙 −
𝑒∈𝐸
𝑥𝑒 − 𝑦𝑙 ≤ 0 ∀𝑙, 𝑒 ∈ 𝜏𝑙
𝑥𝑒 ≤ 0 ∀𝑙
0 ≤ 𝑥𝑒 ≤ 1 ∀𝑒 ∈ 𝐸
0 ≤ 𝑦𝑙 ≤ 1 ∀𝑙 .
𝑒∈𝜏𝑙
(4)
Link capacity: 1                   Link capacity: 1/2 Tunnelss13t 24l1l2l3l4e2e3stuLink capacity: 1 Link capacity: 1/3 e4e5e1SIGCOMM ’20, August 10–14, 2020, Virtual Event, NY, USA
Chuan Jiang, Sanjay Rao, and Mohit Tawarmalani
as FFC; and (ii) unlike FFC, the performance of PCF-TF does not
degrade as more tunnels are added.
Proposition 1. The feasible region (the set of all possible values
of the variables that satisfy the constraints) of FFC is contained in the
feasible region of PCF-TF, so PCF-TF performs at least as well as FFC
(i.e., achieves the same objective or higher) for any metric.
Proof. FFC models 𝑌 as
𝑦𝑙 ≤ 𝑓 𝑝𝑠𝑡 ∀𝑠, 𝑡 ∈ 𝑉
𝑙∈𝑇 (𝑠,𝑡)
0 ≤ 𝑦𝑙 ≤ 1 ∀𝑙 .
(5)
Let 𝑌0 be the set of tunnel failure scenarios considered by FFC
(constrained by (5)) and let 𝑌1 be the set of tunnel failure scenarios
considered by PCF-TF (constrained by (4)). We show that proj𝑦𝑌1 ⊆
𝑌0, where proj𝑦 denotes projection of the set to 𝑦 variables. For any
𝑠, 𝑡 ∈ 𝑉 , we sum the third constraint in (4) over all 𝑙 ∈ 𝑇 (𝑠, 𝑡) to get
𝑙∈𝑇 (𝑠,𝑡)(𝑦𝑙 −𝑒∈𝜏𝑙
𝑦𝑙 ≤ 



𝑙∈𝑇 (𝑠,𝑡)
𝑥𝑒
𝑒∈𝜏𝑙
𝑙∈𝑇 (𝑠,𝑡)
𝛿(𝑒 ∈ 𝜏𝑙),

𝑥𝑒) ≤ 0. Then,


𝑥𝑒 =
𝑙∈𝑇 (𝑠,𝑡)
𝑒∈𝐸
=
𝑒∈𝐸
𝑙∈𝑇 (𝑠,𝑡)
𝑒∈𝐸 𝑥𝑒 is the total number of link failures, which is no more
than 𝑓 . And𝑙∈𝑇 (𝑠,𝑡) 𝛿(𝑒 ∈ 𝜏𝑙) is the number of tunnels from 𝑠
𝑙∈𝑇 (𝑠,𝑡) 𝑦𝑙 ≤ 𝑓 𝑝𝑠𝑡, which shows that any scenario in 𝑌1 also
to 𝑡 traversing link 𝑒, which is no more than 𝑝𝑠𝑡 . Hence, we have
satisfies (5). Since FFC imposes (1) for each 𝑦 ∈ 𝑌0 while PCF-TF
imposes (1) for each (𝑥, 𝑦) ∈ 𝑌1, PCF-TF is less constrained than
FFC. □
The above proof does not depend on the objective function in the
optimization problem, which means that the proposition holds for
any metric. We next show that unlike FFC, PCF-TF’s performance
does not degrade with more tunnels. The intuition behind this is that
when more tunnels are added to PCF-TF, the set of constraints that
need to be satisfied does not increase. Hence, any solution feasible
when fewer tunnels are employed remains feasible when tunnels
are added (though new and better solutions may be possible). Thus
the performance cannot get worse.
Proposition 2. As we provide more tunnels, PCF-TF’s perfor-
mance cannot decrease.
Proof. Let {𝑇0(𝑠, 𝑡) | ∀𝑠, 𝑡 ∈ 𝑉 } and {𝑇1(𝑠, 𝑡) | ∀𝑠, 𝑡 ∈ 𝑉 } be two
sets of tunnels, and 𝑇0(𝑠, 𝑡) ⊆ 𝑇1(𝑠, 𝑡) for all 𝑠, 𝑡 ∈ 𝑉 . Then, we show
that the optimal value for (P1) with 𝑇 = 𝑇1 will not be worse than
the optimal solution to (P1) with 𝑇 = 𝑇0. Let (𝑎∗, 𝑧∗) be the optimal
solution to (P1) with 𝑇 = 𝑇0. We construct (𝑎′, 𝑧′) in the following
way,
𝑙
∀𝑠, 𝑡 ∈ 𝑉 , 𝑙 ∈ 𝑇0(𝑠, 𝑡)
𝑙 = 𝑎∗
𝑎′
𝑎′
𝑙 = 0 ∀𝑠, 𝑡 ∈ 𝑉 , 𝑙 ∈ 𝑇1(𝑠, 𝑡) − 𝑇0(𝑠, 𝑡)
𝑧′
𝑠𝑡 = 𝑧∗
𝑠𝑡 ∀𝑠, 𝑡 ∈ 𝑉 .
(6)
Let 𝑌0 denote (4) with 𝑇 = 𝑇0 and 𝑌1 denote (4) with 𝑇 = 𝑇1. It is
easy to see that projection of 𝑌1 onto the space of variables {𝑥𝑒}𝑒∈𝐸
and {𝑦𝑙}𝑙∈𝑇0 is contained in 𝑌0, since all the constraints in 𝑌0 are
𝑥𝑒𝛿(𝑒 ∈ 𝜏𝑙)
for real networks.
Figure 4: A topology with 𝑚 nodes generalized from the pre-
vious example.


𝑙∈𝑇1(𝑠,𝑡)
𝑎′
𝑙 (1 − 𝑦𝑙) =
present in 𝑌1. Now for each 𝑦 ∈ 𝑌1,
𝑎∗
𝑙 (1 − 𝑦𝑙) ≤ 𝑧∗
where the first equality is because 𝑎′
𝑙 = 0 for 𝑙 ∉ 𝑇0(𝑠, 𝑡), the first
inequality is because (𝑎∗, 𝑧∗) is feasible for𝑇 = 𝑇0 and the projection
of 𝑌1 is contained in 𝑌0 and the last equality is by construction. Since
𝑧 is not altered, the objective value remains the same. □
𝑠𝑡𝑑𝑠𝑡 = 𝑧𝑠𝑡𝑑𝑠𝑡 ,
𝑙∈𝑇0(𝑠,𝑡)
We later show in §5 that PCF-TF performs much better than FFC
3.3 Modeling more flexible response
While PCF-TF is guaranteed to out-perform FFC, we begin by pre-
senting a theoretical result that shows the performance of PCF-TF
can still be arbitrarily worse than optimal because of the inflexi-
bility of tunnel-based reservations. We then discuss PCF’s more
flexible approach.
Proposition 3. The throughput guaranteed by PCF-TF (and hence
that guaranteed by FFC) can be arbitrarily worse than the optimal
even with exponentially many tunnels.
Proof. Consider the topology in Fig. 4 (the example in Fig. 3 is
a special case where 𝑝 = 3, 𝑛 = 2 and 𝑚 = 2). Under any failure
involving 𝑛 − 1 links, the network can carry 1 − 𝑛−1
𝑝 units of traffic
if it responded optimally. This is because under any such failure,
the network can carry (i) at least 1 unit of traffic between 𝑠𝑖 and
𝑠𝑖+1, 𝑖 > 0; and (ii) at least 1 − 𝑛−1
𝑝 units of traffic between 𝑠0 and