## Graceful Shutdown
Use shutdown command in following: -
- router eigrp mode (all AF instances deactivated)
- Under a particular AF, causing that family to be activated
- Under af-interface, ceasing operations for that AF on that interface
## authentication
CLassic mode commands: -
**ip authentication mode eigrp**
**ip authentication key-chain eigrp**
Cannot be done for all interfaces
Named mode: -
Under af-interface
**authentication mode**
**authentication key-chain**
Can also be done under af-interface default
```
key chain EIGRPKeys
 key 1
  key-string DAVE
router eigrp CCIE
 address-family ipv4 autonomous-system 1
  af-interface default
   authentication mode md5
   authentication key-chain EIGRPKeys
  af-interface Fa0/0
   authentication-mode hmac-sha-256 DAVESHA # DAVESHA is not the key used, it is a password set
   authentication key-chain EIGRPKeys
  af-interface F0/1
   authentication mode hmac-sha-256 DAVEISPW
   no authentication key-chain # Above password is now used as the key
  af-interface Se1/0
   no authentication mode
```
Use **show eigrp address-family ipv4 int detail ***interface*** **to see what key chain is used
Each key chain can have the **send-lifetime** set, and to authentication received packets in an **accept-lifetime**.
## Default Routing Using EIGRP
No dedicated command, either requires redistribution or summarization.
EIGRP used to support **ip default-network** command to flag a specific advertised route as candidate default route. Network had to be a classful network and advertised in EIGRP, and with candidate default flag set. Recent versions no longer honour the candidate default flag
If a static route configured with only egress interface, IOS treats route as directly connected network. Therefore if network 0.0.0.0 was used, this default would be pulled in. However this has no effect on anything with a next-hop set instead. Plus, all IPv4 enabled interfaces then become part of EIGRP
## Split Horizon
**no { ip | ipv6 } split-horizon eigrp** - Classic mode
**no split-horizon **- af-interface mode
## EIGRP over the ToP
```
R1
int LISP0
 bandwidth 1000000
int GI0/0
 ip address 192.0.2.31 255.255.255.0
ip route 0.0.0.0 0.0.0.0 192.0.2.2
router eigrp CCIE
 address-family ipv4 unicast autonomous-system 64512
 topology base
 exit-af-topology
 neighbor 198.51.100.62 Gi0/0 remote 100 lisp-encap
  network 10.0.1.0 0.0.0.255
  network 192.0.2.31 0.0.0.0
R2
int LISP0
 bandwidth 1000000
int Gi0/0
 ip address 198.51.100.62 255.255.255.0
ip route 0.0.0.0 0.0.0.0 198.51.100.1
router eigrp CCIE
 address-family ipv4 unicast autonomous-system 64512
 topology base
 exit-af-topology
 neighbor 192.0.2.31 Gi0/0 remote 100 lisp-encap
  network 10.0.2.0 0.0.0.255
  network 198.51.100.62 0.0.0.0
```
Use show ip route to see outgoing interface as LISP0
show ip addr ipv4 nei - Shows neighbour on other side
show ip cef X.X.X.X/X internal - Shows LISP encapsulation in effect
OTP neighbours can be built into a route reflector, to stop the huge mesh of sessions. COnfig is as such: -
```
int LISP0
 bandwidth 1000000
int GI0/0
 ip address 192.0.2.31 255.255.255.0
ip route 0.0.0.0 0.0.0.0 192.0.2.2
router eigrp CCIE
 address-family ipv4 unicast autonomous-system 64512
  af-interface Gi0/0
   no next-hop-self # This is so this doesn't become the transit point
   no split-horizon # This is so routes can be advertised back on same as received interface (necessary for an RR)
  exit-af-interface
  topology base
  exit-af-topology
  remote-neighbors source GI0/0 unicast-listen lisp-encap
  network 10.0.1.1 0.0.0.0
  network 192.0.2.31 0.0.0.0
```
Remote-neighbours allow named-ACL to limit RRs
## EIGRP logging and reporting
- eigrp event-log-size - Set maximum event log entries
- eigrp event-logging - Log routing events
- eigrp log-neighbor-changes - Logs neighbor changes
- eigrp log-neighbor-warnings - Logs warnings of other neighbours
Viewed in **show eigrp address-family {ipv4 | ipv6} events**
The eigrp log-neighbor-warnings [seconds] is on by default, logging neighbour warning messages at 10-second intervals
## Route Filtering
Distribute lists can use ACL, prefix lists and route maps
## Offset lists
Can adjust metric, can be in, out and per interfaces
## Clear routing table
The **clear eigrp address-family { ipv4 | ipv6 } neighbors** command can clear all neighbourships and have router re-establish them. Using **soft** does a graceful restart, making topology tables resync but adjacencies stay up
# OSPF
## Router ID
```
router ospf 1
 router-id X.X.X.X
```
## Static neighbour config
Use **neighbor** command under ospf process. Can be set just one side, better to have on both.
## LSA Type 3 and Inter-Area costs
The **show ip ospf database summary ***link-id*** **shows cost, and **show ip ospf border-routers** shows cost to ABR.
## Stubby auth-pass-phrase-hashed
NSSA - **area ***area-id ***nssa**
Totally NSSA - **area ***area-id ***nssa no-summary**
Stubby - **area ***area-id ***stub**
Totally Stubby - **area ***area-id ***stub no-summary**
NSSA does not have a default route advertised automatically from ABRs. To do this, ABR must have **area ***area-id ***nssa default-information-originate. **NSSA-TS does not require this (automatic default exists)
## OSPF Config
```
R1
int Fa0/0
 ip address 10.1.1.1 255.255.255.0
 ip ospf dead-interval minimal hello-multiplier 4
router ospf 1
 area 3 nssa no-summary
 area 4 stub no-summary
 area 5 stub
 network 10.1.0.0 0.0.255.255 area 0
 network 10.3.0.0 0.0.255.255 area 3
 network 10.4.0.0 0.0.255.255 area 4
 network 10.5.0.0 0.0.255.255 area 5
R2
int Fa0/0
 ip address 10.1.1.2 255.255.255.0
 ip ospf dead-interval minimal hello-multiplier 4
 ip ospf 2 area 0
router ospf 2
 area 5 stub
R3
router ospf 1
 area 3 nssa no-summary
 network 10.0.0.0 0.255.255.255 area 3
R4
router ospf 1
 area 4 stub no-summary
 network 10.0.0.0 0.255.255.255 area 4
S1
int vlan 1
 ip address 10.1.1.3 255.255.255.0
 ip ospf dead-interval minimal hello-multiplier 4
router ospf 1
 router-id 7.7.7.7
 network 10.1.0.0 0.0.255.255 area 0
S2
int vlan 1
 ip address 10.1.1.4 255.255.255.0
 ip ospf dead-interval minimal hello-multiplier 4
 ip ospf priority 254
```
## Clearing Process
** clear ip ospf process ** - Clears all processess
**log-adjacency-changes detail** - Shows message at each state Change
## Interface costs
```
ip ospf cost
router ospf  1
 auto-cost-reference-bandwidth *mbps*
```
Set per neighbour with **neighbor** neighbor **cost value**
## Alternative to OSPF network command
** ip ospf process-id area area-id **
All secondaries matched too unless using ** secondaries none ** at end
## OSPF Filtering
### Distribute List
- Distribute list in inbound direction applies to results of SPF, not prior to it
- Distribute list in outbound applies only to redistributed routes and only on ASBR, selects which redistributed routes shall be advertised
- Inbound logic does not filter inbound LSAs, filters routes that SPF chooses to add to routing table
- If distribute list includes incoming interface, interface checked as if it were outgoing interface of the route. This means that the routes may have been flooded from multiple interfaces, so router checks outoing interface of route as if it had learned about routes through updates coming in that interface
```
router ospf 1
 distribute-list prefix prefix-list-1 in Serial 0.2
router ospf 1
 distribute-list route-map rm-1 in
route-map rm-1 deny 10
 match ip address 48
 match ip route-source 51 # Use an ACL to specify source of routes, eg permit 2.2.2.2
 ```
### ABR LSA Type 3 Filtering
**area ***number ***filter-list prefix ***name ***in | out **
- When direction in, prefixes filtered going into configured aresa
- When direction out, prefixes filtered coming out of configured area
### FIltering Type 3 with area range
Area range performs route summarization at ABRs, telling route to cease advertising smaller subnets in a particular address range, sending a single type 3 LSA with a summary.
When using the **not-advertise **keyword, summary route not advertised either.
## Virtual link
```
R1
router ospf 1
 area 3 virtual-link 3.3.3.3
R3
router ospf 1
 area 3 virtual-link 1.1.1.1
```
## Classic authentication
None
int Fa0/0
 ip ospf authentication null
Clear text
int Fa0/0
 ip ospf authentication
 ip ospf authentication-key key-value
MD5
int Fa0/0
 ip ospf authentication message-digest
 ip ospf message-digest-key key-number md5 key-value
### Virtual link auth
**area ***area-id ***virtual-link ***router-id ***authentication null **means type 0.
**area ***area-id ***virtual-link ***router-id ***authentication** means type 1.
**area ***area-id ***virtual-link ***router-id ***authentication message-digest **means type 2
## Extended Crypto OSPF Auth
```
key chain ospf
 key 1
  cryptographic-algorithm hmac-sha-1/256/384/512/md5
  key-string DAVE
int Gi0/0
 ip ospf authentication key-chain ospf
```
## OSPF TTL Security
Enable per interface with **ip ospf ttl-security**, or per process using **ttl-security all-interfaces**, exempt from an interface with **ip ospf ttl-security disable.**
To enable on sham or virtual links, do **area virtual-link ttl-security hops** or **area sham-link ttl-security hops. **Hops is mandatory in this (should be based on longest possible intera area path).
## Tuning OSPF performance
### SPF Throttling (for SPF scheduling)
Configured with **timers throttle spf ***spf-start spf-hold spf-max-wait *under **router ospf**. All arguments in milliseconds. Current values shown in **show ip ospf**. Also, **debug ip ospf spf statistic** can verify current and next wait intervals.
### LSA Throttling (for LSA origination)
Configured with **timers throttle lsa all ***start-interval hold-interval max-interval. *All in milliseconds. Can be seen in show ip ospf**. **Router can be configured to ignore an LSA upon arrival if it arrives too often. Use **timers lsa arrival ***milliseconds. *Same LSA is accepted only if it arrives more than milliseconds after previous accepted one. Default 1000 ms, seen in show ip ospf. Should be smaller than neighbours initial hold in LSA throttling, otherwise neighbour allowed to send sooner than would be accepted.
## Incremental ISPF
Configure by applying **ispf** under router ospf context. Can be enabled per router, not needed through entire network to work.
## OSPFv2 Prefix Suppression
Enabled in v2 with **prefix-suppression** command (works on all OSPF interfaces except loopbacks). Cnfigure per interface with ** ip ospf prefix-suppression, **add the **disable **keyword to disable it per interface.
## OSPF stub router config
**max-metric router-lsa on-startup ***announce-time- *Done under router ospf, in seconds
**max-metric router-lsa on-startup wait-for-bgp ** - Waits until BGP signals convergence or until 10 minutes pass
## OSPF Graceful Restart
CEF handles forwarding during graceful restart, OSPF rebuilds RIB tables, provided conditions met. Cisco and IETF NSF awareness enabled by default in IOS. Disable with **nsf [ cisco | ietf ] helper disable**
## OSPF Graceful Shutdown
Use **shutdown** under process
## OSPFv3
### Over FR
```
int Se0/0
 frame-relay map ipv6 FE80::207:85FF:Fe80:7208 708 broadcast
 frame-relay map ipv6 2001::207:85FF:FE80:7208 708
```
### Config
```
ipv6 unicast-routing
ipv6 cef
int Lo0
 ipv6 address 3001:0:3::/64 eui-64
 ipv6 ospf 1 area 704
int Lo1
 ip address 10.3.3.6 255.255.255.0
int lo2
 ipv6 address 3001:0:3:2::/64 eui-64
 ipv6 ospf network point-to-point
 ipv6 ospf 1 area 0
int Fa0/0
 ipv6 address 2001:0:3::/64 eui-64
 ipv6 ospf 1 area 704
int Se0/0
 bandwidth 128
 encapsulation frame-relay
 ipv6 address 2001::/64 eui-64
 ipv6 ospf neighbor FE80::207:85FF:Fe80:71B8
 frame-relay map ipv6 FE80::207:85FF:FE80:71B8 807 broadcast
 frame-relay map ipv6 2001::207:85FF:FE80:71B8 807
ipv6 router ospf 1
```
Can verify config with show ipv6 interface brief, show ipv6 protocols (under ospf it will show interfaces and area), show ipv6 ospf interface, show ipv6 router ospf
### v3 Auth and Encryption
```
int Fa0/0
 ipv6 ospf auth ipsec spi 1000 sha1 
int Se1/0
 ipv6 ospf encryption ipsec spi 1001 esp aes-cbc 128 
ipv6 router ospf 1
 area 1 authentication ipsec spi 1002 md5 
 area 2 encryption ipsec spi 1003 esp 3des  md5 
 ```
### Address Family config
```
int lo0
 ipv6 address 2001:DB8:0:FFFF::1/128
 ip address 10.255.255.1 255.255.255.255
 ospfv3 1 ipv6 area 0
 ospfv3 1 ipv4 area 0
int Fa0/0
 ipv6 address 2001:DB8:1:1::1/64
 ip address 10.1.1.1 255.255.255.0
 ospfv3 network point-to-point
 ospfv3 1 ipv6 area 1
 ospfv3 1 ipv4 area 1
int Se0/0/0
 ipv6 address 2001:DB8:0:1::1/64
 ip address 10.0.1.1 255.255.255.0
 ospfv3 hello-interval 1
 ospfv3 1 ipv6 area 0
 ospfv3 1 ipv4 area 0
router ospfv3 1
 address-family ipv4
  area 1 range 10.1.0.0 255.255.0.0
 address-family ipv6
  area 1 range 2001:DB8:1::/48
```
### Prefix Suppression
Configured per process with **prefix-suppression**, or per interface with **ipv6 ospf prefix-suppression **or **ospfv3 prefix-suppression.** If configured outside of AF, affects all address families, or can be done per address family.
# IS-IS
## Metric
Default metric of 10 on all interfaces in IOS, regardless of Bandwidth. No automatic calculation. Can be defined on interface with **isis metric ***metric *[ *level *].
## Hellos
10 second hello time by default, can be set between 1 to 65535 per interface with **isis hello-interval ***seconds *[ *level *]. Hold time done as multiplier of hello. Default is 3. Can be changed with **isis hello-multiplier ***multiplier *[ *level *]. Timers do not need to match between neighbors.
## Three way handshake
** isis three-way-handshake cisco ** - per interface
** isis three-way-handshake ietf ** - per interface
## CSNPs
**isis csnp-interval ***interval *[ *level *]
## Interface priority
Interface priority in range of 0 to 127, configured with **isis priority ***priority *[ *level *]. Entire range usable. 0 excludes router from being a DIS
## Summarization