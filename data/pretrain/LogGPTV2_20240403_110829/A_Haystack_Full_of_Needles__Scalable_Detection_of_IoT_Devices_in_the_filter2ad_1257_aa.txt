title:A Haystack Full of Needles: Scalable Detection of IoT Devices in the
Wild
author:Said Jawad Saidi and
Anna Maria Mandalari and
Roman Kolcun and
Hamed Haddadi and
Daniel J. Dubois and
David R. Choffnes and
Georgios Smaragdakis and
Anja Feldmann
If you cite this paper, please use the IMC reference: Said Jawad Saidi, Anna Maria Mandalari, Roman Kolcun, Hamed Haddadi, Daniel J. Dubois, David Cho(cid:130)nes, Georgios
Smaragdakis, Anja Feldmann. 2020. A Haystack Full of Needles: Scalable Detection of IoT Devices in the Wild. In Internet Measurement Conference (IMC ’20), October 27–29,
2020, Virtual Event, USA. ACM, New York, NY, USA, 14 pages. h(cid:138)ps://doi.org/10.1145/3419394.3423650
A Haystack Full of Needles:
Scalable Detection of IoT Devices in the Wild
Said Jawad Saidi
Max Planck Institute for Informatics
Anna Maria Mandalari
Imperial College London
Hamed Haddadi
Imperial College London
Daniel J. Dubois
Northeastern University
Roman Kolcun
Imperial College London
David Cho(cid:130)nes
Northeastern University
Georgios Smaragdakis
TU Berlin
Max Planck Institute for Informatics
Anja Feldmann
Max Planck Institute for
Informatics/Saarland University
ABSTRACT
Consumer Internet of (cid:140)ings (IoT) devices are extremely popular,
providing users with rich and diverse functionalities, from voice
assistants to home appliances. (cid:140)ese functionalities o(cid:137)en come with
signi(cid:128)cant privacy and security risks, with notable recent large-
scale coordinated global a(cid:138)acks disrupting large service providers.
(cid:140)us, an important (cid:128)rst step to address these risks is to know what
IoT devices are where in a network. While some limited solutions
exist, a key question is whether device discovery can be done by
Internet service providers that only see sampled (cid:131)ow statistics. In
particular, it is challenging for an ISP to e(cid:129)ciently and e(cid:130)ectively
track and trace activity from IoT devices deployed by its millions
of subscribers—all with sampled network data.
In this paper, we develop and evaluate a scalable methodology
to accurately detect and monitor IoT devices at subscriber lines
with limited, highly sampled data in-the-wild. Our (cid:128)ndings in-
dicate that millions of IoT devices are detectable and identi(cid:128)able
within hours, both at a major ISP as well as an IXP, using passive,
sparsely sampled network (cid:131)ow headers. Our methodology is able
to detect devices from more than 77% of the studied IoT manufac-
turers, including popular devices such as smart speakers. While
our methodology is e(cid:130)ective for providing network analytics, it
also highlights signi(cid:128)cant privacy consequences.
CCS CONCEPTS
•Security and privacy → Network security; •Networks → Net-
work monitoring; Public Internet; Network measurement;
KEYWORDS
Internet of (cid:140)ings, IoT detection, IoT secuirty and privacy, Internet
Measurement
1 INTRODUCTION
(cid:140)e number of IoT devices deployed within homes is increasing
rapidly. It is estimated that at the end of 2019, more than 9.5 billion
IoT devices were active, and the IoT population will increase to 20
billion by 2025 [1]. Such devices include virtual assistants, smart
home control, cameras, and smart TVs. While users deploy some
IoT devices explicitly, they are o(cid:137)en unaware of the security threats
and privacy consequences of using such devices [2]. Major Internet
Service Providers (ISPs) are developing strategies for dealing with
the large-scale coordinated a(cid:138)acks from these devices.
Existing solutions focus on instrumenting testbeds or home en-
vironments to collect and analyze full packet captures [3–5], local
search for IoT anomalies [6, 7], active measurements [8, 9], or
data from antivirus companies running scan campaigns from users
homes [7]. In isolation, these data sources do not provide enough
insights for preventing network-wide a(cid:138)acks from IoT devices [10].
Detecting IoT devices from an ISP can help to identify suspicious
tra(cid:129)c and what devices are common among the subscriber lines
generating that tra(cid:129)c.
In this paper, we present a methodology for detecting home
IoT devices in-the-wild at an ISP, and an Internet Exchange Point
(IXP), by relying on passive, sampled network traces and active
probing experiments. We build on the insight that IoT devices
typically rely on backend infrastructure hosted on the cloud to
o(cid:130)er their services. While contacting such infrastructure, they
expose information, including their tra(cid:129)c destinations, even when
a device is not in use [4]. One of the challenges of detecting IoT
devices at scale is the poor availability and low granularity of data
sources. (cid:140)e available data is o(cid:137)en in the form of centrally-collected
aggregate and sampled data (e.g., NetFlow [11], IPFIX traces [12]).
(cid:140)us, we need a methodology that (a) does not rely on payload and
(b) handles sparsely sampled data.
Another challenge is tra(cid:129)c pa(cid:136)erns diversity, across IoT devices
and their services.1 We note that some devices, e.g., cameras, will
generate signi(cid:128)cant continuous tra(cid:129)c; others, e.g., plugs, can be
expected to be mainly passive unless used. Moreover, many devices
o(cid:130)er the same service, e.g., the Alexa voice assistant [13] is available
on several brands of smart speakers as well as on Amazon Fire
TV devices. Here, the tra(cid:129)c pa(cid:138)erns may depend on the service
rather than the speci(cid:128)c IoT device. Some services rely on dedicated
backend infrastructures, while others may use shared ones, e.g.,
CDNs. (cid:140)us, we need a methodology that identi(cid:128)es which IoT
services are detectable from the tra(cid:129)c and then identi(cid:128)es a unique
tra(cid:129)c pa(cid:138)ern for each IoT device and associated services.
Our key insight is that we can address these challenges by fo-
cusing our analysis only on the types of destinations contacted by
IoT devices. Even with sparsely sampled data, the set of servers
contacted by an IoT device over time can form a reasonably unique
1Here we refer to IoT services as the set of protocols and destinations that are part of
the operations of an IoT device.
0
2
0
2
p
e
S
0
3
]
I
N
.
s
c
[
3
v
0
8
8
1
0
.
9
0
0
2
:
v
i
X
r
a
• We show that it is possible to detect the presence of IoT devices
at subscriber lines, using sparsely sampled (cid:131)ow captures from a
large residential ISP, and a major IXP, even if the device is idle,
i.e., not in active use. Speci(cid:128)cally, we were able to recognize
that 20% of 15 million subscriber lines used at least one of the 56
di(cid:130)erent IoT products in our testbed.
• We highlight that our technique scales, is accurate, and can
identify millions of IoT devices within minutes, in a non-intrusive
way from passive, sampled data. In the case of the ISP, we were
able to detect the presence of devices from 72% of our target
manufacturers within 1 hour, sometimes minutes.
Based on our (cid:128)ndings, we also discuss why some IoT devices are
faster to detect, how to hide an IoT service, as well as how the
detectability can be used to improve IoT services and network
troubleshooting.
2 IOT – CONTROLLED EXPERIMENTS
We need ground truth tra(cid:129)c from IoT devices, as observed both in a
testbed and in the wild, for developing and testing our methodology.
In this section, we describe our data collection strategy (see point
1 of Figure 2).
2.1 Network Setting
We utilize two vantage points, namely a large European ISP, and a
major European IXP.
ISP (ISP-VP). (cid:140)e ISP is a large residential ISP that o(cid:130)ers Internet
services to over 15 million broadband subscriber lines. (cid:140)e ISP
uses NetFlow [11] to monitor the tra(cid:129)c (cid:131)ows at all border routers
in its network, using a consistent sampling rate across all routers.
Figure 3 shows where NetFlow data is collected.
IXP (IXP-VP). (cid:140)e IXP facilitates tra(cid:129)c exchange between its
members. At this point, it has more than 800 members, including
international, with peak tra(cid:129)c exceeding 8 Tbps. (cid:140)e IXP uses
IPFIX [12] to collect tra(cid:129)c data across its switching fabric at a
consistent sampling rate, which is an order of magnitude lower
than the one used at the ISP. Figure 4 illustrates where the IPFIX
data is collected.
Ethical considerations ISP/IXP. Neither the ISP nor the IXP (cid:131)ow
data contain any payload data, thus no user information. We distin-
guish user IPs from server IPs and anonymize by hashing all user
IPs, following the method described in [5]. (cid:140)e address space of
the ISP residential users is known. We call an IP a server IP if it
receives or transmits tra(cid:129)c on well-known ports or if it belongs to
ASes of cloud or CDN providers. (cid:140)e ports include, e.g., web ports
(80, 443, 8080), NTP (123), DNS (53). Moreover, we do not have any
speci(cid:128)c user activity and can only access and report aggregated
statistics in accordance with the policies of the ISP and IXP.
Subscriber line (Home-VP) Network setup. In order to ingest
ground truth tra(cid:129)c into the network, we need privileged access to
a home subscriber line. For this, we use the ISP-VP, but rather than
deploying all IoT devices directly within the home, we placed a
VPN endpoint with an IP out of the /28 subscriber’s pre(cid:128)x and used
it to ingest IoT tra(cid:129)c tunneled to the server from two IoT testbeds,
one in Europe, one in the US, see Figure 3. (cid:140)e measurement points
within the ISP will also capture this tra(cid:129)c. We simply excluded this
tra(cid:129)c from our dataset, as the VPN tunnel endpoints are known
Figure 1: Simpli(cid:128)ed IoT communication patterns.
signature that is revealed in as li(cid:138)le as a few hours. However, this
approach has limitations, for example we cannot use it to detect
devices or services that use a shared infrastructure with unrelated
services (e.g., CDNs).
To understand the detectability of IoT devices in the above-
mentioned environment, we focus on the possible communication
pa(cid:138)erns of end-user IoT services and the types of destinations they
contact. Figure 1 shows three possible communication pa(cid:138)erns on
top of a typical network topology. (cid:140)is includes three households,
an ISP, as well as a dedicated infrastructure and a CDN that hosts
multiple servers. Device A is deployed by two subscribers, and only
contacts one server in the dedicated infrastructure. Device B is de-
ployed by a single subscriber and contacts both a dedicated server,
as well as a CDN server. Device C is deployed by two subscribers
and contacts only CDN servers. We observe that, using NetFlow
traces at the ISP edge, it is possible to identify subscriber lines