# 中国网安集团·广州三零卫士
## 作者：伍智波（SkyMine）

### 1. Linux 主要日志类型的分析

#### 1.1 access.log
`access.log` 是 Web 中间件中最重要的日志文件之一，它记录了所有访问 Web 应用的请求。记录的字段主要包括来源 IP、请求时间、请求方法、请求路径、HTTP 状态码和请求包大小等。这些信息是识别 Web 攻击的重要指标。

示例：
```
192.168.97.1 - - [02/Mar/2018:02:24:16 +0800] "GET /guestbook.php HTTP/1.1" 200 831 "-" "Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0"
192.168.97.1 - - [02/Mar/2018:02:54:28 +0800] "GET /manage/login.php?gotopage=%20UNION%20ALL%20SELECT%20NULL%2CNULL%2CNULL--%20AFdY HTTP/1.1" 200 1689 "-" "sqlmap/1.2.4#stable (http://sqlmap.org)"
```

#### 1.2 /var/log/secure
`/var/log/secure` 是 Linux 的重要日志之一，记录了安全信息和系统登录的相关信息，包括 SSH 登录、SFTP 等。通过这个日志文件，可以审计 SSH 爆破、22 端口非法文件操作等安全事件。

示例：
```
Mar  2 06:10:02 ubuntu sshd[4886]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=192.168.97.1  user=test
Mar  2 06:10:02 ubuntu sshd[4860]: pam_unix(sshd:session): session opened for user test by (uid=0)
Mar  2 06:15:14 ubuntu sftp-server[5181]: session opened for local user test from [192.168.97.1]
Mar  2 06:24:08 ubuntu sftp-server[5181]: open "/tmp/test.php" flags WRITE,CREATE,TRUNCATE mode 0644
Mar  2 06:24:08 ubuntu sftp-server[5181]: close "/tmp/test.php" bytes read 0 written 1486
```

#### 1.3 /var/log/cron
`/var/log/cron` 是 Linux 的系统日志之一，记录了系统所有的计划任务执行记录。在这个日志里往往可以找到黑客在“后渗透阶段”设置的一些持久性后门。

示例：
```
Mar  2 08:52:01 ubuntu cron[1115]: (*system*) RELOAD (/etc/crontab)
Mar  2 08:53:01 ubuntu CRON[7469]: (root) CMD (/opt/shell.elf &)
```

### 2. Windows 主要日志类型的分析

#### 安全日志
Windows 服务器的安全事件分析中，安全日志是最重要的数据之一。利用这个日志，我们可以获悉常见的攻击类型，如 3389 账号爆破等。

### 3. 某单位遭遇黑客入侵后的日志分析过程

#### 3.1 事件通报
2018 年 3 月 2 日上午 8 点 50 分左右，某单位被上级单位通报其门户网站服务器正在不断对外连接浙江省 IP 地址 110.75.192.33 的 TCP 8888 端口。应急响应小组于当天上午 9 点 40 分到达现场处置该事件。

#### 3.2 初步定位
应急响应小组到场后，迅速通过 `netstat –anltp | grep “110.75.192.33:8888”` 定位对外连接的进程，找到了相关进程，并通过 `ps –aux | grep “shell.elf”` 找到了进程的路径。记录了 `shell.elf` 的创建时间（即上传时间），发现其权限为 root，证明黑客已经获得 root 权限。经过逆向分析，确认 `shell.elf` 是一个 Metasploit 反向连接后门。

#### 3.3 进一步分析
根据通报，向 110.75.192.33 的 TCP 8888 端口发送的连接请求是不断发生的，但 `shell.elf` 本身并不具备重复连接的功能。因此我们推断黑客为 `shell.elf` 设置了计划任务，并通过查看 `/var/log/cron` 印证了这个想法。

#### 3.4 登录记录
执行 `last` 命令查看 root 用户的登录记录，发现 root 用户曾在上午 8 点 17 分至 8 点 24 分被黑客登录过，持续时间为 7 分钟。通过查看 `/var/log/secure`，确认黑客是通过 SFTP 上传 `shell.elf` 的。

#### 3.5 爆破尝试
在 `/var/log/secure` 中还发现了黑客成功登录 root 用户前，系统上的所有拥有登录权限的用户在早上 7 点 15 分左右都被尝试爆破过，用户名十分精准。因此我们猜测 `/etc/passwd` 文件可能已经暴露。早上 7 点 41 分左右，root 用户被成功爆破。

#### 3.6 Web 漏洞
由于 `/etc/passwd` 文件暴露时，黑客尚未取得 root 用户密码，我们推断黑客是通过某个 Web 漏洞来读取 `/etc/passwd` 文件的。通过 `cat access.log | grep “110.75.192.33”` 命令确定 110.75.192.33 仅是一个 Metasploit 控制端，黑客没有用来访问过网站，而是使用 39.128.40.187 进行访问，访问次数为 204907 次。

#### 3.7 访问行为分析
针对 IP 39.128.40.187 进行访问行为分析，发现了一条来自该 IP 的诡异 GET 请求记录。通过验证，确认此处存在远程代码执行漏洞，黑客在此处读取了 `/etc/passwd` 文件。进行这个 GET 请求必须具备访问后台的权限。

#### 3.8 管理后台突破
由于远程代码执行漏洞在 `manage` 目录下，黑客可以成功利用代表黑客已经取得管理后台的权限。继续翻看 `access.log`，发现黑客在凌晨 3 点 50 分左右曾经对管理后台账号密码进行过爆破，并且爆破成功。

#### 3.9 入侵过程总结
现在我们基本上可以确定，黑客的所有入侵行为都是从管理后台进行突破的。再往上翻看日志，也能发现黑客在凌晨 2 点 19 分左右就开始对网站进行漏洞扫描和目录扫描了。

### 4. 入侵案例攻击链分析

- 2018/3/2 02:13:54：黑客最初访问该单位网站
- 2018/3/2 02:19:31：黑客开始对网站进行漏洞扫描，无果
- 2018/3/2 03:15:44：黑客开始扫描网站目录
- 2018/3/2 03:20:35：黑客成功跑到后台管理地址
- 2018/3/2 03:26:56：黑客开始爆破后台管理密码
- 2018/3/2 04:10:13：黑客成功登录管理后台，开始对管理后台进行渗透
- 2018/3/2 05:43:01：黑客发现远程代码执行漏洞，读取了 `/etc/passwd` 文件内容
- 2018/3/2 07:13:15：黑客开始通过 SSH 爆破可登录用户
- 2018/3/2 07:41:25：黑客成功爆破 root 用户密码
- 2018/3/2 08:31:07：黑客利用 SFTP 上传了反向木马 `shell.elf`，并设置计划任务
- 2018/3/2 08:50:xx：`shell.elf` 反向连接行为被上级单位识别，并被通报

感谢您的阅读！