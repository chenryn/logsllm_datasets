The  result  provided  by  the  offline  correlation  process
should  enable  the  online  correlation  process  to  fully
recognize  the  “illegal  NFS  mount”  scenario.  However,
when  this  attack  is  launched  on  a  system  supervised  by
Snort and e-Trust, 9 alerts are generated: 7 by Snort and 2
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
in  Java  (see  the  appendix  for  a  view  of  this  graphical
interface).
It is important to observe that alert correlation is very
useful  to  reduce  the  number  of  false  positives.  For
instance, notice that separately each step of the intrusion
scenario  “illegal  NFS  Mount”  presented  in  section  5
might  actually  correspond  to  a  false  positive.  It  is  only
after correlating alerts that we can derive that an intrusion
occurred.  Therefore,  in  many  cases,  it  is  possible  to
conclude  that  an  alert  that  is  not  further  correlated  with
other alerts is actually a false positive.
the 
There are several issues to this work.
First,  we  are  currently  designing 
intention
recognition function. The main objective of this function
is to anticipate on how the intruder will go on. To achieve
this objective, we are actually combining two approaches:
•  Abductive  correlation  is  used  to  forecast  next  step  of
the attack scenario. This first approach is based on the
analysis  of  facts  attack_correlation(Attack1,Attack2)
and is therefore simpler than the abductive correlation
process  presented  in  section  5  since  virtual  alerts  are
not generated in this case.
•  Specification of global  intrusion  objectives.  This  idea
is quite similar to specifying a security policy since we
may assume that  the  intruder’s  objective  is  to  violate
the security policy (at least from  a defensive point of
view!). A  global  intrusion  objective  might  be  viewed
as a logical expression describing the target’s state the
intruder wants to achieve. The principal of this second
approach  is  then  to  correlate  attacks  with  intrusion
objective  (corresponding  to  the  violation  of  the
security  policy).  This  would  guide  the  intention
recognition process.
Of  course,  in  both  cases,  the  intention  recognition
function may provide several possibilities, that is several
“next  steps”  in  the  first  approach  and  several  possible
intrusion  objectives  in  the  second  approach.  Therefore,
we have also to design an approach to choose the “best”
possibility. This is still an open research problem.
This  briefly  sketch  our  approach  for  the  intention
recognition  function.  We  plan  to  provide  more  details
about this function in a forthcoming paper.
Second, we plan to encode a larger base of attacks in
LAMBDA.  The  objective  here 
the
correlation results but also to check whether it is possible
to  use  our  correlation  approach  to  discover  new  attack
scenarios  by  searching  how  to  correlate  elementary
attacks.
improve 
to 
is 
Finally, notice that the architecture we suggest in this
paper  is  centralized,  the  CRIM  module  receiving  all  the
alerts  generated  by  the  IDS.  This  is  mainly  due  to
technical constraints since we consider in the MIRADOR
project  that  it  was  not  practical  to  directly  create
communication between IDS. Such a distributed approach
was  suggested  in  [14].  The  authors  illustrate  their
case  is  to  manage  interval  of  time.  Due  to  space
limitation, this point is not developed here but we plan to
present it in a forthcoming paper.
to 
alert 
attack_mount 
corresponding 
Once the virtual alert is abduced, the online correlation
process applies the corresponding correlation rules. It first
checks  if  cond4  is  satisfied.  In  particular,  we  have  to
satisfy 
the  following  condition:  Target_address1  =
Target_address2 where Target_address1 is the IP address
of 
and
Target_address2  is  the  IP  address  of  the  virtual  alert.
Since Target_address2 is actually a Skolem constant, this
unification  succeeds  and  Target_address2  is  updated  so
that it is now equal to Target_address1. Then, we have to
check  if  cond6  is  satisfied.  cond6  includes  a  condition
having  the  form  Target_address2  =  Target_address3
where  Target_address2  is  the  IP  address  of  the  virtual
alert  and  Target_address3  is  the  IP  address  of  alert
corresponding  to  attack_rlogin.  But  Target_address2  is
now  equal  to  Target_address1,  so  that  checking  cond6
will only  succeed if Target_address1 is  actually  equal  to
Target_address3,  that  is  the  alerts  corresponding  to
attack_mount  and  attack_rlogin  have  a  target  with  the
same IP address. Else cond6 is not satisfied and therefore
the abductive correlation does not succeed.
We shall proceed similarly for cond5 to check whether
it  is  possible  to  correlate  the  alert  corresponding  to
attack_finger with the virtual alert. In this case,  we have
also to satisfy the following condition: Target_address4 =
Target_address2 where Target_address4 is the IP address
of 
and
Target_address2 is the IP address of the virtual alert. This
condition  is  satisfied  if  the  alerts  corresponding  to
attack_mount  and  attack_finger  have  a  target  with  the
same IP address.
corresponding 
attack_finger 
alert 
to 
In our experiment, abduction of an alert corresponding
to attack_rhost succeeds. Therefore, the online correlation
function  correlates  all  the  alerts  generated  by  the  attack
“illegal nfs mount” into one single scenario, even though
step 5 of this attack is not detected (see the appendix for a
graphical presentation of the corresponding detection).
6. Conclusion
In  this  paper,  we  have  presented  the  approach  we
suggest  designing  the  correlation  function  of  CRIM,  a
cooperative module for intrusion detection systems. After
specifying  an  attack  base 
the  offline
correlation  process  analyzes  these  attack  descriptions  to
automatically  generate  a  set  of  correlation  rules.  The
online  correlation  process  then  applies  these  correlation
rules on the alerts generated by the IDS to recognize more
global attack scenarios.
in  Lambda, 
All 
the  approach  (including  clustering,  merging,
correlation 
correlation)  has  been
implemented in GNU-Prolog [5] with a graphic interface
abductive 
and 
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
approach with the Mitnick attack. There are two steps in
this  attack.  In  the  first  step,  the  intruder  floods  a  given
host  H.  Then  the  intruder  sends  spoofed  messages
corresponding to H address to establish a communication
with a given server S. When S  sends an acknowledge to
H,  H  cannot  ask  to  close  the  connection  since  it  is
flooded. In a distributed approach, a first IDS can detect
that  H  is  flooded  and  then  asks  a  second  IDS  to  detect
whether S continues receiving  messages  with  H  address.
If this is the case, then we can conclude that the Mitnick
attack  is  occurring.  We  agree  that  this  distributed
approach  is  interesting  and  we  plan  to  analyze  it  in  the
future.
Acknowledgements
This work was funded by the DGA/CELAR/CASSI as
a part of the Mirador project. The authors would also like
to  thank  all  the  members  of  this  project:  Jacques
Capoulade,  Mamadou  Diop,  Samuel  Dubus,  Aldric
Feuillebois (Alcatel CIT), Patrice Carle (ONERA), Ewan
Cochevelou,  Sylvain  Gombault 
(ENST-Bretagne),
Laurent  Heye,  Ludovic  Mé  and  Cédric  Michel  (SupElec
Rennes).
Annexe 1: Graphical interface
Figure 9 presents a view of CRIM interface. There are
3  sub-windows  in  this  interface.  The  upper  window
provides a view of alerts that are directly generated by the
IDS  connected  to  CRIM  or  abduced  by  CRIM  (virtual
alerts).  The  central  window  corresponds  to  fusion  alerts,
that is alerts generated by the merging function of CRIM.
Finally, the lower window presents the alerts generated by
the online correlation function. It actually shows detection
of the “Illegal NFS Mount” scenario presented in Section
5.  Alertid_1  is  a  virtual  alert  corresponding  to  attack
“MIR-0164” (Modification of .rhost) that is automatically
abduced 
scenario.
to  complete  detection  of 
this 
Figure 9 : Graphical Interface
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE 
 [8] K. Kendall. “A Database of Computer Attacks
for  the  Evaluation  of  Intrusion  Detection
Systems”. June 1999.
 [9] W.  Lee.  “Combining  Knowledge  Discovery
and  Knowledge  Engineering  to  Build  IDSs”.
Proceedings  of 
International
Workshop  on 
in
Intrusion Detection (RAID’99), Purdue, USA,
October 1999.
the  Second 
the  Recent  Advances 
[10] R.  Lippmann.  “Using  Key  String  and  Neural
Networks to Reduce False Alarms and Detect
New  Attacks  with  Sniffer-Based  Intrusion
Detection  Systems”. Proceedings  of 
the
Second International Workshop on the Recent
Advances  in  Intrusion  Detection  (RAID’99),
Purdue, USA, October 1999.
 [11] C.  Michel  and  L.  Mé.  Adele:  “an  Attack
Description  Language  for  Knowledge-based
Intrusion  Detection”. 
International
Conference  on  Information  Security.  Kluwer.
June 2001.
16th 
[12] M.  Roesch.  “Snort  –  Lightweight  Intrusion
Detection  for  Networks”.  Proceedings  of
USENIX LISA’99, November 1999.
in 
 [13] A. Valdes and K. Skinner. “Probabilistic Alert
the  Fourth
the  Recent
Detection
Correlation”.  Proceedings  of 
International  Workshop  on 
Advances 
Intrusion 
(RAID’2001), Davis, USA, October 2001.
J.  Yang,  P.  Ning,  X.  Wang,  and  S.  Jajodia.
“CARDS : A Distributed System for Detecting
Coordinated  Attacks”.  IFIP  TC11  Sixteenth
Annual  Working  Conference  on  Information
Security, August 2000.
[14]
[15]  D.  Zerkle.  „A  Data-Mining  Analysis  of
Second
the 
RTID”. 
International  Workshop  on 
the  Recent
Advances  in  Intrusion  Detection  (RAID’99),
Purdue, USA, October 1999.    
Proceedings 
of 
References
[1]
[2]
[3]
[4] 
Intrusion
Computer  Associates.  E-Trust 
Detection. 2000.
D. Curry and H. Debar. “Intrusion Detection
Message Exchange Format Data Model  and
Extensible  Markup  Language 
(XML)
Document  Type  Definition”.  draft-itetf-
idwg-idmef-xml-03.txt, February 2001.
F.  Cuppens.  “Managing  alerts  in  a  multi-
intrusion  detection  environment”.  17th
Annual  Computer  Security  Applications
Conference 
New-Orleans,
December 2001.
F.  Cuppens  and  R.  Ortalo.  “LAMBDA:  A
Language to Model a Database for Detection
the  Third
of  Attacks”.  Proceedings  of 
International  Workshop  on 
the  Recent
Advances 
Intrusion 
Detection
(RAID’2000),  Toulouse,  France,  October
2000.
(ACSAC). 
in 
1.2.1. 
[5] M.  Diaz.  GNU  Prolog:  A  Native  Prolog
Compiler  with  Constraint  Solving  over
Finite Domains. Edition 1.4 for GNU Prolog
version 
http://gnu-
prolog.inria.fr/manual/. July, 2000.
H.  Debar  and  A.  Wespi.  “The  Intrusion-
Detection Console Correlation Mechanism”.
Workshop  on 
in
Intrusion  Detection  (RAID’2001),  Davis,
USA, October 2001.
the  Recent  Advances 
[6]
 [7] M.-Y.  Huang.  “A  Large-scale  Distributed
Intrusion  Detection  Framework  Based  on
Attack  Strategy  Analysis”.  Proceedings  of
the  First  International  Workshop  on  the
Recent  Advances  in  Intrusion  Detection
(RAID’98),  Louvain-La-Neuve,  Belgium,
1998.
Proceedings of the 2002 IEEE Symposium on Security and Privacy (S&P(cid:146)02) 
1081-6011/02 $17.00 ' 2002 IEEE