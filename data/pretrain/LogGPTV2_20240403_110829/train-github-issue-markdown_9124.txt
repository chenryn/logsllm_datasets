### Describe the bug
When a model has a `LargeBinary` column, and I try to `first()` or `one()` a
query, a TypeError is raised.  
Please see the error message below.
### To Reproduce
The model looks like this:
    class User(Base):
        __tablename__ = 'users'
        id = Column(Integer, primary_key=True)
        username = Column(String(20), unique=True)
        email = Column(String(100), unique=True)
        password_hash = Column(LargeBinary(length=100))
        # added init
        def __init__():
           ...
The code:
    session = SessionLocal()
    user = User('username', 'email', 'password')
    session.add(user)
    session.commit()
    user = session.query(User).filter(User.username=='username').one()
    # the error also occurs with 'first()'
### Error
    Traceback (most recent call last):
      File "", line 1, in 
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2865, in one
        return self._iter().one()
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/result.py", line 1417, in one
        return self._only_one_row(
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/result.py", line 559, in _only_one_row
        row = onerow(hard_close=True)
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/result.py", line 1281, in _fetchone_impl
        return self._real_result._fetchone_impl(hard_close=hard_close)
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/result.py", line 1684, in _fetchone_impl
        row = next(self.iterator, _NO_ROW)
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/loading.py", line 147, in chunks
        fetch = cursor._raw_all_rows()
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/result.py", line 393, in _raw_all_rows
        return [make_row(row) for row in rows]
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/result.py", line 393, in 
        return [make_row(row) for row in rows]
      File "/usr/local/lib/python3.10/site-packages/sqlalchemy/sql/sqltypes.py", line 993, in process
        value = bytes(value)
    TypeError: string argument without an encoding
### Versions
  * OS: macOS
  * Python: 3.10
  * SQLAlchemy: 1.4.37
  * Database: MariaDB (MySQL)
  * DBAPI (eg: psycopg, cx_oracle, mysqlclient): pymysql
### Additional context
_No response_