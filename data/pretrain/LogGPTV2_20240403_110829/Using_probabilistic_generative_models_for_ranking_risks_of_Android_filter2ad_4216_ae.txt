accessing private information.
Security & Access Control: Research in this direction is geared
towards furthering usable security associated with mobile phones
by improving the fundamental security and access control mod-
els currently in use. This type of research entails introducing
developer-centric tools [30] that enforce principle of least privi-
lege, extending permission models and deﬁning user-deﬁned run-
time constraints [20, 21] to limit application access and detecting
applications with a malicious intent [9, 23].
Nauman et al. [20] present a policy enforcement framework for
Android that allows a user to selectively grant permissions to ap-
plications as well as impose constraints on the usage of resources.
They design an extended package installer that allows the user
to set constraints dynamically at runtime. Ongtang [21] present
an infrastructure that governs install-time permission assignment
and their run-time use as dictated by application provider policy.
Their system provides necessary utility for applications to assert
and control the security decisions on the platform. Vidas [30]
presents a tool that aids developers in specifying a minimum set
of permissions required for a given mobile application. Their
tool analyzes application source code and automatically infers the
minimal set of permissions required to run the application.
Machine Learning in Security: Naive Bayes has been extensively
used both in the context of spam detection [25, 18, 16, 28] and
anomaly detection [26, 4] in network trafﬁc ﬂows.
In the con-
text of Android, however, there has been limited work. Shabtai
et al. [27] presents a behavioral-based detection framework for
Android that realizes a host-based intrusion detection system that
monitors events originating from the device and classiﬁes them as
normal or abnormal. Our work differs in that we use machine learn-
ing for the purpose of risk communication.
8. CONCLUSIONS
We have discussed the importance of effectively communicating
the risk of an application to users, and propose several methods to
rate this risk. We test these methods on large real-world datasets to
understand each method’s ability to assign risk to applications. One
particular valuable method is the PNB model which has several ad-
vantages. It is monotonic, and can provide feedback as to why risk
is high for a speciﬁc app and how a developer could reduce that risk.
It performs well in identifying most current malware apps as high
risk, close to the sophisticated HMNB model. And it can differen-
tiate between critical permissions and less-critical ones, making it
more difﬁcult to evade when compared with the BNB model.
9. ACKNOWLEDGMENTS
We would like to thank Xuxian Jiang and Yajin Zhou who pro-
vided us with their collection of Android malware samples, and
for checking the app mentioned in Section 6. Work by C. Gates,
B. Sarma, N. Li were supported by the Air Force Ofﬁce of Sci-
entiﬁc Research MURI Grant FA9550-08-1-0265, and by the Na-
tional Science Foundation under Grant No. 0905442. H. Peng and
Y. Qi were supported by NSF IIS-0916443, NSF CAREER award
IIS-1054903, and the Center for Science of Information (CSoI), an
NSF Science and Technology Center, under grant agreement CCF-
0939370. Work by R. Potharaju and C. Nita-Rotaru were supported
by NSF TC 0915655-CNS.
25010. REFERENCES
[1] Andromo. http://andromo.com.
[2] Appsgeyser. http://appsgeyser.com.
[3] Google Bouncer. http://goo.gl/QnC6G.
[4] N. Amor, S. Benferhat, and Z. Elouedi. Naive bayes vs
decision trees in intrusion detection systems. In Proceedings
of the 2004 ACM symposium on Applied computing, pages
420–424. ACM, 2004.
[5] K. Au, Y. Zhou, Z. Huang, P. Gill, and D. Lie. Short paper: a
look at smartphone permission models. In Proceedings of the
1st ACM workshop on Security and privacy in smartphones
and mobile devices, pages 63–68. ACM, 2011.
[6] D. Barrera, H. Kayacik, P. van Oorschot, and A. Somayaji. A
methodology for empirical analysis of permission-based
security models and its application to android. In
Proceedings of the 17th ACM conference on Computer and
communications security, pages 73–84. ACM, 2010.
[7] C. M. Bishop. Pattern Recognition and Machine Learning
(Information Science and Statistics). Springer, 2007.
[8] D. Blei, A. Ng, and M. Jordan. Latent dirichlet allocation. J.
Mach. Learning Research, 3, 2003.
[9] W. Enck, P. Gilbert, B. Chun, L. Cox, J. Jung, P. McDaniel,
and A. Sheth. Taintdroid: An information-ﬂow tracking
system for realtime privacy monitoring on smartphones. In
Proceedings of the 9th USENIX conference on Operating
systems design and implementation, pages 1–6. USENIX
Association, 2010.
[10] W. Enck, D. Octeau, P. McDaniel, and S. Chaudhuri. A study
of Android application security. In Proceedings of the 20th
USENIX conference on Security, SEC’11, pages 21–21,
Berkeley, CA, USA, 2011. USENIX Association.
[11] W. Enck, M. Ongtang, and P. McDaniel. On lightweight
mobile phone application certiﬁcation. In Proceedings of the
16th ACM conference on Computer and communications
security, CCS ’09, pages 235–245, New York, NY, USA,
2009. ACM.
[12] B. Fathi. Engineering windows 7 : User account control,
October 2008. MSDN blog on User Account Control.
[13] A. Felt, E. Chin, S. Hanna, D. Song, and D. Wagner. Android
permissions demystiﬁed. In Proceedings of the 18th ACM
conference on Computer and communications security,
pages 627–638. ACM, 2011.
[14] A. Felt, K. Greenwood, and D. Wagner. The effectiveness of
application permissions. In Proc. of the USENIX Conference
on Web Application Development, 2011.
[15] A. P. Felt, K. Greenwood, and D. Wagner. The effectiveness
of install-time permission systems for third-party
applications. Technical Report UCB/EECS-2010-143, EECS
Department, University of California, Berkeley, Dec 2010.
[16] J. Goodman and W. Yih. Online discriminative spam ﬁlter
training. In Proceedings of the Third Conference on Email
and Anti-Spam (CEAS), 2006.
[17] W. A. Magat, W. K. Viscusi, and J. Huber. Consumer
processing of hazard warning information. Journal of Risk
and Uncertainty, 1(2):201–32, June 1988.
[18] V. Metsis, I. Androutsopoulos, and G. Paliouras. Spam
ﬁltering with naive bayes-which naive bayes. In Third
conference on email and anti-spam (CEAS), volume 17,
pages 28–69, 2006.
[19] S. Motiee, K. Hawkey, and K. Beznosov. Do windows users
follow the principle of least privilege?: investigating user
account control practices. In Proceedings of the Sixth
Symposium on Usable Privacy and Security. ACM, 2010.
[20] M. Nauman, S. Khan, and X. Zhang. Apex: Extending
android permission model and enforcement with
user-deﬁned runtime constraints. In Proceedings of the 5th
ACM Symposium on Information, Computer and
Communications Security, pages 328–332. ACM, 2010.
[21] M. Ongtang, S. McLaughlin, W. Enck, and P. McDaniel.
Semantically rich application-centric security in android. In
Computer Security Applications Conference, 2009.
ACSAC’09. Annual, pages 340–349. Ieee, 2009.
[22] G. Portokalidis, P. Homburg, K. Anagnostakis, and H. Bos.
Paranoid android: versatile protection for smartphones. In
Proceedings of the 26th Annual Computer Security
Applications Conference, pages 347–356. ACM, 2010.
[23] R. Potharaju, A. Newell, C. Nita-Rotaru, and X. Zhang.
Plagiarizing smartphone applications: Attack strategies and
defense. In Engineering Secure Software and Systems.
Springer, 2012.
[24] B. Sarma, N. Li, C. Gates, R. Potharaju, C. Nita-Rotaru, and
I. Molloy. Android permissions: A perspective combining
risks and beneﬁts. In SACMAT ’12: Proceedings of the
seventeenth ACM symposium on Access control models and
technologies. ACM, 2012.
[25] K. Schneider. A comparison of event models for naive bayes
anti-spam e-mail ﬁltering. In Proceedings of the tenth
conference on European chapter of the Association for
Computational Linguistics-Volume 1, pages 307–314.
Association for Computational Linguistics, 2003.
[26] A. Sebyala, T. Olukemi, and L. Sacks. Active platform
security through intrusion detection using naive bayesian
network for anomaly detection. In London Communications
Symposium. Citeseer, 2002.
[27] A. Shabtai and Y. Elovici. Applying behavioral detection on
android-based devices. Mobile Wireless Middleware,
Operating Systems, and Applications, pages 235–249, 2010.
[28] Y. Song, A. KoÅ ´Ccz, and C. L. Giles. Better naive bayes
classiïˇn ˛Acation for high-precision spam detection. In
Software Practice and Experience, 2009.
[29] D. W. Stewart and I. M. Martin. Intended and unintended
consequences of warning messages: A review and synthesis
of empirical research. Journal of Public Policy Marketing,
13(1):1–19, 1994.
[30] T. Vidas, N. Christin, and L. Cranor. Curbing android
permission creep. In Proceedings of the Web, volume 2,
2011.
[31] Y. Zhou and X. Jiang. Dissecting android malware:
Characterization and evolution. In Proceedings of the 33rd
IEEE Symposium on Security and Privacy, 2012.
251APPENDIX
The posterior distribution of the hidden variables is
p(ψ, z|x, α, θ) =
p(ψ, z, x|α, θ)
p(x|α, θ)
The computation of the exact posterior distribution is, however, in-
tractable. Thus, we approximate the posterior distribution by
gk = C[(cid:122)(
q(ψ, z|β, r) =
q(ψc|βc)
q(zc,n|rc,n)
(6)
C(cid:89)
Nc(cid:89)
c=1
n=1
To obtain an accurate approximation, we use a variational Bayes
approach. Speciﬁcally, we minimize the KL divergence of p and q
via the following iterative variational updates.
Update r:
ρc,n,k = exp{(cid:122)(βc,k)−(cid:122)(
θ
xc,n,l
k,l
(1−θk,l)1−xc,n,l
(7)
Update θ:
θk,m =
c=1
(cid:80)Nc
a0k,l +(cid:80)C
a0k,l + b0k,l +(cid:80)C
C(cid:88)
αk)−(cid:122)(αk)]+
[(cid:122)(
(cid:80)Nc
K(cid:88)
K(cid:88)
(5)
Update α via Newton’s method:
n=1 rc,n,kxc,n,m
n=1 rc,n,k
c=1
(10)
βc,k)−(cid:122)(βc,k)] (11)
k=1
c=1
k=1
qk = −C(cid:122)(cid:48)
(αk)
z = C(cid:122)(cid:48)
(
K(cid:88)
(cid:80)K
1/z +(cid:80)K
k=1
αk)
b =
k=1 gk/qk
k=1 1/qk
k − gk − b
qk
The (cid:122)(.) denotes the digamma function.
αnew
k = αold
(12)
(13)
(14)
(15)
k=1
m=0
K(cid:88)
βc,k)} M(cid:89)
(cid:80)K
Nc(cid:88)
ρc,n,k
k=1 ρc,n,k
rc,n,k =
βc,k = αk +
rc,n,k
n=1
Update β:
(8)
(9)
252