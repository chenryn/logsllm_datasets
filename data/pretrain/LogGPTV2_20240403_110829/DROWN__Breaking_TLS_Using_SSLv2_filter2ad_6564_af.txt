export-grade symmetric ciphers, completing the export-
grade cryptography attack trifecta.
9 Discussion
9.1
Although the protocol flaws in SSLv2 enabling DROWN
are not present in recent TLS versions, many modern pro-
tocols meet a subset of the requirements to be vulnerable
to a DROWN-style attack. For example:
Implications for modern protocols
1. RSA key exchange. TLS 1.2 [13] allows this.
2. Reuse of server-side nonce by the client. QUIC [10]
allows this.
3. Server sends a message encrypted with the derived
key before the client. QUIC, TLS 1.3 [37], and TLS
False Start [30] do this.
4. Deterministic cipher parameters are generated from
the premaster secret and nonces. This is the case for
all TLS stream ciphers and TLS 1.0 block ciphers.
USENIX Association  
25th USENIX Security Symposium  701
13
DROWN has a natural adaptation when all three prop-
erties are present. The attacker exposes a Bleichenbacher
oracle by connecting to the server twice with the identi-
cal RSA ciphertexts and server-side nonces. If the RSA
ciphertext is PKCS conformant, the server will respond
with identical messages across both connections; other-
wise they will differ.
9.2 Lessons for key reuse
DROWN illustrates the cryptographic principle that keys
should be single use. Often, this principle is primarily
applied to keys that are used to both sign and decrypt, but
DROWN illustrates that using keys for different protocol
versions can also be a serious security risk. Unfortunately,
there is no widely supported way to pin X.509 certificates
to specific protocols. While using per-protocol certificates
may help defend against passive attacks, an active attacker
could still leverage any certificate with a matching name.
9.3 Harms from obsolete cryptography
Recent years have seen a significant number of serious
attacks exploiting outdated and obsolete cryptography.
Many protocols and cryptographic primitives that were
demonstrated to be weak decades ago are surprisingly
common in real-world systems.
DROWN exploits a modification of an 18-year-old at-
tack against a combination of protocols and ciphers that
have long been superseded by better options: the SSLv2
protocol, export cipher suites, and PKCS #1 v1.5 RSA
padding. In fact, support for RSA as a key exchange
method, including the use of PKCS #1 v1.5, is mandatory
even for TLS 1.2. The attack is made more severe by
implementation flaws in rarely used code.
Our work serves as yet another reminder of the im-
portance of removing deprecated technologies before
they become exploitable vulnerabilities. In response to
many of the vulnerabilities listed above, browser ven-
dors have been aggressively warning end users when TLS
connections are negotiated with unsafe cryptographic pa-
rameters, including SHA-1 certificates, small RSA and
Diffie-Hellman parameters, and SSLv3 connections. This
process is currently happening in a piecemeal fashion,
primitive by primitive. Vendors and developers rightly
prioritize usability and backward compatibility in stan-
dards, and are willing to sacrifice these only for practical
attacks. This approach works less well for cryptographic
vulnerabilities, where the first sign of a weakness, while
far from being practically exploitable, can signal trouble
in the future. Communication issues between academic
researchers and vendors and developers have been voiced
by many in the community, including Green [18] and
Jager et al. [24].
The long-term solution is to proactively remove these
obsolete technologies. There is movement towards this
already: TLS 1.3 has entirely removed RSA key exchange
and has restricted Diffie-Hellman key exchange to a few
groups large enough to withstand cryptanalytic attacks
long in the future. The CA/Browser forum will remove
support for SHA-1 certificates this year. Resources such
as the SSL Labs SSL Reports have gathered information
about best practices and vulnerabilities in one place, in or-
der to encourage administrators to make the best choices.
9.4 Harms from weakening cryptography
Export-grade cipher suites for TLS deliberately weak-
ened three primitives to the point that they are now bro-
ken even to enthusiastic amateurs: 512-bit RSA key ex-
change, 512-bit Diffie-Hellman key exchange, and 40-bit
symmetric encryption. All three deliberately weakened
primitives have been cornerstones of high-profile attacks:
FREAK exploits export RSA, Logjam exploits export
Diffie-Hellman, and now DROWN exploits export sym-
metric encryption.
Like FREAK and Logjam, our results illustrate the
continued harm that a legacy of deliberately weakened
export-grade cryptography inflicts on the security of mod-
ern systems, even decades after the regulations influenc-
ing the original design were lifted. The attacks described
in this paper are fully feasible against export cipher suites
today. The technical debt induced by cryptographic “front
doors” has left implementations vulnerable for decades.
With the slow rate at which obsolete protocols and primi-
tives fade away, we can expect some fraction of hosts to
remain vulnerable for years to come.
Acknowledgements
The authors thank team Hashcat for making their GPUs
available for the execution of the attack, Ralph Holz
for providing early scan data, Adam Langley for in-
sights about QUIC, Graham Steel for insights about TLS
False Start, the OpenSSL team for their help with dis-
closure, Ivan Ristic for comments on session resumption
in a BEAST-styled attack, and Tibor Jager and Christian
Mainka for further helpful comments. We thank the ex-
ceptional sysadmins at the University of Michigan for
their help and support throughout this project, including
Chris Brenner, Kevin Cheek, Laura Fink, Dan Maletta,
Jeff Richardson, Donald Welch, Don Winsor, and others
from ITS, CAEN, and DCO.
This material is based upon work supported by the
U.S. National Science Foundation under Grants No. CNS-
1345254, CNS-1408734, CNS-1409505, CNS-1505799,
CNS-1513671, and CNS-1518888, an AWS Research Ed-
ucation grant, a scholarship from the Israeli Ministry of
Science, Technology and Space, a grant from the Blavat-
nik Interdisciplinary Cyber Research Center (ICRC) at
Tel Aviv University, a gift from Cisco, and an Alfred P.
Sloan Foundation research fellowship.
702  25th USENIX Security Symposium 
USENIX Association
14
References
[1] ADRIAN, D., BHARGAVAN, K., DURUMERIC, Z., GAUDRY, P.,
GREEN, M., HALDERMAN, J. A., HENINGER, N., SPRINGALL,
D., THOMÉ, E., VALENTA, L., VANDERSLOOT, B., WUSTROW,
E., ZANELLA-BÉGUELIN, S., AND ZIMMERMANN, P.
Imperfect forward secrecy: How Diffie-Hellman fails in practice.
In 22nd ACM Conference on Computer and Communications
Security (Oct. 2015).
[2] AL FARDAN, N. J., AND PATERSON, K. G. Lucky Thirteen:
Breaking the TLS and DTLS record protocols. In IEEE
Symposium on Security and Privacy (2013), IEEE, pp. 526–540.
[3] ALFARDAN, N. J., BERNSTEIN, D. J., PATERSON, K. G.,
POETTERING, B., AND SCHULDT, J. C. On the security of RC4
in TLS. In 22nd USENIX Security Symposium (2013),
pp. 305–320.
[4] BARDOU, R., FOCARDI, R., KAWAMOTO, Y., SIMIONATO, L.,
STEEL, G., AND TSAY, J.-K. Efficient padding oracle attacks on
cryptographic hardware. In Advances in Cryptology–CRYPTO
2012. Springer, 2012, pp. 608–625.
[5] BEURDOUCHE, B., BHARGAVAN, K., DELIGNAT-LAVAUD, A.,
FOURNET, C., KOHLWEISS, M., PIRONTI, A., STRUB, P.-Y.,
AND ZINZINDOHOUE, J. K. A messy state of the union: Taming
the composite state machines of TLS. In IEEE Symposium on
Security and Privacy (2015).
[6] BHARGAVAN, K., LAVAUD, A. D., FOURNET, C., PIRONTI, A.,
AND STRUB, P. Y. Triple handshakes and cookie cutters:
Breaking and fixing authentication over TLS. In IEEE
Symposium on Security and Privacy (2014), IEEE, pp. 98–113.
[7] BHARGAVAN, K., AND LEURENT, G. Transcript collision
attacks: Breaking authentication in TLS, IKE, and SSH. In
Network and Distributed System Security Symposium (Feb. 2016).
[8] BLEICHENBACHER, D. Chosen ciphertext attacks against
protocols based on the RSA encryption standard PKCS #1. In
Advances in Cryptology — CRYPTO ’98, vol. 1462 of Lecture
Notes in Computer Science. Springer Berlin / Heidelberg, 1998.
[9] BREYHA, W., DURVAUX, D., DUSSA, T., KAPLAN, L. A.,
MENDEL, F., MOCK, C., KOSCHUCH, M., KRIEGISCH, A.,
PÖSCHL, U., SABET, R., SAN, B., SCHLATTERBECK, R.,
SCHRECK, T., WÜRSTLEIN, A., ZAUNER, A., AND ZAWODSKY,
P. Better crypto – applied crypto hardening, 2016. Available at
https://bettercrypto.org/static/applied-crypto-hardening.pdf.
[10] CHANG, W.-T., AND LANGLEY, A. QUIC crypto, 2014.
https://docs.google.com/document/d/1g5nIXAIkN_Y-
7XJW5K45IblHd_L2f5LTaDUDwvZ5L6g/edit?pli=1.
[11] CVE-2015-0293. https://cve.mitre.org/cgi-bin/
cvename.cgi?name=CVE-2015-0293.
[12] DE RUITER, J., AND POLL, E. Protocol state fuzzing of TLS
implementations. In 24th USENIX Security Symposium
(Washington, D.C., Aug. 2015), USENIX Association.
[13] DIERKS, T., AND RESCORLA, E. The Transport Layer Security
(TLS) Protocol Version 1.2. RFC 5246 (Proposed Standard), Aug.
2008. Updated by RFCs 5746, 5878.
[14] DUONG, T., AND RIZZO, J. Here come the xor ninjas, 2011.
http://netifera.com/research/beast/beast_DRAFT_0621.pdf.
[15] DURUMERIC, Z., KASTEN, J., ADRIAN, D., HALDERMAN,
J. A., BAILEY, M., LI, F., WEAVER, N., AMANN, J.,
BEEKMAN, J., PAYER, M., AND PAXSON, V. The matter of
Heartbleed. In 14th Internet Measurement Conference (New York,
NY, USA, 2014), IMC ’14, ACM, pp. 475–488.
[16] DURUMERIC, Z., WUSTROW, E., AND HALDERMAN, J. A.
ZMap: Fast Internet-wide scanning and its security applications.
In 22nd USENIX Security Symposium (Aug. 2013).
[17] FREIER, A., KARLTON, P., AND KOCHER, P. The secure
sockets layer (SSL) protocol version 3.0. RFC 6101, 2011.
[18] GREEN, M. Secure protocols in a hostile world. In CHES 2015
(Aug. 2015). https://isi.jhu.edu/~mgreen/CHESPDF.pdf.
[19] HAMILTON, R. QUIC discovery.
https://docs.google.com/document/d/
1i4m7DbrWGgXafHxwl8SwIusY2ELUe8WX258xt2LFxPM/
edit#.
[20] Hashcat. http://hashcat.net.
[21] HENINGER, N., DURUMERIC, Z., WUSTROW, E., AND
HALDERMAN, J. A. Mining your Ps and Qs: Detection of
widespread weak keys in network devices. In 21st USENIX
Security Symposium (Aug. 2012).
[22] HICKMAN, K., AND ELGAMAL, T. The SSL protocol, 1995.
https://tools.ietf.org/html/draft-hickman-netscape-ssl-00.
[23] HOLZ, R., AMANN, J., MEHANI, O., WACHS, M., AND
KAAFAR, M. A. TLS in the wild: An Internet-wide analysis of
TLS-based protocols for electronic communication. In Network
and Distributed System Security Symposium (Geneva,
Switzerland, Feb. 2016), S. Capkun, Ed., Internet Society.
[24] JAGER, T., PATERSON, K. G., AND SOMOROVSKY, J. One bad
apple: Backwards compatibility attacks on state-of-the-art
cryptography. In Network and Distributed System Security
Symposium (2013).
[25] JAGER, T., SCHINZEL, S., AND SOMOROVSKY, J.
Bleichenbacher’s attack strikes again: Breaking PKCS#1 v1.5 in
XML encryption. In 17th European Symposium on Research in
Computer Security (Berlin, Heidelberg, 2012), Springer Berlin
Heidelberg, pp. 752–769.
[26] JAGER, T., SCHWENK, J., AND SOMOROVSKY, J. On the
security of TLS 1.3 and QUIC against weaknesses in PKCS#1
v1.5 encryption. In 22nd ACM Conference on Computer and
Communications Security (New York, NY, USA, 2015), CCS ’15,
ACM, pp. 1185–1196.
[27] KALISKI, B. PKCS #1: RSA Encryption Version 1.5. RFC 2313
(Informational), Mar. 1998. Obsoleted by RFC 2437.
[28] KÄSPER, E. Fix reachable assert in SSLv2 servers. OpenSSL
patch, Mar. 2015. https://github.com/openssl/openssl/commit/
86f8fb0e344d62454f8daf3e15236b2b59210756.
[29] KLIMA, V., POKORN `Y, O., AND ROSA, T. Attacking
RSA-based sessions in SSL/TLS. In Cryptographic Hardware
and Embedded Systems-CHES 2003. Springer, 2003,
pp. 426–440.
[30] LANGLEY, A., MODADUGU, N., AND MOELLER, B. Transport
layer security (TLS) false start. draft-bmoeller-tls-falsestart-00,
June 2 (2010).
[31] LENSTRA, A. K., LENSTRA, H. W., AND LOVÁSZ, L.
Factoring polynomials with rational coefficients. Mathematische
Annalen 261 (1982), 515–534. 10.1007/BF01457454.
[32] MAVROGIANNOPOULOS, N., VERCAUTEREN, F., VELICHKOV,
V., AND PRENEEL, B. A cross-protocol attack on the TLS
protocol. In 19th ACM Conference on Computer and
Communications Security (New York, NY, USA, 2012), CCS ’12,
ACM, pp. 62–72.
[33] MEYER, C., AND SCHWENK, J. SoK: Lessons learned from
SSL/TLS attacks. In 14th International Workshop on Information
Security Applications (Berlin, Heidelberg, Aug. 2013), WISA
2013, Springer-Verlag.
[34] MEYER, C., SOMOROVSKY, J., WEISS, E., SCHWENK, J.,
SCHINZEL, S., AND TEWS, E. Revisiting SSL/TLS
implementations: New Bleichenbacher side channels and attacks.
In 23rd USENIX Security Symposium. USENIX Association, San
Diego, CA, Aug. 2014, pp. 733–748.
USENIX Association  
25th USENIX Security Symposium  703
15
[35] MÖLLER, B., DUONG, T., AND KOTOWICZ, K. This POODLE
bites: exploiting the SSL 3.0 fallback, 2014.
[36] OPENSSL. Change log.
https://www.openssl.org/news/changelog.html#x0.
[37] RESCORLA, E., ET AL. The transport layer security (TLS)
protocol version 1.3, draft.
[38] RIZZO, J., AND DUONG, T. The CRIME attack. EKOparty
Security Conference, 2012.
[39] ROSKIND, J. QUIC design document, 2013.
https://docs.google.com/a/chromium.org/document/d/
1RNHkx_VvKWyWg6Lr8SZ-saqsQx7rFV-ev2jRFUoVD34.
[40] TURNER, S., AND POLK, T. Prohibiting secure sockets layer
(SSL) version 2.0. RFC 6176 (Informational), Apr. 2011.
[41] WAGNER, D., AND SCHNEIER, B. Analysis of the SSL 3.0
protocol. In 2nd USENIX Workshop on Electronic Commerce
(1996).
[42] ZHANG, Y., JUELS, A., REITER, M. K., AND RISTENPART, T.
Cross-tenant side-channel attacks in PaaS clouds. In 21st ACM
Conference on Computer and Communications Security (New
York, NY, USA, 2014), CCS ’14, ACM, pp. 990–1003.
A Adaptations to Bleichenbacher’s attack
A.1 Success probability of fractions
For a given fraction u/t, the success probability with a
randomly chosen TLS conformant ciphertext can be com-
puted as follows. Let m0 be a random TLS conformant
message, m1 = m0 · u/t, and let (cid:30)k be the expected length
of the unpadded message. For s = u/t mod N where u
and t are coprime, m1 will be SSLv2 conformant if the
following conditions all hold:
1. m0 is divisible by t. For a randomly generated m0,
this condition holds with probability 1/t.
2. m1[1] =0 and m1[2] =2 , or the integer m · u/t ∈
[2B,3B). For a randomly generated m0 divisible by
t, this condition holds with probability
3− 2·t/u for 2/3 < u/t < 1
3·t/u− 2 for 1 < u/t < 3/2
0
otherwise
P =
3. ∀i ∈ [3, (cid:30)m− ((cid:30)k +1)],m1[i] (cid:27)= 0, or all bytes between
the first two bytes and the (k + 1) least significant
bytes are non-zero. This condition holds with proba-
bility (1− 1/256)(cid:30)m−((cid:30)k+3).
4. m1[(cid:30)m − (cid:30)k] =0 : the ((cid:30)k + 1)st least significant byte
is 0. This condition holds with probability 1/256.