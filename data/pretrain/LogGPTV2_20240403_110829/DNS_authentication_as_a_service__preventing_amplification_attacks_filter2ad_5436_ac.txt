2007-6-14 4:9:1 - requests=1257 - responses=2557 - suspicious=921 – Attack 
2007-6-14 4:10:1 - requests=361 - responses=2322 - suspicious=1223 - Attack 
2007-6-14 4:11:1 - requests=235 - responses=952 - suspicious=572 - Attack 
2007-06-14 04:29:01 - requests=5007 - responses=4848 - suspicious=1 - Empty Database 
2007-06-14 04:46:02 - requests=5288 - responses=4988 - suspicious=3 - Empty Database 
2007-06-14 05:00:02 - requests=5233 - responses=4833 - suspicious=5 - Empty Database 
2007-06-14 05:15:01 - requests=5360 - responses=5094 - suspicious=1 - Empty Database 
2007-06-14 05:28:02 - requests=5223 - responses=4942 - suspicious=8 - Empty Database 
Fig. 5 Snapshot of the logfile that becomes updated when the database flushes  
Every  record  in  the  database,  either  DNS  request  or  response,  is  associated  with 
two distinct times. The first one is the time taken from the iptraf tool. That is the exact 
time  the  packet  came  in  to  or  left  the  local  network.  The  other  one  is  the  time  the 
corresponding record  was  appended  to  the database.  Subtracting  these  times  we  get 
the overall delay for each MySQL transaction. This time includes processing time and 
packet characterization time duration (for responses only) as legitimate or suspicious 
as well. As shown in Table 3 the average delay time for both queries and responses 
span between 0.5496 and 0.6630 seconds. Naturally, this time greatly depends on the 
size  of  the  database  and  the  specified  timeframe.  These  times  also  attest  that  in 
average, whether under attack or not, DAAD performs nearly the same. 
Another valuable remark is that the number of requests is always greater that the 
number  of  responses.  Our  experiments  showed  that  under  normal  traffic  the  total 
number  of  responses  is  about  95%  of  the  issued  requests.  Having  this  relation 
disrupted  means  that  something  goes  wrong.  For  example,  when  self-launching  an 
attack  for  5  min  duration  we  recorded  25,606  requests  and  68,575  responses.  A 
snapshot  of  the  logfile  that  is  updated  every  time  the  database  flushes  is  depicted 
below. 
Last but not least, we present further down DAAD results gathered during a 20 min 
duration self-attack. According to the attack scenario, the aggressor generates spoofed 
DNS requests and sends it towards the local DNS server, trying to cause a DoS. The 
relation  between  the  number  of  DNS  queries  and  replies  -  including  the  number  of 
bogus  packets  received  -  is  shown  in  Figure  6.  Also,  to  be  able  to  compare  with 
values  presented  previously  in  Table  3  we  report  hereunder  some  comparative  key 
metrics in Table 4. 
Table 4. Comparative key metrics in seconds for the DAAD tool: 
Under attack vs. Normal operation  
St. Deviation 
St. Deviation 
Min 
requests 
Requests 
delay avg 
Replies 
delay avg   Max 
0.6076 
0.6504 
0.9870 
0.3846 
0.1900 
0.5811 
0.6036 
0.6630 
0.5496 
0.0297 
replies 
0.1028 
0.0292 
Requests
Responses
Bogus
Under 
attack 
Normal 
operation 
s
t
e
k
c
a
P
P
D
U
f
o
r
e
b
m
u
N
3.500
3.000
2.500
2.000
1.500
1.000
500
0
:
0
0
0
:
0
0
1
:
0
0
2
:
0
0
3
:
0
0
4
:
0
0
5
:
0
0
6
:
0
0
7
:
0
0
8
:
0
0
9
Time (minutes)
:
0
1
0
:
0
1
1
:
0
1
2
:
0
1
3
:
0
1
4
:
0
1
5
:
0
1
6
:
0
1
7
:
0
1
8
:
0
1
9
Fig. 6 Relation of DNS requests and responses (including bogus ones) 
during a 20 min duration self-attack 
4   Conclusions and Future work 
Name servers can be maliciously used as DDoS attack amplifiers. If this is done on an 
ongoing  basis  with  a  large  number  of  open  name  servers,  it  can  quickly  flood  the 
victim's  IP  address  with  responses  from  thousands  (or  tens  of  thousands)  of  name 
servers,  thereby  exhausting  the  victim's  available  network  bandwidth.  The  actual 
target of the attack may be the local DNS server or any host inside the local network. 
At any rate, the former entity will suffer the consequences of the attack first of any 
other. Likewise to the Smurf attack, the critical factor here is the amplification effect 
that is based on the fact that tiny queries can potentially generate much larger UDP 
packets in response. In this paper several aspects of these attacks were discussed and 
analyzed. On the top of that, we presented a novel, practical and efficient mechanism, 
namely DAAD, to defend against them. In its current pilot stage the proposed solution 
is  practical  and  easy  to  implement  in  any  network  realm.  Moreover,  test  results 
showed  that  is  effective  and  can  be  easily  parameterized  to  fit  properly  into  any 
network  domain.  As  future  work  we  shall  investigate  alternative  and  more  efficient 
data stores like Bloom Filters [21]. This would not only improve the performance of 
the DAAD tool, but make it scalable as well. 
References 
1  Cert  Advisory  CA-1996-26,  "Denial  of  Service  Attack  via  ping",  http://www.cert.org/ 
advisories/CA-1996-26.html, Dec. 1997. 
2  Gibson,  S.,  “DRDoS  Distributed  Reflection  Denial  of  Service”,http://grc.com/dos/ 
drdos.htm, 2002. 
3  Glenn C., Kesidis, G., Brooks, R. R. and Suresh Rai, “Denial-of-Service Attack-Detection 
4 
Techniques” IEEE Internet computing 2006. 
Peng,  T.,  Leckie,  C.  and  Kotagiri,  R.,  "Survey  of  Network-based  Defense  Mechanisms 
Countering the DoS and DDoS Problems", to appear in ACM Computing Surveys. 
5  Mirkovic, J. et al., Internet Denial of Service: Attack and Defense Mechanism. 
6 
Security and Stability Advisory Committee, “DNS Distributed Denial of Service (DDoS) 
Attacks”, 
http://www.icann.org/committees/security/dns-ddos-advisory-31mar06.pdf, 
March 2006. 
7  Mockapetris P., “Domain Names – Concepts and Facilities”, RFC 1034, November 1987. 
8  Mockapetris P., “Domain Names – Implementation and Specification”, RFC 1035, Nov. 
1987. 
9  Vixie P., “Extension Mechanisms for DNS”, RFC 2671, August 1999. 
10  Arends,  R.,  Austein,  R.,  Larson,  M.,  Massey,  D.,  Rose,  S.,  "DNS  Security  Introduction 
and Requirements", RFC 4033, March 2005. 
11  Arends, R., Austein, R., Larson, M., Massey, D., Rose, S., “Resource Records for the DNS 
Security Extensions”, RFC 4034, March 2005. 
12  Arends, R., Austein, R., Larson, M., Massey, D., Rose, S., “Protocol Modifications for the 
DNS Security Extensions”, RFC 4035, March 2005. 
13  Guo, F., Chen, J., and Chiueh, T., “Spoof Detection for Preventing DoS Attacks against 
DNS Servers”, In Proceedings of the 26th IEEE international Conference on Distributed 
Computing Systems , July 2006 
14  Chandramouli,  R.  and  Rose,  S.  “An  Integrity  Verification  Scheme  for  DNS  Zone  file 
based on Security Impact Analysis”, In Proceedings of the 21st Annual Computer Security 
Applications Conference, Dec. 2005. 
15  Atkins,  D.,  Austein,  R.,  “Threat  Analysis  of  the  Domain  Name  System  (DNS)”,  RFC 
3833, Aug. 2004. 
IPTraf - An IP Network Monitor, http://iptraf.seul.org/. 
16 
17  Vaughn, R. and Evron, G., “DNS Amplification Attacks, A preliminary release”, March 
18 
2006. 
ICANN  Report,  “DNS  Distributed  Denial  of  Service  (DDoS)  Attacks”,  Security  and 
Stability Advisory Committee (SSAC), March 2006. 
19  Vixie,  P.,  SAC004,  Securing  The  Edge,  http://www.icann.org/committees/security/ 
sac004.txt. 
20  Guo,  F.,  Chen,  J.  and  Chiueh,  T.  “Spoof  Detection  for  Preventing  DoS  Attacks  against 
DNS Servers,” in Proc. of ICDCS 2006. 
21  Bloom, B., “Space/time trade-offs in hash coding with allowable errors” Communications 
of ACM, 13(7), pp. 422-426, July 1970.