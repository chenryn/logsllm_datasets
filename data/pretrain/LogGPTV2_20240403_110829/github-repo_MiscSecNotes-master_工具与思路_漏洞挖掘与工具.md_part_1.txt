## 一、漏洞挖掘心理学
1. 安全的木桶理论
找到最薄弱的那个点；
2. 有一个漏洞的站点，很可能还会有更多的漏洞
开发人员的安全意识问题；
3. 存在于一个站点的漏洞，还可能存在于其他站点
业务的代码复用；
通用型漏洞（wordpress插件漏洞，Discuz 更新不及时）；
4. 修复了的漏洞不一定就全部修复完整了  
指哪修哪；
绕过修复；
5. 学会找扫描器扫不到/其他白帽子难发现的漏洞
需要深度交互/认证；
存储XSS/CSRF/越权/逻辑漏洞；
6. 挖掘漏洞的过程
通常需要先找到危险函数，然后回溯函数的调用过程，最终看在整个调用的过程中用户是否有可能控制输入；
7. 绕waf的一般思路
1). 预处理利用：即设法绕过 WAF的输入验证，比如 HTTP头（ X-Originating-IP 、XForwarded-For 、X-Remote-IP 、 X-Remote-Addr）的处理，就曾多次被用于绕过公司WAF 的SQL 注入防护，或者 HTTP方法头 GET/POST 的篡改、换行符的处理等等方式；
2). 致阻断失配：利用前后端数据处理的差异，使得无法匹配到黑名单里的规则，通常结合一些参数污染、字符编码、注释符等多种方式绕过；
3). 规则集绕过：通过暴力枚举出 WAF的拦截规则，或者逆向 WAF程序获取规则，然后再设法绕过。
8. 权限与绕过思路
![think](../pictures/vuln0.png)
## 二、常用的浏览器插件(Firefox)
1. Firebug
强大的网站调试工具，同时可以用来简单抓包
2. Tamper data
抓包修改功能
3. Hackbar
手工测试SQL注入/XSS的利器，有编码功能
4. LiveHttpHeader
抓包工具，使用方便，常用于测试CSRF
## 三、常用的WEB安全工具
1. AWVS
全能的Web安全漏洞扫描器，并附带有很多实用的工具
如果电脑本身需要通过代理访问外网，那么也需要设置下 application settings--application updates 设置 proxy server
2. NetSparker
对SQL注入，XSS，LFI等漏洞扫描效果不错的漏洞扫描器
3. BurpSuite
功能全面，个人常用于暴破，抓包，CSRF测试等等
需要设置浏览器代理为8080，才能捕获数据包，抓取https 包需要浏览器访问 http://burp 下载证书并导入。
有时电脑本身需要设置代理才能访问外网，则需要设置 Burp options--connections--upstream proxy servers
手机端 设置 WIFI 的代理为电脑burp 监听的IP和端口，手机端访问 http://burp  点击CA Certificate下载证书到手机上cacert.der
将后缀改成.cer才可以安装，华为手机需要安装为VPN 应用支持才能解析https
3.1. Charles
手机端使用charles 抓包的设置如下：
- proxy -> proxy settings http proxy 设置监听的端口，勾选 enable transparent http proxying
- help ->ssl proxying ->install charles root certificate on a mobile device or remote browser
- 手机wifi 手工设置proxy ip和端口为 charles 监听的ip:port，浏览器访问chls.pro 下载证书进行安装
4. Layer
子域名/IP段收集，同时可过滤过出存活主机
5. Fiddler
常用的抓包工具，有XSS自动化扫描插件
打开fiddle，默认会设置浏览器的代理为fiddle 监听的8888端口，而fiddle 自己则从系统代理出口（也可以自己设置一个代理如 http=10.2.2.1:80）出去；需要设置一下才会拦截数据包，否则只是快照一下。
注意：pc 端软件发出的http/https请求也会被捕获，但私有协议（即应用层自定义包体）是抓不到的，可以用wireshark 抓到此类的包。
客户端软件发出的http/https请求有两种情况。一种类似内嵌了一个浏览器来解析html、执行js事件等，比如一个功能点，进来的原始页面（抓包）中可以搜到此功能点的一些关键字，往往就是以内嵌浏览器的方式执行js 来完成此功能，直接把入口页面复制到浏览器访问，然后console 搜索keyword。
另一种是客户端直接请求的服务端cgi，这在进来的原始页面（甚至没有入口）是找不到功能点的关键字的。
6. Sqlmap.py
数据库注入神器
7. owasp 漏洞扫描全集 [Vulnerability_Scanning_Tools](https://www.owasp.org/index.php/Category:Vulnerability_Scanning_Tools)
8. android 手机无法抓包小程序的问题
在 Android7.0 及以上的系统中，每个应用可以定义自己的可信 CA 证书。
默认情况下：应用只会信任系统预装的 CA 证书，而不会信任用户安装的 CA 证书。
在配置抓包过程中，无论是BurpSuite还是fiddler/Charles安装的证书都属于用户自己安装的证书。
安卓系统抓包（微信小程序）：
安卓系统 7.0 以下版本，不管微信任意版本，都会信任系统提供的证书
安卓系统 7.0 以上版本，微信 7.0 以下版本，微信会信任系统提供的证书
安卓系统 7.0 以上版本，微信 7.0 以上版本，微信只信任它自己配置的证书列表
基于上述我们解决的方式如下：
1、将证书安装到系统证书中（需要root，新的手机都比较少能root了）
2、苹果手机（苹果手机不受此影响，有苹果手机了我还用android 测干啥）
3、采用安卓系统低于7.0的模拟器（非常麻烦，很大可能安装不了微信app）
当前微信电脑客户端已经支持打开小程序，那么也可以通过电脑端抓包实现。
比如mac 电脑使用charles 实现抓包：
- help -> ssl proxying-> install charles root certificate  安装charles 证书到电脑
- proxy -> 勾选 macOS proxy 默认抓取电脑所有流量
- proxy -> ssl proxy settings -> enable ssl proxying location \*:443 支持https 流量解析（结合前面的证书）
这时候仅能够抓包，但不能拦截等，故将charles 的外部代理设置为Burp，则Burp 里面可以实现拦截包的功能：
- proxy -> external proxy settings 勾选 web proxy & secure web proxy，web proxy server 填为 burp 监听的ip:port（如127.0.0.1:8080）
## 四、github安全类repo 收集
### 子域名爆破
[subDomainsBrute](https://github.com/lijiejie/subDomainsBrute)
[Sublist3r](https://github.com/aboul3la/Sublist3r)