### Certificate Revocation and Browser Behavior

#### Opera
Certificates often list CRLs (Certificate Revocation Lists) or OCSP (Online Certificate Status Protocol) responders. If revocation information is unavailable for the first intermediate certificate (or the leaf certificate if no intermediates exist), Opera behaves as follows:
- **Using CRLs:** Rejects the certificate on all platforms.
- **Using OCSP:** Rejects the certificate only on Linux and Windows; accepts it on other platforms.

Additionally, Opera incorrectly treats OCSP responses with an "unknown" status as trusted. Opera requests OCSP staples on all platforms, but on OS X (similar to Chrome), it does not respect revoked staples and attempts to contact the OCSP responder directly.

#### Safari
We examined the three most recent major versions of Safari (6.0–8.0) and found consistent behavior across them. Safari checks all certificates in the chain using CRLs or OCSP. It also incorrectly treats OCSP responses with an "unknown" status as trusted. If the OCSP responder is unavailable, Safari attempts to fetch the CRL. If revocation information is not available for the first intermediate certificate (or the leaf certificate if no intermediates exist) and the certificate has a CRL, Safari rejects the certificate; otherwise, it accepts the certificate. Safari does not request OCSP staples.

OS X offers system-wide settings via Keychain Access that allow users to change certificate revocation checking behavior. The default behavior, which we used in our analysis, is referred to as "Best attempt." If a user selects "Require if certificate indicates," Safari will reject all chains where any revocation information is unavailable.

#### Internet Explorer
We tested every major version of Internet Explorer (IE) from 7.0 (on Vista) to 11.0 (on Windows 10, 8.1, and 7). We observed changes in behavior between versions 9.0 and 10.0, and again with IE 11.0.

- **IE 7.0–9.0:**
  - Checks all certificates in the chain for both CRLs and OCSP responders.
  - If the OCSP responder is unavailable, IE downloads the CRL.
  - If revocation information is not available for the first certificate in the chain, IE rejects the certificate; otherwise, it accepts the certificate.
  - Incorrectly treats OCSP responses with an "unknown" status as trusted.
  - Requests OCSP staples.

- **IE 10.0:**
  - Same behavior as IE 7.0–9.0, except when revocation information is not available for the leaf certificate, IE pops up a warning and asks the user if they wish to proceed.

- **IE 11.0:**
  - Same behavior as IE 7.0–9.0, except when revocation information is not available for the leaf certificate, IE correctly rejects the certificate without popping up a warning.

#### Summary of Desktop Browsers
No browser in its default configuration correctly checks all revocations and rejects certificates if revocation information is unavailable. Many browsers do not check revocation information at all. Overall, Internet Explorer performs the most checks, followed closely by Safari and newer versions of Opera. Additionally, many browsers do not correctly interpret unknown OCSP responses, and not all support OCSP Stapling. This is concerning because OCSP Stapling is the most efficient way to obtain certificate revocation information, imposing almost no extra latency on clients.

### Mobile Browsers

#### iOS
We tested Mobile Safari on iOS using the Xcode-based iOS simulator for iOS 7 and 8, and a physical iPhone 3GS device for iOS 6. We found that Mobile Safari does not check any certificate revocation information and does not request OCSP staples.

#### Android
We tested the "stock" Browser app and Chrome on the three most recent versions of Android: Lollipop (5.1), KitKat (4.4), and Jelly Bean (4.3). Neither application checks any certificate revocation information. However, both applications request OCSP staples but do not use them in certificate validation. Even when served an OCSP staple with a "revoked" status, both applications validate the certificate and continue with the connection.

We also attempted to test the Android port of Firefox but were unable to successfully import our root certificate into the application.

#### Windows Phone
We tested the mobile version of IE running on Windows Phone 8.0 using the Windows Phone Emulator. Mobile IE does not check revocation information and does not request OCSP staples.

#### Summary of Mobile Browsers
None of the major mobile web browsers check whether any certificates they are presented with are revoked. This decision is likely driven by the higher cost (in terms of latency and power) of obtaining revocation information on a mobile device. However, this does not excuse the lack of proper OCSP Stapling support, as requesting OCSP staples for the leaf certificate requires no additional connections.

### CRLSets

In response to the cost of obtaining revocation information, Google adopted CRLSets in 2013. Chrome checks a small, pre-populated list of revoked certificates, updated out-of-band, eliminating the need to check revocation information at page load time. Firefox has also adopted a similar approach with OneCRL.

#### Overview and Methodology
The high-level CRLSet approach is documented, but the process for generating them is not public. Key points include:
- The size of the CRLSet file is capped at 250 KB.
- It is populated using an internal list of crawled CRLs, fetched on the order of hours.
- CRLs with too many entries are dropped from the CRLSet.
- Only revocations with specific reason codes are included.

CRLSet files are published to a public URL and fetched periodically by Chrome. We fetched these files daily between September 23, 2014, and March 31, 2015, and crawled 110 historical CRLSets published between July 18, 2013, and September 23, 2014. Our dataset contains 300 unique CRLSets.

#### CRLSet Coverage
- **CA Coverage:** In our CRL dataset, we see 2,168 CA certificates (both intermediate and root) with 1,584 distinct public keys. CRLSets cover revocations for only 3.9% of CA certificates.
- **Revoked Certificates:** Across all CRLs, we observe 11,461,935 revoked certificates; only 41,105 appear in CRLSets, representing 0.35% of all revoked certificates.
- **Covered CRLs:** Of the 2,800 total CRLs, only 295 (10.5%) have ever had any entry appear in a CRLSet.

For covered CRLs, we find that for 75.6% of them, all entries with CRLSet reason codes appear in the CRLSet. For the remaining CRLs, the number of missing entries ranges from 1 to 5,826.

#### Un-covered Revocations
Across all Alexa top one million domains, we see 42,225 revocations in CRLs, but only 1,644 (3.9%) in CRLSets. For the Alexa top 1,000 domains, we see 392 revoked certificates, but only 41 (10.4%) ever appear in CRLSets.

#### CRLSet Dynamics
- **Size Over Time:** The number of entries in CRLSets ranges from 15,922 to 24,904, peaking during the Heartbleed vulnerability, followed by a decrease over the following year.
- **Daily Additions and Removals:** CRLs exhibit weekly patterns, with increased activity during the week and lulls during the weekend. CRLSets are updated frequently, but there was a noticeable gap with no additions in November–December 2014.
- **Security Impact:** Most revoked certificates appear in the CRLSets within one day (60%), and more than 90% appear within two days. However, revoked certificates are sometimes removed from the CRLSet hundreds of days before they expire.

#### Improving CRLSets: Bloom Filters
Google's CRLSet implementation has very low coverage. An alternative data structure, such as a Bloom Filter, could hold more revocations while adhering to size constraints. A Bloom Filter has no false negatives but can produce a tunable false positive rate. When a certificate "hits" the filter, the client would need to check a CRL before flagging the connection as insecure. This approach would only impact performance for false positives.