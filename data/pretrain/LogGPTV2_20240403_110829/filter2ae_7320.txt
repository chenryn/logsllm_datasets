# OpenSSH CVE-2016-0777 私钥窃取技术分析

**译文声明**
本文为翻译文章，原文来源于360技术博客。
原文地址：[此处插入原文地址]
译文仅供参考，具体内容及含义以原文为准。
作者: au2o3t @360 Cloud Security Team

## 0x01 前言
过去写过很多广告性质的序言，估计很少有人会阅读。后来见到“天眼APT Team”和“360安服团队”的人针对黑产只写了句“人在做，天在看”，颇有感触。于是赶紧删除了那些不必要的广告内容，不能低估读者的智商。

网络安全本质上是攻防双方的较量，没有什么特别需要赘述的内容。我们是一群追逐影子的人，对于漏洞的验证更多是为了满足好奇心。

写完这篇文章后，我还要继续去楼下观看360 Unicorn Team在360互联网训练营上的精彩演讲。

祝好！

## 0x02 技术分析
直接上图说明问题。
![](http://blogs.360.cn/wp-content/uploads/2016/01/ssh1.png)

### 环境
- 系统版本：
  ```
  Linux version 3.10.0-229.11.1.el7.x86_64 (PI:EMAIL)
  (gcc version 4.8.3 20140911 (Red Hat 4.8.3-9) (GCC) ) #1 SMP Thu Aug 6 01:06:18 UTC 2015
  ```
- SSH版本：
  ```
  OpenSSH_6.4p1, OpenSSL 1.0.1e-fips 11 Feb 2013
  ```

### 过程
当通过SSH建立连接时，系统会读入证书，并通过`buffer.c`文件中的`buffer_init()`和`buffer_free()`函数来管理内存。通常情况下，使用完毕后会将内存内容清零。但如果证书内容大于4KB，SSH会调用`realloc`重新分配更多内存，此时不会将之前的内存清零，导致证书头4KB的内容残留在内存中。

接下来，如果恶意服务器应答roaming请求，协议会协商roaming ID、cookie等信息以及一个服务端可控的偏移值`offset`（实验中设置此值为 `4096 - 663430`，客户端默认发送缓冲长度为663430）。

同时响应一个长度小于等于4KB的`s_len`，客户端会分配一块长度为`s_len`的“roaming_mem”，其内容即为未清零的证书前4KB残留。

此时，恶意服务器断开连接，客户端用户可以选择恢复连接。客户端会将发送偏移`ofs1`设置为服务端送过来的`offset`加上本机默认发送缓冲长度`663430`，`ofs2`即为`s_len`的长度4096。

如此一来，客户端会发送`roaming_mem + ofs1 - ofs2`，长度为`ofs2`的内容到服务端。由于`ofs1 - ofs2`恰好等于0，相当于发送从`roaming_mem`起始地址开始，长度为4096的内容，刚好就是证书的4KB残留。

### 实践
为了方便实验，在证书末尾手动添加了一些字符作为补位。

```sh
[xxx@test openssh-6.4p1]$ ll /home/xxx/.ssh/id_rsa
-rw------- 1 xxx xxx 5169 Jan 16 11:58 /home/xxx/.ssh/id_rsa
[xxx@test openssh-6.4p1]$ strings /home/xxx/.ssh/id_rsa
—–BEGIN RSA PRIVATE KEY—–
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,3C261314BCFFF0379DB2CE2E14F2CD42
...
```

启动SSH服务并进行连接：

```sh
[xxx@test openssh-6.4p1]# /home/xxx/openssh-6.4p1/sshd -o ListenAddress=127.0.0.1:222 -o UsePrivilegeSeparation=no -f /etc/ssh/sshd_config -h /etc/ssh/ssh_host_rsa_key
[xxx@test openssh-6.4p1]$ ./ssh -p222 127.0.0.1
Enter passphrase for key ‘/home/xxx/.ssh/id_rsa':
xxx@127.0.0.1’s password:
[connection suspended, press return to resume][connection resumed]
[63]+ Stopped ./ssh -p222 127.0.0.1
[xxx@test openssh-6.4p1]$ sudo -i
[sudo] password for xxx:
[root@test ~]# strings /home/xxx/key
—–BEGIN RSA PRIVATE KEY—–
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,3C261314BCFFF0379DB2CE2E14F2CD42
...
[root@test ~]# ll /home/xxx/key
-r-------- 1 root root 4096 Jan 16 11:59 /home/xxx/key
```

## 0x03 写在最后
需要说明的是，在现实世界中，私钥文件超过4KB大小的情况并不常见。引用Quake3里的一句话作结尾：“gl, i love this game!”（不知道有谁见过这句话，见过的人应该也是战斗过的人）。

希望以上内容对您有所帮助！