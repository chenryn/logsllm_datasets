今天，RabbitMQ并不是开放消息通信的唯一选择。像ActiveMQ、ZeroMQ和
ApacheQpid都提供了不同的开源消息队列方案。问题是，为什么我们认为你应该
选择RabbitMQ呢？
■除了Qpid之外，RabbitMQ是唯一实现了AMQP标准的代理服务器。
■正是由于Erlang，RabbitMQ集群不可思议的简单。
■每个人的经历不同，但我们发现RabbitMQ比竞争对手更可靠，更能防止崩溃。
也许最重要的原因是RabbitMQ难以置信的容易安装和使用。不管是工作站上
的单节点设置，还是Web基础设施背后的七台服务器集群，RabbitMQ都能在30分
钟内安装好并运行起来。记住这些，让我们现在就开始吧。
1.5在UNIX系统上安装RabbitMQ
到自前为止，我们已经讨论了AMQP协议背后的动机以及RabbitMQ服务器的
历史。现在是时候把代理服务器运行起来开始“倒腾”了。运行RabbitMQ的操作
---
## Page 31
1.5在UNIX系统上安装RabbitMQ
6
系统需求非常灵活，我们可以在多个平台上运行RabbitMQ，包括Linux、Windows、
MacOSX和其他类UNIX系统。
在本章中，我们会介绍在通用UNIX系统上安装服务器的流程（本书中所有的
示例和指令在未明确指出的情况下，都将假定运行在UNIX环境上）。由于RabbitMQ
是采用Erlang编写的，因此我们需要先安装该语言库，以便运行代理服务器。
1.5.1为什么环境很重要—生活在Erlang的世界里
我们建议你使用最新版本的Erlang。在执笔本书时，最新版是R14A。你可以
从Erlang官网上获得Erlang的最新发行版（http://www.erlang.org/）。请按照网站上
的安装说明进行安装。通过运行最新版本的Erlang，我们可以获得所有更新和改进。
Erlang每一次新的发布都包含了性能提升。
在解决了RabbitMQ的依赖关系后，创建一个文件夹用于测试。假设你运行的
是类UNIX系统，打开一个终端，输人以下命令：
$ mkdir rabbitmqinaction
$cd rabbitmqinaction
1.5.2获取安装包
然后从官网的服务器下载页面下载RabbitMQ服务器：http://www.rabbitmq.com/
server.html。选择通用UNIX系统平台的安装包，然后进行下载²。
$ wget http://www.rabbitmq.com/releases/rabbitmq-server/v2.7.0/^
rabbitmq-server-generic-unix-2.7.0.tar.gz
下一步你要做的是解压压缩包，并进人rabbitmq_server-2.7.0目录：
$ tar -xzvf rabbitmq-server-generic-unix-2.7.0.tar.gz
$ cd rabbitmq_server-2.7.0/
1.5.3设置文件夹结构
在启动服务器之前，我们还需要创建一些文件夹。首先第一个是RabbitMQ的
日志文件夹。如果你需要检查安装情况的话，则可以看看这个文件夹。第二个是
2你可以从http://www.rabbitmq.com/download.html下载RabbitMQ的预构建安装包，支持Windows、
Debian/Ubuntu和IRedHat(RPM)。
---
## Page 32
10
第1章天降奇兵
Mnesia数据库文件夹。RabbitMQ使用Mnesia数据库存储服务器信息，比如队列元
数据、虚拟主机等。在终端输入以下命令：
$mkdir-p/var/log/rabbitmq
$mkdir-p/var/lib/rabbitmq/mnesia/rabbit
如果你以超级用户的身份运行了那些命令的话，记得使用chown给系统用户设
置权限。
小贴士：在生产环境运行RabbitMQ时，我们通常会专门创建一个
rabbitmq用户，然后为其赋予文件夹权限，而非使用普通用户账户来运
行所有命令。
1.5.4首次运行Rabbit
现在一切就绪，准备启动服务器。输入以下命令：
$ sbin/rabbitmq-server
RabbitMQ会输出一些关于启动过程的信息。如果一切正常，你就会看到
RabbitMQ的logo将以ASCII字符的艺术形式展现。消息代理服务器就开始运行了，
如图1.2所示。
现在打开一个新的终端窗口，并检查服务器的状态。输人以下命令”：
$cd path/to/rabbitmqinaction/rabbitmq_server-2.7.0/
$sbin/rabbitmqctlstatus
3如果你是从RPM或者Ubuntu/Debian包进行安装的话，就有可能需要以root身份来运行rabbitmqctl。
---
## Page 33
1.5在UNIX系统上安装RabbitMQ
11
000
mrhyde:rabbitmq_server-2.7.0mrhydes sbin/rabbitmq-server
Activating RabbitMQ plugins...
0plugins activated:
RabbitMQ
v2.7.0
8-0/6-0/1-6-0d0WV
Copyright (C)2007-2011 VMware,Inc,
Licensed under the MPL.See http://www.rabbitmq.com/
node
：rabbit@mrhyde
app descriptor:/git/rabbitmqinaction/av_scratchwork/examples/broker/rabbitmq_s
erver-2.7.0/sbin/../ebin/rabbit.app
home dir
:/Users/mrhyde
config file(s):/etc/rabbitmq/rabbitmq.config
cookie hash
：ONANSQ6MP0092ATN9U7Hgg==
log
:/var/log/rabbitmq/PI:EMAIL
sasllog
:/var/log/rabbitmq/PI:EMAIL
database dir
:/var/lib/rabbitmq/mnesia/rabbit@mrhyde
erlang version:5.8.5
rabbitbootstart
starting file handle cache server
...done
starting worker pool
...done
starting database
...done
starting codec correctness check
...done
-external infrastructure ready
starting plugin registry
...done
starting auth mechanism cr-demo
...done
图1.2RabbitMQ的欢迎消息
如图1.3所示，这个命令会输出代理服务器的状态、运行中的应用程序和节点。
此时此刻，默认配置的RabbitMQ代理服务器正运行在你的电脑上。
让我们回顾一下：
■下载服务器包
■解压到测试文件夹下
■设置必需的文件夹结构
■启动RabbitMQ服务器
·检查服务器状态
通过这些简单的步骤，你就启动了RabbitMQ。现在我们将介绍更多消息通信
理论，然后我们会在代理服务器上运行一些示例。
---
## Page 34
12
第1章天降奇兵
000T
Terminal-bash-87x28
mrhyde:rabbitmq_server-2.7.0mrhydessbin/rabbitmqctlstatus
Status of node rabbit@mrhyde...
[p1d,7595},
{running_applications,[rabbit,"RabbitMo","2.7.0")},
{ssl,"Erlang/OTp SSL application","4.1.6"},
{public_key,"publickeyinfrastructure","o.13"},
{crypto,"CRYPT0 vers1on 2","2.0.4"),
{os_mon,"CP0 CXC13846","2.2.7"},
{sasl,"SASL CXC 138 11","2.1.10"},
{mnes1a,"MNESIA CXC 138 12","4.5"},
{stdlib,"ERTS CXC 138 10","1.17.5"},
{kernel,"ERTS CXC 138 10","2.14.5"}1},
{os,{unix,darwin}},
{erlang_version,"Erlang R14B04(erts-5.8.5） [source] (64-bit] [smp:2:2] [rq:2] [async-
threads:30] (hipe] [kernel-poll:true]\n"},
{memory,[{total,25627552},
{processes,10422296),
{processes_used,10407064},
{system,15205256},
{atom,1139097},
{atom_used,1137479},
{binary,76104},
{code,11346167},
{ets,901984}11,
{vm_memory_high_watermark,0.3999999999441615},
{vm_memory_limit,2865407590}]
...done.
mrhyde:rabbitmq_server-2.7.0mrhydes
图1.3检测RabbitMQ状态
1.6总结
你现在能明白我们为何如此喜欢RabbitMQ了吧。即便作为来自金融行业的技
术后代，RabbitMQ设置起来仍很方便。那些曾由TIBCO和IBM引I领创作的复杂路
由和可靠性特性现在都为你所用。最激动人心的是，它是开源的！我们已经向你展
示了过去30年来消息通信的由来，从将金融交易系统连接起来的软件总线，到成
为金融交换器“心脏”的消息路由怪兽，再到半导体晶圆厂的生产线。我们才刚刚
完成第1章而已，你就能在开发笔记本电脑上将它运行起来了！接下来该研究消息
通信的各个模块了，包括队列、绑定、交换器以及虚拟主机。让我们看看如何将它
们组装在一起，并在Rabbit上运行“HelloWorld”！
---
## Page 35
理解消息通信
本章要点
■消息通信概念一消费者、生产者和代理
■AMQP元素一交换器、队列和绑定
■虚拟主机
■消息持久化
■一条消息历经从生产者到消费者的生命周期
当提到消息通信（messaging）时，程序员们会联想到许多不同的事物。脑海里
最先浮现的是邮箱和IM（即时通信），不过这些模型并非我们讨论的RabbitMQ消
息通信。虽然在某些方面，RabbitMQ的消息通信和邮箱、IM有共同之处，但它们
却是完全不同的模式。举例来说，虽然AMQP（高级消息队列协议）像邮箱那样为
离线消费者存储消息，但是这些根据标签路由的消息更为灵活。同时和邮件不同的
是，这些消息没有固定的结构，甚至可以直接存储二进制数据。不同于IM协议，
AMQP隐去了消息的发送方和接收方。AMQP也没有“存在”这个概念。因此，这
1主流的IM协议有四种，即时消息和存在协议（Instant Messaging and Presence Protocol，IMPP）、存
在和即时消息协议（Presence and Instant Messaging Protocol，PRIM）、SIP即时消息和存在扩展协议
（SIPforInstant Messaging and Presence Leveraging Extensions，SIMPLE）和可扩展消息与存在协议
（Extensible Messaging and Presence Protocol，XMPP）。——译者注
---
## Page 36
14
第2章理解消息通信
个灵活的基础设施鼓励你解耦应用程序之间的通信。AMQP消息能以一对多的广播
方式进行路由，也可以选择以一对一的方式路由。在IM中，你只能一对一通信。
由于AMQP消息通信与其他通信协议不同，因此我们将会在接下来的几节中解
释AMQP中的术语和构造。如果你有像TIBCO或者IBMMQ系列这样的企业级消
息通信系统的良好基础，那你会觉得很多内容其实非常熟悉。因为RabbitMQ专注
于应用程序之间的消息通信，所以清楚地理解通信模式的概念是非常重要的。让我
们忘记根植于脑海的客户端/服务器端特性，从现在升始熟悉消费者和生产者的概
念吧。
2.1消费者和生产者（这可不是经济学课程哦）
如果你曾在工作中使用过网络软件，脑海中应该会有客户端和服务器端的概念。
不管是浏览器和Web服务器，还是应用程序和MySQL服务器，都是其中一方发送
请求，而另一方服务这些请求。你可以将其视为快餐车模式。你的应用程序下订单，
然后快餐车完成订单。你需要的数据来源于快餐车服务器。该模型就是我们平时如
何尝试理解应用程序和服务器之间发生的一切。因此对于这个新的消息通信机制，
你可能会问：哪个是顾客，哪个是快餐车，还有我怎样下订单呢？
这确实是个问题。RabbitMQ不是快餐车而是消息投递服务。应用程序从
RabbitMQ获得的数据并不是由Rabbit产生的，就如同你收到的快递包裹也不是由
FedEx生产的一样。因此，让我们把Rabbit当作一种投递服务。应用程序可以发送
和接收包裹。而数据所在的服务器也可以发送和接收。RabbitMQ在应用程序和服
务器之间扮演着路由器的角色。所以当应用程序连接到RabbitMQ时，它就必须做
个决定：我是在发送还是在接收呢？或者从AMQP的角度思考，我是一个生产者还
是一个消费者呢？
生产者（producer）创建消息，然后发布（发送）到代理服务器（RabbitMQ）。
什么是消息呢？消息包含两部分内容：有效载荷（payload）和标签（label）。有效
载荷就是你想要传输的数据。它可以是任何内容，一个ISON数组或者是你最喜欢
的iguanaZiggy的MPEG-4。RabbitMQ不会在意这些。标签就更有趣了。它描述
子有效载荷，并且RabbitMQ用它来决定谁将获得消息的拷贝。举例来说，不同于
TCP协议的是，当你明确指定发送方和接收方时，AMQP只会用标签表述这条消息
---
## Page 37
2.1消费者和生产者（这可不是经济学课程哦）
15
（一个交换器的名称和可选的主题标记），然后把消息交由Rabbit。Rabbit会根据标
签把消息发送给感兴趣的接收方。这种通信方式是一种“发后即忘”（fire-and-forget）
的单向方式。稍后在我们讨论交换器和绑定时，会更详细地探讨RabbitMQ是如何
解释标签的。眼下你只需要知道生产者会创建消息并设置标签（见图2.1）。
创建消息
消息！
数据！
发布消息
生产者
消息！
RabbitMQ
消息！
发布消息
消息！
读取消息
数据！
消费者
图2.1从生产者到消费者的消息流
消费者很容易理解。它们连接到代理服务器上，并订阅到队列（queue）上。把
消息队列想象成一个具名邮箱。每当消息到达特定的邮箱时，RabbitMQ会将其发送
给其中一个订阅的/监听的消费者。当消费者接收到消息时，它只得到消息的一部分：
有效载荷。在消息路由过程中，消息的标签并没有随有效载荷一同传递。RabbitMQ
甚至不会告诉你是谁生产／发送了消息。就好比你拿起信件时，却发现所有的信封
都是空白的。想要知道这条消息是否是从Millie姑妈发来的唯一方式是她在信里签