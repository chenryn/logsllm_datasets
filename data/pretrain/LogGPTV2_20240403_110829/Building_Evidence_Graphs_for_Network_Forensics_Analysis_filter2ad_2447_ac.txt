3. Windows DCOM remote buffer overﬂow attack
against stepping stone 2 from stepping stone 1.
4. Download attack tools from ftp relay to stepping stone
2 and starts a backdoor on stepping stone 2.
5. Frontpage Server 2000 buffer overﬂow attack against
the victim from stepping stone 2.
6. Download backdoor program from ftp relay to victim
and starts backdoor on victim.
7. Transfer data from the victim to the ftp relay and close
backdoor connections.
5.2 Evidence Preprocessing
Throughout the attack process, Snort reported a huge
number of 7501 alerts. With our ﬂexible alert aggregation
procedure, the alerts information is highly condensed. We
apply a time limit T of 60 seconds for the self-extending
time window. The result is 4 hyper-alerts related to port
scan activity and 17 hyper-alerts which represent other ex-
ploits. The aggregated hyper alerts are illustrated in ﬁgure
3.
5.3 Evidence Graph Construction
Based on the primary evidence intrusion alerts, our graph
generation module generated the initial evidence graph
shown in ﬁgure 3. The number attached with each edge
denotes the sequence of corresponding evidences in time
order. Note that there’s no exploit activities involved with
the ftp relay, therefore it does not show up in the initial evi-
dence graph.
To get a clearer view, the analyst can apply ﬁlter condi-
tions to remove irrelevant evidences. On the other hand, the
analyst can specify queries for secondary evidence to pro-
vide a more comprehensive view of what’s going on in the
network. For example, based on ﬁgure 3, we can ignore all
port scan attacks and ﬁnd out all ﬁle transfer connections
to hosts in the evidence graph during a speciﬁed time win-
dow. The updated evidence graph is showing in ﬁgure 4.
We notice that several potentially suspicious hosts include
the ftp relay are brought up in the updated evidence graph.
Speciﬁc alerts in ﬁgure 3 are replaced by abstractions from
the knowledge base to offer a high level picture in ﬁgure 4.
Figure 3. Evidence Graph from primary evi-
dence
Figure 4. Enriched Evidence Graph with sec-
ondary evidence
5.4 Local Reasoning
In the ﬁrst step of analysis, the analyst would examine
the states of hosts from local reasoning process. Based
on the RBFCM-based local reasoning procedure, states of
nodes in the evidence graph are inferred and shown in ta-
ble 2. The hosts that have ”Attacker” state activated are
highlighted in ﬁgure 3 and ﬁgure 4.
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:05:17 UTC from IEEE Xplore.  Restrictions apply. 
Table 2. Local Reasoning Results
Host
degree
192.168.22.4
192.168.25.3
192.168.21.3
192.168.23.4
192.168.24.4
192.168.22.6
129.186.215.40
129.186.215.41
192.168.21.5
192.168.21.6
207.171.166.48
207.171.175.22
66.150.153.111
216.52.167.132
63.240.204.202
12
12
11
6
5
4
2
1
1
1
1
1
1
1
1
AT
0.85
0.85
0.80
0.69
0
VI
0.85
0.80
0
0.85
0
0.85
0.50
0
0
0
0
0
0
0
0
0
0
0
0
0
0.67
0.67
0.67
0.69
0.71
SS
0.87
0.94
0
0
0
0
0
0
0
0
0
0
0
0
0
AF
0.84
0.84
0.84
0.82
0.84
0
0.81
0.69
0.70
0.70
0
0
0
0
0
5.5 Global Reasoning
First, we use degree of a node as the metric to gener-
ate the initial seed for attack group. From table 2 we can
see that host 192.168.22.4 has the highest degree, thus we
choose it as the initial seed for attack group.
In the next step, we expand the group by evaluating the
distance between candidate nodes to seeds of the group.
Distances between neighbor pairs are shown in table 3.
Starting from the seed, the attack group is expanded incre-
mentally. With distance threshold 1, the result attack group
is shown in the correlation graph (ﬁgure 5). The highlighted
oval node is the initial seed of the attack group and the high-
lighted square nodes are members added to the attack group
during the group expansion process.
By observing the states of members in the attack
group we can see that host 192.168.21.3 has only
Attacker state activated. Hosts 192.168.25.3,192.168.22.4
both have Stepping Stone state activated.
Host
192.168.23.4 has both Attacker and V ictim state acti-
vated but not Stepping Stone. Further examination of
the activation time of states clearly suggests that host
192.168.21.3 is the initial start point of attack and hosts
192.168.25.3,192.168.22.4 are used as stepping stones.
Both 129.186.215.40 and 192.168.24.4 are afﬁliated with
attacker and stepping stones, which suggest that more inves-
tigation is needed to ﬁnd out whether they are truly related
to the attack.
Intuitively from the graph we can see that
192.168.24.4 seems more suspicious because it is afﬁliated
with more members in the attack group than 129.186.215.40
does. Although 192.168.22.6 is labelled as an attacker in
local reasoning process, it is unrelated to the main attack
group. Thus we tend to regard it as a background attacker.
The results show that with sufﬁcient evidence, our auto-
mated analysis mechanism is effective in discovering attack
Table 3. Distance between pair of nodes
Host 1
192.168.25.3
192.168.21.3
192.168.23.4
192.168.23.4
192.168.21.3
63.240.204.202
192.168.21.3
192.168.21.6
192.168.22.4
192.168.21.5
192.168.21.3
192.168.23.4
192.168.21.3
192.168.25.3
192.168.22.6
192.168.22.6
192.168.22.6
Host 2
Distance
192.168.22.4
192.168.25.3
192.168.22.4
192.168.24.4
129.186.215.40
192.168.22.6
192.168.22.4
192.168.22.4
192.168.24.4
192.168.22.4
192.168.24.4
216.52.167.132
129.186.215.41
192.168.24.4
207.171.175.22
207.171.166.48
66.150.153.111
0.23
0.24
0.43
0.59
0.67
1.11
1.18
1.19
1.19
1.19
1.25
1.25
1.27
1.27
1.43
1.43
1.43
group and high-level scenario of the attack.
Figure 5. Correlation graph with attack group
We also evaluated our techniques with an external
dataset generated by a larger scale multi-stage attack. Six
hosts are true attackers that are responsible for primary at-
tacks and 10 hosts are background attackers that initiate ma-
licious activities not related to the primary attack scenario.
Our analysis mechanism correctly identiﬁes most of the at-
tack group and steps. One attacker and two background at-
tackers are absent from the evidence graph because exploits
originated from the two attackers evaded detection. There-
fore results of our analysis mechanism are limited by the
completeness and accuracy of collected evidence.
6 Conclusions and Future Work
In this paper, we developed a network forensics analy-
sis mechanism to reason about attack group and scenario.
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:05:17 UTC from IEEE Xplore.  Restrictions apply. 
We proposed the evidence graph as a novel graph model for
presentation and manipulation of intrusion evidence. Based
on the evidence graph, we further proposed a hierarchical
reasoning framework for automated evidence analysis. By
local reasoning with RBFCM we come to know the possi-
ble roles of suspicious hosts in a local view. In global rea-
soning, we identify the set of highly correlated hosts in an
attack group and reﬁne the roles in local reasoning results to
ﬁt into the scenario context. The combination of local and
global reasoning results provides a high level picture of at-
tacks represented by the observed intrusion evidence to the
analyst. We developed a prototype tool and initial exper-
imental results have demonstrated the potential use of our
proposed methods.
This work is only the starting point of our efforts towards
network forensics analysis. In future work, we will reﬁne
current approaches in local and global reasoning process.
We will also investigate methods to automate the process for
hypothesizing missing evidence and validating hypotheses.
In the next step, we will work with industrial and govern-
ment agencies to evaluate our techniques with more realistic
experiments.
Acknowledgment
Thanks to DOI contract No. NBCHC030107 for initial
funding of this research and laboratory as well as the exter-
nal datasets. We would also like to thank the anonymous
reviewers for their helpful feedback.
References
[1] LEDA graph library. Algorithmic Solutions Software,
http://www.algorithmic-solutions.com/enleda.htm.
[2] S. M. Bellovin.
ICMP traceback mes-
sages. Available at http://www.ietf.org/internet-drafts/draft-
bellovin-itrace-00.txt, March 2000.
Internet draft:
[3] J. P. Carvalho and J. A. B. Tome. Rule Based Fuzzy Cog-
nitive Maps and Fuzzy Cognitive Maps - A Comparative
Study. In Proceedings of the 18th International Conference
of the North American Fuzzy Information Processing Soci-
ety(NAFIPS99), New York, 1999.
[4] J. P. Carvalho and J. A. B. Tome. Rule Based Fuzzy
Cognitive Maps: Fuzzy Causal Relations.
In Proceedings
of the 8th International Fuzzy Systems Association World
Congress(IFSA99), Taiwan, 1999.
[5] F. Cuppens and A. Miege. Alert Correlation in a Cooperative
Intrusion Detection Framework. In Proceedings of the 2002
IEEE Symposium on Security and Privacy, May 2002.
[6] O. Dain and R. Cunningham. Building scenarios from a het-
erogeneous alert stream. In Proceedings of the 2001 IEEE
workshop on Information Assurance and Security, pages
231–235, 2001.
[7] O. Dain and R. Cunningham. Fusing a heterogeneous alert
In Proceedings of the 2001 ACM
stream into scenarios.
workshop on Data Mining for Security Applications, pages
231–235, 2001.
[8] T. E. Daniels.
Reference Models for the Conceal-
ment and Observation of Origin Identity in Store-and-
Forward Networks. PhD thesis, Purdue University, West
Lafayette,Indiana, 2002.
[9] H. Debar, M. Dacer, and A. Wespi. A revised taxonomy for
intrusion-detection systems. In IBM Research Report, 1999.
[10] H. Debar and A. Wespi. Aggregation and Correlation of
Intrusion-Detection Alerts. In Proceedings of the 4th Inter-
national Symposium on Recent Advances in Intrusion De-
tection(RAID), October 2001.
Tool.
[11] EnCase
Available
Forensic
at
http://www.guidancesoftware.com.
[12] Intrusion Detection Message Exchange Format.
Internet
draft available at http://www.ietf.org/internet-drafts/draft-
ietf-idwg-idmef-xml-14.txt.
[13] Institute for Security Technology Studies. Law enforce-
ment tools and technologies for investigating cyber attacks:
Gap analysis report. http://www.ists.dartmouth.edu, Febru-
ary 2004.
[14] C. Kruegel and W. Robertson. Alert Veriﬁcation: Determing
the success of intrusion attempts. In Proceedings of the 1st
Workshop on the Detection of Intrusions and Malware Vul-
nerability Assessment (DIMVA), Dortmund, Germany, July.
2004.
[15] B. Morin, L. Me, H. Debar, and M. Ducasse. M2D2: A For-
mal Data Model for IDS Alert Correlation. In Proceedings
of the 5th International Symposium on Recent Advances in
Intrusion Detection, pages 115–137, 2002.
[16] P. Ning, Y. Cui, and D. S. Reeves. Constructing attack
scenarios through correlation of intrusion alerts.
In 9th
ACM Conference on Computer and Communicaitons Secu-
rity, November 2002.
[17] SafeBack Bit Stream Backup Software.
Available at
http://www.forensics-intl.com/safeback.html.
[18] K. Shanmugasundaram, N. Memon, A. Savant, and H. Bron-
nimann. ForNet: A Distributed Forensics Network. In Pro-
ceedings of the Second International Workshop on Mathe-
matical Methods, Models and Architectures for Computer
Networks Security, St. Petersburg, Russia, 2003.
[19] A. Siraj, S. M.Bridges, and R. B.Vaughn. Fuzzy cognitive
maps for decision support in an intelligent intrusion detec-
tion system. Technical report, Department of Computer Sci-
ence, Mississippi State University, 2001.
[20] A. C. Snoeren, C. Partridge, L. A. Sanchez, C. E. Jones,
F. Tchakountio, B. Schwartz, S. T. Kent, and W. T. Strayer.
Single-packet
IEEE/ACM Trans. Netw.,
10(6):721–734, 2002.
ip traceback.
[21] A. Valdes and K. Skinner. Probablistic alert correlation. In
Proceedings of the 4th International Symposium on Recent
Advances in Intrusion Detection(RAID), October 2001.
[22] K. Yoda and H. Etoh. Finding a connection chain for tracing
intruders. In Proceedings of the 6th European Symposium on
Research in Computer Security (ESORICS 2000), Toulouse,
France, Oct. 2000.
[23] Y. Zhang and V. Paxson. Detecting stepping stones.
In
Proceedings of the 9th USENIX Security Symposium, pages
171–184, Denver, USA, Aug. 2000.
Proceedings of the 21st Annual Computer Security Applications Conference (ACSAC 2005) 
1063-9527/05 $20.00 © 2005 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 25,2021 at 12:05:17 UTC from IEEE Xplore.  Restrictions apply.