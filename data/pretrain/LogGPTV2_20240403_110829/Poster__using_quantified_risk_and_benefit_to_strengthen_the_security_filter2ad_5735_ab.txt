tions of fuzzy sets.
• Two types of obligation services: Risk mitigation ac-
tions and beneﬁt incentive actions.
• The  element, which consists of .
• The  element in the 
element. The following code is an example of the
 element:
This element represents a policy which holds when the
RAA is high, BDA is low, then the eﬀect (allow or
deny) on the target of  will work. It also
suggests that the fuzzy inference model is ”MINMAX”.
Note that, we use fuzzy sets rather than thresholds to de-
ﬁne the means of measured quantiﬁed risk and beneﬁt. The
main diﬀerence between the two methods are as follows: if
a fuzzy set based method points out an assigned variable is
◦
high, that means the assigned variable, e.g. 29
C of tem-
perature, belongs to the high fuzzy set, and a percentage of
membership, e.g. 70% high, will also be assigned according
to a membership function. But the threshold based method
will only return the result high with no percentage of mem-
bership. Moveover, after assigning the percentage of mem-
bership, the system will infer a result according to the fuzzy
logic rather than boolean logic.
4. PROTOTYPE AND EVALUATION
Figure 1 shows the data ﬂow of QSBAC-XACML, which
is extended from XACML. Here, we add the following new
features:
• RMP and BMP: RMP is responsible for measuring risk
(RAA and RDA), whereas BMP is for measuring ben-
eﬁt (BAA and BDA). In QSBAC quantiﬁed risk and
782Test Case 1
Time/ms
90
88
86
84
82
80
1
2
3
4
5
6
Test Case 3
Time/ms
94
92
90
88
86
84
82
80
1
5
9
13
17
21
7
8
Number of Rule
Test Case 2
Time/ms
96
94
92
90
88
86
84
82
80
2
4
6
8
10
12
Test Case 4
Time/ms
Time/ms
110
105
100
95
90
85
80
14
Number of Rule
16
25
27
Number of Rule
6
11 16 21 26 31 36 41 46 51 56 61 66 71 76 81
Number of Rule
Figure 2: Performance Evaluation
beneﬁt are viewed as two types of attributes in the
data ﬂow.
• Two types of obligation services: RMA Service and
BIA Service. RMA Service enforces the risk mitigation
actions in the response, whereas BIA Service enforces
the beneﬁt incentive actions in the response.
The work ﬂow of QSBAC-XACML is as follows. The PEP
(Policy Enforcement Point) is responsible for acquiring an
access request and transferring it to the Context Handler.
Then the PDP (Policy Decision Point) is invoked by the
Context Handler to make a decision for the request. The
PDP may retrieve necessary attributes from the Context
Handler for evaluation, and ﬁnally return the decision result
to the request. Afterwards the Context Handler will return
the result back to the PEP. Meanwhile, the PEP will enforce
the result and, if necessary, collaborate with the Obligation
Service to enforce obligations.
Based on Enterprise XACML Implementation [4], we im-
plemented a prototype.
We designed four test cases to evaluate the performances
of the inference engine in the PDP, and the results are shown
in Figure 2, where X axis of each diagram refers to the num-
ber of fuzzy conditions, and Y axis refers to the time the
PDP responses to a request. We can conclude that the pro-
totype of QSBAC is feasible both in design and performance.
There can be at most three fuzzy sets (high, middle, low )
and four variables (RAA, RDA, BAA, BDA). Because the
number of variables and fuzzy sets can be cut out, we choose
two fuzzy sets for each three variables in Test Case 1 (23=8);
two fuzzy sets for each four variables in Test Case 2 (24=16);
three fuzzy sets for each three variables (33=27) in Test Case
3; and three fuzzy set for each four variables (34=81) in Test
Case 4.
5. RELATED WORK
Risk is always a hot spot in the ﬁeld of information secu-
rity. The JASON report[3] introduced a road map to lever-
age risk to enlarge and assure horizonal integration in infor-
mation sharing. Cheng et al. [1] proposed FuzzyMLS where
they used quantiﬁed risk as a factor to improve the ﬂexibility
of multi-level security systems. Han et al. [2] used quantiﬁed
risk to strengthen the security of workﬂow systems.
Besides the above work, beneﬁt is also researched to en-
large and assure the information sharing. Zhang et al. [7]
proposed BARAC where risks of information leakage and
beneﬁts of information sharing are balanced. But they only
used boolean logic. Moreover, the risks and beneﬁts or-
ganized as vectors must be comparable and the system is
required to be proﬁtable in their method. This assumption
would limit their applicable scenarios.
Diﬀerent from the above works, QSBAC introduces the
four quantiﬁed variables, and uses fuzzy set and fuzzy logic
to infer a decision based on risk and beneﬁt variables, risk
mitigation actions, beneﬁt incentive actions, and preset risk
and beneﬁt adaptive policies.
In QSBAC, the measured
risks and beneﬁts only meet the requirements of the mem-
berships of fuzzy set, and are not necessarily comparable
among them.
6. CONCLUSION AND FUTURE WORK
This paper introduces QSBAC where we use four vari-
ables, RAA, RDA, BAA, BDA, as main factors to determine
an information sharing request. We analyze the motivation
of QSBAC, propose how to design the policies of QSBAC,
and introduce the prototype and performance evaluation.
The analysis, prototype and performance evaluation show
QSBAC can help security administrators to easily deal with
undeﬁned situations in emergent or dynamic application sce-
narios, and the performance is promising.
In future, we will introduce QSBAC into several applica-
tion scenarios, including dynamic network management and
identity combination in online banking.
Acknowledgement
This paper is supported by the 863 high-tech project (Grant
NO: 2011AA100701) and Key Lab of Information Network
Security, Ministry of Public Security (Grant NO: C11601).
Thank Mrs. Min Li for her English polish.
7. REFERENCES
[1] P. Cheng, P. Rohatgi, C. Keser, P. A. Karger, G. M.
Wagner, and A. S. Reninger. Fuzzy multi.level security:
An experiment on quantiﬁed risk adaptive access
control. In SP’07, pages 222 – 230, CA, USA, May
2007. ACM.
[2] W. Han, Q. Ni, and H. Chen. Apply measurable risk to
strengthen security of a role-based delegation
supporting workﬂow system. In POLICY 2009, pages
45–52, 2009.
[3] JASON. Horizontal integration: Broader access models
for realizing information dominance. Technical Report
JSR-04-132, MITRE Corporation,
http://www.fas.org/irp/agency/dod/jason/classpol.pdf,
2004.
[4] Ppzian. Enterprise xacml implementation. In
http://sourceforge.net/projects/java-xacml/, 2008.
[5] E. Rissanen. Extensible access control markup language
(xacml). OASIS Standard, April 2009.
[6] M. Srivatsa, D. Agrawal, and S. Reidt. A metadata
calculus for secure information sharing. In CCS’09, IL,
USA, 2009.
[7] L. Zhang, A. Brodsky, and S. Jajodia. Toward
information sharing: Beneﬁt and risk access control
(barac). In POLICY 2006, pages 45–53, London,
Ontario, Canada, June 2006.
783