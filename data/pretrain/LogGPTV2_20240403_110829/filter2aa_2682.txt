CobaltStrike 4.3 简单修改
几个月没有使用CobaltStrike了，因此最新的4.3，我也没有自己修改的版本。今天为了测试
HiveNightmare于是乎修改了下。 
网上有@Twi1ight同学写的比较通用的CSAgent。
CSAgent使用需要引入jar包，并且windows下不能使用cobaltstrike.exe去启动。我个人还是习惯一个
cobaltstrike.jar，只做必要的修改，因此就自己修改了下。
主要修改了Authorization.class、BeaconData.class，两文件。
方便新手同学自己简单修改，我还是详细说下步骤：
Authorization.java，我在代码中标注，可以自定义的部分，主要还是watermark。
package common;
import java.io.*;
public class Authorization
{
    protected int watermark;
    protected String validto;
    protected String error;
    protected boolean valid;
    public Authorization() {
        this.watermark = 0;
        this.validto = "forever";
        this.error = null;
        this.valid = true;
        try {
            this.watermark = 29999999; //这个watermark也是id，建议自己定义，随便修改成
其他数字，比如：28888888
            MudgeSanity.systemDetail("valid to", "perpetual");
            MudgeSanity.systemDetail("id", this.watermark + "");
 SleevedResource.Setup(hex2bytes("3a4425490f389aeec312bdd758ad2b99"));
        }
        catch (Exception ex2) {
            MudgeSanity.logException("auth file parsing", ex2, false);
        }
    }
    public byte[] hex2bytes(String s) {
        int len = s.length();
        byte[] data = new byte[len / 2];
        for (int i = 0; i  this.getExpirationDate() + 
CommonUtils.days(1);
    }
    public String whenExpires() {
        final long n = (this.getExpirationDate() + CommonUtils.days(1) - 
System.currentTimeMillis()) / CommonUtils.days(1);
        if (n == 1L) {
            return "1 day (" + CommonUtils.formatDateAny("MMMMM d, YYYY", 
this.getExpirationDate()) + ")";
        }
        if (n  
this.getExpirationDate();
    }
}
package beacon;
import java.io.*;
import common.*;
import java.util.*;
public class BeaconData
{
    public static final int MODE_HTTP = 0;
    public static final int MODE_DNS = 1;
    public static final int MODE_DNS_TXT = 2;
    public static final int MODE_DNS6 = 3;
    protected Map queues;
    protected Map modes;
    protected Set tasked;
    protected boolean shouldPad;
    protected long when;
    public BeaconData() {
        this.queues = new HashMap();
        this.modes = new HashMap();
        this.tasked = new HashSet();
        this.shouldPad = false;
        this.when = 0L;
    }
    protected List getQueue(final String s) {
        synchronized (this) {
            if (this.queues.containsKey(s)) {
                return (List)this.queues.get(s);
            }
            final LinkedList list = new LinkedList();
            this.queues.put(s, list);
            return list;
        }
    }
    public boolean isNewSession(final String s) {
        synchronized (this) {
            return !this.tasked.contains(s);
        }
    }
    public void virgin(final String s) {
        synchronized (this) {
            this.tasked.remove(s);
        }
    }
    public void shouldPad(final boolean shouldPad) {
        //this.shouldPad = shouldPad;
        this.shouldPad = false; //修改的就这句，去除jar文件完整性校验。
        this.when = System.currentTimeMillis() + 1800000L;
    }
    public void task(final String s, final byte[] array) {
        synchronized (this) {
            final List queue = this.getQueue(s);
            if (this.shouldPad && System.currentTimeMillis() > this.when) {
                final CommandBuilder commandBuilder = new CommandBuilder();
                commandBuilder.setCommand(3);
                commandBuilder.addString(array);
                queue.add(commandBuilder.build());
            }
            else {
                queue.add(array);
            }
            this.tasked.add(s);
        }
    }
    public void seen(final String s) {
        synchronized (this) {
            this.tasked.add(s);
        }
    }
    public void clear(final String s) {
        synchronized (this) {
            this.getQueue(s).clear();
            this.tasked.add(s);
        }
    }
    public int getMode(final String s) {
        synchronized (this) {
            final String s2 = this.modes.get(s).toString();
            if ("dns-txt".equals(s2)) {
                return 2;
            }
            if ("dns6".equals(s2)) {
                return 3;
            }
            if ("dns".equals(s2)) {
                return 1;
            }
        }
        return 2;
    }
    public void mode(final String s, final String s2) {
        synchronized (this) {
            this.modes.put(s, s2);
        }
    }
    public boolean hasTask(final String s) {
        synchronized (this) {
            return this.getQueue(s).size() > 0;
        }
    }
    public byte[] dump(final String s, final int n) {
        synchronized (this) {
            int n2 = 0;
            final List queue = this.getQueue(s);
            if (queue.size() == 0) {
                return new byte[0];
            }
            final ByteArrayOutputStream byteArrayOutputStream = new 
ByteArrayOutputStream(8192);
            final Iterator iterator = queue.iterator();
            while (iterator.hasNext()) {
                final byte[] array = iterator.next();
java文件 ---> class文件
替换直接使用360压缩软件：
                if (n2 + array.length < n) {
                    byteArrayOutputStream.write(array, 0, array.length);
                    iterator.remove();
                    n2 += array.length;
                }
                else {
                    if (array.length < n) {
                        CommonUtils.print_warn("Chunking tasks for " + s + "! " 
+ array.length + " + " + n2 + " past threshold. " + queue.size() + " task(s) on 
hold until next checkin.");
                        break;
                    }
                    CommonUtils.print_error("Woah! Task " + array.length + " for 
" + s + " is beyond our limit. Dropping it");
                    iterator.remove();
                }
            }
            return byteArrayOutputStream.toByteArray();
        }
    }
}
javac -cp cobaltstrike.jar BeaconData.java Authorization.java
Authorization.class拖到common目录，BeaconData.class拖到beacon目录。
ps:文中尽量规避了破解、漏洞等词语。