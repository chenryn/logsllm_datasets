# E2E: Embracing User Heterogeneity to Improve Quality of Experience on the Web

**Authors:**
- Xu Zhang<sup>1</sup>, Siddhartha Sen<sup>2</sup>, Daniar Kurniawan<sup>1</sup>, Haryadi Gunawi<sup>1</sup>, Junchen Jiang<sup>1</sup>
- <sup>1</sup>University of Chicago, <sup>2</sup>Microsoft Research

## Abstract
Conventional wisdom suggests that web service providers should minimize median or other percentiles of server-side delays to improve the quality of experience (QoE). However, this approach can be inefficient due to user heterogeneity in how delays impact QoE. The sensitivity of a request to delays varies significantly among identical requests, as they experience different wide-area network latencies before reaching the service. For example, saving 50ms of server-side delay affects users differently.

This paper introduces E2E, the first resource allocation system that leverages user heterogeneity to allocate server-side resources in a QoE-aware manner. A key challenge is that the QoE sensitivity of a request to server-side delays cannot be predetermined, as it depends on the delays themselves, which are influenced by resource allocation decisions and incoming requests. This circular dependence makes the problem computationally challenging.

We make three contributions:
1. A case for exploiting user heterogeneity to improve QoE, based on end-to-end traces from Microsoft’s cloud-scale production web framework and a user study on Amazon MTurk.
2. A novel resource allocation policy that addresses the circular dependence.
3. An efficient system implementation with minimal overhead.

We applied E2E to two open-source systems: replica selection in Cassandra and message scheduling in RabbitMQ. Our results show that E2E can increase QoE (e.g., duration of user engagement) by 28%, or serve 40% more concurrent requests without any drop in QoE.

**CCS Concepts:**
- Information systems → Web services
- Human-centered computing

**Keywords:**
- Web Services, Quality of Experience, Resource Allocation

**ACM Reference Format:**
Xu Zhang, Siddhartha Sen, Daniar Kurniawan, Haryadi Gunawi, Junchen Jiang. 2019. E2E: Embracing User Heterogeneity to Improve Quality of Experience on the Web. In SIGCOMM'19: 2019 Conference of the ACM Special Interest Group on Data Communication, August 19–23, 2019, Beijing, China. ACM, New York, NY, USA, 14 pages. https://doi.org/10.1145/3341302.3342089

## 1 Introduction
Improving end-to-end performance is crucial for web service providers like Microsoft, Amazon, and Facebook, whose revenues depend on high QoE. Studies have shown that even small increases in latency can significantly reduce user engagement and conversion rates. For example, every 100ms of additional load time can decrease sales by 1% and traffic by 7%. Consequently, web service providers focus on minimizing server-side delays, the only delays they can control.

However, our work reveals that reducing server-side delay uniformly across all requests may not be the most effective strategy. The amount of QoE improvement varies greatly depending on the external delay experienced by each request. We define QoE sensitivity as the improvement in QoE if the server-side delay were reduced to zero. There is substantial heterogeneity in QoE sensitivity across users, which arises from two empirical findings:
1. QoE typically decreases along a sigmoid-like curve as delay increases. When the external delay is very short or very long, QoE is less sensitive to server-side delay than when the external delay is moderate.
2. External delays vary widely among user requests due to factors such as ISP routing, last-mile connectivity, DNS lookups, and client-side rendering.

This heterogeneity implies that uniformly minimizing server-side delays can be inefficient, as resources may be used to optimize requests that are not sensitive to these delays. Instead, we should reallocate resources to requests whose QoE is more sensitive to server-side delay.

To address this, we present E2E, a resource allocation system that optimizes QoE by allocating resources based on each user’s sensitivity to server-side delay. E2E decouples the resource allocation problem into two subproblems: workload allocation and delay assignment. It iteratively solves these subproblems to find the best allocation and assignment. From a systems perspective, E2E reduces the cost of processing each request by coarsening the timescale and granularity of resource allocation decisions.

We demonstrate the practicality of E2E by integrating it into two open-source systems: replica selection in Cassandra and message scheduling in RabbitMQ. Our evaluation shows that E2E can improve QoE (e.g., duration of user engagement) by 28%, or serve 40% more concurrent requests without any drop in QoE, with negligible system overhead.

## 2 Motivation
### 2.1 Dataset
Our dataset consists of traces of all web requests served by a production web framework cluster during one day in February 2018. The cluster serves major websites and online storefront properties of Microsoft. The dataset includes both client-side and server-side event logs, spanning 1.17M unique users and 1.6M page load events.

For each web request, we define three delay metrics:
- **Total delay (page load time):** The duration between when a user clicks a link and when the last object associated with the request is rendered.
- **Server-side delay:** The time to process all server-side operations on the backend.
- **External delay:** All delays beyond the purview of server-side operations, including wide-area network and datacenter delays.

We measure these delay metrics using timestamps recorded in our traces. The total delay is the difference between the first and last timestamps. The server-side delay is the total delay of all backend operations, and the external delay is calculated by subtracting the server-side delay from the total delay.

### 2.2 Prevalence of Heterogeneity
We use our traces to show the prevalence of heterogeneity in how server-side delays impact QoE. We verified this trend using traces from Microsoft’s cloud-scale production web framework and a user study on Amazon MTurk.

### 2.3 Potential QoE Improvement
We analyze the potential QoE improvement that could be attained by leveraging this heterogeneity for server-side resource allocation. Our results show that if we could reshuffle server-side delays among concurrent requests so that requests with more sensitive QoE get lower server-side delays, we could increase the average duration of user engagement by 28%.

This paper focuses on applying E2E to individual services or multiple services that serve unrelated requests, allowing us to develop our key idea of prioritizing requests based on their QoE sensitivity without the added complexity introduced by dependencies across services.