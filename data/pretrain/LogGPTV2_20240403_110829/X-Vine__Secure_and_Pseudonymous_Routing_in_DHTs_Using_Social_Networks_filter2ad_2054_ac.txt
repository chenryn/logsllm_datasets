than friendship graphs. Hence we consider both traditional
social network graph topologies as well as interaction graph
topologies in our evaluation. The datasets that we use have
been summarized in Table 1.
Facebook friendship graph from the New Orleans re-
gional network [62]: The original dataset consists of 60 290
nodes and 772 843 edges. We processed the dataset in a
manner similar to the evaluation done in SybilLimit [68]
and SybilInfer [21], by imposing a lower bound of 3 and an
upper bound of 100 on the node degree (see [21, 68] for
details) 2. After processing, we are left with 50 150 nodes
and 661 850 edges.
Facebook wall post interaction graph from the New Or-
leans regional network [62]: The original dataset consists
of 60 290 users. After processing, we are left with 29 140
users and 161 969 edges. Note that links in this dataset are
directed, and we consider an edge between users only if
there were interactions in both directions.
Facebook interaction graph from a moderate-sized re-
gional 3 network [66]: The dataset consists of millions of
nodes and edges, but our experiments are memory limited
and do not scale to millions of nodes. Instead, we ﬁrst trun-
cate the dataset by considering only a four hop neighbor-
hood from a seed node. After processing, we are left with
103 840 nodes and 961 418 edges.
Synthetic scale-free graphs: Social networks exhibit a
scale-free node degree topology [53]. Our network synthe-
sis algorithm replicates this structure through preferential
attachment, following the methodology of Nagaraja [45].
The use of synthetic scale free topologies enables us eval-
uate X-Vine while varying the number of nodes in the net-
work.
Overhead: Figure 4 plots the routing table size for dif-
ferent successor list sizes. We can see the temporal corre-
lation effect here, as the distribution of state shows super-
exponential growth. Temporal correlation is highly unde-
2Recent work by Mohaisen et al. [44] shows that social networks may
not be as fast mixing as previously believed. However, we note that their
results do not directly apply to X-Vine since they did not consider node
degree bounds in their analysis. X-Vine excludes users having few friends
from participating in the routing protocol, though such users could use
their trusted friends to lookup keys.
3Because of privacy reasons, the name of the regional network has been
left anonymous by the authors of [66].
 100000
 10000
 1000
succ=1
succ=5
succ=10
 100
 10
 1
 0
 10000
 20000
Node index
(a)
e
z
s
i
l
e
b
a
t
g
n
i
t
u
o
R
 100000
 10000
 1000
succ=1
succ=5
succ=10
 100
 10
 1
 0
 20000
 40000
Node index
(b)
e
z
s
i
l
e
b
a
t
g
n
i
t
u
o
R
 100000
 10000
 1000
succ=1
succ=5
succ=10
 100
 10
 1
 0
 25000  50000  75000  100000
Node index
(c)
Figure 4. Routing state, with no bounds on state:
(a) New Orleans Interaction graph, (b) New Orleans
Friendship graph, and the (c) Anonymous Interaction graph. Due to temporal correlation, some
nodes exhibit high state requirements.
 100000
 10000
 1000
succ=1
succ=5
succ=10
Degree
 100000
 10000
 1000
succ=1
succ=5
succ=10
Degree
 100000
 10000
 1000
succ=1
succ=5
succ=10
Degree
e
z
s
i
l
e
b
a
t
e
z
s
i
l
e
b
a
t
e
z
s
i
l
e
b
a
t
g
n
i
t
u
o
R
e
z
s
i
l
e
b
a
t
g
n
i
t
u
o
R
 100
 10
 1
 0
 10000
 20000
Node index
(a)
g
n
i
t
u
o
R
 100
 10
 1
 0
 20000
 40000
Node index
(b)
g
n
i
t
u
o
R
 100
 10
 1
 0
 25000  50000  75000  100000
Node index
(c)
Figure 5. Routing state, with node and edge bounds: (a) New Orleans Interaction graph, (b) New Orleans
Friendship graph, and (c) Anonymous Interaction graph. Bounding state signiﬁcantly reduces state
requirements. Using a successor list of size 5, the average routing state for the three topologies is
67, 81, and 76 records respectively. X(cid:173)Vine requires orders of magnitude less state than Whanau [34].
Table 1. Topologies
Dataset
Nodes
Edges Mean
New Orleans Facebook
Friendship graph
New Orleans Facebook
Interaction graph
Anonymous
Interaction graph
Facebook
Degree
50 150
661 850
26.39
29 140
161 969
11.11
103 840
961 418
18.51
sirable both from a performance and a security standpoint.
If the few nodes with very large state become unavailable
due to churn, the network could get destabilized. Moreover,
if one of these nodes is malicious, it could easily intercept a
large number of lookups and drop them. To address this, we
enable the routing policy that bounds the number of paths
traversing nodes and links. Based on our analytic model in
Appendix A, we propose the following bound on the num-
ber of paths per link: bl = α · 2 · num successors · log(n),
where α is a small ﬁxed constant. The bound per link en-
sures that if a node has degree d, then its routing table size
will never exceed d · bl ∈ O(log n). We can see that the
routing state does not undergo an exponential increase as in
previous plots. Moreover, routing state increases with node
degrees, which is desirable. Based on these routing table
sizes, we can estimate the communication overhead of X-
Vine by computing the cost of sending heartbeat trafﬁc for
all records in the routing table. Considering the routing ta-
ble size to be 125 records, UDP ping size to be 40 bytes,
and a heartbeat interval of 1 s, the estimated mean commu-
nication overhead is only 4.8 KBps.
Comparison with Whanau [34]: Routing state in Whanau
depends on the number of objects stored in the DHT. Rout-
ing tables in Whanau are of size Θ(√no log no), where no
is the number of objects in the DHT. If there are too many
objects stored in the DHT, Whanau resorts to maintaining
information about all the nodes and edges in the social net-
work (increasing state/overhead to Θ(n)). If there are too
few objects in the DHT, Whanau resorts to ﬂooding to ﬁnd
objects [34]. We note that such properties make Whanau
unsuitable for many common applications. Even if we con-
sider the case where each node in the DHT stores only tens
of objects, the average routing table size in Whanau for the
103 840 node anonymous interaction graph is about 20 000
records—an increase of more than two orders of magnitude
as compared with X-Vine. If we consider a heartbeat in-
terval of 1 second in Whanau (in order to accurately main-
tain object states for common DHT applications), the re-
sulting communication overhead is about 800 KBps. This
difference increases further with an increase in the number
of objects in the DHT or the size of the network. For in-
stance, we scaled up our experiments to a larger 613 164
node anonymous interaction graph topology using a ma-
chine with 128 GB RAM, and found that the average rout-
ing state in X-Vine using a successor list size of 10 was only
195 records, as compared with more than 50 000 records in
Whanau. (Note that routing state in X-Vine is independent
of the number of objects in the DHT.)
False Positive Analysis: Next, we consider the impact of
link/node path bounds on honest node’s ability to join the
DHT. We found that most honest nodes were able to join
the DHT due to the fast mixing nature of honest social net-
works. In fact, for all our experimental scenarios, the false-
positive rate was less than 0.5%, which is comparable to the
state-of-the-art systems [21,68]. By tuning the parameter bl,
it is possible to trade off the false-positive rate for Sybil re-
silience: bl will reduce the false-positive rate at the cost of
increasing the number of Sybil identities in the system. For
the remainder of the paper, we shall use α = 1, β = 5.
Path Length Analysis: Table 2 depicts the mean lookup
path lengths for the real world datasets with varying suc-
cessor list sizes and varying redundancy parameter. We ﬁrst
observe that lookup performance improves with increasing
successor list sizes. For example, in the New Orleans inter-
action graph, the mean lookup path length decreases from
97.9 to 15.4 when the successor list size increases from 1 to
20 (using r = 1). Further improvements in performance can
be realized by performing redundant lookups as described
in Section 4 and caching the lookup with the smallest path
length. We can see that in the same dataset, mean lookup
path length decreases from 15.4 to 10.3 when the redun-
dancy parameter is increased from r = 1 to r = 5 (using
successor list of size 20). Further increases in redundancy
show diminishing returns. Observe that when the succes-
sor list size is at least 10, and the redundancy parameter is at
least 10, then the mean lookup path lengths for all datasets
are less than 15 hops. Increasing the successor list size to
20 (and keeping r = 10) reduces this value to less than 11.5
for all datasets.
Security under Sybil Attack: Recall that if the adversary
has g attack edges, then the number of trails between the
honest and the Sybil subgraph is bounded by g · bl (regard-
less of the attacker strategy). Our attack methodology is as
follows: we randomly select a set of compromised nodes
until the adversary has the desired number of attack edges.
The compromised nodes then launch a Sybil attack, and set
up trails between Sybil identities and their overlay neigh-
bors. If the trail set up request starting from a Sybil node
gets shortcutted back to the Sybil identities, the request is
backtracked. This ensures that the adversary uses only a
single attack edge per trail. Node identiﬁers of Sybil identi-
ties are chosen at random with the adversarial goal of inter-
cepting as many lookups as possible. All lookups traversing
compromised/Sybil nodes are considered unsuccessful.
Figure 6 plots the probability of a secure lookup as a
function of number of attack edges, redundancy parame-
ter, and size of successor list. We ﬁnd that the probabil-
ity of secure lookup increases as the redundancy param-
eter is increased. This is because as the number of re-
dundant lookups increases, there is a greater chance that
a lookup will traverse only honest nodes and return the
correct result. We also ﬁnd that the probability of secure
lookup also increases when the size of the successor list
increases. This is because increasing successor list size re-
duces the mean lookup path length, reducing the probability
that an adversary can intercept the lookup query. As long as
g ∈ o(n/(log n)), the probability of secure lookup can be
made arbitrarily high by increasing the redundancy param-