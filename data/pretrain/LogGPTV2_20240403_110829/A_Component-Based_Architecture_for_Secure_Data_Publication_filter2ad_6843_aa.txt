title:A Component-Based Architecture for Secure Data Publication
author:Piero A. Bonatti and
Ernesto Damiani and
Sabrina De Capitani di Vimercati and
Pierangela Samarati
A Component-based Architecture for Secure Data Publication
Piero A. Bonatti(cid:1) Ernesto Damiani(cid:1) Sabrina De Capitani di Vimercati(cid:2) Pierangela Samarati(cid:1)
(1) Dip. di Tecnologie dell’Informazione
(2) Dip. di Elettronica per l’Automazione
Universit`a degli Studi di Milano
Universit`a degli Studi di Brescia
Via Bramante 65, 2601 Crema - Italy
Via Branze 38, 25123 Brescia - Italy
(cid:1)bonatti,damiani,samarati(cid:2)@dti.unimi.it
PI:EMAIL
Abstract
We present an approach for controlling access to data
publishers in the framework of Web-based information
services. The paper presents a model for enforcing
access control regulations, an XML core schema and
namespace for expressing such regulations, and illus-
trates the architecture of Access Control Unit (ACU), an
autonomous software component based on the proposed
model. Besides “standard” authorizations, the ACU
supports authorizations based on user proﬁles and dy-
namic conditions whose outcome is determined by user
actions such as the acceptance of a written agreement
and/or payment.
1 Introduction
Many ﬁnancial, industrial, and banking operations
worldwide use the World Wide Web for distributing in-
formation in the form of structured or semi-structured
data, available for download and/or for remote analy-
sis and graphical representation. Such Web-based inter-
change of information is regarded as a key activity by
data producers in the private as well as in public sectors
(e.g., government agencies and research institutions). In
the past, each data producer made its own data avail-
able for external release. Today, innovative Web-based
information services are being developed where produc-
ers exploit the mediation of information brokers, called
data publishers, which use the Web to collect and dis-
tribute data from various data producers. For instance, a
data producer could make available a survey under the
condition that it must be accessible only for research
purposes or by academic institutions. Additional pro-
tection requirements could also be speciﬁed by the data
The work reported in this paper was partially supported by the
European Community within the Fifth (EC) Framework Programme
under contract IST-1999-11791 – FASTER project.
publisher (e.g., privacy or law regulations speciﬁc to the
country where it operates). This layered scenario poses
an entirely new set of challenges to access control sys-
tems. Some of the main requirements are discussed be-
low.
Interchangeable policy format Data producers need
to specify protection requirements on the data they
make available using a format both human- and
machine-readable, easy to inspect and interchange.
This format should be simple to complement and
check on the part of data publishers for being com-
pliant with externally deﬁned regulations; also, it
should be simple enough to be readily understood
by non-specialists.
Interactive enforcement The traditional access control
process operates in two phases:
an evaluation
phase evaluates the access policy and makes a de-
cision, and an enforcement phase applies the deci-
sion. In Web-based information services, enforcing
often requires more than just granting or denying
an action. Rather than providing a simple yes or
no decision, enforcement should provide a way of
interactively evaluate the satisfaction of access re-
strictions, possibly managing complex user interac-
tions such as the acceptance of written agreements
and/or on-line payment for each report. Web-based
systems should then guide users in acquiring the
permission to obtain the desired data/services. To
this end, the system should support conditions—
called dynamic—that can be made true at access
control time (e.g., by ﬁlling in a form or by signing
an agreement).
Metadata support Semi-structured metadata formats
are increasingly important for Web-based services,
and are at the basis of the ongoing Semantic Web
initiative of the World Wide Web Consortium
(W3C)
(http://www.w3.org/2001/sw).
While traditionally important for information dis-
covery and retrieval in a networked environment,
metadata can also be exploited to provide access
control by selectively releasing data based on
conditions on their metadata.
Scalability Finally, access control systems for Web-
based services must be scalable, as the availability
of on-line subscriptions means that user communi-
ties may grow without warning. To achieve scala-
bility, the access control enforcement functionality
must be cleanly separated by the storage and pub-
lishing systems and easily integrated in a variety of
server environments. Component-based software
architectures offer a well-understood solution to the
integration problem.
This change in paradigms and requirements has also
been noted by other researches and several approaches
have been proposed presenting access control mod-
els and systems with enriched functionalities. Among
this, [9] presenting a uniform framework for the spec-
iﬁcation of multiple access control policies, [8] focus-
ing on the protection of semistructured data sources in
the form of XML documents, [4, 15] proposing access
control based on digital certiﬁcates, [3] proposing an
algebra for deﬁning access control policies from au-
tonomous and independent components, [10] introduc-
ing provisional-based access control where granting of
requests may depend on the execution (by the system or
the user) or speciﬁc operations. All these proposals fo-
cus on speciﬁc aspects with which access control should
be enriched and present general solutions. In this pa-
per, we present a complete model, and related language,
that attempts to cover the need for enriched function-
alities within the context of Web-based data dissemina-
tion. The model has been conceived within the context
of the EU funded FASTER project, whose aim is the
development of a system for making information main-
tained at national archives selectively available to the ex-
ternal world. Gathered requirements and proposed so-
lutions have been therefore guided by the actual needs
of the project’ partners, which as we will see do reﬂect
the need of many similar institutions and scenarios. In
particular, our model supports access rules that allow
reference of properties of the requester or the data be-
ing accessed; this allows the convenient speciﬁcation of
regulations where the ability to access data depends on
characteristics that cannot be modeled (as traditionally
done) through user or data groups, possibly because of
their dynamic nature. Also, our model supports dynamic
conditions (such as agreement acceptance, or payment)
that can be brought to satisfaction at run time by inter-
acting with the user. The model is therefore not bound to
producing a yes/no decisions to access requests but can
handle more dynamic situations. Also, the model sup-
ports both necessary and sufﬁcient conditions for access
(recalling rules used in the paper world practice) in the
form of authorization and restrictions in the language.
Another noticeable aspect of our proposal, coupled with
the expressiveness discussed, is the simplicity of the ac-
cess control language. The language provides expres-
siveness and simplicity by adopting semistructured data
formats for information representation and by using few
reserved identiﬁers for referring to request parameters,
without the need of introducing and managing variables
in the language. Our system is based on a ﬂexible
model and language expressed via an XML Schema and
namespace (http://www.w3.org/XML/Schema),
in line with the ongoing standardization effort toward
XML-based languages for access control. 1 A prelimi-
nary version of our model appeared in [2]. In this paper,
we extend the model with the consideration of “dynamic
conditions” and present an XML-based language for ex-
pressing protection requirements. We also describe a
component-based approach toward the design and de-
velopment of an Access Control Unit (ACU) based on
the proposed model.
2 Elements of the access control model
The development of an access control model requires
the characterization of entities to be protected (autho-
rization objects), the entities against which access must
be controlled (authorization subjects), and the opera-
tions that subjects can request on objects (actions).
2.1 Objects: Datasets and metadata
In our model, authorization objects are both datasets
and metadata. Datasets can be any kind of data units
(e.g., tagged documents, reports, or tables) collected
from data publishers for distribution, and can be orga-
nized in abstractions deﬁning groups of datasets that can
be collectively referred to with a given name. Groups
may reﬂect
the ﬁle system organization in directo-
ries and/or orthogonal abstractions deﬁned by group-
ing datasets with common characteristics. Datasets and
groups thereof deﬁne a partial order that naturally in-
troduces a hierarchy [9]. Figure 1 illustrates an exam-
ple of dataset hierarchy DH, where for simplicity single
datasets are omitted and only the groups of datasets are
reported. The hierarchy, whose root Data groups all
datasets in the system, distinguishes between datasets
from national surveys and datasets from foreign surveys
effort
recently
brought
1This
to
a new Technical Committee
in the
(http://www.oasis.org) aimed at
dard XACML (eXtensible Access Control Markup Language).
the
of
framework of OASIS
the deﬁnition of a stan-
announcement
Data
(cid:1)?xml version=’1.0’?(cid:2)
(cid:1)codeBook(cid:2)
NationalSurvey
ForeignSurvey
Free_Datasets
Restricted_Datasets
DH
META(Data)
META(NationalSurvey)
META(ForeignSurvey)
META(Free_Datasets)
META(Restricted_Datasets)
MDH
Figure 1. An example of dataset (DH) and
metadata (MDH) hierarchies
and, within the latter, between datasets containing publi-
cally available information and datasets whose released
should be regulated.
Besides actual datasets, each data publisher possibly
maintains a collection of metadata. Metadata are usu-
ally not part of the dataset content; rather, they provide
additional information on datasets that can be provided
to users, and may be of help in searching for speciﬁc
data. For instance, metadata may report the name of the
statistical agency releasing a dataset and how and when
a dataset was obtained. Several standards have been
proposed for interoperable metadata interchange in the
digital libraries domain (e.g., Z39.50, Dublin core, and
RDF [6]). To make our approach generally applicable
we do not make any assumption on the metadata format.
In our model, metadata can be in the form of textual or
semistructured documents (e.g., XML [1] or DDI [12]).
No hierarchy is explicitly deﬁned on metadata. How-
ever, the dataset hierarchy implicitly deﬁnes a metadata
hierarchy MDH (see Figure 1). A bijective function
META() makes the association between a dataset (or a
group thereof) and its metadata (or the group of them).
For instance, given dataset d1 and group National-
Survey, function META(d1) returns the metadata as-
sociated with d1; function META(NationalSurvey)
returns the set of metadata documents associated with
the datasets in NationalSurvey. A metadata doc-
ument can then be referenced either through its identi-
ﬁer or, via function META, through the identiﬁer of the
dataset with which it is associated.
For metadata browsing as well as for the evaluation
of conditions that may determine whether or not a given
access to datasets can be allowed, it is useful to evaluate
the content of metadata. While for textual metadata,
we limit the granularity to the whole document, for
semistructured documents, we allow reference to ﬁner
grained content at the level of properties. In this way,
we can specify, for example, a protection requirement
(cid:1)docDscr DataID="DATASET01" link="http://.../"(cid:2)
(cid:1)citation(cid:2)
(cid:1)titlStmt(cid:2)
(cid:1)title(cid:2)The EU Referendum Study(cid:1)/title(cid:2)
(cid:1)/titlStmt(cid:2)
(cid:1)prodStmt(cid:2)
(cid:1)producer(cid:2)NSSDS(cid:1)/producer(cid:2)
(cid:1)prodDate(cid:2)10-06-2000(cid:1)/prodDate(cid:2)
(cid:1)prodDate(cid:2)05-09-2001(cid:1)/prodDate(cid:2)
(cid:1)prodPlac(cid:2)NSD Bergen(cid:1)/prodPlac(cid:2)
(cid:1)/prodStmt(cid:2)
(cid:1)/citation(cid:2)
(cid:1)docSrc DocSrcID="DOC003" link="http://.../"(cid:2)
(cid:1)citation(cid:2)
(cid:1)titlStmt(cid:2)
(cid:1)title(cid:2)ISS-Rapport nr. 45,(cid:3) (cid:3) (cid:3)(cid:1)/title(cid:2)
(cid:1)/titlStmt(cid:2)
(cid:1)distStmt(cid:2)
(cid:1)distrbtr abbr="NSSDS"(cid:2)
Norwegian Social Science Data Service
(cid:1)/distrbtr(cid:2)
(cid:1)depositr affiliation="ISS"(cid:2)
Department of Sociology and Political Science
(cid:1)/depositr(cid:2)
(cid:1)/distStmt(cid:2)
(cid:1)/citation(cid:2)
(cid:1)/docSrc(cid:2)
(cid:3) (cid:3) (cid:3) (cid:3) (cid:3) (cid:3)
(cid:1)/docDscr(cid:2)
(cid:1)/codeBook(cid:2)
Figure 2. An example of a portion of an
XML metadata document
stating that a subject can access all datasets produced in
the current year, where the production year is a property
speciﬁed in the metadata associated with datasets.
Properties (elements and attributes, in the XML termi-
nology) are referenced by means of path expressions
written, for example, with the XPath language [16].
Since semistructured documents are usually modeled
by means of tree structures [1], a path expression
 (cid:1)(cid:2) (cid:2)(cid:2) (cid:3) (cid:3) (cid:3) (cid:2)  on a document tree can be seen as a se-
quence of node labels   (cid:5) representing a path in the tree.
To illustrate, consider the portion of XML metadata doc-
ument associated with dataset DATASET01 illustrated
in Figure 2; it includes information about a compara-
tive study of European referendums. Path expression
META(DATASET01)/codebook/docDscr/citation/
titlStmt/title identiﬁes the title (“The EU Refer-
endum Study”) of the study with which the considered
metadata document is associated.
2.2 Actions
Both datasets and their metadata can be accessed by
remote subjects via different actions. Flexibly express-
ing and enforcing authorizations on such actions con-
stitute the main functional requirements for our system.
Flexibility is particularly important as actions supported
by a speciﬁc distribution service may of course vary, de-
pending on the nature of the service. Actions can be
grouped into classes. For instance, possible classes are
the following:
(cid:2) Browse metadata associated with datasets. With
the browse facility, users can navigate through the
metadata to choose the actual dataset they are inter-
ested in.
(cid:2) Analyze-on-line datasets. On-line analysis includes
a set of pre-deﬁned data analysis operations. Avail-
able operations may include graphic representation
and in general will vary depending on the kind of
dataset under consideration.
(cid:2) Download data from the server. Downloading al-
lows users to save whole datasets on their local ma-
chine in order to use off-line tools for data analysis.
Further abstractions can also be deﬁned on actions, spe-
cializing actions or grouping them in sets. For instance,
the three classes above can all be grouped in a set called
Access and thus referred to as one.