#define ELF32_R_INFO(s,t) (((s)=2.2 */
  Elf32_Section st_shndx;  /* Section index */
} Elf32_Sym;
```
需要注意的是 `.dynsym` 是运行时所需的，ELF 文件中 export/import 的符号信息全在这里。但是，`.symtab` 节中存储的信息是编译时的符号信息，它们在 `strip` 之后会被删除掉。
我们主要关注动态符号中的两个成员
-   st_name，该成员保存着动态符号在 .dynstr 表（动态字符串表）中的偏移。
-   st_value，如果这个符号被导出，这个符号保存着对应的虚拟地址。
动态符号与指向它的 Elf_Verdef 之间的关联性保存在 `.gnu.version` 节中。这个节是由 Elf_Verneed 结构体构成的数组。其中，每个表项对应动态符号表的一项。其实，这个结构体就只有一个域：那就是一个 16 位的整数，表示在 `.gnu.verion_r` 段中的下标。
除此之外，动态链接器使用 Elf_Rel 结构体成员 r_info 中的下标同时作为 .dynsym 段和 .gnu.version 段的下标。这样就可以一一对应到每一个符号到底是那个版本的了。 
### Misc version releated sections
ELF 文件不仅可以导入外部的符号，而且还可以导入指定版本的符号。例如，当我们可以从 GLIBC_2.2.5 中导入其中的一些标准库函数，比如 printf。其中，.gnu.version_r 保存了版本的定义，对应的结构体是 Elf_Verdef。
#### .gnu.version
该节与 .dynsym 中的符号信息一一对应，即两者的元素个数一样。.gnu.version 中每一个元素的类型是 `Elfxx_Half`，指定了对应符号的版本信息。`Elfxx_Half` 中有两个值是保留的
- 0，表示这个符号是本地的，对外不公开。下面的`__gmon_start__` 就是一个本地符号。
- 1，表示这个符号在当前这个目标文件中定义，并且是全局可以访问的。下面的 `_IO_stdin_used` 就是一个全局符号。
```assembly
LOAD:080482D8 ; ELF GNU Symbol Version Table
LOAD:080482D8                 dw 0
LOAD:080482DA                 dw 2                    ; setbuf@@GLIBC_2.0
LOAD:080482DC                 dw 2                    ; read@@GLIBC_2.0
LOAD:080482DE                 dw 0                    ; local  symbol: __gmon_start__
LOAD:080482E0                 dw 2                    ; strlen@@GLIBC_2.0
LOAD:080482E2                 dw 2                    ; __libc_start_main@@GLIBC_2.0
LOAD:080482E4                 dw 2                    ; write@@GLIBC_2.0
LOAD:080482E6                 dw 2                    ; stdin@@GLIBC_2.0
LOAD:080482E8                 dw 2                    ; stdout@@GLIBC_2.0
LOAD:080482EA                 dw 1                    ; global symbol: _IO_stdin_used
...
.rodata:0804866C                 public _IO_stdin_used
.rodata:0804866C _IO_stdin_used  db    1                 ; DATA XREF: LOAD:0804825C↑o
.rodata:0804866D                 db    0
.rodata:0804866E                 db    2
.rodata:0804866F                 db    0
.rodata:0804866F _rodata         ends
```
#### .gnu.version_d
Version definitions of symbols.
#### .gnu.version_r
Version references (version needs) of symbols.