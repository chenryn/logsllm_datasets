# 漏洞分析：CVE-2017-3731 - 截断的数据包导致OpenSSL拒绝服务

## 译文声明
本文为翻译文章，原文来源：mcafee.com  
原文地址：[https://securingtomorrow.mcafee.com/mcafee-labs/analyzing-cve-2017-3731-truncated-packets-can-cause-denial-service-openssl/?utm_source=twitter&utm_campaign=Labs#sf61253943](https://securingtomorrow.mcafee.com/mcafee-labs/analyzing-cve-2017-3731-truncated-packets-can-cause-denial-service-openssl/?utm_source=twitter&utm_campaign=Labs#sf61253943)  
译文仅供参考，具体内容及含义以原文为准。

翻译：[啦咔呢](http://bobao.360.cn/member/contribute?uid=79699134)  
稿费：100 RMB（欢迎投稿！）  
投稿方式：发送邮件至 linwei#360.cn 或登录网页版在线投稿

---

## 前言
OpenSSL 是一个广受欢迎的 SSL 开源库，被全球各地的各种软件和公司广泛使用。2017年1月，OpenSSL 发布了一个更新以修复多个漏洞。其中之一是 CVE-2017-3731，该漏洞可能导致程序崩溃从而引发拒绝服务。McAfee 实验室对这一漏洞进行了分析，以便为客户提供检测方法。

## 使用补丁差异来找出修改的地方
补丁对与各种加密算法相关的文件进行了一些修改。对于本报告，我们将检查 `e_chacha20_poly1305.c` 文件中的更改。以下是该文件的补丁内容：

```c
if (len < POLY1305_BLOCK_SIZE) {
    return 0;
}
len -= POLY1305_BLOCK_SIZE;
```

我们可以看到，添加了一个简单的步骤来检查变量 `len` 的值是否小于常量 `POLY1305_BLOCK_SIZE`。如果 `len` 小于 `POLY1305_BLOCK_SIZE`，则返回 0；否则，从 `len` 中减去 `POLY1305_BLOCK_SIZE`。

在 `poly1305.h` 文件中，`POLY1305_BLOCK_SIZE` 被定义为 16：

```c
#define POLY1305_BLOCK_SIZE 16
```

而 `len` 在 `e_chacha20_poly1305.c` 文件中定义为 `unsigned int len;`。因此，如果 `len` 小于 16，它将导致整数下溢，使得 `len` 的值变得非常大。当该值被使用时，可能会导致程序流程出现问题，因为 `len` 的值不正确。

## 进一步挖掘
在前面的代码片段中，`len` 的值被分配给 `actx->tls_payload_length`。然后调用 `chacha20_poly1305_cipher` 函数，在该函数内部，`actx->tls_payload_length` 被分配给变量 `plen`：

```c
plen = actx->tls_payload_length;
```

注意，变量 `plen` 将获得从先前 `len` 整数下溢导致的非常大的数值。我们可以进一步看到 `plen` 的值传递给 `poly1305_Update` 函数：

```c
poly1305_Update(&ctx, in, plen);
```

`Poly1305_Update` 函数调用 `Poly1305_blocks` 时将携带这个大值：

```c
while (len > 0) {
    U8TOU32(ctx.h, in);
    in += POLY1305_BLOCK_SIZE;
    len -= POLY1305_BLOCK_SIZE;
}
```

我们可以看到，变量 `len` 包含一个非常大的整数值，但它被用作 `while` 循环中的计数器。每次循环迭代中，`in` 指针会加上 `POLY1305_BLOCK_SIZE`。由于 `len` 的值非常大，最终 `in` 将指向不可读的内存区域。尝试读取这些内存会导致访问异常错误，从而导致 OpenSSL 崩溃。

## 从网络中利用漏洞
要利用此漏洞，客户端需要使用 `chacha20_poly1305` 加密套件（或另一个受影响的加密套件），并发送一个记录长度小于 16 字节的加密握手消息。这将导致整数下溢，从而使 OpenSSL 崩溃。以下是在运行中的 OpenSSL 和 Gnu Debugger 中观察到的情况：

![OpenSSL Crash](image_url_here)

## 结论
由于 OpenSSL 的广泛应用，它可能成为拒绝服务攻击的目标。这种类型的漏洞可能影响许多使用该组件的应用程序。我们建议用户将其使用的 OpenSSL 安装更新到最新版本。

McAfee 网络安全平台的客户已经通过签名 ID：0x45c09400 受到了针对此漏洞的保护。