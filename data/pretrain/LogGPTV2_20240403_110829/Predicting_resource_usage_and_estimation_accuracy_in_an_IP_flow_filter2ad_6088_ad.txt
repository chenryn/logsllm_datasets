### 4.2.6 Application and Examples

The bound in Theorem 1(iii) is independent of the specific distribution details of the flow sizes. This independence allows us to construct simple bounds on estimator variance based on the average properties of flows. We have tabulated the bound for the standard error \( \text{Var} \left( \frac{\hat{X}}{X} \right) \) in Table 2 for the case where there is no report loss (i.e., \( q = 1 \)). For comparison, we also include a version of the same bound for \( q \neq 1 \). In this context, the placement of a single packet has minimal impact on subsequent results.

Another model for the distribution of packets, as considered in [8], assumes that packets in the original flow are evenly spaced with a mean interpacket separation and are sampled periodically with a random initial phase. Our experiments show that the model presented in this paper is, in most cases, more accurate in predicting the average rate of production of measured flows.

### 5.3 Rate of Packet-Sampled Flow Records

We now estimate the mean number of measured flows produced from an original flow under sampling, considering only interpacket timeout as the flow termination mechanism. We ignore protocol-based termination, such as observing a TCP packet with the FIN flag set, because only 1 in \( N \) packets will be sampled on average, making such terminations increasingly rare as \( N \) increases. We also disregard flow age as a termination criterion, but note that the ages of both unsampled and sampled flows do not exceed the allowed maximum. Finally, we do not model termination for cache memory management.

**Theorem 2.** Let \( f(n, t; N, T) \) denote the average number of measured flows produced from a single original flow comprising \( n \) packets randomly distributed over an interval of duration \( t \), sampled independently with probability \( \frac{1}{N} \), with the measured flows having an interpacket timeout \( T \).

\[
f(n, t; N, T) = 1 + \frac{n-1}{N} \left( \frac{\kappa(n-1) + 1}{\kappa - 1} - 1 \right),
\]
where \( \kappa = \max\{0, 1 - \frac{T}{t}\} \).

Theorem 2 can be used to estimate the rate of production of sampled NetFlow records in two settings:

1. **Collected Unsampled Flow Records:**
   Here, we estimate the average number of sampled flows produced from a given set of unsampled flows. Consider \( m \) flows collected over an interval of duration \( \tau \), where flow \( i \) comprises \( n_i \) packets and has a duration \( t_i \). The total rate of sampled NetFlow records is estimated as:
   \[
   R = \frac{1}{\tau} \sum_{i=1}^{m} f(n_i, t_i; N, T).
   \]

2. **Modeled Distribution:**
   The results can also be used with a model of flow length distributions. Let \( r \) be the arrival rate of original flows, and let \( p(n, t) \) denote the model probability that a given flow comprises \( n \) packets distributed over a duration \( t \). The total rate of sampled NetFlow records is estimated as:
   \[
   R = r \sum_{n, t} p(n, t) f(n, t; N, T).
   \]
   Note that (11) can be seen as arising from averaging (10) over a distribution of sample paths. Since (10) is a sum over flows, it is not affected by correlations between flows, hence only the marginal distribution \( p(n, t) \) is relevant.

In a separate study, we compared the predictions of (10) with values obtained from packet-level traces subject to simulated packet sampling and flow formation. In all cases examined, the estimation of the rate of packet-sampled NetFlow records was accurate to within 10%, and often closer, over a wide range of sampling rates and flow interpacket timeouts.

### 5.4 Applications

We see two applications of the above estimates (10) and (11) for the mean rate of production of flow records:

1. **Estimation from Unsampled Flows:**
   Unsampled flow records are used to predict the rate at which packet-sampled flow records would be produced. In this case, \( N \) is the sampling period for 1 in \( N \) packet sampling.

2. **Estimation from Sampled Flows for Decreased Sampling Rate:**
   Sampled flow records collected with 1 in \( M \) sampling are used to predict the rate of production if records were to be collected with 1 in \( NM \) sampling for \( N > 1 \). In this case, \( N \) is the factor by which the sampling period is to be increased.

### 6. Predicting the Production Rate of Smart-Sampled Flow Records

In this section, we show how to estimate the resources used by smart-sampled flow records at the collector. We focus on two cases:

1. **Estimating the Output Rate of Flow Records:**
   This enables dimensioning of the storage and/or transmission resources required to accommodate the sampled records.

2. **Further Aggregation of Smart-Sampled Flow Records:**
   We estimate the number of aggregate flows that result. In applications, we expect aggregation to be performed over successive time windows, enabling dimensioning of memory required for the aggregation table.

We perform these estimates in two ways. In Section 6.1, we derive an upper bound based on aggregate characteristics of the incoming stream of flow records. In Section 6.2, we obtain an estimate based on the detailed statistics of measured flows.

#### 6.1 Smart Sampling Resources: Upper Bound

In the appendix, we prove the following:

**Theorem 3.** Consider a stream of flow records arriving at an average rate \( R \), representing a data rate \( B \). When this stream is smart-sampled with threshold \( z \), the expected rate \( R_s \) at which flow records are produced is bounded above as:
\[
R_s \leq \min\{R, \frac{B}{z}\}.
\]

Theorem 3 has two direct applications for the TAP architecture: the output load of the smart sampler and storage resources for aggregation. In both cases, \( B \) and \( z \) are the same: the data rate of the traffic being measured and the sampling threshold, respectively. The rate of production \( R \) of flow records from routers is determined using the methods of Section 5.

##### 6.1.1 Bounding Output Rate of the Smart Sampler

\( R \) is the average rate at which flow records arrive at the smart sampler, and \( R_s \) bounds the average rate of production of smart-sampled flow records.

##### 6.1.2 Bounding Resources for Aggregation

In TAP, the smart-sampled raw flows are aggregated over a time interval \( \tau \) (e.g., one hour). The key used for aggregation may be just the raw flow key or a coarser key, such as a BGP routing prefix. We want to estimate the number of aggregate flows generated over the interval \( \tau \). Thus, we determine the average rate \( R_{s, \text{agg}} \) at which unique keys (at the desired aggregation level) are presented by flows that survive smart sampling during the period of length \( \tau \).

Clearly, \( R_{s, \text{agg}} \) is bounded above by \( R_s \) (consider the case that all keys are unique). It must also be bounded above by the rate \( R_{\text{agg}} \), the average rate over the interval at which unique aggregate keys become present in the NetFlow record prior to smart sampling. Since \( R_{\text{agg}} \leq R \),
\[
R_{s, \text{agg}} \leq \min\{R_{\text{agg}}, \frac{B}{z}\}.
\]

#### 6.2 Smart Sampling Resources: Estimate

We now obtain a more detailed estimate to determine how tight the bound of Theorem 3 is. Ideally, such an estimate would proceed by finding the distribution of the number and packet and byte lengths of the measured flows, then averaging the effect of smart sampling over this distribution. However, this approach is computationally formidable; we opt instead for a simpler approach.

Consider raw flows labeled by \( i \) having packet, duration, and bytes \((n_i, t_i, b_i)\), collected over a period of duration \( \tau \). Packet-sampled NetFlow yields on average \( f(n_i, t_i; N, T) \) measured flows. We apply these to the two examples for which bounds were obtained in Section 6.1.

##### 6.2.1 Estimating Output Rate of the Smart Sampler

Assume that \( b \) represented bytes are allocated evenly amongst the average number \( f_i = f(n_i, t_i; N, T) \) of flows. The expected number of smart-sampled flows that would arise from the original flow is \( f_i \cdot p_z(b_i / f_i) = \min\{f_i, b_i / z\} \). Thus, we estimate the rate of production of smart-sampled flow records by:
\[
R_s = \sum_{i} \min\{f_i, b_i / z\}.
\]