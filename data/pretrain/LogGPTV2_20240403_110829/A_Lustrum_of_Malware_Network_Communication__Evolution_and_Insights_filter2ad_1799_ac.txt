05/06
28.5 K
795 K
07/12
-
17%
TABLE III: Top 10 malware families by number of samples
in our dataset. The FSeen column contains the ﬁrst seen date
of a family by VirusTotal.
TABLE IV: Top 10 malware families by number of ﬁltered
e2LDs that resolved to a valid IP address. The FSeen column
contains the ﬁrst seen date of a family by VirusTotal.
source, for which they could not discard source bias. Other
work has also hinted on the prevalence of PUP. Thomas et
al. [72] showed that ad-injectors affect 5% of unique daily IP
addresses accessing Google. They also measured that Google’s
Safe Browsing generates three times as many detections for
PUP as for malware [73].
AVClass identiﬁes 17.7 K non-singleton families. Table III
presents the top 10 families, which comprise 49% of the sam-
ples and are largely dominated by PUP. The largest malware
families are vobfus (a Visual Basic worm [47]) and virut
(a virus that appends its payload to other executable ﬁles [70]).
Both families have self-replicating behavior that increases their
polymorphism. The PUP families include adware that modi-
ﬁes advertisements or searches in the browser (multiplug,
loadmoney, hotbar) [72] and a number of pay-per-install
(PPI) programs (softpulse, installerex, firseria,
outbrowse, installcore) [37], [73].
The 3,834 families with more than 10 samples comprise
over 90% of all samples. Of those families, 3,165 are malware
and 669 PUP. While there are more malware families, the PUP
families are larger with an average of 16 K samples per family
compared to 3.5 K for malware families. This illustrates the
highly polymorphic nature of PUP, which is not due to self-
replication, but likely due to evasion of AV engines [38].
e2LD classiﬁcation. We create a mapping from e2LD to the
most likely family the e2LD belongs to. For this, we ﬁrst create
a mapping from e2LD to the number of samples of each family
that have resolved that e2LD. Then, for e2LDs that have been
resolved by at least 10 samples, we assign each e2LD to the
family with most samples resolving it. e2LDs with less than
10 samples resolving them are left unclassiﬁed.
Table IV presents the top 10 families ranked by the number
of resolved e2LDs. Compared to the ranking by samples,
this ranking is dominated by malware (8/10 families), which
may indicate that PUP families have a more stable domain
infrastructure and malware uses higher levels of domain poly-
morphism. The e2LDs from these 10 families correspond to
31% of all ﬁltered e2LDs and Virut alone is responsible for
12% of them. Virut’s domain infrastructure comprises a few
dozens stable domains in the .com and .pl (Poland) TLDs,
as well as a DGA. We study DGAs in Section VII. The popular
zbot/zeus botnet is ranked third in Table IV, likely due to
many different operators using the botkit.
By combining the e2LD to family mapping and the family
to PUP/malware mapping, we can mark e2LDs as belong-
ing to malware or PUP. This classiﬁcation identiﬁes 36.5 K
malware and 9.1 K PUP e2LDs. The remaining e2LDs are
left unclassiﬁed due to less than 10 samples resolving them.
This classiﬁcation enables to study separately and compare
properties of the PUP and malware network infrastructure
(Section V-B).
V. MALWARE DOMAIN ANALYSIS
Malware often engages in various network communications
in an attempt to exﬁltrate data, communicate with a command
and control (C&C) server, or download additional illicit soft-
ware. This communication often relies on DNS rather than
static IP addresses to provide resiliency against IP blacklisting
and ensure an overall agility for the malicious operation.
Therefore, we study the domains queried by malware
to better understand the temporal DNS properties of their
network communications. In Section V-A, we evaluate domain
names queried by malware during dynamic malware analysis.
Our experiments show that malware frequently uses domain
polymorphism that signiﬁcantly limits the network policy and
detection abilities of DNS blacklists. Then, in Section V-B,
we correlate those domain names with a large passive DNS
dataset to identify whether we ﬁrst collect the malware sample
or observe passive DNS activity for malware domains on the
network. We ﬁnd that a signiﬁcant percentage of malware
domains can be seen in passive DNS several weeks, in many
cases even months, before the actual malware sample was
dynamically analyzed by the security community.
A. Dynamic Malware Analysis
We start by analyzing domains collected from dynamic
malware analysis. As noted in Section II, we have a dataset
of 26,853,732 malware samples collected since January 2011.
From these samples, we collected 11,532,653 fully qualiﬁed
domain names under 6,850,793 distinct effective second level
domains. After extensive ﬁltering, detailed in Section III,
we reduced this to 2,085,484 fully qualiﬁed domain names
793
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:25:08 UTC from IEEE Xplore.  Restrictions apply. 
under 327,514 effective second level domains. In the following
sections we study various properties of this set of domains.
1) Domain Polymorphism: Once a sample has been an-
alyzed, the domain names used to facilitate malicious com-
munication can be added to a DNS blacklist. Obviously, the
effectiveness of these blacklists depends on how often different
malware reuse the same domain names.
The analysis of domains resolved by samples in our dataset
shows that most malware samples appear to use different do-
mains over time, as shown in Figure 3. In particular, Figure 3a
shows that most MD5s resolve less than 10 unique e2LDs.
Even more interesting, most of these e2LDs were seen only a
single time across our ﬁve year collection period (Figure 3d),
which means that they were only queried by a single malware
sample. This is an interesting result because it suggests that
most domains are used only once by a single malware sample
in our dataset. If the domain is embedded in the binary and
not downloaded from an external source, this can also cause
samples in the same family to have different MD5s, even
in absence of other polymorphism techniques. Furthermore,
Figure 3b suggests that network evasion is being done pre-
dominantly on the e2LD since the majority of e2LDs have
few child FQDNs. Further reinforcing this result, Figure 3e
shows that FQDNs share an almost identical distribution to
e2LDs.
These results suggest that blacklisting malware domains
observed during dynamic analysis does little to prevent future
communication from newly discovered malware samples. This
result does not diminish the usefulness of collecting malware
samples or performing malware analysis, but simply underline
the limitation and reactive nature of relying on malware
samples DNS queries for threat mitigation.
2) Dynamic DNS: Dynamic DNS allows nameservers to be
automatically updated with frequently changing information.
For example, users with dynamically assigned IP addresses
commonly use dynamic DNS as a way of accessing their
devices through an easy to remember domain name, which
is updated as their IP address changes. There are numer-
ous publicly available services that provide this functionality
(e.g., [14], [16]), and many of these services allow users to
select a subdomain under a domain owned by the dynamic
DNS provider, eliminating the need for the user to register a
new domain name.
Due to its ability to provide rapid updates, dynamic DNS
is also abused by malware authors to point domains at C&C
servers or infected hosts. Furthermore, by using a domain
provided by the dynamic DNS provider, the abuse cannot be
blocked at the zone level without also blocking other legitimate
users of the service. In fact, this has caused signiﬁcant prob-
lems for past remediation efforts [3]. Additionally, Previous
work [29] has shown that dynamic DNS domains are blocked
at a higher rate (0.2%) than for all other web trafﬁc (0.001%)
as measured by data collected from Cisco Cloud Web Security
(CWS). This suggests that there is a higher incidence of abuse
for dynamic DNS domains. Unfortunately, no information was
given about the scope or observation period of the data used to
arrive at these numbers. In Section V-A2, we used our dataset
spanning ﬁve years and 26.8M malware samples to perform
a similar analysis. While we arrived at a similar conclusion
that malware frequently makes use of dynamic DNS, our
list of most frequently used dynamic DNS domains differed
substantially this previous work. Since the popular dynamic
DNS domains referenced in the previous work were a subset
of those used in our study, this may indicate that the popularity
of dynamic DNS domains for abuse varies over time.
Therefore, we decided to analyze which dynamic DNS
providers are most frequently used by malware. In total,
we found 718 known dynamic DNS e2LDs in our dataset
from a list of dynamic DNS domains gathered from two
public sources [13], [15]. Figure 4 reports the top 100 of
these, sorted by the number of malware samples querying
them. The most popular dynamic DNS domain, dnsd.me
(owned by the dynamic DNS provider DNSdynamic [1]),
was queried by 216,221 unique MD5s . This service is not
only free, but it also offers unlimited registrations and an
API for account management—making it very attractive for
malware authors. Including dnsd.me, the top 50 dynamic
DNS domains each have at least a thousand distinct malware
samples that query them, and on average each of those domains
has approximately 366 subdomains under it. In fact, we see
that
these top dynamic DNS domains account for 19,766
FQDNs. When looking at all 718 dynamic DNS domains,
we see that they are queried by 8,675,449 distinct malware
samples, which represents approximately 32% of all malware
samples with DNS queries. Furthermore, these 718 domains
account for 51,350 FQDNs. Thus, unlike most of the domains
we discussed in Section V-A1, dynamic DNS domains are
commonly used across many malware samples and evasion
is performed on the child label of the domain.
3) Content Delivery Networks: Content Delivery Networks
(CDNs) are frequently used to serve content from multiple,
geographically distributed, data centers to provide increased
performance and availability. By taking the client location into
account, CDN providers are able to serve up content from
the nearest data center, improving network performance. Most
providers are still able to offer performance beneﬁts even when
location information is unavailable due to faster connections
and high-end data centers. Additionally, serving content from
multiple data centers helps obviate content outages by provid-
ing network redundancy. It is no surprise, given their beneﬁts,
that CDNs are widely used on the Internet.
In this section, we study how malware uses CDNs
by studying domains collected from dynamic malware
analysis. Figure 5 shows a plot of all CDN domains,
sorted by how many unique malware samples queried
them in our dataset. The ﬁrst notable feature of this plot
is the discrepancy between the most and least popular
CDNs. The top ﬁve most queried CDN domains include
akamai.net, edgesuite.net, cloudfront.net,
netdna-cdn.com, and akadns.net. This list includes
some of the largest CDNs and is not dissimilar from what a
benign network application might be seen querying. Another
interesting insight from Figure 5 is the number of malware
samples using CDNs. The akamai.net domain alone is
queried by 2,183,352 distinct malware samples and has 1,492
unique child labels under it. The large number of child labels
combined with potentially benign usage allows malicious
content hosted in a CDN to effectively hide in plain site.
794
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:25:08 UTC from IEEE Xplore.  Restrictions apply. 
(a) Number of e2LDs per MD5
(b) Number of FQDN per e2LD
(c) Number of IPs per e2LD
(d) Number of Days Seen per e2LD
(e) Number of MD5s per FQDN
(f) Number of Days Seen per FQDN
Fig. 3: Shows histograms of MD5 network traces broken down by various components.
Fig. 4: Top 100 most popular Dynamic DNS domains queried by malware samples.
B. Passive DNS and Blacklists Analysis
analysis of public blacklists for early detection systems.
In the previous sections, we analyzed the domains collected
from network traces observed during dynamic analysis. In
this section, we correlate these domains with three other data
sources: (1) a passive DNS dataset provided by a large ISP in
the United States, (2) a number of public DNS based blacklists,
and (3) a set of domain expiration events. This allows us to
study the lag between when a domain is discovered through
dynamic malware analysis, or listed on a blacklist, and when
it is ﬁrst resolved in passive DNS. This allows us to better
understand the implications of relying on dynamic malware
1) First Appearance: We start our analysis by evaluating
efﬁcacy of public blacklists at identifying malware domains.
This provides an interesting perspective because domains on
these lists have already been ﬂagged as abusive by manual
experts or dedicated services. The result of this analysis is
plotted in Figure 6a, separated by the type of sample. As we
explained in Section IV, we classify domains in our malware
analysis traces as belonging to a malware family, PUP, or
an unclassiﬁed category—which comprises e2LDs resolved
by less than 10 samples. This separation allow us to provide
795
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:25:08 UTC from IEEE Xplore.  Restrictions apply. 
Fig. 5: Complete list of all known CDN domains queried by malware samples.
(a) PBL
(b) Passive DNS
(c) Expired
Fig. 6: Time difference between when a domain was ﬁrst seen in passive DNS, public blacklists, or an expired domain list rather
than through dynamic malware analysis.
insights into potential differences between these three classes
of malicious software.
The ﬁgure shows that many domains were added to public
blacklists only after we observed them in dynamic malware
analysis traces. In particular, only 30% of the entries were
added to blacklists before the domain was observed in our
dynamic analysis dataset, while 20% of them were reported
with a delay of over 500 days. This result suggests that such
delays could be largely reduced by relying on malware analysis
to populate domains blacklists—possibly after applying a
cleaning methodology like the one we described in Section III.
While it may seem reasonable to attribute this delay to the
selection of blacklists used in this study, this result is consistent
with previous work by K¨uhrer et al [39] where domains were
seen in passive DNS on average 384 days before appearing on
a blacklist. Therefore, it is unlikely that the addition of other
blacklists would profoundly affect this result. Additionally,
reputation systems [18], [24] that rely on passive DNS have
also demonstrated the ability to identify new threats more
quickly than public blacklists. Furthermore, the observed delay
between appearing in passive DNS and on public blacklists
also lends credence to the idea of proactively detecting and
blocking abuse at the time of domain registration as proposed
by Hao et al. [32].
Next, we compare the date when we ﬁrst observed a
malware domain resolve in passive DNS with the date when
the same domain was ﬁrst observed in a dynamic malware
analysis trace. By computing the difference between these two
dates, we can determine how quickly new malware threats are
discovered and analyzed by the security community. Figure 6b
shows whether a malware domain was ﬁrst seen in passive
DNS or in a network trace derived by the dynamic analysis of
a malware sample. Points less than zero on the x-axis indicate
that a domain was ﬁrst seen in passive DNS, and points greater
than zero mean that the malware discovery occurred before the
ﬁrst observed network resolution in passive DNS.
The ﬁgure shows that the PUP-related domains are active
an average of 192 days before we get to dynamically analyze
the corresponding samples. This may be expected, as PUP
relies on infrastructure that is more stable and long-running.
However, we can see that popular malware families also
follow a similar but less extreme pattern. This result is more
surprising because for most of these domains the difference
is very signiﬁcant—with discovery delays reaching 623 days
on average. Lastly, the domain names associated with the
unclassiﬁed category follow the most interesting distribution.
796
Authorized licensed use limited to: IEEE Xplore. Downloaded on March 18,2021 at 12:25:08 UTC from IEEE Xplore.  Restrictions apply. 
(a) PUP
(b) Malware
(c) Unclassiﬁed
Fig. 7: Joint distribution of domain lifetime and resolution frequency observed in passive DNS for PUP, Malware, and Unclassiﬁed
domains.
While many appear ﬁrst in the passive DNS traces (left side of
the Figure 6b), this category completely dominates the right tail
of the graph—representing domains that were seen in passive
DNS only months after we observed them in our sandboxes.
Overall, by combining the three classes together, we dis-
covered that 302,953 malware domains were active at least
two weeks—in some cases many months—before the corre-
sponding malware samples were analyzed. Therefore, while
we previously showed that dynamic analysis systems could be
used to improve current blacklists, our results also show that
blacklists built from dynamic malware analysis will still be
unaware of potential threats for several weeks or even months.
The surprising nature of this result prompted us to perform
additional analysis. Thus, we used our dataset of historic
domain expirations to verify that a given domain was not
used in the wild before expiring and being re-registered for
malicious purposes. Figure 6c shows a similar pattern as
the one in Figure 6a. The large peak around zero is likely
a result of changes made to the domain infrastructure for
unpopular or unused expiring domains. Such changes would
likely result in DNS trafﬁc to a parked or suspended page
during the registrar’s expiration grace period. Despite our
extensive ﬁltering efforts, the left tail in the graph remains
signiﬁcant. This can be partially explained by malware relying
on benign infrastructure, such as dynamic DNS and CDN
providers already mentioned in Section V-A. Another possible
explanation is that the long tail is an artifact of a long setup
phase for malware before it is released into the wild. During
this phase, malware authors may age the domain and point
it to benign infrastructure to build up positive reputation to
help evade detection later. However, in the case of expired
domains, this step is unnecessary because the domain will
inherit the residual trust associated with the domain [43]—
eliminating the need for a long aging phase. As shown in
Figure 6c, we still see a long delay between last expiration
of a domain and ﬁrst discovery of an associated malware
sample. Thus, one explanation could be that there is a long
delay between a domain expiration and re-registration. In fact,
this very behavior was seen in a study of spam related domain
names by Hao et al. [33]. Their research showed that many
registrations came hundreds of days after expiration, but abuse
was observed less than three months after re-registration in
most cases. Since we removed spam related malware samples
in our extensive ﬁltering step, this could suggest that the same