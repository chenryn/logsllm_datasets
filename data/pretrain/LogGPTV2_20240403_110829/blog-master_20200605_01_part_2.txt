 FinishedSerializableTransactions    | 146097664 |        16 |            128  
 XLOG Ctl                            |     53504 |   4208272 |        4208384  
 Shared MultiXact State              |   5392640 |      1028 |           1152  
 Proc Header                         | 146231552 |       104 |            128  
 Backend Client Host Name Buffer     | 146444672 |      8256 |           8320  
 ReplicationSlot Ctl                 | 147067392 |      2400 |           2432  
 CommitTs                            |   4791424 |    133568 |         133632  
 KnownAssignedXids                   | 146341888 |     31720 |          31744  
 Prepared Transaction Table          | 146585088 |        16 |            128  
 BTree Vacuum State                  | 147074688 |      1476 |           1536  
 Checkpoint BufferIds                | 141184384 |    327680 |         327680  
 Wal Receiver Ctl                    | 147071744 |      2248 |           2304  
 PREDICATELOCKTARGET hash            | 143835392 |      2904 |           2944  
 Backend Status Array                | 146381568 |     54696 |          54784  
 KnownAssignedXidsValid              | 146373632 |      7930 |           7936  
 Shared Buffer Lookup Table          | 141512064 |      2904 |           2944  
 CommitTs shared                     |   4925056 |        32 |            128  
 Backend Application Name Buffer     | 146436352 |      8256 |           8320  
 ProcSignal                          | 146660352 |      8264 |           8320  
 Logical Replication Launcher Data   | 147074048 |       424 |            512  
 MultiXactMember                     |   5259008 |    133568 |         133632  
 Buffer Blocks                       |   6442368 | 134217728 |      134217728  
 Proc Array                          | 146341248 |       528 |            640  
 OldSnapshotControlData              | 147074560 |        68 |            128  
 PMSignalState                       | 146659328 |      1020 |           1024  
 PREDICATELOCK hash                  | 144280704 |      2904 |           2944  
 PredXactList                        | 145541120 |        88 |            128  
 Notify                              | 147079552 |     66816 |          66816  
 Fast Path Strong Relation Lock Data | 143831168 |      4100 |           4224  
 RWConflictPool                      | 145804672 |        24 |            128  
 Xact                                |   4262272 |    529152 |         529152  
 Buffer Strategy Status              | 142440704 |        28 |            128  
 Serial                              | 146097792 |    133568 |         133632  
 SerialControlData                   | 146231424 |        12 |            128  
 shmInvalBuffer                      | 146589824 |     69464 |          69504  
 Subtrans                            |   4925184 |    267008 |         267008  
 Sync Scan Locations List            | 147076224 |       656 |            768  
 Control File                        |   4261888 |       296 |            384  
 ReplicationOriginState              | 147069824 |       568 |            640  
 SERIALIZABLEXID hash                | 145746304 |      2904 |           2944  
 Backend Activity Buffer             | 146452992 |    132096 |         132096  
 Background Worker Data              | 146585216 |      4496 |           4608  
 MultiXactOffset                     |   5192192 |     66816 |          66816  
 LOCK hash                           | 142440832 |      2904 |           2944  
 Checkpointer Data                   | 146668672 |    393280 |         393344  
                          |           |   4855424 |        4855424  
                                     | 147275392 |   1794432 |        1794432  
(53 rows)  
```  
#### 17  
Create pg_stat_slru system view to monitor internal SLRU caches (Tomas Vondra)  
```  
postgres=# select * from pg_stat_slru;  
      name       | blks_zeroed | blks_hit | blks_read | blks_written | blks_exists | flushes | truncates |         stats_reset            
-----------------+-------------+----------+-----------+--------------+-------------+---------+-----------+------------------------------  
 CommitTs        |           0 |        0 |         0 |            0 |           0 |       0 |         0 | 2020-05-28 17:24:53.03567+08  
 MultiXactMember |           0 |        0 |         0 |            0 |           0 |       0 |         0 | 2020-05-28 17:24:53.03567+08  
 MultiXactOffset |           0 |        0 |         0 |            0 |           0 |       0 |         0 | 2020-05-28 17:24:53.03567+08  
 Notify          |           0 |        0 |         0 |            0 |           0 |       0 |         0 | 2020-05-28 17:24:53.03567+08  
 Serial          |           0 |        0 |         0 |            0 |           0 |       0 |         0 | 2020-05-28 17:24:53.03567+08  
 Subtrans        |           0 |        0 |         0 |            0 |           0 |       0 |         0 | 2020-05-28 17:24:53.03567+08  
 Xact            |           0 |      126 |         0 |            0 |           0 |       0 |         0 | 2020-05-28 17:24:53.03567+08  
 other           |           0 |        0 |         0 |            0 |           0 |       0 |         0 | 2020-05-28 17:24:53.03567+08  
(8 rows)  
```  
#### 18  
Allow streaming replication configuration settings to be changed by reload (Sergei Kornilov)  
Previously, a server restart was required to change primary_conninfo and primary_slot_name.  
不需要重启standby , 修改上游连接和slot.  
#### 19  
Allow replication slot storage to be limited by max_slot_wal_keep_size (Kyotaro Horiguchi)  
Replication slots that exceed this value are invalidated.  
限制slot最大保留wal 文件, 很多用户会忘记删除僵尸或不用的slot, 导致wal堆积.   
#### 20  
Allow control over how much memory is used by logical decoding before it is spilled to disk (Tomas Vondra, Dilip Kumar, Amit Kapila)  
This is controlled by logical_decoding_work_mem.  
逻辑decode内存控制   
#### 21  
Allow WAL recovery to continue even if invalid pages are referenced (Fujii Masao)  
This is enabled using ignore_invalid_pages.  
recovery 异常控制开关  
#### 22  
Allow VACUUM to process indexes in parallel (Masahiko Sawada, Amit Kapila)  
The new PARALLEL option controls this.  
单个table有多个索引时, 可以并行vacuum索引    
#### 23  
Allow FETCH FIRST to use WITH TIES to return any additional rows that match the last result row (Surafel Temesgen)  
https://github.com/digoal/blog/blob/master/202005/20200528_01.md  
帮派 limit.   
#### 24  
Add polymorphic data types for use by functions requiring compatible arguments (Pavel Stehule)  
The new data types are anycompatible, anycompatiblearray, anycompatiblenonarray, and anycompatiblerange.  
Add SQL data type xid8 to expose FullTransactionId (Thomas Munro)  
The xid data type is only four bytes so does not show the transaction epoch.  
#### 25  
Allow ROW values values to have their members extracted with suffix notation (Tom Lane)  
For example, (ROW(4, 5.0)).f1 returns 4.   
可以少定义一些type, 例如在cte 递归中使用row返回单列(sub query约束), 可以引用row内部字段了.   
#### 26  
Add function gen_random_uuid() to generate version 4 UUIDs (Peter Eisentraut)  
Previously UUID generation functions were only available via external modules uuid-ossp and pgcrypto.  
使用uuid函数, 终于不需要安装 uuid-ossp 插件了  
#### 27  
Change the default minimum TLS version from 1.0 to 1.2 (Peter Eisentraut)  
This is controlled by ssl_min_protocol_version.  
安全  
Add libpq connection parameters to control the min/max TLS version (Daniel Gustafsson)  
The settings are ssl_min_protocol_version and ssl_max_protocol_version.  
安全  
https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=ff8ca5fadd819155c82bd16fcc6b7231af649cf8  
#### 28  
Allow pgbench to partition its 'accounts' table (Fabien Coelho)  
This allows performance testing of partitioning.  
Allow pgbench to generate its data server-side, rather than client side (Fabien Coelho)  
服务端采用generate_series写入大量数据. 不需要网络传输, 特别适合网络不好的测试环境.  
#### 29  
Generate backup manifests for base backups, and verify them (Robert Haas)  
A new tool pg_verifybackup can verify backups.  
检测备份是否有效.      
#### 30  
Have pg_basebackup estimate the total backup size by default (Fujii Masao)  
This computation allows pg_stat_progress_analyze to show progress, and can be disabled by using the --no-estimate-size option. Previously, this computation happened only if --progress was used.  
#### 31  
Allow reindexdb to operate in parallel (Julien Rouhaud)  
Parallel mode is enabled with the new --jobs option.  
允许同时创建多个index   
#### 32  
Allow extensions to be specified as trusted (Tom Lane)  
Such extensions can be installed in a database by users with creation rights, even if they are not superusers. This change also removes the pg_pltemplate system catalog.  
例如plproxy插件, 可以直接指定为trust, 那么普通用户就能使用plproxy来创建函数.    
方便管理. 在某些内部安全环境中, 便于普通用户使用一些高权限的插件, 例如pythonu  
#### 33  
Add adminpack function pg_file_sync() to allow fsync'ing a file (Fujii Masao)  
Add pageinspect functions to output t_infomask/t_infomask2 values in human-readable format (Craig Ringer, Sawada Masahiko, Michael Paquier)  
Add btree index deduplication processing columns to pageinspect output (Peter Geoghegan)  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")