application layer and the selection of routes on the network
layer. This inﬂuences the transmission path of a circuit and
eventually its end-to-end timing features. As temporary and
permanent connection issues can be caused by a wide range of
reasons that are intransparent for an avoidance system, we limit
our analyses to a summary of monitored circuit establishment
failures (see Table III).
In our measurements, overall 10.65 % of circuit establish-
ments failed (12,500 out of 105,889 circuits). We use the
consensus archives to check whether a relay was unavailable
during the circuit establishment and distinguish two cases:
A relay might not be documented in the consensus and we
consider it as completely unavailable, or the relay occurs in
the list of relays and we can check its ﬂags. Our results reveal
20.32 % of relays that caused the connection failure to have
the Stable ﬂag set (router is suitable for long-lived circuits),
whereas all failure relays are ﬂagged as Running (router is
currently usable). We ﬁnd 9 % of failing relays to be entry
guards and 29 % to be ﬂagged as exit. On average, failing
relays provide 4.85 MB/s of advertised bandwidth (on average
a relay provides 7.83 MB/s) and are 3,122 km away from the
preceding node in the circuit (see Tab. IV as reference for
total circuit lengths). The overall rate of circuit failures is non-
negligible and further inﬂuences the circuit buildup procedure.
Design Goal: Connectivity issues and partitions amplify the
effects of Tor’s skewed relay distribution. Decision thresholds
must be ﬂexible to respect diverse performance features.
B. Ground Truth Information
Transmissions through Tor and the underlying network
infrastructure are not transparent. Therefore, we lack trusted
ground truth information about precise relay locations, all hops
of the transmission path, or performance features given at the
time of transmission. Nevertheless, we depend on a certain
set of information to provide a profound avoidance decision.
The lack of ground truth information introduces the following
challenges.
1) Relay Locations. We have no reliable information about
the actual positions of relays. GeoIP databases claim to
provide accurate information on a country level, never-
theless, such databases are an untrusted source of infor-
mation [45]. Manipulated or false entries that suggest an
incorrect country code are a security threat. Reference
measurements help to verify GeoIP information and pro-
vide an additional source of information to identify false
country codes.
2) Asymmetric Paths. Routing between the client and
server is not performed on symmetric paths, but routes
can differ on the way forth and back. Assuming symmetric
paths induces an error in the application of an avoidance
decision.
3) Transmission Characteristics. Dynamic routing might
change the paths of a circuit between individual trans-
mission sessions. Furthermore, varying network condi-
tions can inﬂuence transmissions through the effects of
congestion. Assuming static characteristics introduces in-
accuracies in the avoidance system.
Even though we cannot gain full transparency in the trans-
missions, preliminary measurements and veriﬁcation steps help
to achieve more trust in the available data. In the following,
we introduce a veriﬁcation mechanism for GeoIP location
information, identify the security threat of assuming symmetric
paths, and estimate the dynamics of varying transmission
characteristics.
1) Relay Locations: Prior avoidance systems use lower
bounds to decide whether it is possible that a circuit traverses
a forbidden area and for this, the locations of relays must
be known. The consensus does not provide coordinates for
relays, so the best way to estimate their position is an IP
address lookup in a GeoIP database. Unfortunately, such
databases provide untrusted information that might lead to
false locations. We conduct reference measurements, similar to
the approach of Weinberg et al. [52], to verify GeoIP locations
and identify potential errors.
We measure the ICMP round-trip time between different
remote servers and all relays of one consensus (please refer
to Table III for details on the experimental setup). In a ﬁrst
evaluation step, we compare the transmission time with the
great circle distances between servers and relays to approxi-
mate the transmission speed in each measurement (cf. Fig. 1).
We use this speed estimate to identify provably false GeoIP
locations, i. e., locations that lead to propagation speeds faster
than the speed of light. Such a violation occurs in cases where
the GeoIP location documents a position that is further away
from our reference3 point than indicated. Consequently, the
measured time is too short to travel the entire distance to
the recorded position. As we use multiple worldwide server
instances, we receive reference measurements from opposing
points and identify false information as soon as at least one
server indicates a speed of light violation.
From all tested relays, we ﬁnd approximately 5.5 % relays
(330 out of 6,042) to exceed the maximum allowed prop-
agation speed and, consequently, to be represented through
false GeoIP information. Using trilateration, as introduced in
Section II, we utilize the reference measurements from our
server instances to update the position of obviously false
relay locations. Besides the improved location, we update the
country code of 3.2 % (194) of the relays.
Solution: We use ICMP reference measurements to verify
the general correctness of untrusted GeoIP locations and
identify obvious false locations that violate the speed of
3By reference points we refer to remote server instances that we use to
conduct measurements. Details of the experimental setups are documented in
Table III.
light. Trilateration allows us to improve the location data by
removing provably false information.
2) Asymmetric Paths: We acknowledge the general ap-
proach of the recently proposed system DeTor [31], but ﬁnd—
besides further security and performance issues—a critical
overestimation in its lower bound decisions. DeTor bases its
mechanism on symmetric routes, which is not a valid assump-
tion as has been discussed and demonstrated by Sun et al. [44].
We use this as an example of the consequences of a false
asymmetry assumption. In particular, DeTor calculates its
decision threshold based on a detour to the forbidden area on
both directions of a round-trip. This is a critical misconception
introduced when the authors transitioned their technique from
one-way connections [29] to Tor circuits. A negligent doubling
of the necessary distance overestimates the required time. To
ﬁx the symmetric routes apparent in DeTor’s time estimation
(Equation 2), we consider asymmetric routes and obtain:
Rmin =
· min
3
2c
Dmin(c, F, e, m, x, s)
Dmin(c, e, F, m, x, s)
Dmin(c, e, m, F, x, s)
Dmin(c, e, m, x, F, s)
+ D(c, e, m, x, s).
(4)
The amount of overestimation done by DeTor can be quantiﬁed
as:
· [D(A, F, B) − D(A, B)],
(5)
Rerror =
3
2c
where A and B are the hops with an extension to reach F .
DeTor overestimates the decision threshold by Rerror, which
represents the range of false decisions. The greater the distance
to F ,
the higher the overestimation done by DeTor. This
constitutes a critical security ﬂaw as connections are falsely
labeled secure, creating the illusion of protection from being
monitored, and putting users to risk. DeTor uses an uncertainty
parameter δ that can be used as a factor to adjust the measured
RTT (see Eq.3), nevertheless, this does not ﬁx the system-
intrinsic overestimation.
Solution: We consider only one forbidden area extension
for the entire connection, i. e., assume asymmetric paths.
3) Transmission Characteristics: Varying transmission
characteristics inﬂuence the end-to-end timing of a connection,
e. g., congestion in relays or routers prolongs the transmission
times and can lead to false avoidance decisions. Consequently,
the timing characteristics of a circuit depend on the distances
between hops and the amount of routing that
takes place
in between. We utilize the ICMP reference measurements
to review real-world timing characteristics and derive the
experienced propagation speeds.
Three ”clouds” of points (cf. Fig. 1) summarize the trans-
mission distances from remote servers to all relays in the
consensus and indicate sparse areas like oceans and continents
with only few relays. We apply a nonlinear least squares ﬁt
(NLS) to these measurement results and receive the propa-
gation speed as a function of the transmission lengths. The
ﬁtting function indicates a dynamic propagation speed rather
than a ﬁxed threshold, e. g., we ﬁnd varying transmission
characteristics for different circuit and hop lengths. Typical
transmission speeds are in the range of 0.22c to 0.67c [25],
whereas we ﬁnd a maximum speed of 0.381c and a mean of
0.342c in the NLS ﬁt of all ICMP measurements.
6
and potential collateral damage in comparison with recent
proposals in this context. This initial assessment provides an
overview of how different concepts can manage the challenges.
In a second step, we extend the experimental setup by real-
world constraints and introduce a prototype implementation
that utilizes the empirical avoidance concept of Section IV.
IV. COMPARISON OF AVOIDANCE CONCEPTS
The assessment of challenges (§III) is our starting point to
evaluate building blocks for a realistic avoidance system. In
the following, we introduce an empirical avoidance concept
and its system model and compare it with recent work in this
context.
A. Empirical Avoidance Decisions
From the preliminary measurements we learned that Tor
not only provides a skewed distribution of relays (§III-A1),
but also that varying transmission characteristics (§III-B3)
and circuit lengths (§III-A2) have a fundamental inﬂuence
on the end-to-end timings of circuits. Consequently, we lose
information when applying a static threshold in the avoidance
decision. In the following, we propose an alternative approach
to estimate the timing characteristics of each hop individually.
1) Relay Hop Time Estimation: Our goal is to obtain a real-
istic estimation of transmission times between individual hops.
We do so by extracting dependencies of circuits that share the
same hops. In particular, we analyze RTT measurements of
Tor circuits that we gather from remote probing servers. We
build these circuits from permutations of entry, middle, and
exit relays such that they share pairwise identical hops. This
redundancy of circuit segments allows us to estimate the timing
distribution that each hop contributes to the overall circuit’s
RTT. We aim to create a map of RTT relations between all
possible combinations of Tor relays:
optimize
(6)
where em, mn, xl are combinations of relays and c, s are
the remote servers we measure circuits from. In the above
notation, the hops partially overlap, which allows us to deﬁne
equal segments throughout all measurements. The dependency
between measurements allows us to assign portions of the total
RTT to individual hops. Notably, the measurements take the
Tor and other network overhead into account, resulting in hop
time estimations already including realistic overhead metrics.
We deﬁne an objective function, which minimizes the error
for all combinations of measurements, as shown in Equation 7:
min
f (x) = (cid:107)Ax − b(cid:107) , x ≥ 0,
(7)
where A ∈ Rm×n is a design matrix we arrange from our
measurements, and b ∈ Rm is the vector of observations [27],
x
···
RT T (c →e1 → m1 → x1→ s)
RT T (c →e2 → m1 → x1→ s)
RT T (c →e1 → m1 → x1→ s)
RT T (c →e1 → m2 → x1→ s)
RT T (c →e1 → m1 → x1→ s)
RT T (c →e1 → m1 → x2→ s)
···
···
 ,
Fig. 1. Measured propagation speeds versus traveled distances (points) of
ICMP measurements from 16 reference servers to 6,042 Tor relays; nonlinear
least squares ﬁt (NLS) of the relation between transmission distance and
propagation speed (red line).
Solution: We use hop-individual timing estimates for all
possible pairs of relays and step back from a static speed
assumption for all connections.
C. Deployment
Deploying an avoidance system in the real-world means
that we need reasonable sources of information for an accept
or reject decision. Furthermore, we must maintain the original
security and performance features of Tor, as otherwise new
attack vectors open up. We deﬁne the following requirements
for a realistic deployment.
1) Gather Required Information. All information required
to perform a profound avoidance decision must be made
available for Tor users. For a realistic deployment we need
a reasonable source of this information and generate trust
in its content.
2) Security. Gathering information for the avoidance deci-
sion must maintain the original security features of Tor.
The system must avoid actions that reveal any sensitive
information about users or the network.
3) Performance. Additional security through geographical
avoidance might justify minor performance impairments,
nevertheless, it remains a design goal to maintain the
original performance.
A real-world deployment leads to additional requirements
for the features of an avoidance system, e. g., they deﬁne
the amount of information we can (or cannot) incorporate
in the decision process, and they also dictate the security
and performance features that must be satisﬁed. Even though
they are the conditions for the practical deployment of a
system, the deployment challenges are still independent of the
general concept of an avoidance system. In other words, it is
possible to propose a general avoidance concept that answers
the challenges of missing ground truth information and follows
the design goals associated with network diversity in a ﬁrst
step. As soon as the general avoidance concepts can satisfy
these challenges, we can approach the subsequent step of
deriving a prototype implementation that also serves the all
real-world conditions.
We organize our evaluation procedure according to this
two-step workﬂow. In a ﬁrst evaluation step, we introduce an
empirical avoidance concept and rate its detection capabilities
7
0.00.10.20.30.40.505,00010,00015,000Distance [km] Speed [c]i. e., the measured RTTs. The design matrix is arranged as
follows:
m1
m2
...
mx
n1 → n2
n1 → n3
1
0
...
0
1
0
...
1
. . . ny → nz
. . .
. . .
...
. . .
1
0
...
0
Here, the rows contain individual measurements m and the
columns represent all pairs of nodes n, i. e., hops between
relays that occurred in the measurements. A 1 denotes that
the measured circuit contained this speciﬁc hop, whereas a 0
is assigned to all other hops. In total, a maximum of four 1
values can exist in each row, as this represents the number of
hops from the client to the server.
Equation 7 represents a non-negative least-squares (NNLS)
problem, which is a constrained version of a least squares
problem. The sheer size of the problem, i. e., several thousand
measurements and tens of thousands of relay combinations,
exceeds the processable complexity by magnitudes. Neverthe-
less, applying a highly optimized solver [27], [37] and the fact
that we are dealing with a very sparse design matrix allows us
to handle large-scale problems. We implement such a solver
to calculate the timing distribution of all hops minimizing
the squared error. As a result, we receive a lookup table that
provides pairwise estimates for all relays in the consensus.
2) Forbidden Area Decision: The hop estimations are our
basis to calculate the time it would take to send data through
a forbidden area. In particular, we measure the RTT Re2e for
a newly built circuit and identify the involved relays. From
these relays, we compute the decision threshold Rest that
summarizes the expected transmission time for the current
circuit. Our approach follows the concept of DeTor (Eq. 2), but
uses the empirical estimates instead of translating great circle
distances into a lower bound transmission time. We compute
the decision threshold Rest, the shortest possible extension
extF to the forbidden area, the hop estimates to send data
from the client to the server (excluding the hops involved in
the extension), and the estimates for the way back from the