a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man2/sync_file_range.2
.so man3/unlocked_stdio.3
.\" copyright (c) 2003 free software foundation, inc.
.\"
.\" %%%license_start(gpl_noversion_oneline)
.\" this file is distributed according to the gnu general public license.
.\" %%%license_end
.\"
.th io_getevents 2 2021-03-22 "linux" "linux programmer's manual"
.sh name
io_getevents \- read asynchronous i/o events from the completion queue
.sh synopsis
.nf
.br "#include " "    /* definition of " *io_* " types */"
.br "#include " "      /* definition of " sys_* " constants */"
.b #include 
.pp
.bi "int syscall(sys_io_getevents, aio_context_t " ctx_id ,
.bi "            long " min_nr ", long " nr ", struct io_event *" events ,
.bi "            struct timespec *" timeout );
.fi
.pp
.ir note :
glibc provides no wrapper for
.br io_getevents (),
necessitating the use of
.br syscall (2).
.sh description
.ir note :
this page describes the raw linux system call interface.
the wrapper function provided by
.i libaio
uses a different type for the
.i ctx_id
argument.
see notes.
.pp
the
.br io_getevents ()
system call
attempts to read at least \fimin_nr\fp events and
up to \finr\fp events from the completion queue of the aio context
specified by \fictx_id\fp.
.pp
the \fitimeout\fp argument specifies the amount of time to wait for events,
and is specified as a relative timeout in a structure of the following form:
.pp
.in +4n
.ex
struct timespec {
    time_t tv_sec;      /* seconds */
    long   tv_nsec;     /* nanoseconds [0 .. 999999999] */
};
.ee
.in
.pp
the specified time will be rounded up to the system clock granularity
and is guaranteed not to expire early.
.pp
specifying
.i timeout
as null means block indefinitely until at least
.i min_nr
events have been obtained.
.sh return value
on success,
.br io_getevents ()
returns the number of events read.
this may be 0, or a value less than
.ir min_nr ,
if the
.i timeout
expired.
it may also be a nonzero value less than
.ir min_nr ,
if the call was interrupted by a signal handler.
.pp
for the failure return, see notes.
.sh errors
.tp
.b efault
either \fievents\fp or \fitimeout\fp is an invalid pointer.
.tp
.b eintr
interrupted by a signal handler; see
.br signal (7).
.tp
.b einval
\fictx_id\fp is invalid.
\fimin_nr\fp is out of range or \finr\fp is
out of range.
.tp
.b enosys
.br io_getevents ()
is not implemented on this architecture.
.sh versions
the asynchronous i/o system calls first appeared in linux 2.5.
.sh conforming to
.br io_getevents ()
is linux-specific and should not be used in
programs that are intended to be portable.
.sh notes
you probably want to use the
.br io_getevents ()
wrapper function provided by
.\" http://git.fedorahosted.org/git/?p=libaio.git
.ir libaio .
.pp
note that the
.i libaio
wrapper function uses a different type
.ri ( io_context_t )
.\" but glibc is confused, since  uses 'io_context_t' to declare
.\" the system call.
for the
.i ctx_id
argument.
note also that the
.i libaio
wrapper does not follow the usual c library conventions for indicating errors:
on error it returns a negated error number
(the negative of one of the values listed in errors).
if the system call is invoked via
.br syscall (2),
then the return value follows the usual conventions for
indicating an error: \-1, with
.i errno
set to a (positive) value that indicates the error.
.sh bugs
an invalid
.ir ctx_id
may cause a segmentation fault instead of generating the error
.br einval .
.sh see also
.br io_cancel (2),
.br io_destroy (2),
.br io_setup (2),
.br io_submit (2),
.br aio (7),
.br time (7)
.\" .sh author
.\" kent yoder.
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.so man3/strtod.3
.so man3/setaliasent.3
.so man2/alloc_hugepages.2
.so man3/getutent.3
.\" copyright (c) 1995 michael chastain (PI:EMAIL), 15 april 1995.
.\"
.\" %%%license_start(gplv2+_doc_full)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\"
.\" the gnu general public license's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" this manual is distributed in the hope that it will be useful,
.\" but without any warranty; without even the implied warranty of
.\" merchantability or fitness for a particular purpose.  see the
.\" gnu general public license for more details.
.\"
.\" you should have received a copy of the gnu general public
.\" license along with this manual; if not, see
.\" .
.\" %%%license_end
.\"
.\" modified tue oct 22 08:11:14 edt 1996 by eric s. raymond 
.th ipc 2 2021-03-22 "linux" "linux programmer's manual"
.sh name
ipc \- system v ipc system calls
.sh synopsis
.nf
.br "#include " "        /* definition of needed constants */"
.br "#include " "      /* definition of " sys_* " constants */"
.b #include 
.pp
.bi "int syscall(sys_ipc, unsigned int " call ", int " first ,
.bi "            unsigned long " second ", unsigned long " third \
", void *" ptr ,
.bi "            long " fifth );
.fi
.pp
.ir note :
glibc provides no wrapper for
.br ipc (),
necessitating the use of
.br syscall (2).
.sh description
.br ipc ()
is a common kernel entry point for the system\ v ipc calls
for messages, semaphores, and shared memory.
.i call
determines which ipc function to invoke;
the other arguments are passed through to the appropriate call.
.pp
user-space programs should call the appropriate functions by their usual names.
only standard library implementors and kernel hackers need to know about
.br ipc ().
.sh conforming to
.br ipc ()
is linux-specific, and should not be used in programs
intended to be portable.
.sh notes
on some architectures\(emfor example x86-64 and arm\(emthere is no
.br ipc ()
system call; instead,
.br msgctl (2),
.br semctl (2),
.br shmctl (2),
and so on really are implemented as separate system calls.
.sh see also
.br msgctl (2),
.br msgget (2),
.br msgrcv (2),
.br msgsnd (2),
.br semctl (2),
.br semget (2),
.br semop (2),
.br semtimedop (2),
.br shmat (2),
.br shmctl (2),
.br shmdt (2),
.br shmget (2),
.br sysvipc (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright (c) 2014 marko myllynen 
.\"
.\" %%%license_start(gplv2+_doc_full)
.\" this is free documentation; you can redistribute it and/or
.\" modify it under the terms of the gnu general public license as
.\" published by the free software foundation; either version 2 of
.\" the license, or (at your option) any later version.
.\"
.\" the gnu general public license's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" this manual is distributed in the hope that it will be useful,
.\" but without any warranty; without even the implied warranty of
.\" merchantability or fitness for a particular purpose.  see the
.\" gnu general public license for more details.
.\"
.\" you should have received a copy of the gnu general public
.\" license along with this manual; if not, see
.\" .
.\" %%%license_end
.\"
.th iconv 1 2021-08-27 "gnu" "linux user manual"
.sh name
iconv \- convert text from one character encoding to another
.sh synopsis
.b iconv
.ri [ options ]
.ri "[\-f " from-encoding "]"
.ri "[\-t " to-encoding "]"
.ri [ inputfile ]...
.sh description
the
.b iconv
program reads in text in one encoding and outputs the text in another
encoding.
if no input files are given, or if it is given as a dash (\-),
.b iconv
reads from standard input.
if no output file is given,
.b iconv
writes to standard output.
.pp
if no
.i from-encoding
is given, the default is derived
from the current locale's character encoding.
if no
.i to-encoding
is given, the default is derived
from the current locale's character
encoding.
.sh options
.tp
.bi \-f " from-encoding" "\fr, \fp\-\-from\-code=" from-encoding
use
.i from-encoding
for input characters.
.tp
.bi \-t " to-encoding" "\fr, \fp\-\-to\-code=" to-encoding
use
.i to-encoding
for output characters.
.ip
if the string
.b //ignore
is appended to
.ir to-encoding ,
characters that cannot be converted are discarded and an error is
printed after conversion.
.ip
if the string
.b //translit
is appended to
.ir to-encoding ,
characters being converted are transliterated when needed and possible.
this means that when a character cannot be represented in the target
character set, it can be approximated through one or several similar
looking characters.
characters that are outside of the target character set and cannot be
transliterated are replaced with a question mark (?) in the output.
.tp
.br \-l ", " \-\-list
list all known character set encodings.
.tp
.b "\-c"
silently discard characters that cannot be converted instead of
terminating when encountering such characters.
.tp
.bi \-o " outputfile" "\fr, \fp\-\-output=" outputfile
use
.i outputfile
for output.
.tp
.br \-s ", " \-\-silent
this option is ignored; it is provided only for compatibility.
.tp
.b "\-\-verbose"
print progress information on standard error when processing
multiple files.
.tp
.br \-? ", " \-\-help
print a usage summary and exit.
.tp
.b "\-\-usage"
print a short usage summary and exit.
.tp
.br \-v ", " \-\-version
print the version number, license, and disclaimer of warranty for
.br iconv .
.sh exit status
zero on success, nonzero on errors.
.sh environment
internally, the
.b iconv
program uses the
.br iconv (3)
function which in turn uses
.i gconv
modules (dynamically loaded shared libraries)
to convert to and from a character set.
before calling
.br iconv (3),
the
.b iconv
program must first allocate a conversion descriptor using
.br iconv_open (3).
the operation of the latter function is influenced by the setting of the
.b gconv_path
environment variable:
.ip * 3
if
.b gconv_path
is not set,
.br iconv_open (3)
loads the system gconv module configuration cache file created by
.br iconvconfig (8)
and then, based on the configuration,
loads the gconv modules needed to perform the conversion.
if the system gconv module configuration cache file is not available
then the system gconv module configuration file is used.
.ip *
if
.b gconv_path
is defined (as a colon-separated list of pathnames),
the system gconv module configuration cache is not used.
instead,
.br iconv_open (3)
first tries to load the configuration files by searching the directories in
.b gconv_path
in order,
followed by the system default gconv module configuration file.
if a directory does not contain a gconv module configuration file,
any gconv modules that it may contain are ignored.
if a directory contains a gconv module configuration file
and it is determined that a module needed for this conversion is
available in the directory,
then the needed module is loaded from that directory,
the order being such that the first suitable module found in
.b gconv_path
is used.
this allows users to use custom modules and even replace system-provided
modules by providing such modules in
.b gconv_path
directories.
.sh files
.tp
.i /usr/lib/gconv
usual default gconv module path.
.tp
.i /usr/lib/gconv/gconv\-modules
usual system default gconv module configuration file.
.tp
.i /usr/lib/gconv/gconv\-modules.cache
usual system gconv module configuration cache.
.pp
depending on the architecture,
the above files may instead be located at directories with the path prefix
.ir /usr/lib64 .
.sh conforming to
posix.1-2001.
.sh examples
convert text from the iso 8859-15 character encoding to utf-8:
.pp
.in +4n
.ex
$ \fbiconv \-f iso\-8859\-15 \-t utf\-8  output.txt\fp
.ee
.in
.pp
the next example converts from utf-8 to ascii, transliterating when
possible:
.pp
.in +4n
.ex
$ \fbecho abc ß α € àḃç | iconv \-f utf\-8 \-t ascii//translit\fp
abc ss ? eur abc
.ee
.in
.sh see also
.br locale (1),
.br uconv (1),
.br iconv (3),
.br nl_langinfo (3),
.br charsets (7),
.br iconvconfig (8)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
.\" copyright 2002 walter harms (PI:EMAIL)
.\"
.\" %%%license_start(gpl_noversion_oneline)
.\" distributed under gpl
.\" %%%license_end
.\"
.th cexp2 3 2021-03-22 "" "linux programmer's manual"
.sh name
cexp2, cexp2f, cexp2l \- base-2 exponent of a complex number
.sh synopsis
.nf
.b #include 
.pp
.bi "double complex cexp2(double complex " z ");"
.bi "float complex cexp2f(float complex " z ");"
.bi "long double complex cexp2l(long double complex " z ");"
.pp
link with \fi\-lm\fp.
.fi
.sh description
the function returns 2 raised to the power of
.ir z .
.sh conforming to
these function names are reserved for future use in c99.
.pp
as at version 2.31, these functions are not provided in glibc.
.\" but reserved in namespace.
.sh see also
.br cabs (3),
.br cexp (3),
.br clog10 (3),
.br complex (7)
.sh colophon
this page is part of release 5.13 of the linux
.i man-pages
project.
a description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
#!/bin/sh
#
# convert_to_utf_8.sh
#
# find man pages with encoding other than us-ascii, and convert them
# to the utf-8 encoding.
#
# example usage:
#
#    cd man-pages-x.yy
#    sh convert_to_utf_8.sh  man?/*
#
######################################################################
#
# (c) copyright 2013, peter schiffer 
# this program is free software; you can redistribute it and/or
# modify it under the terms of the gnu general public license
# as published by the free software foundation; either version 2
# of the license, or (at your option) any later version.
# 
# this program is distributed in the hope that it will be useful,
# but without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose.  see the
# gnu general public license for more details
# (http://www.gnu.org/licenses/gpl-2.0.html).
#
if [[ $# -lt 2 ]]; then
    echo "usage: ${0}  man?/*" 1>&2
    exit 1
fi
out_dir="$1"
shift
enc_line=""