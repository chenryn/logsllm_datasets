::: itemizedlist
-   [在 IBM Z 中配置 Linux
    实例](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_a_standard_rhel_installation/configuring-a-linux-instance-on-ibm-z_installing-rhel){.link}
-   IBM [知识库中您应该了解的
    DASD](https://www.ibm.com/support/knowledgecenter/linuxonibm/com.ibm.linux.z.lgdd/lgdd_c_dasd_know.html){.link}
    文章
:::
:::
#### []{#assembly_getting-started-with-partitions_managing-storage-devices.html#the_maximum_number_of_partitions_3}分区的最大数量
设备中的分区数量受分区表类型的限制：
::: itemizedlist
-   [**在使用主引导记录(MBR)分区表格式化的设备中**]{.strong}，您可以使用：
    ::: itemizedlist
    -   最多四个主分区，或者
    -   最多有三个主分区，以及一个扩展分区，其中包括多个逻辑分区。
    :::
-   在使用 [**GUID 分区表(GPT)**]{.strong} 格式化的设备中，最多分区数为
    128。尽管 GPT 规范通过增大为分区表保留的区域来允许更多分区，但
    `parted`{.literal} 工具使用的常见做法是将其限制为 128 分区足够区域。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
[*红帽建议，除非您有其他原因，否则至少应创建以下分区*]{.emphasis} ：
`swap`{.literal}、`/boot/`{.literal} 和 `/`{.literal} (root)。
:::
#### []{#assembly_getting-started-with-partitions_managing-storage-devices.html#the_maximum_size_of_a_partition_3}分区的最大大小
设备中的分区大小受分区表类型的限制：
::: itemizedlist
-   在使用[**主引导记录（MBR）**]{.strong}
    分区表格式化的设备中，最大值为 2TiB。
-   在使用 [**GUID 分区表(GPT)**]{.strong} 格式化的设备中，最大大小为
    8ZiB。
:::
如果要创建一个大于 2TiB 的分区，该磁盘必须使用 GPT 格式化。
#### []{#assembly_getting-started-with-partitions_managing-storage-devices.html#size_alignment_3}大小协调
`parted`{.literal} 工具可让您使用多个不同的后缀指定分区大小：
::: variablelist
[MiB、GiB 或 TiB]{.term}
:   大小为 2 的指数代表。
    ::: itemizedlist
    -   分区的起点与根据大小指定的扇区一致。
    -   结束点与指定大小减 1 扇区一致。
    :::
[MB、GB 或 TB]{.term}
:   以 10 的指数表示容量。
    起始和结束点在指定单元的一半内一致：例如,使用 MB 后缀时 ±500KB。
:::
:::
::: section
::: titlepage
## []{#assembly_getting-started-with-partitions_managing-storage-devices.html#proc_removing-a-partition-with-parted_assembly_removing-a-partition}使用 parted 删除分区 {.title}
:::
这个步骤描述了如何使用 `parted`{.literal} 工具删除磁盘分区。
::: orderedlist
**流程**
1.  启动交互式 `parted`{.literal} shell：
    ``` screen
    # parted block-device
    ```
    ::: itemizedlist
    -   使用您要删除分区的设备的路径替换
        [*[block-device]{.replaceable}*]{.emphasis}：例如
        `/dev/sda`{.literal}。
    :::
2.  查看当前的分区表以确定要删除的分区的副号码：
    ``` screen
    (parted) print
    ```
3.  删除分区：
    ``` screen
    (parted) rm minor-number
    ```
    ::: itemizedlist
    -   使用您要删除的分区的次要号码替换
        [*[minor-number]{.replaceable}*]{.emphasis}：例如：
        `3`{.literal}。
    :::
    输入此命令后，这些更改就会生效，因此在执行前请先重新检查。
4.  确认分区已从分区表中被删除：
    ``` screen
    (parted) print
    ```
5.  退出 `parted`{.literal} shell：
    ``` screen
    (parted) quit
    ```
6.  确定内核知道已删除该分区：
    ``` screen
    # cat /proc/partitions
    ```
7.  如果分区存在，从 `/etc/fstab`{.literal}
    文件中删除它。找到声明已删除分区的行，并将其从 文件中删除。
8.  重新生成挂载单元以便您的系统注册新的 `/etc/fstab`{.literal} 配置：
    ``` screen
    # systemctl daemon-reload
    ```
9.  如果您删除了交换分区或删除了 LVM 部分，请从
    `/etc/default/grub`{.literal}
    文件中的内核命令行中删除所有对分区的引用，并重新生成 GRUB 配置：
    ::: itemizedlist
    -   在基于 BIOS 的系统中：
        ``` screen
        # grub2-mkconfig --output=/etc/grub2.cfg
        ```
    -   在基于 UEFI 的系统中：
        ``` screen
        # grub2-mkconfig --output=/etc/grub2-efi.cfg
        ```
    :::
10. 要在早期引导系统中注册更改，重建 `initramfs`{.literal} 文件系统：
    ``` screen
    # dracut --force --verbose
    ```
:::
::: itemizedlist
**其它资源**
-   `parted(8)`{.literal} man page
:::
:::
:::
::: section
::: titlepage
# []{#assembly_getting-started-with-partitions_managing-storage-devices.html#assembly_resizing-a-partition_assembly_getting-started-with-partitions}重新定义分区尺寸 {.title}
:::
作为系统管理员，您可以扩展分区来利用未使用的磁盘空间，或者缩小分区以达到不同的目的。
::: section
::: titlepage
## []{#assembly_getting-started-with-partitions_managing-storage-devices.html#con_considerations-before-modifying-partitions-on-a-disk_assembly_resizing-a-partition}修改磁盘分区前的注意事项 {.title}
:::
本节列出了在创建、删除或重新定义分区大小前需要考虑的关键点。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
本节不涵盖 DASD 分区表，它特定于 IBM Z 构架。有关 DASD 的详情请参考：
::: itemizedlist
-   [在 IBM Z 中配置 Linux
    实例](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_a_standard_rhel_installation/configuring-a-linux-instance-on-ibm-z_installing-rhel){.link}
-   IBM [知识库中您应该了解的
    DASD](https://www.ibm.com/support/knowledgecenter/linuxonibm/com.ibm.linux.z.lgdd/lgdd_c_dasd_know.html){.link}
    文章
:::
:::
#### []{#assembly_getting-started-with-partitions_managing-storage-devices.html#the_maximum_number_of_partitions_4}分区的最大数量
设备中的分区数量受分区表类型的限制：
::: itemizedlist
-   [**在使用主引导记录(MBR)分区表格式化的设备中**]{.strong}，您可以使用：
    ::: itemizedlist
    -   最多四个主分区，或者
    -   最多有三个主分区，以及一个扩展分区，其中包括多个逻辑分区。
    :::
-   在使用 [**GUID 分区表(GPT)**]{.strong} 格式化的设备中，最多分区数为
    128。尽管 GPT 规范通过增大为分区表保留的区域来允许更多分区，但
    `parted`{.literal} 工具使用的常见做法是将其限制为 128 分区足够区域。
:::
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
[*红帽建议，除非您有其他原因，否则至少应创建以下分区*]{.emphasis} ：
`swap`{.literal}、`/boot/`{.literal} 和 `/`{.literal} (root)。
:::
#### []{#assembly_getting-started-with-partitions_managing-storage-devices.html#the_maximum_size_of_a_partition_4}分区的最大大小
设备中的分区大小受分区表类型的限制：
::: itemizedlist
-   在使用[**主引导记录（MBR）**]{.strong}
    分区表格式化的设备中，最大值为 2TiB。
-   在使用 [**GUID 分区表(GPT)**]{.strong} 格式化的设备中，最大大小为
    8ZiB。
:::
如果要创建一个大于 2TiB 的分区，该磁盘必须使用 GPT 格式化。
#### []{#assembly_getting-started-with-partitions_managing-storage-devices.html#size_alignment_4}大小协调
`parted`{.literal} 工具可让您使用多个不同的后缀指定分区大小：
::: variablelist
[MiB、GiB 或 TiB]{.term}
:   大小为 2 的指数代表。
    ::: itemizedlist
    -   分区的起点与根据大小指定的扇区一致。
    -   结束点与指定大小减 1 扇区一致。
    :::
[MB、GB 或 TB]{.term}
:   以 10 的指数表示容量。
    起始和结束点在指定单元的一半内一致：例如,使用 MB 后缀时 ±500KB。
:::
:::
::: section
::: titlepage
## []{#assembly_getting-started-with-partitions_managing-storage-devices.html#proc_resizing-a-partition-with-parted_assembly_resizing-a-partition}使用 parted 重新定义分区大小 {.title}
:::
这个过程使用 `parted`{.literal} 工具重新定义磁盘分区大小。
::: itemizedlist
**先决条件**
-   如果您想缩小分区，备份保存在分区上的数据。
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    缩小分区可能会导致分区上的数据丢失。
    :::
-   如果要将分区大小调整为大于 2TiB，磁盘必须使用 GUID
    分区表(GPT)进行格式化。有关如何格式化磁盘的详情请参考
    ["在磁盘中创建分区表"一节](#assembly_getting-started-with-partitions_managing-storage-devices.html#assembly_creating-a-partition-table-on-a-disk_assembly_getting-started-with-partitions "在磁盘中创建分区表"){.xref}。
:::
::: orderedlist
**流程**
1.  如果您想缩小分区，首先缩小它上面的文件系统，使其不大于重新定义大小的分区。请注意
    XFS 不支持缩小。
2.  启动交互式 `parted`{.literal} shell：
    ``` screen
    # parted block-device
    ```
    ::: itemizedlist
    -   使用您要重新定义分区大小的设备的路径替换
        [*[block-device]{.replaceable}*]{.emphasis}: 例如
        `/dev/sda`{.literal}。
    :::
3.  查看当前的分区表：
    ``` screen
    (parted) print
    ```
    从分区表中决定：
    ::: itemizedlist
    -   分区的从号码
    -   调整大小后现有分区的位置和新结束点
    :::
4.  重新定义分区大小：
    ``` screen
    (parted) resizepart minor-number new-end
    ```
    ::: itemizedlist
    -   使用您要重新划分大小的分区的副号码替换
        [*[minor-number]{.replaceable}*]{.emphasis}：例如：
        `3`{.literal}。
    -   用决定重新定义大小的新分区的结束点（从磁盘开始计算）替换
        [*[new-end]{.replaceable}*]{.emphasis}。您可以使用大小后缀，如
        `512MiB`{.literal}、`20GiB`{.literal} 或
        `1.5TiB`{.literal}。默认大小 MB。
    :::
    ::: example
    []{#assembly_getting-started-with-partitions_managing-storage-devices.html#idm140531391554976}
    **例 3.4. 扩展分区**
    ::: example-contents
    例如，要将位于磁盘开头的分区大小扩展为 2GiB，请使用：
    ``` screen
    (parted) resizepart 1 2GiB
    ```
    :::
    :::
    输入此命令后，这些更改就会生效，因此在执行前请先重新检查。
5.  查看分区表以确认重新定义大小的分区位于分区表中，大小正确：
    ``` screen
    (parted) print
    ```
6.  退出 `parted`{.literal} shell：
    ``` screen
    (parted) quit
    ```
7.  验证内核是否识别了新的分区：
    ``` screen
    # cat /proc/partitions
    ```
8.  如果您扩展了分区，也扩展了它上面的文件系统。详情请参阅（参考）。
:::
::: itemizedlist
**其它资源**
-   `parted(8)`{.literal} man page。
:::
:::
:::
::: section
::: titlepage
# []{#assembly_getting-started-with-partitions_managing-storage-devices.html#strategies-for-repartitioning-a-disk_assembly_getting-started-with-partitions}重新分区磁盘策略 {.title}
:::
重新分区磁盘的方法有几种。本节讨论以下可能的方法：
::: itemizedlist
-   有可用的未分区的空闲空间
-   有可用的未使用过的分区
-   被活跃使用的分区内有可用的空闲空间
:::
请注意，本节仅讨论前面提到的概念，不包括关于如何执行磁盘重新分区步骤的任何流程步骤。