解压出来的PDF是来自于印度的一个政府网站:
Phase-3-of-Nationwide-Vaccination-Registration_pdf.exe释放出来的名字为winhosti.exe的文件是njRat的一个变种,文件中包含一个PDB路径:
D:\RATS\njRAT-0.7d-Stub-CSharp-master\njRATC#Stub\njRATC# Stub-backup\obj\x86\Debug\winhosti.pdb
通过搜索我们在github上找到了相关的源代码:
https[:]//github.com/NYAN-x-CAT/njRAT-0.7d-Stub-CSharp/tree/master/njRAT%20C%23%20Stub
不过项目的名字发生了变化，github上的项目名是"Lime",winhosti.exe中则变为"Ralinet":
除了上面的样本外，我们发现一些伪装成私有VPN APP的样本。名字为Kavach-Release-win.exe的文件解压后如下:
go.vbs会打开链接:https[:]//kavach.mail.gov.in。通过网上公开的操作手册，我们了解到:登录kavach.mail.gov.in网站后可以下载认证工具，通过认证工具可以直接访问mail.gov.in所在的系统。释放出来的winhost.exe是一个旧版本的njRAT,它的C&C同样是149[.]248.52.61，不过这个文件并不包含PDB信息。
我们还发现了一个名字为10298-VPN-Win-10.exe的文件这个文件伪装成VPN的客户端程序，部分代码如下:
它会打开https[:]//vpn.nic.in/链接，造成访问正确网站的假象。然后在后台解密并释放%APPDATA%\inithost.exe，同时将其加入到开机自启动项。释放出来的inithost.exe是一个截屏程序，并且这个程序可以自动更新：
10298-VPN-Win-10.exe中包含的PDB路径如下:
G:\VP-S-Fin\memory\encrypt-decrypt-byte-encrypted\encrypt-decrypt\obj\Debug\solaris.pdb
inithost.exe 中包含的PDB路径如下:
G:\VP-S-Fin\Margulas\Client\obj\Debug\solaris1.pdb
在我们分析完以上样本后，我们意外发现一个lnk文件和149[.]248[.]52[.]61有关联。最早发现的lnk文件的名字为:Cir-Bfg-Int-May21-Summary.docx.lnK。这个文件的执行流程如下:
下载下来的updtsys.exe中包含的PDB路径如下:
D:\RATS\njRAT-0.7d-Stub-CSharp-master\njRAT C# Stub\njRAT C# Stub-backup\obj\x86\Debug\wintask.pdb
#### 2.3.2 再次相遇
名字为Cir-Bfg-Int-May21-Summary.docx.lnK的文件中包含一个链接:https[:]//www[.]imenucard.com/fcm/files/ALMT-OF-TT&IEG-2021/css/word.ico,这个链接指向的是一个winword的图标。我们发现了[www.imenucard.com](www.imenucard.com)上存在另外一个hta文件:http[:]//imenucard.com/fcm/files/xmlk/css.hta。我们点开后发现了熟悉的代码:
这个LNK中包含一个MachineID字段，该字段的值是"desktop-g1i8n3f"。通过关联我们找到了另外几个与之相关的文件:
文件名 | MD5  
---|---  
DATE-OF-NEXT-INCREMENT-ON-UP-GRADATION-OF-PAY-ON-01-JAN-AND-01-JUL.pdf.lnk |
2d486754b4e2060db77f212da0c6f  
Call-for-Proposal-DGSP-COAS-Chair-Excellance.pdf.lnk |
261fa3263efc672ed853c7b327b64d70  
Covid Vaccination.pdf.lnk | 0330753edb0026e847052f6faffe3243  
Covid Vaccination On Emergency Basis for All Employees and their
Familes.pdf.lnk | ced4a3d54c12ff49b5b9bd562d935b3c  
Image__7563.jpg.lnk | 265598226b93803f67cee5fc2dc8199f  
这些文件lnk的执行流程和Cir-Bfg-Int-May21-Summary.docx.lnk有所差异，比如DATE-OF-NEXT-INCREMENT-ON-UP-GRADATION-OF-PAY-ON-01-JAN-AND-01-JUL.pdf.lnk文件的执行流程如下:
LNK文件首先会下载一个HTA文件，这个文件中包含两个经过base64编码的字符串。其中一个是反序列化的.NET模块，解码后会调用其导出的函数。这个模块中类的定义如下:
与2019年的hta.dll相比，新的模块在函数上又发生了变化。这次调用的是RealityShow,这个函数的定义如下:
data字符串经过base64编码并且GZIP压缩，RealityShow会先解码和解压缩这个字符串并写入一个PDF文件中，然后打开这个文件。
接着RealityShow会调用getThridStrike函数:
getThridStrike
会从https[:]//londonkids.in/echoolz/assets/css/front/hwo/css/下载一个HTA文件，这个文件中包含一个反序列化的.NET模块，这个模块的名字为prebothta.dll。HTA文件首先会遍历系统中的杀毒软件，然后将杀毒软件的名字传入到prebothta.dll的PinkAgain函数。prebothta.dll中的类的定义如下:
和2019年的样本相比，针对杀软而采取不同释放文件策略都不见了。每个前缀为active的函数执行逻辑是一样的，pinkAgain函数变成了4个参数，最后一个参数是是要释放的可执行文件的名字，这个名字根据杀软的类型来决定。我们目前发现这个值好像是固定的。PinkAgain函数会根据当前系统中的杀软名字来决定释放文件的方法。不论当前系统中安装了什么类型的杀软，代码的执行逻辑都是一样的。最终用都是调用CopyExeAsTxt函数，CopyExeAsTxt会解码和解压传递进来的字符串然后在Statrtup目录释放一个名字为winstr.jpg的文件，然后将winstr.jpg重命名为winstr.exe。相关代码如下:
释放出来的文件的原始文件名是officetool.exe,这个文件的功能是定期的更新恶意代码。如下图:
main函数的如下代码如下:
GetThridStrike
还会从https[:]//londonkids.in/echoolz/assets/css/front/hwo/html/下载一个HTA文件，将其命名为duoApp1.hta,然后执行这个文件。
duoApp1.hta会释放出来 DUser.dll,streg.bat,
winidr.exe。同时duoApp1.hta还会将系统文件credwiz.exe拷贝到C:\ProgramData\AnyDeks\credwiz.exe。winidr.exe仍然是一个使用Delphi开发的开源backdoor,这一点没有变化。
#### 2.3.3 我们发现了一个”巢穴“
就在我们即将写完报告时，我们发现了mmfaa[.]ddns[.]net网站。这个网站的主页伪装成阿富汗的新闻网站。仔细观察源代码后，我们发现页面中的内容是固定的,很多链接是不会变化。
我们探测到这个网站有三个特殊的目录：
  * https[:]//mmfaa[.]ddns[.]net/test
  * https[:]//mmfaa[.]ddns[.]net/classifieds
  * https[:]//mmfaa[.]ddns[.]net/classification
在这三个目录下都存在相同的C&C server 框架。从登陆界面显示判断这套C&C server
框架似乎叫"Crusade"。这三个目录下都存在tmp、downloads目录。tmp主要是存放一些木马文件，downloads则存放的是受害者的电脑上的文件。这些文件包括一些图片，文档，键盘记录日志等。
我们还发现了其他类似的目录：
  * http[:]//mfahost.ddns.net/classical/
  * http[:]//164.68.108.22/cruisers/
  * http[:]//164.68.108.22/crus/
  * http[:]//mffatool.ddns.net/knightrider/
  * http[:]//173.212.224.110/krowd/
在这个网站的classifieds\temp目录下，我们发现了大量的样本。这个目录中包含的winidr.exe文件正是我们前面分析的文件。
在这些文件中我们发现了6个HTA文件，从这些HTA文件中我们发现了至少3个prebothta.dll的变种:
这些变种的发现也改变了我们一些认知，在此之前我们一度怀疑是不是有多个不同的组织在使用这套TTPs。C#开发的程序很容易反编译，有一定技术能力的攻击组织可以重新利用这些代码。在同一个服务器上发现了这么多的变种改变了我们的判断。
这些目录中包含了很多的恶意代码，这些恶意代码也一定程度上反映了这个组织在变换自己的攻击手法。从部分PDB路径就可以快速的识别恶意代码的功能:
D:\Projects\C#\Chromer\Chromer\obj\Debug\charmi.pdb
C:\Users\Monkey\source\repos\hijacker\Release\MeterPreter.pdb
C:\Users\nomi\Desktop\ReverseShell\Release\ReverseShell.pdb
c:\Users\Zombie\Desktop\ReverseRat
client\ReverseRat\ReverseRat\obj\Release\svchostt.pdb D:\Projects\C#\HTTP-Simple\WindowsMediaPlayer - HTTP - 02-23-2021
Current\WindowsMediaPlayer10\obj\x86\Release\winow4.pdb
值得一提的是winow4.exe是一个C#开发的远控，它伪装成播放器。部分代码代码如下:
关键代码如下：
我们发现一个名字为winow.exe的文件，这个文件使用delphi语言开发。它的功能和C#开发的winow4.exe的功能是一样的，部分代码如下：
这个网站的目录下存在多个我们前面提到了名称为“AllaKore_Remote“后门的变种，这些变种大多数的文件名字大多是以"win"开头，但有一个变种的文件名是"Cyrus_Client.exe",我们推测攻击组织对这个后门的命名应该是"Cyrus"。我们观察到卡巴斯基对这个后门的变种所报的病毒名为"HEUR:Backdoor.Win32.Cyrus.gen"。
我们还在这个网站上发现了一个受害者的列表：
这些数据都是2019年到2020年间收集的，受害者有100多个。对这些IP统计后发现受害者大部分位于阿富汗，有少量的印度、巴基斯坦、中国等国家。