com.vivo.game
com.zte.aliveupdate
com.miui.system
com.transsion.appupdate
com.rahul.videoderbeta
Cert Thumbprint
b0d2737aa9070973f8b66755f9cd32d98fd0bd83
82f0e9ff5dd5ad52cf74eb5e7189a3278ca76358
be135353437d704f3a37e2b413d040a5ddff4f19
8f8360b284a2dfd65dffe47acbd64ffff674cfee
28af6c75244a9cbd3f8aee304c425cdc1c66bc6c
283d60ddcd20c56ea1719ce90527f1235ae80efa
1ef46c04828e8994daab682bfe3211cae775a2b4
7b6dc7079c34739ce81159719fb5eb61d2a03225
37f3837469049e6022f3248b84372badb77d1a1e
9816a59361ccd7c33542205da5c7178f32f38042
GP










Plt.

(cid:88)


(cid:88)
(cid:88)

(cid:88)
(cid:88)

SDR
IP
IDR
(cid:88) 82.4% 71.4%
0.6% 50.0%

0.1% 42.6%

(cid:88)
3.3% 18.5%
(cid:88)
0.0% 10.5%
(cid:88)
0.4% 10.5%
(cid:88)
1.5% 10.4%
9.1%
0.3%

8.9%
0.5%

1.1%
8.3%

Pkg
12
12
28
23
30
18
31
11
25
21
Children
Sig
11
12
30
23
28
17
23
11
24
21
GPR
0.0%
41.7%
14.3%
17.4%
60.0%
0.0%
29.0%
63.6%
84.0%
9.5%
apps. The apps in the Other category are installed from
multiple alternative markets where they are quite popular.
Now we investigate whether those installs could have hap-
pened without user consent. While we do not know if there
was user consent, we can determine that in some cases there
had to be, as the installer lacks the necessary permissions for
silent installations. Column IP in the table captures whether at
least one APK from the installer have a VT report stating that
it requests the Android system-level INSTALL PACKAGES
permission in their manifest. This permission is a pre-requisite
for performing installs without user consent. The results shows
that half of the installers have that permission and thus could
perform silent installs if they wanted. Note that having the
ability to perform silent installs does not mean they use it. We
further discuss this issue in Section VIII.
Takeaway. The top unknown unwanted installers often dis-
tribute apps not available in the Play market. Among these,
cn.feelcool.superﬁles clearly stands out distributing almost
exclusively unwanted apps not
in the Play market. Seven
of these installers likely come pre-installed indicating PPI
agreements with vendors and carriers. Of the pre-installed
installers, ﬁve can perform installations without user consent.
However, we do not know whether they use that capability.
VII. RELATED WORK
Several studies have quantiﬁed malware in Google Play
Store [24], [74] and third-party markets [53], [57], [77].
In comparison, our work measures malware distribution via
multiple channels like the Play market store, alternative mar-
kets, browsers, IM, and PPI services. Prior work has an-
alyzed Windows malware distribution through underground
pay-per-install services [23], drive-by downloads [38], [58],
free streaming services [59], and download portals [35], [60].
Results from these studies do not necessarily extrapolate on
Android due to inherent platform differences.
Prior academic work identiﬁes emerging trends in the An-
droid malware ecosystem [31], [48], [70], [71], [82]. Suarez-
Tangil et al. [71] conducts a behavioral analysis of 1.2M An-
droid malware samples collected from malware feeds, over a
period of eight years (from 2010-2017). We measure malware
families prevalence on real devices while prior work uses
malware feeds that may be biased towards highly polymorphic
families. Yearly industrial threat reports analyze new threats
in the Android malware ecosystem [7], [9], [10], [12]. A
comparison is difﬁcult since they measure prevalence by
number of detections and not by number of devices.
Other works have analyzed mobile advertising libraries
including information leaks [29], [68], [69] and defenses
against ad fraud [30], [65]. In our work, we observe a large
prevalence of Ad libraries among AV detections.
Few studies have analyzed malware prevalence and dis-
tribution on real Android devices [33], [61], [67]. Recently,
Gamba et al. [33] analyzed pre-installed apps in 2.7K An-
droid devices. They discover that a signiﬁcant fraction of
pre-installed software exhibits potentially unwanted behavior
like personal data collection and user tracking. Our work
considers pre-installed bloatware as one distribution vector
and compares it with other vectors. Furthermore, our device
dataset is three orders of magnitude larger. Roundy et al. [61]
propose an approach for detecting stalking apps. They evaluate
the detection on 50M Android devices, during the period of
2017–2019, discovering 855 stalking apps in 172K devices.
Our analysis, in comparison, uses a smaller device dataset for
a fourth-month period. However, we analyze a large variety
of threats against users.
VIII. LIMITATIONS
In this section, we discuss limitations of our work and
possible avenues for improvement.
Selection bias. Our dataset presents some selection bias worth
revisiting. First, the reputation logs only include devices with
an AV installed. Devices without an AV may have a different
prevalence of unwanted apps, which we hypothesize may
be somewhat larger. For example, the AV client may block,
or alert the user about, some unwanted installers, reducing
the number of unwanted apps they would otherwise install.
Thus, our prevalence estimates may be conservative when
considering all mobile devices. Second, the geographic distri-
bution is skewed towards countries where the security vendor
has a larger market share. We observe some large countries
like China, Indonesia, Pakistan, Bangladesh, and Nigeria may
be underrepresented, but we still have tens of thousands of
devices in China and several thousands in the others. Third,
to avoid assigning unwanted installs to benign installers we
focus our distribution vector analysis on the 412M (24%)
install events for which we can recover the parent’s signer.
This selection could be biased towards unwanted installers
since they have a shorter TTL that helps in the recovery. This
could bias VDR absolute numbers. To avoid this selection
bias, we also present relative VDR values. In addition, we
repeat the distribution vector analysis using the Full dataset
of 1.7B install events (Table XI in the Appendix). Using the
Full dataset some unwanted installs could be wrongly assigned
to benign installers, but selection bias should be removed.
Both sets of results are very similar, indicating that the Subset
dataset has no signiﬁcant sampling bias.
Pre-installed apps. Previous works have considered pre-
installed apps to be the ones installed under the /system/
directory in an Android device [33]. Unfortunately, our dataset
does not include the APK’s installation path. In this work,
we use two proxies to analyze pre-installed apps. First, apps
signed by the device’s platform key are very likely pre-
installed. Second, we classify as bloatware those apps signed
by a carrier or device vendor for which we cannot identify their
goal, but observe user reports labeling them as bloatware. We
believe such bloatware is very likely to have been pre-installed.
Still, in both cases we cannot fully guarantee the apps were
pre-installed, so we are cautious and only say they may be.
User consent. The reputation logs do not directly capture if
an install had user consent. To understand which installers
may perform installs without user consent, we have examined
apps that request the INSTALL PACKAGES permission, a
prerequisite for silent installs. Unfortunately, a request for
this permission does not necessarily mean that the app is
performing silent installs. One caveat is that the app may have
the permission, but may not use it, although that could change
at any app update. Another caveat
the permission
may not be granted, e.g., for user-level apps. Still, requesting
the permission may indicate an interest in performing silent
installs (e.g., in rooted devices).
Play presence. We only checked the presence of apps in the
Play market once during February 2020. Some apps may have
been available in the past, but had since been removed when
we queried them, making our 24% estimate a lower bound.
Prior work has shown that nearly half of all apps are removed
from Play during a two year period and that privacy violations
are an important reason for those removals [76]. Thus, our
lower bound may be conservative, especially for unwanted
apps, which may be more likely to be removed. Another caveat
is that we only query the Play market by package name and do
not check if the certiﬁcate of the app in the market matches the
one in our dataset. Thus, we may say an app was in the market
even if there is a certiﬁcate mismatch. Our methodology of a
single query for each app at a ﬁxed point in time, and using
is that
solely the package name, is the same used to estimate that only
9% of pre-installed apps are present in the Play market [33].
Since 87% of all installs come from Play, it makes sense that
our prevalence is a larger 24% as the ratio is expected to
increase over the device lifetime.
Malware vs PUP. Our classiﬁcation using AVClass shows
that 60% of unwanted APKs are PUP and 40% malware,
although the prevalence of both classes is almost identical.
PUP prevalence could in reality be larger as AVClass by
default considers a sample is malware, i.e., a sample is PUP
only if enough grayware related keywords are found in its
labels. Thus, it could underestimate PUP samples. Overall, our
results highlight the importance of PUP in Android. However,
as we discuss in Section II-C, more research is needed into
how to cleanly delineate the boundary between PUP and
malware, especially on Android.
Publisher clustering. A publisher could use multiple app
signing keys and certiﬁcates. We did not cluster certiﬁcates
from the same publisher because we only had app meta-
data available. Prior approaches have leveraged the Subject
DN [47], which in Android can be spoofed. Publishers using
certiﬁcate polymorphism will be identiﬁed as multiple publish-
ers, possibly resulting in a lower DR. Developing a technique
to cluster signers is an interesting avenue for future work.
IX. CONCLUSION
This work performs an analysis on unwanted apps distri-
bution vectors on Android devices, including the ofﬁcial and
alternative markets, as well as secondary vectors such as Web
downloads, pay-per-install (PPI) services, bloatware, backup
restoration, and even instant messaging (IM) tools. We identify
that between 10% and 24% of users devices encounter at least
one unwanted app. We reveal that the Play market is indeed
the main app distribution vector of both benign and unwanted
apps, while, it has the best defenses against unwanted apps.
Alternative markets distribute fewer apps but have higher
probability to be unwanted. Bloatware is another surprisingly
high distribution vector. Web downloads are rare and much
more risky even compared to alternative markets. Surprisingly,
unwanted apps may survive users’ phone replacement due to
the usage of automated backup tools. Finally, we observe that
app distribution via commercial PPI services on Android is
signiﬁcantly lower compared to Windows.
ACKNOWLEDGMENTS
This research was supported by the Regional Government
of Madrid through grant BLOQUES-CM P2018/TCS-4339
and by the Spanish Government through the SCUM grant
RTI2018-102043-B-I00. This research received funding from
the European Union’s Horizon 2020 Research and Innovation
Programme under Grant Agreement No. 786669. Any opin-
ions, ﬁndings, and conclusions or recommendations expressed
in this material are those of the authors or originators, and do
not necessarily reﬂect the views of the sponsors.
REFERENCES
[1] Google Play Advertising ID.
https://support.google.com/googleplay/
android-developer/answer/6048248?hl=en.
[2] Google Play Protect. https://www.android.com/play-protect/.
[3] Iso 3166-1 alpha-2. https://en.wikipedia.org/wiki/ISO 3166-1 alpha-2.
[4] PSA:
System Apps.
Services Manager
disable Mobile
in
https://forum.xda-developers.com/galaxy-s9-plus/how-to/psa-disable-
mobile-services-manager-apps-t3764366.
backdoor,
coolpad
2014.
https://www.
The
[5] Coolreaper:
paloaltonetworks.com/apps/pan/public/downloadResource?pagePath=
/content/pan/en US/resources/research/cool-reaper.
[6] The Judy Malware: Possibly the largest malware campaign found on
Google Play, May 2017. https://blog.checkpoint.com/2017/05/25/judy-
malware-possibly-largest-malware-campaign-found-google-play/.
[7] 2018 mobile threat landscape, 2018. https://www.trendmicro.com/vinfo/
in/security/research-and-analysis/threat-reports/roundup/2018-mobile-
threat-landscape.
[8] Android ransomware: From android defender
to doublelocker,
2018.
https://www.welivesecurity.com/wp-content/uploads/2018/02/
Android Ransomware From Android Defender to Doublelocker.pdf.
2019.
crowdstrike mobile
landscape
[9] 2019
report,
threat
https://www.crowdstrike.com/blog/mobile-threat-report-2019-trends-
and-recommendations/.
[10] Android
security
and
privacy
2018
year
in
review,
2019.
https://source.android.com/security/reports/Google Android Security
2018 Report Final.pdf.
[11] Digital
turbine
results,
reports
June
2019
35bb1d6ea2a3024c2d067486da749df4/mandalaydigital/news/2019-
06-03 Digital Turbine Reports Fourth Quarter and Fiscal 577.pdf.
[12] Mcafee mobile threat report, 2019. https://www.mcafee.com/enterprise/
2019.
quarter
and ﬁscal
year
https://content.equisolve.net/
full
fourth
en-us/assets/reports/rp-mobile-threat-report-2019.pdf.
[13] Privileged permission whitelisting, 2020.
https://source.android.com/
devices/tech/conﬁg/perms-whitelist.
[14] H. Aghakhani, F. Gritti, F. Mecca, M. Lindorfer, S. Ortolani,
D. Balzarotti, G. Vigna, and C. Kruegel. When Malware is Packin’Heat;
Limits of Machine Learning Classiﬁers Based on Static Analysis Fea-
tures. In Network and Distributed Systems Security Symposium, 2020.
[15] K. Allix, T. F. Bissyand´e, J. Klein, and Y. Le Traon. AndroZoo:
Collecting Millions of Android Apps for the Research Community. In
International Conference on Mining Software Repositories, 2016.
[16] B. Andow, A. Nadkarni, B. Bassett, W. Enck, and T. Xie. A Study of
Grayware on Google Play. In IEEE Security and Privacy Workshops,
2016.
[17] Android.