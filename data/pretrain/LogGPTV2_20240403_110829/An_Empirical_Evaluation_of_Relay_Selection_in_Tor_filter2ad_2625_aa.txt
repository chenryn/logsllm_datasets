title:An Empirical Evaluation of Relay Selection in Tor
author:Chris Wacek and
Henry Tan and
Kevin S. Bauer and
Micah Sherr
An Empirical Evaluation of Relay Selection in Tor
Chris Wacek
Georgetown University
Henry Tan
Georgetown University
Micah Sherr
Georgetown University
Kevin Bauer
University of Waterloo
Abstract
While Tor is the most popular low-latency anonymity
network in use today, Tor suffers from a variety of perfor-
mance problems that continue to inhibit its wide scale adop-
tion. One reason why Tor is slow is due to the manner in
which clients select Tor relays. There have been a number
of recent proposals for modifying Tor’s relay selection algo-
rithm, often to achieve improved bandwidth, latency, and/or
anonymity. This paper explores the anonymity and perfor-
mance trade-offs of the proposed relay selection techniques
using highly accurate topological models that capture the
actual Tor network’s autonomous system (AS) boundaries,
points-of-presence, inter-relay latencies, and relay perfor-
mance characteristics.
Using realistic network models, we conduct a whole-
network evaluation with varying trafﬁc workloads to under-
stand the potential performance beneﬁts of a comprehen-
sive set of relay selection proposals from the Tor literature.
We also quantify the anonymity properties of each approach
using our network model in combination with simulations
fueled by data from the live Tor network.
1. Introduction
The Tor [11] anonymity network is used by hundreds
of thousands of daily users to improve the privacy of their
communication [25]. Recently, signiﬁcant effort has been
expended to improve Tor’s performance, which as the net-
work’s operators have pointed out [12], suffers from both
high congestion and latency. Such efforts have focused on
improving Tor’s circuit processing [3, 46], transport mech-
anism [28, 39], relay recruitment [22, 31], and—the subject
of this paper—relay selection [2, 42, 43, 49].
Tor exhibits high latencies partly due to the manner in
which clients select relays for their anonymous circuits (a
path of three Tor relays, selected in proportion to their band-
width). For example, a large fraction of Tor’s volunteer-
operated relays are located in the United States or Ger-
many [30, 47], requiring a typical client’s trafﬁc to make
at least one transoceanic trip.
Existing work has proposed methods of creating lower
latency anonymous circuits by carefully selecting relays to
reduce either link latencies [41, 42] or the geographic dis-
tance covered by anonymous paths [2]. Other work has
proposed that Tor clients be given the ability to tune the
selection of relays in a manner that allows clients to achieve
greater performance (by weighting more heavily toward
high-bandwidth routers) or greater anonymity (by weight-
ing selection more uniformly at random) [43]. Still addi-
tional work has attempted to decrease latency by avoiding
circuits that have high levels of congestion [49].
The Need for Realistic Tor Network Modeling.
De-
spite this growing body of research on path selection tech-
niques for Tor, none of the existing proposals have been
evaluated under conditions that accurately reﬂect those that
would be found on a live anonymity network. To illus-
trate, existing studies [43, 46] have shown that perfor-
mance gains achieved under modeling and simulation are
not present when the system is tested under more realistic
conditions [21, 32]. Although a particular algorithm may
show advantageous effects – even in the live network –
when adopted by a small number of clients and/or relays,
the technique may have unexpected negative consequences
on the network when adopted en masse.
There is thus a need to move beyond the consideration
of solely local effects (“if I adopt this algorithm, will it im-
prove my performance and anonymity?”) and consider po-
tential impacts on the network in toto (“what are the effects
if a large number of clients/relays adopts this strategy?”).
In short, we desire new methods and tools that (1) more re-
alistically model the Tor network and (2) enable more com-
prehensive performance and anonymity analyses.
Whole-network Tor Experimentation.
Through
whole-network experimentation using a state-of-the-art Tor
emulation framework armed with highly realistic network
models, this paper aims to better understand the potential
1
performance beneﬁts and anonymity risks of path selection
algorithms.
The primary contribution of this paper is a framework for
measuring performance and anonymity under realistic con-
ditions (Section 3). Our experimental methodology uses the
recently proposed ExperimenTor [4] emulator, running na-
tive Tor binaries on a synthetic network topology. To max-
imize realism, we construct topologies that capture Tor’s
bandwidth distribution, distribution of conﬁgurations, ge-
ographic diversity (both of relays and the most common
clients and destinations), AS and point-of-presence paths,
and pairwise latencies. The ability to execute unmodiﬁed
Tor code and operate on (emulated) networks that share
many characteristics with the live Tor network permits us
to more accurately predict how a proposed relay selection
strategy will behave on the live network. Importantly, our
framework allows us to measure multidimensional aspects
of both performance (i.e., throughput, latency, time-to-ﬁrst-
byte) and anonymity (i.e., frequency of relay selection, AS
path diversity).
Using this framework, we evaluate a set of recently pro-
posed relay selection techniques that we have integrated
into Tor (Sections 4 through 6). Our ﬁndings indicate that
several previously proposed methods are unlikely to pro-
duce desirable performance if widely adopted. We addition-
ally evaluate hybrid relay selection techniques that combine
aspects of existing approaches. Our results show that a hy-
brid strategy in which selection is biased in favor of band-
width and away from congested circuits provides the best
performance.
Contributions.
In summary, this work offers the fol-
lowing contributions to the ﬁeld of anonymous communi-
cations.
• We introduce a methodology for modeling the Tor net-
work, and present our resulting Tor network model that
includes the real Tor network’s AS boundaries, link la-
tencies, bandwidths, and relay conﬁgurations. We in-
stantiate this model within a state-of-the-art Tor net-
work emulation platform to realize highly realistic Tor
network experimentation.
• We implement a comprehensive set of relay selection
algorithms from the Tor literature in the Tor source
code and conduct an exhaustive performance analysis
to identify which path selection algorithm offers the
best performance under dynamic trafﬁc loads.
• We also simulate each router selection algorithm and
use real data from the live Tor network to evaluate the
anonymity implications of each respective approach.
• We ﬁnd that a combination of Tor’s bandwidth-
weighted relay selection and techniques that avoid
congested circuits results in the greatest improvement
in throughput and latency relative to Tor’s current de-
sign. Augmenting Tor with virtual-coordinate based
selection also suggests promising performance im-
provements. Furthermore, we ﬁnd that neither ap-
proach signiﬁcantly impacts anonymity.
2. Background
Relay Selection in Tor.
Tor is the third-generation onion
routing network and provides anonymous communication
to TCP-based applications [11]. Tor clients select a source-
routed circuit of precisely three Tor routers (sometimes
called relays) by querying any one of several authorita-
tive directories. After constructing a circuit, clients for-
ward trafﬁc through their circuits using a layered encryp-
tion scheme based on onion routing [17]. Upon receipt of a
ﬁxed-size unit of transmission (a cell), each router along a
circuit adds or removes a layer of encryption, depending on
the cell’s direction.
While early onion routing systems initially speciﬁed that
clients should select routers uniformly at random [45], it
became necessary to attempt to balance Tor’s trafﬁc load
over the available router bandwidth as the anonymity net-
work’s popularity increased. Tor performs load balancing
by weighting router selection in proportion to each router’s
perceived bandwidth capacity. Tor currently utilizes a set of
trusted Bandwidth Authorities which are responsible for ac-
tively probing the Tor routers and estimating each router’s
capacity [36]. Additional constraints are placed on router
selection, including the use of entry guards [35] for the ﬁrst
hop to defend against the predecessor attack [50] and exit
policies that specify the destination addresses and ports al-
lowed by an exit router’s operator. Recent work has also
suggested selection algorithms that incorporate users’ trust
over various parts of the network [23].
Despite Tor’s popularity with several hundreds of thou-
sands of daily Tor users [19], one of the primary roadblocks
to wide-scale Tor adoption continues to be its poor perfor-
mance. Prior work [12] has examined a number of factors
that contribute to Tor’s performance problems, including
undesirable inter-circuit interference due to TCP’s conges-
tion control [39], suboptimal ﬂow control at the application
layer [3], and imperfect load balancing which causes lower
bandwidth routers to handle too much trafﬁc.
Snader and Borisov offer reﬁnements to Tor’s router se-
lection policy that allow senders to tune the performance
of their anonymous paths by deﬁning the degree to which
relay selection is biased in favor of bandwidth [43]. How-
ever, follow-up work by Murdoch and Watson have found
that Tor’s default router selection algorithm offers a good
trade-off between performance and anonymity [32].
2
Other work has noted that Tor’s use of three often geo-
graphically distributed routers introduces yet another source
of high latency due to cell propagation over circuitous
routes; latency-informed router selection [42] using virtual
coordinate systems [8, 41] and minimal geographical dis-
tances between Tor routers [2] have been proposed as meth-
ods to optimize Tor circuits for low latency. However, to
date, no whole-network evaluation of either proposal has
been performed; thus, it is unclear how each path selection
algorithm affects performance when deployed at scale.
In this work, we seek to provide a unifying framework
for reasoning about the many different methods for router
selection that have been proposed in the literature and an
understanding of what techniques are effective.
Tor Evaluation and Modeling.
A large volume of ex-
isting work attempts to approximate the live network’s be-
havior, often as a means to evaluate a reﬁnement to the net-
work’s protocols or conﬁguration. At a high-level, efforts
at modeling Tor can roughly be organized into three cate-
gories: analytic, simulation, and emulation.
Analytic methods [5, 32] allow researchers to evaluate
reﬁnements to Tor’s protocols. However, accurately and an-
alytically modeling complex network effects (e.g., conges-
tion, jitter, etc.) remains an open problem. Indeed, existing
analytic approaches often ignore network effects entirely.
There are also a number of available Tor simulators [22,
32–34]. As with the analytic methods, existing simulators
fail to fully capture Tor’s complexities. (To highlight this
complexity, we note that recent versions of Tor have more
than 200 conﬁguration options.) In general, it is difﬁcult to
assess how well simulated behavior predicts the behavior of
Tor in an actual deployment.
More recently, Moore et al. [31] and AlSabah et al. [3]
use the ExperimenTor emulator [4] to respectively examine
alternative rate limiting and congestion/ﬂow control poli-
cies for Tor. However, their topologies do not model the
live Tor network’s latency, geography, or AS distributions.
Similarly, Jansen and Hopper [21] introduce the Shadow
framework for executing (slightly modiﬁed) Tor code on a
synthetic network. They sample the live network’s band-
width distribution, but conﬁgure geographic locations and
latencies only according to a sample of several PlanetLab
nodes.
Jansen et al. [20] extend their model to construct a net-
work graph that clusters hosts into geographical regions, as-
signs upstream and downstream bandwidths and loss rates
to hosts using measurements from Ookla Net Index, and uti-
lizes link latency and jitter data obtained from iPlane [27].
An algorithm for obtaining a “best ﬁt” approximation of real
Tor network’s relay bandwidth distribution is used to down-
sample and produce experimental Tor networks with 50 and
100 relays. One important limitation of this work, how-
ever, is that it does not attempt to model the Tor network
at the AS-level; as such, it cannot be used to conduct an
anonymity and security analysis of an AS-level adversary.
To the best of our knowledge, ours is the ﬁrst work that
attempts to model the distributions of latencies, bandwidths,
relay types, AS assignments, and geographies found on the
live Tor network. We apply our models both under simula-
tion (for scalability) and emulation (for realism).
3. Modeling the Tor Network
One of the difﬁculties inherent in testing new proto-
cols and technologies on the Tor network is the network’s
size: Tor has over 2500 relays and nearly 1000 bridges dis-
tributed globally. Certain types of research either cannot or
should not be tested on the live Tor network because they
either require large scale modiﬁcations to core protocols
(and hence are impractical to implement globally) or be-
cause they could unwittingly compromise the anonymity of
people who depend upon the network for their safety [44].
Technologies that make changes to the core Tor network
therefore require an experimental platform that can emulate
or simulate the characteristics of the live Tor network. There
are a number of critical characteristics that should be con-
sidered when evaluating the performance and anonymity of
an experimental technology:
the latency between Tor re-
lays; the bandwidth of individual Tor relays; and the distri-
bution of clients, relays, and destinations, both across ge-
ographies as well as autonomous systems (ASes). In what
follows, we describe how we construct (Section 3.1) and
verify (Section 3.2) scaled-down models of Tor that faith-
fully represent the live network’s distributions of latencies,
bandwidths, geographies, and AS memberships.
3.1 Topology Construction
Our goal is to create a reduced map of the Internet that in-
cludes the network locations of Tor relays as well as clients
and destinations, and supplies latency measurements be-
tween hosts.
A number of methods have been proposed for esti-
mating the latencies between arbitrary Internet end-hosts,
most notably IDMaps [15], the King method [18], and
iPlane [26, 27]. We evaluated the feasibility of these ex-
isting options and concluded that they were insufﬁcient for
our purposes. IDMaps estimates latencies between arbitrary
hosts by performing triangulation from strategically placed
Tracer nodes; however, no such service is currently in place
on the Internet. The King method relies upon recursive
DNS queries, which the majority of DNS servers currently
disable. iPlane has helpfully built and maintained a map of
the Internet based on autonomous system data. Using iPlane
data, we were able to construct AS level network topolo-
gies, but this unfortunately did not provide sufﬁciently ac-
3
curate latencies: we found that in many cases, real world
latencies between ASes are often small, while those across
ASes can be relatively large — the iPlane data did not cap-
ture this characteristic, resulting in unrealistically small la-
tencies within ASes. We additionally examined the iPlane
“point of presence” data to construct our own AS graphs,
but were unable to build a suitably connected graph using
their data.
Accurately modeling the Tor network. We desire a
“scale” model of the actual Tor network that accurately re-
ﬂects the network’s bandwidths and latencies, as well as
the locations of its clients, destinations, and relays. Since
no such model of the Tor network exists, we constructed
a compact network graph suitable for our emulation exper-
iments (see Section 6) using data from multiple available
datasets. We constructed our model of the Tor network at
the granularity of a point-of-presence (PoP), where a PoP is
roughly intended to represent an access point on the Inter-
net. We built our model of the Tor network as follows:
1. Latency normalization. To construct our model, we
utilize traceroute data from CAIDA [7].1 CAIDA col-
lects and makes available traceroute measurements to
most of the Internet’s /24 preﬁxes from geographically
and topologically diverse vantage points. We normal-
ize the traceroutes by removing all negative latency
hops; these occur when the traceroute data indicate that
the latency required for reaching a node b in a path se-
quence a → b → c is greater than that required to
reach node c in the same path.2 We normalize such oc-
currences by setting the time required to reach b to be