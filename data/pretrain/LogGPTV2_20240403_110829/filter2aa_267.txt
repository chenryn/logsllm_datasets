我的CS笔记之- In-memory Evasion 1
0x00 前言
周末温习了一下2018年，CS的作者制作的In-memory Evasion的系列视频。这是视频以前也是看过的，
但是没有做笔记，现在很多细节都有点模糊了。学习一定要做笔记。
In-memory Evasion，主要有5个视频，作者传到youtube的不能开启自动英文识别字幕，于是我重新传
了一下https://www.youtube.com/watch?v=FeydRT3UTVE&list=PLI7tp5mNfPSbgSBc0VpCNh7t98vw
JO0jv，可以开启英文字幕，作为一个会点哑巴英语的人，这个字幕真的拯救了我。目前国内技术资料比
以前是丰富了不少，但是质量也普遍堪忧，因此英文真的很重要。
言归正转，这5个视频其实可以分为4部分：
讲述常见的内存侦测手法(Memory Detections)，目前来看比较初级了
讲述CS里一个Payload的完整执行流程(A Payload's Life)
怎么使用CS逃逸这些侦测手法(Evasions)
如何来模拟一个APT组织的样本(Threat Emulation)
人们常见说，”以攻促防“，但是作为公鸡队，要知道”未知防、焉知攻“，学习防御方的侦测手段，才能
更好的提升公鸡技术。
0x01 常见的侦测手法
作者主要使用process hacker这个工具，从进程、线程、内存入手，来侦测CS的payload，因为CS大量
使用反射DLL，实际上也就在内存中侦测这些反射dll。我们先来process hacker。打开process 
hacker，选中一个进程，查看属性，首先是进程的各种信息：
数字签名
命令行
当前目录
开始时间
PEB地址
父进程
保护策略
我们再看线程，线程中我们主要关注的是开始地址、和开始地址模块：
Author: L.N. / Date: 2021-09-06 Produced by AttackTeamFamily
No. 1 / 4 - Welcome to www.red-team.cn
最后就是内存，主要关注的还是基址、内存大小、内存权限（Read、Write、Execute）、内存作用
（堆、栈、PEB、文件....）:
知道了这些，我们的侦测手法主要是3种：
线程开始地址
正常的线程开始地址，是有一个模块的。正常的DLL映射到内存中是有模块名称，而注入进去
的DLL就没有模块名称
Author: L.N. / Date: 2021-09-06 Produced by AttackTeamFamily
No. 2 / 4 - Welcome to www.red-team.cn
内存权限
正常情况下，内存属性基本没有RWX的情况，RWX常常被公鸡工具使用
内存内容
这个比较常见，就是提权beacon.dll的一些特征，在内存中去匹配。常见的就是使用各种yara
规则。
匹配dos头、pe头
各种字符串
代码中的一些函数等等
内存检测工具主要分为2种模式：
一次性扫描，常见的就是一些溯源工具，蓝队同学使用这些工具在受害机器上快速寻找植入体
长久驻留的杀毒软件
有Agent长期驻留
事件驱动，有新进程、新线程启动的时候扫一扫
关联分析
主动防御
常见的侦测工具的侦测点：
反射注入侦测
MZ头
Author: L.N. / Date: 2021-09-06 Produced by AttackTeamFamily
No. 3 / 4 - Welcome to www.red-team.cn
RWX内存
内存没有和一个模块关联
Get-InjectedThread.ps1工具
线程开始地址没有和一个模块关联
LOKI工具
扫描文件用yara规则
0x02 总结
这个就是In-memory Evasion 1这个视频，主要是讲一些简单的进程、线程、内存的知识、以及process 
hacker的基本使用。然后就是cs在内存种的异常指标，以及检测这些异常的工具的原理。目前来会看，
是比较基础的内存侦测手法，万丈高楼从地起，扎实的地基非常重要。作者还推荐了一些其他资料：
书籍：The Art memory Forensics
PPT：Advanced  Attack Detection (william Burgess and Matt watkins) 
Author: L.N. / Date: 2021-09-06 Produced by AttackTeamFamily
No. 4 / 4 - Welcome to www.red-team.cn