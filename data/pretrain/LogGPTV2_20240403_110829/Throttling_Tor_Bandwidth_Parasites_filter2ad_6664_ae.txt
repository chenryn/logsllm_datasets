### N23 Scheme: A Link-by-Link Flow Control Algorithm

The N23 scheme is a link-by-link flow control algorithm designed to enhance network performance. The adaptive N23 algorithm propagates information about available queue space to the next upstream router while dynamically adjusting the maximum circuit queue size based on outgoing cell buffer delays. This dynamic adjustment leads to a faster response to congestion. Experimental results indicate that the N23 scheme slightly improves response and download times for 300 KiB files.

### Transport Layer Enhancements in Tor

Tor's performance has been analyzed at the socket level, leading to suggestions for alternative data delivery mechanisms. One proposal involves using a UDP-based mechanism [56], while another suggests employing a user-level TCP stack over a DTLS tunnel [47]. Currently, Tor multiplexes all circuits over a single kernel TCP stream to minimize information leakage. However, the TCP-over-DTLS approach proposes separate user TCP streams for each circuit, with all TCP streams between two relays sent over a single kernel DTLS-secured UDP socket. This method ensures that a circuit’s TCP window is not unfairly reduced when other high-bandwidth circuits cause queuing delays or packet drops.

### Bandwidth Management

In this paper, we use a token bucket rate-limiter, a classic traffic shaping mechanism [55], to ensure that traffic conforms to desired policies. We now briefly discuss other approaches to bandwidth management.

#### Quality of Service (QoS)

Networks often aim to provide a certain quality of service (QoS) to their subscribers. Two main QoS approaches are Integrated Services (IntServ) and Differentiated Services (DiffServ).

- **Integrated Services (IntServ)**: In the IntServ model [11, 50], applications request resources from the network using the Resource Reservation Protocol (RSVP) [60]. The network must maintain the expected quality for its current commitments, so new requests may be denied if the network cannot provide the requested resources. This approach is not suitable for anonymity networks like Tor, as clients could request unbounded resources without accountability, and the network would struggle to fulfill most requests due to bottlenecks.

- **Differentiated Services (DiffServ)**: In the DiffServ model [9], applications notify the network of the desired service type by setting bits in the IP header. Routers then tailor performance toward an expected notion of fairness, such as max-min fairness [24, 34] or proportional fairness [20, 21, 35]. However, leaking information about a client’s traffic flows poses a significant privacy risk, and methods to provide differentiated service without such risks do not currently exist.

#### Scheduling Algorithms

Scheduling algorithms, such as fair queuing [15] and round robin [24, 25], affect the order in which packets are sent out of a given node but generally do not change the total number of packets being sent. Therefore, unless the sending rate is explicitly reduced, the network will still experience similar load regardless of the relative priority of individual packets. As explained in Sections 1 and 3, scheduling does not directly reduce network congestion but can cooperate with other bandwidth management techniques to achieve the desired performance characteristics of traffic classes.

### Conclusion

This paper analyzes client throttling by guard relays to reduce Tor network bottlenecks and improve responsiveness. We explore static throttling configurations and design, implement, and evaluate three new adaptive throttling algorithms. These algorithms select which connections to throttle and dynamically adjust the throttle rate of each connection using only local relay information. Our adaptive throttling techniques are more effective than static throttling because they do not require re-evaluation of throttling parameters as network load changes. We find that client throttling effectively improves performance for interactive clients and increases Tor’s network resilience. We also analyze the effects of throttling on anonymity and discuss the security of our algorithms against realistic adversarial attacks. Throttling enhances anonymity, as a guard’s bandwidth leaks more information about its circuits when throttling is disabled.

### Future Work

There are several directions for future research. Our current algorithms could be modified to optimize performance by improving the classification of bulk traffic and considering alternative strategies for distinguishing web from bulk connections. Additional rate-tuning approaches, such as using proportional fairness to schedule traffic on circuits, may further improve web client performance. An analysis of throttling in the context of congestion and flow control to determine the interrelation and effects of these algorithms is also of interest. Finally, a deeper understanding of our algorithms and their effects on client performance could be achieved through analysis on the live Tor network.

### Acknowledgements

We thank Roger Dingledine for helpful discussions regarding this work and the anonymous reviewers for their feedback and suggestions. This research was supported by NFS grant CNS-0917154, ONR, and DARPA.

### References

[References listed here as per the original document]

---

This revised version aims to provide a clearer, more coherent, and professional presentation of the content.