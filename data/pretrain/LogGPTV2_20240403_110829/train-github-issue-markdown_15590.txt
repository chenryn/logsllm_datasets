### Bug summary
Changing the parameter 'levels' when using contourf and a colorbar with
norm=colors.LogNorm has no effect on the final figure. '
### Code for reproduction
This code is inspired from the Colormap Normalizations example from
https://matplotlib.org/stable/gallery/userdemo/colormap_normalizations.html#sphx-
glr-gallery-userdemo-colormap-normalizations-py adding the norm=colors.LogNorm
parameter.
    import numpy as np
    import matplotlib.pyplot as plt
    import matplotlib.colors as colors
    N = 100
    X, Y = np.mgrid[-3:3:complex(0, N), -2:2:complex(0, N)]
    Z1 = np.exp(-X**2 - Y**2)
    Z2 = np.exp(-(X * 10)**2 - (Y * 10)**2)
    Z = Z1 + 50 * Z2
    fig, ax = plt.subplots(1, 2)
    pcm = ax[0].contourf(X, Y, Z, levels=10,
                       norm=colors.LogNorm(vmin=Z.min(), vmax=Z.max()),
                       cmap='PuBu_r')
    fig.colorbar(pcm, ax=ax[0], extend='max')
    pcm = ax[1].contourf(X, Y, Z, levels=20,
                       norm=colors.LogNorm(vmin=Z.min(), vmax=Z.max()),
                       cmap='PuBu_r')
    fig.colorbar(pcm, ax=ax[1], extend='max')
    plt.tight_layout()
### Actual outcome
The number of levels do not change even if the parameter 'levels' in contourf
is changed.
![Figure_1](https://user-
images.githubusercontent.com/40710281/149321276-61f9e0dc-5f26-473e-8462-49ca3f36ee09.png)
### Expected outcome
I expected to see that changing the 'levels' parameters in contourf actually
change the number of levels in the plot (to obtain the figures below: same
code has before but remove the norm=colors.LogNorm(vmin=Z.min(), vmax=Z.max())
parameter and plot X^2+Y^2 rather than Z).
![Figure_2](https://user-
images.githubusercontent.com/40710281/149321312-0b9054d5-95cd-4964-b2fe-a489089fed68.png)
### Additional information
_No response_
### Operating system
Windows 10
### Matplotlib Version
3.5.0
### Matplotlib Backend
Qt5Agg
### Python version
3.10.1
### Jupyter version
_No response_
### Installation
_No response_