Abusing Bleeding Edge Web 
Standards for AppSec Glory
Bryant Zadegan
Ryan Lester
Advisor/Mentor
CEO, Co-Founder
Mach37
Cyph
keybase.io/bryant
PI:EMAIL
@eganist
@TheRyanLester
‚Ä¢ Does AppSec stuff, 
usually.
‚Ä¢ Mentors security 
startups, sometimes.
‚Ä¢ ‚ÄúMentors‚Äù others on 
AppSec, occasionally.
‚Ä¢ Paid a buck to make Steve 
Ballmer dance, but just 
once.
‚Ä¢ Runs an E
2EE 
communication startup
‚Ä¢ Codes for an E
2EE 
communication startup
Ran QA automation at a 
‚Ä¢
rocket factory
Got sued by Napster (and 
‚Ä¢
not for piracy) 
Bleeding Edge Web Standards
For Your (Ab)use, we'll talk about these:
But Why?
Source: Harold & Kumar Go to White Castle
‚Ä¢ New standards are
frequently drafted.
‚Ä¢ Many introduce
unforeseen
complications.
‚Ä¢ Novel uses 
encourage
future 
tweaks.
S
R
I
‚Ä¢ Validate resources beyond your trust (e.g. CDNs)
‚Ä¢ caniuse.com/subresource-integrity
S
R
I
‚Ä¢ Validate resources beyond your trust (e.g. CDNs)
‚Ä¢ caniuse.com/subresource-integrity
BUILDER DEMO
heisenberg.co/srifallbackdemo/
Kneel to the demo gods
SOURCE (Simplified BSD)
github.com/cyph/sri-fallback
Do source gods even exist?
CSP
‚Ä¢ Combines semi-strict header with strict 
.
‚Ä¢ Allows for pre-loading of trusted complex 
logic.
‚Ä¢ Does not work for the verbs frame-
ancestors, report-uri, or sandbox.
BUILDER DEMO
heisenberg.co/metacspdemo/
Fall on thy sword for the demo gods.
CSP
Considerations
‚Ä¢ Static content only 
in initial response!
CSP
‚Ä¢ Best for adapting a semi
-recent application for 
use with CSP.
‚Ä¢ Application
‚Äôs trusted static logic is allowed to 
execute on initial load.
‚Ä¢ Meta
-Hardening prevents dynamic content 
from potentially executing later on.
‚Ä¢ This can break
sites. Use 
!
‚Äì (Chrome 46+ only; no reporting in Firefox üòê)
Public-Key-Pins
: 
max-age=5184000; includeSubdomains; 
pin-sha256="az9AwClWuHM+fYV+d8Cv9B4sAwdcoUqj93omk18O/pc=";
pin-sha256="5UONcYAsFtYscIlFlm4+aodoL20RRHzGaOeoSNEZ+iA=";
"https://report-uri.io/report/[id]/reportOnly"
‚Ä¢ caniuse.com/hpkp
Deliberate self-bricking via HPKP + Rapid Key Rotation.
Let's spend 20 minutes on how we can use this:
‚Äì to enable in browser code signing
‚Äì to control content changes and harden SRI.
‚Äì to enable nuanced web content blocking. (NetSec)
‚Äì to track users‚Ä¶
‚Äì to be total jerks‚Ä¶
...in ways we shouldn't put in print.
(Thanks Jann Horn @ Cure53 for putting us onto this!)
Wait, in-browser code signing? No extensions?
In theory.
In the last slide‚Äôs content pinning scheme, code signing 
logic goes in the ServiceWorker.
This effectively gets us Trust On First Use for current and 
future code.
Why ‚ÄúIn theory‚Äù? This sounds like it should work.
In fact, Cyph employs a mature, audited implementation of 
exactly this.
However, it was considered so novel that we had to apply for a 
patent on it.
But, you can come close to this for free if you‚Ä¶
Control local storage updates! Harden SRI!
‚Ä¢ Set HPKP max-age to count down to your 
deployment date. 
‚Ä¢ Rotate routinely.
Benefits:
‚Ä¢ Retain control of front-end content between 
releases.
‚Ä¢ Mitigate risks of SRI hash tampering server-
side. 
Considerations:
‚Ä¢ HPKP Suicide + SRI is a design-time decision! 
‚Äì Single Page Apps (SPAs) only
BUILDER DEMO
redskins.io
I don't believe in demo gods
Web Content Gateway e.g. [SomeVendor]? 
Lock your users out of sites even when they're not 
on your network! 
1. For flagged domains, set HPKP headers.
2. Optionally, Rotate keys weekly at the gateway.
Done! (By us disclosing it, is this now prior art? )
Oh...
https://crt.sh/?id=19538258
Issuer:
commonName
= VeriSign Class 3 Public 
Primary Certification 
Authority - G5
Subject:
commonName
= 
organizationalUnitName = Symantec Trust Network
organizationName
= "Blue Coat Systems, Inc."
User tracking?
Well, we really shouldn't talk about this‚Ä¶
But since this is DEF CON...
‚Ä¶let's track users!
Pre-requisites:
Lots of (sub)domains to pin
Browsers that allow HPKP incognito
Rapid Key Rotation
(Thanks! )
Server-side
‚Ä¢ /set: Returns HPKP header
‚Ä¢ /check: No-op ‚Äî no HPKP header, status code 200
Client-side (JavaScript)
‚Ä¢ Set new ID: Hit /set on random subset of domains
‚Ä¢ Check ID: Hit /check on all domains; note failures
BUILDER DEMO
cyph.wang
I don't believe in demo gods
Not implemented by Google. 
We only ran the script in console.
Not implemented by Reddit. 
We only ran the script in console.
Considerations:
Risk: DoSing tracker domains as a public service
1.
Domain whitelist for your own tracker, or
2.
App-issued and tracker-verified nonce if analytics is your 
business model.
The pattern described is similar to others here:
https://tools.ietf.org/html/rfc7469#section-5
SOURCE (New BSD)
github.com/cyph/hpkp-supercookie
Do source gods even exist?
‚Ä¶to be total jerks?
we really shouldn't talk about this‚Ä¶
Hat Tip
To Geller Bedoya, DigiCert, @el_d33, Jonn Callahan, Jann Horn and all of Cure53, 
Samy Kamkar, Jim Manico, Mike McBryde, Jim Rennie and his superb legal skill, 
Garrett Robinson, John Wilander, Doug Wilson, as well as the Chrome, Firefox, 
and Let's Encrypt security teams for their contributions.
github.com/cyph/appsec-glory
Bryant Zadegan
Ryan Lester
Advisor/Mentor
CEO, Co-Founder
Mach37
Cyph
keybase.io/bryant
PI:EMAIL
@eganist
@TheRyanLester