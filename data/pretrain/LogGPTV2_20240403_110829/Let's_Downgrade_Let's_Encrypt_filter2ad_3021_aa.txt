title:Let's Downgrade Let's Encrypt
author:Tianxiang Dai and
Haya Shulman and
Michael Waidner
Let’s Downgrade Let’s Encrypt
Tianxiang Dai
ATHENE Center
Fraunhofer SIT
Germany
Haya Shulman
ATHENE Center
Fraunhofer SIT
Germany
Michael Waidner
ATHENE Center
TU Darmstadt & Fraunhofer SIT
Germany
ABSTRACT
Following the recent off-path attacks against PKI, Let’s Encrypt
deployed in 2020 domain validation from multiple vantage points to
ensure security even against the stronger on-path MitM adversaries.
The idea behind such distributed domain validation is that even
if the adversary can hijack traffic of some vantage points, it will
not be able to intercept traffic of all the vantage points to all the
nameservers in a domain.
In this work we show that two central design issues of the dis-
tributed domain validation of Let’s Encrypt make it vulnerable to
downgrade attacks: (1) the vantage points are selected from a small
fixed set of vantage points, and (2) the way the vantage points select
the nameservers in target domains can be manipulated by a remote
adversary. We develop off-path methodologies, based on these ob-
servations, to launch downgrade attacks against Let’s Encrypt. The
downgrade attacks reduce the validation with ‘multiple vantage
points to multiple nameservers’, to validation with ‘multiple vantage
points to a single attacker-selected nameserver’. Through experi-
mental evaluations with Let’s Encrypt and the 1M-Let’s Encrypt-
certified domains, we find that our off-path attacker can successfully
launch downgrade attacks against more than 24.53% of the domains,
rendering Let’s Encrypt to use a single nameserver for validation
with them.
We then develop an automated off-path attack against the ‘single-
server’-domain validation for these 24.53% domains, to obtain fraud-
ulent certificates for more than 107K domains, which constitute
10% of the 1M domains in our dataset.
We also evaluate our attacks against other major CAs and com-
pare the security and efforts needed to launch the attacks, to those
needed to launch the attacks against Let’s Encrypt. We provide
recommendations for mitigations against our attacks.
CCS CONCEPTS
• Security and privacy → Network security.
KEYWORDS
PKI, BGP hijacks, DNS Cache Poisoning, Server Selection
ACM Reference Format:
Tianxiang Dai, Haya Shulman, and Michael Waidner. 2021. Let’s Down-
grade Let’s Encrypt. In Proceedings of the 2021 ACM SIGSAC Conference
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea
© 2021 Association for Computing Machinery.
ACM ISBN 978-1-4503-8454-4/21/11...$15.00
https://doi.org/10.1145/3460120.3484815
on Computer and Communications Security (CCS ’21), November 15–19,
2021, Virtual Event, Republic of Korea. ACM, New York, NY, USA, 20 pages.
https://doi.org/10.1145/3460120.3484815
1 INTRODUCTION
Identifying the legitimate owner of a domain plays a central role in
the security of Public Key Infrastructure (PKI). It prevents criminals
from obtaining fraudulent certificates for domains that they do not
own. Prior to issuing certificates the Certificate Authorities (CAs)
run domain validation (DV) against services in a domain that is
to be certified, to verify that the domain owner de-facto controls
the domain. To verify control a CA generates a challenge which
the domain owner should integrate into the selected service in a
domain, e.g., add the challenge in a TXT record to the zonefile of
the domain or add the challenge to a directory of the website in
the domain. The CA then checks the presence of the challenge
by querying the selected service in the target domain. Since the
challenge was sent to the domain, a genuine owner can receive it
and hence can respond correctly. In contrast, an off-path adversary
that does not control the domain, cannot receive the challenge and
therefore should not be able to respond correctly.
Domain validation from single vantage point is vulnera-
ble. Recently [14] showed an off-path attack against domain valida-
tion of popular CAs: the attacker hijacks the challenge sent by the
CA to the domain during the validation of control over the domain.
This allows the attacker to respond with the correct challenge and
demonstrate control over a domain that it does not legitimately
own. The significance of PKI for Internet security, coupled with the
risks that the attacks introduced, triggered efforts to improve the
security of domain validation.
Man-in-the-Middle secure distributed domain validation.
Let’s Encrypt was the first CA to react quickly to the disclosed
vulnerabilities. It initiated efforts to enhance the security of DV
even against on-path Man-in-the-Middle (MitM) adversaries, stan-
dardising a mechanism called ACME in 2019, [RFC8555] [13], and
in 2020 it deployed in production environment a mechanism called
multiVA [36] - domain validation with multiple Validation Author-
ities (VAs). Initially Let’s Encrypt set up four VAs, each running
a DNS resolver software for looking up resources in domains and
for validating control over domains. Upon request for a certificate,
the VAs perform lookup of the target domain by sending queries
to the nameservers and then concurrently validate control over
the domain. Each VA receives the set of nameservers and their IP
addresses from the parent domain. The VA then randomly selects a
nameserver to which the query is sent. If the majority of the VAs
receive the same results, DV succeeds, and the certificate is issued.
Otherwise, the request fails. Let’s Encrypt shows that their setup
with multiVA provides security for DV even against MitM adver-
saries: the intuition is that realistic MitM adversaries are limited in
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1421their power, and can control or hijack some, but not many of the
Internet networks. Recently [15] performed simulations to show
that the diverse vantage points of multiVA allow to detect 94% of
the BGP prefix hijack attacks during DV, making more than 90% of
the ASes in the Internet topologically incapable of launching BGP
attacks against the majority of domains. This is in contrast to the
previous deployment of Let’s Encrypt, where most domains were
vulnerable to prefix hijacks during DV.
Off-path attacks against Let’s Encrypt. The core issues which
expose domains to downgrade attack are a side effort of server
What about the multiple nameservers? In this work we show
that in addition to considering the vantage points as in [14, 15], it
is important to also consider the domain side of domain validation.
The analysis in [15] used a single IP address for each domain. Nev-
ertheless, instead of intercepting the query from the vantage point,
the adversary can also intercept the response from the domain.
This appears to expose domains to practical attacks during DV. In
practice, however, hijacking the domain is challenging: domains
have multiple nameservers, in fact, some domains have even more
than 30 nameservers, see Figure 1 in Section 2. Hence the situation
becomes very complex even for a MitM adversary. To demonstrate
control over a target domain the attacker would need to hijack
multiple challenges, sent by the vantage points. To complicate the
situation further, these challenges are not sent all to the same name-
server, but each vantage point selects the nameserver, to which
the challenge is sent, uniformly at random. If the attacker cannot
anticipate which vantage point sends a query to which nameserver,
to beat the domain validation it would have to craft multiple differ-
ent responses. That indeed should make the attack against all the
vantage points for all the nameservers impractical, even for strong
on-path adversaries.
‘The Downgrade’ attack. In this work we develop a downgrade
attack that reduces the multiVA validation against real domains
that have multiple nameservers, to a validation against domains
with a single nameserver. Our attack is based on two observations:
(1) a functionality in VAs, designed to enhance security and per-
formance, can be manipulated by network adversaries remotely
and (2) Let’s Encrypt uses a small and fixed set of VAs. The former
manipulates the server selection by the VAs, causing the multiVA
to execute against a single nameserver, one which all the VAs select
for validation and lookups. The latter allows launching targeted
efficient attacks against the VAs in advance, as a preprocessing step,
before initiating the attack to obtain fraudulent certificates.
We show that combining our two observations the network ad-
versaries can eliminate the multiple VAs to multiple nameservers
effect, creating a ‘multiple VAs to single nameserver’ situation...
which is no longer secure against MitM adversaries. In the course
of the attack we cause the VAs to eliminate the nameservers from
the list of usable servers, leaving only a single available name-
server. Worse, we show that the attacker can not only reduce the
validation to one arbitrary nameserver, but force all the VAs to
query a specific nameserver of attacker’s choice, one which has
a vulnerability that can be exploited by the attacker, e.g., server
with unpatched software or server that can be attacked with side
channels or fragmentation, [18, 46]. In this work, as an example,
we select servers whose BGP prefix the attacker can hijack via
sub-prefix hijack attacks.
selection functionality of Let’s Encrypt. To exploiting them against
a specific victim domain the adversary needs to introduce a pattern
into the responses from the nameservers. When the VAs receive a
certain pattern of missing responses they block the nameservers.
We explain that there are different ways to exploit this vulnerability
and introduce a pattern into the responses, e.g., with a compromised
router which selectively drops or manipulates some specific packets.
We show how to exploit this vulnerability even with an off-path
adversary.
We develop ‘server-elimination’ methodologies to introduce
losses according to specific intervals, causing all the VAs to query
just one nameserver, selected by the attacker. Some of our method-
ologies assume specific properties in domains, such as rate limiting,
and hence can be launched only against the domains which have
these properties, e.g., 24.53% of Let’s Encrypt-certified domains, see
Section 3. We also developed a generic server-elimination method-
ology, which applies to all the domains. This method however
requires generating much more traffic than the other methods. Fur-
thermore, as we mentioned the vulnerability in the CAs that allows
downgrading the number of nameservers in a domain can also be
exploited with stronger adversaries.
Fraudulent Let’s Encrypt certificates. After downgrading val-
idation with domains to a single nameserver, we launch attacks to
prove control over domains that off-path adversaries do not own
and obtain fraudulent certificates for these domains.
We compare the security of Let’s Encrypt to that of other pop-
ular CAs and show that the downgrade attack eliminates the se-
curity benefits introduced by multiVA. In fact, we found all the
CAs equally vulnerable to our attacks. This implies that the vali-
dation of all the CAs in our dataset can be downgraded to a single
server in any Internet domain. We run a complete attack against
the domains in our dataset that have properties which allow our
off-path server-elimination, and force the validation to run against
a single nameserver, which sub-prefix can be hijacked. This con-
stitutes 10.6% of our 1M dataset. We proceed to obtain fraudulent
certificates for these 108K domains.
Ethical considerations. Our attacks, evaluations and measure-
ments were ethically carried out against CAs and domains in our
dataset. We notified Let’s Encrypt about the downgrade attacks.
Contributions. We make the following technical contributions:
• We develop a taxonomy of nameserver elimination method-
ologies which force the VAs of Let’s Encrypt to query a nameserver
of attacker’s choice. One methodology is generic, it uses low-rate
bursts to cause packet loss and applies to any nameserver in any
domain. We did not evaluate this methodology in the Internet since
it adversely affects communication from other sources with the
nameservers. The other two methodologies require that the name-
servers apply rate-limiting or fragment responses, and generate less
traffic. We evaluate them on our dataset of domains to show that
more than 20% of 1M-top Alexa domains1 and 24.5% Let’s Encrypt
domains are vulnerable. We show that our methodologies, with
slight modifications, apply also to other popular CAs. Our server
elimination methodologies potentially have a wider application
scope. For instance, they can be applied to redirect clients to the
1Of 1M-top Alexa domains, 857K-top domains were responsive, without errors.
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1422wrong server, introducing traffic fluctuations to the load balancing
that the CDNs and cloud platforms use.
• Our server-elimination methodologies exploit properties in
nameserver selection of DNS implementations. We perform anal-
ysis of nameserver selection in Unbound, ‘reverse engineer’ its
behaviour and show that it can be remotely manipulated to cause
DNS resolvers to block nameservers.
• To evaluate our attacks ethically we develop a two-sided method-
ology. In contrast to prior work which performed simulations or
evaluated attacks only in a lab setup, our evaluation methodol-
ogy allows to launch and validate real attacks in two steps. We
first attack the target CA with a victim domain that we own. Our
adversarial host, located on a different network than the victim
domain, obtains a fraudulent certificate for the victim domain. This
allows us to evaluate the vulnerability and applicability of the attack
against Let’s Encrypt, yet without issuing fraudulent certificates
for real victim domains. In a second step, we reproduce the setup of
Let’s Encrypt on our networks, with all the relevant components,
and launch automated attacks against our dataset of Let’s Encrypt-
certified victim domains, issuing fraudulent certificates for these
domains with a CA controlled by us. This second step allows us to
identify victim domains to which our attacks apply. If the attack
applies in both steps, it also applies when launched against the CA
and the victim domain in real life. Our evaluation methodology
has wider applicability, it can enable ethical evaluations of other
attacks yet without causing damage to real victims. For instance, it
can be used to evaluate different types of Denial of Service (DoS)
attacks, such as fragmentation based DoS attacks.
• Our work shows that validation from multiple locations, al-
though the right way to go, is not trivial, and requires care to avoid
pitfalls. We provide recommendations for preventing our attacks.
Organisation. In Section 2 we develop our downgrade attack
against Let’s Encrypt. We develop and evaluate nameserver elim-
ination methodologies in Section 3. In Section 4 we demonstrate
attacks against Let’s Encrypt to issue fraudulent certificates and
evaluate them against a dataset of 1M domains certified by Let’s
Encrypt. We provide recommendations for countermeasures in Sec-
tion 5. Comparison to related work is in Section 6. We conclude
this work in Section 7.
2 THE DOWNGRADE ATTACK
We develop a downgrade attack against Let’s Encrypt to reduce
the ‘multiple VAs to multiple nameservers’ validation to ‘multiple
VAs to attacker selected nameserver’ validation. Our attack is based
on an observation that a functionality in VAs, which is used to
increase security and performance, can be manipulated by a re-
mote adversary. Specifically, the DNS software at each VA selects
uniformly at random the nameserver to which queries are sent.
This is required in order to distribute the load from all the VAs
evenly among all the nameserver as well as to create unpredictable
selection of nameservers by the VAs, and finally, to ensure good
performance by avoiding poorly performing nameservers.
The fact that the VAs are selected from a small and a fixed set of
nodes, which is known to the attacker, allows the attacker to manip-
ulate the server selection mechanism in advance, prior to requesting