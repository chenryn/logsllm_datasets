scheduled and executed.
it denies direct access to resources, forc-
ing user-level software to request access
TLB  Translation Lookaside Buffer: a
to those resources via the kernel.
cache for memory translation on virtual
memory systems, used by the MMU
user space The address space of user-
(see MMU).
level processes.
tracer  A tracing tool (see tracing).
variable  A named storage object used
by programming languages.
tracepoints  A Linux kernel technology
for providing static instrumentation.
VFS  Virtual File System: an abstraction
used by the kernel for supporting differ-
tracing Event-based recording. Tracing
ent file system types.
events may be static or dynamic instru-
mentation based, or they may be timer
workload Requests for a system or
based. The tools in this book are tracing
resource.
tools; they instrument events and run 
ZFS  A combined file system and
BPF programs to record data.
volume manager created by Sun
UDP  User Datagram Protocol: a proto-
Microsystems.
col originally defined in RFC 768. See
Chapter 10.
---
## Page 832
Bibliography
[Aho 78] Aho, A. V., Kernighan, B. W., and Weinberger, P. J., “Awk: A Pattern
Scanning and Processing Language (Second Edition), Uix 7ti Edition man pages,
1978, http://plan9.bell-labs.com/7thEdMan/index.html
[Alizadeh 10]  Alizadeh, M., Greenberg, A., Maltz, D., Padhye, J., Patel, P, Prabhakar, B.,
Sengupta, S., and Sridharan, M., “DCTCP: Efficient Packet Transport for the
Commoditized Data Center,* MSR-TR-2010-68, January 2010, https:/www.microsoft
.com/en-us/research/publication/dctcp-efficient-packet-transport-for-the-
commoditized-data-center/
[AMD 10]  AMD, BIOS ansd Kermel Developer’s Guide (BKDG) for AMD Farmily 10k
Processors, April 2010, https://developer.amd.com/wordpress/media/2012/10/31116.
pdf
[Amit 18]  Amit, N., and Wei, M., *The Design and Implementation of Hyperupcalls,"
USENIX Annual Techical Conference, 2018.
[Bezemer 15] Bezemer, D.-P, Pouwelse, J., and Gregg, B., “Understanding Software
Performance Regressions Using Differential Flame Graphs,” IEEE International
Conference on Software Analysis, Evofution, and Reengineering (SANER), 2015.
[Bonwick 94]  Bonwick, J., The Slab Allocator: An Object-Caching Kernel Memory
Allocator,* USENIX Sarmer Conference, 1994.
[Bostock 10] Heer, J., Bostock, M., and Ogievetsky, V., *A Tour Through the
Visualization Zoo,a acmqueue, Volume 8, Issue 5, May 2010, http://queue.acm.org/
detail.cfm?id=1805128.
[Cheng 16]  Cheng, Y., and Cardwell, N., *Making Linux TCP Fast," netdev 1.2, Tokyo,
2016, https:/netdevconf.org/1.2/papers/bbr-netdev-1.2.new.new.pdf
[Cockcroft 98]  Cockcroft, A., and Pettit, R., Suen Performance and Tuing: Java and the
fnternet. Prentice Hall, 1998.
[Corbet 05]  Corbet, J., Rubini, A., and Kroah-Hartman, G., Linux Device Drivers,
3rd edition, O'Reilly, 2005.
jo Assanu Supn, uas(s uguado pondau-morg * *siaousa  [60 siaousa]
Montreal, December 2009, https://lttng.org/files/thesis/desnoyers-dissertation-
2009-12-v27.pdf
[Desnoyers 09b]  Desnoyers, M., and Dagenais, M., Adaptative Faulr Probing, Ecole
Polytechnique de Montreal, December 2009, http:/dmct.dorsal.polymtl.ca/sites/
dmct.dorsal.polymtl.ca/files/SOTA2009-Desnoyers.pdf
---
## Page 833
96
Bibliography
[Elling 00]  Elling, R., Static Perfornce Tuaing, Sun Blueprints, 2000.
[Goldberg 73]  Goldberg, R. P, Architectural Principals for Virtaal Conputer Systerns,
Harvard University, 1973.
[Gorman 04] Gorman, M., Understanding the Linucx Virtual Memory Manager. Prentice
Hall, 2004.
[Graham 82] Graham, S., Kessler, P, and McKusick, M., “gprof: A Call Graph
Execution Profiler,* Proceedings of the SIGPLAN *82 Symposiur on Compiler
Constructior, SIGPLAN Notices, Volume 6, Issue 17, pp. 120126, June 1982.
n ' a jo suouma ,ouae wass SuzensA, g 88a1 [ot 88a]
2010.
[Gregg 11] Gregg, B., and Mauro, J., DTrace: Dynaric Tracing in Oracle Solaris, Mac OS
X and FreeBSD, Prentice Hall, 2011.
[Gregg 13a]  Gregg, B., Blazing Performance with Flame Graphs, USENZX LISA 'I3
Conference, November 2013, https://www.usenix.org/conference/lisa13/technical-
sessions/plenary/gregg
[Gregg 13b]  Gregg, B., Systems Performnance: Enterprise and the Cloud, Prentice Hall,
2013.
[Gregg 13c] Gregg, B., Thinking Methodically About Performance,* Commurications
of the ACM, Volume 56 Issue 2, February 2013.
[Gregg 16]  Gregg, B., *The Flame Graph,* Commurications of the ACM, Volume 59,
Issue 6, pp. 4857, June 2016.
[Gregg 17]  Gregg, B., *Linux Container Performance Analysis,* USENIX LISA '17
Conference, November 2017, https:/www.usenix.org/conference/lisa17/
conference-program/presentation/gregg
[Hiramatsu 14]  Hiramatsu, M., “Scalability Efforts for Kprobes or: How I Learned
to Stop Worrying and Love a Massive Number of Kprobes," LiruxCon Japan, 2014,
https:/events.static.linuxfound.org/sites/events/files/slides/Handling%20the%20
Massive%20Multiple%20Kprobes%20v2_1.pdf
[Hollingsworth 94]  Hollingsworth, J., Miller, B., and Cargille, J., *Dynamic Program 
Instrumentation for Scalable Performance Tools,* Scalable High-Performance
Computing Conference (SHPCC), May 1994.
[Hailand-Jorgensen 18]  Hailand-Jorgensen, T., et al., *The eXpress Data Path: Fast
Programmable Packet Processing in the Operating System Kernel,* Proceedings of the
14th International Conference on emerging Networking EXperisments and Tecianologies,
2018.
[Hubicka 13]  Hubicka, J., Jaeger, A., Matz, M., and Mitchell, M., System V Application 
Binary Interface AMD64 Architecture Processor Supplement (Withs LP64 and ILP32
Programming Models), July 2013, https:/software.intel.com/sites/default/files
/article/402129/mpx-linux64-abi.pdf
---
## Page 834
Bibliography
[Intel 16]  Intel, Intel 64 and IA-32 Architectures Software Developer's Manual Volueme 3B:
System Prograrming Guride, Part 2, September 2016, https:/www.intel.com/content/
www/us/en/architecture-and-technology/64-ia-32-architectures-software-
developer-vol-3b-part-2-manual.html
[Jacobson 18] Jacobson, V., “Evolving from AFAP: Teaching NICs About Time,*
netdlev 0x 12, July 2018, https://www.files.netdevconf.org/d/4ee0a09788fe49709855/
files/?p=/Evolving%20from%20AFAP%20%E2%80%93%20Teaching%20NICs%20
about%20time.pdf
[McCanne 92]  McCanne, S., and Jacobson, V., *The BSD Packet Filter: A New
Architecture for User-Level Packet Capture," USENZX Winter Conference, 1993.
[Stoll 89]Stoll, C., The Cuckoo's Egg: Tracking aα Spy Turough the Maze of Computer
Espiorage, The Bodley Head Ltd., 1989.
“(1918  1e) ap Suo  sas(s um ums [0 ms]
January 2005.
[Tamches 99] Tamches, A., and Miller, B., “Fine-Grained Dynamic Instrumentation
of Commodity Operating System Kernels,° Proceedings of the 3rd Symposiurn or
Operating Systemes Design and Ireplenenfation, February 1999.
Profiler," Webkit Bugzilla, 2013, https:/bugs.webkit.org/show_bug.cgi?id=111162
[Vance O4]  Vance, A., *Sun Delivers Unix Shocker with DTrace: It Slices, It Dices, It
Spins, It W/hirls,* The Register, July 2004, https:/www.theregister.co.uk/2004/07/08/
dtrace_user_take/anc
[VMware O7] VMware, Understancding Full Virualization, Paravirtualization, and 
Hardware Assist, 2007, https:/www.vmware.com/content/dam/digitalmarketing/
vmware/en/pdf/techpaper/VMware_paravirtualization.pdf
[Welsh 01]  Welsh, M., Culler, D., and Brewer, E., *seda: An Architecture for Well
Conditioned, Scalable Internet Services,? ACM SIGOPS, Volume 3S, Issue 5,
December 2001.
[Yamamoto 16]  Yamamoto, M., and Nakashima, K., “Execution Time Compensation
for Cloud Applications by Subtracting Steal Time Based on Host-Level Sampling,*
ICPE, 2016, https://research.spec.org/icpe_proceedings/2016/companion/p69.pdf
[Zannoni 16]  Zannoni, E., “BPF and Linux Tracing Infrastructure,° LinuxCon Europe,
2016, https://events.static.linuxfound.org/sites/events/files/slides/tracing-linux-
ezannoni-berlin-2016-final.pdf
[1] https://events.static.linuxfound.org/sites/events/files/slides/
bpf_collabsummit_2015feb20.pdf
[2]  https:/lkml.org/lkml/2013/9/30/627
[3]  https:/lore.kernel.org/netdev/1395404418-25376-1-git-send-email-dborkman
@redhat.com/T/
---
## Page 835
86
Bibliography
[4]  https:/lore.kernel.org/lkml/1435328155-87115-1-git-send-email-wangnan0
@huawei.com/T/
[S]  https://github.com/iovisor/ply
[6] http:/halobates.de/on-submitting-patches.pdf
[7] https:/www.usenix.org/legacy/publications/library/proceedings/sd93/
[8] https://www.slideshare.net/vh21/meet-cutebetweenebpfandtracing
[9] https:/lwn.net/Articles/437981/
[10] https://lwn.net/Articles/475043/
[11]  https://lwn.net/Articles/575444/
[12] https://patchwork.ozlabs.org/patch/334837/
[13] https:/kernelnewbies.org/Linux_3.18
[14] http://vger.kernel.org/vger-lists.html#netdev
[15] http://www.brendangregg.com/blog/2015-05-15/ebpf-one-small-step.html
[16] http://www.brendangregg.com/blog/2014-07-10/perf-hacktogram.html
[17]  https:/www.kernel.org/doc/Documentation/networking/filter.txt
[18] https:/llvm.org/doxygen/classllvm_1_11IRBuilderBase.html
[19] https:/cilium.readthedocs.io/en/latest/bpf/
[20]  https://graphviz.org/
[21] https://lore.kernel.org/Ikml/CAHk-=wib9VSbwbS+N82ZPNtvt4vrvYyHyQduhF1
PI:EMAIL/
u'eoss-onu-mom-aoens/1I-s0-+1oz/8opq/uoo-88au8uepuanqmsm//:dq[z2]
[23]  https://patchwork.ozlabs.org/patch/1030266/
[24]  https:/github.com/cilium/cilium
[25]  https:/source.android.com/devices/architecture/kernel/bpf#files_available_in,
sysfs
[26]  https://www.kernel.org/doc/Documentation/bpf/btf.rst
[27] https:/git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/commit/?id=
c04c0d2b968ac45d6ef020316808ef6c82325a82
[28]
https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/tree/
Documentation/bpf/bpf_design_QA.rst#n90
[29] https:/www.kernel.org/doc/Documentation/bpf/bpf_design_QA.txt
[30] http://www.man7.org/linux/man-pages/man2/bpf.2.html
unu2'siadjau-jdq/zueu/sa8ed-ueu/xnu/8aozueu/:dnu[1e]
[32]  https:/lwn.net/Articles/599755/
[33]  https://www.iovisor.org/blog/2015/10/15/bpf-internals-ii
---
## Page 836
Bibliography
799
[34]  https://gcc.gnu.org/ml/gcc-patches/2004-08/msg01033.html
[35]  https:/blogs.oracle.com/eschrock/debugging-on-amd64-part-one
[36]  https:/github.com/sysstat/sysstat/pull/105
[37] http://www.brendangregg.com/flamegraphs.html
[38]  https:/github.com/spiermar/d3-flame-graph
qqtp6teogse-adoosaeg-xgau/8oqqoal-xiau/uoounpa//:sdq [e]
[40]  https:/lwn.net/Articles/132196/
[41] http:/phrack.org/issues/67/6.htmlarticle
[42]  https:/www.kernel.org/doc/Documentation/kprobes.txt
[43] https://www.ibm.com/developerworks/library/l-kprobes/index.html
[44]  https:/lwn.net/Articles/499190/
[45] https://events.static.linuxfound.org/images/stories/pdf/eeus2012_desnoyers.
Jpd
[46] https:/www.kernel.org/doc/Documentation/trace/uprobetracer.txt
[47]  https:/www.kernel.org/doc/Documentation/trace/tracepoints.rst
[48]  https:/1kml.org/kml/2018/2/28/1477
aoey-1psn-xnuq-Suppeu/:0-20-5t0z/8oqq/uoo8sau8uepuasqmxm//:du [6]
html
/oxqdq-u-1oddns-aqoud-spsn/0t/εo/9toz/euses/roo1oso1ous8oq//:du [0s]
[51]  http://blog.srvthe.net/usdt-report-doc/
[52]  https:/github.com/sthima/libstapsdt
-aupum-ramod-1adns-mau-e-po8-sn{-am/s1u8isj-rwuas/uoounpau/sdu[es]
usdt-comes-to-linux-814dc47e909f
[54] https:/github.com/dalehamel/ruby-static-tracing
[55] https:/xenbits.xen.org/docs/4.11-testing/misc/xen-command-line.html
[56] https:/medium.com/netflix-techblog/linux-performance-analysis-in-
60-000-milliseconds-accc10403c55
[57] http://www.brendangregg.com/blog/2016-10-27/dtrace-for-linux-2016.html
[58]  https://github.com/iovisor/bcc/blob/master/INSTALL_md
[59] https://github.com/iovisor/bcc/blob/master/CONTRIBUTING-SCRIPTS.md
[60]  https://github.com/iovisor/bcc#tools
[61]  https:/snapcraft.io/bpftrace
[62]  https://packages.debian.org/sid/bpftrace
[63]  https:/github.com/iovisor/bpftrace/blob/master/INSTALL.md
---
## Page 837
800  Bibliography
[64]  https:/github.com/iovisor/bcc/blob/master/docs/kernel-versions.md
[65]  https:/github.com/iovisor/bpftrace/blob/master/docs/tutorial_one_liners.md
[66] https:/github.com/iovisor/bpftrace/blob/master/docs/reference_guide.md
[67]  https:/github.com/iovisor/bpftrace/issues/26
[68] https:/github.com/iovisor/bpftrace/issues/305
[69]  https:/github.com/iovisor/bpftrace/issues/614
[70] https://lore.kermel.org/Ikml/CAHk-=wib9VSbwbS+N82ZPNtvt4vrvYyHyQduhF1
PI:EMAIL/
[71] https:/github.com/iovisor/bpftrace/pull/790
[72] http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html
[73] http:/www.brendangregg.com/perf.html
[74]  https://github.com/brendangregg/pmc-cloud-tools
[75]  http:/www.brendangregg.com/blog/2018-02-09/kpti-kaiser-meltdown-
performance.html
[76]  https:/github.com/Netflix/flamescope
[77] https:/medium.com/netflix-techblog/netflix-flamescope-a57ca19d47bb
[78]  https://github.com/brendangregg/perf-tools
[79]  https:/github.com/pmem/vltrace
[80] http://agentzh.org/misc/slides/off-cpu-flame-graphs.pdf
[81] https://www.kernel.org/doc/Documentation/admin-guide/mm/concepts.rst
[82]  http:/www.brendangregg.com/FlameGraphs/memoryflamegraphs.html#brk
[83] https://docs.oracle.com/cd/E23824_01/html/821-1448/zfspools-4.
html#gentextid-11970
[84]  http://vger.kernel.org/~acme/perf/linuxdev-br-2018-perf-trace-eBPF
[85] https:/www.spinics.net/lists/linux-fsdevel/msg139937.html
[86] https:/lwn.net/Articles/787473/
[87] http:/www.brendangregg.com/blog/2014-12-31/linux-page-cache-hit-ratio.
[88] https:/www.kernel.org/doc/ols/2002/ols2002-pages-289-300.pdf
[89]  https:/github.com/torvalds/linux/blob/16d72dd4891fecc1e1bf7ca193bb7d5b9
804c038/kernel/bpf/verifier.c#IL.7851-L7855
[90]  https:/lwn.net/Articles/552904/
[91] https://oss.oracle.com/~mason/seekwatcher/
[92]  https:/github.com/facebook/folly/tree/master/folly/tracing
---
## Page 838
Bibliography
801
[93] https:/cilium.io/
omau-aqeleos-e-uenex-uomnos-tado/aoinos-uadouooqgapoo/sdu[6]
load-balancer/
/es-omjau-xnu-at-u-fuananb/saure/uos'anganosmm//sdu[s6]
[96] https:/www.kernel.org/doc/Documentation/networking/scaling.rst
[97] https://patchwork.ozlabs.org/cover/910614/
[98]  https:/lwn.net/Articles/659199/
[99] https:/patchwork.ozlabs.org/patch/610370/
[100]  https://www.kernel.org/doc/Documentation/networking/segmentation-
offoads.rst
[101] https://www.bufferbloat.net/
[102] https://www.kernel.org/doc/Documentation/networking
[103] https:/flent.org/
[104] https://www.wireshark.org/
[105] https://blog.cloudflare.com/the-story-of-one-latency-spike/
[106] http:/www.brendangregg-com/DTrace/DTrace_Network_Providers.html
[op900/aoe/uo8a8tepua1qmmm/:d[01]
[108] https:/twitter.com/b0rk/status/765666624968003584
[109] http://www.brendangregg.com/blog/2016-10-15/linux-bcc-tcptop.html
[110] https://github.com/brendangregg/dtrace-cloud-tools/tree/master/net
-usuena-do1-aoenj-xnur1/90-60-t10z/8oq/uoo-38au8uepuaaqmmm//:d1[111]
tracing.html
[112] https:/www.reddit.com/z/networking/comments/47jv98/dns_resolution,
time_for_io_in_us/
/uo/18-xnu/spjeA1o1/8/jauax/xnu/uos/qnd/8uoauaax8//:sdnu  [11]
?id=e3118e8359bb7c59555aca60c725106e6d78c5ce
[114] https:/www.slideshare.net/AlexMaestretti/security-monitoring-with-ebpf
[115]  https://seclists.org/oss-sec/2019/q2/131
[116] https://www.snort.org/
1/gdqa-ua-Suouou-snoas/mansaeyxa/arareusapsasm//:sdu  [z11]
[118] https:/www.kernel.org/doc/Documentation/userspace-api/secomp_fiter.rst
[119]  https:/lwn.net/Articles/756233/
[120] https://lore.kernel.org/netdev/PI:EMAIL/T/
[121] https:/lore.kernel.org/netdev/61198814638d88ce3555dbecf8ef87552
PI:EMAIL/
---
## Page 839
802
Bibliography
[122] https:/lwn.net/Articles/747551/
[123] https:/lore.kernel.org/netdev/20180216134023.15536-1-daniel@iogearbox.
net/
[124] https:/landlock.io/
[125] 
https:/git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git/commit/?id=
8b401f9ed2441ad9e219953927a842d24ed051fc
[126] https:/bugzilla.redhat.com/show_bug.cgi?id=1384344
[127] https:/www.kernel.org/doc/Documentation/sysctl/net.txt
[128] http://vger.kernel.org/bpfconf.html
[129]
https:/lore.kernel.org/netdev/2f24a9bbf761accb982715c761c0840a14c0b5
PI:EMAIL/
[130] https://lore.kernel.org/netdev/36bb0882151c63dcf7c624f52bf92db8adbfb8
PI:EMAIL/
[131]  https:/cilium.readthedocs.io/en/stable/bpf/#hardening
[132] http:/phrack.org/issues/63/3.html
[133]
https:/lore.kernel.org/netdev/8f751452-271f-6253-2f34-9e4cecb347b8
@iogearbox.net/T/
[134] http://www.brendangregg.com/blog/2016-01-18/ebpf-stack-trace-hack.html
[135] https:/github.com/ivm-profiling-tools/perf-map-agent
[136]
https:/github.com/torvalds/linux/blob/master/tools/perf/Documentation/
jit-interface.txt
[137]  https:/github.com/brendangregg/FlameGraph/blob/master//maps
[138] https:/docs.oracle.com/en/java/javase/1/vm/dtrace-probes-hotspot-vm.html
-us-aqs-aunoq-aoenp/01-g0-z00z/8ojq/uo-88a18uepuauqmmm//:d [6s1]
provider1.html
[140] http:/www.brendangregg.com/bpfperftools.html
[141] https:/github.com/sthima/node-usdt
[142] http:/www.brendangregg.com/blog/2016-10-12/linux-bcc-nodejs-usdt.html
[143]  https://github.com/mmarchini/node-linux-perf
xnu-uo-s1dlex8-aueg-apou/I-60-10z/8oq/uo>-88a18uepuaqmmm//:dnq[#1]
html
[145]  https://golang.org/pkg/runtime/trace/
-uoμouny-jdq-3oq-8ueqo8/1e-10-/10z/8opq/uos-88ax8uepua1qmmm//:dq [91]
tracing.html
[147]  https:/github.com/iovisor/bcc/issues/934
[148] https:/tour.golang.org/basics/4
---
## Page 840
Bibliography
08
[149] https:/github.com/iovisor/bpftrace/issues/740
[150] https://github.com/iovisor/bcc/issues/1320#issuecomment-407927542
[151] https:/github.com/mmcshane/salp
[152] https://wiki.tcl-lang.org/page/DTrace
[153] https:/www.gnu.org/software/libc/
[154] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=767756
[155] https:/dev.mysql.com/doc/refman/5.7/en/dba-dtrace-ref-command.html
[156] https:/www.kernel.org/doc/html/latest/core-api/memory-allocation.html
[157]  https://www.kernel.org/doc/Documentation/locking/mutex-design.txt
[158] https:/www.kernel.org/doc/Documentation/trace/ftrace.rst
[159]  https://github.com/rostedt/trace-cmd
[8pu3-aoen/1paso/t8/jauax/xnut/uos/qnd/8aoqauaxa8//:sdq  [091]
[161] http:/kernelshark.org/
[162] https:/www.kernel.org/doc/Documentation/kernel-hacking/locking.rst
[163] https://github.com/iovisor/bpftrace/pull/534
[164] https:/lore.kernel.org/patchwork/patch/157488/
[165] https://clearlinux.org/news-blogs/kata-containers-next-evolution-clear-
containers
[166]  https://github.com/firecracker-microvm/firecracker/blob/master/docs/
design.md
[167]  https:/lwn.net/Articles/531114/
[168] https:/lwn.net/Articles/750313/
[169] https://github.com/iovisor/kubectl-trace
[170]  https://github.com/kubernetes-incubator/metrics-server
a8esn-aomosa/apsnp-uoeodde-8nqap/sxse1/sxop/osapauaqnx/sdau [11]
monitoring/
[172]  https:/www.kernel.org/doc/Documentation/cgroup-v1/cpuacct.txt
[173] http:/blog.codemonkey.ws/2007/10/myth-of-type-and-type-ii-hypervisors.
html
[174] http:/www.brendangregg.com/blog/2017-11-29/aws-ec2-virtualization-2017.
[175] http://www.pcp.io/
[176] http:/getvector.io/
[177]  https://github.com/Netflix/vector
[178] https:/www.timeanddate.com/holidays/fun/yellow-pig-day