title:Spam mitigation using spatio-temporal reputations from blacklist history
author:Andrew G. West and
Adam J. Aviv and
Jian Chang and
Insup Lee
Spam Mitigation using Spatio-Temporal
Reputations from Blacklist History ∗
Andrew G. West, Adam J. Aviv, Jian Chang, and Insup Lee
Dept. of Computer and Information Science - University of Pennsylvania - Philadelphia, PA
{westand, aviv, jianchan, lee}@cis.upenn.edu
ABSTRACT
IP blacklists are a spam ﬁltering tool employed by a large
number of email providers. Centrally maintained and well
regarded, blacklists can ﬁlter 80+% of spam without having
to perform computationally expensive content-based ﬁlter-
ing. However, spammers can vary which hosts send spam
(often in intelligent ways), and as a result, some percent-
age of spamming IPs are not actively listed on any black-
list. Blacklists also provide a previously untapped resource
of rich historical information. Leveraging this history in
combination with spatial reasoning, this paper presents a
novel reputation model (PreSTA), designed to aid in spam
classiﬁcation. In simulation on arriving email at a large uni-
versity mail system, PreSTA is capable of classifying up
to 50% of spam not identiﬁed by blacklists alone, and 93%
of spam on average (when used in combination with black-
lists). Further, the system is consistent in maintaining this
blockage-rate even during periods of decreased blacklist per-
formance. PreSTA is scalable and can classify over 500,000
emails an hour. Such a system can be implemented as a
complementary blacklist service or used as a ﬁrst-level ﬁlter
or prioritization mechanism on an email server.
1.
INTRODUCTION
Roughly 90% of the total volume of email on the Internet
is considered spam [5], and IP-based blacklisting has become
a standard tool in ﬁghting such inﬂuxes. Spammers often
control large collections of compromised machines, botnets,
and vary which hosts act as the spamming mail servers. As
a result, some 20% of spam emails received at a large spam
trap in 2006 were not listed on any blacklist [21].
Blacklists provide only a static view of the current (or
recently active) spamming IP addresses. However, when
viewed over time, blacklists provide dense historical (tem-
poral) information. Upon inspection, interesting properties
emerge; for example, more than 25% of the IPs once listed
∗This research was supported in part by ONR MURI
N00014-07-1-0907. POC: Insup Lee, PI:EMAIL
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ACSAC ’10 Dec. 6-10, 2010, Austin, Texas USA
Copyright 2010 ACM 978-1-4503-0133-6/10/12 ...$10.00.
161
on the blacklist were re-listed within 10 days, and overall,
45% were re-listed during the observation period.
It is known that spamming IP addresses exhibit inter-
esting spatial properties. Previous studies have shown that
spamming IPs are distributed non-uniformly throughout the
address space [19, 21, 28], and they can often be clustered
into spatial groups indicative of spamming behavior. For
example, AS-membership has been shown to be a strong
predictor of spamming likelihood [11], as well as BGP pre-
ﬁxes, and the host-names of reverse DNS look-ups [19].
In this paper we propose a novel method to combine black-
list histories with spatial context to produce predictive repu-
tation values capable of classifying spam. Our model,
Preventive Spatio-Temporal Aggregation (PreSTA), mon-
itors blacklist dynamics, interpreting listings as a record of
negative feedback. An entity (i.e., an IP address) is then
evaluated based on its own history of negative feedback and
the histories of spatially related entities. Spatial adjacency
is multi-tiered and deﬁned based on multiple grouping func-
tions (e.g., AS-membership, subnet, etc.). A reputation
value is computed for each grouping, and these are com-
bined using a standard machine learning technique to pro-
duce ham/spam classiﬁcations.
We implemented PreSTA and analyzed incoming email
traces at a large university mail server. We found that
PreSTA can classify an additional 50% of spam not iden-
tiﬁed by blacklists alone while maintaining similar false-
positive rates. Moreover, when PreSTA is used in com-
bination with traditional blacklists, on average 93% of spam
is consistently identiﬁed without the need for content-based
analysis. This result was found to be stable: As the un-
derlying blacklist suﬀers large deviations in detection ac-
curacy, PreSTA maintains steady-state performance. Fur-
ther, PreSTA is highly scalable: Over 500,000 emails an
hour can be scored using a single-threaded implementation
on a commodity server.
We do not propose that PreSTA can (or should) replace
context-based ﬁltering. Instead, PreSTA can be leveraged
just as blacklists are today – as a preliminary ﬁlter to avoid
more computationally expensive analysis. Use-cases could
include a complimentary service to blacklists (perhaps im-
plemented by the blacklist provider) or an email prioritiza-
tion mechanism for overloaded mail servers.
PreSTA’s applicability is not conﬁned to email spam de-
tection. Related work has already shown PreSTA reputa-
tions helpful in prioritizing edits and detecting vandalism on
Wikipedia [30], and PreSTA may be further applicable to
an entire class of dynamic trust management problems [9,
29] that are characterized by the need for decision-making
in the presence of uncertainty and partial-information.
2. RELATED WORK
Spam ﬁltering based on network-level properties of the
source IP address is a popular choice for mitigating spam.
Unlike content-based ﬁlters (e.g., those based on Bayesian
quantiﬁers [24]), these techniques tend to be computation-
ally inexpensive while achieving relatively good performance.
IP blacklists [3, 7] are one such network-level ﬁltering
strategy. Blacklists are collections of known spamming IP
addresses collated from various institutions (e.g., large email
providers). They tend to be well-regarded because they are
maintained by reputable providers and incorporated into
many email server’s. Blacklists are only a static snapshot of
spamming hosts, but over time, IP addresses are listed, de-
listed, and re-listed. It is precisely this history that PreSTA
leverages in generating IP reputation.
Filtering based on blacklists alone is imperfect [25]. List-
ing latency is a commonly cited weakness [20], as is incom-
pleteness. One study reported that 10% of spamming IPs
observed at a spam-trap were not blacklisted [23]. Such sit-
uations motivate PreSTA; in these partial knowledge sce-
narios, an unlisted IP address can be viewed in terms of
its previous listings (if any) and its spatial relation to other
known spamming IPs.
The non-uniform distribution of spamming IPs on the In-
ternet is a well-studied phenomenon. Spamming IPs tend to
be found near other spamming IPs [23] and in small regions
of the address space [21]. Most such IPs tend to be short-
lived [28]; further supporting the use of spatial relationships.
Although PreSTA employs basic spatial measures in its pre-
liminary implementation, more advanced relationships could
be exploited, such as those suggested in [11, 19]. Addition-
ally, dynamically shaped groups could be used [27].
A key diﬀerence between PreSTA and similar work is
its combination of temporal history provided by blacklists
and the spatial dynamics of spamming IPs. Perhaps the
closest related system is SNARE by Hao et al. [11]. In addi-
tion to demonstrating interesting spatial measures (includ-
ing geographic distance), SNARE utilizes simple temporal
metrics to perform spam ﬁltering (e.g., the time-of-day an
email was sent) and applies a lightweight form of aggregation
(e.g., mean and variance) to detect abnormal patterns. In
contrast, PreSTA’s temporal computation has more depth,
aggregating time-decayed compounding evidence that en-
codes months of detailed blacklisting events.
Indeed, [11]
identiﬁes many valid measures of spamming behavior, but
is incapable of Internet-wide scalability due to a reliance on
high-dimensional learning. PreSTA spam detection com-
putes over a single feature, IP address (and groups thereof),
and is extremely scalable with high accuracy.
Similar techniques are claimed by two commercial ser-
vices: Symantec [26] uses “IP reputation” in its security soft-
ware, and SenderBase [12] by Ironport uses spatial data to
build IP reputations. The procedures are proprietary, so a
detailed comparison is not possible. However, the binary
output of the public-facing query mechanisms correlate well
with PreSTA’s classiﬁcations.
PreSTA can also be examined in the context of general-
purpose reputation systems/logics, such as EigenTrust [16]
or TNA-SL [14]. A key diﬀerence involves the nature of feed-
back; namely, PreSTA considers only negative feedback.
Conventional algorithms aggregate over both positive and
negative feedback, and feedback is indeﬁnitely retained and
associated with a single discrete event. PreSTA utilizes ex-
piring feedback, where a negative observation (e.g., sending
spam) is valid for some ﬁnite duration (the blacklist period),
after which, it is discarded.
3. REPUTATION MODEL
Although our presentation of PreSTA is focused on the
domain of spam detection,
it is important to note that
PreSTA deﬁnes a general reputation model. There are two
requirements for potential applications: (1) Access to a his-
tory of negative feedback (as achieved via IP blacklists); and
(2) the ability to deﬁne spatial partitions over entities (as
achieved via the IP address hierarchy). The reputation val-
ues computed consider both the history of negative feedback
for an individual entity and those of related entities.
In the temporal dimension, a history of negative feedback,
stored in a feedback database, is required. An entity is con-
sidered active in the database when an associated negative
feedback has been recently received (i.e., the entity is listed
on the blacklist). After some interval, the feedback expires,
and the entity is considered inactive (i.e., the entity is de-
listed from the blacklist). A query to the database returns
an entire history of active and inactive events, to which a
decay function is applied. The function weighs distant and
recent events appropriately and permits compounding evi-
dence to accumulate against entities.
A set of grouping functions deﬁne spatial relevance. A
grouping function maps an entity to other entities that share
behavioral properties. More than one grouping function can
(and should) be deﬁned, and they may be singular in na-
ture (i.e., an entity is in a group by itself). The temporal
history of each spatial grouping is considered, resulting in
multiple reputation values. These component reputations
are then combined so that a single entity is evaluated based
on multiple contexts of negative feedback.
In the remainder of this section the model is formalized.
First, the computation and its normalization are discussed,
and following that, the feedback database is presented.
3.1 Reputation Computation
The goal of the reputation computation is to produce a
quantiﬁed value that captures both the spatial and temporal
properties of the entity being evaluated. Spatially, the size
of the grouping must be considered, and temporally, the
history of negative feedback must be weighted in proportion
to its spatial relevance.
To capture these properties, three functions are required
– two temporal and one spatial:
• hist(α, G, H ) is a temporal function returning a list
of pairs, (tin, tout), representing listings from the feed-
back history, H, according to the grouping of entity
α by grouping function G. The values tin and tout
are time-stamps bounding the active duration of the
listing. Active listings return (tin, ⊥).
• decay(tou t, h) is a temporal function that exponen-
tially decays input times using a half-life h, and it takes
the form 2−Δt/h where Δt = tnow − tout is of the same
unit as h. It returns a value in the range [0, 1], and for
consistency, decay(⊥, h) = 1.
162
• size(α, G, t) is a spatial function returning the mag-
nitude, at time t, of the grouping deﬁned by G, of
which α is/was a member. If G deﬁnes multiple group-
ings for α, only the magnitude of one grouping is re-
turned. The choice of group is application speciﬁc.
Raw reputation can be deﬁned as follows:
X
raw rep(α, G, H ) =
(tin,tout)∈
hist(α,G,H)
decay(tout, h)
size(α, G, tin)
(1)
This computation captures precisely the spatio-temporal
properties required by PreSTA. Temporally, the listing his-
tory of an entity/group is captured at each summation via
the hist() function, and events occurring recently are more
strongly weighted via the decay() function. Spatially, group-
ing function G deﬁnes the group membership, and each sum-
mation is normalized by the group size.
When two or more grouping functions are deﬁned over the
entities, multiple computations of raw rep() are performed.
Each value encodes the reputation of an entity when con-
sidered in a diﬀerent spatial context. How to best combine
reputation is application speciﬁc, and for the spam applica-
tion, machine learning techniques are used (see Sec. 5.7).
The values returned by raw rep() are strictly compara-
ble for all spatial groupings deﬁned by G and the history
H. High values correspond to less reputable entities and
vice-versa. However, it is more typical for reputation sys-
tems [14, 16] to normalize values onto the interval [0, 1]
where lower values correspond to low reputation and vice-
versa. Ultimately, machine learning does not require nor-
malized values. Such values do, however, enable the model
to be consistent with other reputation systems and provide
an absolute interpretation that permits manually-authored
policies (e.g., allow access where reputation > 0.8).
Normalization requires knowledge of an upper bound on
the values returned by raw rep(). This cannot be generally
deﬁned when the de-listing policy is non-regular. However,
if listings expire after a ﬁxed duration d (or a greatest lower-
bound for d can be computed), then it is possible to compute
an upper bound. Such a bound is found by considering
an entity who is as bad as possible; one that is re-listed
immediately after every de-listing, and thus, is always active
in the feedback database. Considering a grouping of size 1,
the raw rep() computation reduces to a geometric sequence:
MAX_REP = 1 +
1
1 − 2−d/h
(2)
Similarly, the same worst case reputation occurs for groups
of larger size, however, instead of a single entity acting as a
bad as possible, the entire group is simultaneously re-listed
immediately following each de-listing. Normalized reputa-
tion is now deﬁned as:
„
«
rep(α, G, H ) = 1 −
raw rep(α, G, H)
MAX_REP
(3)
This reputation computation can be modiﬁed depending on
the entities being evaluated or the nature of the negative
feedback database. For example, one can eliminate spatial
relevance by using grouping functions that deﬁne groups of
size 1. Or, one can eliminate all temporal aspects by deﬁn-
ing the return of decay() as a constant (C). Both such us-
ages are later employed in spam detection; the former due
163
to dynamism in IP address assignment, and the latter due
to properties of the blacklist in question. Note that when
decay(tout, h) = C, MAX_REP = decay(⊥, h) + C.
3.2 Feedback Database
The feedback database, H, depends on the nature of feed-
back available. PreSTA is most adept at handling expiring
feedback like that present in IP blacklists. By deﬁnition,
an expiring feedback occurs when an entity is active (listed)
in the database before removal (de-listed) after a ﬁnite du-
In this case, H is a record of the entries/exits of
ration.
listings such that the active database can be reproduced at
any point in time.
Feedback can also be discrete, where negative feedbacks
are associated with a single time-stamp. This is the model
most often seen in general-purpose reputation management
systems [14, 16]. In such cases, hist() always returns pairs of
the form (tin, ⊥), and thus the associated listings do not de-
cay. A discrete database can be transformed into a compat-
ible H by setting an artiﬁcial timeout x, (e.g., (tin, tin + x)).
Further, listings should not overlap (i.e., an entity having
multiple active listings). Spam blacklists are inherently non-
overlapping, and pre-processing can be applied over feed-
backs when this is not the case.
4. SPAM DETECTION SETUP
As presented, PreSTA deﬁnes a general model for rep-
utation. Here, we apply PreSTA for the purpose of spam
detection. Two properties of spam and IP blacklists are well
leveraged by PreSTA. First, spammers are generally found
“near” other spammers, and their identiﬁers, IP addresses,
can be spatially grouped based on the IP address hierarchy.
Second, blacklists are a rich source of temporal data.
It should be noted that other sources of negative feedback
besides IP blacklists could be employed by PreSTA. Any
manner of negative feedback associating spamming and IP
addresses is suﬃcient.
IP blacklists, however, are a well-
regarded and generally trusted source of negative feedback.
They are centrally maintained and reputation computed over
them can be seen as a good global quantiﬁer. IP blacklists
do have weaknesses, and readers should take care not to
associate these ﬂaws to the PreSTA model.
4.1 Data Sources
Blacklists: To collect blacklist data, we subscribed to a
popular blacklist-provider, Spamhaus [7]. The arrival and
exit of IP addresses listed on three Spamhaus blacklists (up-
dated at thirty-minute intervals) were recorded for the du-
ration of the experiment:
• Policy Block List (PBL): Listing of dynamic IP
addresses (e.g., those provided by large ISPs such as
Comcast or Verizon).
• Spamhaus Block List (SBL): Manually-maintained
listing of IPs of known spammers/organizations. Typi-
cally these are IPs mapping to dedicated spam servers.
• Exploits Block List (XBL): Automated listing of
IPs caught spamming; usually open proxies or ma-
chines that have been compromised by a botnet.
As the latter two blacklists contain IP addresses known to
have participated in spamming, only these are used to build
)
L
B