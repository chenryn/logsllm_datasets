## Page 613
13与设计模式相处
真实世界中的模式
现在你已经准备好迎接一个充满设计模式的崭新世界。但
是，在你打开所有的机会大门之前，我们需要告诉你一些即将在真实世界中遇到
的细节一没错，外面的世界比对象村来得复杂。来吧！从下页开始，我们会指
引你的方向
这是新的一章
577
---
## Page 614
能从指南中学到什么
对象村指南
与设计模式相处
请接受我们的随身指南。我们在这里提供了一些技巧，
让你能够和真实世界中的模式愉快相处。在这份指南中，
你将会：
知悉所有对于“设计模式”定义的谬误。
发觉有哪些琳琅满目的设计模式类目，并认清为何
你只需要买其中的一本。
避免在错误的时间点使用设计模式的尴尬。
学习如何将模式维持在它应属的分类中。
认识到发现新的模式并非只有专家做得到。阅读过
我们的秘笈之后，你也有机会写下自己的模式。
T
亲眼目睹神秘的“四人组”身份被揭露。
T
能够和邻居有共同的话题一喝咖啡、聊模式。
学习像东方禅师一样训练你的心智。
通过改进你的模式词汇，结交一些朋友，并影响周
围的开发人员。
578
第13章
---
## Page 615
与设计模式相处
定义设计模式
我敢说，在阅读完这本书之后，你已经相当了解什么是设计模式了。但我们至今
还未给它一个正式的定义。你可能会对这个常用的定义感到惊讶：
模式是在某情境（context）下，针对某问题的某种
解决方案。
这个定义并不会让人有恍然大悟的感觉，但是别担心，我们现在就逐步了解定义
中所提到的情境、问题、解决方案：
例如：你提有一个对
象的集合。
情境就是应用某个模式的情况。这应该是会不断出现的情况。
你需要注意走访每
问题就是你想在某情境下达到的目标，但也可以是某情境下的约束。
个对象，而且不需
理金该集合的实现。
解决方案就是你所追求的：一个通用的设计，用来解决约束、达到目标。
将进代封装进分离
的类中。
这是一个需要花些时间逐步理解的定义。下面有个帮你记忆的方法：
“如果你发现白己处于某个情境下，面对着所歌达到的
目标被一群约束影响着的问题，然而，你能够应用某
个设计，充服这些约束并达到该目标，将你领向某个
解决方素。”
现在，看起来想搞清楚什么是设计模式还需要费点功夫。毕竞，你已经知道一个
设计模式是解决一个经常重复发生的设计问题。将这一切搞得如此地拘谨，究竞
是为什么呢？这个嘛，一会儿你就会看到，我们采用一种规矩的方式描述模式，
就能为模式创建出“类目”。而这个类目能为我们带来各种好处。
你现在的位置
579
---
## Page 616
定义设计模式
我一直在思考这种需
要三个部分的定义，但我
并不认为这样能定义一个模
O
式
你可能是对的；让我们再多想一想我们需要一个“问题”、一
个“解决方案”和一个“情境”：
问题：我要如何准时上班？
情境：我将钥匙锁在车里了。
解决方案：打破窗户，进入车内，启动
引擎，然后开车上班。
在定义中所需要的三个部分我们全都有了：我们有一个问题，这个
问题包括去上班的目标，时间距离的约束，可能还有其他的影响
因素；我们也具有一个情境，也就是车钥匙拿不到：我们也有一个
解决方案，让我们能够取得钥匙并解决时间和空间的约束。既然
这三个部分都有了，我们也就等于有了一个模式，对吧？
RAIN
POWER
我们遵循设计模式的定义，定义了一个问题、一个情境及一个解决方案（而这个方案是行得
通的！）。这是一个模式吗？如果这还不算是一个模式，那么原因是什么呢？当我们试图定
义一个00设计模式的时候，也有可能定义失败吗？
580
第13章
---
## Page 617
与设计模式相处
更近地观察
下一次，如果有人告诉你，所谓的模式
设计模式的定义
就是在某个情境之下针对某个问题的解决方
案，这个时候你一定要点头而且微笑。即使
我们的这个例子似乎符合设计模式的定义，但它不是
对于设计模式真正的定义来说，这样并不
一个真正的模式。为什么呢？我们知道模式必须应用
完整，但是你确实知递他们真正想表达的
于一个重复出现的问题。虽然一个心不在焉的人可能
是什么。
老是把车钥匙锁在车内，但是一再地打破车窗，这实
在称不上是一个可以反复应用的解决方案（至少没有
平衡另一个约束：成本）。
除了上述情况之外，它在某些方面也不符合规定。
首先，别人想要在自己的特殊问题上采用这个解决方
案并不容易。其次，它也违反了模式所应该具备的一
个重要而简单的方面：它没有一个名字！如果没有名
字，一个模式就无法变成开发人员之间共享的词汇。
幸运的是，模式并非只是被描述成简单的问题、情
境和解决方案：我们有更好的方式能描述模式，并
将它们收录进“模式类目”中。
问：
问：
：稍微改变某个模式的结
问：
模式的描述是否由一个
我要从哪里取得模式类
问题、一个情境及一个解决方案构成构以符合我的设计，这样可以吗？还
目？
呢？
是我一定要遵照严格的定义？
：通常你在模式类目中发
含：
当然你可以改变模式。
一个设计类目是由Gamma，Helm、
现的模式描述不只是这些。我们很快像设计原则一样，模式不是法律或准
Johnson、Vlissides所著的《设计模
就会看到模式类目的细节：模式类目则，模式只是指导方针，你可以改变
式：可复用面向对象软件的基础》（
描述某个模式的意图、动机、可能应模式来符合你的需要。我们也说过、
Addison-Wesley出版）。这个类目列
用该模式的地方、解决方案的设计以真实世界中的许多实例，都不符合经
出了23个基本的模式，再过几页我们
及使用后果（好的或坏的）。
典的设计模式。
就会谈到这本书。
然而，当你在改变模式的时候，最好
子还有许多其他将焦点放在不同领域（
能够在文档中注明它与经典的设计模
美例如：企业软件、并发系统、业务系
式有何差异。这样一来，其他的开发
统）的模式类目。
人员就能够很快地认出你用的这个模
式，并了解两者的差异。
你现在的位置
581
---
## Page 618
力、目标、约束
极客秘笈
愿力与你同在
设计模式的定义告
诉我们，问题包含了
一个目标和一组约束。
模式大师们对此有个术
语，将其称为“力”。为什
么？这个嘛，我们确信他们有
自己的理由，但是如果你还记
得那部电影：力“塑造并控制宇
宙”。类似地，模式定义中的力也
塑造并控制解决方案。只有当解决方
案在力的两个方向中取得平衡时（光明
的方向是你的目标，黑暗的方向是这些约
束），这才算是有用的模式。当你第一次在
模式的讨论中看到这个叫做“力”的术语时，
可能感到很困惑，但只要记住，力有两个方向
（目标和约束），而且需要力平衡才能够创建一个
模式的解决方案。别让这个术语挡住你的路，愿力与
你同在！
582
第13章
---
## Page 619
与设计模式相处
真希望我很早以前就知递
这些模式类目.
Frank：Jim，也算我们一份吧，我们东拼西凑地看了些文章，才学了
一招半式的模式。
Frank
2im
Jim：没问题，每个模式的类目都包含了一组模式，也描述了模式之间
?oe
关系上的细节。
Joe：你是说模式的类目不只一份？
Jim：当然。有些类目是基础的设计模式，有些则是领域特定模式，例
如EJB模式。
Frank：你正在看的是哪一份类目？
Jim：这是经典的四人组类目；包含了23个基础的设计模式。
Frank：四人组？
Jim：没错，四人组是四个作者的简称，他们合作写了第一本设计模式
的类目。
Joe：这个类目有些什么？
Jim：有一组相关联的模式。每个模式的描述方式都遵照一个模板，并
PDG
阐述该模式的许多细节。比方说，每个模式都有一个“名称”。
你现在的位置》
583
---
## Page 620
使用模式类目
Frank：哇塞！模式还有名称，真不得了！
Jim：别小看名称，Frank。事实上，名称可是非常重要的呢！当每个模式都有一个名称的时候，
我们谈论起模式来就相当容易了：也就是说，大家会有一个共享的词汇。
Frank：好啦！好啦！我只是在开玩笑。继续说吧，还有些什么？
Jim：就像我所说的，每个模式都要遵照一个模板。每一个模式都有名称和几节完整的叙述。例
如，有一节叫做意图（Intent），描述该模式是什么，有点儿像是定义。然后还有叫做动机（
Motivation）和适用性（Applicability）的节，描述何时何地该使用这个模式。
Joe：那么关于设计呢？
Jim：有几节是描述类图内的所有组成模式的类的设计，以及每个类扮演的角色。也有一节描述
如何实现这个模式，而且通常有展示怎么做的范例代码。
Frank：听起来好像面面俱到。
Jim：还不只这些。还有一些例子告诉我们在真实的系统中，这个模式会使用在何处。除此之外，
我认为最有用的小节之一是：此模式和其他的模式之间有何关联。
Jim：没错！
Joe：那么Jim，你到底要如何使用这个类目呢？当遇到问题时，你会翻阅它来寻找解决方案吗？
Jim：首先，我试着让自已熟悉所有的模式以及它们之间的关系。然后，当我需要一个模式的时
候，大概就知道是什么模式。我会参考描述动机和适用性的小节，确认我的想法没错。还有一个
很重要的小节：结果。我浏览这个模式的“结果”，确保该模式不会给我的设计带来意外的影响。
Frank：听起来很有道理。一且你知道这个模式是正确的，究竞要如何应用到你的设计中，并实
现它？
Jim：这就是为什么需要类图。我先是阅读“结构”这一节，以了解类图，然后看“参与者”这一
节，确定我了解每一个类的角色。接下来，就可以开始进行自己的设计，做出符合我的需求的一
些更改，并继续阅读“实现/范例代码”小节，以确认我知道可能会遇到的所有较好的实现技巧。
Joe：现在我终于了解类目如何真正地帮我加快使用模式的脚步。
Frank：是的。Jim，你能带我们浏览一遍模式的描述吗？
584第13章
---
## Page 621
与设计模式相处
类目中所有的模式都是以一个
名
SINGLETON
称”开始的，名称是模式中很重要
这是模式的分类或类
Iatent
的一部分一如累没有好名称，该
0，再过几页我们就
模式就无法成为你和其他开发人员
Motiation
金谈到。
之间共享调汇的一部分。
意图”简短地据述该模式的作
动机”给出了问题以及如何解决
Applicability
用。你也可以把它看作是模式的
这个问题的具体场景。
定义（统如同本书中的模式定义
sirue
一样）。
“适用性”描述模式可以被应用在什
会场合。
“结构”提供了图示，显示
Participan
出参与此模式的类之间的
“参与老”描述在此设计中所涉及到
美系。
的类和对象在模式中的责任和角色。
“协作”告诉我们参与者如
“练果”描述采用此模式之后可
能产生的效果：好的与不好的。
何在此模式中合作。
mple Code
实现”提供了你在实现该模
“范例代码”提供代
码的片段，可能对你
式时需要使用的技巧，以及
的实现有所帮助。
你应该小心面对的问题。
已知应用”用来描述已经在
真实系统中发现的模式例子。
相关模式”描述了此模
式和其他模式之间的关
Related Patteres
你现在的位置
585
---
## Page 622
发掘自己的模式
师”才办得到？
您想要当一个设计
模式巨星吗？
不是被创建的，所以，任何人都可能发现某个设计模式，然后写
出它的描述；然而，这并非唾手可得的事情，也不常发生。想成
那么，听清楚了。
为一个“模式作家”，是需要全力以赴的。
你应该先想想看为何你想发现自己的模式一一大多数的人都不
是“编写”模式，只是使用模式。然而，你可能是在某一个特定
先敢得一份模式的类
的领域中工作，而你认为新的模式将大有帮助，或者是你找到一
目，
个解决方案，能够解决一个再三出现的问题，或者，你只是想要
加入设计模式的社群贡献自己的力量。
然后花些时间好好
地学习它。
当你写下一个正确的
经被发现的这些模式，了解它们做了些什么，并并清楚它们和其
描述，
他模式之间的关系。这些准备工作非常重要，不但可以让你熟悉
模式是如何打造出来的，也可以避免做多余的工作。完成这些准
备工作之后，你可以开始将你的模式写在纸上，以便与其他开发
而有三个开发人员
人员沟通；我们稍后将针对“如何沟通你的模式”多谈一些。如
都同意你的看法时，
果你真的非常感兴趣，可以阅读本次Q&A以后的内容。
那么你就成功了。
用，否则你并不算拥有一个模式。一般未说，必须要通过“三次
规则”，才算是一个合格的模式。也就是说，只有在真实的世界
这一段文字也可以改成“你想要
中被应用三次以上，才能算是一个模式。
当一个插滚巨星吗？”
586第13章
---
## Page 623
与设计模式相处
想当一个设计模式作家吗？
做好家庭作业。
在发掘新的模式之前，你必须先精通现有的模式。许多模式看起来
像是全新的，但是事实上只是现有模式的变种。通过研究现有的模
式，你可以比较容易地识别模式，并且学会将某一模式与其他模式
联系起来。
花时间反思与评估。
你的经验（你所遭遇过的问题，以及采取的解决方案）正是模式想
法的来源。所以，花时间反思过去的经验，并将它用在以后的新设
计上面。请牢记，大多数的模式都是现有模式的变种，而非崭新的
模式。而且当你真的找到了好像是新模式的东西时，常常都局限在
很窄的适用性中，而不能称得上是一个真正的模式。
使用已有的模式模板定义你
将你的想法写在纸上，好让其他人能够理解。
的模式，固为这些模板巴经
包含了许多智慧，而且其他
如果其他人不能够使用你所找到的模式，那么这个新模式作用也就
的模式用户也认识这样的
不大：你需要将你的“准模式”写成一份文档，好让其他人能够阅
格式。
读、理解，并采用它来解决他们自己的问题，然后将使用的心得反
馈给你。很幸运的是，你不需要发明自己的模式归档方法，你可以
直接采用四人组的模板。
让其他人使用你的模式，然后再持续改进。
不要认为你可以一次就把模式搞定，应该要把模式当成是随着时间
名称
不断进步的一项工程。让其他人评审你的准模式，并尝试着使用
动机
适用性
它，然后将意见反馈给你。将这些反馈汇总到你的描述中，再重复
结构
上述的步骤。你的描述永远不会是完美的，但是到了某个时间点之