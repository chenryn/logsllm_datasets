to invert x = f (cid:0)1(y), where f is the RSA function
deﬁned by N and e. The adversary B starts running
the user F for this public key and a randomly chosen
number d2 given as a secret key. When the user F
makes the i-th hash query, the adversary looks to see
if the message mi was already asked. If not, it picks
a random xi, sets h(mi) = xe
i with probability p and
i with probability 1 (cid:0) p. If the user
h(mi) = y (cid:3) xe
F makes a query to PSig for a message mi, the ad-
versary returns xi if mi was asked before. Otherwise
it fails. Eventually, F outputs a correct unidirectional
RSA-Hash signature (m; s) for a brand new message
m. If the message m was not hashed before, the ad-
versary computes its has value. If h(m) = y (cid:3)xe
the adversary returns yd = s=xe
Otherwise, it fails.
i , then
i as the x = f (cid:0)1(y).
3. This part is implied by the previous two parts.
C Bidirectional Encryption Scheme
C.1 Bidirectional Generic Encryption Scheme
Theorem 7 Let’s consider a standard encryption
scheme E = (Enc-Gen; Enc; Dec). Based on E, we build
an bidirectional encryption scheme E 0 = (BiGen, BiEnc,
BiDec, PDec, FDec). If E is CCA2 secure, than E 0 is also
CCA2 secure against (1) the proxy P, (2) the user F, and
(3) all users U, where the adversary’s success is deﬁned in
table 8.
For technical reasons, we assume that there exists an
efﬁcient algorithm that evaluates the relation R(cid:25)(e; e0) to
true or false, where e = BiEnc(m) is the original chipher-
text and e0 = (cid:5)(e) is the modiﬁed ciphertext computed by
the proxy P. The output of the algorithm is true, it must
be the case that DecEKU(e) = DecEKF(e0). Having such
an algorithm, we allow the proxy P has oracle access to
BiDec because it can never submit a ciphertext e0 such that
R(cid:25)(e; e0) = true.
Proof
1. Let’s assume that E 0 is not CCA2 secure against P.
This means that jSucc(P; E 0) (cid:0) 1=2j is not negligi-
ble. Based on P, we will build an adversary B that
breaks the standard encryption scheme E for the key
k2 = (EK2; DK2). The adversary B tries to decrypt
SuccP;E
SuccF;E
Generic
(EKU; DKU; EKF; DKF; (cid:25))   BiGen(1k); b   f0; 1g;
(m0; m1)   PBiDec(EKU; EKF; (cid:25)); ~b   PBiDec(EKU; EKF; (cid:25); BiEnc(mb)) (cid:21)
(EKU; DKU; EKF; DKF; (cid:25))   BiGen(1k); b   f0; 1g;
(m0; m1)   FP(EKU; EKF; DKF); ~b   FP(EKU; EKF; DKF; BiEnc(mb)) (cid:21)
def
def
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) b = ~b (cid:12)(cid:12)(cid:12)(cid:12)
def
SuccA;E
def
SuccP;E
def
(EKU; DKU; EKF; DKF; (cid:25))   BiGen(1k); b   f0; 1g;
(m0; m1)   ABiDec(EKU; EKF); ~b   ABiDec(EKU; EKF; BiEnc(mb)) (cid:21)
(EKU; DKU; EKF; DKF; (cid:25))   BiGen(1k); b   f0; 1g;
(m0; m1)   P(EKU; EKF; (cid:25)); ~b   P(EKU; EKF; (cid:25); BiEncEKU (mb)) (cid:21)
El Gamal
SuccF;E
SuccA;E
def
(EKU; DKU; EKF; DKF; (cid:25))   BiGen(1k); b   f0; 1g;
(m0; m1)   F(EKU; EKF; DKF); ~b   F(EKU; EKF; DKF; BiEncEKU (mb)) (cid:21)
(m0; m1)   A(EKU; EKA; DKA); ~b   A(EKU; EKA; DKA; BiEncEKU (mb)) (cid:21)
(EKU; DKU; EKA; DKA; (cid:25))   BiGen(1k); b   f0; 1g;
Table 8. Bidirectional encryption deﬁnitions for adversary’s success.
the ciphertext Enc2(m). B chooses two pairs of keys
(k1; k3), gives them to P, and then starts P. B simu-
lates P’s access to the decryption oracle BiDec by tak-
ing each query e of P, and sending Deck1 (e) to its own
decryption oracle. The message received as the an-
swer is sent to the proxy ]proxy. P chooses two mes-
sages (m0; m1) to challenge the bidirectional encryp-
tion scheme E 0 and sends them to B. B uses the same
two messages to challenge the standard encryption
scheme E. When B is presented with the challenge
Enck2 (mb), where mb 2 (m0; m1), B sends to P
BiEnc(mb) = Enck1(Enck2 (mb)). We assumed that
P is able to break the bidirectional encryption scheme
with non-negligible probability. Thus, B breaks the
standard encryption scheme with non-negligible prob-
ability.
2. Let’s assume that E 0 is not CCA2 secure against F.
This means that jSucc(F; E 0) (cid:0) 1=2j is not negligi-
ble. Based on P, we will build an algorithm B that
breaks the standard encryption scheme E for encryp-
tion key k1. B chooses two random numbers as keys
(k2; k3) and gives them to F.
In addition, B simu-
lates oracle access to P by taking each query e of F,
forwarding it to its own decryption oracle and send-
ing back to F Enck3 (Deck1(e)). F chooses two mes-
sages (m0; m1) to challenge the bidirectional encryp-
tion scheme E 0 and sends them to B. B encrypts the
two messages and uses (Enck2(m0); Enck2 (m1)) to
challenge the standard encryption scheme E. When
B is presented with the challenge Enck1 (mb), where
mb 2 (Enck2 (m0); Enck2 (m1)), B sends to F the
challenge Enck1 (mb). We assumed that F is able to
break the bidirectional encryption scheme with non-
negligible probability. Thus, B breaks the standard
encryption scheme with non-negligible probability.
3. Let’s assume that E 0
is not CCA2 secure. This
means that there is a PPT adversary A such that
jSucc(A; E 0) (cid:0) 1=2j is not negligible. Based on A,
we will build an adversary B that breaks the standard
encryption scheme E for the key (EK2; DK2). The
adversary B tries to decrypt the ciphertext Enc2(m).
B starts A. B simulates A’s access to the decryp-
tion oracle BiDec by taking each query e of A, and
sending Deck1 (e) to its own decryption oracle. A
chooses two messages (m0; m1) to challenge the bidi-
rectional encryption scheme E 0 and sends them to B.
B uses the same two messages to challenge the stan-
dard encryption scheme E. When B is presented with
the challenge Enck2(mb), where mb 2 (m0; m1), B
sends to A BiEnc(mb) = Enck1 (Enck2 (mb)). We as-
sumed that P is able to break the bidirectional encryp-
tion scheme with non-begligible probability. Thus,
B breaks the standard encryption scheme with non-
negligible probability.
Generic
SuccP;S
SuccF;S
def
def
= Pr (cid:20) BiVer(m; s) = succeed (cid:12)(cid:12)(cid:12)(cid:12)
= Pr (cid:20) BiVer(m; s) = succeed (cid:12)(cid:12)(cid:12)(cid:12)
(SKU; VKU; SKF; VKF; (cid:25))   BiGen(1k)
(m; s)   PBiSig(VKU; VKF; (cid:25))
(SKU; VKU; SKF; VKF; (cid:25))   BiGen(1k)
(m; s)   FP(VKU; VKF; SKF)
(cid:21)
(cid:21)
Table 9. Bidirectional signature deﬁnitions for adversary’s success.
C.2 Bidirectional El Gamal Encryption Scheme
D Bidirectional Signature Scheme
Theorem 8 Let E 0 = (BiGen, BiEnc, BiDec, (cid:5)) be an
bidirectional El Gamal encryption scheme. E 0 is CPA se-
cure against (1) the proxy P, (2) the user F, and (3) all users
U, where the adversary’s success is deﬁned in table 8.
Proof
1. Let’s assume that P can break the bidirectional
This means that
El Gamal encryption scheme.
jSuccP;E (1k)(cid:0)1=2j is not negligible. Based on P, we
will build an algorithm B that can break the standard
El Gamal encryption. For this, B simulates the condi-
tions required by P. Initially, B knows the public key
of U (EKU = gx1). B pick a random number (cid:25) and
forwards it to P, together with EKU. From EKU = gx1
and (cid:25), B calculates gx2 = gx1g(cid:25) and forwards gx2
to P as the secret key of F. P chooses two mes-
sages (m0; m1) to challenge the security of the bidi-
rectional El Gamal and forwards them to B. B con-
siders the same two messages to challenge the stan-
dard El Gamal and receives the challenge Encx1(mb),
where mb 2 (m0; m1). B forwards the challenge
Encx1 (mb) = BiEncx1(mb) to P. We considered that
P can break the bidirectional El Gamal with probabil-
ity of success SuccP;E (1k) greater than 1/2. Thus, B
is able to break the standard El Gamal with probability
of success greater than 1/2.
2. Let’s assume that F can break E 0. This means that
jSuccF;E (1k) (cid:0) 1=2j is not negligible. The proof is
similar to the previous one. The only difference is that
B chooses at random x2 and computes gx2 for F.
3. Let’s assume that E is not CPA secure.
This
means that there exists an adversary A such that
jSuccA;E (1k) (cid:0) 1=2j is not negligible. The proof is
similar to the previous one. The only difference is
that B chooses at random DKA = y and computes
EKA = gy for A.
D.1 Bidirectional Generic Signature Scheme
Theorem 9 Let’s consider a standard signature scheme
S = (Sig-Gen; Sig; Ver). Based on S, we build an bidi-
rectional signature scheme S 0 = (BiGen, BiSig, BiVer, (cid:5)).
If S is UF than S 0 is UF against (1) the proxy P, (2) the
user F, and (3) all users U, where the adversary’s success
is deﬁned in table 9.
Proof
1. Let’s assume that S 0 is not UF against P. This means
that jSuccP;S(1k)j is not negligible. Based on P, we
build a forger B able to break the original signature
S. B tries to generate a valid signature Sig1(m) for a
message m. B receives VK1 as input. B generates two
random numbers (SK2; SK3) and sends them to P as
the bidirectional key (cid:25). The forger B starts P.
When proxy makes a query for a message m to the
hash oracle, B forwards the request to its own hash
oracle and returns the answer h(m) to P. When P
makes a query to the (cid:25) signature oracle, B makes a
query to the Sig signature oracle for the same mes-
sage m. B receives Sig1(m), computes Sig3(m) and
sends to P BiSig(m) = Sig1(m)Sig3(m). At one mo-
ment, P generates a valid signature BiSig(m) for a
new message m, with non-negligible probability. B
takes BiSig(m) = Sig1(m)Sig3(m), ignores the sec-
ond part and outputs Sig1(m). We assumed that P can
break the bidirectional signature scheme S 0. Thus, B
can break the original signature scheme S.
2. Let’s assume that S 0 is not UF against F. This means
that jSuccF;S(1k)j is not negligible. Based on F, we
build a forger B able to break the original signature
S. B tries to generate a valid signature Sig2(m) for a
message m. B receives VK2 as input. B generates two
pairs of random numbers (VK1; SK1; VK3; SK3) and
sends to F as its keys. The forger B starts F. When
f bi makes a query for a message m to the hash or-
acle, B forwards the request to its own hash oracle
and returns the answer h(m) to F. When F makes
a query to the P signature oracle, B makes a query
to the Sig signature oracle for the same message m.
B receives Sig2(m), computes Sig1(m) and sends to
F BiSig(m) = Sig1(m)Sig2(m). At one moment, F
generates a valid signature BiSig(m) for
a new message m, with non-negligible probability. B
takes BiSig(m) = Sig1(m)Sig2(m), ignores the ﬁrst
part and outputs Sig2(m). We assumed that F can
break the bidirectional signature scheme S 0. Thus, B
can break the original signature scheme S.
3. This part is implied by the two previous parts.