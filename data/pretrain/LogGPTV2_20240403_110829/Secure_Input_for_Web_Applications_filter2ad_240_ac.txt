### Table 1: Breakdown of the Difficulties and Learning Curves Reported by Study Participants

| Difficulty Level | Graphical Input | Token Lookup | Token Calculation |
|-----------------|-----------------|--------------|-------------------|
| Hard            | 0               | 0            | 7                 |
| Medium          | 39              | 12           | 14                |
| Easy            | 64              | 18           | 3                 |

For example, out of the 39 users who found the graphical input to be moderately difficult, 30 reported that it became easier with practice. It is evident that only a few participants considered any of the methods to be very hard, with token calculation receiving the least favorable ratings. A key finding is that most participants who initially found the methods challenging reported an improvement in their experience over time.

### Comparison of Questionnaire Responses with Actual Behavior

To validate the consistency between user responses and actual behavior, we compared the questionnaire results with the logs recorded during the study. For the graphical input method, we observed a decrease in input duration and errors (i.e., missing or entering incorrect digits) over time. The average time to enter a 9-digit account number decreased from approximately 56 seconds to about 23 seconds. The average click interval (the time taken to find the next desired digit in the image) reduced from 3.8 seconds to 2.1 seconds, and for certain numbers, it could be as low as 1.5 seconds.

For the confirmation schemes, we recorded the number of token resubmissions required for each user and transaction until successful completion. We observed a reduction in the number of necessary retries over time. For the token lookup method, the average number of retries decreased from 0.21 on the first attempt to 0.05 after three rounds. For the token calculation scheme, the decrease was from 0.68 retries initially to 0.24.

### Table 2: The "Annoyance Factor" — Did Using the Particular Method Take Too Long?

| Method          | Yes | Sometimes | No |
|-----------------|-----|-----------|----|
| Graphical Input | 17  | 24        | 23 |
| Token Lookup    | 4   | 18        | 42 |
| Token Calculation | 15 | 25        | 24 |

To assess the "annoyance factor," we asked participants whether using each method would take "too long." The results are shown in Table 2. The majority of participants did not consider the extra effort to be overly annoying. Additionally, we asked if participants would be willing to use the proposed methods for their actual online banking, provided they offer additional security. For CAPTCHA input, 51 participants (80%) answered "yes," while for the confirmation schemes, the approval rate was even higher at 58 users (91%).

### Comparison with Initial Study

Comparing the results of this study with our initial one, we can conclude that the additional effort invested in improving our prototype has been worthwhile. In the first study, almost all participants requested assistance, whereas in the new study, only ten people needed help with CAPTCHA input, seven with token computation, and two with token lookup. Furthermore, the success rate of transactions increased from 87% in the first study to 95% in the new study. The average duration for a successful transaction also decreased from 133 seconds in the first study to 94 seconds in the second study. Excluding tutorial transactions, the average time further dropped to 77 seconds.

### Security Assessment

Our study also aimed to evaluate the security of schemes requiring user collaboration and alertness. We simulated a Trojan horse that attempted to tamper with some transactions by changing the destination account number. The Trojan allowed the first few transactions to proceed without tampering and then injected attacks randomly with a certain probability. In the first study, the attack probability was high, leading to up to three attacks per user. In the second study, we lowered the probability to about 25% of participants experiencing a single attack.

In the first study, 25% of the attacks were successful, regardless of the security scheme used. In the second study, all attacks against CAPTCHA input were noticed by the users, while a few attacks without graphical input were successful. This highlights the limitations of security solutions that rely on user cooperation. However, our proposed protection techniques force an attacker to trick the user into accepting a clearly incorrect account number, which is an improvement over current solutions where attacks are invisible.

### Conclusion

Given the results of our evaluations and experiences from the user studies, it is clear that once our proposed solution is understood, most people can perform the required steps with little difficulty. Considering the additional protection provided by our techniques, we believe they are suitable for deployment in security-critical environments such as online banking.

### Related Work

Client-side sensitive information theft, including spyware, keyloggers, and Trojan horses, is a growing problem. Various mitigation ideas have been proposed, including client-side solutions like PwdHash and SpoofGuard, which focus on phishing attacks but are vulnerable to client-side attacks. Hardware-based solutions like chip cards and smart-card readers are popular but can be expensive and require installation. Graphical keyboards, though effective against keyloggers, are susceptible to screen scrapers. Cryptographic protocols for human identification have been explored, but many are impractical for widespread use due to usability issues.

### References

[1] Anti-Phishing Working Group. http://www.antiphishing.org.
[2] D. Balfanz and E. Felten. Hand-Held Computers Can Be Better Smart Cards. In Proceedings of the 8th Usenix Security Symposium, 1999.
[3] Carnegie Mellon University. The CAPTCHA Project. http://www.captcha.net.
[4] W. Cheswick. Johnny Can Obfuscate: Beyond Mother’s Maiden Name. In Proceedings of the 1st USENIX Workshop on Hot Topics in Security (HotSec), 2006.
[5] N. Chou, R. Ledesma, Y. Teraguchi, and J. C. Mitchell. Client-side defense against web-based identity theft. In Proceedings of the Network and Distributed Systems Security (NDSS), 2004.
[6] FinExtra.com. Phishers move to counteract bank security programmes. http://www.finextra.com/fullstory.asp?id=14149.
[7] S. Hocevar. PWNtcha - Captcha Decoder. http://sam.zoy.org/pwntcha.
[8] N. Hopper and M. Blum. Secure Human Identification Protocols. In AsiaCrypt, 2001.
[9] IETF Working Group. Transport Layer Security (TLS). http://www.ietf.org/html.charters/tls-charter.html, 2006.
[10] International Organization for Standardization (ISO). ISO 7816 Smart Card Standard. http://www.iso.org/.
[11] C. Jackson, D. Boneh, and J. C. Mitchell. Stronger Password Authentication Using Virtual Machines. http://crypto.stanford.edu/SpyBlock/spyblock.pdf.
[12] A. Josang, D. Povey, and A. Ho. What You See is Not Always What You Sign. In Annual Technical Conference of the Australian UNIX and Open Systems User Group, 2002.
[13] I. Krawarik and M. Kwauka. Attacken aufs Konto (in German). http://www.ispa.at/www/getFile.php?id=846, Jan 2007.
[14] T. Matsumoto and H. Imai. Human Identification Through Insecure Channel. In EuroCrypt, 1991.
[15] J. M. McCune, A. Perrig, and M. K. Reiter. Bump in the Ether: A Framework for Securing Sensitive User Input. In Proceedings of the USENIX Annual Technical Conference, June 2006.
[16] Microsoft Corporation. Internet Explorer 7 features. http://www.microsoft.com/windows/ie/ie7/about/features/default.mspx.
[17] G. Mori and J. Malik. Recognizing Objects in Adversarial Clutter: Breaking a Visual CAPTCHA. In Proceedings of the IEEE Computer Vision and Pattern Recognition Conference (CVPR). IEEE Computer Society Press, 2003.
[18] S. Mori, C. Y. Suen, and K. Yamamoto. Historical review of OCR research and development. Document image analysis, pages 244–273, 1995.
[19] A. Moshchuk, T. Bragin, S. D. Gribble, and H. M. Levy. A Crawler-based Study of Spyware on the Web. In Proceedings of the 13th Annual Network and Distributed System Security Symposium (NDSS), February 2006.
[20] S. Pearson. Trusted Computing Platforms. Prentice Hall, 2002.
[24] A. Spalka, A. Cremers, and H. Langweg. Protecting the Creation of Digital Signatures with Trusted Computing Platform Technology Against Attacks by Trojan Horse. In IFIP Security Conference, 2001.
[25] A. Spalka, A. Cremers, and H. Langweg. Trojan Horse Attacks on Software for Electronic Signatures. Informatica, 26, 2002.
[26] W3C Working Group. Inaccessibility of CAPTCHA, Alternatives to Visual Turing Tests on the Web. http://www.w3.org/TR/turingtest/.
[27] C. Wang, H. Hwang, and T. Tsai. One the Matsumoto and Imai’s human identification scheme. In EuroCrypt, 1995.
[21] Pressetext Austria. Phishing-Schäden bleiben am Kunden hängen (in German). http://www.pressetext.at/pte.mc?pte=061116033, Nov 2006.
[22] B. Ross, C. Jackson, N. Miyake, D. Boneh, and J. C. Mitchell. Stronger Password Authentication Using Browser Extensions. In Proceedings of the 14th Usenix Security Symposium, 2005.
[23] Secure Information Technology Center (A-SIT). The Austrian Citizen Card. http://www.buergerkarte.at/index en.html, 2005.