title:ICSD: An Automatic System for Insecure Code Snippet Detection in
Stack Overflow over Heterogeneous Information Network
author:Yanfang Ye and
Shifu Hou and
Lingwei Chen and
Xin Li and
Liang Zhao and
Shouhuai Xu and
Jiabin Wang and
Qi Xiong
ICSD: An Automatic System for Insecure Code Snippet Detection
in Stack Overflow over Heterogeneous Information Network
Yanfang Ye ∗, Shifu Hou, Lingwei Chen, Xin Li
Liang Zhao
Department of Computer Science
and Electrical Engineering
West Virginia University, WV, USA
PI:EMAIL
Department of Information Science
and Technology
George Mason University, VA, USA
PI:EMAIL
Shouhuai Xu
Department of Computer Science
University of Texas at San Antonio, TX, USA
PI:EMAIL
Jiabin Wang, Qi Xiong
Tencent Security Lab
Tencent, Guangdong, China
PI:EMAIL
ABSTRACT
As the popularity of modern social coding paradigm such as Stack
Overflow grows, its potential security risks increase as well (e.g., in-
secure codes could be easily embedded and distributed). To address
this largely overlooked issue, in this paper, we bring an important
new insight to exploit social coding properties in addition to code
content for automatic detection of insecure code snippets in Stack
Overflow. To determine if the given code snippets are insecure, we
not only analyze the code content, but also utilize various kinds
of relations among users, badges, questions, answers, code snip-
pets and keywords in Stack Overflow. To model the rich semantic
relationships, we first introduce a structured heterogeneous infor-
mation network (HIN) for representation and then use meta-path
based approach to incorporate higher-level semantics to build up
relatedness over code snippets. Later, we propose a novel network
embedding model named snippet2vec for representation learning in
HIN where both the HIN structures and semantics are maximally
preserved. After that, a multi-view fusion classifier is constructed
for insecure code snippet detection. To the best of our knowledge,
this is the first work utilizing both code content and social coding
properties to address the code security issues in modern software
coding platforms. Comprehensive experiments on the data collec-
tions from Stack Overflow are conducted to validate the effective-
ness of the developed system ICSD which integrates our proposed
method in insecure code snippet detection by comparisons with
alternative approaches.
CCS CONCEPTS
• Security and privacy → Software security engineering; •
Computing methodologies → Machine learning algorithms;
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
© 2018 Association for Computing Machinery.
ACM ISBN 978-1-4503-6569-7/18/12...$15.00
https://doi.org/10.1145/3274694.3274742
KEYWORDS
Social Coding, Code Security, Heterogeneous Information Network,
Network Representation Learning, Multi-view Fusion
ACM Reference Format:
Yanfang Ye ∗, Shifu Hou, Lingwei Chen, Xin Li, Liang Zhao, Shouhuai Xu,
and Jiabin Wang, Qi Xiong. 2018. ICSD: An Automatic System for Insecure
Code Snippet Detection in Stack Overflow over Heterogeneous Information
Network. In 2018 Annual Computer Security Applications Conference (ACSAC
’18), December 3–7, 2018, San Juan, PR, USA. ACM, New York, NY, USA,
11 pages. https://doi.org/10.1145/3274694.3274742
1 INTRODUCTION
Nowadays, as computing devices and Internet become increasingly
ubiquitous, software has played a vital role in modern society cov-
ering many corners of our daily lives, such as Instant Message (IM)
tools of WhatsApp and WeChat. In recent years, there has been an
exponential growth in the number of software; it’s estimated that
the global software market reached approximately $406.6 billions
in 2017 [30]. Unlike conventional approaches (e.g., code handbook
based), modern software developers heavily engage in a social cod-
ing environment, i.e., they tend to reuse code snippets and libraries
or adapt existing ready-to-use projects during the process of soft-
ware development [45]. In particular, Stack Overflow [33], as the
largest online programming discussion platform, has attracted 8.9
million registered developers [38]. The vibrant discussions and
ready-to-use code snippets make it one of the most important infor-
mation sources to software developers [10]. Despite the apparent
benefits of such social coding environment, its profound implica-
tions into the security of software remain poorly understood [1, 17].
For example, can one trust code snippets posted in Stack Overflow?
As the popularity of Stack Overflow grows, the incentive of
launching a large-scale security attack by exploiting the vulnerabil-
ity of posted code snippets increases as well. According to a recent
study [3], collected question-answer samples from Stack Overflow
contain various security-related issues such as encryption with
insecure mode, insecure Application Programming Interface (API)
usage and so on. Those innocent-looking yet insecure code snippets
- if not properly handled and directly transplanted to production
software - could cause severe damage or even a disaster (e.g., dis-
rupting system operations, leaking sensitive information) [3, 47].
For example, as shown in Figure 1, since cryptocurrency has grown
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Y. Ye et al.
popular, attackers have injected malicious mining code such as
Coinhive - a cryptocurrency mining service - into Stack Overflow;
once innocent developers reuse or copy-paste such code snippets
to generate the production software, the software users’ devices
could be compromised (e.g., processing power would be stolen to
mine bits of cryptocurrency). Stack Overflow has been aware of
the negative impacts of insecure code infiltrations; unfortunately
there has been no principled way of dealing with insecure code
snippets included in the posted questions/answers other than label-
ing the moderator flag, downvoting those threads or warning in the
comments [3]. Given the rich structure and information of Stack
Overflow with ever-evolving programming languages, there is ap-
parent and imminent need to develop novel and sound solutions to
address the issue of code snippet security in Stack Overflow.
Figure 1: Example of code security attacks in Stack Overflow.
To address the above challenges, an important new insight brought
by this work is to exploit social coding properties in addition to
code content for automatic detection of insecure code snippets. As
a social coding environment, Stack Overflow is characterized by
user communication through questions and answers [12], that is,
a rich source of heterogeneous information are available in Stack
Overflow including users, badges, questions, answers, code snip-
pets, and the rich semantic relations among them. For example, as
shown in Figure 2, to detect if a code snippet (Code-2) is insecure,
using the code content (e.g., methods, functions, APIs, etc.) alone
may not be sufficient; however, other rich information provided
in Stack Overflow could be valuable for the prediction, such as (1)
the same user (User-1) may be prone to post different insecure code
snippets (Code-1 and Code-2) due to his/her coherent code writing
style, or (2) similar insecure code snippets (Code-2 and Code-3) may
be posted by a group of inexperienced users (User-1 and User-2 both
only had the bronze badge of “commentator” that could be gained
by leaving 10 comments in Stack Overflow).
Figure 2: An example of relatedness over code snippets.
To utilize the social coding properties of Stack Overflow data
(i.e., including different entities of users, badges, questions, answers
and code snippets, as well as the rich semantic relationships among
them) in addition to code content (i.e., keywords extracted from
code snippets such as function names, methods and APIs), in this pa-
per, we propose to introduce a heterogeneous information network
(HIN) [39, 41] as an abstract representation. Then we use meta-path
[41] to incorporate higher-level semantic relationships to build up
relatedness over the code snippets. Afterwards, to reduce the high
computation and space cost, we further propose a novel network
embedding model named snippet2vec for node (i.e., code snippet)
representation learning in the HIN, where both HIN structure and
semantics are maximally preserved. After that, a multi-view fusion
classifier is constructed for automatic detection of insecure code
snippets in Stack Overflow. We develop a system called ICSD inte-
grating our proposed method for insecure code snippet detection,
which has the following major traits:
• Novel feature representation of Stack Overflow data. Secu-
rity risks arising from the new paradigm of social coding are
more sophisticated than those from conventional wisdom, which
requires a deeper understanding and a greater modeling effort.
In addition to code content, a rich source of heterogeneous in-
formation in Stack Overflow including users, badges, questions,
answers, code snippets, and the semantic relations among them
is also available. To utilize such social coding properties (e.g.,
question-code, answer-code, code-keywords, user-question, user-
answer, question-answer, and user-badge relations), we propose
to introduce HIN as an abstract representation of Stack Overflow
data. Then a meta-path based approach is exploited to charac-
terize the relatedness over code snippets. The proposed solution
provides a natural way of expressing complex relationships in
social coding platforms such as Stack Overflow, which has not
been studied in the open literature to our best knowledge.
• Multi-view fusion classifier based on novel representation
learning model. Based on a set of built meta-path schemes,
to reduce the high computation and space cost, a new network
embedding model named snippet2vec is proposed to learn the low-
dimensional representations for the nodes (i.e., code snippets)
in the HIN, which are capable to preserve both the semantics
and structural correlations between different types of nodes.
Then, given different sets of meta-path schemes, different kinds
of node (i.e., code snippet) representations will be learned by
using snippet2vec. To aggregate these different learned node
representations, we propose a multi-view fusion classifier to
learn importance of them and thus to make predictions (i.e., a
given code snippet will be labeled as either insecure or not).
• A practical system for automatic detection of insecure code
snippets. Based on the collected and annotated data from Stack
Overflow, we develop a practical system named ICSD integrating
our proposed method for automatic detection of insecure code
snippets. We provide comprehensive experimental studies to
validate the performance of our developed system in compar-
isons with alternative approaches. This work is the first attempt
utilizing both code content and social coding properties for auto-
matic analysis of code security in Stack Overflow. The proposed
method and developed system can also be easily expanded to
ICSD: An Automatic System for Insecure Code Snippet Detection
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Figure 3: System architecture of ICSD.
code security analysis in other social coding platforms, such as
GitHub and Stack Exchange.
The rest of the paper is organized as follows. Section 2 presents
our system architecture. Section 3 introduces our proposed method
in detail. Based on the collected and annotated data from Stack
Overflow, Section 4 systematically evaluates the effectiveness of
our developed system ICSD integrating our proposed method by
comparisons with alternative approaches. Section 5 discusses the
related work. Finally, Section 6 concludes.
2 SYSTEM ARCHITECTURE
The system architecture of ICSD is shown in Figure 3, which is
developed for insecure code snippet detection in Stack Overflow. It
consists of the following major components:
• Data collector. A set of crawling tools are developed to col-
lect the data from Stack Overflow. The collected data includes
users’ profiles, their posted questions and answers, and the code
snippets embedded in the questions/answers.
• Feature extractor. Resting on the data collected from the pre-
vious module, to depict the code snippets, it first extracts the
content-based features from the collected code snippets (i.e., key-
words such as function names, methods and APIs), and then
analyzes various relationships among different types of enti-
ties (i.e., user, badge, question, answer, code snippet, keyword),
including i) question-have-code, ii) answer-include-code, iii) code-
contain-keyword, iv) user-post-question, v) user-supply-answer,
vi) answer-echo-question, and vii) user-gain-badge relations. (See
Section 3.1 for details.)
• HIN constructor. In this module, based on the features extracted
from the previous component, a structured HIN is first presented
to model the relationships among different types of entities; and
then different meta-paths are built from the HIN to capture the
relatedness over code snippets from different views (i.e., with
different semantic meanings). (See Section 3.2 for details.)
• snippet2vec. Based on the built meta-path schemes, to reduce
the high computation and space cost, a new network embed-
ding model snippet2vec is proposed to learn the low-dimensional
representations for the nodes in HIN, which are capable to pre-
serve both the semantics and structural correlations between
different types of nodes. In snippet2vec, given a set of different
meta-path schemes, a meta-path guided random walk strategy is
first proposed to map the word-context concept in a text corpus
into a HIN; then skip-gram is leveraged to learn effective node
representation for a HIN. (See Section 3.3 for details.)
• Multi-view fusion classifier. Given different sets of meta-path
schemes, different kinds of node (i.e., code snippet) representa-
tions will be learned by using snippet2vec. To aggregate these
different representations, a multi-view fusion classifier is con-
structed to learn importance of them and thus to make predic-
tions (i.e., the unlabeled code snippets will be predicted if they
are insecure or not). (See Section 3.4 for details.)
3 PROPOSED METHOD
In this section, we present the detailed approaches of how we
represent the code snippets in Stack Overflow utilizing both code
content and social coding properties simultaneously, and how we
solve the insecure code snippet detection problem based on the
representation.
3.1 Feature Extraction
Code snippets. Stack Overflow provides the discussion platform
for software developers to post their questions and answers about
ever-evolving programming languages including Java, JavaScript,
C/C++/C#, Python, PHP, perl, etc. In this paper, we will focus on
Java programming language for Android application (app) develop-
ment as a showcase for the following reasons: (1) Java is one of the
most popular programming languages in Stack Overflow [44]. (2)
Due to the mobility and ever expanding capabilities, mobile devices
have recently surpassed desktop and other media - it is estimated
that 77.7% of all devices connected to the Internet will be smart
phones in 2019 [21, 22] (leaving PCs falling behind at 4.8%). Android,
as an open source and customizable operating system for mobile
devices, is currently dominating the smart phone market by 82.8%
[24]. (3) Billions of mobile device users with millions of Android
apps installed have attracted more and more developers; however,
most of these Android mobile apps have poorly implemented se-
curity mechanisms partially because developers are inexperienced,
distracted or overwhelmed [1, 35]. Indeed developers tend to re-
quest more permissions than what are actually needed, often use
insecure options for Inter Component Communication (ICC), and
fail to store sensitive information in private areas [44]. Code snip-
pets in Stack Overflow are surrounded by (cid:3)code(cid:4) (cid:3)/code(cid:4) tags, and
ACSAC ’18, December 3–7, 2018, San Juan, PR, USA
Y. Ye et al.
they can thus easily be separated from accompanying texts before
being extracted. Then, content-based features will be further ex-
tracted from the collected code snippets: we will first remove all
the punctuations and stopwords; and then we will extract the key-
words including function names, methods, APIs and parameters to
represent the content of code snippets.
Social coding properties. To depict a code snippet in Stack Over-
flow, we not only utilize its above extracted content-based features,
but also consider its social coding properties including followings.
• R1: To describe the relation that a question thread has a code
snippet included, we generate the question-have-code matrix
H where each element hi, j ∈ {0, 1} indicates whether question i
has code snippet j.
• R2: To denote the relation that an answer thread includes a
code snippet, we generate the answer-include-code matrix I
where each element ii, j ∈ {0, 1} means if answer i includes code
snippet j.
• R3: To represent the relation that a code snippet contains a
specific keyword (e.g., function name of “Coinhive”), we build the
code-contain-keyword matrix C whose element ci, j ∈ {0, 1}
denotes whether code snippet i contains keyword j.
• R4: To describe the relation between a user and a question he/she
posts, we generate the user-post-question matrix P where each
element pi, j ∈ {0, 1} denotes if user i posts question j.
• R5: To represent the relation of a user and an answer he/she
supplies, we generate the user-supply-answer matrix S where
each element si, j ∈ {0, 1} denotes whether the user i supplies
answer j.
• R6: To denote the Q&A relationship, we build the answer-echo-
question matrix E whose element ei, j ∈ {0, 1} denotes whether
answer i echoes/responds to question j.
• R7: In order to encourage engagement, Stack Overflow has
adopted a strategy of gamification [12] - users will be rewarded
for their valued contributions to the forum. For example, “illumi-
nator” badge (gold level in answer badges) will be awarded to the
users who edit and answer 500 questions (both actions within
12 hours, answer score > 0). This can be seen as a measure of
a user’s expertise by potential recruiters [6]. In Stack Overflow,
there are different kinds of badges (e.g., question badges, answer
badges, etc.) with different levels (i.e., gold, silver, and bronze).
To describe the relationship between a user and a specific badge
he/she gains, we build the user-gain-badge matrix G whose
element дi, j ∈ {0, 1} denotes if user i gain badge j.
3.2 HIN Constructor
In order to depict users, badges, questions, answers, code snippets,
keywords as well as the rich relationships among them (i.e., R1-