    ```
12. 为第一个集群授予您为此设置创建的 ticket。
    请注意，在授予 ticket 前不需要定义 ticket 约束。最初为集群授予一个
    ticket 后，booth 会接管票据管理，除非您使用
    `pcs booth ticket revoke`{.literal} 命令手动覆盖此票据。有关
    `pcs booth`{.literal} 管理命令的详情请参考 `pcs booth`{.literal}
    命令的 PCS 帮助屏幕。
    ``` literallayout
    [cluster1-node1 ~] # pcs booth ticket grant apacheticket
    ```
:::
可在任何时间添加或删除票据，即使完成此步骤后也是如此。但是，添加或删除一个
ticket 后，您必须将配置文件同步到其他节点和集群，并赋予这个问题单。
有关您可用于清理和删除 Booth 配置文件、票据和资源的其他 Booth
管理命令的详情，请查看 `pcs booth`{.literal} 命令的 PCS 帮助屏幕。
:::
:::
[]{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html}
::: chapter
::: titlepage
# []{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#assembly_remote-node-management-configuring-and-managing-high-availability-clusters}第 29 章 将非 corosync 节点整合到集群中： pacemaker_remote 服务 {.title}
:::
`pacemaker_remote`{.literal} 服务允许没有运行 `corosync`{.literal}
的节点集成到集群中，让集群管理它们的资源，就像它们是实际的集群节点一样。
`pacemaker_remote`{.literal} 服务提供的功能如下：
::: itemizedlist
-   `pacemaker_remote`{.literal} 服务允许您扩展超过红帽支持 RHEL 8.1 的
    32 个节点。
-   `pacemaker_remote`{.literal}
    服务允许您将虚拟环境作为集群资源来管理，还可以将虚拟环境中的单个服务作为集群资源来管理。
:::
以下术语用于描述 `pacemaker_remote`{.literal} 服务：
::: itemizedlist
-   [*集群节点*]{.emphasis} - 运行高可用性服务（`pacemaker 和`{.literal}
    `corosync`{.literal}）的节点。
-   [*远程节点*]{.emphasis} - 运行 `pacemaker_remote`{.literal}
    的节点，用于远程集成到集群中，而无需 `corosync`{.literal}
    集群成员资格。远程节点被配置为使用 `ocf:pacemaker:remote`{.literal}
    资源代理的集群资源。
-   [*客户机节点*]{.emphasis} - 运行 `pacemaker_remote`{.literal}
    服务的虚拟客户机节点。虚拟客体资源由集群管理，它由集群启动，并作为远程节点集成到集群中。
-   [*pacemaker_remote*]{.emphasis} - 是一个可在远程节点和 Pacemaker
    集群环境中 KVM
    客户机节点中执行远程应用程序管理的服务守护进程。此服务是 Pacemaker
    的本地 executor
    守护进程(`pacemaker-execd`{.literal})的增强版本，能够在不运行
    corosync 的节点上远程管理资源。
:::
运行 `pacemaker_remote`{.literal} 服务的 Pacemaker 集群具有以下特征：
::: itemizedlist
-   远程节点和客户机节点运行 `pacemaker_remote`{.literal}
    服务（虚拟机端只需要很少的配置）。
-   在集群节点上运行的集群堆栈（`pacemaker`{.literal} 和
    `corosync`{.literal}）连接到远程节点上的
    `pacemaker_remote`{.literal} 服务，允许它们集成到集群中。
-   在集群节点上运行的集群堆栈（`pacemaker`{.literal} 和
    `corosync`{.literal}）可启动客户机节点，并立即连接到客户机节点上的
    `pacemaker_remote`{.literal} 服务，允许它们集成到集群中。
:::
集群节点与集群节点管理的远程和客户机节点之间的关键区别在于远程和客户机节点没有运行集群堆栈。这意味着远程和虚拟机节点有以下限制：
::: itemizedlist
-   它们不会在仲裁里进行
-   它们不执行隔离设备操作
-   他们没有有资格成为集群的指定控制器（DC）
-   它们本身不运行完整的 `pcs`{.literal} 命令
:::
另外，远程节点和客户机节点不与与集群堆栈关联的可扩展性限制绑定。
除这些限制外，远程和客户机节点的行为与集群节点在资源管理方面的行为类似，且远程和虚拟机节点本身也可被保护。集群完全能够在每个远程和客户机节点上管理和监控资源：您可以针对它们构建限制，将它们置于待机状态，或使用
`pcs`{.literal}
命令在群集节点上执行任何其他操作。远程和虚拟机节点如集群节点一样显示在集群状态输出中。
::: section
::: titlepage
# []{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#ref_host-and-guest-authentication-of-remote-nodes-remote-node-management}pacemaker_remote 节点的主机和虚拟机验证 {.title}
:::
集群节点与 pacemaker_remote
之间的连接是使用传输层安全（TLS）进行安全保护，使用预共享密钥（PSK）加密和验证
TCP（默认使用端口 3121）进行验证。这意味着集群节点和运行
`pacemaker_remote`{.literal}
的节点必须共享相同的私钥。默认情况下，此密钥必须放在集群节点和远程节点上的
`/etc/pacemaker/authkey`{.literal} 中。
`pcs cluster node add-guest`{.literal} 命令为客户机节点设置
`authkey`{.literal}，而 `pcs cluster node add-remote`{.literal}
命令则为远程节点设置 `authkey`{.literal}。
:::
::: section
::: titlepage
# []{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#proc_configuring-kvm-guest-nodes-remote-node-management}配置 KVM 客户机节点 {.title}
:::
Pacemaker 客户机节点是一个运行 `pacemaker_remote`{.literal}
服务的虚拟客户机节点。虚拟客户机节点由集群管理。
::: section
::: titlepage
## []{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#_guest_node_resource_options}客户端节点资源选项 {.title}
:::
将虚拟机配置为充当客户机节点时，您可以创建一个 `VirtualDomain`{.literal}
资源，该资源用于管理虚拟机。有关您可以为 `VirtualDomain`{.literal}
资源设置的选项的描述，请参阅虚拟域资源选项中的\"虚拟域资源
[资源选项](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-virtual-domain-as-a-resource-configuring-and-managing-high-availability-clusters#ref_virtual-domain-resource-options-configuring-virtual-domain-as-a-resource){.link}
\"表。
除了 `VirtualDomain`{.literal}
资源选项外，元数据选项将资源定义为客户机节点，并定义了连接参数。您可以使用
`pcs cluster node add-guest`{.literal}
命令设置这些资源选项。下表描述了这些元数据选项。
::: table
[]{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#tb-remoteklm-options-HAAR}
**表 29.1. 将 KVM 资源配置为远程节点的元数据选项**
::: table-contents
  项                                   默认值                                       描述
  ------------------------------------ -------------------------------------------- --------------------------------------------------------------------------------------------------------------------------------------------------------------
  `remote-node`{.literal}              \                                     此资源定义的客户机节点的名称。这可让资源作为客户机节点启用，并定义用于识别客户端节点的唯一名称。[*WARNING*]{.emphasis}：这个值不能与任何资源或节点 ID 重叠。
  `remote-port`{.literal}              3121                                         配置一个自定义端口，用于到 `pacemaker_remote`{.literal} 的客户机连接
  `remote-addr`{.literal}              `pcs host auth`{.literal} 命令中提供的地址   要连接的 IP 地址或主机名
  `remote-connect-timeout`{.literal}   60s                                          待处理的客户端连接超时前的时间
:::
:::
:::
::: section
::: titlepage
## []{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#_integrating_a_virtual_machine_as_a_guest_node}将虚拟机整合为客户机节点 {.title}
:::
以下步骤是对 Pacemaker 启动虚拟机并使用 `libvirt`{.literal} 和 KVM
虚拟机将该虚拟机集成为客户机节点的步骤的高级概述。
::: orderedlist
**流程**
1.  配置 `VirtualDomain`{.literal} 资源。
2.  在每个虚拟机上输入以下命令来安装 `pacemaker_remote`{.literal}
    软件包，启动 `pcsd`{.literal}
    服务并使其在启动时运行，并通过防火墙允许 TCP 端口 3121。
    ``` literallayout
    # yum install pacemaker-remote resource-agents pcs
    # systemctl start pcsd.service
    # systemctl enable pcsd.service
    # firewall-cmd --add-port 3121/tcp --permanent
    # firewall-cmd --add-port 2224/tcp --permanent
    # firewall-cmd --reload
    ```
3.  为每个虚拟机分配一个静态网络地址和唯一主机名，适用于所有节点。有关为客户端虚拟机设置静态
    IP 地址的详情请参考
    [*[虚拟化部署和管理指南》]{.citetitle}*]{.emphasis}。
4.  如果您还没有这样做，请在要整合为理想节点的节点中验证
    `pcs`{.literal}。
    ``` literallayout
    # pcs host auth nodename
    ```
5.  使用以下命令，将现有的 `VirtualDomain`{.literal}
    资源转换为客户机节点。这个命令必须在集群节点上运行，而不是在要添加的客户端节点上运行。除了转换资源外，这个命令会将
    `/etc/pacemaker/authkey`{.literal}
    复制到客户机节点，并在客户机节点上启动并启用
    `pacemaker_remote`{.literal}
    守护进程。客户机节点的节点名称（您可以随意定义）可以与节点的主机名不同。
    ``` literallayout
    # pcs cluster node add-guest nodename resource_id [options]
    ```
6.  创建 `VirtualDomain`{.literal}
    资源后，您可以像对待集群中的任何其他节点一样对待客户机节点。例如，您可以创建资源并在客户机节点中运行的资源上放置资源约束，如下命令可在集群节点中运行。您可以在组群中包含客户机节点，它们允许您对存储设备、文件系统和虚拟机进行分组。
    ``` literallayout
    # pcs resource create webserver apache configfile=/etc/httpd/conf/httpd.conf op monitor interval=30s
    # pcs constraint location webserver prefers nodename
    ```
:::
:::
:::
::: section
::: titlepage
# []{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#proc_configuring-remote-nodes-remote-node-management}配置 Pacemaker 远程节点 {.title}
:::
远程节点被定义为将 `ocf:pacemaker:remote`{.literal}
作为资源代理的集群资源。您可以使用
`pcs cluster node add-remote`{.literal} 命令创建此资源。
::: section
::: titlepage
## []{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#_remote_node_resource_options}远程节点资源选项 {.title}
:::
下表描述了您可以为 `远程`{.literal} 资源配置的资源选项。
::: table
[]{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#tb-remotenode-options-HAAR}
**表 29.2. 远程节点的资源选项**
::: table-contents
  项                               默认值                                          描述
  -------------------------------- ----------------------------------------------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  `reconnect_interval`{.literal}   0                                               在到远程节点活跃连接断开后，在尝试重新连接到远程节点前等待的时间（以秒为单位）。这个等待是重复的。如果在等待时间过后重新连接失败，会在观察等待时间后进行一个新的重新连接尝试。当使用这个选项时，Pacemaker 会在每次等待的时间段内一直尝试退出并连接到远程节点。
  `server`{.literal}               使用 `pcs host auth`{.literal} 命令指定的地址   要连接的服务器。这可以是 IP 地址或主机名。
  `port`{.literal}                                                                 要连接的 TCP 端口。
:::
:::
:::
::: section
::: titlepage
## []{#assembly_remote-node-management-configuring-and-managing-high-availability-clusters.html#_remote_node_configuration_overview}远程节点配置概述 {.title}
:::
以下流程概述了配置 Pacemaker 远程节点并将该节点集成到现有 Pacemaker
集群环境中的步骤。
::: orderedlist
**流程**
1.  在您要配置为远程节点的节点上，允许通过本地防火墙与集群相关的服务。
    ``` literallayout
    # firewall-cmd --permanent --add-service=high-availability
    success
    # firewall-cmd --reload
    success
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    如果您直接使用 `iptables`{.literal}，或者除 `firewalld`{.literal}
    之外的其他防火墙解决方案，那么只需打开以下端口： TCP 端口 2224 和
    3121。
    :::
2.  在远程节点上安装 `pacemaker_remote`{.literal} 守护进程。
    ``` literallayout
    # yum install -y pacemaker-remote resource-agents pcs
    ```
3.  在远程节点上启动并启用 `pcsd`{.literal}。
    ``` literallayout