288. 262
289. 263
290. 264
291. 265
292. 266
293. 267
294. 268
295. 269
296. 270
297. 271
298. 272
299. 273
300. 274
301. 275
302. 276
303. 277
304. 278
305. 279
306. 280
307. 281
308. 282
309. 283
310. 284
311. 285
312. 286
313. 287
314. 288
315. 289
316. 290
317. 291
318. 292
319. 293
320. 294
321. 295
322. 296
323. 297
324. 298
325. 299
326. 300
327. 301
328. 302
329. 303
330. 304
331. 305
332. 306
333. 307
334. 308
335. 309
336. 310
337. 311
338. 312
339. 313
340. 314
341. 315
342. 316
343. 317
344. 318
345. 319
346. 320
347. 321
348. 322
349. 323
350. 324
351. 325
352. 326
353. 327
354. 328
355. 329
356. 330
357. 331
358. 332
359. 333
360. 334
361. 335
362. 336
363. 337
364. 338
365. 339
366. 340
367. 341
368. 342
BLACK HAT GO
Go Programming for Hackers and
Pentesters
by Tom Steele, Chris Patten, and Dan Kottmann
San Francisco
BLACK HAT GO. Copyright © 2020 by Tom Steele, Chris Patten, and Dan
Kottmann.
All rights reserved. No part of this work may be reproduced or transmitted in any
form or by any means, electronic or mechanical, including photocopying,
recording, or by any information storage or retrieval system, without the prior
written permission of the copyright owner and the publisher.
ISBN-10: 1-59327-865-9
ISBN-13: 978-1-59327-865-6
Publisher: William Pollock
Production Editor: Laurel Chun
Cover Illustration: Jonny Thomas
Interior Design: Octopod Studios
Developmental Editors: Frances Saux and Zach Lebowski
Technical Reviewer: Alex Harvey
Copyeditor: Sharon Wilkey
Compositor: Danielle Foster
Proofreader: Brooke Littrel
Indexer: Beth Nauman-Montana
For information on distribution, translations, or bulk sales, please contact No Starch
Press, Inc. directly:
No Starch Press, Inc.
245 8th Street, San Francisco, CA 94103
phone: 1.415.863.9900; PI:EMAIL
www.nostarch.com
Library of Congress Cataloging-in-Publication Data
Names: Steele, Tom (Security Consultant), author. | Patten, Chris, author.
| Kottmann, Dan, author.
Title: Black Hat Go : Go programming for hackers and pentesters / Tom
Steele, Chris Patten, and Dan Kottmann.
Description: San Francisco : No Starch Press, 2020. | Includes
bibliographical references and index. | Summary: "A guide to Go that
begins by introducing fundamentals like data types, control structures,
and error handling. Provides instruction on how to use Go for tasks such
as sniffing and processing packets, creating HTTP clients, and writing
exploits."-- Provided by publisher.
Identifiers: LCCN 2019041864 (print) | LCCN 2019041865 (ebook) | ISBN
9781593278656 | ISBN 9781593278663 (ebook)
Subjects: LCSH: Penetration testing (Computer security) | Go (Computer
program language)
Classification: LCC QA76.9.A25 S739 2020 (print) | LCC QA76.9.A25 (ebook)
| DDC 005.8--dc23
LC record available at https://lccn.loc.gov/2019041864
LC ebook record available at https://lccn.loc.gov/2019041865
No Starch Press and the No Starch Press logo are registered trademarks of No
Starch Press, Inc. Other product and company names mentioned herein may be the
trademarks of their respective owners. Rather than use a trademark symbol with
every occurrence of a trademarked name, we are using the names only in an
editorial fashion and to the benefit of the trademark owner, with no intention of
infringement of the trademark.
The information in this book is distributed on an “As Is” basis, without warranty.
While every precaution has been taken in the preparation of this work, neither the
authors nor No Starch Press, Inc. shall have any liability to any person or entity
with respect to any loss or damage caused or alleged to be caused directly or
indirectly by the information contained in it.
ABOUT THE AUTHORS
Tom Steele has been using Go since the version 1 release in
2012 and was one of the first in his field to leverage the
language for offensive tooling. He is a managing principal
research consultant at Atredis Partners with over 10 years of
experience performing adversarial and research-based security
assessments. Tom has presented and conducted training
courses at numerous conferences, including Defcon, Black
Hat, DerbyCon, and BSides. Outside of tech, Tom is also a
Black Belt in Brazilian jiujitsu who competes regularly, both
regionally and nationally. He owns and operates his own
jiujitsu academy in Idaho.
Chris Patten is the founding partner and lead consultant of
STACKTITAN, a specialized adversarial services security
consultancy. Chris has been practicing in the security industry
for more than 25 years in various capacities. He spent the last
decade consulting for a number of commercial and
government organizations on diverse security issues, including
adversarial offensive techniques, threat hunting capabilities,
and mitigation strategies. Chris spent his latest tenure leading
one of North America’s largest advanced adversarial teams.
Prior to formal consulting, Chris honorably served in the
US Air Force, supporting the war-fighting effort. He actively
served within the Department of Defense Special Operations
Intelligence community at USSOCOM, consulting for Special
Operations Groups on sensitive cyber warfare initiatives.
Following Chris’s military service, he held lead architect
positions at numerous Fortune 500 telecommunication
companies, working with partners in a research capacity.
Dan Kottmann is a founding partner and lead consultant of
STACKTITAN. He has played an integral role in the growth
and development of the largest North American adversarial
consultancy, directly influencing technical tradecraft, process
efficiency, customer experience, and delivery quality. With 15
years of experience, Dan has dedicated nearly the entirety of
his professional career to cross-industry, customer-direct
consulting and consultancy development, primarily focused on
information security and application delivery.
Dan has presented at various national and regional security
conferences, including Defcon, BlackHat Arsenal, DerbyCon,
BSides, and more. He has a passion for software development
and has created various open-source and proprietary
applications, from simple command line tools to complex,
three-tier, and cloud-based web applications.
ABOUT THE TECHNICAL REVIEWER
Alex Harvey has been working with technology his whole life
and got his start with embedded systems, robotics, and
programming. He moved into information security about 15
years ago, focusing on security testing and research. Never one
to shy away from making a tool for the job, he started using
the Go programming language and has not looked back.
BRIEF CONTENTS
Foreword by HD Moore
Acknowledgments
Introduction
Chapter 1: Go Fundamentals
Chapter 2: TCP, Scanners, and Proxies
Chapter 3: HTTP Clients and Remote Interaction with Tools
Chapter 4: HTTP Servers, Routing, and Middleware
Chapter 5: Exploiting DNS
Chapter 6: Interacting with SMB and NTLM
Chapter 7: Abusing Databases and Filesystems
Chapter 8: Raw Packet Processing
Chapter 9: Writing and Porting Exploit Code
Chapter 10: Go Plugins and Extendable Tools
Chapter 11: Implementing and Attacking Cryptography
Chapter 12: Windows System Interaction and Analysis
Chapter 13: Hiding Data with Steganography
Chapter 14: Building a Command-and-Control RAT
Index
CONTENTS IN DETAIL
FOREWORD by HD Moore
ACKNOWLEDGMENTS
INTRODUCTION
Who This Book Is For
What This Book Isn’t
Why Use Go for Hacking?
Why You Might Not Love Go
Chapter Overview
1
GO FUNDAMENTALS
Setting Up a Development Environment
Downloading and Installing Go
Setting GOROOT to Define the Go Binary Location
Setting GOPATH to Determine the Location of Your Go Workspace
Choosing an Integrated Development Environment
Using Common Go Tool Commands
Understanding Go Syntax
Data Types
Control Structures
Concurrency
Error Handling
Handling Structured Data
Summary
2
TCP, SCANNERS, AND PROXIES
Understanding the TCP Handshake
Bypassing Firewalls with Port Forwarding
Writing a TCP Scanner
Testing for Port Availability
Performing Nonconcurrent Scanning
Performing Concurrent Scanning
Building a TCP Proxy
Using io.Reader and io.Writer
Creating the Echo Server
Improving the Code by Creating a Buffered Listener
Proxying a TCP Client
Replicating Netcat for Command Execution
Summary
3
HTTP CLIENTS AND REMOTE INTERACTION WITH
TOOLS
HTTP Fundamentals with Go
Calling HTTP APIs
Generating a Request
Using Structured Response Parsing
Building an HTTP Client That Interacts with Shodan
Reviewing the Steps for Building an API Client
Designing the Project Structure
Cleaning Up API Calls
Querying Your Shodan Subscription
Creating a Client
Interacting with Metasploit
Setting Up Your Environment
Defining Your Objective
Retrieving a Valid Token
Defining Request and Response Methods
Creating a Configuration Struct and an RPC Method
Performing Remote Calls
Creating a Utility Program
Parsing Document Metadata with Bing Scraping
Setting Up the Environment and Planning
Defining the metadata Package
Mapping the Data to Structs
Searching and Receiving Files with Bing
Summary
4
HTTP SERVERS, ROUTING, AND MIDDLEWARE
HTTP Server Basics
Building a Simple Server
Building a Simple Router
Building Simple Middleware
Routing with the gorilla/mux Package
Building Middleware with Negroni
Adding Authentication with Negroni
Using Templates to Produce HTML Responses
Credential Harvesting
Keylogging with the WebSocket API
Multiplexing Command-and-Control
Summary
5
EXPLOITING DNS
Writing DNS Clients
Retrieving A Records
Processing Answers from a Msg struct
Enumerating Subdomains
Writing DNS Servers
Lab Setup and Server Introduction
Creating DNS Server and Proxy
Summary
6
INTERACTING WITH SMB AND NTLM
The SMB Package
Understanding SMB
Understanding SMB Security Tokens
Setting Up an SMB Session
Using Mixed Encoding of Struct Fields
Understanding Metadata and Referential Fields
Understanding the SMB Implementation
Guessing Passwords with SMB
Reusing Passwords with the Pass-the-Hash Technique
Recovering NTLM Passwords
Calculating the Hash
Recovering the NTLM Hash
Summary
7
ABUSING DATABASES AND FILESYSTEMS
Setting Up Databases with Docker
Installing and Seeding MongoDB
Installing and Seeding PostgreSQL and MySQL Databases
Installing and Seeding Microsoft SQL Server Databases
Connecting and Querying Databases in Go
Querying MongoDB
Querying SQL Databases
Building a Database Miner
Implementing a MongoDB Database Miner
Implementing a MySQL Database Miner
Pillaging a Filesystem
Summary
8
RAW PACKET PROCESSING
Setting Up Your Environment
Identifying Devices by Using the pcap Subpackage
Live Capturing and Filtering Results
Sniffing and Displaying Cleartext User Credentials
Port Scanning Through SYN-flood Protections
Checking TCP Flags
Building the BPF Filter
Writing the Port Scanner
Summary
9
WRITING AND PORTING EXPLOIT CODE
Creating a Fuzzer
Buffer Overflow Fuzzing
SQL Injection Fuzzing
Porting Exploits to Go
Porting an Exploit from Python
Porting an Exploit from C
Creating Shellcode in Go
C Transform
Hex Transform
Num Transform
Raw Transform
Base64 Encoding
A Note on Assembly
Summary
10
GO PLUGINS AND EXTENDABLE TOOLS
Using Go’s Native Plug-in System
Creating the Main Program
Building a Password-Guessing Plug-in
Running the Scanner
Building Plug-ins in Lua
Creating the head() HTTP Function
Creating the get() Function
Registering the Functions with the Lua VM
Writing Your Main Function
Creating Your Plug-in Script
Testing the Lua Plug-in
Summary
11
IMPLEMENTING AND ATTACKING
CRYPTOGRAPHY
Reviewing Basic Cryptography Concepts
Understanding the Standard Crypto Library
Exploring Hashing
Cracking an MD5 or SHA-256 Hash
Implementing bcrypt
Authenticating Messages
Encrypting Data
Symmetric-Key Encryption
Asymmetric Cryptography
Brute-Forcing RC2
Getting Started
Producing Work
Performing Work and Decrypting Data
Writing the Main Function