### Title: The Dark Age of Memory Corruption Mitigations in the Spectre Era

Over the past few decades, memory corruption vulnerabilities have been a significant security concern, leading to the development of various defenses such as stack canaries, control flow integrity (CFI), and the use of memory-safe languages. These defenses are designed to prevent entire classes of vulnerabilities and enhance the overall security posture of software programs.

In this talk, we will explore how these memory corruption defenses can be bypassed using speculative execution attacks. Specifically, we will examine the cases of stack protectors, CFI, and bounds checks in the Go programming language. We will demonstrate the conditions under which these defenses can be circumvented through speculative control flow hijacking, which leverages speculative or architectural overwrites of control flow data.

Our research reveals that sensitive information can be leaked by redirecting the speculative control flow of the victim to a gadget that accesses secret data and acts as a side-channel transmitter. Furthermore, we will present, for the first time, a method for achieving this by stitching together multiple gadgets in a speculative return-oriented programming (ROP) attack.

This presentation aims to highlight the ongoing challenges in mitigating memory corruption vulnerabilities and the need for new, more robust defenses in the era of speculative execution attacks.