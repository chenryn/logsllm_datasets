Querying the ALL_TAB_SUBPARTITIONS view demonstrates that the subpartition has
been successfully deleted:
acctg=# SELECT subpartition_name, high_value FROM ALL_TAB_SUBPARTITIONS;
subpartition_name | high_value
-------------------+-------------------------------------
ASIA | FOR VALUES IN ('PAKISTAN', 'INDIA')
EUROPE | FOR VALUES IN ('ITALY', 'FRANCE')
SYS0101 | DEFAULT
(3 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 397
Database Compatibility for Oracle® Developers Guide
10.3.12 TRUNCATE TABLE
Use the TRUNCATE TABLE command to remove the contents of a table, while preserving
the table definition. When you truncate a table, any partitions or subpartitions of that
table are also truncated. The syntax is:
TRUNCATE TABLE table_name
Description
The TRUNCATE TABLE command removes an entire table, and the data that resides in
that table. When you delete a table, any partitions or subpartitions (of that table) are
deleted as well.
To use the TRUNCATE TABLE command, you must be the owner of the partitioning root, a
member of a group that owns the table, the schema owner, or a database superuser.
Parameters
table_name
The name (optionally schema-qualified) of the partitioned table.
10.3.12.1 Example - Emptying a Table
The example that follows removes the data from the sales table. Use the following
command to create the sales table:
CREATE TABLE sales
(
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY LIST(country)
(
PARTITION europe VALUES('FRANCE', 'ITALY'),
PARTITION asia VALUES('INDIA', 'PAKISTAN'),
PARTITION americas VALUES('US', 'CANADA')
);
Populate the sales table with the command:
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 398
Database Compatibility for Oracle® Developers Guide
INSERT INTO sales VALUES
(10, '4519b', 'FRANCE', '17-Jan-2012', '45000'),
(20, '3788a', 'INDIA', '01-Mar-2012', '75000'),
(40, '9519b', 'US', '12-Apr-2012', '145000'),
(20, '3788a', 'PAKISTAN', '04-Jun-2012', '37500'),
(40, '4577b', 'US', '11-Nov-2012', '25000'),
(30, '7588b', 'CANADA', '14-Dec-2012', '50000'),
(30, '9519b', 'CANADA', '01-Feb-2012', '75000'),
(30, '4519b', 'CANADA', '08-Apr-2012', '120000'),
(40, '3788a', 'US', '12-May-2012', '4950'),
(10, '9519b', 'ITALY', '07-Jul-2012', '15000'),
(10, '9519a', 'FRANCE', '18-Aug-2012', '650000'),
(10, '9519b', 'FRANCE', '18-Aug-2012', '650000'),
(20, '3788b', 'INDIA', '21-Sept-2012', '5090'),
(40, '4788a', 'US', '23-Sept-2012', '4950'),
(40, '4788b', 'US', '09-Oct-2012', '15000'),
(20, '4519a', 'INDIA', '18-Oct-2012', '650000'),
(20, '4519b', 'INDIA', '2-Dec-2012', '5090');
Querying the sales table shows that the partitions are populated with data:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
----------------+---------+---------+----------+--------------------+--------
sales_americas | 40 | 9519b | US | 12-APR-12 00:00:00 | 145000
sales_americas | 40 | 4577b | US | 11-NOV-12 00:00:00 | 25000
sales_americas | 30 | 7588b | CANADA | 14-DEC-12 00:00:00 | 50000
sales_americas | 30 | 9519b | CANADA | 01-FEB-12 00:00:00 | 75000
sales_americas | 30 | 4519b | CANADA | 08-APR-12 00:00:00 | 120000
sales_americas | 40 | 3788a | US | 12-MAY-12 00:00:00 | 4950
sales_americas | 40 | 4788a | US | 23-SEP-12 00:00:00 | 4950
sales_americas | 40 | 4788b | US | 09-OCT-12 00:00:00 | 15000
sales_europe | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_europe | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_europe | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_europe | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_asia | 20 | 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia | 20 | 3788a | PAKISTAN | 04-JUN-12 00:00:00 | 37500
sales_asia | 20 | 3788b | INDIA | 21-SEP-12 00:00:00 | 5090
sales_asia | 20 | 4519a | INDIA | 18-OCT-12 00:00:00 | 650000
sales_asia | 20 | 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(17 rows)
To delete the contents of the sales table, invoke the following command:
TRUNCATE TABLE sales;
Now, querying the sales table shows that the data has been removed but the structure is
intact:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
----------+---------+---------+---------+------+--------
(0 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 399
Database Compatibility for Oracle® Developers Guide
For more information about the TRUNCATE TABLE command, please see the PostgreSQL
documentation at:
https://www.postgresql.org/docs/11/static/sql-truncate.html
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 400
Database Compatibility for Oracle® Developers Guide
10.3.13 ALTER TABLE… TRUNCATE PARTITION
Use the ALTER TABLE… TRUNCATE PARTITION command to remove the data from the
specified partition, leaving the partition structure intact. The syntax is:
ALTER TABLE table_name TRUNCATE PARTITION partition_name
[{DROP|REUSE} STORAGE]
Description
Use the ALTER TABLE… TRUNCATE PARTITION command to remove the data from the
specified partition, leaving the partition structure intact. When you truncate a partition,
any subpartitions of that partition are also truncated.
ALTER TABLE… TRUNCATE PARTITION will not cause ON DELETE triggers that might
exist for the table to fire, but it will fire ON TRUNCATE triggers. If an ON TRUNCATE
trigger is defined for the partition, all BEFORE TRUNCATE triggers are fired before any
truncation happens, and all AFTER TRUNCATE triggers are fired after the last truncation
occurs.
You must have the TRUNCATE privilege on a table to invoke ALTER TABLE…
TRUNCATE PARTITION.
Parameters
table_name
The name (optionally schema-qualified) of the partitioned table.
partition_name
The name of the partition to be deleted.
DROP STORAGE and REUSE STORAGE are included for compatibility only; the clauses are
parsed and ignored.
10.3.13.1 Example - Emptying a Partition
The example that follows removes the data from a partition of the sales table. Use the
following command to create the sales table:
CREATE TABLE sales
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 401
Database Compatibility for Oracle® Developers Guide
(
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY LIST(country)
(
PARTITION europe VALUES('FRANCE', 'ITALY'),
PARTITION asia VALUES('INDIA', 'PAKISTAN'),
PARTITION americas VALUES('US', 'CANADA')
);
Populate the sales table with the command:
INSERT INTO sales VALUES
(10, '4519b', 'FRANCE', '17-Jan-2012', '45000'),
(20, '3788a', 'INDIA', '01-Mar-2012', '75000'),
(40, '9519b', 'US', '12-Apr-2012', '145000'),
(20, '3788a', 'PAKISTAN', '04-Jun-2012', '37500'),
(40, '4577b', 'US', '11-Nov-2012', '25000'),
(30, '7588b', 'CANADA', '14-Dec-2012', '50000'),
(30, '9519b', 'CANADA', '01-Feb-2012', '75000'),
(30, '4519b', 'CANADA', '08-Apr-2012', '120000'),
(40, '3788a', 'US', '12-May-2012', '4950'),
(10, '9519b', 'ITALY', '07-Jul-2012', '15000'),
(10, '9519a', 'FRANCE', '18-Aug-2012', '650000'),
(10, '9519b', 'FRANCE', '18-Aug-2012', '650000'),
(20, '3788b', 'INDIA', '21-Sept-2012', '5090'),
(40, '4788a', 'US', '23-Sept-2012', '4950'),
(40, '4788b', 'US', '09-Oct-2012', '15000'),
(20, '4519a', 'INDIA', '18-Oct-2012', '650000'),
(20, '4519b', 'INDIA', '2-Dec-2012', '5090');
Querying the sales table shows that the partitions are populated with data:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
----------------+---------+---------+----------+--------------------+--------
sales_americas | 40 | 9519b | US | 12-APR-12 00:00:00 | 145000
sales_americas | 40 | 4577b | US | 11-NOV-12 00:00:00 | 25000
sales_americas | 30 | 7588b | CANADA | 14-DEC-12 00:00:00 | 50000
sales_americas | 30 | 9519b | CANADA | 01-FEB-12 00:00:00 | 75000
sales_americas | 30 | 4519b | CANADA | 08-APR-12 00:00:00 | 120000
sales_americas | 40 | 3788a | US | 12-MAY-12 00:00:00 | 4950
sales_americas | 40 | 4788a | US | 23-SEP-12 00:00:00 | 4950
sales_americas | 40 | 4788b | US | 09-OCT-12 00:00:00 | 15000
sales_europe | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_europe | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_europe | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_europe | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_asia | 20 | 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia | 20 | 3788a | PAKISTAN | 04-JUN-12 00:00:00 | 37500
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 402
Database Compatibility for Oracle® Developers Guide
sales_asia | 20 | 3788b | INDIA | 21-SEP-12 00:00:00 | 5090
sales_asia | 20 | 4519a | INDIA | 18-OCT-12 00:00:00 | 650000
sales_asia | 20 | 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(17 rows)
To delete the contents of the americas partition, invoke the following command:
ALTER TABLE sales TRUNCATE PARTITION americas;
Now, querying the sales table shows that the content of the americas partition has
been removed:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country | date | amount
--------------+---------+---------+----------+--------------------+--------
sales_europe | 10 | 4519b | FRANCE | 17-JAN-12 00:00:00 | 45000
sales_europe | 10 | 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_europe | 10 | 9519a | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_europe | 10 | 9519b | FRANCE | 18-AUG-12 00:00:00 | 650000
sales_asia | 20 | 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia | 20 | 3788a | PAKISTAN | 04-JUN-12 00:00:00 | 37500
sales_asia | 20 | 3788b | INDIA | 21-SEP-12 00:00:00 | 5090
sales_asia | 20 | 4519a | INDIA | 18-OCT-12 00:00:00 | 650000
sales_asia | 20 | 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(9 rows)
While the rows have been removed, the structure of the americas partition is still intact:
acctg=# SELECT partition_name, high_value FROM ALL_TAB_PARTITIONS;
partition_name | high_value
----------------+-------------------------------------
EUROPE | FOR VALUES IN ('FRANCE', 'ITALY')
ASIA | FOR VALUES IN ('INDIA', 'PAKISTAN')
AMERICAS | FOR VALUES IN ('US', 'CANADA')
(3 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 403
Database Compatibility for Oracle® Developers Guide
10.3.14 ALTER TABLE… TRUNCATE SUBPARTITION
Use the ALTER TABLE… TRUNCATE SUBPARTITION command to remove all of the data
from the specified subpartition, leaving the subpartition structure intact. The syntax is:
ALTER TABLE table_name
TRUNCATE SUBPARTITION subpartition_name
[{DROP|REUSE} STORAGE]
Description
The ALTER TABLE… TRUNCATE SUBPARTITION command removes all data from a
specified subpartition, leaving the subpartition structure intact.
ALTER TABLE… TRUNCATE SUBPARTITION will not cause ON DELETE triggers that
might exist for the table to fire, but it will fire ON TRUNCATE triggers. If an ON
TRUNCATE trigger is defined for the subpartition, all BEFORE TRUNCATE triggers are
fired before any truncation happens, and all AFTER TRUNCATE triggers are fired after the
last truncation occurs.
You must have the TRUNCATE privilege on a table to invoke ALTER TABLE…
TRUNCATE SUBPARTITION.
Parameters
table_name
The name (optionally schema-qualified) of the partitioned table.
subpartition_name
The name of the subpartition to be truncated.
The DROP STORAGE and REUSE STORAGE clauses are included for compatibility only; the
clauses are parsed and ignored.
10.3.14.1 Example - Emptying a Subpartition
The example that follows removes the data from a subpartition of the sales table. Use
the following command to create the sales table:
CREATE TABLE sales
(
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 404
Database Compatibility for Oracle® Developers Guide
dept_no number,
part_no varchar2,
country varchar2(20),
date date,
amount number
)
PARTITION BY RANGE(date) SUBPARTITION BY LIST (country)
(
PARTITION "2011" VALUES LESS THAN('01-JAN-2012')
(
SUBPARTITION europe_2011 VALUES ('ITALY', 'FRANCE'),
SUBPARTITION asia_2011 VALUES ('PAKISTAN', 'INDIA'),
SUBPARTITION americas_2011 VALUES ('US', 'CANADA')
),
PARTITION "2012" VALUES LESS THAN('01-JAN-2013')
(
SUBPARTITION europe_2012 VALUES ('ITALY', 'FRANCE'),
SUBPARTITION asia_2012 VALUES ('PAKISTAN', 'INDIA'),
SUBPARTITION americas_2012 VALUES ('US', 'CANADA')
),
PARTITION "2013" VALUES LESS THAN('01-JAN-2015')
(
SUBPARTITION europe_2013 VALUES ('ITALY', 'FRANCE'),
SUBPARTITION asia_2013 VALUES ('PAKISTAN', 'INDIA'),
SUBPARTITION americas_2013 VALUES ('US', 'CANADA')
)
);
Populate the sales table with the command:
INSERT INTO sales VALUES
(10, '4519b', 'FRANCE', '17-Jan-2011', '45000'),
(20, '3788a', 'INDIA', '01-Mar-2012', '75000'),
(40, '9519b', 'US', '12-Apr-2012', '145000'),
(20, '3788a', 'PAKISTAN', '04-Jun-2012', '37500'),
(40, '4577b', 'US', '11-Nov-2012', '25000'),
(30, '7588b', 'CANADA', '14-Dec-2011', '50000'),
(30, '4519b', 'CANADA', '08-Apr-2012', '120000'),
(40, '3788a', 'US', '12-May-2011', '4950'),
(20, '3788a', 'US', '04-Apr-2012', '37500'),
(40, '4577b', 'INDIA', '11-Jun-2011', '25000'),
(10, '9519b', 'ITALY', '07-Jul-2012', '15000'),
(20, '4519b', 'INDIA', '2-Dec-2012', '5090');
Querying the sales table shows that the rows have been distributed amongst the
subpartitions:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no | part_no | country| date | amount
-------------------+---------+---------+--------+--------------------+------
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 405
Database Compatibility for Oracle® Developers Guide
sales_americas_2011 | 30| 7588b | CANADA | 14-DEC-11 00:00:00 | 50000
sales_americas_2011 | 40| 3788a | US | 12-MAY-11 00:00:00 | 4950
sales_europe_2011 | 10| 4519b | FRANCE | 17-JAN-11 00:00:00 | 45000
sales_asia_2011 | 40| 4577b | INDIA | 11-JUN-11 00:00:00 | 25000
sales_americas_2012 | 40| 9519b | US | 12-APR-12 00:00:00 | 145000
sales_americas_2012| 40| 4577b | US | 11-NOV-12 00:00:00 | 25000
sales_americas_2012| 30| 4519b | CANADA | 08-APR-12 00:00:00 | 120000
sales_americas_2012| 20| 3788a | US | 04-APR-12 00:00:00 | 37500
sales_europe_2012 | 10| 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_asia_2012 | 20| 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia_2012 | 20| 3788a |PAKISTAN| 04-JUN-12 00:00:00 | 37500
sales_asia_2012 | 20| 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(12 rows)
To delete the contents of the 2012_americas partition, invoke the following command:
ALTER TABLE sales TRUNCATE SUBPARTITION "americas_2012";
Now, querying the sales table shows that the content of the americas_2012 partition
has been removed:
acctg=# SELECT tableoid::regclass, * FROM sales;
tableoid | dept_no| part_no | country | date |amount
-------------------+--------+---------+----------+--------------------+------
sales_americas_2011| 30| 7588b | CANADA | 14-DEC-11 00:00:00 | 50000
sales_americas_2011| 40| 3788a | US | 12-MAY-11 00:00:00 | 4950
sales_europe_2011 | 10| 4519b | FRANCE | 17-JAN-11 00:00:00 | 45000
sales_asia_2011 | 40| 4577b | INDIA | 11-JUN-11 00:00:00 | 25000
sales_europe_2012 | 10| 9519b | ITALY | 07-JUL-12 00:00:00 | 15000
sales_asia_2012 | 20| 3788a | INDIA | 01-MAR-12 00:00:00 | 75000
sales_asia_2012 | 20| 3788a | PAKISTAN | 04-JUN-12 00:00:00 | 37500
sales_asia_2012 | 20| 4519b | INDIA | 02-DEC-12 00:00:00 | 5090
(8 rows)
While the rows have been removed, the structure of the 2012_americas partition is still
intact:
acctg=# SELECT subpartition_name, high_value FROM ALL_TAB_SUBPARTITIONS;
subpartition_name | high_value
-------------------+-------------------------------------
AMERICAS_2011 | FOR VALUES IN ('US', 'CANADA')
ASIA_2011 | FOR VALUES IN ('PAKISTAN', 'INDIA')
EUROPE_2011 | FOR VALUES IN ('ITALY', 'FRANCE')
AMERICAS_2012 | FOR VALUES IN ('US', 'CANADA')
ASIA_2012 | FOR VALUES IN ('PAKISTAN', 'INDIA')
EUROPE_2012 | FOR VALUES IN ('ITALY', 'FRANCE')
AMERICAS_2013 | FOR VALUES IN ('US', 'CANADA')
ASIA_2013 | FOR VALUES IN ('PAKISTAN', 'INDIA')
EUROPE_2013 | FOR VALUES IN ('ITALY', 'FRANCE')
(9 rows)
Copyright © 2007 - 2018 EnterpriseDB Corporation. All rights reserved. 406
Database Compatibility for Oracle® Developers Guide
10.4 Handling Stray Values in a LIST or RANGE Partitioned Table
A DEFAULT or MAXVALUE partition or subpartition will capture any rows that do not meet
the other partitioning rules defined for a table.
Defining a DEFAULT Partition
A DEFAULT partition will capture any rows that do not fit into any other partition in a
LIST partitioned (or subpartitioned) table. If you do not include a DEFAULT rule, any
row that does not match one of the values in the partitioning constraints will result in an
error. Each LIST partition or subpartition may have its own DEFAULT rule.
The syntax of a DEFAULT rule is:
PARTITION [partition_name] VALUES (DEFAULT)