## PostgreSQL bgwriter,walwriter,backend process 写磁盘的实时监控  
### 作者                                                                                       
digoal                                                                                       
### 日期                                                                                       
2018-11-25                                                                                   
### 标签                                                                                       
PostgreSQL ,   
----                                                                                       
## 背景      
数据库有两大块buffer，wal buffer和shared buffer。  
wal buffer是预写日志缓冲区。  
shared buffer是数据页缓冲区。  
wal writer进程负责将wal buffer缓冲区的数据写入WAL FILE中。  
background writer进程负责将shared buffer缓冲区的数据写入DATA FILE中。  
如果写入量非常大，wal writer和background writer进程不足以满足系统负载时，用户进程（backend process）也会参与将BUFFER写到FILE的工作。  
可以通过系统视图统计bgwriter,walwriter,backend process 写磁盘的实时指标。  
1、pg_stat_bgwriter.buffers_clean  bgwriter 每秒write多少shared buffer到disk(write-异步系统调用) , 说明了脏页产生较快，但是不影响业务。   
2、pg_stat_bgwriter.buffers_backend  backend process 每秒wirte多少shared buffer到disk(write-异步系统调用) , 说明产生脏页较快，并且bgwriter或checkpointer写脏页已经赶不上产生脏页的速度了，对业务开始有影响。   
3、walwriter 每秒write多少wal buffer到disk(write-异步系统调用)  
4、pg_stat_bgwriter.buffers_alloc   每秒分配多少新的shared buffer，说明了从磁盘读的频繁程度。    
5、其他指标，参考pg_stat_bgwriter 视图的介绍  
## 系统视图  
1、pg_stat_bgwriter  
https://www.postgresql.org/docs/11/monitoring-stats.html#MONITORING-STATS-VIEWS  
```  
postgres=# \d pg_stat_bgwriter   
                        View "pg_catalog.pg_stat_bgwriter"  
        Column         |           Type           | Collation | Nullable | Default   
-----------------------+--------------------------+-----------+----------+---------  
 checkpoints_timed     | bigint                   |           |          |   
 checkpoints_req       | bigint                   |           |          |   
 checkpoint_write_time | double precision         |           |          |   
 checkpoint_sync_time  | double precision         |           |          |   
 buffers_checkpoint    | bigint                   |           |          |   
 buffers_clean         | bigint                   |           |          |   
 maxwritten_clean      | bigint                   |           |          |   
 buffers_backend       | bigint                   |           |          |   
 buffers_backend_fsync | bigint                   |           |          |   
 buffers_alloc         | bigint                   |           |          |   
 stats_reset           | timestamp with time zone |           |          |   
```  
2、检测wal写入量的函数  
pg_current_wal_lsn()，查看当前的WAL LSN位点。  
pg_wal_lsn_diff(lsn,lsn)，计算两个LSN位点之间有多少字节。  
## 例子  
### 配置  
```  
shared_buffers = 3GB    
bgwriter_delay = 10ms    
bgwriter_lru_maxpages = 1000    
bgwriter_lru_multiplier = 10.0    
wal_writer_delay = 10ms   
```  
### 压测  
```  
pgbench -i -s 1000  
pgbench -M prepared -n -r -P 1 -c 32 -j 32 -T 120000  
```  
### 监测  
1、bgwriter 每秒write多少shared buffer到disk(write-异步系统调用)  
```  
postgres=# select buffers_clean*8/1024||' MB' bg from pg_stat_bgwriter;  
    bg       
-----------  
 654155 MB  
(1 row)  
postgres=# \watch 1  
Sun 25 Nov 2018 12:34:25 PM CST (every 1s)  
    bg       
-----------  
 655538 MB  
(1 row)  
Sun 25 Nov 2018 12:34:26 PM CST (every 1s)  
    bg       
-----------  
 655842 MB  
(1 row)  
Sun 25 Nov 2018 12:34:27 PM CST (every 1s)  
    bg       
-----------  
 656139 MB  
(1 row)  
Sun 25 Nov 2018 12:34:28 PM CST (every 1s)  
    bg       
-----------  
 656444 MB  
(1 row)  
```  
2、backend process 每秒wirte多少shared buffer到disk(write-异步系统调用)  
```  
postgres=# select buffers_backend*8/1024||' MB' bg from pg_stat_bgwriter;  
     bg       
------------  
 1008428 MB  
(1 row)  
postgres=# \watch 1  
Sun 25 Nov 2018 12:35:01 PM CST (every 1s)  
     bg       
------------  
 1009188 MB  
(1 row)  
Sun 25 Nov 2018 12:35:02 PM CST (every 1s)  
     bg       
------------  
 1009188 MB  
(1 row)  
Sun 25 Nov 2018 12:35:03 PM CST (every 1s)  
     bg       
------------  
 1009188 MB  
(1 row)  
Sun 25 Nov 2018 12:35:04 PM CST (every 1s)  
     bg       
------------  
 1009926 MB  
(1 row)  
Sun 25 Nov 2018 12:35:05 PM CST (every 1s)  
     bg       
------------  
 1009926 MB  
(1 row)  
```  
3、walwriter 每秒write多少wal buffer到disk(write-异步系统调用)  
```  
postgres=# with a as (select pg_current_wal_lsn() lsn) select pg_size_pretty(pg_wal_lsn_diff(pg_current_wal_lsn(), lsn)) from a, pg_sleep(1);  
 pg_size_pretty   
----------------  
 31 MB  
(1 row)  
postgres=# \watch 0.001  
Sun 25 Nov 2018 12:35:25 PM CST (every 0.001s)  
 pg_size_pretty   
----------------  
 30 MB  
(1 row)  
Sun 25 Nov 2018 12:35:26 PM CST (every 0.001s)  
 pg_size_pretty   
----------------  
 31 MB  
(1 row)  
Sun 25 Nov 2018 12:35:27 PM CST (every 0.001s)  
 pg_size_pretty   
----------------  
 30 MB  
(1 row)  
Sun 25 Nov 2018 12:35:28 PM CST (every 0.001s)  
 pg_size_pretty   
----------------  
 31 MB  