https://passwordsgenerator.net/md5-hash-generator/
9EFOEC63E2E52320CB20E345DCBA8112
https://passwordsgenerator.net/shal -hash-generator/ 
D15FB15C1BC88F4B7932FD29918D1E9E9BBE7CA5
https://passwordsgenerator.net/sha256-hash-generator/
37A790A268B9FE62B424BABFC3BCAB0646BFB24B93EC1619AAE7289E0D7086DB
Your biggest frustration may be the speed of each query’. I possess all of my data within an internal solid-state 
drive (SSD) with amazing read speeds. It still takes a few of minutes to parse through all of my data (2TB). If 
you are using an external spinning drive, expect that time to triple. If this technique proves to be valuable, you 
might consider a dedicated machine for this sole purpose. Personally, I never conduct these queries within a 
virtual machine due to these speed issues. I have a dedicated MacBook Pro with a 4TB internal drive to store 
and query’ my content. This may be overkill for your needs.
These addresses are likely controlled by our target since the passwords are the same and the addresses arc similar. 
We now have new search options. However, this search only queries for this exact text password term. If you 
possess a database which has not been dehashed, your target password could be present within an MD5, SHA1, 
or other hash. Therefore, let’s convert this password into the most commonly used hashes with the following 
websites, displaying the output below each.
Leaks/1183_houstonast nos - comf ound_hash_algorithm_plain. txt. zip
SHA1 D15FB15ClBC88F4B7932FD29918DlE9E9BBE7CA5:H8teful0ne45
This tells us that a user with a password of ”H8teful0ne45" was present on a breach about the Houston Astros. 
Is this the same person? It could be. It could also be a coincidence. The more unique a password is, the more 
confidence I have that it is the same individual. This definitely warrants further investigation. I might next try’ 
to locate the original breach data, which would likely’ include any email addresses associated with that password 
hash. All of these steps are designed to lead us to the next step.
All of these results give me more confidence that these accounts are owned by the same person. The variant of 
the "hateful” password and presence of "johndoe" within the original email address and the new password 
convinces me we are on the right track. I would now target this new email address and replicate the searches 
mentioned within previous chapters. We should also check our Pastes search tool and the online breach 
resources previously’ explained.
• 
rg -a -F -I -N 9EF0EC63E2E52320CB20E345DCBA8112
• 
rg -a -F -I -N D15FB15C1BC88F4B7932FD29918D1E9E9BBE7CA5
• 
rg -a -F -I -N 37A790A268B9FE62B424BABFC3BCAB0646BFB24B93EC1619AAE7289E0D7086DB
Data Leaks
productelastic port:9200 [target data]
producttelastic port:9200 customer
€ 34.80.1
GoojU Cloud
S UniudSlXi,
ClusUr Hama
34
Elasticscarch database.
446 Chapter 28
Elastic Indices:
.rxinitoring-cs-6-2819.C9.24
.rzwil toring-es-6-2019.C9.23
.rQnitoring-cs-6-2019.C9.22
.ronltoring-cs-6-2819.89.21
.Fonitorlng-cs-6-2819.89.28 
.ronitoring-kibana-6-2819.89—
naae:
cluster_naae:
cluster_uuid:
•* version:
nutsber:
build_flavor:
build_type:
build_hash:
build_date:
build-snapshot:
lucene_version:
sini=uo_wi re_c oi-pa t ib ilit y_ve rs ion:
rinizua_index_corpatibility_i'ersion:
tagline:
pm 
mi
Number «f 
indices
"5.0.0"
"You Know, for Search"
"pixnet-clasticsearch"
"t0lf9.21
>9.23
Figure 28.03: A list of indexes within an open Elasticsearch database.
http://34.80.1.1:9200/bank/_search?size= 100
http://34.80.1.1:9200/bank/_search?size=10000
Issues
i
i
i
i
£74(54 
354940 
34(850 
223(39 
22582851
347378 
223(39 
347452
224408 
34(849 
77756 
50202 
135617 
1000 
5(77 
101(016 
77753 
77753
22.3nb 
1.19b 
21.Sob 
124.6cb 
22iib 
211.4eb 
45.69b 
21.5sb 
5 kb 
94.19b 
461.6=b 
114.19b 
1.59b 
29.99b 
478.9sb 
487.5sb 
1.59b 
103.2gb 
44.3kb 
453.3sb 
1.69b 
474.2xb 
1.4ab 
347.4sb 
472.Sob 
20.Sab 
17.2sb 
2.49b 
950.5kb 
16.2sb 
2.39b 
20.3sb 
19.8sb
tl.Isb 
593.3cb 
10.7cb 
62.Jeb 
10.9sb 
105.7cb 
22.89b 
10.8sb 
2.5kb 
47gb 
231.9rb 
57.3gb 
778.3=b 
15gb 
239.6sb 
245.2sb 
811.5sb 
51.39b 
22.4kb 
225.3=b 
834.Jeb 
236.Erb 
745.9kb 
185.2eb 
235.(sb 
10.2sb 
6.3=b 
1.29b 
475.2kb
8. Isb 
l.lgb
10.Isb
9. Erb
does.count does.dele 
10 
3514 
135(17 
74164 
220775 
77753 
107379 
iu531578 
77579
•”93911 
6888
Figure 28.04 displays actual redacted results from this query. It identifies the first name, last name, email address, 
gender, city, state, bank account number, and balance associated with a customer. The rest of the index contains 
the same information for additional customers.
2 1
P2RWRjTiR£l w 5 
aCZPulCsHWzeA 5
10
1 1
This combines the IP address (34.80.1.1), necessary port (9200), name of the index (bank), and instructions to 
display the first 100 records (/_search?size=100). If we wanted to view the maximum number of entries visible 
within the browser, we would query 10,000 records with the following URL.
Next, we want to obtain a list of all indexes within this database. These tides are often indicative of the content 
The following URL queries this data based on a target IP address of 34.80.1.1. The result can be seen in Figure 
28.03.
pcibg 
5 
1
:W9A 
1 
1
5OA49Pcc0g 
1 
1
7UCbXvVlWA 11
--------  
5 
1 
1071 
10 1 10531!
JqMMTULnpFvEw 
1 
1 
7g7IcfQUS£65DUClbOcKQA 
1 
1
>lgkcrx_Q0iO134yDeDePv 
10 
1
'««-jEfovRHe3sBCisb4Zog 
1 
1
>19.09.21 IqK2oVxvSHyX_nIzQLpkfg 
1 
1
-6-2019.09.22 PzUBOoxKOJuMDurDPEmbmO 
-6-2019.09.24 oSyEB59SR2a7CbOj£CpDiw 
HP JWrKTiTP2RWR jTiRf 1 W 
DK8E3aiEQ3CZPulCsHWzeA 
=CAXa4duQKX5UJYtA4Jsdw 
crlh_EJTTQCPq65SKHaa0g 
RIFVLfu_RUCh8oThv6sbJA 
xocXY0KuSo2yhptUCG29bw
115 