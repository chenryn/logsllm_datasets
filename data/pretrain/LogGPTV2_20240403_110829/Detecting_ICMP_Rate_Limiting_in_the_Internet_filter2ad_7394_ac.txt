probed in each target block.
Potential Limiting at High Probe Rates: Figure 6 compares our model of
ZMap measurement process (the red squares) against reported Zippier ZMap
experiments (blue circles). Observing that rate limits are consistent with the
drops in response of ZMap at high speeds, we next apply FADER (without the
frequent alternation test) to ZMap data, looking for blocks that appear to be
rate limited.
We statistically estimate the number of IPs probed in each block. Recall
each 50-s scan send pseudo-random probes into the same 3.7 billion IPv4 pool,
assuming uniform sampling, about same number of IP will be sampled from each
/16 block in the pool. (Here we look at /16 blocks instead of /24 blocks because
larger blocks decrease the statistical variance.) As a consequence, for a 50-s
ZMap scan of P packets/s, approximately 50P/(3.7 × 109) × 216 IPs are probed
in each /16 block, given 50P/(3.7 × 109) as the fraction of addresses probed in
50s, against a target 216 addresses in size. We then estimate availability of each
/16 block as the fraction of target IPs that respond positively to probes.
We next apply FADER to detect rate limiting (assuming all blocks pass
Frequent Alternation Tests). For each ZMap target block, we use slowest 50-s
scan (0.1M packets/s) as the low-rate measurement and test each of the other
15 faster scans as high-rate measurement. This gives us 15 test results (each at a
diﬀerent high rate), for each target block. We consider a block as potentially rate
limited if it is detected as rate limited in at least one test. We do not consider
the other blocks (cannot tell or not-rate limited) further.
Table 6 shows detection results. Most ZMap target blocks (53,149 blocks,
93.99%) are cannot tell in all 15 FADER tests (43,067 of them due to target
block went dark during low-rate measurement and provide no information for
detection). A good number of them (3,090 blocks, 5.46%) are classiﬁed as rate-
limited in at least one FADER test and are considered potentially rate-limited.
It is worth noting that most (69.68%) of these potentially rate-limited blocks
are consistently classiﬁed as rate-limited in most FADER tests (at least 13 out
of 16 tests), supporting our claim that those blocks are potentially rate-limited.
Since we omit Frequent Alternation Tests and our algorithm is optimized
to avoid false negatives, we know many of these potential rate limited blocks
Detecting ICMP Rate Limiting in the Internet
13
Table 5. 2 ZMap blocks showing
multiple rate limits
Table 6. Applying 15 FADER tests to
ZMap /16 blocks
blocks studied
56,550 (100%)
53,460 (94.54%)
0 rate limited
≥ 1 rate limited
3,090
≥ 13 rate limited 2,153
 10L).
We are unable to validate alternation count model with commercial routers;
the routers are only available for a limited time. But we believe testbed vali-
dations shows the correctness of our alternation counts models since we have
already shown rate limiting in testbed matches that of two commercial routers.
5.2 Correctness in Noise-Free Testbed
We next test the correctness of FADER in a testbed without noise (supporting
graphs in our technical reports [9]). For noise-free experiment, we run high-
rate probing from 1.6L to 240L stressing FADER beyond its designed detecting
range P < 60L. FADER detection is perfect for P < 60L. However, as we
exceed FADER’s design limit (60L), it starts marking blocks as can-not-tell.
The fraction of can-not-tell rises as P grows from 60L to 144L (when P = 100L,
65% blocks are marked as can-not-tell). Fortunately, even when the design limit
is exceeded, FADER is never incorrect (it never gives a false positive or false
negative), it just refuses to answer (returning can-not-tell).
In addition to detecting rate limiting, FADER gives an estimate of what that
rate limit is. Varying P from L to 144L, FADER’s rate limit estimate is within
7% (from −4.2% to +6.9%) when P < 60L, and it drops gradually as the design
limit is exceed.
5.3 Correctness in the Face of Packet Loss
We next consider FADER with packet loss which could be confused with loss
due to rate limiting. We vary the amount of random packet loss from 0 to 60%.
Detecting ICMP Rate Limiting in the Internet
15
Figure 5a shows FADER’s detection as packet loss increases. There is almost
no misdetection until probe rates become very high. At the design limit of P =
60L, we see only about 4% of trials are reported as cannot tell.
While ability to detect is insensitive to noise, our estimate of the rate limit
is somewhat less robust. Figure 5b shows that packet loss aﬀects our estimate of
the value of the rate limit (here we ﬁx P = 26L, but we see similar results for
other probe rates). Error in our rate limit is about equal to the dropping rate
(at 20% loss rates, the median estimate of rate limit is 20.72% high).
5.4 Correctness with Partially Responsive Blocks
We next consider what happens when blocks are only partially responsive. Par-
tially responsive blocks are more diﬃcult for FADER because probes sent to non-
responsive addresses are dropped, reducing the signal induced by rate limiting.
Here we vary probe rate for diﬀerent density blocks. (We hold other parameters
ﬁxed and so do not add packet loss.)
In Fig. 7a we vary the relative probing rate and plot separate lines for each
level of block responsiveness. In general, the number of can-not-tell increase as
block responsiveness falls, but only when the probe rate is also much greater
than the rate limit. In the worst case, with only 10% of IPs responding at a
probe rate 60× the rate limit, 35% of tries report can-not-tell and no wrong
answer is given.
Fig. 6. Modeled availability
(Red) matches ZMap prob-
ing results (Blue) (Color ﬁgure
online)
Fig. 7. FADER validation: with partially respon-
sive target blocks
Figure 7b shows the rate limit output by FADER as the block density
changes. We show median and quartiles with box plots, and minimum and
maximum with whiskers. The median stays at the true value, but the variance
increases, as shown by generally wider boxes and whiskers. Here P = 26L; we
see similar results at other probing rates.
16
H. Guo and J. Heidemann
6 Related Work
Two other groups have studied detecting rate limits in the Internet.
Work from Universite Nice Sophia Antipolis studies rate limiting for tracer-
outes [17]. Speciﬁcally, they study ICMP, Type 11, Time exceeded replies on
reverse paths. They detect rate limits by sending TTL-limited ICMP echo
requests from 180 vantage points, varying the probing rate from 1 to 4000 ping/s
and looking for constant response rates as a sign of rate limits. They studied
850 routers and found 60% to do rate limiting. Our work has several important
diﬀerences. The overall result is quite diﬀerent: they ﬁnd 60% of reverse paths
are rate limited in 850 routers, measured up to 4000 ping/s, while we ﬁnd only
0.02% of forward paths are rate limited in 40k /24 blocks, measured up to 0.39
pings/s per /24.
We believe that both their results and ours are correct. Many routers have
reverse-path rate limiting on by default, consistent with their results. Our app-
roach provides much broader coverage and generates less additional traﬃc by
reusing existing data. Our work uses diﬀerent signals (availability diﬀerence and
frequent alternation) for detection. Finally, we focus on forward path, so our
results apply to address allocation information, while they focus on reverse path,
with results that apply to fast traceroutes.
Google recently examined traﬃc policing, particularly in video traﬃc [6].
Their analysis uses sampled measurement from hundreds of Google CDNs to
millions of users of YouTube. They provide a thorough analysis on the prevalence
of policing and the interaction between policing and TCP. They also provide
suggestions to both ISP and content providers on how to mitigate negative eﬀect
of traﬃc policing on user experience. Their focus on TCP diﬀers from ours
on ICMP rate-limiting. Their coverage is far greater than ours, although that
coverage is only possible because Google is a major content provider. They ﬁnd
fairly widespread rate limiting of TCP traﬃc, but their subject (TCP video) is
much faster than ours (ICMP) that such diﬀerences in results are not surprising.
7 Conclusion
Undetected rate limiting can silently distort network measurement and bias
research results. We have developed FADER, a new, light-weight method to
detect ICMP rate limiting. We validated FADER against commercial routers
and through sensitivity experiments in a testbed, showing it is very accurate at
detecting rate limits when probe traﬃc is between 1 and 60× the rate limit.
We applied FADER to a large sample of the Internet (40k blocks) on two
separate dates. We ﬁnd that only a tiny fraction (0.02%) of Internet blocks are
ICMP rate limited up to 0.39 pings/s per /24. We also examined public high-rate
datasets (up to 1 ping/s per /24) and showed their probing results are consistent
with rate limitings. We only see signiﬁcant rate limiting on reverse path when
routers near the prober see a large amount of traﬃc. We conclude that low-rate
ICMP measurement (up to 0.39 ping/s per block) are unlikely to be distorted
while high-rate measurement (up to 1 ping/s per block) risks being rate limited.
Detecting ICMP Rate Limiting in the Internet
17
References
1. Adrian, D., Durumeric, Z., Singh, G., Halderman, J.A.: 50-second scans dataset in
paper “Zippier ZMap: Internet-Wide Scanning at 10 Gbps”, obtained from David
Adrian by request (2014)
2. Adrian, D., Durumeric, Z., Singh, G., Halderman, J.A.: Zippier ZMap: internet-
wide scanning at 10 Gbps. In: USENIX Workshop on Oﬀensive Technologies (2014)
3. Beverly, R.: Yarrp’ing the internet: randomized high-speed active topology discov-
ery. In: ACM Internet Measurement Conference. ACM, November 2016
4. Dainotti, A., Benson, K., King, A., Claﬀy, K.C., Kallitsis, M., Glatz, E.: Estimat-
ing internet address space usage through passive measurements. ACM Computer
Communication Review (2014)
5. Durumeric, Z., Wustrow, E., Halderman, J.A.: ZMap: fast internet-wide scanning
and its security applications. In: USENIX Security Symposium (2013)
6. Flach, T., Papageorge, P., Terzis, A., Pedrosa, L., Cheng, Y., Karim, T., Katz-
Bassett, E., Govindan, R.: An internet-wide analysis of traﬃc policing. In: ACM
SIGCOMM (2016)
7. Guo, H.: rejwreply: a Linux kernel patch that adds echo-reply to feedback type of
iptable REJECT rule. https://ant.isi.edu/software/rejwreply/index.html
8. Guo, H., Heidemann, J.: Datasets in this Paper. https://ant.isi.edu/datasets/
icmp/
9. Guo, H., Heidemann, J.: Detecting ICMP rate limiting in the Internet. Technical
report ISI-TR-717, USC/Information Sciences Institute, May 2017
10. Heidemann, J., Pradkin, Y., Govindan, R., Papadopoulos, C., Bartlett, G., Bannis-
ter, J.: Census and survey of the visible internet. In: ACM Internet Measurement
Conference (2008)
11. Leonard, D., Loguinov, D.: Demystifying service discovery:
implementing an
internet-wide scanner. In: ACM Internet Measurement Conference, November 2010
12. Luckie, M., Dhamdhere, A., Huﬀaker, B., Clark, D., Claﬀy, K.: bdrmap: inference
of borders between IP networks. In: ACM Internet Measurement Conference (2016)
13. Madhyastha, H.V., Isdal, T., Piatek, M., Dixon, C., Anderson, T., Krishnamurthy,
A., Venkataramani, A.: iPlane: an information plane for distributed services. In:
7th USENIX Symposium on Operating Systems Design and Implementation (2006)
14. Moura, G.C.M., Ga˜n´an, C., Lone, Q., Poursaied, P., Asghari, H.: How dynamic is
the ISPs address space? Towards Internet-wide DHCP churn estimation. In: IFIP
Networking Conference (2015)
15. Quan, L., Heidemann, J., Pradkin, Y.: Trinocular: understanding internet reliabil-
ity through adaptive probing. In: ACM SIGCOMM (2013)
16. Quan, L., Heidemann, J., Pradkin, Y.: When the internet sleeps: correlating diurnal
networks with external factors. In: ACM Internet Measurement Conference (2014)
17. Ravaioli, R., Urvoy-Keller, G., Barakat, C.: Characterizing ICMP rate limitation
on routers. In: IEEE International Conference on Communications (2015)
18. Richter, P., Wohlfart, F., Vallina-Rodriguez, N., Allman, M., Bush, R., Feldmann,
A., Kreibich, C., Weaver, N., Paxson, V.: A multi-perspective analysis of carrier-
grade NAT deployment. In: ACM Internet Measurement Conference (2016)
19. Schulman, A., Spring, N.: Pingin’ in the rain. In: ACM Internet Measurement
Conference (2011)