r(j)
(1)
Second, we have observed a minimum time duration be-
fore and after the current rate measurement:
nL  γ ˜Rr(j)
j=τ ...n
(3)
where ˜Rr denotes the median, and γ is a suitable threshold.
We select γ based on empirical observations of ISP capacities
and shaping rates in practice (see Section 2.3).
Similarly, we detect the end of a level shift index β such
that β ≥ τ and β is the last point which satisﬁes the rate
condition in Equation 1. Figure 2 illustrates the two level
shift indices.
2.2 Estimation
After the detection of a level shift, we estimate the token
bucket parameters from the rate timeseries Rr as follows.
The token generation rate (shaping rate) ρ is estimated as
the median (to be robust to outliers) of the received rate
measurements after β:
ˆρ = ˜Rr(i)
i=β+1...n
(4)
We estimate the token bucket depth (burst size) σ based
on the number of bytes sent till the τ ’th time interval. We
estimate a range for σ, since we discretize time in to intervals
of size ∆, based on the estimate ˆρ of ρ and the received rates:
ˆσ =
τ
X
i=1
[R(i) − ˆρ]∆ ±
[R(i) − ˆρ] ∆
2
(5)
2.3 Parameter Selection
As in any other measurement tool that is used in practice,
there are some parameters that need to be tuned empiri-
cally. In ShaperProbe, the key parameters are the factor γ,
the probing duration Λ, and the interval duration ∆. We
have selected the values of these parameters based on the
detection of actual shaper deployments in broadband ISPs
for which we knew the “ground truth”.
Figure 3 shows the ratio of the capacity over the shaping
rate C/ρ and the maximum burst duration (in seconds) for
36 advertised traﬃc shaper deployments at Comcast and
Cox in metro Atlanta in October 2010. Note that all tiers
have a capacity-to-shaping rate ratio of 1.1 or higher; in the
current implementation of ShaperProbe we use γ = 1.1.
The probing duration Λ should be suﬃciently long so that
it can detect as many ISP shaping conﬁgurations as possible,
1.1
 0
 5
 10
 15
 20
 25
 30
 35
60s
o
i
t
a
r
e
t
i
a
r
-
g
n
p
a
h
s
/
.
p
a
C
)
s
(
n
o
i
t
a
r
u
d
t
s
r
u
B
 2.6
 2.4
 2.2
 2
 1.8
 1.6
 1.4
 1.2
 1
 350
 300
 250
 200
 150
 100
 50
 0
 0
 5
 10
 15
 20
 25
 30
 35
Tier
Figure 3: Advertised Comcast, Cox tiers: required γ and Λ.
while at the same time keeping the total probing duration
reasonably short when there is no shaping. Figure 3 shows
that the burst duration is at most 48s, except for 4 out of 36
conﬁgurations. Λ is set to 60s in the current implementation.
A typical ShaperProbe residential run lasts for 2-3 minutes.
The averaging window size ∆ should be suﬃciently large
to keep the estimation noise in Rr low, and suﬃciently short
so that Λ includes several rate samples. We have performed
100 trials in the upstream direction of a Comcast residen-
tial connection, whose SLA we know (4.5Mbps shaped to
2Mbps). We found that for ∆ ≥ 50ms, the shaping de-
tection rate is 100%; as ∆ approaches the inter-packet gap,
the detection rate drops signiﬁcantly. We set ∆ to 300ms so
that we can detect shaping even in low capacity links.
3. SHAPERPROBE IMPLEMENTATION
The design of a tool that works well on a wide variety of
network conditions, OS platforms and broadband link tech-
nologies is challenging. A ﬁrst challenge is that ShaperProbe
requires a fast and accurate estimate of the narrow-link ca-
pacity between the sender and receiver; this estimate is the
ShaperProbe probing rate. ShaperProbe uses packet train
dispersion for estimating capacity; it additionally probes us-
ing a longer train to be robust to wireless link eﬀects. Sec-
ond, the probing method should be able to generate traﬃc
at a constant rate, even with a coarse-grained userspace OS
timer granularity. At the same time, the transmission of
packets should not impose heavy load on the CPU resources
at the sender. ShaperProbe sends small periodic packet
trains, and times the inter-train gaps such that busy-wait
loops are minimized. Third, the ShaperProbe client should
be non-intrusive. The client and server abort the probing
process if they observe losses on the path. Finally, cross
traﬃc on the path may lead to temporary drops in the re-
ceived rate Rr; we need to incorporate a ﬁltering mecha-
nism that can remove outliers from Rr. ShaperProbe ﬁlters
outliers using recorded observations from the local neighbor-
hood of the Rr timeseries. The Tech Report [17] describes
how ShaperProbe addresses the previous challenges and im-
plementation details.
We currently run load-balanced ShaperProbe server repli-
cas on 48 M-Lab hosts connected directly to tier-1 ASes.
For measurement accuracy, we allow only one client at each
server replica at any time.
475ISP
Comcast
Road Runner
AT&T
Cox
MCI-Verizon
Upstream (%) Dwnstrm. (%)
73.5 (28272)
71.5 (34874)
63.9 (5870)
10.9 (7748)
47.4 (4357)
8.4 (7733)
6.5 (7923)
10.1 (8808)
63 (5797)
5.6 (8753)
Table 1: Shaping detections: top-5 ISPs in terms of Shaper-
Probe runs. For each ISP we show percentage of runs with
detected shaping and number of total runs.
4. RESULTS
In this section, we take a ﬁrst look at results from the
ShaperProbe deployment at M-Lab. We ﬁrst examine accu-
racy using two ISPs for which we know the shaping ground
truth and from emulation experiments.
Accuracy. We test the latest version of ShaperProbe on
two residential ISPs, AT&T and Comcast, at two homes
in metro Atlanta. We use the High-Speed Internet ser-
vice of Comcast, and the DSL service of AT&T. At the
time of these experiments, the Comcast conﬁguration was:
{10Mbps up, 22Mbps down} shaped to {2Mbps up, 12Mbps
down} [5], while the AT&T conﬁguration did not use shap-
ing ({512Kbps up, 6Mbps down}) [2]. Out of 60 runs, we did
not observe any shaping detection errors in either direction
at the AT&T connection, while we observed two upstream
false negatives at the Comcast connection due to capacity
underestimation.
We also emulated token bucket shaping on a wide-area
path between a residential Comcast connection and a server
deployed at the Georgia Tech campus. We use the LARTC
tc tool on Linux with a 2.6.22 kernel on a dual-NIC 1GHz
Celeron router with 256MB RAM. Over 20 experiments for
each token bucket conﬁguration and 10 conﬁgurations, we
found that ShaperProbe detects the traﬃc shaper in all (200)
experiments; it also accurately estimates the shaping rate
and bucket depth for all conﬁgurations.
Data preprocessing. In the following, we analyze data
collected from the ShaperProbe M-Lab service. First, we
consider runs from the latest ShaperProbe release, collected
between 20th October 2009 and 9th May 2011 (total of
845,223 runs). Each run’s trace contains per-packet times-
tamps and sequence numbers for the upstream and down-
stream probing “half runs”. Second, we say that a half run
is “unﬁnished” if no shaping was detected and the run lasted
for less than 50s - we discard such runs. All completed half
runs which are not diagnosed as shaping are considered no-
shaping cases. Recall that ShaperProbe probes each direc-
tion for 60s, and terminates a half run if it either detected
shaping or if it observed packet losses during probing. A
half run can also be unﬁnished if the user aborted the client
before it could run to completion. After preprocessing, we
have a total of 281,394 upstream and 236,423 downstream
ﬁnished half runs.
Next, we cluster AS numbers into ISPs using their whois
AS names. The AS information was obtained from Cymru’s
whois database in May 2011. Runs which passed the pre-
processing checks come from 5,167 distinct ISPs. The top
C (Mbps)
ρ (Mbps)
σ (MB) Burst duration (s)
3.5
4.8
8.8
14.5
1
2
5.5
10
5
5, 10
10
10
(a) Upstream.
16.7
15.2, 30.5
25.8
18.8
C (Mbps)
ρ (Mbps)
σ (MB) Burst duration (s)
19.4
21.1
28.2
34.4
6.4
12.8
17
23.4
10
10
20
20
6.4
10.1
14.9
15.3
(b) Downstream.
Table 2: Comcast: detected shaping properties.
ﬁve ISPs in terms of the number of runs as well as the frac-
tion of shaping detections are shown in Table 1.
It should be noted that there are several factors that in-
ﬂuence the fraction of shaping detections in an ISP. First,
ISPs provide multiple tiers of service; some tiers may not
use shaping, while service tiers change frequently. Second,
an ISP may not deploy shaping in all geographic markets.
Third, the access link type can be a factor: a DSL provider
can dynamically change the link capacity instead of doing
shaping, while a cable provider is more likely to use shap-
ing since DOCSIS provides ﬁxed access capacities. Fourth,
for a given connection, the shaping parameters can be dy-
namically adjusted based on time or load conditions in the
ISP. Fifth, an ISP A can originate the BGP preﬁxes of a