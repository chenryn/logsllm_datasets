S61 (ld ',esel, aueu ssaoug s6t=prd′,eaef. 
fd=10865: File descriptor 10865 (for PID 4195)
·rto : 204: TCP retransmission timeout: 204 milliseconds
rtt : 0 . 159/0 009: Average round-trip time is 0.159 milliseconds, with 0.009 millseconds
mean deviation
mss : 1448: Maximum segment size: 1448 bytes
●cmnd:152: Congestion window size: 152 × MSS
 bytes_acked: 347681: 340 Kbytes successfully transmitted
• bytes_received: 1798733: 1.72 Mbytes received
 bbr : . : BBR congestion control statistics
*pacing_rate 2422 . 4Mbps: Pacing rate of 2422.4 Mbps
This tool uses the netlink interface, which uses sockets of family AF_NETLINK to fetch informa
tion from the kernel.
---
## Page 439
402
 Chapter 10 Networking
10.2.2ip
ip(8) is a tool for managing routing, network devices, interfaces, and tunnels. For observability, it
can be used to print statistics on various objects: link, address, route, etc. For example, printing
extra statistics (s) on interfaces (1 inx):
+ ip -s link
1: 1o:  ntu 65536 qdlsc noqueue state UNKNOMN mode DEFAULT
group default qlen 1000
11nk/10opback 00:00:00:00:00:00 brd 00:00:00:00:00:00
RX: bytes packets errors dropped overrun mcast
26550075
2731780
D
TX: bytes  packets errors  dropped carrier collsns
0
265500752731780
D
0
21 eth0:  ntu 1500 qdisc nq state UP node DEFAULT
U
group Gefault qlen 1000
link/ether 12:e0:0a:b0:21:b8 brd ff:ff:ff:ff:ff:ff
RX: bytes packeta erzora dxopped overrun mcast
512473039143 568704184 0
Q
0
susttooxetxxeo peddoxpsaoxaes1eqoedses/qxL
573510263433 668110321 0
Various error types can be checked from this output: for receive (RX): receive errors, drops, and
overruns; for transmit (TX): transmit errors, drops, carrier errors, and collisions. Such errors can
be a source of performance issues and, depending on the error, may be caused by faulty network
hardware.
Printing the route object shows the routing table:
+ ip route
Gefault via 100_85.128.1 dev eth0
default via 100.85.128.1 der eth0 proto dhcp sre 10.85,142.69 metric 100
100.85.12e,0/18 dev eth0 pzoto kexmel scope link src 100.85.142,69
100.85.128.1 dev eth0 proto dhcp scope link src 100,85.142,69 metric 100
Misconfigured routes can also be a source of performance problems.
10.2.3nstat
nstat(8) prints the various network metrics maintained by the kernel, with their SNMP names:
+ nstat =s
kerne]
Ip InRecelves
462657733
 0 .0
IpInDelivers
462657733
0 . 0
IpoutRequests
986050.69
0°0
---
## Page 440
10.2 Traditional Tools
403
[...]
TcpActiveOpens
L6679E
0 .0
TcpPassive0pens
9663983
0 . 0
TcpAttemptFa11s
12718
0 .0
TcpEstabResets
14591
0 . 0
s6egudo
462181482
0 .0
TcpOutSegs
938958577
0 . 0
TcpRetran.sSegs
12 9212
0 .0
TcpOutRst.s
52362
0 . 0
[..-]
The s option was used to avoid resetting these counters, which is the default behavior of
nstat(8). Resetting is useful, as you can then run nstat(8) a second time and see counts that
spanned that interval, rather than totals since boot. If you had a network problem that could be
reproduced with a command, then nstat(8) can be run before and after the command to show
which counters changed.
nstat(8) also has a daemon mode (i) to collect interval statistics, which when used are shown in
the last column.
10.2.4
netstat
netstat(8) is a tool traditionally used for reporting different types of network statistics based on
the options used. These options include
 (default): Lists open sockets
-a: Lists information for all sockets
-s: Network stack statistics
•-i: Network interface statistics
-r: Lists the route table
For example, modifying the default output with a to show all sockets, and n to not resolve
IP addresses (otherwise, this invocation can cause a heavy name resolution workload as a side
effect), and p to show process information:
 netstat -anp
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Addzess
Forelgn Address
State
PID/Progran nane
tcP
0192.168.122.1:53
0.0.0.0: *
LISTEN
8086/dnsnssg
tcp
D
0 127.0.0.53:53
0.0.0.0: *
LISTEN
1112/systend-reso1v
tcp
0
0 0.0.0.0:22
0.0.0.0: *
LISTEN
1440/sshd
[..-]
tcp
0 10.1 . 64 . 90 : 36426 10 . 2 .25 , 52: 22
ESTABLISHEo 24152/ssh
[. - - ]
---
## Page 441
404
Chapter 10 Networking
The 1 option prints interface statistics. On a production cloud instance:
 netstat -1
Kernel Interface table
Iface
YTU
RX-OK RX-ERR RX-DRP RX-OVR
TXOK TX-ERR TX-DRP TX=OVR F1g
eth0
1500 743442015
0
0 0
882573158
0
Q
0 BMRO
10 
9E559
427560
0
0 0
427560
0LRU
The interface eth0 is the primary interface. The fields show receive (RX-) and transmit (TX-):
 OK: Packets transferred successfully
+ ERR: Packet errors
sdosp aped d8 *
 OVR: Packet overruns
An additional c (continuous) option prints this summary every second.
ndqno) tuagsis uogonpod Asnq e uo °adtuexa sog sopses xoess gpomau suud uodo s at
truncated):
8- 4848490 +
Ip :
Forxarding: 2
454143446 total packets received
0 forvarded
0 incoming packets dlscarded
454143446 inconing packets delivered
487760885 requests sent out
42 outgoing packets dropped
2260 fragments received ok
13560 fragrents created
Icrp:
[...]
Tcp:
359286 aetive conneetion openings
sfuuedo uTaoeuuoo 9teeed 0s65916
12527 failed connection attempts
14323 connectilon resets received
13545 connections established
453673963 segments zecelved
922299281 segments sent out
127247 segments zetransnitted
0 bad segments received
1098 51es8x 09915
---
## Page 442
10.2 Traditional Tools
405
:dp0
[.--]
TcpExt.1
21 resets recelved for enbxyonic SYK_RECV sockets
12252 packets pruned from receive queve because of socket buffer overrun
201219 TCP sockets finished tine valt in fast tinee
11727438 delayed acks sent
1445 Gelayed acks further delayed because of Locked socket
Quick ack mode vas actirated 17624 tines
169257582 packet headers predicted
76058392 acknovledgments not containing data payload received
111925821 predlcted acknoxledgnentsa
TCPSackRecovery: 1703
Detected zeordering 876 tines using SACK
Detected reordering 19 times using tine stanp
2 congestion vlndovs fully recovered vlthout slov stazt
[...]
This shows totals since boot. Much can be learned by studying this output: you can calcu-
throughput, and other events. Some of the metrics I look for first I've highlighted in bold.
late packet rates for different protocols, connection rates (TCP active and passive), error rates
This output has human-readable descriptions of the metrics; it is not supposed to be parsed by
other software, such as monitoring agents. Those should read the metrics directly from
/proc/net/snmp and /proc/net/netstat instead (or even nstat(8)).
10.2.5sar
pasn aq ueo (1ies spodau sopses xomsau snoea ptd ueo °(1)ies 'saodau Asasoe uasis a
live, or configured to record data periodically as a monitoring tool. The networking options to
sar(1) are:
•-n DEV: Network interface statistics
 -n EDEV: Network interface errors
• -n IP;IP6: IPv4 and IPv6 datagram statistics
 -n EIP,EIP6: IPv4 and IPv6 error statistics
• -n ICMP,ICMP6: ICMP IPv4 and IPv6 statistics
■ -n EICMP,EICMP6: ICMP IPv4 and IPv6 error statistics
 -n TCP: TCP statistics
-n ETCP: TCP error statistics
• -n SOCK,SOCK6: IPv4 and IPv6 socket usage
---
## Page 443
406
Chapter 10 Networking
As an example invocation, the following shows using four of these options on a proxduction
Hadoop instance, printed with an interval of one second:
+ sar -n SOCK,TCP,ETCP,DEV 1
Linux 4.15,0=34=genex1c
1- . - 1
03/06/2019
_x86_64_
(36 CPU)
08:06:48 PK
IFACE
rxpck/s
txpck/s
xxkB/s
t.xkB/s
rxcnp/s
txcnp/s
rxncst/s
hifutil
08:06:49 P
eth0 121615.00 108725.00 168906,73
149731, 09
0.00
0. 00
0, 00
13.84
08:06:49 PH
10
600.00
600 .00
11879.12
11879,12
0.00
0. 00
0, 00
0,00
08:06:48 PM
totsck
tcpsck
xosdpn
ravsck
ip-frag
t.cp-tv
08:06:49 PK
2133
BOt
D
7134
08:06:48 PH
active/s passive/s
1seg/s
oseg/s
08 :06 : 49 PM
16.00
134.00
15230,00 109267,00
08 :06: 48 PM
08:06;49 
2/7 du,e
estres/s
Eet
isegerr/s
2/24510
0.00
8.00
1 .00
0,00
14,00
[. .-]
This multi-line output repeats for each interval. It can be used to determine:
● The number of open TCP sockets (tcpsck)
The current TCP connection rate (active/s + passive/s)
• The TCP retransmit rate (retrans/s / oseg/s)
 Interfaces packet rates and throughput (rxpck/s + txpck/s, rxkB/s + txkB/s)
include the EDEV group to check for such errors.
10.2.6
nicstat
nicstat 1
Tine
Int
rKB/s
KB/s
2/2/
Rvs
xivs itti1
Sat
20 :07 : 43
eth0122190 B1009.7 89435.8 61576.81399.0 1347.2
10.0
0 . 00
20:07: 43
1o 13000,0 13000.0
646.7
646.7 20583.5 20583,5 0.00
0 , 00
5 0rigin: 1 de
---
## Page 444
10.2  Traditional Tools
407
Tine
Int
2/BXx2/
rPk/s
2/
Rvs
xAvs tti1
Sat
20 :07:44
eth0
268115 42283.6
1482.5 1073.6 22.0
0 .00
20 :07:44
1o
1869.3
1869.3
400.3
400.3
4782.14782.10.00
0, 00
T1se
Int
xKB/s
vKB/s
rPk/s
vPk/s
rAv5
wAvs 5Ut11
Sa t:
20 : 07 : 45
eth0
146194 40685.3102412 33270.41461.81252.2
12.0
0 , 00
20 :07 : 45
2 120T
109.1 16149.1 16149.10.00
0 .00
[...]
This includes a saturation statistic, which combines different errors that indicate the level of
interface saturation. A 1 option will print separate read and write utilization percents, to deter-
mine if one direction is hitting limits.
10.2.7 ethtool
options, and also print driver statistics with S. For example:
ethtool(8) can be used to check the static configuration of the network interfaces with 1 and x
+ethtool -S eth0
NIC statistics:
tx_timeout: 0
0 :puedsn.s