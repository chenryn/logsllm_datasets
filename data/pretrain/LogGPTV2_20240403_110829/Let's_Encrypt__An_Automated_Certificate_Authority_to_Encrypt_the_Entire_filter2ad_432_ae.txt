27.0% Wix
3.0M 57%
4.0% Hetzner
2.5M 80%
4.0% Google
3.9% PDR
2.0M 59%
3.5% SingleHop 2.0M 64%
LE % LE % of LE
3.2%
2.4%
2.0%
1.6%
1.6%
Table 4: Providers with most Let’s Encrypt domains on live websites.
While automatic provisioning of Let’s Encrypt certificates has explained
part of its explosive growth, many of the networks with the most certificates
are cloud providers where users have chosen to use Let’s Encrypt.
Let’s Encrypt certificate, 75% previously deployed HTTPS with
a different CA. (We note that sites consistently in the Alexa Top
Million are likely to be the most popular and may not represent the
top million more broadly.) These include Sectigo (27%), GeoTrust
(15%), GlobalSign (8%), GoDaddy (6.4%), and DigiCert (6.3%).
7.2 Automatic HTTPS Configuration
One reason that Let’s Encrypt has experienced rapid growth is that
its service has been integrated by hosting and CDN providers in
order to automatically provision certificates for their customers. For
example, the drag-and-drop website building service Wix provides
HTTPS for all users using Let’s Encrypt certificates [105]. There
are nearly 4M unique active FQDNs with Let’s Encrypt certificates
that point to servers in the Wix AS (Table 4). In the most extreme
case, Unified Layer, a subsidiary of Endurance International Group
(EIG), which provides public hosting through Bluehost, HostGator,
and several other subsidiary brands, hosts nearly 34M sites with
certificates from Let’s Encrypt. This accounts for 27% of the publicly
accessible names found in Let’s Encrypt certificates.
Half of names in Let’s Encrypt certificates are located in just
10 ASes, and 80% are in 100 ASes. However, this concentration does
not necessarily indicate that these providers are automatically issu-
ing Let’s Encrypt certificates for every site. Rather, this represents
a broader centralization of the Web. Many of the networks with the
most Let’s Encrypt certificates are large cloud providers like OVH,
Figure 7: Share of domains using Let’s Encrypt for the ASes with the
most HTTPS sites. The largest, Unified Layer, represents 27% of accessible
domains using Let’s Encrypt certificates.
Amazon, Hetzner, and Digital Ocean, where customers are provi-
sioning certificates from a variety of CAs (Figure 7). Of the top ten
largest Let’s Encrypt clients by network (i.e., ASN), only three use
Let’s Encrypt for over 90% of their HTTPS sites. This centralization
is also present for other CAs (Figure 6). Beyond Unified Layer, the
next largest provider that automatically provisions certificates for
all customers is Squarespace, which accounts for under 4% of Let’s
Encrypt domains. In total, the largest providers that automatically
provision certificates for all customers account for only 34% of Let’s
Encrypt names (Table 4).
7.3 Web Servers
While some Web servers like Caddy automatically provision Let’s
Encrypt certificates, the bulk of sites are served from traditional
Web servers like Nginx and Apache. We see Let’s Encrypt usage on
almost all of the common Web servers, though we see significantly
different levels of adoption between servers (Table 5). For example,
while 85% of sites hosted on Nginx use Let’s Encrypt, less than half
of Apache and IIS sites do. Nginx is the most popular Web server
used to host public Let’s Encrypt-protected domains. Caddy is the
most popular server with near 100% Let’s Encrypt usage.
7.4 User Demographics
Beyond automatic provisioning, Let’s Encrypt usage is broadly
similar to that of other authorities by both geographic breakdown
Session 10E: CertificatesCCS ’19, November 11–15, 2019, London, United Kingdom2482Name
Apache
Nginx
LiteSpeed
Cloudflare
cPanel
Microsoft
OpenResty
DPS (GoDaddy)
Cowboy
GSE
Other
Not Specified
All FQDNs
79.3M
66.0M
14.6M
13.2M
10.8M
3.9M
3.5M
1.6M
0.5M
0.5M
2.4M
18.5M
LE FQDNs % LE % of LE
30%
45%
5.8%
0.3%
3.8%
1.2%
2.5%
0%
0.1%
0.3%
1.4%
11%
36.7M 46%
56.2M 85%
7.25M 49%
31K
0.2%
4.8M 43%
1.5M 38%
3.1M 87%
0%
0.1M 25%
0.4M 81%
1.7M 70%
13.7M 74%
9
Table 5: Most common server types. Domains that responded to HTTPS
requests on January 29, 2019, grouped by type of server and categorized
as using Let’s Encrypt or another CA. Apache is the most popular server
overall, but Nginx is the most popular among Let’s Encrypt deployments.
eTLD
.com
.de
.org
.uk
.co.uk
LE % LE % of LE
48.5%
4.3%
3.6%
2.7%
2.4%
44.3M 52%
3.9M 69%
3.3M 68%
2.5M 62%
2.2M 63%
eTLD
.nl
.br
.fr
.com.br
.ru
LE % LE % of LE
2.1%
1.9%
1.8%
1.8%
1.4%
1.9M 71%
1.8M 72%
1.7M 82%
1.6M 73%
1.3M 79%
Table 6: eTLDs with most Let’s Encrypt certificates based on valid
certificates in the Censys dataset.
and TLD. For example, the most common TLDs are largely the same
as for other CAs, though we see differing adoption rates in some
countries (Table 6). For example, while only 49% of .com domains
use Let’s Encrypt, around 80% of .ru and .fr domains do.
There are several public suffixes with a disproportionate number
of Let’s Encrypt certificates. For example, 30 suffixes have more
than 100,000 domains and greater than 95% Let’s Encrypt adoption.
These fall into several broad categories:
Blog and hosting providers. Several large blog providers that
create a unique subdomain for each blog they host. For exam-
ple, there are certificates for 1.3M subdomains of home.blog and
287K domains under automattic.com.
IoT devices. There are a handful of IoT manufacturers who cre-
ate a subdomain and certificate for each deployed IoT device. For
example, there are 875K domains under keenetic.io. We also see
remotewd.com (384K), freeboxos.fr (182K), and myfritz.net (237K).
For these cases, over 99% of subdomains use Let’s Encrypt.
TLDs. There are three TLDs with near 100% LE usage: .blog
(2.3M), .jobs (165K), and .ir (792K). Let’s Encrypt is one of a
small number of CAs that issue certificates for names in Iran’s TLD.
These domains illustrate several new HTTPS use cases and popula-
tions of users enabled by automated certificate issuance.
7.5 Certificate Renewals
Compared to other sites, fewer sites with Let’s Encrypt certificates
serve expired certificates, and few Let’s Encrypt renewals (2.9%)
occur after the prior certificate has expired. Only 2.2% of sites in the
Top Million with Let’s Encrypt certificates currently serve expired
certificates, while 3.9% of all HTTPS sites have expired certificates.
Most renewals occur in the last 30 days before the validity period of
a certificate expires (64%), but over a third of renewals occur in the
early (19%) and middle (16%) periods of first 30 days and 30–60 days,
respectively. This indicates that organizations are able to maintain
an improved security posture through automation despite shorter
certificate lifespans than other authorities offer.
8 DISCUSSION AND SECURITY LESSONS
When we started work on Let’s Encrypt, the two most commonly
voiced criticisms about the Web PKI were that (a) it was too difficult
for server operators to use, and (b) it wasn’t secure anyway. Let’s
Encrypt was intended to take aim directly at the first complaint,
based on our belief that the usability problem was the more serious
and that it was responsible for the relatively low deployment of
HTTPS. The data in Section 7 (and particularly in Figure 4b) suggest
that this analysis was correct: Let’s Encrypt has been responsible
for significant growth in HTTPS deployment.
By contrast, Let’s Encrypt has had only an indirect impact on
the security of the HTTPS ecosystem itself. Ultimately, the security
of certificates is dictated by that of the weakest CA, and security
only improves when all CAs do a better job. In parallel with our
efforts, browser-makers and security advocates within the Web PKI
community have been working to increase PKI security through
tightened requirements for CAs, promotion of new security mecha-
nisms such as Certificate Transparency, and enforcement of greater
CA transparency and accountability. Let’s Encrypt has been an
eager participant in these changes, which we consider to have been
quite productive, and has attempted to set an example of good PKI
citizenship, including through its commitment to openness and its
record of fast and complete incident disclosure.
8.1 Why Was Let’s Encrypt Successful?
At some level, the answer to Let’s Encrypt’s success is easy: it was
free and easy to use (and in fact automated). While some previous
CAs such as StartCom had free tiers and others had some level
of automation, no previous CA had attempted to combine these
two into a single service offering. These properties turn out to be
strongly interdependent: Automation is necessary to have a free
CA and free certificates make automation practical.
Automation enables free certificates. The dependency of free
certificates on automation is relatively obvious: if certificates are
free and your intent is to issue millions of certificates, then it is
critically important to keep per-certificate costs down; automation
is the only plausible mechanism for doing so. Removing humans
from the validation process also reduces the possibility that social
engineering or simple misjudgment will lead to misissuance, both
of which are sources of risk for a CA on a limited budget.
In addition to lowering the direct monetary cost of certificates,
automation lowers the cost to administrators of managing them.
Manual management, especially of large server farms, is inherently
expensive and also introduces the risk of configuration errors—such
as failure to renew certificates—that can lead to downtime. Together
with free certificates, the net impact is a significant lowering of the
overall cost of serving HTTPS.
Session 10E: CertificatesCCS ’19, November 11–15, 2019, London, United Kingdom2483Figure 8: Certificate authority flow among stable, popular sites. We track CA choice for 141K domains over five snapshots, from 7/2015 to 1/2019. The
included sites are those that were ranked in the Alexa Top Million at every snapshot, and so are likely more popular and long-lived than the top million overall.
Free certificates make automation practical. Although it is
technically possible to have automation with non-free certificates,
the requirement for payment makes automation significantly less
valuable. This is most obvious in the case of large hosting providers
such as Automattic or Squarespace, which have been responsible
for a large fraction of the use of Let’s Encrypt (see Section 4). Each
of these providers made use of Let’s Encrypt’s APIs to automatically
issue certificates for large fractions of their users. This would have
been more difficult, if not impossible for most providers, if they had