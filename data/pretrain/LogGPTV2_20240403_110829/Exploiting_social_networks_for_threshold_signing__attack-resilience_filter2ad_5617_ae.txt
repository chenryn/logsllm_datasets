Summary. In any case of the three node uptime and down-
time distributions we considered (i.e., exponential, power-
law, normal), α ∈ [0.6, 0.8] is seemingly a good trade-oﬀ
between attack-resilience and availability. Moreover,
the rough symmetry visible in each ﬁgure conﬁrms that
attack-resilience and availability are at odds with each
other, while the imperfection of the symmetry suggests that
one does not always comes at the expense of the other. For
example, in Figure 10(a) for d = 10, increasing α from 0.7
to 0.8 does not visibly aﬀect availability, but causes an
increase of perhaps 0.15 in attack-resilience.
7. RELATED WORK
Prior works related to protecting cryptographic keys.
The ﬁrst approach is to use special hardware devices, such
as cryptographic coprocessors [37] or Trusted Platform Mod-
ules (TPMs) [14]. Assuming that the devices are tamper-
resistant and immune to side-channel attacks [19], this ap-
proach would be eﬀective. However, there are possibly a
large population of average users whose legacy computers
may not have or support such devices.
The second approach is to use passwords. Passwords can
be used to encrypt cryptographic keys during their storage.
But this method is subject to the oﬀ-line dictionary attack
launched by an attacker when breaking into a computer,
which may be coupled with other attacks such as the one
due to Shamir and van Someren [34]. This vulnerability per-
sists even if private keys are based on advanced techniques
— such as forward-secure signing [4, 5], key-insulated sign-
ing [9], and intrusion-resilient signing [18]. (The exception,
due to Hoover and Kausik [17], requires that public keys be
kept secret.) Passwords can also be used to help download
cryptographic keys from some trusted server(s), as shown by
Perlman and Kaufman [27] and by Ford and Kaliski [10].
However, all the techniques mentioned above are ineﬀective
in the presence of attacks that may compromise keys during
their use in memory, as reported by Harrison and Xu [15]
and by Piegdon and Pimenidis [28].
The third approach is to use two-party or multi-party
threshold cryptography, which may be further coupled with
password-based protection. For example, a user can “split”
her private key into two pieces such that one piece is kept
on the user’s computer and the other is kept on some re-
mote server (cf. Ganesan [11], MacKenzie and Reiter [20],
Boneh et al.
In general, a user can employ multi-
[6]).
ple servers to run a threshold cryptosystem, which can be
further enhanced with proactive-security [26, 16]. This ap-
proach certainly raises the bar against the attacks mentioned
above. The present paper follows this approach, but with
the unique feature of exploiting social networks to realize it.
Prior works related to exploiting social networks for
security. Notably, Capkun et al. [7] exploited PGP certiﬁ-
cate graphs for securing ad hoc networks. Clearly, the social
network they exploited is based on much weaker trust rela-
tionships between the users. Yu et al. [38] exploited social
networks to counter Sybil attacks. Although their purpose
is diﬀerent, the social networks they exploited are also based
on strong trust relationships between the users.
Prior works related to understanding the impact of
network topology on security. Our investigation on the
impact of social network topology on attack-resilience is
reminiscent of the investigations of the impact of network
topology on physical network connectivity in the presence
of node or edge failures (cf., e.g., [2, 1] and their numerous
follow-ons). These investigations focus on the probability
that a graph remains connected after removing some nodes
or edges; whereas, we study the number of compromised
private keys after an adversary has compromised some com-
puters. Moreover, social networks are “overlay” networks.
Thus, their studies and ours are incompatible.
8. CONCLUSION AND OPEN PROBLEMS
We explored the idea of exploiting social networks for
threshold signing, which naturally exploits the existing trust
relationships between the users. In order to establish a deep
understanding of this approach, we introduced two mea-
sures: attack-resilience and availability. In order to
circumvent the NP-hardness of identifying the optimal at-
tack strategy, we presented a heuristic algorithm for iden-
tifying an often, but not always, powerful attack strategy.
We gave an analytic result for characterizing availabil-
ity of resulting systems, and a method for identifying good
trade-oﬀs between attack-resilience and availability.
Two important questions are left open. First, how tight
is our heuristic attack strategy when compared with the op-
timal attack strategy? This is challenging because, as men-
tioned before, there are no known algorithms that can even
approximate the vertex expansion problem with a constant
factor. Second, how can we analytically characterize the
impact of social network topology on attack-resilience
deﬁned in this paper? While the discussion in Section 7
would have explained that the techniques for connectivity-
oriented analysis are probably not applicable to our set-
ting, we now give a deeper hint why the problem we en-
counter would be more diﬃcult. The main reason is that,
as our simulation study reveals, the heuristically powerful
or quasi-optimal attack strategy is based on adaptively se-
lecting nodes to compromise. Since the “adaptive selection”
is not based on the nodes’ degrees in the initial graphs, but
rather in the newly introduced remainder graphs, this inval-
idates the node-selection assumptions made in the models
for connectivity-oriented analysis.
Acknowledgement. We thank Haifeng Yu for a helpful
conversation that brings [3] to our attention.
This work was supported in part by ARO, NSF, and UTSA
CIAS. The opinions expressed in this paper are those of the
authors, and are not those of the funding agencies.
335
[21] P. MacKenzie and M. Reiter. Two-party generation of
dsa signatures. In Proc. CRYPTO 2001, pages
137–154.
[22] A. Medina, A. Lakhina, I. Matta, and J. Byers. Brite:
An approach to universal topology generation. In
Proceedings of International Symposium in Modeling,
Analysis and Simulation of Computer and
Telecommunication Systems (MASCOTS’01), pages
346–356.
[23] National Institute of Standards and Technology
(NIST). FIPS Publication 186: Digital Signature
Standard, May 19, 1994.
[24] M. Newman. The structure and function of complex
networks. SIAM Review, 45:167, 2003.
[25] A. Nicolosi, M. Krohn, Y. Dodis, and D. Mazi`eres.
Proactive two-party signatures for user authentication.
In Proceedings of the Network and Distributed System
Security Symposium (NDSS’03), 2003.
[26] R. Ostrovsky and M. Yung. How to withstand mobile
virus attacks (extended abstract). In Proc. ACM
PODC’91, pages 51–59.
[27] R. Perlman and C. Kaufman. Secure password-based
protocol for downloading a private key. In Proceedings
of the Network and Distributed System Security
Symposium (NDSS’99), 1999.
[28] D. Piegdon and L. Pimenidis. Hacking in physically
adressable memory. In Proc. 4th International
Conference on Detection of Intrusions & Malware,
and Vulnerability Assessment (DIMVA’07).
[29] T. Rabin. A simpliﬁed approach to threshold and
proactive rsa. In CRYPTO’98, pages 89–104.
[30] R. Rivest, A. Shamir, and L. Adleman. A method for
obtaining digital signatures and public-key
cryptosystems. C. ACM, 21(2):120–126, 1978.
[31] S. Ross. Stochastic Processes. Wiley Series in
Probability and Mathematical Statistics. John Wiley
& Sons, Inc, 1996.
[32] C. P. Schnorr. Eﬃcient signature generation by smart
cards. Journal of Cryptology, 4:161–174, 1991.
[33] A. Shamir. How to share a secret. Communications of
the ACM, 22:612–613, November 1979.
[34] A. Shamir and N. van Someren. Playing ‘hide and
seek’ with stored keys. In Proceedings of Financial
Cryptography 1999, pages 118–124.
[35] S. Xu, X. Li, and P. Parker. Exploiting social
networks for threshold signing: Attack-resilience vs.
availability. Full version of the present paper available
at http://www.cs.utsa.edu/~shxu.
[36] S. Xu and R. Sandhu. Two eﬃcient and provably
secure schemes for server-assisted threshold signatures.
In Proc. CT-RSA 2003, pages 355–372.
[37] B. Yee. Using secure coprocessors. PhD thesis,
Carnegie Mellon University, May 1994.
[38] H. Yu, M. Kaminsky, P. Gibbons, and A. Flaxman.
Sybilguard: defending against sybil attacks via social
networks. In Proceedings of the ACM SIGCOMM
2006, pages 267–278, 2006.
9. REFERENCES
[1] R. Albert and A. Barabasi. Statistical mechanics of
complex networks. Reviews of Modern Physics,
74:47–97, 2002.
[2] R. Albert, H. Jeong, and A. Barabasi. Error and
attack tolerance of complex networks. Nature,
406:378–482, 2000.
[3] N. Alon. Spectral techniques in graph algorithms. In
Proceedings of LATIN’98, pages 206–215.
[4] R. Anderson. On the forward security of digital
signatures. Technical report, 1997.
[5] M. Bellare and S. Miner. A forward-secure digital
signature scheme. In Proc. CRYPTO 1999, pages
431–448.
[6] D. Boneh, X. Ding, G. Tsudik, and M. Wong. A
method for fast revocation of public key certiﬁcates
and security capabilities. In Proc. USENIX Security
Symposium, pages 297–308, 2001.
[7] S. Capkun, L. Buttyan, and J. Hubaux. Small worlds
in security systems: an analysis of the pgp certiﬁcate
graph. In Proc. NSPW’02, pages 28–35.
[8] L. Costa, F. Rodrigues, G. Travieso, and P. Boas.
Characterization of complex networks: A survey of
measurements. Advances In Physics, 56:167–242, 2007.
[9] Y. Dodis, J. Katz, S. Xu, and M. Yung. Strong
key-insulated signature schemes. In Public Key
Cryptography (PKC’03), pages 130–144.
[10] W. Ford and B. Kaliski Jr. Server-assisted generation
of a strong secret from a password. In 9th IEEE
International Workshops on Enabling Technologies:
Infrastructure for Collaborative Enterprises
(WETICE’00), pages 176–180, 2000.
[11] R. Ganesan. Yaksha: augmenting kerberos with public
key cryptography. In Proc. NDSS’95, 1995.
[12] R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin.
Robust threshold dss signatures. In EUROCRYPT’96,
pages 354–371, 1996.
[13] S. Goldwasser, S. Micali, and R. Rivest. A digital
signature scheme secure against adaptive
chosen-message attacks. SIAM J. Computing,
17(2):281–308, April 1988.
[14] Trusted Computing Group.
https://www.trustedcomputinggroup.org/.
[15] K. Harrison and S. Xu. Protecting cryptographic keys
from memory disclosures attacks. In Proc. IEEE
DSN’07, pages 137–143, 2007.
[16] A. Herzberg, M. Jakobsson, S. Jarecki, H. Krawczyk,
and M. Yung. Proactive public key and signature
schemes. In Proc. ACM CCS, pages 100–110. 1997.
[17] D. Hoover and B. Kausik. Software smart cards via
cryptographic camouﬂage. In IEEE Symposium on
Security and Privacy, pages 208–215, 1999.
[18] G. Itkis and L. Reyzin. Sibir: Signer-base
intrusion-resilient signatures. In M. Yung, editor,
Proc. CRYPTO 2002, pages 499–514.
[19] P. Kocher. Timing attacks on implementations of
Diﬃe-Hellman, RSA, DSS, and other systems. In
Proc. CRYPTO 96, pages 104–113.
[20] P. MacKenzie and M. Reiter. Networked cryptographic
devices resilient to capture. In IEEE Symposium on
Security and Privacy, pages 12–25, 2001.
336