### Summary
In all three node uptime and downtime distributions we considered (i.e., exponential, power-law, and normal), a value of \(\alpha \in [0.6, 0.8]\) appears to be a good trade-off between attack-resilience and availability. The rough symmetry observed in each figure confirms the inherent conflict between these two metrics, while the slight asymmetry suggests that one does not always come at the expense of the other. For instance, in Figure 10(a) for \(d = 10\), increasing \(\alpha\) from 0.7 to 0.8 does not significantly affect availability but results in an increase of approximately 0.15 in attack-resilience.

### 7. Related Work

#### Protecting Cryptographic Keys
Several prior approaches have been proposed to protect cryptographic keys:

1. **Special Hardware Devices**:
   - **Cryptographic Coprocessors** [37] and **Trusted Platform Modules (TPMs)** [14] are hardware-based solutions.
   - These devices are effective if they are tamper-resistant and immune to side-channel attacks [19].
   - However, many average users may not have access to or support for such devices on their legacy computers.

2. **Passwords**:
   - Passwords can encrypt cryptographic keys during storage.
   - This method is vulnerable to offline dictionary attacks [34], even with advanced techniques like forward-secure signing [4, 5], key-insulated signing [9], and intrusion-resilient signing [18].
   - An exception is the method by Hoover and Kausik [17], which requires keeping public keys secret.
   - Passwords can also help download cryptographic keys from trusted servers, as demonstrated by Perlman and Kaufman [27] and Ford and Kaliski [10].
   - However, these techniques are ineffective against attacks that compromise keys in memory, as reported by Harrison and Xu [15] and Piegdon and Pimenidis [28].

3. **Threshold Cryptography**:
   - Two-party or multi-party threshold cryptography can be combined with password-based protection.
   - A user can split their private key into pieces, storing one piece locally and another on a remote server [11, 20, 6].
   - Multiple servers can be used to run a threshold cryptosystem, enhanced with proactive security [26, 16].
   - This approach raises the bar against the mentioned attacks. Our paper follows this approach, uniquely leveraging social networks to achieve it.

#### Exploiting Social Networks for Security
- **Capkun et al.** [7] used PGP certificate graphs to secure ad hoc networks, based on weaker trust relationships.
- **Yu et al.** [38] exploited social networks to counter Sybil attacks, focusing on strong trust relationships.

#### Impact of Network Topology on Security
- Our study on the impact of social network topology on attack-resilience is similar to investigations on the impact of network topology on physical network connectivity in the presence of node or edge failures [2, 1].
- While those studies focus on the probability of graph connectivity after node or edge removal, our work examines the number of compromised private keys after an adversary compromises some computers.
- Social networks are overlay networks, making direct comparisons challenging.

### 8. Conclusion and Open Problems

We explored the use of social networks for threshold signing, leveraging existing trust relationships. To understand this approach, we introduced two measures: attack-resilience and availability. We developed a heuristic algorithm to identify an often powerful attack strategy and provided an analytical result for characterizing system availability. We also identified good trade-offs between attack-resilience and availability.

Two important questions remain open:
1. **Tightness of Heuristic Attack Strategy**: How close is our heuristic attack strategy to the optimal attack strategy? This is challenging due to the NP-hardness of the vertex expansion problem.
2. **Analytical Characterization of Social Network Topology Impact**: How can we analytically characterize the impact of social network topology on attack-resilience? Our simulation study reveals that the heuristically powerful or quasi-optimal attack strategy involves adaptively selecting nodes, invalidating assumptions made in connectivity-oriented analysis models.

### Acknowledgements
We thank Haifeng Yu for a helpful conversation that brought [3] to our attention. This work was supported in part by ARO, NSF, and UTSA CIAS. The opinions expressed in this paper are those of the authors and do not necessarily reflect the views of the funding agencies.

### References
[References listed as provided, with no changes needed.]

This optimized version aims to improve clarity, coherence, and professionalism, ensuring that the content is well-structured and easy to follow.