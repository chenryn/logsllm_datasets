GSPR with two benchmarks—viz., BS and BCNSW. We
focus on three speciﬁc algorithms: Sign (signature genera-
tion algorithm), SignCheck (signature correctness checking
algorithm), and RevCheck (revocation status checking algo-
rithm). We focus on those algorithms because they need to
be executed on-line in real time, and moreover they need to
be performed by the signer and the veriﬁer, who have limited
computational capabilities compared to the group manager.
Firstly, we consider only the most computationally expen-
sive operations—i.e., exponentiation (Exp.) in G1, G2, or
GT , and bilinear mapping. Here, since G1 = G2, the applica-
tion of isomorphism is not considered. Table 2 provides the
number of operations needed in each of the three algorithms
for GSPR, BS and BCNSW. Note that in GSPR, the opera-
tions in Step 1 in the Sign algorithm are independent of the
message to be signed or the random parameters, and hence,
they can be pre-computed. Also, ψ(w1) and e(g1, g2) can
also be pre-computed. Further, in the RevCheck algorithm
in GSPR, the computational cost of computing the cross-
correlation between a revocation code and an alias code is l
integer additions since the length of the revocation code is l
with each element being an integer, and the alias code is a
vector of +1s and −1s.
By using the PBC library, we implement the three al-
gorithms for GSPR, BS and BCNSW, and measure their
1343running time on a PC platform with Intel(R) Core(TM)2
Duo CPU E8400 @ 3GHz. The measurements are obtained
by averaging over 1000 runs of each algorithm. Table 3 pro-
vides their running times on the PC platform. Here, we
assume that the number of revoked private keys is 1024, i.e,
nr = 1024. From Table 3, we can observe that there is no
signiﬁcant diﬀerence in the computation times of the three
schemes when comparing their performance with respect to
Sign and SignCheck. However, the diﬀerence between GSPR
and the other two schemes in terms of the computational
cost of RevCheck is signiﬁcant. GSPR’s RevCheck algorithm
is more than two orders of magnitude more eﬃcient than
those of the other two schemes. Hence, when we consider
the total signature veriﬁcation time which includes the time
needed to perform SignCheck as well as RevCheck, the run-
ning time in GSPR is signiﬁcantly less than that in BS and
BCNSW.
Figure 3 shows the computation time required to verify
a signature versus the number of revoked private keys. We
observe that with only a few thousand revoked private keys,
the computation times for BS and BCNSW quickly grow
to several seconds for verifying only one signature. In con-
trast, the growth rate of GSPR’s computation time is much
lower, which is primarily due to the computational eﬃciency
advantage of GSPR’s RevCheck.
6.2 Communication Overhead
We consider the three communication scenarios—between
the group manager and the signer (manager-signer), between
the signer and the veriﬁer (signer-veriﬁer), and between the
group manager and the veriﬁer (manager-veriﬁer).
In the
ﬁrst scenario, while joining the group, the group manager
sends a secret key to the signer. In the second scenario, the
signer sends a signature to the veriﬁer. Lastly, in the third
scenario, the group manager sends a revocation list/code
to the veriﬁer. Table 4 provides the number of elements
(Elem.) of Z∗
p, G1, G2 or integers (Int.) communicated in
each of the three scenarios for GSPR, BS and BCNSW. Note
that in GSPR, the alias tokens are generated by the signer
using the secret key obtained from the group manager, and
hence they do not need to be communicated.
Table 5 shows the required communication overhead of the
three schemes for the three scenarios, assuming nr = 1024.
Results from the table indicate that GSPR’s communica-
tion overhead is two orders of magnitude larger than those
of the other two schemes when considering the manager-
veriﬁer scenario. Hence, we can conclude that GSPR makes
an advantageous trade-oﬀ between computational overhead
and communication overhead. This trade-oﬀ is advanta-
geous because reducing the computational overhead is much
more critical than reducing the communication overhead
when considering scalability. Verifying a signature (which
includes checking the revocation status of the private key)
is an inherently on-line task which needs to be performed in
real time, and it can be the primary performance bottleneck
when the scheme is deployed in a large network. However,
the greater communication overhead incurred by GSPR in
the third (i.e., manager-veriﬁer) scenario can be readily mit-
igated by pre-fetching the revocation code before the veriﬁer
needs to verify a given signature.
In Figure 4, we compare four schemes in terms of the com-
munication overhead required to transmit the revocation list
(for GSPR, it is the revocation code). The top-most curve
10
20
30
40
50
60
GSPR
BS
BCNSW
70
80
)
%
(
o
i
t
a
r
s
s
o
l
e
g
a
s
s
e
m
e
g
a
r
e
v
A
100
80
60
40
20
0
0
Number of messages received per broadcast interval
Figure 5: Average message loss ratio vs. number of mes-
sages received per broadcast interval.
is the curve for a pseudonym-based signature (PS) with El-
liptic Curve Digital Signature Algorithm (ECDSA) with the
public key size of 192 bits to achieve the 80-bit security level.
For PS, we assume that the number of pseudonyms allot-
ted to each signer is 120, and the group manager publishes
public-key certiﬁcates of all the revoked pseudonyms in the
revocation list. In Figure 4, we observe that although the
communication overhead of GSPR is higher as compared to
BS and BCNSW, it is still lower than PS.
7. USE OF GSPR IN DSRC APPLICATIONS
To illustrate the practical advantages of GSPR, in this
section, we compare the signature veriﬁcation performance
of GSPR with two benchmarks (i.e., BS and BCNSW) for a
speciﬁc type of applications, viz., vehicular network (VANET)
safety applications. Since the allocation of the Dedicated
Short-Range Communications (DSRC) spectrum in the 5.9
GHz band by the Federal Communications Commission (FCC),
the automotive industry and the other stakeholders have
been actively developing DSRC technologies, with a partic-
ular focus on vehicular safety applications.
In a typical safety application, each vehicle broadcasts
beacon messages that contain information critical to safety,
such as speed, direction of movement, acceleration, etc. The
beacon messages need to be authenticated, but, at the same
time, the privacy of the transmitting vehicle’s driver must
be protected [12]. Without such protection, adversaries can
use the beacon messages to track the driver’s movement or,
worse yet, use them for more nefarious purposes. Hence,
safety applications is one important application domain for
privacy-preserving authentication techniques.
Typically, beacon messages are broadcast in intervals of
100 ms [12].
In high vehicular density scenarios, a given
vehicle is expected to receive a large number of beacon mes-
sages within a broadcast interval, and each message needs
to be authenticated before the arrival of the next message
from the same transmitter. If the authentication of the cur-
rent message cannot be ﬁnished before the arrival of the
next message, then the current message must be discarded
because it is considered to contain “stale” information. To
measure the impact of the computational cost of signature
veriﬁcation on the performance of safety applications, we
employ the average message loss ratio, which is deﬁned as
the ratio between the number of beacon messages discarded
due to signature veriﬁcation latency and the total number of
1344beacon messages received by a particular vehicle in a broad-
cast interval of 100 ms [12].
When simulating GSPR, we assume that each vehicle is
on the road for 2 hours per day [20], and replaces its current
alias token with a new one every minute, which equates to
120 alias tokens per day. The simulation results are shown
in Figures 5 assuming nr = 64. From this ﬁgure, we ob-
serve that GSPR’s signature veriﬁcation procedure is eﬃ-
cient enough to ensure acceptable performance for safety
applications under reasonably-favorable conditions. In con-
trast, our results suggest that the computational burden of
the veriﬁcation procedures used by BS and BCNSW is too
heavy for their use in vehicular safety applications.
8. RELATED WORK
The GS based schemes in the recent literature can be di-
vided into two categories based on their revocation check
procedures. In the ﬁrst category of techniques, the revoca-
tion check procedure takes place at the signers [8, 11, 15].
The scheme proposed in [15] achieves constant signing and
veriﬁcation time at the cost of the public key of O(√n)-
size, where n is the total number of signers in the network.
In [8], although the signing and veriﬁcation have constant
time along with constant-size group public key, the compu-
tational cost at the group manager grows with O(n2) which
means that the group manager becomes the bottleneck. The
scheme proposed in [11] achieves constant cost for signing
and veriﬁcation without signiﬁcantly increasing the size of
the public key. However, the length of each signature in [11]
is signiﬁcantly large, e.g., around 20 times that in [6]. While
the schemes proposed in [8, 15] are secure in the random or-
acle model, the scheme proposed in [11] is constructed in the
standard model.
In the second category of schemes, the revocation check
procedure takes place at the veriﬁer through veriﬁer-local
revocation (VLR) [3, 6, 16]. In these schemes, it is the re-
sponsibility of the veriﬁer to check whether a signer has been
revoked or not, by using the revocation list which contains
the revocation tokens corresponding to the revoked private
keys. However, the computational cost of revocation check
procedure in these schemes increases linearly with the num-
ber of revoked private keys. These schemes are secure in the
random oracle model.
9. CONCLUSION
In this paper, we proposed a novel privacy-preserving au-
thentication scheme called Group Signatures with Proba-
bilistic Revocation (GSPR). It is well known that revocation
is the primary performance bottleneck of modern group sig-
nature schemes and that existing schemes do not scale well
to large networks because of high computational cost of their
revocation check procedures. By using the novel concept
of probabilistic revocation, GSPR manages to signiﬁcantly
reduce the computational burden of the revocation check
procedure at the cost of increased communication overhead.
The negative impact of the increased communication over-
head can be mitigated by pre-fetching the revocation code
from the group manager before signature veriﬁcation.
10. ACKNOWLEDGMENTS
This work was partially sponsored by NSF through grants
1228903, 1265886, 1314598, and 1431244; by NSFC through
grant 61201245; and by the industry aﬃliates of the Broad-
band Wireless Access & Applications Center and the Wire-
less @ Virginia Tech group.
11. REFERENCES
[1] PBC: Pairing-based cryptography.
https://crypto.stanford.edu/pbc/. Accessed: May 1, 2015.
[2] M. Bellare, D. Micciancio, et al. Foundations of group
signatures: Formal deﬁnitions, simpliﬁed requirements, and a
construction based on general assumptions. In Advances in
Cryptology - EUROCRYPT, volume 2656, pages 614–629.
Springer Berlin Heidelberg, 2003.
[3] P. Bichsel, J. Camenisch, et al. Get shorty via group signatures
without encryption. In Security and Cryptography for
Networks, volume 6280, pages 381–398. Springer Berlin
Heidelberg, 2010.
[4] D. Boneh, X. Boyen, et al. Short group signatures. In
Advances in Cryptology - CRYPTO, volume 3152, pages
41–55. Springer Berlin Heidelberg, 2004.
[5] D. Boneh, B. Lynn, et al. Short signatures from the weil
pairing. In Advances in Cryptology - ASIACRYPT, volume
2248, pages 514–532. Springer Berlin Heidelberg, 2001.
[6] D. Boneh and H. Shacham. Group signatures with veriﬁer-local
revocation. In Proceedings of the 11th ACM Conference on
Computer and Communications Security (CCS), pages
168–177, 2004.
[7] E. H. Dinan and B. Jabbari. Spreading codes for direct
sequence CDMA and wideband CDMA cellular networks.
Communications Magazine, IEEE, 36(9):48–54, 1998.
[8] C.-I. Fan, R.-H. Hsu, et al. Group signature with constant
revocation costs for signers and veriﬁers. In Cryptology and
Network Security, volume 7092, pages 214–233. Springer
Berlin Heidelberg, 2011.
[9] A. Fiat and A. Shamir. How to prove yourself: Practical
solutions to identiﬁcation and signature problems. In
Proceedings on Advances in Cryptology - CRYPTO, pages
186–194. Springer-Verlag, 1987.
[10] V. Goyal. Reducing trust in the PKG in identity based
cryptosystems. In Advances in Cryptology - CRYPTO,
volume 4622, pages 430–447. Springer Berlin Heidelberg, 2007.
[11] B. Libert, T. Peters, et al. Group signatures with
almost-for-free revocation. In Advances in Cryptology -
CRYPTO, volume 7417, pages 571–589. Springer Berlin
Heidelberg, 2012.
[12] X. Lin, X. Sun, et al. GSIS: A secure and privacy-preserving
protocol for vehicular communications. Vehicular Technology,
IEEE Transactions on, 56(6):3442–3456, November 2007.
[13] M. Manulis, N. Fleischhacker, et al. Group signatures -
authentication with privacy. Technical report, Group
Signatures Study for BSI - German Federal Oﬃce for
Information Security, 2012.
[14] A. Miyaji, M. Nakabayashi, et al. New explicit conditions of
elliptic curve traces for FR-reduction. IEICE Transactions on
Fundamentals of Electronics, Communications and
Computer Sciences, 84(5):1234–1243, 2001.
[15] T. Nakanishi, H. Fujii, et al. Revocable group signature
schemes with constant costs for signing and verifying. In
Public Key Cryptography - PKC, volume 5443, pages 463–480.
Springer Berlin Heidelberg, 2009.
[16] T. Nakanishi and N. Funabiki. A short veriﬁer-local revocation
group signature scheme with backward unlinkability. In
Advances in Information and Computer Security, volume
4266, pages 17–32. Springer Berlin Heidelberg, 2006.
[17] R. Pickholtz, D. Schilling, et al. Theory of spread-spectrum
communications-A tutorial. Communications, IEEE
Transactions on, 30(5):855–884, May 1982.
[18] D. Pointcheval and J. Stern. Security arguments for digital
signatures and blind signatures. Journal of Cryptology, pages
361–396, 2000.
[19] M. O. Rabin. Probabilistic algorithm for testing primality.
Journal of number theory, 12(1):128–138, 1980.
[20] M. Raya and J.-P. Hubaux. Securing vehicular ad hoc
networks. Journal of Computer Security, 15(1):39–68, 2007.
[21] P. P. Tsang, M. H. Au, et al. PEREA: Towards practical
TTP-free revocation in anonymous authentication. In
Proceedings of the 15th ACM Conference on Computer and
Communications Security (CCS), pages 333–344, 2008.
1345