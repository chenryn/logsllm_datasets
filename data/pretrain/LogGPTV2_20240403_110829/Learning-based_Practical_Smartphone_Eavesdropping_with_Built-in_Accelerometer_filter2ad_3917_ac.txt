to gravity along six directions (+x, -x, +y, -y, +z, -z).
TABLE IV.
THE GRAVITY RESPONSE OF DIFFERENT
ACCELEROMETERS ALONG THE SIX DIRECTIONS. A AND B ARE TWO
SMARTPHONES OF THE SAME MODEL.
Device
Samsung S8 A
Samsung S8 B
Google Pixel 3 A
Google Pixel 3 B
+x
9.64
9.59
10.16
9.78
Response to Gravity (m2/s)
+z
-x
9.83
9.71
9.59
9.80
+y
9.94
10.02
9.89
9.77
-y
9.78
9.76
9.67
9.79
10.01
10.05
9.41
9.81
-z
9.83
9.82
9.82
9.81
As shown in Table IV, the gravity measured along different
directions are slightly different, which indicate the existence of
hardware distortion. Given a speciﬁc accelerometer, its actual
measurement along ith axis can be modeled as [16]
aM
i = Si(ai) + Oi,
where ai is the actual acceleration, Si and Oi respectively
represent
the actual
acceleration signal along the ith axis can be recovered by
the gain and offset errors. Therefore,
ai = (aM
i − Oi)/Si,
where Si and Oi are calculated through analyzing the ac-
celerometer’s response to gravity[12], [9].
In the proposed attack, it is even not necessary for the
adversary to recover the actual acceleration signal. This is
because that the speech information captured by the accelerom-
eter mainly distributed in the frequency components above
85 Hz while the offset error can only affect the DC (0 Hz)
7
(c) Google Pixel 3
(d) Huawei P20
Fig. 5. Resonant frequency search. Fig. 5(a) presents the audio response of
different smartphone accelerometers to airborne voice signals. The airborne
signal is a series of single tone signals from 1000Hz to 22000Hz with an
interval of 50Hz. Fig. 5(b), 5(c), and 5(d) respectively presents the scalogram
of the accelerometer signal for the corresponding smartphone to achieve the
highest audio response.
component. For the gain error, it only affects the “loudness”
of captured speech signal and thus will not distort its spec-
trum. Therefore, we address the hardware distortion simply by
eliminating the DC component of the captured signals.
Acoustic noise refers to all the unwanted sound signals
in the surrounding environment, which could be from speech,
music, vehicles, industrial sources, etc. For the attack proposed
in this paper, the acoustic noise mainly comes from the sur-
roundings of the victim smartphone and the noise components
of the played audio, that is, the noise around the remote caller.
For the acoustic noise around the victim smartphone, the
sound will travel through the air to arrive the accelerometer. In
the literature, Anand et al. [5] show that airborne speech sig-
nals are unable to have any noticeable impact on accelerometer
measurements even at high sound pressure level. To study the
impact of other noise signals, we ﬁrst bring the smartphone
to three noisy environments (bar, crowded bus station, and
metro station) and collect accelerometer measurements for 30
seconds. For all three environments, we observe no signiﬁcant
impact on the accelerometer measurements and the ARdB
values along the z axis are only 0.1900, 0.0724, and -0.0431,
respectively. We then evaluate the impact of resonant fre-
quency. The resonant frequency of the accelerometer’s mass-
spring system typically lies in the range from a few kHz [26]
to tens of kHz [4]. According to the literature [40], [14],
[39], airborne audio signals around the resonant frequency
of a MEMS motion sensor can affect its measurements at
high sound pressure level. To ﬁnd out the impact of resonant
frequency on our system, we test
the audio response of
Samsung S8, Google Pixel 3, and Huawei P20 with airborne
audio signals within the normal frequency range from 1000Hz
to 22000Hz. For each smartphone under investigation, we
stimulate its accelerometer with the speaker of a Huawei
(a) Time domain
Fig. 7. The response of a smartphone accelerometer to ﬁve human activities.
The obtained acceleration signals are concatenated for better comparison.
volume and make phone calls to volunteers in six realistic
environments with different noise levels: 1) Quiet room, 2) Lab
with people talking, 3) Bar with music playing, 4) Crowded
bus station, 5) Metro station with trains running, 6) Metro
station without trains running. For each environment, we col-
lect accelerometer measurements for 30 seconds and calculate
the average ARdb along the z-axis. The ARdb obtained from
the six environments are -0.85, 1.67, 9.15, 13.87, 12.18, 4.89.
Fig. 6 plots the time and frequency domain of the collected
accelerometer measurements. It can be observed that the noise
signals in environment 3, 4, and 5 have signiﬁcantly affected
all frequency components of the accelerometer measurements.
The noise signals in environment 1, 2, and 6 have less effect
on the accelerometer measurements and mainly affect the low
frequency band of the acceleration signal, and thus can be
signiﬁcantly suppressed through a high-pass ﬁlter. Because the
acoustic noise around the remote caller can signiﬁcantly affect
the accelerometer measurements, we evaluate its impact on
speech recognition in Section VI-C.
Human activities can signiﬁcantly affect
the measure-
ments of smartphone accelerometers and thus might be able
to distort the speech information inferred by the adversary. In
order to evaluate the impact of human activities, we studied
the accelerometer’s response to ﬁve human activities: walking,
ascending and descending stairs, stand up and sit down, waving
hand, and typing messages. During each test, the user hold
a Samsung S8 with AccDataRec running in the background
and conduct the activity for about 10 seconds. Because the
accelerometer exhibits very similar response along the three
axes, we concatenate the obtained acceleration signals and
display the scalogram of the y-axis in Fig. 7. It can be observed
that each of the tested activity produces a relatively unique and
constant pattern in the acceleration signals. However, none of
these activities has signiﬁcant impact on frequency components
above 80 Hz. As the typical fundamental frequency for adult
speech signals is from 85Hz to 255Hz, a high-pass ﬁlter with
80Hz cut-off frequency can eliminate most of the distortions
incurred by human activities (as shown in Fig. 7). The re-
maining distortions mainly exist as very short-time pulses in
the high frequency domain, which actually has little impact
on recognition/reconstruction according to our observation, but
will inﬂuence the way of segmentation as introduced in V-A.
Self-noise and surface vibration: self-noise refers to
the noise signal output by the smartphone’s accelerometer
at no external stimulus. This noise is an inherent feature of
the accelerometer itself and contributes to the primary noise
components of the proposed system. Because it
is almost
impossible to keep the accelerometer in a state without any
(b) Frequency domain
Fig. 6. The impact of acoustic noise around the remote caller. We eliminate
the DC component of the acceleration signals and concatenate them for better
comparison. The ﬁrst segment is the self-noise of the accelerometer.
Mate 20 conﬁgured at its highest volume. The speaker and
the accelerometer are placed on two different
tables at a
distance of 10 centimeters in order to eliminate the impact
of surface vibration and maximize the sound pressure on the
accelerometer. The audio signal is a series of two-second single
tone signals ranging from 1000Hz to 22000Hz with a step
frequency of 50Hz. We calculate the accelerometer’s audio
response at each frequency and plot the distribution of the
obtained ARdB values (Fig. 5(a)). The resulting ARdB values
seem to be normally distributed for each smartphone and have
no notable outlier. Most of the recorded acceleration signals
have an ARdB below three. Samsung S8, Google Pixel 3, and
Huawei P20 respectively achieve the highest ARdB value at
4150 Hz (z-axis), 9450Hz (z-axis), and 11450Hz (x-axis). Fig.
5(b), 5(c), and 5(d) show the scalograms of the acceleration
signals recorded at these frequencies. For Samsung S8 and
Google Pixel 3, the accelerometers do not have a constant
response at any speciﬁc frequency, which indicates that the
high ARdB values are caused by the variation of environmental
vibrations. For Huawei P20, its accelerometer seems to have a
constant but weak response at 20Hz. We repeat the experiment
with the same stimulation signal for 10 times and the response
has not been successfully reproduced, which indicates that the
ARdB value is caused by environmental vibrations. Based on
these experimental results, it can be concluded that airborne
acoustic noises at regular frequency (below 22000Hz) and
sound pressure level are unlikely to distort the accelerometer
measurements. The proposed attack will not be affected by the
acoustic noise around the victim smartphone.
For the acoustic noise around the remote caller, because
the noise signals will enter the caller’s smartphone and be
played by the victim device, it is likely that the accelerometer
of the victim smartphone will be affected. To study the impact
of such noise, we set the victim smartphone at its highest
8
(a) Acceleration signal along the x-
axis, y-axis, and z-axis
(b) Spectrogram of the signal along
the z-axis
Fig. 8. The impact of self-noise and surface vibration. The accelerometer is
placed on a table and is only affected by the vibration of the surface.
external stimulus, we investigate the combined effect of self-
noise and surface vibration. Surface vibration could affect
the accelerometer’s measurements along the z-axis when the
smartphone is placed on a table. To measure the impact of
these two noise sources, we place a Samsung S8 on a table
and record its accelerometer measurements for 330 seconds.
The table has a solid surface that could effectively hand over
vibration to the smartphone and is placed in a building under
construction. The output signal of the accelerometer is depicted
in Fig. 8(a). It can be observed that the accelerometer has
a constant noise output along the x-axis and the y-axis. The
self-noise of the accelerometer contributes to the majority of
these noise outputs. For the z-axis, the accelerometer outputs
a constant noise signal as well as surface vibrations. The fre-
quency distribution of the acceleration signal along three axes
are similar. For illustration, Fig. 8(b) plots the spectrogram
of the signal along the z-axis (with the DC offset removed).
In this spectrogram, around 57% of the energy are distributed
below 80Hz. Because the typical fundamental frequency for
adult speech is from 85Hz to 255Hz, we address the self-
noise and the surface vibration through eliminating frequency
components below 80 Hz. The impact of the remaining noise
signal will be evaluated in section VI.
V. THE PROPOSED SYSTEM
In this section, we will detail our proposed system, which
mainly includes three modules, i.e. the preprocessing module,
the recognition module, and the reconstruction module.
A. Preprocessing
The main intent of our system is to recognize and re-
construct the speech information captured by smartphone ac-
celerometers. Compared with analyzing raw waveform data, a
more prevalent and elegant way to recognize speech signals
is to analyze their spectrogram representations [23], [8]. Such
representation shows the frequency components of the signal
and how their intensities change overtime. In conventional
audio signal based speech recognition tasks, the spectrogram is
normally further processed on a Mel-scale to calculate the Mel-
Frequency Cepstrum Coefﬁcients (MFCCs). This is because
(a) Table setting
(b) Handhold setting
Fig. 9. Raw acceleration signals captured by smartphone accelerometer.
the Mel-scale mimics the non-linear perception characteristics
of human ear and is good for discarding redundant and
superﬂuous information. In our system, however, Mel-scale
representations are of little help as the accelerometers in
modern smartphones can only pick up speech signals in the low
frequency band. Therefore, in the proposed system, we pre-
process the acceleration signals into spectrograms for speech
recognition and reconstruction. The spectrogram representation
explicitly reﬂects the multi-scale information of a signal in
the frequency domain, and enables the employment of some
network structures widely-used in the computer vision tasks,
such as ResNet & DenseNet.
Without loss of generality, we now use a Samsung S8
to help illustrate how spectrograms are generated from raw
acceleration measurements. Fig. 9(a) and Fig. 9(b) show the
raw acceleration signals collected from two different settings.
In the table setting, we place the smartphone on a table and
play a speech signal of ﬁve isolated digits (from zero to four)
through its loudspeaker. Acceleration signals collected from
this setting show strong audio response along all axes. For
the handhold setting, we play the same speech signal with
the smartphone held in hand. The acceleration signals are
severely distorted due to the unintentional movement of the
9
(a) Table setting
(b) Handhold setting
Fig. 10. The time interval between two adjacent accelerometer readings. Raw
accelerometer readings have unstable sampling interval because the system is
conﬁgured to send measurements to the application as fast as possible.
hand. There are three main problems in the raw acceleration
signals: 1) Because the system is conﬁgured to send accelerom-
eter measurements to the application as fast as possible,
raw accelerometer measurements are not sampled at ﬁxed
interval (Fig.10). 2) Raw accelerometer measurements can be
severely distorted by human movement. 3) Raw accelerometer
measurements have captured multiple digits and needs to be
segmented. To address these problems, we use the following
steps to convert raw acceleration signals to spectrograms.
Interpolation: We ﬁrst use linear interpolation to deal with
unstable intervals of accelerometer measurements. Because the
timestamps of the sensor measurements are with millisecond
accuracy, a natural way to resolve unstable intervals is to
upsample the accelerometer measurements to 1000 Hz. There-
fore, we use timestamps to locate all time points that have
no accelerometer measurement and use linear interpolation
to ﬁll in the missing data. The resulting signal has a ﬁxed
sampling rate of 1000 Hz. We note that this interpolation
(upsampling) process does not increase the speech information
of the acceleration signal. Its primary purpose is to generate
acceleration signals with a ﬁxed sampling rate.
High-pass ﬁltering: We then use a high-pass ﬁlter to
eliminate signiﬁcant distortions caused by gravity, hardware
distortion (offset error), and human activities. In particular,
we ﬁrst convert the acceleration signal along each axis to
the frequency domain using the Short-Time Fourier Transform
(STFT). It divides the long signal into equal-length segments
(with overlaps) and calculates the Fourier transform on each
segment separately. We then set the coefﬁcients of all fre-
quency components below the cut-off frequency to zero and
convert the signal back to the time domain using inverse STFT.
Because the fundamental frequency for adult male and female
is usually higher than 85 Hz, and human activities rarely affect
frequency components above 80 Hz (as shown in Fig. 7), the
cut-off frequency for speech recognition is set to 80Hz so that
the impact of noise components can be minimized. For speech
reconstruction, since the reconstruction network mainly learns
the mapping between acceleration signals and audio signals,
we use a cut-off frequency of 20 Hz in order to preserve more
speech information. Fig. 11(b) and 11(a) display the ﬁltered
acceleration signals with a cut-off frequency of 20 Hz. For
the table setting, all the acceleration signals are shifted to zero
mean, which indicates the successful removal of the offset error
and the gravity (for the z-axis). For the acceleration signals
collected under the handhold setting, the high-pass ﬁlter has
(a) Table setting
(b) Handhold setting
Fig. 11. Acceleration signals processed with interpolation, high-pass ﬁltering,
and segmentation. The cut-off frequency for high-pass ﬁltering is 20 Hz. The
magnitude sequences are directly calculated from the ﬁltered signals since
they do not involve intense human movements.
also eliminated the impact of hand movement. The ﬁltered
signals obtained after this step mainly consist of the target
speech information and the self-noise of the accelerometer.
Segmentation: As the acceleration signals along the three
axes are completely synchronized, we use the dominant axis
(z-axis) described in section IV to locate cutting points and
then use the obtained cutting points to segment the ﬁltered
acceleration signal along three axes. The cutting points are
located as follows: Given the acceleration signal along the
dominant axis, we ﬁrst sanitize the signal through another
round of high-pass ﬁltering with a cut-off frequency of 160 Hz.
Through studying signals collected from noisy experimental
setups, we observe that this cut-off-frequency could eliminate
a signiﬁcant amount of noise components including the short-
time pulses caused by human movement. Typically, this process
is needed only when the smartphone experiences external vi-
brations or intense movement. We then calculate the magnitude
(absolute value) of the sanitized signal and smooth the obtained
magnitude sequence with two rounds of moving average. The
sliding window for the ﬁrst round and the second round are
200 and 30 respectively. The smoothed magnitude sequences
10
(a) Table setting
(b) Handhold setting
Fig. 12. The spectrogram of the ﬁrst single word signal (z-axis).
of the two settings are shown in Fig. 11. Next, we ﬁnd the
maximum value Mmax and the minimum value Mmin of the
smoothed magnitude sequence. In this process, the ﬁrst and
last 100 magnitude values are discarded as they do not have
sufﬁcient neighboring samples for averaging. The obtained