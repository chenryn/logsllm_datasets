```bash
#!/bin/bash

# `echo` 命令非常适合打印单行消息，但在处理多行文本时可能会遇到一些限制。
# 使用 `cat` 和 here document 可以解决这个问题。

cat <<End-of-message
-------------------------------------
This is line 1 of the message.
This is line 2 of the message.
This is line 3 of the message.
This is line 4 of the message.
This is the last line of the message.
-------------------------------------
End-of-message

# 如果将上面的第7行替换为以下代码：
# cat > $Newfile <<End-of-message
# 那么输出将会被写入到文件 $Newfile 中，而不是标准输出 (stdout)。

exit 0

# 由于上文中的 "exit 0"，下面的代码不会被执行。
# S.C. 提出下面的代码也能实现相同的效果，但请注意，如果文本中包含双引号，则需要进行转义处理。
# echo "-------------------------------------
# This is line 1 of the message.
# This is line 2 of the message.
# This is line 3 of the message.
# This is line 4 of the message.
# This is the last line of the message.
# -------------------------------------"
```

### 优化说明：
1. **注释清晰化**：对注释进行了重新组织和简化，使其更易于理解。
2. **格式统一**：调整了注释和代码之间的间距，使整个脚本更加整洁。
3. **语法修正**：修正了一些语法错误和拼写错误，如 `&lt;` 和 `&gt;` 被替换为 `<` 和 `>`。
4. **逻辑明确**：明确了 `exit 0` 之后的代码不会执行，并解释了 `echo` 的局限性。