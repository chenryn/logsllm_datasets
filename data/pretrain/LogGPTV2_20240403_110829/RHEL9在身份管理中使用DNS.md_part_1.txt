[]{#index.html}
::: book
::: titlepage
::: producttitle
[Red Hat Enterprise Linux]{.productname} [9]{.productnumber}
:::
# []{#index.html#idm140467025550448}在身份管理中使用 DNS {.title}
## 管理与 Red Hat Enterprise Linux 9 中身份管理集成的域名服务(DNS) {.subtitle}
::: abstract
**摘要**
本文档集合提供了如何在 Red Hat Enterprise Linux 9 中管理身份管理中的 DNS
配置、区、位置和规范的说明。
:::
------------------------------------------------------------------------
:::
:::
[]{#making-open-source-more-inclusive.html}
::: preface
::: titlepage
# []{#making-open-source-more-inclusive.html#making-open-source-more-inclusive}使开源包含更多 {.title}
:::
红帽致力于替换我们的代码、文档和 Web
属性中存在问题的语言。我们从这四个术语开始：master、slave、黑名单和白名单。由于此项工作十分艰巨，这些更改将在即将推出的几个发行版本中逐步实施。有关更多详情，请参阅[我们的首席技术官
Chris Wright
提供的消息](https://www.redhat.com/en/blog/making-open-source-more-inclusive-eradicating-problematic-language){.link}。
在身份管理中，计划中的术语变化包括：
::: itemizedlist
-   使用 [**[*block list*]{.emphasis}**]{.strong} 替换
    [*blacklist*]{.emphasis}
-   使用 [**[*allow list*]{.emphasis}**]{.strong} 替换
    [*whitelist*]{.emphasis}
-   使用 [**[*secondary*]{.emphasis}**]{.strong} 替换
    [*slave*]{.emphasis}
-   [*master*]{.emphasis} 会根据上下文被替换为其他更适当的术语:
    ::: itemizedlist
    -   使用 [**[*IdM server*]{.emphasis}**]{.strong} 替换 [*IdM
        master*]{.emphasis}
    -   使用 [**[*CA renewal server*]{.emphasis}**]{.strong} 替换 [*CA
        renewal master*]{.emphasis}
    -   使用 [**[*CRL publisher server*]{.emphasis}**]{.strong} 替换
        [*CRL master*]{.emphasis}
    -   使用 [**[*multi-supplier*]{.emphasis}**]{.strong} 替换
        [*multi-master*]{.emphasis}
    :::
:::
:::
[]{#proc_providing-feedback-on-red-hat-documentation_working-with-dns-in-identity-management.html}
::: preface
::: titlepage
# []{#proc_providing-feedback-on-red-hat-documentation_working-with-dns-in-identity-management.html#proc_providing-feedback-on-red-hat-documentation_working-with-dns-in-identity-management}对红帽文档提供反馈 {.title}
:::
我们感谢您对文档提供反馈信息。请让我们了解如何改进文档。
::: itemizedlist
-   关于特定内容的简单评论：
    ::: orderedlist
    1.  请确定您使用 [*Multi-page HTML*]{.emphasis}
        格式查看文档。另外，确定 [**Feedback**]{.strong}
        按钮出现在文档页的右上方。
    2.  用鼠标指针高亮显示您想评论的文本部分。
    3.  点在高亮文本上弹出的 [**Add Feedback**]{.strong}。
    4.  按照显示的步骤操作。
    :::
:::
::: itemizedlist
-   要通过 Bugzilla 提交反馈，请创建一个新的 ticket：
    ::: orderedlist
    1.  进入
        [Bugzilla](https://bugzilla.redhat.com/enter_bug.cgi?product=Red%20Hat%20Enterprise%20Linux%209){.link}
        网站。
    2.  在 Component 中选择 [**Documentation**]{.strong}。
    3.  在 [**Description**]{.strong}
        中输入您要提供的信息。包括文档相关部分的链接。
    4.  点 [**Submit Bug**]{.strong}。
    :::
:::
:::
[]{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html}
::: chapter
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management}第 1 章 使用 Ansible playbook 在 IdM 中管理全局 DNS 配置 {.title}
:::
使用 Red Hat Ansible Engine `dnsconfig`{.literal} 模块，您可以为
Identity Management(IdM)DNS 配置全局配置。在全局 DNS
配置中定义的设置应用到所有 IdM DNS
服务器。但是，全局配置的优先级低于特定 IdM DNS 区的配置。
`dnsconfig`{.literal} 模块支持以下变量：
::: itemizedlist
-   全局转发器，特别是 IP 地址以及用于通信的端口。
-   全局转发策略：仅、第一个或 none。有关这些类型的 DNS
    转发策略的详情，请参阅 [IdM 中的 DNS
    转发策略](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#dns-forward-policies-in-idm_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 中的 DNS 转发策略"){.link}。
-   转发查找和反向查找区域的同步。
:::
::: itemizedlist
**先决条件**
-   DNS 服务安装在 IdM 服务器中。有关如何安装带有集成 DNS 的 IdM
    服务器的详情，请查看以下链接之一：
    ::: itemizedlist
    -   [安装 IdM 服务器：使用集成的 DNS，集成的 CA 作为 root
        CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-with-integrated-dns_installing-identity-management){.link}
    -   [安装 IdM 服务器：具有集成的 DNS，具有外部 CA
        作为根CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-with-external-ca_installing-identity-management){.link}
    -   [安装 IdM 服务器：使用集成的 DNS,没有
        CA](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index?lb_target=production#installing-an-ipa-server-without-a-ca_installing-identity-management){.link}
    :::
:::
 \
本章包括以下部分：
::: itemizedlist
-   [IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf
    中的全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#how-idm-ensures-that-global-forwarders-from-etc-resolv-conf-are-not-removed-by-networkmanager_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf 中的全局转发器"){.link}
-   [使用 Ansible 确保 IdM 中存在 DNS
    全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#ensuring-the-presence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible 确保 IdM 中存在 DNS 全局转发器"){.link}
-   [使用 Ansible 确保 IdM 中没有 DNS
    全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#ensuring-the-absence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible 确保 IdM 中没有 DNS 全局转发器"){.link}
-   [IdM 中的 DNS
    转发策略](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#dns-forward-policies-in-idm_managing-global-dns-configuration-in-idm-using-ansible-playbooks "IdM 中的 DNS 转发策略"){.link}简介
-   [使用 Ansible playbook 来确保在 IdM DNS
    全局配置中设置了转发第一个策略](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#using-an-ansible-playbook-to-ensure-that-the-forward-first-policy-is-set-in-idm-dns-global-configuration_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 来确保在 IdM DNS 全局配置中设置了转发第一个策略"){.link}
-   [使用 Ansible playbook 来确保在 IdM DNS
    中禁用了全局转发器](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#using-an-ansible-playbook-to-ensure-that-global-forwarders-are-disabled-in-idm-dns_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 来确保在 IdM DNS 中禁用了全局转发器"){.link}
-   [使用 Ansible playbook 来确保在 IdM DNS
    中禁用了正向和反向查找区的同步](#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#using-an-ansible-playbook-to-ensure-that-synchronization-of-forward-and-reverse-lookup-zones-is-disabled-in-idm-dns_managing-global-dns-configuration-in-idm-using-ansible-playbooks "使用 Ansible playbook 来确保在 IdM DNS 中禁用了正向和反向查找区的同步"){.link}
:::
::: section
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#how-idm-ensures-that-global-forwarders-from-etc-resolv-conf-are-not-removed-by-networkmanager_managing-global-dns-configuration-in-idm-using-ansible-playbooks}IdM 如何确保 NetworkManager 不会删除 /etc/resolv.conf 中的全局转发器 {.title}
:::
安装带有集成 DNS 的身份管理(IdM)，配置 `/etc/resolv.conf`{.literal}
文件指向 `127.0.0.1`{.literal} localhost 地址：
``` literallayout
# Generated by NetworkManager
search idm.example.com
nameserver 127.0.0.1
```
在某些环境中，比如使用 `Dynamic Host Configuration Protocol`{.literal}
(DHCP) 的网络，`NetworkManager`{.literal} 服务可能会恢复对
`/etc/resolv.conf`{.literal} 文件的更改。要使 DNS 配置持久，IdM DNS
安装过程也会以以下方式配置 `NetworkManager`{.literal} 服务：
::: orderedlist
1.  DNS 安装脚本会创建一个
    `/etc/NetworkManager/conf.d/zzz-ipa.conf`{.literal}
    `NetworkManager`{.literal} 配置文件来控制搜索顺序和 DNS 服务器列表：
    ``` literallayout
    # auto-generated by IPA installer
    [main]
    dns=default
    [global-dns]
    searches=$DOMAIN
    [global-dns-domain-*]
    servers=127.0.0.1
    ```
2.  `NetworkManager`{.literal} 服务被重新载入，它总是使用
    `/etc/NetworkManager/conf.d/`{.literal}
    目录中的最后一个文件中的设置创建 `/etc/resolv.conf`{.literal}
    文件。本例中是 `zzz-ipa.conf`{.literal} 文件。
:::
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
不要手动修改 `/etc/resolv.conf`{.literal} 文件。
:::
:::
::: section
::: titlepage
# []{#managing-global-dns-configuration-in-idm-using-ansible-playbooks_working-with-dns-in-identity-management.html#ensuring-the-presence-of-a-dns-global-forwarder-in-idm-using-ansible_managing-global-dns-configuration-in-idm-using-ansible-playbooks}使用 Ansible 确保 IdM 中存在 DNS 全局转发器 {.title}
:::
本节介绍了 Identity Management(IdM)管理员如何使用 Ansible playbook
来确保在 IdM 中存在 DNS 全局转发器。在下例中，IdM 管理员确保在 DNS
服务器中存在一个到 IPv4 地址为 `7.7.9.9`{.literal}，IP v6 地址为
`2001:db8::1:0`{.literal}，端口 `53`{.literal} 的 DNS global forwarder。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 IdM 管理员密码。
:::
::: orderedlist
**步骤**
1.  进入 `/usr/share/doc/ansible-freeipa/playbooks/dnsconfig`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/dnsconfig
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    `server.idm.example.com`{.literal}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  复制 `forwarders-absent.yml`{.literal} Ansible playbook 文件。例如：
    ``` literallayout
    $ cp forwarders-absent.yml ensure-presence-of-a-global-forwarder.yml
    ```
4.  打开 `ensure-presence-a-global-forwarder.yml`{.literal}
    文件进行编辑。
5.  通过设置以下变量来调整文件：
    ::: orderedlist
    1.  将 playbook 的 `name`{.literal} 变量更改为
        `Playbook，以确保在 IdM DNS 中存在全局转发器`{.literal}。
    2.  在 `tasks`{.literal} 部分中，将任务 `name`{.literal} 更改为
        `Ensure the presence of a DNS global forwarder to 7.7.9.9 and 2001:db8::1:0 on port 53`{.literal}。
    3.  在 `ipadnsconfig`{.literal} 部分的 `forwarders`{.literal}
        部分中：
        ::: orderedlist
        1.  将第一个 `ip_address`{.literal} 值更改为全局转发器的 IPv4
            地址： `7.9.9`{.literal}。
        2.  将第二个 `ip_address`{.literal} 值更改为全局转发器的 IPv6
            地址： `2001:db8::1:0`{.literal}。
        3.  验证 `端口值`{.literal} 是否已设置为 `53`{.literal}。
        :::
    4.  将 `状态更改为`{.literal} `present`{.literal}。
        对于当前示例为修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Playbook to ensure the presence of a global forwarder in IdM DNS
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure the presence of a DNS global forwarder to 7.7.9.9 and 2001:db8::1:0 on port 53
        ipadnsconfig:
          forwarders:
            - ip_address: 7.7.9.9
            - ip_address: 2001:db8::1:0
              port: 53
          state: present
    ```
6.  保存这个文件。
7.  运行 playbook: