followed by APECS PKC with 186 milliseconds, and the Cloud ac-
cess control with 262 milliseconds. Note that APECS drastically
reduced the Cloud access control latency, by 50%, despite perform-
ing mutual access control between the users and PEC servers (the
Cloud prototype performs only user authentication and authoriza-
tion). We highlight the simplicity-efficiency trade-off in APECS and
APECS PKC: APECS PKC’s simpler design comes with a higher mu-
tual authentication latency (roughly 50% increased latency), which
is undesirable in many dynamic edge applications.
Table 2: Averaged Latency (msecs) Across Three Approaches
APECS APECS PKC Cloud
Operations
Service Discovery
Symmetric Encryption
ABE Encryption
Request Signing
Network/System Latency
User Token Verification
Edge Token Verification
Request Signature Verification
ABE Decryption
Symmetric Decryption
Total
—
0.7
39.0
35.6
5.8
4.8
—
2.7
33.8
0.5
122.7
69.5
—
—
—
79.5
5.8
31.4
—
—
—
186.1
—
—
—
—
252.0
9.6
—
—
—
—
261.6
Figure 6: Benchmark timing of multi-authority attribute-
based encryption [3] across multiple platforms.
For APECS PKC, we implemented a rudimentary service discov-
ery process, in which the user securely obtains the list of eligible
3Code is available on https://github.com/nsol-nmsu/APECS.
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1416Table 3: APECS Communication Complexity
Provider Reg.
O(1)
O(|P + B|)
O(1)
PEC Server Reg. User Reg.
Service/Data Request/Response User Revocation
O(1)
O(|E|)
PEC Revocation
O(|P + E|)
PEC servers (for a given service) from the base station ahead of
service request. Note, as we concentrate on access control, service
discovery is out of the scope for this paper. In APECS PKC, the
end-to-end latency is composed of service discovery and is dom-
inated by the secure communication between the user and PEC
server (both using TLS connection). Finally, in the cloud-based
access control, the secure communication between the user and
the Cloud is the dominant portion of the authentication latency.
Table 2 includes the averaged timing of each individual operation
in APECS, APECS PKC, and Cloud. The missing values correspond
to operations that are not needed in the corresponding approaches.
We note that the network latency in APECS PKC and Cloud encom-
pass the setup and encryption and decryption in the TLS; no ABE
operation has been used in these two approaches.
(a) APECS
(b) APECS PKC
Figure 8: Access control enforcement throughput for static
and dynamic service requests on two platforms.
Finally, we benchmark the throughput of APECS and APECS PKC
on a single PEC server. We define the throughput as the number
of authentication and authorization operations that a PEC server
can perform in unit time (Figure 8). To eliminate network and com-
munication latency based variances we eliminate them by running
all four components of APECS on the same machine (the one that
was being tested). In this experiment, the user sent 1000 service
requests to the PEC server. Note that the service request processing
does not include the service execution (e.g., image annotation) to
clearly identify the throughput of the access control process.
For APECS, when performing static service requests, the PEC
server engine running on the Desktop was able to process an av-
erage of 71 requests per second while the PEC server engine on
the Handheld processed an average of 36 requests per second (Fig-
ure 8(a)). In performing dynamic service requests, the Desktop
engine averaged 22 requests processed per second while the Hand-
held engine averaged 14 requests processed per second. This was
expected as dynamic service request processing includes MABE en-
cryption and decryption operations while static request processing
involves less compute-intensive cryptographic operations.
APECS PKC processed an average of 16 and 11 static service
requests per second when running on the Desktop and Handheld
devices, respectively (Figure 8(b)). As for dynamic service requests,
APECS PKC processed an average of 14 and 9 requests per sec-
ond for the Desktop and Handheld devices, respectively. Overall,
APECS outperformed APECS PKC both for static and dynamic ser-
vice requests. For static service requests, this result was expected
since APECS does not use MABE encryption and decryption while
APECS PKC uses TLS channel for communication. For dynamic
service requests, despite APECS using costly MABE operations, it
outperformed APECS PKC–indicating MABE operations in APECS
are more efficient than establishing TLS sessions in APECS PKC.
We also assessed APECS communication complexity (Table 3).
The service provider registration process incurs constant commu-
nication complexity as it requires a round trip communication
between the provider and the Cloud. Registering a PEC server re-
quires a round trip communication between the PEC server and
each of the AIAs, leading to O(|P + B|) communication complexity
per PEC server. As per the construction in [3], each PEC server has
to obtain attributes from all AIAs corresponding to the providers.
We note that, in APECS, the number of providers and base stations is
constant. A user registration requires a round trip communication
between the user and the service provider, resulting in constant
communication complexity. Similarly, service request and response
incurs constant communication complexity (we discount the po-
tential of multiple packets being needed as determined by payload
size). A user revocation process involves the delivery of the revoked
token from the Cloud to the PEC servers that offer relevant ser-
vices, resulting in O(|E|) communication complexity. Revoking a
PEC server comprises a round trip communication from the service
provider to the base station, interaction among the AIAs for the
distribution of base station’s new key, and the distribution of new
attributes to the PEC servers that are connected to the base station.
Thus, resulting in O(|P + B|) communication complexity.
8 CONCLUSIONS
In this paper, we proposed, APECS, a distributed access control
mechanism for the dynamic PEC ecosystem. In APECS, the authen-
tication/authorization tasks are delegated to the PEC servers. APECS
utilizes capability-based tokens and multi-authority ABE with an
efficient revocation mechanism that does away with system-wide
re-keying–the major drawback of ABE schemes. We also proposed
APECS PKC, an alternative design suitable when the consumer
and the PEC server can interact synchronously. Evaluation of our
implementations demonstrated the practicality of our mechanisms.
9 ACKNOWLEDGEMENTS
Research supported in part by Intel Labs, US NSF awards #1800088,
#2028797, #1914635, EPSCoR Cooperative agreement #OIA-1757207,
US DoE SETO grant #DE-EE0008774, and the US Federal Aviation
Administration (FAA). Any opinions, findings, and conclusions
or recommendations expressed in this material are those of the
author(s) and do not necessarily reflect the views of the NSF, DoE,
FAA or Intel Corp. We thank Austin Bos for his contribution to
the system implementation. We also thank Dr. Mattijs Jonker for
his helpful shepherding and the anonymous reviewers for their
insightful feedback and suggestions.
Session 5B: PKI and Access Control CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea1417REFERENCES
[1] M. Berman, J. Chase, L. Landweber, A. Nakao, M. Ott, D. Raychaudhuri, R. Ricci,
and I. Seskar. 2014. GENI: A federated testbed for innovative network experiments.
Computer Networks 61 (2014), 5–23.
[2] Ran Canetti. 2001. Universally Composable Security: A New Paradigm for Cryp-
tographic Protocols. In 42nd Annual Symposium on Foundations of Computer
Science, FOCS. IEEE, 136–145.
[3] Melissa Chase and Sherman S. M. Chow. 2009. Improving privacy and security
in multi-authority attribute-based encryption. In Proceedings of the 2009 ACM
Conference on Computer and Communications Security, CCS 2009, Chicago, Illinois,
USA, November 9-13, 2009. ACM, 121–130.
[4] Cisco.
2017.
Cisco Visual Networking
to
Forecast Update,
2016
Index: Global Mo-
2021 White Paper.
bile Data Traffic
http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-
networking-index-vni/mobile-white-paper-c11-520862.html.
Trends
http://www.cisco.com/c/en/us/solutions/collateral/service-provider/visual-
networking-index-vni/vni-hyperconnectivity-wp.html.
Zettabyte
2017.
Era:
The
and Analysis.
[5] Cisco.
[6] Michael W Condry and Catherine Blackadar Nelson. 2016. Using smart edge IoT
devices for safer, rapid response with industry IoT control operations. Proc. IEEE
104, 5 (2016), 938–946.
[7] Hui Cui, Xun Yi, and Surya Nepal. 2018. Achieving scalable access control over
encrypted data for edge computing networks. IEEE Access 6 (2018), 30049–30059.
[8] Kai Fan, Qiang Pan, Junxiong Wang, Tingting Liu, Hui Li, and Yintang Yang.
2018. Cross-domain based data sharing scheme in cooperative edge computing.
In 2018 IEEE International Conference on Edge Computing (EDGE). IEEE, 87–92.
[9] C. Freitag, J. Katz, and N. Klein. 2017. Symmetric-key broadcast encryption: The
multi-sender case. In International Conference on Cyber Security Cryptography
and Machine Learning. Springer, 200–214.
[10] Giulio Grassi, Kyle Jamieson, Paramvir Bahl, and Giovanni Pau. 2017. Parkmaster:
An in-vehicle, edge-based video analytics service for detecting open parking
spaces in urban environments. In Proceedings of the Second ACM/IEEE Symposium
on Edge Computing. IEEE/ACM, 1–14.
[11] Dick Hardt et al. 2012. The OAuth 2.0 authorization framework. Technical Report.
RFC 6749, October.
[12] Ruei-Hau Hsu, Jemin Lee, Tony QS Quek, and Jyh-Cheng Chen. 2018. Reconfig-
urable security: Edge-computing-based framework for IoT. IEEE Network 32, 5
(2018), 92–99.
[13] Kaiqing Huang. 2019. Multi-Authority Attribute-Based Encryption for Resource-
Constrained Users in Edge Computing. In 2019 International Conference on Infor-
mation Technology and Computer Application (ITCA). IEEE, 323–326.
[14] Mingxin Ma, Guozhen Shi, and Fenghua Li. 2019. Privacy-oriented blockchain-
based distributed key management architecture for hierarchical access control in
the IoT scenario. IEEE Access 7 (2019), 34045–34059.
[15] Zhuo Ma, Junwei Zhang, Yongzhen Guo, Yang Liu, Ximeng Liu, and Wei He.
2020. An efficient decentralized key management mechanism for VANET with
blockchain. IEEE Transactions on Vehicular Technology 69, 6 (2020), 5836–5849.
[16] Satyajayant Misra, Reza Tourani, and Nahid Ebrahimi Majd. 2013. Secure content
delivery in information-centric networks: Design, implementation, and analy-
ses. In Proceedings of the 3rd ACM SIGCOMM workshop on Information-centric
networking. ACM, 73–78.
[17] Satyajayant Misra, Reza Tourani, Frank Natividad, Travis Mick, Nahid Ebrahimi
Majd, and Hong Huang. 2017. AccConF: An access control framework for lever-
aging in-network cached data in the ICN-enabled wireless edge. IEEE transactions
on dependable and secure computing 16, 1 (2017), 5–17.
[18] Muhammad Baqer Mollah, Md Abul Kalam Azad, and Athanasios Vasilakos. 2017.
Secure data sharing and searching at the edge of cloud-assisted internet of things.
IEEE Cloud Computing 4, 1 (2017), 34–42.
[19] Aafaf Ouaddah, Anas Abou Elkalam, and Abdellah Ait Ouahman. 2017. To-
wards a novel privacy-preserving access control model based on blockchain
technology in IoT. In Europe and MENA Cooperation Advances in Information and
Communication Technologies. Springer, 523–533.
[20] Yuwen Pu, Chunqiang Hu, Shaojiang Deng, and Arwa Alrawais. 2020. RPEDS: A
Recoverable and Revocable Privacy-Preserving Edge Data Sharing Scheme. IEEE
Internet of Things Journal 7, 9 (2020), 8077–8089.
[21] Tarik Taleb, Konstantinos Samdanis, Badr Mada, Hannu Flinck, Sunny Dutta, and
Dario Sabella. 2017. On multi-access edge computing: A survey of the emerging
5G network edge cloud architecture and orchestration. IEEE Communications
Surveys & Tutorials 19, 3 (2017), 1657–1681.
[22] Reza Tourani, Satyajayant Misra, Travis Mick, and Gaurav Panwar. 2017. Security,
Privacy, and Access Control in Information-Centric Networking: A Survey. IEEE
Communications Surveys & Tutorials (2017).
[23] Reza Tourani, Srikathyayani Srikanteswara, Satyajayant Misra, Richard Chow,
Lily Yang, Xiruo Liu, and Yi Zhang. 2020. Democratizing the Edge: A Pervasive
Edge Computing Framework. arXiv preprint arXiv:2007.00641 1, 1 (2020), 1–7.
[24] Reza Tourani, Ray Stubbs, and Satyajayant Misra. 2018. TACTIC: Tag-based
access control framework for the information-centric wireless edge networks. In
International Conference on Distributed Computing Systems. IEEE, 456–466.
[25] Junjue Wang, Ziqiang Feng, Shilpa George, Roger Iyengar, Padmanabhan Pillai,
and Mahadev Satyanarayanan. 2019. Towards scalable edge-native applications.
In Proceedings of the 4th ACM/IEEE Symposium on Edge Computing. IEEE/ACM,
152–165.
[26] Kaiping Xue, Weikeng Chen, Wei Li, Jianan Hong, and Peilin Hong. 2018. Com-
bining data owner-side and cloud-side access control for encrypted cloud storage.
IEEE Transactions on Information Forensics and Security 13, 8 (2018), 2062–2074.
[27] Kaiping Xue, Peixuan He, Xiang Zhang, Qiudong Xia, David SL Wei, Hao Yue,
and Feng Wu. 2019. A Secure, Efficient, and Accountable Edge-Based Access
Control Framework for Information Centric Networks. IEEE/ACM Transactions
on Networking 27, 3 (2019), 1220–1233.
[28] K. Xue, X. Zhang, Q. Xia, D. Wei, H. Yue, and F. Wu. 2018. SEAF: A secure, efficient
and accountable access control framework for information centric networking.
In Conference on Computer Communications. IEEE, 2213–2221.
[29] Kan Yang, Jobin J Sunny, and Lan Wang. 2018. Blockchain-based decentral-