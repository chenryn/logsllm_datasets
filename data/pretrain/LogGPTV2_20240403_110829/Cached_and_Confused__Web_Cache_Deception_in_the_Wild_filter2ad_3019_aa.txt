# Cached and Confused: Web Cache Deception in the Wild

## Authors
- Seyed Ali Mirheidari, University of Trento
- Sajjad Arshad, Northeastern University
- Kaan Onarlioglu, Akamai Technologies
- Bruno Crispo, University of Trento & KU Leuven
- Engin Kirda, Northeastern University
- William Robertson, Northeastern University

## Abstract
Web cache deception (WCD) is an attack first proposed in 2017, where an attacker tricks a caching proxy into erroneously storing private information transmitted over the Internet, subsequently gaining unauthorized access to that cached data. Given the widespread use of web caches, particularly by content delivery network (CDN) providers, WCD poses a significant risk to a large number of Internet users.

This paper presents the first large-scale study quantifying the prevalence of WCD across 340 high-profile sites in the Alexa Top 5K. Our analysis reveals WCD vulnerabilities that leak private user data and secret authentication and authorization tokens, which can be exploited for damaging web application attacks. We also explore WCD within a scientific framework as an instance of path confusion attacks, demonstrating that variations on the path confusion technique can exploit sites not affected by the original attack. Our findings show that many popular sites remain vulnerable two years after the public disclosure of WCD.

Empirical experiments with popular CDN providers highlight that web caches are not plug-and-play technologies. To mitigate WCD, site operators must adopt a holistic view of their web infrastructure and carefully configure cache settings appropriate for their applications.

## 1. Introduction
Web caches have become an essential component of the Internet infrastructure, used to reduce bandwidth costs and accelerate content delivery. Caching is implemented at multiple stages, including in web browsers, caching proxies, and origin web servers. Content Delivery Network (CDN) providers heavily rely on effective web content caching at their edge servers, which form a massively-distributed overlay network of caching reverse proxies. A recent study estimates that more than 74% of the Alexa Top 1K are served by CDN providers, indicating the central role of CDNs and web caching in the Internet.

While there are technologies for limited caching of dynamically-generated pages, web caching primarily targets static, publicly accessible content. These objects must not contain private or sensitive information, as application-level access control is not enforced at cache servers. Good candidates for caching include frequently accessed images, software and document downloads, streaming media, style sheets, and large static HTML and JavaScript files.

In 2017, Gil introduced web cache deception (WCD), an attack that tricks a web cache into incorrectly storing sensitive content, giving an attacker unauthorized access to that content. This attack gained significant media attention and prompted responses from major web cache and CDN providers. At its core, WCD results from path confusion between an origin server and a web cache, leading to disagreements on the cacheability of a given object. This disagreement can be exploited to trick the web cache into storing non-cacheable objects. Detecting and correcting vulnerable systems is a complex task, requiring careful inspection of the entire caching architecture.

In this paper, we present a large-scale measurement and analysis of WCD over 295 sites in the Alexa Top 5K. We introduce a repeatable and automated methodology to discover vulnerable sites and provide a detailed analysis of our findings. Our results show that many high-profile sites handling sensitive and private data are impacted by WCD. We also discuss additional path confusion methods that maximize the damage potential of WCD and demonstrate their impact in a follow-up experiment over an extended dataset of 340 sites.

To the best of our knowledge, this is the first in-depth investigation of WCD in a scientific framework and at this scale. Our scope goes beyond private data leakage to provide novel insights into the severity of WCD, including the theft of security tokens and advanced attack techniques that elevate WCD vulnerabilities to injection vectors. We perform an empirical analysis of popular CDN providers, documenting their default caching settings and customization mechanisms, and emphasize that mitigating WCD requires a comprehensive examination of a website’s infrastructure.

### Contributions
- We propose a novel methodology to detect WCD-impacted sites at scale, designed to automatically detect WCD in the wild.
- We present findings quantifying the prevalence of WCD in 295 sites among the Alexa Top 5K, providing a detailed breakdown of leaked information types.
- We conduct a follow-up measurement over 340 sites, showing that variations on the path confusion technique can successfully exploit sites not impacted by the original attack.
- We analyze the default settings of popular CDN providers, highlighting that mitigating WCD necessitates a comprehensive examination of a website’s infrastructure.

### Ethical Considerations
We have designed our measurement methodology to minimize the impact on scanned sites and limit the inconvenience to site operators. We followed responsible disclosure principles to notify impacted parties and limited the shared information to minimize the risk of inadvertent damage. Details of the ethical considerations are discussed in Section 3.5.

## 2. Background & Related Work
### 2.1 Web Caches
Web caches are used to reduce the cost of repeatedly transferring heavily used and large web objects. They improve performance by eliminating the need to request objects from the origin server. Web caches are a key component of CDNs, which aim to serve as many requests as possible from their edge servers, offloading the origin servers. The most common targets for caching are static but frequently accessed resources. HTTP/1.1 defines Cache-Control headers to signal how to process transferred objects, but web cache technologies and CDN providers offer configuration options to ignore and override these headers.

### 2.2 Path Confusion
Path confusion occurs when different communication endpoints and man-in-the-middle entities interpret URLs in unexpected and potentially unsafe ways. The widespread use of clean URLs (RESTful URLs) exacerbates this issue, as they abstract away from a web server’s internal organization of resources. For example, a URL like `example.com/index/img/pic.jpg` might be interpreted as a request for an image file, but the web server may internally map it to `example.com/index.php?p1=img&p2=pic.jpg`, returning the contents of `index.php` with an HTTP 200 status code. This can lead to misinterpretation and potential security issues.

### 2.3 Web Cache Deception
Web cache deception (WCD) is a recently discovered manifestation of path confusion. An attacker crafts a URL that satisfies two properties:
1. The URL is interpreted by the web server as a request for a non-cacheable page with private information, triggering a successful response.
2. The same URL is interpreted by an intermediate web cache as a request for a static object matching the URL, leading to the erroneous storage of private data.

Gil demonstrated the impact of WCD with a practical attack against PayPal in 2017. This paper is the first academic exploration of WCD, providing a large-scale analysis of its spread and severity.