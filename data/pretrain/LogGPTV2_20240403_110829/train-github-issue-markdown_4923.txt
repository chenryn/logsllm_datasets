[x ] bug report => search github for a similar issue or PR before submitting  
[ ] feature request  
[ ] support request => Please do not submit support request here, instead see
https://github.com/angular/angular/blob/master/CONTRIBUTING.md#question
    I have separated my application into `js` directory where all my generated `.js` files are
     and an `app` directory where I keep my `.ts`, `.html` and `.css` files together.
    For the AoT compilation I use the `tsconfig.aot.json`
        {
          "compilerOptions": {
            "target": "es2015",
            "module": "es2015",
            "moduleResolution": "node",
            "declaration": false,
            "removeComments": true,
            "noLib": false,
            "emitDecoratorMetadata": true,
            "experimentalDecorators": true,
            "lib": ["es6", "es2015", "dom"],
            "sourceMap": true,
            "pretty": true,
            "allowUnreachableCode": false,
            "allowUnusedLabels": false,
            "noImplicitAny": true,
            "noImplicitReturns": true,
            "noImplicitUseStrict": false,
            "noFallthroughCasesInSwitch": true,
            "outDir": "js",
            "typeRoots": [
              "./node_modules/@types",
              "./node_modules"
            ],
            "types": [
            ]
          },
          "files": [
            "app/main.ts"
          ],
          "exclude": [
            "node_modules",
            "js",
            "app"
          ],
          "compileOnSave": false
        }
    and the script: `"ngc": "ngc -p tsconfig.aot.json && npm run copy \"app/*\" \"compiled\" "`
    Because I have seprated my app into `js` and `app` folders I have to use it like this: 
         @Component({
             moduleId: module.id.replace("/js/", "/app/"),
             selector: 'escl-mainbar',
             templateUrl: './mainbar.component.html'
         })
        export class MainbarComponent {
    But when I try to run the script it gives me this error:
        > angular-quickstart@1.0.0 ngc C:\dev_escal\project\escal\ui\src\main\webapp
        > ngc -p tsconfig.aot.json && npm run copy "app/*" "compiled"
        Error encountered resolving symbol values statically. Calling function 'module', function calls are not supported. 
    Consider replacing the function or lambda with a reference to an exported function,
     resolving symbol MainbarComponent in C:/dev_escal/project/escal/ui/src/main/webapp/app/mainbar/mainbar.component.ts, resolving symbol
         MainbarComponent in C:/dev_escal/project/escal/ui/src/main/webapp/app/mainbar/mainbar.component.ts
    I tried with using:
     export function moduleId() {
         return module.id.replace("/js/", "/app/");
     }
     @Component({
         moduleId: moduleId(),
         selector: 'escl-mainbar',
         templateUrl: './mainbar.component.html'
     })
    export class MainbarComponent { }
    but that still gives me  Error encountered resolving symbol values statically....
    I'm using `@angular/comiler-clie` and the other stuff of version 2.4.6 and typescript version is 2.1.5.
    Any idea where, the problem is or if it is really a bug.