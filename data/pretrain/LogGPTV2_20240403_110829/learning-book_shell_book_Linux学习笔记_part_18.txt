### 优化后的文本

---

#### Linux 系统性能监控

**系统信息**
- **内核版本**: Linux 2.6.18-164.el5
- **主机名**: server.sys.com
- **日期**: 01/04/2010

**CPU 使用情况 (mpstat 命令)**
- **采样时间间隔**: 3 秒
- **采样次数**: 10 次

| 时间 | CPU | %user | %nice | %sys | %iowait | %irq | %soft | %steal | %idle | intr/s |
|------|-----|-------|-------|------|---------|------|-------|--------|-------|--------|
| 10:17:44 PM | all | 0.02 | 0.00 | 0.26 | 0.21 | 0.01 | 0.05 | 0.00 | 99.37 | 1005.20 |
| 10:17:58 PM | all | 13.12 | 0.00 | 20.93 | 0.00 | 1.83 | 9.80 | 0.00 | 54.32 | 2488.08 |
| 10:18:01 PM | all | 10.82 | 0.00 | 19.30 | 0.83 | 1.83 | 9.32 | 0.00 | 57.90 | 2449.83 |
| 10:18:04 PM | all | 10.95 | 0.00 | 20.40 | 0.17 | 1.99 | 8.62 | 0.00 | 57.88 | 2384.05 |
| 10:18:07 PM | all | 10.47 | 0.00 | 18.11 | 0.00 | 1.50 | 8.47 | 0.00 | 61.46 | 2416.00 |
| 10:18:10 PM | all | 11.81 | 0.00 | 22.63 | 0.00 | 1.83 | 11.98 | 0.00 | 51.75 | 2210.60 |
| 10:18:13 PM | all | 6.31 | 0.00 | 10.80 | 0.00 | 1.00 | 5.32 | 0.00 | 76.58 | 1795.33 |
| 10:18:19 PM | all | 1.75 | 0.00 | 3.16 | 0.75 | 0.25 | 1.25 | 0.00 | 92.85 | 1245.18 |
| 10:18:22 PM | all | 11.94 | 0.00 | 19.07 | 0.00 | 1.99 | 8.29 | 0.00 | 58.71 | 2630.46 |
| 10:18:25 PM | all | 11.65 | 0.00 | 19.30 | 0.50 | 2.00 | 9.15 | 0.00 | 57.40 | 2673.91 |
| 10:18:28 PM | all | 11.44 | 0.00 | 21.06 | 0.33 | 1.99 | 10.61 | 0.00 | 54.56 | 2369.87 |

**平均值**
- **CPU**: all
- **%user**: 9.27
- **%nice**: 0.00
- **%sys**: 16.18
- **%iowait**: 0.30
- **%irq**: 1.50
- **%soft**: 7.64
- **%steal**: 0.00
- **%idle**: 65.11
- **intr/s**: 2173.54

---

### pmap 命令

**pmap 命令** 可以显示进程的内存映射，有助于找出造成内存瓶颈的原因。

**示例**
```bash
# pmap -d PID
# 显示 PID 为 47394 的进程的内存信息
# pmap -d 47394
```

**输出样例**
```
47394: /usr/bin/php-cgi
Address       Kbytes  Mode   Offset         Device          Suddew
0000000000400000    2584  r-x--  0000000000000000  008:00002  php-cgi
0000000000886000     140  rw--  000000000286000  008:00002  php-cgi
00000000008a9000      52  rw--  00000000008a9000  000:00000  [ anon ]
0000000000aa8000      76  rw-   00000000002a8000  008:00002  php-cgi
000000000f678000    1980  rw---  00000000f678000  000:00000  [anon ]
000000314a600000     112  r-x--  0000000000000000  008:00002  Id-2.5.s0
000000314a81b000       4  r-    000000000001b000  008:00002  Id-2.5.s0
000000314a81c000       4  rw--  000000000001c000  008:00002  Id-2.5.s0
000000314aa00000    1328  r-x--  0000000000000000  008:00002  libc-2.5.s0
000000314ab4c000    2048  ----  000000000014c000  008:00002  libc-2.5.so
00002af8d48fd000       4  rw--  0000000000006000  008:00002  xsl.so
00002af8d490c000      40  r-x--  0000000000000000  008:00002  libnss_files-2.5.s0
00002af8d4916000    2044  --    000000000000a000  008:00002  libnss_files-2.5.s0
00002af8d4b15000       4  r--   0000000000009000  008:00002  libnss_files-2.5.so
00002af8d4b16000       4  rw--  000000000000a000  008:00002  libnss_files-2.5.so
00002af8d4b17000    768000  rw-s  0000000000000000:00009  zero (deleted)
00007fffc95fe000      84  rw--  00007ffffea000  000:00000  [ stack ]
ffffffff600000     8192  -     000000000000000  000:00000  [ anon ]

mapped: 933712K
writeable/private: 4304K
shared: 768000K
```

**解释**
- **mapped**: 内存映射所占空间大小
- **writeable/private**: 私有地址空间大小
- **shared**: 共享地址空间大小

---

### sar 命令

**sar** 是一个强大的性能监控工具，可以输出几乎所有的 Linux 系统工作数据。sar 命令在 `sysstat` 包中提供。示例中使用的是 `sysstat` 版本 5.0.5，这是稳定的最新版本之一。关于版本和下载信息，请访问 sysstat 主页: [http://perso.wanadoo.fr/sebastien.godard/](http://perso.wanadoo.fr/sebastien.godard/)

**功能**
- 显示 CPU、运行队列、磁盘 I/O、分页（交换区）、内存、CPU 中断、网络等性能数据。
- 创建数据文件。每个 Linux 系统都应通过 cron 作业收集 sar 数据，以提供历史性能信息。

**常用命令格式**
```bash
sar [options] [-A] [-o file] t [n]
```

- **t**: 采样间隔（必须参数）
- **n**: 采样次数（可选，默认为 1）
- **-o file**: 将结果以二进制格式存放在文件中
- **options**: 常用选项
  - **-A**: 所有报告的总和
  - **-U**: CPU 利用率
  - **-V**: 进程、inode、文件和锁表状态
  - **-d**: 硬盘使用报告
  - **-r**: 未使用的内存页面和硬盘块
  - **-g**: 串口 I/O 情况
  - **-b**: 缓冲区使用情况
  - **-a**: 文件读写情况
  - **-C**: 系统调用情况
  - **-R**: 进程活动情况
  - **-Y**: 终端设备活动情况
  - **-W**: 系统交换活动

**示例**
```bash
[oracle@Test ~]$ sar -u -o aixi 60 5
Linux 2.6.18-194.el5 (Test.linux.com)
06/22/10
13:41:25
CPU %user %nice %system %iowait %steal %idle
13:42:25 all 0.28 0.00 0.21 1.17 0.00 98.34
13:43:25 all 0.23 0.00 0.16 1.14 0.00 98.46
13:44:25 all 0.27 0.00 0.21 1.40
```

**字段说明**
- **CPU**: CPU 编号
- **%user**: 用户进程占用的时间百分比
- **%nice**: 运行正常进程所花的时间
- **%system**: 内核模式下运行进程所花的时间百分比
- **%iowait**: 处理器等待 I/O 完成的时间
- **%idle**: 无进程执行的时间

这些字段与 top 报告中的 CPU 信息内容相同。

---

希望这些优化后的文本能更清晰、连贯和专业地传达所需的信息。