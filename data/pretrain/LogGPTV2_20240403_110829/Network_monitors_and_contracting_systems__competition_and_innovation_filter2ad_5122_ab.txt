q
v
.  For path 
**
...
, the quality is given by 
q
nv
.  The * 
q
v
1
2
ﬁQu :
When data flows along a complete path from S to D, the source and 
destination, generally regarded as a single player, enjoy utility given 
by a function of the path quality, 
(cid:1).  Each node along the 
path, i, experiences some cost of transmission, ci. 
2.1  Game Dynamics 
Ultimately,  we  are  most  interested  in  policies  that  promote 
innovation on the network.  In this study, we will use innovation in 
a fairly general sense.  Innovation describes any investment by an 
ISP  that  alters  its  quality  vector  so  that  at  least  one  potential  data 
path offers higher utility.  This includes researching a new routing 
algorithm  that  decreases  the  amount  of  jitter  users  experience.    It 
also  includes  deploying  a  new  protocol  that  supports  quality  of 
service.    Even  more  broadly,  buying  new  equipment  to  decrease 
latency may also be regarded as innovation.  Innovation 
may  be  thought  of  as  the  micro-level  process  by  which 
the network evolves. 
Our analysis is limited in one crucial respect:  We focus 
on inventions that a single ISP can implement to improve 
the end-user experience.  This excludes technologies that 
require adoption by all ISPs on the network to function.  
Because  such  technologies  do  not  create  a  competitive 
advantage,  rewarding  them  is  difficult  and  may  require 
intellectual property or some other market distortion.  We 
defer this interesting topic to future work. 
At first, it may seem unclear how a large-scale distributed process 
such  as  innovation  can  be  influenced  by  mechanical  details  like 
networks  monitors.    Our  model  must  draw  this  connection  in  a 
realistic fashion. 
The  rate  of  innovation  depends  on  the  profits  that  potential 
innovators  expect  in  the  future.    The  reward  generated  by  an 
invention  must  exceed  the  total  cost  to  develop  it,  or  the  inventor 
will not rationally invest.  This reward, in turn, is governed by the 
competitive environment in which the firm operates, including the 
process by which firms select prices, and agree upon contracts with 
each  other.    Of  course,  these  decisions  depend  on  how  routes  are 
established,  and  how  contracts  determine  actual  monetary 
exchanges. 
Any model of network innovation must therefore relate at least three 
distinct processes: innovation, competition, and routing.  We select 
a game dynamics that makes the relation between these processes as 
explicit as possible.  This is represented schematically in Figure 2. 
2-=t
The innovation stage occurs first, at time 
.  In this stage, each 
agent decides whether or not to make research investments.  If she 
chooses  not  to,  her  quality  remains  fixed.    If  she  makes  an 
investment,  her  quality  may  change  in  some  way.    It  is  not 
necessary  for  us  to  specify  how  such  changes  take  place.    The 
agents’  choices  in  this  stage  determine  the  vector  of  qualities,  q, 
common knowledge for the rest of the game.   
1-=t
Next, at time 
, agents participate in the competition stage, in 
which  contracts  are  agreed  upon.    In  today’s  industry,  these 
contracts include prices for transit access, and peering agreements.  
Since access is provided on a best-effort basis, a transit agreement 
can simply be represented by its price.  Other contracting systems 
we will explore will require more detail. 
0=t
Finally,  beginning  at 
,  firms  participate  in  the  routing  stage.  
Other  research  has  already  employed  repeated  games  to  study 
routing, for example [1], [12].  Repetition reveals interesting effects 
not  visible  in  a  single  stage  game,  such  as  informal  collusion  to 
elevate prices in [12].  We use a game in continuous time in order to 
study  such  properties.    For  example,  we  will  later  ask  whether  a 
player will maintain higher quality than her contracts require, in the 
hope of keeping her customer base or attracting future customers. 
Our dynamics reflect the fact that ISPs make innovation decisions 
infrequently.    Although  real  firms  have  multiple  opportunities  to 
innovate,  each  opportunity  is  followed  by  a  substantial  length  of 
time in which qualities are fixed.  The decision to invest focuses on 
how the firm’s new quality will improve the contracts it can enter 
into.    Hence,  our  model  places  innovation  at  the  earliest  stage, 
attempting  to  capture  a  single  investment  decision.    Contracting 
Innovation Game  Competition Game 
Innovation 
stage 
t = -2 
Qualities  
 (q) 
Competition 
stage 
t = -1 
Routing Game 
Contracts 
 (prices) 
Routing 
stage 
     t ˛ [ 0 , (cid:1)) 
    Profits 
Figure 2: Game Dynamics 
decisions  are  made  on  an  intermediate  time  scale,  thus  appearing 
next in the dynamics.  Routing decisions are made very frequently, 
mainly  to  maximize  immediate  profit  flows,  so  they appear in the 
last stage. 
Because  of  this  ordering,  our  model  does  not  allow firms to route 
strategically to affect future innovation or contracting decisions.  In 
opposition, Afergan and Wroclawski argue that contracts are formed 
in  response  to  current  traffic  patterns,  in  a  feedback  loop  [2].  
Although we are sympathetic to their observation, such an addition 
would  make  our  analysis  intractable.    Our  model  is  most  realistic 
when contracting decisions are infrequent. 
Throughout  this  paper,  our  solution  concept  will  be  a  subgame 
perfect equilibrium (SPE).  An SPE is a strategy point that is a Nash 
equilibrium  when  restricted  to  each  subgame.    Three  important 
subgames  have  been  labeled  in  Figure  2.    The  innovation  game 
includes all three stages.  The competition game includes only the 
competition stage and the routing stage.  The routing game includes 
only the routing stage. 
An SPE guarantees that players are “forward-looking.”  This means, 
for example, that in the competition stage, firms must act rationally, 
maximizing their expected profits in the routing stage.  They cannot 
carry out threats they made in the innovation stage if it lowers their 
expected payoff. 
Our schematic already suggests that the routing game is crucial for 
promoting  innovation.    To  support  innovation,  the  competition 
game  must  somehow  reward  ISPs  with  “high”  quality.    But  that 
means that the routing game must tend to route to nodes with high 
quality.  If the routing game always selects the lowest-cost routes, 
for example, innovation will not be supported.  We will support this 
observation with analysis later.  
2.2  The Routing Game 
The  routing  game  proceeds  in  continuous  time,  with  all  players 
discounting  by  a  common  factor,  r.    The  outputs  from  previous 
stages,  q  and  the  set  of  contracts,  are  treated  as  exogenous 
parameters  for  this  game.    For  each  time 
,  each  node  must 
select a next hop to route data to.  Data flows across the resultant 
path, causing utility flow to S and D, and a flow cost to the nodes on 
the path, as described above.  Payment flows are also created, based 
on the contracts in place. 
0‡t
Relating  our  game  to  the  familiar  repeated  prisoners’  dilemma, 
imagine that we are trying to impose a high quality, but costly path.  
As we argued loosely above, such paths must be sustainable in order 
to support innovation.  Each ISP on the path tries to maximize her 
own payment, net of costs, so she may not want to cooperate with 
our  plan.    Rather,  if  she  can  find  a  way  to  save  on  costs,  at  the 
expense of the high quality we desire, she will be tempted to do so.  
Analogously to the prisoners’ dilemma, we will call such a decision 
cheating.  A little more formally, 
Cheating  refers  to  any  action  that  an  ISP  can  take,  contrary  to 
some  target  strategy  point  that  we  are  trying  to  impose,  that 
enhances her immediate payoff, but compromises the quality of 
the data path. 
One type of cheating relates to the data path.  Each node on the path 
has to pay the next node to deliver its traffic.  If the next node offers 
high  quality  transit,  we  may  expect  that  a  lower quality node will 
offer a lower price.  Each node on the path will be tempted to route 
to  a  cheaper  next  hop,  increasing  her  immediate  profits,  but 
lowering the path quality.  We will call this type of action cheating 
in route. 
Another possibility we can model, is that a node finds a way to save 
on  its  internal  forwarding  costs,  at the expense of its own quality.  
We will call this cheating internally to distinguish it from cheating 
in route.  For example, a node might drop packets beyond the rate 
required for congestion control, in order to throttle back TCP flows 
and  thus  save  on  forwarding  costs  [3].    Alternately,  a  node 
employing  quality  of  service  could  give  high  priority  packets  a 
lower  class  of  service,  thus  saving  on  resources  and  perhaps 
allowing itself to sell more high priority service. 
If  either  cheating  in  route  or  cheating  internally  is  profitable,  the 
specified path will not be an equilibrium.  We assume that cheating 
can never be caught instantaneously.  Rather, a cheater can always 
enjoy  the  payoff  from  cheating  for  some  positive  time,  which  we 
label  0t
.  This includes the time for other players to detect and react 
to  the  cheating.    If  the  cheater  has  a  contract  which  includes  a 
customer lock-in period,  0t
 also includes the time until customers 
are  allowed  to  switch  to  a  new  ISP.    As  we  will  see  later,  it  is 
socially beneficial to decrease  0t
, so such lock-in is detrimental to 
welfare. 
is  a  fundamental  obstacle 
3.  PATHOLOGIES OF A LOW-
ACCOUNTABILITY NETWORK 
In order to motivate an exploration of monitoring systems, we begin 
in  this  section  by  considering  a  network  with  a  poor  degree  of 
accountability, modeled after today’s Internet.  We will show how 
the  lack  of  monitoring  necessarily  leads  to  poor  routing  and 
diminishes  the  rate  of  innovation.    Thus,  the  network’s  lack  of 
accountability 
these 
pathologies. 
3.1  Accountability in the Current Internet 
First,  we  reflect  on  what  accountability  characteristics  the  present 
Internet  has.    Argyraki,  et  al.,  point  out  that  end  hosts  are  given 
minimal  information  about  packet  drops  [3].    Users  know  when 
drops occur, but not where they occur, nor why.  Dropped packets 
may  represent  the  innocent  signaling  of  congestion,  or,  as  we 
mentioned above, they may be a form of cheating internally.  The 
problem is similar for other dimensions of quality, or in fact more 
acute.  Finding an ISP that gives high priority packets a lower class 
of service, for example, is further complicated by the lack of even 
basic diagnostic tools. 
to  resolving 
In fact, it is similarly difficult to identify an ISP that cheats in route.  
Huston notes that Internet traffic flows do not always correspond to 
routing  information  [8].    An  ISP  may  hand  a  packet  off  to  a 
neighbor  regardless  of  what  routes  that  neighbor  has  advertised.  
Furthermore,  blocks  of  addresses  are  summarized  together  for 
distant  hosts,  so  a  destination  may  not  even  be  resolvable  until 
packets are forwarded closer. 
One might argue that diagnostic tools like ping and traceroute can 
identify cheaters.  Unfortunately, Argyraki, et al., explain that these 
tools only reveal whether probe packets are echoed, not the fate of 
past packets [3].  Thus, for example, they are ineffective in detecting 
low-frequency  packet  drops. 
  Even  more  fundamentally,  a 
sophisticated  cheater  can  always  spot  diagnostic  packets  and  give 
them special treatment. 
As  a  further  complication,  a  cheater  may  assume  different  aliases 
for diagnostic packets arriving over different routes.  As we will see 
below,  this  gives  the  cheater  a  significant  advantage  in  escaping 
punishment  for  bad  behavior,  even  if  the  data  path  is  otherwise 
observable. 
3.2  Modeling Low-Accountability 
As the above evidence suggests, the current industry allows for very 
little  insight  into  the  behavior  of  the  network.    In  this  section,  we 
attempt  to  capture  this  lack  of  accountability  in  our  model.    We 
begin  by  defining  a  monitor,  our  model  of  the  way  that  players 
receive external information about network behavior, 
A monitor is any distributed algorithmic mechanism that runs on 
the network graph, and outputs, to specific nodes, informational 
statements about current or past network behavior. 
We assume that all external information about network behavior is 
mediated in this way.  The accountability properties of the Internet 
can be represented by the following monitors: 
E2E (End to End):  A monitor that informs S/D about what the 
total  path  quality  is  at  any  time  (this  is  the  quality  they 
experience). 
ROP (Rest of Path): A monitor that informs each node along the 
data  path  what  the  quality  is  for  the  rest  of  the  path  to  the 
destination. 
PRc  (Packets  Received):  A  monitor  that  tells  nodes  how  much 
data  they  accept  from  each  other,  so  that  they  can  charge  by 
volume.  It is important to note, however, that this information is 
aggregated  over  many  source-destination  pairs.    Hence,  for  the 
sake of realism, it cannot be used to monitor what the data path is. 
Players cannot measure the qualities of other, single nodes, just the 
rest of the path.  Nodes cannot see the path past the next hop.  This 
last assumption is stricter than needed for our results.  The critical 
ingredient is that nodes cannot verify that the path avoids a specific 
hop.  This holds, for example, if the path is generally visible, except 
nodes can use different aliases for different parents.  Similar results 
also  hold  if  alternate  paths  always  converge  after  some  integer 
number, m, of hops. 
It is important to stress that E2E and ROP are not the contractible 
monitors  we  described  in  the  introduction  –  they  do  not  generate 
proofs.    Thus,  even  though  a  player  observes  certain  information, 
she  generally  cannot  credibly  share  it  with  another  player.    For 
example,  if  a  node  after  the  first  hop  starts  cheating,  the  first  hop 
will detect the sudden drop in quality for the rest of the path, but the 
first  hop  cannot  make  the  source  believe  this  observation  –  the 
source will suspect that the first hop was the cheater, and fabricated 
the claim against the rest of the path.  
To show that this is true, we first need the following lemma, which 
will establish the difficulty of punishing nodes in the network. 
Typically, E2E and ROP are envisioned as algorithms that run on a 
single node, and listen for packet echoes.  This is not the only way 
that they could be implemented, however; an alternate strategy is to 
aggregate  quality  measurements  from  multiple  points  in  the 
network.    These  measurements  can  originate  in  other  monitors, 
located at various ISPs.  The monitor then includes the component 
monitors as well as whatever mechanisms are in place to motivate 
nodes to share information honestly as needed.  For example, if the 
source  has  monitors  that  reveal  the  qualities  of  individual  nodes, 
they  could  be  combined  with  path  information  to  create  an  ROP 
monitor. 
Since  we  know  that  contracts  only  accept  proofs  as  input,  we can 
infer  that  payments  in  this  environment  can  only  depend  on  the 
number  of  packets  exchanged  between  players.    In  other  words, 
contracts are best-effort.  For the remainder of this section, we will 
assume that contracts are also linear – there is a constant payment 
flow  so  long  as  a  node  accepts  data,  and  all  conditions  of  the 
contract are met.  Other, more complicated tariffs are also possible, 
and  are  typically  used  to  generate  lock-in.    We  believe  that  our 
parameter t0 is sufficient to describe lock-in effects, and we believe 
that the insights in this section apply equally to any tariffs that are 
bounded  so  that  the  routing  game  remains  continuous  at  infinity.  
Restricting attention to linear contracts allows us to represent some 
node i’s contract by its price, pi. 
Because we further know that nodes cannot observe the path after 
the  next  hop,  we  can  infer  that  contracts  exist  only  between 
neighboring nodes on the graph.  We will call this arrangement of 
contracts  bilateral.    When  a  competition  game  exclusively  uses 
bilateral  contracts,  we  will  call  it  a  bilateral  contract  competition 
game. 
We first focus on the routing game and ask whether a high quality 
route can be maintained, even when a low quality route is cheaper.  
Recall  that  this  is  a  requirement  in  order  for  nodes  to  have  any 
incentive to innovate.  If nodes tend to route to low price next hops, 
regardless of quality, we say that the network is commoditized.  To 
measure  this  tendency,  we  define  an  index  of  commoditization  as 
follows: 
=
For  a  node  on  the  data  path,  i,  define  its  quality  premium, 
d
,  where  pj  is  the  flow  payment  to  the  next  hop  in 
equilibrium, and pmin is the price of the lowest cost next hop. 
minp
-
p
i
j
j
/
. 
p
d
-
-
)
c
i
p
i
Definition:  The  index  of  commoditization,  CI
,  is  the  average, 
over each node on the data path, i, of i’s flow profit as a fraction 