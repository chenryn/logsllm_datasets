  * I have searched the issues of this repository and believe that this is not a duplicate.
## Expected Behavior
On the server :  
The classname generation should occur once
On the client:  
The classname generation should occur once
Both classnames generation should match
#### ===========
I should be able to avoid using MuiThemeProvider at the root of my app while
still be able to disable classname generation
I should be able to use MUI on a route and not on another
disabling classname generation should be for the whole tree, even if I got
multiple sub MuiThemeProviders
## Current Behavior
On the server :  
The classname generation occur twice  
The first one when using apollo's getDataFromTree  
The second one when using reactDOMServer's renderToString
On the client:  
The classname generation occur once, and doesn't match the one made by the
server
The client classname generation matches the first server classname generation,
but the classnames rendered on the react components are thoses from the
servers's second classname generation
This is because to disable classname generation on one of the renders, I am
forced to use MuiThemeProvider at the root of the tree, so i can dynamically
pass "disableStylesGeneration"
## Concerns
But what if I dont want to have MuiThemeProvider at the root of my App ?  
In the most cases, the visitor will only hit the home page, so no need to make
the server render an useless component  
Also, what if I got the multiple MuiThemeProvider pattern ?
## Steps to Reproduce (for bugs)
I made a repository to illustrate the problem
https://github.com/Aetherall/MUI-issue
## Context ( based on https://github.com/Aetherall/MUI-issue )
I got a SSR app with two Pages  
Home : No MUI  
Dashboard: MUI  
Multiple: MUI - Multiple Nested Providers
I don't want to use MuiThemeProvider at the root of the App, because it would
mean useless execution for the majority of the visitors, which only visit Home
## Idea
The solution would be to make MuiThemeProvider get the
"disableStylesGeneration" from context, and use that if no props are provided  
Then, we just have to make a component which takes a disable bool prop  
The component just inject the disableStylesGeneration value in the context
depending on the value of his disable prop
Tech | Version  
---|---  
Material-UI | ^1.0.0-beta.31  
React | ^16.2.0  
react-jss | ^8.2.1