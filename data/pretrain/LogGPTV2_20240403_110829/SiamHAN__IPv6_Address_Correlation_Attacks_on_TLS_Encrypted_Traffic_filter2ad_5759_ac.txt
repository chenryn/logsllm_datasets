L = Y · D2 + (1−Y ){max(0,m− D)}2,
(9)
where Y are the labels of the input samples, margin m is a
hyperparameter to control the maximum distance that can be
considered to update the network. Furthermore, the network
parameters are shared in the pairwise network architecture,
which focuses on the input difference and learns the similarity.
5 Experiment Setup and Implementation
This section discusses our dataset collection and composi-
tion, compared baselines, evaluation metrics, and the model
implementation.
5.1 Data Collection
We passively monitored the IPv6 user trafﬁc from March
to July 2018 on China Science and Technology Network
(CSTNET) and collect an extensive user dataset for attack
experiments. We intend to utilize persistent HTTP plaintext
cookies to label the TLS trafﬁc of the addresses that leak these
cookies. This situation comes from that these users accessed
some websites with HTTPS deployment and used the same
address to access some other websites without HTTPS de-
ployment during our trafﬁc monitoring. Therefore, we mainly
collected 5-month HTTP and TLS trafﬁc to build the ground
truth dataset. Firstly, we searched persistent cookies used con-
tinuously during the monitoring period through the Cookie
ﬁeld in the HTTP plaintext to label the frequently transform-
ing client addresses, which obtains considerable address lists
corresponding to unique cookies. Note that we only record
the persistent cookies that are generated on the ﬁrst day and
continuously used during the observation. We do not consider
new cookies that appear during the monitoring period to pre-
vent biases from the accuracy of user labeling. Secondly, since
a user usually generates multiple cookies, we aggregated the
lists with the same addresses to acquire unique IPv6 HTTP
users and their client addresses. Finally, we searched for the
communication records of these addresses in the TLS trafﬁc,
thus obtaining encrypted communication data of 1.7k users
and 2.6k addresses generated by them. Since SIAMHAN re-
quires pairwise client address knowledge graphs as input, we
combine any two addresses into pairs in the training, valida-
tion, or test set. In addition, we generate the correlation labels
of the pair samples according to their user labels, which re-
sults in 1.5M pair samples. The correlation label is 1 when
the two addresses belong to the same user. Otherwise, the
correlation label is 0.
5.2 Collection Ethics
To protect user privacy from being exposed in our attack exper-
iments, we anonymize all addresses collected in our dataset
with 2001:db8::/32 documentation reserved preﬁx according
to RFC 3849 [23]. All the plaintext cookies for user labeling
are encrypted due to our anonymization work. We did not
over-explore data involving personal information based on the
Internet measurement standard during the trafﬁc monitoring
period. We design a detailed exit mechanism to remove user
trafﬁc and record only necessary trafﬁc characteristics used
in our experiments. Therefore, our attack experiments are per-
formed to correlate the users with virtualized user IDs rather
than linking to real-world individuals. We further guarantee
that our measurements do not disrupt or harm evaluation tar-
gets. Our work has been approved by our institutional ethics
review body to ensure ethical soundness and justiﬁcation.
5.3 Dataset
We evaluate SIAMHAN on the real-world dataset collected
through 5 months of trafﬁc monitoring. To indicate the prac-
ticality of the attack, we provide a deep eye on the dataset
4336    30th USENIX Security Symposium
USENIX Association
Table 3: The analysis of the 5-month real-world user dataset with 4 dimensions including the top ASes of client addresses, the
top OSes of user devices, the top SNI accessed by users, and the prevalence of the TLS ﬁelds used in the paper. The prevalence
of Record version and Cipher suites are shown as the percent of the ﬁeld in ClientHello/ ServerHello.
AS Name
CSTNET
China Unicom
CNGI-CERNET2
CERNET
Reliance Jio
Cloudﬂare
PKU6-CERNET2
TSINGHUA6
ZSU6-CERNET
SNI
%Hits Device OS %Hits
78.6% Windows
10.1% Android
4.0%
2.4%
1.6%
0.8%
0.5%
0.5%
0.4%
iOS
Linux
Mac OS X
BlackBerry
Chrome OS
Symbian OS
Firefox OS
%Hits TLS Field
17.9% Record version
11.6% Client version
11.2% Server version
*.microsoft.com
Cipher suites
*.gstatic.com
4.8%
Compression
*.macromedia.com 3.3%
SNI
2.4%
*.cloudﬂare.com
Algorithm ID
1.9%
*.2mdn.net
*.xboxlive.com
1.6%
Issuer
Subject
1.2%
*.xhcdn.com
63.7% *.google.com
23.7% *.adobe.com
6.2%
5.0%
1.3%
0.1%
0.1%
0.1%
0.1%
%Hits
93.1%/ 93.9%
93.1%
93.9%
93.1%/ 93.9%
93.1%
93.1%
78.4%
78.4%
78.4%
Table 4: The average number of meta-information per knowledge graph with 1-month background knowledge and the statistics
of the dataset with a time-based split evaluated in most experiments of the paper.
Meta-Path Φ Relations (A-B)
SCS
FCF
FSF
Client-Server
Client-Fingerprints
Server-Fingerprints
Number of A Number of B Entity
1.0
1.0
5.4
5.4
3.8
41.3
User
Sample Pair
Knowledge
Training Validation Test
0.5k
1.0k
0.2M
1.2M
3 months
1 month
0.2k
0.1M
1 month
composition and discuss the feasibility of the experiment.
Basic Composition. After a long-time of data collection,
we analyze the basic dataset composition in Table 3. Results
show that the dataset keeps a good variation to evaluate the
attack model. (1) User Source. We ﬁrst analyze the top ASes
and the percent of addresses within each. During the observa-
tion, in addition to the main source of CSTNET, the collected
users come from diverse IPv6 networks, including mobile net-
works (e.g., China Unicom), CDN networks (e.g., Cloudﬂare),
and university networks (e.g., PKU6-CERNET2). (2) Client
Device. The users are labeled by the HTTP plaintext in our
dataset. Thus, we additionally analyze their HTTP user-agent
to infer their device OSes. Results indicate that IPv6 users
are using multiple types of devices during the monitoring. (3)
Online Habit. Considering the top SNI accessed by users,
although the top three domains have the largest number of
visits, the access rate of each domain is not high, which indi-
cates that IPv6 users maintain a wide range of online habits
and complex behaviors in our dataset.
Graph Samples. (1) Meta-information. To better under-
stand the composition of the meta-information in a knowledge
graph, we show the statistics of the knowledge graph built
for each client address with 1-month background knowledge
in Table 4. Since most client addresses are short-lived due to
IPv6 address transform, each client address is used to access
an average of 5 ∼ 6 online services during the 1-month obser-
vation. In addition, considering the observation bias caused by
issues like packet loss, a few TLS connections do not contain
ClientHello, ServerHello, or Certiﬁcate message, which lead
to an average of 3.8 client ﬁngerprint nodes and 41.3 server
ﬁngerprint nodes in each knowledge graph. (2) Time-based
Data Split. To simulate a realistic setting implemented by an
adversary, we evaluate SIAMHAN with a time-based split on
the 5-month dataset in most experiments of the paper (except
timeliness evaluation in Section 6.3), which uses the ﬁrst 3-
month data for training, the 4th month’s data for validation,
and the 5th month’s data for test. Note that the test user is
excluded from the training set. The adversary’s intention is
to train the attack model on the history ground truth dataset
and perform the attack on the future collected data with the
background knowledge.
Feasibility Discussion. There may remain doubts about
the dataset that could be discussed: (1) Labeling Trick. Since
the leaked plaintext cookies are available to label the TLS
users in our dataset, one of the doubts could be the necessity of
the adversary to train SIAMHAN. According to the statistics,
we collect a total of 0.58M addresses in the 5-month TLS traf-
ﬁc. Users of only 2.9k addresses expose their HTTP cookies
(including the new generated cookies during the observation),
which is a ratio of 0.5%. Therefore, most TLS users never
reveal their plaintext cookies, which shows a strong motiva-
tion to perform the attack. (2) User Assumption. Our dataset
USENIX Association
30th USENIX Security Symposium    4337
is all composed of users with plaintext cookies. Therefore,
another doubt is whether the assumption that users without
any plaintext cookies would behave the same as users with
plaintext cookies is reasonable. To address the issue, we addi-
tionally provide an analysis of users without plaintext cookies
in Appendix A. The similar user source and online habits
indicate that the model trained on the users with plaintext
cookies could be directly generalized to perform effective
attacks on the TLS users without plaintext cookies. (3) Fea-
ture Prevalence. In Table 3, we analyze the prevalence of the
TLS ﬁelds used in the paper. The frequent appearance of most
ﬁelds in the TLS connections ensures that the ﬁngerprints are
sufﬁcient to perform the attack. Although more knowledge
graphs may lack the ﬁngerprints related to the Certiﬁcate mes-
sage, the knowledge volume composed of other features is
still enough to perform the strong correlation attack.
5.4 Baselines
The prior work mainly performs user correlation under TLS
trafﬁc from the dimensions including user proﬁling [16, 27],
TLS ﬁngerprinting [2], and ﬂow sequences [34]. Among them,
we implement four representative methods to compare with
SIAMHAN: (1) User IP Proﬁling [16]. User IP Proﬁling is
building user proﬁles through all the destination IPs of the
client address and using a Bayesian classiﬁer [31] to identify
known users in a closed-world dataset. To apply address cor-
relation to identify unknown users in an open-world scenario,
we use pairwise proﬁles as input to the classiﬁer to evaluate
the performance of correlation attacks. (2) User SNI Proﬁl-
ing [27]. User SNI Proﬁling is to use the SNIs in all the TLS
ClientHello messages from the client as a user interest identiﬁ-
cation. Similar to Banse et al. [20], we also exploit a Bayesian
classiﬁer to input pairwise SNI proﬁles to correlate user ac-
tivities. (3) Client Fingerprinting [2]. Client Fingerprinting
is to extract the speciﬁc ﬁelds of the TLS ClientHello mes-
sage as the user’s client ﬁngerprints and leverages Random
Forest [6] to learn the correlation of any two paired ﬁnger-
prints. (4) Deepcorr [34]. Deepcorr uses the ﬂow sequence
characteristics to achieve correlation tasks in multiple scenar-
ios [4, 34,53]. To keep the same setup with Deepcorr, we also
extract a ﬂow sequence of 300 packets per client address to
indicate the performance of Deepcorr.
5.5 Evaluation Metrics
Our evaluation metrics include true positive rate, false-
positive rate, area under ROC curve, and accuracy: (1) True
Positive Rate (TPR). The TPR measures the fraction of as-
sociated address pairs that are correctly declared to be cor-
related by SIAMHAN. (2) False Positive Rate (FPR). The
FPR measures the fraction of non-associated address pairs
that are mistakenly identiﬁed as correlated by SIAMHAN. (3)
Area Under Curve (AUC). The AUC metric is to calculate
the area under the ROC curve formed by TPRs and FPRs
with multiple thresholds, which is frequently used in binary
classiﬁcation tasks. (4) Accuracy. To evaluate the user track-
ing and user discovery tasks applied by correlation attacks,
we deﬁne two task-based accuracy metrics to indicate the
attack performance. In the user tracking task, the Tracking
Accuracy (TA) is used to measure the fraction of correctly
identiﬁed address pairs associated or non-associated with the
target user samples. While in the user discovery task, the Dis-
covery Accuracy (DA) is used to evaluate the fraction of
addresses that are correctly classiﬁed into unique user groups.
Implementation
5.6
During the data preprocessing, we limit the maximum node
number to 50 and the maximum node attribute length to 50
in each knowledge graph. As such, the dimension of the ad-
jacency matrix A and the feature matrix X is 50×50. The
matrix contains padding or truncating operations due to the
difference between the number of each graph’s nodes or the
attribute length of each node. The character in node attributes
is encoded to digital and the feature matrix X ﬁnally requires
row-normalization as the input of SIAMHAN. When training
SIAMHAN, we randomly initialize parameters and optimize
the model with Adam [25], we set the learning rate to 0.005,
the regularization parameter to 0.001, and the dimension of
the hierarchical attention parametrize matrix a, p, q to 100,
128, 128. In addition, we also set the number of attention head
K to 4. The activation function σ is LeakyReLU. The margin
m is 20, and the threshold η for address correlation is 10. We
use early stopping with a patience of 100 to train the model.
6 Evaluation
This section presents the analysis of IPv6 address transform
scenarios and all experimental results showing the effective-
ness of correlation attacks conducted by SIAMHAN.
6.1 Analysis of Address Transform
During the 5-month trafﬁc monitoring, IPv6 users frequently
updated their client addresses for communication. Figure 4
reveals the average transform time of these client addresses.
80% of IPv6 users change their client addresses at least once a
month, showing the universality of address transform in IPv6
networks. Considerable users frequently change the client
address within two weeks. Since RFC 4941 [33] recommends
the lifetime of the temporary address is one day to one week,
the appearance in the TLS trafﬁc is consistent with the instruc-
tion. Furthermore, we also analyze the addressing scheme of
the address dataset. 98% of changing user’s addresses update
the subnet identiﬁer, which explains the mobility of users be-
cause the Regional Internet Registry (RIR) usually sets this
4338    30th USENIX Security Symposium
USENIX Association
Figure 4: The number of users and their addresses with differ-
ent average change times under the 5-month TLS trafﬁc.
identiﬁer for different regions. In addition, 23% of user’s ad-
dresses maintain a constant IID, while 77% of IPv6 users use
a stable or temporary IID. The analysis results demonstrate
that the transform of IPv6 client addresses leads to difﬁculty
in conducting effective user correlation under TLS trafﬁc.
6.2 Analysis of Hierarchical Attention
To implement IPv6 client address correlation attacks, a salient
property of SIAMHAN is the incorporation of the hierarchi-
cal mechanism, which takes the importance of similar meta-
information from two client addresses to help distance metric.
Figure 5 shows a case of two addresses’ knowledge graphs
and the hierarchical attention on partial nodes. In this setting,
the two client nodes C 1 link to 2 and 4 server nodes S respec-
tively, where S2 is the common destination address. F1 ∼ F4
are the client ﬁngerprint nodes link to C and F5 ∼ F13 are the
server ﬁngerprint nodes link to S2. The corresponding feature
of each node label is shown in Table 2.
Analysis of Node-level Attention. Node-level attention
focuses on signiﬁcantly similar meta-information in each
meta-path-based neighbor between two graphs, a local view
on each node to learn the semantic-speciﬁc embeddings. For
instance, the SCS meta-path-based neighbor attention of node
C is shown in Figure 5(a). The high attention values of node C
and S2 come from the constant IID in the address of C and the
common server address of S2 between the two input graphs.
In addition, among the FCF meta-path-based neighbors in
Figure 5(b), F3 reaches a high attention value except for C
due to the same cipher suits used. The other client ﬁnger-
print nodes obtain low attention because they are usually the
same regardless of the correlated or not correlated addresses,
which lacks distinction to learn the unique embedding for the
correlation task. Finally, as an example of FSF node-level