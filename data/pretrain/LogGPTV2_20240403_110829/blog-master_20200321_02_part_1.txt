## 如何创建RDS PG 的秒级 flashback闪回实例, 实时容灾实例 - zfs - snapshot - clone - standby - compress    
### 作者                                                                          
digoal                                                                                                                   
### 日期                                                                                                                   
2020-03-21                                                                                                               
### 标签                                                                                                                   
PostgreSQL , 闪回 , zfs     
----                 
## 背景        
阿里云 rds pg 12为例, 创建RDS PG 的秒级 flashback闪回实例, 实时容灾实例.    
技术点:    
zfs - snapshot - clone - postgresql stream standby - compress    
## 例子    
1、申请ecs    
规格, 可用区, vpc, vswitch 建议与RDS PG相同    
存储根据主库的读写压力配置, 能满足容灾库的恢复效率就可以    
如果需要将容灾实例设置在跨region的机房, 建议 VPC网络打通    
2、部署系统, 建议centos 7 x64    
配置sysctl, limits等配置参考:     
https://github.com/digoal/blog/blob/master/202002/20200229_01.md    
3、部署zfs, 开启压缩    
```    
# cat /etc/redhat-release     
CentOS Linux release 7.7.1908 (Core)    
```    
https://github.com/openzfs/zfs/wiki/RHEL-and-CentOS    
```    
wget http://download.zfsonlinux.org/epel/zfs-release.el7_7.noarch.rpm    
rpm -ivh zfs-release.el7_7.noarch.rpm     
yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm    
yum install -y "kernel-devel-uname-r == $(uname -r)" zfs    
```    
查看日志，是否有报错，正常情况下没有报错    
4、测试zfs是否可用    
配置系统启动时自动加载zfs     
```    
vi /etc/rc.local    
/sbin/modprobe zfs    
```    
```    
chmod +x /etc/rc.local    
```    
测试zfs是否正常    
```    
# modprobe zfs     
# zpool list    
no pools available    
# reboot    
```    
5、安装pg 12    
https://www.postgresql.org/download/linux/redhat/    
```    
yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm    
yum install postgresql12*    
su - postgres  
配置环境变量  
vi ~/.bash_profile  
# 追加    
export PS1="$USER@`/bin/hostname -s`-> "      
export LANG=en_US.utf8      
export PGHOME=/usr/pgsql-12      
export LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH      
export DATE=`date +"%Y%m%d%H%M"`      
export PATH=$PGHOME/bin:$PATH:.      
export MANPATH=$PGHOME/share/man:$MANPATH      
alias rm='rm -i'      
alias ll='ls -lh'      
unalias vi      
```    
6、插件安装(根据你在RDS里面使用的插件安装, 有些插件可能是RDS独有的, 那么目前在容灾端将无法调用这些插件, 但是不影响容灾恢复)    
7、配置zpool, zfs    
假设```/dev/vdc```是新增的云盘, 如果你的云盘不是vdc请更换, zfs也支持管多快云盘, 请自行查阅zfs手册不再赘述.      
```    
parted -a optimal -s /dev/vdc mklabel gpt mkpart primary 1MiB 100%FREE     
zpool create zp1 -f -o ashift=13 vdc1    
zfs set canmount=off zp1      
```    
8、创建存放数据文件的目录    
```    
zfs create -o mountpoint=/zpdata01 -o recordsize=8K -o atime=off -o primarycache=metadata -o logbias=throughput -o secondarycache=none zp1/zpdata01      
```    
9、创建存放wal归档文件的目录    
```    
zfs create -o mountpoint=/zpdata02 -o recordsize=8K -o atime=off -o primarycache=metadata -o logbias=throughput -o secondarycache=none -o compression=on zp1/zpdata02      
zfs set compression=on zp1/zpdata02    
# zfs list    
NAME           USED  AVAIL     REFER  MOUNTPOINT    
zp1           1.29M  1.42T      192K  /zp1    
zp1/zpdata01   192K  1.42T      192K  /zpdata01    
zp1/zpdata02   192K  1.42T      192K  /zpdata02    
```    
10、创建rds实例rds_superuser用户    
```    
在控制台可创建:    
user: rep    
pwd: xxxxxx    
```    
11、配置rds白名单    
允许该ecs连接    
12、创建rds pg 12从库    
```    
mkdir /zpdata01/pg12_1921_data    
mkdir /zpdata02/pg12_1921_wal    
chown -R postgres:postgres /zpdata01/pg12_1921_data    
chown -R postgres:postgres /zpdata02/pg12_1921_wal    
```    
```    
su - postgres    
export PGPASSWORD=pwd    
nohup pg_basebackup -D /zpdata01/pg12_1921_data -F p -R -c fast -X stream -h pgm-bp1wv687i955y998129390.pg.rds.aliyuncs.com -p 1433 -U rep  >./bak.log 2>&1 &     
```    
13、配置从库, 包括application_name、开启归档等     
```  
su - postgres  
cd /zpdata01/pg12_1921_data    
```  
注视postgresql.conf如下配置    
```    
grep "^#" postgresql.conf    
#    
#Fri Mar 13 09:55:03 CST 2020    
#ssl_key_file='server.key'    
#huge_pages=try    
#auto_explain.sample_rate=1    
#zhparser.multi_zall=off    
#shared_preload_libraries='pg_stat_statements,auth_delay,auto_explain,zhparser,timescaledb,pg_pathman'    
#promote_trigger_file='/data/postgresql.trigger'    
#ssl=off    
#rds_max_log_files=20    
#pg_pathman.enable_auto_partition=on    
#shared_buffers=32768MB    
#zhparser.punctuation_ignore=off    
#pg_pathman.override_copy=on    
#port=1922    
#pg_stat_statements.max=5000    
#auth_delay.milliseconds=3s    
#auto_explain.log_nested_statements=off    
#track_io_timing=on    
#zhparser.multi_zmain=off    
#auto_explain.log_analyze=off    
#archive_mode=on    
#ssl_cert_file='server.crt'    
#zhparser.multi_short=off    
#zhparser.dict_in_memory=off    
#auto_explain.log_format=text    
#auto_explain.log_min_duration=-1    
#rds.rds_max_non_super_conns=12800    
#pg_pathman.enable=on    
#archive_command='/bin/date'    
#auto_explain.log_verbose=off    
#log_line_prefix='\1\n\t%p\t%r\t%u\t%d\t%t\t%e\t%T\t%S\t%U\t%E\t\t'    
#pg_pathman.enable_runtimemergeappend=on    
#zhparser.extra_dicts='dict_extra.xdb'    
#auto_explain.log_buffers=off    
#pg_stat_statements.track=top    
#jit_provider='llvmjit'    
#pg_pathman.enable_partitionrouter=off    
#pg_stat_statements.track_utility=off    
#pg_stat_statements.save=off    
#zhparser.dicts_type='EXTRA'    
#auto_explain.log_timing=on    
#pg_pathman.enable_runtimeappend=on    
#zhparser.seg_with_duality=off    
#rds.rds_max_super_conns=100    
#pg_pathman.enable_partitionfilter=on    
#log_destination='stderr,csvlog'    
#zhparser.multi_duality=off    
#pg_pathman.insert_into_fdw='postgres'    
#pg_pathman.enable_bounds_cache=on    
#rds.rds_max_non_super_wal_snd=32    
#auto_explain.log_triggers=off    
#rds_sync_replication_timeout=0    
```    
修改配置参数如下(如果没有则新增这个文件)    
```    
su - postgres  
cd /zpdata01/pg12_1921_data    
vi postgresql.auto.conf    
primary_conninfo = 'user=rep password=''pwd'' host=''pgm-bp1wv687i955y998129390.pg.rds.aliyuncs.com'' port=1433 application_name=hello_rds_pg12'    
port=1922    
shared_buffers=32GB    
log_destination='csvlog'    
archive_mode=always    
archive_command='test ! -f /zpdata02/pg12_1921_wal/%f && cp %p /zpdata02/pg12_1921_wal/%f'    
```    
14、改一下目录权限    
```    
chmod 700 /zpdata02/pg12_1921_wal    
chmod 700 /zpdata01/pg12_1921_data    
```    
15、启动从库    
```    
pg_ctl start -D /zpdata01/pg12_1921_data    
```    
16、配置自动启动从库    
```    
vi /etc/rc.local    
su - postgres -c "pg_ctl start -D /zpdata01/pg12_1921_data"    
```    
17、配置数据文件目录自动快照(归档目录不需要快照)    
创建脚本, 配置执行权限    
```    
vi /etc/snap.sh    
STIME=`date +%F%T`    
/usr/sbin/zfs snapshot zp1/zpdata01@$STIME     
chmod 500 /etc/snap.sh    
```    