# StegoTorus: A Camouflage Proxy for the Tor Anonymity System

**Authors:**
- Zachary Weinberg (Carnegie Mellon University)
- Jeffrey Wang (Stanford University)
- Vinod Yegneswaran (SRI International)
- Linda Briesemeister (SRI International)
- Steven Cheung (SRI International)
- Frank Wang (Stanford University)
- Dan Boneh (Stanford University)

## Abstract
Government-imposed internet censorship is a growing global issue. Users and censors are engaged in a continuous arms race, with users developing methods to evade censorship and censors implementing countermeasures. One of the most effective tools for circumventing such censorship is the Tor anonymity system, which must continually adapt its network traffic patterns to remain effective.

We introduce StegoTorus, a tool designed to comprehensively disguise Tor traffic from protocol analysis. By steganographically embedding Tor traffic within innocuous protocols like HTTP and mimicking the characteristics of these protocols at the transport level, StegoTorus enhances Tor's resilience against fingerprinting attacks while maintaining usable performance.

**Categories and Subject Descriptors:**
- C.2.0 [Computer-Communication Networks]: Security and protection
- K.4.1 [Public Policy Issues]: Transborder data flow

**General Terms:**
- Algorithms, Design, Security

**Keywords:**
- Anticensorship, Circumvention Tools, Cryptosystems, Steganography

## 1. Introduction
Freedom of speech and decentralization are fundamental principles of the modern internet. John Gilmore famously stated that "the Net interprets censorship as damage, and routes around it" [31]. While it is more challenging for central authorities to control content on the internet compared to traditional media, over one-third of all nations impose filters on their citizens' internet access [16]. As the internet continues to grow, governments are likely to increase their efforts to control it [13].

Tools for evading online censorship have existed almost as long as the censorship itself [33, 56]. One of the most effective current tools is Tor, which provides anonymity by routing user traffic through three relays. Each relay can only decrypt enough information to know the next hop, ensuring that no single observer can determine both the source and destination of the traffic [24].

Although Tor was not initially designed as an anticensorship tool, it has been effective in this role. In response, repressive governments have attempted to block Tor traffic. For example, Iran and China have used techniques to detect and block Tor traffic by analyzing TLS handshakes and performing active probes [20, 48, 70]. The Tor developers have responded with minor adjustments to their software to counter these blocks.

In early 2012, Iran blocked all outbound HTTPS connections, including those to Tor's primary site. To address this, Tor introduced obfsproxy, which applies an additional stream cipher to traffic, making it harder to detect specific patterns. However, this does not significantly alter packet sizes and timing, leaving Tor traffic vulnerable to fingerprinting [21].

**Contributions:**
In this paper, we present StegoTorus, an advanced version of obfsproxy. StegoTorus includes:
- A generic architecture for concealing Tor traffic within an innocuous cover protocol (Section 2).
- A novel encrypted transport protocol tailored for steganographic needs (Section 3).
- Two proof-of-concept steganography modules (Section 4).

We demonstrate the ease of detecting un-camouflaged Tor traffic and the effectiveness of StegoTorus in concealing it (Sections 5.1 and 5.2). We also show that StegoTorus imposes a reasonable overhead (Section 6).

We anticipate that censors will adapt to this new technology, and more sophisticated steganography modules are under development. Ultimately, an attacker would need to defeat all steganography modules used by StegoTorus to block Tor traffic.

## 2. Architecture
StegoTorus acts as a "pluggable transport" for Tor, replacing its usual direct connection to a relay server. It can also camouflage traffic from other applications that use a SOCKS proxy. Figure 1a illustrates the data flow between a user's browser and censored websites, while Figure 1b shows the internal structure of the StegoTorus client and server.

### 2.1 Design Goals
StegoTorus aims to preserve Tor's core design goals:
- **Unlinkability:** The censor should not be able to determine which users communicate with which remote hosts via Tor.
- **Performance:** Access to the internet through StegoTorus should not be significantly slower than unmasked access.
- **Robustness:** The system should maintain its design goals even under active attacks.

Additionally, StegoTorus seeks to provide:
- **Undetectability:** The censor should not be able to identify users of StegoTorus.
- **Unblockability:** The censor should not be able to block StegoTorus without also blocking a significant amount of unrelated traffic.

### 2.2 Threat Model
We model a censorious adversary similar to Infranet [27] and Telex [72]. The censor controls all network infrastructure inside a perimeter, but not the software on end users' computers. The censor aims to prevent censored nodes from accessing undesirable material, assuming no such material is hosted inside the perimeter.

#### 2.2.1 Perimeter Filtering
The censor programs perimeter-crossing routers to observe and filter cleartext traffic. This includes IP and TCP headers and TLS record framing. Routers use three general techniques to detect and block undesirable material:
- **Address Filters:** Block communication with IP addresses known to host undesirable material.
- **Pattern Filters:** Look for deterministic patterns in cleartext, such as specific Diffie-Hellman parameters in TLS handshakes.
- **Statistical Filters:** Analyze stochastic patterns, including packet size, arrival time, and other low-level characteristics.

#### 2.2.2 Limits on the Censor
Perimeter filtering must operate in real-time on a high volume of traffic. For example, the CAIDA project's "Anonymized Internet Traces 2011" dataset [14] contains 1.96 billion packets in one hour, corresponding to an average rate of 540,000 packets per second. A filtering router that requires an extra two microseconds per packet would halve overall throughput.

We assume that a nation-state adversary has access to deep packet inspection hardware capable of two-stage analysis. The first stage processes every packet in real-time, while the second stage examines a small fraction of TCP flows and may respond after-the-fact.

We assume all Tor relays are outside the perimeter, and the censor does not operate malicious relays or observe traffic among outside nodes. If these assumptions are false, the censor may be able to break Tor's unlinkability guarantee [50, 53]. StegoTorus obfuscates traffic between the Tor client and the first relay, controlling what perimeter routers observe.

We also assume the censor does not completely disconnect from the global network, as seen during the Arab Spring. Other governments are unlikely to take such drastic measures due to the negative consequences.