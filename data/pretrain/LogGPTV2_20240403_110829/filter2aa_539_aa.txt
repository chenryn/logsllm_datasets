BRC4 - Brute Ratel Customized Command and
Control Center
Ratel War Room
Ratel Server - TeamServer
API
Ratel War Room is an API driven server which works over HTTP and WebSocket
Start Mode
Ratel Mode
Ratel mode is the core server mode which interacts with badgers, starts listener and is your main C2 communication channel.  
Boomerang Mode
In Boomerang mode, the server acts as a standalone socks and HTTPS proxy server.
APIs
/access
/status
/task
Brute Commander
Warmongers - Users
Add Warmonger
C4 profiles
{
    "admin_list": {
        "admin": "admin@123"
    },
    "user_list": {
        "brute": "password@123",
        "ratel": "password@123"
    }
}
Delete Warmonger
Reset Warmonger
Warmonger List
Covert Communication
C4 Profilers
export
import
C4 Profiler - Listners
Add Listeners
Create Listener
C4 Profiler->Add Listener
C2 Authentication
Common Authentication for all badgers
OTA or One Time Authentication
View Authentication
Change Authentication
Stop Listener
Hosted Files
Add New URI
Listener Actions->Add New URI
Host Files
Listener Actions->Host File
View Hosted
C4 Profiler->Hosted Files
Root Page Manager
C4 Profiler->Change Root Page
C4 Profiler - Payload
Payload Profiles via Brute Commander
HTTP
SMB
TCP
Payload Profiles via C4 Profilers
{
    "payload_config": {
        "main_http": {
            "c2_auth": "abcd@123",
            "c2_uri": [
                "content.php",
                "admin.php"
            ],
            "extra_headers": {
                "Cache-Control": "no-cache",
                "Connection": "close",
                "Cookie": "AUTH-1babbba6265ca2eba78b65bda5e34545c32a95b2; Version=default; id=a3fWa; 
Expires=Thu 31 Oct 2021 07:28:00 GMT;",
                "Pragma": "no-cache",
                "Referer": "https://mail.microsoft.com",
                "x-pm-apiversion": "3",
                "x-pm-appversion": "Web_3.16.33",
Badger Management - Beacon Management
Badger Console
double clicking a badger or right clicking and selecting the Load button
Process Manager
                "x-pm-uid": "d0e1f5b0dc08202064de25a",
                "Host": "test.azureedge.net"
            },
            "host": "10.10.10.1",
            "port": "443",
            "ssl": true,
            "type": "HTTP",
            "useragent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0"
        },
        "main_tcp": {
            "c2_auth": "abcd@123",
            "host": "127.0.0.1",
            "port": "10000",
            "type": "TCP"
        },
        "main_smb": {
            "c2_auth": "abcd@123",
            "smb_pipe": "\\\\.\\pipe\\mynamedpipe",
            "type": "SMB"
        }
    }
}
Pivot Graph
Riot Control
You can send commands to multiple badgers simultaneously via a single console with Riot Control
Kill Switch
Activate KillSwitch
Activating Kill Switch will activate exit command for all active badgers.
Arsenal
loadr - load reflective DLLs
command
GUI
Crypt Vortex
Crypt Vortex is a ransomware simulation reflecive DLL which uses a custom encryption algorithm to encrypt the files.
encryption
decryption
LDAP Sentinel
The LDAP Sentinel is a LDAP quering reflective DLL which provides a graphical user interface on Commander to query Active 
Directory for different objects and attributes.
tons of prebuilt queries
Socks Bridge
Socks Bridge is a reflective DLL which can be injected to any process. It is a connecter which connects to Boomerang’s 
HTTP/HTTPS Socks Server.
Start socksbridge
Using socksbridge
C4 Profiler - Command Register
Command Profiler
DLL Register
PE Register
{
    "register_dll": {
        "boxreflect": {
            "file_path": "server_confs/boxreflect.dll",
            "description": "Loads a test reflective dll message box",
            "artifact": "WINAPI",
            "mainArgs": "NA",
            "optionalArg": "NA",
            "example": "boxcheck",
            "minimumArgCount": 1,
            "replace_str": {
                "boxit": "\\x00\\x00\\x00\\x00\\x00",
                "!This program cannot ": 
"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0
0",
                "be run in DOS mode.": 
"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"
            }
        }
    }
}
{
    "register_pe": {
        "seatbelt": {
            "file_path": "server_confs/Seatbelt.exe",
            "description": "Runs Seatbelt C# executable",
            "artifact": "WINAPI",
            "mainArgs": "NA",
            "optionalArg": "NA",
            "example": "seatbelt",
            "minimumArgCount": 1
        }
    }
}
PIC Register
Autoruns
C4 profile
GUI
C4 Profiler->Autoruns
Click Scripts
C4 Profiler->Clickscripts
{
    "register_obj": {
        "o_getprivs": {
            "file_path": "server_confs/getprivs.o",
            "description": "Get privilege of current user",
            "artifact": "WINAPI",
            "mainArgs": "NA",
            "optionalArg": "NA",
            "example": "o_getprivs",
            "minimumArgCount": 1
        }
    }
}
{
    "autoruns": [
        "sleep 60 30",
        "set_child werfault.exe",
        "id",
        "get_privs",
        "dcenum"
    ]
}
Create a click script via profile
Run a click script
"click_script": {
    "Credential Dumping": [
        "samdump",
        "shadowclone",
        "dcsync"
    ],
    "Discovery": [
        "id",
        "pwd",
        "ipstats",
        "psreflect echo $psversiontable",
        "net users",
        "scquery"
    ]
}
Command Transmission
Brute Ratel uses a custom encryption algorithm between the badgers and the c4 server. 
This encryption is performed using a random key that the user provides. If a user does not provide an encryption key, the 
service generates it dynamically.
Server
Credential Manager
Add/Import/Remove Credentials
Server->Add Credentials
Make Token
Server->Save All Credentials
Download Manager
Server->View Downloads
Log Viewer
Server->View Logs
Scratchpad
User Activity Log
Server->User Activity
MITRE Team Activity
Brute Ratel MITRE Map
Server Config->Brute Ratel MITRE Map
Watchlist
Event Viewer
Latest Web Activity
Statistics
Command Queue
PsExec Config
*C4 Profiler->PsExec Config*
Scratchpad
Adversary Simulation
Adversary simulation JSON file
Satrt adversary simulation
C4 Profiler->Load Simulation
Badgers References
Process Injections/PPID Spoofing/Arguement Spoofing
v0.1
run
Executes a windows process and returns output of the target process. This
command can be used alongside set_parent and set_arguement to change the
parent process and spoof commandline arguements
v0.1
loadr
Loads a reflective DLL into a remote process memory. The target process in which the
DLL will be injected can be changed using set_child. The parent process can be spoofed
using set_parent
v0.1
set_child
Changes the target process which gets injected with DLL or PE when using loadr,
psreflect, sharpreflect or other Brute Ratel Arsenal modules
v0.1
set_parent
Changes the parent process ID which gets spoofed when using loadr, psreflect,
sharpreflect, run or other Brute Ratel Arsenal modules
v0.1
get_child
Gets the target process set for reflective DLL injection or C# PE injection
v0.1
get_parent
Gets the parent process ID set for reflective DLL injection, C# PE injection or any other
process creation
v0.1
clear_child
Sets child process to null. Commands dependent on injection will return error
v0.1
clear_parent
Sets parent process ID to 0. Commands dependent on injection and process creation
will use badger’s process ID as parent
v0.1
pcinject
Injects a new http/tcp/smb payload using an existing payload configuration to a given
process id
v0.2
shinject
Load position independent shellcode into a remote process
v0.1
psreflect
Injects a powershell reflective DLL loader to a remote process to run powershell
commands without running powershell.exe process using the Unmanaged PowerShell
technique. The powershell loader patches AMSI to evade basic signatures
v0.1