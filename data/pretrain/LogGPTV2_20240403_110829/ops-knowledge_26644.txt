It seems like you're having trouble installing the `pyperclip` module for Python 3.6 on a 32-bit Windows system. You've already tried following the standard steps, but encountered an issue with the command prompt not recognizing the `python` command. Let's address this and get you up and running.

### Steps to Resolve the Issue

1. **Ensure Python is Installed Correctly:**
   - Verify that Python 3.6 is installed by opening the Command Prompt and typing:
     ```sh
     python --version
     ```
   - If you see a version number, Python is installed and accessible. If not, proceed to the next step.

2. **Add Python to the System PATH:**
   - The error message "'python' is not recognized as an internal or external command, operable program or batch file" indicates that the `python.exe` executable is not in your system's PATH.
   - To add Python to the PATH, follow these steps:
     1. Open the Control Panel.
     2. Search for "Environment Variables" and click on "Edit the system environment variables."
     3. In the System Properties window, click on the "Environment Variables" button.
     4. In the Environment Variables window, find the `Path` variable under the "System variables" section and select it.
     5. Click "Edit."
     6. In the Edit Environment Variable window, click "New" and add the path to the directory where `python.exe` is located. By default, this is usually something like `C:\Python36\` or `C:\Users\<YourUsername>\AppData\Local\Programs\Python\Python36-32\`.
     7. Make sure to separate the new path from existing paths with a semicolon (`;`).
     8. Click "OK" to close all the windows.

3. **Verify the PATH Update:**
   - Open a new Command Prompt window (close any existing ones) and type:
     ```sh
     python --version
     ```
   - You should now see the version of Python installed.

4. **Install `pyperclip` Using `pip`:**
   - Now that `python` is recognized, you can install the `pyperclip` module using `pip`. Run the following command in the Command Prompt:
     ```sh
     python -m pip install pyperclip
     ```

### Additional Tips

- **Using `pip` Directly:**
  - If `python -m pip` doesn't work, you can try using `pip` directly:
    ```sh
    pip install pyperclip
    ```
  - Ensure `pip` is also in your PATH. The `get-pip.py` script should have added it, but you can verify by running:
    ```sh
    pip --version
    ```

- **Checking for Errors:**
  - If you encounter any errors during the installation, please provide the exact error message, and I can help you troubleshoot further.

By following these steps, you should be able to resolve the issue and successfully install the `pyperclip` module. If you have any more questions or run into other issues, feel free to ask!