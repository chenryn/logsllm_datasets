    trusted_certs: []
    monitoring:
      prometheus_service_account: system:serviceaccount:monitoring:prometheus-k8s
    saml:
      idp_url: https://portal.apps.tremolo.io/idp-test/metadata/dfbe4040-cd32-470e-a9b6-809c8f857c40
      metadata_xml_b64: ""
    ```
    我们在这里做了两个改变:
    *   为应用编程接口服务器代理添加了主机
    *   Enabled impersonation
        这些更改启用了 OpenUnison 的模拟功能，并生成了一个额外的 RBAC 绑定，以在 OpenUnison 的服务帐户上启用模拟。
3.  用新的`values.yaml`文件运行掌舵图:
    ```
    helm install orchestra tremolo/openunison-k8s-login-saml2 –namespace openunison -f ./values.yaml
    NAME: orchestra
    LAST DEPLOYED: Thu Apr 23 20:55:16 2020
    NAMESPACE: openunison
    STATUS: deployed
    REVISION: 1
    TEST SUITE: None
    ```
4.  就像我们与 Kubernetes 的 OpenID Connect 集成一样，完成与测试身份提供者的集成。首先，获取元数据:
    ```
    $ curl --insecure https://k8sou.apps.192-168-2-131.nip.io/auth/forms/saml2_rp_metadata.jsp
    .
    .
    .
    ```
5.  接下来，登录[https://portal.apps.tremolo.io/](https://portal.apps.tremolo.io/)，选择测试身份提供者，并将生成的元数据复制并粘贴到测试身份提供者中，其中显示**元数据**。
6.  最后，要更新变更，点击**更新依赖方**。
新的 OpenUnison 部署被配置为应用编程接口服务器的反向代理，并已与我们的 SAML2 身份提供商重新集成。没有要设置的群集参数，因为模拟不需要任何群集端配置。下一步是测试集成。
## 测试模拟
现在，让我们测试一下我们的模拟设置。请遵循以下步骤:
1.  在浏览器中，输入 OpenUnison 部署的网址。这与您最初在 OIDC 部署时使用的网址相同。
2.  Log into OpenUnison and then click on the dashboard. You should recall that the first time you opened the dashboard on the your initial OpenUnison deployment, you received a lot of errors until you created the new RBAC role, which granted access to the cluster.
    启用模拟并打开仪表板后，您应该不会看到任何错误消息，即使系统提示您输入新证书警告，并且没有告诉应用编程接口服务器信任您在仪表板上使用的新证书。
3.  点击右上角的小圆形图标，查看您的登录身份。
4.  Next, go back to the main OpenUnison dashboard and click on the **Kubernetes Tokens** badge.
    请注意，传递给 kubectl 的`--server`标志不再有 IP。相反，它的主机名来自`values.yaml`文件中的`network.api_server_host`。这是模仿。您现在不是直接与应用编程接口服务器交互，而是与 OpenUnison 的反向代理交互。
5.  最后，让我们将`kubectl`命令复制并粘贴到一个 shell 中:
    ```
    export TMP_CERT=$(mktemp) && echo -e "-----BEGIN CERTIFI...
    Cluster "kubernetes" set.
    Context "kubernetes" created.
    User "mlbiamext" set.
    Switched to context "kubernetes".
    ```
6.  要验证您是否具有访问权限，请列出集群节点:
    ```
     kubectl get nodes
    NAME                         STATUS   ROLES    AGE    VERSION
    cluster-auth-control-plane   Ready    master   6h6m   v1.17.0
    cluster-auth-worker          Ready       6h6m   v1.17.0
    ```
7.  就像你集成了 OpenID Connect 的原始部署一样，一旦你退出了 OpenUnison 页面，在一两分钟内，令牌就会过期，你将无法刷新它们:
    ```
    kubectl get nodes
    Unable to connect to the server: failed to refresh token: oauth2: cannot fetch token: 401 Unauthorized
    ```
现在，您已经验证了您的集群在模拟方面工作正常。模拟反向代理(OpenUnison)不是直接向应用编程接口服务器进行认证，而是用正确的模拟头将所有请求转发到应用编程接口服务器。通过提供登录和注销过程以及集成活动目录组，您仍然可以满足企业的需求。
# 配置模拟而不打开统一
OpenUnison 操作人员自动执行了几个关键步骤来实现模拟。还有一些项目是专门为 Kubernetes 设计的，比如 JetStack 的 OIDC 代理([https://github.com/jetstack/kube-oidc-proxy](https://github.com/jetstack/kube-oidc-proxy))，旨在让使用模拟变得更容易。您可以使用任何可以生成正确标头的反向代理。当你自己做这件事时，有两个关键事项需要理解。
## 模仿 RBAC 策略
下一章将介绍 RBAC，但目前，授权服务帐户进行模拟的正确策略如下:
```
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: impersonator
rules:
- apiGroups:
  - ""
  resources:
  - users
  - groups
  verbs:
  - impersonate
```
要限制可以模拟哪些帐户，请将`resourceNames`添加到您的规则中。
## 默认组
模拟用户时，Kubernetes 不会将默认组`system:authenticated`添加到模拟组列表中。当使用反向代理时，如果不知道为该组添加头，请配置代理手动添加。否则，像调用`/api`端点这样的简单操作将会失败，因为这对于除集群管理员之外的任何人来说都是未经授权的。
# 总结
本章详细介绍了 Kubernetes 如何识别用户及其成员所在的组。我们详细介绍了应用编程接口服务器如何与身份交互，并探索了几种认证选项。最后，我们详细介绍了 OpenID Connect 协议及其在 Kubernetes 中的应用。
了解 Kubernetes 如何对用户进行认证以及 OpenID Connect 协议的细节是将安全性构建到集群中的重要部分。了解细节以及它们如何应用于常见的企业需求，将有助于您决定向集群进行认证的最佳方式，并为为什么应该避免我们探索的反模式提供理由。
在下一章中，我们将应用我们的认证过程来授权对 Kubernetes 资源的访问。了解某人是谁并不足以保护您的集群。你还需要控制他们可以访问的内容。
## 问题
1.  OpenID Connect is a standard protocol with extensive peer review and usage.
    A.真实的
    B.错误的
2.  Which token does Kubernetes use to authorize your access to an API?
    A.`access_token`
    B.`id_token`
    C.`refresh_token`
    D.`certificate_token`
3.  In which situation is certificate authentication a good idea?
    A.管理员和开发人员的日常使用
    B.从外部 CI/CD 管道和其他服务访问
    C.当所有其他认证解决方案都不可用时，在紧急情况下击碎玻璃
4.  How should you identify users accessing your cluster?
    A.电子邮件地址
    B. Unix 登录 ID
    C.Windows 登录标识
    D.不基于用户名的不可变标识
5.  Where are OpenID Connect configuration options set in Kubernetes?
    A.取决于分布
    B.在配置映射对象中
    C.在机密中
    D.在 Kubernetes API 服务器可执行文件上设置为标志
6.  When using impersonation with your cluster, the groups your user brings are the only ones needed.
    A.真实的
    B.错误的
7.  The dashboard should have its own privileged identity to work properly.
    A.真实的
    B.错误的**