格式文件、分布式文件系统 HDFS 等）的离线分析，比如利用Pandas、Dask 分析数据，利用
等)对实时、时序数据流的运算。还有一类是基于数据库、数据仓库或者其他已存储的数据（CSV
总，对一组数据通过一系列运算得出单一值的过程，这里的运算是指在固定周期内（10s、60s
计算和存储成本。对时序数据的处理大致分为两类。
数据聚合与关联技术
聚合数据有两个层面，一是对数据的聚合运算（计数、平均、抽样等)；二是多维度的聚合
本节关注的是对实时、时序数据（监控数据和运维事件）的聚合。而数据分析属于离线计
本章主要针对时序数据介绍相关的数据聚合与关联技术。
多系列是指多个类别组成的系列。数据关联的结果是将不同系列的数据整合到一起，方便
2．多系列时序数据关联
单系列是指同一个类别组成的系列，比如订单表中订单时间这个维度。聚合的含义就是汇
1．单系列时序数据聚合
在智能运维技术领域，对数据的分析处理非常关键，通常多维数据需要降低维度，以降低
数据聚合
---
## Page 209
10.1.1
数据聚合在整个运维监控系统中所处的位置如图10-1所示。
○Sum：求累计值。
O
OMean:
针对 Timers 类型的数据，
O Multi-Metric Packets:
O
OKey/Value:
支持的数据/事件类型如下。
OCollectd (https://github.com/collectd/collectd）
OStatsite（Statsd 的C语言实现，https://github.com/statsite/statsite）
OStatsd (https://github.com/etsy/statsd)
常见的进行时序数据聚合运算的工具如下。
Histograms：求直方图/柱状图。
Median,P95,P99：求中位数、95%值、99%值。
Standard deviation：求方差。
Min/Max：求最小值/最大值。
Sets：集合型数据。
Timers：时间型数据。
Counter：计数类数据，
Gauges:
Sampling：抽样数据。
聚合运算
求平均值。
：固定值。
：不进行聚合运算，直接存储原值。
可以做如下运算：
：批量数据。
一般会进行求和、累加。
第10章数据聚合与关联技术
183
---
## Page 210
值等，然后发送到后端。Statsd/Statsite支持的后端比较丰富，包括：
周期聚合这些数据，计算出这些数据的总和、最大值、最小值、均值、中位数、P95值和 P99
是在应用程序中通过UDP/TCP的方式发送数据包都非常方便。发送数据包的内容格式如下：
据包直接发送到对应端口即可。无论是使用读取日志的工具（比如Logtailer）来发送数据，还
个考验。
入量和读取量就会比不做聚合时大得多，在海量数据场景下，这对系统复杂度和稳定性都是-
始数据，但在运维监控工作中基本不需要)，读取时也需要读出原始数据后再计算结果，这样写
echo "foo:1lc" | nc -u -w0 xx.xx.xx.xx 8125
如下是最简单的指标发送命令格式，发送一条计数类指标到 Statsd:
Statsd/Statsite 工作模式相对简单，启动后监听UDP/TCP 某个端口，客户端将 UDP/TCP 数
这样就完成了一个指标的发送，Statsd/Statsite 进程收到数据包后，会按照预先设定的计算
说明：-u参数表示 UDP 协议。
:/
可以说，如果没有聚合这一层，我们就不得不存储所有的原始数据（在某些场景下需要原
OF
O
O
O
O
Graphite
Riemann/Bosun
Elasticsearch
Librato
智能运维：从0搭建大规模分布式AIOps系统
OpenTSDB
CloudWatch
Nagios
Ganglia/Zabbix
InfluxDB
图10-1数据聚合在整个运维监控系统中所处的位置
数据采集
—数据聚合
数据存储
---
## Page 211
依赖第三方工具来完成这些工作。如图10-3所示是Collectd的 Plugin 列表（htps://collectd.org/
高的场合，采用 Agent 方式可能很难部署。
数据量下后端的压力较小)。
种选择（小米监控采取的就是这种策略，Open-Falcon的 Agent 完成了很多聚合工作，这样在大
需要采集信息的客户端，再加上它有特别丰富的插件，使得在 Agent 端进行数据聚合也成为一
服务单独部署的，当然也有把 Statsd 部署在客户端的情况），通常Collectd 被当作Agent 部署在
OpenTSDB/InfluxDB），以及进入复杂事件处理流程（如 Riemann/Bosun）进行关联分析等。
Collectd 和 Statsd一样，只是数据聚合工具，没有绘图、告警、分析数据等功能，所以它也
但从另外一个角度来讲，任何 Agent 对系统都或多或少有侵入性，在有些对安全性要求较
Collectd 是另一种风格，相对于 Statsd 的独立（相对独立，在大多数情况下 Statsd 都是作为
〇占用空间小：Statsd客户端非常轻便，不带任何状态，甚至不需要客户端，只要按照协
〇简单：非常容易获取的应用程序，Statsd 协议是基于文本的，可以直接写入和读取。
Statsd作为时序数据的聚合工具具有以下优势。
另外，也可以转化为告警事件（Nagios），存储在时序数据库中进行其他分析（如
后端存储这些指标/数据后，可以转化成图表（典型的如Graphite/Grafana）,如图10-2 所示。
）支持多种语言：有基于Ruby、Python、Java、Erlang、Node、Scala、Go、Haskell等语
Console
言的客户端。
议发送文本指标到Statsd指定端口即可。
之间没有依赖。
低耦合性：基于后台程序运行的应用程序，采用UDP 协议，收集指标和应用程序本身
图10-2Grafana展示效果
第10章数据聚合与关联技术
185
---
## Page 212
务模型中，则有很多维度。
据模型如图10-4所示。
10.1.2
wiki/index.php/Table_of Plugins），其中标记为 Write的就是它支持的后端。
186
这看上去是一维数据，指标是QPS，维度就是Nginx。
我们来看看监控和运维活动中的多维数据，以 Statsd 的 Metric 协议为例;
这里只展示了数据的三个维度：时间、地点、产品，但是在实际应用中，尤其是在复杂业
关于多维数据前面章节介绍过，就是以什么角度来看待、检索、处理数据，典型的多维数
这看上去就包含了多个维度。
Openapi.profile.uncore.tc.db.xxxx.total_count:2301c
Nginx_aps:1001c
智能运维：从0搭建大规模分布式AIOps系统
多维度聚合
WriteTSDB plugin
WriteSensuplugin
WriteRiemannplugin
WriteRedisplugin
Write MongoDBplugin V
WriteLogplugin
WriteKafkaplugin
WriteHTTPplugin
WriteGraphitepluginWrite
product
location
图10-4典型的多维数据模型[2]
仅供非商业用途或交流学习使用
图10-3
Write
Write
仅供非商业用途或交流学习使用
Write
Write
Write
Write
Write
Write
time
Collectd支持的后端
collectd.conf（5)
collectd.conf（5）
collectd.conf（5）
collectd.conf（5）
collectd.conf（5）
collectd.conf（5）
collectd.conf（5）
collectd.conf（5）
→datacell
5
5
5
---
## Page 213
来，中间不用再进行数据转换。
如果使用 Statsd+Graphite/Grafana 进行监控,这种指标的设计方式可以将写入和读取无缝联合起
方式。以上面的Metric为例，可以通过下面的方式在Graphite/Grafana 中组织一个Metirc:
观，Statsd可以按照“.”来分类聚合。使用Graphite/Grafana可以很方便处理这样的Metric 组织
Value:2000
Tags:{interface:user_show, service_pool:webv2_action, location:yf)
Metric: total_count
多维数据的另一种组织方式是用Tag 来扩展维度，比如：
可以看到，Graphite/Grafana 可以自由使用通配符、集合在各个层级进行不同维度的聚合。
XX'XX'XX.XX.dI
图10-5展示了一个维度聚合示例。
Openapi.profile.*.(tc,yf,xd).db.{m7365*,m3360*}.total_count
用“.”分隔的Metric 组织方式，将所有的维度信息放在了指标名中，这样做的好处是很直
Ototal_count：指标名。
O
O
O
XxXX：数据库域名
db：数据库服务。
tc：机房名。
uncore：非核心业务。
profile：性能类指标。
Openapi：业务线。
Openapi.profile. *
所有业务类型
[t.yf.xd}.db.{m7365*,m3360*}.total_.count
图10-5维度聚合示例
三个机房
仅供非商业用途或交流学习使用
仅供非商业用途或交流学习使用
实两个着键字
第10章数据聚合与关联技术
187
---
## Page 214
工干预。这两种方法的原理都相对简单。
由告警触发一些干预动作（如自动扩容、重启、流量切换等)，这样可以直接消除告警，减少人
息，每天上限是多少等）进行告警合并；自动恢复策略就是将告警和相应的干预手段联合起来，
发告警，需要按照一定的策略（一般是时间窗口策略，比如在5分钟内最多发送多少条告警信
收敛到人类可处理的程度（少于10个）呢？接下来我们将介绍一些常用的方法。
干扰；另一方面可以确定主要因素、定位故障。如果每天有上万个报警事件，那么如何做才能
基本上就等于告警无效了。
如果都触发了告警，就变成了噪音，你没有办法快速定位根本原因，一天收到成千上万个告警
10.2
等可以用来处理这类较复杂的 Metric 的聚合和运算，这就需要一定的开发量。
一个业务/服务有问题时，可能会触发多个维度的事件，如接口维度、机房维度、服务池维度等
分指标、提取Tags，然后转换成TSDB 格式存储。
介绍的在指标名中包含维度信息的情况，就需要增加一层（在 Statsd 层或Relay层）来专门拆
库（比如OpenTSDB）就需要按照“Tags”来存储指标，如果使用OpenTSDB，那么对于上面
会导致在某些KV存储系统中无法使用，比如Memcached)，可以任意扩展维度。一些时序数据
度。相对于在指标名里包含维度信息，Tags 方式不受指标名长度的限制（指标名超过255字节
188
告警事件的收敛和聚合一直是运维工作中的重要环节。收敛和聚合一方面可以减少噪音和
带Tags 类的指标信息处理就不太适用Statsd直接计算了，一些实时流式计算框架如 Storm
重复告警的合并就是指当故障发生时，同一个监测点在每个监测周期内都会发现异常并触
○告警分类。
○将告警聚合成关联“事件”。
上面刚刚说了可以扩展多维数据，然而，维度多了也会带来麻烦。比如告警这个场景，当
在Tags字段中，标注了interface（接口）、service_pool（服务池）、location（机房）三个维
Type:count
合并重复的告警。
智能运维：从O搭建大规模分布式AIOps系统
自动恢复策略
降低维度
仅供非商业用途或交流学习使用
---
## Page 215
维度的告警经过几层抽象会被聚合、收敛为少量的事件。
告警的IP属性会被更抽象的“服务池”替换，同样，服务池也可以被“机房”替换，最终各种
发和运维人员定义。如图10-7所示，当某个IP写入队列接口耗时变长（超过阈值）时，这个
所示。
现在我们介绍的是概念聚类算法AOI（Atribute Oriented Induction，基于属性的归纳），如图10-7
度的主要方法就是聚类（Clustering），聚类算法有不少，比如K均值聚类、层次聚类、PCA 等。
服务的抽象、聚焦，可以让我们重点关注业务本身，而不是被各种告警、噪音分散注意力。
维度，总体关注事件的数量仍然是一个有限的集合，这对运维人员来说就是可控的。
度还要稍微多一些。比如哪个机房的哪个服务池的哪个功能有问题，对这5大功能再增加几个
能）上。当然，这是理想的情况，在实际工作中，除了这5大功能，开发和运维人员关心的维
组件、资源都是为之服务的，任何维度的告警都可以被归类到这5大功能（具体影响到哪个功
微博为例：上行功能有发、转、评、赞，下行功能有Feed，就这5 大功能，其他数千个功能、
10.2.1
大量、多维度的告警聚合为少量的“事件”就是降低维度，使之可以被正确处理。降低维
虽然这只是一部分，但比起各种告警的轰炸，已经是可以接受的程度了。“事件”是对业务、