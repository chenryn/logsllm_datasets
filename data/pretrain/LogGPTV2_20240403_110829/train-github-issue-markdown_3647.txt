# Checklist
  * I have verified that the issue exists against the `master` branch of Celery.
  * This has already been asked to the discussion group first.
  * I have read the relevant section in the  
contribution guide  
on reporting bugs.
  * I have checked the issues list  
for similar or identical bug reports.
  * I have checked the pull requests list  
for existing proposed fixes.
  * I have checked the commit log  
to find out if the bug was already fixed in the master branch.
  * I have included all related issues and possible duplicate issues  
in this issue (If there are none, check this box anyway).
## Mandatory Debugging Information
  * I have included the output of `celery -A proj report` in the issue.  
(if you are not able to do this, then at least specify the Celery  
version affected).
  * I have verified that the issue exists against the `master` branch of Celery.
  * I have included the contents of `pip freeze` in the issue.
  * I have included all the versions of all the external dependencies required  
to reproduce this bug.
## Optional Debugging Information
  * I have tried reproducing the issue on more than one Python version  
and/or implementation.
  * I have tried reproducing the issue on more than one message broker and/or  
result backend.
  * I have tried reproducing the issue on more than one version of the message  
broker and/or result backend.
  * I have tried reproducing the issue on more than one operating system.
  * I have tried reproducing the issue on more than one workers pool.
  * I have tried reproducing the issue with autoscaling, retries,  
ETA/Countdown & rate limits disabled.
  * I have tried reproducing the issue after downgrading  
and/or upgrading Celery and its dependencies.
## Related Issues and Possible Duplicates
#### Related Issues
  * None
#### Possible Duplicates
  * None
## Environment & Settings
**Celery version** :  
4.4.0 (cliffs)
**`celery report` Output:**
``` software -> celery:4.4.0 (cliffs) kombu:4.6.7 py:3.7.3 billiard:3.6.2.0
py-amqp:2.5.2 platform -> system:Linux arch:64bit, ELF kernel
version:4.4.0-43-Microsoft imp:CPython loader -> celery.loaders.app.AppLoader
settings -> transport:amqps results:disabled
broker_url:
'amqps://xxxxxxxxxxxxxxxxxx:********@xxx.xxx.xxx.xxx:5671/xxxxxxxxxxxxxx'  
result_extended: True  
worker_send_task_events: True
    # Steps to Reproduce
    ## Required Dependencies
    * **Minimal Python Version**: 3.7.3
    * **Minimal Celery Version**: 4.4.0
    * **Minimal Kombu Version**: 4.6.7
    * **Minimal Broker Version**: N/A or Unknown
    * **Minimal Result Backend Version**: N/A or Unknown
    * **Minimal OS and/or Kernel Version**: Linux xxxx 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014 x86_64 GNU/Linux
    * **Minimal Broker Client Version**: N/A or Unknown
    * **Minimal Result Backend Client Version**: N/A or Unknown
    ### Python Packages
    pip freeze Output:
amqp==2.5.2  
aniso8601==8.0.0  
astroid==2.3.3  
attrs==19.3.0  
billiard==3.6.2.0  
celery==4.4.0  
Click==7.0  
cx-Oracle==7.3.0  
Flask==1.1.1  
flask-restplus==0.13.0  
flask-restx==0.1.0  
Flask-SQLAlchemy==2.4.1  
importlib-metadata==1.5.0  
isort==4.3.21  
itsdangerous==1.1.0  
Jinja2==2.11.1  
jsonschema==3.2.0  
kombu==4.6.7  
lazy-object-proxy==1.4.3  
MarkupSafe==1.1.1  
mccabe==0.6.1  
pkg-resources==0.0.0  
pylint==2.4.4  
pyrsistent==0.15.7  
pytz==2019.3  
PyYAML==5.3  
six==1.14.0  
SQLAlchemy==1.3.13  
typed-ast==1.4.1  
vine==1.3.0  
waitress==1.4.3  
Werkzeug==0.16.1  
wrapt==1.11.2  
zipp==2.1.0
    ### Other Dependencies
    Distro is Debian GNU/Linux 10 \n \l
    ## Minimally Reproducible Test Case
from celery import Celery, group  
from time import sleep
mqconfig = ['rabbitmqhost1', 'rabbitmqhost2', 'rabbitmqhost3']
app = Celery('acdid', broker=mqconfig)
app.conf.result_extended = True  
app.conf.worker_send_task_events = True
@app.task()  
def addacd(id):  
sleep(2)  
results = 'Sucessfully added: {}'.format(id)  
print(results)  
return results
    # Expected Behavior
    After starting my worker instance using celery worker -A acdworker -l info, I should be able to perform a warm shutdown by doing ctrl-c.
    '''
    celery worker -A acdworker -l info
    ^C
    worker: Hitting Ctrl+C again will terminate all running tasks!
    worker: Warm shutdown (MainProcess)
    '''
    # Actual Behavior
    I can start up the celery worker normally, after which it will connect to the broker and begin to process tasks normally. When I go to run ctrl-c and perform a warm shutdown, the worker will start shutting down but then output a backtrace. This backtrace only occurs on this particular machine (Debian WSL environment running on windows 10).
    '''
    celery worker -A acdworker -l info
    worker: Hitting Ctrl+C again will terminate all running tasks!
    worker: Warm shutdown (MainProcess)
    [2020-02-13 13:20:23,632: WARNING/MainProcess] Traceback (most recent call last):
    [2020-02-13 13:20:23,633: WARNING/MainProcess] File "/usr/lib/python3.7/multiprocessing/util.py", line 265, in _run_finalizers
        finalizer()
    [2020-02-13 13:20:23,637: WARNING/MainProcess] File "/usr/lib/python3.7/multiprocessing/util.py", line 189, in __call__
        res = self._callback(*self._args, **self._kwargs)
    [2020-02-13 13:20:23,639: WARNING/MainProcess] File "/home/austin/python_projects/acdid-automation/venv/lib/python3.7/site-packages/billiard/pool.py", line 1697, in _terminate_pool
        inqueue.close()
    [2020-02-13 13:20:23,640: WARNING/MainProcess] AttributeError: 'NoneType' object has no attribute 'close'
    '''