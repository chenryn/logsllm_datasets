\fB\-a\fP，显示的列表中包含所有内建命令，还有命令是否被允许的指示；
如果给出了 \fB\-s\fP，输出被限制为 POSIX \fIspecial\fP 内建命令。
返回值是 0，除非
.I name
不是 shell 内建命令，或者从共享库中加载新的内建命令时出错。
.TP
\fBeval\fP [\fIarg\fP ...]
\fIarg\fP 被读取并连结为单一的命令。这个命令然后被 shell 读取并执行，
它的退出状态被作为
.BR eval
的值返回。如果没有
.IR args ，
或仅仅包含空参数，
.B eval
返回 0。
.TP
\fBexec\fP [\fB\-cl\fP] [\fB\-a\fP \fIname\fP] [\fIcommand\fP [\fIarguments\fP]]
如果指定了
.I command，
它将替换 shell。不会产生新的进程。
.I arguments
成为 \fIcommand\fP 的参数。如果给出了
.B \-l
选项，shell 将在传递给
.IR command
的第 0 个参数前面加上一个连字符 (dash,`-')。这样做和
.IR login (1)
相同。选项
.B \-c
使得命令
.I command
在一个空环境中执行。如果给出了
.B \-a，
shell 会将
.I name
作为第 0 个参数传递给要执行的命令。如果由于某种原因
as the zeroth argument to the executed command.  If
.I command
不能被执行，非交互的 shell 将退出，除非 shell 选项
.B execfail
被设置为允许，这种情况下它返回失败。如果命令不能执行，交互的 shell 返回失败。
如果没有指定
.I command
任何重定向对当前 shell 发生作用，返回值是 0。如果发生重定向错误，返回状态是 1。
.TP
\fBexit\fP [\fIn\fP]
使得 shell 以状态值 \fIn\fP 退出。如果忽略了
.I n，
退出状态是最后执行的命令的退出状态。在 shell 终止前，对
.SM
.B EXIT
的陷阱将被执行。
.TP
\fBexport\fP [\fB\-fn\fP\^] [\fIname\fP[=\fIword\fP]] ...
.PD 0
.TP
.B export \-p
.PD
给出的名称
.I names
被标记为自动地导出到后续执行的命令的环境中。如果给出了
.B \-f
选项，名称
.I names
指的是函数。如果没有给出
.I names，
或者如果给出了
.B \-p
选项，将打印在这个 shell 中被导出的所有名字的列表。选项
.B \-n
使得以此为名的变量的导出属性被删除。
.B export
返回 0，除非遇到了非法的选项，\fIname\fP 之一不是有效的 shell 变量名，
或者给出了
.B \-f
选项，而
.I name
不是一个函数。
.TP
\fBfc\fP [\fB\-e\fP \fIename\fP] [\fB\-nlr\fP] [\fIfirst\fP] [\fIlast\fP]
.PD 0
.TP
\fBfc\fP \fB\-s\fP [\fIpat\fP=\fIrep\fP] [\fIcmd\fP]
.PD
命令修复。第一种形式中，历史列表中从
.I first
到
.I last
范围内的命令都被选取。
.I First
和
.I last
可以指定为字符串 (可以定位最后一个以此字符串开始的命令) 或者数字 (历史列表中
的索引，负数被当作相对当前命令号的偏移)。如果没有指定
.I last，
它在列举时被设为当前命令 (因此
.if n ``fc \-l \-10''
.if t \f(CWfc \-l \-10\fP
将输出最后 10 条命令)，其他情况下被设为
.I first。
如果没有指定
.I first，
它在编辑时被设为前一个命令，列举是设为 \-16。
.sp 1
选项
.B \-n
使得列举时不显示命令号码。选项
.B \-r
将命令顺序进行掉换。如果给出了
.B \-l
选项，命令将列举在标准输出上。否则，将启动
.I ename
给出的编辑器，编辑包含这些命令的文件。如果没有给出
.I ename，
将使用变量
.SM
.B FCEDIT
的值，如果
.SM
.B FCEDIT
没有定义就使用
.SM
.B EDITOR
的值。如果仍然没有定义，将使用
.FN vi。
编辑结束后，被编辑的命令将回显并执行。
.sp 1
第二种形式中，\fIcommand\fP 在每个 \fIpat\fP 的实例被 \fIrep\fP 替换后
都被重新执行。使用这种特性时可以起一个有用的别名：
.if n ``r=fc -s'',
.if t \f(CWr='fc \-s'\fP,
这样输入
.if n ``r cc''
.if t \f(CWr cc\fP
将运行最后的以
.if n ``cc''
.if t \f(CWcc\fP
开头的命令，输入
.if n ``r''
.if t \f(CWr\fP
将重新执行上一个命令。
.sp 1
如果使用第一种形式，返回值是 0，除非遇到了非法的选项，或
.I first
或
.I last
指定的历史行数超出了范围。如果给出了
.B \-e
选项，返回值是最后执行的命令的返回值，或着是失败，如果临时文件中的命令
执行出错。如果使用第二种形式，返回状态是重新执行的命令，除非
.I cmd
没有指定一个有效的历史行，这种情况下
.B fc
返回失败。
.TP
\fBfg\fP [\fIjobspec\fP]
将
.I jobspec
恢复至前台，使它成为当前作业。如果
.I jobspec
不存在，将使用 shell 意义上的当前作业 \fIcurrent job\fP。返回值是
被放到前台的命令的状态，或者是失败，如果在禁用作业控制时运行，或者
在启用作业控制时运行，但
.I jobspec
没有指定有效的作业，或
.I jobspec
指定了没有使用作业控制的作业。
.TP
\fBgetopts\fP \fIoptstring\fP \fIname\fP [\fIargs\fP]
.B getopts
由 shell 程序用来处理位置参数。
.I optstring
包含要识别的选项字符；如果某个字符跟随着冒号，那么这个选项需要一个参数，
需要用空白和它隔离开。冒号和问号字符不能用作选项字符。每次它执行时，
.B getopts
将下一个选项放在 shell 变量
.IR name 
中，如果
.I name
不存在就初始化它；下一个要处理的参数的索引放在变量
.SM
.BR OPTIND
中。每次 shell 或 shell 脚本被执行的时候
.SM
.B OPTIND
被初始化为 1。当某个选项需要参数时，
.B getopts
将那个参数放到变量
.SM
.BR OPTARG 
中。shell 不会自动重置
.SM
.B OPTIND；
在相同的 shell 中，如果要使用新的参数集合而需要多次调用
.B getopts
时，必须手动重置它。
.sp 1
当遇到选项结束的时候，\fBgetopts\fP 以大于 0 的值退出。
\fBOPTIND\fP 被设置为第一个非选项的参数的索引，\fIname\fP 被设置为 ?。
.sp 1
.B getopts
通常解释位置参数，但是如果
.IR args 
中给出了更多参数，
.B getopts
将解释它们。
.sp 1
.B getopts
能以两种方式报告错误。如果
.I optstring
的第一个字符是冒号，将使用
.I silent
安静的错误报告。通常的操作中，遇到非法选项或缺少选项的参数时将打印出
诊断信息。如果变量
.SM
.B OPTERR
被设置为 0，不会显示错误消息，即使
.I optstring
的第一个字符不是冒号。
.sp 1
如果发现了一个非法的选项，
.B getopts
向
.I name
中置入 ?，并且如果不是安静模式的话，打印错误消息并取消
.SM
.BR OPTARG
的定义。如果
.B getopts
是安静模式，找到的选项字符将置入
.SM
.B OPTARG，
不会打印诊断消息。
.sp 1
如果没有找到需要的参数，并且
.B getopts
不是安静模式，将向
.IR name
置入一个问号 (\^\fB?\fP\^)，取消
.SM
.B OPTARG
的定义，打印出诊断消息。如果
.B getopts
是安静模式，那么将向
.I name
置入一个冒号 (\^\fB:\fP\^) 并且
.SM
.B OPTARG
将设置为找到的选项字符。
.sp 1
.B getopts
返回真，如果找到了指定的/未被指定的选项。它返回假，如果遇到了选项结束
或者发生了错误。
.TP
\fBhash\fP [\fB\-lr\fP] [\fB\-p\fP \fIfilename\fP] [\fB\-dt\fP] [\fIname\fP]
对于每个
.IR name ,
通过搜索
.B $PATH
中的目录，找到命令的全路径名并记录它。如果给出了 
.B \-p
选项，不会进行路径搜索，直接将
.I filename
作为命令的全路径名。选项
.B \-r
使得 shell 忘记所有已记录的位置。选项
.B \-d
使得 shell 忘记已记录的 \fIname\fP 的位置。如果给出了
.B \-t
选项，每个 \fIname\fP 对应的全路径名被打印出来。如果给出多个
\fIname\fP 作为 \fB\-t\fP 的参数，\fIname\fP 将在已记录的全路径名
之前被打印出来。选项
.B \-l
使得输出以一种可以重用为输入的格式显示。如果没有给出参数，
或者只给出了 \fB\-l\fP 选项，已记录的命令的信息将被打印出来。
返回真，除非
.I name
没有找到或给出了非法的选项。
.TP
\fBhelp\fP [\fB\-s\fP] [\fIpattern\fP]
显示关于内建命令的有用的信息。如果指定了
.I pattern (模式)，
.B help
给出关于所有匹配
.IR pattern
的命令的详细帮助；否则所有内建命令的帮助和 shell 控制结构将被打印出来。
选项 \fB\-s\fP 限制信息显示为简短的用法概要。
返回 0，除非没有匹配
.IR pattern
的命令。
.TP
\fBhistory [\fIn\fP]
.PD 0
.TP
\fBhistory\fP \fB\-c\fP
.TP
\fBhistory \-d\fP \fIoffset\fP
.TP
\fBhistory\fP \fB\-anrw\fP [\fIfilename\fP]
.TP
\fBhistory\fP \fB\-p\fP \fIarg\fP [\fIarg ...\fP]
.TP
\fBhistory\fP \fB\-s\fP \fIarg\fP [\fIarg ...\fP]
.PD
不带选项的话，显示带行号的命令历史列表。列出的行中含有
.B *
的已经被修改过。参数
.I n
使得只显示最后
.I n
行。如果给出了 \fIfilename\fP，它被用做历史文件名；没有的话，将使用
.SM
.B HISTFILE
的值作为历史文件名。选项如果给出，则具有下列意义：
.RS
.PD 0
.TP
.B \-c
清空历史列表，删除所有条目。
.TP
\fB\-d\fP \fIoffset\fP
删除 \fIoffset\fP 位置的历史条目。
.TP
.B \-a
将 ``新'' 的历史条目 (自当前 \fBbash\fP 会话开始输入的历史命令)
追加到历史文件中。
.TP
.B \-n
将尚未从历史文件中读取的历史条目读入当前历史列表。这些行是当前
\fBbash\fP 会话开始之后，才追加到历史文件中的行。
.TP
.B \-r
读取历史文件的内容，使用它们作为当前历史。
.TP
.B \-w
将当前历史列表写入历史文件，覆盖历史文件的原有内容。
.TP
.B \-p
对后续的 \fIargs\fP 进行历史替换，在标准输出上显示结果。
不会将结果存入历史列表。每个 \fIargs\fP 都必须被引用，来禁止
普通的命令扩展。
.TP
.B \-s
将
.I args
保存到历史列表中，作为单独的条目。历史列表中的最后一个命令在添加
.I args
之前被删除。