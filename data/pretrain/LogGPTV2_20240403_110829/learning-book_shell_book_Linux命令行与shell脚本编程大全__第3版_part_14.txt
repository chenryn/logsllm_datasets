1.1ne3
1 1ne4
1 1.ne5
文件的开头通常不会改变，因此head命令并像tai1命令那样支持-f参数特性。heac命令是
一种查看文件起始部分内容的便捷方法。
---
## Page 78
3.9小结
63
3.9小结
本章涵盖了在shell提示符下操作Linux文件系统的基础知识。一开始我们讨论了bash shell
之后介绍了怎样和shel交互。命令行界面（CLI）采用提示符来表明你可以输入命令。bash shell
提供了很多可用以创建和操作文件的工具。在开始操作文件之前，很有必要先了解一下Linux怎
么存储文件。本章讨论了Linux虚拟目录的基础知识，然后展示了Linux如何引用存储设备。在描
述了Linux文件系统之后，还带你逐步了解了如何使用ca命令在虚拟目录里切换目录。
在介绍如何进人指定目录后，我们又演示了怎样用1s命令列出目录中的文件和子目录。1s
命令有很多参数可用来定制输出内容。可以通过1s命令获得有关文件和目录的信息。
touch命令非常有用，可以创建空文件和变更已有文件的访问时间或修改时间。本章还介绍
了如何使用cp命令将已有文件复制到其他位置。另外还逐步介绍了如何链接文件，给出了一种简
单的方法可以实现在两个位置上拥有同一个文件且不用生成单独的副本。1n命令提供了这种链接
功能。
接者我们讲了怎样用mv命令重命名文件（在Linux中称为移动文件），以及如何用rm命令期除
文件（在Linux中称为移除文件），还介绍了怎样用mkdir和rmdir命令对目录执行相同的任务。
最后，本章以如何查看文件的内容作结。cat、more和less命令可以非常方便地查看文件
全部内容，而且tai1和head命令还可查看文件中的一小部分内容。
下章将继续讨论bashshell的命令，并了解更多管理Linux系统时经常用到的高级系统管理
命令。
---
## Page 79
更多的bashshell命令
本章内容
口管理进程
口获取磁盘统计信息
口挂载新磁盘
口排序数据
口归档数据
3章介绍了Linux文件系统上切换目录以及处理文件和目录的基本知识。文件管理和目
弟录管理是Linuxshell的主要功能之一。不过，在开始脚本编程之前，我们还需要了解一
下其他方面的知识。本章将详细介绍Linux系统管理命令，演示如何通过命令行命令来探查Limux
系统的内部信息，最后介绍一些可以用来操作系统上数据文件的命令。
4.1监测程序
Linux系统管理员面临的最复杂的任务之一就是跟踪运行在系统中的程序一尤其是现在，
图形化桌面集成了大量的应用来生成一个完整的桌面环境。系统中总是运行着大量的程序。
好在有一些命令行工具可以使你的生活轻松一些。本节将会介绍一些能帮你在Limux系统上
管理程序的基本工具及其用法。
4.1.1探查进程
当程序运行在系统上时，我们称之为进程（process）。想监测这些进程，需要熟悉ps命令的
用法。ps命令好比工具中的瑞土军刀，它能输出运行在系统上的所有程序的许多信息，
遗憾的是，随着它的稳健面来的还有复杂性一—有数不清的参数，这或许让ps命令成了最难
掌握的命令。大多数系统管理员在掌握了能提供他们需要信息的一组参数之后，就一直坚持只使
用这组参数。
默认情况下，ps命令并不会提供那么多的信息：
$ ps
---
## Page 80
4.1监测程序
65
PID PTY
TIME CND
3209 pts/0
3081 pt.a/0
00:00:00 pa
ugeq 00=00:00
没什么特别的吧？默认情况下，ps命令只会显示运行在当前控制台下的属于当前用户的进
程。在此例中，我们只运行了bashshell（注意，shell也只是运行在系统上的另一个程序而已）以
及ps命令本身。
上例中的基本输出显示了程序的进程ID（ProcessID，PID）、它们运行在哪个终端（TTY）
以及进程已用的CPU时间。
说明Ds命令叫人头疼的地方（也正是它如此复杂的原因）在于它曾经有两个版本。每个版本都
有自己的命令行参数集，这些参数控制着输出什么信息以及如何显示。最近，Linux开发
人员已经将这两种ps命令格式合并到了单个ps命令中（当然，也加入了他们自己的风格）。
Linux系统中使用的GNUps命令支持3种不同类型的命令行参数：
口Unix风格的参数，前面加单破折线；
口BSD风格的参数，前面不加破折线；
口GNU风格的长参数，前面加双破折线。
下面将进一步解析这3种不同的参数类型，并举例演示它们如何工作。
1. Unix风格的参数
Unix风格的参数是从贝尔实验室开发的AT&TUnix系统上原有的ps命令继承下来的。这些参
数如表4-1所示。
表4-1Unix风格的ps命令参数
参
数
描
述
-A
显示所有进程
-
呈示与指定参数不符的所有进程
- 3
显示除控制进程（session leader°）和无终端进程外的所有进程
d
量示除控制进程外的所有进程
e
呈示所有进程
-C cndliat
显示包含在cmdliac列表中的进程
G gzpliat
量示组ID在gzplist列表中的进程
- userllst
显示属主的用户ID在uaerliac列表中的进程
-9 gzp1fet
显示会语或组ID在gzplist列表中的进程°
aTTPTd d-
显示PID在pid1isc列表中的进程
①关于sessioe leader的概念，可参考（Unix环境高级编程（第3版））第9章的内容。
②这个在不同的Limx发行版中可能不尽相同，有的发行版中grplLst代表会话ID,有的发行版中grp1ist代表有效组ID。
---
## Page 81
66
第4章
更多的 bash shell命令
（续）
数
描
述
5 sesslist
显示会话ID在aesalia:列表中的进程
-t tty2igt
星示终端ID在ttylisc列表中的进程
- userlfst
显示有效用户ID在userlist列表中的进程
显示更多额外输出（相对-[参数面言）
-0 fozxac
显示默认的输出列以及fozmac列表指定的特定列
-H
显示进程的安全信息
-c
显示进程的额外调度器信息
-f
显示完整格式的输出
-J
显示任务信息
-1
显示长列表
-o fozmat
仅显示由fozmac指定的列
-Y
不要显示进程标记（processflag，表明进程状志的标记）
-Z
显示安全标签（security comtext）“信息
-日
用层级格式来显示进程（树状，用来显示父进程）
-n naneliat
定义了NCHAB列显示的值
采用宽输出模式，不限宽度显示
-1
显示进程中的线程
显示ps命令的版本号
上面给出的参数已经很多了，不过还有很多。使用ps命令的关键不在于记住所有可用的参数，
而在于记住最有用的那些参数。大多数Linux系统管理员都有自己的一组参数，他们会牢牢记住
这些用来提取有用的进程信息的参数。举个例子，如果你想查看系统上运行的所有进程，可用-ef
参数组合（ps命令允许你像这样把参数组合在一起）。
$ ps
 -ef
UID
PID
PPID
A& 3KI4S 3
TIXE CKD
root
0
0 11 :29 ?
2
0 11:29 ?
00:00:01 1n1t [5]
root
O
0 11:29 ?
00 =00:00 [nl gzat:1on/0]
00 :00 :0o [kthxeadd]
root
2
root
2
0 11 :29
00 =00:0o [ksoftixgd/0]
root
5
2
0 11:29 ?
00 :0o:0o [watchdog/0]
root
2
0 11 :29 ?
root
0 11 :29 ?
00 =00:00 [khe1pex]
00 :00:0o [eventa/0]
47
7
2
root
2
0 11:29 ?
00 :00:00 [kb1ockd/0]
root
4 8
11 : 29
00 =00:00 [kacpid]
68
2349
1981
1
0E= 0
00:00:00 sshd: r1ch [pxiv]
pTeu 00=00=00
root
r1ch
8L0 E
3080
0 12:00 ?
3078
0 12:00 ?
00:00:00 sshd: r1ch9pts/0
r1ch
r1 ch
4445
3081
3081
30 80
0/d Et E
0 12 : 00
 ptα/0
- 8d 00=00=00
00 :00 : 00 -bash
① security context叫|security label，是SELinux采用的声明资源的—种机制。
---
## Page 82
4.1监测程序
67
上例中，我们略去了输出中的不少行，以节约空间。但如你所见，Linux系统上运行着很多
进程。这个例子用了两个参数：-e参数指定显示所有运行在系统上的进程；-f参数则扩展了输
出，这些扩展的列包含了有用的信息。
口UID：启动这些进程的用户。
PID：进程的进程ID。
口PPID：父进程的进程号（如果该进程是由另一个进程启动的）。
口C：进程生命周期中的CPU利用率。
口STIME：进程启动时的系统时间。
口TTY：进程启动时的终端设备。
口TIME：运行进程需要的累计CPU时间。
口CMD：启动的程序名称。
上例中输出了合理数量的信息，这也正是大多数系统管理员希望看到的。如果想要获得更多
的信息，可采用-1参数，它会产生一个长格式输出。
F SUID PIDPPIDC PRINI ADDR SZ WCHAN TTY
$ pe -]
00: 00:00 lbash
TIME CHD
0R5
0S
500 44633081 1800 -1116 -
500 3081
3080
080
0-
1173 wait pts/0
pts/0
00: 00:00 ps
注意使用了-1参数之后多出的那些列。
口F：内核分配给进程的系统标记。
口S：进程的状态（O代表正在运行；S代表在休眠；R代表可运行，正等待运行：Z代表僵
化，进程已结束但父进程已不存在；T代表停止）。
口PRI：进程的优先级（越大的数字代表越低的优先级）。
口NI：谦让度值用来参与决定优先级。
ADDR：进程的内存地址
口SZ：假如进程被换出，所需交换空间的大致大小。
WCHAN：进程休眠的内核函数的地址。
2.BSD风格的参数
了解了Unix风格的参数之后，我们来一起看一下BSD风格的参数。伯克利软件发行版
（Berkeley software distribution，BSD）是加州大学伯克利分校开发的一个Unix版本。它和AT&T
Unix系统有许多细小的不同，这也导致了多年的Unix争论。BSD版的ps命令参数如表4-2所示。
表4-2BSD风格的pa命令参数
参
描述
显示跟当前终端关联的所有进程
a
显示跟任意终端关联的所有进程
显示所有的进程，包括控制进程
仅显示运行中的进程
---
## Page 83
68
第4章
更多的bash shell命令
（续）
描