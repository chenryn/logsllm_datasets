        -   将 `ipaadmin_password`{.literal} 变量设置为 IdM
            `admin`{.literal} 的密码。
        -   将 `name`{.literal} 变量设为 [**testing_group**]{.strong}。
        -   将 `automember_type`{.literal} 变量设为
            [**group**]{.strong}。
        -   确保 `state`{.literal} 变量设置为 `absent`{.literal}。
        -   确保 `action`{.literal} 变量设为 `member`{.literal}。
        -   将 `inclusive`{.literal} `key`{.literal} 变量设为
            `initials`{.literal}。
        -   将 `inclusive`{.literal} `expression`{.literal} 变量设为
            [**dp**]{.strong}。
        :::
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Automember user group rule member absent
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure an automember condition for a user group is absent
        ipaautomember:
          ipaadmin_password: Secret123
          name: testing_group
          automember_type: group
          state: absent
          action: member
          inclusive:
            - key: initials
              expression: dp
    ```
5.  保存这个文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory automember-usergroup-rule-absent.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 IdM 管理员身份登录。
    ``` literallayout
    $ kinit admin
    ```
2.  查看自动成员组：
    ``` literallayout
    $ ipa automember-show --type=group testing_group
     Automember Rule: testing_group
    ```
:::
输出中没有 `Inclusive Regex: initials=dp`{.literal} 条目确认
[**testing_group**]{.strong} 自动成员规则不包含指定的条件。
::: itemizedlist
**其它资源**
-   请参阅 [使用 IdM CLI
    将自动成员规则应用到现有条目](#automating-group-membership-using-idm-cli_managing-users-groups-hosts.html#applying-automember-rules-to-existing-entries-using-idm-cli_automating-group-membership-using-idm-cli "使用 IdM CLI 将自动成员规则应用到现有条目"){.link}。
-   查看
    [自动化组成员资格的好处](#automating-group-membership-using-idm-cli_managing-users-groups-hosts.html#benefits-of-automatic-group-membership_automating-group-membership-using-idm-cli "自动化组成员资格的好处"){.link}
    和
    [自动成员规则](#automating-group-membership-using-idm-cli_managing-users-groups-hosts.html#automember-rules_automating-group-membership-using-idm-cli "自动成员规则"){.link}
    。
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-automember.md`{.literal} 文件。
-   请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/automember`{.literal}
    目录。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-automate-group-membership-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-that-an-automember-rule-for-an-idm-user-group-is-absent_using-ansible-to-automate-group-membership-in-idm}使用 Ansible 确保 IdM 用户组的自动成员规则不存在 {.title}
:::
以下流程描述了如何使用 Ansible playbook 确保身份管理(IdM)组的
`自动成员`{.literal} 规则不存在。在示例中，确保
[**testing_group**]{.strong} 组的 `automember`{.literal} 规则不存在。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
删除自动成员规则也会删除与规则相关的所有条件。要从规则中只删除特定的条件，请参阅
[使用 Ansible 确保条件在 IdM
用户组自动成员规则中不存在](#using-ansible-to-automate-group-membership-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-that-a-condition-is-absent-from-an-idm-user-group-automember-rule_using-ansible-to-automate-group-membership-in-idm "使用 Ansible 确保条件在 IdM 用户组自动成员规则中不存在"){.link}。
:::
::: itemizedlist
**先决条件**
-   您需要知道 IdM `admin`{.literal} 密码。
-   您已配置了符合以下要求的 Ansible 控制节点：
    ::: itemizedlist
    -   您使用 Ansible 版本 2.8 或更高版本。
    -   您已安装
        [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
        软件包。
    -   在 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong}
        目录中，您使用配置这些选项的 IdM
        服务器的完全限定域名（FQDN）创建了一个 [Ansible
        清单文件](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html "第 22 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}。
    :::
:::
::: orderedlist
**步骤**
1.  进入您的 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  复制位于
    `/usr/share/doc/ansible-freeipa/playbooks/automember/`{.literal}
    目录中的 `automember-group-absent.yml`{.literal} Ansible playbook
    文件：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/automember/automember-group-absent.yml automember-group-absent-copy.yml
    ```
3.  打开 `automember-group-absent-copy.yml`{.literal} 文件进行编辑。
4.  通过在 `ipaautomember`{.literal}
    任务部分中设置以下变量来调整该文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM
        `admin`{.literal} 的密码。
    -   将 `name`{.literal} 变量设为 [**testing_group**]{.strong}。
    -   将 `automember_type`{.literal} 变量设为 [**group**]{.strong}。
    -   确保 `state`{.literal} 变量设置为 `absent`{.literal}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Automember group absent example
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure group automember rule admins is absent
        ipaautomember:
          ipaadmin_password: Secret123
          name: testing_group
          automember_type: group
          state: absent
    ```
5.  保存这个文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory automember-group-absent.yml
    ```
:::
::: itemizedlist
**其它资源**
-   查看
    [自动化组成员资格的好处](#automating-group-membership-using-idm-cli_managing-users-groups-hosts.html#benefits-of-automatic-group-membership_automating-group-membership-using-idm-cli "自动化组成员资格的好处"){.link}
    和
    [自动成员规则](#automating-group-membership-using-idm-cli_managing-users-groups-hosts.html#automember-rules_automating-group-membership-using-idm-cli "自动成员规则"){.link}
    。
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-automember.md`{.literal} 文件。
-   请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/automember`{.literal}
    目录。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-automate-group-membership-in-idm_managing-users-groups-hosts.html#using-ansible-to-ensure-that-a-condition-is-present-in-an-idm-host-group-automember-rule_using-ansible-to-automate-group-membership-in-idm}使用 Ansible 确保 IdM 主机组自动成员规则中存在条件 {.title}
:::
本节描述了如何使用 Ansible 确保 IdM
主机组自动成员规则中的条件存在。示例描述了如何确保 `FQDN`{.literal} 为
[**.\*.idm.example.com**]{.strong} 的主机是
[**primary_dns_domain_hosts**]{.strong} 主机组的成员，以及
`FQDN`{.literal} 为 [**.\*.example.org**]{.strong} 的主机不是
[**primary_dns_domain_hosts**]{.strong} 主机组的成员。
::: itemizedlist
**先决条件**
-   您需要知道 IdM `admin`{.literal} 密码。
-   IdM 中存在 [**primary_dns_domain_hosts**]{.strong}
    主机组和自动成员主机组规则。
-   您已配置了符合以下要求的 Ansible 控制节点：
    ::: itemizedlist
    -   您使用 Ansible 版本 2.8 或更高版本。
    -   您已安装
        [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
        软件包。
    -   在 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong}
        目录中，您使用配置这些选项的 IdM
        服务器的完全限定域名（FQDN）创建了一个 [Ansible
        清单文件](#preparing-your-environment-for-managing-idm-using-ansible-playbooks_managing-users-groups-hosts.html "第 22 章 准备您的环境以使用 Ansible playbook 管理 IdM"){.link}。
    :::
:::
::: orderedlist
**步骤**
1.  进入您的 [**\~/[*MyPlaybooks*]{.emphasis}/**]{.strong} 目录：
    ``` literallayout
    $ cd ~/MyPlaybooks/
    ```
2.  复制位于
    `/usr/share/doc/ansible-freeipa/playbooks/automember/`{.literal}
    目录中的 `automember-hostgroup-rule-present.yml`{.literal} Ansible
    playbook 文件：
    ``` literallayout
    $ cp /usr/share/doc/ansible-freeipa/playbooks/automember/automember-hostgroup-rule-present.yml automember-hostgroup-rule-present-copy.yml
    ```
3.  打开 `automember-hostgroup-rule-present-copy.yml`{.literal}
    文件进行编辑。
4.  通过在 `ipaautomember`{.literal}
    任务部分中设置以下变量来调整该文件：
    ::: itemizedlist
    -   将 `ipaadmin_password`{.literal} 变量设置为 IdM
        `admin`{.literal} 的密码。
    -   将 `name`{.literal} 变量设为
        [**primary_dns_domain_hosts**]{.strong}。
    -   将 `automember_type`{.literal} 变量设为
        [**hostgroup**]{.strong}。
    -   确保 `state`{.literal} 变量设置为 `present`{.literal}。
    -   确保 `action`{.literal} 变量设为 `member`{.literal}。
    -   确保 `inclusive`{.literal} `key`{.literal} 变量设为
        `fqdn`{.literal}。
    -   将对应的 `inclusive`{.literal} `expression`{.literal} 变量设为
        [**.\*.idm.example.com**]{.strong}。
    -   将 `exclusive`{.literal} `key`{.literal} 变量设为
        `fqdn`{.literal}。
    -   将对应的 `exclusive`{.literal} `expression`{.literal} 变量设为
        [**.\*.example.org**]{.strong}。
    :::
    这是当前示例修改的 Ansible playbook 文件：
    ``` literallayout
    ---
    - name: Automember user group rule member present
      hosts: ipaserver
      become: true
      tasks:
      - name: Ensure an automember condition for a user group is present
        ipaautomember:
          ipaadmin_password: Secret123
          name: primary_dns_domain_hosts
          automember_type: hostgroup
          state: present
          action: member
          inclusive:
            - key: fqdn
              expression: .*.idm.example.com
          exclusive:
            - key: fqdn
              expression: .*.example.org
    ```
5.  保存这个文件。
6.  运行指定 playbook 文件和清单文件的 Ansible playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory automember-hostgroup-rule-present-copy.yml
    ```
:::
::: itemizedlist
**其它资源**
-   请参阅 [使用 IdM CLI
    将自动成员规则应用到现有条目](#automating-group-membership-using-idm-cli_managing-users-groups-hosts.html#applying-automember-rules-to-existing-entries-using-idm-cli_automating-group-membership-using-idm-cli "使用 IdM CLI 将自动成员规则应用到现有条目"){.link}。
-   查看
    [自动化组成员资格的好处](#automating-group-membership-using-idm-cli_managing-users-groups-hosts.html#benefits-of-automatic-group-membership_automating-group-membership-using-idm-cli "自动化组成员资格的好处"){.link}
    和
    [自动成员规则](#automating-group-membership-using-idm-cli_managing-users-groups-hosts.html#automember-rules_automating-group-membership-using-idm-cli "自动成员规则"){.link}
    。
-   请参阅 `/usr/share/doc/ansible-freeipa/`{.literal} 目录中的
    `README-automember.md`{.literal} 文件。
-   请参阅
    `/usr/share/doc/ansible-freeipa/playbooks/automember`{.literal}
    目录。
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-automate-group-membership-in-idm_managing-users-groups-hosts.html#_additional_resources_3}其它资源 {.title}
:::
::: itemizedlist
-   [使用 Ansible playbook
    管理用户帐户](#managing-user-accounts-using-Ansible-playbooks_managing-users-groups-hosts.html "第 4 章 使用 Ansible playbook 管理用户帐户"){.link}
-   [使用 Ansible playbook
    管理主机](#managing-hosts-using-Ansible-playbooks_managing-users-groups-hosts.html "第 32 章 使用 Ansible playbook 管理主机"){.link}
-   [使用 Ansible playbook
    管理用户组](#managing-user-groups-using-ansible-playbooks_managing-users-groups-hosts.html "第 13 章 使用 Ansible playbook 管理用户组"){.link}
-   [使用 IdM CLI
    管理主机组](#managing-host-groups-using-Ansible-playbooks_managing-users-groups-hosts.html "第 35 章 使用 Ansible playbook 管理主机组"){.link}
:::
:::
:::
[]{#delegating-permissions-to-user-groups-to-manage-users-using-idm-cli_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#delegating-permissions-to-user-groups-to-manage-users-using-idm-cli_managing-users-groups-hosts.html#delegating-permissions-to-user-groups-to-manage-users-using-idm-cli_managing-users-groups-hosts}第 17 章 将权限委派给用户组，来使用 IdM CLI 管理用户 {.title}
:::
委派是 IdM 中的访问控制方法之一，以及自助服务规则和基于角色的访问控制
(RBAC)。您可以使用委派（delegation）为一组用户分配权限，以管理另一组用户的条目。
本节涵盖了以下主题：
::: itemizedlist
-   [委派规则](#delegating-permissions-to-user-groups-to-manage-users-using-idm-cli_managing-users-groups-hosts.html#delegation-rules_delegating-permissions-to-user-groups-to-manage-users-using-idm-cli "委派规则"){.link}
-   [使用 IdM CLI