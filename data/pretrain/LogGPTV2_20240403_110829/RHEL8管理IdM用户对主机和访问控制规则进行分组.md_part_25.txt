        提供子树条目；然后，过滤器以这个子树条目下的每个条目为目标。提供现有的子树条目；\--
        `subtree`{.literal} 不接受通配符或不存在的域名(DN)。在
        目录中包括 DN。\
        因为 IdM 使用简化的扁平目录树结构，`所以 --subtree`{.literal}
        可用于将某些类型的条目作为目标，如自动挂载位置，它们是容器或父条目供其他配置使用。例如：
        ``` literallayout
        $ ipa permission-add "manage automount locations" --subtree="ldap://ldap.example.com:389/cn=automount,dc=example,dc=com" --right=write --attrs=automountmapname --attrs=automountkey --attrs=automountInformation
        ```
        ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
        ### 注意 {.title}
        type `和`{.literal} `--subtree`{.literal}
        选项是互斥的：您可以看到 `--type 中包含`{.literal} 过滤器是
        `--subtree 的`{.literal} 简化，目的是使管理员的工作更为简单。
        :::
    -   `--filter`{.literal} 使用 LDAP 过滤器来识别权限应用到的条目。\
        IdM 自动检查给定过滤器的有效性。该过滤器可以是任何有效的 LDAP
        过滤器，例如：
        ``` literallayout
        $ ipa permission-add "manage Windows groups" --filter="(!(objectclass=posixgroup))" --right=write --attrs=description
        ```
    -   `--memberOf 检查组是否存在后，将目标过滤器设置为`{.literal}
        给定组的成员。例如，要让拥有此权限的用户修改 engineer
        组成员的登录 shell：
        ``` literallayout
        $ ipa permission-add ManageShell --right="write" --type=user --attr=loginshell --memberof=engineers
        ```
    -   `--Target`{.literal} Group
        在检查组存在后将目标设置为指定的用户组。例如，要让那些拥有权限的学员在
        engineer 组中写入 member 属性（这样他们可以添加或删除成员）：
        ``` literallayout
        $ ipa permission-add ManageMembers --right="write" --subtree=cn=groups,cn=accounts,dc=example,dc=test --attr=member --targetgroup=engineers
        ```
    -   另外，您还可以指定目标域名(DN)：\
        ::: itemizedlist
        -   `--target`{.literal} 指定要将权限应用到的 DN。可接受通配符.
        -   `--targetto`{.literal} 指定条目可移动到的 DN 子树。
        -   `--targetfrom`{.literal} 指定可从中移动条目的 DN 子树。
        :::
    :::
:::
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-in-idm-using-the-cli_managing-users-groups-hosts.html#command-options-for-existing-permissions_managing-role-based-access-controls-in-idm-using-the-cli}现有权限的命令选项 {.title}
:::
根据需要，使用以下变体修改现有权限：
::: itemizedlist
-   要编辑现有权限，请使用 `ipa permission-mod`{.literal}
    命令。您可以使用与 添加权限相同的命令选项。
-   要查找现有权限，请使用 `ipa permission-find`{.literal}
    命令。您可以使用与 添加权限相同的命令选项。
-   要查看特定权限，请使用 `ipa permissions-show`{.literal} 命令。\
    raw `参数`{.literal} 显示生成的原始 389-ds ACI。例如：
    ``` literallayout
     $ ipa permission-show  --raw
    ```
-   `ipa permissions-del`{.literal} 命令完全删除权限。
:::
::: title
**其它资源**
:::
有关 `ipa 权限`{.literal} 命令的详情，请参考 ipa man page 和
`ipa help`{.literal} 命令。
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-in-idm-using-the-cli_managing-users-groups-hosts.html#managing-idm-privileges-in-the-cli_managing-role-based-access-controls-in-idm-using-the-cli}在 CLI 中管理 IdM 权限 {.title}
:::
本节论述了如何使用命令行界面(CLI)管理身份管理(IdM)权限。
::: itemizedlist
**先决条件**
-   管理 IdM 或 [**User Administrator**]{.strong} 角色的管理员特权。
-   一个活跃的 Kerberos 票据。[详情请参阅使用 kinit 手动登录到
    IdM。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-kinit-to-log-in-to-ipa_logging-in-to-ipa-from-the-command-line){.link}
-   现有权限.[有关权限的详情，请参阅在 CLI 中管理 IdM
    权限](#managing-role-based-access-controls-in-idm-using-the-cli_managing-users-groups-hosts.html#managing-idm-permissions-in-the-cli_managing-role-based-access-controls-in-idm-using-the-cli "在 CLI 中管理 IdM 权限"){.link}。
:::
::: orderedlist
**流程**
1.  使用 `ipa privilege-add 命令添加`{.literal} 权限条目\
    例如，添加名为 [*管理文件系统*]{.emphasis} 的特权并带有描述：
    ``` literallayout
    $ ipa privilege-add "managing filesystems" --desc="for filesystems"
    ```
2.  使用 `privilege-add-permission`{.literal}
    命令为权限组分配所需的权限\
    例如，将名为 [*管理自动挂载*]{.emphasis} 的权限添加至
    [*管理文件系统*]{.emphasis} 的权限 [*中*]{.emphasis} ：
    ``` literallayout
    $ ipa privilege-add-permission "managing filesystems" --permissions="managing automount" --permissions="managing ftp services"
    ```
:::
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-in-idm-using-the-cli_managing-users-groups-hosts.html#command-options-for-existing-privileges_managing-role-based-access-controls-in-idm-using-the-cli}现有权限的命令选项 {.title}
:::
根据需要，使用以下变体修改现有权限：
::: itemizedlist
-   若要修改现有的特权，可使用 `ipa privilege-mod`{.literal} 命令。
-   要查找现有的特权，请使用 `ipa privilege-find`{.literal} 命令。
-   若要查看特定的特权，可使用 `ipa privilege-show`{.literal} 命令。
-   `ipa privilege-remove-permission`{.literal}
    命令从特权中删除一个或多个权限。
-   `ipa privilege-del`{.literal} 命令完全删除特权。
:::
::: title
**其它资源**
:::
有关 `ipa 权限命令`{.literal} 的详情，请参考 ipa man page 和
`ipa help`{.literal} 命令。
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-in-idm-using-the-cli_managing-users-groups-hosts.html#managing-idm-roles-in-the-cli_managing-role-based-access-controls-in-idm-using-the-cli}在 CLI 中管理 IdM 角色 {.title}
:::
本节论述了如何使用命令行界面(CLI)管理身份管理(IdM)角色。
::: itemizedlist
**先决条件**
-   管理 IdM 或 [**User Administrator**]{.strong} 角色的管理员特权。
-   一个活跃的 Kerberos 票据。[详情请参阅使用 kinit 手动登录到
    IdM。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_identity_management/index#using-kinit-to-log-in-to-ipa_logging-in-to-ipa-from-the-command-line){.link}
-   现有特权.[有关权限的详情，请参阅在 CLI 中管理 IdM
    权限](#managing-role-based-access-controls-in-idm-using-the-cli_managing-users-groups-hosts.html#managing-idm-privileges-in-the-cli_managing-role-based-access-controls-in-idm-using-the-cli "在 CLI 中管理 IdM 权限"){.link}。
:::
::: orderedlist
**流程**
1.  使用 `ipa role-add`{.literal} 命令添加新角色条目：
    ``` literallayout
    $ ipa role-add --desc="User Administrator" useradmin
    ------------------------
    Added role "useradmin"
    ------------------------
    Role name: useradmin
    Description: User Administrator
    ```
2.  使用 `ipa role-add-privilege`{.literal} 命令为角色添加所需的权限：
    ``` literallayout
    $ ipa role-add-privilege --privileges="user administrators" useradmin
    Role name: useradmin
    Description: User Administrator
    Privileges: user administrators
    ----------------------------
    Number of privileges added 1
    ----------------------------
    ```
3.  使用 `ipa role-add-member`{.literal}
    命令将所需的成员添加到角色中。允许的成员类型有：用户、组、主机和主机组。\
    例如，将名为 [*useradmins*]{.emphasis} 的组添加到之前创建的
    [*useradmin*]{.emphasis} 角色中：
    ``` literallayout
    $ ipa role-add-member --groups=useradmins useradmin
    Role name: useradmin
    Description: User Administrator
    Member groups: useradmins
    Privileges: user administrators
    -------------------------
    Number of members added 1
    -------------------------
    ```
:::
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-in-idm-using-the-cli_managing-users-groups-hosts.html#command-options-for-existing-rolesmanaging-role-based-access-controls-in-idm-using-the-cli}现有角色的命令选项 {.title}
:::
根据需要，使用以下变体修改现有角色：
::: itemizedlist
-   若要修改现有角色，可使用 `ipa role-mod`{.literal} 命令。
-   要查找现有的角色，请使用 `ipa role-find`{.literal} 命令。
-   要查看特定的角色，请使用 `ipa role-show`{.literal} 命令。
-   若要从角色中删除成员，可使用 `ipa role-remove-member`{.literal}
    命令。
-   `ipa role-remove-privilege`{.literal}
    命令从角色中删除一个或多个特权。
-   `ipa role-del`{.literal} 命令可以完全删除角色。
:::
::: title
**其它资源**
:::
有关 `ipa 角色`{.literal} 命令的详情，请参考 ipa man page 和
`ipa help`{.literal} 命令。
:::
:::
[]{#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html}
::: chapter
::: titlepage
# []{#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts}第 19 章 使用 IdM Web UI 管理基于角色的访问控制 {.title}
:::
本章介绍了身份管理(IdM)中的基于角色的访问控制，并描述了 Web 界面(Web
UI)中的以下操作：
::: itemizedlist
-   [管理权限](#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html#managing-permissions-in-the-idm-web-ui_managing-role-based-access-controls-using-the-idm-web-ui "在 IdM Web UI 中管理权限"){.link}
-   [管理权限](#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html#managing-privileges-in-the-idm-web-ui_managing-role-based-access-controls-using-the-idm-web-ui "在 IdM Web UI 中管理权限"){.link}
-   [管理角色](#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html#managing-roles-in-the-idm-web-ui_managing-role-based-access-controls-using-the-idm-web-ui "在 IdM Web UI 中管理角色"){.link}
:::
::: section
::: titlepage
# []{#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html#role-based-access-control-in-idm-webui_managing-role-based-access-controls-using-the-idm-web-ui}IdM 中的基于角色的访问控制 {.title}
:::
与自助服务和委派访问控制相比，IdM
中的基于角色的访问控制(RBAC)向用户授予完全不同的授权。
基于角色的访问控制由三个部分组成：
::: itemizedlist
-   [**权限授予执行特定任务的权利**]{.strong}，如添加或删除用户、修改组、启用读取访问等。
-   [**权限结合权限**]{.strong}，例如添加新用户所需的所有权限。
-   [**角色向用户**]{.strong}、用户组、主机或主机组授予一组特权。
:::
::: section
::: titlepage
## []{#managing-role-based-access-controls-using-the-idm-web-ui_managing-users-groups-hosts.html#permissions-in-idm_role-based-access-control-in-idm-webui}IdM 中的权限 {.title}
:::
权限是基于角色的访问控制的最低级别单元，它们定义这些操作所应用到的 LDAP
条目。与构建块类似，可以根据需要对尽可能多的权限分配权限。\
[**一个或多个权利定义了允许的操作**]{.strong} ：
::: itemizedlist
-   `写入`{.literal}
-   `读取`{.literal}
-   `search`{.literal}
-   `compare`{.literal}
-   `add`{.literal}
-   `delete`{.literal}
-   `all`{.literal}
:::
[**这些操作适用于三个基本目标**]{.strong} ：
::: itemizedlist
-   `子树`{.literal} ：域名(DN)；此 DN 下的子树
-   `目标过滤器`{.literal} ：LDAP 过滤器
-   `目标`{.literal} ：带有可能通配符的 DN 指定条目
:::
此外，以下方便选项可设置对应的属性：
::: itemizedlist
-   `类型`{.literal} ：对象类型（用户、组等）；设置 `子树`{.literal}
    `和目标过滤器`{.literal}
-   `member`{.literal} Of：组成员；设置 `目标过滤器`{.literal}
-   `TargetGroup：`{.literal}
    授予修改特定组的权限（如授予管理组成员资格的权限）；设置
    `目标`{.literal}
:::
使用 IdM
权限，您可以控制哪些用户有权访问哪些对象，甚至控制这些对象的属性。IdM
允许您允许或阻止单个属性，或更改特定 IdM 功能（如用户、组或
sudo）的所有可见性，适用于所有匿名用户、所有经过身份验证的用户，或者只更改一组特定的特权用户。\
例如，如果管理员只想将用户或组的访问权限限制到这些用户或组需要访问的特定部分，并且使其他部分完全隐藏于他们，此方法的灵活性对管理员很有用。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
权限不能包含其他权限。