# Chromium V8 JavaScript引擎远程代码执行漏洞分析讨论
##### 译文声明
本文是翻译文章
译文仅供参考，具体内容表达以及含义原文为准。
作者：frust@360 Noah Lab
## 0x01-概述
2021年4月13日，安全研究人员[Rajvardhan
Agarwal](https://twitter.com/r4j0x00/status/1381643526010597380)在推特公布了本周第一个远程代码执行（RCE）的0Day漏洞，该漏洞可在当前版本（89.0.4389.114）的谷歌Chrome浏览器上成功触发。Agarwal公布的漏洞，是基于Chromium内核的浏览器中V8
JavaScript引擎的远程代码执行漏洞，同时还发布了该漏洞的[PoC](https://github.com/r4j0x00/exploits/tree/master/chrome-0day)。
2021年4月14日，360高级攻防实验室安全研究员[frust](https://twitter.com/frust93717815)公布了本周第二个[Chromium
0day](https://github.com/avboy1337/1195777-chrome0day/blob/main/1195777.html)(Issue
1195777)以及Chrome 89.0.4389.114的poc视频验证。该漏洞会影响当前最新版本的Google Chrome
90.0.4430.72，以及Microsoft Edge和其他可能基于Chromium的浏览器。
Chrome浏览器沙盒可以拦截该漏洞。但如果该漏洞与其他漏洞进行组合，就有可能绕过Chrome沙盒。
## 0x02-漏洞PoC
目前四个漏洞[issue
1126249](https://bugs.chromium.org/p/chromium/issues/detail?id=1126249)、[issue
1150649](https://bugs.chromium.org/p/chromium/issues/detail?id=1150649)、issue
1196683、issue
1195777的exp均使用同一绕过缓解措施手法（截至文章发布，后两个issue尚未公开），具体细节可参考[文章](https://faraz.faith/2021-01-07-cve-2020-16040-analysis/)。
基本思路是创建一个数组，然后调用shift函数构造length为-1的数组，从而实现相对任意地址读写。issue 1196683中关键利用代码如下所示。
    function foo(a) {
    ......
    	if(x==-1) x = 0;
    	var arr = new Array(x);//---------------------->构造length为-1数组
    	arr.shift();
    ......
    }
issue 1195777中关键利用代码如下所示：
    function foo(a) {
        let x = -1;
        if (a) x = 0xFFFFFFFF;
        var arr = new Array(Math.sign(0 - Math.max(0, x, -1)));//---------------------->构造length为-1数组
        arr.shift();
        let local_arr = Array(2);
        ......
    }
参考[issue
1126249](https://bugs.chromium.org/p/chromium/issues/detail?id=1126249)和[issue
1150649](https://bugs.chromium.org/p/chromium/issues/detail?id=1150649)中关键poc代码如下所示，其缓解绕过可能使用同一方法。
    //1126249
    function jit_func(a) {
    	.....
        v5568 = Math.sign(v19229) 