from left of Figure 7, encryption and decryption in Select-
mode has the same overhead as Cut-mode. This result is
the same with our theoretical analysis.
Next, we show time consumption of four functions, Set-
up, KeyGen, Encrypt and Decrypt, under diﬀerent size of
subsets (from 10 to 100) in right of Figure 7. In this exper-
iment, we require two functions, Setup and GenKey, deal
with all elements in a given subsets. Their overheads are
proportional to the subset size but are still small. From this
ﬁgure, the overhead of Setup or KeyGen is far less than that
of encryption and decryption. In summary, our experiments
show that our SBE scheme is simple, easy-to-implement, and
high performance.
7. RELATED WORK
Fiat and Naor [1] were the ﬁrst to formally explore broad-
cast encryption. They presented a private-key solution which
was secure against a collusion of t users and has ciphertext
size of O(t log2 t log n). Naor et al. [6] presented a fully collu-
sion secure BE system that is eﬃcient for broadcasting to all,
but a small set of revoked users. However that these system-
s do not support public-key encryption, the ﬁrst public-key
BE scheme was proposed by Dois et al. [9]. Boneh and Sil-
verberg also show that n-linear maps give the ultimate fully
collusion secure scheme with constant public key, private
key, and ciphertext size. Soon after this, the bilinear maps
became the basis for many subsequent proposals, including
Delerabl´ee et al.
[5] proposed identity-based broadcast en-
cryption and gave a selective CPA secure scheme. Existing
broadcast encryption can be divided into two category:
One category is broadcast with multiple revoked receivers,
meaning that we broadcast to all but a small set of revoked
users R and |R| (cid:3) n. The best known systems are the
scheme of Delerabl´ee et al.[5] which achieves the optimal
bound of O(1)-size either for ciphertexts or decryption keys
for any subset of revoked users. More importantly, several
dynamic behaviors, e.g., dynamic user joining, key updating,
were supported by their BE systems.
√
Another category is broadcast for multiple designated re-
ceivers, where message is sent to a small subset of users
S, and |S| (cid:3) n. Untill now, the best known systems are
the scheme of Boneh, Gentry and Waters [2] which achieves
O(
n)-size ciphertexts and public keys for any subset of re-
ceivers, where each user’s private keys are of constant size.
Their trivial scheme where both ciphertexts and private keys
are of constant size and public key size is linear in total num-
ber of users is more eﬃcient when |S|  .
The following theorem gives a lower bound on the advan-
tage of a generic algorithm in solving the decision (P, Q, h)-
Diﬃe-Hellman problem.
Theorem 4
([3], Theorem A.2). Let P, Q ∈ Fp[X1,
··· , Xm]s be two s-tuples of m-variate polynomials over Fp
and h ∈ Fp[X1,·· · , Xm]. Let d = max(2dP , dQ, dh), where
dP (resp. dQ, dh) denote the maximal degree of elements of
P (resp. of Q, h). If h is independent of (P, Q) then for any
A that makes a total of at most q queries to the oracles (com-
puting the group operation in G, GT and the bilinear pairing
e : G × G → GT ), one has AdvIND
GDHE(A) ≤ (q+2s+2)3·d
.
2p
In this theorem, we deﬁne that a polynomial h is inde-
(cid:20)
pendent on the sets (P, Q) if there does not exist s2 + s
constant {aij}s
s
i,j=1 aijpipj +
s
k=1 bkqk. The security analysis of our schemes relies di-
i,j=1, {bk}s
k=1, such that h =
rectly on these two theorems.
(cid:20)
B. PROOF OF THEOREM 1
Proof. We consider the weakest case G1 = G2 = G and
thus pose ˆH = ˆGu, where u is a random variate.
In the
(F1, F2, F3, T )-GDHE1 problem, if one replace γ by x,  by
v, and ς by y, we see that our problem is reformulated as
200⎧⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩
P (x, y, u, v) =
Q(x, y, u, v) =
h(x, y, u, v) =
⎛
⎜⎜⎝
⎞
⎟⎟⎠
1, v, xv, x2v,··· , xt−1v,
xf (x),··· , xmf (x),
uv, uvx,··· , uvxn, uf (x)g(x),
uvyf (x), uyf (x)g(x)
(1, uvf 2(x)g(x))
uvyf 2(x)g(x)
(P, Q, h)-GDHE, where F1, F2 are integrated into P , F3 and
T correspond to Q and h, respectively. Such that, we have
problem (F1, F2, F3, T )-GDHE is reformulated as (P, Q, h)-
GDHE, where the result after conversion is
⎧⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩
P (x, y, u, v) =
Q(x, y, u, v) =
h(x, y, u, v) =
⎛
⎜⎜⎝
⎞
⎟⎟⎠
1, v, xv, x2v, ··· , xt−1v,
xf (x),··· , xmf (x),
uv, uvx,· ·· , uvxn, uf (x)g(x),
yxf 2(x), uyf (x)g(x)
(1, uvf 2(x)g(x))
uvyf 2(x)g(x)
(cid:20)
i,j=1,{bk}s
k=1 exist such that h =
where d = 2n, m = 4 and s = t + m + n + 4. According
to the analysis method in [3], we next show that the poly-
(cid:20)
nomial h is independent of (P, Q), that is, no coeﬃcients
{aij}s
s
i,j=1 aijpipj +
s
l=1 blql, where the polynomials pi and qi are the one list-
ed in P and Q above. Considering that y only appears
in (uvyf (x), uyf (x)g(x)), we must pick them out for al-
l cases. A simple analysis method is to ﬁnd the multi-
ples of uvy from all possible products of two polynomials
(uvyf (x), uyf (x)g(x)) in P . The polynomials (uv, uvx,·· · ,
uvxn) can be excluded because (uvyf (x), uyf (x)g(x)) have
contained u. Further, the polynomials (v, xv, x2v,··· , xt−1v)
also conﬂict with uvyf (x) because they all contain v. So,
(cid:5)
we consider three cases:
• For the former uvyf (x), we need to ﬁnd the polynomial
n−t
i=1 (x+
i=0 bi · xi, where b0 = x
n−t (cid:5)= 0 be-
n−t
(cid:3)
(cid:15)n−t
(cid:15)n−t
i (cid:5)= 0. So, f (x)g(x) is represented as
(cid:3)
h(x, y, u, v)/uvyf (x) = f (x)g(x). Let g(x) =
x
cause all x
2 ···x
(cid:3)
(cid:3)
i) =
(cid:20)
(cid:3)
1x
f (x)g(x) =
ai(xif (x)) = b0f (x)+
bi(xif (x)).
i=0
i=1
but it is infeasible for computing it because there dose
not exist the polynomial f (x) in P (x, y, u, v) even though
we can get (xf (x),·· · , xlf (x)) from P (x, y, u, v).
• For the latter uyf (x)g(x), we need to ﬁnd the polyno-
(cid:20)
(cid:20)
mial h(x, y, u, v)/uyf (x)g(x) = vf (x) and it is also in-
t
feasible because the polynomial f (x) =
i=1(x + xi) =
i=0 ai · xi + xt, which is a polyno-
i=0 ai · xi =
t−1
mial of t degree and at = 1, cannot be built from
(v, xv,·· · , xt−1v).
• For linear combination between uvyf (x) and uyf (x)g(x),
(cid:5)
t
assume that there exist two coeﬃcients a, b to satisfy
h(x, y, u, v) = a · uvyf (x) · p1 + b · uyf (x)g(x) · p2.
So that, we have vf (x)g(x) = avp1 + bg(x)p2. To sat-
isfy it, p1 is merely derived from (xf (x),·· · , xlf (x))
and p2 is from (v, xv,··· , xt−1v). This means xf (x)|p1.
Next we have avp1 = g(x)(vf (x) − bp2), so we have
g(x)|p1. These two results show xf (x)g(x)|p1. Since
p1|g(x)(vf (x)−bp2), we have xf (x)|(vf (x)−bp2). How-
ever, we know p2 is a polynomial of x with at most de-
gree t − 1, so (vf (x) − bp2) is a polynomial of x with
degree t. This is a contradiction with the fact that
xf (x) has degree t + 1.
Hence, no linear combination among the polynomials from
the known P, Q loads to h. This means that h is inde-
pendent of (P, Q). Hence, the advantage of adversary is
AdvIND
GDHE1,A(n, t) ≤ (q+2s+2)3·d
according to Theorem (4).
2p
C. PROOF OF THEOREM 2
Proof. This proof is similar to the previous proof. We al-
so consider the weakest case G1 = G2 = G. We see that our
where d = 2n, m = 4 and s = n + t + m + 4. We show
that the polynomial h is independent of (P, Q). Considering
that y only appears in (yxf 2(x), uyf (x)g(x)), we must pick
them out for all cases. Next, there only exist the polynomi-
als, (uv, uvx,·· · , uvxn), which contain uv, so we have the
candidate combination between yxf 2(x) and these polyno-
mials, but the combination between uyf (x)g(x)) and them
will be excluded. Such that, we only need to consider three
cases:
• For the former (yxf 2(x), we need to ﬁnd the polynomial
h(x, y, u, v)/yxf 2(x) = uvg(x)/x, but it is infeasible for
all (uv, uvx,··· , uvxn) because g(x) =
(cid:3)
i) is
i (cid:5)= 0 for i = 1, ··· , n − t.
(cid:3)
not divisible by x when all x
• For the latter uyf (x)g(x)), we need to ﬁnd the poly-
nomial h(x, y, u, v)/uyf (x)g(x) = vf (x) and it is also
i=0 aixi =
infeasible because f (x) =
t−1
i=0 aixi, which is a polynomial of t degree, can-
xt +
not be built from (v, xv,·· · , xt−1v).
• For linear combination between yxf 2(x) and uyf (x)g(x),
n−t
i=1 (x + x