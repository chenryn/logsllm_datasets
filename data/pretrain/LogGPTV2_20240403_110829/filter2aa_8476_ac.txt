                          uStack160._7_1_ = auStack163[0];
                          if (auStack163[0] == -1) {
                            _local_a8 = _local_a8 & 0xffffffffff;
                            _local_a8 = CONCAT106(stack0xffffffffffffff5e,uVar20) &
                                        (undefined  [16])0xffff00ffffffffff;
                            lVar30 = 4;
                            uStack160._7_1_ = auStack165[1];
                            if (auStack165[1] == -1) {
                              uVar36 = _local_a8;
                              _local_a8 = (uint5)_local_a8;
                              lVar30 = 3;
                              uStack160._7_1_ = auStack165[0];
                              if (auStack165[0] == -1) {
                                _local_a8 = _local_a8 & 0xffffff;
                                _local_a8 = CONCAT124(stack0xffffffffffffff5c,uVar36) &
                                            (undefined  [16])0xffffffff00ffffff;
                                lVar30 = 2;
                                uStack160._7_1_ = local_a8[2];
                                if (local_a8[2] == -1) {
                                  lVar30 = 1;
                                  uStack160._7_1_ = local_a8[1];
                                  if (local_a8[1] == -1) {
                                    _local_a8 = CONCAT142(stack0xffffffffffffff5a,local_a8._0_2_) &
                                                (undefined  [16])0xffffffffffff00ff;
                                    lVar30 = 0;
                                    uStack160._7_1_ = local_a8[0];
                                    if (local_a8[0] == -1) {
                                      _local_a8 = ZEXT1416(stack0xffffffffffffff5a)   vmmap
[ Legend:  Code | Heap | Stack ]
Start              End                Offset             Perm Path
0x0000555555554000 0x0000555555555000 0x0000000000000000 r-- /media/sf_CTFs/pico/not_crypto/not-crypto
0x0000555555555000 0x0000555555556000 0x0000000000001000 r-x /media/sf_CTFs/pico/not_crypto/not-crypto
0x0000555555556000 0x0000555555557000 0x0000000000002000 r-- /media/sf_CTFs/pico/not_crypto/not-crypto
0x0000555555557000 0x0000555555559000 0x0000000000002000 rw- /media/sf_CTFs/pico/not_crypto/not-crypto
0x00007ffff7fcc000 0x00007ffff7fd0000 0x0000000000000000 r-- [vvar]
0x00007ffff7fd0000 0x00007ffff7fd2000 0x0000000000000000 r-x [vdso]
0x00007ffff7fd2000 0x00007ffff7fd3000 0x0000000000000000 r-- /usr/lib/x86_64-linux-gnu/ld-2.31.so
0x00007ffff7fd3000 0x00007ffff7ff3000 0x0000000000001000 r-x /usr/lib/x86_64-linux-gnu/ld-2.31.so
0x00007ffff7ff3000 0x00007ffff7ffb000 0x0000000000021000 r-- /usr/lib/x86_64-linux-gnu/ld-2.31.so
0x00007ffff7ffc000 0x00007ffff7ffe000 0x0000000000029000 rw- /usr/lib/x86_64-linux-gnu/ld-2.31.so
0x00007ffff7ffe000 0x00007ffff7fff000 0x0000000000000000 rw-
0x00007ffffffde000 0x00007ffffffff000 0x0000000000000000 rw- [stack]
```
We can see that our address space starts at `0x0000555555554000`. We can rebase Ghidra to use the same base address (`Window` -> `Memory Map` -> Home Icon) so that's it's easier to get oriented. 
Now, we see in Ghidra that `memcmp` is called here:
```assembly
    5555555553aa 48 8b 74        MOV        RSI,qword ptr [RSP + local_1c8]
                 24 40
    5555555553af ba 40 00        MOV        EDX,0x40
                 00 00
    5555555553b4 48 8b 7c        MOV        RDI,qword ptr [RSP + local_1c0]
                 24 48
    5555555553b9 e8 a2 fc        CALL       memcmp                                           int memcmp(void * __s1, void * _
                 ff ff
    5555555553be 41 89 c4        MOV        R12D,EAX
    5555555553c1 85 c0           TEST       EAX,EAX
```
So, let's set a breakpoint at `0x5555555553b9` by executing `b *0x5555555553b9`.
We run the program, enter some input and hit:
```
gef>  r
Starting program: /media/sf_CTFs/pico/not_crypto/not-crypto
I heard you wanted to bargain for a flag... whatcha got?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Breakpoint 1, 0x00005555555553b9 in ?? ()
[ Legend: Modified register | Code | Heap | Stack | String ]
───────────────────────────────────────────────────────────────────────────────────────────────────────── registers ────$rax   : 0x10
$rbx   : 0x00007fffffffe840  →  0x00007fffffffe867  →  0x00555555555c7000
$rcx   : 0xa4
$rdx   : 0x40
$rsp   : 0x00007fffffffe680  →  0x0000000000000000
$rbp   : 0xa1
$rsi   : 0x00007fffffffe6f0  →  "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa[...]"
$rdi   : 0x00007fffffffe800  →  "picoCTF{c0mp1l3r_0pt1m1z4t10n_15_pur3_w1z4rdry_but[...]"
$rip   : 0x00005555555553b9  →   call 0x555555555060 
$r8    : 0xba
$r9    : 0x96
$r10   : 0xf0
$r11   : 0x6a
$r12   : 0x97
$r13   : 0x73
$r14   : 0xf9
$r15   : 0x3a
$eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow resume virtualx86 identification]
$cs: 0x0033 $ss: 0x002b $ds: 0x0000 $es: 0x0000 $fs: 0x0000 $gs: 0x0000
───────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────0x00007fffffffe680│+0x0000: 0x0000000000000000   ← $rsp
0x00007fffffffe688│+0x0008: 0x000000c7e1530000
0x00007fffffffe690│+0x0010: 0x0c0c21f9000000cd
0x00007fffffffe698│+0x0018: 0xea97bc0c97f759d4
0x00007fffffffe6a0│+0x0020: 0x00007fffffffe840  →  0x00007fffffffe867  →  0x00555555555c7000
0x00007fffffffe6a8│+0x0028: 0xb4a0926e3f652ca3
0x00007fffffffe6b0│+0x0030: 0x00007fffffffe840  →  0x00007fffffffe867  →  0x00555555555c7000
0x00007fffffffe6b8│+0x0038: 0x00007fffffffe7d0  →  0x6ecb6adbc09a121a
─────────────────────────────────────────────────────────────────────────────────────────────────────── code:x86:64 ────   0x5555555553aa                  mov    rsi, QWORD PTR [rsp+0x40]
   0x5555555553af                  mov    edx, 0x40
   0x5555555553b4                  mov    rdi, QWORD PTR [rsp+0x48]
●→ 0x5555555553b9                  call   0x555555555060 
   ↳  0x555555555060    jmp    QWORD PTR [rip+0x2fca]        # 0x555555558030 
      0x555555555066    push   0x3
      0x55555555506b   jmp    0x555555555020
      0x555555555070                  push   r15
      0x555555555072                  lea    rdi, [rip+0xf8f]        # 0x555555556008
      0x555555555079                  push   r14
─────────────────────────────────────────────────────────────────────────────────────────────── arguments (guessed) ────memcmp@plt (
   $rdi = 0x00007fffffffe800 → "picoCTF{c0mp1l3r_0pt1m1z4t10n_15_pur3_w1z4rdry_but[...]",
   $rsi = 0x00007fffffffe6f0 → "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa[...]",
   $rdx = 0x0000000000000040
)
─────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────[#0] Id 1, Name: "not-crypto", stopped 0x5555555553b9 in ?? (), reason: BREAKPOINT
───────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────[#0] 0x5555555553b9 → call 0x555555555060 
[#1] 0x7ffff7e15d0a → __libc_start_main(main=0x555555555070, argc=0x1, argv=0x7fffffffe978, init=, fini=, rtld_fini=, stack_end=0x7fffffffe968)
[#2] 0x555555555c9e → hlt
```
We can see part the flag in `$rdi`, but the value is cut. Let's fully print it:
```
gef>  printf "%s", $rdi
picoCTF{c0mp1l3r_0pt1m1z4t10n_15_pur3_w1z4rdry_but_n0_pr0bl3m?}
```