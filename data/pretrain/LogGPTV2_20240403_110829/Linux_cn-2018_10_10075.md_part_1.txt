---
author: David Clinton
category: 系统运维
comments_data:
- date: '2018-12-11 10:51:37'
  message: 说了一大堆，也没说明白iptables和fiewalld到底有什么不一样，感觉跑题了
  postip: 121.9.231.50
  username: 来自广东佛山的 Chrome 71.0|Windows 10 用户
- date: '2019-03-16 14:34:58'
  message: 哪里讲了firewall？
  postip: 113.55.110.227
  username: 来自云南昆明云南大学的 Chrome 72.0|Mac 10.13 用户
- date: '2020-04-22 20:03:09'
  message: 为什么只讲了firewalld添加的内容，没有iptables相关使用，放通端口等..
  postip: 117.22.251.29
  username: 来自陕西西安的 Chrome 81.0|Windows 10 用户
- date: '2020-04-22 20:04:44'
  message: 好像只是转载哦
  postip: 117.22.251.29
  username: 来自陕西西安的 Chrome 81.0|Windows 10 用户
count:
  commentnum: 4
  favtimes: 5
  likes: 0
  sharetimes: 0
  viewnum: 49689
date: '2018-10-03 17:18:01'
editorchoice: false
excerpt: 以下是如何使用 iptables 和 firewalld 工具来管理 Linux 防火墙规则。
fromurl: https://opensource.com/article/18/9/linux-iptables-firewalld
id: 10075
islctt: true
largepic: /data/attachment/album/201810/03/171710e6jfebknv98b5vhp.jpg
permalink: /article-10075-1.html
pic: /data/attachment/album/201810/03/171710e6jfebknv98b5vhp.jpg.thumb.jpg
related: []
reviewer: wxy
selector: lujun9972
summary: 以下是如何使用 iptables 和 firewalld 工具来管理 Linux 防火墙规则。
tags:
- 防火墙
- iptables
- firewalld
thumb: false
title: Linux 防火墙：关于 iptables 和 firewalld 的那些事
titlepic: true
translator: heguangzhi
updated: '2018-10-03 17:18:01'
---
> 
> 以下是如何使用 iptables 和 firewalld 工具来管理 Linux 防火墙规则。
> 
> 
> 
![](/data/attachment/album/201810/03/171710e6jfebknv98b5vhp.jpg)
这篇文章摘自我的书《[Linux in Action](https://www.manning.com/books/linux-in-action?a_aid=bootstrap-it&a_bid=4ca15fc9&chan=opensource)》，尚未发布的第二个曼宁出版项目。
### 防火墙
防火墙是一组规则。当数据包进出受保护的网络区域时，进出内容（特别是关于其来源、目标和使用的协议等信息）会根据防火墙规则进行检测，以确定是否允许其通过。下面是一个简单的例子:
![防火墙过滤请求](/data/attachment/album/201810/03/171807s37yl35xmm7w7ujd.jpg "firewall filtering request")
*防火墙可以根据协议或基于目标的规则过滤请求。*
一方面， [iptables](https://en.wikipedia.org/wiki/Iptables) 是 Linux 机器上管理防火墙规则的工具。
另一方面，[firewalld](https://firewalld.org/) 也是 Linux 机器上管理防火墙规则的工具。
你有什么问题吗？如果我告诉你还有另外一种工具，叫做 [nftables](https://wiki.nftables.org/wiki-nftables/index.php/Main_Page)，这会不会糟蹋你的美好一天呢？
好吧，我承认整件事确实有点好笑，所以让我来解释一下。这一切都从 Netfilter 开始，它在 Linux 内核模块级别控制访问网络栈。几十年来，管理 Netfilter 钩子的主要命令行工具是 iptables 规则集。
因为调用这些规则所需的语法看起来有点晦涩难懂，所以各种用户友好的实现方式，如 [ufw](https://en.wikipedia.org/wiki/Uncomplicated_Firewall) 和 firewalld 被引入，作为更高级别的 Netfilter 解释器。然而，ufw 和 firewalld 主要是为解决单独的计算机所面临的各种问题而设计的。构建全方面的网络解决方案通常需要 iptables，或者从 2014 年起，它的替代品 nftables (nft 命令行工具)。
iptables 没有消失，仍然被广泛使用着。事实上，在未来的许多年里，作为一名管理员，你应该会使用 iptables 来保护的网络。但是 nftables 通过操作经典的 Netfilter 工具集带来了一些重要的崭新的功能。
从现在开始，我将通过示例展示 firewalld 和 iptables 如何解决简单的连接问题。
### 使用 firewalld 配置 HTTP 访问
正如你能从它的名字中猜到的，firewalld 是 [systemd](https://en.wikipedia.org/wiki/Systemd) 家族的一部分。firewalld 可以安装在 Debian/Ubuntu 机器上，不过，它默认安装在 RedHat 和 CentOS 上。如果您的计算机上运行着像 Apache 这样的 web 服务器，您可以通过浏览服务器的 web 根目录来确认防火墙是否正在工作。如果网站不可访问，那么 firewalld 正在工作。
你可以使用 `firewall-cmd` 工具从命令行管理 firewalld 设置。添加 `–state` 参数将返回当前防火墙的状态:
```
# firewall-cmd --state
running
```
默认情况下，firewalld 处于运行状态，并拒绝所有传入流量，但有几个例外，如 SSH。这意味着你的网站不会有太多的访问者，这无疑会为你节省大量的数据传输成本。然而，这不是你对 web 服务器的要求，你希望打开 HTTP 和 HTTPS 端口，按照惯例，这两个端口分别被指定为 80 和 443。firewalld 提供了两种方法来实现这个功能。一个是通过 `–add-port` 参数，该参数直接引用端口号及其将使用的网络协议（在本例中为TCP）。 另外一个是通过 `–permanent` 参数，它告诉 firewalld 在每次服务器启动时加载此规则：
```
# firewall-cmd --permanent --add-port=80/tcp
# firewall-cmd --permanent --add-port=443/tcp
```
`–reload` 参数将这些规则应用于当前会话：
```
# firewall-cmd --reload
```
查看当前防火墙上的设置，运行 `–list-services`：