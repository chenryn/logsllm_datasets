作者：小刀  
公众号：wxcmgd
（2017-06-01晚进行少量修订和更新，发于阿里云先知技术社区）
楔子：
教授说：西雅图也开始下雨了……
今天是5月的最后一天，大家对WannaCry关注的热情怕是渐已退却。而对于一名技术人员，这个时候倒很适合来对WannaCry勒索蠕虫事件进行一次不那么严肃的反思。
5月之于安全圈，WannaCry毫无疑问是占据头条最长的事件。今天，小刀把自5月12日起国内有关WannaCry相关的报道、报告等全部理了一遍，内容可以说是“浩如烟海”，总体上感觉这是
**一场PR的盛宴** 。掩卷（好吧，其实是关闭屏幕）沉思，总觉得此次事件给予我们启示良多，非常值得反思。
### 反思1：对于广为流传的事，不能迷信，不可无视。
在整个事件发展过程中，关于WannaCry的部分技术细节经常会让有心人产生疑问，当然，随着国内外安全研究人员和组织的不断努力，很多疑问也都逐渐有了确定的答案。这个现象在13日至14日尤为突出。
当时群里的热烈讨论
小刀印象比较深的是类似下图中COS给圈友们出的题2，当时这个问题很多人在不同场合讨论。
因为当时是在新闻宣传潮之后，刚刚开始进入技术分析环节。根据当时能看到的少数技术报告，勒索软件会将密钥传到云端，等支付了赎金再通过云端下发密钥进行解密（事实上这样的描述并没有讲清楚技术细节，如果能讲清楚也就不会有疑问了，当然完全分析清楚需要足够的时间）。但是实际情况是很多中招的机器无法访问Tor网络甚至根本不能上网（这一点没有核实，还牵扯到另外一个问题——不能上网是怎么感染的勒索蠕虫？到底有没有这样的情况发生？），如果黑客根本拿不到“提交的Key”会发生什么？
如果迷信了当时的技术报告中所提到的信息，那么对于这个问题就会难以解释。
在13日的一次非正式技术讨论中，盘古CEO
TB和微步CEO薛锋都指出了技术上的可行性——黑客手中只要掌握核心私钥，然后把核心公钥内置在蠕虫中，对于每台机器生成的密钥，可以用核心公钥加密起来存放在本机。这样不管是离线还是在线，只要能把这个加密后的密钥给到黑客，黑客就能解开密钥，从而也就可以解开文件。——他们是基于“黑客视角”进行分析、模拟设计和客观判断的。后来随着技术分析的深入，的确印证了这个观点，WannaCry的作者的确采用了这种技术架构，当然他还额外增加了一层加密措施，正如现在大家都知道的那样。
这是一个不迷信的例子，大牛们通过自己客观而理性的分析，解答了一个疑问，并且后续的详细技术报告证明了其正确性。
另外一个例子是关于“kill
swith”（蠕虫启动时，会访问一个不存在的域名：
如果能够访问该域名的80端口，则立即退出程序，什么都不做）。当时比较主流的观点认为，这是WannaCry作者给自己留的一个开关，在必要的时候，可以阻止蠕虫继续传播。
事实上，技术人员可以换个角度思考——黑客怎么会把“自己可能会用到的域名”留给别人去注册呢？——如果这是黑客留给自己的开关，那么他应该注册下来暂不解析。而注册域名也是有风险的，可能会留下线索。——所以，结论是，这家伙压根就没想着要去注册这个域名！这样就可以解释很多问题：比如这个域名为什么这么奇怪，看起来就是随手乱敲出来的；比如他为什么没有注册；比如他为什么没有对这个域名字符串进行加密保护；等等。
而微步CEO薛锋则较早指出，这应该是一个对抗沙箱的行为——因为大部分沙箱，对于沙箱中的程序请求任何域名，都会给予响应，这是为了尽量保证恶意软件的正常运行而又不会真的产生恶意后果（基本的网络通信层面）。
看了微步薛的分析，小刀深以为然，否则还以为这个黑客是为了保护特定的小群体呢。
当然，在这个问题上，还有很多细节值得推敲（盘古CEO TB也对这一观点的细节进行了多轮质疑），比如：
1、
为什么蠕虫选择判断“是否能访问80端口”，而不选择“能否解析域名”或“看80端口返回内容是否匹配”呢？（小刀的理解：这个蠕虫作者有很多折衷的考虑，比如他的部分代码是加密的，自己实现加载和运行，而大部分的主体程序是不做加密的，分析起来比较容易。所以在这个沙箱判断上，他也是选择了比较中间的手段，不是很简单，也不是很复杂。）
2、为什么蠕虫做完简单的沙箱对抗检测之后，仅仅是退出，而不进行自毁呢？（小刀的理解：他主要考虑的是不要让自动沙箱很轻松注意到它的恶意行为，而对于专业人员，他也是持无所谓的心态，愿意分析就分析吧，反正也拦不住！）
3、 ……
**这是另外一个不迷信的例子，告诉我们应该时刻保持着专业人士的专业素养，这可能是来源于自己的经验，也可能是出于自己的换位思考和不断质疑、不放过任何一个细节的职业习惯。**
### 反思2：在不迷信的基础上，技术人员还要不厌其烦地认真求证。
在这一部分，小刀想说一下关于Windows XP能否被WannaCry感染的疑问，继续借用一下COS朋友圈的截图吧：
小刀在连篇累牍的报道中，似乎没有看到哪篇文章提到WannaCry感染Windows
XP存在疑问？——希望是我看到的文章还不够多，但也可以肯定我们主流的声音中缺乏对这种技术细节问题的及时关注、严密考证和客观阐述。
那么，这个问题是从何而来呢？我们从所有的报道中、报告中不都是在说Windows
XP会受影响吗？微软不是破例为XP和2003发布了漏洞补丁吗？各种指南不都在说XP应该怎么做吗？不是还有针对XP的文件恢复工具吗？……
是的，第一次看到这个问题，小刀也很诧异：WannaCry用了EternalBlue的攻击代码，EternalBlue利用的是MS07-010漏洞，只要这个漏洞能影响到的系统，就会成为感染的对象，看起来非常正确啊。
​
网上流传的“WannaCry幸存者参考”
事实上，反思之下还是能够发现，这个逻辑犯了常见的逻辑错误：MS07-010能够影响Windows XP和EternalBlue能够攻击Windows
XP，只能说明“如果作者原意，WannaCry可以感染Windows XP”，但 **并不能证明“事实上WannaCry可以感染Windows XP”。**
同时，可能也是迷信了广为传播的说法。
在国外，有几位安全研究人员提出并讨论了这个问题，其中最有代表性的是安全架构师Kevin
Beaumont（
XP（和2003），并且也得到了一些安全企业的回应。
好吧，看来我们需要从技术上验证一下，虽然这个工作其实还挺繁琐的。
首先我们要确认一下，EternalBlue能不能攻击Windows XP？
小刀先用Eternalblue-2.2.0.exe（MD5：8c80dd97c37525927c1e549cb59bcbf3）进行了测试，发现无论从XP打XP还是从Win7x86打XP，都是失败的。
而从XP打Win7x86，和从Win7x86打Win7x86都是成功的。
当然仅仅做这样小范围的测试还不够。于是小刀在网上查阅了一些资料：
在一位日本同仁Neutral8✗9eR（
​
未打补丁，攻击成功
​
打了补丁，攻击失败
不光有截图，还有视频。
这个测试，他用的是hardw00t开发的MSF插件（
我看了一下代码，的确是支持XP的：
而另外一个广为流传的MSF插件则据称尚不支持XP：
所以，基本上可以判断：EternalBlue肯定是可以攻击XP的，只不过在利用层面不同的工具表现可能不同，也可能在不同环境下利用的稳定性存在不一致的情况。
接下来看WannaCry。
测试方法比较暴力：开启4台虚拟机组成一个局域网，2台Windows XP SP3、2台Windows 7 x86。分别在XP-A和Win7-A上测试运行WannaCry原始样本（就是带传播功能的版本，我用的是MD5为db349b97c37d22f5ea1d1841e3c89eb4的这个），看局域网内其他3台机器是否感染。
直接贴我的测试结果：
1、 在XP-A（左上）上运行：XP-B没动静（右上）；Win7-A和Win7-B受攻击（但是蓝屏了）
2、 在Win7-A（左下）上运行：Win7-B受感染（右下）；XP-A和XP-B没动静
有（Tai）兴（Wu）趣（Liao）的同学可以看看动画（上面两台是XP，下面两台是Win7）：
GIF1：从XP-A上投放：wcry1_win7a_4m
GIF1：从Win7-A上投放：wcry1_winxpa_4m
其它发现：
在XP上运行WannaCry的时候，可能会无法在内网传播，只往公网随机IP传播，看上去像是故意避开了本地内网IP地址（通过netstat看445连接）。而在Win7上却一切正常。小刀刚开始以为是这个蠕虫“获取本地IP地址”这个操作的兼容性不好，后来仔细看了一下，发现它在XP上获取本地IP地址是正确的，在刚开始对外传播时也会做一些本地内网的测试，但是很快就结束了。因为都是业余时间在看，没时间找原因，于是就偷了个懒，直接对这个EXE进行了修改，让它生成的公网IP范围就在我的内网IP地址范围内（10.0.2.*）。
​
进一步思考：如果WannaCry真的不能感染XP，在XP上手工运行也不能正常攻击Win7，在XP上不能正常攻击本地网络，加上WannaCry的本地化勒索信息的显示也根本没考虑XP，我们有理由怀疑，这个WannaCry的作者，是不是压根就没考虑XP啊？！
​
​ XP中文版上的勒索信
​
Win7中文版上的勒索信
测试做完后，同样也查阅了各种信息，发现之前那个日本小哥也是非常认真地做了一遍测试，比小刀全面多了（不过结果不太一样）：
第一组：干净的机器
左上：蠕虫初始投放机器（Win7）；右上：WinXP SP3