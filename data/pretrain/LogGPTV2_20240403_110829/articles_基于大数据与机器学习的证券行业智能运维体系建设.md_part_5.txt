很多异常对应的数值并未超过一个合理的范围只是在局部产生了突增/突降，
如下图所示：
数据从整体看仍在可接受的范围内，但是由运维人员来判别明显是属于异常
的，这时需要我们的差分指数滑动平均算法。
指数滑动平均算法（ExponentialMoving Average, EMA）引入平滑因子α，α
越小拟合的曲线越平滑，对于原始数值 Y[i]和平滑后数值 S[i]，具体计算公式如
下：
S𝑌𝑌[0] = Y[0]
我们不是用原始数 S据𝑌𝑌[进 i]行 =差 α∗分 Y指 [i]数 +滑 (1动 −平 𝛼𝛼均 )∗， S而𝑌𝑌[𝑎𝑎是 −采 1用 一阶差分后的值进行
]
指数滑动平均，更好的描述了局部突增突降的异常变化，一阶差分值D(i)和残差
项s[i]的具体公式如下：
D(i) = Y[i]−Y[i−1 ]
在训练数据中得到具体的残 s[差 i]项 𝐷𝐷s[(i𝑎𝑎]后 )−， 𝑆𝑆可𝐷𝐷[以 拟合残差项的拟合分布，算法
= 𝑎𝑎]
采用正态分布，若残差值处于正态分布的1%（3-sigma）极值以内的位置则认为
是异常。
4.1.1.4 极值理论
对于有的时间序列并没有一个可见的周期性，采用固定阈值的方式也许会有
更好的效果，如下图所示：
首先我们采用机器学习的方法判断数据是否适合使用固定阈值的算法以及
阈值应该在数据的上面，下面还是两边，如果判断可以采用固定阈值，那就应用
极值理论得到动态阈值。极值理论是处理与概率分布的中值相离较大的情况的理
论，极值分布符合如下形式：
普通标准分布的所有极端都遵循这样的分布，极值指数γ取决于这个原始定
律。对于大多数分布，事件极端的概率肯定会很低，即当x增大， ，函
数 表示了分布的长尾，实际上，这个长尾并没ℙ有(很X >多𝓍𝓍的)形⟶状0，
是F对(x其)的=拟 ℙ合(X，>下𝓍𝓍)图包含尾部的三种可能形状和对应的γ的取值： G𝛾𝛾
累计分布函数 当且仅当存在一个函数 ，对于所有的 ，约束于
: F ∈ 𝒟𝒟𝛾𝛾 σ 𝓍𝓍 ∈ ℝ
1+γ𝓍𝓍 > 0
这个公式等价于：
在我们的应用中可以估计 和 ，百分位可以通过如下公式计算:
𝛾𝛾 𝜎𝜎
对于两个参数的优化，采用Grimshaw技巧将其转化为一个参数的优化问题
，去找到 的可行解，其中 是寻找最优解
ℓ(γ,σ) = logℒ(γ,σ) ∇ℓ(γ,σ) = 0 logℒ(γ,σ)
的常用手段——对数最大似然，其公式如下：
对于每一条特定的时间序列在线检测的流式传输过程，可以对分布进行动态
的更新以得到更合理的阈值取值。
4.1.2 异常根因定位
在异常定位的过程中，常用的算法主要包括计算相关性和聚类的方法。本项
目分别采用了Pearson相关系数和DBScan 算法作为实现。
4.1.2.1Pearson 相关系数
Pearson Correlation 用于度量两个变量X 和Y 之间的相关（线性相关），其值
介于-1 与1 之间，为两个变量之间的协方差和标准差的商：
上式定义了总体相关系数，常用希腊小写字母ρ (rho) 作为代表符号。估算
样本的协方差和标准差，可得到样本相关系数(样本皮尔逊系数)，常用英文小写
字母 r 代表：
r 的值为 1 意味着 X 和 Y 正相关，且 Y 随着 X 的增加而增加。系数的值为
−1 意味着 X 和 Y 负相关，且 Y 随着 X 的增加而减少。系数的值为 0 意味着两个
变量之间没有线性关系。
4.1.2.2 DBScan 聚类算法
DBSCAN聚类算法的显著优点是聚类速度快且能够有效处理噪声点和发现任
意形状的空间聚类。
DBSCAN 算法需要用户输入 2 个参数：一个参数是半径（Eps），表示以给定
点P 为中心的圆形邻域的范围；另一个参数是以点P 为中心的邻域内最少点的数
量（MinPts）。如果满足：以点 P 为中心、半径为 Eps 的邻域内的点的个数不少
于MinPts，则称点P 为核心点。
根据经验计算半径 Eps：根据得到的所有点的 k-距离集合 E，对集合 E 进行
升序排序后得到k-距离集合E’，需要拟合一条排序后的E’集合中k-距离的变化
曲线图，然后绘出曲线，通过观察，将急剧发生变化的位置所对应的 k-距离的值，
确定为半径Eps的值。具体见下图的算法流程。
4.1.3 自然语言处理
自然语言处理技术主要在文本日志的分析中会被大量用到。然而文本日志处
理和传统的文本处理有很大区分，使得广泛被应用来做主题提取的TF-IDF 等方案
变得不再适用。基于此，本项目采用了自研的自然语言处理技术FT-Tree。
4.1.3.1 FT-Tree 日志模板提取
受到频繁模式树（frequence pattern tree, FP-tree）的启发，研究者提出了一
种从系统日志中提取模板（系统日志消息中详细信息字段的子类型）的方法——
FT-tree。FT-tree 准确率较高，并且支持增量是学习。FT-tree 是一种拓展的前缀
树结构，用以表示系统日志消息模板。FT-tree 的基本思想是，系统日志消息中
详细信息字段的子类型通常是频繁出现的单词的最长组合。因此，提取模板等价
于从系统日志消息中识别出频繁出现单词的最长组合。
下面介绍 FT-Tree 的构建过程。令 DM=为系统日志消息的集
合，每个Mi 是一条系统日志消息。I = 是系统日志消息集合中出
现的不同单词的集合。一个单词组合（即单词的集合）A 的支持度（即单词出现
的频率）等于DM 中包含A 的系统日志消息的数量。如果A 频繁地出现（即具
有较大的支持度），那么A 就是一个模板。以交换机日志为例，表中的第二列展
示了一个系统日志消息集合，即DM = 。其中，每条系统日志消
息都属于“SIF”类型。使用图中所示算法，可以构建上述 DM 的 FT-tree，如下
所示。首先，使用 FT-tree 构造算法扫描 DM 一次（算法中的第 1 行)，并以每
个单词出现频率(每个“:”之后的数字)的降序得到一个列表 L。例如，L =
。
然后，创建树的根节点，且这一根节点是由消息类型标记的。在本章的例子
中，这一树的根节点是“SIF”。之后，FT-tree 构造算法第二次扫描 DM(算法中
的第5 行到第9 行）。通过处理M1，得到树的第一条路径/分支。这些单词是根据L 中
的单词的顺序排序的。当处理 M2 时，因为它排完序的单词列表与已存在的路径/
分支共享⼀个共同前缀，所以，FT-tree 需要创建一个新的分支作为节点的子树（subtree）。同理，
表4.3 中剩余的6 条系统日志消息的处理方式也是一样的。得到的FT-tree 如图
中所示（最右边的树）。
最后，修剪 FT-tree，直到它满足以下节点的度（node degree）的约束（算
法 2 中的第 10 行到第 14 行）。直观地来看，每个消息类型应该只有少量的子类
型。而且，对于每个子类型，应该有许多不同的系统日志消息与之匹配。因此，
如果FT-tree 的一个节点有太多的子节点（例如，超过一个阈值k），那么它的所
有子节点（或子树）就从FT-tree 中删除。这样，该子节点就变成叶子节点。在
修剪后的 FT-tree 中，每条从根节点到叶子节点的路径上的单词所组成的单词集
合是一条消息模板(即消息类型+子类型)。例如，图 4.2 中的是一条消息模板。
4.2 AI 场景介绍
4.2.1 单指标异常检测
单指标异常检测的整体架构设计如下图所示
对于一条时间序列，首先对其特征进行表述，分为：
 通过算法自动找到时间序列的周期
 是否具有向上/向下的趋势性
 周期偏移情况
 数据抖动程度
 上下界极限值
 是否可以用阈值的方法以及阈值采用多少合适
然后，根据时间序列的特征，计算资源的分配以及数据的时间来合理选用不
同的模型组合来训练并生成对应的模型，算法包括：
 变分自编码器
 渐进梯度回归树
 差分指数滑动平均
 极值理论
 周期性中值检测
当数据积累到一定程度即可开始在实际环境中在线检测，在线检测使用已训
练好的模型对应的关键特征生成算法来生成新的时间点的特征，并用已训练好的
模型对新的时间点的异常程度打分，在线检测的过程中，需要对以下实际问题进
行处理：
 缺点（某一固定时间采集点没有数据）
 乱序（后面的时间先到异常检测算法而之前时间的点还在队列中）
 特征变化（由于新的部署等情况时间序列的特征与之前不一样）
对于每个时间点对应的值算法可以给出一个异常分数，根据异常检测的默认
阈值，可以给出一个点是否是异常的结果，当然由于现实中时间序列的含义千差
万别，一样的时间序列如果含义不一样的话预期的异常检测效果可能会不一样，
所以我们提供敏感度供用户调整以达到用户满意的效果（用户唯一需要调整的参
数，而且大多数时候并不需要调整），如果用户不知道如何调整敏感度以达到他
们预期的效果，我们也提供标注反馈的方式，用户将他认为的异常漏报和正常误
报标出，算法可以自动调整以达到用户预期的效果。
4.2.2 趋势预测分析
趋势预测和异常检测的主要区别在于，趋势预测并不是给出取值的正常范围
区间，而是要给出准确的预测值。而且，绝大部分需要进行趋势预测的指标（例
如磁盘剩余空间等）是不具备明显周期特性的。因此，相对于异常检测而言，趋
势预测对于曲线的周期性衡量要求不高，对其趋势性的衡量要求更高。
因此，本次项目选择渐近梯度回归树来进行指标的趋势预测。首先利用回归
树对一段时间进行特征提取并建立预测模型。之后，系统会根据建立的模型构建