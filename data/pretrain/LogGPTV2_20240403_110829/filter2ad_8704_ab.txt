        function removeLiquidityETH( address token,uint256 liquidity,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline ) external  returns (uint256 amountToken, uint256 amountETH) ;
        function removeLiquidityETHSupportingFeeOnTransferTokens( address token,uint256 liquidity,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline ) external  returns (uint256 amountETH) ;
        function removeLiquidityETHWithPermit( address token,uint256 liquidity,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline,bool approveMax,uint8 v,bytes32 r,bytes32 s ) external  returns (uint256 amountToken, uint256 amountETH) ;
        function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token,uint256 liquidity,uint256 amountTokenMin,uint256 amountETHMin,address to,uint256 deadline,bool approveMax,uint8 v,bytes32 r,bytes32 s ) external  returns (uint256 amountETH) ;
        function removeLiquidityWithPermit( address tokenA,address tokenB,uint256 liquidity,uint256 amountAMin,uint256 amountBMin,address to,uint256 deadline,bool approveMax,uint8 v,bytes32 r,bytes32 s ) external  returns (uint256 amountA, uint256 amountB) ;
        function swapETHForExactTokens( uint256 amountOut,address[] memory path,address to,uint256 deadline ) external payable returns (uint256[] memory amounts) ;
        function swapExactETHForTokens( uint256 amountOutMin,address[] memory path,address to,uint256 deadline ) external payable returns (uint256[] memory amounts) ;
        function swapExactETHForTokensSupportingFeeOnTransferTokens( uint256 amountOutMin,address[] memory path,address to,uint256 deadline ) external payable  ;
        function swapExactTokensForETH( uint256 amountIn,uint256 amountOutMin,address[] memory path,address to,uint256 deadline ) external  returns (uint256[] memory amounts) ;
        function swapExactTokensForETHSupportingFeeOnTransferTokens( uint256 amountIn,uint256 amountOutMin,address[] memory path,address to,uint256 deadline ) external   ;
        function swapExactTokensForTokens( uint256 amountIn,uint256 amountOutMin,address[] memory path,address to,uint256 deadline ) external  returns (uint256[] memory amounts) ;
        function swapExactTokensForTokensSupportingFeeOnTransferTokens( uint256 amountIn,uint256 amountOutMin,address[] memory path,address to,uint256 deadline ) external   ;
        function swapTokensForExactETH( uint256 amountOut,uint256 amountInMax,address[] memory path,address to,uint256 deadline ) external  returns (uint256[] memory amounts) ;
        function swapTokensForExactTokens( uint256 amountOut,uint256 amountInMax,address[] memory path,address to,uint256 deadline ) external  returns (uint256[] memory amounts) ;
        // receive () external payable;
    }
    interface WETH9 {
        function name() external view returns (string memory);
        function approve(address guy, uint256 wad) external returns (bool);
        function totalSupply() external view returns (uint256);
        function transferFrom(
            address src,
            address dst,
            uint256 wad
        ) external returns (bool);
        function withdraw(uint256 wad) external;
        function decimals() external view returns (uint8);
        function balanceOf(address) external view returns (uint256);
        function symbol() external view returns (string memory);
        function transfer(address dst, uint256 wad) external returns (bool);
        function deposit() external payable;
        function allowance(address, address) external view returns (uint256);
        // 由于高版本的问题，这行要注释掉
        // fallback() external payable;
        event Approval(address indexed src, address indexed guy, uint256 wad);
        event Transfer(address indexed src, address indexed dst, uint256 wad);
        event Deposit(address indexed dst, uint256 wad);
        event Withdrawal(address indexed src, uint256 wad);
    }
    interface crETH {
        event AccrueInterest(
            uint256 cashPrior,
            uint256 interestAccumulated,
            uint256 borrowIndex,
            uint256 totalBorrows
        );
        event Approval(
            address indexed owner,
            address indexed spender,
            uint256 amount
        );
        event Borrow(
            address borrower,
            uint256 borrowAmount,
            uint256 accountBorrows,
            uint256 totalBorrows
        );
        event Failure(uint256 error, uint256 info, uint256 detail);
        event LiquidateBorrow(
            address liquidator,
            address borrower,
            uint256 repayAmount,
            address cTokenCollateral,
            uint256 seizeTokens
        );
        event Mint(address minter, uint256 mintAmount, uint256 mintTokens);
        event NewAdmin(address oldAdmin, address newAdmin);
        event NewComptroller(address oldComptroller, address newComptroller);
        event NewMarketInterestRateModel(
            address oldInterestRateModel,
            address newInterestRateModel
        );
        event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);
        event NewReserveFactor(
            uint256 oldReserveFactorMantissa,
            uint256 newReserveFactorMantissa
        );
        event Redeem(address redeemer, uint256 redeemAmount, uint256 redeemTokens);
        event RepayBorrow(
            address payer,
            address borrower,
            uint256 repayAmount,
            uint256 accountBorrows,
            uint256 totalBorrows
        );
        event ReservesAdded(
            address benefactor,
            uint256 addAmount,
            uint256 newTotalReserves
        );
        event ReservesReduced(
            address admin,
            uint256 reduceAmount,
            uint256 newTotalReserves
        );
        event Transfer(address indexed from, address indexed to, uint256 amount);
        //由于高版本的问题，这行要注释掉
        // fallback() external payable;
        function _acceptAdmin() external returns (uint256);
        function _reduceReserves(uint256 reduceAmount) external returns (uint256);
        function _setComptroller(address newComptroller) external returns (uint256);
        function _setInterestRateModel(address newInterestRateModel)
            external
            returns (uint256);
        function _setPendingAdmin(address newPendingAdmin)
            external
            returns (uint256);
        function _setReserveFactor(uint256 newReserveFactorMantissa)
            external
            returns (uint256);
        function accrualBlockNumber() external view returns (uint256);
        function accrueInterest() external returns (uint256);
        function admin() external view returns (address);
        function allowance(address owner, address spender)
            external
            view
            returns (uint256);
        function approve(address spender, uint256 amount) external returns (bool);
        function balanceOf(address owner) external view returns (uint256);
        function balanceOfUnderlying(address owner) external returns (uint256);
        function borrow(uint256 borrowAmount) external returns (uint256);
        function borrowBalanceCurrent(address account) external returns (uint256);
        function borrowBalanceStored(address account)
            external
            view
            returns (uint256);
        function borrowIndex() external view returns (uint256);
        function borrowRatePerBlock() external view returns (uint256);
        function comptroller() external view returns (address);
        function decimals() external view returns (uint8);
        function exchangeRateCurrent() external returns (uint256);
        function exchangeRateStored() external view returns (uint256);
        function getAccountSnapshot(address account)
            external
            view
            returns (
                uint256,
                uint256,
                uint256,
                uint256
            );
        function getCash() external view returns (uint256);
        function initialize(
            address comptroller_,
            address interestRateModel_,
            uint256 initialExchangeRateMantissa_,
            string memory name_,
            string memory symbol_,
            uint8 decimals_
        ) external;
        function interestRateModel() external view returns (address);
        function isCToken() external view returns (bool);
        function liquidateBorrow(address borrower, address cTokenCollateral)
            external
            payable;
        function mint() external payable;
        function name() external view returns (string memory);
        function pendingAdmin() external view returns (address);
        function redeem(uint256 redeemTokens) external returns (uint256);
        function redeemUnderlying(uint256 redeemAmount) external returns (uint256);
        function repayBorrow() external payable;
        function repayBorrowBehalf(address borrower) external payable;
        function reserveFactorMantissa() external view returns (uint256);
        function seize(
            address liquidator,
            address borrower,
            uint256 seizeTokens
        ) external returns (uint256);
        function supplyRatePerBlock() external view returns (uint256);
        function symbol() external view returns (string memory);
        function totalBorrows() external view returns (uint256);
        function totalBorrowsCurrent() external returns (uint256);
        function totalReserves() external view returns (uint256);
        function totalSupply() external view returns (uint256);
        function transfer(address dst, uint256 amount) external returns (bool);
        function transferFrom(
            address src,
            address dst,
            uint256 amount
        ) external returns (bool);
    }
    interface crAMP {
        event AccrueInterest(
            uint256 cashPrior,
            uint256 interestAccumulated,
            uint256 borrowIndex,
            uint256 totalBorrows
        );
        event Approval(
            address indexed owner,
            address indexed spender,
            uint256 amount
        );
        event Borrow(
            address borrower,
            uint256 borrowAmount,
            uint256 accountBorrows,
            uint256 totalBorrows
        );
        event Failure(uint256 error, uint256 info, uint256 detail);
        event LiquidateBorrow(
            address liquidator,
            address borrower,
            uint256 repayAmount,
            address cTokenCollateral,
            uint256 seizeTokens
        );
        event Mint(address minter, uint256 mintAmount, uint256 mintTokens);
        event NewAdmin(address oldAdmin, address newAdmin);
        event NewComptroller(address oldComptroller, address newComptroller);
        event NewImplementation(
            address oldImplementation,
            address newImplementation
        );
        event NewMarketInterestRateModel(
            address oldInterestRateModel,
            address newInterestRateModel
        );
        event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);
        event NewReserveFactor(
            uint256 oldReserveFactorMantissa,
            uint256 newReserveFactorMantissa
        );
        event Redeem(address redeemer, uint256 redeemAmount, uint256 redeemTokens);
        event RepayBorrow(
            address payer,
            address borrower,
            uint256 repayAmount,
            uint256 accountBorrows,
            uint256 totalBorrows
        );
        event ReservesAdded(
            address benefactor,
            uint256 addAmount,
            uint256 newTotalReserves
        );
        event ReservesReduced(
            address admin,
            uint256 reduceAmount,
            uint256 newTotalReserves
        );
        event Transfer(address indexed from, address indexed to, uint256 amount);
        // 由于高版本的问题，这行要注释掉
        // fallback() external payable;
        function _acceptAdmin() external returns (uint256);
        function _addReserves(uint256 addAmount) external returns (uint256);
        function _reduceReserves(uint256 reduceAmount) external returns (uint256);
        function _setComptroller(address newComptroller) external returns (uint256);
        function _setImplementation(
            address implementation_,
            bool allowResign,
            bytes memory becomeImplementationData
        ) external;
        function _setInterestRateModel(address newInterestRateModel)
            external
            returns (uint256);
        function _setPendingAdmin(address newPendingAdmin)
            external
            returns (uint256);
        function _setReserveFactor(uint256 newReserveFactorMantissa)
            external
            returns (uint256);
        function accrualBlockNumber() external view returns (uint256);
        function accrueInterest() external returns (uint256);
        function admin() external view returns (address);
        function allowance(address owner, address spender)
            external
            view
            returns (uint256);
        function approve(address spender, uint256 amount) external returns (bool);
        function balanceOf(address owner) external view returns (uint256);
        function balanceOfUnderlying(address owner) external returns (uint256);
        function borrow(uint256 borrowAmount) external returns (uint256);
        function borrowBalanceCurrent(address account) external returns (uint256);
        function borrowBalanceStored(address account)
            external
            view
            returns (uint256);
        function borrowIndex() external view returns (uint256);
        function borrowRatePerBlock() external view returns (uint256);
        function comptroller() external view returns (address);
        function decimals() external view returns (uint8);