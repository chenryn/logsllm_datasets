猫 鼠 游 戏
如 何 进 行 W i n d o w s 平 台 在 野 0 d a y 狩 猎
金权 安恒信息
自我介绍
➢ 金权（@jq0904/银雁冰）
➢ 安恒信息猎影/卫兵实验室高级安全专家
➢ 研究方向
•
Windows平台漏洞挖掘与利用
•
Windows平台在野0day狩猎
➢ 演讲经历
•
Black Hat USA 2022
•
HITB Amsterdam 2021
•
Blue Hat Shanghai 2019
➢ 40+ Microsoft/Adobe CVE致谢 (7次在野0day致谢）
➢ 2020~2022 MSRC TOP 100
目录
1. 背景
2. 用不同的方法解决不同的问题
➢ 为什么沙箱适合狩猎Office在野0day
➢ 为什么YARA适合狩猎Windows本地提权在野0day
3. 近两年热门在野0day案例分析
➢ Office在野0day案例分析
➢ Windows本地提权在野0day案例分析
4. 如何培养在野0day狩猎人才
目录
1. 背景
2. 用不同的方法解决不同的问题
➢ 为什么沙箱适合狩猎Office在野0day
➢ 为什么YARA适合狩猎Windows本地提权在野0day
3. 近两年热门在野0day案例分析
➢ Office在野0day案例分析
➢ Windows本地提权在野0day案例分析
4. 如何培养在野0day狩猎人才
背景
0
10
20
30
40
50
60
70
2018
2019
2020
2021
2022
最近5年全球在野0day披露数量及国内外占比
国内厂商披露
国外厂商披露
主要统计数据来源：0day "In the Wild" - Project Zero
背景
0
1
2
3
4
5
6
7
8
2018
2019
2020
2021
2022
最近5年中国厂商披露在野0day统计
360
安恒
腾讯
阿里巴巴
奇安信
Shadow Chaser Group
主要统计数据来源：0day "In the Wild" - Project Zero
背景
0
1
2
3
4
5
6
7
8
2018
2019
2020
2021
2022
我参与披露的在野0day
360
安恒
腾讯
阿里巴巴
奇安信
Shadow Chaser Group
主要统计数据来源：0day "In the Wild" - Project Zero
目录
1. 背景
2. 用不同的方法解决不同的问题
➢ 为什么沙箱适合狩猎Office在野0day
➢ 为什么YARA适合狩猎Windows本地提权在野0day
3. 近两年热门在野0day案例分析
➢ Office在野0day案例分析
➢ Windows本地提权在野0day案例分析
4. 如何培养在野0day狩猎人才
Office在野0day漏洞分类
➢ 纯Office漏洞
➢ 内存破坏漏洞：例如CVE-2015-1641，近几年此类漏洞攻击逐渐消失
➢ 逻辑漏洞：沙虫漏洞（CVE-2014-4114），Moniker系列漏洞（CVE-2017-0199等）
➢ 以Office为载体的其他漏洞
➢ Flash漏洞：随着Flash退役而消失
➢ IE浏览器漏洞：随着IE退役逐渐减少，但攻击面仍在
➢ .NET漏洞：CVE-2018-8759，个例
➢ Windows系统漏洞：CVE-2014-4148等，不排除后面还会出现
趋势一：逻辑漏洞越来越多
内存漏洞缓解
机制日益完善
内存破坏漏洞
利用逐渐减少
逻辑漏洞
日渐增多
趋势二：远程加载漏洞利用的手法越来越流行
2014年
2017年
2018年
2020年
2021年
2022年
CVE-2014-4114
CVE-2017-0199
CVE-2017-8759
CVE-2018-5002
CVE-2018-8174
CVE-2018-15982
CVE-2020-0674
CVE-2021-40444
CVE-2022-30190
为何说沙箱适合狩猎Office在野0day
远程加载利用
成为主流
利用代码云控，
具有时效性
沙箱检测
静态提取URL
缺点1：RTF代码混淆
缺点2：请求时加密
优点：模拟实际交互
情况，可以做到全过
程记录，准确率高
为何说沙箱适合狩猎Office在野0day
逻辑漏洞一般
影响较多版本
沙箱环境制作
工作量较小
只需维护一个常
见Office版本的
全补丁镜像
沙箱能覆盖的Office在野0day狩猎场景
所有以Office为载体的在野0day场景
适用沙箱
狩猎的场景
可行的思路
➢ 做一个全补丁Office环境镜像，将可疑样本投入沙箱，通过异常行为进行过滤
➢ 环境制作：Windows 10 + Office 2019 (仅供参考)
➢ 异常行为
•
Office进程启动可疑子进程（需过滤常见白名单）
•
检测是否有异常地址处的指令访问敏感模块的导出表（即EAF）
➢ 做一些Office Nday环境镜像，在筛选0day时顺便标定一些被用于攻击的Nday（可选）
➢ 需要对Office历史漏洞进行深入研究
➢ 静态标定：需要对抗RTF代码混淆，容易遗漏，可参考开源的quicksand项目
➢ 动态标定：需要挂钩常见漏洞模块进行漏洞点Check，技术难度相比静态稍大
目录
1. 背景
2. 用不同的方法解决不同的问题
➢ 为什么沙箱适合狩猎Office在野0day
➢ 为什么YARA适合狩猎Windows本地提权在野0day
3. 近两年热门在野0day案例分析
➢ Office在野0day案例分析
➢ Windows本地提权在野0day案例分析
4. 如何培养在野0day狩猎人才
Windows本地提权在野0day漏洞分类
➢ 内核提权漏洞（本议题重点讨论这类漏洞）
➢ 由Windows操作系统内核驱动程序的内存破坏引发的提权漏洞，例如：
•
CVE-2021-1732 win32kfull.sys驱动内核提权漏洞
➢ 用户态提权漏洞
➢ 由内存破坏漏洞导致的打印机提权漏洞，例如：
•
CVE-2020-0986 打印机提权漏洞
➢ 逻辑提权漏洞
➢ 例如COM提权漏洞和打印机逻辑提权漏洞，例如：
•
CVE-2017-0213 COM提权漏洞
Windows本地提权在野0day使用场景
1. 作为完整漏洞链的一部分，与浏览器等漏洞配合使用
➢ 典型场景
•
以反射型DLL的方式内嵌在Office漏洞利用代码内，例如：CVE-2017-0263
•
以反射型DLL的方式内嵌在浏览器漏洞利用代码内，例如：CVE-2021-31956
•
前置漏洞利用成功后再从云端获取并解密使用，例如：CVE-2018-8453
2. 作为独立组件使用
➢ 典型场景
•
下发单个提权组件，接收参数进行提权，例如：CVE-2021-1732
•
无需提供任何参数，直接执行当前程序提权，例如：CVE-2022-37969
不同场景需要不同的狩猎方法
作为完整利用
链的一部分
全程加密/云端
获取利用组件
EDR+专家团+
现场取证
不同场景需要不同的狩猎方法
作为独立组件
进行使用
是否
加密/加壳
否（多数情况）
沙箱检测
是（少数情况）
YARA
YARA狩猎本地提权样本的其他优势
1. 漏洞利用代码运行前往往会进行操作系统版本/杀毒软件/沙箱环境检测
➢ 商业化提权组件会确保其可靠性，避免非预期的蓝屏或被检测到（规避动态检测）
2. 攻击者经常使用一些经典漏洞利用手法
➢ 这些手法随时间流逝具有一定连续性（具备较强的静态特征）
•
HMValidateHandle、Previous Mode等手法
3. 攻击者经常瞄准较为热门的漏洞模块
➢ 例如Win32k驱动和CLFS驱动（热门模块的规则具有通用性）
YARA能覆盖的Windows LPE在野0day狩猎场景
适用EDR
狩猎的场景
所有Windows本地提权在野0day场景
适用沙箱
狩猎的场
景
适用YARA
狩猎的场景
业界能力
范围外的场景
如何正确地编写YARA规则
1. 为漏洞利用各个阶段的特征编写规则
2. 为最新的漏洞和利用手法编写规则
3. 为最可能出现的漏洞编写规则
为漏洞利用各个阶段的特征编写规则
➢ 通常，一个Windows内核本地提权漏洞利用包含以下阶段
① 漏洞触发
② 堆风水
③ 内核信息泄露
④ 任意地址读写
⑤ 控制流劫持
⑥ 权限提升
➢ 基于每个阶段的通用特征写规则（详细可参考我Black Hat USA 2022的演讲）
为最新的漏洞和利用手法编写规则