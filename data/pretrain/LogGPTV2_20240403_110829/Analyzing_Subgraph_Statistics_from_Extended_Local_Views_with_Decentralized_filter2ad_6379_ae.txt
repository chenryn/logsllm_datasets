the largest two degree upper bounds. By Eq. (12), we can take
(cid:17) as a probabilistic upper bound of LSG (Ψ). After that,
(cid:17) /ϵ1, and then report the noisy value ψ∗(vi).
we let each user vi inject Lapalce noise Lap(λψ ) into ψ(vi), with
4(cid:16)
λψ = 4(cid:16)
d⊤
(1) + d⊤
(2)
d⊤
(1) + d⊤
(2)
Then, we derive an upper bound ψ⊤(vi) of each ψ(vi) based on
Eq. (11). Finally, we compute maxvi ∈G ψ⊤(vi) as a probabilistic
upper bound of LSG(Γ⊔).
Algorithm 2 shows the pseudo-code of the above method for
computing λ. The following lemma establishes the privacy guaran-
tee of the algorithm.
Lemma 4.3. Algorithm 2 satisfies (ϵ1, δ1)-DDP and, with 1 − δ2
probability, returns λ ≥ 1
ϵ2 LSG (Γ⊔).
4.3 k-Cliques
Pessimistic Laplace mechanism. A k-clique refers to a set of
k nodes that are fully connected to each other. Let γk C(vi) be
the number of k-cliques that user vi appears in, and Γk C =
{γk C(v1), . . . , γk C(vn)}. To obtain Γk C with ϵ-DDP, our based solu-
tion, namely Pessimistic Laplace mechanism, lets each user vi inject
Laplace noise Lap
(cid:16)
(cid:17) into γk C(vi), since the sensitivity of
k(cid:0)n−2
k−2(cid:1)/ϵ
k−2(cid:1). This is because (i) adding or removing one edge
k−2(cid:1) such k-cliques, and (iii) each k-clique is reported by
Γk C equals k(cid:0)n−2
at most(cid:0)n−2
e in G affects only those k-cliques where e is an edge, (ii) there are
k users.
Dataset
Facebook
HepPh
AstroPh
Num. of nodes Num. of edges Avg. deg. Num. of triangles Num. of three-hop paths Num. of 4-cliques
30,004,668
150,281,372
9,580,415
1,055,326,189
3,146,167,903
986,743,120
1,612,010
3,358,499
1,351,441
88,234
118,489
198,050
4,039
12,008
18,771
43.69
19.73
21.10
Table 1: Dataset Properties
with probability 1 − δ, and λ△ satisfies ϵ1-DDP. So λk C satisfies
ϵ1-DDP and we have LSG(Γk C) ≤ k(cid:0) ϵ2
(cid:1) with probability 1 − δ.
3 λ△
k−2
5 EXPERIMENTS
Datasets. We conduct experiments on three real world datasets
from Stanford Large Network Dataset Collection [26]. The Facebook
dataset contains “friends list” from Facebook, a large social network.
It was collected from surveying participants using the Facebook
app. The HepPh dataset and AstroPh dataset are the co-authorship
networks from arXiv, which contains the collaborations between
authors who submit their papers to High Energy Physics and Astro
Physics, respectively. Table 1 shows the properties of the datasets
and their true subgraph pattern counts.
Parameter selection. Since our solutions follow the proposed
multi-phase framework, we need to split (ϵ, δ) budget among differ-
ent phases. Recall from Section 3 that in the two-phase framework,
Phase 1 estimates an upper bound of the required noise scale, and
Phase 2 reports noisy counts. In order to get more accurate counting
results, we assign more privacy budget to Phase 2. Specifically, we
set ϵ1 = 0.1ϵ and ϵ2 = 0.9ϵ for Phase 1 and Phase 2, respectively.
Regarding the other privacy parameter δ, following the popular
guideline in [12], we set δ to 1
, where n is the number of nodes
n
in the social network. Inside the proposed solutions described in
Section 3, δ is sub-divided, e.g., by the number of entities to be
protected for triangle counting.
Baselines. We compare the fully optimized versions of proposed
solutions for private subgraph counting, denoted by Mo in the
following, against the following baselines: (i) the (ϵ, δ)-DDP ver-
sion of the baseline method, i.e., Pessimistic Laplace mechanism,
described in Section 3, (ii) first-cut versions of the proposed solu-
tions, denoted as Mc in the following, and (ii) LDPGen [32], which
generates synthetic graphs under LDP. The counts of differential
private subgraph patterns are computed directly from the synthetic
graph. Note that in LDPGen, the data collector only gathers in-
formation from the nodes on their direct connections; that is, no
ELV is involved in this method, in which case DDP (Definition
2.6) reduces to LDP (Definition 2.4). Besides, we have also run ex-
periments using the Pessimistic Gaussian mechanism, described
towards the end of Section 3.1, which injects Gaussian noise into
the true counts [1] instead of Laplace noise. From our experiments,
we found that Pessimistic Gaussian consistently outputs much nois-
ier results compared to the Pessimistic Laplace mechanism under
(ϵ, δ)-DDP. We thus omit the results for Pessimistic Gaussian for
brevity. Similarly, we omit Pessimistic Laplace under the stricter
ϵ-DDP requirement, which is always worse than the more relaxed
(ϵ, δ)-DDP version.
Noise scale selection. Before presenting our main evaluation re-
sults, we first demonstrate the effectiveness of the heuristic in
Section 4.1 for determining the value of h in Phase 1, which is the
,
z
max
vi,vj ∈G,i(cid:44)j
LSG (Γk C) =
Proposed solution. Next we apply the proposed two-phase frame-
work to obtain a more accurate estimate of the k-clique count. For
this purpose, we present an ϵ1-differentially private algorithm for
computing a probabilistic upper bound of LSG (Γk C). First, we have
(13)
k · C(cid:0)Gi∩j , k − 2(cid:1) ,
bors of vi and vj, and C(cid:0)Gi∩j , k − 2(cid:1) denotes the number of (k − 2)-
There exist only C(cid:0)Gi∩j , k − 2(cid:1) such k-cliques, and each of them
Let z(vi) = maxvj ∈G,i(cid:44)j kC(cid:0)Gi∩j , k − 2(cid:1). By Eq. (13), if we can
where Gi∩j denotes the subgraph of G induced the common neigh-
cliques in Gi∩j. To explain, observe that if an k-clique is affected
by the presence or absence of an edge ⟨vi , vj⟩, then (i) the k-clique
must contain both vi and vj, and (ii) apart from vi and vj, the
remaining k − 2 nodes in the clique must form a (k − 2)-clique.
is reported by k users. Therefore, Eq. (13) holds.
derive a probabilistic upper bound z⊤(vi) of each z(vi), then we may
use maxvi ∈G z⊤(vi) as an upper bound of LSG (Γk C). By Lemma 4.1,
we can compute z⊤(vi) as
⊤(vi) = z
∗(vi) + λz · log
(cid:18) 1
(cid:19)
LSG (Γk C) =
(cid:16)(cid:0)n−2
k−2(cid:1) −(cid:0)n−3
k−2(cid:1)(cid:17) /ϵ, since adding or removing one
k−2(cid:1)(cid:17). This
where λz and δz are constants and z∗(vi) is obtained by injecting
Laplace noise Lap(λz) into z(vi). To ensure ϵ-DDP, however, we
need λz ≥ kn
edge in G may change each z(vi) by up to k
leads to an enormous amount of noise in z⊤(vi).
To address the above issue, we recursively apply our two-phase
framework to derive an alternative upper bound of LSG (Γk C), in
a manner similar to the method illustrated in Figure 3b. First, let
c(vi) be as defined in Eq. (8). Then, we have
(cid:16)(cid:0)n−2
k−2(cid:1) −(cid:0)n−3
(cid:19)
(cid:18)c(vi)
(cid:1) as an up-
k · C(cid:0)Gi∩j , k − 2(cid:1) ≤ max
of maxvi ∈G c(vi), then we can use (cid:0)maxvi ∈G c⊤(vi)
Therefore, if we are able to derive an upper bound maxvi ∈G c⊤(vi)
per bound of LSG (Γk C). We compute such an upper bound
maxvi ∈G c⊤(vi) using the same method described in Section 4.1.
That is, we compute c⊤(v) for a selected set S of users v, as well
as a probability degree upper bound d⊤(vj) for each user vj. After
that, we combine d⊤(v1), . . . , d⊤(vn) and c⊤(v) (v ∈ S) to derive
an upper bound of maxvi ∈G c(vi).
For brevity, we omit the pseudo-code as it can be easily con-
structed from the λ△ returned by Algorithm 1. That is, after getting
λ△ from Algorithm 1, let
vi,vj ∈G,i(cid:44)j
k − 2
vi ∈G
max
k−2
2δz
k
.
λk C = k
/ϵ2.
(14)
(cid:19)
(cid:18) ϵ23 λ△
k − 2
Since we have
ϵ2
3 λ△ = max{d
⊤(v[h′+2]), max
vi ∈S
†(vi) ≥ max
vi ∈G
c
c(vi),
ϵ1 = 0.1
ϵ1 = 0.3
4,000
3,000
2,000
1,000
)
△
Γ
(
G
S
L
f
o
d
n
u
o
b
r
e
p
p
U
0
5 10 15 20 25 30
h
(a) Facebook dataset
)
△
Γ
(
G
S
L
f
o
d
n
u
o
b
r
e
p
p
U
3,000
2,500
2,000
1,500
1,000
0
5 10 15 20 25 30
h
(b) HepPh dataset
ϵ1 = 0.5
3,000
2,500
2,000
1,500
1,000
)
△
Γ
(
G
S
L
f
o
d
n
u
o
b
r
e
p
p
U
0
5 10 15 20 25 30
h
(c) AstroPh dataset
Figure 4: Selection of h for triangle counting
First-cut two-phase
Optimized two-phase
Pessimistic Laplace
LDPGen
10−1
10−2
E
R
M
10−1
10−2
E
R
M
100
10−1
E
R
M
10−2
1 2 3 4 5 6 7 8 9 10
Privacy budget ϵ
(a) Facebook dataset
1 2 3 4 5 6 7 8 9 10
Privacy budget ϵ
(b) HepPh dataset
Figure 5: Triangle Counting
1 2 3 4 5 6 7 8 9 10
Privacy budget ϵ