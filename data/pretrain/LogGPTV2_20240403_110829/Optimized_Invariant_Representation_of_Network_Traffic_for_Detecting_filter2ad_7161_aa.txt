# Optimized Invariant Representation of Network Traffic for Detecting Unseen Malware Variants

**Authors:**
- Karel Bartos, Cisco Systems, Inc. and Czech Technical University in Prague, Faculty of Electrical Engineering
- Michal Sofka, Cisco Systems, Inc. and Czech Technical University in Prague, Faculty of Electrical Engineering
- Vojtech Franc, Czech Technical University in Prague, Faculty of Electrical Engineering

**Publication:**
- Proceedings of the 25th USENIX Security Symposium, August 10â€“12, 2016, Austin, TX
- ISBN: 978-1-931971-32-4
- Open access sponsored by USENIX

## Abstract

New and unseen polymorphic malware, zero-day attacks, and other advanced persistent threats (APTs) often evade signature-based security devices, firewalls, and antivirus software. This challenge is exacerbated by the increasing number and variability of incidents, complicating the design of learning-based detection systems. The issue arises from the different joint distributions of features and labels in training and testing datasets. This paper introduces a classification system designed to detect both known and previously unseen security threats. The classifiers use statistical feature representations derived from network traffic to recognize malicious behavior. The representation is optimized to be invariant to common changes in malware behaviors, achieved through feature histograms and self-similarity matrices for groups of HTTP flows. The parameters of the representation are learned along with the classifiers. When deployed on large corporate networks, the system detected 2,090 new and unseen malware variants with 90% precision, significantly outperforming current flow-based and signature-based approaches.

## 1. Introduction

Current network security devices classify large volumes of malicious network traffic, but many incidents are false alerts, and much malicious traffic remains undetected due to the increasing variability of malware attacks. This can lead to severe complex attacks being missed because incidents are not correctly prioritized or reported.

Network traffic can be classified at various levels of detail. Packet inspection and signature matching rely on known malware samples and achieve high precision but limited recall. Analyzing individual packets is becoming infeasible on high-speed network links. Flow-based approaches, such as NetFlow and proxy logs, are more efficient but typically have lower precision. They use statistical modeling and behavioral analysis to detect new and previously unseen threats.

Statistical features from flows can be used for unsupervised anomaly detection or supervised classification. While unsupervised methods can detect new threats, they suffer from low precision, leading to many false alerts. Supervised classifiers trained on known malicious samples achieve better efficacy but require retraining when malware behavior changes. The robustness and invariance of features extracted from raw data are crucial for classifying new malware.

The problem of changing malware behavior can be formalized as a difference in the joint distribution of malware samples between training and testing datasets. Domain adaptation techniques can address this by transferring knowledge from the source domain to the target domain. We focus on conditional shift, where the conditional distribution of observations given labels differs.

In this paper, we present an optimized invariant representation of network traffic data that enables domain adaptation under conditional shift. The representation is computed for bags of samples, each containing features from network traffic logs. The bags are constructed for each user and contain all network communication with a particular hostname/domain. The representation is invariant to shifting and scaling of feature values and permutation and size changes of the bags. This is achieved by combining bag histograms with an invariant self-similarity matrix for each bag. All parameters of the representation are learned automatically using the proposed optimization approach.

We apply the proposed invariant representation to detect malicious HTTP traffic. Our classifier, trained on malware samples from one category, successfully detects new samples from different categories, transferring knowledge of malware behavior to the new domain. Compared to baseline flow-based representation and widely-used security devices, our approach shows significant improvements and correctly classifies new types of network threats not part of the training data.

**Major Contributions:**
- **Classifying New Malware Categories:** A supervised method to detect new types of malware from a limited amount of training samples, using invariant training from multiple malware categories.
- **Bag Representation of Samples:** Grouping related flows into bags, each containing flows with the same user and target domain.
- **Features Describing Dynamics:** Novel features derived from the self-similarity of flows within a bag, describing the dynamics of each bag and having invariant properties useful for detecting new malware variants.
- **Learning the Representation:** A novel method to optimize the parameters of the representation, combining the learning of the representation with the learning of the classifier.
- **Large-Scale Evaluation:** Evaluation on real network traffic from multiple companies, showing the potential of the approach in highly imbalanced datasets.

## 2. Related Work

Network perimeter security can be achieved through host-based or network-based Intrusion Detection Systems (IDS). Host-based IDS systems analyze malicious code, processes, and system calls, while network-based IDS systems monitor incoming and outgoing network traffic. Signature-based IDS systems detect well-known attacks but have limited ability to detect novel intrusions. Anomaly-based IDS systems detect a wide range of network anomalies but have higher false alarm rates.

Network-based approaches include packet inspection and flow-based methods. Packet inspection provides detailed information but is infeasible on high-speed networks. Flow-based methods, such as NetFlow and proxy logs, are more efficient but have lower precision. Methods for classifying network traffic from packet traces and flow-based features have been proposed, but these are becoming less effective due to the rapid evolution of network threats.

Recent work has focused on classifying malware from web traffic, particularly HTTP(S) traffic. Various approaches have been proposed, including anomaly detection, clustering, and supervised learning methods. However, these methods often struggle with the variability and complexity of modern malware.

Our approach differs from existing methods in several key ways:
- We do not classify individual flows but sets of related flows (bags).
- We propose a novel representation based on features describing the dynamics of each bag.
- The features are invariant against changes an attacker might implement to evade detection.
- Parameters of the representation are learned automatically to maximize detection performance.
- The proposed classification system is evaluated on real, highly imbalanced datasets, demonstrating its practical effectiveness.

**Table 1: Overview of Existing Approaches**

| Approach | Type | Method | Features |
|----------|------|--------|----------|
| Wang [41] | U | Anomaly Detection | Packet Payload |
| Kruegel [25] | U | Anomaly Detection | URL Query Parameters |
| Gu [16] | U | Clustering | Host Statistics + SNORT |
| Bilge [6] | S | Random Forest | Flow Size, Time |
| Antonakakis [2] | S | Multiple | NXDomains |
| Bailey [3] | S | Hierarchical Clustering | State Changes |
| Kapravelos [22] | S | Similarity of Trees | Abstract Syntax Tree |
| Choi [9] | S | SVM + RAkEL | URL Lexical, Host, DNS |
| Zhao [44] | S | Active Learning | URL Lexical + Host |
| Huang [17] | S | SVM | URL Lexical |
| Ma [27] | S | Multiple | Proxy Log Fields |
| Invernizzi [18] | U | Heuristics | Content of Web Pages |
| Soska [40] | S | Graph Clustering | Web Paths |
| Nelms [32] | S | Random Forests | Learned Repr. + SVM |
| Our Approach | S | Learned Bag Dynamics | Learned Representation + SVM |

**U: Unsupervised, S: Supervised**