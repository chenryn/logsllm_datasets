# Coexistence Interfaces and Vulnerabilities in Wi-Fi/Bluetooth Combo Chips

## Overview
The following text outlines the coexistence interfaces, vulnerabilities, and methods for exploiting these vulnerabilities in Wi-Fi/Bluetooth combo chips. The document is based on the Google Nexus 5 chip and includes references to other devices and their respective firmware.

### Coexistence Interfaces
Coexistence interfaces are essential for managing the interactions between Wi-Fi and Bluetooth modules in a combo chip. These interfaces include:

- **WL HOST WAKE**
- **WL DEV WAKE**
- **JTAG**
- **Other GPIOs**
- **SDIO D**
- **PCIe**
- **AXI2APB**
- **SDIO 3.0**
- **PCIe 1.1**
- **D11 Core (MAC)**
- **1×1 802.11ac PHY**
- **RF Switch Controls**
- **2.4 GHz/5 GHz 802.11ac Dual-Band Radio**
- **XTAL**
- **FEM or SP3T (2.4 GHz)**
- **FEM or SPDT (5 GHz)**
- **Diplexer**

**Figure 3: Coexistence interfaces as documented for the Google Nexus 5 chip [18], discovered vulnerabilities marked in red.**

### Authorized Use
This content is licensed for use by Tsinghua University. Downloaded on August 07, 2022, at 12:34:02 UTC from IEEE Xplore. Restrictions apply.

### Table II: Wi-Fi Code Execution and Data Leak through Shared RAM
| Device | Chip | Tested OS with FW Updates | FW Build Date | FW Accesses wl_buff | Code Execution |
|--------|------|---------------------------|---------------|--------------------|----------------|
| Nexus 5 | BCM4335C0 | Android 6.0.1 | Dec 11 2012 | × | ? |
| iPhone 6 | BCM4345B0 | iOS 12.4–12.5.1 | Jul 15 2013 | × | (cid:88)(cid:88)(cid:88) |
| Raspberry Pi 3 | BCM43430A1 | Raspbian Buster | Jun 2 2014 | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |
| Raspberry Pi 3B+/4 | BCM4345C0 | Raspbian Buster | Aug 19 2014 | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |
| Samsung Galaxy S6, Google Nexus 6P | BCM4358A3 | Lineage OS 14.1 | Oct 23 2014 | × | (cid:88)(cid:88)(cid:88) |
| MacBook Pro 2016 | BCM20703A2 | macOS 10.15.1–10.15.7 | Sep 14 2015 | × | (cid:88)(cid:88)(cid:88) ( <14.3) |
| iPhone 7 | BCM4355C0 | iOS 13.3–14.3 | Jun 3 2016 | × | (cid:88)(cid:88)(cid:88) |
| Samsung Galaxy S8/S8+/Note 8 | BCM4347B0 | Android 8.0.0 | Oct 11 2016 | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |
| iPhone 8/X/XR | BCM4347B1 | iOS 13.3–14.7 | Apr 13 2018 | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |
| Samsung Galaxy S10/S10e/S10+ | BCM4375B1 | Android 9 | Feb 28 2018 | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |
| Samsung Galaxy S10/S10e/S10+/S20/Note 20 5G | BCM4375B1 | Android 10 | May 9 2018 | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |
| Samsung Galaxy S20/Note 20 5G | BCM4375B1 | Android 11 | Oct 25 2018 | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |
| MacBook Pro+Air, 2019–2020 (PCIe) | BCM4364B3 | macOS 10.15.4–10.15.6 | - | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) ( <10.5.7) |
| MacBook Pro+Air, 2019–2020 (UART) | BCM4378B1 | macOS 10.15.1–10.15.7 | - | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |
| iPhone 11/SE2 | BCM4377B3 | iOS 13.3–13.5 | - | (cid:88)(cid:88)(cid:88) | (cid:88)(cid:88)(cid:88) |

### Key Observations
- **Code Execution**: Confirmed on multiple devices, including those with up-to-date firmware.
- **Wi-Fi Firmware**: Always loaded to the same addresses, making it easier to exploit once code execution is confirmed on a single chip.
- **Crash Logs**: Used to confirm code execution. On Android, logs are written to `/data/vendor/log/wifi/`. On iOS and macOS, different debug formats are used.
- **Exploitable Regions**: Can be identified by sending randomized branch instructions. For example, if the Bluetooth chip writes `b 0xcafebabe` to a shared RAM address, it will trigger a crash.
- **Over-the-Air Exploitation**: Demonstrated on a Samsung Galaxy S8 using a modified CYW20735 evaluation board and a Raspberry Pi.
- **Kernel Panics**: Triggered across multiple operating systems, indicating insufficient testing of Wi-Fi drivers.

### Serial Enhanced Coexistence (Broadcom & Cypress)
- **SECI**: A proprietary interface used for coexistence in combo chips. It uses UART to transmit 64-bit coexistence data.
- **Reverse-engineering**: SECI messages can be observed and reverse-engineered using a logic analyzer.
- **DoS and Information Disclosure Attacks**: Possible without additional hardware modifications.

### Conclusion
The vulnerabilities in Wi-Fi/Bluetooth combo chips, particularly in the shared RAM, pose significant security risks. Over-the-air exploitation and kernel panics highlight the need for more robust testing and patching of these interfaces. Reverse-engineering and understanding the SECI protocol can lead to further attacks, emphasizing the importance of securing these interfaces.