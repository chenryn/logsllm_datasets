title:SIRAJ: A Unified Framework for Aggregation of Malicious Entity
Detectors
author:Saravanan Thirumuruganathan and
Mohamed Nabeel and
Euijin Choo and
Issa Khalil and
Ting Yu
5
2
7
3
3
8
9
.
2
2
0
2
.
4
1
2
6
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
2
2
0
2
©
0
0
.
1
3
$
/
2
2
/
9
-
6
1
3
1
-
4
5
6
6
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
2
2
0
2
2022 IEEE Symposium on Security and Privacy (SP)
SIRAJ: A Uniﬁed Framework for Aggregation of
Malicious Entity Detectors
Saravanan Thirumuruganathan, Mohamed Nabeel, Euijin Choo, Issa Khalil, Ting Yu
Qatar Computing Research Institute
{sthirumuruganathan,mnabeel,echoo,ikhalil,tyu}@hbku.edu.qa
Abstract—High-quality intelligence of Internet threat (e.g.,
malware ﬁles, malicious domains, phishing URLs and malicious
IPs) are important
for both security practitioners and the
research community. Given the agility of attackers, the scale
of the Internet, and the fast-evolving landscape of threats, one
could not rely solely on a single source (such as an anti-malware
engine or an IP blacklist) for obtaining accurate, up-to-date,
and comprehensive threat analysis. Instead, we need to aggregate
the analysis from multiple sources. However, it is non-trivial to
do such aggregation effectively. A common practice is to label
an indicator (malware, domains, URLs, etc.) as malicious if it
is marked by a number of sources above an ad-hoc certain
threshold. Often, this results in sub-optimal performance as
it assumes that all sources are of similar quality/expertise,
independent, and temporally stable, which unfortunately are
often not true in practice. A natural alternative is to train
a supervised machine learning model. However, this approach
needs a sufﬁciently large amount of manually labeled ground
truth, which is time-consuming to collect and has to be updated
frequently, resulting in substantial recurring costs.
In this paper, we propose SIRAJ, a novel framework for
aggregating the detection output of various intelligence sources
such as anti-malware engines. SIRAJ is based on the pre-
train and ﬁne-tune paradigm. Speciﬁcally, we use self-supervised
learning-based approaches to learn a pre-trained embedding
model that converts multi-source inputs into a high-dimensional
embedding. The embeddings are learned through three carefully
designed pretext tasks that imbue them with knowledge about
dependencies between scanners and their temporal dynamics.
The learned embeddings could be used for diverse downstream
machine learning tasks. SIRAJ is designed to be general and
can be used for diverse domains such as URLs, malware, and
IPs. Further, SIRAJ works well even when there is limited
to no labeled data available. Through extensive experiments,
we show that our learned representations can produce results
comparable to supervised methods while only requiring as little
as 100 labeled samples. Importantly,
the results show that
SIRAJ accurately detects threat indicators much earlier than
the baseline algorithms, a feat that is critical against short-lived
indicators like Phishing URLs.
I. INTRODUCTION
High-quality intelligence of Internet threat (aka, threat vec-
tors) such as malware ﬁles, malware URLs (that are used
for malware distribution), and malicious IPs, is vital to both
security practitioners and researchers. For practitioners, such
intelligence will help detect and prevent compromises, and
effectively protect users and critical IT infrastructure. For
researchers, high-quality intelligence is paramount for reliable
and comprehensive experimental evaluation of novel machine
learning-based cyber security solutions. Considering the ever-
evolving landscape of Internet security, one cannot rely on a
single source for detecting threats. An alternative is to aggre-
gate the output from multiple sources and then integrate them
to derive a more reliable score. VirusTotal [1], for example, is a
popular website that provides scanning services for IPs, ﬁles,
and URLs. For concreteness, let us consider the VirusTotal
URL scan service for detecting phishing and malware-hosting
URLs. It aggregates results from over 70 third-party scanners
ranging from popular ones such as Google Safe Browsing
(GSB), Sophos, and Fortinet to less known ones such as Lumu,
VX Vault, and GreenSnow. These scanners exhibit different
types of expertise – for example, OpenPhish specializes in
detecting phishing URLs, while URLhaus specializes in de-
tecting malware URLs, and GSB specializes in both. This
divergence makes the problem of combining multiple-source
intelligence (such as VirusTotal) into an integrated high-quality
one quite challenging.
Prior Approaches and Their Limitations. Given the im-
portance of this problem, there has been extensive work on
developing various heuristics for aggregating the predictions
of multiple detectors into a single detection. A simple and
commonly used method is to use a cutoff threshold τ. If
more than τ intelligence sources (e.g., VirusTotal scanners)
identify an entity as malicious, it is treated as malicious.
However, there is no consensus among the community on
the appropriate threshold. For example, prior work using
VirusTotal has chosen thresholds of 1 [2], [3], [4], 2 [5], [6],
and 5 [7]. Setting a too-high threshold would miss a lot of
malicious cases, while a too-low threshold would introduce
many false positives. The threshold-based approach implicitly
treats each intelligence source as having similar expertise and
quality, contradicting several prior works [8], [9], [10], [11].
Furthermore, using a static threshold cannot handle dynamic
scenarios where the quality of intelligence sources varies with
time. This could result in ﬂuctuations of the maliciousness of
an entity which is undesirable [8], [9]. An alternate approach
is to train a machine learning (ML) model that can take as
input the predictions of multiple sources (such as VirusTotal
URL scan reports or multiple IP blacklists) and output a single
prediction about the maliciousness of the entity. The state-
of-the-art approaches [12], [5], [13], [14], [15], [16], [17],
[18], [19], [20] have achieved high accuracy. However, such
approaches are not sustainable in practice as training ML
models (especially deep learning based) require a large number
of manually labeled training data. Collecting such data is time
© 2022, Saravanan Thirumuruganatha. Under license to IEEE.
DOI 10.1109/SP46214.2022.00069
507
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 13:03:36 UTC from IEEE Xplore.  Restrictions apply. 
consuming and requires constant updates to compensate for
concept drift where the distribution of the test data increasingly
differs from the training data.
A. Outline of Technical Results
We propose SIRAJ, a novel solution framework that can
intelligently and accurately aggregate the predictions of vari-
ous threat detectors. SIRAJ has the following properties that
distinguish it from prior work. SIRAJ is a uniﬁed framework
that can be applied for diverse domains in a transparent man-
ner. In our experiment section, we evaluate our approach over
four types of malicious entities – Phishing URLs, malware
URLs, malware ﬁles and malicious IPs. SIRAJ achieves this
by a careful design of domain-agnostic representations. In
other words, instead of designing features for each domain
(URLs vs. malware ﬁles vs. IPs), we propose a novel approach
that represents prediction of multiple sources as a dense high-
dimensional vector that encodes various information such as
the dependencies between different sources and their temporal
dynamics. Another practical concern is that the initial threat
indicators are often not reliable, and it takes several hours
or even days before they produce stabilized results for fresh
inputs. However, phishing and malware attacks increasingly
use disposable URLs used only for a few hours. To reduce the
potential damage, it is paramount to detect malicious entities
from early unreliable reports. SIRAJ’s embeddings capture
the temporal relationship among different intelligence sources,
allowing it to detect malicious entities much earlier than either
threshold-based or supervised ML-based approaches.
Overview of Our Approach. Our framework is based on the
pre-train and ﬁne-tune paradigm [21]. It is often much easier
to collect a number of unlabeled reports from sources such
as VirusTotal and aggregated IP blacklists. However, the cost
of labeling the data is much higher. Hence, it is desirable to
design a solution that requires limited to no labeled data. We
design three novel pretext tasks for which labeled data could
be obtained automatically without the need of any domain
expert. These tasks are carefully designed to learn relevant
features such as the dependencies between various sources
and their temporal dynamics. The output of these tasks is an
encoder that can convert multiple intelligence reports into an
embedding that is domain and time-invariant. We use multi-
task learning [22] so that we learn a single encoder for all these
three tasks. Once the encoder is pre-trained using unlabeled
data,
it could then be used for diverse downstream tasks
(e.g., classiﬁcation, clustering or prediction). To the best of
our knowledge, we are the ﬁrst to propose such a generic
framework based on self supervised learning that could be
reused for multiple types of malicious entities. We focus
on two common settings – one with a limited amount of
labeled data and one with no labeled data at all. Our learned
representations can outperform supervised methods while only
requiring as little as 100 labeled samples.
Summary of Contributions.
• We propose SIRAJ, a uniﬁed framework for aggregating
multi-source intelligence for diverse entity types, includ-
ing URLs, malware ﬁles, and IPs.
• We design three novel pretext tasks for self-supervised
learning. The goal of these tasks is to learn the de-
pendencies between intelligence sources and temporal
dynamics across time. We learn a single embedding that
is consistent with all these three tasks.
• SIRAJ outperforms threshold-based, supervised ML-
based, and generative model-based approaches, in terms
of not only accuracy but also timely intelligence. Our em-
beddings are robust to random and adversarial corruptions
and gracefully handle concept drift.