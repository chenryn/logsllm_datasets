除了获取客户之外，这是自由职业者要面对的最大的难题之一。大多数自由职业者都大大低估了他们能够向客户收费的金额以及他们需要向客户收费的金额。
首先，让我们谈谈你需要向客户收取多少费用。我们假设你当前工作（作为员工）的薪水是每小时50美元。在美国这是一个相当不错的工资，但是作为一个自由职业者，要想维持以前的生活水准，你不能收取同样的费用。让我来解释一下。
作为一名员工，除了每小时50美元的薪金之外，你可能还会有其他的一些福利。你也许会有医疗福利和带薪假期。另外，在美国，如果你为自己工作，你必须支付所谓的“自主就业税”——是的，这是政府因为你为自己工作而额外征收的费用。（其实这并不完全准确。现在是你的雇主为你缴纳此税，所以无关紧要。）把上面说的这些全都算上，做雇员时的每小时50美元相当于做自由职业者的每小时65美元。
现在，让我们再来看看商业运作方面的开销。做雇员的时候，电费、电脑设备、网络等都由雇主支付费用。但是作为自由职业者，你必须自己支付所有这些费用。你可能还需要聘请会计师或者记账员，也许还要支付法律方面的费用，以及经营小微企业所涉及的其他费用。把这一切统统都算到一起，你需要赚更多的钱来支付这些开销。
最后，让我们来谈谈工作任务编排吧。你做雇员的时候，通常每周工作40小时——在美国是这样的。你其实并不担心如何填满你的时间，因为无论是否有具体的工作任务，只要你在办公桌前坐着，你就会领到一份薪水。但是自由职业者不是这样的。作为自由职业者，你可能每年（甚至每周）都会有停工期。此外，你不能因为查看和回复电子邮件、给你的计算机安装操作系统或者别的日常工作向客户收取费用，因为这些都不是直接收费工作。
把上面所说的所有这些都加到一起，你会发现，作为自由职业者，你大概需要收取每小时75～100美元的费用才能在净收入方面等同于你做员工时每小时50美元的薪水。许多自由职业者对此不明就里，还是按照做员工时的计算方式收费，或者稍稍高一点，然后就发现自己现在的收入只能勉强糊口。直到按照我列出的方法重新算一遍，他们才茅塞顿开。
通用的规则是，成为了自由职业者之后，你的时薪水平应该是作为全职雇员时的两倍（见表12-1）。然而，遗憾的是，很多人并没有这样收费。
表12-1 全职雇员与自由职业者对比
全职雇员的薪酬
自由职业者的薪酬
每小时50美元 －无
每小时100美元 － 自主就业税 － 办公设备 － 会计或者记账员 － 非计费时间
实际收入=每小时50美元
实际收入=每小时50美元
你看，你不能根据你认为你需要赚的钱数想当然地丢出一个薪酬标准，然后等人自动买单。相反，你的收费标准是由市场决定的。这也是我反复强调吸引式营销的一大原因。你在业界的名气越大，你的客户就越多，你能收取的服务费也就越高。
你还需要知道你要按什么价码收费才能谋生，你需要根据市场来判断定价——或者更高一点。这么做的重点不在收费标准本身，而是你的工作对你的客户而言是否物有所值。你可以把自己的工作看作是商品，也可以把它看作是能够增加客户盈利能力的服务。如果你决定把自己的工作看作是商品，为了工作你就不得不跟其他开发人员竞价了，这些人中很多人的出价是很低的。在这种情况下，市场将推动买方接受出价最低的自由职业者。
但是，如果你的营销策略是基于自己的服务可以为客户节省大笔开支或者提高他们的业务，你就可以根据自己的服务为客户带来的价值来定价。这就是“专业性”如此重要的原因。
我来给你举一个例子。我提供的咨询服务中有一项是关于创建自动化测试框架的。当我和潜在客户就这项服务议价的时候，我会列出构建自动化测试框架需要多少钱，也会说明如果软件出错的话修复的成本有多高昂。然后，我会讲自己在构建自动化测试框架方面的丰富经验，并且我确切知道要做什么。
我还会向潜在客户展示，如果以每小时300美元的价格雇用我其实要比雇用一个以前没有写过自动化测试框架的普通开发人员便宜得多。我会告诉他们，我1小时的指导可以节省他们20小时的也许是南辕北辙的工作。
我没有撒谎。投标之所以如此高效，是因为我真的相信这是真的。关键点在于，我强调自己的服务完全值这个价钱，并且我的服务物超所值。因此让潜在客户们做出雇用我而非其他只会从技术角度谈论他或她能做什么的廉价竞争者这样的决定，也就非常容易了。
以下两种表述方式你认为哪一种更好？
“我可以为你的业务设计出全新的网站。我非常擅长HTML5、CSS以及网页设计，并成功地为许多与贵公司类似的公司创建了网站。”
“你当前的网站能够给你带来足够的点击量，并且将这些点击量有效地转换成为客户吗？贵公司可能和大多数小企业一样，答案是‘不能’。不过不用担心，我可以帮你创建一个顶级的定制化网站，专门来提高你的流量和转化率。我已经帮许多其他的小企业提高了两倍甚至三倍的客户，我也可以帮你做到。”
关于如何收费的最后一条建议是，如果没有任何潜在客户跟你讲“不行”或者“你的收费太贵了”，马上提高费率！不断给你的收费加码，直到你听到“不行”为止。客户愿意为你的服务付的价格可能会让你大吃一惊。我知道有些自由职业者通过使用这种方法，配合使用吸引式营销和根据自己能为客户带来的价值来调整价格，让自己的收费提升了不止一倍。
采取行动
整理一份名单，列出谁有可能会使用你的服务，或者谁知道谁会使用你的服务。
制作一个电子邮件模板，使用该模板给上面那份名单里的每一个人发邮件（记得一定要谈论你会给他们带来怎样的价值，而不仅仅只是从技术的角度告诉他们你能做什么）。
在社交媒体上发布消息，给名单上的一小部分人发送邮件，看看会有什么反馈。一旦得到反馈，更新你的邮件模板，发送给更多人。
第13章 创建你的第一个产品
作为一名软件开发人员，你拥有成为一名企业家得天独厚的优势，不仅能提出概念或新想法，还能自己把它创造出来。正是出于这个原因，许多开发人员选择创业、选择自己创造产品，而别的企业家不得不雇用他人来实现自己的想法。正如你所知，开发定制软件可是价格不菲。
作为软件开发人员，你不仅能够开发软件产品，还可以开发书籍和视频这样的信息产品。
在本章中，我会帮助你了解，创建自己的第一个产品，并开始漫长而又崎岖的创业之路你需要知道的。不过我要警告你，你即将踏上的这条道路坎坷不断。
找到受众
许多软件开发人员一开始就深陷创业者最常犯的错误之中——在为产品找到客户之前就构建好产品。从构建产品开始可能有些道理，不过你要避免落入这个陷阱之中，否则你只是冒险为一个不存在的问题创造了一个解决方案。
人类创造出的每个产品（包括这本书在内）都是为了解决某个特定的问题。没有要解决的问题的产品毫无意义，毫无意义的产品自然也就不会有用户，也就意味着你不会赚到钱。有些产品专门解决一些特殊群体遇到的特定问题。例如，一款能够帮助牙医管理自己的病人的软件产品，或者一本能帮助软件开发人员学会如何使用.NET Unity框架的书。还有一些产品解决普遍的问题，例如，无聊——娱乐产品（如电视节目和视频游戏）可归入此类。无论一个产品要解决何种问题，以及哪些人群有这个问题，必须在创建产品之前就要明确识别。
如果你想开发出一款产品，第一步应该是筛选出一组特定的受众，他们也是你的解决方案的目标用户。针对这些人你要解决的问题是什么，你可能已经有了总体概念。不过在很多情况下，你要多做一些调研，找出要么没被解决的问题，要么没有被很好解决的问题。
去目标客户常去的地方，与用户参与的社区交流，了解一下普遍存在哪些问题。你能从中看到的痛点有哪些。
我开始注意到这样一个趋势——软件开发人员向我咨询如何打造业界声誉，如何提高自己的曝光率，或者如何增加关注度。许多访问我博客的软件开发人员也会问我相关的问题。我看到这里有一个实际问题——软件开发人员有学习自我营销的需要。（在这个案例中，我的受众是直接通过我的博客告诉我他们的问题的，所以事情就变得简单了。这是要拥有博客的另一个原因。）
我决定创建新产品来解决这一问题。我创建了一个名为“软件开发人员如何自我营销”的课程（http://devcareeboost.com/m）。由于这个产品解决了我的目标客户一个非常具体的问题，所以在我投入时间进行创建之前我就知道它一定会成功。（我还有另外一种可以提前验证产品是否成功的方法，稍后会谈到。）
产品需要客户
而许多开发人员是反着来的。他们在尚未有受众的时候就创建产品，然后再四处推销，努力寻找受众。当你以这样的方式做事情时，你要冒很大的风险，因为执果索因往往更加困难。
在我创建“软件开发人员如何自我营销”这个课程时，我的受众已经事先找到我，并告诉我他们的问题。要想让产品轻松卖出去，这是一个非常好的启动方法；构建产品再找受众，则与之相反。我们会在第二篇讨论如何自我营销。如果你利用其中提及的方法让自己成名，被粉丝围绕，并产出被追捧的内容，你会发现你已经拥有了愿意购买你创建的任何产品的客户。
许多名流使用这种方法创建和销售产品。他们已经拥有了一大群受众，并且对受众的需求和问题了然于胸。当他们面向受众发布新产品的时候，自然就会成功。以格林•贝克[1]为例。抛开政治观点不论，正是由于受众庞大，这家伙才能成为《纽约时报》最畅销书作家。他没有必要去寻找受众，因为他创造了受众。他做出来的每一样东西自然而然地就有人等着去买。
如果你想让自己的产品也同样成功（虽然也许在规模上达不到），首先打造一个成功的博客，使用播客、演讲、视频和其他媒体来发展自己的受众。接下来，一旦你有了受众，你就能够向这些受众销售自己的产品。你之所以购买这本书可能就是因为你已经是我博客的粉丝，或者因为关注我的其他工作而无意中发现这本书，或者你之前听过我的播客。这就是发展自己的受众的威力。
测试市场
一旦你明确了产品的受众，并明确了如何用它解决用户的问题，在开发产品之前你还有一步工作需要完成。你应该通过测试市场来验证你的产品，看看你的潜在客户是否真的愿意为它买单。
记得在上一节我讲过，在创建“软件开发人员如何自我营销”这个产品之前，我还采用了另一种方法验证自己的成功。这是一个小秘密：甚至在我正式开始这项工作之前，已经有人为其付费了。
你可能会问我是怎么做到的。简单说就是：我要求他们这么做的。在我计划创建这个产品的时候，我决定在投入数月时间做这件事情之前就广而告之——我将要创建一个什么样的产品，并且为产品还没创建之前就付费的用户提供大幅折扣。这看似有点儿疯狂（在某种程度上说还真是这样），不过要想在投入全部时间开发产品之前，证明是否会有人真的愿意为它付费，这是个好办法。我还知道，如果我能让软件开发人员（我的目标客户）提前3个月（或更早）付费，那等产品正式上线时，销路就不成问题。
所以你可以这么做：创建一个简单的销售网页，讲述你将要创建的产品以及它将解决什么问题，讲述你的产品会包含哪些内容以及产品上市的确切时间，给个折扣价让感兴趣的人可以提前预订产品，保证产品一发布他们就能拿到。你还要提供退款保证，让潜在客户知道如果你的产品不能如期交付或者不能令他们满意，他们可以得到退款。
但是如果预订数量有限怎么办？碰到这种情况，你可以决定是否要修改产品或者作品，因为你不是在解决正确的问题，或者你可以直接退款给那几位预订者，向他们道歉，告诉他们感兴趣的人不多。这不是一件有趣的事儿，但总比花了3个月或更长的时间做好产品之后才发现没有人愿意买要强得多。
在我把预售网页上线的第一天，我的生意就开张了，卖出了7份程序副本。这给了我足够的信心，我知道自己可以继续前行，也知道自己并不是在浪费时间。我也有一群非常有兴趣的客户，我经常向他们征求反馈意见以帮助自己提升正在开发的产品。