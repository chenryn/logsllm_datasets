DynELF 模块...............................................................................................................401
12.4.2
DynELF 原理...............................................................................................................402
12.4.3
XDCTF 2015：pwn200............................................................................................... 403
12.4.4
其他泄露函数..............................................................................................................406
12.5
SSP Leak.................................................................................................................................. 409
12.5.1
SSP............................................................................................................................... 409
12.5.2
__stack_chk_fail()........................................................................................................ 411
12.5.3
32C3 CTF 2015：readme............................................................................................ 412
12.5.4
34C3 CTF 2017：readme_revenge..............................................................................416
12.6
利用 environ 泄露栈地址........................................................................................................422
12.7
利用_IO_FILE 结构.................................................................................................................429
12.7.1
FILE 结构体.................................................................................................................429
目录 ┃ XV
12.7.2
FSOP............................................................................................................................ 431
12.7.3
FSOP（libc-2.24 版本）............................................................................................. 433
12.7.4
HITCON CTF 2016：House of Orange.......................................................................438
12.7.5
HCTF 2017：babyprintf.............................................................................................. 445
12.8
利用 vsyscall............................................................................................................................ 449
12.8.1
vsyscall 和 vDSO......................................................................................................... 449
12.8.2
HITB CTF 2017：1000levels...................................................................................... 451
参考资料.............................................................................................................................................456
第 1 章
CTF 简介 ┃ XVI
第 1 章
CTF 简介
1.1
赛事介绍
1.1.1
赛事起源
CTF（Capture The Flag）中文一般译作夺旗赛，原为西方传统运动，即两队人马相互前往敌方
的基地夺取旗帜。这恰如“黑客”在竞赛中的一攻一防，因此在网络安全领域中被用于指代网络安
全技术人员之间进行技术竞技的一种比赛形式，其形式与内容体现了浓厚的黑客精神和黑客文化。
CTF 起源于 1996 年 DEFCON 全球黑客大会，以代替之前黑客们通过互相发起真实攻击进行技
术比拼的方式。发展至今，已经成为全球范围网络安全圈流行的竞赛形式，2013 年全球举办了超过
五十场国际性 CTF 赛事。作为 CTF 赛制的发源地，DEFCON CTF 也成为目前全球技术水平和影响
力最高的 CTF 竞赛，类似于 CTF 赛事中的“世界杯”。
CTF 的大致流程是，参赛团队之间通过攻防对抗、程序分析等形式，率先从主办方给出的比赛
环境中得到一串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方
便称呼，我们把这串内容称为“flag”。
近年来，随着网络安全越来越受到国家和大众的关注，CTF 比赛的数量与规模也发展迅猛，国
内外各类高质量的 CTF 竞赛层出不穷，CTF 已经成为学习、提升信息安全技术，展现安全能力和水
平的绝佳平台。
1.1.2
竞赛模式
解题模式（Jeopardy）
在解题模式 CTF 赛制中，参赛队伍可以通过互联网或者现场网络参与。这种模式的 CTF 竞赛与
ACM 编程竞赛、信息学奥赛类似，以解决网络安全技术挑战题目的分值和时间来排名，通常用于在
线选拔赛，选手自由组队（人数不受限制）。题目主要包含六个类别：RE 逆向工程、Pwn 漏洞挖掘
与利用、Web 渗透、Crypto 密码学、Mobile 移动安全和 Misc 安全杂项。
攻防模式（Attack-Defense）
在攻防模式 CTF 赛制中，参赛队伍在网络空间互相进行攻击和防守，通过挖掘网络服务漏洞并
第 1 章
CTF 简介 ┃ XVII
攻击对手服务来得分，通过修补自身服务漏洞进行防御来避免丢分。攻防模式通常为线下赛，参赛
队伍人数有限制（通常为 3 到 5 人不等），可以实时通过得分反映出比赛情况，最终也以得分直接
分出胜负。这是一种竞争激烈、具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不
仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续 48 小时及以上），同时也比团
队之间的分工配合与合作。
混合模式（Mix）
结合了解题模式与攻防模式的 CTF 赛制，主办方会根据比赛的时间、进度等因素来释放需解答
的题目，题目的难度越大，解答完成后获取的分数越高。参赛队伍通过解题获取一些初始分数，然
后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式 CTF 赛制的典
型代表如 iCTF 国际 CTF 竞赛。
1.1.3
竞赛内容
Reverse
逆向工程类题目需要对软件（Windows、Linux 平台）的结构、流程、算法等进行逆向破解，要
求有较强的反汇编、反编译的功底。主要考查参赛选手的逆向分析能力。所需知识：汇编语言、加
密与解密、常见反编译工具。
Pwn
Pwn 在黑客俚语中代表着攻破，获取权限，由“own”这个词引申而来。在 CTF 比赛中它代表
着溢出类的题目，常见的类型有整数溢出、栈溢出、堆溢出等。主要考查参赛选手对漏洞的利用能
力。所需知识：C、OD+IDA、数据结构、操作系统。
Web
Web 是 CTF 的主要题型，涉及许多常见的 Web 漏洞，如 XSS、文件包含、代码执行、上传漏
洞、SQL 注入等。也有一些简单的关于网络基础知识的考察，如返回包、TCP/IP、数据包内容和构
造。可以说题目环境比较接近真实环境。所需知识：PHP、Python、TCP/IP、SQL。
Crypto
密码学类题目考察各种加/解密技术，包括古典加密技术、现代加密技术甚至出题者自创加密技
术，以及一些常见的编码解码。主要考查参赛选手密码学相关知识点，通常也会和其他题目相结合。
所需知识：矩阵、数论、密码学。
Mobile
Mobile 类题目主要涉及 Android 和 iOS 两个主流移动平台，以 Android 逆向为主，破解 APK 并
提交正确 flag。所需知识：Java、Android 开发、常见工具。
Misc
第 1 章
CTF 简介 ┃ XVIII
Misc 即安全杂项，题目涉及隐写术、流量分析、电子取证、人肉搜索、数据分析、大数据统计
等，覆盖面比较广。主要考查参赛选手的各种基础综合知识。所需知识：常见隐写术工具、Wireshark
等流量审查工具、编码知识。
1.2
知名赛事及会议
1.2.1
网络安全竞赛
参与高质量的 CTF 竞赛不仅能获得乐趣，更能获得技术上的提升。我们可以在网站 CTFtime 上
获取 CTF 赛事的信息以及各大 CTF 战队的排名，如图 1-1 所示。一般来说，一些黑客传统赛事，或
者知名企业和战队所举办的 CTF 质量都比较高。
图 1- 1
CTFtime 网站
下面我们列举几个知名度较高的网络安全赛事。
DEFCON CTF
全球最知名、影响力最广，且历史悠久的赛事，是 CTF 中的世界杯。其主要特点是题目复
杂度高，偏重于真实环境中的漏洞挖掘和利用。DEFCON CTF 分为线上预选赛（Qualifier）
和线下决赛（Final），预选赛通常于每年 5 月开始，排名靠前的战队有机会入围线下决赛；
线下决赛通常于每年 8 月在美国的拉斯维加斯举行。当然，每年还有持外卡参赛的战队，他
第 1 章
CTF 简介 ┃ XIX
们往往是其他一些重量级 CTF 的冠军，如 HITCON CTF、SECCON CTF 等。最终会有 15～
20 支战队参加决赛。
线上赛等题目以二进制程序分析和漏洞利用为主，还有少量的 Web 安全和杂项等题目。而
线下赛采用攻防模式，仍以二进制漏洞利用为主，且难度更高，战况也更加激烈。
2013 年清华大学蓝莲花战队（Blue-Lotus）成为国内首支入围 DEFCON CTF 决赛的战队。
2020 年腾讯 A*0*E 联合战队斩获冠军，刷新中国战队最佳纪录。
Pwn2Own
全球奖金最丰厚的著名赛事，由美国五角大楼网络安全服务商、惠普旗下 TippingPoint 的
项目组 ZDI（Zero Day Initiative）主办，谷歌、微软、苹果、Adobe 等厂商均对比赛提供支持，
以便通过黑客攻击挑战来完善自身产品。大赛自 2007 年举办至今，每年 3 月和 11 月分别在
加拿大温哥华以及日本东京各举办一次。
与 CTF 竞赛略有不同，Pwn2Own 的目标是四大浏览器 IE、Chrome、Safari 和 Firefox 的最
新版；Mobile Pwn2Own 的目标则是 iOS、Android 等主流手机的操作系统。能在 Pwn2Own
上获奖，象征着其安全研究已经达到世界领先水平。
2016 年，腾讯安全 Sniper 战队凭借总积分 38 分成为 Pwn2Own 历史上第一个世界总冠军，
并且获得该赛事史上首个 Master of Pwn（世界破解大师）称号。
CGC（Cyber Grand Challenge）
由美国国防部高级研究计划局（Defense Advanced Research Projects Agency，DARPA）于
2013 年发起，旨在推进自动化网络攻防技术的发展，即实时识别系统缺陷、漏洞，自动完成
打补丁和系统防御，并自动生成攻击程序，最终实现全自动的网络安全攻防系统。
CGC 的比赛过程限制人工干预，完全由计算机实现，可以理解为人工智能之间的 CTF。
其亮点在于系统的全自动化，主要难度在于如何在无限的状态下尽快找到触发漏洞的输入，
以及对发现的漏洞进行自动修复和生成攻击。
2016 年由美国卡内基梅隆大学（CMU）研发的自动攻防系统 Mayhem 获得决赛冠军。之
后，该系统还参加了当年的 DEFCON CTF 决赛，与人类战队同台竞技，并且阶段性地压制了
部分选手。
XCTF 联赛
由清华大学蓝莲花战队发起组织，网络空间安全人才基金和国家创新与发展战略研究会联
合主办，面向高校及科研院所学生、企业技术人员、网络安全技术爱好者等群体，是一项旨
在发现和培养网络安全技术人才的竞赛活动。该竞赛由选拔赛和总决赛组成。
全国大学生信息安全竞赛
简称“国赛”，由教育部高等学校信息安全专业教学指导委员会主办，目的在于宣传信息
安全知识；培养大学生的创新精神、团队合作意识；扩大大学生的科学视野，提高大学生的
第 1 章
CTF 简介 ┃ XX
创新设计能力、综合设计能力和信息安全意识；促进高等学校信息安全专业课程体系、教学
内容和方法的改革；吸引广大大学生踊跃参加课外科技活动，为培养、选拔、推荐优秀信息
安全专业人才创造条件。竞赛时间一般为每年的 3 月至 8 月。
竞赛分为技能赛和作品赛两种。其中，技能赛采取 CTF 模式，参赛队伍通过在预设的竞赛
环境中解决问题来获取 flag 并取得相应积分。初赛为在线解题模式，决赛为线下实战模式。
作品赛以信息安全技术与应用设计为主要内容，竞赛范围定为系统安全、应用安全（内容安
全）、网络安全、数据安全和安全检测五大类，参赛队自主命题，自主设计。
“强网杯”全国网络安全挑战赛
是由中央网信办网络安全协调局指导、信息工程大学主办的、面向高等院校和国内信息安
全企业的国家级网络安全赛事。
竞赛分为线上赛、线下赛和精英赛三个阶段，比赛内容主要围绕网络安全和系统安全中的
现实问题进行设计。
2018 年第二届“强网杯”共计有 2622 支战队，13250 名队员报名参加，覆盖 30 多个省份，
堪称国内网络安全竞赛之最。
HITCON CTF：由中国台湾骇客协会（HIT）在知名黑客会议 HITCON 同期举办。
0CTF/TCTF：由上海交通大学 0ops 战队和腾讯 eee 战队联合举办。
XDCTF/LCTF：由西安电子科技大学信息安全协会（XDSEC）和 L-team 战队主办。
1.2.2
网络安全会议
下面我们介绍一些知名的网络安全会议。
RSA
信息安全界最有影响力的安全盛会之一， 1991 年由 RSA 公司发起，一般于每年 2 月至 3
月在美国旧金山 Moscone 中心举办。每年有众多的信息安全从业者、安全服务商、研究机构
和投资者参加。他们对未来信息安全的发展趋势做出预测，并共同评选出最具创新的公司及
产品，因此，该会议也被称为世界网络安全行业的风向标。
每年大会都会选定一个独特的主题，设计一个故事并将其贯穿整个会议。2019 年的主题是
“Better”，折射出信息安全领域逐渐转向实践以及不断发展提升、越来越好的愿景。
Black Hat
国际黑帽大会。由知名安全专家 Jeff Moss 于 1997 年创办，最初于每年 7 月至 8 月在拉斯
维加斯举办。经过 20 多年的发展，该会议已经由单次会议转为每年在东京、阿姆斯特丹、拉
斯维加斯、华盛顿等地举办的一系列会议，内容包括了培训、报告和展厅等。
第 1 章
CTF 简介 ┃ XXI
DEFCON
同样由 Jeff Moss 于 1993 年在拉斯维加斯发起，从最初的小型聚会逐步发展为世界性的安
全会议。其特色是弘扬黑客文化，以及进行 DEFCON CTF 决赛。
中国互联网安全大会
简称 ISC（China Internet Security Conference），从 2013 年开始，由中国互联网协会、中
国网络空间安全协会和 360 互联网安全中心等共同主办，是亚太地区规格最高、规模最大、
最有影响力的安全会议之一。
1.2.3
网络安全学术会议
网络安全领域的最新学术成果一般会发表在顶级会议上，四大顶会如下。
CCS(A)：ACM Conference on Computer and Communications Security
NDSS(B)：Network and Distributed System Security Symposium
Oakland S&P(A)：IEEE Symposium on Security & Privacy
USENIX(A)：USENIX Security Symposium
1.3
学习经验
1.3.1
二进制安全入门
二进制安全是一个比较偏向于底层的方向，因此对学习者的计算机基础要求较高，如
C/C++/Python 编程、汇编语言、计算机组成原理、操作系统、编译原理等，可以在 MOOC 上找到很
多国内外著名高校的课程资料，中文课程推荐网易云课堂的大学计算机专业课程体系，英文课程推
荐如下。
Harvard CS50 Introduction to Computer Science
CMU 18-447 Introduction to Computer Architecture
MIT 6.828 Operating System Engineering
Stanford CS143 Compilers
在具备了计算机基础后，二进制安全又可以细分为逆向工程和漏洞挖掘与利用等方向。学习的
目标是掌握各平台上静态反汇编（IDA、Radare2）和动态调试（GDB、x64dbg）工具，能够熟练阅
读反汇编代码，理解 x86、ARM 和 MIPS 二进制程序，特别要注意程序的结构组成和编译运行的细
节。此阶段，大量动手实践是达到熟练的必经之路。推荐资料如下。
Secure Coding in C and C++, 2nd Edition
The Intel 64 and IA-32 Architectures Software Developer’s Manual
ARM Cortex-A Series Programmer’s Guide
第 1 章
CTF 简介 ┃ XXII