### References

[23] V. Cortier, S. Delaune, and P. Lafourcade, "A survey of algebraic properties used in cryptographic protocols," *Journal of Computer Security*, vol. 14, no. 1, pp. 1–43, 2006.

[24] M. Feldhofer, S. Dominikus, and J. Wolkerstorfer, "Strong authentication for RFID systems using the AES algorithm," in *Cryptographic Hardware and Embedded Systems-CHES 2004*. Springer, 2004, pp. 357–370.

[25] S. Delaune, S. Kremer, and M. D. Ryan, "Verifying privacy-type properties of electronic voting protocols: A taster," in *Towards Trustworthy Elections – New Directions in Electronic Voting*. Springer, 2010, vol. 6000.

[26] M. Brusó, K. Chatzikokolakis, S. Etalle, and J. Den Hartog, "Linking unlinkability," in *Trustworthy Global Computing*. Springer, 2012, pp. 129–144.

[27] M. Brusó, "Dissecting unlinkability," Ph.D. dissertation, Technische Universiteit Eindhoven, 2014.

[32] B. Blanchet, M. Abadi, and C. Fournet, "Automated verification of selected equivalences for security protocols," in *Logic in Computer Science, 2005. LICS 2005. Proceedings. 20th Annual IEEE Symposium on*. IEEE, 2005, pp. 331–340.

[33] M. Abadi and B. Blanchet, "Computer-assisted verification of a protocol for certified email," in *Static Analysis*. Springer, 2003, pp. 316–335.

[34] A. Juels and S. A. Weis, "Defining strong privacy for RFID," *ACM Transactions on Information and System Security (TISSEC)*, vol. 13, no. 1, p. 7, 2009.

[35] S. Lee, T. Asano, and K. Kim, "RFID mutual authentication scheme based on synchronized secret information," in *Symposium on Cryptography and Information Security*, 2006.

[36] "PKI for machine readable travel documents offering ICC read-only access," International Civil Aviation Organization, Tech. Rep., 2004.

[37] M. Arapinis, V. Cheval, and S. Delaune, "Verifying privacy-type properties in a modular way," in *Proceedings of the 25th IEEE Computer Security Foundations Symposium (CSF’12)*. Cambridge, Massachusetts, USA: IEEE Computer Society Press, Jun. 2012, pp. 95–109.

[38] "Technical advisory group on machine-readable travel documents (TAG/MRTD)." [Online]. Available: http://www.icao.int/Meetings/TAG-MRTD/TagMrtd22/TAG-MRTD-22_WP05.pdf

[28] M. Backes, M. Maffei, and D. Unruh, "Zero-knowledge in the applied pi-calculus and automated verification of the direct anonymous attestation protocol," in *Security and Privacy, 2008. SP 2008. IEEE Symposium on*. IEEE, 2008, pp. 202–215.

[29] J. Bender, M. Fischlin, and D. Kügler, "Security analysis of the PACE key-agreement protocol," in *Information Security*. Springer, 2009, pp. 33–48.

[30] "Proverif: Cryptographic protocol verifier in the formal model." [Online]. Available: http://prosecco.gforge.inria.fr/personal/bblanche/proverif/

[31] "UKano tool and case studies." [Online]. Available: http://projects.lsv.ens-cachan.fr/ukano/

[39] J. Bender, Ö. Dagdelen, M. Fischlin, and D. Kügler, "The PACE AA protocol for machine-readable travel documents, and its security," in *Financial Cryptography and Data Security*. Springer, 2012, pp. 344–358.

[40] L. Cheikhrouhou, W. Stephan, Ö. Dagdelen, M. Fischlin, and M. Ullmann, "Merging the cryptographic security analysis and the algebraic-logic security proof of PACE." in *Sicherheit*, 2012, pp. 83–94.

[41] R. Küsters and T. Truderung, "Reducing protocol analysis with XOR to the XOR-free case in the Horn theory-based approach," *J. Autom. Reasoning*, vol. 46, no. 3-4, pp. 325–352, 2011.

### Appendix A: Proofs of Section IV

**Definition 17:** Let \( u \in T(\Sigma_c, N) \). We define \( h_0(u) \) as the maximum number of nested transparent function symbols in \( u \). Then, \( h_t(u) \) is the minimum of all \( h_0(v) \) for \( u =_E v \).

**Proposition 5:** For any \( u =_E f(u_1, \ldots, u_n) \) with \( f \in \Sigma_t \), we have \( h_t(u) > h_t(u_i) \) for all \( i \).

*Proof:* We show that, for all \( v =_E u \), \( h_0(v) > h_t(u_i) \). Since \( v =_E f(u_1, \ldots, u_n) \), and since the equational theory cannot involve \( f \) by definition of \( \Sigma_t \), we have \( v = f(v_1, \ldots, v_n) \) with \( v_i =_E u_i \). We conclude: \( h_t(u_i) = h_t(v_i) \leq h_0(v_i) < h_0(v) \). ◻

**Definition 18:** The relation \( R_{\text{ideal}}: T(\Sigma_c, N) \times T(\Sigma_t, \{\Box\}) \):
- \( u R_{\text{ideal}} f(t_1, \ldots, t_n) \) if there exist \( f \in \Sigma_t \) and messages \( u_i \) for \( 1 \leq i \leq n = \text{ar}(f) \), such that \( u =_E f(u_1, \ldots, u_n) \) and \( u_i R_{\text{ideal}} t_i \) for all \( 1 \leq i \leq n \);
- \( u R_{\text{ideal}} \Box \) otherwise.

*Proof:* We proceed by induction over \( h_t(u) \). If \( u \) cannot be equated to a message with a transparent function symbol at the top level, then the result is obvious with \( v = \Box \). Otherwise, assume \( u =_E f(u_1, \ldots, u_n) \). By induction hypothesis, we obtain \( u_i R_{\text{ideal}} v_i \) for all \( i \), and thus \( u R_{\text{ideal}} f(v_1, \ldots, v_n) \). Consider now \( u' \), \( v \), and \( v' \) such that \( u =_E u' \), \( u R_{\text{ideal}} v \), and \( u' R_{\text{ideal}} v' \). Observe that \( u' =_E f'(u'_1, \ldots, u'_m) \) is only possible if \( f = f' \), \( n = m \), and \( u_i =_E u'_i \) for all \( i \). Thus, \( v = f(v_1, \ldots, v_n) \) and \( v' = f(v'_1, \ldots, v'_n) \). Moreover, \( v_i = v'_i \) by induction hypothesis, which concludes the proof. ◻

**Proposition 6:** For all messages \( u \), there exists a \( v \) such that \( u R_{\text{ideal}} v \). The above results immediately allow us to show Proposition 1.

### Appendix B: Proofs of Section V

**Proposition 3:** Let \( \Pi \) be a protocol ensuring frame opacity. Let \( P \) be a ground configuration of \( \Pi \), \( t_a \) an annotated trace, and \( \rho \) an arbitrary renaming of agents. If \( (P; \emptyset) \xrightarrow{t_a} (P_1; \phi_1) \) and \( (P^\rho; \emptyset) \xrightarrow{t_a^\rho} (P_2; \phi_2) \), then \( [\phi_1]_{\text{ideal}} = [\phi_2]_{\text{ideal}} \).

*Proof:* Intuitively, this is a consequence of the second point (ii) of frame opacity for the execution where \( t_a \) and \( t_a^\rho \) are executed in sequence, because any handle \( w \) in \( \text{dom}(\phi_1) = \text{dom}(\phi_2) \) must carry the same label in \( \phi_1 \) and \( \phi_2 \). Formally, we consider a bijective renaming of names (instead of agents) such that no agent is both in \( P \) and \( P^\rho \sigma \), so that \( P \cup (P^\rho \sigma) \) is still a ground configuration. We also consider a bijection \( \theta \) over \( \sigma \) such that \( \text{dom}(\phi_1) \cap \text{dom}(\phi_2 \theta) = \emptyset \) and \( \theta \) is the identity on \( \text{dom}(\phi_1) \). Let \( \rho' \) be \( \rho \sigma \) and \( t_a' = t_a^{\rho' \theta} \). We can deduce from the execution of \( t_a^\rho \) by \( P^\rho \) that \( (P^{\rho'}; \emptyset) \xrightarrow{t_a'} (P_2'; \phi_2') \) with \( P_2' = \theta^{-1} \phi_2 \sigma \). By concatenating the above executions, we obtain \( (P \cup P^{\rho'}; \emptyset) \xrightarrow{t_a . t_a'} (P_1 \cup P_2'; \phi_1 \cup \phi_2') \). Further, we have \( (\text{Mid} \Pi; \emptyset) \xrightarrow{t_a^0} (P \cup P^{\rho'}; \emptyset) \) for some \( t_a^0 \) because \( P \cup P^{\rho'} \) is a ground configuration. Applying frame opacity on the execution of \( t_a^0 . t_a . t_a' \), we obtain that for all \( w, w' \in \text{dom}(\phi_1 \cup \phi_2') \) that carry the same label \( \ell \in L \), one has \( [w(\phi_1 \cup \phi_2')]_{\text{ideal}} = [w'(\phi_1 \cup \phi_2')]_{\text{ideal}} \). In particular, for all \( w \in \text{dom}(\phi_1) \) carrying a label \( \ell \in L \), since \( w \theta \in \text{dom}(\phi_2') \), we have \( [w \phi_1]_{\text{ideal}} = (w \theta) [\phi_2']_{\text{ideal}} = w [\phi_2 \sigma]_{\text{ideal}} \). Finally, since \( \sigma \) is a bijection on names, we have \( [\phi_2]_{\text{ideal}} = [\phi_2 \sigma]_{\text{ideal}} \) and thus \( w [\phi_1]_{\text{ideal}} = w [\phi_2]_{\text{ideal}} \) as expected. ◻

**Proposition 4:** For any protocol and any ground configuration \( P \) of the protocol such that \( (P; \emptyset) \xrightarrow{t_a} K \), there exists an agent renaming \( \rho \) satisfying the hypothesis of Lemma 1 and such that \( P^\rho \) is single-session.

*Proof:* We first define \( \text{Co}(k) \) as the set of all \( (n_1, n_2) \) such that \( I(k, n_1) \) and \( R(k, n_2) \) are connected in \( (t_a, \phi(K)) \). Next, we assume for each \( (k, n_1, n_2) \) a vector of names \( k_c(k, n_1, n_2) \) of the length of identity parameters of \( \Pi \). These name vectors are assumed to be all disjoint and not containing any name already occurring in the annotations of \( P \). This combination of \( k, n_1, n_2 \) taken from the annotations of \( P \) gives us a means to pick fresh identity parameters for each combination. We also assume name vectors \( k_1(k, n_1) \) which are again disjoint and not overlapping with annotations of \( P \) and any \( k_c(k', n_1', n_2') \), and similarly for \( k_2(k, n_2) \) which should also not overlap with \( k_1 \) vectors. These last two collections of identity parameters will be used to give fresh identities to initiator and responder agents, independently. We then define \( \rho \) as follows:
- \( I(k, n_1) \mapsto I(k_c(k, n_1, n_2), n_1) \)
- \( R(k, n_2) \mapsto R(k_c(k, n_1, n_2), n_2) \)
- \( I(k, n_1) \mapsto I(k_1(k, n_1), n_1) \)
- \( R(k, n_2) \mapsto R(k_2(k, n_2), n_2) \)

if \( (n_1, n_2) \in \text{Co}(k) \), otherwise. By construction, agents that were connected in \( t_a \) are renamed into agents sharing the same identity names \( k_c(k, n_1, n_2) \). Other agents have distinct, fresh identities. Finally, we have not used \( \text{id}_0 \), and the image of \( \rho \) obviously has at most one session per identity and role: our renaming is single-session. ◻

### Appendix C: Example

In this section, we give a protocol that does not preserve unlinkability according to the definition we used in this paper (see Definition 7). However, this protocol would be considered secure with respect to a game-based definition of unlinkability suitable for direct verification using diff-equivalence.

**Description of the Protocol:** The protocol can be presented in Alice & Bob notation as follows:
1. \( T \rightarrow R: \{n_T\}_k \)
2. \( R \rightarrow T: \{n_R\}_k \)
3. \( T \rightarrow R: \{n_R \oplus n_T\}_k \)

The protocol is between a tag \( T \) and a reader \( R \) that share a symmetric key \( k \). Additionally, we assume that \( T \) aborts if the nonce \( n_R \) he receives is equal to the nonce \( n_T \) he sent previously (in the same session). We consider the term algebra introduced in Example 1, and the equational theory introduced in Example 2 with the following equation:
\[ \text{dec}(\text{enc}(x, y), y) = x \]

**Attack against Unlinkability (Definition 7):** To show that the property formally stated in Definition 7 does not hold, consider the following scenario:
1. \( T \rightarrow R: \{n_T\}_k \)
1'. \( T' \rightarrow R: \{n_T'\}_k \)
2. \( I(R) \rightarrow T: \{n_T'\}_k \)
2'. \( I(R) \rightarrow T': \{n_T\}_k \)
3. \( T \rightarrow R: \{n_T' \oplus n_T\}_k \)
3'. \( T' \rightarrow R: \{n_T \oplus n_T'\}_k \)

A same tag starts two sessions and therefore generates two nonces \( n_T \) and \( n_T' \). The attacker answers these requests by sending back the two encrypted messages to the tag, who will accept both of them, and sends on the network two messages that are actually equal (the exclusive or operator is commutative). Therefore, the attacker observes a test (the equality between the two last messages), and this equality has no counterpart in the single session scenario. In practice, this can be very harmful when, for example, tags are distributed among distinct groups (e.g., for access control policies) sharing the same key \( k \). By interacting with two tags, the attacker would then be able to know if they belong to the same group.

**Game-Based Definition:** We will not give a formal definition but instead briefly describe its general idea. In such a definition, the two scenarios under study will be made of two phases:
1. **Learning Phase:** During this phase, the attacker can trigger an arbitrary number of sessions of the two roles (namely, tag and reader) with the identity of his choice. This allows him to gain some knowledge.
2. **Guessing Phase:** This phase starts once the previous one is finished. The challenger chooses an identity \( x \) among two identities \( \text{id}_1 \) and \( \text{id}_2 \), and the attacker is allowed to interact again with \( x \) (an arbitrary number of times). It may also interact with tags and readers of identities different from \( \text{id}_1 \) and \( \text{id}_2 \).

The attacker wins the game if he can infer whether \( x \) is \( \text{id}_1 \) or \( \text{id}_2 \), i.e., if he is able to distinguish between these two scenarios. This is typically the kind of scenario that can be checked relying on the diff-equivalence notion implemented in several automatic tools (e.g., ProVerif, Tamarin). However, here we failed to prove it using ProVerif due to the \( \oplus \) operator that ProVerif cannot handle. The attack scenario described in the previous paragraph can be done in the guessing phase with tag \( \text{id}_1 \), and can be mimicked on the other side using two sessions of the tag with identity \( \text{id}_2 \). Actually, we believe that these two scenarios are indistinguishable, i.e., the resulting processes are in trace equivalence.

This example shows that game-based variants of unlinkability that are amenable to automation relying on the diff-equivalence notion are rather weak.