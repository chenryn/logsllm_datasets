4) 从深度学习领域处理时间序列的序列建模角度进行训练模型  
深度学习这块还没有细加研究，有的队伍使用的是对api sequence 进行One-Hot Encoding ,变成2D
Matrix，然后使用CNN去训练模型，效果一般，具体可参考
。  
因为api序列长度分布几百到几十万不等，而且存在明显的时序性，传统RNN网络很难对长序列建模，所以第一名的队伍采用的是textcnn（一种利用cnn对文本分类的算法），textcnn通过扩大kernel_size可以一定上弥补该问题，但是依旧很难进行较长的序列建模。
3.1.5 1st的解决方案
其中安全知识这块，1
st在ppt中提到了两点安全背景：利用数据流分析API之间的数据依赖关系，生成特征向量，再运用机器学习的分类算法，进行恶意软件的检测和分类；基于关联规则分析Aprori算法，根据敏感API和恶意软件类型之间的数据关系的调用来识别。但是我没有具体找到利用安全背景提取特征的痕迹。  
可以看到1st的队伍从多个领域对本次比赛做了细致的处理，涵盖了几乎所有可能的处理方式，每种方式处理的效果都很优秀。  
仅从算法角度我先得到了几点推论：  
1、 NLP可以用来做baseline，值得偏重  
2、 要从多维度多领域看待问题解决问题，全面发展  
3、 没有太多的垂直领域背景，可以达到较好的效果
**3.2 第二层面：安全算法**  
从安全算法工程师的角度，尝试利用安全领域知识和算法知识去分析和解决问题，深层次结合机器学习和垂直领域，这种结合我认为可分为三个阶段。  
3.2.1 数据级可解释  
从安全角度分析安全数据，首先要做到的是联系安全数据对应上安全领域知识，作为安全研究的辅助手段，促进对安全理解和研究。  
先观察一下第一类勒索病毒api数量分布直方图
再对比一下挖矿恶意软件
依次绘出其他类型恶意软件的直方图，对比一下，发现勒索病毒在五类恶意软件中调用的api数量大多较少，蠕虫和感染性病毒api调用数量较勒索病毒多，挖矿程序和DDOS木马调用api数量较多。这符合我这系统安全的小白对五类恶意软件的了解  
挑选五类恶意软件中api长度1%分位，25%分位，50%分位，99%分位的文件对比分析，绘出二维散点图，以勒索软件为例。  
结合散点图和勒索软件的top10 api，体现出了勒索软件的一些行为习性，即勒索病毒会进行大量的注册表读写和文件读写操作。  
挑选五类恶意软件中api长度1%分位，25%分位，50%分位，99%分位的文件对比分析，绘出三维散点图，以挖矿程序为例
可以看到挖矿程序的三维图非常有规律，对应到安全领域知识是挖矿程序的多线程特征，api调用有一定的时间序列关系。  
上面都是由数据来对应安全领域知识，现在我们从安全领域知识出发去找到对应的数据，以蠕虫病毒为例。我们知道蠕虫的特点是复制自身，感染其他机器，具有传播性，现在我们寻找这种数据
可以看到这个文件中出现了多个同样的api序列同时在读写文件，这可能就是我们要寻找的蠕虫自我复制的数据。蠕虫的感染性体现在top
api中的Thread32Next函数和LdrLoadDll函数。但是蠕虫的传播性我没有找到证明的数据。
3.2.2 特征级可解释  
通过安全领域知识（例如此次恶意软件检测比赛中如1st
ppt中提到的两点安全背景）反哺，深度分析数据性质，重构特征，达到特征可解释，提升模型效果，解决安全问题或可能促进安全研究。
先可视化全局特征看一下各个特征的重要性，可以发现top2的特征都是和api相关的，这正印证着安全背景知识中恶意软件重要的api行为特征，并且后续加入api相关的特征可以较好的提升模型效果，比如7th队伍增加的300多个api统计特征。本次数据中属性列只有五个，不需要太多安全背景就能分析出关键点在api属性，如果数据集属性较多，就需要基于安全背景知识去快速定位问题关键所在，然后重点做关键属性的特征工程。  
比如Kaggle上的Rental Listing
Inquiries比赛，这是一个租房数据集，数据集里面的15个属性值都有一定的作用，但是无法得知哪个或哪些属性值最关键，如果直接做简单特征重要性可视化。
虽然top2特征是f12和f4，但是这并不是问题的关键点，在这两个特征上再做特征工程也提升不了太多效果，而最关键的是f14特征（manager_id(经理id)）排第三。如果关键特征或属性在top特征中，还可以凭借算法知识挨个实验，分析出问题关键所在，但如果关键属性不在top特征，可能就需要相关的背景知识来分析问题了，例如此处如果有租房界工作经历的人学了机器学习，就可能直接凭借背景经验得出manager_id是重要特征，快速在manager_id特征之上做各种复合特征。  
存在的问题是我举的例子可能属于个例，机器学习中特征的可解释性还是很弱，深度学习的特征可解释性压根没得解释。
3.2.1 模型级可解释  
每个模型都有每个模型的归纳偏好，比如这个模型对挖矿软件检测效果好，另一个模型对蠕虫病毒检测效果好，模型的多样性和不同的偏好也是模型融合的基础，模型融合能提升模型整体的效果，但是模型的偏好很难用安全领域知识来解释，这就需要我们反推对比各个单个模型的特征工程，以此为引，争取达到特征级可解释。
**3.3 算法vs安全算法**  
本文中所举例的第三届阿里云安全算法挑战赛，我的最终的实验结果表明：安全算法和算法的效果并没有太大的区分性，这没有达到我预期的效果。我的预期效果是：在安全领域，安全算法效果胜于算法效果。因为安全算法专家可以根据特征级解释有针对性的去做特征工程，比如根据领域知识知道api序列特征非常重要，重点去做api相关的特征，而不是纯粹从统计学等领域去尝试各个特征，无法直接定位问题关键点。没有达到预期效果的原因可能是目前水平有限，分析解决问题做的不是很到位，无法给算法加持太多的安全领域知识，以形成鲜明的对比，或是处理此次比赛安全数据集所需要的领域知识的门槛不是很高，大家都知道api序列很关键，感觉此次比赛中安全领域知识发挥的作用不是很大。  
排行榜前几名的队伍好像都是职业做算法的，说明算法水平很强可以弥补安全背景的不足，不过也可能是参赛的复合背景队伍较少，因为大家的算法水平不一，所以不太好比较。  
我认为从单个安全问题和模型效果角度来说，算法工程师只需要针对单个待解决的安全问题临时补习一下安全基础知识，就可以较好的处理安全数据，所以算法工程师的可选择性有很多，较容易跨入安全等垂直领域，但是不能浅尝辄止，需要深入到一个领域中去；如果从模型效果、模型落地和安全研究的三重角度来说，算法工程师只能解决单个的安全问题，很难做到对安全系统有全面的深度了解，还是需要安全出身的算法专家，安全算法专家的安全知识面和算法知识面都较广，能够全面把握安全问题，根据安全场景选择合适的算法并推动该算法在HIDS、NIDS、RASP、WAF等安全系统里的落地实现。所以我们要做某个垂直领域最懂机器学习的人。
**3.4 其他**  
1.关于机器内存问题：小内存机器处理大数据集，可采用python的生成器和机器学习算法的fit_generator函数或是Linux的awk预处理大数据集。  
2.关于lightGBM：本文使用的都是lgb，效果对比xgb，train logloss差别不大，valid
logloss相差挺大，而且还是xgb效果好于lgb（一般lgb效果略好于xgb），使用两种算法分析实验数据，得到的结果有所不同。不知道是参数的原因还是其他什么原因。  
3.关于logloss：官方定义的logloss和logloss的定义不一致，需要自己按照官方的公式定义logloss。  
关于实验结果：全部实验数据都是线下测试，同时使用lgb和使用xgb，效果不一，实验结果分析也可能不同。  
4.第一名队伍的解决方案涵盖了常用的机器学习技术，值得当作范例多加研究学习。  
5.测试代码在
**4 总结和展望**  
本文从NLP领域、统计学领域、深度学习领域和安全背景出发，多角度分析阿里云提供的恶意软件数据集，管中窥豹，对比分析拥有复合背景能一定程度上提升模型效果和安全研究，存在的问题是特征的可解释性问题和跨领域结合的深度不够，虽然存在一定的问题，但是阻止不了机器学习在垂直领域越来越热的应用趋势。如有不妥之处，敬请指正，欢迎交流安全数据科学。
**5 引用**  
[https://tianchi.aliyun.com/forum/new_articleDetail.html?spm=5176.8366600.0.0.6e50311faIzxop&raceId=231668&postsId=7220](https://tianchi.aliyun.com/forum/new_articleDetail.html?spm=5176.8366600.0.0.6e50311faIzxop&raceId=231668&postsId=7220)