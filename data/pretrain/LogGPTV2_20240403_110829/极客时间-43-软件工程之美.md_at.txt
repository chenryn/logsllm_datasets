## 什么样的会议是有效率的？其实软件项目中有些会议我是愿意参加的，因为是有价值的，高效的。比如说前面提到的每日站立会议，时间不长，但是收获很大。再比如隔壁郑晔老师的《10x程序员工作法》专栏中提到的"[轻量级沟通](http://time.geekbang.org/column/article/82844)"，其中建议的会议方式：人少，面对面沟通。这种小会通常也让我觉得很高效，经常能产生有价值的方案。还有一些会议则让我觉得没什么价值，比如领导冗长的讲话，比如一堆人在偏离会议主题的讨论，比如跟我没什么关系却被迫参加的会议。那么为什么这些会议给我的感觉完全不一样？这其实就是我想讲的第三个问题：会议是不是有效率，取决于它创造的价值是不是高于其成本。我觉得像每日站立会这样的会议更有效率，其时间短、人数少，所以成本低，创造的价值高于其成本。而人数多，又偏离会议主题的讨论会则没有价值，这是因为人数多时间长，导致会议成本高，而其创造的价值远远不及成本。那为什么还有那么多低效率的会议？**因为有的会议，就不是为了创造价值。**比如说有的会议，花的成本不是组织者的，对他来说，得到他的会议价值就可以了。> 你是砍柴的，他是放羊的，你和他聊了一天，他的羊吃饱了，你的柴呢？还有很多会议，是因为组织者和参与者，都没有意识到开会其实是有成本的，所以浪费了成本还不自知。不过这种情况还好，还是可以想办法改进的。接下来，我们来看看如何提高开会效率，破除避免白天开会，晚上还要加班写代码的节奏。
## 如何提高开会效率？我们专栏有一篇文章《[08 \|怎样平衡软件质量与时间成本范围的关系？](http://time.geekbang.org/column/article/85302)》，很多同学看过里面讲的软件项目金三角理论后，直呼"醍醐灌顶"、"终于找到一套可以说服老板的说辞了"、"能够提高与产品经理打太极的水准"。其实提高开会效率、提升开会价值的方法，就跟软件项目金三角的理论一样，只要从两个角度去想办法：**减少开会的成本，增加开会创造的价值！**在具体探讨这两类方法之前，我们先要认识到一个前提：**那就是要让大家意识到开会是有成本的，如果开会创造的价值不能大于其成本，就是浪费。**就像金三角理论，你得先让老板、项目经理明白三条边不可能都占，才好去沟通讨论。要提高开会效率，也需要大家先有这个意识，才能在具体措施上达成一致。那么，有哪些方法可以减少开会的成本呢？**1. 砍掉一些没价值的会议**在日常工作中，还有很多会议其实并没有什么价值的。如果一个会议符合这些标准，你就要慎重考虑参加了：-   没有目标的会议。大家都在随意发散，完全没有主题；-   不能形成决策，没有会后行动。如果一场会议看完后都没有什么结果，那跟没开都没啥差别；-   你属于可有可无的角色。如果一个会议，跟你其实没什么关系，你无法提供有效的反馈，对你也没什么价值，只不过是被人拉过去开会的，那不如把这个时间用来做一点对项目更有价值的事。所以，你可以在每次要接受一个会议邀请之前，先问自己两个问题再做决定：这个会议我真的有必要参加吗？以及，有其他方式可以替代吗？其实，很多问题并不是非要通过"会议"的方式解决。以前我负责的一个服务，其他组需要调用，所以有一个组的同事想跟我组织一个会议，让我介绍一下服务，以及如何调用。我思考了一下，觉得准备这个会议我也要写一个PPT，开会还得要时间，这时间我足够写一个详细的说明文档出来了，而且以后其他组再要用，也只要看文档就可以了。于是我就跟他们说：我们不用开会，我一会发一个文档链接给你们，如果有问题我们可以在聊天工具上沟通。后来他们看完文档后，有几处不清楚的地方，在咨询过我以后，我将文档更新好，就没什么问题了，而且后面再不需要为这件事开会了。**2. 减少参与会议的人****会议的成本和两个因素相关：一个是人数，一个是时间。如果减少人数，就能减少成本。**减少人数好处还在于，人一少，每个人都会更投入，也更有效率，所以往往时间反而会少产出会高。而且，如果会议上要形成一些决议，人越多越难做决策，人越少越容易达成一致。要想有决议的话，先开几个小会，达成一致后再开大会，大会更多只是宣布一个结果。像谷歌和Facebook，他们对于会议的态度就是能不开就不开，无关的人不参与。Amazon的规则也很简单：一场会议的人数，最多订两份批萨，如果超出这个规模，说明这个会议的人数太多了。**3. 缩短开会时间**减少开会成本的另一个方法就是缩短开会时间。缩短开会时间有很多成熟可靠的方案可以选择。比如说站立会议，通过站立的方式逼着大家快点结束。另外，麦肯锡开会上有些做法也值得借鉴：-   每个成员有一张黄牌，用于喊停其他人会议中发散讨论无意义的话题；-   有人控制节奏，大家快速发言；-   PPT 不超过 3 张，鼓励大家预先准备，多讨论。还有比如我们在前面敏捷开发介绍的例子，会议有人主持，当话题开始发散的时候，果断制止，放到"停车场问题"环节，也就是会议的最后专门讨论。类似这样的缩短开会时间的办法，确实可以有效减少会议成本，这类提升效率的方法还有很多，你可以从这个角度多思考尝试一下。**4. 提升会议所创造的价值**如果能有效提升会议产出，也一样可以达到很好的效果。比如说，每个会议要有明确的目的和主题，所有的讨论都要围绕会议目的展开。当你发现会议上一些问题的讨论偏离了会议的主题，例如一个需求评审会，结果架构师在讨论技术细节，这就完全偏离了主题。你就应该站出来提醒一句："现在既然是讨论需求，不如先不讨论技术上的问题，等到需求确定了，我们后面再慢慢讨论技术问题。"或者说："不如这个问题我们另外组织一个会议讨论。"还有开会后，要有明确的结论，有后续的待办事项，落实到个人，对待办事项有跟踪。偷偷说一下，有时候一些没什么价值的会议，又必须要参加，我一般会参会前，用一个本子把一个技术难题、或者一篇博客主题，写下来。开会的时候，把这个难题理清楚思路，把博客的提纲写出来，这样一个会议开完，我的问题也解决了，或者文章提纲也有了。同样也是收获满满，没有浪费太多时间。这些都是提升会议价值的方式，相信你对会议成本有了概念以后，也可以找到很多可以帮助你提高开会效率、更好创造会议价值的方法。
## 总结今天带你一起学习了解了开会的"道"，那就是开会是有价值的，开会是有成本，会议是不是高效，就看它创造的价值是不是高于其成本。如果你想破除白天开会，加班写代码的节奏，就需要从缩减开会成本和提升开会价值的方向上去想办法，还需要让你的老板、项目经理都有"会议是有很高成本"的意识。砍掉一些没价值的会议，减少开会的人数，缩短会议的时间，提高会议创造的价值。
## 课后思考你在项目中，有哪些会议其实是可以不参加的？哪些会议是可以缩减人数的？哪些会议是可以缩短时间的？哪些会议是可以更好的提升价值的？或者你对上面的观点有哪些补充？欢迎在留言区与我分享讨论。感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。![](Images/da183fec69b316d65c37d6f003a9f298.png){savepage-src="https://static001.geekbang.org/resource/image/31/af/315c3c753591fbaf480f39cdc9e0f3af.jpg"}
# 14 \| 项目管理工具：一切管理问题，都应思考能否通过工具解决你好，我是宝玉，我今天想与你分享的主题是：一切管理问题，都应思考能否通过工具解决。早些年我在做项目管理工作的时候，除了制订计划外，还要花不少时间去跟踪计划的执行情况。项目管理上出了问题，管理者总是喜欢从流程规范的角度去想办法，于是为此设定了不少流程规范，例如每天要写日报，根据日报更新项目进度，每周要开周例会，看看项目有没有执行上的问题。对任务进度的量化也是个很困扰项目经理的事情，需要频繁的去问程序员："你这个任务进展如何，大概完成比例多少？"，从程序员那得到的答复通常都是个很乐观的数字，例如80%。第二天以为他能做完，结果一问是90%，就这样要持续好多天才真的算做完。所以后来我得出来一个结论：**一个任务，只有 0% 和 100%两种状态是准确的，中间状态都是不靠谱的。**除此之外，还有个问题就是，项目的进展并不太直观，除了项目经理每天看计划表，对计划有一个大概了解以外，其他人可能只有在到了计划设置的"里程碑"时，才对进度有比较直观的感觉。项目成员手头事情做完，如果和计划有出入，也不知道自己接下来该干嘛，都要跑去问项目经理，所以项目经理对于很多事情都要从中协调，日常有很多繁重的任务管理工作。后来我发现其实很多管理者都有类似的困惑：任务不好量化难以估算，项目成员对当前项目进度缺少直观感受，管理者要花大量时间在任务管理上。``{=html}这些年，随着软件项目管理工具的发展进化，发现当年困扰我的这些问题已经不再是一个主要问题，因为通过工具就能很好的解决这些问题。这也是我这些年项目管理和技术管理的一点感悟：> 一切管理问题，都应思考能否通过工具或技术解决，如果当前工具或技术无法解决，暂时由流程规范代替，同时不停止寻找工具和技术。下面的微博即是一例，当遇到问题时，不仅从流程上思考有没有问题，更要考虑是不是可以用工具或技术手段来解决。![](Images/7e565febd4e6467935ac36aeca286c25.png){savepage-src="https://static001.geekbang.org/resource/image/c7/f7/c7d2a286af31b9f79f95487b507859f7.png"}在这里，我还是先带你看一下项目管理工具软件发展史，通过工具的演化，你可以更深入的了解到工具是怎么解决这些管理问题的。
## 项目管理工具软件发展史