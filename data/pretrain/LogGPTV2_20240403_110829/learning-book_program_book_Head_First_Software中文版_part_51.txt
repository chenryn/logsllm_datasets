现在我们可以开您处理
错误了.··.
假定你已经停正了使Mency中的类不微被练
谨的错误，但你必须先制易上传验其他代码
物冲动。
392
第11章
---
## Page 429
软件错误
好根了，你是一个真正的神童：花了
那色多时网，都付飞进展也没有，嘿，经
提推停响？
现在花一点时间，日后可以节省大量时间。
原有的软件错误还没有得到修正，但这没有关系。你已经
建立了一个开发环境，代码在版本控制之下，你还能够轻
松地编写测试程序，并自动地运行它们。也就是说，你刚
刚防止了在前面几百页所遇到的所有间题，避免那些东西
悄悄地破坏你的开发工作，造成雪上加霜的困境。
你知道代码还不能运行，但现在，一切都已经被安排到你
的流程中了，你准备用一种明智的方式来处理这些错误。
你已经将MercuryMeals视作己出，从这里开始，你所做的
任何修改都将被保存下来.，整个流程将帮你节省不少时
间。
在你修改任何东西之
煎，包括修正错误，
先将代码纳入版本控
制并成功地构建。
目前位置
393
---
## Page 430
关注功能性
我们可以修改代码了
现在，是弄清楚哪些代码需要修改的时候了。在第十章的末尾，你
只有当你别宽一下Mecaty Meals
检查了Mercury Meals的代码，诊断的结果并不好……
中的第一届代码后，你就金发院
全都问题
//HercuryMesls class contind
//Follows the Singleton design pattern
除了指出它省试做单例设计模贰之外，这个
类没有实际的文格说明
public class Mercuryoals
属性名称不具播选性。
 whethet it
private Order cO
为什么含有min属性：即使几行注释也好
nsgin...)This
taised.Thie
组他定这应说是一个常量喝：gh作为一个属性名称
it lecally thex
xetteytion
有什么象义呢：
they cax
点
public Mercuryoals（）
为什么声明什么事都没做的构进符：
allo
public static Mercuryeala getInatanoe()
等一下：这个类应该实成单例模式的
但看起来好像怎次这个方法被调用时
vety herd
this.neallythang -new Merouryoals（1)
都金户生一个Mcy Mele代码的新实
return this.instancey
......f6
eal1y sb0
nt this at some point... TBD
lesstone
public Order createorder(
适个方法在此码像没有做什么有价佳的事，你可以
return new Order(11
是羊地创建一个ne对票，而不涉及Mencny Mels
publlc Mea10ption getMealoption(String optlon)
throus MercuryMealsCoen
ectionException(
f（M.establish().1sAnyoptLonsForKey(option))
(return .eetablish.getMealOption(opt.ion）.[0]1:
这留空信是一种不准的习惯。一种比较码的想活是：引发一
个异常处理过程，为调用老提供更多物信忘。
394
第11章
---
## Page 431
软件错误
·…..但我们必须修正功能性
但是，事情并不像看起来的那么精。你不必修改Mercury Meals中所
有的错误，你仅仅需要修改那些影响你所需要的功能的错误就可以
了.你不必操心其余的代码，你只需要致力于使用情节的功能性方
面即可。
预一般餐点
这费是受Mncary Meale影响的使用
情节，我们只常要修收这警使用
情节所保赖物代码，
优先级：
10.
报订象馨点
.....6
优先级
功能性是重
心，只需修
标国：
4
改那些使用
站计值：
优先级：
10
情节所依赖
的代码。
本章要点
一切都围绕面向用户的功能性而展开。
认你并未损坏任何代码，并且能知道是否
你编写和修改的代码以满足使用情节的要
完成修改。
求。
如果某功能性没有被测试，那就等同于该
■你仅仅修改那些损坏的代码，你知道哪些
功能性是损坏的。
代码已损坏，因为这些代码让你的测试失
虽然漂亮的代码很伟大，但符合功能性的
败了。
代码总是比它还要重要，但这不表示让事
·测试是你的安全网。通过测试，你可以确
情得过且过，要牢牢记住你修改这些代码
的首要原因，即：符合用户所需。
目前位置
395
---
## Page 432
测试错误
弄清楚什么功能可运行
在把Orion'sOrbits的代码与MercuryMeals的代码库集成在一起之
前，你知道它的运行是正常的。因此，我们把注意力放在Mercury
Meals的代码上。第一步是查明有什么能实际在运行，也就是，要
进行测试，记住：如果代码不可测试，就假定它是损坏的。
这是与Mencaty Meals
Mescaty Meele使用
单例模式，你调用
65 se7nstexce()
方法来取得一个
MercuryMeals
实例，而不是通过
提计接量、用公司名
“xew”关键词来实
采命名一个是是很不
例化值类。
setnstance()：
MercutyMeals
好的5法一
+
Mencaty Mels卖是
+
createOrder):Order
个稳粗的开复机构。
+submitOrder(order：
Order):boolean
+setMealOption(name:Strins):MealOption
+setOrdersThatMatchKeywords(keywords;Strins)：Order]
在有两个基础接
可以操，
有一些助代码
随缺在这些更中。
Order
+
addMealOption(mealOption:MealOption):void
addKeyword(keyword:Strins):void
说值，我们想采用航
现号来作为行馨的美
键词。
396
第11章
---
## Page 433
软件错误
你的工作任务是构造一个测试单元，应用使用情节所需要的全部功能。“订
一般餐点”测试建立一张订单，并为它添加订一般餐点的选项（在本例中。
就是添加“鱼和炸马铃薯条”），然后把订单提交给MercuryMeals.利用
左页的类图，在下面的空白处，为“订一般餐点”使用情节的测试编写测试
代码。
package test.com.orionsorbits.mercurymeals;
import com,orionsorbits,mercurymeals.*;
import org.junit,*;
标别
预打一般参点
售、12天
public class TestMercuryMeals (
优先级：
...1O..
String[] options;
String flightNo;
这应该是一个有效的馨点选项。
此别试所针对的使用情
public void setUp() (
@Before
options = (*Fish_and chips°);
cet×()
@After
terDown的代码
public void tearDown()(
巴经就位。
options = null;
flightNo = nul1;
如果没有我到管点，就据出MelOptiowNe
FoxdExcetio，如果订单不能提交，就
抛OtlerNetAeceptelExceptio,
public void testOrderRegularMeal()
throvs MealOptionNotFoundException, OrderNotAcceptedException
MercuryMeals mercuryMeals = MercuryMeals.getInstance () ;
多少需集几行
代码实录你的
方象·这
是我们黑完成
的测试
目前位置
397
---
## Page 434
好好想一下估计
你的工作任务是构造一个测试单元，应用使用情节所需的全部功
能。“订一般餐点”测试建立一张订单，并为它添加订一般餐点的
>
选项（在本例中，就是添加“鱼和炸薯条”），然后把订单提交给
答案
Mercury Meals,
package test,com,orionsorbits.nercurymeals;
import com,orionsorbits.mercurymeals. *;
import org-junit.*;
标器：
..预灯一般餐点
售值2天
public class TestMercuryMeals (
String[] options;
优先级：
...O..
String flightNo
public void setUp() (
eBefore
这是别试Me1cx1y
options = (*Fish and chips");
Melr的功程性的使用
flightNo = "vs01";
情节。
eAfter
public void tearDown ()(
options = nu11;
flightNo = nul11;
public void testOrderRegularMeal ()
throws MealOptionNotFoundException,(
OrderNotAcceptedException
MercuryMeals mercuryMeals = MercuryMeals.getInstance (1;
即使你不
Order order-mereuryMeals.ereateOrderl;
确切地都
MealOptionmealOption-mereuryMeals.getMealOptionloptionsLO1;
谢之的准务好唯
时建一张行羊
并在
递代磁是
if （mealOption!noll<
order.addMealOption(mealOptionl;
R
如何工
M
的管点还项
的.
诺清是它
）else（
throw new MealOptionNotFoundExeeptionmealOption);
（/
为订掌增加“至和炸着录”暑鱼
if （mereuryMeals.submitOrderlorderl
退项，并为航提导奶定，提卷
throw new OrderNotAeeeptedExeeptionlorderl;
把订单提交给Mency Mels
这些异常只是为了导致测试的失
发，说明Mecany Meels的AP程序
不得送行。
398
第11章
---
## Page 435
不能
软件错误
现在，你知道有什么运行
这是电自动化测试工具
意出的物建和测试服善
的电子邮件。
证有触置错误和警善
但通很多测试走
股了
36项别试中有13项失腔
Laura：是的，在我们需要用到的代码中有
30%没有通过测试，
Mark：但那并没有告诉我们要完成代码的修改
需要多少工作量。
Bob：还可能有一些代码整块被漏掉的情况。
不知道我们将需要编写多少新的代码。
Mark：我们如何估计呢？
Bob：必须有更好的方法。对不对？
你会怎么做？
目前位置
399
---
## Page 436
峰值测试
利用峰值测试
（SpikeTest）做估计
你编写的测试程序中有30%失败了，但是，你真的不知道是不是一、
两行代码就能解决大部分存在的问题，或者需要新的类和几百行代
码才能搞定。现在没有办法知道，那13项失败的测试背后到底存在
多大的问题。因此，要是我们花点时间研究一下这些代码，看看我
们能处理哪些，并由此推断出解决其他问题需要的工作量，结果又
会是怎样呢？
这种方法称为峰值测试（SpikeTest）：在一段时间内，你正解决一
部分问题，看看你完成什么，并利用这些结果来估计完成其他事情
需要工作多长时间。
花一周的时间来进行峰值测试
让客户给你五天的时间来处理你手上的问题，那并不是很
长的时间，并且，在最后，你应该能提供合理的估计。
听幕，我的耐心性被你磨光了，你最好
在本因求给出一个窑在的信计，具不然
我们得即重其事地谈一谈，懂吗？
个完完全全通出菜
的信计
形将会使情况更想
取得客户用意后，你可以计
刘用一属的时间来做峰值别
试。
400
第11章
---
## Page 437
软件错误
从那些失败的测试中随机采样