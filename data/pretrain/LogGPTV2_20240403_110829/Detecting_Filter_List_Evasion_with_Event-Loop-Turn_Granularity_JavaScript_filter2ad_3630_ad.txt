as opposed to external scripts whose URL is encoded in the
src attribute of a script tag, and thus cannot be blocked by
existing tools. We identiﬁed 498 instances of privacy-relevant
behavior from EL/EP blocked scripts moved inline, carried out
on 231 domains.
C. Impact on Browsing
Next, we attempt to quantify the practical impact on privacy
and security from ﬁlter list evasion. Here the focus is not on
the number of parties or scripts engaging in ﬁlter list evasion,
but on the number of websites users encounter on which ﬁlter
list evasion occurs. We determined this by looking for the
Fig. 5. Total number of evaded scripts per website, for “popular” (Alexa top
1K), “medium” (Alexa top 1K - 10K), and “unpopular” (Alexa top 10K -
100K) websites.
number of sites in the Alexa 100K (in the subset we were able
to record correctly) that included at least one script matching
a signature from a blocked script, but which was not blocked.
We ﬁnd that 10,973 of the 87,941 domains measured
included at least one known privacy-or-security harming be-
havior that was not blocked because of ﬁlter list evasion. Put
differently, 12.48% of websites include at least one instance
of known-harmful functionality evading ﬁlter lists.
We further measured whether these evasions occurred more
frequently on popular or unpopular domains. We did so by
breaking up our data set into three groups, and comparing
how often ﬁlter list evasion occurred in each set. We divided
our dataset as follows:
1) Popular sites: Alexa rank 1–1k
2) Medium sites: Alexa rank 1,001–10k
3) Unpopular sites: Alexa rank 10,001–100k
Figure 5 summarizes this measurement as a CDF of how
many instances of ﬁlter list evasion occur on sites in each
group. As the ﬁgure shows, ﬁlter list evasion occurred roughly
evenly on sites in each group; we did not observe any strong
relationship between site popularity and how frequently ﬁlter
lists were evaded.
D. Popularity of Evading Parties
Finally, we measure the relationship, in regards to domain
popularity (i.e., the delta in their ranking), between the sites
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:12:35 UTC from IEEE Xplore.  Restrictions apply. 
1722
100101050001000015000200002500030000# domains matchedGround truth signatures matches per domain1001011020200040006000800010000# scripts matchedGround truth signatures matches per script unit100101# matched signatures0200040006000800010000# domains matchedSmall signatures matches per domain100101102103# matched signatures020000400006000080000100000# scripts matchedSmall signatures matches per script unit0.00.51.01.52.02.53.03.54.0Number of Scripts per Website0.880.900.920.940.960.981.00CDF of WebsitesAlexa Top1KAlexa Top1K-10KAlexa Top10K-100Khosting the scripts blocked by EasyList and EasyPrivacy, and
the sites that host scripts with the same privacy-harming
behaviors but evade ﬁlter list blocking. Our goal
in this
measurement is to understand if harmful scripts are being
moved from popular domains (where they are more likely to
be encountered and identiﬁed by contributors to crowdsourced
ﬁlter lists) to less popular domains (where the domain can
be rotated frequently). We point out that this measurement
does not have a temporal component,
i.e., we make no
distinction with regard to whether the blocked scripts appeared
earlier than the evaded ones, but merely the fact that both
matched they same signature(s) from our ground truth set (see
Section IV-B).
Speciﬁcally, we determine these ranking deltas by extract-
ing from our results all the unique pairs of domains that
host scripts matching the same signature of privacy-affecting
behavior. That is, for a given signature in our ground truth
signature set, if there are n unique domains hosting blocked
scripts matching that signature, and m unique domains hosting
evading scripts matching the same signature, then we would
extract n × m domain pairs for that signature. Note that the
ﬁnal set of domain pairs that we extract across all ground truth
signatures contain only unique pairs (e.g., if the domain pair
(s, t) is extracted for both signature sig1 and sig2, then
it appears only once in the ﬁnal set of domain pairs).
We arrange the domains
in each pair as a tuple
(blocked_domain, evaded_domain) to signify the
fact that the scripts hosted on the evaded_domain con-
tain the same privacy-harming semantics as those on the
blocked_domain, and that
the scripts hosted on the
evaded_domain are not blocked by ﬁlter lists. In total
we collected 9,957 such domain pairs. For the domains
in each pair, we then look up their Alexa rankings and
calculate their delta as the ranking of blocked_domain
subtracted by evaded_domain (i.e., a negative delta means
evaded_domain is less popular than blocked_domain).
Since we only have the rankings for Alexa top one million
domains, there are 2,898 domain pairs which we do not have
the ranking information for either the blocked_domain or
the evaded_domain (i.e., their popularity ranking is outside
of the top 1M), including 538 pairs where both domains are
outside of the top 1M. We use a ranking of one million
whenever we cannot determine the ranking of a domain.
Figure 6 shows the distribution of all the ranking deltas,
calculated as described above (since we cannot approximate
the relative popularity for the 538 pairs where both domains
are outside of Alexa top 1M, we excluded them from Figure 6).
Note that this distribution is very symmetric: about as many of
the domain pairs have negative delta as those that have positive
delta, and the distribution on both sides of the x-axis closely
mirrors each other. We believe this is mostly due Alexa favor-
ing ﬁrst-party domains when calculating popularity-metrics;
according to Alexa’s documentation, multiple requests to the
same URL by the same user counts as only one page view
for that URL on that day [7]. Thus, if on a single day the
user visits multiple sites that contain tracking scripts loaded
Fig. 6. Distribution of the delta in Alexa ranking of domains hosting EL/EP
blocked scripts vs. evaded scripts that matched the same signature. A negative
delta means the script is moved from a popular domain to a less popular
domain. The x-axis of domain rank delta is in thousands.
Hosting Domain
google-analytics.com
googletagmanager.com
googlesyndication.com
addthis.com
facebook.net
adobedtm.com
amazon-adsystem.com
adroll.com
doubleclick.net
yandex.ru
Requesting Domains
47,366
6,963
5,711
1,600
1,479
1,076
915
814
774
610
Script URLs Matches
55,980
6,967
5,711
2,464
1,479
2,973
943
1,931
985
684
44
6,158
38
51
1,313
1,133
1
5
5
3
TABLE IV
MOST POPULAR DOMAINS HOSTING RESOURCES THAT WERE BLOCKED
BY FILTER LISTS. THE FIRST COLUMN RECORDS THE HOSTING DOMAIN,
THE NEXT COLUMN THE NUMBER OF DOMAINS LOADING RESOURCES
FROM THE HOSTING DOMAIN, THE THIRD COLUMN THE NUMBER OF
UNIQUE URLS REQUESTED FROM THE DOMAIN, AND THE FINAL COLUMN
THE COUNT OF (NON-UNIQUE) BLOCKED, HARMFUL SCRIPTS LOADED
FROM THE DOMAIN.
from the same tracker domain, then Alexa counts those as
only one visit to that tracker domain. As a result, domains
that host tracking scripts tend to occupy the middle range of
the Alexa ranking, and their tracking scripts are equally likely
to be hosted on websites both before and after them in the
Alexa rankings (web developers often choose host third-party
tracking scripts on domains that they control, while at the
same time minifying/obfuscating, or otherwise bundling the
scripts, in order to evade ﬁlter list blocking, and we provide
a taxonomy of such evasion attempts in Section V).
In addition, we note that there are 140 domain pairs (out
of the 9,957 extracted pairs above) where if a pair (s, t)
is extracted, (t, s) is also extracted. In 72 of these we
have s == t, while the other 68 have s != t. If EL/EP
blocks some, but not all script URLs from a domain,
it
could contribute to an extracted domain pair where s ==
t; likewise, if EL/EP misses blocking some scripts on two
distinct domains, then it would lead to both (s, t) and (t,
s) being extracted.
Incidentally, we also measured what domains hosted scripts
most often blocked by ﬁlter lists, and which domains hosted
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:12:35 UTC from IEEE Xplore.  Restrictions apply. 
1723
7505002500250500750Rank (Thousand)0.00.20.40.60.81.0CDF of Domain PairsRank DeltaHosting Domain
google-analytics.com
addthis.com
shopify.com
adobedtm.com
tiqcdn.com
googletagservices.com
segment.com
tawk.to
outbrain.com
wistia.com
Requesting Domains
5,157
1,596
543
398
311
136
114
85
73
71
Script URLs Matches
6,412
2,455
545
756
709
143
122
90
78
85
4
50
4
331
248
1
107
85
4
5
TABLE V
MOST POPULAR DOMAINS HOSTING SCRIPTS THAT EVADED FILTER LISTS,
BUT MATCHED KNOWN HARMFUL SCRIPTS. THE FIRST COLUMN RECORDS
THE HOSTING DOMAIN, THE SECOND COLUMN THE NUMBER OF DOMAINS
THAT REFERENCED THE HOSTING DOMAIN, THE THIRD COLUMN THE
NUMBER OF UNIQUE, EVADING URLS ON THE HOSTING DOMAIN, AND THE
FINAL COLUMN THE COUNT OF (NON-UNIQUE) NON-BLOCKED, HARMFUL
SCRIPTS LOADED FROM THE DOMAIN.
scripts that contained known-harmful behavior, but evaded
detection. Tables IV and V record the results of these measure-
ments. We ﬁnd that Google properties are the most frequently
blocked resources on the web (Table IV), both for tracking and
advertising resources, followed by the addthis.com widget
for social sharing (that also conducts tracking operations).
Unsurprisingly then, we also ﬁnd that these scripts are also
the most common culprits in ﬁlter list evasion. Code originally
hosted by Google and AddThis are the most frequently mod-
iﬁed, inlined, moved or bundled to evade ﬁlter list detection.
V. EVASION TAXONOMY
Technique
Moving
Inlining
Bundling
Common Code
# Instances (% Total)
7,924 (65.79%)
498 (4.13%)
117 (0.97%)
3,505 (29.10%)
Unique Scripts (% Total)
720 (20.06%)
498 ( 2.37%)
85 (13.88%)
2,286 (63.69%)
TAXONOMY AND QUANTIFICATION OF OBSERVED FILTER LIST EVASION
TECHNIQUES IN THE ALEXA 100K.
TABLE VI
This section presents a taxonomy of techniques site authors
use to evade ﬁlter lists. Each involves attackers leveraging the
common weakness of current web content blocking tools (i.e.,
targeting well known URLs) to evade defenses and deliver
known privacy-or-security harming behavior to websites.
We observed four ways privacy-and-security harming
JavaScript behaviors evade ﬁlter lists: (i) moving code from
a URL associated with tracking, to a new URL, (ii) inlining
code on the page, (iii) combining malicious and benign code
in the same ﬁle (iv) the same privacy-affecting library, or code
subset, being used in two different programs.
Each of the following four subsections deﬁnes an item
in our taxonomy, gives a representative observed case study
demonstrating the evasion technique, and ﬁnally describes the
methodology for programmatically identifying instances of the
evasion technique. Table VI presents the results of applying
our taxonomy to the 3,589 unique scripts (12,044 instances)
that we identiﬁed in Section IV-B as evading ﬁlter lists.
For each taxonomy label, we perform code analysis and
comparison techniques using Esprima,14 a popular and open-
source JavaScript parsing tool. We use Esprima to generate
ASTs for each JavaScript ﬁle to look for structural similari-
ties between code units. By comparing the AST node types
between scripts we are resilient to code modiﬁcations that do
not affect the structure of the program, like renaming variables
or adding/changing comments. We consider signatures from
scripts not blocked by EasyList and EasyPrivacy, but matching
a signature generated by a script blocked by EasyList and
EasyPrivacy to determine the relationship of the non-blocked
script to the blocked scripts.
Finally, this taxonomy is not meant to categorize or imply
the goals of the code or site authors, only the mechanisms
that causes the bypassing of URL-based privacy tools. Addi-
tionally, each of the case studies are current as of this writing.
However, we have submitted ﬁxes and new ﬁlter lists rules to
the maintainers of EasyList and EasyPrivacy to address these
cases. As a result, sites may have changed their behavior since
this was written.
A. Moving Code
The simplest ﬁlter list evasion strategy we observed is
moving tracking code from a URL identiﬁed by ﬁlter lists to
a URL unknown to ﬁlter lists. This may take the form of just
copying the code to a new domain but leaving the path ﬁxed,15
leaving the script contents constant but changing the path,16
or some combination of both. We also include in this category
cases where code was moved to a new URL and miniﬁed or
otherwise transformed without modifying the code’s AST.
Site authors may move code from well-known URLs to
unique ones for a variety of reasons. In some cases this may be
unrelated to evading ﬁlter lists. Changes to company policies
might require all code to be hosted on the ﬁrst party, for
security or integrity purposes. Similarly, site authors might
move tracking code from the “common” URL to a new URL
out of some performance beneﬁt (e.g., the new host being one
that might reach a targeted user base more quickly).