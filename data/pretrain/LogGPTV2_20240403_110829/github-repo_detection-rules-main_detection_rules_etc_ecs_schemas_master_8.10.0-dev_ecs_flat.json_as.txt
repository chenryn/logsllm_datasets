{"process.entry_leader.tty.char_device.minor": {"dashed_name": "process-entry-leader-tty-char-device-minor", "description": "The minor number is used only by the driver specified by the major number; other parts of the kernel don\u2019t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them.", "example": 1, "flat_name": "process.entry_leader.tty.char_device.minor", "level": "extended", "name": "tty.char_device.minor", "normalize": [], "original_fieldset": "process", "short": "The TTY character device's minor number.", "type": "long"}}
{"process.entry_leader.user.id": {"dashed_name": "process-entry-leader-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.entry_leader.user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.entry_leader.user.name": {"dashed_name": "process-entry-leader-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.entry_leader.user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.entry_leader.user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.entry_leader.vpid": {"dashed_name": "process-entry-leader-vpid", "description": "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.", "example": 4242, "flat_name": "process.entry_leader.vpid", "format": "string", "level": "core", "name": "vpid", "normalize": [], "original_fieldset": "process", "short": "Virtual process id.", "type": "long"}}
{"process.entry_leader.working_directory": {"dashed_name": "process-entry-leader-working-directory", "description": "The working directory of the process.", "example": "/home/alice", "flat_name": "process.entry_leader.working_directory", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.entry_leader.working_directory.text", "name": "text", "type": "match_only_text"}], "name": "working_directory", "normalize": [], "original_fieldset": "process", "short": "The working directory of the process."}}
{"process.env_vars": {"beta": "This field is beta and subject to change.", "dashed_name": "process-env-vars", "description": "Array of environment variable bindings. Captured from a snapshot of the environment at the time of execution.\nMay be filtered to protect sensitive information.", "example": "[\"PATH=/usr/local/bin:/usr/bin\", \"USER=ubuntu\"]", "flat_name": "process.env_vars", "ignore_above": 1024, "level": "extended", "name": "env_vars", "normalize": ["array"], "short": "Array of environment variable bindings."}}
{"process.executable": {"dashed_name": "process-executable", "description": "Absolute path to the process executable.", "example": "/usr/bin/ssh", "flat_name": "process.executable", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.executable.text", "name": "text", "type": "match_only_text"}], "name": "executable", "normalize": [], "short": "Absolute path to the process executable."}}
{"process.exit_code": {"dashed_name": "process-exit-code", "description": "The exit code of the process, if this is a termination event.\nThe field should be absent if there is no exit code for the event (e.g. process start).", "example": 137, "flat_name": "process.exit_code", "level": "extended", "name": "exit_code", "normalize": [], "short": "The exit code of the process.", "type": "long"}}
{"process.group_leader.args": {"dashed_name": "process-group-leader-args", "description": "Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.", "example": "[\"/usr/bin/ssh\", \"-l\", \"user\", \"10.0.0.16\"]", "flat_name": "process.group_leader.args", "ignore_above": 1024, "level": "extended", "name": "args", "normalize": ["array"], "original_fieldset": "process", "short": "Array of process arguments."}}
{"process.group_leader.args_count": {"dashed_name": "process-group-leader-args-count", "description": "Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.", "example": 4, "flat_name": "process.group_leader.args_count", "level": "extended", "name": "args_count", "normalize": [], "original_fieldset": "process", "short": "Length of the process.args array.", "type": "long"}}
{"process.group_leader.command_line": {"dashed_name": "process-group-leader-command-line", "description": "Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.", "example": "/usr/bin/ssh -l user 10.0.0.16", "flat_name": "process.group_leader.command_line", "level": "extended", "multi_fields": [{"flat_name": "process.group_leader.command_line.text", "name": "text", "type": "match_only_text"}], "name": "command_line", "normalize": [], "original_fieldset": "process", "short": "Full command line that started the process.", "type": "wildcard"}}
{"process.group_leader.entity_id": {"dashed_name": "process-group-leader-entity-id", "description": "Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.", "example": "c2c455d9f99375d", "flat_name": "process.group_leader.entity_id", "ignore_above": 1024, "level": "extended", "name": "entity_id", "normalize": [], "original_fieldset": "process", "short": "Unique identifier for the process."}}
{"process.group_leader.executable": {"dashed_name": "process-group-leader-executable", "description": "Absolute path to the process executable.", "example": "/usr/bin/ssh", "flat_name": "process.group_leader.executable", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.group_leader.executable.text", "name": "text", "type": "match_only_text"}], "name": "executable", "normalize": [], "original_fieldset": "process", "short": "Absolute path to the process executable."}}
{"process.group_leader.group.id": {"dashed_name": "process-group-leader-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.group_leader.group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.group_leader.group.name": {"dashed_name": "process-group-leader-group-name", "description": "Name of the group.", "flat_name": "process.group_leader.group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.group_leader.interactive": {"dashed_name": "process-group-leader-interactive", "description": "Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.", "example": true, "flat_name": "process.group_leader.interactive", "level": "extended", "name": "interactive", "normalize": [], "original_fieldset": "process", "short": "Whether the process is connected to an interactive shell.", "type": "boolean"}}
{"process.group_leader.name": {"dashed_name": "process-group-leader-name", "description": "Process name.\nSometimes called program name or similar.", "example": "ssh", "flat_name": "process.group_leader.name", "ignore_above": 1024, "level": "extended", "multi_fields": [{"flat_name": "process.group_leader.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "process", "short": "Process name."}}
{"process.group_leader.pid": {"dashed_name": "process-group-leader-pid", "description": "Process id.", "example": 4242, "flat_name": "process.group_leader.pid", "format": "string", "level": "core", "name": "pid", "normalize": [], "original_fieldset": "process", "short": "Process id.", "type": "long"}}
{"process.group_leader.real_group.id": {"dashed_name": "process-group-leader-real-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.group_leader.real_group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.group_leader.real_group.name": {"dashed_name": "process-group-leader-real-group-name", "description": "Name of the group.", "flat_name": "process.group_leader.real_group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.group_leader.real_user.id": {"dashed_name": "process-group-leader-real-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.group_leader.real_user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.group_leader.real_user.name": {"dashed_name": "process-group-leader-real-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.group_leader.real_user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.group_leader.real_user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.group_leader.same_as_process": {"dashed_name": "process-group-leader-same-as-process", "description": "This boolean is used to identify if a leader process is the same as the top level process.\nFor example, if `process.group_leader.same_as_process = true`, it means the process event in question is the leader of its process group. Details under `process.*` like `pid` would be the same under `process.group_leader.*` The same applies for both `process.session_leader` and `process.entry_leader`.\nThis field exists to the benefit of EQL and other rule engines since it's not possible to compare equality between two fields in a single document. e.g `process.entity_id` = `process.group_leader.entity_id` (top level process is the process group leader) OR `process.entity_id` = `process.entry_leader.entity_id` (top level process is the entry session leader)\nInstead these rules could be written like: `process.group_leader.same_as_process: true` OR `process.entry_leader.same_as_process: true`\nNote: This field is only set on `process.entry_leader`, `process.session_leader` and `process.group_leader`.", "example": true, "flat_name": "process.group_leader.same_as_process", "level": "extended", "name": "same_as_process", "normalize": [], "original_fieldset": "process", "short": "This boolean is used to identify if a leader process is the same as the top level process.", "type": "boolean"}}
{"process.group_leader.saved_group.id": {"dashed_name": "process-group-leader-saved-group-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.group_leader.saved_group.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.group_leader.saved_group.name": {"dashed_name": "process-group-leader-saved-group-name", "description": "Name of the group.", "flat_name": "process.group_leader.saved_group.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.group_leader.saved_user.id": {"dashed_name": "process-group-leader-saved-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.group_leader.saved_user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.group_leader.saved_user.name": {"dashed_name": "process-group-leader-saved-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.group_leader.saved_user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.group_leader.saved_user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.group_leader.start": {"dashed_name": "process-group-leader-start", "description": "The time the process started.", "example": "2016-05-23T08:05:34.853Z", "flat_name": "process.group_leader.start", "level": "extended", "name": "start", "normalize": [], "original_fieldset": "process", "short": "The time the process started.", "type": "date"}}
{"process.group_leader.supplemental_groups.id": {"dashed_name": "process-group-leader-supplemental-groups-id", "description": "Unique identifier for the group on the system/platform.", "flat_name": "process.group_leader.supplemental_groups.id", "ignore_above": 1024, "level": "extended", "name": "id", "normalize": [], "original_fieldset": "group", "short": "Unique identifier for the group on the system/platform."}}
{"process.group_leader.supplemental_groups.name": {"dashed_name": "process-group-leader-supplemental-groups-name", "description": "Name of the group.", "flat_name": "process.group_leader.supplemental_groups.name", "ignore_above": 1024, "level": "extended", "name": "name", "normalize": [], "original_fieldset": "group", "short": "Name of the group."}}
{"process.group_leader.tty": {"dashed_name": "process-group-leader-tty", "description": "Information about the controlling TTY device. If set, the process belongs to an interactive session.", "flat_name": "process.group_leader.tty", "level": "extended", "name": "tty", "normalize": [], "original_fieldset": "process", "short": "Information about the controlling TTY device.", "type": "object"}}
{"process.group_leader.tty.char_device.major": {"dashed_name": "process-group-leader-tty-char-device-major", "description": "The major number identifies the driver associated with the device. The character device's major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as \"ttyS0\" and \"pts/0\". For more details, please refer to the Linux kernel documentation.", "example": 4, "flat_name": "process.group_leader.tty.char_device.major", "level": "extended", "name": "tty.char_device.major", "normalize": [], "original_fieldset": "process", "short": "The TTY character device's major number.", "type": "long"}}
{"process.group_leader.tty.char_device.minor": {"dashed_name": "process-group-leader-tty-char-device-minor", "description": "The minor number is used only by the driver specified by the major number; other parts of the kernel don\u2019t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them.", "example": 1, "flat_name": "process.group_leader.tty.char_device.minor", "level": "extended", "name": "tty.char_device.minor", "normalize": [], "original_fieldset": "process", "short": "The TTY character device's minor number.", "type": "long"}}
{"process.group_leader.user.id": {"dashed_name": "process-group-leader-user-id", "description": "Unique identifier of the user.", "example": "S-1-5-21-202424912787-2692429404-2351956786-1000", "flat_name": "process.group_leader.user.id", "ignore_above": 1024, "level": "core", "name": "id", "normalize": [], "original_fieldset": "user", "short": "Unique identifier of the user."}}
{"process.group_leader.user.name": {"dashed_name": "process-group-leader-user-name", "description": "Short name or login of the user.", "example": "a.einstein", "flat_name": "process.group_leader.user.name", "ignore_above": 1024, "level": "core", "multi_fields": [{"flat_name": "process.group_leader.user.name.text", "name": "text", "type": "match_only_text"}], "name": "name", "normalize": [], "original_fieldset": "user", "short": "Short name or login of the user."}}
{"process.group_leader.vpid": {"dashed_name": "process-group-leader-vpid", "description": "Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.", "example": 4242, "flat_name": "process.group_leader.vpid", "format": "string", "level": "core", "name": "vpid", "normalize": [], "original_fieldset": "process", "short": "Virtual process id.", "type": "long"}}