```  
create or replace function testrole.cla_tbl_test_ins(i_phonenum varchar,i_price real,i_createtime timestamp with time zone) returns setof void as $BODY$  
begin  
insert into testrole.tbl_test values(i_phonenum,i_price,i_createtime);  
end;  
$BODY$ language plpgsql;  
```  
/* 地区4gz_testrole_0 */  
- 创建role  
```  
create role testrole nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'testrole';  
```  
- 创建表空间  
```  
create tablespace tbs_gz_testrole_0 owner testrole location '/database/pgdata/tbs_gz_testrole_0_def';  
```  
- 创建分区数据库  
```  
create database gz_testrole_0 with owner testrole template=template0 encoding='UTF8' tablespace=tbs_gz_testrole_0;  
```  
- 连接至已创建好的分区数据库及role  
```  
\c gz_testrole_0 testrole;  
```  
- 创建本地schema  
```  
create schema testrole authorization testrole;  
```  
- 创建过程语言  
```  
create language plpgsql;  
```  
- 创建测试收费表  
```  
create table testrole.tbl_test(phonenum varchar(30),price real,createtime timestamp with time zone default now());  
```  
- 创建测试下载记录表  
```  
create table testrole.tbl_test_table2(imsi varchar(50),appid varchar(10),createtime timestamp with time zone default now());  
```  
- 创建全局查询tbl_test的函数,(每个表都得建)  
```  
create or replace function testrole.ca_tbl_test_sel(v_sql text) returns setof testrole.tbl_test as $BODY$  
declare  
v_rec testrole.tbl_test%rowtype;  
begin  
for v_rec in execute v_sql loop  
return next v_rec;  
end loop;  
return;  
end;  
$BODY$ language plpgsql;  
```  
- 创建全局insert,update,delete的函数  
```  
create or replace function testrole.ca_iud(v_sql text) returns void as $BODY$  
begin  
execute v_sql;  
end;  
$BODY$ language plpgsql;  
```  
- 创建global_all,每个表一个  
```  
create or replace function testrole.ca_tbl_test_ins(i_phonenum varchar,i_price real,i_createtime timestamp with time zone) returns void as $BODY$  
begin  
insert into testrole.tbl_test values(i_phonenum,i_price,i_createtime);  
end;  
$BODY$ language plpgsql;  
```  
- 创建local_all  
```  
create or replace function testrole.cla_tbl_test_ins(i_phonenum varchar,i_price real,i_createtime timestamp with time zone) returns setof void as $BODY$  
begin  
insert into testrole.tbl_test values(i_phonenum,i_price,i_createtime);  
end;  
$BODY$ language plpgsql;  
```  
/* 地区4gz_testrole_1 */  
- 创建role  
```  
create role testrole nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'testrole';  
```  
- 创建表空间  
```  
create tablespace tbs_gz_testrole_1 owner testrole location '/database/pgdata/tbs_gz_testrole_1_def';  
```  
- 创建分区数据库  
```  
create database gz_testrole_1 with owner testrole template=template0 encoding='UTF8' tablespace=tbs_gz_testrole_1;  
```  
- 连接至已创建好的分区数据库及role  
```  
\c gz_testrole_1 testrole;  
```  
- 创建本地schema  
```  
create schema testrole authorization testrole;  
```  
- 创建过程语言  
```  
create language plpgsql;  
```  
- 创建测试收费表  
```  
create table testrole.tbl_test(phonenum varchar(30),price real,createtime timestamp with time zone default now());  
```  
- 创建测试下载记录表  
```  
create table testrole.tbl_test_table2(imsi varchar(50),appid varchar(10),createtime timestamp with time zone default now());  
```  
- 创建全局查询tbl_test的函数,(每个表都得建)  
```  
create or replace function testrole.ca_tbl_test_sel(v_sql text) returns setof testrole.tbl_test as $BODY$  
declare  
v_rec testrole.tbl_test%rowtype;  
begin  
for v_rec in execute v_sql loop  
return next v_rec;  
end loop;  
return;  
end;  
$BODY$ language plpgsql;  
```  
- 创建全局insert,update,delete的函数  
```  
create or replace function testrole.ca_iud(v_sql text) returns void as $BODY$  
begin  
execute v_sql;  
end;  
$BODY$ language plpgsql;  
```  
- 创建global_all,每个表一个  
```  
create or replace function testrole.ca_tbl_test_ins(i_phonenum varchar,i_price real,i_createtime timestamp with time zone) returns void as $BODY$  
begin  
insert into testrole.tbl_test values(i_phonenum,i_price,i_createtime);  
end;  
$BODY$ language plpgsql;  
```  
- 创建local_all  
```  
create or replace function testrole.cla_tbl_test_ins(i_phonenum varchar,i_price real,i_createtime timestamp with time zone) returns setof void as $BODY$  
begin  
insert into testrole.tbl_test values(i_phonenum,i_price,i_createtime);  
end;  
$BODY$ language plpgsql;  
```  
/* 地区5hz_testrole_0 */  
- 创建role  
```  
create role testrole nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'testrole';  
```  
- 创建表空间  
```  
create tablespace tbs_hz_testrole_0 owner testrole location '/database/pgdata/tbs_hz_testrole_0_def';  
```  
- 创建分区数据库  
```  
create database hz_testrole_0 with owner testrole template=template0 encoding='UTF8' tablespace=tbs_hz_testrole_0;  
```  
- 连接至已创建好的分区数据库及role  
```  
\c hz_testrole_0 testrole;  
```  
- 创建本地schema  
```  
create schema testrole authorization testrole;  
```  
- 创建过程语言  
```  
create language plpgsql;  
```  
- 创建测试收费表  
```  
create table testrole.tbl_test(phonenum varchar(30),price real,createtime timestamp with time zone default now());  
```  
- 创建测试下载记录表  
```  
create table testrole.tbl_test_table2(imsi varchar(50),appid varchar(10),createtime timestamp with time zone default now());  
```  
- 创建全局查询tbl_test的函数,(每个表都得建)  
```  
create or replace function testrole.ca_tbl_test_sel(v_sql text) returns setof testrole.tbl_test as $BODY$  
declare  
v_rec testrole.tbl_test%rowtype;  
begin  
for v_rec in execute v_sql loop  
return next v_rec;  
end loop;  
return;  
end;  
$BODY$ language plpgsql;  
```  
- 创建全局insert,update,delete的函数  
```  
create or replace function testrole.ca_iud(v_sql text) returns void as $BODY$  
begin  
execute v_sql;  
end;  
$BODY$ language plpgsql;  
```  
- 创建global_all,每个表一个  
```  
create or replace function testrole.ca_tbl_test_ins(i_phonenum varchar,i_price real,i_createtime timestamp with time zone) returns void as $BODY$  
begin  
insert into testrole.tbl_test values(i_phonenum,i_price,i_createtime);  
end;  
$BODY$ language plpgsql;  
```  
- 创建local_all  
```  
create or replace function testrole.cla_tbl_test_ins(i_phonenum varchar,i_price real,i_createtime timestamp with time zone) returns setof void as $BODY$  
begin  
insert into testrole.tbl_test values(i_phonenum,i_price,i_createtime);  
end;  
$BODY$ language plpgsql;  
```  
/* 地区5hz_testrole_1 */  
- 创建role  
```  
create role testrole nosuperuser nocreatedb nocreaterole noinherit login encrypted password 'testrole';  
```  
- 创建表空间  
```  
create tablespace tbs_hz_testrole_1 owner testrole location '/database/pgdata/tbs_hz_testrole_1_def';  
```  
- 创建分区数据库  
```  
create database hz_testrole_1 with owner testrole template=template0 encoding='UTF8' tablespace=tbs_hz_testrole_1;  
```  
- 连接至已创建好的分区数据库及role  
```  
\c hz_testrole_1 testrole;  
```  
- 创建本地schema  
```  
create schema testrole authorization testrole;  
```  
- 创建过程语言  
```  
create language plpgsql;  
```  
- 创建测试收费表  
```  
create table testrole.tbl_test(phonenum varchar(30),price real,createtime timestamp with time zone default now());  
```  
- 创建测试下载记录表  
```  
create table testrole.tbl_test_table2(imsi varchar(50),appid varchar(10),createtime timestamp with time zone default now());  
```  
- 创建全局查询tbl_test的函数,(每个表都得建)  
```  
create or replace function testrole.ca_tbl_test_sel(v_sql text) returns setof testrole.tbl_test as $BODY$  
declare  
v_rec testrole.tbl_test%rowtype;  
begin  
for v_rec in execute v_sql loop  
return next v_rec;  
end loop;  
return;  
end;  
$BODY$ language plpgsql;  
```  
- 创建全局insert,update,delete的函数  
```  
create or replace function testrole.ca_iud(v_sql text) returns void as $BODY$  
begin  
execute v_sql;  
end;  
$BODY$ language plpgsql;  
```  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")