### 当没有Ping响应时

1. **pingResultsLastDateAndTime**
   - **OID**: 1.3.6.1.2.1.80.1.3.1.10
   - **数据类型**: DateAndTime
   - **访问权限**: Read-Only
   - **含义**: 记录最后一次接收到的探测响应的日期和时间。
   - **实现规格**: 与MIB文件定义一致。

### 表约束

- **创建约束**:
  - 该表不能使用`set`操作。在`pingCtlTable`执行测试时，系统会自动创建测试结果行。
- **修改约束**:
  - 不能对任何节点进行修改。
- **删除约束**:
  - 不能对该表使用行的删除操作。当删除`pingCtlTable`的一行时，系统会自动删除对应的测试结果。
- **读取约束**:
  - 对读操作没有限制。

### pingProbeHistoryTable 详细描述

该表用于存储HWPing服务测试的历史记录信息。其索引由`pingCtlTable`表的索引和一个逐渐增加的对象共同组成。

- **索引**:
  - `pingCtlOwnerIndex`
  - `pingCtlTestName`
  - `pingProbeHistoryIndex`

#### OID 节点名称及详细信息

1. **pingProbeHistoryIndex**
   - **OID**: 1.3.6.1.2.1.80.1.4.1.1
   - **数据类型**: Unsigned32 (1..'fffffffh')
   - **访问权限**: Not-Accessible
   - **含义**: 当探测结果确定时，建立表条目。
   - **实现规格**: 与MIB文件定义一致。

2. **pingProbeHistoryResponse**
   - **OID**: 1.3.6.1.2.1.80.1.4.1.2
   - **数据类型**: Unsigned32
   - **访问权限**: Read-Only
   - **含义**: 测试操作所用的时间。如果收到响应包，则是往返时间；否则是超时时间。时间以毫秒为单位计算。当没有可能传送探针时，该值被置为0。
   - **实现规格**: 与MIB文件定义一致。

3. **pingProbeHistoryStatus**
   - **OID**: 1.3.6.1.2.1.80.1.4.1.3
   - **数据类型**: OperationResponseStatus
   - **访问权限**: Read-Only
   - **含义**: 对方主机进行的特定探测的结果。
   - **实现规格**: 与MIB文件定义一致。

4. **pingProbeHistoryLastRC**
   - **OID**: 1.3.6.1.2.1.80.1.4.1.4
   - **数据类型**: Integer32
   - **访问权限**: Read-Only
   - **含义**: 收到的最后一个执行方法特殊的回答码。
   - **实现规格**: 与MIB文件定义一致。

5. **pingProbeHistoryTime**
   - **OID**: 1.3.6.1.2.1.80.1.4.1.5
   - **数据类型**: DateAndTime
   - **访问权限**: Read-Only
   - **含义**: 当确定探测结果时的时间戳。
   - **实现规格**: 与MIB文件定义一致。

### 告警节点详细描述

#### 6.5.1 pingProbeFailed

- **OID**: 1.3.6.1.2.1.80.0.1
- **绑定变量**:
  - `pingCtlTargetAddressType`
  - `pingCtlTargetAddress`
  - `pingResultsOperStatus`
  - `pingResultsIpTargetAddressType`
  - `pingResultsIpTargetAddress`
  - `pingResultsMinRtt`
  - `pingResultsMaxRtt`
  - `pingResultsAverageRtt`
  - `pingResultsProbeResponses`
  - `pingResultsSentProbes`
  - `pingResultsRttSumOfSquares`
  - `pingResultsLastGoodProbe`
- **含义**: 当本次探测失败且`pingCtlTrapProbFailureFilter`设置为`probeFailure(0)`时，表示探测失败。`pingCtlTrapProbFailureFilter`可以用来指定连续探测失败的数目，并且必须在产生本次探测失败通知前指定。
- **实现规格**: 与MIB文件定义一致。

#### 6.5.2 pingTestFailed

- **OID**: 1.3.6.1.2.1.80.0.2
- **绑定变量**:
  - `pingCtlTargetAddressType`
  - `pingCtlTargetAddress`
  - `pingResultsOperStatus`
  - `pingResultsIpTargetAddressType`
  - `pingResultsIpTargetAddress`
  - `pingResultsMinRtt`
  - `pingResultsMaxRtt`
  - `pingResultsAverageRtt`
  - `pingResultsProbeResponses`
  - `pingResultsSentProbes`
  - `pingResultsRttSumOfSquares`
  - `pingResultsLastGoodProbe`
- **含义**: 当一个Ping测试已经失败，并且`pingCtlTrapGeneration`被设置为`testFailure(1)`时，`pingCtlTrapTestFailureFilter`用来指定在探测失败时使用的探针数量。
- **实现规格**: 与MIB文件定义一致。

#### 6.5.3 pingTestCompleted

- **OID**: 1.3.6.1.2.1.80.0.3
- **绑定变量**:
  - `pingCtlTargetAddressType`
  - `pingCtlTargetAddress`
  - `pingResultsOperStatus`
  - `pingResultsIpTargetAddressType`
  - `pingResultsIpTargetAddress`
  - `pingResultsMinRtt`
  - `pingResultsMaxRtt`
  - `pingResultsAverageRtt`
  - `pingResultsProbeResponses`
  - `pingResultsSentProbes`
  - `pingResultsRttSumOfSquares`
  - `pingResultsLastGoodProbe`
- **含义**: Ping操作完成，并且`pingCtlTrapGeneration`被设置为`testCompletion(2)`。
- **实现规格**: 与MIB文件定义一致。

### DISMAN-TRACEROUTE-MIB

#### 7.1 功能简介

DISMAN-TRACEROUTE-MIB是RFC2925定义的公有MIB，实现了分布式管理的Traceroute操作。本模块的任务是在被管设备上实现此MIB定义的功能。

- **根节点**:
  - `iso(1).org(3).dod(6).internet(1).mgmt(2).mib-2(1).traceRouteMIB(81)`

#### 7.2 表间关系

图7-1展示了测试信息表与操作结果统计表的关系图。

#### 7.3 单节点详细描述

##### 7.3.1 traceRouteMaxConcurrentRequests

- **OID**: 1.3.6.1.2.1.81.1.1
- **数据类型**: Unsigned32
- **访问权限**: Read-Write
- **含义**: Agent端支持的最大并发操作数。当一个新的值被设置时，Agent将继续执行已经被激活的需求，即使超过最大并发操作数。
- **实现规格**: 与MIB文件定义一致。

#### 7.4 MIB Table 详细描述

##### 7.4.1 traceRouteCtlTable

- **功能**: TraceRoute操作配置信息表。
- **索引**:
  - `traceRouteCtlOwnerIndex`
  - `traceRouteCtlTestName`

##### OID 节点名称及详细信息

1. **traceRouteCtlOwnerIndex**
   - **OID**: 1.3.6.1.2.1.81.1.2.1.1
   - **数据类型**: Octets(0..32)
   - **访问权限**: Not-Accessible
   - **含义**: 便于安全管理员采用基于视图的接入控制模型（RFC3415中的VACM）为表格提供接入控制。多个用户需要单独创建或更改表项。初始索引的数据类型为`SnmpAdminString`，根据安全策略，可以映射到VACM中定义的`securityName`或`groupName`。对于特定表格中的某一用户的表项，这些表项的信息节点标识符具有相同的子标识符（“column”子标识符除外），但子标识符不能超过编码所有者索引的限制。网管为了通过配置VACM来允许用户访问表的部分内容，用户需要用节点`vacmViewTreeFamilySubtree`（包括所有者索引）进行配置。
   - **实现规格**: 与MIB文件定义一致。

---

以上是对原文本的优化，使其更加清晰、连贯和专业。希望对你有帮助！