### Methodology

For the model training, 90% of all labeled legitimate samples are utilized to train the models. The remaining 10% of legitimate samples are combined with 10% of a given covert traffic configuration's samples to create a balanced testing set. To evaluate the model's performance, each label output by the model is compared with the ground truth. To prevent overfitting to a particular data split, this process is repeated 10 times, with random selection of the samples for the training and testing sets. For the Isolation Forest, we create balanced training and testing sets in a 90/10 proportion. The model’s performance is evaluated using the same procedure.

Our results are based on the feature set derived from the frequency distribution of packet lengths, with \( K = 5 \), as it was found to provide the highest AUC.

### Main Findings

Table 5 presents the maximum and average AUC values obtained when identifying Facet and DeltaShaper traffic using One-Class SVM (OCSVM), our autoencoder, and Isolation Forest. Below are our main findings:

1. **OCSVMs have limited capability for correctly identifying covert traffic.** This is supported by the fact that OCSVM achieves an average AUC between 0.576 and 0.584 for Facet traffic and between 0.518 and 0.531 for DeltaShaper traffic. Even after a search for optimal hyperparameters, the maximum AUC achieved by OCSVM is 0.639 for Facet traffic with \( s = 12.5\% \). These results indicate poor classification performance, suggesting that a semi-supervised model based on OCSVMs is not promising for detecting covert traffic.

2. **Autoencoders show promising results for identifying covert traffic.** As shown in Table 5, our autoencoder achieves, on average, higher or comparable AUC values compared to the maximum AUC obtained by OCSVM for both Facet and DeltaShaper traffic. The choice of parameters for the autoencoder significantly impacts its performance. For instance, a better parameterization of the autoencoder can achieve a maximum AUC of 0.662 for DeltaShaper traffic, which is approximately 0.1 higher than the average reported value for the same configuration. While an AUC of 0.662 still results in a high number of false positives, there is significant room for improvement. We used a relatively shallow autoencoder structure, and more sophisticated structures may further enhance classification accuracy.

3. **Isolation Forest does not provide an advantage for detecting covert traffic.** The results in Table 5 show that Isolation Forest's prediction output is close to random guessing when attempting to identify covert traffic. For Facet traffic, Isolation Forest achieves an average AUC between 0.519 and 0.551 across all steganography factors. For DeltaShaper traffic, the average AUC ranges from 0.532 to 0.557 for different encoding configurations. A closer look at the confusion matrix reveals that Isolation Forest labels few traffic samples as anomalies. This suggests that anomalies are able to blend into the dataset, making them difficult to isolate.

### Discussion

#### Multimedia Protocol Tunneling
The experimental study in Section 4 revealed that the unobservability claims of existing multimedia protocol tunneling systems are flawed. However, the vulnerability of these systems to supervised machine learning techniques, particularly decision tree-based algorithms, does not imply that multimedia protocol tunneling is fundamentally inviable. Our findings suggest that detecting covert channels built with conservative data modulation schemes (e.g., DeltaShaper with \( 160 \times 120, 4 \times 4, 6, 1 \)) while maintaining a low false positive rate remains challenging for adversaries. Additionally, we provide detailed insights into the network behavior of currently deployed multimedia protocol tunneling tools, which can be used to develop more robust implementations.

#### Legitimate Traffic Dataset
Adversaries face the challenge of building a dataset that accurately represents legitimate traffic. A naive solution would be for an adversary to collect all data from a given multimedia protocol, but the presence of covert traffic makes it difficult to distinguish between legitimate and covert samples. Covert data samples can pollute the legitimate traffic model and bias the classifier. An alternative approach, often used in literature and in our work, is to synthesize datasets by transmitting expected media. However, this method may not fully capture the true distribution of real-world data.

### Related Work

**Freewave [25]** was the first system designed to embed covert data in multimedia protocols through the modulation of audio signals in VoIP streams. However, a simple statistical analysis by Geddes et al. [20] showed that Freewave could be easily detected. Recent multimedia protocol tunneling systems such as **Facet [30], CovertCast [34], and DeltaShaper [2]** introduced new techniques to modulate data while preserving the unobservability of covert channels.

Previous unobservability assessments of state-of-the-art multimedia protocol tunneling systems have relied on similarity-based classifiers. There is limited research employing other machine learning techniques for detecting covert channels. Wang et al. [48] used decision tree-based classifiers to identify traffic flowing through Tor bridges, showing promising results for detecting obfuscated traffic through domain fronting [18]. Our work provides the first systematic study of the unobservability of these systems and finds that similar techniques are effective for detecting covert channels.

Related to covert channel detection is the problem of creating fingerprints for encrypted traffic, such as for websites accessed through Tor [11]. Multiple works focus on creating fingerprints using various features and classifiers, like Schuster et al. [46] who designed an attack to fingerprint YouTube video streams. However, fingerprinting aims to identify specific media, whereas our goal is to distinguish between broader classes of media that may or may not carry covert data. It is unclear how fingerprinting techniques can be adapted for our purpose.

In this paper, we focused on covert channels based on multimedia protocol tunneling [2, 25, 30, 34], a popular approach. Other tunneling approaches include **SWEET [57], CloudTransport [7], Castle [21], and meek [18]**. Alternative methods, such as protocol obfuscation [52], fail in the presence of protocol whitelisting and are vulnerable to entropy analysis [48]. Protocol imitation, where covert traffic mimics allowed protocols, is complex and prone to attacks [20, 23].

While censorship circumvention is a primary use of covert channels, our work focuses on detection rather than circumvention. Techniques like refraction networking [5, 15, 24, 27, 53, 54] incorporate censorship resistance mechanisms in the network, not solely relying on covert channels.

### Conclusions

In this paper, we conducted an extensive analysis of the unobservability evaluation of multimedia protocol tunneling systems. We proposed a novel method based on decision trees that challenges previous unobservability claims. Our work also explored the application of semi-supervised and unsupervised anomaly detection techniques. The results indicate that an adversary needs labeled data for effective detection of covert channels.

### Acknowledgments

This work was partially supported by national funds through Instituto Superior Técnico, Universidade de Lisboa, and Fundação para a Ciência e a Tecnologia (FCT) via projects PTDC/EEI-SCR/1741/2014, SFRH/BSAB/135236/2017, and UID/CEC/50021/2013.

### References

[1] AL-NAAMI, K., CHANDRA, S., MUSTAFA, A., KHAN, L., LIN, Z., HAMLEN, K., AND THURAISINGHAM, B. Adaptive encrypted traffic fingerprinting with bi-directional dependence. In Proceedings of the 32nd Annual Conference on Computer Security Applications (Los Angeles, CA, USA, 2016), pp. 177–188.

[2] BARRADAS, D., SANTOS, N., AND RODRIGUES, L. Deltashaper: Enabling unobservable censorship-resistant TCP tunneling over videoconferencing streams. In Proceedings on Privacy Enhancing Technologies (Minneapolis, MN, USA, 2017), vol. 2017(4), pp. 5–22.

[3] BARRADAS, D., SANTOS, N., AND RODRIGUES, L. https://dmbb.github.io/DeltaShaper, 2017. Last Accessed: 2018-02-05. Prototype.

[4] BIGML. Which algorithm does BigML use for Anomaly Detection? https://support.bigml.com/hc/en-us/articles/206746259. Last Accessed: 2018-01-16.

[5] BOCOVICH, C., AND GOLDBERG, I. Slitheen: Perfectly imitated decoy routing through traffic replacement. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (Vienna, Austria, 2016), pp. 1702–1714.

[6] BREIMAN, L. Random forests. Machine learning 45, 1 (2001), 5–32.

[7] BRUBAKER, C., HOUMANSADR, A., AND SHMATIKOV, V. Cloudtransport: Using cloud storage for censorship-resistant networking. In Privacy Enhancing Technologies, E. De Cristofaro and S. Murdoch, Eds., vol. 8555 of Lecture Notes in Computer Science. Springer International Publishing, 2014, pp. 1–20.

[8] CALHEIROS, R. N., RAMAMOHANARAO, K., BUYYA, R., LECKIE, C., AND VERSTEEG, S. On the effectiveness of isolation-based anomaly detection in cloud data centers. Concurrency and Computation: Practice and Experience 29, 18 (2017).

[9] CHEN, T., AND GUESTRIN, C. Xgboost: A scalable tree boosting system. In Proceedings of the 22nd Conference on Knowledge Discovery and Data Mining (San Francisco, CA, USA, 2016), ACM, pp. 785–794.

[10] CHEN, Y., GARCIA, E. K., GUPTA, M. R., RAHIMI, A., AND CAZZANTI, L. Similarity-based classification: Concepts and algorithms. Journal of Machine Learning Research 10, Mar (2009), 747–776.

[20] GEDDES, J., SCHUCHARD, M., AND HOPPER, N. Cover your acks: Pitfalls of covert channel censorship circumvention. In Proceedings of the 2013 ACM SIGSAC Conference on Computer and Communications Security (Berlin, Germany, 2013), pp. 361–372.