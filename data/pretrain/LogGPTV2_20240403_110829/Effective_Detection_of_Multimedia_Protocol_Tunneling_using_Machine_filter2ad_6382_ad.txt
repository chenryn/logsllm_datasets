we use 90% of all labeled legitimate samples to learn
the models. The remaining 10% legitimate samples are
combined with 10% of a given covert trafﬁc conﬁgura-
tion’s samples for creating a balanced testing set. For
evaluating the model’s performance, we compare each
label output by the model with the ground truth. To pre-
vent the ﬁtting of results to a particular split of the data,
we repeat this process 10 times while randomly choosing
the samples making part of the training / testing sets. For
Isolation Forest, we create balanced training and testing
sets in a 90 / 10 proportion. The model’s performance is
evaluated following the same above procedure.
Our results reﬂect the use of the feature set based on
the frequency distribution of packet lengths, with K = 5,
as it was the one found to provide the highest AUC.
5.2 Main Findings
Table 5 depicts the maximum and average AUC obtained
when identifying Facet and DeltaShaper trafﬁc when
using OCSVM, our autoencoder, and Isolation Forest.
Next, we present our main ﬁndings.
1. OCSVMs possess a limited capability for cor-
rectly identifying covert trafﬁc. This ﬁnding is sup-
ported by the fact
that OCSVM attains an average
180    27th USENIX Security Symposium
USENIX Association
Multimedia Protocol Tunneling System
OCSVM
Autoencoder
Isolation Forest
Max AUC Avg AUC Max AUC Avg AUC Max AUC Avg AUC
Facet (s=50%)
Facet (s=25%)
Facet (s=12.5%)
DeltaShaper h320 × 240, 8 × 8, 6, 1i
DeltaShaper h160 × 120, 4 × 4, 6, 1i
0.631
0.629
0.639
0.567
0.548
0.576
0.580
0.584
0.531
0.518
0.702
0.700
0.706
0.662
0.576
0.638
0.650
0.647
0.574
0.544
0.561
0.528
0.536
0.580
0.553
0.551
0.519
0.520
0.557
0.532
Table 5: Maximum and average AUC of OCSVM, Autoencoder and Isolation Forest when classifying Facet and
DeltaShaper trafﬁc. Search (min, max, step): OCSVM (ν(0.1, 1, +0.1), γ(0.01, 1, +0.01)); Autoencoder (hidden layers(4,512,*2), com-
pressed representation(4,512,*2), learning rate[0.001,0.01], epochs[1000]); Isolation Forest (n trees(50,200,*2), n samples(64,512,*2))
AUC between 0.576 and 0.584 when detecting Facet
trafﬁc, and between 0.518 and 0.531 when detecting
DeltaShaper trafﬁc. Moreover, OCSVM achieves a max-
imum AUC=0.639 when classifying Facet s=12.5% traf-
ﬁc. This suggests that OCSVM achieves a poor classiﬁ-
cation performance, even after a search for optimal hy-
perparameters. Thus, from an adversary’s point of view,
a semi-supervised model based on OCSVMs shows little
promise for performing the triage of covert trafﬁc.
2. Autoencoders show promising results for the iden-
tiﬁcation of covert trafﬁc. The numbers in Table 5
show that our autoencoder achieves, in average, a higher
or comparable AUC than the maximum AUC obtained
by OCSVM when classifying Facet or DeltaShaper traf-
ﬁc. The choice of parameters for our autoencoder ben-
eﬁts its maximum AUC. For instance, a better parame-
terization of the autoencoder translates into a maximum
AUC=0.662 when classifying DeltaShaper trafﬁc, ap-
proximately 0.1 higher than the average reported value
for the same conﬁguration. While an adversary making
use of a classiﬁer which exhibits an AUC=0.662 would
sustain a large amount of false positives when attempt-
ing to detect covert trafﬁc, we note that the obtained re-
sults have a wide margin of improvement. In particular,
we use a rather shallow autoencoder structure for inves-
tigating the classiﬁcation performance of this algorithm.
For instance, it is possible that autoencoders with more
sophisticated structures [55] may drive further improve-
ments in classiﬁcation accuracy.
3. An adversary has no advantage in using Isolation
Forest for detecting covert trafﬁc. The results in Ta-
ble 5 show that the prediction output of Isolation For-
est is close to random guessing when attempting to iden-
tify covert trafﬁc. For Facet trafﬁc, Isolation Forest ob-
tains an average AUC between 0.519 and 0.551 across
all steganography factors. When classifying DeltaShaper
trafﬁc, the average AUC sits on 0.532 and 0.557 for dif-
ferent encoding conﬁgurations. A closer observation of
the confusion matrix reveals that Isolation Forest labels
few trafﬁc samples as anomalies. Informally, this obser-
vation suggests that anomalies are able to conceal their
presence in the dataset in such a way that the number of
partitions required to isolate them is similar to the num-
ber of partitions needed to isolate legitimate samples.
6 Discussion
We now discuss several relevant ﬁndings from our study.
Multimedia protocol tunneling. The outcomes of the
experimental study conducted in Section 4 unveil that
the unobservability claims of existing multimedia proto-
col tunneling systems were ﬂawed. However, it is worth
noticing that the vulnerability of such systems to super-
vised ML techniques, particularly decision tree-based al-
gorithms, does not imply that multimedia protocol tun-
neling, as an approach, is fundamentally inviable. Our
ﬁndings suggest that correctly detecting covert chan-
nels built with conservative data modulation schemes
(e.g., DeltaShaper h160 × 120, 4 × 4, 6, 1i) while sustain-
ing low FPR still represents a challenge for adversaries.
Additionally, we provide ﬁne-grained details about the
network behavior of currently deployed multimedia pro-
tocol tunneling tools which may be used for the construc-
tion of more robust implementations.
Legitimate trafﬁc dataset. Adversaries face the non-
trivial challenge of building a dataset which faithfully
represents legitimate trafﬁc. A na¨ıve solution for build-
ing such a dataset would be for an adversary to take
advantage of its privileged position in the network and
collect all data originated by a given multimedia proto-
col. However, the very existence of multimedia protocol
tunneling tools makes it hard for an adversary to know,
before-hand, which data samples correspond either to le-
gitimate or covert trafﬁc. It is possible that covert data
samples pollute the legitimate trafﬁc model and bias the
decisions of a classiﬁer trained in such data [55]. A dif-
ferent alternative is the typical approach followed in the
literature (and in our work), where datasets are synthe-
USENIX Association
27th USENIX Security Symposium    181
sized by transmitting the media expected to be sent in
such channels. However, such an approximation may fail
to capture the underlying distribution of data in the wild.
7 Related Work
Freewave [25] was the ﬁrst system designed to embed
covert data in multimedia protocols through the modula-
tion of audio signals sent through VoIP streams. How-
ever, a simple statistical analysis of trafﬁc patterns con-
ducted by Geddes et al. [20] showed that FreeWave could
be trivially detected by an adversary. Recent multimedia
protocol tunneling systems such as Facet [30], Covert-
Cast [34], and DeltaShaper [2] introduced new tech-
niques for modulating data while striving to preserve the
unobservability of the generated covert channels.
As noted earlier in the text, previous unobservabil-
ity assessments performed on state-of-the-art multimedia
protocol tunneling systems which rely on trafﬁc classiﬁ-
cation make use of similarity-based classiﬁers. To the
best of our knowledge, there is a limited body of work
employing other machine learning techniques for the de-
tection of covert channels in the Internet. Wang et al. [48]
have resorted to decision tree-based classiﬁers to identify
trafﬁc ﬂowing through Tor bridges. Their results have
shown that this approach was promising for the identiﬁ-
cation of trafﬁc obfuscated through domain fronting [18].
In our work, we perform the ﬁrst systematic study of
the unobservability of state-of-the-art multimedia proto-
col tunneling systems and ﬁnd that such techniques are
also effective for the detection of these covert channels.
Related to the problem of covert channel detection is
the problem of creating ﬁngerprints for encrypted traf-
ﬁc. Particularly, the ﬁngerprinting of websites accessed
through Tor [11] is an important research topic [1, 22, 39,
42, 49]. Multiple works dwell on creating ﬁngerprints
for encrypted trafﬁc using different combinations of fea-
tures and classiﬁers, for instance, Schuster et al. [46]
have designed an attack which enables a passive observer
to ﬁngerprint YouTube video streams. However, ﬁnger-
printing is fundamentally different from covert channel
detection: we do not aim to unequivocally ﬁngerprint a
given media according to its trafﬁc pattern, but to distin-
guish two broader classes of media which may or may
not carry covert data.
It is unclear how ﬁngerprinting
techniques can be adapted to our purpose.
In this paper we have focused on covert channels based
on multimedia protocol tunneling [2, 25, 30, 34], a pop-
ular approach at protocol tunneling. Other tunneling ap-
proaches have been attempted, including SWEET [57],
CloudTransport [7], Castle [21], and meek [18].
It is
worth mentioning that alternative approaches to build
covert channels have been attempted in the past, such as
protocol obfuscation [52]. However, obfuscation based
on randomizing trafﬁc fails in the presence of protocol
whitelisting and is vulnerable to entropy analysis [48].
With protocol imitation, covert trafﬁc is manipulated to
mimic the behavior of protocols allowed across a cen-
sor’s border [13, 14, 36]. Alas, the faithful imitation
of all behaviors of a protocol behavior is a complex un-
dertaking which lays protocol imitation systems prone to
multiple network attacks [20, 23].
Finally, we would like to stress that although censor-
ship circumvention is one of the main (and most noble)
uses of covert channels, this type of channels can serve
multiple purposes. Our work concentrates on covert
channel detection and not on censorship circumvention
per se. In fact, there are techniques to evade censorship,
such as refraction networking [5, 15, 24, 27, 53, 54],
which incorporates censorship resistance mechanisms in
the network, rather than at end-hosts, that do not depend
exclusively on the use of covert channels.
8 Conclusions
In this paper, we performed an extensive analysis over
the unobservability evaluation of multimedia protocol
tunneling systems. We proposed a novel method for as-
sessing the unobservability of these systems, based on
decision trees, which largely deﬁes previous unobserv-
ability claims. Our work further explored the application
of semi-supervised and unsupervised anomaly detection
techniques in the same context. Our results indicate that
an adversary is required to possess labeled data for per-
forming an effective detection of covert channels.
9 Acknowledgments
This work was partially supported by national funds
through Instituto Superior T´ecnico, Universidade de Lis-
boa, and Fundac¸ ˜ao para a Ciˆencia e a Tecnologia (FCT)
via projects PTDC/EEI-SCR/1741/2014,
SFRH/B-
SAB/135236/2017, and UID/CEC/50021/2013.
References
[1] AL-NAAMI, K., CHANDRA, S., MUSTAFA, A., KHAN, L.,
LIN, Z., HAMLEN, K., AND THURAISINGHAM, B. Adaptive
encrypted trafﬁc ﬁngerprinting with bi-directional dependence.
In Proceedings of the 32nd Annual Conference on Computer Se-
curity Applications (Los Angeles, CA, USA, 2016), pp. 177–188.
[2] BARRADAS, D., SANTOS, N., AND RODRIGUES, L.
Deltashaper: Enabling unobservable censorship-resistant tcp tun-
neling over videoconferencing streams. In Proceedings on Pri-
vacy Enhancing Technologies (Minneapolis, MN, USA, 2017),
vol. 2017(4), pp. 5–22.
[3] BARRADAS, D., SANTOS, N., AND RODRIGUES, L.
https://dmbb.github.io/
DeltaShaper
DeltaShaper/, 2017. Last Accessed: 2018-02-05.
prototype.
182    27th USENIX Security Symposium
USENIX Association
[4] BIGML. Which algorithm does BigML use for Anomaly Detec-
tion? https://support.bigml.com/hc/en-us/articles/
206746259. Last Accessed: 2018-01-16.
[5] BOCOVICH, C., AND GOLDBERG, I. Slitheen: Perfectly imi-
tated decoy routing through trafﬁc replacement. In Proceedings
of the 2016 ACM SIGSAC Conference on Computer and Commu-
nications Security (Vienna, Austria, 2016), pp. 1702–1714.
[6] BREIMAN, L. Random forests. Machine learning 45, 1 (2001),
5–32.
[7] BRUBAKER, C., HOUMANSADR, A., AND SHMATIKOV, V.
Cloudtransport: Using cloud storage for censorship-resistant net-
working. In Privacy Enhancing Technologies, E. De Cristofaro
and S. Murdoch, Eds., vol. 8555 of Lecture Notes in Computer
Science. Springer International Publishing, 2014, pp. 1–20.
[8] CALHEIROS, R. N., RAMAMOHANARAO, K., BUYYA, R.,
LECKIE, C., AND VERSTEEG, S. On the effectiveness of
isolation-based anomaly detection in cloud data centers. Concur-
rency and Computation: Practice and Experience 29, 18 (2017).
[9] CHEN, T., AND GUESTRIN, C. Xgboost: A scalable tree boost-
ing system. In Proceedings of the 22nd Conference on Knowledge
Discovery and Data Mining (San Francisco, CA, USA, 2016),
ACM, pp. 785–794.
[10] CHEN, Y., GARCIA, E. K., GUPTA, M. R., RAHIMI, A., AND
CAZZANTI, L. Similarity-based classiﬁcation: Concepts and al-
gorithms. Journal of Machine Learning Research 10, Mar (2009),
747–776.
[20] GEDDES, J., SCHUCHARD, M., AND HOPPER, N. Cover your
acks: Pitfalls of covert channel censorship circumvention. In Pro-
ceedings of the 2013 ACM SIGSAC Conference on Computer and
Communications Security (Berlin, Germany, 2013), pp. 361–372.