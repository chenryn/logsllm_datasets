Question: Consider the following code snippet from a web application using the Flask framework with the Jinja2 templating engine. The code is intended to display personalized greetings to users by embedding user input into the template:

python
@app.route("/greet")
def greet_user():
    user_name = request.args.get('name')
    greeting = render_template_string("Hello {{ user_name }}!")
    return greeting


Which of the following statements is true regarding the security of this code snippet?
"A": "The code is secure against SSTI because Flask's render_template_string method automatically sanitizes user input.",
"B": "The code is vulnerable to SSTI because user input is not sanitized before being passed to the template engine.",
"C": "The code is secure against SSTI because the 'name' parameter is directly used within the template without any control structures.",
"D": "The code is vulnerable to XSS but not to SSTI, as Jinja2 does not execute server-side code."
Answer: B