## 1.1.Modbus协议分析
题目：黑客通过外网进入一家工厂的控制网络，之后对工控网络中的操作员站系统进行了攻击，最终通过工控协议破坏了正常的业务。我们得到了操作员站在攻击前后的网络流量数据包，我们需要分析流量中的蛛丝马迹，找到FLAG。  
题目附件连接： （提取码：8kqx）  
解题步骤：
  1. 首先打开流量包，数据包都是关于Modbus/TCP的流量。  
  2. 运行脚本，分析流量包中Modbus/TCP的协议功能码，脚本和运行结果如下：
        import pyshark
    def get_code():
         captures = pyshark.FileCapture("question_1564353677_modbus1.pcap")
         func_codes = {}
         for c in captures:
             for pkt in c:
                 if pkt.layer_name == "modbus":
                     func_code = int(pkt.func_code)
                     if func_code in func_codes:
                         func_codes[func_code] += 1
                     else:
                         func_codes[func_code] = 1
         print(func_codes)
    if __name__ == '__main__':
     get_code()
  3. [modbus常见功能码分析](https://wenku.baidu.com/view/8e6cc5f9b4daa58da1114a20.html "modbus功能码")，分析结果我们可以知道1（读取线圈状态），3（读多个寄存器），4（读输入寄存器），2（读取输入内容），四个功能码都出现了702次，唯独16（预置多个寄存器）功能码只出现了两次，所以猜测与16功能码相关的流量可能存在关键数据，于是运行脚本分析与16功能码相关的流量，提取其中的数据，脚本和运行结果如下：
        import pyshark
    def find_flag():
         cap = pyshark.FileCapture("question_1564353677_modbus1.pcap")
         idx = 1
         for c in cap:
             for pkt in c:
                 if pkt.layer_name == "modbus":
                     func_code = int(pkt.func_code)
                     if func_code == 16:
                         payload = str(c["TCP"].payload).replace(":", "")
                         print(hex_to_ascii(payload))
                         print("{0} *".format(idx))
             idx += 1
    def hex_to_ascii(payload):
     data = payload
     flags = []
     for d in data:
         _ord = ord(d)
         if (_ord > 0) and (_ord  （提取码：95ds）  
解题步骤：
  1. 打开流量包，发现存在PRES、TCP、COTP、MMS协议的流量，其中选择一个数据包，追踪TCP流发现存在关键字flag.txt，如图所示：  
  2. 然而通过多次分析与flag.txt相对应的流量包中，没有发现flag.txt的内容，于是换一个思路，对流量包进行关键字（jpg、png、zip、rar、flag）搜索，查看是否存在其他的文件。在linux系统中使用grep指令，可以对文件进行指定关键字搜索。[linux中grep命令用法](https://www.cnblogs.com/flyor/p/6411140.html "linux中grep命令用法")，我们使用指令进行关键字搜索
        grep "flag" -a test.pacp
    grep ".zip" -a test.pacp
    grep ".jpg" -a test.pacp