title:Breaking the Specification: PDF Certification
author:Simon Rohlmann and
Vladislav Mladenov and
Christian Mainka and
J&quot;org Schwenk
0
1
1
0
0
.
1
2
0
2
.
1
0
0
0
4
P
S
/
9
0
1
1
.
0
1
:
I
O
D
|
E
E
E
I
1
2
0
2
©
0
0
.
1
3
$
/
1
2
/
5
-
4
3
9
8
-
1
8
2
7
-
1
-
8
7
9
|
)
P
S
(
y
c
a
v
i
r
P
d
n
a
y
t
i
r
u
c
e
S
n
o
m
u
i
s
o
p
m
y
S
E
E
E
I
1
2
0
2
2021 IEEE Symposium on Security and Privacy (SP)
Breaking the Speciﬁcation: PDF Certiﬁcation
Simon Rohlmann
Ruhr University Bochum
PI:EMAIL
Vladislav Mladenov
Ruhr University Bochum
PI:EMAIL
Christian Mainka
Ruhr University Bochum
PI:EMAIL
J¨org Schwenk
Ruhr University Bochum
PI:EMAIL
Abstract— The Portable Document Format (PDF) is the de-
facto standard for document exchange. The PDF speciﬁcation
deﬁnes two different types of digital signatures to guarantee the
authenticity and integrity of documents: approval signatures and
certiﬁcation signatures. Approval signatures testify one speciﬁc
state of the PDF document. Their security has been investigated at
CCS’19. Certiﬁcation signatures are more powerful and ﬂexible.
They cover more complex workﬂows, such as signing contracts
by multiple parties. To achieve this goal, users can make speciﬁc
changes to a signed document without invalidating the signature.
This paper presents the ﬁrst comprehensive security evaluation
on certiﬁcation signatures in PDFs. We describe two novel attack
classes – Evil Annotation and Sneaky Signature attacks which
abuse ﬂaws in the current PDF speciﬁcation. Both attack classes
allow an attacker to signiﬁcantly alter a certiﬁed document’s
visible content without raising any warnings. Our practical
evaluation shows that an attacker could change the visible
content in 15 of 26 viewer applications by using Evil Annotation
attacks and in 8 applications using Sneaky Signature by using
PDF speciﬁcation compliant exploits. We improved both attacks’
stealthiness with applications’ implementation issues and found
only two applications secure to all attacks. On top, we show how
to gain high privileged JavaScript execution in Adobe.
We responsibly disclosed these issues and supported the
vendors to ﬁx the vulnerabilities. We also propose concrete
countermeasures and improvements to the current speciﬁcation
to ﬁx the issues.
I. INTRODUCTION
PDF signatures are a well-established protection mechanism
to guarantee the integrity, authenticity, and non-repudiation
of a PDF document. Introduced in 1999, PDF signatures
are used to protect important documents such as certiﬁcation
documents, contracts, and invoices. According to Adobe, 250
billion PDF documents were opened by their applications in
2018. Among them, 8 billion were signed [1]. The legal basis
for digitally signed documents is provided in the European
Union (EU) by the eIDAS Regulation [2] and in the United
States of America (USA) for the Electronic Signatures in
Global and National Commerce Act (ESIGN) [3] and the
Uniform Electronic Transactions Act (UETA) [4].
Contract
Contract
Contract
Transfer to:
Transfer to:
Transfer to:
Name: Honest Corp.
Name: Honest Corp.
Name: Honest Corp.
IBAN: US12 3456 7890
00
IBAN: US12 3456 7890
IBAN: US12 3456 7890
Amount: 100$
Amount: 100$
Amount: 100$
Contract
Contract
Contract
Transfer to:
Transfer to:
Transfer to:
Name: Evil Corp.
Name: Evil Corp.
Name: Evil Corp.
IBAN: US66 6666 6666
66
IBAN: US66 6666 6666
IBAN: US66 6666 6666
Amount: 100.000$
Amount: 100.000$
Amount: 100.000$
Attacker
Certifier
Victim
Figure 1.
In an exemplary attack scenario, the certiﬁer creates a certiﬁed
contract with sensitive information which cannot be exchanged. The certiﬁer
allows speciﬁc changes to the PDF contract, for example, further signatures.
Using these permitted changes, the attacker can change the amount from $100
to $100,000 and display the IBAN of his own account. Based on the attacks
presented in this paper, the victim cannot detect the manipulation and thus
accepts the modiﬁed contract.
Different Types of PDF Signatures. The PDF speciﬁcation
deﬁnes two types of digital signatures.1
1) Approval signatures testify a speciﬁc document state. The
speciﬁcation allows the usage of multiple signatures on the
same document. Any other change on a signed document leads
to an invalidation of the approval signature or warnings in
most PDF viewers. Hereafter, we use the terms “signature”
and “signed document” for approval signatures.
2) Certiﬁcation signatures provide a more powerful and
ﬂexible mechanism to handle digitally signed documents.
During the document’s certiﬁcation, the owner deﬁnes a list
of allowed modiﬁcations that do not invalidate the document’s
certiﬁcation signature. These allowed modiﬁcations can be
a subset of the following actions: writing text
to speciﬁc
form ﬁelds (even without signing the document), providing
annotations to the document, or adding approval signatures.
Since a certiﬁcation signature sets permissions on the entire
document, only one certiﬁcation signature is allowed within
a PDF document. This certiﬁcation signature must also be
the ﬁrst signature in the PDF. Hereafter, we use the terms
“certiﬁcation” and “certiﬁed document” for certiﬁcation
signatures.
Certiﬁcation signatures in the wild. Companies and or-
ganizations can use certiﬁcation signatures to protect ready-
made forms such as contracts, non-disclosure agreements, or
1Digital scans of handwritten signatures, if embedded as an image in a
PDF document, are called ’electronic signatures’. Since they do not protect
the integrity of the document, they are out of scope here.
© 2021, Simon Rohlmann. Under license to IEEE.
DOI 10.1109/SP40001.2021.00110
1485
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:29:12 UTC from IEEE Xplore.  Restrictions apply. 
access control documents against changes and, at the same
time, allow signatures in the shape of approval signatures
[5, 6, 7, 8]. For example, the United States Government Pub-
lishing Ofﬁce (GPO), a US federal legislative authority, and the
Legislative Assembly of British Columbia use certiﬁed docu-
ments for ofﬁcial publications [9, 10, 11, 12]. The European
Telecommunications Standards Institute (ETSI) also speciﬁes
the support of certiﬁed documents within the EU [13]. Beside
the PDF applications, there exist multiple commercial and
governmental online services capable of signing and certifying
PDF documents [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24].
Use Case: Certiﬁed Document. Suppose that two companies
have agreed on a contract but cannot meet in-person to sign it.
As shown in Figure 2, the text (cid:2) of the contract is converted
to PDF . Both companies want to guarantee that this text
is displayed unaltered to any party (e.g., a CEO, lawyer, or
judge), even outside the two companies. The CEOs of both
companies sign the PDF contract to make it legally binding,
but the sales departments of both companies should be allowed
to add some parameters (e.g., payment dates) and provide
explanations to their CEOs via annotations to the contract.
Company 1
(Certiﬁer)
 = ((cid:2), (cid:4), (cid:5))
Company 2
Judge
 = ((cid:2), (cid:6), (cid:5), ɔ, (cid:8))
 = ((cid:10), (cid:6), (cid:5), ɔ, (cid:8))
(cid:9)
(cid:11)
Figure 2. PDF certiﬁcation use case. The PDF  consist of content (cid:2) (e.g.,
text, images, etc.), and forms (cid:4). The PDF is protected by a certiﬁcation
signature (cid:5) that prohibits text modiﬁcations (e.g., (cid:2) → (cid:10)). Company 2 can
add annotations ɔ, ﬁll-out forms (cid:6), and apply a signature (cid:8). An independent
party (e.g., a judge) can verify whether the PDF is valid (cid:9) or invalid (cid:11).
In the complete scenario, the CEO of company 1 uses a
certiﬁcation (cid:5) on the PDF document. This certiﬁcation covers
the entries of their own sales department and allows for some
alterations after certifying. The sales department of company
2 should be able to enter data into some speciﬁed form ﬁelds
(cid:4) which are displayed by the certiﬁed document. They should
also be allowed to make annotations and to add the signature
of the CEO of company 2. Company 2 then ﬁlls in the form
ﬁelds (cid:6), adds some annotations ɔ and signs (cid:8) the slightly
modiﬁed document. From this scenario, it should be clear that
company 2 must not be able to modify the original text of the
contract before or when signing, for example, by changing the
negotiated payment ((cid:2) → (cid:10)). At the very least, all changes
made to the contract by company 2 should be visible to a
judge using any PDF viewer in a legal trial.
Unfortunately, this is not the case. In this paper, we present
attacks where the content of the PDF document can be altered
by company 2 in such a way that the changes are undetectable,
either in all PDF applications or in a subset of them.
Security of PDF Certiﬁcation. We investigate the following
question: “How dangerous are permitted changes in certiﬁed
documents?”. To answer this question we systematically an-
alyze the allowed modiﬁcations in certiﬁed documents and
reveal
two new vulnerabilities abusing ﬂaws in the PDF
speciﬁcation: Evil Annotation Attack (EAA) and Sneaky Sig-
nature Attack (SSA). These vulnerabilities allow an attacker to
change the visible content of a PDF document by displaying
malicious content over the certiﬁed content. Nevertheless,
the certiﬁcation remains valid and the application shows no
warnings.
PDF Applications are Vulnerable. We evaluated 26 PDF
applications and were able to break the security of certiﬁed
documents in 15 applications by using the EAA. For the attack
class SSA, 8 applications proved to be vulnerable. In total,
24 applications were vulnerable to at least one speciﬁcation
ﬂaw. Additionally, we analyzed 26 applications to determine
whether the permissions for adding annotations and signatures,
as deﬁned in the PDF speciﬁcation, were implemented cor-
rectly. We show that for 11 of 26 applications, a permission
mismatch exists.
Code Injection Attack on Adobe. Only certiﬁed documents
may execute high privileged JavaScript code in Adobe prod-
ucts. For example, a high-level JavaScript can call an arbitrary
URL without user conﬁrmation to deanonymize a user. Our
research reveals that such code is also executed if it is added
as an allowed incremental update. We are the ﬁrst to reveal
that this behavior allows attackers to directly embed malicious
code into a certiﬁed document.
Responsible Disclosure. We started a coordinated vulner-
ability disclosure and reported all issues to the respecting
vendors. We cooperated with CERT-Bund (BSI) and provided
a dedicated vulnerability report including all exploits to them.
Adobe, Foxit, and LibreOfﬁce responded quickly and provided
patches for late 2020 (CVE-2020-35931) or early 2021 (CVE-
2021-28545, CVE-2021-28546) see Appendix B. Adobe ﬁxed
the code injection vulnerability in early Nov. 2020 within
a patch outside the regular update cycle (CVE-2020-24432).
Currently, we participate in the standardization process via
the German National Organization for Standardization (DIN)
and the International Organization for Standardization (ISO)
to address the reported attacks in the next PDF speciﬁcation.
Contributions. The contributions in this paper can be sum-
marized as follows:
• We deﬁne an attacker model based on real-world usage of
certiﬁed documents. We are the ﬁrst to consider the attack
success on three different PDF application UI Layers
(section III).
• We are the ﬁrst to provide an in-depth security analysis
of certiﬁed documents by analyzing the 994-pages PDF
2.0 speciﬁcation [25] (section IV).
• We discovered the EAA and SSA, two vulnerabilities
based on security gaps in the PDF speciﬁcation. Both
allow modifying the displayed content arbitrarily in a
certiﬁed document (section V).
• We implemented two tools – PDF Tester and PDF De-
tector. PDF Tester is a tool to automatically evaluate
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:29:12 UTC from IEEE Xplore.  Restrictions apply. 
21486
the security of multiple PDF applications for multiple
PDF ﬁles. PDF Detector is an online service evaluating
certiﬁed documents and recognizing the attacks described
in this paper. Both tools are described in section VI.
• We evaluate the security of certiﬁed documents in 26
popular PDF applications on Windows, macOS, and
Linux. The results are alarming. In only 2 cases, we could
not ﬁnd a vulnerability; 15 viewers were vulnerable to
EAA, 8 to SSA, including Adobe, Foxit, and LibreOfﬁce.
We additionally analyzed the standard-compliant imple-
mentation of PDF certiﬁcation applications and found
issues in 11 of them. Tools and exploits are available
on https://pdf-insecurity.org/.
• Since EAA and SSA abuse ﬂaws in the current PDF
speciﬁcation, we propose ﬁxes for them (section VIII).
• We extend the impact of EAA and SSA by showing
how to use them for executing high privileged JavaScript
(section IX).
A. PDF Structure
II. BASICS
Figure 3 shows the ﬁle structure of a certiﬁed document.
The ﬁrst four building blocks are: header, body, xref table,
and trailer. The header deﬁnes the version of the document,
for example %PDF-2.0 for version 2.0. The body deﬁnes the
content shown to the user after opening the ﬁle. The body
contains different objects with different types. Common types
are text, font, or image. There are dedicated objects that control
the presentation of the PDF, such as Catalog, Pages, and Page.
An example of an object is depicted in Listing 1.
1 1 0 obj
2 /Type /Page
3 /Contents 2 0 R
4 /Resources 3 0 R
5 endobj
% Object with ID "1"
% Definition of one page of the document
% Ref. to 2 0 obj defining the text
% Ref. to 3 0 obj defining the font
% End of the object
Listing 1. Part of a PDF document depicting the deﬁnition of one objects –
the Page 1 0 obj.
The xref table contains the byte position of each object in the
PDF. It allows PDF viewers to efﬁciently ﬁnd all objects for
processing. The trailer deﬁnes the byte position of the xref
table and the root object of the PDF document’s object tree.
The root object is named Catalog and it is the ﬁrst object to be
processed, because it contains all relevant information about
the document’s structure.
B. Interactive Elements
The PDF speciﬁcation additionally deﬁnes interactive ele-
ments that allow user input into the document. Such elements
are separated in two categories: forms and annotations.
Forms. PDF forms allow user input in a predeﬁned mask, such
as a text ﬁeld, a radio button, or a selection box. Facilities,
such as the administration, usually use forms to create PDF
documents with predeﬁned areas which are intended to be
ﬁlled out by users. The user input is, however, limited to the
deﬁned form ﬁelds and cannot change other content within the
PDF.
F
D