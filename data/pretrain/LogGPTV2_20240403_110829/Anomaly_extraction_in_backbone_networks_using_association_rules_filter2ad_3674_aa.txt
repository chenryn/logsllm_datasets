title:Anomaly extraction in backbone networks using association rules
author:Daniela Brauckhoff and
Xenofontas A. Dimitropoulos and
Arno Wagner and
Kav&apos;e Salamatian
Anomaly Extraction in Backbone Networks
using Association Rules
Daniela Brauckhoff
ETH Zurich
Zurich, Switzerland
PI:EMAIL
Xenofontas
Dimitropoulos
ETH Zurich
Zurich, Switzerland
PI:EMAIL
Arno Wagner
ETH Zurich
Zurich, Switzerland
PI:EMAIL
ABSTRACT
Anomaly extraction is an important problem essential to
several applications ranging from root cause analysis, to at-
tack mitigation, and testing anomaly detectors. Anomaly
extraction is preceded by an anomaly detection step, which
detects anomalous events and may identify a large set of pos-
sible associated event ﬂows. The goal of anomaly extraction
is to ﬁnd and summarize the set of ﬂows that are eﬀectively
caused by the anomalous event.
In this work, we use meta-data provided by several
histogram-based detectors to identify suspicious ﬂows and
then apply association rule mining to ﬁnd and summarize
the event ﬂows. Using rich traﬃc data from a backbone
network (SWITCH/AS559), we show that we can reduce
the classiﬁcation cost, in terms of items (ﬂows or rules) that
need to be classiﬁed, by several orders of magnitude. Fur-
ther, we show that our techniques eﬀectively isolate event
ﬂows in all analyzed cases and that on average trigger be-
tween 2 and 8.5 false positives, which can be trivially sorted
out by an administrator.
Categories and Subject Descriptors
C.2.6 [Computer - Communication Networks]: Inter-
networking
General Terms
Design, Experimentation, Measurement
Keywords
Anomaly extraction, association rules, histogram cloning
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’09, November 4–6, 2009, Chicago, Illinois, USA.
Copyright 2009 ACM 978-1-60558-770-7/09/11 ...$10.00.
Kavè Salamatian
Lancaster University
Lancaster, United Kingdom
PI:EMAIL
Root-cause Analysis
Anomalous 
Flows
Anomaly Extraction
Alarm
Meta-Data
Event
(scan, DDoS,...)
Event Flows
Anomaly Detection
Figure 1: High-level goal of anomaly extraction.
1.
INTRODUCTION
Anomaly detection techniques are the last line of defense
when other approaches fail to detect security threats or other
problems. They have been extensively studied since they
pose a number of interesting research problems, involving
statistics, modeling, and eﬃcient data structures. Never-
theless, they have not yet gained widespread adaptation, as
a number of challenges, like reducing the number of false
positives or simplifying training and calibration, remain to
be solved.
In this work we are interested in the problem of identi-
fying the traﬃc ﬂows associated with an anomaly during a
time interval with an alarm. We call ﬁnding these ﬂows the
anomalous ﬂow extraction problem or simply anomaly ex-
traction. At the high-level, anomaly extraction reﬂects the
goal of gaining more information about an anomaly alarm,
which without additional meta-data is often meaningless for
the network operator.
Identiﬁed anomalous ﬂows can be
used for a number of applications, like root-cause analysis
of the event causing an anomaly, improving anomaly detec-
tion accuracy, and modeling anomalies.
In Figure 1 we present the high-level goal of anomaly ex-
traction. In the bottom of the ﬁgure, events with a network-
level footprint, like attacks or failures, trigger event ﬂows,
which after analysis by an anomaly detector may raise an
alarm. Ideally we would like to extract exactly all triggered
event ﬂows; however knowing or quantifying if this goal is re-
alized is practically very hard due to inherent limitations in
ﬁnding the precise ground truth of event ﬂows in real-world
traﬃc traces. The goal of anomaly extraction is to ﬁnd a set
of anomalous ﬂows coinciding with the event ﬂows.
28Meta-data
Protocol
IP range
Port range
TCP ﬂags
Flow size
Packet size
Flow duration
Anomaly detection technique
Maximum-Entropy [9]
Histogram [11, 21]
Defeat [15]
MR-Gaussian [7]
DoWitcher [19]
Histogram [11, 21]
Maximum-Entropy [9]
Histogram [11, 21]
DoWitcher [19]
Maximum-Entropy [9]
Histogram [11, 21]
DoWitcher [19]
Histogram [11, 21]
Histogram [11, 21]
Table 1: Useful meta-data provided by various
anomaly detectors. The listed meta-data can be
used to identify suspicious ﬂows.
An anomaly detection system may provide meta-data rel-
evant to an alarm that help to narrow down the set of candi-
date anomalous ﬂows. For example, anomaly detection sys-
tems analyzing histograms may indicate the histogram bins
an anomaly aﬀected, e.g., a range of IP addresses or port
numbers. Such meta-data can be used to restrict the candi-
date anomalous ﬂows to these that have IP addresses or port
numbers within the aﬀected range. In Table 1 we outline
useful meta-data provided by various well-known anomaly
detectors.
To extract anomalous ﬂows, one could build a model de-
scribing normal ﬂow characteristics and use the model to
identify deviating ﬂows. However, building such a micro-
scopic model is very challenging due to the wide variability
of ﬂow characteristics. Similarly, one could compare ﬂows
during an interval with ﬂows from normal or past intervals
and search for changes, like new ﬂows that were not pre-
viously observed or ﬂows with signiﬁcant increase/decrease
in their volume [12]. Such approaches essentially perform
anomaly detection at the level of individual ﬂows and could
be used to identify anomalous ﬂows.
In this work, we take an alternative approach to iden-
tify anomalous ﬂows that combines and consolidates infor-
mation from multiple histogram-based anomaly detectors.
Compared to other possible approaches, our method does
not rely on past data for normal intervals or normal mod-
els. Intuitively, each histogram-based detector provides an
additional view of network traﬃc. A detector may raise an
alarm for an interval and provide a set of candidate anoma-
lous ﬂows. This is illustrated in Figure 2, where a set Fj rep-
resents candidate ﬂows supplied by detector j. We then use
association rules to extract from the union ∪Fj a summary
of the anomalous ﬂows FA. The intuition for applying rule
mining is the following: anomalous ﬂows typically have simi-
lar characteristics, e.g., common IP addresses or ports, since
they have a common root-cause, like a network failure or a
scripted Denial of Service attack. We test our anomaly ex-
traction method on rich network traﬃc data from a medium-
size backbone network. The evaluation results show that our
solution reduced the classiﬁcation cost in terms of items that
need to be manually classiﬁed by several orders of magni-
tude.
In addition, our approach eﬀectively extracted the
F3
F2
F1
FA
FA
Figure 2: Each detector j supplies a set of suspicious
ﬂows Fj. We ﬁlter the union set of suspicious ﬂows
∪Fj and apply association rule mining to extract the
set of anomalous ﬂows FA.
anomalous ﬂows in all 31 analyzed anomalies and on aver-
age it triggered between 2 and 8.5 false positives, which can
be trivially ﬁltered out by an administrator.
The rest of the paper is structured as follows. Section 2 de-
scribes our techniques for extracting anomalous traﬃc from
Netﬂow traces using histogram-based detectors and associ-
ation rules. In section 3, we describe the datasets used for
this study and then present evaluation results. Related work
is discussed in Section 4. Finally, Section 5 concludes the
paper.
2. METHODOLOGY
In the following section we outline our approach for gen-
erating ﬁne-grained meta-data with histogram-based detec-
tors, and for ﬁnding the set of anomalous ﬂows with the help
of association rules.
2.1 Histogram-based Detection
Histogram-based anomaly detectors [11, 21, 15, 18] have
been shown to work well for detecting anomalous behav-
ior and changes in traﬃc distributions. We build our own
histogram-based detector that (i) applies histogram cloning,
i.e., maintains multiple randomized histograms to obtain ad-
ditional views of network traﬃc; and (ii) uses the Kullback-
Leibler (KL) distance to detect anomalies. Each histogram
detector monitors a ﬂow feature distribution, like the dis-
tribution of source ports or destination IP addresses. We
assume n histogram-based detectors that correspond to n
diﬀerent traﬃc features and have m histogram bins. His-
togram cloning provides alternative ways to bin feature val-
ues. Classical binning groups adjacent feature values, e.g.,
adjacent source ports or IP addresses. A histogram clone
with m bins uses a hash function to randomly place each
traﬃc feature value into a random bin. Each histogram-
based detector j = 1 . . . n uses k histogram clones with in-
dependent hash functions.
During time interval t, an anomaly detection module con-
structs histogram clones for diﬀerent traﬃc features. At the
end of each interval, it computes for each clone the KL dis-
tance between the distribution of the current interval and a
reference distribution. The KL distance has been success-
fully applied for anomaly detection in previous work [9, 18].
It measures the similarity of a given discrete distribution q
to a reference distribution p and is deﬁned as
D(p||q) =
m(cid:2)
i=0
pi log (pi/qi).
29threshold
e
c
n
a
t
s
d
i
L
K
f
o
e
c
n
e
r
e
f
f
i
d
t
s
r
i
F
0.5
0.4
0.3
0.2
0.1
0
−0.1
−0.2
−0.3
−0.4
−0.5
0
100
200
300
15−min interval
400
500
Figure 3: Time series of KL distance ﬁrst diﬀerence
for the source IP address feature. The dashed line
shows the anomaly detection threshold.
Coinciding distributions have a KL distance of zero,
while deviations in the distribution cause larger KL dis-
tance values.
In general, the KL distance is asymmet-
ric D(p||q) (cid:3)= D(q||p).
Instead of training and recalibrating distributions that
represent normal behavior, we use the distribution from the
previous measurement interval as reference distribution p.
Hence, our detector will generate an alert each time the dis-
tribution changes. Assuming an anomalous event that spans
multiple intervals, the KL distance will generate spikes at
the beginning and at the end of an anomalous event. On
the other hand, changes in the total number of ﬂows that
do not have an impact on the distribution will not result in
large KL distance values.
We have observed that the ﬁrst diﬀerence of the KL dis-
tance time series is normally distributed with zero mean
and standard deviation σ. This observation enables to de-
rive a robust estimate of the standard deviation ˆσ and of
the anomaly detection threshold 3 ˆσ from a limited number
of training intervals. We generate an alert when
Δt D(p||q) ≥ 3 ˆσ.
In Figure 3, we show the Δt D(p||q) time series for the
source IP address feature and the corresponding threshold.
An alarm is only generated for positive spikes crossing the
threshold, since they correspond to signiﬁcant increases in
the KL distance.
2.2 Meta-Data Generation
If we detect an anomaly during interval t we want to iden-
tify the set Bk of aﬀected histogram bins and the correspond-
ing set Vk of feature values that hash into the aﬀected bins.
The set Vk is then used to determine meta-data useful for
ﬁltering suspicious ﬂows.
To ﬁnd the contributing histogram bins for each clone,
we use an iterative algorithm that simulates the removal
of suspicious ﬂows until Δt D(p||q) falls below the detection
threshold. In each round the algorithm selects the bin i with
the largest absolute distance maxi∈[0,s] |pi − qi| between the
histogram of the previous and current interval. The removal
of ﬂows falling into bin i is simulated by setting the bin count
in the current histogram equal to its value in the previous
interval (qi = pi). The iterative process continues until the
current histogram does not generate an alert any more.
Having identiﬁed the set of anomalous histogram bins Bk
for each clone, we obtain the corresponding set of feature
values Vk. The cardinality of Vk is much larger than the car-
dinality of Bk and therefore the set of feature values Vk pro-
vided by each clone is likely to contain many normal feature
values colliding on anomalous bins.
In order to minimize
false positives, we keep only those feature values that have
been identiﬁed by all histogram clones ∩Vk. Using k clones