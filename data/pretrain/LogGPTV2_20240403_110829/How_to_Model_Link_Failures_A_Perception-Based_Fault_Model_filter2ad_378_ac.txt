In order to pin down the essential characteristics of  our 
different classes of faults, the specifications given in  Defi- 
nition 3 and 4 are mutually exclusive. In practice, however, 
it is more common to define failure modes that are partially 
ordered,  see e.g.  [lo].  After all,  an  algorithm  that  toler- 
ates an asymmetric commision usually tolerates (even eas- 
ier) just a symmetric commission as well.  Figure 4 shows 
the partial order of time resp. value faults implied by algo- 
rithms like the one of  Section 4.  The “forWjoin” structure 
is a consequence of the fact that a symmetric commission is 
both more severe than  an asymmetric omission since it  in- 
volves a timehahe-faulty perception, and less severe since 
it is perceived consistently at both p and q, cp. Remark 2 on 
Theorem 1. 
When considering time and value faults sizzltaneously, 
the Cartesian product of  the individual partial orders has to 
be constructed. Due to the fact that omissions are perceived 
identically  in both domains, recall Remark 4 above, the re- 
sulting partial order has exactly  the same structure as Fig- 
ure 4. More specifically, recalling the classes of faults speci- 
fied in Definition 3 and 4, our final failure modes are defined 
as follows: 
Definition 5 (Pairwise Faults)  A pair ofperceptions { V:[ti], 
V:[t;]} of the event V s [ t s ]  disseminated  by node s has the 
following failure modes: 
0  Crash fault:  C  = SO 
Symmetric fault:  S  = C  U (SCt n N v )  U (SCt n 
S C V )  U (n/t n SCV) 
0  Omission fault:  O = C U A 0  
0  Asymmetric fault:  A = U U S U ACt  U ACV 
Inconsistency 
\ /  
Faulty information 
[ 
11oftrult 
1 
Figure 4. Partial order of picre time and picre  value 
faults of a pair of perceptions. 
Accordingly, a fault must be considered as  asymmetric 
in  case  of an  asymmetric time  or  value  commission,  but 
could just be any weaker type of fault as well. Note that we 
could have employed a notation  like “asymmetric commis- 
sion (or weaker)” as used in [ 14, 181 instead of overloading 
the standard term  “asymmetric fault”.  In  fact,  our defini- 
tion of symmetric and asymmetric fault seems to even con- 
tradict  the classic  definition  of  those terms in  some cases. 
Nevertheless, we think  that  overloading is justified  by  the 
fact that our extensions preserve the essentials of their origi- 
nal meaning: The meaning of symmetric I asymmetric fault 
is basically  received  consistently / inconsistently  at differ- 
ent  nodes.  In  our context,  however,  we  had  to  relax  the 
definition of “received  identically” since we cannot assume 
identical information at different nodes, even in the faultless 
case. 
4  Consistent Broadcasting 
In this section, we will prove that (a variant of) the non- 
authenticated consistent  broadcast  primitive -and 
hence 
the clock synchronization algorithms-  of  [21] can be em- 
ployed in distributed  systems under a perception-based hy- 
brid  fault model.  Consistent broadcasting is  implemented 
by  means of  two  functions, broadcast  and deliver, which 
can be used to disseminate a message (msg) throughout the 
system, in  a way  that guarantees properties Pl-P3  defined 
in Theorem 1 below. 
The pseudo-code description of the consistent broadcast 
primitive  is  shown  in  Figure 5.  It  relies  upon  unreliably 
sending two  kinds of  messages  to  all  nodes (including it- 
self) in the system: initnzsg is used by a node to signal that 
62 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:59:22 UTC from IEEE Xplore.  Restrictions apply. 
To broadcast msg. ecich correct node: 
send inir.msg  to all: 
To deliver msg. each correct node: 
if received  iiiit~nsg from f t a  + f a  + fs + fes  + U + 1 distinct 
nodes 
-+ send echo-nul: to all [once]; /* sufficient evidence *I 
0 received echo-nul: from fc,  + f a  + fs + fc3  + 1 distinct nodes 
--t send echo.msg  to all [once]; /* sufficient evidence */ 
fi 
i f  received echo-nrsg from 3 f l a  + 2 f a  + fo + fto + fs + fe,  + 1 
distinct nodes 
+ deliver nag; I*  accept */ 
fi 
Figure 5. Consistent broadcast primitive for the hy- 
brid fault model of Definition 6 
broadcast  nisg  has been called locally, echomsg is emitted 
(at most once) by  any node that received  at least one non- 
faulty initxisg or echomsg. The numbers f s .  f e s ,   fo,  fee, 
f a ,  and f e a  give the maximum tolerated number of faults as 
specified in Definition 6 below, and U is the unforgeability 
threshold given in Theorem 1. 
For our system model, we assume that n (already booted’) 
nodes are interconnected by a fully connected point-to-point 
network, with end-to-end computational + transmission de- 
lay  6; 
if  the path  from sender s to receiver p 
(including s = p) is non-faulty.  Let E  = r+ - 7-  be the 
resulting uncertainty and t d e l   = 27-+ the worst-case end-to- 
end round trip delay. 
E [.-,  .+] 
In order to justify the fault model given in  Definition  6 
below, we first have to map the event-based notion of Sec- 
tion 3 to to the algorithm of Figure 5. We need two different 
events and the appropriate perceptions for this purpose: 
0  Is[ts] b “node s entered bioadcast msg”, 
0  I;[ti] 
0  ES[ts] 
0  E; [ti] 
“node p  received initnisg from s”. 
“node s achieved sufficient evidence”, 
“node p received echonisg  from s”. 
There is only a  single correct value Is = 1;  = initmsg 
and ES = E;  = echoxzsg, such that the set of admissible 
offsets in  Definition  2 is v; %  {0} for both  events.  The 
ri>+] in Definition  1 are de- 
admissible delays 7: = [.,”I-, 
fined by Vs,p : r;~- = r- and r;-+ = r+; note that those 
bounds must also be valid forp = s. Let V,(t) denote either 
IP(t) or a t ) .  
Definition 6 (Hybrid Fault Model)  Consider  the pairs of 
perception  vectors {Zp(m),Z,(m)} and  {&p(m), &,(m)} 
‘Applicability  of consistent broadcasting for initial clock synchroniza- 
tion  purposes is hence somewhat restricted! 
63 
for any admissible execution of any two non-faulty nodes p 
and q. Among the n pairs of perceptions 
{V,”[t;I,  Y 3 3  E  { V p ( m ) ,  V , ( m ) ) ,   1 L s 5 n, 
there niay be at niost 
0  fc  crash faults, 
0  f3  + 2 f e s  syninietric faults,  2 fes  of  those  caused  by 
at niost f e s   link faults (slightly excessive delays) as- 
cribed to p resp. q, 
0  f o  + 2 f t o   onzission fartlts, 2 fe0  of those caused by at 
most fe0  link faults (receive omissions) ascribed to p 
‘esp. q, 
0  f a  + 2 fea  asyninietric faults, 2 fen  of those caused by 
at most fea  lirik faults (excessive delays) ascribed top 
‘esp. q, 
where the numbers are such that 
Remarks: 
1.  We do not  consider the class of systemwide consis- 
tently perceived manifest faults [24] explicitly, since 
they  are simple to  accommodate in  our context:  To 
tolerate f b   manifest faults, n 2 f b   + 1 is sufficient. 
2.  A receive omission that “hits” an otherwise symmet- 
ric faulty (early) pair of perceptions produces an asym- 
metric fault,  since an  omission’s effect is equivalent 
to that of a late time fault.  However, two faults (one 
omission +one symmetric fault) are turned into a sin- 
gle  asymmetric one here,  which  implies that  suffi- 
ciently many non-faulty nodes for tolerating  this  sit- 
uation are always available. 
In order not to exceed the maximum allowed  number of 
faults in  the perception  vectors, at most f a  + f o  + fs + f c  
sending nodes -although 
not necessarily  the same for dif- 
ferent pairs {Vp(m), V,(m)}-  may  behave faulty during 
the  whole execution, and only  fa + f s  of those may  emit 
time- or value-faulty  information. In fact, due to additional 
link  faults,  a single perception vector V p ( m )  may  contain 
at most 
f a  + fea  + f s  + f e s   time and/or value-faulty  V;[ti], 
fa + fea + f o  + feo  + fs + fes + fc  omissions. 
Moreover, it  is  not  difficult  to  show the  following conse- 
quence of Definition 6: 
Lemma 1 (Difference in Perceptions)  For  U  pair  of  per- 
ception vectors { Vp( m), V ,  (m)} that is in accordance with 
the fault niodel of  Definition 6, at most A f  = f n  + 2 fea  + 
f o   + feo  of  the perceptioris V;[tz]  #  0 in  V,(t) niay  be 
missing in V, (t + At) for any At 2 E. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:59:22 UTC from IEEE Xplore.  Restrictions apply. 
Proof:  By  Definition  5 ,  at  most  feQ  perceptions may 
yet at y,  fa + ftn perceptions may be late at q, and fa + f e 0  
have  been  available too early  at p  without being avaliable 
ones could have been  omitted  at q.  All  symmetric faulty 
perceptions present in V p ( t ) .  however, must also be present 
in V,(t + At), recall Remark 2 following Definition 4.  0 
The  following  major  Theorem  1  proves  that  the  algo- 
rithm of Figure 5 satisfies the properties of consistent broad- 
casting: 
Theorem 1 (Properties Consistent Broadcast)  The cotzsis- 
tent broadcastprinzitive  of Figure 5 with 0 5 U  5 f o  + fro 
satisfies 
P I .  
P2. 
P3. 
Correctness:  Ifatleastn-  f a - 2 f e a -   f o -   feo+U  not 
necessarilj  correct  nodes broadcast  msg  by  time t, 
then even nonlfuult), node delivers  msg by time t + 
t d e l .  
Unforgeability:  If at  most  U  non-tir~te/value-furilty 
nodes broadcast  msg  by  tinte  t, then  no  non-faulty 
node delivers msg by t or earlies 
Relay:  I f a  non-faulv node delivers  msg  at time  t, 
then  every nonlfaulQ node does so by time  t + t A ,  
where til  = 7 -  + 2 E  5 t d e l .  
Proof: (Correctness.) Since at least 2(fa + fea  + f s  + 
f e s ) +   fo+feo+U+ f c + l  not necessarily correct (including 
crashed) nodes broadcast initmsg by  t by assumption, the 
perception  vector at any non-faulty node p  satisfies 
2 f e a  + f a  + f s  + f e s  + U + I, 
IZp(t +.+)I 
L 
since at most f  = f a  + f e a   + fa + f e 0  + fs  + f e s  + fc 
itzitnsg could be missing in Z, by time t + T+  due to node 
and link failures; at most f a  + fea  + fs + f e s  of those may 
just be late due to a time fault. 
Hence, all  non-faulty  nodes achieve sufficient  evidence 
in  the first  if  of Figure 5  and send echomsg  to all  nodes. 
This in turn implies 
IEq(t+2r+)1  2  n - f 
3fea + 2fQ + fa + feo + fs + f e s  + 1 
for any non-faulty node q, which causes q to deliver by t + 
2r+ = t + t&l. 
(Utforgeabiliy.) Since at most U non-timehlue-faulty 
nodes  broadcast  msg,  at  most  fa + fs + U  nodes  could 
have  sent initmsg  and  hence Iz,(t)I 5  f a  + f e a  + f s  + 
f e s  + U  for any  non-faulty  node p .   Note that we assume 
here  that  symmetric  and  asymmetric  link  faults can  pro- 
duce time faulty messages “out of thin air”.  No non-faulty 
p  can hence achieve sufficient evidence in the first if of Fig- 
ure 5 and send echomsg. Therefore, only at most fa + fs 
(time/value-faulty) nodes might have sent echomsg, which 
implies ILp(t)l 5  fa + fea  + fs + fes.  Consequently, no 
correct p  can achieve sufficient evidence in  U of the first if 
of Figure 5 and hence satisfy the acceptance criterion. 
(Relay.) Since some non-faulty node p delivers at time t, 
I&p(t)l  2 3fea + 2fa + f o  + f e o   + fs + f e s  + 1 according 
to the acceptance criterion. Hence, the perception vecto’r at 
any non-faulty  node q must satisfy 
I&q(t  +€)I  2 f e a  + fa + fs + fes  + 1 
according to Lemma  I .   It follows that all non-faulty nodes 
achieve sufficient evidence in 0 of the first if of Figure 5 and 
send echomsg to all nodes. As in the proof of correctness, 
this implies 
+ E   + .+)I  2 3fea + 2fQ + fo + f e 0  + fs + jes + 1 
for any non-faulty node T ,  which causes T  to deliver by t + 
& + T + = t + t , l . u  
Remarks: 
1. 
2. 
3. 
4. 
5. 
From  the  proof  of  the relay  property,  it  is  apparent 
that Lemma  I  need not hold for arbitrary  t, but only 
for the times when some non-faulty node accepts. This 
reveals that we could strengthen the definition of asym- 
metric faults if some information about t S  was incor- 
porated  in  Definition  3, recall  Remark  1  following 
Definition  4. 