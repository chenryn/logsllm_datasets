to the components 
put/output 
system with many-to-many 
sages are published 
limita­
tion of those models is their focus on the access to the data, 
rather than the use of the data after the access happens. 
This 
mashups that need to use 
is insufficient 
one's sensitive 
not to send them to 
those approaches 
an unauthorized 
the cooperation 
and 
which render them hard to deploy. Mash-IF is 
the clients, 
designed 
sensitive 
data at 
information-flow 
even in the absence of collaborations 
party. Moreover, 
among content providers, 
for many practical 
data but cannot be trusted 
where principles 
to an event hub through in­
mashups 
from other parties. 
through which mes­
A fundamental
channels, 
connected 
level and works on the existing 
and distributed. 
require 
integrators 
these issues: 
it controls 
to address 
channels 
are mapped 
of components 
scripting. 
needs to 
analysis 
is certainly 
more 
information 
Mash-IF utilizes 
particularly, 
than our approach, 
dynamic taint analysis 
which is based upon monitor­
However, such an analysis 
flow at the in­
the threat of cross-site 
It also needs to modify 
the source code of JavaScript 
vir­
while Mash-IF can be built into browser add­
as did in prior re­
to detect un­
widget [26], our aim is to roughly track data flows 
techniques 
have been 
Script Analysis. Program analysis 
increasingly 
and other Web appli­
used to analyze scripts 
cations. In [38], both dynamic and static analyses 
are 
applied to track the sensitive 
struction 
level to mitigate 
Instruction-level 
accurate 
ing call sequences. 
monitor every binary instruction. 
browsers, 
tual machine, 
ons. The static 
analyze a subset of JavaScript 
search [26]. Unlike that work, which intends 
trusted 
across scripts, 
box model like the BLP whenever hard-to-analyze 
ments (those outside 
important 
fingerprint 
access) 
track sensitive 
and turns out to be effective, 
novel, up to our knowledge, 
according 
study (Section 
to our experiment 
ysis has also been used in BrowserShield 
BrowserShield 
relies 
on JavaScript 
statements 
using the interposition 
Another 
is utilization 
of a 
of calls and DOM 
leaks to efficiently 
(sequences 
that could leaks to information 
in web pages and then analyze it 
for detect-
can always employ the black­
state­
contribution 
of the execution 
on a proxy on the firewall to interpose 
data during the runtime. 
are encountered. 
[35] and Pixy [29]. 
of our approach 
and therefore 
This approach 
It is designed 
functions. 
language, 
4). Script anal­
the subset) 
can thoroughly 
is 
information 
within a browser, 
of the vulnerabilities 
ing exploits 
tracking 
nique it uses to wrap statements 
mediate DOM access, 
a necessary 
IF to the Internet 
scripts. 
However, 
server side, for discovering 
jection, 
not for 
flows. On the other hand, the tech­
might also be applied to 
step for extending 
Mash­
(IE). Pixy also statically 
on the 
Explorer 
it is meant to work on PHP scripts 
as SQL in­
such vulnerabilities 
running in browsers. 
while our focus is scripts 
analyzes 
An important 
technique 
interception. 
Hal­
a model to audit the execution 
and implemented 
et al. [27] proposed 
DOM  operation interception. 
used in Mash-IF is DOM operation 
laraker 
of JavaScript 
similar 
cess. Spy Shield [32] mediates 
contain 
further 
full mediation 
malicious 
study is needed to explore 
of DOM access within the IE. 
to the technique 
add-ons. 
it in the Firefox, 
which is 
we adopted to mediate DOM ac­
DOM events from the IE to 
In the absence of source code, 
to achieve a 
the potential 
that controls 
with our research 
flows within browsers. 
BFlow [40], a technique 
from BFlow in the following 
BFlow tracks data at the granularity 
However, Mash-IF 
perspec­
BFlow. Concurrently 
Yip et al. proposes 
the information 
differs significantly 
tives. First, 
tion zones, groups of browser frames, while our approach 
can achieve 
objects. 
either by the user or the developer, 
matically 
scripts. 
to label sensitive 
work on the client side, and can therefore 
tify sensitive 
to 
record and iden­
without the help from the server. 
Third, BFlow needs the support from web servers 
while our work can auto­
rules through analyzing 
control, 
an explicit 
Second, BFlow requires 
declassification 
much finer-grained 
Mash-IF is designed 
data. In contrast, 
to individual 
generate 
objects 
of protec­
DOM 
and independently, 
declassification 
6. Discussion 
providers 
and integrators. 
and integrators. 
The information-flow 
However, client-side 
as a web client may not have sufficient 
model we propose here is designed 
to work on the client side, in the absence of the cooperation 
from content 
This is  in contrast 
to the prior work [40] that needs effort from web clients, 
servers 
be limited, 
mation to determine 
some contents. 
rations 
of a technique. 
to take advantage 
when available, 
important 
integrity 
we plan to work on is incorporation 
into our system. 
from different 
deployable. 
of 
can impede the 
We are considering 
infor­
and even the origins 
extension 
protection 
of collabo­
deployment 
On the other hand, requirement 
and also incrementally 
from all parties 
of the information 
design of a new model 
the sensitivity 
practical 
parties 
control 
can 
Another 
of 
subjects/objects 
need to be fur­
issue here is how to deter­
of the inputs from a user. A straight­
is to let the user mark an object to which 
An important 
and labeling 
Identifying 
ther automated. 
mine the sensitivity 
forward solution 
she will key in sensitive 
ever, can be inconvenient. 
automatic: 
for example, 
data like password. 
A better solution 
should be more 
This, how­
a labeling 
tool can mark an input 
978-1-4244-7501-8/10/$26.00 
©l01O IEEE 
259 
DSN 2010: Li et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:05:29 UTC from IEEE Xplore.  Restrictions apply. 
2010 IEEEIIFIP International 
Conference 
on Dependable 
Systems & Networks (DSN) 
[5] Google  finance portfolios.  h t t p: // www . go o g l e.c o m /i g /  
d i r e c t o r y ? h l  e n & t y
i g/ m o du l e s /f i n a n c e-p o r tfo l i o s.xml. 
pegadge t s& u r l www. go o g l e.c o m /  
[6] Google grnail gadget. h t t p: //www .g o o gl e.com/i g / di r e c t o r y ?  
h l  e n & t yp egadge t s& u r l www. go o g l e.com / i g/modu l e s /  
bui l t i ngrna i l. xrn l .  
[ 7 ]  Google latitude. http: // www .g o o g l e.c o m /i g / di r e c t o r y ? h l   
e n & t yp e  g a dgets &u r l www. go o g l e.c om / i g/ m o dule s / fv . xm l .  
[ 8 ]  Google search ebay. http: // www .g o o g l e.c o m /i g / di r e c t o r y ? h l   
e n & t yp e = g a dgets &u r l =www. ne tremot e.com/r s s/ eb a y.xml. 
[9] igoogle. 
h t t p: // www. go o g l e.com / i g. 
h t t p: // www.image lo o p.com. 
[ 1 0] Imageloop. 
[II] Ping.fm. h t t p: //p i n g  . fm/ .  
[ 1 2] Savvyrent.com. 
[13] Sqlite. h t t p: // www .s q l i t e. or g / .  
[ 1 4] Tl.vitterfall. h t t p: // t w i t t e r f a ll .  com / .  
[ 1 5 ]  Urchin 5 web analytics software. http: // www .g o o g l e. com/ 
http: // www.s avvy r e n t. com. 
a n a l yt i c s / ur c h i n_so ftwa r e.htrnl. 
[ 1 6] Walkjogrun. http: // www . wa l k jo g r u n. ne t .  
[ 1 7 ]  What's out? h t t p: // whats o u t. ne t / .  
[ 1 8] Xpcom -mdc. h t t p s:  / / devel o p e r. moz i l l a. o r g / e n / XP C OM, 2008. 
Robust defenses for cross-site request 
[ 1 9] A. Barth, C. Jackson, 
and J. C. Mitchell. 
from the user as sensitive 
a "password" 
investigated 
if the same content 
Such labeling 
research. 
field before. 
was found in 
techniques 
will be 
Effective 
in our follow-up 
mediation 
of DaM access and function 
We 
for information-flow 
control. 
in Fire­
achieved 
that this can be conveniently 
calls 
is the very foundation 
demonstrated 
fox through browser extension. 
fective 
which mediation 
without changing 
ways to apply our technique 
A further 
study will seek ef­
to 
to Internet 
browser code is critical. 
Explorer, 
Our current 
implementation 
of the DRG only focuses 
analysis. 
Natural 
on 
These technologies 
extensions 
and combi­
in prior research 
doubt that they can be integrated 
[38] to be effec­
analysis, 
include 
control-flow 
and dynamic analysis. 
data flows and relies on static 
of this approach 
nation of static 
have been demonstrated 
tive, and there is little 
into our system. The special 
printing 
ysis with call sequences, 
when the same script is used again. We believe 
plication 
is conceivable 
tively 
track and 
scripts, 
that one can use the same approach 
control 
part of our approach 
paths discovered 
information-leaking 
and other applications. 
of this technique 
information 
is clearly 
which can be efficiently 
that the ap­
to effec­
beyond mashups. It 
flows within server-side 
checked 
is finger­
by the anal­
forgery. In CCS '08: Proceedings of the 15th ACM conference on Computer 
and communications 
USA, 2008. ACM. 
[20] R. Brown. Aardvark firefox extension. http: // ka rmati c s  . c o m /  
pages 75-88, New York, NY, 
security, 
a a r dvar k / ,2005. 
[21 ]  J. Burke.  Cross domain  frame communication 
with fragment 
identifiers.  http: // t ag n e t o.b lo g s p o t  . c om / 2  0 0  6 / 0  6 /  
c ro s s-domai n-f r ame-commu n i  c a t i o n-wi t h. html, 2006. 
[22] S. Crites, F. Hsu, and H. Chen. Omash: enabling secure web mash ups via 
In Proceedings of the 15th ACM conference on Computer 
security, 
pages 99- 108. ACM New York, NY, USA, 
2008. 
[23] I.  H. eta!. Htrnl5 workingdraft. h t t p: // www.whatwg. or g / s pe c s /  
object abstractions. 
and communications 
web-app s / cu r r e n t-wor k / .  
[24] M .  Foundation. Spidermonkey 
Gavascript-c) 
engine. h t t p: // www . 
7 Conclusion 
moz i l l a. o r g /  j s /  s p i de r m o n k e y  / ,2009. 
[25] M. Foundation. Spidermonkey 
j sparse.c cross-reference. h t t p: //mxr . 
moz i l l a.o r g / mo z i l l a /s o u r ce / js /s r c /j sp a r s e. c,2009. 
In this paper, we present 
Mash-IF,  a new technique 
for 
on the client side. Our technique 
to an 
in a 
information 
access to sensitive 
but forbid propagation 
and mediate the existing 
remote host. We designed 
control 
cross-domain 
information-flow 
within 
enables 
of such information 
a browser, 
our technique 
unauthorized 
way that it can work without the collaborations 
from other 
parties 
communications. 
automatically 
statically 
enforced 
tion calls and DaM operations. 
against 
privacy 
analyzing 
within a browser by monitoring 
real mashups, and discovered 
problem in one of them. 
a new technique 
that 
rules for a script by 
sequences 
We evaluated 
builds declassification 
of func­
Mash-IF 
We also developed 
channels 
its code. Such rules can be efficiently 
for cross-domain 
a previous-unknown 
2009. 
[26] S. Guarnieri and 
B. Livshits. 
Gatekeeper: 
Mostly static enforcement 
of security 
and reliability 
Security 
[27] O. Hallaraker 
Symposium. USENIX society, 
and G. Vigna. Detecting 
2009. 
policies 
for javascript 
code. In Proceedings of the 18th USENIX 
malicious 
javascript 
code in mozilla. 
In ICECCS '05: Proceedings of the 10th IEEE International 
Engineering 
USA, 2005. IEEE Computer Society. 
Conference on 
of Complex Computer Systems, pages 85-94, Washington, 
DC, 
[28] G. Inc. Google ajax apis. h t t p: // c o de .g o o g l e  . com/ apis /  a j ax / ,  
[29] N. Jovanovic, 
C. Kruegel, and E. Kirda. Pixy: A static analysis 
tool for detect­
ing web application 
security 
vulnerabilities 
pages 258-263, 2006. 
and privacy, 
(short paper). In 2006 IEEE symposium on 
[30] c. Karlof, U. Shankar, J.  D. Tygar, and D. Wagner. Dynamic pharming at­
In Proceedings of the 
security, 
pages 58-71 . 
ference on Computer and communications 
tacks and locked same-origin 
15th ACM con
ACM New York, NY, USA, 2007. 
for web browsers. 
policies 
[31 ]  F. D. Keukelaere, 
S. Bhola, M. Steiner, 
S. Chari, and S. Yoshihama. Smash: 
secure component model for cross-domain 
In Proceeding of the 1 7th international 
535-544. ACM  New York, NY,  USA, 
2008. 
mashups on unmodified browsers. 
conference on World Wide Web, pages 
[32] Z. Li, X. Wang, and J. Y. Choi. Spyshield: 
Preserving 
privacy from  spy add­
ons. In Recent Advances in Intrusion 
[33] S.  S. Muchnick. Advanced Compiler Design and Implementation. 
Detection (RAID), pages 296--31 6, 2007. 
Morgan 
Acknowledgement 
Kaufmann, 1 997. 
[34] I. Parakey. Firebug -web development 
evolved. h t tp :/ / ge tfi rebug . 
We thank our shepherd 
Christopher 
the final version 
ance on preparing 
mous reviewers 
was supported 
under Grant No. CNS-0716292. 
for their valuable 
in part by the National 
Stewart 
for his guid­
of the paper, and anony­
comments. This work 
c o m / ,2009. 
[35] c. Reis, J. Dunagan, H. J. Wang, O. Dubrovsky, 
and S. Esmeir. Browsershield: 
Vulnerability-driven 
filtering 
of dynamic htrn!. In Proc. OSDI, 2006. 
[36] J. Ruderman. The same origin policy. http: // www . mo z i l l a. o r g /  
p r o  j ects /  s e cu r i  t y  / comp o n e n ts / s ame-o r i gi n. html, 2008. 
Science Foundation 
[37] K. Skilling. 
Function call tracing injscript. 
http:/ /www . c o depr oje c t. 
c o m / K B /  s c r ip t i n g /  J S c r i p t O ebug. a spx, 2007. 
[38] P. Vogt, F. Nentwich, 
N. Jovanovic, 
E. Kirda, C. Kruegel, and G. Vigna. Cross­
References 
[I] Auctionremin
[2] Facebook gadget. h t t p: //www .g o o gl e.com/i g / di re c t o r y ? h l   
der. h t t p: // www. au c ti o nremin de r. ne t / .  
e n & t yp egadgets &u r l www. br ia n n g o. ne t /i g /f a c e b o o k. xm l .  
[ 3 ]  Free personal finance software, 
budget software, online money management 
and budget planner, 
[4] Google analytics. 
mint.com. http:/ /www. mi n t.c o m / .  
http: // www .g o o g l e.c o m / a n a l yt i c s /  . 
prevention 
site scripting 
ceeding of the Network and Distributed 
2007. 
with dynamic data 
tainting 
In Pro­
and static analysis. 
System Security 
Symposium (NDSS'07), 
[39] H. J. Wang, X. Fan, J. Howell, and C. Jackson. Protection 
and communication 
abstractions 
Symposium on Operating Systems Principles 
for web browsers in mashupos. In Proceedings of the 21st ACM 
(SOSP  2007), 
pages 1 - 1 6, 2007. 
[40] A. Yip, N. Narula, M. Krohn, and R. Morris. Privacy-preserving 
browser-side 
scripting 
with bllow. In EuroSys'09, 2009. 
978-1-4244-7501-8/10/$26.00 
©l01O IEEE 
260 
DSN 2010: Li et al. 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 18,2021 at 14:05:29 UTC from IEEE Xplore.  Restrictions apply.