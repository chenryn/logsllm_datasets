title:Design and Implementation: the Native Web Browser and Server for Content-Centric
Networking
author:Guoshun Nan and
Xiuquan Qiao and
Yukai Tu and
Wei Tan and
Lei Guo and
Junliang Chen
Design and Implementation: the Native Web Browser and
Server for Content-Centric Networking
Guoshun Nan, Xiuquan Qiao, Yukai Tu, Wei Tan§, Lei Guo, Junliang Chen
State Key Laboratory of Networking and Switching Technology,
Beijing University of Posts and Telecommunications, 100876, Beijing, China
IBM T. J. Watson Research Center, Yorktown Heights, NY 10598, USA §
PI:EMAIL, PI:EMAIL, PI:EMAIL,
PI:EMAIL, PI:EMAIL, PI:EMAIL
ABSTRACT
Content-Centric Networking (CCN) has recently emerged as
a clean-slate Future Internet architecture which has a com-
pletely diﬀerent communication pattern compared with ex-
iting IP network. Since the World Wide Web has become
one of the most popular and important applications on the
Internet, how to eﬀectively support the dominant browser
and server based web applications is a key to the success
of CCN. However, the existing web browsers and servers
are mainly designed for the HTTP protocol over TCP/IP
networks and cannot directly support CCN-based web ap-
plications. Existing research mainly focuses on plug-in or
proxy/gateway approaches at client and server sides, and
these schemes seriously impact the service performance due
to multiple protocol conversions. To address above prob-
lems, we designed and implemented a CCN web browser
and a CCN web server to natively support CCN protocol.
To facilitate the smooth evolution from IP networks to CC-
N, CCNBrowser and CCNxTomcat also support the HTTP
protocol besides the CCN. Experimental results show that
CCNBrowser and CCNxTomcat outperform existing imple-
mentations. Finally, a real CCN-based web application is
deployed on a CCN experimental testbed, which validates
the applicability of CCNBrowser and CCNxTomcat.
CCS Concepts
•Information systems → Web applications; •Networks
→ Network experimentation;
Keywords
Content-Centric Networking, Web browser, Web server
1.
INTRODUCTION
In recent years, the World Wide Web (WWW) has become
one of the most fundamental Internet applications. Web
browsers and servers play a key role in satisfying the needs
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full citation
on the ﬁrst page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
SIGCOMM ’15 August 17-21, 2015, London, United Kingdom
c(cid:13) 2015 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-3542-3/15/08.
DOI: http://dx.doi.org/10.1145/2785956.2790024
of a large and growing community of web users. Content-
Centric Networking (CCN) [1] has emerged as a clean-slate
network architecture to address the problems faced by cur-
rent IP networks.
Existing web browsers and servers are designed for the
hypertext transfer protocol (HTTP) and IP-based Internet.
Consequently, the deployment of the existing web applica-
tions on CCN is still an open issue due to the lack of inter-
connections tools. Current research focuses on the gateway
for HTTP and CCN protocol conversion [5] or plug-in man-
ner [4] to validate CCN under real HTTP traﬃc. However, a
gateway is not an eﬃcient approach given the additional cost
of the protocol conversion. The lack of native support for
web applications has greatly hampered the wide adoption of
CCN.
To address above issues, we designed and implemented a
full-ﬂedged CCN web browser (called CCNBrowser) [2] and
a server (called CCNxTomcat) [3]. CCNBrowser was devel-
oped based on the open source Webkit, and CCNxTomcat
was based on Apache Tomcat. We leverage CCNx develope-
d by PARC laboratory as the CCN prototype. Native CC-
N functions are integrated into implementations to support
interactions among users, servers and routers in CCN. In
addition, to facilitate smooth network evolution, our imple-
mentations support the content request using both ’ccnx://’
and ’http://’ URI schemes for HTML, CSS and JavaScript.
2.
IMPLEMENTATION
To give a clear description, architectures of CCNBrowser
and CCNxTomcat are depicted in Fig. 1 and Fig. 2, re-
spectively, where the components highlight in blue are CCN
related.
Figure 1: CCNBrowser architecture
Browser UICCN or TCP/IP NetworkWebKit Embedding APIWebCoreJavaScriptEnginePlatform Interaction APIStorageGraphicsAudio/VideoOther Components609Figure 2: CCNxTomcat architecture
(a)
(b)
(c)
Figure 3: Test results: (a) CCNBrowser vs. NDN.JS and HTTP/CCN Proxy in terms of the single ﬁle test.
(b) CCNxTomcat vs. HTTP/CCN Proxy in terms of the single ﬁle test. (c) CCNxTomcat vs. HTTP/CCN
Proxy in terms of the throughput.
3. EXPERIMENT
We conduct experiments on a real testbed to compare the
performance of CCNBrowser and CCNxTomcat with exist-
ing NDN.JS and HTTP/CCN proxy. The results in Fig.
3 indicate that CCNBrowser exceeds existing NDN.JS and
HTTP/CCN gateway implementations by a factor of nine-
teen and ﬁve, in terms of the throughput, and CCNxTomcat
outperforms existing HTTP/CCN implementations by 58%
in a single request, and by a factor of three under 1000 con-
current requests. We also setup a real CCN-based personal-
ized web site as shown in Fig. 4 for the practical utilization
of CCNBrowser and CCNxTomcat.
Figure 4: A real CCN-based personalized web site
4. ACKNOWLEDGMENTS
This work was supported by the National Key Basic Re-
search Program of China (973 Program) under Grant No.
2012CB315802, the National Natural Science Foundation of
China under Grants No. 61171102 and No. 61132001, the
Prospective Research on Future Networks of Jiangsu Future
Networks Innovation Institute under Grant No. BY2013095-
4-01.
5. REFERENCES
[1] V. Jacobson, D. K. Smetters, J. D. Thornton, M. Plass,
N. Briggs, and R. L. Braynard. Networking named
content. CoNEXT 09. ACM, 2009.
[2] X. Qiao, G. Nan, Y. Peng, L. Guo, J. Chen, Y. Sun,
and J. Chen. Ndnbrowser: An extended web browser
for named data networking. Journal of Network and
Computer Applications, 50:134–147, 2015.
[3] X. Qiao, G. Nan, W. Tan, L. Guo, J. Chen, W. Quan,
and Y. Tu. Ccnxtomcat: An extended web server for
content-centric networking. Computer Networks,
75:276–296, 2014.
[4] W. Shang, J. Thompson, M. Cherkaoui, J. Burkey, and
L. Zhang. Ndn. js: a javascript client library for named
data networking. In Computer Communications
Workshops (INFOCOM WKSHPS), 2013 IEEE
Conference on. IEEE, 2013.
[5] S. Wang, J. Bi, J. Wu, X. Yang, and L. Fan. On
adapting http protocol to content centric networking.
In Proceedings of the 7th International Conference on
Future Internet Technologies. ACM, 2012.
ConnectorCCNxTomcatConnectorCCNConnectorContentProcessorCCND HTTPConnectorCCNParserMgrCCNPushModeMgrTomcat Servlet ContainerHTTPProcessorCCN RepositoryCCNProcessorContent StorePending Interest TableForwarding Interesting TableCCNParserCCNTypeCCNUriMgrCCNFetchCCNUpdateCCNThreadMgrCCNInBufCCNHandlerCCNOutBufCCNContentMgrEngineEngineHostHostWrapperWrapperDefaultServletServletCCNQueueStatic FileStatic FileDataBaseCCNBooterCCNConHandlerHTTPConnectionHandlerCCNServAdaptorHTTPServiceAdaptorCCNCache050100150200020406080100120140160180200220240260280 Throughput(Mbps)File Size(MB) CCNBrowser HttpProxy NDN.JS010020030040050060070080090010002468101214161820  Throughput(Mbps)File Size(MB) CCNxTomcat HTTP/CCN Proxy01002003004005006007008009001000010203040506070  Throughput(Mbps)The Number of Concurrent Threads Invocations CCNxTomcat HTTP/CCN ProxyTop newsAudio-enabledHTTP-based web applicationsCCN-based web applicationsCCNx URI scheme-enabled Web App StoreWikipedia  searchHits amount of video hotspotsVideo-enabledHot  videos610