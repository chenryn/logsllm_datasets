title:When kids' toys breach mobile phone security
author:Abdul Serwadda and
Vir V. Phoha
When Kids’ Toys Breach Mobile Phone Security
Abdul Serwadda and Vir V. Phoha
Louisiana Tech University
Ruston, LA 71272,USA
{ase007,phoha}@latech.edu
ABSTRACT
Touch-based veriﬁcation—the use of touch gestures (e.g.,
swiping, zooming, etc.) to authenticate users of touch screen
devices— has recently been widely evaluated for its poten-
tial to serve as a second layer of defense to the PIN lock
mechanism. In all performance evaluations of touch-based
authentication systems however, researchers have assumed
na¨ıve (zero-eﬀort) forgeries in which the attacker makes no
eﬀort to mimic a given gesture pattern.
In this paper we demonstrate that a simple “Lego” robot
driven by input gleaned from general population swiping s-
tatistics can generate forgeries that achieve alarmingly high
penetration rates against touch-based authentication sys-
tems. Using the best classiﬁcation algorithms in touch-based
authentication, we rigorously explore the eﬀect of the attack,
ﬁnding that it increases the Equal Error Rates of the classi-
ﬁers by between 339% and 1004% depending on parameters
such as the failure-to-enroll threshold and the type of touch
stroke generated by the robot. The paper calls into question
the zero-eﬀort impostor testing approach used to benchmark
the performance of touch-based authentication systems.
Categories and Subject Descriptors
K.6.5 [Management of Computing and Information
Systems]: Security and Protection—authentication
General Terms
Security
Keywords
Biometrics, Touch Gestures, Authentication, Attack, Robot
1.
INTRODUCTION
Recently, there has been considerable research on the ap-
plication of touch gestures for continuous authentication on
mobile phones (e.g., see [17][16][27]). The underlying philos-
ophy behind this type of authentication is that if a mobile
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
CCS’13, November 4–8, 2013, Berlin, Germany.
Copyright 2013 ACM 978-1-4503-2477-9/13/11 ...$15.00.
http://dx.doi.org/10.1145/2508859.2516659.
device could learn the owner’s touch pattern during routine
operations (such as swiping, zooming and clicking/tapping),
an adversary who gets access to the phone can be thwart-
ed based on the mismatch between touch patterns. While
several studies (e.g., see [17][27][16]) have shown evidence
that indicates that this type of authentication holds a lot
of promise, the performance evaluation methodology used
in all these studies revolves around a zero-eﬀort [9] threat
model in which the adversary is assumed to be unable to
pull oﬀ a sophisticated forgery.
The zero-eﬀort threat model, although well understood
not to be representative of the state-of-the-art threats [9],
is for several reasons fronted by researchers as being able to
suﬃciently capture the threat that a touch-based authenti-
cation system would face in practice. For instance, in one of
the recent papers on touch biometrics, Frank et al. [17] make
the following arguments to rule out the need for stringent
penetration testing of their system:
.... we can hardly imagine someone learning the
touch behavior of 30 features, such as pressure,
distribution of acceleration, etc., just by looking
over the shoulder [17].
...A more successful but more involved attack would
be to place a malware application on the user’s
device. This malware could learn and report the
touch pattern if the details of how to compute the
features are known to the attacker... However,
we argue that a user with malware on the device
has already lost the race against the attacker [17].
These arguments—echoed in many other papers—are sound
without doubt. Notably though, the notion that these two
attacks (malware and a form of shoulder surﬁng) represent
the full spectrum of threats that the system could face is for
several reasons debatable. In particular, by assuming these
two as the only threats, researchers in this area appear to
disregard the following two attributes of a touch biometric-
s system: 1) Users’ behavioral biometrics patterns exhibit
a great deal of intra-user variability and overlap across a
large population, implying that for certain types of users (see
[30][23] for examples of biometric user categories), statistics
extracted from a large population database could be used to
create forgeries that signiﬁcantly increase error rates (e.g.,
see [8][26]). Given access to population statistics, an adver-
sary could learn a great deal of information about a given
user’s pattern without having to physically observe the vic-
tim’s pattern or depend on a malware application to learn
the pattern, 2) The three gestures on which touch-based
599continuous authentication systems are built (i.e., clicking or
tapping, swiping to move screen content vertically, and swip-
ing to move screen content horizontally — see [17][16]) can
very easily be implemented using elementary robotic devices
available in many homes and grocery stores (see [5]). Given
a touch gesture pattern that is to be executed on the phone,
a simple robotic/mechanical device (as opposed to malware)
would be a cheaper and much less sophisticated option for
an adversary who seeks to retrieve a valuable resource from
a stolen smart phone.
The two attributes cited above motivate the attack de-
signed in this paper. We implement a robotic attack that
achieves alarmingly high success rates against continuous
touch-based authentication systems. Driven by input gleaned
from general population (swiping) statistics, the attack uses
a standard Lego Mindstorms NXT robotic kit [3] to con-
trol a “ﬁnger” that is designed to replicate the human ﬁnger
properties sensed by the state-of-the-art touch based authen-
tication systems. Using a large touch biometrics dataset, we
demonstrate the lethality of the attack against the best ver-
iﬁcation algorithms in touch-based authentication.
The following attributes convince us that the attack could
easily get embraced by adversaries if continuous touch-based
authentication got widely deployed:
No specialized expertise (or experience) required:
The algorithmic and mechanical design of the attack revolves
around some of the most basic Lego robotic skills taught in
middle school in the USA (e.g., see [20]) and many oth-
er parts of the world. While the attack could be designed
based on exquisite programming of both the robot’s sensors
and the motors, the paper seeks to emphasize the simplicity
of the attack—we implement a design that only requires the
motors to be programmed.
Analog domain and sample-level attributes: The at-
tack is launched in the analog domain, and thus cannot be
easily stopped by conventional software solutions like would
be the case for a malware attack. Additionally, the attack is
sample-level meaning that the attacker needn’t know about
the internal implementation details of the veriﬁcation al-
gorithms or features used by the system. As long as the
robot performs the swiping operation, the underlying clas-
siﬁcation system will extract the required features from the
touch strokes.
No extra-ordinary access privileges required: The at-
tack does not require template access; it is driven by general
information on how the “common user” is likely to swipe on
the phone. This kind of information can easily be retrieved
from publicly accessible data sets (e.g., see [4]), and to some
extent from research ﬁndings such as ours (e.g., see Section
4.2).
The main contribution of this paper is the demonstration
that robotic devices pose a major threat to touch-based au-
thentication. Because this threat has never been consid-
ered by researchers in this ﬁeld, the paper has the potential
to spark oﬀ a complete repackaging of touch-based authen-
tication systems. The design of these systems (e.g., fea-
tures, template-building approach, etc.), and the methodol-
ogy used to test their resistance to impostors are examples of
aspects of touch-based authentication that could see change
as a result of our ﬁndings.
The rest of this paper is organized as follows: We discuss
related work in Section 2, our data collection and prepro-
cessing in Section 3 and the attack design in Section 4. We
present the attack results in Section 5 and our conclusions
in Section 6.
2. RELATED WORK
To put this paper into context with previous work, we ex-
amine two streams of past research: works which explored
algorithmic (or non zero-eﬀort) attacks against behavioral
biometric systems, and works which studied the use of touch
gestures for authentication. The latter category of research
has two branches, namely, continuous authentication and
“entry point” authentication. In continuous authentication
(e.g., see [17][16][27]), users’ touch gestures are monitored
throughout a phone usage session. In “entry point” authen-
tication on the other hand, users are authenticated based on
how they execute a certain (possibly secret) gesture (e.g., see
[24][25] [13]) at the entry point to an application or to the
phone itself (i.e., login). Our attack is targeted against con-
tinuous authentication, so we delve deeper into past research
which explored this type of authentication.
Using a dataset of 41 users, Frank et al.
[17] obtained
Equal Error Rates (EERs) of between 0 and 4% when a
k-Nearest Neighbors (k-NN) classiﬁer and a Support-Vector
Machine (SVM) were used to continuously authenticate user-
s based on their touch gestures. The study was based on
30 features extracted while users swiped/scrolled (to move
screen content vertically or horizontally) as they read tex-
t and browsed images.
In [27], a digital sensor glove was
shown to enhance the performance of a touch gesture-based
continuous authentication system. Using a Decision Tree,
Random Forest and Bayes Net classiﬁer, the authors showed
that the glove reduced the error rates seen during authen-
tication. For instance, for the Bayes Net classiﬁer, a False
Accept Rate (FAR) of 11.96% and a False Reject Rate (FR-
R) of 8.53% respectively reduced to 2.14% and 1.63% when
the glove was used. Similar improvements were noted for
the other two classiﬁers.
More recently, Li et al. [16] evaluated the performance of a
live implementation of a touch-based authentication system
on a mobile phone. Leveraging a “hack into the lower layer
of an Android system [16]”, the system monitored touch ges-
tures across all applications installed on the phone. Based
on a group of 75 users who were allowed to freely interac-
t with the phones for days, the SVM-based authentication
system was shown to attain classiﬁcation accuracies as high
as 95%.
All three papers cited above employ a zero-eﬀort testing
approach in which the system’s resistance to attack is gauged
based on simplistic attacks in which samples from a subset
of the population are used to attack samples drawn from a
given user. It is on this front that this paper advances the
state-of-the-art, calling for more rigorous biometric testing
methodologies that are at par with the sophisticated adver-
sarial technologies being seen today. The works by Ballard
et al. [9], Tey et al. [21] and Serwadda et al. [26] resonate
with our research, demonstrating new breeds of impostor at-
tacks against two biometric modalities that are very closely
related to touch based authentication.
Ballard et al. showcase two attacks against handwriting
biometrics: one launched by trained forgers, the other based
on a generative algorithm. Tey et al. and Serwadda et al. on
the other hand demonstrate two attacks against password-
based keystroke authentication, with the former being based
600on trained forgers, and the latter being based on a generative
algorithm which uses general population statistics as input.
In all three papers, the attacks are shown to signiﬁcantly
degrade system performance relative to the standard zero-
eﬀort attacks.
Although this emerging breed of impostor attacks shares
the same motivation as our work, our attack has several op-
erational and technical attributes that put it apart from the
other attacks. Notably, the very low level of expertise re-
quired to implement the attack, the low cost of equipment
required and the fact that it is a hardware-based attack ma-
jorly distinguish it from the above cited attacks (attributes
described in Section 1 portray these diﬀerences in more de-
tail).
3. DATA AND FEATURES USED FOR OUR
INVESTIGATIONS
3.1 Data Collection Process
We conducted two data collection experiments using t-
wo Android applications that captured the way in which
users touched the mobile phone screen. The gestures that
users typically perform on a touch screen include zooming
(in and out), clicking (tapping), swiping to switch between
screens (i.e., horizontal swiping) and swiping to move a page
up and down (i.e, vertical swiping). The tap gesture does
not hold enough information to strongly separate between
a large group of users [17], while the zoom gesture does
not occur frequently enough to guarantee that a continu-
ous authentication application will always have enough data
to make classiﬁcation decisions [17]. For these reasons, a
number of works on continuous touch-based authentication
hinge around the two swipe gestures (e.g., see [17])1. We
will focus on these two gestures in this paper.
For each of a set of points on a touch stroke registered on
the screen during swiping, the applications recorded the: 1)
x and y coordinates, 2) time at which the ﬁnger touched the
point in question, 3) area occluded between the ﬁnger and
the screen, 4) the pressure exerted on the screen and 5) the
orientation of the phone (i.e., landscape or portrait). The
two Android applications basically simulated how users read
text and view images on the touch screen. Based on a short
paragraph of text or an image, users had to answer several
questions by selecting one of two to four alternative answers
that we provided per question. On reading a question, each
user would scroll/swipe back to the image or block of text
containing clues to the solution, before scrolling/swiping to-
wards the answers section where the user would select one
of the choices provided.
Both applications were based on the same idea, although