| plan_nsignals    | bigint           | Number of signals received planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)                          |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_nvcsws      | bigint           | Number of voluntary context switches planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)                |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_nivcsws     | bigint           | Number of involuntary context switches planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)              |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_user_time   | double precision | User CPU time used executing the statement, in seconds and milliseconds                                                                  |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_system_time | double precision | System CPU time used executing the statement, in seconds and milliseconds                                                                |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_minflts     | bigint           | Number of page reclaims (soft page faults) executing the statements                                                                      |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_majflts     | bigint           | Number of page faults (hard page faults) executing the statements                                                                        |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_nswaps      | bigint           | Number of swaps executing the statements                                                                                                 |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_reads       | bigint           | Number of bytes read by the filesystem layer executing the statements                                                                    |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_reads_blks  | bigint           | Number of 8K blocks read by the filesystem layer executing the statements                                                                |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_writes      | bigint           | Number of bytes written by the filesystem layer executing the statements                                                                 |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_writes_blks | bigint           | Number of 8K blocks written by the filesystem layer executing the statements                                                             |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_msgsnds     | bigint           | Number of IPC messages sent executing the statements                                                                                     |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_msgrcvs     | bigint           | Number of IPC messages received executing the statements                                                                                 |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_nsignals    | bigint           | Number of signals received executing the statements                                                                                      |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_nvcsws      | bigint           | Number of voluntary context switches executing the statements                                                                            |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_nivcsws     | bigint           | Number of involuntary context switches executing the statements                                                                          |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
pg_stat_kcache_reset function  
-----------------------------  
Resets the statistics gathered by pg_stat_kcache. Can be called by superusers::  
 pg_stat_kcache_reset()  
pg_stat_kcache function  
-----------------------  
This function is a set-returning functions that dumps the containt of the counters  
of the shared memory structure. This function is used by the pg_stat_kcache view.  
The function can be called by any user::  
 SELECT * FROM pg_stat_kcache();  
It provides the following columns:  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
|       Name       |       Type       |                                                               Description                                                                |  
+==================+==================+==========================================================================================================================================+  
| queryid          | bigint           | pg_stat_statements' query identifier                                                                                                     |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| top              | bool             | True if the statement is top-level                                                                                                       |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| userid           | oid              | Database OID                                                                                                                             |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| dbid             | oid              | Database OID                                                                                                                             |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_user_time   | double precision | User CPU time used planning the statement, in seconds and milliseconds (if pg_stat_kcache.track_planning is enabled, otherwise zero)     |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_system_time | double precision | System CPU time used planning the statement, in seconds and milliseconds (if pg_stat_kcache.track_planning is enabled, otherwise zero)   |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_minflts     | bigint           | Number of page reclaims (soft page faults) planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)          |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_majflts     | bigint           | Number of page faults (hard page faults) planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)            |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_nswaps      | bigint           | Number of swaps planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)                                     |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_reads       | bigint           | Number of bytes read by the filesystem layer planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)        |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_reads_blks  | bigint           | Number of 8K blocks read by the filesystem layer planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)    |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_writes      | bigint           | Number of bytes written by the filesystem layer planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)     |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_writes_blks | bigint           | Number of 8K blocks written by the filesystem layer planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero) |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_msgsnds     | bigint           | Number of IPC messages sent planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)                         |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_msgrcvs     | bigint           | Number of IPC messages received planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)                     |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_nsignals    | bigint           | Number of signals received planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)                          |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_nvcsws      | bigint           | Number of voluntary context switches planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)                |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| plan_nivcsws     | bigint           | Number of involuntary context switches planning the statement (if pg_stat_kcache.track_planning is enabled, otherwise zero)              |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_user_time   | double precision | User CPU time used executing the statement, in seconds and milliseconds                                                                  |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_system_time | double precision | System CPU time used executing the statement, in seconds and milliseconds                                                                |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_minflts     | bigint           | Number of page reclaims (soft page faults) executing the statements                                                                      |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_majflts     | bigint           | Number of page faults (hard page faults) executing the statements                                                                        |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_nswaps      | bigint           | Number of swaps executing the statements                                                                                                 |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_reads       | bigint           | Number of bytes read by the filesystem layer executing the statements                                                                    |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_reads_blks  | bigint           | Number of 8K blocks read by the filesystem layer executing the statements                                                                |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_writes      | bigint           | Number of bytes written by the filesystem layer executing the statements                                                                 |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_writes_blks | bigint           | Number of 8K blocks written by the filesystem layer executing the statements                                                             |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_msgsnds     | bigint           | Number of IPC messages sent executing the statements                                                                                     |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_msgrcvs     | bigint           | Number of IPC messages received executing the statements                                                                                 |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_nsignals    | bigint           | Number of signals received executing the statements                                                                                      |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_nvcsws      | bigint           | Number of voluntary context switches executing the statements                                                                            |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
| exec_nivcsws     | bigint           | Number of involuntary context switches executing the statements                                                                          |  
+------------------+------------------+------------------------------------------------------------------------------------------------------------------------------------------+  
Bugs and limitations  
====================  
No known bugs.  
Tracking planner resources usage requires PostgreSQL 13 or above.  
We assume that a kernel block is 512 bytes. This is true for Linux, but may not  
be the case for another Unix implementation.  
See: http://lkml.indiana.edu/hypermail/linux/kernel/0703.2/0937.html  
On platforms without a native getrusage(2), all fields except `user_time` and  
`system_time` will be NULL.  
On platforms with a native getrusage(2), some of the fields may not be  
maintained.  This is a platform dependent behavior, please refer to your  
platform getrusage(2) manual page for more details.  
If *pg_stat_kcache.track* is all, pg_stat_kcache tracks nested statements.  
The max number of nesting level that will be tracked is is limited to 64, in  
order to keep implementation simple, but this should be enough for reasonable  
use cases.  
Even if *pg_stat_kcache.track* is all, pg_stat_kcache view considers only  
statistics of top-level statements. So, there is the case which even though  
user cpu time used planning a nested statement is high, `plan_user_time` of  
pg_stat_kcache view is small. In such a case, user cpu time used planning a  
nested statement is counted in `exec_user_time`.  
Authors  
=======  
pg_stat_kcache is an original development from Thomas Reiss, with large  
portions of code inspired from pg_stat_plans. Julien Rouhaud also contributed  
some parts of the extension.  
Thanks goes to Peter Geoghegan for providing much inspiration with  
pg_stat_plans so we could write this extension quite straightforward.  
License  
=======  
pg_stat_kcache is free software distributed under the PostgreSQL license.  
Copyright (c) 2014-2017, Dalibo  
Copyright (c) 2018-2020, The PoWA-team  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")