than Alice. If Eve detects a higher voltage at the ﬁrst half
bit and lower voltage at the second half bit, she would know
that Alice sends 0 and Bob sends 1. If Eve detects a lower
voltage at the ﬁrst half bit and higher voltage at the second
half bit, she would know that Alice sends 1 and Bob sends
0.
3.4 Key Compromise Under Phase Mismatch
As illustrated in Fig. 6, we assume Bob has postponed
phase. If Eve detects a positive phase change in the middle
of a bit, she would know that Alice sends 0 and Bob sends
1. If Eve detects a negative phase change, she would know
that Alice sends 0 and Bob sends 1.
As a conclusion, the basic scheme is not secure in practice
due to inevitable synchronization oﬀset and mismatch of sig-
nal amplitude and phase. A more practical key agreement
scheme is needed.
Figure 5: Superposed RF signal’s envelop under non
perfect amplitude match
Figure 6: Superposed RF signal under non perfect
phase match
4. RIWA
In this section, we propose RIWA to prevent an eaves-
dropper from breaking the key when there are inevitable
non-perfect synchronization and mismatch of signal ampli-
tude and phase. The basic idea of RIWA is to add ran-
domness into Alice’s and Bob’s RF signal (xa(t) and xb(t))
to make the signals received by Eve indistinguishable under
case 1 and case 2. The randomness we introduce include 1)
time shifting, 2) amplitude scaling, and 3) phase shifting,
which are used to tackle out of synchronization, amplitude
mismatch, and phase mismatch, respectively.
In the following subsections, we will describe these three
types of waveform shaking methods and show their eﬀective-
ness.
In order to diﬀerentiate the shaken waveform from the
original ones, we use Xa(t) and Xb(t) to denote shaken RF
waveform. We also use Ye(t) to replace ye(t) in Eq. (5).
We further use Y c1
e (t) to denote the superposed
signal received by Eve under case 1 and case 2. Denote the
set of all the possible Y c1
e (t) as Sc1 and Y c2
e (t) as Sc2. If we
can make Sc1 and Sc2 have a common set,
e (t) and Y c2
Sc1 ∩ Sc2 (cid:54)= φ
(10)
10AliceBobsum01Case 1Case 21AliceBobsumCase 1Case 210Positive phase changeNegative phase change0220Figure 7: RF waveform shaking
Eve will not be able to distinguish case 1 and case 2 based on
the received signal z(t) if the following condition is satisﬁed
Figure 8: Superposed RF waveform (previous bits
are both 1 for Alice and Bob)
∃ Y c1
e (t) = Y c2
e (t) = z(t), z(t) ∈ Sc1 ∩ Sc2
(11)
That is, z(t) could be an instance of Y c1
e (t) or an instance
e (t). Therefore, as long as we can ensure (10), the
of Y c2
eﬀectiveness and security of RIWA can be ensured.
4.1 Random Time Shifting against Out of Syn-
chronization
The random time shifting method against out of synchro-
nization is shown in Fig. 7. For each bit, the waveform is
shifted by γ in time, where γ is a random value that uni-
formly distributed in [−γ0, γ0]. The framework of the wave-
form is ﬁxed. For forward shifting, the waveform of previous
bit will be shorten by cutting oﬀ its last part. For backward
shifting, the waveform of previous bit will be extended by
prolonging its last part.
Now, we are going to prove that this shifting scheme pro-
vides security under the existence of out of synchronization.
That is, (10) can be satisﬁed. We ﬁrst prove a simple lemma
lemma 1 : There are two cases: 1) Bob is υ ahead of Alice.
The current bit that Alice sends is 1; the previous bit is 1;
the following bit is 0. the current bit that Bob sends is 0;
the previous bit is 1; the following bit is 0. 2) The same as
1) except that Alice is υ ahead of Bob; the current bit that
Alice sends is 0; the current bit that Bob sends is 1. During
the period Alice and Bob transmitting the current bits, the
two cases are identical to Eve.
Proof. Suppose the RF waveform of one bit without
shifting has the length of T . The RF waveforms of cur-
rent bits of Alice and Bob under case 1 has the total length
of T + υ, and can be written as
X c1
a (t) =
0
xa(t)
if 0  ε/2, we
a − γ2
can easily ﬁnd instances satisfying 2ε = γ1
a .
So that
b − γ1
b + γ2
b (t), and X c1
b (t) =
b (t), which leads
υ = ε + γ1
a − γ1
b = −ε + γ2
a − γ2
b
(16)
We denote Is as the set of instances. Using lemma 1 and
(7), we can prove Is ⊂ Sc1 ∩ Sc2 (cid:54)= φ. So that (10) is
proved.
Lemma 1 actually proves that for Ca = [1X0], Cb =
[1X(cid:48)0], where X = 0, 1, X(cid:48) = 1 − X are opposite bits. X
can be used as a shared secret bit between Alice and Bob.
Similarly, we can further prove the other 3 situations that
can hide X from Eve.
lemma 2: Ca = [0X0], Cb = [0X(cid:48)0]
lemma 3: Ca = [1X1], Cb = [1X(cid:48)1]
lemma 4: Ca = [0X1], Cb = [0X(cid:48)1]
We conclude lemmas 1-4 to get lemma 5. Lemma 5: if the
current bits of Alice and Bob are opposite, they are invisible
to Eve under the condition that the previous bits of Alice
and Bob are the same, as well as the following bits of Alice
and Bob are the same.
Fig. 8 and Fig. 9 show the envelop of the superposed RF
waveforms under case 1 and case 2, where the previous bits
of Alice and Bob are the same. It can be seen that the super-
posed RF waveforms under two diﬀerent cases are perfectly
matched.
4.1.1 Adding Guard Bits
We must be cautious to design RIWA dealing with out of
synchronization, because it is unable to prove the safety of
current bits if previous bits of Alice and Bob are diﬀerent.
Fig. 10 shows such situation. It can be seen from the ﬁgure
that, indeed there might be a small diﬀerence at Ye(t) be-
tween case 1 and case 2 due to the Gibbs phenomenon. A
very powerful attacker may use it to crack some of the bits.
To avoid it, we add guard bits. The bits that Alice and
Bob send are
Ca = [0, Ca(1), 0, Ca(2), 0··· 0, Ca(N )]
Cb = [0, Cb(1), 0, Cb(2), 0··· 0, Cb(N )]
(17)
(12)
(13)
(14)
(15)
(cid:40)
(cid:40)
(cid:40)
(cid:40)
221Figure 11: RF waveform phase shaking
Figure 9: Superposed RF waveform (previous bits
are both 0 for Alice and Bob)
We need to get
X c1
X c1
X c2
X c2
a (t) = β1
b (t) = β1
a (t) = β2
b (t) = β2
axc1
b xc1
axc2
b xc2
a (t)
b (t)
a (t)
b (t)
(19)
(20)
a (t) = X c2
b (t) = xc2
to make two cases equal, i.e., X c1
X c2
X c1
X c1
b (t) = X c2
b (t). With the help of (8), (20) can be simpliﬁed as
a (t)
a (t) + X c1
b (t)
a (t) +
Figure 10: Superposed RF waveform (previous bits
of Alice 1 and Bob 0)
where only Ca(k) and Cb(k) are random bits. In this way,
the previous and following bits of Ca(k) and Cb(k) can be
guaranteed identical. The key generation rate however re-
duces by 1/2. Considering 50% probability that a bit is
eﬀective, the key generation rate is about 1/4 of bit rate.
For 106 kBaud rate, the key generation rate of RIWA is
about 26kbps, which is fast enough in practice.
4.1.2 Discarding Bits that Eve may Discover
Another situation should be noticed is when the actual
out of synchronization is larger than a threshold:
υ > 2γ0 − ε
(18)
a − γ2
Substituting (16) into (18), it can be seen that case 2 cannot
cause such a large out of synchronization (γ2
b > 2γ0).
Eve will know that Alice sends 1 and Bob sends 0 (case 1).
A powerful attacker can crack some bits from the above
situation. So in RIWA, we can choose to detect the actual
out of synchronization. If it is larger than a threshold esti-
mated by (18), we discard it in advance. Due to this discard,
the bits left may have more zeros than ones at Alice side.
Finally, randomness ampliﬁcation is optional.
4.2 Random Amplitude Scaling against Am-
plitude Mismatch
Similar to out of synchronization, for amplitude mismatch,
the amplitude of waveform is multiplied by a random coef-
ﬁcient β uniformly between [1 − β0, 1 + β0] at each bit.
The RF waveforms of Alice and Bob under case 1 and case
2 are
β1
aα = β2
b
β2
aα = β1
b
(21)
We can easily ﬁnd instances satisfying (21) as long as β0 >
(α − 1)/(α + 1). We denote Ia as the set of instances, Ia ⊂
Sc1 ∩ Sc2 (cid:54)= φ. Therefore (10) is proved.
We need to pay attention when actual amplitude mis-
match is larger than a threshold
(cid:48)
α
>
1 + β0
α(1 − β0)
(22)
case 2 cannot cause such a big amplitude mismatch. So in
RIWA, we can choose to detect the actual amplitude mis-
match. If it is larger than a threshold estimated by (22) ,
we discard it in advance.
4.3 Random Phase Shifting against Phase Mis-
match
We also add phase shaking ϕ uniformly distributed be-
tween [−ϕ0, ϕ0] to deal with phase mismatch. In this case,
we need to pay attention to the phase change between bits.
It could be a clue for Eve to separate borderline of consec-
utive bits. Recall that we already add guard bits between
consecutive random bits. It makes things easier to prevent
phase change between bits. The shaking method is shown in
Fig. 11. We use previous guard bit to make a smooth con-
nection when transmitting a 1. In this way, the borderline
of the envelop will not be exposed to Eve.
The RF waveforms of Alice and Bob under two cases are
Hilbert(X c1
Hilbert(X c1
Hilbert(X c2
Hilbert(X c2
a (t)) = ejϕ1
b (t)) = ejϕ1
a (t)) = ejϕ2
b (t)) = ejϕ2
a Hilbert(xc1
a (t))
b Hilbert(xc1
b (t))
a Hilbert(xc2
a (t))
b Hilbert(xc2
b (t))
We need to get
X c1
X c1
a (t) = X c2
b (t) = X c2
b (t)
a (t)
(23)
(24)
222Figure 12: Steps to generate shaken RF signal for
Alice
Figure 13: Steps to generate key on Alice and Bob
side
to make two cases equal X c1
b (t) = X c2
With the help of (9), (24) can be simpliﬁed as
a (t) + X c1
a (t) + X c2
b (t).
ϕ1
ϕ2
a = ϕ2
a = ϕ1
b − θ
b − θ
(25)
We can easily ﬁnd instances satisfying (25) as long as ϕ0 >
θ/2. We denote Ip as the set of instances, Ip ⊂ Sc1∩Sc2 (cid:54)= φ.
Therefore (10) is proved.
Finally, we show the whole steps to generate shaken RF
signal in Fig. 12.
4.4 Key Agreement Procedure of RIWA
The key agreement procedure is shown in Fig. 13. After
both sides agree for key generation, at Alice side, she sends a
request for simultaneous random bit stream sending. Then
she begins to send bit stream while listening. The bit stream
has two parts. The ﬁrst part is normal unshaken bit stream.
It is aiming for Alice to make a rough synchronization and
amplitude, and phase match. The second part is shaken bit
stream. At Bob side, when he receives the request of bit
sending, he begins to send bit stream. Same as Alice, ﬁrst-
part bits are normal bits, and the following bits are shaken
bits.
After ﬁnishing bits sending, Alice tells Bob the positions
of bits that can be used. Alice picks her bits as a key; Bob
picks his bits and reverse them as a key. Example: Suppose
Alice sends Ca[01000101], Bob sends Ca[00010100]. Alice
listens to the signal, so she knows the 2nd, 4th and 8th bits
can be used. She picks the corresponding bits [101] and tells
Bob the positions are [2, 4, 8]. Bob picks the corresponding