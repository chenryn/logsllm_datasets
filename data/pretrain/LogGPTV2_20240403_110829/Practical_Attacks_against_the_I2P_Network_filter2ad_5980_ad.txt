i
H
#
(
P
 0
 0
 2
 4
 6
p = 0
p = 0.007
p = 0.01
p = 0.02
p = 0.05
p = 0.1
p = 0.2
 14
 16
 18
 20
 8
 12
Number Of Hits Observed
 10
chance for a false positive is about 2.4%. For less frequently-accessed resources,
this value drops quickly (0.003% for two or more hits, 0.7% for a single hit for
q = 0.0001).
When we require three hits per day, Figure 4 shows that we would detect
Alice with more than 80% probability when she accesses the site with p = 0.05.
This translates to about 7 visits per day. In case Alice visits the site only one
time (p = 0.007), we would need to lower the threshold k to 1. In this worst
case, we would have 52% chance of detection (exactly the probability to get the
correct tunnel), and we would risk about 7% false positives.
Overall, when Alice visits a certain resources a few times per day, and this
resource is not very popular, our approach has a very high probability to cor-
rectly deanonymize Alice. As expected, when a resource is popular in the net-
work and Alice’s visits become more infrequent, our system becomes less accu-
rate and more prone to false positives.
5 Discussion
5.1 Limitations
For a successful deanonymization of a client’s lookups, the attacker needs to
have his floodfill nodes both next to the client’s peer info storage position
and the service information’s storage position in the netDB. Therefore, a Sybil
attack requires the attacker to limit himself to a small number of services and
peers. However, as there are just three malicious floodfill nodes required for
each monitored service, and the number of darknet services interesting to the
attacker is likely to be small, tracking speciﬁc user is not a problem. As many
clients map to the same region in the keyspace and, therefore, store their peer in-
formation to the same set of floodfill nodes, it is also possible to track all these
users without additional resources. However, as the mapping to the keyspace
is essentially random, the attacker cannot select an arbitrary group of clients,
but only clients close together in the keyspace.
5.2 Potential Attack Improvements
The experiments have all been run with relatively few nodes conﬁgured with
limited data rates. It should be easy to set a higher limit on data rates, which
will make the nodes better known throughout the network, and, therefore, im-
prove the results of the attacks. In order to deal with the increased number of
interactions, one needs to either improve performance of the attack code or as-
sign more processing power to the attack nodes.
Instead of blocking lookups, an Eclipse attack could also block the store
operation. An approach similar to the one used for the deanonymization attack
can be used to make the storing node believe that the storage was successful,
while it was actually blocked: More precisely, the attacking floodfill nodes
can identify the victim’s veriﬁcation step, and only signal successful lookup for
this veriﬁcation, while replying with a negative response to all regular lookups.
5.3 Experiments in the I2P Network
After running our nodes for three weeks in the I2P network, developers noticed
our group of 20 floodfill nodes that were connecting with consecutive IP
addresses and had cloned conﬁguration. These were changing their identity
together at midnight each day, and were suspiciously close to each other in the
keyspace. Using the notes already prepared for discussing our results with the
I2P development community, we used this opportunity to start the interaction
following a responsible disclosure strategy. This discussion resulted in some
improvements made to I2P, which we will discuss in Section 5.4 and 5.5 below.
5.4
Implemented Improvements
After sharing our results with the I2P developers, ﬁrst improvements were im-
plemented to make our attacks more difﬁcult. The limit of floodfill nodes
was raised from 300 to 500, requiring an attacker to run almost twice as many
malicious nodes to take control over the full network database and reducing
the fraction of the keyspace controlled by a single node. Additionally, the num-
ber of tunnels built with the same previous node in the chain was limited, so
that the attacker has to route tunnel build requests through an additional hop.
Therefore, the attacker has to add an additional encryption layer to the tunnel
initiation packets, requiring expensive public key cryptography. However, as
an attacker already needs 500 malicious nodes to replace legitimate floodfill
nodes, and our experiments showed that we were able to run the DoS attack
with only ﬁve malicious nodes, it is save to assume, that the attacker has the
necessary resources for this additional encryption.
Finally, only one floodfill node per /16 subnet is considered now for
database lookups, requiring an attacker to spread nodes over several networks
in order to successfully execute an Eclipse attack. However, several legitimate
floodfill nodes in the same /16 subnetwork are unlikely to also serve the
same part of the network database, so only malicious nodes are affected by this
change. As our attacks require at most ten floodfill nodes in the same region,
the attacker can work around this limitation by using several cloud services.
I2P developers also started to discuss replacing the Kademlia implementa-
tion of the network database with R5N [11] used by gnunet, which is designed
to deal with malicious peers. This will allow I2P to proﬁt from current research
in this area.
5.5 Suggested Improvements
While the desire to have slow nodes not participate in the floodfill database
is understandable, this is giving an attacker the possibility to permanently re-
move legitimate nodes from the database using a DoS attack. If nodes that once
had floodfill status will return independent of the current number of active
floodfill nodes, an attacker needs to constantly DoS the legitimate partici-
pants to keep them out of the database. Additionally, this should not increase
the number of floodfill nodes beyond a constant number, as once a certain
number of floodfill nodes is reached there will always be a large enough
fraction of them online to reach the limit of floodfill nodes, and no new vol-
unteers will join even under high load or attack.
Alternatively, the hard-coded number of active floodfill nodes could be
removed completely, and the count of floodfill nodes could be solely reg-
ulated by the suitability metric, which would also prevent an attacker from
permanently removing legitimate nodes. After discussing the issues with I2P
developers, they conﬁrmed that this is the direction I2P is taking.
To counter Sybil attacks, a client node could only start to trust a floodfill
node after seeing it participate for n days in the network. This would increase
the cost for multi-day attacks, as the attacker needs to have n + 1 attack groups
active at the same time. This adds a multi-day setup time during which his
intentions could be discovered, and potential victims could be warned using
the newsfeed of the I2P client software. Since we have observed 600 distinct
floodfill nodes over the period of ten days, it should be safe to assume that
enough floodfill candidates exist in the network, even after adding this ad-
ditional restriction. However keeping track of clients active in the past creates
problems on the client, if he is just bootstrapping and does not have any knowl-
edge of the past. This is also problematic for a client that has been ofﬂine for
several days. In addition, keeping track of known identities for a larger time-
frame requires storing and accessing the information effectively.
An alteration of this idea is currently being discussed by the I2P developers:
If the modiﬁcation used for keyspace rotation is not predictable, requiring iden-
tities to be known in the network for one day is enough. Since it will be hard
to build consensus on such an unpredictable modiﬁcation in a fully distributed
manner, one could observe daily external events that are hard to predict, such
as the least signiﬁcant digits of stock exchange indices at the end of each day.
The problem with this approach will be ﬁnding a way to automatically collect
this information in a censorship-resilient and reliable way.
Storage veriﬁcation does not work against a group of malicious nodes. The
randomization of the delay between storage and veriﬁcation introduced in I2P
as a reaction to our research will make correlation less certain but still allows
an attacker to reduce anonymity. One way around this would be to use direct
connections also for the verifying lookup. By doing this, problems on legitimate
nodes and attacks carried out by a single malicious floodfill node could still
be detected, while no information about exploratory tunnels would be leaked.
Also, if the redundant storing is done by the client, no veriﬁcation is needed.
6 Related Work
Distributed anonymity systems, as well as I2P speciﬁcally, have been discussed
in previous work. Tran et al. [3] described common failures of DHT-based
anonymity schemes and Mittal et al. [4] later provided a proof on the trade-
off between passive information-leak attacks and veriﬁability of the data. I2P
was built with this limitation in mind. In particular, I2P limits the number of
database nodes to a small fraction of the network and selects peers for tunnel
building from a local pool rather than random walks in the netDB, discussed in
detail and attacked by Herrmann et al. [5], to counter these problems. With only
few nodes participating in the DHT, it is a reasonable assumption that all nodes
in the I2P network know the right node for every DHT lookup already, and,
therefore, no attacks on lookup capture due to increased path lengths are pos-
sible. We have shown that I2P is still vulnerable to database-based attacks, and
focused on store events, as opposed to blocking certain lookups. Wolchok et
al. [12] used Sybil nodes with changing identities, which enabled them to crawl
DHTs faster. Similar identity changing was utilized by our work to counter the
daily keyspace rotation and may also be used to cover larger parts of the NetDB
for deanonymization.
Herrmann et al. [5] showed a way to identify peers hosting I2P services ex-
ploiting the peer-proﬁling algorithm to inﬂuence the set of nodes the victim
interacts with. In contrast, our identiﬁcation shows the actions that a speciﬁc
user (victim) performs in the network. Also, while they showed the individual
steps needed to deanonymize users, the complete attack was evaluated only
with victim nodes patched to only consider their attackers as tunnel partici-
pants.
7 Conclusions
In this paper, we presented attacks that can be combined to deanonymize I2P
users. This conﬁrms that critical attacks (such as Sybil and Eclipse attacks)
against DHTs used for anonymity systems are still valid, even when these sys-
tems are designed to resist these threats for practical purpose.
Acknowledgements
This work was supported in part by the ARO under grant W911NF-09-1-0553
and Secure Business Austria.
References
1. Dingledine, R., Mathewson, N., Syverson, P.: Tor: the second-generation onion
In: Proceedings of the 13th conference on USENIX Security Symposium -
router.
Volume 13. SSYM’04, Berkeley, CA, USA, USENIX Association (2004) 21–21
2. Dingledine, R., Mathewson, N., Murdoch, S., Syverson, P.:
Tor: the second-
generation onion router 2012 draft. (2012)
3. Tran, A., Hopper, N., Kim, Y.: Hashing it out in public: common failure modes
of DHT-based anonymity schemes. In: Proceedings of the 8th ACM workshop on
Privacy in the electronic society. WPES ’09, New York, NY, USA, ACM (2009) 71–80
4. Mittal, P., Borisov, N.: Information leaks in structured peer-to-peer anonymous com-
munication systems. ACM Trans. Inf. Syst. Secur. 15(1) (March 2012) 5:1–5:28
5. Herrmann, M., Grothoff, C.: Privacy-implications of performance-based peer se-
lection by onion-routers: a real-world case study using I2P. In: Proceedings of the
11th international conference on Privacy enhancing technologies. PETS’11, Berlin,
Heidelberg, Springer-Verlag (2011) 155–174
6. Douceur, J.: The sybil attack. In Druschel, P., Kaashoek, F., Rowstron, A., eds.: Peer-
to-Peer Systems. Volume 2429 of Lecture Notes in Computer Science. Springer Berlin
Heidelberg (2002) 251–260
7. Castro, M., Druschel, P., Ganesh, A., Rowstron, A., Wallach, D.S.: Secure routing for
structured peer-to-peer overlay networks. SIGOPS Oper. Syst. Rev. 36(SI) (December
2002) 299–314
8. Singh, A., wan Ngan, T., Druschel, P., Wallach, D.S.: Eclipse attacks on overlay net-
works: Threats and defenses. In: In IEEE INFOCOM. (2006)
9. Timpanaro, J.P., Chrisment, I., Festor, O.: Monitoring the I2P network
10. Maymounkov, P., Mazières, D.: Kademlia: A peer-to-peer information system based
on the xor metric.
In Druschel, P., Kaashoek, F., Rowstron, A., eds.: Peer-to-Peer
Systems. Volume 2429 of Lecture Notes in Computer Science. Springer Berlin Hei-
delberg (2002) 53–65
11. Evans, N., Grothoff, C.: R5n: Randomized recursive routing for restricted-route net-
works. In: Network and System Security (NSS), 2011 5th International Conference
on. (sept. 2011) 316 –321
12. Wolchok, S., Hofmann, O.S., Heninger, N., Felten, E.W., Halderman, J.A., Rossbach,
C.J., Waters, B., Witchel, E.: Defeating Vanish with low-cost Sybil attacks against
large DHTs. In: Proc. of NDSS. (2010)