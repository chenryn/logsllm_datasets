# Secure Complaint-Enabled Source-Tracking for Encrypted Messaging

## Authors
- Charlotte Peale, Stanford University
- Saba Eskandarian, UNC Chapel Hill
- Dan Boneh, Stanford University

## Abstract
End-to-end encryption (E2EE) in popular messaging platforms like WhatsApp, Messenger, and Signal ensures user privacy. However, it also complicates content moderation, leading to the unchecked spread of malicious content such as misinformation. In 2019, Tyagi et al. introduced message traceback, which allows a platform to recover the path of a forwarded message after a user reports it. This paper presents an alternative approach called source-tracking, which offers enhanced user privacy and reduced platform-side storage. Source-tracking enables messaging platforms to maintain the privacy guarantees of E2EE while holding the sources of malicious messages accountable. We formalize security goals for source-tracking schemes and design and implement two schemes with different security and performance trade-offs.

## CCS Concepts
- Security and privacy → Cryptography; Security services; Privacy-preserving protocols; Pseudonymity, anonymity, and untraceability

## Keywords
- Tracing, abuse reporting, message franking, end-to-end encrypted messaging, source-tracking

## ACM Reference Format
Charlotte Peale, Saba Eskandarian, and Dan Boneh. 2021. Secure Complaint-Enabled Source-Tracking for Encrypted Messaging. In Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security (CCS '21), November 15–19, 2021, Virtual Event, Republic of Korea. ACM, New York, NY, USA, 23 pages. https://doi.org/10.1145/3460120.3484539

## 1. Introduction
End-to-end encrypted messaging apps like WhatsApp and Signal provide strong privacy guarantees and handle billions of messages daily [29]. Concerns about abuse and misinformation have led to the development of technical solutions for verifiable reporting without compromising the privacy of non-reported messages [12, 14, 31, 32]. As countries like Brazil and India consider laws requiring messaging providers to identify the sources of misinformation [26–28, 30], the need for privacy-preserving tools becomes more critical. Without such tools, these requirements could undermine the privacy benefits of E2EE.

Most work on verifiably reporting abusive messages has focused on message franking [12, 14, 31], which identifies the immediate sender but not the origin of viral misinformation. While message franking is useful, it does not help find the original source of a message that has been forwarded multiple times. Combining message franking with extensive metadata collection can trace the source, but this approach requires significant storage and compromises user privacy.

The only known work addressing the source of reported messages is the traceback scheme by Tyagi et al. [32]. Traceback reveals all recipients of a reported message, which may leak too much information. It also requires storing a 32-byte token for each message, leading to terabytes of additional storage for high-volume platforms like WhatsApp.

This paper introduces source-tracking for E2EE messaging. Like traceback, source-tracking reveals the source of a reported message but does not disclose the identities of intermediate recipients. Our schemes do not require server-side storage for each message and the time to trace the source is independent of the forwarding chain length.

We formalize the notion of a source-tracking scheme and define security properties that exceed those of message franking and traceback. We consider two levels of confidentiality: tree-linkable and tree-unlinkable. Tree-linkable schemes allow a recipient to determine if two messages come from the same tree, while tree-unlinkable schemes hide this information.

Our contributions include:
- Introducing the concept of source-tracking for E2EE messaging and defining strong security requirements.
- Constructing a high-performance, tree-linkable source-tracking scheme.
- Constructing a tree-unlinkable source-tracking scheme.
- Implementing and evaluating both schemes, comparing them to prior work and a baseline implementation without source-tracking.

Our implementation and evaluation data are open-source and available at https://github.com/cpeale/srctracking.

## 2. Design Goals
A source-tracking scheme builds on an E2EE messaging system, allowing users to report abusive messages. The platform should be able to identify the true author, regardless of how many times the message was forwarded. Source-tracking does not identify objectionable content but helps identify the source of reported content.

### Security Goals
- **Confidentiality**: Neither the platform nor other users should learn about a message's forwarding history or contents. Unlinkability ensures a user cannot tell if two forwarded messages were authored by the same user.
- **Accountability**: No malicious user should be able to send a message that cannot later be traced back to them.
- **Unforgeability**: No malicious user should be able to frame another user for sending a message they did not send.
- **Deniability**: Only the platform can verify a report, making it impossible for a third party to verify the implicated user.

### Tree-Linkable and Unlinkable Confidentiality
- **Tree-Linkable Confidentiality**: A recipient can determine if two identical messages come from the same forwarding tree but learns nothing about the tree structure.
- **Tree-Unlinkable Confidentiality**: A recipient cannot determine if two identical messages come from the same tree.

### Accommodating Report Metadata
To handle reports, the platform may need additional metadata, such as timestamps. Our schemes support adding optional report metadata, which is revealed only if the message is reported.