更多资源请访问www.ckook.com
---
## Page 74
2.2.5
作为具有DASADM权限的用户登录。使用db2adminstop来停止DAS。
2.2.4
修订包级别运行。
应发出dasupdt命令来更新DAS。
副本创建，并将在与该DB2副本相同的修订包级别运行。如果对该DB2副本打了补丁，
管理服务器则只能有一个，但是，所有DB2副本都将使用它。DAS可以从任何一个DB2
中指定。要启动或停止DAS，使用db2admin start或db2admin stop命令。
dasdrop
要删除DAS，作为root用户登录，并使用dasdrop命令除去DAS，如下所示：
它显示在安装该产品期间指定为默认配置参数的当前值，或在先前更新配置参数期间
db2 get admin cfg
要查看与DAS相关的DB2管理服务器配置参数的当前值，请输入：
可使用DB2getadmincfg命令来查看DAS的当前配置参数。
dasdrop命令除去DB2管理服务器的主目录下的das子目录。
注意：
要除去DAS，在Windows系统确保有正确权限登录。在Linux/UNIX操作系统上首先
使用db2admin或dasdrop命令可以从Windows或Linux/UNIx平台删除DAS。
其中DB2DIR表示安装DB2副本的位置。一旦完成此命令，DAS将在DB2副本的新
DB2DIR/instance/dasupdt
(2）发出dasupdt命令：
（1）使用超级用户权限（通常作为“root”用户）登录到计算机。
要更新DAS：
在Linux和UNIX操作系统上，可以在一台机器上多次安装DB2数据库产品。DB2
更新DB2管理服务器（Linux和UNIX)
使用db2admin命令列示计算机上的DAS的名称。
列示DB2管理服务器
配置管理服务器
删除DB2管理服务器
第2章创建实例和管理服务器
更多资源请访问www.ckook.com
49
---
## Page 75
境中，客户都是通过命令行来进行远程管理的，这种情况下可以不创建DAS。
图形化界面管理功能，这个概念在DB2中相对来说不是特别重要。在很多UNIX/Linux环
该服务时生效）。在其他情况下，配置参数是可联机配置的（即不必重新启动DAS就可以使
更改生效）。
db2admin stop之后，再执行db2admin start时生效：或对于Windows平台，在停止并启动
DB2updateadmin cfgusing
安装级别的实例使用命令行。要更新DAS配置文件中的个别条目，请输入：
指定的那些值。
循序渐进DB2—DBA系统管理、运维与应用案例
关于DAS这个概念，主要希望大家了解DB2数据库中有这个概念，它主要执行远程
在某些情况下，对DAS配置文件的更改仅在将更改装入内存后才生效（即在执行
要将配置参数复位为建议的默认值，请输入：
可在命令行使用updateadminconfig来更新DAS配置文件，必须从与DAS具有相同
更多资源请访问www.ckook.con
---
## Page 76
组。实例和数据库的关系如图3-1所示。
下，创建数据库所生成文件所属的用户和组都是DB2实例的所有者，即创建实例的用户和
由一个DB2实例管理，DB2数据库与DB2实例是一种松散耦合的关系。在UNIX或者Linux
3.1
器一
在DB2中，一个DB2实例可以同时管理多个DB2数据库，而一个DB2数据库只能
DB2数据库概念
·缓冲池
·表空间设计
本章我们主要讲解如下内容：
一表空间。
·创建数据库
在创建完实例后，我们下一步要做的工作就是创建数据库和存放数据库对象的容
创建数据库
创建数据库和表空间
latabasel
TabelTableTabk3
第
图3-1实例和数据库的关系
Database Manager Instance
databa
TabelTabk2
a5c2
---
## Page 77
52
解数据库中的基本对象以及它们如何映射到物理磁盘存储。
之一就是研究如何创建数据库并分配它所需的磁盘存储。要正确地解决这个问题，需要了
而数据库的逻辑设计，如表的字段属性设计，则主要由应用设计人员完成。DBA核心工作
图3-2所示。
数据库性能；另外一些对象（比如日志文件）处理数据库的可恢复性。数据库的逻辑结构如
空间）涉及数据库的物理实现：最后，一些对象（比如缓冲池和其他内存对象）处理如何管理
数据库包含许多逻辑对象和物理对象：
种方式相关联的表。从数据库管理员DBA的角度来看，数据库比这要复杂一些。实际的
循序渐进DB2-DBA系统管理、运维与应用案例
DBA应该首先关注数据库的物理设计，而不是直接研究所有可能的参数和对象组合。
·表、视图、索引、模式、触发器、存储过程、程序包等数据库对象
DB2数据库实际上由一个对象集合组成。从用户的角度来看，数据库是一组通常以某
这些对象中的一部分（比如表或视图）帮助决定如何对数据进行组织：其他对象（比如表
BLOBS
物理存储、表空间容器、目录、
缓冲池、日志文件、表空间
Index1
Table1
Database1
Table2
View3
View2
View1
DBconfigurationfile
Log
Catalog
图3-2数据库的逻辑结构
Table3
Instance1
Index'
、文件系统或裸设备
Index2
Database2
dbmconfigurationfile
View1
Table2
示表空间
DBconfiguration file
Catalog
Log
更多资源请访问www.ckook.com
---
## Page 78
辑存储的统一。表空间是DB2中最重要的概念之一。
可以有多个容器，而容器是在底层存储上的。所以通过表空间数据库实现了物理存储和逻
对象存放在表空间中。表直接面向应用。而同时表空间又和底层的物理存储对应，表空间
表空间的集合：我们可以根据需要创建多个表空间。而我们用户创建的表、索引等数据库
说明了所有这些对象之间的关系。
器之间的一个桥梁，表通过表空间实实在在地将数据存放到容器（文件或者目录）中。图3-3
个容器可以包含的数据量的限制。这样，表空间作为就逻辑设计中的表与物理设计中的容
标识。容器被分配给表空间。表空间可以跨许多容器，这意味着可以突破操作系统对于一
同时，表空间物理上又对应着若干个表空间容器。容器可以由目录名、裸设备名或文件名
理独立性。
在表中。表由行和列组成，用户并不知道数据的物理表示。这一事实有时候称为数据的物
3.1.1
从图3-3中我们可以看到：一个数据库中有很多表空间，可以把数据库看做是很多个
表本身放在表空间中，表空间是存放表的储藏室（容器），一个表空间可以包含多个表。
DB2利用一个逻辑存储模型和一个物理存储模型来处理数据。用户操作的实际数据放
DB2数据库存储模型
PRODInstance
Database MYDB1
Tabie C
TableB
TableA
图3-2
TableB
数据库、表空间、表和表空间容器之间的关系
x1on
Tempspace1
DB2物理存储和逻辑存储模型
Catalog
RegularDMS
RawDievice
Userspace1
Logs
Raw Device
DB Config
file_1
index1on
TableD
TableD
Bulfferpool
Cirectenyrs
tables
第3章
SMS
Indexl on
物理存储层
space5
Table E
更多资源请访问www.ckook.com
创建数据库和表空间
---
## Page 79
数据块extent。extent的大小我们可以在创建数据库和表空间的时候通过extentsize大小指
如何来写容器呢？请看下面的图3-5。
的单位extent，它是整数倍的datapage的大小。这个我们可以在创建表空间时指定extentsize
选择合适的数据页。DB2数据库在写物理存储时，为了保证写的吞吐量，引入了一个更大
8KB、16KB和32KB几种数据页。我们可以根据业务类型（OLAP、OLTP等）和表的大小来
库中最小的存储单位是数据页（datapage），它是DB2读写的最小单位。DB2数据库中有4KB、
循序渐进DB2——DBA系统管理、运维与应用案例
它们之间的关系如图3-4所示。
大小来确定。而表空间容器又是由很多个extent组成的。同时表空间又由很多容器组成。
在Linux和UNIX上最小的块是512字节，在Windows上最小的存储单位为1KB。而数据
我们知道表空间是由很多容器组成的，我们每次写容器的时候，写的单位为一个扩展
从上面的图3-4中我们知道我们创建的表最终是存储在底层表空间容器上的，那么DB2
下面我们先讲解数据库的物理存储。我们都知道操作系统的最小存储单位是块（block）
Containero
cte
E
SPACE
图3-4表空间、容器、extent和数据页之间的关系
TablespaceB
图3-5DB2写容器的过程
CONTAINER
EX
PATE
Extent=32Pages
(Default)
更多资源请访问www.ckook.com
---
## Page 80
3.1.2
部分都是围绕着表空间进行的，下面我们就首先讲解数据库中表空间这个最重要的概念。
间容器一物理存储。同时表空间又是数据库性能调优的重点，而数据库创建工作的绝大
数据库，向下它是存放表的容器，面向的是表；而同时表空间又在物理上映射底层的表空
理存储模型和逻辑存储模型，其扮演了一个承上启下的角色。在逻辑上，它向上面对的是
空间时，
表同时共用一个extent，因为写容器的最小单位是extent，当我们往表中插入数据发现没有
各有7页，且跨所有4个容器。一个extent同时只能被一个表写，也就是说，不可能两张
个容器，每个容器有少量已分配的扩展数据块（extent)。DEPARTMENT和EMPLOYEE表
据库中最小的存储单位，是我们每次读写的最小I/O单位。
图3-6显示具有两个4KB页扩展数据块（extent)大小的HUMANRES表空间，它有4
我们首先了解表空间的类型，DB2中有3种管理类型的表空间。
·系统管理的空间（System-ManagedSpace，SMS）：在这里，由操作系统的文件系统
DB2支持3种管理类型表空间：
通过上面的讲解，我们发现在数据库的物理存储和逻辑存储模型中，表空间连接了物
AIX、HP-UX或Windows)来进行空间管理。
就会导致所有表空间作为SMS对象创建。这种表空间依赖底层的操作系统（例如
管理器分配和管理空间。在DB2V9之前，如果不带任何参数创建数据库或表空间，
表空间管理类型
图3-6表空间中的容器、扩展数据块（extent)、数据页（datapage）和表空间之间的关系
DB2就会为该表分配一个extent。
4KBpage
Container0
EMPLOYEE
DEPARTMENT
Contalner1
DEPARTMENT
EMPLOYEE
Container2
DEPARTMENT
EMPLOYEE
Container3
Exent siz=2
DEPARTMENT
EMPLOYEE
第3章创建数据库和表空间
更多资源请访问www.ckook.com
5
---
## Page 81
面上的可用空间可能会更少。DMS模型会将表空间限制扩大到2TB（4KB页面大小的情况
页大小）的数据。将页面大小改为32KB，可以将这个限制扩大到512GB，但代价是每个页
著的差异是表空间的最大大小。在使用SMS时，DBA最多只能在表空间中放64GB（4KB
选择时要考虑的一些因素。
对象管理
选项少且性能不好。
循序渐进DB2——DBA系统管理、运维与应用案例
表空间最大大小
性能
管理的简便性
空间分配
默认类型
(Striping)