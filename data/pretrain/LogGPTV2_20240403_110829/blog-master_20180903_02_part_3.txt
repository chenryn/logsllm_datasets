done  
模板  
$ ./tpch.sh ./results_gpdb ip port tpch-db tpch-user password {row|column|redshift|pg|pg10|citus}  
$ ./tpch.sh ./results_gpdb 127.0.0.1 15432 postgres postgres pwd column  
```  
2、测试结果（比citus好很多）  
```  
2018-09-03 17:14:24 [1535966064] :     query 1 finished OK (3 seconds)  
2018-09-03 17:14:28 [1535966068] :     query 2 finished OK (4 seconds)  
2018-09-03 17:14:36 [1535966076] :     query 3 finished OK (7 seconds)  
2018-09-03 17:14:38 [1535966078] :     query 4 finished OK (2 seconds)  
2018-09-03 17:14:56 [1535966096] :     query 5 finished OK (17 seconds)  
2018-09-03 17:14:57 [1535966097] :     query 6 finished OK (0 seconds)  
2018-09-03 17:15:20 [1535966120] :     query 7 finished OK (23 seconds)  
2018-09-03 17:15:26 [1535966126] :     query 8 finished OK (5 seconds)  
2018-09-03 17:15:39 [1535966139] :     query 9 finished OK (12 seconds)  
2018-09-03 17:15:43 [1535966143] :     query 10 finished OK (4 seconds)  
2018-09-03 17:15:44 [1535966144] :     query 11 finished OK (1 seconds)  
2018-09-03 17:15:48 [1535966148] :     query 12 finished OK (3 seconds)  
2018-09-03 17:15:53 [1535966153] :     query 13 finished OK (4 seconds)  
2018-09-03 17:15:58 [1535966158] :     query 14 finished OK (5 seconds)  
2018-09-03 17:16:05 [1535966165] :     query 15 finished OK (6 seconds)  
2018-09-03 17:16:11 [1535966171] :     query 16 finished OK (6 seconds)  
2018-09-03 17:16:32 [1535966192] :     query 17 finished OK (20 seconds)  
2018-09-03 17:16:38 [1535966198] :     query 18 finished OK (5 seconds)  
2018-09-03 17:16:41 [1535966201] :     query 19 finished OK (3 seconds)  
2018-09-03 17:16:47 [1535966207] :     query 20 finished OK (5 seconds)  
2018-09-03 17:16:57 [1535966217] :     query 21 finished OK (9 seconds)  
2018-09-03 17:17:01 [1535966221] :     query 22 finished OK (4 seconds)  
```  
## 7 1亿 tpc-b  
```  
pgbench -i -s 1000 -h 127.0.0.1 -p 15432  
```  
1、只读  
```  
pgbench -M prepared -v -r -P 1 -c 20 -j 20 -T 120 -h 127.0.0.1 -p 15432 -S   
transaction type:   
scaling factor: 1000  
query mode: prepared  
number of clients: 20  
number of threads: 20  
duration: 120 s  
number of transactions actually processed: 22557  
latency average = 106.488 ms  
latency stddev = 38.781 ms  
tps = 187.690045 (including connections establishing)  
tps = 187.708953 (excluding connections establishing)  
script statistics:  
 - statement latencies in milliseconds:  
         0.005  \set aid random(1, 100000 * :scale)  
       106.464  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;  
```  
2、读写  
```  
pgbench -M prepared -v -r -P 1 -c 1 -j 1 -T 120 -h 127.0.0.1 -p 15432  
transaction type:   
scaling factor: 1000  
query mode: prepared  
number of clients: 1  
number of threads: 1  
duration: 120 s  
number of transactions actually processed: 2160  
latency average = 55.561 ms  
latency stddev = 23.515 ms  
tps = 17.997435 (including connections establishing)  
tps = 17.998340 (excluding connections establishing)  
script statistics:  
 - statement latencies in milliseconds:  
         0.004  \set aid random(1, 100000 * :scale)  
         0.001  \set bid random(1, 1 * :scale)  
         0.001  \set tid random(1, 10 * :scale)  
         0.001  \set delta random(-5000, 5000)  
         2.238  BEGIN;  
         2.927  UPDATE pgbench_accounts SET abalance = abalance + :delta WHERE aid = :aid;  
         8.060  SELECT abalance FROM pgbench_accounts WHERE aid = :aid;  
         3.537  UPDATE pgbench_tellers SET tbalance = tbalance + :delta WHERE tid = :tid;  
         2.357  UPDATE pgbench_branches SET bbalance = bbalance + :delta WHERE bid = :bid;  
         3.992  INSERT INTO pgbench_history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);  
        32.442  END;  
```  
UPDATE,DELETE都是表级锁，使用2PC，OLTP性能无法直视。（Citus这方面就做德很好。）  
## greenplum VS citus  
[《PostgreSQL sharding : citus 系列2 - TPC-H》](../201808/20180829_01.md)    
[《PostgreSQL sharding : citus 系列1 - 多机部署（含OLTP(TPC-B)测试）》](../201808/20180824_02.md)    
## 小结  
1、citus 适合oltp多一点，AP偏少的系统（如果有复杂的OLAP需求，必须write in sql , thinking in mapreduce， 或者使用greenplum生成的执行计划，把broadcase, remotion的动作割开，使用临时表代替来实现。）。     
2、greenplum适合OLAP系统。(基本无法适合OLTP)。     
## 参考  
[《PostgreSQL sharding : citus 系列3 - 窗口函数调用限制 与 破解之法》](../201809/20180902_01.md)    
[《PostgreSQL sharding : citus 系列2 - TPC-H》](../201808/20180829_01.md)    
[《PostgreSQL sharding : citus 系列1 - 多机部署（含OLTP(TPC-B)测试）》](../201808/20180824_02.md)    
[《[未完待续] PostgreSQL MPP EXTENSION citus(分布式 sharding) 简明手册》](../201804/20180402_05.md)    
[《PostgreSQL citus, Greenplum  分布式执行计划 DEBUG》](../201808/20180828_01.md)    
[《[转载] TPCH 22条SQL语句分析》](../201808/20180826_01.md)    
[《(TPC-H测试 SF=10,SF=200) PostgreSQL 11 vs 10 vs Deepgreen》](../201808/20180823_01.md)    
[《TPC-H测试 - PostgreSQL 10 vs Deepgreen(Greenplum)》](../201707/20170714_01.md)    
[《PostgreSQL 并行计算tpc-h测试和优化分析》](../201611/20161108_01.md)    
[《Greenplum,HAWQ interval parser带来的问题 - TPCH 测试注意啦》](../201610/20161011_02.md)    
https://github.com/digoal/gp_tpch  
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")