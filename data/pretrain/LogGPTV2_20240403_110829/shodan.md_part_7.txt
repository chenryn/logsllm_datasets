5006 MELSEC-Q
5007 MELSEC-Q
5008 NetMobility
5009 AppleAirportAdministration
5060 SIP
5094 HART-IP
5222 XMPP
5269 XMPPServer-to-Server
5353 mDNS
5357 Microsoft-HTTPAPI/2.0
5432 PostgreSQL
5577 FluxLED
5601 Kibana
5632 PCAnywhere
5672 RabbitMQ
5900 VNC
5901 VNC
5938 TeamViewer
5984 CouchDB
6000 X11
6001 X11
6379 Redis
6666 Voldemortdatabase,malware
6667 IRC
6881 BitTorrentDHT
6969 TFTP,BitTorrent
7218 Sierrawireless(Telnet)
7474 Neo4jdatabase
7548 CWMP(HTTPS)
7777 Oracle
7779 DellServiceTagAPI
8008 Chromecast
8009 VizioHTTPS
8010 IntelbrasDVR
AppendixD:ListofPorts 85
Port Service(s)
8060 Rokuwebinterface
8069 OpenERP
8087 Riak
8090 InsteonHUB
8099 YahooSmartTV
8112 Deluge(HTTP)
8126 StatsD
8139 Puppetagent
8140 Puppetmaster
8181 GlassFishServer(HTTPS)
8333 Bitcoin
8334 Bitcoinnodedashboard(HTTP)
8443 HTTPS
8554 RTSP
8800 HTTP
8880 WebsphereSOAP
8888 HTTP,Andromouse
8889 SmartThingsRemoteAccess
9000 VizioHTTPS
9001 TorOR
9002 TorOR
9009 Julia
9042 CassandraCQL
9051 TorControl
9100 PrinterJobLanguage
9151 TorControl
9160 ApacheCassandra
9191 Sierrawireless(HTTP)
9418 Git
9443 Sierrawireless(HTTPS)
9595 LANDeskManagementAgent
9600 OMRON
9633 DarkTrackRAT
9869 OpenNebula
10001 AutomatedTankGauge
10001 Ubiquiti
10243 Microsoft-HTTPAPI/2.0
10554 RTSP
11211 Memcache
12345 malware
17000 BoseSoundTouch
17185 VxWorksWDBRPC
12345 Sierrawireless(Telnet)
11300 Beanstalk
AppendixD:ListofPorts 86
Port Service(s)
13579 Mediaplayerclassicwebinterface
14147 FilezillaFTP
16010 ApacheHbase
16992 IntelAMT
16993 IntelAMT
18245 GeneralElectricSRTP
20000 DNP3
20547 ProconOS
21025 Starbound
21379 MatrikonOPC
23023 Telnet
23424 Serviio
25105 InsteonHub
25565 Minecraft
27015 SteamA2Sserverquery,SteamRCon
27016 SteamA2Sserverquery
27017 MongoDB
28015 SteamA2Sserverquery
28017 MongoDB(HTTP)
30313 GardasoftLighting
30718 LantronixSetup
32400 Plex
37777 DahuvaDVR
44818 EtherNet/IP
47808 Bacnet
49152 Supermicro(HTTP)
49153 WeMoLink
50070 HDFSNamenode
51106 Deluge(HTTP)
53413 Netisbackdoor
54138 ToshibaPoS
55443 McAfee
55553 Metasploit
55554 Metasploit
62078 AppleiDevice
64738 Mumble
Appendix E: Sample SSL Banner
{
"hostnames": [],
"title": "",
"ip": 2928565374,
"isp": "iWeb Technologies",
"transport": "tcp",
"data": "HTTP/1.1 200 OK\r\nExpires: Sat, 26 Mar 2016 11:56:36 GMT\r\nExpire\
s: Fri, 28 May 1999 00:00:00 GMT\r\nCache-Control: max-age=2592000\r\nCache-Cont\
rol: no-store, no-cache, must-revalidate\r\nCache-Control: post-check=0, pre-che\
ck=0\r\nLast-Modified: Thu, 25 Feb 2016 11:56:36 GMT\r\nPragma: no-cache\r\nP3P:\
CP=\"NON COR CURa ADMa OUR NOR UNI COM NAV STA\"\r\nContent-type: text/html\r\n\
Transfer-Encoding: chunked\r\nDate: Thu, 25 Feb 2016 11:56:36 GMT\r\nServer: sw-\
cp-server\r\n\r\n",
"asn": "AS32613",
"port": 8443,
"ssl": {
"chain": ["-----BEGIN CERTIFICATE-----\nMIIDszCCApsCBFBTb4swDQYJKoZIhvcN\
AQEFBQAwgZ0xCzAJBgNVBAYTAlVTMREw\nDwYDVQQIEwhWaXJnaW5pYTEQMA4GA1UEBxMHSGVybmRvbj\
ESMBAGA1UEChMJUGFy\nYWxsZWxzMRgwFgYDVQQLEw9QYXJhbGxlbHMgUGFuZWwxGDAWBgNVBAMTD1Bh\
cmFs\nbGVscyBQYW5lbDEhMB8GCSqGSIb3DQEJARYSaW5mb0BwYXJhbGxlbHMuY29tMB4X\nDTEyMDkx\
NDE3NTUyM1oXDTEzMDkxNDE3NTUyM1owgZ0xCzAJBgNVBAYTAlVTMREw\nDwYDVQQIEwhWaXJnaW5pYT\
EQMA4GA1UEBxMHSGVybmRvbjESMBAGA1UEChMJUGFy\nYWxsZWxzMRgwFgYDVQQLEw9QYXJhbGxlbHMg\
UGFuZWwxGDAWBgNVBAMTD1BhcmFs\nbGVscyBQYW5lbDEhMB8GCSqGSIb3DQEJARYSaW5mb0BwYXJhbG\
xlbHMuY29tMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxc9Vy/qajKtFFnHxGOFPHTxm\
\nSOnsffWBTBfyXnK3h8u041VxvZDh3XkpA+ptg2fWOuIT0TTYuqw+tqiDmg8YTsHy\njcpMFBtXV2cV\
dhKXaS3YYlM7dP3gMmkGmH+ZvCgCYc7L9MIJxYJy6Zeuh67YxEMV\ngiU8mZpvc70Cg5WeW1uBCXtUAi\
jDLsVWnhsV3YuxlweEvkRpAk3EHehKbvgMnEZS\nQ30QySe0GAqC7bWzKrwsJAOUk/+Js18+3QKb/LmD\
a9cRjtFCTo6hYfPbfHj8RxQh\n4Xmnn/CtZ48wRQTqKXSO6+Zk3OuU7/jX1Gt/jxN6n77673e6uCsggT\
wut/EtNwID\nAQABMA0GCSqGSIb3DQEBBQUAA4IBAQBb/yTy76Ykwr7DBOPAXc766n73OsZizjAt\n1k\
mx7LxgN3X/wFxD53ir+sdOqbPgJl3edrE/ZG9dNl6LhUBbUK+9s6z9QicEfSxo\n4uQpFSywbGGmXInE\
ZmyT4SsOLi/hNgy68f49LO1h6rn/p7QgIKd31g7189ZfFkFb\nRdD49s1l/Cc5Nm4XapUVvmnS91MlPk\
/OOIg1Lu1rYkuc8sIoZdPbep52H3Ga7TjG\nkmO7nUIii0goB7TQ63mU67+NWHAmQQ8CtCDCN49kJyen\
1WFjD6Je2U4q0IFQrxHw\nMy+tquo/n/sa+NV8QOj1gMVcFsLhYm7Z5ZONg0QFXSAL+Eyj/AwZ\n----\
-END CERTIFICATE-----\n"],
"cipher": {
"version": "TLSv1/SSLv3",
"bits": 256,
AppendixE:SampleSSLBanner 88
"name": "DHE-RSA-AES256-GCM-SHA384"
},
"alpn": [],
"dhparams": {
"prime": "b10b8f96a080e01dde92de5eae5d54ec52c99fbcfb06a3c69a6a9dca52\
d23b616073e28675a23d189838ef1e2ee652c013ecb4aea906112324975c3cd49b83bfaccbdd7d90\
c4bd7098488e9c219a73724effd6fae5644738faa31a4ff55bccc0a151af5f0dc8b4bd45bf37df36\
5c1a65e68cfda76d4da708df1fb2bc2e4a4371",
"public_key": "2e30a6e455730b2f24bdaf5986b9f0876068d4aa7a4e15c9a1b9c\
a05a420e8fd3b496f7781a9423d3475f0bedee83f0391aaa95a738c8f0e250a8869a86d41bdb0194\
66dba5c641e4b2b4b82db4cc2d4ea8d9804ec00514f30a4b6ce170b81c3e1ce4b3d17647c8e5b8f6\
65bb7f588100bcc9a447d34d728c3709fd8a5b7753b",
"bits": 1024,
"generator": "a4d1cbd5c3fd34126765a442efb99905f8104dd258ac507fd6406c\
ff14266d31266fea1e5c41564b777e690f5504f213160217b4b01b886a5e91547f9e2749f4d7fbd7\
d3b9a92ee1909d0d2263f80a76a6a24c087a091f531dbf0a0169b6a28ad662a4d18e73afa32d779d\
5918d08bc8858f4dcef97c2a24855e6eeb22b3b2e5",
"fingerprint": "RFC5114/1024-bit MODP Group with 160-bit Prime Order\
Subgroup"
},
"versions": ["TLSv1", "-SSLv2", "SSLv3", "TLSv1.1", "TLSv1.2"]
},
"html": "\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\
\n\t\t\n\t\t\n\t\t\n\t\t\
You will be redirected to the\
new address in 15 seconds... If you are not automatically taken to the new loca\
tion, please enable javascript or click the hyperlink /login.php3?window_id=&amp;requested_url=https%3A%2F%2F174.142.92.126%3A8443%2F\
.",
AppendixE:SampleSSLBanner 89
"location": {
"city": null,
"region_code": "QC",
"area_code": null,
"longitude": -73.5833,
"country_code3": "CAN",
"latitude": 45.5,
"postal_code": "H3G",
"dma_code": null,
"country_code": "CA",
"country_name": "Canada"
},
"timestamp": "2016-02-25T11:56:52.548187",
"domains": [],
"org": "iWeb Technologies",
"os": null,
"_shodan": {
"options": {},
"module": "https",
"crawler": "122dd688b363c3b45b0e7582622da1e725444808"
},
"opts": {
"heartbleed": "2016/02/25 03:56:45 ([]uint8) {\n 00000000 02 00 74 63 6\
5 6e 73 75 73 2e 73 68 6f 64 61 6e |..tcensus.shodan|\n 00000010 2e 69 6f 53 \
45 43 55 52 49 54 59 20 53 55 52 56 |.ioSECURITY SURV|\n 00000020 45 59 fe 7a\
a2 0d fa ed 93 42 ed 18 b0 15 7d 6e |EY.z.....B....}n|\n 00000030 29 08 f6 f\
8 ce 00 b1 94 b5 4b 47 ac dd 18 aa b9 |)........KG.....|\n 00000040 db 1c 01 \
45 95 10 e0 a2 43 fe 8e ac 88 2f e8 75 |...E....C..../.u|\n 00000050 8b 19 5f\
8c e0 8a 80 61 56 3c 68 0f e1 1f 73 9e |.._....aV.Ea/j-|\n 00000080 5d 11\
74 94 03 3c 5d |].t..<]|\n}\n\n2016/02/25 03:56:45\
174.142.92.126:8443 - VULNERABLE\n",
"vulns": ["CVE-2014-0160"]
},
"ip_str": "174.142.92.126"
}
Exercise Solutions
Website
Exercise1
title:4sics
Exercise2
rfb authentication disabled
Exercise3
vuln:CVE-2014-0160 country:se ssl.version:sslv3
vuln:CVE-2014-0160 org:"your organization"
Exercise4
category:ics city:"your city name"
Exercise5
category:malware country:us
Command-Line Interface
Exercise1
shodan download --limit -1 heartbleed-results country:se,no vuln:CVE-2014-0160
shodan parse --filters location.country_code:SE -O heartbleed-sweden heartbleed-\
results.json.gz
Note:The–filtersargumentdoescase-sensitivesearchingonpropertiesthatarestrings,
hencetheSwedishcountrycodehastobeupper-case.
Exercise2
ExerciseSolutions 91
mkdir data
shodan stream --limit 1000 --datadir data/
shodan convert data/* kml
# Upload the KML file to https://www.google.com/maps/d/
Exercise3
#!/bin/bash
shodan download --limit -1 malware.json.gz category:malware
for ip in `shodan parse --fields ip_str malware.json.gz`
do
iptables -A OUTPUT -d $ip -j DROP
done
Shodan API
Replace YOUR_API_KEY with the API key for your account as seen on your Shodan Account
website33.
Exercise1
#!/usr/bin/env python
# Initialize Shodan
import shodan
api = shodan.Shodan("YOUR_API_KEY")
# Create a new alert
alert = api.create_alert('My first alert', '198.20.69.0/24')
try:
# Subscribe to data for the created alert
for banner in api.stream.alert(alert['id']):
print banner
except:
# Cleanup if any error occurs
api.delete_alert(alert['id'])
Tip:HereisasolutionusingtheShodancommand-lineinterface’salertcommands:
33https://account.shodan.io
ExerciseSolutions 92
# Create the alert
shodan alert create "My first alert" 198.20.69.0/24
# Subscribe to the real-time feed and store the data in the "/tmp" directory
shodan stream --alerts=all --datadir=/tmp
# Once we're done remove all alerts
shodan alert clear
Exercise2
mkdir images
Runtheabovecommandtogenerateadirectorytostoretheimagesin.Thensavethefollowingcode
inafilesuchasimage-stream.py:
#!/usr/bin/env python
import shodan
output_folder = 'images/'
api = shodan.Shodan("YOUR_API_KEY")
for banner in api.stream.banners():
if 'opts' in banner and 'screenshot' in banner['opts']:
# All the images are JPGs for now
# TODO: Use the mimetype to determine file extension
# TODO: Support IPv6 results
# Create the file name using its IP address
filename = '{}/{}.jpg'.format(output_folder, banner['ip_str'])
# Create the file itself
output = open(filename, 'w')
# The images are encoded using base64
output.write(banner['opts']['screenshot']['data'].decode('base64'))