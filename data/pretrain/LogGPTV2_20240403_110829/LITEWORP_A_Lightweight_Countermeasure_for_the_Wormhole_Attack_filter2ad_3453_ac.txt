−
P
βµ
|
)
g i
−
=
B P
g
,
(
,
γ γ
− +
|
βµ
g
B
( ,
1)
− +
γ γ
1)
=
g
1)!(
!
g
(
−
γ
−
)!
γ
P
βµ
|
∫
0
1
γ
−
u
(1
−
u
)
g
γ
−
du
where,  
B
gγ γ− +  is the Beta function and 
( ,
1)
B P
(
βµ γ γ− +  is the incomplete Beta function. 
|
1)
;
,
g
Figure 6(a) shows the probability of detecting wormholes with m = 7, b=5, g =3, the number of compromised 
nodes  M  =  2,  and  PC  =  0.05  at  NB  =  3.  The  number  of  guards  is  determined  from  NB  using  Equation  (I). 
Thereafter, PC is assumed to increase linearly with the number of neighbors. Since the number of guards increases 
as  the  number  of  neighbors  increases,  the  probability  of  detection  increases  since  it  becomes  easier  to  get  the 
alarm from g guards. However, the collision probability also increases with the number of neighbors, and thus the 
probability of detection starts to fall rapidly beyond a point. Figure 10 shows that for the same m, b, and PC, the 
probability of wormhole detection as a function of g when NB = 15 and M = 2. As g increases, the probability of 
detection (P≥g) decreases. 
)
n
o
i
t
c
e
t
e
d
e
l
o
h
m
r
o
w
P
(
1.00
0.80
0.60
0.40
0.20
0.00
3
7
11 15 19 23 27 31 35
(a) Number of neighbors
)
6
-
E
0
1
X
m
r
a
l
a
e
s
l
a
f
(
P
0.28
0.21
0.14
0.07
0.00
3
7
11 15 19 23 27 31 35
(b) Number of`nodes
Figure 6: (a) Probability of wormhole detection as a function of the number of neighbors; (b) Probability of 
false alarm as a function of the number of neighbors 
As shown in Figure 5(b), a false alarm occurs when D receives a packet sent from S, while G does not receive 
that packet, and later, G receives the corresponding packet forwarded by D. Thus, the probability of false alarm 
15
is
P
FA
=
P
C
(1
−
P
C
2
)
. Assume that S sends m packets to D for forwarding, within a certain time window, T. The 
probability that D is falsely accused is the probability that b or more packets are falsely suspected as fabricated. 
This  is  given  by 
P
FA
(
)
βµ
|
=
alarms is given by  
µ
∑
i
β
=
⎛
⎜
⎝
µ
⎞
⎟
i
⎠
(
P
FA
1i
) (
−
P
FA
i
µ
−
)
,  and  the  probability  that  at  least γ  guards  generate  false 
p
FA
≥
γ
=
g
∑
=
γ
i
g
i
⎛
⎜
⎝
⎞
⎟
⎠
(
P
FA
(
)
βµ
|
i
) (
1
−
P
FA
(
)
βµ
|
g i
−
)
=
(
β
g
P
,
,
γ γ
− +
FA
)
(
|
βµ
g
1)
( ,
βγ γ
− +
1)
=
g
1)!(
!
g
(
γ
−
−
)!
γ
FAP
(
)
βµ
|
∫
0
1
−
γ
u
(1
−
u
)
g
−
γ
du
Figure 6(b) shows the probability of false alarm as a function of the number of nodes for the same parameters 
as in Figure 6(a). The non monotonic nature of the plot can be explained as follows. As the number of neighbors 
increases,  so  does  the  number  of  guards.  Initially, this  increases the  probability  that  at least γ  guards miss  the 
packet from S to the guard but not from D to the guard, leading to false detection at these γ guards. But beyond a 
point, the increase in the number of neighbors increases the collision probability. This increases the probability 
that both of these packets are missed at the guard and thus does not lead to false detection. The worst case false 
alarm probability is still negligible (less than 0.3×10-6). 
5.2  Cost Analysis 
In this section, we show the memory, the computation, and the bandwidth overheads of LITEWORP to evaluate 
its suitability to resource-constrained environments. 
 Memory overhead: We need to store the first and the second hop neighbor lists, the watch buffer, and the alert 
buffer. The identity of a node in the network is 4 bytes. Reusing the notation from the previous section, the size of 
neighbor list is NBL = pr2d entries. Each entry in the NBL needs 5 bytes; 4 for identity of the neighbor and 1 for 
the MalC associated with that neighbor. So the total NBL storage, NBLS=5(πr2d)2. For example, for an average of 
10 neighbors per node, NBLS is less than half a kilobyte. The alert buffer has g number of 4 byte entries. The 
watch buffer size depends on the average number of hops between a source-destination pair, h, the frequency of 
route  establishment,  f,  as  well  as  the  density  of  the  nodes.  To  find  the  average  number  of  nodes  involved  in 
watching a REP, we create a rectangular bounding box containing nodes that may overhear the REP sent from A 
to B (Figure 7). This is an overestimate since we use a square that circumscribes the circular transmission range.
16
2r
r
A
r
B
A sensor node
(h+1)r
Communication range
Figure 7: The average number of nodes involved in the 
A-B Bounding path
watch of a route reply 
 The  number  of  nodes  involved  in  monitoring 
is
REPN
=
r h
22 (
+
1)
d
. Thus, given N as the total 
number  of  nodes  in  the  network,  each  node  is 
involved in watching  (
REPN
/
N f  route replies 
)
per unit time. 
For example, if N=100 nodes, h = 4 hops, and f = 1 route every 4 time units, then NREP = 17, and each node 
watches only 4 route replies every 100 time units. Because the time t for which the packet is kept in the watch 
buffer is relatively small (may be less than one time unit), a watch buffer size of 4 entries is more than enough for 
this example. Each entry in the watch buffer is 20 bytes: 4 bytes each for the immediate source, the immediate 
destination, and the original source,  and 8 bytes for the sequence number of  the REP. If  we include the route 
request in the watch, then each node will be involved in watching
f
+
(
N
REP
/
N f
)
. That requires each node to 
watch 4 packets every 16 time units; again 4 entries are still sufficient for the watch buffer.  
Computation and Bandwidth overhead: Each watched route reply requires one lookup for the current source 
and the current destination in the neighbor list, adding an entry to the watch buffer (incoming) or deleting an entry 
from the watch buffer (outgoing), and may be another addition and deletion from the watch buffer (if a node is a 
guard for two consecutive links). Since the size of the watch buffer and the neighbor list structure are relatively 
small,  the  computation  time  required  for  these  operations  is  negligible.  For  example,  a  lookup  in  a  100  entry 
buffer takes the MICA mote with an Atmega128 4 MHZ processor, about 2m seconds. The bandwidth overhead is 
incurred after deployment of a node for neighbor discovery and in the case of wormhole detection for informing 
the neighbors of the detected node. This is therefore a negligible fraction of the total bandwidth over the lifetime 
of the network.  
Thus,  due  to  the  low  resource  overheads,  LITEWORP  is  suitable  for  use  in  resource-constrained  wireless 