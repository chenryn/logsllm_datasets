配置项
druid.emitter.logging.logLevel
druid.emitter.composing.emitters
druid.emitter
druid.monitoring.monitors
druid.monitoring.emissionPeriod
配置项
leaderLatchPath
druid.zk.paths.indexer,
tasksPath
druid.zk.paths.indexer.
announcementsPath
druid.zk.paths.indexer.
配置项
Coordinator Node（协调节点）
Metric
用于Overlord的选主
负责的所有9
保存每个MiddleManager（中间管理者）宣告
描述
当前节点监听的端口
当前节点的host
描述
Segment
参照Log4j的日志级别
为["http","logging"]
composing的emitter列表，比如可以设置
时使用多种emitter
使用哪种emitter，可选项有noop、http、log-
Array格式
配置可选的收集器，
定时发送Metric的周期
描述
该配置项接收JSON
Druid实时大数据分析原理与实践
配置可以同
basel/leaderLatchPath
${druid.zk.paths.indexer.
base)/tasks
${druid.zk.paths.indexer.
base)/announcements
$[druid.zk.paths.indexer.
默认值
8081
HostName()
Host(O.getCanonical-
InetAddress.getLocal-
默认值
info
noop
任何收集器）
none（不使用
PT1M
默认值
续表
---
## Page 339
附录B
kill.maxSegments
druid.coordinator.
kill.durationToRetain
druid.coordinator.
kill.period
druid.coordinator.
kill.on
druid.coordinator.
load.timeout
druid.coordinator.
conversion.on
druid.coordinator.
merge.on
druid.coordinator.
startDelay
druid.coordinator.
period.indexingPeriod
druid.coordinator.
period
druid.coordinator.
druid.service
配置项
常用参数表
该值必须大于0，只有druid.coordinator.kill.on开
的是，默认值无效
Segment的保留期，Kill任务不会删除保留期内
druid.coordinator.period.indexingPeriod
除元信息存储以及深度存储中的 Segment，册
务去删除无用的 Segment，这里是硬删除，会删
布尔型标志，决定Coordinator 是否提交Kill任
史节点加载完成的超时时间
Coordinator分配Segment给历史节点，等
ment 的数据格式转换成最高版本
启以后才有效
有效
提
以后不可恢复
布尔型标志，开启该选项，Coordinator会将Seg-
ment
多个小的 Segment 合并成一个最佳大小的 Seg-
的
布尔型标志，开启该选项，Coordinator
便能获取最全的数据
Coordinator初次执行延迟时留有时间缓冲，
发送索引任务到索引服务的频率，
配给历史节点去加载
同时轮询发现可用的Segment，根据均衡策略分
根据内存中的集群状态对数据拓扑进行均衡，
Coordinator定时执行的频率，
别，同时用于节点发现服务
度
服务名，作为Metric或Alert 消息中的一个维
描述
每一次提交任务能删除的最多的Segment数量。
Segment,
1，而且只有开启了druid.coordinator.kill.on才
供Kill
，建议每个节点设置一个不同的名字加以区
该值必须大于或
任务的频率，
等于0
该值必须大于
Coordinator定时
：只有开启了
需要注
会
等待历
尝试把
删除
意
0
PT-1S
PID
false
PT15M
false
false
PT300S
PT1800S (30 mins)
PT1M
druid/coordinator
默认值
续表
315
---
## Page 340
B.5
316
Threads
druid.processing.num-
matString
druid.processing.for-
poolCacheMaxCount
druid.processing.buffer.
sizeBytes
druid.processing.buffer.
IdleTime
druid.server.http.max-
Threads
druid.server.http.num-
配置项
defaultTier
druid.manager.rules.
pollDuration
druid.manager.rules.
pollDuration
druid.manager.segments.
pollDuration
druid.manager.config.
配置项
查询相关
加载规则的默认层
更新或发现可用
轮询 confg表的频率
命名当前查询线程的格式
缓冲区池的容量的最大值
置为较大值时需要保障有足够大的堆外内存
Druid会为每个处理线程开辟配置大小的缓冲区，设
聚合更多的数据，减少数据的传递。需要注意的是，
存放中间结果集的缓冲区大小，该缓冲区使用堆外内
HTTP链接的最大空闲时间
更新加载
描
处理查询的线
存。
处理HTTP
描
一个线程用于加载Segment
述
述
将该项设置为较大值时，会在中间结果集缓冲区
规则的频率
请求的线程数量
程
Segment的频率
数
曹
一般为 processorsNum-1，目
Druid实时大数据分析原理与实践
留下
_default
PT1M
PTIM
PTIM
默认值
cessors-1(or 1)
Number of pro-
processing-%s
VALUE
Integer.MAX
1GB
PT5M
0
默认值
续表
---
## Page 341
B.6
附录B
locations
druid.segmentCache.
druid.server.priority
druid.server.tier
druid.server.maxSize
配置项
maxSearchLimit
druid.query.search.
maxResults
druid.query.groupBy.
maxIntermediateRows
druid.query.groupBy.
singleThreaded
druid.query.groupBy.
umnCache.sizeBytes
druid.processing.col-
配置项
Historical Node（历史节点
常用参数表
存分配给它的 Segment 的路径
Search查询返回结果集的最大值
较大的查询可以通过在查询上下文中设置超过该值
Group By查询返回结果集的最大值，对于返回结果集
Group By查询的中间结果集的大小
是否使用单线程处理（
处理队列是否采用FIFO的公平方式
来GC的负担
有可能因命中率降低导致性能下降。开启此选项会带
缓存。开启维度字典查找的缓存以后，能显著提升维
缓存维度字典的最大值，任何大于0的值都表示开启
储中下载缓存在本地磁盘上。该配置是历史节点缓
Segment分配给历史节点以后，
的分层架构
合没有交叉副本（层与层之间没有数据存储交叉）
在分层架构中，优先级决定了哪些节点能被查询使
当前节点所属的层的名字
并不是严格规定的容量上线，它只是给Coordinator
历史节点加载Segment的最大容量（字节数）。但这
描述
描述
用。值越大优先级越高。默认值（没有优先级）适
一个参照值，根据该值制定加载计划
GroupBy查询
历史节点从深度存
none（不缓存）
default_tier
0
默认值
1000
500000
50000
false
false
O(disable)
默认值
续表
317
---
## Page 342
B.7
318
druid.indexer.queue.maxSize
lyFinishedThreshold
druid.indexer.storage.recent-
druid.indexer.storage.type
druid.indexer.runner.type
配置项
numBootstrapThreads
druid.segmentCache.
numLoadingThreads
druid.segmentCache.
announceIntervalMillis
druid.segmentCache.
infoDir
druid.segmentCache.
dropSegmentDelayMillis.
druid.segmentCache.
deleteOnRemove
druid.segmentCache.
配置项
Overlord配置
从本地缓存中加载Segment的并发线程数量
从深度存储中下载Segment 的并发线程数量
会执行宣告负责
置为0，则会等待所有的 Segment 加载完成以后才
执行宣告负责Segment的定时间隔，如果将该值设
在从本地缓存加载Segment 到内存中时，后台线程
留所负责的 Segment 的元信息
不是等待Coordinator重新分配。
历史节点会缓存它负责的所有 Segment的元信息，
删除Segment的延迟时间，单位为毫秒
后
布尔型标志，
描
一旦节点重启以后，从缓存中加载那些Segment而
同时活跃的任务数量
建时间的差值超出设置时限的任务
获取最近完成的任务列表时，过滤掉当前时间和创
能够恢复
存储在元数据存储中，则当Overlord失败以后依然
信息存储在本地JVM内存中还是元数据存储中，若
可选项有“local”和“remote”，该配置项标明任务
任务运行方式，可选项有“local”和“remote”
描述
述
将Segment文件从本地缓存中删除
一旦当前节点不负责某个Segment 以
，该配置路径下保
Druid实时大数据分析原理与实践
5000（5秒）
/info_dir
${first_location}
30000（30秒）
true
默认值
VALUE
Integer.MAX
PT24H
local
local
默认值
续表
---