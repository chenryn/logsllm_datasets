本文为翻译文章，原文地址：
# CVE-2021-22779：Modicon PLC 中的 RCE 分析
Armis 研究人员在 Schneider Electric Modicon PLC
中发现了一个严重漏洞。该漏洞允许攻击者绕过身份验证机制，从而导致在易受攻击的 PLC 上存在原生代码的远程执行
## 发现了什么：
Armis 研究人员在施耐德电气 (SE) Modicon PLC 中发现了一个新漏洞 (CVE-2021-22779)，该漏洞允许绕过 PLC
中防止滥用未公开的 Modbus 指令的安全机制。这些未公开的指令允许完全控制 PLC ——
覆盖关键内存区域，泄漏敏感内存信息又或者调用内部函数。Armis 研究员发现这些命令被用来接管 PLC 并且可以在设备上执行 **原生** 代码，改变
PLC 的操作。同时还可以对管理 PLC 的工程工作站隐藏更改。这种攻击是一种未经身份验证的攻击，仅需要与目标 PLC 建立网络访问
## 事情发展过程：
Armis 于 2020 年 11 月 13 日通知了 SE，此后一直与他们合作以了解潜在问题，并研究补丁开发。今天 SE
发布了一则包含缓解措施的[安全公告](http://download.schneider-electric.com/files?p_Doc_Ref=SEVD-2021-194-01)。完全缓解这些问题的补丁仍在开发中
在与 SE 合作的过程中，Armis 研究员发现并报告了两个额外的身份验证绕过技巧，这些技巧尚未被 SE 解决。由于驱动 Modicon PLC 上使用的
SE 的 UMAS 协议的 Modbus 协议存在固有的缺陷，Armis 将继续与 SE 和其它供应商合作解决这些问题
## 要点：
  * 这篇分析揭示了 Modbus 协议的弱点 —— 一种广泛用于工业控制的行业标准协议。SE 的 UMAS 协议运行在 Modbus 协议之上，该协议缺乏加密和适当的身份验证机制。这些已知的缺陷导致了漏洞被发现、修补然后再一次被修补，不断重复，像是在一个经典的打地鼠循环之中
  * SE [曾经表示](https://blog.se.com/machine-and-process-management/2018/08/30/modbus-security-new-protocol-to-improve-control-system-security/)打算采纳 Modbus 安全协议以提供经典 Modbus 协议不具备的加密和身份验证机制，然而相关采纳措施尚未实施
  * 在野攻击中发现了针对工业控制器的恶意程序 —— 例如针对 SE 的 Triconex 安全控制器的 Triton 恶意程序。这个恶意程序是运行在工业控制器上通过获得原生代码执行实现巨大破坏潜力的一个例子。这个最新的漏洞显示了攻击者在类似控制器上获得原生代码执行的潜力
## Armis 如何提供帮助：
  * Armis 强烈建议使用 Schneider Electric 指南来为 Modicon PLC 做安全配置 —— 例如在项目文件中使用应用程序密码，正确使用网络分段，并且通过实施访问控制列表来保护工业控制器免受有害的通信和攻击
  * 当前研究强调了能够监控设备，识别风险，阻止脆弱的工业控制器受到攻击的第三方解决方案的重要性
  * Armis 平台为操作技术（OT）提供先进的特性支持识别和监控针对 OT 设备的风险。这涵盖了检测易受攻击的 PLC ，ICS 协议中的异常，检测可能破坏未加密的 ICS 协议安全的中间人攻击以及识别主动的漏洞利用尝试
  * Armis 平台也提供了一系列的集成方案帮助组织实施安全策略 —— 举个例子，根据 OT 设备的严格 Purdue 级别确定应该使用的正确边界，并通过与网络基础设施方案的集成来配置这些边界
## 技术研究概述
当前被发现的漏洞 (CVE-2021-22779) 是一个身份验证绕过漏洞，它可以与 UMAS
协议中的其他漏洞相关联，这些漏洞在过去被发现，但只能部分缓解。Armis 研究人员发现（我们将在下面详细介绍）虽然这些额外的漏洞 (
[CVE-2018-7852](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-7852)、[CVE-2019-6829](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6829) ) 被归类为拒绝服务，它们实际上可以导致原生远程代码执行。这些漏洞本质上是 UMAS
协议中未公开的命令，Armis 研究人员发现，SE
并没有从协议中删除这些命令（可能是由于遗留的依赖关系），而是在它们周围添加了一个身份验证机制来降低它们的风险。不幸的是，这种机制被发现是存在问题的，因此根据最新的发现，这些命令需要更根本的修复才能完全缓解
由于上述原因，以下 CVE 仍会影响 Modicon M340 和 M580 PLC 的最新固件版本：
  * CVE-2021-22779 - 通过 UMAS 命令 MemoryBlockRead 的身份验证绕过漏洞
  * [CVE-2018-7852](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-7852) \- 通过 UMAS 命令 PrivateMessage (RCE) 取消引用不受信任的指针
  * [CVE-2019-6829](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6829) \- 通过 UMAS 命令 WritePhysicalAddress (RCE) 进行任意内存写入
  * [CVE-2020-7537](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7537) \- 通过 UMAS 命令 ReadPhysicalAddress 读取任意内存（信息泄漏）
其他 Modicon 型号目前被认为不易受到攻击，而 Armis 研究人员将继续分析它们的全部影响
要完全理解上述发现的技术细节，需要了解 Modbus 和 UMAS 协议的一些背景知识
### Modbus
Modbus 是在 SCADA 系统中控制 PLC 的实际标准。它于 1979 年由 Modicon（现为施耐德电气）首次发布。 Modbus
是很久以前设计的，缺少现代系统所需的功能，例如二进制对象与 PLC 之间的传输
Modbus 可以通过串行通信或 IP 通信运行。广泛使用的 Modbus 的 IP 版本是 Modbus/TCP 标准
Modicon 选择在保留的 Modbus 功能码下扩展 Modbus 实现。扩展协议称为 UMAS，它在 Modbus
协议的基础上增加了身份验证、二进制数据传输、固件更新等其他特性
### UMAS
Modicon PLC（M340、M580 和其他）实现 UMAS。UMAS 重新实现了标准 Modbus 命令和一些缺少的必要的 Modbus 功能
例如，UMAS 专有的命令之一是 MemoryBlockWrite 命令（功能码 0x21），它不需要身份验证
该命令将一组二进制数据写入特定 ID 块内的偏移量。这些块位于固定的内存地址中，并被标记为可写或只读块。尝试写入只读块时，MemoryBlockWrite
命令返回错误响应
#### UMAS 预定机制
对 PLC 的某些更改需要多个相互依赖的命令。为允许此类情况下能够正常运行，Modicon 实现了预定机制。创建预定机制是为了同步 PLC 程序的修改 ——
一种针对某些关键更改的全局锁定机制。一旦工程工作站通过 UMAS 成功预定 PLC，它就会收到一个一字节的令牌，用于对 PLC
进行修改。此令牌允许工作站更改在 PLC 上运行的应用程序的任何方面。不修改 PLC 的 UMAS
命令不需要此令牌，并且可以在没有工作站任何身份验证的情况下执行。由于一次只有一个工作站可以预定 PLC，因此这种机制可以保护 PLC 免受可能损坏 PLC
的重叠修改的危害，并控制和保持工厂的正常运转
预定机制的初始版本（我们给它命名为 `basic reservation`）通过使用功能代码为 0x10 的 UMAS
命令来工作。此命令不需要身份验证或询问-响应（ challenge-response ）握手，并且依赖于 PLC 和工程师工作站上 SE
的管理软件之间的硬编码共享密钥
这种机制使用的硬编码密钥可以在未加密的 UMAS 流量中观察到，或者通过对 Modicon PLC 固件进行逆向工程来定位
#### 增强预定机制
随着时间的推移，安全问题被提出，各种未公开的 UMAS 命令被证明允许远程代码执行或其他恶意意图。SE
决定增强预定机制，因此它不仅可以充当锁定机制，还可以充当身份验证机制
增强的预定机制基于对共享密码进行验证的询问-响应（ challenge-response ）握手。共享密码称为应用程序密码，是在项目文件上传到 PLC
时动态设置的。增强预定机制使用功能码为 0x6E 的 UMAS 命令：
在此命令中，工作站和 PLC 交换随机生成的 0x20 字节缓冲区：
这些缓冲区的散列值与应用程序密码的散列值相结合，用于完成预定
如上所述，该机制中使用的秘密的共享密钥是在工程工作站上运行的 EcoStruxure 软件中配置的密码的哈希值。EcoStruxure
软件鼓励用户在创建新项目时配置密码。将项目文件传输到 PLC 时，还会在 PLC 上配置新的应用程序密码
在两种版本的预定机制中，成功预定后会发送一个 1 字节令牌作为响应，然后该令牌将被添加到需要身份验证的 UMAS 命令之前
### 绕过验证 —— Take 1 (CVE-2020-7537)
在对增强预定机制的算法进行逆向工程后，我们想看看是否可以通过未公开的 UMAS 命令泄露应用程序密码（或其哈希值）。对 M340 PLC
最新固件（当时）的静态分析，揭示了一个可疑的 UMAS 命令：
所述 pu_ReadPhysicalAddress
从输入命令所选择的地址的存储块拷贝到响应缓冲区。除了缓冲区大小的简单验证之外，该函数对从内存中读取的地址没有限制。本质上，这个未公开的命令允许泄漏 PLC
地址空间中的所有内存
该命令可用于泄漏存储在 PLC 内存中的应用程序密码的哈希值，用于未经身份验证的攻击者预定和管理 PLC
此外，诸如此类的内存​​读取命令可用于从 PLC 泄漏可能与其操作相关的敏感信息，甚至用作拒绝服务原语
(!)。由于此命令读取的地址没有限制，攻击者可以滥用此命令通过读取某些特定于硬件的地址来使设备崩溃，这将导致 PLC