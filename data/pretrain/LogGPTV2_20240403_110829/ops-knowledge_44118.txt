I have been conducting some research but have not found a suitable solution for my needs. I would like to create a Python script that can identify the currently playing song in iTunes and then send this information serially to an Arduino device.

From my understanding, Appscript could have been used for this purpose; however, it is no longer supported and reportedly contains several bugs due to a lack of updates. 

My current setup includes Mac OS X 10.8.2 and iTunes 10.0.1. I am open to any suggestions or alternative methods that might help me achieve this goal. Any advice or information would be greatly appreciated.

For context, my project involves a small 1.8-inch color display screen, on which I plan to show various pieces of information such as RAM usage, HDD status, CPU load, and the currently playing song.

---

To accomplish your goal, you can set up a simple Automator workflow to retrieve the currently playing song in iTunes. Here’s a step-by-step guide:

1. **Open Automator**:
   - Launch Automator from your Applications folder.
   
2. **Create a New Workflow**:
   - Choose "Workflow" as the document type.

3. **Add Actions**:
   - In the search bar, type "iTunes: Get the Current Song" and drag this action to the workflow.
   - Next, search for "Utilities: Run Shell Script" and add it to the workflow.

4. **Configure the Shell Script**:
   - Set the shell script to `cat > ~/itunes_track.txt`.
   - This will create a text file at `~/itunes_track.txt` containing the path of the current track.

5. **Save and Test the Workflow**:
   - Save the workflow and run it to ensure it correctly writes the current song's path to the text file.

Once you have the data in the text file, you can write a Python script to read this file and send the song information to your Arduino. Here’s a basic example of how you might do this:

```python
import serial
import time

# Path to the text file created by the Automator workflow
file_path = '~/itunes_track.txt'

# Serial port configuration (adjust as needed)
ser = serial.Serial('/dev/ttyUSB0', 9600)

def get_current_song():
    with open(file_path, 'r') as file:
        return file.read().strip()

while True:
    current_song = get_current_song()
    ser.write(current_song.encode())
    time.sleep(1)  # Adjust the sleep interval as needed
```

This script reads the current song from the text file and sends it to the Arduino via the specified serial port. Make sure to adjust the file path and serial port settings to match your specific setup.

I hope this helps! Let me know if you need further assistance.