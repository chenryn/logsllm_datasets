## Bug Report
**Current Behavior**  
I am building a React app with Webpack and Babel, using `.browserslistrc` to
support **Chrome 41** (mainly for SEO purposes), currently in Chrome 41 I get
error:
`Unhandled promise rejection ReferenceError: fetch is not defined`
**Expected behavior/code**  
I expect that babel should include all needed polyfills, currenlty fetch
polyfill seems to not be included.
getting error: `Unhandled promise rejection ReferenceError: fetch is not
defined`
**Babel Configuration (.babelrc, package.json, cli command)**
In root js client file I import babel/polyfill wtih:  
`import '@babel/polyfill';`
**.babelrc:**
    {
      "presets": [
        "@babel/preset-react",
        [
          "@babel/preset-env",
          {
            "debug": true,
            "useBuiltIns": "entry"
          }
        ],
        "@babel/preset-flow"
      ],
      "plugins": [
        "@babel/plugin-proposal-object-rest-spread",
        "@babel/plugin-proposal-class-properties",
        "react-hot-loader/babel",
        [
          "styled-components",
          {
            "displayName": false
          }
        ],
        "ramda"
      ]
    }
**Environment**
  * Babel version(s): v7.2.0
  * Node/npm version: Node 10.5.0 / npm 6.1.0
  * OS: OSX 10.14
  * How you are using Babel: `babel-loader`
            loader: 'babel-loader',
            options: {
              babelrc: true,
            },
**Additional context/Screenshots**  
Output from `@babel/preset-env: `DEBUG` option`
Picks up correct browser (chrome 41)
    Using targets:
    {
      "android": "4.2",
      "chrome": "41",
      "edge": "17",
      "firefox": "52",
      "ie": "11",
      "ios": "9.3",
      "opera": "56",
      "safari": "10.1"
    }
    Using modules transform: auto
    Using plugins:
      transform-template-literals { "android":"4.2", "ie":"11" }
      transform-literals { "android":"4.2", "chrome":"41", "firefox":"52", "ie":"11" }
      transform-function-name { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3" }
      transform-arrow-functions { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      transform-block-scoped-functions { "android":"4.2", "ios":"9.3" }
      transform-classes { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      transform-object-super { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      transform-shorthand-properties { "android":"4.2", "chrome":"41", "ie":"11" }
      transform-duplicate-keys { "android":"4.2", "chrome":"41", "ie":"11" }
      transform-computed-properties { "android":"4.2", "chrome":"41", "ie":"11" }
      transform-for-of { "android":"4.2", "chrome":"41", "firefox":"52", "ie":"11", "ios":"9.3" }
      transform-sticky-regex { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      transform-dotall-regex { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3", "safari":"10.1" }
      transform-unicode-regex { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3", "safari":"10.1" }
      transform-spread { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      transform-parameters { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3" }
      transform-destructuring { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3" }
      transform-block-scoping { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      transform-typeof-symbol { "android":"4.2", "ie":"11" }
      transform-new-target { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      transform-regenerator { "android":"4.2", "chrome":"41", "firefox":"52", "ie":"11", "ios":"9.3" }
      transform-exponentiation-operator { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      transform-async-to-generator { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      proposal-async-generator-functions { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3", "safari":"10.1" }
      proposal-object-rest-spread { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3", "safari":"10.1" }
      proposal-unicode-property-regex { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3", "safari":"10.1" }
      proposal-json-strings { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3", "opera":"56", "safari":"10.1" }
      proposal-optional-catch-binding { "android":"4.2", "chrome":"41", "edge":"17", "firefox":"52", "ie":"11", "ios":"9.3", "safari":"10.1" }
    Using polyfills with `entry` option:
    [/Users/filiphalas/Projects/tweb/src/client/index.js] Replaced `@babel/polyfill` with the following polyfills:
      es6.array.copy-within { "android":"4.2", "chrome":"41", "ie":"11" }
      es6.array.fill { "android":"4.2", "chrome":"41", "ie":"11" }
      es6.array.find { "android":"4.2", "chrome":"41", "ie":"11" }
      es6.array.find-index { "android":"4.2", "chrome":"41", "ie":"11" }
      es6.array.from { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      es7.array.includes { "android":"4.2", "chrome":"41", "ie":"11", "ios":"9.3" }
      es6.array.iterator { "android":"4.2", "ie":"11" }
      es6.array.of { "android":"4.2", "chrome":"41", "ie":"11" }