# NoSQL 概念
> 原文：
## 先决条件
*   [关系数据库](https://linkedin.github.io/school-of-sre/level101/databases_sql/intro/)
## 从本课程中可以期待什么
在培训结束时，您将了解什么是 NoSQL 数据库，它相对于传统 RDBMS 有什么样的优点或缺点，了解不同类型的 NoSQL 数据库，并理解一些基本概念和 w.r.t .到 NoSQL 的权衡。
## 本课程不包括哪些内容
我们不会深入研究任何特定的 NoSQL 数据库。
## 课程内容
*   [NoSQL 简介](https://linkedin.github.io/school-of-sre/level101/databases_nosql/intro/#introduction)
*   [上限定理](https://linkedin.github.io/school-of-sre/level101/databases_nosql/key_concepts/#cap-theorem)
*   [数据版本化](https://linkedin.github.io/school-of-sre/level101/databases_nosql/key_concepts/#versioning-of-data-in-distributed-systems)
*   [分区](https://linkedin.github.io/school-of-sre/level101/databases_nosql/key_concepts/#partitioning)
*   [散列法](https://linkedin.github.io/school-of-sre/level101/databases_nosql/key_concepts/#hashing)
*   [号房](https://linkedin.github.io/school-of-sre/level101/databases_nosql/key_concepts/#quorum)号房
## 介绍
当人们使用术语“NoSQL 数据库”时，他们通常用它来指代任何非关系数据库。有人说术语“NoSQL”代表“非 SQL”，有人说它代表“不仅仅是 SQL”不管怎样，大多数人认为 NoSQL 数据库是以关系表以外的格式存储数据的数据库。
一个常见的误解是 NoSQL 数据库或非关系数据库不能很好地存储关系数据。NoSQL 数据库可以存储关系数据，只是存储方式与关系数据库不同。事实上，与 SQL 数据库相比，许多人发现在 NoSQL 数据库中建模关系数据更容易，因为相关数据不必在表之间拆分。
这种数据库自 20 世纪 60 年代末就已经存在，但“NoSQL”这个名字只是在 21 世纪初才被创造出来。美国宇航局使用 NoSQL 数据库跟踪阿波罗任务的库存。随着存储成本的大幅下降，NoSQL 数据库出现在 2000 年代末。仅仅为了减少数据重复而创建复杂、难以管理的数据模型的时代已经一去不复返了。开发人员(而不是存储)正在成为软件开发的主要成本，因此 NoSQL 数据库针对开发人员的工作效率进行了优化。随着敏捷开发方法的兴起，NoSQL 数据库的开发侧重于可伸缩性、快速性能，同时允许频繁的应用更改，并使编程更容易。
### NoSQL 数据库的类型:
随着时间的推移，由于这些 NoSQL 数据库是为适应不同公司的需求而开发的，我们最终拥有了相当多类型的数据库。然而，它们可以大致分为 4 种类型。不同类型的数据库之间可能会有一些重叠。他们是
1.  **文档数据库:**它们在文档中存储数据，类似于 [JSON](https://www.json.org/json-en.html) (JavaScript 对象符号)对象。每个文档都包含成对的字段和值。值通常可以是各种类型，包括字符串、数字、布尔值、数组或对象，它们的结构通常与开发人员在代码中处理的对象一致。优点包括直观的数据模型&灵活的模式。由于其多种多样的字段值类型和强大的查询语言，文档数据库非常适合各种各样的用例，并且可以用作通用数据库。它们可以横向扩展以容纳大量数据。例如:MongoDB、Couchbase
2.  **键值数据库:**这是一种比较简单的数据库，其中的每一项都包含键值。值通常只能通过引用其键来检索，因此学习如何查询特定的键-值对通常很简单。键值数据库非常适合需要存储大量数据但不需要执行复杂的查询来检索数据的用例。常见的用例包括存储用户偏好或缓存。Ex: [雷迪斯](https://redis.io/)， [DynamoDB](https://aws.amazon.com/dynamodb/) ，[伏地魔](https://www.project-voldemort.com/voldemort/) / [威尼斯](https://engineering.linkedin.com/blog/2017/04/building-venice--a-production-software-case-study) (Linkedin)
3.  **宽列存储:**它们在表、行和动态列中存储数据。与关系数据库相比，宽列存储提供了很大的灵活性，因为不要求每行都有相同的列。许多人认为宽列存储是二维键值数据库。当您需要存储大量数据并且可以预测您的查询模式时，宽列存储非常有用。宽列存储通常用于存储物联网数据和用户档案数据。 [Cassandra](https://cassandra.apache.org/) 和 [HBase](https://hbase.apache.org/) 是两家最受欢迎的宽栏商店。
4.  **图数据库:**这些数据库在节点和边中存储数据。节点通常存储关于人、地点和事物的信息，而边存储关于节点之间关系的信息。图形数据库的底层存储机制可以变化。一些依赖于关系引擎并将图形数据“存储”在表中(尽管表是逻辑元素，因此这种方法在图形数据库、图形数据库管理系统和实际存储数据的物理设备之间强加了另一个抽象级别)。还有一些使用键值存储或面向文档的数据库进行存储，这使它们具有固有的 NoSQL 结构。图形数据库在需要遍历关系以寻找模式的用例中表现出色，例如社交网络、欺诈检测和推荐引擎。Ex: [Neo4j](https://neo4j.com/)
### **比较**
|  | 表演 | 可测量性 | 灵活性 | 复杂性 | 功能 |
| 关键字值 | 高的 | 高的 | 高的 | 没有人 | 可变的 |
| 文档存储 | 高的 | 可变(高) | 高的 | 低的 | 可变(低) |
| 列数据库 | 高的 | 高的 | 温和的 | 低的 | 最小的 |
| 图表 | 可变的 | 可变的 | 高的 | 高的 | 图论 |
### SQL 和 NoSQL 的区别
下表总结了 SQL 和 NoSQL 数据库之间的主要差异。
|  | SQL 数据库 | NoSQL 数据库 |
| 数据存储模型 | 具有固定行和列的表格 | Document: JSON documents，Key-value: key-value 对，Wide-column:包含行和动态列的表，Graph:节点和边 |
| 主要目的 | 通用 | 文档:通用，键值:具有简单查找查询的大量数据，宽列:具有可预测查询模式的大量数据，图形:分析和遍历连接数据之间的关系 |
| 计划 | 严格的 | 灵活的 |
| 扩缩容 | 垂直(纵向扩展到更大的服务器) | 水平(跨商用服务器横向扩展) |
| 多记录[酸](https://en.wikipedia.org/wiki/ACID)交易 | 支持 | 大多数不支持多记录 ACID 事务。然而，有些——比如 MongoDB——会。 |
| 连接 | 通常需要 | 通常不需要 |
| 数据到对象的映射 | 需要 ORM(对象关系映射) | 许多不需要 ORM。在大多数流行的编程语言中，文档 DB 文档直接映射到数据结构。 |
### 优势
*   **灵活的数据模型**
    大多数 NoSQL 系统都具有灵活的模式。灵活的模式意味着您可以轻松地修改数据库模式来添加或删除字段，以支持不断发展的应用需求。这有助于在没有数据库操作开销的情况下不断开发新功能的应用。
*   **水平缩放**
    大多数 NoSQL 系统允许您进行水平扩展，这意味着您可以在任何想要扩展系统的时候添加更便宜的商品硬件。另一方面，SQL 系统通常是垂直扩展的(更强大的服务器)。与传统的 SQL 系统相比，NoSQL 系统还可以托管巨大的数据集。
*   **快速查询**
    由于数据非规范化和水平扩展，NoSQL 通常比传统的 SQL 系统快得多。大多数 NoSQL 系统也倾向于将相似的数据存储在一起，以促进更快的查询响应。
*   **开发人员生产力**
    NoSQL 系统倾向于基于编程数据结构来映射数据。因此，开发人员需要执行更少的数据转换，从而提高生产率和减少错误。