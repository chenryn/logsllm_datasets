# 前言
一次逛博客中，遇到了YXcms，难度不高，适合我这种小白。于是它就成为我的代码审计的第二弹了。
# 审计过程
首先了解这个cms的目录结构
    data    存放备份数据
    protected   网站程序核心文件夹
    public  存放css、images、js、swf等模板公用文件
    upload  存放上传文件
    .htaccess   apache伪静态规则文件
    httpd.ini   iis伪静态规则文件
    index.php   网站入口
    robots.txt  robots协议
    升级日志.txt    详细升级日志记录文件
然后通过YXcms手册了解YXcms的后台路径等  
## 前台XSS
``
### 源码分析
`\protected\apps\default\controller\columnController.php`
    public function index()
        {
            $ename=in($_GET['col']);
            if(empty($ename)) throw new Exception('栏目名不能为空~', 404);
            $sortinfo=model('sort')->find("ename='{$ename}'",'id,name,ename,path,url,type,deep,method,tplist,keywords,description,extendid');
            $path=$sortinfo['path'].','.$sortinfo['id'];
            $deep=$sortinfo['deep']+1;
            $this->col=$ename;
            switch ($sortinfo['type']) {
                case 1://文章
                    $this->newslist($sortinfo,$path,$deep);
                    break;
                case 2://图集
                    $this->photolist($sortinfo,$path,$deep);
                    break;
                case 3://单页
                    $this->page($sortinfo,$path,$deep);
                    break;
                case 4://应用
                    break;
                case 5://自定义
                    break;
                case 6://表单
                    $this->extend($sortinfo,$path,$deep);
                    break;
                default:
                    throw new Exception('未知的栏目类型~', 404);
                    break;
            }
        }
      protected function extend($sortinfo,$path,$deep)
        {
            $tableid=$sortinfo['extendid'];
            if(empty($tableid)) $this->error('表单栏目不存在~');
            $tableinfo = model('extend')->select("id='{$tableid}' OR pid='{$tableid}'",'id,tableinfo,name,type,defvalue','pid,norder DESC');
            if(empty($tableinfo)) $this->error('自定义表不存在~');
            $urls=explode('|', $sortinfo['url']);
            // var_dump($tableinfo);
            // var_dump($urls);
            // exit();
            if (!$this->isPost()) {
               ...
            }else{
               session_starts();
               $verify=session('verify');
               session('verify',null);
               if(empty($verify) || $_POST['checkcode']!=$verify) $this->error('验证码错误，请重新输入');
               for($i=1;$i65535) $this->error('提交内容超过限制长度~');
                    $data[$tableinfo[$i]['tableinfo']]=html_in($_POST[$tableinfo[$i]['tableinfo']],true);
                }
               }
               $data['ip']=get_client_ip();
               $data['ispass']=0;
               $data['addtime']=time();
               if(empty($urls[1])) $jump=$_SERVER['HTTP_REFERER'];
               else{
                  $jurl=explode(',',$urls[1]);
                  if(!empty($jurl[1])){
                    $arr=explode('/',$jurl[1]);
                    if(!empty($arr)){
                      $canshu=array();
                      foreach ($arr as $vo) {
                         $val=explode('=',$vo);
                         $canshu[$val[0]]=$val[1];
                      }
                    }
                  }
                  $jump=url($jurl[0],$canshu); 
               }
               $mes=$urls[2]?$urls[2]:'提交成功请等待审核~';
               if(model('extend')->Extin($tableinfo[0]['tableinfo'],$data)) $this->success($mes,$jump);
               else $this->error('提交失败~');
             }
        }
这里使用两个函数对前端输入进行过滤`html_in`和`deletehtml`  
`/protected/include/lib/common.function.php`  
`deletehtml`
    //去除html js标签
    function deletehtml($document) {
        $document = trim($document);
        if (strlen($document) ]*?>'si",          // 去掉 HTML 标记
                      "'([rn])[s]+'",                // 去掉空白字符
                      "'&(quot|#34);'i",                // 替换 HTML 实体
                      "'&(amp|#38);'i",
                      "'&(lt|#60);'i",
                      "'&(gt|#62);'i",
                      "'&(nbsp|#160);'i"
                      );                    // 作为 PHP 代码运行
         $replace = array ("",
                       "",
                       "\1",
                       """,
                       "&",
                       "",
                       " "
                       );
        return @preg_replace ($search, $replace, $document);
    }
注释的很清楚了 ，去除html js标签  
`html_in`  
`/protected/include/lib/common.function.php`
    function html_in($str,$filter=false){
        if($filter){
            $str=RemoveXSS($str);
        }
        $str=htmlspecialchars($str);
        if(!get_magic_quotes_gpc()) {
            $str = addslashes($str);
        }
       return $str;
    }
使用函数`htmlspecialchars`和`RemoveXSS`对XSS进行过滤。
`RemoveXSS`
    function RemoveXSS($val) {  
       // remove all non-printable characters. CR(0a) and LF(0b) and TAB(9) are allowed  
       // this prevents some character re-spacing such as   
       // note that you have to handle splits with n, r, and t later since they *are* allowed in some inputs  
       $val = preg_replace('/([x00-x08,x0b-x0c,x0e-x19])/', '', $val);  
       // straight replacements, the user should never need these since they're normal characters  
       // this prevents like   
       $search = 'abcdefghijklmnopqrstuvwxyz'; 
       $search .= 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';  
       $search .= '1234567890!@#$%^&*()'; 
       $search .= '~`";:?+/={}[]-_|'\'; 
       for ($i = 0; $i  0) { 
                   $pattern .= '(';  
                   $pattern .= '(&#[xX]0{0,8}([9ab]);)'; 
                   $pattern .= '|';  
                   $pattern .= '|(&#0{0,8}([9|10|13]);)'; 
                   $pattern .= ')*'; 
                } 
                $pattern .= $ra[$i][$j]; 
             } 
             $pattern .= '/i';  
             $replacement = substr($ra[$i], 0, 2).''.substr($ra[$i], 2); // add in <> to nerf the tag  
             $val = preg_replace($pattern, $replacement, $val); // filter out the hex tags  
             if ($val_before == $val) {  
                // no replacements were made, so exit the loop  
                $found = false;  
             }  
          }  
       }  
       return $val;  
    }
过滤一些危险标签，防止出现XSS  
通过测试，前端输入的``
在数据库中是：`&lt;svg/on&lt;x&gt;load=alert(1)&gt;`这样的  
然后我们来看从数据库取值的函数  
`protected/apps/admin/controller/extendfieldController.php`
    public function mesedit()
        {
            $tableid=intval($_GET['tabid']);
            if(!$this->checkConPower('extend',$tableid)) $this->error('您没有权限管理此独立表内容~');
            $id=intval($_GET['id']);//信息id
            if(empty($tableid) || empty($id) ) $this->error('参数错误~');
            $tableinfo = model('extend')->select("id='{$tableid}' OR pid='{$tableid}'",'id,tableinfo,name,type,defvalue','pid,norder DESC');
            if(empty($tableinfo)) $this->error('自定义表不存在~');
            if (!$this->isPost()) {
               $info=model('extend')->Extfind($tableinfo[0]['tableinfo'],"id='{$id}'");
               // var_dump($info);
               // exit();
               $this->info=$info;
               $this->tableid=$tableid;
               $this->id=$id;
               $this->tableinfo=$tableinfo;
               $this->display();
            }else{
               for($i=1;$iExtup($tableinfo[0]['tableinfo'],"id='{$id}'",$data)) $this->success('修改成功~',url('extendfield/meslist',array('id'=>$tableid)));
               else $this->error('信息修改失败~');
             }
        }
取值就是正常取值，但是接下来的给页面返回代码，就离谱
    $cont.='';
                  for($i=1;$i'.$tableinfo[$i]['name'].'：';
                     switch ($tableinfo[$i]['type']) {
                           case 1:
                           $cont.= '';
                           break;
                        case 2:
                           $cont.= ''.$info[$tableinfo[$i]['tableinfo']].'';
                           break;
                        case 3:
                           $cont.= ''.html_out($info[$tableinfo[$i]['tableinfo']]).'';
                           break;
                        case 4:
                           $cont.= '';    
                        $chooses=explode("rn",$tableinfo[$i]['defvalue']);
                        $flog=false;
                        foreach ($chooses as $vo) {
                            $vos=explode(",",$vo);
                            if($info[$tableinfo[$i]['tableinfo']]==$vos[0]) {
                                $flog=true;
                                $cont.=''.$vos[1].'';
                            }else{
                                $cont.=''.$vos[1].'';
                            }
                        }
                        if(!$flog) $cont.='=没有选择=';