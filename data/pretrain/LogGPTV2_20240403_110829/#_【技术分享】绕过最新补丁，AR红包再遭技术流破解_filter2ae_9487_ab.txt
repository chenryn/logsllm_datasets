    src.at(i, j)[0] = src.at(i - 1, j)[0];
    src.at(i, j)[1] = src.at(i - 1, j)[1];
    src.at(i, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 1, j)[0] = src.at(i - 1, j)[0];
    src.at(i + 1, j)[1] = src.at(i - 1, j)[1];
    src.at(i + 1, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 2, j)[0] = src.at(i + 4, j)[0];
    src.at(i + 2, j)[1] = src.at(i + 4, j)[1];
    src.at(i + 2, j)[2] = src.at(i + 4, j)[2];
    src.at(i + 3, j)[0] = src.at(i + 4, j)[0];
    src.at(i + 3, j)[1] = src.at(i + 4, j)[1];
    src.at(i + 3, j)[2] = src.at(i + 4, j)[2];
    }
    if (i>5 && i(i, j)[0] = src.at(i - 1, j)[0];
    src.at(i, j)[1] = src.at(i - 1, j)[1];
    src.at(i, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 1, j)[0] = src.at(i - 1, j)[0];
    src.at(i + 1, j)[1] = src.at(i - 1, j)[1];
    src.at(i + 1, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 2, j)[0] = src.at(i + 3, j)[0];
    src.at(i + 2, j)[1] = src.at(i + 3, j)[1];
    src.at(i + 2, j)[2] = src.at(i + 3, j)[2];
    }
    if (i > 48 && i (i, j)[0] = src.at(i - 1, j)[0];
    src.at(i, j)[1] = src.at(i - 1, j)[1];
    src.at(i, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 1, j)[0] = src.at(i - 1, j)[0];
    src.at(i + 1, j)[1] = src.at(i - 1, j)[1];
    src.at(i + 1, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 2, j)[0] = src.at(i + 3, j)[0];
    src.at(i + 2, j)[1] = src.at(i + 3, j)[1];
    src.at(i + 2, j)[2] = src.at(i + 3, j)[2];
    }
    if (i > 97 && i (i, j)[0] = src.at(i - 1, j)[0];
    src.at(i, j)[1] = src.at(i - 1, j)[1];
    src.at(i, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 1, j)[0] = src.at(i - 1, j)[0];
    src.at(i + 1, j)[1] = src.at(i - 1, j)[1];
    src.at(i + 1, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 2, j)[0] = src.at(i + 3, j)[0];
    src.at(i + 2, j)[1] = src.at(i + 3, j)[1];
    src.at(i + 2, j)[2] = src.at(i + 3, j)[2];
    }
    if (i > 147 && i(i, j)[0] = src.at(i - 1, j)[0];
    src.at(i, j)[1] = src.at(i - 1, j)[1];
    src.at(i, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 1, j)[0] = src.at(i - 1, j)[0];
    src.at(i + 1, j)[1] = src.at(i - 1, j)[1];
    src.at(i + 1, j)[2] = src.at(i - 1, j)[2];
    src.at(i + 2, j)[0] = src.at(i + 3, j)[0];
    src.at(i + 2, j)[1] = src.at(i + 3, j)[1];
    src.at(i + 2, j)[2] = src.at(i + 3, j)[2];
    }
    if (i == 43 || i == 93 || i == 143 || i == 193)
    {
    src.at(i, j)[0] = src.at(i + 2, j)[0];
    src.at(i, j)[1] = src.at(i + 2, j)[1];
    src.at(i, j)[2] = src.at(i + 2, j)[2];
    src.at(i + 1, j)[0] = src.at(i + 2, j)[0];
    src.at(i + 1, j)[1] = src.at(i + 2, j)[1];
    src.at(i + 1, j)[2] = src.at(i + 2, j)[2];
    }
来看看处理的效果。
**后记**
最后来说一下之前提到的支付宝使用100*100像素图片代替200*200像素图片存在的问题。由于后者清晰，因此容易进行PS，而前者比较模糊，PS效果不好，不过这也导致其识别效果不理想，按常理来说一个有棱有角的图片应该比一个模糊的图片容易识别的多，而图片模糊会造成识别上的误差，可能用户对实景进行扫描也没办法得到红包。因此个人认为比较好的解决方法应该是增强对于实景和图片的区别能力，毕竟叫AR红包，无法识别现实何来增强现实？
**传送门**
* * *
[**【技巧分享】技术流花式“破解”支付宝AR红包，更多技巧征集中**
****](http://bobao.360.cn/learning/detail/3336.html)