### Messaging and Hierarchical Structure
Messaging will be utilized, with the specific scenario and protocol determined by the network attacks ontology. This determination is based on the type of goal (intention) and the response of the attacked network. The set of agents involved in realizing the specific scenario forms a hierarchical structure.

### Related Works
The literature relevant to attack modeling and simulation can be categorized into several groups:
1. Works describing attacks and attack taxonomies.
2. Works directly related to attack modeling and simulation.
3. Works focused on attack specification languages.
4. Works on evaluating Intrusion Detection Systems (IDSs).
5. Works on signature and traffic generation tools.

This list is not exhaustive but provides a comprehensive overview of the field.

#### Attack Taxonomies
Several works have systematized attack cases into taxonomies, such as [2], [7], [18], [24], [25], and others. Based on these, we developed our own taxonomy as an ontology, which includes a hierarchy of intentions and actions of malefactors aimed at implementing various classes of attacks, divided into macro- and micro-levels.

#### Temporal Orderings of Actions
In many studies on attack modeling and simulation, attacks are considered as sequences of actions. For instance, [6] presents an approach to simulate intrusions in both sequential and parallelized forms. [22] uses state transition analysis to model host-based intrusions, where an attack is described by a "safe" starting state, zero or more intermediate states, and at least one "compromised" ending state. [23] extends this technique to network-based intrusion detection, while [8] proposes a simple network security model called the "Cause-Effect Model of Information System Attacks and Defenses." [39] and [40] describe descriptive models of the network and the attacker's capabilities, intentions, and courses-of-action, using principles from economics to predict attacker behavior. [36] compares traditional and new attack paradigms, with the new paradigm emphasizing distributed metastasis using a multi-agent approach. Our formal model incorporates temporal orderings of actions and a multi-agent teamwork-based approach for modeling coordinated distributed attacks.

#### Tree-Based Attack Representation
Some works, such as [19] and [32], use a structured and reusable "tree"-based form to model attacks. [19] presents a high-level conceptual model of attack based on the intruder's intention, represented as a goal-tree. [32] describes means for documenting attacks in the form of attack trees, which enumerate and elaborate the ways an attacker could cause an event to occur. Our approach also uses intension- and tree-based attack strategy representation but extends it with a formal framework based on context-free grammars implemented in terms of state machines.

#### Survivability Modeling
[31] develops a model to evaluate the survivability of networked systems after incidents, consisting of three sub-models: incident simulation, impact evaluation, and survivability assessment. Our approach includes a model of the attacked computer network that evaluates the impact of an attack on hosts and generates the network's reaction. The variance of attacks is ensured by the random choice of grammar productions, and the malefactor's strategy depends on the results of intermediate actions.

#### Cyber Attack Simulation
[5] describes a cyber attack modeling and simulation methodology based on the SES/MB (System Entity Structure and Model Base) framework and Discrete Event Simulation (DEVS) formalism. This methodology allows for threat classification, attack mechanism specification, protection mechanism verification, and consequence evaluation. Our approach has similar goals but uses a stochastic formal-grammar-based specification of the malefactor's intentions and scenarios of network attacks.

#### Attack Languages
Special attack languages are used for fixing, reproducing, analyzing, recognizing, responding to, and documenting attacks. These include event languages, exploit languages, reporting languages, detection languages, correlation languages, response languages, and integrated languages. Our formal language is related to exploit and event languages, as it is used to describe attack stages and the format of generated events. It includes parts for describing attack preconditions, intentions, actions, formats of terminal-level actions, and postconditions (states of the attacked hosts).

#### IDS Evaluation
Many works on IDS evaluation consider attack simulation. [35] describes a methodology and software tools for testing IDSs using scripts to generate background traffic and intrusions. [26] and other evaluations by the Lincoln Laboratory at MIT provide sniffer network traffic, audit data, and file-system snapshots. [11] discusses issues associated with generating suitable background traffic, and [2] and [27] highlight the need for more generic and systematic benchmarking of IDSs. Our approach allows for evaluating and verifying IDSs at different phases of their development and implementation, with more detailed attack representation leading to more advanced IDS evaluation.

#### Signature and Traffic Generation Tools
There are numerous signature and traffic generation tools available, such as FlameThrower, Fragrouter, Hailstorm, IDS Informer, MS WCAT, nidsbench, SmartBits, and Stick. However, many of these tools generate only simulated pseudorandom malicious packets. Hailstorm and IDS Informer stand out, with Hailstorm generating traffic based on patterns and IDS Informer allowing the launch of S.A.F.E. (Simulated Attacks for Evaluation) attacks. In our approach, malicious and background traffic on the terminal levels are formed within the context of valid sessions.

### Conclusion
In this paper, we consider an attack as a competition between malefactors and a computer network security system. We propose a formal grammar-based framework for attack modeling and discuss the basic issues of attack simulator development. The framework is built as a hierarchy of attribute stochastic context-free grammars interconnected via the "grammar substitution" operation, enabling the specification and simulation of a wide spectrum of attacks at various levels of detail. A software prototype of the attack simulator has been developed, allowing the simulation of a wide range of real-life attacks. The respective software code is written using Visual C++ 6.0, Java 2 version 1.3.1, KQML, and XML languages. The basic ideas of modeling and simulating coordinated distributed attacks have been developed.

### Acknowledgments
This research is funded by the European Office of Aerospace R&D (Projects #1994 P) and grant #01-01-108 of the Russian Foundation of Basic Research.

### References
1. Aho, A.V., Ullman, J.D.: The Theory of Parsing, Translation, and Compiling, Vol. 1, 2, Prentice-Hall, Inc. (1972)
2. Alessandri, D., Cachin, C., Dacier, M., Deak, O., Julisch, K., Randell, B., Rior-dan, J., Tscharner, A., Wespi, A., Wuest, C.: Towards a Taxonomy of Intrusion Detection Systems and Attacks. MAFTIA deliverable D3. Version 1.01. Project IST-1999-11583. Malicious- and Accidental-Fault Tolerance for Internet Applications (2001)
3. Bishop, M.: A standard audit trail format. Technical report, Department of Computer Science, University of California at Davis (1995)
4. Custom Attack Simulation Language (CASL). Secure Networks (1998)
5. Chi, S.-D., Park, J.S., Jung, K.-C., Lee, J.-S.: Network Security Modeling and Cyber Attack Simulation Methodology. Lecture Notes in Computer Science, Vol.2119 (2001)
6. Chung, M., Mukherjee, B., Olsson, R.A., Puketza, N.: Simulating Concurrent Intrusions for Testing Intrusion Detection Systems: Parallelizing Intrusions. Proceedings of the 18th NISSC (1995)
7. Cohen, F.B.: Information System Attacks: A Preliminary Classification Scheme. Computers and Security, Vol.16, No.1 (1997)
8. Cohen, F.: Simulating Cyber Attacks, Defenses, and Consequences. IEEE Symposium on Security and Privacy, Berkeley, CA (1999)
9. Cuppens, F., Ortalo, R.: Lambda: A language to model a database for detection of attacks. RAID’2000, Lecture Notes in Computer Science, Vol.1907 (2000)
10. Curry, D.: Intrusion detection message exchange format, extensible markup language (xml) document type definition. draft-ietf-idwg-idmef-xml-02.txt (2000)
11. Debar, H., Dacier, M., Wespi, A., Lampart, S.: An experimentation workbench for intrusion detection systems. Research Report RZ-2998 (# 93044). IBM Research Division, Zurich Research Laboratory (1998)
12. Eckmann, S.T., Vigna, G., Kemmerer, R.A.: STATL: An Attack Language for State-based Intrusion Detection. Proceedings of the ACM Workshop on Intrusion Detection, Athens, Greece (2000)
13. Feiertag, R., Kahn, C., Porras, P., Schnackenberg, D., Staniford-Chen, S., Tung, B.: A common intrusion specification language (cisl). specification draft (1999)
14. Fu, K.S.: Syntactic Methods in Pattern Recognition, Academic Press, New York (1974)
15. Glushkov, V., Tseitlin, G., Yustchenko, E.: Algebra, Languages, Programming. Naukova Dumka Publishers, Kiev (1978) (In Russian).
16. Gorodetski, V., Karsayev, O., Kotenko, I., Khabalov, A.: Software Development Kit for Multi-agent Systems Design and Implementation. Lecture Notes in Artificial Intelligence, Vol. 2296, Springer Verlag (2002)
17. Hailstorm. Users Manual, 1.0 (2000) http://www.clicktosecure.com/
18. Howard, J.D., Longstaff, T.A.: A Common Language for Computer Security Incidents, SANDIA REPORT, SAND98-8667 (1998)
19. Huang, M.-Y., Wicks, T.M.: A Large-scale Distributed Intrusion Detection Framework Based on Attack Strategy Analysis. RAID’98, Louvain-la-Neuve (1998)
20. Icove, D., Seger K., VonStorch, W.: Computer Crime: A Crimefighter’s Handbook, O’Reilly & Associates, Inc., Sebastopol, CA (1995)
21. IDS Informer 3.0. User Guide. BLADE Software (2001)
22. Iglun, K., Kemmerer, R.A., Porras, P.A.: State Transition Analysis: A Rule-Based Intrusion Detection System. IEEE Transactions on Software Engineering, Vol. 21, No.3 (1995)
23. Kemmerer, R.A., Vigna, G.: NetSTAT: A network-based intrusion detection approach. Proceedings of the 14th ACSAC, Scottsdale, Arizona (1998)
24. Krsul, I.V.: Software Vulnerability Analysis, Ph.D. Dissertation, Computer Sciences Department, Purdue University, Lafayette, IN (1998)
25. Lindqvist, U., Jonsson, E.: How to Systematically Classify Computer Security Intrusions. Proceedings of the 1997 IEEE Symposium on Security and Privacy, IEEE Computer Society Press, Los Alamitos, CA (1997)
26. Lippmann, R., Haines, J.W., Fried, D.J., Korba, J., Das, K.: The 1999 DARPA off-line intrusion detection evaluation. RAID’2000, Lecture Notes in Computer Science, Vol.1907 (2000)
27. McHugh, J.: The 1998 Lincoln Laboratory IDS Evaluation: A Critique. RAID’2000, Lecture Notes in Computer Science, Vol.1907 (2000)
28. McHugh, J.: Intrusion and intrusion detection. International Journal of Information Security, No.1 (2001)
29. Me, L.: Gassata, a genetic algorithm as an alternative tool for security audit trails analysis. RAID’98, Louvain-la-Neuve (1998)
30. Michel, C., Me, L.: ADeLe: an Attack Description Language for Knowledge-based Intrusion Detection. Proceedings of the 16th International Conference on Information Security, Kluwer (2001)
31. Moitra, S.D., Konda S.L.: A Simulation Model for Managing Survivability of Networked Information Systems, Technical Report CMU/SEI-2000-TR-020 ESC-TR-2000-020 (2000)
32. Moore, A.P., Ellison, R.J., Linger, R.C.: Attack Modeling for Information Security and Survivability. Technical Note CMU/SEI-2001-TN-001 (2001)
33. http://www.ontology.org/
34. Paxson, V.: Bro: A system for detecting network intruders in real-time. Proceedings of the 7th Usenix Security Symposium (1998)
35. Puketza, N., Chung, M., Olsson, R.A., Mukherjee, B.: A Software Platform for Testing Intrusion Detection Systems. IEEE Software, Vol.14, No.5 (1997)
36. Stewart, A.J.: Distributed Metastasis: A Computer Network Penetration Methodology. The Packet Factory (1999) (Phrack Magazine, Vol. 9, Issue 55)
37. Tambe, M.: Towards Flexible Teamwork. Journal of Artificial Intelligence Research, No.7 (1997)
38. Vigna, G., Eckmann, S.T., Kemmerer, R.A.: Attack Languages. Proceedings of the IEEE Information Survivability Workshop, Boston (2000)
39. Yuill, J., Wu, F., Settle, J., Gong, F., Huang, M.: Intrusion Detection for an On-Going Attack. RAID’99, West Lafayette, Indiana, USA (1999)
40. Yuill, J., Wu, F., Settle, J., Gong, F., Forno, R., Huang, M., Asbery, J.: Intrusion-detection for incident-response, using a military battlefield-intelligence process. Computer Networks, No. 34 (2000)