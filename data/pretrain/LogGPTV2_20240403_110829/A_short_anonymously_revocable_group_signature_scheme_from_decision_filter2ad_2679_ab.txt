requires that for all PPT A, the probability that A
wins the non-frameability game is negligible.
3. PRELIMINARIES
3.1 Bilinear Groups
Our scheme utilizes bilinear groups as follows:
1. G and T are cyclic groups of prime order p,
2. e is an eﬃciently computable bilinear map: G × G →
T , i.e., (1) for all u, v ∈ G and a, b ∈ Z, e(ua, vb) =
e(u, v)ab, and (2) e(g, g) (cid:54)= 1.
This bilinear map can be eﬃciently implemented with the
Tate pairing on supersingular curves. To reduce the length
of G elements, we can adopt supersingular curves with the
embedding degree 6.
3.2 Assumptions
Our scheme is based on the q-SDH assumption [2, 3] and
decision linear (DLIN) assumption [2, 3].
Definition 1
gorithm A , the probability
(q-SDH assumption). For all PPT al-
Pr[A(u, ua, . . . , u(aq )) = (b, u(1/a+b)) ∧ b ∈ Zp]
is negligible, where u ∈R G and a ∈R Zp.
Definition 2
rithm A, the probability
(DLIN assumption). For all PPT algo-
|Pr[A(u, v, w, ua, vb, wa+b) = 1]
−Pr[A(u, v, h, ua, vb, wc) = 1]|
is negligible, where u, v, w ∈R G and a, b, c ∈R Zp.
3.3 Proving Relations on Representations
As well as [2, 3, 6], we adopt signatures converted by
Fiat-Shamir heuristic from zero-knowledge proofs of knowl-
edge (P K). We call the signatures SP Ks. The SP Ks we
adopt are the generalization of the Schnorr signature. We
introduce the following notation.
SP K{(x1, . . . , xt) : R(x1, . . . , xt)}(M ),
which means a signature of message M by a signer who
knows secret values x1, . . . , xt satisfying a relation R(x1,
. . . , xt). This paper utilizes an SP K proving the knowledge
of a representation of C ∈ G to the bases g1, g2, . . . , gt ∈ G
on message M , which is denoted as
SP K{(x1, . . . , xt) : C = gx1
1 ··· gxt
t }(M ).
This can be also constructed on group T . The SP K can
be extended to proving multiple representations with equal
parts.
4. PROPOSED SCHEME
4.1 Construction Idea
The recent conventional group signature schemes (e.g., [2,
6]) with P M basically consist of a component for a member-
ship authentication and a component for P M ’s tracing the
signer. Thus, we can easily extract an untraceable group sig-
nature scheme without P M . We borrow this basic compo-
nent from Furukawa-Imai group signature scheme [6], which
is the one improved on the eﬃciency from [2] and is the most
eﬃcient pairing-based scheme. To this component, we add
an anonymously revoking method using the pairing.
For the comparison, we ﬁrst show the DDH-based method
In the method, a tag appended to every signature
of [4].
is computed as a pair of a random base S and T = Sxi∗
for signer’s secret xi∗ . When a signature with tag ( ˆS, ˆT )
is revoked, any signer with secret xi shows that he did not
produce tag ( ˆS, ˆT ) by the denying proof (D = ˆSγ, E = ˆT γ,
F = Dxi ) for γ ∈R Zp. The veriﬁer checks it by E (cid:54)= F .
Since the DDH assumption holds on T , we can simply adapt
this method to the pairing-based scheme. However, due to
long T elements, the signature becomes long.
In our method, the tag is computed as f ∈R G (via a hash
function), S = gxi∗ +β and T = f β for a public common
base g ∈ G and β ∈R Zp. Given tag ( ˆf , ˆS, ˆT ), the denying
proof is computed as D = gγ(xi+), E = ˆf , F = gγ and
G = ˆf γ for , γ ∈R Zp. Then, if and only if i = i∗, the
relation e( ˆf , D)/e(E, F ) = e(G, ˆS)/e( ˆT , F ) holds. Thus, the
veriﬁer can check the denying proof. On the other hand,
(f, S, T ) and (E, D, F, G) reveal no information on i or i∗
except for the check, under the DLIN assumption. Note
that all elements in the tag and the denying proof are from
G, and thus it is expected that the signature is shorter.
4.2 Proposed Algorithms and Protocols
Setup: The input of this algorithm is security parameter
1(cid:96), and the output is param.
1. Select bilinear groups G,T with the same prime order
p of length (cid:96), and the bilinear map e. Select hash
functions HG : {0, 1}∗ → G, and H : {0, 1}∗ → Zp.
2. Select g, g1, g2 ∈R G.
3. Output param = (p,G,T , e, HG, H, g, g1, g2).
KeyGen: The input of this algorithm is param, and the
output consists of gpk and msk.
1. Select X ∈R Zp and compute Y = gX .
2. Output gpk = (p,G,T , e, HG, H, g, g1, g2, Y ), msk =
X.
Join: This is an interactive protocol between the i-th joining
user Ui and GM . The common input is gpk = (p,G,T , e, HG,
H, g, g1, g2, Y ), and the input of GM is msk = X. The out-
put of Ui is usk[i].
1. Ui selects xi, y(cid:48)
i ∈ Zp, computes
1 gy(cid:48)
2 ,
(cid:48)
i = gxi
A
i
and sends A(cid:48)
i to GM .
2. In addition, Ui proves the validity of A(cid:48)
i using an SP K
for representations.
339
igy(cid:48)(cid:48)
2 g)1/(X+zi) for y(cid:48)(cid:48)
i , zi ∈R
i
3. GM computes Ai = (A(cid:48)
Zp, and return (Ai, y(cid:48)(cid:48)
4. Ui computes yi = y(cid:48)
i , zi) to Ui.
i + y(cid:48)(cid:48)
i mod p, veriﬁes e(Ai, Y gzi ) =
2 g, g), and obtains usk[i] = (Ai, xi, yi, zi) s.t.
= gxi
1 gyi
2 g.
1 gyi
e(gxi
AX+zi
i
Sign: The input of this algorithm consists of gpk = (p,G,T ,
e, HG, H, g, g1, g2, Y ), usk[i] = (Ai, xi, yi, zi), RL = (tag1,
. . . , tagk), and M ∈ {0, 1}∗, where tagj = ( ˆfj, ˆSj, ˆTj) ∈ G3
for all 1 ≤ j ≤ k. The output is σ.
1. Select a random nonce r ∈R Zp, and compute f =
HG(gpk(cid:107)M(cid:107)r).
2. Select a random α ∈R Zp, and compute a commitment
C = Aigα
2 .
3. Select a random β ∈R Zp, and compute S = gxi+β and
T = f β.
Deﬁne tag = (f, S, T ), which means the tag part of
this signature.
4. For all 1 ≤ j ≤ k, select a random j, γj ∈R Zp, and
j , Fj = gγj and
compute Dj = gγj (xi+j ), Ej = ˆfj
Gj = ˆfj
Deﬁne DPj = (Dj, Ej, Fj, Gj), which means the deny-
ing proof for tagj.
γj .
5. Compute an SP K V on message M proving knowledge
of xi, δ, α, zi, β, γ1,. . . , γk, 1, . . . , k s.t.
e(C, Y )/e(g, g) = e(g1, g)xi e(g2, g)δe(g2, Y )α/e(C, g)zi ,
S = gxi+β, T = f β,
, Ej = ˆfj
j , Fj = gγj , Gj = ˆfj
γj ,
Dj = F xi+j
j
for all 1 ≤ j ≤ k. The ﬁrstly proved equation ensures
the membership, which is derived from the underlying
group signature [6]. The other equations ensure the
validity of tag, and DP1, . . . , DPk.
6. Output σ = (r, C, tag, DP1, . . . , DPk, V ).
Verify: The inputs are gpk = (p,G,T , e, HG, H, g, g1, g2, Y ),
RL = (tag1, . . . , tagk), σ = (r, C, tag, DP1, . . . , DPk, V ),
and M ∈ {0, 1}∗, where tagj = ( ˆfj, ˆSj, ˆTj) and DPj =
(Dj, Ej, Fj, Gj) for all 1 ≤ j ≤ k. The output is ’valid’
or ’invalid’.
1. Check V .
2. Check e( ˆfj, Dj)/e(Ej, Fj) (cid:54)= e(Gj, ˆSj)/e( ˆTj, Fj) for all
1 ≤ j ≤ k. This inequation can be eﬃciently computed
by e( ˆfj, Dj) (cid:54)= e(Gj, ˆSj)e(Ej/ ˆTj, Fj).
3. If all checks are successful, output ’valid’. Otherwise,
output ’invalid’.
5. EFFICIENCY
To reduce the signature length on supersingular curves, we
can adopt the embedding degree 6. Then, to achieve 1024bit
DL diﬃculty, the sizes of G (also p) and T elements need 171
and 1026 bits, respectively. Let R be the number of revoked
members.
In this case, our signature needs 171(11 + 6R)
340
bits. On the other hand, in the DDH-based scheme, the
length is 171(7 + R) + 1026(2 + 3R) = 171(18 + 19R) bits.
As R varies from 0, the ratio of the length of our signature
to that of the DDH-based signature varies from about 60%
to about 30%, and the ratio is less than 40% in almost all
cases (R > 2). For example, if R = 10, our signature needs
12,141 bits and the DDH-based signature needs 35,568 bits,
and the ratio is about 34%.
In the same setting, the lengths of RL are 171 · 3R bits
and 1024·2R bits in our scheme and the DDH-based scheme,
respectively. Thus, the length of RL is 25%.
As for the performance, we ﬁrst evaluate the number of
pairings depending R in the veriﬁcation, which are domi-
nant costs. Our verifying algorithm needs 3R pairings, al-
though the DDH-based algorithm needs no pairing. This is
a disadvantage. However, since the veriﬁcation is executed
by authentication servers in the anonymous authentication,
the pairings can be treated by powerful servers.
Finally we compare the performance on signing. Our sign-
ing needs 1 multi-exponentiation on T and 5 + 8R exponen-
tiations on G (Pairings can be pre-computed). The DDH-
based one needs 3 + 6R (multi-)exponentiations on T and 1
exponentiation on G. Since the exponentiation on T is much
heavier than that on G, our scheme is more eﬃcient.
6. CONCLUSION
We have proposed a shorter anonymously revocable group
signature scheme. A future work is to implement the scheme
and to apply to the authentication in WEB servers.
7. REFERENCES
[1] M. Bellare, D. Micciancio, and B. Warinschi,
“Foundations of group signatures: Formal deﬁnitions,
simpliﬁed requirements, and a construction based on
general assumptions,” Proc. EUROCRYPT 2003, LNCS
2656, pp.614–629, 2003.
[2] D. Boneh, X. Boyen, and H. Shacham, “Short group
signatures,” Proc. CRYPTO 2004, LNCS 3152,
pp.41–55, 2004.
[3] D. Boneh and H. Shacham, “Group signatures with
veriﬁer-local revocation,” Proc. ACM-CCS ’04,
pp.168–177, 2004.
[4] E. Brickell and J. Li, “Enhanced privacy ID: A direct
anonymous attestation scheme with enhanced
revocation capabilities.” Proc. ACM-WPES ’07, also in
Cryptology ePrint Archive, Report 2007/194, 2007.
[5] D. Chaum and E. van Heijst, “Group signatures,” Proc.
EUROCRYPT ’91, LNCS 547, pp.241–246, 1991.
[6] J. Furukawa and H. Imai, “An eﬃcient group signature
scheme from bilinear maps,” Proc. ACISP 2005, LNCS
3574, pp.455–467, 2005.
[7] A. Kiayias, Y. Tsiounis, and M. Yung, “Traceable
signatures,” Proc. EUROCRYPT 2004, LNCS 3027,
pp.571–589, 2004.
[8] P.P. Tsang, M.H. Au, A. Kapadia, S.W. Smith,
“Blacklistable anonymous credentials: blocking
misbehaving users without TTPs,” Proc. ACM-CCS
’07, pp.72–81, 2007