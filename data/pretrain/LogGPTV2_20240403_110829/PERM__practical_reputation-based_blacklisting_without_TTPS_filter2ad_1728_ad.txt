be pre-computed relates to the digital signatures of the en-
tries on the list, where the commitments of such signatures
935Schemes
BLACR Normal
BLACR Express
Parties
User (w/pre-computation)
SP
User (w/pre-computation)
SP
PEREA (w/ Naughtiness) User
PERM
SP
User
User (w/pre-computation)
SP
Computation
(cid:0)(3 − ζ)L(cid:1)E1 + 1EPT + 1P
(cid:0)12L + 3(cid:96)J + 8J + 5(cid:1)E1 + 4J EP1 +(cid:0)5L + 5(cid:96)J + 5(cid:1)EPT +
(cid:0)L + (cid:96)J + 1)P +(cid:0)2L + 2(cid:96)J + 2(cid:1)EP2
(cid:0)(3 − ζ)L(cid:1)E1 + 1EPT + 1P
(cid:0)12∆L + 3(cid:96)J + 12J + 7(cid:1)E1 + 4JEP1 +(cid:0)5∆L + 5(cid:96)J + 4J + 9(cid:1)EPT +
(cid:0)∆L + (cid:96)J + 2)P +(cid:0)2∆L + 2(cid:96)J + 4(cid:1)EP2
3 (cid:101) + 12]EN2
3 (cid:101) + 8]EN2
[(A + 1)∆L]EN1 + [16K + (cid:100) K−1
[15K + (cid:100) K
[15KJ + 15K + 3J + 6(cid:96)J + 16]E1 +
[2K(cid:100) J+6
[K] E1 + (2K + 2)P
[5KJ + 6K + 2J + 4(cid:96)J + 16]E1 +
[3KJ + 3(cid:96)J + (cid:100) J+K+7
(cid:101) + K(cid:100) J+7
3 (cid:101) + 4KJ + (cid:100) J+K+6
3
(cid:101) + 2(cid:96)J]ET + [2KJ + 2K + J]P
3
3 (cid:101)]ET + [2KJ + 2K + 2J + 2]P
Table 1: Complexity analysis for BLAC, PEREA, and PERM. J is the total number of categories (cid:96) is the
number of sub-policies in the boolean policy, where each sub-policy is assumed to involve all J categories. For
BLACR and PEREA ∆L is the number of new entries on the reputation list since the previous time period.
Speciﬁc to BLACR, ζ is the fraction of entries belonging to the user in the reputation list.
are needed during the zero-knowledge proof. Each authen-
tication identiﬁer is associated with one signature, and thus
the user needs to compute K commitments online. Specif-
ically, the value A2 is not known oﬀ-line in protocol SSig.
Note that computing A2 does not require any exponentia-
tions (since the value gk1
2 does not depend on the value A
and can be pre-computed). However, in the proof two values
related to A2 are required: ˆe(A2, g) and ˆe(A2, w). Another
exponentiation to base A2 is needed in the production of the
‘OR’ part of the proof.
Performance at the SP. Figure 2(a) shows the perfor-
mance of authentication of PERM compared to the other
schemes at the SP. Au et al. argue that a server through-
put of 25 authentications/minute would be practical for SPs
such as Wikipedia [2, §5.2], and we use that as our baseline.
The amount of computation at the SP in both PEREA and
PERM are independent of the reputation list size and corre-
spond to the two horizontal lines. For PERM with K = 10,
the SP can support 10 authentications/minute as compared
to 23 for PEREA (PEREA is faster, but recall the severe
limitations to its functionality, i.e., reputation is calculated
over only the short revocation window). Since authentica-
tions are easily parallelized, additional servers can be used to
bring authentication rates higher. With 2–3 servers (costing
about $5–7.5K/year on Amazon EC2) these rates are more
than adequate for anonymous authentications on a large SP
such as Wikipedia.
For BLACR the worst case performance is too slow for
reputation lists with 1 million entries. Assuming three
servers, BLACR would be able to support only 3 authen-
tications every 1–2 hours. BLACR uses an ‘express lane’
technique to allow users who authenticated in the previous
time period to prove their reputation incrementally from the
last authentication. If we assume all users regularly authen-
ticate in the express lane (with 2% new entries since the
previous authentication), the SP can support 2 authentica-
tions per minute, which is still almost 10 times slower than
PERM. Since the performance of BLACR in the normal lane
is so slow, we do not attempt to ﬁt it into the graph (in
which case the curves for PEREA and PERM would not be
visible). Now consider the case of Wikimedia where the run-
ning count of edits exceeds 1.5 billion.7 In this case, PERM
7http://toolserver.org/~emijrp/wikimediacounter/
would be many thousands of times faster than BLACR for
those users who authenticate in the normal lane.
Performance at the user. Figure 2(b) shows the per-
formance of authentication of PERM compared to other
schemes at the user. PEREA’s main drawback was the lin-
ear increase in performance in both K and the reputation
list size at the user. Both BLACR in the normal lane and
PEREA (assuming only 2% new entries since the last au-
thentication) are unacceptably slow and we do not attempt
to ﬁt them within the graph. PEREA would take 38 minutes
of computation, and BLACR would take about 74 minutes
for a reputation list with 1 million entries. Assuming express
lane authentication, BLACR would take 88 seconds for the
user, which is much better (but recall the performance for
BLACR is unacceptable at the SP at this scale).
In con-
trast, PERM requires only 0.3 seconds of computation, and
is close to the X-axis in the graph.
Thus, considering both the performance at the SP and the
user for millions of entries on the reputation list, it is clear
that only PERM oﬀers a viable solution for reputation-based
blacklisting. As one can note, even for tens of millions (or
billions!) of entries, the performance at the SP and the user
would remain unchanged.
A note on BLACR-Unweighted. Since we compare PERM
to BLACR, we now describe our basis for this comparison.
The authors of BLACR propose a weighted extension in
which reputation scores can be increased for repeated misbe-
haviors by the same user, but we currently do not attempt to
replicate this ramp-up functionality. Referring to their tech-
nical report [5], the computational complexity of BLACR-
Unweighted at the user side is the same as that of BLACR-
Weighted. At the SP, BLACR-Unweighted is roughly 3 to 4
times faster than BLACR-Weighted. While the express-lane
authentication trick is not applied to BLACR-Unweighted,
their analysis shows that it is also applicable. Since we are
concerned with reputation list sizes of around a million, the
overhead applicable to the express-lane trick becomes neg-
ligible, and the rate-determining step is the number of ex-
ponentiations and pairing operations per entry of the list.
In BLACR-weighted the value is 19 exponentiations plus 1
pairing while the ﬁgure is 8 exponentiations for BLACR-
unweighted. Since 1 pairing operation takes roughly the
same time as 5 exponentiations, one can safely deduce that
BLACR-unweighted is at most 4 times faster than BLACR-
936(a) Authentication time at the SP. The horizontal curves cor-
respond to PEREA and PERM. BLACR with Normal Lane
is too slow and we do not attempt to ﬁt it into the graph. In-
stead, one could assume BLACR with Express Lane is always
used. As we can see, the authentication rates at the SP would
be too low for BLACR with 1 million reputation list entries,
whereas PERM supports practical authentication rates.
(b) Authentication time at User (includes precomputation).
As we can see authentication rates for BLACR with Normal
Lane and PEREA are unacceptably slow at the user. BLACR
with Express Lane is somewhat acceptable, and in comparison
the time taken by PERM is negligible at the user (and is close
to the X-axis).
Figure 2: Estimated authentication times at the SP and User and the cost for the SP. For the SP we assume
a server with 8 CPU cores, since such conﬁgurations are standard for servers. Likewise, we assume 4 CPU
cores for the user, since such conﬁgurations are more standard for consumer desktops and laptops.
weighted with the express lane trick applied. We make this
(conservative) assumption in our performance analysis.
5. DISCUSSION
Recently proposed alternative. FAUST [22] is the most re-
cent scheme in the revocation window paradigm and aims
to improve performance over PEREA. While FAUST is not
designed speciﬁcally for reputation, it can simulate at least
part of the functionality by making users maintain a col-
lection of tokens. As individual tokens get revoked (for a
misbehavior with score 5, for example, 5 tokens can be re-
voked), users may eventually not have the threshold number
of tokens left to authenticate. The downside with this ap-
proach is that it is not collusion resistant and individual
revoked users can pool their tokens together to gain access.
Existing schemes such as BLACR, PEREA, and our PERM
do not suﬀer from this drawback. Furthermore, FAUST can-
not support general reputation-based policies (across cate-
gories for example) and thresholds cannot be changed after
tokens have been issued (the number of authenticator to-
kens needs to be determined after the policy has been set).
Because of these limitations we do not consider FAUST to
be a viable solution for reputation-based blacklisting. Nev-
ertheless, FAUST has novel features that can be leveraged
by PERM. For example, we assume that users download all
the signatures for entries on the reputation lists (so as not
to reveal which transaction identiﬁers are in their queue).
FAUST shows how users can selectively download diﬀerent
subsets while maintaining statistical privacy. We leave such
combinations to future work, although we believe that the
downlink complexity of PERM is already reasonable.
Revocation window. While PERM greatly improves per-
formance over BLACR, BLACR can score sessions at any
time, even long after the session (e.g., months later). PERM
on the other hand requires that sessions be scored within the
revocation window, which is on the order of hours to a couple
of days in practical settings. The authors of FAUST argue,
“89% of vandalism instances were repaired within 100 views
[on Wikipedia]...[revocation windows] as low as 30 minutes
seem feasible” [22]. Thus, while some ﬂexibility is traded
oﬀ for performance, the revocation-window-based setting is
practical for SPs such as Wikipedia. Nevertheless, we point
out that positive scores may materialize over longer time
periods, where, for example, an uploaded video becomes
popular after several months. In those cases we show how
reputation can be upgraded in PERM, thus oﬀering a novel
improvement to revocation-window-based schemes.
Unblacklisting. Related to the previous discussion point,
SPs can unblacklist (forgive) misbehaviors by simply up-
grading negative scores to zero.
Sybil attacks. Any credential scheme (including BLACR
and PEREA) is vulnerable to the Sybil attack, where if one
credential is revoked by PERM, the user may attempt to
obtain another credential. We assume some Sybil-resistant
mechanism while issuing credentials, as must be assumed
with any such scheme. For example, an organization (e.g. a
company or a university) already has the means to issue one
credential per member in the organization. Online services
could require a credit card and make note of which identities
(using the identity on the credit card) have been issued cre-
dentials. This identity-revealing step is reasonable because
future authentications are anonymous and the identity is
used only during the step of issuing credentials.
Side channels. In PERM the amount of time taken to ver-
ify an authentication at the SP and the user is independent
of the list size and is the same for all authenticating users.
Therefore, PERM is resistant to side-channel leaks related
to the time it takes to authenticate. Of course, users on
 0 20 40 60 80 100 0 200000 400000 600000 800000 1e+06Authentication time (sec)Reputation List size (L)Authentication time at the server vs. Reputation List size, 8 CoresBLACR Normal LaneBLACR Express Lane (2% New)PERM K=10PEREA-Naughtiness K=10 0 20 40 60 80 100 0 200000 400000 600000 800000 1e+06Authentication time (sec)Reputation List size (L)Authentication time at the user vs. Reputation list size, 4 CoresBLACR Normal LanePEREA-Naughtiness K=10 (2% New)BLACR Express Lane (2% New)PERM K=10937diﬀerent platforms would exhibit diﬀerent latencies, and the
client software can delay each authentication to some small
constant (e.g. 2 seconds) so that all users exhibit uniform
behavior. Other side channels are out of scope for this work.
6. CONCLUSION
Since TTP-free anonymous blacklisting was ﬁrst intro-
duced, several advances have been made in an attempt to
make such schemes more practical and useful to service
providers. Recent work on BLACR attempted to generalize
the concept of anonymous blacklisting to allow reputation-
based blacklisting, but did not oﬀer a scalable solution. We
believe PERM is the ﬁrst scheme to support scalable and
practical reputation-based blacklisting and thus presents a
major advance in the progression of such schemes.
7. ACKNOWLEDGMENTS
We thank the late Patrick P. Tsang for his work on BLAC
and PEREA, which provided inspiration for the ideas in this
paper. We also thank the anonymous reviewers for their
comments and John McCurley for his editorial help.
8. REFERENCES
[1] G. Ateniese, J. Camenisch, M. Joye, and G. Tsudik. A
Practical and Provably Secure Coalition-Resistant
Group Signature Scheme. In CRYPTO, volume 1880
of Lecture Notes in Computer Science, pages 255–270.
Springer, 2000.
[2] M. H. Au, A. Kapadia, and W. Susilo. BLACR:
TTP-Free Blacklistable Anonymous Credentials with
Reputation. In Proceedings of The 19th Annual
Network and Distributed System Security Symposium
(NDSS), Feb. 2012.
[10] J. Camenisch and A. Lysyanskaya. A Signature
Scheme with Eﬃcient Protocols. In SCN, volume 2576
of Lecture Notes in Computer Science, pages 268–289.
Springer, 2002.
[11] J. Camenisch and A. Lysyanskaya. Signature Schemes
and Anonymous Credentials from Bilinear Maps. In
CRYPTO, volume 3152 of Lecture Notes in Computer
Science, pages 56–72, 2004.
[12] J. Camenisch and M. Stadler. Eﬃcient Group
Signature Schemes for Large Groups (Extended
Abstract). In B. S. K. Jr., editor, CRYPTO, volume
1294 of Lecture Notes in Computer Science, pages
410–424. Springer, 1997.
[13] D. Chaum and E. van Heyst. Group Signatures. In
EUROCRYPT, pages 257–265, 1991.
[14] R. Cramer, I. Damg˚ard, and B. Schoenmakers. Proofs
of Partial Knowledge and Simpliﬁed Design of Witness
Hiding Protocols. In Y. Desmedt, editor, CRYPTO,
volume 839 of Lecture Notes in Computer Science,
pages 174–187, 1994.
[15] R. Dingledine, N. Mathewson, and P. Syverson. Tor:
The Second-Generation Onion Router. In Usenix
Security Symposium, pages 303–320, Aug. 2004.
[16] S. Goldwasser, S. Micali, and C. Rackoﬀ. The
Knowledge Complexity of Interactive Proof Systems.
SIAM J. Comput., 18(1):186–208, 1989.
[17] S. Goldwasser, S. Micali, and R. L. Rivest. A Digital
Signature Scheme Secure Against Adaptive
Chosen-Message Attacks. SIAM J. Comput.,
17(2):281–308, 1988.
[18] R. Henry, K. Henry, and I. Goldberg. Making a
Nymbler Nymble Using VERBS. In Privacy
Enhancing Technologies, volume 6205 of Lecture Notes
in Computer Science, pages 111–129, 2010.
[3] M. H. Au, W. Susilo, and Y. Mu. Constant-Size
[19] P. C. Johnson, A. Kapadia, P. P. Tsang, and S. W.
Dynamic k-TAA. In SCN, volume 4116 of Lecture
Notes in Computer Science, pages 111–125. Springer,
2006.
[4] M. H. Au, P. P. Tsang, and A. Kapadia. PEREA:
Practical TTP-Free Revocation of Repeatedly
Misbehaving Anonymous Users. ACM Transactions on
Information and System Security, 14:29:1–29:34, Dec.
2011.
Smith. Nymble: Anonymous IP-Address Blocking. In
Privacy Enhancing Technologies, volume 4776 of
Lecture Notes in Computer Science, pages 113–133.
Springer, 2007.
[20] A. Kiayias, Y. Tsiounis, and M. Yung. Traceable
Signatures. In C. Cachin and J. Camenisch, editors,