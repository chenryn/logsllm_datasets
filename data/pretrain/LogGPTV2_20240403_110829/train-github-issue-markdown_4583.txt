![test
image](https://camo.githubusercontent.com/83c710b6f795a5c7f7c7c1e6765212a93e655a010dcb5a60bee5ed3c321af020/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f3533303938382f323231363537332f31613966393434382d396130642d313165332d383238382d6434633337646265666339322e706e67)
I believe the spacing between the polygons shouldn't be there. Below is my
code. Is this a bug or am I missing some option? It happens on all backends.
I know that I can enlarge the polygons slightly so that they overlap each
other which then removes these spaces, but this approach is only suitable for
very simple polygons like the rectangular ones above, and in my real use-case
I have arbitrarily shaped polygons, so that's not really an option.
    import numpy as np
    import matplotlib as mpl
    mpl.use('agg')
    import matplotlib.pyplot as plt
    from matplotlib.collections import PolyCollection
    def createPolygons(xv, yv):
        assert xv.shape == yv.shape
        xy = np.dstack((xv,yv))
        # adapted from matplotlib.collections.QuadMesh.convert_mesh_to_paths
        verts = np.concatenate((
                    xy[0:-1, 0:-1],
                    xy[0:-1, 1:  ],
                    xy[1:  , 1:  ],
                    xy[1:  , 0:-1],
                    ), axis=2)
        verts = verts.reshape((xv.shape[0]-1) * (xv.shape[1]-1), 4, 2)
        return verts
    def drawPlot(verts, outputFile, blackbg, widthPx):
        if blackbg:
            mpl.rcParams['savefig.facecolor'] = 'black'
        else:
            mpl.rcParams['savefig.facecolor'] = 'white'
        ax = plt.gca()
        fig = plt.gcf()
        if blackbg:
            fig.patch.set_facecolor('black')
            ax.patch.set_facecolor('black')
            ax.spines['bottom'].set_color('white')
            ax.spines['top'].set_color('white')
            ax.spines['left'].set_color('white')
            ax.spines['right'].set_color('white')
            for i in ax.get_xticklabels(): i.set_color("white")
            for i in ax.get_yticklabels(): i.set_color("white")
            for t in ax.xaxis.get_ticklines(): t.set_color('white')
            for t in ax.yaxis.get_ticklines(): t.set_color('white')
            ax.xaxis.label.set_color('white')
            ax.yaxis.label.set_color('white')
        coll = PolyCollection(verts, facecolors=None, edgecolors='none')
        ax.add_collection(coll)
        ax.autoscale()
        width = fig.get_figwidth()
        dpi = widthPx / width
        fig.savefig(outputFile, dpi=dpi)
        plt.close(fig)
    x = np.linspace(0, 10, num=10)
    xv, yv = np.meshgrid(x, x)
    verts = createPolygons(xv, yv)
    drawPlot(verts, 'test.png', blackbg=True, widthPx=500)