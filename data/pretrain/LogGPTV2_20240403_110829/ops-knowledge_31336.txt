User: System : SMEServer 8.1 (CentOS 5.10) 64bit, system python is 2.4.3
There is an alt python at /usr/local/bin/python2.7 (2.7.3) which was built some time ago.
Goal : build python2.7.10, mod_wsgi, django. First step is python 2.7.10 to replace the (older and broken) 2.7.3
What happens:
When i build the latest 2.7 python as shared, the wrong executable is built.  
cd /tmp && rm -vrf Python-2.7.10 && tar -xzvf Python-2.7.10.tgz && cd Python-2.7.10 && ./configure && make && ./python -V
2.7.10 <- as expected
... but this wont work with mod_wsgi - we have to --enable-shared.
cd /tmp && rm -vrf Python-2.7.10 && tar -xzvf Python-2.7.10.tgz && cd Python-2.7.10 && ./configure --enable-shared && make && ./python -V
2.7.3 <- Wrong version!
I'm deleting the entire build directory each time to isolate things and ensure I'm not polluting the folder with each attempt. Somehow the (years old) install of 2.7.3 is being 'found' by configure but only when '--enable-shared' is on.
cd /tmp && rm -vrf Python-2.7.10 && tar -xzvf Python-2.7.10.tgz && cd Python-2.7.10 && ./configure --prefix=/usr/local/ && make && ./python -V
2.7.10
cd /tmp && rm -vrf Python-2.7.10 && tar -xzvf Python-2.7.10.tgz && cd Python-2.7.10 && ./configure --enable-shared --prefix=/usr/local/ && make && ./python -V
2.7.3 <- ???
Where do I look to find how make is finding old versions?
Assistant: I'll document this here as the fix, also to hopefully get a comment from Graham as to why this might be needed;
Changing
make
to
LD_RUN_PATH=/usr/local/lib make 
was the answer, but i had to use this for building both python2.7.10 and mod_wsgi. Without using LD_RUN_PATH on mod_wsgi I still got the dreaded;

[warn] mod_wsgi: Compiled for Python/2.7.10.
[warn] mod_wsgi: Runtime using Python/2.7.3.