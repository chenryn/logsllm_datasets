User: 如何使用TCP/IP协议栈实现一个简单的网络聊天室程序？请提供代码示例。
Assistant: 以下是一个简单的网络聊天室程序的代码示例，使用TCP/IP协议栈：

服务端代码：

```
import socket

HOST = '127.0.0.1'
PORT = 8888

def server():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((HOST, PORT))
    s.listen(1)
    print('Server started...')
    conn, addr = s.accept()
    print('Connected by', addr)
    while True:
        data = conn.recv(1024)
        if not data:
            break
        print(f'Received from {addr}: {data.decode()}')
        msg = input('Server: ')
        conn.sendall(msg.encode())
    conn.close()

if __name__ == '__main__':
    server()
```

客户端代码:

```
import socket

HOST = '127.0.0.1'
PORT = 8888

def client():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((HOST, PORT))
    print('Connected to server...')
    while True:
        msg = input('Client: ')
        s.sendall(msg.encode())
        data = s.recv(1024)
        if not data:
            break
        print('Received from server:', data.decode())
    s.close()

if __name__ == '__main__':
    client()
```

通过调用server()函数和client()函数，可以启动服务端和客户端程序。运行服务端程序后，客户端程序可以连接到服务器，并与之交换信息。客户端程序可以向服务器发送文本消息，并接收来自服务器的响应消息。

注：此处的示例代码只是一个简单的TCP/IP协议栈实现的网络聊天室程序，仅供参考。实际使用中应考虑更多复杂的情况和安全问题。