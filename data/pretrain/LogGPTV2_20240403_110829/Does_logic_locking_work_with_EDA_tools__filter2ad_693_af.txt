[11] K. Azar, H. Kamali, H. Homayoun, and A. Sasan, “SMT At-
tack: Next Generation Attack on Obfuscated Circuits with
Capabilities and Performance Beyond the SAT Attacks,” IACR
Transactions on Cryptographic Hardware and Embedded Sys-
tems, vol. 2019, no. 1, pp. 97–122, 2018.
[12] R. Jarvis and M. McIntyre, “Split Manufacturing Method for
Advanced Semiconductor Circuits,” US Patent no. 7,195,931,
2007.
[13] J. Baukus, L. Chow, R. Cocchi, and B. Wang, “Method and
Apparatus for Camouﬂaging a Standard Cell based Integrated
Circuit with Micro Circuits and Post Processing,” US Patent
no. 20120139582, 2012.
[14] J. P. Skudlarek, T. Katsioulas, and M. Chen, “A Platform So-
lution for Secure Supply-Chain and Chip Life-Cycle Manage-
ment,” IEEE Computer, vol. 49, no. 8, pp. 28–34, 2016.
[15] S. Leef, “In Pursuit of Secure Silicon.” https://rb.gy/
ngjzfd, 2017. Last accessed on 09/28/20.
[16] D. P. Affairs, “DARPA Selects Teams to Increase Secu-
rity of Semiconductor Supply Chain.” https://www.darpa.
mil/news-events/2020-05-27, 2020. Last accessed on
10/05/2020.
[17] R. Chakraborty and S. Bhunia, “HARPOON: An Obfuscation-
Based SoC Design Methodology for Hardware Protection,”
IEEE Transactions on Computer-Aided Design of Integrated
Circuits and Systems, vol. 28, no. 10, pp. 1493–1502, 2009.
[18] A. Baumgarten, A. Tyagi, and J. Zambreno, “Preventing IC
Piracy Using Reconﬁgurable Logic Barriers,” IEEE Design &
Test of Computers, vol. 27, no. 1, pp. 66–75, 2010.
[19] Rambus, “Circuit camouﬂage technology.” https://rb.gy/
eowsah, 2017. Last accessed on 05/04/2020.
[20] Siemens, “TrustChain Security Platform.” https://rb.gy/
kcehg1, 2017. Last accessed on 09/28/2020.
[21] R. Torrance and D. James, “The State-of-the-Art in Semicon-
ductor Reverse Engineering,” IEEE/ACM Design Automation
Conference, pp. 333–338, 2011.
[22] M. Yasin and O. Sinanoglu, “Transforming Between Logic
Locking and IC Camouﬂaging,” IEEE International Design &
Test Symposium, pp. 1–4, 2015.
[23] K. Vättö, “Intel to Offer CPU Upgrades via Software for Se-
lected Models.” https://bit.ly/2Mnbn2j, 2011. Last ac-
cessed on 08/01/18.
[24] M. Zaman, A. Sengupta, D. Liu, O. Sinanoglu, Y. Makris,
and J. Rajendran, “Towards Provably-Secure Performance
Locking,” IEEE/ACM Design, Automation & Test in Europe,
pp. 1592–1597, 2018.
[25] A. Chakraborty, Y. Xie, and A. Srivastava, “GPU Obfuscation:
Attack and Defense Strategies,” IEEE/ACM Design Automation
Conference, pp. 122:1–122:6, 2018.
[26] A. Chakraborty and A. Srivastava, “Hardware-Software Co-
Design Based Obfuscation of Hardware Accelerators,” IEEE
Computer Society Annual Symposium on VLSI, pp. 547–552,
2019.
[27] M. Yasin, A. Sengupta, B. Schafer, Y. Makris, O. Sinanoglu,
and J. Rajendran, “What to Lock?: Functional and Parametric
Locking,” ACM Great Lakes Symposium on VLSI, pp. 351–356,
2017.
[28] Y. Xie and A. Srivastava, “Delay Locking: Security Enhance-
ment of Logic Locking Against IC Counterfeiting and Overpro-
duction,” IEEE/ACM Design Automation Conference, pp. 1–6,
2017.
[29] J. Cassell, “Reports of Counterfeit Parts Quadruple Since
2009, Challenging US Defense Industry and National Secu-
rity.” https://bit.ly/2KWVkJh, 2012. Last accessed on
05/04/2020.
[30] V. V. Rao and I. Savidis, “Protecting Analog Circuits with
Parameter Biasing Obfuscation,” IEEE Latin American Test
Symposium, pp. 1–6, 2017.
[31] N. G. Jayasankaran, A. S. Borbon, E. Sanchez-Sinencio, J. Hu,
and J. Rajendran, “Towards Provably-Secure Analog and
Mixed-Signal Locking Against Overproduction,” IEEE/ACM
International Conference on Computer-Aided Design, pp. 1–8,
2018.
[32] K. Shamsi, M. Li, T. Meade, Z. Zhao, D. Z. Pan, and Y. Jin,
“AppSAT: Approximately Deobfuscating Integrated Circuits,”
IEEE International Symposium on Hardware Oriented Security
and Trust, pp. 95–100, 2017.
[33] Y. Shen and H. Zhou, “Double DIP: Re-Evaluating Security of
Logic Encryption Algorithms,” ACM Great Lakes Symposium
on VLSI, pp. 179–184, 2017.
[34] M. Yasin, B. Mazumdar, O. Sinanoglu, and J. Rajendran, “Se-
curity Analysis of Anti-SAT,” IEEE Asia and South Paciﬁc
Design Automation Conference, pp. 342–347, 2016.
[35] M. Li, K. Shamsi, T. Meade, Z. Zhao, B. Yu, Y. Jin, and D. Pan,
“Provably Secure Camouﬂaging Strategy for IC Protection,”
IEEE/ACM International Conference on Computer-Aided De-
sign, pp. 28:1–28:8, 2016.
1068    30th USENIX Security Symposium
USENIX Association
[36] D. Sirone and P. Subramanyan, “Functional Analysis Attacks
on Logic Locking,” IEEE/ACM Design, Automation & Test in
Europe, pp. 936–939, 2019.
[37] P. Chakraborty, J. Cruz, and S. Bhunia, “SAIL: Machine Learn-
ing Guided Structural Analysis Attack on Hardware Obfus-
cation,” IEEE Asian Hardware Oriented Security and Trust
Symposium, pp. 56–61, 2018.
[38] M. Yasin, B. Mazumdar, J. Rajendran, and O. Sinanoglu, “SAR-
Lock: SAT Attack Resistant Logic Locking,” IEEE Interna-
tional Symposium on Hardware Oriented Security and Trust,
pp. 236–241, 2016.
[39] Y. Xie and A. Srivastava, “Mitigating SAT Attack on Logic
Locking,” International Conference on Cryptographic Hard-
ware and Embedded Systems, pp. 127–146, 2016.
[40] A. Sengupta, M. Nabeel, N. Limaye, M. Ashraf, and
O. Sinanoglu, “Truly Stripping Functionality for Logic Lock-
ing: A Fault-based Perspective,” IEEE Transactions on
Computer-Aided Design of Integrated Circuits and Systems,
2020.
[41] M. Massad, S. Garg, and M. Tripunitara, “Integrated Circuit
(IC) Decamouﬂaging: Reverse Engineering Camouﬂaged ICs
within Minutes,” Network and Distributed System Security
Symposium, 2015.
[42] C. Yu, X. Zhang, D. Liu, M. Ciesielski, and D. Holcomb, “Incre-
mental SAT-Based Reverse Engineering of Camouﬂaged Logic
Circuits,” IEEE Transactions on Computer-Aided Design of In-
tegrated Circuits and Systems, vol. 36, no. 10, pp. 1647–1659,
2017.
[43] H. Wee, “On Obfuscating Point Functions,” ACM Symposium
on Theory of Computing, pp. 523–532, 2005.
[44] B. Shakya, X. Xu, M. Tehranipoor, and D. Forte, “CAS-Lock:
A Security-Corruptibility Trade-off Resilient Logic Locking
Scheme,” IACR Transactions on Cryptographic Hardware and
Embedded Systems, pp. 175–202, 2020.
[45] A. Sengupta, M. Nabeel, M. Yasin, and O. Sinanoglu, “ATPG-
Based Cost-Effective, Secure Logic Locking,” IEEE VLSI Test
Symposium, pp. 1–6, 2018.
[46] A. Chakraborty, N. G. Jayasankaran, Y. Liu, J. Rajendran,
O. Sinanoglu, A. Srivastava, Y. Xie, M. Yasin, and M. Zuzak,
“Keynote: A Disquisition on Logic Locking,” IEEE Transac-
tions on Computer-Aided Design of Integrated Circuits and
Systems, pp. 1–1, 2019.
[47] M. Yasin and B. Mazumdar and O. Sinanoglu and J. Rajendran,
“Removal Attacks on Logic Locking and Camouﬂaging Tech-
niques,” IEEE Transactions on Emerging Topics in Computing,
pp. 1–1, 2018.
[48] X. Xu, B. Shakya, M. M. Tehranipoor, and D. Forte, “Novel
Bypass Attack and BDD-based Tradeoff Analysis Against All
Known Logic Locking Attacks,” International Conference on
Cryptographic Hardware and Embedded Systems, pp. 189–210,
2017.
[49] S. Bhunia and M. Tehranipoor, Hardware Security: A Hands-
on Learning Approach. Morgan Kaufmann, 2018.
[50] F. Yang, M. Tang, and O. Sinanoglu, “Stripped Functionality
Logic Locking With Hamming Distance-Based Restore Unit
(SFLL-hd) - Unlocked,” IEEE Transactions on Information
Forensics and Security, vol. 14, no. 10, pp. 2778–2786, 2019.
[51] NYU CSAW, “Logic Locking Conquest 2019.” https://rb.
gy/amdgdf, 2019. Last accessed on 09/28/2020.
[52] B. Olney and R. Karam, “Tunable FPGA Bitstream Obfusca-
tion with Boolean Satisﬁability Attack Countermeasure,” ACM
Transactions on Design Automation of Electronic Systems,
vol. 25, no. 2, pp. 1–22, 2020.
[53] Cadence, “Genus Synthesis Solution.” https://rb.gy/
gqbpgd. Last accessed on 09/28/2020.
[54] Synopsys, “Design Compiler NXT.” https://rb.gy/wgeq1m.
Last accessed on 05/04/2020.
[55] Synopsys, “Synplify Pro.” https://rb.gy/qscv0c. Last ac-
cessed on 09/28/2020.
[56] Xilinx, “Vivado.” https://rb.gy/yrdbsa. Last accessed on
05/04/2020.
[57] Mentor Graphics, “Precision RTL.” https://rb.gy/03zuos.
Last accessed on 09/28/2020.
[58] R. Brayton and A. Mishchenko, “ABC: An academic industrial-
strength veriﬁcation tool,” International Conference on Com-
puter Aided Veriﬁcation, pp. 24–40, 2010.
[59] J. Yiu, The Deﬁnitive Guide to the ARM Cortex-M3. Newnes,
2009.
[60] B. Chetwynd, K. Bush, and K. Ingols, “CEP v2.0 Security
Evaluation Targets.” https://rb.gy/ssfjbk, 2019. Last ac-
cessed on 05/04/2020.
[61] Y. Kasarabada, D. Luria, and R. Vemuri, “Trust in IoT Devices:
A Logic Encryption Perspective,” IFIP International Internet
of Things Conference, pp. 123–141, 2019.
[62] S. Keshavarz, C. Yu, S. Ghandali, X. Xu, and D. Holcomb,
“Survey on Applications of Formal Methods in Reverse Engi-
neering and Intellectual Property Protection,” Journal of Hard-
ware and Systems Security, vol. 2, no. 3, pp. 214–224, 2018.
[63] Y. Xie and A. Srivastava, “Anti-SAT: Mitigating SAT Attack
on Logic Locking,” IEEE Transactions on Computer-Aided De-
sign of Integrated Circuits and Systems, vol. 38, no. 2, pp. 199–
207, 2019.
[64] G. D. Micheli, Synthesis and Optimization of Digital Circuits.
McGraw-Hill Higher Education, 1994.
[65] C. Blundo, A. De Santis, A. Herzberg, S. Kutten, U. Vaccaro,
and M. Yung, “Perfectly-Secure Key Distribution for Dynamic
Conferences,” Advances in Cryptology, pp. 471–486, 1993.
[66] A. Sarabi, N. Song, M. Chrzanowska-Jeske, and M. A.
Perkowski, “A Comprehensive Approach to Logic Synthe-
sis and Physical Design for Two-Dimensional Logic Arrays,”
IEEE/ACM Design Automation Conference, pp. 321–326,
1994.
[67] P. Subramanyan, N. Tsiskaridze, W. Li, A. Gascón, W. Y. Tan,
A. Tiwari, N. Shankar, S. A. Seshia, and S. Malik, “Reverse
Engineering Digital Circuits Using Structural and Functional
Analyses,” IEEE Transactions on Emerging Topics in Comput-
ing, vol. 2, no. 1, pp. 63–80, 2013.
USENIX Association
30th USENIX Security Symposium    1069
[68] W. Li, A. Gascon, P. Subramanyan, W. Y. Tan, A. Tiwari, S. Ma-
lik, N. Shankar, and S. A. Seshia, “WordRev: Finding Word-
level Structures in a Sea of Bit-Level Gates,” IEEE Interna-
tional Symposium on Hardware-Oriented Security and Trust,
pp. 67–74, 2013.
[69] G. D. Hachtel and F. Somenzi, Logic Synthesis and Veriﬁcation
Algorithms. Springer Science & Business Media, 2006.
[70] P. Ashar, S. Devadas, and R. Newton, Sequential Logic Synthe-
sis. Springer Science & Business Media, 2012.
[71] A. Sengupta, B. Mazumdar, M. Yasin, and O. Sinanoglu,
“Logic Locking with Provable Security Against Power Analysis
Attacks,” IEEE Transactions on Computer-Aided Design of
Integrated Circuits and Systems, pp. 1–1, 2019.
[72] M. El Massad, S. Garg, and M. V. Tripunitara, “Integrated Cir-
cuit (IC) Decamouﬂaging: Reverse Engineering Camouﬂaged
ICs within Minutes,” Network and Distributed System Security
Symposium, pp. 1–14, 2015.
[73] C. Torng, “FreePDK45 and the Nangate Open Cell Library.”
https://rb.gy/azbenb, 2020. Last accessed on 02/12/2021.
[74] Xilinx, “Spartan-3 FPGA Family.” https://rb.gy/pupygs,
2020. Last accessed on 02/12/2021.
[75] S. Davidson, “Characteristics of the ITC’99 Benchmark Cir-
cuits,” IEEE International Test Synthesis Workshop, 1999.
[76] E. Barker and A. Roginsky, “Transitions: Recommendation for
Transitioning the Use of Cryptographic Algorithms and Key
Lengths,” NIST Special Publication, vol. 800, p. 131A, 2011.
[77] G. Ateniese, A. Kiayias, B. Magri, Y. Tselekounis, and D. Ven-
turi, “Secure Outsourcing of Cryptographic Circuits Manufac-
turing,” ACM International Conference on Provable Security,
pp. 75–93, 2018.
[78] C. Konstantinou, A. Keliris, and M. Maniatakos, “Privacy-
Preserving Functional IP Veriﬁcation Utilizing Fully Homo-
morphic Encryption,” IEEE/ACM Design, Automation & Test
in Europe Conference & Exhibition, pp. 333–338, 2015.
[79] S. Devadas and A. R. Newton, “Exact Algorithms for Output
Encoding, State Assignment, and Four-Level Boolean Mini-
mization,” IEEE Transactions on Computer-Aided Design of
Integrated Circuits and Systems, vol. 10, no. 1, pp. 13–27, 1991.
[80] J. Sweeney, M. Heule, and L. T. Pileggi, “Sensitivity Analysis
of Locked Circuits,” International Conference on Logic for
Programming, Artiﬁcial Intelligence and Reasoning, pp. 483–
497, 2020.
[81] M. R. Garey and D. S. Johnson, ACM Computers and In-
tractability, vol. 174. Freeman San Francisco, 1979.
[82] M. E. Massad, J. Zhang, S. Garg, and M. V. Tripunitara, “Logic
Locking for Secure Outsourced Chip Fabrication: A New At-
tack and Provably Secure Defense Mechanism,” arXiv preprint
arXiv:1703.10187, 2017.
[83] K. Shamsi, M. Li, T. Meade, Z. Zhao, D. Z. Pan, and Y. Jin,
“Cyclic Obfuscation for Creating SAT-Unresolvable Circuits,”
ACM Great Lakes Symposium on VLSI, pp. 173–178, 2017.
[85] A. Rezaei, Y. Shen, S. Kong, J. Gu, and H. Zhou, “Cyclic
Locking and Memristor-Based Obfuscation Against CycSAT
and Inside Foundry Attacks,” IEEE/ACM Design, Automation
& Test in Europe, pp. 85–90, 2018.
[86] M. Fyrbiak, S. Wallat, J. Déchelotte, N. Albartus, S. Böcker,
R. Tessier, and C. Paar, “On the Difﬁculty of FSM-based Hard-
ware Obfuscation,” IACR Transactions on Cryptographic Hard-
ware and Embedded Systems, pp. 293–330, 2018.
[87] K. Shamsi, M. Li, D. Z. Pan, and Y. Jin, “KC2: Key-
Condition Crunching for Fast Sequential Circuit Deobfus-
cation,” IEEE/ACM Design, Automation & Test in Europe,
pp. 534–539, 2019.
[88] S. Koteshwara, C. H. Kim, and K. K. Parhi, “Key-Based Dy-
namic Functional Obfuscation of Integrated Circuits Using
Sequentially Triggered Mode-Based Design,” IEEE Transac-
tions on Information Forensics and Security, vol. 13, no. 1,
pp. 79–93, 2018.
[89] Z. Kohavi and N. K. Jha., Switching and Finite Automata
Theory. Cambridge University Press, 2009.
[90] R. Karmakar, H. Kumar, and S. Chattopadhyay, “Efﬁcient Key-
gate Placement And Dynamic Scan Obfuscation Towards Ro-
bust Logic Encryption,” IEEE Transactions on Emerging Top-
ics in Computing, 2019.
[91] N. Limaye, A. Sengupta, M. Nabeel, and O. Sinanoglu, “Is Ro-
bust Design-for-Security Robust Enough? Attack on Locked
Circuits with Restricted Scan Chain Access,” IEEE/ACM In-
ternational Conference on Computer-Aided Design, pp. 1–8,
2019.
[92] M. El Massad, S. Garg, and M. Tripunitara, “Reverse Engineer-
ing Camouﬂaged Sequential Circuits Without Scan Access,”
IEEE/ACM International Conference on Computer-Aided De-
sign, pp. 33–40, 2017.
[93] J. Chen, D. Hermelin, and M. Sorge, “On Computing Centroids
According to the p-Norms of Hamming Distance Vectors,”
arXiv preprint arXiv:1807.06469, 2018.
[94] D. Q. Naiman and H. P. Wynn, “Inclusion-Exclusion-
Bonferroni Identities and Inequalities for Discrete Tube-Like
Problems via Euler Characteristics,” IMSTAT Annals of Statis-
tics, vol. 20, no. 1, pp. 43–76, 1992.
[95] P. Kocher, J. Jaffe, B. Jun, and P. Rohatgi, “Introduction to
Differential Power Analysis,” Journal of Cryptographic Engi-
neering, vol. 1, no. 1, pp. 5–27, 2011.
[96] S. Tajik, H. Lohrke, J.-P. Seifert, and C. Boit, “On the Power of
Optical Contactless Probing: Attacking Bitstream Encryption
of FPGAs,” in ACM SIGSAC Conference on Computer and
Communications Security, pp. 1661–1674, 2017.
[97] M. Rahman, S. Tajik, M. Rahman, M. Tehranipoor, and
N. Asadizanjani, “The Key is Left Under the Mat: On the In-
appropriate Security Assumption of Logic Locking Schemes,”
tech. rep., Cryptology ePrint Archive, Report 2019/719, 2019,
https://eprint.iacr.org/2019/719, 2019.
[84] H. Zhou, R. Jiang, and S. Kong, “CycSAT: SAT-Based At-
tack on Cyclic Logic Encryptions,” IEEE/ACM International
Conference on Computer-Aided Design, pp. 49–56, 2017.
[98] S. Engels, M. Hoffmann, and C. Paar, “The End of Logic Lock-
ing? A Critical View on the Security of Logic Locking,” IACR
Cryptology ePrint Archive, vol. 2019, p. 796, 2019.
1070    30th USENIX Security Symposium
USENIX Association
A SPI attack using divide and conquer
Algorithm 2: SPI attack with divide & conquer
Input: Locked cone Clock, Oracle O, Timeout T
Output: Protected input pattern candidates PIPs: PIPlist
1 Ccp   generate_corrupted_circuit(Clock)
2 NNNooodddeeessssort   sort_by_protecting_inputs(Ccp)
3 PPPIIIPPPssscand   ?
4 for node 2 NNNooodddeeessssort do
return PPPIIIPPPsssveri f ied
Cnode   generate_subcircuit(Ccp;node)
PITnode   extract_PIT(Cnode;T )
PPP111   get_fully_speciﬁed_PI(PIT )
PPPIIIPPPsssveri f ied   verify(PPPIIIPPPsssveri f ied ;Ccp;O)
if ( PPPIIIPPPsssveri f ied 6= ? ) then
5
6
7
8
9
10
11
12
13
14
15
16
17
18 end
19 PPPIIIPPPsssgood   PIPs_with_most_speciﬁed_bits(PPPIIIPPPssscand )
20 for pip 2 PPPIIIPPPsssgood do
pip f ull   brute_force(pip;Clock;O)
PPPIIIPPPlist   PPPIIIPPPssslist
end
PPP222   ﬁnd_and_parse_split_PIs(PIT )
PPPIIIPPPsssveri f ied   verify(PPP222;Ccp;O)
if ( PPPIIIPPPsssveri f y 6= ?) then
return PPPIIIPPPsssveri f ied
end
PPPIIIPPPssscand   PPPIIIPPPssscand
S fpip f ullg
S PPP222
S PPP111
21
22
23 end
24 return verify(PPPIIIPPPlist ;Ccp;O)
Alg. 2 describes the scalable version of the SPI attack that em-
ploys a divide-and-conquer strategy. The inputs to the algorithm
are a locked cone Clock, the oracle O, and a timeout parameter T .
First, the attack extracts the corrupted circuit Ccp by removing the
correcting unit. The nodes in Ccp are sorted in descending order by
the number of protecting inputs. Recall that the correcting unit has k
primary and k key inputs, we refer to the primary inputs feeding the
correcting unit as protecting inputs. Only the protecting inputs are
included in the PIP and thus are of relevance for the attack.
For each sorted node, a sub-circuit is constructed and an attempt
is made to extract its PIT. If the PIT can be extracted within the time
limit T , the PIT is parsed for candidate PIPs using the two methods
already used in Alg. 1, i.e., 1) fully speciﬁed PIPs and 2) split PIs.
If the attacker is fortunate enough, the PIT may be computed for
a sub-circuit with all protecting inputs and the recovered PIP may
be fully speciﬁed (no don’t care bit). In such a case, the PIP can be