**TypeScript Version:**
typescript@1.8.9  
typescript@1.9.0-dev.20160330
**Code**
    function isFunction(item: any): item is Function {
        return typeof item === `function`;
    }
    function isString(item: any): item is String {
        return typeof item === `string`;
    }
    const example: string | Function = function () { };
    if (isFunction(example)) {
        ['a', 'b', 'c'].filter(item => example(item));
    } else if (isString(example)) {
        example.toUpperCase();
    }
**Expected behavior:**  
No errors are thrown.
**Actual behavior:**  
Works fine in 1.8.9  
Throws in 1.9.0-dev.20160330
> foo.ts(11,36): error TS2349: Cannot invoke an expression whose type lacks a
> call signature.