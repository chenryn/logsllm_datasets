    }
    void fill(RNG* rng) {
        for (auto& row : elements)
            for (auto& x : row)
                x = rng->next_qword_fast();
    }
    void fill(uint64_t* data) {
        int i = 0;
        for (auto& row : elements)
            for (auto& x : row)
                x = data[i++];
    }
    void print() {
        for (auto& row : elements)
            for (auto& x : row)
                cout(&x), sizeof x);
}
Vector load_result(string path){
    ifstream in(path.c_str(), ios::binary);
    char buffer[8];
    in.read(buffer, 8);
    uint64_t size = *reinterpret_cast(buffer);
    Vector all(64);
    for(int i=0;i(buffer);
        all[i] = element;
    }
    Vector res(size);
    for(int i=0;i<size;i++){
        res[i] = all[i+4];
    }