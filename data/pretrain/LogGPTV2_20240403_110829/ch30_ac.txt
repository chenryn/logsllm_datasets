让我们把注意力转移到严肃的话题，就是人类轮值工作的实际效果上，这方面得到的信息十分令人震惊。有证据表明即使只是有可能参与轮值，这种可能性也增加了工人的休息需要。请参阅本文关于轮值带来的疲劳。睡眠剥夺有很多负面影响，并且有严重的证据表明它缩短了预期寿命Mark O'Connell，“马修沃克，论为什么我们睡觉 - 多少睡眠可以挽救你的生命”。。最后，这项关于检查随叫随到的影响的调查论文一般表明，轮值的工作可以（而且确实）对身体健康（例如，胃肠和生殖）和心理健康（例如，焦虑和抑郁）产生各种影响。 参与者根本没有任何有意义的好处。所有这些都甚至没有提到轮值令人沮丧的经历。并不是每个团队都像他们应该做的一样努力地关注他们的监控和警报，因此轮值工程师在轮班时可能会受到无用警报的干扰、部分（或完全）无法操作的警报、无法捕获实际用户故障的监控器、散乱或缺失的文档、故障未能避免时充满指责的反馈、完全缺乏的培训，最糟糕的是，系统性故障缺乏后续的行动，发现任何问题，这意味着每个人都要在轮值时准备好迎接刚刚平息的问题。在一些公司，你做的这一切，既没有额外的经济补偿，也不能换来轮休时间。
显然，作为一个物种，我们不喜欢轮值，我们不是特别擅长它，它对我们有害，它往往是我们最不愉快的经历之一。
鉴于这一切，我再次发问：我们为什么不考虑有意义的替代方案？
我们不需要另一个英雄
  也许部分的原因在我们自己。我们不需要另一个英雄
  也许部分的原因在我们自己。
SRE 的使命一面是保护生产环境的运行，另一面则是“挺身而出”并努力解决生产事故，这两方面本应该很好地融合在一起。但是，坚持不懈地与事故搏斗，这虽然在某些方面令人钦佩，但是从另一个角度来看，我们付出的代价，虽然看似值得，但至少有非常多的后果，可以说是英雄主义带来的消极后果。
英雄主义的不良后果即又微妙又苦涩。许多人喜欢同行的认可，也乐意看到他们的工作对团队、对支持的系统、对公司都有直接（甚至是积极的）影响。因此，在介入解决问题的英雄与从团队成员，产品开发团队，经理等方面获得批准之间存在直接的心理联系。重复英雄式行为的显性和隐性激励都可以演变。也许公司管理人员期待它；既然上一次你用这种方式保持系统运行，那么这次你为什么不继续呢？在某种程度上比管理层更糟糕的是，也许你的同行会期待它，特别是在像谷歌这样积极导向的文化中，同事之间只需点击一下按钮即可发红包给对方的。但更糟糕的是，当一个英雄们挺身而出并填补某个角色时，通常是在几个小时或在苛刻的环境中，这意味着他们没有做他们本来打算做的工作。因此，需要一个英雄助理们来做那些本来应该由英雄来做的事情，而这个助理又需要另一个助理来帮忙，如此这般，没完没了。当然，一个团队经常必须尽其所能，但是一个长期的生产故障有明确的生理影响，必须有人来收拾残局。如果这不是直接受影响的团队成员，那就是团队中的其他人，依此类推。更不用说推崇英雄文化例如，Emily Gorcenski 在2017年欧洲 SRECon 会议上的演讲，给团队的其他成员带来的不良影响了。
最后，值得注意的是，我们如何看待自己与其他人如何看待我们的价值之间存在互补性。正如我们刚才所讨论的那样，这个职业非常认真地对待轮值，并努力做到这一点；然而，因为轮值的突出表现的而被提升是非常非常罕见的。在Google 工作的11年里，我从未见过它。如果你在轮值中表现不好，很难获得提升，但如果你擅长轮值，那就不可能获得提升。 Alice Goldfuss 在2017年的 Monitorama 演讲中谈到了这一点。若因为小小的英雄行为而获得奖励，而又由于同样的行为而无法获得更大回报，这样的待遇往往让人觉得难过。然而，尽管如此，当有人不喜欢轮值时，仍然在许多时候被视为软弱的迹象。也许这更多应该归因于我们不愿意考虑轮值的替代方案，宁愿不让任何从事这个行业的人有别的选择。  
实际解决方案
 总结目前谈论的一切，论证的脉络如下。
如果我们接受前面的事实，轮值到被用于处理许多情况，但主要是为了避免未知的无解问题引发的软件故障，并且人类实际上并不擅长轮值，并且这还对他们的身心健康不利，那么我们还能做些什么呢？
从广义上讲，我们可以努力使现有的情况变得更好，也可以尝试做一些全新的事情。
为了使现有情况更好，让我们将其细分为培训、确定优先次序、调度，以及在职技能提升。
培训培训往往是暴露问题最严重的领域，这是令人惊讶的，因为它在理论上也是最容易解决的问题之一。造成这种情况的部分原因是由于一个棘手的问题：在职业生涯中我们何时需要进行这类培训。例如，就我所知，在任何地方任何计算机科学课程中都没有关于轮值的学术课程。与医学相比，差别巨大。如果我错了，请纠正我。因此，对于该行业的新人来说，经常会在工作的轮值部分完全无法得到支持、纠正或修改他们入职时面对的轮值情况。追究这一责任并决定（有效地）让他人受挫是很容易也很容易理解的。这当然会造成许多不良关系，并导致争竞氛围，最终使每个人的情况变得更糟。好消息是，有多个场所会讨论最佳实践，所以即使缺乏可公开转发的材料（也许网站可靠性工程的关于轮值和故障排除的章节是一个合理的起点，尽管也许是PagerDuty 的培训材料假设读者知道的东西较少）现状仍然可以改进。无论如何，有关如何这样做的信息有用，且存在广泛可用的支持。确定优先次序
 但改善的重点实际上是改善的意愿。这与企业文化紧密相关，正如 Cindy Sridharan 引起争议（但并非不公地指出）。Cindy Sridharan，“轮值不必糟心”，Medium.com。 在这种情况下，更好的企业文化将涉及对产品开发人员的培训，实际上，拥有更好的轮值系统的方式，不是通过严格抵制任何轮值的调派，而是在轮值人员需要时，优先考虑所需修复的项目和需要完善的项目。运维起来容易的软件也会是一款更通用的软件。
有关为什么需要确定优先次序的讨论，请参阅SRE 一书关于自动化的章节。
不过很可能遇到一个困境，虽然产品开发人员是最能够改善系统行为的一方，但往往又是系统问题爆发时最晚发现的那一方，这样就导致了恶性循环，不会产生任何好处。业务可能碰巧正常运行的，但它迟早会为这样的恶性循环付出代价（无论是资源成本、人员流失成本还是敏捷开发成本），而 SRE 的存在恰恰就是为了破除这个恶性循环的存在。类似的角色对立还会在故障后的检查报告中出现。调度
为轮值的人提供补给也是一项重要的补救措施。如果提供更多的便利，就能避免轮值者面对太大的压力，也使更多的人将能够参与进来。如果有更多人能够参与进来，那么工作就分给更多人完成，也就意味着可以取得更多进展。如果能够取得更多进展，就可以多花些时间在日常的清理工作上，进一步导致轮值的压力减轻。这就形成了良性循环。
调度包括但不限于：对轮值工作的补偿，特别是非工作时间轮值的补偿；灵活合理的时间表，使参与者可以调整轮值的日程（取决于问题的严重程度，有时候看似最简单的操作也可能变得非常棘手）；故障恢复和后续行动；对于那些实际上无法做到这一点的人而言，如果没有反对，就会被排除在外。
补偿补偿