9.4.1
注意
9.4.2
202Wireshark数据包分析实战（第2版）
正常通信
Displayed Packet,
慢速通信
所示，我们只关心Time列。
这里我们将跳过它们。实际上，我们根本不再看Packet Details面板。如图9.22
序上有些许不同。
外，所有数据包都和上一个文件中的相同。
这个通信序列是相当快的，全过程花了不到0.1s。
现在我们转向捕获文件latency2.pcap。
图9-22这些流量发生得相当快，被认为是正常的
一线路延迟
125
975
图9-23数据包2和5有很高的延迟
100
---
## Page 218
9.4.3
慢速通信
SYN数据包响应一个SYN/ACK。这排除了服务器导致高延退的可能性。
要非常小的处理量。即使服务器正承受巨大的流量负载，通常它也会迅速地向
到一个SYN数据包时，由于不涉及任何传输层以上的处理，发送一个响应只需
后在客户端本地发生的，所以只要客户端没有沉重的处理负载，这两个数据包
HTTPGET请求也同样如此。产生这两个数据包的处理过程是收到SYN/ACK
记录的前两个数据包里。
外什么也没干。排除了客户端和服务器的原因，那网络缓慢的原因应该在捕获
火墙、路由器、代理服务器等设备，以确定问题所在。
是因为中间的一些设备出了问题。此刻，你可以开始检查受影响主机之间的防
确切原因，但它起码告诉你不是客户端或服务器的问题，所以你能意识到延迟
其他ACK数据包中看到这样的情景。虽然这个信息并没有告诉你网络高延迟的
不需要服务器耗费太多处理资源。这是线路延迟的另一个标志。
HTTPGET请求后，服务器在发送数据之前先发送了一个TCPACK，同样这也
始HTTPGET请求之后，经过1.15s才收到从服务器返回的ACK数据包。收到
应该立刻就能发出去。
数据包有1.34s的延迟。
每次遇上线路延迟，你几乎都会在通信过程中初始握手的SYN/ACK以及
客户端的可能性也被排除了，因为它在此时除了接收SYN/ACK数据包以
在数据包5，我们看到它的时间值也高得令人难以置信。看来，我们发送初
继续看，我们发现完成三次握手的ACK数据包传输很快，客户端发送的
由于数据包传输的特性，我们可以确定这是线路延迟的问题。
我们查看的下一个延迟情景包含在latency3.pcap文件中，如图9-24所示。
我们应该查看数据包3和4之间到底发生了什么以找到延退的原因。数据
刚开始这个捕获记录很正常，迅速完成了TCP握手，没有任何延迟。但握
图9-24这个捕获记录中的缓慢数据包是初始HITPGET
一客户端延迟
LPRREPR
第9章让网络不再卡203
当服务器收
---
## Page 219
9.4.4
9.4.5
慢速通信
味着通信高延迟的根源在于客户端。
端为中心的。
这是服务器延迟的一个例子。
延迟定位框架
不幸的是，ACK并没有快速切换到GET。
的迹象。
然而，在这个例子中，服务器才是我们关注的焦点。
我们查看的最后一个延迟情景使用了latency4.pcap文件，如图9-25所示。
服务器。
数据包5是服务器响应客户端GET请求的ACK。
一服务器延迟
图9-25直到最后一个数据包才表现出高延迟
125.
创建和传输GET数据包确实需
一旦发送这个数据包
---
## Page 220
9.5网络基线
注意
原则儿乎可应用于任何基于TCP的通信。
这些场景看起来也许有点复杂，但图9-26应该能帮你更快解决延迟问题。这些
所以它没有内置任何延迟检测并从中恢复的功能，相反，它依赖于应用层协议
常时作为比较的基准。
（和ICMP）来解决数据可靠传输的问题。
客户端
注意我们还没有讨论UDP延退，因为UDP的设计目标是快速但不可靠，
日
四
当所有的努力都失败时，网络基线将成为检修网络缓慢故障最关键的数据
图9-26你可以用这张图解决自己的延送问题
客户请延迟
线路延迟
服务器延迟
7层议数据
7层协议请求
SYN/ACK
-ACK-
-ACK
SYN
第9章让网络不再卡205
服务器
---
## Page 221
9.5.1
206
站点基线
些请求比正常速度慢两倍。
测前者要难得多。
组件置入这3个基本基线目录中：站点、主机、应用程序。
础设施，或只是很少一部分能适用。不管怎样，你应该把你的基线中的每一个
网络基线组件的几个例子。你也许会发现所有这些条目都能应用到你的网络基
Wireshark数据包分析实战（第2版）
这将是WAN内的每一个段。
使用的协议
广播流量
流量。
站点基线的目的是获得网络上每个物理站点的整体流量快照。理想情况下，
很快确定是否出现了过多（或过少）的广播流量。
身份验证序列
这个基线应该包含以下几个组件
---
## Page 222
9.5.2
主机基线
同样的数据传输并比较结果。这可以告诉你连接是否真的很慢，甚至可能帮助
最重要的站点基线。每当在网段上建立或拆除连接很慢时，你可以运行与基线
用Wireshark的捕获概述和绘图功能确定传输速率和连接的一致性。这可能是你
数据传输率
启动/关闭
缓慢是用户负载还是其他原因造成的。
空闲/繁忙流量
流量。
新的协议。你也可以在协议的基础上，用它来发现高于正常数量的特定类型的
会。然后，你可以对照看看是否缺少本应出现的协议，或者主机上是否出现了
使用的协议
层愤怒的电话，你就必须在那台主机上建立基线。
在高流量或关键任务服务器上执行。基本上，只要某台服务器缓慢会招来管理
你查找缓慢的原因。
身份验证序列
认问题是否跟网络有关
这通常包括在网络上测量这个站点到其他站点传输的大量数据。你可以使
这个基线只是简单包含了高峰和非高峰时段正常操作流量的总体捕获记
主机基线包含以下几个组件。
使用主机基线并不意味着你必须在网络上测试每台主机。主机基线只需要
当捕获这台主机的流量时，这个基线提供了使用协议分层统计窗口的好机
---
## Page 223
9.5.3
应用程序基线
208
关联/依赖
这个，你可以确定主机不能正常运转是因为配置错误，还是因为所依赖主机的
高延迟。
Wireshark数据包分析实战（第2版）
的关键业务应用程序。
使用的协议
于这些协议的应用程序是否正常运转。
启动/关闭
关联/依赖
应用程序基线包含以下几个组件。
最后一个网络基线类别是应用程序基线。这个基线应该用于所有基于网络
数据传输率
一旦应用程序不能
---
## Page 224
9.5.4 基线的其他注意事项
9.6小结
用这个基线来确定当前问题是否是高利用率或高用户负载造成的。
功能确定数据传输率和连接一致性。每当有人报告应用程序缓慢时，你可以使
付自如。
创建每个基线都至少要经过3次：低流量期间一次（早晨）、高流量期间一
本章内容聚焦于如何解决慢速网络的问题。我们讲述了TCP的一些有用的
你的基线可能包含一些与网络有关的私密信息，
次（下午3点左右）、无流量期间一次（深夜）。
下面是创建网络基线的一些额外注意事项。
让所有pcap文件与你的基线关联，为更常见的参考值写一份“小抄”，比
储在安全的地方，只有合适的人才有访问权限。但同时别放得太偏，以免
流量期间，这可能会增加设备负载、影响性能，并可能因数据包丢失导致
有可能的话，尽量避免直接在需要创建基线的主机上捕获流量。因为在高
如关联关系或数据传输率。
需要时找不到。可以考虑将它存放在U盘或者加密分区里。
基线无效。
第9章让网络不再卡209
一定要保护好它，将它存
---
## Page 225
安全领域的数据包分析
分析的方法。面向安全的数据包分析是一个很大的话题，都可
证人员调查恶意软件在主机上的感染程度时，就会用到数据包
全问题。当入侵分析师检查来自可疑入侵者的网络流量，或取
故障，但在现实世界中，很多数据包分析工作都是为了解决安
虽然本书主要集中于如何使用数据包分析技术解决网络
---
## Page 226
10.1
10.1.1SYN扫描
注意
网络侦察
花费数星期时间精心策划此次抢劫，却在抵达目的地后才发现银行已经搬迁到
位银行大盗町上了位于MainStreet 123号的目标一
行服务。
线并且可达是我们必须要解决的一个问题。
步行进入银行，以便对金库下手，刚到银行门口却发现今天歇业。确保目标在
了VineStreet555号。还可以想象一个更糟糕的场景，劫匪计划在正常上班时间
和服务器。而本章提到的“连接两端”却是指攻击者或受害者。
端口号，以及网络上的漏洞。
最常见的扫描类型，有以下几个原因。
通过扫描，攻击者可以确定目标是否在线并且可达。例如，想象一下，
扫描的另一个重要收获是，它告诉了攻击者目标开放了哪些端口。回到我们刚
·快速可靠。
首先对系统做TCPSYN扫描，
在所有平台上都很准确，与TCP协议栈的实现无关。
比其他扫描技术更安静，不容易被发现。
又称为隐秘扫描或半开扫描。
一本市规模最大的银行。
苗。SYN 扫描是
市
---
## Page 227
据包，就可能会发生一些事情。
与主机通信。所以，攻击者并不打算完成TCP握手：
击者回复一个TCPSYN/ACK数据包，也就是TCP握手的第二部分。这样攻击
如果受害者机器上某个服务正在监听的端口收到了SYN数据包，它将向攻
攻击者
攻击者
攻击者
图10-1一次TCPSYN扫描的结果
SYNACK
-SYN-
-SYN-
-SYN-
RST
对80请口进行过的受害者
关闭了80端口的受害者
开放了80端口的受害者
第10章安全领域的数据包分析213
---
## Page 228
214Wireshark数据包分析实战（第2版）
个IPv4会话0。你也会看到，那里有1994个TCP会话
一个端口对应一个新会话。
好，我们可以创建过滤器，来帮助我们寻找正确的流量。
ENametesclticn
1721608
1721608
172.1608
172.1608
1723508
1723603
AddinsA
1721608
172.1608
快速设置的方法。
包，如图10-3所示。
栏，删除过滤器的 dst部分。
扫描是在极短时间内完成的，因此在捕获文件上滚动鼠标并不是寻找SYN
举一个筛选的例子。让我们看看第1个数据包一
10.1.1.1在SYN扫描中使用过滤器
2.在PacketDetails面板中展开TCP头部。
1.在捕获文件中选择第一个数据包。
图10-2Conversations窗口显示了正在进行的TCP通信
64.1313452
641333452
64.1313452
64.1313452
641313452
64.1313457
TCP Conversations
Pont BPacketsByaes
Limit to dnplay fiter
D
PacketABB
一发送到受害者443端口
Co
一通信基本上是每
---
## Page 229
320.000065 172.16.0.8
052
我们可以确定有一个服务在监听该端口。
应。这是一个TCP SYN/ACK数据包———实施三次握手时期待的响应，在正常
据包，如图10-4所示。
到所有与TCP53端口有关的流量了。当你应用这个过滤器时，你会看见5个数
提到的方法，创建一个基于目标端口的过滤器，并删除dst部分，这样它就应用
个数据包。这是目标端口为53的SYN数据包，通常与DNS有关。使用在前面
单击过滤器旁边的Clear按钮，清空之前创建的过滤器。然后选择列表中的第
确定的。
间设备过滤了，或者端口是关闭的。但最终来说，对443端口的扫描结果是不
我们可以用同样技术来分析其他数据包，看看有没有不同的结果。首先，
第1个是我们在捕获之初选择的SYN数据包。第二个则是来自受害者的响
两个数据包都没有得到响应，有可能是因为响应数据包被受害者主机或中
图10-5SYN之后紧随一个RST，表明端口是关闭的
图10-3两次尝试用SYN数据包建立连接
图10-4表明端口是开放的5个数据包
64.13.134.52
52
第10章安全领域的数据包分析215
---
## Page 230
10.1.2
216Wireshark数据包分析实战（第2版）
单击Packet列两次就可以让最高值靠前，如图10-6所示。
法一
Eher
操作系统指纹术
1721608
1721508
172.1608
1723608
1721608
1723658
理解了SYN扫描能引起的不同响应类型后，
害者的3次重传SYN/ACK。
10.1.1.2
进入系统后，在目标文件系统找到关键文件和目录。
识别开放和关闭的端口
图10-6用Conversations窗口寻找开放端口
64.13134.52
5413134.52
6413134.52
6413.13452
64.1313452
641313452
5413.13452