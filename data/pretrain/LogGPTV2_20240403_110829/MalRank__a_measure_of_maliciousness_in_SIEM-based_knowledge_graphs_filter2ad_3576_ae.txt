### Evaluation and Implementation

To evaluate the proposed knowledge graph and the MalRank algorithm, we implemented both on a big data cluster consisting of 7 physical servers, utilizing Apache Spark. The knowledge graph was constructed using two days' worth of proxy and DNS logs collected from a large international organization’s Security Information and Event Management (SIEM) system. We then enriched the observed entities with publicly available Open-Source Intelligence (OSINT) and labeled a small subset of nodes as malicious using Threat Intelligence (TI).

After running the MalRank algorithm on the generated knowledge graph, our approach achieved a high accuracy, with an Area Under the Curve (AUC) of 96%. This not only demonstrated the effectiveness of our method but also significantly increased threat intelligence by discovering a large number of new malicious entities.

### References

1. **MITRE Corporation.** 2018. ATT&CK: Standard Application Layer Protocol. https://attack.mitre.org/
2. **HewlettPackard.** 2018. Loopy Belief Propagation. https://github.com/HewlettPackard/sandpiper/wiki/Technique/T1071. Accessed: 2018-08-10.
3. **Osama Almanna.** 2016. StartSSL Domain Validation (Vulnerability Discovered). http://oalmanna.blogspot.com/2016/03/startssl-domain-validation.html
4. **Manos Antonakakis, Roberto Perdisci, David Dagon, Wenke Lee, and Nick Feamster.** 2010. Building a Dynamic Reputation System for DNS. In USENIX Security Symposium, 273–290.
5. **Manos Antonakakis, Roberto Perdisci, Wenke Lee, Nikolaos Vasiloglou, and David Dagon.** 2011. Detecting Malware Domains at the Upper DNS Hierarchy. In USENIX Security Symposium, Vol. 11, 1–16.
6. **Bahman Bahmani, Abdur Chowdhury, and Ashish Goel.** 2010. Fast Incremental and Personalized PageRank. Proceedings of the VLDB Endowment 4, 3 (2010), 173–184.
7. **Leyla Bilge, Engin Kirda, Christopher Kruegel, and Marco Balduzzi.** 2011. EXPOSURE: Finding Malicious Domains Using Passive DNS Analysis. In NDSS.
8. **Sergey Brin and Lawrence Page.** 1998. The Anatomy of a Large-Scale Hypertextual Web Search Engine. Computer Networks and ISDN Systems 30, 1-7 (1998), 107–117.
9. **Anna L Buczak and Erhan Guven.** 2016. A Survey of Data Mining and Machine Learning Methods for Cyber Security Intrusion Detection. IEEE Communications Surveys & Tutorials 18, 2 (2016), 1153–1176.
10. **Qiang Cao, Michael Sirivianos, Xiaowei Yang, and Tiago Pregueiro.** 2012. Aiding the Detection of Fake Accounts in Large Scale Social Online Services. In Proceedings of the 9th USENIX Conference on Networked Systems Design and Implementation. USENIX Association, 15–15.
11. **Duen Horng "Polo" Chau, Carey Nachenberg, Jeffrey Wilhelm, Adam Wright, and Christos Faloutsos.** 2011. Polonium: Tera-scale Graph Mining and Inference for Malware Detection. In Proceedings of the 2011 SIAM International Conference on Data Mining. SIAM, 131–142.
12. **D Chismon and M Ruks.** 2015. Threat Intelligence: Collecting, Analysing, Evaluating. MWR InfoSecurity Ltd (2015).
13. **David Cooper, Stefan Santesson, Stephen Farrell, Sharon Boeyen, Russell Housley, and William Polk.** 2008. Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile. Technical Report.
14. **MITRE Corporation.** 2018. ATT&CK: Commonly Used Port. https://attack.mitre.org/wiki/Technique/T1043
15. **Brian Davison.** 2006. Propagating Trust and Distrust to Demote Web Spam. (2006).
16. **Dhivya Eswaran, Stephan Günnemann, Christos Faloutsos, Disha Makhija, and Mohit Kumar.** 2017. ZOOLBP: Belief Propagation for Heterogeneous Networks. Proceedings of the VLDB Endowment 10, 5 (2017), 625–636.
17. **Maryam Feily, Alireza Shahrestani, and Sureswaran Ramadass.** 2009. A Survey of Botnet and Botnet Detection. In Emerging Security Information, Systems and Technologies, 2009. SECURWARE’09. Third International Conference on. IEEE, 268–273.
18. **Will Hamilton, Zhitao Ying, and Jure Leskovec.** 2017. Inductive Representation Learning on Large Graphs. In Advances in Neural Information Processing Systems. 1024–1034.
19. **Taher H Haveliwala.** 2003. Topic-Sensitive PageRank: A Context-Sensitive Ranking Algorithm for Web Search. IEEE Transactions on Knowledge and Data Engineering 15, 4 (2003), 784–796.
20. **Yonghong Huang and Paula Greve.** 2015. Large Scale Graph Mining for Web Reputation Inference. In Machine Learning for Signal Processing (MLSP), 2015 IEEE 25th International Workshop on. IEEE, 1–6.
21. **Glen Jeh and Jennifer Widom.** 2002. SimRank: A Measure of Structural-Context Similarity. In Proceedings of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. ACM, 538–543.
22. **David Kempe, Jon Kleinberg, and Éva Tardos.** 2003. Maximizing the Spread of Influence through a Social Network. In Proceedings of the Ninth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. ACM, 137–146.
23. **Issa Khalil, Ting Yu, and Bei Guan.** 2016. Discovering Malicious Domains through Passive DNS Data Graph Analysis. In Proceedings of the 11th ACM on Asia Conference on Computer and Communications Security. ACM, 663–674.
24. **Issa M Khalil, Bei Guan, Mohamed Nabeel, and Ting Yu.** 2018. A Domain is Only as Good as its Buddies: Detecting Stealthy Malicious Domains via Graph Inference. In Proceedings of the Eighth ACM Conference on Data and Application Security and Privacy. ACM, 330–341.
25. **Danai Koutra, Tai-You Ke, U Kang, Duen Horng Polo Chau, Hsing-Kuo Kenneth Pao, and Christos Faloutsos.** 2011. Unifying Guilt-by-Association Approaches: Theorems and Fast Algorithms. In Joint European Conference on Machine Learning and Knowledge Discovery in Databases. Springer, 245–260.
26. **Vijay Krishnan and Rashmi Raj.** 2006. Web Spam Detection with Anti-Trust Rank. In AIRWeb, Vol. 6, 37–40.
27. **Marc Kührer, Christian Rossow, and Thorsten Holz.** 2014. Paint it Black: Evaluating the Effectiveness of Malware Blacklists. In International Workshop on Recent Advances in Intrusion Detection. Springer, 1–21.
28. **Justin Ma, Lawrence K Saul, Stefan Savage, and Geoffrey M Voelker.** 2009. Beyond Blacklists: Learning to Detect Malicious Web Sites from Suspicious URLs. In Proceedings of the 15th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. ACM, 1245–1254.
29. **Justin Ma, Lawrence K Saul, Stefan Savage, and Geoffrey M Voelker.** 2009. Identifying Suspicious URLs: An Application of Large-Scale Online Learning. In Proceedings of the 26th Annual International Conference on Machine Learning. ACM, 681–688.
30. **Dhia Mahjoub.** 2013. Monitoring a Fast Flux Botnet Using Recursive and Passive DNS: A Case Study. In eCrime Researchers Summit (eCRS), 2013. IEEE, 1–9.
31. **Grzegorz Malewicz, Matthew H Austern, Aart JC Bik, James C Dehnert, Ilan Horn, Naty Leiser, and Grzegorz Czajkowski.** 2010. Pregel: A System for Large-Scale Graph Processing. In Proceedings of the 2010 ACM SIGMOD International Conference on Management of Data. ACM, 135–146.
32. **Pratyusa K Manadhata, Sandeep Yadav, Prasad Rao, and William Horne.** 2014. Detecting Malicious Domains via Graph Inference. In European Symposium on Research in Computer Security. Springer, 1–18.
33. **Niels Provos, Panayiotis Mavrommatis, and Moheeb Abu Rajab, Fabian Monrose.** 2008. All Your iframes Point to Us. In USENIX Security Symposium. USENIX, 1–16.
34. **Igor Mishsky, Nurit Gal-Oz, and Ehud Gudes.** 2015. A Topology Based Flow Model for Computing Domain Reputation. In IFIP Annual Conference on Data and Applications Security and Privacy. Springer, 277–292.
35. **Pejman Najafi, Andrey Sapegin, Feng Cheng, and Christoph Meinel.** 2017. Guilt-by-Association: Detecting Malicious Entities via Graph Mining. In International Conference on Security and Privacy in Communication Systems. Springer, 88–107.
36. **Alina Oprea, Zhou Li, Ting-Fang Yen, Sang H Chin, and Sumayah Alrwais.** 2015. Detection of Early-Stage Enterprise Infection by Mining Large-Scale Log Data. In Dependable Systems and Networks (DSN), 2015 45th Annual IEEE/IFIP International Conference on. IEEE, 45–56.
37. **Lawrence Page, Sergey Brin, Rajeev Motwani, and Terry Winograd.** 1999. The PageRank Citation Ranking: Bringing Order to the Web. Technical Report. Stanford InfoLab.
38. **Judea Pearl.** 2014. Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. Elsevier.
39. **Chengwei Peng, Xiaochun Yun, Yongzheng Zhang, Shuhao Li, and Jun Xiao.** 2017. Discovering Malicious Domains through Alias-Canonical Graph. In Trustcom/BigDataSE/ICESS, 2017 IEEE. IEEE, 225–232.
40. **J Ronald Prins and Business Unit Cybercrime.** 2011. DigiNotar Certificate Authority Breach ‘Operation Black Tulip’. Fox-IT, November (2011). https://www.rijksoverheid.nl/ministeries/ministerie-van-binnenlandse-zaken-en-koninkrijksrelaties/documenten/rapporten/2011/09/05/diginotar-public-report-version-1
41. **Babak Rahbarinia, Roberto Perdisci, and Manos Antonakakis.** 2015. Segugio: Efficient Behavior-Based Tracking of Malware-Control Domains in Large ISP Networks. In Dependable Systems and Networks (DSN), 2015 45th Annual IEEE/IFIP International Conference on. IEEE, 403–414.
42. **Paul Royal.** 2012. Maliciousness in Top-Ranked Alexa Domains. Online]. https://www.barracudanetworks.com/blogs/labsblog (2012).
43. **Milivoj Simeonovski, Giancarlo Pellegrino, Christian Rossow, and Michael Backes.** 2017. Who Controls the Internet?: Analyzing Global Threats Using Property Graph Traversals. In Proceedings of the 26th International Conference on World Wide Web. International World Wide Web Conferences Steering Committee, 647–656.
44. **Elizabeth Stinson and John C Mitchell.** 2008. Towards Systematic Evaluation of the Evadability of Bot/Botnet Detection Methods. WOOT 8 (2008), 1–9.
45. **Amarnag Subramanya and Partha Pratim Talukdar.** 2014. Graph-Based Semi-Supervised Learning. Synthesis Lectures on Artificial Intelligence and Machine Learning 8, 4 (2014), 1–125.
46. **Acar Tamersoy, Kevin Roundy, and Duen Horng Chau.** 2014. Guilt by Association: Large Scale Malware Detection by Mining File-Relation Graphs. In Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. ACM, 1524–1533.
47. **Wenpu Xing and Ali Ghorbani.** 2004. Weighted PageRank Algorithm. In Communication Networks and Services Research, 2004. Proceedings. Second Annual Conference on. IEEE, 305–314.
48. **Jonathan S Yedidia, William T Freeman, and Yair Weiss.** 2003. Understanding Belief Propagation and Its Generalizations. Exploring Artificial Intelligence in the New Millennium 8 (2003), 236–239.
49. **Yue Zhang, Jason I Hong, and Lorrie F Cranor.** 2007. CANTINA: A Content-Based Approach to Detecting Phishing Web Sites. In Proceedings of the 16th International Conference on World Wide Web. ACM, 639–648.
50. **Futai Zou, Siyu Zhang, Weixiong Rao, and Ping Yi.** 2015. Detecting Malware Based on DNS Graph Mining. International Journal of Distributed Sensor Networks 11, 10 (2015), 102687.

### Experiment Details

#### A.1 SIEM Logs

The following table provides the statistics of the SIEM logs used for this research:

| Source    | Size (Compressed) | #Events |
|-----------|-------------------|---------|
| DNS Logs  | 2TB (120GB gzip)   | 2 billion |
| Prxy Logs | 1TB (100GB gzip)   | 755 million |
| DHCP Logs | 12GB (800MB gzip)  | 4 million |

#### A.2 Hardware Setup

The hardware used in this research is detailed in the following table:

| Server                | CPU Configuration                                      | RAM   | Storage       | #Servers |
|-----------------------|--------------------------------------------------------|-------|---------------|----------|
| Dell PowerEdge R730   | 2x Intel Xeon E5-2690 @ 2.6GHz (14 cores each)         | 768GB | 1TB SSD       | 1        |
| Dell PowerEdge R820   | 2x Intel Xeon E5-4617 @ 2.90GHz (6 cores each)         | 328GB | 540GB HDD     | 1        |
| Fujitsu Primergy RX600 | 4x Intel Xeon E7-4820 @ 2.60GHz (8 cores each)         | 256GB | 2TB SSD       | 1        |
| Fujitsu Primergy RX600 | 4x Intel Xeon E7-4820 @ 2.60GHz (8 cores each)         | 128GB | 1TB SSD       | 4        |

#### A.3 Vertices and Edges

The count of each vertex and edge type loaded into the final knowledge graph is provided below:

| Vertices  | Count  | Edges               | Count  |
|-----------|--------|---------------------|--------|
| Domain    | 103 million | requestedAccessTo  | 10m    |
| Ipv4      | 12.4m  | subDomainOf         | 7m     |
| Organization | 1.8m   | resolvedTo          | 3m     |
| X509cert  | 0.28m  | uses                | 2.5m   |
| Mac       | 0.27m  | aliasFor            | 2m     |
| ipRange   | 0.12m  | referedTo           | 1.7m   |
| Useragent | 0.08m  | associatedWith      | 1.3m   |
| Asn       | 0.07m  | isInRange           | 1m     |
|           |        | mailServerFor       | 0.26m  |
|           |        | issuedBy            | 0.26m  |
|           |        | issuedFor           | 0.23m  |
|           |        | signedBy            | 0.12m  |
|           |        | nameServerFor       | 0.08m  |
|           |        | assignedTo          | 0.03m  |
|           |        | belongsTo           | 0.03m  |

#### A.4 Number of Iterations

In most of our experiments, we chose 9 as the maximum number of iterations. This choice is based on the observation that, within our knowledge graph, inference beyond 4 hops does not provide meaningful insights. For example, the `requestedAccessTo` edge captures the relationship between a MAC address and a set of domain/IP nodes, forming a bipartite graph. To label a domain, it makes sense to traverse back to the MAC address that requested the domain and check the score for all other domains visited by that MAC, which is an indication of a potential malware trying to reach out to malicious IPs or domains for Command and Control (C&C). It also makes sense to check another two hops, i.e., whether there are other workstations connecting to similar known malicious nodes. However, going deeper than that loses the intuitive value.

This can be observed in Figure 7, which shows the ROC curve for different numbers of iterations. As shown, while the results do not vary drastically after 7 iterations, the algorithm's runtime increases significantly. For instance, increasing the number of iterations from 9 to 18 improves the accuracy by only 0.2% but increases the runtime by 50%.

![ROC Curve for Different Number of MalRank Iterations](figure7.png)

This figure illustrates the trade-off between accuracy and computational cost, highlighting the optimal balance at 9 iterations.