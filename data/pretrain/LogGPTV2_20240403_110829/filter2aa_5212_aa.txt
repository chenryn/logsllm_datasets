# 后渗透
---
## 免责声明
`本文档仅供学习和研究使用,请勿使用文中的技术源码用于非法用途,任何人造成的任何负面影响,与本人无关.`
---
## 大纲
* **[横向扩展](#横向扩展)**
    * [基于IPC\$的横向](#基于IPC$的横向)
    * [PTH/PTK/PTT](#pthptkptt)
    * [文件传输](#文件传输)
        * [web-servers](#web-servers)
        * [FTP](#ftp)
        * [Linux](#linux)
        * [Win](#win)
* **[隐匿技术](#隐匿技术)**
    * [流量隐藏技术](#流量隐藏技术)
        * [端口转发](#端口转发)
        * [隧道](#隧道)
        * [代理](#代理)
    * [C2隐藏技术](#c2隐藏技术)
        * [CDN](#cdn)
        * [域前置](#域前置)
        * [重定向](#重定向)
    * [侧信道](#侧信道)
* **[权限提升](#权限提升)**
* **[权限维持](#权限维持)**
* **[windows域](#windows域)**
    * [域认证基础知识](#域认证基础知识)
    * [域内信息收集](#域内信息收集)
    * [Exchange](#exchange)
    * [认证](#认证)
    * [跨域](#跨域)
---
**后渗透案例**
- [记一次渗透测试](https://www.t00ls.net/thread-58322-1-2.html)
- [绕过不能执行大部分系统命令和微软杀毒](https://mp.weixin.qq.com/s/xTiudjr033c5urrPD9izAA)
- [记一次Shiro反序列化到远程桌面](https://mp.weixin.qq.com/s/lY-uTLIWHnqq7oNqT-PZeg)
---
## 横向扩展
### 基于IPC$的横向
- [IPC\$](../OS安全/Windows安全.md#ipc)
### PTH/PTK/PTT
- [PTH](../OS安全/Windows安全.md#pth)
- [PTT](../OS安全/Windows安全.md#ptt)
---
### 基于RPC的taskexec
**相关文章**
- [Advanced Windows Task Scheduler Playbook-Part.3 Lateral Movement](https://mp.weixin.qq.com/s/aHV_Q4oRhE23oaLMXlIq-w)
---
## 文件传输
**相关文章**
- [红队后渗透测试中的文件传输技巧](https://paper.seebug.org/834/)
### web-servers
**相关工具**
- [sc0tfree/updog](https://github.com/sc0tfree/updog) - 用于替代 Python 的 SimpleHTTPServer 的工具,自带401认证服务
    ```
    pip3 install updog
    updog --port 8888 --password test1234
    ```
- [projectdiscovery/simplehttpserver](https://github.com/projectdiscovery/simplehttpserver) - Go alternative of python SimpleHTTPServer
**本地服务**
以下部分内容来自 部分内容来自 部分内容来自项目 [[willurd/web-servers.md](https://gist.github.com/willurd/5720255#file-web-servers-md)]
在当前目录起个 8000 端口的 HTTP 服务
- Python 2.x
    ```bash
    python -m SimpleHTTPServer 8000
    ```
- Python 3.x
    ```bash
    python3 -m http.server 8000 --bind 0.0.0.0
    ```
- Twisted (Python)
    ```bash
    twistd -n web -p 8000 --path .
    ```
    or
    ```bash
    python -c 'from twisted.web.server import Site; from twisted.web.static import File; from twisted.internet import reactor; reactor.listenTCP(8000, Site(File("."))); reactor.run()'
    ```
- Ruby
    ```bash
    ruby -rwebrick -e'WEBrick::HTTPServer.new(:Port => 8000, :DocumentRoot => Dir.pwd).start'
    ```
- Ruby 1.9.2+
    ```bash
    ruby -run -ehttpd . -p8000
    ```
- adsf (Ruby)
    ```bash
    gem install adsf   # install dependency
    adsf -p 8000
    ```
- Sinatra (Ruby)
    ```bash
    gem install sinatra   # install dependency
    ruby -rsinatra -e'set :public_folder, "."; set :port, 8000'
    ```
- Perl
    ```bash
    cpan HTTP::Server::Brick   # install dependency
    perl -MHTTP::Server::Brick -e '$s=HTTP::Server::Brick->new(port=>8000); $s->mount("/"=>{path=>"."}); $s->start'
    ```
- Plack (Perl)
    ```bash
    cpan Plack   # install dependency
    plackup -MPlack::App::Directory -e 'Plack::App::Directory->new(root=>".");' -p 8000
    ```
- Mojolicious (Perl)
    ```bash
    cpan Mojolicious::Lite   # install dependency
    perl -MMojolicious::Lite -MCwd -e 'app->static->paths->[0]=getcwd; app->start' daemon -l http://*:8000
    ```
- http-server (Node.js)
    ```bash
    npm install -g http-server   # install dependency
    http-server -p 8000
    ```
- node-static (Node.js)
    ```bash
    npm install -g node-static   # install dependency
    static -p 8000
    ```
- PHP (>= 5.4)
    ```bash
    php -S 127.0.0.1:8000
    ```
- Erlang
    ```bash
    erl -s inets -eval 'inets:start(httpd,[{server_name,"NAME"},{document_root, "."},{server_root, "."},{port, 8000},{mime_types,[{"html","text/html"},{"htm","text/html"},{"js","text/javascript"},{"css","text/css"},{"gif","image/gif"},{"jpg","image/jpeg"},{"jpeg","image/jpeg"},{"png","image/png"}]}]).'
    ```
- busybox httpd
    ```bash
    busybox httpd -f -p 8000
    ```
- webfs
    ```bash
    webfsd -F -p 8000
    ```
- IIS Express
    ```bash
    C:\> "C:\Program Files (x86)\IIS Express\iisexpress.exe" /path:C:\MyWeb /port:8000
    ```
### FTP
**tftp**
基于 udp,端口为 69
- **攻击端起 tftp**
    ```bash
    mkdir /tftp
    atftpd --daemon --port 69 /tftp
    cp /usr/share/windows-binaries/nc.exe /tftp/