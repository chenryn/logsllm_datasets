network. By observing the results, notice that the maximum reduction rate of the certificate is ∼37% for the SS. Specifi-
cally, for CS and DCS, most of the certificate contents are compressed except for the public key and the signature portions
of the original certificate (given that these two fields are different for many of the certificates). In contrast, CS is only
minimally compressed given the limitations in the commonness among different certificates. Certificates in the SS class,
as expected, show the most reduction in certificate size, whereas certificates with less similarity (ie, DCS and CS) show
smaller benefits of compressing (or omitting) common parts in the certificate contents. The certificate contents that are
omitted using Level 0 compression include fields such as the Issuer or AlgorithmID, and from using Level 1, we can
reduce parts of the extension fields. Finally, from Level 2, LightCert reduces the DistinguishedNames field from
the original certificate.
Energy consumption rate and latency
5.3
We conducted experimentation with Zoul Firefly nodes and the NS-3 simulator to observe how efficiently LightCert
reduces the energy consumption and latency when supporting and exchanging certificates. We vary the compression
method and the network size (eg, hop count from the source to the destination) in our experiments. The Zoul Firefly node
was used to measure the actual computational latency and energy usage rate of different operations via monsoon power
monitor33 and we combine real node-level measurements with NS-3 simulation traces to compute the energy usage and
certificate exchange latency in different network scenarios.
To transmit a certificate, it is necessary to split the certificate into units of IEEE 802.15.4 fragments. The space available
for transporting actual payload data is 70 to 80 bytes in a 127-byte packet, excluding additional information such as the
PHY, MAC, and IP headers. Therefore, transmitting a packet with certificate information typically requires, even when
compressed, a series of packet transmissions rather than a single packet exchange. When using a low-power MAC (eg,
RDC), this can result in long latency given that typically a single packet is transmitted in a single cycle. Luckily, the Con-
tikiMAC used for our measurements supports link-layer bursts34 for energy-efficient successive multiframe transmission.
Specifically, instead of having a sender wait for the receiver's wake-up for each frame transmission, link layer burst inserts
a pending bit in the frame header to notify the presence of another pending frame transmission. As a result, the receiver
will stay awake to receive the message directly after the first packet exchange; thus, reducing the latency of transmitting
multiple packets. We take these practical factors into account when setting up the NS-3 simulation network.
12 of 15
KWON ET AL.
FIGURE 8 Energy/latency overhead in exchanging hashing key
lists between certificates in the Internet-of-Things subnet. A, Energy;
B, Latency
In our evaluations, where we test for the exchange of SS, DCS, and CS certificates, we note that we focus on the “internal”
IoT network performance. That is, while DCS and CS certificates interact with the IoT subnet and the external Internet
architecture, our evaluations focus on the latency and energy usage within the IoT subnet only. The distance that the cer-
tificate travels within the IoT subnet is varied from 1 to 4 hops on a network topology with 20 randomly positioned nodes.
To create a level of contention in the network, we set all nodes other than the source and destination nodes to periodi-
cally issue a broadcast packet every 6 to 9 seconds. Finally, we do not introduce link level loss due to signal attenuation
to solely focus on analyzing the system performance of a well-provisioned network.The result is shown by the following
graphs that presents mean and standard deviation as bar and error bar.
Figure 8 plots the energy consumption rate and latency overheads of exchanging the hashing key lists within the IoT
subnet. While Level 0 shows the best performance and Level 2 indicates slightly higher overhead levels, overall, the energy
and latency overheads that occur during the transmission of the hashing key list tend to be similar for all compression
levels. The two overheads increase in proportion to the hop count, while the energy rises up to 25 to 30 mJ and latency
0.8 to 0.9 seconds. The nonlinearity in the plots of Figure 8 is an impact of retransmissions in the lossy IoT environment.
While latency and energy overhead on a networking perspective for the different compression levels are minimal, they
can still be significant for tight-energy-budget systems. Furthermore, using Level 0 compression will still be beneficial in
easing the memory overhead when storing the hashing key lists at the gateway and individual IoT nodes. Therefore, this
compression level is a system-level design choice that IoT system designers can select.
Figure 9 shows the per-certificate transmission energy consumption within the IoT network. Here, we target to observe
the networking impact of delivering a certificate packet(s). Since the original certificate size is similar for SS and DCS
(Table 2), there is no significant difference in energy usage for exchanging these original certificates in the two cases
(compare the “original” plots in Figure 9A,B). On the other hand, the size of CS certificates is larger than others; therefore,
the energy consumption of exchanging the original certificate exchange is much higher. When the source and destination
nodes are a single hop away, the performance does not differ noticeably compared to the original certificate. However,
as the number of hops increase, SS and DCS tend to show a significant amount of improvement when compressing the
certificate, while given that the CS certificate compression rate itself is low, CS does not show a dramatic improvement.
Quantitatively, for SS Level 2 certificates, the energy savings were approximately 35 mJ for a single certificate exchange
over 4 hops and DCS Level 2 certificates saved 30 mJ in the same 4 hop scenario.
Figure 10 plots the latency for the certificate exchange scenario over a varying number of hops from the source (client)
and destination (server). Similar to the energy consumption plots in Figure 9, the certificate exchange latency for SS and
DCS certificates increase with the hop count. The increasing trend for SS certificates are less significant compared to the
DCS given the more effective certificate compression rate, thus transmitting a smaller number of packets and reducing
the chances of channel collisions.
KWON ET AL.
13 of 15
FIGURE 9 Energy consumption rate caused from transmissions for (A)
subnet set (SS), (B) diverse certificate set (DCS), and (C) conventional set
(CS)
FIGURE 10 Delay for transmitting the reduced format. A, Subnet set
(SS); B, Diverse certificate set (DCS); C, Conventional set (CS)
14 of 15
KWON ET AL.
Overall, our experiments show that LightCert offers an effective way to compress Internet certificates for IoT nodes,
which possess network bandwidth and energy limitations.
6
CONCLUSIONS
Internet-of-Things devices possess unique challenges on a system design perspective by introducing battery and network
limitations. As a result, despite having suitable Internet Protocol standards, such as 6LoWPAN or RPL, utilizing the secu-
rity certificates used in the traditional Internet architecture directly remained as a difficult task. This work identifies such
limitations and targets to design a simple and lightweight algorithm to compress the security certificates to be suitable for
resource limited IoT nodes. Specifically, we present LightCert, which focuses on the similarities of the X.509 certificate
contents. By suppressing the transmissions of certificate contents that are common across many certificates, the original
certificates are reduced by up to ∼37% of the original. This reduction naturally leads to reduction in energy usage and data
transmission latency overhead. Our study shows that with a compressed certificate, IoT nodes can also join the Internet
security architecture with minimal overhead. We foresee this work as a first step in developing various mechanisms for
minimizing Internet security certificates for IoT nodes.
ACKNOWLEDGMENTS
This work was supported by the MOTIE and Korea Institute for Advancement of Technology through the International
Cooperative R&D program and by the Basic Science Research Program through National Research Foundation of Korea
funded by the MSIT (2018R1C1B6003869).
ORCID
JeongGil Ko
https://orcid.org/0000-0003-0799-4039
REFERENCES
1. Perera C, Liu CH, Jayawardena S, Chen M. A survey on internet of things from industrial market perspective. IEEE Access.
2014;2:1660-1679.
2. Cooper D, Santesson S, Farrell S, Boeyen S, Housley R, Polk W. Internet X.509 public key infrastructure certificate and certificate revocation
list (CRL) profile. RFC 5280, RFC editor; 2008. http://www.rfc-editor.org/rfc/rfc5280.txt
3. IEEE standard for information technology –telecommunications and information exchange between systems –local and metropolitan area
networks. Specific requirements–part 15.4: wireless medium access control (MAC) and physical layer (PHY) specifications for low-rate
wireless personal area networks (LR-WPANs). http://www.ieee802.org/15/pub/TG4.html. 2003.
4. Ye W, Silva F, Heidemann J. Ultra-low duty cycle MAC with scheduled channel polling. In: Proceedings of the 4th International Conference
on Embedded Networked Sensor Systems; 2006; Boulder, CO. http://doi.acm.org/10.1145/1182807.1182839
5. Buettner M, Yee GV, Anderson E, Han R. X-MAC: a short preamble MAC protocol for duty-cycled wireless sensor networks. In:
Proceedings of the 4th International Conference on Embedded Networked Sensor Systems; 2006; Boulder, CO.
6. Dunkels A. The ContikiMAC Radio Duty Cycling Protocol. Technical Report No. T2011:13. Stockholm, Sweden: Swedish Institute of
Computer Science; 2011. http://dunkels.com/adam/dunkels11contikimac.pdf
7. Bormann C, Hoffman P. Concise binary object representation (CBOR). RFC 7049, RFC Editor; 2013.
8. Mulligan G. The 6LoWPAN architecture. In: Proceedings of the 4th Workshop on Embedded Networked Sensors; 2007; Cork, Ireland.
http://doi.acm.org/10.1145/1278972.1278992
9. Kushalnagar N, Montenegro G, Schumacher C. IPv6 over low-power wireless personal area networks (6LoWPANs): overview, assump-
tions, problem statement, and goals. RFC 4919, RFC Editor; 2007. http://www.rfc-editor.org/rfc/rfc4919.txt
10. Moharana SR, Jha VK, Satpathy A, Addya SK, Turuk AK, Majhi B. Secure key-distribution in IoT cloud networks. Paper presented at:
2017 Third International Conference on Sensing, Signal Processing and Security (ICSSS); 2017; Chennai, India.
11. Zhou J, Dong X, Cao Z, Vasilakos AV. Secure and privacy preserving protocol for cloud-based vehicular DTNs. IEEE Trans Inf Forensics
Secur. 2015;10(6):1299-1314.
12. Zhou J, Cao Z, Dong X, Vasilakos AV. Security and privacy for cloud-based IoT: challenges. IEEE Commun Mag. 2017;55(1):26-33.
13. Stergiou C, Psannis KE, Kim B-G, Gupta B. Secure integration of IoT and cloud computing. Future Gener Comput Syst. 2018;78:964-975.
14. Soldatos J, Kefalakis N, Hauswirth M, et al. OpenIoT: open source internet-of-things in the cloud. In: Interoperability and Open-Source
Solutions for the Internet of Things. Cham, Switzerland: Springer International Publishing; 2015:13-25.
15. Neto ALM, Souza ALF, Cunha I, et al. AoT: authentication and access control for the entire IoT device life-cycle. In: Proceedings of the 14th
ACM Conference on Embedded Network Sensor Systems CD-ROM; 2016; Stanford, CA. http://doi.acm.org/10.1145/2994551.2994555
KWON ET AL.
15 of 15
16. Cirani S, Picone M, Gonizzi P, Veltri L, Ferrari G. IoT-OAS: an oauth-based authorization service architecture for secure services in IoT
scenarios. IEEE Sens J. 2015;15(2):1224-1234.
17. Vuini M, Tourancheau B, Rousseau F, Duda A, Damon L, Guizzetti R. OSCAR: object security architecture for the Internet of Things. Ad
Hoc Netw. 2015;32:3-16. Part of special issue: Internet of Things Security and Privacy: Design Methods and Optimization.
18. Wang T, Zhang G, Liu A, Bhuiyan MZA, Jin Q. A secure IoT service architecture with an efficient balance dynamics based on cloud and
edge computing. IEEE Internet Things J. 2019.
19. Moosavi SR, Gia TN, Rahmani A-M, et al. Sea: a secure and efficient authentication and authorization architecture for IoT-based healthcare
using smart gateways. Procedia Comput Sci. 2015;52:452-459. Part of special issue: The 6th International Conference on Ambient Systems,
Networks and Technologies (ANT-2015), The 5th International Conference on Sustainable Energy Information Technology (SEIT-2015).
20. Kothmayr T, Schmitt C, Hu W, Brünig M, Carle G. DTLS based security and two-way authentication for the Internet of Things. Ad Hoc
Netw. 2013;11(8):2710-2723.
21. Hummen R, Shafagh H, Raza S, Voig T, Wehrle K. Delegation-based authentication and authorization for the IP-based Internet of Things.
Paper presented at: 2014 Eleventh Annual IEEE International Conference on Sensing, Communication, and Networking (SECON); 2014;
Singapore.
22. Forsby F, Furuhed M, Papadimitratos P, Raza S. Lightweight X. 509 Digital Certificates for the Internet of Things. Paper presented at:
Third International Conference, InterIoT 2017, and Fourth International Conference, SaSeIot; 2017; Valencia, Spain.
23. Texas Instruments. MSP430F15x, MSP430F16x, MSP430F161x Mixed Signal Microcontroller Datasheet. http://www.ti.com/lit/ds/
symlink/msp430f1611.pdf. 2011.
SAM3U.html. 2015.
24. Atmel. Atmel 42129P SAM D20 Datasheet Complete. http://www.atmel.com/images/Atmel-42129-SAM-D20_Datasheet.pdf. 2016.
25. Atmel. SMART ARM-Based Flash MCU SAM3U Series Datasheet. http://www.alldatasheet.com/datasheet-pdf/pdf/444352/ATMEL/
26. Ye W, Heidemann J, Estrin D. An energy-efficient MAC protocol for wireless sensor networks. In: Proceedings of the Twenty-First Annual
Joint Conference of the IEEE Computer and Communications Societies; 2002; New York, NY.
27. Dierks T, Rescorla E. The transport layer security (TLS) protocol version 1.2. RFC 5246, RFC Editor; 2008. http://www.rfc-editor.org/rfc/
rfc5246.txt
rfc6347.txt
28. Rescorla E, Modadugu N. Datagram transport layer security version 1.2. RFC 6347, RFC Editor; 2012. http://www.rfc-editor.org/rfc/
29. Housley R, Ford W, Polk T, Solo D. Internet X.509 public key infrastructure certificate and CRL profile. RFC 2459, RFC Editor; 1999.
30. Winter T, Thubert P, Brandt A, et al. RPL: IPv6 routing protocol for low-power and lossy networks. RFC 6550, RFC Editor; 2012. http://
31. Sam G. Introducing Azure IoT support for X.509 certificates. https://azure.microsoft.com/en-us/blog/introducing-azure-iot-support-for-
http://www.rfc-editor.org/rfc/rfc2459.txt
www.rfc-editor.org/rfc/rfc6550.txt
x-509-certificates/. Accessed February 12, 2012.
32. Amazon. AWS IoT Core Documentation. https://aws.amazon.com/documentation/iot/. Accessed February 12, 2012.
33. Monsoon Solutions. Monsoon power monitor. https://www.msoon.com/. Accessed April 30, 2012.
34. Kovatsch M, Duquennoy S, Dunkels A. A low-power CoAP for Contiki. Paper presented at: 2011 IEEE Eighth International Conference
on Mobile Ad-Hoc and Sensor Systems; 2011; Valencia, Spain.
How to cite this article: Kwon H, Ahn J, Ko J. LightCert: On designing a lighter certificate for resource-limited
Internet-of-Things devices. Trans Emerging Tel Tech. 2019;30:e3740. https://doi.org/10.1002/ett.3740