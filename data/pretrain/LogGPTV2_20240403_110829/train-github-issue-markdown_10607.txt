I discovered that when I use the LIMIT operator in the RETURN, the database
returns invalid results sometimes (non-deterministic) - but only on large size
patterns/quiers. I.e: Altough there are 4 matches in the database, the
database returns no matches when using LIMIT 1 (or 2,3), but 4 when using
LIMIT 4. After restarting the database the error disappears sometimes - but
sometimes not.
Has this issue been fixed in recent releases? If not, please use the following
steps to reproduce the problem: Note: be advised, that the problem occures
only sporadic.
  * Neo4j version: 3.5.2
  * Operating system: Win10 x64
  * API/Driver: Neo4j Browser or JavaAPI
Steps:
  1. Initiate Database, run the following queries. The query create a game board with 4x4 fields( label _:Field_ ), which are connected by _:right_ and _:bottom_ edges to their neighbors, and a node _:Board_ , with edges to every _:Field_.
    CREATE
    (f00: Field {name: "f00"})-[:right]->(f01: Field {name: "f01"})-[:right]->(f02: Field {name: "f02"})-[:right]->(f03:Field {name: "f03"}), 
    (f10: Field {name: "f10"})-[:right]->(f11: Field {name: "f11"})-[:right]->(f12: Field {name: "f12"})-[:right]->(f13:Field {name: "f13"}), 
    (f20: Field {name: "f20"})-[:right]->(f21: Field {name: "f21"})-[:right]->(f22: Field {name: "f22"})-[:right]->(f23:Field {name: "f23"}), 
    (f30: Field {name: "f30"})-[:right]->(f31: Field {name: "f31"})-[:right]->(f32: Field {name: "f32"})-[:right]->(f33:Field {name: "f33"}), 
    (f00)-[:bottom]->(f10)-[:bottom]->(f20)-[:bottom]->(f30), 
    (f01)-[:bottom]->(f11)-[:bottom]->(f21)-[:bottom]->(f31), 
    (f02)-[:bottom]->(f12)-[:bottom]->(f22)-[:bottom]->(f32), 
    (f03)-[:bottom]->(f13)-[:bottom]->(f23)-[:bottom]->(f33),
    (b:Board)
and
`MATCH (f:Field), (b:Board) CREATE (b)-[:fields]->(f)`
  2. Execute the pattern matching query.
    MATCH 
    (b:Board)-[b_fields_0_field11:fields]->(field11:Field), (b:Board)-[b_fields_1_field12:fields]->(field12:Field), (b:Board)-[b_fields_2_field13:fields]->(field13:Field), (b:Board)-[b_fields_3_field21:fields]->(field21:Field), (b:Board)-[b_fields_4_field22:fields]->(field22:Field), (b:Board)-[b_fields_5_field23:fields]->(field23:Field), (b:Board)-[b_fields_6_field31:fields]->(field31:Field), (b:Board)-[b_fields_7_field32:fields]->(field32:Field), (b:Board)-[b_fields_8_field33:fields]->(field33:Field), 
    (field11:Field)-[field11_right_0_field12:right]->(field12:Field), (field11:Field)-[field11_bottom_1_field21:bottom]->(field21:Field), 
    (field12:Field)-[field12_right_0_field13:right]->(field13:Field), (field12:Field)-[field12_bottom_1_field22:bottom]->(field22:Field), 
    (field13:Field)-[field13_bottom_0_field23:bottom]->(field23:Field), 
    (field21:Field)-[field21_right_0_field22:right]->(field22:Field), (field21:Field)-[field21_bottom_1_field31:bottom]->(field31:Field), 
    (field22:Field)-[field22_right_0_field23:right]->(field23:Field), (field22:Field)-[field22_bottom_1_field32:bottom]->(field32:Field), 
    (field23:Field)-[field23_bottom_0_field33:bottom]->(field33:Field), 
    (field31:Field)-[field31_right_0_field32:right]->(field32:Field), 
    (field32:Field)-[field32_right_0_field33:right]->(field33:Field), 
    (field33:Field)
    WHERE  NOT id(field11) = id(field12) AND NOT id(field11) = id(field13) AND NOT id(field11) = id(field21) AND NOT id(field11) = id(field22) AND NOT id(field11) = id(field23) AND NOT id(field11) = id(field31) AND NOT id(field11) = id(field32) AND NOT id(field11) = id(field33)
    AND NOT id(field12) = id(field13) AND NOT id(field12) = id(field21) AND NOT id(field12) = id(field22) AND NOT id(field12) = id(field23) AND NOT id(field12) = id(field31) AND NOT id(field12) = id(field32) AND NOT id(field12) = id(field33)
    AND NOT id(field13) = id(field21) AND NOT id(field13) = id(field22) AND NOT id(field13) = id(field23) AND NOT id(field13) = id(field31) AND NOT id(field13) = id(field32) AND NOT id(field13) = id(field33)
    AND NOT id(field21) = id(field22) AND NOT id(field21) = id(field23) AND NOT id(field21) = id(field31) AND NOT id(field21) = id(field32) AND NOT id(field21) = id(field33)
    AND NOT id(field22) = id(field23) AND NOT id(field22) = id(field31) AND NOT id(field22) = id(field32) AND NOT id(field22) = id(field33)
    AND NOT id(field23) = id(field31) AND NOT id(field23) = id(field32) AND NOT id(field23) = id(field33)
    AND NOT id(field31) = id(field32) AND NOT id(field31) = id(field33)
    AND NOT id(field32) = id(field33)
    RETURN 
    id(b_fields_0_field11) AS b_fields_0_field11, id(b_fields_1_field12) AS b_fields_1_field12, id(b_fields_2_field13) AS b_fields_2_field13,
    id(b_fields_3_field21) AS b_fields_3_field21, id(b_fields_4_field22) AS b_fields_4_field22, id(b_fields_5_field23) AS b_fields_5_field23,
    id(b_fields_6_field31) AS b_fields_6_field31, id(b_fields_7_field32) AS b_fields_7_field32, id(b_fields_8_field33) AS b_fields_8_field33,
    id(field11_right_0_field12) AS field11_right_0_field12, id(field11_bottom_1_field21) AS field11_bottom_1_field21, id(field12_right_0_field13) AS field12_right_0_field13,
    id(field12_bottom_1_field22) AS field12_bottom_1_field22, id(field13_bottom_0_field23) AS field13_bottom_0_field23, id(field21_right_0_field22) AS field21_right_0_field22, 
    id(field21_bottom_1_field31) AS field21_bottom_1_field31, id(field22_right_0_field23) AS field22_right_0_field23, id(field22_bottom_1_field32) AS field22_bottom_1_field32,
    id(field23_bottom_0_field33) AS field23_bottom_0_field33, id(field31_right_0_field32) AS field31_right_0_field32, id(field32_right_0_field33) AS field32_right_0_field33, id(field33) AS field33
     LIMIT 1
The query returns all 3x3 size sub boards. Hence the expected result in a 4x4
board is 4. Using the LIMIT opertor at the end, we limit the return to 1 sub
board, such that the expected result size is 1. But sometimes the database
returns no matches. Same behavior when using LIMIT 1, LIMIT 2 or LIMIT 3.
Using LIMIT 4 the database return the 4 matches.