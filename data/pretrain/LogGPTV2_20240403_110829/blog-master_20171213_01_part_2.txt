from    
t_tmp1 as t_tmp    
inner join     
t    
using (id);    
INSERT 0 3628282    
Time: 9504.092 ms    
```    
删除旧数据。    
```    
delete from t using t_tmp2 where t.id=t_tmp2.id;    
DELETE 3628282    
Time: 15356.920 ms    
```    
插入新增、以及合并的增量数据。    
```    
insert into t    
select t_tmp1.* from t_tmp1 left join t_tmp2 using (id) where t_tmp2.* is null    
union all    
select * from t_tmp2;    
INSERT 0 3628283    
Time: 778.014 ms    
```    
数据校验    
```    
-- 中间结果    
postgres=# select * from t_tmp where id=9;    
 id | c1 | c2 | c3 | c4 | c5 |          crt_time              
----+----+----+----+----+----+----------------------------    
  9 | 99 |    |    |    |    | 2017-12-13 23:18:14.65243    
  9 |  7 |    |    |    |    | 2017-12-13 23:18:14.817107    
  9 |    |  9 |    |    |    | 2017-12-13 23:18:15.292311    
  9 |    | 56 |    |    |    | 2017-12-13 23:18:15.449415    
(4 rows)    
-- 中间结果    
postgres=# select * from t_tmp where id=446;    
 id  | c1 | c2 | c3 | c4 | c5 |          crt_time              
-----+----+----+----+----+----+----------------------------    
 446 | 43 |    |    |    |    | 2017-12-13 23:18:14.291335    
 446 | 16 |    |    |    |    | 2017-12-13 23:18:14.715026    
 446 | 45 |    |    |    |    | 2017-12-13 23:18:15.048879    
 446 |    | 34 |    |    |    | 2017-12-13 23:18:15.646904    
 446 |    |  7 |    |    |    | 2017-12-13 23:18:15.81838    
 446 |    |    | 12 |    |    | 2017-12-13 23:18:16.220083    
 446 |    |    | 22 |    |    | 2017-12-13 23:18:16.26496    
 446 |    |    |    | 97 |    | 2017-12-13 23:18:17.464355    
 446 |    |    |    |    | 56 | 2017-12-13 23:18:18.427068    
(9 rows)    
-- 使用窗口合并后结果    
postgres=# select * from t_tmp1 limit 10;    
 id  | c1 | c2 | c3 | c4 | c5 |          crt_time              
-----+----+----+----+----+----+----------------------------    
   9 |  7 | 56 |    |    |    | 2017-12-13 23:18:15.449415  -- 验证    
  25 | 69 |    |  1 |    |    | 2017-12-13 23:18:16.161339    
 169 | 74 | 33 |  3 |    |    | 2017-12-13 23:18:16.71554    
 185 | 22 |    |    |    |    | 2017-12-13 23:18:14.93206    
 217 | 11 | 20 | 26 |    | 59 | 2017-12-13 23:18:17.911174    
 270 | 55 |    | 42 |    |    | 2017-12-13 23:18:16.494782    
 286 | 65 | 77 | 17 |    | 75 | 2017-12-13 23:18:17.895121    
 430 | 12 |    | 56 |    |    | 2017-12-13 23:18:16.744847    
 446 | 45 |  7 | 22 | 97 | 56 | 2017-12-13 23:18:18.427068  -- 验证    
 478 | 23 | 56 |    | 25 | 77 | 2017-12-13 23:18:18.293153    
(10 rows)    
-- 合并到全量表后结果    
postgres=# select * from t where id=9;    
 id | c1 | c2 | c3 | c4 |  c5   |          crt_time              
----+----+----+----+----+-------+----------------------------    
  9 |  7 | 56 |    |    | 10000 | 2017-12-13 23:18:15.449415    
(1 row)    
postgres=# select * from t where id=446;    
 id  | c1 | c2 | c3 | c4 | c5 |          crt_time              
-----+----+----+----+----+----+----------------------------    
 446 | 45 |  7 | 22 | 97 | 56 | 2017-12-13 23:18:18.427068    
(1 row)    
```    
4、合并总耗时：    
``` 35秒 ```    
5、耗时分布    
增量数据1000万条，涉及500万个ID。    
``` 4.5秒 ```    
增量数据，窗口合并去重。    
``` 5.2秒 ```    
使用增量数据，提取并合并旧数据。    
``` 9.5秒 ```    
删除旧数据。    
``` 15秒 ```    
插入新增、以及合并的增量数据。    
``` 0.7秒 ```    
### Greenplum merge insert 限制    
比较复杂、而且不支持新值使用NULL值(要支持的话，得修改一下覆盖逻辑)。    
## 参考  
[《Greenplum 排序nulls first|last的 SQL写法实现》](../201711/20171127_01.md)    
[《PostgreSQL 流式统计 - insert on conflict 实现 流式 UV(distinct), min, max, avg, sum, count ...》](../201711/20171123_02.md)      
[《HTAP数据库 PostgreSQL 场景与性能测试之 22 - (OLTP) merge insert|upsert|insert on conflict|合并写入》](../201711/20171107_23.md)      
[《PostgreSQL upsert功能(insert on conflict do)的用法》](../201704/20170424_04.md)      
[《PostgreSQL 10.0 preview 功能增强 - 支持分区表ON CONFLICT .. DO NOTHING》](../201703/20170330_03.md)      
[《PostgreSQL、Greenplum DML合并操作 最佳实践》](../201702/20170214_01.md)   
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")