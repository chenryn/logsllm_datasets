[=] ISO14443A - All times are in carrier periods (1/13.56MHz)
Start |
End | Src | Data (! denotes parity error) | CRC | Annotation
--------+--------+-----+-------------------------------+-----+------------
← 01 indicates to do the random nonce exchange
992 | Rdr |52
| WUPA
|
4532 | Tag |04 01
9504 | Rdr |93 20
|
16372 | Tag |88 f6 53 90 bd
|
29536 | Rdr |93 70 88 f6 53 90 bd ec 2e |
34228 | Tag |20 fc 70
|
|
44704 | Rdr |99 76 0a 4f 8a 7e e3
timed
|
51572 | Tag |c0 7d 6a d1 06
|
60960 | Rdr |e0 80 31 73
69044 | Tag |04 58 80 02 13 ce
|
| ANTICOLL
|
ok | SELECT_UID
select completed
|
| NONCE_REQ
| NONCE_RES
ok | RATS
ok |
0 |
2100 |
7040 |
10548 |
19072 |
30644 |
36480 |
45748 |
56192 |
62004 |
Fig. 10. The nonce exchange proposal.
that our protocol provides the distance bounding protection we
require. The full annotated model is in L1RP.spthy in [9].
C. Practical Experiments
The proposed extension to the current Level 1 protocol was
tested using two Proxmarks. On one Proxmark, we imple-
mented the reader protocol including, if required, the nonce-
exchange, and on the other, we implemented a simulation of
the card, again including our proposed nonce-exchange. On
top of this L1RP-driven implementation, our Proxmark-based
programs include code to measure the message times needed
to assess our implementation. The timings (and other tests)
only refer to Level 1 commands up to and including the RATS
command, as these are the ones used in L1RP.
The results from one of our timing tests are shown in
Fig. 10, which also highlights the proposed changes to the
protocol (in this case, for a 4 byte UID).
Proxmark Implementation of L1RP: We modiﬁed the
Proxmark code to add two Level 1 functions, one to imple-
ment the reader side and the other the card side. These were:
• noncerdr this implements the reader side and executes
the protocol up to the RATS message. If bit 9 of the
ATQA message is set it carries out the nonce exchange.
The nonce is obtained using the Linux getrandom
function which gets random bytes from /dev/random.
• noncesim this simulates a card which expects to do a
nonce exchange and so sets bit 9 in ATQA. The card is
given a random UID and nonce, these are both obtained
using the Linux getrandom function.
Notes on the implementation:
• We used ATQA bit 9 to ﬂag that the card can do the
nonce exchange.
• To identify the reader’s nonce exchange message, we
chose an unused message code, 0x99. On the card side,
we send the nonce and a Block Check Character (BCC),
as is done when a card sends its UID.
• We tested the backwards compatibility of our new card
and reader implementations by verifying that they would
work with an existing EMV reader and EMV card.
Time Measurements for L1RP: The RTT using the Prox-
marks was measured in 30 tests with a mean of 1,116µs
with a standard deviation of 2.3µs. This time is very similar
to the time measured for the SELECT UID command for
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:17 UTC from IEEE Xplore.  Restrictions apply. 
1750
the Proxmarks and for ‘actual’ payment cards (see Table I,
Appendix C), which suggests time bounding this exchange
may work well. These Proxmark results are encouraging, and
we will implement L1RP and obtain more measurements.
Challenges when Relaying over L1RP: Analysing our
Proxmark-issued timing data, we observed that most of the
time for the nonce-exchange is taken sending and receiving
the data (≈1037µs), i.e., not preparing the data. This makes a
relay with unmodiﬁed COTS hardware difﬁcult.
Reading the data directly and using this to modulate a
carrier signal used to transmit the data to a receiver where it is
demodulated and used to drive a loop antenna could provide a
low-level relay, but this is a much more difﬁcult undertaking
than the threat model we envisage (see Section III). This type
of lower-level relay has been illustrated for an LF RFID system
by Francillon et al. [19] who used it to attack a car’s RFID key-
entry system. However, this was for a LF RFID system and
not the HF RFID system used for EMV payment cards. While
implementing such a low-level (Level 1) attack on HF RFID
systems is theoretically feasible it has yet to be demonstrated.
VIII. RELATED WORK
Practical (relay) attacks against EMV were demonstrated in
a range of works, e.g. [39], [26]. Other attacks have been
reported against EMV. Two over the limit attacks, [2], [7] for
Visa are discussed in sub-section II-B. In [8], a Mastercard
card is made to look like a Visa card in order to perform an
over the limit attack on Mastercard, which is now patched.
[2] describes an attack that makes an ofﬂine reader accept an
invalid AC for Visa cards (an attack that was also described in
[26, p.5]. Murdoch et. al. [40] presented a MitM attack against
contact based EMV, and evidence
in practice is presented in
[11]. Emms et. al. [41] show how the non-TAP & PIN card
limit can be bypassed by switching currencies.
None of these attacks would work against EMV on mobile
devices if CDCVM authentication was always required, and
these attacks require a relay, and so would be stopped by a
protocol that prevented relaying (the main focus of our work).
We are the ﬁrst
to mount attacks bypassing authentication to
make illicit payments in mobile payment apps, and the ﬁrst to
look at and exploit their different operating modes.
Distance Bounding: DB protocols were introduced by
Brands and Chaum [42] with the view of combating relay-
based MitM attacks. In distance-bounding protocols a reader
and a tag (RFID card, smart card, etc.) run a challenge-
response protocol in which the reader measures the RTT and if
this is smaller than a given bound, the reader assumes physical
proximity between it and the card. The survey in [43] gives
numerous distance-bounding protocols, security concepts and
attacks in distance bounding.
RRP closely follows the previously proposed PaySafe proto-
col [26]. RRP was ﬁrst formally veriﬁed in [5]. [44] performs
a timing analysis of RRP and ﬁnds it secure, but without
varying the positions of the card in the ﬁeld, as we do.
NXP provides a distance-bounding protocol on their DES-
Fire cards. Patents [45], [46] are the only public source of
information on this, ﬁrst recounted in [47]. These show that
NXP’s distance bounding uses a Level 1 nonce exchange,
however it provides no details of how/whether this distance
bounding is tied to the upper level protocols or applications.
Symbolic Veriﬁcation of EMV: Past symbolic-veriﬁcation
models of EMV include [48], [2], [8] and of EMV with
distance bounding [47], [26], [5], [49], [44].
The most up-to-date and complete formal model for EMV is
in [2]. We follow this model (for contactless Visa, Mastercard)
and extend it to encode mobile apps in transport and non-
transport models, in a unitary manner (CDA, DDA, high/low
in one model). We add a full model of the IAD to their models,
and show that Visa/bank checking the IAD stops their attack.
Symbolic Veriﬁcation of Distance Bounding: Automat-
able symbolic veriﬁcation of distance-bounding protocols was
ﬁrst proposed by Basin et. al. [50]. Many recent developments
exist. Nigam et. al. [51] develop a distance bounding checking
tool based on Maude. Rowe et al, [52] present a framework
based on strand spaces. Debant et. al. in [49], [53] are the
only symbolic models to encode time and location explicitly.
Symbolic models tend to eliminate timing even if this is
considered in some of the theoretical models. Chothia et.
al., suggest a framework without an explicit model of time
[26], [47]. Mauw et. al. [5], [54] have a proof that, under
certain conditions and for certain protocols (e.g., with one DB
exchange, with no other timing notions, without certain mes-
sage inter-dependencies), timed DB-security can be reduced to
checking an order of events on traces; this elegant deﬁnition
can be easily checked in the Tamarin prover and is the method
we use. Boureanu, et. al. [44] extends this to support mobility.
IX. CONCLUSIONS
We investigated mobile payments-apps in different opera-
tion modes, showing their different defences against bypassing
authentication in transport mode. This allows us to make
fraudulent Visa payments with locked iPhones of any value we
wish. This vulnerability is due to the lack of checks performed
on the iPhone combined with the lack of checks at the Visa
back end. Apple Pay with Mastercard is not vulnerable and
nor are Mastercard and Visa with Samsung Pay.
We have looked at the practical security of Mastercard and
Visa’s relay-counteraction solutions for EMV, and found that
the former could potentially be functionally improved, whereas
the latter is lacking in security. To ﬁx these issues, we have
proposed an EMV relay-resistant protocol that combines ideas
from both the Mastercard and Visa relay-countermeasures
proposals. We have proved our protocol formally correct and
described a trial implementation of its distance-bounding part,
on Proxmarks; this shows our protocol is practical for EMV
cards, and also for use with Apple Pay and Samsung Pay to
stop relaying to the so-called express transit systems.
Acknowledgements: This work is part of the “TimeTrust”
project, funded the UK’s National Cyber Security Centre
(NCSC). We thank Mastercard UK and Visa Research for
providing useful insights and feedback.
Authorized licensed use limited to: Tsinghua University. Downloaded on August 07,2022 at 12:59:17 UTC from IEEE Xplore.  Restrictions apply. 
1751
REFERENCES
[1] EMVCo, “Book C-2 kernel 2 speciﬁcation v2.7. EMV contactless
speciﬁcations for payment system,” Feb 2018.
[2] D. A. Basin, R. Sasse, and J. Toro-Pozo, “The EMV standard: Break,
ﬁx, verify,” in Security and Privacy (SP), 2021.
[3] C. Yuexi, M. Kekicheff, M. Top, and H. Ngo, “Binding Cryptogram
with Protocol Characteristics,” 2019, uS Patent App. 16/348,085.
[4] H. Shan and J. Yuan, “Man in the NFC,” DefCon 25, 2017.
[5] S. Mauw, Z. Smith, J. Toro-Pozo, and R. Trujillo-Rasua, “Distance-
bounding protocols: Veriﬁcation without time and location,” in IEEE
Symposium on Security and Privacy, SP, 2018.
[6] “Lab 401 proxmark 3 rdv 4.” [Online]. Available: https://lab401.com/
products/proxmark-3-rdv4
[7] L.-A. Galloway and T. Yunusov, “First contact: New vulnerabilities in
contactless payments,” in Black Hat Europe, 2019.
[8] D. Basin, R. Sasse, and J. Toro-Pozo, “Card brand mixup attack:
Bypassing the PIN in non-visa cards by using them for visa transactions,”
in 30th USENIX Security Symposium, 2021.
[9] “Practical EMV relay protection: Artefacts.” [Online]. Available:
https://gitlab.com/practical emv
contactless
mobile
[10] “Visa
payment
speciﬁcation,”
https:
//technologypartner.visa.com/Library/Speciﬁcations.aspx.
[11] H. Ferradi, R. Geacuteraud, D. Naccache, and A. Tria, “When
organized crime applies academic results - a forensic analysis of an
in-card listening device,” IACR Cryptology ePrint Archive, vol. 2015,
p. 963, 2015. [Online]. Available: https://eprint.iacr.org/2015/963
2019.
[On-
https://usa.visa.com/content/dam/VCOM/download/
line]. Available:
merchants/visa-merchant-data-standards-manual.pdf
standards manual,”
“Visa merchant
[12] Visa,
data
[13] EMVCo, “Book C-3 kernel 3 speciﬁcation v2.6. EMV contactless
speciﬁcations for payment system,” Feb 2016.
[14] ——, “EMV payment tokenisation speciﬁcation – technical framework
v2.2,” 2020.
[15] “Visa contactlesspayment speciﬁcation,” https://technologypartner.visa.
com/Library/Speciﬁcations.aspx.
[16] EMVCo, “Book 2: Security and key management,” Nov 2011.
[17] Visa Research, “Visa proposal for level 1 protocol parameter binding
against relay attack, version 0.1,” 2017.
[18] S. Meier, B. Schmidt, C. Cremers, and D. A. Basin, “The tamarin prover
for the symbolic analysis of security protocols,” in Computer Aided
Veriﬁcation - 25th International Conference, CAV, 2013.
[19] A. Francillon, B. Danev, and S. Capkun, “Relay attacks on passive
keyless entry and start systems in modern cars,” Cryptology ePrint
Archive, Report 2010/332, 2010, https://eprint.iacr.org/2010/332.
[20] M. Singh, P. Leu, and S. Capkun, “UWB with pulse reordering:
Securing ranging against relay and physical-layer attacks,” in Network
and Distributed System Security Symposium, NDSS, 2019.
[21] “Where you can travel on public transport with apple pay,” 2020.
[Online]. Available: https://support.apple.com/en-gb/HT207958
[22] “Samsung faq,” 2020. [Online]. Available: https://www.samsung.com/
uk/samsung-pay/faq/
[23] ISO, “14443-3: 2018 – Identiﬁcation cards – Contactless integrated
circuit cards – Proximity cards – Part 3: Initialization and anticollision,”
International Organization for Standardization, Standard, 2018.
[24] “Common vulnerability scoring system version 3.1: Speciﬁcation
https://www.ﬁrst.org/cvss/
[Online]. Available:
document,”
speciﬁcation-document
2019.
[25] “Common vulnerability scoring system version 3.1 calculator,” 2019.
[Online]. Available: https://www.ﬁrst.org/cvss/calculator/3.1
[26] T. Chothia, F. D. Garcia, J. de Ruiter, J. van den Breekel, and M. Thomp-
son, “Relay cost bounding for contactless EMV payments,” in Financial
Cryptography (FC), ser. LNCS, 2015.
[27] Citi bank,
“Merchant
[Online]. Avail-
https://www.citibank.com/tts/solutions/commercial-cards/assets/
category codes,” 2015.
able:
docs/govt/Merchant-Category-Codes.pdf
[28] EMVCo, “Book 3: Application speciﬁcation,” Nov 2011.
[29] B. Blanchet, “Security protocol veriﬁcation: Symbolic and computa-
tional models,” in Principles of Security and Trust, 2012.
[30] D. Dolev and A. Yao, “On the Security of Public-Key Protocols,” IEEE
Transactionson Information Theory 29, vol. 29, no. 2, 1983.
[31] N. Durgin, P. Lincoln, J. Mitchell, and A. Scedrov, “Undecidability
of Bounded Security Protocols,” in Workshop on Formal Methods and
Security Protocols (FMSP’99), 1999.
[32] S.
Jasek, “A 2018 practical guide to hacking nfc/rﬁd,” 2018.
[Online]. Available: https://smartlockpicking.com/slides/Conﬁdence A
2018 Practical Guide To Hacking RFID NFC.pdf
[33] Android Developers,
overview,”
2019. [Online]. Available: https://developer.android.com/guide/topics/
connectivity/nfc/hce
“Host-based
emulation
card
[34] EMV, “Contactless speciﬁcations for payment systems, book A, version
2.6 – architecture and general requirements,” 2016.
[35] EMVCo, “Book 4: Cardholder, attendant, and acquirer interface require-
ments,” May 2017.
[36] W. Schindler and W. Killmann, “Evaluation Criteria for True (Physical)
Random Number Generators Used in Cryptographic Applications,” in
Workshop on Cryptographic Hardware and Embedded Systems, 2002.
[37] R. N. Akram, K. Markantonakis, and K. Mayes, “Pseudorandom Number
Generation in Smart Cards: An Implementation, Performance and Ran-
domness Analysis,” in New Technologies, Mobility and Security, 2012.
[38] A. Francillon and C. Castelluccia, “TinyRNG: A Cryptographic Random
Number Generator for Wireless Sensors Network Nodes,” in Modeling
and Optimization in Mobile, Ad Hoc and Wireless Networks and
Workshops, 2007.
[39] L. Francis, G. Hancke, and K. Mayes, “A practical generic relay attack
on contactless transactions by using NFC mobile phones,” International
Journal of RFID Security and Cryprography (IJRFIDSC), 2013.
[40] S. J. Murdoch, S. Drimer, R. J. Anderson, and M. Bond, “Chip and pin
is broken,” in Symposium on Security and Privacy, S&P, 2010.
[41] M. Emms, B. Arief, L. Freitas, J. Hannon, and A. van Moorsel,
“Harvesting high value foreign currency transactions from EMV con-
tactless credit cards without the PIN,” in Computer and Communications
Security, CCS, 2014.
[42] S. Brands and D. Chaum, “Distance-bounding protocols,” in Advances
in Cryptology – EUROCRYPT. Springer, 1993, pp. 344–359.
[43] G. Avoine, M. Bingol, I. Boureanu, S. Capkun, G. Hancke, S. Kardas,
C. Kim, C. Lauradoux, B. Martin, J. Munilla, and et al, “Security of
Distance-Bounding: A Survey,” CSUR, vol. 4, 2017.
[44] I. Boureanu, T. Chothia, A. Debant, and S. Delaune, “Security Anal-
ysis and Implementation of Relay-Resistant Contactless Payments,” in
Computer and Communications Security (CCS), 2020.
[45] P. Thueringer, H. De Jong, B. Murray, H. Neumann, P. Hubmer, and