### 4. VirtualBox

实际上，我们的Docker环境是部署在VirtualBox中的一个Linux虚拟机上。因此，只要能够管理这个Linux虚拟机，就可以有效地管理Docker。

#### 4.3.2 创建容器命令

关于Windows下Docker的管理工具，我个人推荐使用Git Bash作为Docker客户端管理工具。当然，前提是已经启动了Docker环境。这是一种有效的Docker管理方式。

好了，闲话少说，直接进入正题。

##### 4.3.2.1 初始化工作

1. **第一步：启动Docker环境**
   - 选择“Docker Quickstart Terminal”，右键以管理员身份运行。

2. **第二步：开启Git Bash客户端并配置环境变量**
   - 右键点击桌面，选择“Git Bash Here”启动客户端。
   - 配置Docker Machine环境变量：
     - 查询环境变量要求：
       ```bash
       Administrator@USER-20170106BT MINGW64 ~/Desktop
       $ docker-machine env
       ```
     - 执行环境变量要求语句：
       ```bash
       Administrator@USER-20170106BT MINGW64 ~/Desktop
       $ eval $("C:Program FilesDocker Toolboxdocker-machine.exe" env)
       ```

##### 4.3.2.2 下载镜像

使用以下命令拉取镜像（以最新版Ubuntu为例）：
```bash
$ docker pull ubuntu:latest
```
查询已下载的镜像：
```bash
$ docker images
REPOSITORY                     TAG         IMAGE ID    CREATED        SIZE
hub.c.163.com/library/ubuntu   latest      7b9b13f7b9c0  9 days ago    118MB
```
注：截图中使用的是网易提供的docker库（c.163.com），因为官方下载速度较慢。如果可以接受官方下载速度，建议使用官方镜像库。

##### 4.3.2.3 创建Ubuntu系统环境（Docker容器）

现在我们来快速部署一个Ubuntu环境，执行以下命令：
```bash
Administrator@USER-20170106BT MINGW64 ~/Desktop
$ winpty docker run -it hub.c.163.com/library/ubuntu:latest bash
root@de0b90c6363d:/#
root@de0b90c6363d:/# cat /etc/issue
Ubuntu 16.04.2 LTS \n \l
root@de0b90c6363d:/# uname -a
Linux de0b90c6363d 4.4.66-boot2docker #1 SMP Fri May 5 20:44:25 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
root@de0b90c6363d:/#
```
通过这一条命令，我们成功创建了一个Ubuntu环境。

### 五、实现外网互联访问

接下来，我们将讨论如何实现对Docker容器的外网访问。由于在Windows环境下通过物理网卡访问Docker宿主机中的Docker容器的方法资料较少，这里将详细介绍该过程。

#### 5.1 Docker Bridge 桥接模式

##### 5.1.2 四种互联模式

Docker容器网络互联有四种网络连接方式。我们在使用`docker run`创建Docker容器时，可以用`--net`选项指定容器的网络模式。具体内容如下表所示。

但是，我们主要关注`bridge`模式，这是默认的网络互联模式，也是我们将要用到的模式。通过`bridge`模式，我们可以实现物理接口与Docker容器接口的互联，具体通过`-p`端口映射参数实现。

##### 5.1.3 Bridge 网络互联详解

下图展示了Linux原生环境下的Docker `bridge`桥接模式网络互联示意图。通过这张图，我们可以清晰地看到`container1`和`container2`与物理宿主机的`eth0`接口直接桥接在一起，这意味着物理主机的网络可以直接与Docker容器互联互通（需要配置端口映射）。

小结：在Linux环境中，宿主主机的网络可以直接与Docker容器接口互联，只需配置好端口映射即可实现Docker容器应用的对外发布。

##### 5.1.4 Windows环境中Docker桥接

###### 5.1.4.1 Windows环境下Docker容器不能外网访问问题分析

在Windows环境中，Docker容器存在于一个Linux虚拟机中。因此，这个虚拟的Linux主机才是Docker环境的真正宿主主机。虽然Docker容器可以与宿主机的`eth0`口直接桥接互联，但与物理主机（Windows主机）的本地接口并没有互联，这就是为什么在Windows中的Docker容器无法从外网访问的原因。

###### 5.1.4.2 Windows环境下实现Docker容器的外网互联

以下是实现Windows环境下Docker容器外网互联的具体步骤：

1. **配置Docker容器的端口映射**
   - 创建一个Samba容器并配置TCP 445端口映射：
     ```bash
     $ docker pull medicean/vulapps:s_samba_1  # 下载Samba漏洞镜像
     $ docker run -d -p 445:445 samba:lastest  # 创建镜像并配置445端口映射
     ```

2. **配置VirtualBox的端口转发**
   - 打开VirtualBox，依次选择“设置”-“网络”-“网卡1”-“高级”-“端口转发”，编辑端口转发规则。

3. **共享外网访问**
   - 通过物理网卡的接口地址`192.168.31.41`进行共享访问，验证是否成功。

### 六、Samba远程代码执行漏洞复现

#### 6.1 漏洞简介

- **漏洞编号**：CVE-2017-7494
- **影响版本**：Samba 3.5.0到4.6.4/4.5.10/4.4.14的中间版本
- **漏洞利用条件**：
  1. 服务器打开了文件/打印机共享端口445，允许公网访问。
  2. 共享文件拥有写入权限。
  3. 攻击者需猜解Samba服务端共享目录的物理路径。

满足以上条件时，攻击者可以通过上传恶意链接库文件，使服务端程序加载并执行它，从而实现远程代码执行。根据服务器的情况，攻击者还有可能以root身份执行。

#### 6.2 快速部署靶机环境

##### 6.2.1 安装Docker软件包

1. **下载Docker安装包**
   - 软件包下载地址：[Docker官网](https://www.docker.com/products/docker-desktop)

2. **双击默认安装**
   - 注意：如果你已经安装了VirtualBox，请先卸载并重启后再安装Docker环境。

3. **启动Docker环境**
   - 第一次启动时可能会遇到有关`boot2docker.iso`的报错，具体操作参见章节3.4。

##### 6.2.2 创建靶机容器

1. **配置Git Bash客户端环境变量**
   - 具体内容参见章节4.3.2.1。

2. **拉取Samba漏洞镜像**
   - 命令：
     ```bash
     $ docker pull medicean/vulapps:s_samba_1
     $ docker images
     ```

3. **创建Samba漏洞环境容器并设置端口映射**
   - 命令：
     ```bash
     $ docker run -d -p 445:445 medicean/vulapps:s_samba_1
     $ docker ps -a
     ```

##### 6.2.3 配置VirtualBox端口转发

有关445端口的端口转发内容，请参见章节5.1.4.2的小标题(2)。

##### 6.2.4 Samba共享服务验证

手动访问物理网卡的IP地址共享，测试是否可以正常访问共享目录。

#### 6.3 MSF攻击复现

##### 6.3.1 is_knonw_pipename.rb攻击脚本下载

1. **is_known_pipename.rb POC下载链接**
   - [POC下载链接](https://example.com/is_known_pipename.rb)

2. **is_known_pipename.rb脚本存放MSF路径**
   - `/usr/share/metasploit-framework/modules/exploits/linux/samba/`

##### 6.3.2 开启MSF框架，发起攻击

1. **进入MSF框架**
2. **调用攻击模块，设定攻击参数**
3. **发起攻击，获取控制权限**

至此，这篇文档终于完成了。各位读者如果在学习过程中遇到任何问题或对本文档有任何意见，欢迎大家积极留言。希望与大家共同学习交流，一起进步。感谢各位读者坚持看完这篇拙文，谢谢！

### 七、学习参考与资源

- **视频学习**
  - Docker从入门到实践：[课程链接](https://study.163.com/course/courseLearn.htm?courseId=1002892012#/learn/video?lessonId=1003326200&courseId=1002892012)
- **网络互联知识**
  - 网易蜂巢镜像中心
  - doccloud镜像市场
  - medicean漏洞镜像库