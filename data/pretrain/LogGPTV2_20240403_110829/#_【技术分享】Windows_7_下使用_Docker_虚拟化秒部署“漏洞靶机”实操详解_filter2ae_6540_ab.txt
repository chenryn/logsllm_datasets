（4）Virtual Box
想想，我们的这个Docker环境其实质就是部署在Viritul
Box中的一个Linux虚拟机中，那么只要我们能管理这个linxu虚拟，也就可以管理Docker了。
4.3.2 创建容器命令
关于Windows下关于Docker的管理工具说了这么多，个人这里推荐使用Git Bash
Docker客户端管理工具，当然前提是下在确认已经启动Docker环境后，所以这也是一种docker的管理方式。
OK,废话不多说了，直接上干货，各位看官请打起精神来呀，我们进入正题…..
4.3.2.1 初始化工作
（1） 第一步：启动Docker环境
选择“Docker Quickstart Terminal”，右击鼠标以管理员身份运行；
（2）第二步：开启Git Bash客户端，配置环境变量
选中桌面，点击鼠标右键，选中“Git Bash Here”启动客户端；接着就是配置Docker Machine环境变量，具体过程分为两步：
查询环境变量要求
    Administrator@USER-20170106BT MINGW64 ~/Desktop
    $ docker-machine env
执行环境变量要求语句
直接复制查询环境变量获取的最后一句脚本，执行即可（具体执行语句的内容以每个人的实际获取内容为准，以下语句为我个人环境变量查询后获取的内容）；
    Administrator@USER-20170106BT MINGW64 ~/Desktop
    $ eval $("C:Program FilesDocker Toolboxdocker-machine.exe" env)
4.3.2.2 下载镜像
使用以下语句，进行镜像的拉取（即下载），这里以快速部署一个ubuntu系统环境为例。
    $ docker pull ubuntu:latest # 使用pull 命令进行“ubuntu最新版镜像”拉取
    $ docker images #已拉取镜像内容查询
    REPOSITORY                     TAG IMAGE         ID    CREATED            SIZE
    hub.c.163.com/library/ubuntu   latest  7b9b13f7b9c0    9 days ago        118MB
注：
截图中以c.163.com网易提供的docker库作为演示，主要是官方下载太慢了，如果大家可以忍受这个速度的话，推荐大家使用c.163.com的镜像库。
4.3.2.3 创建Ubutu系统环境(Docker容器)
别眨眼哦，现在就是见证奇迹的时刻了，秒部署一个ubuntu环境，执行的命令如下
    Administrator@USER-20170106BT MINGW64 ~/Desktop
    $ winpty docker run -it hub.c.163.com/library/ubuntu:latest bash #创建docker容器
    root@de0b90c6363d:/#
    root@de0b90c6363d:/# cat /etc/issue
    Ubuntu 16.04.2 LTS n l
    root@de0b90c6363d:/# uname -a
    Linux de0b90c6363d 4.4.66-boot2docker #1 SMP Fri May 5 20:44:25 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
    root@de0b90c6363d:/#
看见了，秒建一个ubuntu环境，是不是很神奇呀，就这么一条命令敲下去，我们就有了一个ubuntu环境了。
**五、实现外网互联访问**
所以接下来，就是要实现外对docker容器的访问了，这里之所以要将“实现外网访问Docker容器”单独拿出来说，实在是因为网上真心没有什么资料说道在Windows
环境实现通过物理网卡来访问Docker宿主机中的Docker容器的方法，个人基本是来回找资料看视频，搞了两天才找到方案,所以这里一定要拿出来分享给大家。
**5.1 Docker Bridge 桥接模式**
5.1.2 四种互联模式
其实Docker容器网络互联有4种网络连接方式。我们在使用docker run 创建 Docker 容器时，可以用 –net
选项指定容器的网络模式，具体内容如下表。
但是有关于这4中模式的具体工作方式，我这里不做过的介绍，我们只重点关注bridge的工作方式。因为bridge模式是我们默认创建的docker容器的网络互联模式，也是我们将要用到的互联模式，通过bridge模式我们可以实现物理接口与docker容器接口的互联，具体实现配置，实际一个docker
配置参数就能搞定，即“-p”端口映射。
5.1.3 Bridge 网络互联详解
下图是一张Linux原生环境下的docker bridge桥接模式网络互联实现示意图，通过这张图我们可以清晰的看到“container1” &
“container2”（即docker容器1 &
2）与物理宿主机的eth0接口是直接桥接在一起的，那么这也就意味着物理主机的网络是可以与docker容器直接互联互通的(当然还要在docker下简单配置下“端口映射”)。
小结：Linux 环境的宿主主机的网络是可以与docker容器接口直接互联的，只要配置好“端口映射”就可以实现docker容器应用的对外发布了。
5.1.4 Windows环境中docker 桥接
5.1.4.1 Windows环境下docker容器不能外网访问题分析
那么问题就来了，为什么Windows环境中docker 桥接会存在问题呢，下面就带大家一起看看问题的究竟。我们也来看看在indows环境中docker
桥接中各个接口是怎样的一个情况。
如果大家还记得前面4.2章节的“预告”内容，就会很容易看明白下面这一张docker容器网络互联逻辑图了。
我们可从图中看到在Windows环境中，docker容器是存在于一个linux虚拟机中的，也就说这个虚拟的linux主机才是docker环境的真正宿主主机，那docker容器被创建后，其与宿主机的eth0口可以直接“桥接”互联，但是与我们的物理主机“Windows主机”的“本地接口”并没有与其互联，这就可以理解为什么在Windows中的docker容器，我们无法从外网去访问他们的原因了。
5.1.4.2 Window环境下实在docker容器的外网互联
预告：全文最干的干货来了，大家请屏住呼吸跟我来…
这次就不卖关子了，简单的告诉大家怎样才能做到Windows环境下实现“docker容器的外网互联访问，具体实现两步即可。
（1）配置docker 容器的“端口映射”
docker容器配置端口映射，其实很简单，只要在创建docker容器时，添加一个“-p”的参数即可，下面以创建一个TCP 445 端口映射的samba容器。
    $ docker pull medicean/vulapps:s_samba_1   #1、下载samba漏洞镜像
    $ docker run -d -p 445:445 samba:lastest   #2、创建镜像，并配置445的端口映射；
命令解释
（2）配置virtualbox的端口转发；
首先打开桌面的virturlbox，然后依次选择“设置”-“网络”-“网卡1”-“高级”-“端口转发”，编辑“端口转发”，具体配置项解释，请见截图。
（3）共享外网访问
直接通过物理网卡的接口地址 192.168.31.41进行共享访问，访问成功！！！
**六、Samba远程代码执行漏洞复现**
**6.1 漏洞简介**
漏洞编号：
CVE-2017-7494
影响版本：
Samba 3.5.0到4.6.4/4.5.10/4.4.14的中间版本
漏洞利用条件：
攻击者利用漏洞可以进行远程代码执行，具体执行条件如下：
1\. 服务器打开了文件/打印机共享端口445，让其能够在公网上访问
2\. 共享文件拥有写入权限
3\. 恶意攻击者需猜解Samba服务端共享目录的物理路径
满足以上条件时，由于Samba能够为选定的目录创建网络共享，当恶意的客户端连接上一个可写的共享目录时，通过上传恶意的链接库文件，使服务端程序加载并执行它，从而实现远程代码执行。根据服务器的情况，攻击者还有可能以root身份执行。
**6.2 快速部署靶机环境**
预告：前面讲述了这么多的基础知识与操作过程，大家看了可能会觉的非常累，那么我们现在给大家上点真正的“干货”，跟我来…
6.2.1 安装Docker软件包
有关windows 7 下进docker环境的安装准备工作，请参照前面的详解内容逐步安装即可，这只简单个大家归纳下安装步骤和注意事项。
（1）下载docker 安装包
软件包下载地址：
（2）双击默认安装即可；（注意你如果已经安装了virtualbox,请卸载重启后在进行docker环境报的安装）
（3）启动docker环境，注意第一次启动的有关于“boot2docker.iso”的报错内容，具体操作参见章节3.4；
6.2.2 创建靶机容器
（1）Docker启动后,配置 git bash 客户端环境变量，具体内容参见章节4.3.2.1；
（2）拉取 samba 漏洞镜像
镜像拉取命令：docker pull medicean/vulapps:s_samba_1
本地镜像查询：docker images
（3）创建samba 漏洞环境容器，并设置好端口映射(具体相关命令解释参加章节5.1.4.2)
容器创建命令：$ docker run -d -p 445:445 medicean/vulapps:s_samba_1
容器查询命令：$ docker ps -a
注：由于镜像在官方站点，故下载的过程会非常慢，大家实验时请耐心等待（么办法就是这么蛋疼）。
6.2.3 配置virturlbox 端口转发
有关 445 端口的端口转发内容，请参见章节5.1.4.2 的小标题(2)。
6.2.4 samba 共享服务验证
最后手动访问下物理网卡的IP地址共享，测试下看是否可以正常访问共享目录。
****
**6.3 MSF 攻击复现**
6.3.1 is_knonw_pipname.rb 攻击脚本下载
网上已经放出了针对CVE-2017-7494漏洞的攻击exp（is_knonw_pipname.rb）,我们直接将其现down下来，放到MSF框架的相应路径下即可。
（1）is_known_pipename.rb POC下载链接：
（2）is_known_pipename.rb脚本存放MSF路径：
/usr/share/metasploit-framework/modules/exploits/linux/samba/
对于 is_know_pipename.rb脚本，我们可以直接使用wget进行下载，然后使用命令cp复制到相应的目录。
6.3.2 开启MSF框架，发起攻击
（1） 进入MSF框架
（2） 调用攻击模块，设定攻击参数
（3） 发起攻击，获取控制权限
至此这边篇文档终于扫尾了，太不易了，各位看官如果下学习中遇到什么问题，或者对我的这文档有啥意见希望大家积极给我留言，愿与大家共同学习交流，一起进步…最后拜谢各位看官坚持看完这篇拙文，谢谢！！！
**  
**
**七、学习参考与资源**
视频学习
docker从入门到实践：
[https://study.163.com/course/courseLearn.htm?courseId=1002892012#/learn/video?lessonId=1003326200&courseId=1002892012](https://study.163.com/course/courseLearn.htm?courseId=1002892012#/learn/video?lessonId=1003326200&courseId=1002892012)
网络互联知识
网易蜂巢镜像中心
doccloud镜像市场
medicean漏洞镜像库