**00:18:52 - Saron Yitbarek**：
它改变了一切。事实上，你完全可以把引领 Web 2.0 革命的功劳都归功于 JavaScript。任何有 Web 浏览器的人都突然之间拥有了一个摆在他们面前的开发环境。但是，正如我之前提到的，老保守派对民主性并不一定感到舒服。
**00:19:16 - Michael Clayton**：
早期反对 JavaScript 的人当中，我也是其中的一员。我有个阻止 JavaScript 运行的浏览器扩展。我认为它是一种无用的玩具语言，每当我访问一个网页，该网页的某些关键功能需要 JavaScript 时，我都会感到愤怒。我想，“你应该在没有 JavaScript 的情况下以正确的方式构建你的网站。”
**00:19:43 - Saron Yitbarek**：
然而，很快，Brendan Eich 仅仅用 10 天创建的语言，它所蕴含的美和潜力对每个人来说都变得显而易见了。现在，它不仅征服了浏览器，也征服了服务器。有了 Node.js，这种小众语言的全新领域已经打开。
**00:20:03 - Michael Clayton**：
当我听说 JavaScript 打算在服务器上运行时，我想，“为什么会有人想这么做？”那时，我已经是一名专业的 JavaScript 开发人员了。我每天都写很多 JS，但我还是不太明白为什么它可以归属到服务器端，事实证明，像很多听众都知道的那样，Node.js 现在是这个行业的一支巨大的力量。我认为这是有充分理由的。
**00:20:32**：
Node.js 如此成功的原因之一，就是它拥有庞大的前端 JavaScript 开发人员和客户端开发人员社区。他们写代码，他们在用 JavaScript 为浏览器编写代码。这么多的开发者，现在又可以用同样的语言来为服务器端编程，这让他们立刻就拥有了大量的可以立即开始为服务器端做贡献的人员。这个工具已经在你的工具包中，你只需将其拿出来，安装上 Node.js，然后就可以加入到编码竞赛中去了。
**00:21:11 - Saron Yitbarek**：
先是在浏览器中，然后又在服务器上。JavaScript 是这种朴实无华、暗自芬芳，有时候也会有点古怪的编程语言。这个浏览器战争中的幸存者，被大家低估了。
**00:21:25 - Michael Clayton**：
JavaScript 算是编程语言中的灰姑娘故事，它始于基本上是在 10 天内拼凑起来的初态。中间经历了来自其他编程社区的许多嘲笑，然而仍以某种方式继续取得成功和增长。最后到现在稳居世界上最流行的编程语言中排名第一、第二的位置。JavaScript 基本上无处不在。在网页内部运行的能力意味着 JavaScript 和 Web 一样普及、非常普遍。
**00:22:08 - Saron Yitbarek**：
Michael Clayton 是红帽公司的工程师。JavaScript 吞噬了世界吗？它是否搭上了 Web 的顺风车，才成了一种主流语言？我想找出 JavaScript 的实际边界在哪里。
**00:22:25 - Klint Finley**：
嗨，我叫 Klint Finley。我是 Wired.com 网站的撰稿人。
**00:22:28 - Saron Yitbarek**：
Klint 对同样的事情也很好奇。他越是关注今天 JavaScript 的运行方式，就越发意识到它已经渗透到他的在线生活的每一个环节。
**00:22:40 - Klint Finley**：
在你还没来得及决定是否要让所有这些不同的应用程序在你的电脑上运行之前，JavaScript 已经成为一种可以增强整个应用程序能力的工具。它们就那么运行了，它们参与了广告或促进广告商使用的跟踪。所以，在你的浏览器中，有很多事情在无形中发生，你甚至可能根本不知道，也不希望发生。
**00:23:07 - Saron Yitbarek**：
因此，Klint 决定做一个小实验。
**00:23:10 - Klint Finley**：
我决定试着在没有 JavaScript 的情况下使用 Web 一段时间。我决定试一试，花一周时间禁用浏览器中的 JavaScript。
**00:23:21 - Saron Yitbarek**：
听起来很简单，但是放弃所有 JavaScript 产生了一些令人惊讶的效果。因为 JavaScript 已经变得如此之大，如此之全，这种以轻量级著称的语言现在实际上占用了大量的空间和能源。当 Klint 屏蔽了那种语言时才发现……
**00:23:39 - Klint Finley**：
总体而言，这在很多方面都是一种更好的 Web 体验，比如页面加载更快，页面更干净，我电脑的电池续航时间更长，并且我对电脑上发生的事情有了更多的控制感，因为没有这些奇怪的、看不见的随机程序在后台运行。
**00:24:02 - Saron Yitbarek**：
想象一下第一次过上没有弹出式广告的生活是多么幸福。
**00:24:07 - Klint Finley**：
很多东西很大程度上依赖于 JavaScript 来加载。所以网页变得简单多了，广告少了，干扰也少了。
**00:24:17 - Saron Yitbarek**：
不过，这种整洁的 Web 体验并不是全部。如果你拔掉 JavaScript 的插头，Web 的某些部分就完全不能工作了。
**00:24:26 - Klint Finley**：
很多内容都不能正常运行了。Gmail 把我重定向到了一个为旧手机设计的不同版本。Facebook 也一样，很多流畅的互动没有了，它变得更像是一系列的网页。因此，Netflix 无法正常工作。YouTube 无法正常运行。是的，任何非常依赖互动的东西都不能运行了。拿掉了 JavaScript，有好处也有坏处，最终我不得不做出抉择，有 JavaScript 总比什么都没有要好。
**00:25:05 - Saron Yitbarek**：
Klint Finley 是 Wired.com 的撰稿人。大多数人预测 JavaScript 只会继续主导移动和桌面应用程序开发。像基于浏览器的游戏、基于浏览器的艺术项目等等，它们的复杂程度正在飞涨。不断增长的 JavaScript 社区正在最大限度地利用这一潜力。
**00:25:34**：
值得回想一下，就在 1995 年，就在几十年前，Brendan Eich 坐在一个房间里，设计出一门新的语言。今天，这种语言渗透到我们所做的每一件事中。也许说一串新的代码会改变世界听起来有点陈词滥调，但它确实发生了。一位代码英雄将他对语言的所有热爱汇聚到 10 天的冲刺中，世界的 DNA 也将永远改变。
**00:26:10**：
我们可以为 Google Docs、YouTube 和 Netflix 而感谢 JavaScript。但是你知道，“能力越大，责任越大”，随着 JavaScript 的影响力在大量开源库的推动下不断增长，责任不再仅仅落在一个人身上了。一个更广泛的社区已经接过了责任。SlashData 最近估计 JavaScript 开发人员的数量为 970 万，在 GitHub 上，JavaScript 有比任何其他语言都多的 PR（ 拉取请求   Pull Requests ）。 JavaScript 在全世界代码英雄们的力量加持下，正在走向美好未来。
**00:26:59**：
下一期的《代码英雄》，我们将遇到另外一种 Web 语言，我们将探索 Perl 是如何在一个广阔的新领域蓬勃发展的。
**00:28:04**：
最后，有听众在网上分享了我们上一季的 Hello World 那一期，在该期中我们也谈到了 Brendan Eich 和 JavaScript。在那一期，有嘉宾说，在那 10 天里，Brendan 可能没有睡过多少觉，如果有的话，也是很少。好吧，Brendan 在推特上回应说，他确实在那次冲刺过程中睡过觉。想要更多地了解这 10 天发生了什么，请查看 Devchat 对 Brendan 的采访播客。我们会在我们的节目记录里加个链接。我是 Saron Yitbarek。下期之前，编码不止。
> 
> **什么是 LCTT SIG 和 LCTT LCRH SIG**
> 
> 
> LCTT SIG 是 LCTT  特别兴趣小组   Special Interest Group ，LCTT SIG 是针对特定领域、特定内容的翻译小组，翻译组成员将遵循 LCTT 流程和规范，参与翻译，并获得相应的奖励。LCRH SIG 是 LCTT 联合红帽（Red Hat）发起的 SIG，当前专注任务是《代码英雄》系列播客的脚本汉化，已有数十位贡献者加入。敬请每周三、周五期待经过我们精心翻译、校对和发布的译文。
> 
> 
> 欢迎[加入 LCRH SIG](/article-12436-1.html) 一同参与贡献，并领取红帽（Red Hat）和我们联合颁发的专属贡献者证书。
> 
> 
> 
---
via: 
作者：[Red Hat](https://www.redhat.com/en/command-line-heroes) 选题：[bestony](https://github.com/bestony) 译者：[gxlct008](https://github.com/gxlct008) 校对：[windgeek](https://github.com/windgeek), [FineFan](https://github.com/FineFan), [wxy](https://github.com/wxy)
本文由 [LCRH](https://github.com/LCTT/LCRH) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出