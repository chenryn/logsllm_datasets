a.p
对应于P(PD(a→Q))
对应于P口Q
对应于STOP
对应于(a→P|b→Q)
对应于a-P
235
---
## Page 259
时能发挥实际作用；能允许使用比CCS 更多的程序变形和优先技
的（设P≠Q)。
种交互作用。即在CCS中，有
个事件叉都可以各自独立地并明显地出现，作为和外部环境的一
的事件立即被隐匿起来，代之以记号。同步叉不是强制的：两
另一个要执行相应的简单事件，才出现同步现象。它们合作完成
两个进程在一起并发运行时，仅当一个进程要执行带杠事件，而
复杂，它包含隐匿、非确定性、穿插及同步。
不。
出了远为丰富的代数法则。我们希望这些法则在论证设计和实施
只保持最本质的区别，而得到尽可能广泛的等同性。因此我们给
性作为基点。本书的数学模型理论追求的恰好是相反的目标一—
不是减少。为避免限制模型的范围，故CCS以绝对不可少的等同
模型族的框架，每种模型的引入可扩大CCS中进程的等同性，而
的进程，在CCS中也是不同的。其原因在于，CCS 的目标是建立
236
CCS的每个事件有两个形式，简单形式(α)或带有杠的(a)
CCS 的基本的并发组合算子记作单竖|。
这些例子表明，CCS尽最区分各种进程；在本书中视为相同
而且前缀对非确定算子不可分配，如图7.4中的树亦是不同
(a.P)1(b.Q)=a.(P1(b.Q)) + b.((a,P)[Q)
7.4
它比组合算子Ⅱ更
一
---
## Page 260
极小的算子集在理论研究方面也是有用的。
则的简明性。为使数学理论实用，需要引入足够多的算子。寻求
子。由算子所对应的概念的清晰性，达到了算子所遵循的代数法
地，Ⅱ介绍并发和同步，独立于非确定性及藏匿，各有各的算
最纯粹的非确定性，完全独立于环境选择(x:B→P(x))。类似
查不同概念的算子一律引入。例如，非确定的选择算子门是介绍
简明性，使用这个模型很容易地定义了很多算子，只要有签于操
究。
的原因之一，并且大大简化了对等价关系所定义的模型族的研
能少的原始算子达到最强的表达能力。这也是CCS的优美且有力
效果，即（a.P)和（a.Q)共享（a.R)。CCS的目标之一是，用尽可
最后一个法则解释如何使用CCS的并行组合算子达到共享进程的
关事件及其带杠变种删去。下列CCS 的法则可解释其效用
算子丶，其作用为阻止有关事件的出现，并从字母表中将所有有
备就绪，哪对进程能成功地同步执行，则是非确定的。如．
这样，仅允许两个进程执行一个同步事件；若两个以上进程都准
(a.P)|(a,Q)1(a,R)=t,(P|(a,Q)|R)+,((a,P)|Q!R)
在本书中，我朵用的是不同途径。用单一的简单模型来达到
(a.P)|(a,Q)=r.(P1Q) +a.(P↓(a,Q)) +a,((a,P){Q)
由于增加了并行算子的复杂性，故无需屏蔽算子。但有局限
(a,P)1(a,Q)=a.(P|(a,Q))+a,((a.P)|Q)
((a,P)[(a,Q)|(a,R))\fa}=t,((P}(a.Q)|R)\{a})
((a.P)|(a,Q))\{a}=t,((P|Q)\{a})
(P+Q)\a}=(P\{a})+(Q\{a})
(a,P)\a} =(a,P)\{a} =NIL
+a.((a,P)|(a.Q)1R)
+a,((a,P)|Ql(a,R))
+a,(P1(a.Q)|(a,R))
+t.(((a,P)[Q[R)\{a})
237
---
## Page 261
模态逻辑在理论上是十分有趣的，但对通信进程而言，迄今还
进程的正确性证明。而且从不需要证明一个进程不满足其描述。
程。反之，使用sat时，就可由分进程的正确性的证明构造复合
这意味着，在开始证明进程P的正确性时，必须先写下这整个进
不是程序的结构。如否定词的规则是
这个演算完全不同于关于sat关系的演算，它基于描述的结构，而
表示为
一个证明正确性的演算；进程P满足描逃S，用传统的逻辑记号
也刻画了一个进程，它若以a开始，
对偶
刻画了一个进程，它可完成α，然后按S刻面的行为动作，而其
要条件是它们满足相同的描述，即
察的集合。等同性原理可象征地表示为，两个进程P，Q等价的充
书的数学理论的基础，这个数学理论将谜程等同于对其行为的观
哲学上的不可分辨物的等同性原理的一个应用。这个原理也是本
行为，也是另一个进程的可观察行为，则这两个进程等价；这是
如何定义对进程进行观察和试验：两个进程中任一个的可观察的
略更多的隐匿部分。Milner为此引入了观察等价的概念。这涉及
是表达和研究各种弱等价定义的良好模型，这些弱等价关系会忽
相同的可观察的行为，而且有相同的被隐匿的行为。因此，CCS
看到有意义的应用。
238
CCS 中的等同性是一种强等同关系，两个相等的进程不仅有
Milner还引入模态逻辑描述进程的可观察的行为。模态词
若
P=F 
不戒立
S,P=S=Q=S
Prs
则以后如S动作。并建立了
---
## Page 262
用于理论研究和实际应用。
即都提供了描述、设计和实施的数学基础；而且这两者都能同时
取的途径的实际应用。事实上这两个途径的主要特征是相同的，
等价关系，从而也给出了比CCS更强的代数法则。
非确定死锁可能性的最弱的一种观察：因此拒绝集能给出更弱的
光引入拒绝事件，还必须引人拒绝集的原因。看来，拒绝集是对
就不可能对P的行为做出足够深入的观察。这也是为什么我们不
照这一定义，T.P和P不同余的。发现同余关系的一整套法则是数
是观察等价于进程F(Q)，则称进程P和Q是（观察）同余的。按
察整个复合体的行为。若对语言中每个可表示的F，进程F(P)
环境F(P)中，研究在环境F(P)中的试验，而不是仅对P可实行
但是（r.P+.NIL)却不等价于(P+NIL)；因为后者等同于P，
T是一个隐匿事件，一个自然的观察定义应能导出等价关系
学上的重要成果。
而前者可能经过非确定性选择导致死锁。
用同一个函数作用后其结果亦应相同，也就是
引入观察同余的原因在于，不将进程P放入其环境F(P)中，
上面过多地强调了和CCS的区别，也过多地陈越了本书所朵
为解决这一问题，Milner使用了同余的概念。将进程P放入
可惜，这个简单的等价定义不尽满意。对两个相同的进程，
((0)4=(d))(0=d)
(r.P)=P
239
---
## Page 263
Q1.4换钱机
提升。
请构造进程SOLDIER；为简化起见，可规定课程学习期间不得
参加全日制的课程学习。凡注册就读的，都能成功地读完。读完
应征为士官；提升时，可得到更高一级军街，任何军衡的军人可
Q1.3军街
提示：
士。请构造进程ST1P，其字母表为
作称为outIp，一直拿空为止。也可用动作refill，放满30个便
Q1.2硬币仓
一个课程后可再选一课程。故
请构造进程ACC。
目，也不担心盈余或超支。这样，帐号的宇母表即为
最终还可能终止这个帐号。我们先不考虑他每次存或取的款项数
Q1.1银行帐户
某军队只有三种军街：士官、尉官和将军。征募时，士兵可
240
宇母表为{in5p,out2p,outlp}的换钱机，可不断破开5p的整
银行的每个客户先开设一个帐号。然后他就可以多次存取，
一个硬币仓，至多保留30个便士；一次可以拿走一个，该动
阅读1.1、1,2及1.3各节，特别是1.1.1节的最后一段。
：使用联立递归式定义保留有n个硬币的进程STn的行为。
aSOLDIER= {enlist ,enrol,complete,promote}
aST1P=[outip;refill1}
一、选择和递归
练
---
## Page 264
（2）在这块板上再加些篱笆（越少越好），使筹码总能达到板子
硬币仓也可随时重新注入新硬币。其字母表为
（1）构遗一个进程，其字母表为[up,right}，分别表示筹码在
01.6 篱芭
Q1.5
为5P。构造进程CH，使其行为如上所迹。
钱。顾客可按自己愿望将5p换成1p和2p的任意组合，自然总数恰
Q2.1带有硬币仓的换钱机
可免读）。
后可连续发出三块巧克力。
注意：
本机器类似于Q1.4，但它至多保留30个1p和17个2p的硬币。
进程VMS3的行为如VMS2，但它至多可接受三个硬币，然
阅读2.1、2.2及2.3各节（至2.3节例X1)，以及2.6节（2.6.3
进程定义。
的右上角，而且对筹码活动区的限制也最少。给出修改后的
篱笆。
Q1.6图中板上的运动。图中粗线代表篱笆，筹码不能穿越
VMS3
算子|的每一边的第一个事件必须不同。
二并发性
Q1.6图
241
---
## Page 265
Q2.4军衡（再续）
其中
提示：课程就读和提升是独立的，故可作为不同的进程，这样
Q2.3军衔（续）
(4）同（3)，但停业期间允许存入。
（3）银行每天下午三时关门，上午九时开门。停止营业期间自
（1）允许顾客随时查询兵帐号现况，当然终止后的帐号是不能查
不同要求以不同进程实现。
Q2.2银行帐户（续）
提示：用三个进程并行组合，其中两个进程已在练习一中出现过，
（4）军人应征后，可随时阵亡。增加新事件die。
（3）重新规定就读期间不得提升。（提示：增加字母表为{enro，
(2）不能完成课程的军人必须重新注册再读，但第二次肯定能成
（1）五个军衔：士官、准尉、尉官、准将、将军。
（2）有一项新的法律，不准终止帐号。
在Q1.1中的答案基础上，并发以新的进程，达到下逃要求，
242
将Q2.3作如下修改，每次独立修改--项。
同Q1.3，但就读期闻可以提升。
promote，complete}的新进程。）
询的。新增加的进程的字母表为{query，terminate}。
功。在aSOLDIER中增加新事件reenrol。
字母表为
一个进程以阻止其它事件在shut至reopen期间发生。该进程
然不能和顾客打交道。引入两个新事件[shut，reopen}，并写
aCHST = {in5p,out1p,out2p,refill,refill2}
SOLDIER=enlist→(RANKIGOURSE)
αCOURSE={enrol,complete}
αRANK = [promote,enlist}
αACCU{shut,reopen}
---
## Page 266
empty信号。如此反复不已。
SCR先从左通道上输入消息串，直到执行rewind为止，然后从右
施，其字母表
书)，其字母表为
由前面的输入命合，或由定义式中的下标值所确定。
注意：输出命合中的表达式的每个变元的值必须事先有定义，或
Q3.3复制
通道上按原顺序输出同一消息串。当整个串输出完毕，就发出
Q3.2杂凌文件
Q3.1斐波纳契序列
(1）重写(PIQ)，并避免使用Ⅱ。每一步必须根据本书中给出的
Q2.5死锁的发现和消除
（2)
）董写(PIQ[S)，
SCR是一杂凑文件，一次性写入，一次性读出，可用磁带实
FIB向其右通道顺序输出斐波纳契序列中的元素（见4.2.2
REP如COPY进程，从左至右逐个拷贝消息。但一遇到&，
阅读4.1、4.2（至例X10）及4.3各节。
能地类同于(PHQ)，但不导致死锁。
构造字母表为{a,x，，y}的进程S，使（PHQIS）的行为尽可
CSP的规则。
定义进程P和Q如下：
解释（PIQ）中可能出现的四种死锁现象。
aSCR={left,n,right,n,rewind,empty}
αP={a,x,0,2},
使不出现，从而证明无死锁出现。
αFIB={right,n|nEN}
(0+0+#-4)=0
三、通
αQ={b,y,0,2}
243
---
## Page 267
（1）设计进程T1和R1，使上述网络的行为如同一个单位的缓存
Q3,6流控制
（2）进程ROUT从左通道向右通道拷贝消息。它用面数4e8检
（1）进程RIN由其左通道向右通道拷贝消息。同时还从通道ink
Q3.5环形站
(2)
（1）类似于Q1.1，但存入和提取作为输入通道，在其上传递存取
Q3.4银行帐户（再续）
入前尚待输出的。
提示：定义REP(s,t)，其中记载已输入的，S记载下一次输
注意：
输入输出工作。
就将已输入的消息串重新输出；重输完毕后，又继续正常的交替
(3)
244
余。
）引入新输出通道bounce。大于当前结余的提取不予理会，而
回控制信号。
COPY。通道nid用于由左向右传送数据，而通道con用于发