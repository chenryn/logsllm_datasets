tasks, recorded the number of correct and incorrect clicks
for each of them, and assigned scores based on the number
of correct clicks. The results are shown in Table 2.
These results demonstrate that in the experiments where
the participants were assisted by TrueClick, there was a
3.55 factor improvement in the scores on average. We also
Experiment
Original page
w/ TrueClick
Correct
Clicks
29
103
Clicks
91
17
Incorrect Median
Avg.
Score Score
0
3
0.725
2.575
Table 2: Results of the TrueClick user study, show-
ing the number of correct and incorrect clicks. The
presence of incorrect clicks when using TrueClick is
due to trick banners missed by our system.
checked these results for statistical signiﬁcance using a stan-
dard paired diﬀerence test, namely, the Wilcoxon signed-
rank test. The results of the test (V = 0, p < 4.82 ×
−7) conﬁrm that the scores obtained with and without
10
TrueClick indeed constitute non-identical populations.
Comparison to AdBlock Plus. Existing systems such
as Adblock Plus are capable of identifying and blocking trick
banners in some cases. To understand whether TrueClick
is necessary given the existence of such systems, we com-
pared its detection eﬀectiveness with Adblock Plus.
We conducted experiments with 415 manually-identiﬁed
trick banners from 82 websites that were not used in the
training phase of the previous experiments. TrueClick cor-
rectly identiﬁed 380 (91.6%) of these as trick banners using
the previously-generated classiﬁer without extra training or
manual tuning, whereas Adblock detected 190 (45.8%). In
contrast, there were only 8 banners detected by Adblock
Plus, but not TrueClick.
We stress that these result do not suggest TrueClick is a
substitute for Adblock Plus. TrueClick, as discussed and
evaluated in this paper, focuses on detection of trick banners,
and this experiment is not suﬃcient to draw conclusions on
its ability to detect ordinary, benign advertisements. There-
fore, we conclude that while Adblock Plus provides an eﬃ-
cient ﬁlter against general Internet advertising, supporting
it with TrueClick signiﬁcantly improves protection against
potentially malicious trick banners.
8. DISCUSSION
The system we propose for automated trick banner detec-
tion has some limitations that we highlight here. First, we
stress that in contrast to other work on trick banners and
attacks against users, TrueClick is intended to address the
speciﬁc case of images that masquerade as genuine download
or play links on webpages. While the techniques we make
use of here could be extended to cover other attacks, that is
not the focus of this work.
As we noted in our evaluation of the random forest clas-
siﬁer TrueClick uses, the models we are able to build over
our data set generate a non-trivial number of false positives.
However, our models nevertheless classify the majority of
trick banners correctly even when the threshold is set to
produce a 0% false positive rate. Therefore, this represents
a signiﬁcant reduction in the number of trick banners that
users must navigate, and our user experiments demonstrate
that this translates to much better security decisions in prac-
tice when TrueClick is deployed.
We note that due to variations in content between con-
secutive page loads, we have observed our system to clas-
sify some non-clickable regions of the page as trick banners.
However, due to the way in which we deploy our classiﬁer
(cid:23)(cid:25)(cid:22)
in the browser, this does not have generally have a deleteri-
ous eﬀect on the user experience as the mislabeled content
is non-interactive and obscuring it does not aﬀect the func-
tionality of the page.
Finally, an unlikely but interesting limitation of our sys-
tem we discovered during our experiments involved a small
number of image ﬁles that contained a corrupt GIF header.
Although these ﬁles could successfully be displayed in a
browser window, attempting to run our analysis on them
caused the image processing library in our implementation
to fail and abort the detection process. We only encountered
three such images over the course of our experiments. After
manual analysis of the ﬁles, we concluded that the images
were likely created by a buggy image editor. Still, this ob-
servation demonstrates that purposely injecting errors inside
image ﬁles could be used by trick banner creators as an eva-
sion technique against automated analysis by TrueClick
and similar tools, and highlights the importance of build-
ing an implementation with analysis routines robust against
errors in image ﬁle headers.
9. CONCLUSION
In this work, we have highlighted the problem of trick
banners that masquerade as benign links to download ﬁles
or play videos by emulating the visual characteristics of the
correct links. We have deﬁned a number of visual features
that distinguish trick banners from genuine links, includ-
ing image size, color, placement on the enclosing webpage,
whether they contain animation eﬀects, and whether they
consistently appear with the same visual properties on con-
secutive loads of the webpage. Using these features, we have
built TrueClick, which uses image processing and machine
learning to automatically detect trick banners. Our ap-
proach operates purely over visual features and, after an ini-
tial training, requires no further manual eﬀort, for instance
to compile blacklists as current approaches do.
We have evaluated our system over a data set of manually
labeled trick banners and benign image links. Our experi-
ments showed that our classiﬁer achieves a 96.97% true pos-
itive rate given a false positive rate of 3.03%, showing that
TrueClick can correctly detect the majority of the trick
banners on ﬁle sharing websites with a reasonable low false
positive rate. We tested our implementation of TrueClick
on 40 users, and found that TrueClick resulted in a 3.55
factor improvement in correct link selection. We also demon-
strate that TrueClick serves as an eﬀective and useful com-
plement to existing approaches for identifying trick banners
such as Adblock Plus. We conclude that TrueClick suc-
cessfully assists even technically-sophisticated users in cor-
rectly selecting benign image links despite the presence of
malicious trick banners.
It remains an open question whether TrueClick could
be supported with static analysis of webpages in order to
further improve detection eﬀectiveness, which is a promising
direction for future research.
Acknowledgment
This work was supported by the Oﬃce of Naval Research
(ONR) under grant N000141210165, and Secure Business
Austria.
10. REFERENCES
[1] Adblock Plus. https://adblockplus.org.
[2] ADSafe. http://www.adsafe.org.
[3] Privoxy. http://www.privoxy.org.
[4] Squid. http://www.squid-cache.org.
[5] E. Adar, D. S. Tan, and J. Teevan. Benevolent
Deception in Human Computer Interaction. In CHI,
2013.
[6] H. Bay, A. Ess, T. Tuytelaars, and L. V. Gool.
Speeded-Up Robust Features (SURF). Computer
Vision and Image Understanding, 110(3):346–359,
June 2008.
[7] L. Breiman. Random forests. Machine Learning,
45(1):5–32, Oct. 2001.
[8] J. Chandon and M. S. Chtourou. Factors Aﬀecting
Click-Through Rate. In C. P. Haugtvedt, K. A.
Machleit, and R. Yalch, editors, Online Consumer
Psychology: Understanding and Inﬂuencing Consumer
Behavior in the Virtual World, chapter 6. Psychology
Press, Jan. 2005.
[9] T. Chen, S. Dick, and J. Miller. Detecting Visually
Similar Web Pages: Application to Phishing
Detection. ACM TOIT, 10(2):5:1–5:38, June 2010.
[10] G. Conti and E. Sobiesk. Malicious Interface Design:
Exploiting the User. In WWW, 2010.
[11] M. Finifter, J. Weinberger, and A. Barth. Preventing
Capability Leaks in Secure JavaScript Subsets. In
NDSS, 2010.
[12] K. Gallagher and J. Parsons. A Framework for
Targeting Banner Advertising on the Internet. In
HICSS, 1997.
[13] F. Gargiulo and C. Sansone. Combining Visual and
Textual Features for Filtering Spam Emails. In ICPR,
2008.
[14] R. C. Gonzalez and R. E. Woods. Digital Image
Processing. Addison-Wesley Longman Publishing Co.,
Inc., Boston, MA, USA, 2nd edition, 2001.
[15] Google. Google Caja.
https://developers.google.com/caja.
[16] M. C. Grace, W. Zhou, X. Jiang, and A.-R. Sadeghi.
Unsafe Exposure Analysis of Mobile In-App
Advertisements. In ACM WiSec, 2012.
[17] C. Grier, S. Tang, and S. T. King. Secure Web
Browsing with the OP Web Browser. In IEEE S&P,
2008.
[18] J. Grossman and M. Johansen. Million Browser
Botnet. Black Hat USA, 2013.
[19] S. Guarnieri and B. Livshits. Gatekeeper: Mostly
Static Enforcement of Security and Reliability Policies
for Javascript Code. In USENIX Security, 2009.
[20] S. Guha, B. Cheng, and P. Francis. Privad: Practical
Privacy in Online Advertising. In USENIX NSDI,
2011.
[21] H. Haddadi, P. Hui, and I. Brown. MobiAd: Private
and Scalable Mobile Advertising. In ACM MobiArch,
2010.
[22] T. Hastie, R. Tibshirani, and J. Friedman. The
Elements of Statistical Learning: Data Mining,
Inference, and Prediction. Springer Series in Statistics.
Springer Science+Business Media, LLC, New York,
NY, USA, 2nd edition, 2009.
(cid:23)(cid:25)(cid:23)
[23] D. Hopwood. Jacaranda. http://www.jacaranda.org.
[24] L. Huang, A. Moshchuk, H. J. Wang, S. Schechter,
and C. Jackson. Clickjacking: Attacks and defenses. In
USENIX Security, 2012.
[25] InformAction. NoScript. http://noscript.net.
[26] Interactive Advertising Bureau. Ad Unit Guidelines.
http://www.iab.net/standards/adunits.asp.
[27] Interactive Advertising Bureau. IAB Internet
Advertising Revenue Report. 2012 Full Year Results.
http://www.iab.net/media/file/IAB_Internet_
Advertising_Revenue_Report_FY_2012_rev.pdf.
[28] A. Juels. Targeted Advertising ... And Privacy Too. In
Topics in Cryptology: CT-RSA. Springer-Verlag, 2001.
[29] I. Leontiadis, C. Efstratiou, M. Picone, and
C. Mascolo. Don’t Kill My Ads!: Balancing Privacy in
an Ad-supported Mobile Application Market. In
HotMobile, 2012.
[30] Z. Li, K. Zhang, Y. Xie, F. Yu, and X. Wang.
Knowing Your Enemy: Understanding and Detecting
Malicious Web Advertising. In ACM CCS, 2012.
[31] S. Maﬀeis and A. Taly. Language-Based Isolation of
Untrusted JavaScript. In IEEE CSF, 2009.
[32] Marketing Terms. Trick banner deﬁnition.
http://www.marketingterms.com/dictionary/
trick_banner/.
[33] M. Maurer and D. Herzner. Using Visual Website
Similarity for Phishing Detection and Reporting. In
CHI Extended Abstracts, 2012.
[34] E. Medvet, E. Kirda, and C. Kruegel.
Visual-Similarity-Based Phishing Detection. In
SecureComm, 2008.
[35] Microsoft. Microsoft Web Sandbox.
http://www.websandbox.org.
[36] M. Mimoso. Malware Campaign Leverages Ad
Networks, Sends Victims to Blackhole. http:
//threatpost.com/malware-campaign-leverages-
ad-networks-sends-victims-to-blackhole, Sept.
2013.
[37] K. Onarlioglu, U. O. Yilmaz, E. Kirda, and
D. Balzarotti. Insights into User Behavior in Dealing
with Internet Attacks. In NDSS, 2012.
[38] P. Pearce, A. P. Felt, G. Nunez, and D. Wagner.
AdDroid: Privilege Separation for Applications and
Advertisers in Android. In ASIACCS, 2012.
[39] C. Reis and S. D. Gribble. Isolating Web Programs in
Modern Browser Architectures. In EuroSys, 2009.
[40] A. Reznichenko, S. Guha, and P. Francis. Auctions in
Do-Not-Track Compliant Internet Advertising. In
ACM CCS, 2011.
[41] Y. Rubner, C. Tomasi, and L. J. Guibas. The Earth
Mover’s Distance as a Metric for Image Retrieval.
40(2):99–121, 2000.
[42] W. Salusky. Malvertising.
http://isc.sans.edu/diary/Malvertising/3727,
June 2007.
[43] U. Shankar and C. Karlof. Doppelganger: Better
Browser Privacy without the Bother. In ACM CCS,
2006.
[44] S. Shekhar, M. Dietz, and D. S. Wallach. AdSplit:
Separating Smartphone Advertising from
Applications. In USENIX Security, 2012.
[45] Symantec. Malware Security Report: Protecting Your
Business, Customers, and the Bottom Line.
www.verisign.com/verisigntransition101/files/
MalwareSecurityReport.pdf, 2011.
[46] M. Ter Louw, K. T. Ganesh, and V. N.
Venkatakrishnan. AdJail: Practical Enforcement of
Conﬁdentiality and Integrity Policies on Web
Advertisements. In USENIX Security, 2010.
[47] V. Toubiana, A. Narayanan, D. Boneh,
H. Nissenbaum, and S. Barocas. Adnostic: Privacy
Preserving Targeted Advertising. In NDSS, 2010.
[48] H. J. Wang, C. Grier, A. Moshchuk, S. T. King,
P. Choudhury, and H. Venter. The Multi-Principal OS
Construction of the Gazelle Web Browser. In USENIX
Security, 2009.
[49] L. Wenyin, G. Huang, L. Xiaoyue, Z. Min, and
X. Deng. Detection of Phishing Webpages Based on
Visual Similarity. In WWW, 2005.
[50] L. Zeltser. Malvertising: Some Examples of Malicious
Ad Campaigns.
http://blog.zeltser.com/post/6247850496/
malvertising-malicious-ad-campaigns, June 2011.
(cid:23)(cid:25)(cid:24)