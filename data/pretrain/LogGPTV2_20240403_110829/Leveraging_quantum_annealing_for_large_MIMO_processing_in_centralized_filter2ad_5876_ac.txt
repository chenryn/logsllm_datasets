1111
(b) Intermediate code
SIGCOMM ’19, August 19–23, 2019, Beijing, China
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
0010
0011
0001
0000
(c) Differential bit encoding
0110
1110
1010
0111
1111
1011
0101
1101
1001
1100
0100
(d) Gray code
1000
Figure 2: QuAMax’s bitwise post-translation for 16-QAM (64-QAM and higher-order modulations follow an analogous translation).
t
However, transmitters in practical wireless communication sys-
tems use a different bit-to-symbol mapping, the Gray code shown in
Fig. 2(d), which minimizes bit errors. This means that the QuAMax
receiver’s bit to symbol mapping differs from the sender’s. Thus
one further step remains so that we may map the decoded QUBO
variables into the correct Gray-coded transmitted bits.
i
11
01
00
t
t
t
A naïve approach is simply for QuAMax to use the Gray-coded
bit-to-symbol mapping as its transform T. The Gray-coded mapping
10
results in a one-dimensional 4-PAM constellation
assuming bits 00, 01, 11, and 10 are transformed to −3, −1, +1, and
= 2(2q4i−3 − 1) +
+3 without loss of generality. The transform vI
i
2(q4i−3 − q4i−2)2 − 1 would map between a 4-PAM symbol vI
and
two QUBO variables q4i−3, q4i−2, but the resulting expansion of
the ML norm would yield cubic and quartic terms qr qkql(qp) for
r (cid:44) k (cid:44) l((cid:44) p), requiring quadratization with additional variables
to represent the problem in QUBO form [8, 33].
Instead, we retain Gray coding at the transmitter and the QuA-
Max transform at the receiver. To correct the disparity, we develop
a bitwise post-translation that operates on QuAMax-transformed
solution output bits at the receiver, translating them back into Gray-
coded bits (i.e., moving from Fig. 2(a) to Fig. 2(d)). Starting with the
QuAMax transform shown in Figure 2(a), if the second bit ˆq4i−2
of the QUBO solution bits ˆq4i−3, ˆq4i−2, ˆq4i−1, ˆq4i is 1, then the
translation flips the third bit ˆq4i−1 and the fourth bit ˆq4i (e.g. 1100
to 1111), otherwise it does nothing. This can be generalized to
22n-QAM (n ≥ 2) as an operation that flips even numbered columns
in the constellation upside down. We term the result b′ an inter-
mediate code, shown in Figure 2(b). Next, we apply the differential
bit encoding transformation of Figure 2(c) to the intermediate code
b′ to obtain the Gray-coded bits ˆb in Figure 2(d) (e.g. translating
1111 to 1000).
QuAMax decoding example. To clarify processing across all
stages, here we present a complete QuAMax decoding example.
Suppose a client maps a bit string b1, b2, b3, b4 onto ¯v1, one of the
Gray-coded 16-QAM symbols in Figure 2(d), and sends ¯v = [ ¯v1] to
an AP through wireless channel H. The AP receives y = H¯v + n, the
transmitted signal perturbed by AWGN. The steps of QuAMax’s
decoding are:
(1) Form the ML QUBO equation using H, y, and v = [v1] = [T(q1)],
where T(q1) = (4q1 +2q2−3)+j(4q3 +2q4−3), a linear transform
based on the QuAMax transform in Figure 2(a).
(2) Solve the QUBO form of the ML detection problem on the
QA machine, resulting an ML-decoded vector ˆq1, comprised of
QUBO variables ˆq1, ˆq2, ˆq3, ˆq4.
(3) Apply the above bitwise translation from the decoded QUBO so-
lution output ˆq1, ˆq2, ˆq3, ˆq4 to Gray-coded received bits ˆb1, ˆb2, ˆb3, ˆb4
(from Figure 2(a) to Figure 2(d)).
If ˆb1, ˆb2, ˆb3, ˆb4 = b1, b2, b3, b4, decoding is done successfully, not-
ing that in the case of a symbol error, we preserve the aforemen-
tioned advantage of Gray coding.
3.2.2 ML-to-Ising problem reduction. The Ising spin glass form
of the ML problem can be obtained by simply transforming the
resulting QUBO form (§3.2.1) into the Ising form by Eq. 4. Due to
the fact that DW2Q implements an Ising model, QuAMax works
by using the following generalized Ising model parameters:
BPSK modulation. Given a channel matrix H and vector of re-
ceived signals y, we obtain the following Ising model parameters:
HI(:,i) · yI(cid:17) − 2(cid:16)
HQ(:,i) · yQ(cid:17)
+ 2(cid:16)
(cid:17)
HI(:,i) · HI(:, j)
HQ(:,i) · HQ(:, j)
,
(cid:17)
,
where H(:,i) denotes the ith column of channel matrix H.
QPSK modulation. In the case of QPSK, the following is the re-
sulting Ising parameter fi for QPSK:
(6)
fi(H, y) =
fi(H, y) = −2(cid:16)
дij(H) = 2(cid:16)
−2(cid:16)
−2(cid:16)
if i = 2n,
otherwise,
+ 2(cid:16)
HI(:,i/2) · yQ(cid:17)
HI(:, ⌈i/2⌉) · yI(cid:17) − 2(cid:16)
+ 2(cid:16)
(cid:17) ∓ 2(cid:16)
2(cid:16)
±2(cid:16)
(cid:17)
if i + j = 2n,
HI(:, ⌈i/2⌉) · HI(:, ⌈j/2⌉)
otherwise,
HI(:, ⌈i/2⌉) · HQ(:, ⌈j/2⌉)
HQ(:,i/2) · yI(cid:17)
HQ(:, ⌈i/2⌉) · yQ(cid:17)
,
(7)
.
(cid:17)
HQ(:, ⌈i/2⌉) · HQ(:, ⌈j/2⌉)
HI(:, ⌈j/2⌉) · HQ(:, ⌈i/2⌉)
,
(cid:17)
,
Since the real and imaginary terms of each symbol are independent,
the coupler strength between s2n−1 and s2n (or q2n−1 and q2n) is 0.
For other si and sj, the Ising coupler strength for QPSK is:
дij(H) =
(8)
where i < j and the sign of the latter case of Eq. 8 is determined by
whether i = 2n (when i = 2n, then ‘+’ and ‘−’).
16-QAM modulation. Ising parameters follow the same structure
as BPSK and QPSK and can be found in Appendix C.
SIGCOMM ’19, August 19–23, 2019, Beijing, China
Minsung Kim, Davide Venturelli, and Kyle Jamieson
In summary, the process to obtain the Ising spin glass form can
be simplified with these generalized Ising model parameters; a QuA-
Max system simply inserts the given channel H and received signal
y at the receiver into these generalized forms accordingly, not re-
quiring any computationally expensive operations (i.e. directly con-
sidering the expansion of the norm in Eq. 5). Thus, computational
time and resources required for ML-to-QA problem conversion are
insignificant and can be neglected.
Table 2: Logical (physical) number of qubits required for various configu-
rations of the elementary adiabatic quantum ML decoder. For each configu-
ration, bold font indicates non-feasibility on the current (2,031 physical
qubit) D-Wave machine with Chimera connectivity.
Config.
10 × 10
20 × 20
40 × 40
60 × 60
BPSK
10 (40)
20 (120)
40 (440)
60 (1K)
QPSK
20 (120)
40 (440)
80 (2K)
120 (4K)
16-QAM
40 (440)
80 (2K)
160 (7K)
240 (15K)
64-QAM
60 (1K)
120 (4K)
240 (15K)
360 (33K)
3.3 Embedding into QA hardware
Once the ML detection problem is in quadratic form, we still have
to compile the corresponding Ising model onto actual QA hardware.
The D-Wave machine works by implementing an Ising model objec-
tive function energetically hardcoded into the chip, so the problem
(Eq. 2 on p. 4) can support a certain coefficient дij to be non-zero
only if variables si and sj are associated to physical variables (qubits
or physical qubits) located on the chip in such a way that the qubits
are energetically coupled. In the case of the DW2Q machine we
use the coupling matrix is a Chimera graph, shown in Figure 3(a),
with each node corresponding to a qubit. Once Ising coefficients are
passed to the annealer, the hardware assigns them to the edges of
the Chimera graph, which are divided (along with their connected
nodes) into unit cells. Note however that, while the Ising problem
generated from Eq. 1 is almost fully connected (i.e., дij (cid:44) 0 for most
(i, j) pairs), the Chimera graph itself has far from full connectivity,
and so a process of embedding the Ising problem into the Chimera
graph is required.
One standard method of embedding is to “clone” variables in
such a way that a binary variable becomes associated not to a
single qubit but to a connected linear chain of qubits instead: a
logical qubit, as shown in Figure 3(b).3 We show an embedding of a
fully-connected graph of 12 nodes. Each unit cell on the diagonal
holds four logical qubits (a chain of two qubits), while the other
unit cells are employed in order to inter-connect the diagonal cells.
Specifically, suppose unit cell [1, 1] includes logical qubits 1–4 and
unit cell [2, 2] includes logical qubits 5–8. The left side of unit cell
[2, 1] has a vertical clone of qubits 5–8 and the right side has a
horizontal clone of logical qubits 1–4. Then, logical qubits 1–4
and 5–8 are all connected by means of the single unit cell [2, 1].
The unit cell hosting the next four logical qubits 9–12 is placed at
coordinates [3, 3]. Two unit cells below, [3, 1] and [3, 2], are used for
connections between 9–12 and 1–4, and 9–12 and 5–8 respectively.
3The optimal assignment problem, in the general case, is equivalent to the NP-Hard
“minor embedding” problem of graph theory [13], however for fully-connected graphs
very efficient embeddings are known [7, 39, 69].
(a) DW2Q qubit connections: A 32 × 32
BPSK problem is shown embedded in the
chip’s substrate.
(b) Logical qubits and unit
cells in the QuAMax de-
coder.
Figure 3: A comparison between the quantum hardware graph of the used
machine (which misses some nodes due to manufacturing defect), and the
topology of our elementary quantum ML hardware graph before embedding
into the hardware graph.
Given a number N of spin variables (i.e., logical qubits) in Ising form,
this embedding represents each with a chain of ⌈N/4⌉ + 1 qubits,
for a total of N (⌈N/4⌉ + 1) qubits. Recall that N = Nt · log2(|O|).
Table 2 summarizes the size of the embedding in both logical
and physical qubits, as a function of the MIMO detection problem’s
parameters—number of users and AP antennas, and modulation
type. Color coding and bold font indicate whether or not the given
parameters fit into the number of qubits available on current D-
Wave machines.
The embedded version of the Ising problem. After embedding
into Chimera graph we need to recast the Ising problem into an
equivalent problem that has the same ground state, but also satisfies
the Chimera graph constraints. We also need to introduce a constant
penalty term (JF ) to quantify the relatively large coupling that
constrains all physical qubits belonging to the same logical qubit
to prefer the same state. Appendix B contains additional detail, but
we discuss important experimental considerations for choosing JF
in Section 5.3.
Unembedding with majority voting. The bit string that the
DW2Q returns is expressed in terms of the embedded Ising prob-
lem, and so must be unembedded in order to have the values of the
bits expressed in terms of our ML Ising problem. This is done by
checking that all the qubits of a logical chain are either +1 or −1.
Should not all spins be concordant, the value of the corresponding
logical variable is obtained by majority voting (in case of a vote tie,
the value is randomized). Once the logical variables are determined,
each configuration yields the corresponding energy of the Ising
objective function by substituting it into the original Ising spin