

%
" 
	
	

 '
+
$ !
 !#


%
" 
	
	

 '
$+
#+
"+
!+
 +
+
$ !
 !#
(d)
(e)
Fig. 6: Results from Case Study 1. (a) M T BFerr, (b) trunc%, (c) Sensitivity analysis of SC07 to Theta, (d) M T T Rerr, (e) coll%, (f)
Sensitivity analysis of SC07 to C
(of the second window for tsao), coherently with earlier results
in [5]. The overestimation is a dangerous mistake, since it
causes the system to be presumed as more reliable than it really
is, underestimating the risk of potential failures. The same
behavior can be observed for the MTTR: collisions produce
longer tuples, and hence longer times to recover.
From the plots we can also observe that the use of typical
time windows, such as 5 minutes and 20 minutes, induces non
negligible errors in the estimates.
For optimal algorithms, that is sliding opt, ﬁxed opt, and
SC07, the error is lower, as expected, even if we can notice
that errors increase with the system size. This is due to the
larger number of events: even when an ideal optimal tuning
of parameters is performed, the large number of events may
cause unavoidable accidental overlaps in the logs, compromis-
ing the results. SC07 exhibits good performance, which are not
sensibly affected by the size of the system. However, its ttr,
theta and C parameters have been set to obtain the minimum
error. Our approach can thus be used to assess how much
wrong estimation and/or tuning of these parameters affect the
results. Speciﬁcally, we can note that a -50% error on theta
may induce a -20% error on the MTBF, as reported in Figure
6.(c). Similarly, a wrong tuning on C may strongly distort the
results (Figure 6.(f)). The algorithm appears however to be
robust against estimation errors on the ttr parameter.
As for the algorithms tuned with the knee rule (that is,
sliding knee and ﬁxed knee), they tend to underestimate the
MTBF and MTTR, since they cause a larger number of
truncations, and hence more tuples with short duration, if
compared to other solutions (Figure 6.(b)). The reason is that,
in this case, the knee rule caused the selection of a small
coalescence window, as clariﬁed later.
In Figure 7 we report the results of a sensitivity analysis
conducted for the sliding algorithm with respect to the time
window W . The upper part of the ﬁgure reports the tuple count
(the ”L” shaped curve used by the knee heuristic to select
the time window), whereas the lower part reports M T BFerr,
M T T Rerr, coll% and trunc% as a function of W . The
Figure allows to achieve interesting insights on the relationship
between estimation errors and the number of collisions and
truncations when varying W .
First, it can be noted that M T BFerr tends to 0 for a value
W ∗
such that the sum of coll% and trunc% is minimum (that
is, the point where the coll% curve crosses the trunc% curve).
Interestingly, this point corresponds to the second knee of the
tuple count curve. This can be explained by observing that
in this case study we conﬁgured the memory and processor
subsystems to generate failures with the same inter-arrival but
with different recovery times (smaller for processor, longer

	
















	


 
 

 
 
	


		











	
	
Fig. 7: Sensitivity analysis for the sliding algorithm in case study
1, nodes: 32768
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:19:29 UTC from IEEE Xplore.  Restrictions apply. 
TTF Oracle 
Exp(2057.33) 
TTF - W = 65s (optimal) 
Exp(2143.15) 
Weibull(1.11;2230.57) 
(a)
(b)
TTF - W = 30s  
Exp(1583.33) 
Weibull(0.74; 1311.37) 
TTF - W = 210s  
Exp(2458.57) 
Weibull(1.22; 2458.57) 
(c)
(d)
Fig. 8: T T F Distribution from Case Study 1 for the Sliding
Window. (a) Oracle, (b) W = 65s (Optimal), (c) W  65s.
for memory). The two dynamics are reﬂected in the two
knees. Hence, while the knee rule suggests to choice W
after the ﬁrst knee (W = 10s.), the optimal choice is to
select
the window size corresponding to the second knee
(W = 65s.). This suggests us that the selection of the time
window should be done considering not only failure inter-
arrivals, but also recovery times. However, this is not easily
applicable in practice, as better shown in case study 2.
ideally,
Second, we can observe that the M T BFerr trend is inter-
estingly correlated with the collisions and truncations trends.
In particular, if W ∗ is the optimal window, we can note that
M T BFerr = −α · trunc% for W  W ∗, being α and β two positive real
numbers. This means that,
it will be possible to
estimate the error on the MTBF if techniques are deﬁned
able to empirically estimate the probability of truncation and
collision. Also, the estimation of trunc% and coll% allows to
optimally tune W to the point such that trunc% = coll%, i.e.,
the point where M T BFerr = 0.
Third, we can note that, even when the optimal W ∗
is
selected and M T BFerr = 0, still the statistical properties of
the time to failure (TTF) distribution are not preserved, due to
the presence of accidental collisions. This effect is shown in
Figure 8: we can observe that the TTF of the oracle (Figure
8.(a)) follows an exponential distribution, coherently to the
simulated failure process. However, the TTF estimated from
logs coalesced with the optimal window are distributed as a
Weibull with an increasing hazard rate (Figure 8.(b), shape
parameter = 1.11), as well as for W > W ∗, (Figure 8.(d))
hence inducing wrong conclusions on the presumed failure
behavior. In facts, collisions reduce the statistical weight of
short failures, which are collapsed in the same tuple, causing
the different statistical behavior. Conversely, for W < W ∗, we
obtain a TTF distributed following a Weibull with decreasing
hazard rate , (Figure 8.(c), shape parameter = 0.74), also in
case of a small variation from W ∗.
Finally, we can note that, while M T BFerr tends to 0 at
W ∗, the same cannot be said for M T T Rerr. The problem is
that from the logs the MTTR may be underestimated since we
know when the last error in the tuple manifests, but not when
the failure is resolved. Calling this time difference ΔF , if we
increase W we reduce the importance of ΔF with respect
to the size of the tuple, hence decreasing the M T T Rerr.
increasing W affects the MTBF estimate. This
However,
suggests that logs should be designed to register recovery
events, in addition to error events.
E. Case Study 2: System-representative Assumptions
it
is important
Figure 9 reports the MTBF, MTTR, collision and truncation
errors evaluated when generating logs taking into account
system representative aspects. In this case logs show to be
more complex and difﬁcult to analyze. The complexity reﬂects
in the results: in general we can observe that more collisions
and truncations are caused than in the simplistic scenario,
impacting negatively on MTBF and MTTR estimates. This
suggests that
to take into account system
related aspects when validating coalescence techniques, to
better estimate the measurement errors that could be made
when applying the techniques on real systems. It can also be
noted that M T BFerr and M T T Rerr become unacceptably
high for tsao, sliding 20m, sliding 5m, and sliding knee, as
the size of the system increases to 32768 nodes. Optimally
tuned algorithms (sliding opt, ﬁxed opt, SC07) and ﬁxed knee
seem instead to be robust against system size. However they
are affected by several truncations and collisions. Hence, while
M T BFerr and M T T Rerr are low, the statistical properties
of the TTF and TTR distributions are not preserved, as already
observed for case 1. This suggests that
time coalescence
techniques need to be rethought to be usefully adopted also in
future petascale computer systems.
From the ﬁgure it can be noted that the application of the
knee rule seems to perform better as the number of nodes
increases, with respect to case 1. Indeed, the presence of
several overlaps smoothes the tuple count curve, where only
one knee appears visible, as detailed later.
Figures 9.(c) and 9.(f) show the impact of the workload
on truncations and collisions for the various algorithms. To





!
!
!
!
!




		





		




(a)
	









(b)




B 




	

Fig. 10: Sensitivity analysis for the sliding algorithm in case
study 2, nodes: 8192
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:19:29 UTC from IEEE Xplore.  Restrictions apply. 
 )
")
)
")
)
")
)
")
!
$(
(
$(
(
$(
(
(
#(
 

!%
!&#
%&
	

# %!
 $#%
(a)

 $
 %"
$%

	

"$ 
#"$








"








$






!





	


	

#
%)
#)
!)
)
)
%)
#)
!)
)
)
!
!'
'
'
'
#'
!'
'
'
'

	


