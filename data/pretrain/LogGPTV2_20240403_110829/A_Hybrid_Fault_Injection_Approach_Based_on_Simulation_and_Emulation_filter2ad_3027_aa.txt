title:A Hybrid Fault Injection Approach Based on Simulation and Emulation
Co-operation
author:Ali Reza Ejlali and
Seyed Ghassem Miremadi and
Hamid R. Zarandi and
Ghazanfar Asadi and
Siavash Bayat Sarmadi
A Hybrid Fault Injection Approach Based on Simulation and Emulation  
Co-operation*
Alireza Ejlali1, Seyed Ghassem Miremadi2, Hamidreza Zarandi1, Ghazanfar Asadi1,
Siavash Bayat Sarmadi1
Department of Computer Engineering 
Sharif University of Technology, 
Azadi Ave., Tehran, Iran 
1{ejlali,zarandi,asadi,bayat}@ce.sharif.edu 
PI:EMAIL
Abstract 
This  paper  presents  a  new  fault  injection  approach, 
which  is  based  on  a  co-operation  between  a  simulator 
and  an  emulator.  This  hybrid  approach  utilizes  the 
advantages  of  both  simulation-based  fault  injection  as 
well  as  physical  fault  injection  to  provide  a  good 
controllability, observability and also a high speed in the 
fault injection experiments. To do this, parts of a circuit 
are  simulated  while  the  rest  parts  of  the  circuit  are 
emulated.  A  fault  injection  tool  called  FITSEC  (Fault 
Injection  Tool  based  on  Simulation  and  Emulation  Co-
operation)  is  developed,  which  supports  the  entire 
process of a system design. This is based on both Verilog 
and VHDL languages and can be used to inject faults at 
different  levels  of  abstraction.  The  experimental  results 
show that this approach can significantly reduce the time 
needed for executing fault injection campaigns. 
1. Introduction 
Fault 
is  an 
injection 
important  method 
for 
experimentally  evaluating  dependability  measures  of 
computer systems. There are two main categories of fault 
injection experiments: techniques for injecting faults into 
simulation  models  of  systems,  and 
techniques  for 
injecting  faults 
into  physical  systems.  The  former 
category  is  often  referred  to  as  simulation-based  fault 
injection  [26][39],  while  the  latter  category  is  often 
referred to as physical fault injection [2][17][34]. 
*
This work is sponsored by the Iran Telecommunication Research  
Center (ITRC) 
The  main  advantages  of  the  simulation-based  fault 
injection  as  compared  with  the  physical  fault  injection 
are as follow: 
•  It can be used early in the design cycle [2][26]. 
•  It offers a good controllability and observability in the 
fault injection process [39]. 
However, the most notable drawbacks of the simulation-
based fault injection as compared with the physical fault 
injection are: 
•  It  is  time-consuming  specially  when  the  simulated 
model is given in detail [15]. 
•  The  simulated  model  of  a  system  can  not  be 
connected to the real application environment. 
in 
fault 
injection  experiments 
An  approach  to  physical  fault  injection  is  to  inject 
faults  into  the  emulated  model  of  a  design  using  FPGA 
chips.  FPGA-based 
emulators  have  been  used 
[13][23][38]  to  inject  stuck-at  faults  for  test  pattern 
generation  purposes.  However,  these  works  do  not 
address  the  evaluation  of  fault  tolerant  systems.  Some 
attempts  have  been  done  for  exploiting  FPGA-based 
emulators 
fast 
evaluation  of  fault  tolerant  systems  [10][12][15].  These 
methods  are  based  on  using  scan-chain  hardware  for 
injecting  only  bit-flip  faults  into  the  flip-flops  of  the 
target systems. Although, the FPGA-based fault injection 
can  offer  good  observability  and  controllability,  but  this 
can not be used for injecting faults into non-synthesizable 
models. It should be noted that during the design cycle of 
a  digital  system,  some  of  the  components  are  normally 
described as non-synthesizable behavioral models. Then, 
a fully synthesizable model of the intended hardware is to 
be  developed  from  the  behavioral design. Therefore, the 
for 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:07:22 UTC from IEEE Xplore.  Restrictions apply. 
FPGA-based fault injection can not be used until the last 
steps  of  the  design  cycle  when  a  fully  synthesizable 
model of the system is available. 
In this paper, a new fault injection approach has been 
presented  which  is  based  on  the  utilization  of  the 
combination  of  the  advantages  in  the  simulation-based 
fault injection as well as FPGA-based fault injection. To 
do  this,  parts  of  a  circuit  are  simulated  while  the  rest 
parts  of  the  circuit  are  emulated.  This  results  in  the 
following advantages: 
•  It  is  faster  than  the  simulation-based  fault  injection, 
because of the use of a logic emulator. 
•  It  can  be  used  for 
injecting  faults 
into  both 
synthesizable and non-synthesizable models. 
•  The  behavior  of  the  target  system  can  be  evaluated 
the  real  application 
is  connected 
to 
it 
when 
environment. 
•  It  supports  good  controllability  and  observability 
properties, because of the use of a simulator. 
A  fault  injection  tool  called  FITSEC  (Fault  Injection 
Tool  based  on  Simulation  and  Emulation  Co-operation) 
is  developed  which  supports  the  entire  process  of  a 
system design. This tool is used in order to demonstrate 
the features of the approach. 
As  a  case  study,  faults  are  injected  into  a  structural 
model of a 32-bit processor, i.e. DP32. 
Section  2  describes  the  related  researches.  Section  3 
presents  an  overview  of  the  FITSEC  approach  and tool. 
Section  4  shows  how  the  FITSEC  tool  is  able  to  inject 
faults  into  models.  Section  5  describes  how  simulation 
and  emulation  co-operation  is  used.  Section  6  describes 
how  a  design  may  be  partitioned  into  two  parts  for  the 
simulation  and  emulation  purpose.  Section  7  describes 
how  fault  injection  process  is  controlled  and  how  the 
experimental results are analyzed. Section 8 describes the 
overall experimental environment. Section 9 presents and 
analyzes  the  results  obtained  with  the  FITSEC  tool. 
Finally, the conclusions are given in Section 10. 
2. Related researches  
This  section  presents  a  brief  review  of  the  fault 
injection  methods  and  tools  as  well  as  a  comparison 
between them.  
2.1. Fault injection methods and tools 
As mentioned previously, fault injection methods can 
be  divided  into  two  main  categories:  physical  fault 
injection  and  simulation-based  fault injection. There are 
many  methods  and  tools  for  performing  physical  fault 
of 
injection.  Some  of  the  physical  fault  injection  methods 
are: 
• SWIFI  (Software  Implemented  Fault  Injection):  In 
this method faults are injected to a physical system by 
means 
software.  FIAT[7],  FERRARI[28], 
FINE[29],  Xception[11],  EXFI[9],  GOOFI[2]  and 
MAFALDA [4] are some examples of the tools which 
use SWIFI. 
• SCIFI  (Scan  Chain  Implemented  Fault  Injection) 
[17]:  In  this  method  faults  are  injected  to  a physical 
system  by  means  of  scan  chain.  FIMBUL[17]  and 
GOOFI[2] are some examples of the tools which use 
SCIFI.  GOOFI  is  a  fault  injection  tool,  which  offers 
SCIFI as well as SWIFI [2]. 
• Pin-level  fault  injection:  In  this  method  faults  are 
injected  to  the  pins  of  an  IC.  MESSALINE[3],  and 
RIFLE[34]  are 
two  examples  of  pin-level  fault 
injection tools. 
• Fault  injection  by  external  disturbance:  There  are 
several  techniques  to  subject  the  physical  system  to 
external  disturbance.  Heavy-ion  radiation  [20],  EMI 
(electromagnetic interference) [30], and power supply 
disturbance  [36]  are  some  of  the  techniques  for 
injecting faults by external disturbance. 
• Fault  injection  in  emulated  systems:  In  this  method 
faults are injected to the emulated model of a design 
using  FPGA-chips  [10][12][15].  This  method  can be 
used  before  the  final  implementation  of  the  target 
system. 
While  these  physical  fault  injection  methods  need  a 
physical implementation of the target system, simulation-
based fault injection can be used for the simulated model 
of  the  target  system  before  the  implementation  of  the 
system.  MEFISTO[26],  VERIFY[39],  FOCUS[14]  and 
DEPEND[18] are some examples of the simulation-based 
fault injection tools.  
2.2. Comparison of the fault injection techniques 
There  are  some  important  issues,  which  must  be 
considered  in  fault  injection  experiments.  One  of  these 
issues is the ability to inject faults into the systems, which 
are  described  by 
the  use  of  hardware  description 
languages  (HDLs).  HDLs  are  now  commonly  used  in 
digital  system  design.  Because  of  the  widespread  use  of 
HDLs,  HDL-based  fault  injection  tools  are  essential. 
Some  attempts  have  been  done 
the 
dependability  parameters  of systems using HDL models. 
[16] describes the error propagation behavior of an IBM 
RT  PC  using  fault  injection  into  its  Verilog  model. 
MEFISTO  [26]  and  VERIFY  [39]  are  simulation-based 
fault  injection  tools  which  can  inject  faults  into  VHDL 
to  evaluate 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:07:22 UTC from IEEE Xplore.  Restrictions apply. 
Table 1. A comparison between different fault injection methods  
SWIFI  SCIFI  Pin level 
External 
FI 
disturbance 
Simulation- 
based FI 
FI in emulated 
systems 
FI based on 
simulation and 
emulation co-
operation 
Controllability 
Observability 
Connection to real environment 
Speed 
FI early in the design cycle 
Saving from costly damages 
FI in non-synthesizable models 
FI into HDL models 
(1) It depends on the complexity of the scan chain. A complex scan chain can increase observability and controllability, 
- 
- 
+ 
+ 
- 
+ 
- 
- 
- 
- 
+ 
+ 
- 
- 
- 
- 
+ 
+ 
- 
- 
+ 
+ 
+ 
+ 
- 
- 
+ 
+ 
- 
- 
- 
-/+ (1) 
-/+ (1) 
+ 
+ 
- 
+ 
- 
- 
-/+ (2) 
-/+ (3) 
-/+ (3) 
+ 
+ 
+ 
+ 
- 
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ 
+ 
but it needs more hardware overhead.  
(2) It depends on the type of the external disturbance. For example thermal stress may cause damages.  
(3) It depends on the complexity of the hardware, which is used for the implementation of the fault injection.  
models  of  systems.  ADEPT  [32]  is  a  simulation-based 
tool, which can evaluate the dependability parameters of 
a system using VHDL models. However ADEPT is not a 
fault  injection  tool.  [33]  describes  how  the  VHDL 
language  can  be  used  for  injecting  faults  into  system 
descriptions at different levels of abstraction.  
Most  of  the  HDL-based  fault  injection  methods  and 
tools  are  simulation-based.  However,  FPGA-based 
emulators  can  also  be  used  in  fault  injection  into 
synthesizable HDL models [15]. 
Another important issue, which must be considered in 
fault  injection  experiments,  is  synthesizability  of  the 
target system model. At each step of the design process of 
a  digital  system, 
is  not  fully 
synthesizable except for the last steps. Therefore, a tool, 
which  supports  fault  injection  into  non-synthesizable 
models, can be used early in the design phase. 
the  system  model 