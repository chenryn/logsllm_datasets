probe vfs.read.return {  
  t = gettimeofday_ns() - @entry(gettimeofday_ns())  
  # if (execname() == "postgres" && devname != "N/A")  
    a[pid()]  /proc/sys/vm/drop_caches  
pg93@db-172-16-3-150-> taskset -c 1 /home/pg93/pgsql9.3.3/bin/postgres >/dev/null 2>&1  
[root@db-172-16-3-150 ~]# su - pg93  
psqlpg93@db-172-16-3-150-> psql  
psql (9.3.3)  
Type "help" for help.  
digoal=# select pg_backend_pid();  
 pg_backend_pid   
----------------  
           3868  
(1 row)  
[root@db-172-16-3-150 ~]# taskset -c 7 stap -e '  
global a  
probe process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__start") {  
  delete a  
  println("query__start ", user_string($arg1), "pid:", pid())  
}  
probe vfs.read.return {  
  t = gettimeofday_ns() - @entry(gettimeofday_ns())  
  # if (execname() == "postgres" && devname != "N/A")  
    a[pid()] 1998999963;  
                                                                        QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------------------------  
 Index Scan using idx_tbl_cost_align_id on public.tbl_cost_align  (cost=0.43..4609.95 rows=5003 width=45) (actual time=5.462..22646.769 rows=5007 loops=1)  
   Output: id, info, crt_time  
   Index Cond: (tbl_cost_align.id > 1998999963)  
   Buffers: shared hit=481 read=4532  
 Total runtime: 22648.805 ms  
(5 rows)  
query__start explain (analyze,verbose,costs,buffers,timing) select * from tbl_cost_align where id>1998999963;pid:3868  
3868**4563**4957678  
query__done explain (analyze,verbose,costs,buffers,timing) select * from tbl_cost_align where id>1998999963;pid:3868  
    value |-------------------------------------------------- count  
     4096 |                                                      0  
     8192 |                                                      0  
    16384 |                                                     27  
    32768 |@@@                                                 169  
    65536 |                                                     26  
   131072 |                                                      2  
   262144 |                                                     17  
   524288 |                                                     40  
  1048576 |@@@                                                 200  
  2097152 |@@@@@@@@@@@@@@@@@@@@@@@@@                          1338  
  4194304 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  2568  
  8388608 |@@@                                                 159  
 16777216 |                                                     16  
 33554432 |                                                      0  
 67108864 |                                                      1  
134217728 |                                                      0  
268435456 |                                                      0  
```  
机械硬盘连续块扫描的平均时间197881纳秒(0.197881毫秒)  
离散块扫描的平均时间4957678纳秒(4.957678毫秒)  
最后要测试的是在内存中的连续块扫描和离散块扫描的性能.  
要用到pgfincore这个插件, 同时需要修改数据库的shared buffer, 避免在shared buffer中命中, 无法跟踪到vfs系统调用的情况.  
```  
digoal=# create extension pgfincore;  
CREATE EXTENSION  
digoal=# select * from pgfadvise_willneed('idx_tbl_cost_align_id');  
                   relpath                    | os_page_size | rel_os_pages | os_pages_free   
----------------------------------------------+--------------+--------------+---------------  
 pg_tblspc/25324/PG_9.3_201306121/16384/33521 |         4096 |        54416 |      19013540  
(1 row)  
digoal=# select * from pgfadvise_willneed('tbl_cost_align');  
                   relpath                    | os_page_size | rel_os_pages | os_pages_free   
----------------------------------------------+--------------+--------------+---------------  
 pg_tblspc/25324/PG_9.3_201306121/16384/33518 |         4096 |       186048 |      18884781  
(1 row)  
vi postgresql.conf  
shared_buffers = 32MB  
pg93@db-172-16-3-150-> taskset -c 1 /home/pg93/pgsql9.3.3/bin/postgres >/dev/null 2>&1  
pg93@db-172-16-3-150-> psql  
psql (9.3.3)  
Type "help" for help.  
digoal=# select pg_backend_pid();  
 pg_backend_pid   
----------------  
           4538  
(1 row)  
[root@db-172-16-3-150 ~]# taskset -c 7 stap -e '  
global a  
probe process("/home/pg93/pgsql9.3.3/bin/postgres").mark("query__start") {  
  delete a  
  println("query__start ", user_string($arg1), "pid:", pid())  
}  
probe vfs.read.return {      
  t = gettimeofday_ns() - @entry(gettimeofday_ns())  
  # if (execname() == "postgres" && devname != "N/A")  
    a[pid()] 1998999963;  
                                                                       QUERY PLAN                                                     
------------------------------------------------------------------------------------------------------------------------------------  
 Index Scan using idx_tbl_cost_align_id on public.tbl_cost_align  (cost=0.43..4609.95 rows=5003 width=45) (actual time=0.157..110.887 rows=5007 loops=1)  
   Output: id, info, crt_time  
   Index Cond: (tbl_cost_align.id > 1998999963)  
   Buffers: shared hit=175 read=4838  
 Total runtime: 111.819 ms  
(5 rows)  
query__start explain (analyze,verbose,costs,buffers,timing) select * from tbl_cost_align where id>1998999963;pid:4538  
4538**4855**18563  
query__done explain (analyze,verbose,costs,buffers,timing) select * from tbl_cost_align where id>1998999963;pid:4538  
  value |-------------------------------------------------- count  
   2048 |                                                      0  
   4096 |                                                      0  
   8192 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  3762  
  16384 |@@@@                                                367  
  32768 |@@@@@@@@@                                           717  
  65536 |                                                      2  
 131072 |                                                      6  
 262144 |                                                      1  
 524288 |                                                      0  
1048576 |                                                      0  
```  
当数据在内存中时, 连续块扫描的平均时间11445纳秒(0.011445毫秒)  
离散块扫描的平均时间18563纳秒(0.018563毫秒)  
## 参考  
1\. [《优化器成本因子校对 - PostgreSQL explain cost constants alignment to timestamp》](../201311/20131126_03.md)   
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")