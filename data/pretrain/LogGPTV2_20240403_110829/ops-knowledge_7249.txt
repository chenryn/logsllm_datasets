问题： 什么情况下会导致 goruntine 泄露， 应该如何排查? 
回答： goroutine泄露是指在使用了`go routine`后没有正确关闭或者回收导致资源占用过多的情况。
可能导致goroutine泄露的原因有很多：
1. 未及时退出循环：如果在一个死循环中创建了一个新的goroutine并且没有正确的退出条件，则该goroutine将一直运行下去而不会被销毁。
2. 错误地终止程序执行流程：某些错误的操作可能会导致goroutine无法正常结束生命周期并继续存在。
3. 多次调用函数且不设置返回值接收者为nil：当一个函数多次被执行时，如果没有显式指定它的返回值接收者的地址为nil（即指针为空），那么这个goroutine将会持续存在直到整个进程结束。

要解决这个问题可以采取以下措施：

- 使用defer关键字来确保在适当的时候取消goroutine
- 在需要的地方添加if语句判断是否已经完成任务以决定是否应该停止当前的任务
- 确保所有goroutine都有对应的return语句或panic等异常处理机制