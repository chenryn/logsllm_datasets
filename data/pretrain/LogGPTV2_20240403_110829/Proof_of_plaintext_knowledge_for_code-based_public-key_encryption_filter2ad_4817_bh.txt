independent from the random bit β ←R {0, 1}.
j = Pi,j αi,jx(0)
i y(β)
i y(0)
j
Proof of Lemma 45. By deﬁnition of the security game, for all α queried to OKeygen, we have:
. Therefore, the view of the adversary in G2 is completely
148
Chapter 7. Functional Encryption for Quadratic Functions
Public-key FE
We give in Figure 7.6 a public-key FE for quadratic functions, that is, the functionality F K,X,Y
deﬁned in the previous section. It builds upon the private-key from the previous section, as
explained in the overview. We prove one-SEL-IND security, which implies many-SEL-IND
security via a standard argument, since we are in the public-key setting. This is proved under
the Dk(p)-MDDH assumption in both G1 and G2, as well as the 3-PDDH assumption (see
Deﬁnition 15).
quad
):
quad
GSetup(1λ, F K,X,Y
PG := (G1, G2, GT , p, P1, P2, e) ← PGGen(1λ), gpk := PG
Return gpk
):
p
):
quad
i A⊤Bsj + r⊤
i+nA⊤Bsj+m(cid:1)]1 − [u]1 ∈ G1
Setup(1λ, gpk, F K,X,Y
A, B ←R Dk. For i ∈ [2n], j ∈ [2m], ri, sj ←R Zk
p.
Return pk := {[Ari]1, [Bsj]2}i∈[2n],j∈[2m]
and msk :=(cid:16)A, B,{ri, sj}i∈[2n],j∈[2m](cid:17)
KeyGen(gpk, msk, α ∈ Zn×m
K := [Pi∈[n],j∈[m] αi,j(cid:0)r⊤
bK := [u]2 ∈ G2, where u ←R Zp.
Return dkα := (K, bK) ∈ G1 × G2
Enc(gpk, pk, (x, y) ∈ Zn
W, V ←R GLk+2(p), γ ←R Zp; c0 =bc0 := γ; for all i ∈ [n], j ∈ [m]:
xi (cid:19)⊤
ci :=(cid:18)γ · Ari
W−1, cn+i :=(cid:18)γ · Arn+i
0 (cid:19)
yj (cid:19),bcm+j := V(cid:18)Bsm+j
bcj := W(cid:18)Bsj
ct(x,y) := {[c0]1, [bc0]2, [ci]1, [bcj]2}i∈[2n],j∈[2m] ∈ G2n(k+2)+1
[d]T :=Pi∈[n],j∈[m] αi,j(cid:0)e([ci]1, [bcj]2) + e([cn+i]1, [bcm+j]2)(cid:1) − e([c0]1, bK) − e(K, [bc0]2)
Dec(gpk, pk, ct(x,y), dkα):
× G2m(k+2)+1
p ):
p × Zm
Return d.
1
2
(cid:19)⊤
V−1,
0
Figure 7.6: FE, a scheme for the functionality F K,X,Y
the Dk(p)-MDDH assumption and 3-PDDH assumption in asymmetric pairing groups.
, whose one-SEL-IND security relies on
quad
Correctness. For any (x, y) ∈ X , i ∈ [n], j ∈ [m], we have:
Moreover, for any i ∈ {n + 1, . . . , 2n}, j ∈ {m + 1, . . . , 2m}, we have:
e([ci]1, [bcj]2) = [γ · r⊤
e([ci]1, [bcj]2) = [γ · r⊤
Therefore, for any α ∈ K, the decryption computes
i A⊤Bsj +Xi,j
[d]T := [Xi,j
= [Xi,j
αi,jγ · r⊤
αi,jxiyj]T .
i A⊤Bsj + xiyj]T .
i A⊤Bsj]T .
αi,jxiyj]T − e(K, [bc0]2) − e([c0]1,cK)
:= (G1, G2, GT , p, P1, P2, e) ←R PGGen(1λ), A, B ←R Dk(p), β ←R
149
{0, 1},
7.2 Public-key FE
Games G0, G1, G2, G3 , G4 , G5 :
p, sj ←R Zk
i b⊥ (cid:21)1
(cid:0)(x(0), y(0)), (x(1), y(1))(cid:1) ← A(1λ)
PG
a⊥ ←R orth(A), b⊥ ←R orth(B)
For i ∈ [2n], j ∈ [2m]: ri ←R Zk
gpk := PG, pk :=n(cid:20)Ari + x(β)
(cid:20)Bsm+j + y(0)
j a⊥ (cid:21)2oi∈[n],j∈[m]
W ←R GLk+2(p), γ ←R Zp; v ←R Zp ; c0 =bc0 := γ
ci :=
cn+i :=
bcj := W
; bcm+j := V
ct := {[c0]1, [bc0]2, [ci]1, [bcj]2}i∈[2n],j∈[2m]
i b⊥ + vx(β)
γAri + γx(β)
i − x(β)
x(β)
γArn+i − γx(0)
β′ ← AOKeygen(·)(gpk, pk, ct)
Return 1 if β′ = β, 0 otherwise.
Bsj + y(β)
j a⊥
y(β)
j − y(β)
i b⊥ − vx(0)
0 + x(0)
i b⊥
i b⊥
W−1
V−1
j
⊤
i
i
⊤
p
,(cid:20)Arn+i − x(0)
i b⊥ (cid:21)1
Bsm+j + y(0)
j a⊥
0 + y(0)
j
,(cid:20)Bsj + y(β)
j a⊥ (cid:21)2
):
OKeygen(α ∈ Zn×m
u ←R Zp
p
K := [Pi∈[n],j∈[m] αi,j(cid:0)r⊤
bK := [u]2 ∈ G2
Return dkα := (K, bK) ∈ G1 × G2
i A⊤Bsj + r⊤
n+iA⊤Bsm+j(cid:1)]1 − [u]1 ∈ G1
Figure 7.7: Games for the proof of Theorem 20. In each procedure, the components inside
a solid (dotted, gray) frame are only present in the games marked by a solid (dotted, gray)
frame.
Since Pi,j αi,jxiyj ∈ [0, nmKXY ] which is of polynomials size, one can eﬃciently recover the
discrete logarithm d ∈ Z.
Theorem 20: one-SEL-IND security
The scheme from Figure 7.6 is one-SEL-IND secure, assuming the Dk(p)-MDDH assump-
tion in G1 and G2, as well as the 3-PDDH assumption.
Proof of Theorem 20. The proof uses hybrid games deﬁned in Figure 7.7. Let A be a PPT
adversary. For any game G, we denote by AdvG(A) the probability that the game G returns 1
when interacting with A.
Game G0: is such that Advone-SEL-IND
(λ) = 2×|AdvG0(A)−1/2|. For the sake of the proof, we
look at the public key elements {[Ari]1, [Bsj]2}i∈[2n],j∈[2m] as a ciphertext of the FEone
scheme encrypting vectors (0, 0) ∈ Z2n
p × Z2m
p .
FE,A
150
Chapter 7. Functional Encryption for Quadratic Functions
Game G1: with the above observation in mind, in this game we change the distribution of the
public key elements so as to be interpreted as an FEone ciphertext encrypting the vectors
(ex,ey) =   x(β)
−x(0) ! ,  y(β)
y(0) !! ∈ Z2n
p × Z2m
p
In Lemma 46 we show how to argue that game G1 is computationally indistinguishable
from game G0 based on the selective, single-ciphertext security of FEone (that in turn
reduces to Dk(p)-MDDH).
ciphertext. We switch from using {γAri +exi · γb⊥}i∈[2n] to {γAri +exi · (γ + v)b⊥}i∈[2n],
for a random v ←R Zp. In Lemma 47 we prove we can do this switch using the 3-PDDH
assumption.
Game G2: in this game we change the distribution of the ci components of the challenge
Game G3 : by using a statistical argument we show that in this game the challenge ciphertexts
can be rewritten as
i b⊥
ci := γAri + (γ + v)x(β)
cn+i := γArn+i − (γ + v)x(0)
0
x(0)
i
!⊤
i b⊥
W−1;
!⊤
V−1;
bcj := W Bsj + y(β)
0
j a⊥
! ;bcm+j := V Bsm+j + y(0)
y(0)
j
j a⊥
! .
This step essentially shows that the change in game G2 made the ciphertexts less depen-
dent on the bit β.
Game G4: in this game we change again the distribution of the challenge ciphertext compo-
nents ci switching from using {γAri +exi·(γ + v)b⊥}i∈[2n] to {γAri +exi· γb⊥}i∈[2n]. This
change is analogous to that introduced in game G2, and its indistinguishability follows
from the 3-PDDH assumption.
The crucial observation is that the public key in this game can be seen as an FEone
ciphertext encrypting vector (ex,ey), while the challenge ciphertext of game G4 can be
seen as an encryption of vectors
   0
x(0) ! ,  0
y(0) !! ∈ Z2n
p × Z2m
p
using such public key. At a high level, the idea is that we moved to a game in which the
dependence on the challenge messages (x(β), y(β)) is only in the public key.
Game G5: in this game we change back the distribution of the public key elements so as to
be interpreted as an FEone ciphertext encrypting vectors (0, 0). The fact that game G3
and game G4 are computationally indistinguishable can be argued based on the selective,
single-ciphertext security of the FEone scheme.
The proof is concluded by arguing that in this game the view of the adversary is inde-
pendent of the bit β.
We now prove the lemmas needed to prove the above theorem.
7.2 Public-key FE
151
Lemma 46: from game G0 to game G1
There exists a PPT adversary B0:
|AdvG0(A) − AdvG1(A)| ≤ 2 · Advone-SEL-IND
FEone,B0
(λ).
Proof of Lemma 46. Using the one-SEL-IND security of the underlying private-key scheme
(which is exactly the scheme in Figure 7.2), we can change the distribution of the public key
elements from {[Ari]1, [Bsj]2}i∈[2n],j∈[2m] to
n[Ari + x(β)
[Bsj + y(β)
i b⊥]1, [Arn+i − x(0)
j a⊥]2, [Bsm+j + y(0)
i b⊥]1,
j a⊥]2oi∈[n],j∈[m]
In order to apply the one-SEL-IND security of the private-key FE (Theorem19) we rely on the
fact that the public key of FE can be seen as an FEone encryption of longer vectors
Also, secret keys in FE can be seen as FEone secret keys corresponding to matrices
p
in G0,
ex(0) = 0 ∈ Z2n
p and ey(0) = 0 ∈ Z2m
ex(1) = (x(β)|| − x(0)) ∈ Z2n
p and ey(1) = (y(β)||y(0)) ∈ Z2m
0 α ! ∈ Z2n×2m
eα =  α 0
p
p
.
in G1.
Note that we are using the matrix representation for functions α ∈ Znm
here. In particular, for any vector x ∈ Zn
this observation in mind, it can be seen that the restriction
p , we denote by x⊤αy =Pi,j αi,jxiyj. With
, since more convenient
p , y ∈ Zm
p
x(1)⊤ α y(1) = x(0)⊤ α y(0)
in the queries made by A translates into legitimate queries by B0 since x(β)⊤ α y(β)−x(0)⊤ α y(0) =
0 and ex(0)⊤eαey(0) = ex(1)⊤eαey(1) = 0. Thus, by Theorem 19 (one-SEL-IND security of private-
key scheme), we obtain the lemma.
Lemma 47: From game G1 to game G2
There exists a PPT adversary B1 such that:
|AdvG1(A) − AdvG2(A)| ≤ 2 · Adv3-PDDH
PG,B1 (λ) + 2−Ω(λ).
Here, we change the distribution of the challenge ciphertexts, using the 3-PDDH assump-
tion.
Proof of Lemma 47. Upon receiving a 3-PDDH challenge (PG, [a]1, [b]2, [c]1, [c]2, [z]1) (see Def-
inition 15), and the challenge messages (x(0), y(0)), (x(1), y(1)), B1 picks A, B ←R Dk; β ←R
{0, 1}; a⊥ ←R orth(A), b⊥ ←R orth(B), and sets [γ]1 := [c]1 and [γ]2 := [c]2. Then, for
i ∈ [2n], j ∈ [2m], B2 picks ri ←R Zk
j a⊥i2oi∈[n],j∈[m]
pk :=nhAri + ax(β)
p, sj ←R Zk
i b⊥i1
,hBsm+j + by(0)
,hArn+i − ax(0)
,hBsj + by(β)
i b⊥i1
j a⊥i2
p and computes
.
152
Chapter 7. Functional Encryption for Quadratic Functions
It picks fW, eV ←R GLk+2(p) and implicitly sets
1 !−1
W := fW  B|b · a⊥ 0
0
Here we use the fact that (B|ba⊥) is full rank with probability 1 − 1
a⊥ ←R orth(A), and b ←R Zp (see Deﬁnition 9).
Then, for i ∈ [n], j ∈ [m], it computes
0