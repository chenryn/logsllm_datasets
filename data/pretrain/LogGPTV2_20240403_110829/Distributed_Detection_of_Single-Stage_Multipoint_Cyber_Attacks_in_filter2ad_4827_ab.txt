v14
v14
v4
v8
v5
v6
v7
v4
v9
v10
v11
v12
v9
v10
v13
∗Sensor/actuator nomenclature: s: sensor, a: actuator, i: input, o: output.
Pump to move water from tank T401 to RO unit.
No ﬂow: v1 ≤ δ
Flow: v1 > δ
v2 ∈ {LL, L, H, HH}
Closed: v3 = 0
Open: v3 = 1
Measures ﬂow rate of water entering tank T101.
Indicates water level in tank T101.
Motorized valve; water ﬂows into tank T101 only when
MV101 is open.
Pump to move water from stage 1 to stage 3 via stage 2.
Measure ﬂow rate of water from T101 to T301.
OFF: v4 = 0
ON: v4 = 1
No ﬂow: v14 ≤ δ
Flow: v14 > δ
v5 ∈ {LL, L, H, HH} Measures ﬂow rate of water entering tank T301.
OFF: v4 = 0
ON: v4 = 1
Closed: v8 = 0
Open: v8 = 1
v5 ∈ {LL, L, H, HH}
No ﬂow: v6 ≤ δ
Flow: v6 > δ
No backwash: v7 ≤ σ
Backwash: v7 > σ
OFF: v4 = 0
ON: v4 = 1
Closed: v9 = 0
Open: v9 = 1
Motorized valve must be open when P101 is ON for water
to ﬂow into tank T301.
Motorized valve must be open when P101 is ON for water
to ﬂow into tank T301.
OFF: v10 = 0
ON: v10 = 1
v11 ∈ {LL, L, H, HH}
No ﬂow: v12 ≤ δ
Flow: v12 > δ
Pump to move water from tank T301 to tank T401.
Indicates water level in tank T401 that holds the output
of the UF unit.
Measures ﬂow rate of water exiting tank T302 and ﬂowing
to the dechlorination stage.
Closed: v9 = 0
Open: v9 = 1
OFF: v10 = 0
ON: v10 = 1
OFF: v13 = 0
ON: v14 = 1
452as in Table 1 were determined correctly. Each tank is as-
sumed to be in any of the following four states: very low
(LL), low (L), high (H), and very high (HH). These states
are based on the water level in each tank and are known to
the corresponding PLC.
With respect to a PLC, each sensor and actuator is cat-
egorized as an input (i), output (o), or input-output (io)
entity as indicated in Table 1. A sensor is considered an in-
put (output) for a PLC if it measures some property of water
input to (output from) that stage. Level sensors are consid-
ered both input and output as the water ﬂows into and out
of a tank. An actuator could be input for a PLC and output
for another PLC. For example, pump P101 is categorized
as output for PLC1 because it sends water from stage 1 to
stage 2. The same pump is categorized as an input actuator
for PLC3 because in its ON state the pump sends water to
stage 3 controlled by PLC3.
3.
INVARIANTS
A “process invariant,” or simply an invariant, is a math-
ematical relationship among “physical” and/or “chemical”
properties of the process controlled by the PLCs in a CPS.
Together, at a given time instant, a suitable set of such
properties constitute the observable state of SWaT. For ex-
ample, in a water treatment plant, such a relationship in-
cludes the correlation between the level of water in a tank
and the ﬂow rate of incoming and outgoing water across this
tank. The properties are measured using sensors during the
operation of the CPS and captured by the PLCs at prede-
termined time instants. The measurements are often also
saved in a historian–a workstation– for subsequent analysis.
In this paper an invariant in SWaT, derived from physical,
not chemical, properties is considered for detecting cyber at-
tacks. While chemical properties could and should be used
for deriving invariants, the corresponding relationships are
more complex than the ones derived using physical proper-
ties and hence were omitted for the experiments reported
here.
Two types of invariants were considered: state dependent
(SD) and state agnostic (SA). While both types use states
to deﬁne relationships that must hold, the SA invariants are
independent of any state based guard while SD invariants
are. An SD invariant is true when the CPS is in a given
state; an SA invariant is always true.
3.1 State-dependent (SD) invariants
First, as an example, consider the fact that when the mo-
torized valve MV101 is open, the ﬂow rate indicator FIT101
must be non-zero. In terms of the variables listed in Table 1,
this invariant can be written as follows.
v3 = 1 → v1 > δ
In general, an SD invariant will be written as follows,
S1 → S2,
(1)
(2)
where S1 and S2 denote state-based conditions of one or
more components of CPS such that S2 must hold whenever
S1 holds. Such conditions could be on a portion of the sys-
tem state or the complete state. In this work most conditions
are on the states of only a few components of the system.
In Eq. 1, S1 is v3 = 0 and S2 is v1 > δ.
Derivation of SD invariants is based on the design of the
CPS and its various components. The design is captured
using State Condition Graphs (SCG) [1]. An SCG could be
constructed at the design stage of a CPS before the control
code is available, or later. A sample SCG for pump P101
and motorized valve MV101 is shown in Figure 3 to aid
in understanding how the SD invariants are derived. The
following two SD invariants are derived from the SCG in
Figure 3 and the state variables in Table 1.
v2 = “LL”→ v3 = 1; for MV101 (3)
(v5 = ‘‘H” or v8 = 0 or v14 ≤ δ) → v4 = 0; for P101 (4)
It is noted that an SD invariant can include conditions from
across the various stages of a CPS. However, doing so could
make an invariant complex and require signiﬁcant amount of
sensor data exchange across the PLCs. Thus, in the current
study, and as mentioned later in Section 5.2, the SD invari-
ants use only variables from neighboring stages of SWaT.
Figure 3: Partial State Condition Graph for stage
1 of SWaT. This graph captures the conditions
when pump P101 must be OFF and motorized valve
MV101 must be CLOSED. State “low” for FIT im-
plies that there is either no ﬂow or the ﬂow rate
is much lower than expected and hence the pump
must be turned oﬀ.
3.2 State-agnostic (SA) invariants
Under normal system operation, an SA invariant must be
always true regardless of the system state. One SA invariant
was derived for each tank in SWaT to detect SSMP attacks
that aﬀect the ﬂow of water into and out of a tank. These
invariants are based on the ﬂow of water and water level in a
tank, and hence are identical in terms of the mathematical
relationship that they capture. An SA invariant for tank
T101 is derived next.
Let x denote property p and y its measurement obtained
from a sensor. y(k) denotes the sensor measurement for x(k)
at instant k. ˆx(k) is an estimate of x(k). In the absence of
sensor errors and no cyber attacks, ˆx(k) = x(k) = y(k).
The water level in a tank, say T101, was considered as p.
The level in T101 is measured by sensor LIT101 (Figure 2).
Sensors FIT101 and FIT201 measure, respectively, water
LIT301ORHP101/OFFMV201CLOSEDLIT101LLHFIT201lowMV101/CLOSE453Table 2: State dependent invariants for attack detection.
Invariants∗
PLC
1
2
3
Forward check
P1FC1: v2 = “LL”→ v4 = 0
P1FC2: v5 = “H”→ v4 = 0
P2FC1: v5 = “HH”→ v8 = 0
P2FC2: v5 = “H”→ v8 = 1
P3FC1: v5 = “LL”→ v10 = 1
Backward check
P1BC1: v2 = L → (v3 = 1 AND v1 > δ)
P1BC2: v2 = H → (v3 = 0 AND v1 ≤ δ)
P2BC1: v4 = 1 → v8 = 1
P2BC2: v4 = 0 → v8 = 0
P3BC1: v5 = “H”→ v8 = 1 AND v4 = 1
P3BC2: v5 = “HH”→ v8 = 0 AND v4 = 0 P3FC2: v10 = 0 → v6  σ → v10 = 0
P3FC4: v11 = “L”→ v10 = 1 OR v9 = 1
P3FC5: v11 = “H”→ v10 = 0
Forward check in PLC4 presently not implemented.
P4BC1: v11 = “L”→ v10 = 1 OR v9 = 1
4
∗Each invariant is assigned a code for ease of reference in the implementation.
ﬂow into and out of T101. These ﬂow rates are denoted as
ui(k) for inﬂow, and uo(k) for outﬂow.
At time instant k + 1, the water level in T101 depends
on the level at time k and the inﬂow and outﬂow at instant
k. This relationship is captured in the following idealized
model of the tank,
x(k + 1) − x(k) = α(ui(k) − uo(k)),
(5)
where (5) assumes perfect sensors. To derive a practically
usable invariant, SWaT was run several times without any
attacks to estimate the mean µd and the standard deviation
σd, where d = (ˆx(k)− y(k)) over several runs, i.e., the mean
and variance of the diﬀerence between the estimated tank
level ˆx(k) and its measured value y(k). Based on Eqn. 5,
the statistics obtained experimentally, and converting the
true states to their estimates, the following conditions were
derived to test whether or not sensor LIT101 is under attack.
(cid:88)n
i=1
(ˆx(i) − y(i))
n
>
≤
, under attack,
, normal.
(6)
(7)
Figure 4: Invariant to detect attacks on LIT101.
In the conditions above, the average of the diﬀerence be-
tween the estimated and the measured tank levels is tested
against . Thus, a decision whether or not LIT101 is under
attack is taken from n sensor readings. Selection of n ought
to be done carefully as it impacts the detection eﬀectiveness.
In the experiments n, was set to 10. As described earlier,
based on trial runs of SWaT without attacks,  was set to
0.55.
4. ATTACKER MODELS AND ATTACKS
For a CPS, an attacker model is a pair (T, O), where T is
an attack type to realize an objective O. The attack type
could be of any of the types proposed earlier such as in [3,
6, 13, 20]. The objective is speciﬁed as a statement. For ex-
ample, “Damage generator A in a power grid,” or “Damage
pump P302 in a water distribution network.” A cyber attack
is a sequence of actions initiated by the attacker where each
action relates to one or more physical or cyber components
in the CPS. The actions are selected and sequenced so as to
model the attack type T and realize objective O. Whether
the attempted action sequence will realize the objective de-
pends primarily on the defense mechanism used in the CPS
and knowledge and technical proﬁciency of the attacker in
designing and launching the attack.
The work reported here is one in a series of experiments
designed to understand the impact of attacks on a CPS and
the eﬀectiveness of various detection methods. Figure 5
shows the four sets of experiments to be conducted with the
long term goal of understanding what are practically the
best attack detection mechanisms that could be employed
in a resilient CPS. The SSMP attacks, marked with an ar-
row, are the focus of this work. Note that the attack types
in Figure 5 fall under the generic model presented here. For
example, SSMP is a type in T and can be used to derive a
multitude of attacks with various objectives in O.
Example 1: Consider the following attacker intent and at-
tack type for the system in Figure 2: Cause tank T101 to
overﬂow using a deception attack [4]. The attacker takes the
following actions in an attempt to realize the intent.
1. Enter and capture: Identify and capture the wire-
less communication link LIT101 to PLC1. LIT101
sends the level of tank T101 to PLC1. As shown in
Table 1, T101 can be in any one of the four states LL,
L, H, HH that correspond to, respectively, water level
being very low, low, high, and very high.
2. Wait and listen: Listen to the data transferred across
the links. Wait until Pump P101 is ON, the valve
MV101 is C(losed), and T101 is close to entering the
HH state, say, when it is in state H.
454Figure 5: Attack types and sequence of experiments designed to understand the impact of cyber attacks on a CPS.
3. Deceive: Regardless of the data input from the LIT101
send to PLC 1 a value that corresponds to H.
4. Wait and listen: Continue monitoring the LIT101
until a few minutes after it outputs a value that corre-
sponds to HH. An overﬂow will occur if the pump has
not been shut sometime after T101 moves to HH. The
exact time when the overﬂow occurs depends on the
excess capacity in T101 beyond that needed in HH.
5. Exit: Exit from the system when satisﬁed that the
overﬂow has occurred.
The above sequence steps was used to launch attacks in the
experiments reported here.
4.1 Attack scenarios
A set of SSMP attacks were designed based on attack
scenarios listed in Table 3. The scenarios are categorized as
follows based on the the attacker knowledge.
• A1. Input sensors
• A2. Input and output sensors
• A3. Input actuators
• A4. Input and output actuators
• A5.
Input and output sensors, and actuators (stage
fully compromised)
• A6. Input and output sensors, input actuators (stage
nearly fully compromised)
In each scenario the objective of the attacker is to either
cause a tank to overﬂow and/or reduce the system perfor-
mance measured in terms of gallons of treated water pro-
duced per minute. For example, in A1, the attacker focuses
exclusively on, and has the knowledge of, the sensors clas-