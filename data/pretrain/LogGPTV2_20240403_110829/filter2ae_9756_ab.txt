托管矿池应该算是目前的主流，即一个矿池有一个中心服务器，对其下属的所有矿机进行协调与管理，同时这个服务器一般也会与一个或多个完全节点进行同步，这样就可以帮助下属的矿工完成对区块的验证，从而缓解矿机的压力，毕竟一个完整的区块副本还是很大的，这样矿工们也可以投入更多的算力获取更多的利润
## p2p矿池
因为托管矿池的管理员存在作弊的可能，尤其是那些大矿池，如果有那个意愿他们是可以控制区块的走向，所以后面又出现了p2p 矿池
如它的名字所示这种矿池没有中心服务器，取而代之的是一个名为份额链的类似于区块链的系统，矿工们在这条链上进行挖矿，这条链的难度远低于比特币，基本上30秒一个块，大家在这里计算并由该份额链统计share，当份额链有一个区块头的hash满足比特币的难度需求时，这个区块就算是挖矿成功的结果了，并将被广播出去，然后份额链将对区块奖励按照统计的share进行分发，其实就是使用一个区块链系统实现了一个中心服务器
不过这种矿池相比托管矿池要复杂的多，效率也相对比较低下，所以现在也在慢慢淡出市场，毕竟资本总是逐利的
# 矿池攻击
下面我们就来看看矿池主要会面临哪些威胁
## Pool hopping
这个其实在前面我们已经提到过几次了，对于Proportional的奖励模式，如果有矿池的运气不太好很长时间都没有挖到区块，在这个矿池里的矿工的share就开始不断贬值，相当于算力越来越不值钱，这时候一些矿工就可以选择将其算力转到另一个刚挖到区块的矿池下去挖矿，因为这时候时间刚开始计算，每个share的价值比较高，相当于算力也比较值钱，如果一段时间没有挖到，他也可以选择再次跳池，一直去寻找share价值比较高的地方，至于前面所耗费的算力能值多少钱就不用太关心了
采用这种策略在统计学上来讲最终获得的收益肯定是要比你一直待在一个池里不动的收益要来得多的，不过随着现在矿池的收益分发策略的改变这种攻击策略已经不可行了
## Block withholding
下面要说的就是区块截留攻击(Block
withholding)，其实它应该算是一种类型的挖矿策略，即挖到区块后是在手上保留一段时间还是直接丢弃，这种策略会有不同的人出于不同的目的来采用，只不过都不是什么好事，下面我们就来分析可能的各种情况
### 自私挖掘
在这种情况下矿工或矿池挖到区块后并不会立刻将其广播出去，而是将其在手上留存一段时间
对于矿工而言，他可以将手上的算力均摊到各个矿池里，一旦他在某个矿池里挖到了区块，他就将区块给扣留下来，然后将手头的算力集中到这个矿池进行挖矿，累积share，然后提交区块以获取更多的利益，当然这样的话有可能别人在这段时间里也挖到了区块并将其公布，所以还是有一定的风险，但是最终从统计学的角度来看使用这种策略还是会提高收益
对于矿池而言情况则要复杂一些，矿池在获取到有效区块后他也可以选择保留区块，接下来他可以将手上的算力之间投入下一波的区块挖掘，一定程度上也算是抢得了先机，然后对于挖到的区块他将马上同步给手下的节点，并不广播给全节点
然后矿池可以对网络情况进行监控，一旦发现有新的区块头的出现，立刻让手上的节点广播己方的区块，使其他矿池失去该区块的奖励，其实这样的风险还是有点大，除非该矿池算力足够大，总能处于优势地位，而且也要考虑网络传播效率的影响，一般而言选择保留一段时间广播区块即可
矿池采用这种策略进行挖矿在短期会使自己的收入降低，但是这样也会打压其他池的收入，甚至损失更多，其他的诚实的矿工也可能会倒戈到自私挖矿的矿池里以获取更多收入，这样就会壮大自私池的算力，进一步加剧这种现象，并让自私池所持有的算力持续增加，甚至跨过50%的红线，这样的后果是非常严重的
不过因为多方面的原因目前这种攻击还是很少见，目前来看主要还是理论研究上多一点，在理想模型下一个最开始仅有33%算力的矿池逐步采取这种策略是可以逐步提升自己的算力水平到50%
### 丢弃区块
下面我们来看看挖到区块后不直接丢弃它的情况，如你所见，这是一种破坏性的攻击，它也可以分为多种情况
#### 0x1.矿工的恶意破坏
在这种情况下矿工在矿池内挖到区块后并不公布而是直接丢弃，但是share依然正常提交，这样的话相当于该矿工没有为矿池创造任何收益，但一直在参与其他诚实的矿工挖矿结果的分红，这种行为显然是损人不利己的，一般也没人会使用，这里仅仅作为一种可能性
#### 0x2.一个攻击矿池
上面我们讨论的恶意的矿工是给自己打工的，这里我们要介绍的恶意矿工是给其他矿池打工的，这里为了简单我们假设有两个矿池A和B，其中A对B派遣恶意矿工进行攻击
这个模型还是比较简单，我们不妨设总算力为1，A池使用x算力渗透进B区块进行攻击，显然这x算力就属于躺着不干活的算力了，那么此时我们的总算力其实是1-x
然后我们分别设A与B拥有的算力为Ma和Mb，这样的话B出块的概率即为Pb = (Mb-x)/(1-x),于是A从B处拿到区块奖励
> Pb * x/Mb
而A矿池自己诚实挖矿还可以拿到一部分区块奖励
> (Ma-x)/(1-x)
所以A矿池获得的总收益即为
> Q=Pb _x/Mb + (Ma-x)/(1-x) = (Mb_ Ma - x^2)/(Mb(1-x))
这是在A矿池实施攻击后获取的收益，理论上讲A矿池通过选取适当的x进行攻击是可以使收益较未实施攻击前有所增加的，不过当时提出这个思路的时候选取的未实施攻击前的收益被简单表示为了Ma，也就是A矿池的算力，最近又看了一篇论文表示这种假设很不严谨，事实上随着攻击的进行系统的算力下降了，变成了1-x，在这种算力下整个系统额度出块速度也将下降，这意味着在进行攻击与否的两种不同情况下运行相同的时间挖到的块的数目是不同的，而比特币的难度调整周期是2016个区块，接近两周的时间，这是一个很长的跨度，时间差将带来很多损失，想要回本就得维持攻击到难度改变之后，然而想保持攻击这么长时间不被发现是一件很困难的事，在重新计算后发现单纯对B进行区块截留攻击是一个吃亏的行为，这也在某方面解释了这种攻击得到确认的报告还说非常少见，主要就是14年Eligius矿池确认过一次这种攻击，损失了300个比特币，这里的损失是指损失了被丢弃的本应得到的挖矿奖励，这可能是综合了其他的攻击手法亦或是就是一场报复性攻击
#### 0x3.两个矿池互相攻击
这种情况就比较复杂了，可能是一个矿池发现自己被攻击后对攻击矿池进行的以其人之道还治其人之身的反击，也可能是两池本来就心怀不轨互相开撕
简单起见我们还是假设两个矿池A与B，它们都对对方进行了区块截留攻击，而这场战争一旦开始，除非双方同时收手，否则将很容易陷入囚徒困境当中，很有意思，下面我们要来讲讲博弈论了