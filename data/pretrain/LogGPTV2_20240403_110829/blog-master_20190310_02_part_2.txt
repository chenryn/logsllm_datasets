 12075 | v       | all_tab_cols         | sys    
 12067 | v       | all_tab_columns      | sys    
 12019 | v       | all_tables           | sys    
 12001 | v       | all_users            | sys    
 11871 | v       | all_views            | sys    
 12035 | v       | dba_all_tables       | sys    
 11988 | v       | dba_data_files       | sys    
 11923 | v       | dba_directories      | sys    
 11853 | v       | dba_indexes          | sys    
 11917 | v       | dba_jobs             | sys    
 12103 | v       | dba_procedures       | sys    
 14231 | v       | dba_sequences        | sys    
 11969 | v       | dba_source           | sys    
 12059 | v       | dba_tab_cols         | sys    
 12051 | v       | dba_tab_columns      | sys    
 12011 | v       | dba_tables           | sys    
 11845 | v       | dba_tablespaces      | sys    
 11905 | v       | dba_triggers         | sys    
 11994 | v       | dba_users            | sys    
 11865 | v       | dba_views            | sys    
 11894 | v       | user_col_comments    | sys    
 12138 | v       | user_indexes         | sys    
 11959 | v       | user_objects         | sys    
 12116 | v       | user_procedures      | sys    
 11942 | v       | user_sequences       | sys    
 11982 | v       | user_source          | sys    
 12091 | v       | user_tab_cols        | sys    
 12083 | v       | user_tab_columns     | sys    
 12027 | v       | user_tables          | sys    
 12146 | v       | user_tablespaces     | sys    
 11911 | v       | user_triggers        | sys    
 11878 | v       | user_views           | sys    
 12154 | v       | v$session            | sys    
 14150 | v       | user_defined_types   | information_schema    
 14218 | v       | user_mapping_options | information_schema    
 14222 | v       | user_mappings        | information_schema    
(83 rows)    
```    
```    
postgres=> select distinct on (relkind,relname) oid,relkind,relname from pg_class where relnamespace='sys'::regnamespace order by 2,3;    
  oid  | relkind |      relname          
-------+---------+-------------------    
 12043 | v       | all_all_tables    
 11888 | v       | all_col_comments    
 11929 | v       | all_directories    
 11952 | v       | all_objects    
 12109 | v       | all_procedures    
 11935 | v       | all_sequences    
 11975 | v       | all_source    
 12075 | v       | all_tab_cols    
 12067 | v       | all_tab_columns    
 12019 | v       | all_tables    
 12001 | v       | all_users    
 11871 | v       | all_views    
 12035 | v       | dba_all_tables    
 11988 | v       | dba_data_files    
 11923 | v       | dba_directories    
 11853 | v       | dba_indexes    
 11917 | v       | dba_jobs    
 12103 | v       | dba_procedures    
 14231 | v       | dba_sequences    
 11969 | v       | dba_source    
 12059 | v       | dba_tab_cols    
 12051 | v       | dba_tab_columns    
 12011 | v       | dba_tables    
 11845 | v       | dba_tablespaces    
 11905 | v       | dba_triggers    
 11994 | v       | dba_users    
 11865 | v       | dba_views    
 11894 | v       | user_col_comments    
 12138 | v       | user_indexes    
 11959 | v       | user_objects    
 12116 | v       | user_procedures    
 11942 | v       | user_sequences    
 11982 | v       | user_source    
 12091 | v       | user_tab_cols    
 12083 | v       | user_tab_columns    
 12027 | v       | user_tables    
 12146 | v       | user_tablespaces    
 11911 | v       | user_triggers    
 11878 | v       | user_views    
 12154 | v       | v$session    
(40 rows)    
```    
### 2 存储过程语言    
未支持 pl/sql     
```    
postgres=> select * from pg_pltemplate ;    
 tmplname | tmpltrusted | tmpldbacreate |     tmplhandler      |       tmplinline       |   tmplvalidator   |   tmpllibrary   | tmplacl     
----------+-------------+---------------+----------------------+------------------------+-------------------+-----------------+---------    
 plpgsql  | t           | t             | plpgsql_call_handler | plpgsql_inline_handler | plpgsql_validator | $libdir/plpgsql |     
(1 row)    
```    
### 3 包    
1、支持的包较少    
```    
postgres=> select oid,nspname,obj_description(oid) from pg_namespace order by 2;    
  oid  |      nspname       |         obj_description              
-------+--------------------+----------------------------------    
 12130 | dbms_output        |     
 12133 | dbms_random        |     
```    
2、包的方法较少     
```    
postgres=> select proname from pg_proc where pronamespace=(select oid from pg_namespace where nspname='dbms_output') order by 1;    
 proname      
----------    
 put    
 put_line    
(2 rows)    
postgres=> select proname from pg_proc where pronamespace=(select oid from pg_namespace where nspname='dbms_random') order by 1;    
 proname     
---------    
 seed    
 seed    
 value    
 value    
(4 rows)    
```    
包的方法的源代码内容    
```    
postgres=> select pronamespace::regnamespace,proname,prosrc,probin from pg_proc where proname='put_line';    
 pronamespace | proname  |        prosrc        |     probin          
--------------+----------+----------------------+-----------------    
 dbms_output  | put_line | dbms_output_put_line | $libdir/plpgsql    
(1 row)    
```    
### 4、一些语义一致性问题  
语义上支持varchar2(byte|char)，实际上并没有按实际约束。     
```  
postgresdb=> create table test (id varchar2(10 char));  
CREATE TABLE  
postgresdb=> drop table test;  
DROP TABLE  
postgresdb=> create table test (id varchar2(10 char));  
CREATE TABLE  
postgresdb=> \d+ test  
                                           Table "public.test"  
 Column |         Type          | Collation | Nullable | Default | Storage  | Stats target | Description   
--------+-----------------------+-----------+----------+---------+----------+--------------+-------------  
 id     | character varying(10) |           |          |         | extended |              |   
postgresdb=> drop table test;  
DROP TABLE  
postgresdb=> create table test (id varchar2(10 byte));  
CREATE TABLE  
postgresdb=> \d+ test  
                                           Table "public.test"  
 Column |         Type          | Collation | Nullable | Default | Storage  | Stats target | Description   
--------+-----------------------+-----------+----------+---------+----------+--------------+-------------  
 id     | character varying(10) |           |          |         | extended |              |   
限制的是BYTE，实际上是CHAR。  
postgresdb=> insert into test values ('abcdefg');  
INSERT 0 1  
postgresdb=> insert into test values ('abcdefg你好');  
INSERT 0 1  
postgresdb=> insert into test values ('中国你好你好');  
INSERT 0 1  
```   
### 5、一些SQL语法深水区问题  
1、例如对connect by语法并未支持。    
```  
postgresdb=> CREATE TABLE TBL_TEST    
postgresdb-> (    
postgresdb(> ID    NUMBER,    
postgresdb(> NAME VARCHAR2(100 BYTE),    
postgresdb(> PID   NUMBER                                  DEFAULT 0    
postgresdb(> );   
CREATE TABLE  
postgresdb=> INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('1','10','0');    
INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('2','11','1');    
INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('3','20','0');    
INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('4','12','1');    
INSERT 0 1  
postgresdb=> INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('2','11','1');    
INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('5','121','2');  INSERT 0 1  
postgresdb=> INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('3','20','0');    
INSERT 0 1  
postgresdb=> INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('4','12','1');    
INSERT 0 1  
postgresdb=> INSERT INTO TBL_TEST(ID,NAME,PID) VALUES('5','121','2');    
INSERT 0 1  
postgresdb=> select * from TBL_TEST    
postgresdb-> start with id=1    
postgresdb-> connect by prior id = pid;    
ERROR:  syntax error at or near "with"  
LINE 2: start with id=1    
              ^  
```  
2、不支持分区表语法    
```  
postgresdb=> CREATE table TABLE_PARTITION(  
postgresdb(>        COL1   NUMBER,  
postgresdb(>        COL2   VARCHAR2(10)  
postgresdb(> )   
postgresdb-> partition by range(COL1)(  
postgresdb(>           partition TAB_PARTOTION_01 values less than (450000),  
postgresdb(>           partition TAB_PARTOTION_02 values less than (900000),  
postgresdb(>           partition TAB_PARTOTION_03 values less than (1350000),  
postgresdb(>           partition TAB_PARTOTION_04 values less than (1800000),  
postgresdb(>           partition TAB_PARTOTION_OTHER values less THAN (MAXVALUE)  
postgresdb(> );  
ERROR:  syntax error at or near "("  
LINE 5: partition by range(COL1)(  
                                ^  
```  
3、不支持rowid  
```  
postgresdb=> select rowid from test limit 1;  
ERROR:  column "rowid" does not exist  
LINE 1: select rowid from test limit 1;  
               ^  
```  
4、rownum的支持方法有点问题，依赖临时sequence，调用频繁的话会导致元数据膨胀     
```  
postgresdb=> select * from tbl_test where rownum explain select * from tbl_test where rownum \df rownum  
                          List of functions  
   Schema   |  Name  | Result data type | Argument data types | Type   
------------+--------+------------------+---------------------+------  
 pg_catalog | rownum | integer          |                     | func  
(1 row)  
postgresdb=> \sf rownum  
CREATE OR REPLACE FUNCTION pg_catalog."rownum"()  
 RETURNS integer  
 LANGUAGE plpgsql  
AS $function$   
DECLARE myid int := 0;   
func_cmd varchar(200) :='';   
myret int := 23;   
BEGIN   
  PERFORM setseed(0.4);  
  select trunc(random()*100000000) into myid;   
  SET client_min_messages = 'error';   
  func_cmd := 'create TEMP sequence IF NOT EXISTS  rownum_' || myid ||' maxvalue 9223372036854775807 nocache';   
  EXECUTE func_cmd;   
  func_cmd = 'select nextval(''rownum_' ||myid|| ''') '  ;   
  EXECUTE func_cmd into myret;   
  RETURN myret;    
END;   
$function$;  
```  
## 三、EDB, 阿里云RDS PPAS    
### 1、支持哪些ORACLE相关系统视图    
支持的系统视图非常多    
```    
postgres=# select distinct on (relkind,relname) oid,relkind,relname from pg_class where relname ~ '^dba|^user|^all|^v\$|^dbms' order by 2,3;    
  oid  | relkind |           relname               
-------+---------+-----------------------------    
 33757 | r       | dbms_job_user    
 15009 | v       | all_all_tables    
 15093 | v       | all_cons_columns    
 14995 | v       | all_constraints    
 15176 | v       | all_db_links    
 15189 | v       | all_directories    
 15121 | v       | all_ind_columns    
 15107 | v       | all_indexes    
 33777 | v       | all_jobs    
 15198 | v       | all_objects    
 15271 | v       | all_part_key_columns    
 15226 | v       | all_part_tables    
 15212 | v       | all_policies    
 15299 | v       | all_queue_tables    
 15313 | v       | all_queues    
 33954 | v       | all_scheduler_job_args    
 33940 | v       | all_scheduler_jobs    
 33910 | v       | all_scheduler_program_args    
 33898 | v       | all_scheduler_programs    
 33922 | v       | all_scheduler_schedules    
 15163 | v       | all_sequences    
 15333 | v       | all_source    
 15285 | v       | all_subpart_key_columns    
 15065 | v       | all_synonyms    
 15051 | v       | all_tab_columns    
 15241 | v       | all_tab_partitions    
 15256 | v       | all_tab_subpartitions    
 14981 | v       | all_tables    
 15023 | v       | all_triggers    
 15135 | v       | all_types    