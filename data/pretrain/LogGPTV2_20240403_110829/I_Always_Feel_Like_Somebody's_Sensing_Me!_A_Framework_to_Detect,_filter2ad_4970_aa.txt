title:I Always Feel Like Somebody's Sensing Me! A Framework to Detect,
Identify, and Localize Clandestine Wireless Sensors
author:Akash Deep Singh and
Luis Garcia and
Joseph Noor and
Mani B. Srivastava
I Always Feel Like Somebody’s Sensing Me! 
A Framework to Detect, Identify, and 
Localize Clandestine Wireless Sensors
Akash Deep Singh, University of California, Los Angeles; Luis Garcia, 
University of California, Los Angeles, and USC ISI; Joseph Noor and 
Mani Srivastava, University of California, Los Angeles
https://www.usenix.org/conference/usenixsecurity21/presentation/singh
This paper is included in the Proceedings of the 30th USENIX Security Symposium.August 11–13, 2021978-1-939133-24-3Open access to the Proceedings of the 30th USENIX Security Symposium is sponsored by USENIX.I Always Feel Like Somebody’s Sensing Me!
A Framework to Detect, Identify, and Localize Clandestine Wireless Sensors
Akash Deep Singh† , Luis Garcia†,§ , Joseph Noor† , and Mani Srivastava†
PI:EMAIL, PI:EMAIL, PI:EMAIL, and PI:EMAIL
†University of California, Los Angeles (UCLA), § USC ISI (work done at †)
Abstract
The increasing ubiquity of low-cost wireless sensors has en-
abled users to easily deploy systems to remotely monitor and
control their environments. However, this raises privacy con-
cerns for third-party occupants, such as a hotel room guest
who may be unaware of deployed clandestine sensors. Previ-
ous methods focused on speciﬁc modalities such as detecting
cameras, but do not provide a generalized and comprehensive
method to capture arbitrary sensors which may be “spying" on
a user. In this work, we propose SNOOPDOG, a framework to
not only detect common Wi-Fi based wireless sensors that are
actively monitoring a user, but also classify and localize each
device. SNOOPDOG works by establishing causality between
patterns in observable wireless trafﬁc and a trusted sensor in
the same space, e.g., an inertial measurement unit (IMU) that
captures a user’s movement. Once causality is established,
SNOOPDOG performs packet inspection to inform the user
about the monitoring device. Finally, SNOOPDOG localizes
the clandestine device in a 2D plane using a novel trial-based
localization technique. We evaluated SNOOPDOG across sev-
eral devices and various modalities, and were able to detect
causality for snooping devices 95.2% of the time, and localize
devices to a sufﬁciently reduced sub-space.
1 Introduction
The proliferation of low-cost wireless sensors has facilitated
increased adoption into smart home, building, and city deploy-
ments [1, 2]. Although there are profound positive impacts
that ubiquitous sensor-rich environments can have on soci-
ety, there is an inherent risk in enabling users access to such
pervasive sensing, particularly when these environments host
occupants oblivious to the presence of these sensors.
An individual’s privacy in these contexts is entirely at the
discretion of the owner. Regulation is unclear in informal set-
tings, such as a guest residing in a homestay lodging. There
have been reported instances where a hosting owner has at-
tempted to spy on homestay occupants [3], motel lodgings [4],
and rooms aboard cruise ships [5]. There are even instances in
well-established hotel chains and mall restrooms when a ma-
licious employee or customer has bugged several rooms [6].
Beyond commercial applications, Southworth et al. report that
domestic abusers may use such sensors for intimate partner
stalking [7]. Thus, potential victims with privacy concerns
must take a proactive approach to detect clandestine sensors.
The prevalent method to detect bugs relies on an RF re-
ceiver that senses if the received power in a particular fre-
quency range is above a certain threshold. However, as bug
detectors work on the principle of sensing surrounding RF
signals, they can easily be triggered by legitimate RF devices
such as mobile phones, radios, smart TVs, and other smart
devices, thus limiting the practicality of these detectors. An
alternate method has emerged to detect the presence of IoT
devices based on network trafﬁc statistics [8]. However, these
methods only ascertain the presence of a device without se-
mantic information regarding device information, location, or
whether the device is actually monitoring a user.
More sophisticated solutions have since emerged target-
ing wireless cameras speciﬁcally. Wampler et al. [9] showed
that changing lighting conditions causes notable variations
to appear in a wireless camera’s video trafﬁc; that is, video
encoding leaks sensitive environmental information. Flick-
ering a light source for a short period of time can then be
used in correlation with network trafﬁc changes to identify
hidden cameras [10, 11]. Similarly, an approach has been pre-
sented that correlates the Wi-Fi trafﬁc patterns of a trusted
camera with Wi-Fi trafﬁc patterns of other hidden cameras on
a network to detect whether they are simultaneously observ-
ing the same space [12]. Unfortunately, these camera-speciﬁc
approaches fail to generalize across modalities. For example,
varying lighting conditions would be ineffective for detecting
a hidden microphone or an RF sensor. In recent work, hu-
man motion was used to detect a hidden camera with coarse
localization (i.e., indoors or outdoors) [13]. We argue that
human motion is an emblematic event to generalize across
modalities, as the objective in revealing bugs is typically to
determine if the user is being observed.
USENIX Association
30th USENIX Security Symposium    1829
In this paper, we propose SNOOPDOG, a generalized frame-
work to detect clandestine wireless sensors monitoring a user
in a private space. SNOOPDOG leverages the notion of causal-
ity to determine if the values of a trusted sensor cause patterns
in Wi-Fi trafﬁc stemming from other devices. In particular,
SNOOPDOG works by having the user perturb the trusted sen-
sor values to observe if there is a causal pattern in the Wi-Fi
trafﬁc for a different device. For instance, if a wireless camera
or a motion detector is monitoring a user who is wearing an
inertial measurement unit (IMU), the IMU values will indicate
a causal relationship with the camera’s Wi-Fi trafﬁc. SNOOP-
DOG utilizes encoding scheme models of different wireless
sensing modalities to classify the sensor type, and then cross-
references packet headers with publicly available information
of manufacturers to identify the speciﬁc device model. We
further introduce a novel ﬁne-grained localization approach
that leverages sensor coverage techniques to locate a detected
sensor. We implemented SNOOPDOG using a user’s mobile
phone for ground truth sensors and a laptop for snifﬁng Wi-Fi
trafﬁc patterns. In the future, we envision SNOOPDOG to be
implemented entirely as an app on either a smartwatch or a
smartphone, both of which have sufﬁcient sensing capabilities,
but currently require Wi-Fi card improvements to allow for
channel hopping in monitor mode, thus making SNOOPDOG
easily accessible to non-technical users.
SNOOPDOG operates in two stages. SNOOPDOG begins in
a passive monitoring phase that searches for suspicious causal
patterns between the wireless trafﬁc and the user’s normal
activity with their smartphone or wearable device. If a device
is ﬂagged as potentially monitoring the user, an active phase
is engaged, and the user is instructed to perform a series of
speciﬁc actions to detect the sensor with high accuracy. Dur-
ing the active phase, localization can optionally be engaged
to ﬁnd the clandestine sensor. The user can either skip the
background or the active phase as per their convenience.
We evaluate SNOOPDOG over a representative set of wire-
less sensors following a taxonomy of popular sensing devices
that may be used for surveillance. The framework had a de-
tection rate of 96.6% and a device classiﬁcation rate of 100%
when the injected multi-modal event was human motion. We
show that the location of the bug can be narrowed down to
a sufﬁciently reduced region that easily facilitates a user’s
search. This feature is a notable improvement over existing
approaches that only localize devices as either indoors or out-
doors. While SNOOPDOG cannot detect any wireless sensor
monitoring the user (Section 9), it can detect a broad set of
commonly used wireless sensors [14–16].
Contributions: Our contributions are summarized as follows:
• We propose SNOOPDOG, the ﬁrst generalized framework
to detect hidden clandestine sensors, including video,
audio, motion, and RF. SNOOPDOG leverages the cause-
effect relationship between a trusted set of sensor values
and Wi-Fi trafﬁc patterns when observing a multi-modal
injected event.
• We present a novel technique that leverages the notion
of directional sensor coverage to provide state-of-the-art
localization for clandestine devices.
• We show how SNOOPDOG can reveal device informa-
tion by cross-referencing packet inspection with publicly
available device manufacturer information.
• We evaluate SNOOPDOG with a mobile phone and a
Wi-Fi packet sniffer on a representative set of clandes-
tine sensors and show a detection rate of 95.2% and
device classiﬁcation rate of 100% when the injected
multi-modal event is human motion.
2 Background
We provide an overview of that state-of-the-art approaches
to detecting the presence of wireless sensors in spaces. We
then formalize the notion of detecting whether a sensor is
monitoring a particular area.
2.1 Detecting Wireless Sensors in Spaces
The general approach to detecting wireless sensors relies on
the notion that a device’s wireless communication unintention-
ally leaks information in some out-of-band channel. Recent
works exploited these leaks to detect the presence of wireless,
transmitting bugs1 in a space [17, 18]. The received power
threshold and frequency range can be set according to a tar-
get set of wireless devices. For instance, to detect sensors
that communicate over Wi-Fi, a device would scan frequency
ranges around 2.4 GHz or 5 GHz. In tuning the received
power threshold, there is a direct trade-off between detection
accuracy and false positives [17]. If the threshold is too low,
one may falsely attribute wireless signals from other devices
in the space, like mobile phones, to bugs. On the other hand, a
high threshold risks ignoring wireless bugs that are not within
close proximity of the detector. As these detectors provide
no semantic information about the detected signals, it is dif-
ﬁcult to assume whether or not the observed signal is truly
originating from a hidden bug [18].
As wireless sensors transmit their information via packets,
another technique to detect them uses packet snifﬁng. Ap-
proaches like DewiCam [13] sniff wireless packets and use
their characteristics to train a classiﬁer to identify whether or
not a particular device is a camera. However, even if the type
of device is determined, it may or may not be monitoring the
user. If there is a camera monitoring the door of a house, it
does not pose the same threat to a user’s privacy as a camera
that is monitoring the bedroom. Hence, even if we are able to
detect what type of device is present in the space, it is difﬁcult
to characterize if its intention is adversarial. A direct way to
1A bug in this context refers to a hidden device spying on the user.
1830    30th USENIX Security Symposium
USENIX Association
identify whether a device poses a potential privacy threat is
to determine whether or not it is actively monitoring the user.
2.2 Detecting Sensors Monitoring a Space
If a wireless sensor is monitoring someone in a physical space,
the data that it captures is a function of the person’s interaction
with the space. For example, if someone moves into a space
monitored by a motion detector, the sensor’s control mecha-
nism may be triggered and begin uploading relevant informa-
tion to the cloud to be processed and forwarded (e.g., an alert
to the device owner or downstream actuation). Similarly, the
information recorded by a video camera captures variations
due to motion within the captured scene–a characteristic ex-
ploited by prior research on detecting hidden cameras [10–12].
To generalize across sensor modalities, we formalize the no-
tion that if an auxiliary sensor observes and measures a user’s
interaction with their surroundings, we can identify whether
the user’s actions indicate a causal relationship with the hid-
den sensor’s wireless trafﬁc. If such a relationship is found,
then the sensor must be monitoring the user.
Detecting causality across sensor modalities. Given a tar-
get hidden sensor and access to its sensor data, we aim to
establish causality between its time-series data and another
sensor capturing the private space. A popular method to study
causal relationships between two series is Granger Causal-
ity [19]. According to Granger Causality, if a series X Granger-
causes series Y , then past values of X should contain informa-
tion that helps predict Y above and beyond the information
contained in past values of Y alone. Formally, if we have a
series Y as:
yt = a0 + a1 ∗ yt−1 + a2 ∗ yt−2 + .... + an ∗ yt−n,
(1)
and we augment this series with the series X as follows:
yt = a0 +a1∗yt−1 +....+an∗yt−n +b1∗xt−1 +....+bm∗xt−m,
(2)
then X Granger-causes Y if and only if Equation 2 gives a
better prediction of yt than Equation 1. Here, yt−k are called
lags of y and xt−k are called lags of x where k ∈ [1,n].
In the following section, we discuss the system model and
the design of SNOOPDOG.
3 SNOOPDOG Overview
We present the SNOOPDOG’s threat model assumptions prior
to enumerating the system design.
3.1 System Model
We consider a system model for SNOOPDOG where a user has
access to a laptop or smartphone device with a network card
that can enter monitor mode to sniff wireless packets over the
same channel as one or more clandestine sensors. The system
should further be equipped with a trusted set of ground truth
sensors to establish causality between the sensor values and
the associated Wi-Fi patterns from the clandestine wireless
sensor(s)2. These capabilities entail a set of assumptions.
Wi-Fi snifﬁng assumptions. We assume that the Wi-Fi snif-
fer on the user’s device can monitor the encrypted trafﬁc
streaming from the clandestine device. SNOOPDOG does not
require any form of granted access to a particular network,
i.e., SNOOPDOG should be able to sniff the device regardless
of whether or not the network is closed or hidden. Unlike
previous solutions, this implies that the user does not need to
know the SSID or password of the network.
Causality assumptions. We assume that the user has a suf-
ﬁcient set of trusted ground truth sensors whose modalities
are sensing any of the user’s activities that would exhibit a
causality with the Wi-Fi encoding patterns of any clandes-
tine wireless sensors. The notion of sufﬁcient causality was
formalized in Section 2.
3.2 Adversary Model
We focus on adversaries whose goal is to remotely spy on
a third-party occupant of a private space in real-time. This
model is consistent with other state-of-the-art methods for
detecting hidden cameras [9–11, 13], and is supported anec-
dotally by several cases where owners were live-streaming
guests in private spaces, e.g., [3, 4]. Further, many commer-
cially available devices do not offer a local storage option for
reasons of size, weight, power, and cost – such is the case
with six out of the popular thirteen devices we examined.
Moreover, live-streaming offers a more practical and scalable
solution from a management perspective. Thus, we assume
the adversary uses an arbitrary set of wireless, commercial-
off-the-shelf (COTS) sensors that are tailored for clandestine
placement. The communication between the attacker and sen-
sor may be encrypted and placed on an arbitrary wireless fre-
quency band. We further assume the adversary has deployed
these clandestine sensors in a manner that is not apparently
visible to the user within the space. We focus on an attacker
utilizing devices that communicate over Wi-Fi, as this is the
most prevalent method of wireless communication for remote
monitoring using commercial and consumer equipment3. An
adversary may use one of the several techniques mentioned in
Section 8 to fool SNOOPDOG, for example with cover trafﬁc
or local storage. Implementing these techniques can require
modifying the device ﬁrmware or physically interfacing with
a proxy device (e.g., RPi), thereby increasing the barrier-to-
entry for potential attackers. Moreover, techniques such as