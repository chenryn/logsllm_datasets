””
”\/”
：”
\/sys\/fs\/fuse\/connections"
\/usr"
\/tmp"
\/home”
\/dev\/shm"
\/lib\/init\/rw"
\/dev\/pts"
\/dev"
\/proc"
Templates
Host inventory
Visible name
Hostname
图11-14
SaveCancel
“{#FSTYPE)"
“{#FSTYPE}"
“{#FSTYPE)"
“{#FSTYPE)”:" sySfs"
“(#FSTYPE)":”roOtfs"
"{#FSTYPE)”
“{#FSTYPE)"
“{#FSTYPE)”
"{#FSTYPE)"
“{#FSTYPE)"
“{#FSTYPE)"
“{#FSTYPE)”
雪
discoveryItemprotot
:" fusectl"
:" ext3"
：”
”
”
：”
ext3"
ext3"
tmpfs”
’tmpfs"
ext3"
devpts"
devtmpfs"
proc"
---
## Page 220
★
★
第15章轻量级日志监控应用
第14章Zabbix系统优化
第13章Zabbix分布式监控
第12章ZabbixAPI
第三部分
进阶篇
---
## Page 221
·206·
和 API 的操作中，都要带上这串数字，id是根据 post 请求的id值的返回。“id”字段，是为了
uth": null,"id":0)' http://192.168.122.103/zabbix/api_jsonrpc.php
"2.0","method":"user.login","params":("user":"Admin","password":"zabbix"),"a
12.1
功能。
比如更新Item、添加Host监控等。
为整个运维体系中的一员。
Zabbix API
第12章
curl -i -X POsT -H 'Content-Type: application/json'
result即请求的返回值，针对每一个用户登录，都会有唯一的这一串数字，在之后的所有
在这一章中，主要介绍Zabbix API的使用方法、常见的用途，以及它在运维自动化中的
Zabbix API是一个 JSON-RPC 的API，通过 HTTP 请求。它提供了几乎所有 Zabbix 的功能，
["jsonrpc":"2.0","result":"3144f0e443ead877cf9ae58e659d3446","id":0}
能得到以下返回值：
下面看一个最简单的例子，可以直接在shell中运行：
API是Zabbix 非常强大的功能，通过它能真正将 Zabbix 和其他系统串联到一起，使之成
ZabbixAPIPOST参数
odxuos).p-
---
## Page 222
com/documentation/2.2/manual/api。我们具体分析一下 Item的API。
要的方法，以及返回值的含义。
12.2
有发送给 Zabbix API的参数，具体这里应该有哪些参数，是由不同的方法自己定义的。
login”需要的两个参数。
就类似“item.update”这样。
Zabbix API中，“user.login”的方法由两部分组成：“user”为资源，“login”为方法。更新item
个返回值是哪一次请求的结果。
标识这次返回值是针对哪一次请求的。因为如果同时发送多个查询，且没有id，就会分不清哪
在 Zabbix官方文档里，有详细的 API说明，Zabbix 2.2的API文档在：https://www.zabbix.
在上一节中，了解了Zabbix 向 API 推送数据的格式，在这一节中，主要学习如何找到需
综上，Zabbix API的 POST参数里，“method”字段说明了发起请求的方法，“params”里
接下来看 params 里面的一些“key-value”，有登录需要的“user”和“password"”，即发起“user.
Item的API文档结构如图12-1所示。
其中的“jsonrpc”和“id”是所有API都有的，“method”表示这次API请求的动作。在
来看下面这条命令：
"params"
"method"
"jsonrpc"
Item支持的ZabbixAPI方法
id"
“password" :“zabbix"
“user”:“Admin”
：“2.0”
“user.login"
第12章ZabbixAPI
·207。
---
## Page 223
·208·
in combination with nodata() for availability check."
有属性。从Zabbix获取到Item资源对象的时候，返回的结果如下：
就是Item支持的方法。
特殊，它列出了在API中 Item的所有属性，以及数字代表的含义。除了Item.object，剩下几个
Zabbix监控系统深度实践
12.2.1 Item object
description: "The agent always returns 1 for this item. It could be used
name:"Agent ping"
hostid:"10084"
jsonrpc: "2.0"
在 Item object（或者其他类似的Event object、Trigger object）中，记录的是Item 资源的所
status:"o"
trends:"365"
history:"7"
delay:"60"
key_: "agent.ping"
type:"0"
其中，Action、Alert等是 Zabbix 的资源。Item 资源下面有很多方法，其中 Item.object 相对
itemid:"23287"
-result:[
中
④田
由
田
Methodreference
Application
Configuration
图12-1
白Item
口
口
口
口
item.update
item.delete
item.iswritable
item.isreadable
item.getobjects
item.get
item.exists
---
## Page 224
表示监控时间间隔的“delay”。
些字段是必须的。如果某个属性下面有“required"，那么就说明这个参数是必须的，比如下面
unsigned"。
object 的文档了，如下。
type”，返回值是“3"，
12.2.2
delay(required
value_type(required)
item.create 是新建item 的方法，具体格式如下。
除了查询数字和具体含义的对应关系，Item object 还告诉我们，在创建一个 Item的时候哪
笔者已经删掉了一些属性了。这里可以看到很多返回值，都是一个数字，比如“value
“"method"
"jsonrpc"
id:
"params"
“name"
L
"applications" :[
"interfaceid" : “30084"
"type"
"hostid"
item.create
“609"
：
：“2.0”
：
0，
：“30074”
“vfs.fs.size[/home/joe/,free]"
“Free disk space on $1"
integer
，那单从返回值是不知道“3”是什么意思的，
log ;3-numeric unsigned ; 4- text.
Type of information of the item.Possible values:0 -numeric float；1-character ;2-
integer
Update interval of the item in seconds.
，这时候就需要查Item
第12章ZabbixAPI
·209°
---
## Page 225
·210°
数如下。
用item.get方法来获取到需要删除的 itemid 后，调用 item.delete 进行删除。具体参数如下。
Zabbix监控系统深度实践
12.2.4
12.2.3
item.exists 是用来判断 item 是否存在的方法，将需要限制的条件写在 params 中就行了，参
item.delete 是删除 item的方法，支持针对一个 itemid或者多个itemid 进行删除。一般要使
"method":"item.exists",
"jsonrpc":"2.o",
“jsonrpc"
主要的参数在 params中，参数列表可以参照 Item object 中的属性。
"params":(
“id”：
“auth"
"params"
"method"
“id”
"auth"
item.exists
“22986"
“22982”
item.delete
"delay" : 30
]，
“3a57200802b24cda67c4e4010b50c065"
：
“610"
"item.delete"
：“2.0”
---
## Page 226
Item。它支持很多的条件，我们先从最基本的例子看起。
12.2.5
prevvalue:
lastvalue:"1"
lastns:"522187000"
lastclock:"1397105347"
value_type:"3"
hostid:"10084"
itemid:"23287"
-result:[
jsonrpc: "2.o"
上面这个参数，是用来获取hostid为10084的所有Items的，结果如下。
item.get 是最常用的方法之一，它的作用是根据给定的条件从 Zabix中获取符合条件的
"id":1
"params":{
"method": "item.get",
"jsonrpc":"2.o",
"id":1
"hostids":"10084"
 item.get
"host":"Linux Server",
"1"
第12章ZabbixAPI
·211°
---
## Page 227
212°
别要使用4个参数来查询，具体结果如下。
下面几个：
相关的 Triggers 的列表。
Zabbix监控系统深度实践
selectTriggers
state:“o"
triggerid:“13491"
triggers:[
(2）refer
triggerid:“13491"
-triggers:
（1）short
extend
由上面文档中的内容可知，参数“selectTriggers”的值的类型是“query”，“query”的值有
第二类，是限定的一些条件，如参数“selectTriggers”表示 get到的 Items 列表要加上与之
下面看个例子，
count
Orefer
 short
第一类，
这里需要大家注意的是，在文档中，参数被分成了三类，表格中用一条横杠分开。
在这个例子中，使用hostids进行搜索，除了hostids,还支持的参数有 groupids、templateids 等。
，itemids、hostids是根据Item的属性进行搜索的。
，如果要从 API查询一个 Item，并且要列出和这个Item 相关的 Triggers，分
Supports count.
Return triggers that the item is used in in the triggers property.
---
## Page 228
是如此使用。
第三类参数的作用，是将返回的数据进行过滤，比如前面举的例子：
通过这个例子，大家应该能知道这4个参数的用途了吧。在其他类型为 query 的地方，也
（4）count
value_flags: “o"
flags: “o"
state: “0"
type: “o”
templateid:“o"
priority:“3”
lastchange:
value:“1”
status:“o"
description:
expression:
triggerid:“13491"
triggers:
(3）extend
value_flags: “o"
"method": "item.get",
"jsonrpc":"2.0",
“1396166407”
“{13233}=1”
“Zabbix agent on {HOST.NAME} is unreachable for 5 minutes"
第12章ZabbixAPI
·213°