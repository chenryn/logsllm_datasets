ing campaign. In fact, as our study went deeper, more evidence
emerged supporting the need for malicious search user redirection
in search poisoning.
1excluding URLs already ﬂagged as malicious by search engines.
O2: Search poisoning as a service
From all traces in Sstudy we extracted their chain of redirections,
which are then used to compose a redirection graph, in which the
nodes represent encountered domains and the directed edges rep-
resent redirections from one domain to another. Large numbers
of inter-connected chains form subgraphs that represent different
search poisoning campaigns. Two representative subgraphs are
shown in Figure 2, as examples to illustrate our ﬁndings. Success-
ful campaigns are able to employ many landing domains and target
different search keywords to maximize the incoming search users.
Figure 2 (top) shows a campaign that successfully poisoned over
28 “trendy” search keywords and injected at least 46 URLs into
top search results. Furthermore, the variety of terminal domains
supported by a single campaign suggests that specialized search
poisoning services are available to all kinds of malicious websites
for purchase. The graph also indicates a two-tier afﬁliate marketing
model followed by this campaign. Some landing pages redirected
search users to centralized “super afﬁliate” domains (circled in the
graph), which then dynamically dispatch the lured users to differ-
ent terminal domains. As a result, more intermediate webpages
appeared in the redirection chains.
O3: Sophisticated poisoning and evasion tricks
Cloaking techniques [12] are commonly used in search poison-
ing (by 97% landing pages in Sstudy). Search crawlers are pre-
sented with specially crafted content with fake relevance. The ma-
licious redirection process only starts when visited by search users
that queried the target (poisoned) keywords, while blocking other
visitors as an attempt to prevent security detectors reaching the ma-
licious content or domains. By forging the browser’s User-Agent
strings, we managed to obtain the search crawler views of 26 land-
ing pages in our Sstudy dataset that did not verify the crawler’s
source IP address. These views were carefully composed to mimic
normal webpages (e.g., blogs or news sites), with highly relevant
content (possibly scraped from elsewhere) organized in a smooth
way. We noticed that this well-crafted content may easily fool hu-
man readers, and is therefore very likely to evade content-based
blackhat SEO detectors. In addition, we discovered a handful of
image-rich landing pages that likely targeted at multimedia searches.
Another way in which search poisoning try to evade detection
is by hosting the landing pages on compromised websites. These
websites typically have been indexed by search engines for quite
some time and accumulated a non-trivial domain history or rep-
utation. This can help search poisoning to bypass some security
checks performed by search engines and to facilitate rank promo-
tion. In our study dataset Sstudy we found that about 70% of the
redirections start from domains with a fair reputation score in [4]
and only 2% originate from blacklisted domains in [3].
O4: Persistence under transient appearances
To achieve a persistent poisoning effect, search poisoners have
to accommodate for the volatility of popular search keywords. The
bottom graph in Figure 2 shows a campaign that made multiple
appearances on different popular search results across the entire
study period: old landing domains had been active only for a lim-
ited time (a few days) before a new batch came in with a new set
of poisoned search keywords. Rapidly rotating landing domains
not only enable a wide coverage on trendy search topics, but also
hinder detection efforts due to their transient appearance. Termi-
nal domains behave in a similar way. An important difference is
the fact that terminal domains tend to be disposable and have short
registration periods (likely using domain tasting services), which
further impedes blacklist-based detection.
469Figure 2: Redirection graphs of two search poisoning campaigns
O5: Various malicious applications
While previous reports always associate search poisoning with
malware distribution websites [8, 14], search poisoning is used in
a variety of other malicious applications. Figure 2 shows at least
three types of malicious websites that use search poisoning to pro-
mote different types of cyber crimes, such as distributing fake AV
software, hosting of rogue pharmacy sites, and other types of scams.
Other types of uses (not reported in Figure 2) were also observed in
Sstudy, such as sites that host drive-by download exploits, are part
of click fraud schemes, or host phishing pages. Therefore, we ar-
gue that security solutions speciﬁc to individual types of malicious
websites fail to thoroughly address the general search poisoning
problem.
Lessons learned: Detecting search poisoning is a daunting
task. Solely relying on identifying suspicious features associated
with the landing pages (e.g., deceptive relevance, suspicious link-
age structures, etc.) is immediately subject to evasion, given the at-
tackers’ freedom to craft the page content. At the same time, detect-
ing malicious terminal pages is hindered by their diversity and con-
ditional accessibility of the actual malicious content (in particular,
malicious sites can detect crawlers and security scanners). How-
ever, our observations convey a positive message to the defenders:
the malicious search user redirections are intrinsic to search poi-
soning cases and exhibit distinguishable behaviors that are difﬁcult
to avoid completely for search poisoning to be successful, as we
further discuss in Section 3.2.1. SURF’s design was inspired by
these ﬁndings.
3. SURF DESIGN AND EVALUATION
Based on the lessons learned from our search poisoning study
(Section 2.2), we set three primary design goals for our detection
system:
• Generality: Search poisoning techniques are employed by
attackers to promote a variety of malicious contents, and are
not limited to luring users to visiting malware distribution
pages. Therefore, SURF aims to detect generic search poi-
soning instances, regardless of the malicious content the at-
tackers intend to promote.
• Robustness: While it is arguably impossible to completely
prevent an arms race between defenders and attackers, we
aim to identify features typical of search poisoning cases that
are difﬁcult to evade. In practice, we restrict SURF to using
a set of robust features, which cannot be evaded by adver-
saries without incurring a signiﬁcant cost (e.g., because of
the need to completely change their attack strategy, or move
to a different attack infrastructure).
• Wide deployability: Unlike most previous work on blackhat
SEO detection, which is constrained by the dependency on
search engine private data and only deployable at the search
engine side, our approach aims to provide a solution that can
be deployed at end-user’s browsers (as a plugin), at auto-
mated security crawlers, and inside search engines. End-
users can be protected from malicious terminal webpages
hidden behind poisoned search results. At the same time,
search engines or security vendors can deploy SURF in a
“browsers farm” to accurately detect whether a search key-
word is poisoned and harvest the malicious terminal page.
3.1 SURF System Overview
To meet the goals listed above, we designed SURF as a browser
component. An overview of SURF is shown in Figure 1. In prac-
tice, SURF sits in a browser and observes search-related browsing
sessions. Whenever a user submits a query to a search engine and
receives the result page, SURF starts its monitoring on page loads
and redirections, from the search result page, to the landing page
(on user’s click), and to the terminal page the user is eventually
brought to (after going through several intermediate pages in some
cases). During this course, SURF extracts a number of statistical
features from a range of sources, such as browser events, network
information regarding the domain names and IP addresses involved
in the redirection chain, and the search results themselves (see Sec-
tion 3.2 for details). The resulting feature vector is then sent to the
SURF Classiﬁer, which is trained to distinguish between normal
redirections and malicious search user redirections.
In practice,
the SURF Classiﬁer is a supervised statistical classiﬁer trained us-
ing a labeled dataset containing examples of redirection chains re-
sulted from clicking on either legitimate or a variety of poisoned
search results. It is worth noting that our deﬁnition of “malicious
search user redirections” in this paper is restricted to redirections
following poisoned search results. Detecting other types of mali-
cious redirection is out of the scope of this work. While the vast
majority of redirections used by the search poisoning cases we en-
countered during our study (Section 2.2) only change the URLs of
webpages’ top frames, SURF also covers the malicious redirections
that occur within dynamic subframes (e.g., an iframe).
3.2 Detection Features
Inspired by the study presented in Section 2.2, and keeping in
mind the design goals outlined at the beginning of Section 3, we
Fake AVRogue PharmacyScamLandingPageIntermediatePage470such cloaking technique would not affect SURF’s protection when
deployed at end user’s browsers. If the attacker refuses to offer the
malicious content at the second visit (i.e., when SURF allows the
user’s click on a search result to go through), the user will not be
exposed to the malicious content in the ﬁrst place.
Chained webpages: This group of features measures three prop-
erties of the webpages involved in search user redirections. The
landing to terminal distance feature measures the (ap-
proximate) geographical and topological distances between the land-
ing page and the terminal page. In practice, to measure this distance
we leverage information about the geo-location of the IPs where
the two pages reside, the autonomous systems (AS) the IPs belong
to, and the websites’ domain names. The intuition is that mali-
cious search user redirections always “travel” a long distance. The
reason is that in search poisoning cases the landing page is usually
hosted on a (likely compromised) website that belongs to a separate
(usually legitimate) organization, while the terminal page is often
hosted on a “bullet-proof” server provided by a different (usually
not legitimate or boarder-line) organization often located in a dif-
ferent country.
The page load/render errors ﬂags pages in the redi-
rection chain that failed to load or render properly, due to excep-
tions or network errors. The intuition is that compromised pages
are sometimes blacklisted or remediated, and the redirection chain
to the malicious terminal page may end prematurely. The IP-to-name
ratio feature represents the number of the redirection URLs that
use an IP address (e.g., http://192.168.0.1/index.php)
divided by the number of redirection URLs that instead use a do-
main name (e.g., http://example.com/index.php). This
is motivated by the fact that a large number of search poisoning
cases encountered in our study involve URLs that use IPs that are
dynamically assigned to unnamed hosts, in an effort to bypass URL
blacklists commonly available in major browsers.
Poisoning resistance: This group of features measure properties
of the search keywords and their corresponding search results. The
keyword poison resistance quantiﬁes the difﬁculty of poi-
soning search results under a given keyword. We measure this fea-
ture using publicly available information. The basic idea is straight-
forward: given a certain search keyword, the competitiveness of
promoting a link higher in the result rankings is reﬂected by how
prominent the top ranked webpages are under that keyword. We use
Google’s PageRank [19] to measure the prominence of a website.
The keyword poison resistance of a keyword k is de-
ﬁned as the average PageRank value of the top 10 ranked websites
obtained from the search results under k. In practice, the higher the
value of this feature, the more prominent websites competing for
the top rank positions, and thus the more difﬁcult for an attacker
to poison the keyword and force a link to a rogue landing page to
appear higher in the ranking.
From our study dataset Sstudy (see Section 2.2), we noticed
that the distribution of poisoned keywords across different search
poisoning cases is skewed towards keywords with low keyword
poison resistance. This result was somewhat expected, be-
cause keywords that are popular and yet easier to poison than others
tend to attract the attackers’ attention. Another feature we consider
is the search rank of a landing page. The higher the rank of a
landing page, the lower the probability that the result has been poi-
soned. This follows directly from our previous argument that top
ranked pages are often prominent websites, making it difﬁcult for
search poisoners to promote their sites ahead of these prominent
sites. The rank confidence feature is computed by dividing
the keyword poison resistance by the rank of a partic-
Table 1: Feature selection
identiﬁed a set of nine statistical features that capture the charac-
teristics of generic search poisoning instances, and that are difﬁcult
for the attacker to evade without incurring a signiﬁcant cost (e.g.,
the attacker would need to move to a new search poisoning strategy
and infrastructure). The features extracted by SURF are divided in
three groups as summarized in Table 1 and detailed below.
Redirection composition: This group of three features aims at cap-
turing discrepancies between the legitimate and malicious search
user redirections. The total redirection hops records the
number of redirections that transport the visitor from the landing
page to a terminal page, whereas the cross-site redirection
hops counts how many of these redirections cross website bound-
aries. In SURF, a cross-site redirection is a redirection that brings
from a domain d1 to a domain d2, where the second-level domains2
of d1 and d2 differ (e.g., www.cnn.com and blogs.cnn.com
share the same second-level domain, while www.cnn.com and
www.bbc.com do not). As noted in Section 2.2, the vast ma-
jority of poisoned search results rely on cross-site redirections to
transport search users to the malicious terminal pages hosted on
covert domains. On the other hand, legitimate search user redi-
rections rarely send incoming visitors away to another websites,
simply because of the common incentive of keeping as many vis-
itors as possible within their own domain. The redirection
consistency feature captures whether a redirection is only vis-
ible to targeted search users.
In legitimate search user redirec-
tions, users who arrive to the landing page through a search en-
gine or though a direct link (e.g., by typing the same URL on the
browser’s address bar, or clicking the hyperlink on a “non-search”
website) will be redirected to the same terminal page displaying
relevant content. This is in contrast with search poisoning cases,
in which typically only users that reach the landing page through a
search will be redirected to the malicious content, while other vis-
itors will be presented with non-malicious content in an attempt to
evade some detection systems or manual analysis (see Section 2.2).
To measure redirection consistency, SURF can ﬁrst command the
browser to directly visit the landing page (thus effectively stripping
the Referrer ﬁeld in the HTTP request, for example), and then
allows the user’s click on the search result link to go through so that
the two obtained sets of redirection events can be compared for con-
sistency. When used at the search engine-level (e.g., in a “browsers
farm”), SURF could perform this comparison on redirections ob-
tained by visiting the landing page from different IP addresses to
bypass some of the cloaking techniques discussed in Section 2.2
whereby the malicious content is not provided to IP addresses vis-
iting the same landing page twice in a row. It is worth noting that
2The second-level domain of a domain name d.c.b.a is typically
deﬁned as b.a, where a is called the top-level domain. We lever-
age Mozilla’s public domain sufﬁx list to take effective top-level
domains such as co.uk into account.
AspectsFeaturesSource*Evasion PossibilityRedirection CompositionTotal redirection hopsCross-site redirection hopsRedirection consistencyBB,NBLowLowLowChained WebpagesLanding to terminal distancePage load/render errorsIP-to-name ratioB,NB,NBLowLowMediumPoisoning ResistanceKeyword poison resistanceSearch rankGood rank conﬁdenceSSSLowLowLow* B=browser events/data;     N=network info;    S=search result471ular search result. The higher the rank confidence, the less
likely that the result is poisoned.
3.2.1 Qualitative Robustness Analysis
Here we present a qualitative analysis of the robustness of SURF’s
statistical features against evasion attempts. A quantitative robust-
ness analysis is discussed in Section 3.4.
Redirection composition: This group of features tries to capture
the “search poisoning as a service” phenomenon discussed in Sec-
tion 2.2. In practice, attackers often compromise several legitimate
websites to host rogue landing pages, which use deceptive content