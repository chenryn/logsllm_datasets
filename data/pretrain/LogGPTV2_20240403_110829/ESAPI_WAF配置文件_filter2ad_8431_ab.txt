[  
在执行授权检查时，J2EE应用会在两个地方查询用户的角色：session或请求头。在下面的例子中，WAF将会在`x-roles`的请求头中查找是否包含字符串`admin`。
下面是一个备用的示例，当用户角色存储在org.acme.user.roles这个session变量中
这个例子中，`operator`为设置成`inList`,它将检查`variable`中设置的`session`变量。WAF知道如何检查包含所有基本列表对象的`java.util.Collection`,
`java.util.Enumeration`和`java.util.Map`的任何子类，因此，如果您将用户角色存储在这些子类中的任何一个中，WAF可以在其中搜索”value”属性所指定的值。
属性`path`是必须的，它是一个正则表达式，它决定``规则将应用于哪个路径。
属性`variable`是必须的，告诉WAF在哪里搜索`value`属性以授予访问权限  
有五个地方可提供查找  
[  
属性`operator`是必须的，告诉WAF对于在`variable`属性中对`value`值执行什么样的操作，共四个可选项  
[  
属性`value`是必须的，表示需要通过测试的值。
### Url-rules标签
``标签允许开发者在HTTP状态行(请求的第一行)数据执行检查，在该标签中，您可以根据请求的文件扩展名(restrict-extension)，请求的HTTP方法(restrict-method)和是否通过SSL(enforce-https)限制访问。
#### 子标签
``标签允许开发者限制访问服务器上的某些文件后缀名。评估经常发现在服务器上找到未受保护的静态资源，如代码，库。  
下面的示例展示了如何预防任何到生产服务器上JAVA源代码的请求
属性`deny`和`allow`至少出现一个，且不能同时包含两个属性。但是可以有多个``标签来实现预期的效果。属性值可以是一个正则表达式，如：`.*\$`
#### 子标签
默认情况下，大多数应用服务器允许用户滥用一些http方法，导致意外发生。``标签允许开发者预防无用的http方法请求应用程序。  
下面的示例中展示了``标签包含两个``子标签：
属性`deny`和`allow`至少出现一个，且不能同时包含两个属性。但是可以有多个``标签来实现预期的效果，属性值可以是一个正则表达式。
白名单(allow属性)和黑名单(deny 属性)有利也有弊，根据实际情况，同时使用可能效果会更好。  
属性`path`是可选项，给WAF一个正则表达式来决定什么时候应用该规则，如果URL匹配path正则表达式，该规则即会执行。
#### 子标签
条件允许的情况下，WEB应用应该使用SSL，如果应用使用相对链接，则不强制使用SSL，攻击者可能会诱骗受害者去点击一个没有使用SSL的链接，可能会导致用户暴露敏感信息。
为了防止这种事件的发生，``规则强制使用SSL。下面的示例中展示了如何在整个站点中强制使用SSL,并配置了一些静态非敏感内容的例外情况，如果用户用非SSL请求了匹配的URL,将会通过302跳转到使用SSL的对应URL页面。
         /index.html
         /images/.*
         /help/.*
属性`path`是必须的，决定了网站哪部分使用SSL。所有例外情况都应该在子标签``中列举出来。
子标签``是可选的，可以有多个标签表明例外路径，当type=`regex`时，则支持正则匹配路径。
### Header-rules标签
``标签允许开发者对http请求头数据执行检查，在该标签中，您可以使用基于userAgent(restrict-user-agent)或contentType(restrict-content-type)来限制访问。
#### 子标签
``标签允许开发者根据用户UA来限制对网站的访问，有些UA表示它即为公开的不需要的流量，比如搜索引擎的robots。
#### 子标签
``标签允许开发者根据请求内容类型限制对站点的访问。异常的content-types可以是CSRF攻击的指标，也可以用来绕过安全机制。
### Virtual-patchs标签
``允许开发者针对已知攻击实行虚拟补丁，如URL跳转，XSS，SQL注入等，您可以配置0个或多个``规则。
#### 子标签
``规则是WAF
策略文件中最重要的规则之一，许多利用自动化工具的攻击都可以通过虚拟补丁修复。在下面的示例中简单修复了XSS漏洞 ：
属性`id`是``的唯一标识，如果使用了唯一的ID，则在日志中可以区分哪条规则被触发。
属性`path`是应用到请求URI的正则表达式，若匹配则执行测试。
属性`variable`告诉WAF在分析哪个位置的属性值，有两个值可选：  
[  
属性`pattern`是一个正则表达式，如果匹配成功，则请求通过测试，若匹配失败,WAF会将它认为是严重的安全事件。
属性`message`是``失败时要记录的文字字符串，日志会自动生成一些有价值的信息，这应该用来向人们指出这个规则失败的简单总结。