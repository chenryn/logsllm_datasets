:::
本节提供了一个 Ansible playbook 示例。这个 playbook 应用
`storage`{.literal} 角色在卷组中创建 LVM 逻辑卷。
::: example
[]{#assembly_configuring-lvm-volumes-configuring-and-managing-logical-volumes.html#idm140471739670992}
**例 4.1. 在 myvg 卷组中创建 mylv 逻辑卷的 playbook**
::: example-contents
``` screen
- hosts: all
  vars:
    storage_pools:
      - name: myvg
        disks:
          - sda
          - sdb
          - sdc
        volumes:
          - name: mylv
            size: 2G
            fs_type: ext4
            mount_point: /mnt
  roles:
    - rhel-system-roles.storage
```
::: itemizedlist
-   `myvg`{.literal} 卷组由以下磁盘组成：
    ::: itemizedlist
    -   `/dev/sda`{.literal}
    -   `/dev/sdb`{.literal}
    -   `/dev/sdc`{.literal}
    :::
-   如果 `myvg`{.literal} 卷组已存在，则 playbook
    会将逻辑卷添加到卷组中。
-   如果 `myvg`{.literal} 卷组不存在，则 playbook 会创建它。
-   playbook 在 `mylv`{.literal} 逻辑卷中创建 Ext4
    文件系统，并在其中永久挂载文件系统 `/mnt`{.literal}。
:::
:::
:::
::: itemizedlist
**其它资源**
-   有关 `storage`{.literal} 系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
## []{#assembly_configuring-lvm-volumes-configuring-and-managing-logical-volumes.html#_additional_resources}其它资源 {.title}
:::
::: itemizedlist
-   有关 `storage`{.literal} 角色的更多信息，请参阅[使用 RHEL
    系统角色管理本地存储](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_logical_volumes/managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes){.link}。
:::
:::
:::
::: section
::: titlepage
# []{#assembly_configuring-lvm-volumes-configuring-and-managing-logical-volumes.html#removing-lvm-logical-volumes_configuring-lvm-volumes}删除 LVM 逻辑卷 {.title}
:::
这个过程使用命令行 LVM 接口删除现有逻辑卷。
下面的命令可从卷组 `/dev/vg-name/lv-name`{.literal} 中删除逻辑卷
`vg-name`{.literal}。
::: orderedlist
**流程**
1.  如果逻辑卷当前已被挂载，卸载该卷。
2.  如果在集群环境中存在逻辑卷，则在所有其激活的节点上取消激活逻辑卷。对每个这样的节点运行以下命令：
    ``` screen
    [root@node-n]# lvchange --activate n vg-name/lv-name
    ```
3.  使用 `lvremove`{.literal} 实用程序删除逻辑卷：
    ``` screen
    # lvremove /dev/vg-name/lv-name
    Do you really want to remove active logical volume "lv-name"? [y/n]: y
      Logical volume "lv-name" successfully removed
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在这种情况下，逻辑卷还没有被取消激活。如果您在删除逻辑卷前明确取消激活了逻辑卷，则无法看到验证您是否要删除活跃逻辑卷的提示信息。
    :::
:::
::: itemizedlist
**其它资源**
-   `lvremove(8)`{.literal} man page
:::
:::
:::
[]{#assembly_modifying-logical-volume-size-configuring-and-managing-logical-volumes.html}
::: chapter
::: titlepage
# []{#assembly_modifying-logical-volume-size-configuring-and-managing-logical-volumes.html#assembly_modifying-logical-volume-size-configuring-and-managing-logical-volumes}第 5 章 修改逻辑卷的大小 {.title}
:::
创建逻辑卷后，您可以修改卷的大小。
::: section
::: titlepage
# []{#assembly_modifying-logical-volume-size-configuring-and-managing-logical-volumes.html#proc_growing-logical-volume-lvm-activation}增大逻辑卷 {.title}
:::
要增大逻辑卷的大小，使用 `lvextend`{.literal} 命令。
当扩展逻辑卷时，可以指定您想要增大的量，或者指定扩展它需要达到的大小。
下面的命令将逻辑卷 `/dev/myvg/homevol`{.literal} 扩展到 12GB。
``` literallayout
# lvextend -L12G /dev/myvg/homevol
lvextend -- extending logical volume "/dev/myvg/homevol" to 12 GB
lvextend -- doing automatic backup of volume group "myvg"
lvextend -- logical volume "/dev/myvg/homevol" successfully extended
```
下面的命令在逻辑卷 `/dev/myvg/homevol`{.literal} 中添加了 1 GB。
``` literallayout
# lvextend -L+1G /dev/myvg/homevol
lvextend -- extending logical volume "/dev/myvg/homevol" to 13 GB
lvextend -- doing automatic backup of volume group "myvg"
lvextend -- logical volume "/dev/myvg/homevol" successfully extended
```
在 `lvcreate`{.literal} 命令中，可以使用 `lvextend`{.literal} 命令的
`-l`{.literal}
参数指定扩展数，从而增加逻辑卷的大小。您还可以使用此参数指定卷组的比例或者卷组中剩余空间的比例。下面的命令扩展了名为
`testlv`{.literal} 的逻辑卷，使其使用卷组 `myvg`{.literal}
的所有未分配的空间。
``` literallayout
# lvextend -l +100%FREE /dev/myvg/testlv
  Extending logical volume testlv to 68.59 GB
  Logical volume testlv successfully resized
```
当扩展逻辑卷后，有必要增大文件系统的大小以匹配文件系统。
默认情况下，大多数重新定义文件系统大小的工具都会将文件系统的大小增加到基本逻辑卷的大小，这样您就不必考虑为两个命令指定相同的容量。
:::
::: section
::: titlepage
# []{#assembly_modifying-logical-volume-size-configuring-and-managing-logical-volumes.html#proc_growing-filesystem-on-a-logical-volume-lvm-activation}在逻辑卷中增大文件系统 {.title}
:::
要在逻辑卷中增大文件系统，执行以下步骤：
::: orderedlist
1.  确定现有卷组中是否有足够的未分配空间来扩展逻辑卷。如果没有，执行以下步骤：
    ::: orderedlist
    1.  使用 `pvcreate`{.literal} 命令创建新物理卷。
    2.  使用 `vgextend`{.literal}
        命令扩展包含您想要增大的文件系统逻辑卷的卷组，使其包含新的物理卷。
    :::
2.  一旦卷组足够大可包含更大的文件系统，使用 `lvresize`{.literal}
    命令扩展逻辑卷。
3.  在逻辑卷中重新定义文件系统大小。
:::
请注意，您可以使用 `lvresize`{.literal} 命令的 `-r`{.literal}
选项扩展逻辑卷并使用单一命令重新定义基础文件系统大小
:::
::: section
::: titlepage
# []{#assembly_modifying-logical-volume-size-configuring-and-managing-logical-volumes.html#proc_shrinking-logical-volume-lvm-activation}缩小逻辑卷 {.title}
:::
您可以使用 `lvreduce`{.literal} 命令减少逻辑卷的大小。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
GFS2 或者 XFS 文件系统不支持缩小，因此您无法缩小包含 GFS2 或者 XFS
文件系统的逻辑卷大小。
:::
如果您要缩小的逻辑卷包含一个文件系统，为了防止数据丢失，必须确定该文件系统没有使用将被缩小的逻辑卷中的空间。因此，建议您在逻辑卷包含文件系统时使用
`lvreduce`{.literal} 命令的 `--resizefs`{.literal}
选项。当您使用这个选项时，`lvreduce`{.literal}
命令会在缩小逻辑卷前尝试缩小文件系统。如果缩小文件系统失败，比如文件系统已满或者文件系统不支持缩小，那么
`lvreduce`{.literal} 命令将失败，也不会尝试缩小逻辑卷。
::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
### 警告 {.title}
在大多数情况下，`lvreduce`{.literal}
命令会警告可能的数据丢失，并要求用户进行确认。但是，您不应该依赖于这些确认提示来防止数据丢失，因为在某些情况下，您不会看到这些提示信息，比如当逻辑卷不活跃或者没有使用
`--resizefs`{.literal} 选项时。
请注意：使用 `lvreduce`{.literal} 命令的 `--test`{.literal}
选项并不代表要执行的操作是安全的，因为这个选项不会检查文件系统或者测试文件系统大小。
:::
下面的命令将卷组 `vg00`{.literal} 中的逻辑卷`lvol1`{.literal} 缩小到
64MB。在这个示例中，`lvol1`{.literal}
包含一个文件系统，该命令可将其重新定义逻辑卷的大小。这个示例显示了该命令的输出结果。
``` literallayout
# lvreduce --resizefs -L 64M vg00/lvol1
fsck from util-linux 2.23.2
/dev/mapper/vg00-lvol1: clean, 11/25688 files, 8896/102400 blocks
resize2fs 1.42.9 (28-Dec-2013)
Resizing the filesystem on /dev/mapper/vg00-lvol1 to 65536 (1k) blocks.
The filesystem on /dev/mapper/vg00-lvol1 is now 65536 blocks long.
  Size of logical volume vg00/lvol1 changed from 100.00 MiB (25 extents) to 64.00 MiB (16 extents).
  Logical volume vg00/lvol1 successfully resized.
```
在调整大小值的前面使用 -
表示该值会从逻辑卷的实际大小中减小。下面的例子显示，您希望将逻辑卷缩小到
64MB，而不是对该卷缩小 64MB。
``` literallayout
# lvreduce --resizefs -L -64M vg00/lvol1
```
:::
::: section
::: titlepage
# []{#assembly_modifying-logical-volume-size-configuring-and-managing-logical-volumes.html#proc_extending-striped-volume-lvm-activation}扩展条状逻辑卷 {.title}
:::
要增加条状逻辑卷的大小，基本物理卷中必须有足够的可用空间，以便让卷组支持条带。例如，如果您有一个双向条带使用了整个卷组，那么向卷组中添加一个物理卷不会让您扩展条带。反之，您必须在卷组中添加至少两个物理卷。
例如：一个由两个基本物理卷组成的卷组 `vg`{.literal}，它使用以下
`vgs`{.literal} 命令显示。
``` literallayout
# vgs
  VG   #PV #LV #SN Attr   VSize   VFree
  vg     2   0   0 wz--n- 271.31G 271.31G
```
您可以使用整个卷组空间创建一个条带。
``` literallayout
# lvcreate -n stripe1 -L 271.31G -i 2 vg
  Using default stripesize 64.00 KB
  Rounding up size to full physical extent 271.31 GB
  Logical volume "stripe1" created
# lvs -a -o +devices
  LV      VG   Attr   LSize   Origin Snap%  Move Log Copy%  Devices
  stripe1 vg   -wi-a- 271.31G                               /dev/sda1(0),/dev/sdb1(0)
```
请注意：卷组现在没有剩余空间。
``` literallayout
# vgs
  VG   #PV #LV #SN Attr   VSize   VFree
  vg     2   1   0 wz--n- 271.31G    0
```
下面的命令在卷组中添加了另一个物理卷，它提供了 135GB 的额外空间。
``` literallayout
# vgextend vg /dev/sdc1
  Volume group "vg" successfully extended
# vgs