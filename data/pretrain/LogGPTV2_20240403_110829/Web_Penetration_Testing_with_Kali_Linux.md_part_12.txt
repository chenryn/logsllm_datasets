registry hives. creddump can extract LM and NT hashes (SYSKEY protected), cached
domain passwords and LSA secrets.
Summary
Host systems are an authorized source that access web applications. Compromising
an authorized resource could give a Penetration Tester approved access to a targeted
web application. This concept is sometimes overlooked when Penetration Testing
web applications.
In this chapter, we covered various methods to gain unauthorized access to host
systems. The focus is using social engineering, identifying vulnerable hosts, and
cracking passwords. There are many textbooks available that focus on hacking host
systems, which could be useful when leveraged with the topics covered in this book.
We limited the scope of this chapter to targeting hosts specifically that access web
applications.
The next chapter will cover attacking how hosts authenticate to web applications.
[ 174 ]
www.it-ebooks.info
Attacking Authentication
Authentication is the act of confirming the trust of one's identity. This might involve
confirming the identity of a person, program, or hardware, such as verifying Joseph
Muniz is a government employee, as well as his laptop is issued by the government
agency. As a Penetration Tester, it is valuable to be able to gain the trust of a system
and bypass security as an authorized entity.
The Certified Information Systems Security Professional (CISSP) curriculum
classifies authentication based on three factor types, as follows:
• Something you know, such as a PIN or password
• Something you have, such as a smart card
• Something you are, such as a fingerprint
The most common method by which people confirm their identity is using something
they know, such as a password. We covered various ways to crack passwords in
Chapter 4, Client Side Attacks, while attacking host systems. Cracking a password
will get you access to some systems however, many targets will leverage multifactor
authentication, meaning a combination of authentication steps to prove one's identity.
It is common that user authentication involves the use of a username and password
combination. It becomes cumbersome for a user to enter this information every
time authentication is required. To overcome this, single sign-on was created as a
means to authenticate one to a central authority that is trusted by other websites.
The central authority will verify trust on behalf of the user or device, so the user can
access multiple secured systems without having to be prompted at each security
gateway. A common trusted authority is a Windows domain controller, providing
authentication for internal users to intranet resources. In such cases, compromising
a trusted authority or account with high privileges could mean access to many other
internal resources in this type of system.
www.it-ebooks.info
Attacking Authentication
Many government agencies leverage a Personal Identity Verification (PIV) or
Common Access Card (CAC) along with a password, to meet something users have
and know. It is common for remote workers to use a digital token that produces
a fresh number every few seconds along with a PIN to represent something they
have and know. High security physical locations may require fingerprint scanning
along with PIN for access. Network access control technology may verify how a
user is authenticated into a laptop, as well as seek out a hidden certificate to verify
the identity of system and user prior to providing network resources. It is critical to
identify the method of authentication used by your target during the reconnaissance
phase of a Penetration Test, so you can plan out a strategy to bypass that trust.
The focus of this chapter is around how users and devices authenticate to web
applications with the goal of compromising that trust. We will start by attacking the
process of managing authentication sessions, which is how trust is established between
the client and the server. Next, we will focus on clients by attacking how data is stored
on host systems through cookie management. From there, we will look at hiding in
between the client and server using man-in-the-middle attack techniques. The last
topics will be identifying and exploiting weakness in how web applications accept
authentication data through SQL and cross-site scripting (XSS) attacks.
[ 176 ]
www.it-ebooks.info
Chapter 5
Attacking session management
Authentication and session management make up all aspects of handling user
authentication and managing active sessions. With regards to web applications,
a session is the length of time users spend on a website. Best practice is managing
authorized sessions (that is, what you are permitted to access), based on how people
and devices authenticate as well as, controlling what and how long resources
are available during the active session. This makes authentication a key aspect of
managing authorized sessions.
The goal for a Penetration Tester is to identify accounts that are permitted access to
sessions with high-level privileges, and unlimited time to access the web application.
This is why session management security features, such as session timeout intervals
and SSL certificates, were created. Either way, tools available in Kali can identify
flaws in how sessions are managed, such as capturing an active session on a web
application post user logout, and using that session for another person (also known
as a session fixation attack).
Session management attacks can occur using vulnerabilities in applications or how
users access and authenticate to those applications. Common ways attackers do this
is through cross-site scripting or SQL injection attacks to a web server, which will be
covered later in this chapter. Attackers can also take advantage of session cookies in
web browsers or vulnerabilities in web pages to achieve similar results. Let's start off
by looking at a technique used to trick users into divulging sensitive information, or
exposing themselves to attacks through modified hyperlinks and iFrames.
Clickjacking
Clickjacking is a technique where an attacker tricks a user into clicking something
other than what they believe they are clicking. Clickjacking can be used to reveal
confidential information, such as the login credentials, as well as permitting an
attacker to take control of the victim's computer. Clickjacking usually exposes a
web browser security issue or vulnerability using embedded code or script that
executes without the victim's knowledge. One example of performing clickjacking is
having the hyperlink text to a trusted site different than the actual site. The average
user doesn't verify hyperlinks prior to clicking, or notices changes associated with
common clickjacking attempts, making this a very effective form of attack.
In the following example, the user will see Visit us on Facebook.com however, when
they click on the text, they will actually be redirected to www.badfacebook.com.
Visit Us on Facebook.com
[ 177 ]
www.it-ebooks.info
Attacking Authentication
Clickjacking can be more malicious and complicated than changing hyperlinks.
Attackers who use clickjacking normally embed iFrames into a webpage. The content
of the iFrames contains data from the target website and usually placed over a
legitimate link making it difficult to detect.
To craft your own clickjacking attack, you can use the clickjacking tool by Paul Stone,
which can be downloaded at: http://www.contextis.com/research/tools/
clickjacking-tool/.
Once you have downloaded the tool, you can use it to take code from another
website, such as a voting button or a like button. The clickjacking tool works with
Firefox 3.6. The tool by Paul Stone will not work with newer versions of Firefox;
however, you can run multiple versions of Firefox on the Kali arsenal including
Firefox 3.6 or older.
Website code often changes, so make sure to adjust your attacks to
accommodate updates that mirror the trusted website.
Hijacking web session cookies
Cookies are a small piece of data sent from a website and stored on a user's web
browser while the user is accessing the website. The website can use a cookie to
verify the user's return to the site and obtain details about the user's previous
activity. This can include what pages were accessed, how they logged in, and what
buttons were pressed. Anytime you log into a website, such as Facebook, Gmail, or
Wordpress, your browser assigns you a cookie.
[ 178 ]
www.it-ebooks.info
Chapter 5
Cookies can include tracking history from users for long periods of time, including
behavior on a website years ago. Cookies can also store passwords and form values
a user has previously filled, such as their home address or credit card number. This
is useful for businesses such as retail looking to provide a simplified experience
for their consumers. A session token is delivered from a web server anytime a host
authenticates. The session token is used as a way to recognize among different
connections. Session hijacking occurs when an attacker captures a session token and
injects it into their own browser to gain access to the victim's authenticated session.
Essentially, it is the act of replacing an attacker's unauthorized cookie with a victim's
authorized cookie.
There are some limitations of session hijacking attacks:
• Stealing cookies is useless if the target is using https:// for browsing, and
end-to-end encryption is enabled. Adoption has been slow; however, most
secured websites provide this defense against session hijacking attacks.
You can use SSLstrip as a method to prevent your target from establishing
an https connect prior to launching a session hijack or other attack. See
Chapter 3, Server-Side Attacks, for more information on SSLstrip.
• Most cookies expire when the target logs out of a session. This also logs
the attacker out of the session. This is a problem for some mobile apps that
leverage cookies that don't expire, meaning an attacker could gain access
for life if a valid session token is captured.
Many websites do not support parallel logins, which negates the use of a
stolen cookie.
Web session tools
The next section will cover tools used for Penetration Testing web sessions.
Some tools are not available in Kali1.0; however, they can be obtained online.
[ 179 ]
www.it-ebooks.info
Attacking Authentication
Firefox plugins
The manual method to perform a session hijack is stealing a victim's authentication
cookie. One way to accomplish this is injecting a script on a compromised web
application server so cookies are captured without the victim's knowledge. From
there, the attacker can harvest authentication cookies and use a cookie injector tool
to replace the attacker's cookie with an authorized stolen cookie. Other methods used
to steal cookies are packet sniffing, network traffic, and compromising hosts. Stealing
cookies will be covered later in this book.
The Firefox web browser offers many plugins that can be used to inject stolen cookies
into an attacker's browser. Some examples are GreaseMonkey, Cookie Manager, and
FireSheep. We suggest browsing the Firefox plugins marketplace for various cookie
management offerings to fit your penetration requirements.
Firefox and all associated plugins are not installed by default
on Kali Linux 1.0.
Firesheep – Firefox plugin
Firesheep is a classic Penetration Testing tool used to audit web sessions. Firesheep
is an extension for the Firefox web browser; however, some versions have been
unstable with recent Firefox releases. Firesheep acts as a packet sniffer that intercepts
unencrypted cookies from websites while they transmit over a network.
Firesheep plugin for Firefox is officially supported on Windows and
MAC, making it cumbersome to operate on Linux. Custom work can be
used to make Firesheep operational on a Linux environment; however,
it is recommended to use a more current tool.
Web Developer – Firefox plugin
Web Developer is an extension for Firefox that adds editing and debugging tools for
web developers. Web Developer can be downloaded for free from the Firefox plugin
store. One feature in Web Developer useful for session hijacking is the ability to edit
cookies. This can be found as a drop-down option from the Firefox browser once
Web Developer is installed, as shown in the following screenshot:
[ 180 ]
www.it-ebooks.info
Chapter 5
Select View Cookie Information, and you will see stored cookies. You can click
on Edit Cookie to bring up the cookie editor and replace the current cookie with a
victim's stolen cookie.
Greasemonkey – Firefox plugin
[ 181 ]
www.it-ebooks.info
Attacking Authentication
Greasemonkey is a Firefox plugin that allows users to install scripts that make on the
fly changes to web page content before or after the page is loaded. Greasemonkey
can be used for customizing a web page appearance, web functions, debugging,
combining data from other pages, as well as other purposes. Greasemonkey is
required to make other tools, such as Cookie Injector, function properly.
Cookie Injector – Firefox plugin
Cookie Injector is a user script that simplifies the process of manipulating browser
cookies. There are a lot of manual steps to import a cookie from a tool like Wireshark
into a web browser. Cookie Injector allows the user to copy paste a cookie portion of
a dump, and have the cookies from the dump automatically created on the currently
viewed web page.
You must have Greasemonkey installed to use the Cookie Injector script.
To install Cookie Injector, search Google for Cookie Injector to bring up a download
link for the script. When you select to download Cookie Injector, Greasemonkey will
pop up, prompting your approval for the install.
After installing the Cookie Injector script, press Alt+C to display the cookie dialog.
Paste a copied Wireshark string into the input box and click on OK to inject cookies
into the current page. See the Wireshark section on how to copy cookies for Cookie
Injector using Copy, Bytes, and select Printable Text Only in Wireshark. The next
two screenshots show pressing Alt+C, pasting a Wireshark Cookie Dump, and
clicking OK to see the pop-up that the captured cookies have been written into the
Internet browser.
[ 182 ]
www.it-ebooks.info
Chapter 5
Cookies Manager+ – Firefox plugin
Cookies Manager+ is a utility used to view, edit, and create new cookies. Cookie
Manager+ shows detailed information about cookies, as well as can edit multiple
cookies at once. Cookie Manager+ can also back up and restore cookies. You can
download Cookie Manager+ from the Firefox plugin store.
Once installed, Cookie Manager+ can be accessed under Tools, by selecting
Cookies Manager+.
Cookies Manager+ will show you all cookies captured by Firefox. You can scroll
down or search for specific Cookie(s) to view and/or edit. In my example, I'm
looking for any cookie associated with www.thesecurityblogger.com.
[ 183 ]
www.it-ebooks.info
Attacking Authentication
Cookies Manager+ makes editing existing cookies easy. This can be useful for
performing various types of attacks such as session hijacking and SQL injection.
Cookie Cadger
Cookie Cadger is a Penetration Testing tool used to audit web sessions. Cookie
Cadger can include detailed HTTP request capturing and replaying insecure HTTP
GET requests, such as requested items, user agents, referrer and basic authorization.
Cookie Cadger can provide live analysis for Wi-Fi and wired networks; as well as
load packet capture (PCAP) files. Cookie Cadger also includes session detection to
determine if the user is logged into webpages like Wordpress and Facebook. Cookie
Cadger is considered by some as Firesheep on steroids.
Cookie Cadger does not come with Kali 1.0.
Cookie Cadger can be downloaded from www.cookiecadger.com. The download
will be a JAR file. Double-click on the file to open Cookie Cadger. A warning will
pop up asking if you want to enable session detection. Click on Yes, and the main
dashboard will pop up. The next two screenshots show the Cookie Cadger 1.0
JAR file with the introduction warning message pop up and main Cookie
Cadger dashboard.
[ 184 ]
www.it-ebooks.info
Chapter 5
To start, select the appropriate interface, and click on Start Capture. Cookie Cadger
offers the ability to take in multiple interfaces if available.
[ 185 ]
www.it-ebooks.info
Attacking Authentication
Cookie Cadger can enumerate all the devices found on the available network.
For example, the next screenshot shows a Linux i686 using Firefox and Iceweasel.
Recent activity found by Cookie Cadger is displayed in blue text for each field.
You can view details about where the host is surfing such, as netbios names and
hostnames. You can copy requests to the clipbox and export information such as
user information, and MAC addresses. Filter tabs are available for each section to
zero in on specific targets (For example, only looking at Facebook domains).
Anytime Cookie Cadger recognizes a login session, it captures it and gives the ability
to load the session. The next screenshot shows a session capture of the administrator
logging into www.thesecurityblogger.com. Cookie Cadger will show an icon and
explain the type of session captured. This could be a Hotmail, Facebook, or in this
example, Wordpress login.
[ 186 ]
www.it-ebooks.info
Chapter 5
To see the recognized sessions, click on the tab labeled Recognized Sessions
and pick a session from the window, as shown in the previous screenshot. Once
highlighted, click on the Load Selected Session button to replay the session. Cookie
Cadger will display Loading on the bottom window, and a browser will open logged
in as the user during the captured session. The following screenshot shows opening
a Domain cookie captured from the victim. Once the loading is complete, the default
Internet browser will open the captured page with the rights associated with the
stolen cookie.
To see the session request information, right-click on the icon of the captured session
and select View Associated Request. This will bring you back to the Requests tab
and show that session.
Wireshark
Wireshark is one of the most popular, free, and open source network protocol
analyzers. Wireshark is preinstalled in Kali and ideal for network troubleshooting,
analysis, and for this chapter, a perfect tool to monitor traffic from potential targets
with the goal of capturing session tokens. Wireshark uses a GTK+ widget toolkit to
implement its user interface and pcap to capture packets. It operates very similarly to
a tcpdump command; however, acting as a graphical frontend with integrated sorting
and filtering options.
[ 187 ]
www.it-ebooks.info
Attacking Authentication
Wireshark can be found under Sniffing/Spoofing | Network Sniffers, and selecting
Wireshark as well as under the Top 10 Security Tools category.
To start capturing traffic, select the Capture tab and Interfaces. You will see the
available interfaces to capture. In my example, I'm going to select eth0 by clicking
on the checkbox next to eth0 and selecting Start.
You may not see traffic if the network interface on which you're
capturing doesn't support promiscuous mode, or because your
OS can't put the interface into promiscuous mode. More on the
different capture modes and troubleshooting can be found at
www.wireshark.org.
[ 188 ]
www.it-ebooks.info
Chapter 5
Wireshark will capture all traffic seen on the wire. Traffic can be filtered by typing
specific items in the filter space or by adjusting the organization of data via the top
tables, such as protocol or destinations.
Wireshark captures a lot of details, so it is important to filter for specific things,
such as parameters for unsecured cookies like http.cookie. For example, Gmail by
default is encrypted; however, you can turn off https and seek out the GX parameter
contained in a http.cookie to identify unsecured Gmail cookies. The following
screenshot shows capturing the cookie from logging into a Wordpress blog:
[ 189 ]
www.it-ebooks.info
Attacking Authentication
Once you capture an unsecured cookie, you must use another tool to inject it into
your browser to complete the session hijacking. Choose the victims cookie, right-
click on the line, and select Copy | Bytes | Printable Text Only. Now, you can paste
this into a Cookie Injector, such as the Firefox plugin Cookie Injector. See Cookie
Injector to complete the session hijacking attack under Firefox plugins.
You must have Greasemonkey and Cookie Injector to copy/paste