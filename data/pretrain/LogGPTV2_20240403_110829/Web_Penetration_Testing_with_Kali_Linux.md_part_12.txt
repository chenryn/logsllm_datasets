### Registry Hives and Credential Extraction
Creddump is a tool capable of extracting LM and NT hashes (protected by SYSKEY), cached domain passwords, and LSA secrets.

### Summary
Host systems, as authorized sources, access web applications. Compromising such an authorized resource can provide a penetration tester with approved access to a targeted web application. This concept is often overlooked during web application penetration testing.

In this chapter, we explore various methods for gaining unauthorized access to host systems, focusing on social engineering, identifying vulnerable hosts, and cracking passwords. There are numerous textbooks available that delve into hacking host systems, which can complement the topics covered in this book. Our focus here is specifically on targeting hosts that access web applications.

The next chapter will cover how hosts authenticate to web applications.

---

### Attacking Authentication
Authentication is the process of verifying one's identity, which may involve confirming the identity of a person, program, or hardware. For example, verifying that Joseph Muniz is a government employee and that his laptop is issued by a government agency. As a penetration tester, it is crucial to be able to gain the trust of a system and bypass security as an authorized entity.

The Certified Information Systems Security Professional (CISSP) curriculum classifies authentication into three types:
- **Something you know**: Such as a PIN or password.
- **Something you have**: Such as a smart card.
- **Something you are**: Such as a fingerprint.

The most common method of identity verification is using something you know, like a password. We covered various ways to crack passwords in Chapter 4, "Client-Side Attacks," while attacking host systems. However, many targets use multifactor authentication, requiring a combination of authentication steps to prove one's identity.

User authentication often involves a username and password combination. To avoid repeatedly entering this information, single sign-on (SSO) was developed. SSO allows a user to authenticate once to a central authority trusted by other websites. The central authority verifies the user's identity, allowing them to access multiple secured systems without repeated prompts. A common trusted authority is a Windows domain controller, which provides authentication for internal users to intranet resources. Compromising a trusted authority or an account with high privileges can grant access to many internal resources.

Government agencies often use Personal Identity Verification (PIV) or Common Access Card (CAC) along with a password to meet the criteria of something the user has and knows. Remote workers may use digital tokens that generate a new number every few seconds, combined with a PIN. High-security physical locations may require fingerprint scanning and a PIN for access. Network access control technology may verify how a user is authenticated into a laptop and seek a hidden certificate to verify the identity of the system and user before providing network resources.

Identifying the method of authentication used by your target during the reconnaissance phase of a penetration test is critical for planning a strategy to bypass that trust.

This chapter focuses on how users and devices authenticate to web applications, with the goal of compromising that trust. We will start by attacking the process of managing authentication sessions, then move on to attacking how data is stored on host systems through cookie management. We will also cover man-in-the-middle attack techniques and identify and exploit weaknesses in how web applications accept authentication data through SQL and cross-site scripting (XSS) attacks.

---

### Chapter 5: Attacking Session Management
Authentication and session management encompass all aspects of handling user authentication and managing active sessions. In web applications, a session is the duration a user spends on a website. Best practices include managing authorized sessions based on how people and devices authenticate and controlling what and how long resources are available during the active session. This makes authentication a key aspect of managing authorized sessions.

A penetration tester aims to identify accounts with high-level privileges and unlimited time to access the web application. Security features like session timeout intervals and SSL certificates were created to mitigate these risks. Tools available in Kali can identify flaws in session management, such as capturing an active session post-logout and using it for another person (a session fixation attack).

Session management attacks can exploit vulnerabilities in applications or how users access and authenticate to those applications. Common methods include cross-site scripting (XSS) and SQL injection attacks, which will be covered later in this chapter. Attackers can also exploit session cookies in web browsers or vulnerabilities in web pages.

#### Clickjacking
Clickjacking is a technique where an attacker tricks a user into clicking something different from what they believe they are clicking. This can reveal confidential information, such as login credentials, or allow an attacker to take control of the victim's computer. Clickjacking typically exploits a web browser security issue or vulnerability using embedded code or script that executes without the victim's knowledge.

For example, a hyperlink might appear to lead to Facebook.com, but actually redirects to www.badfacebook.com when clicked.

Clickjacking can be more sophisticated, involving the embedding of iFrames into a webpage. The content of the iFrame contains data from the target website and is usually placed over a legitimate link, making it difficult to detect.

To create a clickjacking attack, you can use the clickjacking tool by Paul Stone, available at: http://www.contextis.com/research/tools/clickjacking-tool/. This tool works with Firefox 3.6. You can run multiple versions of Firefox on Kali, including Firefox 3.6 or older, to accommodate this tool.

#### Hijacking Web Session Cookies
Cookies are small pieces of data sent from a website and stored on a user's web browser. They are used to verify the user's return to the site and obtain details about their previous activity. Websites like Facebook, Gmail, and WordPress assign cookies to users upon login.

Cookies can track user behavior over long periods and store sensitive information such as passwords and form values. Session hijacking occurs when an attacker captures a session token and injects it into their own browser to gain access to the victim's authenticated session.

There are limitations to session hijacking:
- Stealing cookies is ineffective if the target uses HTTPS and end-to-end encryption. SSLstrip can be used to prevent the target from establishing an HTTPS connection.
- Most cookies expire when the user logs out, which also logs the attacker out. Some mobile apps use non-expiring cookies, making them vulnerable to lifelong access if a valid session token is captured.
- Many websites do not support parallel logins, rendering stolen cookies useless.

#### Web Session Tools
This section covers tools used for penetration testing web sessions. Some tools are not available in Kali 1.0 but can be obtained online.

##### Firefox Plugins
Firefox offers several plugins for injecting stolen cookies into an attacker's browser, such as GreaseMonkey, Cookie Manager, and FireSheep. These can be found in the Firefox plugin marketplace.

- **Firesheep**: A classic tool for auditing web sessions. It acts as a packet sniffer that intercepts unencrypted cookies. Firesheep is officially supported on Windows and MAC, but custom work can make it operational on Linux.
- **Web Developer**: An extension for editing and debugging web pages. It includes a feature to edit cookies.
- **Greasemonkey**: A plugin that allows users to install scripts to modify web page content. It is required for other tools like Cookie Injector.
- **Cookie Injector**: A user script that simplifies the process of manipulating browser cookies. It requires Greasemonkey.
- **Cookies Manager+**: A utility for viewing, editing, and creating new cookies. It shows detailed information and can edit multiple cookies at once.

##### Cookie Cadger
Cookie Cadger is a penetration testing tool for auditing web sessions. It captures and replays HTTP requests, provides live analysis for Wi-Fi and wired networks, and loads PCAP files. It can detect if a user is logged into webpages like WordPress and Facebook. Cookie Cadger is available for download from www.cookiecadger.com.

##### Wireshark
Wireshark is a popular, free, and open-source network protocol analyzer. It is preinstalled in Kali and is ideal for network troubleshooting and capturing session tokens. Wireshark uses a GTK+ widget toolkit and pcap to capture packets. It can be found under Sniffing/Spoofing | Network Sniffers and Top 10 Security Tools.

To start capturing traffic, select the Capture tab and Interfaces, then choose the appropriate interface and start the capture. Filtering for specific items, such as unsecured cookies, is essential due to the volume of captured data.

Once you capture an unsecured cookie, use a tool like the Firefox plugin Cookie Injector to inject it into your browser and complete the session hijacking attack. Ensure you have Greasemonkey and Cookie Injector installed to copy and paste the cookie.

---