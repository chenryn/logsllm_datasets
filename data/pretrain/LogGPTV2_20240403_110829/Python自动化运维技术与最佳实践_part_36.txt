块，结合Saltstack、Ansible或Func向目标业务服务器集群发送执行任务，执行完毕后，对
返回的执行结果做加密/解密处理，最后返回给客户编，整个任务模块分发执行流程结束。
16.3数据库结构设计
16.3.1数据库分析
OManager平台采用了开源数据库MySQL以存储数据，数据库名为OManager，数据库
总共有3张表，表信息说明如下。
口upgrade：系统升级表；
口users：用户表；
user_logs：操作日志表。
---
## Page 293
272第三部分案例篇
16.3.2
数据字典
1）upgrade系统升级表。
段名
数据类型
默认值
允许非空
自动递增
备注
version
char(5)
NO
最新版本号
2）user_logs 操作日志表。
字段名
数据类型
默认值
允许非空
备注
id
int(5)
NO
是
日志ID
user
char(10)
NO
管理员账号
event
char(255)
NO
操作事件
Data
timestamp
CURRENT_TIMESTAMP
NO
操作日期
3）users用户表。
字段名
数据类型
默认值
允许非空
自动递增
备注
admin
(
NO
管理员账号
passwd
char(32)
NO
管理员密码
Privatekey
char(32)
NO
私钥md5
privileges
char(62)
NO
权限角色
16.3.3
数据库模型
考虑到平台的通用性，OManager的数据库结构设计得非常简单，只涉及账号及操作日
志等基础表，平台中服务器分类及清单来源于企业资产库生成的XML文件。数据库中users
表存储了管理员的账号信息；user_logs表存储了管理员的操作日志，表中字段“user”配置
外键，与users 表中的“admin”字段进行关联，upgrade表存储OManager的版本号，系统
数据库模型见图16-4。
sasn
upoade
user_bogs
7 adnin OHAR[20)
9 version CHAR(S)
 idBNT(S)
(ZCO psed e
user OAR(1)
 Priatdkey OHAR(32)
 event CHAR(255)
9 pnvleges OAR(62)
Datatime TMESTAMP
PRIMIRY
Outatine
PRIMARY
USERNID
图16-4系统数据库模型
---
## Page 294
第16章构建桌面版C/S自动化运维平台273
16.4系统环境部署
16.4.1系统环境说明
OManager由wxPython2.8、rpyc-3.2.3、psyco-1.6等开源组件构建。为了便于读者理
解，下面对平台的运行环境、安装部署、开发环境优化等进行详细说明，环境设备角色表
如表16-1所示。
表16-1系统环境说明表
角色
主机名
IP
环境说明
主控端
SN2013-08-020
192.168.1.20
Salhstack |Ansible|Func主控端、rpyc 服务器端
OManagr
DELL-PC
192.168.1.101
wayhon、rpyc客户端
16.4.2系统环境搭建
OManager平台基于多种Python第三方模块实现，包括wxpython、rpyc、MySQL
python、psyco、pywin32等，这些开源组件无论是在开发效率还是运行速度方面都赢得了很
好的口碑，尤其容易上手，可以做到快速开发、快速实现。wxPython官网提供了非常丰富的
demo代码，可以帮助开发人员做到边学边用，下面介绍平台所需模块及功能说明。
 MySQL-python-1.2.4b4.win32-py2.7.exe: Python 访间 MySQL 的 API 模块。
psyco-1.6.win32-py25.exe：Python程序提速模块。
 pyinstaller-2.0.zip：Python 程序打包工具，安装包制作推荐使用 Smart Install Maker。
pywin32-218.win32-py2.7.exe:Windows 系统API 访间库。
rpyc-3.2.3.win32.exe：分布式计算框架。
 wxPython2.8-win32-docs-demos-2.8.12.1.exe : wxPython Demo (可选项)。
 wxPython2.8-win32-unicode-2.8.12.1-py27.exe: Python GUI 形库。
平台重点文件及目录说明见图16-5。
dns
i img
平出数据品录：存奶置文件、服务器生电m文用等
ai incude
yh头文件有独量，绝年开流用则
i Module
平台功能块.c作回录
E numbers
E tmp
文州工具
OM
平世入口可胰行文用
图16-5系统目录结构及说明
---
## Page 295
274第三部分案例篇
16.5系统功能模块设计
16.5.1用户登录模块
OManager平台的登录采用了双重安全校验机制：一种为传统的用户名与密码匹配，另
一种为密钥文件校验方式，实现的原理是在密钥文件中输入任意随机字符串，通过平台自带
的md5sum.exe工具计算出该文件的md5，将生成的md5字符串更新到users（用户表）管理
员账号对应的 Privatekey字段，以root用户的密钥numbers/root.pem为例，使用方法见
图16-6 和图 16-7。
图16-6查看密钥文件md5
aaia管员号pad管员定码
Privatekey Sins
privileges 权a
图16-7数据库存储的密钥文件md5数据
管理员登录时首先获得选择密钥文件的md5，再与数据库中的Privatekey字段进行匹
配，建议由超级管理员提前开设好所有用户的账号信息，包括用户名、密码及密钥。再统一
将密钥文件以人为单位进行发放。验证的实现方法源码如下：
def Check (self,name, password, Privatekey) :
inport nd5
m = md5.nev (passvord)
使用md5 模块计算害码的md5 串
md5pass=n.hexdigest ()
myzow=DBclass ()
创建数据库连接对象（自定义类）
sq1 = *select admin,privileges from users vhere admin=*$s* and
passvd='4s′ \
and Privatekey='$s'"s (name, nd5pass, Privatekey)
参照 MySQL 中的用户书、
密码、窖银进行校检
result = myrow.fetchallq(sql)
return result 
返团结果集
下面是计算密钥文件md5的实现方法，主要用到了hashlib模块：
计算文件md5值，参数iLeNane为实体文作路径：参数exoLudeLine为相除的文本行;
参数 1ncludeLine 为都外包含的行
def md5 (fileName, excludeLLne=**, includeLIne=*") :
n = hashlib.md5 ()
 使用 hash1ib 模状生成个 nd5 hash 对某
:A31
---
## Page 296
第16章构建桌面版C/S自动化运维平台275
(μqx_*ouenatg) uado - p3
打开害销文件
except IOError:
print *Unable to open the file in read
filena
eachLine = fd.readline ()
return
vhile eachLine:
通历害钥文件
排除指定的行
m.update (eachLine)
continue
用update方法对行字持事进行md5加密且不新做更新处理
eachLine = fd.readline ()
m,update (includeLine)
对额外包含的行做更新和加害处理
fd.close ()
return m,hexdigest ()
返因十大进制继果
调用计算文件密钥md5方法：
nd5 (self , Privatekey, GetValue () )
se1f , Privatekey-GetValue ()为用户选得的密伊文伊路径
16.5.2系统配置功能
OManager平台将常用的参数配置化，包括连接数据库、主控端、传输密钥等信息，当
外部环境发生变化时无须做代码变更，简单更新配置即可，提高了平台的易用性，降低使用
门槛，具体是通过ConfigParser模块操作ini文件实现，效果见图16-8。
系比究发：
1024
系院高度：
765
192.168.1.20
主控服师器口：
11511
注时(
01:0
10
开EURL:
数本：
192.168.1.10
非库用产
senmanageruser
123456#a
数报库名：
CMarage
图16-8系统配置功能
---
## Page 297
276第三部分案例篇
手工修改ini文件与界面操作达到的效果是一样的，平台ini文件格式如下：
[ data/config.ini ]
[system]
helght = 765
width = 1024
version = v2014
upversion = 10026
ip = 192.168,1.20
port = 11511
timeout = 10
0T - 629519sx0w
secret_key = ctmj #&amp; Bhrgov_^sj$et89fzanh_o) -= (byt5jmg=e3#foya6u
upgrade_ur1 = http://update domain.com/upgrade
[db]
db_ip = 192.168.1.10
db_user = servsanageruser
db_pass = 123456#abc
xebeuewo - eueuqp
使用ConfigParser模块操作ini配置文件非常方便，通过getO、setO方法来读取与更新
配置文件。读配置源码如下：
self.cf = ConfigParser,ConfigParser ()
创建ConfigParser 对象
self.cf,read (sys ,path [0]+* /data/config.in1*,encoding=*utf8′)
读取配置文件
读章“system”节中所有健佳到指定的交量
self.cf = ConfigParser,ConfigParser ()
self.cf,read (sy8,path [0]+*/data/config.ini*)
self._syswidth= self,ef.get (*systen", *width*)
self._sysheight= self,cf-get (*system", *Height")
self._timeout=self.cf ,get (*system*, *Timeout*)
self._ip=self .cf get ("systen*, "IP")
self._port=self.cf-get ("system", "Port")
self._max_servers=self,cf.get (*system*, *max_servers*)
self._secret_key=self.cf-get (*system",*secret_key*)
self._sysversion= self.cf,get (*systen*, *Version*)
self._sysUpversion= self.cf.get ("systen*, "Upversion*)
self._upgrade_ur1- self,cf get ("oysten*,"upgrade_ur1*)
读家“db”节中所有键值到指定的变量
se1f._db_ip= self,cf.get (*db*, *db_ip*)
self._db_user= self.cf get (*db*, *db_user*)
self._db_pass= self.cf get (*db*, *db_pass*)
self._db_name= self.cf .get (*db", db_nane*)
更新配置也非常简单，将getO方法更换成setO.再指定ini的节、键、值三个元素即
可。下面是更新数据库IP参数的代码，其中self.DB_ip.GetValueO为输人框的内容。
---
## Page 298
第16章构建桌面版C/S自动化运维平台277
self,cf.set(*db*, "db_ip*, self.DB_ip.GetValue ())
16.5.3服务器分类模块
为了让OManager更具通用性，平台的服务器信息依赖企业现有资产库数据，通过平台
规范好的格式生成XML文件，结合Tree与ListBox控件实现功能分类与服务器联动，效果
见图 16-9。
机：2.14LL1
图16-9服务器分类选择
服务器分类的组织形式与OMserver保持一致，即功能分类一业务分类一服务器。
图16-10为服务器类别的XML数据文件，用来描述服务器类别信息。
[ data/ServerOptioninfo.xml ]
_8-1n,=fug0ou9 ,0°1,=90
应用图务器
csse(2ddy/>
B式照务通~/appname)