(cid:4)(cid:3)
(cid:3)2
(cid:3)2
(cid:2)
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)2
(cid:3)2
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:3)
(cid:3)
(cid:2)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:3)
(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)
(cid:3)
(cid:3)
(cid:2)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
8
3
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:4)(cid:3)
(cid:2)
(cid:4)(cid:3)
(cid:3)2
(cid:3)2
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)2
(cid:3)2
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:3)
0
3
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)1
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)2
(cid:3)2
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:3)2
(cid:3)2
(cid:4)(cid:3)1
(cid:4)(cid:3)1
(cid:3)
0
3
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)2
(cid:3)2
(cid:2)
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)2
(cid:3)2
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:3)
(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:2)
(cid:4)(cid:3)
(cid:2)
(cid:4)(cid:3)
(cid:3)2
(cid:3)2
(cid:4)(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)2
(cid:3)2
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:4)(cid:3)
(cid:2)
(cid:2)
(cid:3)
(cid:3)
(cid:3)
(cid:3)
(cid:4)(cid:3)
(cid:4)(cid:3)
(cid:2)
9
9
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:4)(cid:3)1
(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:3)2
(cid:3)2
(cid:2)
(cid:3)
(cid:3)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:2)
(cid:3)2
(cid:3)2
(cid:4)(cid:3)1
(cid:4)(cid:3)1
(cid:3)
15
3
PDF Speciﬁcation Flaws
All exploits are compliant
to the PDF speciﬁcation
Applications’ Implementation Flaws
Attacks improving the stealthiness
of EAA and SSA
UI-Layer 1
SSA
EAA
UI-Layer 2
SSA
EAA
UI-Layer 3
EAA
UI-Layer 1
SSA
EAA
UI-Layer 2
SSA
EAA
UI-Layer 3
EAA
LibreOfﬁce Draw
Master PDF Editor
(cid:2)
(cid:2)
6.4.2.2
5.4.38
x
u
n
i
L
15
7
Applications that are vulnerable (cid:2), max 26
Applications that are limited vulnerability (cid:4)(cid:3), max 26
(cid:2) Vulnerable: Attack is undetectable on the UI Layer.
(cid:4)(cid:3) Limited Vulnerability: Attack is undetectable on the UI
(cid:3) Secure: Attack is clearly detectable on the UI Layer.
WE EVALUATED 26 DIFFERENT PDF APPLICATIONS AGAINST EAA AND SSA. THE APPLICATION IS VULNERABLE (cid:2) IF THE ATTACK IS UNDETECTABLE,
VULNERABILITY (cid:4)(cid:3). WE EVALUATED THE ATTACK SUCCESS ON EACH DIFFERENT UI LAYER. ATTACK DETECTION ON DEEPER UI LAYERS MEANS THAT
THAT IS, IF NO ERROR OR SIGNATURE WARNING IS SHOWN. IF THE APPLICATION SHOWS A GENERIC INFORMATION MESSAGE, WE CALL IT A LIMITED
1LibreOfﬁce does not provide a UI-Layer 3 and attacks can, henceforce, not be detected.
2Every kind of annotation, whether it is allowed or not, leads to an invalid certiﬁcation.
Layer but a general notiﬁcation is shown.
Table IV
11
9
18
4
15
3
11
9
THE ATTACK IS HARDER TO DETECT, BECAUSE THE VICTIM HAS TO INSPECT MULTIPLE APPLICATION PANELS.
improved the stealthiness of the attacks by abusing implemen-
tation ﬂaws, for example, by parsing errors. The results are
depicted in Table IV.
1) Abusing PDF Speciﬁcation Flaws: The middle part of
Table IV shows the results for all 26 PDF applications when
using exploits that abuse PDF speciﬁcation ﬂaws.
UI-Layer 1. The most critical UI Layer from the attacker’s
perspective is UI-Layer 1, because it is the only layer that
automatically displays the signature status by opening the
PDF. On this layer, 15 applications are vulnerable (cid:2) to EAA
and 7 have limited vulnerabilities (cid:3)(cid:4). The SSA attack is
less successful: 8 applications are vulnerable (cid:2) and 3 have
limited vulnerabilities (cid:3)(cid:4). PDF Editor 6 Pro and PDFelement
Pro revealed a notable behavior: whenever an annotation is
added to a certiﬁed document, the signature validation status
is invalid. Although this behavior is not compliant with the
PDF speciﬁcation, it prevents all our attacks.
UI-Layer 2. One could guess that the more profound the UI
Layer is, the more attacks could be detected. Our evaluation
conﬁrms this assumption since most applications detected the
SSA attack on UI-Layer 2, only LibreOfﬁce have limited
vulnerabilities (cid:3)(cid:4). This results from a bug in LibreOfﬁce that
causes no signatures to be displayed in UI-Layer 2.
UI-Layer 3. UI-Layer 3 is only relevant for EAA. The SSA
attack could not be detected on UI-Layer 3, because SSA adds
a signature which does not appear in the UI element showing
PDF annotations. For UI-Layer 3, the EAA attack could be
detected in all cases. The only exception is LibreOfﬁce Draw,
because it does not provide a dedicated panel that lists all PDF
annotations.
2) Abusing Applications’ Implementation Flaws: The right
part of Table IV depicts the results for all 26 PDF application
when using exploits that improve the attacks’ stealthiness by
abusing implementation ﬂaws. In the following section, we
Authorized licensed use limited to: Tsinghua University. Downloaded on February 25,2022 at 12:29:12 UTC from IEEE Xplore.  Restrictions apply. 
101494
compare UI-Layer 1 for speciﬁcation (i.e., the middle part)
with implementation ﬂaws (i.e., the right part).
UI-Layer 1. We could ﬁnd 3 further vulnerable (cid:2) applications
SSA, we could ﬁnd vulnerabilities (cid:2) in 7 further applications:
for EAA: Expert PDF 14, PDF Architect, and SodaPDF. For
Adobe Acrobat Reader DC and Pro 2017 (Windows and
macOS), Perfect PDF 8 Reader and 10 Premium, and Power
PDF Standard.
UI-Layer 2. The attack that leverages implementation ﬂaws
the most is SSA. While the speciﬁcation compliant attacks had
only a few successes, the improved attacks lead to 9 vulnera-
ble (cid:2) and 9 limited vulnerable (cid:3)(cid:4) applications. For EAA, two
further applications are vulnerable (cid:2): Foxit PhantomPDF and
Foxit Reader.
UI-Layer 3. Similarly to SSA on UI-Layer 2, the EAA attack
could be drastically improved on UI-Layer 3 when using
additional implementation ﬂaws. In total, 15 applications were
vulnerable (cid:2) and 3 had limited vulnerabilities (cid:3)(cid:4).
Permission Implementation Analysis. For our evaluation
in Table IV, we used P2 certiﬁed documents for SSA and
P3 certiﬁed documents for EAA. This restriction raises the
question of how permissions are validated in general. Firstly,
the SSA attacks that work for an application on P2 work in
the same way for P3. Secondly, when considering attacks for
lower permission levels, that is, EAA for P2 or P1, respective
SSA for P1, it depends on the application’s implementation of
those permissions. According to the PDF speciﬁcation, these
kinds of attacks should be impossible in those cases. However,
we conducted an analysis of the permission behavior of these
applications. We revealed that 11 of 26 applications revealed
incorrectly implemented permissions, see Appendix A. In
order to analyze how the applications reacted to manipulations
prohibited by the permission levels P1 or P2, annotations,
like stamps (image ﬁles) and free text comments, were placed
within a P2 certiﬁed document. In addition to annotations,
existing forms were ﬁlled out in a P1 certiﬁed document.
For PDF Architect and Soda PDF we have seen the partial
implementation of the permissions. For example, level P1 is
implemented and any subsequent change is penalized with an
invalid certiﬁcation, while no distinction is made between P2
and P3, and annotations are classiﬁed as permitted from P2
onwards. From an attacker’s perspective, this means that for
these 11 applications, the attack classes EAA and SSA can be
executed at lower permission levels.
Additional Findings. For Foxit Reader and Foxit Phan-
tomPDF (Windows and macOS), the implementation of the
individual permissions conformed to the speciﬁcation. How-
ever, we discovered a serious bug that completely overrides
signature and certiﬁcation validation for signed and certiﬁed
documents in P2 and P3. If the order of the incremental
update of body, xref, trailer to xref, trailer, body is swapped
and the xref
table is adjusted according to the new byte
values, the PDF document can be completely changed without
invalidating the certiﬁcation or signature.
VIII. COUNTERMEASURES
We elaborated short-term and long-term countermeasures,
which we explain further in this section.
A. Long-Term Countermeasures: Fixing the PDF Speciﬁcation
Preventing Evil Annotations. With the availability of many
permitted annotations at permission level P3, there is a large
arsenal to manipulate the appearance of the content of a certi-
ﬁed document. A particular risk is posed by the FreeText,
Stamp and Redact annotations, as they allow new content
such as text or images to be inserted into a certiﬁed document.
Even without using the EAA techniques for hiding inserted