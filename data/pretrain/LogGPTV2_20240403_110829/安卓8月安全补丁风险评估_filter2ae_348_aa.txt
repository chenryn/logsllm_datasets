# 安卓8月安全补丁风险评估

## 译文声明
本文为翻译文章，原文作者：张培德、李高坤 @ vulpecker team。译文仅供参考，具体内容及含义请以原文为准。

**作者:** 张培德、李高坤 @ vulpecker team

本月共修复了105个安全漏洞，其中：
- Critical: **13** 个
- High: **79** 个
- Moderate: **13** 个

这些漏洞中，属于AOSP部分的有 **26** 个，驱动和内核部分的有 **79** 个。

下面是与7月份漏洞数量的对比图：

![漏洞分布情况对比图](链接)

## 漏洞详细情况分析整理

### 1. AOSP高风险安全漏洞
AOSP中的漏洞主要集中在`mediaserver`模块，这也是最近安全研究和漏洞挖掘的热点模块。

#### A) `mediaserver`组件中的高风险安全漏洞
以下高风险安全漏洞在`mediaserver`组件中，可以被任意应用触发：
- **CVE-2016-3819, CVE-2016-3820, CVE-2016-3821**: 这三个Critical级别的远程代码执行漏洞分别影响`libstagefright_soft_h264dec.so`, `libnbaio.so`, 和`libstagefright_soft_avcdec.so`。攻击者可以通过特制的媒体文件来攻击手机，在解析媒体文件时导致内存崩溃。由于可能在`mediaserver`进程中发生远程代码执行，因此被评为Critical。
  - **CVE-2016-3819**: h264编码的MPEG4文件构造一个足够大的`picSizeInMbs`，导致在`h264bsdInitDpb`内分配一块足够大的内存，从而引发堆溢出。
  - **CVE-2016-3820**: `libavcodec` H.264解码器在解析MPEG4文件时会导致堆溢出。
  - **CVE-2016-3821**: `MediaPlayer`中的use-after-free漏洞。

- **CVE-2016-3823, CVE-2016-3824, CVE-2016-3825, CVE-2016-3826**: 四个High级别的提权漏洞，分别影响`libOmxVenc.so`, `libstagefright_omx.so`, 和`libaudioflinger.so`。
  - **CVE-2016-3823**: `libOmxVenc.so`中的`omx_video::empty_this_buffer_proxy()`使用`memcpy`函数拷贝数据到`0xdeadbeef`，通过精心构造的数据可以控制`0xdeadbeef`进行提权。
  - **CVE-2016-3824**: `libOmxVenc.so`中的`omx_video::allocate_output_buffer()`会分配一个固定的堆缓冲区，当`OMXNodeInstance::emptyBuffer`用作输出缓冲区计数器时，在调用`CopyToOMX`时会发生堆溢出。
  - **CVE-2016-3825**: `omx_video::allocate_input_buffer()`可以通过精心构造的binder请求分配错误大小的堆内存，导致堆溢出。
  - **CVE-2016-3826**: `PreProcessing.cpp`文件中的`EFFECT_CMD_GET_PARAM`会导致整型溢出，造成堆溢出。

#### B) `libjhead`组件中的高风险安全漏洞
- **CVE-2016-3822**: High级别的远程代码执行漏洞，影响`libjhead.so`。攻击者可以利用特制的文件在当前环境中执行任意代码。该漏洞是由于传递给`libjhead`中的`ProcessExifDir`方法的`Offsetval`长度导致越界写内存。

#### C) 其他受影响的so文件
- `libstagefright_soft_hevcdec.so`, `libcrypto.so`, `libcamera_client.so`, `libstagefright.so`, `libsurfaceflinger.so`, `libwifi-service.so`, `bluetooth.default.so`, `libconscrypt_jni.so`

### 2. 内核高风险安全漏洞

#### A) Critical级别的提权漏洞
- **CVE-2015-2686, CVE-2016-3841, CVE-2016-3857**:
  - **CVE-2015-2686**: 在`net/socket.c`文件中，影响Linux内核3.19.3之前版本。由于`sendto`和`recvfrom`系统调用没有验证数据范围，本地权限用户可以利用`iov_iter`接口的`copy_from_iter`方法进行提权。
  - **CVE-2016-3841**: 特定的内核网络组件会导致use-after-free漏洞。
  - **CVE-2016-3857**: `sys_oabi_epoll_wait`方法没有验证传递的参数。修复方法是直接禁用了OABI支持，并删除了相关代码。

#### B) High级别的提权漏洞
- **CVE-2015-1593, CVE-2016-3672, CVE-2016-2544, CVE-2016-2546, CVE-2014-9904, CVE-2012-6701, CVE-2016-3845, CVE-2016-3843**:
  - **CVE-2015-1593**: Linux内核3.19.1之前的版本中，64位栈随机化特性在处理按位左移时返回值类型不正确，可以被攻击者利用绕过ASLR。
  - **CVE-2016-3672**: `arch/x86/mm/mmap.c`中的`arch_pick_mmap_layout`方法在随机化基地址时存在错误，可以被用来绕过ASLR。
  - **CVE-2016-2544**: `sound/core/seq/seq_queue.c`中的`queue_delete`方法存在race condition，导致use-after-free漏洞，可以通过`ioctl`触发。
  - **CVE-2016-2546**: `sound/core/timer.c`文件（Linux内核4.4.1之前）中，`mutex`类型不正确导致use-after-free漏洞，可以通过精心构造的`ioctl`触发。
  - **CVE-2014-9904**: `snd_compress_check_input`方法中的整形溢出检查会被绕过。
  - **CVE-2012-6701**: `fs/aio.c`文件中的整形溢出漏洞（Linux内核3.4.1之前），可被本地用户触发拒绝服务或其他未发现的影响。
  - **CVE-2016-3845**: 传递到`on_cmd_write`方法的计数变量没有验证。
  - **CVE-2016-3843**: 一些内核开发者使用的子模块在正常发行版中不应该存在。

### 3. 高通和MTK的驱动漏洞

#### A) 高通Wi-Fi驱动中的远程代码执行漏洞
- **CVE-2014-9902**: 高通Wi-Fi驱动模块中的漏洞，可以被远程攻击者利用在内核空间中远程执行代码，可能导致整个设备被完全控制。该漏洞是一个整型溢出漏洞，相关文件最终被编译进设备相关的驱动文件`prima_wlan.ko`（msm8960）或`pronto_wlan.ko`（msm8974、msm8226、msm8610）。

| CVE | References | Severity | Updated kernel versions | Date reported |
|-----|------------|----------|-------------------------|---------------|
| CVE-2014-9902 | ANDROID-28668638 | Critical | 3.4 | Mar 31, 2014 |

#### B) 高通组件提权漏洞
高通组件包括bootloader、camera driver、character Driver、networking、sound driver和video driver等。以下是8月高通组件相关的漏洞列表：

| CVE | References | Severity | Updated kernel versions | Date reported |
|-----|------------|----------|-------------------------|---------------|
| CVE-2014-9863 | ANDROID-28768146 | Critical | 3.4 | Apr 30, 2014 |
| CVE-2014-9864 | ANDROID-28747998 | High | 3.4 | Mar 27, 2014 |
| CVE-2014-9865 | ANDROID-28748271 | High | 3.4 | Mar 27, 2014 |
| CVE-2014-9866 | ANDROID-28747684 | High | 3.4 | Mar 31, 2014 |
| CVE-2014-9867 | ANDROID-28749629 | High | 3.4 | Mar 31, 2014 |
| CVE-2014-9868 | ANDROID-28749721 | High | 3.4 | Mar 31, 2014 |
| CVE-2014-9869 | ANDROID-28749728 | High | 3.4 | Mar 31, 2014 |
| CVE-2014-9870 | ANDROID-28749743 | High | 3.4 | Mar 31, 2014 |
| CVE-2014-9871 | ANDROID-28749803 | High | 3.4 | Mar 31, 2014 |
| CVE-2014-9872 | ANDROID-28750155 | High | 3.4 | Mar 31, 2014 |
| CVE-2014-9873 | ANDROID-28750726 | High | 3.4 | Mar 31, 2014 |
| CVE-2014-9874 | ANDROID-28751152 | High | 3.4, 3.10, 3.18 | Mar 31, 2014 |
| CVE-2014-9875 | ANDROID-28767589 | High | 3.4 | Apr 30, 2014 |
| CVE-2014-9876 | ANDROID-28767796 | High | 3.4, 3.10 | Apr 30, 2014 |
| CVE-2014-9877 | ANDROID-28768281 | High | 3.4 | Apr 30, 2014 |
| CVE-2014-9878 | ANDROID-28769208 | High | 3.4 | Apr 30, 2014 |
| CVE-2014-9879 | ANDROID-28769208 | High | 3.4 | Apr 30, 2014 |

以上是对安卓8月安全补丁的风险评估。希望对您有所帮助。