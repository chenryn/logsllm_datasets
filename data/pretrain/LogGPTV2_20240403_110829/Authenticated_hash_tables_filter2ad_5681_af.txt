In order to perform an actual evaluation of our scheme, we
set ǫ = 0.1, 0.125, 0.3, 0.5 (the RSA tree has 10, 8, 3, 2 levels
respectively) and κ = 1 (each bucket has log n elements).
Table 2 shows the evaluation of all the above measures for
a hash table that contains 100,000,000 elements, where we
vary the value of ǫ, namely the number of levels of the RSA
tree. We can now make the following observations: First, as ǫ
increases, the veriﬁcation time and the update time decrease
since they are proportional to ǫ−1. However, query time in-
creases since the internal nodes of the tree become larger
and more exponentiations have to be performed. Finally, in
terms of communication cost, our system is very eﬃcient
since only at most 1.90KB have to be communicated.
In Figure 2, we can see how query time scales with increas-
ing number of elements in the hash table. Here we observe
that for ǫ = 0.1, the query time scales very eﬃciently and
speciﬁcally, for n = 100, 000, 000 elements stored in the hash
table, the time to produce a proof for an element is about
100ms. Note that in Figure 2 we use the value κ = 1 or the
optimal value κ = opt (see the last paragraph about how
opt is obtained). The query time for κ = opt is about 70 ms.
query time compared with that of [GTH] for various values of ε and κ
250
our scheme (ε = 0.1, κ = 1)
our scheme (ε = 0.1, κ = opt)
[GTH] (ε = 0.1)
our scheme (ε = 0.2, κ = 1)
our scheme (ε = 0.2, κ = opt)
[GTH] (ε = 0.2)
200
)
s
m
(
e
m
i
t
150
100
50
0
0
2
4
6
8
number of elements in the data structure
10
7
x 10
Figure 3: Comparison of query time with [GTH] for
ǫ = 0.1, 0.2.
We next compare our scheme with the scheme of [14], de-
noted [GTH], which uses the RSA accumulator and proves
security using the strong RSA assumption. As shown in Ta-
ble 1, their query time, update authentication information
and update time is O(nǫ) for some constant 0  1/ǫ is shown to be
O (cid:0)nǫ/ logκǫ−1 n(cid:1). An alternative scheme we propose keeps
update cost constant while having O (nǫ/ logκǫ n) query cost.
An open problem of great importance is reducing these
bounds to log n and still keeping all the other complexity
measures constant. Even better, one could ask if there is
a solution for authenticating hash tables and still keeping
all the complexities constant. This also implies a direction
towards studying lower bounds for set-membership authen-
tication (as, e.g., in [10, 33]): given a cryptographic primitive
or authentication model, what is the best we can do in terms
of complexity (and still being provable secure)? This work
suggests that there is a trade-oﬀ between security and com-
plexity which might be a starting point in studying lower
bounds. Finally, it would be interesting to look into how we
can provide with non-amortized results for Theorem 7.
Acknowledgments
This research was supported by the U.S. National Science
Foundation under grants IIS–0713403 and OCI–0724806, by
the Center for Geometric Computing and the Kanellakis
Fellowship at Brown University and by the Center for Al-
gorithmic Game Theory at the University of Aarhus under
an award from the Carlsberg Foundation. The views in this
paper do not necessarily reﬂect the views of the sponsors.
We thank Michael Goodrich, Anna Lysyanskaya, John Sav-
age and Ioannis Vergados for many useful discussions, and
Chris Erway for providing pointers to the NTL library.
7. REFERENCES
[1] G. Ateniese, R. Burns, R. Curtmola, J. Herring,
L. Kissner, Z. Peterson, and D. Song. Provable data
possession at untrusted stores. In Proc. ACM Conf. on
Computer and Communications Security (CCS), pp.
598-609, 2007.
[2] N. Baric and B. Pﬁtzmann. Collision-free
accumulators and fail-stop signature schemes without
trees. In Proc. EUROCRYPT, pp. 480-494, 1997.
[3] J. Benaloh and M. de Mare. One-way accumulators: A
decentralized alternative to digital signatures. In Proc.
EUROCRYPT, pp. 274-285, 1993.
[4] M. Blum, W. Evans, P. Gemmell, S. Kannan, and
M. Naor. Checking the correctness of memories. In
Proc.IEEE Symp. on Foundations of Computer
Science (FOCS), pp. 90-99, 1991.
[5] A. Buldas, P. Laud, and H. Lipmaa. Accountable
certiﬁcate management using undeniable attestations.
In Proc. ACM Conf. on Computer and
Communications Security (CCS), pp. 9-18, 2000.
[6] J. Camenisch and A. Lysyanskaya. Dynamic
accumulators and application to eﬃcient revocation of
anonymous credentials. In Proc. CRYPTO, pp. 61-76,
2002.
[7] I. L. Carter and M. N. Wegman. Universal classes of
hash functions. In Proc. ACM Symp. on Theory of
Computing (STOC), pp. 106-112, 1977.
[8] T. H. Cormen, C. E. Leiserson, R. L. Rivest, and
C. Stein. Introduction to Algorithms. MIT Press,
Cambridge, MA, 2nd edition, 2001.
[9] M. Dietzfelbinger, A. Karlin, K. Mehlhorn, F. Meyer
auf der Heide, H. Rohnert, and R. E. Tarjan. Dynamic
perfect hashing: upper and lower bounds. SIAM J.
Comput., 23:738-761, 1994.
[10] C. Dwork, M. Naor, G. N. Rothblum, and
V. Vaikuntanathan. How eﬃcient can memory
checking be? Manuscript, 2008.
[11] R. Gennaro, S. Halevi, and T. Rabin. Secure
hash-and-sign signatures without the random oracle.
In Proc. EUROCRYPT, pp. 123-139, 1999.
[12] M. T. Goodrich, C. Papamanthou, and R. Tamassia.
On the cost of persistence and authentication in skip
lists. In Proc. Workshop on Experimental Algorithms
(WEA), pp. 94-107, 2007.
[13] M. T. Goodrich, C. Papamanthou, R. Tamassia, and
N. Triandopoulos. Athos: Eﬃcient authentication of
outsourced ﬁle systems. In Proc. Information Security
Conf. (ISC), pp. 80-96, 2008.
[14] M. T. Goodrich, R. Tamassia, and J. Hasic. An
eﬃcient dynamic and distributed cryptographic
accumulator. In Proc. Information Security Conf.
(ISC), pp. 372-388, 2002.
[15] M. T. Goodrich, R. Tamassia, and A. Schwerin.
Implementation of an authenticated dictionary with
skip lists and commutative hashing. In Proc. DARPA
Information Survivability Conference and Exposition
II (DISCEX II), pp 68-82, 2001.
[16] M. T. Goodrich, R. Tamassia, and N. Triandopoulos.
Super-eﬃcient veriﬁcation of dynamic outsourced
databases. In Proc. CT-RSA, pp. 407-424, 2008.
[17] M. T. Goodrich, R. Tamassia, N. Triandopoulos, and
R. Cohen. Authenticated data structures for graph
and geometric searching. In Proc. CT-RSA, pp.
295-313, 2003.
[18] A. Hutﬂesz, H.-W. Six, and P. Widmayer. Globally
order preserving multidimensional linear hashing. In
Proc. IEEE Int. Conf. on Data Engineering (ICDE),
pp. 572-579, 1988.
[19] C. M. Kenyon and J. S. Vitter. Maximum queue size
and hashing with lazy deletion. Algorithmica,
6:597–619, 1991.
[20] J. Li, N. Li, and R. Xue. Universal accumulators with
eﬃcient nonmembership proofs. In Proc. Applied
Cryptography and Network Security (ACNS), pp.
253-269, 2007.
[21] N. Linial and O. Sasson. Non-expansive hashing. In
Proc. ACM Symp. on Theory of Computing (STOC),
pp. 509-517, 1996.
[22] C. Martel, G. Nuckolls, P. Devanbu, M. Gertz,
A. Kwong, and S. G. Stubblebine. A general model for
authenticated data structures. Algorithmica,
39(1):21–41, 2004.
[23] R. C. Merkle. A certiﬁed digital signature. In Proc.
CRYPTO, pp. 218–238, 1989.
[24] J. K. Mullin. Spiral storage: Eﬃcient dynamic hashing
with constant-performance. Computer J., 28:330–334,
1985.
[25] M. Naor and K. Nissim. Certiﬁcate revocation and
certiﬁcate update. In Proc. USENIX Security
Symposium, pp. 217-228, 1998.
[26] L. Nguyen. Accumulators from bilinear pairings and
applications. In Proc. CT-RSA, pp. 275-292, 2005.
[27] G. Nuckolls. Veriﬁed query results from hybrid
authentication trees. In Proc. Data and Applications
Security (DBSec), pages 84–98, 2005.
[28] C. Papamanthou and R. Tamassia. Time and space
eﬃcient algorithms for two-party authenticated data
structures. In Proc. Int. Conf. on Information and
Communications Security (ICICS), pp. 1-15, 2007.
[29] T. Sander. Eﬃcient accumulators without trapdoor
(Extended abstract). In Proc. Int. Conf. on
Information and Communications Security (ICICS),
pp. 252-262, 1999.
[30] T. Sander, A. Ta-Shma, and M. Yung. Blind,
auditable membership proofs. In Proc. Financial
Cryptography (FC), pp. 53-71, 2000.
[31] V. Shoup. NTL: A library for doing number theory.
http://www.shoup.net/ntl/.
[32] R. Tamassia. Authenticated data structures. In Proc.
European Symp. on Algorithms (ESA), pp. 2-5, 2003.
[33] R. Tamassia and N. Triandopoulos. Computational
bounds on hierarchical data processing with
applications to information security. In Proc. Int.
Colloquium on Automata, Languages and
Programming (ICALP), pp. 153-165, 2005.
[34] R. Tamassia and N. Triandopoulos. Eﬃcient content
authentication in peer-to-peer networks. In Proc.
Applied Cryptography and Network Security (ACNS),
pp. 354-372, 2007.
[35] P. Wang, H. Wang, and J. Pieprzyk. A new dynamic
accumulator for batch updates. In Proc. Int. Conf. on
Information and Communications Security (ICICS),
pp. 98-112, 2007.