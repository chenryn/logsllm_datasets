AppendixB-TakeAways 196
Remote Code Execution
Reading is a big part of successful hacking and that includes reading about
software vulnerabilities and Common Vulnerabilities and Exposures (CVE Iden-
tifiers).Knowingaboutpastvulnerabilitiescanhelpyouwhenyoucomeacross
sitesthathaven’tkeptupwithsecurityupdates.Inthiscase,Yahoohadpatched
theserverbutitwasdoneincorrectly(Icouldn’tfindanexplanationofwhatthat
meant). As a result, knowing about the ImageMagick vulnerability allowed Ben
tospecificallytargetthatsoftware,whichresultedina$2000reward.
Whilenotalwaysjawdroppingandexciting,performingproperreconnaissance
can prove valuable. Here, Michiel found a vulnerability sitting in the open
since April 6, 2014 simply by running Gitrob on the publicly accessible Angolia
Facebook-Searchrepository.Ataskthatcanbestartedandlefttorunwhileyou
continue to search and hack on other targets, coming back to it to review the
findingsonceit’scomplete.
Working on this vulnerability was a lot of fun. The initial stack trace was a red
flag that something was wrong and like some other vulnerabilities detailed in
thebook,wherethereissmokethere’sfire.WhileJamesKettle’sblogpostdidin
factincludethemaliciouspayloadtobeused,Ioverlookedit.However,thatgave
metheopportunitytolearnandgothroughtheexerciseofreadingtheSmarty
documentation. Doing so led me to the reserved variables and the {php} tag to
executemyowncode.
Memory
Buffer Overflows are an old, well known vulnerability but still common when
dealing with applications that manage their own memory, particularly C and
C++. If you find out that you are dealing with a web application based on the C
language(ofwhichPHPiswrittenin),bufferoverflowsareadistinctpossibility.
However, if you’re just starting out, it’s probably more worth your time to find
simplerinjectionrelatedvulnerabilitiesandcomebacktoBufferOverflowswhen
youaremoreexperienced.
AppendixB-TakeAways 197
We’ve now see examples of two functions which implemented incorrectly are
highly susceptible to Buffer Overflows, memcpy and strcpy. If we know a site
or application is reliant on C or C++, it’s possible to search through source
code libraries for that language (use something like grep) to find incorrect
implementations.
The key will be to find implementations that pass a fixed length variable as the
third parameter to either function, corresponding to the size of the data to be
allocatedwhenthedatabeingcopiedisinfactofavariablelength.
However,asmentionedabove,ifyouarejuststartingout,itmaybemoreworth
your time to forgo searching for these types of vulnerabilities, coming back to
themwhenyouaremorecomfortablewithwhitehathacking.
This is an example of a very complex vulnerability. While it bordered on being
too technical for the purpose of this book, I included it to demonstrate the
similarities with what we have already learned. When we break this down, this
vulnerabilitywasalsorelatedtoamistakeinCcodeimplementationassociated
withmemorymanagement,specificallycopyingmemory.Again,ifyouaregoing
tostartdigginginClevelprogramming,startlookingfortheareaswheredatais
beingcopiedfromonememorylocationtoanother.
Just like Buffer Overflows, Memory Corruption is an old but still common
vulnerability when dealing with applications that manage their own memory,
particularlyCandC++.Ifyoufindoutthatyouaredealingwithawebapplication
basedontheClanguage(ofwhichPHPiswrittenin),beonthelookupforways
thatmemorycanbemanipulated.However,again,ifyou’rejuststartingout,it’s
probably more worth your time to find simpler injection related vulnerabilities
andcomebacktoMemoryCorruptionwhenyouaremoreexperience.
Sub Domain Takeover
DNSentriespresentanewanduniqueopportunitytoexposevulnerabilities.Use
KnockPyinanattempttoverifytheexistenceofsubdomainsandthenconfirm
they are pointing to valid resources paying particular attention to third party
service providers like AWS, Github, Zendesk, etc. - services which allow you to
registercustomizedURLs.
PAYATTENTION!ThisvulnerabilitywasfoundFebruary2016andwasn’tcomplex
atall.Successfulbughuntingrequireskeenobservation.
AppendixB-TakeAways 198
As described, there are multiple takeaways here. First, start using crt.sh to
discover sub domains. It looks to be a gold mine of additional targets within a
program.Secondly,subdomaintakeoversaren’tjustlimitedtoexternalservices
like S3, Heroku, etc. Here, Sean took the extra step of actually registered the
expired domain Shopify was pointing to. If he was malicious, he could have
copied the Shopify sign in page on the domain and began harvesting user
credentials.
Again, we have a few take aways here. First, when searching for sub domain
takeovers,beonthelookoutfor*.global.ssl.fastly.netURLsasitturnsoutthat
Fastly is another web service which allows users to register names in a global
namespace.Whendomainsarevulnerable,Fastlydisplaysamessagealongthe
linesof“Fastlydomaindoesnotexist”.
Second, always go the extra step to confirm your vulnerabilities. In this case,
Ebrietas looked up the SSL certificate information to confirm it was owned by
Snapchat before reporting. Lastly, the implications of a take over aren’t always
immediately apparent. In this case, Ebrietas didn’t think this service was used
until he saw the traffic coming in. If you find a takeover vulnerability, leave
the service up for some time to see if any requests come through. This might
help you determine the severity of the issue to explain the vulnerability to the
program you’re reporting to which is one of the components of an effective
reportasdiscussedintheVulnerabilityReportschapter.
Iincludedthisexamplefortworeasons;first,whenFranstriedtoclaimthesub
domain on Modulus, the exact match was taken. However, rather than give up,
he tried claiming the wild card domain. While I can’t speak for other hackers, I
don’t know if I would have tried that if I was in his shoes. So, going forward, if
you find yourself in the same position, check to see if the third party services
allowsforwildcardclaiming.
Secondly, Frans actually claimed the sub domain. While this may be obvious to
some, I want to reiterate the importance of proving the vulnerability you are
reporting. In this case, Frans took the extra step to ensure he could claim the
sub domain and host his own content. This is what differentiates great hackers
from good hackers, putting in that extra effort to ensure you aren’t reporting
falsepositives.
AppendixB-TakeAways 199
Thisvulnerabilityisanotherexampleofhowinvaluableitcanbetodigintothird
partyservices,libraries,etc.thatsitesareusing.Byreadingthedocumentation,
learning about SendGrid and understanding the services they provide, Ura-
nium238 found this issue. Additionally, this example demonstrates that when
looking for takeover opportunities, be on the lookout for functionality which
allowsyoutoclaimsubdomains.
Race Conditions
Raceconditionsareaninterestingvulnerabilityvectorthatcansometimesexist
where applications are dealing with some type of balance, like money, credits,
etc.Findingthevulnerabilitydoesn’talwayshappenonthefirstattemptandmay
requiringmakingseveralrepeatedsimultaneousrequests.Here,Egormadesix
requestsbeforebeingsuccessfulandthenwentandmadeapurchasetoconfirm
theproofofconcept.
Findingandexploitingthisvulnerabilitywasactuallyprettyfun,amini-competi-
tion with myself and the HackerOne platform since I had to click the buttons
so fast. But when trying to identify similar vulnerabilities, be on the look up
for situations that might fall under the steps I described above, where there’s
adatabaselookup,codinglogicandadatabaseupdate.Thisscenariomaylend
itselftoaraceconditionvulnerability.
Additionally, look for ways to automate your testing. Luckily for me, I was able
toachievethiswithoutmanyattemptsbutIprobablywouldhavegivenupafter
4or5giventheneedtoremoveusersandresendinvitesforeverytest.
Insecure Direct Object References
If you’re looking for authentication based vulnerabilities, be on the lookout for
wherecredentialsarebeingpassedtoasite.Whilethisvulnerabilitywascaught
bylookingatthepagesourcecode,youalsocouldhavenoticedtheinformation
beingpassedwhenusingaProxyinterceptor.
Ifyoudofindsometypeofcredentialsbeingpassed,takenotewhentheydonot
lookencryptedandtrytoplaywiththem.Inthiscase,thepinwasjustCRXXXXXX
whilethepasswordwas0e552ae717a1d08cb134f132clearlythePINwasnot
encryptedwhilethepasswordwas.Unencryptedvaluesrepresentaniceareato
startplayingwith.
AppendixB-TakeAways 200
Testing for IDORs requires keen observation as well as skill. When reviewing
HTTP requests for vulnerabilities, be on the lookout for account identifiers like
the administration_id in the above. While the field name, administration_id
is a little misleading compared to it being called account_id, being a plain
integerwasaredflagthatIshouldcheckitout.Additionally,giventhelengthof
the parameter, it would have been difficult to exploit the vulnerability without
making a bunch of network noise, having to repeat requests searching for the
rightid.Ifyoufindsimilarvulnerabilities,toimproveyourreport,alwaysbeon
thelookoutforHTTPresponses,urls,etc.thatdiscloseids.Luckilyforme,theid
IneededwasincludedintheaccountURL.
While similar to the Moneybird example above, in that both required abusing
leaked organization ids to elevate privileges, this example is great because it
demonstrates the severity of being able to attack users remotely, with zero
interaction on their behalf and the need to demonstrate a full exploit. Initially,
Akhil did not include or demonstrate the full account takeover and based on
Twitter’s response to his mentioning it (i.e., asking for details and full steps to
do so), they may not have considered that impact when initially resolving the
vulnerability.So,whenyoureport,makesuretofullyconsideranddetailthefull
impactofthevulnerabilityyouarereporting,includingstepstoreproduceit.
OAuth
When looking for vulnerabilities, consider how stale assets can be exploited.
Whenyou’rehacking,beonthelookoutforapplicationchangeswhichmayleave
resourcesliketheseexposed.ThisexamplefromPhilippeisawesomebecauseit
startedwithhimidentifyinganendgoal,stealingOAuthtokens,andthenfinding
themeanstodoso.
Additionally, if you liked this example, you should check out Philippe’s Blog1
(included in the Resources Chapter) and the Hacking Pro Tips Interview he sat
downwithmetodo-heprovidesalotofgreatadvice!.
While a little old, this vulnerability demonstrates how OAuth redirect_uri vali-
dations can be misconfigured by resource servers. In this case, it was Slack’s
implementation of OAuth which permitted an attacker to add domain suffixes
andstealtokens.
1https://www.philippeharewood.com
AppendixB-TakeAways 201
Thereareafewtakeawayshere.First,OAuthvulnerabilitiesaren’talwaysabout
stealing tokens. Keep an eye out for API requests protected by OAuth which
aren’tsendingorvalidatingthetoken(i.e.,tryremovingtheOAuthtokenheader
if there’s an identifier, like the sheets ID, in the URL). Secondly, it’s important
to recognize and understand how browsers interpret Javascript and JSON. This
vulnerability was partly made possible since Google was returning a valid
JavascriptobjectwhichcontainedJSON.Lastly,whileit’sacommonthemeinthe
book, read the documentation. Google’s documentation about responses was
key to developing a working proof of concept which sent the spreadsheet data
toaremoteserver.
Application Logic Vulnerabilities
Therearetwokeytakeawayshere.First,noteverythingisaboutinjectingcode,
HTML,etc.Alwaysremembertouseaproxyandwatchwhatinformationisbeing
passedtoasiteandplaywithittoseewhathappens.Inthiscase,allittookwas
removing POST parameters to bypass security checks. Secondly, again, not all
attacksarebasedonHTMLwebpages.APIendpointsalwayspresentapotential
areaforvulnerabilitysomakesureyouconsiderandtestboth.
Though a short description, the takeaway here can’t be overstated, be on the
lookoutfornewfunctionality!.Whenasiteimplementsnewfunctionality,it’s
fresh meat. New functionality represents the opportunity to test new code and
search for bugs. This was the same for the Shopify Twitter CSRF and Facebook
XSSvulnerabilities.
Tomakethemostofthis,it’sagoodideatofamiliarizeyourselfwithcompanies
and subscribe to company blogs, newsletters, etc. so you’re notified when
somethingisreleased.Thentestaway.
Whenyou’rescopingoutapotentialtarget,ensuretonoteallthedifferenttools,
includingwebservices,theyappeartobeusing.Eachservice,software,OS,etc.
youcanfindrevealsapotentialnewattackvector.Additionally,itisagoodidea
to familiarize yourself with popular web tools like AWS S3, Zendesk, Rails, etc.
thatmanysitesuse.
AppendixB-TakeAways 202
Thereareamultipletakeawaysfromthis:
1. Don’t underestimate your ingenuity and the potential for errors from
developers. HackerOne is an awesome team of awesome security re-
searchers.Butpeoplemakemistakes.Challengeyourassumptions.
2. Don’t give up after the first attempt. When I found this, browsing each
bucketwasn’tavailableandIalmostwalkedaway.ButthenItriedtowrite
afileanditworked.
3. It’sallabouttheknowledge.Ifyouknowwhattypesofvulnerabilitiesexist,
youknowwhattolookforandtest.Buyingthisbookwasagreatfirststep.
4. I’ve said it before, I’ll say it again, an attack surface is more than the
website,it’salsotheservicesthecompanyisusing.Thinkoutsidethebox.
Two factor authentication is a tricky system to get right. When you notice a site
is using it, you’ll want to fully test out all functionality including token lifetime,
maximumnumberofattempts,reusingexpiredtokens,likelihoodofguessinga
token,etc.
Whenhacking,consideracompany’sentireinfrastructurefairgameunlessthey
tellyouit’soutofscope.Whilethisreportdidn’tpayabounty,IknowthatPatrik
hasemployedsimilartechniquestofindsomesignificantfourfigurepayouts.
Additionally, you’ll notice there was 260,000 potential addresses here, which
would have been impossible to scan manually. When performing this type of
testing, automation is hugely important and something that should be em-
ployed.
Javascript source code provides you with actual source code from a target you
can explore. This is great because your testing goes from blackbox, having no
idea what the back end is doing, to whitebox (though not entirely) where you
have insight into how code is being executed. This doesn’t mean you have to
walkthrougheveryline,thePOSTcallinthiscasewasfoundonline20570with
asimplesearchforPOST.
Subdomainsandbroadernetworkconfigurationsrepresentgreatpotentialfor
hacking.Ifyounoticethataprogramisincluding*.SITE.cominit’sscope,tryto
findsubdomainsthatmaybevulnerableratherthangoingafterthelowhanging
fruitonthemainsitewhicheveryonemaybesearchingfor.It’salsoworthyour
timetofamiliarizeyourselfwithtoolslikeNmap,eyewitness,knockpy,etc.which
willhelpyoufollowinAndy’sshoes.
AppendixB-TakeAways 203
Iincludedthisexamplebecauseitdemonstratestwothings-first,whileitdoes
reducetheimpactofthevulnerability,therearetimesthatreportingabugwhich
assumes an attacker knows a victim’s user name and password is acceptable
providedyoucanexplainwhatthevulnerabilityisanddemonstrateit’sseverity.
Secondly,whentestingforapplicationlogicrelatedvulnerabilities,considerthe
different ways an application could be accessed and whether security related
behaviours are consistent across platforms. In this case, it was browsers and
mobileapplicationsbutitalsocouldincludethirdpartyappsorAPIendpoints.
27. Appendix A - Web Hacking 101
Changelog
November 18, 2016
Added Uber sub domain takeover example
Added Google Sheets OAuth example
November 11, 2016
Added new IDOR examples, Moneybird and Twitter
Added new Application Logic example from Twitter
Added new OAuth Chapter and an example
Moved Philippe’s Facebook OAuth example from Subdomain Takeovers to
OAuth
November 6, 2016
Re-ordered chapters and added Race Conditions and IDOR as their own
chapters
Added GitRob and RaceTheWeb in the Tools chapter
Added new Race Conditions example from HackerOne, accepting invites
October 3, 2016
Added two new Remote Code Execution vulnerabilities
Updated XXE chapter to clarify Facebook example
AppendixA-WebHacking101Changelog 205
Various typo fixes
September 21, 2016
Added new sub domain take over example, #6 - api.legalrobot.com
Added Appendix B of Take Aways
August 23, 2016
Added new sub domain take over example, #5 - Snapcchat fastly.sc takeover
Added new tools: XSSHunter, Censys, OnlineHashCrack, Ysoserial
Added new cheatsheet for AngularJS, including the 1.5.7 sandbox escape