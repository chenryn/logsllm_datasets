图中的输出面板被配置成同时绘制高度 x 和速度 ![](/data/attachment/album/202302/22/111442gasjsa1mhw2kajea.png)。积分器在左下方，由于这是二阶微分方程，所以我们需要两个积分器。电机驱动顶部标注为 t 的传动轴。（有趣的是，布什将这些水平传动轴称为“总线”。）
现在原理图中还剩下两个部件没有解释了。里边标记了 k 的方框是 乘法器   multiplier ， k 是比例常数。它获取由 ![](/data/attachment/album/202302/22/111510ffmav6vvzpw1kw2t.png)标记的传动轴的转动量，并通过齿轮组进行放缩。用 ∑ 标记的方框是 加法器   adder 。它通过巧妙的齿轮组合将两个传动轴的的转动叠加起来驱动第三个传动轴。我们的方程中涉及了求两项之和，所以需要引入加法器。这些额外组件的引入确保了微分分析仪有足够的灵活性来模拟由各种各样的项和系数组成的方程。
我发现以慢放的方式来推演电机启动时的级联因果过程对于理解微分分析仪的原理很有帮助。电机启动后立即驱动传动轴 t 匀速旋转。这样我们就有了时间的概念。这个传动轴有三个作用，分别由连接其上的三个竖直传动轴表示：它驱动了两个积分器的转盘的转动，同时带动输出面板的支架让绘图笔作图。
如果积分器的转轮被放置在转盘中心，那么传动轴 t 就不会带动其它传动轴转动。积分器的转盘会转动，但是放置在转盘中心的转轮不会被带动。这时输出图像将会是一条平坦的直线。出现这种情况是因为我们没有明确指定问题的初始条件。在上面的 Python 程序中，我们需要以常量或函数参数的形式用到网球的初始速度。在启动机器之前，我们通过将两个积分器的转盘调整到合适的位置来指定速度和加速度的初始值。
设置好这些之后，传动轴 t 的转动将会传导到整个系统之中。从物理上来说，许多部件会同时开始转动。但是我们可以认为转动首先传导到积分器 II，然后与基于 g 计算得到的加速度表达式求积分得到球的速度 ![](/data/attachment/album/202302/22/111615oumasuh5mmncfui5.png)。速度又反过来作为积分器 I 的输入，推动它的转盘让输出转轮以速率 ![](/data/attachment/album/202302/22/111637sw9j5ua44jwz9xc8.png)转动。积分器 I 的输出作为最终结果将会被直接导向到输出面板上。
前面我有意避开了一个令人困惑的细节，那就是机器里有一个怪圈。积分器 II 以传动轴 ![](/data/attachment/album/202302/22/111709sbxng4bbrqooww8o.png)为输入，但是该传动轴的转动又部分决定于积分器 II 的输出本身。这可能快把你绕吐了，但在物理上这并没有任何问题——因为所有部部件都是一同转动的。出现这种怪圈并没什么奇怪的，因为在用微分方程在描述某函数的变化率时，也经常会用该函数的函数的形式。（在这个例子中，加速度，即速度的变化率，取决于于速度。）
在将所有东西都正确配置好后，机器会输出球的高度和速度随时间变化的函数图像。这个图像是纸质的。用我们的现代数字化思维来看，这可能有点难以理解。画在纸上的函数图像能干什么？微分分析仪确实不能魔术般地给出解的简洁数学表达式，这是事实。但也请记住一点，很多的微分方程根本没有简洁的解析解。纸上的函数图像与前面模拟球下落的 Python 程序包含相同的信息：某时刻球的位置。它可以回答任何关于该问题的实际问题。
微分分析仪简直酷到爆。它虽然结构复杂，但是本质上只是一些传动轴和齿轮外的组合。要理解它的运作过程，你不必是电气工程师或者会制造芯片。然而它确实可以解微积分！它能够求解出那些靠你自己永远无法解决的微分方程问题。它证明建造计算机器的关键材料不是硅而是人类的创造力。
### 杀人
人类的创造力既能为善，也能为恶。正如我提到的，微分分析仪在历史上最知名的应用是为美国陆军计算火炮射表。鉴于二战是一场“正义的战争”，这是最好的结果。但是也不能忽视微分分析仪增强了大口径火炮的杀伤效能。火炮的确杀死了很多人。如果维基百科可信的话，在二战中死于炮火的士兵比被轻武器杀死的更多。
我们稍后再回到道德讨论上来，先快速解释一下为什么计算射表这么困难，以及微分分析仪是怎么帮助计算射表的。这是将微分分析仪应用于实际问题的很好的例子。射表能告诉炮手在射击某个距离外的目标时需要将炮口上抬多高。编制射表的一种方法是在不同的仰角下发射该火炮，并将结果记录下来。这种方法被用在靶场，比如位于马里兰的阿伯丁试验场。但是单纯通过实验观察的方式来编制射表即昂贵又耗时。在考虑到如天气状况或不同弹丸重量等其它因素时，需要进行的射击次数将会随组合爆增到无法实施的程度。所以基于少量观测数据建立数学模型，再基于该模型来填充出完整的射表是一个更好的方法。
我不想太深入讨论这些数学理论，它们实在太难了，我也不懂。但是你应该也想到了，支配飞行中的炮弹和向上抛出的网球运动的物理规律并没有什么不同。由于计算精度的需要，我们使用的微分方程不得不偏离其理想化的形式，并迅速变得面目狰狞起来。即便是最早的精确弹道理论中的公式，除其它因素外，还考虑了弹丸的重量、直径、形状、主风、海拔、大气密度以及地球自转    [1] 。
虽然关于射表计算的方程很复杂，但它们跟前面的微分方程一样，都可以通过微分分析仪数值求解。1935 年微分分析仪被阿伯丁试验场用于求解弹道方程。这显著加快了计算射表的速度。   [2]  然而，二战期间对于射表的需求增长太快了，以至于美国陆军计算射表的速度难以满足运往欧洲战场的武器装备的配套需求。这最终导致陆军资助了宾夕法尼亚大学的 ENIAC 项目。这促成了世界上第一台数字计算机的诞生。（LCTT 译注：严格来说 ENIAC 是第二台电子数字计算机。第一台电子计算机是 阿塔纳索夫-贝瑞计算机   Atanasoff–Berry Computer ，简称 ABC 计算机。）ENIAC 能够通过重新布线运行任意程序。但建造它的主要是为了以数倍于微分分析仪的速度来计算射表。
鉴于在微分分析仪之外，射表计算问题极大地推动了早期计算领域的发展，专门挑出微分分析仪的道德问题也许是不公正的。微分分析仪并没有局限于军事领域的应用，在二战期间和二战后的很大一段时间里，由于美国军方投入的大量的拨款，整个计算领域得到了发展。
总之，我认为微分分析仪更有趣的遗产是它告诉了我们计算的本质。我惊叹于于微分分析仪能做到这么多事情，我猜你也一样。我们很容易落入这样的思维陷阱：将计算看作是由快速数字电路实现的领域。事实上，计算是更抽象的过程，电子数字电路只是实现计算的典型手段罢了。在关于微分分析仪的论文中，布什说他的发明不过是在“运用复杂机械结构来类比复杂的推理过程这一影响深远的计划”上的微小贡献。他的总结很贴切。
---
1. Alan Gluchoff. “Artillerymen and Mathematicians: Forest Ray Moulton and Changes in American Exterior Ballistics, 1885-1934.” Historia Mathematica, vol. 38, no. 4, 2011, pp. 506–547., . [↩︎](#fnref1)
2. Karl Kempf. “Electronic Computers within the Ordnance Corps,” 1961, accessed April 6, 2020, . [↩︎](#fnref2)
---
via: 
作者：[Two-Bit History](https://twobithistory.org) 选题：[lujun9972](https://github.com/lujun9972) 译者：[toknow-gh](https://github.com/toknow-gh) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出