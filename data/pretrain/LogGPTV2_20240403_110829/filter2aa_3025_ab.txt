### 监控网络的入站和出站通信

对网关设备的成功攻击不仅会暴露网络的入站和出站通信，还会为攻击者提供进一步攻击之前未暴露的内部系统的机会。

### 分析目标设备

从分析目标设备的固件入手是一个很好的选择。制造商提供的固件更新文件中包含了大量的信息。虽然本文不详细讨论解包和分析固件的过程，但Craig Heffner在其网站上提供了详细的工具和技术说明。下载并解包固件更新文件后，我们可以验证该设备运行的是基于Linux的操作系统（见图1）。

**图1**：在供应商的固件更新文件中验证Linux内核

任何运行Linux的设备都是理想的分析对象，因为有许多现成的工具和技术可以用于处理Linux系统。通常，仅仅拥有固件副本就足以发现漏洞并开发针对这些漏洞的有效利用方法。然而，能够直接与硬件交互将大大有助于分析过程。对于WNDR3700，通过连接一个UART头，我们可以通过串行控制台应用程序（如minicom）与正在运行的设备进行交互。本文不会详细介绍硬件修改的具体细节，相关内容可以在各种爱好者网站和论坛上找到。但是，终端访问对于我所描述的调查是必不可少的。

除了串行端口外，WNDR3700v3还具有另一个有助于分析的功能：USB端口。该设备设计用作网络附加存储（NAS）设备，当插入USB存储设备时，它会自动挂载。这使得向设备加载动态分析工具变得容易，并且可以从设备复制可执行文件、库、配置文件和数据库文件以进行离线分析。尽管DLNA服务器功能需要外部USB存储来提供数字媒体服务，但本文所述的漏洞并不需要。即使用户未连接USB存储设备，易受攻击的DLNA服务器功能仍会在设备上运行。

### 目标应用：MiniDLNA服务器

WNDR3700固件中提供DLNA功能的应用程序称为“minidlna.exe”。在解包的固件中可以找到minidlna可执行文件（见图2）。使用`strings`命令并grep“Version”可以确认此版本为1.0.18（见图3）。

**图2**：在解包的固件中定位minidlna.exe

**图3**：验证供应商固件更新文件中的MiniDLNA版本

Google搜索显示，Netgear已在Sourceforge.com上发布了开源项目MiniDLNA。这是一个潜在的好消息，源代码可以显著减少分析目标应用程序所需的时间和精力。

### 分析MiniDLNA

#### 漏洞1：SQL注入

下载并解包MiniDLNA 1.0.18的相应源代码后，有一些易于识别的指标可能指向漏洞。通过grep搜索，我们可以找到有价值的证据（见图4）。

**图4**：搜索SQL注入漏洞候选

为了寻找潜在的SQL注入点，我们grep了使用不当转义字符串（`%s`格式字符）构建的SQL查询。MiniDLNA源代码中有21行匹配此模式，上述示例具有代表性。此外，由于使用了无界的`sprintf()`，这里也有可能存在缓冲区溢出。

让我们看一下upnphttp.c文件第1174行，其中ALBUM_ART由ID字段查询（见图5）。

**图5**：MiniDLNA源代码中按ID字段查询专辑封面的位置

可以看到，`sql_buf`是一个256字节的字符数组，放置在堆栈上。对其进行了无界的`sprintf()`操作。这可能是缓冲区溢出。通过grep搜索源代码，发现只有一个调用站点`SendResp_albumArt()`。让我们看看它在upnphttp.c中的调用位置（见图6）。

**图6**：分析`SendResp_albumArt()`的调用站点。这似乎不是一个缓冲区溢出候选，但可能是SQL注入候选。

可以看到，调用者`ProcessHttpQuery_unpnphttp()`发送长度最多为512字节的字符串给`SendResp_albumArt()`。不幸的是，由于`SendResp_albumArt()`中有一个1500字节的字符数组位于`sql_buf`之上，我们无法通过溢出覆盖保存的返回地址。不过，这似乎是一个理想的SQL注入候选。如果请求的“object”中包含破折号字符，则破折号及其之后的内容会被截断，剩余的“object”字符串将被转换为SQL查询。

不能假设这种处理方式总是安全的。