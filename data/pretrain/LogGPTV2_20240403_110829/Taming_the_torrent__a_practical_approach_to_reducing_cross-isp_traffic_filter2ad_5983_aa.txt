# Taming the Torrent: A Practical Approach to Reducing Cross-ISP Traffic in Peer-to-Peer Systems

**Authors:** David R. Choffnes and Fabián E. Bustamante  
**Department of Electrical Engineering & Computer Science, Northwestern University**  
**Emails:** {drchoffnes, fabianb}@cs.northwestern.edu  
**Location:** Evanston, IL, USA

## Abstract

Peer-to-peer (P2P) systems, which provide a variety of popular services such as file sharing, video streaming, and voice-over-IP, contribute significantly to today's Internet traffic. By building overlay networks that are oblivious to the underlying Internet topology and routing, these systems have become one of the greatest traffic-engineering challenges for Internet Service Providers (ISPs) and the source of costly data traffic flows. In an attempt to reduce these operational costs, ISPs have tried to shape, block, or otherwise limit P2.P traffic, often to the dismay of their subscribers, who consistently find ways to circumvent these controls or switch providers.

In this paper, we present the design, deployment, and evaluation of an approach to reducing this costly cross-ISP traffic without sacrificing system performance. Our approach leverages network views gathered at low cost from content distribution networks (CDNs) to drive biased neighbor selection without any path monitoring or probing. Using results collected from a deployment in BitTorrent with over 120,000 users in nearly 3,000 networks, we show that our lightweight approach significantly reduces cross-ISP traffic. Over 33% of the time, it selects peers along paths that are within a single autonomous system (AS). Further, we find that our system locates peers along paths that have two orders of magnitude lower latency and 30% lower loss rates than those picked at random, leading to significant improvements in transfer rates. In environments where peers are overloaded in terms of available bandwidth, our approach provides a 31% average download-rate improvement; in settings with large available bandwidth, it increases download rates by 207% on average (and improves median rates by 883%).

## Categories and Subject Descriptors

- C.2.4 [Distributed Systems]: Distributed Applications
- C.2.3 [Network Operations]: Network Management

## General Terms

- Algorithms, Measurement, Performance, Experimentation, Management

## Permission

Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee.

**SIGCOMM'08, August 17–22, 2008, Seattle, Washington, USA.**  
**Copyright 2008 ACM 978-1-60558-175-0/08/08 ...$5.00.**

## Keywords

P2P, ISP, cross-ISP traffic, peer selection, measurement reuse

## 1. Introduction

Peer-to-peer (P2P) systems use decentralization to enable a wide range of important, scalable, and reliable services such as data sharing, voice-over-IP (VoIP), and video streaming. These systems are so prevalent that reports indicate they generate up to 70% of Internet traffic worldwide. Their popularity has generated significant revenues for Internet Service Providers (ISPs), as users upgrade to broadband for improved P2P performance.

However, current P2P implementations are oblivious to the underlying Internet topology and ISP link costs. By making peering decisions independently of these factors, P2P systems have significantly increased ISPs' operational costs, particularly in terms of cross-ISP traffic. This has driven service providers to the unfavorable solution of forcefully reducing a user’s P2P traffic, often at the expense of unhappy subscribers and the risk of government investigations.

The effectiveness of ISPs' efforts to shape, block, or limit P2P traffic is questionable. For example, when early P2P systems ran over a fixed range of ports (e.g., 6881-6889 for BitTorrent), ISPs attempted to shape traffic directed toward those ports. In response, P2P systems switched to non-standard ports, often selected at random. More advanced strategies, such as deep packet inspection to identify and shape P2P-specific flows, have resulted in peer clients encrypting their connections. Recently, some ISPs have attempted to reduce P2P traffic by placing caches at the ISP’s gateway to the Internet or by using network appliances (e.g., Sandvine) for spoofing TCP RST messages, which trick clients into closing connections to remote peers. The legality of these approaches is questionable. By caching content, ISPs may become participants in illegal distribution of copyrighted material, while interfering with P2P flows in a non-transparent way may break the law and lead to significant backlash.

In summary, history has offered no sustainable solution that relies exclusively on ISP controls for addressing traffic-engineering problems posed by P2P systems.

Two recent simulation-based studies have suggested an alternative solution in which ISPs and P2P users cooperate to reduce cross-ISP traffic. If a P2P client biases its connections to peers in the same ISP, the peer could receive near-optimal performance while significantly reducing the number of times the same data item enters the ISP. Both studies discuss an approach that requires an oracle to provide knowledge about which peers are in the same ISP. While the basic idea of an oracle to solve the P2P conundrum is appealing, tasking ISPs with the job requires P2P users and ISPs to cooperate and trust each other, neither of which is likely to occur.

In this paper, we propose an alternative, scalable technique to provide biased peer selection that requires no cooperation or trust between ISPs and their subscribers, no additional infrastructure, and no network topology information. This technique is based on the observation that the information necessary for peer selection is already being collected by content distribution networks (CDNs). CDNs use dynamic DNS redirection to send clients to low-latency replica servers located in thousands of ISPs worldwide. We posit that if two clients are sent to a similar set of replica servers, they are likely to be close to these servers and, more importantly, to each other.

To experiment with our approach, we made it available as an extension to the Azureus BitTorrent client beginning in April 2007. We chose BitTorrent for its popularity, as it has been reported to account for over 66% of the P2P user population. Today, our extension has been installed by over 120,000 subscriber peers distributed worldwide. With their help, we have performed extensive, continuous measurements, currently recording data for connections between more than 2.5 million peer IP addresses per day. In particular, we collect DNS redirection information, transfer rates, path latencies, and traceroute measurements.

We use this data to show that our approach scales easily to well over one hundred thousand users and effectively "tames" BitTorrent by significantly reducing cross-ISP traffic without sacrificing its performance or robustness. Our analysis indicates that over 33% of the time, our approach to biased selection recommends peers along paths that are within a single autonomous system (AS), and the median number of AS hops to all recommended peers is 1. Further, we find that our system locates peers along paths that have two orders of magnitude lower latency and 30% lower loss rates than those picked at random, and that these high-quality paths can lead to significant improvements in transfer rates. In challenged settings where peers are overloaded in terms of available bandwidth, our approach provides a 31% average download-rate improvement; in environments with large available bandwidth, it increases download rates by 207% on average (and improves median rates by 883%). Though our data is specific to BitTorrent, we believe the results are general enough to be extended to other P2P systems.

This work provides the following significant contributions:

- A description of our scalable biased peer selection approach that recycles network views gathered at low cost from CDNs. Our technique does not require new infrastructure nor depend on cooperation between ISPs and their subscribers.
- An implementation of our approach that has been deployed on over 120,000 end-user systems located in more than 100 countries and over 2,800 networks.
- Detailed measurements of biased peer selection in BitTorrent comprising more than 100 million peer IPs over nine months. Our users cumulatively connect to 2.5 million peer IP addresses per day and have reported traceroute measurements that cross over 9,700 different networks. The raw data from our ongoing measurements will be made publicly available.
- An analysis of our measurements demonstrating that CDNs are effective, low-cost oracles to help minimize P2P cross-ISP traffic. Our technique locates peers along paths that do not leave the AS of origin over one-third of the time, over an order of magnitude more often than peers picked at random by BitTorrent. Our study is also the first to characterize cross-ISP traffic and per-connection bidirectional transfer rates from the perspective of a large number of BitTorrent clients.

The rest of the paper is organized as follows. In Section 2, we provide background information relevant to our work before presenting a high-level view of our approach in Section 3. Section 4 discusses how we use CDNs' network views for biased peer selection, and Section 5 describes our implementation. We present a detailed empirical analysis of the effectiveness of our approach in Section 6, discuss several key issues in Section 7, and conclude in Section 8.

## 2. Background

Most P2P systems employ an arbitrary peer selection policy that ignores the underlying Internet topology and ISP link costs, establishing connections between randomly chosen subsets of cooperating peers from around the world. Such a policy results in P2P traffic that often crosses network boundaries multiple times to reach content that could have been more speedily obtained from nearby peers. Several proposals have suggested using AS numbers in peer selection to improve performance and reduce cross-network traffic, and this approach has even been adopted by several P2P applications (e.g., Neokast and Joost). While this simple technique helps reduce cross-ISP transfers, it can both unnecessarily restrict in-network, cross-AS traffic while biasing peer connections toward distant hosts in an AS with broad geographic coverage.

Among P2P systems, BitTorrent is one of the most popular. BitTorrent's popularity is due to several factors, the most notable being the fundamental advantages of P2P over traditional approaches to content distribution, including self-scaling and resilience, and its relatively high performance in terms of user-perceived download time. The protocol has been well documented in the literature, so our brief description focuses only on aspects relevant to this work.

To distribute a file using BitTorrent, a peer exchanges pieces of it with other peers that are concurrently transferring the same file. The file is described by metadata called a torrent; those peers sharing content described by the same metadata are said to be connected to the same torrent and in the same swarm. To locate these peers, the protocol uses trackers that provide each peer with a random subset of peers connected to the torrent. By default, each peer initially establishes, at random, a finite number of connections from this subset. As the transfer progresses, connections that do not benefit the transfer are dropped (i.e., choked), and new random connections are established (i.e., unchoked).

ISPs have resorted to various methods to control P2P traffic, particularly BitTorrent, ranging from bandwidth limiting to traffic shaping and caching. The questionable effectiveness of this one-sided approach has partially motivated some collaborative models for addressing the problem. Aggarwal et al. and Bindal et al. have recently suggested the idea of ISP-supported oracles for biased-peer selection. Rather than recommending peers for performance improvement, these oracles would bias peer selection toward nodes in the same ISP to reduce service and record information about file-transfer performance. We leave a detailed discussion of our implementation to Section 5.

Table 1 presents a summary of key statistics regarding peers running our software. These peers allow us to record about 1,000,000,000 transfer-rate samples every two weeks and over 22,000,000 ICMP ping measurements per day. Our dataset currently contains connection information for over 100,000,000 BitTorrent peers running over 100 different client applications and located in well over 10,000 ASes.

| **Countries** | **IP Addresses** | **Prefixes** | **ASes** | **Daily Peers Observed** | **Daily Traceroutes** | **Total ASes Traversed** |
|--------------|------------------|--------------|----------|--------------------------|-----------------------|--------------------------|
| 108          | 300,000          | 15,000       | 2,800    | > 2.3 million             | 1.2 million ± 200K     | > 9,700                   |

## 3. Approach

This paper presents a scalable approach to biased peer selection and reports on experimental results that validate its effectiveness for a popular P2P system in the wild. A key feature of our technique is that it recycles network views gathered at low cost from CDNs to drive biased peer selection without any path monitoring or probing. Following the observation that CDN redirections are primarily driven by latency, we base our approach on the hypothesis that if two peers exhibit similar redirection behavior, they are likely to be close to one another. Further, we expect that these peers will mostly be within the same ISP, thus avoiding cross-ISP traffic and optimizing clients' performance by avoiding most network bottlenecks.

Unlike previous oracle-based proposals, our CDN-based approach does not require new infrastructure and does not depend on cooperation between ISPs and their subscribers. This work is a concrete example of the use of "recycled" information, gathered by long-running services such as CDNs, in building more efficient services—an instance of a negative feedback loop essential to improving the overall efficiency of the Internet.

## 4. CDNs as Oracles

In this section, we discuss how CDNs' network views can be recycled to drive a biased peer-selection service for P2P applications. We begin by providing a brief review of how CDNs work.

CDNs attempt to improve web performance by delivering content to end users from multiple, geographically dispersed servers located at the edge of the network. Content providers contract with CDNs to host and distribute their content. Since most CDNs have servers in ISP points of presence, clients' requests can be dynamically forwarded, via DNS redirections or URL rewriting, to topologically proximate replicas.

Beyond static information such as geographic location and network connectivity, CDNs rely on network measurement systems to incorporate dynamic network information in replica selection and determine high-speed Internet paths over which to transfer content within the network. In previous work, we reported on a broad measurement study of the Akamai CDN and demonstrated that their redirections are performed frequently enough to be useful for control, that these updates are primarily driven by network conditions, and are, therefore, potentially beneficial to other applications. This work also showed that redirections for a large-scale CDN are primarily driven by latency, i.e., most of the replica servers are along low-latency paths to end hosts.

Based on these results, we hypothesize that when different hosts exhibit similar redirection behavior, they are likely close to the corresponding replica servers and, by extension, to each other. In previous work, we defined a way to encode redirection behavior and proposed its use as the basis for relative network positioning. In this work, we extend previous efforts in this area by developing a way to scalably encode and distribute redirection information. We further use this technique for biased peer selection to reduce cross-ISP traffic and evaluate the benefit of this approach "in the wild."

We represent peer-observed DNS redirection behavior using a map of ratios, where each ratio represents the frequency with which the peer has been directed toward the corresponding replica server during the past time window. Specifically, if peer Pa is redirected toward replica server r1 75% of the time and toward replica server r2 25% of the time, then the corresponding ratio map is:

\[ \mu_a = \{ r1 \Rightarrow 0.75, r2 \Rightarrow 0.25 \} \]

More generally, the ratio map for a peer \( a \) is a set of (replica-server, frequency) pairs. This map is used to compare the similarity of redirection behavior between different peers. If two peers have similar ratio maps, they are likely to be close to each other, and thus, connecting them can reduce cross-ISP traffic.

## 5. Implementation

We implemented our approach as an extension to the Azureus BitTorrent client, which was made available starting in April 2007. The extension collects DNS redirection information, transfer rates, path latencies, and traceroute measurements. This data is used to compute the ratio maps for each peer and to select peers with similar ratio maps for connections.

## 6. Empirical Analysis

Our empirical analysis shows that our approach significantly reduces cross-ISP traffic. Over 33% of the time, our approach to biased selection recommends peers along paths that are within a single autonomous system (AS), and the median number of AS hops to all recommended peers is 1. Further, we find that our system locates peers along paths that have two orders of magnitude lower latency and 30% lower loss rates than those picked at random, and that these high-quality paths can lead to significant improvements in transfer rates. In environments where peers are overloaded in terms of available bandwidth, our approach provides a 31% average download-rate improvement; in settings with large available bandwidth, it increases download rates by 207% on average (and improves median rates by 883%).

## 7. Key Issues

While our approach shows significant promise, there are several key issues to consider. First, the effectiveness of our approach depends on the quality and availability of CDN redirection data. Second, the scalability of our approach needs to be further evaluated as the number of users grows. Finally, the potential impact on P2P system security and privacy should be carefully considered.

## 8. Conclusion

In this paper, we presented a scalable approach to reducing cross-ISP traffic in P2P systems by leveraging network views gathered from CDNs. Our approach, which does not require new infrastructure or cooperation between ISPs and their subscribers, has been shown to significantly reduce cross-ISP traffic and improve transfer rates. Future work will focus on further refining our approach and evaluating its long-term impact on P2P systems.