title:Taming the torrent: a practical approach to reducing cross-isp traffic
in peer-to-peer systems
author:David R. Choffnes and
Fabi&apos;an E. Bustamante
Taming the Torrent
A Practical Approach to Reducing Cross-ISP Trafﬁc in Peer-to-Peer Systems
David R. Choffnes and Fabián E. Bustamante
Department of Electrical Engineering & Computer Science, Northwestern University
{drchoffnes,fabianb}@cs.northwestern.edu
Evanston, IL, USA
ABSTRACT
Peer-to-peer (P2P) systems, which provide a variety of popular
services, such as ﬁle sharing, video streaming and voice-over-
IP, contribute a signiﬁcant portion of today’s Internet trafﬁc. By
building overlay networks that are oblivious to the underlying
Internet topology and routing, these systems have become one
of the greatest trafﬁc-engineering challenges for Internet Service
Providers (ISPs) and the source of costly data trafﬁc ﬂows. In an
attempt to reduce these operational costs, ISPs have tried to shape,
block or otherwise limit P2P trafﬁc, much to the chagrin of their
subscribers, who consistently ﬁnds ways to eschew these controls
or simply switch providers.
In this paper, we present the design, deployment and evaluation
of an approach to reducing this costly cross-ISP trafﬁc without
sacriﬁcing system performance. Our approach recycles network
views gathered at low cost from content distribution networks to
drive biased neighbor selection without any path monitoring or
probing. Using results collected from a deployment in BitTorrent
with over 120,000 users in nearly 3,000 networks, we show that our
lightweight approach signiﬁcantly reduces cross-ISP trafﬁc and,
over 33% of the time, it selects peers along paths that are within
a single autonomous system (AS). Further, we ﬁnd that our system
locates peers along paths that have two orders of magnitude lower
latency and 30% lower loss rates than those picked at random, and
that these high-quality paths can lead to signiﬁcant improvements
in transfer rates. In challenged settings where peers are overloaded
in terms of available bandwidth, our approach provides 31%
average download-rate improvement; in environments with large
available bandwidth,
it increases download rates by 207% on
average (and improves median rates by 883%).
Categories and Subject Descriptors
C.2.4 [Distributed Systems]: Distributed Applications
C.2.3 Network Operations Network management
General Terms
Algorithms, Measurement, Performance, Experimentation, Management
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SIGCOMM’08, August 17–22, 2008, Seattle, Washington, USA.
Copyright 2008 ACM 978-1-60558-175-0/08/08 ...$5.00.
Keywords
P2P, ISP, cross-ISP trafﬁc, peer selection, measurement reuse
1.
INTRODUCTION
Peer-to-peer (P2P) systems use decentralization to enable a
wide range of important, scalable and reliable services such as
data sharing, voice-over-IP (VoIP) and video streaming. These
systems are so prevalent that reports indicate they generate as much
as 70% of Internet trafﬁc worldwide [14]. Their overwhelming
popularity has yielded signiﬁcant revenues for Internet Service
Providers (ISPs), as users upgrade to broadband for improved P2P
performance [21].
Current P2P implementations, however, are oblivious to the
underlying Internet topology and ISP link costs. By making
peering decisions independently of these factors, P2P systems
have signiﬁcantly increased ISPs’ operational costs, particularly
in terms of cross-ISP trafﬁc. This has driven service providers to
the unfavorable solution of forcefully reducing a user’s P2P trafﬁc
at the expense of unhappy subscribers and the risk of government
investigations [11].
The effectiveness of ISPs’ efforts at shaping, blocking or oth-
erwise limiting P2P trafﬁc is questionable. For example, when
early P2P systems ran over a ﬁxed range of ports (e.g., 6881-
9 for BitTorrent) ISPs attempted to shape trafﬁc directed toward
those ports.
In response, P2P systems have switched to non-
standard ports, often selected at random. More advanced strategies
such as the use of deep packet inspection to identify and shape
P2P-speciﬁc ﬂows have resulted in peer clients encrypting their
connections. Recently, some ISPs have attempted to reduce P2P
trafﬁc by placing caches at the ISP’s gateway to the Internet or
by using network appliances (e.g., Sandvine [28]) for spooﬁng
TCP RST messages, which trick clients into closing connections
to remote peers [28, 31]. The legality of these approaches is
questionable. By caching content, ISPs may become participants in
illegal distribution of copyrighted material, while interfering with
P2P ﬂows in a non-transparent way may not only break the law
but also lead to signiﬁcant backlash [11].
In summary, history
has offered no sustainable solution that relies exclusively on ISP
controls for addressing trafﬁc-engineering problems posed by P2P
systems.
Two recent simulation-based studies have suggested an alter-
native solution in which ISPs and P2P users cooperate to reduce
cross-ISP trafﬁc. In particular, if a P2P client biases its connections
to peers in the same ISP, the peer could receive near-optimal
performance while signiﬁcantly reducing the number of times the
same data item enters the ISP [3, 8]. Both studies discuss an
approach that requires an oracle to provide knowledge about which
peers are in the same ISP. Whereas Bindal et al. [8] do not focus on
any particular oracle implementation, Aggarwal et al. [3] suggest
that ISPs themselves could provide such a service and demonstrate
through simulation that this is an effective solution. While the basic
idea of an oracle to solve the P2P conundrum is appealing, tasking
ISPs with the job requires P2P users and ISPs to cooperate and to
trust each other, neither of which is likely to occur.
In this paper, we propose an alternative, scalable technique to
provide biased peer selection that requires no cooperation or trust
between ISPs and their subscribers, no additional infrastructure
and no network topology information. This technique is based on
the observation that the information necessary for peer selection is
already being collected by content distribution networks (CDNs).
CDNs use dynamic DNS redirection to send clients to low-latency
replica servers located in thousands of ISPs worldwide. We posit
that if two clients are sent to a similar set of replica servers, they
are likely to be close to these servers and, more importantly, to each
other.
In this paper we prove this to be the case, demonstrating
that these CDN-based “hints” can inform a biased peer selection
algorithm that signiﬁcantly reduces cross-ISP trafﬁc.
To experiment with our approach, we made it available as
an extension to the Azureus BitTorrent client beginning in April
2007. We chose BitTorrent for its popularity, as it has been
reported to account for over 66% of the P2P user population [14].
Today, our extension has been installed by over 120,000 subscriber
peers distributed worldwide. With their help, we have performed
extensive, continuous measurements, currently recording data for
connections between more than 2.5 million peer IP addresses per
day. In particular, we collect DNS redirection information, transfer
rates, path latencies and traceroute measurements.
We use this data to show that our approach scales easily to well
over one hundred thousand users, and effectively “tames” BitTor-
rent by signiﬁcantly reducing cross-ISP trafﬁc without sacriﬁcing
its performance or robustness. Our analysis indicates that over
33% of the time our approach to biased selection recommends
peers along paths that are within a single autonomous system (AS)
and the median number of AS hops to all recommended peers is
1. Further, we ﬁnd that our system locates peers along paths that
have two orders of magnitude lower latency and 30% lower loss
rates than those picked at random, and that these high-quality
paths can lead to signiﬁcant improvements in transfer rates.
In
challenged settings where peers are overloaded in terms of avail-
able bandwidth, our approach provides 31% average download-
rate improvement; in environments with large available bandwidth,
it increases download rates by 207% on average (and improves
median rates by 883%). Though our data is speciﬁc to BitTorrent,
we believe the results are general enough to be extended to other
P2P systems.
This work provides the following signiﬁcant contributions:
• A description of our scalable biased peer selection approach
that recycles network views gathered, at low cost, from
CDNs. Our technique does not require new infrastructure nor
depend on cooperation between ISPs and their subscribers.
To beneﬁt from our approach, a peer only needs to have the
ability to perform local DNS queries for CDN names.
• An implementation of our approach that has been deployed
on over 120,000 end user systems located in more than 100
countries and over 2,800 networks.
• Detailed measurements of biased peer selection in BitTorrent
comprising more than 100 million peer IPs over nine months.
Our users cumulatively connect to 2.5 million peer IP ad-
dresses per day, and have reported traceroute measurements
that cross over 9,700 different networks. The raw data from
our ongoing measurements will be made publicly available.
• An analysis of our measurements demonstrating that CDNs
are effective, low-cost oracles to help minimize P2P cross-
ISP trafﬁc. Our technique locates peers along paths that do
not leave the AS of origin over one third of the time, over an
order of magnitude more often than peers picked at random
by BitTorrent. Our study is also the ﬁrst to characterize cross-
ISP trafﬁc and per-connection bidirectional transfer rates
from the perspective of a large number of BitTorrent clients.
The rest of the paper is organized as follows.
In Section 2
we provide background information relevant to our work before
presenting a high-level view of our approach in Section 3. Section 4
discusses how we use CDNs’ network views for biased peer
selection, and Section 5 describes our implementation. We present
a detailed empirical analysis of the effectiveness of our approach in
Section 6, discuss several key issues in Section 7, then conclude in
Section 8.
2. BACKGROUND
Most P2P systems employ an arbitrary peer selection policy
that ignores the underlying Internet topology and ISP link costs,
establishing connections between randomly chosen subsets of co-
operating peers from around the world. Such a policy results in
P2P trafﬁc that often crosses network boundaries multiple times to
reach content that could have been more speedily obtained from
nearby peers [2, 8, 17]. Several proposals have suggested using AS
numbers in peer selection (e.g., [18, 23]) to improve performance
and reduce cross-network trafﬁc, and this approach has even been
adopted by several P2P applications (e.g., Neokast and Joost).
While this simple technique helps reduce cross-ISP transfers, it
can both unnecessarily restrict in-network, cross-AS trafﬁc while
biasing peer connections toward distant hosts in an AS with broad
geographic coverage.
Among P2P systems, BitTorrent [9] is one of the most popu-
lar [14]. BitTorrent’s popularity is due to a number of factors, the
most notable being the fundamental advantages of P2P over tra-
ditional approaches to content distribution, including self-scaling
and resilience, and its relatively high performance in terms of user-
perceived download time. The protocol has been well documented
in the literature (e.g., in [13, 15, 25, 26]), thus our brief description
focuses only on aspects relevant to this work.
To distribute a ﬁle using BitTorrent, a peer exchanges pieces
of it with other peers that are concurrently transferring the same
ﬁle. The ﬁle is described by metadata called a torrent; those peers
sharing content described by the same metadata are said to be
connected to the same torrent and in the same swarm. To locate
these peers, the protocol uses trackers that provide each peer with
a random subset of peers connected to the torrent. By default, each
peer initially establishes, at random, a ﬁnite number of connections
from this subset. As the transfer progresses, connections that do
not beneﬁt the transfer are dropped (i.e., choked) and new random
connections are established (i.e., unchoked).
ISPs have resorted to a number of methods to control P2P trafﬁc,
in particular BitTorrent, ranging from bandwidth limiting to trafﬁc
shaping and caching. The questionable effectiveness of this one-
sided approach has partially motivated some collaborative models
for addressing the problem. Aggarwal et al. [3] and Bindal et
al. [8] have recently suggested the idea of ISP-supported oracles
for biased-peer selection. Rather than recommending peers for
performance improvement [1, 12, 20, 30], these oracles would bias
peer selection toward nodes in the same ISP to reduce service
Countries
IP addresses
Preﬁxes
ASes
Daily peers observed
Daily traceroutes
Total ASes traversed
108
300,000
15,000
2,800
> 2.3 million
1.2 million ± 200K
> 9,700
Table 1: Summary of sources for our dataset.
and records information about ﬁle-transfer performance. We leave
a detailed discussion of our implementation to Section 5.
Table 1 presents a summary of key statistics regarding peers
running our software. These peers allow us to record about
1, 000, 000, 000 transfer-rate samples every two weeks, and over
22, 000, 000 ICMP ping measurements per day. Our dataset
currently contains connection information for over 100, 000, 000
BitTorrent peers running over 100 different client applications and
located in well over 10,000 ASes.
4. CDNS AS ORACLES
In this section, we discuss how CDNs’ network views can be re-
cycled to drive a biased peer-selection service for P2P applications.
We begin by providing a brief review of how CDNs work.
CDNs attempt to improve web performance by delivering con-
tent to end users from multiple, geographically dispersed servers
located at the edge of the network [4, 19, 22]. Content providers
contract with CDNs to host and distribute their content. Since most
CDNs have servers in ISP points of presence, clients’ requests can
be dynamically forwarded, via DNS redirections or URL rewriting,
to topologically proximate replicas [16, 29].
Beyond static information such as geographic location and net-
work connectivity, CDNs rely on network measurement systems to
incorporate dynamic network information in replica selection and
determine high-speed Internet paths over which to transfer content
within the network [5]. In previous work [33], we reported on a
broad measurement study of the Akamai CDN and demonstrated
that their redirections are performed frequently enough as to be
useful for control,
that these updates are primarily driven by
network conditions and are, therefore, potentially beneﬁcial to
other applications. This work also showed that redirections for a
large-scale CDN are primarily driven by latency, i.e., most of the
replica servers are along low-latency paths to end hosts.
Based on these results, we hypothesize that when different hosts
exhibit similar redirection behavior, they are likely close to the
corresponding replica servers and, by transition, to each other.
In [32], we deﬁne a way to encode redirection behavior and propose
its use as the basis for relative network positioning [32]. In this
work, we extend previous efforts in this area by developing a way to
scalably encode and distribute redirection information. We further
use this technique for biased peer selection to reduce cross-ISP
trafﬁc, and evaluate the beneﬁt of this approach “in the wild.”
We represent peer-observed DNS redirection behavior using a
map of ratios, where each ratio represents the frequency with which
the peer has been directed toward the corresponding replica server
during the past time window. Speciﬁcally, if peer Pa is redirected
toward replica server r1 75% of the time and toward replica server
r2 25% of the time, then the corresponding ratio map is:
µa = (cid:2)r1 ⇒ 0.75, r2 ⇒ 0.25(cid:4)
More generally, the ratio map for a peer a is a set of (replica-
Figure 1: Map indicating countries containing users of our
extension in dark gray. As of January 2008, the extension has
been installed in 108 different countries.
providers’ costs without affecting peers’ performance. Similar
in spirit to this work, the P4P [37] project attempts to address
the problem through custom trackers, both for ISPs and P2P
systems, using an interface based on a primal-dual decomposition
of an optimization problem. This interface design simpliﬁes
the realization of trafﬁc-engineering objectives from each parties’
perspective and ensures the extensibility of the approach. Through
simulation-based studies and limited experimental deployments,
these collaborative approaches have been shown to effectively
reduce network costs while minimally impacting application per-
formance. A clear advantage of these proposals is that they
allow ISPs to incorporate aggregated trafﬁc policies in their tracker
recommendations (e.g., a particular trafﬁc balance ratio between
peering providers). However, all of them require deployments
of oracles for each participating ISP and their effectiveness is
ultimately predicated on their adoption by P2P applications and a
trust relationship between P2P users and their ISPs.
3. APPROACH
This paper presents a scalable approach to biased peer selection
and reports on experimental results that validate its effectiveness for
a popular P2P system in the wild. A key feature of our technique is
that it recycles network views gathered, at low cost, from CDNs to
drive biased peer selection without any path monitoring or probing.
Following from the observation that CDN redirections are driven
primarily by latency [33], we base our approach on the hypothesis
that if two peers exhibit similar redirection behavior, they are likely
to be close to one another. Further, we expect that these peers
will be mostly within the same ISP, thus avoiding cross-ISP trafﬁc
and optimizing clients’ performance by avoiding most network
bottlenecks [7].
Unlike previous oracle-based proposals [3, 8], our CDN-based
approach does not require new infrastructure and does not depend
on cooperation between ISPs and their subscribers. This work is
a concrete example of the use of “recycled” information, gathered
by long-running services such as CDNs, in building more efﬁcient
services — one instance of a negative feedback loop essential to