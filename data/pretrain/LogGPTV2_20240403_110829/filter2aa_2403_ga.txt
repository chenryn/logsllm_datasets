其中，getenv_s()函数
①是微软退出的改进版getenv()函数
②
DPTRACE 
，它提升了原有函数的安全特性。 
这个函数多处调用了 MFC 字符串处理函数。 
不仅如此，它还检测了其他的环境变量。如果打开 SAP GUI（客户端）程序的日志记录功能，就会在
trace log 里看到它检测的环境变量，如下表所示。 
“GUI-OPTION: Trace set to %d” 
TDW_HEXDUMP  
“GUI-OPTION: Hexdump enabled” 
TDW_WORKDIR  
“GUI-OPTION: working directory ‘%s’ ” 
TDW_SPLASHSRCEENOFF  
“GUI-OPTION: Splash Screen Off” / “GUI-OPTION: Splash Screen On” 
TDW_REPLYTIMEOUT  
“GUI-OPTION: reply timeout %d milliseconds” 
TDW_PLAYBACKTIMEOUT  
“GUI-OPTION: PlaybackTimeout set to %d milliseconds”  
TDW_NOCOMPRESS  
“GUI-OPTION: no compression read” 
TDW_EXPERT  
“GUI-OPTION: expert mode” 
TDW_PLAYBACKPROGRESS  
“GUI-OPTION: PlaybackProgress” 
TDW_PLAYBACKNETTRAFFIC  
“GUI-OPTION: PlaybackNetTraffic” 
TDW_PLAYLOG  
“GUI-OPTION: /PlayLog is YES, file %s” 
TDW_PLAYTIME  
“GUI-OPTION: /PlayTime set to %d milliseconds”  
TDW_LOGFILE 
“GUI-OPTION: TDW_LOGFILE ‘%s’ ” 
TDW_WAN  
“GUI-OPTION: WAN - low speed connection enabled”  
TDW_FULLMENU 
“GUI-OPTION: FullMenu enabled” 
SAP_CP / SAP_CODEPAGE  
“GUI-OPTION: SAP_CODEPAGE ‘%d’ ” 
UPDOWNLOAD_CP  
“GUI-OPTION: UPDOWNLOAD_CP ‘%d’ ” 
SNC_PARTNERNAME  
“GUI-OPTION: SNC name ‘%s’ ” 
① https://msdn.microsoft.com/en-us/library/tb2sfw2z(VS.80).aspx。 
② 返回环境变量的标准 C 函数。 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
第 80 章  SAP 
785 
续表 
SNC_QOP 
“GUI-OPTION: SNC_QOP ‘%s’ ” 
SNC_LIB  
“GUI-OPTION: SNC is set to: %s” 
SAPGUI_INPLACE 
“GUI-OPTION: environment variable SAPGUI_INPLACE is on” 
函数把这些变量都存储在数组里，而且把 EDI 寄存器当作这个数组的指针。在调用 chk_evn()函数之前，
程序首先设置了 EDI 的值： 
.text:6440EE00       
lea     edi, [ebp+2884h+var_2884] ; options here like +0x15... 
.text:6440EE03       
lea     ecx, [esi+24h] 
.text:6440EE06       
call    load_command_line 
.text:6440EE0B       
mov     edi, eax 
.text:6440EE0D       
xor     ebx, ebx 
.text:6440EE0F       
cmp     edi, ebx 
.text:6440EE11       
jz      short loc_6440EE42 
.text:6440EE13       
push    edi 
.text:6440EE14   
push    offset aSapguiStoppedA ; "Sapgui stopped after  
     commandline interp"... 
.text:6440EE19       
push    dword_644F93E8 
.text:6440EE1F       
call    FEWTraceError 
那么，我们关注的“data record mode switched on”字符串在这个文件里吗？整个文件里，只有
CDwsGui::PrepareInfoWindow()构造函数调用了这个字符串。我们可通过日志文件的调试调用（debugging 
calls）信息了解各个 class/method 的名字。 
例如，下述调试调用信息就透露了构造函数的函数名称： 
.text:64405160   
push    dword ptr [esi+2854h] 
.text:64405166   
push    offset aCdwsguiPrepare ; "\nCDwsGui::PrepareInfoWindow:  
     sapgui env"... 
.text:6440516B   
push    dword ptr [esi+2848h] 
.text:64405171   
call    dbg 
.text:64405176   
add     esp, 0Ch 
以及： 
.text:6440237A          
push    eax 
.text:6440237B          
push    offset aCclientStart_6 ; "CClient::Start: set shortcut  
     user to '\%"... 
.text:64402380          
push    dword ptr [edi+4] 
.text:64402383          
call    dbg 
.text:64402388          
add     esp, 0Ch 
这些信息的作用很大。 
接下来，我们直奔那个令人恼火的弹出窗口： 
.text:64404F4F CDwsGui__PrepareInfoWindow proc near 
.text:64404F4F 
.text:64404F4F pvParam      
= byte ptr -3Ch 
.text:64404F4F var_38       
= dword ptr -38h 
.text:64404F4F var_34       
= dword ptr -34h 
.text:64404F4F rc           
= tagRECT ptr -2Ch 
.text:64404F4F cy           
= dword ptr -1Ch 
.text:64404F4F h            
= dword ptr -18h 
.text:64404F4F var_14       
= dword ptr -14h 
.text:64404F4F var_10       
= dword ptr -10h 
.text:64404F4F var_4        
= dword ptr -4 
.text:64404F4F         
.text:64404F4F          
push    30h 
.text:64404F51          
mov     eax, offset loc_64438E00 
.text:64404F56          
call    __EH_prolog3 
.text:64404F5B          
mov     esi, ecx          ; ECX is pointer to object 
.text:64404F5D          
xor     ebx, ebx 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
786 
逆向工程权威指南（下册） 
.text:64404F5F          
lea     ecx, [ebp+var_14] 
.text:64404F62          
mov     [ebp+var_10], ebx 
; demangled name: ATL::CStringT(void) 
.text:64404F65          
call    ds:mfc90_316 
.text:64404F6B          
mov     [ebp+var_4], ebx 
.text:64404F6E          
lea     edi, [esi+2854h] 
.text:64404F74          
push    offset aEnvironmentInf ; "Environment information:\n" 
.text:64404F79          
mov     ecx, edi 
; demangled name: ATL::CStringT::operator=(char const *) 
.text:64404F7B          
call    ds:mfc90_820 
.text:64404F81          
cmp     [esi+38h], ebx 
.text:64404F84          
mov     ebx, ds:mfc90_2539 
.text:64404F8A          
jbe     short loc_64404FA9 
.text:64404F8C          
push    dword ptr [esi+34h] 
.text:64404F8F          
lea     eax, [ebp+var_14] 
.text:64404F92          
push    offset aWorkingDirecto ; "working directory: '\%s'\n" 
.text:64404F97          
push    eax 
; demangled name: ATL::CStringT::Format(char const *,...) 
.text:64404F98          
call    ebx ; mfc90_2539 
.text:64404F9A          
add     esp, 0Ch 
.text:64404F9D          
lea     eax, [ebp+var_14] 
.text:64404FA0          
push    eax 
.text:64404FA1         
mov     ecx, edi 
; demangled name: ATL::CStringT::operator+=(class ATL::CSimpleStringT const &) 
.text:64404FA3          
call    ds:mfc90_941 
.text:64404FA9 
.text:64404FA9 loc_64404FA9: 
.text:64404FA9          
mov     eax, [esi+38h] 
.text:64404FAC          
test    eax, eax 
.text:64404FAE          
jbe     short loc_64404FD3 
.text:64404FB0          
push    eax 
.text:64404FB1          
lea     eax, [ebp+var_14] 
.text:64404FB4          
push    offset aTraceLevelDAct ; "trace level \%d activated\n" 
.text:64404FB9          
push    eax 
; demangled name: ATL::CStringT::Format(char const *,...) 
.text:64404FBA          
call    ebx ; mfc90_2539 
.text:64404FBC          
add     esp, 0Ch 
.text:64404FBF          
lea     eax, [ebp+var_14] 
.text:64404FC2          
push    eax 
.text:64404FC3          
mov     ecx, edi 
; demangled name: ATL::CStringT::operator+=(class ATL::CSimpleStringT const &) 
.text:64404FC5          
call    ds:mfc90_941 
.text:64404FCB          
xor     ebx, ebx 
.text:64404FCD          
inc     ebx 
.text:64404FCE          
mov     [ebp+var_10], ebx 
.text:64404FD1          
jmp     short loc_64404FD6 
.text:64404FD3 
.text:64404FD3 loc_64404FD3: 
.text:64404FD3          
xor     ebx, ebx 
.text:64404FD5          
inc     ebx 
.text:64404FD6 
.text:64404FD6 loc_64404FD6: 
.text:64404FD6          
cmp     [esi+38h], ebx 
.text:64404FD9          
jbe     short loc_64404FF1 
.text:64404FDB          
cmp     dword ptr [esi+2978h], 0 
.text:64404FE2         
jz      short loc_64404FF1 
.text:64404FE4          
push    offset aHexdumpInTrace ; "hexdump in trace activated\n" 
.text:64404FE9          
mov     ecx, edi 
异步社区会员 dearfuture(15918834820) 专享 尊重版权
第 80 章  SAP 
787 
; demangled name: ATL::CStringT::operator+=(char const *) 
.text:64404FEB          
call    ds:mfc90_945 
.text:64404FF1 
.text:64404FF1 loc_64404FF1: 
.text:64404FF1 
.text:64404FF1          
cmp     byte ptr [esi+78h], 0 
.text:64404FF5          
jz      short loc_64405007 
.text:64404FF7          
push    offset aLoggingActivat ; "logging activated\n" 
.text:64404FFC          
mov     ecx, edi 
; demangled name: ATL::CStringT::operator+=(char const *) 
.text:64404FFE          
call    ds:mfc90_945 
.text:64405004          
mov     [ebp+var_10], ebx 
.text:64405007 
.text:64405007 loc_64405007: 
.text:64405007          
cmp     byte ptr [esi+3Dh], 0 
.text:6440500B          
jz      short bypass 
.text:6440500D          
push    offset aDataCompressio ;"data compression switched off\n" 
.text:64405012          
mov     ecx, edi 
; demangled name: ATL::CStringT::operator+=(char const *) 
.text:64405014          
call    ds:mfc90_945 
.text:6440501A          
mov     [ebp+var_10], ebx 
.text:6440501D 
.text:6440501D bypass: 
.text:6440501D          
mov     eax, [esi+20h] 
.text:64405020          
test    eax, eax 
.text:64405022          
jz      short loc_6440503A 
.text:64405024          
cmp     dword ptr [eax+28h], 0 
.text:64405028          
jz      short loc_6440503A 
.text:6440502A          
push    offset aDataRecordMode ; "data record mode switched on\n" 
.text:6440502F          
mov     ecx, edi 
; demangled name: ATL::CStringT::operator+=(char const *) 
.text:64405031          
call    ds:mfc90_945 
.text:64405037          
mov     [ebp+var_10], ebx 
.text:6440503A 
.text:6440503A loc_6440503A: 
.text:6440503A 
.text:6440503A          
mov     ecx, edi 
.text:6440503C          
cmp     [ebp+var_10], ebx 
.text:6440503F          
jnz     loc_64405142 
.text:64405045          
push    offset aForMaximumData ; "\nFor maximum data security  
     delete\nthe s" 
; demangled name: ATL::CStringT::operator+=(char const *) 
.text:6440504A          