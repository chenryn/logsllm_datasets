 把当前的查询输入缓冲区的内容发送给服务器并且把输出输出到可选的 filename  或者把输出定向到一个独立的 Unix shell 执行 command。 单独一个\\g 实际上等效于一个分号。一个带有参数的\\g 是"一次性"的\\o 命令的代用品。
.TP
\fB\\help (or\\h) [\fIcommand\fB ]\fR
 给出指定 SQL 命令的语法帮助。如果没有给出 command ，那么 psql 将列出可获得语法帮助的所有命令。如果 command  是一个星号（"*"），则显示所有 SQL 命令的语法帮助。
.sp
.RS
.B "Note:"
注意:  为简化敲击，包含多个单字的命令不需要引用。因此键入\fI\\help alter table\fP 是正确的。
.RE
.sp
.TP
\fB\\H\fR
 打开 HTML 查询输出格式。如果 HTML  格式已经打开，则切换回缺省的对齐的文本格式。 这个命令是为了兼容和方便，参阅\fB\\pset\fR 获取设置其他输出选项的内容。
.TP
\fB\\i\fIfilename\fB\fR
 从文件filename中读取并把其内容当作从键盘输入的那样执行查询。
.sp
.RS
.B "Note:"
注意:  如果你想在屏幕上看到读入的行，你必须对所有行设置变量 ECHO 为 all。
.RE
.sp
.TP
\fB\\l (or\\list)\fR
 列出服务器上所有数据库的名字和它们的所有者以及字符集编码。在命令名称后面加一个 "+" 还可以看到对数据库的描述。
.TP
\fB\\lo_export\fIloid\fB\fIfilename\fB\fR
 从数据库里读取 OID 为 loid  的大对象并把她写到 filename里。 注意这个功能与服务器函数 lo_export 有些微小的区别， lo_export 运行时带着运行数据库服务器的用户权限， 而且是在服务器的文件系统上。
.sp
.RS
.B "Tip:"
提示:  使用\fB\\lo_list\fR 查看大对象的 OID。
OID.
.RE
.sp
.TP
\fB\\lo_import\fIfilename\fB [\fIcomment\fB ]\fR
 把文件存储为一个 PostgreSQL 大对象。可以带着一个该对象的注解选项。例如：
.sp
.nf
foo=>\fB\\lo_import '/home/peter/pictures/photo.xcf' 'a picture of me'\fR
lo_import 152801
.sp
.fi
 响应表明此大对象得到一个对象标识 152801，如果你还想访问该对象，就应该把这个对象标识记住。 因此，我们建议总是给每个对象关联一个人类可读的注解。那样就可以用\fB\\lo_list\fR 命令看到这些注解。
 注意这条命令与服务器端的 lo_import 有一些区别，因为这条命令是本地用户在本地文件系统上操作， 而不是以服务器用户在服务器文件系统上操作。
.TP
\fB\\lo_list\fR
 显示一个目前存储在该数据库里的所有 PostgreSQL 大对象和它们的所有者的列表。
.TP
\fB\\lo_unlink\fIloid\fB\fR
 从数据库里删除OID为\fIloid\fR 的大对象。
.sp
.RS
.B "Tip:"
提示:  使用\fB\\lo_list\fR  查找大对象的 OID。
OID.
.RE
.sp
.TP
\fB\\o [ {\fIfilename\fB | |\fIcommand\fB} ]\fR
 把后面的查询结果保存到文件 filename  里或者把后面的查询结果定向到一个独立的 Unix shell 执行 command。 如果没有声明参数，查询输出重置为标准输出。
"查询结果"包括所有表，命令响应和从数据库服务器来的提示， 同样还有各种各样查询数据库的反斜杠命令的输出（如\fB\\d\fR），但是没有错误信息。
.sp
.RS
.B "Tip:"
提示:  要用文本分散查询结果之间的输出，用\fB\\qecho\fR。
.RE
.sp
.TP
\fB\\p\fR
 打印当前查询缓冲区到标准输出。
.TP
\fB\\pset\fIparameter\fB [\fIvalue\fB ]\fR
 这条命令设置影响查询结果表输出的选项。parameter  描述要设置的选项是哪一个。value 的语意也取决于它。
 可调节的打印选项有：
.RS
.TP
\fBformat\fR
 设置输出格式为 unaligned，aligned，html， 或 latex之一。允许使用唯一的缩写。（这也意味着一个字母就够了。）
"Unaligned" （不对齐）把一条记录的所有字段都输出到一行， 用当前有效的域分隔符分隔。这主要用于生成那些要被其他程序读取的输出（tab分隔，逗号分隔）。 "Aligned" （对齐）模式是标准的，人类可读的，格式化好了的文本输出，也是缺省。 "HTML" 和 "LaTeX"  模式把表输出为可用于文档里的对应标记语言。它们还不是完整的文档！ （可能对于 HTML 变化还不是太大，但是在 LaTeX 里，你必须有一个完整的文档包装器。）
.TP
\fBborder\fR
 第二个参数必须是一个数字。通常，数字越大，表就有越宽的边界和越多的线， 但是这个参数取决于实际的格式。在HTML模式里， 这个参数会直接翻译成border=...属性，在其他的模式里， 只有值 0 （无边界），1 （内部分隔线）和 2 （表框架）有意义。
.TP
\fBexpanded (or x)\fR
 在正常和扩展格式之间切换。当打开扩展格式时，所有的输出都是两列， 字段名称在左，数据在右。 这个模式在数据无法放进通常的"水平"模式的屏幕时很有用。
 所有四种输出模式都支持扩展格式。
.TP
\fBnull\fR
 第二个参数是一个字串，用以代表字段的值为 null 时的打印输出。 缺省是什么都不打，这样很容易和类似一个空字串混淆。 因此，我们可能选择\\pset null '(null)'。
.TP
\fBfieldsep\fR
 声明在非对齐模式时的域分隔符。 这样我们就可以创建其他程序希望的tab或逗号分隔的输出。要设置 tab 域分隔符， 键入\\pset fieldsep '\t'。缺省域分隔符是 '|' （一个竖条符号）。
.TP
\fBfooter\fR
 切换默认足标的显示 (x rows)。
.TP
\fBrecordsep\fR
 声明在非对齐模式时的记录分隔符。缺省是换行符。
.TP
\fBtuples_only (或 t)\fR
 在完全显示和只显示记录之间切换。 完全显示将显示象列头，标题和各种脚注等信息。 只显示记录模式将只显示实际的表数据。
.TP
\fBtitle [\fItext\fB ]\fR
 为任何随后打印的表设置标题。 这个参数可以用于给你的输出一个描述性标记。 如果不带参数，重置标题。
.TP
\fBtableattr (or T) [\fItext\fB ]\fR
 允许你声明放在 HTML table 标记里的任何属性。例如，可以是 cellpadding 或 bgcolor。注意你可能不需要在这里声明 border ，因为已经在\\pset border 里用过了。
.TP
\fBpager\fR
 控制查询和psql帮助输出的分页器。如果设置了环境变量 PAGER， 输出被定向到指定程序，否则使用系统缺省（比如 more）。
 如果关闭了分页器，则不使用它，如果打开了，程序只在需要的时候使用分页器，也就是说， 输出是到终端，而且那个表很可能无法与屏幕匹配。 （psql 在决定何时分页时不是很完美。）\\pset pager 开关分页器。我们也可以把分页器设置为 always，导致我们在任何情况下都使用分页器。
.RE
.PP
 可以在 "Examples 例子" 节看到这些不同格式输出的示例。
.sp
.RS
.B "Tip:"
提示:  有很多用于\fB\\pset\fR 的快速命令。参阅
\fB\\a\fR,\fB\\C\fR,\fB\\H\fR,
\fB\\t\fR,\fB\\T\fR, 和\fB\\x\fR。
.RE
.sp
.sp
.RS
.B "Note:"
注意:  无参数运行\fB\\pset\fR 是错误的。 以后这样调用将显示当前打印选项状态。
.RE
.sp
.TP
\fB\\q\fR
 退出 psql 程序。
.TP
\fB\\qecho\fItext\fB [ ... ]\fR
 这条命令等效于\fB\\echo\fR ，区别是所有输出将写入由\fB\\o\fR 设置的输出通道。
.TP
\fB\\r\fR
 重置（清空）查询缓冲区。
.TP
\fB\\s [\fIfilename\fB ]\fR
 将命令行历史打印出或是存放到 filename。 如果省略 filename， 历史将输出到标准输出。这个选项只有在 psql 配置成使用 GNU 历史库后才生效。
.sp
.RS
.B "Note:"
注意:  在当前版本里，这个（ GNU 历史库）不再是必须的了， 实际上，在程序结束时自动保存命令行历史。每次 psql 启动都会装载命令行历史。
.RE
.sp
.TP
\fB\\set [\fIname\fB [\fIvalue\fB [ ... ]]]\fR
 设置内部变量 name  为 value 或着如果给出了多于一个值， 设置为所有这些值的联接结果。如果没有给出第二个参数，只设变量不设值。要重置一个变量，使用\fB\\unset\fR 命令。
 有效的变量名可以包含字符，数字和下划线。 参阅下面的 "Variables 变量" 获取细节。
 尽管你可以设置任何变量为任意值， psql对一些变量特殊对待。它们在关于变量的节里面有文档。
.sp
.RS
.B "Note:"
注意:  这条命令是完全和 SQL 命令 SET [\fBset\fR(7)] 不一样的。
.RE
.sp
.TP
\fB\\t\fR
 切换输出的列/字段名的信息头和行记数脚注。 这条命令等效于\\pset tuples_only，提供主要为了方便。
.TP
\fB\\T\fItable_options\fB\fR
 允许你在使用HTML输出模式时声明放在 table 标记里的属性。 这条命令等效于\\pset tableattr table_options。
.TP
\fB\\timing\fR
切换每个 SQL 语句使用的时间，单位是毫秒。
.TP
\fB\\w {\fIfilename\fB |\fI|command\fB}\fR
 将当前查询缓冲区输出到文件 filename  或者定向到 Unix 命令 command。
.TP
\fB\\x\fR
 切换扩展行格式。等效于\\pset expanded。
.TP
\fB\\z [\fIpattern\fB ]\fR
 生成一个带有访问权限列表的数据库中所有表的列表。 如果给出任何pattern，则被当成一个规则表达式， 只显示匹配的表。
 命令\fBgrant\fR(7) 和\fBrevoke\fR(7) 用于设置访问权限。 参阅\fBgrant\fR(7) 获取更多信息。
 这是\fB\\dp\fR（"显示权限"）的别名。
.TP
\fB\\! [\fIcommand\fB ]\fR
 返回到一个独立的 Unix shell 或者执行 Unix 命令 command。 参数不会被进一步解释，shell 将看到全部参数。
.TP
\fB\\?\fR
 获得关于反斜杠命令的帮助信息。
.PP