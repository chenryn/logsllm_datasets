#BHUSA @BlackHatEvents
**The Journey of Hunting In-The-Wild Windows LPE 0days**

**Speaker: Quan Jin**
- **Security Researcher at DBAPPSecurity**
- **Member of:**
  - DBAPPSecurity Lieying Lab
  - DBAPPSecurity WeBin Lab
- **Interests:**
  - Vulnerability discovery and exploitation
  - In-the-wild 0day hunting
- **Presentations:**
  - Bluehat Shanghai 2019
  - HITB2021AMS
- **Achievements:**
  - 37 CVE acknowledgments from Microsoft
  - 2020-2022 MSRC Most Valuable Researcher

**Information Classification: General**

## Agenda
1. **Motivation**
2. **Learn from History (and Now)**
3. **One Road Leads to Rome**
4. **Results**
   - The Story of CVE-2021-1732
   - The Story of CVE-2021-33739
   - The Story of a “Patched” 1day
5. **Takeaways**

### Motivation
- **In-The-Wild Windows LPE 0days (2017-2021)**
  - Yearly trend in the number of discovered 0days.
  - Importance of detecting and mitigating these vulnerabilities.

### How to Obtain Valuable Datasets (Potentially Containing 0days)
- **Private Datasets:**
  - Data from our own products.
- **Public Platform Datasets:**
  - Such as VirusTotal.

### How to Develop an Effective Detection Method
- **Dynamic Detection:**
  - Picking out samples through abnormal behavior.
  - Tools: Antivirus, Sandbox, etc.
- **Static Detection:**
  - Matching samples with static signatures.
  - Tools: YARA, etc.

### Is It Possible to Catch an In-The-Wild LPE 0day?
- Combining dynamic and static detection methods for effective identification.

### Why Learn from History
1. **Consistent Exploit Techniques Over Time:**
   - Understanding past techniques can help in predicting future ones.
2. **Better Defense by Thinking Like an Attacker:**
   - Analyzing historical cases from an attacker's perspective.
3. **Community-Driven Analysis:**
   - Historical cases have been thoroughly studied and documented.

### How We Study Historical Cases
- **Discovered Vendor:**
  - Who identified the vulnerability.
- **Using Organization:**
  - Entities using the exploit.
- **Patch Cycle:**
  - Time taken to patch the vulnerability.
- **Initial Disclosure Article:**
  - First public announcement.
- **Usage Scenario:**
  - Standalone or part of a chain.
  - Fileless or contained in a drop file.
- **Targeted System Versions:**
  - Specific versions affected.
- **Vulnerability Module:**
  - Affected modules and components.
- **Vulnerability Type:**
  - Types of vulnerabilities (e.g., Integer Overflow, Type Confusion).
- **Exploit Techniques:**
  - Methods used to exploit the vulnerability.
- **Public Analysis Blogs and Exploits:**
  - Insights from community research.
- **Original Sample (If Available):**
  - Files, hashes, behaviors, and exploit techniques.

### Usage Scenario
- **Standalone vs. Chained:**
  - Examples: CVE-2021-1732 (standalone), CVE-2021-31956 (chained with Chrome).
- **Fileless vs. Drop File:**
  - Examples: CVE-2017-0263 (Dll reflection), CVE-2019-0803 (single file).

### Targeted System Versions
- **OS Version Checks:**
  - Examples: CVE-2018-8611 (Windows 7-10 1803), CVE-2019-0797 (Windows 8-10 1703).
- **Sandbox/Reproduction Environment:**
  - Choosing the right Windows version for testing.

### Vulnerability Module
- **Most Targeted Modules:**
  - WIN32K, ATMFD, NT.
- **Favored Components:**
  - Desktop Window Manager (DWM), Common Log File System (CLFS).

### Vulnerability Type
- **Common Types:**
  - Integer Overflow, Type Confusion, Race Condition, Use After Free.
- **Reproduction Environment Configuration:**
  - Configuring Driver Verifier, etc.

### Exploit Techniques
- **Popular Techniques:**
  - "bServerSideWindowProc" (2015-2016).
  - "Previous Mode" for arbitrary address read/write (since 2018).
  - "HMValidateHandle" for kernel information leak (past five years).

### Public Analysis Blogs & Exploits
- **Insights from Community Research:**
  - Examples: Check Point, Kaspersky.

### The Original Sample (If Available)
- **First-Hand Information:**
  - Files, hashes, behaviors, and exploit techniques.
- **Future Detection:**
  - Identifying similar samples based on consistent techniques.

### Why Learn from Current Trends
1. **Variants of New Vulnerabilities:**
   - Example: CVE-2022-21882 (variant of CVE-2021-1732).
2. **Fuzzing and Auditing of New Modules:**
   - Example: CLFS heavily fuzzed and audited.
3. **Similar Vulnerabilities in Use or Waiting:**
   - Example: Kaspersky discovering CVE-2021-28310 based on CVE-2021-1732.
4. **New Exploit Techniques:**
   - Example: "Pipe Attribute" popular after 2020.

### Choose the Right Tool
- **Antivirus:**
  - Pros: Large-scale deployment, encrypted LPE component extraction.
  - Cons: Technical barriers, bypass potential.
- **Sandbox:**
  - Pros: Highly controllable environment, behavior-based detection.
  - Cons: OS version checks, resource overhead, parameter requirements.
- **YARA:**
  - Pros: No technical barriers, flexible development, low cost.
  - Cons: False positives and negatives.

### Build the Right Rule
1. **Stage-Based Rules:**
   - Vulnerability Triggering, Heap Feng Shui, Kernel Information Leak, Arbitrary Address Read/Write, Control Flow Hijacking, Privilege Escalation.
2. **Latest Exploit Techniques:**
   - Writing rules for new methods.
3. **Likely Vulnerabilities:**
   - Focusing on common types.

### Write Rules According to Stages
- **Common Features:**
  - Identifying and writing rules based on typical characteristics of each stage.

### Kernel Information Leak Techniques
- **Common Methods:**
  - NtQuerySystemInformation, SystemBigPoolInformation, SystemModuleInformation, Win32k Shared Info User Handle Table, Descriptor Tables, HMValidateHandle, GdiSharedHandleTable.

### Arbitrary Address Read/Write Techniques
- **Common Methods:**
  - SetWindowLong, SetWindowText, GetMenuItemRect, SetMenuItemInfo, GetMenuBarInfo, NtUpdateWnfStateData, NtQueryWnfStateData.

#BHUSA @BlackHatEvents
**Information Classification: General**