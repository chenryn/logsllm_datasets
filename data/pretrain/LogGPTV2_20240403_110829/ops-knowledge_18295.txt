User: I have a C++ application from Windows that I wish to port across to run on a Red Hat Linux system.  This application embeds a slightly modified version of Python 2.7.3 (I added the Py_SetPath command as it is essential for my use case) so I definitely need to compile the Python source.
My problem is that despite looking, I can't actually find any guidance on how to get Python to emit the right files for me to link against and how to then get g++ to link my C++ code against it in such a way that I don't need to have an installed copy of Python on every system I distribute this to.
So my questions are:

how do I compile Python so that it can be embedded into the C++ app on Linux?
what am I linking against for the C++ app to work?

Sorry for these basic questions, but having convinced my employer to let me try and move our systems over to Linux, I'm keen to make it go off as smoothly as possible and I'm worried avbout not making too much progress!
Assistant: You want to link to the python static library, which should get created by default and will be called libpython2.7.a
If I recall correctly, as long as you don't build Python with --enable-shared it  doesn't install the dynamic library, so you'll only get the static lib and so simply linking your C++ application with -lpython2.7 -L/path/where/you/installed/python/lib should link to the static library.