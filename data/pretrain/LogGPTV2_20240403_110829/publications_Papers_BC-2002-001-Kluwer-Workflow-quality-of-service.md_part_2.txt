workflows contain design errors, such as non-termination, deadlocks, and split of
instances (Aalst 1999). To compute QoS metrics, we use a set of six distinct reduction
rules: (1) sequential, (2) parallel, (3) conditional, (4) fault-tolerant, (5) loop, and (6)
network. As an illustration, we will show how reduction works for a sequence of tasks.
p
j
t t t
i j ij
(a) (b)
Figure 1 - Sequential system reduction
Reduction of a Sequential System. Two sequential service tasks t and t are reduced to a
i j
single task t . In this reduction the incoming transitions of t and outgoing transition of
ij i
tasks t are transferred to task t .
j ij
In a sequential system p = 1. This reduction can only be applied if the following two
j
rules are satisfied: a) t is not a xor/and split and b) t is not a xor/and join. These rules
i j
prevent this reduction from being applied in a parallel, conditional, and loop systems. To
compute the QoS of the reduction the following formulae are applied:
Time : T(t ) = T(t) + T(t)
ij i j
Cost: C(t )= C(t) + C(t)
ij i j
Reliability: R(t ) = R(t) * R(t)
ij i j
4.2 Simulation Models
While analytical methods can be effectively used, another alternative is to utilize
simulation analysis (Miller, Cardoso et al. 2002). Simulation can play an important role
in tuning quality of service metrics of workflows by exploring “what-if" questions. When
the need to adapt or to change a workflow is detected, deciding what changes to carry out
can be very difficult. Before a change is actually made, its possible effects can be
explored with simulation. To facilitate rapid feedback, the workflow system and
simulation system need to interoperate. In particular, workflow specification documents
need to be translated into simulation model specification documents so that the new
model can be executed/animated on-the-fly.
In our project, these capabilities involve a loosely-coupled integration between the
METEOR WfMS and the JSIM simulation system (Nair, Miller et al. 1996; Miller, Nair
et al. 1997; Miller, Seila et al. 2000). Workflow is concerned with scheduling and
transformations that take place in tasks, while simulation is mainly concerned with
system performance. For modeling purposes, a workflow can be abstractly represented by
using directed graphs (e.g., one for control flow and one for data flow, or one for both).
Since both models are represented as directed graphs interoperation is facilitated. In
order to carry out a simulation, the appropriate workflow model is retrieved from the
repository, translated into a JSIM simulation model specification. The simulation model
7
is displayed graphically and then executed/animated. Statistical results are collected and
displayed which indicate workflows QoS.
5 Workflow QoS Metrics of Interest
In this section, we list the workflow QoS metrics which are of interest to compute. The
computation can be done at design time, before the execution of instances, or it can be
done at runtime.
Workflow Time. Workflow time analysis measures the total time that instances spend in
a workflow process. When a workflow is executed, instances enter the process, proceed
through various tasks, and finally exit the process. The WfMS needs to constantly
monitor and estimated the time remaining for instance termination. We show four
important measurements for workflow time-based execution: workflow response time,
workflow delay time, minimum workflow response time, and workflow response time
efficiency.
• Workflow response time (T) is the total amount of time that a workflow instance
spends in a workflow process before it finishes.
• Workflow delay time (DT) is the total amount of time that a workflow instance
spends in a workflow while not being processed by a task.
• Minimum workflow response time (T ) of a workflow is the time required for a
min
workflow instance to be processed not having to account for any task delay time.
• Workflow response time efficiency (E) is the ratio of the minimum instance response
time and the instance response time. It is instructive to compare these two measures,
since instance efficiency measurement provides an indication of the time an instance
is delayed during its execution and indicates to which degree a workflow process can
be improved by reducing its response time.
Workflow Cost. Workflow cost (C) analysis measures the cost incurred with the
execution of a workflow. A workflow has a cost which is equal to the sum of the cost of
the tasks executed to complete a workflow. Cost-based workflows need to have their cost
calculated so that managers can make sure that operations are within initial budgets.
Workflow Fidelity. Workflows fidelity (F) is computed based on the fidelity of the tasks
in the workflow. The user defines a weighted function involving each task fidelity. A
fidelity function is also defined to represent how well a task is carrying out its execution.
Workflow Reliability. Workflow reliability (R) corresponds to the likelihood that a
workflow will perform for its users when the user demands it.
6 Related Work
8
The work found in the literature on quality of service for WfMS is limited. The
Crossflow project (Klingemann, Wäsch et al. 1999; Damen, Derks et al. 2000; Grefen,
Aberer et al. 2000) has given a major contribution. In their approach, a continuous-time
Markov chain (CTMC) is used to calculate the time and cost associated with workflow
executions. While the research on quality of service for WfMS is limited, the research on
time management, which is under the umbrella of workflow QoS, has been more active
and productive. Eder (1999) and Pozewaunig (1997) present an extension to CMP and
PERT by annotating workflow graphs with time. At process build-time, instantiation-
time, and runtime the annotations are used to check the validity of time constraints. The
major limitation of their approach is that only direct acyclic graphs (DAG) can be
modeled. This is a significant limitation since the majority of workflows have cyclic
graphs. Cycles are in general used to represent rework actions or repetitive activities
within a workflow. Reichert (1998)and Dadam (2000) also recognize that time is an
important aspect of workflow execution. With each workflow task, minimal and maximal
durations may be specified. The system supports the specification and monitoring of
deadlines. The monitoring system allows the notification of users when deadlines are
going to be missed. It also checks if minimal and maximal time distances between tasks
are followed according to initial specifications. Marjanovic and Orlowska (1999)
describe a workflow model enriched with modeling constructs and algorithms for
checking the consistency of workflow temporal constraints. Their work mainly focus on
how to manage workflow changes while accounting for temporal constraints. Son (2001)
present a solution for the deadline allocation problem based on queuing networks. Their
work also uses graph reduction techniques, but applied to queuing theory. Although the
work on quality of service for workflows is lacking, a significant amount of research on
QoS has been done in the area of networking (Cruz 1995; Georgiadis, Guerin et al. 1996),
real-time applications (Clark, Shenker et al. 1992) and middleware (Zinky, Bakken et al.
1997; Frlund and Koistinen 1998; Hiltunen, Schlichting et al. 2000).
Recently, in the area of Web services, researchers have also manifested an interest for
QoS. The DAML-S (DAML-S 2001) specification allows the semantic description of
business processes. The specification includes constructs to specify quality of service
parameters, such as quality guarantees, quality rating, and degree of quality. One current
limitation of DAML-S’ QoS model is that every composite process needs to have QoS
metrics specified by the user.
7 Future Work
The workflow QoS model presented in this paper can be extended in two additional
dimensions, which can be useful for particular types of workflow systems. The first one
that can be included is the security dimension. Workflow systems and workflow
applications face several security problems and dedicated mechanisms need to be present
to increase the level of security (Fan 1999; Kang, Froscher et al. 1999; Miller, Fan et al.
1999). The second dimension, which can be added, is maintainability. Maintainability
corresponds to the mean time to repair workflow failures; it is the average time spent to
maintain workflow in a condition where they can perform their intended function.
9
8 Conclusions
We have shown the importance of quality of service management of workflow and
introduced the concept of workflow quality of service (QoS). While QoS management
has a high importance for organizations, current WfMSs and workflow applications do
not provide full solutions to support QoS. Research is necessary in four areas:
specification, prediction algorithms and methods, monitoring tools, and mechanisms to
control the quality of service. In this paper, we focus on workflow QoS specification and
prediction. Based on the reviewed literature on quality of service in other areas, and
accounting for the particularities of workflow systems and applications, we define a
workflow QoS model, which includes four dimensions: time, cost, fidelity, and
reliability. The use of QoS increases the added value of workflow systems to
organizations, since non-functional aspects of workflows can be described. The
specification of QoS involves fundamentally the use of an adequate model and the
creation of realistic QoS estimates for workflow tasks. Once tasks have their QoS
estimated, QoS metrics can be compute for workflows. Since this computation needs to
be automatic we describe two methods for workflow QoS computation: analysis and
simulation.
9 References
Aalst, W. M. P. v. d. (1999). Generic Workflow Models: How to Handle Dynamic Change and
Capture Management Information. Proceedings of the Fourth IFCIS International Conference on
Cooperative Information Systems (CoopIS'99), Edinburgh, Scotland.
Anyanwu, K., A. P. Sheth, et al. (1999). Healthcare Enterprise Process Development and
Integration. Technical Report. Athens, GA, LSDIS lab, Department of Computer Science,
University of Georgia.
Bussler, C. (1998). Workflow Instance Scheduling with Project Management Tools. 9 th
Workshop on Database and Expert Systems Applications DEXA'98, Vienna, Austria, IEEE
Computer Society Press.
CAPA (1997). Course Approval Process Automation (CAPA). Athens, GA, LSDIS Lab,
Department of Computer Science, University of Georgia.
Cardoso, J., J. Miller, et al. (2002). Workflow Quality of Service: its Specification and
Computation. Athens, GA, LSDIS Lab, Computer Science Department, Univ. of Georgia.
Clark, D., S. Shenker, et al. (1992). Supporting Real-Time Applications in an Integrated Services
Packet Network: Architecture and Mechanism. Proceedings of ACM SIGCOMM.
Cruz, R. L. (1995). "Quality of service guarantees in virtual circuit switched networks." IEEE J.
Select. Areas Commun. 13(6): 1048-1056.
Dadam, P., M. Reichert, et al. (2000). Clinical workflows the killer application for process
oriented information systems. 4th International Conference on Business Information System (BIS
2000), Poznan, Poland.
10
Damen, Z., W. Derks, et al. (2000). Business-to-business E-Commerce in a Logistics Domain.
The CAiSE*00 Workshop on Infrastructures for Dynamic Business-to-Business Service
Outsourcing, Stockholm.
DAML-S (2001). Technical Overview - a white paper describing the key elements of DAML-S.
Eder, J., E. Panagos, et al. (1999). Time Management in Workflow Systems. BIS'99 3rd
International Conference on Business Information Systems, Poznan, Polen, Springer Verlag.
Fan, M. (1999). Security for the METEOR Workflow Management System. Department of
Computer Science. Athens, GA, University of Georgia.
Frlund, S. and J. Koistinen (1998). "Quality-of-Service Specification in Distributed Object
Systems." Distributed Systems Engineering Journal 5(4).
Garvin, D. (1988). Managing Quality: The strategic and Competitive Edge. New York:, Free
Press.
Georgiadis, L., R. Guerin, et al. (1996). Efficient network QoS provisioning based on per node
traffic shaping. IEEE ACM Transactions on Networking.
Grefen, P., K. Aberer, et al. (2000). "CrossFlow: Cross-Organizational Workflow Management in
Dynamic Virtual Enterprises." International Journal of Computer Systems Science & Engineering
15(5): 227-290.
Hall, D., J. A. Miller, et al. (2000). Using Workflow to Build an Information Management
System for a Geographically Distributed Genome Sequence Initiative. Athens, GA, University of
Georgia, Department of Computer Science, LSDIS Lab.
Hiltunen, M. A., R. D. Schlichting, et al. (2000). Survivability through Customization and
Adaptability: The Cactus Approach. DARPA Information Survivability Conference and
Exposition (DISCEX 2000).
ISO9000 (2002). ISO9000 - http://www.iso.ch/iso/en/iso9000-
14000/iso9000/iso9000index.html.
Kang, M. H., J. N. Froscher, et al. (1999). A Multilevel Secure Workflow Management System.
Proceedings of the 11th Conference on Advanced Information Systems Engineering, Heidelberg,
Germany.
Kao, B. and H. GarciaMolina (1993). Deadline assignment in a distributed soft realtime system.
Proceedings of the 13th International Conference on Distributed Computing Systems.
Klingemann, J., J. Wäsch, et al. (1999). Deriving Service Models in Cross-Organizational
Workflows. Proceedings of RIDE - Information Technology for Virtual Enterprises (RIDE-VE
'99), Sydney, Australia.
Kobielus, J. G. (1997). Workflow Strategies, IDG Books Worldwide.
11
Kochut, K. J., A. P. Sheth, et al. (1999). ORBWork: A CORBA-Based Fully Distributed,
Scalable and Dynamic Workflow Enactment Service for METEOR. Athens, GA, Large Scale
Distributed Information Systems Lab, Department of Computer Science, University of Georgia.
Krishnakumar, N. and A. Sheth (1995). "Managing Heterogeneous Multi-system Tasks to
Support Enterprise-wide Operations." Distributed and Parallel Databases Journal 3(2): 155-186.
Luo, Z. (2000). Knowledge Sharing, Coordinated Exception Handling, and Intelligent Problem
Solving to Support Cross-Organizational Business Processes. Department of Computer Science.
Athens, GA, University of Georgia.
Marjanovic, O. and M. Orlowska (1999). "On modeling and verification of temporal constraints
in production workflows." Knowledge and Information Systems 1(2).
Miller, J. A., J. S. Cardoso, et al. (2002). Using Simulation to Facilitate Effective Workflow
Adaptation. Proceedings of the 35th Annual Simulation Symposium (ANSS'02), San Diego,
California.
Miller, J. A., M. Fan, et al. (1999). Security for the METEOR Workflow Management System.
Athens, GA, Department of Computer Science, University of Georgia: 33.
Miller, J. A., R. Nair, et al. (1997). JSIM: A Java-Based Simulation and Animation Environment.
Proceedings of the 30th Annual Simulation Symposium, Atlanta, GA.
Miller, J. A., D. Palaniswami, et al. (1998). "WebWork: METEOR2's Web-based Workflow
Management System." Journal of Intelligence Information Management Systems: Integrating
Artificial Intelligence and Database Technologies (JIIS) 10(2): 185-215.
Miller, J. A., A. F. Seila, et al. (2000). "The JSIM Web-Based Simulation Environment." Future
Generation Computer Systems: Special Issue on Web-Based Modeling and Simulation 17(2):
119-133.
Nahrstedt, K. and J. M. Smith (1996). "Design, Implementation and Experiences of the OMEGA
End-point Architecture." IEEE JSAC 14(7): 1263-1279.
Nair, R., J. A. Miller, et al. (1996). A Java-Based Query Driven Simulation Environment.
Proceedings of the 1996 Winter Simulation Conference, Colorado, CA.
Nelson, E. C. (1973). A Statistical Basis for Software Reliability, TRW Software Series.
Pozewaunig, H., J. Eder, et al. (1997). ePERT: Extending PERT for workflow management
systems. First European Symposium in Advances in Databases and Information Systems
(ADBIS), St. Petersburg, Russia.
Reichert, M. and P. Dadam (1998). "ADEPTflex -- Supporting Dynamic Changes of Workflows
Without Losing Control." Journal of Intelligent Information Systems - Special Issue on Workflow
Managament 10(2): 93-129.
12
Rommel, G. (1995). Simplicity wins: how Germany's mid-sized industrial companies succeed.
Boston, Mass, Harvard Business School Press.
Sadiq, S., O. Marjanovic, et al. (2000). "Managing Change and Time in Dynamic Workflow
Processes." The International Journal of Cooperative Information Systems 9(1, 2).
Son, J. H., J. H. Kim, et al. (2001). "Deadline Allocation in a Time-Constrained Workflow."
International Journal of Cooperative Information Systems (IJCIS) 10(4).
Stalk, G. and T. M. Hout (1990). Competing against time: how timebased competition is
reshaping global markets. New York, Free Press.
Weikum, G. (1999). Towards guaranteed quality and dependability of information systems.
Proceedings of the Conference Datenbanksysteme in Buro, Technik und Wissenschaft, Freiburg,
Germany.
Zinky, J., D. Bakken, et al. (1997). "Architectural Support for Quality of Service for CORBA
Objects." Theory and Practice of Object Systems 3(1): 1-20.
13