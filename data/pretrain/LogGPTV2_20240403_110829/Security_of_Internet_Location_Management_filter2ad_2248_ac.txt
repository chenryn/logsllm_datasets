The  attacker  needs  to  find  a  correspondent  that  is 
willing to send data streams to unauthenticated recipients. 
Many  popular  web  sites  provide  such  streams.  The 
attacker also  needs to  know the target's IP address but it 
may  attack  an  entire  network  by  redirecting  data  to  a 
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
nonexistent  address  and  congesting  the  link  toward  the 
network.  In  some  cases,  a  firewall  on  the  border  of  the 
target  network  may  be  able  to  filter  out  packets  to 
nonexistent addresses. However, IPv6 addressing privacy 
features [ND01] make such filtering difficult.  
4.2. Return Routability 
The  most  effective  way  to  limit  opportunities  for 
bombing  attacks  is  to  test  the  return  routability  (RR)  of 
the mobile's new address. That is, the correspondent sends 
a  packet  with  a  secret  value  to  the  new  location  and 
accepts  the  binding  update  only  if  the  mobile  is  able  to 
return the value (or its hash). This proves that the mobile 
can receive packets at the address  where it claims to be. 
Some malicious entities (e.g. ones on the correspondent's 
local network) may be able to capture a test packet but the 
number of potential attackers is dramatically reduced.  
Figure 2(b) shows how a BU is authenticated using two 
secrets,  which  the  correspondent  sends  to  the  mobile's 
home and care-of addresses. The secret Kb sent directly to 
the care-of address forms the RR test. The RR test can be 
seen  as  a  variation  of  the  cookie  exchange,  which  has 
been used as part of the TCP handshake [SKK+97] and in 
authentication protocols, including Photuris [KS99].  
In MIPv6, the expiry of a binding cache entry poses a 
special  problem.  Deleting  the  cache  entry  effectively 
means that the mobile's new address defaults to the home 
address,  but  since 
the  mobile  may  have  become 
unreachable,  it  is  not  always  possible  to  test  RR  for  the 
new  address.    One  solution  would  be  to  mark  the  cache 
entry  as  invalid  and  to  stop  sending  data  to  the  mobile 
until the RR test succeeds. This could, however, mean that 
some cache entries are never deleted. Instead, we suggest 
doing an additional  RR test  for the  home address during 
every binding update so that when the cache entry needs 
to  be  deleted  for  any  reason  (e.g.  BU  cancellation, 
expiring  cache  entry,  or  failing  BU  authentication),  a 
successful RR test for the home address has always been 
performed  recently  and  the  cache  entry  can  be  deleted 
immediately.  This 
to 
limits  bombing-attack 
networks where attacker has recently visited.  
targets 
In routing-based authentication (Section 3.3) where the 
correspondent sends a plaintext key to the  mobile  via its 
home  address,  the  same  secret  key  can  also  serve  as  the 
RR test for the home address. Thus, the correspondent in 
Figure  2(b)  does  test  return  routability  of  both  the  home 
and care-of addresses.  
It  is  also  important  to  note  that  the  return  routability 
test  is  complementary  to  CGA-based  BU  authentication, 
which does not prevent bombing of the home network. 
4.3. Relation to Flow Control 
It  can  be  argued  that  the  bombing  attacks  are  a  flow-
control issue and therefore should be taken care of in the 
transport  layer  rather  than  in  the  IP  layer.  That  is,  when 
sending  a  data  flow  into  a  new  route,  the  correspondent 
should  first  verify  that  this  route  can  accept  the  data.  It 
could  start  by  sending  a  single  packet  and  gradually 
increase  the  transmission  rate.  For  TCP  streams,  the 
natural solution would be to reset the TCP window size to 
one packet when the mobile moves. This would, in effect, 
test  return  routability  of  the  new  route  before  sending 
large amounts of data into it. 
Unfortunately, adding a secure RR test to all transport 
protocols  and  changing  the  existing  implementations 
would  not  be  possible  in  practice.  Moreover,  many 
transport-layer  protocols  either  do  not  practice  TCP-
compatible  congestion  control  or  allow  spoofing  of 
acknowledgments.  Therefore,  the  most  practical  solution 
is to do the return routability test in the IP layer. 
5. DoS Attacks against BU Authentication 
integrity  of  data  can  sometimes 
Security protocols that successfully protect the secrecy 
and 
the 
participants'  vulnerability  to  denial-of-service  attacks.  In 
fact,  the  stronger  –  and  more  resource  consuming  –  the 
authentication, the easier it may be for an attacker to use 
the  protocol  features  to  exhaust  the  mobile's  or  the 
correspondent's resources. 
increase 
5.1. Inducing Unnecessary Authentication 
When a MIPv6 mobile node receives an IP packet from 
a  new  correspondent  via  its  home  network,  it  may 
automatically send a binding update to the correspondent. 
The  attacker  can  exploit  this  by  sending  the  mobile 
spoofed  IP  packets  (e.g.  ping  or TCP  SYN  packets)  that 
appear  to  come  from  different  correspondent  addresses. 
The attacker will automatically start the BU protocol with 
all  these  correspondents.  If  the  correspondent  addresses 
are real addresses of existing IP nodes, most instances of 
the  BU  protocol  will  complete  successfully.  The  entries 
created  into  the  binding  caches  are  correct  but  useless. 
This  way,  the  attacker  can  induce  the  mobile  to  execute 
the  BU  protocol  unnecessarily,  which  will  drain  the 
mobile's resources. A correspondent (i.e. any IP node) can 
be similarly  targeted by inducing binding updates  with a 
large number of mobiles.  
This  attack  is  possible  against  any  BU  authentication 
protocol. The more resources the protocol consumes, the 
more  serious  the  attack.  Hence,  a  strong  cryptographic 
authentication  protocol  can  be  more  vulnerable  to  the 
attack than a weak one or unauthenticated BUs. While we 
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
(a)
Home
2
secure
tunnel
1
MN
(b)
Home
2a
1
2b
MN
1b
2b
MN
(c)
1a
2a
Home
CN
3
CN
3
CN
3
(1) BU
(2) K
(3) BU, MACK(BU)
(1) BU
(2a) Ka
(2b) Kb
(3) BU, MACKa (Kb, BU)
(1a) BU
(1b) BU
(2a) Ka, i
(2b) Kb, j
(3) BU, MACKa (Kb, BU), i, j
Figure 2.  Evolution of the BU protocol 
use  MIPv6  as  the  case  study,  it  is  likely  that  similar 
vulnerabilities  will  be  created  by  other 
location 
management  schemes  where  the  attacker  can  induce 
unnecessary location updates and authentication.  
In  Section  5.2,  we  will  cover  some  additional  DoS 
attacks  and  defense  mechanisms.  However,  these  attacks 
are  generally  no  more  serious  than  the  one  described  in 
this section. It usually does not pay to defend against the 
other  types  of  attacks  unless  we  can  also  prevent  the 
attack of this section. 
5.2. Consuming Authentication Resources 
Authentication  protocols  are  often  vulnerable 
to 
flooding  attacks  that  exploit  the  protocol  features  to 
consume the target node's resources. Computing power is 
consumed by flooding the node with messages that cause 
it  to  perform  expensive  cryptographic  operations.  If  a 
node  creates  a  state  during  protocol  execution,  it  is  also 
vulnerable 
the  attacker  starts  an 
excessive  number  of  protocol  runs  and  never  finishes 
them.  
to  attacks  where 
In  order  to  exhaust  the  computing  power  of  modern 
processors,  the  attacker  needs  to  get  them  to  perform 
public-key cryptographic operations. It may, for example, 
spoof  a  large  number  of  signed  messages  where  the 
signatures  are  replaced  by  random  numbers.  The  target 
node  will  verify  the  signatures  before  rejecting  the 
messages. Symmetric encryption, hash functions and non-
cryptographic  computation  are  rarely  the  performance 
bottleneck.  However,  if  the  cryptographic  library  is 
optimized only for bulk data, it may behave inefficiently 
when  the  functions  are  invoked  on  millions  of  short 
messages and the keys are changed on every invocation.  
5.3. Reflection and Amplification 
Attackers sometimes try to hide the source of a packet 
flooding attack by reflecting  the traffic  from other nodes 
[Pax01,  Sav02].  That  is,  instead  of  sending  a  flood  of 
packets  directly  to  the  target,  the  attacker  sends  data  to 
other  nodes  and  tricks  them  into  sending  the  same 
number,  or  more,  packets  to  the  target.  Reflection  can 
hide  the  attacker's  address  even  when  ingress  filtering 
prevents 
is 
particularly  dangerous  if  the  packets  can  be  reflected 
multiple times, if they can be sent into a looping path, or 
if  the  nodes  can  be  tricked  into  sending  many  more 
packets than they receive from the attacker. Such features 
can  be  used  to  amplify  the  amount  of  attack  traffic  by  a 
significant  factor.  When  designing  protocols,  one  should 
avoid creating services that can be used for reflection and 
amplification attacks. 
spoofing.  Reflection 
address 
source 
The location management protocols could also be used 
for  reflection.  For  example,  the  correspondent  in  Figure 
2(b) responds to the initial packet by sending two packets 
to the mobile (one to the home address and one to the new 
address). This can be used to amplify a flooding attack by 
a factor of two. Furthermore, if public-key authentication 
is  used,  the  packets  sent  by  the  correspondent  may  be 
significantly larger than the one that triggers them.  
6. Preventing Resource Exhaustion 
In  this  section,  we  discuss  defenses  against  the  DoS 
attacks described in the previous section. As it usually is 
impossible  to  completely  prevent  resource-exhaustion 
attacks,  the  right  approach  is  to  increase  the  cost  and 
difficulty of the attacks and to mitigate their effects.  
6.1. Delaying Commitment 
A  standard  protection  against  DoS  attacks  is  to  delay 
committing one's resources to the protocol until the other 
party has provided some assurance of its honesty.  
to  avoid 
One  way 
the  unnecessary  public-key 
operations is to require a weaker authentication, such as a 
routing-based  method,  before  the  expensive  computation 
[Mea99].  This  either  limits  the  number  of  attackers  who 
can get to the public-key stage or increases the cost of the 
attack  by  forcing  the  attacker  to  break  the  weaker 
Proceedings of the 18th Annual Computer Security Applications Conference (ACSAC(cid:146)02) 
1063-9527/02 $17.00 ' 2002 IEEE 
mechanism  first.  For  example,  a  MIPv6  binding  update 
authentication  protocol  could  start  with  a 
return 
routability  test  (Section  4.2)  and  continue  with  a  public-
key authentication only if the RR test succeeds. 
Attacks that exhaust state storage can be prevented by 
making  the  protocol  parties  stateless  [AN97]  until  the 
honesty  of  the  other  participant  has  been  proved.  While 
careful  management  of  the  state  data  can  solve  the 
problem,  nodes  with  little  memory  and  implementations 
aiming  for  simplicity  are  particularly  likely  to  find  the 
stateless approach easier.  
There  are  some  difficulties  in  making  the  MIPv6 
binding update authentication protocol stateless. The main 
problem  is  that  usually  only  the  responder  can  be 
stateless,  and  it  is  not  clear  which  party  initiates  the  BU 
process  and  which  one  responds.  Although  the  mobile 
normally initiates the authentication, this may be triggered 
by  a  packet  belonging  to  another  protocol  that  arrived 
from the correspondent via the home agent. Moreover, if a 
packet  sent  by  the  correspondent  triggers  a  BU,  the 
correspondent's IP layer does not  know that this  was the 
case  because  the  IP  layer  is  stateless  and  does  not 
maintain  a  history  of  sent  packets.  For  simplicity,  we 
prefer  to  make  the  correspondent  stateless  until  the  BU 
has  been  authenticated  and  will  not  try  to  guess  which 
party  initiated  the  protocol  and  whether  the  statelessness 
is necessary in the particular protocol run or not.  
One  way  in  which  the  correspondent  can  remain 
stateless is to derive the secret values Ka and Kb of Figure 
2(b)  with  a  one-way  function  from  a  secret  value  Ni 
known only by the correspondent: 
Ka = h( "Ka" | Ni | mobile's home address) 
Kb = h( "Kb" | Ni | mobile's care-of address) 
The  correspondent  uses  the  same  value  of  Ni  for  all 
mobiles.  It  can  discard  Ka  and  Kb  after  sending  the 
messages  2a  and  2b  to  the  mobile  because  it  can 
recompute  the  values  after  receiving  the  final  message. 
The correspondent generates a new secret Ni periodically, 
which guarantees the freshness of Ka and Kb. The index i 
helps the correspondent to identify the correct value of Ni 
if it happens to generate a new Ni between messages 2 and 
3. Addition of this index is the only change needed to the 
messages of the stateful protocol. 
Cryptographic  puzzles  [JB99,  ANL00]  are  another 
proposed  protection  against  resource-exhaustion  attacks. 
A server requires its clients to solve a puzzle, e.g. brute-
force  search  for  some  input  bits  of  a  one-way  function, 
before committing its own resources to the protocol. The 
server can adjust the difficulty of the puzzles according to 
its load. Solving  the puzzle creates a small cost  for each 
protocol 
invocation,  which  makes  flooding  attacks 
expensive  but  has  little  effect  on  honest  nodes.  The  BU 
protocol  suggested  in  [MC02]  relies  on  such  puzzles  for 
DoS  protection.  Unfortunately, 
several 
there  are 
drawbacks to this strategy in location management. First, 
the IP layer does not know which node is the server (i.e. 