servable traffic patterns in the network. However, the cryptojacking
attackers may harness some unpopular mining pools with unknown
communication protocols, making the traffic easy to escape naïve
flow-level detection approaches.
Figure 2: Network messages for mining.
To make the detection of crypto-mining traffic robust, we study
the communication principles between the miners and the mining
pool and present the results in Figure 2. No matter what types of
protocols the mining pool utilizes, there should be at least four
types of messages to cover the necessary operations:
can be as small as 75 bytes per message;
• login message, enabling the miners to join the mining pool,
• login confirmation message, confirming the login status, some-
• assignment allocation message, allocating the most recent
• result message, returning the calculated result to the mining
mining task to the miner, should at least have 285 bytes;
times comes with an assignment allocation;
pool, usually has more than 120 bytes.
The same type of messages usually have similar lengths. Besides,
the login message and the confirmation message only appear once
during each connection. Thus, assignment allocation messages and
result messages dominate the whole mining process. Moreover, the
mining pool will adjust the sending rate of assignment allocation
messages to ensure the miner always have valid unfinished tasks.
The blockchain is also growing continuously, making the allocated
assignments easy to expire. Therefore, the frequency of assignment
allocation messages is significantly higher than the frequency of
result messages.
To profile these features and further leverage them to identify
the crypto-mining traffic, we apply fast Fourier transform (FFT) to
rapidly convert packets from the time domain to a representation in
the frequency domain. Traffic generated from other activities, such
as browsing webpage, DNS queries, and Telnet remote controlling,
tends to have complicated and randomized frequency patterns. Con-
versely, mining traffic has clean and periodic frequency patterns,
making it easy to be identified by matching the frequency profiles
with preset threshold values.
We define a sliding time window to monitor the ongoing traf-
fic. During each time window t, we collect a set of packets P
(P = {p1, p2, p3, ..., pn}) from the same source IP and source port
number to the same destination IP and destination port number,
then represent them in a domain of time and number of bytes. Once
this time window is reaching the end, we use FFT to represent P
Normal deviceMining poolNormal deviceRouterPacket headers (sFlow)... ...Cryptojacked device Cryptojacked device Proposed approachRewardsBroswer-basedormalware-basedcryptojackingXMR walletAttackerCryptojackingscript/malwareMining poolMinerLoginLogin Conﬁrmation/Assignment  AllocationWallet_ID: "XXX...XXX.worker_id",Method: "login",Algo: ["algo1",...,"algon"],......ID: "J_1", Job_ID: "JOB_1",Blob: "BLOB_1", Height: "H_1"Algo: ["algo1"], Target: "T_1"......Assignment AllocationJob_ID: "JOB_1",Blob: "BLOB_1", Height: "H_1"Algo: ["algo1"], Target: "T_1"......Assignment Allocation......ResultJob_ID: "JOB_n",Nonce: "XXX...X", Result: "HASH_n"............Necessary ﬁelds in the messagePoster Session ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan908POSTER: Content-Agnostic Identification of Cryptojacking in Network Traffic
ASIA CCS ’20, October 5–9, 2020, Taipei, Taiwan
Our approach collects variation vectors as time-series data, then
inputs these vectors to a pre-trained recurrent neural network
(RNN) model to distinguish cryptojacking traffic from legitimate
crypto-mining traffic. Since there are no existing cryptojacking
traffic datasets available in public repositories, we simulate both
legitimate crypto-mining traffic and cryptojacking traffic to train
the model. We will publish the dataset we use when the project is
finished.
3 CONCLUSION AND FUTURE WORK
Cryptojacking attacks are becoming far more sophisticated and
threatening than before. To solve this problem, we propose a privacy-
preserving cryptojacking detection approach that only relies on
content-agnostic network traffic flows to conduct detections. It
applies a two-phase procedure to identify cryptojacking traffic,
which first selects crypto-mining traffic by profiling the message
frequency, then analyzes the frequency variances to recognize cryp-
tojacking patterns.
Our approach is efficient and easy to deploy. With the computing
power of a personal computer, it is capable of providing real-time
detection of cryptojacking for a company-level network.
In the future, we will keep polishing and testing this approach in
both simulated and realistic environments. To enhance the robust-
ness of our approach, we will simulate the cryptojacking activities
under different hardware, software, and network environments.
Besides, we want to evaluate this approach comprehensively by
measuring the system overheads, the detection accuracies, and the
compatibility with different network infrastructures.
ACKNOWLEDGMENTS
This material is based upon work supported by Ripple Graduate
Research Fellowship. Any opinions, findings, and conclusions or
recommendations expressed in this material are those of the authors
and do not necessarily reflect the views of Ripple Labs, Inc.
REFERENCES
[1] Benedict Alibasa. 2019.
Hackers
Infect 50,000 Servers With So-
https://www.coindesk.com/
phisticated Crypto Mining Malware.
hackers-infect-50000-servers-with-sophisticated-crypto-mining-malware.
[2] Hamid Darabian, Sajad Homayounoot, Ali Dehghantanha, Sattar Hashemi, Hadis
Karimipour, Reza M Parizi, and Kim-Kwang Raymond Choo. 2020. Detecting Cryp-
tomining Malware: a Deep Learning Approach for Static and Dynamic Analysis.
Journal of Grid Computing (2020), 1–11.
[3] Yebo Feng, Jun Li, Lei Jiao, and Xintao Wu. 2019. BotFlowMon: Learning-based,
Content-Agnostic Identification of Social Bot Traffic Flows. In IEEE Conference on
Communications and Network Security (CNS).
[4] Geng Hong, Zhemin Yang, Sen Yang, Lei Zhang, Yuhong Nan, Zhibo Zhang, Min
Yang, Yuan Zhang, Zhiyun Qian, and Haixin Duan. [n.d.]. How you get shot in the
back: A systematical study about cryptojacking in the real world. In Proceedings
of the 2018 ACM SIGSAC Conference on Computer and Communications Security.
[5] Yessi Bello Perez. 2019. Unsuspecting victims were cryptojacked 52.7 million
times in the first half of 2019. https://thenextweb.com/hardfork/2019/07/24/
cryptojacking-cryptocurrency-million-hits-first-half-2019/.
[6] Ruben Recabarren and Bogdan Carbunar. 2017. Hardening stratum, the bitcoin
pool mining protocol. Proceedings on Privacy Enhancing Technologies 3 (2017),
57–74.
[7] Rashid Tahir, Sultan Durrani, Faizan Ahmed, Hammas Saeed, Fareed Zaffar, and
Saqib Ilyas. 2019. The browsers strike back: countering cryptojacking and parasitic
miners on the web. In IEEE Conference on Computer Communications.
[8] Said Varlioglu, Bilal Gonen, Murat Ozer, and Mehmet F Bastug. 2020. Is Crypto-
jacking Dead after Coinhive Shutdown? arXiv preprint arXiv:2001.02975 (2020).
[9] Aaron Zimba, Zhaoshun Wang, Mwenge Mulenga, and Nickson Herbert Odongo.
2018. Crypto mining attacks in information systems: An emerging threat to cyber
security. Journal of Computer Information Systems (2018), 1–12.
Figure 3: Generation of the variation vectors. The frequency
curves in this figure only show the relevant peaks. Other ir-
relevant parts are removed in the preprocessing step.
in a domain of frequency and number of bytes. We call this repre-
sentation as the profile of P. In the end, we identify P as packets
generated by crypto-mining if they have a similar profile with the
predefined crypto-mining profile.
2.2 Phase Two: detection of cryptojacking
In Phase Two, the proposed method inputs the detected crypto-
mining traffic and output the identified cryptojacking traffic among
them.
An essential concept of crypto-mining is the hash rate, the speed
at which a device is completing an operation in the crypto-mining
code. We found that a higher hash rate will trigger higher frequen-
cies of result messages and assignment allocation messages. Fur-
thermore, after studying the cryptojacking activities, we found that
they differ from legitimate crypto-mining activities in the following
aspects:
• the hash rate of legitimate crypto-mining is more stable
than the hash rate of cryptojacking because cryptojacking
scripts usually rely on some existing software running in
the system such as the browser, terminal, or Apache server,
which makes the computing resources devoted to the mining
calculation erratic;
• the hash rate of cryptojacking is usually lower than the hash
rate of legitimate crypto-mining, since cryptojacking scripts
or malware cannot easily invoke GPU or dedicated ASIC
chips to mining, further leading to a lower message rate.
With these intuitions, we extract the variation vectors from
different time windows to profile the changes in hash rates. For
time window tn and tn+1, we generate a variation vector vn (vn =) to describe the changes in frequencies of result messages
(rn) and assignment allocation messages (an). Figure 3 shows an
example of the variation vector generation, where we derive two
variation vectors from time window t1, t2, and tn. rn is the absolute
difference between the result message frequencies in tn and tn+1.
an is the absolute difference between the assignment allocation
message frequencies in tn and tn+1.
t2t3t1......Fast Fourier Transform(FFT)FrequencyBytesFrequencyBytesFrequencyBytesTrafﬁcLogin messageResult messageAssignment Allocation messager1r2a1a2Poster Session ASIA CCS '20, October 5–9, 2020, Taipei, Taiwan909