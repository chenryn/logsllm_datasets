--
--
--
·四-
·囚跚
翩翩跚
·四跚
-圈
阴吨tnName
W由Sorvor info.php I由"归P"P C回国白n
Nassus SYN scannsr
Browsable Webαrectori&雹
CGI Gør睛也同eclab惚阳阳"创e CGt G酬而cT，回sLoo.d EstlmatJon (，州回"1
E"，、al URLs
HπP Methods Al阳w回伊.. dldV，街1"
Hy回rTOlCt Trnnsfor Protα回 归π同 Informo.llon
PHPVer事k>"
W曲mlrrorinQ
阴uginFarr幽y Covnt
C四 a""揭
Pon scanners
001_
CGlabusos
CGl nbusos
Wob5eN审雹
叭''''''''''酬啤
、rvobSorvars
、loIobSorvors
响leb5e<ve<宫
队lebServ&rs
HostDetaIls
IP; 52.4.85.159
， c。们r""山同国
DNS: ec2-52-4-85-159∞mpute-
。5，
5'''''
1.amaz。明明∞m
LinuxKern创2.0
τ。day at4:33?M
V川份。mbllHJes
图 1 5.5 Web 应用程序漏洞扫描 ， 扫描的服务器与 图 1 5. 1 和 图 1 5.4 中 的服务器相 同
注意 :
是不是感觉网络漏洞扫描和 Web 漏洞扫描听起来差不多 呢? 这是因 为 它们确实差不 多 ! 它们是
两个运行在一台服务器上的探测服务， 用 于检测 己去口的漏洞 。 所不 同 的是， 网络漏洞扫描通常不会
深入到 Web 应 用 程序 的 结构 ， 而 Web 应用程序扫描不会查看那些支持 Web 服务以外的服务。 许多
网络漏洞扫描器也会执行基本的 Web 漏洞扫描任务， 但是深入的 Web 漏洞扫描需要专 门 的 、 专用
的 Web 漏 洞扫描工具才行。
你可能 已经注意到 ， Nessus 漏洞扫描器既可以执行图 1 5.4 所示的 网 络漏洞扫描， 又可以执行图
1 5.5 所示的 Web 漏洞扫描。 Nessus 是一个可以 进行两种类型扫描的混合工具。
对于大多数工具， 各种漏洞扫描器的功能各异。 使用扫描器前， 应该先研究一下 ， 以确保符合
你的安全控制 目 标。
Web 漏洞扫描是组织的安全评估和测试程序的一个重要组成部分。 在下列情况下运行扫描是很
好的:
•
•
•
•
当开始执行第一次 Web 漏洞扫描时， 扫描所有的应用 程序 。 这将检测到应用程序的遗留
问题。
将任何新的应用程序第一次移交生产环境之前进行扫描。
在代码更改进入生产环境之前扫描任何修改 的应用程序 。
在循环的基础上扫描所有的应用程序。 有限的资源可能需要在基于应用程序优先级的情况
下安排这些扫描。 例如， 可能希望扫描那些经常需要与敏感信息交互的 Web 应用程序 。
在某些情况下 ， 可能需要 Web 应用程序扫描来满足合规要求。 例如， 第4章 "法律、 法规和合
规 " 中讨论的支付卡行业数据安全标准(PCIDSS)要求组织至少每年进行一次 Web 应用程序漏洞扫
描 ， 或者安装专用 的 Web 应用程序防火墙来增加对 Web 漏洞的额外保护层 。
第 1 5 章 安全评估和测试
1 5.2.2 渗透测试
渗透测试超越了漏洞测试技术， 因 为它实际上试图利用系统漏洞。 漏洞扫描只是调查漏洞的存
在， 通常不会对 目 标系统采取进攻行动(也就是说 ， 一些漏洞扫描技术可能会破坏系统， 尽管这些选
项通常在默认情况下是禁用的)。 另一方面， 安全专家进行渗透测试是为了试图让安全控制失效， 进
入 目 标系统或应用程序来展示缺陷 。
渗透测试需要训练有素的安全专家集中注意力来应对比漏洞扫描更广的范围。 当执行渗透测试
时 ， 安全专家通常的 目 标是一个系统或一组系统 ， 并使用许多不同 的技术来访问。 这个过程可能
包括:
• 执行基本侦察来确定系统功能(如访 问托管在系 统上的网站)
• 执行网络发现扫 描 以识别 开发端 口
• 执行网络漏洞扫描以识别 没有应用补丁的漏洞
• 执行 Web 应用程序漏洞扫描 以识别 Web 应用程序缺陷
• 使用开发工具 自 动试图破坏系统安全
• 尝试手动探测和攻击
渗透测试人员通常使用一个名为 Metasploit 的工具来自 动对 目 标系统执行攻击。 如 图 1 5.6 所示，
Metasploit 使用一门脚本语言来允许 自动执行常见的攻击， 以节省测试人员(和黑客1)大量的时间 ， 因
为执行攻击时涉及的许多烦琐步骤被省略 了 。
图 1 5.6 Metasploit 自 动系统漏洞发现工具允许攻击者迅速执行对 目 标系统的常见攻击
渗透测试人员可能是公司 员工， 他们执行这些测试作为职责的一部分， 也可能是由聘请的外部
顾问执行渗透测试。 测试通常分为三组:
451
452
CISSP 官方学 习指南(第 7 版)
自盒渗透测试 为攻击者提供了 目 标系统的详细信息 。 这绕过了 攻击之前经常会有的许多侦察
步骤， 缩短了 攻击时间并增加 了 发现安全漏洞的 可能性。
灰盒渗透测试 也称为部分知识测试， 有时会选择这些来平衡白盒和黑盒渗透测试的优缺点。
如果想要黑盒渗透测试结果， 但是成本或时间有限， 就意味着需要一些知识来完成测试， 这种情况
特别常见 。
黑盒渗透测试 攻击之前不为攻击者提供任何信息。 这模拟了外部攻击者在进行攻击之前试图
获取业务和技术环境信息 的情况。
渗透测试耗时较长， 并且需要专门 的资源， 但它们在 良好的信息安全测试幸自字的持续运行中扮
演着重要角色。
1 5.3 测试你的 软件
软件是系统安全的一个关键组成部分。考虑在整个现代企业中使用的许多应用程序的常见特点:
• 软件应用程序通常有特权进入操作系统、 硬件和其他资源。
• 软件应用程序经常处理敏感信息， 其中包括信用 卡号码、 社会保障号和专利业务信息。
• 许多软件应用程序都依赖于也包含敏感信息 的数据库 。
• 软件是现代企业的核心， 执行关键业务功能。 软件故障可以扰乱企业业务 ， 带来非常严重
的后果。
仔细测试软件对每一个现代组织的机密性、 完整性和可用性要求都是至关重要的。 上述几点只
是集中 的几条原因。 在本节中 ， 你将了解可能需要整合到组织的软件开发生命周期中各种类型的软
件测试。
注意 :
本章主要讲解软件测试主题。 在第 20 章 "软件开发安全" 中可以找到 更深层次的软件开发生命
周 期(SDLC)和软件安全问题。
1 5.3. 1 代码审查和测试
软件测试项 目 的最关键部件之一是进行代码审核和测试。 这些程序在将代码移交生产环境之前
由第三方对开发人员执行的工作进行评审。 代码审核和测试可能会在缺陷生效并对经营产生负面影
响之前发现安全、 性能或可靠性缺陷。
1 . 代码审查
代码审查是软件评估项 目 的基础。 在代码审查(也称为 " 并行审核" )期间 ， 由除了写代码的人
以外的开发人员进行审查、 查找缺陷。 代码审查的结果可能是应用程序被批准进入生产环境， 或他
们可能把代码发回最初的开发人 员 ， 井对审 查中发现的 问 题提供返工建议。
代码审查可能会有许多不同的形式， 不同组织之间的形式也是不同的。 最正式的代码评审过程
称为 Fagan 检查， 遵循如下严格的审查和测试过程， 有6个步骤:
(1) 规划
(2) 概述
(3) 准备
(4) 检查
(5) 返工