title:Measurement and analysis of real-world 802.11 mesh networks
author:Katrina LaCurts and
Hari Balakrishnan
Measurement and Analysis of Real-World 802.11 Mesh
Networks
Katrina LaCurts and Hari Balakrishnan
MIT Computer Science and Artiﬁcial Intelligence Lab
Cambridge, Massachusetts, U.S.A.
{katrina, hari}@csail.mit.edu
ABSTRACT
Despite many years of work in wireless mesh networks built using
802.11 radios, the performance and behavior of these networks in
the wild is not well-understood. This lack of understanding is due
in part to the lack of access to data from a wide range of these net-
works; most researchers have access to only one or two testbeds
at any time. In recent years, however, 802.11 mesh networks net-
works have been deployed commercially and have real users who
use the networks in a wide range of conditions. This paper analyzes
data collected from 1407 access points in 110 different commer-
cially deployed Meraki [28] wireless mesh networks, constituting
perhaps the largest study of real-world 802.11 networks to date.
After analyzing a 24-hour snapshot of data collected from these
networks, we answer questions from a variety of active research
topics, such as the accuracy of SNR-based bit rate adaptation, the
impact of opportunistic routing, and the prevalence of hidden ter-
minals. The size and diversity of our data set allows us to analyze
claims previously only made in small-scale studies. In particular,
we ﬁnd that the SNR of a link is a good indicator of the optimal
bit rate for that link, but that one could not make an SNR-to-bit
rate look-up table that was accurate for an entire network. We also
ﬁnd that an ideal opportunistic routing protocol provides little to no
beneﬁt on most paths, and that “hidden triples”—network topolo-
gies that can lead to hidden terminals—are more common than sug-
gested in previous work, and increase in proportion as the bit rate
increases.
Categories and Subject Descriptors
C.4 [Performance of Systems]: Measurement techniques
General Terms
Measurement, Performance
Keywords
802.11, Bit Rate Adaptation, Hidden Terminals, Measurement,
Mesh, Opportunistic Routing, Wireless
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’10, November 1–3, 2010, Melbourne, Australia.
Copyright 2010 ACM 978-1-4503-0057-5/10/11 ...$10.00.
1.
INTRODUCTION
Despite the popularity of 802.11 networks, very little has been
published about their performance in production settings. One of
the main challenges has been the lack of a network provider with
a large and diverse footprint, who has taken the care to provide a
signiﬁcant amount of instrumentation and logging. The data set
analyzed in this paper (discussed in detail in Section 3) includes
measurements collected from 110 different production Meraki [28]
wireless mesh networks located around the world (see Figure 1).
These networks are used by real clients; they are not testbeds, and
do not suffer from researchers setting up the nodes in particular
ways, inadvertently introducing biases. It is an “in situ” study, and
as such, it is larger in scale and diversity than any previous study of
which we are aware.
Although there are many interesting topics worthy of investiga-
tion, we study three that have seen a great deal of activity in recent
years: bit rate adaptation protocols [4, 21, 38], opportunistic mesh
network routing protocols [7, 9], and MAC protocols to cope with
hidden terminals [17]. We investigate the following questions, with
the intent of utilizing our data set to answer them on a larger scale
than previous work.
1. How does the optimal bit rate depend on the SNR across a
range of networks? A good bit rate adaptation scheme is
the most signiﬁcant contributor to high throughput in 802.11
networks. Because the APs in our data set are stationary,
one might expect the SNR to be a good determinant of the
optimal bit rate. If that were the case, one could streamline
bit rate adaptation within the mesh by either eliminating the
need for probing to ﬁnd the best bit rate, or using the SNR
to determine the bit rates that are most likely to be the best
and only probing this set. Limiting the number of probes
would be particularly beneﬁcial for 802.11n, which has sev-
eral dozen bit rate conﬁgurations.
Indeed, results from small testbeds have indicated that the
SNR can be used effectively in bit rate adaptation [10, 13, 18,
21, 33, 39]. We seek to conﬁrm this ﬁnding on a larger scale,
as well as to determine how speciﬁc the training environment
needs to be. For example, is the SNR-to-best-bit-rate map-
ping the same for an entire network, or must we train on each
link individually?
2. How well are opportunistic routing schemes likely to work in
practice? What beneﬁt would they observe over traditional
single-path routing using the expected number of transmis-
sions [12] or expected transmission time [6] metrics? Op-
portunistic routing has been shown to be beneﬁcial on certain
topologies [7, 9], but how often do such conﬁgurations arise
in production deployments?
123surprising, but what is noteworthy is that there is a high vari-
ance:
the mean number of nodes that can hear each other
reduces, but the standard deviation is large. This variance im-
plies that there are node pairs that are able to hear each other
at a higher bit rate but not at a lower one at around the same
time, most likely because of differences in modulation and
coding (e.g., spread spectrum vs. OFDM). As a result, one
cannot always conclude that higher bit rates have poorer re-
ception properties than lower ones under similar conditions.
The rest of this paper is organized as follows. After discussing
related work in the next section, we describe the relevant features
of our data set in Section 3. Section 4 analyzes the performance of
various bit rates and how it relates to SNR, Section 5 discusses the
performance of opportunistic routing vs.
traditional routing, and
Section 6 analyzes the frequency of hidden triples. We conclude in
Section 7.
2. RELATED WORK
We break related work into four sections. First, we discuss gen-
eral wireless measurement studies. Then we address each of the
topics of our study—SNR-based bit rate adaptation, opportunistic
routing, and hidden terminals—in turn.
2.1 Wireless Measurement Studies
Unlike this paper, most previous measurement studies focus on
results from single testbeds in fairly speciﬁc locations, such as uni-
versities or corporate campuses. For example, Jigsaw [11] studies
a campus network with 39 APs. Their focus is merging traces of
packet-level data. As such, they are able to calculate packet-level
statistics that we cannot, but must employ complicated merging
techniques. [14], [15], and [37] also deal with packet-level char-
acteristics, again for only one network.
Henderson and Kotz [19] study the use of a campus network with
over 550 APs and 7000 users. They focus on what types of devices
are most prevalent on the network and the types of data being trans-
ferred. Though they have a fairly large testbed, they cannot capture
inter-network diversity. Other campus studies address questions of
trafﬁc load [20, 34] and mobility [27, 35].
Other wireless measurement papers focus on single testbeds in
more diverse locations. Rodrig et al. measure wireless in a hotspot
setting [31]. They study overhead, retransmissions, and the dynam-
ics of bit rate adaptation in 802.11b/g. [2] studies user behavior and
network performance in a conference setting, as does [22].
Though the aforementioned studies make important contribu-
tions toward understanding the behavior of wireless networks, they
are all limited by the scope of their testbeds. It is not possible to
determine which characteristics of 802.11 are invariant across net-
works with access to only one network. Our data set, however,
gives us this capability.
2.2 SNR-based Bit Rate Adaptation
Most bit rate adaptation algorithms can be divided into two
types: those that adapt based on loss rates from probes, and those
that adapt based on a estimate of channel quality. In algorithms
in the ﬁrst category, for example SampleRate [4], nodes send oc-
casional probes at different bit rates, and switch to the rate that
provides the highest throughput (throughput being a function of
the loss rate and the bit rate). Algorithms in the second category
measure the channel quality in some way (e.g., by sampling the
SNR), and react based on the results of this measurement. In gen-
eral, poor channel quality results in decreasing the bit rate, and vice
versa. Here we take a closer look at studies which use the SNR as
Figure 1: Approximate locations of networks in our data set
(some are co-located). This data set exhibits more geographic
diversity than any previous study of which we are aware.
3. How common are hidden triples—topologies that can lead to
hidden terminals—in these diverse real-world deployments?
Interference caused by hidden terminals can affect even an
ideal rate adaptation protocol, however previous studies have
not provided conclusive answers as to how frequently hidden
terminals occur. For instance, [11], [17], [23], [25], and [29],
report proportions of hidden terminals ranging from 10% to
50% in a particular testbed or network. The disagreements
among these previous studies suggest that the prevalence of
hidden terminals depends heavily on the relative positions of
the nodes and the peculiarities of each network. We mea-
sure how much variation there is in the proportion of hidden
triples across different topologies and how it changes with
the transmit bit rate.
After analyzing a 24-hour snapshot of data from 1407 APs in
110 networks, our main ﬁndings are as follows:
1. When trained on a particular link in a static setting, the SNR
is a very good indicator of the optimal bit rate for 802.11b/g
and a surprisingly good indicator for 802.11n, given the num-
ber of bit rates present. For 802.11b/g networks, we ﬁnd that
when trained on each link, the SNR can frequently predict
the best bit rate over 95% of the time. In 802.11n, we ﬁnd
that a trained look-up table keyed by SNR, while not perfect,
can substantially reduce the number of bit rates that need to
be probed. However, in both 802.11b/g and 802.11n, using
other links in the network to train provides little beneﬁt, in-
dicating that it would not be possible to build one SNR-to-
bit-rate look-up table that worked well for an entire network.
2. Analyzing all networks with at least ﬁve access points, we
ﬁnd that the expected number of transmissions incurred by an
idealized opportunistic routing protocol (such as ExOR [7] or
MORE [9] without overheads) would be rather small, even
if an almost-perfect bit rate adaptation algorithm were used:
there is no improvement for at least 13% of node pairs, and
the median improvement is frequently less than 7%.
3. The prevalence of hidden triples—topologies where nodes A
and B cannot hear each other, but node C can hear both of
them—depends on the bit rate. At the lowest bit rate of 1
Mbit/s, and thresholding on a very low success probability
of 10% (i.e., considering two nodes to be neighbors if they
can hear each other at least 10% of the time), we ﬁnd that the
median number of hidden triples is over 13%. Hidden triples
occur with far greater frequency at higher bit rates.
We also ﬁnd that, as the bit rates increase, the probability
of nodes hearing each other decreases. This result is hardly
124an estimate of channel quality in adaptation algorithms, as this is
the approach we examine in Section 4.
SGRA [39] uses estimates of the SNR on a link to calculate
thresholds for each bit rate, which deﬁne the range of SNRs for
which a particular bit rate will work well. The authors ﬁnd that
the SNR can overestimate channel quality in the presence of inter-
ference. RBAR [21] uses the SNR to derive thresholds, similar to
SGRA. Here, however, it is the SNR at the receiver that is used to
determine these thresholds. The receiver’s desired rate is commu-
nicated via RTS/CTS packets. RBAR also depends on a theoretical
estimate of the BER to select a bit rate. Although using the SNR
at the receiver is likely more accurate than using the SNR at the
sender, this scheme incurs relatively high overhead. OAR [33] is
similar to RBAR in the way in which it uses the SNR, but it main-
tains the temporal fairness of 802.11. Other threshold-based SNR
schemes include [10], [13], and [18].
Though all of these schemes report positive results from SNR-
based rate adaptation, they are all evaluated on research testbeds or
in simulation. None of them have been validated on real networks,
much less across networks. In Section 4, we evaluate the accuracy
of SNR-based bit rate adaptation across many networks. We also
attempt to quantify the losses that are seen when a sub-optimal bit
rate is selected (a sub-optimal bit rate being one that was not the
best for a particular SNR).
Other studies have explored using the SNR for a predictor in
a mobile setting [8, 24]. Because of the nature of our data, we
are only able to make conclusive claims for static environments.
Though we ﬁnd that a per-link SNR works well in these cases, we
make no claims that this ﬁnding would hold in a mobile setting.
Finally, other studies examine using measures of channel quality
other than the SNR for adaptation algorithms, for instance [3], [16],
and [30]. Though potentially more accurate, these measures can be
complicated or difﬁcult to obtain. We focus our efforts in Section 4
towards using the SNR, as we ﬁnd that it is simple to determine and
performs well enough for our needs.
2.3 Opportunistic Routing
In Section 5, we measure the possible improvements that could
be seen in our networks using opportunistic routing. Here, we pro-
vide a brief summary of how opportunistic routing differs from
standard routing. In particular, we focus on the opportunistic rout-
ing protocol ExOR [7] and the contrasting shortest-path routing al-
gorithms using ETX [12] and ETT [6].
The ETX of a path is the expected number of transmissions it
will take to send a packet along that path, based on the delivery
probability of the forward and reverse paths. Unless all links are
perfect, the ETX of a path will be higher than the number of hops
in the path, and it is possible for a path with a large number of hops
to have a smaller ETX metric than a path with fewer hops.
The ETT metric is similar to the ETX metric, except that it allows
for varying bit rates. The ETT of a path is the expected amount
of time it will take to send a packet along that path, based on the
delivery probability of the forward and reverse paths, as well as the
bit rate chosen by each node along the path.
A potential shortcoming of this type of shortest-path routing in
wireless networks is that it does not take into account the broadcast
nature of wireless [7]. When the source sends a packet to the ﬁrst
hop in the path, the packet may in fact reach the second hop since
it was broadcasted. In this case, it is redundant to send the packet
from the ﬁrst hop to the second. Opportunistic routing exploits this
scenario.
ExOR [7], in particular, works as follows. The source node
broadcasts a packet, and a subset of nodes between it and the desti-
nation receive it. These nodes coordinate amongst themselves, and
the node in that subset that is closest to the destination broadcasts
the packet. A subset of nodes receive that broadcast, and so on until
the packet reaches its destination. Note that it is unlikely that short
paths would see much improvement due to opportunistic routing, as
there are not as many hops in the path to skip. It is also important to
point out that the overhead required by ExOR to coordinate packet
broadcasts is not inherent to opportunistic routing. Indeed, there
are opportunistic routing protocols that operate without this type
of coordination [9]. In Section 5.4 we quantify the improvements
that an ideal opportunistic routing protocol (one with no overhead)
could incur over shortest-path routing via ETX or ETT.
2.4 Hidden Terminals
Hidden terminals occur when two nodes, A and B, are within
range of a third node, C, but not within range of each other. Be-
cause A and B cannot sense each other, they may send packets to
C simultaneously, and those packets will collide. Different studies
ﬁnd different numbers of hidden terminals in practice: Zigzag [17]
assumes that 10% of node pairs are part of hidden terminals, while
Jigsaw [11] ﬁnds that up to 50% of nodes in their networks could
be part of hidden terminals. Both of these studies, as well as oth-
ers [23, 25, 29], only study hidden terminals in one network or
testbed. In Section 6, we examine how frequently hidden terminals
can occur across many networks, as well as how this frequency
changes with the transmit bit rate.
3. DATA
Our data set contains anonymized measurements collected from
110 geographically disperse Meraki [28] networks. These networks
include a total of 1407 APs, and range in size from three APs to 203
APs, with a median of 7 and a mean of about 13. Of these networks,
77 used only 802.11b/g radios, 31 used only 802.11n APs, and two
contained a mix of both kinds of radios. 802.11n trafﬁc used the
20MHz channel. 72 of these networks were indoor networks, 17
were outdoor, and 21 included both indoor and outdoor nodes.1
All radios are made by Atheros, which makes it possible for us to
conduct meaningful inter-network comparisons when dealing with
the SNR (the way in which the SNR is reported can vary across
vendors; see Section 3.1.1). Our data is made up of measurements
from controlled probes sent periodically between APs in the mesh
at varying bit rates. Though these probes are controlled, they are
sent while the network is being used by real users.
3.1 Probe Data
The probe data contains loss rates and SNRs from broadcast
probes sent by each AP every 40 seconds (this is the default re-
porting rate used in Meraki networks [5]). These probes are very
similar to those used in Roofnet [32] to calculate the ETX met-
ric [12]. The loss rate between AP1 and AP2 at a particular bit rate
b is calculated as the average of the loss rates of each probe sent
at rate b between AP1 and AP2 over the past 800 seconds, an in-
terval used to make bit rate adaptation decisions in the production
networks. We collect data from each node every 300 seconds; the
reported loss rate data is for the past 800 seconds, so one should
think of the data as a sliding window of the inter-AP loss rate at
different bit rates.
We refer to each collection of inter-AP loss rates at a set of mea-
sured bit rates as a probe set. Note that one probe set represents
aggregate data from roughly 800/40 = 20 probes for each bit rate.
1We ignore these networks when classifying by environment.