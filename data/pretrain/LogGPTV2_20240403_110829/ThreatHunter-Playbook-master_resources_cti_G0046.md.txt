# G0046: FIN7

## Description
FIN7 (also known as Carbanak Group) is a financially motivated threat group that has primarily targeted the U.S. retail, restaurant, and hospitality sectors since mid-2015. The group frequently employs point-of-sale (POS) malware to carry out its attacks. A portion of FIN7's operations was conducted under the guise of a front company called Combi Security. Although sometimes referred to as the Carbanak Group, these appear to be two distinct groups that use the same Carbanak malware, and are therefore tracked separately.

**References:**
- [FireEye FIN7 March 2017](https://attack.mitre.org/groups/G0046)
- [FireEye FIN7 April 2017](https://attack.mitre.org/groups/G0046)
- [FireEye CARBANAK June 2017](https://attack.mitre.org/software/S0030)
- [FireEye FIN7 Aug 2018](https://attack.mitre.org/groups/G0046)

## Tactics, Techniques, and Procedures (TTPs)

| Platform | Tactic | Technique | Description | Data Sources |
| --- | --- | --- | --- | --- |
| Windows, macOS | Defense Evasion, Discovery | Virtualization/Sandbox Evasion | FIN7 embedded images into document lures that only activate the payload when a user double-clicks, thus evading sandboxes. | Process monitoring, Process command-line parameters |
| Windows | Persistence | Shortcut Modification | FIN7 created several .LNK files on the victim's machine to maintain persistence. | File monitoring, Process monitoring, Process command-line parameters |
| Linux, macOS, Windows | Execution | Command-Line Interface | FIN7 used `cmd.exe` to execute commands on the victim’s machine. | Process monitoring, Process command-line parameters |
| Linux, macOS, Windows | Command and Control, Defense Evasion | Web Service | FIN7 leveraged legitimate services such as Google Docs, Google Scripts, and Pastebin for command and control (C2). | Host network interface, Netflow/Enclave netflow, Network protocol analysis, Packet capture, SSL/TLS inspection |
| Windows | Persistence, Privilege Escalation | New Service | FIN7 created new Windows services and added them to startup directories for persistence. | Windows Registry, Process monitoring, Process command-line parameters, Windows event logs |
| Windows, macOS | Collection | Video Capture | FIN7 developed a custom video recording capability to monitor operations in the victim's environment. | Process monitoring, File monitoring, API monitoring |
| macOS, Windows | Defense Evasion | Code Signing | FIN7 signed Carbanak payloads with legally purchased code signing certificates and digitally signed phishing documents, backdoors, and other staging tools to bypass security controls. | Binary file metadata |
| Linux, macOS, Windows | Command and Control | Commonly Used Port | FIN7 used ports 53, 80, 443, and 8080 for C2. | Packet capture, Netflow/Enclave netflow, Process use of network, Process monitoring |
| Linux, macOS, Windows | Command and Control | Standard Application Layer Protocol | FIN7 performed C2 using DNS via A, OPT, and TXT records. | Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring |
| Linux, Windows, macOS | Execution | User Execution | FIN7 lured victims to double-click on images in attachments, which would then execute a hidden LNK file. | Anti-virus, Process command-line parameters, Process monitoring |
| Linux, macOS, Windows | Collection | Screen Capture | FIN7 captured screenshots and desktop video recordings. | API monitoring, Process monitoring, File monitoring |
| Linux, macOS, Windows | Defense Evasion, Execution | Scripting | FIN7 used SQL, VBS, and JavaScript scripts to perform tasks on the victim's machine. | Process monitoring, File monitoring, Process command-line parameters |
| Windows, macOS, Linux | Initial Access | Spearphishing Attachment | FIN7 sent spearphishing emails with malicious Microsoft Documents or RTF files attached. | File monitoring, Packet capture, Network intrusion detection system, Detonation chamber, Email gateway, Mail server |
| Linux, macOS, Windows | Defense Evasion | Obfuscated Files or Information | FIN7 used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands. | Network protocol analysis, Process use of network, File monitoring, Malware reverse engineering, Binary file metadata, Process command-line parameters, Environment variable, Process monitoring, Windows event logs, Network intrusion detection system, Email gateway, SSL/TLS inspection |
| Windows | Execution | Dynamic Data Exchange | FIN7 included malicious Word documents with DDE execution in their spear-phishing campaigns. | API monitoring, DLL monitoring, Process monitoring, Windows Registry, Windows event logs |
| Windows | Defense Evasion, Execution | Mshta | FIN7 used `mshta.exe` to execute VBScript and run malicious code on victim systems. | Process monitoring, Process command-line parameters |
| Windows | Persistence, Privilege Escalation | Application Shimming | FIN7 used application shim databases for persistence. | Loaded DLLs, System calls, Windows Registry, Process monitoring, Process command-line parameters |
| Windows | Execution | PowerShell | FIN7 used a PowerShell script to launch shellcode and retrieve an additional payload. | PowerShell logs, Loaded DLLs, DLL monitoring, Windows Registry, File monitoring, Process monitoring, Process command-line parameters |
| Linux, macOS, Windows | Defense Evasion | Masquerading | FIN7 created a scheduled task named “AdobeFlashSync” to establish persistence. | File monitoring, Process monitoring, Binary file metadata |
| Linux, macOS, Windows | Command and Control, Lateral Movement | Remote File Copy | FIN7 downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload. | File monitoring, Packet capture, Process use of network, Netflow/Enclave netflow, Network protocol analysis, Process monitoring |
| Windows | Execution, Persistence, Privilege Escalation | Scheduled Task | FIN7 malware created scheduled tasks to establish persistence. | File monitoring, Process monitoring, Process command-line parameters, Windows event logs |
| Windows | Persistence | Registry Run Keys / Startup Folder | FIN7 malware created Registry Run and RunOnce keys to establish persistence and added items to the Startup folder. | Windows Registry, File monitoring |

This table provides a comprehensive overview of the tactics, techniques, and procedures (TTPs) used by FIN7, along with the relevant data sources for detection and investigation.