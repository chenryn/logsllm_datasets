### Bug report (or feature request)
**Summary**
In `matplotlib`, when manually restricting `xlim`, `ylim` does not change
accordingly.
**Code for reproduction**
    import numpy as np
    import matplotlib.pyplot as plt
    x = np.array([1,2,3,4,5,6,7])
    y = x
    fig = plt.figure()
    ax = plt.axes()
    ax.plot(x, y)
    print('xlim: %s, ylim: %s' % (ax.get_xlim(), ax.get_ylim()))
    fig = plt.figure()
    ax = plt.axes()
    ax.plot(x, y)
    ax.set_xlim(1, 2)
    print('xlim: %s, ylim: %s' % (ax.get_xlim(), ax.get_ylim()))
**Actual outcome**
    xlim: (0.7, 7.3), ylim: (0.7, 7.3)
    xlim: (1.0, 2.0), ylim: (0.7, 7.3)
**Expected outcome**
When I change xlim to (1, 2), I expect ylim to change accordingly (because y's
value range becomes [1, 2], now that x's range shrinks), but ylim still
remains (0.7, 7.3). In fact, in MATLAB xlim and ylim can coordinate with each
other.
MATLAB codes to reproduce this behavior:
    x = [1,2,3,4,5,6,7];
    y = x;
    figure; plot(x, y); disp(ylim);
    figure; plot(x, y); xlim([1, 2]); disp(ylim);
**Matplotlib version**
  * Operating system: Windows 10
  * Matplotlib version: 2.2.2
  * Matplotlib backend (`print(matplotlib.get_backend())`): `module://ipykernel.pylab.backend_inline`
  * Python version: 3.6.6
  * Jupyter version (if applicable): N/A
  * Other libraries: N/A