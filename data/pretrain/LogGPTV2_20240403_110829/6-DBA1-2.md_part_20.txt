#190218 15:57:22 server id 51 end_log_pos 657 CRC32 0x48a16d1b Query
thread_id=3 exec_time=0 error_code=0
SET TIMESTAMP=1550476642/\*!\*/;
insert into db1.t2 values(2)
/\*!\*/;
\# at 657
#190218 15:57:25 server id 51 end_log_pos 924 CRC32 0xf9dd53ec Query
thread_id=3 exec_time=0 error_code=0
SET TIMESTAMP=1550476645/\*!\*/;
insert into db1.t2 values(3)
/\*!\*/;
\# at 924
另一种查看方式:
\[root@sql51 \~\]# mysqlbinlog /logdir/plj.000001 \| grep insert
insert into db1.t2 values(1)
insert into db1.t2 values(2)
insert into db1.t2 values(3)
### 2.2.7使用日志文件恢复数据
#### 2.2.7.1输出日志格式
Mysqlbinlog \[选项\] binlog 日志文件名
常用选项:
\--start-datetime="yyyy-mm-dd hh:mm:ss" 开始时间
\--stop-datetime="yyyy-mm-dd hh:mm:ss" 结束时间
\--start-position=数字 #开始偏移量
\--stop-position=数字 #结束偏移量
指定开始和结束可以指定一个范围
\[root@sql51 \~\]# scp /logdir/plj.000001 192.168.4.52:/root
查看日志里面已有的插入操作
\[root@sql51 \~\]# mysqlbinlog /logdir/plj.000001 \| grep insert
insert into db1.t2 values(1)
insert into db1.t2 values(2)
insert into db1.t2 values(3)
#### 2.2.7.2恢复这个binlog日志的所有操作:
\[root@sql52 mysqld\]# mysqlbinlog /root/plj.000001 \| mysql -uroot
-p654321
mysql\> select \* from db1.t2;
+\-\-\-\-\--+
\| age \|
+\-\-\-\-\--+
\| 1 \|
\| 2 \|
\| 3 \|
+\-\-\-\-\--+ #以binlog日志文件给恢复了三条数据
3 rows in set (0.00 sec)
#### 2.2.7.3恢复指定范围内的数据:
\[root@sql52 \~\]# mysqlbinlog \--start-position=560
\--stop-position=924 /root/plj.000001 \|mysql -uroot -p654321
mysql\> select \* from db1.t2 ;
+\-\-\-\-\--+
\| age \|
+\-\-\-\-\--+
\| 1 \|
\| 2 \|
\| 3 \|
\| 2 \| #以binlog日志文件给恢复了三条数据中的一条
+\-\-\-\-\--+
4 rows in set (0.00 sec)
\*\*选择范围必须包含日志文件的commit
\*\*不指定开头,默认从最前面开始
\*\*不指定结束,默认执行到最后
## 2.3差异备份
备份上次备份后所有新产生的数据
常用的Mysql备份工具
## 三 innobackupex备份/恢复
![](media/image32.png){width="5.7625in" height="3.609027777777778in"}
## 3.1 XtraBackup 工具介绍
是一款强大的在线热备份工具
备份过程中不锁库表,行级锁,适合实际生产环境
由专业组织percona开源软件提供(改进Mysql分支)
主要含有两个组件:
xtrabackup:C程序,支持innodb(数据库引擎)/XtraDB
Innobackupex命令:以perl脚本封装xtrabackup,安装percona软件提供
## 3.2 percona-xtrabackup软件安装使用
环境准备:
-   删掉所有的没用的库
-   修改默认的存储引擎为:innodb,要使用xtrabackup工具,必须使用此存储引擎
-   安装percona-xtrabackup,需要依赖libev-4.15-1.el6.rf.x86_64,光盘不提供,提前拷贝到数据库服务器,并安装
\[root@sql51 \~\]# yum -y install libev-4.15-1.el6.rf.x86_64.rpm
\[root@sql51 \~\]# yum install -y
percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm
Innobackupex
## 3.3 Innobackupex命令格式
Innobackupex 选项
\--host 主机名
\--user 用户名
\--port 端口号(默认3306可不用写)
\--databases 数据库名(不写将备份所有数据库)
\--no-timestamp 不用时间戳,不用日期命名备份文件存储的子目录名
案例:将所有库完全备份到/backup(目录不需事先创建,备份程序自动创建)
格式:Innobackupex \--user root \--password 123456 /backup -no-timestamp
Innobackupex 备份之后有两种文件1是数据文件,2是备份信息文件
1数据文件,用来恢复数据
2备份配置文件:有备份信息,用来做增量备份或者差异备份等的参考
![](media/image33.png){width="5.763888888888889in"
height="5.011805555555555in"}
## 3.4数据备份与恢复
### 3.4.1数据完全备份与恢复
Innobackupex恢复数据要求数据库清空mysql目录,因此那怕你只需要备份多个库中其中一个库,也要将数据库三个系统库(mysql
sys performance_schema)一起备份
#### 3.4.1.1完全备份:
案例:将所有库完全备份到/allbak (目录不需事先创建,备份程序自动创建)
格式:Innobackupex \--user root \--password 123456 /allbak -no-timestamp
Innobackupex 选项
\--host 主机名
\--user 用户名
\--port 端口号(默认3306可不用写)
\--databases 数据库名(不写将备份所有数据库)
\--no-timestamp 不用时间戳,不用日期命名备份文件存储的子目录名
Innobackupex 备份之后有两种文件1是数据文件,2是备份信息文件
1数据文件,用来恢复数据
2备份配置文件:有备份信息,用来做增量备份或者差异备份等的参考
#### 3.4.1.2完全恢复:
选项:
![](media/image34.png){width="5.7652777777777775in"
height="3.202777777777778in"}
备份的数据中有以下文件:
Xtra backup_logfile已提交日志
Ibdata1文件是未提交数据日志
1 准备恢复
\[root@sql51 \~\]# cat /allbak/xtrabackup_checkpoints
backup_type = full-backuped #备份内容完全备
from_lsn = 0
to_lsn = 3038691
last_lsn = 3038700 #数据库下次备份开始序列号
compact = 0
recover_binlog_info = 0
from_lsn = 0 to_lsn = 3038691 日志范围
\[root@sql51 \~\]# innobackupex \--apply-log /allbak #准备还原
190219 10:12:44 completed OK! #看到OK就正常
\[root@sql51 \~\]# cat /allbak/xtrabackup_checkpoints
backup_type = full-prepared
from_lsn = 0
to_lsn = 3038691
last_lsn = 3038700
compact = 0
recover_binlog_info = 0
2 把备份目录下的数据拷贝到数据库目录下
\[root@sql51 \~\]# systemctl stop mysqld.service
\[root@sql51 \~\]# rm -rf /var/lib/mysql
\[root@sql51 \~\]# ls /var/lib/mysql
ls: 无法访问/var/lib/mysql: 没有那个文件或目录
\[root@sql51 \~\]# innobackupex \--copy-back /allbak #开始还原
190219 10:19:35 innobackupex: Starting the copy-back operation
190219 10:19:44 completed OK!
\[root@sql51 \~\]# ls /var/lib/mysql -l
#查看数据库目录里面的所有文件权限为root
\[root@sql51 \~\]# chown -R mysql:mysql /var/lib/mysql
\[root@sql51 \~\]# systemctl start mysqld
\[root@sql51 \~\]# ls -l /var/lib/mysql
\[root@sql51 \~\]# mysql -uroot -p654321
mysql\>
mysql\> show databases;
#### 3.4.1.3综合练习:
将51上的备份文件 恢复到52数据库服务器上
51:
\[root@sql51 allbak\]# scp -r /allbak 192.168.4.52:/
52:
1安装percona-xtrabackup
\[root@room9pc01 \~\]# scp /root/桌面/libev-4.15-1.el6.rf.x86_64.rpm
192.168.4.52:/root
\[root@room9pc01 \~\]# scp
/root/桌面/percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm
192.168.4.52:/root
\[root@sql52 \~\]# yum -y install libev-4.15-1.el6.rf.x86_64.rpm
\[root@sql52 \~\]# yum -y install
percona-xtrabackup-24-2.4.7-1.el7.x86_64.rpm
\[root@sql52 \~\]# systemctl stop mysqld.service
\[root@sql52 \~\]# rm -rf /var/lib/mysql
\[root@sql52 \~\]# ls /var/lib/mysql
ls: 无法访问/var/lib/mysql: 没有那个文件或目录
\[root@sql52 \~\]# innobackupex \--apply-log /allbak #准备还原
\[root@sql52 \~\]# innobackupex \--copy-back /allbak #执行还原
\[root@sql52 \~\]# ls -l /var/lib/mysql
\[root@sql52 \~\]# chown -R mysql:mysql /var/lib/mysql
\[root@sql52 \~\]# systemctl start mysqld
\[root@sql52 \~\]# mysql -uroot -p654321
mysql\> show databases;
### 3.4.2数据增量备份与恢复
\[root@sql51 allbak\]# ls
backup-my.cnf ibdata1 ibtmp1 sys xtrabackup_checkpoints
db5 ib_logfile0 mysql xtrabackup_binlog_info xtrabackup_info
ib_buffer_pool ib_logfile1 performance_schema
xtrabackup_binlog_pos_innodb xtrabackup_logfile
查看配置文件
\[root@sql51 \~\]# cat /allbak//xtrabackup_checkpoints
backup_type = full-backuped #备份内容完全备
from_lsn = 0
to_lsn = 3038691
last_lsn = 3038700 #数据库下次备份开始序列号
compact = 0
recover_binlog_info = 0
#from_lsn = 0 to_lsn = 3038691 0\--3038691日志序列号范围
如何知道新产生的数据
**格式:**innobackupex \--user root \--password 654321 \--incremental
/new1dir \--incerments-basedir=/fullbak
**增量备份:先做完全备份,在完全备份的基础上进行增量备份**
备份
#### 首先做增量完全备份-备份到/fullbak
\[root@sql51 allbak\]# innobackupex \--user root \--password 654321
/fullbak \--no-timestamp
\[root@sql51 allbak\]# cat /fullbak/xtrabackup_checkpoints
backup_type = full-backuped
from_lsn = 0
to_lsn = 3039291
last_lsn = 3039300
compact = 0
recover_binlog_info = 0
mysql\> insert into db5.a values(11),(22); #备份完之后再插入数据
Query OK, 2 rows affected (0.08 sec)
Records: 2 Duplicates: 0 Warnings: 0
#### 第1次做增量备份-备份到/new1dir目录
\[root@sql51 allbak\]# innobackupex \--user root \--password 654321
\--incremental /new1dir \--incremental-basedir=/fullbak \--no-timestamp
190219 11:53:46 completed OK!
#### 第2次增量备份-备份到/new2dir目录
\[root@sql51 allbak\]# innobackupex \--user root \--password 654321
\--incremental /new2dir \--incremental-basedir=/new1dir \--no-timestamp
#### 第3次增量备份-备份到/new3dir目录
\[root@sql51 \~\]# innobackupex \--user root \--password 654321
\--incremental /new3dir \--incremental-basedir=/new2dir \--no-timestamp
#### 做完备份之后所有的的备份目录
\[root@sql51 allbak\]# ls /fullbak/ #首先做增量完全备份的目录
backup-my.cnf ibdata1 sys xtrabackup_info
db5 mysql xtrabackup_binlog_info xtrabackup_logfile
ib_buffer_pool performance_schema xtrabackup_checkpoints
\[root@sql51 allbak\]# ls /new1dir/ #第一次增量备份的目录
backup-my.cnf ib_buffer_pool ibdata1.meta performance_schema
xtrabackup_binlog_info xtrabackup_info
db5 ibdata1.delta mysql sys xtrabackup_checkpoints xtrabackup_logfile
\[root@sql51 allbak\]# ls /new2dir/ #第二次增量备份的目录
backup-my.cnf ib_buffer_pool ibdata1.meta performance_schema
xtrabackup_binlog_info xtrabackup_info
db5 ibdata1.delta mysql sys xtrabackup_checkpoints xtrabackup_logfile
#### 依次做完备份后xtrabackup_checkpoints备份信息
\[root@sql51 \~\]# cat /fullbak/xtrabackup_checkpoints
backup_type = full-backuped #注意此处是完全备份状态
from_lsn = 0
to_lsn = 3041903 #fullbak范围0-3041903
last_lsn = 3041912
compact = 0
recover_binlog_info = 0
\[root@sql51 \~\]# cat /new1dir/xtrabackup_checkpoints
backup_type = incremental
from_lsn = 3041903
to_lsn = 3042229 #new1范围3041903-3042229
last_lsn = 3042238
compact = 0
recover_binlog_info = 0
\[root@sql51 \~\]# cat /new2dir/xtrabackup_checkpoints
backup_type = incremental
from_lsn = 3042229
to_lsn = 3042571 #new2范围3042229-3042571
last_lsn = 3042580
compact = 0
recover_binlog_info = 0
范围第二次的to_lsn\>第一次的to_lsn\>首先增量完整备份
#### 增量恢复
整合首次完整备份的文件