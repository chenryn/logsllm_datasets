title:Zombie Awakening: Stealthy Hijacking of Active Domains through DNS
Hosting Referral
author:Eihal Alowaisheq and
Siyuan Tang and
Zhihao Wang and
Fatemah Alharbi and
Xiaojing Liao and
XiaoFeng Wang
Zombie Awakening: Stealthy Hijacking of Active Domains
through DNS Hosting Referral
Eihal Alowaisheq
Indiana University
King Saud University
PI:EMAIL
Fatemah Alharbi
Taibah University
PI:EMAIL
Siyuan Tang
Indiana University
PI:EMAIL
Xiaojing Liao
Indiana University
PI:EMAIL
Institute of Information Engineering,
Chinese Academy of Sciences
Zhihao Wang
PI:EMAIL
XiaoFeng Wang
Indiana University
PI:EMAIL
ABSTRACT
In recent years, the security implication of stale NS records, which
point to a nameserver that no longer resolves the domain, has
been unveiled. Prior research studied the stale DNS records that
point to expired domains. The popularity of DNS hosting services
brings in a new category of stale NS records, which reside in the
domain’s zone (instead of the TLD zone) for an active domain.
To the best of our knowledge, the security risk of this kind of
stale NS record has never been studied before. In our research,
we show that this new type of stale NS record can be practically
exploited, causing a stealthier hijack of domains associated with
the DNS hosting service. We also performed a large-scale analysis
on over 1M high-profile domains, 17 DNS hosting providers and
12 popular public resolver operators to confirm the prevalence of
this security risk. Our research further discovers 628 hijackable
domains (e.g., 6 government entities and 2 payment services), 14
affected DNS hosting providers (e.g., Amazon Route 53), and 10
vulnerable public resolver operators (e.g., CloudFlare). Furthermore,
we conducted an in-depth measurement analysis on them, thus
providing a better understanding of this new security risk. Also, we
explore the mitigation techniques that can be adopted by different
affected parties.
CCS CONCEPTS
• Security and privacy → Authentication; Security protocols;
Vulnerability management.
KEYWORDS
Domain hijacking; DNS cash poisoning; DNS hosting services
ACM Reference Format:
Eihal Alowaisheq, Siyuan Tang, Zhihao Wang, Fatemah Alharbi, Xiaojing
Liao, and XiaoFeng Wang. 2020. Zombie Awakening: Stealthy Hijacking of
Active Domains through DNS Hosting Referral. In Proceedings of the 2020
ACM SIGSAC Conference on Computer and Communications Security (CCS
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
CCS ’20, November 9–13, 2020, Virtual Event, USA
© 2020 Association for Computing Machinery.
ACM ISBN 978-1-4503-7089-9/20/11...$15.00
https://doi.org/10.1145/3372297.3417864
’20), November 9–13, 2020, Virtual Event, USA. ACM, New York, NY, USA,
16 pages. https://doi.org/10.1145/3372297.3417864
1 INTRODUCTION
The Domain Name System (DNS) has been the cornerstone of the
Internet and its immense scalability. It provides the vital distributed
directory service which associates information with the domain
names given to various online entities and translates between do-
mains and their Internet Protocol (IP) addresses. For this purpose,
the DNS operates through a complicated hierarchical infrastructure
to delegate the management of the domains within a portion of
the namespace (called DNS zone) and their mapping of Internet
resources to a set of authoritative nameservers. Through this infras-
tructure, a client-side resolver can recursively discover and query
the nameservers in charge of different zones, from the root to the
Top Level Domain (TLD, e.g., .com), to the Second Level Domain
(SLD, e.g., example.com), and so on, until an authoritative answer
(e.g., an IP address) is provided by a server. Such an infrastruc-
ture is security-critical. If misconfigured, it could inflict damage
of devastating impact, ranging from denial of access to Internet
resources [9, 23, 24, 37, 43, 61, 65] to hijacking of domains from
their legitimate owners [52, 75]. Despite the long-standing effort
from the security community to safeguard this infrastructure, its
complexity and distributed nature continue to expose it to emerging
security threats.
Menaces of stale NS records in the SLD zone. In recent years,
researchers have identified the security implications of stale NS
records, where the nameserver that the record points to no longer
resolves the domain. For instance, prior research [52] looks into
dangling NS (Dare-NS) records, where the nameserver domains that
NS records point to are expired and the adversary could purchase
the domain to hijack this resource. Another example of domain
hijacking through stale NS records emerges with the popularity of
DNS hosting services (e.g., Amazon Route 53 [6] and GoDaddy DNS
hosting [36]). At these services, users host their DNS records in the
service provider’s nameservers. Once these records become stale, an
adversary can claim the nameserver domain and direct the traffic.
Some blog posts discussed the exploitation of this vulnerability
[12, 13]. However, the proposed attack works effectively if stale NS
records are in the TLD zone. Once a domain is hijacked, it could be
easily noticed by the domain owner because such misconfiguration
appears in the normal resolution path.
In our research, we found that the popularity of DNS hosting
services brings in a new category of stale NS records – stale NS
records in the SLD zone: unlike Dare-NS, the nameserver pointed
to by the record still exists. Also, those stale NS records are in the
SLD zone instead of TLD zone, which makes the misconfiguration
difficult to discover. Specifically, the attacker can exploit this vul-
nerability to hijack a domain through a “hidden” resolution path.
For example, stale NS records in the SLD zone exist when importing
the domain’s zone information from one DNS hosting provider into
a new DNS server, where the nameserver provided by the hosting
provider no longer resolves the domain. After that, during the do-
main resolution, the stale NS record at the SLD zone will not be
normally used unless cached, since the nameserver received from
the TLD will directly return the A record to find out the domain’s
IP address, as long as the NS records in the TLD zone (e.g., .com)
are up-to-date (i.e., only pointing to the current nameserver). Our
research shows that the stale NS records at the SLD can actually be
practically exploited, causing a stealthy hijack of active domains.
Zombie awakening attack. More specifically, we found those
stale NS records can be reactivated within a DNS hosting service
when the adversary makes an unauthorized claim on another party’s
domain to host the DNS records. It indicates a practical scenario
for the attacker to inject a valid NS response to the resolver and
further hijack the domain. In particular, by strategically querying a
resolver for the domain’s NS records, the adversary will make the
resolver cache NS records that reside at the SLD zone as the valid
NS response. So a follow-up query for the IP address of the same
domain could trigger the stale NS record, which opens the attack
avenue by poisoning the resolver with the adversary’s A record con-
figured at the DNS hosting side. Interestingly, even in the presence
of inconsistency (that is, the absence of the stale record in the TLD
zone), the NS records in the SLD zone will be used due to higher
trust level [32]. We call the threat zombie awakening or Zaw attack,
and the vulnerable stale NS records zombie referrals or Zrefs.
In our research, we found that the Zaw threat is completely real-
istic: we successfully exploited our own domains at various leading
DNS hosting providers and the resolvers maintained by major op-
erators. Also, we demonstrated that this threat is serious, through
a large-scale analysis that discovered 628 vulnerable domains from
Alexa’s top 1M domains, including those of education institutions,
government entities, and companies. For this purpose, we designed
a semi-automated approach, called ZreFinder, to automatically dis-
cover Zrefs. ZreFinder systematically collects the NS records for
each target domain, looks for the inconsistency between the TLD
zone and the SLD zone, and identifies the stale records associated
with DNS hosting providers. For each DNS hosting provider, our
approach further determines if a domain can be claimed without
authorization at the provider to build an illicit resolution path.
Measurement and mitigation. Most importantly, by running Zre-
Finder on Alexa’s top 1M domains and a set of .edu and .gov
domains, we found that this new threat is indeed significant and im-
pactful. More specifically, we discovered 628 vulnerable domains, in-
cluding 6 government domains associated with Colombia, Malaysia,
and Saudi Arabia, and domains for 3 universities. Also flagged are
those belonging to critical public services and big companies, e.g.,
Pittsburgh airport, Croatia airlines, and the FastSpring E-commerce
platform. Also, we found that the Zrefs of such domains have been
out there for a while: 89.97% hijackable domains have Zrefs for at
least 30 days.
Furthermore, our research shows that prominent DNS hosting
services and popular public resolvers are vulnerable to the Zaw
attack. Among them are 14 leading hosting providers such as Ama-
zon Route 53, Hetzner Online GmbH, and more than 7K resolvers,
including those operated by CloudFlare, Quad9, and OpenNIC. Such
resolvers turned out to be easily poisoned: merely 6.5 queries on
average are found to be adequate to contaminate their cache with
malicious A records implanted on the hosting service side. This
enables an adversary to stealthily control the traffic to the target
domain whenever the poisoned resolvers are used, for purposes
such as phishing, malware distribution, etc.
We further discuss how to mitigate this new security risk. Our
ZreFinder can be utilized to find Zrefs so they can be removed by do-
main owners. DNSSEC can also be leveraged to defeat Zaw attacks,
although it has not been extensively deployed. On the side of the
DNS hosting provider, we present a simple verification technique
to ensure that a domain cannot be claimed without authorization
by requesting the domain owner to add a randomly-generated NS
record at the TLD level.
Contributions. The contributions of the paper are outlined as
follows:
• We discovered a new security risk, Zaw attack, in the DNS infras-
tructure. To our knowledge, this Zaw attack has never been shown
practically before in the public, which demonstrates the grave risk
posed by a stale NS record in the SLD zone, particularly with the
emergence of DNS hosting services.
• We developed a new technique for automatic discovery of the
domains with Zrefs. By scanning over 1M high-profile domains, we
identified 628 hijackable domains, affecting government agencies,
public services, large corporations, etc.
• We conducted a large-scale measurement study to understand
Zaw attack, including identifying 14 affected DNS hosting providers
and 10 vulnerable public revolver operators, and investigating the
attack complexity (e.g., the selection rate of Zref) in the real world.
• We provided suggestions for the affected parties to mitigate this
new threat.
Roadmap. The rest of the paper is organized as follows: Section 2
presents the background of the research; Section 3 describes the
Zaw attack; Section 4 elaborates on the technique for finding Zrefs
for a large-scale measurement study; Section 5 provides our mea-
surement findings; Section 6 discusses the potential mitigations;
Section 7 compares our work with prior research and Section 8
concludes the paper.
2 BACKGROUND
In this section, we provide background information about the DNS
structure and its hosting providers, along with the assumptions
made in our research.
2.1 DNS Resolution and Caching
DNS structure and resolution. As mentioned earlier, the Do-
main Name System (DNS) resolves Fully Qualified Domain Names
(FQDNs) to their corresponding IP addresses (and vice versa) through
a hierarchical infrastructure. At the top of the hierarchy is the root
(“.”), under which are a series of Top Level Domains (TLDs, e.g.,
.com, .net, and .org). They are followed by Second Level Domains
(SLDs, e.g., example.com), which their owners register with regis-
trars. More details of this hierarchy can be found in RFCs [57, 58].
Throughout the paper, we refer to SLD as domain. In the DNS hier-
archy, each node includes referral information for its child nodes,
which is essential to the recursive DNS resolution process. In other
words, the root zone contains an NS RR set (called RRSet), with each
RR pointing to a nameserver in charge of its children zone at the
TLD level. Similarly, TLDs have the NS RRSets that point to SLDs.
The DNS resolution is usually done recursively by a DNS resolver.
For example, when a client sends a DNS query to retrieve the IP
address of an FQDN www.example.com, if the cache of the resolver
carries no information about the requested domain, the resolver
first forwards the query to the root server to trigger the recursive
process. The root server then redirects the resolver to the .com
TLD server, which further refers the resolver to the authoritative
nameserver of example.com to get the IP address as a response,
then the resolver sends the response back to the client. To optimize
this process, resolvers can choose to cache any received DNS records
for future resolutions.
DNS response. Resolution information is organized into Resource
Records (RRs) with the following format: name, Time-to-Live (TTL),
class, type, and data, as illustrated in Figure 1. The  serves as the key when searching for a record. Here, name
states the name of the record, type specifies the record type, such
as A, NS, and CNAME, and class defines the protocol, e.g., IN for the
Internet protocol in Figure 1. Also, each record has a TTL (time-to-
live) field that determines the lifespan (in seconds) of the record
when cached by a resolver. Note that resolvers may not adhere to
the TTL and may, instead, set its minimum and maximum limit for
a record [42].
A DNS response includes a series of RRs in three main sections:
answer, authority, and additional. Figure 1 shows a snippet of a
DNS response to an A record query for example.com. The answer
section contains the RR that answers the query, i.e., the domain’s
IP address. The authority section holds a set of the authoritative
nameservers for the domain. The additional section carries other
RRs related to the query, the IPs of these authoritative nameservers
in the example. It is common for a domain to have more than one
authoritative nameservers. For example, in Figure 1, the domain
example.com has two nameservers ([a,b].iana-servers.net).
During the resolution process, the resolver usually randomly picks
one to balance the workload over the nameservers, or chooses the
one statistically based on shorter Round-Trip Time (RTT) [80].
DNS caching. Resolvers often cache resolution results to improve
performance. For each query, the resolver first checks its cache and
directly replies to the client if the corresponding RR is found (a cache
hit). A security risk of the caching is DNS poisoning [5, 44, 45, 72]:
the attacker may inject a malicious DNS response to the cache to
direct victims to a server under his control. For this purpose, the
attacker needs to win the race against a legitimate response from
the domain’s nameservers. The attack becomes increasingly hard
due to the protection in place for today’s resolvers.
;; ANSWER SECTION :
example . com .
46294