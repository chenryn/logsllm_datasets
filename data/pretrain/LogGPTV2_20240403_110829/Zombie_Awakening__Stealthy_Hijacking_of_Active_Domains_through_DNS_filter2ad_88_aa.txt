# Title: Zombie Awakening: Stealthy Hijacking of Active Domains through DNS Hosting Referral

## Authors:
- Eihal Alowaisheq, Indiana University, King Saud University
- Siyuan Tang, Indiana University
- Zhihao Wang
- Fatemah Alharbi, Taibah University
- Xiaojing Liao, Indiana University, Institute of Information Engineering, Chinese Academy of Sciences
- XiaoFeng Wang, Indiana University

## Abstract
In recent years, the security implications of stale NS (Name Server) records, which point to a nameserver that no longer resolves the domain, have been uncovered. Previous research has focused on stale DNS records pointing to expired domains. The increasing popularity of DNS hosting services introduces a new category of stale NS records, which reside in the domain’s zone (instead of the TLD zone) for active domains. To the best of our knowledge, the security risks associated with this type of stale NS record have not been studied before.

In this research, we demonstrate that these new types of stale NS records can be practically exploited, leading to a stealthier hijack of domains associated with DNS hosting services. We conducted a large-scale analysis of over 1 million high-profile domains, 17 DNS hosting providers, and 12 popular public resolver operators to confirm the prevalence of this security risk. Our findings include 628 hijackable domains (including 6 government entities and 2 payment services), 14 affected DNS hosting providers (e.g., Amazon Route 53), and 10 vulnerable public resolver operators (e.g., CloudFlare). We also performed an in-depth measurement analysis to better understand this new security risk and explored potential mitigation techniques that can be adopted by different stakeholders.

## CCS Concepts
- Security and privacy → Authentication; Security protocols; Vulnerability management.

## Keywords
Domain hijacking, DNS cache poisoning, DNS hosting services

## ACM Reference Format
Eihal Alowaisheq, Siyuan Tang, Zhihao Wang, Fatemah Alharbi, Xiaojing Liao, and XiaoFeng Wang. 2020. Zombie Awakening: Stealthy Hijacking of Active Domains through DNS Hosting Referral. In Proceedings of the 2020 ACM SIGSAC Conference on Computer and Communications Security (CCS '20), November 9–13, 2020, Virtual Event, USA. ACM, New York, NY, USA, 16 pages. https://doi.org/10.1145/3372297.3417864

## 1 Introduction
The Domain Name System (DNS) is a critical component of the Internet, providing a distributed directory service that associates information with domain names and translates them into IP addresses. The DNS operates through a hierarchical infrastructure, delegating the management of domains within a portion of the namespace (called a DNS zone) to a set of authoritative nameservers. This infrastructure is security-critical, and misconfigurations can lead to severe consequences, such as denial of access to Internet resources or domain hijacking.

### Menaces of Stale NS Records in the SLD Zone
Recent research has highlighted the security implications of stale NS records, where the nameserver that the record points to no longer resolves the domain. For example, prior studies have examined dangling NS (Dare-NS) records, where the nameserver domains that NS records point to are expired, allowing an adversary to purchase the domain and hijack the resource. Another form of domain hijacking through stale NS records has emerged with the popularity of DNS hosting services (e.g., Amazon Route 53 and GoDaddy DNS hosting). At these services, users host their DNS records in the service provider’s nameservers. When these records become stale, an adversary can claim the nameserver domain and direct traffic. However, such attacks are more easily noticed if the stale NS records are in the TLD zone, as they appear in the normal resolution path.

In our research, we found that the popularity of DNS hosting services introduces a new category of stale NS records in the SLD (Second Level Domain) zone. Unlike Dare-NS, the nameserver pointed to by the record still exists, but the stale NS records are in the SLD zone, making the misconfiguration difficult to discover. Specifically, the attacker can exploit this vulnerability to hijack a domain through a "hidden" resolution path. For instance, stale NS records in the SLD zone can exist when importing the domain’s zone information from one DNS hosting provider to a new DNS server, where the nameserver provided by the hosting provider no longer resolves the domain. During domain resolution, the stale NS record at the SLD zone will not be used unless cached, as the nameserver received from the TLD will directly return the A record to find the domain’s IP address, as long as the NS records in the TLD zone (e.g., .com) are up-to-date. Our research shows that these stale NS records in the SLD can be practically exploited, leading to a stealthy hijack of active domains.

### Zombie Awakening Attack
We discovered that these stale NS records can be reactivated within a DNS hosting service when an adversary makes an unauthorized claim on another party’s domain to host the DNS records. This scenario allows the attacker to inject a valid NS response to the resolver and further hijack the domain. By strategically querying a resolver for the domain’s NS records, the adversary can make the resolver cache NS records that reside in the SLD zone as the valid NS response. A follow-up query for the IP address of the same domain could then trigger the stale NS record, opening the attack avenue by poisoning the resolver with the adversary’s A record configured at the DNS hosting side. Even in the presence of inconsistency (i.e., the absence of the stale record in the TLD zone), the NS records in the SLD zone will be used due to higher trust levels. We call this threat "zombie awakening" or "Zaw attack," and the vulnerable stale NS records "zombie referrals" or "Zrefs."

Our research demonstrates that the Zaw threat is realistic. We successfully exploited our own domains at various leading DNS hosting providers and resolvers maintained by major operators. Through a large-scale analysis, we discovered 628 vulnerable domains from Alexa’s top 1 million domains, including those of educational institutions, government entities, and companies. We designed a semi-automated approach, called ZreFinder, to automatically discover Zrefs. ZreFinder systematically collects the NS records for each target domain, looks for inconsistencies between the TLD zone and the SLD zone, and identifies the stale records associated with DNS hosting providers. For each DNS hosting provider, our approach determines if a domain can be claimed without authorization to build an illicit resolution path.

### Measurement and Mitigation
By running ZreFinder on Alexa’s top 1 million domains and a set of .edu and .gov domains, we found that this new threat is significant and impactful. We discovered 628 vulnerable domains, including 6 government domains associated with Colombia, Malaysia, and Saudi Arabia, and domains for 3 universities. Also flagged were those belonging to critical public services and big companies, such as Pittsburgh airport, Croatia airlines, and the FastSpring E-commerce platform. Additionally, we found that the Zrefs of such domains have been present for a while, with 89.97% of hijackable domains having Zrefs for at least 30 days.

Furthermore, our research shows that prominent DNS hosting services and popular public resolvers are vulnerable to the Zaw attack. Among them are 14 leading hosting providers, such as Amazon Route 53 and Hetzner Online GmbH, and more than 7,000 resolvers, including those operated by CloudFlare, Quad9, and OpenNIC. These resolvers can be easily poisoned, with an average of just 6.5 queries sufficient to contaminate their cache with malicious A records implanted on the hosting service side. This enables an adversary to stealthily control traffic to the target domain, potentially for purposes such as phishing or malware distribution.

We also discuss how to mitigate this new security risk. ZreFinder can be used to find Zrefs so they can be removed by domain owners. DNSSEC can also be leveraged to defeat Zaw attacks, although it has not been widely deployed. On the side of the DNS hosting provider, we present a simple verification technique to ensure that a domain cannot be claimed without authorization by requesting the domain owner to add a randomly-generated NS record at the TLD level.

### Contributions
- **Discovery of a New Security Risk**: We discovered a new security risk, the Zaw attack, in the DNS infrastructure. To our knowledge, this attack has never been shown practically before, highlighting the serious risk posed by stale NS records in the SLD zone, particularly with the emergence of DNS hosting services.
- **Automatic Discovery Technique**: We developed a new technique, ZreFinder, for the automatic discovery of domains with Zrefs. By scanning over 1 million high-profile domains, we identified 628 hijackable domains, affecting government agencies, public services, and large corporations.
- **Large-Scale Measurement Study**: We conducted a large-scale measurement study to understand the Zaw attack, identifying 14 affected DNS hosting providers and 10 vulnerable public resolver operators, and investigating the attack complexity in the real world.
- **Mitigation Suggestions**: We provided suggestions for affected parties to mitigate this new threat.

### Roadmap
- **Section 2**: Background on DNS structure and hosting providers.
- **Section 3**: Description of the Zaw attack.
- **Section 4**: Elaboration on the ZreFinder technique for large-scale measurement.
- **Section 5**: Presentation of our measurement findings.
- **Section 6**: Discussion of potential mitigations.
- **Section 7**: Comparison with prior research.
- **Section 8**: Conclusion.

## 2 Background
In this section, we provide background information about the DNS structure and its hosting providers, along with the assumptions made in our research.

### 2.1 DNS Resolution and Caching
#### DNS Structure and Resolution
The Domain Name System (DNS) resolves Fully Qualified Domain Names (FQDNs) to their corresponding IP addresses (and vice versa) through a hierarchical infrastructure. At the top of the hierarchy is the root ("."), under which are Top Level Domains (TLDs, e.g., .com, .net, and .org). These are followed by Second Level Domains (SLDs, e.g., example.com), which their owners register with registrars. Each node in the DNS hierarchy includes referral information for its child nodes, essential for the recursive DNS resolution process. The root zone contains an NS RRSet (Resource Record Set), with each RR pointing to a nameserver in charge of its children zone at the TLD level. Similarly, TLDs have NS RRSets that point to SLDs.

DNS resolution is typically done recursively by a DNS resolver. For example, when a client sends a DNS query to retrieve the IP address of an FQDN (e.g., www.example.com), if the resolver's cache carries no information about the requested domain, the resolver first forwards the query to the root server to trigger the recursive process. The root server then redirects the resolver to the .com TLD server, which further refers the resolver to the authoritative nameserver of example.com to get the IP address as a response. The resolver then sends the response back to the client. To optimize this process, resolvers can choose to cache any received DNS records for future resolutions.

#### DNS Response
Resolution information is organized into Resource Records (RRs) with the following format: name, Time-to-Live (TTL), class, type, and data. The `name` serves as the key when searching for a record. The `type` specifies the record type, such as A, NS, and CNAME, and the `class` defines the protocol, e.g., IN for the Internet protocol. Each record has a TTL field that determines the lifespan (in seconds) of the record when cached by a resolver. Note that resolvers may not adhere to the TTL and may instead set minimum and maximum limits for a record.

A DNS response includes a series of RRs in three main sections: answer, authority, and additional. The answer section contains the RR that answers the query, i.e., the domain’s IP address. The authority section holds a set of the authoritative nameservers for the domain. The additional section carries other RRs related to the query, such as the IPs of these authoritative nameservers. It is common for a domain to have more than one authoritative nameserver. During the resolution process, the resolver usually randomly picks one to balance the workload over the nameservers, or chooses the one statistically based on shorter Round-Trip Time (RTT).

#### DNS Caching
Resolvers often cache resolution results to improve performance. For each query, the resolver first checks its cache and directly replies to the client if the corresponding RR is found (a cache hit). A security risk of caching is DNS poisoning, where an attacker injects a malicious DNS response into the cache to direct victims to a server under their control. For this, the attacker needs to win the race against a legitimate response from the domain’s nameservers. The attack becomes increasingly difficult due to the protections in place for today’s resolvers.

```plaintext
;; ANSWER SECTION :
example . com .
46294
```

This concludes the background section. In the following sections, we will delve into the details of the Zaw attack, the ZreFinder technique, and our measurement findings.