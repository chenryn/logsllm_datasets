### Components and System Dependability

The components of an elevator system are crucial for achieving the primary objectives, such as ensuring passenger safety and efficient transportation. These components, however, rely on the outputs from other system elements, including the dispatcher, button sensors, and floor sensors. To enhance the overall dependability of the system, we can incorporate alternative functionalities that compensate for the failure of these components, thereby maintaining the operation of safety, drive control, and door control systems.

#### Safety Monitor Component

The safety monitor component is responsible for tracking the elevator's state and ensuring that it adheres to all safety conditions. If a violation is detected, the safety monitor triggers the emergency brake, leading to a complete shutdown of the elevator system. This ensures that the primary objective of keeping passengers safe from injury is always met. Unfortunately, there are no alternative functionalities in the elevator system that can fully satisfy this safety objective. Given the critical nature of safety, a redundant component is appropriate for the safety monitor, but not for all of its sensor inputs. A loss of any sensor input by the safety monitor will, by design, trigger an emergency shutdown.

#### Drive Controller

The drive controller sends commands to the drive motor to move the elevator to different floors, fulfilling the primary objective of delivering passengers to their desired destinations. It depends on the dispatcher component to provide the next floor destination, which in turn relies on the hall call and car call buttons to determine passenger requests. To ensure the drive controller continues to function in the event of dispatcher or button failures, we designed a default behavior where it periodically visits every floor. When the dispatcher is operational and providing its outputs, the drive controller allows the dispatcher's commands to override its default behavior.

The drive controller also uses floor, drive speed, and car position sensors to determine the appropriate commands for the drive motor. At low speeds, the elevator only needs floor sensor data to stop level with a floor. For faster travel, the drive controller uses the car position sensor to calculate the stopping distance and determine when to decelerate. To handle car position sensor failures, the drive controller is designed to command the drive motor to operate at a slower speed if the sensor data is lost. This approach sacrifices the auxiliary objective of minimizing travel time to guarantee the primary objective of delivering all passengers.

#### Dispatcher Redesign

We also redesigned the dispatcher component to implement alternative functionality in the event of hall and car call button failures. The dispatcher processes passenger requests efficiently by listening to button inputs. When a button fails, the dispatcher periodically synthesizes "faked" requests for floors, ensuring that the primary objective of delivering all passengers is met and that no floor is "starved" due to button failures. This alternative functionality uses a simple computation to substitute for missing sensors. However, during failures, the auxiliary objective of elevator performance may suffer because some floors may be unnecessarily visited when there are no passengers desiring that floor.

### Experimental Setup

To evaluate the effectiveness of our design changes, we conducted a series of experiments using a discrete event simulation of software components, sensors, actuators, and a real-time network with message delay. Sensor and actuator objects interact with simulated passenger objects. Each simulation experiment specifies a passenger profile, including the number of passengers, their arrival times, starting floors, and intended destinations. The elevator system configuration is determined by setting which components are failed at the start of the simulation.

We tested two hypotheses:
1. The changes made to the elevator system architecture would improve the system's ability to tolerate component failures.
2. Our system model would accurately predict the relative utility of system configurations, allowing us to use it as a validation tool for the impact of functional alternatives on the system's ability to tolerate component failures and continue to satisfy primary objectives.

We selected a subset of possible valid elevator system configurations representing a wide range of potential component failures. We tested several configurations where different subsets of car call and hall call buttons were failed, and configurations where the dispatcher component was failed. A total of 70 configurations were tested for both the original and improved architectures.

We generated a set of passenger arrival profiles to test each system configuration. Each profile included 50 passengers arriving randomly on different floors. Elevator systems typically deal with three types of traffic: two-way, down-peak, and up-peak. Two-way traffic assumes random passenger requests between floors. Down-peak traffic is characterized by 90% of the requests from passengers traveling to the first floor, while up-peak traffic is characterized by 90% of the requests from passengers traveling from the first floor to a random destination. The remaining 10% of passenger requests in both up-peak and down-peak traffic profiles are random two-way requests. Our experiments included 10 randomly generated passenger profiles for each type of traffic, resulting in 30 passenger tests. The total number of simulations run was 4200, with the elevator servicing seven floors.

### Results

We compared the original and improved elevator systems by measuring the number of passengers delivered during the simulation runs. Every configuration of the elevator with alternative functionality delivered 100% of its passengers for each simulation test. In contrast, the original elevator system frequently stranded passengers both in the car and on each floor waiting to be serviced when any of the car call and hall call buttons were broken.

Figure 3 shows the average percentage of passengers delivered per simulation for each configuration of the original elevator system. Only three configurations successfully delivered all passengers in every simulation run. These configurations corresponded to situations where only the passenger feedback lights were failed (configuration ID #4 and #5) and the configuration in which no components were failed (configuration ID #69). Only one test out of all the simulations managed, by chance, to deliver all 50 passengers (one of the two-way test profiles for configuration ID #30).

These results demonstrate that our system, augmented with functional alternatives, can tolerate combinations of component failures that would prevent the original system from meeting its objectives. It is more fault-tolerant than the original system.

To evaluate the accuracy of our system model in predicting relative changes in system utility due to component failures, we analyzed the relative performance of each configuration. System utility should measure how well the system fulfills its objectives, incorporating properties such as performance, functionality, and dependability. In our simulation experiments, we used the elevator's average performance per passenger as a proxy for system utility, measured by total passenger wait time plus transit time.

Figures 4 and 5 graph the utility of the tested system configurations versus the average elevator performance per passenger per simulation for the two-way and up-peak profile types. For the random two-way traffic profiles (Figure 4), the data indicates that the model approximates relative system utility for the configurations tested. The configuration with the most components failed and the least utility (ID #1) had the longest average passenger delivery time, while the configuration with no failed components (ID #69) had the shortest time.

For the up-peak traffic profiles (Figure 5), the model did not seem as accurate in predicting relative system performance. Many configurations that supposedly have higher utility values did not show better performance, indicating that further refinement of the model may be necessary.

In conclusion, our system with alternative functionalities significantly improves the fault tolerance and dependability of the elevator system, ensuring that the primary objectives are consistently met even in the presence of component failures.