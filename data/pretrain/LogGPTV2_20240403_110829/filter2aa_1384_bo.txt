Trunks.capsulecorp.local 252
Trunksadm account 251
tspkg command 142
type [FILE] | find /I [STRING] command 94
type [FILE] command 94
U
Ubuntu
building virtual machines 221–222
managing packages with apt 223
virtual penetration testing platform 14
UNIX post-exploitation 174
credential harvesting 163–166
escalating privileges with SUID binaries
166–171
maintaining reliable re-entry with cron 
jobs 156–163
passing SSH keys 171–174
unknown protocol 264
unpatched services, attacking 132
compromising Eternal Blue with 
Metasploit 121–124
using ms17_010_psexec exploit module 124
verifying that patch is missing 122–123
Meterpreter shell
payload 125–130
useful commands 127–130
public exploit database
cautions about 130–132
generating custom shellcode 130–132
software exploits 119–121
up ping 24
use module 238
username variable 105
/usr/bin/passwd binary 167
V
-v admin123 243
vagrant ssh pentest command 23
Vegeta hostname 249
Vegeta.capsulecorp.local 252
Vegetaadm account 251
VHOST parameter 238
vim hello.rb script 230
virtual penetration testing platform 13–15, 221–239
Linux 13–14
Metasploit 233–239
msfconsole 237–239
OS dependencies 233
Ruby gems 234–235
setting up PostgreSQL 235–236
Nmap 224–228
compiling and installing from source 227
exploring documentation 228
Nmap Scripting Engine 224–226
OS dependencies 226
OS dependencies 222–224
customizing terminal look and feel 224
installing CrackMapExec 224
managing Ubuntu packages with apt 223
pentest distributions 14–15
Ruby 228–233
Hello World example 230–233
installing Ruby Version Manager 229–230
Ubuntu project 14
Ubuntu virtual machines 221–222
vnc protocol 264
vnc_login module 72
vnc-brute script 225
vnc-http protocol 264
VNC, brute-force password guessing 72–73
VSC (Volume Shadow Copies) 185–188, 190
vssadmin command 185–186, 190
vssadmin list shadow command 186
vulnerability discovery 81
authentication vulnerabilities 65–73
brute-forcing local Windows account 
passwords 68–69
brute-forcing MSSQL and MySQL database 
passwords 69–72
brute-forcing VNC passwords 72–73
creating client-specific password list 66–67
configuration vulnerabilities 75–80
analyzing output from Webshot 77
manually guessing web server passwords
78–80
setting up Webshot 75–76
following path of least resistance 61–62
overview 60–62
patching vulnerabilities
general discussion 62–65
scanning for Eternal Blue 64–65
INDEX
283
W
-W 1 flag 26
WAR files
creating malicious 90
deploying 91
undeploying from Apache Tomcat 202–203
wc -l command 28
wc command 243–244
wdigest command 142
web services, attacking 101
compromising vulnerable Jenkins server
general discussion 99–101
Groovy script console execution 100–101
compromising vulnerable Tomcat server 89–92
accessing web shell from browser 92
creating malicious WAR file 90
deploying WAR file 91
gaining initial foothold 88–89
interactive vs. non-interactive shells 94
upgrading to interactive shell 94–98
backing up sethc.exe 95–96
launching sticky Keys via RDP 97–98
modifying file ACLs with cacls.exe 96–97
web shells
accessing from browser 92
deploying backdoor 87
generating custom shellcode 130–132
interactive vs. non-interactive shells 94
killing active shell connections 195
Meterpreter shell
payload 125–130
useful commands 127–130
upgrading to interactive 94–98
backing up sethc.exe 95–96
launching Sticky Keys via RDP 97–98
modifying file ACLs with cacls.exe 96–97
Webshot
analyzing output from 77
setting up 75–76
wget command 76
where command 148–149
white-box scoping 22
whoami command 92, 109, 182, 200
Windows
accounts
brute-force password guessing 68–69
stealing password hashes 110–114
post-exploitation 154
credential harvesting from filesystem
147–149
credential harvesting with Mimikatz 141–143
credential harvesting, domain cached 
credentials 143–147
maintaining reliable re-entry with 
Meterpreter 138–139
moving laterally with Pass-Hash 149–154
server creation 250–252
Gohan.capsulecorp.local 251
Goku.capsulecorp.local 250–251
Krillin.capsulecorp.local 252
Nappa.capsulecorp.local 252
Tien.capsulecorp.local 252
Trunks.capsulecorp.local 252
Vegeta.capsulecorp.local 252
Yamcha.capsulecorp.local 252
windows 244
workflow 5–8, 12
documentation phase 11–219
focused penetration phase 9–10, 86–88
accessing remote management services 87–88
attacking unpatched services 132
attacking vulnerable database services 117
attacking vulnerable web services 101
deploying backdoor web shells 87
exploiting missing software patches 88
information gathering phase 8–9
host discovery 37
service discovery 58
vulnerability discovery 81
post-exploitation and privilege escalation 
phase 10–11, 136–138
controlling entire network 190
credential harvesting 137
Linux or UNIX post-exploitation 174
maintaining reliable re-entry 137
moving laterally 137–138
Windows post-exploitation 154
X
-X command argument 138
:x shorthand 231
XML (Extensible Markup Language) 51
XML output
creating protocol-specific target lists 57–58
parsing with Ruby 52–58
xp_cmdshell
enabling 106–108
running OS commands with 108–109
xp_cmdshell stored procedure 104–109, 111, 
117, 200
Y
-y flag 94
Yamcha account 249, 251
Yamcha.capsulecorp.local 252
E
D
C
B
All the password
hashes
All the password
hashes
A
Attacking machine
Domain admin
logged in
Domain controller
Server 1
Server 2
Server 3
Server 4
Volume
shadow
copy
NTDS.dit
SYSTEM registry hive
lmpacket: secretsdump.py
Impersonate a domain admin
account
Mimikatz: Harvest credentials
Incognito: Steal tokens
$ net group "Domain Admins"/domain
Metasploit: psexec_command("qwinsta")
Domain admin
usernames
Domain admin
usernames
Domain admin
usernames
All the password
hashes
A. Identify domain admin user accounts.
B. Locate systems with domain admins logged in.
C. Elevate to domain admin privileges.
D. Obtain NTDS.dit and SYSTEM from VSC on
    domain controller.
E. Extract all domain account password hashes.
P
enetration testers uncover security gaps by attacking 
networks exactly like malicious intruders do. To become a 
world-class pentester, you need to master off ensive security 
concepts, leverage a proven methodology, and practice, practice, 
practice. Th is book delivers insights from security expert Royce 
Davis, along with a virtual testing environment you can use to 
hone your skills. 
The Art of Network Penetration Testing is a guide to simulating 
an internal security breach. You’ll take on the role of the 
attacker and work through every stage of a professional pentest, 
from information gathering to seizing control of a system and 
owning the network. As you brute force passwords, exploit 
unpatched services, and elevate network level privileges, you’ll 
learn where the weaknesses are—and how to take advantage 
of them.
What’s Inside
Set up a virtual pentest lab
Exploit Windows and Linux network vulnerabilities
Establish persistent re-entry to compromised targets
Detail your fi ndings in an engagement report
For tech professionals. No security experience required.
Royce Davis has orchestrated hundreds of penetration tests, 
helping to secure many of the largest companies in the world.
To download their free eBook in PDF, ePub, and Kindle formats, 
owners of this book should visit 
www.manning.com/books/the-art-of-network-penetration-testing
$49.99 / Can $65.99  [INCLUDING eBOOK]
The Art of Network Penetration Testing
SECURITY
“
An excellent reference 
for all stages of the 
 penetration process.”
—Sven Stumpf, BASF 
“
A practical approach that 
covers everything a beginner 
needs to get into the fi eld.”
—Imanol Valiente Martín 
Full On Net
“
Leads you through a practical 
and well-structured process. 
  Highly recommended!”
—Sithum Nissanka, Worldline
“
Excellent book! It teaches 
you how to defend yourself 
against attacks, but also how 
to execute penetration 
  tests yourself.”
—Marcel van den Brink
TBAuctions 
M A N N I N G
Royce Davis
See first page
ISBN: 978-1-61729-682-6