```  
id=1  
before for each row when (false)  
after for each row when (false)  
id=2  
before for each row when (false)  
after for each row when (false)  
....  
id=10  
before for each row when (true)  
after for each row when (true)  
...  
id=14  
before for each row when (false)  
after for each row when (false)  
```  
修改触发器函数, 判断放到函数中 :   
```  
digoal=> create or replace function tg() returns trigger as $$  
declare  
begin  
  if OLD.id=1 then   
    raise notice '%, %, %, %, old:%', TG_LEVEL, TG_WHEN, TG_OP, TG_NAME, OLD;  
    return old;   
  else   
    return null;   
  end if;  
end;  
$$ language plpgsql;  
CREATE FUNCTION  
digoal=> drop trigger tg0 on perf;  
DROP TRIGGER  
digoal=> drop trigger tg1 on perf;  
DROP TRIGGER  
digoal=> create trigger tg1 before delete on perf for each row execute procedure tg();  
CREATE TRIGGER  
digoal=> create trigger tg0 after delete on perf for each row execute procedure tg();  
CREATE TRIGGER  
```  
-- 测试  
```  
digoal=> insert into perf select generate_series(1,10000);  
INSERT 0 10000  
digoal=> delete from perf where id create table err (id int);  
CREATE TABLE  
digoal=> create or replace function tg() returns trigger as $$  
declare  
begin  
  raise exception '';  
  return new;  
end;  
$$ language plpgsql;  
CREATE FUNCTION  
digoal=> create trigger tg0 after insert on err for each statement execute procedure tg();  
CREATE TRIGGER  
digoal=> insert into err values (1);  
ERROR:  P0001:   
LOCATION:  exec_stmt_raise, pl_exec.c:2840  
digoal=> select * from err;  
 id   
----  
(0 rows)  
```  
## 16. 触发器函数的返回值是如何影响returning的结果的?  
上一篇blog已经详细讲解. 这里略.  
## 小结    
1\. 注意各种触发器在操作流中的顺序, 返回值的传递, 返回值的意义.    
2\. 注意当1个表上有多个同类触发器时, 需要注意他们之间的参数传递, 触发顺序.    
3\. 还要注意触发器的可视, 下一篇中会着重讲可视特性.    
## 参考    
1\. http://www.postgresql.org/docs/9.2/static/trigger-definition.html    
2\. http://www.postgresql.org/docs/9.2/static/trigger-datachanges.html    
3\. http://www.postgresql.org/docs/9.2/static/spi-visibility.html    
4\. http://www.postgresql.org/docs/9.2/static/trigger-example.html    
5\. http://www.postgresql.org/docs/9.2/static/plpgsql-trigger.html    
6\. http://www.postgresql.org/docs/9.2/static/sql-createtrigger.html    
7\. http://www.postgresql.org/docs/9.2/static/trigger-interface.html    
8\. http://www.postgresql.org/docs/9.2/static/sql-set-constraints.html    
9\. src/backend/commands/trigger.c    
10\. src/include/commands/trigger.h    
11\. src/include/utils/reltrigger.h    
12\. 触发器的应用 :     
http://blog.163.com/digoal@126/blog/static/16387704020128772037884/    
http://blog.163.com/digoal@126/blog/static/16387704020120133019990/    
http://blog.163.com/digoal@126/blog/static/163877040201251931517556/    
http://blog.163.com/digoal@126/blog/static/16387704020130931040444/    
http://blog.163.com/digoal@126/blog/static/163877040201301483549300/    
http://blog.163.com/digoal@126/blog/static/1638770402012325111528424/    
http://blog.163.com/digoal@126/blog/static/163877040201211193542316/    
http://blog.163.com/digoal@126/blog/static/1638770402012731203716/    
http://blog.163.com/digoal@126/blog/static/1638770402012731944439/    
http://blog.163.com/digoal@126/blog/static/16387704020128142829610/    
http://blog.163.com/digoal@126/blog/static/16387704020129851138327/    
http://blog.163.com/digoal@126/blog/static/163877040201119111234570/    
#### [PostgreSQL 许愿链接](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216")
您的愿望将传达给PG kernel hacker、数据库厂商等, 帮助提高数据库产品质量和功能, 说不定下一个PG版本就有您提出的功能点. 针对非常好的提议，奖励限量版PG文化衫、纪念品、贴纸、PG热门书籍等，奖品丰富，快来许愿。[开不开森](https://github.com/digoal/blog/issues/76 "269ac3d1c492e938c0191101c7238216").  
#### [9.9元购买3个月阿里云RDS PostgreSQL实例](https://www.aliyun.com/database/postgresqlactivity "57258f76c37864c6e6d23383d05714ea")
#### [PostgreSQL 解决方案集合](https://yq.aliyun.com/topic/118 "40cff096e9ed7122c512b35d8561d9c8")
#### [德哥 / digoal's github - 公益是一辈子的事.](https://github.com/digoal/blog/blob/master/README.md "22709685feb7cab07d30f30387f0a9ae")
![digoal's wechat](../pic/digoal_weixin.jpg "f7ad92eeba24523fd47a6e1a0e691b59")
#### [PolarDB 学习图谱: 训练营、培训认证、在线互动实验、解决方案、生态合作、写心得拿奖品](https://www.aliyun.com/database/openpolardb/activity "8642f60e04ed0c814bf9cb9677976bd4")
#### [购买PolarDB云服务折扣活动进行中, 55元起](https://www.aliyun.com/activity/new/polardb-yunparter?userCode=bsb3t4al "e0495c413bedacabb75ff1e880be465a")
#### [About 德哥](https://github.com/digoal/blog/blob/master/me/readme.md "a37735981e7704886ffd590565582dd0")