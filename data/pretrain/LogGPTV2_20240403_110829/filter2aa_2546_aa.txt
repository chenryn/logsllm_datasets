MetaPhish
“PDF Infection, Web SpearPhishing, TOR abuse & communications”
http://www.attackresearch.com
_____________________________________
Val Smith (PI:EMAIL)
David Kerb (PI:EMAIL)
Colin Ames (PI:EMAIL)
Page 1 of 26
Last modified: 06/27/2009
Contents
1 Introduction 
1.1 Abstract …………………………………………………………………………..……………2
1.2 Background ………………………………………………………………….……………….. 2
2 Spear­Phishing
2.1 Spear Phishing Concepts ………………………………………………..……………………. 3
2.2 Web kits, File Formats & Problems with Available Attack Code………..……………………3
3 Defining the Needs
3.1 Work Flow …………………………………..………………..………………………………4
4 Targeting
4.1 Targeting Basics ……………………..……………………..…………………………………5
4.2 File Targeting …………………….. ……………………….…………………………………5
4.3 Why PDF's …………………….. ………………………….…………………………………6
5 Web Spear Phishing
5.1 Work Flow………………………………………………….…………………………….…..7
5.2 SE and Malicious Java Applets…………………….……….………………………………...8
5.3 Automation ……………………..………………………….……………………………….. 10
6 Obfuscation
6.1 Simple Obfuscation Techniques ……………………..…….………………………………..12
7 TOR
7.1 Using TOR as a Weapon ……………………..…………..…………………………………13
7.2 Controlling the Exit Location
7.3 Making Any Service go Through TOR ………………..…….. ……………………………14
7.4 Running Nikto and Other Web Scanners Over TOR…..……………………………………17
7.5 Using VPN over TOR ……………………..…………..……………………………………18
7.6 Metasploit and TOR……………………..…………..………………………………………18
7.7 Making an Anonymous Reverse Shell Server……..………………..………………………18
References……………………..……………………………………………………..…… 20
Acknolwedgements ……………………..……………..……………………………   20
Appendix………………………….…………………..……………..……………..………21
Page 2 of 26
1 Chapter 1
Introduction
1.1 Abstract
Attackers have been increasingly using the web and client side attacks in order to steal 
information from victims. The remote exploit paradigm is shifting from the open port to 
the browser and email client. Penetration testers need to take these techniques into 
account in order to provide realistic tests.
In the past several years there have been numerous presentations on techniques for 
specific client side attacks and vulnerabilities. This talk will focus on building a phishing 
framework on top of Metasploit that pen testers can use to automate phishing and 
increase their overall capabilities. We will also cover some techniques for SpearPhishing 
on pen tests, second stage backdoors, and extensive communication over TOR.
1.2  Background
The authors of this paper have been involved in security auditing and penetration testing 
for the last ten years. A common ongoing trend in the penetration testing industry is to 
perform automated scans for lists of commonly known vulnerabilities, verify the 
existence of these problems with tools such as Core Impact, Canvas and Metasploit, and 
then generate a report documenting the results.
While this process is as an often necessary aspect of penetration testing, there is a 
growing belief amongst people in the field that tests should reflect the actual threats 
coming from the attackers rather than canned checklists developed over a number of 
years. The techniques which attackers use to successfully penetrate systems change 
rapidly while the tests auditors use stay relatively static with the potential exception of a 
popular exploit or recent 0day.
Spear fishing, file formats and anonymity are the areas that attackers have been most 
recently focused in. Many high profile attacks using these techniques have been 
mentioned in the press and technical literature; however penetration testers and those 
clients that hire them have been slow to embrace many of these techniques. This paper 
will focus on concepts that testers may be able to implement and build upon in order to 
provide a test which more accurately reflects the current risks being seen today in the 
wild.
Page 3 of 26
Chapter 2
Spear­Phishing
2.1 Spear Phishing Concepts
Spear Phishing is a technique by which the attacker generates an email or website that is 
tailored to a specific target. The goal is to convince the target to take action which gives 
the attacker access to their system by presenting them with text, images, URLs, etc. that 
they might plausibly expect.
In the past attacks have been carried out by scanning a target for remotely accessible 
ports and services, finding traditional vulnerabilities such as buffer and heap overflows, 
and sending an exploit remotely over the network to gain access. With the advent of 
firewalls, intrusion detection, access controls, filtering and host based technologies; these 
types of attacks are becoming less resilient and much more rare. In response to this, 
attackers have had to shift their focus to more social engineering and client side 
techniques. This is the way adversaries are gaining access now, today. Defense has 
remained focused on the “maginot” line or defense in depth paradigms while the 
attackers are exploiting the users access to their own machines.
Much of what is being seen are “blended attacks”. These are attacks which combine web 
sites and applications with file format exploits, malware such as backdoors, rootkits, 
keyloggers and social engineering in order to present a powerful threat to users and 
organizations.
A penetration tester may ask themselves: “How often do we pen test in this way? Do 
clients allow us to use these techniques against their networks and systems. If the answer 
is no, or rarely then a major vector of realistic threat is being missed and not tested. This 
exposes victims to attacks they may not even be aware exist.
2.2 Web Kits, File Formats and the Problems with Available Attack Code
Web kits such as mpack, tornado, adpack, luckysploit, zunker and many others are wide 
spread in use by attacks on the internet. These kits contain web application code for 
enumerating clients, delivering exploits, logging relevant information and deploying 
malware which further communicates with these web based infrastructures.
In combination with web kits, more and more attackers are employing file format exploits 
such as excel, powerpoint, pdf and others in order to present victims with a file that may 
exploit their vulnerable productivity software.
Page 4 of 26
All of these tools and techniques can be a valuable resource to the pen tester who is 
trying to implement realistic threats in their attacks. However these kits and exploits are 
uncontrolled. Many of them may contain backdoors, buggy code, or other problems. No 
tester wants to introduce unstable and untested code into their client environments. The 
solution to this problem is for qualified analysts to reverse engineer what real attackers 
are doing and re­implement the concepts in a stable, reliable manner that can be 
reproduced and used with confidence by other testers.
Chapter 3
Defining the Needs
3.1 Work Flow
There is a rough standard work flow to implementing spear phishing and file format 
attacks. First the attacker researches the type of targets they are going after, whether it is 
a particular organization, or simply all the users at large of a high traffic website.
Next the attacker builds a “legend” or social engineering story for the attack. This 
depends greatly on the victim, their expectations and the results of the reconnaissance 
phase. Once an adequate legend has been constructed, the attacker locates plausible 
documents, URLs, etc. from the target to go after.
Following that the attacker infects the files, be them PDF’s or other formats, builds a 
malicious website or whatever is appropriate for the particular attack and then presents 
the attack to the victims in the form of a targeted email, crosstie scripting attack, etc.
At the same time these types of attacks require a semi­elaborate infrastructure on the 
server side to ensure success. This includes a system for delivering exploits such as a web 
server, a mechanism for receiving incoming access from the victims while taking into 
account potential firewalls, proxies, HIDS/HFW and authorized egress ports. When 
dealing with the 100’s or 1000’s of victims attackers hope to penetrate, it is unrealistic to 
manually manage each victim and so techniques for automating post exploitation actions 
such as:
•
Gathering passwords
•
Installing 2nd stage backdoors / persistence
•
Enumerating system information
•
Grabbing authentication tokens
•
Log Manipulation and other Post exploitation activities
This infrastructure can rapidly grow to become highly complex and needs a moduler, 
controllable and well organized framework. 
Page 5 of 26
3.2 Why a Framework
Currently most client side tools are manual or stand alone and don’t fit in with a greater 
system of attack management. There are some tools like Core Impact which implement 
some of these techniques but they can be prohibitively expensive and often the testers 
don’t have a deep understanding of how the underlying system works. These tools also 
don’t take into account targeting or any tactical sorts of concepts and are simply a way to 
deploy a singular browser exploit to a victim.
A framework that employs modules or functions to implement all of the aspects of these 
attacks listed in the previous section can greatly help the pen tester in reliability, 
automation and control.
Chapter 4
Targeting
4.1 Targeting Basics
The goal during targeting for these types of attacks is to understand as much as possible 
about the targets infrastructure, hardware & software, habits, threshold for anomalies, and 
the layout and trusts of their various networks. Sometimes an IP address or range may be 
available but the target could have more ranges that are not known about, but exposing 
valuable data or vulnerability. There are techniques for finding these networks, but one 
that receives less attention is that of google hacking for leaked proxy log analysis results.
There are many tools available for the anlaysis of proxy logs such as the MySQL Squid 
Access Report and SARC. These tools will parse outgoing proxy logs and generate web 
based reports which are often available on the internet if an attacker knows which URL’s 
to search for. These logs can contain tons of valuable targeting information such as:
•
Internal IP Addresses & Hostnames
•
Client applications in use
•
Software Update Frequencies and Schedules
•
What Anti­Virus software is being used
•
Any software that communicates over the internet could leave a trail
4.2 File Targeting
Computer viruses have been using file formats for ages to sneak undetected through 
computers and networks to launch attacks that compromise data and access. The reason 