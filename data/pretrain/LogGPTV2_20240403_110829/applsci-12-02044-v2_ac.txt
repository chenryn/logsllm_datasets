enhanced algorithm achieved 91.49% on average when used with IPLoM and 92.11% in thecase of MoLFI. We also wanted to measure the compression rates on larger data, with the
size being measured in gigabytes. We only investigated the compression rates of MoLFI,
since it had the highest compression rate on the previous datasets. For this purpose, we
introduced four new datasets, A, B, C, and D, with the sizes of 2 GB, 5 GB, 10 GB, and 50 GB,respectively. The compression rates achieved are shown in Table 3 and Figures 19–22.
Table 3. Compression rates on the A, B, C and D datasets.
| Dataset | Proposed | LZMA | Bzip2 | PPMd |
|---|---|---|---|---|
| A |94.652% |92.931% |95.823% |95.542% |
| B |94.782% |92.931% |95.823% |95.543% |
| C |94.650% |92.932% |95.823% |95.543% |
| D |94.682% |92.931% |95.823% |95.543% |
Appl. Sci. 2022, 12, 2044 17 of 32Appl. Sci. 2022, 12, 2044 17 of 32
Compression rates on the "A" dataset
100.000
75.000
Rate (%) 50.000
25.000
0.000
Proposed LZMA Bzip2 PPMd
Figure 19. The comparison of compression rates of the enhanced algorithm and general compressors
on the A dataset.
Compression rates on the "B" dataset
100.000
75.000
Rate (%) 50.000
25.000
0.000
Proposed LZMA Bzip2 PPMd25.000
0.000
Proposed LZMA Bzip2 PPMd
Figure 20. The comparison of compression of the enhanced algorithm and general compressors on
the B dataset.
Compression rates on the "C" dataset
100.000
75.000
Rate (%) 50.000
25.000
0.000
Proposed LZMA Bzip2 PPMd
Figure 21. The comparison of compression rates of the enhanced algorithm and general compressors
on the C dataset.
Appl. Sci. 2022, 12, 2044 18 of 32Appl. Sci. 2022, 12, 2044 18 of 32
Compression rates on the "D" dataset
100.000
75.000
Rate (%) 50.000
25.000
0.000
Proposed LZMA Bzip2 PPMd
Figure 22. The comparison of compression rates of the enhanced algorithm and general compressors
on the D dataset.on the D dataset.
It can be seen that, in the case of larger files (with the size of gigabytes), there was no improvement in the compression rate of the examined methods. Bzip2 and PPMd have the best rates, with 95.823% and 94.543%, respectively, while our algorithm falls slightly behind them (approximately 1%). The proposed algorithm also outperforms LZMA with 1.75%.5.2.4. Experiment 4: Comparing the Speeds of the New Enhanced Algorithm and General Compressors
As mentioned before, the time an algorithm takes to compress the data is also an important measure. As a result of this, we wanted to compare the speeds of the general compressors against our enhanced algorithm. Both the compression and decompression times are analyzed. The time it takes to compress the used datasets are visualized in Figures 23–26.Compression and decompression speeds on the Small 
dataset
| Method | IPLoM
MoLFI
LZMA
Bzip2
PPMd | Compression speed 	Decompression speed
 | Compression speed 	Decompression speed
 | Compression speed 	Decompression speed
 | Compression speed 	Decompression speed
 | Compression speed 	Decompression speed
 |
|---|---|---|---|---|---|---|
| Method |0.000 |0.000 |0.200 |0.400 |0.600 |0.800 |Elapsed time (s)
Figure 23. The speeds of the enhanced algorithm and general compressors on the Small dataset.
Appl. Sci. 2022, 12, 2044 19 of 32
Compression and decompression speeds on the Mid dataset
| Method | Compression speed | Compression speed | Compression speed | Compression speed | Decompression speed | Decompression speed | Decompression speed | Decompression speed ||---|---|---|---|---|---|---|---|---|
| Method |IPLoM MoLFI LZMA Bzip2 PPMd | | | | | | | |
| Method |0.000 |0.000 |1.000 |2.000 |2.000 |3.000 |4.000 |5.000 |
Elapsed time (s)
Figure 24. The speeds of the enhanced algorithm and general compressors on the Mid dataset.
Compression and decompression speeds on the Large 
dataset
| Method | IPLoM
MoLFI
LZMA
Bzip2
PPMd | Compression speed 	Decompression speed| Compression speed 	Decompression speed
 | Compression speed 	Decompression speed
 | Compression speed 	Decompression speed
 | Compression speed 	Decompression speed
 | Compression speed 	Decompression speed
 |
|---|---|---|---|---|---|---|---|
| Method |0.000 |0.000 |1.000 |2.000 |3.000 |4.000 |5.000 |
Elapsed time (s)
Figure 25. The speeds of the enhanced algorithm and general compressors on the Large dataset.Compression and decompression speeds on the Big dataset
| Method | Compression speed | Compression speed | Compression speed | Compression speed | Decompression speed | Decompression speed | Decompression speed | Decompression speed | Decompression speed |
|---|---|---|---|---|---|---|---|---|---|
| Method |IPLoM MoLFI LZMA Bzip2 PPMd | | | | | | | | |
| Method |0.000 |0.000 |2.000 |4.000 |4.000 |6.000 |8.000 |10.000 |12.000 |Elapsed time (s)
Figure 26. The speeds of the enhanced algorithm and general compressors on the Big dataset.
Appl. Sci. 2022, 12, 2044 20 of 32Based on the results, it can be said that general compressors take less time to compress data than our enhanced algorithm. The explanation behind this is that the algorithm has to count and order the templates based on their occurrences, which takes more time than creating a stream of literals or allocating probabilities. It can also be seen that the more log entries that have to be counted, the more time our algorithm takes. Apart from this, we still consider our algorithm to be fast, since it compresses large amounts of data in just a few seconds. In terms of decompression time, our algorithm takes twice as much time as the general compressors, since it has to look up two dictionaries to decode the log messages. Aside from that, our algorithm is slower to decompress than general compressors; it only needs seconds in the case of the investigated datasets. The MoLFI variant of our enhanced algorithm is slightly faster in terms of both compression and decompression.5.2.5. Experiment 5: Comparing the Compression Rates of the Joint Use of the New Enhanced Algorithm and General Compressors
In this experiment, we wanted to investigate if the compression rate can be further improved if we use our enhanced algorithm in conjunction with the general compressors. These compression rates can be seen in Figures 27–30.
Figure 27. The compression rates of the joint use on the Small dataset.Figure 28. The compression rates of the joint use on the Mid dataset.
Appl. Sci. 2022, 12, 2044 21 of 32
Figure 29. The compression rates of the joint use on the Large dataset.
Figure 30. The compression rates of the joint use on the Big dataset.The use of a general compressor improves the compression rate of our enhanced algorithm by approximately 5%, but this rate still does not reach the compression rate of the single use of general compressors. Nonetheless, we would encourage the use of both our algorithm and traditional compressors, since they can function as a wrapper for our template- and parameter-dictionaries, codec, and compressed file. Out of the tried combinations, the MoLFI variant of our enhanced algorithm used alongside PPMd had the best compression rate with an average of 98.42%.We also wanted to investigate the compression rate of the joint use of the MoLFI version (since it has better rates) of our proposed method and general compressors on the previously mentioned datasets, A, B, C, and D. The results are shown in Figures 31–34.
Appl. Sci. 2022, 12, 2044 22 of 32
Figure 31. The compression rates of the joint use on the A dataset.Figure 32. The compression rates of the joint use on the B dataset.
Figure 33. The compression rates of the joint use on the C dataset.
Appl. Sci. 2022, 12, 2044 23 of 32