    # ip -4 route
    default via 198.51.100.254 dev enp7s0 proto static metric 100
    192.0.2.0/24 via 198.51.100.1 dev enp7s0 proto static metric 100
    203.0.113.0/24 via 198.51.100.2 dev enp7s0 proto static metric 100
    ...
    ```
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-system-roles-to-configure-network-connections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#proc_using-system-roles-to-set-ethtool-features_using-system-roles-to-configure-network-connections}使用 RHEL 系统角色设置 ethtool 功能 {.title}
:::
您可以使用网络 RHEL 系统角色配置 NetworkManager 连接的
`ethtool`{.literal} 功能。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
当您运行使用 Networking RHEL 系统角色的 play 时，如果设置的值与 play
中指定的名称不匹配，则系统角色会覆盖具有相同名称的连接配置集。因此，始终在剧本中指定网络连接配置文件的整个配置，即使
IP 配置已经存在。否则，角色会将这些值重置为默认值。
:::
根据它是否已存在，流程使用以下设置创建或更新 `enp1s0`{.literal}
连接配置文件：
::: itemizedlist
-   静态 `IPv4`{.literal} 地址 - `198.51.100.20`{.literal} ，子网掩码为
    `/24`{.literal}
-   静态 `IPv6`{.literal} 地址 - `2001:db8:1::1`{.literal} ，子网掩码为
    `/64`{.literal}
-   `IPv4`{.literal} 默认网关 - `198.51.100.254`{.literal}
-   `IPv6`{.literal} 默认网关 - `2001:db8:1::fffe`{.literal}
-   `IPv4`{.literal} DNS 服务器 - `198.51.100.200`{.literal}
-   `IPv6`{.literal} DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
-   `ethtool`{.literal} 功能：
    ::: itemizedlist
    -   通用接收卸载(GRO)：禁用
    -   通用分段卸载(GSO)：启用
    -   TX 流控制传输协议(SCTP)段：禁用
    :::
:::
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 软件包和 `rhel-system-roles`{.literal}
    软件包安装在控制节点上。
-   如果您在运行 playbook 时使用了与 root
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建
    `~/configure-ethernet-device-with-ethtool-features.yml`{.literal}
    playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with ethtool features
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp1s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 198.51.100.20/24
                  - 2001:db8:1::1/64
                gateway4: 198.51.100.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 198.51.100.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              ethtool:
                features:
                  gro: "no"
                  gso: "yes"
                  tx_sctp_segmentation: "no"
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/configure-ethernet-device-with-ethtool-features.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/configure-ethernet-device-with-ethtool-features.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
    文件
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
::: section
::: titlepage
# []{#using-system-roles-to-configure-network-connections_administration-and-configuration-tasks-using-system-roles-in-rhel.html#proc_using-system-roles-to-configure-ethtool-coalesce-settings_using-system-roles-to-configure-network-connections}使用 RHEL 系统角色配置 ethtool coalesce 设置 {.title}
:::
您可以使用网络 RHEL 系统角色配置 NetworkManager 连接的
`ethtool`{.literal} coalesce 设置。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
当您运行使用 Networking RHEL 系统角色的 play 时，如果设置的值与 play
中指定的名称不匹配，则系统角色会覆盖具有相同名称的连接配置集。因此，始终在剧本中指定网络连接配置文件的整个配置，即使
IP 配置已经存在。否则，角色会将这些值重置为默认值。
:::
根据它是否已存在，流程使用以下设置创建或更新 `enp1s0`{.literal}
连接配置文件：
::: itemizedlist
-   静态 IPv4 地址 -
    `198.51.100.20`{.literal}，子网掩码为`/24`{.literal}
-   静态 IPv6 地址 - `2001:db8:1::1`{.literal} 和 `/64`{.literal}
    子网掩码
-   IPv4 默认网关 - `198.51.100.254`{.literal}
-   IPv6 默认网关 - `2001:db8:1::fffe`{.literal}
-   IPv4 DNS 服务器 - `198.51.100.200`{.literal}
-   IPv6 DNS 服务器 - `2001:db8:1::ffbb`{.literal}
-   DNS 搜索域 - `example.com`{.literal}
-   `ethtool`{.literal} coalesce 设置：
    ::: itemizedlist
    -   RX 帧：`128`{.literal}
    -   TX 帧：`128`{.literal}
    :::
:::
::: itemizedlist
**先决条件**
-   `ansible-core`{.literal} 和 `rhel-system-roles`{.literal}
    软件包在控制节点上安装。
-   如果您在运行 playbook 时使用了与 root
    不同的远程用户，则此用户在受管节点上具有合适的 `sudo`{.literal}
    权限。
:::
::: orderedlist
**步骤**
1.  如果您要在其上执行 playbook
    中指令的主机还没有被列入清单，请将此主机的 IP 或名称添加到
    `/etc/ansible/hosts`{.literal} Ansible 清单文件中：
    ``` literallayout
    node.example.com
    ```
2.  使用以下内容创建
    `~/configure-ethernet-device-with-ethtoolcoalesce-settings.yml`{.literal}
    playbook：
    ``` literallayout
    ---
    - name: Configure an Ethernet connection with ethtool coalesce settings
      hosts: node.example.com
      become: true
      tasks:
      - include_role:
          name: rhel-system-roles.network
        vars:
          network_connections:
            - name: enp1s0
              type: ethernet
              autoconnect: yes
              ip:
                address:
                  - 198.51.100.20/24
                  - 2001:db8:1::1/64
                gateway4: 198.51.100.254
                gateway6: 2001:db8:1::fffe
                dns:
                  - 198.51.100.200
                  - 2001:db8:1::ffbb
                dns_search:
                  - example.com
              ethtool:
                coalesce:
                  rx_frames: 128
                  tx_frames: 128
              state: up
    ```
3.  运行 playbook：
    ::: itemizedlist
    -   要以 `root`{.literal} 用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u root ~/configure-ethernet-device-with-ethtoolcoalesce-settings.yml
        ```
    -   以用户身份连接到受管主机，请输入：
        ``` literallayout
        # ansible-playbook -u user_name --ask-become-pass ~/configure-ethernet-device-with-ethtoolcoalesce-settings.yml
        ```
        `--ask-become-pass`{.literal} 选项确保
        `ansible-playbook`{.literal} 命令提示输入
        `-u user_name`{.literal} 选项中定义的用户的 `sudo`{.literal}
        密码。
    :::
    如果没有指定 `-u user_name`{.literal}
    选项，`ansible-playbook`{.literal}
    以当前登录到控制节点的用户身份连接到受管主机。
:::
::: itemizedlist
**其他资源**
-   `/usr/share/ansible/roles/rhel-system-roles.network/README.md`{.literal}
-   `ansible-playbook(1)`{.literal} 手册页
:::
:::
:::
[]{#configuring-secure-communication-with-the-ssh-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html}
::: chapter
::: titlepage
# []{#configuring-secure-communication-with-the-ssh-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#configuring-secure-communication-with-the-ssh-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel}第 6 章 使用 SSH 系统角色配置安全通信 {.title}
:::
作为管理员，您可以使用 SSHD 系统角色配置 SSH 服务器和 SSH
系统角色，以使用 Ansible Core 软件包同时在任意数量的 RHEL 系统中配置 SSH
客户端。
::: section
::: titlepage
# []{#configuring-secure-communication-with-the-ssh-system-roles_administration-and-configuration-tasks-using-system-roles-in-rhel.html#sshd-system-role-variables_configuring-secure-communication-with-the-ssh-system-roles}SSH 服务器系统角色变量 {.title}
:::
在 SSH Server 系统角色 playbook 中，您可以根据您的首选项和限制定义 SSH
配置文件的参数。
如果您没有配置这些变量，则系统角色会生成与 RHEL 默认值匹配的
`sshd_config`{.literal} 文件。
在所有情况下，布尔值在 `sshd`{.literal} 配置中都正确呈现为
`yes`{.literal} 和 `no`{.literal}。您可以使用 list
来定义多行配置项。例如：
``` screen
sshd_ListenAddress:
  - 0.0.0.0
  - '::'
```
呈现为：
``` screen
ListenAddress 0.0.0.0
ListenAddress ::
```
::: variablelist
**SSH 服务器系统角色的变量**
[`sshd_enable`{.literal}]{.term}
:   如果设置为 `False`{.literal}，则角色将被完全禁用。默认值为
    `True`{.literal}。
[`sshd_skip_defaults`{.literal}]{.term}
:   如果设置为
    `True`{.literal}，则系统角色不会应用默认值。相反，您可以使用
    `sshd`{.literal} dict 或 `sshd_Key`{.literal}
    变量来指定完整的配置默认值集合。默认值为 `False`{.literal}。
[`sshd_manage_service`{.literal}]{.term}
:   如果设置为
    `False`{.literal}，则服务不会被管理，这意味着它不会在引导时启用，也不会启动或重新加载。除非在容器内或
    AIX 中运行，否则默认为 `True`{.literal}，因为 Ansible
    服务模块目前不支持对 AIX 的 `启用`{.literal} 。
[`sshd_allow_reload`{.literal}]{.term}
:   如果设置为 `False`{.literal}，则`sshd`{.literal}
    不会在配置更改后重新加载。这可帮助进行故障排除。要应用更改后的配置，请手动重新加载
    `sshd`{.literal}。默认为与 `sshd_manage_service`{.literal}
    相同的值，但 AIX 除外，其中 `sshd_manage_service`{.literal} 默认为
    `False`{.literal}，但 `sshd_allow_reload`{.literal} 默认为
    `True`{.literal}。
[`sshd_install_service`{.literal}]{.term}
:   如果设置为 `True`{.literal}，该角色将为 `sshd`{.literal}
    服务安装服务文件。这会覆盖操作系统中提供的文件。除非您要配置第二个实例，否则不要设置为
    `True`{.literal}，您也可以更改 `sshd_service`{.literal}
    变量，。默认值为 `False`{.literal}。
    该角色使用以下变量指向的文件作为模板：
    ``` screen
    sshd_service_template_service (default: templates/sshd.service.j2)
    sshd_service_template_at_service (default: templates/PI:EMAIL)
    sshd_service_template_socket (default: templates/sshd.socket.j2)
    ```