### 3.4 Future Enhancements

There are several areas for improvement in our attacker modeling that were not addressed in the first version of our simulator:

1. **Multiple Attackers:**
   - **Current Limitation:** The current model only allows for a single attacker.
   - **Future Enhancement:** While we do allow multiple sites of attack, which can simulate coordinated actions, future versions should explicitly support multiple attackers. This will enable researchers to experiment with techniques for attributing attacks to different individuals and disentangling the activities of true threats from those of less significant "ankle-biters."

2. **Action Durations:**
   - **Current Limitation:** The concurrency semantics in the current model are strictly based on interleaving, without distinguishing between actions that consume different amounts of time.
   - **Future Enhancement:** Incorporating variable durations for actions will add complexity but is necessary for more realistic simulations. Existing frameworks, such as the situation calculus and Golog, already provide theoretical support for this. However, accurate estimates of action durations and their dependencies on environmental factors (e.g., network and host load) are needed.

3. **Stochastic Actions:**
   - **Current Limitation:** All actions in the current system are deterministic.
   - **Future Enhancement:** Introducing stochastic actions, where success is probabilistic, will better reflect real-world scenarios. The formal framework for stochastic actions exists, but the main challenge lies in acquiring the necessary knowledge to implement these actions accurately.

4. **Open Domain Entities:**
   - **Current Limitation:** Most systems for working with the situation calculus and Golog assume a finite domain of entities.
   - **Future Enhancement:** Modeling computer intrusions requires the ability to create and destroy entities dynamically (e.g., login sessions). A fixed pool of potential entities is a temporary solution but has limitations. Further technical work is needed to handle open-domain entities effectively.

5. **Agent Knowledge and Beliefs:**
   - **Current Limitation:** The current system has a limited treatment of agents' knowledge and beliefs.
   - **Future Enhancement:** Extending the model to include a full knowledge representation for attackers is essential. This will allow for more realistic simulations, especially when considering the varying levels of expertise and tools used by different attackers.

6. **Tooling and Validation:**
   - **Current Limitation:** The current environment lacks robust compile-time and run-time validation.
   - **Future Enhancement:** Developing better tools for working with the attacker simulation tool is crucial. This includes type-checking, improved debugging, and further syntactic extensions to make the language easier to use.

### 4. Modeling the Cyber Attack Domain

In this section, we discuss how we model cyber attack domains using our tool, followed by a specific example, the "Frostbite Falls" scenario. We then describe a simulated attack generated by our simulator, showcasing the attacker's ability to adapt to outcomes and use multiple plans and exploits.

#### 4.1 Rationale for Modeling

Our modeling approach is driven by two key objectives:
1. **Cost-Effective Intrusion Research:** To support more cost-effective and repeatable intrusion research, particularly for extended attack scenarios.
2. **Sensor Fusion:** To study how intelligent systems can combine reports from multiple sensors into an overall situation assessment.

#### 4.2 Frostbite Falls Scenario

The Frostbite Falls scenario involves a cracker, b0r15, attempting to gain access to an Oracle database on a host named fellini. The attack involves several steps:
1. **Prepare to Attack:** Get b0r15 logged into a workstation he owns.
2. **Conduct Reconnaissance:** Perform zone transfers, IP sweeps, and port scans.
3. **Gain Access to the Oracle Database:** Use various methods, including session hijacking and privilege escalation, to achieve root access and install a sniffer.

### 5. Related Work

Several related works have contributed to the field of attack modeling:
- **Cuppens and Ortalo [4]** and **Templeton and Levitt [29]** have developed modeling languages based on actions with preconditions and postconditions.
- **Model-Checking Techniques [24, 28]:** These approaches use model checkers to assess network vulnerabilities, but they focus on worst-case attacks rather than naturalistic modeling of attackers.

### 6. Conclusions

We have presented a comprehensive approach to simulating computer network attacks using the situation calculus and Golog. Our prototype simulator can model a single attacker who synthesizes full network attacks from a library of plans and primitive actions, adapting to successes and failures. Future enhancements, such as supporting multiple attackers, incorporating variable action durations, and improving tooling, will further enhance the realism and utility of our simulations.

### Acknowledgements

We thank Maurice Pagnucco for assistance with Indigolog, and Keith Golden for comments based on his experience with softbot planning. Thanks also to the Argus/Scyllarus team, Dick Kemmerer, and Giovanni Vigna for the Frostbite Falls scenario. This work was supported by DARPA/ITO and the Air Force Research Laboratory under Contract No. F30602-99-C-0017.

### References

[1] American Association for Artificial Intelligence, Proceedings of the Seventeenth National Conference on Artificial Intelligence, Menlo Park, CA, July 2000. AAAI Press/MIT Press.

[2] C. Boutilier, R. Reiter, M. Soutchanski, and S. Thrun, “Decision-theoretic, High-level Agent Programming in the Situation Calculus,” in Proceedings of the Seventeenth National Conference on Artificial Intelligence [1], pp. 355–362.

[3] M. E. Bratman, “What is Intention?,” in Intentions in Communication, P. Cohen, J. Morgan, and M. Pollack, editors, chapter 2, pp. 15–31, MIT Press, Cambridge, MA, 1990.

[4] F. Cuppens and R. Ortalo, “LAMBDA: A Language to Model a Database for Detection of Attacks,” in RAID, H. Debar, L. M´e, and S. F. Wu, editors, volume 1907 of Lecture Notes in Computer Science, pp. 197–216. Springer, 2000.

[5] DARPA and the IEEE Computer Society, DARPA Information Survivability Conference and Exposition(DISCEX-2001), 2001.

[6] O. Etzioni, “Intelligence without Robots: A Reply to Brooks,” AI Magazine, vol. 14, no. 4, pp. 7–13, 1993.

[7] O. Etzioni, K. Golden, and D. Weld, “Tractable Closed World Reasoning with Updates,” in Principles of Knowledge Representation and Reasoning:Proceedings of the Fourth International Conference, J. Doyle, E. Sandewall, and P. Torasso, editors, pp. 178–189. Morgan Kaufmann Publishers, Inc., 1994.

[8] A. Finzi, F. Pirri, and R. Reiter, “Open World Planning in the Situation Calculus,” in Proceedings of the Seventeenth National Conference on Artificial Intelligence [1], pp. 754–760.

[9] R. J. Firby, “An Investigation in Reactive Planning in Complex Domains,” in Proceedings of the Sixth National Conference on Artificial Intelligence, pp. 196–201. AAAI, Morgan Kaufmann Publishers, Inc., 1987.

[10] C. W. Geib and R. P. Goldman, “Plan recognition in intrusion detection systems,” in DARPA Information Survivability Conference and Exposition(DISCEX-2001) [5], pp. 46–55.

[11] M. Georgeff and A. Lansky, “Procedural Knowledge,” Proceedings of the IEEE, Special Issue on Knowledge Representation, vol. 74, pp. 1383–1398, October 1986.

[12] M. P. Georgeff and F. F. Ingrand, “Real-Time Reasoning: The Monitoring and Control of Spacecraft Systems,” in Proceedings of the Sixth Conference on Artificial Intelligence Application, pp. 198–204, 1990.