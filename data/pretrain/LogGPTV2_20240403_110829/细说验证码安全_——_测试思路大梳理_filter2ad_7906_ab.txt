    http://www.anquan.us/static/bugs/wooyun-2015-0102178.html
    http://www.anquan.us/static/bugs/wooyun-2012-07413.html
#### 0x06 是否校验可控
天才才能写出来的验证码校验机制，请求中存在一个字段，来决定是否进行校验，修改为 false(0) 即可
WooYun中有5个类似案例
    http://www.anquan.us/static/bugs/wooyun-2014-071289.html
    http://www.anquan.us/static/bugs/wooyun-2013-034367.html
    http://www.anquan.us/static/bugs/wooyun-2013-026219.html
    http://www.anquan.us/static/bugs/wooyun-2012-014563.html
    http://www.anquan.us/static/bugs/wooyun-2014-082981.html
#### 0x07 超过次数才开启验证码
接口在登录错误超过一定次数后才会开启验证码，这种机制要么是基于ip判断，要么就是基于session判断，要么是基于账号判断
  * 案例1 （基于session）
如果是基于Session判断，我们清空session即可绕过。
WooYun中有1个类似案例
    http://www.anquan.us/static/bugs/wooyun-2015-0114450.html
  * 案例2 （基于ip）
如果是基于ip判断，我们可以尝试ip是否可以伪造，或者使用代理池
WooYun中有1个类似案例
    http://www.anquan.us/static/bugs/wooyun-2014-080327.html
  * 案例3 （基于账号）
服务端的限制仅针对于特定账号，比如某账户错误5次以上开启验证码。
这种情况下虽然无法暴力破解特定账户，但是仍然可以实施撞库攻击
WooYun中有2个类似案例
    http://www.anquan.us/static/bugs/wooyun-2015-0149748.html
    http://www.anquan.us/static/bugs/wooyun-2016-0193985.html
#### 0x08 验证码可预测
当验证码与时间戳等因素强相关时，就不再具有随机性的属性，导致验证码形同虚设。
WooYun中有1个类似案例
    http://www.anquan.us/static/bugs/wooyun-2015-0115041.html
### 3 身份验证码安全
身份验证码主要是为了验证操作人身份，然后进行 密码修改、账户变更、重要操作等功能。
而这类验证码主要牵扯到5类安全问题：
1、验证码返回给客户端
2、业务流程缺陷
3、验证码无时间间隔限制
4、验证码可爆破
5、验证码在客户端生成
将乌云中的案例去重、去无关案例后，有41个身份验证码的案例，分布如下：
#### 0x01 验证码返回客户端
服务器将验证码明文返回给客户端，本来觉得这种错误比较低级，没想到这样的案例还挺多。
大致有三种可能，一种是验证码校验在客户端进行，这种错误太低级了，可能性不大。
另一种情况：
1、客户点击获取验证码
2、程序生成一个随机验证码，将参数拼接之后，提交给短信API
3、客户端需要判断是否发送成功，所以程序将短信API返回的内容交给了客户端
作为一个短信API，很有可能会在response中包含了发送的短信内容，导致验证码的泄露
最后一种情况，开发写API的时候，为了方便调试，返回了这些信息，后来忘删了...
  * 案例
WooYun中有15个类似案例
    http://www.anquan.us/static/bugs/wooyun-2016-0179467.html
    http://www.anquan.us/static/bugs/wooyun-2016-0172266.html
    http://www.anquan.us/static/bugs/wooyun-2015-0139468.html
    http://www.anquan.us/static/bugs/wooyun-2014-085124.html
    http://www.anquan.us/static/bugs/wooyun-2014-082114.html
    http://www.anquan.us/static/bugs/wooyun-2014-078687.html
    http://www.anquan.us/static/bugs/wooyun-2014-066510.html
    http://www.anquan.us/static/bugs/wooyun-2014-049813.html
    http://www.anquan.us/static/bugs/wooyun-2014-049547.html
    http://www.anquan.us/static/bugs/wooyun-2013-042464.html
    http://www.anquan.us/static/bugs/wooyun-2013-024195.html
    http://www.anquan.us/static/bugs/wooyun-2013-022009.html
    http://www.anquan.us/static/bugs/wooyun-2013-019668.html
    http://www.anquan.us/static/bugs/wooyun-2014-085124.html
    http://www.anquan.us/static/bugs/wooyun-2014-082114.html
#### 0x02 业务流程缺陷
涉及到验证码的业务，通常都分为多步进行，比如 修改手机号功能：认证原手机号 -> 填写新手机号
当下一步的业务，没有校验上一步的认证是否成功时，就会存在逻辑缺陷绕过。
  * 案例1 （修改response绕过）
填写手机验证码时填任意值，然后修改请求的response包中的标识字段，将其修改为true，即可绕过
实际上这种问题，本质上也是业务流程的逻辑缺陷问题。
虽然验证码的校验在服务端进行，但是下一步的业务，并没有校验上一步的认证是否成功，两者之间是独立的
这就导致我们可以修改response，让客户端直接跳入下一次逻辑，我们也可以审计源码，直接找出下一步的url
WooYun中有5个类似案例
    http://www.anquan.us/static/bugs/wooyun-2015-0151201.html
    http://www.anquan.us/static/bugs/wooyun-2015-0120951.html
    http://www.anquan.us/static/bugs/wooyun-2015-0119252.html
    http://www.anquan.us/static/bugs/wooyun-2015-0104509.html
    http://www.anquan.us/static/bugs/wooyun-2015-090379.html
  * 案例2 （手机号合法性）
在验证码校验过程中，程序应严格检查对应关系，即 接收验证码的手机号，是否是该账户对应的手机号
如果不存在这处对应关系校验，则会衍生出各种逻辑问题，比如用自己的手机通过验证，然后修改其它人的信息
其实这种情况下，也是存在业务流程缺陷的问题。下一步的业务，并没有校验上一步业务中，手机号是否是属于该账户的
    http://www.anquan.us/static/bugs/wooyun-2015-0102205.html
    http://www.anquan.us/static/bugs/wooyun-2011-03099.html
    http://www.anquan.us/static/bugs/wooyun-2014-080315.html
#### 0x03 验证码无时间间隔限制
服务端对用户请求短信的频次没有时间间隔限制，或者是在客户端限制，可导致短信资源滥用
没有基于session、ip、账户的限制，属于完全无限制的情况
    http://www.anquan.us/static/bugs/wooyun-2012-010102.html
    http://www.anquan.us/static/bugs/wooyun-2012-010556.html
    http://www.anquan.us/static/bugs/wooyun-2012-04876.html
    http://www.anquan.us/static/bugs/wooyun-2012-04771.html
    http://www.anquan.us/static/bugs/wooyun-2012-04166.html
    http://www.anquan.us/static/bugs/wooyun-2012-04022.html
    http://www.anquan.us/static/bugs/wooyun-2011-01188.html
    http://www.anquan.us/static/bugs/wooyun-2011-03485.html
#### 0x04 验证码可爆破
  * 案例1 （完全无限制）
当验证码太弱（4-6位数字），且服务器没有错误次数限制时，则会存在可爆破的问题
WooYun中有7个类似案例
    http://www.anquan.us/static/bugs/wooyun-2015-0155994.html
    http://www.anquan.us/static/bugs/wooyun-2013-017242.html
    http://www.anquan.us/static/bugs/wooyun-2013-016896.html
    http://www.anquan.us/static/bugs/wooyun-2012-016179.html
    http://www.anquan.us/static/bugs/wooyun-2013-031605.html
    http://www.anquan.us/static/bugs/wooyun-2013-040908.html
    http://www.anquan.us/static/bugs/wooyun-2012-012377.html
  * 案例2 （限制覆盖不全）
以重置密码业务为例：用户输入手机验证码 -> 用户提交新密码
为了解决业务流程绑定的问题，通常两个步骤的参数中都会带有验证码。
开发人员往往只注意到第一个接口，而忽视了第二个接口。此时，在第一个页面中使用自己的手机号通过验证，第二个页面中修改为他人手机号并爆破
WooYun中有1个类似案例：
    http://www.anquan.us/static/bugs/wooyun-2015-0133289.html
#### 0x05 验证码在客户端生成
这种情况下，客户端生成一个验证码发送给服务端，服务端将这个验证码拼接，然后请求短信API发送短信
天才才能想出来的办法
WooYun中有2个类似案例
    http://www.anquan.us/static/bugs/wooyun-2014-086716.html
    http://www.anquan.us/static/bugs/wooyun-2013-022378.html
### 4 参考
几乎所有漏洞案例都来自乌云、个别案例来自先知 :)