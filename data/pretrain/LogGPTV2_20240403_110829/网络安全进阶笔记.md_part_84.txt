---
## Page 419
网络安全进阶笔记
上面显示的结果中，USER表示启动进程用户；PID表示进程标识号：%CPU表示运行该
进程占用CPU的时间与该进程总的运行时间的比例：%MEM表示该进程占用内存和总内存的
比例：VSZ表示占用的虚拟内存大小，这里以KB为单位：RSS为进程占用的物理内存值，也
是以KB为单位；TTY表示该进程建立时所对应的终端：STAT表示进程的运行状态：START
为进程开始时间：TIME用于报告进程累计使用的CPU时间：COMMAND则是对应的命令名。
小知识：需要注意的是，在上例中，真正使用CPU的时间很短，所以该字段的值是00:00:00.
此外，还有许多与ps命令相关的选项，用于实现特定的进程操作。如“-u”选项用
于显示面向用户的格式，包括用户名，CPU及内存使用情况等信息，使用“ps-aux”
命令，可以获得终端上所有用户有关进程的信息。
除了ps命令，也可以使用top命令可以查看进程状态。top命令和ps命令都可以显示系统
当前的进程及其状态。但是，top则是一个动态的显示过程，可以通过用户按键来不断刷新当
前状态。如果在前台执行，该命令将独占前台直到用户终止该程序为止，如图8.26所示。
图8.26使用top命令查看进程状态
使用top命令的过程中，可以使用一些交互命令来完成其他参数的功能，这些命令是通过
快捷键启动的。如空格键可以新信息，P键可以根据CPU使用大小进行排序，T键可以根据
时间排序，m键可以切换显示内存信息等。在查看非法进程的过程中，top命令就是一个功能
强大的监控系统，这对于系统管理员尤其重要。不过，需要注意的是，它会消耗很多系统资源。
3.一矢中的：快速终止指定进程
在实际监测过程中，进程运行需要占用系统资源，一个进程如果占用了大量资源就会造成
系统性能瓶颈现象。因此，有必要使用相关命令对非法进程或“僵尸进程”快速进行操作。kil
命令的工作原理是，它可以向进程发送指定信号以结束相应的进程。现在，以一个典型的进程
终止过程为例进行分析。
（1）设计一个搜索文件的进程。为了达到这个目的，现在使用“查找”命令来寻找在硬盘
上的文件。如果知道了某个文件的文件名，如htpd.conf，但是不知道这个文件放到哪个文件
夹，甚至是层层嵌套的文件夹里，就可以使用如下命令：
find/-name httpd.conf
414
---
## Page 420
第8章掌握实用的Linux安全工具
小知识：查找命令的使用.Linux中查找文件的命令通常为“find”命令，find命令的语法比较
简单，就是直接在命令后面写上目录名（“表示根日录），紧接着是“mame”，表
明要求系统按照文件名查找，最后写上目标文件名即可，稍等片刻，系统就会在计算
机屏幕上显示出查找结果列表。
(2）将进程设置为后台运行。对于耗时长的任务不应该让它在前台任务中执行，而应该交
给后台任务去执行。这样前台任务可继续正常运作其他的操作，不用等待。如果想要让任务转
为后台执行，就可使用“&”，这时该程序的输出不会出现在屏幕上。命令如下：
（3）用命令“jobs-1”显示后台任务的执行情况。现在，在屏幕上可以看到提示，即PID
为9708的进程正在运行，如图8.27所示。
is / -eke V1514
图8.27使用“jobs-l”命令显示后台任务的执行情况
（4）用kill命令终止进程。再用命令“jobs-1”显示后台任务的执行情况，就会发现PID
为9708的进程已经终止了。
小技巧：kill和killall命令，kill、killall都是结束进程的强大命令，两者最大的区别就在于kil
命令需要PID（进程号），而kilall后需要进程的名字，在网络管理中、这两个命令对管
理员非常有用，比如，要将某个用户“踢出系统”时，杀掉该用户的Shel进程即可。
上面介绍了Limux下进程管理的常见命令，通过它们可以实时查看系统当前的进程状况，
也可以找出那些占用了过多系统资源的进程并结束该进程。在Linux系统中，还提供了许多实
用的进程管理工具，可以器助用户调用和配置进程。如表8.1所示。
2
表8.1常用进程命令及功能描述
命令
功能描述
在指定时刻执行指定的命令序列
who
用于查看当前在线上的用户情况
_cron
在指定时间或按指定间隔执行规定的任务
_crontab
用于安装、删除或者列出用于驱动crom后台进程的任务表
_nice
设置进程按用户指定的优先级运行
_renice
用来改变正在运行进程的优先级
415
---
## Page 421
网络安全进阶笔记
通过上述命令，我们可以对进程的活动状况进行监控和管理，但是实际使用过程中还存在
不少问题。比如，手工输入命令行的效率比较低，不能对系统进程、用户进程、后门进程、非
法进程等进行清晰区分。尤其需要注意的是，如果黑客成功入侵，就可以植入恶意程序以替换
原来的系统程序。如果用户无法了解当前系统中运行的非法进程，管理工作将十分被动，甚至
会蒙受更大的损失。
8.4.2实施安全可靠的进程保护策略
由于上述种种不足，我们需要一套完整的进程安全性检查和恢复解决方案，使得当进程被
恶意修改或删除后能及时发现，从面为进一步处理创造条件。
1.服务器保护：通过chroot机制提高进程安全性
如今，缓冲区溢出漏洞日益增多，服务器也开始面临着更大的安全威胁。在很多黑客事件
中，我们经常看到攻击者利用其他漏润来“提权”，直至达到root级别。下面列举一个典型的
进程安全案例。现在假设Apache服务器安装在“/usr/local/hutpd/”目录下，以root用户（或具
有相同权限的其他账号）启动Apache。首先，这个root 权限的父进程会派生若干个以nobody
权限运行的子进程。然后，父进程监听来自80端口的TCP数据流，并根据内部算法将这个请
求分配给某个子进程来处理。由于Apache子进程所在的目录就会继承自父进程，即
“usr/local/httpd/”，所以问题就出来了.一旦目录权限设定失误，被攻击的Apache子进程就
可以访间“uzr/loeal”、“usr”、“/tmp”，其至整个文件系统。原因在于：Apache进程所
处的根目录仍是整个文件系统的根。
因此，如果能够创造一个安全的进程保护环境，利用chroot将Apache进程操作限制在
“/usr/local/httpd/”，那么，Apache所能存取的文件都是“/usr/local/htpd/”下的文件或其子目
录下的文件。为了实现这一目的，这里引入chroot机制。
小知识：chroot机制，chroot是内核中的一个系统调用，软件可以通过调用库函数chroot来更
改某个进程所能见到的根日录，创建chroot的作用就是将进程权限限制在文件系统目
录树中的某一子树中
（1）创建chroot目录。将软件chroot化的一个间题是：该软件运行时需要的所有程序、配
置文件和库文件都必须事先安装到chroot目录中，通常称这个目录为“chrootjail"（chroot监
牢）.因此，需要事先创建“/sbin”目录，并将httpd复制到其中。这一工作可以交由计算机完
成，用jail等软件包来帮助简化chroot“监牢”建立的过程。
(2）安装jail软件包。从http:/www.jmcresearch.com/static/dwn/projects/jail/jail.tar.gz可以
下载到jail的最新版本。它是由jail chroot项目小组开发的，包含了帮助自动创建chroot“监牢”
的C程序、Perl程序和Bash脚本。现在将jailtar.gz置于任意目录，然后执行命令：
tarxzvf jail.tar.gz cd jail/r
按照个人实际情况修改makefil文件，尤其是安装路径（默认安装路径是/usr/local）、体系
结构Gail支持Linux、FreeBSD、IRIX和Solaris)，以及编译选项等。
416
---
## Page 422
三
第8章掌提实用的Linux安全工具
最后执行命令：
akemakeinstall
（3）为jail创建chroot安全进程保护。现在创建一个目录进行chroot 进程保护，以
“/var/chroot”为例。执行下面的命令为chroot“监牢”创建环境：
/usr/local/bin/mkjailenv/var/chroot
这样，就可以创建一个安全的进程保护了。此外，jail软件包还提供了几个Perl脚本作为
其核心命令，包括mkjailenv、addjailuser和addjailsw等，这样将会更有利于用户进行安全目录
操作。如addjailsw可以从真实文件系统中拷贝二进制可执行文件及相关文件到该目录中。
2.更上一层楼：实施系统化的Linux进程维护
当然，上述进程保护方案只是局限于某一个方面。对于规范的网络维护面言，系统通常会
因为某种原因遇到各种问题，，比如速度变慢或不稳定，这时，就要实施更加有针对性的进程保
护了。下面是某公司针对Linux进程保护的防范方法，包括记录Linux下合法进程的相关信息、
数据库同安全恢复目录一起保存在一个安全的地方。
例如，有写保护的U盘、光盘，也可以把安全恢复目录放在一个安全的远程主机中，并以
只读方式输出。
（1）记录Linux下合法进程的相关信息。首先，将Linux系统下的进程按以下几个方面进
行分类：内核进程、网络进程、文件系统和磁盘管理进程、系统管理进程、硬件设备控制进程、
应用程序进程、Shell相关程序进程、操作系统工具进程、图形工具进程等，然后创建一个安
全目录，该目录包含所有需要保护的合法进程对应文件的磁盘镜像。
唯一标识（指纹）信息、检查策略、检查报告等数据，从而能对进程的活动进行全方位的监视。
该数据库主要包含以下表格，分别是进程信息表、进程“指纹”表、进程日志表、进程策略
表、进程参数表等。其中，进程信息表提供操作系统认可的合法进程的基本信息，并标明该
进程对于系统的重要性：进程“指纹”表定义进程的检测指标，作为判定进程是否合法的唯
一标识：进程策略表对进程的检测指标设置不同的检查策略：进程日志表则对进程的每次检
测形成报告等。
（3）进程检测和恢复。这里包括两个方面，即系统中运行进程检测、系统中的关键进程检
测。对于系统中的运行进程检测，主要是检查进程名是否与进程基本信息表中的数据匹配，如
果不匹配，标明该进程身份不明，并杀死该进程，记录日志：如果匹配，根据进程策略表中给
定的策略，对进程的“指纹”信息进行验证。对于系统中的关键进程检测，主要是检测程序列
出在进程信息表中的系统关键进程，如果发现问题，则从安全目录中恢复该进程对应的文件，
并将结果记录在日志中。
总之，对每个进程了解得越多，就越能够容易地精确定位进程的问题所在。所以，通过综
合采用进程命令以及进程记录、检测、备份、恢复等防护措施，我们就可以保护Linux系统中
重要系统进程以及用户进程的安全性，从而达到维护系统安全的目的。
417
---
## Page 423
全进阶笔记
8.5小结
所谓“兵来将挡，水来土掩”，上述Linux工具的作用十分明显。比如，对于某些“非法”
进程，网络管理员可以手动执行相关进程操作命令，结合相关工具，将这些命令编写成脚本，
与系统定时执行。
好
418
---
## Page 424
XX
第9章举
举一反三学语言：
以.NET为例
随着网络技术的飞速发展，基于网络应用程序和网络服务的开发应用日益增多，在这种趋
势下，如果不能理解常用的程序语言规范，就很难对网络安全的根源有所了解。目前，与网络
安全相关的程序语言有很多。相对于专业的程序员，大部分网管在单位只负责一个系统的维护
和升级工作，这可能只要熟悉一种语言就足够了。不过，有的网管会面对各种各样的项目，有
的项目需要C#开发，有的项目需要Java开发，有的项目需要PHP开发。这就需要在熟悉一门
语言的基础上，触类旁通，了解更多的网络安全编程知识。
通过本章的学习，你可以了解：
以VisualStudio.NET为开发平台的示例.了解语言的枢架，热悉安装和配置过程，
熟悉语言开发环境，了解程序开发的基础知识，熟悉程序的结构控制、过程与函数，
尝试使用窗体与需用控件，使用VB.NET记录非法文件的蛛丝马选，
如何灵活运用编程知识实现网络安全.如了解GoogleAPI应用基础知识，用Google
API实现手机实时接收信息，秒杀技术的原理等。
·源码制析，用ASP.NET实现验证码安全登录，图片验证码的随机实现过程，iframe
脚本使用方法，网页盗链，支付宝转接安全应用等，
---