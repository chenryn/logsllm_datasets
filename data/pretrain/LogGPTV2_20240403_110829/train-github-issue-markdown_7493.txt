## üêõ Bug
ONNX exporter gets tripped by a model using `nn.Sequential` and `nn.Embedding`
when the embedding layer is stored as a class property. The generated onnx
file is malformed: it has an initializer for the user-defined input. The
initializer used is the weight metrix of the embedding table.
The embedding table appears in initializers the second time (this time for the
embedding layer).
## To Reproduce
Steps to reproduce the behavior:
  1. Define a model:
        n = 8
        dim = 10
        class SomeModel(nn.Module):
            def __init__(self):
                super(SomeModel, self).__init__()
                self.embedding = nn.Embedding(n, dim)
                self.seq = nn.Sequential(
                    self.embedding,
                    nn.Linear(dim, 1),
                    nn.Sigmoid()
                )
            def forward(self, indices):
                return self.seq(indices)
        model = SomeModel()
  2. Export:
    input = torch.LongTensor([2])
    torch.onnx.export(model, input, "foo.onnx")
  3. Check `foo.onnx` and notice it's malformed.
## Expected behavior
No initializer for the user-provided input of the model.
## Environment
    Collecting environment information...
    PyTorch version: 1.0.0
    Is debug build: No
    CUDA used to build PyTorch: 9.0.176
    OS: Ubuntu 16.04.6 LTS
    GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
    CMake version: Could not collect
    Python version: 2.7
    Is CUDA available: No
    CUDA runtime version: No CUDA
    GPU models and configuration: No CUDA
    Nvidia driver version: No CUDA
    cuDNN version: No CUDA
    Versions of relevant libraries:
    [pip] msgpack-numpy==0.4.3.1
    [pip] numpy==1.14.1
    [pip] torch==1.0.0
    [conda] Could not collect
## Additional context
#19227 is another issue where the onnx export and `nn.Sequential` appear to be
at odds.
This bug can be worked around by inlining embedding definition to
`nn.Sequetial` or by getting rid of `nn.Sequential` and chaining ops manually.
Either way, the fact that a malformed file is outputted is not great.