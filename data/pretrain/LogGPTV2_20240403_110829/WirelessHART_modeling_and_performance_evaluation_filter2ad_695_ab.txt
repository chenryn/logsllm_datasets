is s0 = (1,−,−). With each new slot, the age of all messages
on the path is increased by one. The horizontal axis of the
DTMC can hence be seen as time line. If a node is scheduled
to transmit in a certain slot and has a message to forward, it
attempts to send the message to the next hop via the link
between them and keeps a copy of the message. In case
of a successful
the DMTC moves from the
current state (age1,−, . . . ) to state (age1 + 1, age1 + 1, . . . )
with probability ps and otherwise to state (age1 + 1,−, . . . )
with probability pf . Recall, that these probabilities depend
on the state of the link that performs this transmission. If
no transmission is scheduled in a given slot the age of all
messages is increased by one and a transition is included from
state (age1,−, . . . ) to state (age1 + 1,−, . . . ) with transition
probability one. Eventually, the DTMC reaches one of its
absorbing states, i.e., either a goal states that corresponds to
the current age of the message, or the the ’Discard’ state, in
case the TTL reaches 0.
Consider a three-hop path n1 → n2 → n3 → G as an
example. Assume the reporting interval to be Is = 1, so that
the scope of the model is only one super-frame. Take the
uplink frame-size Fup = 7 and the communication schedule
η = (∗,(cid:104)n1, n2(cid:105),∗,∗,(cid:104)n2, n3(cid:105),∗,(cid:104)n3, G(cid:105)). The path DTMC is
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:44:22 UTC from IEEE Xplore.  Restrictions apply. 
1pkpk1(cid:60)pk1(cid:60)pk001yk xkUPDOWNpflprc1-pfl1-prccheck which link n corresponds
if T T L ≤ 0 then
Algorithm 1 A recursive function to construct a path model
Require: discard state sd, goal state sg
1: function CONSTRUCTFORWARD(state sc)
if sc is able to transmit message then
2:
3:
4:
5:
6: return
7:
8:
9:
10:
11:
12:
end if
add new state sf ail
add transition sc → sf ail with pf = pn(down)
ConstructForward(sf ail)
if n is the last link that leads to gateway then
add transition sc → sgoal with ps = pn(up)
add transition sc → sd with p = 1
return
else
13:
14:
15:
16:
17:
18:
19:
20: return
21:
22:
23:
24:
25:
26: end function
end if
end if
add new state ssuc
add transition sc → ssuc with ps = pn(up)
ConstructForward(ssuc)
if T T L ≤ 0 then
add transition to the ‘discard’ state
end if
add new state snext
add transition sc → snext with p = 1
ConstructForward(snext)
schedule and reporting interval, according to the rules pre-
sented above. Line 2 checks whether a transmission is possible
according to the communication schedule and the current slot
number. In case a transmission is possible the corresponding
link is derived. In case the TTL of the message has expired the
message is discarded in Line 5. Lines 8-10 model the failure of
the current transmission with transition probability pf , which
is derived from the respective link model. Lines 11-12 check
whether the current transmission takes place on the last hop of
the path. In that case a successful transmission directly leads to
the goal state. Lines 14-16 construct the successor state after a
successful transmission with transition probability ps, which
stems from the link model, as well. Lines 22-24 deal with
slots where no transmission takes place. In case the recursive
function is called for the initial state, it will output the full
underlying DTMC model for a given path.
V. PATH ANALYSIS
In the following R denotes the probability that a message
generated at the source node reaches the gateway before the
end of a given reporting interval (reachability). If a message
fails to reach the gateway, then the input signal I is lost,
possibly causing instability to the control loop.
Given the reachability for a single reporting interval, the
time until the ﬁrst message loss is geometrically distributed
Fig. 4. DTMC diagram of the path model of a three-hop path when Is = 1
constructed following the above rules and shown in Figure 4.
The initial state is (1,−,−). In the schedule η, the ﬁrst slot is
idle, so the DTMC moves to the second state (2,−,−) with
probability 1. In the second slot, the communication schedule
entry (cid:104)n1, n2(cid:105) indicates a transmission on the link between
n1 and n2. Then the DTMC moves from state (2,−,−) to
state (3, 3,−) with probability ps1, and to state (3,−,−) with
probability pf 1. After Fup = 7 steps, either the goal state R7
is reached the goal state at the seventh slot or the ‘Discard’
state is reached when T T L = 0 at the end of this cycle.
To show the inﬂuence of the reporting interval on the
size of the resulting DTMC, Figure 5 shows the underlying
DTMC for a reporting interval of Is = 2. The size of the
resulting DTMC depends linearly on the size of the reporting
interval, the number of hops on the path and the number of
slots in the communication schedule. In general for an n-
hop path with super-frame size Fs and reporting interval Is,
the computational complexity of the path model is given by
O(Is · Fs · n).
The states of the link DTMC determine the success tran-
sition probability ps and the failure transition probability pf
in the path model. In a WirelessHART network, a message
is transmitted successfully if and only if the wireless link
remains operational in that slot. Therefore, the probability ps
equals the transient probability of the link to be up at the
very transmission slot t, and vice versa. The dependency is
expressed in the following equation:
(cid:20) 1 − pf l
prc
(cid:21)t
pf l
1 − prc
.
(3)
[ps(t), pf (t)] = p(t) = p(0)
Especially, if the links are in steady-state during transmission,
then
[ps, pf ] = [π(up), π(down)] = [
prc
prc + pf l
,
pf l
prc + pf l
].
(4)
The path model hence relies on the link models to specify
the probability of a successful transmission. For an n-hop path
model with inhomogeneous links, n link models exist that
evolve simultaneously with the path DTMC. The hierarchical
idea allows the DTMC model
initial
situations, like links being up or down initially.
to describe different
Algorithm 1 presents a recursive function that is able to
derive the underlying DTMC for a given path, communication
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:44:22 UTC from IEEE Xplore.  Restrictions apply. 
1,-,-2,-,-3,-,-4,-,-5,-,-6,-,-7,-,-3,3,-4,4,-5,5,-6,6,-7,7,-6,6,67,7,7R7Discard1ps1pf1ps2pf2ps3pf3111111111Fig. 5. DTMC diagram of the path model of a three-hop path when Is = 2
and the expectation is given by E[N] = 1/p = 1/(1− R). To
ensure that the WirelessHART system is stable, R is required
to be very close to 1.
The age of a message that reaches the gateway in the ith
cycle of a reporting interval is denoted ai. Probability P r(ai)
is then given by the transient probability of the goal state that
represents the i-th cycle of the reporting interval at the end of
the reporting interval.
Without loss of generality, we assume in the following
that the initial state of the DTMC corresponds to entry p0
and the Is goal states correspond to entries p1, . . . pIs in the
probability vector p. The initial distribution is then given by
p(0) = [1, 0, . . . , 0]. Recall that the transition probabilities ps
and pf are time-inhomogeneous and change according to the
link model. Hence, the entries of P(t) need to be recalculated
in every step, and the transient probabilities p(t) can only be
obtained iteratively according to
p(t) = p(t − 1)P(t).
(5)
Probability R is then given by the sum of all cycle prob-
abilities, i.e. the sum of all the transient probabilities of the
goal states at the end of the reporting interval.
R =
pi(t) for t = Is ∗ Fup.
(6)
i=1
In WirelessHART excessive delay can lead to a signiﬁcant
degradation in system performance. Delay is deﬁned as the
time difference between the born time Tborn and the reception
time Trec, which equals the age of a message in the path
model. The delay distribution τ can also be derived from the
transient distribution of the DTMC model.
The age measured in slots has to be converted to the absolute
time in millisecond. Furthermore, the downlink duration Tdown
should be taken into account.
di = (ai + Tdown) ∗ 10.
(7)
For each delay di, the delay probability is the percentage of
messages with delay di among all the received messages, i.e.
Is(cid:88)
the averaged transient probability. This is given by:
τ(di) =
pi(t)(cid:80)Is
j=1 pj(t)
for t = Is ∗ Fup.
(8)
= pi(t)
Re
Is(cid:88)
i=1
Therefore, the expected delay E[τ] is deﬁned as
E[τ] =
di ∗ τ(di).
(9)
The utilization U indicates the fraction of slots that actually
transmitted a message during a reporting interval, irrespective
of its success. The network communication overhead and
power consumption are directly related to this rate.
Consider an n-hop path, every message that reaches the
gateway in the ﬁrst cycle must have passed n links (i.e. n
slots); every message that reaches the gateway in the second
cycle must have used n + 1 slots (n successful transmissions
and one failure), etc. Note that discarded messages (with
probability 1 − R) have to be taken into account, as well.
The utilization of a path p with n hops is then given by:
(cid:80)Is
i=1[P r(ai) ∗ (n + i)] + (1 − R) ∗ (n + Is)
.
(10)
Up =
Is ∗ Fup
U =(cid:88)
The utilization of the entire network is obtained by summing
over all possible paths:
Up.
(11)
p
This section is further organized as follows. We analyze an
example path in Section V-A, and discuss the inﬂuence of link
availability in Section V-B and of the number of hops on a path
in Section V-C. Section V-D discusses the compositionality of
paths.
A. Example Analysis
1 → n1
2 → n1
Consider the following three-hop path n1
3 → G
with uplink frame-size Fup = 7 and communication schedule
(∗,∗,(cid:104)n1, n2(cid:105),∗,∗,(cid:104)n2, n3(cid:105),(cid:104)n3, G(cid:105)). The reporting interval
is set to Is = 4. For simplicity, all the links on the path
are considered to be homogeneous, i.e., have the same link
transition probabilities, namely pf l = 0.3 and pcr = 0.9.
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:44:22 UTC from IEEE Xplore.  Restrictions apply. 
1,-,-2,-,-3,-,-4,-,-5,-,-6,-,-7,-,-3,3,-3,4,-5,5,-6,6,-7,7,-8,8,-9,9,-10,10,-11,11,-12,12,-13,13,-6,6,67,7,78,8,89,9,910,10,1011,11,1112,12,1213,13,1314,14,14R7R14Discard8,-,-9,-,-10,-,-11,-,-12,-,-13,-,-14,-,-14,14,-1ps1pf1ps2pf2ps3pf3ps3pf311111pf1ps1ps2pf21Moreover, assume that all links have already reached steady
state at the beginning of the evaluation. The underlying DTMC
of this WirelessHART network is derived as explained in
Section IV and the transient probabilities for all goal states
are derived and plotted in Figure 6, where time (measured
in slots) is plotted on the x-axis. Since Is = 4, the model
has four goal states, denoted R7, R14, R21 and R28, which
represent the four different ages at which messages possibly
reach the controller. The earliest possibility for a message
to reach the controller is at slot 7, because the last entry in
the communication schedule represents a transmission to the
controller. This results in a step shaped probability distribution
in Figure 6.
Fig. 6. Transient probabilities of goal states when Is = 4
Equation (6) as R = (cid:80)Is
The transient probabilities at time t = Is∗ Fup = 4∗7 = 28
are computed and the reachability is computed according to
i=1 pi(28) = 0.9624. The computed
reachability is close to 1 and a message does not reach the
destination within a control interval with probability 1 − R =
0.0376.
Figure 7 shows the delay distribution τ of this example path,
which is directly related to Figure 6. The message delays take
discrete values that are always a multiple of the uplink frame-
size Fup. The expected delay in this example is computed to
be E[τ] = 190.8 and measured in milliseconds.
The probability for a short delay is higher than the proba-
bility for a long delay, which shows that most of the messages