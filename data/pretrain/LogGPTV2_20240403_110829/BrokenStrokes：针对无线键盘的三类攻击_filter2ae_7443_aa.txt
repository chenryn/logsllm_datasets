# BrokenStrokes：针对无线键盘的三类攻击
|
##### 译文声明
本文是翻译文章，文章原作者 Gabriele Oligeri, Savio Sciancalepore, Simone Raponi, Roberto Di
Pietro，文章来源：wisec2020.ins.jku.at
原文地址：
译文仅供参考，具体内容表达以及含义原文为准。
事实证明，由于与射频（RF，radio-frequency）辐射相关的固有泄漏，采用事件触发通信的无线设备会遇到严重的隐私问题。仅通过窃听无线键盘使用的通信通道即可实施有效而有效的攻击，从而检测出预先定义的关键字的类型。本文提出BrokenStrokes攻击：当窃听天线距离目标键盘达15米时，它就实现了其目标，而不管加密方案、通信协议、无线电噪声的存在和物理障碍的存在如何。在当前的三种场景中详细描述了攻击，并讨论了其性能-在正常操作条件下其成功概率超过90%，但本文也提供了如何减轻攻击的一些建议。本文中使用的数据已作为开源代码发布，以允许从业者、工业界和学术界验证，并将其作为进一步发展的基础。
## 0x01 Introduction
无线键盘在家庭，娱乐场所和娱乐系统中变得越来越流行，从而实现了与计算设备微小和优雅的交互。尤其是在拥挤的桌面上，无线键盘减少了要连接的电线数量，在优雅和整洁方面具有明显优势。此外，它们扩展了与终端的交互作用区域，从而减轻了工作压力。
尽管无线键盘很流行，但它们仍然存在一些保密性和隐私性问题，这主要是由无线通信链路的广播特性和电量限制引起的。实际上，与传统的有线键盘相比，无线键盘使用无线通信介质，其中信息会暴露于潜在的窃听中。同时，无线键盘依靠电池供电，必须实现“科学的计算和通信策略”，最大限度地减少射频（RF）操作，以延长电池寿命。从安全性的角度来看，许多传统的无线键盘部署得非常薄弱，或没有防止窃听攻击。在上述情况下，通过以键盘相同的操作频率调整恶意接收器，可以很容易地实现攻击。一些研究人员也证明了主动攻击的可行性，例如击键注入和重放，能够破坏通信链路并降低无线键盘的可用性和安全性。尽管制造商正在设计，实施和提供越来越多的无线键盘安全解决方案，但无线键盘的内在安全性仍需要处理可用性和电量限制。实际上，无线键盘必须为电子设备触发新的RF通信。每个新的击键，以确保最小的打字延迟和最大的可用性。同时，此类RF通信应持续最短的时间，以最大程度地减少电池消耗并延长键盘电池本身的寿命。
## 0x02 Scenario and Assumptions
本研究考虑由无线键盘系统（即，将用户的击键无线传输到连接到计算机的USB加密狗dongle的键盘）构成的一般情况。在这种情况下，攻击会影响可用于维持键盘和加密狗之间的通信的所有无线通信协议，例如蓝牙，WiFi和专有协议。在不失一般性的前提下，考虑了三种广泛采用的无线键盘，如下表所示。所有键盘均具有专有的通信协议，这些协议利用ISMbandwidth
[2.4-2.5]
GHz进行通信。本文解决方案既不涉及被考虑的无线键盘采用的协议的黑客攻击，也不涉及逆向工程。此外所有被考虑的键盘加密方案均会阻止直接访问交换消息的内容。
**设备：** 采用了商用笔记本电脑（Dell XPS 15 9560），它具有Linux发行版和GNU
Radio（免费和开源软件开发工具包），商用SDR，以及全向（VERT2450）或定向天线（Aaronia HyperLOG
60350），具体取决于所考虑的攻击方案。最后，本文中采用的所有建议算法，技术和过程均已在Matlab R2019a中实现。
在以下参考场景中，对BrokenStrokes攻击进行了测试：
**（1）方案1-近距离攻击（ Proximity attack）：**
SDR具有标准的全向天线（VERT2450）。将SDR放置在键盘加密狗通信链接的附近，隐藏在桌子下面。这种攻击涉及攻击者能够访问目标用户的位置（例如，办公室，家），并且能够将SDR放置在非常靠近无线键盘的位置，例如，在用户的桌子下方或附近。
**（2）方案2-墙后攻击（Behind-the-wall attack）：** SDR已连接到定向天线（Aaronia HyperLOG
60350），并且天线与键盘-加密狗通信链接之间没有视线（LOS）。此攻击认为攻击者在收集目标用户击键时间的同时处于阻碍对象的后面（例如墙后），因此，可能未被发现。
**（3）方案3-远程攻击（Remote attack）：** 在设置中，SDR连接到远程定向天线（Aaronia HyperLOG
60350），攻击者位于远离目标用户的位置，但是目标具有清晰的LOS，并且可以从远程位置收集按键间的时间间隔（长达15m）。
**多个用户：**
本文考虑了三个不同的用户，即{U1，U2，U3}，并评估了用户的打字速度如何影响BrokenStrokes攻击。注意，本文考虑的用户数量与有关击键分析的相关工作一致。
**噪音：** 注意，实验是在常规条件下进行的，没有采取任何措施来减少其他设备共享目标键盘的相同通信频率而产生的噪声。
**关键字数据集：**
BrokenStrokes涉及两个阶段的攻击，即将接收到的信号强度峰值转换为击键间时间，然后转换为关键字。虽然绝大多数文献集中在通过利用不同的物理层黑客将击键之间的时间转换为关键字，但本研究主要集中在设计可靠和有效的解决方案以将接收信号强度转换为计时。在不失一般性的前提下，在本文中仅将一个关键字（即
_password_ ）视为攻击的第二部分。
## 0x03 BrokenStrokes in a Nutshell
BrokenStrokes的计算流量包括：（i）测量键盘和加密狗之间传输的消息的接收信号强度（RSS）；（ii）利用这些测量值来提取击键间时间；（iii）借助机器学习（ML）技术来生成似然度得分，该分数表示目标用户的击键序列中存在预先定义的关键字。
采用了MiriadRF LimeSDR来测量每个击键事件生成的数据包的RSS，通过GNU
Radio来调整SDR的参数。具体而言，观察到当没有键入任何击键时，无线键盘处于空闲状态。用户一旦按下任意按钮，就会触发从键盘到加密狗的新传输，从而产生特定于峰值的工作频率。
将配置有适当工作频率，10 MHz带宽和30 MHz采样率的LimeSDR Source（RX）标准模块连接到QT GUI Frequency
Plot模块，在其中启用了RSS日志（在特定工作频率上的RSS值超过预定阈值时的dBm）和时间戳（以纳秒为单位）。
随后由一连串的Matlab脚本（即按键定时提取和ML算法）处理由Acquisition模块生成的包含RSS和时间戳的日志文件，以生成与关键字存在相关的似然度分数。击键时间提取模块旨在识别击键模式并生成击键之间的时间，即用户随后两次击键之间的时间。然后，将到达间隔时间传递给ML算法，该算法提供关于存在击键的可能性得分预先定义的关键字-ML算法先前已用于训练要重复检测相同关键字的模型。下一章将提供BrokenStrokes攻击所涉及的每个阶段的更多详细信息。
## 0x04 From RSS To Keyword Detection
在本节中将展示BrokenStrokes的详细信息，并提供一种可被攻击者用来检测用户通过无线键盘键入的任意长句子中关键字的存在的机制。在不失一般性的前提下，考虑方案1即近距离攻击，而在后面的部分中将把方法扩展到其他方案。