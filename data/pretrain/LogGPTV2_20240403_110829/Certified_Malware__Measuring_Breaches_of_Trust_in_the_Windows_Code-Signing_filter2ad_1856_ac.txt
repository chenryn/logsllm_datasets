with certificates that may be valid, expired or revoked. The binaries
include malware and benign samples and exclude PUPs. We group
binaries according to their code signing certificates. A publisher’s
binaries may be split among multiple groups if we identify distinct
certificates owned by the publisher. Each group may include (i)
only benign samples; (ii) only malware or (iii) both malware and
benign binaries. As it is generally difficult to identify benign samples
signed with a specific certificate, we consult additional data sources
to increase our coverage. Specifically, we further query HerdProtect
to determine if more samples signed with the same certificate are
known to exist, and we manually investigate the publishers by
visiting their websites. For each certificate used to sign malware,
Filtering PUP… Potentially abusive certificates Detec%on	Algorithm	WINE Virus Total WINE Virus Total Seed Collection Filtering Data Input Data Preparation  Identify Potentially  Abusive Certificates Uncertain Certificate Proper Certificate Clustering
All samples
By cer4ﬁcate
Stolen Cer4ﬁcate
Fraudulent or 
Shell company
NO
YES
Signed Malware
Properly Signed
NO
YES
Malformed
Cer4ﬁcate
Only 
Malware
Cert.
Properly
Desc. (Error code)
Valid
Revoked (0x800b010c)
Expired (0x800b0101)
Total
Malformed Bad Digest (0x80096010)
Others
Parsing Error
Total
Total
Total Malware
109
130,053
43
4,276
37
17,330
151,659
189
101
1,880
0
81
35
233
2,194
136
325
153,853
Figure 3: Number of properly signed malware per year
(cmal ≥ 5).
Table 1: Property of the certificates. Others include unveri-
fied time stamping certificates or signature, distrusted root
authority, etc.
4 MEASUREMENT RESULTS
4.1 Summary of the input data
We start by summarizing the effect of each step from our data
analysis pipeline, described in Section 3.2. Among the 70,293,533
samples from the AV telemetry reports, 1,053,114 include the file
signer information in the binary reputation data set. This suggests
that 1 out of 67 samples detected by a leading anti-virus carries a
digital signature. We note that this is an approximation, as we do
not have visibility into all the malware present on end-hosts around
the world, and other AV products may handle digital signatures
differently. However, WINE provides a representative sample for
the data collected by Symantec [28], which is the largest security
vendor.
We filter out potentially unwanted programs using the method
from Section 3.3. This step returns 526,487 hashes. We further re-
duce the number of samples by removing 268,404 executables signed
with 2,648 PUP certificates. This yields 258,083 executables. We
query VirusTotal with these samples. Out of these, we could not
find VirusTotal reports for 88,154 . After further filtering out 104,230
samples without a full chain of certificates, we have 153,853 signed
samples in the seed set. To apply the abuse detection algorithm
from Section 3.4, we search for other potentially benign samples
signed with the certificates found in the seed set. We identify a total
of 415,377 such samples in VT.
We set a very conservative number cmal ≥ 20 for the malware
detection threshold to identify suspicious binaries. This conserva-
tive threshold number identifies only obvious malware, and enables
us to examine every single malware manually. (587 and 1136 mal-
ware samples are observed when we set the threshold as 10 and 5
respectively.) We present the number of properly signed malware
per year for cmal ≥ 5 in Figure 3.
We further examine the validity of the digital signatures from
these samples using the verified message in the VT reports. VT
checks Authenticode signatures using the sigcheck tool provided
by Microsoft.10 For example, the message “a certificate was explic-
itly revoked by its issuer" indicates that the affixed certificate is no
longer valid because it was revoked by its CA; this corresponds to
error code “0x800B010C" in Microsoft Authenticode. Table 1 shows
a breakdown of the validity status. The 325 samples are detected as
malware in a total of 153,853 signed samples. Of these 325 signed
10https://technet.microsoft.com/en-us/sysinternals/bb897441.aspx
CA
Symantec/Verisign
Symantec/Thawte
Comodo
GlobalSign
Go Daddy
DigiCert
Certum
WoSign/StartCom
WoSign
Go Daddy/StarField
Total
Count (%)
23,325,279 (60.47%)
7,054,263 (18.29%)
2,059,601 (5.34%)
708,618 (1.84%)
704,036 (1.83%)
429,159 (1.11%)
48,677 (0.13%)
43,578 (0.11%)
38,758 (0.10%)
21,410 (0.06%)
38,572,995 (100%)
Table 2: The number of executables signed with certificates
issued by each CA in WINE.
malware, 58.2% samples are properly signed while 41.8% are signed
with malformed certificates. Most (74.3%) improperly signed mal-
ware results from bad digests. We categorize any malware that has
parsing errors into “Parsing Error." Of a total of 189 properly signed
malware, 22.8% samples were signed with revoked certificates, and
19.6% samples have expired certificates and no valid timestamp.
More than a half of all properly signed samples (57.7%) are still
valid as of this writing.
4.2 The code signing ecosystem
In this section, we analyze the code signing ecosystem using the
binary reputation data set in WINE. This analysis encompasses
both benign and malicious files that carry digital signatures. The
numbers in WINE are likely biased because all the hosts run at
least one Symantec product. Consequently, we remove the binaries
where Symantec is in the subject field. We then extract the name
of the Certification Authority from 38.6 million executables, which
allows us to identify 210 unique CAs.
CA market share. We first estimate the market share of code sign-
ing certificates by investigating the file signer information from
the binary reputation data set. Table 2 shows the market share for
the top-10 most popular CAs and the number of unique binaries
signed with the certificates issued by those CAs. 4.1 million binaries
(10.7%) in our data set are either signed by minor CAs, not included
YearNumber of malware050100150200020012002200320042005200620072008200920102011201220132014in the table, or are self-signed. These numbers suggest that Syman-
tec (including the Versign and Thawte brands) dominates the code
signing ecosystem, with a combined market share above 78%. This
is not necessarily bad for security, as placing trust in a single CA
reduces the TCB for code signing. However, this raises the expecta-
tions for the leading CA to ensure the security of the ecosystem.
The latest version of Windows, Windows 10, by default contains
28 root certificates for code signing that belong to 14 CAs11. In top-
most popular CAs, WoSign, Certum, and Startcom root certificates
are not pre-installed in Windows. When executables signed with
the three certificate are installed, the root certificates are installed
without a prompt message for users.
Misuse of code signing certificates for TLS. Code signing and
TLS certificates cannot be used interchangeably. However, the two
types of certificates follow the same format and can be generated
with the same tools. We searched censys.io [5], a site that periodi-
cally scans the Internet and collects certificates from TLS sessions,
for the keywords 12 that explicitly indicate code signing usage. We
identified 122 code signing certificates used for TLS, including for
the website of “marketedge.com" in the Alexa Top 1 Million list. Two
different certificates are used for the domain; a code signing cer-
tificate is used for the domain without “www" while a proper TLS
certificate is used for the domain with “www". This is surprising
because these certificates are considered invalid by the browsers
initiating the TLS connections. It suggests that people tend not to
differentiate between code signing certificates and TLS certificates.
Signed installer or application. While UAC checks file signa-
tures when programs are installed, code signing best practices [23]
recommend signing the installed files as well. This protects the
installed files from tampering, for instance from file infectors that
copy malicious code into an otherwise benign executable. We in-
vestigated if this advice is well kept in practice. The binary rep-
utation data set allows us to determine when an executable file
is created on disk by another executable, typically a downloader
or installer. We identified 25,051,415 unique installation/download
events. Within those events, 2,946,950 events (11.8% ) have both
the installer/downloader and the payload digitally signed. This rep-
resents an upper bound, as some of the digital signatures may no
longer be valid. Among the events where both are signed, about
666,350 events (2.66%) have installer/downloader and the payload
signed by the same publisher. Meanwhile, 19,752,592 unique un-
signed files were installed.
4.3 Malformed digital signatures
For 101 samples in our data set, the signature and the authentihash
do not match. In this case, the error message in VT reports is “the
digital signature of the object did not verify," which corresponds to
Authenticode error code “0x80096010". This error typically results
from copying a digital signature and a certificate from one file
to another. This does not correspond to a breach of trust in the
publisher or the CA, since an adversary does not need access to
a private code signing key to produce such malformed signatures.
However, these signatures account for 31.1% of the signed malware
11USERTrust, DigiCert, Verisign, Comodo, Entrust, GeoTrust, GlobalSign, Go Daddy,
Microsoft, Trustwave, Starfield, StarCom, Symantec, and Thawte
12 443.https.tls.certificate.parsed.extensions.extended_key_usage.code_signing:true
in our data set. We therefore conduct experiments to determine if
such signatures can help malware bypass client-side protections
provided by browsers, operating systems and anti-virus products.
Browser protections. Google Chrome and Microsoft IE9 include
components called Safe Browsing and SmartScreen, respectively,
which protect against malicious downloads from the Web. To test
these protections, we copied a legitimate certificate and signature
to a benign and simple calculator, which does not require elevated
privileges (i.e. Administrator mode in Windows). This resulted
in a sample with a malformed digital signature. We then tried to
download this sample from the Web to see how the browsers react.
Both Safe Browsing and SmartScreen blocked our sample. However,
we found that it is possible to bypass the protection by removing
the extension. If we remove the file extension (.exe), the browsers
do not block the download.
Operating system protections. In Windows 7, 8.1, and 10, the OS
alerts the user with a message saying the file is unsigned when a file
downloaded from the Web is executed. However, if the file does not
originate from the Web—e.g. it was copied from a USB drive—then
the execution does not trigger any warnings. We also tested the
behavior of executables that require elevated privileges by adding a
malformed signature to a Windows installer. This program triggers
UAC when it asks for Administrator rights, regardless of where
the file originated. UAC displays a message saying that the file is
from a unknown source. We note that these are the same warnings
displayed for unsigned binaries. While Windows appears to detect
malformed signatures, it does not block the executables that carry
such signatures. If the user chooses to ignore the warnings, no
further checks are performed. The OS protections exhibited the
same behavior in our experiments with improperly signed malware,
which are described next.
In summary, Windows provides minimal protections against
executables using forged signatures, while browser defenses apply
only to files downloaded from the Web and can be bypassed. The
last line of defense, therefore, is anti-virus products.
Anti-virus protections. We conducted an experiment to deter-
mine if malformed signatures can affect the AV detections. We first
downloaded five random unsigned ransomware samples recently
reported to VT. These binaries are known to be malicious—they are
detected by 56–58 AV products invoked by VirusTotal. We extracted
two expired certificates and the corresponding signatures. These
were issued to different publishers and had already been used in
malformed signatures in the wild. From each ransomware samples
we created two new samples, each including one certificate and its
signature, for a total of ten new samples.
Surprisingly, we found that this simple attack prevents many
anti-virus products from detecting the malware. Table 3 lists the 34
AVs that detect the unsigned ransomware but fail to detect the same
sample after we include the incorrect signatures. We did not observe
a significant difference between the impact of the two certificates.
However, the impact of this attack varies with the AV products.
The top three AVs affected are nProtect, Tencent, and Paloalto. They
detected unsigned ransomware samples as malware, but considered
eight of out our ten crafted samples as benign. Even well-known
AV engines, e.g. Kaspersky, Microsoft, Symantec, and Commodo,
allow some of these samples to bypass detection. On average, the
F-Prot
Symantec
8
8 CrowdStrike
8 ClamAV
7 VIPRE
6 AVware
6
Ikarus
6 Bkav
5 TrendMicro
4 Malwarebytes
nProtect
Tencent
Paloalto
AegisLab
TheHacker
CAT-QuickHeal
Comodo
Rising
Cyren
Table 3: Bogus Digest Detection (AV and the number of de-
tection fail).
4
4 TrendMicro-HouseCall
4 Avira
4 Microsoft
4
Fortinet
4 ViRobot
3 K7GW
3 K7AntiVirus
2 NANO-Antivirus
Sophos
SentinelOne