### Certificates and Binary Grouping

The binaries in our dataset may be valid, expired, or revoked. They include both malware and benign samples, with potentially unwanted programs (PUPs) excluded. We group these binaries based on their code signing certificates. If a publisher uses multiple distinct certificates, their binaries will be split into different groups. Each group can contain:
- Only benign samples
- Only malware
- A mix of both malware and benign binaries

Identifying benign samples signed with a specific certificate is challenging, so we consult additional data sources to enhance our coverage. Specifically, we query HerdProtect to find more samples signed with the same certificate and manually investigate publishers by visiting their websites.

### Certificate Validation and Malware Detection

For each certificate used to sign malware, we apply a filtering and detection algorithm. The process involves:
1. **Filtering PUPs**: Excluding potentially unwanted programs.
2. **Potentially Abusive Certificates Detection**: Identifying certificates that may be misused.
3. **Clustering**: Grouping samples by certificate and evaluating their validity.

We categorize certificates as follows:
- **Proper Certificate**: Valid and not abused.
- **Uncertain Certificate**: Potentially abusive but requires further investigation.
- **Stolen Certificate**: Used without authorization.
- **Fraudulent or Shell Company Certificate**: Issued to fake or shell companies.

### Data Analysis Pipeline

#### Input Data Summary

From the 70,293,533 samples in the AV telemetry reports, 1,053,114 include file signer information in the binary reputation dataset. This indicates that approximately 1 out of every 67 samples detected by a leading anti-virus product carries a digital signature. This is an approximation, as we do not have visibility into all malware globally, and other AV products may handle digital signatures differently. However, WINE provides a representative sample for the data collected by Symantec, the largest security vendor.

#### Filtering and Reduction

1. **PUP Filtering**: Using the method from Section 3.3, we filter out 526,487 hashes.
2. **PUP Certificate Removal**: We remove 268,404 executables signed with 2,648 PUP certificates, leaving 258,083 executables.
3. **VirusTotal Query**: We query VirusTotal with these samples and find no reports for 88,154 samples.
4. **Full Chain Certificate Filter**: After removing 104,230 samples without a full chain of certificates, we are left with 153,853 signed samples in the seed set.

To identify other potentially benign samples signed with the same certificates, we search VT and find 415,377 such samples.

#### Malware Detection Threshold

We set a conservative threshold (cmal ≥ 20) to identify obvious malware, allowing us to manually examine each suspicious binary. For cmal ≥ 5, the number of properly signed malware per year is shown in Figure 3.

### Digital Signature Validity

We use the verified message in VT reports to check the validity of digital signatures. Table 1 provides a breakdown of the validity status. Out of 325 signed malware samples, 58.2% are properly signed, while 41.8% are signed with malformed certificates. Most improperly signed malware results from bad digests, and some have parsing errors.

### Code Signing Ecosystem

#### CA Market Share

We analyze the code signing ecosystem using the binary reputation dataset in WINE, which includes both benign and malicious files. We remove binaries where Symantec is in the subject field and extract the names of 210 unique CAs from 38.6 million executables. Table 2 shows the market share for the top-10 most popular CAs. Symantec, including VeriSign and Thawte, dominates the market with a combined share above 78%.

#### Misuse of Code Signing Certificates for TLS

Code signing and TLS certificates cannot be used interchangeably, but they follow the same format. We found 122 code signing certificates used for TLS, including one for "marketedge.com" in the Alexa Top 1 Million list. This misuse suggests a lack of differentiation between the two types of certificates.

#### Signed Installers and Applications

Best practices recommend signing both installers and installed files. Our analysis shows that only 11.8% of installation/download events have both the installer/downloader and the payload digitally signed, with 2.66% signed by the same publisher.

### Malformed Digital Signatures

In our dataset, 101 samples have mismatched signatures and authentihashes, resulting in the error code “0x80096010”. These signatures account for 31.1% of the signed malware. We conducted experiments to determine if such signatures can bypass client-side protections:

#### Browser Protections

- **Google Chrome and Microsoft IE9**: Both browsers' Safe Browsing and SmartScreen components block samples with malformed signatures. However, removing the file extension (.exe) allows the download to proceed.

#### Operating System Protections

- **Windows 7, 8.1, and 10**: The OS alerts users when executing unsigned files downloaded from the Web. If the file originates from a USB drive, no warnings are triggered. UAC displays a message for executables requiring elevated privileges, but does not block them.

#### Anti-Virus Protections

We tested the impact of malformed signatures on AV detections. Adding incorrect signatures to known ransomware samples prevented many AV products from detecting the malware. Table 3 lists the 34 AVs affected, with nProtect, Tencent, and Paloalto being the most impacted.

In summary, Windows provides minimal protection against executables with forged signatures, and browser defenses can be bypassed. The last line of defense is anti-virus products, which can also be evaded by this simple attack.