万⽤劫持
本地提权
情报渗透
越级注入
PS C:\> 
[System.Convert]::ToBase64String([System
ext.Encoding]::UTF8.GetBytes("PS
cmd.exe /c "dir"
141414141414141414141
AAAAAAAAAAAAAAAAAAAAAAA
PI:EMAIL
远程后⾨
网军⾏动
Duplicate Paths Attack: 
Get Elevated Privilege from Forged Identities 
$_whoami
#Windows #Reversing #Pwn #Exploit
• Master degree at CSIE, NTUST 
• Security Researcher - chrO.ot 
• Speaker - BlackHat, DEFCON, VXCON, HITCON 
• 30cm.tw 
• Hao's Arsenal 
• PI:EMAIL
PI:EMAIL
1. UAC Design 
> Privilege Duplicate 
> Double Trust Auth 
2. Issues  
> Path Normalization 
3. A Combo, inject unlimited agents
$_cat ./agenda
PI:EMAIL
〉〉〉UAC Design 
PI:EMAIL
$_cat ./uac
PI:EMAIL
$_cat ./uac
PI:EMAIL
$_cat ./uac
PI:EMAIL
$_cat ./uac
PI:EMAIL
$_cat ./uac
$ svchost.exe -k netsvcs -p -s Appinfo
说到创建Process事情， 
对作业系统主要就是两个问题：
（⼀）程式码要摆哪里 
（⼆）执⾏绪该怎么执⾏
syscall
Ring0
Ring3
Parent Process
(A.) CreateProcess
Child Process
(B.) Child Proess Created,  
EXE File Mapped, Gained the Same Privilege  
and New Thread pointed to RtlUserThreadStart
(C.)  
Kernel Create a new Thread:  
RtlUserThreadStart 
  →LdrInitializeThunk 
    →LdrpInitializeProcess
(D.) Jump into AddressOfEntry
AppInfo!RAiLaunchAdminProcess
syscall
Ring0
Ring3
Parent Process
(A.) RunAs, 
CreateProcessAsUser or 
CreateProcessWithToken
UAC Service
(B.) Send a task by RPC message to  
UAC service for creating a different  
privilege child process
RPC
Priv Auth
(C.) verify new process is  
qualified or not
Child Process
Task Cancelled 
Y
N
(D.) Child process is created  
by CreateProcessAsUser  
with specific token by Parent Process 
syscall
Ring0
Ring3
Parent Process
(A.) RunAs, 
CreateProcessAsUser or 
CreateProcessWithToken
(B.) Send a task by RPC message to  
UAC service for creating a different  
privilege child process
RPC
(C.) verify new process is  
qualified or not
Child Process
Task Cancelled 
Y
N
(D.) Child process is created  
by CreateProcessAsUser  
with specific token by Parent Process 
AppInfo!RAiLaunchAdminProcess
UAC Service
Priv Auth
UAC  
Protection  
Logic
Some points about UAC protection 
we're interested in: 
• How the UAC process verifies 
processes get higher privilege  
• Security issues 
• Bypassing Vectors
syscall
Ring0
Ring3
Parent Process
(A.) RunAs, 
CreateProcessAsUser or 
CreateProcessWithToken
UAC Service
(B.) Send a task by RPC message to  
UAC service for creating a different  
privilege child process
RPC
Priv Auth
(C.) verify new process is  
qualified or not
Child Process
Task Cancelled 
Y
N
(D.) Child process is created  
by CreateProcessAsUser  
with specific token by Parent Process 
AppInfo!RAiLaunchAdminProcess
PI:EMAIL
只好⾃⼰动⼿逆向 QQ
当你以为拜 Google ⼤神有解答，
但却没有。
if you can see me, 
remember it's discovered by reversing 
and not talked about on Internet.
I have no idea  
it's correct or not :/
PI:EMAIL
$_exec RunAs
PI:EMAIL
void __fastcall RAiLaunchAdminProcess(
    struct _RPC_ASYNC_STATE *rpcStatus, 
RPC_BINDING_HANDLE rpcBindingHandle, 
    wchar_t *exePath, 
    wchar_t *fullCommand, 
    int dwCreationFlags, 
    LPVOID lpEnvironment, 
    wchar_t *lpCurrentDirectory, 
    unsigned __int16 *a8, 
    struct _APPINFO_STARTUPINFO *lpStartupInfo, 
    __int64 a10, 
    int millSecond, 
    struct _PROCESS_INFORMATION *lpProcessInformation, 
    unsigned int *a13)
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
$_./trustAuth_A
PI:EMAIL
void AipCheckSecurePFDirectory(_UNICODE_STRING *exePath, uint *trustedFlag, __int64 caseSenstive)
{
  *trustedFlag |= 0x2000u;
  int pos = 0;
  do
  {
    // \??\C:\Program Files\Windows Defender,    \??\C:\Program Files (x86)\Windows Defender
    // \??\C:\Program Files\Windows Journal,      \??\C:\Program Files (x86)\Windows Journal
    // \??\C:\Program Files\Windows Media Player, \??\C:\Program Files (x86)\Windows Media Player
    // \??\C:\Program Files\Windows Multipoint Server
    if ( RtlPrefixUnicodeString(&(&g_IncludedPF)[2 * pos], exePath, caseSenstive = true) )
      break;
    ++pos;
  }
  while ( pos = 0 ) {
      actCtx = CreateActCtxW(&Dst);
      if ( actCtx != -1i64 ) {
        if ( QueryActCtxSettingsW(
               0, actCtx, 0i64, L"autoElevate", &pvBuffer, ...) )
          // pvBuffer = (wchar_t*)L"true"
          // tryAutoElevFlag = ( 't' - 'T'(0x54) & 0xffdf ) == 0 --> case insentive
          tryAutoElevFlag = ((pvBuffer - 'T') & 0xFFDF) == 0;
        ...
  if ( tryAutoElevFlag )
          goto markedAutoElev;
$_./trustAuth_B
PI:EMAIL
tryToVerify:
  ...
tryAutoElevFlag = false;
filemappingPtr = CreateFileMappingW(exeFileHandle, 0i64, 0x11000002, 0, ...);
if ( filemappingPtr ) {
  exeRawData = MapViewOfFile(filemappingPtr, 4u, 0, 0, 0i64);
  if ( exeRawData )
    if ( LdrResSearchResource(exeRawData, &buf, 3i64, 48i64 ..., 64) >= 0 ) {
      actCtx = CreateActCtxW(&Dst);
      if ( actCtx != -1i64 ) {
        if ( QueryActCtxSettingsW(
               0, actCtx, 0i64, L"autoElevate", &pvBuffer, ...) )
          // pvBuffer = (wchar_t*)L"true"
          // tryAutoElevFlag = ( 't' - 'T'(0x54) & 0xffdf ) == 0 --> case insentive
          tryAutoElevFlag = ((pvBuffer - 'T') & 0xFFDF) == 0;
        ...
  if ( tryAutoElevFlag )
          goto markedAutoElev;
markedAutoElev:
  if ( _wcsicmp(L"mmc.exe", *mmc) )
  {
    // autoElev request marked flag
    *trustFlag |= 0x1010000u;
    goto bye;
  }
  // ... chk for the arguments for mmc
$_./trustAuth_B
PI:EMAIL
$_./trustAuth_B
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
PI:EMAIL
AiLaunchProcess:  
Create Suspended Consent Process  
by CreateProcessAsUserW
PI:EMAIL
AiLaunchProcess:  
Create Suspended Consent Process  