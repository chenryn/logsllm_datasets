# G0096: APT41
## Description
APT41 is a threat group known for conducting both Chinese state-sponsored espionage and financially motivated activities. Active since at least 2012, APT41 has targeted various industries, including healthcare, telecommunications, technology, and video gaming, across 14 countries. (Citation: FireEye APT41 Aug 2019)

## Tactics, Techniques, and Procedures (TTPs)
The following table outlines the TTPs associated with APT41:

| Platform | Tactic | Technique | Description | Data Sources |
| --- | --- | --- | --- | --- |
| macOS, Windows, AWS, GCP, Azure | Discovery | [Network Share Discovery](https://attack.mitre.org/techniques/T1135/) | APT41 used the `net share` command for network reconnaissance. | Process monitoring, Process command-line parameters, Network protocol analysis, Process use of network |
| Linux, macOS, Windows, AWS, GCP, Azure | Discovery | [System Network Connections Discovery](https://attack.mitre.org/techniques/T1049/) | APT41 used the `netstat` command for network reconnaissance and the HIGHNOON malware to enumerate active RDP sessions. | Process monitoring, Process command-line parameters |
| Linux, Windows, macOS | Execution | [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203/) | APT41 leveraged several exploits, including CVE-2012-0158, CVE-2015-1641, CVE-2017-0199, CVE-2017-11882, and CVE-2019-3396. | Anti-virus, System calls, Process monitoring |
| Windows | Defense Evasion | [DLL Side-Loading](https://attack.mitre.org/techniques/T1073/) | APT41 used legitimate executables to perform DLL side-loading of their malware. | Process use of network, Process monitoring, Loaded DLLs |
| Linux, macOS, Windows | Defense Evasion | [File Deletion](https://attack.mitre.org/techniques/T1107/) | APT41 deleted files from the system. | File monitoring, Process command-line parameters, Binary file metadata |
| Windows | Defense Evasion, Execution | [Compiled HTML File](https://attack.mitre.org/techniques/T1223/) | APT41 used compiled HTML (.chm) files for targeting. | File monitoring, Process monitoring, Process command-line parameters |
| Linux, Windows, macOS | Command and Control | [Fallback Channels](https://attack.mitre.org/techniques/T1008/) | APT41 used the Steam community page as a fallback mechanism for C2. | Malware reverse engineering, Netflow/Enclave netflow, Packet capture, Process monitoring, Process use of network |
| Linux, macOS, Windows | Defense Evasion, Privilege Escalation | [Process Injection](https://attack.mitre.org/techniques/T1055/) | APT41's malware TIDYELF loaded the main WINTERLOVE component by injecting it into the iexplore.exe process. | API monitoring, Windows Registry, File monitoring, DLL monitoring, Process monitoring, Named Pipes |
| Linux, macOS, Windows | Command and Control | [Standard Application Layer Protocol](https://attack.mitre.org/techniques/T1071/) | APT41 used DNS for C2 communications. | Packet capture, Netflow/Enclave netflow, Process use of network, Malware reverse engineering, Process monitoring |
| Linux, macOS, Windows | Discovery | [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016/) | APT41 collected MAC addresses from victim machines. | Process monitoring, Process command-line parameters |
| Linux, macOS, Windows, AWS, GCP, Azure AD, Azure, Office 365 | Persistence | [Create Account](https://attack.mitre.org/techniques/T1136/) | APT41 created user accounts and added them to the User and Admin groups. | Office 365 account logs, Azure activity logs, AWS CloudTrail logs, Process monitoring, Process command-line parameters, Authentication logs, Windows event logs |
| Windows | Execution, Persistence, Privilege Escalation | [Scheduled Task](https://attack.mitre.org/techniques/T1053/) | APT41 used a compromised account to create a scheduled task on a system. | File monitoring, Process monitoring, Process command-line parameters, Windows event logs |
| Windows | Persistence | [Modify Existing Service](https://attack.mitre.org/techniques/T1031/) | APT41 modified legitimate Windows services to install malware backdoors. | Windows Registry, File monitoring, Process monitoring, Process command-line parameters |
| Linux, macOS | Defense Evasion | [Clear Command History](https://attack.mitre.org/techniques/T1146/) | APT41 attempted to remove evidence of some of its activity by deleting Bash histories. | Authentication logs, File monitoring |
| Linux, macOS, Windows | Execution | [Command-Line Interface](https://attack.mitre.org/techniques/T1059/) | APT41 used `cmd.exe /c` to execute commands on remote machines. | Process monitoring, Process command-line parameters |
| Linux, macOS, Windows | Impact | [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486/) | APT41 used a ransomware called Encryptor RaaS to encrypt files on targeted systems and provide a ransom note to the user. | Kernel drivers, File monitoring, Process command-line parameters, Process monitoring |
| Linux, macOS, Windows | Command and Control, Defense Evasion | [Web Service](https://attack.mitre.org/techniques/T1102/) | APT41 used legitimate websites for C2 through dead drop resolvers (DDR), including GitHub, Pastebin, and Microsoft TechNet. | Host network interface, Netflow/Enclave netflow, Network protocol analysis, Packet capture, SSL/TLS inspection |
| Linux, macOS, Windows, AWS, GCP, Azure | Impact | [Resource Hijacking](https://attack.mitre.org/techniques/T1496/) | APT41 deployed a Monero cryptocurrency mining tool in a victim’s environment. | Azure activity logs, Stackdriver logs, AWS CloudTrail logs, Process use of network, Process monitoring, Network protocol analysis, Network device logs |
| Linux, Windows, macOS | Exfiltration | [Data Compressed](https://attack.mitre.org/techniques/T1002/) | APT41 created a RAR archive of targeted files for exfiltration. | Binary file metadata, File monitoring, Process command-line parameters, Process monitoring |
| Windows | Defense Evasion | [Modify Registry](https://attack.mitre.org/techniques/T1112/) | APT41 used a malware variant called GOODLUCK to modify the registry in order to steal credentials. | Windows Registry, File monitoring, Process monitoring, Process command-line parameters, Windows event logs |
| Linux, macOS, Windows | Defense Evasion | [Indicator Removal on Host](https://attack.mitre.org/techniques/T1070/) | APT41 attempted to remove evidence of some of its activity by clearing Windows security and system events. | File monitoring, Process monitoring, Process command-line parameters, API monitoring, Windows event logs |
| Windows | Persistence | [Registry Run Keys / Startup Folder](https://attack.mitre.org/techniques/T1060/) | APT41 created and modified startup files for persistence. | Windows Registry, File monitoring |
| Linux, macOS, Windows | Discovery | [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033/) | APT41 used the WMIEXEC utility to execute `whoami` commands on remote machines. | File monitoring, Process monitoring, Process command-line parameters |
| Windows | Execution | [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047/) | APT41 used WMI in several ways, including for execution of commands via WMIEXEC and for persistence via PowerSploit. | Authentication logs, Netflow/Enclave netflow, Process monitoring, Process command-line parameters |
| Linux, macOS, Windows, AWS, GCP, Azure, SaaS, Office 365 | Defense Evasion, Persistence, Privilege Escalation, Initial Access | [Valid Accounts](https://attack.mitre.org/techniques/T1078/) | APT41 used compromised credentials to log on to other systems. | AWS CloudTrail logs, Stackdriver logs, Authentication logs, Process monitoring |
| Linux, macOS, Windows | Collection, Credential Access | [Input Capture](https://attack.mitre.org/techniques/T1056/) | APT41 used a keylogger called GEARSHIFT on a target system. | Windows Registry, Kernel drivers, Process monitoring, API monitoring |
| Linux, Windows, macOS | Initial Access | [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195/) | APT41 gained access to production environments where they could inject malicious code into legitimate, signed files and widely distribute them to end users. | Web proxy, File monitoring |
| Linux, macOS, Windows | Command and Control | [Domain Generation Algorithms](https://attack.mitre.org/techniques/T1483/) | APT41 used DGA to change their C2 servers monthly. | Process use of network, Packet capture, Network device logs, Netflow/Enclave netflow, DNS records |
| Linux, macOS, Windows | Command and Control, Defense Evasion | [Connection Proxy](https://attack.mitre.org/techniques/T1090/) | APT41 used a tool called CLASSFON to covertly proxy network communications. | Process use of network, Process monitoring, Netflow/Enclave netflow, Packet capture |
| Windows | Persistence, Initial Access | [External Remote Services](https://attack.mitre.org/techniques/T1133/) | APT41 compromised an online billing/payment service using VPN access between a third-party service provider and the targeted payment service. | Authentication logs |
| Windows, macOS, Linux | Initial Access | [Spearphishing Attachment](https://attack.mitre.org/techniques/T1193/) | APT41 sent spearphishing emails with attachments such as compiled HTML (.chm) files to initially compromise their victims. | File monitoring, Packet capture, Network intrusion detection system, Detonation chamber, Email gateway, Mail server |
| Linux, macOS, Windows | Defense Evasion | [Masquerading](https://attack.mitre.org/techniques/T1036/) | APT41 attempted to masquerade their files as popular anti-virus software. | File monitoring, Process monitoring, Binary file metadata |
| Windows | Execution | [PowerShell](https://attack.mitre.org/techniques/T1086/) | APT41 leveraged PowerShell to deploy malware families in victims’ environments. | PowerShell logs, Loaded DLLs, DLL monitoring, Windows Registry, File monitoring, Process monitoring, Process command-line parameters |
| Windows | Persistence, Privilege Escalation | [Accessibility Features](https://attack.mitre.org/techniques/T1015/) | APT41 leveraged sticky keys to establish persistence. | Windows Registry, File monitoring, Process monitoring |
| Windows, Linux, macOS | Credential Access | [Credential Dumping](https://attack.mitre.org/techniques/T1003/) | APT41 used the Windows Credential Editor to dump password hashes from memory and authenticate other user accounts. | API monitoring, Process monitoring, PowerShell logs, Process command-line parameters |
| Windows | Lateral Movement | [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076/) | APT41 used RDP for lateral movement. | Authentication logs, Netflow/Enclave netflow, Process monitoring |
| Linux, Windows, macOS, AWS, GCP, Azure | Discovery | [Network Service Scanning](https://attack.mitre.org/techniques/T1046/) | APT41 used a malware variant called WIDETONE to conduct port scans on specified subnets. | Netflow/Enclave netflow, Network protocol analysis, Packet capture, Process command-line parameters, Process use of network |
| Linux, macOS, Windows, Office 365, Azure AD, SaaS | Credential Access | [Brute Force](https://attack.mitre.org/techniques/T1110/) | APT41 performed password brute-force attacks on the local admin account. | Office 365 account logs, Authentication logs |
| Linux, Windows | Persistence | [Bootkit](https://attack.mitre.org/techniques/T1067/) | APT41 deployed Master Boot Record bootkits on Windows systems to hide their malware and maintain persistence on victim systems. | API monitoring, MBR, VBR |
| Linux, macOS, Windows | Defense Evasion | [Rootkit](https://attack.mitre.org/techniques/T1014/) | APT41 deployed rootkits on Linux systems. | BIOS, MBR, System calls |
| macOS, Windows | Defense Evasion | [Code Signing](https://attack.mitre.org/techniques/T1116/) | APT41 leveraged code-signing certificates to sign malware when targeting both gaming and non-gaming organizations. | Binary file metadata |

This table provides a comprehensive overview of the tactics, techniques, and procedures employed by APT41, along with the relevant data sources for detection and mitigation.