**Context:**
  * Playwright Version: 1.2.0
  * Operating System: Windows
  * Node version: 10/12/14
  * Browser: Webkit
  * Extra: Running as GitHub Action
    Running one project: e2e
    PASS browser: chromium e2e tests/e2e/example.test.js (17.677 s)
    PASS browser: firefox e2e tests/e2e/example.test.js (12.755 s)
    FAIL browser: webkit e2e tests/e2e/example.test.js (21.002 s)
      ● Example Tests › image snapshots
        Expected image to match or be a close match to snapshot but was 26.405261426690828% different from snapshot (243350.8893083827 differing pixels).
        See diff for details: D:\a\docsify\docsify\tests\e2e\__image_snapshots__\__diff_output__\example-test-js-example-tests-image-snapshots-1-webkit-diff.png
          280 |     // Viewport screenshot
          281 |     const screenshot1 = await page.screenshot();
        > 282 |     expect(screenshot1).toMatchImageSnapshot();
              |                         ^
          283 | 
          284 |     // Full page screenshot
          285 |     const screenshot2 = await page.screenshot({ fullPage: true });
          at Object. (tests/e2e/example.test.js:282:25)
     › 1 snapshot failed.
**Image diff output from jest-image-snapshot**
Chromium on macOS (top) vs Chromium on Windows (bottom)
![example-test-js-example-tests-image-snapshots-1-webkit-diff](https://user-
images.githubusercontent.com/442527/88346440-53600e00-cd16-11ea-83c3-e92fb3bb5516.png)
**Describe the bug**
We're running e2e tests using Chromium, Firefox, and Webkit on macOS, Ubuntu,
and Windows, then using jest-image-snapshot for image comparisons. Reference
screenshots are generated on a variety of platforms as project maintainers use
Linux, macOS, and Windows.
Generally speaking, I can tweak jest-image-snapshot's threshold settings to
allow screenshots to match despite the slight rendering differences across
operating systems and browsers--except for Webkit on Windows. The reason is
that Webkit on Windows renders text non-antialiased (see screenshot above)
which results in a significant diff detection.
I'm assuming non anti-aliased text rendering is a bug. If not, is there a
launch argument we can use to force Webkit on Windows to render anti-aliased
text?