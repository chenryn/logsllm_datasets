Tactical Exploitation
”The Other Way to Pen-Test”
http://metasploit.com/confs/
H D Moore (hdm[at]metasploit.com)
Valsmith (valsmith[at]metasploit.com)
Last modiﬁed: 06/27/2007
Contents
1
Introduction
2
1.1
Abstract . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2
1.2
Background . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2
2
The Tactical Approach
3
2.1
Vulnerabilties . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
2.2
Competition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
3
Information Discovery
4
3.1
Personnel Discovery
. . . . . . . . . . . . . . . . . . . . . . . . .
4
3.1.1
Search Engines . . . . . . . . . . . . . . . . . . . . . . . .
4
3.1.2
Paterva’s Evolution
. . . . . . . . . . . . . . . . . . . . .
5
3.2
Network Discovery . . . . . . . . . . . . . . . . . . . . . . . . . .
5
3.2.1
Discovery Services . . . . . . . . . . . . . . . . . . . . . .
5
3.2.2
Bounce Messages . . . . . . . . . . . . . . . . . . . . . . .
6
3.2.3
Virtual Hosting . . . . . . . . . . . . . . . . . . . . . . . .
7
3.2.4
Outbound DNS . . . . . . . . . . . . . . . . . . . . . . . .
8
3.2.5
Direct Contact . . . . . . . . . . . . . . . . . . . . . . . .
8
3.3
Firewalls and IPS . . . . . . . . . . . . . . . . . . . . . . . . . . .
9
3.3.1
Firewall Identiﬁcation . . . . . . . . . . . . . . . . . . . .
9
3.3.2
IPS Identiﬁcation . . . . . . . . . . . . . . . . . . . . . . .
9
3.4
Application Discovery
. . . . . . . . . . . . . . . . . . . . . . . .
9
3.4.1
Slow and Steady wins the Deface . . . . . . . . . . . . . .
10
3.4.2
Finding Web Apps with W3AF . . . . . . . . . . . . . . .
10
3.4.3
Metasploit 3 Discovery Modules
. . . . . . . . . . . . . .
10
3.5
Client Application Discovery
. . . . . . . . . . . . . . . . . . . .
10
3.5.1
Browser Fingerprinting
. . . . . . . . . . . . . . . . . . .
11
3.5.2
Mail Client Fingerprinting . . . . . . . . . . . . . . . . . .
11
3.6
Process Discovery . . . . . . . . . . . . . . . . . . . . . . . . . . .
12
3.6.1
Traﬃc Monitoring with IP IDs . . . . . . . . . . . . . . .
12
3.6.2
Usage Monitoring with MS FTP . . . . . . . . . . . . . .
12
3.6.3
Web Site Monitoring with HTTP . . . . . . . . . . . . . .
13
1
4
Information Exploitation
14
4.1
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
14
4.2
External Networks . . . . . . . . . . . . . . . . . . . . . . . . . .
14
4.2.1
Attacking File Transfers . . . . . . . . . . . . . . . . . . .
14
4.2.2
Attacking Mail Services . . . . . . . . . . . . . . . . . . .
15
4.2.3
Attacking Web Servers . . . . . . . . . . . . . . . . . . . .
15
4.2.4
Attacking DNS Servers
. . . . . . . . . . . . . . . . . . .
16
4.2.5
Attacking Database Servers . . . . . . . . . . . . . . . . .
16
4.2.6
Authentication Relays . . . . . . . . . . . . . . . . . . . .
16
4.2.7
Free Hardware
. . . . . . . . . . . . . . . . . . . . . . . .
17
4.3
Internal Networks . . . . . . . . . . . . . . . . . . . . . . . . . . .
17
4.3.1
NetBIOS Names . . . . . . . . . . . . . . . . . . . . . . .
17
4.3.2
DNS Servers
. . . . . . . . . . . . . . . . . . . . . . . . .
18
4.3.3
WINS Servers . . . . . . . . . . . . . . . . . . . . . . . . .
18
4.3.4
Authentication Relays . . . . . . . . . . . . . . . . . . . .
18
4.4
Trust Relationships . . . . . . . . . . . . . . . . . . . . . . . . . .
18
4.4.1
NFS Home Directories . . . . . . . . . . . . . . . . . . . .
20
4.4.2
Hijacking SSH
. . . . . . . . . . . . . . . . . . . . . . . .
20
4.4.3
Hijacking Kerberos . . . . . . . . . . . . . . . . . . . . . .
21
5
Conclusion
24
2
Chapter 1
Introduction
1.1
Abstract
Penetration testing often focuses on individual vulnerabilities and services. This
paper introduces a tactical approach that does not rely on exploiting known
vulnerabilities. Using combination of new tools and obscure techniques, we will
walk through the process of compromising an organization without the use of
normal exploit code. Many of the tools will be made available as new modules
for the Metasploit Framework.
1.2
Background
The authors of this paper have been involved in security auditing and penetra-
tion testing for the last ten years. A common trend among security staﬀ is the
use of oﬀ-the-shelf software to automate the penetration test process. Tools like
Nessus, Retina, and Core Impact have replaced manual audits and checklists at
many organizations.
While these tools do a great job of reducing the time and knowledge require-
ments of the penetration tester, their use can lead to a certain lazyness among
the security staﬀ. Many valuable compromise vectors can be missed because
they are not part of the ”canned” product. This paper is intended to shine
some light on the more obscure and less-used techniques that the authors have
depended on for many years.
The exploit techniques listed in this paper depend solely on the conﬁguration of
the target and the features of the target platform. No ”0day” will be dropped in
the normal sense, but many tips, tricks, and interesting attacks will be covered.
3
Chapter 2
The Tactical Approach
2.1
Vulnerabilties
Vulnerabilities are transient. What is found one day may be patched on the
next.
Security software and operating system improvements can make even
simple vulnerabilities unusable for a penetration test.
Instead of treating a
network like a list of vulnerabilities, an auditor should consider the applications,
the people, the processes, and the trusts. The key to gaining access is to use
what is available to bring you closer to the next goal. Using this approach, even
a fully-patched network will provide exploitable targets.
Hacking is not about exploits. As many professional auditors know, only one or
two real exploits may be used during the a penetration test. The rest of the time
is spent obtaining passwords, abusing trust relationships, tricking authentication
systems, and hijacking services to gain access to more systems. A successful
attack has everything to do with gaining access and control of data.
2.2
Competition
Any security test is a race against time. An auditor faces competition from
real attackers, internal and external, that are not bound by the same scope and
restrictions as themselves. For example, as a business practice, a security test
must not interfere with production services or modify critical data. Attackers
are opportunists. Whether a server is hosted locally or on a third-party is not
a concern. Their only concern is gaining access to the data and controls they
seek. Anything the auditor does not test, he must assume someone else will.
4
Chapter 3
Information Discovery
The ﬁrst step to any security engagement is the initial discovery process. This
is the process for discovering as much background information about the target
as possible including, hosts, operating systems, topology, etc.
This chapter
discusses a variety of discovery techniques, starting from the outside, leading in,
that can be used to plan and initiate a penetration test.
3.1
Personnel Discovery
Security is a people problem, ﬁrst and foremost. People are responsible for writ-
ing software, installing that software, and providing conﬁguration and mainte-
nance. When performing a penetration test against an organization, the ﬁrst
step is to identify the people involved in creating and maintaining the infras-
tructure. Fortunately, a number of great tools and services exist that can be
used to identify the gatekeepers of a given organization.
3.1.1
Search Engines
Google is still one of the best resources available for information discovery.
Searching for an organization’s name across the web can provide a list of web
sites and services provided by that organization. Searching for the name across
newsgroup archives can provide a list of past and current employees. Newsgroup
posts often include the full title and username of employee as part of the post
content. Image searches can sometimes yield pictures of the people, oﬃcies, and
even occasionally server rooms.
5
3.1.2
Paterva’s Evolution
Paterva[1], a South African company headed by Roelof Temmingh , provides a
great tool called Evolution. At this time, Evolution is still in the beta phase, but
a live web interface is hosted at http://www.paterva.com/evolution.html.
Evolution is able to cross-reference information from a large set of public data
source, using a wide variety of seed values (Name, Phone Numer, Email Address,
etc). For example, a search for ”HD Moore” (one of the authors), returned a
list of web sites, valid email addresses, and PGP keys.
3.2
Network Discovery
Given the name of an organization, discovering what networks are under their
control can be a challenge. Starting with the results of the Personnel Discovery
phase, the typical process involves DNS zone transfers, Whois requests, and
reverse DNS lookups. These tools fall short of being able to show what hosts