# Tactical Exploitation: An Alternative Approach to Pen-Testing

**Link:** [http://metasploit.com/confs/](http://metasploit.com/confs/)

**Authors:**
- H D Moore (hdm[at]metasploit.com)
- Valsmith (valsmith[at]metasploit.com)

**Last Modified:** 06/27/2007

## Table of Contents
1. Introduction
   1.1 Abstract
   1.2 Background
2. The Tactical Approach
   2.1 Vulnerabilities
   2.2 Competition
3. Information Discovery
   3.1 Personnel Discovery
      3.1.1 Search Engines
      3.1.2 Paterva’s Evolution
   3.2 Network Discovery
      3.2.1 Discovery Services
      3.2.2 Bounce Messages
      3.2.3 Virtual Hosting
      3.2.4 Outbound DNS
      3.2.5 Direct Contact
   3.3 Firewalls and Intrusion Prevention Systems (IPS)
      3.3.1 Firewall Identification
      3.3.2 IPS Identification
   3.4 Application Discovery
      3.4.1 Slow and Steady Wins the Deface
      3.4.2 Finding Web Apps with W3AF
      3.4.3 Metasploit 3 Discovery Modules
   3.5 Client Application Discovery
      3.5.1 Browser Fingerprinting
      3.5.2 Mail Client Fingerprinting
   3.6 Process Discovery
      3.6.1 Traffic Monitoring with IP IDs
      3.6.2 Usage Monitoring with MS FTP
      3.6.3 Website Monitoring with HTTP
4. Information Exploitation
   4.1 Introduction
   4.2 External Networks
      4.2.1 Attacking File Transfers
      4.2.2 Attacking Mail Services
      4.2.3 Attacking Web Servers
      4.2.4 Attacking DNS Servers
      4.2.5 Attacking Database Servers
      4.2.6 Authentication Relays
      4.2.7 Free Hardware
   4.3 Internal Networks
      4.3.1 NetBIOS Names
      4.3.2 DNS Servers
      4.3.3 WINS Servers
      4.3.4 Authentication Relays
   4.4 Trust Relationships
      4.4.1 NFS Home Directories
      4.4.2 Hijacking SSH
      4.4.3 Hijacking Kerberos
5. Conclusion

## Chapter 1: Introduction

### 1.1 Abstract
Penetration testing often focuses on individual vulnerabilities and services. This paper introduces a tactical approach that does not rely on exploiting known vulnerabilities. By combining new tools and obscure techniques, we will walk through the process of compromising an organization without using conventional exploit code. Many of these tools will be made available as new modules for the Metasploit Framework.

### 1.2 Background
The authors have been involved in security auditing and penetration testing for over a decade. A common trend among security staff is the use of off-the-shelf software to automate the penetration test process. Tools like Nessus, Retina, and Core Impact have replaced manual audits and checklists at many organizations.

While these tools reduce the time and knowledge requirements for penetration testers, their use can lead to complacency among security staff. Many valuable compromise vectors can be missed because they are not part of the "canned" product. This paper aims to highlight more obscure and less-used techniques that the authors have relied on for many years.

The exploit techniques listed in this paper depend solely on the configuration of the target and the features of the target platform. No "0day" exploits will be used in the traditional sense, but many tips, tricks, and interesting attacks will be covered.

## Chapter 2: The Tactical Approach

### 2.1 Vulnerabilities
Vulnerabilities are transient. What is found one day may be patched the next. Security software and operating system improvements can make even simple vulnerabilities unusable for a penetration test. Instead of treating a network as a list of vulnerabilities, an auditor should consider the applications, people, processes, and trust relationships. The key to gaining access is to use what is available to bring you closer to the next goal. Using this approach, even a fully-patched network will provide exploitable targets.

Hacking is not just about exploits. As many professional auditors know, only one or two real exploits may be used during a penetration test. The rest of the time is spent obtaining passwords, abusing trust relationships, tricking authentication systems, and hijacking services to gain access to more systems. A successful attack is all about gaining access and control of data.

### 2.2 Competition
Any security test is a race against time. An auditor faces competition from real attackers, both internal and external, who are not bound by the same scope and restrictions. For example, a security test must not interfere with production services or modify critical data. Attackers, however, are opportunistic. Whether a server is hosted locally or by a third party is not a concern; their only concern is gaining access to the data and controls they seek. Anything the auditor does not test, they must assume someone else will.

## Chapter 3: Information Discovery

The first step in any security engagement is the initial discovery process. This involves gathering as much background information about the target as possible, including hosts, operating systems, and topology. This chapter discusses a variety of discovery techniques, starting from the outside and leading in, that can be used to plan and initiate a penetration test.

### 3.1 Personnel Discovery
Security is fundamentally a people problem. People are responsible for writing software, installing it, and providing configuration and maintenance. When performing a penetration test against an organization, the first step is to identify the people involved in creating and maintaining the infrastructure. Fortunately, several tools and services exist that can help identify the gatekeepers of a given organization.

#### 3.1.1 Search Engines
Google remains one of the best resources for information discovery. Searching for an organization's name across the web can provide a list of websites and services. Newsgroup archives can provide a list of past and current employees, often including full titles and usernames. Image searches can sometimes yield pictures of people, offices, and even server rooms.

#### 3.1.2 Paterva’s Evolution
Paterva, a South African company led by Roelof Temmingh, provides a tool called Evolution. Currently in beta, a live web interface is available at [http://www.paterva.com/evolution.html](http://www.paterva.com/evolution.html). Evolution cross-references information from a large set of public data sources using various seed values (Name, Phone Number, Email Address, etc.). For example, a search for "HD Moore" (one of the authors) returned a list of websites, valid email addresses, and PGP keys.

### 3.2 Network Discovery
Given the name of an organization, discovering the networks under their control can be challenging. Starting with the results of the Personnel Discovery phase, the typical process involves DNS zone transfers, Whois requests, and reverse DNS lookups. These tools, however, fall short of showing all hosts.