Hello,
I had reopened an old closed issue. I think it might be wiser to create a new
one.
I have been trying to understand why the `colors_ratio` parameter of the
`clustermap` was never working for me.
I am running python3.8, with seaborn0.10.1 and my call is the following:
    sns.clustermap(np.log2(1.01+merged[merged.columns[8:-12]].loc[rand].T),col_cluster=False, standard_scale=0, colors_ratio=0.7, col_colors = data, figsize=(30,20), xticklabels=False)
    fig.ax_col_dendrogram.set_visible(False)
but I have been trying without all possible parameters and array sizes and I
was never able to make this parameter work (except is set at 0). I always seem
to get the same error:
    ValueError: Width and height specified must be non-negative:
with the following stacktrace:
    ~/.local/lib/python3.8/site-packages/seaborn/matrix.py in clustermap(data, pivot_kws, method, metric, z_score, standard_scale, figsize, cbar_kws, row_cluster, col_cluster, row_linkage, col_linkage, row_colors, col_colors, mask, dendrogram_ratio, colors_ratio, cbar_pos, tree_kws, **kwargs)
       1379 
       1380     """
    -> 1381     plotter = ClusterGrid(data, pivot_kws=pivot_kws, figsize=figsize,
       1382                           row_colors=row_colors, col_colors=col_colors,
       1383                           z_score=z_score, standard_scale=standard_scale,
    ~/.local/lib/python3.8/site-packages/seaborn/matrix.py in __init__(self, data, pivot_kws, z_score, standard_scale, figsize, row_colors, col_colors, mask, dendrogram_ratio, colors_ratio, cbar_pos)
        825                                     height_ratios=height_ratios)
        826 
    --> 827         self.ax_row_dendrogram = self.fig.add_subplot(self.gs[-1, 0])
        828         self.ax_col_dendrogram = self.fig.add_subplot(self.gs[0, -1])
        829         self.ax_row_dendrogram.set_axis_off()
    ~/.local/lib/python3.8/site-packages/matplotlib/figure.py in add_subplot(self, *args, **kwargs)
       1417                     self._axstack.remove(ax)
       1418 
    -> 1419             a = subplot_class_factory(projection_class)(self, *args, **kwargs)
       1420 
       1421         return self._add_axes_internal(key, a)
    ~/.local/lib/python3.8/site-packages/matplotlib/axes/_subplots.py in __init__(self, fig, *args, **kwargs)
         74 
         75         # _axes_class is set in the subplot_class_factory
    ---> 76         self._axes_class.__init__(self, fig, self.figbox, **kwargs)
         77         # add a layout box to this, for both the full axis, and the poss
         78         # of the axis.  We need both because the axes may become smaller
    ~/.local/lib/python3.8/site-packages/matplotlib/axes/_base.py in __init__(self, fig, rect, facecolor, frameon, sharex, sharey, label, xscale, yscale, **kwargs)
        422             self._position = mtransforms.Bbox.from_bounds(*rect)
        423         if self._position.width  424             raise ValueError('Width and height specified must be non-negative')
        425         self._originalPosition = self._position.frozen()
        426         self.axes = self
    ValueError: Width and height specified must be non-negative 
Would you be able to help me on this?
Thanks for having implemented this feature in the first place,
Best,