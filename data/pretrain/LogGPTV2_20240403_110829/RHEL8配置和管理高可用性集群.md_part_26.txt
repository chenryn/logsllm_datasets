:::
如果资源失败，则显示集群状态时会出现一个失败信息。如果解析该资源，您可以使用
`pcs resource cleanup 命令清除`{.literal}
该故障状态。此命令会重置资源状态和
`failcount`{.literal}，告诉集群忘记资源的操作历史记录，并重新检测其当前状态。
以下命令清理由 [*resource_id*]{.emphasis} 指定的资源。
``` literallayout
pcs resource cleanup resource_id
```
如果没有指定
[*resource_id*]{.emphasis}，这个命令会重置所有资源的资源状态和
`故障计数`{.literal}。
`pcs resource cleanup`{.literal}
命令只会探测显示为失败操作的资源。要探测所有节点上的所有资源，使用以下命令：
``` literallayout
pcs resource refresh
```
默认情况下，pcs `resource refresh`{.literal}
命令只会探测到已知资源状态的节点。要探测所有资源，包括状态未知的资源，使用以下命令：
``` literallayout
pcs resource refresh --full
```
:::
::: section
::: titlepage
# []{#assembly_managing-cluster-resources-configuring-and-managing-high-availability-clusters.html#proc_moving-cluster-resources-managing-cluster-resources}在集群中移动资源 {.title}
:::
Pacemaker
提供了各种机制来将资源配置为从一个节点迁移到另一个节点，并在需要时手动移动资源。
您可以使用 pcs resource move 和
`pcs resource relocate 命令手动移动`{.literal}
集群中的资源``{=html}，如
[手动移动群集资源](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_cluster-maintenance-configuring-and-managing-high-availability-clusters#proc_manually-move-resources-cluster-maintenance){.link}
中所述。除了这些命令外，您还可以通过启用、禁用和禁止资源来控制集群资源的行为，如
[禁用、启用和禁止集群资源中所述。](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_cluster-maintenance-configuring-and-managing-high-availability-clusters#proc_disabling-resources-cluster-maintenance){.link}
您可以配置资源以便在定义多个故障后移到新节点，您可以在外部连接丢失时配置集群来移动资源。
::: section
::: titlepage
## []{#assembly_managing-cluster-resources-configuring-and-managing-high-availability-clusters.html#_moving_resources_due_to_failure}因为失败而移动资源 {.title}
:::
当您创建资源时，您可以通过为该资源设置 `migration-threshold`{.literal}
选项来配置资源，使其在达到定义的故障次数后移至新节点。达到阈值后，这个节点将不再被允许运行失败的资源，直到：
::: itemizedlist
-   管理员使用 `pcs resource cleanup`{.literal} 命令手动重置资源的
    `故障计数`{.literal}。
-   达到资源的 `failure-timeout`{.literal} 值。
:::
`migration-threshold`{.literal} 的值默认设置为
`INFINITY`{.literal}。`INFINITY`{.literal}
在内部被定义为一个非常大的数，但是有限的。值 0 会禁用
`migration-threshold`{.literal} 功能。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
为资源设置 `migration-threshold`{.literal}
与为迁移配置资源不同，其中资源移动可以到另一个位置，而不会丢失状态。
:::
以下示例为名为 `dummy_resource`{.literal} 的资源添加了一个迁移阈值
10，这表示资源将在 10 次故障后移到一个新节点。
``` literallayout
# pcs resource meta dummy_resource migration-threshold=10
```
您可以使用以下命令为整个集群的默认值添加迁移阈值。
``` literallayout
# pcs resource defaults update migration-threshold=10
```
要确定资源当前的故障状态和限值，请使用
`pcs resource failcount show`{.literal} 命令。
迁移阈值概念有两个例外，当资源无法启动或无法停止时会出现这种情况。如果集群属性
`start-failure-is-fatal`{.literal} 设为 `true`{.literal}
（默认值），启动失败会导致 `failcount`{.literal} 被设为
`INFINITY`{.literal}，因此总是会导致资源立即移动。
停止失败会稍有不同，且非常关键。如果资源无法停止，并且启用了
STONITH，那么集群将隔离该节点以便可以在其他位置启动该资源。如果没有启用
STONITH，那么集群就无法继续，也不会尝试在其他位置启动资源，而是会在失败超时后尝试再次停止它。
:::
::: section
::: titlepage
## []{#assembly_managing-cluster-resources-configuring-and-managing-high-availability-clusters.html#_moving_resources_due_to_connectivity_changes}由于连接更改而移动资源 {.title}
:::
将集群设置为在外部连接丢失时移动资源分为两个步骤。
::: orderedlist
1.  在集群中添加 `ping`{.literal} 资源。`ping`{.literal}
    资源使用同名的系统工具来测试是否可以访问（由 DNS 主机名或 IPv4/IPv6
    地址指定）一系列机器，并使用结果来维护名为 `pingd`{.literal}
    的节点属性。
2.  为资源配置位置约束，该限制将在连接丢失时将资源移动到不同的节点。
:::
下表描述了您可以为 `ping`{.literal} 资源设置的属性。
::: table
[]{#assembly_managing-cluster-resources-configuring-and-managing-high-availability-clusters.html#tb-pingoptions-HAAR}
**表 16.1. ping 资源的属性**
::: table-contents
  项                       描述
  ------------------------ --------------------------------------------------------------------------------------------------------------------
  `dampen`{.literal}       等待（强化）时间进一步发生更改。这会防止，当集群节点在稍有不同的时间发现连接丢失时资源在集群中移动。
  `multiplier`{.literal}   连接的 ping 节点数量乘以这个值来获得分数。在配置了多个 ping 节点时很有用。
  `host_list`{.literal}    要联系的机器以确定当前的连接状态。允许的值包括可解析 DNS 主机名、IPv4 和 IPv6 地址。主机列表中的条目是空格分开的。
:::
:::
以下示例命令会创建一个 `ping`{.literal} 资源，来验证与
`gateway.example.com`{.literal}
的连接。在实践中，您可以验证到网络网关/路由器的连接。您可以将
`ping`{.literal} 资源配置为克隆，以便资源可以在所有集群节点上运行。
``` literallayout
# pcs resource create ping ocf:pacemaker:ping dampen=5s multiplier=1000 host_list=gateway.example.com clone
```
以下示例为名为 `Webserver`{.literal}
的现有资源配置位置约束规则。如果当前运行的主机无法 ping
`gateway.example.com`{.literal}，这将导致 `Webserver`{.literal}
资源移至能够 ping `gateway.example.com`{.literal} 的主机。
``` literallayout
# pcs constraint location Webserver rule score=-INFINITY pingd lt 1 or not_defined pingd
```
:::
:::
::: section
::: titlepage
# []{#assembly_managing-cluster-resources-configuring-and-managing-high-availability-clusters.html#proc_disabling-monitor-operationmanaging-cluster-resources}禁用 monitor 操作 {.title}
:::
停止重复 monitor
的最简单方法是删除它。然而，在有些情况下，您可能只想临时禁用它。在这种情况下，在操作的定义中添加
`enabled="false"。`{.literal}当您要重新恢复监控操作时，请将
`enabled="true"`{.literal} 设置为操作的定义。
当您使用 `pcs resource update 命令更新资源`{.literal}
操作时，您没有特别调用的任何选项都将重置为默认值。例如，如果您已经配置了自定义超时值
600 的监控操作，运行以下命令可将超时值重置为默认值 20（或通过
`pcs resource op defaults 命令将默认值设置为`{.literal} ）。
``` literallayout
# pcs resource update resourceXZY op monitor enabled=false
# pcs resource update resourceXZY op monitor enabled=true
```
为了保持这个选项的原始值 600，当您重新启用 monitor
控操作时，必须指定那个值，如下例所示。
``` literallayout
# pcs resource update resourceXZY op monitor timeout=600 enabled=true
```
:::
::: section
::: titlepage
# []{#assembly_managing-cluster-resources-configuring-and-managing-high-availability-clusters.html#proc_tagging-cluster-resources-managing-cluster-resources}配置和管理集群资源标签 {.title}
:::
从 Red Hat Enterprise Linux 8.3 开始，您可以使用 `pcs`{.literal}
命令标记集群资源。这允许您使用单个命令启用、禁用、管理或取消管理指定的一组资源。
::: section
::: titlepage
## []{#assembly_managing-cluster-resources-configuring-and-managing-high-availability-clusters.html#_tagging_cluster_resources_for_administration_by_category}为管理标记集群资源，按类别标记 {.title}
:::
以下流程使用资源标签标记两个资源，并禁用标记的资源。在本例中，要标记的现有资源命名为
`d-01`{.literal} 和 `d-02`{.literal}。
::: orderedlist
**流程**
1.  为资源 `d-01 和 d`{.literal} `-02`{.literal} 创建名为
    `special-resources`{.literal} 的标签。
    ``` literallayout
    [root@node-01]# pcs tag create special-resources d-01 d-02
    ```
2.  显示资源标签配置。
    ``` literallayout
    [root@node-01]# pcs tag config
    special-resources
      d-01
      d-02
    ```
3.  禁用使用 `special-resources`{.literal} 标签标记的所有资源。
    ``` literallayout
    [root@node-01]# pcs resource disable special-resources
    ```
4.  显示资源状态，以确认资源 `d-01`{.literal} 和 `d-02 已`{.literal}
    被禁用。
    ``` literallayout
    [root@node-01]# pcs resource
      * d-01        (ocf::pacemaker:Dummy): Stopped (disabled)
      * d-02        (ocf::pacemaker:Dummy): Stopped (disabled)
    ```
:::
除了 `pcs resource disable`{.literal} 命令外，pcs
`resource enable`{.literal}、`pcs resource manage`{.literal} 和
`pcs resource unmanage`{.literal} 命令还支持管理标记的资源。
创建资源标签后：
::: itemizedlist
-   您可以使用 `pcs tag delete`{.literal} 命令删除资源标签。
-   您可以使用 `pcs tag update`{.literal}
    命令修改现有资源标签的资源标签配置。
:::
:::
::: section
::: titlepage
## []{#assembly_managing-cluster-resources-configuring-and-managing-high-availability-clusters.html#_deleting_a_tagged_cluster_resource}删除标记的集群资源 {.title}
:::
您不能使用 `pcs`{.literal}
命令删除标记的集群资源。要删除标记的资源，请使用以下步骤。
::: orderedlist
**流程**
1.  删除资源标签。
    ::: orderedlist
    1.  以下命令从具有该标签的所有资源中删除资源标签
        `special-resources`{.literal}，
        ``` literallayout
        [root@node-01]# pcs tag remove special-resources
        [root@node-01]# pcs tag
         No tags defined
        ```
    2.  以下命令仅从资源 `d-01`{.literal} 中删除资源标签
        `special-resources`{.literal} ：
        ``` literallayout
        [root@node-01]# pcs tag update special-resources remove d-01
        ```
    :::
2.  删除资源。
    ``` literallayout