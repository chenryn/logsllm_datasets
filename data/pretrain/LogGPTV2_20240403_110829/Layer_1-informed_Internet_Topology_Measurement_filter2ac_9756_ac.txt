nations for probing in order to identify POPs within a service
provider, as well as to discover new POPs. Speciﬁcally, we
examine whether it is better to use vantage points (prob-
ing sources) internal or external to an ISP containing the
target POP(s) and destinations either internal or external
to the ISP. Our results show that it is best to choose both
source and destination to be within the ISP that contains
the targeted POP(s), which we hypothesize is largely due to
intradomain versus interdomain route selection. Further, we
observe that co-locating a probing vantage point at an IXP
may be particularly useful in that the VP can eﬀectively
appear as being internal to all ISPs that peer at the IXP.
7. ENHANCING NODE IDENTIFICATION
In this section, we build on the observations and experi-
ments of Section 6 to describe a new targeted probing algo-
rithm called POPsicle. We evaluate POPsicle’s eﬀectiveness
for reinforcing and conﬁrming information available in phys-
ical maps. We deploy POPsicle at an IXP in Chicago, and
describe results of experiments carried out at the IXP.
7.1 POPsicle algorithm
POPsicle is designed to send traceroute-like probes to-
ward a target with a known geographic location based on
information from a physical map. The objective is to de-
tect the target at the network layer. POPsicle is based on
the insight that vantage points co-located with IXPs can
be used to launch probes in many diﬀerent networks, and
that probe-based detection of target physical infrastructure
is most eﬀective when both VP and destination are located
within the same service provider network.
Algorithm 1 shows the key steps of POPsicle. The inputs
to the algorithm are (1) the name and address preﬁx(s) of the
ISP within which physical targets are to be identiﬁed, (2) the
speciﬁc list of targets (e.g., POPs) to be identiﬁed, including
their geographic locations according to physical mapping in-
formation, and (3) a list of VPs and their known geographic
coordinates. The algorithm proceeds by ﬁrst scanning the
target network to identify which hosts are accessible8. This
step is performed to collect a set of hosts that can be used as
probe destinations. The geographic locations of these hosts
are then inferred using DNS location hints. Another option
at this step would be to use IP geolocation algorithms or
tools. However, the accuracy of these techniques is a sub-
ject of ongoing research (e.g., [17]) so we do not use them in
POPsicle, but they could be easily incorporated.
Next, POPsicle iterates through the list of target nodes to
be identiﬁed. For each target, we obtain a list of VPs for ini-
tiating probes in step 4, ordered by proximity in Euclidean
space (using the Haversine formula [1]) to the target. For
each VP, we then select a set of destinations that are also
ordered by proximity to the target. Destinations, compiled
from a variety of sources like Internet Atlas portal and Peer-
ingDB, are IP addresses of infrastructure, like looking glass
8We employ the nmap tool for this step with the command
line nmap -Pn -sn prefix. Even though nmap is considered
bad, we only did a passive scan without causing any trouble
to ISPs
388Figure 2: Number of POPs discovered by diﬀerent probing modalities.
servers, traceroute servers, telecom hotels, and other entities
that may simply respond to probes. From this set, we sub-
select the destinations such that the square of the Euclidean
distance between the VP and destination is greater than the
sum of the squares of the distance between VP and target
and VP and destination. This has the eﬀect of creating a
“measurement cone” centered at the VP and directed toward
the target node (step 6). These destinations are then itera-
tively probed using traceroute. For each completed trace we
determine whether the target has been found using location
hints. If it has, the algorithm completes. If not, we continue
until we have exhausted all VPs and their corresponding
destination sets. Figure 3 depicts the targeting process of
POPsicle.
Algorithm 1: POPsicle algorithm
input: targetN et = target network
input: LT = list of targets to be identiﬁed
input: LS
vp = list of source VPs with known coordinates
// Scan target network to find reachable hosts
1 scanResults = scan(targetN et);
2 LD
3 foreach t in LT do
vp = inferLocations(scanResults);
// Choose destination VPs that are closest to
reachable hosts
4
5
6
7
8
9
10
11
St
vp = geographicallyNearest(t, LS
foreach vp in St
vp do
vp);
// Greedily choose probing destinations within
a cone extending from vp to t
vp = searchCone(vp, t);
Dt
foreach dst in Dt
vp do
send probe from vp to dst;
if t found then
record success for t;
goto step 3;
Figure 3: POPsicle targeting process. VPs within
the ISP that are geographically closest to the target
are selected along with destinations that are geo-
graphically closest to the target and ”on the other
side” of the VP.
POPsicle is based on the notion that target POPs will be
part of routes that connect sources and destinations located
on either side (from a Euclidean perspective) of the target.
We argue that this is likely due to shortest path intra-domain
routing. POPsicle is also currently dependent on location
hints from DNS for both destination identiﬁcation and to
identify when a target has been discovered. IP geolocation
could be used to address the former, while the latter could be
addressed through publicly available data (e.g., PeeringDB)
by associating IP address ranges with POP locations.
7.2 POPsicle Evaluation
We selected 30 looking glass servers from the Atlas
database that satisﬁed the following criteria: (1) the server
is co-located with an IXP in North America, and (2) the
ground truth information of the POPs is available either
from Internet Atlas or in PeeringDB [5]. The vast majority
of providers we selected for analysis are regional providers
since we found them to be poorly represented in Ark prob-
ing results and thus prime candidates for detailed study. In
terms of the number of networks used in this study, the
coverage of our technique can appear limited. We had to
remove several networks from our study due either to the
incompleteness of the physical or network maps, or due to
the lack of DNS locations hints.
The selection of these 30 looking glass servers resulted
in 13 service provider networks that were the focus for our
evaluation. We began by examining Internet2, which we
consider a special case since complete ground truth for all the
layer1, layer2, and layer3 devices is available [2]. POPsicle-
directed probing found 10 out of the 10 POPs in Internet2
that house layer 3 infrastructure.
We initiated probing on the remaining set of 12 ISPs using
POPsicle-directed probing to verify and map the POPs for
 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1AbilineAbovenetBandconB.T.N.CRL.CwixDataXchangeE.L.EpochGoodnetHighwindsH.E.INSIXCIntegraLayer42NapnetNoelNSFnetOxfordPeer1RedBestelRedIrisShentelSpiralightUSSignalFraction of POPs  discovered relative  to Internet AtlasInternet Service Provider (ISP)VPin,tinVPin,toutVPout,tin389• For Towardex, POPsicle found an extra POP in Boston
which is conﬁrmed in PeeringDB (Boston IX).
In addition to mapping POPs of the 13 ISPs described
above, we evaluated POPsicle’s eﬀectiveness for mapping
and conﬁrming additional infrastructural nodes that have
known/published physical locations. This test set included
data centers, DNS root servers, NTP servers (both stra-
tum 1 and stratum 2), and IXPs. Table 4 shows results of
these experiments, as well as summary results of the POP-
identiﬁcation experiments. We can see from the table that
POPsicle is able to identify network-layer locations for this
larger and much more diverse set of devices.
In total, it
ﬁnds 1.04 times more POPs, 1.54 times more data centers,
9 times more DNS servers, over 11 times more NTP servers,
and 1.48 times more IXPs9 (in North America) compared
to nodes found by standard end-to-end layer 3 probing cam-
paigns. Overall, POPsicle reveals and conﬁrms 2.4 times
more physical node locations versus standard probe-based
topology measurement methods.
7.3 IXP deployment of POPsicle
We observe in Section 6 that a VP co-located with an IXP
can provide what appears to be an internal probing source
for any ISP that peers at the IXP as depicted in Figure 4.
From such a vantage point, a tool implementing the POPsi-
cle algorithm could be employed to map and identify POPs
and other nodes of interest in any one of the adjacent ISPs.
Table 3: Summary results of network POPs iden-
tiﬁed with POPsicle, Atlas, Ark, and Rocketfuel
for POPsicle deployed at publicly accessible looking
glass servers.
POPsicle Atlas Ark Rocketfuel
Abovenet
BellCanada
Centauri
Cyberverse
Data102
HopOne
HE
Inerail
Internet2
Interserver.net
Steadfast.net
Towardex
XO
13
34
7
2
2
4
23
3
10
2
3
7
42
22
48
14
2
2
4
24
25
10
2
3
8
80
13
30
3
2
2
4
23
3
10
1
3
6
42
13
29
—
—
—
—
8
—
10
—
—
—
39
each of those networks. Table 3 shows the results from all of
our probing experiments. Overall, for 8 out of 13 ISPs, we
see all or almost all of the POPs identiﬁed in physical maps.
These 8 ISPs include Cyberverse, data102, HopOne, Hur-
ricane Electric (HE), Inerail, Interserver.net, Steadfast.net,
and Towardex. For several ISPs, we also observed addi-
tional POP locations which we veriﬁed using PeeringDB.
We also compare with the most recently available measure-
ments from Rocketfuel. Although the Rocketfuel measure-
ments are not especially recent, we note that it is likely that
POP deployments are fairly stable. We observe, for exam-
ple, that POPsicle and Rocketfuel identify the same number
of POPs for 3 out of 5 ISPs. Lastly, we note that Rocketfuel
data were unavailable for 8 ISPs.
In the following we discuss various special cases and ob-
servations related to results for each ISP:
• For BellCanada, POPsicle identiﬁed signiﬁcantly more
POPs than were revealed in Ark data. Additional lo-
cations identiﬁed were in New York, Palo Alto, Seat-
tle, and Woodbridge. We conﬁrmed these locations with
Equinix Palo Alto, NYIIX, and SIX exchange points in
PeeringDB. The Woodbridge location could not be con-
ﬁrmed in PeeringDB.
• For Centauri Communications, POPsicle identiﬁed four
additional POP locations in comparison with Ark, in-
cluding Palo Alto, San Francisco, San Jose, and Sunny-
vale. These locations were all conﬁrmed by SFIX and
SFMIX in PeeringDB.
• For cyberverse, data102, Steadfast.net, Inerail, Inter-
net2, Hurricane Electric and XO Communications POP-
sicle identiﬁed the same POPs as were observed using
the Ark data.
• For HopOne, POPsicle found one extra POP location
in Palo Alto (which is not seen in either Ark or physi-
cal topology maps), which was conﬁrmed in PeeringDB.
POPsicle did not observe a node in Mclean, VA, which
was seen in the Ark data.
• For Interserver.net, POPsicle identiﬁed one additional
POP location in New Jersey which is conﬁrmed by
Equinix New York IX.
Figure 4: “Multiplexing” an IXP-based measure-
ment server across multiple ISPs using POPsicle.
To substantiate this idea, we deployed a tool implement-
ing POPsicle on a server at the Equinix Chicago Internet
Exchange with the help of network operators, and we con-
ducted a week-long measurement study. We chose 10 ISPs
that peer at Equinix Chicago for targeted probing. These
ISPs were chosen because (1) there was information avail-
able in PeeringDB, or we had operator contacts who could
verify our inferences, and (2) location hints were available
in DNS for IP addresses within the ISP. Unfortunately, the
vast majority of ISPs that peer at Equinix Chicago do not
have publicly available ground truth information and/or lo-
cation hints available via DNS thus we could not include
9We expect our result to coincide with [10] if we have access
to more vantage points.
390Table 4: Summary of results from mapping infrastructural nodes.
POPs (for 13 ISPs) Datacenters DNS Servers NTP Servers
IXPs
Total locations
POPsicle
Ark
Atlas
POPsicle compared to Atlas
Ark compared to Atlas
Improvement
149
143
244
61.07%
54.60%
1.04x
487
315
641
75.98%
49.14%
1.54x
9
1
13
69.23%
7.69%
9x
627
55
827
75.82%
6.65%
11.40x
37
25
65
56.92%
38.46%
1.48x
1309
539
1790
73.13%
30.11%
2.42x
them in this initial study. Also, we note that the ISPs we
considered in our POPsicle deployment have, unfortunately,
little overlap with the ISPs we consider in Section 5 (and
which appear in Table 3) due to our requirement that we
have ground truth and location hint information available
— only Hurricane Electric and HopOne are in common.
Table 5 shows the results of our IXP-based POPsicle de-
ployment. We observe from the table that POPsicle ﬁnds
all nodes for 8 out of the 10 ISPs (as compared with the
Atlas physical topology data).
In the Ark measurements,
6 out of 10 ISPs are fully mapped. For the two ISPs the
POPsicle is not able to fully map, a very likely possibility
is that the unobserved POPs are invisible to layer3 probes
due to conﬁgured router policies [31], thus the results we
show may be the best that can be achieved through active
probing. Overall, our results suggest that POPsicle could
be deployed more broadly to accurately map (to the extent
possible) ISPs for which we do not have ground truth.
Special Cases. (1) The number of POPs found for HE
in Table 3 is 23 but in Table 5 the number of POPs found for
HE is 24. That is, POPsicle deployed at Equinix Chicago
saw an extra node in Calgary, Canada (YYC) which is veri-
ﬁed with Datahive IX. One possible implication of this result
is that such probe-based measurements are biased towards
the vantage points selected.
(2) For 2 ISPs (PaeTec and
Atlantic Metro) some POPs were not visible to our probes,
which we intend to investigate further in future work. There
is anecdotal evidence that ISPs typically do not expose cer-
tain locations to traceroute probes (or any access methods
from outside) even when layer 3 services are available at that
particular location due to security reasons [31].
Case Study: Cogent. In [21], Ferguson et al. present
an analysis of Cogent Communication’s network based on
using reverse DNS records, as well as location-based naming
hints. We used the dataset made public by these authors
to evaluate, compare and validate POPsicle’s probe-based
measurement of Cogent’s network. We processed the DNS
names from Ferguson et al.’s dataset using the modiﬁed ver-
sion of location inference technique developed by Chabarek
et al. [12] and identiﬁed 187 POP locations. We then used
POPsicle deployed at the Equinix Chicago IXP to target
routers within Cogent’s network, and it identiﬁed 173 POPs.
In Appendix A, we see that there are 186 POP locations
identiﬁed in the Atlas physical topology; it is likely that the
additional POP identiﬁed in the Ferguson et al. dataset is
a more recent deployment than was found in Atlas. Also in
the table of Appendix A, we see that there are 122 POPs
identiﬁed through the Ark probes. Lastly, we note that in
the most recent Rocketfuel data, there are only 45 POP lo-
cations identiﬁed. Altogether, these results show that POP-
sicle’s probing technique is very eﬀective for discovering lo-
cations of physical infrastructure like POPs, is much better
than existing probe-based techniques, and nearly as good as
exhaustive use of reverse DNS records.
Table 5: Summary results of network POPs identi-
ﬁed with POPsicle deployed at the Equinix Chicago
IXP.
ISP Name
BTN
HE
Internet2
PaeTec
Nexicom
HopOne
Indiana Gigapop
MOREnet
Atlantic Metro
Steadfast.net
POPsicle Atlas Ark
28
23
10
54
9
3
2
4
8
3
29
24
10
54
9
3
2
4
9
3
29
24
10
61
9
3