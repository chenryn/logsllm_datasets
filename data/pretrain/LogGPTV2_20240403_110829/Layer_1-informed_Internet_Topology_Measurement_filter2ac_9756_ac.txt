### Nations for Probing to Identify and Discover POPs within a Service Provider

To identify Points of Presence (POPs) within a service provider and to discover new POPs, we investigate the effectiveness of using vantage points (probing sources) that are either internal or external to the Internet Service Provider (ISP) containing the target POP(s). We also consider destinations that are either internal or external to the ISP. Our findings indicate that it is most effective to select both the source and destination within the ISP that contains the targeted POP(s). This result is likely due to the differences in intradomain and interdomain route selection. Additionally, we observe that placing a probing vantage point at an Internet Exchange Point (IXP) can be particularly useful, as the vantage point can effectively appear as being internal to all ISPs that peer at the IXP.

### 7. Enhancing Node Identification

In this section, we build on the observations and experiments from Section 6 to describe a new targeted probing algorithm called POPsicle. We evaluate POPsicle's effectiveness in reinforcing and confirming information available in physical maps. We deploy POPsicle at an IXP in Chicago and present the results of our experiments.

#### 7.1 POPsicle Algorithm

POPsicle is designed to send traceroute-like probes toward a target with a known geographic location based on information from a physical map. The objective is to detect the target at the network layer. The key insight behind POPsicle is that vantage points co-located with IXPs can be used to launch probes into many different networks, and that probe-based detection of target physical infrastructure is most effective when both the vantage point and the destination are located within the same service provider network.

**Algorithm 1: POPsicle Algorithm**

**Inputs:**
1. The name and address prefix(s) of the ISP within which physical targets are to be identified.
2. A specific list of targets (e.g., POPs) to be identified, including their geographic locations according to physical mapping information.
3. A list of vantage points (VPs) and their known geographic coordinates.

**Steps:**
1. **Scan Target Network:** Scan the target network to identify accessible hosts. This step collects a set of hosts that can be used as probe destinations. The geographic locations of these hosts are inferred using DNS location hints. IP geolocation algorithms or tools could be used, but their accuracy is still a subject of ongoing research, so they are not used in POPsicle.
2. **Iterate Through Targets:** For each target, obtain a list of VPs ordered by proximity in Euclidean space (using the Haversine formula) to the target.
3. **Select Destinations:** For each VP, select a set of destinations that are also ordered by proximity to the target. These destinations are compiled from various sources such as the Internet Atlas portal and PeeringDB.
4. **Measurement Cone:** Sub-select destinations such that the square of the Euclidean distance between the VP and destination is greater than the sum of the squares of the distances between the VP and the target and the VP and the destination. This creates a "measurement cone" centered at the VP and directed toward the target node.
5. **Probe Iteratively:** Iteratively probe the selected destinations using traceroute. For each completed trace, determine whether the target has been found using location hints. If the target is found, the algorithm completes; otherwise, continue until all VPs and their corresponding destination sets are exhausted.

**Algorithm 1: POPsicle Algorithm**

```plaintext
input: targetNet = target network
input: LT = list of targets to be identified
input: Lsvp = list of source VPs with known coordinates

// Scan target network to find reachable hosts
1. scanResults = scan(targetNet);
2. LD = inferLocations(scanResults);

foreach t in LT do
    // Choose destination VPs that are closest to the target
    3. Stvp = geographicallyNearest(t, Lsvp);
    foreach vp in Stvp do
        // Greedily choose probing destinations within a cone extending from vp to t
        4. Dtvp = searchCone(vp, t);
        foreach dst in Dtvp do
            5. send probe from vp to dst;
            if t found then
                6. record success for t;
                goto step 3;
```

POPsicle is based on the notion that target POPs will be part of routes that connect sources and destinations located on either side (from a Euclidean perspective) of the target. This is likely due to shortest path intra-domain routing. POPsicle currently depends on location hints from DNS for both destination identification and to confirm when a target has been discovered. IP geolocation and publicly available data (e.g., PeeringDB) could be used to enhance these steps.

#### 7.2 POPsicle Evaluation

We selected 30 looking glass servers from the Atlas database that met the following criteria:
1. The server is co-located with an IXP in North America.
2. Ground truth information of the POPs is available from either the Internet Atlas or PeeringDB.

Most of the providers we selected for analysis are regional providers, as they are poorly represented in Ark probing results and are prime candidates for detailed study. In terms of the number of networks used in this study, the coverage of our technique may appear limited. Several networks were removed from our study due to incomplete physical or network maps or a lack of DNS location hints.

The selection of these 30 looking glass servers resulted in 13 service provider networks that were the focus of our evaluation. We began by examining Internet2, a special case where complete ground truth for all layer 1, layer 2, and layer 3 devices is available. POPsicle-directed probing found all 10 POPs in Internet2 that house layer 3 infrastructure.

We then initiated probing on the remaining set of 12 ISPs using POPsicle-directed probing to verify and map the POPs for each of those networks. Table 3 shows the results from all of our probing experiments. Overall, for 8 out of 13 ISPs, we see all or almost all of the POPs identified in physical maps. These 8 ISPs include Cyberverse, Data102, HopOne, Hurricane Electric (HE), Inerail, Interserver.net, Steadfast.net, and Towardex. For several ISPs, we also observed additional POP locations, which we verified using PeeringDB.

We also compared our results with the most recently available measurements from Rocketfuel. Although the Rocketfuel measurements are not recent, we note that POP deployments are fairly stable. For example, POPsicle and Rocketfuel identified the same number of POPs for 3 out of 5 ISPs. Lastly, Rocketfuel data were unavailable for 8 ISPs.

**Special Cases and Observations:**
- **BellCanada:** POPsicle identified significantly more POPs than were revealed in Ark data. Additional locations identified were in New York, Palo Alto, Seattle, and Woodbridge. These locations were confirmed with Equinix Palo Alto, NYIIX, and SIX exchange points in PeeringDB, except for the Woodbridge location.
- **Centauri Communications:** POPsicle identified four additional POP locations in comparison with Ark, including Palo Alto, San Francisco, San Jose, and Sunnyvale. These locations were all confirmed by SFIX and SFMIX in PeeringDB.
- **Cyberverse, Data102, Steadfast.net, Inerail, Internet2, Hurricane Electric, and XO Communications:** POPsicle identified the same POPs as observed using the Ark data.
- **HopOne:** POPsicle found one extra POP location in Palo Alto (not seen in either Ark or physical topology maps), which was confirmed in PeeringDB. However, POPsicle did not observe a node in McLean, VA, which was seen in the Ark data.
- **Interserver.net:** POPsicle identified one additional POP location in New Jersey, confirmed by Equinix New York IX.

#### 7.3 IXP Deployment of POPsicle

We observed in Section 6 that a VP co-located with an IXP can provide what appears to be an internal probing source for any ISP that peers at the IXP. From such a vantage point, a tool implementing the POPsicle algorithm could be employed to map and identify POPs and other nodes of interest in any adjacent ISP.

To substantiate this idea, we deployed a tool implementing POPsicle on a server at the Equinix Chicago Internet Exchange with the help of network operators and conducted a week-long measurement study. We chose 10 ISPs that peer at Equinix Chicago for targeted probing. These ISPs were chosen because (1) there was information available in PeeringDB, or we had operator contacts who could verify our inferences, and (2) location hints were available in DNS for IP addresses within the ISP. Unfortunately, the vast majority of ISPs that peer at Equinix Chicago do not have publicly available ground truth information and/or location hints available via DNS, so we could not include them in this initial study.

Table 5 shows the results of our IXP-based POPsicle deployment. We observe from the table that POPsicle finds all nodes for 8 out of the 10 ISPs (as compared with the Atlas physical topology data). In the Ark measurements, 6 out of 10 ISPs are fully mapped. For the two ISPs where POPsicle is not able to fully map, a very likely possibility is that the unobserved POPs are invisible to layer 3 probes due to configured router policies. Overall, our results suggest that POPsicle could be deployed more broadly to accurately map (to the extent possible) ISPs for which we do not have ground truth.

**Special Cases:**
1. **Hurricane Electric (HE):** The number of POPs found for HE in Table 3 is 23, but in Table 5, the number of POPs found for HE is 24. POPsicle deployed at Equinix Chicago saw an extra node in Calgary, Canada (YYC), which is verified with Datahive IX. This suggests that probe-based measurements are biased towards the vantage points selected.
2. **PaeTec and Atlantic Metro:** Some POPs were not visible to our probes, which we intend to investigate further in future work. There is anecdotal evidence that ISPs typically do not expose certain locations to traceroute probes (or any access methods from outside) even when layer 3 services are available at that particular location due to security reasons.

**Case Study: Cogent**

In [21], Ferguson et al. present an analysis of Cogent Communication’s network based on using reverse DNS records and location-based naming hints. We used the dataset made public by these authors to evaluate, compare, and validate POPsicle’s probe-based measurement of Cogent’s network. We processed the DNS names from Ferguson et al.’s dataset using a modified version of the location inference technique developed by Chabarek et al. [12] and identified 187 POP locations. We then used POPsicle deployed at the Equinix Chicago IXP to target routers within Cogent’s network, and it identified 173 POPs.

In Appendix A, we see that there are 186 POP locations identified in the Atlas physical topology; it is likely that the additional POP identified in the Ferguson et al. dataset is a more recent deployment than was found in Atlas. Also, in the table of Appendix A, we see that there are 122 POPs identified through the Ark probes. Lastly, we note that in the most recent Rocketfuel data, there are only 45 POP locations identified. Altogether, these results show that POPsicle’s probing technique is very effective for discovering locations of physical infrastructure like POPs, is much better than existing probe-based techniques, and nearly as good as exhaustive use of reverse DNS records.

**Table 5: Summary Results of Network POPs Identified with POPsicle Deployed at the Equinix Chicago IXP**

| ISP Name | POPsicle | Atlas | Ark |
|----------|----------|-------|-----|
| BTN      | 28       | 29    | 29  |
| HE       | 23       | 24    | 24  |
| Internet2| 10       | 10    | 10  |
| PaeTec   | 54       | 54    | 61  |
| Nexicom  | 9        | 9     | 9   |
| HopOne   | 3        | 3     | 3   |
| Indiana Gigapop | 2 | 2 | 2 |
| MOREnet  | 4        | 4     | 4   |
| Atlantic Metro | 8 | 9 | 9 |
| Steadfast.net | 3 | 3 | 3 |

**Table 4: Summary of Results from Mapping Infrastructural Nodes**

| Type of Node | Total Locations | POPsicle | Ark | Atlas | Improvement (POPsicle vs. Atlas) | Improvement (Ark vs. Atlas) |
|--------------|-----------------|----------|-----|-------|----------------------------------|------------------------------|
| POPs (for 13 ISPs) | 149 | 143 | 244 | 61.07% | 54.60% | 1.04x |
| Datacenters | 487 | 315 | 641 | 75.98% | 49.14% | 1.54x |
| DNS Servers | 9 | 1 | 13 | 69.23% | 7.69% | 9x |
| NTP Servers | 627 | 55 | 827 | 75.82% | 6.65% | 11.40x |
| IXPs | 37 | 25 | 65 | 56.92% | 38.46% | 1.48x |
| Total | 1309 | 539 | 1790 | 73.13% | 30.11% | 2.42x |