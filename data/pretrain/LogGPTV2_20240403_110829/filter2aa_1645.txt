与业务融合的漏洞检测之路
关于我
• 乌云白帽子 猪猪侠
• 8年信息安全从业经历
• 信息安全领域爱好者
• 安全测试
• 数据挖掘
• 微博：@ringzero
DEMO 1
WEB2.0服务端
复杂的用户认证机制，传统漏
洞扫描器无法与业务功能交互
http://v.youku.com/v_show/id_XODc0NjYyODg0.html
DEMO 2
移动客户端
功能封闭，导致漏洞扫描器无
法与业务功能交互
http://v.youku.com/v_show/id_XODc0Njc1MzI0.html
旁路传感器还原数据分析出攻击行为
使用业务系统时，从数据流量中检测业务流程漏洞
什么是业务安全？
“连接彼此，交换信息。”
保护信息在交换过程中的完整性、可用性、保密性。
什么是业务安全？
Information
Technology
IT
操作系统、数据库、 应用代码指的是技术(基础设施)
信息指的是业务数据，也就是我们要真正要保护的对象
怎么找业务系统的漏洞？
•
跟随业务系统内的每一个功能
智能检测缺陷
规则太多
不能通用
错误率高
人机互动
怎么找业务系统的漏洞？
•
跟随业务系统内的每一个功能
•
代码设计(关系型数据库)
增删改查（CURD）
• 创建（Create）# 发布一条微博
• 删除（Delete）# 删除一条微博
• 更新（Update）# 修改用户资料
• 读取（Retrieve）# 查看好友们最新发布的微博
一些案例
案列1：有排序的地方
案列2：有分页的地方
http://apps.2012.qq.com/guess/list-tid--stat-4?sort=de
sc,if%28%281=2%29,1,%28select/**/1/**/from/**/INFORMAT
ION_SCHEMA.TABLES%29%29%20asc
案列3：有搜索的地方
案列4：有分类的地方
案列5：有选择的地方
http://life.tenpay.com/cgi-bin/mobile/mobile_order_que
ry.cgi?g_tk=1233447418&tid=01001004&showtry=1& amp;chg
mobile=13800138000&uin=uid&startdate=20130108& enddate
=20130408&state=0/**/union/**/select/**/1,2,3,4,5,6,7,
user%28%29,9,0%23 
怎么找业务系统的漏洞？
•
跟随业务系统内的每一个功能
•
代码设计(关系型数据库)
•
每个业务都有自身的业务流程
增删改查（CURD）
• 创建（Create）# 发布一条微博
• 删除（Delete）# 删除一条微博
• 更新（Update）# 修改用户资料
• 读取（Retrieve）# 查看好友们最新发布的微博
安全是一个整体，保证安全不在于强大的地方有多强大，
而在于真正薄弱的地方在哪里
DNS安全--万网(这不是XSS)
最安全的DNS
找回密码设计--业务流程安全
How?
• 基于开源
Python,Mysql,Linux,Phantomjs,
Redis,Celery,Nmap,Php
• 脚本套脚本
• 队列管理：拥塞、出错
• 分布式框架
模块关系
Redis
（数据存储、进程通信）
Worker1
WorkerN
Worker2
监控后台
下达命令
执行命令
报告状态
查看状态
数据代理
放入任务
处理任务
查询、优先
错误处理
异步检测队列工作原理
任务队列
流量分析
控制台
（producer）
Worker1
Worker2
WorkeN
。。。
push
pop
客户端
业务数据流
数据代理
（Proxy）
•
数据代理采集流量
•
控制台分析数据，向队列压入任务
•
Redis队列系统等待Worker取任务
•
Worker执行任务，并返回结果存储到数据库
任务队列的Redis存储设计
md5
Task
(json)
任务md5索引
Hash
任务队列1 （List）
故障队列1 （List）
任务队列2
故障队列2
Push
任务队列和错误队列一一对应，方便管理
Worker模型
扫描线程1
扫描线程 2
扫描线程 N
扫描线程管理器
指令线程（Command thread）
Celery
配置中心
扫描队列
扫描队列
调度
错误队列
状态
报告
worker
Redis
任务
报告
报告
pull
push
worker指令线程：工作机状态报告：线程工作调度；杀死/取消进程
Task可报告工作进程的pid，监控后台可下指令杀死卡死的进程
Worker管理
Worker任务状态管理
Worker线程池
简单不简单
• 摩尔定律带来灾难
• 生产力释放
• 社区更加开放
• 漏洞规则库
• 330个漏洞利用脚本
Apache Geronimo Default Administrative Credentials.script Pending
Apache httpOnly Cookie Disclosure.script
Pending
Apache mod negotiation Filename Bruteforcing.script
Pending
Apache Proxy CONNECT Enabled.script
Pending
Apache Roller Audit.script
Pending
Apache Running As Proxy.script
Pending
Apache Server Information.script
Pending
Apache Solr Exposed.script
Pending
Apache Unfiltered Expect Header Injection.script
Pending
Apache XSS via Malformed Method.script
Pending
ASP NET Error Message.script
Pending
ASP NET Forms Authentication Bypass.script
Pending
ASP NET Oracle Padding.script
Pending
Clickjacking X Frame Options.script
Pending
ClientAccessPolicy XML.script
Pending
ColdFusion Audit.script
Pending
ColdFusion User Agent XSS.script
Pending
ColdFusion v8 File Upload.script
Pending
ColdFusion v9 Solr Exposed.script
Pending
Crossdomain XML.script
Pending
Django Admin Weak Password.script
Pending
elasticsearch Audit.script
Pending
elmah Information Disclosure.script
Pending
Error Page Path Disclosure.script
Pending
Fantastico Filelist.script
Pending
Flask Debug Mode.script
Pending
Frontpage authors pwd.script
Pending
Frontpage Extensions Enabled.script
Pending
Frontpage Information.script
Pending
GlassFish Audit.script
Pending
Heartbleed Bug.script
Pending
Horde IMP Webmail Exploit.script
Pending
IIS Global Asa.script
Pending
IIS Internal IP Address.script
Pending
IIS service cnf.script
Pending
IIS Unicode Directory Traversal.script
Pending
IIS v5 NTML Basic Auth Bypass.script
Pending
Ioncube Loader Wizard.script
Pending
JBoss Audit.script
Pending
Jenkins Audit.script
Pending
lighttpd v1434 Sql Injection.script
Pending
Lotus Domino crlf xss.script
Pending
MongoDB Audit.script
Pending
Movable Type 4 RCE.script
Pending
ms12-050.script
Pending
Nginx PHP FastCGI Code Execution File Upload.script Pending
Options Server Method.script
Pending
Oracle Reports Audit.script
Pending
Flask Debug Mode.script
Pending
Frontpage authors pwd.script
Pending
@jannock & 
乌云所有白帽子们的无私分享
欢迎加入白帽子阵营，一起为互联网解决安全问题。
Thanks for everyone