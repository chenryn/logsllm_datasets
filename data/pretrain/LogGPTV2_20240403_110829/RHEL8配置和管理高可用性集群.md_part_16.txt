|                       |        |         | 有剩余时间，Pacemaker |
|                       |        |         | 会自动重试操          |
|                       |        |         | 作。使用这个选项更改  |
|                       |        |         | Pacemaker             |
|                       |        |         | 在放弃前              |
|                       |        |         | 重试重启动作的次数。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_                | 字符串 | off     | 要运行的              |
| off_action`{.literal} |        |         | 一个替代命令，而不是  |
|                       |        |         | `off`{.l              |
|                       |        |         | iteral}。有些设备不支 |
|                       |        |         | 持标准命令或者可能需  |
|                       |        |         | 要提供额外的命令。使  |
|                       |        |         | 用这个选项指定可执行  |
|                       |        |         | off                   |
|                       |        |         | 操作的替代的、特      |
|                       |        |         | 定于具体设备的命令。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_o               | time   | 60s     | 指定用于 off          |
| ff_timeout`{.literal} |        |         | 操                    |
|                       |        |         | 作的替代超时，而不是  |
|                       |        |         | `st                   |
|                       |        |         | onith-timeout`{.liter |
|                       |        |         | al}。和一般的设备相比 |
|                       |        |         | ，有些设备需要更长或  |
|                       |        |         | 更短的时间完成。使用  |
|                       |        |         | 此选项指定替代的、off |
|                       |        |         | 操作使用的、特        |
|                       |        |         | 定于设备的超时时间。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_o               | 整数   | 2       | 在超时时间内重试 off  |
| ff_retries`{.literal} |        |         | 命令的次数上限。      |
|                       |        |         | 有些设备不支持多个连  |
|                       |        |         | 接。如果设备忙碌了处  |
|                       |        |         | 理另一个任务，操作可  |
|                       |        |         | 能会失败，因此如果还  |
|                       |        |         | 有剩余时间，Pacemaker |
|                       |        |         | 会自动重试操          |
|                       |        |         | 作。使用这个选项更改  |
|                       |        |         | Pacemaker             |
|                       |        |         | 在放                  |
|                       |        |         | 弃前重试操作的次数。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_l               | 字符串 | list    | 要运行的              |
| ist_action`{.literal} |        |         | 一个替代命令，而不是  |
|                       |        |         | `list`{.l             |
|                       |        |         | iteral}。有些设备不支 |
|                       |        |         | 持标准命令或者可能需  |
|                       |        |         | 要提供额外的命令。使  |
|                       |        |         | 用这个选项指定可执行  |
|                       |        |         | list                  |
|                       |        |         | 操作的替代的、特      |
|                       |        |         | 定于具体设备的命令。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_li              | time   | 60s     | 指定 list             |
| st_timeout`{.literal} |        |         | 操作                  |
|                       |        |         | 使用的特代的超时时间  |
|                       |        |         | 。和一般的设备相比，  |
|                       |        |         | 有些设备需要更长或更  |
|                       |        |         | 短的时间完成。使用此  |
|                       |        |         | 选项指定替代的、list  |
|                       |        |         | 操作使用的、特        |
|                       |        |         | 定于设备的超时时间。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_li              | 整数   | 2       | 在超时时间内重试      |
| st_retries`{.literal} |        |         | `list`{.literal}      |
|                       |        |         | 命令的次数上限。      |
|                       |        |         | 有些设备不支持多个连  |
|                       |        |         | 接。如果设备忙碌了处  |
|                       |        |         | 理另一个任务，操作可  |
|                       |        |         | 能会失败，因此如果还  |
|                       |        |         | 有剩余时间，Pacemaker |
|                       |        |         | 会自动重试操          |
|                       |        |         | 作。使用这个选项更改  |
|                       |        |         | Pacemaker 在放弃前    |
|                       |        |         | list 操作的次数。     |
+-----------------------+--------+---------+-----------------------+
| `pcmk_moni            | 字符串 | monitor | 要运行的              |
| tor_action`{.literal} |        |         | 一个替代命令，而不是  |
|                       |        |         | `monitor`{.l          |
|                       |        |         | iteral}。有些设备不支 |
|                       |        |         | 持标准命令或者可能需  |
|                       |        |         | 要提供额外的命令。使  |
|                       |        |         | 用这个选项指定可执行  |
|                       |        |         | monitor               |
|                       |        |         | 操作的替代的、特      |
|                       |        |         | 定于具体设备的命令。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_monit           | time   | 60s     | 指定用于 monitor      |
| or_timeout`{.literal} |        |         | 操                    |
|                       |        |         | 作的替代超时，而不是  |
|                       |        |         | `stonith              |
|                       |        |         | -timeout`{.literal}。 |
|                       |        |         | 和一般的设备相比，有  |
|                       |        |         | 些设备需要更长或更短  |
|                       |        |         | 的时间完成。使用此选  |
|                       |        |         | 项指定替代的、monitor |
|                       |        |         | 操作使用的、特        |
|                       |        |         | 定于设备的超时时间。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_monit           | 整数   | 2       | 在超时时间内重试      |
| or_retries`{.literal} |        |         | `monitor`{.literal}   |
|                       |        |         | 命令的次数上限。      |
|                       |        |         | 有些设备不支持多个连  |
|                       |        |         | 接。如果设备忙碌了处  |
|                       |        |         | 理另一个任务，操作可  |
|                       |        |         | 能会失败，因此如果还  |
|                       |        |         | 有剩余时间，Pacemaker |
|                       |        |         | 会自动重试操          |
|                       |        |         | 作。使用这个选项更改  |
|                       |        |         | Pacemaker 在放弃前    |
|                       |        |         | monitor 操作的次数。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_sta             | 字符串 | status  | 要运行的              |
| tus_action`{.literal} |        |         | 一个替代命令，而不是  |
|                       |        |         | `status`{.l           |
|                       |        |         | iteral}。有些设备不支 |
|                       |        |         | 持标准命令或者可能需  |
|                       |        |         | 要提供额外的命令。使  |
|                       |        |         | 用这个选项指定可执行  |
|                       |        |         | status                |
|                       |        |         | 操作的替代的、特      |
|                       |        |         | 定于具体设备的命令。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_stat            | time   | 60s     | 指定用于 status       |
| us_timeout`{.literal} |        |         | 操                    |
|                       |        |         | 作的替代超时，而不是  |
|                       |        |         | `stonith              |
|                       |        |         | -timeout`{.literal}。 |
|                       |        |         | 和一般的设备相比，有  |
|                       |        |         | 些设备需要更长或更短  |
|                       |        |         | 的时间完成。使用此选  |
|                       |        |         | 项指定替代的、status  |
|                       |        |         | 操作使用的、特        |
|                       |        |         | 定于设备的超时时间。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_stat            | 整数   | 2       | 在超时时间内重试      |
| us_retries`{.literal} |        |         | status                |
|                       |        |         | 命令的次数上限。      |
|                       |        |         | 有些设备不支持多个连  |
|                       |        |         | 接。如果设备忙碌了处  |
|                       |        |         | 理另一个任务，操作可  |
|                       |        |         | 能会失败，因此如果还  |
|                       |        |         | 有剩余时间，Pacemaker |
|                       |        |         | 会自动重试操          |
|                       |        |         | 作。使用这个选项更改  |
|                       |        |         | Pacemaker 在放弃前    |
|                       |        |         | status 操作的次数。   |
+-----------------------+--------+---------+-----------------------+
| `pcmk_                | time   | 0s      | 为 stonith            |
| delay_base`{.literal} |        |         | 操作启用基础延迟并指  |
|                       |        |         | 定一个基本延迟值。在  |
|                       |        |         | 带有偶数节点的集群中  |
|                       |        |         | ，配置延迟有助于避免  |
|                       |        |         | 在平等分割时同时出现  |
|                       |        |         | 节点相互隔离的问题。  |
|                       |        |         | 当同一个隔离设备被所  |
|                       |        |         | 有节点使用时，使用一  |
|                       |        |         | 个随机延迟会很有用，  |
|                       |        |         | 而如果每个节点都使用  |
|                       |        |         | 单独的设备时，使用不  |
|                       |        |         | 同的静态延迟会很有用  |
|                       |        |         | 。总的延迟是根据一个  |
|                       |        |         | 随机延迟值再加上这个  |
|                       |        |         | 静态延迟而获得的，这  |
|                       |        |         | 样可以保持总和低于最  |
|                       |        |         | 大延迟。如果您设置了  |
|                       |        |         | `pcmk_delay_base`{    |
|                       |        |         | .literal}，但没有设置 |
|                       |        |         | `pcmk_delay_m         |
|                       |        |         | ax`{.literal}，则延迟 |
|                       |        |         | 没有随机组件，它将是  |
|                       |        |         | `pcmk_                |
|                       |        |         | delay_base`{.literal} |
|                       |        |         | 的值。                |
|                       |        |         |                       |
|                       |        |         | 有些隔离代理使用      |
|                       |        |         | \"delay\"             |
|                       |        |         | 参数，它独立于使用    |
|                       |        |         | `pc                   |
|                       |        |         | mk_delay_*`{.literal} |
|                       |        |         | 属性                  |
|                       |        |         | 配置的延迟。如果同时  |
|                       |        |         | 配置了这两个延迟，它  |
|                       |        |         | 们会被相加。因此，一  |
|                       |        |         | 般不要同时使用它们。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk                 | time   | 0s      | 为 stonith            |
| _delay_max`{.literal} |        |         | 动作启用随机延迟并    |
|                       |        |         | 指定最大随机延迟。在  |
|                       |        |         | 带有偶数节点的集群中  |
|                       |        |         | ，配置延迟有助于避免  |
|                       |        |         | 在平等分割时同时出现  |
|                       |        |         | 节点相互隔离的问题。  |
|                       |        |         | 当同一个隔离设备被所  |
|                       |        |         | 有节点使用时，使用一  |
|                       |        |         | 个随机延迟会很有用，  |
|                       |        |         | 而如果每个节点都使用  |
|                       |        |         | 单独的设备时，使用不  |
|                       |        |         | 同的静态延迟会很有用  |
|                       |        |         | 。总的延迟是根据一个  |
|                       |        |         | 随机延迟值再加上这个  |
|                       |        |         | 静态延迟而获得的，这  |
|                       |        |         | 样可以保持总和低于最  |
|                       |        |         | 大延迟。如果您设置了  |
|                       |        |         | `pcmk_delay_max`{     |
|                       |        |         | .literal}，但没有设置 |
|                       |        |         | `pcmk_de              |
|                       |        |         | lay_base`{.literal}， |
|                       |        |         | 则延迟没有静态组件。  |
|                       |        |         |                       |
|                       |        |         | 有些隔离代理使用      |
|                       |        |         | \"delay\"             |
|                       |        |         | 参数，它独立于使用    |
|                       |        |         | `pc                   |
|                       |        |         | mk_delay_*`{.literal} |
|                       |        |         | 属性                  |
|                       |        |         | 配置的延迟。如果同时  |
|                       |        |         | 配置了这两个延迟，它  |
|                       |        |         | 们会被相加。因此，一  |
|                       |        |         | 般不要同时使用它们。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_ac              | 整数   | 1       | 在这个设备上可并行    |
| tion_limit`{.literal} |        |         | 执行的最大操作数量。  |
|                       |        |         | 需要首先配置集群属性  |
|                       |        |         | `并发-fe              |
|                       |        |         | ncing=true`{.literal} |
|                       |        |         | （这是 RHEL 8.1       |
|                       |        |         | 及更新                |
|                       |        |         | 版本的默认值）。值为  |
|                       |        |         | -1 代表没有限制。     |
+-----------------------+--------+---------+-----------------------+
| `pcmk                 | 字符串 | on      | 仅                    |
| _on_action`{.literal} |        |         | 供高级使用：要运行的  |
|                       |        |         | 一个替代命令，而不是  |
|                       |        |         | `on`{                 |
|                       |        |         | .literal}。有些设备不 |
|                       |        |         | 支持标准命令或者可能  |
|                       |        |         | 需要提供额外的命令。  |
|                       |        |         | 使用它来指定一个执行  |
|                       |        |         | `on`{.literal}        |
|                       |        |         | 操作的替代的          |
|                       |        |         | 、特定于设备的命令。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_                | time   | 60s     | 仅                    |
| on_timeout`{.literal} |        |         | 供高级使用：指定用于  |
|                       |        |         | `on`{.literal}        |
|                       |        |         | 操作的替代超时，      |
|                       |        |         | 而不是                |
|                       |        |         | `stonith-t            |
|                       |        |         | imeout`{.literal}。和 |
|                       |        |         | 一般的设备相比，有些  |
|                       |        |         | 设备需要更长或更短的  |
|                       |        |         | 时间完成。使用它来为  |
|                       |        |         | `on`{.literal}        |
|                       |        |         | 操作指定一个替代的    |
|                       |        |         | 、特定于设备的超时。  |
+-----------------------+--------+---------+-----------------------+
| `pcmk_                | 整数   | 2       | 仅供高级              |
| on_retries`{.literal} |        |         | 使用：超时时间内重试  |
|                       |        |         | `on`{.literal}        |
|                       |        |         | 命令的次数上限。有些  |
|                       |        |         | 设备不支持多个连接。  |
|                       |        |         | 如果设备忙碌了处理另  |
|                       |        |         | 一个任务，操作可能会  |
|                       |        |         | `失败`{               |
|                       |        |         | .literal}，因此如果还 |
|                       |        |         | 有剩余时间，Pacemaker |
|                       |        |         | 会自动重试操作        |
|                       |        |         | 。使用这个选项来更改  |
|                       |        |         | Pacemaker             |
|                       |        |         | 在放弃前重试          |
|                       |        |         | `on`{.literal}        |
|                       |        |         | 操作的次数。          |
+-----------------------+--------+---------+-----------------------+
:::
:::
除了您可以为独立隔离设备设置的属性外，您还可以设置用来决定隔离行为的集群属性，如下表所述。
::: table
[]{#assembly_configuring-fencing-configuring-and-managing-high-availability-clusters.html#tb-clusterfenceprops-HAAR}
**表 9.3. 确定隔离行为的集群属性**
::: table-contents
+----------------------+----------------------+----------------------+
| 选项                 | 默认值               | 描述                 |
+:=====================+:=====================+:=====================+
| `stonit              | true                 | 表示失败的节点       |
| h-enabled`{.literal} |                      | 以及带有资源无法停止 |
|                      |                      | 的节点应该被隔离。保 |
|                      |                      | 护数据需要将此设置为 |
|                      |                      | `true`{.literal}。   |
|                      |                      |                      |
|                      |                      | 如果为               |
|                      |                      | `true`{.literal}     |
|                      |                      | 或未设置，集         |
|                      |                      | 群将拒绝启动资源，除 |
|                      |                      | 非也配置了一个或多个 |
|                      |                      | STONITH 资源。       |
|                      |                      |                      |
|                      |                      | 红帽只支持将此值设为 |
|                      |                      | `true`{.literal}     |
|                      |                      | 的集群。             |
+----------------------+----------------------+----------------------+
| `stoni               | reboot               | 发送到 STONITH       |
| th-action`{.literal} |                      | 设                   |
|                      |                      | 备的操作。允许的值： |
|                      |                      | `reboot`{.liter      |
|                      |                      | al}、`off`{.literal} |
|                      |                      | 。也允许使用值       |
|                      |                      | `p                   |
|                      |                      | oweroff`{.literal}， |
|                      |                      | 但只适用于旧的设备。 |
+----------------------+----------------------+----------------------+
| `stonit              | 60s                  | 等待 STONITH         |
| h-timeout`{.literal} |                      | 操作完成的时间。     |
+----------------------+----------------------+----------------------+
| `stonith-max         | 10                   | 在集群不             |
| -attempts`{.literal} |                      | 再立即重新尝试之前， |
|                      |                      | 隔离可以失败的次数。 |
+----------------------+----------------------+----------------------+
| `stonith-watchdo     |                      | 在认为某个节点被硬件 |
| g-timeout`{.literal} |                      | wathcdog             |
|                      |                      | 终                   |
|                      |                      | 止前等待的最长时间。 |
|                      |                      | 建议将此值设置为硬件 |
|                      |                      | watchdog             |
|                      |                      | 超时                 |
|                      |                      | 值的两倍。只有在使用 |
|                      |                      | watchdog-only SBD    |
|                      |                      | 配置进行隔           |
|                      |                      | 离时才需要这个选项。 |
+----------------------+----------------------+----------------------+
| `concurren           | true（RHEL 8.1       | 允                   |
| t-fencing`{.literal} | 及更新的版本）       | 许并行执行隔离操作。 |