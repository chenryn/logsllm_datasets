##### 逻辑缺陷的导致的任意用户注册、登录、找回密码漏洞
因为这方面漏洞一旦出现基本都是高危，所以挖掘的时候
类似的思路我就不细说了,freebuf上有任意用户密码重置的系列文章,类似漏洞思路其实相差不大:
#### 常见的信息泄露漏洞
敏感信息泄露的范围很广，我认为一般就是两大类，
  * 因为配置错误或者管理不当导致的企业内部信息泄露。
  * 因为逻辑缺陷导致的用户资料泄露(遍历)。
##### github导致的信息泄露
  * P牛知识星球里分享的github搜索关键词:
  * github子域名监控项目:
  * 常见的泄露内容:
    * 员工内部邮箱、登录账号、密码。
    * 企业的一些内部系统域名、ip泄露。
    * 企业网站的工程代码、网站源码泄露，可以通过员工邮箱关键词查找，要注意日期，好几年的大概率不收了。
乌云上有一些案例，可以看一看。
##### 配置错误导致的信息泄露
包含的类型很多，最重要的是有一份足够强大的字典和一个好用的扫描器。
我在实际进行探测的时候，对于大批量的域名来说，更喜欢先用一份精简的小字典先进行快速扫描
比如:
  * 备份文件的小字典
  * springboot泄露的小字典
  * 网站后台的小字典
比较出名的扫描器我们常见的dirsearch、dirmap，dirbuster等等。
可视化的比如TEST404系列、御剑扫描器使用体验也不错。
​ 注:信息泄露中比较常见的swagger-ui服务泄露，可能直接提交会忽略或者低危，别忘了进一步测试泄露的接口功能。
##### 越权导致的信息泄露
​
很多时候越权来来去去都是更改一个参数的问题,更多的时候还是要细心的一个一个测业务功能，注意观察和测试操作参数和对象参数，操作参数一般是增删改查对应特定业务的敏感操作、对象参数一般是用户或者物品等。
推荐几个burp插件:
  * 未授权检测： 
  * 敏感参数提取：
  * 信息提取：
插件的作用基本还是帮助我们快速定位敏感参数，实际测试还是需要我们一个包一个包仔细的分析程序逻辑。
**常见的一些越权情况:**
  * 基于用户ID的越权
  * 基于功能对象ID的越权
  * 基于上传对象ID的越权
  * 基于未授权访问的越权
  * 基于功能地址的越权
  * 基于接口身份的越权
### 其他的OWASPTop10漏洞
#### CSRF漏洞
​
CSRF漏洞在挖掘中最重要的是说明危害，比较容易扯皮，一般来说涉及用户资料、财产、权限的CSRF漏洞大概率会收，一般来说最高就是中危。捡捡垃圾洞还是可以的。
**常见的漏洞点**
1、修改个人资料、邮箱、密码、头像
2、发表文章
3、添加、删除评论
4、添加、修改、删除收货地址
5、添加管理员
**(1) GET型**
GET类型的CSRF利用非常简单，只需要一个HTTP请求，所以，一般会这样利用：
  *     
( **2) POST型**
​
POST请求中没有token参数，然后请求也没有验证referer信息。这种是存在CSRF情况最多的一种。这种漏洞的检测方法也很简单，网页操作某功能，抓包后，如果发现没有token等参数，然后就将referer信息设置为空，再次发包请求，如果请求成功了，就说明这里有CSRF漏洞。
poc(可以用burp自己生成的）:
POST请求数据为json，当服务器没有严格校验content-type类型时，POC为：
##### 3\. Flash 型
Flash CSRF通常是由于Crossdomain.xml文件配置不当造成的，利用方法是使用swf来发起跨站请求伪造。
利用条件：
1、目标站点下必须存在crossdomain.xml文件。
2、crossdomain.xml中的配置允许其他域进行跨域请求。
**bypass小技巧**
  * 删除csrf token
  * 置空csrf token
  * 修改请求方法，如POST方法变GET请求
  * 使用与token相同长度的任意字符串替换token，例如尝试更改一个字符，看看或发生什么
  * 使用固定token
  * token字段改成 token[]=
#### 任意文件上传漏洞
​
这个洞遇到的也比较多，一般来说是后端没有限制上传文件的类型。但是上传的脚本文件也不会解析。也就没有办法getshell。(很多SRC对于上传到cdn云服务器的任意文件上传是忽略的)。
  * 上传含有xss代码的html文件，造成存储型xss(如果上传到了cdn服务器之类的大概率忽略)。
  * 上传恶意文件进行钓鱼
  * 尝试在上传的文件名前加../进行目录穿越。
  * 可以结合其他漏洞比如CORS漏洞扩大危害。
​ 文件上传的常见的绕过姿势应该也挺熟悉的了。。，实际测试的时候发现在进行申请企业、个人认证的时候，上传文件处常常有这个问题。
#### XSS漏洞
老熟人了，不多说了，常见的姿势大家应该都知道。分享一个我学XSS的文章:  
Broken5师傅的xsspayload:
    xss
    M
##### bypass姿势
#### 威胁情报的提交
这块我也没有经验，给大家分享两篇文章吧。。。信息收集到了还是可以试试提交的
可以试一试加一加各种羊毛群，反手撸一手羊毛群的羊毛。
### 对于挖掘高危、严重级别漏洞的一些思考
​ 因为一直以来挖到高危、严重的数量寥寥无几，基本上就是一直在捡一些中低危漏洞，这段时间也看了很多牛叉的漏洞报告，想聊一聊我的思考。
##### 1.自动化信息收集的能力
这里说的信息收集更多的是如何利用已有的工具进行快速自动化的收集和整理，既要做到速度快，还要做到全面收集不遗漏信息，很多时候这个过程本身就是在发现漏洞。
​ 这些工作应该在我们前期信息收集的阶段就应该全面的完成，所以如何快速化的进行全面的信息收集是我们需要思考和不断实践的。
##### 2.打漏洞组合拳的能力
​ SRC对于漏洞评级主要是看你漏洞可以造成的危害，所以当挖到一些低危漏洞时，可以先不急着提交，找一找有没有其他可以利用的点打漏洞组合拳。
##### 3.绕waf的能力
​ 这个能力挺欠缺的。挖洞的过程基本遇到waf就溜了，尤其是一些大厂的waf，绕其他waf就是直接嫖一些其他的师傅的思路。
##### 4.细心和耐心和一些运气
心细挖天下，再加上一些运气，可能高危严重就到手了。
#### 总结
​
挖SRC需要有一个好心态，国内SRC生态并不是很好，SRC感觉更多的提供了一个相对安全的测试保障，所以更需要抱着一种学习的心态去挖，将我们学习的到的知识灵活运用，发现新的问题。不要想我今晚一定要挖到多少漏洞，要拿到多少奖金，不然可能会被忽略三连打崩心态。