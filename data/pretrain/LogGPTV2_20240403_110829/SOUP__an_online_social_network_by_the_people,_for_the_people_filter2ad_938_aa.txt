title:SOUP: an online social network by the people, for the people
author:David Koll and
Jun Li and
Xiaoming Fu
SOUP: An Online Social Network By The People, For The People
David Koll
University of Goettingen
Goettingen, Germany
koll@cs.uni-
goettingen.de
Jun Li
University of Oregon
Eugene, OR, USA
PI:EMAIL
Xiaoming Fu
University of Goettingen
Goettingen, Germany
PI:EMAIL
ABSTRACT
Concomitant with the tremendous growth of online social
networking (OSN) platforms are increasing concerns from
users about their privacy and the protection of their data.
As user data management is usually centralized, OSN pro-
viders nowadays have the unprecedented privilege to access
every user’s private data, which makes large-scale privacy
leakage at a single site possible. One way to address this
issue is to decentralize user data management and replicate
user data at individual end-user machines across the OSN.
However, such an approach must address new challenges.
In particular, it must achieve high availability of the data
of every user with minimal replication overhead and with-
out assuming any permanent online storage. At the same
time, it needs to provide mechanisms for encrypting user
data, controlling access to the data, and synchronizing the
replicas. Moreover, it has to scale with large social networks
and be resilient and adaptive in handling both high churn
of regular participants and attacks from malicious users.
While recent works in this direction only show limited
success, we introduce a new, decentralized OSN called the
Self-Organized Universe of People (SOUP). SOUP employs
a scalable, robust and secure mirror selection design and
can eﬀectively distribute and manage encrypted user data
replicas throughout the OSN. An extensive evaluation by
simulation and a real-world deployment show that SOUP
addresses all aforementioned challenges.
Categories and Subject Descriptors
C.2.4 [Computer Systems Organization]: Computer
Communication Networks—Distributed Systems
Keywords
Online social networks; OSN; decentralized OSN; privacy
1.
INTRODUCTION
As online social network (OSN) providers deal with tre-
mendous amounts of user information, they can obtain a
deep insight into their users’ personal interests, opinions,
and social relationships, which raises severe privacy and se-
curity concerns. Facebook, for example, has long reached
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
Middleware’14, December 08–12, 2014, Bordeaux, France.
Copyright 2014 ACM 978-1-4503-2785-5/14/12...$15.00.
http://dx.doi.org/10.1145/2663165.2663324.
the one billion user mark and already controls the personal
data of approximately one sixth of the world’s population.
Yet, the hunt for user data is not over and users are of-
ten helpless when faced with changes, as demonstrated by
Facebook’s recent acquisitions of the Instagram and Whats-
App user bases with multi-billion-dollar agreements. More-
over, centralized control often results in the misuse of user
data [1]. For example, LinkedIn leaked millions of its users’
passwords [2], and Facebook passed sensitive shopping in-
formation of users to the public without their consent [3].
While it remains to be seen whether OSN providers would
give up a major source of income and grant comprehensive
security and privacy means to their users (e.g., encryption
of data), decentralized OSNs (DOSNs) are becoming more
promising for better user data security and privacy. Instead
of relying on a central data repository, a DOSN can allow
users to regain control over their data.
Recently, researchers have proposed a wide range of DOSN
approaches, which considerably diﬀer in how the central
data repository is substituted and how the user controls her
data [4–13]. However, each of these systems suﬀers from
multiple shortcomings, including (i) limited success in pro-
viding high data availability [7, 9, 11–13]; (ii) discrimination
of users based on their dependency on other nodes [6, 7, 11–
13]; (iii) dependency on powerful nodes [4–7]; (iv) high over-
head [10–13]; (v) low adaptivity to OSN dynamics [4, 6–13];
(vi) susceptibility to adversaries [4, 6, 7, 9–13]; (vii) a lack
of data encryption [4,7,9]; (viii) non-consideration of mobile
users [6,7,9–13]; and (ix) technical feasibility and economical
deployability issues [5, 6, 8, 13].
Motivated by the absence of a full-ﬂedged DOSN, we in-
troduce a diﬀerent approach called the Self-Organized Uni-
verse of People (SOUP). In addressing the drawbacks of ex-
isting works, we make the following contributions:
• To achieve high data availability, we propose a new, generic
approach to storing user data in a DOSN. While every
user can store her data at her own machine, she can rely
on a scalable, robust and secure mirror selection design to
select other OSN participants as mirrors for her data and
make the data highly available, even if she herself may
not be always online. SOUP is able to synchronize the
replicas stored at the mirrors and keep them up-to-date
on possibly multiple devices of a user. It does not rely on
permanently available or altruistically provided storage,
although it can make an opportunistic use of such resources
as they become available.
• To provide a robust OSN, SOUP ensures that regardless of
participants’ social relations or online probabilities, data
for all participants is highly available. Such a property is
sure that only eligible users can access encrypted data.
essential not only to not discriminate any user, but also to
enable access to all data of interest at any time.
• To limit the overhead, SOUP ensures that there exist only
as many replicas as required, and stabilizes the mirror set
so that replicas are not frequently moved.
• To achieve reliability and resiliency, SOUP is designed to
be adaptive to the dynamics often seen in a DOSN and it
can quickly respond to changes in the system and continue
to provide high performance. Moreover, its operation is
not signiﬁcantly aﬀected by malicious OSN users, as it
can tolerate up to half of the identities in the OSN being
controlled by an adversary.
• To grant data privacy, eﬀective encryption mechanisms en-
• To support mobile users, SOUP is designed mobile-friendly
as it minimizes data transfer and resource consumption on
mobile nodes. Moreover, even with a high churning rate
of mobile nodes, SOUP is stable and performs well.
• To demonstrate its feasibility, we run extensive simula-
tion experiments with three diﬀerent real-world datasets
to show that compared with related work, SOUP does pro-
vide superior performance in all aforementioned features.
• Finally, to show its deployability we implement SOUP on
both desktop and mobile platforms and investigate its per-
formance in a real-world deployment.
The remainder of this paper is structured as follows. Af-
ter conducting a comprehensive review of related work in
Sec. 2, we describe the design of SOUP in Sec. 3, and de-
vote the entire Sec. 4 to a critical component of SOUP, the
mirror selection. We present an extensive, simulation-based
evaluation of SOUP in Sec. 5. We then describe our im-
plementation in Sec. 6, and evaluate SOUP based on an
experimental deployment in Sec. 7. Finally, we discuss open
issues in Sec. 8 and conclude our paper in Sec. 9.
2. RELATED WORK
In the course of decentralizing OSNs, classical P2P or dis-
tributed data storage approaches (e.g.,
[14–17]) might of-
fer a solution. However, these approaches are generally de-
signed for supporting traditional decentralized applications
such as ﬁle sharing, which are often characterized by long
durations of user online time, typically spanning from mul-
tiple hours up to days. Orthogonal to such applications,
users’ online patterns in social networks show high activity
peaks with large gaps of oﬄine time [18, 19]. Additionally,
content in social networking platforms is often uploaded and
accessed from mobile devices that may be disconnected most
of the time. Further, there exist inherent relations between
the OSN users, which can imply storage incentives among
them and discourage freeriding. Intuitively, a user will pre-
fer to store the data of a friend to that of a stranger. Fur-
thermore, in contrast to traditional P2P systems, tit-for-tat
strategies are not as desirable for OSNs. Users rather need
the OSN as a whole to be robust, with each user’s data acces-
sible at any given time. Otherwise, even highly contributing
users may ﬁnd data of interest unavailable.
With these reasons in mind, researchers have suggested a
wide range of solutions that are speciﬁcally tailored to decen-
tralize OSNs: The ﬁrst approach is to distribute data con-
trol and storage to a limited number of permanently online
storage locations [4–7]. The storage might either be altru-
istically provided (as e.g., in Diaspora [4] or SuperNova [7])
or based on economic incentives such as user payments (as
e.g., in Vis-a-Vis [5] or Conﬁdant [6]). However, altruistic
provisioning, usually from a limited set of volunteers, is un-
likely to meet the demand of a large-scale social network
with as many as several hundred million users. At the same
time, user payments will most likely prevent a large-scale
transition from current centralized OSNs, which do not im-
pose fees on their users. The dependency on both altruistic
and paid servers is also a concern, as data loss can occur
when such servers become disengaged abruptly. Further, in
Diaspora and SuperNova, since users are not able to encrypt
their data, full privacy of data is not achieved; the danger
of misusing user data is shifted from one central provider to
several quasi-central providers.
The second approach is to ask each user to provide a per-
manently available storage space for their own encrypted
proﬁle [8]. This approach does provide high data availability
and low overhead, but it requires all users to be technically
able to provide and conﬁgure their own permanently avail-
able data storage, which is impractical. The issue might be
mitigated by incentivizing storage and conﬁguration provi-
ders, which however results in monetary costs for the user.
The third approach is to let nodes cooperate and provide
temporarily available storage to each other [9–13]. SOUP
is designed to follow this rationale as well. With the mu-
tual cooperation of nodes and ﬂexible data storage loca-
tions, users can be independent of dedicated servers and
their drawbacks. Additionally, as every participant is con-
tributing resources, the OSN can operate without additional
costs for every user. The major challenge of this approach,
however, is to provide high data availability to the users.
PeerSoN [9] introduces an optimized node selection al-
gorithm, and nodes with mutual agreements store data for
each other. The main issue of this approach is its inabil-
ity to construct a robust OSN. Users with an online time
of less than eight hours a day achieve less than 90% avail-
ability for their data. Since online time in OSNs is power-
law distributed [18, 19], the majority of users are unable to
make their data highly available, and even highly contribut-
ing users may not be able to ﬁnd data they want.
Cachet [10] replicates the data of users within a distributed
hash table (DHT). While this approach ensures availability,
it also increases the communication overhead. As OSNs usu-
ally experience high churn rates [19], data often has to be
transferred from departing nodes to other DHT members.
This is particularly the case for mobile nodes. Also, Cachet
does not minimize the number of replicas, which increases
the overhead to keep all replicas of a user’s data up-to-date.
Safebook [11], MyZone [12] and ProofBook [13] mirror
each user’s data at a subset of their direct friends. Unfortu-
nately, a user thus depends on her social contacts for data
storage, as she needs enough suitable friends that qualify as
a mirror. This is diﬃcult for many users in OSNs who main-
tain few social links [20]. As a result, such systems typically
achieve low data availability rates (e.g., 90% in [11, 12]).
Finally, none of the above schemes explicitly consider mo-
bile (i.e., smartphone) devices, which have become one ma-
jor way of using OSNs. Approaches that do not require
every node to contribute resources (e.g., Diaspora) can tol-
erate such devices. However, the majority of solutions re-
quire mobile nodes to perform as regular nodes, which can be
ineﬃcient due to the limited capabilities of mobile devices.
We summarize the features oﬀered by existing DOSNs in
Table 1. As discussed before, none of SOUP’s competitors
Table 1: DOSN Approaches Summarized.
can provide all the features required for the operation of a
full-ﬂedged DOSN. In fact, each solution has deﬁciencies in
multiple categories, whereas SOUP supports all features.
3. SOUP
We now present the design of the Self-Organized Universe
of People (SOUP), and show how the system provides the
critical features necessary to operate a competitive DOSN.
3.1 SOUP Overview
In SOUP, every participating node (or user) maintains its
own data, and selects a small set of other nodes as mir-