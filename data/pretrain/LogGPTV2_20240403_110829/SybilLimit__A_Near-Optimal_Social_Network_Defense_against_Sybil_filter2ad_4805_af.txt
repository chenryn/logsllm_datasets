### O(log n) Asymptotic Behavior and Small w Values

The asymptotic behavior of O(log n) is a key characteristic. It is not necessary to strictly adhere to this, as our primary objective is to confirm that relatively small values of \( w \) are sufficient for SybilLimit to function effectively.

For the Friendster and LiveJournal social networks, we set \( w = 10 \) (refer to Table 2). Our experiments indicate that random routes do not achieve adequate mixing for SybilLimit with \( w \) values much smaller than 10 (e.g., 5) in these networks. For DBLP, we use \( w = 15 \). As expected, DBLP exhibits poorer mixing properties compared to the other social networks. Our results will demonstrate that these small \( w \) values are sufficient to enable adequate mixing in large-scale social networks (with 10^5 to around 10^6 nodes) for SybilLimit to perform well.

### Social Network Properties and Mixing

It is well-known that social networks often contain groups or communities where intra-group edges are much denser than inter-group edges [3, 15, 23, 37]. For instance, LiveJournal has explicitly defined communities for users to join, while DBLP inherently forms research communities. Despite these groupings, our results show that the sparse inter-group edges in these real-world social networks provide sufficient mixing properties, somewhat counter-intuitively.

### Simulation Results: SybilLimit's End Guarantees

We use the \( w \) values from Table 2 to simulate SybilLimit and determine the number of sybil nodes accepted. Our simulator does not implement the estimation process for \( r \); instead, we directly use the \( r \) values from Table 2, which are derived based on the value of \( m \) and the Birthday Paradox. In all our experiments, we use \( h = 4 \) as the universal constant. We have observed that \( h = 2.5 \) is generally sufficient, while excessively large \( h \) (e.g., 10) can weaken the guarantees (though not asymptotically). We always simulate the adversary's optimal strategy (i.e., the worst-case scenario for SybilLimit).

Figures 8 to 11 present the number of sybil nodes accepted by a randomly chosen verifier \( V \) (as a fraction of the number of honest nodes \( n \)) in each social network. We present the results as fractions to facilitate comparison across social networks with different \( n \). The experiments were repeated with multiple verifiers, yielding consistent results. For all cases, we experiment with \( g \) up to the point where the number of sybil nodes accepted reaches \( n \). The figures further break down the sybil nodes accepted into those accepted by \( V \)'s non-escaping tails versus those accepted by \( V \)'s escaping tails. The first component is bounded by the intersection condition, while the second is bounded by the balance condition. In all figures, the number of sybil nodes accepted grows roughly linearly with \( g \). The asymptotic guarantee of SybilLimit is \( O(\log n) \) sybil nodes accepted per attack edge.

Figures 8 to 11 show that this \( O(\log n) \) asymptotic term translates to between 10 (in Friendster, LiveJournal, and Kleinberg) and 20 (in DBLP). As a concrete numerical example, in the million-node Kleinberg graph, SybilGuard [42] uses random routes of length \( l = 1906 \), accepting \( l \) sybil nodes per attack edge, which translates to 1906 sybil nodes accepted per attack edge. Thus, numerically in Kleinberg, SybilLimit reduces the number of sybil nodes accepted by nearly 200-fold over SybilGuard.

### Perspective on Attack Edges

From another perspective, the three data sets (Friendster, LiveJournal, and Kleinberg) all have approximately one million nodes. To reach \( n \) sybil nodes, the number of attack edges needs to be around 100,000. This means the adversary must establish 100,000 social trust relationships with honest users in the system. Under Kleinberg, SybilGuard will accept \( n \) sybil nodes once \( g \) reaches around 500 (since \( l = 1906 \)). Simple experiments show that with \( g \geq 15,000 \), the escaping probability of the random routes in SybilGuard exceeds 0.5, rendering it ineffective. For DBLP, which is much smaller (with 100,000 nodes), the number of sybil nodes accepted will reach \( n \) when \( g \) is around 5,000.

### Experiments on Smaller Networks

We also conducted experiments on much smaller social networks with only 100 nodes, extracted from our social network data sets. Our observations indicate that the number of sybil nodes accepted per attack edge remains around 10 to 20.

### Conclusion

This paper presents SybilLimit, a near-optimal defense against sybil attacks using social networks. Compared to our previous SybilGuard protocol [42], which accepted \( O(\sqrt{n \log n}) \) sybil nodes per attack edge, SybilLimit accepts only \( O(\log n) \) sybil nodes per attack edge. Furthermore, SybilLimit provides this guarantee even when the number of attack edges grows to \( o(n / \log n) \). The improvement in SybilLimit stems from several novel techniques: leveraging multiple independent instances of the random route protocol to perform many short random routes, exploiting intersections on edges instead of nodes, using the balance condition to handle escaping tails of the verifier, and employing a novel benchmarking technique to safely estimate \( r \). Our results on real-world social networks confirm their fast mixing property, validating the fundamental assumption behind SybilLimit and SybilGuard. Future work will involve implementing SybilLimit in real-world applications to demonstrate its utility.

### Acknowledgments

We thank Jelle Roozenburg for allowing us to use his Friendster data set and Rita Wouhaybi for her LiveJournal data set. We also thank Chris Lesniewski-Laas and the anonymous reviewers for their valuable comments. This work is partially supported by NUS grants R-252-050-284-101 and R-252-050-284-133.

### References

[1] I. Abraham and D. Malkhi. Probabilistic quorums for dynamic systems. In DISC, 2003.
...
[42] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman. SybilGuard: Defending against sybil attacks via social networks. In ACM SIGCOMM, 2006.