title:A New Blind ECDSA Scheme for Bitcoin Transaction Anonymity
author:Xun Yi and
Kwok-Yan Lam
A New Blind ECDSA Scheme for Bitcoin Transaction Anonymity
Xun Yi
RMIT University
Melbourne, Australia
PI:EMAIL
Kwok-Yan Lam
Nanyang Technological University
Singapore
PI:EMAIL
ABSTRACT
In this paper, we consider a scenario where a bitcoin liquidity
provider sells bitcoins to clients. When a client pays for a bitcoin
online, the provider is able to link the client’s payment information
to the bitcoin sold to that client. To address the privacy concerns of
clients, we require that the bitcoin provider cannot tell the relation-
ship between the real identities of clients and the sold bitcoins in
the blockchain. This requirement can be effectively achieved by us-
ing blind signatures. However, existing blind signature schemes are
incompatible with the Elliptic Curve Digital Signature Algorithm
(ECDSA) which is used by most of the existing bitcoin protocol, thus
cannot be applied directly in Bitcoin. In this paper, we propose a
new blind signature scheme that allows generating a blind signature
compatible with the standard ECDSA. Afterwards, we make use
of the new scheme to achieve bitcoin transaction anonymity. The
new scheme is built on a variant of the Paillier cryptosystem and
its homomorphic properties. As long as the modified Paillier cryp-
tosystem is semantically secure, the new blind signature scheme
has blindness and unforgeability.
CCS CONCEPTS
• Security and privacy → Digital signatures.
KEYWORDS
Blind signature, ECDSA, Paillier cryptosystem, Bitcoin, Blockchain
ACM Reference Format:
Xun Yi and Kwok-Yan Lam. 2019. A New Blind ECDSA Scheme for Bitcoin
Transaction Anonymity. In ACM Asia Conference on Computer and Com-
munications Security(AsiaCCS ’19), July 9–12, 2019, Auckland, New Zealand.
ACM, New York, NY, USA, 8 pages. https://doi.org/10.1145/3321705.3329816
1 INTRODUCTION
Bitcoin is a peer-to-peer payment system and digital currency intro-
duced as open source software by pseudonymous developer Satoshi
Nakamoto [14]. In January 2009, the bitcoin network came into
existence with the release of the first bitcoin client and the issuance
of the first bitcoins. Bitcoin is a cryptocurrency, so-called because
it uses cryptography to control the creation and transfer of money.
Bitcoin is the first decentralized digital currency, as the system
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-6752-3/19/07...$15.00
https://doi.org/10.1145/3321705.3329816
works without a central bank or single administrator. In this paper,
we use the term “Bitcoin” to refer to the technology and “bitcoin”
to denote the currency unit of the cryptocurrency.
In Bitcoin, the transactions take place between users directly,
without an intermediary. Users send payments, such as payer A
sends m bitcoins to payee B, by broadcasting digitally signed mes-
sages to a peer-to-peer network of communicating nodes. Partici-
pating nodes, known as miners, verify, timestamp and group newly
broadcasted transactions into a new block of the chain, which is
then broadcasted to the network and verified by payee nodes. Cur-
rently, Elliptic Curve Digital Signature Algorithm (ECDSA) is used
by Bitcoin implementations.
An increasing number of online merchants now offer the op-
tion to pay using bitcoins. One of the great promises of Bitcoin is
anonymity: the transactions are recorded and made public, but they
are linked only with an electronic address instead of real-world
identity. Hence, whatever you buy with your bitcoins, the purchase
cannot be traced specifically to you.
Generally speaking, the aim of anonymization is to prevent at-
tackers from discovering the relationship between bitcoin wallet
addresses and the real user identity information through the Bit-
coin network and the blockchain. The anonymity feature of bitcoin
transactions is by no means perfect.
Let us consider a scenario where a bitcoin liquidity provider
sells bitcoins to its clients. If a client pays to the provider for the
bitcoin online, e.g., through bank transfer, credit card, PayPal, or
even Ali pay, the provider is able to link the client’s payment in-
formation to the electronic address of the transacted bitcoin. To
address this privacy concern of the clients, it is desirable for the
bitcoin transactions to be performed by using blind signatures.
Blind signature, as introduced by Chaum [3], a form of digital
signature in which the content of a message is disguised (blinded)
before it is signed. The resulting blind signature can be publicly
verified against the original, unblinded message in the manner of a
regular digital signature. A typical application of blind signature is
digital cash.
One of the key requirements for digital cash is anonymity: when
you take money out of the bank, the bank gives you the cash without
knowing what you intend to buy, and when you spend money, the
merchant has no idea who you are. In contrast, when you buy
something with a credit card online, you have to tell the merchant
who you are, and also you have to tell the payment service provider
who you are making a purchase from. The potential for intrusion
of privacy is immense.
For the purposes of this construction, let us assume that all
coins are worth a dollar in real-world currency denomination. To
withdraw a dollar from her account, Alice generates a coin C, applies
a public hash function H, and masks the result by encrypting it
with Ea. The bank signs Ea(H(C)) with Sb and debits Alice’s bank
Session 8: Blockchain SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand613AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
Xun Yi and Kwok-Yan Lam
account. Alice then computes Da(Sb(Ea(H(C)))) to strip away her
encryption, leaving her with a signature Sb(H(C)), and checks to
make sure Vb(Sb(H(C))) = H(C). To spend her coin, Alice then
gives the signature Sb(H(C)) and C to a merchant. The merchant
then computes Vb(Sb(H(C))) and compares that to H(C) in order
to make sure that the coin was actually signed by the bank. Then
the merchant sends Sb(H(C)) and C to the bank, which checks the
validity of the signature, transfer fund to the merchant and puts C
on a list of coins that have already been spent.
This scheme preserves Alice’s anonymity because blind signature
prevents the bank from linking the blinded message Ea(H(C)) it
signs to a later un-blinded version C that it may be called upon to
verify.
The same kind of idea can be used to address the privacy concern
of clients when a bitcoin provider sells bitcoins to clients. The
privacy requirement is that the bitcoin provider cannot tell the
relationship between the real identities of clients and the transacted
bitcoins in the blockchain. For example, assume that the provider
has sold bitcoins to n different clients (where n ≥ 2) who have
broadcast the transacted bitcoins in the blockchain. We require that
the success probability for the provider to guess the real identity of
a transacted bitcoin from the provider is not more than 1/n.
Our Contribution. In Bitcoin, the Elliptic Curve Digital Signa-
ture Algorithm (ECDSA) is used to verify bitcoin transactions1.
ECDSA offers a variant of the Digital Signature Algorithm (DSA)
[5] using the elliptic curve cryptography. Existing blind signature
schemes lack compatibility with the standard ECDSA and thus can-
not be used directly. This is mainly because existing blind signature
schemes require different signature verification from that in the
standard ECDSA. In this paper, we propose a new blind signature
scheme that allows generating a blind signature which is compati-
ble with the standard ECDSA in the Bitcoin protocol. Afterwards,
we make use of the new scheme to protect the privacy of clients in
Bitcoin.
The basic idea is: when a client buys a bitcoin from the bitcoin
provider, he pays the provider online at first and then runs a blind
signature scheme with the provider to obtain a blind ECDSA sig-
nature of the provider on a bitcoin transaction in the same way as
digital cash. The bitcoin transaction is created by the client so that
the provider does not know the address of the client in the trans-
action when the provider signs the transaction. Later, the client
broadcasts the transaction to the network. The blind signature in
the transaction can be verified by everyone with the ECDSA. Since
the blind signature is used, the bitcoin provider cannot tell the rela-
tionship between the real identities of clients and the transacted
bitcoins in the blockchain.
The new blind signature is based on a variant of the Paillier
cryptosystem. We formally prove that the modified Paillier cryp-
tosystem has semantic security. Due to this, the blind signature
scheme has blindness and unforgeability.
2 RELATED WORK
In 1982, Chaum [3] gave the first blind signature scheme based on
RSA [18] and later used the blind signature scheme to construct
the first electronic cash scheme in [4].
1https://bitcoin.org/en/glossary/signature
Assume that a user, called a recipient, wishes a signer to sign a
message m without knowing the content of the message and the
RSA public and private key pair of the signer is ((n, e), d), where n
is the product of two large distinct primes p and q and
ed = 1(mod (p − 1)(q − 1)).
Chaum’s blind signature scheme [3] can be described as follows:
• Step 1. The recipient randomly chooses an integer r from
Z∗
n and computes
m
′ = r em (mod n)
and sends the blinded message m′ to the signer.
• Step 2. Like the RSA signature scheme, the signer signs the
blinded message m′ with his private key d by computing
′ = m
′d (mod n)
s
and returns s′ to the recipient.
• Step 3. The recipient unblinds the signed message to get the
signature of the signer on the message by computing
s = r
−1m
′d = r
−1s
′ = r
−1r edmd = md (mod n)
−1(r em)d
= r
where r ed = r(mod n) according to the Euler’s theorem.
In 1989, Schnorr [19] proposed a signature scheme based on the
intractability of certain discrete logarithm problems. The Schnorr
signature scheme can also be turned into a blind signature scheme
[16, 17].
In the Schnorr signature scheme, there are two large primes p
and q, such that q|p − 1, an element д of order q modulo p, and
a secure cryptographic hash function H(·). The signer generates
a pair of public and private keys (y, x), such that y = дx(mod p),
where the signer randomly chooses x from Z∗
q. When a recipient
wishes the signer to blindly sign a message m, Schnorr’s blind
signature scheme can be described as follows:
• Step 1. The signer randomly chooses an integer k from Z∗
q
and computes
r = дk (mod p)
and sends the commitment r to the recipient.
• Step 2. The recipient randomly chooses two integers α, β
from Z∗
q and computes
′ = rд
r
−β(mod p),
−αy
′ = H(m, r
′),
′ + β(mod q).
e
e = e
Then the recipient sends e to the signer.
• Step 3. The signer computes
s = k − ex(mod q)
and sends s to the recipient.
• Step 4 The recipient computes s′ = s − α. In the end, the
recipient obtains a valid Schnorr signature (e′, s′), such that
′ = H(m, дs′
ye′(mod p)).
e
Session 8: Blockchain SecurityAsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand614A New Blind ECDSA Scheme for Bitcoin Transaction Anonymity
AsiaCCS ’19, July 9–12, 2019, Auckland, New Zealand
Bitcoin uses the Elliptic Curve Digital Signature Algorithm (ECDSA)
to verify transactions. The above blind signature schemes are not
based on elliptic curve cryptography and therefore cannot be used
in Bitcoin. The ECDSA is composed of four algorithms as follows.
• Parameter generation: The algorithm chooses an elliptic
curve E and a group generator G of prime order q over
the elliptic curve. In addition, the algorithm selects a cryp-
tographic hash function H(·). The algorithm parameters
(E, G, q, H) are shared between different users.
• Key generation: The signer randomly chooses his private
key sk from 2 to q − 1 and computes and publishes his public
key
PK = skG.
• Signature generation: To sign a message M, the signer ran-
domly chooses an integer k from 2 to q − 1 and computes
(Kx , Ky) = kG,
−1(H(M) + Kx sk)(mod q).
s = k
The signature of the signer on the message M is (Kx , s).
• Signature verification: Anyone has the public key PK of the
signer can verify the signature (Kx , s) by computing
u = s
−1H(M)(mod q),
−1Kx(mod q),
′
y) = uG + vPK
v = s
′
(K
x , K
and checking if K′
x = Kx . If so, the signature is valid.
If the signature is generated with the signature generation algo-
rithm, we have
(K
′
′
y) = uG + vpk = s
x , K
−1(H(M) + Kx sk))−1(H(M) + Kx sk)G
= (k
−1H(M)G + s
−1Kx skG
= kG = (Kx , Ky).
Therefore, we have K′
x = Kx .
In 2015, ShenTu and Yu [20] proposed a blind signature scheme
for Bitcoin based on elliptic curve cryptography. Their basic idea is
the same as the Schnorr signature scheme [19]. Assume that the
scheme chooses an elliptic curve E, a group generator G over E
with a prime order q, and a cryptographic hash function H(·). The
public and private keys of the signer are (y, x), where y = xG. The
scheme can be described as follows.
• Step 1. The signer randomly chooses an integer k from Z∗
q
and computes
R = kG
and sends the commitment R to the recipient.
• Step 2. The recipient randomly chooses two integers α, β
from Z∗
q and computes
and takes the x-coordinate of R′ and let t = R′
recipient computes
x . Then the
′ = R − αG − βy
R
e
′ = H(m, t),
′ + β(mod q)
e = e
and sends e to the signer.
• Step 3. The signer computes
s = k − ex(mod q)
and sends s to the recipient.
• Step 4 The recipient computes