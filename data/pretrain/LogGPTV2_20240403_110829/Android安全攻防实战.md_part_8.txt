·debuggable：如果指定的一个或多个组件可以被调试，该属性为true。
·enabled：如果android应用框架可以启动或运行该元素定义的组件，该属性为
true（默认值为 true）。只有当它设为false时，它才可以重载（override）所有
组件的值。
·description：该属性就是一个对app进行描述的字符串。
。allowClearUserData：该属性是一个决定用户是否能够清理与 app 相关的数据
的标志位。默认情况下，它的值是true，而且在某些定制开发的android 系统
中，非系统app是不能设置它的值的。
下面这些元素是定义app的组件的，允许开发者决定他们的某些属性：
这段代码是用来定义一个service 的各个属性的，其中一些XML属性是service
特有的。
android:isolatedProcess:这一属性表示该service 能够在没有权限的情况下
运行在一个独立的进程中。
[μos[eg_ 1,onxa_]=petqeue:ptoxpue xenTeoox>
[μasteg_ 1 ,anxs]=paqrodxarpro.xpue
android:icon=*dravable resource*
android:label=*string resource"
android:name="string*
android:permisslon=*string*
android:process="string" >
这一元素声明的是broadcast receiver组件。
它定义了“content provider”类型的组件。由于“content provider”可以
被认为是个基本上类似数据库的组件，所以我们也要能定义访问其数据
结构和内容的控制策略。下列属性就是用来实现这一点的：
android:writePermission：这一属性用来规定其他 app 中的组件要对“content
46
---
## Page 65
第2章实践app安全
provider”进行操作所需的权限的名称。在修改或增加数据结构时，必须
要有这个权限。
android:readPermission：这一属性用来规定其他app中的组件要对“content
provider”进行操作所需的权限的名称。在读取其中的数据或查询数据的
结构时，必须要有这个权限，
android:authorities:这个属性规定了 URI 作者的名字 ID 的列表。通常是用
下面这个Java类来实现provider的：
拓展阅读
°AndroidManifest.xml 的网页 , 网均: http:/developer.android.com/guide/topics/
manifest/manifest-intro.html。
2.6通过ADB与activity管理器交互
对于任何处于学习阶段的Android安全专家来说，了解Android调试桥（Android
Debug Bridge，ADB）是十分重要的。ABD 让你能直接与Android 系统使用的原生
service 和资源（比如，包管理器（package manager），activity管理器（activity managcr）
及其他一些对于Android系统操作十分重要的守护进程（daemon））进行交互。本次
准备工作
开始之前，你需要准备下列工具。
°Android SDK 工具包。
°一个Android 虚拟设备（“见2.5探索AndroidManifest.xml文件”那一节中介
绍了如何创建和运行一个Android虚拟设备）或是一台Android实体机。
怎么做·
要使用应用管理器运行Activity，你需要执行以下的操作。
1.在下面这条命令的帮助下，获取你Android设备上的一个shell:
Tteqs qpe
47
---
## Page 66
Android安全攻防实战
2.自己找一个要运行的activity。使用包管理器，可以得到一张设备中已安装的
activity的列表，你可以从里面挑一个。
pn list packages
接下来，你的屏幕上就会列出一张很大的包的列表，如图2.15所示。
:ch-source
lication
apps.tag
odroid
ekogo
03:abex
enail.
id.facelock
图 2.15
3.选一个你想要运行的activity，用下面这条命令运行它。
am start [包名]
更多内容
在运行activity之前，你还需要通过使用start命令接受的“intent”参数，来指
定传给activity 的 intent，如下。
am start 
参数可以由让你能详细描述具体要求的一系列参数构成。
·-a[action]：这个参数指定了要使用的 action的标签字符串。它用来指明intent
的用途或被发送intent的“action”。
·-d[数据uri]：这个参数指定了附加到 intent 的数据URI.它指向app 处理intent
时使用的数据。
·-t[mime 类型]：这个参数指定了intent 中数据的mime类型。
·-c[分类]：这个参数指定了intent 的分类（category）。
·-n[组件]：这个参数指定了创建intent 使用的组件名（以包名为前缀的）。它
可以很方便地用来调整intent 的作用。
48
---
## Page 67
第2章实践app安全
·-f[标志位]：这个参数指定了intent的标志位（flag）。它用来描述intent应该
被如何处理，并且让你可以控制app处理intent时给定数量的行为。
值。某些intent的定义允许你向 app传递一个字符串值的词典，当intent被处
理时，这些字符串的值将是可以访间的。
·-z[扩展的键][布尔值]：这个参数将一个布尔值与一个键名关联在一起。
与（）[][]
起。
·-el[扩展的键][长整型值]：这个参数将一个长整型（long）值与一个键名关联
在一起。
]
联在一起。
·-eu[扩展的键][uri值]：这个参数将一个URI与一个键名关联在一起。
°-ecn[扩展的键][组件名]：这个参数将一个组件名（它会被转换成一个对象
“ComponentName”）与一个键名关联在一起。
·-eia[扩展的键][整型值，整型值，]：这个参数让你能把一个整型数组和一
个键名关联在一起。
·-efa[扩展的键][float型浮点值，float型浮点值，]：除了一小点外，这个参
数与“-eia”类似，让你能把一个float型浮点数组和一个键名关联在一起。
并非所有intent 参数都是必需的。逻辑上，使用这条命令必须输入的是创建intent
的组件或一个action值。这些规则适用于所有发送给应用的intent。
可选参数“--user”让你能指定app 以哪个用户的权限运行。如果activity不支持
这个参数，它就将以ADB用户的权限运行。
另外在intent中还可以设置一些标志位，参考“拓展阅读”一节中给出的“Intent
Specification-Android Developer”链接，你将能得到一张列有所有可选参数的完整
列表。
运用这些知识，我们就可以执行下面这条命令，或与之类似的命令：
com. android.MyPackageLaunchMeActivity
-C android. intent . category .MyPackageIntentCategory
你也可以使用activity管理器来启动服务，比如你可以使用“startservice”命令：
49
---
## Page 68
Android安全攻防实战
me>
你也可以执行与下面这条命令类似的命令：
am startservice com.android.app/
com.android.app.service.ServiceComponent 你电可以在这里指定 intent
Activity管理器支持的另一个功能是停止服务和进程。在一个app占用了系统中
所有的资源，拖慢了系统时，这是个非常好用的功能。下面给出如何使用activity管
理器杀掉一个进程：
ki11 
和上面那条命令一样，“UID”参数也是可选的。在这里，这个参数让你能限定
kill命令只能应用在运行在某个指定用户名下的包。如果没有指定的话，ADB将会试
图杀掉与指定包关联在一起的所有用户名下的正运行中的进程。
欲知Androidactivity管理器支持的更多命令，详见“拓展阅读”一节中给出的
“ Android Debug Bridge  Android developer” 生接。
拓展阅读
·Android 调试桥—Android 开发者参考网页（The Android Debug Bridge
Android developer page ), hl: http:/developer.android.com/tools/help/adb. Html.
·Intent 标准—写给 Android 开发者的标准（The Intent SpecificationAndroid
Developer specifications), βhl: http:/developer.android.com/tools/help/adb.Html#
IntentSpec.
2.7通过ADB提取app里的资源
下一个实验向你展示如何对你的Android app进行些许窥探。即，找出它们用什
么类型的数据结构来存储重要的信息以及它们存储哪些类型的信息，例如：分数排
行榜、口令、联系人和电子邮件列表。除了能让你把最高分设成负数之外，这也是
保护其用户数据的。例如，数据是否加密，如何加密的？app是否保护用户数据
的完整性？另外，在进行逆向工程和评估app 安全性时，这也是非常有用的技能。
准备工作
在这个实验中，很遗撼，你必须有一台已经“root“过了的手机，或者一个Android
虚拟设备一因为对于虚拟设备来说，你原本就拥有它的root权限。
50
---
## Page 69
第2章实践app安全
如果你想要访间其他app中的资源，你需要有root权限。这样，如果你想要研
究市场中那些app的行为，就没什么能阻止你通过ADB把它们从你的设备中复制出
来，并安装的虚拟设备中去了。
你也需要安装Android SDK。
怎么做
可以用下列方法列出Android设备中的文件
1.借助于下面这条命令，获取你的Android设备的一个shell：
adb shel1[可选参数]
2.切换到/data/data/目录
cd /data/data/
这个目录中的内容与图2.16类似。
cale2
ctivity.test
con.androtd.gallery
图 2.16
如果你列出文件的访间权限、创建时间、修改时间以及其他一些元数据，它
看上去应该就是图2.17这个样子。
51
---
## Page 70
Android安全攻防实战
06:55
canera
04
2051
Uo-1
2813-05-16
sett