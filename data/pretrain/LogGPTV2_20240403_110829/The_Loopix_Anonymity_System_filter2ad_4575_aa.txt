title:The Loopix Anonymity System
author:Ania M. Piotrowska and
Jamie Hayes and
Tariq Elahi and
Sebastian Meiser and
George Danezis
The Loopix Anonymity System
Ania M. Piotrowska and Jamie Hayes, University College London; Tariq Elahi, KU Leuven; 
Sebastian Meiser and George Danezis, University College London
https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/piotrowska
This paper is included in the Proceedings of the 26th USENIX Security SymposiumAugust 16–18, 2017 • Vancouver, BC, CanadaISBN 978-1-931971-40-9Open access to the Proceedings of the 26th USENIX Security Symposium is sponsored by USENIXThe Loopix Anonymity System
Ania M. Piotrowska
University College London
Jamie Hayes
University College London
Tariq Elahi
KU Leuven
Sebastian Meiser
University College London
George Danezis
University College London
Abstract
We present Loopix, a low-latency anonymous commu-
nication system that provides bi-directional ‘third-party’
sender and receiver anonymity and unobservability.
Loopix leverages cover trafﬁc and Poisson mixing—brief
independent message delays—to provide anonymity and
to achieve trafﬁc analysis resistance against, including
but not limited to, a global network adversary. Mixes and
clients self-monitor and protect against active attacks via
self-injected loops of trafﬁc. The trafﬁc loops also serve
as cover trafﬁc to provide stronger anonymity and a mea-
sure of sender and receiver unobservability. Loopix is
instantiated as a network of Poisson mix nodes in a strat-
iﬁed topology with a low number of links, which serve to
further concentrate cover trafﬁc. Service providers medi-
ate access in and out of the network to facilitate account-
ing and off-line message reception.
We provide a theoretical analysis of the Poisson mix-
ing strategy as well as an empirical evaluation of the
anonymity provided by the protocol and a functional im-
plementation that we analyze in terms of scalability by
running it on AWS EC2. We show that mix nodes in
Loopix can handle upwards of 300 messages per sec-
ond, at a small delay overhead of less than 1.5ms on
top of the delays introduced into messages to provide se-
curity. Overall message latency is on the order of sec-
onds – which is relatively low for a mix-system. Fur-
thermore, many mix nodes can be securely added to the
stratiﬁed topology to scale throughput without sacriﬁc-
ing anonymity.
1
Introduction
In traditional communication security, the conﬁdential-
ity of messages is protected through encryption, but this
exposes meta-data, such as who is sending messages to
whom, to network eavesdroppers. As illustrated by re-
cent leaks of extensive mass surveillance programs1, ex-
posing such meta-data leads to signiﬁcant privacy risks.
Since 2004, Tor [20], a practical manifestation of
circuit-based onion routing, has become the most popu-
lar anonymous communication tool, with systems such
as Herd [33], Riposte [11], HORNET [10] and Vu-
vuzela [46] extending and strengthening this paradigm.
In contrast, message-based architectures, based on mix
networks, have become unfashionable due to perceived
higher latencies,
that cannot accommodate real-time
communications. However, unless cover trafﬁc is em-
ployed, onion routing is susceptible to trafﬁc analysis at-
tacks [7] by an adversary that can monitor network links
between nodes. Recent revelations suggest that capabili-
ties of large intelligence agencies approach that of global
passive observers—the most powerful form of this type
of adversary.
It is not sufﬁcient to provide strong anonymity against
such an adversary while providing low-latency commu-
nication. A successful system additionally needs to re-
sist powerful active attacks and use an efﬁcient, yet se-
cure way of transmitting messages. Moreover, the sys-
tem needs to be scalable to a large number of clients,
which makes classical approaches based on synchro-
nized rounds infeasible.
For this reason we reexamine and reinvent mix-based
architectures, in the form of the Loopix anonymity sys-
tem. Loopix is resists powerful adversaries who are ca-
pable of observing all communications and performing
active attacks. We demonstrate that such a mix archi-
tecture can support low-latency communications that can
tolerate small delays, at the cost of using some extra
bandwidth for cover trafﬁc. Message delay and the ra-
tio of cover to real trafﬁc can all be ﬂexibly traded-off
against each other to offer resistance to trafﬁc analysis.
Loopix provides ‘third-party’ anonymity, namely it hides
the sender-receiver relationships from third parties, but
1See EFF’s guide at https://www.eff.org/files/2014/05/
29/unnecessary_and_disproportionate.pdf
USENIX Association
26th USENIX Security Symposium    1199
senders and recipients can identify one another. This
simpliﬁes the design of the system, prevents abuse, and
provides security guarantees against powerful active ad-
versaries performing (n− 1) attacks [41].
Loopix provides anonymity for private email or instant
messaging applications. For this reason, we adopt and
leverage an architecture by which users of Loopix are
associated with service providers that mediate their ac-
cess to a stratiﬁed anonymity system. Such providers are
only semi-trusted2, and are largely present to maintain
accounting, enforce rate limiting, and ensure messages
sent to off-line users can be retrieved at a later time. To
provide maximal ﬂexibility, Loopix only guarantees un-
reliable datagram transmission and is carried over UDP.
Reliable transport is left to the application as an end-to-
end concern [39].
Contributions. In this paper we make the following con-
tributions:
• We introduce Loopix, a new message-based anony-
mous communication system. It allows for a tun-
able trade-off between latency and genuine and
cover trafﬁc volume to foil trafﬁc analysis.
• As a building block of Loopix we present the Pois-
son Mix, and provide novel theorems about its prop-
erties and ways to analyze it as a pool-mix. Pois-
son mixing does not require synchronized rounds,
can be used for low-latency anonymous communi-
cation, and provides resistance to trafﬁc analysis.
• We analyze the Loopix system against a strong,
global passive adversary. Moreover, we show that
Loopix provides resistance against active attacks,
such as trickling and ﬂooding. We also present a
methodology to empirically estimate the security
provided by particular mix topologies and other se-
curity parameter values.
• We provide a full implementation of Loopix and
measure its performance and scalability in a cloud
hosting environment.
Outline. The remainder of this paper is organized as
follows.
In Section 2, we present a brief, high-level
overview of Loopix and deﬁne the security goals and
threat model. In Section 3, we detail the design of Loopix
and describe Poisson mixes, upon which Loopix is based
and introduce their properties. In Section 4, we present
the analysis of Loopix’s security properties and discuss
the resistance against trafﬁc analysis and active attacks.
In Section 5, we discuss the implementation of Loopix
and evaluate its performance. In Section 6, we survey
related works and compare Loopix with recent designs
of anonymity systems. In Section 7, we discuss remain-
ing open problems and possible future work. Finally, we
conclude in Section 8.
2Details about the threat model are in Section 2.3
2 Model and Goals
In this section, we ﬁrst outline the design of Loopix.
Then we discuss the security goals and types of adver-
saries that Loopix guarantees users’ privacy against.
2.1 High-level overview
Loopix is a mix network [8] based architecture allow-
ing users, distinguished as senders and receivers, to route
messages anonymously to each other using an infrastruc-
ture of mix servers, acting as relays. These mix servers
are arranged in a stratiﬁed topology [21] to ensure both
horizontal scalability and a sparse topology that concen-
trates trafﬁc on a few links [13]. In a stratiﬁed topology,
mixes are arranged in a ﬁxed number of layers. Each
mix, at any given time, is assigned to one speciﬁc layer.
Each mix in layer i is connected with every mix in layers
i−1 and i +1. Each user is allowed to access the Loopix
network through their association with a provider, a spe-
cial type of mix server. Each provider has a long-term
relationship with its users and may authenticate them,
potentially bill them, or discontinue their access to the
network. Each provider is connected to each mix in the
ﬁrst layer, in order to inject packets into the mix net-
work, and also to every mix in the last layer, to receive
egress packets. The provider not only serves as an access
point, but also stores users’ incoming messages. In con-
trast to previous anonymous messaging designs [46, 11],
Loopix does not operate in deterministic rounds, but runs
as a continuous system. This means that incoming mes-
sages can be retrieved at any time, hence users do not
have to worry about lost messages when they are off-
line. Additionally, Loopix uses the Poisson mixing tech-
nique that is based on the independent delaying of mes-
sages, which makes the timings of packets unlinkable.
This approach does not require the synchronization of
client-provider rounds and does not degrade the usability
of the system for temporarily off-line clients. Moreover,
Loopix introduces different types of cover trafﬁc to foil
de-anonymization attacks.
2.2 Threat Model
Loopix assumes sophisticated,
strategic, and well-
resourced adversaries concerned with linking users to
their communications and/or their communication part-
ner(s). As such, Loopix considers adversaries with three
distinct capabilities, that are described next.
Firstly, a global passive adversary (GPA) is able to ob-
serve all network trafﬁc between users and providers and
between mix servers. This adversary is able to observe
the entire network infrastructure, launch network attacks
such as BGP re-routing [4], or conduct indirect observa-
1200    26th USENIX Security Symposium
USENIX Association
Corrupt mixes
Corrupt provider
Insider
Sender-Recipient Third-Party Unobservability
Sender online unobservability
Sender anonymity
Receiver unobservability
Receiver anonymity
(cid:88)
•
(cid:88)
•
•
Table 1: The summary of security properties of the Loopix system in face of different threats. For the insider column we write • to
denote that this concept doesn’t apply to the respective notion.
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
GPA
(cid:88)
(cid:88)
(cid:88)
(cid:88)
(cid:88)
tions such as load monitoring and off-path attacks [25].
Thus, the GPA is an abstraction that represents many dif-
ferent classes of adversaries able to observe some or all
information between network nodes.
Secondly, the adversary has the ability to observe all
of the internal state of some corrupted or malicious mix
relays. The adversary may inject, drop, or delay mes-
sages. She also has access to, and leverages, all se-
crets of those compromised parties. Furthermore, such
corrupted nodes may deviate from the protocol, or in-
ject malformed messages. A variation of this ability is
where the mix relay is also the provider node meaning
that the adversary additionally knows the mapping be-
tween clients and their mailboxes. When we say that a
provider node is corrupt, we restrict that node to being
honest but curious. In Loopix, we assume that a fraction
of mix/provider relays can be corrupted or are operated
by the adversary.
Finally, the adversary has the ability to participate in
the Loopix system as a compromised user, who may
also deviate from the protocol. We assume that the ad-
versary can control a limited number of such users—
effectively excluding Sybil attacks [22] from the Loopix
threat model—since we assume that honest providers are
able to ensure that at least a large fraction of their users
base are genuine users faithfully following all Loopix
protocols. Thus, the fraction of users controlled by the
adversary may be capped to a small known fraction of the
user base. We further assume that the adversary is able
to control a compromised user in a conversation with an
honest user, and become a conversation insider.
An adversary is always assumed to have the GPA ca-
pability, but other additional capabilities depend on the
adversary. We evaluate the security of Loopix in refer-
ence to these capabilities.
2.3 Security Goals
The Loopix system aims to provide the following secu-
rity properties against both passive and active attacks—
including end-to-end correlation and (n − 1) attacks.
These properties are inspired by the formal deﬁnitions
from AnoA [3]. All security notions assume a strong ad-
versary with information on all users, with up to one bit
of uncertainty. In the following we write {S → R} to de-
note a communication from the sender S to the receiver
R, {S →} to denote that there is a communication from S
to any receiver and {S (cid:54)→} to denote that there is no com-
munication from S to any receiver (S may still send cover
messages). Analogously, we write {→ R} to denote that
there is a communication from any sender to the receiver
R and {(cid:54)→ R} to denote that there is no communication
from any sender to R (however, R may still receive cover
messages).
Sender-Receiver Third-party Unlinkability.
The
senders and receivers should be unlinkable by any unau-
thorized party. Thus, we consider an adversary that
wants to infer whether two users are communicating. We
deﬁne sender-receiver third party unlinkability as the in-
ability of the adversary to distinguish whether {S1 → R1,
S2 → R2} or {S1 → R2,S2 → R1} for any online honest
senders S1,S2 and honest receivers R1,R2 of the adver-
sary’s choice.
Loopix provides strong sender-receiver third-party un-
linkability against the GPA even in collaboration with
corrupt mix nodes. We refer to Section 4.1.3 for
our analysis of the unlinkability provided by individ-
ual mix nodes, Section 4.3 for a quantitative analysis
of the sender-receiver third-party unlinkability of Loopix
against the GPA and honest-but-curious mix nodes, and
Section 4.2 for our discussion on malicious mixes per-
forming active attacks.
Sender online unobservability. Whether or not senders
are communicating should be hidden from an unautho-
rized party. We deﬁne sender online unobservability as
the inability of an adversary to decide whether a speciﬁc
sender S is communicating with any receiver {S →} or
not {S (cid:54)→}, for any concurrently online honest sender S