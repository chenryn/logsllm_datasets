02-09 and 2020-08-30), grouped by manufacturers of the software
resp. industrial device (we manually clustered the values of the
ApplicationURI field provided by servers). We discovered between
1761 and 2069 deployments in the IPv4 address space.
The found OPC UA servers can be broadly classified into two cat-
egories. First, discovery servers (hatched in Figure 2, 42% of hosts in
our latest measurement) only announcing OPC UA endpoints run-
ning on other host / port combinations. These systems mainly rely
on the OPC UA reference implementation [47] and their number
varies slightly from measurement to measurement. The second
class comprises full OPC UA servers (“servers” from here on), mostly
on industrial devices, which we could attribute to well-known in-
dustrial device manufacturers, most prominently Bachmann (406
devices in our last measurement), Beckhoff (112), and Wago (78).
Their number marginally increased during the time of our measure-
ments. Since the security configuration of OPC UA servers is only
relevant for data transmission and not for the unprotected retrieval
of endpoints, we focus on non-discovery servers below (1114).
To enable reproducibility of our results, we make our anonymized
dataset [11] and extensions of zgrab2 [9] publicly available.
5 SECURITY OF OPC UA DEPLOYMENTS
While, in principle a secure protocol, OPC UA requires complex and
correct configuration to achieve a secure deployment [19]. Config-
uration recommendations [52] as well as general security advice
for industrial control systems [63] and generic security guidelines,
e.g., on the use of certificates [2, 52] and hash functions [12, 18],
aid this task. However, it is unclear whether operators follow these
recommendations to secure their deployments. To overcome this
gap of knowledge, we analyze and assess all reachable OPC UA
servers’ security configurations w.r.t. communication security, au-
thorization, and access control. Unless stated otherwise, we rely
on our latest measurement (2020-08-30) for our analysis. In Appen-
dix B we elaborate on the distribution of security configurations
over device manufacturers and autonomous systems.
5.1 Advertised Security Properties
Using their endpoint descriptions, OPC UA servers advertise differ-
ent security modes and security policies and thus define founda-
tional security settings and cryptographic primitives.
Message Security Mode: The client-chosen message security
mode determines whether the communication is authenticated and
confidential (mode SignAndEncrypt), authenticated (Sign), or in-
secure (None) (cf. Section 2). To enable clients to benefit from secure
connections, it is fundamental that servers provide the correspond-
ing security modes. Hence, it is essential to assess both the strongest
(maximum security level that a client can enforce) and the weakest
security mode (minimum security level) servers offer.
Figure 3 (left) shows the number of hosts supporting a specific
security mode and further marks the number of hosts where a
security mode is the least resp. most secure mode available, e.g., the
security mode Sign (S) is supported by 588 hosts but is the least
secure mode available on only 28 hosts and the most secure mode
2020-02-092020-03-012020-04-052020-05-042020-06-072020-07-052020-08-022020-08-30Measurement05001000150020002500#Hostsfollowreferencesnon-defaultportDiscoveryServersOPCFoundationBachmannBeckhoffWagootherIMC ’20, October 27–29, 2020, Virtual Event, USA
Dahlmanns et al.
Figure 3: Number of hosts providing security modes
(None (N), Sign (S), SignAndEncrypt (S&E)) and policies (cf. Ta-
ble 1) as well as number of hosts offering these as their least
and most secure option (dashed line = all hosts).
on only one host, indicating that most of the hosts also support the
security modes None (N) and SignAndEncrypt (S&E). Overall, 844
servers (75%) follow the recommendation and provide support for
at least one of the security modes SignAndEncrypt or Sign, i.e.,
authenticated communication (visible in Figure 3 by summing up
hosts supporting one of these modes as their most secure option).
However, 270 servers (26%) only support the security mode None
and, therefore, fail to enable secure communication [52] rendering
the security benefits of OPC UA inaccessible.
Security Policies: While message security modes define whether
communication security is enabled, security policies define the se-
lected cryptographic primitives (cf. Section 2). Here, two out of five
specified security policies other than None are marked as deprecated
due to the use of SHA-1 (Basic128Rsa15 (D1), Basic256 (D2); cf.
Table 1). Therefore, these policies should not be supported when-
ever the use of stronger policies is technically possible [52].
Figure 3 (right) details the number of servers offering security
policies and the number of servers providing a specific policy as
their least and most secure option. While the security policy None
is only offered in combination with security mode None, the other
policies are announced together with the security modes Sign and
SignAndEncrypt. While 564 servers support one of the policies
with a sufficient level of security (S1, S2, S3) (visible in Figure 3 by
summing up hosts supporting these policies as their most secure
option), only 16 enforce the use of these policies, i.e., do not provide
a less secure alternative. In contrast, 786 hosts still support SHA-1-
based policies that have been deprecated in 2017 (D1, D2). A subset
of 280 servers support these policies as their most secure option
and thus lack an adequate security level for connecting clients.
To summarize, while only 1.4% of all servers enforce the use of
strong cryptographic policies, 70% of all servers still support depre-
cated and insecure policies. Despite using OPC UA, a principally
secure protocol, these numbers indicate that the security configu-
rations are not updated as fast as basic cryptographic primitives
lose their security guarantees. Given the long lifetime of industrial
components [63], exposing such devices to the Internet and not
updating their configuration is (potentially) dangerous.
Takeaway: Already for elementary security settings, we uncover
270 servers (24%) offering no security at all and 280 servers (25%)
supporting only deprecated cryptographic ciphers. Summing up, 49%
of the servers do not fully utilize the security benefits of OPC UA, i.e.,
do not allow clients to connect securely according to today’s standards.
Figure 4: Number of servers sending a certificate to imple-
ment announced policies (separated by signature hash func-
tion and keylength).
5.2 Actually Used Security Parameters
While security policies define mandatory cryptographic primitives,
so far, it was an open question whether OPC UA servers implement
the security parameters determined in their announced policies.
To study the effective implementation of the security policies, we
analyze all servers’ certificates (99% self-signed, 2 CA signed), fo-
cussing on their used cryptographic algorithms and key lengths,
for conformance with the announced security policies.
In Figure 4, we present for each security policy the number of
received certificates that servers delivered, highlighting the cryp-
tographic hash function and key length. Most notably, out of the
servers offering the recommended Basic256Sha256 (S2) policy,
409 servers provide certificates that do not match the specified
security parameters, i.e., using MD5 or SHA-1 and/or a too-short
key, weakening the built-in security of OPC UA. Contrary, out
of the servers announcing the weakest and deprecated security
policy (Basic128Rsa15 (D1)), 75 servers provide certificates using
cryptographic primitives being too “strong”. In most cases, these
certificates use SHA-256 instead of SHA-1 (as required by D1) as
signature hash function. Although too strong primitives do not
weaken the security, the specification does not allow such behavior,
i.e., such settings potentially hinder clients from connecting.
In general, OPC UA implementations do not check compliance
to security policies or do not sufficiently alert operators when in-
appropriate certificates are provided. The use of weaker primitives
than defined by the policy causes the gained communication se-
curity to be weaker than expected, rendering the security benefits
advertised by the security policies ineffective. Contrary, certificates
using too strong primitives nullify the alleged compatibility with
legacy clients, which might not be able to operate with these primi-
tives [29, 34]. In case the certificate includes a longer key than the
client is able to handle, e.g., due to memory limitations, the client is
not able to connect. However, when the certificate is created using
a hash function that the client does not support, the client might
abort the connection or continues without verifying the certificate.
Takeaway: Out of the 844 servers, which in theory provide suffi-
cient security, 70% actually realize a weaker security level in practice
than specified, e.g., due to the use of SHA-1. In combination with
the 280 servers already announcing deprecated security options, this
leads to 60% of servers with deprecated configurations. Adding the
26% of servers offering no security, 85% of found servers are affected
by configuration deficits.
NSS&ESecurityMode025050075010001250#Hostsweakstrong588843103528512701843588843ND1D2S1S2S3SecurityPolicyweakstrongInsec.Deprec.LeastSecureMostSecure7157621056481035135001602702425605568715762105648ND1D2S1S2S3SecurityPolicy0200400600800#HostsHash&KeyLengthSHA-25640961024SHA-12048MD5102420481024↑toostrong↓tooweak↓7↑75↑5↓409An Internet-Wide Study on Insecure OPC UA Deployments
IMC ’20, October 27–29, 2020, Virtual Event, USA
Figure 5: Number of hosts using
the same certificate to authenti-
cate (alternating colors indicate
distinct autonomous systems).
Figure 6: All hosts lined up marking offered authentica-
tion methods, accessible hosts and our classification re-
sults, e.g., Host 150 was accessible, classified as produc-
tion system and provided anon. and cred. as auth. types.
Figure 7: Fraction of read- and
writeable nodes as well as
executable functions on all
493 publicly accessible hosts.
5.3 Secrets Not Meant to be Shared
Apart from the correct configuration and use of security parameters,
the handling of secrets is also crucial for the security of Internet-
facing deployments. Most important, cryptographic secrets must
remain private to avert impersonation and eavesdropping [2].
To assess whether operators adhere to foundational security
best-practices, we check whether different servers authenticate
using the same security certificate. Figure 5 lines up all received
certificates and shows the number of hosts announcing it to au-
thenticate. Notably, we encounter 9 certificates of which each is
deployed on at least three devices (to account for devices changing
their IP address during our measurements, highlighted in Figure 5),
most likely deployed at different operators. Although the OPC UA
protocol does not allow the client to verify that the certificate’s
private key is indeed installed on the server whenever the client
certificate is rejected (due to an ambiguous error response), we still
assume so as it is a fundamental requirement for the secure channel
handshake (needed for the decryption of the request) [48].
From available meta-information, we can derive that certifi-
cate reuse concerns systems encompassing automation systems,
amongst others, for energy technology and parking guidance. In
one extreme case, we found a single certificate issued by a man-
ufacturer of industrial control systems (as per the subject field)
deployed on 385 hosts in 24 different autonomous systems. Two
additional certificates of the same manufacturer show the same
practice (on 9 resp. 6 devices in 8 resp. 5 autonomous systems). We
informed the manufacturer about our observations at the end of
April 2020, whereupon the manufacturer claimed that distributors
and/or operators do not read or understand the product manual
which emphasizes the risks of certificate reuse. As a countermea-
sure, the manufacturer targeted to sensitize its distributors w.r.t.
security and sent security information to all it’s customers in early
June 2020. However, even three months after the manufacturer sent
the security information, we were not able to see any differences
in the configuration strategy of the affected hosts.
From the discussion with the manufacturer we can, furthermore,
assume that these devices indeed are installed at different opera-
tors since a distributor is responsible for the configuration of the
devices and sells it to the operators. Even if not installed at differ-
ent operators, the usage of the same certificate and key material
over hundreds of devices installed in the field, connected to many
different ASs, increases the number of attack vectors significantly.
Next to proper handling, the correct creation of secrets is also
important for secure deployments, i.e., cryptographic keys often
need to be chosen uniformly at random [27]. While the handling
of some secrets is questionable, we have not found any evidence of
key material that is subject to insufficient randomness by pairwise
checking the keys of all received certificates for shared primes.
Takeaway: Numerous OPC UA systems disregard fundamental
security recommendations and reuse security certificates across de-
vices, making these susceptible to impersonation and eavesdropping.
As this only affects 5 devices otherwise configured securely, it has no
significant effect on our previous assessment of 85% of servers being
configured deficiently.
5.4 Unprotected OPC UA Address Spaces
Access control to protect the information in the address space is
an essential part of the OPC UA security concept, consisting of
two steps (cf. Section 2): certificate validation during the secure
channel establishment, and authorization during the session estab-
lishment. The latter especially means that anonymous access should
be disabled, requiring connecting clients to authenticate [52, 60].
Available Authorization Methods: Figure 6 shows all found
OPC UA servers and details the resp. available authentication op-
tions1. We sort servers by the authentication options they support
and further separate (to the right) servers that abort the creation of
a secure channel rejecting our self-signed certificate (cf. Section 4).
Out of the 1034 servers that allow anyone to establish a secure chan-
nel, 563 servers (50% of all Internet-reachable OPC UA systems)
also offer anonymous access. Notably, this number encompasses
71 servers that otherwise force clients to communicate securely.
System Classification: To evaluate whether systems with in-
sufficient access control indeed are production systems, we access
all servers that offer anonymous access not rejecting our session
request (493 servers, cf. Figure 6), e.g., due to invalid configurations.
To not interfere with any process, we never change the system’s
state, e.g., by write operations or function executions. Further, we
handle the received data responsibly and reach out to operators
whenever we are able to identify them to inform them about their
openly accessible system (cf. Appendix A).
1We further detail on available authentication methods in Appendix B.2.
280315350385Reused(≥3hosts)1932Certiﬁcate0102030#Hosts12710100200300400500600Hosts(linedup)anonymouscredentialscertiﬁcatetokenpubliclyaccessibleproductiontestunclassiﬁedHost15010001114Certiﬁcatenotaccepted0.100.250.500.751.00Frac.ofHosts(1-CDF)0.00.20.40.60.81.0Frac.ofNodesReadableWritableExecutableIMC ’20, October 27–29, 2020, Virtual Event, USA
Dahlmanns et al.
We heuristically classify accessible OPC UA systems into pro-
duction or test systems by analyzing the supported namespaces (cf.
Section 2). Although we cannot label 156 systems (standard names-
pace only), our approach classifies 295 production systems based
on namespaces relating to industrial manufacturers or standards,
e.g., IEC 61131-3 [36]. Likewise, we categorize 42 systems as test
systems as they use namespaces of example applications, e.g., [21].
Overall, our classification points out that a significant ratio of in-
secure configurations can be linked to production systems allowing
control by unauthorized users without any countermeasures.
Address Space Access Control: To assess the severity of al-
lowing anonymous access, we also analyze the access rights of
the anonymous user, i.e., whether servers allow clients reading or
writing nodes and executing functions anonymously.
Figure 7 shows to which extent a share of hosts enables the
anonymous user to read or write nodes and execute functions. 90%
of all servers allow clients to read more than 97% of available nodes
anonymously, e.g., variables called m3InflowPerHour, indicating
that attackers can monitor the device’s behavior. Manual examina-
tion of the data the readable nodes contain allowed us to identify a
few systems such as parking guidance systems including license
plate and video surveillance data. Further, 33% of hosts allow anony-
mous writes to >10% of their nodes, e.g., rSetFillLevel, enabling
attackers to inject various data into the OPC UA appliance. 61%
of the systems enable anonymous users to execute over 86% of
functions provided, allowing to change the server configuration,
e.g., AddEndpoint. Based on our judgment, none of the function
names suggest that the execution of the function would directly
alter the physical state of a machine. Furthermore, there might be
other parts of the production deployment which are under access
control. Still, we find it risky that at least a part of production sys-
tems are accessible anonymously enabling attackers to read and
write values as well as to execute various functions.
Takeaway: 44% of OPC UA systems, many classified as produc-
tion systems, do not realize access control and thus allow anyone to
read and write data as well as execute functions. This issue concerns
71 servers implementing communication security increasing the share
of servers leaving out security opportunities from 24% to 30%. In total,
92% of all OPC UA servers show configuration deficits.
5.5 A Lack of Longitudinal Improvements
To assess whether the security of OPC UA configurations improves
over time, we (i) perform analyzes on weekly data and (ii) analyze
the distribution of security certificates using included time informa-
tion covering time beyond the seven months of our measurements.
During seven months (February to August 2020), we are unable