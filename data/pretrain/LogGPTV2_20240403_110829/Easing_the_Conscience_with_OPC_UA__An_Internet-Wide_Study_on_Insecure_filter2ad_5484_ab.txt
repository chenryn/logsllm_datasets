### 02-09 and 2020-08-30), Grouped by Manufacturers of the Software or Industrial Device

We manually clustered the values of the `ApplicationURI` field provided by the servers. Our analysis revealed between 1,761 and 2,069 deployments in the IPv4 address space.

### Classification of OPC UA Servers

The discovered OPC UA servers can be broadly classified into two categories:

1. **Discovery Servers (42% of hosts in our latest measurement)**: These servers only announce OPC UA endpoints running on other host/port combinations. They primarily use the OPC UA reference implementation [47], and their number varies slightly from one measurement to another.
   
2. **Full OPC UA Servers ("servers" from here on)**: These are mostly found on industrial devices, and we could attribute them to well-known industrial device manufacturers. The most prominent manufacturers include:
   - Bachmann (406 devices in our last measurement)
   - Beckhoff (112 devices)
   - Wago (78 devices)

The number of full OPC UA servers marginally increased during our measurement period. Since the security configuration of OPC UA servers is only relevant for data transmission and not for the unprotected retrieval of endpoints, we focus on non-discovery servers (1,114) in our subsequent analysis.

To ensure reproducibility, we have made our anonymized dataset [11] and extensions of zgrab2 [9] publicly available.

### Security of OPC UA Deployments

While OPC UA is, in principle, a secure protocol, it requires complex and correct configuration to achieve a secure deployment [19]. Configuration recommendations [52], general security advice for industrial control systems [63], and generic security guidelines, such as those on the use of certificates [2, 52] and hash functions [12, 18], aid in this task. However, it is unclear whether operators follow these recommendations to secure their deployments. To bridge this knowledge gap, we analyze and assess the security configurations of all reachable OPC UA servers with respect to communication security, authorization, and access control. Unless stated otherwise, we rely on our latest measurement (2020-08-30) for our analysis. In Appendix B, we provide more details on the distribution of security configurations over device manufacturers and autonomous systems.

#### 5.1 Advertised Security Properties

OPC UA servers advertise different security modes and policies through their endpoint descriptions, defining foundational security settings and cryptographic primitives.

**Message Security Mode**: The client-chosen message security mode determines whether the communication is authenticated and confidential (mode `SignAndEncrypt`), authenticated (`Sign`), or insecure (`None`). For clients to benefit from secure connections, it is essential that servers provide the corresponding security modes. Therefore, it is crucial to assess both the strongest (maximum security level that a client can enforce) and the weakest security mode (minimum security level) offered by the servers.

Figure 3 (left) shows the number of hosts supporting specific security modes and further marks the number of hosts where a security mode is the least or most secure mode available. For example, the security mode `Sign (S)` is supported by 588 hosts but is the least secure mode available on only 28 hosts and the most secure mode on only one host, indicating that most hosts also support the security modes `None (N)` and `SignAndEncrypt (S&E)`.

Overall, 844 servers (75%) follow the recommendation and provide support for at least one of the security modes `SignAndEncrypt` or `Sign`, enabling authenticated communication. However, 270 servers (26%) only support the security mode `None`, failing to enable secure communication [52] and rendering the security benefits of OPC UA inaccessible.

**Security Policies**: While message security modes define whether communication security is enabled, security policies define the selected cryptographic primitives. Two out of five specified security policies, other than `None`, are marked as deprecated due to the use of SHA-1 (`Basic128Rsa15 (D1)`, `Basic256 (D2)`; cf. Table 1). These policies should not be supported whenever the use of stronger policies is technically possible [52].

Figure 3 (right) details the number of servers offering security policies and the number of servers providing a specific policy as their least and most secure option. While the security policy `None` is only offered in combination with the security mode `None`, the other policies are announced together with the security modes `Sign` and `SignAndEncrypt`.

- 564 servers support one of the policies with a sufficient level of security (`S1, S2, S3`).
- Only 16 servers enforce the use of these policies, i.e., do not provide a less secure alternative.
- 786 hosts still support SHA-1-based policies that were deprecated in 2017 (`D1, D2`).
- A subset of 280 servers supports these policies as their most secure option, lacking an adequate security level for connecting clients.

In summary, while only 1.4% of all servers enforce the use of strong cryptographic policies, 70% of all servers still support deprecated and insecure policies. Despite using OPC UA, a principally secure protocol, these numbers indicate that security configurations are not updated as fast as basic cryptographic primitives lose their security guarantees. Given the long lifetime of industrial components [63], exposing such devices to the Internet without updating their configuration is potentially dangerous.

**Takeaway**: For elementary security settings, we uncovered:
- 270 servers (24%) offering no security at all.
- 280 servers (25%) supporting only deprecated cryptographic ciphers.
- 49% of the servers do not fully utilize the security benefits of OPC UA, i.e., do not allow clients to connect securely according to todayâ€™s standards.

#### 5.2 Actually Used Security Parameters

While security policies define mandatory cryptographic primitives, it was an open question whether OPC UA servers implement the security parameters determined in their announced policies. To study the effective implementation of the security policies, we analyzed all servers' certificates (99% self-signed, 2 CA signed), focusing on their used cryptographic algorithms and key lengths for conformance with the announced security policies.

Figure 4 presents, for each security policy, the number of received certificates that servers delivered, highlighting the cryptographic hash function and key length. Notably, out of the servers offering the recommended `Basic256Sha256 (S2)` policy, 409 servers provide certificates that do not match the specified security parameters, i.e., using MD5 or SHA-1 and/or a too-short key, weakening the built-in security of OPC UA. Conversely, out of the servers announcing the weakest and deprecated security policy (`Basic128Rsa15 (D1)`), 75 servers provide certificates using cryptographic primitives that are too "strong." In most cases, these certificates use SHA-256 instead of SHA-1 (as required by `D1`) as the signature hash function.

Although too strong primitives do not weaken the security, the specification does not allow such behavior, potentially hindering clients from connecting. In general, OPC UA implementations do not check compliance with security policies or do not sufficiently alert operators when inappropriate certificates are provided. The use of weaker primitives than defined by the policy causes the gained communication security to be weaker than expected, rendering the security benefits advertised by the security policies ineffective. Conversely, certificates using too strong primitives nullify the alleged compatibility with legacy clients, which might not be able to operate with these primitives [29, 34].

**Takeaway**: Out of the 844 servers, which in theory provide sufficient security, 70% actually realize a weaker security level in practice than specified, e.g., due to the use of SHA-1. In combination with the 280 servers already announcing deprecated security options, this leads to 60% of servers with deprecated configurations. Adding the 26% of servers offering no security, 85% of found servers are affected by configuration deficits.

#### 5.3 Secrets Not Meant to be Shared

Apart from the correct configuration and use of security parameters, the handling of secrets is also crucial for the security of Internet-facing deployments. Most importantly, cryptographic secrets must remain private to avert impersonation and eavesdropping [2].

To assess whether operators adhere to foundational security best practices, we checked whether different servers authenticate using the same security certificate. Figure 5 lines up all received certificates and shows the number of hosts announcing it to authenticate. Notably, we encountered 9 certificates, each deployed on at least three devices (to account for devices changing their IP address during our measurements, highlighted in Figure 5), likely deployed at different operators. Although the OPC UA protocol does not allow the client to verify that the certificate's private key is indeed installed on the server whenever the client certificate is rejected (due to an ambiguous error response), we still assume so as it is a fundamental requirement for the secure channel handshake (needed for the decryption of the request) [48].

From available meta-information, we derived that certificate reuse concerns systems encompassing automation systems, including energy technology and parking guidance. In one extreme case, we found a single certificate issued by a manufacturer of industrial control systems (as per the subject field) deployed on 385 hosts in 24 different autonomous systems. Two additional certificates of the same manufacturer show the same practice (on 9 resp. 6 devices in 8 resp. 5 autonomous systems). We informed the manufacturer about our observations at the end of April 2020, whereupon the manufacturer claimed that distributors and/or operators do not read or understand the product manual, which emphasizes the risks of certificate reuse. As a countermeasure, the manufacturer targeted to sensitize its distributors regarding security and sent security information to all its customers in early June 2020. However, even three months after the manufacturer sent the security information, we did not observe any differences in the configuration strategy of the affected hosts.

From the discussion with the manufacturer, we can assume that these devices are indeed installed at different operators since a distributor is responsible for the configuration of the devices and sells them to the operators. Even if not installed at different operators, the usage of the same certificate and key material over hundreds of devices installed in the field, connected to many different ASs, significantly increases the number of attack vectors.

Next to proper handling, the correct creation of secrets is also important for secure deployments, i.e., cryptographic keys often need to be chosen uniformly at random [27]. While the handling of some secrets is questionable, we have not found any evidence of key material that is subject to insufficient randomness by pairwise checking the keys of all received certificates for shared primes.

**Takeaway**: Numerous OPC UA systems disregard fundamental security recommendations and reuse security certificates across devices, making these susceptible to impersonation and eavesdropping. As this only affects 5 devices otherwise configured securely, it has no significant effect on our previous assessment of 85% of servers being configured deficiently.

#### 5.4 Unprotected OPC UA Address Spaces

Access control to protect the information in the address space is an essential part of the OPC UA security concept, consisting of two steps (cf. Section 2): certificate validation during the secure channel establishment and authorization during the session establishment. The latter especially means that anonymous access should be disabled, requiring connecting clients to authenticate [52, 60].

**Available Authorization Methods**: Figure 6 shows all found OPC UA servers and details the respective available authentication options. We sort servers by the authentication options they support and further separate (to the right) servers that abort the creation of a secure channel, rejecting our self-signed certificate (cf. Section 4).

- Out of the 1,034 servers that allow anyone to establish a secure channel, 563 servers (50% of all Internet-reachable OPC UA systems) also offer anonymous access.
- Notably, this number encompasses 71 servers that otherwise force clients to communicate securely.

**System Classification**: To evaluate whether systems with insufficient access control are indeed production systems, we accessed all servers that offer anonymous access and do not reject our session request (493 servers, cf. Figure 6). To not interfere with any process, we never change the system's state, e.g., by write operations or function executions. Further, we handle the received data responsibly and reach out to operators whenever we are able to identify them to inform them about their openly accessible system (cf. Appendix A).

We heuristically classify accessible OPC UA systems into production or test systems by analyzing the supported namespaces (cf. Section 2). Although we cannot label 156 systems (standard namespace only), our approach classifies 295 production systems based on namespaces relating to industrial manufacturers or standards, e.g., IEC 61131-3 [36]. Likewise, we categorize 42 systems as test systems as they use namespaces of example applications, e.g., [21].

Overall, our classification points out that a significant ratio of insecure configurations can be linked to production systems, allowing control by unauthorized users without any countermeasures.

**Address Space Access Control**: To assess the severity of allowing anonymous access, we also analyze the access rights of the anonymous user, i.e., whether servers allow clients to read or write nodes and execute functions anonymously.

Figure 7 shows to what extent a share of hosts enables the anonymous user to read or write nodes and execute functions. 90% of all servers allow clients to read more than 97% of available nodes anonymously, e.g., variables called `m3InflowPerHour`, indicating that attackers can monitor the device's behavior. Manual examination of the data the readable nodes contain allowed us to identify a few systems, such as parking guidance systems, including license plate and video surveillance data. Further, 33% of hosts allow anonymous writes to >10% of their nodes, e.g., `rSetFillLevel`, enabling attackers to inject various data into the OPC UA appliance. 61% of the systems enable anonymous users to execute over 86% of functions provided, allowing changes to the server configuration, e.g., `AddEndpoint`. Based on our judgment, none of the function names suggest that the execution of the function would directly alter the physical state of a machine. Furthermore, there might be other parts of the production deployment under access control. Still, we find it risky that at least a part of production systems are accessible anonymously, enabling attackers to read and write values and execute various functions.

**Takeaway**: 44% of OPC UA systems, many classified as production systems, do not realize access control and thus allow anyone to read and write data and execute functions. This issue concerns 71 servers implementing communication security, increasing the share of servers leaving out security opportunities from 24% to 30%. In total, 92% of all OPC UA servers show configuration deficits.

#### 5.5 A Lack of Longitudinal Improvements

To assess whether the security of OPC UA configurations improves over time, we (i) perform analyses on weekly data and (ii) analyze the distribution of security certificates using included time information covering time beyond the seven months of our measurements.

During seven months (February to August 2020), we were unable to observe significant improvements in the security configurations of OPC UA servers.