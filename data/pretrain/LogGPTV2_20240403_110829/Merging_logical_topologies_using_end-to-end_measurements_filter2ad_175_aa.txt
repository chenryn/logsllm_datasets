title:Merging logical topologies using end-to-end measurements
author:Mark Coates and
Michael G. Rabbat and
Robert D. Nowak
Merging Logical Topologies Using End-to-end
Measurements
Department of E.C.E.
McGill University
Mark Coates
Montreal, Quebec, Canada
PI:EMAIL
Michael Rabbat
Department of E.C.E.
Rice University
Houston, Texas
PI:EMAIL
Robert Nowak
Department of E.C.E.
Rice University
Houston, Texas
PI:EMAIL
ABSTRACT
Knowledge of network topology is useful for understanding
the structure of the Internet, for developing and testing new
protocols, and as prior information to network tomography
algorithms. Building on existing techniques for inferring a
single-source tree topology using end-to-end measurements,
we address the problem of merging multiple tree topologies.
We develop a multiple source active probing methodology
and statistical framework for testing whether the paths from
two sources to two receivers branch at a common internal
node. This information can then be used to determine where
portions of the tree topology from one source to a set of re-
ceivers overlap with the tree topology from a diﬀerent source
to the same set of receivers. The algorithm uses a novel
random probing structure and easily made measurements of
packet arrival order. As a result, we do not require precise
time synchronization among the participating hosts. Suc-
cessful experiments performed over a university LAN and
over the Internet verify that our methodology is versatile
and robust.
Categories and Subject Descriptors
C.4 [Performance of Systems]: Measurement Techniques;
C.2.1 [Computer-Communication Networks]: Network
Architecture and Design—network topology
General Terms
Algorithms, Measurement, Theory
Keywords
Network tomography, Topology discovery, End-to-end mea-
surement, Multiple-source network tomography, Packet ar-
rival order
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’03, October 27–29, 2003, Miami Beach, Florida, USA.
Copyright 2003 ACM 1-58113-773-7/03/0010 ...$5.00.
1.
INTRODUCTION
The physical topology of a network describes the connec-
tivity of the elements which comprise the network, including
switches, routers, hubs and hosts. Knowledge of the physical
topology of a network is extremely important for the suc-
cessful execution of many network management tasks such
as fault monitoring and isolation, server placement and re-
source sharing. The physical topology can be depicted as a
graph, with internal nodes representing switching elements
and edge nodes representing hosts (see the example in Figure
1). The routing topology of a network is related to the phys-
ical topology, and can be represented as a directed labelled
graph. Over a period of routing stability the routing topol-
ogy describes the paths traversed by packets sent from one
end-host to another. A debate has begun within the research
community as to properties of network topology graphs [13,
15]. Further understanding of these network properties will
lead to improvements in the design and testing of network
protocols.
Much work has been done in the area of identifying rout-
ing topologies using techniques based on information from
the network BGP tables, and based on the traceroute pro-
gram. Such work includes the Internet Mapping Project [7],
the Mercator project [14], Caida’s skitter project [1], and
Rocketfuel [19]. These techniques hinge on eliciting spe-
cial responses from internal network devices. Consequently,
these techniques fail when the internal devices do not be-
have as expected. Internal devices such as routers, switches,
and hubs may not elicit responses as expected either because
they have this feature turned oﬀ (ICMP TTL Exceeded re-
sponses are optional) or because they are not capable of
eliciting such responses (i.e. layer-2 devices). Barford et al.
report that in experiments conducted in 2001, 13% of the
internal nodes they encountered did not respond [3]. We
conjecture that this number will only increase as system
administrators disable this feature in routers due to rising
network security concerns.
Techniques based only on end-to-end measurements avoid
the problems experienced by traceroute-like techniques, as
they do not rely on internal network devices to do any-
thing more than route packets. However, end-to-end tech-
niques are only able to infer a subset of the physical routing
topology called the logical topology. Nodes in the physical
topology only appear as part of the logical topology if they
represent points in the network where the paths from two
sources to a receiver join (joining points), or if they repre-
sent points where the paths from a source to two receivers
A
a
B
d
c
f
b
1
C
i
A
a
b
c
B
d
e
f
C
g
A
a
B
C
d
= g
b
h
i
c
= e
i
h =
f
2
3
4
(a)
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
(b)
(c)
Figure 1: Physical and logical topologies of an example network. (a) The physical network showing routing
paths. Circles indicate internal network elements (switches and routers), squares A-C are sources, and
square 1-4 are receivers. Dot-dash lines are routes from source A, dashed lines routes from source B, and
solid lines routes from source C. (b) The three logical tree topologies that can be determined from the
individual sources (as might be estimated by the algorithms of [4, 8, 9]). This set of three topologies does
not reﬂect the equivalence, or even relative position, of the nodes.
In this case, node c is equivalent to
node e, node d to node g, and node f to node h. The unlabelled nodes in the physical topology do not
appear in the logical topologies. (c) The generalized logical topology of the multi-source network, showing
the correspondence between branching nodes in the logical tree topologies. This topology clearly indicates
how each source-destination path relates to all other paths.
branch (branching points). A single logical link is used to
connect two such nodes if there is a (traversed) physical
path between them. Logical links may encapsulate multiple
physical links and nodes which are traversed consecutively.
Figure 1(b) depicts logical topologies from the perspective
of each source in Figure 1(a), and Figure 1(c) depicts the
logical topology for the multiple source network.
While the logical topology does not describe the complete
routing topology, it may still be useful for the purpose of net-
work mapping when traceroute-based techniques fail. Addi-
tionally, the logical topology is relevant to network tomogra-
phy, where end-to-end measurements are used to infer net-
work internal properties such as delay distribution or packet
drop rate. Combining topology and performance informa-
tion is extremely useful for the evaluation of the resource
sharing capability of the network under the current conﬁg-
uration, and also can guide the decisions of source-based
routing algorithms. Thus, techniques which identify logi-
cal routing topologies using only end-to-end measurements
are useful both for ﬁlling in the holes where other network
mapping techniques fail and as an initial step in network
tomography algorithms.
In this paper we build upon existing techniques which in-
fer the logical tree topology by actively making end-to-end
measurements from a single source. Speciﬁcally, we inves-
tigate the problem of merging two single-source trees from
diﬀerent sources to a given set of receivers in order to obtain
the multiple-source, multiple receiver topology. We refer to
such topologies as general topologies, following [6], thereby
distinguishing them from the tree topologies that have been
the focus of much of the logical network topology discovery
literature [4, 8, 9, 11, 10, 12, 18]. The special responses
elicited by techniques based on traceroute contain an IP
address which can be used to identify internal nodes. How-
ever, because end-to-end measurements do not depend on
these special responses there is no easy way to label internal
nodes in an inferred logical topology such that the internal
nodes inferred by one source can be related to the nodes in
the logical topology inferred by another source when using
end-to-end measurements. Consequently, merging two log-
ical topologies is not a trivial task. We develop a multiple
source active probing procedure and statistical framework
for identifying where the paths from one source to a set of
receivers enter a diﬀerent source’s tree topology. This infor-
mation can then be used to relate internal nodes in the two
trees thereby merging the single-source topologies.
The active measurement procedure we present utilizes
semi-randomized probing at the sources, and packet arrival
order measurements made at the receivers. As a result,
no precise clock synchronization is necessary, signiﬁcantly
enhancing the applicability and robustness of the scheme.
Based on the arrival order of packets sent from multiple
hosts, the procedure makes decisions about the location
where the paths from one source to the receivers join the
tree topology of another source. Implementation of the al-
gorithm is easily accomplished using either unicast or mul-
ticast packets. Additionally, because our scheme only uses
end-to-end measurements, it can identify both layer-2 and
layer-3 network devices. We have explored the eﬃcacy of
the algorithm through experiments in a LAN environment
and over the Internet, using hosts located at universities in
North America and Europe.
1.1 Related Work
A number of authors have identiﬁed techniques that rely
solely on edge-based measurements to estimate the logical
network topologies that arise when a single source com-
municates with multiple receivers. The papers [11, 10, 12,
18] focus on topologies reﬂecting the routes taken by multi-
cast packets, whereas the papers [4, 8, 9] investigate unicast
topology identiﬁcation. All of the techniques assume that,
from the source’s point of view, the logical topology of a
single-source, multiple-receiver network is a tree and is sta-
ble over the measurement period. This assumption can be
violated by load balancing strategies and route changes.
The tree-oriented topology identiﬁcation schemes that uti-
lize solely end-to-end measurement involve three main steps.
Firstly, end-to-end measurements are made (e.g., end-to-end
loss, delay, and delay diﬀerences). Secondly, a set of “end-
to-end” metrics are estimated based on the measurements.
Examples of previously used metrics include counts of joint
loss events, delay covariances, and shared loss rates. In the
third step of the topology identiﬁcation schemes, inference
algorithms use the estimated metrics to identify the topol-
ogy.
A means of extending these tree identiﬁcation techniques
to the multiple-sender case is not clear. The schemes can
obviously be used to estimate the individual tree topologies
observed from each source in a multi-source tree, but the
measurements do not provide enough information to enable
reconstruction of the correspondence between the trees. In
no technique is there a logical extension from the single-
source probes to multiple-source probes that would provide
additional information.
In this paper, we develop a mea-
surement framework and inference scheme that permits es-
timation of the connections between the single-source trees.
There are several techniques that are capable of map-
ping multiple-source layer-3 physical topologies, but they
require that internal routers respond to ICMP requests and
identify themselves using their IP addresses. The Mercator
project [14], Caida’s skitter project [1], and the techniques
described in [3, 7] all use traceroute [2] in some form to de-
termine the path from a source to a receiver. In contrast to
the work presented here, these approaches focus on physical
topology identiﬁcation, combining traceroute measurements
collected over very long time frames. A much more impor-
tant distinction between these techniques and our proposed
procedure is that the traceroute-based methods fail when
a substantial portion of the topology is comprised of layer-
2 elements (bridges and switches) or when routers do not
respond to ICMP requests.
In addition to the procedures in [14, 1, 3, 7] that rely
only on ICMP responses, there are other approaches that
use SNMP information to generate network topology maps.
Many network management tools include features that use
SNMP information to map layer-3 physical topologies, e.g.,
IBM Tivoli Netview (www.tivoli.com). Other tools such as
Cisco’s Discovery Protocol (www.cisco.com) rely on vendor-
speciﬁc extensions to SNMP MIB (Management Informa-
tion Bases) to incorporate layer-2 elements; as a result they
are applicable only in homogeneous networks (where all ele-
ments are supplied by the same vendor). Breitbart et al. [5]
and Lowekamp et al. [16] describe procedures for deter-
mining physical topologies that include layer-2 elements for
more heterogeneous networks. These procedures rely only
on
SNMP MIB information.
Peregrine
Infratools Network Discovery
(www.peregrine.com) is a commercial tool that addresses
the same task. These latter tools focus primarily on phys-
ical topology, but it is possible to derive logical topologies
using them. However, all of the SNMP-based techniques re-
quire administrative access, which is typically only available
to machines on the local network. The techniques can there-
fore only generate topology information for the component
of the network where the user has administrative privileges.
universally
supported
Systems’
2. PROBLEM STATEMENT
Two key tasks comprise the problem of identifying the
unicast logical topology of a network comprised of multi-
ple sources and multiple receivers. The ﬁrst task is the
discovery of the tree topologies perceived by each source.
This is followed by the merger of the set of trees. Rather
than developing a scheme that jointly addresses both tasks,
we leverage existing techniques for identifying single-source
topologies [4, 8, 9] and focus on the merging problem.
For the sake of clarity, we distill the generalized merging
task into the following simpler problem and describe an ap-
proach to its solution throughout the remainder of the paper.
Assume that we know (or have estimated) the logical tree
topology from source C to multiple receivers. Can we de-
termine (using end-to-end measurements) where the paths
from another source A to each receiver enter the source C
tree topology? This simple problem lies at the heart of the
merging exercise; if we can accomplish this, then we can
develop a procedure that merges multiple trees.
A
C
a
a
b
c
d
a
a
e
a
f
a
g
1
2
3
4
5
6
7
8
9
Figure 2: Nine receiver example network illustrating
entry points. The solid lines and hollow circles de-
pict the tree topology from the perspective of source
C. The dashed lines and solid circles indicate where
the paths from source A to the receivers join the
topology (note that they do not depict the source A
topology).
Figure 2 provides an illustration of the desired result, de-
picting a nine receiver network. The logical tree topology
from the perspective of source C is shown by the solid lines
and hollow circles. Our task is to identify where the paths
from source A to each receiver join this tree, relative to the
hollow, labelled, nodes. These entry points are shown by
the solid circles. As examples, the path from A to receiver 1
enters at a point between nodes d and e, whereas the path to
receiver 7 enters above node a. Observe that internal node
a is the branching point for paths originating from sources
A or C and going to receivers 4 and 7. We call such a node
a shared branching point since it must be in the logical tree
topologies for both sources A and C, and thus it is shared by
both topologies. By knowing that a is a shared branching
point, we know that the paths from A to 4 and 7 join source