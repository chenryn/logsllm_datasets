339 1
Semantic Integration of Web services and Peer-
to-Peer Networks to Achieve Fault-tolerance
Jorge Cardoso
semantic Web services and a peer-to-peer infrastructure, (ii)
Abstract— One fundamental property that critical Web the semantic specification of Web service, peer interfaces and
services need to provide is a high level of availability. Along with peer advertisements.
the development of Web services, considerable technological
advances are being made to use the semantic Web to achieve the
II. WEB SERVICES, JXTA ARCHITECTURE, AND FAULT
automated processing and integration of data and applications.
This paper describes the implementation of the Whisper TOLERANCE
architecture. This architecture semantically integrates Web Web service computing is still in an evolving state and
services with a peer-to-peer infrastructure to increase service much research needs to be done to overcome complex issues
availability. Whisper achieves transparent fault-tolerance by
such as fault-tolerance and availability. Whisper architecture
automatically forwarding Web service requests to semantically
addresses precisely these limitations. It consists on the use of a
equivalent peers that are dynamically located, selected, and
invoked. P2P infrastructure that implements fault-tolerant mechanisms
to insure a high degree of availability of peers that are
Index Terms— Semantic Web, Web Services, Peer-to-Peer, responsible for executing Web services invoked by clients.
Fault-tolerance, Bully algorithm
A. Do Web services support fault-tolerance?
Web services do not support or make available any support
I. INTRODUCTION for fault tolerance; only mechanisms for error handling are
TH E vision of Service-Oriented Architectures (SOA) provided. Web services are composed of a messaging layer
promises a new paradigm providing an extremely flexible and a service description layer that have been standardized to
approach for building complex information systems. Service- ensure interoperability with the Simple Object Access Protocol
oriented architectures can rely on Web services to allow a (SOAP) and the Web Services Description Language (WSDL).
more efficient integration of applications and improve the Both layers only provide mechanisms for error handling. At
accessibility of business processes for customers and partners. the messaging layer, SOAP provides a  tag to
Current Web service specifications [1] do not provide inform a client about errors encountered while processing an
support to handle service failures and prevent service invocation message. Similarly, the WSDL description layer
downtime. It is therefore indispensable to start developing provides the  tag which specifies the abstract
solutions to increase the fault tolerance of SOA based on Web message format for any error that may be output as a result of
services. The purpose of our work is to provide a transparent a remote operation invocation. The mechanisms provided by
approach to enable a significant increase in the availability of SOAP and WSDL help handling errors raised by applications,
Web services. but no mechanism exists for handling failures and system
In this paper we describe the design and implementation of errors [2].
our fault-tolerant architecture called Whisper. We use B. Implementing fault-tolerance using a JXTA
emerging technologies, such as the semantic Web, Web
In our implementation we have selected the JXTA [3]
services, and peer-to-peer (P2P) networks, for building the
infrastructure to deploy a fault-tolerant peer-to-peer back-end
next-generation of service oriented systems. Currently, these
architecture due to: (a) the dynamic nature of the networks that
three technologies constitute the most promising solutions for
can be created, (b) the existence of the peer group concept,
distributed computing and their importance has been
and (c) its level of decentralization.
recognized in several major conferences (e.g. ISWC 2005,
WWW 2005, ICWS 2005, and P2P 2005). The specific
(a) Dynamic networks. JXTA networks are inherently
contributions of this paper are: (i) the design of a fault-tolerant
dynamic. By using a number of protocols, peers may join or
architecture which relies on the semantic integration of
publish advertisements at different times. For Whisper this
characteristic is important since it allows to dynamically
Manuscript received January 10, 2006. increasing the level of availability of a Web service by having
J. Cardoso is with the Department of Mathematics and Engineering, a higher number of peers responsible for the execution of Web
University of Madeira, 9050-390 Funchal, Portugal (phone: 291-705-156;
service requests.
fax: 291-705-199; e-mail: PI:EMAIL).
339 2
requires a certain functionality to be satisfied, it invokes or
(b) Peer groups. Peers groups are important for Whisper initiates an interaction with a Web service (1) by creating a
architecture since they allow the implementation of the SOAP request message (our prototype was implemented using
concept of semantically equivalent peers. Peers that belong to Axis SOAP 1.1 for Java (http://ws.apache.org/axis/)). The
a given semantic group implement the same functionality, but Web service receives the request and forwards it to the
possibly in a different way. Semantic Web Service proxy (SWS-proxy) (2). The proxy
contacts the JXTA infrastructure (3) and using the Semantic
(c) Decentralization. Web Services are based on a Discovery Service (4) locates a semantic group of peers (5)
centralized model and primarily focused on standardizing that can satisfy the client’s request. Once a suitable semantic
messaging formats and communication protocols. JXTA group of peers is found (6), the group is queried to find a peer
computing, on the other hand, is based on a decentralized (7) that will process the client’s request. Since peers
model. The decentralized model gives a natural approach to implement the Bully algorithm [4] (we call the peers that
develop self-healing and resilience architectures through implement the Bully algorithm b-peers), the b-peer found may
redundancy. This is precisely how Whisper achieves fault- not be the coordinator. Therefore, additional processing may
tolerance. need to be done to find the current coordinator of the semantic
group. When the coordinator is identified, it processes the
C. Fault-tolerance and redundancy
request and sends the results of the processing to the SWS-
Redundancy has long been used as a means of increasing the
proxy (8). The proxy translates the data received to a suitable
availability of distributed systems. In Whisper, redundancy is
format and sends the results to the semantic Web service (9)
achieved using the replication of business process
that will in turn send the results back to the client (10) that
functionalities. Typically, an application’s logic and data is
initially issued the request. In the following sections we
distributed on a cluster (group) of computer systems to ensure
describe the most relevant components of our architecture.
that it can tolerate any single hardware or software fault within
the cluster. The redundancy mechanism of Whisper makes
possible to also address scalability requirements through load- 1 We Cb l is ee nrv tice 10 tB h- ep e Be ur ls ly i m alp gl oe rm ite hn mt
Register Student
sharing, since peer services can be replicated among different Web server B-peer B Ontology
computers. We use static redundancy which means that all
Register Student Register Student
replicas implementing services are active at the same time. If Sem sa en rvti ic c eWeb B-peer A Reg Bis -t pe er eS rt u Ddent AdvS ee rm tia sn et mic e nt
one replica fails another replica is elected (using the Bully
Register Student Semantic
algorithm) and used immediately with little impact on response SWS-Proxy Reg Bis -t per e eS rt u Cdent Group Service
time. Using this approach a Web service invocation can be Student Information
Semantic Web Student
forwarded to peers located in different computers and service Information
networks. 2 9 B-peer A
Student Information 8
SWS-Proxy In BS f -ot pru m ed ee a rn t it Bo n In BS f -ot pru m ed ee a rn t it Co n
3
III. ARCHITECTURE Semantic
Other services Advertisement Semantic
To facilitate the understanding of Whisper architecture we Group Service
5 6 7
describe a running scenario which is illustrated in Figure 1.
The application shown has two Web services available to
JXTA 4 Semantic
clients: ‘Register Student’ and ‘Student Information’. The Discovery Service
‘Register Student’ service accepts a data structure describing a Fig. 1. Whisper architecture for Fault-tolerant Web Services
student (i.e., its name, address, degree, etc.), connects to a
A. Semantic Web services
relational database, stores student’s data, and returns the ID of
Traditional Web services are described using the Web
the newly created student record. The service ‘Student
Services Description Language (WSDL), which provide only
Information’ accepts as input a student ID, connects to a
syntactical information. However, WSDL poses a problem
relational database, retrieves the information of the student,
during the automatic discovery of peer groups to carry out the
and returns a structure with the information to the client.
actual execution of a Web service, since the use of syntactic
The actual implementation of these two Web services is not
information alone originates a high recall and low precision
provided with the Web services themselves, but it is provided
during the search [5].
by a JXTA network of peers. Each peer belongs to a semantic
Several researchers have pointed out that Web services
peer group. The peers of the same semantic peer group
should be semantically enabled [6-8] to develop distributed
implement the same service functionality, but possibly in a
applications over the Web due to its heterogeneity, autonomy,
different way. When a Web service is invoked by a client,
and distribution. Semantics articulate a well-defined set of
Whisper dynamically tries to find a semantic peer group that
common data elements or vocabulary allowing a rich
will be able to process the invoked Web service.
description of Web services which can be used by computers
The mechanics behind Whisper architecture are carried out
for an automatic or semi-automatic processing and
in the following sequence. When a business partner (client)
339 3
management of distributed applications. In Whisper, Web With the help of ontologies, the semantics or the meaning of
service are semantically annotated following the WSDL-S service data and functionality can be explicated. As a result,
specification [9]. JXTA peer groups are also semantically integration can be accomplished in an automated way and with