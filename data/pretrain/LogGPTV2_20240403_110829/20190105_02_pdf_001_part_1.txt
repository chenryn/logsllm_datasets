patroni 高可用搭建
神州飞象（北京）数据科技有限公司
All rights reserved
2017 版权所有 侵权必究
修订记录
变更标识
日期 版本 修改描述 作者
缺陷标识
2018年04月02日 0.1
patroni安装部署指南 第2页，共15页
目录
1 安装环境说明 ..........................................................................................................................4
2 运行环境搭建 ..........................................................................................................................5
2.1 安装openssl-devel、python-devel、libnl、jq、libnfnetlink-devel、haproxy、
watchdog（root） ....................................................................................................................5
2.2 Python2.7的搭建（root） ..........................................................................................5
2.3 pip的安装（root） ......................................................................................................6
2.4 创建系统用户（以下的普通用户均为这个用户）（root） ....................................6
2.5 建立日志目录（普通用户） .......................................................................................6
3 安装zookeeper ........................................................................................................................7
3.1 解压（root） ................................................................................................................7
3.2 安装（root） ................................................................................................................7
4 patroni安装与配置 ..................................................................................................................9
4.1 安装python模块包（root） ......................................................................................9
4.2 安装patroni（普通用户） ..........................................................................................9
4.3 配置patroni参数文件（普通用户） .........................................................................9
5 更改数据库参数 ....................................................................................................................13
6 加入自动中间件和复制程序的切换 .....................................................................................14
7 集群的启停 ............................................................................................................................14
7.1 关闭现有流复制集群主备库（普通用户） .............................................................14
7.2 修改pg_hba文件（普通用户） ...............................................................................14
7.3 启动 ............................................................................................................................14
7.4 修改pg_hba文件（普通用户） ...............................................................................14
7.5 启动zookeeper（root） ............................................................................................14
7.6 启动Patroni（普通用户） ........................................................................................15
patroni安装部署指南 第3页，共15页
Patroni 安装
1 安装环境说明
本例中安装patroni开源软件和patroni运行所需的中间件和数据库zookeeper、
patroni、 postgresql软件版本信息如下：
软件 版本
patroni patroni-1.4.3
zookeeper zookeeper-3.3.6
postgresql postgresql-10.1
Python,pip版本：
Python Python 2.7.5
pip pip 9.0.1 (python 2.7)
主机信息如下
系统非最小化安装，默认安装
IP地址 主机名 操作系统
198.168.191.140 test2 CentOS Linux release 7.4.1708 (Core)
198.168.191.143 test3 CentOS Linux release 7.4.1708 (Core)
198.168.191.142 test1 CentOS Linux release 7.4.1708 (Core)
所有用到的包均在百度云盘的压缩包中（patroni安装部署需要的包），请解压并按照步骤
使用里面的各个包
下载地址: https://pan.baidu.com/s/1nKT5nb180WlEDufj3pKS5Q 提取密码: wsll
2 运行环境搭建
2.1 安装 openssl-devel、python-devel、libnl、jq、
libnfnetlink-devel、haproxy、watchdog（root）
三个节点均需执行
patroni安装部署指南 第4页，共15页
解压:
tar -xvf package.tar.gz
cd ./package/package
分别进入openssl-devel、python-devel、libnl、jq、libnfnetlink-devel、watchdog目录，
用yum安装6个目录中的包:
yum install ./*
2.2 Python2.7 的搭建（root）
test3，test1节点执行
运行patroni需要python2.7以上版本。
查看python版本信息命令:
python --version
在centos7.4下，python的版本是2.7.5，不需要进行这一步！
这里用的是python2.7.1版本，下载地址
Python-2.7.1下载: https://www.python.org/ftp/python/2.7.1/Python-2.7.1.tar.bz2
安装2.7.1替换掉2.6.6
解压:
tar -jxvf Python-2.7.1.tar.bz2
进入目录：
cd Python-2.7.1
安装：
./configure
make all
make install
make clean
make distclean
查看版本信息:
/usr/local/bin/python2.7 -V
建立软连接，使系统默认的 python指向 python2.7：
mv /usr/bin/python /usr/bin/python2.6.6
ln -s /usr/local/bin/python2.7 /usr/bin/python
重新检验Python 版本
python -V
patroni安装部署指南 第5页，共15页
解决系统 Python 软链接指向 Python2.7 版本后，因为yum是不兼容 Python 2.7的，所
以yum不能正常工作，我们需要指定 yum 的Python版本：
vi /usr/bin/yum
将文件头部的
#!/usr/bin/python
改成
#!/usr/bin/python2.6.6
保存&退出！
2.3 pip 的安装（root）
test3,test1执行
安装setuptools：
cd /home/postgres/package/setuptools
python ./setup.py install
安装pip：
cd /home/postgres/package/pip
chmod +x setup.py
python ./setup.py install
pip --version
pip 9.0.1 from /usr/lib/python2.7/site-packages/pip-9.0.1-py2.7.egg
(python 2.7)
2.4 创建系统用户（以下的普通用户均为这个用户）（root）
三个节点均需执行
创建系统普通用户（后文标注的普通用户均为这个用户），定义密码：
useradd postgres
passwd postgres
2.5 建立日志目录（普通用户）
三个节点均需创建
mkdir -p /home/postgres/logfile/
mkdir -p /home/postgres/etcd
3 安装 zookeeper
3.1 解压（root）
三个节点均需执行
解压安装文件：
patroni安装部署指南 第6页，共15页
tar -xzvf zookeeper-3.3.6.tar.gz
3.2 安装（root）
三个节点均需执行
修改ZooKeeper配置文件
在其中一台机器上192.168.0.2，解压缩zookeeper-3.3.4.tar.gz，把conf目录下的
zoo_sample.cfg 复制成zoo.cfg文件，修改配置文件conf/zoo.cfg，内容如下所示：
tickTime=2000
dataDir=/root/zookeeper
dataLogDir=/home/postgres/logfile
clientPort=2181
initLimit=5
syncLimit=2
server.1=192.168.0.2:2888:3888
server.2=192.168.0.3:2888:3888
server.3=192.168.0.4:2888:3888
initLimit：这个配置项是用来配置 Zookeeper 接受客户端（这里所说的客户端不是用户
连接 Zookeeper 服务器的客户端，而是 Zookeeper 服务器集群中连接到 Leader 的
Follower 服务器）初始化连接时最长能忍受多少个心跳时间间隔数。当已经超过 10 个心
跳的时间（也就是 tickTime）长度后 Zookeeper 服务器还没有收到客户端的返回信息，
那么表明这个客户端连接失败。总的时间长度就是 5*2000=10 秒
syncLimit：这个配置项标识 Leader 与 Follower 之间发送消息，请求和应答时间长
度，最长不能超过多少个 tickTime 的时间长度，总的时间长度就是 2*2000=4 秒
server.A=B：C：D：其中 A 是一个数字，表示这个是第几号服务器；B 是这个服务器的
ip 地址；C 表示的是这个服务器与集群中的 Leader 服务器交换信息的端口；D 表示的是万
一集群中的 Leader 服务器挂了，需要一个端口来重新进行选举，选出一个新的 Leader，
而这个端口就是用来执行选举时服务器相互通信的端口。如果是伪集群的配置方式，由于 B
都是一样，所以不同的 Zookeeper 实例通信端口号不能一样，所以要给它们分配不同的端
口号。
第二步：远程复制分发安装文件
上面已经在一台机器192.168.0.2上配置完成ZooKeeper，现在可以将该配置好的安装文
件远程拷贝到集群中的各个结点对应的目录下
第三步：设置myid
在我们配置的dataDir指定的目录下面，创建一个myid文件，里面内容为一个数字，用来
标识当前主机，conf/zoo.cfg文件中配置的server.X中X为什么数字，则myid文件中就
输入这个数字。
第四步：启动ZooKeeper集群
在名节点的bin目录下执行：./zkServer.sh start
tailf zookeeper.out 可能发现如下异常
ARN [WorkerSender Thread:QuorumCnxManager@384] - Cannot open channel to 2
at election address slave-02/192.168.0.178:3888
patroni安装部署指南 第7页，共15页
java.net.ConnectException: Connection refused
at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
at
sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567
)
at sun.nio.ch.SocketAdaptor.connect(SocketAdaptor.java:100)
at
org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(Quorum
CnxManager.java:371)
at
org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxM
anager.java:340)
at
org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$Worke
rSender.process(FastLeaderElection.java:360)
at
org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$Worke
rSender.run(FastLeaderElection.java:333)
at java.lang.Thread.run(Thread.java:662)
2012-01-08 06:51:19,420 - WARN [WorkerSender
Thread:QuorumCnxManager@384] - Cannot open channel to 3 at election address
slave-03/192.168.0.177:3888
java.net.ConnectException: Connection refused
at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
at
sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:567
)
at sun.nio.ch.SocketAdaptor.connect(SocketAdaptor.java:100)
at
org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(Quorum
CnxManager.java:371)
at
org.apache.zookeeper.server.quorum.QuorumCnxManager.toSend(QuorumCnxM
anager.java:340)
at
org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$Worke
rSender.process(FastLeaderElection.java:360)
at
org.apache.zookeeper.server.quorum.FastLeaderElection$Messenger$Worke
rSender.run(FastLeaderElection.java:333)
at java.lang.Thread.run(Thread.java:662)
由于ZooKeeper集群启动的时候，每个结点都试图去连接集群中的其它结点，先启动的肯定连
不上后面还没启动的，所以上面日志前面部分的异常是可以忽略的。通过后面部分可以看到，
集群在选出一个Leader后，最后稳定了。
patroni安装部署指南 第8页，共15页
其他结点可能也出现类似问题，属于正常。
第五步：安装验证