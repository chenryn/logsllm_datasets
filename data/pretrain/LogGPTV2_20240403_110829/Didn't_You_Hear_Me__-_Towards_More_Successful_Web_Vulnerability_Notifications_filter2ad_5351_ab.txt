### Detailed Technical Report on Security Issues

#### A. Accessing the Report
We provided detailed technical reports on the security issues by either replying to our email messages or accessing our web interface (using a secret token). For each domain, we recorded whether and when we observed an email response or a website visit with the associated token. 

For the Friendly group, our initial message did not include detailed information about the security issues or any links. Instead, site operators were instructed to request more information. We marked the report as accessed when we replied with the report within 12 hours of receiving a request.

#### B. Email Delivery Status
To determine if message delivery failed for certain recipients, we checked the email inboxes of our senders for email bounces. For the Tracking group, we monitored retrievals of unique image resources, without logging IP addresses or other identifiers.

#### C. Experiment Parameters
On January 30th, 2017, we checked the Alexa Top 1M for the presence of one of the outlined security issues. We then randomly assigned the sites into seven groups, as shown in Table I: one for each email variant and an unnotified control group. All groups except for Friendly contained approximately 4,000 domains. The Friendly group was limited to 1,000 sites due to the manual interaction required. Initially, we considered core dumps but removed them during the experiment due to low recipient diversity. Additionally, administrators for 395 domains requested to opt out of any notification or further analysis. Table I shows the final population sizes for each group after these contacts were removed. The notification campaign started on February 3rd, 2017, and lasted six weeks, with two reminders sent on February 17th and March 3rd.

| Groups | Plain | S/MIME | Mailbot | Tracking | HTML | Friendly | Control |
|--------|-------|---------|---------|----------|-------|----------|---------|
| Git    | 1,561 | 1,559   | 1,560   | 1,548    | 1,565 | 367      | 1,561   |
| WP     | 2,371 | 2,374   | 2,371   | 2,370    | 2,371 | 585      | 2,373   |
| Total  | 3,932 | 3,933   | 3,931   | 3,918    | 3,936 | 952      | 3,934   |

**Table I: Size of Our Notification Groups**

#### D. Manual Notification Experiments
Automated email disclosures may be feasible but may not be the most effective method of notification. Prior work [19, 25] observed that a significant fraction of notified contacts exhibited no responses. To explore alternative notification options, we followed up our email notifications with five different forms of manual notifications, including communication channels that are challenging to automate. Given the manual nature of these efforts, we focused on websites that did not react to our notifications (i.e., those who did not remediate or respond to our messages). We reached out to email addresses, phone numbers, and postal addresses listed on affected websites, submitted "contact us" web forms, and searched for links to social media accounts on Twitter and Facebook. We describe the method behind our manual notifications in more detail in Section V. We collected the same measurements as with the automated email notifications.

#### E. Recipient Survey
Our automated and manual notification experiments allowed us to observe the externally visible effects of our outreach efforts. However, to gain insights into site operator perspectives, we distributed surveys to recipients who received the notifications. Our survey extends beyond those sent in prior studies [13, 19], which focused on the acceptability of the notifications. In our survey, we aim to understand the demographics of our recipients, their prior experiences with security notifications and reports, reasons behind the observed remediation behaviors, and suggestions for improvements to our notification process. The details of our survey are described in Section VI.

#### F. Ethical Considerations
We note that our primary institution does not provide an IRB nor mandate (or enable) approval for such experiments. However, we took great care to ensure the privacy of message recipients in our experiments. We designed our detection of security issues to minimize the impact on websites. To reduce load, we checked each site once a day, and our detection methods only required requesting a public static resource file, which does not interfere with normal server operations. We respected any opt-out requests and extensively tested our detection methods before deployment.

The ethics of performing security notifications are not fully settled, although prior studies [6, 13, 17, 19, 25] have set a precedent for acceptable notifications. Surveys in two prior studies [13, 19] documented the acceptability and helpfulness of these notifications. We believe that the potential good from informing vulnerable hosts outweighs the potential risks and costs. Following best practices, we respect requests to opt out of our notifications and offer a feedback channel through an anonymous survey for the notified organizations. We only collected data on organization decisions, not individuals, thus our study does not constitute human subjects research.

Our experiments relied on monitoring resource requests to our servers, which could potentially be used for tracking and violating the privacy of notification recipients. However, we employed safeguards to ensure that no private information was collected. We did not log IP addresses or any identifiers for any resource requests, except for the random token unique to each recipient. This allowed us to learn if that recipient or domain performed a specific action (visited our web interface or opened our email), and nothing else.

#### G. Remediation Behavior
Here, we describe the details of our automated email notifications and the observed remediation from affected sites.

##### A. Remediation Levels
Table II shows the number of remediated websites at the end of our campaign (March 17th, 2017). For the control group, 13% and 14% of the domains were fixed for Git and WP, respectively. For Git, the notified domains had a fix rate of approximately 24%, whereas for WP, the average fix rate was 17%. The impact of notifications for the WP groups may be influenced by WordPress’s automatic updates, deployed in late 2013 (with WordPress 3.7 [2]). We speculate that sites that did not automatically or quickly manually update to a new version (which implicitly fixed our targeted XSS vulnerabilities) were less actively maintained, reducing the likelihood that our outreach efforts would spur actions.

| Groups | Plain | S/MIME | Mailbot | Tracking | HTML | Friendly | Control |
|--------|-------|---------|---------|----------|-------|----------|---------|
| Git    | 403   | 403     | 363     | 383      | 420   | 203      | 25.8%   |
| WP     | 351   | 374     | 75      | 399      | 375   | 93       | 22.5%   |
| Total  | 16.2% | 16.8%   | 17.7%   | 15.8%    | 16.0% | 15.9%    | 14.2%   |

**Table II: Non-Exploitable Domains per Group and Vulnerability by March 17th, 2017**

##### B. Significance of Effects
To determine if our notification efforts had a statistically significant impact on remediation, we compared the fraction of the population remediated after six weeks for each notified group with that of the control group. Our null hypothesis was that the remediation levels for a given notified group did not differ from that of the control group. We used Fisher’s exact test to determine the significance of the observed improvements, with a significance threshold of α = 0.05. Since we tested multiple hypotheses, we applied the Holm-Bonferroni correction method [16].

| Groups | Plain | S/MIME | Mailbot | Tracking | HTML | Friendly |
|--------|-------|---------|---------|----------|-------|----------|
| Git    | 1.159 e-19 | 7.996 e-20 | 1.156 e-13 | 0.0570939 | 0.0008576 | 0.0882801 |
| WP     | 3.291 e-12 | 9.971 e-16 | 0.0004916 | 0.0114718 | 0.1127060 | 0.2948444 |

**Table III: Fisher’s Exact Test p Values**

For Git, we found that the null hypothesis was rejected for every notification group under the Holm-Bonferroni correction. Hence, all notification variants showed a significant improvement in remediation for Git groups. For WP, only the Mailbot group remediated at a statistically significantly higher level (after multi-test corrections). No group performed significantly better than all others.

##### C. Report Views and Conversion to Fixes Rate
Table IV shows the number (and fraction) of recipients per notification group that accessed our report and the likelihood that they remediated conditioned on viewing the report.

For Git, we observed that the plaintext notification groups exhibited an approximately 12% view rate. For HTML emails, 9-10% of the reports were accessed, indicating that the mail format influenced report viewing (albeit not statistically significantly). The usage of a linked resource did not result in differing user behavior compared to an HTML email with the image attached. The Friendly group had the highest overall report access rate with 13%, possibly because the initial message contained little technical information and required a response, and did not contain any links (which likely increases the spam score).

Figure 4 shows how reports were accessed over time. We observed a short burst of increased report accesses after our reminders for all notified groups, indicating that recipients do not ignore our reminders. However, this no longer translated into additional remediation by the second reminder. Across all message types, we found that Git website operators who viewed our report were likely to remediate correctly, with at least 72% of operators in each group addressing the issue.

For WP (Figure 5), we observed similar patterns in behaviors, with the Friendly group accessing the report at the highest rate, followed by the plaintext message groups, and finally the HTML message groups. Likewise, we observed increases in report views after reminders. The overall view rates and fix rates for those who viewed the report were lower than for Git websites.

**Figures:**
- **Figure 2: Non-exploitable Git domains over time**
- **Figure 3: Non-exploitable WP domains over time**
- **Figure 4: Viewed reports for Git**
- **Figure 5: Viewed reports for WP**

This structured approach ensures clarity, coherence, and professionalism in the presentation of the technical report.