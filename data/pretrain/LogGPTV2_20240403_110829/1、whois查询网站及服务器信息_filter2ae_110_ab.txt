  * OS侦测
#### 部署方式
  * Kail集成环境
  * 单独安装（使用yum、apt-get工具直接安装）
  * PentestBox环境
  * Windows版等等
#### Nmap使用
Nmap的参数和选项繁多，功能非常丰富。我们先来看一下Nmap的通用命令格式：`Nmap`（详细教程及下载方式参见：[]()
主机发现的原理与Ping命令类似，发送探测包到目标主机，如果收到回复，那么说明目标主机是开启的。Nmap支持十多种不同的主机探测方式，比如发送`ICMP
ECHO/TIMESTAMP/NETMASK`报文、发送TCPSYN/ACK包、发送`SCTP INIT/COOKIE-ECHO`包，用户可以在不同的条件下灵活选用不同的方式来探测目标机。
主机发现的基本用法
  * **-sL** : List Scan 列表扫描，仅将指定的目标的IP列举出来，不进行主机发现。 
  * **-sn** : Ping Scan 只进行主机发现，不进行端口扫描。 
  * **-Pn** : 将所有指定的主机视作开启的，跳过主机发现的过程。 
  * **-PS/PA/PU/PY[portlist]** : 使用TCPSYN/ACK或SCTP INIT/ECHO方式进行发现。 
  * **-PE/PP/PM** : 使用ICMP echo, timestamp, and netmask 请求包发现主机。
  * **-PO[protocollist]** : 使用IP协议包探测对方主机是否开启。
  * **-sP** : Ping 指定范围内的 IP 地址
    * **-n/-R** : -n表示不进行DNS解析；-R表示总是进行DNS解析。
  * **\--dns-servers **: 指定DNS服务器。
  * **\--system-dns** : 指定使用系统的DNS服务器
  * **\--traceroute** : 追踪每个路由节点
扫描局域网`192.168.80.1/24`范围内哪些IP的主机是活动的。命令如下：`nmap –sn 192.168.80.1/24`
由图可知：`192.168.80.1`、`192.168.80.254`、`192.168.80.166`三台主机处于存活状态。
扫描局域网`192.168.80.100-200`范围内哪些IP的主机是活动的。命令如下：`nmap –sP 192.168.80.100-200`
端口扫描是Nmap最基本最核心的功能，用于确定目标主机的TCP/UDP端口的开放情况。默认情况下，Nmap会扫描1000个最有可能开放的TCP端口。Nmap通过探测将端口划分为6个状态：
  * **open** ：端口是开放的。
  * **closed** ：端口是关闭的。
  * **filtered** ：端口被防火墙IDS/IPS屏蔽，无法确定其状态。
  * **unfiltered** ：端口没有被屏蔽，但是否开放需要进一步确定。
  * **open|filtered** ：端口是开放的或被屏蔽。
  * **closed|filtered** ：端口是关闭的或被屏蔽。
端口扫描方面非常强大，提供了很多的探测方式：
  * TCP SYN scanning
  * TCP connect scanning
  * TCP ACK scanning
  * TCP FIN/Xmas/NULL scanning
  * UDP scanning
  * 其他方式
  * **-sS/sT/sA/sW/sM** : 指定使用 TCP SYN/Connect()/ACK/Window/Maimon scans的方式来对目标主机进行扫描。
  * **-sU** : 指定使用UDP扫描方式确定目标主机的UDP端口状况。
  * **-sN/sF/sX** : 指定使用`TCP Null`,`FIN`,`and Xmas` scans秘密扫描方式来协助探测对方的TCP端口状态。
  * **\--scanflags **: 定制TCP包的flags。
  * **-sI[zombiehost[:probeport]](zombiehost\[:probeport\])**: 指定使用idle scan方式来扫描目标主机（前提需要找到合适的zombie host）
  * **-sY/sZ** : 使用SCTP INIT/COOKIE-ECHO来扫描SCTP协议端口的开放的情况。 
  * **-sO** : 使用IP protocol 扫描确定目标机支持的协议类型。
  * **-b **: 使用FTP bounce scan扫描方式 
  * **-p** ： 指定端口扫描
在此，我们以主机192.168.80.166为例。命令如下：`nmap -sS -p0-65535 -T4 192.168.80.166`
参数`-sS`表示使用TCP SYN方式扫描TCP端口；`-p0-65535`表示扫描所有端口；`-T4`表示时间级别配置4级；
扫描特定端口是否开放：`nmap -p21,80,445,3306 192.168.80.166`
简要的介绍版本的侦测原理。版本侦测主要分为以下几个步骤：
  * 首先检查`open`与`open|filtered`状态的端口是否在排除端口列表内。如果在排除列表，将该端口剔除。
  * 如果是TCP端口，尝试建立TCP连接。尝试等待片刻（通常6秒或更多，具体时间可以查询文件`nmap-services-probes`中`Probe TCP NULL q||`对应的totalwaitms）。通常在等待时间内，会接收到目标机发送的“WelcomeBanner”信息。nmap将接收到的`Banner`与`nmap-services-probes`中`NULL` probe中的签名进行对比。查找对应应用程序的名字与版本信息。
  * 如果通过“Welcome Banner”无法确定应用程序版本，那么nmap再尝试发送其他的探测包（即从nmap-services-probes中挑选合适的probe），将probe得到回复包与数据库中的签名进行对比。如果反复探测都无法得出具体应用，那么打印出应用返回报文，让用户自行进一步判定。
  * 如果是UDP端口，那么直接使用`nmap-services-probes`中探测包进行探测匹配。根据结果对比分析出UDP应用服务类型。
  * 如果探测到应用程序是SSL，那么调用openSSL进一步的侦查运行在SSL之上的具体的应用类型。
  * 如果探测到应用程序是SunRPC，那么调用`brute-force RPC grinder`进一步探测具体服务。
  * **-sV** : 指定让Nmap进行版本侦测
  * **\--version-intensity **: 指定版本侦测强度（0-9），默认为7。数值越高，探测出的服务越准确，但是运行时间会比较长。
  * **\--version-light** : 指定使用轻量侦测方式 (intensity 2)
  * **\--version-all** : 尝试使用所有的probes进行侦测 (intensity 9)
  * **\--version-trace** : 显示出详细的版本侦测过程信息。
对主机`192.168.80.166`进行版本侦测。命令如下：`nmap -sV -p0-65535 -T4 192.168.80.166`
Nmap使用TCP/IP协议栈指纹来识别不同的操作系统和设备。在RFC规范中，有些地方对TCP/IP的实现并没有强制规定，由此不同的TCP/IP方案中可能都有自己的特定方式。Nmap主要是根据这些细节上的差异来判断操作系统的类型的。
Nmap内部包含了2600多已知系统的指纹特征（在文件nmap-os-db文件中）。将此指纹数据库作为进行指纹对比的样本库。分别挑选一个open和closed的端口，向其发送经过精心设计的TCP/UDP/ICMP数据包，根据返回的数据包生成一份系统指纹。将探测生成的指纹与nmap-os-db中指纹进行对比，查找匹配的系统。如果无法匹配，以概率形式列举出可能的系统。
  * **-O** : 指定Nmap进行OS侦测。 
  * **\--osscan-limit** : 限制Nmap只对确定的主机的进行OS探测（至少需确知该主机分别有一个open和closed的端口）。 
  * **\--osscan-guess** : 大胆猜测对方的主机的系统类型。由此准确性会下降不少，但会尽可能多为用户提供潜在的操作系统。 
命令：`nmap –O 192.168.80.166`
  * **-vv** ： 详细显示扫描状态  
`nmap -p21,80,445,3306 -vv 192.168.80.166`
  * **\--script** ： 使用nse脚本，也可自行编写nse脚本，nmap有580多个脚本
`nmap --script=auth 192.168.80.166`
  * **\--script=brute** ： 对弱口令进行暴力破解  
`nmap --script=brute 192.168.80.166`
  * **\--script=default** ： 使用默认nse脚本搜集应用的信息  
`nmap --script=default 192.168.80.166`
  * **\--script=vuln** ： 检测常见漏洞  
`nmap --script=vuln 192.168.80.166`
#### 优劣势
优势：
  * 功能灵活强大，支持多种目标，大量计算机的同时扫描；
  * 开源，相关帮助文档十分详细；
  * 流行，由于其具有强大的扫描机探测功能，，已被成千上万安全专家使用。
劣势：
  * Nmap参数众多，难以一一记忆；
### 10、DirBuster
DirBuster是一款路径及网页暴力破解的工具,可以破解出一直没有访问过或者管理员后台的界面路径。Java运行环境+DirBuster程序包
  * 双击运行`DirBuster.jar`
  * 在URL中输入目标URL或者主机IP地址
  * 在`file with list of dirs/files` 栏后点击browse，选择破解的字典库为`directory-list-2.3-small.txt`
  * 将File extension中填入正确的文件后缀，默认为`php`，如果为`jsp`、`asp`、`aspx`页面，需要填入`jsp`、`asp`、`aspx`
  * 同样可以选择自己设置字典，线程等等
  * 其他选项不变，点击右下角的start，启动目录查找
  * 观察返回结果，可点击右下角的report，生成目录报告
优点：
  * 敏感目录发掘能力强
  * OWASP安全机构极力推荐
缺点：
  * 探测目录依赖字典文件