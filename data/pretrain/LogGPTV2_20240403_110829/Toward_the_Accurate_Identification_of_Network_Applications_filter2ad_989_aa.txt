# Toward the Accurate Identification of Network Applications

**Authors:**
- Andrew W. Moore, University of Cambridge
- Konstantina Papagiannaki, Intel Research, Cambridge

## Abstract

Traditional port numbers can no longer be relied upon for accurately identifying network applications. Many new Internet applications either avoid using well-known ports or employ other protocols, such as HTTP, to bypass firewalls. This results in inaccuracies when classifying network traffic based solely on port numbers. In this study, we analyze these inaccuracies in detail using a full payload packet trace from an Internet site. We develop a classification methodology that relies on the full packet payload and describe its building blocks and associated challenges. Our approach, though labor-intensive, achieves near-perfect accuracy by testing flow characteristics against multiple criteria. The benefits of content-based classification are significant, enabling accurate identification of otherwise unknown or misclassified traffic. This work highlights several research issues for future exploration.

## 1. Introduction

Network traffic monitoring has gained significant attention recently, with a key focus on identifying the different applications utilizing network resources. This information is crucial for network administrators and designers, as it allows for efficient design and provisioning. Understanding the traffic mix carried by an IP network enables operators to meet the diverse needs of users and track the growth of different user populations. Additionally, accurate application identification can reveal emerging trends and potential misuse of network resources.

Current methods for identifying network applications through traffic monitoring rely on well-known port numbers. However, this approach is often inaccurate due to the frequent use of specific protocols, like HTTP, to relay other types of traffic. Furthermore, new services often avoid using well-known ports. This paper introduces a method for accurate application identification using packet payload information. We compare our content-based method with traditional port-based classification, highlighting the benefits and trade-offs.

The rest of the paper is organized as follows: Section 2 describes the data used in this study. Section 3 details our content-based classification technique. Section 4 presents the application of our method and compares the results with port-based classification. Section 5 outlines our future work.

## 2. Collected Data

This study employs an application-level approach to characterizing network traffic, using data collected from a high-performance network monitor. The site under examination hosts several biology-related facilities, collectively referred to as a Genome Campus, which employs about 1,000 researchers, administrators, and technical staff. The campus is connected to the Internet via a full-duplex Gigabit Ethernet link, where our monitor was placed. Traffic was monitored for a full 24-hour period on a weekday, in both directions.

Table 1 summarizes the traffic data collected. Other observed protocols, including IPv6-crypt, PIM, GRE, IGMP, NARP, and private encryption, accounted for fewer than one million packets (less than 0.06%) over the 24-hour period. All percentage values provided are based on the total number of UDP and TCP packets.

| **Protocol** | **Total Packets** | **Percentage of Total** |
|-------------|------------------|------------------------|
| TCP         | 573,429,697      | 98.596%                |
| ICMP        | 268,543          | 0.077%                 |
| UDP         | 1,516            | 0.077%                 |
| OTHER       | 3,588            | 0.077%                 |

## 3. Methodology

### 3.1 Overview of Content-Based Classification

Our content-based classification scheme is an iterative process aimed at gaining sufficient confidence in the identity of the application causing a particular traffic stream. The method operates on traffic flows rather than individual packets, allowing for more efficient processing and context acquisition. The first step is to aggregate packets into flows based on their 5-tuple. For TCP, additional semantics help identify the start and end times of the flow.

One outcome of this process is the identification of unusual or simplex flows, which consist of packets exchanged between a specific port/protocol combination in only one direction. These flows, often caused by invalid or non-responsive destination hosts, were classified as carrying worm or virus attacks. Removing simplex flows significantly reduced the number of unclassified flows requiring further processing.

### 3.2 Identification Methods

Our scheme applies nine distinct identification methods, listed in Table 2, each testing a specific property of the flow to identify the causal application.

| **Method** | **Description** | **Example Application** |
|------------|-----------------|-------------------------|
| I          | Port-based classification (only) | Many worm/virus |
| II         | Packet Header (including I) | IDENT, SMTP |
| III        | Single packet signature | FTP |
| IV         | Single packet protocol | VNC, CVS |
| V          | Signature on the first KByte | P2P |
| VI         | First KByte Protocol | - |
| VII        | Selected flow(s) Protocol | FTP control port |
| VIII       | (All) Flow Protocol | - |
| IX         | Host history | - |

Figure 1 illustrates the complexity and data requirements of each method. Our current methodology involves applying each method in sequence, with more complex or data-intensive methods used only if simpler methods do not generate a match. Manual intervention is required to validate the classification, resolve cases with multiple matches, or inspect unclassified flows.

![Requirements of Identification Methods](fig1_requirements.png)

## 4. Application and Results

We applied our content-based classification method to the collected data and compared the results with a port-based classification. The comparison highlighted the inaccuracies of port-based methods and the benefits of our approach. Our method successfully identified traffic that would otherwise be classified as unknown or misclassified.

## 5. Future Work

Future work will focus on automating the classification process and evaluating its real-time implementation requirements. We also plan to refine the upper bound for the amount of packet information needed for application identification and explore additional research issues.

---

**Note:** Figure 1 and Table 1 should be updated with the actual data and images.