Baltimore, MD, 2018. USENIX Association.
[17] Dan Boneh and Ramarathnam Venkatesan. Hardness of com-
puting the most signiﬁcant bits of secret keys in difﬁe-hellman
and related schemes. In Advances in Cryptology — CRYPTO
’96, pages 129–142. Springer Berlin Heidelberg, 1996.
[18] Joachim Breitner and Nadia Heninger. Biased nonce sense:
Lattice attacks against weak ECDSA signatures in cryptocur-
rencies. In Financial Cryptography and Data Security, pages
3–20. Springer International Publishing, 2019.
[19] Billy Bob Brumley and Nicola Tuveri. Remote timing attacks
are still practical. In Vijay Atluri and Claudia Díaz, editors,
Computer Security - ESORICS 2011 - 16th European Sym-
posium on Research in Computer Security, Leuven, Belgium,
September 12-14, 2011. Proceedings, volume 6879 of Lecture
Notes in Computer Science, pages 355–371. Springer, 2011.
[20] David Brumley and Dan Boneh. Remote timing attacks are
In USENIX Security 2003: 12th USENIX Secu-
practical.
rity Symposium, Washington, DC, USA, August 4–8, 2003.
USENIX Association.
[21] Yuanmi Chen and Phong Q. Nguyen. BKZ 2.0: Better lattice
security estimates.
In Dong Hoon Lee and Xiaoyun Wang,
editors, Advances in Cryptology - ASIACRYPT 2011 - 17th
International Conference on the Theory and Application of
Cryptology and Information Security, Seoul, South Korea, De-
cember 4-8, 2011. Proceedings, volume 7073 of Lecture Notes
in Computer Science, pages 1–20. Springer, 2011.
[22] Scott A. Crosby, Dan S. Wallach, and Rudolf H. Riedi.
Opportunities and limits of remote timing attacks. ACM Trans.
Inf. Syst. Secur., 12(3):17:1–17:29, January 2009.
[23] Fergus Dall, Gabrielle De Micheli, Thomas Eisenbarth, Daniel
Genkin, Nadia Heninger, Ahmad Moghimi, and Yuval Yarom.
Cachequote: Efﬁciently recovering long-term secrets of sgx
epid via cache attacks. IACR Transactions on Cryptographic
Hardware and Embedded Systems, Volume 2018:Issue 2–,
2018.
[24] Ivan Damgård. A design principle for hash functions.
In
Gilles Brassard, editor, Advances in Cryptology – CRYPTO’89,
volume 435 of Lecture Notes in Computer Science, pages 416–
427, Santa Barbara, CA, USA, August 20–24, 1990. Springer,
Heidelberg, Germany.
[25] The FPLLL development team. fplll, a lattice reduction library.
Available at https://github.com/fplll/fplll, 2016.
[26] T. Dierks and C. Allen. The TLS Protocol Version 1.0. RFC
2246 (Proposed Standard), January 1999. Obsoleted by RFC
4346, updated by RFCs 3546, 5746, 6176, 7465, 7507, 7919.
[27] T. Dierks and E. Rescorla. The Transport Layer Security (TLS)
Protocol Version 1.1. RFC 4346 (Proposed Standard), April
2006. Obsoleted by RFC 5246, updated by RFCs 4366, 4680,
4681, 5746, 6176, 7465, 7507, 7919.
[28] T. Dierks and E. Rescorla. The Transport Layer Security (TLS)
Protocol Version 1.2. RFC 5246 (Proposed Standard), August
2008. Obsoleted by RFC 8446, updated by RFCs 5746, 5878,
6176, 7465, 7507, 7568, 7627, 7685, 7905, 7919, 8447.
[29] Kristen Dorey, Nicholas Chang-Fong, and Aleksander Essex.
In 24th
Indiscreet logs: Difﬁe-hellman backdoors in TLS.
Annual Network and Distributed System Security Symposium,
NDSS 2017, San Diego, California, USA, February 26 - March
1, 2017. The Internet Society, 2017.
[30] Donald Eastlake, Joseph Reagle, Frederick Hirsch, Thomas
Roessler, Takeshi Imamura, Blair Dillaway, Ed Simon, Kelvin
Yiu, and Magnus Nyström. XML Encryption Syntax and
Processing 1.1. W3C Candidate Recommendation, 2012.
http://www.w3.org/TR/2012/WD-xmlenc-core1-20121018.
[31] P. Eronen (Ed.) and H. Tschofenig (Ed.). Pre-Shared Key
Ciphersuites for Transport Layer Security (TLS). RFC 4279
(Proposed Standard), December 2005.
[32] Ronald A Fisher. On the interpretation of χ 2 from contingency
tables, and the calculation of p. Journal of the Royal Statistical
Society, 85(1):87–94, 1922.
[33] Karl Pearson F.R.S. X. on the criterion that a given system
of deviations from the probable in the case of a correlated
system of variables is such that it can be reasonably supposed
to have arisen from random sampling. The London, Edinburgh,
and Dublin Philosophical Magazine and Journal of Science,
50(302):157–175, 1900.
[34] Nick Howgrave-Graham and Nigel P. Smart. Lattice attacks
on digital signature schemes. Des. Codes Cryptogr., 23(3):283–
290, 2001.
[35] Tibor Jager, Florian Kohlar, Sven Schäge, and Jörg Schwenk.
On the security of TLS-DHE in the standard model. Cryptol-
ogy ePrint Archive, Report 2011/219, 2011. http://eprint.
iacr.org/2011/219.
228    30th USENIX Security Symposium
USENIX Association
[36] Tibor Jager, Florian Kohlar, Sven Schäge, and Jörg Schwenk.
On the security of TLS-DHE in the standard model. In Rei-
haneh Safavi-Naini and Ran Canetti, editors, Advances in Cryp-
tology – CRYPTO 2012, volume 7417 of Lecture Notes in
Computer Science, pages 273–293, Santa Barbara, CA, USA,
August 19–23, 2012. Springer, Heidelberg, Germany.
[37] David Jao, Dimitar Jetchev, and Ramarathnam Venkatesan. On
the bits of elliptic curve Difﬁe-Hellman keys. In K. Srinathan,
C. Pandu Rangan, and Moti Yung, editors, Progress in Cryp-
tology - INDOCRYPT 2007: 8th International Conference in
Cryptology in India, volume 4859 of Lecture Notes in Com-
puter Science, pages 33–47, Chennai, India, December 9–13,
2007. Springer, Heidelberg, Germany.
[38] M. Jones and J. Hildebrand. JSON Web Encryption (JWE).
RFC 7516 (Proposed Standard), May 2015.
[39] C. Kaufman, P. Hoffman, Y. Nir, and P. Eronen. Internet Key
Exchange Protocol Version 2 (IKEv2). RFC 5996 (Proposed
Standard), September 2010. Obsoleted by RFC 7296, updated
by RFCs 5998, 6989.
[40] Vlastimil Klíma, Ondrej Pokorný, and Tomás Rosa. Attacking
RSA-based sessions in SSL/TLS. In Colin D. Walter, Çetin
Kaya Koç, and Christof Paar, editors, Cryptographic Hardware
and Embedded Systems – CHES 2003, volume 2779 of Lecture
Notes in Computer Science, pages 426–440, Cologne, Ger-
many, September 8–10, 2003. Springer, Heidelberg, Germany.
[41] H. Krawczyk, M. Bellare, and R. Canetti. HMAC: Keyed-
Hashing for Message Authentication. RFC 2104 (Informa-
tional), February 1997. Updated by RFC 6151.
[42] Hugo Krawczyk, Kenneth G. Paterson, and Hoeteck Wee. On
the security of the TLS protocol: A systematic analysis. In Ran
Canetti and Juan A. Garay, editors, Advances in Cryptology
– CRYPTO 2013, Part I, volume 8042 of Lecture Notes in
Computer Science, pages 429–448, Santa Barbara, CA, USA,
August 18–22, 2013. Springer, Heidelberg, Germany.
[43] A. Langley, N. Modadugu, and B. Moeller. Transport Layer
Security (TLS) False Start. RFC 7918 (Informational), August
2016.
[44] H. B. Mann and D. R. Whitney. On a test of whether one
of two random variables is stochastically larger than the other.
Ann. Math. Statist., 18(1):50–60, 03 1947.
[45] Robert Merget, Juraj Somorovsky, Nimrod Aviram, Craig
Young, Janis Fliegenschmidt, Jörg Schwenk, and Yuval Shavitt.
Scalable scanning and automatic classiﬁcation of TLS padding
oracle vulnerabilities. In Nadia Heninger and Patrick Traynor,
editors, USENIX Security 2019: 28th USENIX Security Sympo-
sium, pages 1029–1046, Santa Clara, CA, USA, August 14–16,
2019. USENIX Association.
[46] Christopher Meyer, Juraj Somorovsky, Eugen Weiss, Jörg
Schwenk, Sebastian Schinzel, and Erik Tews. Revisiting SS-
L/TLS implementations: New Bleichenbacher side channels
and attacks. In Kevin Fu and Jaeyeon Jung, editors, USENIX
Security 2014: 23rd USENIX Security Symposium, pages 733–
748, San Diego, CA, USA, August 20–22, 2014. USENIX
Association.
[47] Elke De Mulder, Michael Hutter, Mark E. Marson, and Pe-
ter Pearson. Using Bleichenbacher’s solution to the hidden
number problem to attack nonce leaks in 384-bit ECDSA.
In Guido Bertoni and Jean-Sébastien Coron, editors, Cryp-
tographic Hardware and Embedded Systems – CHES 2013,
volume 8086 of Lecture Notes in Computer Science, pages 435–
452, Santa Barbara, CA, USA, August 20–23, 2013. Springer,
Heidelberg, Germany.
[48] Elke De Mulder, Michael Hutter, Mark E. Marson, and Peter
Pearson. Using bleichenbacher’s solution to the hidden number
problem to attack nonce leaks in 384-bit ECDSA: extended
version. Journal of Cryptographic Engineering, 4(1):33–45,
feb 2014.
[49] Phong Q. Nguyen. The dark side of the hidden number
problem: Lattice attacks on DSA. In Cryptography and Com-
putational Number Theory, pages 321–330. Birkhäuser Basel,
2001.
[50] Phong Q. Nguyen and Igor E. Shparlinski. The insecurity of
the digital signature algorithm with partially known nonces.
Journal of Cryptology, 15(3):151–176, jun 2002.
[51] Phong Q. Nguyen and Igor E. Shparlinski. The insecurity
of the elliptic curve digital signature algorithm with partially
known nonces. Des. Codes Cryptogr., 30(2):201–217, 2003.
[52] NIST. Recommendation for Pair-Wise Key-Establishment
Schemes Using Discrete Logarithm Cryptography. Special
Publication 800-56A Rev. 3, April 2018.
[53] Thomas Pornin. BearlSSL, a small SSL/TLS library. https:
//bearssl.org.
[54] E. Rescorla and N. Modadugu. Datagram Transport Layer
Security Version 1.2. RFC 6347 (Proposed Standard), January
2012. Updated by RFCs 7507, 7905.
[55] Eric Rescorla. The Transport Layer Security (TLS) Protocol
Version 1.3. RFC 8446, 2018.
[56] Eyal Ronen, Robert Gillham, Daniel Genkin, Adi Shamir,
David Wong, and Yuval Yarom. The 9 lives of bleichen-
bacher’s CAT: New cache ATtacks on TLS implementations.
In 2019 IEEE Symposium on Security and Privacy, pages
435–452, San Francisco, CA, USA, May 19–23, 2019. IEEE
Computer Society Press.
[57] Eyal Ronen, Kenneth G. Paterson, and Adi Shamir. Pseudo
constant time implementations of TLS are only pseudo secure.
In David Lie, Mohammad Mannan, Michael Backes, and Xi-
aoFeng Wang, editors, ACM CCS 2018: 25th Conference on
Computer and Communications Security, pages 1397–1414,
Toronto, ON, Canada, October 15–19, 2018. ACM Press.
[58] C. P. Schnorr. A hierarchy of polynomial time lattice basis
reduction algorithms. Theoretical Computer Science, 53(2-
3):201–224, 1987.
[59] ETSI Technical Committee Cyber Security.
ETSI TS
https://www.etsi.org/deliver/
103 523-3 V1.2.1.
etsi_ts/103500_103599/10352303/01.02.01_60/ts_
10352303v010201p.pdf.
[60] Juraj Somorovsky. Systematic fuzzing and testing of tls li-
braries. In Proceedings of the 2016 ACM SIGSAC Conference
on Computer and Communications Security, pages 1492–1504.
ACM, 2016.
USENIX Association
30th USENIX Security Symposium    229
Figure 4: Running time of the SHA-256 ﬁnalize function for
inputs of varying lengths, measured in CPU cycles. Reported
values are medians across 10,000 experiments per key length,
performed with OpenSSL version 1.1.1.
Figure 5: Running time of the SHA-256 update function for
inputs of varying lengths, measured in CPU cycles. Reported
values are medians across 10,000 experiments per key length,
performed with OpenSSL version 1.1.1.
[61] Drew Springall, Zakir Durumeric, and J. Alex Halderman.
Measuring the security harm of tls crypto shortcuts. In Pro-
ceedings of the 2016 Internet Measurement Conference, IMC
’16, page 33–47, New York, NY, USA, 2016. Association for
Computing Machinery.
[62] Akira Takahashi, Mehdi Tibouchi, and Masayuki Abe. New
bleichenbacher records: Fault attacks on qdsa signatures. IACR
Transactions on Cryptographic Hardware and Embedded Sys-
tems, Volume 2018:Issue 3–, 2018.
[63] The Sage Developers.
Software
Mathematics
https://www.sagemath.org.
System (Version
SageMath,
the Sage
2020.
9.1),
[64] Luke Valenta, David Adrian, Antonio Sanso, Shaanan Cohney,
Joshua Fried, Marcella Hastings, J. Alex Halderman, and Nadia
Heninger. Measuring small subgroup attacks against Difﬁe-
Hellman. In ISOC Network and Distributed System Security
Symposium – NDSS 2017, San Diego, CA, USA, February 26 –
March 1, 2017. The Internet Society.
A Exploiting OP
Following Subsection 6.1 (see Figure 3), we now discuss
mounting the attack using OP, the Key Padding Oracle. To
recap: The computation time of HMAC-SHA256 exhibits
small “steps” when the input key length is 128·k−i,1 ≤ i ≤ 8.
In particular, when using a 1024-bit (128 bytes) DH modulus,
there is a measurable timing difference when the MSB is zero.
Unlike previous oracles discussed in this work, this oracle
allows attacking commonly-used modulus sizes, albeit at a
much greater cost due to the smaller timing difference.
Our closer analysis revealed that this timing difference
stems from the “ﬁnalize” function of the hash implementa-
tion. Figure 4 presents the (median) running time of this
function for each input length. In broad terms, for inputs
which are slightly shorter than a full block, the call to “ﬁ-
nalize” must execute an additional internal call to the hash
compression function. Contrast with Figure 5 which shows
the running time of the “update” function; Figure 3 shows the
total running time for computing HMAC-SHA-256, which
includes both functions as internal calls, and therefore shows
both step-like behaviors.
We repeated the calculation from Subsection 6.1 for this
smaller side channel. With 1,000 samples per case (2,000 mea-
surements overall), and a 20% false positive rate, the false
negative rate is 7.72%.10 Increasing the number of measure-
ments to 20,000 achieved a false positive rate of 0.004170%
and a false negative rate of 0.012530%.11 Repeating the same
calculation from Subsection 6.1, the attack therefore requires
roughly 302 million handshakes with the target server in to-
tal (compared to 22 million handshakes when exploiting the
easier case of exploiting OH, as described in Subsection 6.1).
These numbers are not necessarily optimal.
10As before, we estimated these rates using 200,000 experiments.
11We estimate these rates using 10 million sets of randomly-sampled
20,000 measurements. We further note that we conﬁgured the test with a
false positive rate of 0.01%, but obtain a lower false positive rate. This could
be an artifact of the approximations the test uses internally.
230    30th USENIX Security Symposium
USENIX Association