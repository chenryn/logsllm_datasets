# Title: In Advance Activation of Backup Channels for Real-Time Transmission

## Authors:
- Enrique Hernández-Orallo
- Joan Vila Carbó

## Affiliation:
Departamento de Informática de Sistemas y Computadores (DISCA)  
Universidad Politécnica de Valencia  
Camino de Vera s/n, 46022 Valencia, Spain  
Phone: +34 963 879 577 | Fax: +34 963 877 579  
Email: [PI:EMAIL], [PI:EMAIL]

---

## 1. Introduction
This paper evaluates the PBC (Preemptive Backup Channel) scheme in Integrated Services Networks. The evaluation confirms previous experiments published in 2000 [9].

---

## 2. Integrated Services
To facilitate multimedia transmission over the Internet, the Internet Engineering Task Force (IETF) established the Integrated Services (IntServ) Working Group [4]. This group has defined several protocols and service types to ensure a requested Quality of Service (QoS). IntServ guarantees QoS by setting up a real-time channel for each individual flow, reserving specific network resources. This is typically achieved through resource reservation protocols like RSVP. The IETF has introduced different levels of service, such as the guaranteed QoS [6], which uses a token bucket model to describe the flow.

### 2.1 Obtaining Network Reservations
In Integrated Services, the end-to-end delay bound is a function of the reserved bandwidth on the links, calculated using a traffic specification model and a network model. The traffic specification (T-SPEC) for IETF's guaranteed service is based on a token bucket. T-SPEC is a 4-tuple (p, M, b, r), where p is the peak rate, M is the maximum packet size, b is the burst tolerance, and r is the sustainable rate. The number of bits transmitted by the source must be less than min(M + pt, b + rt) for any time interval t.

The maximum end-to-end queuing delay bound can be calculated using the following equation [6]:
\[
D = \frac{b + C_{\text{tot}}}{R - r} + \frac{M + D_{\text{tot}} R}{R - p}
\]
where \(C_{\text{tot}}\) and \(D_{\text{tot}}\) are the parameters defining the network, \(R\) is the bandwidth reservation, and \(D\) is the end-to-end delay. The buffer size required at the nodes is given by \(b + C_{\text{sum}} + D_{\text{sum}} r\), where \(C_{\text{sum}}\) and \(D_{\text{sum}}\) are the sums of all the previous \(C_i\) and \(D_i\) parameters. It is important to note that the network's minimal latency must be added to the above equation to obtain the complete delay. This latency is a fixed value and is usually negligible compared to the network delay.

Solving for \(R\) in the above equation, we get a simple expression for \(R(d)\) that depends on the delay, traffic specification, and network model:
\[
R(d) = f(d, (b, r, p), (C_{\text{tot}}, D_{\text{tot}}))
\]

The network parameters \(C_{\text{tot}}\) and \(D_{\text{tot}}\) are obtained as the sum of the \(C_i\) and \(D_i\) parameters defining each node in the flow path. For example, with a Weighted Fair Queuing (WFQ) scheduling algorithm, \(D_i\) is equal to the Maximum Transmission Unit (MTU) of the link divided by the link bandwidth \(B_i\), with the condition that \(M\) must be smaller than the minimal MTU of the path. The value \(C_i\) is assumed to be \(M\) to account for packet fragmentation.

In [8], the authors introduced a method to obtain the traffic specification for a known traffic that minimizes the bandwidth reservation for a given end-to-end delay for IETF guaranteed service. This method is extensible to leaky bucket traffic specifications, such as the end-to-end delay equations based on the seminal work by Parekh and Gallaguer [19][20]. In summary, for a given traffic and network path, we can directly obtain the minimal bandwidth reservation for a given end-to-end delay, i.e., the function \(R(d)\).

For example, using the sample network in Figure 1, with three nodes and the same network parameters for primary and secondary channels, the network parameters are \(C_{\text{tot}} = 32,768\) bits and \(D_{\text{tot}} = 0.00109\) seconds. For the MPEG1 Rose Soccer traffic trace, the minimal bandwidth reservation for a 0.1-second delay is 2,432,184 b/s. The traffic specification is \(b = 207,793\) bits and \(r = 2,432,184\) (with \(p = 4,679,400\) constant and obtained as the peak rate of the traffic). Figure 2 shows the minimal bandwidth reservation for the MPEG1 Rose traffic traces Lambs, Soccer, and News as a function of the required delay ranging from 0s to 5s. As shown, the bandwidth reservation \(R(d)\) is a decreasing function.

### 2.2 Analytical Evaluation
The goal of this section is to compare the resource reservations of the PBC scheme with the other two schemes introduced in Section 2. Given an end-to-end delay \(d_{\text{total}}\), it is straightforward to obtain the total reservation using the \(R(d)\) function, as shown in Figure 2.

First, we must split the total delay between both channels (\(d_A\), \(d_B\)). For the RBC (Reactive Backup Channel) and PBC schemes, this will depend on the failure detection time \(d_f\). Without loss of generality, in this analytical evaluation, \(d_f\) will be \(d_{\text{total}}/2\).

Using the sample network from the previous section and the Rose Lambs traffic, Table 1 shows the results of the total bandwidth reservation in a node for two end-to-end delays: 0.1s and 1s. In all samples, the false failures rate (\(\Phi\)) is assumed to be 0.001, following the delay distribution in Figure 1. The Reduction column shows the reduction in resources of the PBC new scheme versus the other schemes: Reduction = 100 * (1 - \(R_{\text{PBC}} / R_X\))^2 (assuming the resources of the backup channel could be used by the router when the channel is not in use).

| \(d_{\text{total}}\) | Scheme | Reservation Calculation | Total (Mb/s) | Reduction (%) |
|---------------------|--------|-------------------------|--------------|---------------|
| 1s                  | MC     | 2 × R(0.1)              | 1.93         | 49.74         |
|                     | RBC    | R(0.05)                 | 1.51         | 35.76         |
|                     | PBC    | R(0.1) + 0.001 × R(0.05)| 0.97         | ---           |
| 0.1s                | MC     | 2 × R(0.05)             | 1.26         | 49.9          |
|                     | RBC    | R(0.025)                | 0.68         | 7.35          |
|                     | PBC    | R(0.05) + 0.001 × R(0.025)| 0.63         | ---           |

It is evident that the bandwidth reduction versus the MC schemes is nearly constant and close to 50%. Therefore, we will focus on comparing the PBC and RBC schemes. Generally, resource savings are more significant as the total deadline becomes more restrictive. The resource gain depends mainly on the difference between the bandwidth reservation obtained for \(d\) and \(d/2\).

Figure 3 graphically illustrates this difference for the Lambs traffic with deadlines between 0 and 1s (a typical range of deadlines). It shows that the peak of resource savings occurs at a deadline of 0.14s. From 0.14 to 0.25s, the savings decrease significantly and then decrease very slowly. Figure 4 shows the total gain for all Lambs, Soccer, and News traffics in the network. For the Soccer traffic, the curve is very different; the gain is high for very low deadlines but decreases quickly until 0.07s and then increases linearly. The News traffic is similar to the Lambs traffic, with a peak gain of 42%. The results for other network configurations are very similar (see [9] for a detailed study).

---

**Figures and Tables:**

- **Figure 1: Sample Network**
- **Figure 2: \(R(d)\) Function for Lambs, Soccer, and News Traffics**
- **Figure 3: Resource Savings for Lambs Traffic**
- **Figure 4: Total Gain for Lambs, Soccer, and News Traffics**

**Table 1: Bandwidth Reduction for Lambs Traffic**

---

This revised version aims to improve the clarity, coherence, and professionalism of the original text.