"Usage By IP Address"
。图4-2是生成饼图脚本的运行结果。
ssosppu dI hg eaesn
www.TopSage.com
.xxx.xxx.xxx
.xxx.xxx.xxx
---
## Page 159
较，来查看通过ReportLab库如何成功获得各种各样的可视化效果。
也就是说，运行测试时，会生成一系列PDF文件，你可以将这些PDF与测试代码进行比
如果已经下载了ReportLab源码版本，就可以使用其中包含的测试作为示例驱动文档。
World”字样。
的PDF文件。如果运行这段代码，会得到一个空白的PDF文件，在文件底部有“Hello
file_obj.write()方法。最后，由showPage()方法停止绘制，使用save()方法创建实际
一个canvas对象。接下来使用drawString()方法，该方法等同于处理文本文件时使用的
在创建“Hello World” PDF文件的过程中，有一些需要注意的地方。首先，我们创建
hello()
def hello():
from reportlab.pdfgen import canvas
#!/usr/bin/envpython
例4-3:"Hello World" PDF
布版本可供使用。
使用Ubuntu，可以搜索适合于你所使用操作系统的安装包。无论如何，总有一个源码发
安装ReportLab，可以简单地使用apt-getinstall python-reportlab命令。如果没有
pdf。除了阅读本章之外，我们强烈建议你阅读ReportLab的官方文档。为了在Ubuntu上
以在ReportLab PDF库中查看一些示例，地址为http://www.reportlab.com/docs/userguide.
在PDF库中，最重量级的库是ReportLab。ReportLab有自由版本和商业版本两种。你可
将能够创建各种PDF报告，例如网络应用情况、用户账号等。我们还将描述如何使用
员，知道如何创建易读的PDF文档可以使自己的生活变得轻松。在阅读本节之后，你
PDF已经成为主流，我们总是希望所有的文档都可以转化为PDF格式。作为系统管理
另外一种对数据文件中的信息进行格式化的方法，是将信息保存在PDF文件中。现在
PDF
中添加信息也极其简单。
图使得保存在shelve文件中的数据十分易于阅读，两种图也都很容易创建，同时，向其
在饼图中，唯一的问题是IP地址有可能会与具体的字节数值叠在一起显示。柱状图和饼
c.save()
C.showPage()
www.TopSage.com
文档与报告丨145
二
---
## Page 160
def create_pdf(input,output="disk_report.pdf"):
#!/usr/bin/env python
例4-4：PDF磁盘报告
来创建一个自定义磁盘使用情况报告。这样的报告是非常有用的。参见例4-4。
现在已经演示了如何使用ReportLab来创建PDF，接下来，让我们看看如何使用ReportLab
textobject函数用于创建一个放在PDF中的对象。我们先通过调用beginText()创建了
Report”（磁盘容量报告）字样。完成这样一个功能仅用了如此少的几行代码，肯定会
这段代码会产生一个报告来显示当前磁盘的使用情况，包括时间戳和“DiskCapacity
report = disk_report()
def disk_report():
from reportlab.pdfgen import canvas
import datetime
通过添加颜色和图片，可以创建更为复杂的PDF文件。至于如何实现，可以通过阅读
一行进行选代处理。值得注意的是这里使用line.strip()来删除换行字符。如果没有这
本边界。之后，通过将字符串写入文本对象来创建标题，最后对df命令的执行结果的每
中创建了一个格式化的时间戳。而本示例中最重要的部分是textobject函数。
是简单地获得df -h命令的输出，并将其作为列表返回。接下来，在create_pdf()函数
给你留下深刻印象。接下来看一下本示例中的一些亮点。首先，disk_report()函数只
import subprocess
146
样做，在换行符处会看到黑色方块。
寸的文档，因此为了能从页面的最顶端进行打包，我们告诉text对象在11英寸处设置文
一个textobject对象。然后，定义了数据打包的方法。这里使用的PDF大约为8.5×11英
C.save()
C = canvas.Canvas(output)
return p.stdout.readlines()
p = subprocess.Popen("df -h", shell=True,
c.showPage()
c.drawText(textobject)
textobject.textLines(
textobject=c.beginText()
textobject.textLine(line.strip())
%date)
第4章
www.TopSage.com
---
## Page 161
 #!/usr/bin/env python
然后，
首先，我们定义了email服务器的主机和端口号，也定义了“to”和“from”地址。
s.quit()
S = smtplib.SMTP(mail_server, mail_server_port)
body = 'This is a not-very-interesting email.'
to_header=
from_header = 'From: %s\r\n' % from_addr
to_addr = 'PI:EMAIL
importsmtplib
例4-5：使用SMTP发送消息
包将邮件发送至邮件服务器。
析和产生email。例4-5中使用smtplib建立一个包含邮件信息的字符串，然后使用email
RFC中关于SMTP协议的各种描述的接口。它可以发送email。另一个包是email，帮助解
在Python中有两个不同的包允许你发送电子邮件。一个是低级别的包smtplib，是针对
发送基本信息
用Python来完成各种各样的email任务。
及的比较少。由于所有的系统管理员都对自动发送email感兴趣，本节将向你展示如何使
生警告和报警信息。Python标准库对于发送emai提供了强有力的支持，只是我们之前提
处理email是系统管理的一个重要内容。不仅要管理email服务器，还需要通过email来产
发送email
用FTP。下一章将讨论Python标准FTP模块的使用。
文档通过email发送给其接收者。如果需要将文档发送到web服务器供用户查看，可以使
在获得并格式化数据之后，需要将其分发给对其感兴趣的人。这一节将主要讲述如何被
信息发布
的部分是文本对象，文本对象可以收集和保留数据并最终输出数据。
ReportLab PDF库中非常不错的用户指南得到答案。通过这些示例可以看到其中最重要
，通过连接邮件头与邮件体建立了email邮件。最后，连接到SMTP服务器，并从
'PI:EMAIL
'localhost'
'Subject: nothing interesting'
www.TopSage.com
文档与报告丨147
PDG
---
## Page 162
Python实现了邮件的自动发送。现在，让我们从这一简单的基本示例出发，转到使用
n”专门对From:和To:进行了格式化。
from_addr发送到to_addr。应该注意到的是，为了与RFC规定相兼容，这里使用“\r\
email_message = “%s\n%s\n%s\n\n%s' % (from_header, to_header, subject_header, body)
例4-6：SMTP认证
应工作。例4-6是一个包含了SMTP认证的示例。
是，有一些SMTP服务器会强迫你使用认证，因此上面的示例在许多情况下无法完成相
上一个示例非常简单，对于使用Python发送email来说简单得有些微不足道。但不幸的
使用SMTP认证
Python中的电子邮件可以完成的更有趣的一些事情上。
在第10章的“调度Python进程”部分有一个创建cron作业的代码示例，该示例使用
starttls()方法启动了SSL。使用认证时启动debugging是一个非常好的做法。如果我们
其中，主要的差别在于定义了用户名和密码，启动了debuglevel，然后通过使用
S = smtplib.SMTP(mail_server, mail_server_port)
body = 'This mail tests SMTP Authentication'
subject_header =
from_header = 'From: %s\r\n'
from_addr = *PI:EMAIL'
查看一下失败的调试会话，会看到如下内容：
ma
s.quit()
148
il_server_port=465
$ python2.5 mail.py
reply: '250-ETRN\r\n
reply:
reply:
reply:
reply:
reply:
send:
第4章
'PI:EMAIL'
'250-DSN\r\n'
'ehlo example.com\r\n'
'250-8BITMIME\r\n'
'250-PIPELINING\r\n'
'smtp.example.com'
'Subject: Testing SMTP Authentication'
, to_addr, email_message)
"mysecretpassword")
% from_addr
www.TopSage.com
H
PDG
---
## Page 163
rapey aans = [aans]
m= MIMEMultipart()
from_addr = 'PI:EMAIL'
import email
例4-7：发送带PDF 附件的email
接来到发送带附件的邮件部分。参见例4-7。
表。由于系统管理是非常需要耐心的，这里跳过了令人乏味的对MIME起源的介绍，直
信息，它允许对邮件的附件进行编码。在本章前面部分，我们介绍了如何创建PDF报
仅发送包含文本的邮件已经跟不上潮流了。使用Python我们可以使用MIME标准来发送
import mimetypes
使用Python发送附件
含错误处理代码的脚本可以简单地解决。
邮件时，通过命令localhost attempt to send mail，许多其他潜在的问题通过编写包
:
subject_header
功
直接拒绝。类似这种问题的处理方法十分简单，在试图使用级联服务器系统来发送电子
在这个示例中，我们试图用来初始化SSL的服务器没有提供对SSL的支持，因此将我们
xppeo =[01]
his message sends a PDF attachment created with Report
ody=
rom email import encoders
rom email.MIMEText import MIMEText
send: 'STARTTLS\r\n'
DELIVERBY
8BITMIME
ENHANCEDSTATUSCODES
reply: retcode (250); Msg: example.com example.com [127.0.0.1], pleased to meet you
reply:
HELP
DSN
SIZE
reply:
reply: '250-DELIVERBY\r\n'
PIPELINING
'250 HELP\r\n'
'Subject: Sending PDF Attachemt'
www.TopSage.com
文档与报告丨149
PDG
---
## Page 164
尝试的事情。
特征和性能的工具，或许你需要一些更简单的工具，不管哪种情况这确实是值得做更多
我们建议你对Trac是否可以满足自己的需要做进一步的尝试。或许你需要一些具有更多
以通过web界面报告输人的票数，甚至产生一个CSV报告。再说一次，Trac涵盖了这一
类似地，订票系统允许用户根据工作的需要提出请求，或是报告他们遇到的问题。你可
这有利于其他用户通过浏览器查看。这是在这一章中多次讨论过的。
化和发布。wiki允许用户通过浏览器创建web页面。他们添加的信息以HTML格式显示，
之所以在此提到Trac，是因为它非常适合我们所讨论的所有三个类别：信息收集，格式
方是它可以通过插件来扩展。
但是它对解决订票系统中的一般性故障，是非常好的工具。Trac的另一个非常有趣的地
到Trac的文档及安装包。这里不打算涉及Trac的更多细节，因为这超出了本书的范围。
订票系统，就可以使用Trac。Trac在Python下编写。你可以在http:/trac.edgewall.org/找
Trac是一个wiki和问题追踪系统，其典型应用是软件开发。但是只要你想使用wiki或是
Trac
150
电子邮件发送出去。
在这里，我们使用了一些小技巧，对之前创建的磁盘报告PDF文件进行编码，然后通过
章讨论的所有内容。
s.quit()
's.sendmail(from_addr, to_addr, m.as_string())
m.attach(msg)
msg.add _header("Content-Disposition", "attachment", filename=attachment)
msg.set_payload(fp.read())
m.attach(MIMEText(body))
print maintype, subtype
maintype, subtype = ctype.split('/', 1) 
print ctype,encoding
ctype, encoding = mimetypes.guess_type(attachment)
= smtplib.SMTP("localhost")
第4章
'rb')
www.TopSage.com
---
## Page 165
以使枯燥的文档处理工作变得更有生趣一些。
处理。但是简单明了的文档是系统管理的一个重要内容。我们希望本章中的一些技巧可
有工作中最吸引眼球的一项，甚至在记录文件时，你可能还没有意识到是在对文档进行
对其感兴趣的用户手中的方法。正如我们在本章开始时所说的，处理文档或许不是你所
种不同的更适合发布的格式，如HTML、PDF和PNG。最后，我们查看了将信息传送到
在本章中，我们介绍了自动和手工进行数据收集的方法。也介绍了如何将数据整合为各
本章小结
www.TopSage.com
文档与报告|151
---
## Page 166
socket模块提供了工厂函数socket（）。socket（）函数会返回一个socket对象。为了定义
本章集中介绍如何使用标准的socket库（也可能是建立在socket基础之上的其他库）编
更感兴趣的不是计算机之间的相互通信，而是进程之间的相互通信。对于我们将要介绍
说到网络，通常会涉及对多台计算机进行连接，保证它们之间可以相互通信。但是我们
网络
socket的类型，需要传递给socket（）一些参数。如果不带参数调用socket（）工厂函数，
socket模块为操作系统的socket连接提供了一个Python接口。这表示使用Python，
的。Python标准库中包括了许多已经实现的网络客户端代码。这一章，我们将讨论一些
在客户端连接到服务器之前，服务器一直处于等待状态，因此，连接是由客户端发起
网络客户端
写Python程序，连接其他进程，并与其他进程进行交互。
的技术而言，进程是在同一台计算机上还是在不同的计算机上无关紧要。
第5章
其返回的socket对象默认使用TCP/IP协议：
networking库都可以完成哪些操作。
作，本章将会给出一个网络编程的简要说明。这会给你一个大体印象，即使用Python的
以完成任何使用socket或对socket进行处理的操作。如果之前没有做过任何网络编程工
socket
更为通用的、经常被使用的客户端。
In[3]:s.connect（('192.168.1.15′,80))
In[2]:s=socket.socket()
In[1]:import socket
www.TopSage.com
可
---
## Page 167
#!/usr/bin/env python
例5-1：TCP端口检查
可以证明这个web服务器仍在工作，并且它仍旧在侦听某些端口。参见例5-1。
建一个连接到该web服务器上的socket连接。这几乎是一个最小规模的监测程序，但是却
一个web服务器。现在希望查看该服务器，以确认在经历了一整天运行之后，仍可以创
现在，让我们看一个更有用的示例。假定有一个运行某些网络应用程序的服务器，例如
数据是非常容易的。
socket之间的连接。这一简单的示例表明了创建socket对象，并通过该对象发送和接收
对象向远端发送数据。recv()用于接收远端发送的任何数据。close()则用于关闭两个
远程对象（即“不是当前的socket对象”）之间建立通信连接。send()用于从socket
本例中演示的socket方法可能是你最常使用的方法。connect()用于在socket对象与
器响应的前200个字节，这200字节包含状态信息和HTTP头信息。最后，关闭连接。
HTTP/1.0\n\n"（一个简单的HTTP请求）发送到服务器。发送完毕之后，它会收到服务
import socket
web服务器，指定端口号为HTTP默认的端口号80。接下来，它将文本字符串"GET，
该示例通过socket()工厂函数创建一个名为s的socket对象。它连接到本地默认的