CoNLL2012 corpus‚Äô verb sense frames [57]. The common arguments
for purposes are Argm-Prp and Argm-Pnc, i.e., argument modifier
purpose and purpose-not-cause, respectively. Table 2 presents some
Session 10D: Applied Privacy CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2826Data Action
Sharing
Collection
Use
Sender
Arg0
Arg2
N/A
Receiver Data
Arg2
Arg0
Arg0
Arg1
Purpose
Argm-Prp
or
Argm-Pnc
Example
[We]Arg0 do not [share]V [your data]Arg1 [with third parties]Arg2 [for their purposes]Argm-Pnc.
[We]Arg0 [collect]V [passwords]Arg1 [for authentication]Argm-Prp.
[We]Arg0 may [process]V [your contact information]Arg1 [to send you promotions]Argm-Prp.
Table 2: Mapping from semantic roles to privacy statement parameters. V denotes a predicate (i.e., verb).
examples. Besides the common purpose arguments, PurPliance an-
alyzes additional arguments for certain predicates to identify their
purposes, such as Arg2 of use and save. The list of these predicate-
specific purpose arguments is shown in Table 12 (Appendix A).
A verb may have multiple meanings, such as "save" which means
either to save money or to collect (accrue) things. The latter meaning
is more relevant in our context of data collection. We verified that
arguments of different senses of the data practice verbs have the
same meaning for the purpose of our privacy statement extraction,
and hence we do not disambiguate the verb senses in this analysis.
We consider three forms of purpose clauses that either (1) start
with "to" followed by a base-form verb, (2) start with "in order to"
followed by a base-form verb, or (3) start with "for" followed by a
gerund (a noun derived from a verb ending with -ing) or a noun. The
first two forms are the standard identification of purpose clauses in
English [34, 37, 46]. The third form is common in privacy policies,
such as in "for providing services" or "for the purposes of ..."
3.2 Classification of Policy Purposes
3.2.1 Uncompounded Purpose Extraction. Since multiple simple
purposes are commonly combined into complex purpose clauses,
PurPliance decomposes them into simple single-purpose parts,
called uncompounded purposes, similar to contextual sentence de-
composition [10, 19] used to improve information extraction. There-
fore, each complex purpose clause is simplified into a set of uncom-
pounded purposes, each of which is represented by a predicate-
object (PO) pair. A PO pair (p,o) consists of a predicate (verb) ùëù
that acts on an object ùëú. For example, "to provide and improve our
services" is decomposed into (provide, our services) and (improve,
our services). Similarly, each noun phrase np can be converted to
a PO pair with an empty predicate (‚Äò‚Äô, np). For example, "for fraud
prevention and service maintenance" produces "fraud prevention"
and "service maintenance". Table 13 shows some PO-pair examples.
Each PO pair is extracted by first identifying the predicates
and then their objects as its arguments. To extract a predicate,
PurPliance finds words with a verb part of speech, excluding sub-
sumptive relation verbs (e.g., including and following). Predicates
also include past participles used as adjectives, such as "person-
alized content." The objects are then the noun phrases in each
identified predicate‚Äôs arguments. Similarly, PurPliance creates PO
pairs whose predicates are empty and objects are the longest non-
overlapping noun phrases extracted from the purpose clause by
using a noun phrase extraction technique [26].
3.2.2 Purpose Taxonomy. We extracted uncompounded purpose
clauses from a large collection of privacy policies and categorized
them into semantically-similar groups to create a taxonomy of
purposes. This process of creating a purpose taxonomy is different
from data-object and entity ontologies [7] because privacy policies
do not have subsumption expressions for purposes as commonly
used for data types and entities, e.g., "personal information includes
email address and name". First, from the privacy policy corpus,
purpose clauses were extracted as described in Section 4. Purpose
phrases with invalid prefixes (not beginning with "to", "for" or "in
order to" + V) or empty PO pairs were filtered out. Uncompounded
phrases were then created by concatenating the predicate and the
object of each PO pair of the extracted purpose clauses. Finally,
uncompounded purpose clauses with the number of occurrences
greater than a threshold ùúè were selected to construct a taxonomy.
The uncompounded purpose clauses are grouped into seman-
tically similar groups by using text clustering [44]. Each clause
was converted into real-value vectors using roberta-large-nli-stsb-
mean-tokens, a BERT-based sentence embedding model trained on
semantic textual similarity datasets [58]. The vectors were grouped
into ùõæ clusters by K-means clustering [61]. The number of em-
bedding groups was chosen heuristically by visualization using
t-SNE [43] and by balancing the trade-off between granularity and
complexity of the taxonomy.
We chose to use a small number of high-level groups to keep
the taxonomy simple while still achieving the goal of detecting
contradictions and inconsistencies. From 17k privacy policies, 392k
uncompounded purpose clauses were extracted. 6,068 unique un-
compounded purpose clauses were then selected using frequency
threshold ùúè = 5. This threshold was empirically chosen to remove
noisy rare purpose clauses while shortening the t-SNE visualization
time so that we can iteratively develop purpose-clusters without
losing common purpose clauses. We conducted an iterative process
of adjusting the number of classes and categorizing PO pairs to the
selected classes until only a small number of PO pairs do not fit the
taxonomy. ùõæ = 16 was chosen for 15 clusters with a concrete pur-
pose and 1 cluster with Other purpose. Provide ad and Personalize ad
are separated for fine-grained classification. Providing ad indicates
to only deliver, show, or provide advertising while personalizing
ad indicates to customize, personalize, or tailor advertising. Since
the purposes in the Other class are unrecognized purpose clauses,
they do not have relationships (e.g., subsumption) with each other
and are thus excluded from the consistency analysis.
Based on the economic activities of businesses [38], the ùõæ low-
level classes were further grouped into high-level categories: Pro-
duction, Marketing, Legality, and Other categories. In the taxonomy,
a low-level purpose is an instance of (i.e., has a subsumptive rela-
tionship with) the corresponding high-level purpose. For example,
Provide ad is a Marketing purpose. In addition, we consider Person-
alize ad to be subsumed under Provide ad and Personalize service. If
a service personalizes ads, then it provides ads, but not vice versa,
because an ad can still be displayed without being personalized to
the user‚Äôs interest. The taxonomy is listed in Table 3‚Äôs left half.
3.2.3 Data-Usage Purpose Classifier. PurPliance classifies pur-
pose clauses by matching patterns of ùëõ-grams (e.g., words and
Session 10D: Applied Privacy CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2827High-level
Production
Low-level
Provide service
Improve service
Personalize service
Develop service
Manage service
Manage accounts
Process payments
Security
Marketing
Customer commun-
ication
Marketing analyt-
ics
Promotion
Provide ad
Personalize ad
General marketing
General legality
Other purposes
Predicate Patterns
provide, deliver
improve
personalize,
customize
base
track, detect
administer, manage
create, manage
process, complete
detect, investigate,
prevent
authenticate, verify
notify
send
resolve
analyze
send
provide, deliver
personalize, target
Object Patterns
service, app, product
location service
issue, bug
service, app, product
account
payment, transaction
breach, fraud
user, identity
user
update
inquiry
usage, trend
promotion, reward
advertising,
advertisement
marketing
term, right
law
enforce
comply
Legality
Other
Table 3: Left half: high- and low-level purposes in the data
usage purpose taxonomy; Right half: examples of patterns
of the predicates and objects in purpose clauses.
bigrams) on lemmas of predicates and objects in the PO pairs of
purpose clauses. We observe patterns that do not depend on the
statement context, so matching such ùëõ-gram context-insensitive
patterns provides precise classification. Moreover, PurPliance may
classify one clause into multiple categories. For example, "provide
personalized services" would be classified into Provide service and
Personalize service.
To develop patterns and evaluate classification performance,
we first extracted purpose clauses from all privacy policies and
randomly divide them into training and test sets. 198,339 purpose
clauses were extracted from our privacy policy corpus of 16.8k
unique privacy policies. The training and test sets have 158,671
(80%) and 39,668 (20%) purpose clauses, respectively.
Patterns were developed on the training set which is disjoint
from the test set. We randomly selected 1000 sentences in the train-
ing set and classified them until reaching a desirable coverage. The
patterns covered 46% of the training set and 44% of the test set. The
right half of Table 3 lists some example patterns on PO pairs.
To evaluate the classifier‚Äôs precision, we randomly selected pur-
pose clauses from the test set and classified them until each purpose
class in the taxonomy contains at least 30 samples. The extracted
purposes were then independently verified with the purpose taxon-
omy (Table 3) by two co-authors. Their disagreements were resolved
via follow-up discussions. Of 510 randomly-selected samples in the
test set, PurPliance achieved 97.8% precision on average. This
high precision of the classifiers is due partly to the use of strict
rule-based matching. The precision score of each purpose class is
shown in Table 14 (Appendix C).
4 PRIVACY STATEMENT EXTRACTION
4.1 Definition of Privacy Statement
Each sentence in a privacy policy is formalized as a privacy state-
ment which has two components: Data Collection which is the
transfer of data to a receiver and Data Usage which represents the
usage of the data and its purpose.
Definition 4.1 (Privacy Statement). A privacy statement is a pair
(ùëëùëê, ùëëùë¢) where ùëëùëê (ùëëùë¢) represents data collection (usage). ùëëùëê = (ùëü, ùëê, ùëë)
denotes whether or not a receiver ùëü collects (ùëê ‚àà {collect, not_collect})
a data object ùëë. ùëëùë¢ = (ùëë, ùëò, ùëù) represents whether or not data ùëë is used
for (ùëò ‚àà {for, not_for}) an entity-sensitive data usage purpose ùëù.
The data usage can be a special ùëÅùëúùëõùëí value when the statement
does not specify any purpose for the data collection or PurPliance
cannot extract the purpose from a sentence. While a privacy state-
ment can be represented as a flat 5-tuple (ùëü, ùëê, ùëë, ùëò, ùëù), we explicitly
separate data collection ùëëùëê from data usage ùëëùë¢ to distinguish the
source of a contradiction which is either ùëëùëê or ùëëùë¢. Furthermore,
our contradiction analysis can use hierarchical checking that has
a smaller number of rules than that for the high-dimensional flat
representation. Moreover, the 5-tuple representation also suffers
from a large number of relationships between two tuples which
increase exponentially with the number of tuple dimensions. Sepa-
rating the data usage from data collection creates a constraint that
if ùëê = not_collect, then ùëëùë¢ should be ùëÅùëúùëõùëí because the data object
ùëë cannot be used without collecting it first.
Entity-Sensitive Data Usage Purposes. We define entity-sensitive
data usage purposes as follows to capture the meaning of statements
that mention whether the data is used for the purposes of the app
itself or a third party. For example, "for third parties‚Äô own marketing
purposes" is represented as a pair (third party, marketing).
Definition 4.2 (Entity-Sensitive Data Usage Purpose). An entity-
sensitive purpose of data usage is a pair (ùëí, ùëû), where ùëí is the entity
whose purpose is served, called purpose-served entity, and ùëû is a data
usage purpose.
As an example, "third parties do not collect device identifiers
for their advertising purposes" will be translated into a statement
(dc=(third party, collect, device ID), du=(device ID, not_for, (third party,
advertising)). We assume third parties still collect device IDs but the
data is not used for third parties‚Äô advertising purposes. Because of
"their" word, we also assume the data serves third parties‚Äô purposes.
Compared to PolicyLint, PurPliance adds a new data usage
representation du, uses a representation of data usage purpose and
has a more complete interpretation of privacy sentences. While
the dc component contains the same parameters as in PolicyLint,
PurPliance uses a different interpretation of data collection in
privacy policy sentences. Given the above sentence, PolicyLint
creates (third party, not_collect, device ID) but it implies absolutely
no collection of device IDs and would flag any other statements
about the collection of a related data type.
4.2 Extraction of Statement Parameters
PurPliance extracts phrases that correspond to the parameters
of privacy statements from a sentence in 3 steps: (1) identify data
practice predicates (verbs), (2) extract the semantic arguments of
each predicate and (3) map these arguments to the parameters.
Receiver Extraction. The receiver and sender of a data practice
are determined by either Arg0 or Arg2, depending on the action type
(i.e., collection, use, or sharing). Since Arg0 and Arg2 are typically
Session 10D: Applied Privacy CCS ‚Äô21, November 15‚Äì19, 2021, Virtual Event, Republic of Korea2828Rule Extracted span*
Created privacy statements
ùëá1
ùëá2
ùëá3
ùëá4
ùëá5
ùëá6
(r, not_collect, d, None)
(r, not_collect, d, p)
(s, share, r, d, None)
(s, not_share, r, d, None)
(s, share, r, d, p)
(s, not_share, r, d, p)
((r, not_collect, d), None)
((r, collect, d), (d, not_for, p))
((s, collect, d), None) and
((r, collect, d), None)
((s, collect, d), None) and
((r, not_collect, d), None)
((s, collect, d), None) and
((r, collect, d), (d, for, p))
((s, collect, d), None) and
((r, collect, d), (d, not_for, p))
Table 4: Privacy statements created from extracted text
spans. * text span = (sender, action, receiver, data, purpose).
the actor and the beneficiary of an action, if the action is collec-
tion, Arg0 is the receiver and Arg2 is the sender of the data object.
Similarly, these roles are swapped if the action is sharing. In the
case of data-using actions, there is no sender and Arg0 represents
the entity that uses the data. The mapping from the arguments to
the sender/receiver is shown in Table 2. The first or third party
can also be mentioned implicitly in a sentence depending on the
type of the data practice. For example, in "we will not share your
sensitive data," the missing receiver is inferred as an implicit third
party since the type of data action is sharing. When a verb is a