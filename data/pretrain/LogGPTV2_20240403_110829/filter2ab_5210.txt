**Title: Put in One Bug and Pop Out More: An Effective Way of Bug Hunting in Chrome**

Bugs are rarely unique. As software systems grow, multiple teams often collaborate on the development of various features, leading to a complex codebase. Given this complexity, it is highly likely that bugs with similar code patterns may exist in multiple locations throughout the codebase.

In this presentation, we will use Chrome as a case study to demonstrate how to discover new vulnerabilities based on historical ones. We will introduce several types of code patterns that are particularly prone to vulnerabilities in Chrome, ranging from more superficial to deeper issues. For each pattern, we will provide a detailed description, drawing on examples from classic bugs. We will not only outline the basic workflow for identifying similar bugs but also discuss methods for adjusting and refining these patterns to uncover new, distinct vulnerabilities.

Through these techniques, we successfully identified 24 vulnerabilities in Chrome, resulting in 11 CVEs (Common Vulnerabilities and Exposures). Finally, we will delve into the exploitation of one of these vulnerabilities, which we used to escape the Chrome sandbox during the Tianfu Cup 2020 Cybersecurity Contest. This achievement marked the first public contest win in the Chrome category with a sandbox escape since 2015.