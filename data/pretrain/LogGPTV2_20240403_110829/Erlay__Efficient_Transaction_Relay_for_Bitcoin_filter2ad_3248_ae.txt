decisions [16, 58, 62, 65]. This design, however, makes these proto-
cols leak information about the structure of the network and makes
them less robust to Byzantine faults, though limited solutions to
Byzantine faults in this setting have been explored [19, 31].
The trade-off between latency and bandwidth efficiency is well-
known in P2P research. Kumar et. al. identified and formalized
the trade-off between latency and bandwidth [42], and Jiang et. al.
proposed a solution to achieve an optimal combination of these
properties [38]. However, the solution was not designed for adver-
sarial settings. Prior work also proposed feedback-based approaches
to flooding [7, 57]. However, we believe that to work efficiently,
this work would have unacceptable information leakage.
14 CONCLUSIONS
Bitcoin is one of the most widely used P2P applications. Today,
Bitcoin relies on flooding to relay transactions in a network of
about 60,000 nodes. Flooding provides low latency and is robust to
adversarial behavior, but it is also bandwidth-inefficient and creates
a significant amount of redundant traffic. We proposed Erlay, an al-
ternative protocol that combines limited flooding with intermittent
reconciliation. We evaluated Erlay in simulation and with a prac-
tical deployment. Compared to Bitcoin’s current protocols, Erlay
reduces the bandwidth used to announce transactions by 84% while
increasing the latency for transaction dissemination by 2.6s (from
3.15s to 5.75s). Erlay allows Bitcoin nodes to have higher connec-
tivity, which will make the network more secure. We are actively
working to introduce Erlay into Bitcoin Core’s node software.
ACKNOWLEDGMENTS
Gleb Naumenko was partially supported by Blockstream. This
research was also funded by an NSERC discovery grant to Ivan
Beschastnikh and was supported in part by a gift from Microsoft
Azure. We would like to thank Till Neudecker and Matthias Grund-
mann from Karlsruhe Institute of Technology for sharing the data
collected at their measurement node.
REFERENCES
[1] 2015. Bitcoin core commit 5400ef. https://bit.ly/2Q2Djux.
[2] 2019. Falcon: A Fast New Bitcoin Backbone Relay Network. https://www.falcon-
[3] 2019. Residential Packages. http://acornbroadband.com/residential-broadband.
net.org/
html
[4] 2019. Shaw Internet Plans for British Columbia. https://www.shaw.ca/internet
[5] 2019. Telus Internet Plans for British Columbia. https://www.telus.com/en/
[6] 2019. YahClick Satellite Internet. https://ts2.space/wp-content/uploads/2019/04/
shop/home/internet/plans
YahClick-1.pdf
[7] W. Ai, L. Xinsong, and L. Kejian. 2006. Efficient flooding in peer-to-peer networks.
In International Conference on Computer-Aided Industrial Design and Conceptual
Design. 1–6. https://doi.org/10.1109/CAIDCD.2006.329410
[8] Réka Albert and Albert-László Barabási. 2002. Statistical mechanics of complex
networks. Rev. Mod. Phys. 74 (Jan 2002), 47–97. Issue 1. https://doi.org/10.1103/
RevModPhys.74.47
[9] Réka Albert, Hawoong Jeong, and Albert-László Barabási. 2000. Error and attack
https:
tolerance of complex networks. Nature 406 (27 07 2000), 378 EP –.
//doi.org/10.1038/35019019
[10] Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, and Łukasz
Mazurek. 2015. On the Malleability of Bitcoin Transactions. In Financial Cryptog-
raphy and Data Security, Michael Brenner, Nicolas Christin, Benjamin Johnson,
and Kurt Rohloff (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg, 1–18.
[11] Alex Biryukov, Dmitry Khovratovich, and Ivan Pustogarov. 2014. Deanonymisa-
tion of Clients in Bitcoin P2P Network. In ACM SIGSAC Conference on Computer
and Communications Security (CCS).
[12] Joseph Bonneau. 2016. Why Buy When You Can Rent? - Bribery Attacks on
Bitcoin-Style Consensus. In Financial Cryptography Workshops.
[13] Anudhyan Boral and Michael Mitzenmacher. 2014. Multi-Party Set Reconciliation
Using Characteristic Polynomials. CoRR abs/1410.2645 (2014).
[14] A. Broder. 1997. On the Resemblance and Containment of Documents. In Pro-
ceedings of the Compression and Complexity of Sequences 1997 (SEQUENCES ’97).
IEEE Computer Society, Washington, DC, USA, 21–. http://dl.acm.org/citation.
cfm?id=829502.830043
[15] A. Z. Broder. 1997. On the resemblance and containment of documents. In Pro-
ceedings. Compression and Complexity of SEQUENCES 1997 (Cat. No.97TB100171).
21–29. https://doi.org/10.1109/SEQUEN.1997.666900
[16] Ian Clarke, Oskar Sandberg, Brandon Wiley, and Theodore W. Hong. 2001. Freenet:
A Distributed Anonymous Information Storage and Retrieval System. Springer
Berlin Heidelberg, Berlin, Heidelberg, 46–66. https://doi.org/10.1007/3-540-
44702-4_4
[17] Matt
Corallo.
2016.
BIP
152:
Compact
block
relay.
[18] corbixgwelt.
https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki.
and
Timejacking
http://culubas.blogspot.de/2011/05/timejacking-bitcoin802.html.
2011.
[19] Alan Dearle, Graham N. C. Kirby, and Stuart J. Norcross. 2010. Hosting Byzantine
Fault Tolerant Services on a Chord Ring. CoRR abs/1006.3465 (2010).
[20] C. Decker and R. Wattenhofer. 2013. Information propagation in the Bitcoin
network. In IEEE P2P 2013 Proceedings. 1–10. https://doi.org/10.1109/P2P.2013.
6688704
[21] Christian Decker and Roger Wattenhofer. 2014. Bitcoin Transaction Malleability
bitcoin.
and MtGox. CoRR abs/1403.6676 (2014).
[22] Sergi Delgado Segura, Surya Bakshi, Cristina Pérez-Solà, James Litton, Andrew
Pachulski, Andrew Miller, and Bobby Bhattacharjee. 2019. TxProbe: Discovering
Bitcoin’s Network Topology Using Orphan Transactions. In Financial Cryptogra-
phy (FC).
[23] Yevgeniy Dodis, Leonid Reyzin, and Adam Smith. 2004. Fuzzy Extractors: How
to Generate Strong Keys from Biometrics and Other Noisy Data. In Advances in
Cryptology - EUROCRYPT 2004, Christian Cachin and Jan L. Camenisch (Eds.).
Springer Berlin Heidelberg, Berlin, Heidelberg, 523–540.
[24] John R. Douceur. 2002. The Sybil Attack. In International Workshop on Peer-to-Peer
Systems (IPTPS).
[25] Ittay Eyal, Adem Efe Gencer, Emin Gün Sirer, and Robbert Van Renesse. 2016.
Bitcoin-NG: A Scalable Blockchain Protocol. In Usenix Conference on Networked
Systems Design and Implementation (NSDI).
[26] Ittay Eyal and Emin Gün Sirer. 2013. Majority is not Enough: Bitcoin Mining is
Vulnerable. CoRR abs/1311.0243 (2013).
[27] Muntadher Fadhil, Gareth Owen, and Mo Adda. 2016. Bitcoin network mea-
surements for simulation validation and parameterisation. In Proceedings of the
Eleventh International Network Conference (INC 2016). University of Plymouth,
109–114.
[28] Giulia C. Fanti, Shaileshh Bojja Venkatakrishnan, Surya Bakshi, Bradley Denby,
Shruti Bhargava, Andrew Miller, and Pramod Viswanath. 2018. Dandelion++:
Lightweight Cryptocurrency Networking with Formal Anonymity Guarantees.
CoRR abs/1805.11060 (2018). arXiv:1805.11060 http://arxiv.org/abs/1805.11060
[29] J. Feigenbaum, S. Kannan, M. Strauss, and M. Viswanathan. 1999. An Approximate
L1-Difference Algorithm for Massive Data Streams. In Proceedings of the 40th
Annual Symposium on Foundations of Computer Science (FOCS ’99). IEEE Computer
Society, Washington, DC, USA, 501–. http://dl.acm.org/citation.cfm?id=795665.
796530
[30] Joan Feigenbaum, Sampath Kannan, Martin J. Strauss, and Mahesh Viswanathan.
2003. An Approximate L1-Difference Algorithm for Massive Data Streams. SIAM
J. Comput. 32, 1 (Jan. 2003), 131–151. https://doi.org/10.1137/S0097539799361701
[31] Amos Fiat, Jared Saia, and Maxwell Young. 2005. Making Chord Robust to
Byzantine Attacks. In Proceedings of the 13th Annual European Conference on
Algorithms (ESA’05). Springer-Verlag, Berlin, Heidelberg, 803–814. https://doi.
org/10.1007/11561071_71
[32] Juan Garay, Aggelos Kiayias, and Nikos Leonardos. 2015. The Bitcoin Backbone
Protocol: Analysis and Applications. In Advances in Cryptology - EUROCRYPT
2015, Elisabeth Oswald and Marc Fischlin (Eds.). Springer Berlin Heidelberg,
Berlin, Heidelberg, 281–310.
[33] Arthur Gervais, Ghassan Karame, Karl WÃĳst, Vasileios Glykantzis, Hubert
Ritzdorf, and Srdjan Capkun. 2016. On the Security and Performance of Proof
of Work Blockchains. In Proceedings of the 23nd ACM SIGSAC Conference on
Computer and Communication Security (CCS). ACM.
[34] Arthur Gervais, Hubert Ritzdorf, Ghassan O. Karame, and Srdjan Capkun. 2015.
Tampering with the Delivery of Blocks and Transactions in Bitcoin. In ACM
SIGSAC Conference on Computer and Communications Security (CCS).
[35] Matthias Grundmann, Till Neudecker, and Hannes Hartenstein. 2018. Exploiting
Transaction Accumulation and Double Spends for Topology Inference in Bitcoin.
[36] Ethan Heilman, Alison Kendler, Aviv Zohar, and Sharon Goldberg. 2015. Eclipse
Attacks on Bitcoin’s Peer-to-peer Network. In Proceedings of the 24th USENIX
Conference on Security Symposium (SEC).
[37] Stan Higgins. 2016. South Africa’s eBay Bidorbuy Adds Bitcoin Payments. https:
//www.coindesk.com/south-africas-ebay-bidorbuy-adds-bitcoin-payments
[38] J. Jiang, C. Hung, and J. Wu. 2010. Bandwidth- and Latency-Aware Peer-to-Peer
Instant Friendcast for Online Social Networks. In 2010 IEEE 16th International
Conference on Parallel and Distributed Systems. 829–834. https://doi.org/10.1109/
ICPADS.2010.101
[39] jl777. 2016. Re: Blocksonly mode BW savings, the limits of efficient block xfer,
and better relay. https://bit.ly/2VmcgeM.
[40] Benjamin Johnson, Aron Laszka, Jens Grossklags, Marie Vasek, and Tyler Moore.
2014. Game-Theoretic Analysis of DDoS Attacks Against Bitcoin Mining Pools. In
Financial Cryptography and Data Security, Rainer Böhme, Michael Brenner, Tyler
Moore, and Matthew Smith (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg,
72–86.
[41] Philip Koshy, Diana Koshy, and Patrick McDaniel. 2014. An Analysis of
Anonymity in Bitcoin Using P2P Network Traffic. In Financial Cryptography and
Data Security, Nicolas Christin and Reihaneh Safavi-Naini (Eds.). Springer Berlin
Heidelberg, Berlin, Heidelberg, 469–485.
[42] P. Kumar, G. Sridhar, and V. Sridhar. 2005. Bandwidth and latency model
for DHT based peer-to-peer networks under variable churn. In 2005 Systems
Communications (ICW’05, ICHSN’05, ICMCS’05, SENET’05). 320–325.
https:
//doi.org/10.1109/ICW.2005.31
[43] Spiridoula V. Margariti and Vassilios V. Dimakopoulos. 2013. A study on the
redundancy of flooding in unstructured p2p networks. International Journal of
Parallel, Emergent and Distributed Systems 28, 3 (2013), 214–229. https://doi.org/10.
1080/17445760.2012.724067 arXiv:https://doi.org/10.1080/17445760.2012.724067
[44] Apostolaki Maria, Zohar Aviv, and Vanbever Laurent. 2017. Hijacking Bitcoin:
Routing Attacks on Cryptocurrencies. In Security and Privacy (SP). IEEE.
[45] Gregory Maxwell. 2016. Blocksonly mode BW savings, the limits of efficient
block xfer, and better relay. https://bitcointalk.org/index.php?topic=1377345.0.
[46] Petar Maymounkov and David Mazières. 2002. Kademlia: A Peer-to-Peer Infor-
mation System Based on the XOR Metric. In Peer-to-Peer Systems, Peter Druschel,
Frans Kaashoek, and Antony Rowstron (Eds.). Springer Berlin Heidelberg, Berlin,
Heidelberg, 53–65.
[47] Patrick McCorry, Siamak Fayyaz Shahandashti, and Feng Hao. 2016. Refund
IACR Cryptology ePrint Archive 2016
attacks on Bitcoin’s Payment Protocol.
(2016), 24.
[48] A. Miller. 2013. Feather-forks: enforcing a blacklist with sub-50% hashpower?
https://bitcointalk.org/index.php?topic=36788.msg463391#msg463391.
[49] Andrew Miller, James Litton, Andrew Pachulski, Neal Gupta, Dave Levin, Neil
Spring, and Bobby Bhattacharjee. 2015. Discovering Bitcoin âĂŹ s Public Topol-
ogy and Influential Nodes.
[50] Yaron Minsky and Ari Trachtenberg. 2002. Practical Set Reconciliation. Dept.
Elec. Comput. Eng., Boston Univ., Boston, MA, Tech. Rep. BU-ECE2002-01.
[51] Michael Mitzenmacher and Rasmus Pagh. 2013. Simple Multi-Party Set Reconcil-
[52] Satoshi Nakamoto. [n.d.]. Bitcoin: A peer-to-peer electronic cash system,âĂİ
iation. CoRR abs/1311.2037 (2013).
http://bitcoin.org/bitcoin.pdf.
[53] Arvind Narayanan. 2016. Bitcoin and cryptocurrency technologies : a comprehensive
introduction. Princeton University Press, Princeton, New Jersey.
[54] T. Neudecker, P. Andelfinger, and H. Hartenstein. 2016. Timing Analysis for
Inferring the Topology of the Bitcoin Peer-to-Peer Network. In IEEE Conferences
on Ubiquitous Intelligence Computing, Advanced and Trusted Computing, Scalable
Computing and Communications, Cloud and Big Data Computing, Internet of
People, and Smart World Congress (UIC/ATC/ScalCom/CBDCom/IoP/SmartWorld).
358–367.
[55] T. Neudecker and H. Hartenstein. 2018. Network Layer Aspects of Permissionless
Blockchains. IEEE Communications Surveys Tutorials (2018), 1–1. https://doi.
org/10.1109/COMST.2018.2852480
[56] A. Pinar Ozisik, Gavin Andresen, George Bissias, Amir Houmansadr, and
Brian Neil Levine. 2017. Graphene: A New Protocol for Block Propagation
Using Set Reconciliation. In DPM/CBT@ESORICS (Lecture Notes in Computer
Science), Vol. 10436. Springer, 420–428.
[57] Charis Papadakis, Paraskevi Fragopoulou, Evangelos P. Markatos, Elias Athana-
sopoulos, Marios Dikaiakos, and Alexandras Labrinidis. 2007. A Feedback-Based
Approach to Reduce Duplicate Messages in Unstructured Peer-To-Peer Networks.
Springer US, Boston, MA, 103–118. https://doi.org/10.1007/978-0-387-47658-2_8
[58] Antony Rowstron and Peter Druschel. 2001. Pastry: Scalable, distributed object lo-
cation and routing for large-scale peer-to-peer systems. In IFIP/ACM International
Conference on Distributed Systems Platforms (Middleware). 329–350.
[59] Yasushi Saito and Marc Shapiro. 2005. Optimistic Replication. ACM Comput.
Surv. 37, 1 (March 2005), 42–81. https://doi.org/10.1145/1057977.1057980
[60] Dave Schafer. 2019.
Which Internet Service Providers Have Data
Caps? https://www.highspeedinternet.com/resources/which-internet-service-
providers-have-data-caps
[61] Yonatan Sompolinsky and Aviv Zohar. 2015. Secure High-Rate Transaction
Processing in Bitcoin. In Financial Cryptography and Data Security, Rainer Böhme
and Tatsuaki Okamoto (Eds.). Springer Berlin Heidelberg, Berlin, Heidelberg,
507–527.
[62] Ion Stoica, Robert Morris, David Karger, M. Frans Kaashoek, and Hari Balakrish-
nan. 2001. Chord: A Scalable Peer-to-peer Lookup Service for Internet Applica-
tions. In SIGCOMM.
[63] P. Todd. 2015.
Why Scaling Bitcoin With Sharding Is Very Hard.
https://petertodd.org/2015/why-scaling-bitcoin-with-sharding-is-very-hard.
[64] A. Trachtenberg, D. Starobinski, and S. Agarwal. 2002. Fast PDA synchronization
using characteristic polynomial interpolation. In Proceedings.Twenty-First Annual
Joint Conference of the IEEE Computer and Communications Societies, Vol. 3. 1510–
1519 vol.3. https://doi.org/10.1109/INFCOM.2002.1019402
[65] S. Vuong and J. Li. 2003. Efa: an efficient content routing algorithm in large
peer-to-peer overlay networks. In Proceedings Third International Conference on
Peer-to-Peer Computing (P2P). 216–217. https://doi.org/10.1109/PTP.2003.1231532
A RELEVANCE TO OTHER BLOCKCHAINS
Erlay is relevant to most other deployed blockchains (e.g., Ethereum,
Zcash) because they use flooding for transaction relay. Even though
there might be a difference in TXID size or the number of connected
peers, the difference that matters is the transaction rate.
To demonstrate that bandwidth savings and latency are not im-
pacted by higher transaction rates, we simulated a network of 54,000
private and 6,000 public nodes with connectivity of 8, generated
transactions at different rates (from 7 tx/s to 70 tx/s), and measured
the impact of higher transaction rates on latency and bandwidth.
Figure 18 shows that the relative bandwidth savings of Erlay
is not impacted by transaction rate. Figure 19 shows that Erlay’s
latency remains constant for different transaction rates. We also
confirmed these results in a network of 100 nodes running our
prototype implementation.
At the same time, since PinSketch has quadratic complexity,
using it without modifications would lead to a high computational
cost due to reconciliation, and higher hardware requirements. To
reduce the computational cost of reconciliation, we recommend the
use of bisection from the first reconciliation step.
For example, consider a system with a network similar to Bit-
coin, but with a throughput of 700 transactions per second. If Erlay
is applied in the same way as we suggest for Bitcoin, an average
reconciliation set difference would consist of 1,000 elements. Ac-
cording to our benchmarks, straightforward reconciliation through
Figure 18: Average bandwidth one node spends per month to
announce transactions in a system with variable transaction
rate
Figure 19: Average latency for a single transaction to reach
100% nodes in the network in a system with variable trans-
action rate
Minisketch would take 1,000ms. At the same time, with bisection
recursively applied 3 times, 8 chunks consisting of 125 elements
would have to be reconciled, and this would take only 20ms. This
result makes Erlay useful in systems with higher transaction rates.
717.53570Transaction rate (tx/s)01020304050Bandwidth per month (GB)4.3310.8221.6543.30.711.773.557.1BTCFloodErlay717.53570Transaction rate (tx/s)0246810Latency (s)ErlayBTCFlood