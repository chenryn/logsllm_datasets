User: How to implement HTTPS encrypted website access by configuring Nginx? Please list the specific configuration steps.
Assistant: The following are the specific steps to implement HTTPS encrypted access to the website by configuring Nginx: 1. Apply for an SSL certificate First, you need to apply for an SSL certificate from a CA institution or other SSL certificate provider, and save the certificate to the server. 2. Configure the SSL certificate Add the following code to the Nginx configuration file to configure the paths of the SSL certificate and key files, and disable the SSLv2 and SSLv3 protocols: ``` server { listen 443; server_name example.com; ssl_certificate /path/to /ssl/cert.crt; ssl_certificate_key /path/to/ssl/cert.key; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM- SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA- } ``` 3. Configure port 80 redirection To prevent users from accessing websites directly using the HTTP protocol, you need to redirect port 80 access requests to the HTTPS protocol. Add the following code to the Nginx configuration file: ``` server { listen 80; server_name example.com; return 301 https://$server_name$request_uri; } ``` 4. Configure a general HTTP proxy If the website needs to use a proxy, You also need to add the following code to the Nginx configuration file to configure a general HTTP proxy: ``` proxy_redirect off; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; client_max_body_size 10m; client_body_buffer _size proxy_connect_timeout 90; proxy_send_timeout 90; proxy_read_timeout 90; proxy_buffer_size 4k; proxy_buffers 4 32k; proxy_busy_buffers_size 64k; proxy_temp_file_write_size 64k; The following command restarts the Nginx service: ``` sudo service nginx restart ``` In this way, the website can be encrypted and accessed through the HTTPS protocol.