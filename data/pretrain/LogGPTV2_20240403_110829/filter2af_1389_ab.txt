**DNS log问题**
针对Windows平台针对DNS Client Service的日志记录的问题，scz曾在博客中写关于为何Windows的某些低版本无法正常记录DNS
log。我依样画葫芦分析了存在问题的dll组件，即dnsrslvr.dll。基本过程不再详述，可以查看 **scz** 的博客。
简单来说有两个问题，第一个在通过反编译在Strings中直接搜索关键字“dnsrs”可以看到两个略有不同的日志文件的文件名，dnsrslvr.log和dnsrsvlr.log，很明显dnsrsvlr.log与dnsrslvr.dll这个组件名不太符合，所以简而言之是这里是个手误写错单词了，但这里并不是影响log记录不正常的关键。
第二个是在DnsLogInit()调用关键函数DnsLogIt()中，进入该函数主体时做了一个条件判断，判断依据是一个全局变量LoggingMode，这个全局变量在DnsLogInit()中定义过一次，初始化值为0，退出DnsLogInit()后回到初始化值0，然后导致在DnsLogIt()函数主体时过不了条件判断，直接退出函数，所以就无法正常记录DNS日志了。
经过测试分析，安装了KB2956577补丁后即不存在该问题了。scz的博客中也描述了如何不安装补丁也可以使该功能正常化。
**DNS记录tricks**
DNS中常被用作挖掘子域名的一个漏洞DNS域传输漏洞还有个鲜为人知的一面。我们熟知DNS在TCP/IP栈中是一个比较另类的协议，因为其同时占用了TCP和UDP的53端口。在RFC1035中记载了只有两种情况下，DNS会使用TCP
53端口。一个就是在进行域传输操作时，会使用TCP 53端口进行数据同步；而DNS进行解析查询优先使用UDP
，当UDP完成不了的情况下（即查询数据过大，超过512字节），则转换TCP查询。所以监控TCP协议上的DNS数据传输，准确度会提高很多，但是捕获量并不会非常多。
**微软的新方案**
新版Sysmon提供了Event ID 22: DNSEvent (DNS
query)，即只要有DNS请求发出就会记录日志，配置也很简单明了。可参考
**对抗升级**
就在普天同庆Sysmon的新升级刚没几天，一篇关于绕过Sysmon的DNS日志记录的利用文章就公布了。
简单读了下文章，可以知道在sysmon启动后找到一个my event trace session的data collector
set，这个名字曾出现在微软提供的样例代码中。
利用逆向找到该字符串所在函数进行分析。函数中提供了一个数据指针，分析发现该数据指针恰好是DNS_CLIENT所使用的的数据指针。
所以我们直接自定义一个简单的DNS查询函数，再对其进行动态调试即可发现其中端倪。调试中可以从堆栈信息中发现调用了evenwrite函数。
Evenwrite结束后会调用evenwritetransfer这个函数来写入日志，所以我们只要修改DLL，避开evenwritetransfer这个函数即可。
## **利益 OR 恶意？**
使用DNS来跟踪用户行为，保持会话不中断。该技术主要解决了DNS缓存时间短的问题，并且突破cookie等此类技术在多浏览器和浏览器隐私模式下无法继续追踪的限制，同时也不受VPN，SOCKS4，IPv6，“企业全家桶软件包”（企业集群中的计算机的fingerprint几乎一样）等的影响。不过该技术本身也具有一定的限制，所以需要和传统追踪技术（cookie所代表的的tagging技术和字体识别这类的计算机fingerprint识别技术）联合使用才能最大限度发挥作用。
图中红色部分是跟踪者实际可控的组件部分。
  1. 浏览器加载跟踪代码片段；
  2. 浏览器向操作系统的Stub Resolver请求解析xi.anonymity.fail域名；
  3. 操作系统向解析平台传递解析请求，而解析平台分析得知需要向域名拥有者控制的DNS解析器解析。且该DNS解析器回应了RRset，即一系列随意排序的跟踪者可控的IP地址；
  4. Stub Resolver缓存RRset，并向浏览器返回IP地址列表；
  5. 浏览器向RRset中的第一个IP地址发送HTTP请求；
  6. 服务器向不同的IP地址发送不同的响应内容；
  7. JS收集从服务器传来的数据并组装成一个ID；
对于这种追踪方法，只有使用HTTP代理或者Tor代理才能肯定使其失效。
从这里我们可以发现一项技术本身并没有对错，只是用它的人的目的决定了是否存在恶意。该追踪技术还存在一些技术细节，我已经详细撰文发在SecQuan公众号上。
## **致谢**
ourren@Secwiki
sshruoshui(warethink#gmail.com)@NUTD
本文首发于安全学术圈（SecQuan）公众号。本公众号分享安全方面的论文写作、会议发表、基金申请方面的资料。
## **参考文献**
[1] Woodbridge, J., Anderson, H. S., Ahuja, A., & Grant, D. (2016). Predicting
domain generation algorithms with long short-term memory networks. arXiv
preprint arXiv:1611.00791.
[2] Peck, J., Nie, C., Sivaguru, R., Grumer, C., Olumofin, F., Yu, B., ... &
De Cock, M. (2019). CharBot: A Simple and Effective Method for Evading DGA
Classifiers. arXiv preprint arXiv:1905.01078.
[3] Sivakorn, S., Jee, K., Sun, Y., Kort-Parn, L., Li, Z., Lumezanu, C., ... &
Li, D. (2019). Countering Malicious Processes with Process-DNS Association. In
NDSS.
[4] Pupeng (2015, Feb, 20). Hone [Web log post]. Retrieved August 01, 2019,
from 
[5] scz. (2017, May 11). DNS系列(10)--开启DNS Client Service日志 [Web log post].
Retrieved June 24, 2019, from 
[6] Microsoft. (2019, June 14). Sysmon v10.1 [Web log post]. Retrieved June
15, 2019, from 
[7] 红雨滴团队. (2019, June 12). 喜讯：微软发布具有DNS查询日志记录功能的Sysmon [Web log post].
Retrieved June 13, 2019, from
[8] SwiftOnSecurity. (2019, May 10). Sysmon-config [Web log post]. Retrieved
May 11, 2019, from 
[9] Chester A.(2019, June 15). Evading Sysmon DNS Monitoring [Web log post].
Retrieved June 16, 2019, from 
[10] DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION. (1987, November).
Retrieved June 5, 2019, from 
[11] Klein A., Benny P. (2019). DNS Cache-Based User Tracking. In NDSS.