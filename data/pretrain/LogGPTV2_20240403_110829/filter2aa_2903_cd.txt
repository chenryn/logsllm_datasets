输出
调试请求（Debug Request），请求目标处理器进入调试
状态
21
GND
—
地
22
DBGACK 输入
确认收到调试请求（Debug Acknowledge）
23
GND
—
地
ARM-20接口的物理尺寸有两种：一种是标准大小；另一种是标准
大小的一半，以减少占用空间。
在TI的系统上，经常使用的是一种14针的调试接插口，名为TI-
14。
除了上面介绍的，还有MIPI-10/20/34等多种接口，大同小异。当遇
到接口不匹配时，可以考虑通过转接头进行转接。
7.5.6 硬件调试器
适用于ARM平台的硬件调试器有多种，图7-12是ARM公司的
DSTREAM调试器。
图7-12 ARM公司的DSTREAM硬件调试器
如图7-12所示，其中包含一大一小两个盒子，后面的是主调试器，
前面的是接口转换器，以便与不同调试接插口的目标设备连接。
7.5.7 DS-5
DS-5是ARM倾力打造的开发套件（Development Studio），包含基
于Eclipse的IDE、DS-5调试器、名为Streamline的性能分析器以及名为
FVP（Fixed Virtual Platform）的仿真平台。
DS-5调试器可以与上面提到的DSTREAM硬件调试器合作，一起调
试产品开发早期的底层问题。
使用DS-5的semihosting技术，可以把目标设备上的输出重定向到主
机端，当目标设备没有显示器时这个功能很有用。
DS-5有收费的商业版本，也有免费的社区版本和适用版本。
7.6 本章小结
本章介绍了硬件调试工具广泛使用的JTAG标准，以及它在IA架构
和ARM架构中的应用。使用硬件调试工具的优点是依赖少，可控性
强，因此非常适合调试系统软件、敏感的中断处理代码以及与硬件有关
的问题。另外，因为不需要在目标系统中运行任何调试引擎或其他软
件，所以使用硬件调试工具比使用软件工具对被调试软件的影响更小，
也就是具有更小的海森伯效应（见15.3.9节）。
硬件调试工具的局限性是价格比较昂贵，要求目标系统具有调试接
插口（如ITP或XDP），连接和设置也相对复杂。
本章是这一篇的最后一章。总体而言，本篇以英特尔处理器和
ARM处理器为例介绍了CPU对软件调试的支持，下面从“需求”的角度再
对这些功能进行概括（见表7-6）。
表7-6 调试需求和CPU的支持
调 试 需 求
CPU的支持
章  节
执行到指定地址处的指令时中断到调试器
指令访问断点
4.2节
执行完每一条指令后都中断到调试器
单步执行标志（陷阱标
志）
4.3节
执行完当前分支后中断到调试器
按分支单步执行（陷阱
标志）
4.3节，
5.3节
访问指定内存地址的内存数据（读写内存）时中
断到调试器
数据访问断点（硬件断
点）
4.2节
访问指定I/O地址的I/O数据（输入输出）时中断
到调试器
I/O访问断点（硬件断
点）
4.2节
遇到该指令就中断到调试器
断点指令（软件断点） 4.1节
切换到指定的任务就中断到调试器
TSS中的T标志
4.3节
记录软件/CPU的执行轨迹
分支记录机制
5.2节，
5.3节
监视CPU和软件的执行效率
性能监视
5.5节
记录下CPU遇到的硬件错误
MCA
6.2节
调试CPU本身的问题，或以上手段都难以解决的
其他调试任务
JTAG支持
7.4节
参考资料
[1] Dual-Core Intel Xeon Processor LV and Intel 3100 Chipset
Development Kit User’s Manual. Intel Corporation.
[2] IEEE Std 1149.1(JTAG) Testability Primer. Texas Instrument.
[3] P6 Family Processors Hardware Developer’s Manual. Intel
Corporation.
[4] Robert R. Collins. Overview of Pentium Probe Mode.
[5] ITP700 Debug Port Design Guide. Intel Corporation.
[6] Debug Port Design Guide for UP/DP Systems. Intel Corporation.
[7] ITP-XDP 3BR Kit . Intel Corporation.
[8] ARM JTAG Interface Specifications. Lauterbach GmbH.
[9] ARM Debug Interface Architecture Specification ADIv6.0 ARM
Limited.
第三篇 GPU及其调试设施
GPU源于显卡，1999年Nvidia发布第一代GeForce时，开始使用GPU
之名。近年来，GPU发展迅猛，凭借强大的并行计算能力和高效率的固
定硬件单元，在人工智能、区块链、虚拟和增强现实（VR/AR）、3D
游戏和建模、视频编解码等领域大显身手。另外，这种趋势还在延续，
基于GPU的应用和创新层出不穷。
但是从系统架构来看，针对GPU的架构转型还在进行过程中，目前
GPU依然还处于外设的地位，还没有摆脱从属身份。因为这个根本特
征，对GPU编程并不像对CPU编程那样直接，而调试和优化GPU程序的
难度就更大了，要比CPU程序复杂很多。
本篇是按“总起-分论-综合”的结构来组织的，一共7章。第8章介绍
GPU的发展简史、基本问题、软件接口、驱动模型和GPU调试的概况，
第9～13章分别介绍Nvidia、AMD、Intel、ARM和Imagination五个家族
的GPU。对于每个家族的GPU，深入解析它的发展历程、硬件结构、软
件接口、编程模型和调试设施。分别讨论之后，第14章再综合前面内
容，做简单的横向比较，探讨发展趋势，总结全篇。
一般把GPU的应用分为4个大类：显示、2D/3D、媒体和GPGPU。
本书侧重介绍GPGPU，偶尔兼顾其他3种。
在阅读本篇时，建议先读第8章，然后根据自己的情况在第9～13章
中选择一两章，最后再读第14章的综合讨论和学习方法。
某种程度上说，CPU的时代已经过去，GPU的时代正在开启。经历
了半个多世纪的发展，CPU已经很成熟，CPU领域的创新机会越来越
少。而GPU领域则像是一块新大陆，有很多地方还是荒野，等待开垦，
仿佛19世纪的美国西部，或者20世纪的上海浦东。对于喜欢软件技术的
各位读者来说，现在学习GPU是个很好的时机。
第8章 GPU基础
在开始介绍各家GPU之前，本章首先介绍一些公共基础，分为3个
部分。8.1节和8.2节介绍GPU的简要发展历史以及与诸多问题都有关的
设备身份问题。8.3～8.5节分别介绍GPU的软件接口、驱动模型和有代
表性的编程技术。8.6节简要浏览GPU的调试设施。
8.1 GPU简史
早期的计算机主要靠卡片输出计算结果。个人电脑出现后，显示器
成为主要的输出设备，与之配套的显卡随之成为现代计算机的一个关键
设备。显卡的本来职责就是承载要显示的屏幕内容，把要显示的信息送
给显示器。
8.1.1 从显卡说起
1981年8月12日，型号为5150的IBM PC发布，标志着IBM兼容PC的
历史正式开始。在5150机箱内部，插着一块很长的扩展卡（见图8-
1）。这块卡是用于显示和打印的，名叫单色显示和打印适配器
（Monochrome Display and Printer Adapter，缩写为MDPA或MDA）或者
显卡[1]。
图8-1 第一代IBM PC中的单色显示适配卡（MDA）
顾名思义，MDA只能显示黑白两种颜色，而且只能显示字符，即
所谓的单色字符模式。一次可以显示25行、80列的字符。
 老雷评点 
当年在大学读书时，有一门课叫“IBMPC汇编语言编程”，老
师讲的内容不多，大多数时间都是让学生上机实践。在实践环节
中会布置一个大作业，并让学生在DOS环境中用汇编语言编写一
个程序。很多人实现的一个功能就是在DOS下呈现菜单栏、下拉
菜单，然后在各个菜单项下加入五花八门的功能。在DOS下，整
个屏幕的大小就是25行80列。当用扩展ASCII码实现菜单边框
时，要精确计算屏幕的布局，每一行每一列要显示什么都要心里
有数。
MDA卡上包含了4000字节的刷新缓冲区，用于存放要显示的屏幕
内容，其中2000字节存放的是屏幕上字符的ASCII码，刚好与25行80列
的屏幕内容一一对应。另外2000字节存放的是每个字符的属性信息，属
性信息包括是否加亮（highlight）、闪烁（blink）、加下画线、反显
等。MDA上的字符发生器（charracter generator）负责产生每个字符的
显示信息，根据字符编码从保存的字符库中（类似于字体文件）找到字
形描述，再根据属性字节的要求“绘制”出字符的每个像素。
图8-1中，横躺着那块个头最大的芯片是摩托罗拉公司生产的，型
号为MC6845，它的主要功能是产生显示信号，与CRT（阴极射线管）
显示器一起协作，把刷新缓冲区中的字符按要求显示在屏幕上。
MC6845常称为CRT控制器（CRT controller），其角色在今天的GPU和
显卡中仍然存在，并称为显示控制器（display controller）。
1987年，IBM公司发布了名为PS/2（Personal System/2）的第三代个
人电脑。与前一代PC AT（AT代表Advanced Technology）相比，这一
代引入了多项新技术。除了在PC历史上使用了很多年的PS/2鼠标键盘接
口外，还有名为VGA的新一代图形显示技术。
VGA的全称为视频图形阵列（Video Graphics Array）。其核心功能
是把帧缓冲区（frame buffer）中的要显示内容转变成模拟信号并通过一
个15针的D形（D-sub）接口送给显示器。这个15针的显示接口一直使用
到现在，即通常说的VGA接口。VGA不仅支持彩色显示，还支持多种
图形模式。
一块VGA显卡的主要部件有以下几个部分。
视频内存（video memory），其主要作用是临时存放要显示的内
容，即上面提到的刷新缓冲区和帧缓冲区，也就是通常所说的显
存。
图形控制器，承载显卡的核心逻辑，负责与CPU和上层软件进行交
互，管理显卡的各种资源，通常实现在一块集成芯片内，是显卡上
最主要的芯片。这部分不断扩展和增强，逐步演化为后来的GPU。
显示控制器，负责把要显示的内容转化为显示器可以接收的信号，
有时也称为DAC（数字模拟信号转换器）。
视频基本输入输出系统（Video BIOS，VBIOS），显卡上的固件单
元，从硬件角度来看，是一块可擦写的存储器（EPROM）芯片，
里面存放着用于配置和管理显卡的代码和数据。对于显卡的开发者
来说，可以通过修改VBIOS快速调整改变显卡的设置，或者修正瑕
疵。对于软件开发者来说，调用VBIOS提供的功能不但可以加快编
程速度，而且可以提高兼容性（VBIOS以统一的接口掩盖了硬件差
异性）。在DOS下，可以很方便地通过软中断机制（INT 10h）来
调用VBIOS提供的服务。
 老雷评点 
犹记当年在DOS下编写汇编代码，通过INT 10设置显示模
式，在单步调试这样的代码时，如果在时序敏感处停留过久，