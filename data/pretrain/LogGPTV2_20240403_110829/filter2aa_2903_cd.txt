### 输出

#### 调试请求（Debug Request）
- **功能**：请求目标处理器进入调试状态。
- **引脚编号**：21
- **信号名称**：GND
- **描述**：地线。

#### 调试确认输入（DBGACK Input）
- **功能**：确认收到调试请求。
- **引脚编号**：22
- **信号名称**：GND
- **描述**：地线。

#### ARM-20接口
ARM-20接口的物理尺寸有两种：
- **标准大小**：适用于常规应用。
- **半标准大小**：用于减少占用空间，特别适合空间受限的应用场景。

#### TI-14调试接插口
在TI系统中，常用的是一种14针的调试接插口，称为TI-14。此外，还有多种其他接口，如MIPI-10/20/34等，这些接口大同小异。当遇到接口不匹配时，可以使用转接头进行转换。

### 7.5.6 硬件调试器
适用于ARM平台的硬件调试器有多种，图7-12展示了ARM公司的DSTREAM调试器。

**图7-12** ARM公司的DSTREAM硬件调试器

该调试器由两个部分组成：
- **主调试器**：较大的盒子，负责主要的调试任务。
- **接口转换器**：较小的盒子，用于与不同调试接插口的目标设备连接。

### 7.5.7 DS-5
DS-5是ARM公司开发的一套综合开发工具包，包含以下组件：
- **基于Eclipse的IDE**：集成开发环境。
- **DS-5调试器**：强大的调试工具。
- **Streamline性能分析器**：用于性能分析。
- **FVP（Fixed Virtual Platform）仿真平台**：用于虚拟仿真。

**特点**：
- DS-5调试器可以与DSTREAM硬件调试器配合使用，调试产品开发早期的底层问题。
- 使用semihosting技术，可以把目标设备上的输出重定向到主机端，特别适用于没有显示器的目标设备。
- DS-5提供商业版、社区版和适用版等多种版本。

### 7.6 本章小结
本章介绍了广泛使用的JTAG标准及其在IA架构和ARM架构中的应用。硬件调试工具的主要优点包括：
- **依赖少**：不需要在目标系统中运行额外的软件。
- **可控性强**：非常适合调试系统软件、中断处理代码及硬件相关问题。
- **海森伯效应小**：对被调试软件的影响较小。

**局限性**：
- **价格昂贵**：硬件调试工具通常成本较高。
- **需要调试接插口**：如ITP或XDP。
- **连接和设置复杂**：相对于软件调试工具更为繁琐。

本章作为本篇的最后一章，总结了英特尔处理器和ARM处理器在支持软件调试方面的功能，并从“需求”的角度进行了概括（见表7-6）。

**表7-6 调试需求和CPU的支持**

| 调试需求 | CPU的支持 | 章节 |
| --- | --- | --- |
| 执行到指定地址处的指令时中断到调试器 | 指令访问断点 | 4.2节 |
| 执行完每一条指令后都中断到调试器 | 单步执行标志（陷阱标志） | 4.3节 |
| 执行完当前分支后中断到调试器 | 按分支单步执行（陷阱标志） | 4.3节, 5.3节 |
| 访问指定内存地址的内存数据（读写内存）时中断到调试器 | 数据访问断点（硬件断点） | 4.2节 |
| 访问指定I/O地址的I/O数据（输入输出）时中断到调试器 | I/O访问断点（硬件断点） | 4.2节 |
| 遇到该指令就中断到调试器 | 断点指令（软件断点） | 4.1节 |
| 切换到指定的任务就中断到调试器 | TSS中的T标志 | 4.3节 |
| 记录软件/CPU的执行轨迹 | 分支记录机制 | 5.2节, 5.3节 |
| 监视CPU和软件的执行效率 | 性能监视 | 5.5节 |
| 记录下CPU遇到的硬件错误 | MCA | 6.2节 |
| 调试CPU本身的问题，或以上手段都难以解决的其他调试任务 | JTAG支持 | 7.4节 |

### 参考资料
[1] Dual-Core Intel Xeon Processor LV and Intel 3100 Chipset Development Kit User’s Manual. Intel Corporation.
[2] IEEE Std 1149.1(JTAG) Testability Primer. Texas Instrument.
[3] P6 Family Processors Hardware Developer’s Manual. Intel Corporation.
[4] Robert R. Collins. Overview of Pentium Probe Mode.
[5] ITP700 Debug Port Design Guide. Intel Corporation.
[6] Debug Port Design Guide for UP/DP Systems. Intel Corporation.
[7] ITP-XDP 3BR Kit. Intel Corporation.
[8] ARM JTAG Interface Specifications. Lauterbach GmbH.
[9] ARM Debug Interface Architecture Specification ADIv6.0. ARM Limited.

### 第三篇 GPU及其调试设施
GPU最初源于显卡，自1999年Nvidia发布第一代GeForce以来，GPU迅速发展，凭借其强大的并行计算能力和高效的固定硬件单元，在人工智能、区块链、VR/AR、3D游戏和建模、视频编解码等领域发挥了重要作用。尽管如此，GPU在系统架构中仍处于外设地位，尚未完全摆脱从属身份。因此，针对GPU编程和调试的难度相对较大。

本篇按“总起-分论-综合”结构组织，共7章：
- **第8章**：介绍GPU的发展简史、基本问题、软件接口、驱动模型和调试概况。
- **第9～13章**：分别介绍Nvidia、AMD、Intel、ARM和Imagination五个家族的GPU，深入解析其发展历程、硬件结构、软件接口、编程模型和调试设施。
- **第14章**：综合前文内容，进行横向比较，探讨发展趋势，总结全篇。

GPU应用分为四类：显示、2D/3D、媒体和GPGPU。本书重点介绍GPGPU，偶尔涉及其他类型。

建议阅读顺序：先读第8章，然后根据个人兴趣选择第9～13章中的两章，最后读第14章的综合讨论和学习方法。

### 第8章 GPU基础
本章介绍GPU的基础知识，分为三个部分：
- **8.1节和8.2节**：介绍GPU的发展历史和设备身份问题。
- **8.3～8.5节**：分别介绍GPU的软件接口、驱动模型和代表性编程技术。
- **8.6节**：简要浏览GPU的调试设施。

#### 8.1 GPU简史
早期计算机主要通过卡片输出结果。个人电脑出现后，显示器成为主要输出设备，显卡随之成为关键部件。

##### 8.1.1 从显卡说起
1981年8月12日，IBM发布了型号为5150的PC，标志着IBM兼容PC的历史开始。机箱内部有一块名为MDA（Monochrome Display and Printer Adapter）的扩展卡，只能显示黑白字符，一次可显示25行80列字符。

**老雷评点**：
当年在大学学习IBM PC汇编语言编程时，经常需要在DOS环境下编写程序，实现菜单栏和下拉菜单等功能。MDA卡上包含4000字节的刷新缓冲区，其中2000字节存放字符ASCII码，另外2000字节存放属性信息。MC6845芯片负责产生显示信号，与CRT显示器协作显示屏幕内容。

1987年，IBM发布了PS/2第三代个人电脑，引入了VGA（Video Graphics Array）技术，支持彩色显示和多种图形模式。

**VGA显卡的主要部件**：
- **视频内存**：临时存放要显示的内容，即刷新缓冲区和帧缓冲区。
- **图形控制器**：管理显卡的核心逻辑，与CPU和上层软件交互。
- **显示控制器**：将要显示的内容转化为显示器可接收的信号。
- **VBIOS**：显卡上的固件单元，存储配置和管理代码，可通过软中断INT 10h调用其服务。

**老雷评点**：
在DOS下编写汇编代码并通过INT 10h调用VBIOS服务时，如果在时序敏感处停留过久，可能会导致显示异常。