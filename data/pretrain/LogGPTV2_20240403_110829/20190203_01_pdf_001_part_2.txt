with xDB Replication Server. See Section 10.1 for the certified and supported database
server products that may be used with xDB Replication Server.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 11
EDB Postgres Replication Server User’s Guide
For multi-master replication, xDB Replication Server supports the following
configurations:
 Between PostgreSQL database servers
 Between PostgreSQL database servers and Advanced Servers in PostgreSQL
compatible mode
 Between Advanced Servers in PostgreSQL compatible mode
 Between Advanced Servers in Oracle compatible mode
Note: See Section 10.1.3 for detailed information on supported source and target
database server configurations.
The reader is assumed to have basic SQL knowledge and basic Oracle, SQL Server, or
PostgreSQL database administration skills (whichever are applicable) so that databases,
users, schemas, and tables can be created and database object privileges assigned.
This document is organized as follows:
 The remainder of Chapter 1 describes conventions used throughout this user’s
guide along with suggested sections to read based upon your purpose for using
this guide.
 Chapter 2 provides an overview of xDB Replication Server including basic
replication concepts and definitions, architecture and components of xDB
Replication Server, and design guidelines for setting up a replication system.
 Chapter 3 gives instructions for installing and uninstalling xDB Replication
Server.
 Chapter 4 provides an overview of the xDB Replication Console, the graphical
user interface for using xDB Replication Server.
 Chapter 5 gives instructions for the configuration and operation of xDB
Replication Server for single-master replication systems.
 Chapter 6 gives instructions for the configuration and operation of xDB
Replication Server for multi-master replication systems.
 Chapter 7 describes operations that are common to both single-master and multi-
master replication systems.
 Chapter 8 describes the xDB Replication Server Command Line Interface, an
alternative to the graphical user interface for xDB Replication Server
configuration and management.
 Chapter 9 gives instructions for configuration and usage of the Data Validator.
 Chapter 10 is an appendix containing troubleshooting tips, a list of error
messages, their causes and resolutions, certified and supported database server
products, permitted combinations of database servers in a replication system, xDB
Replication Server product upgrade procedures, and other miscellaneous technical
information.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 12
EDB Postgres Replication Server User’s Guide
1.1 What’s New
The following features have been added to xDB Replication Server version 6.1 to create
xDB Replication Server version 6.2:
 Registering your xDB Replication Server product with an EnterpriseDB product
license key is no longer required. Thus, all components related to registering the
product have been removed. The following are the removed components: 1) the
Product Registration dialog box accessed from the xDB Replication Console Help
menu, 2) the license_key parameter located in the xDB Replication
Configuration file, and 3) the xDB Replication Server CLI registerkey
command.
 Version 10 of PostgreSQL and Advanced Server are now supported. For more
information, see Section 10.1.1.
 Partitioned tables created using the declarative partitioning feature of
PostgreSQL and Advanced Server version 10 and later can now be replicated in a
log-based single-master or multi-master replication system. For more information,
see Section 7.10.
 In a single-master replication system, removal of a table from a publication that
has one or more existing subscriptions is now permitted as long as the table to be
removed is not the parent referenced in a foreign key constraint from a child table
that is not being removed as well. Previously, no tables from a publication in a
single-master replication system could be removed if there are existing
subscriptions. For more information, see Section 7.6.3.2.
 Version 11 of PostgreSQL and Advanced Server are now supported. For more
information, see Section 10.1.1.
1.2 Typographical Conventions Used in this Guide
Certain typographical conventions are used in this manual to clarify the meaning and
usage of various commands, statements, programs, examples, etc. This section provides a
summary of these conventions.
In the following descriptions a term refers to any word or group of words that are
language keywords, user-supplied values, literals, etc. A term’s exact meaning depends
upon the context in which it is used.
 Italic font introduces a new term, typically, in the sentence that defines it for the
first time.
 Fixed-width (mono-spaced) font is used for terms that must be given
literally such as SQL commands, specific table and column names used in the
examples, programming language keywords, etc. For example, SELECT * FROM
emp;
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 13
EDB Postgres Replication Server User’s Guide
 Italic fixed-width font is used for terms for which the user must
substitute values in actual usage. For example, DELETE FROM table_name;
 A vertical pipe | denotes a choice between the terms on either side of the pipe. A
vertical pipe is used to separate two or more alternative terms within square
brackets (optional choices) or braces (one mandatory choice).
 Square brackets [ ] denote that one or none of the enclosed terms may be
substituted. For example, [ a | b ] means choose one of “a” or “b” or neither
of the two.
 Braces {} denote that exactly one of the enclosed alternatives must be specified.
For example, { a | b } means exactly one of “a” or “b” must be specified.
 Ellipses ... denote that the preceding term may be repeated. For example, [ a |
b ] ... means that you may have the sequence, “b a a b a”.
1.3 Other Conventions Used in this Guide
The following is a list of other conventions used throughout this document.
 This guide applies to both Linux and Windows systems. Directory paths are
presented in the Linux format with forward slashes. When working on Windows
systems, start the directory path with the drive letter followed by a colon and
substitute back slashes for forward slashes.
 Much of the information in this document applies interchangeably to the
PostgreSQL and EDB Postgres Advanced Server database systems. The term
Advanced Server is used to refer to EDB Postgres Advanced Server. The term
Postgres is used to generically refer to both PostgreSQL and Advanced Server.
When a distinction needs to be made between these two database systems, the
specific names, PostgreSQL or Advanced Server are used.
 The installation directory path of the PostgreSQL or Advanced Server products is
referred to as POSTGRES_INSTALL_HOME. For PostgreSQL Linux installations,
this defaults to /opt/PostgreSQL/x.x for version 10 and earlier. For later
versions, use the PostgreSQL community packages. For PostgreSQL Windows
installations, this defaults to C:\Program Files\PostgreSQL\x.x. For
Advanced Server Linux installations accomplished using the interactive installer
for version 10 and earlier, this defaults to /opt/PostgresPlus/x.xAS or
/opt/edb/asx.x. For Advanced Server Linux installations accomplished using
an RPM package, this defaults to /usr/ppas-x.x or /usr/edb/asx.x. For
Advanced Server Windows installations, this defaults to C:\Program
Files\PostgresPlus\x.xAS or C:\Program Files\edb\asx.x. The
product version number is represented by x.x or by xx for version 10 and later.
1.4 How to Use This Guide
The following is a list of suggested sections to read based upon your purpose for using
this guide.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 14
EDB Postgres Replication Server User’s Guide
 If you are interested in a general overview of xDB Replication Server, read
sections 2.1, 2.2, and 2.3.
 If you are planning on implementing a replication system using xDB Replication
Server, read sections 2.1, 2.2, 2.3, and 2.4.
 If you are ready to install, configure, and begin using xDB Replication Server for
single-master replication, read chapters 3, 4, 5, and 7.
 If you are ready to install, configure, and begin using xDB Replication Server for
multi-master replication, read chapters 3, 4, 6, and 7.
 If you are interested in using the command line interface instead of the graphical
user interface for operating xDB Replication Server, read Chapter 8.
 If you are interested in using the Data Validator, read Chapter 9.
 For certified and supported database product versions and configuration
combinations, read Section 10.1.
 If you are upgrading from a previous version of xDB Replication Server, read
Section 10.2.
 If you need help finding a solution to a problem, see Section 10.3.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 15
EDB Postgres Replication Server User’s Guide
2 Overview
This chapter defines basic replication terms and concepts, and presents an overview of
the components and architecture of xDB Replication Server. The chapter concludes with
design guidelines and directions for implementing a replication system using xDB
Replication Server.
2.1 Why Use Replication
Replication of data can be employed in a variety of use cases in organizations where it is
important to use the same data in multiple settings. This allows users to work with ‘real’
data that will yield ‘real’ results that are reliable in more than one setting. Support of both
single-master and multi-master replication gives xDB Replication Server a broad range of
supported use cases.
Some of the more popular uses of single-master replication include the following:
2.1.1 Offloading Reporting and Business Intelligence Queries
In this use case, users take all or just a subset of data from a production OLTP system and
replicate it to another database whose sole purpose is to support reporting queries. This
can have multiple benefits: a) reporting loads are removed from the OLTP system
improving transaction processing performance, b) query performance improves as well
without being subordinated to transactions on the system, and c) in Oracle installations,
the reporting server duties can be handled by a product like Advanced Server reducing
licensing costs for a reporting server.
2.1.2 Using Warm Standby Servers
When many organizations wish to improve the availability of their data, a cost effective
solution is often the use of warm standby servers. These are database servers kept up to
date with the online system through replication that can be brought online quickly in the
event of a failure in the production system. Warm standby servers can also be used for
regular maintenance by gracefully switching over to the standby server so that the
production server can be brought offline for regular maintenance.
2.1.3 Testing Systems in Parallel
Often times, upgrading or moving to a new database system requires that the old and new
systems be up and running in parallel to allow for testing and comparing results in real
time. Replication can be employed in this use case and is frequently used in development
and testing environments.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 16
EDB Postgres Replication Server User’s Guide
2.1.4 Migrating Data
Similar to running in parallel, is the situation where data may be migrated from one
system to another in a sort of ‘seeding’ operation. Replication can be very effective in
this situation by quickly copying data.
Some reasons to consider multi-master replication include the following:
2.1.5 Write Availability
In single-master replication, only the master database is available for writes. The slave
databases are read-only for applications. If the replicated target databases must be
available for write access as well, multi-master replication can be employed for the same
use cases as outlined for single-master replication, but with the additional advantage of
write access to the slaves.
2.1.6 Write Scalability
In write-intensive applications, multi-master replication allows you to utilize multiple
database servers on separate hosts to process write transactions independently of each
other on their own master databases. Changes can then be reconciled across master
databases according to your chosen schedule.
2.1.7 Localized Data Access
In a geographically dispersed application, local access to the database can be provided to
regions of clients. Having the database servers physically close to clients can reduce
latency with the database. Multi-master replication allows you to employ a WAN
connected network of master databases that can be geographically close to groups of
clients, yet maintain data consistency across master databases.
2.2 Replication Concepts and Definitions
xDB Replication Server is a software product that enables the implementation of a
replication system. A replication system is software and hardware whose purpose is to
make a copy of data from one location to another and to ensure the copied data is the
same as the original over time.
xDB Replication Server applies the replication system concept to tables of Oracle, SQL
Server, PostgreSQL, and Advanced Server database management systems.
The following sections present specific terms and concepts used when discussing xDB
Replication Server.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 17
EDB Postgres Replication Server User’s Guide
2.2.1 Comparison of Single-Master and Multi-Master Replication
There are two models of replication systems supported by xDB Replication Server:
 Single-Master Replication (SMR). Changes (inserts, updates, and deletions) to
table rows are allowed to occur in a designated master database. These changes
are replicated to tables in one or more slave databases. The replicated tables in the
slave databases are not permitted to accept any changes except from its designated
master database. (This is also known as master-to-slave replication.)
 Multi-Master Replication (MMR). Two or more databases are designated in
which tables with the same table definitions and initial row sets are created.
Changes (inserts, updates, and deletions) to table rows are allowed to occur in any
database. Changes to table rows in any given database are replicated to their
counterpart tables in every other database.
For a single-master replication system, a variety of configurations are supported
including:
 Replication between PostgreSQL and Advanced Server databases (between
products in either direction)
 Replication from Oracle to PostgreSQL
 Replication in either direction between Oracle and Advanced Server
 Replication in either direction between SQL Server and PostgreSQL
 Replication in either direction between SQL Server and Advanced Server
For multi-master replication, the participating database servers in a given multi-master
replication system must be of the same type:
 PostgreSQL database servers
 PostgreSQL database servers and Advanced Servers operating in PostgreSQL
compatible mode
 Advanced Servers operating in PostgreSQL compatible mode
 Advanced Servers operating in Oracle compatible mode
Note: A given database cannot simultaneously participate in both a single-master
replication system and a multi-master replication system.
2.2.2 Publications and Subscriptions
xDB Replication Server uses an architecture called publish and subscribe. The data to be
made available for copying by a replication system is defined as a publication. To get a
copy of that data, you must “subscribe” to that publication. The manner in which you
subscribe is slightly different for single-master and multi-master replication systems.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 18
EDB Postgres Replication Server User’s Guide
In xDB Replication Server a publication is defined as a named set of tables and views
within a database. The database that contains the publication is called the publication
database of that publication.
In a single-master replication system, to get a copy of an xDB Replication Server
publication, you must create a subscription. An xDB Replication Server subscription is a
named association of a publication to a database to which the publication is to be copied.
This database is called the subscription database.
Similar to a single-master replication system, when creating a multi-master replication
system, you first define a publication in the publication database. You then add one or
more additional databases that you want to participate in this multi-master replication
system. As you add each database, it is associated with this replication system. You do
not create an explicit, named subscription in a multi-master replication system.
In a single-master replication system, replication is said to occur when xDB Replication
Server initiates and completes either of the following processes: 1) applies changes that
have been made to rows in the publication since the last replication occurred, to rows in
tables of the subscription database (called synchronization); or 2) copies rows of the
publication to empty tables of the subscription database (called a snapshot). See Section
2.2.6 for further discussion on snapshots and synchronization.
The subscription tables are the tables in the subscription database created from
corresponding tables or views in the publication.
Note: In a single-master replication system xDB Replication Server creates a table in the
subscription database for each view contained in the publication.
In a multi-master replication system, the concept and definition of replication is nearly
identical to a single-master replication system with the following modifications: 1)
synchronization can occur between any pair of databases (referred to as master nodes)
participating in the replication system; and 2) a snapshot can occur from the publication
database designated as the master definition node to any of the other master nodes.
The following diagrams illustrate some basic single-master replication system examples.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 19
EDB Postgres Replication Server User’s Guide
Figure 2-1 - Publications in one database replicating to subscriptions in another database
Figure 2-2 - Publications replicating to two subscription databases
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 20
EDB Postgres Replication Server User’s Guide
Figure 2-3 - Publications in two databases replicating to one subscription database
Figure 2-4 – Cascading Replication: Tables used in both a subscription and a publication
The preceding diagram illustrates that a table that has been created as a member of a
subscription can be used in a publication replicating to another subscription. This
scenario is called cascading replication.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 21
EDB Postgres Replication Server User’s Guide
The following diagram illustrates a multi-master replication system with three master
nodes.
Figure 2-5 – Multi-master replication system
2.2.3 Single-Master (Master-to-Slave) Replication
xDB Replication Server performs master-to-slave replication when a single-master
replication system is implemented. The publication is the master and the subscription is
the slave. In a master-to-slave relationship, changes are propagated in one direction only,
from the master to the slave.
Copyright © 2010 - 2018 EnterpriseDB Corporation. All rights reserved. 22
EDB Postgres Replication Server User’s Guide
Figure 2-6 – Single-Master (Master-to-Slave) replication
Generally, changes must not be made to the definitions of the publication tables or
the subscription tables. If such changes are made to the publication tables, they are not
propagated to the subscription and vice versa unless the DDL change replication feature
is used as described in Section 7.8. If changes are made to the table definitions without
using the DDL change replication feature, there is a risk that future replication attempts
may fail.
Changes must not be made to the rows of the subscription tables. If such changes are
made, they are not propagated back to the publication. If changes are made to the
subscription table rows, it is fairly likely that the rows will no longer match their
publication counterparts. There is also a risk that future replication attempts may fail.
2.2.4 Multi-Master Replication
As an alternative to the single-master (master-to-slave) replication model, xDB
Replication Server supports multi-master replication.
The following definitions are used when referring to multi-master replication systems.
A master node is a database participating in a multi-master replication system.
The database (master node) in which the publication is initially defined is specially
designated as the master definition node (MDN). There can be only one master definition
node at any given time, however, it is possible to change which master node is the master