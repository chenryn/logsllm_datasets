title:The Triple-Channel Model: Toward Robust and Efficient Advanced Botnets
(Poster Abstract)
author:Xiang Cui and
Jinqiao Shi and
Peng Liao and
Chaoge Liu
The Triple-Channel Model: Toward Robust   
and Efficient Advanced Botnets (Poster Abstract) 
Cui Xiang1, Shi Jinqiao2, Liao Peng1, and Liu Chaoge1 
1 Institute of Computing Technology, Chinese Academy of Sciences 
2 Institute of Information Engineering, Chinese Academy of Sciences 
PI:EMAIL 
Abstract. Botnet robustness and efficiency are two contradictory features from 
a general point of view. To achieve them simultaneously, we design a command 
and control (C&C) channel division scheme and then propose a Botnet Triple-
channel  Model  (BTM).  BTM  divides  a  C&C  channel  into  three  independent 
sub-channels, denoting as Command Download Channel, Registration Channel 
and Data Upload Channel, respectively. Botnets based on BTM will promise to 
be as robust as P2P botnets and as efficient as centralized botnets. 
Keywords: botnet, Triple-Channel, BTM, C&C. 
1 
Background and Problem Analysis 
Most of current botnets could not achieve robustness and efficiency at the same time. 
For  example,  Rustock,  Mariposa,  Coreflood,  and  Waledac/Kelihos  have  paid  much 
attention  to  efficiency,  while  being  shut  down  due  to  C&C  protocol  vulnerabilities. 
On the other hand, Conficker, which constructs  an  extremely robust C&C channel, is 
ineffective in the aspect of monitoring the botnet and retrieving the collected data.   
The  internal  cause  of  the  contradictory between  robustness and efficiency probably 
lies  in  the  fact  that  current  botnets  always  rely  on  only  one  C&C  protocol  to 
accomplish  all  tasks,  however,  it  is  impossible  for  any  existing  C&C  protocol  to 
satisfy all requirements solely. Fox example, the robust P2P/URL Flux [1] protocols 
have  no  upstream  channels;  the  recoverable  Domain-flux  protocol  is  limited  by 
performance and vulnerable to sinkhole attack. In a word, each C&C protocol has its 
particular advantages as well as corresponding limitations. BTM aims at solving the 
problem to some degree. 
2 
The Proposed Botnet Triple-Channel Model 
BTM  (shown  in  Fig.1)  includes  three  independent  C&C  sub-channels.  Each  sub-
channel, determined by its characteristic, is responsible for particular task. 
Command  Download  Channel  (CDC).  CDC  is  only  responsible  for  commands 
distribution.  CDC  must  be  extremely  robust,  recoverable  and  high-performance  to 
defend  against  worldwide  coordinated  countermeasures;  while 
the  uploading 
capability is not indispensable. Therefore, URL Flux/P2P style protocols are suitable; 
although they are unidirectional (data can and can only transfer from servers to bots). 
D. Balzarotti, S. Stolfo, and M. Cova (Eds.): RAID 2012, LNCS 7462, pp. 376–377, 2012. 
© Springer-Verlag Berlin Heidelberg 2012 
The Triple-Channel Model 
377 
Fig. 1. Botnet Triple-Channel Model 
Registration Channel (RC). RC is only responsible for fundamental information 
(i.e., the automatically generated BotID and individualized symmetric key, IP and OS 
etc.) collection. The information will be used for monitoring botnet size, encrypting 
data,  etc.  RC  must  be  bidirectional,  encrypted  and  recoverable  to  enable  uploading 
activities and defend against monitoring, sinkhole and host-level forensics; while the 
robustness and high-performance features are not indispensable. Therefore, Domain-
flux style protocol is suitable, although it is vulnerable to DDoS and sinkhole attack. 
Data Upload  Channel (DUC). DUC is only responsible for collecting and storing 
the  uploaded  information. DUC requires  high-performance  and  mass storage space to 
enable massive data uploading in parallel by large-scale botnets. Furthermore, it must 
ensure  the  uploaded  information  can  and  can  only  be  located  and  decrypted  by 
botmasters who own bots’ BotIDs and individualized symmetric keys. However, DUC 
is not necessary to be recoverable. Thus, those free cloud-based file hosting services [2] 
could be exploited. To go a step further, we can combine cloud and URL Shortening 
Services  supporting  custom  alias (i.e.,  tinyurl.com)  together  to  enable  botmaster  to 
locate  the  uploaded  file  automatically,  since  bots  could  make  the  file  downloading 
URLs  computable  and  predictable  by  constructing  custom  shorten  URLs  which  end 
with BotID and current date (i.e., http://tinyurl.com/BotID_20120605_001). 
In  future  works,  we  will  prove  the  completeness  and  independence  of  the  triple 
sub-channels and invests more research on how to fight against BTM-based botnets. 
References 
1.  Xiang, C., Binxing, F., Lihua, Y., Xiaoyi, L.: Andbot: Towards Advanced Mobile Botnets. 
In:  Proceedings  of  the  4th  USENIX  Workshop  on  Large-scale  Exploits  and  Emergent 
Threats, LEET 2011 (2011) 
2.  Paz, R.D.: Malware Uses Sendspace to Store Stolen Documents (February 2012),   
http://tinyurl.com/use-Cloud-but-no-ShortenURL