# MesaTEE SGX：借助 Intel SGX 重新定义人工智能和大数据分析

## 演讲者简介
- **姓名**：Yu Ding
- **职位**：百度 X-Lab 安全研究员
- **演讲日期**：2019年5月29日
- **个人网站**：[https://dingelish.com](https://dingelish.com)
- **GitHub**：
  - [https://github.com/dingelish](https://github.com/dingelish)
  - [https://github.com/baidu/rust-sgx-sdk](https://github.com/baidu/rust-sgx-sdk)

### 背景信息
- 百度 X-Lab 安全研究员
- Rust 爱好者
- 漏洞利用/缓解领域博士
- 参与 Rust-SGX 项目

## 主题介绍
MesaTEE SGX 旨在通过 Intel SGX 技术，为人工智能和大数据分析提供一个安全且可信的计算环境。

### 适用于隐私保护计算的 Intel SGX
#### Intel SGX 背景
Intel SGX（Software Guard Extensions）是一种硬件技术，它允许应用程序在受保护的执行环境中运行。这种环境被称为“飞地”（Enclave），可以防止未经授权的访问，包括高特权软件和操作系统。

- **应用背景**：面对高特权代码攻击时，常规应用无法得到充分保护。
- **技术特点**：
  - 保密能力：为任何应用程序提供保密性。
  - 新指令集：使用全新的处理器指令来实现这一功能。
  - 多个飞地支持：一个应用程序可以支持多个飞地。
  - 完整性和机密性：确保数据的完整性和机密性。
  - 抵御硬件攻击：防止硬件级别的攻击。
  - 防止软件访问：阻止高特权软件和系统管理模式（SMM）的访问。
  - 易于集成：应用程序在操作系统内部运行，学习曲线较低。
  - 开放性：面向所有开发者开放。

#### 基于 Intel SGX 构建隐私保护计算软件栈所面临的挑战
- **硬件局限**：
  - 无系统调用（syscall）
  - 无 RDTSC（时间戳计数器）
  - 无 CPUID
  - EPC 内存限制为 128 MB，页面错误驱动的内存交换速度缓慢
  - 无 mprotect

- **软件局限**：
  - 存在内存 Bug
  - 内存安全性问题（如溢出、UAF、数据争用、ROP）

### Hybrid Memory Safety
- **经验法则**：如何在 Intel SGX 中实现内存安全。
- **实践**：具体的技术实现和案例分享。

### 塑造安全且可信的人工智能/大数据分析框架
- **可信的定义**：解释什么是可信，并讨论其重要性。
- **实现方法**：使用 Intel SGX 实现可信赖的人工智能和大数据分析。

### 解决方案概述
- **建立信任和 TEE**：使用 Intel SGX 建立信任和可信执行环境（TEE）。
- **身份验证/授权**：安全可信的身份验证和授权机制。
- **通信渠道**：安全可信的通信渠道。
- **执行环境**：安全可信的执行环境。
- **系统构建**：使用 hybrid memory safety 构建系统。
- **可信赖的应用**：实现可信赖的人工智能和大数据分析。

### 各方角色
- **云供应商**
- **数据所有者**
- **算法提供商**（也可以是数据所有者）
- **相互之间无法信任**：确保数据在离开所有者后依然受到控制。

### 总结
- **Intel SGX 的简单总结**：提供了保密能力、完整性保证和抵御攻击的能力。
- **挑战总结**：详细介绍了基于 Intel SGX 构建隐私保护计算软件栈所面临的硬件和软件挑战。

通过以上内容，我们希望能够为大家展示如何利用 Intel SGX 技术来构建一个安全且可信的人工智能和大数据分析框架。