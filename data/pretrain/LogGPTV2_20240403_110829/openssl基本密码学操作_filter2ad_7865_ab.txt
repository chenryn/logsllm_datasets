openssl rsautl -encrypt -pubin -inkey rsa.pub  dst
注意输出长度和位数相等（这里是2048）。
**数据解密**
openssl rsautl -decrypt -inkey rsa.key  src.new
diff src src.new
注意公钥加密私钥解密。
###  签署验证
**数据签署**
openssl rsautl -sign -inkey rsa.key  dst
注意输出长度和位数相等（这里是2048）。
数据验证有多种方法，第一种是直接用rsautl
openssl rsautl -verify -pubin -inkey rsa.pub  src.new
diff src src.new
注意私钥签署公钥验证。
另一种是用pkeyutl，注意这里有两种效果。
openssl pkeyutl -verify -pubin -inkey rsa.pub -sigfile sig  ecc.key
查看密钥
openssl ec -text  ecc.pub
openssl ec -text -pubin  ecc.pub
pkey指令也可以用于其他方面，例如加解密。具体就不赘述了。
**签署和验证**
ECC的签署和验证就要借助于pkey指令了，具体来说，是pkeyutl指令。注意，这里的形态和RSA的形态不一样。
openssl pkeyutl -sign -inkey ecc.key  sig
openssl pkeyutl -verify -pubin -inkey ecc.pub -sigfile sig 
），dh的私钥应当支持derivation操作。然而杯具的是，我实际测试openssl pkeyutl -derive -inkey
dhparam1.pem -peerkey
dhparam2.pem无法执行，不知道是不是因为dhparam都是priv的缘故。但是dhparam里确实没有生成公钥的参数。
无论如何，在nginx里，dhparam是一个重要参数。如果你使用默认的dhparam，会被警告不安全。
## DSA的生成和使用
首先，DSA只支持签署和验证。
###  公私钥对的生成
和RSA非常像，但是有点区别。
openssl dsaparam -genkey 2048 > dsa.key
另外注意，dsaparam参数是不支持加密的。如果要加密，需要写成这个样子。
openssl dsaparam -genkey 2048 | openssl dsa -aes128 > dsa.key
同类，如果要读取内容的话，可以这么做。
openssl dsa -text  dsa.pub
我们把公钥和私钥分别打出来，可以发现，公钥的要素是pub，P，Q，G。私钥多一项priv。
###  签署验证
这是另一个奇怪的地方。根据pkeyutl的manpage
（
），DSA的key支持sign(而且只支持sign)。可是我在实验openssl pkeyutl -sign -in src -inkey dsa.key
-out sig的时候，又失败了。这个例子是直接抄的manpage，错误提示是Public Key operation
error。如果有朋友知道为什么，欢迎沟通交流。
审核人：yiwang 编辑：边边