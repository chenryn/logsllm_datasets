It appears that you are encountering a `NotConfigured` error, indicating that the `celeryconfig.py` file cannot be found. This issue can occur even if you have defined the configuration in your `/etc/profile` and in your virtual environment's `activate` script.

To resolve this, please ensure that the `celeryconfig.py` file is located in the same directory from which you are running the `celeryd` command. Alternatively, make sure that the `celeryconfig.py` file is available on the Python path. Here are some steps to help you troubleshoot and resolve the issue:

1. **Verify the Location of `celeryconfig.py`**:
   - Ensure that `celeryconfig.py` is in the correct directory. It should be in the same directory where you are executing the `celeryd` command or in a directory that is included in the Python path.

2. **Check the Python Path**:
   - You can check the current Python path by running the following command in your terminal:
     ```sh
     python -c "import sys; print(sys.path)"
     ```
   - Make sure that the directory containing `celeryconfig.py` is listed in the output. If it is not, you may need to add it to the Python path.

3. **Update Environment Variables**:
   - Ensure that the `PYTHONPATH` environment variable includes the directory where `celeryconfig.py` is located. You can update the `PYTHONPATH` in your shell session with the following command:
     ```sh
     export PYTHONPATH=$PYTHONPATH:/path/to/your/directory
     ```

4. **Virtual Environment Activation**:
   - If you are using a virtual environment, make sure it is activated and that the `celeryconfig.py` file is accessible within the virtual environment. You can activate your virtual environment using:
     ```sh
     source /path/to/your/virtualenv/bin/activate
     ```

5. **Configuration in `/etc/profile`**:
   - If you have added the `PYTHONPATH` or other environment variables to `/etc/profile`, ensure that you have sourced the profile or restarted your terminal session for the changes to take effect:
     ```sh
     source /etc/profile
     ```

By following these steps, you should be able to ensure that `celeryconfig.py` is correctly located and accessible, resolving the `NotConfigured` error.