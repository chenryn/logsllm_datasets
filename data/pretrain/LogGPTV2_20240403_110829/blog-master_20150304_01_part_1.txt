## PostgreSQL 线性回归 - 股价预测 1     
### 作者      
digoal        
### 日期        
2015-03-04             
### 标签       
PostgreSQL , 线性回归 , 数据预测 , 股价预测                  
----         
## 背景    
本文是一个简单的一元线性回归的例子, 需要了解相关理论知识可参考 :   
[《在PostgreSQL中用线性回归分析(linear regression) - 实现数据预测》](./20150303_01.md)  
数据来自股票的收盘价.  
如果要做多元分析, 请自行增加维度(例如大盘指数,成交量,最低,最高价,价格区间等等都可以那里做回归计算), 计算期望值.  
例子如下 :   
按实际顺序录入test, 如时间从小到大, ID从小到大, 最终目标是用前一个值预测下一个值  
第一条记录是最老的值, 最后一条记录是最新的值, 不要搞反了.  
```  
create table test(id int, cnt numeric);  
```  
以下是网友提供的阿里巴巴的收盘价数据  
格式 date,close,volume,open,high,low  
```  
vi ali.txt  
2015/3/3,81.58,39173430,82.95,83.25,80.03  
2015/3/2,84,11175870,85,85.02,83.75  
2015/2/27,85.12,8362081,85.95,86.56,85  
2015/2/26,85.37,8758019,86.92,87.16,85.2  
2015/2/25,86.19,13592080,84.38,86.83,84.36  
2015/2/24,84.69,15817560,85.53,85.53,83.88  
2015/2/23,85.47,9352529,86.51,86.68,85.25  
2015/2/20,86.64,7805009,87.25,87.29,86.38  
2015/2/19,86.89,7568275,86.81,87.87,86.71  
2015/2/18,86.74,7415961,87.1,87.43,86.5  
2015/2/17,86.85,15133130,88.78,88.99,86.7  
2015/2/13,89.05,14587390,88.2,89.3,87.65  
2015/2/12,87.1,15143910,85.6,88.3,85.55  
2015/2/11,86,12281340,87.58,87.7,85.82  
2015/2/10,87.26,12026260,87.01,87.47,86.52  
2015/2/9,86,12088070,85.83,86.75,85.47  
2015/2/6,85.68,17597490,87.11,87.4,85.42  
2015/2/5,87,28867570,89.58,89.84,86.1  
2015/2/4,90,14599400,90.99,91.88,89.48  
2015/2/3,90.61,13475970,91.65,91.65,89.9  
2015/2/2,90.13,18845140,91.13,91.66,88.61  
2015/1/30,89.08,36747370,89.6,92,88.11  
2015/1/29,89.81,76430640,90.53,90.74,87.36  
2015/1/28,98.45,42012700,100.3,101.49,97.79  
2015/1/27,102.94,15591560,102.89,103.57,100.58  
2015/1/26,103.99,10656340,104.4,105.13,103.33  
2015/1/23,103.11,9860504,104.02,105.2,103.02  
2015/1/22,104,11400180,104.6,104.92,103.1  
2015/1/21,103.29,15141470,100.75,103.86,100.32  
2015/1/20,100.04,12049470,98.3,100.21,97.59  
2015/1/16,96.89,13313120,96.09,97.8,95.52  
2015/1/15,96.31,18182200,99.67,100.14,96.02  
2015/1/14,99.58,17785990,99.28,100.18,98.06  
2015/1/13,100.77,11275790,102.59,102.85,100.01  
2015/1/12,101.62,7946740,103.2,103.36,101.21  
2015/1/9,103.02,10193410,105.24,105.3,102.89  
2015/1/8,105.03,12904640,102.95,105.3399,102.68  
2015/1/7,102.13,11000010,104.59,104.74,102.03  
2015/1/6,103.32,15662710,101.25,103.85,100.11  
2015/1/5,101,18313750,102.76,103.02,99.9  
2015/1/2,103.6,12286400,104.24,104.72,102.52  
2014/12/31,103.94,10254350,106.46,106.47,103.69  
2014/12/30,105.75,10185890,105.64,106.71,105.13  
2014/12/29,105.98,8059191,105.95,107.66,105.64  
2014/12/26,105.95,6523956,105.99,106.94,105.5  
2014/12/24,105.95,5870358,105.68,107.21,105.6  
2014/12/23,105.52,19077270,108.3,108.47,103.88  
2014/12/22,108.77,12985130,110.63,110.98,108.53  
2014/12/19,110.65,14785340,109.93,110.65,108.04  
2014/12/18,109.25,22749890,110.58,111.2,108.26  
2014/12/17,109.02,17242940,107.11,109.19,106.28  
2014/12/16,105.77,21655360,103.75,107.68,103.7  
2014/12/15,104.7,16476750,106.39,107.77,103.7  
2014/12/12,105.11,14504050,104.7,107.45,104.179  
2014/12/11,104.97,15658440,104.44,106.84,104.29  
2014/12/10,103.88,18398440,107.09,107.38,103.51  
2014/12/9,107.48,24805130,102.27,107.95,101.2  
2014/12/8,105.07,19166550,105.97,107.4,104.2101  
2014/12/5,107.9,12125090,109.6,110.35,107.76  
2014/12/4,109.17,10790400,110.1,110.5,108.91  
2014/12/3,110.64,16164860,110.4,111.68,108.798  
```  
导入数据库  
```  
create table tmp(c1 text,c2 numeric,c3 numeric,c4 numeric,c5 numeric,c6 numeric);  
copy tmp from '/home/postgres/ali.txt' with (format csv);  
```  
调换一下顺序  
```  
insert into test select row_number() over(order by ctid desc), c2 from tmp;  
```  
校验函数  
```  
CREATE OR REPLACE FUNCTION public.check_predict(  
IN ov integer,   --  校验哪条记录  
OUT rv numeric,  --  真实值  
OUT pv numeric,  --  预测值  
OUT dev numeric, --  误差  
OUT zv numeric,  --  自变量  
OUT v_slope numeric, --  斜率  
OUT v_inter numeric, --  截距  
OUT v_r2  numeric  --  相关性  
)  
 RETURNS record  
 LANGUAGE plpgsql  
AS $function$  
declare   
  r2_1 numeric := 0; -- 相关性  
  r2_2 numeric := 0; -- 最大相关性  
  var int;           --  样本起点  
  inter_1 numeric;  --  截距  
  slope_1 numeric;  --  斜率  
  inter_2 numeric;  --  最大相关性截距  
  slope_2 numeric;  --  最大相关性斜率  
  realv numeric;    --  真实数据  