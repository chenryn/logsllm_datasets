---
## Page 235
版本控制
碰头会议
Bob：嗨，伙计们。好消息：我准备用Windows Messenger 版本开
发，进展顺利。但也有坏消息，SendPicture功能中的图像处理存在
一个漏洞，我得回到第一个开发循环。
Laura：那不是太好喔。我们可以等你修补该漏洞吗？
Bob：我想不行。如果有人搞清楚了如何发送恶意的图片，这就是一
个潜在的安全漏洞。用户将对这件事非常地恼怒。
Mark：这表示用户真会因为这件事情面恼怒，你能修补它吗？
Bob：我能修补它。但在新的使用情节和日志文件上，还有很多代
码等着我去修改，而且这些还没有准备好。
Laura：所以，我们打算倒回到你的修改，发布需打补丁的1.0版本。
Mark：我们要例回到哪里？对很多文件都做了一点修改。我怎么知
道哪一个是1.0版本？
Bob：忘掉1.0版本吧，我们手上的工作怎么办？如果你打算例回去，
会把我们过去做的每件事情放弃，
动脑筋
团队陷于了困境一—在发布的版本中，有一个严重的漏润，但在新的版本中
已投入了很多精力。但新的版本还没有准备发布。你怎么办？
目前位置
199
---
## Page 236
处理多个版本
我们的软件具有一个以上的版本·
到这里，真正的问题是我们的软件不止有一个版本，或者更准确地说，需要我
们去修改的源代码有一个以上的版本。我们完成1.0版本的代码构建和发布，但
Bob发现存在一个很严重的漏洞。最为重要的是，我们的2.0版本已经在进行当
中，但在2.0版本中，又充满了未经测试和不能工作的功能。
我们需要以某种方式将它们分开
过年
BeatBoxPro1.0
2.0
你们从运置开始了第一
送置是你们完成1.0版本的地
你们在运置。
个异夏他环，便用来自
方……大的交付哦金
这是印标
《HeiFist a）的
始版本。
满11
你总是处在两难境地：
本章要点
已发布的版本中漏洞
对客户而言，已发布的软件的漏润比实施新的功
和下一个版本的新功
能具有更高的优先级。
能。由你与客户沟通
■漏洞的修复对发布的软件有影响，并且要在正在
平衡远两难。
进行中的软件版本中实施修复。
■有效的漏洞修复取决于定位出特定的版本，并且
在不影响现有开发的情况下，对这些版本进行修
改。
200
第6章
---
## Page 237
版本控制
你不停地说“1.0版本”，但那是什么意思？
从那时起，我们已提交了一堆修改到容储目
（录。
缺省时，版本控制软件给你的是来自主干的代码
有业系统称之为兵或主行
你是正确的。当你从版本控制系统中调出代码时，你正在从主干
中调出代码。那是默认的最新代码，并且全部都是最新的漏词功
能（假定开发人员都是有规律地提交他们的修改）。
还记得一出现的重平
trunk
喝：那是最新的和信大的
atBox\src
代码慎存储的地方。
Beataox\src\headfirst
BeatBox\aro\headfirat\ad
Beataox\arc\headfirat\ed）ch
eatBox
oK.3av
E.ava
outrevision1
即使款件版本没有被标出采，但我在某个地
方有1.0版本的代码，对响？我们只是需要以
某种方式在服务器上效到它
版本控制软件储存了全部代码
每次当你向版本控制系统提交代码时，修订号附加在软件的
修改处，因此，如果你能判断出发布的1.0版的软件的修订号，
事情就好办。
hfed
这置是这一通停改后的
file
传行号，每提交一次，
18
终行号就增加一次，
hfsd:
目前位置
201
---
## Page 238
浏览日志
良好的提交信息使查找旧的软件版本
更加容易
每次你向版本控制系统提交代码时，你都附上了清晰的描述信息，对
吗？下面说说它们的重要性。正像每次提交都能得到修改号一样，版
本控制软件也保存着你提交的信息并附带上了修订号，并且，你可以
在日志文件中查看它们：
想定哪个文件去获得目。
为了肤得目惠文
件：
我们使用
"log
src/headfirst/sd/chapter6/BeatBox.java
r51Bob12007-09-0311:45:28-0400 (Mon,03Sep 2007)152 1ines
Sbvetsix应给
我们那个文件的全
部0志务0.
这里是附带的
Merged picture support vith Poke stuff.
0$信s.
21Mark|2007-08-2111:45:28-0400（Tues,21Aug 2007）|371ines
Added POKEsupport
r11Hark|2007-08-2020:08:14-0400(Mon,20 Aug2007)111ine
Stesi-
综谁在付名时间
Initial Inport
做了付么修验，
hfsd>
通过日志信息查找功能
你已经开始去弄清楚哪些功能在软件系统中，此案例中，指的是
1.0版本，然后，你就能弄清楚哪些修订与之相匹配。
使用上面的日志文件，你认为哪一修订版本与BgatBoxPro1.0版本
一致？
个
记票下为了得到1.0服本
你想是调出的停行号
202
毫9
---
## Page 239
版本控制
现在你可以调出1.0版本
在Sfnsin中，一明你
我们正在抓取第4次传仍版
0
一且你知道要调出
哪一个修订版本时，
hfsd
版本控制系统能给
你需要的代码：
BeatBoxV1.0\arc
BeatBoxV1.0\src\headfirst
BeatBoxV1.0\srcheadfirst\sd
这金特代研效
BeatBoxV1.o\sre\headfirst\sd\chapter6
到为1.0脱本准
BeatBoxV1.0\src\headfirst\sd\chapter6\BeatBox.java
条的新的目录
BeatBoxV1.0\src\headfirst\sd\chapt
ecked out revision 4.
2
现在你可以修复
服本控制照务器系一次给你
Bob发现的漏洞
标准的，可工的代码
BeatBox.java
③
完成修改后，
向
服务器提交你的代
src/headfirst/ad/chap
oter6/BeatBox.ja
FLxed
the
sre\headfirst\sd\chapt
er6VBeatE
svn:Con
mmitfailed(detailsfollow):
唯，卷起来照
务器对你更新的一
svn:Out of date:
代码不清象。
afsd>
准备练习
发生了什么事？
为什么？
那么，现在我们怎么办？
目前位置
203
---
## Page 240
标准修订
（紧急）碰头会议
如果是现问题，不要等到明天，把每个人
抵来，孕集一个略时的础头会，
Laura：我们以前调出1.0版本是没有什么问题的，但现在版本
控制服务器不允许我们提交回我修改过的代码，提示说我们的
文件过期了
Mark：哦，你知道的。那可能是好事情。如果我们能提交，就
不能成为第六次修订版，那不是意味着最新的版本中没有Bob的
修改？
Bob：响，说的没错。你可能用旧的1.0版本跳过了我的代码。
我不想我的心血白费！
Laura：你应该在你本地的机器上有存档吧，对吗？只要把它与
新修改过的文件合并之后再提交，就可以了。
Bob：啊！这种办法很差劲：是件苦差事，如果下次我们发现了
一个漏洞，还需要在1.0版本上打补丁，怎么办？
Mark：我们必须记住新的1.0修订版是什么。一且我们弄清楚如
何提交这些代码，我们将记录下修改号，并用该修改号作为针
对1.0的其他修改的代码基础。
Laura：新的1.0修改？我们不是到了1.1版吗？
Bob：是啊！没错。但还是有一点儿乱
准备练习
上述方法是对1.0版本（或者是1.1版本？）处理以后的修改问
题，写下3个其中存在的问题。
1.
在21
2.
e
3.
204
第6章
---
## Page 241
版本控制
标记你的软件版本
修订系统（Revision system）非常的棒，能让我们回到我们1正在寻找的版本
的代码，并且幸运的是日志信息能足够帮助我们弄清楚我们需要修订的是
什么。大多数版本控制工具提供了一个较好的方法，跟踪与该版本相应的
有意义的事件，如发布或是一个开发循环的结束。它们被称为标记（Tag）。
让我们为BeatBoxPro标记代码，我们刚才把它确定为1.0版本。
首先，你需要为标注在存储目录中创建一个目录。为了项目，你只需
要这样做一次。（这是Subversion特定的：多数版本控制工具不需要
代替主平。在这
这类目录就支持标注。）
置得定标记目录
你可以使用
mkin命令制
建标记0录。
"Created ta
itted re
hfad
这置是口志信息一注象，它创建一个修行版，这是
对项目的一个酸，国此，Saesir球综它。
2
现在，标记初始的1.0发布版，也是来自存健目录中的第四次修订
版。
我们想要主平的第四次停行版
使用Snvetsiox,
1le:///e:/Usera
-r4file://c:/Users/Developer/Deskt
通过把你5暑的
trun?
vel
修订版复制到
Tagging the 1.0release of BeatBox Pro.
标记0录中，创
建了一个标记。
mitted revision 6.
Sxbvetsiex实际上
把版本标记务发
hfod
布版关联在一起，
我们准务把代研放在名为
on-1.0的标记.
那又如何？
那么，我们能得到什么？好的，代替需要知道1.o版本的修订号，并且说svncheckout
4……你可以用以下
方式调出版本1.0的代码：
svn checkout file:///c:/Users/Developer/Desktop/SVNRepo/BeatBox/tags/version-l. 0
Subversion会记住标记与存储目录中的哪个修订版相一致。
目前位置
205
---
## Page 242
分支与标记
现在我知道服本1.0在部里，太好了，但我
们仍然有1.0的代码，持型业须提文这登修踪。
我们要模交我们更新的代码到1.0版本标记响？
标记只是标记：它是你做标记处的代码的快照。你不想提
交任何修改到该标记，否则1.0版本就变得毫无意义了。有些版本控
制工具处理标记非常不同，以至于不可能提交任何修改到标记之中
（Subversion不是这样，它可能提交到标记中，但这是很坏、很坏的想
法）
但是！
我们能采用同样的想法，并为第四修订版做一个副本，
第四修订版是我们将提交修改的地方：这就是所谓的分支。因此，标记
是你的代码在某个时点的快照，而分支（Branch）是你修改代码的地
方，而且不是在代码开发的主干上。
1
像标记一样，我们需要为项目中的分支创建一个目录。
代警主干，我们在这
置格定分支司录。
两用min命今
dirfile:///o:/Users/De
r/Desktop/sv
创建分支目录。
m“Created br
mitted revision 8.
hfsd>
2
现在，为存储目录中的第四修订版创建version-1分支。
我们想是主干的第世修行版
4file:///e:/Users/De
file:///c:/U
chedthe 1.0rele
itted revision 9
afsd>
利用Sabnim，你创建了像标记一样的分支，你把想要
我们想要把它效进写为etsix-1的分支之中
的停行版复制到了分支目录。Ssbnsion实际上不含复制
（不是1.0版本，图为我们金用它代采1.（版
任何东要，它只是存储你提供的传收号。
本7.2版本等）
206
第6章
---
## Page 243
版本控制
标记、分支和主干，哦，我的天！
你的版本控制系统已经有很多工作在进行，但大多数复杂的事情是由
服务器来管理，你无需担心什么事情。我们已经标记了1.0版本的代码，
在新的分支中做了修改，并且在主干中还在进行着开发。以下是存储日
录的样子：
BeatBoxPro1.0,
主干
现在，在我们的代码中将到
version-1
Bob的所有收仍然在主分支
了一个标记，它标记已有的
它波称之为主王。
修行版的Vension-f.0
我们用一个分支来为1x做修
收，并显舍在分支企修验代
在速置，你舍
端，与新的再羞分异。