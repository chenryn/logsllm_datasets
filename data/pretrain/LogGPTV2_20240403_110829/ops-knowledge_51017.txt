### 跟踪Iptables规则的解决方案

**问题描述：**
我正在寻找一种简便的方法来跟踪数据包通过Iptables规则的过程。这不是关于日志记录的问题，因为我并不想记录所有的流量（只希望在少数规则中使用LOG目标）。

我想要一个类似于Wireshark的工具，或者像编程语言中的调试器那样的工具。这个工具不一定要有华丽的图形界面，但应该能够提供比简单的包计数更多的信息。

**更新：**
看起来目前还没有找到完全满足需求的工具。那么，我们至少需要找到一种基于Iptables日志的技术，该技术可以轻松地启用和禁用，并且不需要冗余地编写iptables规则（例如，为-j LOG和-j ...编写相同的规则）。

**解决方案：**
如果你的内核版本和Iptables版本足够新，你可以使用TRACE目标（似乎在Debian 5.0及更高版本中已经内置）。你应该尽可能具体地设置跟踪条件，并在不进行调试时禁用任何TRACE规则，因为它们会生成大量日志信息。

#### TRACE目标
TRACE目标会在数据包经过表、链和规则时标记它们，使内核记录每个匹配的数据包。这些数据包将带有以下前缀的日志字符串：“TRACE: 表名:链名:类型:规则编号”，其中类型可以是“rule”（普通规则）、“return”（用户定义链末尾的隐式规则）或“policy”（内置链的策略）。它只能在raw表中使用。

**示例规则：**

```bash
iptables -t raw -A PREROUTING -p tcp --destination 192.168.0.0/24 --dport 80 -j TRACE
iptables -t raw -A OUTPUT -p tcp --destination 192.168.0.0/24 --dport 80 -j TRACE
```

**日志输出示例：**

```plaintext
# cat /var/log/kern.log | grep 'TRACE:'
Mar 24 22:41:52 enterprise kernel: [885386.325658] TRACE: raw:PREROUTING:policy:2 IN=eth0 OUT= MAC=00:1d:7d:aa:e3:4e:00:04:4b:05:b4:dc:08:00 SRC=192.168.32.18 DST=192.168.12.152 LEN=52 TOS=0x00 PREC=0x00 TTL=128 ID=30561 DF PROTO=TCP SPT=53054 DPT=80 SEQ=3653700382 ACK=0 WINDOW=8192 RES=0x00 SYN URGP=0 OPT (020405B40103030201010402)
Mar 24 22:41:52 enterprise kernel: [885386.325689] TRACE: mangle:PREROUTING:policy:1 IN=eth0 OUT= MAC=00:1d:7d:aa:e3:4e:00:04:4b:05:b4:dc:08:00 SRC=192.168.32.18 DST=192.168.12.152 LEN=52 TOS=0x00 PREC=0x00 TTL=128 ID=30561 DF PROTO=TCP SPT=53054 DPT=80 SEQ=3653700382 ACK=0 WINDOW=8192 RES=0x00 SYN URGP=0 OPT (020405B40103030201010402)
Mar 24 22:41:52 enterprise kernel: [885386.325713] TRACE: nat:PREROUTING:rule:1 IN=eth0 OUT= MAC=00:1d:7d:aa:e3:4e:00:04:4b:05:b4:dc:08:00 SRC=192.168.32.18 DST=192.168.12.152 LEN=52 TOS=0x00 PREC=0x00 TTL=128 ID=30561 DF PROTO=TCP SPT=53054 DPT=80 SEQ=3653700382 ACK=0 WINDOW=8192 RES=0x00 SYN URGP=0 OPT (020405B40103030201010402)
...
```

通过这种方式，你可以详细跟踪特定数据包通过Iptables规则的过程，而无需记录所有流量。希望这能帮助你更好地理解和调试你的Iptables配置。

谢谢，
Chris