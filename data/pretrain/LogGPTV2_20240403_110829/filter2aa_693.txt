Rotten code, aging standards,
& pwning IPv4 parsing across 
nearly every mainstream 
programming language
2
@jfslowik
3
Disclaimer
● None of this research was paid for
● We research in good faith
● Nothing today represents our 
past/present/future employers
● None of us are under gag orders*
● All images are CC0 or public domain
● All trademarks, logos and brand names are 
the property of their respective owners
4
What will we be discussing today?
● CVE-2020-28360       9.8
● CVE-2021-28918       9.1
● CVE-2021-29418       5.3 (@Ryotkak’s emergency fix)
● CVE-2021-29921       9.8
● CVE-2021-29662       7.5
● CVE-2021-29424       7.5
● CVE-2021-29922       new              est. 9.8
● CVE-2021-29923       new              est. 9.8
● Oracle S1446698      pending          est. 9.8
● ***** 768013610      pending          est. 9.8
5
Talk format
● Finding this type of vuln
● How to horizontally scale your 
vulnerabilities
● Some PoCs
● Exploitability of a vuln
● Further attack vectors/research
6
Takeaways
● #patchtuesday every day
● Patching* an entire class 
of this size?
*Apologies to anyone who might have to go patch right after this
7
Takeaways
● Exponential vulnerability disclosures
● Thought models to magnify your attack 
vectors
● Horizontally scale your research
8
What do you see?
9
10
You’re listening to...
Sick Codes @sickcodes
Kelly Kaoudis @kaoudis
11
Presenting our work with...
John Jackson @johnjhacking
Nick Sahler @tensor_bodega
Victor Viale @Koroeskohr
Cheng Xu @_xucheng_
Harold Hunt @huntharo
12
Quickstart
Octal (base-8) number system
0 1 2 3 4 5 6 7
https://linguistics.berkeley.edu/~avelino/Avelino_2006.pdf
13
No 8s or 9s, 0-7 only
14
Leaving home…
15
Coming home…
16
t
Coming home…
17
0177.0.0.1 → 127.0.0.1
https://check-host.net/
18
87.0.0.1 ← 0127.0.0.1
https://check-host.net/
19
@bagder (curl guy)
20
@bagder (curl guy)
21
Rotten code?
● Bitrot, but for dependencies
(not blame hour!)
● How well-tested should developers 
assume a widely-used or standard 
library is?
22
Contributing factors
23
Contributing factors
24
Contributing factors
● No (ratified) 
IP address 
format 
standard
● Who even uses 
octal other 
than hackers 
anyway
25
nodejs private-ip
26
private-ip
27
28
29
30
31
32
“Private Internets”
https://datatracker.ietf.org/doc/html/rfc1918
33
The obvious ranges
34
That’ll never happen...
35
36
Back to the repo
37
Some more test cases
38
No node-netmask for IPv6
39
40
s/regex/netmask/
41
CVE-2020-28360
● Harold, John, Nick & Sick
https://johnjhacking.com/blog/cve-2020-28360/
42
CVE-2020-28360
● 12,120 direct weekly downloads
● 355 publicly identified npm dependents 
(public npm packages relying on private-ip)
● 73 GitHub dependents 
https://github.com/frenchbread/private-ip/network/dependents
●153,374 combined weekly downloads of all dependents
(most frequently libp2p-related)
https://github.com/frenchbread/private-ip/network/dependents
43
yeah, 
so?
44
https://www.agarri.fr/docs/AppSecEU15-Server_side_browsing_considered_harmful.pdf
@agarri_fr
@kaoudis
45
ssrf
● Bypass input validation / waf 
rules 
● Masquerade as the server to 
destination
● LFI
● RFI
https://cheatsheetseries.owasp.org/assets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet_SSRF_Bible.pdf
@kaoudis
46
CVE-2021-28918, CVE-2021-29418 
● 2,840,781 direct weekly downloads
● 170 publicly identified npm dependents
(public npm packages relying on node-netmask)
● 289,515 GitHub dependents
https://github.com/rs/node-netmask/network/dependents
● 238 million+ lifetime downloads 
(as of March 2021)
@kaoudis
47
Net::Netmask
https://www.bleepingcomputer.com/news/security/critical-netmask-networking-bug-impacts-thousands-of-applications/
@kaoudis
48
49
N-days the comments section
@sickcodes
50
@sickcodes
51
hackernews
https://news.ycombinator.com/item?id=26620538
@sickcodes
52
o rly
53
https://xkcd.com/242/
@kaoudis
54
Applying the suggestion box
● Perl Data::Validate::IP, 
with Dave Rolsky (CVE-2021-29662)
● Python (CVE-2021-29921)
● ... 
@sickcodes
55
Meanwhile: discussing parseInt with Google
@sickcodes
56
@sickcodes
Meanwhile: discussing parseInt with Google
57
@sickcodes
Meanwhile: discussing parseInt with Google
58
@sickcodes
Meanwhile: discussing parseInt with Google
59
@sickcodes
Meanwhile: discussing parseInt with Google
60
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Deprecated_octal
MDN’s JavaScript error reference!
@kaoudis
61
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Deprecated_octal
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Bad_octal
@kaoudis
62
Meanwhile: discussing parseInt with nodejs
@sickcodes
63
@sickcodes
Meanwhile: discussing parseInt with nodejs
64
@sickcodes
Meanwhile: discussing parseInt with nodejs
65
@sickcodes
ECMA...
https://github.com/tc39/ecma262/issues/2455
66
@sickcodes
ECMA...
https://github.com/tc39/ecma262/issues/2455
67
@sickcodes
ECMA...
https://github.com/tc39/ecma262/issues/2455
68
Samuel King Jr. https://www.flickr.com/people/49840571@N02/, https://creativecommons.org/licenses/by-nc/2.0/ 
Which Spiderman is responsible here?
69
Some more PoCs
● CVE-2021-29922
● CVE-2021-29923
● Oracle S1446698* 
We’re also still tracking a few more we wish we could have shown. 
Maybe next time
70
● javac
● Different JVMs
● Underlying C libraries!?
Java & the runtime environment
71
Few handle octal IPv4 
addresses the same way. 
72
Few handle octal IPv4 
addresses the same way. 
73
What should an IPv4 address actually be?
https://news.ycombinator.com/item?id=25545967
@kaoudis
74
https://news.ycombinator.com/item?id=25545967
https://blog.dave.tf/post/ip-addr-parsing/
@kaoudis
What should an IPv4 address actually be?
75
https://news.ycombinator.com/item?id=25545967
https://blog.dave.tf/post/ip-addr-parsing/
@kaoudis
What should an IPv4 address actually be?
76
https://news.ycombinator.com/item?id=25545967
https://blog.dave.tf/post/ip-addr-parsing/
@kaoudis
What should an IPv4 address actually be?
77
https://news.ycombinator.com/item?id=25545967
https://blog.dave.tf/post/ip-addr-parsing/
@kaoudis
What should an IPv4 address actually be?
78
https://www.google.com/intl/en/ipv6/statistics.html
IPv6 though?
@kaoudis
79
@kaoudis
RFC draft 6943
80
@kaoudis
RFC draft 6943
81
@kaoudis
RFC draft 6943
82
Back to the original problem
@sickcodes
83
Conclusion
● Teamwork
● Bug and vuln disclosure programs!
● Specification… maybe
● Don’t assume dependencies are perfect 
(please)
@kaoudis
84
Thanks!
@kaoudis