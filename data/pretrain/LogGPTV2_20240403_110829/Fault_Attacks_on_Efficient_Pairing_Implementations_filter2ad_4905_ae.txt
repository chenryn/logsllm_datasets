Pairings on Ordinary Elliptic Curves Using Faults. In
Guido Bertoni and Jean-S´ebastien Coron, editors,
Cryptographic Hardware and Embedded Systems -
CHES 2013 - 15th International Workshop, Santa
Barbara, CA, USA, August 20-23, 2013. Proceedings,
volume 8086 of Lecture Notes in Computer Science,
pages 365–382. Springer, 2013.
[19] Ronan Lashermes, Marie Paindavoine, Nadia El
Mrabet, Jacques J. A. Fournier, and Louis Goubin.
Practical Validation of Several Fault Attacks against
the Miller Algorithm. In 2014 Workshop on Fault
Diagnosis and Tolerance in Cryptography, FDTC
2014, Busan, South Korea, September 23, 2014 [1],
pages 115–122.
[20] Alfred Menezes, Tatsuaki Okamoto, and Scott A.
Vanstone. Reducing elliptic curve logarithms to
logarithms in a ﬁnite ﬁeld. IEEE Transactions on
Information Theory, 39(5):1639–1646, 1993.
[21] Victor Miller. Short programs for functions on curves.
Technical report, 1986.
[22] Victor S. Miller. The Weil Pairing, and Its Eﬃcient
Calculation. J. Cryptology, 17(4):235–261, 2004.
648[23] Nadia El Mrabet. What about Vulnerability to a Fault
Attack of the Miller’s Algorithm During an Identity
Based Protocol? In Jong Hyuk Park, Hsiao-Hwa
Chen, Mohammed Atiquzzaman, Changhoon Lee,
Tai-Hoon Kim, and Sang-Soo Yeo, editors, Advances
in Information Security and Assurance, Third
International Conference and Workshops, ISA 2009,
Seoul, Korea, June 25-27, 2009. Proceedings, volume
5576 of Lecture Notes in Computer Science, pages
122–134. Springer, 2009.
[24] Nadia El Mrabet, Jacques J. A. Fournier, Louis
Goubin, and Ronan Lashermes. A survey of fault
attacks in pairing based cryptography. Cryptography
and Communications, 7(1):185–205, 2015.
[25] Nadia El Mrabet, Dan Page, and Frederik
Vercauteren. Fault Attacks on Pairing-Based
Cryptography. In Marc Joye and Michael Tunstall,
editors, Fault Analysis in Cryptography, Information
Security and Cryptography, pages 221–236. Springer,
2012.
[26] Michael Naehrig, Paulo S. L. M. Barreto, and Peter
Schwabe. On Compressible Pairings and Their
Computation. In Serge Vaudenay, editor, Progress in
Cryptology - AFRICACRYPT 2008, First
International Conference on Cryptology in Africa,
Casablanca, Morocco, June 11-14, 2008. Proceedings,
volume 5023 of Lecture Notes in Computer Science,
pages 371–388. Springer, 2008.
[27] Dan Page and Frederik Vercauteren. A Fault Attack
on Pairing-Based Cryptography. IEEE Trans.
Computers, 55(9):1075–1080, 2006.
[28] Michael Scott and Paulo S. L. M. Barreto.
Compressed pairings. In Matthew K. Franklin, editor,
Advances in Cryptology - CRYPTO 2004, 24th Annual
International CryptologyConference, Santa Barbara,
California, USA, August 15-19, 2004, Proceedings,
volume 3152 of Lecture Notes in Computer Science,
pages 140–156. Springer, 2004.
[29] Michael Scott, Naomi Benger, Manuel Charlemagne,
Luis J. Dominguez Perez, and Ezekiel J. Kachisa. On
the Final Exponentiation for Calculating Pairings on
Ordinary Elliptic Curves. In Hovav Shacham and
Brent Waters, editors, Pairing-Based Cryptography -
Pairing 2009, Third International Conference, Palo
Alto, CA, USA, August 12-14, 2009, Proceedings,
volume 5671 of Lecture Notes in Computer Science,
pages 78–88. Springer, 2009.
[30] Tsuyoshi Takagi, Tatsuaki Okamoto, Eiji Okamoto,
and Takeshi Okamoto, editors. Pairing-Based
Cryptography - Pairing 2007, First International
Conference, Tokyo, Japan, July 2-4, 2007,
Proceedings, volume 4575 of Lecture Notes in
Computer Science. Springer, 2007.
[31] Frederik Vercauteren. Optimal pairings. IEEE
Transactions on Information Theory, 56(1):455–461,
2010.
[32] Claire Whelan and Michael Scott. The importance of
the ﬁnal exponentiation in pairings when considering
fault attacks. In Takagi et al. [30], pages 225–246.
APPENDIX
A. LASHERMES ET AL.’S ATTACK ON THE
FINAL EXPONENTIATION
Many fault attacks [24] have been described in order to
attack the ﬁrst Miller loop. However, only a few attacks [27]
have been proposed in order to fully invert the pairing in spe-
cial case and not for the most eﬃcient Tate pairings. The
main bottleneck of many attack on the Miller loop is that
it is diﬃcult to invert the Final Exponentiation [32]. Con-
sequently, it was not possible to invert the whole pairing.
Recently, at CHES 2013, Lashermes, Fournier and Goubin
in [18] made a ﬁrst step in this direction by describing a
fault attack which allows us to invert the Final Exponenti-
ation. Their attack needs to inject only 3 faults on average.
However, we will explain some limitation of their attack at
the end of this section in order to attack compressed pair-
ing. Finally, the main drawback is that the implementation
that they attack is never used in practice. They propose
a very simple square-an-multiply algorithm to compute the
exponentiation to the power (p6 − 1)(p2 + 1) for BN-curves,
while these steps are more eﬃciently computed using the
frobenius map. In the following section, we will explain how
in the case of the compressed pairing of Naehrig et al. it is
possible to invert the whole pairing. Another limitation of
their attack is that the fault model they consider requires
to perform an exhaustive search of the fault that they intro-
duce. Depending on the implementation and register size,
this search can be very important on 32-bit architecture,
which makes the attack less eﬃcient.
A.1 Fault model and overall of the fault at-
tack
The fault model used in [18] consists in injecting random
faults in intermediate values. Their attack is based on the
optimized implementation proposed by Scott et al [29], for
elliptic curves with even embedded degree k, the ﬁnal expo-
nentiation pk−1
is decomposed to three stages,
r
pk − 1
r
= (pd − 1) · pd + 1
Φk(p)
· Φk(p)
r
,
r
Φk (p)
where Φk(p) is the k-th cyclotomic polynomial. Let f be
pd+1
the output of the Miller Loop, f0 = f pd−1, f1 = f0
Φk (p)
and f2 = f1
. Using one fault, they show how it is
possible to recover the value of f0, and then using the value
f0 how we can to recover f .
A.2 Recovering f0
pd [x]/(x2 − ξ), with k the extension degree
of the ﬁnite ﬁeld, d = k/2 and ξ is a non square of F
pd .
The attack needs the lemma 1 proposed by Lashermes et al.
in [18].
pk = F
Let F
Lemma 1. For every a = g+h·ξ ∈ F
pk , with (g, h) ∈ F
pd ,
we have apd+1 = g2 − ξ · h2 ∈ F
pd .
pd+1
For recovering f0, they insert a random fault e into the
output value of the ﬁrst stage f0. Then the ﬁnal result is
= f pk−1 and f is an
= 1 but this relation is
(f0 + e)
element of F
no longer true after the fault injection as (f0 + e) /∈ F
. Since f0 veriﬁes f pd+1
pk , then we get f pd+1
0
0
r
pk .
649Suppose that the fault injection is on the ﬁrst component
of the value. Then by the previous lemma, we have (f0 +
e)pd+1 = (g + e)2 − ξ · h2. Then, by solving the equation,
and h = ±((g2 −
we can show that g = (f0+e)pd+1−1−e2
1)/ξ)1/2. If the fault is injected in the second component,
the same type of computation can be used to recover the
secret key.
A.3 Recovering of f
2·e
Using the same idea and the same fault model, they in-
troduce a new fault e2 into the output of the Miller Loop f
with the following lemma.
To simplify the computation, a third component in Fp is
added to represent the value in the projective space (because
the inversion is one of the most complicated operations).
Moreover, since s ∈ F
p2 , we can represent it as s = S0 + iS1
with (S0, S1) ∈ Fq, the ﬁnal value (c0, c1, c) is:
c0 = s0(S0 − iS1), c1 = s1(S0 − iS1), c = S2
0 + zS2
1 .
Multiplication. Same as the squaring of compressed pair-
ing, the result (c0, c1, c) of the multiplication of the com-
pressed pairing values (a0, a1, a) et (b0, b1, b) can be explained
as follows.
1b2
1r0),
1r1 + b2
0 + 1
0 + 1
3 a2ξ,
3 b2ξ,
1ξ + a0a1r1 + b0b1r0,
r0 = a2
r1 = b2
s0 = ξ(a1b1(a0b0 + ξab) + a2
s1 = a1baξ(a0b1 + a1b0) + r0r1,
s2 = a2
t0 = a1b1ξ(a0b + b0a),
t1 = a1b1ξ(a1b + b1a),
t2 = b1br0 + a1ar1,
t = t3
u0 = t2
u1 = t2
u2 = t2
v0 = s0u0 + s1u2ξ + s2u1ξ,
v1 = s0u1 + s1u0 + s2u2ξ,
t = T0 + iT1,
c0 = v0(T0 − iT1), c1 = v1(T0 − iT1), c = T 2
0 + t3
1ξ + t3
0 − t1t2ξ,
2ξ − t0t1,
1 − t0t2,
2ξ2 − 3ξt0t1t2,
0 + zT 2
1 .
Lemma 2. Let a = g + h · ξ ∈ F
f−1 = g(cid:48) + h(cid:48) · ξ and f0 = g0 + h0 · ξ. Then g0−1
− h
g ⇔ f0 = f pd−1.
Let K be the knowing value of K = g0−1
= h(cid:48)
ξh0
pk with (g, h) ∈ F
= h(cid:48)
pd ,
g(cid:48) =
g(cid:48) = − h
g ,
then we can ﬁnd the value of g:
√
(g0−v·K·h0)2−(1−v·K2)·(1−(f0+e)pd+1)
ξh0
e2·(1−v·K2)
g = v·K·h0−g0±
Then h = −g · K.
A.4 Countermeasures for the Lashermes et al.
attack
This attack to invert the Final Exponentiation cannot be
used in order to invert eﬃcient implementation since if we
perform the computation using the frobenius map (and con-
jugate) and (f + e) /∈ F
pk , then the output will not be equal
to (f + e)p6−1. Consequently, the attack is not valid. The
same reason explains that against compressed pairing im-
plementation, the attack will not longer be valid since the
two ﬁrst steps of the Final Exponentiation are also treated
diﬀerently. Moreover, in the second step in the computa-
tion of the compressed pairing, the relation used to ﬁnd the
value of the third component β2 = 3β2
0 +ξ
is equivalent to
3β1ξ
Φ12(p) = 1. Consequently, for every element
f2
(c0, c1, c), we have (c0, c1, c)p4−p2+1 = 1.
p4−p2+1 = f2
B. OPERATIONS OF NAEHRIG, BARRETO
AND SCHWABE
Square.
0 + ξ(a3
0 + 2ξ(a3
r0 = a5
r1 = a5
s0 = a0(a0r0 + a6
s1 = a1(a0r0 + a6
s = 2a(a0 + a6
0a2 − 2a2
3 a0a4 − a3
0a3
1) + ξ2( 1
1) + ξ2(a0a4 − 2a3
0a2 − a2
0a3
27 a6ξ3) − 1
1ξ2 + 1
3 a3
1a4ξ3,
27 a6ξ3),
1ξ2 + 4
27 a6ξ3).
1ξ2 + 1
1a2),
1a2),
650