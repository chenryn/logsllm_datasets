title:MalRank: a measure of maliciousness in SIEM-based knowledge graphs
author:Pejman Najafi and
Alexander M&quot;uhle and
Wenzel P&quot;unter and
Feng Cheng and
Christoph Meinel
MalRank: A Measure of Maliciousness in
SIEM-based Knowledge Graphs
Pejman Najafi
Hasso Plattner Institute
PI:EMAIL
Alexander Mühle
Hasso Plattner Institute
PI:EMAIL
Wenzel Pünter
Hasso Plattner Institute
PI:EMAIL
Feng Cheng
Hasso Plattner Institute
PI:EMAIL
Christoph Meinel
Hasso Plattner Institute
PI:EMAIL
ABSTRACT
In this paper, we formulate threat detection in SIEM environments
as a large-scale graph inference problem. We introduce a SIEM-
based knowledge graph which models global associations among
entities observed in proxy and DNS logs, enriched with related
open source intelligence (OSINT) and cyber threat intelligence
(CTI). Next, we propose MalRank, a graph-based inference algo-
rithm designed to infer a node maliciousness score based on its
associations to other entities presented in the knowledge graph,
e.g., shared IP ranges or name servers.
After a series of experiments on real-world data captured from
a global enterprise’s SIEM (spanning over 3TB of disk space), we
show that MalRank maintains a high detection rate (AUC = 96%)
outperforming its predecessor, Belief Propagation, both in terms of
accuracy and efficiency. Furthermore, we show that this approach
is effective in identifying previously unknown malicious entities
such as malicious domain names and IP addresses. The system
proposed in this research can be implemented in conjunction with
an organization’s SIEM, providing a maliciousness score for all
observed entities, hence aiding SOC investigations.
CCS CONCEPTS
• Security and privacy → Intrusion detection systems; Malware
and its mitigation; • Information systems → Data mining.
KEYWORDS
Big data analytics in security, graph inference, graph mining, mali-
cious domain detection, SIEM
ACM Reference Format:
Pejman Najafi, Alexander Mühle, Wenzel Pünter, Feng Cheng, and Christoph
Meinel. 2019. MalRank: A Measure of Maliciousness in SIEM-based Knowl-
edge Graphs. In 2019 Annual Computer Security Applications Conference
(ACSAC ’19), December 9–13, 2019, San Juan, PR, USA. ACM, New York, NY,
USA, 13 pages. https://doi.org/10.1145/3359789.3359791
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than ACM
must be honored. Abstracting with credit is permitted. To copy otherwise, or republish,
to post on servers or to redistribute to lists, requires prior specific permission and/or a
fee. Request permissions from permissions@acm.org.
ACSAC ’19, December 9–13, 2019, San Juan, PR, USA
© 2019 Association for Computing Machinery.
ACM ISBN 978-1-4503-7628-0/19/12...$15.00
https://doi.org/10.1145/3359789.3359791
1 INTRODUCTION
The majority of today’s medium to large sized organizations collect
event logs generated by different components on the organization’s
premises. These event logs are shipped to a centralized system
known as Security Information and Event Management (SIEM).
Traditionally, this collection and storage has been mostly done for
compliance. However, nowadays, the organizations monitor these
events within their Security Operations Center (SOC), constantly
seeking indicators of compromise such as a sudden spike in the
number of requests made to a server, or access to an unknown port.
More and more organizations are starting to realize the value and
the potential of monitoring and analyzing these data.
SIEMs are expected to be the centralized repository for all events
and information. If there is a threat that has managed to success-
fully bypass the perimeters of defense such as firewall, intrusion
detection system, anti-virus, etc., it is quite likely that there are
traces of its activities somewhere in these log-data shipped to the
SIEM system.
There are numerous works introduced over the last decade that
explore these dark data stored within SIEMs to derive security
value, thus introducing concepts such as big data analytics, machine
learning, data mining and pattern matching into cybersecurity [9].
The majority of those works study the application of machine
learning and data mining for log analysis. Whilst machine learn-
ing has been successfully adopted in other domains, it has been
extremely challenging to utilize it successfully in the cybersecurity
domain. This is mostly due to the nature of security data. In con-
trast to other domains, there are no public, unbiased and up-to-date
datasets that can be used to train a successful and realistic ML al-
gorithm. Even if there exists such a perfectly labeled and unbiased
dataset, there are still serious challenges in building a successful
ML algorithm.
ML-based techniques such as anomaly detection assume that
malicious events have a set of features that are distinguishable from
those of legitimate events. However, this is a strong assumption as
the majority of the features within these data are extremely volatile
and temporal. All it takes is for the adversary to change a few
lines to create a new set of values for a particular feature [17, 44].
Consider an ML algorithm that has learned to distinguish between
legitimate and malicious URLs using number of subdomains and
URL’s entropy as distinct features. While this might work at first
within its training set, it is wrong to assume it can classify under
different circumstances, as all it takes, is to replace the URL string
with a slightly altered string to defeat the ML classifier. Furthermore,
if the ML algorithm tries to include broader patterns, the false
positive rates will increase drastically as legitimate events will end
up posing as malicious from the ML algorithm point of view. That
is the biggest challenge in the application of generic data mining
and machine learning algorithms in the security domain. In other
words, ignoring the existence of an adversary that can constantly
adapt to defeat the detection algorithm.
While the features utilized by the majority of previous efforts are
relatively easy to change, there are other features that are harder to
change. Meaningful associations among entities are such features,
we would like to refer to those as global features. Local features
in contrast are those that adhere to a single entity. For instance,
in malicious domain detection, while URL structure as a feature
is local to a single entity, IP address resolution or the ASNs/IP
range mapping are global as they investigate the association among
different entities. This concept of local/global features in regards
to security analytics has been introduced by Khalil et al. [23] and
Najafi et al. [35].
The hypothesis here is that an adversary’s resources are limited.
Therefore reuse of infrastructure is inevitable, e.g., usage of the
same X.509 certificate, pool of IPs for domains, or even Tactics,
Techniques and Procedures (TTPs). The other key intuition is that
an external entity is less likely to be malicious when it is associated
with a large number of benign entities, e.g., if a domain is visited
by the majority of the workstations in a company, it is less likely to
be a malicious domain [11][46]. Unsurprisingly, this reasoning (i.e.,
guilt-by-association [25]) is also adopted in SOC or forensic inves-
tigation. For example, investigating a potential malicious domain
involves the investigation of open source intelligence and threat
intelligence related to that domain, e.g., its registrar, subdomains,
connected domains, TI feed observation, etc. In this regard, while
an association with malicious entities does not necessarily imply
maliciousness, it could be an indicator of a higher risk.
Ultimately, our approach is expected to utilize a small seed of
threat intelligence to detect previously unknown malicious entities,
therefore allowing us to increase the quality and quantity of our
threat intelligence. It is also an effective threat detection techniques
combating: malvertising, exploit kits’ landing pages, rogue ASNs
or registrars, fast-flux networks, domain shadowing, infrastructure
reuse, malicious entities (e.g., malicious domains/IPs, rogue X.509
certificates).
The main distinct contributions of this paper can be summarized
as follows:
• We propose the blueprint for a SIEM-based knowledge graph
(section 2), emphasizing on the most important entities and
relationships observed in DNS and proxy logs and the rel-
evant Open-Source Intelligence (OSINT) as well as Cyber
Threat Intelligence (CTI).
• We introduce, MalRank, a large-scale graph-based inference
algorithm designed to infer maliciousness using the associa-
tions presented in the knowledge graph (section 3).
• We evaluate MalRank on a SIEM-based knowledge graph
constucted from data collected by an international enter-
prise’s SIEM (2-days of proxy, DNS, DHCP logs) enriched
with related OSINT/CTI (IP ranges, ASN, DNS RRs, X.509
certificates) (section 4).
• We provide a comprehensive overview of all related graph-
based inference algorithms particularly in the context of
cybersecurity (section 5 and 3).
2 SIEM-BASED KNOWLEDGE GRAPH
2.1 Event Logs of Interest
SIEM systems within organizations are centralized repositories that
are expected to hold all relevant security-related data. However, the
amount and the variety of the data ingested into these SIEM systems
vary drastically depending on the organization and its dedication
to security practices, regulatory compliance, and analytics. These
can include events and alerts generated by Intrusion Detection
Systems (IDSs), firewalls, proxy servers, VPN servers, mail servers,
workstations, authentication logs, NetFlow, HTTP/HTTPS traffic,
DNS traffic, inventory, etc. Thus, it is important to determine a
scope in which our knowledge graph is bound to.
In this regard for the purpose of this research, we are going to
only focus on proxy, DNS, and DHCP logs.
Due to the fact that web traffic is typically allowed by the most
of firewalls, HTTP, HTTPS, and DNS traffic are extensively abused
by cybercriminals [1, 14] (e.g., bots communication with command-
and-control servers), hence leading to the popularity of proxy and
DNS log analysis in the security domain.
Oprea et al. [36] discuss the set of features extractable from
proxy logs (e.g., domain connectivity, the referrer string, the user-
agent string) that aid in the detection of malicious domains. Ma
et al. [28, 29] address the same problem using URL’ lexical and
host-based features (e.g., number of dots) with the intuition that
malicious URLs exhibit certain common distinguishing features.
Zhang et al. [49] use term frequency/inverse document frequency
(TF-IDF) algorithm to tackle malicious URL detection. Bilge et al. [7]
introduce EXPOSURE, a system that employs large-scale passive
DNS analysis to detect malicious domains using features such as
the number of distinct IP addresses per domain, average TLL, the
percentage of numerical characters, and etc. Antonakakis et al. [4]
propose Notos, a similar system to EXPOSURE while distinguishing
itself by incorporating complementary information such as the
registration, DNS zones, BGP prefixes, and AS information. In a
later research [5] Kopis is introduced, which separates itself from
previous work by analyzing the DNS traffic at the upper level of
DNS hierarchy rather than local recursive DNS servers.
Unlike these efforts which mostly target local features, we focus
on global features extracted from proxy and DNS logs correlated
with DHCP. Figure 1 shows the nodes and relationships extracted,
and table 1 described each relationship.
2.2 OSINT and CTI
We would like to define Open Source Intelligence (OSINT) as any
type of information gathered from publicly available sources (i.e.,
open-source) that provide context to those observed entities ex-
tracted from our SIEM-based data. OSINT has the potential to im-
prove the inference and reasoning about maliciousness of an entity
(e.g., IP range or ASN for an IP). Furthermore would like define
Cyber Threat Intelligence (CTI) as subset of OSINT that can aid
particularly with the threat detection tasks (e.g., list of Indicators
of Compromise such as malicious domains) [12].
Figure 1: Knowledge graph schema, showing the extracted entities and relationships.
Table 1: The Description and the intuition behind the importance of each relationship used in the knowledge graph, as well as the data source
used to extract such relationship.
Description
Intuition
Dependency between different levels of a Fully Qual-
ified Domain Name (FQDN), e.g., x.example.com, is a
subdomain of example.com
HTTP/HTTPS request or a DNS query from a client
work station (MAC address) to/for domain/IP
Subdomain abusement (e.g., domain shadowing) is one of the simplest yet effective techniques
utilized by cybercriminals to evade detection [35]
Infected hosts are more likely to visit various malicious domains whereas user behavior on
benign hosts should result in benign domain access [33]
Relationship
subDomainOf
requestedAccessTo
referedTo
uses
resolvesTo
and
nameServerFor
mailServerFor
aliasFor
isInRange
assignedTo
belongsTo
associatedWith
signedBy
issuedFor
issuedBy
Relationship between two domain/IP if one has referred
to the other
The user agent used by an endpoint (MAC) for a specific
HTTP/HTTPS query
DNS resolution of a domain name to an IPv4 address
(DNS A records) or reverse DNS lookups for an IPv4
address (DNS PTR record)
Delegation of a domain name to a set of name servers
(NS) or mail server (MX)
Canonical names (CNAME) for a domain
Relationship between an IP and its IP address space
Relationship between an IP range and its associated
autonomous system (AS)
Relationship between an AS and the organization re-
sponsible for it
Association between an X.509 certificate and a DNS
domain/IP, extraxtable from Subject Alternative Name,
or Subject Common [13]
The validity of the certificate chain extractable from the
chain’s certificates fingerprints
Relationship between the subject name (organization)
and the X.509 certificate
Captures the issuer DN for a X.509 certificate
Data Source
Proxy, DNS
DNS
Proxy,
(correlated with
DHCP)