done by A, there are at most one other encryption query
Enc(𝑖, 𝑁 , 𝐴𝐷′, 𝑀′) with answer 𝐶′∥𝑇 ′ and the same (𝑖, 𝑁) done
by him. Thus there are at most 𝑞𝑣 possible pairs of such queries
done by A. When querying Reveal, for each of these pairs, the
value 𝑉 ′
0 associated to the encryption query is computed as (𝑟∥(𝑇 ′ (𝑡)−
𝐻𝑟 (𝐴𝐷′, 𝐶′))∥𝑊 ) with 𝑟 being sampled uniformly at random and
independently from any previous queries. Hence, as (𝐴𝐷, 𝐶) ≠
(𝐴𝐷′, 𝐶′) and 𝐻 is a 𝑐-almost Δ-universal hash function, the prob-
ability that 𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶) = 𝑇 ′ (𝑡)− 𝐻𝑟 (𝐴𝐷′, 𝐶′) is bounded by
𝑐·max(|𝐴𝐷|𝑡+|𝐶|𝑡 ,|𝐴𝐷′|𝑡+|𝐶′|𝑡)
0 being
the associated value to the encryption query. Therefore, using a
union bound, the probability that for at least one of these pairs
0]𝑟 , is at most 𝑞𝑣·𝑐·ℓ𝑚2𝑡
𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶) = 𝑇 ′ (𝑡)− 𝐻𝑟 (𝐴𝐷′, 𝐶′) for 𝑟 = [𝑉 ′
.
(21)
Pr[Tideal ∈ Bad6-1] ≤ 𝑞𝑣
, for 𝑟 = [𝑉 ′
0]𝑟 and 𝑉 ′
≤ 𝑐·ℓ𝑚2𝑡
2𝑡 + 𝑞𝑣 · 𝑐 · ℓ𝑚
2𝑡
2𝑡
.
Bad6-2: case 𝑖 ≠ 𝑗.
The probability calculation for this case will follow the same outline
as for Bad2.
Let 𝐸8 be the event that there exist 𝐴𝐷∗, 𝐶∗ ∈ {0, 1}∗ and
(𝑁∗,𝑇∗, 𝑟∗) ∈ {0, 1}𝑏 × {0, 1}𝑡 × {0, 1}𝑡 such that, the number of
encryption queries Enc(·, 𝑁∗, ·, ·) with nonce 𝑁∗ and associated
𝑉 ′
0 verifying [𝑉 ′
0]𝑟 , is greater
or equal to 𝑚8 =
0]𝑠 (𝑡)+ 𝐻𝑟∗(𝐴𝐷∗, 𝐶∗) = 𝑇∗ and 𝑟∗ = [𝑉 ′
(cid:108)
4𝑡
(cid:109). Then,
(cid:105) + Pr[Tideal ∈ Bad6-2 ∧ 𝐸8]
(cid:105) + Pr[𝐸8].
max(1,2𝑡−log2(𝑑))
Pr[Tideal ∈ Bad6-2]
= Pr(cid:104)Tideal ∈ Bad6-2 ∧ 𝐸8
(cid:12)(cid:12)(cid:12) 𝐸8
≤ Pr(cid:104)Tideal ∈ Bad6-2
We will now bound the probability of 𝐸8, so that we only have to
consider the event Tideal ∈ Bad6-2 conditioned by 𝐸8 afterward.
For any 𝐴𝐷, 𝐶 ∈ {0, 1}∗ and nonce 𝑁 , let Throw(𝐴𝐷, 𝐶, 𝑁) be
the throwing experiment, where we view each encryption query
Enc(·, 𝑁 , ·, ·) with nonce 𝑁 and associated 𝑉 ′
0 , as throwing a ball
0]𝑟 ∥([𝑉 ′
[𝑉 ′
0]𝑟 into 22𝑡 possible bins.
For any bin 𝑟∥𝑇 ∈ {0, 1}2𝑡, each throw has a conditional probability
0]𝑠 (𝑡)+ 𝐻𝑟 (𝐴𝐷, 𝐶)) where 𝑟 = [𝑉 ′
(cid:104)[𝑉 ′
of at most
0 ←$ Enc(·,𝑁 ,·,·)
Pr𝑉 ′
= Pr(cid:104)[𝑉 ′
0]𝑟 ∥[𝑉 ′
0]𝑠 = 𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶)(cid:12)(cid:12)(cid:12) [𝑉 ′
0]𝑠 = 𝑟∥𝑇 (𝑡)− 𝐻𝑟 (𝐴𝐷, 𝐶)(cid:105)
0]𝑟 = 𝑟(cid:105) · Pr(cid:2)[𝑉 ′
0]𝑟 = 𝑟(cid:3) =
1
22𝑡
.
If we consider all encryption queries with the nonce 𝑁 , we throw at
most 𝑑 balls uniformly at random into 22𝑡 bins. Using Lemma B.1,
with 𝑄 = 𝑑 and 𝐵 = 2−2𝑡, the probability that the heaviest bin
of Throw(𝐴𝐷, 𝐶, 𝑁) contains 𝑚8 or more balls is at most 2−2𝑡. If
𝐸8 happens, then the bin 𝑟∗∥𝑇∗ in experiment Throw(𝐴𝐷∗, 𝐶∗, 𝑁∗)
contains 𝑚8 or more balls, therefore, the number of balls in the heav-
iest bin of Throw(𝐴𝐷∗, 𝐶∗, 𝑁∗) contains 𝑚8 or more balls. Thus,
the probability of 𝐸8 is also bounded by 2−2𝑡. Hence,
Pr[Tideal ∈ Bad6-2] ≤ Pr(cid:104)Tideal ∈ Bad6-2
(cid:105) + 2−2𝑡 .
(22)
(cid:12)(cid:12)(cid:12) 𝐸8
0 verifying [𝑉 ′
The unionVf,Enc and sumVfEnc are over all verification
Note that 𝐸8 is the event that for any 𝐴𝐷, 𝐶 ∈ {0, 1}∗ and (𝑁 ,𝑇) ∈
{0, 1}𝑏 × {0, 1}𝑡, the number of encryption queries Enc(·, 𝑁 , ·, ·)
with nonce 𝑁 and associated 𝑉 ′
0]𝑠 (𝑡)+ 𝐻𝑟 (𝐴𝐷, 𝐶) = 𝑇
where 𝑟 = [𝑉 ′
0]𝑟 , is strictly less than 𝑚8. To bound the remaining
term, we now consider the case where A is querying the Reveal
oracle and all parameters 𝑟 have already been sampled, but no user
keys have been sampled yet. In the following, we mean by Enc
and Vf, an encryption and verification query already done by A.
queries already done by A and all encryption queries with the same
nonce as the verification query.
Vf(𝑖, 𝑁 , 𝐴𝐷, 𝐶∥𝑇) and an encryption query Enc( 𝑗, 𝑁 , 𝐴𝐷′, 𝑀′)
with the same nonce 𝑁 and an associated 𝑉 ′
0]𝑠 (𝑡)+
𝐻𝑟 (𝐴𝐷, 𝐶) = 𝑇 where 𝑟 = [𝑉 ′
0]𝑟 , and 𝐾𝑗 = 𝐾𝑖. To bound the
probability of this event, we split it into two, one for the event
that the keys are equals and a second one for the rest of the event
that doesn’t depend on the key. Let 𝐸9(Vf, Enc) be the event
that the key 𝐾𝑖 of the verification query Vf is equal to the key
𝐾𝑗 of the encryption query Enc, and 𝐸10(Vf, Enc) be the event
that [𝑉 ′
0]𝑟 , (𝐴𝐷, 𝐶,𝑇) are the
values associated to the verification query Vf, and 𝑉 ′
0 is the value
associated to the encryption query Enc. Then, using a union bound,
A transcript is in Bad6-2, if there exists a verification query
0 such that [𝑉 ′
0]𝑠 (𝑡)+ 𝐻𝑟 (𝐴𝐷, 𝐶) = 𝑇 , where 𝑟 = [𝑉 ′
(cid:105)
≤ Pr
(cid:12)(cid:12)(cid:12) 𝐸8
Pr(cid:104)Tideal ∈ Bad6-2
≤∑︁
𝐸9(Vf, Enc) ∧ 𝐸10(Vf, Enc)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) 𝐸8

Pr(cid:104)𝐸9(Vf, Enc)(cid:12)(cid:12)(cid:12) 𝐸8 ∧ 𝐸10(Vf, Enc)(cid:105)
∑︁
· Pr(cid:104)𝐸10(Vf, Enc)(cid:12)(cid:12)(cid:12) 𝐸8
(cid:105) .
Vf,Enc
Enc
Vf
(23)
When querying Reveal, the users’ keys are uniformly sampled,
independently from any previous queries and parameters. Thus, for
any pair Vf, Enc, the probability that 𝐾𝑖 = 𝐾𝑗 is 1
2𝑘 . This event is
also independent from 𝐸8 and 𝐸10(Vf, Enc), which both depend
only on parameters already fixed before sampling the users’ keys.
Session 6D: Authentication and Privacy CCS ’21, November 15–19, 2021, Virtual Event, Republic of Korea2000Thus
Pr(cid:104)𝐸9(Vf, Enc)(cid:12)(cid:12)(cid:12) 𝐸8 ∧ 𝐸10(Vf, Enc)(cid:105)
= Pr[𝐸9(Vf, Enc)]
1
2𝑘
.
=
(24)
Note that conditioned on event 𝐸8, for any verification query Vf
there are strictly less than 𝑚8 encryption queries Enc with the
same nonce 𝑁 and an associated 𝑉 ′
0]𝑠 (𝑡)+𝐻𝑟 (𝐴𝐷, 𝐶) = 𝑇 ,
where 𝑟 = [𝑉 ′
0]𝑟 , (𝐴𝐷, 𝐶,𝑇) are the values associated to Vf, and 𝑉 ′
0
is the value associated to Enc. Hence, for a fix verification query
Vf, there are strictly less than 𝑚8 encryption queries Enc such
0 such that [𝑉 ′
that Pr(cid:104)𝐸10(Vf, Enc)(cid:12)(cid:12)(cid:12) 𝐸8
∑︁
(cid:105) is not zero. Thus
Pr(cid:104)𝐸10(Vf, Enc)(cid:12)(cid:12)(cid:12) 𝐸8
<∑︁
(cid:25)
(cid:24)
∑︁
(cid:24)
Moreover,
(cid:105)
Enc
Vf
Vf
𝑚8 ≤ 𝑞𝑣 · 𝑚8.
2𝑡
4𝑡
𝑚8 =
max(1, 2𝑡 − log2(𝑑))
max(1, 2𝑡 − log2(2𝑑))
≤ 2 ·
= 2 · 2𝑡 𝑑
and in combination with (22), (23), (24) and (25), we obtain
Pr[Tideal ∈ Bad6-2] ≤ 𝑞𝑣 · 2 · 2𝑡 𝑑
2𝑘
+ 1
22𝑡
.
(25)
(cid:25)
(26)
Combining the two cases (21) and (26) using a union bound, we
obtain the following result:
Pr[Tideal ∈ Bad6] ≤ 𝑞𝑣
+ 𝑞𝑣 · 2 · 2𝑡 𝑑
C ATTACKS AND PROOFS OF LOWER
2𝑡 + 𝑞𝑣 · 𝑐 · ℓ𝑚
2𝑘
2𝑡
+ 1
22𝑡
.
□
BOUNDS
In this section, we give the details of the two most interesting attacks
against ChaCha20-Poly1305 among the ones briefly described in
Section 7.1.
C.1 Proof of Proposition 7.1 (Forgery Attack)
We refer to [22] for an introduction to lattices and the terms used in
the following proof. We also note that the complexity of this attack
may be exponential when using deterministic SVP algorithms (or
slightly better when using SVP approximation algorithms), making
the attack impractical, especially for large ℓ𝑚, but still valid in
the model we use here, where the adversary is computationally
unbounded.
We define an adversary A that makes one encryption query
and 𝑞𝑣 verification queries, attempting each time a forgery. If a
verification query returns true, then it outputs 1. As a forgery is
impossible in the ideal world, then
(cid:20)
Pr
Thus
A𝐺Ideal-muAE
ChaCha20-Poly1305[𝜋] ⇒ 1
= 0.
Adv
ChaCha20-Poly1305[𝜋](A) = Pr
muAE
A𝐺Real-muAE
ChaCha20-Poly1305[𝜋] ⇒ 1
(cid:21)
.
(cid:21)
(cid:20)
be a polynomial with the set R 𝑗 as roots and where 𝑔(𝑥) is a non
(𝑥 − 𝑟) mod 𝑝
(cid:107) − 1 defined such that
Let A be an adversary against ChaCha20-Poly1305 and 𝑝 = 2130−5.
3
Note that 𝑝
4 < 2𝑡 < 𝑝. In the following, we will use the integer
representation for 𝑡-bit strings. The adversary A makes as its first
query an encryption query Enc(𝑖, 𝑁 , 𝐴𝐷, 𝑀) with nonce 𝑁 and
inputs of exactly ℓ𝑚 blocks, where 𝑀 = 𝜀 is an empty string and