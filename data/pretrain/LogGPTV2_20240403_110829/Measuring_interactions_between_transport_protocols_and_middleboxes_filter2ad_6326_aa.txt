title:Measuring interactions between transport protocols and middleboxes
author:Alberto Medina and
Mark Allman and
Sally Floyd
Measuring Interactions Between Transport Protocols and
Middleboxes
Alberto Medina, Mark Allman, Sally Floyd
ICSI Center for Internet Research
{medina,mallman,ﬂoyd}@icir.org
ABSTRACT
In this paper we explore the current network environment with re-
spect to how the network’s evolution ultimately impacts end-to-end
protocols. The traditional end-to-end assumptions about the Inter-
net are increasingly challenged by the introduction of intermediary
network elements (middleboxes) that intentionally or unintention-
ally prevent or alter the behavior of end-to-end communications.
This paper provides measurement results showing the impact of
the current network environment on a number of traditional and
proposed protocol mechanisms (e.g., Path MTU Discovery, Ex-
plicit Congestion Notiﬁcation, etc.). We present results of mea-
surements taken using an active measurement framework to study
web servers. We analyze our results to gain further understanding
of the differences between the behavior of the Internet in theory
versus the behavior we observed through measurements.
In ad-
dition, these measurements can be used to guide the deﬁnition of
more realistic Internet modeling scenarios.
Categories and Subject Descriptors
C.2.2 [Computer-Communication Networks]: Network Proto-
cols; C.2.3 [Computer-Communication Networks]: Network Op-
erations; C.2.5 [Computer-Communication Networks]: Local and
Wide-Area Networks; C.2.6 [Computer-Communication Networks]:
Internetworking
General Terms
Measurement, Design, Reliability, Standardization, Veriﬁcation
Keywords
TCP, middleboxes, Internet, evolution
1.
INTRODUCTION
While the Internet’s architecture, protocols and applications are
constantly evolving, there is often competing evolution between
various network entities. This competing evolution can impact per-
formance and robustness, and even halt communications in some
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
IMC’04, October 25–27, 2004, Taormina, Sicily, Italy.
Copyright 2004 ACM 1-58113-821-0/04/0010 ...$5.00.
cases. For instance, [23] shows that when setting up a TCP con-
nection to a web server, attempting to negotiate the use of Explicit
Congestion Notiﬁcation (ECN) [27] interfered with connection es-
tablishment for over 8% of the web servers tested in 2000. For
such web servers, the client can only establish a TCP connection
by re-attempting the connection without negotiating ECN usage.
The connection failures in the presence of ECN negotiation were
caused by ﬁrewalls conﬁgured to interpret the attempt to negotiate
ECN as the signature of a port-scanning tool [10]. On the one hand,
these ﬁrewalls can be seen as incorrectly associating new function-
ality with one of the ﬁrst appearances of that new functionality in
an undesirable application. On the other hand, the ﬁrewalls can also
be seen as doing their job of blocking unwanted trafﬁc. This exam-
ple shows the fundamental problem of different evolution paths that
can cross to the detriment of smooth trafﬁc ﬂow on the Internet.
In this paper, we investigate the evolution of TCP [26], the In-
ternet’s most heavily used transport protocol, in the context of on-
going changes to the Internet’s basic architecture. In particular, we
study the ways in which so-called “middleboxes” (ﬁrewalls, NATs,
proxies, etc.) — which change the Internet’s basic end-to-end prin-
ciple [28] — impact TCP. We seek to elucidate unexpected interac-
tions between layers and ways in which the Internet differs from its
textbook description, including the difﬁculties various real-world
“gotchas” impose on the evolution of TCP (and end-to-end proto-
cols in general). The measurements presented in this paper also
serve as lessons for efforts that wish to further evolve end-to-end
protocols and the Internet architecture.
In the study presented in this paper, we use active measurements
to assess the capabilities supported by web servers (the primary
data senders in web transactions) and their behavior in the context
of the current Internet architecture on which they communicate.
The remainder of this paper is organized as follows. Section 2 de-
scribes related work on measurement studies of transport protocols.
Section 3 describes the tools and methodology we use in our study.
Section 4 explores interactions between middleboxes and transport
protocols. Section 5 discusses additional results. Finally, Section 6
presents our conclusions, and discusses open questions and future
work.
2. RELATED WORK
This paper uses and extends the methodology from [23] on the
TCP Behavior Inference Tool (TBIT). TBIT, the measurement tool
used in our work, follows an earlier history of active probing of
TCP. For instance, [8] treats TCP implementations as black boxes,
observing how they react to external stimuli, and studying speciﬁc
TCP implementations in order to assess the adherence to the spec-
iﬁcation.
There is also a considerable body of work on passive tests of
TCP based on the analysis of packet traces. [24] outlines tcpanaly,
a tool for analyzing a TCP implementation’s behavior by inspecting
sender and receiver packet traces of TCP connections run between
pairs of hosts, while [25] outlines observed packet dynamics based
on tcpanaly’s analysis. Finally, [3] assesses the properties of web
clients using packet traces of TCP connections to a particular web
server.
In addition, there is some research in the literature on the effect
of middleboxes on transport protocol performance (e.g., [4]). We
do not discuss the body of research on general architectural eval-
uations of middleboxes, or on the effect of middleboxes on DNS,
BGP, and the like. Rather, the study presented in this paper focuses
on interactions between middleboxes and transport protocols.
Finally, there is a large body of literature on active and passive
approaches for estimating end-to-end network path properties using
TCP [24, 6, 11]. In this paper we do not discuss TCP-based tests for
estimating path properties such as loss rates, available or bottleneck
bandwidth and durations of congestion episodes. Also prevalent in
the literature, yet out of scope for the current effort, is the body of
work based on passive measurements of trafﬁc on a particular link
to determine the breakdown of the trafﬁc in terms of round-trip
times, application layer protocols, transfer sizes, etc.
3. MEASUREMENTS: TOOLS AND DATA
As discussed above, we employ active measurements in this study.
Speciﬁcally, we use a measurement tool called TBIT [23], to con-
duct active measurements that probe web servers for their char-
acteristics in the context of the environment on which the com-
munications take place. We note that in some cases, information
gathered via active measurements can be obtained as well via pas-
sive means. However, many of the TBIT tests are not amenable to
straightforward post-facto analysis of packet traces. For instance,
tests that involve actively attempting alternative schemes in con-
nection initiation cannot be performed by passive trace analysis
alone. Consider a test for middleboxes that block TCP SYN seg-
ments when the SYNs carry advertisements for ECN. Packet traces
can indicate whether connections attempting to use ECN succeed or
fail. However, determining that the failure of a connection attempt-
ing to negotiate ECN is due to a middlebox blocking ECN-capable
SYNs takes active insertion of SYNs with and without ECN adver-
tisements.
The measurements gathered for this work are the result of spe-
ciﬁc tests implemented in the TBIT framework. Each test is de-
signed to examine a speciﬁc aspect of the behavior of the remote
web servers, or of the path to and from the web server. Most of
these tests examine the behavior of TCP implementations on the
web servers. However, the tests are not restricted to TCP (e.g.,
the Path MTU Discovery [22] tests). TBIT establishes a TCP con-
nection with the remote host at the user level. TBIT composes
TCP segments (or segments from another protocol), and uses raw
IP sockets to send them to the remote host. TBIT also sets up a
host ﬁrewall to prevent incoming packets from reaching the kernel
of the local machine; a BSD packet ﬁlter is used to deliver incom-
ing packets to the TBIT process. TBIT’s user-level connection is
used to control the sending of carefully constructed packets (con-
trol, data, acknowledgment, etc.) as desired from the local host.
Note that all the TBIT tests are susceptible to network conditions
to some degree. For instance, if an ACK sent by TBIT is lost in
transit to the web server the result of the test could be inconclusive
or even wrongly reported. We have taken test-speciﬁc measures to
make each of our tests as robust as possible. In addition, our large
set of web servers (described below) helps to minimize any biases
that bogus tests introduce into our results.
Server name
Location
Cache size
Pittsburgh, PA
Urbana-Champain, IL
Boulder, CO
Silicon Valley, CA
pb.us.ircache.net
uc.us.ircache.net
bo.us.ircache.net
sv.us.ircache.net
sd.us.ircache.net
pa.us.ircache.net
sj.us.ircache.net MAE-West, San Jose, CA
rtp.us.ircache.net
ny.us.ircache.net
San Diego, CA
Palo Alto, CA
Research Triangle, NC
New York, NY
12867
18711
42120
28800
19429
5511
14447
33009
22846
Table 1: IRCache servers and locations
The list of target web servers used in our study was gathered
from IRcaches, the NLANR Web Caching project [1]. We used
web cache logs gathered from nine different locations around the
United States. Table 1 shows the cache logs used from February
2004, along with the log sizes, expressed as the number of unique
IP server addresses from each cache. Since the caches are located
within the continental US, most of the cached URLs correspond to
domain names within the US. However, the cache logs also contain
a sizable set of web servers located in the other continents. Of the
84,394 unique IP addresses1 found in the cache logs: 82.6% are
from North America, 10.2% are from Europe, 4.9% are from Asia,
1.1% are from Oceania, 1.0% are from South America and 0.2%
are from Africa.
All the TBIT tests outlined in this paper were conducted between
February and May 2004. The TBIT client was always run from a
machine on the local network at our research laboratory. There
is no local ﬁrewall between the machine running TBIT and our
Internet connection.
4. MIDDLEBOXES AND TRANSPORT PRO-
TOCOLS
The increased prevalence of middleboxes puts into question the
general applicability of the end-to-end principle. Middleboxes in-
troduce dependencies and hidden points of failure, and can affect
the performance of transport protocols and applications in the In-
ternet in unexpected ways. Middleboxes that divert an IP packet
from its intended destination, or modify its contents, are generally
considered fundamentally different from those that correctly termi-
nate a transport connection and carry out their manipulations at the
application layer. Such diversions or modiﬁcations violate the basic
architectural assumption that packets ﬂow from source to destina-
tion essentially unchanged (except for TTL and QoS-related ﬁelds).
The effects of such changes on transport and application protocols
are unpredictable in the general case. In this section we explore the
ways that middleboxes might interfere in unexpected ways with
transport protocol performance.
4.1 ECN-capable Connections
Explicit Congestion Notiﬁcation (ECN) [27] is a mechanism that
allows routers to mark packets to indicate congestion, instead of
dropping them. After the initial deployment of ECN-capable TCP
implementations, there were reports of middleboxes (in particular,
ﬁrewalls and load-balancers) that blocked TCP SYN packets at-
tempting to negotiate ECN-capability, either by dropping the TCP
1We note that the list of servers could be biased by a single machine
having multiple unique IP addresses – which would tend to skew
the results. However, due to the size of the server list, we believe
that such artifacts, while surely present, do not highly skew the
overall results.
Year:
ECN Status
Number of Servers
I. Classiﬁed Servers
I.A. Not ECN-capable
I.B. ECN-Capable
I.B.1. no ECN-Echo
I.B.2. ECN-Echo
I.C. Bad SYN/ACK
II. Errors
II.A. No Connection
II.A.1. only with ECN
II.A.2. without ECN
II.B. HTTP Error
II.C. No Data Received
II.D. Others
2000
Number
24030
21879
21602
277
255
22
0
2151
2151
2151
0
–
–
–
100%
91%
90%
1.1%
1.1%
0.1%
2004