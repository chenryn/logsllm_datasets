![](img/651309ea7d253bc41e192d4edd7e83de.png)
Chmod 命令也可以用来以类似的方式改变目录的权限。
### Chown 命令
chown 命令用于在 Linux 中更改文件或目录的所有者。
命令语法:`chown  `
![](img/6feb4982df0f36143bac267109bd76ad.png)
**如果我们没有 sudo 权限，我们需要使用 sudo 命令**。让我们切换到用户“shivam”并尝试更改所有者。在运行下面的命令之前，我们还将文件的所有者更改为 root。
![](img/381355f39fd133ca140fcd8dfa006ffd.png)
Chown 命令也可以用来以类似的方式改变目录的所有者。
### Chgrp 命令
chgrp 命令可用于在 Linux 中更改文件或目录的组所有权。语法与 chown 命令非常相似。
![](img/6a82d25d035970e1c10379fce2c807ba.png)
Chgrp 命令也可以用来以类似的方式更改目录的所有者。
## SSH 命令
ssh 命令用于登录远程系统、在系统之间传输文件以及在远程机器上执行命令。SSH 代表 secure shell，用于通过不安全的网络(如互联网)在两台主机之间提供加密的安全连接。
参考:[https://www.ssh.com/ssh/command/](https://www.ssh.com/ssh/command/)
我们现在将讨论无密码认证，这种认证是安全的，并且最常用于 ssh 认证。
### 使用 SSH 的无密码认证
使用这种方法，我们可以在不输入密码的情况下 ssh 到主机。当我们希望一些脚本执行 ssh 相关的任务时，这种方法也很有用。
无密码身份验证需要使用公钥和私钥对。顾名思义，公钥可以与任何人共享，但私钥应该是私有的。让我们不要进入这个认证如何工作的细节。你可以在这里了解更多信息
使用远程主机设置无密码身份验证的步骤:
1.  生成公钥-私钥对
    如果我们已经在\~/中存储了一个密钥对。ssh 目录中，我们将不再需要生成密钥。
    安装 openssh 包，其中包含所有与 ssh 相关的命令。
    ![](img/68d899cde91ea6a294767686226d8925.png)
    使用 ssh-keygen 命令生成一个密钥对。用户可以选择所有提示的默认值。
    ![](img/89a4b652193ee0f51021ead89fcbf908.png)
    成功运行 ssh-keygen 命令后，我们应该在\~/中看到两个密钥。ssh 目录。Id_rsa 是私钥，id_rsa.pub 是公钥。请注意，私钥只能由您读取和修改。
    ![](img/cb199f7e35634263fec69b758188ca93.png)
2.  将公钥传送到远程主机
    有多种方法可以将公钥传输到远程服务器。我们将研究使用 ssh-copy-id 命令来完成这项工作的最常见的方法之一。
    ![](img/211408065f81e39d8215834d6c536fd9.png)
    安装 openssh-clients 包以使用 ssh-copy-id 命令。
    ![](img/62b9033fad5ef162e4953437c122ae11.png)
    使用 ssh-copy-id 命令将您的公钥复制到远程主机。
    ![](img/64f58914a88afcfde6f004d7cf516e0f.png)
    现在，ssh 使用密码认证进入远程主机。
    ![](img/be794a64e282d030231c6925cc4279cb.png)
    我们的公钥应该在\~/中。ssh/authorized_keys now。
    ![](img/0b4aae943082f38bdb59f8d8d27e88c7.png)
    \~/.ssh/authorized_key 包含一个公钥列表。与这些公钥相关联的用户可以通过 ssh 访问远程主机。
### 如何在远程主机上运行命令？
通用语法:`ssh @ `
![](img/68525429870ca611daaa61731b9fd159.png)
### 如何将文件从一台主机传输到另一台主机？
一般语法:`scp   `
![](img/063a66a5ed423229c1765973e02a11b7.png)
## 包管理
软件包管理是在系统上安装和管理软件的过程。我们可以从 Linux 包发行商那里安装我们需要的包。不同的分销商使用不同的包系统。
| 包系统 | 分布 |
| --- | --- |
| Debian 风格(。deb) | Debian，Ubuntu |
| 红帽风格(。rpm) | Fedora、CentOS、Red Hat Enterprise Linux |
**Linux 中流行的打包系统**
| 命令 | 描述 |
| --- | --- |
| `yum install ` | 在您的系统上安装软件包 |
| `yum upudate ` | 将软件包更新到最新的可用版本 |
| `yum remove ` | 从系统中删除软件包 |
| `yum search` | 搜索特定的关键字 |
DNF 是 YUM 的继承者，现在在 Fedora 中用于安装和管理软件包。DNF 将来可能会在所有基于 RPM 的 Linux 发行版上取代 YUM。
![](img/0baa0cd88c9ecea4a6ec519fbec0afe1.png)
当我们使用 yum search 命令进行搜索时，确实找到了关键字 httpd 的精确匹配。现在让我们安装 httpd 包。
![](img/2da8177071edb098fa23d2bd51b309e5.png)
安装 httpd 后，我们将使用 yum remove 命令删除 httpd 包。
![](img/de5aee8a38e911ae79ef4d0d2e840b9a.png)
## 进程管理
在这一节中，我们将学习一些有用的命令，它们可以用来监视 Linux 系统上的进程。
### ps(流程状态)
ps 命令用于了解进程或进程列表的信息。
![](img/935684647222ab193a6f489b3bd0555d.png)
如果在运行 ps 命令时出现错误“ps 命令未找到”，请安装 **procps** 包。
没有任何参数的 ps 用处不大。让我们尝试使用下面的命令列出系统中的所有进程。
参考:[https://UNIX . stack exchange . com/questions/106847/what-does-aux-mean-in-PS-aux](https://unix.stackexchange.com/questions/106847/what-does-aux-mean-in-ps-aux)
![](img/a22b897c9b9a07286cbc9a1b5936e604.png)
我们可以在 ps 命令中使用一个附加参数来列出带有特定进程 ID 的进程的信息。
![](img/b851263df5193756e349edd4cb5691c2.png)
我们可以结合使用 grep 和 ps 命令来仅列出特定进程。
![](img/354d7a42f2b561d13d7964c8a9b69779.png)
### 顶端
top 命令用于实时显示系统上运行的 Linux 进程的信息。它还显示系统信息的摘要。
![](img/d5bbdcf79dd71e0ab6770bba6b040acc.png)
对于每个进程，top 列出了进程 ID、所有者、优先级、状态、cpu 利用率、内存利用率和更多信息。它还列出了整个系统的内存利用率和 cpu 利用率，以及系统正常运行时间和 cpu 平均负载。
## 内存管理
在本节中，我们将学习一些有用的命令，这些命令可用于查看系统内存的信息。
### 自由的
free 命令用于显示系统的内存使用情况。该命令显示 RAM 中可用的总空闲空间和已用空间，以及缓存/缓冲区占用的空间。
![](img/1af6642deb89afcaa5dd7f6fa0bc8d8d.png)
默认情况下，free 命令以千字节为单位显示内存使用情况。我们可以使用一个额外的参数来获取人类可读格式的数据。
![](img/f5c5178c58a2a6b0f0c18cc29b58fdab.png)
### vmstat
vmstat 命令可用于显示内存使用情况以及关于 io 和 cpu 使用情况的附加信息。
![](img/7408448a9df28af1b29c2907ba22cf3a.png)
## 检查磁盘空间
在这一节中，我们将学习一些有用的命令，它们可以用来在 Linux 上查看磁盘空间。
### 磁盘空闲
df 命令用于显示每个已装载文件系统的可用空间。
![](img/6d15be2c710e57763e6263201e529ecc.png)
### 磁盘使用情况(du)
du 命令用于显示系统中文件和目录的磁盘使用情况。
![](img/d15869526492f3d6763569d5d704b50d.png)
以下命令可用于显示根目录中前 5 个最大的目录。
![](img/0a9bcfeb2409273271e629c8ea810206.png)
## 守护进程
作为后台进程运行的计算机程序称为守护程序。传统上，守护进程的名称以 d - sshd、httpd 等结尾。我们不能与后台进程交互，因为它们在后台运行。
服务和守护进程大部分时间都可以互换使用。
## 系统
Systemd 是 Linux 操作系统的系统和服务管理器。Systemd 单元是 systemd 的构造块。这些单元由单元配置文件表示。
以下示例显示了/usr/lib/systemd/system 中的单元配置文件，这些文件由安装的 RPM 软件包分发。我们对以 service 结尾的配置文件更感兴趣，因为这些是服务单元。
![](img/aa9100a19dd96b8eab4bb843883b5e05.png)
### 管理系统服务
服务单位以结尾。服务文件扩展名。Systemctl 命令可用于启动/停止/重新启动由 systemd 管理的服务。
| 命令 | 描述 |
| --- | --- |
| systemctl 启动名称. service | 启动服务 |
| 系统停止名称.服务 | 停止服务 |
| systemctl 重新启动名称。服务 | 重新启动服务 |
| systemctl 状态名称.服务 | 检查服务的状态 |
| systemctl 重新加载 name.service | 重新加载服务的配置 |
## 日志
在这一节中，我们将讨论一些重要的文件和目录，它们对于在 Linux 中查看系统日志和应用日志非常有用。当您对系统进行故障诊断时，这些日志非常有用。
![](img/4c44fe53328c9c6d77fa7270baf39478.png)