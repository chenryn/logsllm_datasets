Because some of these tickets could be sensitive or
embarrassing to the creator, we created an anonymization
plan to discard personally identifying information as part
of our IRB protocol. We used pattern matching and name
lists to redact names, addresses, titles, numbers, etc. This
method had false positives and false negatives. Whenever we
encountered a ticket with persisting personally identifying
information (PII), we stopped our analysis, removed it, and
resumed. Whenever we report a quote where our system
removed PII, we include the mark “[PII].”
Figure 1: Timeline of Unique User IDs Aggregated Daily and
Monthly and the Distribution of Login Frequency Per User— The
timeline of daily unique user IDs shows high usage during work
weeks and periodic dips on weekends and university holidays. UCB
provided a full year of logs, and UIUC provided 9 months of logs.
A log was generated every time a user succeeded or failed a 2FA
ceremony, and was necessarily preceded by a successful password
authentication. The user base increases as more personnel are
required to use 2FA and new people join the organization. Steeper
upward trends consistent with the gradual 2FA rollout at both
institutions are visible in late 2018.
130    29th USENIX Security Symposium
USENIX Association
 0 5000 10000 15000 20000 25000 30000 35000 40000 45000 500002018-062018-072018-082018-092018-102018-112018-122019-012019-022019-032019-042019-05Unique User IDsTimeDaily User CountsUIUCUCB 10000 20000 30000 40000 50000 60000 70000 80000 900002018-062018-072018-082018-092018-102018-112018-122019-012019-022019-032019-042019-05Unique User IDsTimeMonthly User CountsUIUCUCB 0 0.2 0.4 0.6 0.8 1 1 10 100 1000 10000 100000 1x106 1x107User FractionInter-Login Interval (Seconds)Login Frequencies Per UserMean UIUCMedian UIUCMean UCBMedian UCB2nd Factor Type
App Push
Phone Call
SMS/Code
U2F/Yubikey
Total
Time (s)
Count UIUC
11.8
20.8
18.4
9.7
-
2,884,875
865,559
1,688,161
204,489
-
Count UCB Hrs/Yr UIUC Hrs/Yr UCB Hrs/User-Year UIUC Hrs/User-Year UCB
5,967,112
1,272,396
1,970,448
11,820.0 hrs
6,251.3 hrs
10,785.5 hrs
5.5 min
4.2 min
5.8 min
0.1 min
46,427
688.7 hrs
19,721.0 hrs
7,412.5 hrs
10,154.6 hrs
126.1 hrs
9.1 min
4.8 min
8.3 min
0.5 min
-
29,525.5 hrs
37,414.1 hrs
22.7 min
15.6 min
Table 1: Estimated User Time Spent Authenticating—Using measurements of the time to authenticate using various 2FA methods by Reese et
al. and Lang et al. [19, 28, 29], we estimate the total time spent on 2FA per person and overall at these organizations. Their measurements did
not use exactly the same interface and systems, so we applied the time measured from the most similar devices in the record. A key difference in
UIUC and UCB is that the former has no device remembrance policy, whereas the latter can remember a device for 30 days.
3.2 Baseline Authentication Behavior
Observed 2FA patterns are, by necessity, strongly tied to
existing traditional authentication patterns. We consider the
generalizability of our organizations by comparing with
studies of traditional authentication patterns. The number
of unique users per day and per month for both organizations
is given in Figure 1. An average workday sees about 20K
of 78K users logging in at UIUC and 40K of 105K users at
UCB. The monthly aggregation displays the forced adoption
curve of 2FA at both universities as the number of active users
rises. Users at UCB re-authenticate several times per day,
while users at UIUC usually authenticate every few days.
There are also about 35% of users at UIUC and about 20%
of users at UCB who log in less than monthly.
4 Systemic Usability of a 2FA Deployment
Understanding the baseline authentication behavior at each
university, we begin measuring the user burden evident in
these 2FA deployments. We begin by asking how much time
a user should expect to have to spend on 2FA. Based on
Colnago et al. and Dutson et al.’s suggestions to reduce this
overall time using device remembrance [7,13], we investigate
the theoretical and observed beneﬁts of device remembrance.
Next, we ask how much of a burden 2FA errors are causing
to these organizations. How often are users resorting to
account recovery options? How often do 2FA ceremonies end
in failure, and why? How much time does it take a user whose
2FA login fails to solve their problem and log in successfully?
We also investigate which problems most commonly force
users to seek technical support assistance.
4.1 Time Taken By Authentications
How much extra user time is spent when 2FA is added to their
authentication routine? While an individual 2FA ceremony
may be fast, the total time over a year may be burdensome.
Colnago et al. found that their survey respondents were most
annoyed about the time taken by 2FA [7]. However, based on
our analysis, we estimate that the average user only spends
tens of minutes per year or less on these 2FA systems. There
is also a subset of users who end up authenticating far more
than their peers. A breakdown of measured user burden by
subpopulation will be presented in Section 5.
We estimated this by counting the total number of 2FA
authentications divided by the type of second factor used per
person. We then leveraged Reese et al.’s published empirical
timing estimates for four of ﬁve tested types of 2FA [28].
We averaged their ﬁndings with the ﬁndings for employees
and customers of Google as reported by Lang et al. [19]
Redmiles et al. [27] also measured SMS 2FA timing, but
do not report timing information directly. These estimates
show the time users take between successfully entering their
username/password and completing the 2FA ceremony. We
totaled the user time required at each university to authenticate
millions of times per year overall. Because their data includes
users learning to use the system, we chose to make our
estimates based on the median times reported by Reese et
al. This is necessarily a rough estimate because Reese et al.’s
users only had two weeks to learn the system, were a smaller
sample size, and were using a different custom 2FA system.
Lang et al. had a large sample size, but still has a different UI
to that our users were given. Further, this estimate is limited
by an imperfect mapping of the measured 2FA methods to the
16 distinct second factors labeled in our dataset.
The results aggregated across the organization and
normalized to time-per-year are displayed in Table 1. We also
report a cumulative distribution function (CDF) of the time
required of each user in Figure 2. Organizations should expect
users to spend between 10 minutes and an hour per year on
2FA—even if nothing ever goes wrong. At organizations as
large as our universities, this aggregate time could be valued
at hundreds of thousands of dollars per year (based on an
hourly wage). In practice, organizations make these kinds
of investments for many kinds of mandatory trainings and
programs aimed at reducing overall liability.
At the per-user level, we know the number of logins are
not evenly distributed, so we also calculated the distribution
of time taken per user. Overall, only about 10% of people at
both universities spend more than an hour per year on 2FA.
USENIX Association
29th USENIX Security Symposium    131
Figure 2: CDF of Time Spent Per User— The total estimated annual
time spent on 2FA per person at each university. Based on our
authentication frequency data combined with Reese et al.’s and Lang
et al.’s past measurements of median 2FA ceremony duration [19,29].
90% of people are likely to be spending an hour or less on 2FA per
year on average.
4.2 Device Remembrance
One possible mitigation to reduce user burden in
authentication is to remember trusted devices on which a
successful 2FA has recently taken place. This saves users
time on their personal devices and reduces the overall impact
of 2FA. Fortunately, our two universities have very different
device remembrance policies, which allows us to compare
their effects. We report the usability effects from UIUC which
had no device remembrance in comparison with UCB which
chose an optional 30-day remembrance policy. 1
Because 70% (21.1M of 30.0M) of logins at UCB were
remembered, tens of thousands of hours of users’ time was
saved. By the previous timing estimation, a 30-day “remember
me” policy has saved approximately 80K person-hours per
year for UCB by eliminating 70% of 2FA events. Paid at $20
per hour, an organization with 100K users would experience a
yearly indirect cost at between approximately $400K–600K.
The usability beneﬁt was not, however, uniform across
users. A CDF of the device remembrance rates per user
is given in Figure 3. Colnago et al. reported an overall
remembrance rate of 49% with only 55% of users taking
advantage of the feature at Carnegie Mellon University [7].
Abbott and Patil reported about 20% remembrance at Indiana
University Bloomington, and describe some UI issues that
make this feature harder to ﬁnd [2]. At UCB, by contrast,
80% of users are beneﬁtted by remember me and the overall
remembrance rate is 70% with 60% of users able to skip 2FA
for at least 50% of their logins. Colnago et al.’s qualitative data
revealed that 20% of users were unaware of the remembrance
1Each organization arrived at this policy based on differing threat models,
and this work will not evaluate which policy provides better protection.
Figure 3: Ideal vs. Actual Remember Me at UCB— We simulated
the ideal effects of a “Remember Me” feature for 2FA of different
lengths on the 6 months of 2FA login data from UCB. In the idealized
simulation, the organization has true single sign-on and the user uses
exclusively one device. In reality, fragmented authentication systems
and users on various devices lessen the beneﬁts of a “Remember Me”
feature. This ﬁgure demonstrates that while increasing the device
remembrance timeout does decrease user load, the beneﬁt scales
inversely with the timeout period.
feature, 10% reported being unable to use it, and 12% chose
to avoid it.
There are differences between the expected and measured
impact of device remembrance. We knew to expect that a
30-day remembrance period does not reduce user burden by
30x due to fragmented login systems, browser cookie deletion
rules, user ignorance, and multiple devices [7, 13]. But, we
still might expect the average user time per year to be 70%
lower at UCB than at UIUC. However, this was not the
case. Table 2 shows that UCB users spend about 32% less
time on 2FA per year on average. The hidden factor is web
service timeouts: UIUC’s web services time out after 8-12
hours, whereas users must re-authenticate at UCB after 15-30
minutes of inactivity.
We also ran a simulation to compare the expected impact
of a device remembrance policy to the measured impact. We
used a six-month period from UCB’s data (after the adoption
window was over) in which to run a simulation of various
remembrance window sizes. For each user, we counted the
number of times they would have had to authenticate if it
were only required every N days where N = [1,7,14,30,60,90].
This was based on the timing of these users’ actual recorded
login events (see Figure 1). The results are presented as
a CDF in Figure 3. The difference between the predicted
impact and the measured impact is due to users blocking 3rd
party cookies, changing machines, changing browsers, and
not choosing to (or not knowing how to) be remembered.
From our data, we could not reliably differentiate a session
timeout from other causes of session renewal. The simulation
132    29th USENIX Security Symposium
USENIX Association
 0 0.2 0.4 0.6 0.8 1 0.1 1 10 100User FractionMinutes/YearCDF 2FA Time Per UserUIUCUCB 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1UsersFraction RememberedCDF: Fraction of Remembered Logins Per UserActual1 Day7 Days14 Days30 Days60 Days90 DaysFigure 5: CDF of User Error Recovery Times— This graph shows
the mean and median error recovery time per fraction of users. This
mean and median are the mean and median of individual users’
recovery times. “Recovery time” is the time difference between a
failed 2FA login and the next successful login.
ﬁndings of Abbott and Patil [2].
To see whether these errors were common to all users,
we also present the distribution of error rates per user in
Figure 4. Sixty percent of users experienced 1 to 100 errors
and 40% saw no errors at UIUC. Seventy-ﬁve percent of
users experienced between 1 and 100 errors and 20% of users
did not experience errors at UCB. Forty-ﬁve percent of users
at UIUC and 60% of users at UCB saw error rates under
20%, while more than one in seven users at both universities
experienced errors more than 20% of the time. The overall
lesser error counts at UIUC may be due to the lack of device
remembrance—leading to more frequent logins.
We investigated whether our samples’ proximity to
mandatory 2FA adoption periods at each institution led to
elevated error rates. However, Figure 4 shows that error and
abandonment rates at UCB were relatively stable. The early
adopters at UIUC shared a similar error rate to the overall
steady state of their UCB counterparts. The one difference
observed from this perspective was that at the time when
UIUC faculty and graduate students were forced to enroll,
session abandonment fell. Simultaneously, errors temporarily
peaked.
4.4 Recovery Time from Failure
To better understand how much time users spend locked out
when experiencing errors, we measured the time between an
authentication failure and the next successful attempt. We call
the difference between the timestamp of a failed 2FA attempt
and the next subsequent successful login the “recovery time.”
Where there were repeated failures, only the time between
the ﬁrst failure and the next success were counted. Note, that
Figure 4: Error Rates: Over Time and Per-User Distribution—
Early adopters at UIUC largely matched the error rate at UCB, but
as 2FA was forced onto the rest of the users (throughout late 2018),
abandonment became far less common and error rates rose. Fewer
than 20% of users saw errors more than 20% of the time.
demonstrates the expected diminishing returns of increasing
device remembrance timeouts. The number of required
re-authentications scales inversely with the remembrance
time.
4.3 Errors in 2FA Ceremonies
We observed that more than one in twenty 2FA ceremonies
did not end successfully. This observation was concerning
because logs were created only after a user successfully
entered their username and password. The ﬁrst graph in
Figure 4 shows the errors over time in the system broken
down by user cancellations/abandonment and other errors.
We examined errors by aggregating unsuccessful login
attempts from UCB’s logs by their reason for failure. Table 2
presents the reasons for failure as well as the second factor
device classes they affected. The highest error rate was caused
by users canceling or abandoning their interaction, followed
by users entering invalid passcodes. This aligns with the
USENIX Association
29th USENIX Security Symposium    133
 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1User FractionError CountDistribution of User Error RatesUIUCUCB 0 0.02 0.04 0.06 0.08 0.1 0.12 0.142018-062018-072018-082018-092018-102018-112018-122019-012019-022019-032019-042019-05RateTimeMonthly Error RatesAbandonment UIUCAbandonment UCBErrors UIUCErrors UCB 0 0.2 0.4 0.6 0.8 1 1 10 100 1000 10000 100000 1x106 1x107User FractionRecovery Time (Seconds)Distribution of Error Recovery TimeUIUC MeanUIUC MedianUCB MeanUCB MedianFailure Cause
User Canceled
No Response
Invalid Passcode
Anomalous Push
Deny Unenrolled User
Error
No Keys Pressed
User Mistake
Locked Out
Call Timed Out
User Marked Fraud
Misc Invalid Request
Total
Affected 2nd Factors
n/a
Phone, Duo Push
SMS, Tokens, Passcode, Bypass
Duo Push
n/a
U2F, Phone, Duo Push
Phone
Duo Push
n/a
n/a
Duo Push
Phone, Duo Push, or n/a
Any
Count UIUC
87,676
199,327
153,850
0
0
18,689
24,293
1,671
1,394
0
52
715
487,676
Fraction UIUC
19.22%
43.71%
33.73%
0.00%
0.00%
4.10%
5.33%
0.37%
0.31%
0.00%
0.01%
0.16%
Count UCB
558,562
278,202
187,777
77,176
14,546
21,173
15,300
3,357
753
1,797
165
271
Fraction UCB
48.19%
24.00%
16.20%
6.66%
1.25%
1.83%
1.32%
0.29%
0.06%