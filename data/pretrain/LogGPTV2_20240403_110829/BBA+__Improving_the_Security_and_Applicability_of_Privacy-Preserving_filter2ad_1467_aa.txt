title:BBA+: Improving the Security and Applicability of Privacy-Preserving
Point Collection
author:Gunnar Hartung and
Max Hoffmann and
Matthias Nagel and
Andy Rupp
BBA+: Improving the Security and Applicability of
Privacy-Preserving Point Collection
Gunnar Hartung∗
Karlsruhe Institute of Technology
Department of Informatics
Karlsruhe, Germany
PI:EMAIL
Matthias Nagel‡
Karlsruhe Institute of Technology
Department of Informatics
Karlsruhe, Germany
PI:EMAIL
Max Hoffmann†
Ruhr-Universität Bochum
Horst Görtz Institute for IT-Security
Bochum, Germany
PI:EMAIL
Andy Rupp§
Karlsruhe Institute of Technology
Department of Informatics
Karlsruhe, Germany
PI:EMAIL
ABSTRACT
Black-box accumulation (BBA) has recently been introduced as a
building-block for a variety of user-centric protocols such as loyalty,
refund, and incentive systems. Loosely speaking, this building block
may be viewed as a cryptographic “piggy bank” that allows a user
to collect points (aka incentives, coins, etc.) in an anonymous and
unlinkable way. A piggy bank may be “robbed” at some point by a
user, letting her spend the collected points, thereby only revealing
the total amount inside the piggy bank and its unique serial number.
In this paper we present BBA+, a definitional framework ex-
tending the BBA model in multiple ways: (1) We support offline
systems in the sense that there does not need to be a permanent
connection to a serial number database to check whether a pre-
sented piggy bank has already been robbed. (2) We enforce the
collection of “negative points” which users may not voluntarily
collect, as this is, for example, needed in pre-payment or reputation
systems. (3) The security property formalized for BBA+ schemes is
stronger and more natural than for BBA: Essentially, we demand
that the amount claimed to be inside a piggy bank must be exactly
the amount legitimately collected with this piggy bank. As piggy
bank transactions need to be unlinkable at the same time, defining
∗The project underlying this report was supported by the German Federal Ministry
of Education and Research under Grant No. 01|S15035A. The responsibility for this
contents of this publication lies with the author.
†The author is supported by DFG grant PA 587/10-1.
‡The author is supported by the German Federal Ministry of Education and Research
within the framework of the project “Sicherheit vernetzter Infrastrukturen (SVI)” in
the Competence Center for Applied Security Technology (KASTEL).
§The author is supported by DFG grant RU 1664/3-1 and the Competence Center for
Applied Security Technology (KASTEL).
Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for components of this work owned by others than the
author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or
republish, to post on servers or to redistribute to lists, requires prior specific permission
and/or a fee. Request permissions from permissions@acm.org.
CCS ’17, October 30-November 3, 2017, Dallas, TX, USA
© 2017 Copyright held by the owner/author(s). Publication rights licensed to Associa-
tion for Computing Machinery.
ACM ISBN 978-1-4503-4946-8/17/10...$15.00
https://doi.org/10.1145/3133956.3134071
this property is highly non-trivial. (4) We also define a stronger
form of privacy, namely forward and backward privacy.
Besides the framework, we show how to construct a BBA+ sys-
tem from cryptographic building blocks and present the promising
results of a smartphone-based prototypical implementation. They
show that our current instantiation may already be useable in prac-
tice, allowing to run transactions within a second—while we have
not exhausted the potential for optimizations.
CCS CONCEPTS
• Security and privacy → Distributed systems security; Public
key encryption; • Applied computing → Digital cash; Electronic
funds transfer; Secure online transactions;
KEYWORDS
Customer Loyalty Programs, Incentive Systems, Stored-Value Pay-
ments, Reputation Systems, Black-Box Accumulation.
1 INTRODUCTION
In numerous user-centric cyber-physical systems, point collection
and redemption mechanisms are one of the core components.
Well-known examples include loyalty programs like the German
Payback system [33] or the UK-based Nectar program [4]. Users may
collect points at every purchase for being loyal customers (and for
revealing some information about their purchases). Later, collected
points may be redeemed in exchange for vouchers, services, or
other benefits.
In fact, many other cyber-physical systems try to incentify a
certain behavior of users by means of similar mechanisms. For in-
stance, in envisioned mobile sensing scenarios [15], users should be
encouraged to collect environmental or health data measured with
their smart devices and provide this data (enhanced by location-time
information) to some operator. In exchange, users receive micro-
payments they can use to pay for services based on the collected
data. In Vehicle-to-Grid scenarios [27], e-car owners are rewarded
for the power their e-car batteries provide to the Smart Grid when
cars are parked at the mall, office, etc.
Session I3:  Personal PrivacyCCS’17, October 30-November 3, 2017, Dallas, TX, USA1925In [25] Jager and Rupp formalized the core functional, security,
and privacy requirements of a building block to realize the kind of
systems described above. Their new building block, called black-box
accumulation (BBA), consists of a set of non-interactive algorithms
to generate, manipulate, and show properties about a BBA token
(aka piggy bank). When correctly executed by legitimate parties,
it allows a user to collect positive points (representing incentives)
in an anonymous and unlinkable fashion. More precisely, in the
BBA framework we have four parties: user, issuer, accumulator, and
verifier. In the beginning, a user receives a BBA token generated by
the issuer (using his secret key) which is bound to a unique serial
number known to both parties. All points are collected using this
single, constant-size accumulation token. To this end, a user blinds
and unblinds the token before and after every transaction with an
accumulator (who uses the same secret key as the issuer). When
redeeming the token, the sum of all collected points as well as the
serial number is revealed to the verifier.
Obviously, obtaining and redeeming a BBA token is a linkable
operation as the unique serial number of the token is revealed in
both operations. A permanent connection to a database containing
serial numbers of tokens already redeemed is required to prevent
double-redemption (aka double-spending) of tokens. Hence, BBA
schemes are online systems. Moreover, the authors formalized a
rather weak form of security, by only demanding that a collusion
of malicious users may not be able to redeem more points than the
total amount of points issued to them. In particular, this does not
rule out that users may transfer points arbitrarily between their
BBA tokens (without help). Also, an “old” copy of a BBA token
(i.e., one not holding the most current balance) can be used for the
accumulation or redemption of points. In this way, a user could
easily get rid of “negative” points.
To summarize, the original BBA framework suffers from a num-
ber of serious restrictions including (1) fairly weak security guaran-
tees, (2) the need of a permanent database connection, (3) the lack
of mechanisms to enforce the collection of “negative” points, and
(4) the linkability of token creation and redemption.
These shortcomings limit the applicability of BBA as a building
block in user-centric systems. For instance, loyalty system providers
do not want their customers to pool or trade their points, which is,
however, not excluded by the BBA security definition. Moreover,
customers should be allowed to partially redeem collected points.
To realize this feature with a BBA scheme, one would need to
redeem all points on a token, create a new one, and charge it with
the remaining (unspent) points. However, in this way all partial
redemptions of a customer are linkable.
Other applications requiring features beyond BBA are anony-
mous reputation systems where a central authority rates the be-
havior, reliability, or activity of users by issuing reputation points.
Similar to loyalty systems, it is undesirable that users are able to
pool or trade their reputation points. Additionally, it might be useful
in some scenarios to be able to issue negative reputation points ei-
ther by subtracting points or having a separate counter for negative
ratings.
Yet another set of applications which benefit from stronger se-
curity, offline capabilities, and negative points, are pre- or post-
payment systems. These systems are employed in many domains
like public transportation, toll collection, cashless canteen systems,
etc. In practice, such payment systems are typically implemented
using simple RFID-transponder or smartcard-based solutions like
the Mifare Classic [30], which essentially offers no security and
privacy at all ([16, 19, 20] and more), or the Mifare Desfire [31, 32]
also allowing to link all transactions.
1.1 Our Contribution
Definitional framework. We present the BBA+ framework
which addresses the restrictions of BBA discussed above, thereby
significantly strengthening the security and broadining the appli-
cability of black-box accumulation.
Our framework offers the following additional features: We con-
sider interactive algorithms (protocols) which leads to more intu-
itive definitions and broadens the class of possible instantiations.
The framework also supports the collection of negative points, and
a mechanism to identify users who present an old version of their
token (possibly having a higher balance than their most recent one).
Our security model is game-based. We formalize a stronger se-
curity property which captures the natural notion that the claimed
balance for each BBA+ token must be exactly the amount legiti-
mately collected with this token up to this point. Note that due to
the strong privacy property that needs to be satisfied in parallel,
defining security is highly nontrivial. We resolve this issue by de-
manding that privacy can be removed by a secret trapdoor held by
a trusted third party or shared by a couple of semi-trusted parties.
Our security model consists of a reduced model and a full-fledged
model, where the full-fledged model additionally considers eaves-
dropping on honest users. In the full version of this paper [22], we
define the full-fledged model in detail. Moreover, we show that any
system secure in the reduced model is also secure in the full-fledged
model provided that we additionally encrypt all protocol messages
using an IND-CCA secure scheme.
Our privacy model is simulation-based. We define a strong form
of privacy, namely forward and backward privacy: An adversary,
including the system operator, must not be able to link transactions
of an honest user. This even needs to hold for transactions preceding
and succeeding (except the very next) a corruption of the user,
during which all of his secrets leak to the adversary. The set of
unlinkable transactions not only includes accumulation but also
point redemption. In this context, note that the lifetime of a BBA+
token is essentially unrestricted, and, in contrast to a BBA token,
does not end with the first redemption of points.
Details on our framework are given in Section 3.
Construction. We propose an instantiation satisfying the prop-
erties sketched above. This scheme is a semi-generic construc-
tion using public-key encryption, homomorphic trapdoor com-
mitments, digital signatures, and Groth-Sahai (GS) non-interactive
zero-knowledge proofs over bilinear groups for which the SXDH
assumption holds.
To achieve freshness of tokens, we draw from techniques typi-
cally used in offline e-cash systems, namely double-spending tags.
Here, some double-spending tag, e.g., t := id · u2 + u1 mod p, needs
to be revealed when spending an e-coin. This tag contains user iden-
tity information id which is blinded by some secret user randomness
u1 (which has been fixed when the coin was issued) and involves a
challenge u2 freshly chosen by a merchant. No information about id
Session I3:  Personal PrivacyCCS’17, October 30-November 3, 2017, Dallas, TX, USA1926is revealed when the coin is spent once (as u1 is uniformly drawn).
However, when the coin is spent a second time, a different challenge
u′
2 is used in the revealed tag t′ := id ·u′
2 +u1 mod p, while the user
randomness u1 and id are the same (which needs to be enforced
by the protocol). This enables the bank to extract id using the two
double-spending tags t and t′ and challenge values u2 and u′
2.
Let us briefly sketch our construction which follows but signif-
icantly extends the idea of [25]. For the sake of simplicity, each
user may only receive a single token bound to his ID. An initial
BBA+ token jointly generated by the issuer and the user essentially
consists of a (multi-)commitment c and a signature σ on this com-
mitment under the issuer’s secret key. The commitment c contains
a user’s secret key skU, a token version number s, the balance
value w = 0, and some randomness u1 that will be used to generate
a double-spending tag in the next transaction. Note that skU, s,
and u1 are not known to the issuer but pkU, c, and σ are.
To add (positive or negative) points in an unlinkable fashion,
one cannot simply send over the token (c, σ ) to the accumula-
tor. Instead, the user sends a new commitment c′ containing the
same secret key skU, the same balance w, but a new token ver-
sion number s′,1 and some new randomness u′
1. Then he proves in
zero-knowledge that c′ is indeed a new, correctly modified version
of his old certified commitment c. Additionally, the proof ensures
that a double-spending tag (encoding skU) along with the version
number s for the old token (c, σ ) is revealed. The version number
is used to index the double-spending tags in the database. If the
accumulator accepts the proof, the homomorphic property of the
commitment scheme is used to add v points to c′ which is then
signed. The new token (c∗, σ∗) is sent to the user. Verifying the
balance of a token and redeeming points works analogously, except
that the balance w is revealed to the verifier. Note that the com-
putational complexity of all operations as well as the token size is
independent of the number of points to be transferred or stored.
This concludes the simplified description of our construction. More
details can be found in Section 4.
While our construction is fairly intuitive and draws from tech-
niques also commonly used in e-cash or P-signatures, there are
technical differences to these concepts as explained in the related
work section. The main challenge was to carefully combine these
techniques into a protocol that it is both provably secure and ef-
ficient at the same time. For instance, proving that a token can
only be used with its legitimate balance is highly non-trivial. Other
technical challenges arise from building on the Groth-Sahai proof
system. GS proofs are efficient and secure in the CRS model but re-
quire particular care, as they are no proper proofs-of-knowledge for
witness components over Zp and not always zero-knowledge. For
example, to prove statements about shrinking multi-commitments
to Zp-messages, which we use to obtain compact tokens and proofs,
the employed commitment scheme needs to satisfy a non-standard
binding property (F-binding).
Implementation. In order to assess the suitability of our con-
struction for real-world applications, we implemented our BBA+
instantiation and measured execution times on a smartphone. Our
implementation results show that all protocols can be executed
1Actually, the new version number is jointly chosen by user and issuer. s′ is only the
user’s share.
in less than 400 ms on the user side (for 254-bit Barreto-Naehrig
curves with optimal Ate pairing). This leads to the conclusion that