 **Migrated issue, originally created by Anonymous**
#sqlite does not have problem with this, but postgres has. (and i guess any
#other more strict DB).  
#This functionality is being used in polymorphic_union()
from sqlalchemy import *  
db = create_engine( 'sqlite:///:memory:')  
meta = BoundMetaData( db)
table_A = Table( 'A', meta,  
Column( 'name', type= String, ),  
Column( 'id', primary_key= True, type= Integer ),  
Column( 'atype', type= String, ),  
)
table_B = Table( 'B', meta,  
Column( 'bdata', type= String, ),  
Column( 'id', Integer, ForeignKey( 'A.id', ), primary_key= True ),  
)
selB = table_A.join( table_B).select( table_A.c.atype == 'B' )  
print '---', selB
selselB = select( selB.columns)  
print '===', selselB
:::::::::: results in:
\--- SELECT "A".name, "A".id, "A".atype, "B".bdata, "B".id  
FROM "A" JOIN "B" ON "A".id = "B".id  
WHERE "A".atype = ?
=== SELECT name, id, atype, bdata  
FROM (SELECT "A".name AS name, "A".id AS id, "A".atype AS  
atype, "B".bdata AS bdata, "B".id AS id  
FROM "A" JOIN "B" ON "A".id = "B".id  
WHERE "A".atype = ?)
=======  
note both "A".id AS id , "B".id AS id