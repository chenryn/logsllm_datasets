# Technical Analysis of Access Token Theft and Manipulation

## Introduction
This report provides a detailed analysis of access token theft and manipulation techniques, which are commonly used by malware to escalate privileges and perform lateral movement. The report will cover various Windows APIs and their usage in these attacks, along with detection methods and best practices for mitigating such threats.

## Key Functions and Their Usage

### SetThreadToken
- **Function**: Assigns an impersonation token to a thread.
- **Parameters**:
  - `PHANDLE Thread`
  - `HANDLE Token`

### ResumeThread
- **Function**: Resumes the execution of a suspended thread.

### DuplicateTokenEx
- **Function**: Creates a new token duplicating an existing token.
- **Parameters**:
  - `HANDLE hExistingToken`
  - `DWORD dwDesiredAccess`
  - `LPSECURITY_ATTRIBUTES lpTokenAttributes`
  - `SECURITY_IMPERSONATION_LEVEL ImpersonationLevel`
  - `TOKEN_TYPE TokenType`
  - `PHANDLE phNewToken`

## Technique 1: CreateProcessWithTokenW
To spawn a process with SYSTEM privileges, the following steps are required:

1. **Enable SeDebugPrivilege**:
   - The calling process must have the "SeDebugPrivilege" to read another process's memory.
   - Users in the administrator group have this privilege disabled by default.
   - Use `OpenProcessToken` to get the token handle of the calling process.
   - Use `LookupPrivilegeValue` with "SE_DEBUG_NAME" to get the LUID of the specified privilege.
   - Set `SE_PRIVILEGE_ENABLED` in the `TOKEN_PRIVILEGES` structure to enable the privilege.
   - Call `AdjustTokenPrivileges` with the token handle to enable the privilege.

2. **Acquire and Duplicate the Token**:
   - Call `OpenProcess` with the PID of the SYSTEM-level process.
   - Use `OpenProcessToken` to get the handle to the process’s primary token.
   - Ensure the token has `TOKEN_QUERY` and `TOKEN_DUPLICATE` permissions.
   - Set `SECURITY_IMPERSONATION_LEVEL` to "SecurityImpersonation" and `TOKEN_TYPE` to "TokenPrimary".
   - Call `DuplicateTokenEx` to create a duplicated token.

3. **Create the New Process**:
   - Use `CreateProcessWithTokenW` with the duplicated token, executable name, and `PROCESS_INFORMATION` structure to start a new process as the SYSTEM user.

Malware often sets the session ID of the new process/thread to match the target process using `SetTokenInformation` to impersonate user processes running from interactive logon.

## Technique 2: ImpersonateLoggedOnUser
1. **Check User Security Context**:
   - Call `GetUserName` after `OpenProcessToken` to check the user security context.
   - Use `ImpersonateLoggedOnUser` with the primary or impersonation token handle to change the security context to a SYSTEM-level process.
   - Call `GetUserName` again to verify the changed context.

## Technique 3: CreateProcessAsUser
1. **Create the New Process**:
   - Call `CreateProcessAsUser` with the duplicated token handle and the new process to be created.
   - The calling process must have `SE_ASSIGNPRIMARYTOKEN_NAME` to create the process with the specified token handle.

## Technique 4: SetThreadToken and ResumeThread
1. **Acquire and Set Token Information**:
   - Call `GetTokenInformation` to acquire the `TokenSessionID` for terminal services.
   - Set the `TokenSessionID` on the duplicated token using `SetTokenInformation`.

2. **Create and Resume the Thread**:
   - Create a thread in suspended mode.
   - Assign the new impersonated token to the thread using `SetThreadToken`.
   - Resume the thread using `ResumeThread`, which executes in the security context of the impersonated token.

## Other SYSTEM Level Processes
We examined several running SYSTEM-level processes and attempted to acquire and impersonate their access tokens. Some processes, such as `lsass.exe`, `winlogon.exe`, `googlecrashhandler.exe`, and `svchost.exe`, were successfully targeted. However, many others failed due to security settings and read permissions.

- **OpenProcess Call Failure**: Due to protection settings, some SYSTEM-level processes cannot be accessed.
- **OpenProcessToken Call Failure**: Differences in access permissions between processes led to failures.

### Protected Processes
Protected processes, such as `csrss.exe`, prevent malicious activities like code injection, debugging, and impersonation. These protections are documented in MS docs. To open a protected process, use `PROCESS_QUERY_LIMITED_INFORMATION` instead of `PROCESS_QUERY_INFORMATION`.

## MITRE ATT&CK Mapping
MITRE ATT&CK maps "Access token manipulation" under privilege escalation technique T1134. Many high-impact malware attacks use process access token impersonation for lateral movement.

## Detecting Access Token Manipulation Attacks
One way to detect these attacks is by monitoring Windows APIs. The following YARA rule can help with detection:

```yara
rule access_token_impersonation
{
    meta:
        description = "Yara rule to detect process access token impersonation"
        author = "Chintan Shah"
        date = "2021-01-29"
        rule_version = "v1.1"
        malware_family = "APT28/ FIN/ RottenPotato/Petya"
        mitre_attack = "T1134.001 T1134.002 T1134.003"

    strings:
        $api1 = "OpenProcess"
        $api2 = "OpenProcesstoken"
        $api3 = "DuplicateTokenEx"
        $apipath1_1 = "CreateThread"
        $apipath1_2 = "SetTokenInformation"
        $apipath1_3 = "SetThreadToken"
        $apipath1_4 = "ResumeThread"
        $apipath2_1 = "ImpersonateLoggedOnUser"
        $apipath3_1 = "CreateProcessWithToken"
        $apipath4_1 = "CreateProcessAsUser"

    condition:
        (all of ($api*) and all of ($apipath1_*)) or
        ($api1 and $api2 and $apipath2_1) or
        (all of ($api*) and $apipath3_1) or
        (all of ($api*) and $apipath4_1)
}
```

## Conclusion
Access token manipulation attacks allow malware to evade common mitigations and perform lateral movement. Monitoring the use of Windows APIs is crucial for detecting and preventing these attacks. It is also important to monitor API calls targeting SYSTEM-level processes.

## About the Author
**Chintan Shah**
- Lead Security Researcher at McAfee Intrusion Prevention System team.
- Focuses on exploit and vulnerability research, threat intelligence frameworks, reverse engineering, and malware analysis.
- Has uncovered multiple targeted and espionage attacks.

## About McAfee
McAfee is a device-to-cloud cybersecurity company, creating business and consumer solutions that make the world a safer place. By working with other security players, McAfee leads the effort to unite against cybercriminals for the benefit of all.

For more information, visit [www.mcafee.com](http://www.mcafee.com).

## Contact
6220 America Center Drive
San Jose, CA 95002
Phone: 888.847.8766
Website: [www.mcafee.com](http://www.mcafee.com)

## Copyright
McAfee and the McAfee logo are trademarks or registered trademarks of McAfee, LLC or its subsidiaries in the US and other countries. Other marks and brands may be claimed as the property of others. Copyright © 2021 McAfee, LLC. 4735_0421

**APRIL 2021**