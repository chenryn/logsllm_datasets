**例 8.1. 使用加密 SMB 3.0 连接挂载共享**
::: example-contents
使用加密 SMB 3.0 连接将 `\\server\example\`{.literal} 共享作为
`DOMAIN\Administrator`{.literal} 用户挂载到 `/mnt/`{.literal} 目录中：
``` literallayout
# mount -t cifs -o username=DOMAIN\Administrator,seal,vers=3.0 //server/example /mnt/
Password for DOMAIN\Administrator@//server_name/share_name:  password
```
:::
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_mounting-an-smb-share-automatically-when-the-system-boots_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux}系统引导时自动挂载 SMB 共享 {.title}
:::
如果服务器上永久需要访问挂载的 SMB 共享，则在引导时自动挂载共享。
::: itemizedlist
**先决条件**
-   已安装 The `cifs-utils`{.literal} 软件包。
:::
::: title
**流程**
:::
要在系统引导时自动挂载 SMB 共享，请将共享的条目添加到
`/etc/fstab`{.literal} 文件中。例如：
``` literallayout
//server_name/share_name  /mnt  cifs  credentials=/root/smb.cred  0 0
```
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
要让系统自动挂载共享，您必须将用户名、密码和域名存储在凭据文件中。详情请查看
["使用凭据文件对 SMB
共享进行身份验证"一节](#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_authenticating-to-an-smb-share-using-a-credentials-file_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux "使用凭据文件对 SMB 共享进行身份验证"){.xref}。
:::
在 `/etc/fstab`{.literal}
行的第四个字段中，指定挂载选项，如凭据文件的路径。详情请查看
`mount.cifs(8)man`{.literal} page 中的
["常用的挂载选项"一节](#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#con_frequently-used-mount-options_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux "常用的挂载选项"){.xref}
和 `OPTIONS`{.literal} 部分。
要验证共享挂载是否成功，请输入：
``` literallayout
# mount /mnt/
```
:::
::: section
::: titlepage
# []{#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_authenticating-to-an-smb-share-using-a-credentials-file_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux}使用凭据文件对 SMB 共享进行身份验证 {.title}
:::
在某些情况下，比如在引导时自动挂载共享时，应当在不输入用户名和密码的情况下挂载共享。要实施此操作，请创建一个凭据文件。
::: itemizedlist
**先决条件**
-   已安装 The `cifs-utils`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  创建一个文件，如
    `/root/smb.cred`{.literal}，并指定该文件的用户名、密码和域名：
    ``` literallayout
    username=user_name
    password=password
    domain=domain_name
    ```
2.  将权限设置为只允许所有者访问该文件：
    ``` literallayout
    # chown user_name /root/smb.cred
    # chmod 600 /root/smb.cred
    ```
:::
现在，您可以将 `credentials=file_name`{.literal} 挂载选项传递给
`mount`{.literal} 实用程序，或者在 `/etc/fstab`{.literal}
文件中使用它挂载共享，而无需提示输入用户名和密码。
:::
::: section
::: titlepage
# []{#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#assembly_performing-a-multi-user-smb-mount_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux}执行多用户 SMB 挂载 {.title}
:::
您为挂载共享提供的凭据默认确定挂载点上的访问权限。例如，如果您在挂载共享时使用
`DOMAIN\example`{.literal}
用户，则共享上的所有操作都将以该用户身份执行，而不管哪个本地用户执行此操作。
然而，在某些情况下，管理员希望在启动时自动挂载共享，但用户应使用自己的凭据对共享的内容执行操作。`multiuser`{.literal}
挂载选项允许您配置此场景。
::: {.important style="margin-left: 0.5in; margin-right: 0.5in;"}
### 重要 {.title}
要使用 `multiuser`{.literal} 挂载选项，还必须将 `sec`{.literal}
挂载选项设置为支持以非交互方式提供凭据的安全类型，如 `krb5`{.literal}
或带有凭据文件的 `ntlmssp`{.literal} 选项。详情请查看
["以用户身份访问共享"一节](#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_accessing-a-share-as-a-user_assembly_performing-a-multi-user-smb-mount "以用户身份访问共享"){.xref}。
:::
`root`{.literal} 用户使用 `multiuser`{.literal}
选项和对共享内容具有最少访问权限的帐户挂载共享。然后，常规用户可以使用 a
`cifscreds`{.literal}
实用程序将其用户名和密码提供给当前会话的内核密钥环。如果用户访问挂载的共享的内容，内核将使用内核密钥环中的凭据，而不是最初用于挂载共享的凭据。
使用此功能由以下步骤组成：
::: itemizedlist
-   [使用 `multiuser`{.literal}
    选项挂载共享](#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_mounting-a-share-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount "使用 multiuser 选项挂载共享"){.link}。
-   [（可选）使用 `multiuser`{.literal}
    选项验证共享是否已成功挂载](#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_verifying-if-an-smb-share-is-mounted-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount "验证是否使用 multiuser 选项挂载 SMB 共享"){.link}。
-   [以用户身份访问共享](#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_accessing-a-share-as-a-user_assembly_performing-a-multi-user-smb-mount "以用户身份访问共享"){.link}。
:::
::: itemizedlist
**先决条件**
-   已安装 The `cifs-utils`{.literal} 软件包。
:::
::: section
::: titlepage
## []{#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_mounting-a-share-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount}使用 multiuser 选项挂载共享 {.title}
:::
在用户使用自己的凭据访问共享之前，使用权限有限的帐户以 `root`{.literal}
用户身份挂载共享。
::: title
**流程**
:::
在系统引导时，使用 `multiuser`{.literal} 选项自动挂载共享：
::: orderedlist
1.  在 `/etc/fstab`{.literal} 文件中为共享创建条目。例如：
    ``` literallayout
    //server_name/share_name  /mnt  cifs  multiuser,sec=ntlmssp,credentials=/root/smb.cred  0 0
    ```
2.  挂载共享：
    ``` literallayout
    # mount /mnt/
    ```
:::
如果您不想在系统引导时自动挂载共享，请通过将
`-o multiuser,sec=security_type`{.literal} 传递给 `mount`{.literal}
命令手动挂载它。有关手动挂载 SMB 共享的详情请参考 ["手动挂载 SMB
共享"一节](#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_manually-mounting-an-smb-share_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux "手动挂载 SMB 共享"){.xref}。
:::
::: section
::: titlepage
## []{#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_verifying-if-an-smb-share-is-mounted-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount}验证是否使用 multiuser 选项挂载 SMB 共享 {.title}
:::
若要验证共享是否通过 `multiuser`{.literal} 选项挂载，可显示挂载选项。
::: title
**流程**
:::
``` literallayout
# mount
...
//server_name/share_name on /mnt type cifs (sec=ntlmssp,multiuser,...)
```
如果挂载选项列表中显示了 `multiuser`{.literal} 条目，则启用该功能。
:::
::: section
::: titlepage
## []{#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_accessing-a-share-as-a-user_assembly_performing-a-multi-user-smb-mount}以用户身份访问共享 {.title}
:::
如果使用 `multiuser`{.literal} 选项挂载 SMB
共享，用户可以为服务器提供其凭证到内核的密钥环：
``` literallayout
# cifscreds add -u SMB_user_name server_name
Password: password
```
当用户在包含挂载的 SMB 共享的
目录中执行操作时，服务器将应用此用户的文件系统权限，而不是挂载共享时最初使用的权限。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
多个用户可以同时在挂载的共享上使用自己的凭据来执行操作。
:::
:::
:::
::: section
::: titlepage
# []{#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#con_frequently-used-mount-options_assembly_mounting-an-smb-share-on-red-hat-enterprise-linux}常用的挂载选项 {.title}
:::
当您挂载 SMB 共享时，挂载选项会决定：
::: itemizedlist
-   如何与服务器建立连接。例如：连接到服务器时使用 SMB 协议版本。
-   共享将如何挂载到本地文件系统.例如，如果系统覆盖远程文件和目录权限，使多个本地用户能够访问服务器上的内容。
:::
要在 `/etc/fstab`{.literal} 文件的第四个字段中或在 mount 命令的
`-o`{.literal} 参数中设置多个选项，请使用逗号分隔它们。例如，请参阅
["使用 multiuser
选项挂载共享"一节](#assembly_mounting-an-smb-share-on-red-hat-enterprise-linux_managing-file-systems.html#proc_mounting-a-share-with-the-multiuser-option_assembly_performing-a-multi-user-smb-mount "使用 multiuser 选项挂载共享"){.xref}。
以下列表给出了常用的挂载选项：
::: informaltable
+----------------------------------+----------------------------------+
| 选项                             | 描述                             |
+:=================================+:=================================+
| cred                             | 设置凭证文件的路径。请查看       |
| entials=[*file_name*]{.emphasis} | ["使用凭据文件对 SMB             |
|                                  | 共享进行身份验证"一              |
|                                  | 节](#assembly_mounting-an-smb-sh |
|                                  | are-on-red-hat-enterprise-linux_ |
|                                  | managing-file-systems.html#proc_ |
|                                  | authenticating-to-an-smb-share-u |
|                                  | sing-a-credentials-file_assembly |
|                                  | _mounting-an-smb-share-on-red-ha |
|                                  | t-enterprise-linux "使用凭据文件 |
|                                  | 对 SMB 共享进行身份验证"){.xref} |
+----------------------------------+----------------------------------+
| dir_mode=[*mode*]{.emphasis}     | 如果服务器不支持 CIFS UNIX       |
|                                  | 扩展，则设置目录模式。           |
+----------------------------------+----------------------------------+
| file_mode=[*mode*]{.emphasis}    | 如果服务器不支持 CIFS UNIX       |
|                                  | 扩展，则设置文件模式。           |
+----------------------------------+----------------------------------+
| password=[*password*]{.emphasis} | 设置在 SMB                       |
|                                  | 服                               |
|                                  | 务器中验证的密码。另外，也可使用 |
|                                  | `credentia                       |
|                                  | ls 选项指定凭据文件`{.literal}。 |
+----------------------------------+----------------------------------+
| seal                             | 启用对使用 SMB 3.0               |
|                                  | 或更高协议                       |
|                                  | 版本的连接的加密支持。因此，使用 |
|                                  | `seal`{.literal} 和              |
|                                  | `vers`{.literal} 挂载选项设置为  |
|                                  | `3.0`{.literal}                  |
|                                  | 或更高版本。请参阅 [例 8.1       |
|                                  | "使用加密 SMB 3.0                |
|                                  | 连接挂载共享"](                  |
|                                  | #assembly_mounting-an-smb-share- |
|                                  | on-red-hat-enterprise-linux_mana |
|                                  | ging-file-systems.html#example_m |
|                                  | ounting-a-share-using-an-encrypt |
|                                  | ed-smb30-connection_assembly_mou |
|                                  | nting-an-smb-share-on-red-hat-en |
|                                  | terprise-linux "例 8.1. 使用加密 |
|                                  |  SMB 3.0 连接挂载共享"){.xref}。 |
+----------------------------------+----------------------------------+
| sec=[*security_mode*]{.emphasis} | 设置安全模式，如                 |
|                                  | `ntlmsspi`{.literal}，以启用     |
|                                  | NTLMv2                           |
|                                  | 密码散列和已启用的数据           |
|                                  | 包签名。有关支持值的列表，请查看 |
|                                  | `mount.cifs(8)man`{.literal}     |
|                                  | page 中的 选项描述。             |
|                                  |                                  |
|                                  | 如果服务器不支持                 |
|                                  | `ntlmv2`{.literal}               |
|                                  | 安全模式，则使用                 |
|                                  | `sec=                            |
|                                  | ntlmssp`{.literal}，这是默认值。 |
|                                  |                                  |
|                                  | 出于安全考虑，请不要使用不安全的 |
|                                  | `ntlm`{.literal} 安全模式。      |
+----------------------------------+----------------------------------+
| u                                | 设置在 SMB                       |
| sername=[*user_name*]{.emphasis} | 服务                             |
|                                  | 器中验证的用户名。另外，也可使用 |
|                                  | `credentia                       |
|                                  | ls 选项指定凭据文件`{.literal}。 |
+----------------------------------+----------------------------------+
| vers=[*S                         | 设定用于与服务器通信的 SMB       |
| MB_protocol_version*]{.emphasis} | 协议版本。                       |
+----------------------------------+----------------------------------+
:::
有关完整列表，请参阅 `mount.cifs(8)man`{.literal} page 中的
`OPTIONS`{.literal} 部分。
:::
:::
[]{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html}
::: chapter
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#assembly_overview-of-persistent-naming-attributes_managing-file-systems}第 9 章 持久性命名属性概述 {.title}
:::
作为系统管理员，您需要引用使用持久性命名属性的存储卷来构建比多个系统引导更可靠存储设置。
::: section
::: titlepage
# []{#assembly_overview-of-persistent-naming-attributes_managing-file-systems.html#con_disadvantages-of-non-persistent-naming-attributes_assembly_overview-of-persistent-naming-attributes}非持久性命名属性的缺陷 {.title}
:::
Red Hat Enterprise Linux
提供识别存储设备的多种方法。在使用正确的选项时，务必要使用正确的选项来识别每个设备，以避免意外访问错误的设备，特别是在安装到或重新格式化驱动器时。
通常，Linux 中使用非持久性名称来指代存储设备，格式为
`/dev/sd（主号码`{.literal}
）（次编号）。当检测到每个设备时，会为每个设备分配主号码和副号码范围以及关联的
`sd`{.literal}
名称。这意味着，如果设备检测顺序发生变化，主号码和副号码范围与关联的
`sd`{.literal} 名称之间的关联可能会改变。
在以下情况下可能会在以下情况下更改排序：
::: itemizedlist
-   系统引导过程的并行化会根据每个系统引导的顺序检测到存储设备。
-   磁盘无法启动或响应 SCSI
    控制器。这会导致通常的设备探测不会检测到它。该磁盘不能被系统访问，随后的设备将具有其主号码和副号码范围，包括相关的
    `sd`{.literal} 名称已下移。例如，如果没有检测到通常称为
    `sdb`{.literal} 的磁盘，则通常称为 `sdc`{.literal} 的磁盘将显示为