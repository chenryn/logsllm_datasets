title:Deterring Voluntary Trace Disclosure in Re-encryption Mix Networks
author:Philippe Golle and
XiaoFeng Wang and
Markus Jakobsson and
Alex Tsow
Deterring Voluntary Trace Disclosure
in Re-encryption Mix Networks
Philippe Golle
PARC
PI:EMAIL
XiaoFeng Wang
Indiana University
PI:EMAIL
Markus Jakobsson
Indiana University
PI:EMAIL
Alex Tsow
Indiana University
PI:EMAIL
Abstract
An all too real threat to the privacy offered by a mix net-
work is that individual mix administrators may volunteer
partial tracing information to a coercer. While this threat
can never be eliminated – coerced mix servers could sim-
ply be forced to reveal all their secret data – we can deter
administrators from succumbing to coercive attacks by rais-
ing the stakes. We introduce the notion of a trace-deterring
mix permutation to guarantee privacy, and show how it en-
sures that a collateral key (used for an arbitrary purpose)
be automatically revealed given any end-to-end trace from
input to output elements. However, no keying material is
revealed to a party who simply knows what input element
corresponds to what output element. Our techniques are
sufﬁciently efﬁcient to be deployed in large-scale elections,
thereby providing a sort of publicly veriﬁable privacy guar-
antee. Their impact on the size of the anonymity set – while
quantiﬁable – are not of practical concern.
1
Introduction
Mix servers transform a set of input elements to a per-
muted set of output elements. The use of probabilistic en-
cryption methods for the generation of the input elements
makes correlation of inputs and outputs infeasible as long
as at least one of the mix servers involved is honest, and
refuses to reveal its input-to-output correspondences.
Voluntary selective disclosure of mix trafﬁc has recently
been recognized as an emerging threat [3, 31]. Here, the
attacker secures cooperation by means of social coercion
(e.g., bribery) of the administrator of a mix server, thereby
obtaining information about selected input-output corre-
spondences for this server. Such information is referred to
as a trace. A trace is only meaningful if it is performed for
the same elements through each and every step of the mix
network; this is referred to as an end-to-end trace. One can
distinguish between a situation in which the trace informa-
tion consists simply of what output element a given input
element corresponds to, and a situation in which the mix
server also outputs a proof that the two elements in ques-
tion indeed do correspond to each other. This distinction is
not of importance to us, and we will – for simplicity – as-
sume that a trace simply reports a relationship, without any
evidence.
Traces vary in the amount of information they leak
about the correspondence between inputs and outputs. The
strongest possible trace discloses the individual correspon-
dence between one input and one output, or several such
correspondences. Weaker traces may expose only the global
correspondence between a subset of the inputs (e.g., a pair
of inputs) and a subset of the outputs, without revealing the
individual correspondences within the subset (e.g., which
element of the input pair corresponds to which element of
the output pair). Other than the trivial global correspon-
dence between the set of all inputs and all outputs, all traces
are undesirable, since they all compromise to some degree
the privacy of the mix server.
In this paper, we address the problem of voluntary dis-
closure of traces. Our approach is to discourage coercion
by ensuring the immediate disclosure of some collateral in-
formation of each server that collaborates in providing a
trace. This collateral information may be the secret mix
key of the server in question, thereby making it impossible
to perform partial traces since all correspondences will be
revealed as soon as one is. However, we recognize that this
may sometimes be undesirable, and note that the collateral
key may be of some other form as well, including simply a
key whose disclosure provides publicly veriﬁable evidence
of the server’s breach of privacy. This approach may be par-
ticularly suitable for applications of mix networks such as
electronic elections (see [7] for example).
We emphasize the following important properties of our
technique for deterring voluntary trace disclosures in re-
encryption mix networks:
First, exposure of a trace does not (in the context of elec-
tronic elections) link the other voters to their ballots
as in previous coercion deterrent schemes (e.g., [31]).
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:52:05 UTC from IEEE Xplore.  Restrictions apply. 
While it is possible to embed the mix network’s key
into a trace, the collateral keys of mix servers can cor-
respond to any agreed-upon public key. The holder of
a trace learns the collateral keys of the mix servers.
Knowledge of a collateral key provides irrefutable ev-
idence of a breach of privacy.
Second, it is meaningful to consider an adversary that ei-
ther inﬁltrates or silently coerces all mix servers. We
model the stealthiness of this attack with an adversary
who forces servers to write any selected information
on a tape, but can not provide interaction with other
servers. These practical constraints preclude an attack
where the servers use a general multi-party protocol
that (very inefﬁciently, and using lots of interaction)
computes and proves the validity of a given end-to-end
trace without revealing its intermediate steps or any se-
cret information.
Third, the privacy of our construction is stronger than the
secrecy of the collateral key. As will be clear from
our protocol, it is not possible to compute traces from
knowledge of the collateral information; however, the
converse is necessarily true.
Fourth, careful selection of collateral information also has
the ancillary beneﬁt of increased diligence. An ad-
ministrator may refuse cooperation with an adversary,
but nevertheless fall short of best-practice technique.
Rather than stonewall the existence of problems, the
administrator beneﬁts from proactive discovery of se-
curity threats.
We achieve our goals using a novel approach that we
name trace-deterring permutations. The key idea behind
our scheme is easily explained. We force mix servers to
choose their permutations only from one of two sets of per-
mutations. These sets are disjoint, and designed such that
any non-trivial trace between inputs and outputs automati-
cally reveals whether the permutation that produced the out-
puts from the inputs belongs to one set, or the other.
When presented with inputs, a mix server applies a per-
mutation chosen either from one set of permutations or from
the other. While the permutation is chosen uniformly at ran-
dom within a set, the set itself is determined based on one
bit of the server’s secret collateral key. Any trace causes
this bit to be leaked, since it automatically allows a veriﬁer
to learn which set the permutation was chosen from. Since
there is only one bit of collateral key associated with each
round of mixing, each server needs to perform a sequence
of trace-deterring permutations in order to represent mean-
ingful collateral keys.
The resulting Trace-Deterring (or TD) mixing protocol
thus forces a server’s permutation selection to correspond to
a collateral secret key. This is done by means of appropriate
commitments and proofs, which are both surprisingly sim-
ple. A single complete trace can be seen to reveal the secret
collateral key for every mix server along the trace’s path.
Organization. The rest of the paper is organized as fol-
lows. Section 2 reviews related work and its relation to our
new technique. Section 3 discusses our attack model and in-
troduces some necessary background on re-encryption mix
networks. Section 4 gives a high-level overview of our
trace-deterring (TD) techniques. Section 5 describes TD
permutations. Section 6 describes the commitment protocol
used by mix servers to commit to their collateral secret key.
Section 7 describes a single round of TD mixing. Finally,
section 8 presents the design of a complete TD mix net-
work, and analyzes the security property of our approach.
We conclude in section 9.
2 Related Work
Chaum ﬁrst formalized mixing [6], a cryptographic laun-
dering technique for preventing trafﬁc analysis of elec-
tronic mail, providing unlinkability between sender and re-
ceiver. In Chaum’s method, known as decryption mixing,
the sender submits a serially encrypted message which is
subsequently decrypted by the intermediate mix servers,
and forwarded in a different order than received. However,
decryption mixing cannot prevent the sender of a message
from observing the trace of her own message. This allows
an active attacker to insert a probe message to discover the
collateral secret attached to a trace. Therefore, our tech-
nique is not designed for decryption mix networks.
Re-encryption mixing [29, 1] achieves the property that
the intermediate messages are unrecognizable to all, includ-
ing their originators. For the ﬁrst stage of this scheme,
senders encrypt their messages once using a common public
key. Servers forward randomly re-encrypted messages. In
the second stage the mix servers collaboratively decrypt the
messages with their share of the secret key. Our deterrent
technique is based upon re-encryption mixing, and there-
fore does not make the collateral secret key vulnerable to an
active attacker.
Since they were ﬁrst proposed, mixes have been building
blocks in strong electronic election schemes [6, 16, 29, 32,
23]. In this context, robustness has parity with unlinkability.
Robustness primarily refers to systems in which each mix is
asked to provide a proof or strong evidence for its honest be-
havior. For example, Ogata et al. [28] use cut and choose
techniques to achieve robust mix-nets. Subsequent schemes
improve both the efﬁciency of zero knowledge proofs [21]
and attain universal veriﬁability [1, 2], i.e. veriﬁability by
third party observers. Other protocols employ layer redun-
dancy [12] and random partial checking [23] to achieve ro-
bustness.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:52:05 UTC from IEEE Xplore.  Restrictions apply. 
No mixing protocol prevents an administrator from log-
ging and later divulging input to output correspondences
performed by his machine. This form of voluntary disclo-
sure is an undetectable attack. So far, the only mitigation
is deterrence: a secret that is valuable to the owner or ad-
ministrator of a mix server is held as collateral. One such
approach, fragile mixing [31], constrains the choice of per-
mutations to those where knowledge of one input to output
correspondence reveals all remaining correspondences. As-
suming that administrators value the privacy of some mes-
sages in each batch, this method encourages them to uphold
the secrecy of all linkages.
Our trace-deterring technique has signiﬁcant advantages
over fragile mixing. We do not need the assumption that ev-
ery message batch contains some messages that are valuable
to mix administrators. Any secret key can be used as col-
lateral, which avoids the aforementioned secrecy-upholding
problem. Disclosure of a trace could be made publicly ver-
iﬁable, through the revelation of the collateral secret key.
Finally, our trace-deterring technique does not constrain the
permutation selection nearly to the same extent fragile mix-
ing does. As we shall see, our technique allows a mix server
to mix n inputs with a permutation chosen from a set of size
(n−1)!, versus a set of size n for fragile mixing. For a given
number of rounds of mixing, our technique thus offers bet-
ter privacy than fragile mixing.
Other research is also related to the voluntary disclosure
problem. For example, proprietary certiﬁcates [22, 4] ad-
dress the problem of certiﬁcate-lending to achieve unautho-
rized access. This scheme binds collateral information to
the private key of the proprietary certiﬁcate so that its divul-
gence punitively leaks the collateral information. Dwork,
Lotspiech, and Naor [13] introduced the concept of “self-
policing via sensitive information” with signets, a proposal
for preventing illegal redistribution of digital content. These
approaches are close to ours in spirit. They all hold some
collateral secret to deter a party from acting dishonestly.
Traces are not the only method for linking sender and re-
ceiver in a mix network. Statistical disclosure [11], intersec-
tion [24], and timing attacks [14, 25] correlate the senders
and receivers without determining traces. However, the col-
lateral secret key in our scheme will not be revealed if any
linkages are deduced in this manner.
Our work rests upon the correctness of several proofs of
knowledge and commitment schemes: equal discrete loga-
rithms [9], knowledge of discrete logarithm, veriﬁable shuf-
ﬂing [17, 26, 20], and splitting techniques from Pedersen’s
non-interactive secret sharing [30].
3 Preliminaries
3.1 Attack model
As is standard in the context of mix networks, we model
all players as polynomial-time Turing Machines with read
access to a public bulletin board. In addition, mix servers
also have appendive write access to the bulletin board. The
mix servers have a certiﬁed public key of some suitable
format.
In the case of decryption mixes (and many re-
encryption mixes), the servers also have access to the corre-
sponding secret key.
Corruption. A large number of different models have been
developed to describe adversarial behavior. In the context
of mix networks, it is commonly assumed that an adversary
may control and fully coordinate the actions of some set of
mix servers. This is referred to as corrupting the servers
in question. Corruption may take place at any time during
the lifetime of the mix network. It is always assumed that
the adversary cannot corrupt a quorum of mix servers. For
simplicity, the corruption is typically assumed to be static;
however, one could divide time into intervals and consider a
mobile adversary that may corrupt a different set of servers
(below a quorum) in each time interval. In this paper, we
make the standard assumption that the corrupting adversary
is static.
Coercion.
In addition to being able to corrupt any non-
quorum of servers, we also allow the adversary to coerce
any number of mix servers (possibly all servers). The coer-
cion may take place at any time during the lifetime of the
mix network. An adversary coerces a server by sending it a
coerce message, containing a description of what secret in-
formation it wants the coerced party to divulge. (This may
simply be all the secret information stored by the server in
question.) The victim of the coercion responds to the at-
tacker with the requested information; after that, no further
interaction arising from the coercion is allowed. Thus, this
restriction disallows interaction between servers as part of
the coercion (apart from allowing coerce messages to be
functions of responses to previous coerce messages.) This
models an insider attack in which information can be stolen,
but protocols cannot be replaced. This is a realistic assump-
tion in all protocols where there may be some public audit
of communication between legal protocol participants (as is
afforded by the use of a bulletin board) and in which the
attacker has temporary read access to some secret storage
area, whether the corresponding coerced server is aware of
this or not. To the best of our knowledge, this model of
coercive behavior is novel.
Proceedings of the 2006 IEEE Symposium on Security and Privacy (S&P’06) 
1081-6011/06 $20.00 © 2006 IEEE 
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 02:52:05 UTC from IEEE Xplore.  Restrictions apply. 
3.2 ElGamal Encryption
Let g be a generator of Gq, a multiplicative subgroup
of order q where the Decisional Difﬁe-Hellman problem is
∗
q, de-
hard. The secret key, x, is chosen at random from Z
noted x R← Z