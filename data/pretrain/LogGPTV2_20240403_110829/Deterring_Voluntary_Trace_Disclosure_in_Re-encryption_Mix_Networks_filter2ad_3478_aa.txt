# Deterring Voluntary Trace Disclosure in Re-encryption Mix Networks

## Authors
- **Philippe Golle**  
  PARC  
  Email: [EMAIL]
- **XiaoFeng Wang**  
  Indiana University  
  Email: [EMAIL]
- **Markus Jakobsson**  
  Indiana University  
  Email: [EMAIL]
- **Alex Tsow**  
  Indiana University  
  Email: [EMAIL]

## Abstract
A significant threat to the privacy provided by mix networks is the voluntary disclosure of partial tracing information by individual mix administrators. While this threat cannot be entirely eliminated—coerced mix servers could be forced to reveal all their secret data—we can deter administrators from succumbing to coercive attacks by raising the stakes. We introduce the concept of a trace-deterring mix permutation, which ensures that any end-to-end trace from input to output elements will automatically reveal a collateral key (used for an arbitrary purpose). However, no keying material is revealed to a party who merely knows the correspondence between input and output elements. Our techniques are efficient enough for deployment in large-scale elections, providing a publicly verifiable privacy guarantee. The impact on the size of the anonymity set, while quantifiable, is not of practical concern.

## 1. Introduction
Mix servers transform a set of input elements into a permuted set of output elements. The use of probabilistic encryption methods for generating input elements makes it infeasible to correlate inputs and outputs as long as at least one mix server involved is honest and refuses to reveal its input-to-output correspondences.

Recently, voluntary selective disclosure of mix traffic has been recognized as an emerging threat. In such scenarios, an attacker secures cooperation through social coercion (e.g., bribery) of a mix server administrator, obtaining information about selected input-output correspondences, referred to as a trace. A trace is only meaningful if it is performed for the same elements through each step of the mix network, known as an end-to-end trace. For simplicity, we assume that a trace simply reports a relationship without any evidence.

Traces vary in the amount of information they leak about the correspondence between inputs and outputs. The strongest possible trace discloses the individual correspondence between one input and one output, or several such correspondences. Weaker traces may expose only the global correspondence between a subset of the inputs and a subset of the outputs, without revealing the individual correspondences within the subset. All traces, except the trivial global correspondence between the set of all inputs and all outputs, are undesirable as they compromise the privacy of the mix server to some degree.

In this paper, we address the problem of voluntary disclosure of traces. Our approach is to discourage coercion by ensuring the immediate disclosure of some collateral information of each server that collaborates in providing a trace. This collateral information may be the secret mix key of the server, making it impossible to perform partial traces since all correspondences will be revealed as soon as one is. Alternatively, the collateral key may be of another form, including a key whose disclosure provides publicly verifiable evidence of the server’s breach of privacy. This approach is particularly suitable for applications like electronic elections.

We emphasize the following important properties of our technique for deterring voluntary trace disclosures in re-encryption mix networks:

1. **Privacy Preservation**: Exposure of a trace does not link other voters to their ballots, unlike previous coercion deterrent schemes.
2. **Collateral Key Security**: The collateral keys of mix servers can correspond to any agreed-upon public key. Knowledge of a collateral key provides irrefutable evidence of a breach of privacy.
3. **Adversary Model**: We consider an adversary that either infiltrates or silently coerces all mix servers. Practical constraints preclude an attack where servers use a general multi-party protocol to compute and prove the validity of a given end-to-end trace without revealing intermediate steps or any secret information.
4. **Strong Privacy**: The privacy of our construction is stronger than the secrecy of the collateral key. It is not possible to compute traces from knowledge of the collateral information, but the converse is necessarily true.
5. **Increased Diligence**: Careful selection of collateral information also increases diligence. An administrator benefits from proactive discovery of security threats rather than stonewalling the existence of problems.

We achieve our goals using a novel approach called trace-deterring permutations. The key idea is to force mix servers to choose their permutations from one of two disjoint sets, designed such that any non-trivial trace between inputs and outputs automatically reveals which set the permutation was chosen from. When presented with inputs, a mix server applies a permutation chosen from one set or the other. The set is determined based on one bit of the server’s secret collateral key. Any trace causes this bit to be leaked, allowing a verifier to learn which set the permutation was chosen from. Since there is only one bit of collateral key associated with each round of mixing, each server needs to perform a sequence of trace-deterring permutations to represent meaningful collateral keys.

The resulting Trace-Deterring (TD) mixing protocol forces a server’s permutation selection to correspond to a collateral secret key. This is done through appropriate commitments and proofs, which are surprisingly simple. A single complete trace can reveal the secret collateral key for every mix server along the trace’s path.

### Organization
- **Section 2**: Reviews related work and its relation to our new technique.
- **Section 3**: Discusses our attack model and introduces necessary background on re-encryption mix networks.
- **Section 4**: Provides a high-level overview of our trace-deterring (TD) techniques.
- **Section 5**: Describes TD permutations.
- **Section 6**: Describes the commitment protocol used by mix servers to commit to their collateral secret key.
- **Section 7**: Describes a single round of TD mixing.
- **Section 8**: Presents the design of a complete TD mix network and analyzes the security properties of our approach.
- **Section 9**: Concludes the paper.

## 2. Related Work
Chaum first formalized mixing, a cryptographic laundering technique for preventing traffic analysis of electronic mail, providing unlinkability between sender and receiver. In Chaum’s method, known as decryption mixing, the sender submits a serially encrypted message, which is subsequently decrypted by intermediate mix servers and forwarded in a different order. However, decryption mixing cannot prevent the sender from observing the trace of their own message, allowing an active attacker to insert a probe message to discover the collateral secret attached to a trace. Therefore, our technique is not designed for decryption mix networks.

Re-encryption mixing achieves the property that intermediate messages are unrecognizable to all, including their originators. For the first stage, senders encrypt their messages once using a common public key. Servers forward randomly re-encrypted messages. In the second stage, the mix servers collaboratively decrypt the messages with their share of the secret key. Our deterrent technique is based on re-encryption mixing, making the collateral secret key less vulnerable to an active attacker.

Since they were first proposed, mixes have been building blocks in strong electronic election schemes. In this context, robustness has parity with unlinkability. Robustness primarily refers to systems in which each mix is asked to provide a proof or strong evidence for its honest behavior. For example, Ogata et al. use cut and choose techniques to achieve robust mix-nets. Subsequent schemes improve the efficiency of zero-knowledge proofs and attain universal verifiability, i.e., verifiability by third-party observers. Other protocols employ layer redundancy and random partial checking to achieve robustness.

No mixing protocol prevents an administrator from logging and later divulging input-to-output correspondences performed by their machine. This form of voluntary disclosure is an undetectable attack. So far, the only mitigation is deterrence: holding a valuable secret as collateral. One such approach, fragile mixing, constrains the choice of permutations to those where knowledge of one input-to-output correspondence reveals all remaining correspondences. Assuming that administrators value the privacy of some messages in each batch, this method encourages them to uphold the secrecy of all linkages.

Our trace-deterring technique has significant advantages over fragile mixing. We do not need the assumption that every message batch contains some messages that are valuable to mix administrators. Any secret key can be used as collateral, avoiding the secrecy-upholding problem. Disclosure of a trace can be made publicly verifiable through the revelation of the collateral secret key. Finally, our technique allows a mix server to mix n inputs with a permutation chosen from a set of size (n-1)!, versus a set of size n for fragile mixing. For a given number of rounds of mixing, our technique offers better privacy than fragile mixing.

Other research related to the voluntary disclosure problem includes proprietary certificates, which bind collateral information to the private key of the certificate so that its divulgence punitively leaks the collateral information. Dwork, Lotspiech, and Naor introduced the concept of “self-policing via sensitive information” with signets, a proposal for preventing illegal redistribution of digital content. These approaches hold some collateral secret to deter a party from acting dishonestly.

Traces are not the only method for linking sender and receiver in a mix network. Statistical disclosure, intersection, and timing attacks can correlate senders and receivers without determining traces. However, the collateral secret key in our scheme will not be revealed if any linkages are deduced in this manner.

Our work relies on the correctness of several proofs of knowledge and commitment schemes, including equal discrete logarithms, knowledge of discrete logarithm, verifiable shuffling, and splitting techniques from Pedersen’s non-interactive secret sharing.

## 3. Preliminaries

### 3.1 Attack Model
As standard in the context of mix networks, we model all players as polynomial-time Turing Machines with read access to a public bulletin board. Mix servers also have append-only write access to the bulletin board and a certified public key of a suitable format. In the case of decryption mixes (and many re-encryption mixes), the servers also have access to the corresponding secret key.

#### Corruption
A large number of models have been developed to describe adversarial behavior. In the context of mix networks, it is commonly assumed that an adversary may control and fully coordinate the actions of some set of mix servers, referred to as corrupting the servers. Corruption may occur at any time during the lifetime of the mix network. It is always assumed that the adversary cannot corrupt a quorum of mix servers. For simplicity, corruption is typically assumed to be static, though a mobile adversary that may corrupt a different set of servers (below a quorum) in each time interval can be considered. In this paper, we make the standard assumption that the corrupting adversary is static.

#### Coercion
In addition to being able to corrupt any non-quorum of servers, we allow the adversary to coerce any number of mix servers (possibly all servers). Coercion may take place at any time during the lifetime of the mix network. An adversary coerces a server by sending it a coerce message, containing a description of what secret information it wants the coerced party to divulge. The victim responds with the requested information; no further interaction arising from the coercion is allowed. This restriction disallows interaction between servers as part of the coercion, modeling an insider attack where information can be stolen, but protocols cannot be replaced. This is a realistic assumption in protocols where there may be some public audit of communication between legal participants and where the attacker has temporary read access to some secret storage area, whether the coerced server is aware of this or not. To the best of our knowledge, this model of coercive behavior is novel.

### 3.2 ElGamal Encryption
Let \( g \) be a generator of \( G_q \), a multiplicative subgroup of order \( q \) where the Decisional Diffie-Hellman problem is hard. The secret key, \( x \), is chosen at random from \( \mathbb{Z}_q^* \), denoted \( x \xleftarrow{\$} \mathbb{Z}_q^* \).

---

This revised version aims to enhance clarity, coherence, and professionalism, making the text more accessible and engaging for the reader.