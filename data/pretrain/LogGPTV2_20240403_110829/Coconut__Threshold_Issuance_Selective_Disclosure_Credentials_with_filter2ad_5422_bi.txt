run in a few milliseconds. These transactions are independent
of the number of authorities as issuance is either handled off-
chain or by the Coconut smart contract library.
C. Ethereum Implementation
We evaluate the Coconut Ethereum smart contract library
described in Section IV-B using the Go implementation of
Ethereum on an Intel Core i5 laptop with 12GB of RAM
running Ubuntu 17.10. Table VI shows the execution times
and gas costs for different procedures in the smart contract.
The execution times for Create and Verify are higher than
the execution times for the Chainspace version (Table III) of
the library, due to the different implementations. The arith-
metic underlying Coconut in Chainspace is performed through
Privacy-preserving e-petition
Operation
InitPetition [g]
InitPetition [c]
SignPetition [g]
SignPetition [c]
µ [ms]
3.260
3.677
7.999
15.801
√σ2 [ms]
± 0.209
± 0.126
± 0.467
± 0.537
size [kB]
∼ 1.50
∼ 3.16
-
-
TABLE V: Timing and transaction size of the Chainspace implementation
of the privacy-preserving e-petition smart contract (described in Section V-B),
measured over 10,000 runs. The transactions are independent of the number