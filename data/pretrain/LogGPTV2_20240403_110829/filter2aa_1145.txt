HITCON 2019 - Ta-Lun Yen (es)
1
Trust in Apple’s secret garden: 
Exploring & Reversing Apple’s Continuity 
Protocol
HITCON 2019 - Ta-Lun Yen (es)
2
Outline
● Motivation
● Introduction to Continuity Protocol
● iCloud, APNS, iMessage
● Continuity
– Previous Research
– Software Stack
– Protocol
● Remarks
HITCON 2019 - Ta-Lun Yen (es)
3
About me
● Working as DevOps + Fullstack
● Independent Security Research
● Tinkering / Hacking devices or new things
● “Security in communication process”
HITCON 2019 - Ta-Lun Yen (es)
4
Motivation
● Study on how Apple actually implements security
● Shed light into Apple’s secret garden
● Make iOS device more usable on non-macOS device
HITCON 2019 - Ta-Lun Yen (es)
5
Motivation
● Responsible disclosure? Bug bounty?
– No apparent vulnerability found yet
– No bug bounty for such domain
HITCON 2019 - Ta-Lun Yen (es)
6
Continuity
HITCON 2019 - Ta-Lun Yen (es)
7
Continuity
● “Move seamlessly between your devices with Handoff, 
Universal Clipboard, iPhone Cellular Calls, SMS/MMS 
messaging, Instant Hotspot, Continuity Camera, 
AirDrop, Apple Pay, and Auto Unlock.”
● Heavily relies on BLE and iMessage / iCloud
● Most things won’t work without Bluetooth
HITCON 2019 - Ta-Lun Yen (es)
8
Why Continuity
● Instant Hotspot (macOS + iOS)
– Open Wi-Fi menu
– Wait for device to appear
– Click on device’s name
● Not-so-Instant Hotspot (!macOS + iOS)
– Grab your phone & enable hotspot
– Scan for Wi-Fi stations
– It usually works, but sometimes it won’t 
● New association only when Hotspot page is active 
HITCON 2019 - Ta-Lun Yen (es)
9
Contuniuty
● “...Continuity takes advantage of technologies like 
iCloud…”
● “...encryption of the individual messages, which is 
similar to how iMessage is encrypted...”
HITCON 2019 - Ta-Lun Yen (es)
10
iCloud, APNs, IDS, iMessage
HITCON 2019 - Ta-Lun Yen (es)
11
iCloud
● Debuted around end of 2011
● Est. 850M users
● Multiple Services
– Backup, Device Locater, Messaging
● Push Service (APNS)
HITCON 2019 - Ta-Lun Yen (es)
12
APNs
● Apple Push Notification Service
● Device ID
– APNs address (deviceToken), per device
● Public-Key Cryptography + TLS 
HITCON 2019 - Ta-Lun Yen (es)
13
iMessage
● Proprietary Messaging Service
● Supports text & attachments
● End-to-End encryption
● Continuity message are encrypted similar to iMessage
HITCON 2019 - Ta-Lun Yen (es)
14
identityservicesd (IDS)
● Directory Service
– iMessage keys
● Links with iCloud 
– Able to grab any other device’s public key from iCloud, 
with corresponding phone # or email
HITCON 2019 - Ta-Lun Yen (es)
15
iMessage “onboarding”
● Keys are generated
– RSA + ECDSA 
● Public key will be send to iCloud
– Associated with (phone # / email) + APNs address
– Private key never leaves device
● Easily accessible with Keychain
HITCON 2019 - Ta-Lun Yen (es)
16
Sending with iMessage
● Generates message bplist
● Concats
– Target public key + aes(bplist) + session key 
● Encrypts AES key with RSA public key
● Appends ECDSA-SHA1 to the end
HITCON 2019 - Ta-Lun Yen (es)
17
iMessage Attachment Mode
● >4KB or >16KB payload, or attachment
– Depends on iOS version
● Content encrypted with AES-CTR (256b)
● Sends URI and content’s SHA-1 instead
HITCON 2019 - Ta-Lun Yen (es)
18
Continuity
HITCON 2019 - Ta-Lun Yen (es)
19
● Incoming Call
– Bootstrapping
● iPhone (TCP) → APNs → Local Mac/iPad
– Call
● iPhone (UDP) → Local Mac/iPad
– Ring is terminated with BLE when answered
Cellular Call Relay
HITCON 2019 - Ta-Lun Yen (es)
20
Cellular Call Relay
● iPad / Mac must be on the same Wi-Fi network as 
phone
● Receive/Make cellular calls using iPad / Mac
● Relies on APNs to work
● “Upon answering the call, the audio is seamlessly 
transmitted from the user’s iPhone using a secure 
peer-to-peer connection between the two devices.”
HITCON 2019 - Ta-Lun Yen (es)
21
● Call is terminated via APNs
– Local Mac/iPad → APNs → iPhone
– iPhone terminated call
● Martin Vigo: DIY Spy Program: Abusing Apple’s Call 
Relay Protocol 
– DoS, Spying, impersonation
Cellular Call Relay
HITCON 2019 - Ta-Lun Yen (es)
22
AirDrop
● Based on BLE & AWDL (Apple Wireless Direct Link)
– “Apple-created peer-to-peer Wi-Fi technology”
● Bootstrapping using BLE
– Detect devices nearby (broadcast)
– Set up transfer
● Milan Stute et, al. 2018. One Billion Apples’ Secret Sauce: 
Recipe for the Apple Wireless Direct Link Ad hoc Protocol
HITCON 2019 - Ta-Lun Yen (es)
23
● Module hooks with sharingd
– Calls method upon message received
● Host → bluetoothd → sharingd → Target module
Continuity Stack
HITCON 2019 - Ta-Lun Yen (es)
24
Flow
● Messages are encrypted-then-signed
● Message received via HCI
● Passed on to sharingd
● sharingd → IDS → MessageProtection 
→ sharingd → target service
HITCON 2019 - Ta-Lun Yen (es)
25
● Device decides to connect to hotspot
● Connects to device and uses GATT to exchange 
connection info
– SSID / PSK included
● Device sends Probe Request
– Hotspot sends Probe Response & Beacon
● Device establishes Wi-Fi connection with hotspot 
Flow (Instant Hotspot)
HITCON 2019 - Ta-Lun Yen (es)
26
Continuity Broadcast Protocol
● Device sends broadcast continuously
– MAC
– Type ID
– Payload
● Always on CH37
HITCON 2019 - Ta-Lun Yen (es)
27
Broadcast Sender Validation
● None
● Broadcast using private address
– Uses VSC to translates private address to public
– Change on each power cycle
HITCON 2019 - Ta-Lun Yen (es)
28
Continuity BLE Broadcast Protocol
HITCON 2019 - Ta-Lun Yen (es)
29
HITCON 2019 - Ta-Lun Yen (es)
30
Continuity BLE Broadcast Type ID
Additional Tools for Xcode = 11 
● Nearby: iOS >= 10
HITCON 2019 - Ta-Lun Yen (es)
36
Attributes
● Instant Hotspot
– Battery Life
– Cell Service Type
– Cell Quality
HITCON 2019 - Ta-Lun Yen (es)
37
Activity
● Handoff
– Broadcasts when applicable, e.g. Firefox open & 
Foreground
● Instant Hotspot
– Handshake only occurs when device in proximity
● Nearby
– Always broadcasting
HITCON 2019 - Ta-Lun Yen (es)
38
Identity
● Instant Hotspot
– Wi-Fi connection is made with public MAC
● Contextual Analysis
– Wi-Fi connection after Continuity message
● Wi-Fi MAC + 1 = Bluetooth MAC
HITCON 2019 - Ta-Lun Yen (es)
39
Spoofing
● ubertooth-btle faux slave mode
● Needs sender/receiver public MAC
HITCON 2019 - Ta-Lun Yen (es)
40
Continuity Protocol
lldb
HITCON 2019 - Ta-Lun Yen (es)
41
Verify / Decryption
● Every connection is associated with a UUID
● If UUID is added before, don’t fetch public key again
HITCON 2019 - Ta-Lun Yen (es)
42
Accidently broke IDS
● I deleted “iMessage ____ Key” in keychain
● Fixed by rebooting phone & mac
● Hypothesis: Keys are downloaded & uploaded / 
regenerated on iMessage login
HITCON 2019 - Ta-Lun Yen (es)
43
● If public key is not found, returns false
● Checks SHA1 of message with existing caches
● Calls verification & decryption
– MessageProtection
– SecMPVerifyAndExposeMessage
Verify / Decryption
HITCON 2019 - Ta-Lun Yen (es)
44
Malleability
HITCON 2019 - Ta-Lun Yen (es)
45
Malleability
● Messages are only signed 
– No MAC
● Replay was allowed
● Certificate Pinning wasn’t implemented
● Message is Compressed-then-Encrypted
– Compression Oracle
HITCON 2019 - Ta-Lun Yen (es)
46
SecMPVerifyAndExposeMessage
● SecMPVerifyMessageContents(payload)
– sizeof(payload) > 0x11
● Here lies raw payload from HCI 
– Calls SecKeyDigestAndVerifyWithError to verify against it
● Signing is made against SHA-1 digest of payload
– If passed, actual decryption is called
HITCON 2019 - Ta-Lun Yen (es)
47
Message Verification & Decryption
● Relies on Security.framework
● Security Transforms
– SecVerifyTransformCreate
– SecDecryptTransformCreate
HITCON 2019 - Ta-Lun Yen (es)
48
Data Structure
● HCI payload
– Data can be split into multiple packets
– 0x27-0x28 mentions payload length
– 0x28-end is the payload + signature
– Some kind of “header” before length (0x03-0x27)
● If not exists, packet is continuation of previous one
– Total length – payload length = Signature length
HITCON 2019 - Ta-Lun Yen (es)
49
Actual Decryption
● First Stage: RSA-OAEP of first 160 bytes
● Second Stage
– rsa_decrypt(data)[:16] → AES-128 CTR Key, PK = 1
– aes_decrypt(rsa_decrypt(data)[16:] + raw_data[160:])
● Third Stage
– Gzipped bplist
HITCON 2019 - Ta-Lun Yen (es)
50
HITCON 2019 - Ta-Lun Yen (es)
51
HITCON 2019 - Ta-Lun Yen (es)
52
bplist00
● Apple Binary Plist
HITCON 2019 - Ta-Lun Yen (es)
53
evanslify/continuity
● https://github.com/evanslify/continuity
● Other features would be added along the way
HITCON 2019 - Ta-Lun Yen (es)
54
Remarks
● Blindly trusting a device is dangerous
– Especially closed-sourced
● Moar encryption can be used
– Encryption in broadcast, backed with IDS?
● No blatant exploit found