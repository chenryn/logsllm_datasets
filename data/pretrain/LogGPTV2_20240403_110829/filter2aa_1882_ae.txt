o Recover keys from RAM 
• 
Insecure Serial Console (with no authentication) 
• 
JTAG Access/Debugging 
Common Cracking Tools 
• 
Hashcat 
o Windows 
o Linux 
• 
John The Ripper (John) 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 54 
Attacking Applications and Web Applications 
Common Protocols & Languages 
• 
HTTP 
• 
HTTPS 
• 
HTML 
• 
Javascript 
• 
SQL Databases 
• 
Frameworks 
o Node.js 
o Angular 
o Django 
• 
Python 
• 
ASP/ASP.NET 
• 
PHP 
Common Web Application Vulnerabilities 
• 
Weak security configurations (misconfigurations) 
• 
INJECTION 
• 
Broken Authentication 
• 
XSS 
• 
CSRF 
• 
Clickjacking 
• 
File inclusion 
• 
Weak coding practises 
Common Misconfigurations 
• 
Rolling your own encryption 
• 
Legacy content 
• 
Debugging Modes Enabled 
• 
Unpatched Vulnerabilities/Using software with known vulnerabilities 
• 
Client-side processing 
• 
Default admin accounts 
• 
Insecure cookies 
• 
Directory Traversal 
o Read or execute 
o E.g. ../../../etc/passwd 
o E.g. %2E%2E%2F/Windows/System32/cmd.exe 
o Double Encoding 
▪ 
%25 = % 
• 
%25E%25E%25FWindows/System32/cmd.exe 
• 
Null byte encoding %00 
• 
E.g. index.php?file=../../etc/passwd%00 
o Test using 
▪ 
BURP 
▪ 
OWASP ZAP 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 55 
LAB Tasks 
• 
Test out BURP 
• 
Test out OWASP ZAP 
• 
Try manual identification of a path traversal 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 56 
Common Web Application Attacks 
Authentication & Authorisation Attacks 
• 
Brute Force 
• 
Credential Stuffing 
• 
Weak Passwords 
• 
Session Hijacking 
• 
MiTM 
• 
XSS Cookie Theft 
• 
Bypass Authentication 
• 
Redirection Attack 
• 
ReturnURL attack (asp.net) 
• 
HTTP Parameter Pollution (HPP) 
• 
IDOR 
Injection Attacks 
• 
Command Injection 
• 
SQLi 
o Test using “’” in a form POST/GET request 
o Logic injection: “’ or 1=1--; 
HTML Injection 
Inject HTML code e.g. inject links inject or embedded forms (e.g. clickjacking) into areas such as 
forums etc. 
Cross Site Scripting (XSS) 
There are a few types of XSS: 
• 
Stored (persistent) 
• 
Reflected (reflects then executes) 
• 
Blind 
• 
DOM-based 
An example of XSS = alert(‘This site is vulnerable to XSS!’); 
Cross Site Request Forgery (XSRF) 
Getting a user to interact with a URL against another site e.g. user visits phishing site, they click on a 
link to the benign site, but an unwanted action occurs. E.g. adding extra quantities of items to a 
shopping basket. 
Clickjacking 
Setting up an iframe on a malicious site to embed content to masquerade as a site. Can be used with 
phishing or social engineering. 
Other Vulnerabilities/Exploits 
• 
File Inclusions 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 57 
• 
Local File Inclusion 
• 
Remote File Inclusion 
• 
Insecure Direct Object Reference (IDOR) 
• 
Logic Errors 
• 
Timing Issues (Race Conditions) 
• 
No Error handling 
• 
Insecure Functions 
• 
Insecure APIs 
• 
Insecure Credential Storage/Transmission 
• 
Sensitive Information Disclosure 
Lab Work 
• 
Learn to use SQLMAP 
• 
Run SQLMAP through BURP to understand how it works 
• 
Run a manual authentication bypass using SQL injection 
• 
Test manual exploitation using union selects 
• 
Test path traversal to read /etc/passwd 
• 
Demonstrate a self-reflected XSS alert 
• 
Demonstrate a stored XSS alert 
• 
Demonstrate using a stored XSS using BEEF 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 58 
Source Code analysis and Compiled Apps 
Static Code Analysis 
Source code review while it’s not executing 
• 
Manual Source Code Review 
• 
Tool based review (SAST – Static Analysis Security Testing) 
Dynamic Code Analysis 
• 
Dynamic (DAST) 
Fuzzing 
Fault injection. Random data is sent to the apps looking for crashes or unexpected responses. 
Reverse Engineering 
• 
Debugging 
o Immunity 
o Ghidra 
o WinDbg 
o OllyDbg 
o GDB 
o IDA/IDA Pro 
• 
Decompiling 
o Reverse the compiled binary and converting it to source code 
▪ 
Hex-Rays IDA 
▪ 
VB Decompile 
▪ 
Delphi Decompiler 
▪ 
CFF Explorer 
▪ 
JetBrains DotPeek 
• 
Disassembly 
o Translating machine code into Assembly Code 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 59 
Post Exploitation 
Enumeration 
Once you have access to a target you will continue to enumerate (recon). 
Lateral Movement 
Pivoting 
• 
NetCAT 
o Bind 
o Reverse Shells 
• 
SSH 
o SSHKeys 
o AuthorizedHosts 
• 
VPN 
• 
Routing Tables 
• 
Metasploit Forwarder 
Maintaining Persistence 
• 
Create a backdoor account 
• 
Create a service/daemon 
• 
Backdoors 
• 
VPNs 
• 
Scheduled Tasks/Cron Jobs 
• 
Login scripts, Login Tasks, Start-up Tasks etc. 
• 
Rootkits 
o Firmware 
o Kernel 
o Filter Drivers 
• 
Implants 
Evading Security Solutions & Anti-Forensics 
• 
Buffer Overflows 
• 
Memory Resident Malware 
• 
Packing 
• 
Virtual Machine Detection 
• 
Clearing Logs 
o Whole Log 
o Specific Log 
• 
Shredding Files 
• 
File Metadata Tampering 
• 
Log Tampering 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 60 
Penetration Test Reporting 
Key Areas 
• 
Categorisation 
• 
Prioritisation 
• 
Recommendations 
Report Format 
• 
Executive Summary 
• 
Technical Findings 
• 
Recommendations 
Considerations 
• 
People 
• 
Process 
• 
Technology 
• 
Customer Business Context 
• 
Customer Industry 
Prioritising Findings 
• 
Likelihood 
• 
Impact 
• 
CVSS Score etc. 
Authentication Recommendations 
• 
Don’t hardcode credentials in apps 
• 
Random SALT and HASH Passwords 
• 
Use strong encryption, avoid weak hashes 
• 
User secure transport e.g. do NOT use FTP, use FTPS/SFTP 
• 
Don’t use protocols that use weak ciphers 
• 
Avoid configurations that allow for downgrade attacks 
• 
Monitor unencrypted traffic 
Authentication Recommendations 
• 
Use Multi-factor-authentication 
o Something you know 
o Something you have 
o Something you are 
• 
Smart Cards, Smart Phone Apps, Key fobs (Like Yukikey), OTP keys (RSA) 
Input and Output Sanitisation 
• 
Escape characters/Encoding to stop HTML being rendered 
o E.g. htmlspecialchars() function of PHP 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 61 
o HTML Sanitizers (Libraries) 
▪ 
Java HTML 
▪ 
.NET HTML Sanitizer 
▪ 
HTML purifier 
▪ 
SanitizeHelper for RUBY on Rails 
o Convert HTML to mardown 
o Prevent NULL Byte by removing the input manually (for older browsers) 
Parametrisation of Queries (Declared Statements) 
• 
More effective at preventing SQLi 
o Means the parameters are send to a pre-defined template 
Hardware and Software Hardening 
Consider: 
• 
Environment 
• 
Hardware 
• 
Software 
Look at industry standards such as: 
• 
CIS Controls 
• 
ISO 
• 
NIST 
• 
SANS 
Hardening Measures 
• 
Check with the vendor 
• 
Look at EAL/Common Criteria (Real world) 
• 
Ensure firmware and software are updated with updates from the vendor 
• 
Physical and/or network segmentation 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 62 
Mobile Device Management (MDM) 
• 
Centralised Device and App Management 
• 
Similar systems (MAM) 
• 
Centrally deploy policies 
MDM Features 
• 
PUSH OS, apps and firmware updates 
• 
Enrol and authenticate devices 
• 
Enforce Policies 
• 
Locate Devices 
• 
Deploy based on user profiles 
• 
Remote Wipe/Remote Lock 
• 
Send out PUSH notification 
• 
Remote Access 
• 
Deploy Containers 
• 
Encryption Control 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 63 
Secure Software Development 
• 
Should follow SDLC (Secure Software Development Lifecycle) which incorporates security 
throughout the entire lifecycle 
Testing 
• 
Penetration Testing 
• 
Static Code Analysis 
• 
Fuzzing 
• 
Static Code Analysis 
• 
Vulnerability Management 
• 
Dependency Management 
SDLC should be: 
• 
Clear and simple 
• 
Useful and Informative 
• 
East to incorporate 
• 
Extensible 
• 
Have as fewer dependencies as possible 
• 
Be concise 
• 
Use well-known and established techniques 
• 
Integrates with testing processes and harnesses 
• 
Aligns with business and design requirements 
Planning
Analysis
Testing
Design
Implementation
Maintenance
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 64 
Post-Report Delivery Actions 
• 
Data Normalization 
o Format 
o Structure 
o Language 
o Metrics and Measures 
o Risk Ratings 
▪ 
Impact x Likelihood 
• 
Report Structure 
o Exec Summary 
o Version Control 
o Document Distribution 
o Method 
o Findings 
o Conclusion 
▪ 
Successes 
▪ 
Failures 
▪ 
Goal Assessment 
o Supporting Evidence 
• 
Risk Appetite 
o How hungry are the customer for accepting risk/residual risk? 
▪ 
Compare risk of findings vs risk appetite/tolerance levels 
o How much loss can be accepted? 
o What are acceptable levels of availability/loss of availability? 
• 
Report Storage 
o Encrypt at Rest 
o Encrypt in Transit 
o Access Control for authorised personnel only 
o Store for a specific limited amount of time 
• 
Report Handling 
o Destruction 
• 
Report Disposition 
o Formal process of transferring the report to the customer and they then become 
responsible for it 
o Sign off by the authorised recipient 
• 
Post Engagement Clean up Tasks 
o Removal of Access/Credentials 
o Removal of Tools 
• 
Acceptance 
• 
Attestation of Findings 
• 
Lessons Learned 
• 
Follow Up Actions 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 65 
Useful Exam Theory Links 
Microsoft Threat Modelling 
Step 1. Identify Assets 
Step 2. Create an Architecture Overview 
Step 3. Decompose the Application 
Step 4. Identify the Threats 
Step 5. Document the Threats 
Step 6. Rate the Threats 
https://docs.microsoft.com/en-us/previous-versions/msp-n-
p/ff648644(v=pandp.10)?redirectedfrom=MSDN 
IEEE 802.11 Wireless Standard 
https://en.wikipedia.org/wiki/IEEE_802.11 
Random Stuff 
C2 Frameworks 
• 
Covenant 
• 
C2 
• 
Cobalt Strike (Commercial) 
• 
Metasploit Pro 
• 
Core Impact 
• 
SharpC2 
DNS Tunnelling 
https://tools.kali.org/maintaining-access/dns2tcp 
https://code.kryo.se/iodine/ 
https://github.com/iagox86/dnscat2 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 66 
External Resources 
The Cyber Mentor Courses on Udemy 
https://www.thecybermentor.com/ 
https://twitter.com/thecybermentor 
HackTheBox 
https://www.hackthebox.eu/ 
TryHackMe 
https://tryhackme.com/ 
Pluralsight 
http://pluralsight.com 
Penetration Testing 
PUBLIC – Version 0.3 
Copyright Xservus Limited 
Page 67 
Proctored Online Exam Details 
https://home.pearsonvue.com/Documents/Technical-specifications/Online-Proctored/OP-
Advanced.aspx 
Online Practise Questions - Free 
https://searchsecurity.techtarget.com/quiz/CompTIA-PenTest-practice-test-questions-to-assess-
your-knowledge 
Ordering Exam Vouchers 
Vouchers Resellers 
http://www.gracetechsolutions.com/ 
Windows Vulnerabilities 
https://www.cvedetails.com/product/32238/Microsoft-Windows-10.html?vendor_id=26 
https://www.cvedetails.com/product/739/Microsoft-Windows-Xp.html?vendor_id=26 
OS X 
https://www.cvedetails.com/product/156/Apple-Mac-Os-X.html?vendor_id=49 
Resources & Useful Links 
UAC Bypasses 
https://medium.com/@z3roTrust/bypassing-windows-user-account-control-back-for-more-
dd5672c48600