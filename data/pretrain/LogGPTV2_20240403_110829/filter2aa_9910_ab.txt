>>> len("Bang, zoom, straight to the moon!")
33
```
We see that each 2nd-level array probably represents a letter, since the number of letters in the plaintext is equal to the number of 2nd-level arrays. We also see that the internal arrays are composed of zeros and ones.
Let's try to view the first signal in a more compact way for easier analysis:
```python
import json
def analyze(file_name):
    with open(file_name) as f:
        j = json.loads(f.read())
        for letter, arr in zip("Bang, zoom, straight to the moon!", j):
            values = []
            for a in arr:
                if len(a) > 0:
                    byte = "".join([str(x) for x in a])
                    values.append(byte)
            print ("{} ({}):\t{}".format(letter, format(ord(letter), 'b').zfill(8), values))
analyze("first_signal.txt")
```
Output:
```
B (01000010):   ['000010', '01', '00000', '0100', '1000', '00001', '10000', '10001', '00001', '010001', '0010', '00010', '100001', '000010']
a (01100001):   ['0001', '11000', '110001', '000', '011001', '11001', '01001', '10001', '010001', '01001', '11']
n (01101110):   ['111', '011110', '01111', '011011', '010110', '01010', '0110', '011110', '111110', '01110', '01010', '01110', '11011', '01011', '011', '011010', '1011', '111110', '01101', '10111']
g (01100111):   ['01111', '01101', '0', '010111', '0011', '01011', '010011', '011001', '01111', '01011', '01', '010011', '11011', '1101', '010111', '01011', '0101', '00011', '11011', '101', '0111', '11011', '00111', '100111', '01011', '0101', '0101']
, (00101100):   ['0110', '0100', '00110', '011100', '00101', '011', '1100', '000110', '00100', '011100', '0010', '1010', '001010', '10100', '00110', '010', '000100', '000', '010110', '010110', '000110', '101100', '001010']     
  (00100000):   ['00000', '01000', '01000', '00100', '001000', '0000', '0000', '00100', '100', '00000', '000', '00000', '01000', '0000', '01000', '0000', '00100', '00000']
z (01111010):   ['01110', '1101', '111100', '010', '1110', '011111', '111100', '011110', '011101', '011100', '011100', '1101', '01111', '01110', '011101', '011010', '011010', '1100', '010', '0110', '01110', '1010', '01101']    
o (01101111):   ['01111', '1011', '00111', '011011', '11111', '11', '01111', '01111', '010111', '110111', '010111', '10111', '0111', '1101', '1101', '011011', '01111', '11111', '011111', '011011', '1111', '01011', '10111']     
o (01101111):   ['1111', '110111', '111', '0101', '01111', '10111', '1111', '10111', '01011', '110111', '010111', '011011', '01011', '01111', '01011', '1', '010111', '1011', '011011', '111', '10111', '011111', '1111', '111', '01', '11']
m (01101101):   ['111', '011', '011111', '0101', '1011', '0111', '1011', '110101', '110101', '111', '011010', '01', '011010', '01101', '0101', '0110', '1101', '0110', '110110', '1111', '0101', '0101', '110', '01011', '01111', '10110', '100']
, (00101100):   ['000100', '001100', '001010', '00100', '01100', '010', '10100', '01010', '010100', '110', '01010', '00110', '010100', '01010', '001010', '00100', '0010', '0010', '01100', '100', '00011', '00101', '0011', '10100', '000110', '0100']
  (00100000):   ['00000', '0100', '01000', '1000', '001000', '000', '00', '1000', '1000', '0100', '000000', '000000', '00100', '01000', '001000', '01000', '10000']