器使用场景进行建模。我们将物理服务器数据隐藏在一个接口之后，允许用户自己将未
·任何试图使用该产品（包括配置等）的团队，都可以马上通过这个产品消除需要
·持续的和完整的推广方案。
·资深工程师和管理层的赞助，因为他们看到了项目的实用潜力。
·用户的拥护。
，推进采用率
基于意图的容量规划
216
---
## Page 228
217
现在有什么数据，我们都可以采用”。通过避免对一两个大型用户的过度定制，我们降
186
在更多的不同的团队开始使用时保证足够通用。我们面对潜在用户时展现的是“不管你
保用户不需要为了使用Auxon框架而采用某种特定的工具。这种做法使得Auxon可以
种各样的数据都能作为输入，是Auxon的一个关键理念。软件对“不可知性”的支持确
我们在开发过程中使用了一个新术语“不可知性”。开发一个足够通用的软件以确保各
在合适的层次上进行设计
的专家，帮助其他当地团队试用该产品。
更多的是，SRE团队是分布在全球的，早期成功案例的另外一个好处就是可以成为当地
最终结果仍由这些团队负责。后来的用户可以借鉴早期用户的成功经历。
并且更好地展示这项工具的作用在于消除重复性手工劳动，而配置文件、修改的流程和
脚本所替代。通过和早期用户一对一地共同协作，我们可以更好地处理这些情绪问题，
同时也会面对一定程度上的情绪挑战，比如有的时候用户会恐惧自己的工作被一个shell
期给新用户提供一定程度的帮助，以确保他们可以更好地使用该工具。有的时候自动化
任何一个足够创新的软件项目对用户来说都有一定程度的学习曲线。不要害怕在项目初
虽然SRE开发的软件项目主要服务于技术项目经理（TPM）和有技术能力的工程师，但
客户支持
更愿意试用Auxon。
一篇前后流程的案例分析对比。这项案例分析中描述的流程和人力的节约使得其他团队
程度还有更多的好处，当我们将另外一个Google部门迁移到该工具上时，团队撰写了
这个项目的实用性，从而将一些早期用户变成了该工具的推广者。能够量化工具的实用
初期版本的Auxon目标用户是那些还没有容量规划流程的团队。因为这些团队不管是自
还处于不完美状态时。
并不完美，但是这些团队也没有足够的动力去使用一个新的工具，尤其是当这个新工具
经有了内部自己开发的容量规划方案，起码目前工作良好。虽然目前他们的自定义工具
Auxon的开发团队意识到这个特定的解决方案可能不适用于所有人。很多大型团队都已
识别合适的用户
）随着Auxon的新功能不断增加，同样的配置文件可以保持不变，并且能提供更
级或者制定新的里程碑。
用例是否还没有实现。同时，Auxon的选代式开发流程可以很快地修改开发优先
多的节约长期成本的好处。这个项目计划图使得用户可以很快地确定他们目前的
手工整合短期资源请求的痛苦过程。
第18章SRE部门中的软件工程实践
---
## Page 229
在SRE团队中培养软件工程风气
景的新成员。在其他小型公司内，这可能要通过寻找外部咨询顾问来做到。这些新的团
随着项目的进行，Auxon的功能变得复杂多变，团队吸收了一些有统计学和数学优化背
究（operation research）和量化分析（quantitate analysis）部门，获取了更多的领域知识
合作。在构思和设计Auxon的初期，我们通过将系统设计展示给Google内部的运维研
需要外包，甚至请一些咨询顾问。但是大型公司的SRE团队经常可以和内部专家直接
工程师可以很快地在新问题上上手。对很多其他公司来说，SRE团队解决新问题时通常
对团队来说，尽快与必要的专家（specialist）建立良好的工作关系是很重要的，这使得
领域专家可以提供更广阔的知识和经验。这样一个多样化的团队可以避免设计盲点。
（generalist）和领域专家组成一个种子团队，通用型人才可以很快地开始工作，而资深
在SRE内部选择团队成员进行软件开发时，我们发现最好是能够合并通用型人才
团队内部组成
每个项目都适用的功能是投入产出比例不划算的。
我们同时也主动避免落入“100%”采用率的陷阱。在很多情况下，追求设计和开发针对
低了新用户的采用门槛，同时提高了在整个组织内部的采用率。
什么样的项目是不合适的呢？和很多你在其他软件工程项目上能直观识别的红色警告一
项目也会容易招募到工程师和支撑性资源。
可以帮助避免相互冲突的项目或者重复的项目发生。同时，
力背书，从而在自己的团队内或者整个组织内宣传你的项目。组织内部的推广以及评审
一个项目的目标应该与整个组织的发展目标一致，这样技术领导层可以为该项目的影响
少SRE的琐事，优化现有的基础架构设施，或者将一个复杂流程简单化等。
在项目早期提供非常高质量的问题报告）。该项目还应该提供足够明显的优势，例如减
正面信号包括相关领域专家表示的兴趣，或者技术实力很强的目标用户群体（因此可以
是什么使一个简单的一次性工具可以演化为一个长期的软件工程项目呢？是一些重要的
的成功，而且在团队成员能够充分获益的情况下才是好时机。
每个项目都有正确的时间点来引入领域专家。通常来说，该项目应该已经有了一定程度
级的目标。
队成员能够在项目的基础功能中找到可以优化的部分，这时优化已经成为我们最高优先
让Auxon团队成员更好地了解容量规划的细节。
在SRE团队中培养软件工程风气
一个能够为整个组织服务的
187
219
218
---
## Page 230
220
这一点上，某个项目可能会分支到几个不同的方向上：
SRE内部的主要软件项目都是从一个小项目开始，随着采用率的提高变得更正式的。在
嵌入在SRE体系中的全职开发人员。通过对生产环境保持一定程度的熟悉，SRE可创造
然而，在上述任何一个场景中，进行开发的SRE仍然要继续作为SRE工作，而不是变成
件工程项目上工作，是吸引工程师开发项目的一个因素。这些时间必须要时刻得到保障。
实战经验的氛围。
的面向用户的软件开发的经验，可以跟工程师结合，更好地培养出一个兼顾产品开发和
已经写好了设计文档，为什么还需要用户需求分析呢？”TPM和PM，相比之下有更多
发工程师的工作经验。他们没有产品讨论的经历，也没有思考用户需求的经历。一个早
这些工程师通常有很强的编程能力和软件开发能力，但是很多人却没有很多传统软件开
SRE通常是通用型人才，这种广度优先而不是深度优先的学习方式使得SRE对全局知
在SRE团队中建立起软件工程氛围：招聘与开发时间
于最后被改造成了直接对用户提供负载均衡服务的Google Cloud负载均衡器（参见文献
可靠的实际案例来证明自己的实用性。
如果一个项目目标太大、太抽象，很可能需要投入非常大的研发力量，但是却没有足够
某个工具太过专注于灵活或者通用，很可能无法针对任何一个具体案例产生足够的价值。
足够通用以被其他的SRE团队采用。另外一方面，过于通用的框架也会带来问题。如果
提供帮助。因为团队的关注点在于提高所服务产品的用户体验，SRE项目经常不能做到
188
是不可能的，更不要说关注于大型的更复杂的项目了。因此，能够不受干扰地在一个软
对推动一个项目的进展很关键，因为SRE不停地在多个任务间切换的时候，写代码几乎
专注的、没有干扰的项目开发时间是任何软件开发项目都必需的。专注的项目开发时间
期SRE软件开发项目的一名工程师说的话，可以很好地总结SRE对软件工程的态度：“我
识掌握得很多（没有什么比现代技术基础架构设施的内在工作原理涉及面更广泛的了）。
[Eis16])。
一个使用范围很广泛的例子是：Google SRE开发的一个三层负载均衡器非常成功，以至
用选代式开发的项目。因为GoogleSRE项目目前是以所服务的项目为核心进行组织的，
样，例如同时改变太多组件的项目，或者软件设计要求全有或全无的上线方式，无法采
·停留为某个工程师的草根型项目，在业余时间内开发
）从SRE领导层获得专属的认可，以扩展成为一个完全独立的软件开发项目。
通过某种正式内部渠道成为一个正式项目（见下一节）。
第18章SRE部门中的软件工程实践
---
## Page 231
评估组织的能力
Google的一些指导经验。
延续数年。这样一种变化需要同时在多个方面推进，但是经常有很好的回报率。以下是
方案，甚至成为组织内部的标准？在大型团队中，后面这种标准化需要一定时间，甚至
中推广更好的软件开发实践，还是想通过软件开发得出一些可以在团队间共享的自动化
第二，我们要考虑在SRE中进行软件开发真正要实现的目标是什么。我们是想在团队
复劳动和时间的浪费。
用范围特别窄或者用途单一的一次性软件开发方案无法在团队中共享，从而导致很多重
有那么多问题。但是，随着组织的增大，这种一次性的代码可能当时确实有用，但是适
的快速写一些代码满足当下需求的工作习惯的。如果SRE团队很小，这种方式可能还没
和他们的团队成员紧密合作，快速分析和应对问题。因此，软件开发其实是违背了SRE
第一，我们应该认识到这个目标是一个技术问题，更是一个组织架构问题。SRE习惯于
发体系引人专注于服务运维体系的团队中。
如果你喜欢SRE体系内部也进行软件开发这个主意，那么你可能正在思考如何将软件开
做到这一点
出更好的工具。因为他们既是工具的创造者，也是使用者。
创建并且宣扬一个明确的信息
SRE有很多技能，但是通常情况下，SRE团队缺少作为一个产品团队构建和交付完
定义和宣扬你的战略目标和计划很重要。同时最重要的是，要宣传SRE团队能够从
这个团队需要SRE团队中缺少的一些角色和技能。团队中谁来担当项目经理的角
整产品的经验。为了能更好地开发有用的软件，我们实际上要创建一个产品团队。
经跨过了第一道难关。
当SRE开始问你这个方案“如何”工作，而不是“能否”工作时，你应该知道你已
·减少同样一个任务的执行方式，使得整个组织可以从某个单独团队的成果中获益，
·该软件方案能够持久地对新SRE员工起到加速作用。
我们需要创造出一些可靠的案例展示这些项目如何帮助SRE：
（toomuchoverhead），或者是“这样是不可行的”（will neverwork）。对待这种情况，
重点选拔的一类特性）。SRE对该软件工程的第一反应可能是：“这听起来成本过高
中获得的好处。SRE是一群天生的怀疑论者（事实上，怀疑论是我们在招聘的时候
以便促进信息流通。
在SRE团队中培养软件工程风气
189
<221
---
## Page 232
190
产生回报。
长。最终，SRE花在软件开发的精力会对整个公司、整个SRE组织，以及SRE个人都
流程或者自动化的工具，这些项目意味着SRE团队不需要和部署服务的规模同比线性增
司建立起可持续的运维团队来说也是很有帮助的。因为SRE团队经常开发用来简化低效
维经验使得SRE经常可以用创新的手段处理老问题，SRE驱动的软件开发项目对整个公
的项目铺平了道路。正如Auxon解决复杂的容量规划问题那样，独特的一手生产环境运
软件工程项目在Google SRE组织内部随着人数增多而增加，成功与失败的案例为以后
小结
软件工程项目建立可信度很慢，但是失去它却非常快。
不要降低标准
发布并且选代
·问自己这样的问题：如果这个产品是其他团队开发的，我们是否会考虑使用？
用要求产品研发团队的标准来要求自己，例如：
在开发软件的过程中，我们可能不可避免地想要走一些捷径。一定要抵制住这种诱惑，
更快地发布新功能及获取反馈。
结束之后，
来实现，并在实现这些功能的同时学习如何成为一个高效的研发团队。在初始发布
将这个方法对应一个六个月的产品更新周期可以让团队集中精力寻找正确的功能集
易于实现的目标一那些没有争议的，或者现成的解决方案的目标。我们同时发现，
的方式是在合理的时间内交付一些实用价值。第一轮的产品应该面向相对直接并且
当你开始推动一个SRE软件开发项目时，你的工作被很多人密切关注。建立可信度
的情况下招聘这些人可能会容易一些。
优先级分配。有的时候可能需要一个专属人来负责这些角色。在有了一些正面结果
者培训的方式建立起一套敏捷流程。同时通过咨询产品经理来帮助确定产品需求和
通过内部招聘来填充这些不足是一个好策略。通过咨询你的产品开发团队以辅导或
一个敏捷开发流程吗？
可以找另外一个SRE团队，让他们按常规服务生产交接的标准来评价你的产品。
可靠性是很重要的，该项目是否有足够的代码评审？是否有端到端的集成测试？
如果你的解决方案被广泛采用，它可能会成为SRE正常工作的关键工具。因此
第18章SRE部门中的软件工程实践