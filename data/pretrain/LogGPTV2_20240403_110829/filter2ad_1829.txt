title:Dependable LQNS: A Performability Modeling Tool for Layered Systems
author:Olivia Das and
C. Murray Woodside
Dependable LQNS: A Performability Modeling Tool for Layered Systems
Dept. of Systems and Computer Engineering, Carleton University, Ottawa, Canada
email: PI:EMAIL, PI:EMAIL
Olivia Das, C. Murray Woodside
Abstract
Dependable LQNS is a software tool for modeling and
evaluating performability of fault-tolerant layered distrib-
uted applications that use a separate architecture for fail-
ure detection and reconfiguration. It takes into account the
effects  of  management  architecture,  application  software
architecture, failure of management and application com-
ponents in the dependability computation. It uses a combi-
nation  of  minpath  algorithms,  AND-OR  graphs,  non-
coherent fault trees and Layered Queueing modeling in the
analysis.
1.  Introduction
Dependable  LQNS  models  the  class  of  applications
that has layered software architecture with a general fault
management  architecture,  as  considered  in  [1].  The
analysis strategy of this tool has the following steps:
•
find the different operational configurations of the 
application 
compute the probability of each operational configu-
ration (using a non-coherent fault tree)
determine the reward rate for each operational config-
uration (using a Layered Queueing model)
combine the probabilities and the rewards to deter-
mine the average performance measures.
•
•
•
This 
tool  supports  an  architecture  evaluation
language that allows a user to: 
(i)  describe  the application  and  management  components
(processors,  application  software  tasks,  manager  tasks,
agent 
representing
additional shared factors of failures (such as power-supply
tasks)  and  pseudo-components 
the 
specify 
failure, failure due to mechanical vibrations).
(ii) specify the interactions between the components in the
management  architecture  (as  for  example,  monitoring,
notification).
(iii) 
functional  dependencies  among
application components from layer to layer (including the
fault-tolerant mechanisms).
(iv)  performance  and  dependability  parameters  (for
example, execution demand of a task on its host, number
of  service  requests  made  by  one  task  to  the  other  from
layer to layer, failure and repair rates for the components).
The input to the tool is a plain-text file containing the
above  descriptions  and  the  output  of  the  tool  is  average
performance measures of the pure client tasks. The flow-
chart  of  the  tool  is  given  in  Figure  1.  The  tool  uses  the
help  of  Aralia[2]  for  non-coherent  fault-tree computation
and LQNS[3] for performance analysis. The tool has been
written in C++ for Windows. 
2.  References
[1]  O.  Das  and  C.  M.  Woodside,  "Modeling  the  Coverage  and
Effectiveness  of  Fault-Management  Architectures  in  Layered
Distributed  Systems”,  IEEE  DSN  2002,  Bethesda,  Maryland,
June 2002, pp. 745-754.
[2] Y. Dutuit and A. Rauzy, "Exact and Truncated Computations
of  Prime  Implicants  of  Coherent  and  non-Coherent  Fault  Trees
within  Aralia",  Reliability  Engineering  and  System  Safety,  58,
1997, pp. 127-144.
[3] G. Franks, S. Majumdar, J. Neilson, D. Petriu, J. Rolia, and
M.  Woodside,  "Performance  Analysis  of  Distributed  Server
Systems",  in  the  Sixth  International  Conference  on  Software
Quality (6ICSQ), Ottawa, Ontario, 1996, pp. 15-26.
Model 
description 
file
Model 
description
compiler 
Non-coherent 
Fault trees
Aralia[2]
Configuration
probabilities
Layered 
Queueing
models 
LQNS[3]
Configuration
rewards
Performability
Calculator
Average 
Throughput
of pure client 
tasks
Figure 1 Flow Chart of Dependable LQNS tool
Data
Computing 
Unit 
Proceedings of the 2003 International Conference on Dependable Systems and Networks (DSN’03) 
0-7695-1959-8/03 $17.00 (c) 2003 IEEE
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 07:05:10 UTC from IEEE Xplore.  Restrictions apply.