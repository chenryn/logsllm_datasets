**Title: BlackHat EU-21 ECMO: Rehosting Embedded Linux Kernels via Peripheral Transplantation**

Dynamic analysis using full-system emulators like QEMU is widely employed for various purposes. However, running firmware images from embedded devices in QEMU, particularly the process of booting the Linux kernel (referred to as rehosting), presents significant challenges. This is primarily due to the diverse range of system-on-chips (SoCs) used in embedded devices, many of which are not supported by QEMU.

In this work, we introduce a technique called peripheral transplantation. The core concept involves integrating the device drivers of specific peripherals into the Linux kernel. This approach allows us to replace unsupported peripherals with those that are supported by QEMU, thereby enabling the rehosting of the Linux kernel. Once the kernel is rehosted, it can be leveraged for a variety of applications.

We implemented this technique in a prototype system named ECMO and tested it on 815 firmware images, encompassing 20 different kernel versions, 37 device models, and 24 vendors. Our results show that ECMO successfully transplanted peripherals for all 815 Linux kernels. Among these, 710 kernels (87.1% success rate) were successfully rehosted, allowing for the launch of a user-space shell. The primary reason for the failures was the lack of support for the root file system format (ramfs) in the kernel.

To further demonstrate the practical applications of ECMO, we developed three use cases: kernel crash analysis, rootkit forensic analysis, and kernel fuzzing. These applications highlight the versatility and potential of our rehosting technique in enhancing the security and robustness of embedded systems.