CLASS_ORIGIN和 SUBCLASS_ORIGIN：它们分别是RETURNED_SQLSTATE值的类和子类。
对于诊断领域里的条件信息，可以使用下列各项。除了RETURNED_SQLSTATE之外，这些项
口NUMBER：诊断区域里的条件数量。有可能没有任何条件，在这种情况下，NUMBER 为0。如
对于诊断区域里的语句信息，可以使用下面几项。
GET DIAGNOSTICS
这条语句可用于检查诊断区域的内容，其中包括语句生成的两类信息：语句本身的信息（如
口
口
D
口
D
D
GET DIAGNOSTICS CONDITION2
如果想获得条件2的SQLSTATE值和错误信息，可以运行下面的语句：
MYSQL_ERRNO：MySQL错误代码。
1ROW_COUNT：语句影响到的行数。
CATALOG_NAME、SCHEMA_NAME、TABLE_NAME 和 COLUMN_NAME：条件的相关目录、模
MESSAGE_TEXT：错误信息。
RETURNED_SQLSTATE：SQLSTATE字符串
如果该值是在SQL标准文档ISO9075-2里定义的，则类为'ISO9075＇；否则，为
@sqlstate = RETURNED_SQLSTATE,@meSSage =MESSAGE_TEXT;
@affected_rows =ROW_couNT, @condition_count = NUMBER;
式、表和列。在MySQL里总是为空。
模式和名称。在MySQL里总是为空。
为ISO9075'；否则，
GET DIAGNOSTICS @condition_count =NUMBER;
果要确定有多少条件，可以使用下面这条语句：
CURSOR_NAME
COLUMN_NAME
为'MySQL'。
E.2SQL语句语法（复合语句）
存储程序局部变量、存储函数参数或存
717
---
## Page 738
详细的信息。
差异在于condition_value是可选的。
情况下才可以使用。
理得更好，这一点会很有用。与 SIGNAL 有所不同的是，RESIGNAL 只有在某些条件处理器激活的
进行修改或添加。在条件处理器里，如果你发现某个条件在外部上下文里可以比在当前上下文里处
例外，它们会把自己的条件添加到诊断区域，而不是对其进行清理。可以使用GETDIAGNOSTICS、
则其他的语句会根据上一条语句对条件的诊断区域进行清理。GET DIAGNOSTICS 和RESIGNAL 属于
设置为非空，因为这些语句会将值赋予各个条件区域成员。
718
SIGNAL 关键字后面的那个condition_value 表示的是错误提示的条件，其指定方式既可以
关于 RESIGNAL 的语法术语的解释请参考 SIGNAL 的描述。RESIGNAL 语句也基本相同，主要
那些使用表的语句在开始执行时会对诊断区域进行清理。如果某一条语句在执行期间出现了问题，
这条语句能让你发送错误提示，在语句执行期间，这一点有助于解决问题，并且能够提供更为
condition_info_type:
·SIGNAL
口带有condition_value的 RESIGNAL会把最近那个条件的副本添加到条件区域的末尾，并
口不带condition_value的 RESIGNAL会传递已有的条件信息。如果存在 SET子句，则该子
RESIGNAL语句与SIGNAL 相似，不过它主要用于传递先前生成的条件信息，并且有可能对其
●RESIGNAL
这些“总是为空”的值对于GETDIAGNOSTICS 也总是为空。它们可以被SIGNAL或RESIGNAL
SIGNAL condition_value
RESIGNAL [condition_value]
口CURSOR_NAME：条件的相关游标名。在MySQL里总是为空。
且会根据condition_value和 SET子句里存在的赋值表达式来对它进行修改。
句里的赋值操作会修改条件信息的指定部分。
see SIGNAL description
[SET
[SET condition_info_type=value
CURSOR_NAME
CLASS_ORIGIN
condition_name
SQLSTATE [VALUE] Sqlstate_ value
附录ESQL语法参考
COLUMN_NAME
TABLE_NAME
SCHEMA_NAME
CATALOG_NAME
CONSTRAINT_NAME
CONSTRAINT_CATALOG
MYSQL_ERRNO
MESSAGE_TEXT
SUBCLASS_ORIGIN
[,condition_info_type=value]
condition_info_type=value
·..]
...
---
## Page 739
LOW_PRIORITY 操作：
其他数据库服务器看来是等价的，但是当MySQL遇到第二条语句时，会执行INSERT
MySQL独有的函数；但当把代码拿到其他数据库环境里去使用时，也用不着修改。下面两条语句在
语言风格注释的其他服务器来说是这样的：在MySQL环境里执行的代码，在编写时可能使用了
据库服务器却会把它们当作注释的一部分忽略掉。这种安排增加了代码的可移植性，至少对支持
里。在遇到这种特殊形式的注释时，MySQL将识别出其中的关键字并执行相应的动作，而其他的数
我们可以把MySQL独有的关键字“隐藏”在以“/*！”开头（不是以“/*”开头）的C风格注释
划线的代码导入MySQL时，一定要对这一点加以注意。
达式，所以这是一个有用的启发式。不过，这仅仅是一个启发式，当从其他数据库将包含有两个短
则，像5--7这样的表达式很可能会被误认为包含一条注释。因为不太可能写出像5-－7这样的表
不要求后面必须有一个空格。MySQL要求必须在短划线的后面加上一个空格是为了避免二义性。否
服务器支持以下三种类型的注释。
值
提示出错，同时设置MySQL的错误代码和错误信息。
类型和分配给它的价值。下面这段代码可以测试除法运算的除数。如果出现了被零除的问题，它会
Ei
“描述”。SET子句由一个或多个以逗号分隔的赋值表达式构成，其中的每一个都会指定一个信息的
个SQLSTATE值及DECLARE语句的语法有关的信息请参考E.2.2节。
3
在执行语句时，服务器会忽略其中的注释，但以“/*！”开始的C语言风格注释却是个例外。
口可以用两个短划线加一个空格（“-_”）或者两个短划线加一个控制字符（如换行符）来开
MySQL允许你在SQL代码里穿插一些注释，以此对存储在文件里的那些语句进行说明。MySQL
其中的SET子句是可选的，用于给各个条件信息项进行赋值；你可以通过这个子句对条件进行
MySQL的双短划线注释风格与标准SQL的注释风格不太一样，后者只要求以两个短划线开头，
口
口
与允许条件信息类型名称及其含义有关的更多信息请参考GETDIAGNOSTICS的描述。
用户定义变量、系统变量、存储程序局部变量、存储函数参数或存储过程参数。
在每一个赋值表达式里，用于赋值的那个值value不能是普通的表达式。它只能被指定为文本
ENDIF;
IF divisor<>O THEN
在“/*”和“*/”之间的所有内容都会被当作注释。这种形式的注释允许跨越多行。这种
许多种脚本编程语言（如 Perl、PHP和 Ruby）使用的注释语法相同。
从“#”到该行末尾的所有内容都会被当作注释。这种语法与绝大多数的Unix shell程序以及
SIGNAL SQLSTATE'22012
SET ratio=numerator/ divisor;
--Thisis a comment
始一条注释。从双短划线到行尾的所有文字都将被视为注释内容。
*/
/* this is a single line comment */
语法与C语言所使用的注释语法相同。
#this is a single line comment
注释语法
*
SET MYSQL_ERRNO = 1365, MESSAGE_TEXT =Division by zero attempt';
comment
is a multiple line
this
E.3注释语法
719
---
## Page 740
及以后版本的服务器才能理解DELETE的PARTITION子句）：
务器的版本是5.6.2，或者更高，否则下面这条DELETE语句里的注释会被忽略（只有MySQL5.6.2
版本号。如果MySQL服务器的版本低于该注释所给出的版本，它将忽略这条注释。除非MySQL服
720
C语言风格的注释可以用来实现版本控制。具体做法是，在“／*！”序列的后面加上5个数字的
INSERT
INSERT INTO mytb1(id,date) VALUES(13,'2013-09-28);
附录ESQL语法参考
---
## Page 741
5.5.0。在那之后产生的变化都会单独进行说明。
部使用的各种变量。如无特别说明，这里列举的选项和变量最早可以追溯到的MySQL版本是MySQL
MySQL程序参考
mysqld_multi
mysqld
mysqlcheck
mysqlbinlog
mysqladmin
mysql_upgrade
mysql.server
myisamchk
MySQL服务器。它必须处于运行状态，这样客户端程序才能访问数据库。
用于显示文本格式的二进制日志和中继日志。
用于初始化服务器的数据目录和权限表。
用于表的检查、修复、优化和分析。
用于完成各种管理操作。
用于安装完较新版MySQL之后的数据库升级。
用于显示编译基于MySQL的程序所使用的各种特定标志。
用于启动和停止MySQL服务器。
用于与MySQL服务器进行交互，或者以批处理模式执行文件里的语句。
用于检查和修复MyISAM表、分析键的分布情况、禁用或启用索引。
用于同时启动和停止多个服务器。
附录F
---
## Page 742
它们之间不能有空格。
价的。选项-p（密码）是个例外；那个密码值是可选的，但如果给出该值，则该值必须紧随-p之后，
选项和值之间都可以用空白来隔开。例如，当你指定用户名时，-usampadm 和-u sampadm是等
其中，name是选项名对，val是该选项值。如果短形式选项的后面带有值，那么在大部分情况下，
和-?就是这样的例子。对于后面带有值的长格式选项，其指定格式为--name=va1或--nameval，
项优先于其他方式指定的选项，在选项文件里指定的选项优先于通过环境变量设置的选项。
也可以在选项文件里给出。此外，有一些选项可以通过设置环境变量来指定。在命令行上指定的选
F.2
存在于Windows系统里。
持功能编译进程序以后才会被显示出来；而对于--pipe这种只有Windows系统独有的选项，则会
名通配符：
mysqlimport，可以像下面这样调用命令来获得帮助信息：
项和--help 选项。对于其他程序，只需要使用--help 选项即可。例如，如果不太清楚如何使用
得与程序本身有关的各种信息。对于服务器程序（即mysqld)，在调用它时可以带上--version选
被弃用或移除。
别出在其描述里列举的某个选项，则该程序可能是比较早的版本，或者该选项在较新版本里可能已
F.1显示程序的帮助信息
722
大部分的选项都既有长形式（完整单词）又有短形式（单字符)。前面介绍过的那对选项--help
大部分的MySQL程序都能理解会影响它们的操作的那几个选项。选项既可以在命令行上指定
如果想要获得程序支持的选项列表，可以查看该程序的帮助信息，采用这种方式，可以快速获
本附录在随后介绍每个程序时，都会列出它们当前所能支持的各个选项。如果某个程序无法识
选项名都是区分大小写的，但是选项值区不区分大小写都行。例如，像用户名和密码这样的值都
有些选项只会在特定条件下才会显示帮助信息。例如，对于SSL有关的选项，只有在把SSL支
mysqlshow
mysqlimport
 mysqld_safe
mysqlimport -\?
如果遇到这种情况，可以试试下面这条命令：
mysqlimport:No match.
%mysqlimport -?
mysqlimport--help
语法描述里的可选信息都是用方括号（［1）来表示的。
perror
用于显示错误代码的含义。
用于显示关于数据库或表的信息。
用于将数据批量载入表中。
用于转储数据库的内容。
用于启动和监视MySQL服务器。
指定程序选项
附录FMySQL程序参考
---
## Page 743
F.2.1MySQL程序的标准选项
就是说，表中所示的前缀选项和后缀选项都支持。
--quote-names 选项默认是启用的。你不能采用将其省略的方式来禁用名字引用功能，但是可以通
选项的方式便可以禁用它。但是，对于那些默认启用的选项则不然。例如，mysqldump的
--disable-compress、--skip-compress 和--compress=0 则会禁用压缩功能。
方式也可以达到同样的效果：--enable-compress 和--compress=1也可以启用压缩功能，而
指定--compress 选项，可以启用压缩功能；如果忽略它，则不会使用压缩功能。不过，采用其他
准形式，如下表所示。
是区分大小写的，但是选项--protocol的值则不区分大小写。在进行 TCP/IP 连接时，
有几个选项的含义是标准的，几乎所有的 MySQL 程序都能以同样的方式来解释它们。为了避免
本附录在描述程序时使用了指示词“(布尔值)”来明确说明哪些选项的解释优先级更高一
对于那些默认启用的选项，显式禁用选项的格式非常有用。对于协议压缩，采用忽略--compress
许多选项都是“布尔型”的，其值为开或关。这些选项都有一个基本形式和一组相关的公认标
MySQL程序还有其他几个标准的选项处理功能，如下所示。
当感到疑惑时，可以查看程序的帮助消息，弄清它所支持的选项形式（参考F.1节)。
例如，许多 MySQL 客户端程序都支持使用客户端/服务器协议压缩功能。对于这些程序，如果
口
口
上选项--maximum-sort_buffer_size=64MB.
MySQL服务器，mysqld，支持使用--maximum-前缀，其作用是指定用户可修改的那个变
是使用它，还是忽略它。
auto-vertical-output,
vertical-output选项，
它可以让整个事情变得更加简单。
MySQL支持选项前缀--loose-。
不能换作破折号。）更多相关信息请参考F.2.1.2节。
可以使用下划线，也可以使用短划线。
管变量名里有下划线，没有短划线，但是对于命令行或选项文件里的选项名或变量名，既
程序变量可以在命令行上设置，也可以在选项文件里（需要将变量名当作选项名）设置。