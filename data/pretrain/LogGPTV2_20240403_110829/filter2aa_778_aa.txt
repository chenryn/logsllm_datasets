演讲人：
2 0 1 8
• Swan：业余漏洞挖掘爱好者
• Heige：Web一哥，二进制新手
• Hui Gao：MSRC top 100一姐
• 业余时间搞下二进制
• 找找那些难以利用，无实战意义的漏洞
• 希望是非灌水性质，因为Adobe本身门槛略低
• 避开热点区域
• 不撞洞，不给其它有KPI要求的团队添麻烦
• 源于2014年的思路
• 2014年5月29日，我们发现了一个古天乐般平平无奇的IE漏洞（CVE-2014-1792）
• POC非常简单
• 72字节的Use-After-Free漏洞
•  
启发
• 一开始无法重现
• 反复试验后发现拖拽文件入浏览器可触发UAF在mshtml!CDragDropManager::DragOver+0x1f9
• Fuzzer确实有乱发送鼠标键盘事件的模块
• 复盘发现情况，寻找原因
• 结论：不知道咋找到的（摊手）
• 类似的还有CVE-2014-1791等
• 有交互的漏洞似乎符合我们的期望
• 小众，难找，难重现
• Fuzz效率低，性价比堪忧，鲜有人做
• 没有现成工具，一切需要从头搭建
• 能找到各种搞不清楚原因的漏洞
结论与立项原因
• 简单的说
• 以前我们关注触发的内容，现在我们尝试触发的姿势
• 有交互要处理，没有交互制造交互也要处理
• 收集会引起交互的PDF元素
• JS command
• 引起错误及安全等级相关的元素
• 发送会引起交互的事件
• JS层面
• 用户输入层面
• 模拟用户响应
思路
• app.execMenuItem("xx");
•
76 actions: GoToPage, FitPage, TwoColumns …
• app.alert(xx)
• console.show();
• this.mailDoc(true);
• this.mailForm(true);
• this.print(xx)
• this.saveAs(xx)
• this.insertPages(xx)
• app.launchURL(xx)
• …
引起交互的JS
引起一些交互
• 引起一些可以被Adobe Reader容忍的错误
• 无效的参数
• 不存在的对象
• 安全等级警告
• …
引起一些错误
引起一些错误
• 键盘事件
• 随机字符输入：圆周率映射到字符
• 快捷键与快捷键组合：Ctrl+H, Ctrl+L，Alt+F4
• 鼠标事件
• 鼠标移动：mouse_event(…)
• 点击与拖拽：左键，右键，鼠标压下，鼠标放起
• 滚轮事件：滚动方向，点击
• 系统事件与其它
用户输入层面
• 不同的提示信息对话框
• 不同的按钮，确定/取消/是/否
• 需要输入的对话框
• 页面跳转：跳转到有效页面，跳转到无效页面，取消跳转
• 标签与选项选择：单选框，复选框，确认/应用/取消
• 翻页与缩放
• 其它动作
• 全屏、打印：允许/不允许，取消，记住选择
• 关闭应用程序：正常退出，强制退出，取消退出
进一步细分
• 输入随机，但可以记录随机种子来回放
• 记录系统环境（内存、显示设置等）
• 记录应用程序初始与结束配置（窗口大小等）
• 记录输入时间间隔
• 记录虚拟机与物理机负载
• 记录网络响应情况
可靠重现的条件
• 生成混合有各种因素的PDF样本
• 打开后根据对话框情况模拟用户响应
• 没有交互时制造一些交互事件
• 后台对每次响应与主动事件进行记录
• 等待并观察一段时间，看是否有crash
• 重复第一步
整合在一起
• 气宗
• 从头开始构造文件
• 通过JS构造页面及页面元素
• 剑宗
• 找个模板替换掉JS
• 其它不知道什么宗
• Dummy fuzzing
然后我们谈谈样本生成
• 敝厂特拉维夫分厂有人在做气宗的活
• 我们对PDF文件格式吃得不是很透(谦虚脸)
• 黑哥对气剑宗的屁话一直耿耿于怀
• 黑哥对气剑宗的屁话一直耿耿于怀
• 黑哥对气剑宗的屁话一直耿耿于怀
我们向剑宗低了头
• 爬docs.adobe.com收集JS API素材
• 文档不全的用枚举来搜索一次（见下一页）
佛系Fuzzing构建
function obj(o){
 for(i in o){
   console.println(o[i]);
 }
}
obj(this);
• 爬docs.adobe.com收集JS API素材
• 文档不全的用枚举来搜索一次
• 从基础文件中搜集objects名
佛系Fuzzing构建
6 0 obj > endobj
7 0 obj >endobj
8 0 obj > endobj
21 0 obj >/H /P
/AP >
    /AA 16 0 R    
>>
endobj
{“Text”,”BigRect”,”SmallRect”,”mydata1”}
• 爬docs.adobe.com收集JS API素材
• 文档不全的用枚举来搜索一次（见下一页）
• 从基础文件中搜集objects名
• 混合起来生成适合基础文件的JS语句
佛系Fuzzing构建
JS语句库
this.getField("")
对象库
“mydata1”
this.getField(“mydata1")
JS语句库
.setFocus()
this.getField(“mydata1").setFocus();
• 爬docs.adobe.com收集JS API素材
• 文档不全的用枚举来搜索一次
• 从基础文件中搜集objects名
• 混合起来生成适合基础文件的JS语句
• 替换/插入基础文件中的JS语句
佛系Fuzzing构建
1 0 obj
>
>>
/AcroForm 10 0 R 
/OpenAction 40 0 R
>> endobj
40 0 obj >
endobj
% JS program to exexute
41 0 obj >
stream
app.alert(‘hmm, nice day!');
endstream
endobj
1 0 obj
>
>>
/AcroForm 10 0 R 
/OpenAction 40 0 R
>> endobj
40 0 obj >