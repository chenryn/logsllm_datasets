Here is the code I have tested on windows:
    package main
    import (
        "net"
        "fmt"
    )
    func main() {
        inets, _ := net.Interfaces()
        for _, i := range inets {
            if mac := i.HardwareAddr.String(); mac != "" {
                fmt.Println("MAC:",mac)
                fmt.Println("Name",i.Name)
                addrs, _ := i.Addrs()
                for _, addr := range addrs {
                    if addr := addr.String(); addr != "" {
                        fmt.Println("Addr:",addr)
                    }
                }
            }
        }
    }
Run this code on different version:
On 1.4.3 get the result:
    MAC: 08:00:27:0a:af:0c
    Name {558CA760-9D61-47CC-AF7D-4E8635DDD283}
    Addr: 10.0.2.15
On 1.5.1 get the result:
    MAC: 08:00:27:0a:af:0c:00:00
    Name Local Area Connection
    Addr: 10.0.2.15/16
On 1.5.2 get the result:
    MAC: 08:00:27:0a:af:0c:00:00
    Name Local Area Connection
    Addr: 10.0.2.15/16
    MAC: 00:00:00:00:00:00:00:00
    Name MS TCP Loopback interface
    Addr: 127.0.0.1/1
The old version MAC use the standard IEEE 802 format MAC-48. but the new
version use the EUI-64.
If my program is relied on the MAC as the uuid. then upgrade Go will cause big
problem. Is there any config to get MAC-48 not EUI-64?