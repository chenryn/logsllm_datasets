150
Time (seconds)
Time (seconds)
(b) Observed CA activation/configuration in 4 walks
Figure 3: (a) Data rate changes observed in multiple walks
on the same 260-meter walking path. (b) CA conﬁguration
(red line) and activation (grey area) changes observed in four
walks on the same path.
certain UE is being served by three secondary cells does not
leak much location information when there exist many other
locations that have three (or more) secondary cells.
Instead, we build a time series of this side channel informa-
tion and use it as a ﬁngerprint of a walking path when there
exist different secondary cell availability along the path. To be
speciﬁc, as a user walks a certain path, the number of activated
secondary cells for the UE may change over time depending
on how secondary cells are deployed along the path. We ex-
pect unique ﬁngerprints for different walking paths since the
deployment of secondary cells and the surrounding physical
environment can be highly unique in indoor/outdoor setting.
Real-world evidence. We brieﬂy show the feasibility of this
side channel and the ﬁngerprints through our small-scale ex-
periment in an LTE-A network in a metropolitan city, where
up to three CA is available (i.e., one primary cell and two
secondary cells are available). We walked a 260-meter out-
door pedestrian path fourteen times with a Sony Xperia XZ1
phone. We particularly choose two different times (i.e., 9 AM
and 8 PM) in all seven days a week to conduct experiments
when the LTE-A network experiences widely different levels
of cellular trafﬁc load [17,18]. Figure 3(a) shows how the data
rate changes during an entire walk when we keep download-
ing ﬁles. We see that a clear pattern emerges. For example,
when a user passes by a certain spot, consistently higher data
rates are offered. This means that a user can expect a similar
downlink rate change pattern along the path and the pattern
seems to be highly independent of when he walks the path.
Figure 3(b) explains why such a clear pattern emerges. The
four ﬁgures of the CA conﬁguration and activation changes
show a highly consistent pattern. This shows that the number
of nearby secondary cells at speciﬁc spots on the path is highly
consistent for different walks at different times. Also, most
of the available nearby secondary cells get activated when
there exist active downloads during the walks. We observe
reliable three CA activation at an average data rate of about
40 Mb/s or higher in our experiment when downloading a
large ﬁle. We also observe frequent three CA activation when
streaming popular YouTube music videos at a moderate 360p
video resolution; see more detailed evaluation in Appendix B.
The results clearly show that the side channel is real and,
more importantly, has a great potential to be used to form
consistent and unique path ﬁngerprints. Similar observations
are found in another cellular provider; see Appendix C. More
comprehensive evaluations in multiple paths in existing LTE-
A networks are found in Section 5, and in a synthesized near-
future network in Section 7 and Section 8.
3 Threat Model
Attack goals and capabilities. A SLIC adversary aims to
identify the path taken by a target user among all the walking
paths that have been ﬁngerprinted in advance. SLIC works for
both indoor and outdoor paths as long as they can be ﬁnger-
printed. An adversary should be able to ﬁngerprint (e.g., walk
with her phone) the paths that are potentially taken by a target
user in advance (i.e., during the reconnaissance step (§4.1)).
During the path identiﬁcation, SLIC requires minimal attack
capability of passively monitoring the scheduling channel for
a targeted UE. A commodity low-cost software-deﬁned radio
device (e.g., USRP [16]) with open-source cellular projects
(e.g., srsLTE [6]) is sufﬁcient (§4.2). Note that the SLIC does
not require any app installation on the target’s phone.
For the path identiﬁcation, a SLIC adversary can be located
anywhere in the radio coverage of the primary cell in which
a target UE is located, where the typical radio coverage of a
primary cell is 0.4–2 kilometers.
Scope and assumptions. In this paper, we consider that our
target user travels on foot to show the feasibility of SLIC.
Faster-moving users (e.g., users on scooters or other vehicles)
are out-of-scope of this paper as they often move away from
short-range secondary cells even before they are activated for
CA. We leave attacks on fast-moving users for future work.
We also assume that our target user has some cellular down-
link activity because only then the presented side channel is
available. Note that it is common to see cellular downlink
activity while walking. With the abundance of cellular down-
link bandwidth (and the availability of unlimited data plans
in many countries [19, 20]), it has become a norm to stream
music in the form of music ‘videos’ [21,22]. Moreover, a non-
negligible portion of the population watches video content
while walking (dubbed as ‘Netﬂix-and-Stroll’) [23].
We consider that a SLIC adversary has some basic context
information about when her target user is on the move and
performs the path identiﬁcation when the target is moving.
For example, an adversary may learn the commuting pattern
or meeting schedules via the target’s public calendar (e.g., a
public online calendar with “busy/free” marks).
3902    30th USENIX Security Symposium
USENIX Association
We consider a single passive adversary device within a
primary cell. In principle, with multiple passive adversary
devices in adjacent primary cells, an adversary can obtain
path ﬁngerprints across adjacent primary cells with minor
discontinuity in side-channel measurements.
We use the Temporary Mobile Subscriber Identity (TMSI)
of the device to refer to the identity of a user. We assume
that adversaries can conduct a separate attack proposed by
Shaik et al. [3] (or a similar attack that is recently shown
to be feasible in 5G networks [24]) to link the TMSI to the
real-world identity of users.
Strategies to activate the side channel. As discussed in Sec-
tion 1 and demonstrated in Section 2.2, the side channel reli-
ably captures the number of secondary cells at each location
when a target user is utilizing the downlink bandwidth. A
SLIC adversary may have several options to achieve this:
1) The adversary can encourage a target user to begin down-
loading certain content for a couple of minutes. For ex-
ample, a link to any interesting high-volume content (e.g.,
a BBC breaking news clip) can be sent to a target user
to trigger the user’s download while walking one of the
ﬁngerprinted paths. Additional context information about
a target user can be helpful (e.g., sending legitimate work-
related ﬁle contents). Note that it is far different from
phishing attacks (where a target user is tricked into click-
ing a link to malicious content) because the suggested
contents are completely benign and malware-free.
2) The adversary can initiate a high-volume interactive ses-
sion with a target user via emerging technologies, such as
augmented reality (AR) or virtual reality (VR) conference
calls or multi-player AR games [25, 26]. Even if a tar-
get turns off all his video/AR/VR data streams except his
voice, the adversary can still activate the target’s download
by streaming her high-volume video/AR/VR data.
Even if the above options are unavailable, an opportunistic
attack is possible.
3) The adversary can opportunistically wait until the target
starts some downlink activities. This is possible as the
adversary can keep track of the target UE’s TMSI over
time and monitor the target’s real-time downlink rates.
Note that the above strategies do not make the SLIC any less
stealthy because they are all deemed legitimate behaviors (e.g.,
sending a legitimate YouTube link, authentic work-related
ﬁles, or making AR/VR sessions with a target user).
4 Attack Design and Implementation
We begin with the overview of SLIC (§4.1) and explain
the detailed attack steps for the main path-identiﬁcation at-
tack (§4.2), where a SLIC adversary is able to ﬁngerprint all
plausible paths. We extend the main attack by considering
the case when a SLIC adversary misses ﬁngerprinting some
plausible paths (§4.3).
(1) Reconnaissance phase
adversary
fingerprinting module
reading activation bitmap 
via privileged app
fingerprint
records
labeled 
fingerprint
calibration
module
victim
sniffer 
fingerprinting module 
reading activation bitmap via 
public scheduling channel 
(PDCCH, PDSCH)
(2) Attack phase
max activated cells
comparison module
victim’s 
fingerprint
absolute-value DTW
“The victim is on path p” 
or 
“Unexplored path”
Figure 4: System model of SLIC, which is divided into two
phases, namely the Reconnaissance and Attack phase.
4.1 Overview
SLIC is divided into the following two phases as illustrated in
Figure 4. (1) Reconnaissance phase: An adversary collects the
ﬁngerprints of candidate paths that can be potentially taken
by the victim. Speciﬁcally, the adversary reads the activation
bitmap assigned to a device via a privileged app and obtain the
number of activated secondary cells. As the adversary walks
a path, the number of activated secondary cells may vary and
this change is recorded with the annotated ground-truth loca-
tion information to obtain a labeled ﬁngerprint of the path.
The adversary may walk the same path several times to obtain
multiple labeled ﬁngerprint records for higher conﬁdence as
each walk of the same path will yield similar but slightly dif-
ferent ﬁngerprints. (2) Attack phase: The adversary monitors
the side channel (i.e., the number of activated secondary cells)
of the target victim. Speciﬁcally, the adversary utilizes a snif-
fer tool in the primary cell that can read the activation bitmap
broadcast in the public scheduling channel (i.e., by access-
ing the Physical Downlink Control Channel (PDCCH) and
Physical Downlink Shared Channel (PDSCH)). The adversary
starts measuring the changes in the side-channel values for
a certain duration (e.g., a couple of minutes) to obtain the
victim’s ﬁngerprint. The adversary calibrates all the labeled
ﬁngerprints by limiting the maximum number of activated
cells to be the same as the victim’s ﬁngerprint to match the vic-
tim’s data usage or device capabilities. She then compares the
victim’s ﬁngerprint with all the calibrated labeled ﬁngerprints
to identify the path taken by the victim.
4.2
Identifying Fingerprinted Paths
The adversary’s goal is to identify the path taken by a victim
user among the set of ﬁngerprinted plausible paths. Speciﬁ-
cally, the adversary compares the victim’s ﬁngerprint captured
during the attack phase to a set of all labeled ﬁngerprints col-
lected during the reconnaissance phase.
Notation. We denote f w
p in the reconnaissance phase as the
labeled ﬁngerprint of a candidate path, p, in a walk, w. Each
ﬁngerprint f w
p = {x1, x2, ...} is a series of non-negative integer
side-channel values. We denote the victim’s ﬁngerprint in
the attack phase as fu to represent the identity of the path
USENIX Association
30th USENIX Security Symposium    3903
s
l
l
e
c
y
r
a
d
n
o
c
e
s
f
o
.
o
N
6
5
4
3
2
1
0
s
l
l
e
c
y
r
a
d
n
o
c
e
s
f
o
.
o
N
6
5
4
3
2
1
0
Labeled fingerprint
Maximum number of activated
cells in victim's fingerprint
Calibrated fingerprint
0
20
40
60
80
100
0
20
40
60
80
100
Time (seconds)
Time (seconds)
(a) An example of calibration of labeled fingerprint
(b) Resultant calibrated fingerprint
Figure 5: (a) The labeled ﬁngerprint (orange solid line) is
calibrated to have at most four activated cells (green dotted
line) at any given point of time. (b) The resultant calibrated
ﬁngerprint with at most four activated cells.
unknown to the adversary. Hence, the main goal of this attack
is to identify the path on which the ﬁngerprint fu is obtained.
Fingerprinting module (in (1) Reconnaissance phase). In
the reconnaissance phase, the adversary uses her mobile
phone with an app [27] to directly access the messages re-
ceived from the primary cell. She simultaneously downloads
a large ﬁle to activate a maximum number of secondary cells
and the app reads the activation bitmap along with the conﬁg-
uration messages. By counting the number of activated cells
in the activation bitmap while walking a designated path, the
adversary obtains the labeled ﬁngerprint of the path.
Fingerprinting module (in (2) Attack phase). In the attack
phase, the adversary obtains the ﬁngerprints differently by
reading the public scheduling channel of the primary cell. As
the public scheduling channel is broadcast in clear by the
primary cell, the adversary can passively read the activation
bitmap information as long as she is in the reception cover-
age of the victim’s primary cell. An adversary can utilize the
open-source projects (e.g., srsLTE ( [6]) to record the entire
downlink signal for the duration (e.g., 2 minutes) of a walk,
and read the bitmaps in an ofﬂine manner. We use the Mat-
lab LTE Toolbox [28] to read the LTE samples and decode
PDCCH and PDSCH. It takes 90 milliseconds on average
to decode a PDCCH and a corresponding PDSCH (i.e., one
subframe) for a single UE. Overall, it takes about 5.6 minutes
for reading a ﬁngerprint of a single victim UE when decoding
multiple subframes in parallel with a 32-core machine.
Calibration module. Before this comparison though, we ﬁrst
calibrate all the labeled ﬁngerprints with the maximum num-
ber of activated secondary cells observed in the victim’s ﬁn-
gerprint. For this, we cap all the labeled ﬁngerprints with
the maximum CA value of the victim’s ﬁngerprint. For ex-
ample, if the maximum number of activated secondary cells
in the victim’s ﬁngerprint is four, then we calibrate all the
labeled ﬁngerprints to have a maximum of four activated sec-
ondary cells at any given point of time; see an example in
Figure 5(a) and 5(b). We perform this calibration to adjust
the labeled ﬁngerprints as close to the victim’s ﬁngerprints
in the cases of the victim’s low downlink usage or restricted
device capabilities.
Comparison module. Upon calibration, we input the cali-
6 6 6
P1, W1
6 6
6 6 6
6 6
P1, W1
5 5 5
4 4
5 5 5
4 4
P1, W2
6
5 5
5 5
6
3 3 3
3 3
P2, W3
2 2 2
Cumulative distance: 
4 4 4 4
1 1
1-> 2-> 2-> 2-> 2-> 2-> 2-> 2-> 2->  2
3-> 6-> 9-> 12-> 15-> 18-> 21-> 24-> 27-> 30
Final distance
Final distance
(a) two walks on the same path
(b) two walks on different paths
Figure 6: Illustration of absolute-value DTW. With the
absolute-value DTW, we correctly identify the two walks
on the same path; i.e., the distance between W1 and W2 in (a)
is smaller than the distance between W1 and W3 in (b).
brated labeled ﬁngerprints and the victim’s ﬁngerprint into
the comparison module. This module has two main tasks.
First, it computes each of the comparison distances. Second,
it selects the smallest comparison distance and outputs the
corresponding path as the identiﬁed victim’s path, ˆp. That is,
we compute ˆp = arg
p
min dist( f w
p , fu).
We implement the distance function dist(·) for comparing
the distance using a modiﬁed version of DTW [29]. This
enables SLIC to adequately compare a pair of ﬁngerprints
of the same path that vary slightly due to several reasons,
including non-identical walking speeds and patterns. It ﬁnds
the best alignment between the two ﬁngerprints by warping or
stretching the time axis. It works by computing a cumulative
distance between each pair of side-channel values of the two
ﬁngerprints to ﬁnally obtain DTW distance between the pair.
For example, Figure 6(a) depicts the mapping between side-
channel values of two walks, W1 and W2. It depicts that the
4th side-channel value (i.e., 5) in W2 is stretched to map with
the 4th and the 5th value in W1. The plot also depicts the
minimum cumulative distance computed for each matching
pair to ﬁnally obtain the minimum ﬁnal distance of 2 (in red).
Note that, unlike the standard DTW technique where the
amplitude of the data is considered as noise, the amplitude of
our data (i.e., the number of transmitting secondary cells) is
the important side-channel information. Hence, we do not nor-
malize the amplitude of our data because, otherwise, we may
lose the most critical information in the side channel; namely,
the physical location information. We call this absolute-value
DTW. Figure 6 illustrates the absolute-value DTW mapping
between ﬁngerprints of walk W1, W2 on the same path P1 and
W1, W3 on different paths P1 and P2. The ﬁgure depicts that the
cumulative distance computed for each pair of side-channel
values of W1, W2 does not increase due to the high similarity
in their values. This similarity is correctly reﬂected in the
ﬁnal distance which is a low value of 2. However, the ﬁnal
distance of W1 and W3 is 30 (>2) indicating the walks to be
less similar than W1, W2. Thus, W1 and W2 are correctly iden-
tiﬁed to be belonging to the same path. If the data were to be