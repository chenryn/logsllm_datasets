### Sk3wlDbg: Emulating Many Things with IDA

**Speaker: Chris Eagle (Sk3wl 0f r00t)**

**Disclaimer:**
- The views and opinions expressed here are my own and do not necessarily reflect those of my employer.

**About Me:**
- Senior Lecturer in Computer Science
- Computer Security Researcher
- Reverse Engineer
- Experienced Capture the Flag (CTF) Player
- Performer of advanced IDA tricks

**Introduction:**
- CPU emulators are valuable tools in various scenarios:
  - System design before hardware is available
  - Running code from obsolete platforms
  - Studying code without setting up a full hardware system
- Some emulators go beyond just the CPU to emulate entire systems, including hardware.

**Goals:**
- To make a lightweight CPU emulator available in a static reverse engineering context.
- To temporarily step away from reading disassembly to confirm behavior.
- To incorporate the results of computations back into static analysis.

**End Result: Sk3wlDbg**
- A lightweight emulator integrated into a disassembler:
  - Disassembler: IDA Pro
  - Emulator: Unicorn Engine

**IDA Pro:**
- A commercial disassembler that supports many processor families.
- Integrated debugger for x86 and ARM targets.
- Includes a decompiler.

**Unicorn Engine:**
- Announced at BlackHat USA 2015 by the same team behind Capstone.
- Website: [http://www.unicorn-engine.org/](http://www.unicorn-engine.org/)
- Based on QEMU, it supports multiple architectures: x86, x86-64, ARM, ARM64, Sparc, MIPS, M68k.
- Related projects can be found at: [http://www.unicorn-engine.org/showcase/](http://www.unicorn-engine.org/showcase/)

**Other Emulators:**
- **Bochs:**
  - A highly portable open-source IA-32 (x86) PC emulator written in C++.
  - Website: [http://bochs.sourceforge.net/](http://bochs.sourceforge.net/)
- **QEMU:**
  - A generic and open-source machine emulator and virtualizer.
  - Website: [http://www.qemu.org](http://www.qemu.org)

**Emulators and IDA Pro:**
- **2003: ida-x86emu**
  - For deobfuscating x86 binaries.
- **2009: Hex-Rays adds Bochs "debugger" module**
- **2014: msp430 for use with microcorruption**
  - Website: [https://microcorruption.com](https://microcorruption.com)
- **2016: Unicorn integration**
  - Integration was done because it was feasible and beneficial.

**Rationale:**
- Initially considered QEMU and Bochs when writing ida-x86emu, but they were too heavyweight.
- The Unicorn team did the heavy lifting, making it more accessible and versatile.

**Implementation Choices:**
- **Option 1: Emulate over the IDA database itself using the database as backing memory.**
  - This is what ida-x86emu does.
  - Forces changes on the database with no undo option.
- **Option 2: Leverage the IDA plugin architecture to build a debugger module.**
  - This is what IDA’s Bochs debugger module does.

**Result:**
- Many hours of development, leading to an unhappy wife.
- Mostly undocumented IDA plugin interface.
- Mostly untested emulator framework.
- **It’s Alive!**
  - Sub-classed IDA debugger_t for all supported Unicorn CPU types.
  - Simple ELF and PE loaders map files into Unicorn.
  - Fallback loader copies IDA sections into Unicorn.

**Integration Issues:**
- IDA remains a 32-bit executable.
- Can only interface with 32-bit libraries.
- Unicorn has limited support for 32-bit builds.
- Unicorn's underlying QEMU code depends on glib, complicating use on Windows.

**Demo:**
- The demo is very alpha and may contain bugs, which could be from Unicorn or my implementation.

**The Way Forward:**
- Improve the user interface for launching the emulator.
- Add extensible hooking for library functions and system calls.
- Option to load shared libraries into emulation along with the executable loaded in IDA.

**Where to Get It:**
- GitHub: [https://github.com/cseagle/sk3wldbg](https://github.com/cseagle/sk3wldbg)

**Questions?**
- **Contact Information:**
  - Email: cseagle @ gmail . com
  - Twitter: @sk3wl