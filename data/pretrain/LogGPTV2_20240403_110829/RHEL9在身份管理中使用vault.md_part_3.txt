:::
本节介绍身份管理 (IdM) 用户如何使用 Ansible playbook
创建包含一个或多个私有密码库的 vault
容器，以安全地存储敏感信息。在以下步骤中使用的示例中，[**idm_user**]{.strong}
用户创建名为 [**my_vault**]{.strong}
的标准类型库。标准密码库类型确保无需 [**idm_user**]{.strong}
在访问该文件时进行身份验证。[**idm_user**]{.strong} 能够从用户登录的任何
IdM 客户端检索 文件。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包，这是您在该流程中执行步骤的主机。
-   您知道 [**idm_user**]{.strong} 的密码。
:::
::: orderedlist
**步骤**
1.  导航到 `/usr/share/doc/ansible-freeipa/playbooks/vault`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/vault
    ```
2.  创建一个清单文件，如 [**inventory.file**]{.strong} ：
    ``` literallayout
    $ touch inventory.file
    ```
3.  打开 [**inventory.file**]{.strong}，并在 `[ipaserver]`{.literal}
    部分中定义您要配置的 IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
4.  生成 [**ensure-standard-vault-is-present.yml**]{.strong} Ansible
    playbook 文件的副本。例如：
    ``` literallayout
    $ cp ensure-standard-vault-is-present.yml ensure-standard-vault-is-present-copy.yml
    ```
5.  打开 [**ensure-standard-vault-is-present-copy.yml**]{.strong}
    文件进行编辑。
6.  通过在 `ipavault`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_principal`{.literal} 变量设置为
        [**idm_user**]{.strong}。
    -   将 `ipaadmin_password`{.literal} 变量设置为
        [**idm_user**]{.strong} 密码。
    -   将 `user`{.literal} 变量设置为 [**idm_user**]{.strong}。
    -   将 `name`{.literal} 变量设置为 [**my_vault**]{.strong}。
    -   将 `vault_type`{.literal} 变量设置为 [**standard**]{.strong}。
        对于当前示例为修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Tests
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      - ipavault:
          ipaadmin_principal: idm_user
          ipaadmin_password: idm_user_password
          user: idm_user
          name: my_vault
          vault_type: standard
    ```
7.  保存这个文件。
8.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory.file ensure-standard-vault-is-present-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-idm-user-vaults-storing-and-retrieving-secrets_working-with-vaults-in-identity-management.html#archiving-a-secret-in-a-standard-user-vault-in-idm-using-ansible_using-ansible-to-manage-idm-user-vaults-storing-and-retrieving-secrets}使用 Ansible 将 secret 归档到 IdM 中的标准用户库中 {.title}
:::
本节介绍身份管理 (IdM) 用户如何使用 Ansible playbook
将敏感信息存储在个人密码库中。在使用的示例中，[**idm_user**]{.strong}
用户在名为 [**my_vault**]{.strong} 的库中归档含有名为
[**password.txt**]{.strong} 的敏感信息的文件。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包，这是您在该流程中执行步骤的主机。
-   您知道 [**idm_user**]{.strong} 的密码。
-   [**idm_user**]{.strong} 是所有者，或者至少是 [**my_vault**]{.strong}
    的成员用户。
-   您可以访问 [**password.txt**]{.strong}，这是要在
    [**my_vault**]{.strong} 中存档的机密。
:::
::: orderedlist
**步骤**
1.  导航到 `/usr/share/doc/ansible-freeipa/playbooks/vault`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/vault
    ```
2.  打开清单文件，并确保 `[ipaserver]`{.literal} 部分中列出了您要配置的
    IdM 服务器。例如，要指示 Ansible 配置
    [**server.idm.example.com**]{.strong}，请输入：
    ``` literallayout
    [ipaserver]
    server.idm.example.com
    ```
3.  制作 [**data-archive-in-symmetric-vault.yml**]{.strong} Ansible
    playbook 文件的副本，但将\"symmetric\"替换为 \"standard\"。例如：
    ``` literallayout
    $ cp data-archive-in-symmetric-vault.yml data-archive-in-standard-vault-copy.yml
    ```
4.  打开 [**data-archive-in-standard-vault-copy.yml**]{.strong}
    文件进行编辑。
5.  通过在 `ipavault`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_principal`{.literal} 变量设置为
        [**idm_user**]{.strong}。
    -   将 `ipaadmin_password`{.literal} 变量设置为
        [**idm_user**]{.strong} 密码。
    -   将 `user`{.literal} 变量设置为 [**idm_user**]{.strong}。
    -   将 `name`{.literal} 变量设置为 [**my_vault**]{.strong}。
    -   将 `in`{.literal} 变量设置为包含敏感信息的文件的完整路径。
    -   将 `action`{.literal} 变量设置为 [**member**]{.strong}。
        对于当前示例为修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Tests
      hosts: ipaserver
      become: true
      gather_facts: false
      tasks:
      - ipavault:
          ipaadmin_principal: idm_user
          ipaadmin_password: idm_user_password
          user: idm_user
          name: my_vault
          in: /usr/share/doc/ansible-freeipa/playbooks/vault/password.txt
          action: member
    ```
6.  保存这个文件。
7.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory.file data-archive-in-standard-vault-copy.yml
    ```
:::
:::
::: section
::: titlepage
# []{#using-ansible-to-manage-idm-user-vaults-storing-and-retrieving-secrets_working-with-vaults-in-identity-management.html#retrieving-a-secret-from-a-standard-user-vault-in-idm-using-ansible_using-ansible-to-manage-idm-user-vaults-storing-and-retrieving-secrets}使用 Ansible 从 IdM 中的标准用户库检索 secret {.title}
:::
本节介绍身份管理 (IdM) 用户如何使用 Ansible playbook
从用户个人密码库检索机密。在以下步骤中使用的示例中，[**idm_user**]{.strong}
用户从名为 [**my_vault**]{.strong}
的标准类型库检索包含敏感数据的文件，并检索名为 [**host01**]{.strong} 的
IdM 客户端。[**idm_user**]{.strong}
在访问该文件时不必进行身份验证。[**idm_user**]{.strong} 可以使用 Ansible
从安装 Ansible 的任何 IdM 客户端检索 文件。
::: itemizedlist
**先决条件**
-   您已在 Ansible 控制器上安装了
    [ansible-freeipa](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/installing_identity_management/index#installing-the-ansible-freeipa-package_server-ansible){.link}
    软件包。这是执行流程中步骤的主机。
-   您知道 [**idm_user**]{.strong} 的密码。
-   [**idm_user**]{.strong} 是 [**my_vault**]{.strong} 的所有者。
-   [**idm_user**]{.strong} 已将 secret 存储在 [**my_vault**]{.strong}
    中。
-   Ansible 可以写入要检索该 secret 的 IdM 主机上的 目录。
-   [**idm_user**]{.strong} 可以从要检索 secret 的 IdM 主机上的
    目录读取。
:::
::: orderedlist
**步骤**
1.  导航到 `/usr/share/doc/ansible-freeipa/playbooks/vault`{.literal}
    目录：
    ``` literallayout
    $ cd /usr/share/doc/ansible-freeipa/playbooks/vault
    ```
2.  打开清单文件，并在一个明确定义的部分中提到您要检索该 secret 的 IdM
    客户端。例如，要指示 Ansible 在
    [**host01.idm.example.com**]{.strong} 上检索 secret，请输入：
    ``` literallayout
    [ipahost]
    host01.idm.example.com
    ```
3.  生成 [**retrive-data-symmetric-vault.yml**]{.strong} Ansible
    playbook 文件的副本。将 \"symmetric\" 替换为 \"standard\"。例如：
    ``` literallayout
    $ cp retrive-data-symmetric-vault.yml retrieve-data-standard-vault.yml-copy.yml
    ```
4.  打开 [**retrieve-data-standard-vault.yml-copy.yml**]{.strong}
    文件进行编辑。
5.  通过将 `hosts`{.literal} 变量设置为 [**ipahost**]{.strong} 来调整
    文件。
6.  通过在 `ipavault`{.literal} 任务部分设置以下变量来调整文件：
    ::: itemizedlist
    -   将 `ipaadmin_principal`{.literal} 变量设置为
        [**idm_user**]{.strong}。
    -   将 `ipaadmin_password`{.literal} 变量设置为
        [**idm_user**]{.strong} 密码。
    -   将 `user`{.literal} 变量设置为 [**idm_user**]{.strong}。
    -   将 `name`{.literal} 变量设置为 [**my_vault**]{.strong}。
    -   将 `out`{.literal} 变量设置为您要将 secret
        导出到的文件的完整路径。
    -   将 `state`{.literal} 变量设置为 [**retrieve**]{.strong}。
        对于当前示例为修改过的 Ansible playbook 文件：
    :::
    ``` literallayout
    ---
    - name: Tests
      hosts: ipahost
      become: true
      gather_facts: false
      tasks:
      - ipavault:
          ipaadmin_principal: idm_user
          ipaadmin_password: idm_user_password
          user: idm_user
          name: my_vault
          out: /tmp/password_exported.txt
          state: retrieved
    ```
7.  保存这个文件。
8.  运行 playbook：
    ``` literallayout
    $ ansible-playbook -v -i inventory.file retrieve-data-standard-vault.yml-copy.yml
    ```
:::
::: orderedlist
**验证步骤**
1.  以 [**user01**]{.strong} 身份通过 `SSH`{.literal} 连接到
    [**host01**]{.strong}：
    ``` literallayout
    $ ssh PI:EMAIL
    ```
2.  查看 Ansible playbook 文件中 `out`{.literal} 变量指定的文件：
    ``` literallayout
    $ vim /tmp/password_exported.txt
    ```
:::
现在，您可以看到导出的 secret。
::: itemizedlist
-   有关使用 Ansible 管理 IdM vaults 和用户 secret 以及 playbook
    变量的更多信息，请参阅 `/usr/share/doc/ansible-freeipa/`{.literal}
    目录中的 README-vault.md Markdown 文件，和
    `/usr/share/doc/ansible-freeipa/playbooks/vault/`{.literal}
    目录中的示例 playbook。
:::
:::
:::
[]{#managing-idm-service-vaults-storing-and-retrieving-secrets_working-with-vaults-in-identity-management.html}
::: chapter
::: titlepage
# []{#managing-idm-service-vaults-storing-and-retrieving-secrets_working-with-vaults-in-identity-management.html#managing-idm-service-vaults-storing-and-retrieving-secrets_working-with-vaults-in-identity-management}第 4 章 管理 IdM 服务 secret：存储和检索 secret {.title}
:::
本节介绍管理员可以如何使用 `ansible-freeipa`{.literal} `vault`{.literal}
模块安全地将服务 secret 存储在集中式位置。