(cid:48)
2 ← DecSE(k(cid:48), ˜ct
d(cid:48)
checks fails. Otherwise, let x1 ← H1((m, N1, H1, N2, H2)), x(cid:48)
H2((m, N1, H1, N2, H2)), x(cid:48)
2 ← (y2(x(cid:48)−1
r(cid:48)
))d2 mod N2.
2 = ⊥.
· T
4) Return ⊥ if h1 (cid:54)= H1((m(cid:48), N1, H1, N2, H2))r(cid:48)e
Finally, return r(cid:48) ← (r(cid:48)
2
2
1, r(cid:48)
2).
2 ← H2((m(cid:48), N1, H1, N2, H2)), y2 ← x2re
1 mod N1 and h2 = H2((m, N1, H1, N2, H2))re
2 mod N2, compute r(cid:48)
1 ← H1((m(cid:48), N1, H1, N2, H2)), y1 ← x1re
1 mod N1 or h2 (cid:54)= H2((m(cid:48), N1, H1, N2, H2))r(cid:48)e
2 mod N2.
· K(cid:48), and set ct(cid:48) ← (ct(cid:48)
0, ct(cid:48)
1, . . . , ct(cid:48)
(cid:48)
(cid:96), ˆct
). If ct (cid:54)= ct(cid:48) return ⊥. Otherwise compute
2 mod N2 and return ⊥,
1 ← (y1(x(cid:48)−1
if any of the
1 mod N1 as well as x2 ←
))d1 mod N1, and ﬁnally
1
Scheme 3: Concrete construction of a PCH
our challenging goal, to realize this functionality entirely by
means of cryptography, in mind, we introduce the notion of
policy-based chameleon-hashes (PCHs). This notion general-
izes chameleon-hashes in the sense that hashing additionally
takes a policy as input and collision ﬁnding is much more ﬁne-
grained than in existing chameleon-hashing, i.e., a collision can
only be found by users satisfying the policy used during hash-
ing. We rigorously model the security and present a generic
11
Fig. 5: Using a PCH for transaction-level rewrites
construction of this primitive from a CP-ABE scheme and a
modiﬁed CHET, and provide ﬁrst implementation results.
Acknowledgments. We thank the anonymous reviewers for
their helpful comments. The third and fourth author have been
supported by EU’s Horizon 2020 ECSEL Joint Undertaking
project SECREDAS under grant agreement No 783119.
REFERENCES
[1] S. Agrawal and M. Chase, “FAME: Fast attribute-based message en-
cryption,” in ACM CCS 17, B. M. Thuraisingham, D. Evans, T. Malkin,
and D. Xu, Eds. ACM Press, Oct. / Nov. 2017, pp. 665–682.
J. A. Akinyele, C. Garman, I. Miers, M. W. Pagano, M. Rushanan,
M. Green, and A. D. Rubin, “Charm: a framework for rapidly proto-
typing cryptosystems,” Journal of Cryptographic Engineering, vol. 3,
no. 2, pp. 111–128, 2013.
[2]
[3] E. Androulaki, A. Barger, V. Bortnikov, C. Cachin, K. Christidis,
A. D. Caro, D. Enyeart, C. Ferris, G. Laventman, Y. Manevich,
S. Muralidharan, C. Murthy, B. Nguyen, M. Sethi, G. Singh, K. Smith,
A. Sorniotti, C. Stathakopoulou, M. Vukolic, S. W. Cocco, and J. Yel-
lick, “Hyperledger fabric: A distributed operating system for permis-
sioned blockchains,” CoRR, 2018.
[4] G. Ateniese, D. H. Chou, B. de Medeiros, and G. Tsudik, “Sanitizable
signatures,” in ESORICS 2005, ser. LNCS, S. D. C. di Vimercati, P. F.
Syverson, and D. Gollmann, Eds., vol. 3679.
Springer, Heidelberg,
Sep. 2005, pp. 159–177.
[5] G. Ateniese and B. de Medeiros, “On the key exposure problem
in chameleon hashes,” in Security in Communication Networks, 4th
International Conference, SCN 2004, 2004.
[6] G. Ateniese, B. Magri, D. Venturi, and E. R. Andrade, “Redactable
blockchain - or - rewriting history in bitcoin and friends,” in 2017 IEEE
European Symposium on Security and Privacy, EuroS&P 2017, 2017.
[7] C. Badertscher, C. Matt, and U. Maurer, “Strengthening access control
encryption,” in ASIACRYPT 2017, Part I, ser. LNCS, T. Takagi and
T. Peyrin, Eds., vol. 10624.
Springer, Heidelberg, Dec. 2017, pp.
502–532.
[8] P. S. L. M. Barreto, B. Lynn, and M. Scott, “Constructing elliptic curves
with prescribed embedding degrees,” in SCN 02, ser. LNCS, S. Cimato,
C. Galdi, and G. Persiano, Eds., vol. 2576. Springer, Heidelberg, Sep.
2003, pp. 257–267.
[9] P. S. L. M. Barreto and M. Naehrig, “Pairing-friendly elliptic curves
of prime order,” in SAC 2005, ser. LNCS, B. Preneel and S. Tavares,
Eds., vol. 3897. Springer, Heidelberg, Aug. 2006, pp. 319–331.
[10] M. T. Beck, J. Camenisch, D. Derler, S. Krenn, H. C. P¨ohls, K. Samelin,
and D. Slamanig, “Practical strongly invisible and strongly accountable
sanitizable signatures,” in ACISP 17, Part I, ser. LNCS, J. Pieprzyk
and S. Suriadi, Eds., vol. 10342. Springer, Heidelberg, Jul. 2017, pp.
437–452.
[11] A. Beimel, “Secure schemes for secret sharing and key distribution,” in
PhD thesis, 1996.
[12] M. Bellare, C. Namprempre, D. Pointcheval, and M. Semanko, “The
one-more-RSA-inversion problems and the security of Chaum’s blind
signature scheme,” Journal of Cryptology, vol. 16, no. 3, pp. 185–215,
Jun. 2003.
[13] M. Bellare and P. Rogaway, “Random oracles are practical: A paradigm
for designing efﬁcient protocols,” in ACM CCS 93, V. Ashby, Ed. ACM
Press, Nov. 1993, pp. 62–73.
J. Bethencourt, A. Sahai, and B. Waters, “Ciphertext-policy attribute-
based encryption,” in 2007 IEEE Symposium on Security and Privacy.
IEEE Computer Society Press, May 2007, pp. 321–334.
[14]
[15] C. Brzuska, M. Fischlin, T. Freudenreich, A. Lehmann, M. Page,
J. Schelbert, D. Schr¨oder, and F. Volk, “Security of sanitizable sig-
natures revisited,” in PKC 2009, ser. LNCS, S. Jarecki and G. Tsudik,
Eds., vol. 5443. Springer, Heidelberg, Mar. 2009, pp. 317–336.
J. Camenisch, D. Derler, S. Krenn, H. C. P¨ohls, K. Samelin, and D. Sla-
manig, “Chameleon-hashes with ephemeral trapdoors - and applications
to invisible sanitizable signatures,” in Public-Key Cryptography - PKC
2017., 2017.
[16]
[17] M. Chase, “Multi-authority attribute based encryption,” in TCC 2007,
Springer, Heidelberg, Feb.
ser. LNCS, S. P. Vadhan, Ed., vol. 4392.
2007, pp. 515–534.
J. Chen, R. Gay, and H. Wee, “Improved dual system ABE in prime-
order groups via predicate encodings,” in EUROCRYPT 2015, Part II,
ser. LNCS, E. Oswald and M. Fischlin, Eds., vol. 9057.
Springer,
Heidelberg, Apr. 2015, pp. 595–624.
[18]
[19] X. Chen, F. Zhang, and K. Kim, “Chameleon hashing without key
exposure,” in ISC, 2004.
[20] R. Cramer and V. Shoup, “Design and analysis of practical public-key
encryption schemes secure against adaptive chosen ciphertext attack,”
SIAM Journal on Computing, vol. 33, no. 1, pp. 167–226, 2003.
I. Damg˚ard, H. Haagh, and C. Orlandi, “Access control encryption:
Enforcing information ﬂow with cryptography,” in TCC 2016-B, Part II,
ser. LNCS, M. Hirt and A. D. Smith, Eds., vol. 9986.
Springer,
Heidelberg, Oct. / Nov. 2016, pp. 547–576.
[21]
[22] A. L. Ferrara, G. Fuchsbauer, and B. Warinschi, “Cryptographically
enforced RBAC,” in 2013 IEEE 26th Computer Security Foundations
Symposium, 2013, pp. 115–129.
[23] E. Fujisaki and T. Okamoto, “Secure integration of asymmetric and
symmetric encryption schemes,” in CRYPTO’99, ser. LNCS, M. J.
Wiener, Ed., vol. 1666.
Springer, Heidelberg, Aug. 1999, pp. 537–
554.
[24] S. Garg, C. Gentry, S. Halevi, A. Sahai, and B. Waters, “Attribute-
based encryption for circuits from multilinear maps,” in CRYPTO 2013,
Part II, ser. LNCS, R. Canetti and J. A. Garay, Eds., vol. 8043.
Springer, Heidelberg, Aug. 2013, pp. 479–499.
[25] S. Gorbunov, V. Vaikuntanathan, and H. Wee, “Attribute-based encryp-
tion for circuits,” in 45th ACM STOC, D. Boneh, T. Roughgarden, and
J. Feigenbaum, Eds. ACM Press, Jun. 2013, pp. 545–554.
[26] V. Goyal, O. Pandey, A. Sahai, and B. Waters, “Attribute-based en-
cryption for ﬁne-grained access control of encrypted data,” in ACM
CCS 06, A. Juels, R. N. Wright, and S. Vimercati, Eds. ACM Press,
Oct. / Nov. 2006, pp. 89–98, available as Cryptology ePrint Archive
Report 2006/309.
12
[27] V. Hu, D. Ferraiolo, R. Kuhn, A. Schnitzer, K. Sandlin, R. Miller, and
K. Scarfone, “Guide to attribute based access control (abac) deﬁnition
and considerations,” NIST Special Publication 800-162, Tech. Rep.,
2014.
[28] M. Karchmer and A. Wigderson, “On span programs,” in Proceedings
of Structures in Complexity Theory, 1993, pp. 102–111.
[29] S. Kim and D. J. Wu, “Access control encryption for general policies
from standard assumptions,” in ASIACRYPT 2017, Part I, ser. LNCS,
T. Takagi and T. Peyrin, Eds., vol. 10624. Springer, Heidelberg, Dec.
2017, pp. 471–501.
[30] V. Koppula and B. Waters, “Realizing chosen ciphertext security
generically in attribute-based encryption and predicate encryption,”
Cryptology ePrint Archive, Report 2018/847, 2018, https://eprint.iacr.
org/2018/847.
[31] H. Krawczyk and T. Rabin, “Chameleon signatures,” in Proceedings of
the Network and Distributed System Security Symposium, NDSS 2000,
San Diego, California, USA, 2000.
[32] S. Krenn, H. C. P¨ohls, K. Samelin, and D. Slamanig, “Chameleon-
long-term trapdoors and their applications,” in
hashes with dual
AfricaCrypt, 2018.
[33] L. Lamport, R. E. Shostak, and M. C. Pease, “The byzantine generals
problem,” ACM Trans. Program. Lang. Syst., vol. 4, no. 3, pp. 382–401,
1982.
[34] A. Lewko and B. Waters, “Decentralizing attribute-based encryption,”
Cryptology ePrint Archive, Report 2010/351, 2010, http://eprint.iacr.
org/2010/351.
[35] A. B. Lewko and B. Waters, “Decentralizing attribute-based encryp-
tion,” in EUROCRYPT 2011, ser. LNCS, K. G. Paterson, Ed., vol. 6632.
Springer, Heidelberg, May 2011, pp. 568–588.
[36] R. C. Merkle, “A certiﬁed digital signature,” in Advances in Cryptology
- CRYPTO ’89, 1989.
I. Puddu, A. Dmitrienko, and S. Capkun, “µchain: How to forget
without hard forks,” IACR Cryptology ePrint Archive, vol. 2017, p.
106, 2017.
[37]
[38] A. Sahai and B. R. Waters, “Fuzzy identity-based encryption,” in
EUROCRYPT 2005, ser. LNCS, R. Cramer, Ed., vol. 3494. Springer,
Heidelberg, May 2005, pp. 457–473.
[39] B. Waters, “Ciphertext-policy attribute-based encryption: An expressive,
efﬁcient, and provably secure realization,” in PKC 2011, ser. LNCS,
D. Catalano, N. Fazio, R. Gennaro, and A. Nicolosi, Eds., vol. 6571.
Springer, Heidelberg, Mar. 2011, pp. 53–70.
A. Security Properties of CHs and CHETs
APPENDIX
We now present the formal security deﬁnitions for CHs and
CHETs.
1) Security of CHs: Below we present security notions of
chameleon-hashes.
Strong Indistinguishability. Indistinguishability requires that
the randomnesses r does not reveal if it was obtained through
HashCH or AdaptCH. The messages are chosen by the ad-
versary. We, however, relax the perfect indistinguishability
deﬁnition of Brzuska et al. [15] to a computational version,
which is enough for most use-cases, including ours. However,
compared to the existing deﬁnition in [10], [16], [32], the
adversary is also allowed to know the secret key sk, but cannot
generate it.
Note that we need to implicitly return ⊥ in the
HashOrAdapt oracle (in case of an error), as the adversary may
try to enter a message m /∈ M, even if M = {0, 1}∗, which
makes the algorithm output ⊥. If we would not do this, the
adversary could trivially decide which case it sees. For similar
reasons these checks are also included in other deﬁnitions.
ExpSIndA,CH(κ)
PPch ← PPGenCH(1κ)
(skCH, pkCH) ← KGenCH(PPch)
b ← {0, 1}
a ← AHashOrAdaptCH(skCH,·,·,b)(skCH, pkCH)
where HashOrAdaptCH(skCH,·,·, b) on input m, m(cid:48):
(h, r) ← HashCH(pkCH, m(cid:48))
(h(cid:48), r(cid:48)) ← HashCH(pkCH, m)
r(cid:48)(cid:48) ← AdaptCH(skCH, m, m(cid:48), r(cid:48), h(cid:48))
if b = 0:
if b = 1:
return (h, r)
return (h(cid:48), r(cid:48)(cid:48))
return 1, if a = b
return 0
Fig. 6: CH Strong Indistinguishability
Deﬁnition 10 (Strong Indistinguishability). We deﬁne the ad-
vantage of an adversary A in the Ind experiment ExpIndA,PCH(κ)
as
AdvIndA,CH(κ) :=
ExpSIndA,CH(κ) = 1
(cid:12)(cid:12)(cid:12) .
(cid:105) − 1/2
(cid:104)
(cid:12)(cid:12)(cid:12)Pr
We say a CH scheme is indistinguishable, if AdvIndA,CH(κ) is
a negligible function in κ for all PPT adversaries A.
Collision-Resistance. Collision-resistance says, that even if an
adversary has access to an adapt oracle, it cannot ﬁnd any
collisions for messages other than the ones queried to the
adapt oracle. Note, this is an even stronger deﬁnition than
key-exposure freeness [5]: key-exposure freeness only requires
that one cannot ﬁnd a collision for some new “tag”, i.e., for
some auxiliary value for which the adversary has never seen
a collision.
ExpCRA,CH(κ)
PPch ← PPGenCH(1κ)
(skCH, pkCH) ← KGenCH(PPch)
Q ← ∅
(m∗, r∗, m(cid:48)∗, r(cid:48)∗, h∗) ← AAdapt(cid:48)
CH(skCH,·,·,·,·) on input m, m(cid:48), r, h:
(cid:48)
where Adapt
CH(skCH,·,·,·,·)(pkCH)
r(cid:48) ← AdaptCH(skCH, m, m(cid:48), r, h)
return ⊥, if r(cid:48) = ⊥
Q ← Q ∪ {m, m(cid:48)}
return r(cid:48)
return 1, if VerifyCH(pkCH, m∗, h∗, r∗) = VerifyCH(pkCH, m(cid:48)∗,
return 0
r(cid:48)∗, h∗) = 1 ∧ m(cid:48)∗ /∈ Q ∧ m∗ (cid:54)= m(cid:48)∗
Fig. 7: CH Collision-Resistance
Deﬁnition 11 (Collision-Resistance). We deﬁne the advantage
of an adversary A in the CR experiment ExpCRA,CH(κ) as
(cid:104)
(cid:105)
AdvCRA,CH(κ) := Pr
ExpCRA,CH(κ) = 1
.
We say that a CH scheme is collision-resistant, if the func-
tion AdvCRA,CH(κ) is a negligible function in κ for all PPT
adversaries A.
Deﬁnition 12 (Secure Chameleon-Hashes). We call a
chameleon-hash CH secure, if it is correct, indistinguishable,
and collision-resistant.
13
Note that we do not require the uniqueness property [16] in
the context of this paper which is why we omit the deﬁnition.
2) Security of CHETs: Subsequently we restate the security
properties of CHET schemes from [16], where we adapt the
notation to ours and also strengthen indistinguishability to
what we call strong indistinguishability and private collision