9
Clustered
Distributed
 350
 300
 250
 200
 150
 100
 50
)
z
H
(
)
%
0
6
(
F
 0
 0
 2
 4
 6
Number of Sources
 8
 10
 12
 14
Figure 12: The effect of aggregation of multiple sources at dif-
ferent phases.
We vary the phase from 1–200ms, representing the difﬁcultly
of attackers to start and remain synchronized. If Hypothesis 3 is
true, then changes in attacker phase should cause a corresponding
change in F (60%), but we observe F (60%) remains nearly con-
stant even when aggregated with an attacker with dissimilar phase
demonstrating that phase alone (Hypothesis 3) does not cause the
shift.
Finally we consider a variation on Hypothesis 3 and aggregate
multiple streams each slightly out of phase. To test this hypothesis
we aggregate shifted attack traces with the original attack trace to
simulate aggregation of multiple attackers at different phases. If
a(t) represents the packet arrival sequence in the original trace, we
generate the shifted trace by:
a3b(t) =
n(cid:2)
i=2
a(t + iφ)
(9)
We vary the number of attackers n from 2–15 with a 1ms phase
shift between each attacker.
If the hypothesis is true, then we
should observe a drop in F (60%) as the number of attacker in-
crease. Figure 12 plots the number of sources against F (60%)
when using packet traces from both Figures 9(a) and 10(a). In both
cases we observe a drop in the F (60%) as the number of sources
increase indicating that phase along with aggregation of multiple
sources is most likely the cause of localization of power in the
lower frequencies. This result is consistent with the attack trafﬁc
observed at Los Nettos and USC.
In summary, these experiments support our claims that: (a) High-
rate single-source attacks have an inherently linear cumulative spec-
trum. (b) High-rate multi-source attacks cannot maintain this lin-
earity; lower frequency components dominate due to aggregation
of multiple attackers starting out of phase.
(c) Cross trafﬁc can
decrease the prominence of individual frequencies, but the cumu-
lative spectrum is robust to its effects. While these results apply to
high-rate attackers, it is possible for attackers to affect their spectral
characteristics by changing their attack rate. We examine this issue
in the next section.
Although header analysis was successful at classifying 83% of
the attacks we observed, this percentage may drop as more so-
phisticated tools become available. Even though source addresses
are forged, currently most attack tools neglect randomizing the ID
ﬁeld. However, it is easy for attackers to spoof this ﬁeld and even
standard operating systems are randomizing the ID ﬁeld when the
packet is not fragmented to discourage OS ﬁngerprinting [12]. Fur-
ther, it may be possible to synchronize ID values in low volume
attacks using out-of-band communication to make it appear mono-
tonically increasing and evade correct classiﬁcation [11]. The use
of TTL is somewhat more robust (assuming stable routing), since
attack packets with very low TTL values will fail to reach the vic-
tim. Statistical analysis of TTL values may be helpful in determin-
ing attacker distance in spite of spooﬁng. Unfortunately usefulness
of this approach will be limited because a distance of a few hops
quickly encompasses much of the Internet. We expect evolution of
attack tools to increase dependence on more advanced classiﬁca-
tion techniques based on spectral content.
Even though none of the observed single-source attacks exhibit
an initial ramp-up, it can be easily generated by an attacker that
gradually increases the attack rate emulating a multi-source attack
and effectively triggering more complex response mechanisms. On
the other hand, in large multi-source attacks we believe an initial
ramp-up will be quite difﬁcult to conceal. The duration of the ramp-
up may vary based on the zombie clock skew and differences in the
zombie-victim network distance, but masking the ramp-up by ac-
counting for both sources of variability would require fair sophisti-
cation.
Spectral analysis is more robust to attacker manipulation than
header analysis. We believe the characteristics of high-rate attack
trafﬁc are inherent; they cannot be avoided by single- or multi-
source attackers sending at maximum rate. Further, it is not prac-
tical for a multi-source attacker to synchronize geographically dis-
tributed attackers to create spectral characteristics similar to single-
source attacks. Accomplishing comparable levels of synchroniza-
tion requires not only tight time synchronization between attacking
hosts but also measurement and accounting for the varying prop-
agation and queuing delay between each attacker and the victim.
It may be possible for a single-source attacker to masquerade as a
multi-source attack if it is willing to reduce its attack rate. A single-
source can generate packets in bursty, on-off patterns by introduc-
ing a delay between packets and creating dominant low frequency
contents in its spectrum. As future work we will investigate spectral
analysis techniques based on uneven sampling that will be more ro-
bust to such attack patterns [27] and study the effect of packet loss
and queuing on the attack spectra.
Finally, we consider the sensitivity of the 60% quantile used to
in attack classiﬁcation. The technique used in this paper is based
on testing for localization of power in lower frequency band (un-
der 200Hz). Any mid-range quantile can capture this characteristic
of the trace; our selection of 60% is somewhat arbitrary. To ver-
ify this we compared classiﬁcation of the attacks we captured and
found comparable results for quantiles between 45–65%. How-
ever, at very low or high quantiles (less than 40% or more than
70%) many attacks are incorrectly classiﬁed because the measure
becomes overly inﬂuenced by variance at either end of the spectra.
7. SENSITIVITY ANALYSIS
8. APPLICATIONS
Network security is an arms race: both attack tools and defenses
evolve in relation to each other. Thus an important consideration
of our framework is its robustness to improved attack tools. In fact,
our ramp-up and spectral analysis techniques were motivated by
limitations of header analysis in the face of packet spooﬁng.
There are several applications of our results, including automated
attack detection, developing synthetic models of attack trafﬁc and
inferring the amount of DoS attack activity in the Internet. Al-
though details of these applications are outside the scope of this
paper, we brieﬂy discuss each next.
10
8.1 Automating Attack Detection
A robust automatic attack detection tool is useful in guiding re-
sponse systems (both manual and automated) in installing ﬁlters [17,
25] or for use in aggregate congestion control for ﬂash crowds [21].
Although we use simple ﬁlters for ﬁrst-pass detection of an attack,
the approaches we develop help classify attacks as from single or
multiple sources. Discrimination between single and multi-source
attacks is useful in selecting the appropriate response mechanism
since some mechanisms are more expensive when dealing with
multiple attackers compared to single attackers (for example, trace-
back [31]). We developed an automated tool that takes the attack
trace and carries out spectral analysis to classify it. While this
demonstrates the feasibility of such a tool, but we have not yet inte-
grated this tool with other detection systems. We are also exploring
the possibility of developing attack proﬁles to identify similar at-
tack scenarios consisting of same the attack tool and zombies used
in repeated attacks.
8.2 Modeling Attacks
Many simulation studies of DoS attack detection and response
use fairly simple trafﬁc models such as constant bit-rate sources
with ﬁxed size packets. Such models fail to capture the nuances of
attack trafﬁc. Although real attack tools are easy to obtain and can
be used in a testbed, there remain questions about how to support
large numbers of attack machines and how to conﬁgure a testbed
to reproduce attacks similar to those in the wild. Clearly, to create
more realistic synthetic DoS trafﬁc both in simulation and testbeds,
we need a better understanding of attack dynamics.
To our knowledge there have been no published studies of de-
tailed characterization or models of DoS attack trafﬁc. Studies
based on back-scatter observe attacks indirectly, and thus do not
capture ﬁne-grained details of the attack dynamics [24]. Given the
many modes of failure an attack can cause (such as hardware fail-
ures, exploitation of software glitches, misconﬁguration), it is im-
portant to create faithful reproductions of real attacks. Although
not the focus of this paper, we include some statistics about the
kinds of attacks we see in the wild. Future work may use our tools
as part of a broader study to better characterize DoS attacks, laying
down the groundwork for the development of more realistic attack
models.
8.3 Inferring DoS Activity in the Internet
Using our detection tools, we captured 80 DoS attacks in Los
Nettos over ﬁve months. If we consider these attacks to be a sample
of DoS activity in the Internet as a whole, we can project attack ac-
tivity to the public Internet. Such a projection should be considered
extremely rough due to the small fraction of the Internet and the
relatively few attacks we observed, and the assumptions required
by such an estimation. However, we believe that the methodology
proposed below coupled with a larger future monitoring effort can
provide a reasonable Internet-wide estimate of attack counts.
To arrive at our rough projection, we ﬁrst compare the size of the
monitored address space to the Internet. We monitor about 0.105%
of the advertised Internet address space, determined by compar-
ing the size of the routing table advertised by Los Nettos to the
size of the advertised Internet address space as reported by Route
Views [22] on December 15, 2002. We assume that addresses are
consumed uniformly and that attacks are targeted uniformly in both
Los Nettos and the general Internet. Given these assumptions, we
can scale our observations to the Internet accordingly (multiplying
by a factor of 1900).
We observe DoS attacks that both transit and terminate in Los
Nettos. Since distributed DoS attacks depart from many sources to
11
Figure 13: Limitations when extrapolating Los Nettos DoS ac-
tivity to the Internet.
Month
In Los Nettos
July
Aug
Sept
Oct
Nov
transiting
18
12
10
10
9
terminating
6
1
5
0
6
In the Internet
terminating (projected)
11400
1800
9500
0*
11400
Table 6: Extrapolating Los Nettos DoS activity to the Internet.
attack a victim, we would expect that transiting attacks are more
prevalent than terminating attacks. For example, in Figure 13 we
monitor a quarter of the address space. If we measure unique vic-
tims of any attacks involving the shaded area, we observe 3 attacks
and project 12, overestimating by a factor of three. If instead we
observe only attacks terminating in the area, we get an accurate es-
timate of 4. In general, projections from transit trafﬁc identify an
upper-bound on the number of attacks, since it may overestimate by
the minimum of the scale-up factor or the number of distributed at-
tackers. Although, it is difﬁcult to quantify the false negative rate of
our detection mechanism, we believe it captures most large attacks
but misses many small attacks. Therefore, the number of attacks
observed can be considered a lower bound.
Based on these assumptions, Table 6 projects our observations
to the Internet as a whole. Clearly these projections are tentative,
since we know that there were at least 10 attacks in October but
we project none. One point of comparison is the work of Moore
et al. where they observe backscatter from 12,805 attacks in 3
weeks [24]. Direct comparison between their observation and ours
is extremely difﬁcult since the methodology and classes of counted
attacks are very different, but it is somewhat reassuring that both
their observation and our estimate are roughly the same order of
magnitude.
Although the observations are very rough and require many as-
sumptions, we believe this methodology will be useful at approx-
imating attack prevalence if we can increase the size and duration
of the monitored region. We are working on doing both.
9. CONCLUSION
This paper presented a framework to classify DoS attacks into
single- and multi-source attacks. In addition to using packet head-
ers to classify the attacks, we develop two new approaches: initial
ramp-up transients and spectral analysis. These approaches depend
only on information in the attack packet stream, and we believe the
spectral characteristics of attacks cannot be altered without reduc-
ing attack rates.
We evaluated our framework on 80 attacks captured from two
peering links at a moderate-size, regional ISP. We validated our
framework with attacks captured at a second monitoring site, and
through experiments with synthetic attacks on a wide-area network,
and real attack tools on an isolated testbed. We used experiments
and simulations to explain the underlying reasons for the difference
in attack characteristics.
DoS attacks are constantly evolving, and currently there is a
dearth of detailed information regarding attack dynamics. We sug-
gested several applications of the techniques developed in this pa-
per: to develop an automatic detection and response system based
on number of attackers, to enable ﬁne-grained analysis of attack
patterns and topologies, and to infer global DoS activity.
Acknowledgments
We would like to thank Jim Pepin, Walter Prue and Sanford George of Los
Nettos, and Brian Yamaguchi of USC, for helping us obtain traces, and
for discussions about handling DoS attacks. We would like to thank Kim-
berley Claffy, David Moore, Elizabeth Belding-Royer, Bing Wang, Don
Towsley, Deborah Estrin, and Colin Perkins for providing access to their
lab machines for our WAN experiments. Rohit Agarwal helped with the
testbed experiments and identifying attack tools. In addition we would like
to thank Craig Partridge, Edmond Jonckheere, and the anonymous review-
ers for their useful comments on the earlier version of this paper.
10. REFERENCES
[1] M. Allman, V. Paxson, and W. Stevens. TCP congestion control.
RFC 2581, Internet Request For Comments, April 1999.
[2] Paul Barford, Jeffery Kline, David Plonka, and Ron Amos. A signal
analysis of network trafﬁc anomalies. In Proceedings of the ACM
SIGCOMM Internet Measurement Workshop, Marseilles, France,
November 2002.
[3] Steven Bellovin. ICMP traceback messages. Work in Progress:
draft-bellovin-itrace-00.txt.
[4] Steven Bellovin. A technique for counting nated hosts. In
Proceedings of the ACM SIGCOMM Internet Measurement
Workshop, pages 112–208, Marseille, France, November 2002.
[5] George Box, Gwilym Jenkins, and Gregory Reinsel. Time series
analysis: forecasting and control. Prentice-Hall, Upper Saddle
River, New Jersey, 1994.
[6] Ronald Bracewell. The Fourier Transform and Its Applications.
Series in Electrical Engineering. McGraw-Hill, New York, NY,
1986.
[7] Andre Broido, Evi Nemeth, and kc Claffy. Spectroscopy of DNS
Update Trafﬁc. In Proceedings of the ACM SIGMETRICS, San
Diego, CA, June 2003.
[8] Hal Burch and Bill Cheswick. Tracing anonymous packets to their
approximate source. In Proceedings of the USENIX LISA, pages
319–327, New Orleans, USA, Decemeber 2000. USENIX.
[9] Chen-Mou Cheng, H.T. Kung, and Koan-Sin Tan. Use of spectral
analysis in defense against DoS attacks. In Proceedings of the IEEE
GLOBECOM, Taipei, Taiwan, 2002.
[10] David Dittirch. DDoS Attacks and Tools.
http://staff.washington.edu/dittrich/misc/ddos.
[11] Julio Escobar, Craig Partridge, and Debra Deutsch. Flow
Synchronization Protocol. ACM/IEEE Transactions on Networking,
2(2):111–121, April 1994.
[12] Fyodor. Remote OS detection via TCP/IP stack ﬁngerprinting.
http://www.insecure.org/nmap/, October 1998.
[13] Thomer M. Gil and Massimiliano Poletto. MULTOPS: A
Data-Structure for bandwidth attack detection. In Proceedings of the
USENIX Security Symposium, pages 23–38, Washington, DC, July
2001.
[14] Hevin Houle and George Weaver. Trends in denial of service
technology. CERT Coordination Center at Carnegie-Mellon
University, October 2001.
[15] Aleﬁya Hussain, John Heidemann, and Christos Papadopoulos. A
Framework for Classifying Denial of Service Attacks. Technical
Report ISI-TR-2003-569, USC/Information Sciences Institute,
February 2003.
[16] Van Jacobson, Craig Leres, and Steven McCanne. tcpdump - the
protocol packet cpature and dumper program.
http://www.tcpdmp.org.
[17] Peter Reiher Jelena Mirkovic, Greg Prier. Attacking DDoS at the
source. In Proceedings of the IEEE International Conference on
Network Protocols, Paris, France, November 2002.
[18] Purushotham Kamath, Kun chan Lan, John Heidemann, Joe
Bannister, and Joe Touch. Generation of high bandwidth network
trafﬁc traces. In In Proceedings of MASCOTS, pages 401–410, Fort
Worth, Texas, USA, October 2002. IEEE.
[19] Angelos D. Keromytis, Vishal. Misra, and Dan. Rubenstein. SOS:
Secure Overlay Services. In Proceedings of ACM SIGCOMM 2002,
August 2002.
[20] Los nettos-passing packets since 1988. http://www.ln.net.
[21] Ratul Mahajan, Steven M. Bellovin, Sally Floyd, John Ioannidis,
Vern Paxson, and Scott Shenker. Controlling high bandwidth
aggregates in the network. In ACM Computer Communication
Review, July 2001.
[22] D. Meyer. University of oregon Route Views Project. Advanced
Network Technology Center web site,
http://www.antc.uoregon.edu/route-views.
[23] Jeffrey C. Mogul. Observing TCP dynamics in real networks.
Technical Report 92.2, DEC Western Research Laboratory, April
1992.
[24] David Moore, Geoffrey Voelker, and Stefan Savage. Inferring
Internet denial of service activity. In Proceedings of the USENIX
Security Symposium, Washington, DC, USA, August 2001.
USENIX.
[25] Christos Papadopoulos, Robert Lindell, John Mehringer, Aleﬁya
Hussain, and Ramesh Govindan. COSSACK: Coordinated
Suppression of Simultaneous Attacks. In In Proceeding of Discex
III, Washington, DC, USC, April 2003.
[26] Kihong Park and Hijoo Lee. On the effectiveness of route-based
packet ﬁltering for DDoS attack preventation in power-law internets.
In Proceedings of the ACM SIGCOMM, pages 15–26, San Deigo
CA, August 2001. ACM.
[27] Craig Partridge, David Cousins, Alden Jackson, Rajesh Krishnan,
Tushar Saxena, and W. Timothy Strayer. Using signal proceesing to
analyze wireless data trafﬁc. In Proceedings of ACM workshop on
Wireless Security, pages 67–76, Atlanta, GA, September 2002.
[28] Vern Paxson. Bro: A system for detecting network intruders in
real-time. Computer Networks, 31(23–24):2435–2463, Decemeber
1999.
[29] Vern Paxson. An analysis of using reﬂectors for Distributed
Denial-of-Service Attacks. ACM Computer Communications Review
(CCR), 31(3), July 2001.
[30] Martin Roesch. Snort - lightweight intrusion detection for networks.
http://www.snort.org.
[31] Stefan Savage, David Wetherall, Anna Karlin, and Tom Anderson.
Practical network support for IP traceback. In Proceedings of the
ACM SIGCOMM Conference, pages 295–306, Stockholm, Sweeden,
August 2000. ACM.
[32] Alex C. Snoeren, Craig Partridge, Luis A. Sanchez, Christine E.
Jones, Fabrice Tchakountio Stephen T. Kent, and W. Timothy
Strayer. Hash-based ip traceback. In Proceedings of the ACM
SIGCOMM, pages 3–14, San Deigo CA, August 2001. ACM.
[33] Dawn X. Song and Adrian Perrig. Advanced and authenticated
marking schemes for IP traceback. In Proceedings of the IEEE
Infocom, Anchorage, Alaska, April 2001.
[34] Neil Spring, Ratul Mahajan, and David Wetherall. Measuring ISP
topologies with rocketfuel. In Proceedings of ACM/SIGCOMM ’02,
August 2002.
[35] Robert Stone. Centertrack: An IP overlay network for tracking DoS
ﬂoods. In Proceedings of the USENIX Security Symposium, pages
199–212, Denver, CO, USA, July 2000. USENIX.
[36] Ajay Tirumala, Feng Qin, Jon Dugan, Jim Ferguson, and Kevin
Gibbs. Iperf Version 1.6.5. http://dast.nlanr.net/Projects/Iperf/.
[37] Gene Trent and Mark Sake. WebSTONE: The ﬁrst generation in
HTTP server benchmarking.
[38] Haining Wang, Danlu Zhang, and Kang Shin. Detecting SYN
ﬂooding attacks. In Proceedings of the IEEE Infocom, New York,
NY, June 2002. IEEE.
[39] Zhi-Li Zhang, Vinay Ribeiro, Sue Moon, and Christophe Diot.
Small-time scaling behaviors of Internet backbone trafﬁc: An
empirical study. In Proceedings of the IEEE Infocom, San Francisco,
CA, April 2003.
12