# 技术分享：API安全架构之抽丝剥茧

## 译文声明
本文为翻译文章，原文来源：websec.io。译文仅供参考，具体内容及含义请以原文为准。
- 译者：阿诺斯基（[个人主页](http://bobao.360.cn/member/contribute?uid=2826612711)）
- 预估稿费：200RMB
- 投稿方式：发送邮件至linwei#360.cn 或 登录网页版在线投稿
- **相关链接**：
  - [API架构之概念初探](http://bobao.360.cn/learning/detail/4394.html)
  - [更多系列文章](https://websec.io/tagged/secureapi)

## 前言
这是构建安全API系列的第二部分。在[上一部分](https://websec.io/2017/04/14/Build-Secure-API-Part1.html)，我介绍了我们将要创建的安全API所需的基本概念和过程，以及将使用的工具。强烈建议读者先阅读第一部分再继续。

在这一部分中，我将从[Slim Framework](http://slimframework.com/)入手，深入探讨这些工具。选择Slim框架是因为它提供了简单的入门条件，并且可以快速上手。所有代码都可以放在一个文件中实现。

为了便于跟踪每篇文章中的更改，我[创建了一个存储库](https://github.com/psecio/secure-api)。每个分支对应于系列文章的每一部分，展示了每个教程的最终结果，方便读者参考。

此外，本系列文章将使用一些PHP包，因此你需要熟悉[Composer](https://getcomposer.org/)依赖管理工具。

## 关于Web服务器
虽然你可以设置自己的Web服务器来处理进入Slim应用程序的请求，但这里我们将使用PHP内置的[Web服务器](http://php.net/manual/en/features.commandline.webserver.php)。这非常适合测试和本地开发环境，但在生产环境中应选择更强大的Web服务器，如Apache或Nginx。

### 启动内置PHP服务器
1. 创建临时目录并添加`index.php`文件：
    ```bash
    mkdir www-tmp
    echo '' > test.php
    ```
2. 在`test.php`中调用`phpinfo()`函数，显示PHP配置选项。
3. 启动内置PHP服务器：
    ```bash
    php -S localhost:8000 test.php
    ```
4. 访问`http://localhost:8000`，查看phpinfo输出。

现在你知道如何使用内置服务器了，接下来我们可以安装Slim框架并开始构建API。

## 安装Slim框架
使用Composer安装Slim框架：
```bash
composer require slim/slim
```
执行该命令将安装Slim框架及其相关组件。如果安装成功，会生成自动加载文件和`composer.lock`文件。如有错误，请先调试后再继续。

## 创建我们的第一个路由
安装完成后，我们可以在`index.php`文件中定义第一个路由：
```php
require_once 'vendor/autoload.php';
$app = new \Slim\App();
$app->get('/', function() {
    echo 'It works!';
});
$app->run();
```
启动PHP内置服务器并访问`http://localhost:8000`，你会看到页面显示“It works!”。

## 使用配置
Slim框架的一个主要功能是通过依赖注入容器定义配置值和其他资源。我们可以通过自定义设置来更好地构建我们的API。这些配置针对Slim的处理程序，但其实现思路可以在任何框架中应用。

希望以上内容对你有所帮助！