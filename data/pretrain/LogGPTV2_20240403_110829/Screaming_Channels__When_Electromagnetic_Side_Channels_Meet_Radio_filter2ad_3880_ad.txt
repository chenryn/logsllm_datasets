lar, we focus on the attack’s applicability in real-world scenarios,
countermeasures, and directions for future work.
7.1 Real world applicability
The hardware requirements for carrying out radio attacks outside
lab environments are very moderate: successful attacks from shorter
distances are possible using a commodity WiFi antenna and a hob-
byist SDR like the HackRF [26]. Attacking from greater distances
will require more equipment, such as a highly directional antenna,
a low noise amplifier and a good SDR for collecting traces.
We have experimented under several radio propagation condi-
tions: cable only, radio propagation in home or office environment
and finally in an anechoic room designed for testing radio transmis-
sions at 2.4 GHz. Clearly an anechoic room provides ideal collection
conditions and allows to demonstrate the best environment con-
ditions for the attacker. The tests over a cable do not correspond
to any realistic threat model and are therefore mostly relevant
for development of the attacks. Finally, the results we presented
in a home/office environment show that attacks are possible in
a non controlled environment with an important volume of non
controlled interfering communications. Those interfering commu-
nications slow down the attack, increasing the amount of samples
that needs to be collected, and reducing the achievable distance, yet
the attack remains possible. It is likely that the results we present
in this paper can be improved, by applying more advanced attacks,
and by additional engineering optimizations regarding the collec-
tion on both the measurement and processing sides, for example,
to increase accuracy and speed.
Some knowledge of the target chip is required in order to deter-
mine the right attack parameters. In particular, the attacker needs to
know or guess the clock frequency of the target’s CPU to determine
the radio frequency to listen on. We found in practice that because
the clock signal is transmitted by the radio, the clock frequency
can be reliably guessed from the spectrum of the target’s radio
emissions. Furthermore, the attack requires a trigger for cutting
a signal into individual traces; in the case of our example target
nRF52832, manual inspection of the signal yielded suitable trigger
components.
9
WiFi ch1 RX on scanf loop running Bluetooth ch0 TX on scanf loop running Finally, the target device needs to use its radio in transmission
mode while running the computation of interest. The destination or
contents of the transmission are irrelevant as long as the attacker
can observe the signal. Since the transmitted data does not matter
for the attack, any communication is suitable. For targets that do
not communicate enough on their own, it would be possible, for
example, to periodically query for identifiers, beacons, echo replies
or similar facilities provided by the respective protocol stack.
7.2 Impact on the threat model
Devices that need to protect a secret and can be physically accessed
by an adversary will typically consider EM or power side-channels
in their threat model. This is the case for example for smart cards
used in applications such as credit cards, pay TV or ID documents.
Therefore, such devices typically use multiple countermeasures
against physical attacks, including masked cryptographic imple-
mentations which render EM and power side channels attacks more
difficult to mount. However, EM or power side-channels attacks
are usually considered out of scope for devices with lower level
of security and without tamper resistance requirements, such as
IoT devices, wearables, and Bluetooth and WiFi chips included in
smartphones and computers.
The rationale for ignoring EM side-channels in these devices is
that if an attacker can get close enough to mount a side-channel
attack, then the system can be compromised in many other ways.
As such, those attacks are often considered as physical attacks.
However, our results show that this security model is not sufficient,
and that for data to be really protected from attackers the chip must
avoid leaks through the radio channel. As a consequence we believe
that, in the light of radio side channels, affected devices will require
additional protection mechanisms.
7.3 Countermeasures
Generic countermeasures against side-channel attacks are an active
field of research.
7.3.1 Cryptographic countermeasures. We refer to the relevant
literature, in particular on hiding and masking [29, 37]. Hiding is
the process of changing the design such that intermediate values of
sensitive computations do not leak into observable channels, such
as power, EM emissions and, as we have shown, radio transmis-
sions. Masking tries to make leaked intermediate values less useful,
for example by randomizing them. Both techniques can likely be
used to defeat the primary leaks and therefore render screaming
channel attacks more difficult. Rapidly re-keying is also an effi-
cient way to prevent the adversary to collect enough samples to
mount a complete attack and can be performed already in many
protocols [38].
7.3.2 Avoiding leakage. Another class of possible protection
mechanisms are dedicated techniques to prevent information from
leaking into radio signals. Since the general issue is a direct conse-
quence of the physical proximity of analog and digital components
in affected chips, countermeasures can only indirectly protect such
systems.
A simple approach is to avoid sensitive computations in digital
circuitry close to radio components. For example, a WiFi chip at-
tached to a computer could use the PC’s CPU for cryptographic
operations instead of carrying them out internally. Naturally, such
protections harm performance and require the availability of a sep-
arate processor in the first place. Moreover, while leakage should
be significantly reduced, some side-channel information may still
be observable.
Barring the presence of an alternative processor, countermea-
sures have to ensure that the radio is never active in transmit mode
during sensitive computations. For example, the firmware could
serialize corresponding operations instead of executing them in
parallel. In many cases this will require extensive redesign of the
firmware and have a strong impact on performance.
7.3.3 Countermeasures during chip design. System in Package
(or System in a Package) (SiP) technologies integrate multiple dies
inside one package, this allows to avoid substrate coupling and to
use different semiconductor technologies [33]. SiP devices have the
advantage of being almost as compact as single chip solutions but
providing more room for isolating sensitive operations from radio
transmitter (e.g., creating filters using passive components).
Unlike conventional transmitters (including SDRs) fully digital
radios perform the complete modulation of the signal in digital
circuits [42]. The final stage of the radio is typically a Differential-
like Digital Power Amplifier which directly converts the modulated
digital signal to amplified radio signals. As those designs are made
with significantly less analog radio components, they are likely to
be less susceptible to the screaming channels.
While shielding the whole device is effective for classic EM
emanations, in the radio side channel it cannot be applied on the
whole system because the radio transmitter has to transmit data.
I.e., shielding the antenna goes against the purpose of the antenna.
However, isolation can be used to reduce the coupling inside the
chip using for example guard rings, various substrate modifications
techniques or even active noise cancellation techniques [4].
New designs will be able to avoid the core issue by moving
cryptography to protected hardware blocks or by incorporating
strong shielding between digital and analog components. However,
the required changes are likely to run counter to market demands:
low cost and ever reduced chip size.
In any case it appears difficult to address the core problem with-
out compromising on other requirements. Moreover, experience
shows that protection mechanisms usually increase the difficulty
of attacks but do not prevent them entirely. We therefore expect
radio side-channel attacks to be possible for the foreseeable future;
they should thus be considered in the threat model of sensitive
applications.
7.4 Future Work
In this work, we demonstrated the existence of a novel side-channel,
conducted an analysis of the underlying physical problems and
showed the feasibility of an attack against them. Quite naturally,
this initial investigation by far does not exhaust the capabilities
of screaming channel attacks, and a variety of directions can be
explored in future work.
10
7.4.1
Improving screaming channel attacks. In this paper, we
focused on attacking single chip, the nRF52832. While we show the
presence of screaming channel leaks on other devices, full attacks
against them still have to be implemented. Moreover Bluetooth and
WiFi chips may not be the only vulnerable devices, as mixed-signal
designs are also present in other domains, such as GSM baseband
chips or IoT devices communicating on other frequencies. Similarly,
there is no reason to consider that screaming channels are limited
to mixed-signal designs on a single integrated chip. Any system
that is processing sensitive data and contains a radio transmitter
is potentially vulnerable if proper isolation of both domains is
insufficient.
Furthermore, the attack itself can be further refined. While we
base our code on implementations for conventional EM attacks,
dedicated implementations coping with the unique environment
of screaming channels could probably improve the effectiveness of
an attack. For instance, as the leak is spread over a wide spectrum,
it could be collected and analyzed on different bands at the same
time. This could be performed by tuning on multiple frequencies
with multiple radio receivers. In the current attacks we only use the
amplitude of the signal, but noise coupling could lead to phase noise
and exploiting phase noise can likely improve the attack. Using
SDRs with more bandwidth may capture more frequency compo-
nents and improve effectiveness. Likewise, using multiple radios
from different locations may help to reduce impact of background
noise. Finally, a systematic study of the influence of noise, distances,
and measurement equipment for screaming channel attacks could
give new insights on how to improve practical attacks.
7.4.2
Impact on wireless protocols security and hardware cryp-
tographic blocks. In this paper we show that we can recover key
material from cryptographic operations conducted in software on
the CPU core integrated in a mixed-signal chip. This is very relevant
to IoT devices, which often rely on a single chip solution and rely,
e.g., on mbedTLS for protecting their communication to an online
service. On the other hand, for most devices the wireless link is
protected by AES-CCM (e.g., Bluetooth [10] or WiFi [3]). Because
those devices are aiming at low power and the standards are well
established, they often include a hardware cryptographic block to
protect wireless communication. However, hardware cryptographic
implementations are generally more power efficient than software
ones, which leads to less EM side-channel leakage. Hence, CRA and
TRA attacks on hardware cryptographic blocks are more challeng-
ing, and while the analysis of the channel and some preliminary
results seem to show the general feasibility, complete attacks are
left for future work.
8 RELATED WORK
Our work mainly touches upon two areas of research: on the one
hand, we build on previous work around side-channel attacks, and
on the other hand, we draw inspiration from research in circuit
design, particularly concerning noise in mixed-signal circuits.
8.1 EM side-channel attacks
Kocher et al. were the first to show non-timing side-channel attacks
against cryptography in 1999 [31]. They used power measurements
on a smartcard to attack its DES implementation. Since then, a
11
long line of work has found attacks against various algorithms,
including AES, RSA and the Diffie-Hellman key exchange, using
a variety of side channels. The more common channels are power
measurements, as initially suggested by Kocher et al., cache-timings,
as demonstrated by Bernstein [8], and electromagnetic emanations.
In particular this last category has inspired our work; one of our
goals was to extend the rather limited range of EM attacks on low-
power devices. In parallel with the research on side-channel attacks,
countermeasures have been proposed [29, 37].
EM eavesdropping attacks on general computing hardware have
existed for decades, the TEMPEST specification [2] partially de-
classified in 2001. In 1985 [19] van Eck described a method to infer
the output of a CRT monitor from hundreds of meters away, using
cheap off-the-shelf equipment. Kuhn [32] applied similar princi-
ples to flat-panel displays in 2004 and was able to reproduce text
from laptop screens at distance of 10 meters. Another TEMPEST
document from 1982 (declassified in 2000) [39] mentions 4 mecha-
nisms for propagation of compromising emanations, one of them is
“modulation of an intended signal” but the details are redacted (re-
produced in Appendix A). One could speculate that those redacted
lines discuss some effect similar to the screaming channel.
The power of EM side-channel attacks against secure systems
was concretely demonstrated in 2001 [21], when Gandolfi et al. used
small EM probes to fully recover key material from three different
types of microcontrollers. More recently, EM side-channel attacks
have extracted cryptographic keys from PCs [23] and FPGAs [46,
57]. In [51] Shamir et al. exploit the fact that power is delivered
wirelessly to RFID devices to measure energy consumption patterns
and infer sensitive information.
Trojan circuits inserted by a malicious foundry are an important
concern [35], this type of attack was more recently implemented in
the context of FPGAs which are shared among different users. In
this scenario, an attacker implements circuitry to measure power
consumption (either directly with ring-oscillators [57], or indirectly
through delay sensors [47]) to infer secret information from a priv-
ileged portion of the device, shared routing resources, or “long
wires” [24, 45].
FPGAs are becoming very popular in data centers and where
hardware logic from independent tenants is sharing resources
which make such vulnerabilities even more important. While these
works mention attacks which can be mounted remotely [57], the
attacker is assumed to control part of the FPGA design. In con-
trast, screaming channels do not require this assumption and are
applicable with relatively loose constraints on physical proximity.
Our work builds on previous studies which observed informa-
tion leaks transmitted by unintentional carrier signals. Agrawal et
al. [5] mounted EM-based attacks in 2003 against DES on smart
cards, and noted an important distinction between two types of
EM emanations: direct (intentional) current flows from rapid tran-
sitions between digital states, and unintentional emanations due to
coupling between different components on a chip. They observed
that unintentional emanations can modulate a “carrier” signal gen-
erated by a chip (either by changing its amplitude or phase), and
that this information can be recovered at a larger distance, with
less precise probe placement, when compared to the attempted re-
covery of direct emanations. Many subsequent attacks [22, 30, 54]
relied on this principle. In this type of attack, the carrier usually