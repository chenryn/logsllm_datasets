个认证级别的个人，在实践完成之前结束该活动。比如，
一个未通过认证的开发人员在未获得架构师认证的明确
批准前，无法将设计付诸实施。这就为每个项目提供了
更为细致的可视性，以通过个人责任来跟踪安全决策。
从整体上看，这还为做出有关应用程序安全性的业务决
策而奖惩员工奠定了基础。
结果
✦有效地补救正在进
行项目代码和旧版项
目代码中的漏洞;
✦快速了解和抑制新
的攻击和威胁;
✦判断员工对安全问
题的认知度，并根据
通用标准进行评估；
✦为提高安全意识，
制定公平的激励制
度。
额外成功指标
✦>80%的员工在过去
1年内获得了认证。
额外成本
✦认证考试的扩充或
许可；
✦对应用程序安全支
持门户网站的持续维
护和变更控制；
✦执行员工认证的人
力资源和成本耗费。
额外人员
✦开发人员（1天/年）
✦架构师（1天/年）
✦经理（1天/年）
✦业务拥有者（1天/
年）
✦QA测试员（1天/
年）
✦安全审计员（1天/
年）
相关等级
✦策略与遵守－2&3
 46
威胁评估
TA1 TA2 TA3
目标 确定并了解组织
和单个项目的高
级别威胁。
提高威胁评估的
准确性，并深入了
解每个项目的细
节。
将补偿控制与对
内部和第三方软
件的每个威胁具
体联系起来。
措施 A. 建立并维护特
定应用程序的
威胁模型；
B. 根据软件架构
建立攻击者概
况。
A. 建立并维护每
个项目的滥用
用例模型；
B. 为威胁的度量
采用一个权重
系统。
A. 明确评估来自
第三方组件的
风险；
B. 用补偿控制详
细描述威胁模
型。
评估 ✦组织中的大多
数项目是否考虑
并记录可能的威
胁？
✦组织是否了解
并记录可能面对
的攻击者类型?
✦项目团队是否
定期为可能的滥
用分析功能需
求？
✦项目团队是否
为相关比较使用
了一个威胁等级
评定方法？
✦利益相关者是
否意识到相关的
威胁和等级评
定？
✦项目团队是否
具体考虑了来自
外部软件的风
险？
✦所有的保护机
制和控制是否能
捕获并匹配威
胁？
结果 ✦对可能产生负
面结果的因素，有
了深入的理解；
✦在项目团队中
加强了对威胁的
安全意识；
✦为组织记录了
威胁。
✦为每个项目详
细了解了可能的
威胁；
✦为项目团队能
更好得权衡决定
的框架；
✦根据风险的权
重，项目团队能对
开发工作进行优
先级排序的能力。
✦更深入的考虑
对于每个软件项
目的全部威胁概
况；
✦详细的映射保
证功能，以建立对
每个软件项目的
威胁；
✦根据每个软件
项目的业务功能，
建立文档以记录
调查的对象。
47
威胁评估 TA1
确定并了解组织和单个项目的高级别威胁
措施
A. 建立并维护特定应用程序的威胁模型
根据每个软件项目的商业目的和商业风险（如果存在的
话），确定每个项目团队在软件开发过程中可能的最坏情况。
这可以通过简单的攻击树或者通过更正式的威胁建模方法
实现，例如：微软的STRIDE，Trike等。
为建立攻击树模型，需用一句话描述每个最坏的情况，
并将它们作为一个攻击者的高级目标标记出来。通过每个确
定的攻击者目标，可以确定必须的先决条件，以便得以实现
每个目标。这些信息应该在每个目标下面的分支中被捕获，
每个分支下面的描述为逻辑与或者是逻辑或。一个“与”分
支表明每个直接连接的子节点必须为真，以便实现父节点。
一个“或”分行表明任意一个连接的子节点可为真，以便实
现父节点。
除了威胁建模方法，还需审核每个当前和历史的功能要
求，并扩展攻击树来表明每个相关的安全问题。反复地仔细
研究攻击者可能达到的任何一个目标，分析每个错误情况的
所有方式。当完成初步建立后，且软件有了明显的更改时，
应用程序的威胁模型应该更新。这一评估过程应由高级开发
人员和架构师以及一个或多个安全审计人员进行实施。
B. 根据软件架构建立攻击者概况
最初，根据软件项目进行评估，以确定对组织可能的威
胁。对于这种评估，可能仅考虑了来自于攻击者有害意图的
有限威胁，而忽略了其他的风险，比如：已知的威胁漏洞、
潜在的弱点等。
 根据普遍考虑到的外部攻击者和他们相关的攻击动机
来设计。这个列表中，增加可能导致破坏的内部角色和内部
攻击者的动机。基于正在考虑中的软件项目架构，它可以对
每次一种架构类型进行更加有效的分析，而不是分析每个单
独的项目中应用程序架构和业务目的都会受到类似的威胁。
因为相同架构和业务目的的应用程序通常容易受到相同的
攻击。
这一评估应由业务所有者和其他利益相关者执行，但也
需要包括一个或多个安全审计员，以获得对威胁的更多了
解。最后的目标是拥有一个简洁的威胁攻击者名单列表和相
应的攻击动机。
结果
✦对可能产生负
面结果的因素，有
了深入的理解；
✦在项目团队中
加强了对威胁的
安全意识；