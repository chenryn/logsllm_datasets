of the original and of the attacker’s signal at the receiver.
For a given Pa (the strength of the original signal at B),
we denote by Pj (Po) the minimal required strength of the
attacker’s signal at B in order to jam (overshadow) a mes-
sage sent from A to B (see Figure 3). We assume that
Pt < Pa, Pj < Po and that a message from A is success-
fully received by B if the strength of the attacker’s signal at
B is less than Pj. In addition, we assume that the maximal
transmission power of the attacker is ﬁnite and we denote
by PT the signal strength that the attacker is able to achieve
at the receiver B if she transmits with maximal transmis-
sion power on a single channel. However, we do not as-
sume any restrictions on the attacker’s energy supply, that
is, she is considered to be mains-operated. The attacker’s
resulting strength in terms of her ability to insert, jam, and
overshadow messages will be analyzed in Section 5.2.
3. Enabling Robust Communication using
Uncoordinated Frequency Hopping
Having described the system and attacker model, we now
present the basic intuition behind UFH as countermeasure
against communication jammers. We then present and an-
alyze our UFH scheme that enables two nodes to exchange
messages of arbitrary length in the presence of a jammer.
3.1. Uncoordinated Frequency Hopping
With UFH, two communicating nodes hop among a set
of known frequency channels in an uncoordinated and ran-
dom manner. The communication is based on the observa-
tion that, at some point in time, the sender and the receiver
will be sending and listening on the same frequency chan-
nel fj (Figure 2). In an undisturbed setting, the receiver will
receive each fragment with a small but positive probability
that increases with the number of transmission attempts.
Let M denote the message that the sender wants to trans-
fer to the receiver. Due to the sender’s rapid change of out-
put channels (as countermeasure against a jammer), M does
not ﬁt in one transmission slot, but has to be split into the
fragments M1, M2, . . . , Ml. These fragments are transmit-
ted one after another with a high number of repetitions. The
UFH scheme we consider is randomized in the sense that
the sender does not relate the frequency fj for fragment
Mi with the channels used and the fragments sent before.
Although splitting M into fragments is a straight-forward
operation, the reassembly of the received fragments at the
receiver is non-trivial if an attacker inserts additional frag-
ments or modiﬁes transmitted ones (that may be hard to dis-
tinguish from legitimate fragments).
Figure 3. Required signal strengths for differ-
ent attacker strategies. Let sender A transmit
a message to receiver B such that the corre-
sponding signal arrives at B with strength Pa.
If an attacker J interferes using a signal that,
at B, has lower strength than Pj, then B suc-
cessfully receives A’s message (t1 in the ﬁg-
ure); if, however, J’s signal arrives at B with
a strength between Pj and Po, the transmis-
sion is jammed and B receives no message
(t2); ﬁnally, if the strength of J’s signal at B is
even equal or greater than Po it entirely over-
shadows A’s transmission and B receives J’s
message (t3).
• The attacker can modify messages by either ﬂipping
single message bits or by entirely overshadowing orig-
inal messages.
In the former, the attacker superim-
poses a signal on the radio channel that converts one or
several bits in the original message from zero to one or
vice versa. In the latter, the attacker’s signal is of such
high power that it entirely covers the original signal at
the receiver. As a result, the original signal is reduced
to noise in the attacker’s signal and the original mes-
sage is replaced by the attacker’s message. In either
case, in this attack the messages must remain readable
by the receiver.
• The attacker can jam messages by transmitting signals
that cause the original signal to become unreadable by
the receiver. The portion of a message the attacker has
to interfere with in such a manner depends on the used
coding scheme and can be as high as 15% of the mes-
sage size [13]. As mentioned, we do not consider the
case where the attacker can block a message by placing
one (or both) of the nodes in a Faraday’s cage.
Based on the above actions, we denote by AI, AM , and
AJ the strategies where the attacker only inserts, modiﬁes,
or jams messages, respectively. Additionally, we use the
term AIM J for the resulting mixed strategy. A0 denotes
the attacker’s strategy to not interfere at all.
Regarding the interception and jamming of messages, we
assume that the attacker is aware of the location and con-
ﬁguration of all nodes so that her capabilities are only re-
stricted by the performance of her transceiver. We can there-
67
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:10:26 UTC from IEEE Xplore.  Restrictions apply. 
t1t2t3PtPoA’ssignalAPaPjBJ’ssignalJSignalstrengthatBFigure 4. Hash-linked UFH scheme. Each
packet consists of an identiﬁer (id) indicating
the message the packet belongs to, a frag-
ment number (i), the message fragment (Mi),
and the hash of the next packet (h(mi+1)).
The packets are built in reverse order start-
ing with the last packet ml linked to the ﬁrst
fragment M1. The linked packed sequence is
called packet chain.
Receiving a fragment with (coordinated or uncoordi-
nated) frequency hopping requires the receiver to listen on
the correct channel for the complete transmission of the
fragment. If the sender’s and receiver’s hopping frequen-
cies were identical (and with it the time that both stay on
a channel before hopping to the next), the successful trans-
mission of a fragment would require precisely synchronized
transmission and reception slots to avoid only partially re-
ceived fragments. In UFH, we do not require the slots to be
synchronized by permitting the receiver to switch the chan-
nels less often than the sender (Figure 2), thus reducing the
number of partially received fragments.
The throughput of the communication with UFH is con-
siderably lower than for coordinated hopping. Given that
the nodes did not establish a secret shared key before, the
sender will need numerous sending attempts for transmit-
ting each fragment. From the attacker’s point of view, the
probability to jam a transmitted fragment with randomized
uncoordinated frequency hopping is equal to the jamming
probability in coordinated frequency hopping, since, for
each transmitted fragment, she needs to guess the transmis-
sion frequency.
3.2. UFH Message Transfer
In this section, we describe our UFH-based message
transfer protocol; this protocol enables the transfer of mes-
sages of arbitrary lengths using UFH. We specify the mes-
sage fragmentation and transmission carried out by the
sender and the reassembly at the receiver.
Fragmentation. Before its transmission, a message M is
split into l fragments of d|M|
l e bits. Each fragment Mi
is then encapsulated in a packet mi := id|i|Mi|h(mi+1),
comprising a message identiﬁer (id), the fragment number
(i), the fragment itself (Mi), and the hash value of the next
packet (h(mi+1)), where h(·) is a collision-resistant hash
function (see Figure 4). The packets are build in reverse
order starting with the last packet which is, exceptionally,
linked to the ﬁrst fragment (ml := id|l|Ml|h(M1)), since
a link to the complete ﬁrst packet would result in an un-
breakable cyclic dependency in the message fragmentation.
The purpose of the hash values is to facilitate the reassem-
bly of the fragmented message. Hash-linking each packet to
its successive packet ensures that the attacker cannot exces-
sively increase the complexity of the message reassembly
process by inserting or modifying packets. The sender then
applies a coding scheme to the packet and distributes the
bits of each code within the packet using a pseudo random
bit interleaver; here, the used codes and the seed of the bit
interleaver are publicly known. The purpose of this coding
and interleaving is to make the packets more resistant to bit
errors [13]. The vulnerability of this scheme depends on the
coding as well as on the type and strength of the jammer as
discussed in Section 5.3.
Transmission. The message is transferred over the UFH
channel with a high number of repetitions in order to com-
pensate for the lacking coordination. The sender repeats
transmitting the sequence of packets m1, . . . , ml on ran-
domly selected channels and, in parallel, listens on the input
channels to record all incoming packets. The sender imme-
diately starts the reassembly phase for the received pack-
ets but continues sending the message packets either until
it succeeds in reassembling an expected reply or until the
execution of the protocol reaches a threshold value (in time
or number of repetitions). A protocol abortion could be due
to, e.g., too strong jamming capabilities of the attacker or
the non-availability of the second node.
Reassembly. The structure of the hash-linked message
avoids an exhaustive search for assembling the received
fragments into reasonable messages. Received packets can
directly be linked to each other when their preceding or
successive packet is received (m1 is linked to Ml). More
precisely, on the reception of a new packet mi the receiver
tries to identify mi as successor (predecessor) of any re-
ceived packet mi−1 (mi+1) by comparing, ﬁrst, the mes-
sage identiﬁers and, second, the hash in mi−1 (mi) with
h(mi) (h(mi+1)). This involves the computation of one
hash function as well as string comparisons. If the veriﬁ-
cation succeeds for a pair of packets mi−1 and mi (mi and
mi+1), the receiver connects the fragments to form or ex-
tend a packet chain. After enough repetitions, B will have
received all l packets and the packet chain will be complete.
Once the possible combinations of fragments have been re-
assembled to one or more messages, the receiver starts to
process the semantic meaning of the message and to com-
pose his reply message.
68
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 03:10:26 UTC from IEEE Xplore.  Restrictions apply. 
2M1m1M2h(m2)h(m3)m21......mllMlh(ml)idml−1ididh(M1)Ml−13.3. Security Analysis of the UFH Message Trans-
fer Protocol
We now analyze the security properties of the presented
UFH message transfer protocol and motivate our choice of
the scheme, focusing on the properties introduced by the
hashes.
Each packet in a packet chain is linked to its successor
by a hash. This makes it infeasible for the attacker to create
a branch in the original packet sequence chainA(M) built
by the sender A so that the receiver B has to pursuit dif-
ferent successors for a single packet (see Figure 5), which
would lead to an exponential growth of the search space
for the reassembly process at the receiver. More precisely,
given two consecutive packets mi−1 = id|i|Mi−1|hi and
mi = id|i|Mi|hi+1 where hi = h(mi) and 2 < i≤ l, an
attacker (as deﬁned in Section 2.2) cannot create a packet
i = id|i|M0
m0
i is accepted
as a genuine successor of Mi−1 by a correct receiver. The
reason is that in order for the fragment M0
i to be accepted as
a genuine successor of Mi−1, the hash value of m0
i must be
equal to hi, i.e., hi = h(id|i|Mi|hi+1) = h(id|i|M0
i|h0
i+1)
must hold. However, ﬁnding a fragment M0
i and a hash
value h0
i+1 such that this condition is met means ﬁnding a
collision for h(·), which is considered infeasible for a com-
putationally bounded attacker.
i+1 such that the fragment M0
i|h0
Besides the regular hash links, the last packet in a chain
is linked to the fragment of the ﬁrst packet, thus avoiding
that the attacker can insert additional chain heads that all
point to the same chain. More precisely, given a packet
m1 = id|1|M1|h2 the attacker cannot create a packet
1 = id|1|M0
m0
1 is accepted as a gen-
uine head fragment for the chain started by h2, because
she would have to ﬁnd a fragment M0
1) =
h(M1) = hl. However, ﬁnding such a fragment M0
1 means
ﬁnding a collision for h(·), which is considered infeasible
for the attacker.
1|h2 such that M0
1 such that h(M0
The attacker therefore cannot create branches neither in
legitimate packet chains transmitted by the sender nor in
packet chains that she created and inserted herself.
In summary, without linked packet chains the attacker
can insert arbitrary packets that, as long as they comply
with the described packet structure (Figure 5), the receiver
cannot distinguish from legitimate packets. Since the num-
ber of fake packets that the attacker could insert for each
legitimate packet mi is proportional to the number of trans-
missions, the message reassembly would require time that
is exponential in the number of message repetitions (given
that the receiver can identify the correctly reassembled mes-
sage). On the other hand, with packet chains,
the at-
tacker can only introduce entire replayed or self-constructed
chains, otherwise her packets will be dropped without that
the receiver reassembles them. The reassembly of the le-
Figure 5. Packet chains created by the mes-
sage transfer protocol. chainA(M) represents
the legitimate packet sequence transmitted
by sender A (marked in gray). The attacker
can send (replayed or own) packet chains
and, with sufﬁcient power, try to prevent the
reception of all repeated transmissions of
each legitimate packet mi. Although she can
create a fusion from her own chain to the
original chainA(M) (m0
2 linked to m3), she can-
not purposefully create a packet m0
i such that
m0
i is linked to mi−1 (branch at m1 to m00
2 or at
m2 to m000
3 ). A fake ﬁrst packet m0
1 contain-
ing the correct hash but a fake message M0
1
will be detected when the last packet ml is
received (which may even happen before the
reception of m1).
gitimate packet chain is thus independent of the number of
packets inserted by the attacker.
We point out that the attacks in which the attacker inserts
or replays messages (i.e., complete packet chains) cannot
be eliminated by the UFH message transfer protocol. These
attacks must thus be identiﬁed by the (key establishment)
protocols running on top of the UFH protocol (Section 4),
e.g., by making use of signatures, timestamps, and message
buffering. The impact of these attacks on the message trans-
fer is discussed in Sections 5.4 and 5.5.
3.4. Discussion of Alternative Schemes
A limitation of the proposed UFH message transfer pro-
tocol is that all packets of a message must be received before
the message can be reassembled. In principle, forward error