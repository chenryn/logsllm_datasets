### Satisfying Recovery Requirement R6

Due to the design of our recovery method, which includes dynamic plan generation, false positives from error detection will not trigger unnecessary recovery actions.

#### G. Recovery for Recovery Itself

1. **Experimental Procedure**

To evaluate POD-Recovery's behavior when errors occur during the execution of the recovery plan, I performed the scale-down operation and injected faults at each determined recovery point to trigger POD-Recovery. After the selected recovery action executed, I manually injected additional faults into the recovery action to activate the "recovery of recovery" block. This test, labeled "recovery for recovery itself," was conducted 30 times for each recovery point in the scale-down operation.

2. **Experimental Results**

Table 44 summarizes the recovery time for "recovery for recovery" during the scale-down operation. The relative standard deviation is at most 2.2%.

| **Recovery Point** | **Process Step** | **Errors** | **Selected Recovery Action (Pareto Set)** | **Time of Recovery for Recovery (Pareto Set)** | **Selected Recovery Action (User Constraints)** | **Time of Recovery for Recovery (User Constraints)** |
|---------------------|------------------|------------|------------------------------------------|-------------------------------------------------|--------------------------------------------------|------------------------------------------------------|
| Recovery Point 1    | Step 1. Deregister 12 instances from the elastic load balancer | 3 instances still in ELB | Deregister 3 instances from the elastic load balancer | 2.93 s | Deregister 12 instances from the elastic load balancer | 4.98 s (Reparation) |
| Recovery Point 2    | Step 2. Decrease auto scaling group’s desired capacity from 24 to 12 | 3 instances not terminated | Terminate 3 instances again; (Reparation) | 55.76 s | Set auto scaling group’s desired capacity to be 12; Wait for the auto scaling group to terminate 3 instances; (Direct Redo) | 31.55 s |

3. **Satisfying Recovery Requirement R7**

The maximum recovery time for "recovery for recovery" is 55.76 seconds. Therefore, the total time for the original recovery and the "recovery for recovery" is significantly less than the specified time gap between two adjacent recovery points. This confirms that POD-Recovery meets the requirement for "recovery for recovery."

### Case Study 5: Recovery for Migration Operation on Cloud

In this section, we present the evaluation results of POD-Recovery using a migration operation on the cloud as a case study. The experiment aims to:

1. Show the determination of recovery points for migration.
2. Present the workload of resource state management for migration.
3. Demonstrate POD-Recovery's capability to satisfy recovery requirements using migration.

The experimental environment is detailed in Fig. 26.

#### 8.5.1 Recovery Points Determination

The migration operation consists of 10 steps:
1. Stop the old web instance in the old availability zone.
2. Create an AMI from the old web instance.
3. Launch a new web instance in the new availability zone using the AMI of the old web instance.
4. Reassign the IP of the old web instance to the new web instance.
5. Terminate the old web instance in the old availability zone.
6. Repeat steps 1-5 for the database instance.

Fig. 39 illustrates the sections resulting from recovery points at different levels of granularity. Fig. 39(a) shows the result of applying the "Recovery Actions Identifiable" method to the migration steps. Fig. 39(b) combines some sections with low failure rates. Based on our procedure, the recovery points are determined to be after steps 1, 2, 4, 5, 6, 7, 9, and 10.

#### 8.5.2 Workload of Resource Space Determination

The determined resource space includes four resource types: Instance (VM), Availability Zone (AZ), Elastic IP (EIP), and Amazon Machine Image (AMI). Each resource type has specific attributes (e.g., instances have an instance ID, instance type, machine image, etc.). The dependency relationships among these resources are:
1. AZ contains any resources.
2. An EIP attaches to an instance.
3. An EIP may not attach to any instance.

Fig. 40 shows the workload of determining the resource space for the migration operation, based on 30 runs. The average execution time is 65.40 ms, with a relative standard deviation of 7.19%. The 75th percentile value is 68 ms.

#### 8.5.3 Workload of Expected Resource State Templates Generation

Fig. 41 presents the workload of generating expected resource state templates for the migration operation, based on 30 runs. The average execution time is 70.27 ms, with a relative standard deviation of 5.08%. The 75th percentile value is 72.75 ms.

#### 8.5.4 Recovery Satisfying Requirements

POD-Recovery is designed to meet all eight recovery requirements described in Section 3.5. The following experiments demonstrate how POD-Recovery fulfills each requirement using the migration operation.

##### A. Runtime Recovery (Satisfying Recovery Requirement R1)

As detailed in Chapters 4-7, our method is inherently a runtime recovery solution.

##### B. Recovery Satisfying RTO

1. **Experimental Procedure**

This requirement concerns the time it takes for the system to return to a consistent state after recovery. We measured the recovery time by performing the migration operation on a cloud application, turning off the software running in the cloud instances during the migration. We used our proprietary fault injection tool to inject faults at each of the eight determined recovery points, automatically determining the applicable recovery patterns based on the method described in Section 7.3. Recovery was performed using the selected acceptable recovery action from each of the two selection methods. The first method selects the optimal action, while the second method selects an acceptable, though not necessarily optimal, action. The injected faults, based on industry interviews and failure reports, are listed in Table 45. The recovery time was calculated by summing the execution time of each function in the recovery action. The experiment was run 30 times.

| **Recovery Point** | **Fault Injected** |
|--------------------|--------------------|
| Recovery Point 1 (After Step 1) | Old web instance not stopped |
| Recovery Point 2 (After Step 2) | AMI not created |
| Recovery Point 3 (After Step 4) | New web instance not launched |
| Recovery Point 4 (After Step 5) | Old web instance not terminated |
| Recovery Point 5 (After Step 6) | Old DB instance not stopped |
| Recovery Point 6 (After Step 7) | AMI not created |
| Recovery Point 7 (After Step 9) | New DB instance not launched |
| Recovery Point 8 (After Step 10) | Old DB instance not terminated |

2. **Experimental Results**

Table 46 shows the recovery time for the migration operation. The recovery time represents the average value over 30 runs, with the highest relative standard deviation being 1.9%.

| **Recovery Pattern ID** | **Recovery Pattern** |
|-------------------------|-----------------------|
| RP1                     | Compensated Undo & Redo |
| RP2                     | Compensated Undo & Alternative |
| RP3                     | Rewind & Replay |
| RP4                     | Rewind & Alternative |
| RP5                     | Reparation |
| RP6                     | Direct Redo |
| RP7                     | Direct Alternative |
| RP8                     | Farther Undo & Redo |

| **Recovery Point** | **Process Step** | **Errors** | **Applicable Recovery Patterns** | **Selected Recovery Action (Pareto Set)** | **Recovery Time (Pareto Set)** | **Selected Recovery Action (User Constraints)** | **Recovery Time (User Constraints)** |
|---------------------|------------------|------------|---------------------------------|------------------------------------------|---------------------------------|--------------------------------------------------|--------------------------------------|
| Recovery Point 1    | Step 1. Stop the old web instance in the old availability zone | Old web instance not stopped | RP1, RP3, RP5, RP6 | Stop the old web instance again; (Direct Redo) | 32.78 s | Stop the old web instance; (Reparation) | 29.99 s |
| Recovery Point 2    | Step 2. Create an AMI from the old web instance | AMI not created | RP1, RP3, RP5, RP6, RP8 | Create an AMI from the old web instance; (Direct Redo) | 120.66 s | - | - |
| Recovery Point 3    | Step 3. Launch a new web instance in the new availability zone | New web instance not launched | - | - | - | - | - |