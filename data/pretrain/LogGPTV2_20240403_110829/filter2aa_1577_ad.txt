Insomnia
15.4%
Eolinker
17.8%
14.6%
ReadyAPI/soapUI
RAP
26.8%
API Fortress
27.6%
Postman
38.5%
YAPI
42.1%
19.0%
14.5%
13.9%
11.5%
11.2%
10.1%
7.1%
0%
10%
20%
30%
40%
50%
9.1%
Apigee
22.6%
API 测试流程和工具
30
API开发者使用哪些API测试工具
RAP
Dredd
REST-Assured
Karate DSL
Insomnia
Katalon
Pact
Parasoft
Tricentis-Tosca
8.6%
Eolinker
11.0%
7.9%
JMeter
API Fortress
19.7%
ReadyAPI/soapUI
26.9%
Postman
38.7%
YAPI
58.2%
13.1%
7.1%
5.8%
5.7%
4.2%
3.9%
2.2%
0%
10%
20%
30%
40%
50%
50%
3.9%
Apigee
17.8%
API 测试流程和工具
31
第六部分
在本章中，我们将探讨如何认识并发挥
API文档的重要价值，包括API文档流
程的建立、对文档工具的功能需求、文
档工具的使用情况、以及文档自动生成
能力的实现
API文档的使用
33
虽然约七成受访者已建立正规的API文档流程，且超过半数受访者对
所在组织的API文档完善程度给出正面评价，但依然存在大量团队没有
意识到API文档应有的重要作用
约72.8%的受访者表示已建立正规的API文档流程，但其中27.4%的受访者并不认可
API文档流程的重要性。此外还有21.1%的受访者表示目前没有API文档流程，但未来将可
能建立。
从自我评估的角度，有共计58%的受访者对自身组织的API文档完善程度给出正面评
价，包括“不错”、“很好”，仅有26%和13%的受访者给出“一般”和“需要改善”等
偏负面的评价。
API文档作为前后端两方沟通的桥梁，几乎是开发团队的必备工具，但依旧有超半数受
访者表示不认同其重要性、目前没有API文档流程、以及不能确定，一个可能的原因是受访
者所在的团队缺乏对于内部API的必要管理、以及管理缺乏基本的团队协同机制，以至于其
团队并没有意识到API文档应有的重要作用。
结合对API文档工具使用情况的调研，市场中显然还缺少一款主流好用的API文档工
具，用以完善API文档的全过程管理。
受访者所在组织是否有
正规的API文档流程
受访者所在组织的API文档
完善水平评估
1.
2.0%
45.4%
27.4%
4.1%
21.1%
有，API文档非常重要
有，API文档不是很重要
目前没有，未来可能有
没有
不确定
不错
很好
一般
3%
30%
28%
13%
26%
需要改善
很差
API 文档的使用
API使用者和开发者普遍对文档可读性有较高要求
无论API使用者或API开发者，文档可读性都是其最为看重的内容。此外，双方对API
文档的主要需求还包括：对各种主流协议和设计规范的支持程度，操作指南，调用方法、参
数和返回值的解释，样例等。
2.
开发者眼中API文档最重要的内容
使用者眼中API文档最重要的内容
授权
资源
变更日志
版本信息
术语表
错误信息
调用方法、参数和返回值的解释
样例
错误码
其他
33.2%
33.9%
29.8%
对各种主流协议和设计规范的支持程度
操作指南（如API调用的示例、上下文介绍）
44.6%
文档可读性（清晰查阅）
54.3%
43.0%
22.3%
20.8%
16.7%
14.0%
13.4%
12.7%
0%
10%
20%
30%
40%
50%
60%
0.5%
错误码
资源
变更日志
术语表
错误信息
版本信息
调用方法、参数和返回值的解释
样例
授权
其他
6.4%
9.4%
5.3%
对各种主流协议和设计规范的支持程度
操作指南（如API调用的示例、上下文介绍）
19.3%
文档可读性（清晰查阅）
27.0%
14.5%
5.2%
5.0%
2.8%
1.7%
1.6%
1.4%
0%
5%
10%
15%
20%
25%
30%
0.2%
API 文档的使用
34
API使用者使用哪些API文档工具
API开发者使用哪些API文档工具
API使用者和开发者使用的主流API文档工具较为一致，且都有相当
比例的受访者选择使用自研的API文档工具
总体来看，SwaggerHub、ReadMe/Markdown、Atlassian Confluence是API使
用者和开发者使用最为广泛的三款API文档工具。
值得关注的是，在使用者中，有13.8%的受访者选择使用自研的API文档工具，这一数
据在开发者中更是高达23.3%，双方都体现出缺乏主流文档工具的问题，而自研的API文档
工具或将有机会成为API开发生态中的创新点，弥补当前文档工具的不足。
3.
Eolinker
自研的API文档工具
YAPI
RAP
没有API文档工具
Apigee
Redoc.ly
Stoplight Docs
25.9%
31.6%
20.8%
SwaggerHub
Atlassian Confluence
ReadMe/Markdown
34.5%
20.3%
16.9%
14.1%
13.8%
13.7%
12.3%
0%
10%
20%
30%
40%
7.9%
Apigee
没有API文档工具
Redoc.ly
Stoplight Docs
其他
ReadMe/Markdown
自研的API文档工具
Atlassian Confluence
33.0%
28.0%
SwaggerHub
23.3%
18.6%
17.0%
14.2%
13.1%
9.0%
0%
10%
20%
30%
40%
3.3%
API 文档的使用
35
仅少量使用者和开发者具有自动化生成API文档的能力
在受访者中，仅36%的API使用者、34%的API开发者表示有能力自动化生成API文
档，考虑到其中相当比例使用自研的API文档工具，实际通过市场现有API文档工具实现自
动化生成的比例会更低。其余54%的API使用者、58%的API提供者则自行编写、或由专职
人员编写API文档。
在整个API管理过程中，自动化生成API文档的能力至关重要，这项能力的不足也从一
个侧面反映出现有的自动化生成工具难以满足应用需求。
4.
API使用者（左侧）和开发者（右侧）处理API文档的方式
我们没有API文档流程
我们有专职的技术人员负责API文档编写
开发人员自行编写API文档
自动化生成API文档，比如使用OpenAPI
36%
24%
0%
0%
10%
20%
30%
40%
40%
30%
20%
10%
10%
30%
34%
21%
8%
37%
API 文档的使用
36
API综合管理体系
在本章中，我们着眼于分析API综合管
理体系的建立，涉及API的开放和调用
方式、API管理工具的选择、以及API
监控流程的建立等
第七部分
开发者更倾向通过API网关实现部分API管理能力，使用者则更关注
API的可用性，对API的管理意识和诉求相对不足
在API的开放和调用方式上，总计70.9%的API使用者选择通过类库、SDK调用，以及
直接调用的方式使用API，选择CLI调用、API网关调用等方式的占比较少。而开发者更多
选择API网关的方式进行开放，之间的差异体现出二者对于API管理诉求的差别。
API网关作为API管理系统的一部分，不仅在OpenAPI开放平台上承担认证鉴权、限
流计费、统计查看、过载熔断等功能，而且伴随微服务架构的流行，API网关也开始作为微
服务网关的身份存在，成为其必不可少的组件。即使企业没有大规模地实施微服务架构，
API网关也可以作为企业的API服务管理平台。API网关成为开发者开放API的首选方式，一
定程度上表明了开发者强烈的API管理需求。相对而言，使用者对于API管理的意识还较为
薄弱。
使用者通过哪种方式使用API
开发者采取哪种方式开放API
1.
通过类库、SDK调用
直接调用API
通过CLI调用
通过API网关调用
其他
38.7%
32.2%
15.0%
13.4%