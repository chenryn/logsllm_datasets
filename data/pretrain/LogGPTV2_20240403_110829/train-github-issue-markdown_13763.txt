This is a reduced version of the issue raised at
https://discourse.julialang.org/t/type-unstable-keyword-constructor-on-
parameterized-type/8852
I think its a bug, but I could be wrong.
Basically, the presence of (even unused) keyword args in an inner constructor
spoils type-stability.
On 0.6.1
    julia> struct Foo
               Foo(; kwargs...) = new()
           end
    julia> @code_warntype Foo()
    Variables:
      #self#::Type{Foo}
    Body:
      begin 
          return ((Core.getfield)($(QuoteNode(Core.Box(#call#1))), :contents)::Any)($(Expr(:foreigncall, :(:jl_alloc_array_1d), Array{Any,1}, svec(Any, Int64), Array{Any,1}, 0, 0, 0)), #self#::Type{Foo})::Any
      end::Any
and current master (`251a501`)
    julia> struct Foo
               Foo(; kwargs...) = new()
           end
    julia> @code_warntype Foo()
    Variables:
      #self#::Type{Foo}
      #Foo#1@_3::Nothing
    Body:
      begin
          Core.SSAValue(0) = $(QuoteNode(Core.Box(getfield(, Symbol("##Foo#1#2"))())))
          Core.SSAValue(1) = (Core.isdefined)(Core.SSAValue(0), :contents)::Bool
          unless Core.SSAValue(1) goto 5
          goto 8
          5: 
          Core.NewvarNode(:(#Foo#1@_3::Nothing))
          #Foo#1@_3::Nothing
          8: 
          Core.SSAValue(2) = (Core.getfield)(Core.SSAValue(0), :contents)::Any
          Core.SSAValue(5) = (Core.SSAValue(2))($(QuoteNode(Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}())), #self#::Type{Foo})::Any
          return Core.SSAValue(5)
      end::Any