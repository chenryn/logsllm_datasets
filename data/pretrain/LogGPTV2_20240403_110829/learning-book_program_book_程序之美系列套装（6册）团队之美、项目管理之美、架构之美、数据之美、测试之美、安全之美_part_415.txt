2402
---
## Page 2404
题与解决方案之间的“所有关系”。这种合作关系非常好。它使得项
目组全身心地投入项目开发中，并且时刻肩负着整个项目成功的责
任。
该小组规划了一套高层次的开发周期，以便于理解最佳方案并在实
施它们的时候所采取的合理的项目周期阶段之间的依赖关系。这个
开发周期的三个阶段是挖掘、执行和部署。图10-3给出了“特性"设
计中的性能与负载方面的依赖关系，图10-4给出了可靠性与有效性
方面的依赖关系。
这个计划是非常成功的，它将注意力放在了改进朗讯的产品所需的
关键行为和最佳实践这两者身上，并且恰当得从安全性、成本与利
润、客户满意度和及时性这几个方面对其进行调整。
图10-3最佳实践依赖关系：性能与负载
2403
---
## Page 2405
图10-4最佳实践依赖关系：可靠性与有效性
10.3符合准则的系统开发周期的作用
在2003年1月我回到国家宇航局之后，我有幸参加了一个重新设计国
家宇航局非任务（即一般用途）范围网络的项目。这个项目受到了
两位挑剔的高级领导的强烈支持，他们明白采用强壮的系统开发周
期方法的价值，以确保新的设计安全、健壮、便于扩展。我和当前
网络的设计者BetsyEdwards共同领导这个项目。我们组织了一个跨
部门团队，包括杰出的网络架构师JimMcCabe，厉害的项目经理
JohnMcDougle，和一个由安全专家、最终用户、网络架构师、网络
运营工程师和网络测试工程师组成的小组。
JohnMcDougle负责让团队始终保持符合准则的设计过程（如图10-5
所示），在这个过程中，我们针对整套指标对设计进行评估并给出
建议。最终的设计与现有的网络架构大相径庭，但是所有的设计决
2404
---
## Page 2406
策都清楚地加以描述，也都能够在系统需求上被找到。最终系统按
照预算和进度进行部署，它比所代替的网络提供了10倍的带宽，而
月运营费却少了很多。John很棒地完成了维护所有支持该项目的准
则的任务，这些准则包括安全性、运营以及管理方面的事情，它们
贯穿于整个周期。
图10-5NASA项目管理过程[1]
JimMcCabe领导了整个团队完成详尽的需求分析，优化和管理过
程。最终形成的需求文档不仅仅是功能需求（即带宽、延迟等），
也是所有针对最终系统的非功能性操作需求（即安全性、可维护
性、可扩性）。在开发周期的每一阶段都会对需求进行复核和更
新。项目团队使用详尽的模型对其他设计选择进行评测，而且在每
次复核的时候都对非功能性需求进行评估。在每次复核的时候，我
们也对安全性进行评估，我们的策略和最终实现也融为最终系统设
计的一部分。
2405
---
## Page 2407
在这个项目中，我所学到的比较重要的经验之一是风险管理工具的
使用。John采用了一个5x5的矩阵（见图10-6）来跟踪项目中的风
险。这个矩阵的一个坐标轴表示发生的可能性，另一个坐标轴表示
相应的后果。在每次项目会议中，我们都会将John指出的风险增加
到项目风险日志中并对其进行分析。所有的风险都被做了实时的跟
踪，直到它们被消除。这个矩阵创造了一种非常强大的可视化图
形，方便了项目提交人和复核人员对项目风险进行统筹，而不管是
什么类型的风险。
图10-65x5风险管理矩阵
这个项目是我职业生涯中最成功的项目之一。这份成功直接归功于
团队成员（这是个全明星队）的努力以及John和Jim的杰出领导。团
队所采用的准则同样是项目成功的直接功臣。项目小组在项目开始
之前就制定了一套明确的需求，包括安全性、可靠性、有效性、带
宽、延迟、可用性和可维护性。包括安全性在内的所有“特性"都在
系统设计和可选项分析阶段都已解决，而且所有的需求都划分了优
2406
---
## Page 2408
先顺序。最终形成的系统简洁优美。没有额外的层或组件偏离设计
或者阻碍系统来适应不断变化的需求和安全威胁。
我在商务部时采用了同样的5x5风险模型来评估信息安全风险和个人
身份信息（Pff,PersonallyIdentifiableInformation）去失所带来的风
险。我们用两个坐标轴来衡量PI损失，一个坐标轴为保护信息所采
取的控制措施（由高到低），另一个坐标轴为假设信息被盗所带来
的身份窃取风险（由低到高）。这种方法能够让我们制定协调的，
基于风险的决定以响应P的去失。在对处于设计中的系统进行安全
评估和安全审计的过程中，我们也采用了这个模型。这个模型能够
使我们清楚地认识到特定的风险并且决定是减少还是接受风险。极
少存在完美的系统，因此大多数情况下，你最终必须决定（我希望
这是一个慎重的决定）容忍某种程度的残留风险。当越来越多的团
队转向基于风险的安全策略时，明确的风险识别和管理策略就成为
了成功的关键因素。
[1]本图改编自NASA项目管理过程（NPG7120）和NASA系统工程手
册（SP-6105）。
10.4结论：安全之美是系统之美的象征
领域，对此非常关心。看来我们并没有从20世纪90年代末的网络泡
沫破火（dotcombust）中吸取教训。我们只是记下了这件事，然后
把它装订起来放到书架上来收集灰尘。正如我之前所说的，我们只
是痛定思痛，却没有真正的吸取教训。只是记录这些教训不太好，
我们必须吸取它们以期改进。我们还没有制定基于风险的安全计划
来解决在系统开发周期各个阶段中的安全问题。除非我们作出这种
改变，才会取得有限的成功。
曾有人问我为什么“丑陋的”安全不好。这个问题让我感到很失望。
在问了这个问题之后，我们应该制定一种成熟的准则。这让我们明
百，对社会而言，我们面前的改进之路还有很长。我对这个问题的
答案很简单：丑陋的方案是一块块零碎的，没有集成到一个完整的
系统设计中。系统的安全要素偏离了整个系统开发周期，并导致最
终的系统脆弱、难以操作和维护。和在系统中设计安全性不同的
是，我们试图测试系统的安全性。由于安全层并不是系统设计的一
部分，如何安排系统和安全要素的集成点就变得很困难。这种“快速
2407
---
## Page 2409
而又随意"的方法在质量、可靠性和可用性方面存在25年的失败历
史，我们又为什么要期待它能用于安全性方面？
打个简单的比方，把法拉利430Scuderia的设计和当前流行的自我改
装车相比。很明显法拉利430的整个设计集成了影响车辆（即系统）
系统性能的所有方面。这辆车很优美，简洁的车身线条，平衡极佳
的轻量级底盘。自我改装车就与之相反，它的各个部件设计互相独
立，也是分别购买的，然后由最终用户在基本的车身框架上进行搭
建。许多情况下，这种车的各个部件之间并不能很好地协调工作，
而且还会对系统性能带来负面的影响。对于法利拉来说，整个车辆
都是作为一个系统整体进行设计的，速度、操纵、重量和强度之间
相当平衡。
我很确定你肯定在想法拉利的造价比改装车要多太多了，而且如果
你在改装车上也花这么多的钱，就能得到同样的效果。我不同意这
种论断，以我的经验来看，优良的设计不依赖于价钱。考虑到我们
所保护的公共（知识产权）和私人财产（个人身份信息），如果我
们没有对安全方面作适当的调查，那么我们就是对客户和消费者不
负责任。我们有尽最大可能交付最好的产品和服务的责任，在由于
没有适当地处理信息安全问题而带来的风险面前，是时候重视和明
确安全要素了。
我非常相信，一个应用于所有项目的设计优良、实现合理的系统开
发周期能够在改进安全性方面发挥重要的作用。已经被证明的是，
系统开发周期这种方法能够提高团队实施项目和服务的能力。这种
生命周期提供了一种轻量级的框架来实现明确的决策制定、反馈和
风险管理。在生命周期的初期，它使得项目的各个关键参与方积极
参与，并且提供了处理周期下一阶段的明确的标准集。这种方法使
得最终系统的所有属性在整个设计和开发过程中都得到了完美地解
决。它使得我们能够将安全编织到整个项目方案的结构中。我见过
性价比很高的优美的系统，也见过成本很高的“丑陋"的系统。优良
的设计准则本质上并不是昂贵的，而且大多数情况下，它还能够减
少系统的整体设计、开发和运营成本。
我在NASA、Reliable软件科技公司和Bell实验室的工作经历是很有
益的，它帮助我形成了一个完整的构建“特性”的生命周期的观念，
也助我完善了管理项目和安全风险的策略。我非常敬重曾与我一起
工作过的人，感谢他们一直帮助我不断学习进步。这些机构的研究
和咨询团队都很有天赋，时刻致力于提高系统性能的各个方面。
2408
---
## Page 2410
最后，安全之美并不是一个孤立的标志。对一个可靠性、有效性或
可用性都很“低劣”的系统来说，怎么去说它的安全很美？安全之美
的关键是让整个系统的设计、开发和部署都很美。
第11章促使公司思考：未来的
软件安全吗
为了实现软件的安全之美，需要一种与当前截然不同的业务模型。
事实上，当前商业软件的安全状态是相当糟糕的，不断有令人尴尬
的漏洞和实际攻击被公布于众，开发人员常常因为修补和发布补丁
而手忙脚乱，顾客也不断地被告诚要对软件进行日常的检查和维
护。
解决方案是在商业软件的开发中融入顾客对安全控制的需求。商业
软件开发公司的目前业务模型是想方设法满足显式的顾客需要，但
是并不包括像安全这样的隐式需求。历史的经验显示，软件供应商
在发布核心功能以满足顾客的上市需求方面非常在行。但是，消除
安全漏洞从来没有成为显式需求。能不能采用一种方式，把安全添
加到需求模型中，让顾客和软件供应商都从中获益呢？
本章讲述了一家公司努力改变采购和开发软件这一常规模式的故
事。这个故事的结局还没有完成，但是对那些有兴趣提高它们对软
件安全漏洞攻击的抵抗力的机构而言，这个故事到目前为止的进程
可能会对它们产生一些帮助。
11.1隐式的需求也可能非常强大
软件的购买与其他类型的购买存在很大的区别。但是，为了更好地
理解采用一种不同的软件购买方法的需要，在其他面向顾客的商业
中考虑下面这些顾客需求场景是非常有益的。我鼓励读者认真思
考，如果你是消费者，在下面的场景中将会怎么做：
1）你来到一家麦当劳，订了一个巨无霸并付了钱。当你坐下来准备
享受这个汉堡时却发现它已经冰凉了。你打算怎么做呢？
2）你在Amazoncom购买了一位知名作家的一本畅销书，并选择了隔
夜交货的发货方式，因为你道不及待地想看到这本书。收到快递，
2409
---
## Page 2411
打开包装后，却发现缺失了16页，并且所有书页的边角都皱巴巴
的，包括封面也是一样。你下一步打算采取什么行动呢？
3）你从BestBuy上花125美元购买了一个能够进行光滑照片编辑和打
印的专业桌面打印软件包，并把它安装在一台家用计算机上，以便
编辑和管理自己在许多有趣的旅游经历中所拍摄的私人照片。在完