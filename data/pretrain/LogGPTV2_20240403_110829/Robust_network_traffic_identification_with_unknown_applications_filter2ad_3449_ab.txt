ﬁcation. To achieve ﬁne-grained classiﬁcation, the module of
Fig. 1. RTC framework.
Algorithm 1: Zero-day samples extraction
, unlabeled set
to obtain clusters
Require: labeled sets
Ensure: zero-day sample set
to
1:
2:
3: Perform clustering on
4:
5: for
if
6:
7:
end if
8:
9: end for
10: Combine
classiﬁer
do
{
does not contain any labeled ﬂows from then
and
to train a
-class
is for a generic unknown class}
if
11:
12: while Classify all ﬂows in
is predicted to the unknown class then
13:
Put
14:
end if
15:
16: end while
into
do
by
a system update can intelligently analyze the zero-day trafﬁc
and construct new classes to complement the system’s knowl-
edge. In this paper, we provide an implementation of RTC in
which the algorithms of random forest and -means are em-
ployed to perform supervised classiﬁcation and unsupervised
learning (clustering).
A. Unknown Discovery
We propose a two-step method of unknown discovery to ex-
tract zero-day trafﬁc samples from a set of unlabeled network
trafﬁc crucial to the RTC scheme. The two-step method is sum-
marized in Algorithm 1. The ﬁrst step is the -means based iden-
tiﬁcation of zero-day trafﬁc clusters. The second step is zero-day
sample extraction using random forest.
Given the prelabeled training sets
and an
unlabeled set
, we roughly ﬁlter out some zero-day samples
out from
by using a semi-supervised idea for the ﬁrst
step. The labeled and unlabeled samples are merged to feed
This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination.
4
IEEE/ACM TRANSACTIONS ON NETWORKING
clusters
-means. The
the clustering algorithm,
aims to partition the trafﬁc ﬂows into
-means clustering
,
, to minimize the within-cluster sum of
squares. The traditional
-means algorithm uses an iterative
reﬁnement technique. Given an initial set of randomly selected
centroids, the algorithm proceeds by alternating between the
assignment step and the update step [40]. In the assignment
step, each ﬂow is assigned to the cluster with the closest mean
(1)
In the update step, the new means are calculated to be the cen-
troid of ﬂows in the cluster. By choosing a large
[25], [41], we
obtain the high-purity trafﬁc clusters,
. The prela-
beled training samples can then be used to identify zero-day
trafﬁc clusters. The rule is as follows.
•
If a cluster does not contain any prelabeled samples, it is a
zero-day trafﬁc cluster.
However, simply put, a large will lead to a high TP rate as
well as a high FP rate of unknown detection that will seriously
affect the purity of the detected unknown samples.
In the second step, we propose creating a random forest clas-
siﬁer in order to address this issue. A generic unknown class
is proposed to represent the mixture of zero-day applications.
The zero-day sample set
obtained in the ﬁrst step is tempo-
rally used as the training set for this generic unknown class.
Thus, we have a speciﬁc multiclass classiﬁcation problem in-
volving
known classes and one unknown class. Then, prela-
beled training sets
and temporal zero-day sample
set
. Random
forest with good generalization capability displayed excellent
classiﬁcation performance in previous work on trafﬁc classiﬁ-
cation. We further apply
to obtain a
high-purity set of zero-day samples,
. In particular, to guar-
antee the purity of zero-day samples, we apply a new classiﬁ-
cation method that considers ﬂow correlation [4] in real-world
trafﬁc. This will be described in detail in Section III-B.
combine to train a random forest classiﬁer,
to classify ﬂows in
B. BoF-Based Trafﬁc Classiﬁcation
For robust trafﬁc classiﬁcation, we further propose a new
classiﬁcation method that considers ﬂow correlation in real-
world network trafﬁc and classiﬁes correlated ﬂows together
rather than in single ﬂows.
Algorithm 2 presents the proposed method of BoF-based
trafﬁc classiﬁcation. Given the prelabeled training sets
produced by
and the zero-day sample set
-class classiﬁcation.
the module of unknown discovery, we can build classiﬁer
for the
is able to categorize
zero-day trafﬁc into a generic unknown class. Following our
previous work [4], we incorporate ﬂow correlation into the
trafﬁc classiﬁcation process in order to signiﬁcantly improve
identiﬁcation accuracy. Flow correlation can be discovered by
the 3-tuple heuristic [30], [42], [43]. That is, in a short period
of time, the ﬂows sharing the same destination IP, destina-
tion port, and transport protocol are generated by the same
application/protocol. For convenience of trafﬁc classiﬁcation,
we use “bag of ﬂows” to model ﬂow correlation. A BoF can
be described by
represents the
, where
Algorithm 2: BoF-based Trafﬁc Classiﬁcation
, zero-day sample set
,
Ensure: label set
for testing ﬂows
Require: labeled sets
testing set
1: Combine
classiﬁer
{
2: Construct BoFs
and
to train a
-class
represent a generic unknown class}
from
according to
3-tuple heuristic {consider ﬂow correlation in trafﬁc
classiﬁcation}
do
Take a BoF
for
to
Classify
3: while
4:
5:
6:
7:
8: Make ﬁnal decision by aggregating the predictions of
from
do
end for
by
ﬂows in BoF
Assign the label of
9:
10: end while
to all ﬂows in this BoF
th ﬂow in the BoF. Classiﬁcation of a BoF can be addressed by
aggregating the ﬂow predictions produced by a conventional
classiﬁer. In this paper, the aggregated classiﬁer
can
be expressed as
(2)
denotes the random forest classiﬁer and
where
jority vote method [44]. For BoF
(
produced by
is the ma-
, we have ﬂow predictions
).
is the number of ﬂows in
The ﬂow predictions can be simply transformed into votes
indicates the th class,
if
otherwise.
Then, the compound decision rule is
assign
if
(3)
(4)
Consequently, all ﬂows in
. The BoF-
based trafﬁc classiﬁcation is also used for unknown discovery
in Section III-A.
are classiﬁed into
Here, we provide formal justiﬁcation on the beneﬁt of ﬂow
correlation for trafﬁc classiﬁcation. In the previous work [4],
we found that the accuracy of ﬂow-statistics-based trafﬁc clas-
siﬁcation can be improved signiﬁcantly by combining multiple
correlated ﬂows. For the theoretical study, and given that BoF
, we made a compound prediction using
the average of predictions made on each ﬂow. Based on the
Bayesian decision theory, the average combination rule can be
transformed to the majority vote rule under Kittler’s theoretical
framework [45].
If we consider a classiﬁcation problem, where we try to pre-
dict a posteriori probability, and we suppose a trained predictive
model is
, the compound prediction is given by
(5)
This article has been accepted for inclusion in a future issue of this journal. Content is final as presented, with the exception of pagination.
ZHANG et al.: ROBUST NETWORK TRAFFIC CLASSIFICATION
5
Suppose the true posteriori probability function we are trying to
predict is given by
, the output of each random ﬂow can
be written as the true value plus an error in the form
The average sum-of-squares error can be described as
(6)
(7)
has its own distribution and
denotes the expecta-
where
tion with respect to its distribution. The average error made by
the ﬂows individually is therefore
Similarly, the expected error for the BoFs is given by
(8)
(9)
We assume errors have a zero mean and are uncorrelated, i.e.,
. Then, we
, and
obtain
(10)
This result suggests the ﬂow prediction error can be reduced by
a factor of
by using a simple BoF-based model.
A further study on
will be presented in Section VI by
relaxing the independent assumption.
C. System Update
With unknown discovery and BoF-based trafﬁc classiﬁca-
tion, the proposed scheme has identiﬁed zero-day trafﬁc when
performing trafﬁc classiﬁcation. The module of system update
is proposed to achieve ﬁne-grained classiﬁcation of zero-day
trafﬁc. The purpose is to learn new classes in identiﬁed zero-day
trafﬁc and to complement the system’s knowledge. The capa-
bility of learning new classes makes the proposed scheme dif-
ferent to the conventional trafﬁc classiﬁcation method.
The procedure of
learning new classes is shown in
Algorithm 3. Given a set of zero-day trafﬁc,
, which is
the outcome of BoF-based trafﬁc classiﬁcation, we perform
-means clustering to obtain the clusters
. For
each cluster, we randomly select several sample ﬂows (e.g.,
three) for manual inspection. To guarantee high purity of new
training sets, the consensus strategy is adopted to make a
prediction. If all the selected ﬂows indicate a new applica-
tion/protocol, we create a new class and use the ﬂows in the
cluster as its training data. For a new class that has been created
during the system update, the ﬂows in the cluster will be added
to the training set of that class. Once the cluster inspection is
completed, the new detected classes will be added into the set
of known classes, and the training dataset will be extended
Algorithm 3: New class detection
Require: zero-day trafﬁc
Ensure: training samples for new classes
1: Perform clustering on
2: for
3:
4: Manually inspect these
Randomly select
do
to
ﬂows from
to obtain
clusters
ﬂows {Involve a little human
effort}
if All of the selected ﬂows are generated by the same
application then
if This is a new application then
if It has been identiﬁed then
Merge
and its training set
else
Create a training set
application
for this new
5:
6:
7:
8:
9:
10:
end if
11: