```
$ cd /path/to/nginx-repo-files/
$ scp nginx-repo.* user@destination-server:.
```
接下来，我们通过 SSH 连接到 Ansible 服务器，确保 NGINX Plus 的 SSL 目录存在，移动文件到这儿。
```
$ ssh user@destination-server
$ sudo mkdir -p /etc/ssl/nginx/
$ sudo mv nginx-repo.* /etc/ssl/nginx/
```
验证你的 **/etc/ssl/nginx** 目录包含了证书(**.crt**)和密钥(**.key**)文件。你可以使用 tree 命令检查。
```
$ tree /etc/ssl/nginx
/etc/ssl/nginx
├── nginx-repo.crt
└── nginx-repo.key
0 directories, 2 files
```
如果你没有安装 tree，可以使用下面的命令去安装。
```
$ sudo yum install -y tree
```
#### 创建 Ansible 目录结构
以下执行的步骤和我们的“创建 Ansible Playbook 来安装 NGINX（CentOS)”小节中部署开源 NGINX 的非常相似。首先，我们建一个工作目录用于部署 NGINX Plus 使用。我喜欢将它创建为我主目录的子目录。
```
$ cd $HOME
$ mkdir -p ansible-nginx-plus/tasks/
$ touch ansible-nginx-plus/deploy.yml
$ touch ansible-nginx-plus/tasks/install_nginx_plus.yml
```
目录结构看起来像这样。
```
$ tree $HOME/ansible-nginx-plus/
/home/kjones/ansible-nginx-plus/
├── deploy.yml
└── tasks
└── install_nginx_plus.yml
1 directory, 2 files
```
#### 创建主部署文件
接下来，像开源的 NGINX 一样，我们使用 vim 创建 **deploy.yml** 文件。
```
$ vim ansible-nginx-plus/deploy.yml
```
和开源 NGINX 的部署唯一的区别是，我们将包含文件的名称修改为 **install\_nginx\_plus.yml**。该文件告诉 Ansible 在 **nginx** 组中的所有服务器（**/etc/ansible/hosts** 中定义的）上部署 NGINX Plus ，然后在部署过程中从 **tasks** 目录读取并执行 **install\_nginx\_plus.yml** 的内容。
```
# ./ansible-nginx-plus/deploy.yml
- hosts: nginx
  tasks:
    - include: 'tasks/install_nginx_plus.yml'
```
如果你之前没有安装过的话，你需要创建 hosts 文件，详细说明在上面的“创建 NGINX 服务器的列表”小节。
#### 为 NGINX Plus 创建部署文件
在文本编辑器中打开 **install\_nginx\_plus.yml**。该文件包含了使用 Ansible 来安装和配置 NGINX Plus 部署过程中的指令。这些命令和模块仅针对 CentOS，有些是 NGINX Plus 独有的。
```
$ vim ansible-nginx-plus/tasks/install_nginx_plus.yml
```
第一节使用 [`file`](http://docs.ansible.com/ansible/file_module.html) 模块，告诉 Ansible 使用指定的`path`和`state`参数为 NGINX Plus 创建特定的 SSL 目录，设置属主为 root，将权限 `mode` 更改为0700。
```
# ./ansible-nginx-plus/tasks/install_nginx_plus.yml
- name: NGINX Plus | 创建 NGINX Plus ssl 证书目录
  file: path=/etc/ssl/nginx state=directory group=root mode=0700
```
接下来的两节使用 [copy](http://docs.ansible.com/ansible/copy_module.html) 模块从 Ansible 部署服务器上将 NGINX Plus 的证书和密钥复制到 NGINX Plus 服务器上，再修改属主为 root，权限 `mode` 为0700。
```
- name: NGINX Plus | 复制 NGINX Plus repo 证书 
  copy: src=/etc/ssl/nginx/nginx-repo.crt dest=/etc/ssl/nginx/nginx-repo.crt owner=root group=root mode=0700
- name: NGINX Plus | 复制 NGINX Plus 密钥
  copy: src=/etc/ssl/nginx/nginx-repo.key dest=/etc/ssl/nginx/nginx-repo.key owner=root group=root mode=0700
```
接下来，我们告诉 Ansible 使用 [`get_url`](http://docs.ansible.com/ansible/get_url_module.html) 模块在 url 参数指定的远程位置从 NGINX Plus 仓库下载 CA 证书，通过 `dest` 参数把它放在指定的目录 `dest` ，并设置权限 `mode` 为 0700。
```
- name: NGINX Plus | 下载 NGINX Plus CA 证书
  get_url: url=https://cs.nginx.com/static/files/CA.crt dest=/etc/ssl/nginx/CA.crt mode=0700
```
同样，我们告诉 Ansible 使用 `get_url` 模块下载 NGINX Plus repo 文件，并将其复制到 NGINX Plus 服务器上的 **/etc/yum.repos.d** 目录下。
```
- name: NGINX Plus | 下载 yum NGINX Plus 仓库
  get_url: url=https://cs.nginx.com/static/files/nginx-plus-7.repo dest=/etc/yum.repos.d/nginx-plus-7.repo mode=0700
```
最后两节的 `name` 告诉 Ansible 使用 `yum` 和 `service` 模块下载并启动 NGINX Plus。
```
- name: NGINX Plus | 安装 NGINX Plus
  yum:
    name: nginx-plus
    state: latest
- name: NGINX Plus | 启动 NGINX Plus
  service:
    name: nginx
    state: started
```
#### 运行 Ansible 来部署 NGINX Plus
在保存 **install\_nginx\_plus.yml** 文件后，运行 ansible-playbook 命令来部署 NGINX Plus。同样在这里，我们使用 --ask-pass 参数使用 Ansible 提示输入 SSH 密码并把它传递给每个 NGINX Plus 服务器，并指定主配置文件路径 **deploy.yml** 文件。
```
$ sudo ansible-playbook --ask-pass $HOME/ansible-nginx-plus/deploy.yml
PLAY [nginx] ******************************************************************
GATHERING FACTS ***************************************************************
ok: [172.16.239.140]
TASK: [NGINX Plus | Creating NGINX Plus ssl cert repo directory] **************
changed: [172.16.239.140]
TASK: [NGINX Plus | Copying NGINX Plus repository certificate] ****************
changed: [172.16.239.140]
TASK: [NGINX Plus | Copying NGINX Plus repository key] ************************
changed: [172.16.239.140]
TASK: [NGINX Plus | Downloading NGINX Plus CA certificate] ********************
changed: [172.16.239.140]
TASK: [NGINX Plus | Downloading yum NGINX Plus repository] ********************
changed: [172.16.239.140]
TASK: [NGINX Plus | Installing NGINX Plus] ************************************
changed: [172.16.239.140]
TASK: [NGINX Plus | Starting NGINX Plus] **************************************
changed: [172.16.239.140]
PLAY RECAP ********************************************************************
172.16.239.140             : ok=8    changed=7    unreachable=0    failed=0
```
playbook 的 recap 成功完成。现在，使用 curl 命令来验证 NGINX Plus 是否在运行。太好了，我们得到的是 200 OK！成功了！我们使用 Ansible 成功地安装了 NGINX Plus。
```
$ curl -Is http://172.16.239.140 | grep HTTP
HTTP/1.1 200 OK
```
### 在 Ubuntu 上创建 Ansible Playbook 来安装 NGINX 和 NGINX Plus
在 [Ubuntu 服务器](http://www.ubuntu.com/) 上部署 NGINX 和 NGINX Plus 的过程与 CentOS 很相似，我将一步一步的指导来完成整个部署文件，并指出和 CentOS 的细微差异。
首先和 CentOS 一样，创建 Ansible 目录结构和 Ansible 主部署文件。也按“创建 NGINX 服务器的列表”小节的描述创建 **/etc/ansible/hosts** 文件。对于 NGINX Plus，你也需要安装“复制 NGINX Plus 证书和密钥到 Ansible 服务器”小节的描述复制证书和密钥。
下面是开源 NGINX 的 **install\_nginx.yml** 部署文件。在第一节，我们使用 [`apt_key`](http://docs.ansible.com/ansible/apt_key_module.html) 模块导入 NGINX 的签名密钥。接下来的两节使用 [`lineinfile`](http://docs.ansible.com/ansible/lineinfile_module.html) 模块来添加 Ubuntu 14.04 的软件包 URL 到 **sources.list** 文件中。最后，我们使用 [`apt`](http://docs.ansible.com/ansible/apt_module.html) 模块来更新缓存并安装 NGINX（`apt` 取代了我们在 CentOS 中部署时的 `yum` 模块）。
```
# ./ansible-nginx/tasks/install_nginx.yml
- name: NGINX | 添加 NGINX 签名密钥
  apt_key: url=http://nginx.org/keys/nginx_signing.key state=present
- name: NGINX | 为 NGINX 添加 sources.list deb url  
  lineinfile: dest=/etc/apt/sources.list line="deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx"
- name: NGINX Plus | 为 NGINX 添加 sources.list deb-src url  
  lineinfile: dest=/etc/apt/sources.list line="deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx"
- name: NGINX | 更新 apt 缓存
  apt:
    update_cache: yes
- name: NGINX | 安装 NGINX
  apt:
    pkg: nginx
    state: latest
- name: NGINX | 启动 NGINX
  service:
    name: nginx
    state: started
```
下面是 NGINX Plus 的部署文件 **install\_nginx.yml**。前四节设置了 NGINX Plus 密钥和证书。然后，我们像开源的 NGINX 一样用 `apt_key` 模块导入签名密钥，`get_url` 模块为 NGINX Plus 下载 `apt` 配置文件。[`shell`](http://docs.ansible.com/ansible/shell_module.html) 模块使用 `printf` 命令写下输出到 **sources.list.d** 目录中的 **nginx-plus.list** 文件。最终的 `name` 模块和开源 NGINX 一样。
```
# ./ansible-nginx-plus/tasks/install_nginx_plus.yml
- name: NGINX Plus | 创建 NGINX Plus ssl 证书 repo 目录
  file: path=/etc/ssl/nginx state=directory group=root mode=0700
- name: NGINX Plus | 复制 NGINX Plus 仓库证书
  copy: src=/etc/ssl/nginx/nginx-repo.crt dest=/etc/ssl/nginx/nginx-repo.crt owner=root group=root mode=0700
- name: NGINX Plus | 复制 NGINX Plus 仓库密钥
  copy: src=/etc/ssl/nginx/nginx-repo.key dest=/etc/ssl/nginx/nginx-repo.key owner=root group=root mode=0700
- name: NGINX Plus | 安装 NGINX Plus CA 证书
  get_url: url=https://cs.nginx.com/static/files/CA.crt dest=/etc/ssl/nginx/CA.crt mode=0700
- name: NGINX Plus | 添加 NGINX Plus 签名密钥
  apt_key: url=http://nginx.org/keys/nginx_signing.key state=present
- name: NGINX Plus | 安装 Apt-Get NGINX Plus 仓库
  get_url: url=https://cs.nginx.com/static/files/90nginx dest=/etc/apt/apt.conf.d/90nginx mode=0700
- name: NGINX Plus | 为 NGINX Plus 添加 sources.list url  
  shell: printf "deb https://plus-pkgs.nginx.com/ubuntu `lsb_release -cs` nginx-plus\n" >/etc/apt/sources.list.d/nginx-plus.list
- name: NGINX Plus | 运行 apt-get update
  apt:
    update_cache: yes
- name: NGINX Plus | 安装 NGINX Plus 通过 apt-get
  apt:
    pkg: nginx-plus
    state: latest
- name: NGINX Plus | 启动 NGINX Plus
  service:
    name: nginx
    state: started
```
现在我们已经准备好运行 ansible-playbook 命令：
```
$ sudo ansible-playbook --ask-pass $HOME/ansible-nginx-plus/deploy.yml
```
你应该得到一个成功的 play recap。如果你没有成功，你可以使用冗余参数，以帮助你解决出现的问题。
### 小结
我在这个教程中演示是什么是 Ansible，可以做些什么来帮助你自动部署 NGINX 或 NGINX Plus，这仅仅是个开始。还有许多有用的模块，包括从用户账号管理到自定义配置模板等。如果你有兴趣了解关于这些的更多信息，请访问 [Ansible 官方文档](http://docs.ansible.com/)。
---
via: 
作者：[Kevin Jones](https://www.nginx.com/blog/author/kjones/) 译者：[strugglingyouth](https://github.com/strugglingyouth) 校对：[wxy](https://github.com/wxy)
本文由 [LCTT](https://github.com/LCTT/TranslateProject) 原创编译，[Linux中国](https://linux.cn/) 荣誉推出