### 目录
1. 全文检索原理
2. 自定义分词
3. 排序（Rank）
4. 关键词分析
5. GIN 索引
6. RUM 索引
7. 全文检索与附加过滤
8. 模糊查询
   - 单字模糊查询
   - 双字模糊查询
   - wchar 模糊查询注意事项
9. 相似文本查询
10. 前缀模糊查询背景技术
11. 前后模糊查询背景技术
12. 支持中文的前后模糊查询背景技术
13. 创建数据库命令
14. 相似度算法
15. 相似查询函数
16. 课程计划
17. 习题
18. 技术社群

### 1. 全文检索原理
全文检索是一种在大量文本数据中快速查找特定信息的技术。它通过创建倒排索引来实现高效搜索。

### 2. 自定义分词
自定义分词允许用户根据具体需求定义分词规则，从而提高检索的准确性和效率。

### 3. 排序（Rank）
排序功能用于对检索结果进行评分和排序，通常基于相关性、时间等因素。

### 4. 关键词分析
关键词分析涉及提取和处理文本中的重要词汇，以支持更精确的检索。

### 5. GIN 索引
GIN (Generalized Inverted Index) 是一种高效的倒排索引结构，适用于全文检索和其他复杂查询。

### 6. RUM 索引
RUM (Range-Unique Multi-Level) 索引是一种多级索引结构，特别适合于全文检索和范围查询。

### 7. 全文检索与附加过滤
全文检索可以结合其他条件进行过滤，以进一步缩小结果集。

### 8. 模糊查询
#### 8.1 单字模糊查询
单字模糊查询允许用户查找包含特定字符的文本。

#### 8.2 双字模糊查询
双字模糊查询允许用户查找包含特定两个字符的文本。

#### 8.3 wchar 模糊查询注意事项
在使用 wchar 进行模糊查询时，需要注意字符编码和索引设置。

### 9. 相似文本查询
相似文本查询用于查找与给定文本相似的内容，常用于拼写检查和推荐系统。

### 10. 前缀模糊查询背景技术
前缀模糊查询通过索引优化来提高性能。例如：
```sql
CREATE EXTENSION pg_trgm;
CREATE INDEX idx ON tbl (col text_pattern_ops);
SELECT * FROM tbl WHERE col ~ '^前缀' OR col LIKE '前缀%';
```

### 11. 前后模糊查询背景技术
前后模糊查询（如 `%abc%`）需要使用表达式索引或特殊技术来优化性能。例如：
```sql
EXPLAIN SELECT * FROM pre WHERE c1 LIKE '你%';
QUERY PLAN
--------------------------------------------------------------------
Index Scan using idx_pre on pre (cost=0.29..2.71 rows=1 width=21)
Index Cond: ((c1 ~>=~ '你'::text) AND (c1 ~=~ '尾结'::text) AND (reverse(c1) ~
```

### 12. 支持中文的前后模糊查询背景技术
支持中文的前后模糊查询需要特殊的分词和索引技术。参考：
- [支持中文的前后模糊查询](https://github.com/digoal/blog/blob/master/201605/20160506_02.md)

### 13. 创建数据库命令
```sql
CREATE DATABASE name
[ [ WITH ] [ OWNER [=] user_name ]
[ TEMPLATE [=] template ]
[ ENCODING [=] encoding ]
[ LC_COLLATE [=] lc_collate ]
[ LC_CTYPE [=] lc_ctype ] -- 注意：不能设为 C (=c 时, pg_trgm 无法切分 wchar)
[ TABLESPACE [=] tablespace_name ]
[ ALLOW_CONNECTIONS [=] allowconn ]
[ CONNECTION LIMIT [=] connlimit ]
[ IS_TEMPLATE [=] istemplate ] ];
```

### 14. 相似度算法
相似度算法用于计算文本之间的相似程度。常用的算法包括：
- `pg_trgm`：基于 trigram 的相似度计算
- `token 相交率`：基于 token 的相交率计算相似度

### 15. 相似查询函数
```sql
CREATE OR REPLACE FUNCTION get_res(
    text, -- 要按相似搜的文本
    int8, -- 限制返回多少条
    float4 DEFAULT 0.3, -- 相似度阈值，低于这个值不再搜索
    float4 DEFAULT 0.1 -- 相似度递减步长，直至阈值
) RETURNS SETOF RECORD AS $$
DECLARE
    lim float4 := 1;
BEGIN
    -- 判定
    IF NOT ($3 > 0 AND $4 > 0 AND $4 <= 1) THEN
        RAISE NOTICE '$3 must >0 and $4 must >0 and <=1';
        RETURN;
    END IF;

    LOOP
        -- 设置相似度阈值
        PERFORM set_limit(lim);
        RETURN QUERY SELECT similarity(info, $1) AS sml, * FROM tbl WHERE info % $1 ORDER BY sml DESC LIMIT $2;
        -- 如果有，则退出 loop
        IF FOUND THEN
            RETURN;
        END IF;
        -- 否则继续，降低阈值
        -- 当阈值小于 0.3 时，不再降阈值搜索，认为没有相似。
        IF lim < $3 THEN
            RETURN;
        ELSE
            lim := lim - $4;
        END IF;
    END LOOP;
END;
$$ LANGUAGE plpgsql STRICT;
```

### 16. 课程计划
- 2019.12.30 19:30: RDS PG 产品概览，如何与 MySQL 结合使用
- 2019.12.31 19:30: 如何连接 PG，GUI 和 CLI 的使用
- 2020.1.3 19:30: 如何压测 PG 数据库、如何瞬间构造海量测试数据
- 2020.1.6 19:30: MySQL 与 PG 对比学习（面向开发者）
- 2020.1.7 19:30: 如何将 MySQL 数据同步到 PG（DTS）
- 2020.1.8 19:30: PG 外部表妙用 - mysql_fdw, oss_fdw（直接读写 MySQL 数据、冷热分离）
- 2020.1.9 19:30: PG 应用场景介绍 - 并行计算，实时分析
- 2020.1.10 19:30: PG 应用场景介绍 - GIS
- 2020.1.13 19:30: PG 应用场景介绍 - 用户画像、实时营销系统
- 2020.1.14 19:30: PG 应用场景介绍 - 多维搜索
- 2020.1.15 19:30: PG 应用场景介绍 - 向量计算、图像搜索
- 2020.1.16 19:30: PG 应用场景介绍 - 全文检索、模糊查询
- 2020.1.17 19:30: PG 数据分析语法介绍
- 2020.1.18 19:30: PG 更多功能了解：扩展语法、索引、类型、存储过程与函数。如何加入 PG 技术社群

### 17. 习题
- 中文分词的常用插件有哪些？
- 全文检索使用什么索引？
- 全文检索支持自定义分词吗？
- 全文检索支持哪些搜索方法？
- 为什么有些数据库无法支持 wchar 模糊查询加速，lc_ctype 应该如何设置？
- `prefix%` 的 like 查询使用什么索引？
- `%suffix` 的 like 查询使用什么索引？
- `%xxx%` 前后模糊查询使用什么索引？
- RUM 索引和 GIN 索引的重要差别有哪些？
- 少于 3 个字符的 `%xxx%` 前后模糊查询使用什么索引？
- 相似文本查询用什么方法？

### 18. 技术社群
- PG 技术交流钉钉群 (3600+ 人)