### 3.1 ZMap Scans

ZMap is a powerful tool for detecting targets that support a specific transport protocol on a scanned port, without prior knowledge of the targets (at least for IPv4) [10]. To identify QUIC-capable hosts on the Internet, we implemented a ZMap module, similar to the work by Rüth et al. [39]. However, we could not directly reuse their published module because it was designed to detect Google QUIC versions and is not up-to-date with the current IETF drafts or IPv6 support.

The implemented ZMap module sends IETF draft-conformant QUIC packets, which enforce a Version Negotiation packet as a response. The remaining content is neither encrypted nor does it contain a Client Hello message, as the server must first process the invalid version and respond with a version negotiation [21]. This approach reduces computational overhead at the scanner and theoretically allows for higher scanning rates. Additionally, padding is added to reach the required 1200 bytes. Using this ZMap module generates at least an order of magnitude more traffic compared to a simple TCP SYN scan at the same rate, such as discovering HTTPS-capable hosts on port 443. Our research is limited to a single vantage point, but we use a dedicated, unfiltered network research prefix, part of our university infrastructure, for scans. This network can handle the scanning load, and we are in contact with the network administrators. As the usage and specification of new methods to discover alternative services, including QUIC, increase, future research might reduce the number of required scans.

We tested whether a version negotiation could be triggered without padding and found a significantly lower response rate. Only 11.3% of IPv4 addresses responded when padding was used, and 95.4% of these were from a single Autonomous System (AS). With a subset of targets, we attempted to complete a handshake with an Initial packet without padding, but all tests were unsuccessful. Thus, all tested deployments follow the specifications in draft 34 [22] for the Initial packet without a version negotiation.

For IPv4, we scan the complete address space, filtering out local blocklists based on ethical considerations discussed in Appendix A. Before scanning the Internet, we tested the module against local QUIC setups and officially provided test servers [17]. We gradually increased the number of scanned targets and the packet rate per second. After confirming no issues in local tests and receiving no complaints, we began scanning the Internet-wide with up to 15,000 packets per second, capable of scanning the reachable IPv4 address space in under 56 hours.

For IPv6, we use AAAA records from domain resolutions explained in Section 3.2, in addition to inputs from the IPv6 Hitlist service [14]. Combining both input sources, we scan 24.5 million IPv6 addresses.

In Sections 4 and 5, we show that a major disadvantage of these scans is the lack of information about domains resolving to found IP addresses supporting QUIC. During stateful scans, the absence of associated domain knowledge results in a low success rate due to the strict integration of TLS into QUIC and the use of Server Name Indication (SNI). We argue that statistics regarding QUIC deployment based solely on ZMap scans need careful analysis. Furthermore, we demonstrate in Section 4 that some deployments do not react to the forced version negotiation as specified in RFC9000 [21] and used by the ZMap module.

### 3.2 DNS Scans

To overcome the limitations of QUIC ZMap scans, particularly the lack of domain information and high bandwidth requirements, we evaluate additional methods to discover QUIC deployments based on domains that can be used as SNI. The newly drafted HTTPS DNS RR provides a mechanism to quickly identify whether a service can be accessed using QUIC based on its domain, allowing for lightweight scans based on DNS resolution. Unlike ZMap scans, this approach requires prior knowledge of potential targets in the form of domains.

To assess the effectiveness of this method and the quality of found QUIC-capable targets for further research, we actively resolve domain lists searching for their SVCB and HTTPS DNS RRs, as described in Section 2.2.

We use MassDNS2 with a local Unbound3 resolver to resolve domains from various input sources, including the Alexa Top 1M [2], Majestic Top 1M [32], and Umbrella Top 1M [5]. Additionally, we request and scan available zone files from the Centralized Zone Data Service (CZDS) [20], which includes com, net, and org. CZDS offers us 1.1 thousand Top Level Domains (TLDs), accounting for around 211 million domains, with 180 million being part of com, net, and org. We scanned all sources weekly between March 1st and May 9th, 2021. While we successfully resolved HTTPS DNS RRs for domains, none resolved to an SVCB DNS RR. Therefore, we focus on results from HTTPS DNS RR scans throughout the paper. Nevertheless, we show in Section 4 that these scans still provide valuable insights into the state of QUIC deployments. Analyzing the state of these new DNS RRs and their deployment in the future offers a lightweight means to detect service information of domains.

These DNS scans also resolve A and AAAA DNS RRs to serve as a basis for further scans, including TLS and IPv6 ZMap scans. For the latter, we use AAAA records as input. DNS resolutions are combined with ZMap scans for stateful QUIC scans and TLS over TCP scans, using the information from domain resolutions as SNI to increase the success rate of TLS handshakes.

### 3.3 TLS over TCP Scans

Due to the low success rate of HTTPS DNS RR scans (see Section 4), we also investigate the value of the HTTP ALT-SVC Header to detect QUIC-capable targets. Although collecting HTTP ALT-SVC Headers requires more resource-intensive scans, the advanced maturity of this methodology allows us to detect more QUIC deployments, as shown in Section 4. We rely on regular TLS over TCP scans, including HTTP/1 or HTTP/2 requests, already conducted within our research group. This enables us to collect HTTP ALT-SVC Headers and thus potential QUIC deployments, as explained in Section 2.2.

To scan TLS over TCP, we first conduct standard TCP SYN ZMap scans targeting port 443, where we expect the highest response rate for both TLS over TCP and QUIC scans. We use the ZMap fork4 from Gasser et al. [14] that supports IPv6. While we scan the complete IPv4 address space, we use domain resolutions from our DNS scans and data from the IPv6 Hitlist Service [14] as input for IPv6 scans.

The ZMap scans are followed by stateful TLS scans to complete a full handshake. We use the Goscanner, introduced by Amann et al. [3] and used in related work by Holz et al. [19], for stateful TLS scans. The Goscanner is chosen over the more prominent tool ZGrab 2.05 because it supports TLS 1.3, the mandatory version for QUIC [43]. This allows us to extract TLS information from these scans to compare with our QUIC results, besides collecting HTTP ALT-SVC Headers (see Section 5). We scan the set of addresses from ZMap twice: once without and once with SNI. SNI information for each target is collected by joining the results from DNS A and AAAA resolutions with the results from the ZMap scans.

### 3.4 QScanner: A Stateful QUIC Scanner

The previous scans only allow the detection of QUIC deployments and their supported versions. Collecting further information, such as whether complete handshakes succeed or details about QUIC specifics, including TLS and HTTP properties, is not possible. Therefore, we implemented a stateful scanner, similar to the Goscanner used for TLS over TCP. It is based on the QUIC implementation quic-go6 and qtls7. Both libraries are under active development and implement new draft versions quickly. The version used for scans analyzed in Section 5 supported drafts 29, 32, and 34. However, it was updated shortly after the release of RFC9000 to support IETF version 1, usable with the published QScanner. According to the Interop Runner from Seemann and Iyengar [42], it is compatible with most implementations.

We expected a high success rate with a scanner based on quic-go and were able to effectively parallelize our scan, reducing the overall scan duration while adhering to the ethical considerations from Appendix A. We only modified the respective QUIC and TLS libraries to expose information about QUIC, TLS, and HTTP. The QScanner allows scanning IP addresses individually (IPv4 and IPv6) or in combination with a domain used as SNI.

We used the QScanner for stateful scans covering all found targets: (i) from ZMap scans in combination with DNS A and AAAA resolutions, (ii) from HTTP ALT-SVC Header data, and (iii) from HTTPS DNS RR scans.

### 4. QUIC Deployments on the Internet

This section analyzes the results from scans in terms of their detection rate of QUIC deployments, seen versions, and potential biases towards providers. Most analyses focus on the scans from calendar week 18 (May 3 to May 9, 2021). Table 1 provides a general overview of the found targets from each source.

**ZMap Results:**
Our ZMap scan resulted in 2.1 million IPv4 addresses reacting with a Version Negotiation packet, making it the most productive source based on IP addresses. These addresses are located in over 4,700 ASes. Compared to results from Rüth et al. [39], the number of addresses has tripled since 2018, and the involved ASes have increased by 50%. Joining the results with our DNS resolution reveals 30 million domains with potential QUIC support, resolving to 10% of found IPv4 addresses, while no domain resolves to the remaining addresses in our scans. Most IP addresses without an associated domain belong to large Content Delivery Networks (CDNs), mainly Cloudflare (AS13335) with 28%, Google (AS15169) with 22%, Akamai (AS20940, 16.9%), and Fastly (AS54113, 12.3%). We argue that our resolved domain set can only be associated with a subset of their IP addresses due to load balancing mechanisms. Furthermore, our list of resolved domains is not exhaustive, so for some IP addresses, we may not be aware of associated domains.

In contrast to IP addresses without associated domains, we are aware that not all joined domains might be QUIC-enabled but offer different functionality. Especially for large CDNs, a domain resolving to an IP address does not necessarily mean it is used for QUIC. We evaluate the success rate of QUIC handshakes with these targets in more detail in Section 5.

For IPv6, we find considerably fewer QUIC-capable targets and ASes. The ZMap scan results in 210,000 IPv6 addresses out of 24 million probed targets (see Section 3). Additionally, IPv6 addresses are located in 1,700 ASes compared to 4,700 for IPv4. This difference is partly due to the fact that an IPv6 ZMap scan relies on input and cannot scan the complete address space. On the other hand, IPv6 still lacks widespread deployment, reducing the number of potentially found targets. Similar differences are observed in our TLS over TCP scans, with 53 million IPv4 but only 3 million IPv6 addresses having an open port 443. A domain can be found for 62% of IPv6 addresses, substantially higher than for IPv4, but one of the input sources for the IPv6 ZMap scans is the DNS scans. Similar to IPv4, most IPv6 addresses without domains are from CDNs (31.7% Google (AS15169), 28.5% Akamai (AS20940)).

**Alternative Service Results:**
As shown in Figure 3, the overall success rate of HTTPS DNS RR per input is low, with approximately 1% for Com/Net/Org and up to 8% for top lists, but it increases over time. HTTPS DNS RRs for 2.9 million domains contain information about an IPv4 QUIC deployment, hinting at only 85,000 distinct addresses located in 1,200 ASes. For IPv6, 2.7 million domains indicate QUIC support, including 69,700 addresses located in only 112 ASes.

Extracting HTTP ALT-SVC Headers from TLS over TCP scans results in 232,000 QUIC-capable IPv4 addresses located in 2,000 ASes. While this methodology reveals more QUIC deployments, it hints at a significantly smaller number of IPv4 addresses compared to the ZMap scan. For IPv6, HTTP ALT-SVC Headers reveal a similar number of addresses, but they are located in considerably fewer ASes. We do not additionally scan addresses from these targets with ZMap but only with the QScanner (see Section 5). The following results regarding the distribution across ASes and supported versions are directly extracted from HTTP ALT-SVC Headers or from resolved domains and their HTTPS DNS RR.

**Overlap Between Sources:**
All three input sources provide unique targets. The overlap of IPv4 addresses is 69,500, while 146,000 IPv4 addresses are unique based on HTTP ALT-SVC Headers, and 2 million are unique based on ZMap scans.