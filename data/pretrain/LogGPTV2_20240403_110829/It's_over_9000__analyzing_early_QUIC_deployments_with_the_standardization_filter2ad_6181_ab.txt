3.1 ZMap Scans
ZMap allows detecting targets supporting a specific transport pro-
tocol on a scanned port without previous knowledge about targets
(at least for IPv4) [10]. Therefore, we implemented a ZMap module
to detect QUIC capable hosts on the Internet as first scan. This
module is similar to the work from Rüth et al. [39]. We are not able
to directly reuse their published module, since the available code
was built to detect Google QUIC versions and is neither up to date
with the current IETF drafts nor does it support IPv6.
The implemented ZMap module sends IETF draft conform QUIC
packets enforcing a Version Negotiation packet as response. The
remaining content is neither encrypted nor does it contain a Client
Hello message. This is not necessary since the server must process
the invalid version first and respond with a version negotiation [21].
This reduces the computational overhead at the scanner and theoret-
ically allows higher scanning rates. Furthermore, padding is added
to reach the required 1200 B. Using ZMap with the implemented
module originates at least a magnitude more traffic as a simple
TCP SYN scan with the same rate, e.g., discovering HTTPS capable
hosts on port 443. This research is limited to a single vantage point.
However, we use a dedicated, unfiltered network research prefix
part of our university infrastructure for scans. This network is ca-
pable to handle the scanning load, and we are in contact with the
network administrators. With the increased usage and specification
of newly means to discover alternative services including QUIC,
future research might be able to reduce the number of required
scans.
We tested whether a version negotiation can be triggered without
padding and found a drastically lower response rate. Only 11.3 %
of IPv4 addresses found with padding responded and 95.4 % of
these are from a single Autonomous System (AS). With a subset of
targets, we tested to complete a handshake with an Initial packet
without padding, but were unsuccessful in all tests. Thus, all tested
deployments follow specifications in draft 34 [22] at least for the
Initial packet without a version negotiation.
IMC ’21, November 2–4, 2021, Virtual Event, USA
Johannes Zirngibl, Philippe Buschmann, Patrick Sattler, Benedikt Jaeger, Juliane Aulbach, and Georg Carle
For IPv4, we scan the complete address space filtering the local
blocklist following the ethical considerations discussed in Appen-
dix A. Before scanning the Internet, we tested the module against
local QUIC setups and officially provided test servers [17]. We
slowly increased the number of scanned targets and the packet
rate per second. After we saw no issues in local tests and received
no complaints, we started to scan Internet-wide with up to 15 k
packets per second and are capable of scanning the reachable IPv4
address space in under 56 h.
For IPv6, we use AAAA records from domain resolutions explained
in Section 3.2 in addition to the inputs provided by the IPv6 Hitlist
service [14]. Combining both input sources we scan 24.5 M IPv6
addresses.
We show in Section 4 and 5, that a major disadvantage of these
scans is missing information about domains resolving to found IP
addresses supporting QUIC. During stateful scans, missing knowl-
edge about associated domains results in a low success rate due
to the strict integration of TLS into QUIC and the usage of Server
Name Indication (SNI). We argue that statistics regarding the de-
ployment of QUIC only based on ZMap scans need to be analyzed
carefully. Furthermore, we show in Section 4 that some deploy-
ments do not react to the forced version negotiation as specified in
RFC9000 [21] and used by the ZMap module.
3.2 DNS Scans
To circumvent the disadvantages of QUIC ZMap scans, mainly
missing domains and the high bandwidth requirement, we evaluate
additional means to discover QUIC deployments based on domains
that can be used as SNI. In theory, the newly drafted HTTPS DNS
RR provides a mechanism to quickly identify whether a service can
be accessed using QUIC based on its domain. This allows to set up
lightweight scans based on DNS resolution. In contrast to ZMap
scans, previous knowledge about potential targets is required in
the form of domains.
To analyze the effectiveness of this approach and the quality
of found QUIC capable targets for further research, we actively
resolve domain lists searching for their SVCB and HTTPS DNS RRs
as explained in Section 2.2.
We use MassDNS2 with a local Unbound3 resolver to resolve
domains from different input sources. Resolved domain lists in-
clude the Alexa Top 1M [2], Majestic Top 1M [32] and Umbrella
Top 1M [5]. Furthermore, we request and scan available zone files
from the Centralized Zone Data Service (CZDS) [20], including
com, net and org. CZDS offers us 1.1 k Top Level Domains (TLDs)
accounting for around 211 M domains. 180 M of these are part of
com, net and org. We scanned all sources once a week between
March 1st, and May 9th, 2021. While we successfully resolved HTTPS
DNS RR of domains, none successfully resolved to an SVCB DNS RR.
Therefore, we focus on results from HTTPS DNS RR scans through-
out the remaining paper. Nevertheless, we show in Section 4 that
these scans still extend our view on the state of QUIC deployments.
Analyzing the state of these new DNS RRs and their deployment in
the future provides research a lightweight mean to detect service
information of domains.
2https://github.com/blechschmidt/massdns
3https://www.nlnetlabs.nl/projects/unbound/about/
264
These DNS scans additionally resolve A and AAAA DNS RRs to be
used as a basis for further scans including TLS and IPv6 ZMap scans.
For the latter, we use AAAA records as input. Furthermore, DNS
resolutions are combined with ZMap scans for stateful QUIC scans
and TLS over TCP scans. The information from domain resolutions
is used as SNI to increase the success rate of TLS handshakes.
3.3 TLS over TCP Scans
Due to the low success rate of HTTPS DNS RR scans (see Section 4),
we additionally investigate the value of the HTTP ALT-SVC Header
to detect QUIC capable targets. Compared to the DNS scans, col-
lecting HTTP ALT-SVC Headers requires more costly scans but
due to the advanced maturity of the methodology, we are able to
detect more QUIC deployments as shown in Section 4. We rely
on regular TLS over TCP scans including HTTP/1 or HTTP/2 re-
quests, already conducted within our research group. This allows
us to collect HTTP ALT-SVC Headers, and thus potential QUIC
deployments as explained in Section 2.2.
To scan TLS over TCP we firstly conduct standard TCP SYN
ZMap scans targeting port 443. We expect the highest response rate
on this port for TLS over TCP but also for QUIC scans. We use the
ZMap fork4 from Gasser et al. [14] that supports IPv6. While we
scan the complete IPv4 address space, we use domain resolutions
from our DNS scans and data from the IPv6 Hitlist Service [14] as
input for IPv6 scans.
The ZMap scans are followed by stateful TLS scans finishing a
complete handshake. We use the Goscanner, introduced by Amann
et al. [3] and used for example in related work by Holz et al. [19], for
stateful TLS scans. The Goscanner is used instead of the more promi-
nent tool ZGrab 2.05, because it supports TLS 1.3, the mandatory
version for QUIC [43]. This allows us to extract TLS information
from these scans to compare to our QUIC results besides the collec-
tion of HTTP ALT-SVC Headers (see Section 5). We scan the set of
addresses from ZMap twice, once without and once with SNI. SNI
information for each target is collected by joining the results from
the DNS A and AAAA resolution with the results from the ZMap
scans.
3.4 QScanner: A Stateful QUIC Scanner
The previous scans only allow to detect QUIC deployments and
their supported versions. Collection of further information about
the deployment, e.g., whether complete handshakes succeed or
information regarding its QUIC specifics, including TLS and HTTP
properties is not possible. Therefore, we implemented a stateful
scanner similar to the used Goscanner for TLS over TCP. It is based
on the QUIC implementation quic-go6 and qtls7. Both libraries
are under active development and implement new draft versions
quickly. The version used for scans analyzed in Section 5 supported
draft 29, 32 and 34. However, it was updated shortly after the release
of RFC9000 to support IETF version 1, usable with the published
QScanner. According to the Interop Runner from Seemann and
Iyengar [42], it is compatible to most implementations. Therefore,
4https://github.com/tumi8/zmap
5https://github.com/zmap/zgrab2
6https://github.com/lucas-clemente/quic-go
7https://github.com/marten-seemann/qtls-go1-16/
It’s Over 9000: Analyzing Early QUIC Deployments with the Standardization on the Horizon
IMC ’21, November 2–4, 2021, Virtual Event, USA
Table 1: Found QUIC Targets (calendar week 18).
Scanned
Targets
3 023 298 514
24 434 296
375 338 772
69 458 318
213 689 0574
Results
Addresses ASes
2 134 964
4736
1704
210 997
2174
232 585
292
283 169
85 092
1287
112
69 684
Domains
30 970 3161
17 972 7992
36 907 770
16 979 759
2 962 708
2 736 040
ZMap
ALT-SVC3
HTTPS
IPv4
IPv6
IPv4
IPv6
IPv4
IPv6
1 Join with DNS scan, 10 % of IPv4 addresses map to a domain
2 Join with DNS scan, 62 % of IPv6 addresses map to a domain
3 Extracted from existing, regular scans (see Section 3.3)
4 A and AAAA records are additionally resolved to join with ZMap
scans (see Section 3.2)
we expected a high success rate with a scanner based on quic-go
and are able to effectively parallelize our scan reducing the overall
scan duration, while respecting the ethical considerations from
Appendix A. We only altered the respective QUIC and TLS libraries
to expose information about QUIC, TLS and HTTP. The QScanner
allows to either scan IP addresses individually, IPv4 as well as IPv6,
or combined with a domain used as SNI.
We used the QScanner for stateful scans covering all found tar-
gets, (i) from ZMap scans in combination with DNS A and AAAA
resolutions, (ii) from HTTP ALT-SVC Header data and (iii) from
HTTPS DNS RR scans.
4 QUIC DEPLOYMENTS ON THE INTERNET
The following section analyzes the results from scans in regard
to their detection rate of QUIC deployments, seen versions and
potential biases towards providers. Most of the following analyses
focus on the scans from calendar week 18 (May 3, until May 9, 2021).
Table 1 provides a general overview about found targets from each
source.
ZMap results. With 2.1 M IPv4 addresses reacting with a Version
Negotiation packet, our ZMap scan results in the most targets based
on IP addresses. Furthermore, these addresses are located in over
4.7 k ASes. Compared to results from Rüth et al. [39], the number
of addresses has tripled since 2018 and the involved ASes increased
by 50 %. Joining the result with our DNS resolution reveals 30 M do-
mains with potential QUIC support resolving to 10 % of found IPv4
addresses, while no domain resolves to the remaining addresses in
our scans. Most IP addresses without an associated domain belong
to large Content Delivery Networks (CDNs), mainly Cloudflare
(AS13335) with 28 %, Google (AS15169) with 22 % but also Akamai
(AS20940, 16.9 %) and Fastly (AS54113, 12.3 %). We argue that our
resolved domain set can only be associated to a subset of their IP
addresses due to load balancing mechanisms. Furthermore, our list
of resolved domains is not exhaustive. Thus, for some IP addresses
we might not be aware of associated domains.
In contrast to IP addresses without associated domains, we are
aware that not all joined domains might be QUIC enabled but
offer different functionality. Especially for large CDNs, a domain
resolving to an IP address does not necessarily mean it is used for
265
Figure 3: Success rate of HTTPS DNS RR scans over mul-
tiple calendar weeks (x-axis) in 2021. We resolve around
180 M domains from com/net/org. TLDs from CZDS (without
com/net/org) yield in 31 M additional domains.
QUIC. We evaluate the success rate of QUIC handshakes with these
targets in more detail in Section 5.
For IPv6, we find considerably fewer QUIC capable targets and
ASes. The ZMap scan results in 210 k IPv6 addresses out of 24 M
probed targets (see Section 3). Furthermore, IPv6 addresses are
located in 1.7 k ASes compared to 4.7 k for IPv4. On one hand, this
difference is based on the fact, that an IPv6 ZMap scan relies on an
input and cannot scan the complete address space. On the other
hand, IPv6 still lacks deployment reducing potentially found targets.
Similar differences can be seen for our TLS over TCP scans with
53 M IPv4 but only 3 M IPv6 addresses with an open port 443.
A domain can be found for 62 % of IPv6 addresses. This is sub-
stantially higher than for IPv4 but one of the input sources for the
IPv6 ZMap scans are the DNS scans. Similar to IPv4, most IPv6 ad-
dresses without domains are from CDNs (31.7 % Google (AS15169),
28.5 % Akamai (AS20940)).
Alternative service results. As shown in Figure 3, the overall
success rate of HTTPS DNS RR per input is low with ~1 % for
Com/Net/Org and up to 8 % for top lists but increases over time.
HTTPS DNS RRs for 2.9 M domains contain information about an
IPv4 QUIC deployment but hint to only 85 k distinct addresses lo-
cated in 1.2 k ASes. Regarding IPv6, 2.7 M domains indicate QUIC
support including 69.7 k addresses located in only 112 ASes.
Extracting HTTP ALT-SVC Headers from TLS over TCP scans
results in 232 k QUIC capable IPv4 addresses located in 2 k ASes.
While this methodology reveals more QUIC deployments, it hints
to a magnitude less IPv4 addresses compared to the ZMap scan.
Regarding IPv6, HTTP ALT-SVC Headers reveal a similar number
of addresses, but they are located in considerably fewer ASes.
We do not additionally scan addresses from these targets with
ZMap but only with the QScanner (see Section 5). The following
results regarding the distribution across ASes and supported ver-
sions is directly extracted from HTTP ALT-SVC Headers or from
resolved domains and their HTTPS DNS RR.
10150.02.55.07.5%1015104105106#DomainsalexaciscocomnetorgczdsmajesticIMC ’21, November 2–4, 2021, Virtual Event, USA
Johannes Zirngibl, Philippe Buschmann, Patrick Sattler, Benedikt Jaeger, Juliane Aulbach, and Georg Carle
Overlap between sources. All three input sources provide unique
targets. The overlap of IPv4 addresses is 69.5 k, while 146 k IPv4
addresses are unique based on HTTP ALT-SVC Headers and 2 M