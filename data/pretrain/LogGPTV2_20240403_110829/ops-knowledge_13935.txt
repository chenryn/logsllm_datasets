I am attempting to package a Python application on my 64-bit Windows 7 machine using py2exe. The final target for this application is 32-bit Windows machines. I am currently using 32-bit Python 2.7 on the 64-bit Windows 7 machine. When I package the application, py2exe warns me about several DLLs from the `System32` directory that need to be included.

The resulting executable fails to run on the target 32-bit machines (Windows XP and Windows Vista) with an error message stating that `C:\myapp\bin\WS2_32.dll` is corrupted and needs to be checked against the Windows installation. Upon further investigation, I found the following:

- **Windows 7 64-bit**: `System32` directory contains `WS2_32.dll` with a size of 290 KB.
- **Windows XP 32-bit**: `System` directory contains `WS2_32.dll` with a size of 80 KB.

My question is: Can I build a 32-bit application for Windows XP/Vista using py2exe on a Windows 7 machine, given these differences in DLL sizes?

Additionally, I tried replacing the `C:\myapp\bin\WS2_32.dll` with the version from Windows XP, but the application did not launch after this change.

---

**Response:**

When you use py2exe to package your application, it may warn you about dependencies such as `WS2_32.dll`. This DLL is part of the operating system and should not be distributed with your application. Instead, ensure that the target machines have the correct version of the DLL installed.

### Key Points:
1. **Operating System Dependencies**:
   - `WS2_32.dll` is a system DLL and should not be included in your distribution. It is expected to be present on the target machine.

2. **DLL Version Mismatch**:
   - The different sizes of `WS2_32.dll` on Windows 7 (64-bit) and Windows XP (32-bit) indicate that they are different versions. Including the wrong version can cause the application to fail.

### Recommendations:
1. **Exclude System DLLs**:
   - Ensure that your `setup.py` script does not include system DLLs like `WS2_32.dll`. You can exclude them by specifying the `dll_excludes` option in your `py2exe` configuration.

   ```python
   from distutils.core import setup
   import py2exe

   setup(
       options = {'py2exe': {'dll_excludes': ['WS2_32.dll']}},
       windows = [{'script': "your_script.py"}],
       zipfile = None,
   )
   ```

2. **Test on Target Machines**:
   - After packaging, test the application on the target 32-bit Windows XP and Vista machines to ensure it runs correctly without the system DLLs.

3. **Check for Other Dependencies**:
   - Use tools like `Dependency Walker` to check for other potential dependencies that might be causing issues. Ensure that all required libraries and DLLs are correctly packaged or available on the target machines.

By following these steps, you should be able to create a 32-bit application that runs successfully on Windows XP and Vista.