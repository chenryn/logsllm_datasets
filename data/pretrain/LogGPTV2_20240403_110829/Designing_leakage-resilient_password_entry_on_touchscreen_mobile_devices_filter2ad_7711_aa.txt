title:Designing leakage-resilient password entry on touchscreen mobile devices
author:Qiang Yan and
Jin Han and
Yingjiu Li and
Jianying Zhou and
Robert H. Deng
Designing Leakage-Resilient Password Entry on
Touchscreen Mobile Devices
Qiang Yan†, Jin Han‡, Yingjiu Li†, Jianying Zhou‡, Robert H. Deng†
†School of Information Systems, Singapore Management University, Singapore
‡Cryptography and Security Department, Institute for Infocomm Research, Singapore
{qiang.yan.2008, yjli, robertdeng}@smu.edu.sg, {hanj, jyzhou}@i2r.a-star.edu.sg
ABSTRACT
Touchscreen mobile devices are becoming commodities as the wide
adoption of pervasive computing. These devices allow users to ac-
cess various services at anytime and anywhere.
In order to pre-
vent unauthorized access to these services, passwords have been
pervasively used in user authentication. However, password-based
authentication has intrinsic weakness in password leakage. This
threat could be more serious on mobile devices, as mobile devices
are widely used in public places.
Most prior research on improving leakage resilience of pass-
word entry focuses on desktop computers, where speciﬁc restric-
tions on mobile devices such as small screen size are usually not
addressed. Meanwhile, additional features of mobile devices such
as touch screen are not utilized, as they are not available in the
traditional settings with only physical keyboard and mouse.
In
this paper, we propose a user authentication scheme named Cover-
Pad for password entry on touchscreen mobile devices. CoverPad
improves leakage resilience by safely delivering hidden messages,
which break the correlation between the underlying password and
the interaction information observable to an adversary. It is also de-
signed to retain most beneﬁts of legacy passwords, which is critical
to a scheme intended for practical use. The usability of Cover-
Pad is evaluated with an extended user study which includes addi-
tional test conditions related to time pressure, distraction, and men-
tal workload. These test conditions simulate common situations for
a password entry scheme used on a daily basis, which have not been
evaluated in the prior literature. The results of our user study show
the impacts of these test conditions on user performance as well as
the practicability of the proposed scheme.
Categories and Subject Descriptors
K.6.5 [Management of Computing And Information Systems]:
Security and Protection— Authentication; H.5.2 [Information
Interfaces and Presentation]:
Interfaces— Evalua-
tion/methodology, User-centered design, Haptic I/O
User
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ASIA CCS’13, May 8–10, 2013, Hangzhou, China.
Copyright 2013 ACM 978-1-4503-1767-2/13/05 ...$15.00.
Keywords
User Authentication; Leakage-Resilience; Mobile Devices
1.
INTRODUCTION
Mobile devices are becoming essential tools in modern life,
which seamlessly connect human beings to the cyberspace. A user
can now use his smartphone or tablet to access not only general in-
formative services but also sensitive services such as mobile bank-
ing and corporate services. In order to prevent unauthorized access
to these services, user authentication is required to verify the iden-
tity of a user. Among existing user authentication mechanisms,
passwords are still the most pervasive due to their signiﬁcant ad-
vantage in usability over other alternatives such as smartcards and
biometrics [28]. However, password-based user authentication has
intrinsic weakness in password leakage, which may lead to ﬁnan-
cial loss or corporate data disclosure. This threat could be more
serious in scenarios when mobile devices are involved, as mobile
devices are widely used in public places.
Password leakage is a classic problem in password-based authen-
tication. Since password leakage usually happens during authenti-
cation when a user inputs his password, we focus on the problem
of improving leakage resilience of password entry in this work.
Most prior research [19, 27, 38, 39, 5, 26, 33, 13, 24] on this
problem focuses on desktop computers, where speciﬁc restrictions
on mobile devices are usually not addressed. These restrictions
mainly include: 1) a mobile device usually has a smaller screen
size than a desktop computer; 2) a mobile device needs to be oper-
able in non-stationary environments such as on public transit. On
the other hand, mobile devices provide additional features such as
touch screen, which may not be available in traditional settings.
These new features can be utilized to support advanced security
properties that were difﬁcult to achieve before.
In this paper, we propose a concise yet effective authentication
scheme named CoverPad, which is designed for password entry
on touchscreen mobile devices. CoverPad improves leakage re-
silience of password entry while retaining most beneﬁts of legacy
passwords. Leakage resilience is achieved by utilizing the gesture
detection feature of touch screen in forming a cover for user in-
puts. This cover is used to safely deliver hidden messages, which
break the correlation between the underlying password and the in-
teraction information observable to an adversary. From the other
perspective, our scheme is also designed to retain the beneﬁts pro-
vided by legacy passwords. This requirement is critical, as Bon-
neau et al. [10] conclude that any user authentication is unlikely
to gain traction if it does not retain comparable beneﬁts of legacy
passwords. Our scheme approaches this requirement by involving
only intuitive cognitive operations and requiring no extra devices
in the design.
37We implement three variants of CoverPad and evaluate them
with an extended user study. This study includes additional test
conditions related to time pressure, distraction, and mental work-
load. These test conditions simulate common situations for a daily-
used password entry scheme, which have not been evaluated in the
prior literature. We design new experiments to examine their inﬂu-
ence based on previous work in psychology literature [23, 12, 21].
Experimental results show the inﬂuence of these conditions on user
performance and the practicability of our proposed scheme.
The contributions of this paper are summarized as follows.
• We propose CoverPad to protect password entry on touch-
screen mobile devices. It achieves leakage resilience and re-
tains most beneﬁts of legacy passwords by involving only
intuitive cognitive operations and requiring no extra devices.
• We implement three variants of CoverPad to address differ-
ent user preferences. Our user study shows the practicability
of these variants.
• We extend user study methodology to examine the inﬂuence
of various additional test conditions. Among these condi-
tions, time pressure and mental workload are shown to have
signiﬁcant impacts on user performance. Therefore, it is rec-
ommended to include these conditions in the evaluation of
user authentication schemes in the future.
2. THREAT MODEL
Passwords are the most pervasive user authentication that allows
a human user to be authenticated to a (local or remote) computer
server. Password leakage is a threat that a user’s password is di-
rectly disclosed or indirectly inferred. It usually happens during
password entry, when a user inputs his password in order to prove
his identity. In the case of legacy passwords, a user directly enters
his plaintext password so that the password may be captured via
various eavesdropping attacks including key logger, hidden camera,
and malware. We classify these attacks into two types, external or
internal, according to whether an adversary can access the internal
states of a device for password entry, such as device memory.
An external eavesdropping attack is an attack exploiting a leak-
age channel outside a device. This type of attacks includes vision-
based eavesdropping such as hidden camera, haptics-based eaves-
dropping such as physical key logger, and acoustics-based eaves-
dropping such as tone analysis. Compared to traditional scenarios
involving only desktop computers, an adversary has more oppor-
tunities to launch an external eavesdropping attack against mobile
devices, as mobile devices are widely used in public places. In a
crowded area, an adversary may observe password entry in a close
distance without being noticed (see Figure 1).
User Interaction during 
Password Entry
Leakage
channels
Vision: screen display, 
finger movement, etc.
Haptics: touched
position, etc.
Acoustics: key-press
sound, etc.
Figure 1: Attack scenarios
For vision-based attacks, an adversary may infer the actual pass-
word by observing the movement of ﬁngers even without direct
line-of-sight on the screen display. This capability is signiﬁcantly
enhanced with emerging augmented-reality accessory like Google
Glass [18], which is a small wearable glass transferring real-time
video captured by a tiny camera to a server and displaying the ana-
lyzed results received from the server.
Haptics-based attacks are most likely to happen when users use
public mobile devices. Mobile devices, such as iPad, have been
used as public computer kiosks as observed in museums, restau-
rants, and hotels [22, 20, 41]. In addition, many existing kiosks are
also equipped with touch screen similar to mobile devices. This
provides an incentive for an adversary to install a physical “touch”
logger. Although such touch logger has not been observed in the
wild, it is technically feasible to implement as other physical key
loggers [36]. Considering that the thickness of touch screen in
Samsung Galaxy S3 is just 1.1mm [2], it may not be noticeable
to users if an extra physical touch logger is installed on a normal
touch screen.
The effectiveness of acoustics-based attacks depends on whether
user actions can be distinguished by their tone patterns. For exam-
ple, different tones are played when a user dials different numbers
on an old-style phone. Due to environmental noises, acoustics-
based attacks are usually not as effective as vision-based attacks
and haptics-based attacks.
The other type of attacks that cause password leakage is the in-
ternal eavesdropping attack. Such attacks exploit a leakage channel
inside a device, where an adversary is allowed to access the internal
states such as reading device memory. This type of attacks include
logic key logger, malware, and network eavesdropping, which are
common to all password-based user authentication schemes. Like
most prior research [26, 33, 13, 15, 24, 8, 7], our scheme design
does not address these attacks for the following reasons: 1) Exist-
ing solutions [30, 3, 6, 37] such as application sandbox are available
to effectively defend against these attacks, though it takes time for
them to replace legacy vulnerable systems; 2) these solutions are
independent on user interaction during password entry so that they
can be adapted to any user authentication schemes. Compared to
external eavesdropping attacks, the threat from internal eavesdrop-
ping attacks can be effectively mitigated if a user uses a computer
system that is properly updated and conﬁgured [16], while it is not
easy to defend against external eavesdropping attacks as they are
caused by inevitable exposure of human interaction during pass-
word entry. These external eavesdropping attacks impose realistic
threats leading to password leakage. We will thus focus on external
eavesdropping attacks in our scheme design.
Besides the above attacks which happen during password entry,
password leakage may also be caused by other types of attacks in-
cluding social engineering and phishing [28]. Although their mit-
igation technologies such as secure URL checker and spam ﬁlter
have been widely deployed in modern computer systems, some of
these attacks may not be completely preventable by technical solu-
tions alone. Another example is the database reading attack, where
the back-end databases are intruded so that all user passwords are
compromised. Since these attacks are orthogonal to the password
entry problem, they are out of the scope of this paper.
3. COVERPAD DESIGN
In this section, we present the design of CoverPad. First, we
describe our design objectives from both security and usability per-
spectives. Then, we introduce the conceptual design of CoverPad.
Lastly, we present three variants in implementing CoverPad.
3.1 Design Objectives
CoverPad is designed to improve leakage resilience of password
38entry while retaining most beneﬁts of legacy passwords. We de-
scribe our design objectives as follows.
First, in terms of security, a scheme should minimize password
leakage during password entry under realistic settings. To achieve
this objective, a user should 1) input obfuscated response derived
from his password, and/or 2) input his password in a protected
environment. A recent study [40] shows strong evidence on the
infeasibility of using obfuscated response solely based on human
cognitive capabilities. Therefore, it is necessary to rely on certain
protected environment to achieve this security objective. However,
a fully protected environment may be difﬁcult to establish in prac-
tice, which requires to protect all messages delivered between user
and server. Therefore, we choose a hybrid solution in our scheme
design, where the requirement on a protected environment is sig-
niﬁcantly reduced with the assistance of simple obfuscation. Such
environment is referred to as partially protected environment.
In the presence of a partially protected environment, it is possi-
ble to achieve the optimal security objective – no password leak-
age. As long as the partially protected environment is not compro-
mised, CoverPad provides the same leakage resilience as one-time
pad [31], where the most efﬁcient attacks for an adversary to learn
the password are online dictionary attacks. We will show how this
security objective is achieved in our scheme in the following sec-
tions.
Second, in terms of usability, a scheme should preserve the ben-
eﬁts of legacy passwords in order to gain traction [10]. The major
beneﬁts of legacy passwords include no extra devices required, and
only intuitive cognitive operations performed. We further consider
additional restrictions on mobile devices including that 1) a mo-
bile device usually has a smaller screen size compared to a desk-
top computer; 2) a mobile device needs to be operable in a non-
stationary environment such as on public transit. So we minimize
the number of visual elements that are displayed simultaneously on
the screen, and also simplify the involved operations to make them
suitable in a non-stationary environment.
3.2 Conceptual Design
The conceptual design of CoverPad is shown in Figure 2, where
a hidden transformation Ti(·) is a random mapping Ω → Ω, where
Ω is the set of all individual elements contained in the password
alphabet.
Setup:
A server and a user agree on a k-length password pwd =
(a1, a2, . . . , ak), where a password element ai = pwd[i] be-
longs to an alphabet with size w. It is allowed that ai = aj,
for i (cid:3)= j.
Password Entry:
For each i from [1, k]:
Step 1: The touch screen shows a keypad with all the ele-
ments in the alphabet.
Step 2: The user is asked to perform a hand-shielding ges-
ture to read the hidden transformation Ti(·) protected by the
hand-shielding gesture. Ti(·) will immediately disappear if
the gesture is no longer detected.
Step 3: The user clicks on response element ei, where ei =
Ti(ai) = (ai + ri mod w), where ri is a random number
drawn from a uniform distribution. A new random number ri
is generated for each round i. The hand-shielding gesture is
not required for this step.
Figure 2: Conceptual design of CoverPad
An example of using CoverPad is given as follows. Suppose a
user has a k-length password. At the beginning of password entry,
the user performs the hand-shielding gesture to view the current
hidden transformation T1 for the ﬁrst character a1 in his password.
Then, he applies T1 to a1 and enters the transformed response e1.
This procedure repeats for each password element ai. During the
whole password entry, Ti disappears immediately once the gesture
is not being detected. A user can always view Ti by performing the
gesture again before inputting ei.
Figure 3: The hand-shielding gesture and its effectiveness
Figure 3 shows how to correctly perform a hand-shielding ges-
ture. This gesture restricts the vision channel to a small visual cone.
This visual cone is not accessible to an adversary unless the adver-
sary’s eyes are close enough to the user’s head, which makes the ad-
versary easily exposed. A hidden camera near the line of sight may
help capture the hidden transformation. However, it needs to be
adjusted according to the user’s height and current position, which
may lead to user’s awareness. On the other hand, the observable re-
sponses for the same password element are uniformly randomized.
Thus, CoverPad is also immune to haptics-based eavesdropping.
Further analysis is provided in the next section.
Therefore, it is difﬁcult to compromise the partially protected
environment formed by the hand-shielding gesture from external
eavesdropping attacks in practice, though the use of this gesture is
simple. If the protective gesture is not being detected by the touch
screen, the hidden transformation will not be displayed such that
the hidden transformation is always protected under the required
gesture. Note that a hidden transformation alone does not leak any
information about the password. As long as the hidden transfor-
mation is not revealed together with the corresponding response,
observed interaction provides no valuable information for an ad-
versary to infer the actual password. A proof about this security
property will be given in Section 4.
3.3
Implementation Variants
We provide three variants of CoverPad that implement differ-
ent features tailored for users with various skill sets, which are de-
scribed and illustrated as follows (see Figure 4).
3.3.1 NumPad-Add
In NumPad-Add, the alphabet of password consists of digits 0
to 9 only. The hidden transformation is performed by adding a
random digit to the current password element and then mod 10 if
the sum is larger than 9, where the value of the random digit ranges
from 0 to 9. For example, the correct response for the ﬁrst round
39n
o
i
t
a
m
r
o
f
s
n
a
r
T
0
6
C
I
O
U
1
7
D
J
P
V
2
8
E
K
Q
W
3
9
F
L