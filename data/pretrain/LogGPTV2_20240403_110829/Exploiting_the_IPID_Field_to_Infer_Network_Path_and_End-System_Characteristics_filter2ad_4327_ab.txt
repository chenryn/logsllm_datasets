rates are close but not equal, due to the mixing of probing packets with other
traﬃc. For this experiment the interval between two successive probing packets
was set to 3ms to minimize these eﬀects.
Exploiting the IPID Field to Infer Network Path
115
 1200
 1000
 800
 600
 400
 200
s
e
c
n
e
u
q
e
s
f
o
r
e
b
m
u
N
 0
 0
Number of sequences
LBF
T
CV
T
 1
 0.8
 0.6
 0.4
 0.2
 0
T
V
C
/
T
F
B
L
 2000
 4000
T
 6000
 8000
Fig. 6. Number of sequences, LBFT and CVT vs. T
To determine an appropriate T , we introduce two parameters: load balanc-
ing factor (LBF) and coeﬃcient of variation (CV) of sequence size. We deﬁne
LBFT as LBFT = Pmin/Pmax, where Pmin (resp. Pmax) is the number of pack-
ets in the smallest (resp. largest) sequence returned by the algorithm with a
given T . Ideally, for a well balanced server, an appropriate T should produce a
LBFT very close to 1. The second parameter, CVT , is deﬁned as CVT = σT /µT ,
where σT and µT are the standard deviation and the mean of the sequence sizes
respectively for a given T . Intuitively, an appropriate T results in a small CVT .
Figure 6 shows LBFT , CVT and the number of sequences as a function of
T . A T is appropriate when LBFT achieves the maximum and CVT achieves
the minimum. The ﬁgure indicates that a T ≈ 4000 is appropriate, resulting in
30 sequences. That is, we estimate that the web server has 30 load-balancing
servers. Table 1 shows the numbers of packets in these 30 sequences.
Table 1. Number of packets in classiﬁed sequences
162, 165, 180, 155, 156, 131, 188, 136, 178, 186
170, 162, 167, 228, 208, 193, 158, 177, 144, 169
145, 145, 168, 192, 177, 124, 173, 129, 202, 132
Based on this value of T , the algorithm described above divides the IPID val-
ues shown in Figure 5 into 30 sequences. We plot these 30 sequences in diﬀerent
colors in Figure 7 where wraparounds of each sequence were removed by adding
64K to the values so that every sequence is always monotonically increasing.
We observe that the slopes of all of these 30 sequences are almost the same,
which suggests that each load-balancing server receives a comparative number
of probing packets.
116
W. Chen et al.
 100000
 80000
 60000
D
P
I
I
 40000
 20000
 0
 0
 1000
 2000
 3000
 4000
 5000
Packet
Fig. 7. IPID sequences of the load-balancing servers of a commercial web-server
5
Inferring One-Way Delay Diﬀerences
In this section, we present a simple technique that uses the IPID ﬁeld to infer the
diﬀerences in one-way delays from a set of GPS-synchronized probing sources
to an “IPID order capable” destination target. By “IPID order capable” we
mean that the destination has a global IPID counter and that wrap-arounds
can be detected. Importantly, we do not require the destination to be GPS-
synchronized. Such delay diﬀerences can be used to infer shared path segments
using recently developed network tomograpic techniques [10, 4, 5]. In addition,
if one of the sources is able to determine (or accurately estimate) the absolute
magnitude of its one-way delay to the destination, then all other nodes can
determine the absolute values of their one-way delays as well. Knowledge of
one-way delay can be valuable in many circumstances.
[10] presents a methodology for estimating one-way delay diﬀerences from
non GPS-synchronized (or coarsely synchronized) sources to common destina-
tions using a semi-randomized probing strategy and the packet arrival ordering
collected at destinations. Given GPS-synchronized source clocks, the determin-
istic probing strategy we study is considerably simpler. As in [10], the key idea
is for sources to send probes (e.g., ICMP echo packets) to a remote host, and use
the observed arrival ordering to infer path characteristics. Our approach diﬀers
from [10] in the way we obtain arrival order information. In [10] all destination
machines must be instrumented. Using IPID, we are able to obtain the packet
arrival orders without instrumenting any destination machine. In the following,
we consider only two source nodes; the approach easily generalizes to the case
of additional source nodes.
Our goal is to infer the one-way delay diﬀerence from two GPS-synchronized
sources A and B to a destination D, i.e., the diﬀerence between path delays
dAD and dBD. Consider two packets p1 and p2 sent from A and B to D at the
Exploiting the IPID Field to Infer Network Path
117
same time. If p1 arrives before p2, the IPID, I1, of the packet returned by D
in response to p1 will be smaller (modulo 216) than the IPID, I2, of the packet
responding to p2.
Fig. 8. Arriving orders of packets
We exploit this ordering of returned IPID values as follows. As illustrated
in Figure 8, A and B begin simultaneously probing D using diﬀerent probing
intervals δA and δB, respectively. The nA-th packet sent from A arrives at D
between the (nB − 1)-st packet and the nB-th packet sent from B. If the delay
does not change signiﬁcantly during the measurement interval, we have:
dBD + (nB − 1)δB ≤ dAD + nAδA ≤ dBD + nBδB
⇒ (nB − 1)δB − nAδA ≤ dAD − dBD ≤ nBδB − nAδA
Note that the diﬀerence between the upper- and lower-bounds depends on δB.
Thus by reducing δB, we can improve the accuracy of the inferred delay diﬀerence
dAD − dBD. We conjecture that we can extend these techniques to handle the
case of varying delays during the measurement interval as well.
We have validated the approach in a simple test scenario. In our experiments
we send ICMP echo packets from source machine A (at Unifacs, a university
in Brazil) and B (a machine at the University of Minnesota) to a destination
machine D at the University of Massachusetts. Machine A sends one packet per
second and machine B sends one packet every 3ms. Our measurements indicate
that the IPID-inferred delay diﬀerence, namely, dAD−dBD, is around 230ms. We
also send probes from A and B to a GPS-equipped machine, D(cid:3), at the University
of Massachusetts that was close to D. Based on the recorded data on D(cid:3), we can
measure dAD − dBD. Figure 9 shows the diﬀerence of the measured values and
the IPID-inferred values as a function of time. From the ﬁgure, one can see that
the inferred values are very close to the measured values. Furthermore, it should
be noticed that most of the diﬀerences are within 3ms for δB = 3ms. Figure 10
shows the relative error of the IPID-inferred values (I) to the measured values
(M), where the relative error is deﬁned as (I − M)/M.
dA…dADtimetime………dBDdBA:D:B:timenAnB118
W. Chen et al.
 10
)
s
m
 5
 0
-5
(
l
e
u
a
v
d
e
r
u
s
a
e
M
-
e
u
a
v
d
e
r
r
e
n
f
l
I
-10
 0
 1
 2
 3
 4
Time (ms)
 5
 6
 7
(106)
Fig. 9. Diﬀerence of IPID inferred dAD − dBD and measured dAD − dBD
)
%
(
r
o
r
r
e
e
v
i
t
l
a
e
R
 4
 2
 0
-2
-4
 0
 1
 2
 3
 4
Time (ms)
 5
 6
 7
(106)
Fig. 10. Diﬀerence of IPID inferred dAD − dBD and measured dAD − dBD
Table 2. Statistical results for several one-way delay inference experiments
Mean of Standard deviation Mean of measured
error2 (ms)
of error, σ (ms)
values, ¯M (ms) σ/ ¯M
0.042
0.052
0.062
0.065
0.056
232.17
354.49
361.14
356.24
361.11
Experiment
ID
1
2
3
4
5
Time of
day (EST)1
2004-10-14 11pm
2005-01-14 9pm
2005-01-15 6am
2005-01-17 2pm
2005-01-17 5pm
2.02
3.37
3.53
11.44
9.53
9.73
18.57
22.27
23.16
20.38
1 The beginning time when an experiment was conducted.
2 error=|I − M|.
Exploiting the IPID Field to Infer Network Path
119
B packets
B packets
B packets
B1
B2 B3
B1
B2 B3
B1
B2 B3
A packets
(a)
A packets
(b)
A packets
(c)
Fig. 11. Jitter examples
Statistical results from the experiment shown in Figure 9 are presented in
the ﬁrst line of Table 2, which includes the results of four other experiments.
This table contains a broad set of experimental scenarios. We run experiment
2 and 3 with δB = 4ms (Figure 8). Experiments 4 and 5 also used δB = 4ms
but during the busiest traﬃc hours. From the results we can see that during the
busiest hours the one-way delay inference error becomes larger. This eﬀect is due
to the higher inter-packet jitter in our measures. Figure 11 depicts how higher
jitters aﬀect inter-arrival times of A and B packets at D (Figure 8). A packet
from A is more likely to arrive between packets B1 and B2 than between packets
B2 and B3. Thus the probability that packets from A will arrive between two
given consecutive B packets increases with the jitter delay value. This problem
could be ameliorated by sending two A packets with smaller sending intervals,
i.e., a pair of A packets. These pairs can eliminate samples where both packets
in a pair arrived between two identical B packets (Figure 11(b)). Samples where
two packets of a pair interleaved with two B packets (Figure 11(c)) will produce
more accurate inferences.
6 Conclusions
In this paper, we explored several uses of the IPID ﬁeld for inferring network path
and end-system characteristics. We classiﬁed previous IPID-related measurement
eﬀorts into three general application areas, and showed that, by using the IPID
ﬁeld, it is possible to infer: (a) the amount of internal (local) traﬃc generated
by a server; (b) the number of servers in a large-scale, load-balanced server
complex and; (c) the diﬀerence between one-way delays of two machines to a
target computer. We illustrated and validated the use of these techniques through
empirical measurement studies.
As with previous measurement techniques exploiting other packet header
ﬁelds, header ﬁelds (such as the TTL and IPID ﬁelds) can be exploited for
measurement purposes not initially envisioned in the design of IP. We hope that
our work will add to the toolkit of network measurement techniques. We also
120
W. Chen et al.
hope that future measurement studies can build on this work, and that additional
clever ways will be found to exploit the IPID ﬁeld for measurement purposes.
Acknowledgments. The authors would like to thank the anonymous review-
ers for their helpful comments. This research has been supported in part by
the NSF under grant awards EIA-0131886, EIA-0080119, ANI-0085848, ANI-
0070067, ANI-0319871, and ANI-0240487 and by the ARO under DAAD19-01-
1-0610 and by CAPES (Brazil). Any opinions, ﬁndings, and conclusions or rec-
ommendations expressed in this material are those of the author(s) and do not
necessarily reﬂect the views of the National Science Foundation.
References
1. “List of the fortune 500,” http://www.usatoday.com/money/companies/2004-03-
22-fortune-500-list x.htm.
2. “Top 101 wet sites: Fall 2004,” http://www.pcmag.com/category2/0,1738,7488,00.
asp.
3. S. Bellovin. A technique for counting NATed hosts. In Proc. ACM Internet Mea-
surement Workshop(IMW), November 2002.
4. M. Coates and R. Nowak. Network tomography for internal delay estimation. In
Proc. IEEE International Conference on Acoustics, Speech and Signal Processing,
May 2001.
5. F. Lo Presti, N. Duﬃeld, J. Horowitz, and D. Towsley. Multicast-based inference of
network-internal delay distributions. IEEE/ACM Trans. Networking, 10:761–775,
2002.
6. A. Hussain, J. Heidemann, and C. Papadopoulos. A framework for classifying
denial of service attacks. In Proc. ACM SIGCOMM, August 2003.
7. Insecure.org. Idle scanning and related IPID games.
http://www.insecure.org/nmap/idlescan.html.
8. S. Jaiswal, G. Iannaccone, C. Diot, J. Kurose, and D. Towsley. Measurement and
classiﬁcation of out-of-sequence packets in a tier-1 IP backbone. In Proc. IEEE
INFOCOM, April 2003.
9. R. Mahajan, N. Spring, D. Wetherall, and T. Anderson. User-level internet path
diagnosis. In Proc. ACM Symp. on Operating Systems Principles (SOSP), October
2003.
10. M. Rabbat, M. Coates, and R. Nowak. Multiple source, multiple destination net-
work tomography. In Proc. IEEE INFOCOM, March 2004.
11. N. Spring, R. Mahajan, and D. Wetherall. Measuring ISP topologies with Rock-
etfuel. In Proc. ACM SIGCOMM, August 2002.