### Flashing a Raspbian OS Image to an SD Card in Ubuntu Linux

#### Step 1: Detect the SD Card
1. **Insert the SD Card**: Plug in your SD card and wait a couple of minutes for Linux to detect it.
2. **Identify the SD Card**: Run the command `fdisk -l` from a Terminal prompt to identify the device path (e.g., `/dev/sdb`). The full input and output for this process are shown in Figure 4.10, with commands highlighted for easy reference.

**Figure 4.10: Flashing a Raspbian OS image to an SD card in Ubuntu Linux.**

In the screenshot, note the reference to the device path `/dev/sdb1`. In Linux, hard drives and removable media are mounted as file system paths.

**Caution: Be Careful!**
- **The `dd` Command**: This command is extremely powerful. If you do not carefully specify the correct drive path, you could easily erase your boot drive and valuable data!

#### Step 2: Flash the Raspbian OS Image
1. **Run the `dd` Command**:
   ```bash
   sudo dd if=image_file_name.img of=/dev/sdX bs=2M
   ```
   Here is a breakdown of the syntax:
   - `sudo`: Run the `dd` command with administrative privileges.
   - `dd`: This command performs the OS flash.
   - `if`: Specifies the full or relative path to the OS image file. Use the `cd` command to switch to the directory containing the Wheezy OS image file.
   - `of`: Specifies the path to the output. Note that `/dev/sdX` (e.g., `/dev/sdb`) is specified, not `/dev/sdX1`. You want to flash the entire SD card, not just a specific partition.
   - `bs`: Stands for block size. A value of `2M` (2 megabytes) is a good compromise between speed and accuracy. The syntax specifies `M` instead of `MB` for the block size value.

2. **Verify the Flash**: Run `fdisk -l` again and look at your `/dev/sdX` entries. You should see that Raspbian creates two partitions on the SD card: one FAT Windows-compatible partition and one larger Linux partition.

### Using NOOBS to Install an OS on Your Raspberry Pi

#### Step 1: Format the SD Card
1. **Download and Install SD Formatter**: Download the SD Card Association’s formatting tool, SD Formatter (http://is.gd/IFMlmc), and use it to format your SD card. Ensure the SD card has at least 4GB capacity.
2. **Format the SD Card**: Use the SD Formatter utility to format the SD card so that it can be interacted with directly in Windows or OS X.

#### Step 2: Prepare the SD Card with NOOBS
1. **Download NOOBS**: Download NOOBS (http://is.gd/6EJlou) and extract the contents to the root level of your newly formatted SD card.
2. **Copy NOOBS Files**: Manually copy the NOOBS file contents directly to the SD card. Do not flash a binary image to the SD card as done previously.

**Figure 4.11: The NOOBS utility makes it much easier to load an OS on your Raspberry Pi.**

#### Step 3: Install the OS
1. **Boot the Raspberry Pi**: Insert the prepared SD card into the Raspberry Pi and boot it up.
2. **Select and Install the OS**: When the Pi Recovery window appears, select your desired operating system and click "Install OS."
3. **Reboot and Load the OS**: Once the installation completes, the Pi will reboot and automatically load the chosen OS.

### Testing Your New Raspbian Image
1. **Insert the SD Card**: Carefully insert the SD card into the SD slot on your Raspberry Pi's circuit board.
2. **Power On and Connect Peripherals**: Plug the Raspberry Pi into your power supply and connect a keyboard, mouse, and monitor/TV.
3. **Check the Raspi-Config Interface**: If all goes well, you should see the Raspi-Config interface as shown in Figure 4.12. If the Raspberry Pi does not boot directly into Raspi-Config, issue the command `sudo raspi-config` from the Terminal prompt.

**Figure 4.12: First-time Raspberry Pi setup using the Raspi-Config script.**

### Debian Linux Fundamentals—Terminal

#### Introduction
Linux can seem intimidating due to its command-line interface and unfamiliar commands. However, distributions like Ubuntu and Raspbian are designed for ordinary users. Learning some basic command-line syntax can significantly enhance your productivity.

#### Getting Started with the Terminal
1. **Log In**: The default username is `pi`, and the default password is `raspberry`.
2. **Command Prompt**: The command prompt provides valuable system information:
   - `pi@raspberrypi ~ $`
     - `pi`: Default Raspbian user account.
     - `@`: Denotes the link between the logged-on user and the computer name.
     - `raspberrypi`: Default hostname.
     - `~`: Shortcut for the user’s home directory (`/home/pi`).
     - `$`: Denotes a non-administrative user account. The `#` character denotes a root (superuser) account.

**Note: Naming Conventions**
- This chapter uses the terms Debian and Raspbian interchangeably. All procedures work in any Debian-derived Linux distribution.

#### Essential Terminal Commands
1. **Switch to GUI**:
   - `startx`: Switch from the command line to the LXDE graphical environment.
   - To return to the command line, click the "Logout" button in the bottom-right corner of the LXDE Desktop.

2. **Present Working Directory**:
   - `pwd`: Displays the current directory.
   - **Linux File System Overview**:
     - `/bin`: Essential programs.
     - `/boot`: Boot loader programs.
     - `/dev`: Hardware device drivers.
     - `/etc`: System-wide configuration files.
     - `/home`: Users’ home directories.
     - `/lib`: Code libraries.
     - `/media`: Mount points for removable media.
     - `/mnt`: Temporarily mounted file systems.
     - `/opt`: Optional application software packages.
     - `/proc`: Dynamically changing system status information.
     - `/root`: Home directory for the root user.
     - `/run`: Supplemental runtime data.
     - `/sbin`: Administrative program files.
     - `/sys`: Linux operating system files.
     - `/tmp`: Temporary files.
     - `/usr`: Read-only user data.
     - `/var`: Variable data.

3. **List Directory Contents**:
   - `ls`: Lists the contents of the current directory.
   - `ls -la`: Provides a detailed listing, including hidden and system files.
   - `ls -la /usr/bin`: Lists the contents of the `/usr/bin` directory.

4. **Change Directory**:
   - `cd /path/to/directory`: Navigate to a specific directory.
   - `cd ..`: Move up one level.
   - `cd ~/Downloads`: Navigate to the Downloads folder in the home directory.

5. **Run Commands with Administrative Privileges**:
   - `sudo`: Temporarily elevates privileges to run administrative-level commands.
   - Example: `sudo nano /etc/hosts`

6. **Change Password**:
   - `sudo passwd pi`: Change the password for the `pi` user account.

7. **Text Editor**:
   - `nano /path/to/file`: Open a file in the nano text editor.
   - Common shortcuts: `Ctrl+O` to save, `Ctrl+X` to exit.

**Figure 5.4: The nano text editor’s user interface includes onscreen navigation help.**

By mastering these essential commands, you will be well-equipped to navigate and manage your Raspberry Pi and other Linux systems effectively.