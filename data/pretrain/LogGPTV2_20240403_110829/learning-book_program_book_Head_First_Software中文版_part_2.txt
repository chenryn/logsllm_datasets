习和令人深思的问题，以及包括左躺、右脑和多种感官
的各种活动。
引起
—并保持读者的注意力，我们都有这样的经历，就是“我真地想去学习这些，但我还没有
翻过一页，就已经香昏敬睡了”，你的大脑只注意到了异常、有趣、奇特、吸
引服球和意想不到的事情，学会一个新的，观深的技术问题未必是令人枯燥乏
噪的，如果你不觉得无聊，大脑的学习效率就会提升很多。
触动读者的情感，现在，我们如道你记忆事情的能力很大程度上取决于具有
情感的内容。你会记住你在乎的事情，当你能感同身受时，你就记他了，不！
我们不是在讲进一个小男孩和他的小购之间令人心碎的放事，而是在说，当你
完成了一个猫字游戏，学会了别人认为很难的东西时，或发现自己比别人懂得
更多技术时，所产生的惊高、好奇、有趣，“靠？”和“我好裤”，请如
此类的情绪和感觉
OXVilI
介绍
---
## Page 13
介绍
元认知：关于思考的思考
如果你真地想要学习，并且想要学得更快和更深入，那么，请注意你是如
我不多遥我如何能
何“集中注意力”的。“想想”你是如间思考的。“学学”你是如何学习的。
请使我的大脑老记
在我们的成长过程中，大多数人都没有学习过元认知，或者有关学习理论
住运些事情·
的课程。师长期待我们去学习，但极少告诉我们如何去学习。
但是，假如你手里正拿着我们这本书，你真地想去学习如何开发伟大的软
件系统，而且，可能你不想去花太多的时间。如果你想去运用在本书中读
到的东西，就必须记住你学习到的内容。为此，你要理解它的内容。为了
从本书中得到最多收益，或从任何书或学习经验中获得更多知识，你
的大脑就要承担这方面的责任，让它好好注意这一方面的内容。
学习的技巧在于：让你的大脑去认为你正在学习的新知识确实很重
要，事关你的福趾，就像吃人的老虎一样。否则，你就要不停地苦
战，想要记住，确总是记不住。
那么，要如何让你的大脑视软件开发为一只饥饿的老虎一样？
有慢而乏味的方式，也有快而有效的方式。慢的方式就是完全的反
复，你肯定知道，勤能补摇，只要你不停地向你的大脑灌输同样的学习内容。
再乏味的知识，也能够学会并记住。通过足够多的反复，你的大脑会说，“这对他
而言，不觉得重要，但他一遍又一遍地苦读同样的内容，所以我认为这内容应该是
很重要的”
较快的方式是去做任何提高你的大脑主动性的事情，特别是不同类型的大脑活
动。上一页中的内容是解决方法的一大部分，并且已被证明能有助于大脑的有效工
作。例如，研究表明把文字放在其所描述的图像中（与本页的某些地方相反，像标
题或正文）会促使大脑去理解文字和图像之间的关系，并且能触发更多的神经元
（Neuronstofire）。更多的神经元被触发等同于给大脑更多的机会，将该内容视为值
得关注的事情，并且可能地把它记下来。
对话式的风格也相当有帮助，因为当人们意识到自己处在交读之中时，他们会更加
集中注意力，因为他们期望能一直跟得上谈话的内容至到对话结束。奇怪的是，你
的大脑并不在乎你与书本之间的对话！另外一方面，如果你的写作风格既正式又枯
燥，你的大脑会感到看书就像在被动地听一场报告一样，无须保持清醒。
但是，图像与对话式的风格，只不过是一个开端
目前位置
XXix
---
## Page 14
如何使用本书
我们的做法
我们采用图像，因为你的大脑会调整你的注意力，让你注意到视觉效果，
而不是文本文字。只要你的大脑被吸引，就一图值“千”字。并且，当文
本和图像放在一起时，我们把文字嵌入到图像中，因为当文字在其所涉及
的图像中时（面不是在图像说明或者理没在文字内某处），你的大脑会工
作得更为有效。
激试
我们采用重复（Redundancy），以不同的表现形式、不同的媒介、多重的
感知，说明同样一件事情，以增加学习内容络印在你的大脑中多个区域的机会。
我们采用意想不同（Unexpected）的方式，使用概念和图像、让你的大脑觉得新奇和有
题，并且我们采用多少具有一点情感性内容的图像和思想，让你的大脑感同身受。让你有感
觉的事物，自然比较容易被记住，即使感受到的只不过是一点盘默、新奇或有趣。
我们采用拟人化，对话式风格（Conversationalstyle），因为当你的大脑相信你正处在对话
之中，而不是被动地去听演讲之时，开发循环2便会付出更多的关注。即使当你是在阅读时
（对话的对象是一本书），你的大脑还会这么做。
我们包含了80多项活动，因为当你在做事情时，而不是在读东西时，你的大脑会学会的更
多，记忆的更多。并且，我们li让练习活动保持在具有挑战性（Challenging-yet-do-able），又
不会太难的程度，因为大多数人都喜欢这样的挑战。
我们采用多重学习方式（Multiplelearming style），因为你可能喜欢一步一步地学习过程，
而其它人喜欢先了解整个轮廓，另外一些人则喜欢去直接看例子。但是，不论你自己是偏好
于什么样的学习方式，每一个人都能从同一内容的多重表达方式中获益。
前情提型
我们还考虑到了你的左右脑（Both sidesofyour brain）运用。因为你的大脑参与的越多。
就越有可能学会和记忆更多的事情，而且，你的精力集中的时间就越长，因为使用一边大
软停开发
脑，往往意味着另一边大脑有机会休息，你便可以学习的时间更长并且更有效率。
工具籍
而且，我们也采用了故事（Story）和练习，并用多种角度（morethanonepointofview）
来呈现，因为，当大脑被迫去做评估和判断时，会学习得更加深入。
在本书中，也包含了很多挑战（Challenges）和练习，并采用问问题（Questions）的方
式。但是，对这些问题都没有直接给出答案，因为当你的大脑深人涉及某个问题时，你会学
得更多、记得更牢。想想看—如果你只是在健身房中看别人银炼的话，你如何能让自己达
到塑身的效果。但是，我们做了充分的准备，确保当你的努力总是用在正确的事情上。你不
会花费额外的脑力，去处理难于理解的例子，或是难以解析、行话充斥或咬文嚼字的论述。
我们采用人物（People），在故事、例子和图像等等中，处处是人物。这是因为你也是一个
人，你的大脑对人比对事物更加地注意。
XXX
介绍
---
## Page 15
介绍
让大脑顺从你的方法
那么，该傲的我们都微了。剩下的就全靠你了。这些技
巧是一个开头：倾听你的大脑的声音，弄清楚哪些对你
有效、哪些对你无效，尝试尝试吧！
把它剪下来，始
在你的本猫上。
慢慢来，你理解的越多，需要记忆的就越少。
谈论它，大声谈论它。
不要只是阅读，要停下来并且思考思考，当
讲话激活了大脑的不同部位。如果你试图理解
书上向你提问时，你不要跳过去直接找答案。
某些内容，或增加以后你记住它的可能性，就
设想一下，如果真的有人当面问你的问题，
大声说出来。更好的办法是，尝试大声地解释
能迫使你的大脑思考得更深人，你就有机会
给别人听。你会学习得更快，甚至触发许多新
学会井且记住更多的东西。
的想法，这是只通过阅读微不到的。
②勤做练习，多记笔记。
倾听大脑的声音。
在书中，我们安排了练习，但如果我们替你
注意你的大脑是否在满负荷工作。如果你发现
微练习，就像有人替你做训练一样。而且，
你自已开始蜡艇点水，或者过目即忘，就是该
不要只看练习，使用铅笔作答。大量事实证
休息的一会儿了，一旦你错过了某些重点，就
明，学习当中的体力活动能提高学习的效率。
应该放慢脚步，否则你将失去更多，甚至可能
伤害学习的过程。
③阅读“没有愚套的问题”的单元。
感受事物
仔细阅读所有的“没有愚囊的问题”的单元，
你的大脑必须知道这件事情的重要性，你可以
它们不是无关紧要的内容一
—它们是核心内容
让自己融于到故事之中，为图片加上你自己的
的一部分！不要略过它们。
说明。即使抱怨笑话太出格，仍然比什么都没
把阅读本书作为上床前最后要阅读的内容，或至
有感受到要好。
少是作为睡觉前的最后一件具有挑战性的事情。
9编写大量的软件！
学习的一部分反应发生在你放下书本之后，尤
学好开发软件只有一种方式：要实际去开发软
其把阅读到的知识转化为长期的记忆就更是如
件（Actually develop software）。并且，这就
此。你的大脑需要自己的时间，去对阅读到的
是整本书所要你去微的事情。我们打算给你很
知识微更多的消化处理。如果在处理期间，你
多你要去捕提的需求，去评估的技术，以及需
把新的知识塞进你的大脑，有些你刚学过的东
要去测试和完善的代码：每一章都有练习题，
每一道练习题都提出一个要你解决的问题。切
西将会被遗忘。
勿跳过它们！当你解答这些练习题时，学习成
喝水，多喝水。
你的大脑需要浸泡在充沛的液体中，才能工作
效就会显现出来。每道练习题，我们都给出了
得最好。脱水（往往发生在你感到口渴前）减
答案，如果你真是卡住了，别不好意思去偷窥
缓大脑的认知功能。
一下（人生难免遇到小波折）！但是，尽量在
看答案之前，去解决所提出的问题。
目前位置
xxxi
---
## Page 16
如何使用本书
读我
这是一段学习经历，而不是一本参考书。我们已刻意地刷除掉了所有可能妨碍学习的
内容。并且，在你第一次阅读时，你必须要从首页开始，因为本书对读者已经阅读过
哪些知识进行了假设。
我们假设你熟悉面向对象的编程。
教会你学习面向对象的编程可能要一整本书（如，《HeadFirstOOA&D》）的篇幅，
我们选择是本书的重点集中在软件开发的原理上，而不是软件设计或编程语言的基础
知识。我们选择Java作为我们的例子，因为Java语言的应用已相当的普遍，并且相当
能够自我说明（Self-documenting），但是，本书中所讨论的每一件事情都应该是具
有普适性的，适用于你正在使用的Java，C#，C++，或VisualBasic（或Ruby等等）
各种语言。然而，如果你没有使用面向对象的语言编程的经验，在阅读部分软件代码
时，你会碰到一定的困难。在这种情况下，我们极力推荐在你阅读本书的后面的章节
之前，先熟悉一下其中的一种语言。
我们没有涵盖所有软件开发的过程。
有关软件代码编写的方法论方面的资料可谓是五花八门，我们并未试图去涵盖所有可
能的开发代码的方法。恰恰相反，我们把重点集中在一些行之有效并能生产伟大的软
件的技术之上，在第十二章中，我们特别讨论到一些调整流程的方法、让你的流程能
够符合你的项目的实际。
活动不是可做可不做的。
练习题和活动不是额外附加的点缓，而是本书核心内容的一部分。其中，有一些能帮
助记忆，有一些能帮助理解，还有一些能帮助你应用所学习到的知识，有些练习题只
事情，但它们非常好地提供给你的大脑一个机会，在不同的段落中，让你回顾学过的
专业词汇和枝术术语。对这一部分，中文版将保留原文，方便读者玩此游戏。重复是
OOXXII
介绍
---
## Page 17
介绍
刻意的，并且是重要的。
本系列书中的一个鲜明的区别是我们希望你真正掌握书中的知识，并且，我们希望
你在完成对本书的阅读之后，能够记住你已经学习到的知识。大多数的参考书井不
把保持和记忆作为目标，但本书的重点放在学习上。所以，你会看到有些同样的概
念会出现多次。
例子尽可能精简。
我们的读者告诉我们，从200行的例程中找2行代码需要读者去理解的事情是让读者
感到很受挫的一件事。本书中，大多数的例程都尽可能地缩短，让你所学习的部分
清晰和简单。不要期待所有的例程都很强健或甚至是完整的—特别写这些例程是
为了学习，而不是为了完整。
我们把各项目的完整的代码放在网站上供读者下载，所以你可以复制和粘贴它们到
你的编辑器中，你可以在以下地址找到：
http://www.headfirstlabs.com/books/hfsd/
动脑筋练习不需要答案。
有些动脑筋的练习，没有标准的答案。相对其他练习面言，动脑筋活动的学习经历
所启示的是：让你自己决定你的答案是否以及何时是正确的。在有些练习中，我们
会提供暗示，示意你正确的方向。
C
目前位置
xxxii
---
## Page 18
审阅团队
技术审阅团队
Dan Ftancis
McClellan Francis
Faisal Jawad
Burk Hutnasel
Cisa Kellner
给技术审阅人员：
如果没有技术审阅团队的协助，本书不知道会是什么样子。当他们不同意书中
的某些观点时，就会告诉我们：当他们觉得某些东西不错时，他们就为我们
喝彩。并且，根据他们的实践经验，判断这些技术是否可行、给我们一些宝责
的点评。他们每个人都为本书带来了不同的观点，我们十分感激他们。例如，
Dan Francis和McClellan Francis确保本书没有变成一本“Java 软件开发”的著
作。
我们特别要感谢的是FaisalJawad，因为他的完整的和温暖的反馈意见。Burk
Hufnagel根据他实际运用的其他开发方法提供了很好的建议，让我们其中的一
位通宵加班，把他的宝贵建议收括在本书之中，为本书增添了很多滑稽和有趣
的内容。
最后，我们想逃谢Lisa和KristinStromberg，因为她们的努力工作使本书的可
读性与节奏大为改善。没有你们这些家伙的倾注，本书就一文不值。
XXXiV
介绍
---
## Page 19
介绍
致谢
给我们的编辑：
别让这张照片愚弄了你，Bret是我们曾经合作过的最敏锐且极
其专业的人员之一，而且，他对本书的贡献遍及书的每一页。
Brett提出的种种正面和反面的观点，为本书提供了很好的支持，
并且，与我们在华盛顿特区共同度过了一段美好的时光，顺利完
成了本书的编写。不只一次，他成功地引导我们去争解一个良好
的解题，并记录解论时，所获得的新颖的观点。这本书是他努力Bbett Melaghin
工作和支持的结果，我们由衷地感谢他，
给OReilly团队：
Leu善爱的美
国方式
LouBar是一位非凡的图形设计照
她负责把我们模期不
清的言词调整为既酷又炫（awesome）的插图，使本书无
与伦比，
同时，我们也要感谢LauriePetrycki提供给我们机会，并让
本书出版。我们还要感谢Catherine Nolan和Mary Treseler，
是他们促成了本书的编写。最后，我们还要感谢Caitrin
McCullough、Sanders Kleinfeld、Keith McNamara和
O'Reily其他的全体同仁，是他们使本书成为一本语法上
完美无暇的、高品质的书籍。
 Lex Bats
and XP
Scrum and XP from the Trenches:
特别感谢HenrikKniberg，因为他写了这本好书，《Scrum
and XP from the Trenches》。这本书对我们1如何开发软件
具有深远的影响，也是本书描述某些技术的基础。我们
非常感激他的杰出工作。
给我们的家庭：
我们无法用感激的语言来感谢我们的家庭为本书所做的贡献和牺牲，在几乎两年的时间
好书
里，Vinny，Nick和Tracey为我们提供了宽松的环境。对她们的支持和鼓励，我不知如何
炖指荐
感谢。谢谢你们1
A massive thank you also goes out to the Miles household, that’ s Corinne (the boss) and Frizbee,
Fudge, Souff, Scrappy, and Stripe (those are the pigs). At every step you guys have kept me going
and I really can’ t tell you how much that means to me. Thanks!
目前位置
XXXV
---
## Page 20
safari在线书籍
SafariBooksOnline
Safari"
当你在你喜爱的技术上看到Safari@图标时，意味着该书英文
版通过O'Reilly网络书架提供在线阅读。
Safari提供了比e-books更好的解决方案。当你需要最准确、最新的信息时，虚
拟的图书馆让你容易地查找上千本顶级的技术书籍，你可以剪切和粘贴代码案
例，下载章节和快速查询答案。欢迎尝试http://safari.oreilly.com.
PDG
Xxvi
介绍
---
## Page 21
目录
目录（简要版）
引言
XXV
伟大的软件开发：让客户满意
2
收集需求：知道客户需要什么
29
3
项目规划：为成功面筹划
69
4
使用情节和任务：开始你实际的工作
109
足够好的设计：以良好的设计完成工作
149
6
版本控制：防御性开发
177
6.5
构建你的软件代码：自动化构建·
219
7
测试和连续集成：智者千虑必有一失
235
测试驱动开发：让代码负起责来
275
9
结束开发循环：消消细流归大海
317
10
下一轮开发都环：无事就要生非
349
11
软件错误：专业排错
383
<
真实的世界：落实流程
417
目录