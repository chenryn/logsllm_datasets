disrupt traffic on some fraction ℓ of links; can communicate with
arbitrary nodes on the network; and can selectively “corrupt” or
otherwise assume control of some fraction γ of selected nodes.
We call this an (ℓ, γ)-adversary. Formally, we say that an overlay
network protocol is (Λ, Γ, f )-membership-concealing if no (ℓ, γ)-
adversary monitoring ℓ ≤ Λ links and corrupting γ ≤ Γ members
can identify more than f (γ, ℓ, N ) members, where N is the total
number of MCON participants. When f (γ, ℓ, N ) = Θ(γ + ℓ)
we call the protocol a membership-concealing network protocol.
We note that no overlay protocol that permits communication be-
tween peers can be (Λ, Γ, o(Λ + Γ))-membership-concealing since
at least one node must deliver messages to each corrupted or mon-
itored identity, and an adversary can always choose to corrupt or
monitor identities with no common neighbors.
3. RELATED WORK
Arguably the first darknet was WASTE [20], designed to facili-
tate secure collaboration by small groups. Some file sharing appli-
cations have recently added darknet features [7], and applications
for “friend-to-friend” (F2F) sharing have been developed [27]. The
latter scheme is meant to allow sharing through trusted interme-
diaries, preventing the disclosure of the uploader’s identity. It is
also fundamentally different from previous darknet designs, since
it hides the network member set even from other network members.
Unfortunately, all of these networks have similar problems such as
forming partitioned groups instead of larger networks, scalability
limitations, search efficiency issues, and security vulnerabilities.
3.1 Freenet
The system that is currently most similar to an MCON is Freenet
[10]. It is a censorship resistant network which hides the publisher,
querier, and storage location of files by obfuscating their names and
contents, making it difficult for any party other than the querier to
identify the content that is being retrieved. Moreover, Freenet uses
recursive routing to reduce the number of nodes who are aware
of each other’s existence. (Recursive routing proceeds by flood-
ing through intermediate nodes instead of directly between source
and destination.) Freenet version 0.7 is designed to allow for two
modes of operation: in opennet mode, nodes may freely connect
to any other opennet node, while darknet mode allows connections
with other nodes only by prior out-of-band agreement, presumably
4If users voluntarily disclose their real-world attributes then IP
addresses become sufficient, but not necessary, to de-anonymize
them.
based on mutual trust [41]. This provides protection from malicious
nodes crawling Freenet for membership information. Note that be-
cause darknet nodes do not communicate with opennet nodes, there
may be many disconnected darknets instead of one large network.
3.2 Tor bridges
Tor [16] is a popular anonymizing network that offers sender
anonymity. It consists of a relatively small number of dedicated
volunteer “routers,” and is thus easily blocked at a national or ser-
vice provider border by disallowing all connections to those ded-
icated hosts. Tor designers are actively working to add “bridge”
functionality [14] that would make it more difficult to block. Tor
bridges are not dedicated routers; they are Tor clients who allow
users in censored regions to contact them directly as a first step
into the Tor network. Since bridges are client nodes, they are more
numerous and experience higher churn than dedicated relays, so
blocking them is a more difficult task. This is implicitly a mem-
bership concealment feature. Tor currently relies on a publicly-
known centralized authority or out-of-band (social) communication
for distribution of bridge descriptors, but the authority can itself be
blocked. Although the authority takes precautions to avoid provid-
ing bridge descriptors en masse to anyone who asks, the system is
vulnerable to attack: an adversary who controls many IP addresses
can query the authority repeatedly, pretending to be different nodes
behind different IP addresses.
3.3 Other systems
Other anonymity schemes [25, 19] have also attempted to pro-
vide “blocking resistance” by hiding their members among a larger
set. However, even if an adversary cannot block access to all mem-
bers of an overlay, he might be able to block queries for particular
types of content. Since most storage networks provide an efficient
lookup feature, an adversary knowing the identifying information
of the content (hash, ID, etc.) can look up the node(s) storing that
content and selectively deny access to those nodes. Censorship re-
sistance requires blocking resistance, but both are orthogonal to
membership concealment.
3.4 Using social networks to bootstrap trust
Freenet darknet limits identity disclosure to trusted peers, se-
lected from a network of untrusted members based on past per-
formance and off-line relationships. Turtle [36] is one example of
a network that bootstraps from a social network that expresses mu-
tual trust. Like Freenet, queries are flooded and do not terminate
until either every node in the network has responded or the max-
imal query depth is reached. Kaleidoscope [44] also uses social
networks to distribute proxy information, mitigating Sybil attacks
(it is far more likely that Sybil nodes are connected to adversaries
than honest nodes). However, the system uses a centralized server
to distribute information about proxies to newly-joining nodes, so
it is vulnerable to the same attacks as the Tor bridge authority.
Danezis et al. also use social networks to bootstrap a Sybil-
resistant DHT [11]. Based on the same assumption as above –
that adversaries are connected to a social network in few places
compared to honest members – the Sybil-resistant DHT builds trust
profiles for individual nodes along a query path and favors nodes
who usually yield correct results. Since the majority of adversar-
ial (Sybil) nodes will be connected to the DHT through very few
honest nodes, those connection points will (with high probability)
return Sybil nodes as next hops, eventually producing incorrect re-
sults when adversarial nodes misbehave.
4. ATTACKS ON EXISTING SYSTEMS
The primary goal of MCONs is resistance to member identifica-
tion attacks, in which either an insider (MCON member) or an out-
sider attempts to determine the “real-world” identities of network
392members. This attack may take two forms: existential and targeted.
In the former case, which can also be called the harvesting attack,
an adversary attempts to determine the identities of as many net-
work members as possible. The latter attack allows an adversary
to match a network pseudonym with an identity, or to significantly
reduce the number of candidate identities for a given pseudonym as
a precursor to rubber-hose cryptanalysis.
Most existing systems are vulnerable to at least one type of har-
vesting attack. The simplest variant exploits systems that do not
limit the number of identities that a single member can collect sim-
ply by querying the network repeatedly. Since the attack is active,
it may be detected and the attacker could be blacklisted, but the
adversary can always throttle or otherwise mask his actions to ap-
pear benign. A harder-to-detect variation is the passive harvest-
ing attack: an adversary runs a network node that logs all direct
communication attempts, learning the identities of all other nodes
over a long-enough timeline. Both attacks become faster with more
adversaries. Another example of a harvesting attack is the multi-
ple join, or bootstrap attack, in which an adversary either sequen-
tially joins the network multiple times at multiple logical locations
(which are the Freenet equivalent of DHT IDs), or creates multiple
(Sybil) nodes and simultaneously joins them to the network. Since
every joining node must obtain the identity of at least one other
network member, multiple joins allow the adversary to learn the IP
addresses of a large fraction of network members.
The celebrity attack affects systems that use social networks to
bootstrap trust [10, 36, 44, 27]. If the social network topology can
be discovered then an adversary can choose to corrupt or moni-
tor nodes with many friends, learning disproportionally many other
(Mislove et al. report node degrees of up to
network members.
10, 000 in many popular social networks [32].) Only a few very
popular network nodes need to be corrupted or monitored in or-
der to learn the vast majority of network members [12]. This can
be generalized to attacks against “tasty targets,” applicable when
networks that bootstrap from social networks but do not “smooth
out” node degree. It also applies to networks with so-called “super-
nodes” – members who have more power than other members. An
MCON should either not contain any targets of compromise that
know disproportionally more member information than any other
target, or should ensure that such nodes are difficult to identify.
Social networks also expose the constructed MCON to a graph
overlap attack – Narayanan and Shmatikov have recently shown
that anonymized graphs can be de-anonymized based only on topol-
ogy knowledge and access to an overlapping non-anonymized
graph [34]. This means we cannot anonymize a graph by simply
replacing identities with pseudonyms; we must also restrict adver-
saries from constructing a complete view of the anonymized graph
topology and/or perturb the node degree. While some of the above
networks would resemble MCONs more closely if they were not
vulnerable to the celebrity attack, most of them expose their topol-
ogy while not enforcing node degree limits.
Another serious attack on a membership-concealing network is
the confirmation attack. If an MCON requires nodes to respond in
a distinctive way to connection attempts, then a non-member adver-
sary can “cast a wide net” and identify a large number of nodes by
attempting to connect to them. As an example, consider a network
administrator at a large corporation who wishes to identify users on
the internal network who are using a file-sharing application. As-
sume that the most popular application uses a certain port number
in the default configuration. Our adversarial network administra-
tor can “probe” each host on the internal network, connecting to
that default port, identifying users by the tell-tale replies from the
file-sharing client.
(a)
(b)
Figure 1: Results of Freenet attacks. (a) Total unique Freenet nodes
found over time. Dots show the time when all marker nodes were
found.
(b) Unique running nodes for each 3-hour time period. The
cycle is likely the result of day-time versus night-time usage patterns.
Finally, MCONs must resist protocol identification attacks when
communicating with other network members as well as when join-
ing, leaving, or inviting others to join the MCON. Such an attack
would allow passive identification of MCON users by monitoring
communication patterns without peeking at content [46]. Consider
once again our sneaky system administrator from above. Since
there are only a small number of exit points from the internal net-
work to the Internet, our adversary can monitor protocol traffic at
those locations, identifying all users of the targeted protocol.
4.1 Attacking Freenet opennet
We implemented a passive harvesting attack using well-behaved
Freenet clients5 in “opennet” low-security mode whose only mod-
ified behavior is passively logging communication with others. We
call these nodes “markers” because we use them to measure the
success of our attack – since they have random pseudonyms, the
time required to locate all marker nodes will be close to the upper
time bound to find all nodes in the Freenet network. We also im-
plemented an active harvesting attacker, which announces itself to
random logical locations in the network, collecting pseudonyms
and IP addresses of responding Freenet nodes (who are located
“near” the announcement point in the Freenet logical coordinate
space). To eliminate the effects of dynamic IP addresses we only
counted node pseudonyms, which are unique and constant.
Figure 1(a) provides a comparison of each of our attacks on
Freenet, using 80 marker nodes and a single announcer. Note that
the single active attacker outperforms all 80 passive attackers, but
collection speed can always be increased by adding more attackers
– the bandwidth and processing costs are not a bottleneck. The dots
represent the time when each attack discovered all 80 marker nodes,
signalling that we have likely enumerated the majority of running
nodes. Our passive attackers were able to enumerate all markers
in 11 hours, and the active attacker found all of them in 2.5 hours.
Figure 1(b) shows the membership of opennet derived from snap-
shots of 3 hours each – since it took our announcer less than 3 hours
to find our markers, we expect this graph to be an accurate measure
of the membership of opennet at any given time. (The shaded areas
are 8pm to 8am GMT.) We observed between 2,000 and 3,000 run-
ning opennet nodes at any given time. While the total number of
existing opennet nodes cannot be counted accurately since a large
number are likely to remain offline for the duration of the experi-
ment, we discovered a total of 11,100 unique node pseudonyms.
4.2 Attacking Tor bridges
We also launched a passive harvesting attack against Tor bridges
using an unmodified Tor router, configured as a middleman (non-
exit) node and offering 100MB/sec of bandwidth (attracting dis-
proportionally many client connections). Our router should receive
connections from clients, bridges, and other Tor routers. We weed
5Based on Freenet 0.7 Build #1204 r25665 (2-17-2009)
393out routers using several tests, including TLS handshake finger-
printing, querying all running directory authorities to see if they
know the router, as well as by connecting back to the router and
examining its descriptor [15]. Once we eliminate the routers we
are left with clients and bridges. To differentiate between them we
attempt a connection using common bridge ports. If our connec-
tion succeeds and we get a bridge descriptor [14], then it is not a
client and we launch a confirmation attack by extracting the fin-
gerprint from the descriptor and querying each directory authority.
A router will appear in at least one, while bridges will not. (Note
that these tests are all performed in real time.) Since we expect that
all bridges will eventually connect to our router due to Tor’s selec-
tion rules, we can eventually build a complete list of bridges. We
collected 61 unique Tor bridge identities in 4 days, a clear vulnera-
bility in the membership concealment capability of Tor bridges.
5. DESIGN
This section outlines three proof-of-concept MCON designs.6
Using a social network based on offline relationships as a start-
ing point, we bootstrap our MCON from a small fully-connected
“seed” network of “social neighbors” (nodes connected by an edge
in the social network). The MCON grows by having existing mem-
bers invite new nodes based on social relationships. When joining,
nodes are assigned persistent pseudonyms and DHT IDs. After
the MCON is built and after a period of DHT routing table dis-
covery, we use a VRR-like protocol [8] to allow nodes to com-
municate with the DHT over a small set of “physical neighbors.”
We define physical neighbors as those nodes who are allowed to
directly communicate over IP. (This system may be considered a