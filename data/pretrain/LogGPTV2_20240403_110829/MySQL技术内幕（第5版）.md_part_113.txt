其中，“..”代表数据目录的父目录，即MySQL的基本目录。
drwx-
drwxr-xr-x
drwx-
total 10148
%1s-la/usr/local/mysql/data
基本目录下的数据目录甚至拥有更为严格的用户权限设定：
成
drwx--
如上所示，
drwxr-xr-x
drwxr-xr-x
drwxr-xr-x
drwxr-xr-x
drwxr-xr-x
drwxr-xr-x
drwxr-xr-x
drwx------
drwxr-xr-x
drwxr-xr-x
drwxr-xr-x
total44
%ls-la/usr/local/mysql
find
者，
chgrp
chgrp
chown
程序将不能通过这个套接字连接到服务器。另外，也可以采用把Unix套接字文件存放在
当更改安装目录的所有权：
居目录位于/var/mysql/data，而不是位于/usr/local/mysql，则需要发出下面几条
样，则需要找到每个与MySQL有关的目录，并针对每个目录执行相应的操作。例如，
所述，前面的步骤假定与 MySQL 有关的所有文件都位于一个单独的基本目录下。如
请参夫
量（如服务器基本目录）的方法来解决。同样的原则也适用于其他除mysqld以外的程
，假设在MySQL安装目录下创建了一个innodb目录，用于存放与InnoDB有关的文
1/usr/local/mysql-follow
-R
因为你肯定不想让未授权用户能更改MySQL的安装目录。
考13.1.2.1节。）
：所有内容现在都隶属于 mysql 用户和 mysql 组。
mysql
mysql
N
2
3
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
/usr/local/mysql
/usr/local/mysql
root
/var/mysql/data
sql
sql
sql
sql
sql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
mysql
，一种操作方法是使用find：
-print| xargs
1024May818:43tmp
1536
1024
1024
1024
1024
1024
1024
1024M
512
512
512
512
512
512
512
N
Jun
Jun
May
May
May
710:45
13.1保护对MySQL文件系统的访问
515:57
8
10:45
1998
13:31
10:45
10:45
10:45
12:20
1998
1
10:45
chgrp
：45
test
sampdb
menagerie
mysql
support-files
scripts
man
include
data
bin
，则必须跟踪这些链接，并更改它
mysql
mysql
/sql-test
，例外情形是那个“..”目录，
475
这
---
## Page 496
端开发库的程序都将获得这个新的位置，作为自己的默认值，而与是否使用选项文件无关。
通过重新编译，新的套接字位置会变成默认值，记录在客户端开发库里。这样，所有使用客户
项文件的客户端才有作用。（所有的标准MySQL 客户端都可以，但是第三方程序可能不行。）
编译，将位置构建为默认值。如果选择使用选项文件，请记得在服务器和客户端两边都要指定
据目录没有完全读取权限的情况下，也能够访问套接字文件，可以使用下面这条命令：
在这种情况下，一种解决办法是让这个数据目录变得稍微开放一点。为了让客户端程序在对数
有，则会导致这样的问题：客户端程序只有以root或mysql身份运行时才能访问套接字文件。
进行删除的目录里。例如，常见的做法是把套接字文件创建在/tmp 目录里，但是在某些Unix
通常允许被公开访问，以便客户端程序可以使用它。但是，它不应该放置在任何客户端都可以
13.1.2.1保护Unix套接字文件
mysql身份运行。关于使用特定登录账户运行服务器的更多信息请参考12.2.1.1节。
该位置。
/usr/local/mysql/mysql.sock。既可以在全局选项文件里指定位置，也可以根据源代码重新
组件，在其中指定该用户：
方法是，在服务器启动时会读取的/etc/my.cnf 文件或其他的 my.cnf 文件里，找到[mysqld]
所以你应该保证服务器从现在起，始终是以 mysql身份运行的。确保做到这一点的较为容易的
跟踪它们到实际的位置，则可以使用下面的命令来替代：
个
476
目录的粘滞位：
该目录里创建了文件，他也只能删除自己的文件。以root身份执行下面的命令，可以设置这
重启再次创建这个套接字文件。更好的做法是为/tmp目录设置“粘滞位”，这样即使某人在
重新编译比较费事，但是这是一种更为圆满的解决办法，因为使用选项文件只对会检查选
如果不想像这样让数据目录变得过于开放，则可以采用另一种方法，即让服务器在其他位
对于客户端至localhost的连接，服务器使用的是Unix域套接字文件。这个套接字文件
%chmodgo+x/usr/local/mysql/data
有些安装程序会把套接字文件放置在数据目录里，而如果把这个数据目录设置为mysql私
#chmod+t/tmp
在保护好MySQL的安装内容之后，需要重新启动服务器。
这样，不管你启动服务器时是以 root 身份登录，还是以 mysql 身份登录，服务器都会以
因为在此刻，该数据目录内容的所有权和访问权限都被设定为只允许mysql登录用户访问，
#find /usr/local/mysql/data -follow -print | xargs chmod go-rwx
更改访问模式也要考虑这些。例如，如果你的数据目录下有一些符号链，并且chmod不会
socket=/usr/local/mysql/mysql.sock
[client]
socket=/usr/local/mysql/mysql.sock
[mysqld]
[mysqld]
第13章安全性与访问控制
---
## Page 497
他们可以从哪里连接到服务器，以及在连接之后他们被允许做哪些事情。MySQL会把这些信息
执行此脚本，则可以把它设置为以root用户身份在每个夜间运行的cron作业。
root 身份运行，这样才能更改其他用户所拥有的那些文件的访问模式和所有权。如果想要自动
查找每个用户主目录里的.my.cnf文件，并修正发现的所有问题。
13.2
13.1.2.2
你可以在 sampdb 发行包的 admin 目录里找到 chk_mysql_opt_files.pl。此脚本必须以
while(<>)
use strict;
#!/usr/bin/perl
一种确保用户选项文件拥有正确的访问模式或所有权的方法是：运行某个程序，让它依次
口
/etc/my.cnf文件通常允许公共可读，因为它是一个用于指定全局客户端选项的地
口如果某个选项文件包含有诸如MySQL账户名或密码之类的敏感信息，则不要让它可公
使用选项文件存在潜在风险，因为它们会包含一些不该被公开看到的选项。
口
my $cnf_file =
nextif/^#/11/^\s*$/;
确它应
chk
其他选项文件则需要根据它们的具体用途来设置其访问模式。
每个用户特有的（user-specific）.my·cnf选项文件，应该隶属于它所在主目录对应的那
方。请不要把服务器的选项（如复制机制中使用的密码）放入其中。
共读取。
管理MySQL用户账户
warnings;
%chmodu=rw,go-rwx.my.cnf
个用户，且只可以被这个用户访问。具体做法是，在你自己的主目录里执行以下命令：
chmod（$mode&~077,$cnf_file）;
warn sprintf ("Changing mode of %s from %o to %o\n",
chown($uid,
warn "Changing ownership of $cnf_file to $uid\n";
($uid,$home)
保护选项文件
所有权都
(stat ($cnf_file))[5],$cnf_file);
($cnf_file))[2];
权限。
$_））[2,5];
$mode&~077);
面这样运行它：
测试“组”和“其他”访问位
#跳过注释、空行
13.2管理MySQL用户账户
，下面这个 Perl 脚本 chk_
477
---
## Page 498
户端在试图连接服务器或执行 SQL语句时，服务器将如何使用它们的内容。
表进行了更详细的描述，能帮助你更好地理解：它们在账户管理语句这一层是如何工作的；客
以及如何更改密码或重置丢失的密码。你也可以执行像INSERT 和UPDATE 这样的 SQL语句
据
对它进行讨论。
存储在 mysql数据库的多个权限表里，可以通过下面这些账户管理 SQL 语句操作这些表。
说明不
语
服
478
procs_priv表里。PROXY 权限的分配会被记录在 proxies_priv表里。REVOKE 语句可以删
句比直接修改权限表更容易，但本书还是建议你读一读自13.3节开始的几节。这几节对权限
务器会将你的请求自动映射成正确的权限表更改操作。不过，尽管使用CREATEUSER和GRANT
理工作更便捷，概念更清晰，
接处理权限表的内容。不过，
的数据库、表、列或存储例程，那么它们会被分别记录到db、tables_priv、columns_priv
居库的权限)，那么它们也会被记录到user 表里。如果在 GRANT 语句里指定的权限只适用于给
接下来的几节将描述，
会发生同样的事情。在使用GRANT语句时，如果指定了全局权限（管理权限或应用于所有数
还有一个host权限表，不会受这些账户管理语句的影响，但它已被废弃，因此这里不再
这些语句会对表13-1中所示的mysql数据库权限表产生影响。
口 SHOW GRANTS。用于显示账户所拥有的权限。
口 SET PASSWORD。用于分配账户的密码。
口REVOKE。用于移除MySQL账户的权限。
GRANT。