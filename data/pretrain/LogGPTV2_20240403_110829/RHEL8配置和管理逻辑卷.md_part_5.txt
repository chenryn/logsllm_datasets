::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#configure-raid-volume-using-storage-system-role_managing-local-storage-using-rhel-system-roles}使用存储系统角色配置 RAID 卷 {.title}
:::
使用 `storage`{.literal} 系统角色，您可以使用 Red Hat Ansible Automation
Platform 在 RHEL 上配置 RAID
卷。在本小节中，您将了解如何使用可用参数设置 Ansible playbook，以配置
RAID 卷以满足您的要求。
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署 `storage`{.literal} 解决方案的系统中安装 Red Hat
    Ansible Automation Platform。
    :::
-   已安装该系统中要运行 playbook 的 `rhel-system-roles`{.literal}
    软件包。
-   您有一个清单文件详细描述了您要使用 `storage`{.literal} 系统角色部署
    RAID 卷的系统。
:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    - hosts: all
      vars:
        storage_safe_mode: false
        storage_volumes:
          - name: data
            type: raid
            disks: [sdd, sde, sdf, sdg]
            raid_level: raid0
            raid_chunk_size: 32 KiB
            mount_point: /mnt/data
            state: present
      roles:
        - name: rhel-system-roles.storage
    ```
    ::: {.warning style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 警告 {.title}
    设备名称在某些情况下可能会改变，例如：当您在系统中添加新磁盘时。因此，为了避免数据丢失,我们不建议在
    playbook 中使用特定的磁盘名称。
    :::
2.  可选。验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory.file /path/to/file/playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 RAID 的详情，请参阅[管理
    RAID](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_storage_devices/managing-raid_managing-storage-devices){.link}。
-   有关存储系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#configuring-lvm-pool-with-raid-using-storage-system-role_managing-local-storage-using-rhel-system-roles}使用存储系统角色使用 RAID 配置 LVM 池 {.title}
:::
通过 `storage`{.literal} 系统角色，您可以使用 Red Hat Ansible Automation
Platform 在 RHEL 上使用 RAID 配置 LVM
池。在本小节中，您将了解如何使用可用参数设置 Ansible
playbook，以配置使用 RAID 的 LVM 池。
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要部署 `storage`{.literal} 解决方案的系统中安装 Red Hat
    Ansible Automation Platform。
    :::
-   已安装该系统中要运行 playbook 的 `rhel-system-roles`{.literal}
    软件包。
-   您有一个清单文件详细描述了您要使用 `storage`{.literal}
    系统角色配置带有 RAID 的 LVM 池的系统。
:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    - hosts: all
      vars:
        storage_safe_mode: false
        storage_pools:
          - name: my_pool
            type: lvm
            disks: [sdh, sdi]
            raid_level: raid1
            volumes:
              - name: my_pool
                size: "1 GiB"
                mount_point: "/mnt/app/shared"
                fs_type: xfs
                state: present
      roles:
        - name: rhel-system-roles.storage
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    要使用具有 RAID 的 LVM 池，您必须使用 `raid_level`{.literal}
    参数指定 RAID 类型。
    :::
2.  可选。验证 playbook 语法。
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory.file /path/to/file/playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   有关 RAID 的详情，请参阅[管理
    RAID](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_storage_devices/managing-raid_managing-storage-devices){.link}。
-   有关存储系统角色中使用的参数的详情，请查看
    `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    文件。
:::
:::
::: section
::: titlepage
# []{#managing-local-storage-using-rhel-system-roles_configuring-and-managing-logical-volumes.html#proc_creating-a-luks-encrypted-volume-using-the-storage-role_managing-local-storage-using-rhel-system-roles}使用存储角色创建 LUKS 加密卷 {.title}
:::
您可以通过运行 Ansible playbook，使用 `storage`{.literal}
角色创建并配置使用 LUKS 加密的卷。
::: itemizedlist
**先决条件**
-   您已在要运行 playbook 的系统中安装了 Red Hat Ansible Engine。
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    您不必在要创建卷的系统中安装 Red Hat Ansible Automation Platform。
    :::
-   您已在 Ansible 控制器上安装了 `rhel-system-roles`{.literal} 软件包。
-   您有一个清单文件详细描述了您要使用存储系统角色部署 LUKS
    加密卷的系统。
:::
::: orderedlist
**流程**
1.  使用以下内容 `playbook.yml`{.literal} 创建新文件：
    ``` screen
    - hosts: all
      vars:
        storage_volumes:
          - name: barefs
            type: disk
            disks:
             - sdb
            fs_type: xfs
            fs_label: label-name
            mount_point: /mnt/data
            encryption: true
            encryption_password: your-password
      roles:
       - rhel-system-roles.storage
    ```
2.  可选：验证 playbook 语法：
    ``` screen
    # ansible-playbook --syntax-check playbook.yml
    ```
3.  在清单文件上运行 playbook:
    ``` screen
    # ansible-playbook -i inventory.file /path/to/file/playbook.yml
    ```
:::
::: itemizedlist
**其它资源**
-   [使用 LUKS
    加密块设备](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_storage_devices/encrypting-block-devices-using-luks_managing-storage-devices){.link}
-   `/usr/share/ansible/roles/rhel-system-roles.storage/README.md`{.literal}
    file
:::
::: itemizedlist
**其它资源**
-   如需更多信息，请安装 `rhel-system-roles`{.literal}
    软件包并查看以下目录：
    ::: itemizedlist
    -   `/usr/share/doc/rhel-system-roles/storage/`{.literal}
    -   `/usr/share/ansible/roles/rhel-system-roles.storage/`{.literal}
    :::
:::
:::
:::
[]{#deploying-lvm_configuring-and-managing-logical-volumes.html}
::: chapter
::: titlepage
# []{#deploying-lvm_configuring-and-managing-logical-volumes.html#deploying-lvm_configuring-and-managing-logical-volumes}第 3 章 部署 LVM {.title}
:::
下面的步骤代表了全新安装的操作系统中 LVM 逻辑卷的基本配置。
::: section
::: titlepage
# []{#deploying-lvm_configuring-and-managing-logical-volumes.html#creating-lvm-physical-volume_deploying-lvm}创建 LVM 物理卷 {.title}
:::
这个步骤描述了如何创建和标记 LVM 物理卷（PV）。
::: itemizedlist
**先决条件**
-   已安装 `lvm2`{.literal} 软件包。
:::
::: orderedlist
**流程**
1.  要创建多个物理卷，在 `pvcreate`{.literal}
    命令中使用以空格分隔的设备名称作为参数：
    ``` screen
    # pvcreate /dev/vdb1 /dev/vdb2
    ```
    这会在 [*/dev/vdb1*]{.emphasis} 和 [*/dev/vdb2*]{.emphasis}
    中加一个标签，将其标记为属于 LVM 的物理卷。
    详情请查看 `pvcreate`{.literal} man page。
:::
:::
::: section
::: titlepage
# []{#deploying-lvm_configuring-and-managing-logical-volumes.html#creating-lvm-volume-group_deploying-lvm}创建 LVM 卷组 {.title}
:::
这个步骤描述了如何创建 LVM 卷组（VG）。
::: itemizedlist
**先决条件**
-   已安装 `lvm2`{.literal} 软件包。
-   创建一个或多个物理卷。请参阅 ["创建 LVM
    物理卷"一节](#deploying-lvm_configuring-and-managing-logical-volumes.html#creating-lvm-physical-volume_deploying-lvm "创建 LVM 物理卷"){.xref}
    中的说明如何进行操作。