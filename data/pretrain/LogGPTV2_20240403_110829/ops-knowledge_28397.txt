User: 如何使用docker compose来配置和启动一个多容器应用？
Assistant: 使用docker compose来配置和启动多容器应用，需要以下步骤：

1. 编写docker-compose.yaml文件：该文件用于定义多个容器之间的交互关系和服务配置，包括容器的名称、镜像、端口映射、环境变量等。

2. 在docker-compose.yaml所在目录下运行docker-compose up命令：该命令会根据docker-compose.yaml文件中的定义，启动所有需要的容器，并建立容器之间的联通关系。

3. 可以使用docker-compose ps命令查看运行的容器。

4. 可以使用docker-compose logs命令查看容器的日志输出。

5. 可以使用docker-compose down命令停止并删除所有相关的容器、网络和卷。

例如，下面是一个简单的docker-compose.yaml配置文件示例：

```yaml
version: '3.0'
services:
  web:
    image: nginx:latest
    ports:
      - "80:80"
  api:
    image: node:latest
    ports:
      - "3000:3000"
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: npm run start
    depends_on:
      - db
  db:
    image: mongo:latest
```

该配置文件定义了三个服务：web、api和db，分别为nginx、node和mongodb的镜像。web服务将80端口映射到宿主机的80端口，api服务将3000端口映射到宿主机的3000端口，并指定挂载宿主机当前目录到容器的/usr/src/app目录，以便在容器中使用本地文件。api服务还指定了一个npm run start的启动命令，表示运行npm脚本来启动服务。db服务表示mongodb容器，其他两个服务都依赖于它。

运行docker-compose up命令后，将同时启动这三个服务，并建立容器之间的网络连接。用户可以通过访问localhost:80来访问web服务，通过localhost:3000来访问api服务。