# Apple 802.11 Wi-Fi Subsystem: Vulnerabilities and Security Analysis

## Definitions and Constants
- **APPLE80211_IOC_UNKNOWN (NULL/No corresponding handler)**: 0x166
- **APPLE80211_IOC_HW_ADDR**: 0x167
- **APPLE80211_IOC_SCAN_CONTROL**: 0x168
- **APPLE80211_IOC_UNKNOWN (NULL/No corresponding handler)**: 0x169
- **APPLE80211_IOC_CHIP_DIAGS**: 0x16A
- **APPLE80211_IOC_USB_HOST_NOTIFICATION**: 0x16B
- **APPLE80211_IOC_LOWLATENCY_STATISTICS**: 0x16C
- **APPLE80211_IOC_DISPLAY_STATE**: 0x16D
- **APPLE80211_IOC_NAN_OOB_AF_TX**: 0x16E
- **APPLE80211_IOC_NAN_DATA_PATH_KEEP_ALIVE_IDENTIFIER**: 0x16F
- **APPLE80211_IOC_SET_MAC_ADDRESS**: 0x170
- **APPLE80211_IOC_ASSOCIATE_EXTENDED_RESULT**: 0x171
- **APPLE80211_IOC_AWDL_AIRPLAY_STATISTICS**: 0x172
- **APPLE80211_IOC_HP2P_CTRL**: 0x173
- **APPLE80211_IOC_REQUEST_BSS_BLACKLIST**: 0x174
- **APPLE80211_IOC_ASSOC_READY_STATUS**: 0x175
- **APPLE80211_IOC_TXRX_CHAIN_INFO**: 0x176

## Conclusion
- **Network Interfaces and Attack Surfaces**
- **Static and Dynamic Analysis Methods**
- **Creating Tools**
- **Other Considerations**

### Recommendations
1. **Utilize macOS/iOS Tools**: Pay attention to the tools provided in the macOS/iOS operating system.
2. **Leverage Apple SDKs**: Make full use of Apple SDKs and contribute to the Wi-Fi developer community.

## Demo
- **Apple 802.11 Wi-Fi Subsystem Fuzzing Framework** on macOS Ventura 13.0 Beta 4 (22A5311f).

## Zero-day Vulnerability Case Studies
- **Latest Zero-day Vulnerability Case Studies** for the Apple 802.11 Wi-Fi subsystem.

## Apple Product Security Follow-up IDs
- **CVE-2022-32837**: 791541097
- **CVE-2022-26761**: 797421595
- **CVE-2022-26762**: 797590499
- **CVE-2022-32860**: OE089684257715
- **CVE-2022-32847**: OE089692707433
- **OE089712553931**
- **OE089712773100**
- **OE0900967233115**
- **OE0908765113017**
- **OE090916270706**

## CVE-2020-9899
- **Vulnerability**: Kernel Stack Overflow in `AirPortBrcmNIC::setROAM_PROFILE`
- **Affected Systems**: 
  - macOS Catalina 10.15.6
  - Security Update 2020-004 Mojave
  - Security Update 2020-004 High Sierra
- **Reference**: [Apple Support](https://support.apple.com/en-us/HT211289)

## Current State of High-Quality Arbitrary Memory Write Vulnerabilities
- **Question**: Are there still high-quality arbitrary (kernel) memory write vulnerabilities?
- **Answer**: Yes, definitely.

## CVE-2022-32847
- **Vulnerability**: Kernel Stack Overwrite in `AirPort_BrcmNIC::setup_btc_select_profile`
- **Affected Systems**:
  - iOS 15.6 and iPadOS 15.6
  - macOS Monterey 12.5
  - macOS Big Sur 11.6.8
- **References**:
  - [iOS 15.6 and iPadOS 15.6](https://support.apple.com/en-us/HT213346)
  - [macOS Monterey 12.5](https://support.apple.com/en-us/HT213345)
  - [macOS Big Sur 11.6.8](https://support.apple.com/en-us/HT213344)

## Debugging Example
- **Process 1 Stopped**:
  - **Thread #1 Stop Reason**: EXC_BAD_ACCESS (code=10, address=0xd1dd0000)
  - **Frame #0**: 0xffffff8005a53fbb
  - **Register Values**:
    - rax = 0x00000000481b8d16
    - rbx = 0xffffffb0d1dcf3f4
    - rcx = 0x00000000000002fd
    - rip = 0xffffff8005a53fbb
  - **Backtrace**:
    - Frame #0: 0xffffff8005a53fbb AirPortBrcmNIC`AirPort_BrcmNIC::setup_btc_select_profile + 61

## CVE-2020-10013
- **Vulnerability**: Arbitrary Memory Write in `AppleBCMWLANCoreDbg`
- **Affected Systems**:
  - iOS 14.0 and iPadOS 14.0
  - macOS Catalina 10.15.7
  - Security Update 2020-005 High Sierra
  - Security Update 2020-005 Mojave
- **References**:
  - [iOS 14.0 and iPadOS 14.0](https://support.apple.com/en-us/HT211850)
  - [macOS Catalina 10.15.7](https://support.apple.com/en-us/HT211849)

## Summary of Case #3
- **Vulnerability**: Arbitrary memory write due to boundary checking errors.
- **Impact**: Predictable or controllable value to be written, combined with kernel information disclosure, can form a complete local EoP exploit chain.
- **Reference**: [Black Hat USA 2020](https://i.blackhat.com/USA-20/Thursday/us-20-Wang-Dive-into-Apple-IO80211FamilyV2.pdf)

## CVE-2022-26762
- **Vulnerability**: Arbitrary Memory Write in `IO80211Family::getRxRate`
- **Affected Systems**:
  - iOS 15.5 and iPadOS 15.5
  - macOS Monterey 12.4
- **References**:
  - [iOS 15.5 and iPadOS 15.5](https://support.apple.com/en-us/HT213258)
  - [macOS Monterey 12.4](https://support.apple.com/en-us/HT213257)

## Summary of Case #4
- **Vulnerability**: Simple and stable kernel vulnerability due to unsanitized user-mode pointer.
- **Impact**: Fixed value to be written, no heap Feng Shui manipulation required.
- **Common Causes**: copyin/copyout, copy_from_user/copy_to_user, ProbeForRead/ProbeForWrite.

## CVE-2022-32860 and CVE-2022-32837
- **Vulnerability**: Kernel Out-of-bounds Read and Write
- **Affected Systems**:
  - iOS 15.6 and iPadOS 15.6
  - macOS Monterey 12.5
  - macOS Big Sur 11.6.8
- **References**:
  - [iOS 15.6 and iPadOS 15.6](https://support.apple.com/en-us/HT213346)
  - [macOS Monterey 12.5](https://support.apple.com/en-us/HT213345)
  - [macOS Big Sur 11.6.8](https://support.apple.com/en-us/HT213344)

## CVE-2022-26761
- **Vulnerability**: Type Confusion in `IO80211AWDLPeerManager::updateBroadcastMI`
- **Affected Systems**:
  - macOS Monterey 12.4
  - macOS Big Sur 11.6.6
- **References**:
  - [macOS Monterey 12.4](https://support.apple.com/en-us/HT213257)
  - [macOS Big Sur 11.6.6](https://support.apple.com/en-us/HT213256)

## Takeaways and The End
- **Kernel Development**:
  - Apple has made significant efforts to improve macOS/iOS security.
  - All inputs are potentially harmful; developers should carefully check input parameters.
  - New features introduce new attack surfaces.
  - Callback functions, state machines, and exception handling need careful design.
  - Corner cases matter.

- **Vulnerability Research**:
  - Arbitrary kernel memory write vulnerabilities are powerful and stable.
  - Combined with kernel information disclosure, they can form a complete local EoP exploit chain.
  - Stack out-of-bounds read and write vulnerabilities are common.
  - Handlers supporting different architectures or working modes are prone to issues.
  - Complex logic handlers may introduce new vulnerabilities even after old ones are fixed.

- **Engineering and Hunting**:
  - Integrate subsystem interfaces and their attack surfaces.
  - Use KASAN and code coverage analysis tools.
  - Port work to the Apple Silicon platform.
  - Combine reverse engineering, kernel debugging, XNU resources, Apple SDKs, and third-party tools.
  - Despite Apple's efforts, the results seem similar to 2020.

## Q&A
- **Speaker**: Wang Yu
- **Organization**: Cyberserval

---

This document provides a comprehensive overview of the Apple 802.11 Wi-Fi subsystem, including definitions, conclusions, case studies, and takeaways. It aims to highlight the importance of security in kernel development and vulnerability research.