and all values of birthrates are uniformly observed across the entire
set of events.
Next, we look at the distribution for events that contained large
streams, also depicted in Figure 15(a) and (cid:2)nd that it is also spread
across all birth rates, but with lower birth rate values compared to
all DailyTop40 recurring events. Further, we break the events with
large streams into non-stop (the line at the top) vs. short. We (cid:2)nd
that the birth rate for non-stop events is more concave and much
lower compared to short events. To understand what causes a higher
birth rate for short events, we looked at the frequency with which
short events recur. We (cid:2)nd that short events that occur back-to-
back (almost every day) have much lower birth rates than events
that occur only a few times sparsely spread over the 3-month data
collection period. This indicates that more users are retained when
streaming events occur closer to each other.
Figure 15(b) depicts the birth rate for two recurring events with
large streams, a US-based non-stop radio station and a US-based
short duration event (3-hour talk show). The y-axis is the birth rate,
and each point on the x-axis corresponds to a day. Roughly 10-
30% of users are newly born every day. For the US-based radio
station, a distinct pattern in the birth rate emerges, where the birth
rate alternates between a low value during the weekday (valley), and
a much higher value during the weekend (peak).
However, in terms of the total number of distinct users depicted
in Figure 15(c), there were 2-4 times more users on weekdays than
weekends. How can the birth rate be so much higher? Perhaps
this is because during the weekend, people are tuning in using their
home computers, which have different player IDs than the one on
their computer at work.
In addition, the rate is much higher be-
cause it corresponds to all the new people who tuned in during the
weekday, and are tuning in from home during the weekend.
The birth rate for the short event program is roughly 10%. Note
that there are no weekend/weekday patterns because the content is
only available on weekdays. There are a couple of days with peaks.
This (cid:2)rst one is on Nov 17, which corresponds to a 2-fold increase
in the number of distinct users in Figure 15(c). Another set of peaks
happens around Dec 23-26 (Christmas holiday). Note that in this
case, the number of distinct users is much less than usual. Perhaps
the spike in birth rates are caused by people using their home com-
puters or their relativesâ€™ computers to tune in during the holiday.
8.3 Client Lifetime
Overall, the number of distinct users for the short event remains
approximately constant except for a few days where there are peaks,
and a slight decrease over the holiday season. The number of dis-
tinct users for the non-stop event has weekly trends, but is roughly
constant across all weekdays and constant across all weekends with
some similar seasonal behavior during the holidays. Given that the
birth rate is 10%, this means that the events are losing viewers at
roughly 10% as well.
Next, we ask, who is leaving:
the new-comers, or the old-
timers? To answer this, we look at the lifetime of clients tuning
in to the two events as depicted in Figure 16(a). For both events,
nearly half of all users, which we call one-timers, only stay for one
day. This indicates that most new-comers have short lifetimes and
the system has steady participation because of the old-timers.
To understand the overall role of new-comers and old-timers,
we run an analysis across all recurring events. In our analysis, we
look at the average lifetime of clients for each event, where lifetime
is de(cid:2)ned as the number of days from when the client (cid:2)rst showed
up to when the client was last seen tuning in to the event. The def-
inition is biased towards short lifetimes for people who were born
later in the data set. To account for such biases, we only conduct the
analysis for clients who were born in the (cid:2)rst half of the data set.
Figure 16(b) plots the cumulative distribution of the number of
one-timers for all recurring events. For roughly 90% of the events,
more than 50% of the users are one-timers. The number of one-
timers is surprisingly high. We believe that there are several causes
for this. First, this captures user behavior when users are (cid:147)checking
out(cid:148) the event to see whether or not they like it. If they do not like
it, they never come back. Second, the percentage of one-timers is
correlated with the frequency at which the event recurs. For exam-
ple, we compared a radio station that is recurring on a daily basis to
a sports event that happens twice a month and found that the radio
station has a lower percentage of one-timers.
Next, we look at the average lifetime of clients that are not one-
timers. Figure 16(c) plots the average lifetime of users for each of
the events. The x-axis is the average lifetime in days, and the y-
axis is the event duration in days. Points that fall on the line (
 ) means that all users have an average lifetime that is equal to
the event duration. For many events that recur daily, the average
lifetime of clients can be up to 60 days. Overall, for most events, if
s
r
e
s
U
f
t
o
e
g
a
n
e
c
r
e
P
e
v
i
t
l
a
u
m
u
C
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
0
10
20
30
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
s
t
n
e
v
E
f
t
o
e
g
a
n
e
c
r
e
P
e
v
i
t
l
a
u
m
u
C
90
100
0
0.1
0.2
0.3
Non-stop
Short
80
70
)
s
y
a
D
(
n
o
i
t
a
r
u
D
t
n
e
v
E
100
90
80
70
60
50
40
30
20
10
0
0.8
0.9
1
0
10
20
30
40
50
60
70
(c) Average client lifetime excluding one-timers.
Life Time (Days)
50
40
60
Life Time (Days)
0.5
0.4
0.7
Percentage of One-Timers
0.6
(a) Lifetime for two recurring events.
(b) Percentage of one-timers in each event.
Figure 16: Client lifetime.
a client shows up more than once, it will have an average lifetime
of at least one-third of the days in the event.
8.4 Implications
To summarize, we have shown that for all events the birth rate
for new clients tuning in is roughly 10% or more. Roughly 50% or
more new clients are one-timers. However, the events have steady
membership because there are enough old-timers that have high av-
erage lifetimes. To understand the signi(cid:2)cance of our (cid:2)ndings, we
present two examples of design decisions where our observations
can be applied. First, the presence of one-timers has direct implica-
tions on the scalability of maintaining per-client (cid:147)persistent(cid:148) state at
servers. Such state may be used by the server to customize content
served to clients. To control the amount of overhead in maintaining
state, a caching-based algorithm can be used to rapidly time-out on
the one-timers, which are at least 50% of the client base. A sec-
ond example is that clients can maintain performance history for
the servers that it visits. Given that clients keep accessing the same
event/server repeatedly over many days, history should be useful for
server selection problems.
9. RELATED WORK
Live streaming and MBone workloads
Veloso et al. [23] studied live streaming workloads from a server
located in Brazil. The focus of the analysis was on characterizing ar-
rival processes and session durations for two non-stop video events
to be used in a workload generator. Our (cid:2)ndings for arrival pro-
cesses and session durations from the Akamai workloads are con-
sistent with their (cid:2)ndings. However, to contrast, we have also an-
alyzed several other properties such as the popularity of streams,
the use of transport protocols, the diversity of clients, and the client
lifetime.
The join arrival process and session duration distribution for
multicast groups on the MBone were also analyzed [3]. The key
(cid:2)ndings were that interarrivals follow an exponential distribution,
and durations (cid:2)t a Zipf distribution for non-stop multicast groups.
For a group with short duration (for example, a 1-hour lecture),
the session durations are exponential. While the interarrival (cid:2)nd-
ings are similar to our workload, the session durations are different.
We identi(cid:2)ed that session durations are heavy-tailed irrespective of
whether or not the stream is non-stop vs short duration. However,
the shape of the tail is different (Pareto vs. truncated) for different
stream types.
Location of users
Faloutsos et al. [8] looked at (cid:147)spatial clustering(cid:148) amongst users
in (i) Quake I, a network game, and (ii) MBone multicast groups.
They focused on AS-level clustering inside a group and correlations
amongst groups. They found that for network games, there is lit-
tle clustering. However, there is signi(cid:2)cant clustering for multicast
groups. While we also look at AS-level clustering, we also look at
geographical and time-zone clustering. In addition, the number of
(cid:147)members(cid:148) of streams in our data set is orders of magnitudes larger.
AS clustering amongst clients accessing the same web-site has
also been studied [14]. The key (cid:2)ndings are that cluster sizes are
heavily skewed. There are a few very large clusters, and a number
of small clusters. In contrast to this study, we are also interested in
how these clusters relate to each other in terms of their distance. We
look at whether these clusters span the globe, or are concentrated in
one geographical location.
Web, on-demand streaming, and peer-to-peer workloads
Many studies of Web workloads have found that the popular-
ity of Web objects follows a Zipf distribution [11, 9, 15, 2, 5].
In contrast, we have found that the popularity distribution for live
streaming has two modes where the (cid:2)rst mode (head) is (cid:3)atter than
the second mode (tail). Studies of on-demand streaming work-
loads have also observed a popularity distribution with one [6] or
two modes [1]. Session durations often exhibited heavy-tail behav-
ior, similar to what we have observed for live streaming. In addi-
tion, session interarrivals were found to be approximately exponen-
tial during periods of stationary request arrivals. More recently, a
bimodal popularity distribution was also observed in peer-to-peer
multimedia (cid:2)le-sharing workloads [12].
The join arrival process, session duration distribution, user di-
versity, and new host birth rate was analyzed for End System Multi-
cast (ESM), a peer-to-peer live streaming system with streams that
attract 100-1,000â€™s of users [21]. Overall the ESM and Akamai live
streaming workloads are similar. The join interarrival distribution
is exponential and the session duration distribution is log-normal.
Similar tail behavior for short duration events were also observed.
Despite the small scale deployment, there is a wide diversity in user
population with users from more than 15 countries participating
in any one stream. Finally, new host birth rate for back-to-back
streams was roughly 50% which is high, but slightly lower than the
average birth rate of 64% for Akamai streams.
10. SUMMARY
In this paper, we analyzed 3-months of live streaming work-
loads from a large content distribution network. We take a macro-
scopic approach to identify common trends amongst the various
types of content. Speci(cid:2)cally, from our data set, we found that:
 Most of the live streaming workload today is audio. Only 1%
of the requests are for video streams. And only 7% of streams
are video streams.
 A small number of events, mostly non-stop audio programs
like radio, account for a huge fraction of the requests. The
popularity distribution is Zipf-like with two distinct modes.
 Non-stop streams have strong time-of-day and time zone cor-
related behavior. In addition, a surprisingly large number of
streams exhibit (cid:3)ash crowd behavior. We (cid:2)nd that 50% of all
large streams, non-stop and short duration, have (cid:3)ash crowds.
 Almost half of the AS domains seen in our logs tend to use
TCP as the dominant transport protocol. Such characteristics
could perhaps be caused by the presence of network address
translators (NATs) and (cid:2)rewalls that disallow the use of UDP.
 The diversity of clients accessing live streams on the Internet
is much wider than traditional broadcast media such as radio
and local TV. Almost all large streams reach 13 or more dif-
ferent time zones, 10 or more different countries, and 200 or
more different AS domains. Half of the small streams reach
11 or more different time zones, 10 or more different coun-
tries, and 100 or more different AS domains.
 Client lifetime is bimodal. Half of the new clients who tune
in to a stream will tune in for only one day. For the remaining
half, their average lifetime is at least as long as one-third of
the days in the event.
Our work is a (cid:2)rst step in understanding live streaming work-
loads on the Internet. There are several directions that we wish to
pursue as future work. One important aspect is to study the implica-
tions of the workloads on the system design. A second direction is to
understand how the workloads may change over time and under dif-
ferent operating environments. For example, in a few years, the last-
mile bottleneck to the home may change from cable modem/DSL to
(cid:2)ber. In such conditions, will there be more high-bandwidth video
content? Will bandwidth growth spur the development of new ap-
plications that could dramatically change the use of live streaming
on the Internet? If anyone on the Internet, as opposed to profes-
sional publishers, can publish high-bandwidth content, would there
be orders of magnitude more small-scale groups with more diversity
in the client population?
Acknowledgements
We wish to thank Roberto De Prisco of the University of Salerno
and Akamai Technologies, for assistance with collecting log data
from the Akamai streaming servers. We also thank the anonymous
reviewers for their valuable feedback.
11. REFERENCES
[1] J. M. Almeida, J. Krueger, D. L. Eager, and M. K. Vernon.
Analysis of Educational Media Server Workloads. In
Proceedings of NOSSDAV, June 2001.
[2] V. Almeida, A. Bestavros, M. Crovella, and A. de Oliveira.
Characterizing Reference Locality in the WWW. In
Proceedings of 1996 International Conference on Parallel
and Distributed Information Systems (PDIS â€™96), 1996.
[3] K. C. Almeroth and M. H. Ammar. Collecting and Modeling
the Join/Leave Behavior of Multicast Group Members in the
MBone. In Proceedings of International Symposium on High
Performance Distributed Computing (HPDC), August 1996.
[4] K. Andreev, B. M. Maggs, A. Meyerson, and R. Sitaraman.
Designing Overlay Multicast Networks for Streaming. In
Proceedings of the Fifteenth Annual ACM Symposium on
Parallel Algorithms and Architectures (SPAA), 2003.
[5] L. Breslau, P. Cao, L. Fan, G. Phillips, and S. Shenker. Web
Caching and Zipf-like Distributions: Evidence and
Implications. In Proceedings of the IEEE INFOCOMM â€™99,
March 1999.
[6] M. Chesire, A. Wolman, G. Voelker, and H. Levy.
Measurement and Analysis of a Streaming-Media Workload.
In Proceedings of Usenix Symposium on Internet
Technologies and Systems (USITS), March 2001.
[7] M. Crovella and M. Taqqu. Estimating the Heavy Tail Index
from Scaling Properties. In Methodology and Computing in
Applied Probability, vol. 1, no. 1, 1999.
[8] J. Cui, M. Faloutsos, D. Maggiorini, M. Gerla, and
K. Boussetta. Measuring and Modelling the Group
Membership in the Internet. In Proceedings of Internet
Measurement Conference (IMC), October 2003.
[9] C. Cunha, A. Bestavros, and M. Covella. Characteristics of
WWW Client Based Traces. Technical Report
BU-CS-95-010, Computer Science Department, Boston
University, 1995.
[10] S. Floyd, M. Handley, J. Padhye, and J. Widmer. Multicast
Routing in Internetworks and Extended LANs. In
Proceedings of the ACM SIGCOMM, August 2000.
[11] S. Glassman. A Caching Relay for the World Wide Web. In
Proceedings of the First International Conference on the
World-Wide Web, 1994.
[12] K. Gummadi, R. Dunn, S. Saroiu, S. Gribble, H. Levy, and
J. Zahorjan. Measurement, Modeling, and Analysis of a
Peer-to-Peer File-Sharing Workload. In Proceedings of ACM
SOSP, October 2003.
[13] IxMapper. http://www.ixiacom.com/products.
[14] B. Krishnamurthy and J. Wang. On Network-Aware
Clustering of Web Clients. In Proceedings of ACM
SIGCOMM, September 2000.
[15] T. M. Kroeger, J. C. Mogul, and C. Maltzahn. Digitalâ€™s web
proxy traces. Available at
ftp://ftp.digital.com/pub/DEC/traces/proxy/webtraces.html,
August 1996.
[16] A. Lakhina, J. W. Byers, M. Crovella, and I. Matta. On the
Geographic Location of Internet Resources. In IEEE Journal
on Selected Areas in Communications Vol. 21 No. 6, Aug
2003.
[17] MaxMind GeoIP Free Country Database.
http://www.maxmind.com/app/geoip country.
[18] Microsoft Windows Media Services 9 Series and Windows
Media Services Version 4.1 - Performance Comparison.
http://www.veritest.com/clients/reports/microsoft/ms media services.pdf.
[19] V. N. Padmanabhan, H. J. Wang, P. A. Chou, and
K. Sripanidkulchai. Distributing Streaming Media Content
Using Cooperative Networking. In Proceedings of NOSSDAV,
May 2002.
[20] Route Views Project. http://www.routeviews.org/.
[21] K. Sripanidkulchai. A Measurement-Driven Approach to
Designing Peer-to-Peer Systems. Ph.D. Thesis, Carnegie
Mellon University, 2004.
[22] K. Sripanidkulchai, A. Ganjam, B. Maggs, and H. Zhang.
The Feasibility of Supporting Large-Scale Live Streaming
Applications with Dynamic Application End-Points. In
Proceedings of ACM SIGCOMM, 2004.
[23] E. Veloso, V. Almeida, W. Meira, A. Bestavros, and S. Jin. A
Hierarchical Characterization of a Live Streaming Media
Workload. In Proceedings of Internet Measurement Workshop
(IMW), November 2002.
[24] Y. Wang, M. Claypool, and Z. Zuo. An Empirical Study of
RealVideo Performance Across the Internet. In Proceedings
of Internet Measurement Workshop (IMW), November 2001.