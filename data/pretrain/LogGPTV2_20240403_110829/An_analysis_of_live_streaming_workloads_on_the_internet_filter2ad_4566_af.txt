### Observations on Birth Rates and Client Behavior

#### Uniform Distribution of Birthrates
All values of birthrates are uniformly observed across the entire set of events. 

#### Large Stream Events
When examining the distribution for events that contained large streams, as depicted in Figure 15(a), we find that it is also spread across all birth rates but with lower values compared to all DailyTop40 recurring events. We further break down the events with large streams into non-stop (the line at the top) and short-duration events. The birth rate for non-stop events is more concave and much lower compared to short events.

To understand the higher birth rate for short events, we analyzed the frequency with which short events recur. We found that short events occurring back-to-back (almost every day) have much lower birth rates than events that occur only a few times, sparsely spread over the 3-month data collection period. This indicates that more users are retained when streaming events occur closer together.

#### Case Studies: US-Based Radio Station and Talk Show
Figure 15(b) shows the birth rate for two recurring events with large streams: a US-based non-stop radio station and a US-based short-duration event (a 3-hour talk show). The y-axis represents the birth rate, and each point on the x-axis corresponds to a day. Roughly 10-30% of users are newly born every day.

For the US-based radio station, a distinct pattern in the birth rate emerges, where the birth rate alternates between a low value during the weekday (valley) and a much higher value during the weekend (peak). However, in terms of the total number of distinct users depicted in Figure 15(c), there were 2-4 times more users on weekdays than weekends. This discrepancy can be attributed to people tuning in using their home computers, which have different player IDs than those used at work.

The birth rate for the short event program is roughly 10%. There are no weekend/weekday patterns because the content is only available on weekdays. A couple of days with peaks are observed, such as November 17, which corresponds to a 2-fold increase in the number of distinct users in Figure 15(c). Another set of peaks occurs around December 23-26 (Christmas holiday). During this period, the number of distinct users is much less than usual, possibly due to people using their home or relatives' computers to tune in during the holiday.

### Client Lifetime Analysis

#### Overall Trends
The number of distinct users for the short event remains approximately constant except for a few days with peaks and a slight decrease over the holiday season. For the non-stop event, the number of distinct users has weekly trends but is roughly constant across all weekdays and weekends, with some similar seasonal behavior during the holidays. Given a 10% birth rate, this means that the events are losing viewers at roughly the same rate.

#### Newcomers vs. Old-Timers
We then asked who is leaving: the newcomers or the old-timers? To answer this, we analyzed the lifetime of clients tuning into the two events, as shown in Figure 16(a). For both events, nearly half of all users, whom we call one-timers, only stay for one day. This indicates that most newcomers have short lifetimes, and the system maintains steady participation due to the old-timers.

To understand the overall role of newcomers and old-timers, we conducted an analysis across all recurring events. We looked at the average lifetime of clients for each event, defined as the number of days from when the client first appeared to when they were last seen tuning in to the event. To account for biases, we only included clients who were born in the first half of the data set.

Figure 16(b) plots the cumulative distribution of the number of one-timers for all recurring events. For roughly 90% of the events, more than 50% of the users are one-timers. This high number of one-timers can be attributed to several factors. First, it captures user behavior when users are "checking out" the event to see if they like it. If they do not, they never return. Second, the percentage of one-timers is correlated with the frequency at which the event recurs. For example, a daily recurring radio station has a lower percentage of one-timers compared to a sports event that happens twice a month.

#### Average Lifetime of Non-One-Timers
Figure 16(c) plots the average lifetime of users for each event. The x-axis represents the average lifetime in days, and the y-axis represents the event duration in days. Points that fall on the line \(y = x\) indicate that all users have an average lifetime equal to the event duration. For many events that recur daily, the average lifetime of clients can be up to 60 days. Overall, for most events, if a client shows up more than once, they will have an average lifetime of at least one-third of the days in the event.

### Implications

To summarize, we have shown that for all events, the birth rate for new clients tuning in is roughly 10% or more. Roughly 50% or more of new clients are one-timers. However, the events maintain steady membership because there are enough old-timers with high average lifetimes.

Our findings have direct implications for the scalability of maintaining per-client "persistent" state at servers. Such state may be used by the server to customize content served to clients. To control the overhead in maintaining state, a caching-based algorithm can be used to rapidly time-out on the one-timers, who constitute at least 50% of the client base. Additionally, clients can maintain performance history for the servers they visit, which is useful for server selection problems given that clients repeatedly access the same event/server over many days.

### Related Work

#### Live Streaming and MBone Workloads
Veloso et al. [23] studied live streaming workloads from a server in Brazil, focusing on characterizing arrival processes and session durations for two non-stop video events. Our findings for arrival processes and session durations from the Akamai workloads are consistent with theirs. However, we have also analyzed other properties such as the popularity of streams, the use of transport protocols, the diversity of clients, and the client lifetime.

The join arrival process and session duration distribution for multicast groups on the MBone were also analyzed [3]. Key findings were that interarrivals follow an exponential distribution, and durations fit a Zipf distribution for non-stop multicast groups. For short-duration groups, session durations are exponential. While our interarrival findings are similar, our session durations are heavy-tailed, regardless of whether the stream is non-stop or short-duration.

#### Location of Users
Faloutsos et al. [8] examined "spatial clustering" among users in Quake I, a network game, and MBone multicast groups, focusing on AS-level clustering inside a group and correlations among groups. They found little clustering for network games but significant clustering for multicast groups. We also look at geographical and time-zone clustering, and the number of "members" in our data set is orders of magnitude larger.

AS clustering among clients accessing the same web-site has also been studied [14], with key findings showing heavily skewed cluster sizes. In contrast, we are interested in how these clusters relate to each other in terms of distance and whether they span the globe or are concentrated in one geographical location.

#### Web, On-Demand Streaming, and Peer-to-Peer Workloads
Many studies of Web workloads have found that the popularity of Web objects follows a Zipf distribution [11, 9, 15, 2, 5]. In contrast, we found that the popularity distribution for live streaming has two modes, where the first mode (head) is flatter than the second mode (tail). Studies of on-demand streaming workloads have also observed a popularity distribution with one or two modes [6, 1]. Session durations often exhibit heavy-tail behavior, similar to what we observed for live streaming. More recently, a bimodal popularity distribution was also observed in peer-to-peer multimedia file-sharing workloads [12].

The join arrival process, session duration distribution, user diversity, and new host birth rate were analyzed for End System Multicast (ESM), a peer-to-peer live streaming system with streams attracting 100-1,000s of users [21]. Overall, the ESM and Akamai live streaming workloads are similar, with exponential join interarrival distribution and log-normal session duration distribution. Despite the small-scale deployment, there is a wide diversity in the user population, with users from more than 15 countries participating in any one stream. The new host birth rate for back-to-back streams was roughly 50%, slightly lower than the average birth rate of 64% for Akamai streams.

### Summary

In this paper, we analyzed three months of live streaming workloads from a large content distribution network. We identified common trends among various types of content, finding that:

- Most live streaming workload today is audio, with only 1% of requests for video streams and 7% of streams being video.
- A small number of events, mostly non-stop audio programs like radio, account for a significant fraction of requests. The popularity distribution is Zipf-like with two distinct modes.
- Non-stop streams have strong time-of-day and time zone correlation, and a surprisingly large number of streams exhibit flash crowd behavior.
- Almost half of the AS domains in our logs tend to use TCP as the dominant transport protocol, possibly due to the presence of NATs and firewalls that disallow UDP.
- The diversity of clients accessing live streams on the Internet is much wider than traditional broadcast media, reaching 13 or more different time zones, 10 or more different countries, and 200 or more different AS domains for large streams.
- Client lifetime is bimodal, with half of the new clients tuning in for only one day and the remaining half having an average lifetime of at least one-third of the days in the event.

Our work is a first step in understanding live streaming workloads on the Internet. Future directions include studying the implications of these workloads on system design and understanding how workloads may change over time and under different operating environments.