::: {#mask}
:::
::: wrapper
::: {#header-desktop .desktop}
::: header-wrapper
::: header-title
[KQL Query](/ "Kusto Query Language | KQLQuery.com")
:::
::: menu
::: menu-inner
[Posts](/posts/){.menu-item} [Categories](/categories/){.menu-item}
[whoami](/whoami){.menu-item} [Projects](/projects){.menu-item} [KQL
News](https://kustoinsights.substack.com/){.menu-item
rel="noopener noreffer" target="_blank"}
[](https://github.com/bert-janp "GitHub"){.menu-item
rel="noopener noreffer" target="_blank"}
[](https://twitter.com/BertJanCyber "Twitter"){.menu-item
rel="noopener noreffer" target="_blank"}
[](https://linkedin.com/in/bert-janpals "LinkedIn"){.menu-item
rel="noopener noreffer" target="_blank"} []{.menu-item .delimiter}[
[](javascript:void(0); "Search"){#search-toggle-desktop .search-button
.search-toggle} [](javascript:void(0); "Clear"){#search-clear-desktop
.search-button .search-clear} []{#search-loading-desktop .search-button
.search-loading} ]{#search-desktop .menu-item
.search}[](javascript:void(0); "Switch Theme"){.menu-item .theme-switch}
:::
:::
:::
:::
::: {#header-mobile .mobile}
::: header-container
::: header-wrapper
::: header-title
[KQL Query](/ "Kusto Query Language | KQLQuery.com")
:::
::: {#menu-toggle-mobile .menu-toggle}
:::
:::
::: {#menu-mobile .menu}
::: search-wrapper
::: {#search-mobile .search .mobile}
[](javascript:void(0); "Search"){#search-toggle-mobile .search-button
.search-toggle} [](javascript:void(0); "Clear"){#search-clear-mobile
.search-button .search-clear} []{#search-loading-mobile .search-button
.search-loading}
:::
[Cancel](javascript:void(0);){#search-cancel-mobile .search-cancel}
:::
[Posts](/posts/){.menu-item}[Categories](/categories/){.menu-item}[whoami](/whoami){.menu-item}[Projects](/projects){.menu-item}[KQL
News](https://kustoinsights.substack.com/){.menu-item
rel="noopener noreffer"
target="_blank"}[](https://github.com/bert-janp "GitHub"){.menu-item
rel="noopener noreffer"
target="_blank"}[](https://twitter.com/BertJanCyber "Twitter"){.menu-item
rel="noopener noreffer"
target="_blank"}[](https://linkedin.com/in/bert-janpals "LinkedIn"){.menu-item
rel="noopener noreffer" target="_blank"}
[](javascript:void(0); "Switch Theme"){.menu-item .theme-switch}
:::
:::
:::
::: {.search-dropdown .desktop}
::: {#search-dropdown-desktop}
:::
:::
::: {.search-dropdown .mobile}
::: {#search-dropdown-mobile}
:::
:::
::: {.main role="main"}
::: container
# Prioritize Vulnerabilities Using The CISA Known Exploited Vulnerabilities Catalog {#prioritize-vulnerabilities-using-the-cisa-known-exploited-vulnerabilities-catalog .single-title .animate__animated .animate__flipInX}
::: post-meta
::: post-meta-line
[[Bert-Jan Pals](/ "Author"){.author
rel="author"}]{.post-author} [included in
[KQL](/categories/kql/) [Vulnerability
Management](/categories/vulnerability-management/) [Defender For
Ednpoint](/categories/defender-for-ednpoint/)]{.post-category}
:::
::: post-meta-line
 2023-12-21  1007 words   5 minutes 
:::
:::
::: {#content .content}
Due to the sheer amount of vulnerabilities that are being discovered
daily, it is difficult to prioritize. This blog will explore the
potential of the CISA Known Exploited Vulnerabilities Catalog to help
you patch the most needed assets. This is done by discussing KQL queries
that can help to find the vulnerabilities that apply to your
organisation and find the assets that need to be patched with priority.
> **What is the CISA Known Exploited Vulnerabilities Catalog?** "The
> Known Exploited Vulnerabilities Catalog is developed for the benefit
> of the cybersecurity community and network defenders---and to help
> every organization better manage vulnerabilities and keep pace with
> threat activity---CISA maintains the authoritative source of
> vulnerabilities that have been exploited in the wild: the Known
> Exploited Vulnerability (KEV) catalog. CISA strongly recommends all
> organizations review and monitor the KEV catalog and prioritize
> remediation of the listed vulnerabilities to reduce the likelihood of
> compromise by known threat actors" - *Source: [Cyber Security and
> Infrastructure Security
> Agency](https://www.cisa.gov/known-exploited-vulnerabilities){target="_blank"
> rel="noopener noreffer"}*
![/images/cisa-vulnerabilities/ninjacat.jpeg](/svg/loading.min.svg "Alt text"){.lazyload
data-src="/images/cisa-vulnerabilities/ninjacat.jpeg"
data-srcset="/images/cisa-vulnerabilities/ninjacat.jpeg, /images/cisa-vulnerabilities/ninjacat.jpeg 1.5x, /images/cisa-vulnerabilities/ninjacat.jpeg 2x"
data-sizes="auto"}
# Catalog Content
The catalog contains vulnerabilities that are known to be exploited by
threat actors, at the moment of writing 1050 vulnerabilities have been
added to the list. If we zoom in on one of those vulnerabilities
(CVE-2023-36584) we can identify different fields that address the
information.
-   **cveID:** Lists the cveID of the vulnerability.
-   **vendorProject:** Lists the name of the product vendor.
-   **vulnerabilityName:** Lists the name of the vulnerability.
-   **dateAdded:** Lists when the vulnerability has been added to the
    CISA Known Exploited Vulnerabilities Catalog.
-   **requiredAction:** Lists the actions that are required when this
    vulnerability is found in your environment\*.
-   **dueDate:** Lists when the *requiredAction* must be completed\*.
-   **knownRansomwareCampaignUse:** Lists information about ongoing
    exploits of this vulnerability in ransomware campaigns.
-   **notes:** Lists additional notes and remote sources.
::: highlight
``` {tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"}
{
    "cveID": "CVE-2023-36584",
    "vendorProject": "Microsoft",
    "product": "Windows",
    "vulnerabilityName": "Microsoft Windows Mark of the Web (MOTW) Security Feature Bypass Vulnerability",
    "dateAdded": "2023-11-16",
    "shortDescription": "Microsoft Windows Mark of the Web (MOTW) contains a security feature bypass vulnerability resulting in a limited loss of integrity and availability of security features.",
    "requiredAction": "Apply mitigations per vendor instructions or discontinue use of the product if mitigations are unavailable.",
    "dueDate": "2023-12-07",
    "knownRansomwareCampaignUse": "Unknown",
    "notes": "https:\/\/msrc.microsoft.com\/update-guide\/vulnerability\/CVE-2023-36584"
}
```
:::
(\*) Federal civilian executive branch (FCEB) agencies need to complete
the *requiredAction* before the *dueDate*, this is because they are
bound to [BOD
22-01](https://www.cisa.gov/news-events/directives/bod-22-01-reducing-significant-risk-known-exploited-vulnerabilities){target="_blank"
rel="noopener noreffer"}. Even though other organisations are not bound
to BOD 22-01 is it highly recommended to perform the *requiredAction* as
soon as possible.
# Monitor CISA Known Exploited Vulnerabilities Catalog
CISA offers three different solutions to monitor the vulnerabilities:
1.  [WebPage](https://www.cisa.gov/known-exploited-vulnerabilities-catalog){target="_blank"
    rel="noopener noreffer"}
2.  [CSV](https://www.cisa.gov/sites/default/files/csv/known_exploited_vulnerabilities.csv){target="_blank"
    rel="noopener noreffer"}
3.  [JSON](https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json){target="_blank"
    rel="noopener noreffer"}
It is recommended to dynamically ingest and alert new active
vulnerabilities in your environment. Ingesting these Known Exploited
vulnerabilities would be a valuable source for your SIEM/VM/XDR
solution. Ingesting this as a feed would allow you to take a proactive
approach to the vulnerabilities.
## CISAPy
[CISAPy](https://github.com/Bert-JanP/SecScripts/tree/main/CISAPy){target="_blank"
rel="noopener noreffer"} is a small Python command line tool that lets
you interact with the CISA Known Exploited Vulnerabilities Catalog. This
can help you dynamically monitor the entries of the catalog. This tool
can help you to get filtered exports of the relevant vulnerabilities.
CISAPy offers the following functionalities:
1.  Listing (filtered) vulnerabilities
2.  Exporting (filtered) vulnerabilities
3.  Provide statistics on when the vulnerabilities have been added to
    the list.
# CISA Known Exploited Vulnerabilities Catalog & KQL {#cisa-known-exploited-vulnerabilities-catalog--kql}
The vulnerabilities can be dynamically loaded in a KQL query using the
[externaldata()](https://learn.microsoft.com/en-us/azure/data-explorer/kusto/query/externaldata-operator?pivots=azuredataexplorer){target="_blank"
rel="noopener noreffer"} operator, this can be done both with CSV or
JSON input. Listing the vulnerabilities can be done in any place where
you execute KQL, such as Log Analytics, Sentinel, Advanded Hunting or
Azure Data Explorer as seen below.
![ListCISAExploitedVulnerabilites()](/svg/loading.min.svg){.lazyload
data-src="/images/cisa-vulnerabilities/ListVulnsFunction.png"
data-srcset="/images/cisa-vulnerabilities/ListVulnsFunction.png, /images/cisa-vulnerabilities/ListVulnsFunction.png 1.5x, /images/cisa-vulnerabilities/ListVulnsFunction.png 2x"
data-sizes="auto"}
> **KQL Query Link**
> [ListCISAExploitedVulnerabilites()](https://github.com/Bert-JanP/Hunting-Queries-Detection-Rules/blob/main/Functions/ListCISAExploitedVulnerabilites.md){target="_blank"
> rel="noopener noreffer"}
## Alert on New Active Vulnerabilities
You want to be proactively informed when a new vulnerability is added to
the catalog, this can be done using KQL. It is important to note that
not all vulnerabilities might be relevant for your organisation, this
could be because you do not use a certain product or vendor. However, it
could also be the other way around, that you do use the product, but it
is not MDE onboarded, resulting in a lack of visibility. Be aware that
it is not a silver bullet!
The query combines the external CSV with the
*DeviceTvmSoftwareVulnerabilities* table, this table contains all the
active vulnerabilities on your onboarded assets. The *NewThreshold* is
used to determine how *new* is defined, in this case, new is if a
vulnerability has been added within the last day. The last part of the
detection joins the *DeviceProcessEvents*, you might think heh? why is
that? Good question! This is only to ensure that the required fields
that are needed are included in the KQL query to be able to create a
custom detection. If you use Sentinel that section is not needed.
![Detect New Active Entries in Advanced
Hunting](/svg/loading.min.svg){.lazyload
data-src="/images/cisa-vulnerabilities/AlertOnNewVulnerabilities.png"
data-srcset="/images/cisa-vulnerabilities/AlertOnNewVulnerabilities.png, /images/cisa-vulnerabilities/AlertOnNewVulnerabilities.png 1.5x, /images/cisa-vulnerabilities/AlertOnNewVulnerabilities.png 2x"
data-sizes="auto"}
> **KQL Query Link** [New Active CISA Know Exploited Vulnerability
> Detected](https://github.com/Bert-JanP/Hunting-Queries-Detection-Rules/blob/main/Vulnerability%20Management/NewActiveCISAKnownExploitedVulnerabilityDetected.md){target="_blank"
> rel="noopener noreffer"}
::: {.details .admonition .note .open}
::: {.details-summary .admonition-title}
Prioritize Vulnerabilities using KQL
:::
::: details-content
::: admonition-content
The KQL GitHub repository has a lot more to offer than mentioned in this
blog. The [Vulnerability
Management](https://github.com/Bert-JanP/Hunting-Queries-Detection-Rules/tree/main/Vulnerability%20Management){target="_blank"
rel="noopener noreffer"} section provides more than 30 KQL queries to
identify, list and prioritize vulnerabilities in your environment!
:::
:::
:::
## Passed Due Date
Yes, not all organisations need to comply with the dueDate as mentioned
by CISA, but the dueDate is good advice. The likelihood of exploitation
of any of the included vulnerabilities in the catalog is high. To ensure
that direction/priority can be given based on the dueDate the query as
seen below is developed. This query calculates the time between the
query execution and the dueDate and puts that in the
*DueDateExceededByDays* column.
  DueDateExceededByDays   Meaning
  ----------------------- ---------------------------------------
  Positive                The dueDate has passed by n days.
  Negative                It takes n days before it is dueDate.
  zero                    It is dueDate
The image below shows some examples of a vulnerable machine. The
*DueDateExceededByDays* and *TotalVulnerableDevices* can be used to
prioritize, while the other fields provide the information needed to
patch the systems.
![Due Date Passed Exploited
Vulnerabilities](/svg/loading.min.svg){.lazyload
data-src="/images/cisa-vulnerabilities/DueDatePassed.png"
data-srcset="/images/cisa-vulnerabilities/DueDatePassed.png, /images/cisa-vulnerabilities/DueDatePassed.png 1.5x, /images/cisa-vulnerabilities/DueDatePassed.png 2x"
data-sizes="auto"}
> **KQL Query Link** [DueDate Passed CISA Known Exploited
> Vulnerabilities](https://github.com/Bert-JanP/Hunting-Queries-Detection-Rules/blob/main/Vulnerability%20Management/DueDatePassedCISAKnownExploitedVulnerability.md){target="_blank"
> rel="noopener noreffer"}
::: {.details .admonition .note .open}
::: {.details-summary .admonition-title}
Related Blogs
:::
::: details-content
::: admonition-content
-   [KQL Functions For Security
    Operations](https://kqlquery.com/posts/kql-for-security-operations/){target="_blank"
    rel="noopener noreffer"}
-   [KQL Functions For Network
    Operations](https://kqlquery.com/posts/kql-for-network-operations/){target="_blank"
    rel="noopener noreffer"}
:::
:::
:::
> **Questions?** Feel free to reach out to me on any of my socials.
:::
::: {#post-footer .post-footer}
::: post-info
::: post-info-line
::: post-info-mod
Updated on 2023-12-21
:::
:::
::: post-info-line
::: post-info-md
:::
::: post-info-share
[](javascript:void(0); "Share on Twitter"){sharer="twitter"
url="https://kqlquery.com/posts/prioritize-vulnerabilities-cisa/"
data-title="Prioritize Vulnerabilities Using The CISA Known Exploited Vulnerabilities Catalog"
via="BertJanCyber"
hashtags="KQL"}[](javascript:void(0); "Share on Facebook"){sharer="facebook"
url="https://kqlquery.com/posts/prioritize-vulnerabilities-cisa/"
hashtag="KQL"}[](javascript:void(0); "Share on Linkedin"){sharer="linkedin"
url="https://kqlquery.com/posts/prioritize-vulnerabilities-cisa/"}[](javascript:void(0); "Share on Reddit"){sharer="reddit"
url="https://kqlquery.com/posts/prioritize-vulnerabilities-cisa/"}
:::
:::
:::
::: post-info-more
::: {.section .post-tags}
 [KQL](/tags/kql/)
:::
::: section
[Back](javascript:void(0);){onclick="window.history.back()"} \| [Home](/)
:::
:::
::: post-nav
[From Threat Report to (KQL) Hunting
Query](/posts/from-threat-report-to-hunting-query/ "From Threat Report to (KQL) Hunting Query"){.prev
rel="prev"} [KQL Security Sources - 2024
Update](/posts/kql-sources-2024-update/ "KQL Security Sources - 2024 Update"){.next
rel="next"}
:::
:::
:::
:::
::: footer-container
::: {.footer-line itemscope="" itemtype="http://schema.org/CreativeWork"}
[2023 - 2024]{itemprop="copyrightYear"}[ [Bert-Jan
Pals](/){target="_blank"}]{.author
itemprop="copyrightHolder"} \| [©]{.license}
:::
:::
:::
::: {#fixed-buttons}
[](# "Back to Top"){#back-to-top .fixed-button}
[](# "View Comments"){#view-comments .fixed-button}
:::