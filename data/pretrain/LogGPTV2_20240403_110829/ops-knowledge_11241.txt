User: 请解答这个和日志有关的问题Does it improve security to use obscure port numbers? I recently started a job at a small company where the CTO prefers to host SSH services at obscure, high numbered ports on our servers rather than the well known port 22. His rationale is that "it prevents 99% of script kiddy attacks." I'm curious whether this is considered bad practice.

Intuitively this seems sensible. But we are both largely self taught, and I am uncomfortable with the idea of improvising our own security procedures rather than following well established convention. I know that in general cryptographic schemes and protocols are painstakingly designed by teams of experts, and that every detail is intended to protect against some kind of attack, no matter how insignificant it might seem. I worry about the unintended consequences of deviating from these recommendations.

But my colleague seems to have evidence on his side. He was able to demonstrate that we do get dozens of attacks every day that try port 22 and just move on. I know that generally we should avoid security through obscurity, but moving away from this common target really does seem to thwart most attacks.

Is this good practice or not? Should we use well known ports?

ADDENDUM

We do not rely only on the obscure port. We have many other security measures in place, including mandatory hardware keys. I will restate my question more clearly.

Is there any reason why port 22 in particular was chosen for SSH? Is there anything dangerous about using other ports?

Assistant: Does it improve security to use obscure port numbers?


If you're already using high entropy passwords or public key authentication, the answer is "not really".  Mostly you're just getting rid of noise in logs.  


  I worry about the unintended consequences of deviating from these recommendations.


It depends on what port was picked.  In Linux, by default all ports below 1024 require root access to listen on them.  If you're using a port above 1024, any user account can listen on it if there's not already a process listening.

Why does this matter?  Let's say you chose to set ssh to bind to port 20,000. If someone could stop the SSH process on a server (let's say they somehow found a way to crash the process), and had local access to that server, they could then run their own SSH server on port 20,000 before the service restarted.  Anyone logging in would then be logging in to the bad guys SSH server.

This isn't as big a deal as it used to be, since these days it's only trusted IT staff that are given login access to servers.  But still, it does have the potential for privilege escalation and other nastiness if an attacker gets a foothold on your server.

Other than being below 1024, there's nothing special about the number 22.  Largely it was chosen because SSH was a replacement for telnet at port 23, and 21 was already taken by FTP.  As long as you pick a port below 1024, the port doesn't really matter.


  Is this good practice or not? Should we use well known ports?


I wouldn't say I recommend it.  I also wouldn't advise against it.  As I said, it avoids a lot of noise in log files, but the benefits are largely limited to that.  

For anyone interested in the background story on SSH, you can find it at: https://www.ssh.com/ssh/port