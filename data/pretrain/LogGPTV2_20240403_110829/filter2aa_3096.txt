Ken Lee @echain
A Brain-Friendly Guide
Head First CVE
+ Who is Ken?
* Former Product Developer
* Chief Security Officer (WIP)
* Head of Synology SIRT
https://www.synology.com/security
+ 2013 The Phantom Menace
* Started working in 2013/01
* No developer to respond to vulnerabilities
* Lacked a sense of cybersecurity
* High-profile CVEs were notified by customers
+ 2014 Revenge of the Sith
* Severely affected by you-know-who
* Built a working group for cybersecurity
* Built private Bounty Program
* Deployed security mitigations to DSM 5
+ 2016 The Empire Strikes Back
* Built Vulnerability Response Program 
* Built invitation-only Bounty Program
* Reported critical flaws of Photo Station 
* Disclosed vulnerabilities w/o confirmation
+ 2017 Return of the Jedi
* Authorized as the CNA
* Built Incident Response Program 
* Announced Security Bug Bounty Program
* Built Product Security Assurance Program 
+ Agenda
* 00 | Common Vulnerabilities and Exposures
* 01 | CVE Numbering Authority
* 10 | Phrasing and Counting Rules
* 11 | Tool for dummies
https://cve.mitre.org/news/archives/2019/news.html
https://cve.mitre.org/cve/cna/rules.html
https://cve.mitre.org/cve/cna/rules.html
[CWE] in [CPE] allows
[ATTACKER] to have IMPACT
via [CAPEC].
+ MITRE’s Template
* [VULNTYPE] in [COMPONENT] in [VENDOR]
* [PRODUCT] [VERSION] allows [ATTACKER]
* to [IMPACT] via [VECTOR].
* [COMPONENT] in [VENDOR] [PRODUCT]
* [VERSION] [ROOT CAUSE], which allows
* [ATTACKER] to [IMPACT] via [VECTOR].
https://cveproject.github.io/docs/content/key-details-phrasing.pdf
+ Version
* List vulnerable version
* - 1.2.3
* - 1.2.3, 2.3.1, and 3.1.2 
+ Version
* List vulnerable version
* Earlier versions are affected 
* - 1.2.3 and earlier 
* - 1.2.3, 2.3.1, 3.1.2, and earlier 
+ Version
* List vulnerable version
* Earlier versions are affected 
* Fixed or updated version
* - before 1.2.3
* - before 1.2.3, 2.x before 2.3.1, and 3.x before 3.1.2 
+ Version
* List vulnerable version
* Earlier versions are affected 
* Fixed or updated version
* Vulnerable range
* - 1.2.1 through 1.2.3
* - 1.2.1 through 1.2.3 and 2.0.1 through 2.3.1
https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
+ Attacker
* Remote attackers
* Remote authenticated users
* Local users
* Physically proximate attackers
* Man-in-the-middle attackers
* - AV:N
* - AC:L
* - PR:N
+ Attacker
* Remote attackers
* Remote authenticated users
* Local users
* Physically proximate attackers
* Man-in-the-middle attackers
* - AV:N
* - AC:L
* - PR:L
+ Attacker
* Remote attackers
* Remote authenticated users
* Local users
* Physically proximate attackers
* Man-in-the-middle attackers
* - AV:L
* - AC:L
* - PR:L
+ Attacker
* Remote attackers
* Remote authenticated users
* Local users
* Physically proximate attackers
* Man-in-the-middle attackers
* - AV:P
* - AC:L
* - PR:N
+ Attacker
* Remote attackers
* Remote authenticated users
* Local users
* Physically proximate attackers
* Man-in-the-middle attackers
* - AV:N
* - AC:H
* - PR:N
+ Attacker
* Remote [TYPE] servers
* Guest OS users
* Guest OS administrators
* Context-dependent attackers
* [EXTENT] user-assisted [ATTACKER]
* Attackers
https://devco.re/blog/2019/11/11/HiNet-GPON-Modem-RCE/
+ CVE-2019-13411 (TWCERT/CC)
An “invalid command” handler issue was discovered
in HiNet GPON firmware < I040GWR190731.
It allows an attacker to execute arbitrary command
through port 3097. CVSS 3.0 Base score 10.0.
CVSS vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H).
[VULNTYPE] in [COMPONENT] in
[VENDOR] [PRODUCT] [VERSION] allows
[ATTACKER] to [IMPACT] via [VECTOR].
+ CVE-2019-13411 (Revised)
OS command injection vulnerability in omcimain
in HiNet GPON firmware before I040GWR190731
allows remote attackers to execute arbitrary
command via port 3097.
+ Cross-site Scripting (1-1)
Cross-site scripting (XSS) vulnerability in
[COMPONENT] in [VENDOR] [PRODUCT] [VERSION]
allows remote attackers to inject arbitrary web script
or HTML via the [PARAM] parameter. 
+ Cross-site Scripting (1-N)
Multiple cross-site scripting (XSS) vulnerabilities in
[VENDOR] [PRODUCT] [VERSION] allow remote attackers
to inject arbitrary web script or HTML via
the [PARAM] parameter to (1) [COMPONENT1],
(2) [COMPONENT2], ..., or (n) [COMPONENTn].
+ Cross-site Scripting (N-1)
Multiple cross-site scripting (XSS) vulnerabilities in
[COMPONENT] in [VENDOR] [PRODUCT] [VERSION] allow
remote attackers to inject arbitrary web script or HTML
via the [PARAM1], (2) [PARAM2], ..., or (n) [PARAMn] parameter. 
+ Cross-site Scripting (N-N)
Multiple cross-site scripting (XSS) vulnerabilities in
the (1) [PARAM1] or (2) [PARAM2] parameter to [COMPONENT1];
the (3) [PARAM3] parameter to [COMPONENT2]; ...; 
or (n) [PARAMn] parameter to [COMPONENTm].
[VENDOR] [PRODUCT] [VERSION] allow remote attackers
to inject arbitrary web script or HTML via
+ SQL Injection (1-1)
SQL injection vulnerability in [COMPONENT] in
[VENDOR] [PRODUCT] [VERSION] allows
[ATTACKER] to execute arbitrary SQL commands
via the [PARAM] parameter. 
+ SQL Injection (1-N)
Multiple SQL injection vulnerabilities in
[VENDOR] [PRODUCT] [VERSION] allow [ATTACKER]
to execute arbitrary SQL commands via
the [PARAM] parameter to (1) [COMPONENT1],
(2) [COMPONENT2], ..., or (n) [COMPONENTn].
+ SQL Injection (N-1)
Multiple SQL injection vulnerabilities in
[COMPONENT] in [VENDOR] [PRODUCT] [VERSION] allow
[ATTACKER] to execute arbitrary SQL commands via
the (1) [PARAM1], (2) [PARAM2], ..., or (n) [PARAMn] parameter. 
+ SQL Injection (N-N)
Multiple SQL injection vulnerabilities in
to execute arbitrary SQL commands via
the (1) [PARAM1] or (2) [PARAM2] parameter to [COMPONENT1];
(n) [PARAMn] parameter to [COMPONENTm].
[VENDOR] [PRODUCT] [VERSION] allow [ATTACKER]
the (3) [PARAM3] parameter to [COMPONENT2]; ...; 
+ Counting Decisions
* CNT1 | Independently Fixable
* CNT2 | Vulnerability
* - CNT2.1 | Vendor Acknowledgment
* - CNT2.2A | Claim-Based
* - CNT2.2B | Security Model-Based
+ Counting Decisions
* CNT3
* - Shared Codebase
* - Libraries, Protocols, or Standards
+ Inclusion Decisions
* INC1 | In Scope of Authority
* INC2 | Intended to be Public
* INC3 | Installable / Customer-Controlled Software
* INC4 | Generally Available and Licensed Product
* INC5 | Duplicate
+ Edge Cases
* MD5 / SHA-1
* Default Credentials
* Cloudbleed
* End-of-life products
+ Edge Cases
* MD5 / SHA-1
* Default Credentials
* Cloudbleed
* End-of-life products
+ Edge Cases
* Default Credentials
* Cloudbleed
* End-of-life products
* MD5 / SHA-1
+ Edge Cases
* Default Credentials
* Cloudbleed
* End-of-life products
* MD5 / SHA-1
+ Update CVE Entries
* Reject
* - Not a vulnerability (fails CNT2)
* - Not to make the vulnerability public (fails INC2)
* - Not customer controlled (fails INC3)
* - Not generally available (fails INC4)
+ Update CVE Entries
* Reject
* Merge
* - Not independently fixable (fails CNT1)
* - Result of shared codebase, library, etc. (fails CNT3)
* - Duplicate assignment (fails INC5)
+ Update CVE Entries
* Reject
* Merge
* Split
* - Contains interpedently fixable bugs (passes CNT1)
* - Not share a codebase (fails CNT3)
* - To be implementation specific (fails CNT3)
+ Update CVE Entries
* Reject
* Merge
* Split
* Dispute
* - Validity of the vulnerability is questioned
+ Update CVE Entries
* Reject
* Merge
* Split
* Dispute
* Partial Duplicate
+ Catch 'Em All
* How CVE and CNA works
+ Catch 'Em All
* How CVE and CNA works
* Why Synology want to be a CNA
* - Expertise around products within our scope 
* - Control the disclosure policy and procedure
+ Catch 'Em All
* How CVE and CNA works
* Why Synology want to be a CNA
* How to write CVE descriptions
* - CWE / CPE
* - Version
* - Attacker
+ Catch 'Em All
* How CVE and CNA works
* Why Synology want to be a CNA
* How to write CVE descriptions
* CVE counting rules
* - Counting decisions
* - Inclusion decisions