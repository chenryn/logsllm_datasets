# 4.6 VTrace Parameters and Usage Statistics

- **Figure 9:** Distribution of VTrace parameters used by users.
- **Figure 10:** Statistics on VTrace usage and diagnosis results.

## 4.6.1 Multi-Tenancy and VTrace

The multi-tenancy nature of cloud environments requires operations engineers to diagnose faults based on detailed network symptoms, often without the aid of VTrace. For example, when multiple tenants report fault diagnosis requests, the virtual network team typically suspects a Virtual Forwarding Device (VFD) issue. Operations engineers then check the corresponding network configurations and identify the potential problematic device among the common VFDs serving all these tenants, which can reduce the debugging effort. In such cases, VTrace provides the convenience and efficiency of automated diagnostics compared to manual methods.

However, for non-VFD faults, even after extensive efforts in examining packet drop counters of all possible VFDs, operations engineers may not find any anomalies. Additionally, restart or reconfiguration actions by the cloud provider cannot resolve the problem since no changes are made to tenant-related configurations. This makes troubleshooting such issues challenging. After ruling out VFDs, the tenant is informed: "The cloud network is OK. Please check your own network configuration." This response may be unsatisfactory. With VTrace, the feedback becomes more specific: "The problem may be with your bandwidth settings," which is more useful to tenants.

## 5.3 Experience from VTrace Usage

VTrace has been deployed and utilized by cloud operations engineers to complete over 10,000 tasks. Here, we summarize our experience using VTrace in our production cloud network over approximately 12 months.

### 5.3.1 Choices for VTrace Parameters

For each task, operations engineers assign values to `packet_count` and `trace_time` based on their expertise. The distribution of these parameters in production is shown in Figure 9. We find that VTrace tasks with `packet_count` between 10 and 30 account for about 87.4%, indicating that tens of packets are usually sufficient for debugging persistent packet loss issues. Additionally, approximately 54.1% and 32.8% of `trace_time` parameters are set to 10 to 40 seconds and 500 to 600 seconds, respectively, with longer times typically assigned to smaller flows.

### 5.3.2 VTrace Usage and Diagnosis Results

After data collection, the number of VTrace calls per week is presented in Figure 10, along with the diagnosis results (i.e., VTrace showing packet loss). From the figure, we observe that packet loss issues are not common, and in most cases, VTrace indicates that the overlay network is normal. Interestingly, there is a surge in VTrace tasks and packet loss problems during certain periods, particularly from early September to the end of December, coinciding with online shopping events. These events place severe demands on tenants' ability to handle increased business, leading to expanded cloud resources and pressure tests, which in turn increase the number of VTrace tasks and packet loss issues.

### 5.3.3 Root Causes of Packet Loss

While VFD faults are rare due to thorough software testing before deployment, non-VFD faults are more common. We collected root causes for non-VFD faults and classified them into five types, as shown in Table 4. Packet losses on vSwitches account for the majority (66.2%), with tenant security policies blocking being the most common cause (52.4%). For vRouters, the most common error is tenant configuration (18.5%). The first four types of causes in Table 4 are all related to tenant operations. There are also unknown causes (1.5%) for packet losses on vRouters, indicating the need for better debug probes in vRouters.

## 6 Discussion

### 6.1 Can VTrace Troubleshoot Physical Network Packet Drops?

In the overlay network, packets travel between VFDs via the physical network, which is invisible in the overlay. VTrace can currently locate faulty nodes in the physical network segment responsible for packet transmission between servers where two VFDs reside. To pinpoint the exact culprit node and extract the root cause, VTrace can configure Physical Forwarding Devices (PFDs) to send a post-card containing minimal information to a dedicated server upon encountering packet drops, similar to INT [11].

### 6.2 Diagnosing Transient Packet Drops

Transient packet drops, causing temporary network unavailability, are a significant concern for cloud providers. Since these issues are unpredictable, VTrace would need to run on all possible VFDs for an extended period (e.g., an hour) to catch momentary packet loss. Although VTrace is lightweight, the long-term impact in a high-throughput environment is unaffordable. The "coloring and matching" idea, as shown in Figure 11, can help. Source VFDs "color" target packets, and all VFDs along the flow paths count the "colored" inlet and outlet packets. This function, named VTrace-stats, is simple to implement and has a minimal impact on forwarding performance, as demonstrated in our test environment and pilot deployments.

## 7 Related Work

### 7.1 Active Network Monitoring Methods

Active probing methods, such as Pingmesh, ATPG, and Cisco IPSLA, inject and trace test probes to measure connectivity. These methods can easily get latency data and pinpoint culprit nodes but may not reflect on-site forwarding conditions accurately for VTrace.

### 7.2 Passive Network Monitoring Methods

Passive solutions like VeriFlow, Simon, and CherryPick measure quality-of-experience without injecting probes. While these methods are less intrusive, they do not provide the detailed packet-level information needed for VTrace.

## 8 Conclusion

VTrace is an automatic diagnostic system for persistent packet loss in cloud-scale overlay networks. It enables efficient diagnosis by installing "coloring, matching, and logging" rules in VFDs and inspecting a small number of target packets. VTrace has been deployed in Alibaba Cloud for over 20 months, demonstrating its ability to diagnose problems in minutes and becoming an indispensable tool for cloud-scale overlay network troubleshooting.

## Acknowledgments

We thank T. S. Eugene Ng and SIGCOMM reviewers for their feedback. This work was supported by the National Key Research and Development Program, the National Natural Science Foundation of China, Alibaba Group through the Alibaba Innovative Research Program, and the Alibaba-Zhejiang University Joint Research Institute of Frontier Technologies.

## References

[References listed as provided, with proper formatting and citations.]