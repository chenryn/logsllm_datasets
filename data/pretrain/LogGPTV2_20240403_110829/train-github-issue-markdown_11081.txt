## Scenario
`Deno.test()` has basically two forms currently (`1.9.0`):
  1. `Deno.test(, )` and
  2. `Deno.test()`
Personally, I tend to write all my tests on the first form for it is generally
simpler to read and write.  
This leaves the second form to be used only when strictly necessary (i.e to
use some of the available options).
## Issue
While writing my long list of tests I often feel the need to run _only_ the
test being currently worked on, to have a cleaner output and lower wait time.
In order to quickly mark any tests as `only` or `ignore` I have to refactor
the function considerably in order to add an options object, which will just
be removed after the test code is finished.
I suggest reading this discussion where the issue has been pointed out before.
## Suggestion
Among the existing suggestions, I'll just add two more.
    Deno.test('foobar is bahbaz', function(){
        i.like.to('move it move it');
    }, 'only') // I know...
Or even accept the options as the last argument too. (easier to add and
remove)
    Deno.test('foobar is bahbaz', function(){
        i.like.to('move it move it');
    }, { only: true });