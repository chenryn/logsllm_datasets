Fueled by the success of React, several alternative virtual DOM
implementations have emerged, such as Riot, Mithril, Mercury, and virtual-dom.
Atom recently integrated Babel into core, and one of our major goals with core
is to be as framework-agnostic as possible. One area where it would be nice to
be agnostic is in the usage of JSX... it would be great if any of these
frameworks could create JSX adaptors so the same convenient syntax could be
used with a variety of underlying implementations.
Currently, JSX expressions are compiled to calls to `React.createElement`.
While it's certainly possible to provide an alternative implementation of the
`React` variable in a given scope, it would be nice if the language were a bit
more neutral. One idea would be to call `JSX.createElement` instead if a `JSX`
variable is in scope at the site of a JSX expression, or perhaps allow the
create function to be specified via an option. Or maybe there's a better idea
I haven't thought of. I'd prefer the `JSX` rule so it's consistent and we
don't have to extend Atom's basic pragma system to support this option on
every file.
Would your team be open to something like this?