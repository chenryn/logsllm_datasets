对于向 IdM Web UI 进行身份验证，不需要此流程。向 IdM Web UI
进行身份验证涉及两个主机，它们都不必是 IdM 客户端：
::: itemizedlist
-   机器可能位于运行浏览器的 IdM 域之外
-   运行 `httpd`{.literal} 的 IdM 服务器
:::
以下流程假设您在 IdM 客户端，而不是 IdM
服务器上配置智能卡身份验证。因此，您需要两台计算机：生成配置脚本的 IdM
服务器，以及运行脚本的 IdM 客户端。
::: itemizedlist
**先决条件**
-   为智能卡验证配置了您的 IdM 服务器，如 [为智能卡验证配置 IdM
    服务器](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#conf-idm-server-for-smart-card-auth_configuring-idm-for-smart-card-auth){.link}
    所述。
-   有对 IdM 服务器和 IdM 客户端的 root 访问权限。
-   您可以访问 root CA 证书和任何子 CA 证书。
-   已使用 `--mkhomedir`{.literal} 选项安装了 IdM
    客户端，以确保远程用户可以成功登录。如果您没有创建主目录，则默认登录位置为
    root。
:::
::: orderedlist
**步骤**
1.  在 IdM 服务器上，使用管理员权限通过 `ipa-advise`{.literal}
    生成配置脚本：
    ``` literallayout
    [root@server SmartCard]# kinit admin
    [root@server SmartCard]# ipa-advise config-client-for-smart-card-auth > config-client-for-smart-card-auth.sh
    ```
    `config-client-for-smart-card-auth.sh`{.literal} 脚本执行以下操作：
    ::: itemizedlist
    -   它配置智能卡守护进程。
    -   它设置系统范围信任存储。
    -   它将系统安全服务守护进程(SSSD)配置为允许智能卡登录到桌面。
    :::
2.  从 IdM 服务器中，将脚本复制到 IdM 客户端机器中选择的目录中：
    ``` literallayout
    [root@server SmartCard]# scp config-client-for-smart-card-auth.sh PI:EMAIL:/root/SmartCard/
    Password:
    config-client-for-smart-card-auth.sh        100%   2419       3.5MB/s   00:00
    ```
3.  为了方便起见，将 IdM 服务器上的 PEM 格式的 CA 证书文件复制到 IdM
    客户端机器上与在上一步中所使用的相同的目录中：
    ``` literallayout
    [root@server SmartCard]# scp {smartcard_ca.pem,ca.crt} PI:EMAIL:/root/SmartCard/
    Password:
    smartcard_ca.pem                    100%   1237     9.6KB/s   00:00
    ca.crt                              100%   2514    19.6KB/s   00:00
    ```
4.  在客户端机器上执行脚本，将包含 CA 证书的 PEM 文件添加为参数：
    ``` literallayout
    [root@client SmartCard]# kinit admin
    [root@client SmartCard]# chmod +x config-client-for-smart-card-auth.sh
    [root@client SmartCard]# ./config-client-for-smart-card-auth.sh smartcard_ca.pem ca.crt
    Ticket cache:KEYRING:persistent:0:0
    Default principal: PI:EMAIL
    [...]
    Systemwide CA database updated.
    The ipa-certupdate command was successful
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在任何子 CA 证书前，确保将根 CA 的证书添加为参数，并且 CA 或子 CA
    证书还没有过期。
    :::
:::
现在为智能卡验证配置了客户端。
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_managing-smart-card-authentication.html#proc-add-cert-idm-user-webui_configuring-idm-for-smart-card-auth}在 IdM Web UI 的用户条目中添加证书 {.title}
:::
这个步骤描述了如何在 IdM Web UI 的用户条目中添加外部证书。
也可以将证书映射数据上传到 IdM
中的用户条目，而不必上传整个证书。包含完整证书或证书映射数据的用户条目可以和相应的证书映射规则一起使用，以便于系统管理员配置智能卡身份验证。详情请查看用于
[在智能卡上配置身份验证的证书映射规则](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/con-idm-certmapdata_managing-smart-card-authentication){.link}。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果用户的证书已由 IdM
证书颁发机构发布，且证书已存储在用户条目中，则您可以跳过本节。
:::
::: itemizedlist
**先决条件**
-   您有要添加到用户条目的证书。
:::
::: orderedlist
**流程**
1.  如果要给另一个用户添加证书，请以管理员身份登录到 IdM Web
    UI。要在您自己的配置文件中添加证书，您不需要管理员的凭证。
2.  导航到 `Users`{.literal} → `Active users`{.literal} →
    `sc_user`{.literal}。
3.  找到 `Certificate`{.literal} 选项，并单击 `Add`{.literal} 。
4.  在 `命令行界面`{.literal} 中，使用 `cat`{.literal}
    工具或文本编辑器以 `PEM`{.literal} 格式显示证书：
    ``` literallayout
    [user@client SmartCard]$ cat testuser.crt
    ```
5.  将证书从 CLI 复制并粘贴到 Web UI 中打开的窗口中。
6.  点击 `Add`{.literal}。
    ::: figure
    []{#configuring-idm-for-smart-card-auth_managing-smart-card-authentication.html#configuring-idm-for-smart-card-auth-new-certmaprule-add}
    **图 1.1. 在 IdM Web UI 中添加新证书**
    ::: figure-contents
    ::: mediaobject
    ![\"新证书\"弹出窗口屏幕截图，其中有一个用于 PEM 格式的 base64
    证书的大字段。右下角的\"Add\"按钮高亮显示。](images/idm-add-cert.png)
    :::
    :::
    :::
:::
`sc_user`{.literal} 条目现在包含一个外部证书。
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_managing-smart-card-authentication.html#proc-add-cert-idm-user-cli_configuring-idm-for-smart-card-auth}在 IdM CLI 中向用户条目中添加证书 {.title}
:::
这个步骤描述了如何在 IdM CLI 的用户条目中添加外部证书。
也可以将证书映射数据上传到 IdM
中的用户条目，而不必上传整个证书。包含完整证书或证书映射数据的用户条目可以和相应的证书映射规则一起使用，以便于系统管理员配置智能卡身份验证。详情请查看用于
[在智能卡上配置身份验证的证书映射规则](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/con-idm-certmapdata_managing-smart-card-authentication){.link}。
::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
### 注意 {.title}
如果用户的证书已由 IdM
证书颁发机构发布，且证书已存储在用户条目中，则您可以跳过本节。
:::
::: itemizedlist
**先决条件**
-   您有要添加到用户条目的证书。
:::
::: orderedlist
**流程**
1.  如果要给另一个用户添加证书，请以管理员身份登录到 IdM CLI：
    ``` literallayout
    [user@client SmartCard]$ kinit admin
    ```
    要在您自己的配置文件中添加证书，您不需要管理员的凭证：
    ``` literallayout
    [user@client SmartCard]$ kinit sc_user
    ```
2.  创建一个包含证书的环境变量，该变量移除了标头和页脚，并串联成一行，这是
    `ipa user-add-cert`{.literal} 命令期望的格式：
    ``` literallayout
    [user@client SmartCard]$ export CERT=`openssl x509 -outform der -in testuser.crt | base64 -w0 -`
    ```
    请注意，`testuser.crt`{.literal} 文件中的证书必须是 `PEM`{.literal}
    格式。
3.  使用 `ipa user-add-cert`{.literal} 命令将证书添加到 sc_user
    的配置文件：
    ``` literallayout
    [user@client SmartCard]$ ipa user-add-cert sc_user --certificate=$CERT
    ```
:::
`sc_user`{.literal} 条目现在包含一个外部证书。
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_managing-smart-card-authentication.html#installing-tools-for-managing-and-using-smart-cards_configuring-idm-for-smart-card-auth}安装用来管理和使用智能卡的工具 {.title}
:::
要配置智能卡，您需要一些工具来生成证书并将其保存在智能卡中。
您必须：
::: itemizedlist
-   安装 `gnutls-utils`{.literal} 软件包，其帮助您管理证书。
-   安装 `opensc`{.literal} 软件包，它提供一组用于智能卡的库和工具。
-   启动与智能卡读卡器通信的 `pcscd`{.literal} 服务。
:::
::: orderedlist
**步骤**
1.  安装 `opensc`{.literal} 和 `gnutls-utils`{.literal} 软件包：
    ``` literallayout
    # dnf -y install opensc gnutls-utils
    ```
2.  启动 `pcscd`{.literal} 服务。
    ``` literallayout
    # systemctl start pcscd
    ```
:::
验证 `pcscd`{.literal} 服务是否已启动并运行。
:::
::: section
::: titlepage
# []{#configuring-idm-for-smart-card-auth_managing-smart-card-authentication.html#storing-a-certificate-on-the-smart-card_configuring-idm-for-smart-card-auth}在智能卡中存储证书 {.title}
:::
本节描述了使用 `pkcs15-init`{.literal}
工具配置智能卡，该工具可帮助您配置：
::: itemizedlist
-   擦除智能卡
-   设置新的 PIN 和可选的 PIN Unblocking Keys（PUKs）
-   在智能卡上创建新插槽
-   在插槽存储证书、私钥和公钥
-   锁定智能卡设置（有些智能卡需要这种类型）
:::
::: itemizedlist
**先决条件**
-   已安装 `opensc`{.literal} 软件包，其包含 `pkcs15-init`{.literal}
    工具。
    详情请查看[安装用于管理和使用智能卡的工具](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/managing_smart_card_authentication/configuring-idm-for-smart-card-auth_managing-smart-card-authentication#installing-tools-for-managing-and-using-smart-cards_configuring-idm-for-smart-card-auth){.link}。
-   该卡插入读卡器并连接到计算机。
-   您有可保存在智能卡中的私钥、公钥和证书。在此流程中，`testuser.key`{.literal}、`testuserpublic.key`{.literal}
    和 `testuser.crt`{.literal} 是用于私钥、公钥和证书的名称。
-   您当前的智能卡用户 PIN 和 Security Officer PIN（SO-PIN）
:::
::: orderedlist
**流程**
1.  擦除智能卡并使用您的 PIN 验证自己：
    ``` literallayout
    $ pkcs15-init --erase-card --use-default-transport-keys
    Using reader with a card: Reader name
    PIN [Security Officer PIN] required.
    Please enter PIN [Security Officer PIN]:
    ```
    这个卡已经被清除。
2.  初始化智能卡，设置您的用户 PIN 和 PUK，以及您的安全响应 PIN 和 PUK：
    ``` literallayout
    $ pkcs15-init --create-pkcs15 --use-default-transport-keys \
        --pin 963214 --puk 321478 --so-pin 65498714 --so-puk 784123
    Using reader with a card: Reader name
    ```
    `pcks15-init`{.literal} 工具在智能卡上创建一个新插槽。
3.  为插槽设置标签和验证 ID：
    ``` literallayout
    $ pkcs15-init --store-pin --label testuser \
        --auth-id 01 --so-pin 65498714 --pin 963214 --puk 321478
    Using reader with a card: Reader name
    ```
    标签设置为人类可读的值，在本例中为
    `testuser`{.literal}。`auth-id`{.literal}
    必须是两个十六进制值，在本例中设为 `01`{.literal}。
4.  在智能卡的新插槽中存储并标记私钥：
    ``` literallayout
    $ pkcs15-init --store-private-key testuser.key --label testuser_key \
        --auth-id 01 --id 01 --pin 963214
    Using reader with a card: Reader name
    ```
    ::: {.note style="margin-left: 0.5in; margin-right: 0.5in;"}
    ### 注意 {.title}
    在存储私钥和证书时，您为 `--id`{.literal}
    指定的值必须相同。如果没有为 `--id`{.literal}
    指定值，工具会计算一个更复杂的值，因此更容易定义您自己的值。
    :::
5.  在智能卡上的新插槽中存储并标记该证书：
    ``` literallayout
    $ pkcs15-init --store-certificate testuser.crt --label testuser_crt \
        --auth-id 01 --id 01 --format pem --pin 963214
    Using reader with a card: Reader name
    ```