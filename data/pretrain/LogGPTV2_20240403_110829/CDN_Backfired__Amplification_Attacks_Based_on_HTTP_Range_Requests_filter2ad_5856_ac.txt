the
like “Range: bytes=ﬁrst-last”. But
ﬁle size of the target resource is larger than 8MB and
[ﬁrst,last]⊂[8388608,16777215], Azure will adopt
the Ex-
pansion policy to replace the Range header with “Range:
bytes=8388608-16777215” and then forward the new request
to the origin server. In this case, there will be two cdn-origin
connections, and if the HTTP payload transferred in the ﬁrst
cdn-origin connection is over 8MB, Azure will close this
connection immediately. Considering network latency, actual
response trafﬁc in the ﬁrst connection will be a little larger
than 8MB. As a result, if the target resource exceeds 16MB,
the response trafﬁc in the two cdn-origin connections will be
both approximately 8MB.
RANGE FORWARDING BEHAVIORS VULNERABLE TO SBR ATTACK
TABLE I
CDN
Akamai
Alibaba Cloud
Azure
CDN77
CDNsun
Cloudﬂare
CloudFront
Fastly
G-Core Labs
Vulnerable Range Format
Forwarded Range Format
bytes=ﬁrst-last
bytes=-sufﬁx
bytes=-sufﬁx
bytes=ﬁrst-last (F≤8MB)
bytes=8388608-8388608 (F>8MB)
bytes=ﬁrst-last (ﬁrst8MB)
bytes=0-0
bytes=0-0
Cloudﬂare
bytes=0-0
CloudFront
bytes=0-0,9437184-9437184
Fastly
bytes=0-0
G-Core Labs
bytes=0-0
Huawei Cloud
bytes=-1 (F<10MB)
bytes=0-0 (F≥10MB)
KeyCDN
bytes=0-0 & bytes=0-0
StackPath
bytes=0-0
Tencent Cloud
bytes=0-0
Note: F is the ﬁle size of the target resource.
1MB
1707
1056
1401
1612
1578
1282
1356
1286
1763
1465
724
1297
1308
Ampliﬁcation Factor
10MB
16991
10498
15016
15915
15705
12791
9214
12836
17197
14631
7117
13007
12997
25MB
43093
26241
23481
40390
38730
31836
9281
31820
43330
36335
17744
32491
32438
As illustrated in Fig 6a-6c, response trafﬁc in client-cdn
connection is no more than 1500 bytes, while the ampliﬁcation
factor is basically proportional to the target resource size for
each CDN. When the target resource size is ﬁxed, the response
trafﬁc from the server to different CDNs is almost the same.
But due to the great difference resulted from different response
headers inserted by CDNs, the slope of the ampliﬁcation factor
varying with the target resource size is quite different. For
instance, Akamai and G-Core Labs insert fewer headers to
the response, causing their ampliﬁcation factors to be larger
than other CDNs. There are three exceptions. The ﬁrst one is
Azure. The response trafﬁc from the server to Azure is up to
about 16MB with the exploited Range case. When the target
resource exceeds 16MB, the ampliﬁcation factor of Azure
will stay unchanged(Fig 6a). The second one is CloudFront.
Similar to Azure, when the target resource exceeds 10MB, the
ampliﬁcation factor of CloudFront no longer increases(Fig 6a).
The last one is KeyCDN. We need to send range requests twice
each time to make a trafﬁc ampliﬁcation. Therefore, KeyCDN
generates the largest response trafﬁc(Fig 6b).
Take CloudFront as an example, when the target resource
is 1MB, the ampliﬁcation factor is 1356; and when the target
resource exceeds 10MB, the ampliﬁcation factor is about 9200.
Take Akamai as another example, when the target resource is
Authorized licensed use limited to: Tsinghua University. Downloaded on March 19,2021 at 11:32:57 UTC from IEEE Xplore.  Restrictions apply. 
vulnerable to the OBR attack, listed in column 1-2 of Table V.
To ﬁnd the max ampliﬁcation factor, we conduct the third
experiment.
In our third experiment, the test cases of multiple byte
ranges, listed in the third column of Table V, are generated
based on Table II and Table III. They tend to make the
BCDN return as much trafﬁc as possible. For convenience, we
recognize the number of overlapping ranges as n. As described
in Section IV-C, the bigger n, the larger the ampliﬁcation
factor.
While n is limited by the CDN’s constraints on the request
header size. Some CDNs even precisely restrict the number of
ranges in a multi-range request. We tested the default request
header size limits of related CDNs. Akamai limits the total
size of all request headers to 32KB, and StackPath limits it
to about 81KB. Both CDN77 and CDNsun limit the size of a
single request header to 16 KB. And Cloudﬂare’s constraints
on the Range header can be summarized as RL + 2HHL +
RHL ≤ 32411B, where RL is the size of the request line,
HHL is the size of the Host header, and RHL is the size of
the Range header. Only Azure limits the number of ranges in
the Range header to 64. According to these results, we get
the max n, as shown in the 4th column of Table V.
We use the max n to explore the max ampliﬁcation factor
of the OBR attack. To minimize or avoid real impacts on
the performance of the corresponding vulnerable CDNs, our
target resource size is limited to be just 1KB. Moreover, we
set up a proxy between the FCDN and the BCDN to collect
trafﬁc transferred between them. To achieve this, we conﬁgure
the FCDN’s origin server as our proxy server and set the
proxy server to forward requests to the BCDN. Eventually,
we capture all response trafﬁc transmitted over the bcdn-origin
connection and the fcdn-bcdn connection, and calculated am-
pliﬁcation factors, listed in column 5-7 of Table V.
(a) Ampliﬁcation factors
(b) Response trafﬁc from the CDN to the client
As illustrated in Table V, response trafﬁc in the bcdn-origin
connection is no more than 2000 bytes, but the one in the fcdn-
bcdn connection is much larger. For example, when abusing
CDN77 as the FCDN and Azure as the BCDN, the max